.******************************************************************************
.* System   : Patient Management System                                       *
.* Program  : IBAWEB26                                                        *
.* Desc     : Generating a Lodgement of Advice PCIW                           *
.******************************************************************************
.* Date     :  24/05/2021                                                     *
.* Author   :  Peter Vela                                                     *
.* Mods     :                                                                 *
.*             V11.04.01 11/04/2024  J.Tan         TSK 0941662                *
.*                       Mod PRDTGSTM - GST of Total amt(Item amt x Quantity) *
.*             V11.02.02 09/03/2022 Jacob Jackson TSK 0910800                 *
.*                       Left-align cash values and remove postcode space     *
.*             V11.02.01 24/02/2022 Jacob Jackson TSK 0910800                 * 
.*                       Edit layout and fix labels                           *
.*             V11.01.07 14/01/2022 Peter Vela TSK 0906538                    *
.*                       Changed "Stored For Later Transmission" to           *
.*                       "Referred to Services Australia"                     *
.*                       Fixed Claim Ref Number format                        *
.*             V11.01.06 08/12/2021 Peter Vela TSK 0906538                    *
.*                       Added field quantity back in                         *
.*             V11.01.05 01/12/2021 Peter Vela TSK 0906538                    *
.*                       Fixed spacing in end statement                       *
.*             V11.01.04 18/11/2021 Peter Vela TSK 0906538                    *
.*                       Changed layout for NOI certification                 *
.*             V11.01.03 16/09/2021 Peter Vela TSK 0906538                    *
.*                       Added Service Time and Facility Id                   *
.*             V11.01.02 10/09/2021 Peter Vela TSK 0906538                    *
.*                       Fixed validation in CCLM0000                         *
.*                       Added no of services to item detail line             *
.*             V11.01.01 24/05/2021 Peter Vela TSK 0906538                    *
.*                       Created PCIW Lodgement For Advice                    *
.*                       (copied from IBAADT26)                               *
.******************************************************************************
.
          INC       STD001FD
          INC       PATCONFD/INC
.
          INC       WEBB2BFD/INC           * WebServices Device file
          INC       PATHSPFD/INC           * Hospital file
          INC       PRIHDBFD/INC           * Private practice Header file
          INC       PRIHREFD/INC           * Private practice referral file
          INC       PRIDTRFD/INC           * Private practice transaction file
          INC       PRIPRAFD/INC           * Medical practice file
          INC       PRIINVFD/INC           * PP Invoice file
          INC       AAEDTRFD/INC           * ED Debtor transactioc file
          INC       EMRSITFD/INC           * Emergency site file
          INC       EMRVISFD/INC           * Emergency visit file
          INC       PATINVFD/INC           * Emergency Invoice file
          INC       PMSCLTFD/INC           * Claimant details
          INC       PMSHCPFD/INC           * HCP file 
          INC       RCPDTEFD/INC           * Receipt details file
.
          INC       WEBPCIFD/INC           * WebServices PCIW transactions
          INC       PATCODFD/INC           * patient codes file
          INC       PATMA1FD/INC           * patient master file
          INC       PATMI1FD/INC           * admissions file
          INC       PATVISFD/INC           * visit file
          INC       PMSPX2FD/INC
          INC       PMSVX1FD/INC           * visit extention file
.
          INC       IBACONFD/INC
+
.**********************************************************************
.*                       GLOBAL VARIABLES                             *
.**********************************************************************
.
DIM3      DIM       3
DISPOPTN  DIM       20
DOPT1     INIT      "Emergency          "
DOPT2     INIT      "Private Practice   "
DIM2A     DIM       2
DIM10     DIM       10
DIM40     DIM       40
SHADDR35  DIM       35
ADDRPOST  DIM       44
STRINVON  DIM       8
STRTOTFE  DIM       15
STTOPAID  DIM       15
STRPATPO  DIM       15
STRI12P2  DIM       15
DPAMOUNT  FORM      12.2
DEPOAMNT  FORM      12.2
UNIQNUMB  FORM      8
FORM12    FORM      12
FORM12P2  FORM      12.2
FULLPAID  FORM      1
.
INVOICEN  FORM      8
PTFRMTNM  DIM       40
PATPOR    FORM      12.2
TOTFEE    FORM      12.2
TPPAID    FORM      12.2
.
PRGID     INIT      "IBAWEB26"
PRGNAM    INIT      "Generating a PCIW Lodgement of Advice"
VERSION   INIT      "V12.00.00"
+
.**********************************************************************
.*                           MAINLINE                                 *
.**********************************************************************
.
ML0000    CALL      INIT0000               * initialization and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    COPTION,ML2000,ML2000
          GOTO      ML9999                 * Exit selected
.
ML2000    CALL      KINV0000               * input Invoice number
          BRANCH    EXIT,ML9999 
.
          CALL      RPAT0000               * Read patient data
          BRANCH    EXIT,ML9999
.
          BRANCH    COPTION,ML2100,ML2100
.
ML2100    CALL      PLOD0000               * Print Lodgement Advice
          GOTO      ML9999
.
ML9999    CHAIN     PGM                    * chain back to program
+
.**********************************************************************
.*                             INIT0000                               *
.*                      Initialization  Routine                       *
.**********************************************************************
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"pathspaf";
          OPEN      PATHSPA1,"pathspaf"
.
          DISPLAY   *P64:24,"webb2baf";
          OPEN      WEBB2BA2,"webb2baf"
.
          DISPLAY   *P64:24,"prihreff";
          OPEN      PRIHREF1,"prihreff"
.
          DISPLAY   *P64:24,"pridtraf";
          OPEN      PRIDTRA4,"pridtraf"
.
          DISPLAY   *P64:24,"pripracf";
          OPEN      PRIPRAC1,"pripracf"
.
          DISPLAY   *P64:24,"prihdbtf";
          OPEN      PRIHDBT2,"prihdbtf"
.
          DISPLAY   *P64:24,"webpciaf";
          OPEN      WEBPCIA2,"webpciaf"
.
          DISPLAY   *P64:24,"aaedtref";
          OPEN      AAEDTRE4,"aaedtref"
.
          DISPLAY   *P64:24,"emrsitaf";
          OPEN      EMRSITA1,"emrsitaf"
.
          DISPLAY   *P64:24,"emrvisaf";
          OPEN      EMRVISA1,"emrvisaf"
.
          DISPLAY   *P64:24,"priinvof";
          OPEN      PRIINVO1,"priinvof"
.
          DISPLAY   *P64:24,"pmscltaf";
          OPEN      PMSCLTA1,"pmscltaf"
.
          DISPLAY   *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
.
          DISPLAY   *P64:24,"rcpdteaf";
          OPEN      RCPDTEA3,"rcpdteaf"
.
          DISPLAY   *P64:24,"patinvrf";
          OPEN      PATINVR1,"patinvrf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA1,"patvisaf"
.
          DISPLAY   *P64:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          READ      CONTROLF,TEN;*79,CAPPRVNO
          READ      CONTROLF,TEN3;*1,CHADD1,CHADD2,CHPOST
          READ      CONTROLF,HUND14;*145,PTCNCLID
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000                                  *
.*                        get user options or exit                          *
.****************************************************************************
OPTN0000  HLINE     *G37,2,57,80
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Emergency":
                    *P1:6,*V2LON,TWO,*HOFF," = Private Practice"
.
OPTN1000  KEYIN     *P1:8,"Select Option : ",*EL:
                    *P17:8,*DV,UNDLN2:
                    *P17:8,*V2LON,COPTION:
                    *P17:8,*DV,COPTION
.
.         Validate selection
.
          BRANCH    COPTION,OPTN8000,OPTN8000
.
          COMPARE   ZERO,COPTION
          GOTO      OPTN9999 IF EQUAL              * exit      
.
          BEEP
          GOTO      OPTN1000
.
OPTN8000  LOAD      DISPOPTN,COPTION,DOPT1,DOPT2
          DISPLAY   *P56:2,*V2LON,"- ",DISPOPTN
.
OPTN9999  RETURN
+
.**********************************************************************
.*                           KINV0000                                 *
.*                      Input Invoice number                          *
.**********************************************************************
KINV0000  
          DISPLAY   *P1:14,*EF,"Invoice Number: ";
.
          KEYIN     *P18:14,*EL,*DV,UNDLN8:
                    *P18:14,*V2LON,INVOICEN
.
          COMPARE   ZERO,INVOICEN              * was anything input ?
          GOTO      KINV9000 IF EQUAL        * no.
.
          DISPLAY   *P18:14,*V2LON,INVOICEN
.
          MOVE      INVOICEN,KEY8
          BRANCH    COPTION,KINV1000,KINV2000
          GOTO      KINV9999
.
KINV1000  CALL      RDINV1
          BRANCH    OVRCD,KINV9100
.
          COMPARE   ONE,PINVSYS
          GOTO      KINV9100 IF NOT EQUAL     * Not an emergency invoice
.
          GOTO      KINV8000
.
KINV2000  CALL      RDPRIN1
          BRANCH    OVRCD,KINV9100
.
KINV8000  MOVE      ZERO,EXIT
          GOTO      KINV9999
.
KINV9000  MOVE      ONE,EXIT
          GOTO      KINV9999
.
KINV9100  DISPLAY   *P1:24,*EL,*B,"Invalid Invoice number. ";
          CALL      HITENTER
          GOTO      KINV0000
.
KINV9999  RETURN
+
.**********************************************************************
.         Read patient data
.**********************************************************************
RPAT0000  
          BRANCH    COPTION,RPAT4000         * Emergency
.
          MOVE      "2",PMCLWMOD             * Private Practice
          PACK      KEY9,PMCLWMOD,KEY8
          CALL      RDPMCLT1
          IF        OVRCD=1
            CALL      CLPMSCLT               * Clear fields
          ENDIF
.
.         Private Practice
.
          PACK      KEY6,PRINPRAC
          CALL      RDPRPR1
          BRANCH    OVRCD,RPAT9000           * Invalid Medical practice
.
          MOVE      PRINUNIQ,KEY8
          CALL      RDPRHD2
          BRANCH    OVRCD,RPAT9000
.
.         Get Patient indicator from pridtraf file, so we can read prihreaf file
.
          PACK      KEY22,PRINNUMB,SP70
          CALL      RSPRDT4
          CALL      RKPRDT4
          BRANCH    OVRCD,RPAT9000
.
          MATCH     PRINNUMB,PRDTINVN          * Same invoice number ?
          GOTO      RPAT9000 IF NOT EQUAL
.
          PACK      KEY27,PRDTUNIQ,PRDTPRAC,PRDTDOCT,PRDTCODE,SP70
          CALL      RDPRHR1
          BRANCH    OVRCD,RPAT9000
.
          MOVE      PRHDDEBT,KEY8            * U/R number
          GOTO      RPAT6000
.
.         Emergency
.
RPAT4000  MOVE      "1",PMCLWMOD             * Emergency
          PACK      KEY9,PMCLWMOD,KEY8
          CALL      RDPMCLT1
          IF        OVRCD=1
            CALL      CLPMSCLT               * Clear fields
          ENDIF
.
          MOVE      PINVADM,KEY8
          CALL      RDVISA1                  * valid visit record ?
          BRANCH    OVRCD,RPAT9000           * no.
.
          PACK      KEY8,PVIBILL,SP70
          CALL      RDEMVIS1                 * emr visit
          BRANCH    OVRCD,RPAT9000
.
          MOVE      PVIURNO,KEY8               * key to master file
.
RPAT6000  CALL      RDMAST1                  * get the PMI details
          BRANCH    OVRCD,RPAT9000
.
          MOVE      PURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,RPAT9000
.
RPAT8000  MOVE      ZERO,EXIT                * we have a valid patient
          GOTO      RPAT9999
.
RPAT9000  MOVE      ONE,EXIT                 * nothing input
RPAT9999  RETURN
+
.**********************************************************************
.         Print Lodgement Advice heading
.**********************************************************************
PHED0000  PRINT    *F,*120," "
          MOVE     ONE,CLNO
.
          COMPARE  ZERO,CPAGENO
          GOTO     PHED9999 IF NOT EQUAL     * Multiple pages
.
          ADD      ONE,CPAGENO
          PRINT    *N,*46,"LODGEMENT ADVICE":
                   *N,*29,"Electronic Claim for assessment by Services Australia"
          ADD      THREE,CLNO
.
          PRINT    *N,*25,"THIS FORM CANNOT BE USED TO MAKE A CLAIM FOR MEDICARE PAYMENTS.":
                   *N,*24,"THIS CLAIM HAS ALREADY BEEN SUBMITTED TO MEDICARE ON YOUR BEHALF."
          PRINT     *N
          PRINT     *N
          ADD       FIVE,CLNO
.
          PRINT     *8,"Location ID:":
                    *23,PTCNCLID;
.
          CALL      CCLM0000              * Check if Invoice claimed
          PRINT     *63,"Claim Reference:":
                    *82,KEY22
          ADD       ONE,CLNO
.
          CALL      GLOC0000              * Get Servicing location details
.
          PRINT     *60,"Servicing Location:":
                    *82,PTHSNAME
          ADD       ONE,CLNO
.
          PRINT     *82,PTHSADD1
          ADD       ONE,CLNO
.
          PRINT     *82,PTHSADD2
          ADD       ONE,CLNO
.
          MATCH     SP70,PTHSADD3
          IF        !@EQUAL
            PRINT     *82,PTHSADD3
            ADD       ONE,CLNO
          ENDIF
.
          PRINT     *82,KEY40            * address line 4 and postcode
          ADD       ONE,CLNO
.
          PRINT     *N     
          PRINT     *4,"Patient Details":
                    *62,"Claimant Details"
          ADD       ONE,CLNO
.
          PRINT     *3,"Medicare Card No:":
                      *23,PMEDI:
                      *62,"Medicare Card No:":
                      *82,PMCLMCNO
          ADD       ONE,CLNO
.
          PRINT     *16,"IRN:":
                    *23,PTMXMCCD:
                    *75,"IRN:":
                    *82,PMCLCMRF
          ADD       ONE,CLNO
.
          MOVE      PTITL,PACTITLE              * format pt. name
          MOVE      PGNAME,PACGNAME
          MOVE      PSNAME,PACSNAME
          MOVE      ONE,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,PTFRMTNM
.
          PRINT     *7,"First Name & ":
                    *66,"First Name & "
.
          MOVE      SP70,PACTITLE              * format claimant name
          MOVE      PMCLGNAM,PACGNAME
          MOVE      PMCLSNAM,PACSNAME
          MOVE      ONe,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,PTFRMTNM
.
          ADD       ONE,CLNO
          PRINT     *12,"Surname:":
                    *23,PTFRMTNM:
                    *71,"Surname:":
                    *82,PTFRMTNM
.
          UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY      * DOB
          CALL      PACDATE
.
          PRINT     *6,"Date of Birth:":
                    *23,CPCDATE;
.
          UNPACK    PMCLCDOB,CCENT,CYEAR,CMON,CDAY      * Claimant DOB
          CALL      PACDATE
          PRINT     *65,"Date of Birth:":
                    *82,CPCDATE
          ADD       ONE,CLNO
.
          PRINT     *66,"Telephone No:"
          ADD       ONE,CLNO
.
          PRINT     *71,"Address:":
                    *82,PMCLADD1
          ADD       ONE,CLNO
.
          PRINT     *82,PMCLADD2
          ADD       ONE,CLNO
.
          MATCH     SP70,PMCLADD4
          IF        @EQUAL
            MOVE      PMCLADD3,SHADDR35
            SQUEEZE   SHADDR35
            PACK      ADDRPOST,SHADDR35,SP3,PMCLPOST
          ELSE
            PRINT     *82,PMCLADD3
            ADD       ONE,CLNO
            MOVE      PMCLADD4,SHADDR35
            SQUEEZE   SHADDR35
            PACK      ADDRPOST,SHADDR35,SP3,PMCLPOST
          ENDIF
          PRINT     *82,ADDRPOST
          ADD       ONE,CLNO
.
          PRINT     *N
          PRINT     *N
          PRINT     *1,"This claim has been: REFERRED TO SERVICES AUSTRALIA"
          PRINT     *N
          ADD       THREE,CLNO
.
PHED9999  RETURN
+
.**********************************************************************
.         Print Lodgement Advice for Private practice/Ed
.**********************************************************************
PLOD0000  MOVE      ZERO,CPAGENO
          CALL      PHED0000               * print heading
.
          IF        COPTION=1
            PACK      KEY10,EMVIDOCT,SP70
            CALL      GHCP0000             * Service doctor
            PACK      DIM40,KEY40,SP70
            PACK      DIM10,PMHCPRV1,SP70  * provider no for service doctor
.
            UNPACK    SP70,KEY40,PMHCPRV1  * Blank EMR Payee provider
            MATCH     SP70,EMVISITE
            IF        !@EQUAL
              PACK      KEY3,EMVISITE
              CALL      RDEMSIT1
              IF        OVRCD=0
                PACK      PMHCPRV1,EMSTPPRV * Payee provider (from emrsitaf)
              ENDIF
            ENDIF
          ELSE
            PACK      KEY10,PRHRDOCT,SP70
            CALL      GHCP0000              * Service doctor
            PACK      DIM40,KEY40,SP70
            PACK      DIM10,PMHCPRV1,SP70   * provider no for service doctor
.
.           If primary doctor and service doctor are same, payee provider blank
.
            MATCH     PRHRDOCT,PRPRPDOC
            IF        !@EQUAL
              PACK      KEY10,PRPRPDOC,SP70
              CALL      GHCP0000              * Medical practice Primary doctor
            ELSE
              UNPACK    SP70,KEY40,PMHCPRV1
            ENDIF
          ENDIF
.
          PRINT     *4,"Servicing Provider ":
                    *64,"Payee Provider ":
                    *N,*18,"Name:":
                    *26,DIM40:
                    *74,"Name:":
                    *82,KEY40
          ADD       TWO,CLNO
.
          PRINT     *4,"Servicing Provider ":
                    *64,"Payee Provider ":
                    *N,*20,"No:":
                    *26,DIM10:
                    *76,"No:":
                    *82,PMHCPRV1
          ADD       ONE,CLNO
.
          IF        COPTION=1
            PACK      KEY10,EMVIREFD,SP70
            CALL      GHCP0000                           * Referring doctor
            UNPACK    EMVIREDT,CCENT,CYEAR,CMON,CDAY      * Referring date
            CALL      PACDATE
          ELSE
            PACK      KEY10,PRHRREFD,SP70
            CALL      GHCP0000                           * Referring doctor
            UNPACK    PRHRRDAT,CCENT,CYEAR,CMON,CDAY      * Referring date
            CALL      PACDATE
          ENDIF
.
          IF        IBCNMHOS = 1
            MOVE      PTHSAPPR,KEY8
          ELSE
            MOVE      CAPPRVNO,KEY8
          ENDIF
          MOVE      INVOICEN,STRINVON
          LJUSTIFY  STRINVON
.
          PRINT     *2,"Requesting/Referring":
                    *74,"ACRF:":
                    *82,STRINVON:
                    *N,*9,"Provider Name:":
                    *26,KEY40,*67,"Facility ID:",*82,KEY8
          ADD       TWO,CLNO
.
          PRINT     *2,"Requesting/Referring":
                    *N,*11,"Provider No:":
                    *26,PMHCPRV1
.
.         IF        IBCNMHOS = 1
.           MOVE      PTHSAPPR,KEY8
.         ELSE
.           MOVE      CAPPRVNO,KEY8
.         ENDIF
.
          PRINT     *6,"Date of Request/":
                    *N,*14,"Referral:":
                    *26,CPCDATE
          ADD       TWO,CLNO
.
          MOVE      SP70,KEY6
          MOVE      SP70,KEY15
          MOVE      "RF",KEY2
          IF        COPTION=1
            PACK      KEY5,KEY2,EMVIREFP         * period of referral
          ELSE
            PACK      KEY5,KEY2,PRHRRFPD         * period of referral
          ENDIF
          CALL      RDCODE1
          IF        OVRCD=0
            MATCH     "N",TCINDC1
            IF        @EQUAL
              IF        COPTION=1
                PACK      KEY6,EMVIREPM,SP70
              ELSE
                PACK      KEY6,PRHRRPER,SP70
              ENDIF
            ELSE
              MATCH     "I",TCINDC1
              IF        @EQUAL
                MOVE      "Indefinite     ",KEY15
                GOTO      PLOD2000
              ELSE
                PACK      KEY6,PTCDASC1,SP70
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,KEY6
          IF        !@EQUAL
            SQUEEZE   KEY6
            CLEAR     KEY15
            APPEND    KEY6,KEY15
            APPEND    " months",KEY15
            APPEND    SP70,KEY15
            RESET     KEY15
          ENDIF
.
PLOD2000  PRINT     *4,"Period of Referral:":
                    *26,KEY15
          ADD       ONE,CLNO
.
          CALL      ROVR0000             * Get Referral Override
.
          COMPARE   "55",CLNO
          CALL      PHED0000 IF NOT LESS
.
          PRINT     *N
          PRINT     *1,"Date of Service",*19,"Item No/FQty":
                       *37,"Description of Service":
                       *70,"Charge",*90,"Patient Contribution"
          ADD       THREE,CLNO
.UPTOHERE
          CALL      PRIT0000             * Print items
          CALL      TAIL0000             * Print tail
.
          GOTO      PLOD9999
.
PLOD9999  RETURN
+
.**********************************************************************
.         Get Referral Override
.**********************************************************************
ROVR0000  MOVE      SP70,TDESC
          BRANCH    COPTION,ROVR6000         * Emergency
.
          MATCH     SP70,PRHRROVR
          GOTO      ROVR9999 IF EQUAL        * blank Referral override
.
          MOVE      "ro",KEY2
          PACK      KEY5,KEY2,PRHRROVR       * Referral override
          CALL      RDCODE1
          BRANCH    OVRCD,ROVR9999
.
          MATCH     "N",THCSCOD
          GOTO      ROVR8000 IF EQUAL        * Not required
.
          MATCH     SP70,PRHRREFD
          GOTO      ROVR9999 IF NOT EQUAL    * if Ref.doctor exists,No Overwrite
.
          MATCH     "L",THCSCOD
          GOTO      ROVR8100 IF EQUAL        * Lost Referral
          MATCH     "E",THCSCOD
          GOTO      ROVR8200 IF EQUAL        * Emergency Referral
          MATCH     "H",THCSCOD
          GOTO      ROVR8300 IF EQUAL        * In-Hospital Referral
.
          GOTO      ROVR9999
.
.         Emergency
.
ROVR6000  MATCH     SP70,EMVIREFD
          GOTO      ROVR9999 IF NOT EQUAL   * if Ref.doctor exists, No Overwrite
.
          MATCH     SP70,EMVIUC21
          GOTO      ROVR9999 IF EQUAL       * blank Attendance source
.
          MOVE      "em",KEY2
          PACK      KEY5,KEY2,EMVIUC21   * Attendance source
          CALL      RDCODE1
          BRANCH    OVRCD,ROVR9999
.
          MATCH     "R",TCINDC4
          GOTO      ROVR9999 IF NOT EQUAL
.
          MOVE      "Emergency Referral",TDESC
          GOTO      ROVR9000
.
ROVR8000  MOVE      "Not Required",TDESC
          GOTO      ROVR9000
.
ROVR8100  MOVE      "Lost Referral",TDESC
          GOTO      ROVR9000
.
ROVR8200  MOVE      "Emergency Referral",TDESC
          GOTO      ROVR9000
.
ROVR8300  MOVE      "In-Hospital Referral",TDESC
          GOTO      ROVR9000
.
ROVR9000  PRINT     *1,"Referral Override:":
                    *26,TDESC
          ADD       ONE,CLNO
.
ROVR9999  RETURN
+
.**********************************************************************
.         Print items
.**********************************************************************
PRIT0000  MOVE      ZERO,TOTFEE                * total fee
          MOVE      ZERO,TPPAID                * total patient paid
          MOVE      ZERO,FULLPAID
.
          CALL      GDEP0000                   * Get deposits of this invoice
          MOVE      DEPOAMNT,DPAMOUNT
.
          BRANCH    COPTION,PRIT2000           * Emergency
.
          COMPARE   PRINITOT,DEPOAMNT
          IF        !@LESS
            MOVE      ONE,FULLPAID             * Fully paid
          ENDIF
.
.         Private practice items
.
          MOVE      INVOICEN,KEY8
          PACK      KEY22,KEY8,SP70
          CALL      RSPRDT4
PRIT1000  CALL      RKPRDT4
          BRANCH    OVRCD,PRIT9000
.
          MATCH     KEY8,PRDTINVN          * Same invoice number ?
          GOTO      PRIT9000 IF NOT EQUAL
.
          COMPARE   ONE,PRDTRTYP
          GOTO      PRIT1000 IF NOT EQUAL      * Not an Item record type
.
          UNPACK    PRDTSDAT,CCENT,CYEAR,CMON,CDAY      * DOB
          CALL      PACDATE
.
          MOVE      SP70,KEY1
          MATCH     "1",PRDTHOSI
          IF        @EQUAL
            MOVE      "*",KEY1                  * Hospital indicator
          ENDIF
.
          MOVE      SP70,KEY15
          MOVE      PRDTITMN,KEY15
          STRIP     KEY15
          ENDSET    KEY15
          APPEND    KEY1,KEY15
          APPEND    SP70,KEY15
          RESET     KEY15
.
          COMPARE   "55",CLNO
          CALL      PHED0000 IF NOT LESS
.
          PRINT     *1,CPCDATE,*19,KEY15:
                    *37,PRDTDESC;
.
          MOVE      PRDTAMNT,FORM12P2
          ADD       PRDTGSTM,FORM12P2
.
          MOVE      ZERO,PATPOR                 * Patient contribution
          COMPARE   ZERO,DPAMOUNT
          GOTO      PRIT1400 IF EQUAL           * No payment made
.
          COMPARE   DPAMOUNT,FORM12P2
          IF        @LESS
            ASSIGN    (DPAMOUNT-FORM12P2),DPAMOUNT
            MOVE      FORM12P2,PATPOR           * item full paid
          ELSE
            MOVE      DPAMOUNT,PATPOR           * item partially paid
            MOVE      ZERO,DPAMOUNT
          ENDIF
.
PRIT1400  MOVE      FORM12P2,STRI12P2
          MOVE      PATPOR,STRPATPO
          LJUSTIFY  STRI12P2
          LJUSTIFY  STRPATPO
          PRINT     *70,STRI12P2,*90,STRPATPO
          PRINT     *1,PRDTSTIM,*19,PRDTSERV
          ADD       TWO,CLNO
.
          ADD       FORM12P2,TOTFEE
          ADD       PATPOR,TPPAID 
.
          CALL      EXTD0000                    * Print extra details
          GOTO      PRIT1000
.
.         Emergency items
.
PRIT2000  COMPARE   PINVAMT,DEPOAMNT
          IF        !@LESS
            MOVE      ONE,FULLPAID             * Fully paid
          ENDIF
.
          MOVE      INVOICEN,KEY8
          PACK      KEY23,KEY8,SP70
          CALL      RDSDTRE4
PRIT2100  CALL      RDKDTRE4
          BRANCH    OVRCD,PRIT9000
.
          MATCH     KEY8,ATINVNO          * Same invoice number ?
          GOTO      PRIT9000 IF NOT EQUAL
.
          COMPARE   ONE,ATRECTYP          * Misc.item
          GOTO      PRIT2200 IF EQUAL
          COMPARE   FIVE,ATRECTYP         * Procedure
          GOTO      PRIT2100 IF NOT EQUAL      * Not an Item record type
.
PRIT2200  UNPACK    ATDDATE,CCENT,CYEAR,CMON,CDAY      * DOB
          CALL      PACDATE
.
          PRINT     *1,CPCDATE,*19,ATITEMNO:
                    *37,ATDDESC;
.
          MOVE      ATPATAMT,FORM12P2
          ADD       ATDTGSTM,FORM12P2
.
          MOVE      ZERO,PATPOR                 * Patient contribution
          COMPARE   ZERO,DPAMOUNT
          GOTO      PRIT2400 IF EQUAL           * No payment made
.
          COMPARE   DPAMOUNT,FORM12P2
          IF        @LESS
            ASSIGN    (DPAMOUNT-FORM12P2),DPAMOUNT
            MOVE      FORM12P2,PATPOR           * item full paid
          ELSE
            MOVE      DPAMOUNT,PATPOR           * item partially paid
            MOVE      ZERO,DPAMOUNT
          ENDIF
.
PRIT2400  MOVE      FORM12P2,STRI12P2
          MOVE      PATPOR,STRPATPO
          LJUSTIFY  STRI12P2
          LJUSTIFY  STRPATPO
          PRINT     *70,STRI12P2,*90,STRPATPO
          PRINT     *1,ATDTSVTM,*19,ATSERVS
          ADD       TWO,CLNO
.
          ADD       FORM12P2,TOTFEE
          ADD       PATPOR,TPPAID 
.
          CALL      EXTD0000                    * Print extra details
          GOTO      PRIT2100
.
.         Print totals
.
PRIT9000  MOVE      TPPAID,STTOPAID
          MOVE      TOTFEE,STRTOTFE
          LJUSTIFY  STTOPAID
          LJUSTIFY  STRTOTFE
          PRINT     *42,"Total:",*70,STRTOTFE,*90,STTOPAID
          ADD       ONE,CLNO
.
PRIT9999  RETURN
+
.**********************************************************************
.         Print Extra details
.**********************************************************************
EXTD0000  BRANCH    COPTION,EXTD2000           * Emergency
.
.         Private practice
.
          MOVE      SP70,TDESC
          MOVE      "Ro",KEY2
          MATCH     SP70,PRDTROVC              * Restrictive Override
          IF        !@EQUAL
            PACK       KEY5,KEY2,PRDTROVC
            CALL       RDCODE1
          ENDIF
          MATCH     SP70,TDESC
          IF        !@EQUAL
            PRINT     *40,"Restrictive Override: ",TDESC
            ADD       ONE,CLNO
          ENDIF
.
          UNPACK    PRDTSTXT,KEY80             * Service text
          MATCH     SP70,KEY80
          IF        !@EQUAL
            PRINT     *40,"Service Text: ",KEY80
            ADD       ONE,CLNO
          ENDIF
.
          MATCH     SP70,PRDTNMPT
          IF        !@EQUAL
            PRINT     *40,"Number Of Patient Seen: ",PRDTNMPT
            ADD       ONE,CLNO
          ENDIF
.
          MATCH     SP70,PRDTTDUR
          IF        !@EQUAL
            PRINT     *40,"Time Duration: ",PRDTTDUR
            ADD       ONE,CLNO
          ENDIF
.
          MATCH     SP70,PRDTLSPN
          IF        !@EQUAL
            PRINT     *40,"LSPN: ",PRDTLSPN
            ADD       ONE,CLNO
          ENDIF
.
          MATCH     "1",PRDTACOI               * After Care Override Indicator
          IF        @EQUAL
            PRINT     *40,"NNAC"
            ADD       ONE,CLNO
          ENDIF
.
          MATCH     "1",PRDTDSOV               * Duplicate Service override
          IF        @EQUAL
            PRINT     *40,"NDS"
            ADD       ONE,CLNO
          ENDIF
.
          MATCH     "1",PRDTMPOV               * Multiple Procedure Override
          IF        @EQUAL
            PRINT     *40,"MPO"
            ADD       ONE,CLNO
          ENDIF
.
          MATCH     SP70,PRDTSDCD
          IF        !@EQUAL
            PRINT     *40,"Self Deemed: ",PRDTSDCD
            ADD       ONE,CLNO
          ENDIF
.
          GOTO      EXTD9999
.
.         Emergency
.
EXTD2000  MOVE      SP70,TDESC
          MOVE      "Ro",KEY2
          MATCH     SP70,ATDTROVR              * Restrictive Override
          IF        !@EQUAL
            PACK       KEY5,KEY2,ATDTROVR
            CALL       RDCODE1
          ENDIF
          MATCH     SP70,TDESC
          IF        !@EQUAL
            PRINT     *40,"Restrictive Override: ",TDESC
            ADD       ONE,CLNO
          ENDIF
.
          MATCH     SP70,ATDTSTXT
          IF        !@EQUAL
            PRINT     *40,"Service Text: ",ATDTSTXT
            ADD       ONE,CLNO
          ENDIF
.
          MATCH     SP70,ATDTNMPT
          IF        !@EQUAL
            PRINT     *40,"Number Of Patient Seen: ",ATDTNMPT
            ADD       ONE,CLNO
          ENDIF
.
          MATCH     SP70,ATDTTDUR
          IF        !@EQUAL
            PRINT     *40,"Time Duration: ",ATDTTDUR
            ADD       ONE,CLNO
          ENDIF
.
          MATCH     SP70,ATDTLSPN
          IF        !@EQUAL
            PRINT     *40,"LSPN: ",ATDTLSPN
            ADD       ONE,CLNO
          ENDIF
.
          MATCH     "1",ATDTACOI               * After Care Override Indicator
          IF        @EQUAL
            PRINT     *40,"NNAC"
            ADD       ONE,CLNO
          ENDIF
.
          MATCH     "1",ATDTDSOV               * Duplicate Service override
          IF        @EQUAL
            PRINT     *40,"NDS"
            ADD       ONE,CLNO
          ENDIF
.
          MATCH     "1",ATDTMPOV               * Multiple Procedure Override
          IF        @EQUAL
            PRINT     *40,"MPO"
            ADD       ONE,CLNO
          ENDIF
.
          MOVE      SP70,THCSCOD
          MOVE      "Sd",KEY2
          MATCH     SP70,ATDTSDCD              * Self Deem Code
          IF        !@EQUAL
            PACK       KEY5,KEY2,ATDTSDCD
            CALL       RDCODE1
          ENDIF
          MATCH     SP70,THCSCOD
          IF        !@EQUAL
            PRINT     *40,"Self Deemed: ",THCSCOD
            ADD       ONE,CLNO
          ENDIF
.
EXTD9999  RETURN
+
.**********************************************************************
.         Print tail
.**********************************************************************
TAIL0000  MOVE      "No ",KEY3
          IF        FULLPAID=1
            MOVE      "Yes",KEY3
          ENDIF
          IF        CLNO>45
            CALL      PHED0000
          ENDIF
.
          PRINT     *N,*1,"Payment Details:":
                    *N,*1,". This account is fully paid: ",KEY3:
                    *N,*1,". The Medicare benefit will be paid:":
                    *N,*1," - To the account as displayed below or":
                    *N,*1," - If your bank account details are stored with ":
                           "Medicare your payment will be made by EFT, if ":
                           "not, your Medicare benefit will not":
                    *N,*4,"be paid. Once you have provided Medicare with your":
                          "bank account details, your payment will be ":
                          "released.":
                    *N,*1,". If required, correspondence regarding this ":
                           "claim will be directed to the: ";
.
          MATCH     SP70,PMCLADD1
          IF        @EQUAL
            PRINT       "ADDRESS HELD BY MEDICARE."
          ELSE
            PRINT       "ABOVE ADDRESS"
          ENDIF
.
          PRINT     *N,*1,"This includes, if applicable, any Pay Doctor via ":
                        "Claimant (PDVC) cheques for the service provider.":
                        " It is the responsibility of the ":
                    *N,*1,"claimant to forward the PDVC cheque to the ":
                        "service provider."
.
          IF        CLNO>45
            CALL      PHED0000
          ENDIF
.
          PRINT     *N:
                    *N,*56,"Claimant Declaration":
                    *N:
                    *1,"I have paid for or am liable to pay the expenses for ":
                       "these services and these services are not excluded ":
                       "under the ":
                       *ITALIC,"Health Insurance ":
                       *N,*1,"Act 1973",*HOFF:
                       " (i.e. are not for the purpose of life insurance, ":
                       "superannuation or provident account schemes, ":
                       "admission to a friendly":
                       *N,*1,"society, health screening, mass immunisation ":
                       "or connected with employment) and/or ":
                       *ITALIC,"Dental Benefits Act 2008. ",*HOFF,"To ":
                       *N,*1,"the best of my knowledge and belief all ":
                       "the information disclosed in the lodging of this ":
                       "claim is true and accurate. ":
                       "I authorise ":
                       *N,*1,"the medical practice to electronically transmit":
                       "my claim for benefits to Services Australia on my ":
                       "behalf. I also authorise Services ":
                       *N,*1,"Australia to contact the referring provider ":
                       "or the provider of ":
                       "the services if clarification ":
                       "of details on the account and/or ":
                       *N,*1,"receipt is required ":
                       "for assessment or auditing purposes."
.
          IF        CLNO>45
            CALL      PHED0000
          ENDIF
.
          PRINT     *1,"For this claim, I have consented to this practice ":
                          "sending to and receiving from Services Australia, ":
                        "the following information for ":
                    *N,*1,"verification:":
                    *N,*1," - The patient's enrolment information including":
                              " the patient's Medicare card and issue number;":
                    *N,*1," - The patient's first name and individual ":
                              "reference number;":
                    *N,*1," - The claimant's postcode information provided":
                              " it matches my records; and":
                    *N,*1," - The benefit amount for each service in this":
                              " claim."
.
          IF        CLNO>45
            CALL      PHED0000
          ENDIF
.
          PRINT     *N,*N,*1,"Privacy Notice: Your personal information is ":
                    "protected by law, including the ",*ITALIC,"Privacy ":
                    "Act 1988,",*HOFF:
                    " and is collected by Services ":
                    *N,*1,"Australia for the assessment and administration ":
                    "of payments and services. This information is required ": 
                    "to process your application ":
                    *N,*1,"or claim.":
                    *N,*N,*1,"Your information may be used by the agency or ":
                     "given to other parties for the purposes of research, ":
                     "investigation or ":
                    *N,*1,"where you have agreed or it is ":
                     "required or authorised by law.":
                    *N,*N,*1,"You can get more information about the way in ":
                     "which Services Australia will manage your personal ":
                     "information, including our privacy ":
                    *N,*1,"policy at ",*V2LON:
                    "servicesaustralia.gov.au/privacy",*HOFF:
                    " or by requesting a copy from the agency."
.
          MATCH     SP70,PMCLBBSB
          GOTO      TAIL9999 IF EQUAL
.
          IF        CLNO>45
            CALL      PHED0000
            PRINT     *N,*N
          ELSE
            PRINT     *N
          ENDIF
.
          PRINT     "I authorise the payment of my benefits for this ":
                    "claim to be paid directly into the following bank or ":
                    "financial institution account:"
.
          PRINT     *N:
                    *N,*56,"    BSB Number:",*70,PMCLBBSB:
                    *N,*52,"Account Number:",*70,PMCLBACN:
                    *N,*54,"  Account Name:",*70,PMCLBNAM
.
TAIL9999  RETURN
+
.**********************************************************************
.         Get Doctor details
.**********************************************************************
GHCP0000  MOVE      SP70,KEY40
          MOVE      SP70,PMHCPRV1
          CALL      RDPMHCP1
          IF        OVRCD=0
            MOVE      PMHCSNAM,PACSNAME
            MOVE      PMHCGNAM,PACGNAME
            MOVE      PMHCTITL,PACTITLE
            MOVE      ONE,PACFRMT
            CALL      PACNAME
            MOVE      PACFNAME,KEY40          * Service doctor
          ENDIF
GHCP9999  RETURN
+
.**********************************************************************
.         Check if invoice is claimed
.**********************************************************************
CCLM0000  PACK     KEY22,PTCNCLID,SP70
.
          MOVE     INVOICEN,KEY8
          PACK     KEY17,KEY8,SP70
          CALL     RSWBPCI2
CCLM1000  CALL     RKWBPCI2
          BRANCH   OVRCD,CCLM9999
.
          MATCH    KEY8,WBPIINVN     * Same invoice number
          GOTO     CCLM9999 IF NOT EQUAL
.
.         COMPARE  FIVE,WBPIFLAG
.         GOTO     CCLM9999 IF NOT EQUAL * Not Claimed
.
          IF       COPTION=1
.
            UNPACK   PTINCDAT,CCENT,CYEAR,CMON,CDAY
.
            UNPACK   PTINCTIM,KEY2,ANS,DIM2,KEY1,DIM2A
.           PACK     KEY22,PTCNCLID,PTINCDAT,KEY2,DIM2,DIM2A,SP70
            PACK     KEY22,PTCNCLID,CDAY,CMON,CCENT,CYEAR,KEY2,DIM2,DIM2A,SP70
          ELSE
.
            UNPACK   PRINCDAT,CCENT,CYEAR,CMON,CDAY
.
            UNPACK   PRINCTIM,KEY2,ANS,DIM2,KEY1,DIM2A
.           PACK     KEY22,PTCNCLID,PRINCDAT,KEY2,DIM2,DIM2A,SP70
            PACK     KEY22,PTCNCLID,CDAY,CMON,CCENT,CYEAR,KEY2,DIM2,DIM2A,SP70
          ENDIF
.
CCLM9999  RETURN
+
.**********************************************************************
.         Get Servicing Location details
.**********************************************************************
GLOC0000  PACK      KEY71,PTCNCLID,SP70
          CALL      RSWBB2B2
          CALL      RKWBB2B2
          IF        OVRCD=1
            MOVE      SP70,WBB2HOSP
          ENDIF
.
          MATCH     WBB2LOCN,PTCNCLID
          IF        !@EQUAL
            MOVE      SP70,WBB2HOSP
          ENDIF
.
          MATCH     SP70,WBB2HOSP
          GOTO      GLOC2000 IF EQUAL
.
          MOVE      WBB2HOSP,KEY3
          CALL      RDPTHSP1
          COMPARE   ZERO,OVRCD
          GOTO      GLOC8000 IF EQUAL
.
GLOC2000  UNPACK    CNAME,PTHSNAME
          UNPACK    CHADD1,PTHSADD1
          UNPACK    CHADD2,PTHSADD2
          UNPACK    SP70,PTHSADD3
          UNPACK    SP70,PTHSADD4
          UNPACK    CHPOST,PTHSPCOD
.
          PACK      KEY40,PTHSPCOD,SP70
.
GLOC8000  STRIP     PTHSADD4
          PACK      KEY40,PTHSADD4,PTHSPCOD
.
GLOC9999  RETURN
+
.**********************************************************************
.         Get deposits
.**********************************************************************
GDEP0000  MOVE      ZERO,DEPOAMNT
          MOVE      INVOICEN,FORM12
          MOVE      FORM12,KEY12
          PACK      KEY29,KEY12,SP30
          CALL      RSRCDTE3                     * position before invoice
GDEP2000  CALL      RKRCDTE3                     * read next record
          BRANCH    OVRCD,GDEP9999               * eof - finished
.
          MATCH     KEY12,RCDTINVN               * same invoice still ?
          GOTO      GDEP9999 IF NOT EQUAL        * no - finished
.
          ADD       RCDTAMNT,DEPOAMNT            * increment deposit amount
          GOTO      GDEP2000                     * get next record
.
GDEP9999  RETURN
+
.**********************************************************************
         INC       STD001IO
         INC       CLPMSCLT
.
        INC       WEBB2BIO/INC           * WebServices Devices file
        INC       PATHSPIO/INC           * Hospital file
        INC       PRIHDBIO/INC           * Private practice Header file
        INC       PRIHREIO/INC           * Private practice referral file
        INC       PRIDTRIO/INC           * Private practice transaction file
        INC       PRIPRAIO/INC           * Medical practice file
        INC       PRIINVIO/INC           * PP Invoice file
        INC       AAEDTRIO/INC           * ED Debtor transactioc file
        INC       EMRSITIO/INC           * Emergency site file
        INC       EMRVISIO/INC           * Emergency visit file
        INC       PATINVIO/INC           * Emergency Invoice file
        INC       PMSCLTIO/INC           * Claimant details
        INC       PMSHCPIO/INC           * HCP file 
        INC       RCPDTEIO/INC           * Receipt details file
.
        INC       WEBPCIIO/INC           * WebServices PCIW transactions
        INC       PATCODIO/INC           * patient codes file
        INC       PATMA1IO/INC           * patient master file
        INC       PATMI1IO/INC           * admissions file
        INC       PATVISIO/INC           * visit file
        INC       PMSPX2IO/INC
        INC       PMSVX1IO/INC           * visit extention file
.
