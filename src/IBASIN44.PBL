.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.04.02  11.04.2005 Peter Vela CAR 59696
.           Recompiled for SINUSAGE
. V9.04.01  28/02/2005  Mike Laming   CAR 58442
.           Correct SITAIRF at label UPTRA000
. V9.03.01  10.09.2003 Steve Downing (VF.11.01 CAR 9375)
.           Recompiled for SINREBFD & SINREBIO
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B01 02.11.2000 Charles Handaya
.           Recompiled for sincchaf and SINUSAGE change
.           Modification of Warehouse Security
.-------------------------------------------------------
. VF.01.02  15.09.2000 Charles Handaya
.           Add Transfer Catalog Expiry Date Process
.           SRF 1984
. VF.01.01  18.07.2000 Charles Handaya
.           Omnicell import file - Add Restock ID (SIBARESI, SIBPRESI)
.           Quote 9817
.-------------------------------------------------------
. VF.00.05  10.01.2000 Charles Handaya
.           Add Delete option for deleting record detail
.           srf 636240
. VF.00.04  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
.           10.11.1999 Charles Handaya
.           Fix Y2K of Audit Files Date (CCYYMMDD)
. VF.00.03  04.11.1999 Sandra Barcham
.           Fix writing of period to to record
.           srf 635656
. VF.00.02  03.11.1999 Sandra Barcham
.           Change locked message to use X
. VF.00.01  04.03.1999 Sandra Barcham
.           Fix keys used in batch screens
.-------------------------------------------------------
CMDLINE   DIM       80
DELEFLAG  FORM      "1"
TMBANAME  DIM       8
TMBANAMA  INIT      "tmpbac"
TOTALEFT  FORM      12.2
TRSAMNT   FORM      12.2
TRSSOH    FORM      12.2
.
SVKEY27   DIM       27
.
TMPBACA1  IFILE     SQL, FIXED=61, KEY="U26-33,21-25,6-12,1-5,13-20"
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASIN44
.   Function      :   Stock Transfer Program                  
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       SINBACFD/INC
          INC       SINBATFD/INC
          INC       SINBPSFD/INC
          INC       SINCCAFD/INC
          INC       SINCCBFD/INC
          INC       SINCCEFD/INC
          INC       SINCCFFD/INC
          INC       SINCCHFD/INC
          INC       SINCGBFD/INC
          INC       SINCIAFD/INC
          INC       SINCIEFD/INC
          INC       SINCIFFD/INC
          INC       SINCIHFD/INC
          INC       SINCIIFD/INC
          INC       SINCONFD/INC
          INC       SINITMFD/INC
          INC       SINNATFD/INC
          INC       SINPERFD/INC
          INC       SINPRQFD/INC
          INC       SINREAFD/INC
          INC       SINREBFD/INC
          INC       SINSUAFD/INC
          INC       SINSUBFD/INC
          INC       SINTMPDF/INC
          INC       SINTRAFD/INC
          INC       SINTRBFD/INC
          INC       SINWARFD/INC
          INC       SINWRKDF    
          INC       SINWRKFD/INC
          INC       SINWSEFD/INC
.=========================
.Local Variable Definition
.-------------------------
TRDATE    DIM       8 * Scr 00 Fld     6
TRREF     DIM      20 * Scr 00 Fld     7
FROMDESC  DIM      40 * Scr 00 Fld     9
.
.    Multi Item Key Fields Scr 00 Fld    10
.-------------------------------------------------------
SITB1NAM  INIT      "SITB1"
SITB1END  FORM      1   * End Display
SITB1SNO  FORM      5   * Number of Items on the Screen
SITB1MKY  DIM       127 * Match Key 
SITB1EKY  DIM       127 * End Key
SITB1SKY  DIM       127 * Start Key
SITB1IDX  INIT      " 132 UC1-5"
SITB1FL1  IFILE     SQL, FIXED=132, KEY="U1-5"
SITB1FNM  DIM       8  * Filename
SITB1CNT  FORM      3  * Number of Items on Screen
TODESC    DIM      40 * Scr 00 Fld    12
TOSOH     FORM     12.2 * Scr 00 Fld    13
AMOUNT    FORM     12.2 * Scr 00 Fld    14
DPERIOD   DIM       7 * Scr 00 Fld    15
EXPECTCS  FORM     12.4 * Scr 00 Fld    16
TOTALCS   FORM     12.2 * Scr 00 Fld    17
FROMSOH   FORM     12.2 * Scr 01 Fld    30
SAVUNID   DIM       3 * Scr 01 Fld    32
.
.    Multi Item Key Fields Scr BA Fld     1
.-------------------------------------------------------
SIBT1NAM  INIT      "SIBT1"
SIBT1LEN  FORM      "58"
SIBT1IDX  INIT      "DC1-5 UC6-13"
SIBT1FNM  DIM       8  * Filename
SIBT1AFL  FORM      1  * End Accept Mode
SIBT1END  FORM      1  * End Display
SIBT1SNO  FORM      5  * Number of Items on the Screen
SIBT1NXT  DIM         13
SIBT1FL1  IFILE     SQL, FIXED=58,  KEY="D1-5"
SIBT1FL2  IFILE     SQL, FIXED=58, KEY="U6-13"
SIBT1CNT  FORM      3  * Number of Items on Screen
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASIN44"
PRGNAM    INIT      "Stock Transfer Program                  "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      RINCOCAT
          CALL      SC00L000
          CLOSE     SITB1FL1,DELETE
.
          CLOSE     SIBT1FL2
          CLOSE     SIBT1FL1,DELETE
.
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   24",AUDTSECT
          MOVE      "208",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudie";
            OPEN      SINAUDIE,"sinaudie"
          ENDIF
          DISPLAY   *P56:24,"Opening sinbacaf";
          OPEN      SINBACA1,"sinbacaf"
          DISPLAY   *P56:24,"Opening sinbacaf";
          OPEN      SINBACA2,"sinbacaf"
          DISPLAY   *P56:24,"Opening sinbacaf";
          OPEN      SINBACA3,"sinbacaf"
          DISPLAY   *P56:24,"Opening sinbataf";
          OPEN      SINBATA1,"sinbataf"
          DISPLAY   *P56:24,"Opening sinbpsaf";
          OPEN      SINBPSA1,"sinbpsaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA1,"sinccaaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA2,"sinccaaf"
          DISPLAY   *P56:24,"Opening sinccbaf";
          OPEN      SINCCBA1,"sinccbaf"
          DISPLAY   *P56:24,"Opening sincceaf";
          OPEN      SINCCEA1,"sincceaf"
          DISPLAY   *P56:24,"Opening sincceaf";
          OPEN      SINCCEA2,"sincceaf"
          DISPLAY   *P56:24,"Opening sinccfaf";
          OPEN      SINCCFA1,"sinccfaf"
          DISPLAY   *P56:24,"Opening sinccfaf";
          OPEN      SINCCFA2,"sinccfaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA1,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA2,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA3,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA4,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA5,"sincchaf"
          DISPLAY   *P56:24,"Opening sincgbaf";
          OPEN      SINCGBA1,"sincgbaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA1,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA2,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA3,"sinciaaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA1,"sincieaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA2,"sincieaf"
          DISPLAY   *P56:24,"Opening sincifaf";
          OPEN      SINCIFA1,"sincifaf"
          DISPLAY   *P56:24,"Opening sincifaf";
          OPEN      SINCIFA2,"sincifaf"
          DISPLAY   *P56:24,"Opening sincihaf";
          OPEN      SINCIHA1,"sincihaf"
          DISPLAY   *P56:24,"Opening sincihaf";
          OPEN      SINCIHA2,"sincihaf"
          DISPLAY   *P56:24,"Opening sinciiaf";
          OPEN      SINCIIA1,"sinciiaf"
          DISPLAY   *P56:24,"Opening sinitmaf";
          OPEN      SINITMA1,"sinitmaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA1,"sinperaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
          DISPLAY   *P56:24,"Opening sinprqaf";
          OPEN      SINPRQA1,"sinprqaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA1,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA2,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA3,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA4,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA1,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA2,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA3,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA1,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA2,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA3,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsubaf";
          OPEN      SINSUBA1,"sinsubaf"
          DISPLAY   *P56:24,"Opening sintraaf";
          OPEN      SINTRAA1,"sintraaf"
          DISPLAY   *P56:24,"Opening sintrbaf";
          OPEN      SINTRBA1,"sintrbaf"
          DISPLAY   *P56:24,"Opening sintrbaf";
          OPEN      SINTRBA2,"sintrbaf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA1,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA2,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA1,"sinwseaf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA2,"sinwseaf"
.--------------------------------------------------------
. Initialise Batch Screen Unique id                          
.--------------------------------------------------------
          MOVE     ZERO,SITB1SNO
          MOVE     "00   10",KEY7
          PACK     KEY15,PRGID,KEY7,SP70
          PACK     KEY20,PRGID,KEY7,SP70
          CALL     RSSCPS2
          CALL     RKSCPS2
          IF       OVRCD=0
            PACK     KEY20,SCPSPID,SCPSSID,SCPSITM
            MATCH    KEY15,KEY20
            IF       @EQUAL
              MOVE     SCPSNOR,SITB1SNO
            ENDIF
          ENDIF
          PACK      SITB1FNM,ANST,SITB1NAM,PORT
          REP       " 0",SITB1FNM
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      SITB1FL1,SITB1FNM
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     SITB1FL1,DELETE
          ENDIF
          PACK      KEY80,SGENISB,SITB1FNM,SITB1IDX
          DISPLAY   *P1:3;
          DISPLAY   *P56:24,"Create & Open ",SITB1FNM;
          EXECUTE   KEY80,TASKID
          OPEN      SITB1FL1,SITB1FNM
.--------------------------------------------------------
. Initialise Batch Screen Requisition                        
.--------------------------------------------------------
          MOVE     ZERO,SIBT1SNO
          MOVE     "BA    1",KEY7
          PACK     KEY15,PRGID,KEY7,SP70
          PACK     KEY20,PRGID,KEY7,SP70
          CALL     RSSCPS2
          CALL     RKSCPS2
          IF       OVRCD=0
            PACK     KEY20,SCPSPID,SCPSSID,SCPSITM
            MATCH    KEY15,KEY20
            IF       @EQUAL
              MOVE     SCPSNOR,SIBT1SNO
            ENDIF
          ENDIF
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Screen                        
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Sub-Screen                         
          ENDIF
          MATCH     "BA",SCRID
          IF         @EQUAL
            CALL       PSBAL000   * Back Order Allocation              
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Screen                        
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      SETSCR00
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Screen                        
.-------------------------------------------------------
CF00L000
          MOVE      SP70,TRDATE  
          MOVE      SP70,TRREF   
          MOVE      SP70,FROMCODE
          MOVE      SP70,FROMDESC
          MOVE      SP70,SITBUNI 
          MOVE      SP70,TOCODE  
          MOVE      SP70,TODESC  
          MOVE      ZERO,TOSOH   
          MOVE      ZERO,AMOUNT  
          MOVE      SP70,DPERIOD 
          MOVE      ZERO,EXPECTCS
          MOVE      ZERO,TOTALCS 
          MOVE      SP70,SITAUD1 
          MOVE      SP70,SITAUD2 
          MOVE      SP70,SITAUR1 
          MOVE      SP70,SITAUR2 
          MOVE      SP70,SITAUY1 
          MOVE      SP70,SITAUY2 
          MOVE      SP70,SITBCAT 
          MOVE      SP70,SIIADES 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Screen                        
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Screen                        
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Screen                        
.---------------------------------------------------------
LM00L000
.---------------------------------------------------------
. Load for :    10 Unique id                          
.---------------------------------------------------------
          UNPACK    SP70,SITBNUM,SITBUNI
          PACK      KEY11,SITANUM,SP70
          MOVE      KEY11,SITB1EKY
          STRIP     SITB1SKY
          SETLPTR   SITB1EKY,8
          MOVE      SITB1EKY,SITB1SKY
          CALL      RDSITB1 
          IF        OVRCD=0
            CALL      RPSITB1 
          ENDIF
          RETURN
.--------------------------------------------------------
. Display Current Page of Multi Items
.--------------------------------------------------------
DP00L000
          MOVE     ZERO,SITB1CNT
          MOVE     ZERO,SITB1END
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DP00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DP00L600
          MATCH    PRGID,SCPSPID
          GOTO     DP00L600 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DP00L600 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     DP00L010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,DP00L010,DP00L010,DP00L010,DP00L010:
                           DP00L010,DP00L010,DP00L010,DP00L010:
                            DP00L010,DP00L101,DP00L010,DP00L010:
                            DP00L102,DP00L103,DP00L010,DP00L104:
                            DP00L105,DP00L010,DP00L010,DP00L010:
                            DP00L010,DP00L010,DP00L010,DP00L010:
                            DP00L010,DP00L010,DP00L010,DP00L010:
                            DP00L010,DP00L106,DP00L107
          GOTO      DP00L010
.
DP00L101
          PACK      SITB1MKY,SP70,SP70
          CALL      UPTSITB1
          IF        SITB1END=0
            CALL      RKSITB1 
            IF        OVRCD=0
              PACK      SITB1MKY,SITBNUM,SITBUNI                                                                
              MATCH     SITB1EKY,SITB1MKY
              IF        @EQUAL
                MOVE      ZERO,SITB1END
                ADD       ONE,SITB1CNT
                CALL      UPTSITB1
                MOVE      SITBUNI,VAR      
                CALL      DISPITEM
          CALL      REDITM00
              ELSE
                MOVE      ONE,SITB1END
              ENDIF
            ELSE
              MOVE      ONE,SITB1END
            ENDIF
          ENDIF
          IF        SITB1END=1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP00L010
.
DP00L102
          IF        SITB1END=0
            MOVE      TOSOH,VAR        
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP00L010
.
DP00L103
          IF        SITB1END=0
            MOVE      AMOUNT,VAR       
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP00L010
.
DP00L104
          IF        SITB1END=0
            MOVE      EXPECTCS,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP00L010
.
DP00L105
          IF        SITB1END=0
            MOVE      TOTALCS,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP00L010
.
DP00L106
          IF        SITB1END=0
            MOVE      SITBCAT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP00L010
.
DP00L107
          IF        SITB1END=0
            MOVE      SIIADES,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP00L010
DP00L600
          MATCH    "SITB1",NAMSSFFI
          GOTO     DP00L605 IF NOT EQUAL
          GOTO     DP00L999
DP00L605
DP00L999
          RETURN
.--------------------------------------------------------
. Display First Page of Multi Items
.--------------------------------------------------------
FP00L000
.
          MATCH    "SITB1",NAMSSFFI
          GOTO     FP00L105 IF NOT EQUAL
          PACK     KEY11,SITB1SKY,SP70
          CALL     RDSITB1  * Start
          IF       OVRCD=0
            CALL     RPSITB1  * Start
          ENDIF
          CALL     DP00L000
          GOTO     FP00L999
FP00L105
FP00L999  RETURN
.--------------------------------------------------------
. Display Last Page of Multi Items
.--------------------------------------------------------
LP00L000
.
          MATCH    "SITB1",NAMSSFFI
          GOTO     LP00L105 IF NOT EQUAL
          PACK     KEY11,SITB1SKY,Z70
          CALL     RSSITB1  * End
          IF       OVRCD=1
            CALL     RPSITB1 
          ENDIF
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<SITB1SNO
            CALL     RPSITB1 
            IF       OVRCD=1
              MOVE     SITB1SNO,SECTOR
            ENDIF
            PACK     SITB1MKY,SITBNUM,SITBUNI                                                                
            MATCH    SITB1EKY,SITB1MKY
            IF       !@EQUAL
              MOVE     SITB1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP00L000
          GOTO     LP00L999
LP00L105
LP00L999  RETURN
.--------------------------------------------------------
. Display Previous Page  
.--------------------------------------------------------
PP00L000
.
          MATCH    "SITB1",NAMSSFFI
          GOTO     PP00L120 IF NOT EQUAL
          MOVE     ZERO,SECTOR
PP00L105
          CALL      RFTSITB1
          BRANCH   OVRCD,PP00L115
          MOVE      SITB1MKY,KEY11 
          CALL      RSSITB1 
PP00L110
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<=SITB1SNO
            CALL     RPSITB1 
            IF       OVRCD=1
              MOVE     SITB1SNO,SECTOR
            ENDIF
            PACK     SITB1MKY,SITBNUM,SITBUNI                                                                
            MATCH    SITB1EKY,SITB1MKY
            IF       !@EQUAL
              MOVE     SITB1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP00L000
          GOTO     PP00L999
PP00L115
          BEEP
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<SITB1SNO
            CALL     RKSITB1 
            IF       OVRCD=1
              MOVE     SITB1SNO,SECTOR
            ENDIF
            PACK     SITB1MKY,SITBNUM,SITBUNI                                                                
            MATCH    SITB1EKY,SITB1MKY
            IF       !@EQUAL
              MOVE     SITB1SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          GOTO     PP00L999
PP00L120
PP00L999  RETURN
.--------------------------------------------------------
. Display Next Page of Multi Items
.--------------------------------------------------------
NP00L000
          MATCH    "SITB1",NAMSSFFI
          GOTO     NP00L115 IF NOT EQUAL
NP00L105
          CALL     RKSITB1 
          BRANCH   OVRCD,NP00L110
          PACK     SITB1MKY,SITBNUM,SITBUNI                                                                
          MATCH    SITB1EKY,SITB1MKY
          GOTO     NP00L110 IF NOT EQUAL
          CALL     RPSITB1 
          CALL     DP00L000
          GOTO     NP00L999
NP00L110
          CALL     RPSITB1 
          BEEP
          GOTO     NP00L999
NP00L115
NP00L999  RETURN
.--------------------------------------------------------
. Clear Page of Multi Items from Temp File
.--------------------------------------------------------
CT00L000
CT00L105
CT00L999  RETURN
.---------------------------------------------------------
. Batch IO for Screen : Main Screen                        
.---------------------------------------------------------
.---------------------------------------------------------
. Batch IO for :    10 Unique id                          
.---------------------------------------------------------
UPTSITB1
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      SITB1FL1,KEY5;ANS
          IF        @OVER
            WRITE     SITB1FL1,KEY5;SCPSROW,SCPSCOL,SITB1MKY
          ELSE
            UPDATE    SITB1FL1;SCPSROW,SCPSCOL,SITB1MKY
          ENDIF
          RETURN
RDTSITB1
          MOVE      ZERO,OVRCD
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      SITB1FL1,KEY5;SCPSROW,SCPSCOL,SITB1MKY
          GOTO      OVERCOND IF OVER
          RETURN
RFTSITB1
          MOVE      ZERO,OVRCD
          PACK      KEY5,SP70
          READ      SITB1FL1,KEY5;;
          READKS    SITB1FL1;SCPSROW,SCPSCOL,SITB1MKY
          GOTO      OVERCOND IF OVER
          MATCH     SP70,SITB1MKY
          GOTO      OVERCOND IF EQUAL
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Screen                        
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
          MOVE      "SITB1",NAMSSFFI
          MOVE      "   10",ITMSSFFI
          CALL      FP00L000
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Screen                        
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999:
                           PS00L999,PS00L101,PS00L102,PS00L103:
                            PS00L104,PS00L999,PS00L105,PS00L106:
                            PS00L999,PS00L999,PS00L107,PS00L999:
                            PS00L999,PS00L108,PS00L109,PS00L110:
                            PS00L111,PS00L112,PS00L113,PS00L999:
                            PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L999,PS00L999,PS00L999
          GOTO     PS00L999
.
PS00L101
          UNPACK    TRDATE,CCENT,CYEAR,CMON,CDAY            
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      TRREF,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      FROMCODE,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      FROMDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      TOCODE,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      TODESC,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      DPERIOD,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          UNPACK    SITAUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          UNPACK    SITAUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          MOVE      SITAUR1,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          MOVE      SITAUR2,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      SITAUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      SITAUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Screen                        
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L006:
                           SF00L006,SF00L103,SF00L104,SF00L105:
                            SF00L006,SF00L106,SF00L107,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L108,SF00L109,SF00L110:
                            SF00L111,SF00L112,SF00L113,SF00L114:
                            SF00L115,SF00L116,SF00L006,SF00L117:
                            SF00L118,SF00L006,SF00L006
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                           SF00L020,SF00L103,SF00L104,SF00L105:
                            SF00L020,SF00L106,SF00L107,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L108,SF00L109,SF00L110:
                            SF00L111,SF00L112,SF00L113,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          MOVE      "SITB1",NAMSSFFI
          MOVE      "   10",ITMSSFFI
          CALL      FP00L000
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      WSIIT000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L103
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DPERIOD 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KDATE000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          UNPACK    TRDATE,CCENT,CYEAR,CMON,CDAY            
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DPERIOD,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L104
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KREFF000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      TRREF,VAR        
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L105
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FROMDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCODF000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMCODE,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FROMDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L106
          CALL      SELECTED
          BRANCH    EXIT,SF00L001
          COMPARE   ONE,ACCEPT
          GOTO      SF00L001 IF EQUAL
          CALL      RDTSITB1
          IF        OVRCD=1
            BEEP
            GOTO      SF00L001
          ENDIF
          MATCH     SP70,SITB1MKY
          IF        @EQUAL
            BEEP
            GOTO      SF00L001
          ENDIF
          MOVE      SITB1MKY,KEY11 
          MOVE      ZERO,HLEF
          CALL      GETSCR00
          CALL      SELITM00
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      RFTSITB1
          IF        OVRCD=1
            CALL      FP00L000
          ELSE
            MOVE      SITB1MKY,KEY11 
            CALL      RSSITB1 
            CALL      RPSITB1 
            CALL      DP00L000
          ENDIF
          GOTO     SF00L001
.
SF00L107
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TODESC  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   13",FLDID
          CALL      GETMLPOS
          IF        EXIT=0
            MOVE     SP70,TOSOH   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCODT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L107
            ENDIF
            BRANCH    EXIT,SF00L107,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      TOCODE,VAR       
          CALL      DISPITEM
.
.
          MOVE      "   12",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TODESC,VAR       
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   13",FLDID
          CALL      GETMLPOS
          IF        EXIT=0
            MOVE      TOSOH,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L108
          CALL     SELECTED
          CALL      KEYDATE
          PACK      SITAUD1,CCENT,CYEAR,CMON,CDAY           
          UNPACK    SITAUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L109
          CALL     SELECTED
          CALL      KEYDATE
          PACK      SITAUD2,CCENT,CYEAR,CMON,CDAY           
          UNPACK    SITAUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L110
          CALL     SELECTED
          STRIP     SITAUR1 
          SFORMAT   VAR,SCPSLEN
          MOVE      SITAUR1,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,SITAUR1 
          SFORMAT   VAR,127
          ENDSET    SITAUR1 
          APPEND    SP70,SITAUR1 
          RESET     SITAUR1 
          CMATCH    EXITCHAR,SITAUR1 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,SITAUR1 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L110
            ENDIF
          ENDIF
          MOVE      SITAUR1,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L111
          CALL     SELECTED
          STRIP     SITAUR2 
          SFORMAT   VAR,SCPSLEN
          MOVE      SITAUR2,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,SITAUR2 
          SFORMAT   VAR,127
          ENDSET    SITAUR2 
          APPEND    SP70,SITAUR2 
          RESET     SITAUR2 
          CMATCH    EXITCHAR,SITAUR2 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,SITAUR2 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L111
            ENDIF
          ENDIF
          MOVE      SITAUR2,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L112
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,SITAUY1 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      SITAUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L113
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,SITAUY2 
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      SITAUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L114
          MOVE      "SITB1",NAMSSFFI
          MOVE      "   10",ITMSSFFI
          CALL      NP00L000
          GOTO     SF00L001
.
SF00L115
          MOVE      "SITB1",NAMSSFFI
          MOVE      "   10",ITMSSFFI
          CALL      PP00L000
          GOTO     SF00L001
.
SF00L116
          CALL      ADDREC00
          GOTO      SF00L001
.
SF00L117
          MOVE      "SITB1",NAMSSFFI
          MOVE      "   10",ITMSSFFI
          CALL      FP00L000
          GOTO     SF00L001
.
SF00L118
          MOVE      "SITB1",NAMSSFFI
          MOVE      "   10",ITMSSFFI
          CALL      LP00L000
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.--------------------------------
. Screen - Sub-Screen                         
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC01L200
          CALL      CF01L000 * Clear Fields
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Sub-Screen                         
.-------------------------------------------------------
CF01L000
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Sub-Screen                         
.--------------------------------------------------------
KY01L000
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Sub-Screen                         
.---------------------------------------------------------
WP01L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Sub-Screen                         
.---------------------------------------------------------
LM01L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Sub-Screen                         
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Sub-Screen                         
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L999,PS01L101:
                            PS01L102,PS01L103,PS01L104,PS01L105:
                            PS01L106,PS01L999,PS01L107,PS01L108:
                            PS01L109,PS01L110,PS01L111,PS01L112:
                            PS01L113,PS01L114,PS01L115,PS01L116:
                            PS01L117,PS01L118,PS01L119,PS01L999:
                           PS01L999,PS01L999,PS01L999,PS01L999:
                           PS01L999,PS01L120,PS01L999,PS01L121
          GOTO     PS01L999
.
PS01L101
          MOVE      SITBCAT,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L102
          MOVE      SIIADES,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L103
          UNPACK    TRDATE,CCENT,CYEAR,CMON,CDAY            
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L104
          MOVE      TRREF,VAR        
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L105
          MOVE      FROMCODE,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L106
          MOVE      FROMDESC,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L107
          MOVE      TOCODE,VAR       
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L108
          MOVE      TODESC,VAR       
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L109
          MOVE      TOSOH,VAR        
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L110
          MOVE      AMOUNT,VAR       
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L111
          MOVE      DPERIOD,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L112
          MOVE      EXPECTCS,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L113
          MOVE      TOTALCS,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L114
          UNPACK    SITAUD1,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L115
          UNPACK    SITAUD2,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L116
          MOVE      SITAUR1,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L117
          MOVE      SITAUR2,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L118
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      SITAUY1,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L119
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      SITAUY2,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L120
          MOVE      FROMSOH,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L121
          MOVE      SAVUNID,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Sub-Screen                         
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L101,SF01L102,SF01L103:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L104,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                           SF01L006,SF01L006,SF01L006,SF01L006:
                           SF01L006,SF01L006,SF01L105,SF01L006
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L103:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L104,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                           SF01L020,SF01L020,SF01L020,SF01L020:
                           SF01L020,SF01L020,SF01L020,SF01L020
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          GOTO     SF01L001
.
SF01L101
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L102
          CALL      P01D0000
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIIADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOSOH   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   30",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FROMSOH 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCATC000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L103
            ENDIF
            BRANCH    EXIT,SF01L103,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          CALL      SETACCEP
          MOVE      SITBCAT,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIIADES,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOSOH,VAR        
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   30",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FROMSOH,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
.
SF01L104
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,EXPECTCS
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOTALCS 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KTAMT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L104
            ENDIF
            BRANCH    EXIT,SF01L104,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      AMOUNT,VAR       
          CALL      DISPITEM
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      EXPECTCS,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOTALCS,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
.
SF01L105
          CALL      DELD0000
          MOVE      ZERO,EXIT
          GOTO      SF01L999
SF01L990  MOVE      ONE,EXIT * Exit Char Restart
SF01L999  RETURN
.--------------------------------
. Screen - Back Order Allocation              
.--------------------------------
SCBAL000
SCBAL100
          MOVE      "BA",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SCBAL200
          CALL      CFBAL000 * Clear Fields
SCBAL300
          CALL      KYBAL000 * Enter Key Fields
          BRANCH    EXIT,SCBAL999,SCBAL999
SCBAL400
          CALL      WPBAL000 * Load any WP Details
SCBAL500
          CALL      LMBAL000 * Load any Batch Details
SCBAL600
          CALL      DFBAL000 * Display Fields
SCBAL700
          CALL      SFBAL000 * Select Fields
          BRANCH    EXIT,SCBAL100,SCBAL100,SCBAL200
SCBAL800
SCBAL900
SCBAL999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Back Order Allocation              
.-------------------------------------------------------
CFBAL000
CFBAL999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Back Order Allocation              
.--------------------------------------------------------
KYBAL000
          MOVE      ZERO,EXIT
          GOTO      KYBAL999
.
KYBAL900  MOVE      ONE,EXIT
KYBAL999  RETURN
.---------------------------------------------------------
. Load WP files for : Back Order Allocation              
.---------------------------------------------------------
WPBAL000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Back Order Allocation              
.---------------------------------------------------------
LMBAL000
.---------------------------------------------------------
. Load for :     1 Requisition                        
.---------------------------------------------------------
          UNPACK    SP70,SIBTPON,SIBTREQ
          PACK      SIBT1FNM,ANST,SIBT1NAM,PORT
          REP       " 0",SIBT1FNM
          MOVE      ZERO,SIBT1AFL
          CLOSE     SIBT1FL2
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      SIBT1FL1,SIBT1FNM
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     SIBT1FL1,DELETE
          ENDIF
          PACK      KEY80,SGENISB,SIBT1FNM,SP1,SIBT1LEN,SP1,SIBT1IDX
          DISPLAY   *P1:3;
          EXECUTE   KEY80,TASKID
          OPEN      SIBT1FL1,SIBT1FNM
          OPEN      SIBT1FL2,SIBT1FNM
          PACK      KEY15,PORT,SP70
          MOVE      KEY15,SAVKEY80
          SETLPTR   SAVKEY80,7 
          CALL      RDSIBT1 
          IF        OVRCD=0
            CALL      RPSIBT1 
          ENDIF
LMBAL100
          CALL      RKSIBT1 
          BRANCH    OVRCD,LMBAL105
          PACK      KEY15,SIBTPON,SIBTREQ
          MATCH     SAVKEY80,KEY15   
          GOTO      LMBAL105 IF NOT EQUAL
          RESET     KEY15,8
          MOVE      KEY15,KEY8
          MOVE      SP70,SCTMROW
          MOVE      SP70,SCTMCOL
          CALL      TASIBT12
          IF        OVRCD=0
            CALL      TUSIBT12
          ELSE
            CALL      TWSIBT12
          ENDIF
          GOTO     LMBAL100
LMBAL105
          MOVE     SP70,KEY8   
          CALL     TSSIBT12
          RETURN
.---------------------------------------------------------
. Batch Item Selected Screen : Back Order Allocation              
.---------------------------------------------------------
SMBAL000
          MOVE      ZERO,STDGSFLG
          MOVE      SCPSITM,FIRSTITM
          MOVE      SCPSROW,SCTMROW
          MOVE      SCPSCOL,SCTMCOL
          PACK      KEY15,PRGID,SCRID,SCPSROW,SCPSCOL
          MOVE      KEY15,SKSCPS15
          CALL      RDSCPS1
          COMPARE   ZERO,ACCEPT
          GOTO      SMBAL010 IF EQUAL
SMBAL005
          MOVE      SCPSROW,CVERT
          MOVE      SCPSCOL,CCOL
          MOVE      SCPSITM,FIELDNO
          MOVE      ONE,STDGSFLG
          BRANCH    FIELDNO,SMBAL101,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010
SMBAL006
          CALL      RKSCPS1
          BRANCH    OVRCD,SMBAL007
          MATCH     PRGID,SCPSPID
          GOTO      SMBAL007 IF NOT EQUAL
          MATCH     SCRID,SCPSSID
          GOTO      SMBAL007 IF NOT EQUAL
          MATCH     FIRSTITM,SCPSITM
          GOTO      SMBAL007 IF EQUAL
          MATCH     NAMSSFFI,SCPSMTY
          GOTO      SMBAL006 IF NOT EQUAL
          GOTO      SMBAL005
SMBAL007
          MOVE      ZERO,STDGSFLG
          MOVE      SKSCPS15,KEY15
          CALL      RDSCPS1
SMBAL010
          BRANCH    STDGSFLG,SMBAL006
          CALL      RKSCPS1
          BRANCH    OVRCD,SMBAL900
          MATCH     PRGID,SCPSPID
          GOTO      SMBAL900 IF NOT EQUAL
          MATCH     SCRID,SCPSSID
          GOTO      SMBAL900 IF NOT EQUAL
          MATCH     FIRSTITM,SCPSITM
          GOTO      SMBAL900 IF EQUAL
          MATCH     NAMSSFFI,SCPSMTY
          GOTO      SMBAL010 IF NOT EQUAL
          MOVE      SCPSROW,CVERT
          MOVE      SCPSCOL,CCOL
          MOVE      SCPSITM,FIELDNO
          BRANCH    FIELDNO,SMBAL010,SMBAL010,SMBAL010,SMBAL102:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010
          GOTO      SMBAL010
.
SMBAL101
          MOVE     ZERO,SIBT1AFL
          STRIP     SIBTREQ 
          SFORMAT   VAR,SCPSLEN
          MOVE      SIBTREQ,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,SIBTREQ 
          SFORMAT   VAR,127
          ENDSET    SIBTREQ 
          APPEND    SP70,SIBTREQ 
          RESET     SIBTREQ 
          MATCH     SP70,SIBTREQ 
          GOTO      SMBAL990 IF EQUAL
          CMATCH    EXITCHAR,SIBTREQ 
          GOTO      SMBAL990 IF EQUAL
          PACK     KEY15,SIBTPON,SIBTREQ                                                           
          RESET    KEY15,8
          MOVE     KEY15,KEY8
          CALL      TASIBT12
          IF        OVRCD=0
            MOVE      "Record Already On File - ",DISPMSG
            CALL      MESSAGE1
            GOTO      SMBAL101
          ENDIF
          MOVE      SIBTREQ,VAR      
          CALL      DISPITEM
          CALL      BACLIN00
          GOTO     SMBAL010
.
SMBAL102
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,SIBTISS 
          IF        SCPSMAN=1
            COMPARE   ZERO,SIBTISS 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SMBAL102
            ENDIF
          ENDIF
          MOVE      SIBTISS,VAR      
          CALL      DISPITEM
          GOTO     SMBAL010
SMBAL900
          MATCH    "SIBT1",NAMSSFFI
          IF       @EQUAL
            PACK     KEY15,SIBTPON,SIBTREQ
            RESET    KEY15,8
            MOVE     KEY15,KEY8
            CALL      TASIBT12
            IF        OVRCD=0
              CALL      TUSIBT12
            ELSE
              CALL      TWSIBT12
            ENDIF
            GOTO      SMBAL999
          ENDIF
          GOTO      SMBAL999
SMBAL990
          MATCH    "SIBT1",NAMSSFFI
          IF       @EQUAL
            MOVE     ONE,SIBT1AFL
          ENDIF
SMBAL999
          RETURN
.--------------------------------------------------------
. Display Current Page of Multi Items
.--------------------------------------------------------
DPBAL000
          MOVE     ZERO,SIBT1CNT
          MOVE     ZERO,SIBT1END
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DPBAL010
          CALL     RKSCPS1
          BRANCH   OVRCD,DPBAL600
          MATCH    PRGID,SCPSPID
          GOTO     DPBAL600 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DPBAL600 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     DPBAL010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,DPBAL101,DPBAL102,DPBAL103,DPBAL104:
                            DPBAL105,DPBAL010,DPBAL010,DPBAL010:
                            DPBAL010,DPBAL010,DPBAL010,DPBAL010:
                            DPBAL010,DPBAL010,DPBAL010,DPBAL010:
                            DPBAL010,DPBAL010,DPBAL010,DPBAL010:
                            DPBAL010
          GOTO      DPBAL010
.
DPBAL101
          IF        SIBT1END=0
            CALL      TKSIBT12
            IF        OVRCD=1
              MOVE      ONE,SIBT1END
            ELSE
              MOVE      ZERO,SIBT1END
              MOVE      SCPSROW,SCTMROW
              MOVE      SCPSCOL,SCTMCOL
              CALL      TUSIBT12
              MOVE      SIBTREQ,VAR      
              CALL      DISPITEM
          CALL      BACLIN00
            ENDIF
          ENDIF
          IF        SIBT1END=1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPBAL010
.
DPBAL102
          IF        SIBT1END=0
            MOVE      SIBTCST,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPBAL010
.
DPBAL103
          IF        SIBT1END=0
            MOVE      SIBTQTY,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPBAL010
.
DPBAL104
          IF        SIBT1END=0
            MOVE      SIBTISS,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPBAL010
.
DPBAL105
          IF        SIBT1END=0
            MOVE      SICADESC,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPBAL010
DPBAL600
          MATCH    "SIBT1",NAMSSFFI
          GOTO     DPBAL605 IF NOT EQUAL
          GOTO     DPBAL999
DPBAL605
DPBAL999
          RETURN
.--------------------------------------------------------
. Display First Page of Multi Items
.--------------------------------------------------------
FPBAL000
.
          CALL     CTBAL000
          MATCH    "SIBT1",NAMSSFFI
          GOTO     FPBAL105 IF NOT EQUAL
          MOVE     SP70,KEY8   
          CALL     TSSIBT12 * Start
          CALL     DPBAL000
          GOTO     FPBAL999
FPBAL105
FPBAL999  RETURN
.--------------------------------------------------------
. Display Last Page of Multi Items
.--------------------------------------------------------
LPBAL000
.
          CALL     CTBAL000
          MATCH    "SIBT1",NAMSSFFI
          GOTO     LPBAL105 IF NOT EQUAL
          PACK     KEY8,Z70
          CALL     TSSIBT12
          IF       OVRCD=1
            CALL     TPSIBT12 * End
          ENDIF
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<SIBT1SNO
            CALL     TPSIBT12
            ADD      ONE,SECTOR
          DO
          CALL     DPBAL000
          GOTO     LPBAL999
LPBAL105
LPBAL999  RETURN
.--------------------------------------------------------
. Display Previous Page  
.--------------------------------------------------------
PPBAL000
.
PPBAL100
          MATCH    "SIBT1",NAMSSFFI
          GOTO     PPBAL115 IF NOT EQUAL
PPBAL105
          MOVE     SP70,SIBT1NXT
          PACK     KEY5,SP1,ONE,SP70
          CALL     TSSIBT11
          CALL     TKSIBT11 * First on Page
          MOVE     KEY8,SIBT1NXT
          CALL     TSSIBT12
          CALL     TPSIBT12 * Get Key
          IF       OVRCD=1
            BEEP
            GOTO      PPBAL999
          ENDIF
.
          CALL     CTBAL000
.
. Position and Display Page
.--------------------------
PPBAL110
          MOVE     SIBT1NXT,KEY8   
          CALL     TSSIBT12
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<=SIBT1SNO
            CALL     TPSIBT12
            ADD      ONE,SECTOR
          DO
          CALL     DPBAL000
          GOTO     PPBAL999
PPBAL115
PPBAL999  RETURN
.--------------------------------------------------------
. Display Next Page of Multi Items
.--------------------------------------------------------
NPBAL000
          MATCH    "SIBT1",NAMSSFFI
          GOTO     NPBAL115 IF NOT EQUAL
NPBAL105
          MOVE     SP70,SIBT1NXT
          PACK     KEY5,Z70
          CALL     TSSIBT11
          CALL     TPSIBT11
          MOVE     KEY8,SIBT1NXT
          CALL     TSSIBT12
          CALL     TKSIBT12
          IF       OVRCD=1
            BEEP
            GOTO      NPBAL999
          ENDIF
.
          CALL     CTBAL000
.
. Position and Display Page
.--------------------------
NPBAL110
          MOVE     SIBT1NXT,KEY8   
          CALL     TSSIBT12
          CALL     DPBAL000
          GOTO     NPBAL999
NPBAL115
NPBAL999  RETURN
.--------------------------------------------------------
. Clear Page of Multi Items from Temp File
.--------------------------------------------------------
CTBAL000
          MATCH    "SIBT1",NAMSSFFI
          GOTO     CTBAL115 IF NOT EQUAL
CTBAL105
          PACK     KEY5,SP1,ONE,SP70
          CALL     TSSIBT11
          CALL     TKSIBT11
          BRANCH   OVRCD,CTBAL110
          CALL     TRSIBT12
          MOVE     SP70,SCTMROW
          MOVE     SP70,SCTMCOL
          CALL     TUSIBT12
          GOTO     CTBAL105
CTBAL110
          GOTO     CTBAL999
CTBAL115
CTBAL999  RETURN
.----------------------------------
. Clear Pages of Multi Items 
.----------------------------------
CPBAL000
          CALL     CTBAL000
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
CPBAL010
          CALL     RKSCPS1
          BRANCH   OVRCD,CPBAL999
          MATCH    PRGID,SCPSPID
          GOTO     CPBAL999 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     CPBAL999 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     CPBAL010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,CPBAL100,CPBAL100,CPBAL100,CPBAL100:
                            CPBAL100,CPBAL010,CPBAL010,CPBAL010:
                            CPBAL010,CPBAL010,CPBAL010,CPBAL010:
                            CPBAL010,CPBAL010,CPBAL010,CPBAL010:
                            CPBAL010,CPBAL010,CPBAL010,CPBAL010:
                            CPBAL010
.
CPBAL100
          PACK     VAR,SP70,SP70
          CALL     DISPITEM  * Display Blank Item
          GOTO     CPBAL010
CPBAL999  RETURN
.---------------------------------------------------------
. Add Items
.---------------------------------------------------------
ADBAL000
          CALL      CPBAL000 * Clear Screen of Items
          PACK      KEY20,PRGID,SCRID,ITMSSFFI,SP70
          CALL      RSSCPS2
ADBAL010  CALL      RKSCPS2
          BRANCH    OVRCD,ADBAL000
          MATCH     PRGID,SCPSPID
          GOTO      ADBAL000 IF NOT EQUAL
          MATCH     SCRID,SCPSSID
          GOTO      ADBAL000 IF NOT EQUAL
          MATCH     ITMSSFFI,SCPSITM
          GOTO      ADBAL000 IF NOT EQUAL
          PACK      SKSCPS20,SCPSPID,SCPSSID,SCPSITM,SCPSROW,SCPSCOL
          MOVE      ACCEPT,SACCEPT
          MOVE      ONE,ACCEPT
          CALL      SMBAL000
          MOVE      SACCEPT,ACCEPT
          MOVE      SKSCPS20,KEY20
          CALL      RDSCPS2
          MATCH     "SIBT1",NAMSSFFI
          IF        @EQUAL
            COMPARE   ZERO,SIBT1AFL
            GOTO      ADBAL010 IF EQUAL
            CALL      FPBAL000
            GOTO      ADBAL999
          ENDIF
ADBAL999
          RETURN
.---------------------------------------------------------
. Delete Items
.---------------------------------------------------------
DLBAL000  
          MOVE      SCSLDES,DISPMSG
          CALL      MESSAGE2
DLBAL005  
          CALL      MDELQ000
          BRANCH    EXIT,DLBAL900,DLBAL900
          MOVE      SCSLITM,FIELDNO
          MATCH     ITMSSFFI,SCSLITM
          GOTO      DLBAL100 IF NOT EQUAL
          CALL      SELECTED
          MATCH     "SIBT1",SCPSMTY
          IF        @EQUAL
            PACK      KEY5,SCSLROW,SCSLCOL
            CALL      TRSIBT11
            IF        OVRCD=0
              CALL      TDSIBT12
            ELSE
              BEEP
              GOTO      DLBAL005
            ENDIF
            PACK      KEY5,SP1,ONE,SP70
            CALL      TSSIBT11
            CALL      TKSIBT11
            MOVE     KEY8,SIBT1NXT
            CALL      CTBAL000
            MOVE      SIBT1NXT,KEY8   
            CALL      TSSIBT12
            CALL      TPSIBT12
            CALL      DPBAL000
            GOTO      DLBAL005
          ENDIF
DLBAL100  MOVE      "Invalid Selection. - ",DISPMSG
          CALL      MESSAGE1
          GOTO      DLBAL005
DLBAL900  CALL      MESSAGE3
          RETURN
.---------------------------------------------------------
. Batch IO for Screen : Back Order Allocation              
.---------------------------------------------------------
.---------------------------------------------------------
. Batch IO for :     1 Requisition                        
.---------------------------------------------------------
TSSIBT11  RESET     KEY5
          READ      SIBT1FL1,KEY5;;
          RETURN
.
TSSIBT12  RESET     KEY8   
          READ      SIBT1FL2,KEY8;;
          RETURN
.
TASIBT12  RESET     KEY8   
          MOVE      ZERO,OVRCD
          READ      SIBT1FL2,KEY8;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
TDSIBT11  RESET     KEY5
          DELETE    SIBT1FL1,KEY5
          RETURN
.
TDSIBT12  RESET     KEY8
          DELETE    SIBT1FL2,KEY8
          RETURN
.
TKSIBT11  MOVE      ZERO,OVRCD
          READKS    SIBT1FL1;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TKSIBT12  MOVE      ZERO,OVRCD
          READKS    SIBT1FL2;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TPSIBT11  MOVE      ZERO,OVRCD
          READKP    SIBT1FL1;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TPSIBT12  MOVE      ZERO,OVRCD
          READKP    SIBT1FL2;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TRSIBT11  RESET     KEY5
          MOVE      ZERO,OVRCD
          READ      SIBT1FL1,KEY5;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TRSIBT12  RESET     KEY8   
          MOVE      ZERO,OVRCD
          READ      SIBT1FL2,KEY8;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TUSIBT11  UPDATE    SIBT1FL1;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          RETURN
.
TUSIBT12
          UPDATE    SIBT1FL2;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          RETURN
.
TWSIBT12  RESET     KEY8   
          WRITE     SIBT1FL2,KEY8;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          RETURN
.---------------------------------------------------------
. Display Fields for : Back Order Allocation              
.---------------------------------------------------------
DFBAL000
          BRANCH   ACCEPT,DFBAL999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DFBAL010
          CALL     RKSCPS1
          BRANCH   OVRCD,DFBAL900
          MATCH    PRGID,SCPSPID
          GOTO     DFBAL900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DFBAL900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DFBAL010 IF NOT EQUAL
.
          CALL     PSBAL000 * Display Field
          GOTO     DFBAL010
DFBAL900
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      FPBAL000
DFBAL999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Back Order Allocation              
.---------------------------------------------------------
PSBAL000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PSBAL999,PSBAL999,PSBAL999,PSBAL999:
                            PSBAL999,PSBAL999,PSBAL999,PSBAL999:
                            PSBAL999,PSBAL999,PSBAL999,PSBAL101:
                            PSBAL102,PSBAL103,PSBAL104,PSBAL999:
                            PSBAL999,PSBAL999,PSBAL999,PSBAL999:
                            PSBAL999
          GOTO     PSBAL999
.
PSBAL101
          MOVE      TOTALREC,VAR     
          CALL      DISPITEM
          GOTO     PSBAL999
.
PSBAL102
          MOVE      SIIACAT,VAR      
          CALL      DISPITEM
          GOTO     PSBAL999
.
PSBAL103
          MOVE      SIIADES,VAR      
          CALL      DISPITEM
          GOTO     PSBAL999
.
PSBAL104
          MOVE      SIIAISS,VAR      
          CALL      DISPITEM
          GOTO     PSBAL999
PSBAL999
          RETURN
.---------------------------------------------------------
. Selections for : Back Order Allocation              
.---------------------------------------------------------
SFBAL000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SFBAL001  BRANCH   ACCEPT,SFBAL020
.
SFBAL005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SFBAL101,SFBAL006,SFBAL006,SFBAL006:
                            SFBAL006,SFBAL006,SFBAL006,SFBAL006:
                            SFBAL102,SFBAL006,SFBAL006,SFBAL006:
                            SFBAL006,SFBAL006,SFBAL006,SFBAL103:
                            SFBAL104,SFBAL006,SFBAL006,SFBAL105:
                            SFBAL106
SFBAL006  BEEP
          GOTO     SFBAL005
SFBAL020  CALL     RKSCSL1
          BRANCH   OVRCD,SFBAL090
          MATCH    PRGID,SCSLPID
          GOTO     SFBAL090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SFBAL090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SFBAL101,SFBAL020,SFBAL020,SFBAL020:
                            SFBAL020,SFBAL020,SFBAL020,SFBAL020:
                            SFBAL020,SFBAL020,SFBAL020,SFBAL020:
                            SFBAL020,SFBAL020,SFBAL020,SFBAL020:
                            SFBAL020,SFBAL020,SFBAL020,SFBAL020:
                            SFBAL020
          GOTO     SFBAL020
SFBAL090  MOVE     ZERO,ACCEPT
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      FPBAL000
          GOTO     SFBAL001
.
SFBAL101
          CALL      SELECTED
          BRANCH    EXIT,SFBAL001
          MOVE      "SIBT1",NAMSSFFI
          MOVE      SCPSITM,ITMSSFFI
          IF        ACCEPT=0
            PACK      KEY5,SCPSROW,SCPSCOL
            CALL      TRSIBT11
            BRANCH    OVRCD,SFBAL001
            MATCH     SCTMROW,SCSLROW
            GOTO      SFBAL001 IF NOT EQUAL
            MATCH     SCTMCOL,SCSLCOL
            GOTO      SFBAL001 IF NOT EQUAL
            CALL      SMBAL000 * Change Line
          ELSE
            IF        SIBT1AFL=0
              MOVE      "SIBT1",NAMSSFFI
              MOVE     "    1",ITMSSFFI
              CALL      ADBAL000 * Add Line
            ENDIF
          ENDIF
          GOTO     SFBAL001
.
SFBAL102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      BALAN000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SFBAL999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SFBAL001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SFBAL999
          ENDIF
          MOVE      "BA",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DFBAL000
          ENDIF
          GOTO      SFBAL001
.
SFBAL103
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      NPBAL000
          GOTO     SFBAL001
.
SFBAL104
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      PPBAL000
          GOTO     SFBAL001
.
SFBAL105
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      FPBAL000
          GOTO     SFBAL001
.
SFBAL106
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      LPBAL000
          GOTO     SFBAL001
SFBAL990  MOVE      ONE,EXIT * Exit Char Restart
SFBAL999  RETURN
.@@@@@ Function Restart Point @@@@@
. ------------------------------------------------------------
. Read Catalog Code Keyin Control Information
.
. INCOCATE  FORM      1         67      Catalog Code Type
. 0 Normal Keyin,   1 *JR *DE,   2 Generated ,  3 Generated with Check Digit
.------------------------------------------------------------
RINCOCAT  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*67,INCOCATE
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,INCOCATE
            WRITAB    CONTROLF,SIXTY3;*67,INCOCATE
          ENDIF
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,TWENTY3;*120,HBACK
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,HBACK
            WRITAB    CONTROLF,TWENTY3;*120,HBACK
          ENDIF
.
          RETURN
.----------------------------------------------------------------------
. Set up screen 00
.----------------------------------------------------------------------
SETSCR00  PACK      KEY7,SIIACAT,SP70       * unlock previous catalog
          CALL      UUSIIA1
.
          UNPACK    SP70,FROMCODE,FROMDESC
          MOVE      ZERO,FROMSOH
          UNPACK    SP70,TOCODE,TODESC
          MOVE      ZERO,TOSOH
          MOVE      ZERO,AMOUNT
.
          PACK      SIITWAR,SP70
          PACK      SIITCAT,SP70
          PACK      SIITDAT,CCC,CYY,CMM,CDD,SP70
          REP       " 0",SIITDAT
          UNPACK    SIITDAT,CCENT,CYEAR,CMON,CDAY
          CLOCK     TIME,SIITTIM
          PACK      SIITOPR,PASSCODE,SP70
          PACK      SIITPOR,PORT,SP70
          PACK      SIITPRG,PRGID,SP70
          UNPACK    SIITDAT,CCENT,CYEAR
          PACK      SIITPER,CCENT,CYEAR,SP70
          MOVE      ZERO,SIITQTY
          MOVE      ZERO,SIITAMT
          MOVE      TEN1,SIITTYP
          PACK      SIITCST,SP70
          PACK      SIITREQ,SP70
          PACK      SIITPUR,SP70
          PACK      SIITREF,SP70
.
          MOVE      ONE,ACCEPT
          CALL      DEOLD000           * delete any old data
          CALL      ONAT0000           * Open NAto File
.
SETSCR99  RETURN
.----------------------------------------------------------------------
. delete any old temp records
.----------------------------------------------------------------------
DEOLD000
          PACK      SITANUM,PORT,Z70
          PACK      KEY11,SITANUM,SP70
.
DEOLD080
          CALL      RSSITB1
          CALL      RKSITB1
          BRANCH    OVRCD,DEOLD099
          PACK      KEY11,SITBNUM,SITBUNI,SP70
          MATCH     KEY11,SITANUM
          GOTO      DEOLD099 IF NOT EQUAL
.
          CALL      DESITB1
          GOTO      DEOLD080
.
DEOLD099  RETURN
.------------------------------------------------------------------------
. Open Nato X-Ref File if required
.------------------------------------------------------------------------
ONAT0000  OPEN      CONTROLF,"controlf"
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*141,INCNNATO
            TRAPCLR   FORMAT
            IF        OVRCD=1
            MOVE      ZERO,INCNNATO
            WRITAB    CONTROLF,SIXTY3;*141,INCNNATO
          ENDIF
.
          IF        INCNNATO=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      SINNATA1,"sinnataf"
            TRAPCLR   IO
            IF        OVRCD=1
              DISPLAY   *P1:24,*EL,*B,"Nato file does not exist. Run fixit.  ";
              CALL      HITENTER
              CHAIN     PGM
            ENDIF
.
            OPEN      SINNATA2,"sinnataf"
          ENDIF
.
ONAT9999  RETURN
.********************************************************************
. Set accept mode
.********************************************************************
SETACCEP  MOVE      ONE,ACCEPT
          RETURN
REDITM00
          MOVE      SITBQTY,AMOUNT
.
          MOVE      ZERO,SIIAAVC
          PACK      SIIADES,SP70,SP70
          PACK      KEY7,SITBCAT,SP70
          CALL      RDSIIA1
          MOVE      SIIAAVC,EXPECTCS
.
          MOVE      ZERO,SIIESOH
          PACK      KEY12,SIIACAT,FROMCODE,SP70
          CALL      RDSIIE1
          MOVE      SIIESOH,FROMSOH
.
          MOVE      ZERO,SIIESOH
          PACK      KEY12,SIIACAT,TOCODE,SP70
          CALL      RDSIIE1
          MOVE      SIIESOH,TOSOH
.
          ASSIGN    AMOUNT*EXPECTCS,TOTALCS
.
          PACK      RACKSHEL,SITBACC,SP70
.
REDITM99  RETURN
.----------------------------------------------------------------------
. Post screen 00
.----------------------------------------------------------------------
WSIIT000  PACK      DISPMSG,SP70,SP70
          CALL      MESSAGE2
.
          MATCH     FROMCODE,TOCODE
          IF        @EQUAL
            DISPLAY   *P1:24,"From and To Warehouses Cannot Be Identical - ":
                      *EL;
            CALL      HITENTER
            GOTO      WSIIT950
          ENDIF
          PACK      SKEY8,SP70
.
WSIIT100  PACK      SITANUM,PORT,Z70
          PACK      KEY11,SITANUM,SP70
.
          CALL      RSSITB1
          CALL      RKSITB1
          BRANCH    OVRCD,WSIIT900
          PACK      KEY11,SITBNUM,SITBUNI,SP70
          MATCH     KEY11,SITANUM
          GOTO      WSIIT900 IF NOT EQUAL
          CALL      DESITB1
.
          DISPLAY   *P1:24,"Processing : ",*V2LON,SITBCAT,*EL;
.
          CALL      REDITM00           * read item data
          CALL      WDATA000           * write data
          GOTO      WSIIT100
.
WSIIT900  CALL      DEOLD000      * delete temp data
          MOVE      ZERO,EXIT
          GOTO      WSIIT999
.
WSIIT950  MOVE      ONE,EXIT
.
WSIIT999  CALL      UUSIRA1            * Unlock Requisition
.
          MATCH     SP70,SKEY8         * check if transfer number allocated
          IF        !@EQUAL
            DISPLAY   *P1:24,"Transfer Number : ",SKEY8," Posted - ",*EL;
            CALL      HITENTER
          ENDIF
.
          CALL      MESSAGE3
          MOVE      ONE,DELEFLAG       * set default disallowed delete record
          RETURN
.----------------------------------------------------------------------
. Post item
.----------------------------------------------------------------------
WDATA000  PACK      SIITWAR,SP70
          PACK      SIITCAT,SP70
          PACK      SIITDAT,TRDATE,SP70
          REP       " 0",SIITDAT
          UNPACK    SIITDAT,CCENT,CYEAR,CMON,CDAY
          CLOCK     TIME,SIITTIM
          PACK      SIITOPR,PASSCODE,SP70
          PACK      SIITPOR,PORT,SP70
          PACK      SIITPRG,PRGID,SP70
          UNPACK    SIITDAT,CCENT,CYEAR
          PACK      SIITPER,CCENT,CYEAR,SP70
          MOVE      ZERO,SIITQTY
          MOVE      ZERO,SIITAMT
          MOVE      TEN1,SIITTYP
          PACK      SIITCST,SP70
          PACK      SIITREQ,SP70
          PACK      SIITPUR,SP70
          PACK      SIITREF,TRREF,SP70
.
          PACK      KEY7,SITBCAT,SP70  * lock catalog
          REPEAT
            CALL      RLSIIA1
            BRANCH    OVRCD,WDATA950
            IF        OVRCD=2
              KEYIN     *P1:24,*EL,"Catalog ",*DV,SITBCAT," Locked - (":
                        *V2LON,"R",*HOFF,")etry or e(":
                        *V2LON,"X",*HOFF,")it ? ",*EL,*V2LON,ANS
              PACK      ANS,ANS,SP70
              REP       UPPLOW,ANS
              MATCH     "X",ANS
              GOTO      WDATA950 IF EQUAL
              MATCH     "E",ANS
              GOTO      WDATA950 IF EQUAL
            ENDIF
          UNTIL     OVRCD=0
.
          IF        AMOUNT>FROMSOH
            DISPLAY   *P1:24,"Transfer Amount > Stock on Hand ":
                      "For Cat ",SITBCAT," - ",*EL;
            CALL      HITENTER
            GOTO      WDATA950
          ENDIF
.
.---- get period ----
.
          REPEAT
            MOVE      SIITDAT,SIPEDATE
            CALL      RSIPE0000          * get period
            IF        (OVRCD=1)|(SIPELOC=1)
              UNPACK    SIPEDATE,CCENT,CYEAR,CMON,CDAY
              CALL      PACDATE
              MOVE      "24",CVERT
              MOVE      "41",CCOL
              IF        OVRCD=1
                DISPLAY   *P1:24,"No Period For ",*V2LON,CPCDATE,*HOFF," - ":
                          *EL;
              ELSE
                DISPLAY   *P1:24,"Year/Period ",*V2LON:
                          SIPEPER,SLASH,SIPEYEAR,*HOFF," Locked - ":
                          *EL;
              ENDIF
              DISPLAY   "Enter Date : ";
              CALL      KEYDATE
              PACK      SIITDAT,CCENT,CYEAR,CMON,CDAY,SP70
            ENDIF
          UNTIL     (OVRCD=0)&(SIPELOC=0)
          PACK      SIITPER,SIPEYEAR,SIPEPER,SP70
.
.---- lock warehouse/cat records ----
.
          PACK      KEY12,SITBCAT,FROMCODE,SP70    * lock cat/war data
          REPEAT
            CALL      RLSIIE1
            IF        OVRCD=1
              DISPLAY   *P1:24,"ERROR - Record Missing ":
                        "For Cat/War ",SITBCAT,SLASH,FROMCODE," - ",*EL;
              CALL      HITENTER
              GOTO      WDATA950
            ENDIF
            IF        OVRCD=2
              KEYIN     *P1:24,*EL,"Cat/War ",*DV,SIIECAT,*DV,SLASH:
                        *DV,SIIEWAR," Locked - (":
                        *V2LON,"R",*HOFF,")etry or e(":
                        *V2LON,"X",*HOFF,")it ? ",*EL,*V2LON,ANS
              PACK      ANS,ANS,SP70
              REP       UPPLOW,ANS
              MATCH     "X",ANS
              GOTO      WDATA950 IF EQUAL
              MATCH     "E",ANS
              GOTO      WDATA950 IF EQUAL
            ENDIF
          UNTIL     OVRCD<>2
.
          PACK      KEY12,SITBCAT,TOCODE,SP70    * lock cat/war data
          REPEAT
            CALL      RLSIIE1
            IF        OVRCD=1
              PACK      KEY12,SITBCAT,TOCODE,SP70     * add new cat/war data
              UNPACK    KEY12,SIIECAT,SIIEWAR
              MOVE      ZERO,SIIESOH
              MOVE      ZERO,SIIESOO
              MOVE      RACKSHEL,SIIERAS
              UNPACK    SP70,SIIESTD,SIIEUR1,SIIEUR2,SIIEUC1,SIIEUC2
              UNPACK    SP70,SIIEUD1,SIIEUD2,SIIEUY1,SIIEUY2
              CALL      WRSIIE1
              MOVE      "1",AUDTTYPE          * write added audit
              CALL      WASIIE00
              CALL      RLSIIE1               * try to lock record
            ENDIF
            IF        OVRCD=2
              KEYIN     *P1:24,*EL,"Cat/War ",*DV,SIIECAT,*DV,SLASH:
                        *DV,SIIEWAR," Locked - (":
                        *V2LON,"R",*HOFF,")etry or e(":
                        *V2LON,"X",*HOFF,")it ? ",*EL,*V2LON,ANS
              PACK      ANS,ANS,SP70
              REP       UPPLOW,ANS
              MATCH     "X",ANS
              GOTO      WDATA950 IF EQUAL
              MATCH     "E",ANS
              GOTO      WDATA950 IF EQUAL
            ENDIF
          UNTIL     OVRCD<>2
.
.---- write data for to warehouse ----
.
          PACK      SIITCAT,SIIACAT,SP70
          PACK      KEY12,SIITCAT,TOCODE,SP70    * write cat/war data
          CALL      RDSIIE1
          BRANCH    OVRCD,WDATA950
.
          MOVE      "2",AUDTTYPE                 * write before change audit
          CALL      WASIIE00
.
          ADD       AMOUNT,SIIESOH               * update data
          CALL      UPSIIE1
.
          MOVE      "3",AUDTTYPE                 * write after change audit
.
          MOVE      AMOUNT,SIITQTY               * write item history data
          ASSIGN    AMOUNT*SIIAAVC,SIITAMT
          MOVE      SIIESOH,SIITSOH            * Stock on Hand
          REPEAT
            CLOCK     TIME,SIITTIM
            PACK      SIITWAR,TOCODE,SP70
            PACK      KEY28,SIITWAR,SIITCAT,SIITDAT,SIITTIM,SP70
            CALL      RASIIT1
          UNTIL     OVRCD=1
          CALL      WRSIIT1
.
.---- write data for from warehouse ----
.
          PACK      KEY12,SIITCAT,FROMCODE,SP70  * write cat/war data
          CALL      RDSIIE1
          IF        OVRCD=0
            MOVE      "2",AUDTTYPE          * write before change audit
            CALL      WASIIE00
.
            SUB       AMOUNT,SIIESOH        * update data
            CALL      UPSIIE1
.
            MOVE      "3",AUDTTYPE          * write after change audit
            CALL      WASIIE00
          ENDIF
.
          MULT      SEQ,SIITQTY             * write item history data
          MULT      SEQ,SIITAMT
          MOVE      SIIESOH,SIITSOH            * Stock on Hand
          REPEAT
            CLOCK     TIME,SIITTIM
            PACK      SIITWAR,FROMCODE,SP70
            PACK      KEY28,SIITWAR,SIITCAT,SIITDAT,SIITTIM,SP70
            CALL      RASIIT1
          UNTIL     OVRCD=1
          CALL      WRSIIT1
.
          CALL      UPTRA000                * Update Transfer Data
          CALL      UPREB000                * Update Requisition Details
          CALL      UPPIC000                * Update Picking Sheet Details
          CALL      UPEXD000                * Update Catalog Expiry Date
.
          MOVE      AMOUNT,TOTALREC         * set up vars for BACK0000
          PACK      KEY12,SITBCAT,TOCODE,SP70
          CALL      RDSIIE1
          CALL      BACK0000                * Update Backorders
.
WDATA900  MOVE      ZERO,EXIT
.
WDATA950  MOVE      ONE,EXIT
.
WDATA999  CALL      UUSIIA1                      * Unlock catalog
.
          PACK      KEY12,SIITCAT,FROMCODE,SP70  * Unlock cat/war data
          CALL      RDSIIE1
          CALL      UUSIIE1
.
          PACK      KEY12,SIITCAT,TOCODE,SP70    * Unlock cat/war data
          CALL      RDSIIE1
          CALL      UUSIIE1
.
          RETURN
.--------------------------------------------
. Update transfer data
.--------------------------------------------
UPTRA000  MATCH     SP70,SKEY8         * check if transfer number allocated
          IF        @EQUAL
            PACK      KEY8,Z70
            MOVE      "00000000",SITANUM
            CALL      RSSITA1
            CALL      RPSITA1
            MOVE      ZERO,F8
            MOVE      SITANUM,F8
.
            PACK      SITAIRF,SIITREF,SP70           * was SITAREF     *C-58442
            PACK      SITAREF,SP70
            PACK      SITADAT,SIITDAT,SP70
            MOVE      SP70,SITAACC
            MOVE      ZERO,SITAPL
            PACK      SITASPA,SP70
.
UPTRA010  REPEAT
              ADD       ONE,F8
              PACK      KEY8,F8,SP70
              REP       " 0",KEY8
              MOVE      KEY8,SITANUM
              CALL      RASITA1
            UNTIL     OVRCD=1
            CALL      WRSITA1
.
            MOVE      "T",SIRATYP
            MOVE      SITANUM,F8
            MOVE      F8,F7
            MOVE      F7,SIRAREQ
            PACK      KEY8,SIRATYP,SIRAREQ,SP70
            CALL      RDSIRA1
.
            MOVE      ZERO,SIRAIND
            MOVE      SP70,SIRACST
            PACK      SIRADAT,SIITDAT,SP70
            MOVE      "To Warehouse ",KEY13
            MOVE      " - ",KEY3
            PACK      SIRADEL,KEY13,TOCODE,KEY3,SIITREF,SP70
            MOVE      ZERO,SIRATOT
            MOVE      SP70,SIRASPA
.
            IF        OVRCD=1
              CALL      WRSIRA1
            ELSE
              CALL      DESITA1
              GOTO      UPTRA010  * should not be there (but get next if it is)
            ENDIF
            CALL      RLSIRA1
            PACK      SKEY8,SITANUM,SP70
          ELSE
            MOVE      SKEY8,SITANUM
            MOVE      "T",SIRATYP
            MOVE      SITANUM,F8
            MOVE      F8,F7
            MOVE      F7,SIRAREQ
            PACK      KEY8,SIRATYP,SIRAREQ,SP70
            CALL      RDSIRA1
          ENDIF
.
          PACK      KEY11,SITANUM,Z70
          MOVE      "00000000",SITBUNI
          CALL      RSSITB1
          CALL      RPSITB1
          IF        OVRCD=1
            MOVE      ZERO,F3
          ELSE
            MATCH     SITBNUM,SITANUM
            IF        @EQUAL
              MOVE      SITBUNI,F3
            ELSE
              MOVE      ZERO,F3
            ENDIF
          ENDIF
.
          ADD       ONE,F3
          PACK      SITBNUM,SITANUM,SP70
          MOVE      F3,SITBUNI
          MOVE      "0",SITBTYP
          UNPACK    DPERIOD,DIM2,ANS,KEY4
          PACK      SITBPER,KEY4,DIM2,SP70
          PACK      SITBCAT,SIIACAT,SP70
          PACK      SITBWAR,FROMCODE,SP70
          MOVE      AMOUNT,SITBQTY
          MOVE      TOTALCS,SITBCST
          PACK      SITBBCH,SP70
          PACK      SITBLED,SP70
          PACK      SITBACC,SP70
          PACK      SITBSPA,SP70
          CALL      WRSITB1
.
          ADD       ONE,F3
          PACK      SITBNUM,SITANUM,SP70
          MOVE      F3,SITBUNI
          MOVE      "1",SITBTYP
          UNPACK    DPERIOD,DIM2,ANS,KEY4
          PACK      SITBPER,KEY4,DIM2,SP70
          PACK      SITBCAT,SIIACAT,SP70
          PACK      SITBWAR,TOCODE,SP70
          MOVE      AMOUNT,SITBQTY
          MOVE      TOTALCS,SITBCST
          PACK      SITBBCH,SP70
          PACK      SITBLED,SP70
          PACK      SITBACC,SP70
          PACK      SITBSPA,SP70
          CALL      WRSITB1
.
UPTRA999  RETURN
.-----------------------------------
. Update Picking Sheets File
.-----------------------------------
UPPIC000  MOVE      FROMCODE,SIPRWAR * Warehouse
          MOVE      SIRACST,SIPRCST  * Cost Centre
          MOVE      SIRADEL,SIPRDEL  * Delivery Details
          MOVE      SIIERAS,SIPRRAC  * Rack&Shelf
          MOVE      SIRBCAT,SIPRCAT  * Catalog
          MOVE      SIRATYP,SIPRTYP  * Req Type
          MOVE      SIRAREQ,SIPRREQ  * Req No
.
UPPIC100  PACK     KEY83,SIPRWAR,SIPRCST,SIPRDEL,SIPRRAC,SIPRCAT,SIPRTYP,SIPRREQ
          CALL      RDSIPR1
          BRANCH    OVRCD,UPPIC500
          MATCH     SP70,SIPRPFL
          GOTO      UPPIC400 IF EQUAL
.
. Can't update a picking sheet record if it has already been printed.
.
          MATCH     SP70,SIPRDEL
          IF        @EQUAL
            MOVE      "Part 2",SIPRDEL
            GOTO      UPPIC100
          ENDIF
          ENDSET    SIPRDEL
          APPEND    " - 2",SIPRDEL
          RESET     SIPRDEL
          GOTO      UPPIC100 * If all that doesn't work there is a problem.
.
UPPIC400  ADD       SITBQTY,SIPRAQT  * Quantity to Issue
          ADD       SITBQTY,SIPRRQT  * Quantity Requisted
          MOVE      ZERO,SIPRBQT
          MOVE      SP70,SIPRPFL     * Print Flag
          MOVE      SP70,SIPRSPA
          CALL      UPSIPR1
          GOTO      UPPIC999
.
UPPIC500  MOVE      SITBQTY,SIPRAQT  * Quantity to Issue
          MOVE      SITBQTY,SIPRRQT  * Quantity Requisted
          MOVE      ZERO,SIPRBQT
          MOVE      SP70,SIPRPFL     * Print Flag
          MOVE      SP70,SIPRSPA
          CALL      WRSIPR1
.
UPPIC999  RETURN
.-----------------------------------
. Update Requisition Details File
.-----------------------------------
UPREB000  MOVE      SIRATYP,SIRBTYP
          MOVE      SIRAREQ,SIRBREQ
          MOVE      FROMCODE,SIRBWAR
          MOVE      SITBCAT,SIRBCAT
          UNPACK    SP70,SIRBBCH,SIRBLED,SIRBACC
.
          PACK      KEY20,SIRBTYP,SIRBREQ,SIRBWAR,SIRBCAT
          CALL      RDSIRB1
          IF        OVRCD=0
            ADD       SITBQTY,SIRBRQT
            ADD       SITBQTY,SIRBIQT
            ADD       SITBCST,SIRBAMT
            CALL      UPSIRB1
          ELSE
            MOVE      SITBQTY,SIRBRQT
            MOVE      SITBQTY,SIRBIQT
            MOVE      SITBCST,SIRBAMT
            MOVE      SIRADAT,SIRBDAT
            CALL      WRSIRB1
          ENDIF
.
          PACK      KEY8,SIRBTYP,SIRBREQ,SP70
          CALL      RDSIRA1
          IF        OVRCD=0
            ADD       SITBCST,SIRATOT
            CALL      UPSIRA1
          ENDIF
          RETURN
.-----------------------------------
. Update Catalog Expiry Date
.-----------------------------------
UPEXD000  BRANCH    SIIANON,UPEXD999         * No Warehouse for non-stock
.
          MOVE      AMOUNT,TRSAMNT
          PACK      KEY27,FROMCODE,SIIACAT,SP70
          PACK      KEY12,FROMCODE,SIIACAT,SP70
.
          WHILE     TRSAMNT > 0
            CALL      RSSIII1
            CALL      RKSIII1
            BRANCH    OVRCD,UPEXD999
            PACK      KEY27,SIIIWAR,SIIICAT,SIIIPUR,SIIIDAT,SP70
            MATCH     KEY27,KEY12
            GOTO      UPEXD999 IF NOT EQUAL
.
            MOVE      KEY27,SVKEY27
            ASSIGN    SIIIQR-SIIIQI,TRSSOH
            IF        TRSAMNT < TRSSOH
              PACK      KEY27,TOCODE,SIIICAT,SIIIPUR,SIIIDAT,SP70
              CALL      RASIII1
              IF        OVRCD=0
                PACK      KEY27,TOCODE,SIIICAT,SIIIPUR,SIIIDAT,SP70
                CALL      RDSIII1
                ADD       TRSAMNT,SIIIQR
                CALL      UPSIII1
              ELSE
                MOVE      TOCODE,SIIIWAR
                MOVE      TRSAMNT,SIIIQR
                MOVE      ZERO,SIIIQI
                CALL      WRSIII1
              ENDIF
              MOVE      SVKEY27,KEY27
              CALL      RDSIII1
              ADD       TRSAMNT,SIIIQI
              CALL      UPSIII1
            ELSE
              PACK      KEY27,TOCODE,SIIICAT,SIIIPUR,SIIIDAT,SP70
              CALL      RASIII1
              IF        OVRCD=0
                PACK      KEY27,TOCODE,SIIICAT,SIIIPUR,SIIIDAT,SP70
                CALL      RDSIII1
                ADD       TRSSOH,SIIIQR
                CALL      UPSIII1
              ELSE
                MOVE      TOCODE,SIIIWAR
                MOVE      TRSSOH,SIIIQR
                MOVE      ZERO,SIIIQI
                CALL      WRSIII1
              ENDIF
              MOVE      SVKEY27,KEY27
              CALL      RDSIII1
              CALL      DESIII1
            ENDIF
            SUB       TRSSOH,TRSAMNT
          DO
.
UPEXD999  RETURN
.----------------------------------------------------------------------
. Process Back Orders
. Requires : TOTALREC (quantity to allocate)
.----------------------------------------------------------------------
BACK0000  READ      CONTROLF,TWENTY3;*120,HBACK
          READ      CONTROLF,SIXTY3;*144,HALLOCBO
.
          COMPARE   ONE,HBACK
          GOTO      BACK9999 IF NOT EQUAL
.
          MOVE      ZERO,TOTALSOB
          MOVE      ZERO,COUNT
.
          PACK      KEY12,SIIEWAR,SIIECAT,SP70
          PACK      KEY25,SIIEWAR,SIIECAT,SP70
          CALL      RSSIBA2
.
BACK1000  CALL      RKSIBA2
          BRANCH    OVRCD,BACK1100
          PACK      KEY25,SIBAWAR,SIBACAT,SIBACST,SIBAREQ,SP70
          MATCH     KEY12,KEY25
          GOTO      BACK1100 IF NOT EQUAL
.
BACK1050  CALL      RLSIBA2
          IF        OVRCD=2
            BEEP
            DISPLAY   *P1:24,*EL,"Back Order Locked : ",KEY25
            GOTO      BACK1050
          ENDIF
.
          ADD       SIBAQTY,TOTALSOB      * Total of Requisitions
          ADD       ONE,COUNT             * Number of Requisitions
          GOTO      BACK1000
.
BACK1100  COMPARE   ZERO,TOTALSOB
          GOTO      BACK9000 IF EQUAL
.
          IF        TOTALREC>TOTALSOB
            CALL      BACALL00           * Allocate all Backorders
            GOTO      BACK9000
          ENDIF
.
          IF        COUNT=1
            CALL      BACONE00           * Allocate to Single Back Order
            GOTO      BACK9000
          ENDIF
.
          CALL      BACUSR00           * Allow User to Allocate Backorder
.
BACK9000  CALL      UUSIBA2
.
BACK9999  RETURN
.-------------------------------------------------------------------
. Not Enough Received to Cover All Back Orders.
.-------------------------------------------------------------------
BACUSR00  CALL      KLTMBA00
          CALL      CRTMBA00
.
          PACK      KEY12,SIIEWAR,SIIECAT,SP70
          PACK      KEY25,SIIEWAR,SIIECAT,SP70
          PACK      SKEY7,PORT,SP70
          CALL      RSSIBA2
.
BACUSR10  CALL      RKSIBA2
          BRANCH    OVRCD,BACUSR20
          PACK      KEY25,SIBAWAR,SIBACAT,SIBACST,SIBAREQ,SP70
          MATCH     KEY12,KEY25
          GOTO      BACUSR20 IF NOT EQUAL
.
          IF        HALLOCBO=2
            PACK      KEY33,SIBADAT,KEY25
          ELSE
            PACK      KEY33,SP8,KEY25
          ENDIF
.
          CALL      RATMBA1
          IF        OVRCD=1
            CALL      WRTMBA1
          ENDIF
          GOTO      BACUSR10
.
BACUSR20  MOVE      SP70,KEY33
          MOVE      TOTALREC,TOTALEFT
          CALL      RSTMBA1
.
BACUSR30  CALL      RKTMBA1
          BRANCH    OVRCD,BACUSR40
.
          PACK      SIBTPON,SKEY7,SP70
          MOVE      SIBAREQ,SIBTREQ
          MOVE      SIBACST,SIBTCST
          MOVE      SIBAQTY,SIBTQTY
.
          IF        HALLOCBO=2
            IF        TOTALEFT>=SIBTQTY
              MOVE      SIBTQTY,SIBTISS
              SUB       SIBTQTY,TOTALEFT
            ELSE
              MOVE      TOTALEFT,SIBTISS
              MOVE      ZERO,TOTALEFT
            ENDIF
          ELSE
            ASSIGN    (SIBAQTY/TOTALSOB),F12P2
            ASSIGN    (F12P2*TOTALREC)+.50,F12P2
            MOVE      F12P2,QTYFORM8
            IF        TOTALEFT>=QTYFORM8
              MOVE      QTYFORM8,SIBTISS
              SUB       QTYFORM8,TOTALEFT
            ELSE
              MOVE      TOTALEFT,SIBTISS
              MOVE      ZERO,TOTALEFT
            ENDIF
          ENDIF
.
          PACK      KEY15,SIBTPON,SIBTREQ
          CALL      RASIBT1
          IF        OVRCD=1
            CALL      WRSIBT1
          ENDIF
          GOTO      BACUSR30
.
BACUSR40  CALL      KLTMBA00
          CALL      SCBAL000
.
          PACK      KEY8,SP70
          CALL      TSSIBT12
.
BACUSR50  CALL      TKSIBT12
          BRANCH    OVRCD,BACUSR99
          MOVE      SIIEWAR,SIBPWAR
          MOVE      SIBTCST,SIBPCST
.
          COMPARE   ZERO,SIBTISS
          GOTO      BACUSR80 IF EQUAL
.
          PACK      KEY25,SIIEWAR,SIIECAT,SIBTCST,SIBTREQ,SP70
          CALL      RDSIBA2
          BRANCH    OVRCD,BACUSR50
.
          MOVE      SIBTISS,SIBPAQT
          ASSIGN    SIBAQTY-SIBTISS,SIBPBQT
          CALL      WRPIC000
.
          ASSIGN    SIBAQTY-SIBTISS,SIBAQTY
          IF        SIBAQTY>0
            CALL      UPSIBA2
          ELSE
            CALL      DESIBA2
          ENDIF
.
BACUSR80  PACK      KEY15,SKEY7,SIBTREQ,SP70
          CALL      RASIBT1
          IF        OVRCD=0
            CALL      DESIBT1
          ENDIF
          GOTO      BACUSR50
.
BACUSR99  RETURN
.-----------------------------------------------------------------
. Kill the Temporary Backorder File
.-----------------------------------------------------------------
KLTMBA00  PACK      TMBANAME,TMBANAMA,PORT
          CLOSE     TMPBACA1
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    TMBANAME,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
KLTMBA99  RETURN
.-----------------------------------------------------------------
. Create the Temporary Backorder File
.-----------------------------------------------------------------
CRTMBA00  CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TMBANAME,CMDLINE
          APPEND    " 61 UC26-33,21-25,6-12,1-5,13-20",CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      TMPBACA1,TMBANAME
.
CRTMBA99  RETURN
.-----------------------------------------------------------------
. Enough Received to Cover All Back Orders.
.-----------------------------------------------------------------
BACALL00  PACK      KEY12,SIIEWAR,SIIECAT,SP70
          PACK      KEY25,SIIEWAR,SIIECAT,SP70
          CALL      RSSIBA2
.
BACALL10  CALL      RKSIBA2
          BRANCH    OVRCD,BACALL99
          PACK      KEY25,SIBAWAR,SIBACAT,SIBACST,SIBAREQ,SP70
          MATCH     KEY12,KEY25
          GOTO      BACALL99 IF NOT EQUAL
.
          MOVE      SIBAQTY,SIBPAQT
          MOVE      ZERO,SIBPBQT
          CALL      WRPIC000   * Write to Picking Sheets
.
          PACK      KEY25,SIBAWAR,SIBACAT,SIBACST,SIBAREQ,SP70
          CALL      DESIBA2    * Back Order Compltete So Remove
          GOTO      BACALL10
.
BACALL99  RETURN
.----------------------------------------------------------------------
. Single Item on Back Order Only.
.----------------------------------------------------------------------
BACONE00  PACK      KEY12,SIIEWAR,SIIECAT,SP70
          PACK      KEY25,SIIEWAR,SIIECAT,SP70
          CALL      RSSIBA2
          CALL      RKSIBA2
          BRANCH    OVRCD,BACONE99
          PACK      KEY25,SIBAWAR,SIBACAT,SIBACST,SIBAREQ,SP70
          MATCH     KEY12,KEY25
          GOTO      BACONE99 IF NOT EQUAL
.
          MOVE      TOTALREC,SIBPAQT
          ASSIGN    SIBAQTY-TOTALREC,SIBPBQT
.
          CALL      WRPIC000
.
          ASSIGN    SIBAQTY-TOTALREC,SIBAQTY
          IF        SIBAQTY=0
            CALL      DESIBA2
          ELSE
            CALL      UPSIBA2
          ENDIF
.
BACONE99  RETURN
.-----------------------------------------------
. Write to Picking Sheet File for Back Orders
.-----------------------------------------------
WRPIC000  CALL      GETREQ00    * Post Requisition File Entry
.
          MOVE      SIIEWAR,SIBPWAR    * Warehouse
          MOVE      SIIECAT,SIBPCAT    * Catalog
          MOVE      SIBAQTY,SIBPRQT    * Quantity Required
          MOVE      BACKDEL,SIBPDEL    * Delivery Details
          MOVE      SIRACST,SIBPCST    * Cost Centre
          MOVE      SIIERAS,SIBPRAC    * Rack&Shelf
          MOVE      SIRATYP,SIBPTYP    * Req Type
          MOVE      SIRAREQ,SIBPREQ    * Req No.
          MOVE      SP2,SIBPPFL
          MOVE      SIBARESI,SIBPRESI  * Restock ID             Quote 9817
          PACK    KEY83,SIBPWAR,SIBPCST,SIBPDEL,SIBPRAC,SIBPCAT,SIBPTYP,SIBPREQ
          CALL      RASIBP1
          IF        OVRCD=1
            CALL      WRSIBP1
          ENDIF
.
          SUB       SIBPAQT,SIIESOH
          CALL      UPSIIE1
.
          PACK      SIITPER,SIPEYEAR,SIPEPER,SP70
          MOVE      SIBPWAR,SIITWAR            * Warehouse
          MOVE      SIBPCAT,SIITCAT            * Catalog
          ASSIGN    SIBPAQT*SEQ,SIITQTY        * Quantity
          ASSIGN    SEQ*SIBPAQT*SIIAAVC,SIITAMT
          MOVE      SIBPCST,SIITCST            * Cost Centre
          PACK      SIITREQ,SIBPTYP,SIBPREQ
          MOVE      "6",SIITTYP                * Back Order Requisition
          MOVE      SP7,SIITPUR                * Order Number
          MOVE      SIIESOH,SIITSOH            * Stock on Hand
          MOVE      SP70,SIITSPA               * Spare
.
          MOVE      PRGID,SIITPRG
          MOVE      PORT,SIITPOR
          MOVE      PASSCODE,SIITOPR
          PACK      SIITDAT,CCC,CYY,CMM,CDD
          REP       " 0",SIITDAT
          REPEAT
            CLOCK     TIME,SIITTIM
            PACK      KEY28,SIITWAR,SIITCAT,SIITDAT,SIITTIM,SP70
            CALL      RASIIT1
          UNTIL     OVRCD=1
          CALL      WRSIIT1
.
          ASSIGN    SIBPAQT,SIUSQTY        * Quantity
          ASSIGN    SIBPAQT*SIIAAVC,SIUSCST
.
          MOVE      SIBACST,KEY5
          CALL      RDSICA1
.
          CALL      SINUSAGE
.
          RETURN
.------------------------------------------------------------
. Write Backorder Requisition Details
.------------------------------------------------------------
GETREQ00  PACK      KEY8,ANSB,Z70
          CALL      RSSIRA1
          CALL      RPSIRA1
          IF        OVRCD=1
            MOVE      ZERO,F7
          ELSE
            MOVE      SIRAREQ,F7
          ENDIF
.
          MOVE      SP70,SIRADEL
          PACK      KEY8,SIBAREQ,SP70
          CALL      RDSIRA1
          MOVE      SIRADEL,BACKDEL
.
GETREQ10  ADD       ONE,F7
          PACK      KEY8,ANSB,F7
          CALL      RDSIRA1
          COMPARE   ZERO,OVRCD
          GOTO      GETREQ10 IF EQUAL
.
          UNPACK    KEY8,SIRATYP,SIRAREQ   * Move in details
          MOVE      SIBACST,SIRACST
          MOVE      ZERO,SIRAIND
          PACK      SIRADAT,CCC,CYY,CMM,CDD
          REP       " 0",SIRADAT
          ASSIGN    SIBPAQT*SIIAAVC,SIRATOT
.
          CLEAR     SIRADEL
          APPEND    "From Req'n : ",SIRADEL
          APPEND    SIBAREQ,SIRADEL
          APPEND    " Stock Transfer : ",SIRADEL
          APPEND    SITBNUM,SIRADEL
          APPEND    SP70,SIRADEL
          RESET     SIRADEL
.
          CALL      WRSIRA1                * Write to Header File
.
          PACK      KEY20,SIRATYP,SIRAREQ,SIBAWAR,SIBACAT
          UNPACK    KEY20,SIRBTYP,SIRBREQ,SIRBWAR,SIRBCAT
          CALL      RASIRB1
          IF        OVRCD=0
            CALL      DESIRA1
            GOTO      GETREQ10
          ELSE
            MOVE      SIBAQTY,SIRBRQT
            MOVE      SIBPAQT,SIRBIQT
            ASSIGN    SIBPAQT*SIIAAVC,SIRBAMT
            UNPACK    SP70,SIRBBCH,SIRBLED,SIRBACC,SIRBSPA
            MOVE      SIRADAT,SIRBDAT
            CALL      WRSIRB1              * Write to Details File
          ENDIF
          RETURN
.----------------------------------------------------------------------
. Keyin Date
.----------------------------------------------------------------------
KDATE000  PACK      TRDATE,CCC,CYY,CMM,CDD,SP70
          REP       " 0",TRDATE
          UNPACK    TRDATE,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          BRANCH    OVRCD,KDATE000
          PACK      TRDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
.---- get period ----
.
          MOVE      TRDATE,SIPEDATE
          CALL      RSIPE0000          * get period
          IF        OVRCD=1
            CLEAR     DISPMSG
            APPEND    "No Period For ",DISPMSG
            APPEND    CPCDATE,DISPMSG
            APPEND    " - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KDATE000
          ENDIF
          IF        SIPELOC=1
            CLEAR     DISPMSG
            APPEND    "Year/Period ",DISPMSG
            APPEND    SIPEYEAR,DISPMSG
            APPEND    SLASH,DISPMSG
            APPEND    SIPEPER,DISPMSG
            APPEND    " Locked - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KDATE000
          ENDIF
          PACK      DPERIOD,SIPEPER,SLASH,SIPEYEAR,SP70
.
KDATE999  RETURN
.----------------------------------------------------------------------
. Keyin REFF
.----------------------------------------------------------------------
KREFF000
          KEYIN     *PCCOL:CVERT,*V2LON,TRREF
          PACK      TRREF,TRREF,SP70
.
          MATCH     EXITCHAR,TRREF     * exitchar entered ?
          GOTO      KREFF970 IF EQUAL
.
          IF        ACCEPT=1
            PACK      SKEY15,SCPSPID,SCPSSID,SCPSROW,SCPSCOL,SP70
            MOVE      CCOL,CURRYRDT
            MOVE      CVERT,CURRYRMT
            CALL      ADDREC00         * add record if in insert
.
            PACK      KEY15,SKEY15,SP70
            UNPACK    KEY15,SCPSPID,SCPSSID,SCPSROW,SCPSCOL
            CALL      RDSCPS1
            MOVE      ZERO,ACCEPT
          ENDIF
.
          MATCH     SP70,TRREF         * nothing entered ?
          GOTO      KREFF950 IF EQUAL
.
KREFF900  MOVE      ZERO,EXIT
          GOTO      KREFF999
.
KREFF950  MOVE      ONE,EXIT
          GOTO      KREFF999
.
KREFF970  MOVE      TWO,EXIT
.
KREFF999  RETURN
.**********************************************************************
.  KCODF -  Keyin from code                             Called By ML
.        Requires - CCOL, CVERT
.        Returns  - EXIT     (1=quit)
.**********************************************************************
KCODF000  CALL      KSIWSA00
          IF        (EXIT=1)&(ACCEPT=1)
            GOTO      KCODF950
          ENDIF
.
          BRANCH    EXIT,KCODF000,KCODF950
          PACK      FROMCODE,SIWAWAR,SP70
          PACK      FROMDESC,SIWADES,SP70
.
          MATCH     FROMCODE,TOCODE    * from and to warehouses identical ?
          GOTO      KCODF820 IF EQUAL
          GOTO      KCODF900
.
.---- error messages ----
.
KCODF820  CLEAR     DISPMSG
          APPEND    "From and To Warehouses Cannot be Identical - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KCODF000
.
.
KCODF900  MOVE      ZERO,EXIT          * continue
          GOTO      KCODF999
.
KCODF950  MOVE      TWO,EXIT           * quit
.
KCODF999  RETURN
SELITM00  MOVE      SITB1MKY,KEY11
          CALL      RDSITB1
          IF        OVRCD=1
            MOVE      "Invalid Selection - ",DISPMSG
            BEEP
            CALL      MESSAGE1
          ELSE
            CALL      REDITM00
            CALL      SC01L000
          ENDIF
.
SELITM99  RETURN
.
.**********************************************************************
.  KCODT -  Keyin to code                             Called By ML
.        Requires - CCOL, CVERT
.        Returns  - EXIT     (1=quit)
.**********************************************************************
KCODT000  CALL      KSIWSA00
          BRANCH    EXIT,KCODT000,KCODT950
          PACK      TOCODE,SIWAWAR,SP70
          PACK      TODESC,SIWADES,SP70
.
          MATCH     FROMCODE,TOCODE    * from and to warehouses identical ?
          GOTO      KCODT820 IF EQUAL
.
          GOTO      KCODT900
.
.---- error messages ----
.
KCODT820  CLEAR     DISPMSG
          APPEND    "From and To Warehouses Cannot be Identical - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KCODT000
.
.
KCODT900  MOVE      ZERO,EXIT          * continue
          GOTO      KCODT999
.
KCODT950  MOVE      TWO,EXIT           * quit
.
KCODT999  RETURN
.----------------------------------------------------------------------
. Keyin transfer amount
.----------------------------------------------------------------------
KTAMT000  KEYIN     *PCCOL:CVERT,*V2LON,AMOUNT;
.
          IF        !(AMOUNT>0)
            CLEAR     DISPMSG
            APPEND    "Must be Greater Than Zero - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KTAMT000
          ENDIF
.
          IF        AMOUNT>FROMSOH
            CLEAR     DISPMSG
            APPEND    "Must Not be Greater Than Amount on Hand - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KTAMT000
          ENDIF
.
          MOVE      AMOUNT,SITBQTY
          ASSIGN    AMOUNT*EXPECTCS,TOTALCS
.
KTAMT999  RETURN
ADDREC00
ADDRE100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
.
          REPEAT
            CALL      CF01L000 * Clear Fields
            MOVE      SP70,SITBCAT
            MOVE      ZERO,SITBQTY
            MOVE      ONE,ADDFLAG
.
            CALL      SBACK000 * Display Background
            MOVE      ZERO,ACCEPT
            CALL      DX01L000 * Display Fields
            MOVE      ONE,ACCEPT
            CALL      SF01L000 * Select Fields
          UNTIL     EXIT<>0
.
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
.
          MOVE      ZERO,ADDFLAG
          MOVE      ZERO,ACCEPT
          CALL      SBACK000 * Display Background
          CALL      DF00L000 * Display Fields
.
ADDRE999  RETURN
.---------------------------------------------------------
. Display Fields for : Sub-Screen
.---------------------------------------------------------
DX01L000
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DX01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DX01L900
          MATCH    PRGID,SCPSPID
          GOTO     DX01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DX01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DX01L010 IF NOT EQUAL
.
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,DX01L010,DX01L010,DX01L010,DX01L101:
                            DX01L102,DX01L103,DX01L104,DX01L105:
                            DX01L106,DX01L010,DX01L107,DX01L108:
                            DX01L109,DX01L110,DX01L111,DX01L112:
                            DX01L113,DX01L114,DX01L115,DX01L116:
                            DX01L117,DX01L118,DX01L119,DX01L010:
                           DX01L010,DX01L010,DX01L010,DX01L010:
                           DX01L010,DX01L120
          GOTO     DX01L010
.
DX01L101
          GOTO     DX01L010
.
DX01L102
          GOTO     DX01L010
.
DX01L103
          UNPACK    TRDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     DX01L010
.
DX01L104
          MOVE      TRREF,VAR
          CALL      DISPITEM
          GOTO     DX01L010
.
DX01L105
          MOVE      FROMCODE,VAR
          CALL      DISPITEM
          GOTO     DX01L010
.
DX01L106
          MOVE      FROMDESC,VAR
          CALL      DISPITEM
          GOTO     DX01L010
.
DX01L107
          MOVE      TOCODE,VAR
          CALL      DISPITEM
          GOTO     DX01L010
.
DX01L108
          MOVE      TODESC,VAR
          CALL      DISPITEM
          GOTO     DX01L010
.
DX01L109
          GOTO     DX01L010
.
DX01L110
          GOTO     DX01L010
.
DX01L111
          MOVE      DPERIOD,VAR
          CALL      DISPITEM
          GOTO     DX01L010
.
DX01L112
          GOTO     DX01L010
.
DX01L113
          GOTO     DX01L010
.
DX01L114
          UNPACK    SITAUD1,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     DX01L010
.
DX01L115
          UNPACK    SITAUD2,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     DX01L010
.
DX01L116
          MOVE      SITAUR1,VAR
          CALL      DISPITEM
          GOTO     DX01L010
.
DX01L117
          MOVE      SITAUR2,VAR
          CALL      DISPITEM
          GOTO     DX01L010
.
DX01L118
          MOVE      NO,YESNO
          MOVE      SITAUY1,FORM2
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     DX01L010
.
DX01L119
          MOVE      NO,YESNO
          MOVE      SITAUY2,FORM2
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     DX01L010
.
DX01L120
          GOTO     DX01L010
DX01L900
DX01L999
          RETURN
P01D0000
          COMPARE   ZERO,ADDFLAG
          GOTO      P01D1000 IF EQUAL
.
.---- add new record ----
.
          PACK      KEY11,SITANUM,Z70
          CALL      RSSITB1
          CALL      RPSITB1
          IF        OVRCD=1
            MOVE      ZERO,F3
          ELSE
            MATCH     SITBNUM,SITANUM
            IF        @EQUAL
              MOVE      SITBUNI,F3
            ELSE
              MOVE      ZERO,F3
            ENDIF
          ENDIF
.
          MOVE      AMOUNT,SITBQTY
          PACK      SITBACC,RACKSHEL,SP70
          PACK      SITBCAT,SIIACAT,SP70
          REPEAT
            ADD       ONE,F3
            PACK      KEY11,SITANUM,F3
            CALL      RASITB1
          UNTIL     OVRCD=1
          UNPACK    KEY11,SITBNUM,SITBUNI
          CALL      WRSITB1
          GOTO      P01D9999
.
.---- update existing record ----
.
P01D1000
          MOVE      AMOUNT,SITBQTY
          PACK      SITBACC,RACKSHEL,SP70
          PACK      SITBCAT,SIIACAT,SP70
          CALL      UPSITB1
.
P01D9999  RETURN
.----------------------------------------------------------------------
. Keyin Catalog Code
.----------------------------------------------------------------------
KCATC000
          PACK      RACKSHEL,RACKSHEL,SP70
          PACK      SITBACC,RACKSHEL,SP70
          MOVE      FROMCODE,SIWAWAR
          CALL      KSIIEA00           * keyin catalog code
          MOVE      SIIECAT,SIIACAT
          BRANCH    EXIT,KCATC950,KCATC950
.
          PACK      SITBCAT,SIIACAT,SP70
.
          COMPARE   "0",SIIANON        * stock type ?
          GOTO      KCATC850 IF NOT EQUAL
          COMPARE   "1",SIIASUS        * suspended ?
          GOTO      KCATC860 IF EQUAL
          COMPARE   "3",SIIASUS        * suspended ?
          GOTO      KCATC860 IF EQUAL
.
          PACK      KEY5,FROMCODE,SP70
          PACK      KEY12,SIIACAT,KEY5,SP70
          CALL      RDSIIE1
          COMPARE   ONE,OVRCD          * record doesn't exist ?
          GOTO      KCATC800 IF EQUAL
          COMPARE   ZERO,SIIESOH       * no stock on hand ?
          GOTO      KCATC810 IF EQUAL
          CALL      SISIWK1
          COMPARE   ZERO,OVRCD         * stocktake in progress ?
          GOTO      KCATC830 IF EQUAL
          COMPARE   "1",SIIESUS        * suspended ?
          GOTO      KCATC840 IF EQUAL
          COMPARE   "3",SIIESUS        * suspended ?
          GOTO      KCATC840 IF EQUAL
.
          PACK      KEY5,TOCODE,SP70
          PACK      KEY12,SIIACAT,KEY5,SP70
          CALL      RDSIIE1
          IF        OVRCD=0
            CALL      SISIWK1
            COMPARE   ZERO,OVRCD       * stocktake in progress ?
            GOTO      KCATC830 IF EQUAL
            COMPARE   "1",SIIESUS      * suspended ?
            GOTO      KCATC840 IF EQUAL
            COMPARE   "3",SIIESUS      * suspended ?
            GOTO      KCATC840 IF EQUAL
          ELSE
            MOVE      ZERO,TOSOH
            PACK      DISPMSG,SP70,SP70
            CALL      MESSAGE2
            KEYIN     *P1:24,*EL,"No Location for Warehouse ":
                      *DV,*V2LON,TOCODE,*HOFF:
                      ", Enter Rack/Shelf : ",*V2LON,RACKSHEL;
            PACK      RACKSHEL,RACKSHEL,SP70
            PACK      SITBACC,RACKSHEL,SP70
            CALL      MESSAGE3
          ENDIF
.
          CALL      REDITM00           * read data
          MOVE      ONE,ACCEPT
          GOTO      KCATC900
.
.---- error messages ----
.
KCATC800  CLEAR     DISPMSG
          APPEND    "Catalog Does Not Exist Warehouse ",DISPMSG
          APPEND    KEY5,DISPMSG
          APPEND    " - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KCATC000
.
KCATC810  CLEAR     DISPMSG
          APPEND    "No Stock at Warehouse ",DISPMSG
          APPEND    KEY5,DISPMSG
          APPEND    " - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KCATC000
.
KCATC830  CLEAR     DISPMSG
          APPEND    "Stocktake in Progress Warehouse ",DISPMSG
          APPEND    KEY5,DISPMSG
          APPEND    " - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KCATC000
.
KCATC840  CLEAR     DISPMSG
          APPEND    "Suspended for Requisitions at Warehouse ",DISPMSG
          APPEND    KEY5,DISPMSG
          APPEND    " - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KCATC000
.
KCATC850  CLEAR     DISPMSG
          APPEND    "Must be a Stock Item - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KCATC000
.
KCATC860  CLEAR     DISPMSG
          APPEND    "Catalog Suspended for Requisitions - ",DISPMSG
          CALL      MESSAGE1
          GOTO      KCATC000
.
KCATC900  MOVE      ZERO,EXIT
          GOTO      KCATC999
.
KCATC950  MOVE      TWO,EXIT
          MOVE      ZERO,DELEFLAG           * allows delete record
.
KCATC999  RETURN
.
.---- delete record ----
.
DELD0000  BRANCH    DELEFLAG,DELD9999       * delete record permitted ?
.
          MOVE      SITBUNI,SAVUNID
          PACK      KEY11,SITBNUM,SITBUNI,SP70
          CALL      RASITB1
          BRANCH    OVRCD,DELD9999
.
          PACK      KEY11,SITBNUM,SITBUNI,SP70
          CALL      DESITB1
.
          MOVE      SAVUNID,F3
          ADD       ONE,F3
.
DELD0100  MOVE      F3,SITBUNI
          PACK      KEY11,SITBNUM,SITBUNI,SP70
          CALL      RDSITB1
          BRANCH    OVRCD,DELD9999
.
          SUB       ONE,F3
          MOVE      F3,SITBUNI
.
          PACK      KEY11,SITBNUM,SITBUNI,SP70
          CALL      WRSITB1
.
          ADD       ONE,F3
          MOVE      F3,SITBUNI
          PACK      KEY11,SITBNUM,SITBUNI,SP70
          CALL      DESITB1
.
          ADD       ONE,F3
          GOTO      DELD0100
.
DELD9999  RETURN
BACLIN00  MOVE     SIBTCST,KEY5
          CALL     RDSICA1
          RETURN
BALAN000  MOVE      ZERO,EXIT
          MOVE      ZERO,F12P2
          PACK      KEY8,SP70
          CALL      TSSIBT12
BALAN100  CALL      TKSIBT12
          BRANCH    OVRCD,BALAN200
          ADD       SIBTISS,F12P2
          GOTO      BALAN100
.
BALAN200  MOVE      ZERO,EXIT
          COMPARE   F12P2,TOTALREC
          GOTO      BALAN999 IF EQUAL
          PACK      DISPMSG,SP70,SP70
          CALL      MESSAGE2
.
BALAN300  DISPLAY   *P1:24,*EL,*B,"Received :",*V2LON,TOTALREC,*HOFF:
                    "  Allocated :",*V2LON,F12P2,*HOFF," Continue (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? "
          KEYIN     *P71:24,*V2LON,ANS
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      BALAN400 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      BALAN300 IF NOT EQUAL
          MOVE      ONE,EXIT
          CALL      MESSAGE3
          GOTO      BALAN999
.
BALAN400
          IF        F12P2>TOTALREC
            MOVE      ONE,EXIT
          ELSE
            MOVE      ZERO,EXIT
          ENDIF
.
          CALL      MESSAGE3
.
BALAN999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       SINBACIO/INC
          INC       SINBATIO/INC
          INC       SINBOTIO/INC
          INC       SINBPSIO/INC
          INC       SINCCAIO/INC
          INC       SINCCBIO/INC
          INC       SINCCEIO/INC
          INC       SINCCFIO/INC
          INC       SINCCHIO/INC
          INC       SINCGBIO/INC
          INC       SINCIAIO/INC
          INC       SINCIAKY    
          INC       SINCIEIO/INC
          INC       SINCIEKY    
          INC       SINCIFIO/INC
          INC       SINCIHIO/INC
          INC       SINCIIIO/INC
          INC       SINITMIO/INC
          INC       SINNATIO/INC
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINPRQIO/INC
          INC       SINREAIO/INC
          INC       SINREBIO/INC
          INC       SINSUAIO/INC
          INC       SINSUBIO/INC
          INC       SINTRAIO/INC
          INC       SINTRBIO/INC
          INC       SINUSAGE    
          INC       SINWARIO/INC
          INC       SINWRKCD    
          INC       SINWRKIO/INC
          INC       SINWSEIO/INC
          INC       SINWSEKY    
.
          INC       STDGENCD
.
