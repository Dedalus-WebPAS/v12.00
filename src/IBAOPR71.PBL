.*****************************************************************************
.* System    :   Operating Room Management                                   *
.* Program   :   IBAOPR71                                                    *
.* Desc      :   Daily Theatre List (SJOG)                                   *
.*****************************************************************************
.* Date      :   07/11/2007                                                  *
.* Author    :   Steve Armstrong  CAR 154532                                 *
.* Function  :   This program is hard-coded for SJOG to list cases for       *
.*               theatres 1 thru 7 for a given day.  The report is printed   *
.*               in CPI17 (17 characters/inch) and is 183 characters wide.   *
.* Mods      :                                                               *
.*****************************************************************************
.*       V11.05.01 01/04/2025 Ebon Clements  TSK 0950532                     *
.*                 Removed HUND31 definition now in IBACOMM                  *
.*       V11.03.02 19/04/2023   Thanh T      TSK 0909393                     *
.*                 Changed PROC0000 to use RSOPDEA6 instead of RSOPDEA5      *
.*       V11.03.01 20/03/2023   PJ Le Febour TSK 0909393                     *
.*                 amended KEY19 to KEY22 for theatre index changes          *
.*       V10.04.02 23/06/2014   J.Tan        CAR 261630                      *
.*                 Removed port number from temp file name                   *
.*       V10.04.01 17/06/2014  Ania P            CAR 299864                  *
.*                 Hardcoded page 2 with new theatres/etc                    *
.*        V9.09.01 13/11/2007  Steve Armstrong   CAR 154875                  *
.*               - Removed check for date in the future.  Now any valid date *
.*                 is acceptable - past, present or future.                  *
.*               - Mods to leave Anaesthetist blank if not known.            *
.*               - Mods to print the case number and the surname in bold.    *
.*****************************************************************************
.
          INC       STD001FD
          INC       IBASEQFD/INC            * Sequential Numbers File
          INC       TFILEVAR/INC            * Generate Temp File Name
          INC       WEBERRFD/INC            * Web Server Error Logging
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       IBACONFD/INC
          INC       OPRCLIFD/INC
          INC       OPRCONFD/INC
          INC       OPRDEAFD/INC
          INC       OPRDEBFD/INC
          INC       OPRSESFD/INC
          INC       PATCALAG/INC
          INC       PATCONFD/INC
          INC       PATDO1FD/INC
          INC       PATMA1FD/INC
.
.         Temporary File Definition
.         -------------------------
.
.         Filename : opr71axx.dat          (xx = port id)
.
SESTEMP1  IFILE SQL, FIXED=40, KEY="U1-4,5-10"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
DXLINNUM  DIM       4           4           1       Line number
DXTHENUM  DIM       6           6           5       Theatre Code (opropraf)
XLINDATA  DIM       25         25          11       Line Data
XPRTATTR  FORM      1           2          36       Print Attributes Flag
.                                                    0 = Off
.                                                    1 = On (Bold/Underline)
XCASEFLG  FORM      1           2          38       Case Line Flag
.                                                    0 = First line for case
.                                                    1 = Not first line for case
.
.End of Record                             40
.
. Redefine FORM fields from key
. -----------------------------
XLINNUMB  FORM      4
XTHETNUM  FORM      6
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ANAENAME  DIM       25
.
BJDAY     FORM      3
BOLDFLAG  FORM      1             * Bold print flag
.                                   0 = bold print
.                                   1 = normal print
.
CASELINE  DIM       25
CJDAY     FORM      3
CMDLINE   DIM       80
COUNTER   FORM      2
CURRDATE  DIM       8             * Current Date (ccyymmdd)
CURRTIME  DIM       5             * Current Time (hh:mm)
.
DAYDESCR  DIM       9             * Day description (eg WEDNESDAY)
DAYNUMBR  DIM       2
DATEDESC  DIM       2
DIM3      DIM       3
DIM6      DIM       6
DIM125    DIM       125           * Heading Line Description
DIM165    DIM       165
.
FRSTPASS  FORM      1
FORM3     FORM      3
FORM6     FORM      6
.
HRDIM2    DIM       2
.
LASTTHET  FORM      6
LINELENG  FORM      2
LINENUMB  FORM      4
.
MINDIM3   DIM       3
MONTHDES  DIM       9             * Month description (eg NOVEMBER)
.
PG2FIRST  FORM      1             * First line of Page 2?
PCOLUMN   FORM      3             * print column
PSAGECON  DIM       3
PSAGETYP  DIM       3
.
RECCOUNT  FORM      8             * record (case) count
PAGEFLAG  FORM      1             * page flag
.                                     0 = first page
.                                     1 = not first page
REPTDATE  DIM       8             * Report Date (ccyymmdd)
.
SAVECLIN  DIM       6             * saved clinic code
SAVETIME  DIM       5             * saved session start time (hh:mm)
STRNGLEN  FORM      3
SURGNAME  DIM       19
.
TEMPFILE  DIM       8
THEARRAY  FORM      4[13]         * theatre array (for next line number)
TIMEDISP  DIM       7
TMPSTRNG  DIM       25
.
.
.
. PROGRAM CONSTANTS
. -----------------
MONDAY    INIT      "MONDAY   "
TUESDAY   INIT      "TUESDAY  "
WEDNSDAY  INIT      "WEDNESDAY"
THURSDAY  INIT      "THURSDAY "
FRIDAY    INIT      "FRIDAY   "
SATURDAY  INIT      "SATURDAY "
SUNDAY    INIT      "SUNDAY   "
.
JANUARY   INIT      "JANUARY  "
FEBRUARY  INIT      "FEBRUARY "
MARCH     INIT      "MARCH    "
APRIL     INIT      "APRIL    "
MAY       INIT      "MAY      "
JUNE      INIT      "JUNE     "
JULY      INIT      "JULY     "
AUGUST    INIT      "AUGUST   "
SEPTMBER  INIT      "SEPTEMBER"
OCTOBER   INIT      "OCTOBER  "
NOVMBER   INIT      "NOVEMBER "
DECMBER   INIT      "DECEMBER "
.
CHARST    INIT      "st"
CHARND    INIT      "nd"
CHARRD    INIT      "rd"
CHARTH    INIT      "th"
.
ERASE     INIT      "iserase "
.
HUND57    FORM      "157"
.
ISBUILD   INIT      "isbuild "
.
SP11      INIT      "           "
SP12      INIT      "            "
SP55      INIT      "                                                       "
.
TIMEAM    INIT      "am"
TIMEPM    INIT      "pm"
.
PIPE      INIT      "|"
.
UKEY      INIT      " 40 U1-4,5-10"
.
.
PRGID     INIT      "IBAOPR71"
PRGNAM    INIT      "Daily Theatre List"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
          CALL      CREA0000               * create temp file
.
MAIN0100  CALL      GDAT0000               * get report date
          BRANCH    EXIT,MAIN9000          * nothing entered
.
MAIN1000  CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0100:        * no
                          MAIN9000         * cancel
.
MAIN2000  CALL      CLRA0000               * clear line array
          CALL      CLRT0000               * clear temp file
.
          CALL      PROC0000               * process
.
          CALL      PRIN0000               * print report
.
MAIN9000  CALL      KILL0000               * remove temp file
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"oprdetaf";
          OPEN      OPRDETA6,"oprdetaf"
.
          DISPLAY   *P64:24,"oprdetbf";
          OPEN      OPRDETB1,"oprdetbf"
.
          DISPLAY   *P64:24,"oprcliaf";
          OPEN      OPRCLIA1,"oprcliaf"
.
          DISPLAY   *P64:24,"oprsesaf";
          OPEN      OPRSESA1,"oprsesaf"
          OPEN      OPRSESA7,"oprsesaf"
.
          DISPLAY   *P64:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,TWO;*182,CSNAME
          READ      CONTROLF,FORTY;*111,OPCNCLSU
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,TEMPFILE
.
          MOVE      ZERO,PAGEFLAG                * initialise for first page
.
INIT9999  RETURN
+
.****************************************************************************
.*                               GDAT0000              Called by: MAIN0000  *
.*                  Get user to input report date                           *
.* Returns:  EXIT  0 = Valid date entered                                   *
.*                 1 = Nothing entered                                      *
.*           REPTDATE - report date (ccyymmdd)                              *
.****************************************************************************
.
GDAT0000  DISPLAY   *P1:11,*EF,"Report Date :"
.
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CCENTRY
          MOVE      TEN1,CVERT
          MOVE      TEN3,CCOL
.
          CALL      IBACLOCK                     * get current date/time
.
          PACK      CURRDATE,CCC,CYY,CMM,CDD     * load current date
          REP       " 0",CURRDATE
          UNPACK    CURRDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CTIMEIS,CURRTIME             * load current time
          REP       " 0",CURRTIME
.
          CALL      KEYDATE                      * key in report date
          BRANCH    OVRCD,GDAT9100
          PACK      REPTDATE,CCENT,CYEAR,CMON,CDAY
.
.         Format the Heading line description
.
          MOVE      "THEATRE LIST: ",DIM125
          ENDSET    DIM125
.
.         Append the day name (eg Monday)
.
          CALL      DAYOFWEK
          LOAD      DAYDESCR,WEEKDAY,MONDAY,TUESDAY,WEDNSDAY,THURSDAY,FRIDAY:
                                     SATURDAY,SUNDAY
          STRIP     DAYDESCR
          APPEND    DAYDESCR,DIM125
          APPEND    SP1,DIM125
.
.         Append the Month name (eg January)
.
          UNPACK    REPTDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,FORM2
          LOAD      MONTHDES,FORM2,JANUARY,FEBRUARY,MARCH,APRIL,MAY,JUNE,JULY:
                                   AUGUST,SEPTMBER,OCTOBER,NOVMBER,DECMBER
          STRIP     MONTHDES
          APPEND    MONTHDES,DIM125
          APPEND    SP1,DIM125
.
.         Append the report day (eg, 1-31)
.
          MOVE      CDAY,FORM2
          IF        FORM2 > 9
            MOVE      CDAY,DAYNUMBR
          ELSE
            UNPACK    CDAY,ANS,ANS
            PACK      DAYNUMBR,ANS,SP1
            STRIP     DAYNUMBR
          ENDIF
          APPEND    DAYNUMBR,DIM125
.
.         Append day suffix (eg "th")
.
          LOAD      DATEDESC,FORM2,CHARST,CHARND,CHARRD,CHARTH,CHARTH:      * 5
                                   CHARTH,CHARTH,CHARTH,CHARTH,CHARTH:      * 10
                                   CHARTH,CHARTH,CHARTH,CHARTH,CHARTH:      * 15
                                   CHARTH,CHARTH,CHARTH,CHARTH,CHARTH:      * 20
                                   CHARST,CHARND,CHARRD,CHARTH,CHARTH:      * 25
                                   CHARTH,CHARTH,CHARTH,CHARTH,CHARTH:      * 30
                                   CHARST
          APPEND    DATEDESC,DIM125
          APPEND    COMMA,DIM125
          APPEND    SP1,DIM125
          APPEND    CCENT,DIM125
          APPEND    CYEAR,DIM125
          APPEND    " AS AT ",DIM125
.
.         Append current time in 12 hr format
.
          UNPACK    CURRTIME,HRDIM2,MINDIM3
          MOVE      HRDIM2,FORM2
.
          COMPARE   FORM2,TEN2                        * Is hour 12 ?
          IF        @EQUAL
            PACK      TIMEDISP,FORM2,MINDIM3,TIMEPM   * yes - format as pm time
            GOTO      GDAT2000
          ENDIF
.
          COMPARE   FORM2,TEN2                        * Is hour > 12 ?
          IF        @LESS
            SUB       TEN2,FORM2                      * yes - format 12 hr time
            MOVE      FORM2,HRDIM2
            UNPACK    HRDIM2,ANS,ANS
            PACK      TIMEDISP,ANS,MINDIM3,TIMEPM
            GOTO      GDAT2000
          ENDIF
.
.         Time is before 12:00
.
GDAT1000  IF        FORM2 > 9
            PACK      TIMEDISP,FORM2,MINDIM3,TIMEAM
          ELSE
            UNPACK    HRDIM2,ANS,ANS
            PACK      TIMEDISP,ANS,MINDIM3,TIMEAM
          ENDIF
.
GDAT2000  APPEND    TIMEDISP,DIM125
          APPEND    SP1,DIM125
.
.         Append formatted current date (dd/mm/ccyy)
.
          UNPACK    CURRDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          APPEND    CPCDATE,DIM125
          RESET     DIM125
.
          MOVE      ZERO,EXIT
          GOTO      GDAT9999
.
GDAT9100  MOVE      ONE,EXIT
.
GDAT9999  RETURN
+
.****************************************************************************
.*                               CLRA0000              Called by: MAIN0000  *
.*                     Clear the theatre line counting array                *
.****************************************************************************
.
CLRA0000  MOVE      ZERO,COUNTER                 * initialise counter
          WHILE     COUNTER < 13 
            ADD       ONE,COUNTER                * increment counter
            MOVE      ZERO,THEARRAY[COUNTER]     * initialise array component
          DO
.
CLRA9999  RETURN
+
.****************************************************************************
.*                               PROC0000              Called by: MAIN0000  *
.*       Loop through the oprdetaf table looking for records for            *
.*       theatre's 1-7 where the status is booked, pre-admitted or          *
.*       admitted.  For every valid record found, write a record to the     *
.*       temp file for printing later.                                      *
.****************************************************************************
.
PROC0000  DISPLAY   *P1:24,*EL,"Processing:";
          MOVE      SP5,SAVETIME                 * initialise saved time
          MOVE      SP6,SAVECLIN                 * initialise saved clinic
.
          PACK      KEY26,REPTDATE,SP30
          CALL      RSOPDEA6                     * position at start of day
PROC0500  CALL      RKOPDEA6                     * read next record
          BRANCH    OVRCD,PROC9999               * eof - finished
.
          MATCH     OPDADATE,REPTDATE            * same date still ?
          GOTO      PROC9999 IF NOT EQUAL        * no - finished collating data
.
          DISPLAY   *P13:24,*EL,*V2LON,OPDATIME,OPDACLIN,OPDACASE,OPDAADMN;
.
.         Check that the status is valid
.
          BRANCH    OPDASTAT,PROC1000:           * pre-admitted
                             PROC1000:           * admitted
                             PROC0500:           * cancelled
                             PROC0500            * discharged
.
.         We have a booked, pre-admitted or admitted case, so determine
.         which theatre this case is for
.
PROC1000  MATCH     SP6,OPDATHET                 * blank theatre ?
          GOTO      PROC0500 IF EQUAL            * yes - ignore record
.
.         We are only interested in the following theatre's:
.         Theatre 1   opdathet = "01    "
.         Theatre 2   opdathet = "02    "
.         Theatre 3   opdathet = "03    "
.         Theatre 4   opdathet = "04    "
.         Theatre 5   opdathet = "05    "
.         Theatre 6   opdathet = "06    "
.         Theatre 7   opdathet = "07    "
.
          MATCH     "CATH",OPDATHET
          IF        @EQUAL
            MOVE      "10",OPDATHET
          ENDIF
          MATCH     "PR1",OPDATHET
          IF        @EQUAL
            MOVE      "11",OPDATHET
          ENDIF
          MATCH     "PR2",OPDATHET
          IF        @EQUAL
            MOVE      "12",OPDATHET
          ENDIF
          MATCH     "PR3",OPDATHET
          IF        @EQUAL
            MOVE      "13",OPDATHET
          ENDIF
.
          SQUEEZE   OPDATHET
          MOVELPTR  OPDATHET,FORM1
          LOAD      DIM6,FORM1,SP5,SP4,SP3,SP2,SP1,OPDATHET
          IF        FORM1 < 6
            ENDSET    DIM6
            APPEND    OPDATHET,DIM6
            RESET     DIM6
          ENDIF
.
          TYPE      DIM6                         * numeric code ?
          GOTO      PROC0500 IF NOT EQUAL        * no - ignore
.
          MOVE      DIM6,FORM6
          BRANCH    FORM6,PROC2000:              * Theatre 1
                          PROC2000:              * Theatre 2
                          PROC2000:              * Theatre 3
                          PROC2000:              * Theatre 4
                          PROC2000:              * Theatre 5
                          PROC2000:              * Theatre 6
                          PROC2000:              * Theatre 7
                          PROC2000:              * Theatre 8
                          PROC2000:              * Theatre 9
                          PROC2000:              * Theatre 10
                          PROC2000:              * Theatre 11
                          PROC2000:              * Theatre 12
                          PROC2000               * Theatre 13
.
          GOTO      PROC0500                     * invalid theatre - ignore
.
PROC2000  MATCH     SAVETIME,OPDATIME            * same session time still ?
          IF        @EQUAL
            MATCH     SAVECLIN,OPDACLIN          * yes - same clinic still ?
            GOTO      PROC5000 IF EQUAL          * yes
          ENDIF
.
.         We have a different session time or surgeon/clinic, so we
.         need to write the session header data.
.         First, increment the line count so that there is a blank line
.         after the previous session.
.
          IF        THEARRAY[FORM6] <> 0
            CALL      GLIN0000                   * get next line # for theatre
          ENDIF
.
.         Write the session header data
.
          CALL      DOCT0000                     * get surgeon details
          CALL      ANAE0000                     * get anaesthetist details
          MOVE      OPDATIME,SAVETIME            * save new time
          MOVE      OPDACLIN,SAVECLIN            * save new clinic
.
PROC5000  CALL      GPAT0000                     * get PMI details
          GOTO      PROC0500                     * get next record
.
PROC9999  RETURN
+
.****************************************************************************
.*                               GLIN0000              Called by: PROC0000  *
.*                                                                DOCT0000  *
.*                                                                ANAE0000  *
.*                                                                GPAT0000  *
.*                   Get the next line number for a given theatre.          *
.* Requires:  FORM6 - Theatre number                                        *
.* Returns:   FORM4 - Next Line Number for the Theatre (FORM6)              *
.****************************************************************************
.
GLIN0000  ADD       ONE,THEARRAY[FORM6]          * increment for next line #
          MOVE      THEARRAY[FORM6],FORM4        * load next line #
.
GLIN9999  RETURN
+
.****************************************************************************
.*                               ANAE0000              Called by: PROC0000  *
.*               Get the anaesthetist details                               *
.* Requires:  OPDAHOSP - hospital                                           *
.*            OPDADATE - theatre session date                               *
.*            OPDATIME - theatre session time                               *
.*            OPDACLIN - theatre clinic/surgeon                             *
.* Returns:   ANAENAME - formatted anaesthetist name                        *
.****************************************************************************
.
ANAE0000  MOVE      SP30,ANAENAME                * initialise name
.
.         Get the session record
.
          PACK      KEY22,OPDAHOSP,OPDADATE,OPDATIME,OPDACLIN,SP70
          CALL      RDOPSES1
          BRANCH    OVRCD,ANAE9000
.
.         A doctor code exists, so get the doctor details
.
          MOVE      OPSEANAE,KEY6
ANAE1000  CALL      RDDOCT1                      * doctor record found ?
          BRANCH    OVRCD,ANAE9000               * no - finished
.
          MOVE      DSNAME,PACSNAME              * yes - format name
          MOVE      DGNAME,PACGNAME
          MOVE      DTITL,PACTITLE
          MOVE      ONE,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,ANAENAME            * load formatted dr. name
.
ANAE9000  CALL      GLIN0000                     * get next line no. for theatre
          MOVE      FORM4,XLINNUMB
          MOVE      FORM6,XTHETNUM
          MOVE      ANAENAME,XLINDATA
          MOVE      ONE,XPRTATTR
          CALL      WRTEMP1                      * write temp file record
.
ANAE9999  RETURN
+
.****************************************************************************
.*                               DOCT0000              Called by: PROC0000  *
.*                   Get the doctor (surgeon/clinic) details                *
.* Requires:  OPDACLIN - theatre clinic code                                *
.* Returns:   SURGNAME - formatted surgeon name/clinic description          *
.****************************************************************************
.
DOCT0000  MOVE      "Unknown Clinic/Doct",SURGNAME    * initialise name
.
          MOVE      OPDACLIN,KEY6
          BRANCH    OPCNCLSU,DOCT1000            * using doctor code
.
          CALL      RDOPCLI1                     * theatre clinic record found ?
          BRANCH    OVRCD,DOCT9000               * no - error
.
          MOVE      OPCLDESC,SURGNAME            * load default clinic desc.
          MATCH     SP6,OPCLDOCT                 * doctor code blank ?
          GOTO      DOCT9000 IF EQUAL            * yes - use default desc.
.
.         A doctor code exists, so get the doctor details
.
          MOVE      OPCLDOCT,KEY6
DOCT1000  CALL      RDDOCT1                      * doctor record found ?
          BRANCH    OVRCD,DOCT9000               * no - use default desc.
.
          MOVE      DSNAME,PACSNAME              * yes - format name
          MOVE      DGNAME,PACGNAME
          MOVE      DTITL,PACTITLE
          MOVE      ONE,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,SURGNAME            * load formatted dr. name
.
DOCT9000  CALL      GLIN0000                     * get next line no. for theatre
          MOVE      FORM4,XLINNUMB
          MOVE      FORM6,XTHETNUM
          MOVE      OPDATIME,XLINDATA
          ENDSET    XLINDATA
          APPEND    SP1,XLINDATA
          APPEND    SURGNAME,XLINDATA
          RESET     XLINDATA
          MOVE      ONE,XPRTATTR
          CALL      WRTEMP1                      * write temp file record
.
DOCT9999  RETURN
+
.****************************************************************************
.*                               GPAT0000              Called by: PROC0000  *
.*             Get the patient details (sex, age & surname) and format      *
.*             this into the first case data line.                          *
.* Requires:  OPDAURNO - patient U/R number                                 *
.*            OPDADATE - session date                                       *
.*            OPDACASE - case number                                        *
.* Returns:   CASELINE - Patient Sex, Age and Surname (Formatted)           *
.****************************************************************************
.
GPAT0000  MOVE      ZERO,XCASEFLG                * set flag for case first line
          MOVE      SP30,CASELINE
          CLEAR     CASELINE
.
.         Append the case number to start the case line
.
          SQUEEZE   OPDACASE
          MOVE      OPDACASE,CASELINE
          ENDSET    CASELINE
          APPEND    ". ",CASELINE
.
          MOVE      OPDAURNO,KEY8
          CALL      RDMAST1                       * patient record found ?
          IF        OVRCD = 1
            APPEND    "(Unknown)",CASELINE        * no - finished
            GOTO      GPAT9900
          ENDIF
.
          APPEND    PSEX,CASELINE                 * load sex
          MOVE      OPDADATE,AGEDATE              * get age as at session date
          CALL      CALCAGE
          MOVE      PSAGEYRS,DIM3
          SQUEEZE   DIM3
          APPEND    DIM3,CASELINE
.
.         Append surname
.
          APPEND    LBRACK,CASELINE
          SQUEEZE   PSNAME
          APPEND    PSNAME,CASELINE
          APPEND    RBRACK,CASELINE
.
GPAT9900  RESET     CASELINE
          MOVELPTR  CASELINE,LINELENG            * get line length
.
.         If line is filled, write a temp file record, otherwise
.         
          IF        LINELENG = 25
            CALL      GLIN0000                   * get next line no. for theatre
            MOVE      FORM4,XLINNUMB
            MOVE      FORM6,XTHETNUM
            MOVE      CASELINE,XLINDATA
            MOVE      ZERO,XPRTATTR
            CALL      WRTEMP1                    * write temp file record
            MOVE      ONE,XCASEFLG               * set for subsequent case line
            MOVE      SP30,CASELINE
            CLEAR     CASELINE
            MOVE      ZERO,LINELENG
          ELSE
            ENDSET    CASELINE
          ENDIF
.
          CALL      FDES0000
.
GPAT9999  RETURN
+
.****************************************************************************
.*                               FDES0000              Called by: GPAT0000  *
.*                  Format the operation description lines.                 *
.*        Loop through each character of all operation description lines    *
.*        building up 25 character lines of comment based on each word that *
.*        is found (looking for a space, signifying the end of a word).     *
.* Requires: OPDADES1/2/3 - Operation description lines                     *
.****************************************************************************
.
.         Load the three operation description lines into a single 165
.         character field ready for processing
.
FDES0000  PACK      DIM165,SP70,SP70,SP70
          CLEAR     DIM165
.
          MATCH     SP55,OPDADES1                * Op description line 1 blank ?
          GOTO      FDES1000 IF EQUAL            * yes - check line 2
.
          STRIP     OPDADES1
          APPEND    OPDADES1,DIM165              * load description 1
          APPEND    SP1,DIM165
.
FDES1000  MATCH     SP55,OPDADES2                * Op description line 2 blank ?
          GOTO      FDES2000 IF EQUAL            * yes - check line 3
.
          STRIP     OPDADES2
          APPEND    OPDADES2,DIM165              * load description 2
          APPEND    SP1,DIM165
.
FDES2000  MATCH     SP55,OPDADES3                * Op description line 3 blank ?
          GOTO      FDES3000 IF EQUAL            * yes - 
.
          STRIP     OPDADES3
          APPEND    OPDADES3,DIM165              * load description 3
          APPEND    SP1,DIM165
.
FDES3000  RESET     DIM165
          STRIP     DIM165
.
.         All the descriptions have been loaded, so get the total string length
.         for all three description
.
          MOVELPTR  DIM165,STRNGLEN              * get string length
          COMPARE   ZERO,STRNGLEN                * any data in field ?
          GOTO      FDES9000 IF EQUAL            * no - print without comments
.
.         There is data in one or more of the operation description fields,
.         so process the string one character at a time, building 25
.         character lines of comment based on each word encountered.
.         As each line is filled, a record is written to the temp file for
.         printing later on.
.
          MOVE      SP30,TMPSTRNG                * initialise temp word string
          CLEAR     TMPSTRNG
          APPEND    SP1,TMPSTRNG
.
          MOVE      ZERO,FORM3                   * initialise FP position
          WHILE     (FORM3 < STRNGLEN)
            MOVE      DIM165,ANS
            MATCH     SP1,ANS                    * space found ?
            IF        @EQUAL
              RESET     TMPSTRNG                 * yes - load word
              MOVELPTR  TMPSTRNG,FORM2
              IF        FORM2 <> 0
                IF        (LINELENG+FORM2) < 26
                  APPEND    TMPSTRNG,CASELINE    * line still has room for word
                  MOVE      SP30,TMPSTRNG
                  CLEAR     TMPSTRNG
                  APPEND    SP1,TMPSTRNG
                  ADD       FORM2,LINELENG
                ELSE
                  RESET     CASELINE             * new line required
                  CALL      GLIN0000             * get next line no. for theatre
                  MOVE      FORM4,XLINNUMB
                  MOVE      FORM6,XTHETNUM
                  PACK      XLINDATA,CASELINE,SP30
                  MOVE      ZERO,XPRTATTR
                  CALL      WRTEMP1              * write record to temp file
                  MOVE      ONE,XCASEFLG         * set for subsequent case line
                  MOVE      SP30,CASELINE        * reset vars for next word
                  CLEAR     CASELINE
                  MOVE      FORM2,LINELENG
                  APPEND    TMPSTRNG,CASELINE
                  MOVE      SP30,TMPSTRNG
                  CLEAR     TMPSTRNG
                  APPEND    SP1,TMPSTRNG
                ENDIF
              ENDIF
            ELSE
              APPEND    ANS,TMPSTRNG             * add character to temp string
            ENDIF
            BUMP      DIM165                     * move to next character
            ADD       ONE,FORM3                  * increment FP position
          DO
.
.         The last character of the full string has been processed so
.         check if there is sufficient room for the current word
.         or whether it needs to go on a new line (in which case we have
.         to write a record for the current line as it is, before creating
.         a new line for the last word).
.
          RESET     TMPSTRNG
          MOVELPTR  TMPSTRNG,FORM2
          IF        (LINELENG+FORM2) < 26
            APPEND    TMPSTRNG,CASELINE          * add word to current line
            MOVE      SP30,TMPSTRNG
            CLEAR     TMPSTRNG
            APPEND    SP1,TMPSTRNG
            ADD       FORM2,LINELENG
          ELSE
            RESET     CASELINE                   * new line required
            CALL      GLIN0000                   * get next line no. for theatre
            MOVE      FORM4,XLINNUMB
            MOVE      FORM6,XTHETNUM
            PACK      XLINDATA,CASELINE,SP30
            MOVE      ZERO,XPRTATTR
            CALL      WRTEMP1
            MOVE      ONE,XCASEFLG               * set for subsequent case line
            MOVE      SP30,CASELINE              * initialise vars for last word
            CLEAR     CASELINE
            RESET     TMPSTRNG
            APPEND    TMPSTRNG,CASELINE
          ENDIF
.
.         Write the last record to the temp file for the current case
.
FDES9000  RESET     CASELINE
          CALL      GLIN0000                     * get next line no. for theatre
          MOVE      FORM4,XLINNUMB
          MOVE      FORM6,XTHETNUM
          PACK      XLINDATA,CASELINE,SP30
          MOVE      ZERO,XPRTATTR
          CALL      WRTEMP1                      * write new temp file record
.
FDES9999  RETURN
+
.****************************************************************************
.*                               PRIN0000              Called by: MAIN0000  *
.*                  Process the the temp file records for printing.         *
.*          Loop through the temp file based on the line # and the theatre  *
.*          (therefore printing line 1 for each theatre, followed by line   *
.*          2 for each theatre, etc).
.****************************************************************************
.
PRIN0000  MOVE      ZERO,CPAGENO                 * initialise page count
          MOVE      ZERO,RECCOUNT                * initialise record count
          CALL      IBACLOCK                     * get current date/time
PRIN0100  CALL      HEAD0000                     * print header
          MOVE      SP10,KEY10
          CALL      RSTEMP1                      * position at start of file
PRIN0500  CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,PRIN9500               * eof - finished
.
          COMPARE   "8",XTHETNUM                 * 1st Page? Print only Th1-7
          IF        !@LESS                       
            IF        FRSTPASS=0
              GOTO      PRIN0500                 
            ENDIF
          ELSE
            IF        FRSTPASS=1
              GOTO      PRIN0500
            ENDIF
          ENDIF
 
          COMPARE   CLNO,SIXTY                   * page full ?
          IF        @LESS
            CALL      LINE0000                   * print line at page bottom
            CALL      HEAD0000                   * yes
          ENDIF
.
          ADD       ONE,RECCOUNT                 * increment record count
          IF        RECCOUNT = 1 
            MOVE      ONE,LINENUMB               * initialise line number
            MOVE      ZERO,LASTTHET              * initialise last theatre
            COMPARE   ONE,XTHETNUM               * theatre 1 record ?
            CALL      PCOL0000 IF NOT EQUAL      * no - print preceding cols.
          ELSE
            IF        PG2FIRST=1
              MOVE      ZERO,PG2FIRST
              MOVE      ONE,LINENUMB               * initialise line number
              MOVE      ZERO,LASTTHET              * initialise last theatre
              COMPARE   "8",XTHETNUM               * theatre 1 record ?
              CALL      PCOL0000 IF NOT EQUAL      * no - print preceding cols.
            ELSE
              COMPARE   LINENUMB,XLINNUMB          * same line number still ?
              IF        !@EQUAL
                CALL      RCOL0000                 * no - print remaining cols.
                ADD       ONE,LINENUMB             * increment line count
                CALL      BLIN0000                 * check if next line is blank
                CALL      PCOL0000                 * print preceding cols.
              ENDIF
            ENDIF
          ENDIF
.
          CALL      DISP0000                     * print line of data
          GOTO      PRIN0500                     * get next record
.
PRIN9500  CALL      RCOL0000                     * print remaining columns
          CALL      LINE0000

          IF        FRSTPASS=0
            MOVE      ONE,FRSTPASS               * Now print Theatre 8 - PR3
            MOVE      "1",PG2FIRST               * First Line of Page 2
            GOTO      PRIN0100
          ELSE
            PRINT     *CPI17,*N,*1,"*** End of Report ***",*CPI12
          ENDIF
.
PRIN9999  RETURN
+
.****************************************************************************
.*                            RCOL0000                 Called by: PRIN0000  *
.*           The line is complete or the report is complete, so             *
.*           print any remaining columns on the current line.               *
.*           (Eg, if last case printed was for theatre 3, then we need to   *
.*           print the pipes between theatres 4, 5, 6 and 7 as well as the  *
.*           end of line pipe).                                             *
.****************************************************************************
.
RCOL0000  BRANCH    LASTTHET,RCOL2000:           * Theatre 1
                             RCOL3000:           * Theatre 2
                             RCOL4000:           * Theatre 3
                             RCOL5000:           * Theatre 4
                             RCOL6000:           * Theatre 5
                             RCOL7000:           * Theatre 6
                             RCOL8000:           * Theatre 7
                             RCOL2000:           * Theatre 8
                             RCOL3000:           * Theatre 9
                             RCOL4000:           * Theatre Cath Lab
                             RCOL5000:           * Theatre PR1
                             RCOL6000:           * Theatre PR2
                             RCOL7000            * Theatre PR3
.
RCOL1000  PRINT     *CPI17,*1,PIPE;
.
RCOL2000  PRINT     *CPI17,*27,PIPE;
.
RCOL3000  PRINT     *CPI17,*53,PIPE;
.
RCOL4000  PRINT     *CPI17,*79,PIPE;
.
RCOL5000  PRINT     *CPI17,*105,PIPE;
.
RCOL6000  PRINT     *CPI17,*131,PIPE;
.
RCOL7000  PRINT     *CPI17,*157,PIPE;
.
RCOL8000  PRINT     *CPI17,*183,PIPE,*CPI12
.
          ADD       ONE,CLNO                     * increment line count
          MOVE      ZERO,LASTTHET                * initialise last theatre
.
RCOL9999  RETURN
+
.****************************************************************************
.*                            PCOL0000                 Called by: PRIN0000  *
.*           If the new line is starting with data for a theatre other      *
.*           than "1", then print the preceding columns for the new line.   *
.*           (Eg, if first case printed is for theatre 4, then we need to   *
.*           print the start of line pipe as well as the pipes between      *
.*           theatres 1, 2 and 3).                                          *
.****************************************************************************
.
PCOL0000  BRANCH    XTHETNUM,PCOL9999:           * Theatre 1
                             PCOL2000:           * Theatre 2
                             PCOL3000:           * Theatre 3
                             PCOL4000:           * Theatre 4
                             PCOL5000:           * Theatre 5
                             PCOL6000:           * Theatre 6
                             PCOL7000:           * Theatre 7
                             PCOL9999:           * Theatre 8
                             PCOL2000:           * Theatre 9
                             PCOL3000:           * Theatre Cath Lab 
                             PCOL4000:           * Theatre PR1
                             PCOL5000:           * Theatre PR2
                             PCOL6000            * Theatre PR3
.
PCOL2000  PRINT     *CPI17,*1,PIPE;
          GOTO      PCOL9999
.
PCOL3000  PRINT     *CPI17,*1,PIPE,*27,PIPE;
          GOTO      PCOL9999
.
PCOL4000  PRINT     *CPI17,*1,PIPE,*27,PIPE,*53,PIPE;
          GOTO      PCOL9999
.
PCOL5000  PRINT     *CPI17,*1,PIPE,*27,PIPE,*53,PIPE,*79,PIPE;
          GOTO      PCOL9999
.
PCOL6000  PRINT     *CPI17,*1,PIPE,*27,PIPE,*53,PIPE,*79,PIPE,*105,PIPE;
          GOTO      PCOL9999
.
PCOL7000  PRINT     *CPI17,*1,PIPE,*27,PIPE,*53,PIPE,*79,PIPE,*105,PIPE:
                    *131,PIPE;
.
PCOL9999  RETURN
+
.****************************************************************************
.*                            DISP0000                 Called by: PROC0000  *
.*                  Print a case line record                                *
.****************************************************************************
.
DISP0000  COMPARE   ZERO,LASTTHET                * first theatre for line ?
          GOTO      DISP0500 IF EQUAL            * yes
.
.         This is not the first theatre record for the line, so we need
.         to check if the previous theatre column was printed.  If not,
.         then we need to print the appropriate pipes that lie between
.         the previously printed column and the current theatre column.
.         Note: this only applies for columns 2 thru 6.
.
          IF        (XTHETNUM-LASTTHET) > 1
            WHILE     LASTTHET < (XTHETNUM-1)
              ADD       ONE,LASTTHET
              IF        LASTTHET = 2|LASTTHET = 9
                PRINT     *CPI17,*27,PIPE,*CPI12;
              ENDIF
              IF        LASTTHET = 3|LASTTHET = 10
                PRINT     *CPI17,*53,PIPE,*CPI12;
              ENDIF
              IF        LASTTHET = 4|LASTTHET = 11
                PRINT     *CPI17,*79,PIPE,*CPI12;
              ENDIF
              IF        LASTTHET = 5|LASTTHET = 12
                PRINT     *CPI17,*105,PIPE,*CPI12;
              ENDIF
              IF        LASTTHET = 6|LASTTHET = 13
                PRINT     *CPI17,*131,PIPE,*CPI12;
              ENDIF
            DO
          ENDIF
.
.         Print the data based on whether it is doctor/anaesthetist details,
.         or patient/operation description.
.
DISP0500  BRANCH    XTHETNUM,DISP1000:           * Theatre 1
                             DISP2000:           * Theatre 2
                             DISP3000:           * Theatre 3
                             DISP4000:           * Theatre 4
                             DISP5000:           * Theatre 5
                             DISP6000:           * Theatre 6
                             DISP7000:           * Theatre 7
                             DISP1000:           * Theatre 8
                             DISP2000:           * Theatre 9
                             DISP3000:           * Theatre Cath Lab
                             DISP4000:           * Theatre PR1
                             DISP5000:           * Theatre PR2
                             DISP6000            * Theatre PR3
.
DISP1000  IF        XPRTATTR = 1
            STRIP     XLINDATA
            PRINT     *CPI17,*1,PIPE,*V2LON,*ULON,*+,XLINDATA,*-,*HOFF,*CPI12;
          ELSE
            MOVE      ONE,PCOLUMN
            CALL      FLIN0000
          ENDIF
          GOTO      DISP9000
.
DISP2000  IF        XPRTATTR = 1
            STRIP     XLINDATA
            PRINT     *CPI17,*27,PIPE,*V2LON,*ULON,*+,XLINDATA,*-,*HOFF,*CPI12;
          ELSE
            MOVE      TWENTY7,PCOLUMN
            CALL      FLIN0000
          ENDIF
          GOTO      DISP9000
.
DISP3000  IF        XPRTATTR = 1
            STRIP     XLINDATA
            PRINT     *CPI17,*53,PIPE,*V2LON,*ULON,*+,XLINDATA,*-,*HOFF,*CPI12;
          ELSE
            MOVE      FIFTY3,PCOLUMN
            CALL      FLIN0000
          ENDIF
          GOTO      DISP9000
.
DISP4000  IF        XPRTATTR = 1
            STRIP     XLINDATA
            PRINT     *CPI17,*79,PIPE,*V2LON,*ULON,*+,XLINDATA,*-,*HOFF,*CPI12;
          ELSE
            MOVE      SEVENTY9,PCOLUMN
            CALL      FLIN0000
          ENDIF
          GOTO      DISP9000
.
DISP5000  IF        XPRTATTR = 1
            STRIP     XLINDATA
            PRINT     *CPI17,*105,PIPE,*V2LON,*ULON,*+,XLINDATA,*-,*HOFF,*CPI12;
          ELSE
            MOVE      HUND05,PCOLUMN
            CALL      FLIN0000
          ENDIF
          GOTO      DISP9000
.
DISP6000  IF        XPRTATTR = 1
            STRIP     XLINDATA
            PRINT     *CPI17,*131,PIPE,*V2LON,*ULON,*+,XLINDATA,*-,*HOFF,*CPI12;
          ELSE
            MOVE      HUND31,PCOLUMN
            CALL      FLIN0000
          ENDIF
          GOTO      DISP9000
.
DISP7000  IF        XPRTATTR = 1
            STRIP     XLINDATA
            PRINT     *CPI17,*157,PIPE,*V2LON,*ULON,*+,XLINDATA,*-,*HOFF,*CPI12;
          ELSE
            MOVE      HUND57,PCOLUMN
            CALL      FLIN0000
          ENDIF
.
DISP9000  MOVE      XTHETNUM,LASTTHET            * save last theatre number
.
DISP9999  RETURN
+
.****************************************************************************
.*                            FLIN0000                 Called by: DISP0000  *
.*           Print the line data for the column according to whether it is  *
.*           the first line for a case, or subsequent lines for the         *
.*           case.  If it is the first line, then print the case number     *
.*           and the surname in bold (the case number ends in a dot         *
.*           while the surname is delimited by brackets).  If not the       *
.*           first line, then print whole line as normal (not bold).        *
.*  Requires: PCOLUMN - print column                                        *
.*            XLINDATA - data line to be printed                            *
.****************************************************************************
.
FLIN0000  PRINT     *CPI17,*PCOLUMN,PIPE;        * set for 17 cpi 
.
          COMPARE   ONE,XCASEFLG                 * first line for case ?
          IF        @EQUAL
            ADD       ONE,PCOLUMN                * no - increment column
            PRINT     *PCOLUMN,XLINDATA;         * prit whole line
            GOTO      FLIN9000
          ENDIF
.
.         This is the first line for the case, so print 1 character at a time,
.         determining if it should be bold or not.
.
          STRIP     XLINDATA                     * remove trailing blanks
          MOVELPTR  XLINDATA,STRNGLEN            * get actual string length
.
.         Turn on the bold flag as the first line for the case starts with
.         the case number which needs to be printed in bold.
.
          MOVE      ZERO,BOLDFLAG
.
.         Loop through the string, 1 character at a time
.
          MOVE      ZERO,FORM2                   * initialise FP position
          WHILE     (FORM2 < STRNGLEN)           
            ADD       ONE,PCOLUMN                * increment column
            MOVE      XLINDATA,ANS               * load next character to print
.
.           The case number ends with a dot, so if this character is
.           a dot, turn bold off now that the case number has been printed
.
            MATCH     DOT,ANS
            IF        @EQUAL
              MOVE      ONE,BOLDFLAG
            ENDIF
.
.           The surname starts with a left bracket, so if this character is
.           a "(", turn bold on to print the surname. 
.
            MATCH     ANS,LBRACK
            IF        @EQUAL
              MOVE      ZERO,BOLDFLAG
            ENDIF
.
.           The surname ends with a right bracket, so if this character is
.           a ")", turn bold off now that the surname has been printed
.
            MATCH     ANS,RBRACK
            IF        @EQUAL
              MOVE      ONE,BOLDFLAG
            ENDIF
.
.           Print character
.
            IF        BOLDFLAG = 0
              PRINT     *PCOLUMN,*V2LON,ANS,*HOFF;
            ELSE
              PRINT     *PCOLUMN,ANS;
            ENDIF
            BUMP      XLINDATA                   * move FP to next character
            ADD       ONE,FORM2                  * increment FP position
          DO
.
FLIN9000  PRINT     *CPI12;                      * reset to 12 cpi
.
FLIN9999  RETURN
+
.****************************************************************************
.*                            BLIN0000                 Called by: PRIN0000  *
.*                       Print blank line if required                       *
.****************************************************************************
.
BLIN0000  IF        ((XLINNUMB-LINENUMB)) = 1
            PRINT     *CPI17,*1,PIPE:
                      *27,PIPE:
                      *53,PIPE:
                      *79,PIPE:
                      *105,PIPE:
                      *131,PIPE:
                      *157,PIPE:
                      *183,PIPE,*CPI12
.
            ADD       ONE,LINENUMB               * increment line count
          ENDIF
.
BLIN9999  RETURN
+
.****************************************************************************
.*                            HEAD0000                 Called by: PRIN0000  *
.*                       Print page heading                                 *
.****************************************************************************
.
.         If this is not the first date printed, then we need to form feed
.         to the next page for the next date report.
.
HEAD0000  IF        PAGEFLAG = 0
            MOVE      ONE,PAGEFLAG               * set for multipage
          ELSE
            PRINT     *F;                        * form feed for new page
          ENDIF
.
          CALL      LINE0000                     * draw top line across page
          ADD       ONE,CPAGENO                  * increment page count
.
          UNPACK    CURRDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *CPI17,*1,PIPE:
                    *2,*V2LON,DIM125:
                    *130,CSNAME:
                    *168,"Page: ",CPAGENO," of 2",*HOFF:
                    *183,PIPE,*CPI12
.
          CALL      LINE0000                     * draw line across page
.
          IF        FRSTPASS=0
            PRINT     *CPI17,*1,PIPE,*V2LON,"Theatre 1",*HOFF:
                      *27,PIPE,*V2LON,"Theatre 2",*HOFF:
                      *53,PIPE,*V2LON,"Theatre 3",*HOFF:
                      *79,PIPE,*V2LON,"Theatre 4",*HOFF:
                      *105,PIPE,*V2LON,"Theatre 5",*HOFF:
                      *131,PIPE,*V2LON,"Theatre 6",*HOFF:
                      *157,PIPE,*V2LON,"Theatre 7",*HOFF:
                      *183,PIPE,*CPI12
          ELSE
            PRINT     *CPI17,*1,PIPE,*V2LON,"Theatre 8",*HOFF:
                      *27,PIPE,*V2LON,"Theatre 9",*HOFF:
                      *53,PIPE,*V2LON,"Cath Lab",*HOFF:
                      *79,PIPE,*V2LON,"Procedure Room 1",*HOFF:
                      *105,PIPE,*V2LON,"Procedure Room 2",*HOFF:
                      *131,PIPE,*V2LON,"Procedure Room 3",*HOFF:
                      *157,PIPE,*V2LON,"",*HOFF:
                      *183,PIPE,*CPI12
          ENDIF
.
          CALL      LINE0000                     * draw line across page
          MOVE      FIVE,CLNO                    * set line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: PRIN0000  *
.*                      Draw line across page                     HEAD0000  *
.****************************************************************************
.
LINE0000  PRINT     *CPI17,"*-----------------------------------------------":
                    "-------------------------------------------------------":
                    "-------------------------------------------------------":
                    "------------------------*",*CPI12
.
LINE9999  RETURN
+
.*****************************************************************************
.*                              CLRT0000               Called by: MAIN0000   *
.*             Clear temp file records before preparing new report           *
.*****************************************************************************
.
CLRT0000  MOVE      SP10,KEY10
          CALL      RSTEMP1                      * position at start of file
          CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,CLRT9999               * eof - finished
.
          PACK      KEY10,XLINNUMB,XTHETNUM
          CALL      DETEMP1                      * delete record
          GOTO      CLRT0000                     * get next record
.
CLRT9999  RETURN
+
.*****************************************************************************
.*                              CREA0000               Called by: MAIN0000   *
.*             Create a new temporary file                                   *
.*****************************************************************************
.
CREA0000  CALL      KILL0000                     * remove existing file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,TEMPFILE,UKEY
          EXECUTE   CMDLINE,TASKID               * create temporary index file
.
          OPEN      SESTEMP1,TEMPFILE            * open temp index file
.
CREA9999  RETURN
+
.*****************************************************************************
.*                              KILL0000               Called by:  MAIN0000  *
.*               Close and erase the temporary file                CREA0000  *
.*****************************************************************************
.
KILL0000  CLOSE     SESTEMP1                     * close file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
KILL9999 RETURN
+
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                    *
.****************************************************************************
.
RSTEMP1   READ      SESTEMP1,KEY10;;
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          READ      SESTEMP1,KEY10;DXLINNUM,DXTHENUM,XLINDATA,XPRTATTR,XCASEFLG
          GOTO      OVERCOND IF OVER
          MOVE      DXLINNUM,XLINNUMB
          MOVE      DXTHENUM,XTHETNUM
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    SESTEMP1;DXLINNUM,DXTHENUM,XLINDATA,XPRTATTR,XCASEFLG
          GOTO      OVERCOND IF OVER
          MOVE      DXLINNUM,XLINNUMB
          MOVE      DXTHENUM,XTHETNUM
          RETURN
.
RPTEMP1   MOVE      ZERO,OVRCD
          READKP    SESTEMP1;DXLINNUM,DXTHENUM,XLINDATA,XPRTATTR,XCASEFLG
          GOTO      OVERCOND IF OVER
          MOVE      DXLINNUM,XLINNUMB
          MOVE      DXTHENUM,XTHETNUM
          RETURN
.
WRTEMP1   MOVE      XLINNUMB,DXLINNUM
          MOVE      XTHETNUM,DXTHENUM
          WRITE     SESTEMP1,KEY10;DXLINNUM,DXTHENUM,XLINDATA,XPRTATTR,XCASEFLG
          RETURN
.
UPTEMP1   MOVE      XLINNUMB,DXLINNUM
          MOVE      XTHETNUM,DXTHENUM
          UPDATE    SESTEMP1;DXLINNUM,DXTHENUM,XLINDATA,XPRTATTR,XCASEFLG
          RETURN
.
DETEMP1   DELETE    SESTEMP1,KEY10
          RETURN
+
. =========================================================================
.  I/O Includes
. =========================================================================
.
          INC       STD001IO
          INC       TFILENAM                * Generate Temp File Name
          INC       IBASEQIO/INC            * Sequential Numbers File
          INC       WEBERRIO/INC            * Web Server Error Logging
.
          INC       CALCAGE
          INC       DAYOFWEK
.
          INC       OPRCLIIO/INC
          INC       OPRDEAIO/INC
          INC       OPRDEBIO/INC
          INC       OPRSESIO/INC
          INC       PATDO1IO/INC
          INC       PATMA1IO/INC
