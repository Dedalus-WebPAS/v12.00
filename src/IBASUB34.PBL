.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.11.01 07/01/2009 Steve Armstrong  CAR 185927
.          Extended length of CMDLINE from 127 to 140.
.          Recompiled for changes to SINALLCD.
.-------------------------------------------------------
. V9.04.01  13.04.2005 Peter Vela CAR 59696
.           Recompiled for SINSUAFD
. V9.02.01  10.07.2002  Glenn Saunders
.           Recompile for changes in CALCUSAG.
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B02 30.01.2001 Charles Handaya
.           Recompiled for CALCUSAG fix of Cost Amount inc. or excld. GST
. VF.09.B01 09.11.2000 Charles Handaya
.           Recompiled for CALCUSAG sincchaf changes
.           Modification of Warehouse Security
.-------------------------------------------------------
. VF.01.00  18.02.2000 Charles Handaya
.           Add Export Function  srf 637199
.           Change All to standard Range Keyins
.-------------------------------------------------------
. VF.00.02  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
.           29.12.1999 Charles Handaya
.           Recompiled for Fixing Audit Date (CCYYMMDD)
. VF.00.01  12.08.1999 Sandra Barcham
.           Fix product group sequence
.           srf 633015
.-------------------------------------------------------
EXPORTFL  FILE      ASCII, FIXED=400     * Export File (Adjust Length to Suit)
EXPORTFN  DIM       8                    * Export File Name
TABDELM   EQU       0x09                 * Tab Delimiter
.
CMDLINE   DIM       140
CHECKCAT  DIM       7
CHECKSUB  DIM       5
FIRSTRUN  FORM      1
KEY13CHK  DIM       13
NONDESC   INIT      "Non-Stock Catalog"
PRNDESC1  DIM       53
PRNDESC2  DIM       53
RNGEWARE  FORM      1
SVKEY6    DIM       6
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASUB34
.   Function      :   Catalog/Cost Centre Usage Report        
.   Generated  On :   08/01/2009
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSMASFD/INC
          INC       SINALLFD/INC
          INC       SINCCAFD/INC
          INC       SINCCHFD/INC
          INC       SINCIAFD/INC
          INC       SINCICFD/INC
          INC       SINCIEFD/INC
          INC       SINCIFFD/INC
          INC       SINCODFD/INC
          INC       SINCONFD/INC
          INC       SINFACFD/INC
          INC       SINNATFD/INC
          INC       SINPERFD/INC
          INC       SINPOAFD/INC
          INC       SINPOCFD/INC
          INC       SINPOFFD/INC
          INC       SINSUAFD/INC
          INC       SINTMPDF/INC
          INC       SINWARFD/INC
          INC       SINWSEFD/INC
.=========================
.Local Variable Definition
.-------------------------
FROMCATA  DIM      68 * Scr 00 Fld     1
TOCATA    DIM      68 * Scr 00 Fld     2
FROMGRP   DIM      36 * Scr 00 Fld     3
TOGRP     DIM      36 * Scr 00 Fld     4
FROMDESC  DIM      30 * Scr 00 Fld    10
TODESC    DIM      30 * Scr 00 Fld    11
FROMCOST  DIM      46 * Scr 00 Fld    12
TOCOST    DIM      46 * Scr 00 Fld    13
REPTSEQ   FORM      1 * Scr 00 Fld    14
SEQDESC   DIM      15 * Scr 00 Fld    15
WAREDESC  DIM      40 * Scr 00 Fld    17
INCLTYPE  FORM      1 * Scr 00 Fld    18
INCLDESC  DIM      30 * Scr 00 Fld    19
EXPORTYN  FORM      1 * Scr 00 Fld    20
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASUB34"
PRGNAM    INIT      "Catalog/Cost Centre Usage Report        "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      ONAT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA2,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA3,"apsmasaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA1,"sinccaaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA2,"sinccaaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA1,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA2,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA3,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA4,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA5,"sincchaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA1,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA2,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA3,"sinciaaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA1,"sincicaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA2,"sincicaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA3,"sincicaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA4,"sincicaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA1,"sincieaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA2,"sincieaf"
          DISPLAY   *P56:24,"Opening sincifaf";
          OPEN      SINCIFA1,"sincifaf"
          DISPLAY   *P56:24,"Opening sincifaf";
          OPEN      SINCIFA2,"sincifaf"
          DISPLAY   *P56:24,"Opening sincodaf";
          OPEN      SINCODA1,"sincodaf"
          DISPLAY   *P56:24,"Opening sincodaf";
          OPEN      SINCODA2,"sincodaf"
          DISPLAY   *P56:24,"Opening sinfacaf";
          OPEN      SINFACA1,"sinfacaf"
          DISPLAY   *P56:24,"Opening sinfacaf";
          OPEN      SINFACA2,"sinfacaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA1,"sinperaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA1,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA3,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA4,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA1,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA1,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA3,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA4,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA1,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA2,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA3,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA1,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA2,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA1,"sinwseaf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA2,"sinwseaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Screen                        
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Screen                        
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      SETSCR00
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Screen                        
.-------------------------------------------------------
CF00L000
          MOVE      SP70,FROMCATA
          MOVE      SP70,TOCATA  
          MOVE      SP70,FROMGRP 
          MOVE      SP70,TOGRP   
          MOVE      SP70,SIPEYEAR
          MOVE      SP70,SIPEPER 
          MOVE      SP70,FROMDESC
          MOVE      SP70,TODESC  
          MOVE      SP70,FROMCOST
          MOVE      SP70,TOCOST  
          MOVE      ZERO,REPTSEQ 
          MOVE      SP70,SEQDESC 
          MOVE      SP70,SIWAWAR 
          MOVE      SP70,WAREDESC
          MOVE      ZERO,INCLTYPE
          MOVE      SP70,INCLDESC
          MOVE      ZERO,EXPORTYN
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Screen                        
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Screen                        
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Screen                        
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Screen                        
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Screen                        
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L101,PS00L102,PS00L103,PS00L104:
                            PS00L105,PS00L106,PS00L999,PS00L999:
                            PS00L999,PS00L107,PS00L108,PS00L109:
                            PS00L110,PS00L111,PS00L112,PS00L113:
                            PS00L114,PS00L115,PS00L116,PS00L117
          GOTO     PS00L999
.
PS00L101
          MOVE      FROMCATA,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      TOCATA,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      FROMGRP,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      TOGRP,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      SIPEYEAR,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      SIPEPER,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      FROMDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      TODESC,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      FROMCOST,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          MOVE      TOCOST,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          MOVE      REPTSEQ,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          MOVE      SEQDESC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          MOVE      SIWAWAR,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L114
          CALL      WDESC000
          MOVE      WAREDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L115
          MOVE      INCLTYPE,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L116
          MOVE      INCLDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L117
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Screen                        
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L101,SF00L006,SF00L102,SF00L006:
                            SF00L103,SF00L104,SF00L105,SF00L106:
                            SF00L006,SF00L107,SF00L006,SF00L108:
                            SF00L006,SF00L109,SF00L006,SF00L110:
                            SF00L006,SF00L111,SF00L006,SF00L112
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L101,SF00L020,SF00L102,SF00L020:
                            SF00L103,SF00L104,SF00L020,SF00L020:
                            SF00L020,SF00L107,SF00L020,SF00L108:
                            SF00L020,SF00L109,SF00L020,SF00L110:
                            SF00L020,SF00L111,SF00L020,SF00L112
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
.
.
          MOVE      "    2",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOCATA  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ECAT0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L101
            ENDIF
            BRANCH    EXIT,SF00L101,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMCATA,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    2",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOCATA,VAR       
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L102
.
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOGRP   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EGRP0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L102
            ENDIF
            BRANCH    EXIT,SF00L102,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMGRP,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOGRP,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L103
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KYEAR000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SIPEYEAR,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L104
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KPERD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SIPEPER,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L105
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      REPT0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L106
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L107
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TODESC  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EDES0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L107
            ENDIF
            BRANCH    EXIT,SF00L107,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMDESC,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TODESC,VAR       
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L108
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOCOST  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ECOS0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L108
            ENDIF
            BRANCH    EXIT,SF00L108,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMCOST,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOCOST,VAR       
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L109
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SEQDESC 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ESEQU000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L109
            ENDIF
            BRANCH    EXIT,SF00L109,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      REPTSEQ,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SEQDESC,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L110
          CALL      WDESC000
.
.
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,WAREDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EWARH000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L110
            ENDIF
            BRANCH    EXIT,SF00L110,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          CALL      WDESC000
          MOVE      SIWAWAR,VAR      
          CALL      DISPITEM
          CALL      WDESC000
.
.
          MOVE      "   17",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      WAREDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L111
.
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,INCLDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EINCL000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L111
            ENDIF
            BRANCH    EXIT,SF00L111,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      INCLTYPE,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   19",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      INCLDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L112
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,EXPORTYN
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.------------------------------------------------------------------------
. Open Nato X-Ref File if required
.------------------------------------------------------------------------
ONAT0000  OPEN      CONTROLF,"controlf"
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*143,HNONUSAG
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ONE,HNONUSAG
            WRITAB    CONTROLF,SIXTY3;*143,HNONUSAG
          ENDIF
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*141,INCNNATO
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,INCNNATO
            WRITAB    CONTROLF,SIXTY3;*141,INCNNATO
          ENDIF
.
          IF        INCNNATO=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      SINNATA1,"sinnataf"
            TRAPCLR   IO
            IF        OVRCD=1
              DISPLAY   *P1:24,*EL,*B,"Nato file does not exist. Run fixit.  ";
              CALL      HITENTER
              CHAIN     PGM
            ENDIF
.
            OPEN      SINNATA2,"sinnataf"
          ENDIF
.
ONAT9999  RETURN
.----------------------------------------------------------------------
. Set up screen 00
.----------------------------------------------------------------------
SETSCR00
          MOVE      ONE,ACCEPT              * set accept mode
.
          MOVE      ONE,REPTSEQ             * by catalog
          MOVE      "Catalog Code",SEQDESC
.
          MOVE      ZERO,INCLTYPE           * all catalog types
          MOVE      "All Catalogs",INCLDESC
.
          MOVE      SP70,SIWAWAR            * warehouse code
          CALL      WDESC000
.
          RETURN
WDESC000  MATCH     SP70,SIWAWAR
          IF        @EQUAL
            MOVE      "All Warehouses",WAREDESC
          ELSE
            MATCH     Z70,SIWAWAR
            IF        @EQUAL
              MOVE      "All Warehouses",WAREDESC
            ELSE
              MOVE      SIWADES,WAREDESC
            ENDIF
          ENDIF
          RETURN
.----------------------------------------------------------------------
. Enter Catalog Range
.----------------------------------------------------------------------
ECAT0000  MOVE      "    1",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
          MOVE      ZERO,CKEYTYP
          MATCH     SIWAWAR,SP70
          IF        @EQUAL
            CALL      KSIIAA00
          ELSE
            CALL      KSIIEA00
          ENDIF
          BRANCH    EXIT,ECAT1000,ECAT9999
          MOVE      SIIACAT,FCATALOG
          PACK      FROMCATA,SIIACAT,SP1,SIIADES,SP70
          GOTO      ECAT2000
.
ECAT1000  MOVE      SP70,FCATALOG
          MOVE      "Start                                           ",FROMCATA
.
ECAT2000  MOVE      FROMCATA,VAR
          CALL      DISPITEM
.
          MOVE      "    2",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
          MOVE      ZERO,CKEYTYP
          MATCH     SIWAWAR,SP70
          IF        @EQUAL
            CALL      KSIIAA00
          ELSE
            CALL      KSIIEA00
          ENDIF
          BRANCH    EXIT,ECAT3000,ECAT9999
          MOVE      SIIACAT,TCATALOG
          PACK      TOCATA,SIIACAT,SP1,SIIADES,SP70
          MATCH     FCATALOG,TCATALOG
          GOTO      ECAT9000 IF EQUAL
          GOTO      ECAT9000 IF NOT LESS
          BEEP
          MOVE      "To Catalog Must Be > From Catalog - ",DISPMSG
          CALL      MESSAGE1
.
          MOVE      "    2",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
          GOTO      ECAT0000
.
ECAT3000  PACK      TCATALOG,Z70
          MOVE      "Finish                                          ",TOCATA
.
ECAT9000  MOVE      "    1",FLDID
          CALL      GETPOSIT
.
ECAT9999  RETURN
.
.----------------------------------------------------------------------
. Enter Product Group Range
.----------------------------------------------------------------------
EGRP0000  MOVE      "    3",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
          MOVE      ZERO,CKEYTYP
          CALL      KSISAA00
          BRANCH    EXIT,EGRP1000,EGRP9999
          MOVE      SISACODE,FPRODGP
          PACK      FROMGRP,SISACODE,SP1,SISADESC,SP70
          GOTO      EGRP2000
.
EGRP1000  MOVE      SP70,FPRODGP
          MOVE      "Start                                           ",FROMGRP
.
EGRP2000  MOVE      FROMGRP,VAR
          CALL      DISPITEM
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
          MOVE      ZERO,CKEYTYP
          CALL      KSISAA00
          BRANCH    EXIT,EGRP3000,EGRP9999
          MOVE      SISACODE,TPRODGP
          PACK      TOGRP,SISACODE,SP1,SISADESC,SP70
          MATCH     FPRODGP,TPRODGP
          GOTO      EGRP9000 IF EQUAL
          GOTO      EGRP9000 IF NOT LESS
          BEEP
          MOVE      "To Product Group Must Be > From Product Group - ",DISPMSG
          CALL      MESSAGE1
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
          GOTO      EGRP0000
.
EGRP3000  PACK      TPRODGP,Z70
          MOVE      "Finish                                          ",TOGRP
.
EGRP9000  MOVE      "    3",FLDID
          CALL      GETPOSIT
.
EGRP9999  RETURN
.
.---------------------------------------------------------------------------
. KYEAR - keyin year
.---------------------------------------------------------------------------
KYEAR000  CALL      RINPECON           * default to current year
          MOVE      SIPECYR,SIPEYEAR
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,*JR,SIPEYEAR
          PACK      SIPEYEAR,SIPEYEAR,SP70
.
          MATCH     SP70,SIPEYEAR
          GOTO      KYEAR990 IF EQUAL
          PACK      KEY4,SP3,EXITCHAR * exitchar entered ?
          MATCH     KEY4,SIPEYEAR
          GOTO      KYEAR990 IF EQUAL
.
          TYPE      SIPEYEAR           * valid numeric ?
          GOTO      KYEAR000 IF NOT EQUAL
.
          MOVE      SIPEYEAR,SIPEYF4
          IF        SIPEYF4<100
            SQUEEZE   SIPEYEAR
            MOVE      SIPEYEAR,FORM2
            PACK      SIPEYEAR,CCC,FORM2,SP70
          ENDIF
.
          REP       " 0",SIPEYEAR
          MOVE      ZERO,EXIT          * year ok
          GOTO      KYEAR999
.
KYEAR990  MOVE      TWO,EXIT           * no year entered
.
KYEAR999  RETURN
.---------------------------------------------------------------------------
. KPERD - keyin period
.         Returns SIPEPER - Period
.                 EXIT    - 0=ok, 1=nothing entered, 2=exitchar
.---------------------------------------------------------------------------
KPERD000  KEYIN     *PCCOL:CVERT,*V2LON,*RV,*JR,SIPEPER
          PACK      SIPEPER,SIPEPER,SP70
          ENDSET    SIPEPER            * check for EXITCHAR
          MATCH     EXITCHAR,SIPEPER
          GOTO      KPERD995 IF EQUAL
          RESET     SIPEPER
.
          MOVE      ZERO,F2
          MOVE      SIPEPER,F2
          COMPARE   ZERO,F2            * no period entered ?
          GOTO      KPERD990 IF EQUAL
.                                      * period greater than total no. of perds
          IF        F2>SIPENUM
            BEEP
            MOVE      "Invalid Period - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KPERD000
          ENDIF
.
          MOVE      F2,SIPEPER         * check if period exists
          REP       " 0",SIPEPER
          PACK      KEY6,SIPEYEAR,SIPEPER,SP70
          REP       " 0",KEY6
          CALL      RDSIPE1
          IF        OVRCD=1
            BEEP
            MOVE      "Period NOT Created - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KPERD000
          ENDIF
.
          MOVE      ZERO,EXIT          * period ok
          GOTO      KPERD999
.
KPERD990  MOVE      ONE,EXIT           * no period entered
          GOTO      KPERD999
.
KPERD995  MOVE      TWO,EXIT           * EXITCHAR entered
.
KPERD999  RETURN
.------------------------------------------------------------------------------
. REPT - Print Out Report
.------------------------------------------------------------------------------
. ------- HNONUSAG   1-Receival 2-Purchase
REPT0000  OPEN      CONTROLF,"controlf"
          READ      CONTROLF,SIXTY3;*143,HNONUSAG
          PACK      DAT6,SIPEYEAR,SIPEPER,SP70
.
          DISPLAY   *P1:24,*EL,"Processing - ";
          CALL      MAKEXP00                          * create export file
.
          MOVE      "599",CLNO                        * Set up print values
          MOVE      "0",CPAGENO
          CLOCK     TIME,CTIMEIS
.
          MOVE      SIPEYEAR,F4
          SUB       ONE,F4
          MOVE      F4,LASTYEAR
          REP       " 0",LASTYEAR
.
          MOVE      ZERO,ATOTAL05
          MOVE      ZERO,ATOTAL06
          MOVE      ZERO,ATOTAL07
          MOVE      ZERO,ATOTAL08
.
          CALL      ZTOT0000
          CALL      LOAD0000
.
          BRANCH    REPTSEQ,REPT1000,REPT2000,REPT3000
.
. Catalog Seq
.-------------------------
REPT1000  PACK      KEY7,FCATALOG,SP70
          CALL      RSSIIA1
          CALL      RPSIIA1
.
          MATCH     FCATALOG,SP70
          IF        @EQUAL & (INCLTYPE=0 | INCLTYPE =2)
            CALL      SNON0000               * Set up Non-Type  Variables
            GOTO      REPT1300
          ENDIF
.
REPT1100  CALL      RKSIIA1
          BRANCH    OVRCD,REPT9000
          MATCH     SIIACAT,TCATALOG
          GOTO      REPT9000 IF LESS
.
REPT1200  CALL      RANGE000
          BRANCH    EXIT,REPT1100
.
REPT1300  DISPLAY   *P15:24,*EL,*V2LON,SIIACAT;
          CALL      CALC0000
          CALL      PRTLIN00
.
          GOTO      REPT1100
.
. Catalog Description Seq
.-------------------------
REPT2000  MOVE      TRUE,FIRSTRUN
          PACK      KEY67,FDESCRP,SP70
          CALL      RSSIIA3
          CALL      RPSIIA3
.
REPT2100  CALL      RKSIIA3
          IF        OVRCD=1
            IF        FIRSTRUN=FALSE
              GOTO      REPT9000
            ELSE
              IF (INCLTYPE=0 | INCLTYPE=2)
                CALL      SNON0000               * Set up Non-Type  Variables
                MOVE      FALSE,FIRSTRUN
                GOTO      REPT2300
              ELSE
                GOTO      REPT9000
              ENDIF
            ENDIF
          ENDIF
.
. ------- Place "Non-Catalogued Items" in alphabetical order
          MATCH     NONDESC,SIIADES
          IF        @LESS & FIRSTRUN=1 & (INCLTYPE = 0 | INCLTYPE=2)
            CALL      RPSIIA3
            CALL      SNON0000               * Set up Non-Type  Variables
            MOVE      FALSE,FIRSTRUN
            GOTO      REPT2200
          ENDIF
          MATCH     SIIADES,TDESCRP
          GOTO      REPT9000 IF LESS
.
REPT2200  CALL      RANGE000
          BRANCH    EXIT,REPT2100
.
REPT2300  DISPLAY   *P15:24,*EL,*V2LON,SIIACAT;
          CALL      CALC0000
          CALL      PRTLIN00
.
          GOTO      REPT2100
.
. Product Group Sequence
.-----------------------
REPT3000  MOVE      TRUE,FIRSTRUN
          PACK      KEY28,SP70
          CALL      RSSIAL1
REPT3100  CALL      RKSIAL1
          IF        OVRCD=1
            MOVE      CHECKSUB,SIIASUB
            IF        FIRSTRUN=1
              GOTO      REPT9000
            ELSE
              CALL      PRTLIN00
              CALL      PTOT0000
              GOTO      REPT9000
            ENDIF
          ENDIF
.
          IF        FIRSTRUN=1
            MOVE      SIALSUB,SIIASUB
            CALL      HEAD0000
            MOVE      SIALSUB,CHECKSUB
            MOVE      SIALCAT,CHECKCAT
            MOVE      FALSE,FIRSTRUN
          ENDIF
.
          MATCH     SIALSUB,CHECKSUB
          IF        !@EQUAL
            MOVE      CHECKSUB,SIIASUB
            CALL      PRTLIN00               * Print Current Catalog
            CALL      PTOT0000               * New Subjective
            CALL      ATOT0000               * Add Current Line to totals
            MOVE      SIALSUB,SIIASUB
            CALL      HEAD0000               * New Subjective
            GOTO      REPT3100
          ENDIF
.
          MATCH     SIALCAT,CHECKCAT
          IF        !@EQUAL
            MOVE      SIALSUB,SIIASUB
            CALL      PRTLIN00
            MOVE      SIALCAT,CHECKCAT       * New Current Catalog Code
          ENDIF
.
          CALL      ATOT0000                 * Add to totals
          GOTO      REPT3100
.
REPT9000  COMPARE   ZERO,CPAGENO
          CALL      HEAD0000 IF EQUAL       * at least one page should print
.
          CALL      UND132                  * End of Report
          PRINT     *1,"|",*45,"|":
                    *70,"|",ATOTAL05,ATOTAL06,ATOTAL07,ATOTAL08:
                    *132,"|"
          CALL      UND132
          PRINT     *57,"***** End of Report *****",*N:
                    *1,"WARNING : Information reported is restricted ":
                    "to User Security Access"
          CALL      TRAN0000
.
          MOVE      ZERO,EXIT
          GOTO      REPT9999
.
REPT9500  MOVE      ONE,EXIT
.
REPT9999  CALL      KLALL000
          RETURN
.----------------------------------------------------------
. Add to Current Figure Totals
.----------------------------------------------------------
ATOT0000  ADD       SIALUQT,ATOTAL03
          ADD       SIALUAM,ATOTAL04
          MATCH     SIALDAT,DAT6
          IF        @EQUAL
            ADD       SIALUQT,ATOTAL01
            ADD       SIALUAM,ATOTAL02
          ENDIF
.
ATOT9999  RETURN
.----------------------------------------------------------
. Zero all ATOTAL vars
.----------------------------------------------------------
ZTOT0000  MOVE      SP70,LASTCODE
          MOVE      ZERO,ATOTAL01
          MOVE      ZERO,ATOTAL02
          MOVE      ZERO,ATOTAL03
          MOVE      ZERO,ATOTAL04
          MOVE      ZERO,ATOTAL05
          MOVE      ZERO,ATOTAL06
          MOVE      ZERO,ATOTAL07
          MOVE      ZERO,ATOTAL08
          MOVE      ZERO,ATOTAL09
          MOVE      ZERO,ATOTAL10
          MOVE      ZERO,ATOTAL11
          MOVE      ZERO,ATOTAL12
.
ZTOT9999  RETURN
.----------------------------------------------------------
. Print Product Group Total
.----------------------------------------------------------
PTOT0000  CALL      UND132                   * End of Report
          MOVE      SP70,SISADESC
          PACK      KEY5,CHECKSUB,SP70
          CALL      RDSISA1
          MOVE      SISADESC,KEY30
.
          PRINT     *1,"|",CHECKSUB,SP1,KEY30,*45,"|":
                    *70,"|",ATOTAL09,ATOTAL10,ATOTAL11,ATOTAL12:
                    *132,"|"
          MOVE      SIALSUB,CHECKSUB
          MOVE      SIALCAT,CHECKCAT
          MOVE      "599",CLNO
          MOVE      ZERO,ATOTAL01
          MOVE      ZERO,ATOTAL02
          MOVE      ZERO,ATOTAL03
          MOVE      ZERO,ATOTAL04
          MOVE      ZERO,ATOTAL09
          MOVE      ZERO,ATOTAL10
          MOVE      ZERO,ATOTAL11
          MOVE      ZERO,ATOTAL12
.
PTOT9999  RETURN
.----------------------------------------------------------
. Print Line
.----------------------------------------------------------
PRTLIN00  IF        (ATOTAL01=0 & ATOTAL02=0 & ATOTAL03=0 & ATOTAL04=0)
            GOTO      PRTLIN99              * SRF127965
          ENDIF
.
          COMPARE   "55",CLNO               * Number of Lines Test
          CALL      HEAD0000 IF NOT LESS
.
          IF        REPTSEQ=3
            MOVE      CHECKCAT,KEY7
          ELSE
            MOVE      SIIACAT,KEY7
          ENDIF
          CALL      RDSIIA1
          IF        OVRCD=1
            CALL      SNON0000
          ENDIF
.
          MOVE      SIIADES,KEY60
          CALL      BKLIN000
          MOVE      KEY60,KEY31
          CALL      WRTEXP00
.
          PRINT     *1,"|",*3,SIIACAT:
                    *11,KEY30,*45,"| ",SIIAISS:
                    *70,"|",ATOTAL01,ATOTAL02,ATOTAL03,ATOTAL04:
                    *132,"|",*N:
                    *1,"|",*11,KEY31,*45,"| ",SIIAAVC,*70,"|":
                    *132,"|"
          ADD       "2",CLNO
.
          ADD       ATOTAL01,ATOTAL05
          ADD       ATOTAL02,ATOTAL06
          ADD       ATOTAL03,ATOTAL07
          ADD       ATOTAL04,ATOTAL08
          ADD       ATOTAL01,ATOTAL09
          ADD       ATOTAL02,ATOTAL10
          ADD       ATOTAL03,ATOTAL11
          ADD       ATOTAL04,ATOTAL12
PRTLIN90  MOVE      ZERO,ATOTAL01
          MOVE      ZERO,ATOTAL02
          MOVE      ZERO,ATOTAL03
          MOVE      ZERO,ATOTAL04
PRTLIN99  RETURN
.********************************************************************
. BKLIN - Break up KEY60 into two neat halves        Called by lots
.         Requires - KEY60   (original line)
.         Returns  - KEY30   (line 1)
.                    KEY60   (line 2)
.********************************************************************
BKLIN000  RESET     KEY60,31
          CMATCH    SP70,KEY60
          WHILE     !@EQUAL&!@EOS
            BUMP      KEY60,-1
            IF        !@EOS
              CMATCH    SP70,KEY60
            ENDIF
          DO
.
          IF        @EOS
            SETLPTR   KEY60
            RESET     KEY60
            UNPACK    KEY60,KEY30,KEY60
          ELSE
            LENSET    KEY60
            RESET     KEY60
            MOVE      KEY60,KEY30
            PACK      KEY30,KEY30,SP70
.
            ENDSET    KEY60
            SETLPTR   KEY60
            BUMP      KEY60
            PACK      KEY60,KEY60,SP70
          ENDIF
.
BKLIN999  RETURN
.----------------------------------------------------------
. Print Heading
.----------------------------------------------------------
HEAD0000  CALL      HEAD132                 * Print Page Header
          IF        CPAGENO=1
            STRIP       INCLDESC
            STRIP       SEQDESC
            STRIP       WAREDESC
            CLEAR       VAR
            APPEND      "Including ",VAR
            APPEND      INCLDESC,VAR
            APPEND      " in ",VAR
            APPEND      SEQDESC,VAR
            APPEND      " Sequence for ",VAR
            APPEND      WAREDESC,VAR
            RESET       VAR
            STRIP       FROMCATA
            STRIP       TOCATA
            STRIP       FROMGRP
            STRIP       TOGRP
            STRIP       FROMDESC
            STRIP       TODESC
            STRIP       FROMCOST
            STRIP       TOCOST
            UNPACK      SIPESDT,CCENT,CYEAR,CMON,CDAY
            CALL        PACDATE
            PACK        KEY10,CPCDATE,SP70
            UNPACK      SIPEEDT,CCENT,CYEAR,CMON,CDAY
            CALL        PACDATE
            PACK        PRNDESC1,FROMCATA
            PACK        PRNDESC2,TOCATA
            PRINT       *+,"Usage Period : ",SIPEPER,"/",SIPEYEAR:
                        SP2,KEY10," to ",CPCDATE:
                        *N,"Catalog Code  Range : ",PRNDESC1," to ",PRNDESC2:
                        *N,"Product Group Range : ",FROMGRP," to ",TOGRP:
                        *N,"Catalog Name  Range : ",FROMDESC," to ",TODESC:
                        *N,"Cost Centre   Range : ",FROMCOST," to ",TOCOST:
                        *N,VAR
            ADD       "6",CLNO
          ELSE
            PRINT       VAR
            ADD       "1",CLNO
          ENDIF
          IF        REPTSEQ=3
            MOVE      SP70,SISADESC
            PACK      KEY5,SIIASUB,SP70
            CALL      RDSISA1
            PRINT     "Product Group : ",SIIASUB,SP1,SISADESC
          ENDIF
.
          CALL      UND132
          PRINT     *1,"|",*45,"| Issue Unit":
                    *70,"|             Current Period   ":
                         "              Year to Date    ":
                    *132,"|":
                    *N,*1,"| Catalog",*45,"| Issue Value":
                    *70,"|       Quantity          Value":
                         "       Quantity          Value":
                    *132,"|"
          ADD       "2",CLNO
          CALL      UND132
.
HEAD9999  RETURN
.----------------------------------------------------------
. Calculate Totals
.----------------------------------------------------------
CALC0000  MOVE      ZERO,ATOTAL01
          MOVE      ZERO,ATOTAL02
          MOVE      ZERO,ATOTAL03
          MOVE      ZERO,ATOTAL04
. ------- Calculate from Catalog usage by Warehouse File
          PACK      KEY13,SIIACAT,SIPEYEAR,SP70
          PACK      KEY13CHK,SIIACAT,SIPEYEAR,SIPEPER
          CALL      RSSIAL4
CALC1000  CALL      RKSIAL4
          BRANCH    OVRCD,CALC9999
          MATCH     SIALCAT,SIIACAT
          GOTO      CALC9999 IF NOT EQUAL
.
          ADD       SIALUQT,ATOTAL03        * Stock Usage
          ADD       SIALUAM,ATOTAL04
.
          MATCH     DAT6,SIALDAT              * current period ?
          IF        @EQUAL
            ADD       SIALUQT,ATOTAL01      * Stock Usage
            ADD       SIALUAM,ATOTAL02
          ENDIF
          GOTO      CALC1000
.
CALC9999  RETURN
.------------------------------------------------------------
. Range Check
.------------------------------------------------------------
RANGE000  MOVE      ZERO,EXIT
          IF        !(REPTSEQ=1)
            MATCH     FCATALOG,SIIACAT
            GOTO      RANGE900 IF LESS
            MATCH     SIIACAT,TCATALOG
            GOTO      RANGE900 IF LESS
          ENDIF
.
          IF        !(REPTSEQ=2)
            MATCH     FDESCRP,SIIADES
            GOTO      RANGE900 IF LESS
            MATCH     SIIADES,TDESCRP
            GOTO      RANGE900 IF LESS
          ENDIF
.
          IF        !(REPTSEQ=3)
            MATCH     FPRODGP,SIIASUB
            GOTO      RANGE900 IF LESS
            MATCH     SIIASUB,TPRODGP
            GOTO      RANGE900 IF LESS
          ENDIF
.
.         MATCH     FCOST,SIIASUB
.         GOTO      RANGE900 IF LESS
.         MATCH     SIIASUB,TPRODGP
.         GOTO      RANGE900 IF LESS
.
.         BRANCH    SIIANON,RANGE500         * SRF128287
.
          MOVE      SP70,SIIESID
          MATCH     SP70,SIWAWAR
          IF        !@EQUAL
            BRANCH    SIIANON,RANGE900
            PACK      KEY12,SIIACAT,SIWAWAR
            CALL      RDSIIE1
            BRANCH    OVRCD,RANGE900
          ENDIF
.
RANGE500  BRANCH    INCLTYPE,RANGE510,RANGE520,RANGE530,RANGE530,RANGE530:
                             RANGE530,RANGE530,RANGE530
          GOTO      RANGE999
.
. SIIANON   FORM      1      Non-Stock Item 0=No
.------------------------------------------------
RANGE510  COMPARE   ONE,SIIANON
          GOTO      RANGE900 IF EQUAL   * Stock Only
.
          CALL      CWAR0000            * Find and Check Warehouse security
          BRANCH    EXIT,RANGE900
          GOTO      RANGE999
.
RANGE520  COMPARE   ZERO,SIIANON
          GOTO      RANGE900 IF EQUAL   * Non-Stock Only
          GOTO      RANGE999
.
RANGE530  IF        SIIANON=0
            CALL      CWAR0000          * Find and Check Warehouse security
            BRANCH    EXIT,RANGE900
          ENDIF
.
          ASSIGN    INCLTYPE-2,F2
.
          MATCH     SP70,SIIESID
          IF        @EQUAL
            RESET     SIIASTI,F2
            CMATCH    "1",SIIASTI
            GOTO      RANGE900 IF NOT EQUAL
            GOTO      RANGE999
          ELSE
            RESET     SIIESID,F2
            CMATCH    "1",SIIESID
            GOTO      RANGE900 IF NOT EQUAL
            GOTO      RANGE999
          ENDIF
.
RANGE900  MOVE      ONE,EXIT
.
RANGE999  RETURN
.------------------------------------------------------------------------------
. CWAR - Find and Check Warehouse Security
.------------------------------------------------------------------------------
CWAR0000  MOVE      ZERO,EXIT
          PACK      KEY12,SIIACAT,SP70
          CALL      RSSIIE1
CWAR0100  CALL      RKSIIE1
          BRANCH    OVRCD,CWAR9000
.
          MATCH     SIIACAT,SIIECAT
          GOTO      CWAR9000 IF NOT EQUAL
.
          PACK      KEY9,PASSCODE,SIIEWAR,SP70   * check warehouse security
          CALL      RDSIWS1
          BRANCH    OVRCD,CWAR0100
          GOTO      CWAR9999
.
CWAR9000  MOVE      ONE,EXIT
          GOTO      CWAR9999
.
CWAR9999  RETURN
.--------------------------------------------------------------------
. Display Warehouse Stuff
.--------------------------------------------------------------------
DWARH000  MOVE      "   16",FLDID            * Warehouse Code
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      SP70,SIWAWAR
          ELSE
            MOVE      SIWAWAR,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   17",FLDID            * Warehouse Description
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      SP70,WAREDESC
            PACK      VAR,SP70,SP70
          ELSE
            MOVE      WAREDESC,VAR
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   19",FLDID            * Read Current
          CALL      GETPOSIT
.
DWARH999  RETURN
.------------------------------------------------------------
. File       : casetran
.
. Functions  : This file contains standard routines for
.              creating and transfering TAB delimited
.              export files to a PC using the unix script
.              keatran.
.
. Routines   : MAKEXP00  - Create the Export File and Headings
.              WRTEXP00  - Write Export details Record to File
.              TRAN0000  - Transfer file to PC using script keatran
.
. Note       : The Variable EXPORTYN is used to determine if a
.              export file is to be created. 0=No, 1=Yes.
.
. Variables to be Declared
. ------------------------
. EXPORTFL  FILE      ASCII, FIXED=400     * Export File (Adjust Length to Suit)
. EXPORTFN  DIM       8                    * Export File Name
. TABDELM   EQU       0x09                 * Tab Delimiter
.------------------------------------------------------------
. Create Export File
.------------------------------------------------------------
MAKEXP00  COMPARE   ONE,EXPORTYN
          GOTO      MAKEXP99 IF NOT EQUAL
          MOVE      "EXPORT",SVKEY6
          PACK      EXPORTFN,SVKEY6,PORT
          REP       " 0",EXPORTFN
          PREP      EXPORTFL,EXPORTFN
.
          BRANCH    REPTSEQ,MAKEXP10,MAKEXP10,MAKEXP20
.
MAKEXP10  WRITE     EXPORTFL,SEQ;"Period",TABDELM:
                                 "Year",TABDELM:
                                 "Catalog Code",TABDELM:
                                 "Catalog Description",TABDELM:
                                 "Issue Unit",TABDELM:
                                 "Issue Value",TABDELM:
                                 "Quantity Current Period",TABDELM:
                                 "Value Current Period",TABDELM:
                                 "Quantity YTD",TABDELM:
                                 "Value YTD"
          GOTO      MAKEXP99
.
MAKEXP20  WRITE     EXPORTFL,SEQ;"Period",TABDELM:
                                 "Year",TABDELM:
                                 "Product Group",TABDELM:
                                 "Product Group Description",TABDELM:
                                 "Catalog Code",TABDELM:
                                 "Catalog Description",TABDELM:
                                 "Issue Unit",TABDELM:
                                 "Issue Value",TABDELM:
                                 "Quantity Current Period",TABDELM:
                                 "Value Current Period",TABDELM:
                                 "Quantity YTD",TABDELM:
                                 "Value YTD"
.
MAKEXP99  RETURN
.------------------------------------------------------------
. Write to Export File
.------------------------------------------------------------
WRTEXP00  COMPARE   ONE,EXPORTYN
          GOTO      WRTEXP99 IF NOT EQUAL
.
          BRANCH    REPTSEQ,WRTEXP10,WRTEXP10,WRTEXP20
.
WRTEXP10  WRITE     EXPORTFL,SEQ;SIPEPER,TABDELM:
                                 SIPEYEAR,TABDELM:
                                 SIIACAT,TABDELM:
                                 SIIADES,TABDELM:
                                 SIIAISS,TABDELM:
                                 SIIAAVC,TABDELM:
                                 ATOTAL01,TABDELM:
                                 ATOTAL02,TABDELM:
                                 ATOTAL03,TABDELM:
                                 ATOTAL04
          GOTO      WRTEXP99
.
WRTEXP20  WRITE     EXPORTFL,SEQ;SIPEPER,TABDELM:
                                 SIPEYEAR,TABDELM:
                                 CHECKSUB,TABDELM:
                                 SISADESC,TABDELM:
                                 SIIACAT,TABDELM:
                                 SIIADES,TABDELM:
                                 SIIAISS,TABDELM:
                                 SIIAAVC,TABDELM:
                                 ATOTAL01,TABDELM:
                                 ATOTAL02,TABDELM:
                                 ATOTAL03,TABDELM:
                                 ATOTAL04
.
WRTEXP99  RETURN
.------------------------------------------------------------
. Execute Transfer Script eg softerm
.------------------------------------------------------------
TRAN0000  COMPARE   ONE,EXPORTYN
          GOTO      TRAN9999 IF NOT EQUAL
          MOVE      YES,DEFYESNO
          CLOSE     EXPORTFL
          DISPLAY   *P1:24,*EL,"Execute Transfer Now (":
                               *V2LON,"Y",*HOFF,"/":
                               *V2LON,"N",*HOFF,") ? "
          MOVE      "24",CVERT
          MOVE      "30",CCOL
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      TRAN9999 IF EQUAL   *  No Transfer
.
          MOVE      ZERO,HLEF
          CALL      GETSCR00
.
          CLEAR     KEY80
          APPEND    "keatran ",KEY80
          APPEND    EXPORTFN,KEY80
          APPEND    ".txt",KEY80
          RESET     KEY80
          EXECUTE   KEY80,TASKID
.
          CALL      PUTSCR00
.
          DISPLAY   *P1:24,*EL,"Transfer Completed Ok (":
                               *V2LON,"Y",*HOFF,"/":
                               *V2LON,"N",*HOFF,") ? "
          MOVE      "24",CVERT
          MOVE      "31",CCOL
          CALL      YORN0000
          COMPARE   ZERO,FYESNO,
          GOTO      TRAN0000 IF EQUAL   *  Not ok
.
          PREP      EXPORTFL,EXPORTFN
          CLOSE     EXPORTFL
.
TRAN9999  RETURN
.
.----------------------------------------------------------------------
. Enter Description Range
.----------------------------------------------------------------------
EDES0000  PACK      FDESCRP,SP70
          PACK      TDESCRP,SP70
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,FDESCRP
          ENDSET    FDESCRP
          APPEND    SP70,FDESCRP
          RESET     FDESCRP
          MATCH     SP70,FDESCRP
          GOTO      EDES1000 IF EQUAL
          CMATCH    EXITCHAR,FDESCRP
          GOTO      EDES9000 IF EQUAL
          MOVE      FDESCRP,FROMDESC
          GOTO      EDES2000
.
EDES1000  MOVE      SP70,FDESCRP
          MOVE      "Start                         ",FROMDESC
.
EDES2000  MOVE      FROMDESC,VAR
          CALL      DISPITEM
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,TDESCRP
          ENDSET    TDESCRP
          APPEND    SP70,TDESCRP
          RESET     TDESCRP
          MATCH     SP70,TDESCRP
          GOTO      EDES3000 IF EQUAL
          CMATCH    EXITCHAR,TDESCRP
          GOTO      EDES9000 IF EQUAL
          MOVE      TDESCRP,TODESC
          MATCH     FDESCRP,TDESCRP
          GOTO      EDES9950 IF EQUAL
          GOTO      EDES9950 IF NOT LESS
          BEEP
          MOVE      "To Description Must Be > From Description - ",DISPMSG
          CALL      MESSAGE1
.
          MOVE      "   11",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
          GOTO      EDES0000
.
EDES3000  PACK      TDESCRP,Z70
          MOVE      "Finish                        ",TODESC
          GOTO      EDES9950
.
EDES9000  MOVE      TWO,EXIT
          GOTO      EDES9999
.
EDES9950  MOVE      "   10",FLDID
          CALL      GETPOSIT
          MOVE      ZERO,EXIT
.
EDES9999  RETURN
.
.----------------------------------------------------------------------
. Enter Cost Centre Range
.----------------------------------------------------------------------
ECOS0000  MOVE      "   12",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
          MOVE      ZERO,CKEYTYP
          CALL      KSICAA00
          BRANCH    EXIT,ECOS1000,ECOS9500
          MOVE      SICACODE,FCOST
          PACK      FROMCOST,SICACODE,SP1,SICADESC,SP70
          GOTO      ECOS2000
.
ECOS1000  MOVE      SP70,FCOST
          MOVE      "Start                                         ",FROMCOST
.
ECOS2000  MOVE      FROMCOST,VAR
          CALL      DISPITEM
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
          MOVE      ZERO,CKEYTYP
          CALL      KSICAA00
          BRANCH    EXIT,ECOS3000,ECOS9500
          MOVE      SICACODE,TCOST
          PACK      TOCOST,SICACODE,SP1,SICADESC,SP70
          MATCH     FCOST,TCOST
          GOTO      ECOS9000 IF EQUAL
          GOTO      ECOS9000 IF NOT LESS
          BEEP
          MOVE      "To Cost Centre Must Be > From Cost Centre - ",DISPMSG
          CALL      MESSAGE1
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
          GOTO      ECOS0000
.
ECOS3000  PACK      TCOST,Z70
          MOVE      "Finish                                        ",TOCOST
.
ECOS9000  MOVE      "   12",FLDID
          CALL      GETPOSIT
          MOVE      ZERO,EXIT
          GOTO      ECOS9999
.
ECOS9500  MOVE      TWO,EXIT
.
ECOS9999  RETURN
.
ESEQU000  MOVE      SP70,DISPMSG
          CALL      MESSAGE2
ESEQU010  DISPLAY   *P1:24,*EL,"Report Sequence : ":
                    *V2LON,"1. ",*HOFF,"Catalog Code, ":
                    *V2LON,"2. ",*HOFF,"Catalog Name, ":
                    *V2LON,"3. ",*HOFF,"Product Group"
          MOVE      ONE,DIM1
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,DIM1
          MATCH     EXITCHAR,DIM1
          GOTO      ESEQU950 IF EQUAL
          TYPE      DIM1
          GOTO      ESEQU010 IF NOT EQUAL
          MOVE      DIM1,REPTSEQ
          BRANCH    REPTSEQ,ESEQU100,ESEQU200,ESEQU300
          BEEP
          GOTO      ESEQU010
.
ESEQU100  MOVE      "Catalog Code",SEQDESC
          GOTO      ESEQU900
ESEQU200  MOVE      "Catalog Name",SEQDESC
          GOTO      ESEQU900
ESEQU300  MOVE      "Product Group",SEQDESC
.
ESEQU900  CALL      MESSAGE3
          MOVE      ZERO,EXIT
          GOTO      ESEQU999
.
ESEQU950  MOVE      TWO,EXIT
.
ESEQU999  RETURN
.--------------------------------------------------------------------------
. Entry Handler for Warehouse Keyin
.--------------------------------------------------------------------------
EWARH000  MOVE      ZERO,RNGEWARE
.
..          IF        INCLTYPE=2 | REPTSEQ=3
          IF        INCLTYPE=2
            CALL      NOWAR000               * No Warehouse Code Required
          ELSE
            CALL      KSIWSA00               * Keyin Warehouse Code
          ENDIF
.
EWARH999  RETURN
.--------------------------------------------------------------------------
. Setup no warehouse Code
.--------------------------------------------------------------------------
NOWAR000  MOVE      SP70,SIWAWAR
          CALL      WDESC000
.
NOWAR999  RETURN
.--------------------------------------------------------------------
. Enter Include Code
.--------------------------------------------------------------------
EINCL000  CALL      DCODE000
.
EINCL010  MOVE      ZERO,DIM1
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,DIM1
          MATCH     EXITCHAR,DIM1
          GOTO      EINCL980 IF EQUAL
          TYPE      DIM1
          GOTO      EINCL010 IF NOT EQUAL
          MOVE      DIM1,INCLTYPE
          COMPARE   ZERO,INCLTYPE
          GOTO      EINCL900 IF EQUAL
          BRANCH    INCLTYPE,EINCL100,EINCL200
          ASSIGN    INCLTYPE-2,F1
          PACK      KEY6,ANSC,ANSA,ANST,F1,SP70
          CALL      RDSICD1
          IF        OVRCD=1
            BEEP
            GOTO    EINCL010
          ENDIF
          MOVE      SICDDESC,INCLDESC
          GOTO      EINCL950
.
EINCL100  MOVE      "Stocked Catalogs",INCLDESC
          GOTO      EINCL950
.
EINCL200  MOVE      "Non-Stocked Catalogs & Non-Catalogs",INCLDESC
          MOVE      Z70,SIWAWAR
          CALL      WDESC000
          CALL      DWARH000
          GOTO      EINCL950
.
EINCL900  MOVE      "All Catalogs",INCLDESC
.
EINCL950  CALL      PUTSCR00
          IF        INCLTYPE<>2
            MATCH     SIWAWAR,Z70
            IF        @EQUAL
              UNPACK    SP70,SIWAWAR,WAREDESC
              CALL      DWARH000
            ENDIF
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      EINCL999
.
EINCL980  MOVE      TWO,EXIT
.
EINCL999  RETURN
.--------------------------------------------------------------------
. Display Items in box
.--------------------------------------------------------------------
DCODE000  MOVE      "12",HTOP
          MOVE      "44",HLEF
          MOVE      "24",HBOT
          MOVE      "80",HRIG
          CALL      GETSCR00
.
          BOXCLR    HLEF,HTOP,HRIG,HBOT
          BOX       16,HLEF,HTOP,HRIG,HBOT
          DISPLAY   *P52:13,*V2LON,*ULON,"Include Options",*HOFF:
                    *P46:14,*V2LON,"0. ",*HOFF,"All Catalogs & Non-Catalogs":
                    *P46:15,*V2LON,"1. ",*HOFF,"Stocked Only":
                    *P46:16,*V2LON,"2. ",*HOFF,"Non-Stock & Non-Catalog Only";
          MOVE      ONE,F1
DCODE100  PACK      KEY6,ANSC,ANSA,ANST,F1,SP70
          CALL      RDSICD1
          IF        OVRCD=1
            MOVE      "No Description on Code",SICDDESC
          ENDIF
          ASSIGN    F1+16,F2
          ADD       "2",F1
          DISPLAY   *P46:F2,*V2LON,F1,". ",*HOFF,SICDDESC
          SUB       "2",F1
          ADD       ONE,F1
          COMPARE   EIGHT,F1
          GOTO      DCODE100 IF NOT EQUAL
          RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSMASIO/INC
          INC       CALCUSAG    
          INC       SINALLCD    
          INC       SINCCAIO/INC
          INC       SINCCAKY    
          INC       SINCCHIO/INC
          INC       SINCIAIO/INC
          INC       SINCIAKY    
          INC       SINCICIO/INC
          INC       SINCIEIO/INC
          INC       SINCIEKY    
          INC       SINCIFIO/INC
          INC       SINCODIO/INC
          INC       SINFACIO/INC
          INC       SINNATIO/INC
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINPOAIO/INC
          INC       SINPOCIO/INC
          INC       SINPOFIO/INC
          INC       SINSUAIO/INC
          INC       SINSUAKY    
          INC       SINWARIO/INC
          INC       SINWSEIO/INC
          INC       SINWSEKY    
.
          INC       STDGENCD
.
