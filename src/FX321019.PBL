.*****************************************************************************
.* System    :   Allied Health                                               *
.* Program   :   FX321019                                                    *
.* Desc      :   Fixit for Episode First Appointment Booked Date and         *
.*               Episode Patient/Client First Notified of First Appointment  *
.*               Date out of sequence.                                       *
.*****************************************************************************
.* Date      :   24/08/2015                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program provides two options to fix data for           *
.*               Episode First Appointment Booked Date and Episode           *
.*               Patient/Client First Notified of First Appointment Date.    *
.*               One option fixes data in allrefaf, the other in allaudre.   *
.*               The fixes are only applicable to Specialist O/P related     *
.*               events.                                                     *
.* Mods      :                                                               *
.*        V10.14.01 17/04/2019  Steve Armstrong  TSK 0868837                 *
.*                  Recompiled for changes to ALLHDTFD.                      *
.*****************************************************************************
.*        V10.07.01 23/10/2015  Steve Armstrong    CAR 321019                *
.*                  Mods to replicate validation rules from Option 3 into    *
.*                  Options 1 & 2.                                           *
.*****************************************************************************
.*        V10.06.01 23/09/2015  Steve Armstrong    CAR 321019                *
.*                  Mods to add further validation rules around defaulting   *
.*                  a value into Episode Patient/Client First Notified of    *
.*                  First Appointment Date by also checking the Episode      *
.*                  Activated Date (Option 3 only).                          *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       ALLCONFD/INC
          INC       ALLHDTFD/INC
          INC       ALLREFFD/INC
          INC       ALLRLNFD/INC
          INC       PATCODFD/INC
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
OPTNDESC  DIM       10
SAVEDATE  DIM       8
SAVEKEY8  DIM       8
UPDCOUNT  FORM      8
UPDTFLAG  DIM       1                  * Update flag
.                                        0 = Update data fields
.                                        1 = Don't update data fields
.
.
. PROGRAM CONSTANTS
. -----------------
STRTDATE  INIT      "20150713"
OPTDESC1  INIT      " allrefaf "
OPTDESC2  INIT      " allaudre "
OPTDESC3  INIT      " allhdtaf "
.
.
.
PRGID     INIT      "FX321019"
PRGNAM    INIT      "Fixit for First Notified of First Appointment Booking"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
.
          CALL      ASKQ0000               * check if updating
          BRANCH    EXIT,MAIN0100          * nothing entered
.
MAIN1000  CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN2000  BRANCH    COPTION,MAIN3000:      * proceed with fixit for allrefaf
                            MAIN3000:      * proceed with fixit for allaudre
                            MAIN5000       * proceed with fixit for allhdtaf
.
MAIN3000  CALL      PROC0000               * run fixit for allrefaf or allaudre
          GOTO      MAIN0100
.
MAIN5000  CALL      FHDT0000               * run fixit for allhdtaf
          GOTO      MAIN0100
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"allrefaf";
          OPEN      ALLREFA1,"allrefaf"
.
          DISPLAY   *P64:24,"allaudre";
          OPEN      ALLAUDRE,"allaudre"
.
          DISPLAY   *P64:24,"allhdtaf";
          OPEN      ALLHDTA1,"allhdtaf"
.
          DISPLAY   *P64:24,"allrlnaf";
          OPEN      ALLRLNA2,"allrlnaf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run fixit                               *
.*                        TRUE  (1)  Exit option selected                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run allrefaf fixit":
                    *P1:6,*V2LON,TWO,*HOFF,". Run allaudre fixit":
                    *P1:7,*V2LON,THREE,*HOFF,". Run allhdtaf fixit"
          HLINE     *G37,2,71,79
.
OPTN0500  KEYIN     *P1:9,*EL,"Select Option : ":
                    *P17:9,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run allrefaf fixit
                            OPTN9000:            * run allaudre fixit
                            OPTN9000             * run allhdtaf fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  LOAD      OPTNDESC,COPTION,OPTDESC1:
                                     OPTDESC2:
                                     OPTDESC3
          DISPLAY   *P71:2,*V2LON,OPTNDESC
          MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                                ASKQ0000             Called by: MAIN0000   *
.*                       Check if user is updating data or not               *
.*    Returns:  EXIT  0 = Ok to continue                                     *
.*                    1 = Nothing entered                                    *
.*              UPDTFLAG  0 = Update data fields                             *
.*                        1 = Not updating data fields                       *
.*****************************************************************************
.
ASKQ0000  KEYIN     *P1:12,*EL,"Update Data Fields (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") ? ":
                    *P28:12,*V2LON,UPDTFLAG
.
          PACK      UPDTFLAG,UPDTFLAG,SP1
          MATCH     SP1,UPDTFLAG                 * anything entered ?
          GOTO      ASKQ9100 IF EQUAL            * no - finished
.
          REP       UPPLOW,UPDTFLAG
          MATCH     ANSY,UPDTFLAG
          IF        @EQUAL
            DISPLAY   *P28:12,*EL,*V2LON,DYES
            GOTO      ASKQ9000
          ENDIF
.
          MATCH     ANSN,UPDTFLAG
          IF        @EQUAL
            DISPLAY   *P28:12,*EL,*V2LON,DNO
            GOTO      ASKQ9000
          ENDIF
.
          BEEP                                   * invalid entry
          GOTO      ASKQ0000
.
ASKQ9000  MOVE      ZERO,EXIT
          GOTO      ASKQ9999
.
ASKQ9100  MOVE      ONE,EXIT
.
ASKQ9999  RETURN
+
.*****************************************************************************
.*                               PROC0000              Called by: MAIN0000   *
.*        Loop through either allrefaf or allaudre according to the option   *
.*        selected and if the VINAH date fields are out of sequence, fix     *
.*        them.                                                              *
.*****************************************************************************
.
PROC0000  DISPLAY   *P1:24,*EL,"Processing:";
.
          MOVE      ZERO,UPDCOUNT                * initialise counter
.
          IF        COPTION = 1
            MOVE      SP8,KEY8
            CALL      RSALREF1                   * position at start of file
          ELSE
            PACK      KEY19,STRTDATE,SP20
            CALL      ASALREF                    * position prior to start date
          ENDIF
.
PROC0500  IF        COPTION = 1
            CALL      RKALREF1                   * read next record
          ELSE
            CALL      AKALREF                    * read next record
          ENDIF
          BRANCH    OVRCD,PROC9000               * eof - finished
.
          IF        COPTION = 2
            MATCH     ANSB,ALREAUDR              * before audit record type ?
            GOTO      PROC0500 IF EQUAL          * yes - ignore audit
          ENDIF
.
          DISPLAY   *P13:24,*V2LON,ALREVISN;
.
          MATCH     "1",ALREUYN4                 * Master referral ?
          GOTO      PROC0500 IF EQUAL            * yes - ignore referral
.
.         Check for Episode First Appointment Booked Date
.
          MATCH     SP8,ALREUDT8                 * blank date ?
          GOTO      PROC0500 IF EQUAL            * yes - ignore referral
.
.         Check for Episode Patient/Client First Notified of First
.         Appointment Date
.
          MATCH     SP8,ALREUDT9                 * blank date ?
          GOTO      PROC0500 IF EQUAL            * yes - ignore referral
.
.         We are looking to fix episode records where the Episode
.         Patient/Client First Notified of First Appointment Date
.         is greater than the Episode First Appointment Booked Date,
.         so ignore any records that don't match the criteria.
.
          MATCH     ALREUDT9,ALREUDT8
          GOTO      PROC0500 IF NOT LESS
.
.         The dates failed validation, so we need to see if we can fix them.
.         First, make sure this is a linked Episode
.
          PACK      KEY16,ALREVISN,SP20
          CALL      RSALRLN2                     * position before episode
          CALL      RKALRLN2                     * read next record
          BRANCH    OVRCD,PROC0500               * eof - ignore referral
.
          MATCH     ALREVISN,ALRLLNKV            * same episode still ?
          GOTO      PROC0500 IF NOT EQUAL        * no - ignore referral
.
.         Read the Referral In record to get the Referral In Received Date.
.         If we are running Option 2, then we won't be able to re-read
.         the audit file as the records may be duplicate, so we need
.         to use an alternate read (RDALTRF1) on the referral file, then
.         we can stay on the current audit record.
.
          IF        COPTION = 1
            MOVE      ALREVISN,SAVEKEY8
            MOVE      ALRLVISN,KEY8
            CALL      RDALREF1
            IF        OVRCD = 1
              MOVE      SAVEKEY8,KEY8
              CALL      RDALREF1
              GOTO      PROC0500
            ELSE
              MOVE      ALREDREC,SAVEDATE
              MOVE      SAVEKEY8,KEY8
              CALL      RDALREF1
            ENDIF
          ELSE
            MOVE      ALREVISN,SAVEKEY8
            MOVE      ALRLVISN,KEY8
            CALL      RDALTRF1
            BRANCH    OVRCD,PROC0500
          ENDIF
.
.         The Episode is linked, so check that this is a VINAH referral
.
          MATCH     SP3,ALREDEPT                 * blank department ?
          GOTO      PROC0500 IF EQUAL            * yes - ignore referral
.
          PACK      KEY5,ANSC,ANSG,ALREDEPT
          CALL      RDCODE1                      * dept code on file for Cat CG?
          BRANCH    OVRCD,PROC0500               * eof - ignore referral
.
          MATCH     ANSO,TCINDC8                 * indicator 8 set up as SOP ?
          GOTO      PROC0500 IF NOT EQUAL        * no - ignore referral
.
.         Check if we can use the Episode Activated Date as the default
.         date for populating Episode Patient/Client First Notified of
.         First Appointment Date.
.
          MATCH     SP8,ALREDACT                 * blank Ep. Activated date ?
          GOTO      PROC2000 IF EQUAL            * yes - try Date Ref. Accepted
.
.         Episode Activated Date is populated, so make sure Episode First
.         Appointment Booked Date is not less than Episode Activated Date
.
          MATCH     ALREDACT,ALREUDT8            * criteria met ?
          GOTO      PROC2000 IF LESS             * no - try Date Ref. Accepted
.
.         Check if Date Referral Accepted is populated
.
          MATCH     SP8,ALREUDT1                 * blank Date Ref. Accepted ?
          GOTO      PROC1000 IF EQUAL            * yes - ignore next criteria
.
.         Make sure that Episode Activated Date is not less than Date Referral
.         Accepted
.
          MATCH     ALREUDT1,ALREDACT
          GOTO      PROC2000 IF LESS
.
.         Make sure that Episode Activated Date is not less than Referral In
.         Received Date
.
PROC1000  MATCH     SAVEDATE,ALREDACT
          GOTO      PROC2000 IF LESS
.
.         Use Episode Activated Date to populate Episode Patient/Client
.         First Notified of First Appointment Date
.
          MOVE      ALREDACT,ALREUDT9
          GOTO      PROC8000
.
.         We can't use Episode Activated Date, so try Date Referral Accepted.
.         Make sure that the Date Referral Accepted is populated.
.
PROC2000  MATCH     SP8,ALREUDT1                 * blank date ?
          GOTO      PROC0500 IF EQUAL            * yes - ignore episode
.
.         Make sure that the First Appointment Booked Date is not less
.         than the Date Referral Accepted
.
          MATCH     ALREUDT1,ALREUDT8
          GOTO      PROC0500 IF LESS
.
.         Make sure the Referral In Received Date is populated
.
          MATCH     SP8,SAVEDATE
          GOTO      PROC0500 IF EQUAL
.
.         Make sure that the Date Referral Accepted is not less than
.         the Referral In Received Date
.
          MATCH     SAVEDATE,ALREUDT1
          GOTO      PROC0500 IF LESS
.
          MOVE      ALREUDT1,ALREUDT9
.
.         A default value has been found to populate Episode Patient/Client
.         First Notified of First Appointment Date, so update the record
.
PROC8000  MATCH     ANSY,UPDTFLAG                * updating ?
          GOTO      PROC8100 IF NOT EQUAL        * no
.
          IF        COPTION = 1
            CALL      UPALREF1                   * update referral record
          ELSE
            CALL      AUALREF                    * update audit
          ENDIF
PROC8100  ADD       ONE,UPDCOUNT                 * increment update counter
.
          GOTO      PROC0500                     * get next referral
.
PROC9000  DISPLAY   *P1:23,*EF,"Fixit completed.":
                    *P1:24,*V2LON,UPDCOUNT,*HOFF," records updated.  ";
          CALL      HITENTER
.
PROC9999  RETURN
+
.*****************************************************************************
.*                             FHDT0000            Called by: MAIN0000       *
.*        Loop through allhdtaf and if the VINAH date fields are out of      *
.*        sequence, fix them.                                                *
.*****************************************************************************
.
FHDT0000  DISPLAY   *P1:24,*EL,"Processing:";
.
          MOVE      ZERO,UPDCOUNT                * initialise counter
.
          PACK      KEY42,SP1,ZERO,SP70
          CALL      RSALHDT1                     * position at start of file
FHDT0500  CALL      RKALHDT1                     * read next record
          BRANCH    OVRCD,FHDT9000               * eof - finished
.
          MATCH     " 0",ALHDSTAT                * waiting record still ?
          GOTO      FHDT9000 IF NOT EQUAL        * no - finished
.
          DISPLAY   *P13:24,*V2LON,ALHDVISN;
.
          MATCH     "1",ALHDRTYP                 * Episode referral ?
          GOTO      FHDT0500 IF NOT EQUAL        * no - ignore record
.
          COMPARE   EIGHT,ALHDPRGM               * SOP Program ?
          GOTO      FHDT0500 IF NOT EQUAL        * no - ignore episode
.
.         Check for Episode First Appointment Booked Date
.
          MATCH     SP8,ALHDFABD                 * blank date ?
          GOTO      FHDT0500 IF EQUAL            * yes - ignore episode
.
.         Check for Episode Patient/Client First Notified of First
.         Appointment Date
.
          MATCH     SP8,ALHDFNAD                 * blank date ?
          GOTO      FHDT0500 IF EQUAL            * yes - ignore episode
.
.         We are looking to fix episode records where the Episode
.         Patient/Client First Notified of First Appointment Date
.         is greater than the Episode First Appointment Booked Date,
.         so ignore any records that don't match the criteria.
.
          MATCH     ALHDFNAD,ALHDFABD
          GOTO      FHDT0500 IF NOT LESS
.
.         Check if we can use the Episode Activated Date as the default
.         date for populating Episode Patient/Client First Notified of
.         First Appointment Date.
.
          MATCH     SP8,ALHDSDAT                 * blank Ep. Activated date ?
          GOTO      FHDT2000 IF EQUAL            * yes - try Date Ref. Accepted
.
.         Episode Activated Date is populated, so make sure Episode First
.         Appointment Booked Date is not less than Episode Activated Date
.
          MATCH     ALHDSDAT,ALHDFABD            * criteria met ?
          GOTO      FHDT2000 IF LESS             * no - try Date Ref. Accepted
.
.         Check if Date Referral Accepted is populated
.
          MATCH     SP8,ALHDUDT1                 * blank Date Ref. Accepted ?
          GOTO      FHDT1000 IF EQUAL            * yes - ignore next criteria
.
.         Make sure that Episode Activated Date is not less than Date Referral
.         Accepted
.
          MATCH     ALHDUDT1,ALHDSDAT
          GOTO      FHDT2000 IF LESS
.
.         Make sure that Episode Activated Date is not less than Referral In
.         Received Date
.
FHDT1000  MATCH     ALHDRDAT,ALHDSDAT
          GOTO      FHDT2000 IF LESS
.
.         Use Episode Activated Date to populate Episode Patient/Client
.         First Notified of First Appointment Date
.
          MOVE      ALHDSDAT,ALHDFNAD
          GOTO      FHDT8000
.
.         We can't use Episode Activated Date, so try Date Referral Accepted.
.         Make sure that the Date Referral Accepted is populated.
.
FHDT2000  MATCH     SP8,ALHDUDT1                 * blank date ?
          GOTO      FHDT0500 IF EQUAL            * yes - ignore episode
.
.         Make sure that the First Appointment Booked Date is not less
.         than the Date Referral Accepted
.
          MATCH     ALHDUDT1,ALHDFABD
          GOTO      FHDT0500 IF LESS
.
.         Make sure the Referral In Received Date is populated
.
          MATCH     SP8,ALHDRDAT
          GOTO      FHDT0500 IF EQUAL
.
.         Make sure that the Date Referral Accepted is not less than
.         the Referral In Received Date
.
          MATCH     ALHDRDAT,ALHDUDT1
          GOTO      FHDT0500 IF LESS
.
          MOVE      ALHDUDT1,ALHDFNAD
.
.         A default value has been found to populate Episode Patient/Client
.         First Notified of First Appointment Date, so update the record
.
FHDT8000  MATCH     ANSY,UPDTFLAG
          IF        @EQUAL
            CALL      UPALHDT1                   * update record
          ENDIF
          ADD       ONE,UPDCOUNT                 * increment update counter
          GOTO      FHDT0500                     * get next record
.
FHDT9000  DISPLAY   *P1:23,*EF,"Fixit completed.";
          MATCH     ANSY,UPDTFLAG
          IF        @EQUAL
            DISPLAY   *P1:24,*V2LON,UPDCOUNT,*HOFF," records updated.  ";
          ELSE
            DISPLAY   *P1:24,*V2LON,UPDCOUNT,*HOFF," records found.  ";
          ENDIF
          CALL      HITENTER
.
FHDT9999  RETURN
+
.*****************************************************************************
.*         Alternate IO routine for allrefaf so that the current values      *
.*         read in from allaudre are not changed                             *
.*****************************************************************************
.
RDALTRF1  RESET     KEY8
          MOVE      ZERO,OVRCD
          READ      ALLREFA1,KEY8;KEY8,KEY8,KEY1,KEY8,KEY8:
                        KEY3,KEY8,KEY8,KEY10,KEY3,KEY8:
                        KEY8,KEY10,KEY3,KEY8,KEY8,KEY8:
                        KEY10,KEY8,KEY3,KEY10,KEY10,KEY10:
                        KEY2,KEY3,KEY3,KEY3,KEY9,KEY9:
                        KEY9,KEY9,KEY9,KEY9,KEY3,KEY3:
                        KEY1,KEY8,KEY10,SAVEDATE
          GOTO      OVERCOND IF OVER
          RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       ALLHDTIO/INC
          INC       ALLREFIO/INC
          INC       ALLRLNIO/INC
          INC       PATCODIO/INC
