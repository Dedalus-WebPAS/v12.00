.***************************************************************************
.* System    :   System Management                                         *
.* Program   :   HL7SENDR                                                  *
.* Desc      :   Send a HL7 message to the HL7 Message Receiver (HL7RECVR) *
.*               based on the content of an ascii file.                    *
.***************************************************************************
.* Date      :   21/09/2006                                                *
.* Author    :   Steve Armstrong                                           *
.* Function  :   This program will open an ascii file and read in the data *
.*               which will then be send to the HL7 Message Receiver via   *
.*               a TCP/IP socket.                                          *
.* Mods      :                                                             *
.*       V11.05.01  27/02/2025  Davin            TSK 0957713               *
.*                  Increased test message size from 4000 to a possible    *
.*                  32000 characters (added HL7MESS1,HL7MESS2,HL7MESS3,    *
.*                  HL7MESS4,HL7MESS5,HL7MESS6,HL7MESS7,HL7MESS8)          *
.***************************************************************************
.*       V11.00.01  27/01/2021  Davin            TSK 0901929               *
.*                  Rearranged code to choose location before message file *
.***************************************************************************
.*       V10.03.03  18/07/2012  Steve Armstrong  CAR 268870                *
.*                  Mods to return to previous field if nothing input.     *
.*       V10.03.02  31/01/2012  Steve Armstrong  CAR 259017                *
.*                  Mods to retain default input values for filename,      *
.*                  I/P Address and TCP/IP port.                           *
.*       V10.03.01  20/12/2011  Steve Armstrong  CAR 257333                *
.*                  Mods to increase size of message variable from 2000    *
.*                  to 4000 bytes.                                         *
.***************************************************************************
.*       V10.00.01  29/04/2010  Steve Armstrong  CAR 220812                *
.*                  Mods to keep receiving until end of block is received. *
.***************************************************************************
.*        V9.10.01  06/05/2008  Ebon Clements    CAR 165939                *
.*                  Changed open of socket to use LOCATION variable        *
.***************************************************************************
.*        V9.09.01  04/09/2008  Steve Armstrong  CAR 165939                *
.*                  Mods to add keyin for IP address and TCP/IP port.      *
.***************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
.
MESSFILE  FILE      ASCII,FIXED=1000
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
.
CISSOCKT  SOCKET    ASCII,FIXED=1      * Socket on which to communicate
.                                        last field populated for outgoing mess.
.
ENDBLOCK  INIT      034                * End of Block
FILENAME  DIM       8
HL7MESS1  DIM       4000
HL7MESS2  DIM       4000
HL7MESS3  DIM       4000
HL7MESS4  DIM       4000
HL7MESS5  DIM       4000
HL7MESS6  DIM       4000
HL7MESS7  DIM       4000
HL7MESS8  DIM       4000
IPADRESS  DIM       20
LOCATION  DIM       25
RECSTRNG  DIM       2000
STATDESC  DIM       9
TCPIPORT  DIM       5
.
.
PRGID     INIT      "HL7SENDR"
PRGNAM    INIT      "HL7 Sender Program"
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              MAIN0000                                  *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN1000  CALL      GLOC0000               * get the location to send to
          BRANCH    EXIT,MAIN9999          * nothing entered
.
.davvy    CALL      CONTQST                * Ok to continue ?
.davvy    BRANCH    CEXIT,MAIN1500:        * yes
.davvy                    MAIN1000:        * no
.davvy                    MAIN9999         * cancel
.
MAIN1500  CALL      GFIL0000               * get the file name and open file
          BRANCH    EXIT,MAIN1000          * nothing entered
.
MAIN2000  CALL      PROC0000               * process
          GOTO      MAIN1500
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: MAIN0000  *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
INIT9999  RETURN
+
.*****************************************************************************
.*                              GLOC0000           Called by:                *
.*               Get the location (IP Address and TCP/IP port) to            *
.*               which the message will be sent                              *
.* Returns:  LOCATION - <IP Address>:<TCP/IP Port>                           *
.*****************************************************************************
.
GLOC0000  KEYIN     *P1:5,*EF,"IP Address :":
                    *P14:5,*V2LON,*RV,IPADRESS
.
          PACK      IPADRESS,IPADRESS,SP20
          MATCH     SP20,IPADRESS                * anything entered ?
          GOTO      GLOC9100 IF EQUAL            * no - finished
.
          SQUEEZE   IPADRESS
.
          KEYIN     *P1:6,*EF,"TCP/IP Port:":
                    *P14:6,*V2LON,*RV,TCPIPORT
.
          PACK      TCPIPORT,TCPIPORT,SP5
          MATCH     SP5,TCPIPORT                  * anything entered ?
          GOTO      GLOC0000 IF EQUAL             * no - get IP Address again
.
          SQUEEZE   TCPIPORT
.
          PACK      LOCATION,IPADRESS,COLON,TCPIPORT
.
          MOVE      ZERO,EXIT
          GOTO      GLOC9999
.
GLOC9100  MOVE      ONE,EXIT
.
GLOC9999  RETURN
+
.*****************************************************************************
.*                            GFIL0000             Called by:                *
.*         Get the ascii file name which contains the HL7 test message       *
.*         and open the file.                                                *
.*****************************************************************************
.
GFIL0000  KEYIN     *P1:7,*EF,"Filename   :":
                    *P14:7,*V2LON,*RV,FILENAME
.
          PACK      FILENAME,FILENAME,SP8
          MATCH     SP8,FILENAME                 * anything entered ?
          GOTO      GFIL9100 IF EQUAL            * no - finished
.
          STRIP     FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      MESSFILE,FILENAME
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"File not found.  ";
            CALL      HITENTER
            GOTO      GFIL0000
          ENDIF
.
          READ      MESSFILE,SEQ;HL7MESS1,HL7MESS2,HL7MESS3,HL7MESS4,HL7MESS5:
                                 HL7MESS6,HL7MESS7,HL7MESS8
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"No message present in file.  ";
            CALL      HITENTER
            GOTO      GFIL0000
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      GFIL9999
.
GFIL9100  MOVE      ONE,EXIT
.
GFIL9999  RETURN
+
.**************************************************************************
.*                               PROC0000              Called by: MAIN0000*
.*           Send the HL7 message via the socket and wait for the reply   *
.**************************************************************************
.
.         Open the socket
.
PROC0000  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO               * set TRAP for I*M
          OPEN      CISSOCKT,LOCATION,KEEPALIV   * open socket
          TRAPCLR   IO                           * clear trap
          BRANCH    OVRCD,PROC9300               * error occured
.
PROC0500  MOVE      ANSY,ANS
          KEYIN     *P1:9,*EF,"Send message (",*V2LON,*DV,ANSY,*HOFF,*DV:
                    SLASH,*V2LON,*DV,ANSN,*HOFF,") ? ",*RV,ANS,*R,*N;
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSN,ANS
          GOTO      PROC9900 IF EQUAL
.
          MATCH     ANSY,ANS
          IF        !@EQUAL
            BEEP
            GOTO      PROC0500
          ENDIF
.
.         Send the message 1
.
          MOVE      "sending",STATDESC
          STRIP     HL7MESS1
          MOVELPTR  HL7MESS1,FORM4
.
          COMPARE   ZERO,FORM4
          GOTO      PROC9000 IF EQUAL            * no message
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF SIGPIPE                  * set trap
          WRITE     CISSOCKT,FORM4,5000;HL7MESS1         * send segment
          TRAPCLR   SIGPIPE                              * clear trap
          GOTO      PROC9200 IF TIMEOUT                  * timeout expired
          BRANCH    OVRCD,PROC9100                       * connection lost
.
.         Send the message 2
.
          MOVE      "sending",STATDESC
          STRIP     HL7MESS2
          MOVELPTR  HL7MESS2,FORM4
.
          COMPARE   ZERO,FORM4
          GOTO      PROC9000 IF EQUAL            * no message
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF SIGPIPE                  * set trap
          WRITE     CISSOCKT,FORM4,5000;HL7MESS2         * send segment
          TRAPCLR   SIGPIPE                              * clear trap
          GOTO      PROC9200 IF TIMEOUT                  * timeout expired
          BRANCH    OVRCD,PROC9100                       * connection lost
.
.         Send the message 3
.
          MOVE      "sending",STATDESC
          STRIP     HL7MESS3
          MOVELPTR  HL7MESS3,FORM4
.
          COMPARE   ZERO,FORM4
          GOTO      PROC9000 IF EQUAL            * no message
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF SIGPIPE                  * set trap
          WRITE     CISSOCKT,FORM4,5000;HL7MESS3         * send segment
          TRAPCLR   SIGPIPE                              * clear trap
          GOTO      PROC9200 IF TIMEOUT                  * timeout expired
          BRANCH    OVRCD,PROC9100                       * connection lost
.
.         Send the message 4
.
          MOVE      "sending",STATDESC
          STRIP     HL7MESS4
          MOVELPTR  HL7MESS4,FORM4
.
          COMPARE   ZERO,FORM4
          GOTO      PROC9000 IF EQUAL            * no message
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF SIGPIPE                  * set trap
          WRITE     CISSOCKT,FORM4,5000;HL7MESS4         * send segment
          TRAPCLR   SIGPIPE                              * clear trap
          GOTO      PROC9200 IF TIMEOUT                  * timeout expired
          BRANCH    OVRCD,PROC9100                       * connection lost
.
.         Send the message 5
.
          MOVE      "sending",STATDESC
          STRIP     HL7MESS5
          MOVELPTR  HL7MESS5,FORM4
.
          COMPARE   ZERO,FORM4
          GOTO      PROC9000 IF EQUAL            * no message
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF SIGPIPE                  * set trap
          WRITE     CISSOCKT,FORM4,5000;HL7MESS5         * send segment
          TRAPCLR   SIGPIPE                              * clear trap
          GOTO      PROC9200 IF TIMEOUT                  * timeout expired
          BRANCH    OVRCD,PROC9100                       * connection lost
.
.         Send the message 6
.
          MOVE      "sending",STATDESC
          STRIP     HL7MESS6
          MOVELPTR  HL7MESS6,FORM4
.
          COMPARE   ZERO,FORM4
          GOTO      PROC9000 IF EQUAL            * no message
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF SIGPIPE                  * set trap
          WRITE     CISSOCKT,FORM4,5000;HL7MESS6         * send segment
          TRAPCLR   SIGPIPE                              * clear trap
          GOTO      PROC9200 IF TIMEOUT                  * timeout expired
          BRANCH    OVRCD,PROC9100                       * connection lost
.
.         Send the message 7
.
          MOVE      "sending",STATDESC
          STRIP     HL7MESS7
          MOVELPTR  HL7MESS7,FORM4
.
          COMPARE   ZERO,FORM4
          GOTO      PROC9000 IF EQUAL            * no message
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF SIGPIPE                  * set trap
          WRITE     CISSOCKT,FORM4,5000;HL7MESS7         * send segment
          TRAPCLR   SIGPIPE                              * clear trap
          GOTO      PROC9200 IF TIMEOUT                  * timeout expired
          BRANCH    OVRCD,PROC9100                       * connection lost
.
.         Send the message 8
.
          MOVE      "sending",STATDESC
          STRIP     HL7MESS8
          MOVELPTR  HL7MESS8,FORM4
.
          COMPARE   ZERO,FORM4
          GOTO      PROC9000 IF EQUAL            * no message
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF SIGPIPE                  * set trap
          WRITE     CISSOCKT,FORM4,5000;HL7MESS8         * send segment
          TRAPCLR   SIGPIPE                              * clear trap
          GOTO      PROC9200 IF TIMEOUT                  * timeout expired
          BRANCH    OVRCD,PROC9100                       * connection lost
.
.         Get the response
.
          MOVE      "receiving",STATDESC
PROC9000  RECV      CISSOCKT,2000,5000;RECSTRNG; * read first 2000 characters
          GOTO      PROC9200 IF TIMEOUT          * timeout expired
          GOTO      PROC9100 IF OVER             * connection lost
.
          SCAN      ENDBLOCK,RECSTRNG            * end of message found ?
          GOTO      PROC9000 IF EOS              * no - read next block
.
          DISPLAY   *P1:24,*EL,"Message successfully sent.  ";
          CALL      HITENTER
          GOTO      PROC0500
.
PROC9100  DISPLAY   *P1:24,*EL,*B,"Connection lost while ",*+,STATDESC,*-,".  ";
          CALL      HITENTER
          GOTO      PROC9900
.
PROC9200  DISPLAY   *P1:24,*EL,*B,"Timeout expired while ",*+,STATDESC,*-,".  ";
          CALL      HITENTER
          GOTO      PROC9900
.
PROC9300  DISPLAY   *P1:24,*EL,*B,"Failed to connect.  ";
          CALL      HITENTER
.
PROC9900  CLOSE     CISSOCKT
.
PROC9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
