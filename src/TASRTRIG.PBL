.*****************************************************************************
.* System    :   Outpatients                                                 *
.* Program   :   TASRTRIG                                                    *
.* Desc      :   Loop through a clinic list from a text file and retrigger   *
.*               HL7 messages                                                *
.*****************************************************************************
.* Date      :   02/01/2018                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program will loop through hl7cisaf from a start date   *
.*               looking for messages which match the list of valid site/    *
.*               clinics. Records that match will be reset back to "Waiting".*
.*                                                                           *
.* Mods      :                                                               *
.*****************************************************************************
.*        V11.02.01 09/02/2022  Thanh T          TSK 0905641                 *
.*                  Recompiled as OUTMA1FD changes                           *
.*        V10.15.01 13/11/2019  Davin            TSK 0861253                 *
.*                  Added OUTTHIFD for O/P telehealth fields                 *
.*****************************************************************************
.*        V10.11.01 19/02/2018  Jill Parkinson    TSK: 0852909               *
.*                  Removed hard coded POPD and to use the value from the file*
.*        V10.11.00 02/01/2018  Steve Armstrong   TSK: 0850739               *
.*                  Created program                                          *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       HL7CISFD/INC
          INC       IBASEQFD/INC
          INC       OUTBB1FD/INC
          INC       OUTBOAFD/INC
          INC       OUTCANFD/INC
          INC       OUTCONFD/INC
          INC       OUTMA1FD/INC
          INC       OUTQUEFD/INC
          INC       OUTTHIFD/INC
          INC       OUTRSHFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.
. TEMPORARY FILE DEFINITION
. -------------------------
.
TASTEMP1  IFILE SQL, FIXED=13, KEY="U1-6,7-12"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
SITECODE  DIM       6           6           1       Site Code
CLINICID  DIM       6           6           7       Clinic Id Code (outcliaf)
.
.End of Record                             13
.
.
.
FLATFILE  FILE      ASCII,FIXED=4000             * DHS XML VINAH Response File
.
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
CMDLINE   DIM       80
COUNTER   FORM      10                           * message retrigger count
DIM11     DIM       11
DIM3      DIM       3
DIM4      DIM       4
DIM6      DIM       6
BURSTCNT  FORM      6                            * burst message running count
BURSTTIM  FORM      3
HL7FLNAM  DIM       80                           * clinic list file path/name
SAVKEY37  DIM       37
TARGTCNT  FORM      6                            * burst message target count
TEMPFILE  DIM       8
.
.
. PROGRAM CONSTANTS
. -----------------
ERASE     INIT      "iserase "
ISBUILD   INIT      "isbuild "
PIPE      INIT      "|"
STRTDATE  INIT      "20171219"
UKEY      INIT      " 13 U1-6,7-12"
.
.
PRGID     INIT      "TASRTRIG"
PRGNAM    INIT      "Retrigger O/P Clinic Messages"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
          CALL      CREA0000               * create tempfile
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN0500:      * proceed with retrigger (count only)
                            MAIN0500       * proceed with retrigger
.
MAIN0500  CALL      GFIL0000               * get clinic list filename
          BRANCH    EXIT,MAIN0100          * file not found - back to menu
.
          CALL      GTGT0000               * get burst target
          BRANCH    EXIT,MAIN0100          * nothing entered - back to menu
.
          CALL      GWTM0000               * get burst wait time
          BRANCH    EXIT,MAIN0100          * nothing entered - back to menu
.
MAIN1000  CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN2000  CALL      CLER0000               * clear tempfile records
          CALL      LOAD0000               * load tempfile records
.
          CALL      PROC0000               * process
          GOTO      MAIN0100
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"hl7cisaf";
          OPEN      HL7CISA2,"hl7cisaf"
.
          DISPLAY   *P64:24,"outqueaf";
          OPEN      OUTQUEA1,"outqueaf"
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run re-triggering                       *
.*                        TRUE  (1)  Exit option selected                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Clinic Retriggering ":
                                           "(Count only)":
                    *P1:6,*V2LON,TWO,*HOFF,". Run Clinic Retriggering"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9100 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run retriggering count only
                            OPTN9000             * run retriggering
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9100  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                          GFIL0000               Called by: MAIN0000       *
.*                       Keyin the clinic list file name                     *
.* Returns:  HL7FLNAM - Clinic list file name                                *
.*           EXIT  0 = valid filename input                                  *
.*                 1 = nothing input                                         *
.*****************************************************************************
.
GFIL0000  KEYIN     *P1:10,*EF,"Filename (including path): ":
                    *P28:10,*V2LON,HL7FLNAM
.
          PACK      HL7FLNAM,HL7FLNAM,SP30
          MATCH     SP30,HL7FLNAM
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,*B,"Filename not entered.  ";
            CALL      HITENTER
            GOTO      GFIL9100
          ENDIF
.
          STRIP     HL7FLNAM
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FLATFILE,HL7FLNAM
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"File not found.  ";
            CALL      HITENTER
            GOTO      GFIL9100
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      GFIL9999
.
GFIL9100  MOVE      ONE,EXIT
.
GFIL9999  RETURN
+
.*****************************************************************************
.*                          GTGT0000               Called by: MAIN0000       *
.*                   Get the target burst count                              *
.* Returns: TARGTCNT - target burst count                                    *
.*          EXIT  0 = Ok to continue                                         *
.*                1 = nothing entered                                        *
.*****************************************************************************
.
GTGT0000  BRANCH    COPTION,GTGT9000             * count only
.
          KEYIN     *P1:12,*EL,"Target Burst Count     : ":
                    *P26:12,*V2LON,*JR,DIM6
.
.         Check if anything was entered
.
          PACK      DIM6,DIM6,SP6
          MATCH     SP6,DIM6
          GOTO      GTGT9100 IF EQUAL
.
.         Make sure we have a numeric value
.
          TYPE      DIM6
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Non-numeric value entered.  ";
            CALL      HITENTER
            GOTO      GTGT0000
          ENDIF
.
.         We have a valid numeric value, so load the variable
.
          MOVE      DIM6,TARGTCNT
.
.         Check to make sure that the target is not zero
.
          IF        TARGTCNT = 0
            DISPLAY   *P1:24,*EL,*B,"Target count cannot be zero.  ";
            CALL      HITENTER
            GOTO      GTGT0000
          ENDIF
.
GTGT9000  MOVE      ZERO,EXIT
          GOTO      GTGT9999
.
GTGT9100  MOVE      ONE,EXIT
.
GTGT9999  RETURN
+
.*****************************************************************************
.*                          GWTM0000               Called by: MAIN0000       *
.*                   Get the burst wait time (secs)                          *
.* Returns: BURSTTIM - burst wait time                                       *
.*          EXIT  0 = Ok to continue                                         *
.*                1 = nothing entered                                        *
.*****************************************************************************
.
GWTM0000  BRANCH    COPTION,GWTM9000             * count only
.
          KEYIN     *P1:14,*EL,"Burst Wait Time (secs) : ":
                    *P26:14,*V2LON,*JR,DIM3
.
.         Check if anything was entered
.
          PACK      DIM3,DIM3,SP3
          MATCH     SP3,DIM3
          GOTO      GWTM9100 IF EQUAL
.
.         Make sure we have a numeric value
.
          TYPE      DIM3
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Non-numeric value entered.  ";
            CALL      HITENTER
            GOTO      GWTM0000
          ENDIF
.
.         We have a valid numeric value, so load the variable
.
          MOVE      DIM3,BURSTTIM
.
GWTM9000  MOVE      ZERO,EXIT
          GOTO      GWTM9999
.
GWTM9100  MOVE      ONE,EXIT
.
GWTM9999  RETURN
+
.*****************************************************************************
.*                               LOAD0000              Called by: MAIN0000   *
.*                   Load site/clinic details from text file                 *
.*****************************************************************************
.
LOAD0000  DISPLAY   *P1:24,*EL,"Loading site/clinic codes:";
.
LOAD0500  READ      FLATFILE,SEQ;DIM11           * read next record
          GOTO      LOAD9999 IF OVER             * eof - finished load
.
          DISPLAY   *P28:24,*EL,*V2LON,DIM11;
.
.         Text file clinic records are based on 4 characters of ???? code,
.         followed by an uppercase "C", followed by the clinic id code.
.         So extract this data out first.
.
          UNPACK    DIM11,DIM4,DIM1,DIM6
.
.         Check this is a clinic code
.
          MATCH     ANSC,DIM1                    * clinic code ?
          GOTO      LOAD0500 IF NOT EQUAL        * no - ignore record
.
.         If the site/clinic combination isn't on the tempfile already, then
.         write it.
.
.         MOVE      "POPD  ",SITECODE
          PACK      SITECODE,DIM4,SP70
          PACK      CLINICID,DIM6,SP6
.
          PACK      KEY12,SITECODE,CLINICID
          CALL      RATEMP1
          IF        OVRCD = 1
            CALL      WRTEMP1                    * write new tempfile record
          ENDIF
.
          GOTO      LOAD0500                     * next next record
.
LOAD9999  RETURN
+
.*****************************************************************************
.*                               PROC0000              Called by: MAIN0000   *
.*        Loop through hl7cisaf using the delivered date to search           *
.*        for O/P messages that match the site/clinic id and if found,       *
.*        retrigger the message.                                             *
.*****************************************************************************
.
PROC0000  DISPLAY   *P1:24,*EL,"Processing retriggers:";
.
          IF        COPTION = 2
            MOVE      ZERO,CPAGENO               * init. print variables
            MOVE      ZERO,CNOUNDLN
            CALL      IBACLOCK
            CALL      HEAD0000
          ENDIF
.
          MOVE      ZERO,COUNTER                 * init. retrigger count total
          MOVE      ZERO,BURSTCNT                * init. running burst count
.
          PACK      KEY37,ANSD,STRTDATE,SP70
PROC0100  CALL      RSH7CIS2                     * position before start date
PROC0500  CALL      RKH7CIS2                     * read next record
          BRANCH    OVRCD,PROC9000               * eof - finished
.
          MATCH     ANSD,H7CISTAT                * delivered record ?
          GOTO      PROC9000 IF NOT EQUAL        * no - finished
.
          DISPLAY   *P24:24,*EL,*V2LON,H7CIMESI;
.
          MOVE      H7CIMESI,KEY20
          CALL      RDOTQUE1                     * O/P message ?
          BRANCH    OVRCD,PROC0500               * no - ignore message
.
.         Save current hl7cisaf key for repositioning later
.
          PACK      SAVKEY37,H7CISTAT,H7CIDTTM,H7CIMESI
.
.         We have an O/P message, so check that it belongs to a site/clinic
.         on the temp file
.
          PACK      KEY12,OBASITE,OBACLIN
          CALL      RDTEMP1                      * site/clinic on tempfile ?
          BRANCH    OVRCD,PROC0500               * no - ignore message
.
.         The site/clinic match, so retrigger the message
.
          ADD       ONE,COUNTER                  * incr. total retrigger count
          ADD       ONE,BURSTCNT                 * incr. running burst count
.
.         Check if this is the count option only, or we are actually
.         retriggering messages
.
          BRANCH    COPTION,PROC0500             * count option only
.
          CALL      DISP0000                     * print message data
.
          MOVE      SP20,H7CIDDAT                * clear delivered date/time
          MOVE      ANSW,H7CISTAT                * reset status back to Waiting
          CALL      UPH7CIS2                     * update record
.
.         See if we have reached the target burst count and if so,
.         wait for the specified time (secs) and reset the running count
.
          COMPARE   BURSTCNT,TARGTCNT
          IF        @EQUAL
            DISPLAY   *WBURSTTIM;
            MOVE      ZERO,BURSTCNT
          ENDIF
.
.         Reposition after update so we are ready for the next record
.
          MOVE      SAVKEY37,KEY37
          GOTO      PROC0100
.
PROC9000  DISPLAY   *P1:22,*EF,"Processing completed.":
                    *P1:23,*V2LON,COUNTER,*HOFF," messages retriggered.":
                    *P1:24;
          CALL      HITENTER
.
          IF        COPTION = 2
            CALL      LINE0000
            PRINT     *N,*1,"*** End of Report ***"
          ENDIF
.
PROC9999  RETURN
+
.*****************************************************************************
.*                              CREA0000               Called by: MAIN0000   *
.*             Create a new temporary file                                   *
.*****************************************************************************
.
CREA0000  CALL      TFILENAM                     * get new tempfile name
          MOVE      TFILNAME,TEMPFILE
.
          CALL      KILL0000                     * remove existing file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,TEMPFILE,UKEY
          EXECUTE   CMDLINE,TASKID               * create temporary index file
.
          OPEN      TASTEMP1,TEMPFILE            * open temp index file
.
CREA9999  RETURN
+
.****************************************************************************
.*                              KILL0000               Called by: MAIN0000  *
.*               Close and erase the temporary file                         *
.****************************************************************************
.
KILL0000  CLOSE     TASTEMP1                     * close file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
KILL9999 RETURN
+
.****************************************************************************
.*                              CLER0000               Called by: MAIN0000  *
.*               Clear all records from the temporary table                 *
.****************************************************************************
.
CLER0000  MOVE      SP20,KEY12
          CALL      RSTEMP1                      * position at start of file
          CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,CLER9999               * eof - finished
.
          PACK      KEY12,SITECODE,CLINICID
          CALL      DETEMP1                      * delete current record
          GOTO      CLER0000                     * get next record
.
CLER9999  RETURN
+
.****************************************************************************
.*                            DISP0000                 Called by: PROC0000  *
.*                  Print a report record line                              *
.****************************************************************************
.
DISP0000  COMPARE   FIFTY5,CLNO                  * page full ?
          CALL      HEAD0000 IF NOT LESS         * yes
.
          PRINT     *1,PIPE,*3,H7CIMESI,*24,PIPE,*26,H7CIURNO,*37,PIPE:
                    *39,H7CIMETP,*52,PIPE,*54,OBASITE,*61,PIPE,*63:
                    OBACLIN,*70,PIPE,*72,OBAOUTNO,*132,PIPE
.
          ADD       ONE,CLNO                     * increment line count
.
DISP9999  RETURN
+
.****************************************************************************
.*                            HEAD0000                 Called by: PROC0000  *
.*                       Print page heading                       DISP0000  *
.****************************************************************************
.
HEAD0000  CALL      HEAD132                      * display page header
.
          CALL      LINE0000                     * draw line across page
.
          PRINT     *1,PIPE,*3,"Message Id",*24,PIPE,*26,"U/R Number",*37,PIPE:
                    *39,"Message Type",*52,PIPE,*54,"Site",*61,PIPE,*63:
                    "Clinic",*70,PIPE,*72,"Visit No.",*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      SIX,CLNO                     * increment line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: HEAD0000  *
.*                      Draw line across page                     PROC0000  *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                    *
.****************************************************************************
.
RATEMP1   MOVE      ZERO,OVRCD
          READ      TASTEMP1,KEY12;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTEMP1   READ      TASTEMP1,KEY12;;
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          READ      TASTEMP1,KEY12;SITECODE,CLINICID
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    TASTEMP1;SITECODE,CLINICID
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTEMP1   MOVE      ZERO,OVRCD
          READKP    TASTEMP1;SITECODE,CLINICID
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMP1   WRITE     TASTEMP1,KEY12;SITECODE,CLINICID
          RETURN
.
UPTEMP1   UPDATE    TASTEMP1;SITECODE,CLINICID
          RETURN
.
DETEMP1   DELETE    TASTEMP1,KEY12
          RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       TFILENAM
.
          INC       HL7CISIO/INC
          INC       IBASEQIO/INC
          INC       OUTQUEIO/INC
          INC       WEBERRIO/INC
