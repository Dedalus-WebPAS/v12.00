.***************************************************************************
.* System    :   PRIVATE PRACTICE SYSTEM                                   *
.* Program   :   IBAPRI98                                                  *
.* Desc      :   System Parameter Maintenance                              *
.***************************************************************************
.* Date      :   8/1/91                                                    *
.* Author    :   Stephen Armstrong                                         *
.* Function  :   Allows user to input and update system parameters         *
.* Mods      :                                                             *
.*        V10.04.01 17/06/2014  Steve Armstrong   CAR 301639               *
.*                  Added call to TFILENAM for FNAMPOST (AUTOPCOD) into    *
.*                  INIT0000.                                              *
.*                  Recompiled for changes to AUTOPCOD & AUPCDVAR.         *
.***************************************************************************
.*        V10.00.01 23/08/2010  Steve Armstrong   CAR 228847               *
.*                  Recompiled for changes to PATIN1IO                     *
.***************************************************************************
.*        V9.02.03  25/11/2002  Dean Cramer   Defect 20086                 *
.*                  Add STV option for invoice format PRCNLAYT             *
.*        V9.02.02  05/11/2002  J.Tan                                      *
.*                  Mods PTCNUPRA - default PRA to master details          *
.*        V9.02.01  10/01/2001  J.Tan                                      *
.*                  Added field for type of fees allocation                *
.*        V5.08.02  27/06/2000  Steve Downing                              *
.*                  Added fields for Doctor charges to Accounts Payable    *
.*        V5.08.01  08/06/2000  Davin                                      *
.*                  Added PRCNPRIH & PRCNPRIT for user defined invoice     *
.*                  headers/tails                                          *
.*       V5.07.B01  06/11/1998  Jim Stathopoulos                           *
.*                  507 Changes                                            *
.***************************************************************************
.*        V5.06.01  14/09/1998  J.Tan   SRF 627407                         *
.*                  Added PTCNCADM - to print batch invoice for all current*
.*        V5.04.01  05/09/1997  Steve Armstrong                            *
.*                  Added PTCNHRHF & PRCNRUDF for global recompile bugs    *
.*        V5.04.00  02/07/1997  Howellsy                                   *
.*                  Ported from 6.04                                       *
.* *************************************************************************
.*             V6.01  25/06/92  DIG                                        *
.*                      Re-Compiled for file changes, etc                  *
.*             V6.00.02 20/07/92  Whirlpool                                *
.*                      added PRCNOSYS                                     *
.*                      04/08/92  DIG                                      *
.*                      Changed Modbury to HRH for invoice layouts.        *
.*             V6.00.03 12/08/92  DIG                                      *
.*                      Added PRCNGLIN an PRCNGLPA parameters for the      *
.*                      general ledger interface                           *
.*             V6.00.04 27/10/92  Whirlpool                                *
.*                      added extra invoice layout for royal childrens     *
.*             V6.00.05 25/01/1993  Steve Armstrong  SRF 120122  Q 7558    *
.*                      Mods to have referring doctor on transaction       *
.*                      screen                                             *
.*             V6.00.06 19/05/1993  Gabrielle        SRF 119837  Q 7583    *
.*                      Added new invoice layout No. 5 (Lingard)           *
.*        V6.00.07  09/08/1993  Glenn Berry                SRF 122353      *
.*                  Added PRCNGENB & PRCNNXBA                              *
.*        V6.00.08  17/11/1993  Greg Horvat                SRF 124924      *
.*                  Added invoice layouts for Modbury & St.Edmonds         *
.*        V6.01.03  15/07/1994  Graeme Williams   SRF 130824               *
.*                  Adde PRCNS4B3 - Exemption item for S4B3 exempt patients*
.*        V6.03.B2  11/03/1995  Graeme Williams   R6.03 enhancements          *
.*                  Added extra audits for priexcaf and prisptaf              *
.*        V6.03.B3  02/05/1995  Gabrielle       Mt Wilga                      *
.*                  Changed description of St Edmunds invoice layout to Alpha,*
.*                  removed printing the heading description from either      *
.*                  controlf of pripracf file using prcnaddr parameter        *
.*        V6.03.B4  19/05/1995  Greg Horvat      SRF 136506                   *
.*                  Added PRCNTCOD - Special character for test codes         *
.*        V6.03.B5  27/05/1995  Graeme Williams                               *
.*                  Added PRCNUPRA - How to default PRA for U/R Numbers       *
.*        V6.03.01  03/01/1996  Greg Horvat                                   *
.*                  Removed the menu program, security key, IBA screen        *
.*                  password & data directory keyins & changed to use a       *
.*                  standard keyin for the IBA screen security password       *
.*        V6.03.02  18/10/1996  Greg Hrovat      Holy Spirit Mods             *
.*                  Added AUPCDVAR & AUTOPCOD - Automatic generation of the   *
.*                  postcode                                                  *
.*                                                                            *
.******************************************************************************
.
.$$$$$
.         System Parameter Maintenance ( IBAPRI98 )
.         -----------------------------------------
.
.         ML0000    
.         Initialise and open files
.                patcodes 
.                patin1af
.                controlf
.
.         ML0100    
.         Get option selected
.         If option 0 selected, exit program
.         If option 1 selected, modify system audits
.         If option 2 selected, modify user screen 1
.         If option 3 selected, modify user screen 2
.         If option 4 selected, modify ATB Setup
.         If option 5 selected, modify billing UDF's
.         If option 6 selected, modify debtor UDF's
.         If option 7 selected, modify M.A.B. UDF's
.         If option 8 selected, modify IBA controlled screen
.
.         ML1000
.         System Audit Maintenance.
.         The screen displays the audit files for the system and indicates
.         if they are turned on or off.
.         If a number is input, the status of that field can be altered.
.         If cancel is selected, the program returns to get the next option.
.         If post is selected, the program writes the changes to the file,
.         then returns to get the next option.
.
.         ML2000
.         User Screen 1
.         The input screen is displayed with the current item values, then 
.         the user is prompted.
.         If a number is input, the value of that field can be altered.
.         If cancel is selected, the program returns to get the next option.
.         If post is selected, the program writes the changes to the file,
.         then returns to get the next option.
.         
.         ML3000
.         User Screen 2
.         The input screen is displayed with the current item values, then 
.         the user is prompted.
.         If a number is input, the value of that field can be altered.
.         The field for next generated debtor number is only active if 
.         the `generate debtor numbers automatically' field is set to `yes'.
.         If cancel is selected, the program returns to get the next option.
.         If post is selected, the program writes the changes to the file,
.         then returns to get the next option.
.         
.         ML3500
.         Setup ATB Screen
.         The input screen is displayed with the current item values, then 
.         the user is prompted.
.         If a number is input, the value of that field can be altered.
.         If cancel is selected, the program returns to get the next option.
.         If post is selected, the program writes the changes to the file,
.         then returns to get the next option.
.         
.         ML4000
.         User Defined Fields - Billing
.         The input screen is displayed with the current item values, then 
.         the user is prompted.
.         If a number is input, the value of that field can be altered.
.         If cancel is selected, the program returns to get the next option.
.         If post is selected, the program writes the changes to the file,
.         then returns to get the next option.
.
.         ML5000
.         User Defined Fields - Debtor
.         The input screen is displayed with the current item values, then 
.         the user is prompted.
.         If a number is input, the value of that field can be altered.
.         If cancel is selected, the program returns to get the next option.
.         If post is selected, the program writes the changes to the file,
.         then returns to get the next option.
.
.         ML6000
.         User Defined Fields - M.A.B.
.         The input screen is displayed with the current item values, then 
.         the user is prompted.
.         If a number is input, the value of that field can be altered.
.         (NB. These fields are currently always in use and mandatory, and 
.         the only fields that can be changed, are the descriptions.)
.         If cancel is selected, the program returns to get the next option.
.         If post is selected, the program writes the changes to the file,
.         then returns to get the next option.
.         
.         ML7000
.         The input screen is displayed with the current item values, then 
.         the user is prompted.
.         If a number is input, the value of that field can be altered.
.         If cancel is selected, the program returns to get the next option.
.         If post is selected, the program writes the changes to the file,
.         then returns to get the next option.
.
.$$$$$
          INC       FMSSTDDF                * Standard FMS variables routine
          INC       AUPCDVAR/INC            * Auto postcode variables
.
. FILE DESCRIPTION INCLUDES
. -------------------------
.
          INC       IBAGSTFD/INC
          INC       IBASEQFD/INC
          INC       FMSAMAFD/INC
          INC       FMSLMAFD/INC
          INC       IBACONFD/INC
          INC       IBATMHFD/INC
          INC       PRICONFD/INC                 * control file
          INC       PATCONFD/INC                
          INC       PATIN1FD/INC                 * insurance codes files
          INC       PATCODFD/INC                 * codes file
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
. PROGRAM CONSTANTS
. -----------------
.
ATB0      INIT      "Normal"                     * ATB layouts
ATB1      INIT      "W.C.H."
ATB2      INIT      "Mercy"
FEE0      INIT      "Normal"
FEE1      INIT      "Doctor %"
.
CMESS     INIT      "Missing category"
.
CODEG1    INIT      "G1"                         * |
CODEG2    INIT      "G2"                         * |  Billing UDF categories 
CODEG3    INIT      "G3"                         * |
CODEG4    INIT      "G4"                         * |
.
CODEG5    INIT      "G5"                         * |
CODEG6    INIT      "G6"                         * |  Debtor UDF categories
CODEG7    INIT      "G7"                         * |
CODEG8    INIT      "G8"                         * |
.
CODEMO    INIT      "MO"                         * | MAB UDF categories
CODEMP    INIT      "MP"                         * |
.
DUPRA0    INIT      "Default to Patient"
DUPRA1    INIT      "From last Inpatient Visit"
DUPRA2    INIT      "From last Priv Prac Inv."
DUPRA3    INIT      "From Master record "
.
HOSDESC1  INIT      "Private"
HOSDESC2  INIT      "Public "
IMESS     INIT      "Insurance company not on file"
.
INV0      INIT      "Standard Layout"            * invoice layouts
INV1      INIT      "Warburton"
INV2      INIT      "HRH"
INV3      INIT      "Melbourne Clinic"
INV4      INIT      "RCH"
INV5      INIT      "Lingard"
INV6      INIT      "Modbury"
INV7      INIT      "Alpha"
INV8      INIT      "West Wimmera"
INV9      INIT      "St.Vs Melb."
.
SP12      INIT      "            "
.
. LOCAL VARIABLE DEFINITION
. -------------------------
.
ACCTDESC  DIM       13
ADDR1     DIM       25                           * hospital postal address 1
ADDR2     DIM       25                           * hospital postal address 2
ADDR3     DIM       25                           * hospital postal address 3
ASGAP     FORM      2                            * letter address/salutation gap
ATBDESC   DIM       10                           * ATB description
ATBLAY    FORM      1
BBCLAIM   FORM      8                            * bulk bill claim number
CLAIM     FORM      8                            * next unique claim number
CLNAME    DIM       30                           * clinic name on invoices
.
CPHONE    DIM       12                           * clinic telephone on invoices
DAGAP     FORM      2                            * letter date/address gap
DIM30     DIM       30
DPATH     DIM       20
DUPRA     DIM       30
FEEDESC   DIM       8
FLAG      DIM       3                            * Yes / No flag
FMSFILES  FORM      1
FORM3     FORM      3
FORM8     FORM      8                            * security pass date
HOSDESC   DIM       7
HOSTYPE   FORM      1
INSUR     DIM       6 
INVDESC   DIM       20                           * invoice description
INVLAY    FORM      1
IOPTION   FORM      2
.
LEDGDESC  DIM       23
LETLEN    FORM      3                            * letter printing length
LMARG     FORM      2                            * letter left margin
LPORT     FORM      2
MNAME     DIM       8 
NEXNUM    FORM      8                            * next generated debtor no.
NEXTINV   FORM      8                            * next invoice number
NEXTREC   FORM      8
NEXTUNQ   FORM      8                            * next unique claims number
PASS      DIM       8
PASSWD    DIM       8
PCODE     DIM       4                            * hospital postcode
PLENGTH   FORM      3                            * letter page length
REPFLAG   FORM      1
SECCODE   DIM       6
STGAP     FORM      2                            * letter salutation/text gap
TMARG     FORM      2                            * letter top margin
.
. -- Billing --
.
UDESC1    DIM       20                           * description for UDF 1
UDESC2    DIM       20                           * description for UDF 2
UDESC3    DIM       20                           * description for UDF 3
UDESC4    DIM       20                           * description for UDF 4
.
. -- Debtor --
.
UDESC5    DIM       20                           * description for UDF 5
UDESC6    DIM       20                           * description for UDF 6
UDESC7    DIM       20                           * description for UDF 7
UDESC8    DIM       20                           * description for UDF 8
.
. -- M.A.B. --
.
UDESCA    DIM       20                           * description for UDF 9
UDESCB    DIM       20                           * description for UDF 10
.
PRGID     INIT      "IBAPRI98"
PRGNAM    INIT      "System Parameter Maintenance"
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialization and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
.
          BRANCH    PRCNHFUN,ML0500        * UDF's in use
.
          BRANCH    COPTION,ML1000:        * system audits
                            ML2000:        * user screen 1
                            ML3000:        * user screen 2
                            ML3500:        * ATB Setup screen
                            ML6000:        * user defined fields - M.A.B.
                            ML7000:        * iba controlled screen 1
                            ML8000:        * iba controlled screen 2
                            ML9000         * iba special screen 1
.
ML0500    BRANCH    COPTION,ML1000:        * system audits
                            ML2000:        * user screen 1
                            ML3000:        * user screen 2
                            ML3500:        * ATB Setup screen
                            ML4000:        * user defined fields - billing
                            ML5000:        * user defined fields - debtor
                            ML6000:        * user defined fields - M.A.B.
                            ML7000:        * iba controlled screen 1
                            ML8000:        * iba controlled screen 2
                            ML9000         * iba special screen 1
.
. ---- modify system audits ----
.
ML1000    CALL      CLRA0000               * clear variables
          CALL      SCRA0000               * display screen format
          CALL      DISA0000               * display details
          CALL      SELA0000               * select field to modify
          BRANCH    EXIT,ML0100            * (C)ancel
          CALL      UPDA0000               * update record
          GOTO      ML0100                 * get next option
.
. ---- modify user screen 1 ----
.
ML2000    CALL      CLRB0000               * clear variables
          CALL      SCRB0000               * display screen format
          CALL      DISB0000               * display details
          CALL      SELB0000               * select field to modify
          BRANCH    EXIT,ML0100            * (C)ancel
          CALL      UPDB0000               * update record
          GOTO      ML0100                 * get next option
.
. ---- modify user screen 2 ----
.
ML3000    CALL      CLRC0000               * clear variables
          CALL      SCRC0000               * display screen format
          CALL      DISC0000               * display details
          CALL      SELC0000               * select field to modify
          BRANCH    EXIT,ML0100            * (C)ancel
          CALL      UPDC0000               * update record
          GOTO      ML0100                 * get next option
.
. ---- modify ATB screen ----
.
ML3500    CALL      CLRH0000               * clear variables
          CALL      SCRH0000               * display screen format
          CALL      DISH0000               * display details
          CALL      SELH0000               * select field to modify
          BRANCH    EXIT,ML0100            * (C)ancel
          CALL      UPDH0000               * update record
          GOTO      ML0100                 * get next option
.
. ---- modify user defined fields (Billing) ----
.
ML4000    CALL      CLRD0000               * clear variables
          CALL      SCRD0000               * display screen format
          CALL      DISD0000               * display details
          CALL      SELD0000               * select field to modify
          BRANCH    EXIT,ML0100            * (C)ancel
          CALL      UPDD0000               * update record
          GOTO      ML0100                 * get next option
.
. ---- modify user defined fields (Debtor) ----
.
ML5000    CALL      CLRE0000               * clear variables
          CALL      SCRE0000               * display screen format
          CALL      DISE0000               * display details
          CALL      SELE0000               * select field to modify
          BRANCH    EXIT,ML0100            * (C)ancel
          CALL      UPDE0000               * update record
          GOTO      ML0100                 * get next option
.
. ---- modify user defined fields (M.A.B.) ----
.
ML6000    CALL      CLRF0000               * clear variables
          CALL      SCRF0000               * display screen format
          CALL      DISF0000               * display details
          CALL      SELF0000               * select field to modify
          BRANCH    EXIT,ML0100            * (C)ancel
          CALL      UPDF0000               * update record
          GOTO      ML0100                 * get next option
.
. ---- modify IBA controlled screen 1 ----
.
ML7000    CALL      IBASECUR                * Keyin IBA screen security passwd
          BRANCH    EXIT,ML0100
.
          CALL      CLRG0000               * clear variables
          CALL      SCRG0000               * display screen format
          CALL      DISG0000               * display details
          CALL      SELG0000               * select field to modify
          BRANCH    EXIT,ML0100            * (C)ancel
          CALL      UPDG0000               * update record
          GOTO      ML0100                 * get next option
.
. ---- modify IBA controlled screen 2 ----
.
ML8000    CALL      IBASECUR                * Keyin IBA screen security passwd
          BRANCH    EXIT,ML0100
.
          CALL      CLRI0000               * clear variables
          CALL      SCRI0000               * display screen format
.
          CALL      DISI0000               * display details
          CALL      SELI0000               * select field to modify
          BRANCH    EXIT,ML0100            * (C)ancel
          CALL      UPDI0000               * update record
          GOTO      ML0100                 * get next option
.
. ---- modify IBA special screen ----
.
ML9000    CALL      IBASECUR                * Keyin IBA screen security passwd
          BRANCH    EXIT,ML0100
.
          CALL      CLRJ0000               * clear variables
          CALL      SCRJ0000               * display screen format
          CALL      DISJ0000               * display details
          CALL      SELJ0000               * select field to modify
          BRANCH    EXIT,ML0100            * (C)ancel
          CALL      UPDJ0000               * update record
          GOTO      ML0100                 * get next option
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialization                               *
.*                          Open files                                      *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,THIRTY3;*162,PRCNHFUN
.
          DISPLAY   *P64:24,"ibatmhaf";          * template header file
          OPEN      IBATMHA1,"ibatmhaf"
.
          DISPLAY   *P64:24,"patcodes";          * category/codes file
          OPEN      PATCODE1,"patcodes"
.  
          DISPLAY   *P64:24,"patin1af ";          * insurance codes file
          OPEN      PATIN1A1,"patin1af"
.
          DISPLAY   *P64:24,"ibagstaf";          * insurance codes file
          OPEN      IBAGSTA1,"ibagstaf"
          OPEN      IBAGSTA2,"ibagstaf"
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSAMAA1,"fmsamaaf"
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,FMSFILES         * FMS files dont exist
          ELSE
            MOVE      ONE,FMSFILES          * FMS files exist
            OPEN      FMSAMAA2,"fmsamaaf"
            OPEN      FMSAMAA3,"fmsamaaf"
            OPEN      FMSAMAA4,"fmsamaaf"
            OPEN      FMSLMAA1,"fmslmaaf"
          ENDIF
.
          MOVE      ONE,CNEWDS
.
          CALL      TFILENAM
          MOVE      TFILNAME,FNAMPOST
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = (0)  Valid option selected                        *
.*                        (1)  Exit option selected                         *
.****************************************************************************
.
OPTN0000  HLINE     *G37,2,54,80 
          MOVE      ZERO,REPFLAG
          DISPLAY   *P1:3,*EF:
                    *P2:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P2:5,*V2LON,ONE,*HOFF," = System Audits":
                    *P2:6,*V2LON,TWO,*HOFF," = User Screen 1":
                    *P2:7,*V2LON,THREE,*HOFF," = User Screen 2":
                    *P2:8,*V2LON,FOUR,*HOFF," = ATB Setup Screen"
.
          MOVE      NINE,CVERT
          MOVE      FIVE,IOPTION
          BRANCH    PRCNHFUN,OPTN0500            * UDF's in use
          GOTO      OPTN0700
.
OPTN0500  DISPLAY   *P2:9,*V2LON,FIVE,*HOFF," = User Defined Fields - Billing":
                    *P2:10,*V2LON,SIX,*HOFF," = User Defined Fields - Debtor"
          ADD       TWO,CVERT
          ADD       TWO,IOPTION
.
OPTN0700  DISPLAY   *P1:CVERT,*V2LON,IOPTION,*HOFF," = User Defined Fields - ":
                    "M.A.B."
          ADD       ONE,CVERT
          ADD       ONE,IOPTION
          DISPLAY   *P1:CVERT,*V2LON,IOPTION,*HOFF," = I.B.A. Controlled ":
                              "Screen 1"
          ADD       ONE,CVERT
          ADD       ONE,IOPTION
          DISPLAY   *P1:CVERT,*V2LON,IOPTION,*HOFF," = I.B.A. Controlled ":
                              "Screen 2"
.
          ADD       ONE,CVERT
          ADD       ONE,IOPTION
          DISPLAY   *P1:CVERT,*V2LON,IOPTION,*HOFF," = IBA Special Screen 1"
.
OPTN1000  MOVE      ZERO,COPTION
          ADD       TWO,CVERT
          KEYIN     *P1:CVERT,*EL,"Select Option : ":
                    *V2LON,COPTION,*HOFF
.
          COMPARE   ZERO,COPTION                  * zero input ?
          GOTO      OPTN9500 IF EQUAL             * yes
.
          BRANCH    PRCNHFUN,OPTN2000             * UDF's in use
.
          BRANCH    COPTION,OPTN9000:
                            OPTN9000:
                            OPTN9000:
                            OPTN9000:
                            OPTN9000:
                            OPTN9000:
                            OPTN9000:
                            OPTN9000
.
          GOTO      OPTN5000
.                           
OPTN2000  BRANCH    COPTION,OPTN9000:
                            OPTN9000:
                            OPTN9000:
                            OPTN9000:
                            OPTN9000:
                            OPTN9000:
                            OPTN9000:
                            OPTN9000:
                            OPTN9000:
                            OPTN9000
.
OPTN5000  BEEP                                   * invalid option input
          SUB       TWO,CVERT
          GOTO      OPTN1000
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT                     * set EXIT = 1
.
OPTN9999  RETURN
+
.**************************************************************************
.*                                 CLRA0000            Called by: INIT0000*
.*                       clear screen 1 program variables                 *
.*                          read in file variables                        *
.**************************************************************************
.
CLRA0000  READ      CONTROLF,THIRTY3;*53,PRCNAUDC,PRCNAUDD,PRCNAUDE:
                                     *57,PRCNAUDG,PRCNAUDH,PRCNAUDI
.
CLRA9999  RETURN
+
.**************************************************************************
.*                                 CLRB0000            Called by: INIT0000*
.*                       clear screen 2 program variables                 *
.*                          read in file variables                        *
.**************************************************************************
.
CLRB0000  MOVE      ZERO,PLENGTH
          MOVE      ZERO,LMARG
          MOVE      ZERO,LETLEN
          MOVE      ZERO,TMARG
          MOVE      ZERO,DAGAP
          MOVE      ZERO,ASGAP
          MOVE      ZERO,STGAP
          MOVE      SP25,ADDR1
          MOVE      SP25,ADDR2
          MOVE      SP25,ADDR2
          MOVE      SP4,PCODE
          MOVE      SP6,INSUR
.
          READ      CONTROLF,TEN;*120,CLETPLN,CLETTAB,CLETLEN,CLETTOP:
                    CLETTOA,CLETTOS,CLETTOT
.
          READ      CONTROLF,THIRTY3;*144,PRCNWCOM,PRCNMABI,PRCNVAIN:
                                     *213,PRCNDAPS,PRCNLPAY,PRCNAPAY:
                                          PRCNLCOM,PRCNACOM
          READ      CONTROLF,THIRTY4;*2,PRCNADD1,PRCNADD2,PRCNADD3,PRCNPOST:
                                     *166,PRCNGLIN
.
CLRB9999  RETURN
+
.**************************************************************************
.*                                 CLRC0000            Called by: INIT0000*
.*                       clear screen 3 program variables                 *
.*                          read in file variables                        *
.**************************************************************************
.
CLRC0000  MOVE      SP30,CLNAME
          MOVE      SP12,CPHONE
.
          READ      CONTROLF,THIRTY3;*71,PRCNNAME,PRCNTELE:
                                     *114,PRCNJOUR,PRCNAUTO,PRCNDETN:
                                     *163,PRCNDOCM:
                                     *180,PRCNURCH:
                                     *201,PRCNS4B3:
                                     *212,PRCNUPRA
.
          READ      CONTROLF,THIRTY4;*188,PRCNNXBA,PRCNTCOD:
                                     *205,PRCNCADM,*206,PRCNPRIH,*212,PRCNPRIT
.
CLRC9999  RETURN
+
.**************************************************************************
.*                                 CLRD0000            Called by: INIT0000*
.*                       clear screen 4 program variables                 *
.*                          read in file variables                        *
.**************************************************************************
.
CLRD0000  MOVE      SP20,UDESC1
          MOVE      SP20,UDESC2
          MOVE      SP20,UDESC3
          MOVE      SP20,UDESC4
.  
          READ      CONTROLF,THIRTY3;*124,PRCNUDF1,PRCNMAN1,PRCNUDF2:
                    PRCNMAN2,PRCNUDF3,PRCNMAN3,PRCNUDF4,PRCNMAN4
.
CLRD9999  RETURN 
+
.**************************************************************************
.*                                 CLRE0000            Called by: INIT0000*
.*                       clear screen 5 program variables                 *
.*                          read in file variables                        *
.**************************************************************************
.
CLRE0000  MOVE      SP20,UDESC5
          MOVE      SP20,UDESC6
          MOVE      SP20,UDESC7
          MOVE      SP20,UDESC8
.  
          READ      CONTROLF,THIRTY3;*132,PRCNUDF5,PRCNMAN5,PRCNUDF6:
                    PRCNMAN6,PRCNUDF7,PRCNMAN7,PRCNUDF8,PRCNMAN8
.
CLRE9999  RETURN 
+
.**************************************************************************
.*                                 CLRF0000            Called by: INIT0000*
.*                       clear screen 6 program variables                 *
.*                          read in file variables                        *
.**************************************************************************
.
CLRF0000  MOVE      SP20,UDESCA
          MOVE      SP20,UDESCB
.
          READ      CONTROLF,THIRTY3;*140,PRCNUDFA,PRCNMANA,PRCNUDFB:
                    PRCNMANB
.
CLRF9999  RETURN
+
.**************************************************************************
.*                                 CLRG0000            Called by: INIT0000*
.*                       clear screen 7 program variables                 *
.*                          read in file variables                        *
.**************************************************************************
.
CLRG0000  MOVE      SP8,MNAME
          MOVE      SP6,SECCODE
          MOVE      SP8,PASSWD
          MOVE      SP20,DPATH
          MOVE      ZERO,NEXTINV
          MOVE      ZERO,NEXTREC
          MOVE      ZERO,HOSTYPE
          MOVE      ZERO,LPORT
          MOVE      ZERO,INVLAY
          MOVE      ZERO,ATBLAY
          MOVE      ZERO,NEXTUNQ
          MOVE      ZERO,CLAIM
          MOVE      ZERO,BBCLAIM
.
          READ      CONTROLF,TEN;*138,CNOPORT
.
          READ      CONTROLF,THIRTY3;*43,PRCNINVN,*60,PRCNDATE,*113,PRCNADDR:
                    *162,PRCNHFUN,*164,PRCNSDAT,*170,PRCNLAYT,PRCNATBL:
                    *172,PRCNUNIQ,*181,PRCNPSYS,PRCNUNCL,PRCNBBCL,PRCNJDAT:
                    *199,PRCNOSYS
          READ      CONTROLF,THIRTY4;*1,PRCNHTYP
.
CLRG9999  RETURN
+
.**************************************************************************
.*                                 CLRH0000            Called by: INIT0000*
.*                       clear screen 7 program variables                 *
.*                          read in file variables                        *
.**************************************************************************
.
CLRH0000  READ      CONTROLF,THIRTY4;*81,PRCNPAID,PRCNPER1,PRCNNAM1,PRCNPER2:
                                         PRCNNAM2,PRCNPER3,PRCNNAM3,PRCNPER4:
                                         PRCNNAM4,PRCNPER5,PRCNNAM5,PRCNPER6:
                                         PRCNNAM6
.
CLRH9999  RETURN
+
.**************************************************************************
.*                                 CLRI0000            Called by: INIT0000*
.*                       clear screen 8 program variables                 *
.*                          read in file variables                        *
.**************************************************************************
CLRI0000  READ      CONTROLF,THIRTY4;*166,PRCNGLIN,PRCNGLPA,*197,PRCNHRHF:
                                     *198,PRCNRUDF,*199,PRCNAFEE
.
CLRI9999  RETURN
+
.**************************************************************************
.*                                 CLRJ0000            Called by: INIT0000*
.*                       clear screen 9 program variables                 *
.*                          read in file variables                        *
.**************************************************************************
CLRJ0000  READ      CONTROLF,THIRTY3;*200,PRCNRDOC
          READ      CONTROLF,THIRTY4;*187,PRCNGENB
.
CLRJ9999  RETURN
+
.**************************************************************************
.*                                 SCRA0000            Called by: ML0000  *
.*                         display screen 1 format                        *
.**************************************************************************
SCRA0000  DISPLAY   *P53:2,*EF
          HLINE     *G37,2,60,80 
          DISPLAY   *P53:2,*V2LON," - Audits ":
                    *P1:4,ONE,*HOFF,". Debtor File",*P24:4,":":
                    *P1:5,*V2LON,TWO,*HOFF,". Doctor File",*P24:5,":":
                    *P1:6,*V2LON,THREE,*HOFF,". Medical Prac. File":
                    *P24:6,":":
                    *P1:7,*V2LON,FOUR,*HOFF,". Special Path. Tests",*P24:7,":":
                    *P1:8,*V2LON,FIVE,*HOFF,". Exception Charging",*P24:8,":":
                    *P1:9,*V2LON,SIX,*HOFF,". Item File",*P24:9,":"
    
.
SCRA9999  RETURN
+
.*************************************************************************
.*                                 SCRB0000            Called by: ML0000 *
.*                         display screen 2 format                       *
.*************************************************************************
.
SCRB0000  DISPLAY   *P53:2,*EF
          HLINE     *G37,2,60,80 
          DISPLAY   *P53:2,*V2LON," - User Screen 1 ":
                    *P2:4,ONE,*HOFF:
                    ". Printing Paper Length for Letters",*P38:4,":":
                    *P2:5,*V2LON,TWO,*HOFF:
                    ". Default Letter Left Margin",*P38:5,":":
                    *P2:6,*V2LON,THREE,*HOFF:
                    ". Default Letter Printing Length",*P38:6,":":
                    *P2:7,*V2LON,FOUR,*HOFF:
                    ". Default Letter Top Margin",*P38:7,":":
                    *P2:8,*V2LON,FIVE,*HOFF:
                    ". Default Letter Date/Address Gap",*P38:8,":":
                    *P2:9,*V2LON,SIX,*HOFF:
                    ". Default Letter Add./Salut. Gap",*P38:9,":":
                    *P2:10,*V2LON,SEVEN,*HOFF:
                    ". Default Letter Salut./Text Gap",*P38:10,":":
                    *P2:11,*V2LON,EIGHT,*HOFF:
                    ". Hospital Postal Address Line 1",*P38:11,":":
                    *P2:12,*V2LON,NINE,*HOFF:
                    ". Hospital Postal Address Line 2",*P38:12,":":
                    *P1:13,*V2LON,TEN,*HOFF:
                    ". Hospital Postal Address Line 3",*P38:13,":":
                    *P1:14,*V2LON,TEN1,*HOFF:
                    ". Hospital Postal Postcode",*P38:14,":":
                    *P1:15,*V2LON,TEN2,*HOFF:
                    ". Insurance Co. for Workers Comp.",*P38:15,":":
                    *P1:16,*V2LON,TEN3,*HOFF:
                    ". Insurance Co. for Motor Acc.Board",*P38:16,":":
                    *P1:17,*V2LON,TEN4,*HOFF:
                    ". Insurance Co. for Veteran Affairs",*P38:17,":";
.
          COMPARE   ONE,PRCNGLIN
          GOTO      SCRB9999 IF NOT EQUAL
.
          DISPLAY   *P1:18,*V2LON,TEN5,*HOFF:
                    ". Import Doctor Charges to APS",*P38:18,":":
                    *P1:19,*V2LON,TEN6,*HOFF:
                    ". Ledger Code for PP Payment",*P38:19,":":
                    *P1:20,*V2LON,TEN7,*HOFF:
                    ". Account Code for PP Payment",*P38:20,":":
                    *P1:21,*V2LON,TEN8,*HOFF:
                    ". Ledger Code for Commission",*P38:21,":":
                    *P1:22,*V2LON,TEN9,*HOFF:
                    ". Account Code for Commission",*P38:22,":"
.
SCRB9999  RETURN
+
.*************************************************************************
.*                                  SCRC0000           Called by: ML0000 *
.*                       display screen 3 format                         *
.*************************************************************************
.
SCRC0000  DISPLAY   *P53:2,*EF
          HLINE     *G37,2,60,80 
          DISPLAY   *P53:2,*V2LON," - User Screen 2 ":
                    *P2:4,ONE,*HOFF:
                    ". Clinic name on invoice",*P40:4,":":
                    *P2:5,*V2LON,TWO,*HOFF:
                    ". Clinic telephone number on invoice",*P40:5,":":
                    *P2:6,*V2LON,THREE,*HOFF:
                    ". Print Journals on invoice",*P40:6,":":
                    *P2:7,*V2LON,FOUR,*HOFF:
                    ". Generate Debtor no.s automatically",*P40:7,":":
                    *P2:8,*V2LON,FIVE,*HOFF:
                    ". Next generated Debtor number",*P40:8,":":
                    *P2:9,*V2LON,SIX,*HOFF:
                    ". Referring Doctor Mandatory (Y/N)",*P40:9,":":
                    *P2:10,*V2LON,SEVEN,*HOFF:
                    ". Special Character for U/R keyin",*P40:10,":":
                    *P2:11,*V2LON,EIGHT,*HOFF:
                    ". Next generated Batch Number    ",*P40:11,":":
                    *P2:12,*V2LON,NINE,*HOFF:
                    ". MBS Item for S4B3 Exemptions   ",*P40:12,":":
                    *P1:13,*V2LON,TEN,*HOFF:
                    ".Special Character for Test Codes",*P40:13,":":
                    *P1:14,*V2LON,TEN1,*HOFF:
                    ".How to default PRA for U/R No's ",*P40:14,":":
                    *P1:15,*V2LON,TEN2,*HOFF:
                    ".Print batch invs for current Adm",*P40:15,":":
                    *P1:16,*V2LON,TEN3,*HOFF:
                    ".User Defined Invoice Header Code",*P40:16,":":
                    *P1:17,*V2LON,TEN4,*HOFF:
                    ".User Defined Invoice Tail Code  ",*P40:17,":"
.
SCRC9999  RETURN
+
.*************************************************************************
.*                                  SCRD0000           Called by: ML0000 *
.*                       display screen 4  format                        *
.*************************************************************************
.
SCRD0000  DISPLAY   *P53:2,*EF
          HLINE     *G37,2,60,80 
          DISPLAY   *P53:2,*V2LON," - Billing ":
                    *P2:4,*V2LON,ONE,*HOFF:
                    ". Using user Defined field 1    (Y/N)",*P42:4,":":
                    *P2:5,*V2LON,TWO,*HOFF:
                    ". Cat G1",*P24:5,"Description",*P42:5,":":
                    *P2:6,*V2LON,THREE,*HOFF:
                    ".",*P24:6,"Mandatory  (Y/N)",*P42:6,":":
                    *P2:7,*V2LON,FOUR,*HOFF:
                    ". Using user Defined field 2    (Y/N)",*P42:7,":":
                    *P2:8,*V2LON,FIVE,*HOFF:
                    ". Cat G2",*P24:8,"Description",*P42:8,":":
                    *P2:9,*V2LON,SIX,*HOFF:
                    ".",*P24:9,"Mandatory  (Y/N)",*P42:9,":":
                    *P2:10,*V2LON,SEVEN,*HOFF:
                    ". Using user Defined field 3    (Y/N)",*P42:10,":":
                    *P2:11,*V2LON,EIGHT,*HOFF:
                    ". Cat G3",*P24:11,"Description",*P42:11,":":
                    *P2:12,*V2LON,NINE,*HOFF:
                    ".",*P24:12,"Mandatory  (Y/N)",*P42:12,":":
                    *P1:13,*V2LON,TEN,*HOFF:
                    ". Using user Defined field 4    (Y/N)",*P42:13,":":
                    *P1:14,*V2LON,TEN1,*HOFF:
                    ". Cat G4",*P24:14,"Description",*P42:14,":":
                    *P1:15,*V2LON,TEN2,*HOFF:
                    ".",*P24:15,"Mandatory  (Y/N)",*P42:15,":"
.
SCRD9999  RETURN
+
.*************************************************************************
.*                                  SCRE0000           Called by: ML0000 *
.*                       display screen 5 format                         *
.*************************************************************************
.
SCRE0000  DISPLAY   *P53:2,*EF
          HLINE     *G37,2,60,80 
          DISPLAY   *P53:2,*V2LON," - Debtor ":
                    *P2:4,*V2LON,ONE,*HOFF:
                    ". Using user Defined field 1    (Y/N)",*P42:4,":":
                    *P2:5,*V2LON,TWO,*HOFF:
                    ". Cat G5",*P24:5,"Description",*P42:5,":":
                    *P2:6,*V2LON,THREE,*HOFF:
                    ".",*P24:6,"Mandatory  (Y/N)",*P42:6,":":
                    *P2:7,*V2LON,FOUR,*HOFF:
                    ". Using user Defined field 2    (Y/N)",*P42:7,":":
                    *P2:8,*V2LON,FIVE,*HOFF:
                    ". Cat G6",*P24:8,"Description",*P42:8,":":
                    *P2:9,*V2LON,SIX,*HOFF:
                    ".",*P24:9,"Mandatory  (Y/N)",*P42:9,":":
                    *P2:10,*V2LON,SEVEN,*HOFF:
                    ". Using user Defined field 3    (Y/N)",*P42:10,":":
                    *P2:11,*V2LON,EIGHT,*HOFF:
                    ". Cat G7",*P24:11,"Description",*P42:11,":":
                    *P2:12,*V2LON,NINE,*HOFF:
                    ".",*P24:12,"Mandatory  (Y/N)",*P42:12,":":
                    *P1:13,*V2LON,TEN,*HOFF:
                    ". Using user Defined field 4    (Y/N)",*P42:13,":":
                    *P1:14,*V2LON,TEN1,*HOFF:
                    ". Cat G8",*P24:14,"Description",*P42:14,":":
                    *P1:15,*V2LON,TEN2,*HOFF:
                    ".",*P24:15,"Mandatory  (Y/N)",*P42:15,":"
.
SCRE9999  RETURN
+
.*************************************************************************
.*                                  SCRF0000           Called by: ML0000 *
.*                       display screen 6 format                         *
.*************************************************************************
.
SCRF0000  DISPLAY   *P53:2,*EF
          HLINE     *G37,2,60,80 
          DISPLAY   *P53:2,*V2LON," - M.A.B. ",*P2:4,ONE,*HOFF:
                    ". Using user Defined field 1    (Y/N)",*P42:4,":":
                    *P2:5,*V2LON,TWO,*HOFF:
                    ". Cat MO",*P24:5,"Description",*P42:5,":":
                    *P2:6,*V2LON,THREE,*HOFF:
                    ".",*P24:6,"Mandatory  (Y/N)",*P42:6,":":
                    *P2:7,*V2LON,FOUR,*HOFF:
                    ". Using user Defined field 2    (Y/N)",*P42:7,":":
                    *P2:8,*V2LON,FIVE,*HOFF:
                    ". Cat MP",*P24:8,"Description",*P42:8,":":
                    *P2:9,*V2LON,SIX,*HOFF:
                    ".",*P24:9,"Mandatory  (Y/N)",*P42:9,":"
.
SCRF9999  RETURN
+
.*************************************************************************
.*                                  SCRG0000           Called by: ML0000 *
.*                        display screen 5 format                        *
.*************************************************************************
.
SCRG0000  DISPLAY   *P53:2,*EF
          HLINE     *G37,2,60,80 
          DISPLAY   *P53:2,*V2LON," - IBA Screen 1 ":
                    *P2:4,ONE,*HOFF:
                    ". (No longer used)",*P49:4,":":
                    *P2:5,*V2LON,TWO,*HOFF:
                    ". (No longer used)",*P49:5,":":
                    *P2:6,*V2LON,THREE,*HOFF:
                    ". (No longer used)",*P49:6,":":
                    *P2:7,*V2LON,FOUR,*HOFF:
                    ". (No longer used)",*P49:7,":":
                    *P2:8,*V2LON,FIVE,*HOFF:
                    ". Next Invoice Number",*P49:8,":":
                    *P2:9,*V2LON,SIX,*HOFF:
                    ". From Date for Fees Invoiced Report",*P49:9,":":
                    *P2:10,*V2LON,SEVEN,*HOFF:
                    ". Hospital Type",*P49:10,":":
                    *P2:11,*V2LON,EIGHT,*HOFF:
                    ". Largest Port Number",*P49:11,":":
                    *P2:12,*V2LON,NINE,*HOFF:
                    ". Use Health Fund and User Defined fields ?",*P49:12,":":
                    *P1:13,*V2LON,TEN,*HOFF:
                    ". Print Practice Name on Invoice",*P49:13,":":
                    *P1:14,*V2LON,TEN1,*HOFF:
                    ". Invoice Layout",*P49:14,":":
                    *P1:15,*V2LON,TEN2,*HOFF:
                    ". Aged Trial Balance Layout",*P49:15,":":
                    *P1:16,*V2LON,TEN3,*HOFF:
                    ". Start of Financial Year (Not in use)",*P49:16,":":
                    *P1:17,*V2LON,TEN4,*HOFF:
                    ". Next Unique Identifier",*P49:17,":":
                    *P1:18,*V2LON,TEN5,*HOFF:
                    ". Using patient system (Y/N) ?",*P49:18,":":
                    *P1:19,*V2LON,TEN6,*HOFF:
                    ". Next unique claims number",*P49:19,":":
                    *P1:20,*V2LON,TEN7,*HOFF:
                    ". Next bulk bill claim number",*P49:20,":":
                    *P1:21,*V2LON,TEN8,*HOFF:
                    ". Allow keyin of journal date (Y/N) ?",*P49:21,":":
                    *P1:22,*V2LON,TEN9,*HOFF:
                    ". Using Outpatient system (Y/N) ?",*P49:22,":"
.
SCRG9999  RETURN
+
.*************************************************************************
.*                                  SCRH0000           Called by: ML0000 *
.*                        display screen 6 format                        *
.*************************************************************************
.
SCRH0000  DISPLAY   *P53:2,*EF
          HLINE     *G37,2,60,80 
          DISPLAY   *P53:2,*V2LON," - A.T.B. Setup Screen ":
                    *P2:4,*V2LON,ONE,*HOFF:
                    ". Print 'Paid' column in A.T.B. (Y/N)",*P40:4,":":
                    *P2:5,*V2LON,TWO,*HOFF:
                    ". ## Days in A.T.B. period 1",*P40:5,":":
                    *P2:6,*V2LON,THREE,*HOFF:
                    ". Heading for A.T.B. period 1",*P40:6,":":
                    *P2:7,*V2LON,FOUR,*HOFF:
                    ". ## Days in A.T.B. period 2",*P40:7,":":
                    *P2:8,*V2LON,FIVE,*HOFF:
                    ". Heading for A.T.B. period 2",*P40:8,":":
                    *P2:9,*V2LON,SIX,*HOFF:
                    ". ## Days in A.T.B. period 3",*P40:9,":":
                    *P2:10,*V2LON,SEVEN,*HOFF:
                    ". Heading for A.T.B. period 3",*P40:10,":":
                    *P2:11,*V2LON,EIGHT,*HOFF:
                    ". ## Days in A.T.B. period 4",*P40:11,":":
                    *P2:12,*V2LON,NINE,*HOFF:
                    ". Heading for A.T.B. period 4",*P40:12,":":
                    *P1:13,*V2LON,TEN,*HOFF:
                    ". ## Days in A.T.B. period 5",*P40:13,":":
                    *P1:14,*V2LON,TEN1,*HOFF:
                    ". Heading for A.T.B. period 5",*P40:14,":":
                    *P1:15,*V2LON,TEN2,*HOFF:
                    ". ## Days in A.T.B. period 6",*P40:15,":":
                    *P1:16,*V2LON,TEN3,*HOFF:
                    ". Heading for A.T.B. period 6",*P40:16,":"
.
SCRH9999  RETURN
+
.*************************************************************************
.*                                  SCRI0000           Called by: ML0000 *
.*                        display screen 5 format                        *
.*************************************************************************
.
SCRI0000  DISPLAY   *P53:2,*EF
          HLINE     *G37,2,60,80 
          DISPLAY   *P53:2,*V2LON," - IBA Screen 2 ":
                    *P2:4,ONE,*HOFF:
                    ". Running General Ledger Interface ",*P42:4,":":
                    *P2:5,*V2LON,TWO,*HOFF:
                    ". General Ledger Path Name ",*P42:5,":":
                    *P2:6,*V2LON,THREE,*HOFF:
                    ". Using HRH Delphic Interface (Y/N)",*P42:6,":":
                    *P2:7,*V2LON,FOUR,*HOFF:
                    ". UDF used for Referral Length (G1-G4)",*P42:7,":":
                    *P2:8,*V2LON,FIVE,*HOFF:
                    ". Type of Fees Allocation             ",*P42:8,":";
.
SCRI9999  RETURN
+
.*************************************************************************
.*                                  SCRJ0000           Called by: ML0000 *
.*                        display screen 8 format                        *
.*************************************************************************
.
SCRJ0000  DISPLAY   *P53:2,*EF
          HLINE     *G37,2,60,80 
          DISPLAY   *P53:2,*V2LON," - IBA Special Screen 1 ",*HOFF:
                    *P5:3,*ULON,"Quote",*P11:3,"  Date  ",*HOFF:
.
                    *P1:4,ONE,DOT,*V2LON,"   7558 25/01/93",*HOFF:
                    " Referring doctor on transaction screen ? (":
                    ANSY,SLASH,ANSN,"):":
.
                    *P1:5,TWO,DOT,*V2LON,"   ???? 09/08/93",*HOFF:
                    " Generate Batch Numbers in IBAPRI04?      (Y/N):"
.
SCRJ9999  RETURN
+
.****************************************************************************
.*                                  CHKA0000           Called by: DBTA0000  *
.*                                                                MPRA0000  *
.*                                                                ITMA0000  *
.*                                                     JRNL0000,  STIM0000  *
.*                                                     AUTO0000,  REFD0000  *
.*                                                     UDFA0000,  MANA0000  *
.*                                                     UDFB0000,  MANB0000  *
.*                                                     UDFC0000,  MANC0000  *
.*                                                     UDFD0000,  MAND0000  *
.*                                                     UDFE0000,  MANE0000  *
.*                                                     UDFF0000,  MANF0000  *
.*                                                     UDFG0000,  MANG0000  *
.*                                                     UDFH0000,  MANH0000  *
.*                                                     HUDF0000,  IADD0000  *
.*                     see what was input for yes/no question               *
.*           EXIT : 0 = no/nothing entered                                  *
.*                  1 = yes entered                                         *
.****************************************************************************
.
CHKA0000  MOVE      SP1,ANS
.
          KEYIN     *PCCOL:CVERT,*EL,*DV,UNDLN1:
                    *PCCOL:CVERT,*V2LON,ANS
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
          REP       UPPLOW,ANS
.
          MATCH     SP1,ANS                      * anything entered ?
          GOTO      CHKA8000 IF EQUAL            * no
.
          MATCH     ANSN,ANS                     * No entered ? 
          GOTO      CHKA8000 IF EQUAL            * yes
.
          MATCH     ANSY,ANS                     * Yes entered ?
          GOTO      CHKA9000 IF EQUAL            * yes
.
          BEEP                                   * invalid input
          GOTO      CHKA0000
.
CHKA8000  MOVE      ZERO,EXIT
          DISPLAY   *PCCOL:CVERT,*V2LON,NO
          GOTO      CHKA9999
.
CHKA9000  MOVE      ONE,EXIT
          DISPLAY   *PCCOL:CVERT,*V2LON,YES
.
CHKA9999  RETURN
.
.****************************************************************************
.*                                  DBTA0000           Called by: SELA0000  *
.*                     input debtor file audit status                       *
.****************************************************************************
.
DBTA0000  MOVE      "26",CCOL
          MOVE      FOUR,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,DBTA9000                * yes answer
.
          MOVE      ONE,PRCNAUDD                 * set no flag
          GOTO      DBTA9999
.
DBTA9000  MOVE      ZERO,PRCNAUDD                * set yes flag
.
DBTA9999  RETURN
+
.****************************************************************************
.*                                  DOCA0000           Called by: SELA0000  *
.*                     input doctor file audit status                       *
.****************************************************************************
.
DOCA0000  MOVE      "26",CCOL
          MOVE      FIVE,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,DOCA9000                * yes answer
.
          MOVE      ONE,PRCNAUDC                 * set no flag
          GOTO      DOCA9999
.
DOCA9000  MOVE      ZERO,PRCNAUDC                * set yes flag
.
DOCA9999  RETURN
+
.****************************************************************************
.*                                  MPRA0000           Called by: SELA0000  *
.*                  input medical practice audit file status                *
.****************************************************************************
.
MPRA0000  MOVE      "26",CCOL
          MOVE      SIX,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,MPRA9000                * yes
.         
          MOVE      ONE,PRCNAUDE                 * set no flag
          GOTO      MPRA9999
.
MPRA9000  MOVE      ZERO,PRCNAUDE                * set yes flag
.
MPRA9999  RETURN
+
.****************************************************************************
.*                                  ITMA0000           Called by: SELA0000  *
.*                  input special pathology test audit status               *
.****************************************************************************
.
SPTA0000  MOVE      "26",CCOL
          MOVE      SEVEN,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,SPTA9000                * yes
.
          MOVE      ONE,PRCNAUDG                 * set no flag
          GOTO      SPTA9999
.
SPTA9000  MOVE      ZERO,PRCNAUDG                * set yes flag
.
SPTA9999  RETURN
+
.****************************************************************************
.*                                  EXCA0000           Called by: SELA0000  *
.*                  input exception charging file audit status              *
.****************************************************************************
.
EXCA0000  MOVE      "26",CCOL
          MOVE      EIGHT,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,EXCA9000                * yes
.
          MOVE      ONE,PRCNAUDH                 * set no flag
          GOTO      EXCA9999
.
EXCA9000  MOVE      ZERO,PRCNAUDH                * set yes flag
.
EXCA9999  RETURN
+
.****************************************************************************
.*                                  ITMA0000           Called by: SELA0000  *
.*                  input item file audit status                            *
.****************************************************************************
.
ITMA0000  MOVE      "26",CCOL
          MOVE      NINE,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,ITMA9000                * yes
.
          MOVE      ONE,PRCNAUDI                 * set no flag
          GOTO      ITMA9999
.
ITMA9000  MOVE      ZERO,PRCNAUDI                * set yes flag
.
ITMA9999  RETURN
+
.****************************************************************************
.*                                  PLEN0000           Called by: SELB0000  *
.*                  input paper length for letters                          *
.****************************************************************************
.
PLEN0000  KEYIN     *P40:4,*EL,*V2LON,PLENGTH:
                    *P40:4,*DV,PLENGTH
.
          COMPARE   ZERO,PLENGTH                 * length < 0 ?
          GOTO      PLEN0000 IF LESS             * yes
.
          MOVE      PLENGTH,CLETPLN
.
PLEN9999  RETURN
+         
.****************************************************************************
.*                                  LEFT0000           Called by: SELB0000  *
.*                 input left margin size for letters                       *
.****************************************************************************
.
LEFT0000  KEYIN     *P40:5,*EL,*V2LON,LMARG:
                    *P40:5,*DV,LMARG
.
          COMPARE   ZERO,LMARG                   * left margin < 0 ?
          GOTO      LEFT0000 IF LESS             * yes
.
          COMPARE   THIRTY,LMARG                 * left margin > 29 ?
          GOTO      LEFT0000 IF NOT LESS         * yes
.
          MOVE      LMARG,CLETTAB
.
LEFT9999  RETURN
+
.****************************************************************************
.*                                  LENT0000           Called by: SELB0000  *
.*                     input letter printing length                         *
.****************************************************************************
.
LENT0000  KEYIN     *P40:6,*EL,*V2LON,LETLEN:
                    *P40:6,*DV,LETLEN
.
          COMPARE   SIX,LETLEN                   * length < 6 ?
          GOTO      LENT0000 IF LESS             * yes
.
          COMPARE   CLETPLN,LETLEN               * print length < page length ?
          GOTO      LENT0000 IF NOT LESS         * no
.
          MOVE      LETLEN,CLETLEN
.
LENT9999  RETURN
+
.****************************************************************************
.*                                  TOPM0000           Called by: SELB0000  *
.*                        input top margin for letters                      *
.****************************************************************************
.
TOPM0000  KEYIN     *P40:7,*EL,*V2LON,TMARG:
                    *P40:7,*DV,TMARG
.
          COMPARE   ZERO,TMARG                   * top margin < 0 ?
          GOTO      TOPM0000 IF LESS             * yes
.
          COMPARE   CLETLEN,TMARG                * top margin < print length ?
          GOTO      TOPM0000 IF NOT LESS         * no
.
          MOVE      TMARG,CLETTOP
.
TOPM9999  RETURN
+
.****************************************************************************
.*                                  DADD0000           Called by: SELB0000  *
.*                    input date/address gap for letters                    *
.****************************************************************************
.
DADD0000  KEYIN     *P40:8,*EL,*V2LON,DAGAP:
                    *P40:8,*DV,DAGAP
.
          COMPARE   ZERO,DAGAP                   * gap < 0 ?
          GOTO      DADD0000 IF LESS             * yes
.
          COMPARE   TWENTY,DAGAP                 * gap < 20 ?
          GOTO      DADD0000 IF NOT LESS         * no
.
          MOVE      DAGAP,CLETTOA
.
DADD9999  RETURN
+
.****************************************************************************
.*                                  ASAL0000           Called by: SELB0000  *
.*                   input address/salutation gap for letters               *
.****************************************************************************
.
ASAL0000  KEYIN     *P40:9,*EL,*V2LON,ASGAP:
                    *P40:9,*DV,ASGAP
.
          COMPARE   ZERO,ASGAP                   * gap < 0 ?
          GOTO      ASAL0000 IF LESS             * yes
.
          COMPARE   TWENTY,ASGAP                 * gap < 20
          GOTO      ASAL0000 IF NOT LESS         * no
.
          MOVE      ASGAP,CLETTOS
.
ASAL9999  RETURN
+
.****************************************************************************
.*                                  SALT0000           Called by: SELB0000  *
.*                        input salutation/text gap for letters             *
.****************************************************************************
.
SALT0000  KEYIN     *P40:10,*EL,*V2LON,STGAP:
                    *P40:10,*DV,STGAP
.
          COMPARE   ZERO,STGAP                   * gap < 0 ?
          GOTO      SALT0000 IF LESS             * yes
.
          COMPARE   TWENTY,STGAP                 * gap < 20 ?
          GOTO      SALT0000 IF NOT LESS         * no
.
          MOVE      STGAP,CLETTOT
.
SALT9999  RETURN
+
.****************************************************************************
.*                                  ADDA0000           Called by: SELB0000  *
.*                         input address line 1                             *
.****************************************************************************
.
ADDA0000  KEYIN     *P40:11,*DV,UNDLN20,*DV,UNDLN5:
                    *P40:11,*V2LON,ADDR1:
                    *P40:11,*DV,ADDR1
.
          ENDSET    ADDR1
          APPEND    SP25,ADDR1
          RESET     ADDR1
.
          MOVE      ADDR1,PRCNADD1
.
ADDA9999  RETURN
+
.****************************************************************************
.*                                  ADDB0000           Called by: SELB0000  *
.*                         input address line 2                             *
.****************************************************************************
.
ADDB0000  KEYIN     *P40:12,*DV,UNDLN20,*DV,UNDLN5:
                    *P40:12,*V2LON,ADDR2:
                    *P40:12,*DV,ADDR2
.
          ENDSET    ADDR2
          APPEND    SP25,ADDR2
          RESET     ADDR2
.
          MOVE      TWO,SUBKYLIN            * 2nd address line keyin
          PACK      IBAADLN2,ADDR2,SP30,SP30
          PACK      IBAADLN3,ADDR3,SP30,SP30
          PROC      AUTOPCOD                * Auto generation of the postcode
          BRANCH    EXIT,ADDB0000,ADDB1000
.
          MOVE      IBAPCOD,PCODE
          MOVE      PCODE,PRCNPOST
          DISPLAY   *P40:14,*V2LON,PCODE;
.
ADDB1000  MOVE      ADDR2,PRCNADD2
ADDB9999  RETURN
+
.****************************************************************************
.*                                  ADDC0000           Called by: SELB0000  *
.*                         input address line 3                             *
.****************************************************************************
.
ADDC0000  KEYIN     *P40:13,*DV,UNDLN20,*DV,UNDLN5:
                    *P40:13,*V2LON,ADDR3:
                    *P40:13,*DV,ADDR3
.
          ENDSET    ADDR3
          APPEND    SP25,ADDR3
          RESET     ADDR3
.
          MOVE      THREE,SUBKYLIN          * 3rd address line keyin
          PACK      IBAADLN2,ADDR2,SP30,SP30
          PACK      IBAADLN3,ADDR3,SP30,SP30
          PROC      AUTOPCOD                * Auto generation of the postcode
          BRANCH    EXIT,ADDC0000,ADDC1000
.
          MOVE      IBAPCOD,PCODE
          MOVE      PCODE,PRCNPOST
          DISPLAY   *P40:14,*V2LON,PCODE;
.
ADDC1000  MOVE      ADDR3,PRCNADD3
ADDC9999  RETURN
+
.****************************************************************************
.*                                  POST0000           Called by: SELB0000  *
.*                       input postcode                                     *
.****************************************************************************
.
POST0000  KEYIN     *P40:14,*DV,UNDLN4:
                    *P40:14,*V2LON,*RV,PCODE:
                    *P40:14,*DV,PCODE
.
          ENDSET    PCODE
          APPEND    SP4,PCODE
          RESET     PCODE
.
          MOVE      PCODE,PRCNPOST
.
POST9999  RETURN
+
.****************************************************************************
.*                                  WCOM0000           Called by: SELB0000  *
.*                      input M.A.B. insurance company                      *
.****************************************************************************
.
WCOM0000  KEYIN     *P40:15,*EL,*DV,UNDLN6:
                    *P40:15,*V2LON,INSUR:
                    *P40:15,*DV,INSUR
.
          CALL      CHKI0000                     * see what was entered
          BRANCH    EXIT,WCOM8000:               * nothing entered
                         WCOM4000:               * ? entered
                         WCOM8000                * valid code
.
          GOTO      WCOM0000                     * invalid code
.
WCOM4000  MOVE      ZERO,HLEF
          CALL      GETSCR00
WCOM4200  CALL      PATINSDS                     * list insurance co's on file
.
WCOM4500  KEYIN     *P1:24,*EL,"Insurance Company: ",*DV,UNDLN6:
                    *P20:24,*V2LON,INSUR:
                    *P20:24,*DV,INSUR
.
          CALL      CHKI0000                     * see what was entered
          BRANCH    EXIT,WCOM7900:               * nothing entered
                         WCOM4200:               * ? entered
                         WCOM7900                * valid code
.
          GOTO      WCOM4500                     * invalid code
.
WCOM7900  CALL      PUTSCR00
          DISPLAY   *P40:15,*V2LON,INSUR
WCOM8000  MOVE      INSUR,PRCNWCOM
          BRANCH    EXIT,WCOM9999
          DISPLAY   *P49:15,INAME
.
WCOM9999  RETURN
+
.****************************************************************************
.*                                  MABI0000           Called by: SELB0000  *
.*                      input M.A.B. insurance company                      *
.****************************************************************************
.
MABI0000  KEYIN     *P40:16,*EL,*DV,UNDLN6:
                    *P40:16,*V2LON,INSUR:
                    *P40:16,*DV,INSUR
.
          CALL      CHKI0000                     * see what was entered
          BRANCH    EXIT,MABI8000:               * nothing entered
                         MABI4000:               * ? entered
                         MABI8000                * valid code
.
          GOTO      MABI0000                     * invalid code
.
MABI4000  MOVE      ZERO,HLEF
          CALL      GETSCR00
MABI4200  CALL      PATINSDS                     * list insurance co's on file
.
MABI4500  KEYIN     *P1:24,*EL,"Insurance Company: ",*DV,UNDLN6:
                    *P20:24,*V2LON,INSUR:
                    *P20:24,*DV,INSUR
.
          CALL      CHKI0000                     * see what was entered
          BRANCH    EXIT,MABI7900:               * nothing entered
                         MABI4200:               * ? entered
                         MABI7900                * valid code
.
          GOTO      MABI4500                     * invalid code
.
MABI7900  CALL      PUTSCR00
          DISPLAY   *P40:16,*V2LON,INSUR
MABI8000  MOVE      INSUR,PRCNMABI
          BRANCH    EXIT,MABI9999
          DISPLAY   *P49:16,INAME
.
MABI9999  RETURN
+
.****************************************************************************
.*                                   CHKI0000          Called by: MABI0000  *
.*                                                                VAFI0000  *
.*                                                                WCOM0000  *
.*               check what was input for insurance company                 *
.*  EXIT     0 = invalid entry                                              *
.*           1 = nothing entered                                            *
.*           2 = ? entered                                                  *
.*           3 = valid entry                                                *
.****************************************************************************
.
CHKI0000  ENDSET    INSUR
          APPEND    SP6,INSUR
          RESET     INSUR
.
          MATCH     INSUR,SP6                   * anything entered ?
          GOTO      CHKI8000 IF EQUAL           * no
.  
          MATCH     INSUR,QUEST                 * "?" entered ?
          GOTO      CHKI9000 IF EQUAL           * no
.
          MOVE      INSUR,KEY6
          CALL      RDINSR1                      * insurance co. valid ?
          COMPARE   ZERO,OVRCD
          GOTO      CHKI9500 IF EQUAL            * yes
.
          DISPLAY   *P1:24,*B,"Insurance company not on file. ";
          CALL      HITENTER
.
          MOVE      ZERO,EXIT                   * invalid code
          GOTO      CHKI9999
.
CHKI8000  MOVE      ONE,EXIT                    * exitchar input
          GOTO      CHKI9999
.
CHKI9000  MOVE      TWO,EXIT                    * ? input
          GOTO      CHKI9999
.
CHKI9500  MOVE      THREE,EXIT                  * valid code
.
CHKI9999  RETURN
+
.****************************************************************************
.*                                  VAFI0000           Called by: SELB0000  *
.*                      input V.A.F. insurance company                      *
.****************************************************************************
.
VAFI0000  KEYIN     *P40:17,*EL,*DV,UNDLN6:
                    *P40:17,*V2LON,INSUR:
                    *P40:17,*DV,INSUR
.
          CALL      CHKI0000                     * see what was entered
          BRANCH    EXIT,VAFI8000:               * nothing entered
                         VAFI4000:               * ? entered
                         VAFI8000                * valid code
.
          GOTO      VAFI0000                     * invalid code
.
VAFI4000  MOVE      ZERO,HLEF
          CALL      GETSCR00
VAFI4200  CALL      PATINSDS                    * list insurance co's on file
.
VAFI4500  KEYIN     *P1:24,*EL,"Insurance Company: ",*DV,UNDLN6:
                    *P20:24,*V2LON,INSUR:
                    *P20:24,*DV,INSUR
.
          CALL      CHKI0000                    * see what was entered
          BRANCH    EXIT,VAFI7900:              * nothing entered
                         VAFI4200:              * ? entered
                         VAFI7900               * valid code
.
          GOTO      VAFI4500                    * invalid code
.  
VAFI7900  CALL      PUTSCR00
          DISPLAY   *P40:17,*V2LON,INSUR
VAFI8000  MOVE      INSUR,PRCNVAIN
          BRANCH    EXIT,VAFI9999
          DISPLAY   *P49:17,INAME
.
VAFI9999  RETURN
+
.****************************************************************************
.*                                  DAPS0000           Called by: SELB0000  *
.*                      import doctor charges to APS                        *
.****************************************************************************
DAPS0000  MOVE      "40",CCOL
          MOVE      "18",CVERT
          CALL      KYNO0000
          MOVE      EXIT,PRCNDAPS
.
DAPS9999  RETURN
+
.****************************************************************************
.*                                  LPAY0000           Called by: SELB0000  *
.*                      input Ledger for PP Payment                         *
.****************************************************************************
LPAY0000  IF        FMSFILES=0
            DISPLAY   *P1:24,*EL,*B,"Creditor interface files (fmsamaaf & ":
                      "fmslmaaf) do not exist.  ";
            CALL      HITENTER
            GOTO      LPAY9999
          ENDIF
.
          MOVE      "40",CCOL
          MOVE      "19",CVERT
          MOVE      ZERO,CKEYTYP
          CALL      KFMLAA00
          BRANCH    EXIT,LPAY1000,LPAY1000
          MOVE      FMLALEDG,PRCNLPAY
          MOVE      FMLADESC,LEDGDESC
          GOTO      LPAY9000
.
LPAY1000  MOVE      SP2,PRCNLPAY
          MOVE      SP30,LEDGDESC
          MOVE      SP10,PRCNAPAY
          MOVE      SP30,ACCTDESC
          DISPLAY   *P40:20,*EL;
.
LPAY9000  DISPLAY   *P40:CVERT,*V2LON,PRCNLPAY,*P44:CVERT,*HOFF,LEDGDESC;
LPAY9999  RETURN
+
.****************************************************************************
.*                                  APAY0000           Called by: SELB0000  *
.*                      input Account for PP Payment                        *
.****************************************************************************
APAY0000  IF        FMSFILES=0
            DISPLAY   *P1:24,*EL,*B,"Creditor interface files (fmsamaaf & ":
                      "fmslmaaf) do not exist.  ";
            CALL      HITENTER
            GOTO      APAY9999
          ENDIF
.
          MATCH     SP2,PRCNLPAY
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,*B,"Ledger code for Payment must be entered.";
            CALL      HITENTER
            GOTO      APAY9999
          ELSE
            PACK      KEY2,PRCNLPAY
            CALL      RDFMLA1              * Read the ledger no file
            IF        OVRCD<>1
              MOVE      FMLALEDG,FMAMLEDG
            ENDIF
          ENDIF
.
          MOVE      "40",CCOL
          MOVE      "20",CVERT
          MOVE      ZERO,CKEYTYP
          CALL      KFMAMA00
          BRANCH    EXIT,APAY1000,APAY1000
          MOVE      FMAMACCT,PRCNAPAY
          MOVE      FMAMDESC,ACCTDESC
          GOTO      APAY9000
.
APAY1000  MOVE      SP20,PRCNAPAY
          MOVE      SP30,ACCTDESC
.
APAY9000  DISPLAY   *P40:CVERT,*V2LON,PRCNAPAY,*P54:CVERT,*HOFF,ACCTDESC;
APAY9999  RETURN
+
.****************************************************************************
.*                                  LCOM0000           Called by: SELB0000  *
.*                      input Ledger for Commission                         *
.****************************************************************************
LCOM0000  IF        FMSFILES=0
            DISPLAY   *P1:24,*EL,*B,"Creditor interface files (fmsamaaf & ":
                      "fmslmaaf) do not exist.  ";
            CALL      HITENTER
            GOTO      LCOM9999
          ENDIF
.
          MOVE      "40",CCOL
          MOVE      "21",CVERT
          MOVE      ZERO,CKEYTYP
          CALL      KFMLAA00
          BRANCH    EXIT,LCOM1000,LCOM1000
.
          MOVE      FMLALEDG,PRCNLCOM
          MOVE      FMLADESC,LEDGDESC
          GOTO      LCOM9000
.
LCOM1000  MOVE      SP2,PRCNLCOM
          MOVE      SP30,LEDGDESC
          MOVE      SP20,PRCNACOM
          MOVE      SP30,ACCTDESC
          DISPLAY   *P40:22,*EL;
.
LCOM9000  DISPLAY   *P40:CVERT,*V2LON,PRCNLCOM,*P44:CVERT,*HOFF,LEDGDESC;
LCOM9999  RETURN
+
.****************************************************************************
.*                                  ACOM0000           Called by: SELB0000  *
.*                      input Account for Commission                        *
.****************************************************************************
ACOM0000  IF        FMSFILES=0
            DISPLAY   *P1:24,*EL,*B,"Creditor interface files (fmsamaaf & ":
                      "fmslmaaf) do not exist.  ";
            CALL      HITENTER
            GOTO      ACOM9999
          ENDIF
.
          MATCH     SP2,PRCNLCOM
          IF        @EQUAL
           DISPLAY  *P1:24,*EL,*B,"Ledger code for Commission must be entered.";
            CALL      HITENTER
            GOTO      ACOM9999
          ELSE
            PACK      KEY2,PRCNLCOM
            CALL      RDFMLA1              * Read the ledger no file
            IF        OVRCD<>1
              MOVE      FMLALEDG,FMAMLEDG
            ENDIF
          ENDIF
.
          MOVE      "40",CCOL
          MOVE      "22",CVERT
          MOVE      ZERO,CKEYTYP
          CALL      KFMAMA00
          BRANCH    EXIT,ACOM1000,ACOM1000
          MOVE      FMAMACCT,PRCNACOM
          MOVE      FMAMDESC,ACCTDESC
          GOTO      ACOM9000
.
ACOM1000  MOVE      SP20,PRCNACOM
          MOVE      SP30,ACCTDESC
.
ACOM9000  DISPLAY   *P40:CVERT,*V2LON,PRCNACOM,*P54:CVERT,*HOFF,ACCTDESC;
ACOM9999  RETURN
+
.****************************************************************************
.*                                  CLIN0000           Called by: SELC0000  *
.*                  input clinic name for invoice                           *
.****************************************************************************
.
CLIN0000  KEYIN     *P42:4,*DV,UNDLN30:
                    *P42:4,*V2LON,CLNAME:
                    *P42:4,*DV,CLNAME
.
          ENDSET    CLNAME
          APPEND    SP30,CLNAME
          RESET     CLNAME
.
          MOVE      CLNAME,PRCNNAME
.
CLIN9999  RETURN
+
.****************************************************************************
.*                                  CTEL0000           Called by: SELC0000  *
.*                    input clinic telephone number for invoice             *
.****************************************************************************
.
CTEL0000  KEYIN     *P42:5,*DV,UNDLN12:
                    *P42:5,*V2LON,CPHONE:
                    *P42:5,*DV,CPHONE
.
          ENDSET    CPHONE
          APPEND    SP12,CPHONE
          RESET     CPHONE
.
          MOVE      CPHONE,PRCNTELE
.
CTEL9999  RETURN
+
.****************************************************************************
.*                                  JRNL0000           Called by: SELC0000  *
.*                  input if journals to appear on invoices                 *
.****************************************************************************
.
JRNL0000  MOVE      "42",CCOL
          MOVE      SIX,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,JRNL9000                * yes
.
          MOVE      ZERO,PRCNJOUR                * set no flag
          GOTO      JRNL9999
.
JRNL90000 MOVE      ONE,PRCNJOUR                 * set yes flag
.
JRNL9999  RETURN
+
.****************************************************************************
.*                                  AUTO0000           Called by: SELC0000  *
.*          input if debtor numbers to be generated automatically           *
.****************************************************************************
.
AUTO0000  MOVE      "42",CCOL
          MOVE      SEVEN,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,AUTO9000                * yes
.
          MOVE      ZERO,PRCNAUTO                * set no flag
          GOTO      AUTO9999
.
AUTO9000  MOVE      ONE,PRCNAUTO                 * set yes flag
.
AUTO9999  RETURN
+
.****************************************************************************
.*                                  NEXT0000           Called by: SELC0000  *
.*                 input next generated debtor number                       *
.****************************************************************************
.
NEXT0000  BRANCH    PRCNAUTO,NEXT1000            * autogen flag set
.
          DISPLAY   *P1:24,*B,"Debtor numbers not generated automatically. ";
          CALL      HITENTER
          GOTO      NEXT9999
.
NEXT1000  KEYIN     *P42:8,*EL,*V2LON,NEXNUM:
                    *P42:8,*DV,NEXNUM
.
          COMPARE   ONE,NEXNUM                   * new no. < 1
          GOTO      NEXT9000 IF NOT LESS         * yes
.
          BEEP
          GOTO      NEXT1000
.
NEXT9000  MOVE      NEXNUM,PRCNDETN
.
NEXT9999  RETURN
+
.****************************************************************************
.*                                  REFD0000           Called by: SELC0000  *
.*                 input if referring doctor is mandatory                   *
.****************************************************************************
.
REFD0000  MOVE      "42",CCOL
          MOVE      NINE,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,REFD9000                * yes
.
          MOVE      ZERO,PRCNDOCM                * set no flag
          GOTO      REFD9999
.
REFD9000  MOVE      ONE,PRCNDOCM                 * set yes flag
.
REFD9999  RETURN
+
.****************************************************************************
.*                                  URCH0000           Called by: SELC0000  *
.*              enter special character to signify U/R keyin                *
.****************************************************************************
URCH0000  MOVE      SP1,PRCNURCH
          DISPLAY   *P42:10,UNDLN1;
          KEYIN     *P42:10,*V2LON,PRCNURCH;
.
          TYPE      PRCNURCH                * make sure not numeric
          GOTO      URCH9999 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL,*B,"Character cannot be numeric - Hit <":
                           *V2LON,"ENTER",*HOFF,"> to continue";
          KEYIN     ANS;
          DISPLAY   *P1:24,*EL;
.
          GOTO      URCH0000
.
URCH9999  RETURN
+
.****************************************************************************
. KNXB0000 : Keyin Next Batch Number
.****************************************************************************
KNXB0000
          READ      CONTROLF,THIRTY4;*187,PRCNGENB
          BRANCH    PRCNGENB,KNXB1000        * parameter turned on
          DISPLAY   *P1:24,*EL,*B,"Option not available: IBA parameter not set":
                    ".",SP3;
          CALL      HITENTER
          GOTO      KNXB9999
.
KNXB1000  MOVE      "42",CCOL
          MOVE      "11",CVERT
          KEYIN     *PCCOL:CVERT,*EL,*V2LON,PRCNNXBA
          DISPLAY   *PCCOL:CVERT,*EL,*V2LON,PRCNNXBA
          IF        PRCNNXBA <= 0 
            DISPLAY   *P1:24,*EL,*B,"Batch Number must be greater than ZERO.  ";
            CALL      HITENTER
            GOTO      KNXB0000
          ENDIF
.
KNXB9999  RETURN
+
.****************************************************************************
.*                                  S4B30000           Called by: SELC0000  *
.*              enter S4B3 exemption item code                              *
.****************************************************************************
S4B30000  MOVE      SP9,PRCNS4B3
          KEYIN     *P42:12,*DV,UNDLN9:
                    *P42:12,*V2LON,PRCNS4B3:
                    *P42:12,*DV,PRCNS4B3
          PACK      PRCNS4B3,PRCNS4B3,SP10
.
S4B39999  RETURN
+
.****************************************************************************
.*                                  TCOD0000           Called by: SELC0000  *
.*              enter special character to signify test codes               *
.****************************************************************************
TCOD0000  MOVE      SP1,PRCNTCOD
          KEYIN     *P42:13,*DV,UNDLN1:
                    *P42:13,*V2LON,PRCNTCOD:
                    *P42:13,*DV,PRCNTCOD
          PACK      PRCNTCOD,PRCNTCOD,SP1
.
TCOD9999  RETURN
+
.****************************************************************************
.*                                  UPRA0000           Called by: SELC0000  *
.*              enter how to default PRA for U/R numbers                    *
.****************************************************************************
UPRA0000  DISPLAY   *P1:23,*EF,*V2LON,ZERO,*HOFF,"=",DUPRA0:
                    ", ",*V2LON,ONE,*HOFF,"=",DUPRA1:
                    ", ",*P1:24,*V2LON,TWO,*HOFF,"=",DUPRA2:
                    ", ",*V2LON,THREE,*HOFF,"=",DUPRA3;
.
          KEYIN     *P42:14,*DV,UNDLN1:
                    *P42:14,*V2LON,PRCNUPRA:
                    *P42:14,*DV,PRCNUPRA:
                    *P1:23,*EF;
.
          IF        PRCNUPRA >= 0 & PRCNUPRA <= 3
            MOVE      DUPRA0,DUPRA
            LOAD      DUPRA,PRCNUPRA,DUPRA1,DUPRA2,DUPRA3
            DISPLAY   *P42:14,*V2LON,PRCNUPRA,*HOFF,*P46:14,DUPRA
            GOTO      UPRA9999
          ENDIF
          BEEP
          GOTO      UPRA0000
.
UPRA9999  RETURN
+
.****************************************************************************
.*                                  PRCR0000           Called by: SELC0000  *
.*              Print invoices for current admissions                       *
.****************************************************************************
PRCR0000  MOVE      "42",CCOL
          MOVE      TEN5,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
          BRANCH    EXIT,PRCR9000                * yes
.
          MOVE      ZERO,PRCNCADM                * set no flag
          GOTO      PRCR9999
.
PRCR9000  MOVE      ONE,PRCNCADM                 * set yes flag
PRCR9999  RETURN
+
.******************************************************************************
.*                                  UDIH0000              Called by: SELC0000 *
.*                      User Defined Invoice Header Code                      *
.******************************************************************************
UDIH0000  MOVE      SP6,IBTHSCOD
          MOVE      ZERO,CKEYTYP
          MOVE      "42",CCOL
          MOVE      "16",CVERT
.
          CALL      KIBTHA00
          BRANCH    EXIT,UDIH0000,UDIH9999
.
          COMPARE   TEN1,IBTHSTFM                * correct type ?
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,*V2LON:
                      "Stationery Code is an invalid type.  ";
            CALL      HITENTER
            GOTO      UDIH0000
          ENDIF
.
          MOVE      IBTHSCOD,PRCNPRIH
UDIH9999  RETURN
+
.******************************************************************************
.*                                  UDIT0000              Called by: SELC0000 *
.*                       User Defined Invoice Tail Code                       *
.******************************************************************************
UDIT0000  MOVE      SP6,IBTHSCOD
          MOVE      ZERO,CKEYTYP
          MOVE      "42",CCOL
          MOVE      "17",CVERT
.
          CALL      KIBTHA00
          BRANCH    EXIT,UDIT0000,UDIT9999
.
          COMPARE   TEN2,IBTHSTFM                 * correct type ?
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,*V2LON:
                      "Stationery Code is an invalid type.  ";
            CALL      HITENTER
            GOTO      UDIT0000
          ENDIF
.
          MOVE      IBTHSCOD,PRCNPRIT
UDIT9999  RETURN
+
.****************************************************************************
.*                                  UDFA0000           Called by: SELD0000  *
.*                          input user defined field status                 *
.*                          billing - UDF 1                                 *
.****************************************************************************
.
UDFA0000  PACK      KEY5,CODEG1,SP3              * category set up ?
          CALL      RDCODE1
          BRANCH    OVRCD,UDFA9500               * no
.
          MOVE      "44",CCOL
          MOVE      FOUR,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,UDFA9000                * yes
.
          MOVE      ZERO,PRCNUDF1                * set no flag
          GOTO      UDFA9999
.
UDFA9000  MOVE      ONE,PRCNUDF1                 * set yes flag
          GOTO      UDFA9999
.
UDFA9500  DISPLAY   *P1:24,*B,"Category no set up. ";
          CALL      HITENTER
.
UDFA9999  RETURN
+         
.****************************************************************************
.*                                  DESA0000           Called by: SELD0000  *
.*                        input category description                        *
.*                        billing - UDF 1                                   *
.****************************************************************************
.
DESA0000  KEYIN     *P44:5,*DV,UNDLN20:
                    *P44:5,*V2LON,UDESC1:
                    *P44:5,*DV,UDESC1
.
          ENDSET    UDESC1
          APPEND    SP20,UDESC1
          RESET     UDESC1
.
DESA9999  RETURN
+
.****************************************************************************
.*                                  MANA0000           Called by: SELD0000  *
.*                         input if field is mandatory                      *
.*                         billing - UDF 1                                  *
.****************************************************************************
.
MANA0000  MOVE      "44",CCOL
          MOVE      SIX,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,MANA9000                * yes
.
          MOVE      ZERO,PRCNMAN1                * set no flag
          GOTO      MANA9999
.
MANA9000  MOVE      ONE,PRCNMAN1                 * set yes flag
.
MANA9999  RETURN
+
.****************************************************************************
.*                                  UDFB0000           Called by: SELD0000  *
.*                          input user defined field status                 *
.*                          billing - UDF 2                                 *
.****************************************************************************
.
UDFB0000  PACK      KEY5,CODEG2,SP3              * category set up ?
          CALL      RDCODE1
          BRANCH    OVRCD,UDFB9500               * no
.
          MOVE      "44",CCOL
          MOVE      SEVEN,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,UDFB9000                * yes
.
          MOVE      ZERO,PRCNUDF2                * set no flag
          GOTO      UDFB9999
.
UDFB9000  MOVE      ONE,PRCNUDF2                 * set yes flag
          GOTO      UDFB9999
.
UDFB9500  DISPLAY   *P1:24,*B,"Category no set up. ";
          CALL      HITENTER
.
UDFB9999  RETURN
+         
.****************************************************************************
.*                                  DESB0000           Called by: SELD0000  *
.*                        input category description                        *
.*                        billing - UDF 2                                   *
.****************************************************************************
.
DESB0000  KEYIN     *P44:8,*DV,UNDLN20:
                    *P44:8,*V2LON,UDESC2:
                    *P44:8,*DV,UDESC2
.
          ENDSET    UDESC2
          APPEND    SP20,UDESC2
          RESET     UDESC2
.
DESB9999  RETURN
+
.****************************************************************************
.*                                  MANB0000           Called by: SELD0000  *
.*                         input if field is mandatory                      *
.*                         billing - UDF 2                                  *
.****************************************************************************
.
MANB0000  MOVE      "44",CCOL
          MOVE      NINE,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,MANB9000                * yes
.
          MOVE      ZERO,PRCNMAN2                * set no flag
          GOTO      MANB9999
.
MANB9000  MOVE      ONE,PRCNMAN2                 * set yes flag
.
MANB9999  RETURN
+
.****************************************************************************
.*                                  UDFC0000           Called by: SELD0000  *
.*                          input user defined field status                 *
.*                          billing - UDF 3                                 *
.****************************************************************************
.
UDFC0000  PACK      KEY5,CODEG3,SP3              * category set up ?
          CALL      RDCODE1
          BRANCH    OVRCD,UDFC9500               * no
.
          MOVE      "44",CCOL
          MOVE      TEN,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,UDFC9000                * yes
.
          MOVE      ZERO,PRCNUDF3                * set no flag
          GOTO      UDFC9999
.
UDFC9000  MOVE      ONE,PRCNUDF3                 * set yes flag
          GOTO      UDFC9999
.
UDFC9500  DISPLAY   *P1:24,*B,"Category no set up. ";
          CALL      HITENTER
.
UDFC9999  RETURN
+         
.****************************************************************************
.*                                  DESC0000           Called by: SELD0000  *
.*                        input category description                        *
.*                        billing - UDF 3                                   *
.****************************************************************************
.
DESC0000  KEYIN     *P44:11,*DV,UNDLN20:
                    *P44:11,*V2LON,UDESC3:
                    *P44:11,*DV,UDESC3
.
          ENDSET    UDESC3
          APPEND    SP20,UDESC3
          RESET     UDESC3
.
DESC9999  RETURN
+
.****************************************************************************
.*                                  MANC0000           Called by: SELD0000  *
.*                         input if field is mandatory                      *
.*                         billing - UDF 3                                  *
.****************************************************************************
.
MANC0000  MOVE      "44",CCOL
          MOVE      TEN2,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,MANC9000                * yes
.
          MOVE      ZERO,PRCNMAN3                * set no flag
          GOTO      MANC9999
.
MANC9000  MOVE      ONE,PRCNMAN3                 * set yes flag
.
MANC9999  RETURN
+
.****************************************************************************
.*                                  UDFD0000           Called by: SELD0000  *
.*                          input user defined field status                 *
.*                          billing - UDF 4                                 *
.****************************************************************************
.
UDFD0000  PACK      KEY5,CODEG4,SP3              * category set up ?
          CALL      RDCODE1
          BRANCH    OVRCD,UDFD9500               * no
.
          MOVE      "44",CCOL
          MOVE      TEN3,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,UDFD9000                * yes
.
          MOVE      ZERO,PRCNUDF4                * set no flag
          GOTO      UDFD9999
.
UDFD9000  MOVE      ONE,PRCNUDF4                 * set yes flag
          GOTO      UDFD9999
.
UDFD9500  DISPLAY   *P1:24,*B,"Category no set up. ";
          CALL      HITENTER
.
UDFD9999  RETURN
+         
.****************************************************************************
.*                                  DESD0000           Called by: SELD0000  *
.*                        input category description                        *
.*                        billing - UDF 4                                   *
.****************************************************************************
.
DESD0000  KEYIN     *P44:14,*DV,UNDLN20:
                    *P44:14,*V2LON,UDESC4:
                    *P44:14,*DV,UDESC4
.
          ENDSET    UDESC4
          APPEND    SP20,UDESC4
          RESET     UDESC4
.
DESD9999  RETURN
+
.****************************************************************************
.*                                  MAND0000           Called by: SELD0000  *
.*                         input if field is mandatory                      *
.*                         billing - UDF 4                                  *
.****************************************************************************
.
MAND0000  MOVE      "44",CCOL
          MOVE      TEN5,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,MAND9000                * yes
.
          MOVE      ZERO,PRCNMAN4                * set no flag
          GOTO      MAND9999
.
MAND9000  MOVE      ONE,PRCNMAN4                 * set yes flag
.
MAND9999  RETURN
+
.****************************************************************************
.*                                  UDFE0000           Called by: SELE0000  *
.*                          input user defined field status                 *
.*                          debtor - UDF 1                                  *
.****************************************************************************
.
UDFE0000  PACK      KEY5,CODEG5,SP3              * category set up ?
          CALL      RDCODE1
          BRANCH    OVRCD,UDFE9500               * no
.
          MOVE      "44",CCOL
          MOVE      FOUR,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,UDFE9000                * yes
.
          MOVE      ZERO,PRCNUDF5                * set no flag
          GOTO      UDFE9999
.
UDFE9000  MOVE      ONE,PRCNUDF5                 * set yes flag
          GOTO      UDFE9999
.
UDFE9500  DISPLAY   *P1:24,*B,"Category no set up. ";
          CALL      HITENTER
.
UDFE9999  RETURN
+         
.****************************************************************************
.*                                  DESE0000           Called by: SELE0000  *
.*                        input category description                        *
.*                        debtor - UDF 1                                    *
.****************************************************************************
.
DESE0000  KEYIN     *P44:5,*DV,UNDLN20:
                    *P44:5,*V2LON,UDESC5:
                    *P44:5,*DV,UDESC5
.
          ENDSET    UDESC5
          APPEND    SP20,UDESC5
          RESET     UDESC5
.
DESE9999  RETURN
+
.****************************************************************************
.*                                  MANE0000           Called by: SELE0000  *
.*                         input if field is mandatory                      *
.*                         debtor - UDF  1                                  *
.****************************************************************************
.
MANE0000  MOVE      "44",CCOL
          MOVE      SIX,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,MANE9000                * yes
.
          MOVE      ZERO,PRCNMAN5                * set no flag
          GOTO      MANE9999
.
MANE9000  MOVE      ONE,PRCNMAN5                 * set yes flag
.
MANE9999  RETURN
+
.****************************************************************************
.*                                  UDFF0000           Called by: SELE0000  *
.*                          input user defined field status                 *
.*                          debtor - UDF 2                                  *
.****************************************************************************
.
UDFF0000  PACK      KEY5,CODEG6,SP3              * category set up ?
          CALL      RDCODE1
          BRANCH    OVRCD,UDFF9500               * no
.
          MOVE      "44",CCOL
          MOVE      SEVEN,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,UDFF9000                * yes
.
          MOVE      ZERO,PRCNUDF6                * set no flag
          GOTO      UDFF9999
.
UDFF9000  MOVE      ONE,PRCNUDF6                 * set yes flag
          GOTO      UDFF9999
.
UDFF9500  DISPLAY   *P1:24,*B,"Category no set up. ";
          CALL      HITENTER
.
UDFF9999  RETURN
+         
.****************************************************************************
.*                                  DESF0000           Called by: SELE0000  *
.*                        input category description                        *
.*                        debtor - UDF 2                                    *
.****************************************************************************
.
DESF0000  KEYIN     *P44:8,*DV,UNDLN20:
                    *P44:8,*V2LON,UDESC6:
                    *P44:8,*DV,UDESC6
.
          ENDSET    UDESC6
          APPEND    SP20,UDESC6
          RESET     UDESC6
.
DESF9999  RETURN
+
.****************************************************************************
.*                                  MANF0000           Called by: SELE0000  *
.*                         input if field is mandatory                      *
.*                         debtor - UDF  2                                  *
.****************************************************************************
.
MANF0000  MOVE      "44",CCOL
          MOVE      NINE,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,MANF9000                * yes
.
          MOVE      ZERO,PRCNMAN6                * set no flag
          GOTO      MANF9999
.
MANF9000  MOVE      ONE,PRCNMAN6                 * set yes flag
.
MANF9999  RETURN
+
.****************************************************************************
.*                                  UDFG0000           Called by: SELE0000  *
.*                          input user defined field status                 *
.*                          debtor - UDF 3                                  *
.****************************************************************************
.
UDFG0000  PACK      KEY5,CODEG7,SP3              * category set up ?
          CALL      RDCODE1
          BRANCH    OVRCD,UDFG9500               * no
.
          MOVE      "44",CCOL
          MOVE      TEN,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,UDFG9000                * yes
.
          MOVE      ZERO,PRCNUDF7                * set no flag
          GOTO      UDFG9999
.
UDFG9000  MOVE      ONE,PRCNUDF7                 * set yes flag
          GOTO      UDFG9999
.
UDFG9500  DISPLAY   *P1:24,*B,"Category no set up. ";
          CALL      HITENTER
.
UDFG9999  RETURN
+         
.****************************************************************************
.*                                  DESG0000           Called by: SELE0000  *
.*                        input category description                        *
.*                        debtor - UDF 3                                    *
.****************************************************************************
.
DESG0000  KEYIN     *P44:11,*DV,UNDLN20:
                    *P44:11,*V2LON,UDESC7:
                    *P44:11,*DV,UDESC7
.
          ENDSET    UDESC7
          APPEND    SP20,UDESC7
          RESET     UDESC7
.
DESG9999  RETURN
+
.****************************************************************************
.*                                  MANG0000           Called by: SELE0000  *
.*                         input if field is mandatory                      *
.*                         debtor - UDF  3                                  *
.****************************************************************************
.
MANG0000  MOVE      "44",CCOL
          MOVE      TEN2,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,MANG9000                * yes
.
          MOVE      ZERO,PRCNMAN7                * set no flag
          GOTO      MANG9999
.
MANG9000  MOVE      ONE,PRCNMAN7                 * set yes flag
.
MANG9999  RETURN
+
.****************************************************************************
.*                                  UDFH0000           Called by: SELE0000  *
.*                          input user defined field status                 *
.*                          debtor - UDF 4                                  *
.****************************************************************************
.
UDFH0000  PACK      KEY5,CODEG8,SP3              * category set up ?
          CALL      RDCODE1
          BRANCH    OVRCD,UDFH9500               * no
.
          MOVE      "44",CCOL
          MOVE      TEN3,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,UDFH9000                * yes
.
          MOVE      ZERO,PRCNUDF8                * set no flag
          GOTO      UDFH9999
.
UDFH9000  MOVE      ONE,PRCNUDF8                 * set yes flag
          GOTO      UDFH9999
.
UDFH9500  DISPLAY   *P1:24,*B,"Category no set up. ";
          CALL      HITENTER
.
UDFH9999  RETURN
+         
.****************************************************************************
.*                                  DESH0000           Called by: SELE0000  *
.*                        input category description                        *
.*                        debtor - UDF 4                                    *
.****************************************************************************
.
DESH0000  KEYIN     *P44:14,*DV,UNDLN20:
                    *P44:14,*V2LON,UDESC8:
                    *P44:14,*DV,UDESC8
.
          ENDSET    UDESC8
          APPEND    SP20,UDESC8
          RESET     UDESC8
.
DESH9999  RETURN
+
.****************************************************************************
.*                                  MANH0000           Called by: SELE0000  *
.*                         input if field is mandatory                      *
.*                         debtor - UDF  4                                  *
.****************************************************************************
.
MANH0000  MOVE      "44",CCOL
          MOVE      TEN5,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,MANH9000                * yes
.
          MOVE      ZERO,PRCNMAN8                * set no flag
          GOTO      MANH9999
.
MANH9000  MOVE      ONE,PRCNMAN8                 * set yes flag
.
MANH9999  RETURN
+
.****************************************************************************
.*                                  UDFI0000           Called by: SELF0000  *
.*                          input user defined field status                 *
.*                          M.A.B. - UDF 1                                  *
.****************************************************************************
.
UDFI0000  PACK      KEY5,CODEMO,SP3              * category set up ?
          CALL      RDCODE1
          BRANCH    OVRCD,UDFI9500               * no
.
          MOVE      SP1,ANS
.
          KEYIN     *P44:4,*EL,*DV,UNDLN1:
                    *P44:4,*V2LON,ANS
.
.******   Flag is currently always set to `Yes'
.
          MOVE      ONE,PRCNUDFA                 * set yes flag
          DISPLAY   *P44:4,*V2LON,YES
          GOTO      UDFI9999
.
UDFI9500  DISPLAY   *P1:24,*B,"Category not set up. ";
          CALL      HITENTER
.
UDFI9999  RETURN
+         
.****************************************************************************
.*                                  DESI0000           Called by: SELF0000  *
.*                        input category description                        *
.*                        M.A.B. - UDF 1                                    *
.****************************************************************************
.
DESI0000  KEYIN     *P44:5,*DV,UNDLN20:
                    *P44:5,*V2LON,UDESCA:
                    *P44:5,*DV,UDESCA
.
          ENDSET    UDESCA
          APPEND    SP20,UDESCA
          RESET     UDESCA
.
DESI9999  RETURN
+
.****************************************************************************
.*                                  MANI0000           Called by: SELF0000  *
.*                         input if field is mandatory                      *
.*                         M.A.B. - UDF  1                                  *
.****************************************************************************
.
MANI0000  KEYIN     *P44:6,*EL,*DV,UNDLN1:
                    *P44:6,*V2LON,ANS
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
          REP       UPPLOW,ANS
.
          MATCH     SP1,ANS                      * anything entered ?
          GOTO      MANI5000 IF EQUAL            * no
.
          MATCH     ANSN,ANS                     * N entered ?
          GOTO      MANI5000 IF EQUAL            * yes
.
          MATCH     ANSY,ANS                     * Y entered ?
          GOTO      MANI6000 IF EQUAL            * yes
.
          BEEP
          GOTO      MANI0000                     * invalid entry
.
MANI5000  MOVE      ZERO,PRCNMANA                * set no flag
          DISPLAY   *P44:6,*V2LON,NO
          GOTO      MANI9999
.
MANI6000  MOVE      ONE,PRCNMANA                 * set yes flag
          DISPLAY   *P44:6,*V2LON,YES
.
MANI9999  RETURN
+
.****************************************************************************
.*                                  UDFJ0000           Called by: SELF0000  *
.*                          input user defined field status                 *
.*                          M.A.B. - UDF 2                                  *
.****************************************************************************
.
UDFJ0000  PACK      KEY5,CODEMP,SP3              * category set up ?
          CALL      RDCODE1
          BRANCH    OVRCD,UDFJ9500               * no
.
          KEYIN     *P44:7,*EL,*DV,UNDLN1:
                    *P44:7,*V2LON,ANS
.
. ******* Flag currently always set to yes******
.
          MOVE      ONE,PRCNUDFB                 * set yes flag
          DISPLAY   *P44:7,*V2LON,YES
          GOTO      UDFJ9999
.
UDFJ9500  DISPLAY   *P1:24,*B,"Category not set up. ";
          CALL      HITENTER
.
UDFJ9999  RETURN
+         
.****************************************************************************
.*                                  DESJ0000           Called by: SELF0000  *
.*                        input category description                        *
.*                        M.A.B. - UDF 2                                    *
.****************************************************************************
.
DESJ0000  KEYIN     *P44:8,*DV,UNDLN20:
                    *P44:8,*V2LON,UDESCB:
                    *P44:8,*DV,UDESCB
.
          ENDSET    UDESCB
          APPEND    SP20,UDESCB
          RESET     UDESCB
.
DESJ9999  RETURN
+
.****************************************************************************
.*                                  MANJ0000           Called by: SELF0000  *
.*                         input if field is mandatory                      *
.*                         M.A.B. - UDF  2                                  *
.****************************************************************************
.
MANJ0000  KEYIN     *P44:9,*EL,*DV,UNDLN1:
                    *P44:9,*V2LON,ANS
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
          REP       UPPLOW,ANS
.
          MATCH     SP1,ANS                      * anything entered ?
          GOTO      MANJ5000 IF EQUAL            * no
.
          MATCH     ANSN,ANS                     * N entered ?
          GOTO      MANJ5000 IF EQUAL            * yes
.
          MATCH     ANSY,ANS                     * Y entered ?
          GOTO      MANJ6000 IF EQUAL            * yes 
.
          BEEP
          GOTO      MANJ0000                     * invalid entry
.
MANJ5000  MOVE      ZERO,PRCNMANB                * set no flag
          DISPLAY   *P44:9,*V2LON,NO
          GOTO      MANJ9999
.
MANJ6000  MOVE      ONE,PRCNMANB                 * set yes flag
          DISPLAY   *P44:9,*V2LON,YES
.
MANJ9999  RETURN
+
.****************************************************************************
.*                                  MENU0000           Called by: SELG0000  *
.*                             input menu name                              *
.****************************************************************************
.
MENU0000  
MENU9999  RETURN
+
.****************************************************************************
.*                                  SKEY0000           Called by: SELG000   *
.*                      input security code                                 *
.****************************************************************************
.
SKEY0000  
SKEY9999  RETURN
+
.****************************************************************************
.*                                  PASS0000           Called by: SELG0000  *
.*                      input password                                      *
.****************************************************************************
.
PASS0000  
PASS9999  RETURN
+
.****************************************************************************
.*                                  DDIR0000           Called by: SELG0000  *
.*                         input data directory                             *
.****************************************************************************
.
DDIR0000  
DDIR9999  RETURN
+
.****************************************************************************
.*                                  NINV0000           Called by: SELG0000  *
.*                        input next invoice number                         *
.****************************************************************************
.
NINV0000  KEYIN     *P51:8,*EL,*V2LON,NEXTINV:
                    *P51:8,*DV,NEXTINV
.
          COMPARE   ONE,NEXTINV
          GOTO      NINV1000 IF NOT LESS
.
          DISPLAY   *P1:24,*B,"Invoice number must be greater than zero. ";
          CALL      HITENTER
          GOTO      NINV0000
.
NINV1000  MOVE      NEXTINV,PRCNINVN
.
NINV9999  RETURN
+
.****************************************************************************
.*                                  DATE0000           Called by: SELG0000  *
.*                  input fees invoiced report date                         *
.****************************************************************************
.
DATE0000  MOVE      FIFTY1,CCOL
          MOVE      NINE,CVERT
          UNPACK    SP6,CDAY,CMON,CYEAR
          MOVE      CCC,CCENT
          CALL      KEYDATE
          BRANCH    OVRCD,DATE9000
.
          PACK      PRCNDATE,CCENT,CYEAR,CMON,CDAY
          GOTO      DATE9999
.
DATE9000  UNPACK    PRCNDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P51:9,*V2LON,CPCDATE
.
DATE9999  RETURN
+
.****************************************************************************
.*                                  HTYP0000           Called by: SELG0000  *
.*                       input hospital type                                *
.****************************************************************************
.
HTYP0000  DISPLAY  *P1:24,"Selections: 0 = ",HOSDESC1,",  1 = ",HOSDESC2
.
          KEYIN    *P51:10,*EL,*V2LON,HOSTYPE
.
          BRANCH   HOSTYPE,HTYP9000              * Public
.
          COMPARE  ZERO,HOSTYPE                  * Private
          GOTO     HTYP8000 IF EQUAL
.
          DISPLAY  *P1:24,*EL,*B,"Selection not valid. ";
          CALL     HITENTER
          GOTO     HTYP0000
.
HTYP8000  MOVE     ZERO,PRCNHTYP                 * Private
          DISPLAY  *P51:10,*V2LON,HOSDESC1
          GOTO     HTYP9999
.
HTYP9000  MOVE     ONE,PRCNHTYP                  * Public
          DISPLAY  *P51:10,*V2LON,HOSDESC2
.
HTYP9999  RETURN
+
.****************************************************************************
.*                                  PORT0000           Called by: SELG0000  *
.*                      input largest port number                           *
.****************************************************************************
.
PORT0000  KEYIN     *P51:11,*EL,*V2LON,LPORT:
                    *P51:11,*DV,LPORT
.
          MOVE      LPORT,CNOPORT
.
PORT9999  RETURN
+
.****************************************************************************
.*                                  HUDF0000           Called by: SELG0000  *
.*              input if health fund and UDF's are to be used               *
.****************************************************************************
.
HUDF0000  MOVE      "51",CCOL
          MOVE      TEN2,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,HUDF9000                * yes
.
          MOVE      ZERO,PRCNHFUN                * set no flag
          GOTO      HUDF9999
.
HUDF9000  MOVE      ONE,PRCNHFUN                 * set yes flag
.
HUDF9999  RETURN
+
.****************************************************************************
.*                                  IADD0000           Called by: SELG0000  *
.*                 input if hospital details to appear on invoices          *
.****************************************************************************
.
IADD0000  MOVE      "51",CCOL
          MOVE      TEN3,CVERT
.
          CALL      CHKA0000                     * get yes/no answer
.
          BRANCH    EXIT,IADD9000                * yes
.
          MOVE      ZERO,PRCNADDR                * set no flag
          GOTO      IADD9999
.
IADD9000  MOVE      ONE,PRCNADDR                 * set yes flag
.
IADD9999  RETURN
+
.****************************************************************************
.*                                  ILAY0000           Called by: SELG0000  *
.*                        input layout for invoices                         *
.****************************************************************************
.
ILAY0000  DISPLAY   *P1:23,*EF,"Selections: 0 = Standard,",*P26:23:
                    "1 = Warburton,",*P40:23,"2 = HRH,",*P48:23:
                    "3 = Melbourne Clinic,",*P69:23,"4 = RCH,":
                    *P13:24,"5 = Lingard,",*P25:24,"6 = Modbury,":
                    *P37:24,"7 = Alpha,",*P47:24,"8 = West Wimmera,":
                    *P64:24,"9 = SVHM"
.
          KEYIN     *P51:14,*EL,*V2LON,INVLAY
.
          BRANCH    INVLAY,ILAY1000:
                           ILAY1000:
                           ILAY1000:
                           ILAY1000:
                           ILAY1000:
                           ILAY1000:
                           ILAY1000:
                           ILAY1000:
                           ILAY1000
.
          COMPARE   ZERO,INVLAY                  * 0 input ?
          GOTO      ILAY1000 IF EQUAL            * yes
.
          DISPLAY   *P1:23,*EF,*P1:24,*B,"Selection not valid. ";
          CALL      HITENTER
          GOTO      ILAY0000
.
ILAY1000  MOVE      INV0,INVDESC                 * load standard description
.
.         load appropriate description
.
          LOAD      INVDESC,INVLAY,INV1,INV2,INV3,INV4,INV5,INV6,INV7,INV8,INV9
          DISPLAY   *P51:14,*V2LON,INVDESC,*P1:23,*EF
.
          MOVE      INVLAY,PRCNLAYT
.
ILAY9999  RETURN
+
.****************************************************************************
.*                                  ALAY0000           Called by: SELG0000  *
.*                      input aged trial balance layout                     *
.****************************************************************************
.
ALAY0000  DISPLAY   *P1:24,"Selections: 0 = Normal ,  1 = W.C.H. ,  2 = Mercy"
.
          KEYIN     *P51:15,*EL,*V2LON,ATBLAY
.
          BRANCH    ATBLAY,ALAY1000:
                           ALAY1000 
.
          COMPARE   ZERO,ATBLAY                  * 0 input ?
          GOTO      ALAY1000 IF EQUAL            * yes
.
          DISPLAY   *P1:24,*EL,*B,"Selection not valid. ";
          CALL      HITENTER
          GOTO      ALAY0000
.
ALAY1000  MOVE      ATB0,ATBDESC                 * load standard description
.
.         Load appropriate description
.
          LOAD      ATBDESC,ATBLAY,ATB1,ATB2
          DISPLAY   *P51:15,*V2LON,ATBDESC
.
          MOVE      ATBLAY,PRCNATBL
.
ALAY9999  RETURN
+
.****************************************************************************
.*                                  FINY0000           Called by: SELG0000  *
.*                       input start date for financial year                *
.****************************************************************************
.
FINY0000  MOVE      FIFTY1,CCOL
          MOVE      TEN6,CVERT
          MOVE      CCC,CCENT
          UNPACK    SP6,CDAY,CMON,CYEAR
          CALL      KEYDATE
          BRANCH    OVRCD,FINY9000
.
          PACK      PRCNSDAT,CCENT,CYEAR,CMON,CDAY
          GOTO      FINY9999
.
FINY9000  UNPACK    PRCNSDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P51:16,*V2LON,CPCDATE
.
.
FINY9999  RETURN
+
.****************************************************************************
.*                                  UNIQ0000           Called by: SELG0000  *
.*                        input next unique identifier                      *
.****************************************************************************
.
UNIQ0000  KEYIN     *P51:17,*EL,*V2LON,NEXTUNQ:
                    *P51:17,*DV,NEXTUNQ
.
          COMPARE   ONE,NEXTUNQ
          GOTO      UNIQ1000 IF NOT LESS
.
          DISPLAY   *P1:24,*B,"Number must be greater than zero. ";
          CALL      HITENTER
          GOTO      UNIQ0000
.
UNIQ1000  MOVE      NEXTUNQ,PRCNUNIQ
.
UNIQ9999  RETURN
+
.****************************************************************************
.*                                  PSYS0000           Called by: SELG0000  *
.*                   see if patient system is in use                        *
.****************************************************************************
.
PSYS0000  KEYIN     *P51:18,*EL,*V2LON,ANS:
                    *P51:18,*DV,ANS
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
          REP       UPPLOW,ANS
.
          MATCH     SP1,ANS                      * anything entered ?
          GOTO      PSYS2000 IF EQUAL            * no
.
          MATCH     ANSN,ANS                     * N entered ?
          GOTO      PSYS2000 IF EQUAL            * yes
.
          MATCH     ANSY,ANS                     * Y entered ?
          GOTO      PSYS4000 IF EQUAL            * yes
.
          BEEP
          GOTO      PSYS0000
.
PSYS2000  MOVE      ZERO,PRCNPSYS
          DISPLAY   *P51:18,*V2LON,NO
          GOTO      PSYS9999
.
PSYS4000  MOVE      ONE,PRCNPSYS
          DISPLAY   *P51:18,*V2LON,YES
.
PSYS9999  RETURN
+
.****************************************************************************
.*                                  UNCL0000           Called by: SELG0000  *
.*                        input next unique claims number                   *
.****************************************************************************
.
UNCL0000  KEYIN     *P51:19,*EL,*V2LON,CLAIM:
                    *P51:19,*DV,CLAIM
.
          COMPARE   ONE,CLAIM
          GOTO      UNCL1000 IF NOT LESS
.
          DISPLAY   *P1:24,*B,"Number must be greater than zero. ";
          CALL      HITENTER
          GOTO      UNCL0000
.
UNCL1000  MOVE      CLAIM,PRCNUNCL
.
UNCL9999  RETURN
+
.****************************************************************************
.*                                  BBCL0000           Called by: SELG0000  *
.*              input next unique bulk bill claims number                   *
.****************************************************************************
.
BBCL0000  KEYIN     *P51:20,*EL,*V2LON,BBCLAIM:
                    *P51:20,*DV,BBCLAIM
.
          COMPARE   ONE,BBCLAIM
          GOTO      BBCL1000 IF NOT LESS
.
          DISPLAY   *P1:24,*B,"Number must be greater than zero. ";
          CALL      HITENTER
          GOTO      BBCL0000
.
BBCL1000  MOVE      BBCLAIM,PRCNBBCL
.
BBCL9999  RETURN
+
.****************************************************************************
.*                                  JDAT0000           Called by: SELG0000  *
.*                   see if patient system is in use                        *
.****************************************************************************
.
JDAT0000  KEYIN     *P51:21,*EL,*V2LON,ANS:
                    *P51:21,*DV,ANS
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
          REP       UPPLOW,ANS
.
          MATCH     SP1,ANS                      * anything entered ?
          GOTO      JDAT2000 IF EQUAL            * no
.
          MATCH     ANSN,ANS                     * N entered ?
          GOTO      JDAT2000 IF EQUAL            * yes
.
          MATCH     ANSY,ANS                     * Y entered ?
          GOTO      JDAT4000 IF EQUAL            * yes
.
          BEEP
          GOTO      JDAT0000
.
JDAT2000  MOVE      ZERO,PRCNJDAT
          DISPLAY   *P51:21,*V2LON,NO
          GOTO      JDAT9999
.
JDAT4000  MOVE      ONE,PRCNJDAT
          DISPLAY   *P51:21,*V2LON,YES
.
JDAT9999  RETURN
+
.****************************************************************************
.*                                  OSYS0000           Called by: SELG0000  *
.*                   see if outpatient system is in use                     *
.****************************************************************************
.
OSYS0000  KEYIN     *P51:22,*EL,*V2LON,ANS:
                    *P51:22,*DV,ANS
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
          REP       UPPLOW,ANS
.
          MATCH     SP1,ANS                      * anything entered ?
          GOTO      OSYS2000 IF EQUAL            * no
.
          MATCH     ANSN,ANS                     * N entered ?
          GOTO      OSYS2000 IF EQUAL            * yes
.
          MATCH     ANSY,ANS                     * Y entered ?
          GOTO      OSYS4000 IF EQUAL            * yes
.
          BEEP
          GOTO      OSYS0000
.
OSYS2000  MOVE      ZERO,PRCNOSYS
          DISPLAY   *P51:22,*V2LON,NO
          GOTO      OSYS9999
.
OSYS4000  MOVE      ONE,PRCNOSYS
          DISPLAY   *P51:22,*V2LON,YES
.
OSYS9999  RETURN
.****************************************************************************
.*                                  PAID0000           Called by: SELH0000  *
.*                   see if including "paid" column in printout             *
.****************************************************************************
.
PAID0000  KEYIN     *P42:4,*EL,*DV,ANSN:
                    *P42:4,*V2LON,ANS:
                    *P42:4,*DV,ANS
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
          REP       UPPLOW,ANS
.
          MATCH     SP1,ANS                      * anything entered ?
          GOTO      PAID2000 IF EQUAL            * no
.
          MATCH     ANSN,ANS                     * N entered ?
          GOTO      PAID2000 IF EQUAL            * yes
.
          MATCH     ANSY,ANS                     * Y entered ?
          GOTO      PAID4000 IF EQUAL            * yes
.
          BEEP
          GOTO      PAID0000
.
PAID2000  MOVE      ZERO,PRCNPAID
          DISPLAY   *P42:4,*V2LON,NO
          GOTO      PAID9999
.
PAID4000  MOVE      ONE,PRCNPAID
          DISPLAY   *P42:4,*V2LON,YES
.
.         If printing "paid" column, only 5 periods allowed
.
          MOVE      ZERO,PRCNPER6
          MOVE      SP20,PRCNNAM6
          DISPLAY   *P42:15,*V2LON,PRCNPER6,*P42:16,PRCNNAM6
.
PAID9999  RETURN
+
.****************************************************************************
.*                                PERA0000             Called by: SELH0000  *
.*               get no. of days for first ATB period                       *
.****************************************************************************
.
PERA0000  KEYIN     *P42:5,*EL,*V2LON,*JR,PRCNPER1:
                    *P42:5,*DV,PRCNPER1
.
          COMPARE   ZERO,PRCNPER1
          IF        @LESS
             DISPLAY   *P1:24,*EL,*B,"Number of days not valid.  ";
             CALL      HITENTER
             GOTO      PERA0000
          ENDIF
.
PERA9999  RETURN
+
.****************************************************************************
.*                                NAMA0000             Called by: SELH0000  *
.*                get the column heading for first period                   *
.****************************************************************************
.
NAMA0000  KEYIN     *P42:6,*EL,*DV,UNDLN11:
                    *P42:6,*V2LON,PRCNNAM1
.
          ENDSET    PRCNNAM1
          APPEND    SP20,PRCNNAM1
          RESET     PRCNNAM1
          DISPLAY   *P42:6,*V2LON,PRCNNAM1
.
NAMA9999  RETURN
+
.****************************************************************************
.*                                PERB0000             Called by: SELH0000  *
.*               get no. of days for second ATB period                      *
.****************************************************************************
.
PERB0000  KEYIN     *P42:7,*EL,*V2LON,*JR,PRCNPER2:
                    *P42:7,*DV,PRCNPER2
.
          COMPARE   ZERO,PRCNPER2
          IF        @LESS
             DISPLAY   *P1:24,*EL,*B,"Number of days not valid.  ";
             CALL      HITENTER
             GOTO      PERB0000
          ENDIF
.
PERB9999  RETURN
+
.****************************************************************************
.*                                NAMB0000             Called by: SELH0000  *
.*                get the column heading for second period                  *
.****************************************************************************
.
NAMB0000  KEYIN     *P42:8,*EL,*DV,UNDLN11:
                    *P42:8,*V2LON,PRCNNAM2
.
          ENDSET    PRCNNAM2
          APPEND    SP20,PRCNNAM2
          RESET     PRCNNAM2
          DISPLAY   *P42:8,*V2LON,PRCNNAM2
.
NAMB9999  RETURN
+
.****************************************************************************
.*                                PERC0000             Called by: SELH0000  *
.*               get no. of days for third ATB period                       *
.****************************************************************************
.
PERC0000  KEYIN     *P42:9,*EL,*V2LON,*JR,PRCNPER3:
                    *P42:9,*DV,PRCNPER3
.
          COMPARE   ZERO,PRCNPER3
          IF        @LESS
             DISPLAY   *P1:24,*EL,*B,"Number of days not valid.  ";
             CALL      HITENTER
             GOTO      PERC0000
          ENDIF
.
PERC9999  RETURN
+
.****************************************************************************
.*                                NAMC0000             Called by: SELH0000  *
.*                get the column heading for third period                   *
.****************************************************************************
.
NAMC0000  KEYIN     *P42:10,*EL,*DV,UNDLN11:
                    *P42:10,*V2LON,PRCNNAM3
.
          ENDSET    PRCNNAM3
          APPEND    SP20,PRCNNAM3
          RESET     PRCNNAM3
          DISPLAY   *P42:10,*V2LON,PRCNNAM3
.
NAMC9999  RETURN
+
.****************************************************************************
.*                                PERD0000             Called by: SELH0000  *
.*               get no. of days for fourth ATB period                      *
.****************************************************************************
.
PERD0000  KEYIN     *P42:11,*EL,*V2LON,*JR,PRCNPER4:
                    *P42:11,*DV,PRCNPER4
.
          COMPARE   ZERO,PRCNPER4
          IF        @LESS
             DISPLAY   *P1:24,*EL,*B,"Number of days not valid.  ";
             CALL      HITENTER
             GOTO      PERD0000
          ENDIF
.
PERD9999  RETURN
+
.****************************************************************************
.*                                NAMD0000             Called by: SELH0000  *
.*                get the column heading for fourth period                  *
.****************************************************************************
.
NAMD0000  KEYIN     *P42:12,*EL,*DV,UNDLN11:
                    *P42:12,*V2LON,PRCNNAM4
.
          ENDSET    PRCNNAM4
          APPEND    SP20,PRCNNAM4
          RESET     PRCNNAM4
          DISPLAY   *P42:12,*V2LON,PRCNNAM4
.
NAMD9999  RETURN
+
.****************************************************************************
.*                                PERE0000             Called by: SELH0000  *
.*               get no. of days for fifth ATB period                       *
.****************************************************************************
.
PERE0000  KEYIN     *P42:13,*EL,*V2LON,*JR,PRCNPER5:
                    *P42:13,*DV,PRCNPER5
.
          COMPARE   ZERO,PRCNPER5
          IF        @LESS
             DISPLAY   *P1:24,*EL,*B,"Number of days not valid.  ";
             CALL      HITENTER
             GOTO      PERE0000
          ENDIF
.
PERE9999  RETURN
+
.****************************************************************************
.*                                NAME0000             Called by: SELH0000  *
.*                get the column heading for fifth period                   *
.****************************************************************************
.
NAME0000  KEYIN     *P42:14,*EL,*DV,UNDLN11:
                    *P42:14,*V2LON,PRCNNAM5
.
          ENDSET    PRCNNAM5
          APPEND    SP20,PRCNNAM5
          RESET     PRCNNAM5
          DISPLAY   *P42:14,*V2LON,PRCNNAM5
.
NAME9999  RETURN
+
.****************************************************************************
.*                                PERF0000             Called by: SELH0000  *
.*               get no. of days for sixth ATB period                       *
.****************************************************************************
.
PERF0000  COMPARE   ONE,PRCNPAID
          IF        @EQUAL
             DISPLAY   *P1:24,*EL,*B,"Using 'paid' column, so only 5 ":
                       "periods available.  ";
             CALL      HITENTER
             GOTO      PERF9999
          ENDIF
.
          KEYIN     *P42:15,*EL,*V2LON,*JR,PRCNPER6:
                    *P42:15,*DV,PRCNPER6
.
          COMPARE   ZERO,PRCNPER6
          IF        @LESS
             DISPLAY   *P1:24,*EL,*B,"Number of days not valid.  ";
             CALL      HITENTER
             GOTO      PERF0000
          ENDIF
.
PERF9999  RETURN
+
.****************************************************************************
.*                                NAMF0000             Called by: SELH0000  *
.*                get the column heading for sixth period                   *
.****************************************************************************
.
NAMF0000  COMPARE   ONE,PRCNPAID
          IF        @EQUAL
             DISPLAY   *P1:24,*EL,*B,"Using 'paid' column, so only 5 ":
                       "periods available.  ";
             CALL      HITENTER
             GOTO      NAMF9999
          ENDIF
.
          KEYIN     *P42:16,*DV,UNDLN11:
                    *P42:16,*V2LON,PRCNNAM6
.
          ENDSET    PRCNNAM6
          APPEND    SP20,PRCNNAM6
          RESET     PRCNNAM6
          DISPLAY   *P42:16,*V2LON,PRCNNAM6
.
NAMF9999  RETURN
+
.****************************************************************************
.*                                  SELA0000           Called by: ML0000    *
.*              select field to modify or post - Audit screen               *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Post was selected.                     *
.*                        TRUE  (1)  Cancel was selected.                   *
.****************************************************************************
.
SELA0000  CALL      MAINQST                  * Ask for an item, post or cancel
.
          COMPARE   ZERO,CCITEM              * What was entered ?
          GOTO      SELA8000 IF EQUAL        * Post was selected
          GOTO      SELA9000 IF LESS         * Cancel was selected
.
          BRANCH    CCITEM,SELA1000:         * debtor audit
                           SELA2000:         * doctor audit
                           SELA3000:         * medical practice audit
                           SELA4000:         * special pathology test audit
                           SELA5000:         * exception charging audit
                           SELA6000          * item audit
.
          BEEP                               * invalid input
          GOTO      SELA0000
.
SELA1000  CALL      DBTA0000
          GOTO      SELA0000
.
SELA2000  CALL      DOCA0000
          GOTO      SELA0000
.
SELA3000  CALL      MPRA0000
          GOTO      SELA0000
.
SELA4000  CALL      SPTA0000
          GOTO      SELA0000
.
SELA5000  CALL      EXCA0000
          GOTO      SELA0000
.
SELA6000  CALL      ITMA0000
          GOTO      SELA0000
.
.         Post was selected. Set the exit flag to tell the calling routine.
.
SELA8000  MOVE      FALSE,EXIT               * Post was selected
          GOTO      SELA9999
.
.         Cancel was selected. Set the exit flag to tell the calling routine.
.
SELA9000  MOVE      TRUE,EXIT                * Cancel was selected
.
SELA9999  RETURN
+
.****************************************************************************
.*                                  SELB0000           Called by: ML0000    *
.*              select field to modify or post - User screen 1              *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Post was selected.                     *
.*                        TRUE  (1)  Cancel was selected.                   *
.****************************************************************************
.
SELB0000  CALL      MAINQST                  * Ask for an item, post or cancel
.
          COMPARE   ZERO,CCITEM              * What was entered ?
          GOTO      SELB8900 IF EQUAL        * Post was selected
          GOTO      SELB9000 IF LESS         * Cancel was selected
.
          BRANCH    CCITEM,SELB1000:         * paper length
                           SELB1500:         * left margin
                           SELB2000:         * printing length
                           SELB2500:         * top margin
                           SELB3000:         * date/address gap
                           SELB3500:         * address/salutation gap
                           SELB4000:         * salutation/text gap
                           SELB4500:         * address line 1
                           SELB5000:         * address line 2
                           SELB5500:         * address line 3
                           SELB6000:         * postcode
                           SELB6500:         * W/C insurance co.
                           SELB7000:         * MAB insurance co.
                           SELB7500          * VAF insurance co.
.
          COMPARE   ONE,PRCNGLIN
          GOTO      SELB0200 IF NOT EQUAL
.
          MOVE      CCITEM,FORM3
          SUB       TEN4,FORM3
.
          BRANCH    FORM3,SELB7600:         * Import Doctor Charges to APS
                          SELB7700:         * Ledger for PP payment
                          SELB7800:         * Account for PP payment
                          SELB7900:         * Ledger for Commission
                          SELB8000          * Account for Commission
.
SELB0200  BEEP                               invalid input
          GOTO      SELB0000
.
SELB1000  CALL      PLEN0000
          GOTO      SELB0000
.
SELB1500  CALL      LEFT0000
          GOTO      SELB0000
.
SELB2000  CALL      LENT0000
          GOTO      SELB0000
.
SELB2500  CALL      TOPM0000
          GOTO      SELB0000
.
SELB3000  CALL      DADD0000
          GOTO      SELB0000
.
SELB3500  CALL      ASAL0000
          GOTO      SELB0000
.
SELB4000  CALL      SALT0000
          GOTO      SELB0000
.
SELB4500  CALL      ADDA0000
          GOTO      SELB0000
.
SELB5000  CALL      ADDB0000
          GOTO      SELB0000
.
SELB5500  CALL      ADDC0000
          GOTO      SELB0000
.
SELB6000  CALL      POST0000
          GOTO      SELB0000
.
SELB6500  CALL      WCOM0000
          GOTO      SELB0000
.
SELB7000  CALL      MABI0000
          GOTO      SELB0000
.
SELB7500  CALL      VAFI0000
          GOTO      SELB0000
.
SELB7600  CALL      DAPS0000
          GOTO      SELB0000
.
SELB7700  CALL      LPAY0000
          GOTO      SELB0000
.
SELB7800  CALL      APAY0000
          GOTO      SELB0000
.
SELB7900  CALL      LCOM0000
          GOTO      SELB0000
.
SELB8000  CALL      ACOM0000
          GOTO      SELB0000
.
.         Post was selected. Set the exit flag to tell the calling routine.
.
SELB8900  MOVE      FALSE,EXIT               * Post was selected
          GOTO      SELB9999
.
.         Cancel was selected. Set the exit flag to tell the calling routine.
.
SELB9000  MOVE      TRUE,EXIT                * Cancel was selected
.
SELB9999  RETURN
+
.****************************************************************************
.*                                  SELC0000           Called by: ML0000    *
.*              select field to modify or post - User screen 2              *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Post was selected.                     *
.*                        TRUE  (1)  Cancel was selected.                   *
.****************************************************************************
.
SELC0000  CALL      MAINQST                  * Ask for an item, post or cancel
.
          COMPARE   ZERO,CCITEM              * What was entered ?
          GOTO      SELC9000 IF EQUAL        * Post was selected
          GOTO      SELC9900 IF LESS         * Cancel was selected
.
          BRANCH    CCITEM,SELC0010:         * name on invoice
                           SELC0020:         * phone no. on invoice
                           SELC0030:         * journals on invoice
                           SELC0040:         * auto debtor no's
                           SELC0050:         * next debtor no.
                           SELC0060:         * referring doctor mandatory
                           SELC0070:         * special character for U/R keyin
                           SELC0080:         * next generated batch no.
                           SELC0090:         * S4B3 exemption item
                           SELC0100:         * special character for test codes
                           SELC0110:         * how to default PRA for U/R's
                           SELC0120:         * Print batch invoices for current
                           SELC0130:         * User Defined Invoice Header Code
                           SELC0140          * User Defined Invoice Tail Code
.
          BEEP                               * invalid input
          GOTO      SELC0000
.
SELC0010  CALL      CLIN0000
          GOTO      SELC0000
.
SELC0020  CALL      CTEL0000
          GOTO      SELC0000
.
SELC0030  CALL      JRNL0000
          GOTO      SELC0000
.
SELC0040  CALL      AUTO0000
          GOTO      SELC0000
.
SELC0050  CALL      NEXT0000
          GOTO      SELC0000
.
SELC0060  CALL      REFD0000
          GOTO      SELC0000
.
SELC0070  CALL      URCH0000
          GOTO      SELC0000
.
SELC0080  CALL      KNXB0000
          GOTO      SELC0000
.
SELC0090  CALL      S4B30000
          GOTO      SELC0000
.
SELC0100  CALL      TCOD0000
          GOTO      SELC0000
.
SELC0110  CALL      UPRA0000
          GOTO      SELC0000
.
SELC0120  CALL      PRCR0000
          GOTO      SELC0000
.
SELC0130  CALL      UDIH0000
          GOTO      SELC0000
.
SELC0140  CALL      UDIT0000
          GOTO      SELC0000
.
.         Post was selected. Set the exit flag to tell the calling routine.
.
SELC9000  MOVE      FALSE,EXIT               * Post was selected
          GOTO      SELC9999
.
.         Cancel was selected. Set the exit flag to tell the calling routine.
.
SELC9900  MOVE      TRUE,EXIT                * Cancel was selected
.
SELC9999  RETURN
+
.****************************************************************************
.*                                  SELD0000           Called by: ML0000    *
.*              select field to modify or post - Billing UDF's              *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Post was selected.                     *
.*                        TRUE  (1)  Cancel was selected.                   *
.****************************************************************************
.
SELD0000  CALL      MAINQST                  * Ask for an item, post or cancel
.
          COMPARE   ZERO,CCITEM              * What was entered ?
          GOTO      SELD8000 IF EQUAL        * Post was selected
          GOTO      SELD9000 IF LESS         * Cancel was selected
.
          BRANCH    CCITEM,SELD1000:         * using UDF field 1 ?
                           SELD1500:         * UDF field 1 description
                           SELD2000:         * UDF field 1 mandatory ?
                           SELD2500:         * using UDF field 2 ?
                           SELD3000:         * UDF field 2 description
                           SELD3500:         * UDF field 2 mandatory
                           SELD4000:         * using UDF field 3 ?
                           SELD4500:         * UDF field 3 description
                           SELD5000:         * UDF field 3 mandatory ?
                           SELD5500:         * using UDF field 4 ?
                           SELD6000:         * UDF field 4 description
                           SELD6500          * UDF field 4 mandatory
.
          BEEP                               * invalid input
          GOTO      SELD0000
.
SELD1000  CALL      UDFA0000
          GOTO      SELD0000
.
SELD1500  CALL      DESA0000
          GOTO      SELD0000
.
SELD2000  CALL      MANA0000
          GOTO      SELD0000
.
SELD2500  CALL      UDFB0000
          GOTO      SELD0000
.
SELD3000  CALL      DESB0000
          GOTO      SELD0000
.
SELD3500  CALL      MANB0000
          GOTO      SELD0000
.
SELD4000  CALL      UDFC0000
          GOTO      SELD0000
.
SELD4500  CALL      DESC0000
          GOTO      SELD0000
.
SELD5000  CALL      MANC0000
          GOTO      SELD0000
.
SELD5500  CALL      UDFD0000
          GOTO      SELD0000
.
SELD6000  CALL      DESD0000
          GOTO      SELD0000
.
SELD6500  CALL      MAND0000
          GOTO      SELD0000
.
.         Post was selected. Set the exit flag to tell the calling routine.
.
SELD8000  MOVE      FALSE,EXIT               * Post was selected
          GOTO      SELD9999
.
.         Cancel was selected. Set the exit flag to tell the calling routine.
.
SELD9000  MOVE      TRUE,EXIT                * Cancel was selected
.
SELD9999  RETURN
+
.****************************************************************************
.*                                  SELE0000           Called by: ML0000    *
.*              select field to modify or post - Debtor UDF's               *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Post was selected.                     *
.*                        TRUE  (1)  Cancel was selected.                   *
.****************************************************************************
.
SELE0000  CALL      MAINQST                  * Ask for an item, post or cancel
.
          COMPARE   ZERO,CCITEM              * What was entered ?
          GOTO      SELE8000 IF EQUAL        * Post was selected
          GOTO      SELE9000 IF LESS         * Cancel was selected
.
          BRANCH    CCITEM,SELE1000:         * using UDF field 1 ?
                           SELE1500:         * UDF field 1 description
                           SELE2000:         * UDF field 1 mandatory ?
                           SELE2500:         * using UDF field 2 ?
                           SELE3000:         * UDF field 2 description
                           SELE3500:         * UDF field 2 mandatory
                           SELE4000:         * using UDF field 3 ?
                           SELE4500:         * UDF field 3 description
                           SELE5000:         * UDF field 3 mandatory ?
                           SELE5500:         * using UDF field 4 ?
                           SELE6000:         * UDF field 4 description
                           SELE6500          * UDF field 4 mandatory
.
          BEEP                               * invalid input
          GOTO      SELE0000
.
SELE1000  CALL      UDFE0000
          GOTO      SELE0000
.
SELE1500  CALL      DESE0000
          GOTO      SELE0000
.
SELE2000  CALL      MANE0000
          GOTO      SELE0000
.
SELE2500  CALL      UDFF0000
          GOTO      SELE0000
.
SELE3000  CALL      DESF0000
          GOTO      SELE0000
.
SELE3500  CALL      MANF0000
          GOTO      SELE0000
.
SELE4000  CALL      UDFG0000
          GOTO      SELE0000
.
SELE4500  CALL      DESG0000
          GOTO      SELE0000
.
SELE5000  CALL      MANG0000
          GOTO      SELE0000
.
SELE5500  CALL      UDFH0000
          GOTO      SELE0000
.
SELE6000  CALL      DESH0000
          GOTO      SELE0000
.
SELE6500  CALL      MANH0000
          GOTO      SELE0000
.
.         Post was selected. Set the exit flag to tell the calling routine.
.
SELE8000  MOVE      FALSE,EXIT               * Post was selected
          GOTO      SELE9999
.
.         Cancel was selected. Set the exit flag to tell the calling routine.
.
SELE9000  MOVE      TRUE,EXIT                * Cancel was selected
.
SELE9999  RETURN
+
.****************************************************************************
.*                                  SELF0000           Called by: ML0000    *
.*              select field to modify or post - MAB UDF's                  *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Post was selected.                     *
.*                        TRUE  (1)  Cancel was selected.                   *
.****************************************************************************
.
SELF0000  CALL      MAINQST                  * Ask for an item, post or cancel
.
          COMPARE   ZERO,CCITEM              * What was entered ?
          GOTO      SELF8000 IF EQUAL        * Post was selected
          GOTO      SELF9000 IF LESS         * Cancel was selected
.
          BRANCH    CCITEM,SELF1000:         * using UDF field 1 ?
                           SELF1500:         * UDF field 1 description
                           SELF2000:         * UDF field 1 mandatory ?
                           SELF2500:         * using UDF field 2 ?
                           SELF3000:         * UDF field 2 description
                           SELF3500          * UDF field 2 mandatory
.
          BEEP
          GOTO      SELF0000
.
SELF1000  CALL      UDFI0000
          GOTO      SELF0000
.
SELF1500  CALL      DESI0000
          GOTO      SELF0000
.
SELF2000  CALL      MANI0000
          GOTO      SELF0000
.
SELF2500  CALL      UDFJ0000
          GOTO      SELF0000
.
SELF3000  CALL      DESJ0000
          GOTO      SELF0000
.
SELF3500  CALL      MANJ0000
          GOTO      SELF0000
.
.         Post was selected. Set the exit flag to tell the calling routine.
.
SELF8000  MOVE      FALSE,EXIT               * Post was selected
          GOTO      SELF9999
.
.         Cancel was selected. Set the exit flag to tell the calling routine.
.
SELF9000  MOVE      TRUE,EXIT                * Cancel was selected
.
SELF9999  RETURN
+
.****************************************************************************
.*                                  SELG0000           Called by: ML0000    *
.*              select field to modify or post - IBA screen 1               *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Post was selected.                     *
.*                        TRUE  (1)  Cancel was selected.                   *
.****************************************************************************
.
SELG0000  CALL      MAINQST                  * Ask for an item, post or cancel
.
          COMPARE   ZERO,CCITEM              * What was entered ?
          GOTO      SELG8000 IF EQUAL        * Post was selected
          GOTO      SELG9000 IF LESS         * Cancel was selected
.
          BRANCH    CCITEM,SELG1000:         * menu program
                           SELG1500:         * security key
                           SELG2000:         * ibapri98 password
                           SELG2500:         * pp data directory
                           SELG3000:         * next invoice number
                           SELG3500:         * from date
                           SELG4000:         * hospital type
                           SELG4500:         * largest port number
                           SELG5000:         * use H.F. & UDF's
                           SELG5500:         * practice name on invoice
                           SELG6000:         * invoice layout
                           SELG6500:         * ATB layout
                           SELG7000:         * financial year start
                           SELG7200:         * next unique claims number
                           SELG7400:         * patient system flag
                           SELG7600:         * next unique claims #
                           SELG7800:         * next unique bulk bill claim #
                           SELG7900:         * allow keyin of journal date
                           SELG7920          * Outpatients system flag      
.
          BEEP                               * invalid input
          GOTO      SELG0000
.
SELG1000  CALL      MENU0000
          GOTO      SELG0000
.
SELG1500  CALL      SKEY0000
          GOTO      SELG0000
.
SELG2000  CALL      PASS0000
          GOTO      SELG0000
.
SELG2500  CALL      DDIR0000 
          GOTO      SELG0000
.
SELG3000  CALL      NINV0000
          GOTO      SELG0000
.
SELG3500  CALL      DATE0000
          GOTO      SELG0000
.
SELG4000  CALL      HTYP0000
          GOTO      SELG0000
.
SELG4500  CALL      PORT0000
          GOTO      SELG0000
.
SELG5000  CALL      HUDF0000
          GOTO      SELG0000
.
SELG5500  CALL      IADD0000
          GOTO      SELG0000
.
SELG6000  CALL      ILAY0000
          GOTO      SELG0000
.
SELG6500  CALL      ALAY0000
          GOTO      SELG0000
.
SELG7000  CALL      FINY0000
          GOTO      SELG0000
.
SELG7200  CALL      UNIQ0000
          GOTO      SELG0000
.
SELG7400  CALL      PSYS0000
          GOTO      SELG0000
.
SELG7600  CALL      UNCL0000
          GOTO      SELG0000
.
SELG7800  CALL      BBCL0000
          GOTO      SELG0000
.
SELG7900  CALL      JDAT0000
          GOTO      SELG0000
.
SELG7920  CALL      OSYS0000      
          GOTO      SELG0000
.
.         Post was selected. Set the exit flag to tell the calling routine.
.
SELG8000  MOVE      FALSE,EXIT               * Post was selected
          GOTO      SELG9999
.
.         Cancel was selected. Set the exit flag to tell the calling routine.
.
SELG9000  MOVE      TRUE,EXIT                * Cancel was selected
.
SELG9999  RETURN
+
.****************************************************************************
.*                                  SELH0000           Called by: ML0000    *
.*              select field to modify or post - ATB Setup Screen           *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Post was selected.                     *
.*                        TRUE  (1)  Cancel was selected.                   *
.****************************************************************************
.
SELH0000  CALL      MAINQST                  * Ask for an item, post or cancel
.
          COMPARE   ZERO,CCITEM              * What was entered ?
          GOTO      SELH8000 IF EQUAL        * Post was selected
          GOTO      SELH9000 IF LESS         * Cancel was selected
.
          BRANCH    CCITEM,SELH1000:         * print paid column
                           SELH1500:         * days in period 1
                           SELH2000:         * column header for period 1
                           SELH2500:         * days in period 2
                           SELH3000:         * column header for period 2
                           SELH3500:         * days in period 3
                           SELH4000:         * column header for period 3
                           SELH4500:         * days in period 4
                           SELH5000:         * column header for period 4
                           SELH5500:         * days in period 5
                           SELH6000:         * column header for period 5
                           SELH6500:         * days in period 6
                           SELH7000          * column header for period 6
.
          BEEP                               * invalid input
          GOTO      SELH0000
.
SELH1000  CALL      PAID0000
          GOTO      SELH0000
.
SELH1500  CALL      PERA0000
          GOTO      SELH0000
.
SELH2000  CALL      NAMA0000
          GOTO      SELH0000
.
SELH2500  CALL      PERB0000
          GOTO      SELH0000
.
SELH3000  CALL      NAMB0000
          GOTO      SELH0000
.
SELH3500  CALL      PERC0000
          GOTO      SELH0000
.
SELH4000  CALL      NAMC0000
          GOTO      SELH0000
.
SELH4500  CALL      PERD0000
          GOTO      SELH0000
.
SELH5000  CALL      NAMD0000
          GOTO      SELH0000
.
SELH5500  CALL      PERE0000
          GOTO      SELH0000
.
SELH6000  CALL      NAME0000
          GOTO      SELH0000
.
SELH6500  CALL      PERF0000
          GOTO      SELH0000
.
SELH7000  CALL      NAMF0000
          GOTO      SELH0000
.
.         Post was selected. Set the exit flag to tell the calling routine.
.
SELH8000  MOVE      FALSE,EXIT               * Post was selected
          GOTO      SELH9999
.
.         Cancel was selected. Set the exit flag to tell the calling routine.
.
SELH9000  MOVE      TRUE,EXIT                * Cancel was selected
.
SELH9999  RETURN
+
.****************************************************************************
.*                                  SELI0000           Called by: ML0000    *
.*              select field to modify or post - IBA screen                 *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Post was selected.                     *
.*                        TRUE  (1)  Cancel was selected.                   *
.****************************************************************************
.
SELI0000  CALL      MAINQST                  * Ask for an item, post or cancel
.
          COMPARE   ZERO,CCITEM              * What was entered ?
          GOTO      SELI8000 IF EQUAL        * Post was selected
          GOTO      SELI9000 IF LESS         * Cancel was selected
.
          BRANCH    CCITEM,SELI1000:         * running G/L interface
                           SELI2000:         * G/L data directory path
                           SELI3000:         * using HRH delphic interface
                           SELI4000:         * UDF for referral length
                           SELI5000          * Fees allocation
          BEEP
          GOTO      SELI0000
.
.------ keyin the running general ledger interface parameter ------
.
SELI1000  CALL      GLIN0000
          GOTO      SELI0000
.
.------ keyin the general ledger data directory ------
.
SELI2000  CALL      PATH0000
          GOTO      SELI0000
.
. ------  See if using the HRH Delphic Interface ------
.
SELI3000  CALL      HRHD0000
          GOTO      SELI0000
.
. ------  See which UDF is being used for Referral Length (G1 - G4)
.
SELI4000  CALL      RUDF0000
          GOTO      SELI0000
.
. ------  Type of fees allocation
.
SELI5000  CALL      AFEE0000
          GOTO      SELI0000
.
.         Post was selected. Set the exit flag to tell the calling routine.
.
SELI8000  MOVE      FALSE,EXIT               * Post was selected
          GOTO      SELI9999
.
.         Cancel was selected. Set the exit flag to tell the calling routine.
.
SELI9000  MOVE      TRUE,EXIT                * Cancel was selected
.
SELI9999  RETURN
+
.****************************************************************************
.*                              HRHD0000               Called by: SELI0000  *
.*            Keyin if using HRH Delphic Interface                          *
.****************************************************************************
.
HRHD0000  KEYIN     *P44:6,*EL,*V2LON,ANS:
                    *P44:6,*DV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS                     * "Y" input ?
          IF        @EQUAL
            DISPLAY   *P44:6,*V2LON,"Yes"
            MOVE      ONE,PRCNHRHF               * yes - set flag
            GOTO      HRHD9999
          ENDIF
.
          MATCH     ANSN,ANS                     * "N" input ?
          IF        @EQUAL
            DISPLAY   *P44:6,*V2LON,"No"
            MOVE      ZERO,PRCNHRHF              * yes - set flag
            GOTO      HRHD9999
          ENDIF
.
          BEEP                                   * invalid input
          GOTO      HRHD0000
.
HRHD9999  RETURN
+
.****************************************************************************
.*                              RUDF0000               Called by: SELI0000  *
.*            Keyin which UDF is used for referral length                   *
.****************************************************************************
.
RUDF0000  KEYIN     *P44:7,*EL,*V2LON,PRCNRUDF:
                    *P44:7,*DV,PRCNRUDF
.
          IF        PRCNRUDF < 1 | PRCNRUDF > 4
            DISPLAY   *P1:24,*EL,*B,"Value must be in the range 1 - 4.  ";
            CALL      HITENTER
            GOTO      RUDF0000
          ENDIF
.
RUDF9999  RETURN
+
.****************************************************************************
.*                              AFEE0000               Called by: SELI0000  *
.*            Keyin Type of fees allocation                                 *
.****************************************************************************
AFEE0000  DISPLAY   *P1:24,"Selections: 0 = Normal, 1 = Doctor Percentage";
.
          KEYIN     *P44:8,*EL,*V2LON,PRCNAFEE:
                    *P44:8,*DV,PRCNAFEE
          COMPARE   ZERO,PRCNAFEE
          GOTO      AFEE2000 IF EQUAL
          BRANCH    PRCNAFEE,AFEE2000
.
          DISPLAY   *P1:24,*EL,*B,"Selection not valid. ";
          CALL      HITENTER
          GOTO      AFEE0000
.
AFEE2000  MOVE      FEE0,FEEDESC
          LOAD      FEEDESC,PRCNAFEE,FEE1
          DISPLAY   *P44:8,*V2LON,PRCNAFEE:
                    *P51:8,FEEDESC
.
AFEE9999  RETURN
+
.****************************************************************************
.*                                  SELJ0000           Called by: ML0000    *
.*              select field to modify or post - IBA special screen         *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Post was selected.                     *
.*                        TRUE  (1)  Cancel was selected.                   *
.****************************************************************************
.
SELJ0000  CALL      MAINQST                  * Ask for an item, post or cancel
.
          COMPARE   ZERO,CCITEM              * What was entered ?
          GOTO      SELJ8000 IF EQUAL        * Post was selected
          GOTO      SELJ9000 IF LESS         * Cancel was selected
.
          BRANCH    CCITEM,SELJ0010:         
                           SELJ0020       
          BEEP
          GOTO      SELJ0000
.
.
.------  referring doc. on transaction scr ------
SELJ0010  CALL      RDOC0000
          GOTO      SELJ0000
.
.------  generated batch numbers in PRI04? ------
SELJ0020
          MOVE      "68",CCOL
          MOVE      "05",CVERT
          CALL      KYNO0000
          MOVE      EXIT,PRCNGENB
          GOTO      SELJ0000
.
.         Post was selected. Set the exit flag to tell the calling routine.
.
SELJ8000  MOVE      FALSE,EXIT               * Post was selected
          GOTO      SELJ9999
.
.         Cancel was selected. Set the exit flag to tell the calling routine.
.
SELJ9000  MOVE      TRUE,EXIT                * Cancel was selected
.
SELJ9999  RETURN
+
.*************************************************************************
.*                                RDOC0000            Called by: SELJ0000*
.*                 see if service date defaults to current date          *
.*************************************************************************
.
RDOC0000  KEYIN     *P68:4,*EL,*DV,UNDLN1:
                    *P68:4,*V2LON,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS                     * Yes input ?
          GOTO      RDOC9000 IF EQUAL            * yes
.
          MATCH     ANSN,ANS                     * No input ?
          GOTO      RDOC9500 IF EQUAL            * yes
.
          BEEP
          GOTO      RDOC0000
.
RDOC9000  MOVE      ONE,PRCNRDOC
          DISPLAY   *P68:4,*EL,*V2LON,YES
          GOTO      RDOC9999
.
RDOC9500  MOVE      ZERO,PRCNRDOC
          DISPLAY   *P68:4,*EL,*V2LON,NO
.
RDOC9999  RETURN
+
.****************************************************************************
.*                                   GLIN0000                               *
.*            Keyin the running general ledger interface parameter          *
.****************************************************************************
GLIN0000  KEYIN     *P44:4,*EL,*V2LON,ANS;
          MATCH     "Y",ANS
          GOTO      GLIN1000 IF EQUAL
.
          MATCH     "N",ANS
          GOTO      GLIN2000 IF EQUAL
          BEEP
          GOTO      GLIN0000
.
GLIN1000  MOVE      ONE,PRCNGLIN
          GOTO      GLIN3000
.
GLIN2000  MOVE      ZERO,PRCNGLIN
.
GLIN3000  MOVE      NO,FLAG
          LOAD      FLAG,PRCNGLIN,YES
          DISPLAY   *P44:4,*EL,*V2LON,FLAG;
.
GLIN9999  RETURN
+
.****************************************************************************
.*                                 PATH0000                                 *
.*            Keyin the path for the general ledger data directory          *
.****************************************************************************
PATH0000  KEYIN     *P44:5,*DV,SP20,*P44:5,*V2LON,PRCNGLPA;
          DISPLAY   *P44:5,*V2LON,PRCNGLPA;
.
PATH9999  RETURN
+
.*************************************************************************
.*                                DISA0000             Called by: ML0000 *
.*                   display details corresponse to procedure code.      *
.*                   and save values read from file (audit screen)       *
.*************************************************************************
.
DISA0000  MOVE      YES,FLAG
          LOAD      FLAG,PRCNAUDD,NO             * debtor audit file
          DISPLAY   *P26:4,*V2LON,FLAG
.
          MOVE      YES,FLAG
          LOAD      FLAG,PRCNAUDC,NO             * Doctor audit file
          DISPLAY   *P26:5,*V2LON,FLAG
.
          MOVE      YES,FLAG
          LOAD      FLAG,PRCNAUDE,NO             * M.P. audit flag set
          DISPLAY   *P26:6,*V2LON,FLAG
.
          MOVE      YES,FLAG
          LOAD      FLAG,PRCNAUDG,NO             * spec path test audit set
          DISPLAY   *P26:7,*V2LON,FLAG
.
          MOVE      YES,FLAG
          LOAD      FLAG,PRCNAUDH,NO             * excptn charging audit set
          DISPLAY   *P26:8,*V2LON,FLAG
.
          MOVE      YES,FLAG
          LOAD      FLAG,PRCNAUDI,NO             * item audit flag set
          DISPLAY   *P26:9,*V2LON,FLAG
.
DISA9999  RETURN
+
.*************************************************************************
.*                                DISB0000           Called by: ML0000   *
.*                                                              MABI0000 *
.*                                                              VAFI0000 *
.*                   display details corresponse to procedure code.      *
.*                   and save values read from file   (user screen 1)    *
.*************************************************************************
.
DISB0000  DISPLAY   *P40:4,*V2LON,CLETPLN:
                    *P40:5,CLETTAB:
                    *P40:6,CLETLEN:
                    *P40:7,CLETTOP:
                    *P40:8,CLETTOA:
                    *P40:9,CLETTOS:
                    *P40:10,CLETTOT:
                    *P40:11,PRCNADD1:
                    *P40:12,PRCNADD2:
                    *P40:13,PRCNADD3:
                    *P40:14,PRCNPOST 
.
          MOVE      SP30,INAME
.
          MATCH     SP6,PRCNWCOM                 * any code found ?
          GOTO      DISB1000 IF EQUAL            * no 
.
          MOVE      IMESS,INAME                  * not on file message
          PACK      KEY6,PRCNWCOM                * get insurance co.
          CALL      RDINSR1
.
DISB1000  DISPLAY   *P40:15,*V2LON,PRCNWCOM,*HOFF,SP3,INAME
.
          MOVE      SP30,INAME
.
          MATCH     SP6,PRCNMABI                 * any code found ?
          GOTO      DISB3000 IF EQUAL            * no 
.
          MOVE      IMESS,INAME                  * not on file message
          PACK      KEY6,PRCNMABI                * get insurance co.
          CALL      RDINSR1
.
DISB3000  DISPLAY   *P40:16,*V2LON,PRCNMABI,*HOFF,SP3,INAME
.
          MOVE      SP30,INAME
.
          MATCH     SP6,PRCNVAIN                 * any code found ?
          GOTO      DISB7000 IF EQUAL            * no 
.
          MOVE      IMESS,INAME                  * not on file message
          PACK      KEY6,PRCNVAIN                * get insurance co.
          CALL      RDINSR1
.
DISB7000  DISPLAY   *P40:17,*V2LON,PRCNVAIN,*HOFF,SP3,INAME
.
          COMPARE   ONE,PRCNGLIN
          GOTO      DISB9999 IF NOT EQUAL
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNDAPS,YES            * Doctor charges to APS
          DISPLAY   *P40:18,*V2LON,FLAG
.
          MOVE      PRCNLPAY,KEY2
          MOVE      PRCNAPAY,KEY12
          CALL      LEDG0000
.
          DISPLAY   *P40:19,*V2LON,PRCNLPAY,*P44:19,*HOFF,LEDGDESC:
                    *P40:20,*V2LON,PRCNAPAY,*P54:20,*HOFF,ACCTDESC;
.
          MOVE      PRCNLCOM,KEY2
          MOVE      PRCNACOM,KEY12
          CALL      LEDG0000
.
          DISPLAY   *P40:21,*V2LON,PRCNLCOM,*P44:21,*HOFF,LEDGDESC:
                    *P40:22,*V2LON,PRCNACOM,*P54:22,*HOFF,ACCTDESC;
.
DISB9999  RETURN
+
.*************************************************************************
.*                                LEDG0000                               *
.*                   Get ledger details                                  *
.*************************************************************************
LEDG0000  MOVE      SP30,LEDGDESC
          MOVE      SP30,ACCTDESC
.
          COMPARE   ONE,FMSFILES
          GOTO      LEDG9999 IF NOT EQUAL
.
          MATCH     SP2,KEY2
          IF        !@EQUAL
            PACK      KEY2,KEY2
            CALL      RDFMLA1
            IF        OVRCD<>1
              MOVE      FMLADESC,LEDGDESC
            ENDIF
.
            MATCH     SP10,KEY12
            IF        !@EQUAL
              PACK      KEY14,KEY2,KEY12
              CALL      RDFMAM1
              IF        OVRCD<>1
                MOVE      FMAMDESC,ACCTDESC
              ENDIF
            ENDIF
          ENDIF
.
LEDG9999  RETURN
+
.*************************************************************************
.*                                DISC0000             Called by: ML0000 *
.*                   display details corresponse to procedure code.      *
.*                   and save values read from file   (user screen 2)    *
.*************************************************************************
.
DISC0000  DISPLAY   *P42:4,*V2LON,PRCNNAME:
                    *P42:5,PRCNTELE
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNJOUR,YES            * journals print set
          DISPLAY   *P42:6,*V2LON,FLAG
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNAUTO,YES            * auto generate debtor no.
          DISPLAY   *P42:7,*V2LON,FLAG
.
          DISPLAY   *P42:8,*V2LON,PRCNDETN       * next autogen number
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNDOCM,YES            * referring doctor mandatory
          DISPLAY   *P42:9,*V2LON,FLAG:
                    *P42:10,PRCNURCH
.
          DISPLAY   *P42:11,*V2LON,PRCNNXBA:     * next generated batch number
                    *P42:12,PRCNS4B3:
                    *P42:13,PRCNTCOD
.
          MOVE      DUPRA0,DUPRA
          LOAD      DUPRA,PRCNUPRA,DUPRA1,DUPRA2,DUPRA3
          DISPLAY   *P42:14,*V2LON,PRCNUPRA,*HOFF,*P46:14,DUPRA
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNCADM,YES            * Print batch invoice for adm
          DISPLAY   *P42:15,*V2LON,FLAG
.
          DISPLAY   *P42:16,*V2LON,PRCNPRIH
.
          DISPLAY   *P42:17,*V2LON,PRCNPRIT
.
DISC9999  RETURN
+
.*************************************************************************
.*                                DISD0000             Called by: ML0000 *
.*                   display details corresponse to procedure code.      *
.*                   and save values read from file   (billing udf's)    *
.*************************************************************************
.
DISD0000  MOVE      NO,FLAG
          LOAD      FLAG,PRCNUDF1,YES            * UDF field 1 in use
          DISPLAY   *P44:4,*V2LON,FLAG
.
          MOVE      CMESS,TDESC                  * missing category message
          PACK      KEY5,CODEG1,SP3
          CALL      RDCODE1
.
          DISPLAY   *P44:5,*V2LON,TDESC          * category description
          MOVE      TDESC,UDESC1
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNMAN1,YES            * UDF1 mandatory
          DISPLAY   *P44:6,*V2LON,FLAG
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNUDF2,YES            * UDF field 2 in use
          DISPLAY   *P44:7,*V2LON,FLAG
.
          MOVE      CMESS,TDESC                  * missing category message
          PACK      KEY5,CODEG2,SP3
          CALL      RDCODE1
.
          DISPLAY   *P44:8,*V2LON,TDESC          * category description
          MOVE      TDESC,UDESC2
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNMAN2,YES            * UDF2 mandatory
          DISPLAY   *P44:9,*V2LON,FLAG
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNUDF3,YES            * UDF field 3 in use
          DISPLAY   *P44:10,*V2LON,FLAG
.
          MOVE      CMESS,TDESC                  * missing category message
          PACK      KEY5,CODEG3,SP3
          CALL      RDCODE1
.
          DISPLAY   *P44:11,*V2LON,TDESC         * category description
          MOVE      TDESC,UDESC3
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNMAN3,YES            * UDF3 mandatory
          DISPLAY   *P44:12,*V2LON,FLAG
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNUDF4,YES            * UDF field 4 in use
          DISPLAY   *P44:13,*V2LON,FLAG
.
          MOVE      CMESS,TDESC                  * missing category message
          PACK      KEY5,CODEG4,SP3
          CALL      RDCODE1
.
          DISPLAY   *P44:14,*V2LON,TDESC         * category description
          MOVE      TDESC,UDESC4
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNMAN4,YES            * UDF4 mandatory
          DISPLAY   *P44:15,*V2LON,FLAG
.
DISD9999  RETURN
+
.*************************************************************************
.*                                DISE0000             Called by: ML0000 *
.*                   display details corresponse to procedure code.      *
.*                   and save values read from file   (debtor udf's)     *
.*************************************************************************
.
DISE0000  MOVE      NO,FLAG
          LOAD      FLAG,PRCNUDF5,YES            * UDF field 5 in use
          DISPLAY   *P44:4,*V2LON,FLAG
.
          MOVE      CMESS,TDESC                  * missing category message
          PACK      KEY5,CODEG5,SP3
          CALL      RDCODE1
.
          DISPLAY   *P44:5,*V2LON,TDESC          * category description
          MOVE      TDESC,UDESC5
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNMAN5,YES            * UDF5 mandatory
          DISPLAY   *P44:6,*V2LON,FLAG
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNUDF6,YES            * UDF field 6 in use
          DISPLAY   *P44:7,*V2LON,FLAG
.
          MOVE      CMESS,TDESC                  * missing category message
          PACK      KEY5,CODEG6,SP3
          CALL      RDCODE1
.
          DISPLAY   *P44:8,*V2LON,TDESC          * category description
          MOVE      TDESC,UDESC6
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNMAN6,YES            * UDF6 mandatory
          DISPLAY   *P44:9,*V2LON,FLAG
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNUDF7,YES            * UDF field 7 in use
          DISPLAY   *P44:10,*V2LON,FLAG
.
          MOVE      CMESS,TDESC                  * missing category message
          PACK      KEY5,CODEG7,SP3
          CALL      RDCODE1
.
          DISPLAY   *P44:11,*V2LON,TDESC         * category description
          MOVE      TDESC,UDESC7
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNMAN7,YES            * UDF7 mandatory
          DISPLAY   *P44:12,*V2LON,FLAG
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNUDF8,YES            * UDF field 8 in use
          DISPLAY   *P44:13,*V2LON,FLAG
.
          MOVE      CMESS,TDESC                  * missing category message
          PACK      KEY5,CODEG8,SP3
          CALL      RDCODE1
.
          DISPLAY   *P44:14,*V2LON,TDESC         * category description
          MOVE      TDESC,UDESC8
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNMAN8,YES            * UDF8 mandatory
          DISPLAY   *P44:15,*V2LON,FLAG
.
DISE9999  RETURN
+
.*************************************************************************
.*                                DISF0000             Called by: ML0000 *
.*                   display details corresponse to procedure code.      *
.*                   and save values read from file   (mab udf's)        *
.*************************************************************************
.
DISF0000  MOVE      NO,FLAG
          LOAD      FLAG,PRCNUDFA,YES            * UDF field 1 in use
          DISPLAY   *P44:4,*V2LON,FLAG
.
          MOVE      CMESS,TDESC                  * missing category message
          PACK      KEY5,CODEMO,SP3
          CALL      RDCODE1
.
          DISPLAY   *P44:5,*V2LON,TDESC          * category description
          MOVE      TDESC,UDESCA
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNMANA,YES            * UDF1 mandatory
          DISPLAY   *P44:6,*V2LON,FLAG
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNUDFB,YES            * UDF field 2 in use
          DISPLAY   *P44:7,*V2LON,FLAG
.
          MOVE      CMESS,TDESC                  * missing category message
          PACK      KEY5,CODEMP,SP3
          CALL      RDCODE1
.
          DISPLAY   *P44:8,*V2LON,TDESC          * category description
          MOVE      TDESC,UDESCB
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNMANB,YES            * UDF2 mandatory
          DISPLAY   *P44:9,*V2LON,FLAG
.
DISF9999  RETURN
+
.*************************************************************************
.*                                DISG0000             Called by: ML0000 *
.*                   display details corresponse to procedure code.      *
.*                   and save values read from file   (iba screen 1)     *
.*************************************************************************
.
DISG0000  DISPLAY   *P51:8,*V2LON,PRCNINVN
.
          UNPACK    PRCNDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P51:9,*V2LON,CPCDATE
.
          MOVE      HOSDESC1,HOSDESC
          LOAD      HOSDESC,PRCNHTYP,HOSDESC2
          DISPLAY   *P51:10,*V2LON,HOSDESC:
                    *P51:11,CNOPORT
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNHFUN,YES
          DISPLAY   *P51:12,*V2LON,FLAG
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNADDR,YES            * use address on invoice
          DISPLAY   *P51:13,*V2LON,FLAG
.
          MOVE      INV0,INVDESC                 
          LOAD      INVDESC,PRCNLAYT,INV1,INV2,INV3,INV4,INV5,INV6,INV7,INV8:
                                     INV9
          DISPLAY   *P51:14,*V2LON,INVDESC
.
          MOVE      ATB0,ATBDESC
          LOAD      ATBDESC,PRCNATBL,ATB1,ATB2
          DISPLAY   *P51:15,*V2LON,ATBDESC
.
          UNPACK    PRCNSDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P51:16,*V2LON,CPCDATE
.
          DISPLAY   *P51:17,*V2LON,PRCNUNIQ
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNPSYS,YES
          DISPLAY   *P51:18,*V2LON,FLAG
.
          DISPLAY   *P51:19,*V2LON,PRCNUNCL:
                    *P51:20,PRCNBBCL
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNJDAT,YES
          DISPLAY   *P51:21,*V2LON,FLAG
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNOSYS,YES            * use outpatients        
          DISPLAY   *P51:22,*V2LON,FLAG
.
DISG9999  RETURN
+
.*************************************************************************
.*                                DISH0000             Called by: ML0000 *
.*                   display details corresponse to procedure code.      *
.*                   and save values read from file   (iba screen)       *
.*************************************************************************
.
DISH0000  MOVE      NO,FLAG
          LOAD      FLAG,PRCNPAID,YES
          DISPLAY   *P42:4,*V2LON,FLAG
.
          DISPLAY   *P42:5,*V2LON,PRCNPER1,*P42:6,PRCNNAM1:
                    *P42:7,PRCNPER2,*P42:8,PRCNNAM2:
                    *P42:9,PRCNPER3,*P42:10,PRCNNAM3:
                    *P42:11,PRCNPER4,*P42:12,PRCNNAM4:
                    *P42:13,PRCNPER5,*P42:14,PRCNNAM5:
                    *P42:15,PRCNPER6,*P42:16,PRCNNAM6
.
DISH9999  RETURN
+
.*************************************************************************
.*                                DISI0000             Called by: ML0000 *
.*                 Display details for IBA Screen 2                      *
.*************************************************************************
DISI0000  MOVE      NO,FLAG
          LOAD      FLAG,PRCNGLIN,YES
          DISPLAY   *P44:4,*V2LON,FLAG:
                    *P44:5,PRCNGLPA:
                    *P65:5,*HOFF,"(Must end in ",*V2LON,"/",*HOFF,")"
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNHRHF,YES
          DISPLAY   *P44:6,*V2LON,FLAG:
                    *P44:7,PRCNRUDF;
.
          MOVE      FEE0,FEEDESC
          LOAD      FEEDESC,PRCNAFEE,FEE1
          DISPLAY   *P44:8,*V2LON,PRCNAFEE:
                    *P51:8,FEEDESC;
.
DISI9999  RETURN
+
.*************************************************************************
.*                                DISJ0000             Called by: ML0000 *
.*                 Display details for IBA Special Screen 1              *
.*************************************************************************
.
DISJ0000  MOVE      NO,FLAG
          LOAD      FLAG,PRCNRDOC,YES
          DISPLAY   *P68:4,*V2LON,FLAG
.
          MOVE      NO,FLAG
          LOAD      FLAG,PRCNGENB,YES
          DISPLAY   *P68:5,*V2LON,FLAG
.
DISJ9999
+
.***************************************************************************
.*                              UPDA0000               Called by: ML0000   *
.*                         update fields for audit screen                  *
.***************************************************************************
.
UPDA0000  WRITAB    CONTROLF,THIRTY3;*53,PRCNAUDC,PRCNAUDD,PRCNAUDE:
                                     *57,PRCNAUDG,PRCNAUDH,PRCNAUDI
          DISPLAY   *P60:24,*EL,*V2LON,"*** Posted ***",*W2;
UPDA9999  RETURN
+
.***************************************************************************
.*                              UPDB0000               Called by: ML0000   *
.*                         update fields for user screen 1                 *
.***************************************************************************
.
UPDB0000  WRITAB    CONTROLF,TEN;*120,CLETPLN,CLETTAB,CLETLEN,CLETTOP:
                    CLETTOA,CLETTOS,CLETTOT
          WRITAB    CONTROLF,THIRTY3;*144,PRCNWCOM,PRCNMABI,PRCNVAIN:
                                     *213,PRCNDAPS,PRCNLPAY,PRCNAPAY:
                                          PRCNLCOM,PRCNACOM
          WRITAB    CONTROLF,THIRTY4;*2,PRCNADD1,PRCNADD2,PRCNADD3,PRCNPOST 
          DISPLAY   *P60:24,*EL,*V2LON,"*** Posted ***",*W2;
UPDB9999  RETURN 
+
.***************************************************************************
.*                              UPDC0000               Called by: ML0000   *
.*                         update fields for user screen 2                 *
.***************************************************************************
.
UPDC0000  WRITAB    CONTROLF,THIRTY3;*71,PRCNNAME,PRCNTELE:
                                     *114,PRCNJOUR,PRCNAUTO,PRCNDETN:
                                     *163,PRCNDOCM:
                                     *180,PRCNURCH:
                                     *201,PRCNS4B3:
                                     *212,PRCNUPRA
          WRITAB    CONTROLF,THIRTY4;*188,PRCNNXBA,PRCNTCOD:
                                     *205,PRCNCADM,*206,PRCNPRIH,*212,PRCNPRIT
          DISPLAY   *P60:24,*EL,*V2LON,"*** Posted ***",*W2;
UPDC9999  RETURN
+
.***************************************************************************
.*                              UPDD0000               Called by: ML0000   *
.*                         update fields for billing udf's                 *
.***************************************************************************
.
UPDD0000  WRITAB    CONTROLF,THIRTY3;*124,PRCNUDF1,PRCNMAN1,PRCNUDF2:
                    PRCNMAN2,PRCNUDF3,PRCNMAN3,PRCNUDF4,PRCNMAN4
          DISPLAY   *P60:24,*EL,*V2LON,"*** Posted ***",*W2;
.
          PACK      KEY5,CODEG1,SP3
          CALL      RDCODE1
          BRANCH    OVRCD,UPDD1000               * category not on file
          MOVE      UDESC1,TDESC           
          CALL      UPCODE1                      * update description
.
UPDD1000  PACK      KEY5,CODEG2,SP3
          CALL      RDCODE1
          BRANCH    OVRCD,UPDD2000
          MOVE      UDESC2,TDESC
          CALL      UPCODE1
.
UPDD2000  PACK      KEY5,CODEG3,SP3
          CALL      RDCODE1
          BRANCH    OVRCD,UPDD3000
          MOVE      UDESC3,TDESC
          CALL      UPCODE1
.
UPDD3000  PACK      KEY5,CODEG4,SP3
          CALL      RDCODE1
          BRANCH    OVRCD,UPDD9999
          MOVE      UDESC4,TDESC
          CALL      UPCODE1
.
UPDD9999  RETURN
+
.***************************************************************************
.*                              UPDE0000               Called by: ML0000   *
.*                         update fields for debtor udf's                  *
.***************************************************************************
.
UPDE0000  WRITAB    CONTROLF,THIRTY3;*132,PRCNUDF5,PRCNMAN5,PRCNUDF6:
                    PRCNMAN6,PRCNUDF7,PRCNMAN7,PRCNUDF8,PRCNMAN8
          DISPLAY   *P60:24,*EL,*V2LON,"*** Posted ***",*W2;
.
          PACK      KEY5,CODEG5,SP3               
          CALL      RDCODE1
          BRANCH    OVRCD,UPDE1000               * category not on file
          MOVE      UDESC5,TDESC
          CALL      UPCODE1                      * update description
.
UPDE1000  PACK      KEY5,CODEG6,SP3
          CALL      RDCODE1
          BRANCH    OVRCD,UPDE2000
          MOVE      UDESC6,TDESC
          CALL      UPCODE1
.
UPDE2000  PACK      KEY5,CODEG7,SP3
          CALL      RDCODE1
          BRANCH    OVRCD,UPDE3000
          MOVE      UDESC7,TDESC
          CALL      UPCODE1
.
UPDE3000  PACK      KEY5,CODEG8,SP3
          CALL      RDCODE1
          BRANCH    OVRCD,UPDE9999
          MOVE      UDESC8,TDESC
          CALL      UPCODE1
.
UPDE9999  RETURN
+
.***************************************************************************
.*                              UPDF0000               Called by: ML0000   *
.*                         update fields for mab udf's                     *
.***************************************************************************
.
UPDF0000  WRITAB    CONTROLF,THIRTY3;*140,PRCNUDFA,PRCNMANA,PRCNUDFB:
                    PRCNMANB
          DISPLAY   *P60:24,*EL,*V2LON,"*** Posted ***",*W2;
.
          PACK      KEY5,CODEMO,SP3               
          CALL      RDCODE1
          BRANCH    OVRCD,UPDF1000               * category not on file
          MOVE      UDESCA,TDESC
          CALL      UPCODE1                      * update description
.
UPDF1000  PACK      KEY5,CODEMP,SP3
          CALL      RDCODE1
          BRANCH    OVRCD,UPDF9999
          MOVE      UDESCB,TDESC
          CALL      UPCODE1
.
UPDF9999  RETURN
+
.***************************************************************************
.*                              UPDG0000               Called by: ML0000   *
.*                         update fields for iba screen 1                  *
.*************************************************************************** 
.  
UPDG0000  WRITAB    CONTROLF,TEN;*138,CNOPORT 
          WRITAB    CONTROLF,THIRTY3;*43,PRCNINVN,*60,PRCNDATE,*113,PRCNADDR:
                    *162,PRCNHFUN,*164,PRCNSDAT,*170,PRCNLAYT,PRCNATBL:
                    *172,PRCNUNIQ,*181,PRCNPSYS,PRCNUNCL,PRCNBBCL,PRCNJDAT:
                    *199,PRCNOSYS
          WRITAB    CONTROLF,THIRTY4;*1,PRCNHTYP
          DISPLAY   *P60:24,*EL,*V2LON,"*** Posted ***",*W2;
UPDG9999  RETURN
+
.***************************************************************************
.*                              UPDH0000               Called by: ML0000   *
.*                         update fields for ATB screen                    *
.*************************************************************************** 
.  
UPDH0000  WRITAB    CONTROLF,THIRTY4;*81,PRCNPAID,PRCNPER1,PRCNNAM1:
                             PRCNPER2,PRCNNAM2,PRCNPER3,PRCNNAM3:
                             PRCNPER4,PRCNNAM4,PRCNPER5,PRCNNAM5:
                             PRCNPER6,PRCNNAM6
          DISPLAY   *P60:24,*EL,*V2LON,"*** Posted ***",*W2;
UPDH9999  RETURN
+
.***************************************************************************
.*                              UPDI0000               Called by: ML0000   *
.*                         update fields for iba screen 2                  *
.*************************************************************************** 
.  
UPDI0000  WRITAB    CONTROLF,THIRTY4;*166,PRCNGLIN,PRCNGLPA,*197,PRCNHRHF:
                                     *198,PRCNRUDF,*199,PRCNAFEE
          DISPLAY   *P60:24,*EL,*V2LON,"*** Posted ***",*W2;
UPDI9999  RETURN
+
.***************************************************************************
.*                              UPDJ0000               Called by: ML0000   *
.*                         update fields for iba special screen 1          *
.*************************************************************************** 
.  
UPDJ0000  WRITAB    CONTROLF,THIRTY3;*200,PRCNRDOC
          WRITAB    CONTROLF,THIRTY4;*187,PRCNGENB
          DISPLAY   *P60:24,*EL,*V2LON,"*** Posted ***",*W2;
UPDJ9999  RETURN
+
.******************************************************************************
.         standard Yes/No keyin
.******************************************************************************
KYNO0000  MOVE      ONE,EXIT
          MOVE      YES,CCITEMD
          KEYIN     *PCCOL:CVERT,"_  ",*PCCOL:CVERT,*V2LON,ANS;
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS
          GOTO      KYNO9995 IF EQUAL       * Yes
          MOVE      ZERO,EXIT
          MOVE      NO,CCITEMD
.
          MATCH     ANSN,ANS
          GOTO      KYNO9995 IF EQUAL       * No
          BEEP
          GOTO      KYNO0000
.
KYNO9995  DISPLAY   *PCCOL:CVERT,*V2LON,CCITEMD;
KYNO9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       FMSSTDCD                * Standard FMS routines
          INC       FMSLMAKY
          INC       FMSAMAKY
.
          INC       AUTOPCOD                * Auto generation of the postcode
          INC       IBASECUR                * Keyin IBA screen security passwd
          INC       IBATMHKY
          INC       PATINSDS
          INC       IBAGSTKY
          INC       IBAGKIKY
          INC       TFILENAM
.
          INC       IBAGSTIO/INC
          INC       IBASEQIO/INC
          INC       FMSAMAIO/INC
          INC       FMSLMAIO/INC
          INC       IBATMHIO/INC
          INC       PATIN1IO/INC
          INC       PATCODIO/INC
          INC       WEBERRIO/INC
