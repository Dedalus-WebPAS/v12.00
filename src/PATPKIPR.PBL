.------------------------------------------------------------
.  File          :  PATPKIPR.PBL
.
.  Function      :  Update Keyword Index File for Eclipse Participant Table
.
.  Parameters    :  PTPRCODE - Key to waiting list procedure 
.
.  Modifications :
.
.  Notes
.  -----
.  This Skeleton Routine is to Create a Procedure to Update
.  a Key Word Index Table that can be used for searching 
.  Masterfiles. The procedure should be called from the 
.  Add, Update and Delete functions in the Masterfile 
.  Maintenance Function.
.  
.  A Key Word Index Table is Defined in the following Manner
.                              
.  PTPKCODE    DIM       3     * Procedure Code
.  PTPKKKWD    DIM       50    * Key Word
.  PTPKSPAR    DIM       50    * Spare
.
.  Index 1   PTPKCODE, PTPKKKWD
.  Index 2   PTPKKKWD, PTPKCODE
.
.  To convert this Procedure the following should be performed
.    Global Change PAT to the System ID eg :%s/PAT/PAT/g
.    Global Change CKI to the File   ID eg :%s/CKI/CKI/g
.    Global Change PTDK to the IO Call ID eg :%s/PTDK/PTDK/g
.    Modify the KEYINDEX defintion to combined Code Field Lengths eg 6
.    Global Change KEY21 to the Key for the Key Word Table eg KEY21
.    Change xxxxxxx to the Code Fields eg DCODEhh
.    Change the WPGE0000 routine to call the HCPBW000 for each
.    string of key words to be indexed for the Coded Field
.    eg MOVE    DSNAME,KEYWORDS
.       CALL    HCPBW000
.------------------------------------------------------------
          DEFPROC   PATPKIUP
.
          INC       PATPKIFD/INC
.
KEYINDEX  DIM       3         * Code Index in Table
KEYWORDS  DIM       60        * String Containing the Key Words to be Indexed
SIXTY     FORM      "60"
KEYWRDNO  FORM      2
KEYWRD00  DIM       60
KEYWRD01  DIM       50
KEYWRD02  DIM       50
KEYWRD03  DIM       50
KEYWRD04  DIM       50
KEYWRD05  DIM       50
KEYWRD06  DIM       50
KEYWRD07  DIM       50
KEYWRD08  DIM       50
KEYWRD09  DIM       50
KEYWRD10  DIM       50
.------------------------------------------------------------
. Generate Word Index
.------------------------------------------------------------
WPGE0000  MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     PATPKIA1,"patpkiaf"
          TRAPCLR  IO
          BRANCH   OVRCD,WPGE9999
.
          MOVE     PTPRCODE,KEYINDEX
          CALL     PTRCL000           * Remove Current Key Word Index
          BRANCH   EXIT,WPGE9999
.
          MOVE     PTPRCODE,KEY3          * Validate Record on File
          CALL     RDPTPAR1 
          BRANCH   OVRCD,WPGE1900     * If Not then it Must be a Delete/Clear
.
          MOVE     PTPRCODE,KEYINDEX
          MOVE     PTPRCODE,KEYWORDS
          CALL     PATPW000
.
          MOVE     PTPRCODE,KEYINDEX
          MOVE     PTPRNAME,KEYWORDS
          CALL     PATPW000
.
WPGE1900  CLOSE    PATPKIA1
.
WPGE9999  GOTO     PATPKIEP
.------------------------------------------------------------
. Clear Current Key Words
.------------------------------------------------------------
PTRCL000  PACK     KEY53,KEYINDEX,SP70
          CALL     RSPTPKI1
          CALL     RKPTPKI1
          BRANCH   OVRCD,PTRCL999
          MATCH    KEYINDEX,PTPKCODE 
          GOTO     PTRCL999 IF NOT EQUAL
.
          PACK     KEY53,PTPKCODE,PTPKKKWD,SP70
          CALL     DEPTPKI1
          GOTO     PTRCL000
.
PTRCL999  RETURN
.-------------------------------------------------
. Determine Words to Index
.-------------------------------------------------
PATPW000  CMATCH    SP1,KEYWORDS             * Eliminate leading blanks
          IF        @EQUAL
            BUMP      KEYWORDS
            GOTO      PATPW000 IF NOT EOS
            GOTO      PATPW999               * entire name if blank
          ENDIF
          PACK      KEY60,KEYWORDS,SP30      * reset form pointer
          MOVE      KEY60,KEYWORDS
.
          SCAN      SP1,KEYWORDS             * Locate the first blank
          GOTO      PATPW100 IF NOT EQUAL
          BUMP      KEYWORDS,-1              * go back 1 to end of name
          MOVEFPTR  KEYWORDS,CCITEM          * another handly form field
          RESET     KEYWORDS                 * reset the form pointer
          SETLPTR   KEYWORDS,CCITEM          * set logical length to end of name
.
.         Save this Word
.
PATPW100  MOVE      KEYWORDS,KEY50
          PACK      KEY50,KEY50,SP70
          REP       UPPLOW,KEY50             * Always Upper Case
          PACK      KEY53,KEYINDEX,KEY50
          UNPACK    KEY53,PTPKCODE,PTPKKKWD
          CALL      RDPTPKI1
          IF        OVRCD=1
            CALL      WRPTPKI1
          ENDIF
          GOTO      PATPW190
.
.         Check for any more words
.
PATPW190  SETLPTR   KEYWORDS,SIXTY         * reset logical length
          ADD       ONE,CCITEM             * position of 1st blank
          RESET     KEYWORDS,CCITEM        * reset to this point
          PACK      KEY60,KEYWORDS,SP30    * reset form pointer
          MOVE      KEY60,KEYWORDS
          GOTO      PATPW000
.
PATPW999  RETURN
.
          INC       PATPKIIO/INC
          INC       IBAOVRIO/INC
.
PATPKIEP  ENDPROC                          * End of Procedure
.
