.******************************************************************************
.* System    :  PRIVATE PRACTICE                                              *
.* Program   :  IBAPRI19                                                      *
.* Desc      :  Fees Invoiced Report                                          *
.******************************************************************************
.* Date      :  30/09/91                                                      *
.* Author    :  Stephen Armstrong                                             *
.* Function  :  Print a report of fees invoiced, fees to be invoiced,         *
.*              cash received, journals and merchant transactions for         *
.*              a given financial year                                        *
.*              NB. Merchant cards (Paid, Commission and Journals) not        *
.*                  currently used in private practice but are included       *
.*                  in the report in case they are to be used in future       *
.* Mods      :                                                                *
.*                                                                            *
.******************************************************************************
.* V12.00.02 22/09/2025  J.Tan            TSK 0966921                         *
.*           Mod to remove tempfiles                                          *
.* V12.00.01 27/08/2025  Alina Bhari      TSK 0954453                         *
.*           Recompiled for PRIINVHL - Added Patient Name                     *
.* V11.05.01 04/02/2025  Peter Vela       TSK 0939466                         *
.*           Recompiled for PRIINVPR - Added Distance In kms                  *
.*           Eclipse WebServices DVAW                                         *
.* V11.04.01 09/07/2024  J.Tan            TSK 0934944                         *
.*           Mod to check Referral Provider no from a linked Practice         *
.* V11.03.04 08/11/2023  Nikitha B      TSK 0927699c                          *
.*           Read CAPPRVNO and PTCNHABN for Hospital Approval and ABN number. *
.* V11.03.03 04/10/2023  Nikitha B     TSK 0927699                            *
.*           Recomplied for PRIINVHL, PRIINVTL - Stationary variables         *
.* V11.03.02 20/04/2023   J.Tan           TSK 0930141                         *
.*           Mod to read PRCNNRND - rounding                                  *
.* V11.03.01 03/04/2023 J.Tan          TSK 0847250                            *
.*           Recompiled for PRIINVPR - Updating PP Unreconciled invoice       *
.* V11.01.03 24/08/2021   Davin           TSK 0897318                         *
.*           Recompiled for PRIINVTL - added field 51 (Adjustment Total)      *
.* V11.01.02 20/07/2021   J.Tan           TSK 0908902                         *
.*           Recompiled for PRIINVPR - printing Insurance for multi pages inv.*
.* V11.01.01 29/04/2021  Tracey Nguyen    TSK 0308555                         *
.*           Recompiled for PRIINVPR                                          *
.* V11.00.07 11/11/2020  Peter Vela       TSK 0898361                         *
.*           Recompiled for PRIINVPR                                          *
.* V11.00.06 20/10/2020  Peter Vela       TSK 0898361                         *
.*           Recompiled for PRIINVPR                                          *
.* V11.00.05 24/04/2020  Peter Vela       TSK 0874025                         *
.*           Recompiled for PRIINVPR                                          *
.* V11.00.04 22/04/2020  Peter Vela       TSK 0874025                         *
.*           Recompiled for PRIECTFD                                          *
.* V11.00.03 17/04/2020 Peter Vela      TSK 0874025                           *
.*           Recompiled for PRIECTFD                                          *
.* V11.00.02 15/04/2020 Thanh T         TSK 0879163                           *
.*           Added SEXDSP00                                                   *
.* V11.00.01 11/03/2020  J.Tan          TSK 0838262                           *
.*           Added Effective from and to date to MBS Item file                *
.******************************************************************************
.* V10.14.04 20/08/2019  Thanh T.      TSK 0879967                            *
.*           Recompiled for PRIINVPR changes                                  *
.* V10.14.03 23/04/2019  Peter Vela    TSK 0871522                            *
.*           Recompiled for PRIINVPR                                          *
.* V10.14.02 22/03/2019  J.Tan            TSK 0857392                         *
.*           Changed RCP Transaction count from DIM3 to DIM5                  *
.* V10.14.01 06/02/2019  Peter Vela    TSK 0870096                            *
.*           Recompiled for PRIINVPR                                          *
.******************************************************************************
.* V10.13.03 21/11/2018  Peter Vela    TSK 0866770                            *
.*           Recompiled for PRIINVPR                                          *
.* V10.13.02 02/11/2018  Peter Vela    TSK 0863035                            *
.*           Recompiled for PRIINVPR                                          *
.* V10.13.01 03/08/2018  Richa Phogat  TSK 0848506                            *
.*           Updated keylength for RDPRDO1, RSPRFG1, RDPRFG1, RKPRFG1, RSPRFN1*
.*           Changed DIM23 to DIM27                                           *
.*           Extended keylength for CRDNCODE from 24 to 28, SKEY39 from 35 to *
.*           39, FINCODE from 24 to 28, DOCT1 from 6 to 10, DOCT2 from 6 to 10*
.*           Changed KEY9A to KEY13A, SKEY7 to SKEY11, SKEY35 to SKEY39       *
.* V10.12.01 26/04/2018  Peter Vela    TSK 0852811                            *
.*           Recompiled for PRIINVTL                                          *
.* V10.11.03 06/09/2017  J.Tan         TSK 0821057                            *
.*           Recompiled for PRIINVHL - mod to variable 76 health fund         *
.* V10.11.02 28/07/2017  Peter Vela    TSK 0837619                            *
.*           Recompiled for PRIINVPR                                          *
.* V10.11.01 28/07/2017  Peter Vela    TSK 0837619                            *
.*           Recompiled for PRIINVPR                                          *
.* V10.10.01 10/05/2017  Tracey Nguyen TSK 0837929                            *
.*           Recompiled for PRIINVHL and PRIINVTL - Fixed I*C error message   *
.*           on PATMESG1                                                      *
.* V10.08.03 22/06/2016  Peter Vela    TSK 0294177                            *
.*           Recompiled for PRIINVPR                                          *
.* V10.08.02 09/06/2016  Peter Vela    TSK 0820206                            *
.*           Recompiled for PRIINVHL                                          *
.* V10.08.01 07/04/2016  Peter Vela    CAR 0294177                            *
.*           Recompiled for PRIINVPR                                          *
.* V10.06.01 15/05/2015  Davin         CAR 310155                             *
.*           Recompiled for PATGBCRN - added MOD10V05 for BPAY                *
.* V10.05.01 24/07/2014  J.Tan         CAR 303627                             *
.*           Added HSYS1=4 G/L Interface comma delimeted file                 *
.* V10.04.10 16/06/2014  Peter Vela    CAR 302147                             *
.*           Recompiled for PRIINVPR                                          *
.* V10.04.09 13/06/2014 Jill Parkinson CAR 301639                             *
.*           Moved TFILENAM calls to INIT0000 for FNAME2 and FNAME3           *
.* V10.04.08 17/04/2014  Peter Vela    CAR 285260                             *
.*           Recompiled for PRIINVPR - Moved Cabrini invoice tail one line    *
.*           down in PRINV230                                                 *
.* V10.04.07 15/04/2014  J.Tan         CAR 261630                             *
.*           Removed port number from temp file name                          *
.* V10.04.06 15/04/2014  Peter Vela    CAR 285260                             *
.*           Recompiled for PRIINVPR                                          *
.* V10.04.05 14/04/2014  Peter Vela    CAR 285260                             *
.*           Recompiled for PRIINVPR                                          *
.* V10.04.04 11/04/2014  Peter Vela    CAR 285260                             *
.*           Recompiled for PRIINVPR                                          *
.* V10.04.03 31/03/2014  Peter Vela    CAR 285260                             *
.*           Recompiled for PRIINVPR                                          *
.* V10.04.02 05/04/2014  J.Tan         CAR 298195                             *
.*           Replaced PRIINVVR with PRIWEBVR                                  *
.* V10.04.01 17/12/2013  J.Tan         CAR 295387                             *
.*           Fixed I*C on prifmsaf file                                       *
.* V10.03.10 09/12/2013  J.Tan         CAR 280726                             *
.*           Recompiled for PRIINVPR - flag for Inpatients from Other hospital*
.* V10.03.09 05/07/2013  J.Tan         CAR 288042                             *
.*           Recompiled for PRIINVPR - Fixed WEBFLAG                          *
.* V10.03.08 20/06/2013  Davin         CAR 287161                             *
.*           Recompiled for PATGBCRN - right justify ptcnhbpi                 *
.* V10.03.07 18/07/2012  Don Nguyen    CAR 264561                             *
.*           Recompiled for PATGBCRN                                          *
.* V10.03.06 06/06/2012 J.Tan          CAR 266609                             *
.*           Mods for GST G/L transfer                                        *
.* V10.03.05 09/05/2012 J.Tan          CAR 222041                             *
.*           Recompiled for PRIINVPR - checking for range of Medical Prac     *
.* V10.03.04 19/01/2012  J.Tan             CAR 258480                         *
.*           Mods HEA G/L - to group journals                                 *
.* V10.03.03 13/01/2012  J.Tan             CAR 258480                         *
.*           Mods HEA G/L - to include journal code as well as description    *
.* V10.03.02 02/12/2011  J.Tan             CAR 237800                         *
.*           Mods to do Reset for range of Medical Practice                   *
.* V10.03.01 23/11/2011  J.Tan             CAR 252423                         *
.*           Mods to group Items by set codes for G/L extract                 *
.* V10.02.02 14/09/2011  J.Tan             CAR 251027                         *
.*           Mods to execute us1 and us2 scripts                              *
.* V10.02.01 17/05/2011  Saroeun Soeur     CAR 237800                         *
.*           added REST0000 - ML2100 and ML2200 to reset then print           *
.* V10.01.02 03/02/2011 Jill Parkinson CAR 233088                             *
.*                  Added pmsvx1af                                            *
.* V10.01.01 21/12/2010  Mike Laming   CAR 233046                             *
.*           Mods to Misc.Charges PATMCHFD - Key change, logic changes        *
.* V10.00.06 08/09/2010  J.Tan             CAR 229506                         *
.*           Mods to print Medical practice description on the header         *
.*           13/09/2010  J.Tan             CAR 229586                         *
.*           Fixed printing GST                                               *
.*           14/09/2010  Davin             CAR 229590                         *
.*           Recompiled for PRIINVTL                                          *
.* V10.00.05 26/08/2010  Davin             CAR 226963                         *
.*           Recompiled for PRIINVHL & PRIINVTL                               *
.* V10.00.04 24/08/2010  Peter Vela CAR 221500                                *
.*           Recompiled for PRIINVTL                                          * 
.* V10.00.03 05/08/2010  J.Tan     CAR 225163                                 *
.*           Mods to include all 'Tobe Invoiced' data from previous years     *
.* V10.00.02 30/04/2010  J.Tan     CAR 220887                                 *
.*           Mods checking for Active/Inactive of Misc.charge                 *
.* V10.00.01 15/04/2010  J.Tan          CAR 216863                            *
.*           Fixed resetting selected range of medical practices              *
.* V9.12.06  09/12/2009  Mike Laming    CAR 210835                            *
.*           Recompiled for PRIINVPR                                          *
.* V9.12.05  29/10/2009  Peter Vela     CAR 207175                            *
.*           Recompiled for PRIINVPR                                          *
.* V9.12.04  01/10/2009  Peter Vela     CAR 203243                            *
.*           Recompiled for PRIINVHL                                          *
.* V9.12.03  03/09/2009  Peter Vela     CAR 194715                            *
.*           Recompiled for PRIINVHL PRIINVTL                                 *
.* V9.12.02  07/08/2009  Mike Laming    CAR 123419                            *
.*           Recompiled for PRIINVPR - re-write PATHL000, Add PRIHTRaf 4th Indx
.* V9.12.01  23/07/2009  J.Tan          CAR 200230                            *
.*           Recompiled for PRICALFN - fixed generating previous year data    *
.* V9.11.05  22/04/2009  J.Tan            CAR 178015                          *
.*           Mods to initialise CRDNFLAG for TOBE Invoiced section            *
.* V9.11.04  23/09/2009  Davin            CAR 178015                          *
.*           Recompiled for PRIINVTL - Added field 33 for BPAY CRN (Generated)*
.*           Added VARGBCRN and PATGBCRN - BPAY Reference Number              *
.* V9.11.03  29/01/2009  J.Tan             CAR 171701                         *
.*           Fixed printing GST                                               *
.* V9.11.02  08/01/2009  Steve Armstrong   CAR 185927                         *
.*           Recompiled for changes to PRIINVPR & PRIINVVR.                   *
.*           08/01/2009 J.Tan      CAR 178415                                 *
.*           Added Medical Practice to prifinsf                               *
.* V9.11.01  01/12/2008  Steve Armstrong   CAR 184702                         *
.*           Recompiled for changes to PRIINVHL & PRIINVTL.                   *
.******************************************************************************
.* V9.10.01  12/05/2008  J.Tan         CAR 162313                             *
.*           Added Deposit Status to compdeaf file                            *
.******************************************************************************
.* V9.08.03  14/05/2007  Peter Vela    CAR 136586                             *
.*           Recompiled for PRIINVPR = Added provider number and referral per *
.* V9.08.02  29/03/2007  J.Tan         CAR 136149                             *
.*           Mods to use default claim code from system parameter             *
.* V9.08.01  28/09/2006  Peter Vela    CAR 118366                             *
.*           Recompiled for PRIINVHL - Added medicare suffix                  *
.******************************************************************************
.* V9.06.01  28/04/2006  Peter Vela    CAR 102393                             *
.*           Recompiled for PRIINVHL - Added PRFA variables from PRIINVFD     *
.******************************************************************************
.* V9.05.02  27/03/2006  Peter Vela    CAR 95780                              *
.*           Recompiled for PRIINVHL - Added emg mobile contact numbers       *
.* V9.05.01  27/03/2006  Peter Vela CAR 61299                                 *
.*           Recompiled for PRIINVHL                                          *
.******************************************************************************
.* V9.04.07  06/10/2005  J.Tan    CAR 79018                                   *
.*           Recompiled for PRIINVPR - fixing item amount                     *
.* V9.04.06  03/08/05 J.Tan    CAR 62750                                      *
.*           Removed redefined amount variables                               *
.* V9.04.05  16/06/2005  J.Tan    CAR 56701                                   *
.*           Recompiled for PRIINVPR - HIC item invoice file                  *
.* V9.04.04  01/04/2005  J.Tan    CAR 60117                                   *
.*           Changed field for INVNAME,TBINAME to DIM 80 and added '.txt'     *
.* V9.04.03  24/01/2005  J.Tan    CAR 57052                                   *
.*           Mods to use the receipting FMS Batch directory                   *
.* V9.04.02  24/06/2004  J.Tan    CAR 55893                                   *
.*           Recompiled for PRIINVPR - fixed west wimmera invoice layou       *
.* V9.04.01  30/08/2004  J.Tan    CAR 53825                                   *
.*           Added RCPREGFD                                                   *
.******************************************************************************
.* V9.03.08  29/06/2004  Lina Vo  CAR 50811                                   *
.*           Removed use of RCPTRNFD & IO.                                    *
.* V9.03.07  24/06/2004  J.Tan    CAR 50235                                   *
.*           Recompiled for PRIINVPR - non bank deposit                       *
.* V9.03.06  01/04/2004  J.Tan    CAR 44116                                   *
.*           Added credit notes                                               *
.* V9.03.05  02/03/2004  Lina Vo    CAR 47921                                 *
.*           Removed use of PRIDBTFD & IO.                                    *
.* V9.03.04  29/01/2004  J.Tan                                                *
.*           Recompiled for PRIINVPR - removing pridep                        *
.* V9.03.03  17/12/2003  J.Tan      CAR 44093                                 *
.*           Mods to use comdep for deposit                                   *
.* V9.03.02  29/10/2003 Sandra Barcham   43783                                *
.*           Recompiled for NZHISIIO and NZHISIUP                             *
.* V9.03.01  17/09/2003  Lina Vo      CAR 40497                               *
.*           Changed index and read of patmchgf to include effective          *
.*           date.                                                            *
.******************************************************************************
.*        V9.02.21  13/02/2003  Dean Cramer  CAR 22238                        *
.*                  Recompiled for RCPTRNFD                                   *
.*        V9.02.20  29/11/2002  J.Tan                                         *
.*                  Fixed printing warning for missing G/L interface setup    *
.*        V9.02.19  20/11/2002  Dean Cramer                                   *
.*                  Recompiled for PRIINVPR - RCH PRAs for invoices           *
.*        V9.02.18  06/11/2002  J.Tan                                         *
.*                  Recompiled for PRIKYDEB - merge U/R                       *
.*        V9.02.17  25/10/2002  J.Tan                                         *
.*                  Recompiled for PRIINVPR - fixed displaying o/s amount     *
.*        V9.02.16  21/10/2002  J.Tan                                         *
.*                  Recompiled for PRIINVTL - outstanding amount              *
.*        V9.02.15  04/07/2002  Dean Cramer                                   *
.*                  Recompile for PRIINVPR                                    *
.*        V9.02.14  03/07/2002  J.Tan                                         *
.*                  Mods not to clear G/L file for print only                 *
.*        V9.02.13  19/06/2002  J.Tan                                         *
.*                  Recompiled for PRIINVVR & PRIINVIT                        *
.*        V9.02.12  27/05/2002  J.Tan                                         *
.*                  Recompiled for PRIINVHL - Added patient indicator         *
.*        V9.02.11  17/05/2002  J.Tan                                         *
.*                  Fixed printing item code                                  *
.*        V9.02.10  08/03/2002  J.Tan                                         *
.*                  Recompiled for PRIINVHL - Added claim code                *
.*        V9.02.09  28/03/2002  J.Tan                                         *
.*                  Journals to use prifms for G/L interface Income percentage*
.*        V9.02.08  12/03/2002  J.Tan                                         *
.*                  Mods not to open fms file if not using FMS system         *
.*        V9.02.07  29/02/2002  J.Tan                                         *
.*                  Fixed calculating the percentage amount                   *
.*        V9.02.06  28/02/2002  J.Tan                                         *
.*                  Fixed Income percentages with more than 100%              *
.*        V9.02.05  27/02/2002  J.Tan                                         *
.*                  Fixed Income percentages with more than 100%              *
.*        V9.02.04  07/02/2002  J.Tan                                         *
.*                  Recompiled for PRIINVPR - Doctor Income percentage        *
.*        V9.02.03  10/01/2002  J.Tan                                         *
.*                  Recompiled for PRIINVIT - Changed key for tempfile        *
.*        V9.02.02  02/10/2001  J.Tan                                         *
.*                  Mods to use PMSHCPFD instead of PATDO1FD                  *
.*        V9.02.01  17/09/2001  Greg Horvat      SRF 12961                    *
.*                  Fixed a bug which stopped cash received & journals from   *
.*                  printing after printing the fees generated GST amounts    *
.*        V5.10.B01 12/04/2001  Glenn Saunders                                *
.*                  Remove all references to PATSUR file (old surname file).  *
.*        V5.09.B02 18/12/2000  Caleb Sharman  SRF 3999 & 6449                *
.*                  Mods at FTTL7000 to seperate GST amounts                  *
.*        V5.09.B01 15/12/2000  Sandra Barcham                                *
.*                  Changed file from fmspataf to patfmsaf                    *
.*                  Added write of BAS Code to interface file                 *
.******************************************************************************
. * V5.08.10  15/09/2000  Davin  SRF 4964                              *
. *           Recompiled for PRIINVHL - invoice indicator              *
. * V5.08.09  16/08/2000  Caleb Sharman                                *
. *           Changed Health Fund variables to be 8 chars              *
. * V5.08.08  15/08/2000  Davin  SRF 4106                              *
. *           Recompiled for PRIINVPR - templated tail for multipage   *
. * V5.08.07  02/08/2000  J.Tan                                        *
. *           Recompiled for PRIINVPR - form feed                      *
. * V5.08.06  03/07/2000  Steve Downing                                *
. *           Recompiled for PRIINVPR                                  *
. * V5.08.05  09/06/2000  J.Tan                                        *
. *           GST amount to income account instead of GST control acct.*
. *           21/06/2000  Davin                                        *
. *           Recompiled for PRIINVPR - added invoice templating       *
. *           29/06/2000  Steve Armstrong                              *
. *           Recompiled for changes to PRICALFS (PATFIGFD)            *
. * V5.08.04  06/06/2000  Tonii                                        *
. *           Changed from KEY10 to KEY14 for the health fund file     *
. * V5.08.03  17/05/2000  J.Tan                                        *
. *           Recompiled for PRIINVPR - invoice on landscape           *
. * V5.08.02  05/05/2000  J.Tan                                        *
. *           Recompiled for PRIDOCT file                              *
. * V5.08.B02 21/03/2000  J.Tan                                        *
. *           Mods for GST                                             *
. * V5.08.B01 25/02/2000  Greg Horvat                                  *
. *           Removed OUTADJFD OUTADJIO PATMMRFD PATMMRIO & PRIPRADJ   *
. * V5.07.08  24/11/1999  J.Tan                                        *
. *           Recompiled for PRIINVPR - set PRDTSERV to one for cash   *
. * V5.07.07  18/10/1999  Steve Armstrong                              *
. *           Recompiled for tempfile index changes to PRIINVPR/PRIINVR*
. * V5.07.06  15/10/1999  D.Di Paola                                   *
. *           Recompiled for PRISPTFD and PRIITMFD                     *
. * V5.07.05  12/10/1999  J Habasque                                   *
. *           Recompiled for PRIHRTFD & PRIBULFD                       *
. * V5.07.04  02/07/1999  J.Tan                                        *
. *           Recompiled for PRIINVPR for private practice receipt no. *
. * V5.07.03  22/06/1999  Jill Habasque                                *
. *           Recompiled for PRISTAIO                                  *
. * V5.07.02  09/06/1999  Greg Horvat                                  *
. *           Recompiled for PRIINVIO - Fixed problem with direct read *
. *           Jill Habasque - Recompiled for PRIINVS srf 632328        *
. * V5.07.01  07.06.1999  J.Tan                                        *
. *           Fix 31241 I * L on prifinsf                              *
. * V5.05.02  11/12/1997  Nick   SRF 623274                            *
. *           Recompiled for PRIINVPR                                  *
. * V5.05.01  30/09/1997  Steve Armstrong        WWH                   *
. *           Mods for pri/general ledger interface                    *
. *           Removed ARS related code for G/L Interface               *
. **********************************************************************
. * V6.04.01  06/12/1996  Greg Horvat                                  *
. *           Recompiled for PRIINVPR - Changed some include labels    *
. **********************************************************************
. * V6.03.B1  18/03/1995  Graeme Williams   R6.03 enhancements         *
. *           Added PRISPTFD and PRIEXCFD.                             *
. * V6.03.B2  01/05/1995  Greg Horvat      SRF 135684                  *
. *           Recompiled for PRIINVPR                                  *
. * V6.03.B3  02/05/1995  Gabrielle       Mt Wilga                     *
. *           Changed description of St Edmunds invoice layout to      *
. *           Alpha, removed printing the heading description from     *
. *           either controlf of pripracf file using prcnaddr param.   *
. * V6.03.B4  02/05/1995  Gabrielle   SRF 133213                       *
. *           Removed "Hit <ENTER>..." message when displaying invoice *
. *           layouts that go over a screen                            *
. * V6.03.05  26/06/1995  Paul Howells     SRF 610111                  *
. *           Recompiled for PRIINVPR.                                 *
. * V6.03.06  06/10/1995  Steve Armstrong                              *
. *           Recompiled for PRIINVPR, PRIKYDEB & PRIVRDEB             *
. * V6.03.07  18/10/1995  Steve Armstrong                              *
. *           Recompiled for PRIINVPR                                  *
. * V6.03.08  28/10/1995  Steve Armstrong   SRF 612041                 *
. *           Recompiled for PRIINVPR                                  *
. * V6.03.09  06/11/1995  Steve Armstrong   SRF 612041                 *
. *           Recompiled for PRIINVPR                                  *
. * V6.03.10  29/11/1995  Greg Horvat      SRF 612884                  *
. *           Recompiled for PRIINVPR - Changed Lingards invoice layout*
. * V6.03.11  18/12/1995  Greg Horvat      SRF 612884 (Rebound)        *
. *           Recompiled for PRIINVPR - Changed Lingards invoice layout*
. * V6.03.12  22/12/95 J.Tan     SRF 613313                            *
. *           Recompiled for PRIINVPR - Print message on Lingards layou*
. * V6.03.13  16/02/1996  Greg Horvat      SRF 613933                  *
. *           Changed to display to be invoiced deposits on the report *
. * V6.03.14  27/02/1996  Greg Horvat                                  *
. *           Changed to calculate the previous year totals when       *
. *           processing to be invoiced deposits                       *
. *           29/02/1996  Greg Horvat      SRF 614008                  *
. *           Recompiled for PRIINVPR - not updating prifinsf & pristat*
. *           properly when printing deposits                          *
. * V6.03.15  07/03/1996  Greg Horvat      SRF 614378                  *
. *           Recompiled for PRIINVPR - Changed Lingards invoice layout*
. * V6.03.16  12/03/1996  Greg Horvat      SRF 614473                  *
. *           Recompiled for PRINNVPR - Changed Lingards invoice layout*
. * V6.03.17  14/03/1996  Greg Horvat      SRF 614472                  *
. *           - Changed to print to be invoiced deposits if there are  *
. *             deposits & if there are no other to be invoiced details*
. *           - Found & fixed a problem when accumulating to be invoice*
. *             deposits totals for the same period                    *
. * V6.03.18  25/03/1996  Greg Horvat      SRF 614592                  *
. *           Recompiled for PRIINVPR - Changed Lingards invoice layout*
. * V6.03.19  03/04/1996  Greg Horvat      SRF 614592 (Rebound)        *
. *           Recompiled for PRIINVPR - Changed Lingards invoice layout*
. * V6.03.20  10/05/1996  Greg Horvat      SRF 615220                  *
. *           Recompiled for PRIINVPR - Changed Lingards invoice layout*
. * V6.03.21  31/05/1996  Greg Horvat      SRF 615220 (Rebound)        *
. *           Recompiled for PRIINVPR - Changed Lingards invoice layout*
. * V6.03.22  10/11/1996  Greg Horvat      SRF 617359                  *
. *           Recompiled for PRIINVPR - Changed to write the medicare  *
. *           assign form number from the hold DTR file to the DTR file*
. *                                                                    *
. **********************************************************************
.
.$$$$$
.         Fees Invoiced Report Program (IBAPRI19)
.         ---------------------------------------
.
.         ML0000
.         Initialisation and open files
.         pridtraf
.         priitemf
.         prifinsf
.         patdrgaf
.         patitemn
.         patmchgf
.         patcodes
.         patfn1af
.         patin1af
.         controlf
.
.         ML0100
.         Get user option
.           If zero input, end program
.           If valid option input, proceed to get current financial year
.
.         ML1000
.         Get current financial year and fees invoiced "from" date from
.           control file
.           If current date not found in date range period file, return
.             to get next option
.           If valid financial year, proceed to set up period headers
.
.         Set up period headers for the current financial year
.
.         ML1500
.         Get financial year for report
.
.         Get confirmation of printout
.           If (Y)es input, proceed to print section
.           If (N)o input, return to get financial year
.           If (Y)es input, return to get next option
.
.         ML2000
.         Read through financial summary file for "fees invoiced" records
.           and print data
.         Read through financial summary file for "cash received" records
.           and print data
.         Read through financial summary file for "journals" records
.           and print data
.         Print summary of above, and set up for next print section
.
.         If financial year of report is not current financial year, ignore
.           to-be-invoiced records
.         Read through to-be-invoiced records and print data
.         Print summary of to-be-invoiced records, and set up for next print 
.           section
.
.         Read through financial summary file for merchant card transactions
.           and print data 
.         Print summary of merchant card transactions, then end print
.         If reset option selected, reset fees invoiced "from" date in
.           control file
.
.         Return to get next option
.
.         ML9999
.         Chain back to calling program
.
.$$$$$
+

          INC       STD001FD
          INC       PATCOMM/INC
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
          INC       BOKRC1FD/INC
          INC       PRIFMSFD/INC                 * FMS - PRI interface file
          INC       IBAGEDFD/INC
          INC       IBAGINFD/INC
          INC       IBAPRNFD/INC
          INC       IBATMDFD/INC
          INC       IBATMHFD/INC
          INC       OUTPREFD/INC
.
          INC       FMSLMAFD/INC
          INC       PATCONFD/INC                 * control file
          INC       PATCODFD/INC                 * codes file
          INC       PMSHCPFD/INC                 * doctor file
          INC       PMSHCLFD/INC
          INC       PMSPX2FD/INC                                   
          INC       PATDRGFD/INC                 * date range file
          INC       PATFN1FD/INC                 * health fund file 
          INC       PATGSRFD/INC                 * Surname / Given Name File
          INC       PATIN1FD/INC                 * insurance file
          INC       PATITMFD/INC                 * MBS item file 
          INC       PATMA1FD/INC                 * patient master file
          INC       PATMCHFD/INC                 * miscellaneous charges file
          INC       PATMI1FD/INC                 * admission file
          INC       PMSVX1FD/INC                 * admission file
          INC       PATMESFD/INC                 * message file
          INC       PATPERFD/INC                 * doctor personal file
          INC       PATPR1FD/INC                 * pre-admission file
          INC       PATRE1FD/INC                 * PRA file            
          INC       PATVISFD/INC                 * visit file
.
          INC       PRIPCEFD/INC                 * Income Percentage
          INC       PRIAUIFD/INC
          INC       PRIBULFD/INC                 * bulk billing file
          INC       PRICONFD/INC                 * pp control file
          INC       PRICNOFD/INC
          INC       PRIDOCFD/INC                 * practice doctor file
...          INC       PRIDBTFD/INC                 * debtor file
          INC       PRIDTRFD/INC                 * debtor transaction file
          INC       PRIEXCFD/INC
          INC       PRIFIGFD/INC                 * financial stats file
          INC       PRIFINFD/INC                 * financial stats file
          INC       PRIGRPFD/INC                 * item group file
          INC       PRIHDBFD/INC                 * holding header file
          INC       PRIHOLFD/INC                 * account hold file
          INC       PRIHREFD/INC                 * holding referral file
          INC       PRIHTRFD/INC                 * holding transaction file
          INC       PRIHISFD/INC                 * test history file
          INC       PRIINVFD/INC                 * invoice file
          INC       PRIITMFD/INC                 * item file
          INC       PRIMABFD/INC                 * motor acc. board file
          INC       PRIMGPFD/INC                 * medicare gap file     
          INC       PRIMULFD/INC                 * multiple codes file
          INC       PRIPRAFD/INC                 * practice file
          INC       PRISPTFD/INC                 * spec. path. test file
          INC       PRISTAFD/INC                 * financial statistics file
          INC       PRITESFD/INC                 * test file
          INC       PRIVAFFD/INC                 * veteran affairs file
          INC       PRIWCOFD/INC                 * workers comp. file
          INC       PRIALSFD/INC                 * Medical Prac.all user access
          INC       PRIECTFD/INC
          INC       PRISECFD/INC                 * Medical Prac.security access
          INC       RCPBNKFD/INC
          INC       RCPBDTFD/INC
          INC       RCPREGFD/INC
          INC       RCPDTEFD/INC                 * receipt details file
.
          INC       PRIWEBVR/INC                 * variables for PRIINVPR
          INC       PRIVRDEB/INC                 * variables for PRIKYDEB
          INC       HICITIFD/INC                 * HIC items invoice file
.
          INC       COMDEPFD/INC                 * common deposit file
          INC       NZHISIFD/INC                 * NZHIS Variables
          INC       PATALRFD/INC                 * Alerts & Medical Warnings
          INC       NHIMASFD/INC                 * NZHIS Variables
          INC       PATDHEAD/INC                 * PMI Header Details
          INC       PATCALAG/INC                 * PMI Age Calc
          INC       PMIVARS/INC                  * PMI Variables
          INC       SCRPSTFD/INC
          INC       VARGBCRN/INC
.
          INC       PATHSPFD/INC           * Hospital Details for GBCRN000
.
          INC       WEBIMCFD/INC
          INC       WEBB2BFD/INC
+
.
.         TEMPORARY FILE DEFINITION
.         -------------------------
.
TMPFILE3 IFILE     SQL, FIXED=24, KEY="U1-1,2-2,3-5"
.Name    Type     Size    Physical   Start     Description
.----    ----     ----    --------   -----     -----------
XCURSECT   DIM       1       1         1       Current Section
.                                              1 = Section 1 (Inv)
.                                              2 = Section 2 (To be inv)
XSUBFCOD   DIM       1       1         2       Sub-code (N for Credit Note)
.                                                       (J for Journal)
XSETCODE   DIM       3       3         3       Item group
XTTAMITM   FORM     12.2     8         6       Total of Item amount
XISPARE    DIM      10      10         14      Spare
.EOR                                   24
.
.         Filename : PRI19Axx.dat          (xx = port id)
.
FIRTEMP1  IFILE     SQL, FIXED=19, KEY="U1-8"
FIRTEMP2  IFILE     SQL, FIXED=19, KEY="U9-16,17-18,1-8"
.
.NAME     TYPE    LENGTH   PHYSICAL   START       DESCRIPTION
.----     ----    ------   --------   -----       -----------
DTEMPUNQ  DIM       8         8         1         Unique Identifier
TEMPDEB   DIM       8         8         9         Debtor Number
DTEMPSCN  DIM       2         2         17        Scan Flag
.End of Record                          19
.
. Redefine form fields from key
. -----------------------------
TEMPUNQ   FORM      8
TEMPSCN   FORM      2
+
.
.
.         Filename : PTINVGL         (Invoiced - G/L Interface File)
.
PTINVGL   FILE      ASCII, FIXED=120
PTTBIGL   FILE      ASCII, FIXED=120    (To Be Invoiced - G/L Interface File)
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ACCLYR    FORM      8.2                     * period totals for a misc. group
ACCMTH1   FORM      8.2                           
ACCMTH2   FORM      8.2
ACCMTH3   FORM      8.2
ACCMTH4   FORM      8.2
ACCMTH5   FORM      8.2
ACCMTH6   FORM      8.2
ACCMTH7   FORM      8.2
ACCMTH8   FORM      8.2
ACCMTH9   FORM      8.2
ACCMTH10  FORM      8.2
ACCMTH11  FORM      8.2
ACCMTH12  FORM      8.2
ACCMTH13  FORM      8.2
ACCPER    FORM      8.2
ACCYTD    FORM      8.2
.
CATEGORY  DIM       2
CODE      DIM       3
CRDNCODE  DIM       28
.CRDNFLAG  FORM      1
CALCDATE  DATE      8
CASH      FORM      8.2                     * cash total for summary page
CMDLIN1   DIM       40
CMDLIN2   DIM       16
CMDLIN3   DIM       50
CODE1     DIM       3                       * misc. group code
CODE2     DIM       3                       * misc. group code
COMM      FORM      8.2                     * commission total for merchant
.                                             transaction summary page
COUNT     FORM      3                       * counter
COUNTA    FORM      2                       * counter
CURRDATE  DIM       8                       * current date (ccyymmdd)
CURRROW   FORM      3
CRDN      FORM      8.2                     * Credit Note total for summary page
CGST      FORM      8.2                     * GST Cr.Note total for summary page
.
DOCT1     DIM       10                      * Doctor code
DOCT2     DIM       10                      * Doctor code
DEPLYR    FORM      8.2
DEPMTH1   FORM      8.2                           
DEPMTH2   FORM      8.2
DEPMTH3   FORM      8.2
DEPMTH4   FORM      8.2
DEPMTH5   FORM      8.2
DEPMTH6   FORM      8.2
DEPMTH7   FORM      8.2
DEPMTH8   FORM      8.2
DEPMTH9   FORM      8.2
DEPMTH10  FORM      8.2
DEPMTH11  FORM      8.2
DEPMTH12  FORM      8.2
DEPMTH13  FORM      8.2
DEPPER    FORM      8.2
DEPYTD    FORM      8.2
DIM3      DIM       3
DIM4      DIM       4
DIM5      DIM       5
DIM6      DIM       6
DIM8      DIM       8
DIM9      DIM       9                       * for period title
DIM10     DIM       10
DIM13     DIM       13                      * journal/merchant title
DIM14     DIM       14                      * journal description
DIM17     DIM       17                      * journal description
DIM25     DIM       25
DIM28     DIM       28
DIM30     DIM       30
.
FGSTFLAG  FORM      1
FRSTFLAG  FORM      1  
FMSPAT    INIT      "fmspataf"
FEES      FORM      8.2                     * fees total for summary page
FGST      FORM      8.2                     * GST total for summary page
FINCODE   DIM       28                      * financial code
FINTYPE   DIM       1                       * financial type
FLAG1     DIM       2                       * item flag
FLAG2     DIM       2                       * item flag
FORM32    FORM      3.2
FORM32A   FORM      3.2
FORM3     FORM      3
FORM12    FORM      12.2
FROMDATE  DIM       10                      * report "from" date
FSTAMNT   FORM      12.2                    * for PRICALFS
FSTDATE   DIM       8                       * for PRICALFS
FSTWORK   FORM      12.2                    * for PRICALFS
FTLARRY   DIM       3[20]
FTLFLAG   FORM      1
FTLSIZE   FORM      2
FYEAR     DIM       4                       * financial year
.
LEDGER    DIM       2
GSTFLAG   FORM      1
GCASHLYR  FORM      8.2                     * cash grand totals
GCASHM1   FORM      8.2
GCASHM2   FORM      8.2
GCASHM3   FORM      8.2
GCASHM4   FORM      8.2
GCASHM5   FORM      8.2
GCASHM6   FORM      8.2
GCASHM7   FORM      8.2
GCASHM8   FORM      8.2
GCASHM9   FORM      8.2
GCASHM10  FORM      8.2
GCASHM11  FORM      8.2
GCASHM12  FORM      8.2
GCASHM13  FORM      8.2
GCASHPER  FORM      8.2
GCASHYTD  FORM      8.2
GCOMMLYR  FORM      8.2                     * commission grand totals
GCOMMM1   FORM      8.2
GCOMMM2   FORM      8.2
GCOMMM3   FORM      8.2
GCOMMM4   FORM      8.2
GCOMMM5   FORM      8.2
GCOMMM6   FORM      8.2
GCOMMM7   FORM      8.2
GCOMMM8   FORM      8.2
GCOMMM9   FORM      8.2
GCOMMM10  FORM      8.2
GCOMMM11  FORM      8.2
GCOMMM12  FORM      8.2
GCOMMM13  FORM      8.2
GCOMMPER  FORM      8.2
GCOMMYTD  FORM      8.2
.
CFEESLYR  FORM      8.2                     * fees grand totals
CFEESM1   FORM      8.2
CFEESM2   FORM      8.2
CFEESM3   FORM      8.2
CFEESM4   FORM      8.2
CFEESM5   FORM      8.2
CFEESM6   FORM      8.2
CFEESM7   FORM      8.2
CFEESM8   FORM      8.2
CFEESM9   FORM      8.2
CFEESM10  FORM      8.2
CFEESM11  FORM      8.2
CFEESM12  FORM      8.2
CFEESM13  FORM      8.2
CFEESPER  FORM      8.2
CFEESYTD  FORM      8.2
.
CFGSTLYR  FORM      8.2                     * fees grand totals
CFGSTM1   FORM      8.2
CFGSTM2   FORM      8.2
CFGSTM3   FORM      8.2
CFGSTM4   FORM      8.2
CFGSTM5   FORM      8.2
CFGSTM6   FORM      8.2
CFGSTM7   FORM      8.2
CFGSTM8   FORM      8.2
CFGSTM9   FORM      8.2
CFGSTM10  FORM      8.2
CFGSTM11  FORM      8.2
CFGSTM12  FORM      8.2
CFGSTM13  FORM      8.2
CFGSTPER  FORM      8.2
CFGSTYTD  FORM      8.2
.
ENDPRAC   DIM       6
ECCLMARR  DIM       50
.
GFEESLYR  FORM      8.2                     * fees grand totals
GFEESM1   FORM      8.2
GFEESM2   FORM      8.2
GFEESM3   FORM      8.2
GFEESM4   FORM      8.2
GFEESM5   FORM      8.2
GFEESM6   FORM      8.2
GFEESM7   FORM      8.2
GFEESM8   FORM      8.2
GFEESM9   FORM      8.2
GFEESM10  FORM      8.2
GFEESM11  FORM      8.2
GFEESM12  FORM      8.2
GFEESM13  FORM      8.2
GFEESPER  FORM      8.2
GFEESYTD  FORM      8.2
.
GFGSTLYR  FORM      8.2                     * fees grand totals
GFGSTM1   FORM      8.2
GFGSTM2   FORM      8.2
GFGSTM3   FORM      8.2
GFGSTM4   FORM      8.2
GFGSTM5   FORM      8.2
GFGSTM6   FORM      8.2
GFGSTM7   FORM      8.2
GFGSTM8   FORM      8.2
GFGSTM9   FORM      8.2
GFGSTM10  FORM      8.2
GFGSTM11  FORM      8.2
GFGSTM12  FORM      8.2
GFGSTM13  FORM      8.2
GFGSTPER  FORM      8.2
GFGSTYTD  FORM      8.2
GJOURLYR  FORM      8.2                     * journals grand totals
GJOURM1   FORM      8.2
GJOURM2   FORM      8.2
GJOURM3   FORM      8.2
GJOURM4   FORM      8.2
GJOURM5   FORM      8.2
GJOURM6   FORM      8.2
GJOURM7   FORM      8.2
GJOURM8   FORM      8.2
GJOURM9   FORM      8.2
GJOURM10  FORM      8.2
GJOURM11  FORM      8.2
GJOURM12  FORM      8.2
GJOURM13  FORM      8.2
GJOURPER  FORM      8.2
GJOURYTD  FORM      8.2
GJGSTLYR  FORM      8.2                     * journals grand totals
GJGSTM1   FORM      8.2
GJGSTM2   FORM      8.2
GJGSTM3   FORM      8.2
GJGSTM4   FORM      8.2
GJGSTM5   FORM      8.2
GJGSTM6   FORM      8.2
GJGSTM7   FORM      8.2
GJGSTM8   FORM      8.2
GJGSTM9   FORM      8.2
GJGSTM10  FORM      8.2
GJGSTM11  FORM      8.2
GJGSTM12  FORM      8.2
GJGSTM13  FORM      8.2
GJGSTPER  FORM      8.2
GJGSTYTD  FORM      8.2
GOUTLYR   FORM      8.2
GOUTM1    FORM      8.2                     * outstanding grands totals
GOUTM2    FORM      8.2
GOUTM3    FORM      8.2
GOUTM4    FORM      8.2
GOUTM5    FORM      8.2
GOUTM6    FORM      8.2
GOUTM7    FORM      8.2
GOUTM8    FORM      8.2
GOUTM9    FORM      8.2
GOUTM10   FORM      8.2
GOUTM11   FORM      8.2
GOUTM12   FORM      8.2
GOUTM13   FORM      8.2
GOUTPER   FORM      8.2
GOUTYTD   FORM      8.2
.
HSYS1     FORM      1         1         86        General Ledger
.                                                 0=No, 1=Yes(IBA) 2=Yes(Other)
.                                                 3=Yes(Integra)
.                                                 4=Yes(Comma delimited)
HDATARCP  DIM       40                      * FMS Batch Directory
HEADFLG   FORM      1                       * header flag
HEALTHFD  DIM       6
.                                               0 = not a new page header
.                                               1 = new page header
IBCNABNN  DIM       11
IBCNUGST  FORM      1
IBCNUMCI  DIM       1
INVNAME   DIM       80
INVOICEN  FORM      8
ITEM1     DIM       9                       * item number 1
ITEM2     DIM       9                       * item number 2
.
JCODE     DIM       3                       * journal code
JOUR      FORM      8.2                     * journal total for summ. page
JGST      FORM      8.2                     * GST Journal total for summary page
.
KEY13A    DIM       13
KEY21A    DIM       21
KEY26A    DIM       26
KEYSTARR  DIM       50[99]  * Key Strokes Array
KEYSTCNT  FORM      2       * Key Strokes Counter
.
MPRAC     DIM       6
MDESC1    DIM       72                      * stores names of 1st 6 periods
MDESC2    DIM       72                      * stores names of 2nd 6 periods
MDESC3    DIM       72                      * stores names of 3rd 6 periods
MERCODE   DIM       3                       * merchant code
MESSCODE  DIM       3                                          
MISCODE   DIM       6                       * miscellaneous item group
MISCTTL   DIM       30                      * miscellaneous item description
MISCITM   DIM       11                      * miscellaneous item
MPGEFLAG  FORM      1
.
NOWYEAR   DIM       4                       * financial year
NOTCYR    FORM      1                       * current year flag
.                                               0 = yes, 1 = no
NUMPERS   FORM      2                       * total periods in financial yr
.
PRDAMNT   FORM      12.2[99]
PASS      FORM      1                       * pass flag
.                                               0 = fees invoiced pass
.                                               1 = to be invoiced pass
.                                               2 = merchant trax pass
FEESGEN   FORM      1                       * 1 = Fees invoiced pass
.                                             2 = Credit note pass
PATNAME   DIM       25
PATADD3   DIM       21
PRNTSTRT  FORM      3
PRANAME   DIM       45                 * name of P.R.A.
PRAADD1   DIM       35                 * address of P.R.A. - line 1
PRAADD2   DIM       35                 *                     line 2
PRAADD3   DIM       35                 *                     line 3
PRAADD4   DIM       35  
PRAPOST   DIM       8                  * postcode of P.R.A.
PRAPPHON  DIM       20                 * home phone of P.R.A.
PRABPHON  DIM       20                 * business phone of P.R.A.
PRAMPHON  DIM       20                 * mobile phone of P.R.A.
PRARREL   DIM       10                 * relationship of P.R.A.
RECFLAG   FORM      1
RACLINDC  DIM       1
STRTPRAC  DIM       6
SCRDFLAG  FORM      1
SKIPFLAG  FORM      1
SCOUNTA   FORM      2                       * counter
SKEY17    DIM       17
SAVDEBT   DIM       8                       * saved debtor #
SAVDOCT   DIM       10
SAVSCAN   FORM      2                       * saved scan flag
SETCODE   DIM       3                       * item set code
SCHDDESC  DIM       50
SUB1      DIM       3                       * subitem number
SUB2      DIM       3                       * subitem number
SLEDGER   DIM       2
SKEY11    DIM       11
SKEY39    DIM       39
.
SVPCFTYP  FORM      1                       * Financial type
SVPCDOCT  DIM       10                      * Doctor code
SVPCFCOD  DIM       17                      * Financial Code
SVPCPORT  DIM       3                       * Type of Portion (category PP)
SVPCPCEN  FORM      3.2                     * Percentage (%)
SVPCDSEC  DIM       5                       * Dissection
SVPCRESP  DIM       4                       * Responsibility
SVPCLEDG  DIM       2                       * Ledger
SVPCCRAC  DIM       12                      * Income/Credit Account
SVPCDBAC  DIM       12                      * Debit Account
.
SCHDCOPY  FORM      3       * No of Copies
SCHDPRIN  DIM       1       * Print Report 0=No 1
SCHDPRNT  DIM       6       * Printer No
.
TOTGSTAM  FORM      12.2
TOTGSTCR  FORM      12.2
TBIFLAG   FORM      1
TBINAME   DIM       80
TEMPFILE  DIM       8
TEMPFIL2  DIM       8
TEMPFIL3  DIM       8
TODATE    DIM       10                      * report "to" date
.
TOTLYR    FORM      8.2                     * group subtotals
TOTMTH1   FORM      8.2
TOTMTH10  FORM      8.2
TOTMTH11  FORM      8.2
TOTMTH12  FORM      8.2
TOTMTH13  FORM      8.2
TOTMTH2   FORM      8.2
TOTMTH3   FORM      8.2
TOTMTH4   FORM      8.2
TOTMTH5   FORM      8.2
TOTMTH6   FORM      8.2
TOTMTH7   FORM      8.2
TOTMTH8   FORM      8.2
TOTMTH9   FORM      8.2
TOTPER    FORM      8.2
TOTYTD    FORM      8.2
.
VARIABLE  DIM       127
XLCNT     FORM      2
YEARTTL   DIM       6                       * title year display
.
. PROGRAM CONSTANTS
. -----------------
CLSBRA    INIT      ")"
CLSSBRA   INIT      "]"
CODEJ     INIT      "J "                    * journal codes
CODEMC    INIT      "MC"                    * merchant codes
CODEPG    INIT      "PG"                    * item group code
ERASE     INIT      "iserase "
FFIN      INIT      "pf"
ISBUILD   INIT      "isbuild "
NINE8     FORM      "99999999"
NUMCHAR   INIT      "A1B2C3D4E5F6G7"
OPNBRA    INIT      "("
OPNSBRA   INIT      "["
PIPE      INIT      "|"
SP18      INIT      "                  "
SP45      INIT      "                                             "
TFIN      INIT      "pt"
UKEY      INIT      " 19 U1-8 U9-16,17-18,1-8"
UKEY2     INIT      " 164 U1-4,5-5,6-33,154-159"
UKEY3     INIT      " 24 U1-1,2-2,3-5"
UNKDOCT   INIT      "UNKNOWN DOCT CODE "
UNKMGRP   INIT      "UNKNOWN MISC GROUP "
UNKMISC   INIT      "UNKNOWN MISC CODE "
USERID    DIM       10
X5        INIT      "XXXXX"
X10       INIT      "XXXXXXXXXX"
ZERO4     INIT      "0000    "
OPTNFLAG  FORM      1
SETDFRPT  FORM      2
SETDFPRG  DIM       8
SELPRINT  DIM       6
SCHDTIME  DIM       8
SCHDDATE  DIM       8
SCHDPGID  DIM       8
PRHRE028  DIM       3
.
BJDAY     FORM      3
CJDAY     FORM      3
URDIM8    DIM       8
.
IBCNMHOS  FORM      1
.
CHKMPRAC  FORM      1
CREDTOT   FORM      8.2
CRDNFLAG  FORM      1
DIM27     DIM       27
EPRAC     DIM       6                  * medical practice
FORM7P2   FORM      7.2
FORM82    FORM      8.2
HTMLFILE  FIFO      ASCII, FIXED=250            *used in PATCATBI
SPRAC     DIM       6                  * medical practice
TEMP8P2   FORM      8.2
WEBFLAG   FORM      1
WBSEUID   DIM       10
.
PRGID     INIT      "IBAPRI19"
PRGNAM    INIT      "Fees Invoiced Report"
VERSION   INIT      "V12.00.02"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
ML0000    CALL      INIT0000               * initialisation and open files
          BRANCH    EXIT,ML9999            * init failure
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          CALL      CRTM0000               * Create tempfile if required
          MOVE      ZERO,CRDNFLAG          * Initialise credit note flag
          MOVE      SP70,CRDNCODE
          BRANCH    COPTION,ML1000:        * print only
                            ML1000         * print and reset
.
ML1000    CALL      DATE0000               * get current financial year &
          BRANCH    EXIT,ML0100            * date range not on file
          CALL      PHED0000               * get period headings
.
ML1500    CALL      GETY0000               * get financial year for report
          CALL      PRAC0000               * Keyin Medical practice range
          CALL      USID0000               * Keyin user id
          CALL      CONTQST                * confirm printout
          BRANCH    CEXIT,ML2000:          * (Y)es
                          ML1500:          * (N)o
                          ML0100           * (C)ancel
.
.         First pass for fees invoiced records (Financial type "A")
.
ML2000    CALL      DISP0000               * display prompt line
.                                            & initialise print parameters
          CALL      PROC0000               * process financial records
.
          CALL      ENDF0000               * end of fees invoiced records
          BRANCH    PASS,ML2500:           * process "to be invoiced"
                         ML3000            * get merchant trans. records
.
.         Second pass for to be invoiced fees
.
ML2500    CALL      PROC0000               * process financial records
          CALL      ENDT0000               * end of to be invoiced records
.
.         Third pass for merchant card transactions
.
ML3000    CALL      PROC0000               * process financial records
          CALL      ENDP0000               * end of report
          GOTO      ML0100                 * get next option
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
INIT0000  CALL      DISPHEAD                     * display heading
          CALL      IBACLOCK                     * get current date
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"pribulkf";
          OPEN      PRIBULK1,"pribulkf"          * Bulk Billing file
.
...          DISPLAY   *P64:24,"pridebtf";
...          OPEN      PRIDEBT1,"pridebtf"          * debtors file
.
          DISPLAY   *P64:24,"pridoctf";
          OPEN      PRIDOCT1,"pridoctf"          * practice doctor file
.
          DISPLAY   *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"pmshclaf";
          OPEN      PMSHCLA1,"pmshclaf"
.
          DISPLAY   *P64:24,"pridtraf";
          OPEN      PRIDTRA1,"pridtraf"          * debtors transaction file
          OPEN      PRIDTRA2,"pridtraf"
.
          DISPLAY   *P64:24,"prifinsf";
          OPEN      PRIFINS1,"prifinsf"          * financial stats file
          OPEN      PRIFIGA1,"prifigaf"          * financial stats file
.
          DISPLAY   *P64:24,"prigrpaf";
          OPEN      PRIGRPA1,"prigrpaf"          * item group file
.
          DISPLAY   *P64:24,"prihdbtf";
          OPEN      PRIHDBT2,"prihdbtf"          * holding header file
.
          DISPLAY   *P64:24,"priholdf";
          OPEN      PRIHOLA1,"priholdf"          * account hold file
.
          DISPLAY   *P64:24,"prihreff";
          OPEN      PRIHREF1,"prihreff"
          OPEN      PRIHREF2,"prihreff"          * holding referral file
.
          DISPLAY   *P64:24,"prihtraf";
          OPEN      PRIHTRA1,"prihtraf"          * holding transaction file
          OPEN      PRIHTRA4,"prihtraf"                               *I-123419
.
          DISPLAY   *P64:24,"priitemf";
          OPEN      PRIITEM1,"priitemf"          * item file
.
          DISPLAY   *P64:24,"primgpaf";
          OPEN      PRIMGPA1,"primgpaf"          * medicare gap file   
.
          DISPLAY   *P64:24,"primultf";
          OPEN      PRIMULT1,"primultf"          * multiple codes file
.
          DISPLAY   *P64:24,"pritestf";
          OPEN      PRITEST1,"pritestf"          * test file
.
          DISPLAY   *P64:24,"prithisf";
          OPEN      PRITHIS1,"prithisf"          * test history file
.
          OPEN      PRIALSA1,"prialsaf"
          OPEN      PRISECA1,"prisecaf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"          * codes file
.
          DISPLAY   *P64:24,"patdrgaf";
          OPEN      PATDRGA1,"patdrgaf"          * date range file
          OPEN      PATDRGA2,"patdrgaf"          * date range file
.
          DISPLAY   *P64:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"          * health fund file
.
          DISPLAY   *P64:24,"patin1af";
          OPEN      PATIN1A1,"patin1af"                     * insurance file
.
          DISPLAY   *P64:24,"patitemn";
          OPEN      PATITEM1,"patitemn"           * insurance file
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"          * patient master file
          OPEN      PATMX1A1,"patmx1af"          * patient master file
.
          DISPLAY   *P64:24,"patmchgf";
          OPEN      PATMCHG1,"patmchgf"          * miscellaneous charges file
.
          OPEN      PRIPRAC1,"pripracf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"          * control file
          READ      CONTROLF,ZERO;*85,IBCNUGST
          READ      CONTROLF,TEN;*79,CAPPRVNO
          READ      CONTROLF,TWENTY;*193,PTCNDCLM
          READ      CONTROLF,THIRTY3;*200,PRCNRDOC
          READ      CONTROLF,THIRTY4;*199,PRCNAFEE,*226,PRCNNRND,*227,PRCNGITM
          READ      CONTROLF,THIRTY6;*86,HSYS1
          READ      CONTROLF,HUND08;*1,HDATARCP
          READ      CONTROLF,FIFTY9;*60,PTCNUFMS
          READ      CONTROLF,HUND24;*111,PTCNUIMC
          READ      CONTROLF,HUND29;*61,PTCNWSIN,*73,PTCNIMCW
          READ      CONTROLF,HUND30;*1,PTCNHABN
.
          MATCH     SP70,PTCNDCLM
          IF        @EQUAL
            MOVE      "0  ",PTCNDCLM          * Use zero claim code
          ENDIF
.
.         Get the G/L Details
.
          READ      CONTROLF,THIRTY4;*166,PRCNGLIN,*167,PRCNGLPA
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,TEMPFILE
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,TEMPFIL2
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,TEMPFIL3
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,FNAME2
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,FNAME3
.
.         Set up the G/L interface file names
.
          PACK      KEY6,CYY,CMM,CDD
          REP       " 0",KEY6
          STRIP     HDATARCP
          CLEAR     INVNAME
          APPEND    HDATARCP,INVNAME
          APPEND    FFIN,INVNAME
          APPEND    KEY6,INVNAME
          APPEND    ".txt",INVNAME
          APPEND    SP70,INVNAME
          RESET     INVNAME
.
          STRIP     HDATARCP
          CLEAR     TBINAME
          APPEND    HDATARCP,TBINAME
          APPEND    TFIN,TBINAME
          APPEND    KEY6,TBINAME
          APPEND    ".txt",TBINAME
          APPEND    SP70,TBINAME
          RESET     TBINAME
.
          MOVE      TWENTY,XLCNT                 * yes
INIT0400  RESET     PRCNGLPA,XLCNT
          CMATCH    SP1,PRCNGLPA
          GOTO      INIT0450 IF NOT EQUAL
          SUB       ONE,XLCNT
          COMPARE   ZERO,XLCNT
          GOTO      INIT0400 IF NOT EQUAL
          CLEAR     PRCNGLPA
          GOTO      INIT0460
.
INIT0450  LENSET    PRCNGLPA
          RESET     PRCNGLPA
.
INIT0460  DISPLAY   *P38:24,"prifmsaf";
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PRIFMSA1,"prifmsaf"
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"File Not Found, prifmsaf - ";
            CALL      HITENTER
            GOTO      INIT9500
          ENDIF
.
          BRANCH    PRCNAFEE,INIT1000            * Doctor % income allocation?
          GOTO      INIT9000
.
.         Use doctor income percentage
.
INIT1000  DISPLAY   *P38:24,"pripceaf";
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PRIPCEA1,"pripceaf"
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"File Not Found, pripceaf - ";
            CALL      HITENTER
            GOTO      INIT9500
          ENDIF
          GOTO      INIT9000
.
INIT9000  MOVE      ZERO,EXIT
          GOTO      INIT9999
.
INIT9500  MOVE      ONE,EXIT
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Valid option selected                  *
.*                        TRUE  (1)  Exit option selected                   *
.*              COPTION = 1  Print only                                     *
.*                        2  Print and Reset                                *
.****************************************************************************
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Print Only":
                    *P1:6,*V2LON,TWO,*HOFF," = Print and Reset":
                    *P1:8,"Select Option : ";
.
OPTN1000  KEYIN     *P17:8,*EL,*V2LON,COPTION;
.
          COMPARE   ZERO,COPTION
          GOTO      OPTN9500 IF EQUAL            * exit
.
          BRANCH    COPTION,OPTN9000:            * print only
                            OPTN5000             * print & reset
.
          BEEP
          GOTO      OPTN1000                     * invalid option
.
OPTN5000  COMPARE   ONE,PRCNGLIN                 * running G/L Interface ?
          GOTO      OPTN9000 IF NOT EQUAL        * no 
.
.
          MOVE      ZERO,TBIFLAG  * default not to transfer'Fees to be invoiced'
          PREP      PTINVGL,INVNAME              * open invoiced G/L text file
.
          BRANCH    PRCNAFEE,OPTN9000            * Doctor % income allocation?
.
OPTN6000  KEYIN     *P1:24,*EL,"Transfer Fees to be Invoiced to Finance ":
                    "System (Y/N) ? ":
                    *P56:24,*V2LON,ANS:
                    *P56:24,*DV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSN,ANS                     * "N" input ?
          GOTO      OPTN9000 IF EQUAL            * yes
.
          MATCH     ANSY,ANS                     * "Y" input ?
          GOTO      OPTN7000 IF EQUAL            * yes
.
          BEEP                                   * invalid keyin
          GOTO      OPTN6000
.
OPTN7000  MOVE      ONE,TBIFLAG       * Flag to transfer fees to be invoiced
          PREP      PTTBIGL,TBINAME              * Open to be invoiced G/L file
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.**************************************************************************
.        Create tempfile to group item by set code for G/L
.**************************************************************************
CRTM0000 MATCH      "1",PRCNGITM
         GOTO       CRTM9999 IF NOT EQUAL        * Not grouping items
.
         CALL       KLTM0000                     * remove existing file
.
         PACK      CMDLIN3,ISBUILD,TEMPFIL3,UKEY3
         EXECUTE   CMDLIN3,TASKID
.
         OPEN      TMPFILE3,TEMPFIL3
.
CRTM9999 RETURN
+
.**************************************************************************
.        Kill tempfile if exists
.**************************************************************************
KLTM0000 CLOSE     TMPFILE3
.
         PACK      CMDLIN3,ERASE,TEMPFIL3       * set file erase command
         EXECUTE   CMDLIN3,TASKID               * erase temp file
.
KLTM9999 RETURN
+
.**************************************************************************
.*                                 DATE0000            Called by: ML0000  *
.*                get the current financial year &                        *
.*                get the start date for the fees invoiced report         *
.**************************************************************************
DATE0000  READ      CONTROLF,THIRTY3;*60,PRCNDATE  * get fees invoiced from date
          REP       " 0",PRCNDATE
          UNPACK    PRCNDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,FROMDATE
.
.
          MOVE      CCC,CCENT
          MOVE      CYY,CYEAR
          MOVE      CMM,CMON
          MOVE      CDD,CDAY
          CALL      PACDATE
          REP       " 0",CPCDATE
          MOVE      CPCDATE,TODATE               * save current date
.
.         Get the current financial year
.
          PACK      CPTDATE,CCC,CYY,CMM,CDD
          REP       " 0",CPTDATE
          CALL      GPERD
          BRANCH    EXIT,DATE9500
          MOVE      DRGYR,NOWYEAR                * save current financial year
          MOVE      ZERO,EXIT
          GOTO      DATE9999
.
.         Period not set up for date
.
DATE9500  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Date not found in Period Range file **    ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
DATE9999  RETURN
+
.****************************************************************************
.*                              PHED0000               Called by: ML0000    *
.*                     get the period headings                              *
.****************************************************************************
PHED0000  CLEAR     MDESC1                       * clear descriptions
          CLEAR     MDESC2
          CLEAR     MDESC3
.
.         Read each period record for the financial year
.
          MOVE      ZERO,NUMPERS
          PACK      KEY6,NOWYEAR,SP2
          CALL      RDSDRGA1                     * position in file
PHED1000  CALL      RDKDRGA1                     * read next record
          BRANCH    OVRCD,PHED5000               * end of file
.
          MOVE      DRGYR,FYEAR
          MATCH     FYEAR,NOWYEAR                * same year still ?
          GOTO      PHED5000 IF NOT EQUAL        * no - finish
.
          ADD       ONE,NUMPERS                  * increment number of periods
          COMPARE   TEN3,NUMPERS                 * done 2nd 6 periods yet ?
          GOTO      PHED3000 IF NOT LESS         * yes
.
          COMPARE   SEVEN,NUMPERS                * done 1st 6 periods yet ?
          GOTO      PHED2000 IF NOT LESS         * yes
.
          CALL      RJUS0000                     * right justify period name
          APPEND    SP3,MDESC1
          APPEND    DIM9,MDESC1                  * add period desc. to line
          GOTO      PHED1000
.
PHED2000  CALL      RJUS0000                     * right justify period name
          APPEND    SP3,MDESC2
          APPEND    DIM9,MDESC2                  * add period desc. to line
          GOTO      PHED1000
.
PHED3000  CALL      RJUS0000                     * right justify period name
          APPEND    SP3,MDESC3
          APPEND    DIM9,MDESC3                  * add period desc. to line
          GOTO      PHED1000
.
.         Finished processing financial year
.
PHED5000  APPEND    SP30,MDESC1
          APPEND    SP30,MDESC1
          APPEND    SP30,MDESC1
.
          APPEND    SP30,MDESC2
          APPEND    SP30,MDESC2
          APPEND    SP30,MDESC2
.
          APPEND    SP30,MDESC3
          APPEND    SP30,MDESC3
          APPEND    SP30,MDESC3
.
          RESET     MDESC1
          RESET     MDESC2
          RESET     MDESC3
.
.         Restore the financial year record by getting the first period
.         for the current financial year
.
          PACK      KEY6,NOWYEAR,SP2
          CALL      RDSDRGA1
          CALL      RDKDRGA1
          MOVE      DRGYR,FYEAR
.
PHED9999  RETURN
+
.****************************************************************************
.*                              RJUS0000               Called by: PHED0000  *
.*                  right justify the period descriptions                   *
.****************************************************************************
RJUS0000  CLEAR     DIM9                         * reset form pointer to 0
          ENDSET    DRGMDSC                      * position on last character
.                                                  of period description
RJUS1000  CMATCH    SP1,DRGMDSC                  * is character space ?
          GOTO      RJUS2000 IF NOT EQUAL        * no
.
          ENDSET    DIM9                         * position after last character
.                                                  of formatted period desc.
          APPEND    SP1,DIM9                     * add another leading space
.                                                  to formatted period desc.
          BUMP      DRGMDSC,-1                   * position back 1 character
          GOTO      RJUS2000 IF EOS              * start of string
          GOTO      RJUS1000                     * see what character this is
.
RJUS2000  RESET     DRGMDSC
          STRIP     DRGMDSC                      * remove trailing spaces
          ENDSET    DIM9
          APPEND    DRGMDSC,DIM9                 * append to formatted desc.
          RESET     DIM9
.
RJUS9999  RETURN
+
.****************************************************************************
.*                            GETY0000                 Called by: ML0000    *
.*               get the financial year to be reported                      *
.****************************************************************************
GETY0000  KEYIN     *P1:12,*EF,"Year : ",*V2LON,*RV,*DE,NOWYEAR:
                    *P8:12,*DV,NOWYEAR;
.
          MOVE      ZERO,NOTCYR                    * assume current fin. year
.
          MATCH     NOWYEAR,FYEAR                  * same financial year ?
          GOTO      GETY1000 IF EQUAL              * yes
          MOVE      ONE,NOTCYR                     * no
.
GETY1000  PACK      YEARTTL,OPNBRA,NOWYEAR,CLSBRA  * format year title
          DISPLAY   *P52:2,*V2LON,YEARTTL;
.
GETY9999  RETURN
+
.****************************************************************************
.         Keyin range of Medical practice
.****************************************************************************
PRAC0000  DISPLAY   *P1:14,*EF,"Medical Practice From : ":
                    *P1:15,"                 To   : ";
          MOVE      SP6,STRTPRAC
          MOVE      SP70,MPRAC
          KEYIN     *P25:14,*DV,UNDLN6:
                    *P25:14,*V2LON,MPRAC:
                    *P25:14,*DV,MPRAC
          CALL      CHK0000                      * see what was entered
          BRANCH    EXIT,PRAC9999
.
          MATCH     SP6,MPRAC
          IF        @EQUAL
            DISPLAY   *P25:14,*V2LON,"Start   ",*HOFF
          ELSE
            MOVE      MPRAC,STRTPRAC
          ENDIF
.
PRAC2000  MOVE      SP70,MPRAC
          MOVE      SP6,ENDPRAC
          MOVE      SP70,MPRAC
          KEYIN     *P25:15,*DV,UNDLN6:
                    *P25:15,*V2LON,MPRAC:
                    *P25:15,*DV,MPRAC
          CALL      CHK0000                      * see what was entered
          BRANCH    EXIT,PRAC0000
.
          MATCH     SP6,MPRAC
          IF        @EQUAL
            DISPLAY   *P25:15,*V2LON,"End     ",*HOFF
            MOVE      "zzzzzz",ENDPRAC
          ELSE
            MOVE      MPRAC,ENDPRAC
          ENDIF
.
          MATCH     STRTPRAC,ENDPRAC
          IF        @LESS
            DISPLAY   *P1:24,*EL,"End practice less than start practice.  ";
            CALL      HITENTER
            GOTO      PRAC0000
          ENDIF
.
.         For All Medical Practices, use Reset date from Controlf file
.
          MATCH     SP70,STRTPRAC
          IF        @EQUAL
            MATCH     "zzzzzz",ENDPRAC
            GOTO      PRAC9999 IF EQUAL          * All medical practices
          ENDIF
.
.         For a single Medical Prac. or Range of Medical Practices use
.         the start Medical Practice
.
          MATCH     SP70,STRTPRAC
          GOTO      PRAC9999 IF EQUAL
.
          MOVE      STRTPRAC,KEY6
          CALL      RDPRPR1                      * record on file ?
          BRANCH    OVRCD,PRAC9999
.
          MATCH     SP70,PRPRRDAT
          IF        !@EQUAL
            UNPACK    PRPRRDAT,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            MOVE      CPCDATE,FROMDATE
          ENDIF
.
PRAC9999  RETURN
+
.**************************************************************************
.*                              CHK0000                Called by: GPRA0000*
.*                see what was input for medical practice                 *
.* Returns:           EXIT   0 = valid input                              *
.*                           1 = nothing input                            *
.**************************************************************************
CHK0000  ENDSET     MPRAC
         APPEND     SP6,MPRAC
         RESET      MPRAC
         MATCH      SP6,MPRAC                    * anything entered ?
         GOTO       CHK9500 IF EQUAL             * no
.
         MOVE       MPRAC,KEY6
         CALL       RDPRPR1                      * record on file ?
         COMPARE    ZERO,OVRCD
         GOTO       CHK9500 IF EQUAL             * yes
.
         DISPLAY    *P1:24,*EL,*B,"Medical Practice not on file.  ";
CHK8000  MOVE       ONE,EXIT
         GOTO       CHK9999
.
CHK9500  MOVE       ZERO,EXIT
CHK9999  RETURN
+
.****************************************************************************
.         Keyin user id
.****************************************************************************
USID0000  KEYIN     *P1:17,*EL,"User Id : ",USERID;
          PACK      USERID,USERID,SP70
          MATCH     SP70,USERID
          GOTO      USID0000 IF EQUAL
USID9999  RETURN
+
.****************************************************************************
.*                               IVAR0000              Called by: DISP0000  *
.*             initialise variables prior to each pass            ENDF0000  *
.*                                                                MSET0000  *
.****************************************************************************
IVAR0000  CALL      GZER0000
          MOVE      SP1,FINTYPE
          PACK      FINCODE,SP70     
          MOVE      SP10,SLEDGER
          MOVE      ZERO,GSTFLAG
.
IVAR9999  RETURN
+
.*****************************************************************************
.*                             GZER0000                Called by: IVAR0000   *
.*                        zero grand totals                                  *
.*****************************************************************************
GZER0000  MOVE      ZERO,COUNT
.
GZER1000  ADD       ONE,COUNT
          COMPARE   "161",COUNT
          GOTO      GZER9999 IF NOT LESS
.
          STORE     ZERO,COUNT,GFEESYTD,GCASHYTD,GJOURYTD,GOUTYTD,GFEESPER:
                               GCASHPER,GJOURPER,GOUTPER,GFEESLYR,GCASHLYR:
                               GJOURLYR,GOUTLYR,GFEESM1,GCASHM1,GJOURM1,GOUTM1:
                               GFEESM2,GCASHM2,GJOURM2,GOUTM2,GFEESM3,GCASHM3:
                               GJOURM3,GOUTM3,GFEESM4,GCASHM4,GJOURM4,GOUTM4:
                               GFEESM5,GCASHM5,GJOURM5,GOUTM5,GFEESM6,GCASHM6:
                               GJOURM6,GOUTM6,GFEESM7,GCASHM7,GJOURM7,GOUTM7:
                               GFEESM8,GCASHM8,GJOURM8,GOUTM8,GFEESM9,GCASHM9:
                               GJOURM9,GOUTM9,GFEESM10,GCASHM10,GJOURM10:
                               GOUTM10,GFEESM11,GCASHM11,GJOURM11,GOUTM11:
                               GFEESM12,GCASHM12,GJOURM12,GOUTM12,GFEESM13:
                               GCASHM13,GJOURM13,GOUTM13,GCOMMPER,GCOMMYTD:
                               GCOMMLYR,GCOMMM1,GCOMMM2,GCOMMM3,GCOMMM4,GCOMMM5:
                               GCOMMM6,GCOMMM7,GCOMMM8,GCOMMM9,GCOMMM10:
                               GCOMMM11,GCOMMM12,GCOMMM13,TOTPER,TOTYTD,TOTLYR:
                               TOTMTH1,TOTMTH2,TOTMTH3,TOTMTH4,TOTMTH5:
                               TOTMTH6,TOTMTH7,TOTMTH8,TOTMTH9,TOTMTH10:
                               TOTMTH11,TOTMTH12,TOTMTH13:
                               GFGSTLYR,GFGSTM1,GFGSTM2,GFGSTM3,GFGSTM4,GFGSTM5:
                               GFGSTM6,GFGSTM7,GFGSTM8,GFGSTM9,GFGSTM10:
                               GFGSTM11,GFGSTM12,GFGSTM13,GFGSTPER,GFGSTYTD:
                               GJGSTLYR,GJGSTM1,GJGSTM2,GJGSTM3,GJGSTM4,GJGSTM5:
                               GJGSTM6,GJGSTM7,GJGSTM8,GJGSTM9,GJGSTM10:
                               GJGSTM11,GJGSTM12,GJGSTM13,GJGSTPER,GJGSTYTD:
                               CFEESLYR,CFEESM1,CFEESM2,CFEESM3,CFEESM4,CFEESM5:
                               CFEESM6,CFEESM7,CFEESM8,CFEESM9,CFEESM10:
                               CFEESM11,CFEESM12,CFEESM13,CFEESPER,CFEESYTD:
                               CFGSTLYR,CFGSTM1,CFGSTM2,CFGSTM3,CFGSTM4,CFGSTM5:
                               CFGSTM6,CFGSTM7,CFGSTM8,CFGSTM9,CFGSTM10:
                               CFGSTM11,CFGSTM12,CFGSTM13,CFGSTPER,CFGSTYTD
          GOTO      GZER1000
.
GZER9999  RETURN
+
.****************************************************************************
.*                              DISP0000               Called by: ML0000    *
.*        set up prompt line display and initialize print parameters        *
.****************************************************************************
DISP0000  DISPLAY   *P1:24,*EL,"Processing : ";
.
.         Initialise parameters
.
          MOVE      ZERO,PASS                    * initialize pass flag
          MOVE      ZERO,FEESGEN                 * initialize pass flag
          MOVE      ZERO,CPAGENO                 * set page heading variables
          MOVE      ZERO,CNOUNDLN
          MOVE      ZERO,CLNO
          MOVE      YEARTTL,CPHDROPT
          CALL      IBACLOCK
          MOVE      SIXTY,CLNO                   * force new page
          MOVE      SP10,SAVDOCT
          MOVE      ZERO,TOTGSTAM                * Total of GST amount
          MOVE      ZERO,TOTGSTCR                * Total of Cr.Note GST amount
.
          CALL      IVAR0000                     * initialize variables
.
          PACK      KEY39,NOWYEAR,SP70
          CALL      RSPRFN1                      * position in file
.
DISP9999  RETURN
+
.**************************************************************************
.*                              PROC0000               Called by: ML0000  *
.*     process the necessary records from the financial summary file      *
.**************************************************************************
PROC0000  CALL      RKPRFN1                      * read next record
          BRANCH    OVRCD,PROC9999               * end of file
.
          MATCH     NOWYEAR,PRFNYEAR             * same financial year ?
          GOTO      PROC9999 IF NOT EQUAL        * no - finish
.
          MATCH     SP70,STRTPRAC
          IF        !@EQUAL
            MATCH     STRTPRAC,PRFNMPRA
            GOTO      PROC0000 IF LESS
          ENDIF
.
          MATCH     "zzzzzz",ENDPRAC
          IF        !@EQUAL
            MATCH     PRFNMPRA,ENDPRAC           * check end of med.practice
            GOTO      PROC0000 IF LESS
          ENDIF
.
.         check the medical practice user access
.
          PACK      KEY10,USERID,SP70
          CALL      RDPRALS1
          COMPARE   ZERO,OVRCD
          GOTO      PROC1000 IF EQUAL       * User has access to all Med.Prac.
.
          PACK      KEY16,PRFNMPRA,USERID,SP70
          CALL      RDPRSEC1
          BRANCH    OVRCD,PROC0000          * no access
.
PROC1000  BRANCH    PASS,PROC2000:               * to be invoiced pass
                         PROC3000                * merchant trax. pass
.
PROC2000  MATCH     ANSD,PRFNTYPE                * fees, cash, or journal type ?
          GOTO      PROC9999 IF NOT LESS         * no, finish
.
PROC3000  CMATCH    FINTYPE,PRFNTYPE             * same financial type still ?
          GOTO      PROC5000 IF NOT EQUAL        * no
.
          CALL      CHKC0000                     * new item code ?
          BRANCH    EXIT,PROC5000                * yes
.
          CALL      TOTL0000                     * increment totals
          IF        CRDNFLAG=1
            MOVE      PRFNCODE,CRDNCODE
          ENDIF
          GOTO      PROC0000
.
.         New code, so print accumulated totals and reset to zero
.
PROC5000  CALL      NEWC0000
          GOTO      PROC0000                     * get next record
.
PROC9999  RETURN
+
.****************************************************************************
.         G/L Interface for Items grouped by Set codes
.****************************************************************************
ITGL0000  MOVE      SP70,KEY1
          MOVE      PASS,KEY1
          PACK      KEY5,KEY1,SP70
          CALL      RSTEMP3
ITGL1000  CALL      RKTEMP3
          BRANCH    OVRCD,ITGL9999
.
          MATCH     KEY1,XCURSECT
          GOTO      ITGL9999 IF NOT EQUAL      * Different section
.
          CALL      WMIT0000                   * Write to G/L file
          GOTO      ITGL1000
.
ITGL9999  RETURN
+
.        ======================================================================
.        Write total items amount to Financial Extract file
.        ======================================================================
WMIT0000  MOVE      ONE,PRFMSUB
          MATCH     "J",XSUBFCOD
          GOTO      WMIT1000 IF NOT EQUAL        * Not a Journal
.
          MOVE      THREE,PRFMSUB
.
WMIT1000  PACK      KEY18,PRFMSUB,XSETCODE,SP70
.
.         Check if record exists in the interface file
.
          CALL      RDPRFM1                      * record on file ?
          COMPARE   ZERO,OVRCD
          GOTO      WMIT5000 IF EQUAL
.
          PACK      KEY18,PRFMSUB,SP20           * use default
          CALL      RDPRFM1
          BRANCH    OVRCD,WMIT9999
.
WMIT5000  MOVE      "Fees Invoiced G/L Transfer    ",IBGIDESC
          MATCH     "J",XSUBFCOD
          IF        @EQUAL
            PACK      KEY5,ANSJ,SP1,XSETCODE,SP70
            CALL      RDCODE1
            IF        OVRCD=0
              CLEAR     IBGIDESC
              APPEND    XSETCODE,IBGIDESC
              RESET     IBGIDESC,3
              APPEND    "-",IBGIDESC
              APPEND    TDESC,IBGIDESC
              APPEND    SP70,IBGIDESC
              RESET     IBGIDESC
            ENDIF
          ELSE
            PACK      KEY5,ANSP,ANSG,XSETCODE,SP70
            CALL      RDCODE1
            IF        OVRCD=0
              PACK      IBGIDESC,TDESC,SP70
            ENDIF
          ENDIF
.
          MOVE      CURRDATE,IBGIDATE            * load current date
          MOVE      SP20,IBGIREF                 * Reference
          MOVE      SP20,IBGICRAC                * Credit account - cash
          MOVE      SP1,IBGISIGN                 * Sign
          MOVE      XTTAMITM,IBGIVALU            * Amount
.
          IF        PASS = 0
.
.           invoiced section
.
            MOVE      PRFMIDI,IBGIDISS              * Dissection
            MOVE      PRFMIRE,IBGIRESP              * Responsibility
            MOVE      PRFMILD,IBGILEDG              * Ledger
.
            IF        PRFMSUB=3
              MOVE      PRFMICA,IBGIACCT            * Debit account
              MOVE      PRFMIDA,IBGICRAA            * Credit account
              IF        IBGIVALU<0
                MULT      "-1",IBGIVALU
                MOVE      PRFMIDA,IBGIACCT          * Debit Account
                MOVE      PRFMICA,IBGICRAA          * Income Acc - Credit Acc.
              ENDIF
            ELSE
              MOVE      PRFMIDA,IBGIACCT              * Debit Account
              MOVE      PRFMICA,IBGICRAA              * Income Acc - Credit Acc.
              MATCH     "N",XSUBFCOD                  * Credit Note
              IF        @EQUAL
                MULT      "-1",IBGIVALU
              ENDIF
            ENDIF
.
            MOVE      PRFMBASC,IBGIBASC
            CALL      WRPRFMI                    * write to invoiced file
.
          ELSE
.
.           to be invoiced section
.
           MOVE      PRFMTDI,IBGIDISS              * Dissection
           MOVE      PRFMTRE,IBGIRESP              * Responsibility
           MOVE      PRFMTLD,IBGILEDG              * Ledger
           MOVE      PRFMTDA,IBGIACCT              * Debit Account
           MOVE      PRFMTCA,IBGICRAA              * Income Acc - Credit Acc.
.
           MOVE      SP3,IBGIBASC
           CALL      WRPRFMT                    * write to to be invoiced file
          ENDIF
.
WMIT9999 RETURN
+
.****************************************************************************
.        Transfer total GST amount to financial system
.****************************************************************************
EGST0000  COMPARE   ZERO,PASS
          GOTO      PGST9999 IF NOT EQUAL         * Only for fees invoiced
.
          MOVE      "1",PRFMSUB
          PACK      KEY18,PRFMSUB,SP70
          CALL      RDPRFM1
          BRANCH    OVRCD,PGST9999
.
          IF        TOTGSTAM<>0
            MOVE      "GST                           ",IBGIDESC
            MOVE      TOTGSTAM,IBGIVALU            * Amount
            CALL      WGST0000
          ENDIF
.
          IF        TOTGSTCR<>0
            MOVE      "CREDIT NOTE GST               ",IBGIDESC
            MOVE      TOTGSTCR,IBGIVALU            * Amount
            MULT      "-1",IBGIVALU
            CALL      WGST0000
          ENDIF
.
EGST9999  RETURN
+
.****************************************************************************
.         Write GST amount to Financial extract file
.****************************************************************************
WGST0000
          MOVE      CURRDATE,IBGIDATE            * load current date
          MOVE      SP20,IBGIREF                 * Reference
          MOVE      SP20,IBGICRAC                * Credit account - cash
          MOVE      SP1,IBGISIGN                 * Sign
          MOVE      PRFMIDI,IBGIDISS             * Dissection
          MOVE      PRFMIRE,IBGIRESP             * Responsibility
          MOVE      PRFMILD,IBGILEDG             * Ledger
          MOVE      PRFMIGS,IBGICRAA             * GST Control - Credit Acc
          MOVE      PRFMBASC,IBGIBASC
          CALL      WRPRFMI                    * write to invoiced file
.
WGST9999  RETURN
+
.****************************************************************************
.*                              CHKG0000                                    *
.*                      Generating GST                                      *
.****************************************************************************
CHKG0000  COMPARE   TWO,IBCNUGST
          GOTO      CHKG9999 IF NOT EQUAL
.
          COMPARE   ZERO,PASS                 * Print GST only for Fees invoiced
          GOTO      CHKG9999 IF NOT EQUAL
.
          MOVE      PRFNCODE,KEY28
.
          MATCH     ANSA,FINTYPE
          IF        @EQUAL
            MOVE      ANSA,KEY1
            CALL      PGST0000                 * Print GST 
          ELSE
            MATCH     ANSC,FINTYPE
            IF        @EQUAL
              MOVE      ANSC,KEY1
              CALL      PGST0000               * Print GST Journal
            ENDIF
          ENDIF
.
          CALL      CLAC0000                   * Clear variables
          MOVE      KEY28,PRFNCODE
          MOVE      PRFNCODE,FINCODE
.
CHKG9999  RETURN
+
.****************************************************************************
.*                                PGST0000             Called by: PROC0000  *
.*                Print Accommodation GST/Journal GST                       *
.****************************************************************************
PGST0000  PACK      SKEY39,PRFNYEAR,PRFNTYPE,PRFNCODE,PRFNMPRA,SP70  * save key
          CALL      CLAC0000                  * Clear variables
          MOVE      CRDNFLAG,SCRDFLAG
          MOVE      ZERO,CRDNFLAG
.
          OPEN      PRIFIGA1,"prifigaf"       * open GST fins file
.
          MOVE      ONE,GSTFLAG
          MOVE      SP20,FINTYPE
          MOVE      SP70,FINCODE
          MOVE      SP10,LEDGER
          MOVE      SP10,SLEDGER
          MOVE      SP1,DIM1
          MATCH     "C",KEY1                  * Journal?
          GOTO      PGST0200 IF EQUAL
.
          MOVE      ANSM,DIM1
          MATCH     ANSA,KEY1
          IF        @EQUAL
            LOAD      DIM1,FEESGEN,ANSN
            STORE     ONE,FEESGEN,CRDNFLAG
          ENDIF
PGST0200  PACK      KEY39,NOWYEAR,KEY1,DIM1,SP70  *position on the selected year
          CALL      RSPRFG1
PGST1000  CALL      RKPRFG1
          BRANCH    OVRCD,PGST5000
.
          MATCH     NOWYEAR,PRFNYEAR          * same financial year ?
          GOTO      PGST5000 IF NOT EQUAL
.
          MATCH     KEY1,PRFNTYPE             * fees generated/journal type ?
          GOTO      PGST5000 IF NOT EQUAL     * no
.
          MATCH     SP70,STRTPRAC
          IF        !@EQUAL
            MATCH     STRTPRAC,PRFNMPRA       * check range of medical prac.
            GOTO      PGST1000 IF LESS
          ENDIF
.
          MATCH     "zzzzzz",ENDPRAC
          IF        !@EQUAL
            MATCH     PRFNMPRA,ENDPRAC        * check end of med.practice
            GOTO      PGST1000 IF LESS
          ENDIF
.
          MATCH     "C",KEY1                  * Journal?
          IF        !@EQUAL
            UNPACK    PRFNCODE,ANS
            MATCH     ANS,DIM1
            GOTO      PGST5000 IF NOT EQUAL     * no
          ENDIF
.
          CMATCH    FINTYPE,PRFNTYPE          * same financial type ?
          GOTO      PGST2000 IF NOT EQUAL     * no
.
.         CALL      CLED0000                  * new ledger ?
.         BRANCH    EXIT,PGST2000             * yes
          CALL      TOTL0000
          GOTO      PGST1000
.
.         New code, so print accumulated totals and reset to zero
.
PGST2000  CALL      NEWG0000
          MOVE      LEDGER,SLEDGER
          GOTO      PGST1000
.
PGST5000  MATCH     SP70,FINCODE
          GOTO      PGST9000 IF EQUAL
          CALL      PACC0000
          CALL      PTOT0000
.
PGST9000  CLOSE     PRIFIGA1
          MOVE      ZERO,GSTFLAG
          MOVE      SKEY39,KEY39
          CALL      RDPRFN1            * reposition to the original key
          MOVE      SCRDFLAG,CRDNFLAG
PGST9999  RETURN
+
.****************************************************************************
.        CLED0000: Get the General Ledger
.****************************************************************************
CLED0000  MOVE      ZERO,EXIT
          COMPARE   ONE,PRCNGLIN              * running G/L Interface ?
          GOTO      CLED9999 IF NOT EQUAL     * no Financial interface
.
          MATCH     ANSA,KEY1                 * are we doing Fees inv./Journal
          IF        @EQUAL
            BRANCH    PRCNAFEE,CLED9999       * Doctor % income allocation?
            MOVE      ONE,PRFMSUB             * Fees accommodation
          ELSE
            MOVE      THREE,PRFMSUB           * Journal
          ENDIF
.
          PACK      KEY18,PRFMSUB,PRFNCODE,SP20 
          CALL      RDPRFM1
          IF        OVRCD=1
            PACK      KEY18,PRFMSUB,SP20       * use default
            CALL      RDPRFM1
            BRANCH    OVRCD,CLED9500
          ENDIF
          MOVE      PRFMILD,LEDGER             * Ledger
.
          MATCH     LEDGER,SLEDGER 
          GOTO      CLED9500 IF NOT EQUAL
          MOVE      ZERO,EXIT
          GOTO      CLED9999
.
CLED9500  MOVE      ONE,EXIT
CLED9999  RETURN
+
.****************************************************************************
.*                                NEWG0000                                  *
.*                New code for GST                                          *
.****************************************************************************
NEWG0000  CALL      PACC0000                     * print item details
          CALL      CLAC0000                     * Clear vars
.
          MOVE      PRFNCODE,FINCODE
          CALL      CLED0000                     * get the ledger number
          MOVE      LEDGER,SLEDGER
.
          MATCH     FINTYPE,PRFNTYPE             * same financial type ?
          IF        @EQUAL
            CALL      TOTL0000                   * yes
            GOTO      NEWC9999
          ELSE
            CMATCH    SP1,FINTYPE                * first financial type ?
            CALL      PTOT0000 IF NOT EQUAL
            MOVE      PRFNTYPE,FINTYPE
.
            MOVE      ZERO,TOTPER                * zero subtotals 
            MOVE      ZERO,TOTYTD
            MOVE      ZERO,TOTLYR
            MOVE      ZERO,TOTMTH1
            MOVE      ZERO,TOTMTH2
            MOVE      ZERO,TOTMTH3
            MOVE      ZERO,TOTMTH4
            MOVE      ZERO,TOTMTH5
            MOVE      ZERO,TOTMTH6
            MOVE      ZERO,TOTMTH7
            MOVE      ZERO,TOTMTH8
            MOVE      ZERO,TOTMTH9
            MOVE      ZERO,TOTMTH10
            MOVE      ZERO,TOTMTH11
            MOVE      ZERO,TOTMTH12
            MOVE      ZERO,TOTMTH13
            MOVE      PRFNTYPE,FINTYPE
.
            COMPARE   FIFTY4,CLNO                 * page full ?
            IF        @LESS
               MATCH     ANSA,FINTYPE
               CALL      FEES0000 IF EQUAL
.
               MATCH     ANSC,FINTYPE
               CALL      JOUR0000 IF EQUAL
            ENDIF
            CALL      TOTL0000
          ENDIF
.
NEWG9999  RETURN
+
.****************************************************************************
.*                                TOTL0000             Called by: PROC0000  *
.*                accumulate totals for each period of fin. year  NEWC0000  *
.****************************************************************************
TOTL0000  ADD       PRFNPERA,ACCPER
          ADD       PRFNLAST,ACCLYR
          ADD       PRFNPR01,ACCMTH1
          ADD       PRFNPR02,ACCMTH2
          ADD       PRFNPR03,ACCMTH3
          ADD       PRFNPR04,ACCMTH4
          ADD       PRFNPR05,ACCMTH5
          ADD       PRFNPR06,ACCMTH6
          ADD       PRFNPR07,ACCMTH7
          ADD       PRFNPR08,ACCMTH8
          ADD       PRFNPR09,ACCMTH9
          ADD       PRFNPR10,ACCMTH10
          ADD       PRFNPR11,ACCMTH11
          ADD       PRFNPR12,ACCMTH12
          ADD       PRFNPR13,ACCMTH13
.
          IF        PRCNGLIN=1 & PRCNAFEE=0
            MATCH     "1",PRCNGITM
            GOTO      TOTL1000 IF EQUAL          * interface GST for HEA
          ENDIF
.         BRANCH    GSTFLAG,TOTL2000             * no interface with GST
.
TOTL1000
.         BRANCH    COPTION,TOTL9999             * Print only
          MOVE      ZERO,SKIPFLAG
          IF        COPTION=1
            IF        PRCNGLIN=1 & PRCNAFEE=1
              MOVE      ONE,SKIPFLAG             * Just checking for G/L setup
              CALL      TRGL0000
            ENDIF
            GOTO      TOTL99999
          ENDIF
.
.         Check if the G/L Interface parameter is turned on
.
          IF        PRCNGLIN = 1
.
.         invoiced section - then do the interface for invoiced amounts.
.
            IF        PASS = 0
              CALL      TRGL0000                 * write to G/L Interface
.
.         to be invoiced section - check if the user requested to do the 
.         interface for the to be invoiced.
.
            ELSE
              IF        TBIFLAG = 1
                CALL      TRGL0000               * G/L Interface
              ENDIF
            ENDIF
          ENDIF
.
.         Reset zero period value for the selected range of medical practices
.
TOTL2000  BRANCH    COPTION,TOTL9999             * Print only
.
.         MATCH     SP70,STRTPRAC
.         IF        !@EQUAL
.           MATCH     STRTPRAC,PRFNMPRA         * check range of medical prac.
.           GOTO      TOTL9999 IF LESS
.         ENDIF
.
.         MATCH     "zzzzzz",ENDPRAC
.         IF        !@EQUAL
.           MATCH     PRFNMPRA,ENDPRAC           * check end of med.practice
.           GOTO      TOTL9999 IF LESS
.         ENDIF
.
          MOVE      ZERO,PRFNPERA
          IF        GSTFLAG=1
            CALL      UPPRFG1        * update GST financial file
          ELSE
            CALL      UPPRFN1
          ENDIF
.
TOTL9999  RETURN
+
.*****************************************************************************
.*                             TRGL0000                Called by: TOTL0000   *
.*       Transfer fees to general Ledger interface file                      *
.*****************************************************************************
.
TRGL0000  COMPARE   ZERO,PRFNPERA                * period amount zero ?
          GOTO      TRGL9999 IF EQUAL            * yes - finished
.
.         Check for fees generated
.
          CMATCH    ANSA,PRFNTYPE                * fees generated ?
          GOTO      TRGL3000 IF NOT EQUAL        * no 
.
.         If we are using doctor income percentage, fees invoices use pripceaf
.         and journals still use prifmsaf file for the interface
.
          BRANCH    PRCNAFEE,TRGL6000            * Doctor % income allocation?
.
          MOVE      ONE,PRFMSUB                  * yes
          UNPACK    PRFNCODE,ANS,DIM3,DIM14
          PACK      KEY18,PRFMSUB,DIM3,DIM14
.
          MATCH     "1",PRCNGITM
          GOTO      TRGL4000 IF NOT EQUAL
.
          IF        GSTFLAG=1
            IF        CRDNFLAG=1
              ADD       PRFNPERA,TOTGSTCR          * Accummulate GST Cr.Note
            ELSE
              ADD       PRFNPERA,TOTGSTAM          * Accummulate GST amount
            ENDIF
            GOTO      TRGL9999
          ENDIF
.
          CALL      GRIT0000                     * Group item by setcode
          GOTO      TRGL9999
.
.         Check for journals
.
TRGL3000  CMATCH    ANSC,PRFNTYPE                * journals ?
          GOTO      TRGL9999 IF NOT EQUAL        * no - finished
.
          MOVE      THREE,PRFMSUB                * yes
          UNPACK    PRFNCODE,DIM4,DIM14
          PACK      KEY18,PRFMSUB,DIM4,DIM14
.
          BRANCH    PRCNAFEE,TRGL4000            * Doctor % income allocation?
.
          MATCH     "1",PRCNGITM
          GOTO      TRGL4000 IF NOT EQUAL
.
          CALL      GRIT0000                     * Group journals
          GOTO      TRGL9999
.
.         Check if record exists in the interface file
.
TRGL4000  CALL      RDPRFM1                      * record on file ?
          BRANCH    OVRCD,TRGL4800               * no
          GOTO      TRGL5000                     * yes
.
.         Default.  If this is an item, then check if there is a record
.         for the set code and if not, then use the default.
.
TRGL4800  IF        PRFMSUB = 1
            PACK      KEY18,PRFMSUB,DIM3,SP20
            CALL      RDPRFM1                    * record on file ?
            COMPARE   ZERO,OVRCD
            GOTO      TRGL5000 IF EQUAL          * yes
          ENDIF
.
          PACK      KEY18,PRFMSUB,SP20           * use default
          CALL      RDPRFM1
          BRANCH    OVRCD,TRGL9999
.
TRGL5000  IF        GSTFLAG=1
            MOVE      "GST Fees Invoiced G/L Transfer    ",IBGIDESC
          ELSE
            MOVE      "Fees Invoiced G/L Transfer    ",IBGIDESC
          ENDIF
          MOVE      CURRDATE,IBGIDATE             * load current date
          MOVE      SP20,IBGIREF                 * Reference
          MOVE      SP20,IBGICRAC                * Credit account - cash
          MOVE      SP1,IBGISIGN                 * Sign
          MOVE      PRFNPERA,IBGIVALU            * Amount
.
          IF        PASS = 0
.
.           invoiced section
.
            MOVE      PRFMIDI,IBGIDISS              * Dissection
            MOVE      PRFMIRE,IBGIRESP              * Responsibility
            MOVE      PRFMILD,IBGILEDG              * Ledger
.
            IF        PRFMSUB=3 
              MOVE      PRFMICA,IBGIACCT            * Debit account
              MOVE      PRFMIDA,IBGICRAA            * Credit account
              IF        IBGIVALU<0
                MULT      "-1",IBGIVALU
                MOVE      PRFMIDA,IBGIACCT          * Debit Account
                MOVE      PRFMICA,IBGICRAA          * Income Acc - Credit Acc.
              ENDIF
            ELSE
              MOVE      PRFMIDA,IBGIACCT            * Debit Account
              MOVE      PRFMICA,IBGICRAA            * Income Acc - Credit Acc.
              IF        CRDNFLAG=1
                MULT      "-1",IBGIVALU
              ENDIF
            ENDIF
.
            IF        GSTFLAG=1
              IF        PRFMSUB<>3
                MOVE      PRFMIGS,IBGICRAA          * GST Control - Credit Acc
              ENDIF
            ENDIF
.
            MOVE      PRFMBASC,IBGIBASC
            CALL      WRPRFMI                    * write to invoiced file
.
          ELSE
.
.           to be invoiced section
.
           MOVE      PRFMTDI,IBGIDISS              * Dissection
           MOVE      PRFMTRE,IBGIRESP              * Responsibility
           MOVE      PRFMTLD,IBGILEDG              * Ledger
.
           IF        PRFMSUB=3
             MOVE      PRFMTCA,IBGIACCT            * Debit account
             MOVE      PRFMTDA,IBGICRAA            * Credit account
             IF        IBGIVALU<0
               MULT      "-1",IBGIVALU
               MOVE      PRFMTDA,IBGIACCT          * Debit Account
               MOVE      PRFMTCA,IBGICRAA          * Income Acc - Credit Acc.
             ENDIF
           ELSE
             MOVE      PRFMTDA,IBGIACCT            * Debit Account
             MOVE      PRFMTCA,IBGICRAA            * Income Acc - Credit Acc.
           ENDIF
.
            MOVE      SP3,IBGIBASC
            CALL      WRPRFMT                    * write to to be invoiced file
          ENDIF
          GOTO      TRGL9999
.
.
.         Doctor percentage income allocation
.
TRGL6000  BRANCH    PASS,TRGL9999                * Invoice section only
.
.         Write to text file
.
          MOVE      "Fees Invoiced G/L Transfer    ",IBGIDESC
          MOVE      CURRDATE,IBGIDATE             * load current date
          MOVE      SP20,IBGIREF                 * Reference
          MOVE      SP20,IBGICRAC                * Credit account - cash
          MOVE      SP1,IBGISIGN                 * Sign
.
.         Check if record exists in the interface file
.
          MOVE      ONE,PRPCFTYP 
          CMATCH    ANSA,PRFNTYPE                * Item record ?
          IF        @EQUAL
            CALL      CHIT0000                   * Check for Item
            GOTO      TRGL9999
          ENDIF
.
TRGL9999  RETURN
.
.*****************************************************************************
.         Group item by set code
.*****************************************************************************
GRIT0000  IF        PRFMSUB=3
            MOVE      "J",XSUBFCOD       * for Journal
            PACK      KEY4,XSUBFCOD,PRFNCODE
          ELSE
            UNPACK    PRFNCODE,KEY4
          ENDIF
.
          PACK      KEY5,PASS,KEY4,SP70  * first fourth chars of PRFNCODE
          CALL      RDTEMP3
          IF        OVRCD=0
            ADD       PRFNPERA,XTTAMITM    * add to item Total
            CALL      UPTEMP3
          ELSE
            UNPACK    SP70,XCURSECT,XSUBFCOD,XSETCODE
            MOVE      PASS,XCURSECT
            UNPACK    KEY4,XSUBFCOD,XSETCODE
            MOVE      PRFNPERA,XTTAMITM    * add to item Total
            CALL      WRTEMP3
          ENDIF
.
GRIT9999  RETURN
+
.*****************************************************************************
.         Check item record with the interface file
.*****************************************************************************
CHIT0000  UNPACK    PRFNCODE,ANS,DIM10,KEY3,DIM14 * Doct/setcode/misc.code
.
          MOVE      ZERO,FORM32
          PACK      SKEY11,PRPCFTYP,DIM10        * financial type and doctor
          PACK      SKEY17,DIM14,SP70            * financial code
          MOVE      ZERO,FORM1
          MOVE      ZERO,RECFLAG
          MOVE      ZERO,COUNTA
          MOVE      ZERO,SCOUNTA
.
CHIT0200  PACK      KEY31,SKEY11,SKEY17,SP70
          CALL      RSPRPCE1                     * record on file ?
CHIT1000  CALL      RKPRPCE1
          BRANCH    OVRCD,CHIT1400               * no
.
          PACK      KEY11,PRPCFTYP,PRPCDOCT
          MATCH     KEY11,SKEY11                  * same doctor code ?
          GOTO      CHIT1400 IF NOT EQUAL
.
          PACK      KEY17,PRPCFCOD
          MATCH     KEY17,SKEY17
          GOTO      CHIT4000 IF EQUAL        * matched
.
CHIT1400  BRANCH    RECFLAG,CHIT5000         * do not try default if not first
.
.         Try default without Financial code
.
          ADD       ONE,FORM1
          BRANCH    FORM1,CHIT2000
.
          MATCH     DIM10,SAVDOCT
          GOTO      CHIT9999 IF EQUAL
.
          PRINT     *1,PIPE,*3,DIM10,"- Missing G/L Interface":
                    *37,PIPE," ******":
                    *46,PIPE,"  ******",*59,PIPE,*132,PIPE:
                    *N,*1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*132,PIPE
          ADD       TWO,CLNO
          MOVE      DIM10,SAVDOCT
          GOTO      CHIT9999
.
CHIT2000  PACK      SKEY17,SP70              * try with financial type only
          GOTO      CHIT0200
.
.         Found a record
.
CHIT4000  MOVE      ONE,RECFLAG
.
CHIT4100  ADD       ONE,COUNTA
          BRANCH    COUNTA,CHIT4200               * first record
.
.         The total percentage must be = 100%
.
          ADD       SVPCPCEN,FORM32
          COMPARE   "100.00",FORM32
          GOTO      CHIT5000 IF EQUAL
          GOTO      CHIT5000 IF NOT LESS
.
          MOVE      PRFNPERA,FORM12
          MULT      SVPCPCEN,FORM12
          DIV       "100",FORM12
          MOVE      FORM12,IBGIVALU               * Amount
          MOVE      FORM12,PRDAMNT[SCOUNTA]
          IF        SKIPFLAG=0
            CALL      WRIB0000                      * Set/write to text file
          ENDIF
.
CHIT4200
          CALL      SPCE0000                      * Save interface record
          MOVE      COUNTA,SCOUNTA
          GOTO      CHIT1000                      * next record
.
.         This must be the last percentage record, get the total of all
.         previous percentages.
.         The last % amount must be the period amount minus the total amount
.         of all previous pecentages.
.
CHIT5000  MOVE      ZERO,FORM2
          MOVE      ZERO,FORM12
CHIT5200  ADD       ONE,FORM2
          COMPARE   COUNTA,FORM2
          GOTO      CHIT5400 IF NOT LESS
          ADD       PRDAMNT[FORM2],FORM12
          GOTO      CHIT5200
.
CHIT5400  COMPARE   PRFNPERA,FORM12
          GOTO      CHIT9999 IF NOT LESS
          SUB       FORM12,PRFNPERA
.
CHIT6000  MOVE      PRFNPERA,IBGIVALU               * Amount
          IF        SKIPFLAG=0
            CALL      WRIB0000                      * Set/write to text file
          ENDIF
.
CHIT9999  RETURN
+
.*****************************************************************************
.         Set the text file   
.*****************************************************************************
WRIB0000  MOVE      SVPCDSEC,IBGIDISS             * Dissection
          MOVE      SVPCRESP,IBGIRESP             * Responsibility
          MOVE      SVPCLEDG,IBGILEDG             * Ledger
.
          IF        SVPCFTYP=2 
            MOVE      SVPCCRAC,IBGIACCT            * Debit account
            MOVE      SVPCDBAC,IBGICRAA            * Credit account
            IF        IBGIVALU<0
              MULT      "-1",IBGIVALU
              MOVE      SVPCDBAC,IBGIACCT          * Debit Account
              MOVE      SVPCCRAC,IBGICRAA          * Income Acc - Credit Acc.
            ENDIF
          ELSE
            MOVE      SVPCDBAC,IBGIACCT            * Debit Account
            MOVE      SVPCCRAC,IBGICRAA            * Income Acc - Credit Acc.
          ENDIF
.
          IF        GSTFLAG=1
            IF        SVPCFTYP=2
              MOVE      SVPCCRAC,IBGICRAA          * Income Acc - Credit Acc.
            ENDIF
          ENDIF
.
          MOVE      SP70,IBGIBASC
          CALL      WRPRFMI                    * write to invoiced file
WRIB9999  RETURN
+
.*****************************************************************************
.*                             SPCE0000                                      *
.*                      Save variables                                       *
.*****************************************************************************
SPCE0000  MOVE      PRPCFTYP,SVPCFTYP          * Financial type
          MOVE      PRPCDOCT,SVPCDOCT          * Doctor code
          MOVE      PRPCFCOD,SVPCFCOD          * Financial Code
          MOVE      PRPCPORT,SVPCPORT          * Type of Portion (category PP)
          MOVE      PRPCPCEN,SVPCPCEN          * Percentage (%)
          MOVE      PRPCDSEC,SVPCDSEC          * Dissection
          MOVE      PRPCRESP,SVPCRESP          * Responsibility
          MOVE      PRPCLEDG,SVPCLEDG          * Ledger
          MOVE      PRPCCRAC,SVPCCRAC          * Income/Credit Account
          MOVE      PRPCDBAC,SVPCDBAC          * Debit Account
SPCE9999  RETURN
+
.*****************************************************************************
.*                             RPCE0000                                      *
.*                      Restore variables                                    *
.*****************************************************************************
RPCE0000  MOVE      SVPCFTYP,PRPCFTYP          * Financial type
          MOVE      SVPCDOCT,PRPCDOCT          * Doctor code
          MOVE      SVPCFCOD,PRPCFCOD          * Financial Code
          MOVE      SVPCPORT,PRPCPORT          * Type of Portion (category PP)
          MOVE      SVPCPCEN,PRPCPCEN          * Percentage (%)
          MOVE      SVPCDSEC,PRPCDSEC          * Dissection
          MOVE      SVPCRESP,PRPCRESP          * Responsibility
          MOVE      SVPCLEDG,PRPCLEDG          * Ledger
          MOVE      SVPCCRAC,PRPCCRAC          * Income/Credit Account
          MOVE      SVPCDBAC,PRPCDBAC          * Debit Account
RPCE9999  RETURN
+
.*****************************************************************************
.*                             CHKC0000                Called by: PROC0000   *
.*                  see if item code has changed                             *
.* RETURNS:         EXIT   0 = no code change                                *
.*                         1 = code changed                                  *
.*****************************************************************************
CHKC0000  MATCH     FINCODE,PRFNCODE             * same item number ?
          GOTO      CHKC9000 IF EQUAL            * yes
.
          MATCH     ANSA,PRFNTYPE                * fees generated type ?
          GOTO      CHKC9500 IF NOT EQUAL        * no, all receipts and journals
.
          UNPACK    PRFNCODE,ANS
          MATCH     "N",ANS                      * Credit Note ?
          GOTO      CHKC6000 IF NOT EQUAL
.
          MOVE      ONE,CRDNFLAG                 * flag for credit note
          MATCH     SP70,CRDNCODE
          GOTO      CHKC9500 IF EQUAL            * it's the first credit note 
.
CHKC6000  IF        PRCNAFEE=1
            UNPACK    FINCODE,ANS,DOCT1,CODE1,FLAG1,ITEM1,SUB1
            PACK      KEY13A,DOCT1,CODE1
.
            UNPACK    PRFNCODE,ANS,DOCT2,CODE2,FLAG2,ITEM2,SUB2
            PACK      KEY13,DOCT2,CODE2
.
            MATCH     KEY13A,KEY13
            GOTO      CHKC9500 IF NOT EQUAL        * no
            MATCH     SP20,KEY13A
            GOTO      CHKC9000 IF NOT EQUAL        * no
.
          ELSE
            UNPACK    FINCODE,ANS,CODE1,FLAG1,ITEM1,SUB1
            UNPACK    PRFNCODE,ANS,CODE2,FLAG2,ITEM2,SUB2
          ENDIF
.
          MATCH     CODE1,CODE2                  * same misc. group code ?
          GOTO      CHKC9500 IF NOT EQUAL        * no
          MATCH     SP3,CODE1                    * misc. group blank ?
          GOTO      CHKC9000 IF NOT EQUAL        * no
.
          MATCH     FLAG1,FLAG2                  * same item flag ?
          GOTO      CHKC9500 IF NOT EQUAL        * no
.
          MATCH     ITEM1,ITEM2                  * same item number ?
          GOTO      CHKC9500 IF NOT EQUAL        * no
.
          MATCH     SUB1,SUB2                    * same subitem number ? 
          GOTO      CHKC9500 IF NOT EQUAL        * no
.
CHKC9000  MOVE      ZERO,EXIT
          GOTO      CHKC9999
.
CHKC9500  MOVE      ONE,EXIT
CHKC9999  RETURN
+
.****************************************************************************
.*                              NEWC0000               Called by: PROC0000  *
.*                 change in code, so print accumulated totals              *
.*                 and reset to zero                                        *
.****************************************************************************
NEWC0000  CALL      PACC0000                   * print item details
          CALL      CLAC0000                     * Clear vars
          MOVE      PRFNCODE,FINCODE
.
          MATCH     FINTYPE,PRFNTYPE             * same financial type ?
          GOTO      NEWC0600 IF NOT EQUAL
.
          IF        FEESGEN=0
            COMPARE   ONE,CRDNFLAG
            GOTO      NEWC0600 IF EQUAL         * credit note
          ENDIF
.
NEWC0200  CALL      TOTL0000                    * yes
          GOTO      NEWC9999
.
NEWC0600  MATCH     SP1,FINTYPE                * first financial type ?
          CALL      PTOT0000 IF NOT EQUAL
.
          CALL      CHKG0000                   * Check for GST
.
NEWC0800  MOVE      ZERO,TOTPER                * zero subtotals 
          MOVE      ZERO,TOTYTD
          MOVE      ZERO,TOTLYR
          MOVE      ZERO,TOTMTH1
          MOVE      ZERO,TOTMTH2
          MOVE      ZERO,TOTMTH3
          MOVE      ZERO,TOTMTH4
          MOVE      ZERO,TOTMTH5
          MOVE      ZERO,TOTMTH6
          MOVE      ZERO,TOTMTH7
          MOVE      ZERO,TOTMTH8
          MOVE      ZERO,TOTMTH9
          MOVE      ZERO,TOTMTH10
          MOVE      ZERO,TOTMTH11
          MOVE      ZERO,TOTMTH12
          MOVE      ZERO,TOTMTH13
          MOVE      PRFNTYPE,FINTYPE
.
          CALL      CHKCRD00                  * Check for credit note
          BRANCH    EXIT,NEWC9999
.
          COMPARE   FIFTY4,CLNO               * page full ?
          IF        @LESS
            MOVE      FINTYPE,ANS             * no
            REP       NUMCHAR,ANS
            MOVE      ANS,FORM1
            BRANCH    FORM1,NEWC1000:         * fees generated
                            NEWC2000:         * cash received
                            NEWC3000:         * journals
                            NEWC4000:         * merchant cards claimed
                            NEWC5000:         * merchant cards paid
                            NEWC5000:         * merchant cards commission
                            NEWC5000          * merchant cards journals
.
NEWC1000    CALL      FEES0000
            GOTO      NEWC5000
.
NEWC2000    CALL      CASH0000
            GOTO      NEWC5000
.
NEWC3000    CALL      JOUR0000
            GOTO      NEWC5000
.
NEWC4000    CALL      MERC0000
            GOTO      NEWC5000
          ENDIF
.
NEWC5000  CALL      TOTL0000
.
NEWC9999  RETURN
+
.****************************************************************************
.         Checking for Credit Note
.****************************************************************************
CHKCRD00  MOVE      ZERO,EXIT
          COMPARE   ONE,CRDNFLAG
          GOTO      CHKCRD99 IF NOT EQUAL
          MATCH     SP70,CRDNCODE
          IF        @EQUAL
            MOVE      ONE,FEESGEN              * set flag to Generating Cr.Note
            MOVE      PRFNCODE,FINCODE
            MOVE      PRFNCODE,CRDNCODE
            CALL      CLAC0000                 * Clear vars
            GOTO      CHKCRD99
          ENDIF
          MOVE      PRFNCODE,CRDNCODE
          MATCH     ANSA,FINTYPE                * fees generated type ?
          GOTO      CHKCRD99 IF NOT EQUAL
          CALL      TOTL0000                    * yes
.
CHKCRD90  MOVE      ONE,EXIT
CHKCRD99  RETURN
+
.****************************************************************************
.*                              PACC0000               Called by: NEWC0000  *
.*                                                                ENDT0000  *
.*                                                                ENDF0000  *
.*                                                                ENDP0000  *
.*        print the details for an item and its accumulated totals          *
.****************************************************************************
PACC0000  MATCH     SP70,FINCODE                 * finance code blank ?
          GOTO      PACC9999 IF EQUAL            * yes
.
          MOVE      ACCMTH1,ACCYTD               * update year to date totals
          ADD       ACCMTH2,ACCYTD
          ADD       ACCMTH3,ACCYTD
          ADD       ACCMTH4,ACCYTD
          ADD       ACCMTH5,ACCYTD
          ADD       ACCMTH6,ACCYTD
          ADD       ACCMTH7,ACCYTD
          ADD       ACCMTH8,ACCYTD
          ADD       ACCMTH9,ACCYTD
          ADD       ACCMTH10,ACCYTD
          ADD       ACCMTH11,ACCYTD
          ADD       ACCMTH12,ACCYTD
          ADD       ACCMTH13,ACCYTD
.
          COMPARE   FIFTY5,CLNO                  * page full ?
          CALL      HEAD0000 IF NOT LESS         * yes
.
          CALL      TITL0000                     * get title for line
          DISPLAY   *P29:24,*EL,*V2LON,MISCTTL;
.
          BRANCH    FTLFLAG,PACC9999
.
          COMPARE   TEN3,NUMPERS                 * 12 periods ?
          IF        @LESS
             PRINT     *1,PIPE,*3,MISCTTL,*33,PIPE,*35,ACCPER,*46,PIPE:
                       *48,ACCYTD,*59,PIPE,*61,ACCMTH1,*73,ACCMTH2,*85,ACCMTH3:
                       *97,ACCMTH4,*109,ACCMTH5,*121,ACCMTH6,*132,PIPE:
                       *N,PIPE,*3,MISCITM,*26,MISCODE,*33,PIPE,*46,PIPE:
                       *48,ACCLYR,*59,PIPE,*61,ACCMTH7,*73,ACCMTH8,*85,ACCMTH9:
                       *97,ACCMTH10,*109,ACCMTH11,*121,ACCMTH12,*132,PIPE
             ADD       THREE,CLNO
          ELSE
             PRINT     *1,PIPE,*3,MISCTTL,*33,PIPE,*35,ACCPER,*46,PIPE:
                       *48,ACCYTD,*59,PIPE,*61,ACCMTH1,*73,ACCMTH2,*85,ACCMTH3:
                       *97,ACCMTH4,*109,ACCMTH5,*121,ACCMTH6,*132,PIPE:
                       *N,PIPE,*3,MISCITM,*26,MISCODE,*33,PIPE,*46,PIPE:
                       *48,ACCLYR,*59,PIPE,*61,ACCMTH7,*73,ACCMTH8,*85,ACCMTH9:
                       *97,ACCMTH10,*109,ACCMTH11,*121,ACCMTH12,*132,PIPE:
                       *N,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*61,ACCMTH13,*132,PIPE
             ADD       FOUR,CLNO
          ENDIF
.
.         draw a blank line
.
          PRINT     *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*132,PIPE
.
          ADD       ACCPER,TOTPER                * update subtotals
          ADD       ACCYTD,TOTYTD
          ADD       ACCLYR,TOTLYR
          ADD       ACCMTH1,TOTMTH1
          ADD       ACCMTH2,TOTMTH2
          ADD       ACCMTH3,TOTMTH3
          ADD       ACCMTH4,TOTMTH4
          ADD       ACCMTH5,TOTMTH5
          ADD       ACCMTH6,TOTMTH6
          ADD       ACCMTH7,TOTMTH7
          ADD       ACCMTH8,TOTMTH8
          ADD       ACCMTH9,TOTMTH9
          ADD       ACCMTH10,TOTMTH10
          ADD       ACCMTH11,TOTMTH11
          ADD       ACCMTH12,TOTMTH12
          ADD       ACCMTH13,TOTMTH13
.
PACC9999  RETURN
+
.****************************************************************************
.*                              CLAC0000                                    *
.*                      Clear variables                                     *
.****************************************************************************
CLAC0000  MOVE      ZERO,ACCPER
          MOVE      ZERO,ACCLYR
          MOVE      ZERO,ACCMTH1
          MOVE      ZERO,ACCMTH2
          MOVE      ZERO,ACCMTH3
          MOVE      ZERO,ACCMTH4
          MOVE      ZERO,ACCMTH5
          MOVE      ZERO,ACCMTH6
          MOVE      ZERO,ACCMTH7
          MOVE      ZERO,ACCMTH8
          MOVE      ZERO,ACCMTH9
          MOVE      ZERO,ACCMTH10
          MOVE      ZERO,ACCMTH11
          MOVE      ZERO,ACCMTH12
          MOVE      ZERO,ACCMTH13
CLAC9999  RETURN
+
.****************************************************************************
.*                              CDEP0000               Called by: ENDT0000  *
.*                      check for deposit amounts                           *
.****************************************************************************
CDEP0000  OPEN      COMDEPA7,"comdepaf"
          OPEN      RCPDTEA1,"rcpdteaf"
          OPEN      PATDRGA2,"patdrgaf"
          MOVE      ZERO,EXIT                     * Reset deposits found
          MOVE      "0",CMDESTAT
          PACK      KEY26,CMDESTAT,SP70           * Read from Deposit Held 
          CALL      RSCMDEP7
CDEP1000  CALL      RKCMDEP7                      * Read next record
          BRANCH    OVRCD,CDEP9000
.
          MATCH     "0",CMDESTAT                  * Deposit held?
          GOTO      CDEP9000 IF NOT EQUAL
          COMPARE   FOUR,CMDESYST
          GOTO      CDEP1000 IF NOT EQUAL         * Not a private practice
.
.         Read receipt details
.
          PACK      KEY17,CMDERECN,CMDETCNT
          CALL      RDRCDTE1
          BRANCH    OVRCD,CDEP1000
.
          PACK      KEY14,CMDETDAT,SP20
          CALL      RDSDRGA2                * Position on & read the date range
          CALL      RDKDRGA2                  file
          BRANCH    OVRCD,CDEP1000
.
          MATCH     NOWYEAR,DRGYR
          GOTO      CDEP2000 IF EQUAL       * The current financial year
          GOTO      CDEP1000 IF NOT LESS    * The next financial year
.
CDEP2000  MOVE      ONE,EXIT                * Set deposits found
CDEP9000  
CDEP9999  RETURN
+
.****************************************************************************
.*                              PDEP0000               Called by: ENDT0000  *
.*                    print total deposit amounts                           *
.****************************************************************************
PDEP0000  OPEN      COMDEPA7,"comdepaf"
          OPEN      RCPDTEA1,"rcpdteaf"
          OPEN      PATDRGA2,"patdrgaf"
          MOVE      ZERO,EXIT
          DISPLAY   *P14:24,*EL,*V2LON,"CASH RECEIVED";
.
. ----- Clear the accumulation & deposit totals -----
.
          MOVE      ZERO,FORM2
          REPEAT
            ADD       ONE,FORM2
            STORE     ZERO,FORM2,ACCMTH1,ACCMTH2,ACCMTH3,ACCMTH4,ACCMTH5:
                                 ACCMTH6,ACCMTH7,ACCMTH8,ACCMTH9,ACCMTH10:
                                 ACCMTH11,ACCMTH12,ACCMTH13,ACCPER,ACCYTD:
                                 ACCLYR
            STORE     ZERO,FORM2,DEPMTH1,DEPMTH2,DEPMTH3,DEPMTH4,DEPMTH5:
                                 DEPMTH6,DEPMTH7,DEPMTH8,DEPMTH9,DEPMTH10:
                                 DEPMTH11,DEPMTH12,DEPMTH13,DEPPER,DEPYTD:
                                 DEPLYR
          UNTIL     FORM2>=16
.
. ----- Load the deposit totals -----
.
          MOVE      "0",CMDESTAT
          PACK      KEY26,CMDESTAT,SP70
          CALL      RSCMDEP7
PDEP1000  CALL      RKCMDEP7                      * Read next record
          BRANCH    OVRCD,PDEP3000
          MATCH     "0",CMDESTAT                  * Deposit held
          GOTO      PDEP3000 IF NOT EQUAL
          COMPARE   FOUR,CMDESYST
          GOTO      PDEP1000 IF NOT EQUAL         * Not a private practice
.
.         Read receipt details
.
          PACK      KEY17,CMDERECN,CMDETCNT
          CALL      RDRCDTE1
          BRANCH    OVRCD,PDEP1000
.
          PACK      KEY14,CMDETDAT,SP20
          CALL      RDSDRGA2                * Position on & read the date range
          CALL      RDKDRGA2                  file
          BRANCH    OVRCD,PDEP1000
.
          MATCH     NOWYEAR,DRGYR
          GOTO      PDEP2000 IF EQUAL       * The current financial year
          GOTO      PDEP1000 IF NOT LESS    * The next financial year
.
          ADD       RCDTAMNT,DEPLYR         * Add deposit amount to previous
          GOTO      PDEP1000                  year total
.
PDEP2000  MOVE      DRGNUM,FORM2            * Deposits as of financial period
          STORE     RCDTAMNT,FORM2,ACCMTH1,ACCMTH2,ACCMTH3,ACCMTH4,ACCMTH5:
                                   ACCMTH6,ACCMTH7,ACCMTH8,ACCMTH9,ACCMTH10:
                                   ACCMTH11,ACCMTH12,ACCMTH13
          ADD       ACCMTH1,DEPMTH1
          ADD       ACCMTH2,DEPMTH2
          ADD       ACCMTH3,DEPMTH3
          ADD       ACCMTH4,DEPMTH4
          ADD       ACCMTH5,DEPMTH5
          ADD       ACCMTH6,DEPMTH6
          ADD       ACCMTH7,DEPMTH7
          ADD       ACCMTH8,DEPMTH8
          ADD       ACCMTH9,DEPMTH9
          ADD       ACCMTH10,DEPMTH10
          ADD       ACCMTH11,DEPMTH11
          ADD       ACCMTH12,DEPMTH12
          ADD       ACCMTH13,DEPMTH13
          ADD       RCDTAMNT,DEPPER
          ADD       RCDTAMNT,DEPYTD
.
. ----- Clear the accumulation totals -----
.
          MOVE      ZERO,FORM2
          REPEAT
            ADD       ONE,FORM2
            STORE     ZERO,FORM2,ACCMTH1,ACCMTH2,ACCMTH3,ACCMTH4,ACCMTH5:
                                 ACCMTH6,ACCMTH7,ACCMTH8,ACCMTH9,ACCMTH10:
                                 ACCMTH11,ACCMTH12,ACCMTH13
          UNTIL     FORM2>=13
          GOTO      PDEP1000
.
. ----- Print the deposit totals -----
.
PDEP3000  MOVE      "B",FINTYPE             * Set to cash received
          IF        CLNO>=55
            CALL      HEAD0000              * Print page header
          ELSE
            CALL      CASH0000
          ENDIF
.
          COMPARE   TEN3,NUMPERS            * 12 periods ?
          IF        @LESS
             PRINT     *1,PIPE,*3,"PATIENT",*33,PIPE,*35,DEPPER,*46,PIPE:
                       *48,DEPYTD,*59,PIPE,*61,DEPMTH1,*73,DEPMTH2,*85,DEPMTH3:
                       *97,DEPMTH4,*109,DEPMTH5,*121,DEPMTH6,*132,PIPE:
                       *N,PIPE,*33,PIPE,*46,PIPE,*48,DEPLYR,*59,PIPE:
                       *61,DEPMTH7,*73,DEPMTH8,*85,DEPMTH9,*97,DEPMTH10:
                       *109,DEPMTH11,*121,DEPMTH12,*132,PIPE
             ADD       THREE,CLNO
          ELSE
             PRINT     *1,PIPE,*3,"PATIENT",*33,PIPE,*35,DEPPER,*46,PIPE:
                       *48,DEPYTD,*59,PIPE,*61,DEPMTH1,*73,DEPMTH2,*85,DEPMTH3:
                       *97,DEPMTH4,*109,DEPMTH5,*121,DEPMTH6,*132,PIPE:
                       *N,PIPE,*33,PIPE,*46,PIPE,*48,DEPLYR,*59,PIPE:
                       *61,DEPMTH7,*73,DEPMTH8,*85,DEPMTH9,*97,DEPMTH10:
                       *109,DEPMTH11,*121,DEPMTH12,*132,PIPE,*N,PIPE,*33,PIPE:
                       *46,PIPE,*59,PIPE,*61,DEPMTH13,*132,PIPE
             ADD       FOUR,CLNO
          ENDIF
          PRINT     *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*132,PIPE
.
          MOVE      DEPPER,TOTPER
          MOVE      DEPYTD,TOTYTD
          MOVE      DEPLYR,TOTLYR
          MOVE      DEPMTH1,TOTMTH1
          MOVE      DEPMTH2,TOTMTH2
          MOVE      DEPMTH3,TOTMTH3
          MOVE      DEPMTH4,TOTMTH4
          MOVE      DEPMTH5,TOTMTH5
          MOVE      DEPMTH6,TOTMTH6
          MOVE      DEPMTH7,TOTMTH7
          MOVE      DEPMTH8,TOTMTH8
          MOVE      DEPMTH9,TOTMTH9
          MOVE      DEPMTH10,TOTMTH10
          MOVE      DEPMTH11,TOTMTH11
          MOVE      DEPMTH12,TOTMTH12
          MOVE      DEPMTH13,TOTMTH13
          CLOSE     PATDRGA2
PDEP9999  RETURN
+
.****************************************************************************
.*                              PTOT0000               Called by: NEWC0000  *
.*           print totals for the previous financial type         ENDF0000  *
.*                                                                ENDT0000  *
.*                                                                ENDP0000  *
.****************************************************************************
PTOT0000  COMPARE   FIFTY5,CLNO                  * page full ?
          CALL      HEAD0000 IF NOT LESS         * yes
.
          COMPARE   TEN3,NUMPERS                 * 12 periods in year ?
          IF        @LESS
             CALL      SHLN0000                  * print short line
.
             PRINT     *1,PIPE,*3,"TOTAL",*33,PIPE,*35,TOTPER,*46,PIPE:
                       *48,TOTYTD,*59,PIPE,*61,TOTMTH1,*73,TOTMTH2,*85,TOTMTH3:
                       *97,TOTMTH4,*109,TOTMTH5,*121,TOTMTH6,*132,PIPE:
                       *N,*1,PIPE,*33,PIPE,*46,PIPE,*48,TOTLYR,*59,PIPE:
                       *61,TOTMTH7,*73,TOTMTH8,*85,TOTMTH9,*97,TOTMTH10:
                       *109,TOTMTH11,*121,TOTMTH12,*132,PIPE
             ADD       THREE,CLNO
          ELSE
             CALL      SHLN0000                  * print short line
.
             PRINT     *1,PIPE,*3,"TOTAL",*33,PIPE,*35,TOTPER,*46,PIPE:
                       *48,TOTYTD,*59,PIPE,*61,TOTMTH1,*73,TOTMTH2,*85,TOTMTH3:
                       *97,TOTMTH4,*109,TOTMTH5,*121,TOTMTH6,*132,PIPE:
                       *N,*1,PIPE,*33,PIPE,*46,PIPE,*48,TOTLYR,*59,PIPE:
                       *61,TOTMTH7,*73,TOTMTH8,*85,TOTMTH9,*97,TOTMTH10:
                       *109,TOTMTH11,*121,TOTMTH12,*132,PIPE:
                       *N,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*61,TOTMTH13,*132,PIPE
             ADD       FOUR,CLNO
          ENDIF
.
          MOVE      FINTYPE,ANS
          REP       NUMCHAR,ANS
          MOVE      ANS,FORM1
          BRANCH    FORM1,PTOT1000:              * fees generated
                          PTOT2000:              * cash received
                          PTOT3000:              * journals
                          PTOT1000:              * merchant cards claimed
                          PTOT2000:              * merchant cards paid
                          PTOT4000:              * merchant cards commission
                          PTOT3000               * merchant cards journals
.
PTOT1000  CALL      GFEE0000
          GOTO      PTOT9999
.
PTOT2000  CALL      GCSH0000
          GOTO      PTOT9999
.
PTOT3000  CALL      GJRN0000
          GOTO      PTOT9999
.
PTOT4000  CALL      GCOM0000
.
PTOT9999  RETURN
+
.****************************************************************************
.*                              GFEE0000               Called by: PTOT0000  *
.*                    update fees grand totals                              *
.****************************************************************************
GFEE0000  BRANCH    GSTFLAG,GFEE1000
.
          IF        CRDNFLAG=1
            MATCH     SP70,CRDNCODE
            GOTO      GFEE0600 IF NOT EQUAL
          ENDIF
.
          MOVE      TOTYTD,GFEESYTD
          MOVE      TOTPER,GFEESPER
          MOVE      TOTLYR,GFEESLYR
          MOVE      TOTMTH1,GFEESM1
          MOVE      TOTMTH2,GFEESM2
          MOVE      TOTMTH3,GFEESM3
          MOVE      TOTMTH4,GFEESM4
          MOVE      TOTMTH5,GFEESM5
          MOVE      TOTMTH6,GFEESM6
          MOVE      TOTMTH7,GFEESM7
          MOVE      TOTMTH8,GFEESM8
          MOVE      TOTMTH9,GFEESM9
          MOVE      TOTMTH10,GFEESM10
          MOVE      TOTMTH11,GFEESM11
          MOVE      TOTMTH12,GFEESM12
          MOVE      TOTMTH13,GFEESM13
          GOTO      GFEE9999
.
GFEE0600  MOVE      TOTYTD,CFEESYTD
          MOVE      TOTPER,CFEESPER
          MOVE      TOTLYR,CFEESLYR
          MOVE      TOTMTH1,CFEESM1
          MOVE      TOTMTH2,CFEESM2
          MOVE      TOTMTH3,CFEESM3
          MOVE      TOTMTH4,CFEESM4
          MOVE      TOTMTH5,CFEESM5
          MOVE      TOTMTH6,CFEESM6
          MOVE      TOTMTH7,CFEESM7
          MOVE      TOTMTH8,CFEESM8
          MOVE      TOTMTH9,CFEESM9
          MOVE      TOTMTH10,CFEESM10
          MOVE      TOTMTH11,CFEESM11
          MOVE      TOTMTH12,CFEESM12
          MOVE      TOTMTH13,CFEESM13
          GOTO      GFEE9999
.
GFEE1000  BRANCH    CRDNFLAG,GFEE1600
          MOVE      TOTYTD,GFGSTYTD
          MOVE      TOTPER,GFGSTPER
          MOVE      TOTLYR,GFGSTLYR
          MOVE      TOTMTH1,GFGSTM1
          MOVE      TOTMTH2,GFGSTM2
          MOVE      TOTMTH3,GFGSTM3
          MOVE      TOTMTH4,GFGSTM4
          MOVE      TOTMTH5,GFGSTM5
          MOVE      TOTMTH6,GFGSTM6
          MOVE      TOTMTH7,GFGSTM7
          MOVE      TOTMTH8,GFGSTM8
          MOVE      TOTMTH9,GFGSTM9
          MOVE      TOTMTH10,GFGSTM10
          MOVE      TOTMTH11,GFGSTM11
          MOVE      TOTMTH12,GFGSTM12
          MOVE      TOTMTH13,GFGSTM13
          GOTO      GFEE9999
.
GFEE1600  MOVE      TOTYTD,CFGSTYTD
          MOVE      TOTPER,CFGSTPER
          MOVE      TOTLYR,CFGSTLYR
          MOVE      TOTMTH1,CFGSTM1
          MOVE      TOTMTH2,CFGSTM2
          MOVE      TOTMTH3,CFGSTM3
          MOVE      TOTMTH4,CFGSTM4
          MOVE      TOTMTH5,CFGSTM5
          MOVE      TOTMTH6,CFGSTM6
          MOVE      TOTMTH7,CFGSTM7
          MOVE      TOTMTH8,CFGSTM8
          MOVE      TOTMTH9,CFGSTM9
          MOVE      TOTMTH10,CFGSTM10
          MOVE      TOTMTH11,CFGSTM11
          MOVE      TOTMTH12,CFGSTM12
          MOVE      TOTMTH13,CFGSTM13
.
GFEE9999  RETURN
+
.****************************************************************************
.*                              GCSH0000               Called by: PTOT0000  *
.*                   update cash received grand totals                      *
.****************************************************************************
GCSH0000  MOVE      TOTYTD,GCASHYTD
          MOVE      TOTLYR,GCASHLYR
          MOVE      TOTPER,GCASHPER
          MOVE      TOTMTH1,GCASHM1
          MOVE      TOTMTH2,GCASHM2
          MOVE      TOTMTH3,GCASHM3
          MOVE      TOTMTH4,GCASHM4
          MOVE      TOTMTH5,GCASHM5
          MOVE      TOTMTH6,GCASHM6
          MOVE      TOTMTH7,GCASHM7
          MOVE      TOTMTH8,GCASHM8
          MOVE      TOTMTH9,GCASHM9
          MOVE      TOTMTH10,GCASHM10
          MOVE      TOTMTH11,GCASHM11
          MOVE      TOTMTH12,GCASHM12
          MOVE      TOTMTH13,GCASHM13
GCSH9999  RETURN
+
.****************************************************************************
.*                              GJRN0000               Called by: PTOT0000  *
.*                     update journal grand totals                          *
.****************************************************************************
GJRN0000  BRANCH    GSTFLAG,GJRN1000
          MOVE      TOTYTD,GJOURYTD
          MOVE      TOTLYR,GJOURLYR
          MOVE      TOTPER,GJOURPER
          MOVE      TOTMTH1,GJOURM1
          MOVE      TOTMTH2,GJOURM2
          MOVE      TOTMTH3,GJOURM3
          MOVE      TOTMTH4,GJOURM4
          MOVE      TOTMTH5,GJOURM5
          MOVE      TOTMTH6,GJOURM6
          MOVE      TOTMTH7,GJOURM7
          MOVE      TOTMTH8,GJOURM8
          MOVE      TOTMTH9,GJOURM9
          MOVE      TOTMTH10,GJOURM10
          MOVE      TOTMTH11,GJOURM11
          MOVE      TOTMTH12,GJOURM12
          MOVE      TOTMTH13,GJOURM13
          GOTO      GJRN9999
.
GJRN1000  MOVE      TOTYTD,GJGSTYTD
          MOVE      TOTLYR,GJGSTLYR
          MOVE      TOTPER,GJGSTPER
          MOVE      TOTMTH1,GJGSTM1
          MOVE      TOTMTH2,GJGSTM2
          MOVE      TOTMTH3,GJGSTM3
          MOVE      TOTMTH4,GJGSTM4
          MOVE      TOTMTH5,GJGSTM5
          MOVE      TOTMTH6,GJGSTM6
          MOVE      TOTMTH7,GJGSTM7
          MOVE      TOTMTH8,GJGSTM8
          MOVE      TOTMTH9,GJGSTM9
          MOVE      TOTMTH10,GJGSTM10
          MOVE      TOTMTH11,GJGSTM11
          MOVE      TOTMTH12,GJGSTM12
          MOVE      TOTMTH13,GJGSTM13
GJRN9999  RETURN
+
.****************************************************************************
.*                              GCOM0000               Called by: PTOT0000  *
.*                   update grand totals for merchant commisssion           *
.****************************************************************************
GCOM0000  MOVE      TOTYTD,GCOMMYTD
          MOVE      TOTLYR,GCOMMLYR
          MOVE      TOTPER,GCOMMPER
          MOVE      TOTMTH1,GCOMMM1
          MOVE      TOTMTH2,GCOMMM2
          MOVE      TOTMTH3,GCOMMM3
          MOVE      TOTMTH4,GCOMMM4
          MOVE      TOTMTH5,GCOMMM5
          MOVE      TOTMTH6,GCOMMM6
          MOVE      TOTMTH7,GCOMMM7
          MOVE      TOTMTH8,GCOMMM8
          MOVE      TOTMTH9,GCOMMM9
          MOVE      TOTMTH10,GCOMMM10
          MOVE      TOTMTH11,GCOMMM11
          MOVE      TOTMTH12,GCOMMM12
          MOVE      TOTMTH13,GCOMMM13
GCOM9999  RETURN
+
.****************************************************************************
.*                              TITL0000               Called by: PACC0000  *
.*          get the appropriate titles for the detail line                  *
.****************************************************************************
TITL0000  MOVE      SP6,MISCODE
          MOVE      SP20,MISCITM
          MOVE      ZERO,FTLFLAG
.
          IF        GSTFLAG=1
            MOVE      "GST",MISCTTL
            GOTO      TITL9999
          ENDIF
.
          MOVE      FINTYPE,ANS
          REP       NUMCHAR,ANS
          MOVE      ANS,FORM1
          BRANCH    FORM1,TITL1000:              * fees generated
                          TITL2000:              * cash received
                          TITL3000:              * journals
                          TITL4000:              * merchant cards claimed
                          TITL4000:              * merchant cards paid
                          TITL4000:              * merchant cards commission
                          TITL4000               * merchant cards journals
.
TITL1000  CALL      FTTL0000
          GOTO      TITL9999
.
TITL2000  CALL      CTTL0000
          GOTO      TITL9999
.
TITL3000  CALL      JTTL0000
          GOTO      TITL9999
.
TITL4000  CALL      MTTL0000
.
TITL9999  RETURN
+
.****************************************************************************
.*                            FTTL0000                 Called by: TITL0000  *
.*       format the title for the detail line for fees invoiced             *
.****************************************************************************
FTTL0000  COMPARE   ONE,PRCNGLIN                 * running G/L Interface ?
          GOTO      FTTL0200 IF NOT EQUAL        * no
.
.         BRANCH    GSTFLAG,FTTL7000             * GST breaks up by ledger
.
FTTL0200  IF        PRCNAFEE=1
            UNPACK    FINCODE,ANS,DOCT1,CODE1,FLAG1,ITEM1,SUB1
.
            PACK      MISCTTL,UNKDOCT,DOCT1
            PACK      KEY10,DOCT1,SP10
            CALL      RDPMHCP1                * read the doctors file
            IF        OVRCD=0
              MOVE      PMHCSNAM,PACSNAME
              MOVE      PMHCGNAM,PACGNAME
              MOVE      PMHCTITL,PACTITLE
              MOVE      ONE,PACFRMT
              CALL      PACNAME                 * pack the doctors name
              MOVE      "-",ANS
              PACK      MISCTTL,KEY10,ANS,PACFNAME
.             MOVE      PACFNAME,MISCTTL
            ENDIF
.
.           PACK      MISCTTL,UNKMGRP,CODE1
.           PACK      KEY5,CODEPG,CODE1
.           CALL      RDCODE1
.           IF        OVRCD=0
.             MOVE      TDESC,MISCTTL
.           ENDIF
.
            PACK      MISCODE,OPNBRA,CODE1,CLSBRA
            MATCH     SP3,CODE1
            IF        @EQUAL
              MATCH     SP3,SUB1                     * subitem blank ?
              IF        @EQUAL
                PACK      MISCITM,OPNSBRA,ITEM1,CLSSBRA
              ELSE
                PACK      MISCITM,OPNSBRA,ITEM1,SLASH,SUB1,CLSSBRA
              ENDIF
            ELSE
.             PACK      MISCITM,UNKMGRP,CODE1
.             PACK      KEY5,CODEPG,CODE1
.             CALL      RDCODE1
.             IF        OVRCD=0
.               PACK      MISCITM,TDESC
.             ENDIF
            ENDIF
          ELSE
            UNPACK    FINCODE,ANS,CODE1,FLAG1,ITEM1,SUB1
            MATCH     SP3,CODE1                    * miscellaneous group blank ?
            GOTO      FTTL2000 IF EQUAL            * yes
.
            PACK      MISCTTL,UNKMGRP,CODE1
            PACK      KEY5,CODEPG,CODE1
            CALL      RDCODE1
            IF        OVRCD=0
              MOVE      TDESC,MISCTTL
            ENDIF
            PACK      MISCODE,OPNBRA,CODE1,CLSBRA
          ENDIF
          GOTO      FTTL9999
.
.         No miscellaneous group 
.
FTTL2000  MATCH     SP3,SUB1                     * subitem blank ?
          IF        @EQUAL
             PACK      MISCTTL,UNKMISC,ITEM1     * yes
          ELSE
             PACK      MISCTTL,UNKMISC,ITEM1,OPNBRA,SUB1,CLSBRA
          ENDIF
          MOVE      SP6,MISCODE
.
.         Get the item description and group
.
          MOVE      FLAG1,FORM2
          MOVE      ITEM1,KEY9
          PACK      KEY22,FORM2,ITEM1,SUB1,NINE8
          CALL      ITEM0000
          BRANCH    EXIT,FTTL9999                * item not on file
.
          MOVE      PRITDESC,MISCTTL
          PACK      MISCITM,OPNSBRA,ITEM1,CLSSBRA
.
          MATCH     SP3,PRITSETC
          GOTO      FTTL9999 IF EQUAL
          PACK      MISCODE,OPNBRA,PRITSETC,CLSBRA
          GOTO      FTTL9999
.
FTTL7000  BRANCH    FTLFLAG,FTTL7500
.
          MOVE      ZERO,ACCYTD
          MOVE      ZERO,FTLSIZE
          MOVE      ONE,FTLFLAG
          PACK      KEY30,PRCNDATE,SP20,SP20    * position at the beginning date
          CALL      RSPRDT2
FTTL7500  CALL      RKPRDT2
          BRANCH    OVRCD,FTTL9999
.
          CALL      CLAC0000
          MATCH     PRDTSDAT,CURRDATE            * check if past end date
          GOTO      FTTL9999 IF LESS
.
          MATCH     SP70,STRTPRAC
          IF        !@EQUAL
            MATCH     STRTPRAC,PRDTPRAC         * check range of medical prac.
            GOTO      FTTL7500 IF LESS
          ENDIF
.
          MATCH     "zzzzzz",ENDPRAC
          IF        !@EQUAL
            MATCH     PRDTPRAC,ENDPRAC           * check end of med.practice
            GOTO      FTTL7500 IF LESS
          ENDIF
.
          COMPARE   ZERO,PRDTGSTM
          GOTO      FTTL7500 IF EQUAL
.
          MOVE      ZERO,FORM2
          COMPARE   FTLSIZE,FORM2
          GOTO      FTTL7600 IF EQUAL
.
          ADD       ONE,FORM2
          WHILE     FORM2 <= FTLSIZE
            MATCH     PRDTTTYP,FTLARRY[FORM2]
            GOTO      FTTL7500 IF EQUAL
            ADD       ONE,FORM2
          DO
FTTL7600  ADD       ONE,FTLSIZE
          MOVE      "-",ANS
          PACK      MISCTTL,PRDTTTYP,ANS,PRDTDESC
          MOVE      PRDTTTYP,FTLARRY[FTLSIZE]
          PACK      DIM30,PRDTSDAT,PRDTUNIQ,PRDTINVN,PRDTTRAN
          UNPACK    PRDTSDAT,DIM4
          
          PACK      PRFNCODE,ANSM,PRDTTTYP,SP70
          PACK      KEY39,DIM4,ANSC,PRFNCODE,PRDTPRAC,SP70   * key for prifigaf
.
          UNPACK    PRDTSDAT,KEY4,DIM2
          MOVE      DIM2,FORM2
          STORE     PRDTGSTM,FORM2,ACCMTH1,ACCMTH2,ACCMTH3,ACCMTH4,ACCMTH5:
                                   ACCMTH6,ACCMTH7,ACCMTH8,ACCMTH9,ACCMTH10:
                                   ACCMTH11,ACCMTH12,ACCMTH13
.
FTTL7700  CALL      RKPRDT2
          BRANCH    OVRCD,FTTL8000
.
          MATCH     PRDTSDAT,CURRDATE            * check if past end date
          GOTO      FTTL8000 IF LESS
.
          MATCH     SP70,STRTPRAC
          IF        !@EQUAL
            MATCH     STRTPRAC,PRDTPRAC         * check range of medical prac.
            GOTO      FTTL7700 IF LESS
          ENDIF
.
          MATCH     "zzzzzz",ENDPRAC
          IF        !@EQUAL
            MATCH     PRDTPRAC,ENDPRAC          * check end of med.practice
            GOTO      FTTL7700 IF LESS
          ENDIF
.
          MATCH     PRDTTTYP,FTLARRY[FTLSIZE]
          GOTO      FTTL7700 IF NOT EQUAL
.
          UNPACK    PRDTSDAT,KEY4,DIM2
          MOVE      DIM2,FORM2
.
          COMPARE   ZERO,PRDTGSTM
          GOTO      FTTL7500 IF EQUAL
.
          LOAD      FORM12,FORM2,ACCMTH1,ACCMTH2,ACCMTH3,ACCMTH4,ACCMTH5:
                                   ACCMTH6,ACCMTH7,ACCMTH8,ACCMTH9,ACCMTH10:
                                   ACCMTH11,ACCMTH12,ACCMTH13
.
          ADD       FORM12,PRDTGSTM                * add old to new amount
.
          STORE     PRDTGSTM,FORM2,ACCMTH1,ACCMTH2,ACCMTH3,ACCMTH4,ACCMTH5:
                                   ACCMTH6,ACCMTH7,ACCMTH8,ACCMTH9,ACCMTH10:
                                   ACCMTH11,ACCMTH12,ACCMTH13
.
          MOVE      ACCMTH1,ACCYTD               * update year to date totals
          ADD       ACCMTH2,ACCYTD
          ADD       ACCMTH3,ACCYTD
          ADD       ACCMTH4,ACCYTD
          ADD       ACCMTH5,ACCYTD
          ADD       ACCMTH6,ACCYTD
          ADD       ACCMTH7,ACCYTD
          ADD       ACCMTH8,ACCYTD
          ADD       ACCMTH9,ACCYTD
          ADD       ACCMTH10,ACCYTD
          ADD       ACCMTH11,ACCYTD
          ADD       ACCMTH12,ACCYTD
          ADD       ACCMTH13,ACCYTD
.
          GOTO      FTTL7700
.
FTTL8000  COMPARE   FIFTY5,CLNO                  * page full ?
          CALL      HEAD0000 IF NOT LESS         * yes
.
          DISPLAY   *P29:24,*EL,*V2LON,MISCTTL;
.
          MOVE      ZERO,PRFNPERA
          MOVE      ZERO,PRFNLAST
          CALL      RDPRFN1                      * read prifigaf for GST
          MOVE      PRFNPERA,ACCPER
          MULT      SEQ,ACCPER
          MOVE      PRFNLAST,ACCLYR
          MULT      SEQ,ACCLYR
.
          COMPARE   TEN3,NUMPERS                 * 12 periods ?
          IF        @LESS
             PRINT     *1,PIPE,*3,MISCTTL,*33,PIPE,*35,ACCPER,*46,PIPE:
                       *48,ACCYTD,*59,PIPE,*61,ACCMTH1,*73,ACCMTH2,*85,ACCMTH3:
                       *97,ACCMTH4,*109,ACCMTH5,*121,ACCMTH6,*132,PIPE:
                       *N,PIPE,*3,MISCITM,*26,MISCODE,*33,PIPE,*46,PIPE:
                       *48,ACCLYR,*59,PIPE,*61,ACCMTH7,*73,ACCMTH8,*85,ACCMTH9:
                       *97,ACCMTH10,*109,ACCMTH11,*121,ACCMTH12,*132,PIPE
             ADD       THREE,CLNO
          ELSE
             PRINT     *1,PIPE,*3,MISCTTL,*33,PIPE,*35,ACCPER,*46,PIPE:
                       *48,ACCYTD,*59,PIPE,*61,ACCMTH1,*73,ACCMTH2,*85,ACCMTH3:
                       *97,ACCMTH4,*109,ACCMTH5,*121,ACCMTH6,*132,PIPE:
                       *N,PIPE,*3,MISCITM,*26,MISCODE,*33,PIPE,*46,PIPE:
                       *48,ACCLYR,*59,PIPE,*61,ACCMTH7,*73,ACCMTH8,*85,ACCMTH9:
                       *97,ACCMTH10,*109,ACCMTH11,*121,ACCMTH12,*132,PIPE:
                       *N,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*61:
                       ACCMTH13,*132,PIPE
          ENDIF
.
.         draw a blank line
.
          PRINT     *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*132,PIPE
.
          ADD       ACCPER,TOTPER                * update subtotals
          ADD       ACCYTD,TOTYTD
          ADD       ACCLYR,TOTLYR
          ADD       ACCMTH1,TOTMTH1
          ADD       ACCMTH2,TOTMTH2
          ADD       ACCMTH3,TOTMTH3
          ADD       ACCMTH4,TOTMTH4
          ADD       ACCMTH5,TOTMTH5
          ADD       ACCMTH6,TOTMTH6
          ADD       ACCMTH7,TOTMTH7
          ADD       ACCMTH8,TOTMTH8
          ADD       ACCMTH9,TOTMTH9
          ADD       ACCMTH10,TOTMTH10
          ADD       ACCMTH11,TOTMTH11
          ADD       ACCMTH12,TOTMTH12
          ADD       ACCMTH13,TOTMTH13
.
          PACK      KEY30,DIM30,SP20,SP20
          CALL      RDPRDT2
          GOTO      FTTL7500
.
.
.
.*************below was removed for the fix of SRF 3999 & 6449**************
.
.
.         UNPACK    SP20,MISCODE,MISCITM
.         PACK      KEY2,SLEDGER
.         OPEN      FMSLMAA1,"fmslmaaf"
.         CALL      RDFMLA1
.         CLOSE     FMSLMAA1
.         IF        OVRCD=0
.           MOVE      "-",ANS
.           PACK      MISCTTL,SLEDGER,ANS,FMLADESC   * Ledger description
.         ENDIF
.
FTTL9999  RETURN
+
.****************************************************************************
.*                           CTTL0000                  Called by: TITL0000  *
.*          format the title for the detail line for cash received          *
.****************************************************************************
CTTL0000  CMATCH    ANSA,FINCODE                 * from patient ?
          GOTO      CTTL1000 IF EQUAL            * yes
.         
          CMATCH    ANSB,FINCODE                 * from health fund ?
          GOTO      CTTL2000 IF EQUAL            * yes
.
          CMATCH    ANSI,FINCODE                 * from insurance company ?
          GOTO      CTTL3000 IF EQUAL            * yes
.
          CMATCH    ANSC,FINCODE                 * from government dept. ?
          GOTO      CTTL4000 IF EQUAL            * yes
          GOTO      CTTL9000                     * invalid code
.
.         From patient
.
CTTL1000  MOVE      "PATIENT",MISCTTL
          GOTO      CTTL9999
.
.         From health fund
.
CTTL2000  RESET     FINCODE,2
          MOVE      FINCODE,HCODE
          RESET     FINCODE
.
          CLEAR     MISCTTL
          APPEND    "UNKNOWN HEALTH FUND ",MISCTTL
          APPEND    HCODE,MISCTTL
          RESET     MISCTTL
.
          PACK      KEY14,HCODE,ZERO4,SP10
          CALL      RDFUND1                      * read health fund record
          BRANCH    OVRCD,CTTL9999               * not on file
          MOVE      HFNAME,MISCTTL
          GOTO      CTTL9999
.
CTTL3000  RESET     FINCODE,2
          MOVE      FINCODE,ICODE
          RESET     FINCODE
.
          CLEAR     MISCTTL
          APPEND    "UNKNOWN INSURANCE CO. ",MISCTTL
          APPEND    ICODE,MISCTTL
          RESET     MISCTTL
.
          MOVE      ICODE,KEY6
          CALL      RDINSR1                      * read insurance co. record
          BRANCH    OVRCD,CTTL9999               * not on file
          MOVE      INAME,MISCTTL
          GOTO      CTTL9999
.
.         From government dept.
.
CTTL4000  MOVE      "GOVERNMENT",MISCTTL
          GOTO      CTTL9999
.
CTTL9000  MOVE      "UNKNOWN SOURCE",MISCTTL
.
CTTL9999  RETURN
+
.****************************************************************************
.*                           JTTL0000                  Called by: TITL0000  *
.*        format the title for the detail line for journals                 *
.****************************************************************************
JTTL0000  COMPARE   ONE,PRCNGLIN                 * running G/L Interface ?
          GOTO      JTTL0200 IF NOT EQUAL        * no
.
          BRANCH    GSTFLAG,JTTL6000             * GST breaks up by ledger
.
JTTL0200  MATCH     "WJ",FINCODE                 * merchant card - journal ?
          IF        @EQUAL
             MOVE      " - COMMISSION",DIM13     * yes
             GOTO      JTTL2000
          ENDIF
.
          MATCH     "WC",FINCODE                 * merchant card commission ?
          IF        @EQUAL
             MOVE      " - JOURNAL   ",DIM13     * yes
             GOTO      JTTL2000
          ENDIF
.
.         See if journal code on file
.
          BRANCH    PRCNAFEE,JTTL1100
.
          MOVE      "UNKNOWN JOURNAL TYPE",MISCTTL
          MOVE      FINCODE,JCODE 
.
          MATCH     SP3,JCODE
          GOTO      JTTL9999 IF EQUAL
.
          PACK      KEY5,CODEJ,JCODE
          CALL      RDCODE1                      * read journal record
          BRANCH    OVRCD,JTTL1000               * not on file
          MOVE      TDESC,MISCTTL
.
JTTL1000  PACK      MISCODE,OPNBRA,JCODE,CLSBRA
          GOTO      JTTL9999
.
.         Use doctor percentage file
.
JTTL1100  UNPACK    FINCODE,KEY10,JCODE
          PACK      MISCTTL,UNKDOCT,KEY10
          CALL      RDPMHCP1                * read the doctors file
          IF        OVRCD=0
            MOVE      PMHCSNAM,PACSNAME
            MOVE      PMHCGNAM,PACGNAME
            MOVE      PMHCTITL,PACTITLE
            MOVE      ONE,PACFRMT
            CALL      PACNAME                 * pack the doctors name
            MOVE      "-",ANS
            PACK      MISCTTL,KEY10,ANS,PACFNAME
          ENDIF
.
          PACK      MISCODE,OPNBRA,JCODE,CLSBRA
          PACK      KEY5,CODEJ,JCODE
          CALL      RDCODE1                      * read journal record
          IF        OVRCD=0
            MOVE      TDESC,MISCITM
          ENDIF
          GOTO      JTTL9999
.
.         Get merchant card
.
JTTL2000  RESET     FINCODE,3
          MOVE      FINCODE,MERCODE
          RESET     FINCODE
.
          CLEAR     TDESC
          APPEND    "UNK. MERCHANT ",TDESC
          APPEND    MERCODE,TDESC
          RESET     TDESC
.
          PACK      KEY5,CODEMC,MERCODE
          CALL      RDCODE1
          MOVE      TDESC,DIM17
          PACK      MISCTTL,DIM17,DIM13
          RESET     MISCTTL
          GOTO      JTTL9999
.
JTTL6000  PACK      MISCTTL,SLEDGER,SP70         * Set to ledger 
          COMPARE   ONE,PTCNUFMS
          GOTO      JTTL9999 IF NOT EQUAL         * not using fms file
.
          PACK      KEY2,SLEDGER
          OPEN      FMSLMAA1,"fmslmaaf"
          CALL      RDFMLA1
          CLOSE     FMSLMAA1
          IF        OVRCD=0
            MOVE      "-",ANS
            PACK      MISCTTL,SLEDGER,ANS,FMLADESC   * Ledger description
          ENDIF
.
JTTL9999  RETURN
+
.****************************************************************************
.*                             MTTL0000                Called by: TITL0000  *
.*         format the title for the detail line for merchant trax.          *
.****************************************************************************
MTTL0000  MATCH     ANSD,FINTYPE                 * merchant cards claimed ?
          IF        @EQUAL
             MOVE      "CLAIMED    - ",DIM13     * yes
             GOTO      MTTL5000
          ENDIF
.
          MATCH     ANSE,FINTYPE                 * merchant cards paid ?
          IF        @EQUAL
             MOVE      "RECEIVED   - ",DIM13     * yes
             GOTO      MTTL5000
          ENDIF
.
          MATCH     ANSF,FINTYPE                 * merchant cards commission ?
          IF        @EQUAL
             MOVE      "COMMISSION - ",DIM13     * yes
             GOTO      MTTL5000
          ENDIF
.
          MATCH     ANSG,FINTYPE                 * merchant cards journals ?
          IF        @EQUAL
             MOVE      "JOURNALS   - ",DIM13     * yes
             GOTO      MTTL5000
          ENDIF
.
MTTL5000  RESET     FINCODE
          MOVE      FINCODE,MERCODE
.
          CLEAR     TDESC
          APPEND    "UNK. MERCHANT ",TDESC
          APPEND    MERCODE,TDESC
          RESET     TDESC
.
          PACK      KEY5,CODEMC,MERCODE
          CALL      RDCODE1
          PACK      MISCTTL,DIM13,TDESC
          RESET     MISCTTL
.
MTTL9999  RETURN
+
.****************************************************************************
.*                              ITEM0000               Called by: FTTL0000  *
.*         get the item description and group from the appropriate file     *
.****************************************************************************
.
.         See if item exists on Private Practice item file
.
ITEM0000  CALL      RSPRIT1                      * position in file
          CALL      RPPRIT1                      * read previous record
          BRANCH    OVRCD,ITEM1000               * not on file
.
          COMPARE   FORM2,PRITFLAG               * same item flag ?
          GOTO      ITEM1000 IF NOT EQUAL        * no
.
          MATCH     ITEM1,PRITITMN               * same item number ?
          GOTO      ITEM1000 IF NOT EQUAL        * no
.
          MATCH     SUB1,PRITSUBN                * same subitem ?
          GOTO      ITEM9500 IF EQUAL            * yes, item found
.
.         See if item exists on MBS item file
.
ITEM1000  PACK      KEY17,KEY9,CURRDATE,SP70
          CALL      PATITMRD                     * read item file
          BRANCH    OVRCD,ITEM2000               * not on file
          MOVE      IDESC,PRITDESC
          MOVE      IMISGRP,PRITSETC
          GOTO      ITEM9500
.
.         See if item exists on Miscellaneous Charges file
.
ITEM2000  PACK      KEY29,PTCNDCLM,SP6,SP3,KEY9,CURRDATE
          CALL      PATMCHRD                * read Misc.Charges file
          COMPARE   ZERO,EXIT
          GOTO      ITEM9000 IF NOT EQUAL

ITEM3000  MOVE      MDESC,PRITDESC
          MOVE      MMSCGRP,PRITSETC
          GOTO      ITEM9500
.
.         Item code doesn't exist on any file
.
ITEM9000  MOVE      SP3,PRITSETC
          MOVE      ONE,EXIT
          GOTO      ITEM9999
.
ITEM9500  MOVE      ZERO,EXIT
.
ITEM9999  RETURN
+
.****************************************************************************
.*                                HEDR0000             Called by: HEAD0000  *
.*                  print first six lines of header               PSUM0000  *
.****************************************************************************
HEDR0000  CALL      HEAD132
.
          MOVE      SP70,PRPRDESC
          MATCH     SP70,STRTPRAC
          IF        !@EQUAL
            PACK      KEY6,STRTPRAC,SP70
            CALL      RDPRPR1
          ELSE
            MOVE      "Start",PRPRDESC
          ENDIF
          PRINT     *40,"REPORT FOR ITEMS ENTERED DURING PERIOD ":
                         FROMDATE," TO ",TODATE,*N:
                    *40,"Range of Medical Practice: ",PRPRDESC
.
          MOVE      SP70,PRPRDESC
          MATCH     "zzzzzz",ENDPRAC
          IF        !@EQUAL
            PACK      KEY6,ENDPRAC,SP70
            CALL      RDPRPR1
          ELSE
            MOVE      "End",PRPRDESC
          ENDIF
          PRINT     *40,"                      to : ",PRPRDESC,*N
.
          CALL      LINE0000                     * end of section line
.
          PRINT     *1,PIPE,*33,PIPE,*38,"PERIOD",*46,PIPE,*53,"Y.T.D.":
                    *59,PIPE,*60,MDESC1,*132,PIPE 
          MOVE      TEN,CLNO                   * set line count
          MOVE      ONE,HEADFLG
.
HEDR9999  RETURN
+
.****************************************************************************
.*                              HEAD0000               Called by: PACC0000  *
.*                      print new page heading                    PTOT0000  *
.****************************************************************************
HEAD0000  CALL      HEDR0000
.
          MOVE      FINTYPE,ANS
          REP       NUMCHAR,ANS
          MOVE      ANS,FORM1
          BRANCH    FORM1,HEAD1000:              * fees generated
                          HEAD2000:              * cash received
                          HEAD3000:              * journals
                          HEAD4000:              * merchant cards claimed
                          HEAD9999:              * merchant cards paid
                          HEAD9999:              * merchant cards commission
                          HEAD9999               * merchant cards journals
.
HEAD1000  CALL      FEES0000
          GOTO      HEAD9999
.
HEAD2000  CALL      CASH0000
          GOTO      HEAD9999
.
HEAD3000  CALL      JOUR0000
          GOTO      HEAD9999
.
HEAD4000  CALL      MERC0000
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            FEES0000                 Called by: NEWC0000  *
.*           display page header for fees invoiced                HEAD0000  *
.****************************************************************************
FEES0000  COMPARE   ONE,HEADFLG                  * printing new page header ?
          GOTO      FEES1500 IF NOT EQUAL        * no
.
          BRANCH    PASS,FEES1000
.
          PRINT     *1,PIPE;
.
          IF        IBCNUGST=2 & GSTFLAG=1
            CALL      SHLN0000
            ADD       ONE,CLNO
            PRINT     *3,"GST";
          ELSE
            PRINT     *3,"FEES INVOICED DETAIL";
          ENDIF
.
FEES0800  PRINT     *33,PIPE,*46,PIPE:
                      *49,"PRIOR YEAR",*59,PIPE,*60,MDESC2,*132,PIPE
.
          GOTO      FEES1200
.
FEES1000  PRINT     *1,PIPE,*3,"TO BE INVOICED DETAIL ",*33,PIPE,*46,PIPE:
                    *49,"PRIOR YEAR",*59,PIPE,*60,MDESC2,*132,PIPE
.
FEES1200  CALL      XTRA0000                     * extra header line required ?
          MOVE      ZERO,HEADFLG
          CALL      LINE0000
          ADD       TWO,CLNO
.         GOTO      FEES9000
.
FEES1500  BRANCH    PASS,FEES2000
          COMPARE   ONE,FEESGEN
          GOTO      FEES1700 IF NOT EQUAL
.
          IF        IBCNUGST=2 & GSTFLAG=1
            CALL      SHLN0000
            ADD       ONE,CLNO
            PRINT     *1,PIPE,*3,"GST CREDIT NOTE":
                      *33,PIPE,*46,PIPE,*59,PIPE:
                      *132,PIPE,*N:
                      *1,PIPE,*3,"---------------",*33,PIPE,*46,PIPE,*59,PIPE:
                      *132,PIPE
          ELSE
            CALL      SHLN0000
            ADD       ONE,CLNO
            PRINT     *1,PIPE,*3,"CREDIT NOTE",*33,PIPE,*46,PIPE,*59,PIPE:
                      *132,PIPE,*N:
                      *1,PIPE,*3,"-------------",*33,PIPE,*46,PIPE,*59,PIPE:
                      *132,PIPE
          ENDIF
          GOTO      FEES1900
.
FEES1700  IF        IBCNUGST=2 & GSTFLAG=1
            CALL      SHLN0000
            ADD       ONE,CLNO
            PRINT     *1,PIPE,*3,"GST":
                      *33,PIPE,*46,PIPE,*59,PIPE:
                      *132,PIPE,*N:
                      *1,PIPE,*3,"---",*33,PIPE,*46,PIPE,*59,PIPE:
                      *132,PIPE
          ELSE
            PRINT     *1,PIPE,*3,"FEES INVOICED",*33,PIPE,*46,PIPE,*59,PIPE:
                      *132,PIPE,*N:
                      *1,PIPE,*3,"-------------",*33,PIPE,*46,PIPE,*59,PIPE:
                      *132,PIPE
          ENDIF
.
FEES1900  DISPLAY   *P14:24,*EL,*V2LON,"FEES INVOICED";
          GOTO      FEES9000
.
FEES2000  PRINT     *1,PIPE,*3,"TO BE INVOICED",*33,PIPE,*46,PIPE,*59,PIPE:
                    *132,PIPE,*N:
                    *1,PIPE,*3,"--------------",*33,PIPE,*46,PIPE,*59,PIPE:
                    *132,PIPE
          DISPLAY   *P14:24,*EL,*V2LON,"TO BE INVOICED";
.
FEES9000  ADD       TWO,CLNO
.
FEES9999  RETURN
+
.****************************************************************************
.*                               CASH0000              Called by: NEWC0000  *
.*            display page header for cash received               HEAD0000  *
.*                                                                PDEP0000  *
.****************************************************************************
CASH0000  COMPARE   ONE,HEADFLG                  * printing new page header ?
          GOTO      CASH3000 IF NOT EQUAL        * no
.
          BRANCH    PASS,CASH1000
.
          PRINT     *1,PIPE,*3,"FEES INVOICED DETAIL ",*33,PIPE,*46,PIPE:
                    *49,"PRIOR YEAR",*59,PIPE,*60,MDESC2,*132,PIPE
          GOTO      CASH2000
.
CASH1000  PRINT     *1,PIPE,*3,"TO BE INVOICED DETAIL",*33,PIPE,*46,PIPE:
                    *49,"PRIOR YEAR",*59,PIPE,*60,MDESC2,*132,PIPE
.
CASH2000  CALL      XTRA0000                     * extra header line required ?
          MOVE      ZERO,HEADFLG
          CALL      LINE0000
          ADD       TWO,CLNO
          GOTO      CASH4000
.
CASH3000  CALL      SHLN0000
          ADD       ONE,CLNO
.
CASH4000  PRINT     *1,PIPE,*3,"CASH RECEIVED",*33,PIPE,*46,PIPE,*59,PIPE:
                    *132,PIPE,*N:
                    *1,PIPE,*3,"-------------",*33,PIPE,*46,PIPE,*59,PIPE:
                    *132,PIPE
          DISPLAY   *P14:24,*EL,*V2LON,"CASH RECEIVED";
          ADD       TWO,CLNO
.
CASH9999  RETURN
+
.****************************************************************************
.*                                JOUR0000             Called by: NEWC0000  *
.*                display page header for journals                HEAD0000  *
.****************************************************************************
JOUR0000  COMPARE   ONE,HEADFLG                  * printing new page header ?
          GOTO      JOUR1000 IF NOT EQUAL        * no
.
          PRINT     *1,PIPE,*3,"FEES INVOICED DETAIL ",*33,PIPE,*46,PIPE:
                    *49,"PRIOR YEAR",*59,PIPE,*60,MDESC2,*132,PIPE
.
          CALL      XTRA0000                     * extra header line required ?
          MOVE      ZERO,HEADFLG
          CALL      LINE0000
          ADD       TWO,CLNO
          GOTO      JOUR1100
.
JOUR1000  CALL      SHLN0000
          ADD       ONE,CLNO
.
JOUR1100  IF        GSTFLAG=1
           PRINT     *1,PIPE,*3,"GST JOURNALS":
                     *33,PIPE,*46,PIPE,*59,PIPE,*132,PIPE:
                     *N,PIPE,*3,"------------":
                     *33,PIPE,*46,PIPE,*59,PIPE,*132,PIPE
          ELSE
           PRINT     *1,PIPE,*3,"JOURNALS":
                     *33,PIPE,*46,PIPE,*59,PIPE,*132,PIPE:
                     *N,PIPE,*3,"--------",*33,PIPE,*46,PIPE,*59,PIPE,*132,PIPE
          ENDIF
          DISPLAY   *P14:24,*EL,*V2LON,"JOURNALS";
          ADD       TWO,CLNO
.
JOUR9999  RETURN
+
.****************************************************************************
.*                              MERC0000               Called by: NEWC0000  *
.*               display page heading for merchant trans.         HEAD0000  *
.****************************************************************************
MERC0000  COMPARE   ONE,HEADFLG                  * printing new page header ?
          GOTO      MERC1000 IF NOT EQUAL        * no
.
          PRINT     *1,PIPE,*3,"MERCHANT TRANSACTION DETAIL",*33,PIPE,*46,PIPE:
                    *49,"PRIOR YEAR",*59,PIPE,*60,MDESC2,*132,PIPE
.
          CALL      XTRA0000                     * extra header line required ?
          MOVE      ZERO,HEADFLG
          CALL      LINE0000
          ADD       TWO,CLNO
          GOTO      MERC1100
.
MERC1000  CALL      SHLN0000
          ADD       ONE,CLNO
.
MERC1100  PRINT     *1,PIPE,*3,"MERCHANT SUMMARY",*33,PIPE,*46,PIPE:
                    *59,PIPE,*132,PIPE,*N:
                    *1,PIPE,*3,"----------------",*33,PIPE,*46,PIPE:
                    *59,PIPE,*132,PIPE
          DISPLAY   *P14:24,*EL,*V2LON,"MERCHANT";
          ADD       TWO,CLNO
.
MERC9999  RETURN
+
.****************************************************************************
.*                            XTRA0000                 Called by: FEES0000  *
.*                 see if an extra line needs to be printed       CASH0000  *
.*                 in the header for the 13th period              JOUR0000  *
.*                                                                MERC0000  *
.*                                                                PSUM0000  *
.****************************************************************************
XTRA0000  COMPARE   TEN3,NUMPERS                 * 13 periods in year ?
          IF        @LESS 
             GOTO      XTRA9999                  * no
          ELSE
             PRINT     *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*60,MDESC3,*132,PIPE
             ADD       ONE,CLNO
          ENDIF
.
XTRA9999  RETURN
+
.****************************************************************************
.*                            PSUM0000                 Called by: ENDF0000  *
.*                      print summary page                        ENDT0000  *
.*                                                                ENDP0000  *
.****************************************************************************
PSUM0000  CALL      HEDR0000                     * print page header
.
          BRANCH    PASS,PSUM0100,PSUM0200
.
          PRINT     *1,PIPE,*3,"FEES INVOICED SUMMARY",*33,PIPE,*46,PIPE:
                    *49,"PRIOR YEAR",*59,PIPE,*60,MDESC2,*132,PIPE
          GOTO      PSUM0400
.
PSUM0100  PRINT     *1,PIPE,*3,"TO BE INVOICED SUMMARY",*33,PIPE,*46,PIPE:
                    *49,"PRIOR YEAR",*59,PIPE,*60,MDESC2,*132,PIPE
          GOTO      PSUM0400
.
PSUM0200  PRINT     *1,PIPE,*3,"MERCHANT SUMMARY",*33,PIPE,*46,PIPE:
                    *49,"PRIOR YEAR",*59,PIPE,*60,MDESC2,*132,PIPE
.
PSUM0400  CALL      XTRA0000
          CALL      LINE0000
          MOVE      ZERO,FORM2
.
PSUM0500  ADD       ONE,FORM2
          COMPARE   TEN7,FORM2
          IF        @LESS
             LOAD      FEES,FORM2,GFEESYTD,GFEESPER,GFEESM1,GFEESM2,GFEESM3:
                                  GFEESM4,GFEESM5,GFEESM6,GFEESM7,GFEESM8:
                                  GFEESM9,GFEESM10,GFEESM11,GFEESM12,GFEESM13:
                                  GFEESLYR 
.
             LOAD      FGST,FORM2,GFGSTYTD,GFGSTPER,GFGSTM1,GFGSTM2,GFGSTM3:
                                  GFGSTM4,GFGSTM5,GFGSTM6,GFGSTM7,GFGSTM8:
                                  GFGSTM9,GFGSTM10,GFGSTM11,GFGSTM12,GFGSTM13:
                                  GFGSTLYR 
.
             LOAD      CRDN,FORM2,CFEESYTD,CFEESPER,CFEESM1,CFEESM2,CFEESM3:
                                  CFEESM4,CFEESM5,CFEESM6,CFEESM7,CFEESM8:
                                  CFEESM9,CFEESM10,CFEESM11,CFEESM12,CFEESM13:
                                  CFEESLYR 
.
             LOAD      CGST,FORM2,CFGSTYTD,CFGSTPER,CFGSTM1,CFGSTM2,CFGSTM3:
                                  CFGSTM4,CFGSTM5,CFGSTM6,CFGSTM7,CFGSTM8:
                                  CFGSTM9,CFGSTM10,CFGSTM11,CFGSTM12,CFGSTM13:
                                  CFGSTLYR 
.
             LOAD      CASH,FORM2,GCASHYTD,GCASHPER,GCASHM1,GCASHM2,GCASHM3:
                                  GCASHM4,GCASHM5,GCASHM6,GCASHM7,GCASHM8:
                                  GCASHM9,GCASHM10,GCASHM11,GCASHM12,GCASHM13:
                                  GCASHLYR
.
             LOAD      JOUR,FORM2,GJOURYTD,GJOURPER,GJOURM1,GJOURM2,GJOURM3:
                                  GJOURM4,GJOURM5,GJOURM6,GJOURM7,GJOURM8:
                                  GJOURM9,GJOURM10,GJOURM11,GJOURM12,GJOURM13:
                                  GJOURLYR
.
             LOAD      JGST,FORM2,GJGSTYTD,GJGSTPER,GJGSTM1,GJGSTM2,GJGSTM3:
                                  GJGSTM4,GJGSTM5,GJGSTM6,GJGSTM7,GJGSTM8:
                                  GJGSTM9,GJGSTM10,GJGSTM11,GJGSTM12,GJGSTM13:
                                  GJGSTLYR
.
             SUB       CRDN,FEES
             IF        IBCNUGST=2
               ADD       FGST,FEES
               SUB       CGST,FEES
               SUB       JGST,FEES
             ENDIF
.
             SUB       CASH,FEES                
             SUB       JOUR,FEES
.
             BRANCH    PASS,PSUM1500:            * to be invoiced pass
                            PSUM1000             * merchant transactions pass
             GOTO      PSUM1500                  * fees invoiced pass
.
PSUM1000     LOAD      COMM,FORM2,GCOMMYTD,GCOMMPER,GCOMMM1,GCOMMM2,GCOMMM3:
                                  GCOMMM4,GCOMMM5,GCOMMM6,GCOMMM7,GCOMMM8:
                                  GCOMMM9,GCOMMM10,GCOMMM11,GCOMMM12,GCOMMM13:
                                  GCOMMLYR
             SUB       COMM,FEES
.
PSUM1500     STORE     FEES,FORM2,GOUTYTD,GOUTPER,GOUTM1,GOUTM2,GOUTM3,GOUTM4:
                                  GOUTM5,GOUTM6,GOUTM7,GOUTM8,GOUTM9,GOUTM10:
                                  GOUTM11,GOUTM12,GOUTM13,GOUTLYR
             GOTO      PSUM0500
          ELSE
             GOTO      PSUM2000
          ENDIF
.
PSUM2000  BRANCH    PASS,PSUM2500:               * to be invoiced pass
                         PSUM3000                * merchant trans. pass
.
          PRINT     *1,PIPE,*3,"FEES INVOICED",*33,PIPE,*35,GFEESPER,*46,PIPE:
                    *48,GFEESYTD,*59,PIPE,*61,GFEESM1,*73,GFEESM2,*85,GFEESM3:
                    *97,GFEESM4,*109,GFEESM5,*121,GFEESM6,*132,PIPE
          GOTO      PSUM3500
.
PSUM2500  PRINT     *1,PIPE,*3,"TO BE INVOICED",*33,PIPE,*35,GFEESPER,*46,PIPE:
                    *48,GFEESYTD,*59,PIPE,*61,GFEESM1,*73,GFEESM2:
                    *85,GFEESM3,*97,GFEESM4,*109,GFEESM5,*121,GFEESM6,*132,PIPE
          GOTO      PSUM3500
.
PSUM3000  PRINT     *1,PIPE,*3,"CLAIMED      ",*33,PIPE,*35,GFEESPER,*46,PIPE:
                    *48,GFEESYTD,*59,PIPE,*61,GFEESM1,*73,GFEESM2:
                    *85,GFEESM3,*97,GFEESM4,*109,GFEESM5,*121,GFEESM6,*132,PIPE
.
PSUM3500  PRINT     *1,PIPE,*33,PIPE,*46,PIPE,*48,GFEESLYR,*59,PIPE,*61,GFEESM7:
                    *73,GFEESM8,*85,GFEESM9,*97,GFEESM10:
                    *109,GFEESM11,*121,GFEESM12,*132,PIPE,*N;
.
          COMPARE   TEN3,NUMPERS                 * 13 periods in year ?
          IF        @EQUAL
             PRINT     *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*61,GFEESM13,*132,PIPE
             ADD       ONE,CLNO
          ENDIF
.
          COMPARE   TWO,IBCNUGST
          GOTO      PSUM3600 IF NOT EQUAL        * not using Aust.GST
.
          BRANCH    PASS,PSUM3800,PSUM3800
.
          PRINT        *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*132,PIPE:
                    *N,*1,PIPE,*3,"PLUS GST",*33,PIPE,*35,GFGSTPER:
                    *46,PIPE,*48,GFGSTYTD,*59,PIPE,*61,GFGSTM1,*73,GFGSTM2:
                    *85,GFGSTM3,*97,GFGSTM4,*109,GFGSTM5,*121,GFGSTM6,*132,PIPE:
                    *N,*1,PIPE,*33,PIPE,*46,PIPE,*48,GFGSTLYR,*59,PIPE:
                    *61,GFGSTM7,*73,GFGSTM8,*85,GFGSTM9,*97,GFGSTM10:
                   *109,GFGSTM11,*121,GFGSTM12,*132,PIPE
.
          COMPARE   TEN3,NUMPERS                 * 13 periods in year ?
          IF        @EQUAL
             PRINT     *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*61,GFGSTM13,*132,PIPE
             ADD       ONE,CLNO
          ENDIF
.
          PRINT     *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*132,PIPE
.
PSUM3600  PRINT        *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*132,PIPE:
                    *N,*1,PIPE,*3,"LESS CREDIT NOTE",*33,PIPE,*35,CFEESPER:
                    *46,PIPE,*48,CFEESYTD,*59,PIPE,*61,CFEESM1,*73,CFEESM2:
                    *85,CFEESM3,*97,CFEESM4,*109,CFEESM5,*121,CFEESM6,*132,PIPE:
                    *N,*1,PIPE,*33,PIPE,*46,PIPE,*48,CFEESLYR,*59,PIPE:
                    *61,CFEESM7,*73,CFEESM8,*85,CFEESM9,*97,CFEESM10:
                   *109,CFEESM11,*121,CFEESM12,*132,PIPE
.
          COMPARE   TEN3,NUMPERS                 * 13 periods in year ?
          IF        @EQUAL
             PRINT     *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*61,CFEESM13,*132,PIPE
             ADD       ONE,CLNO
          ENDIF
.
          PRINT     *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*132,PIPE
.
          COMPARE   TWO,IBCNUGST
          GOTO      PSUM3800 IF NOT EQUAL        * not using Aust.GST
.
          BRANCH    PASS,PSUM3800,PSUM3800
.
          PRINT        *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*132,PIPE:
                    *N,*1,PIPE,*3,"LESS GST CREDIT NOTE",*33,PIPE,*35,CFGSTPER:
                    *46,PIPE,*48,CFGSTYTD,*59,PIPE,*61,CFGSTM1,*73,CFGSTM2:
                    *85,CFGSTM3,*97,CFGSTM4,*109,CFGSTM5,*121,CFGSTM6,*132,PIPE:
                    *N,*1,PIPE,*33,PIPE,*46,PIPE,*48,CFGSTLYR,*59,PIPE:
                    *61,CFGSTM7,*73,CFGSTM8,*85,CFGSTM9,*97,CFGSTM10:
                   *109,CFGSTM11,*121,CFGSTM12,*132,PIPE
.
          COMPARE   TEN3,NUMPERS                 * 13 periods in year ?
          IF        @EQUAL
             PRINT     *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*61,CFGSTM13,*132,PIPE
             ADD       ONE,CLNO
          ENDIF
.
          PRINT     *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*132,PIPE
.
PSUM3800  PRINT        *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*132,PIPE:
                    *N,*1,PIPE,*3,"LESS CASH RECEIVED",*33,PIPE,*35,GCASHPER:
                    *46,PIPE,*48,GCASHYTD,*59,PIPE,*61,GCASHM1,*73,GCASHM2:
                    *85,GCASHM3,*97,GCASHM4,*109,GCASHM5,*121,GCASHM6,*132,PIPE:
                    *N,*1,PIPE,*33,PIPE,*46,PIPE,*48,GCASHLYR,*59,PIPE:
                    *61,GCASHM7,*73,GCASHM8,*85,GCASHM9,*97,GCASHM10:
                   *109,GCASHM11,*121,GCASHM12,*132,PIPE
.
          COMPARE   TEN3,NUMPERS                 * 13 periods in year ?
          IF        @EQUAL
             PRINT     *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*61,GCASHM13,*132,PIPE
             ADD       ONE,CLNO
          ENDIF
.
          PRINT     *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*132,PIPE
.
          BRANCH    PASS,PSUM5000:               * to be invoiced pass
                         PSUM4000                * merchant trans. pass
          GOTO      PSUM4500                     * fees invoiced pass
.
PSUM4000  PRINT     *1,PIPE,*3,"LESS COMMISSION",*33,PIPE,*35,GCOMMPER,*46,PIPE:
                    *48,GCOMMYTD,*59,PIPE,*61,GCOMMM1,*73,GCOMMM2:
                    *85,GCOMMM3,*97,GCOMMM4,*109,GCOMMM5,*121,GCOMMM6,*132,PIPE:
                    *N,*1,PIPE,*33,PIPE,*46,PIPE,*48,GCOMMLYR,*59,PIPE:
                    *61,GCOMMM7,*73,GCOMMM8,*85,GCOMMM9,*97,GCOMMM10:
                   *109,GCOMMM11,*121,GCOMMM12,*132,PIPE
.
          COMPARE   TEN3,NUMPERS                 * 13 periods in year ?
          IF        @EQUAL
             PRINT     *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*61,GCOMMM13,*132,PIPE
             ADD       ONE,CLNO
          ENDIF
.
          PRINT     *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*132,PIPE
.
PSUM4500  PRINT      *1,PIPE,*3,"LESS JOURNALS",*33,PIPE,*35,GJOURPER,*46,PIPE:
                    *48,GJOURYTD,*59,PIPE,*61,GJOURM1,*73,GJOURM2:
                    *85,GJOURM3,*97,GJOURM4,*109,GJOURM5,*121,GJOURM6,*132,PIPE:
                    *N,*1,PIPE,*33,PIPE,*46,PIPE,*48,GJOURLYR,*59,PIPE:
                    *61,GJOURM7,*73,GJOURM8,*85,GJOURM9,*97,GJOURM10:
                   *109,GJOURM11,*121,GJOURM12,*132,PIPE
.
          COMPARE   TEN3,NUMPERS                 * 13 periods in year ?
          IF        @EQUAL
             PRINT     *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*61,GJOURM13,*132,PIPE
             ADD       ONE,CLNO
          ENDIF
.
          PRINT     *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*132,PIPE
.
          IF        IBCNUGST=2
            PRINT        *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*132,PIPE:
                      *N,*1,PIPE,*3,"LESS GST JOURNAL",*33,PIPE,*35,GJGSTPER:
                      *46,PIPE,*48,GJGSTYTD,*59,PIPE,*61,GJGSTM1,*73,GJGSTM2:
                    *85,GJGSTM3,*97,GJGSTM4,*109,GJGSTM5,*121,GJGSTM6,*132,PIPE:
                      *N,*1,PIPE,*33,PIPE,*46,PIPE,*48,GJGSTLYR,*59,PIPE:
                      *61,GJGSTM7,*73,GJGSTM8,*85,GJGSTM9,*97,GJGSTM10:
                      *109,GJGSTM11,*121,GJGSTM12,*132,PIPE
.
            COMPARE   TEN3,NUMPERS                 * 13 periods in year ?
            IF        @EQUAL
               PRINT   *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*61,GJGSTM13,*132,PIPE
               ADD       ONE,CLNO
            ENDIF
.
            PRINT     *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*132,PIPE
          ENDIF
.
PSUM5000  CALL      SHLN0000                     * print short line
          PRINT      *1,PIPE,*3,"NETT:",*33,PIPE,*35,GOUTPER,*46,PIPE:
                    *48,GOUTYTD,*59,PIPE,*61,GOUTM1,*73,GOUTM2:
                    *85,GOUTM3,*97,GOUTM4,*109,GOUTM5,*121,GOUTM6,*132,PIPE:
                    *N,*1,PIPE,*33,PIPE,*46,PIPE,*48,GOUTLYR,*59,PIPE:
                    *61,GOUTM7,*73,GOUTM8,*85,GOUTM9,*97,GOUTM10:
                   *109,GOUTM11,*121,GOUTM12,*132,PIPE
.
          COMPARE   TEN3,NUMPERS                 * 13 periods in year ?
          IF        @EQUAL
             PRINT     *1,PIPE,*33,PIPE,*46,PIPE,*59,PIPE,*61,GOUTM13,*132,PIPE
             ADD       ONE,CLNO
          ENDIF
.
PSUM9999  RETURN
+
.****************************************************************************
.*                            TINV0000                 Called by: ENDF0000  *
.*                 get to be invoiced amounts                               *
.****************************************************************************
TINV0000  DISPLAY   *P14:24,*EL,*V2LON,"Loading TO-BE-INVOICED Data...";
.
          CALL      CREA0000                     * create temp files
          CALL      LOAD0000                     * load debtors
.
          CALL      CLRTF000                     * clear temp files
          MOVE      SP20,KEY18
          CALL      RSTEMP2                      * position at start of file
          CALL      RKTEMP2                      * read first record
          BRANCH    OVRCD,TINV9999               * no records on file
          MOVE      TEMPDEB,SAVDEBT              * save first debtor #
          MOVE      TEMPSCN,SAVSCAN              * save scan flag
.
TINV1000  MOVE      TEMPDEB,VDEBTOR
          MOVE      TEMPSCN,VSCANPMI
          PACK      SPRAC,STRTPRAC,SP70
          PACK      EPRAC,ENDPRAC,SP70
          CALL      PRIINVLD                     * load data into temp file
          BRANCH    EXIT,TINV2000                  for this debtor #
.
TINV2000  CALL      RKTEMP2                      * read next record
          BRANCH    OVRCD,TINV9500               * no more records
.
          MATCH     TEMPDEB,SAVDEBT              * same debtor still ?
          GOTO      TINV3000 IF NOT EQUAL        * no
.
          COMPARE   TEMPSCN,SAVSCAN              * same scan flag ?
          GOTO      TINV1000 IF EQUAL            * yes, same debtor
.
TINV3000  CALL      PPTMP000                     * process the path temp file
          CALL      PTRA0000                     * procees debtor's transactions
.
.         Clear the temp file for the next debtor's transactions
.
          CALL      CLRTF000                     * clear temp files
.
          MOVE      TEMPDEB,SAVDEBT              * save new debtor #
          MOVE      TEMPSCN,SAVSCAN              * save scan flag
          GOTO      TINV1000
.
TINV9500  CALL      PPTMP000                     * process path. temp file
          CALL      PTRA0000                     * process debtor's transactions
.
TINV9999  RETURN
+
.****************************************************************************
.*                             PTRA0000                Called by: TINV0000  *
.*                    process transactions file for a debtor                *
.*                    using the second temp file                            *
.****************************************************************************
PTRA0000  PACK      KEY80,SP30,SP30,SP20
          CALL      RSTMPR2                      * position at start of file
PTRA3500  CALL      RKTMPR2                      * read next record
          BRANCH    OVRCD,PTRA9999               * end of file
.
.         Get the item set code from the item file
.
          MOVE      SP3,SETCODE
          PACK      KEY22,TMPIFLAG,TMPITEM,TMPSITEM,NINE8
          CALL      RSPRIT1                      * position in item file
PTRA4000  CALL      RPPRIT1                      * read previous record
          BRANCH    OVRCD,PTRA5000               * end of file
.
          COMPARE   TMPIFLAG,PRITFLAG            * same item flag ?
          GOTO      PTRA5000 IF NOT EQUAL        * no
.
          MATCH     TMPITEM,PRITITMN             * same item # ?
          GOTO      PTRA5000 IF NOT EQUAL        * no
.
          MATCH     TMPSITEM,PRITSUBN            * same subitem # ?
          GOTO      PTRA5000 IF NOT EQUAL
.
          MATCH     PRITDAT1,TMPSDATE            * serv. date < eff. date ?
          GOTO      PTRA4000 IF LESS             * yes
          MOVE      PRITSETC,SETCODE
.
.         Adjust figures for percentage charged by doctor for
.         this claim
.
          MOVE      ONEHUND,PRDOFEEP
          PACK      KEY22,TMPPRAC,TMPSDOCT,TMPCLAIM,TMPPIND
          CALL      RDPRDO1
.
          MOVE      TMPITOT,TEMPTOTV
          MOVE      TMPITOT,TEMPAMNT
          CALL      GETAJ000
          MOVE      TEMPAMNT,TMPITOT
.
          MOVE      TMPIAMNT,TEMPTOTV
          MOVE      TMPIAMNT,TEMPAMNT
          CALL      GETAJ000
          MOVE      TEMPAMNT,TMPIAMNT
.
.         Write item to the financial file
.
PTRA5000  IF        PRCNAFEE=1
           PACK    PRFNCODE,ANSM,TMPSDOCT,SETCODE,TMPIFLAG,TMPITEM,TMPSITEM,SP70
          ELSE
            PACK      PRFNCODE,ANSM,SETCODE,TMPIFLAG,TMPITEM,TMPSITEM,SP70
          ENDIF
          MOVE      TMPPRAC,PRFNMPRA
          MOVE      TMPSDATE,FSTDATE
          MOVE      ANSA,PRFNTYPE
          MOVE      TMPITOT,FSTAMNT
          MULT      TMPSERVS,FSTAMNT
.
          MOVE      ZERO,FGSTFLAG
          MATCH     SP70,FSTDATE
          GOTO      PTRA3500 IF EQUAL
.
.         All 'tobe invoiced' data will be put in the current financial year
.
          CALL      PRYCALFS                   * include all prev.years data
          GOTO      PTRA3500                     * get next temp file record
.
PTRA9999  RETURN
+
.****************************************************************************
.*                               LOAD0000              Called by: TINV0000  *
.*       Load the temp file with the relevant unique identifiers            *
.*       for the debtors that have pending invoices                         *
.****************************************************************************
LOAD0000  PACK      KEY28,ONE,SP30
          CALL      RSPRHR2                      * position on referral holding
.                                                  file
.         read through referral holding file
.
LOAD0100  CALL      RKPRHR2                      * read next record
          BRANCH    OVRCD,LOAD9999               * end of file
.
          COMPARE   ONE,PRHRPINV                 * finished if no more invoices
          GOTO      LOAD9999 IF NOT EQUAL          to print
.
          MATCH     SP70,STRTPRAC
          IF        !@EQUAL
            MATCH     STRTPRAC,PRHRPRAC          * check range of medical prac.
            GOTO      LOAD0100 IF LESS
          ENDIF
.
          MATCH     "zzzzzz",ENDPRAC
          IF        !@EQUAL
            MATCH     PRHRPRAC,ENDPRAC
            GOTO      LOAD0100 IF LESS
          ENDIF
.
.         check the medical practice user access
.
          PACK      KEY10,USERID,SP70
          CALL      RDPRALS1
          COMPARE   ZERO,OVRCD
          GOTO      LOAD0200 IF EQUAL       * User has access to all Med.Prac.
.
          PACK      KEY16,PRHRPRAC,USERID,SP70
          CALL      RDPRSEC1
          BRANCH    OVRCD,LOAD0100          * no access
.
LOAD0200  MOVE      PRHRUNIQ,KEY8
          CALL      RDPRHD2                      * read header file
          BRANCH    OVRCD,LOAD0100
.
          MATCH     SP3,PRHRPIND                 * patient indicator exist ?
          GOTO      LOAD0100 IF EQUAL            * no
.
          PACK      KEY5,CODEGI,PRHRPIND  
          CALL      RDCODE1                      * read patient codes file
          BRANCH    OVRCD,LOAD0100
.
.         set up the variables for the temp file
.
          MOVE      PRHDDEBT,TEMPDEB
          MOVE      PRHDSCAN,TEMPSCN
          MOVE      PRHDUNIQ,KEY8
          CALL      RATEMP1                      * position on the temp file
          BRANCH    OVRCD,LOAD0900               * not on file
          GOTO      LOAD0100                     * get next record
.
.         write to the temp file
.
LOAD0900  CALL      WRTEMP1
          GOTO      LOAD0100                     * get next record
.
LOAD9999  RETURN
+
.****************************************************************************
.*                            ENDF0000                 Called by: ML0000    *
.*                  end of fees invoiced pass                               *
.****************************************************************************
ENDF0000  MATCH     SP70,FINCODE                 * blank financial code ?
          IF        @EQUAL
             DISPLAY   *P14:24,*EL,"No available data for ",NOWYEAR,".";
             GOTO      ENDF1000
          ELSE
             MATCH     SP1,FINTYPE               * same financial type ?
             GOTO      ENDF1000 IF EQUAL         * yes
             CALL      PACC0000                  * print item details and amnts
             CALL      PTOT0000                  * print group totals
             CALL      CHKG0000                  * Check for GST
             CALL      PSUM0000                  * print summary page
          ENDIF
.
          MATCH     "1",PRCNGITM
          IF        @EQUAL
            MOVE      ZERO,PASS
            CALL      ITGL0000                   * G/L Extract for fees invoice
            CALL      EGST0000                   * Extract Total GST
          ENDIF
.
.         If this is not the current financial year, then don't bother
.         calculating the amount still to be invoiced
.
ENDF1000  BRANCH    NOTCYR,ENDF2000
.
          MOVE      ONE,PASS                     * set flag for to-be-inv. pass
          CALL      TINV0000                     * get amount to be invoiced
          MOVE      SIXTY,CLNO                   * force new page
          CALL      IVAR0000                     * initialise variables
.
          PACK      KEY39,NOWYEAR,SP70
          CALL      RSPRFN1
          GOTO      ENDF9999
.
ENDF2000  CALL      MSET0000                     * set up for merchant pass
.
ENDF9999  RETURN
+
.****************************************************************************
.*                            ENDT0000                 Called by: ML0000    *
.*                end of to-be-invoiced pass                                *
.****************************************************************************
ENDT0000  MOVE      ZERO,CRDNFLAG                * Initialise credit note flag
          MATCH     SP8,FINCODE                  * financial code blank ?
          IF        @EQUAL
             CALL      CDEP0000                  * check for deposit amounts
             IF        EXIT=1
               CALL      PDEP0000                * print deposit amounts
               CALL      PTOT0000                * print group totals
               CALL      PSUM0000                * print summary page
             ELSE
               DISPLAY   *P14:24,*EL,"No To-Be-Invoiced data for ",NOWYEAR,".";
             ENDIF
          ELSE
             MATCH     SP1,FINTYPE               * same financial type ?
             GOTO      ENDT1000 IF EQUAL         * yes
.
             CALL      PACC0000                  * print item details and amnts
             CALL      PTOT0000                  * print group totals
             CALL      PDEP0000                  * print deposit amounts
             CALL      PTOT0000                  * print group totals
             CALL      PSUM0000                  * print summary page
          ENDIF
.
ENDT1000  MATCH     "1",PRCNGITM
          IF        @EQUAL
            MOVE      ONE,PASS
            CALL      ITGL0000                   * G/L Extract for tobe invoiced
          ENDIF
.
          CALL      KILL0000
          OPEN      PRIFINS1,"prifinsf"
          CALL      MSET0000                     * set up for merchant pass
.
ENDT9999  RETURN
+
.****************************************************************************
.*                           ENDP0000                  Called by: ML0000    *
.*             no more passes - end printout                                *
.****************************************************************************
ENDP0000  IF        COPTION=2
            CALL      MVEXT000                   * Execute us1 scripts
          ENDIF
.
          MATCH     SP70,FINCODE                 * financial code blank ?
          IF        @EQUAL
             DISPLAY   *P14:24,*EL,"No merchant card records for ":
                       NOWYEAR,".";
             GOTO      ENDP1000
          ELSE
             MATCH     SP1,FINTYPE               * same financial type ?
             GOTO      ENDP1000 IF EQUAL         * yes
             CALL      PACC0000                  * print item details and amnts
             CALL      PTOT0000                  * print group totals
             CALL      PSUM0000                  * print summary page
          ENDIF
.
ENDP1000  CALL      LINE0000                     * print end line
          PRINT     *N,"***  End of Report  ***"
          DISPLAY   *P1:24,*EL,*V2LON,*P22:24:
                    "***  Report Generation Completed  ***",*W2;
.
          CALL      KILL0000
          BRANCH    COPTION,ENDP9999             * no reset
.
          CALL      REDT0000                     * reset range of medical Prac.
.
.         MATCH     SP70,STRTPRAC
.         IF        @EQUAL
.           MATCH     "zzzzzz",ENDPRAC
.           GOTO      ENDP9000 IF EQUAL          * reset for all medical prac.
.         ENDIF
.
          CALL      CMED0000        * Check if all Med.Practices been resetted
          BRANCH    EXIT,ENDP9999
.
.         Reset date in control file
.
ENDP9000  PACK      PRCNDATE,CCC,CYY,CMM,CDD
          REP       " 0",PRCNDATE
          WRITAB    CONTROLF,THIRTY3;*60,PRCNDATE
.
ENDP9999  RETURN
+
.------------------------------------------------------------
. Move Extract to Web Directory
.------------------------------------------------------------
MVEXT000  MOVE      "fin",KEY3
          PACK      KEY6,CYY,CMM,CDD
          REP       " 0",KEY6
.
          SQUEEZE   INVNAME
          CLEAR     CMDLINE
          APPEND    "ibapri19.us1 ",CMDLINE
          APPEND    INVNAME,CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    FFIN,CMDLINE
          APPEND    KEY6,CMDLINE        * pass filename for display on web
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.         Setup to be invoiced file
.
          SQUEEZE   TBINAME
          CLEAR     CMDLINE
          APPEND    "ibapri19.us2 ",CMDLINE
          APPEND    TBINAME,CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    TFIN,CMDLINE
          APPEND    KEY6,CMDLINE        * pass filename for display on web
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
MVEXT999  RETURN
+
.****************************************************************************
.         Reset date for a range of medical practice
.****************************************************************************
REDT0000  PACK      KEY6,STRTPRAC,SP70
          MATCH     SP70,STRTPRAC
          IF        @EQUAL
            CALL      RSPRPR1                * position read
          ELSE
            CALL      RDPRPR1                * full read
            COMPARE   ZERO,OVRCD
            GOTO      REDT4000 IF EQUAL
          ENDIF
REDT2000  CALL      RKPRPR1
          BRANCH    OVRCD,REDT9999
.
          MATCH     "zzzzzz",ENDPRAC
          IF        !@EQUAL
            MATCH     PRPRCODE,ENDPRAC        * check end of med.practice
            GOTO      REDT9999 IF LESS
          ENDIF
.
REDT4000  PACK      PRPRRDAT,CCC,CYY,CMM,CDD  * set date to current date
          REP       " 0",PRPRRDAT
          CALL      UPPRPR1
          GOTO      REDT2000
.
REDT9999  RETURN
+
.****************************************************************************
.         Check if all Medical Practices have been resetted
.****************************************************************************
CMED0000  MOVE      ZERO,EXIT
          MOVE      SP70,KEY6
          CALL      RSPRPR1                * position read
CMED1000  CALL      RKPRPR1
          BRANCH    OVRCD,CMED9999
.
          MATCH     SP70,PRPRRDAT
          GOTO      CMED1000 IF NOT EQUAL  * Resetted
.
CMED9000  MOVE      ONE,EXIT
CMED9999  RETURN
+
.****************************************************************************
.*                           MSET0000                  Called by: ENDF0000  *
.*                set up for merchant trax. pass                  ENDT0000  *
.****************************************************************************
MSET0000  MOVE         TWO,PASS                  * set flag for merchant pass
          MOVE         SIXTY,CLNO                * force new page
          CALL         IVAR0000                  * initialise variables
.
          PACK         KEY39,NOWYEAR,ANSD,SP30
          CALL         RSPRFN1                   * position in file
.
MSET9999  RETURN
+
.****************************************************************************
.*                            LINE0000                                      * 
.*                      draw line across page                               *
.*        called by: HEDR0000, FEES0000, CASH0000, JOUR0000, MERC0000       *
.*                   PSUM0000, ENDP0000                                     *
.****************************************************************************
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
LINE9999  RETURN
+
.****************************************************************************
.*                             SHLN0000                                     *
.*                        draw a short line                                 *
.*        called by: PTOT0000, CASH0000, JOUR0000, MERC0000, PSUM0000       *
.****************************************************************************
SHLN0000  PRINT     *1,PIPE,*33,PIPE,"------------",PIPE,"------------",PIPE:
                    "------------------------------------------------------":
                    "------------------",*132,PIPE
SHLN9999  RETURN
+
.****************************************************************************
.*                              CREA0000               Called by: TINV0000  *
.*                    create a new temporary file                           *
.****************************************************************************
CREA0000  CALL      KILL0000                     * remove existing file
.
          PACK      CMDLIN1,ISBUILD,TEMPFILE,UKEY
          EXECUTE   CMDLIN1,TASKID               * create temporary index file
.
          OPEN      FIRTEMP1,TEMPFILE            * open temp index file
          OPEN      FIRTEMP2,TEMPFILE
.
          PACK      CMDLIN3,ISBUILD,TEMPFIL2,UKEY2
          EXECUTE   CMDLIN3,TASKID
.
          OPEN      PRIFINS1,TEMPFIL2
          CALL      CREATP00                     * create temp files for path.
.
CREA9999  RETURN
+
.****************************************************************************
.*                              KILL0000               Called by: ENDT0000  *
.*               close and erase the temporary file               CREA0000  *
.****************************************************************************
KILL0000  CLOSE     FIRTEMP1                     * close file
          CLOSE     FIRTEMP2
          CLOSE     PRIFINS1
.
          PACK      CMDLIN2,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLIN2,TASKID               * erase temp file
.
          PACK      CMDLIN2,ERASE,TEMPFIL2
          EXECUTE   CMDLIN2,TASKID
          CALL      RMTMP000                     * remove PRIINVPR temp files
KILL9999  RETURN
+
.****************************************************************************
.         Update Private practice financial summary for previous years
.****************************************************************************
PRYCALFS  MOVE      FALSE,EXIT
          OPEN      PATDRGA2,"patdrgaf"     * Open the date range file
.
          PACK      KEY14,FSTDATE,SP6       * Position to this date           
          CALL      RDSDRGA2                * Get the first record on the date
          CALL      RDKDRGA2                  range file on or after this date
          BRANCH    OVRCD,PRYFS900
.
          MATCH     DRGFDTE,FSTDATE         * Is date before the from date ?
          GOTO      PRYFS900 IF LESS        * Yes. Date not found in file.
.
          MOVE      DRGYR,PRFNYEAR
          MOVE      DRGNUM,FORM2
.
.         MATCH     ANSA,PRFNTYPE           * invoice date must be current year
.         GOTO      PRYFS300 IF EQUAL         so bypass next code
.
.------ Check if this is in a prior financial year ------
.
          PACK      FSTDATE,CCC,CYY,CMM,CDD
          REP       " 0",FSTDATE
.
          PACK      KEY14,FSTDATE,SP6       * Position to this date
          CALL      RDSDRGA2                * Get the first record on the date
          CALL      RDKDRGA2                  range file on or after this date
          BRANCH    OVRCD,PRYFS900
.
          MATCH     DRGFDTE,FSTDATE         * Is date before the from date ?
          GOTO      PRYFS900 IF LESS        * Yes. Date not found in file.
.
          MATCH     DRGYR,PRFNYEAR          * see if the years are the same
          GOTO      PRYFS300 IF EQUAL       * Yes. Continue Processing
.
          GOTO      PRYFS200
.
.------ figures need to go into the last year amount field on the ------
.------ financial summary file, for the current financial year ------
.
PRYFS200  MOVE      TEN4,FORM2
          MOVE      DRGYR,PRFNYEAR
.
.------ write the data to the financial summary file ------
.
PRYFS300  PACK      KEY39,PRFNYEAR,PRFNTYPE,PRFNCODE,PRFNMPRA,SP70
.
.------ see if the record exists on the financial summary file ------
.
PRYFS400  IF        FGSTFLAG=1
            MOVE      "PRG",PRXCODE   * System Lock Audits
            CALL      GETSLK00        * Get System Lock Audits
            CALL      RDPRFG1         * Read financial summary file
          ELSE
            MOVE      "PFR",PRXCODE   * System Lock Audits
            CALL      GETSLK00        * Get System Lock Audits
            CALL      RDPRFN1         * Read financial summary file
          ENDIF
          BRANCH    OVRCD,PRYFS500
.
          LOAD      FSTWORK,FORM2,PRFNPR01,PRFNPR02,PRFNPR03:
                                  PRFNPR04,PRFNPR05,PRFNPR06:
                                  PRFNPR07,PRFNPR08,PRFNPR09:
                                  PRFNPR10,PRFNPR11,PRFNPR12:
                                  PRFNPR13,PRFNLAST
.
          ADD       FSTAMNT,FSTWORK
.
          STORE     FSTWORK,FORM2,PRFNPR01,PRFNPR02,PRFNPR03:
                                  PRFNPR04,PRFNPR05,PRFNPR06:
                                  PRFNPR07,PRFNPR08,PRFNPR09:
                                  PRFNPR10,PRFNPR11,PRFNPR12:
                                  PRFNPR13,PRFNLAST
.
          ADD       FSTAMNT,PRFNPERA
.
          IF        FGSTFLAG=1
            CALL      UPPRFG1                 * Update the record
          ELSE
            CALL      UPPRFN1                 * Update the record
          ENDIF
          CALL      RELSLK00        * Release System Lock Audits
.
          GOTO      PRYFS999
.
.------ Write a new record with zero amounts and then update the record ------
.
PRYFS500  MOVE      ZERO,PRFNPERA
          MOVE      ZERO,PRFNPR01
          MOVE      ZERO,PRFNPR02
          MOVE      ZERO,PRFNPR03
          MOVE      ZERO,PRFNPR04
          MOVE      ZERO,PRFNPR05
          MOVE      ZERO,PRFNPR06
          MOVE      ZERO,PRFNPR07
          MOVE      ZERO,PRFNPR08
          MOVE      ZERO,PRFNPR09
          MOVE      ZERO,PRFNPR10
          MOVE      ZERO,PRFNPR11
          MOVE      ZERO,PRFNPR12
          MOVE      ZERO,PRFNPR13
          MOVE      ZERO,PRFNLAST
          MOVE      SP5,PRFNSPAR
.
          IF        FGSTFLAG=1
            CALL      WRPRFG1                 * write to the financial summary
          ELSE
            CALL      WRPRFN1                 * write to the financial summary
          ENDIF
          GOTO      PRYFS400
.
.------ The requested date does not exist in the date range file OR ------
.------ the current date does not exist in the date range file ------
.
PRYFS900  UNPACK    FSTDATE,CCENT,CYEAR,CMON,CDAY
.
          CALL      PACDATE                 * pack the date
.
          DISPLAY   *P1:24,*EL,*B,"** Date ",*V2LON,CPCDATE,*HOFF," not found":
                    " in Period Range file. Hit <",*V2LON,"ENTER",*HOFF:
                    "> to continue ";
          KEYIN     ANS;
          DISPLAY   *P1:24,*EL;
          MOVE      TRUE,EXIT
.
.------ Finished update of financial summary file ------
.
PRYFS999  RETURN
+
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                    *
.****************************************************************************
RATEMP1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      FIRTEMP1,KEY8;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMP1   MOVE      TEMPSCN,DTEMPSCN
          WRITE     FIRTEMP1,KEY8;KEY8,TEMPDEB,DTEMPSCN
          RETURN
.
.         2nd Index
.
RSTEMP2   READ      FIRTEMP2,KEY18;;
          RETURN
.
RKTEMP2   MOVE      ZERO,OVRCD
          READKS    FIRTEMP2;DTEMPUNQ,TEMPDEB,DTEMPSCN
          GOTO      OVERCOND IF OVER
          MOVE      DTEMPUNQ,TEMPUNQ
          MOVE      DTEMPSCN,TEMPSCN
          RETURN
+
.****************************************************************************
.*            Write record to the Invoiced File                             *
.             HSYS=4 write to a comma delimited file
.****************************************************************************
.
WRPRFMI  BRANCH    SKIPFLAG,WRPRF99
         IF        HSYS1=4
           STRIP     IBGILEDG
           STRIP     IBGIACCT
           STRIP     IBGIDATE
           STRIP     IBGISIGN
           MOVE      IBGIVALU,KEY15
           SQUEEZE   KEY15
           STRIP     IBGIDESC
           STRIP     IBGIREF
           STRIP     IBGIDISS
           STRIP     IBGIRESP
           STRIP     IBGICRAC
           STRIP     IBGICRAA
           STRIP     IBGIBASC
           WRITE     PTINVGL,SEQ;*+,IBGILEDG,COMMA,IBGIACCT,COMMA:
                               IBGIDATE,COMMA,IBGISIGN,COMMA:
                               KEY15,COMMA,IBGIDESC,COMMA:
                               IBGIREF,COMMA,IBGIDISS,COMMA:
                               IBGIRESP,COMMA,IBGICRAC,COMMA:
                               IBGICRAA,COMMA,IBGIBASC
         ELSE
           WRITE     PTINVGL,SEQ;IBGILEDG,IBGIACCT,IBGIDATE,IBGISIGN:
                               IBGIVALU,IBGIDESC,IBGIREF,IBGIDISS:
                               IBGIRESP,IBGICRAC,IBGICRAA,IBGIBASC
         ENDIF
         RETURN
+
.****************************************************************************
.*            Write record to the "To Be Invoiced File"                     *
.             HSYS=4 write to a comma delimited file
.****************************************************************************
.
WRPRFMT  BRANCH    SKIPFLAG,WRPRF99
         IF        HSYS1=4
           STRIP     IBGILEDG
           STRIP     IBGIACCT
           STRIP     IBGIDATE
           STRIP     IBGISIGN
           MOVE      IBGIVALU,KEY15
           SQUEEZE   KEY15
           STRIP     IBGIDESC
           STRIP     IBGIREF
           STRIP     IBGIDISS
           STRIP     IBGIRESP
           STRIP     IBGICRAC
           STRIP     IBGICRAA
           STRIP     IBGIBASC
           WRITE     PTTBIGL,SEQ;*+,IBGILEDG,COMMA,IBGIACCT,COMMA:
                               IBGIDATE,COMMA,IBGISIGN,COMMA:
                               KEY15,COMMA,IBGIDESC,COMMA:
                               IBGIREF,COMMA,IBGIDISS,COMMA:
                               IBGIRESP,COMMA,IBGICRAC,COMMA:
                               IBGICRAA,COMMA,IBGIBASC
         ELSE
           WRITE     PTTBIGL,SEQ;IBGILEDG,IBGIACCT,IBGIDATE,IBGISIGN:
                               IBGIVALU,IBGIDESC,IBGIREF,IBGIDISS:
                               IBGIRESP,IBGICRAC,IBGICRAA,IBGIBASC
         ENDIF
WRPRF99  RETURN
+
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                    *
.****************************************************************************
RATEMP3   MOVE      ZERO,OVRCD
          RESET     KEY5
          READ      TMPFILE3,KEY5;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTEMP3   MOVE      ZERO,OVRCD
          RESET     KEY5
          READ      TMPFILE3,KEY5;XCURSECT,XSUBFCOD,XSETCODE,XTTAMITM
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMP3   MOVE      TEMPSCN,DTEMPSCN
          WRITE     TMPFILE3,KEY5;XCURSECT,XSUBFCOD,XSETCODE,XTTAMITM
          RETURN
.
RSTEMP3   READ      TMPFILE3,KEY5;;
          RETURN
.
RKTEMP3   MOVE      ZERO,OVRCD
          READKS    TMPFILE3;XCURSECT,XSUBFCOD,XSETCODE,XTTAMITM
          GOTO      OVERCOND IF OVER
          RETURN
.
UPTEMP3   MOVE      ZERO,OVRCD
          UPDATE    TMPFILE3;XCURSECT,XSUBFCOD,XSETCODE,XTTAMITM
          RETURN
+
.****************************************************************************
OPEN0000
CLOS0000
SCHPRO00
SETDEF00
GETCOD00
GETSVAR   RETURN
+
.==============================================================================
.
          INC       STD001IO
          INC       IBAPRINT
          INC       PATCOMN3                     * for GPERD
          INC       PATSRCH
          INC       PATSNDX
          INC       PRICALFS
          INC       PRIINVHL
          INC       PRIINVTL
          INC       PRIINVPR
          INC       CLPRIDTR
          INC       SEXDSP00
          INC       TFILENAM                * Generate Temp File Name
.
          INC       WEBERRIO/INC            * Web Server Error Logging
          INC       BOKRC1IO/INC
          INC       PRIFMSIO/INC                 * FMS - PP interface file
          INC       IBAPRNIO/INC
          INC       IBATMDIO/INC
          INC       IBATMHIO/INC
          INC       OUTPREIO/INC
.
          INC       FMSLMAIO/INC
          INC       PATDRGIO/INC                 * date range file
          INC       PATCODIO/INC                 * codes file
          INC       IBAGEDIO/INC
          INC       PMSHCPIO/INC                 * doctor file
          INC       PMSHCLIO/INC
          INC       PMSPX2IO/INC                                   
          INC       PATFN1IO/INC                 * health fund file
          INC       PATGSRIO/INC                 * Patient Surname / Given Name
          INC       PATIN1IO/INC                 * insurance file
          INC       PATITMIO/INC                 * MBS item file
          INC       PATMA1IO/INC                 * patient master file
          INC       PATMCHIO/INC                 * miscellaneous charges file
          INC       PATMESIO/INC                 * message file
          INC       PATMI1IO/INC                 * admission file
          INC       PMSVX1IO/INC                 * admission file
          INC       PATPERIO/INC                 * doctor personal file
          INC       PATPR1IO/INC                 * pre-admission file
          INC       PATRE1IO/INC                 * PRA file            
          INC       PATVISIO/INC                 * visit file
.
          INC       COMDEPIO/INC
          INC       RCPDTEIO/INC
          INC       PRIPCEIO/INC                 * Income Percentage
          INC       PRIAUIIO/INC
          INC       PRIBULIO/INC                 * bulk billing file
          INC       PRICNOIO/INC
...          INC       PRIDBTIO/INC                 * debtor file
          INC       PRIDOCIO/INC                 * practice doctor file
          INC       PRIDTRIO/INC                 * transaction file
          INC       PRIEXCIO/INC
          INC       PRIECTIO/INC
          INC       PRIFIGIO/INC                 * financial stats file
          INC       PRIFINIO/INC                 * financial stats file
          INC       PRIGRPIO/INC                 * item group file
          INC       PRIHDBIO/INC                 * holding header file
          INC       PRIHISIO/INC                 * test history file
          INC       PRIHOLIO/INC                 * account hold file
          INC       PRIHREIO/INC                 * holding referral file
          INC       PRIHTRIO/INC                 * holding transaction file
          INC       PRIINVIO/INC                 * invoice file
          INC       PRIITMIO/INC                 * item file
          INC       PRIMABIO/INC                 * motor acc. board file
          INC       PRIMGPIO/INC                 * medicare gap file     
          INC       PRIMULIO/INC                 * multiple codes file
          INC       PRIPRAIO/INC                 * practice file
          INC       PRISPTIO/INC                 * spec. path. test file
          INC       PRISTAIO/INC                 * financial statistics file
          INC       PRITESIO/INC                 * test file
          INC       PRIVAFIO/INC                 * veteran affairs file
          INC       PRIWCOIO/INC                 * workers comp. file
          INC       PRIALSIO/INC                 * Medical Prac.all user access
          INC       PRISECIO/INC                 * Medical Prac.security access
          INC       RCPBNKIO/INC
          INC       RCPBDTIO/INC
          INC       RCPREGIO/INC
.
          INC       PRIINVIT/INC
          INC       HICITIIO/INC                 * HIC items invoice file
.
          INC       PATMWSIO/INC
          INC       PATSNX2
          INC       PATGBCRN
          INC       NZIBSRCH
          INC       NZHISIIO
          INC       CLPATMAS
          INC       CALCAGE
          INC       PATMCHRD                * Miscellaneous Charges read routine
          INC       PATITMRD
          INC       NHIMASIO/INC                 * NZHIS Variables
.
          INC       PATHSPIO/INC           * Hospital Details for GBCRN000
.
          INC       WEBIMCIO/INC
          INC       WEBB2BIO/INC
+
