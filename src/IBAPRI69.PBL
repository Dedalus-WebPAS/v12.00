.******************************************************************************
.* System   :  Private Practice                                               *
.* Program  :  IBAPRI69                                                       *
.* Desc     :  SET-UP GENERAL LETTERS                                         *
.******************************************************************************
.* Date     :  09/10/91                                                       *
.* Author   :  Steve Armstrong                                                *
.* Comment  :  Code copied across from IBAPPP69 then modified to              *
.*             bring it up to standard.                                       *
.*             11/12/91  DIG                                                  *
.*                       Made neccessary modifications for Private            *
.*                       Practice re-write.                                   *
.* Mods     :                                                                 *
.*             V11.04.01 05.02.2024  DA Sarkies     TSK 0936282               *
.*                       Increased size of variable to hold Healthfund Number *
.*             V10.13.01 05/12/2018  Don Nguyen     TSK 0838558               *
.*                       Deleted temp file (TEMP1) on program exit            *
.*             V10.04.01 15/04/2014  J.Tan          CAR 261630                *
.*                       Removed port number from temp file name              *
.*             V9.03.01  14/10/2003  Tracey Nguyen  CAR 44125                 *
.*                       Recompiled to pick up renamed spare variable in      *
.*                       PRILETFD                                             *
.*----------------------------------------------------------------------------*
.*          :  V6.01     12/05/1992  Graeme Williams        SRF 114249        *
.*                       Fixed verify option if top margin = 15               *
.*             V6.02     04/06/1992  Whirlpool                                *
.*                       Fixed exit in option 3 (Verify)                      *
.*             V6.00.02  05/12/1992  Steve Armstrong                          *
.*                       Brought version number in line                       *
.*                                                                            *
.******************************************************************************
.
          INC       STD001FD
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
          INC       PRILETFD/INC                  * Letter file
+
.**********************************************************************
.*                           CONSTANTS                                *
.**********************************************************************
.
.            ---- List of variables which the ----
.            ---- Word Processor understands  ----
.
LCACDATE  INIT      "%acdate"           * Accident Date
LCACLASS  INIT      "%aclass"           * Admission Class
LCADDA    INIT      "%adda"             * Address Line 1
LCADDB    INIT      "%addb"             * Address Line 2
LCADDC    INIT      "%addc"             * Address Line 3
LCCLMDES  INIT      "%clmdesc"          * Claim Code Description
LCDATE    INIT      "%date"             * Today's Date
LCDEBTNO  INIT      "%debtno"           * Debtor Number
LCDOB     INIT      "%dob"              * Date Of Birth
LCDUSR1   INIT      "%dusra"            * Debtor User Defined Field 1
LCDUSR2   INIT      "%dusrb"            * Debtor User Defined Field 2
LCDUSR3   INIT      "%dusrc"            * Debtor User Defined Field 3
LCDUSR4   INIT      "%dusrd"            * Debtor User Defined Field 4
LCFRSTI   INIT      "%frsti"            * Patient First Initial
LCFNAME   INIT      "%fname"            * Patient Full Name
LCGNAME   INIT      "%gname"            * Patient Given Name
LCHFMEM   INIT      "%hfmemno"          * Health Fund Membership Number
LCHFTAB   INIT      "%hftable"          * Health Fund Table
LCHFUND   INIT      "%hfund"            * Health Fund
LCHOSP    INIT      "%hosp"             * Hospital Name
LCHADDA   INIT      "%hadda"            * Hospital Address Line 1
LCHADDB   INIT      "%haddb"            * Hospital Address Line 2
LCHADDC   INIT      "%haddc"            * Hospital Address Line 3
LCHPOST   INIT      "%hpost"            * Hospital Postcode
LCHTELE   INIT      "%htele"            * Home Telephone Number
LCLETDAT  INIT      "%letdat"           * Date of letter
LCMEDNO   INIT      "%mednum"           * Medicare Number
LCPAGE    INIT      "%page"             * Page Break Variable
LCPCODE   INIT      "%pcode"            * Patient Post Code
LCPRADES  INIT      "%pracdes"          * Practice Description
LCPRAADA  INIT      "%praada"           * Practice Address Line 1
LCPRAADB  INIT      "%praadb"           * Practice Address Line 2
LCPRAADC  INIT      "%praadc"           * Practice Address Line 3
LCPRAPOS  INIT      "%prapos"           * Practice Postcode
LCPRATEL  INIT      "%pratel"           * Practice Telephone Number
LCRESACC  INIT      "%resacc"           * Person Responsible for Account
LCRESADA  INIT      "%resadda"          * Person Responsible Address 1
LCRESADB  INIT      "%resaddb"          * Person Responsible Address 2
LCRESADC  INIT      "%resaddc"          * Person Responsible Address 3
LCRESPCD  INIT      "%respost"          * Person Responsible Post Code
LCRESHTL  INIT      "%reshtel"          * Person Responsible Home Telephone
LCRESWTL  INIT      "%reswtel"          * Person Responsible Work Telephone
LCRESREL  INIT      "%resrel"           * Person Responsible Relationship
LCRDFIN   INIT      "%rdfin"            * Referring Doctor First Initial
LCRDGIV   INIT      "%rdgiv"            * Referring Doctor Given Names
LCRDNAM   INIT      "%rdnam"            * Referring Doctor Full Name
LCRDSUR   INIT      "%rdsur"            * Referring Doctor Surname
LCRDTITL  INIT      "%rdtitl"           * Referring Doctor Title
LCRUSR1   INIT      "%rusra"            * Referral User Defined Field 1
LCRUSR2   INIT      "%rusrb"            * Referral User Defined Field 2
LCRUSR3   INIT      "%rusrc"            * Referral User Defined Field 3
LCRUSR4   INIT      "%rusrd"            * Referral User Defined Field 4
LCSDFIN   INIT      "%rsfin"            * Service Doctor First Initial
LCSDGIV   INIT      "%rsgiv"            * Service Doctor Given Names
LCSERDOC  INIT      "%serdoct"          * Service Doctor
LCSDSUR   INIT      "%rssur"            * Service Doctor Surname
LCSDTITL  INIT      "%rstitl"           * Service Doctor Title
LCSNAME   INIT      "%sname"            * Patient Surname
LCTITLE   INIT      "%title"            * Patient Title
LCVISDAT  INIT      "%visdat"           * Visit Date
LCWTELE   INIT      "%wtele"            * Work Telephone Number
.
. ----- Maximum Field Lengths for the Variables Above -----
.
LXACDATE  INIT      "99/99/9999"
LXACLASS  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXADDA    INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXADDB    INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXADDC    INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXCLMDES  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXDATE    INIT      "99th XXXXXXXXX 1999"
LXDEBTNO  INIT      "XXXXXXXX"
LXDOB     INIT      "99/99/9999"
LXDUSR1   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXDUSR2   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXDUSR3   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXDUSR4   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXFRSTI   INIT      "X"
LXFNAME   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXGNAME   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXHFMEM   INIT      "9999999999999999999"
LXHFTAB   INIT      "XXXXXXXX"
LXHFUND   INIT      "XXXXXX"
LXHOSP    INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXHADDA   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXHADDB   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXHADDC   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXHPOST   INIT      "XXXX"
LXHTELE   INIT      "999999999999"
LXLETDAT  INIT      "99/99/9999"
LXMEDNO   INIT      "9999999999"
LXPAGE    INIT      "X       ------          page ":
                    "break       ------        X"
LXPCODE   INIT      "9999"
LXPRADES  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPRAADA  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXPRAADB  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXPRAADC  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXPRAPOS  INIT      "9999"
LXPRATEL  INIT      "XXXXXXXXXXXX"
LXRESACC  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXRESADA  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXRESADB  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXRESADC  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXRESPCD  INIT      "9999"
LXRESHTL  INIT      "999999999999"
LXRESWTL  INIT      "999999999999"
LXRESREL  INIT      "XXXXXXXXXX"
LXRDFIN   INIT      "X"
LXRDGIV   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXRDNAM   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXRDSUR   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXRDTITL  INIT      "XXXXXXXXX"
LXRUSR1   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXRUSR2   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXRUSR3   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXRUSR4   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXSDFIN   INIT      "X"
LXSDGIV   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXSERDOC  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXSDSUR   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXSDTITL  INIT      "XXXXXXXXX"
LXSNAME   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXTITLE   INIT      "XXXX"
LXVISDAT  INIT      "99/99/9999"
LXWTELE   INIT      "999999999999"
.
REPSTR    INIT      "a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0"
SPECCHAR  INIT      "%"
TEMP1     FILE      ASCII, FIXED=70
+
.**********************************************************************
.*                        GLOBAL  VARIABLES                           *
.**********************************************************************
.  
BOTMARG   FORM      2                            * bottom margin
.
CLINE     FORM      3                            * line number
CMDLINE   DIM       50
COUNT     FORM      3                            * line number
.
DIM30     DIM       30                           * short line text
DIM70     DIM       70                           * full line text
DISPSTRN  DIM       70                           * print string
.
ENDSTR    FORM      2                            * end of string value
.
FORM3     FORM      3                            * page length
FNAMER    DIM       8                            * temp file name
.
LEFTMARG  FORM      2                            * left margin
LETTNAME  DIM       20                           * letter name
LINE      FORM      3                            * line number
LINENO    FORM      3                            * line number
LSTPRINT  FORM      3                            * last page length
.
MAXLINES  FORM      3                            * maximum lines
.
OPTN      DIM       6                            * option header string
.
PERCPOS   FORM      2                            * percentage sign position
PHYSPAGE  FORM      3                            * page length
PRTSTRNG  DIM       70                           * print string
.
SRCHNUM   FORM      2                            * search number
SRCHVAR   DIM       8                            * search variable
STARTSTR  FORM      2                            * start of string value
.
TEMP2     FORM      2                            * top margin
TEMP70    DIM       70                           * line of text
TMPLETT   DIM       3                            * letter number
TMPLETNO  FORM      3                            * letter number
TOPMARG   FORM      2                            * top margin
.
PRGID     INIT      "IBAPRI69"
PRGNAM    INIT      "Set-up Letters"
VERSION   INIT      "V12.00.00"
.
.********************************************************************** 
.*                             MAINLINE                               *
.**********************************************************************
.
ML0000    CALL      INIT0000                      * Initialize
.
ML1000    CALL      CLR0000                       * Clear Variables
          CALL      SCR0000                       * Call Option Screen
          BRANCH    EXIT,ML9999
          BRANCH    COPTION,ML2000:               * Add a letter
                            ML3000:               * View a letter
                            ML4000:               * Verify a letter
                            ML5000:               * Change a letter
                            ML6000:               * Delete a letter
                            ML7000                * Print a letter
.
.        -----  add a letter  -----
.
ML2000    MOVE      "Add   ",OPTN
.
          CALL      INLT0000                      * Input the Letter Number
          BRANCH    EXIT,ML1000
.
          CALL      LDET0000                      * Display Parameter Fields
          BRANCH    EXIT,ML2000
.
          CALL      INDT0000                      * Input Letter Details
.
          CALL      SEL0000                       * Select Field to Update
          BRANCH    EXIT,ML2000
.
          CALL      HEAD0000                      * Write the header record to
.                                                  Letter Record
.
          CALL      WP0000                        * Call the word processor
          COMPARE   ONE,FORM1
          GOTO      ML1000 IF NOT EQUAL           * abort entered
          CALL      ADDL0000                      * Add a Letter to the File
          GOTO      ML1000
.
.        -----  view a letter  -----
.
ML3000    MOVE      "View  ",OPTN
.
          CALL      INLT0000                      * Input the Letter Number
          BRANCH    EXIT,ML1000
.
          CALL      PARA0000                      * Display the Letter Param's.
          BRANCH    EXIT,ML3000
.
          CALL      DISP0000                      * Display the Letter Text
          BRANCH    EXIT,ML3000                   * Maximum Variable Length
.
          CALL      CONT0000                      * Hit Return to Continue
          GOTO      ML1000
.
.        -----  verify a letter  -----
.
ML4000    MOVE      "Verify",OPTN
          CALL      INLT0000                      * Input the Letter Number
          BRANCH    EXIT,ML1000
.
          CALL      VERF0000                      * Modify the line to show
          BRANCH    EXIT,ML4000                   * Maximum Variable Length
.
          CALL      CONT0000                      * Hit Return to Continue
          GOTO      ML1000
.
.        -----  change a letter  -----
.
ML5000    MOVE      "Change",OPTN
          CALL      INLT0000                      * Input the Letter Number
          BRANCH    EXIT,ML1000
.
          CALL      DETL0000                      * Display the Letters Details
          CALL      SEL0000                       * Select Item to Modify
          BRANCH    EXIT,ML5000
.
          CALL      UPDT0000                      * Update Letter in w.p.
          BRANCH    EXIT,ML5000
          GOTO      ML1000
.
.        ----- delete a letter  -----
.
ML6000    MOVE      "Delete",OPTN
.
          CALL      INLT0000                      * Input the Letter to Delete
          BRANCH    EXIT,ML1000
.
          CALL      DETL0000                      * Display the Letter Param's
          BRANCH    EXIT,ML6000
.
          CALL      CONT0000
          CALL      DISP0000                      * Display Letter 
.
          CALL      DEL0000                        * Delete Record Procedure
          BRANCH    EXIT,ML6000
          GOTO      ML1000
.
.        ----- print a letter  -----
.
ML7000    MOVE      "Print ",OPTN
.
          CALL      INLT0000                      * Input the Letter to Print
          BRANCH    EXIT,ML1000
.
          CALL      PRT0000                       * Print the Extended Letter
          BRANCH    EXIT,ML7000
.
          CALL      CONT0000                      * Hit Return to Continue
          GOTO      ML1000
.
ML9999    PREP      TEMP1,FNAMER
          CLOSE     TEMP1,DELETE
          CHAIN     PGM
+
.****************************************************************************
.*                         INIT0000                    Called by: ML0000    *
.*                       Initialization                                     *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening ":
                    *P64:24,"priletaf";
          OPEN      PRILETR1,"priletaf"
.
          DISPLAY   *P64:24,"priletaf"
          OPEN      PRILETR2,"priletaf"
.
.---------- set up temp file -------
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,FNAMER
.
INIT9999  RETURN
+
.**************************************************************************** 
.*                              CLR0000                Called by: ML0000    *
.*                          Clear Variables                                 *
.****************************************************************************
.
CLR0000   HLINE     *G37,2,60,80
.
          PACK      DIM70,SP30,SP30,SP10
          MOVE      ZERO,PRLEMBOT
          MOVE      ZERO,PRLEMTOP
          MOVE      ZERO,PRLEPLEN
          MOVE      ZERO,PRLELEFT
          MOVE      ZERO,LINE
          MOVE      SP20,LETTNAME
          MOVE      ZERO,TOPMARG
          MOVE      ZERO,LEFTMARG
          MOVE      ZERO,FORM3
CLR9999   RETURN
+
.**************************************************************************** 
.*                               SCR0000               Called by: ML0000    *
.*                        Main Option Screen                                *
.****************************************************************************
.
SCR0000   DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = Add a Letter":
                    *P1:6,*V2LON,"2",*HOFF," = View a Letter":
                    *P1:7,*V2LON,"3",*HOFF," = Verify a Letter":
                    *P1:8,*V2LON,"4",*HOFF," = Change a Letter":
                    *P1:9,*V2LON,"5",*HOFF," = Delete a Letter":
                    *P1:10,*V2LON,"6",*HOFF," = Print a Letter":
                    *P1:12,"Please Select :";
.
SCR1000   KEYIN     *P17:12,*EL,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION
          GOTO      SCR9500 IF EQUAL
.
          BRANCH    COPTION,SCR9000:
                            SCR9000:
                            SCR9000:
                            SCR9000:
                            SCR9000:
                            SCR9000
.
          BEEP
          GOTO      SCR1000
.
SCR9000   MOVE      ZERO,EXIT
          GOTO      SCR9999
.
SCR9500   MOVE      ONE,EXIT
.
SCR9999   RETURN
+
.****************************************************************************
.*                                 INLT0000            Called by: ML0000    *
.*                          Input the Letter Number                         *
.****************************************************************************
.
INLT0000  DISPLAY   *P60:2,*V2LON," ",OPTN," ";
.
INLT1000  KEYIN     *P1:3,*EF:
                    *P4:4,"Letter No.          :":
                    *P26:4,*V2LON,TMPLETT:
                    *P26:4,*DV,TMPLETT
.
          CALL      CHKL0000                      * see what was input
          BRANCH    EXIT,INLT9500:                * nothing
                         INLT4000:                * ?
                         INLT9000                 * valid
.
          GOTO      INLT1000
.
INLT4000  CALL      QEST0000                      * display letters on file
.
INLT4500  KEYIN     *P1:24,*EL,"Letter No. : ":
                    *P14:24,*V2LON,TMPLETT:
                    *P14:24,*DV,TMPLETT
.
          CALL      CHKL0000                      * see what was input
          BRANCH    EXIT,INLT9500:                * nothing
                         INLT4000:                * ?
                         INLT8900                 * valid
.
          GOTO      INLT4500
.
INLT8900  DISPLAY   *P1:3,*EF:
                    *P4:4,"Letter No.          :":
                    *P26:4,*V2LON,TMPLETT
INLT9000  MOVE      ZERO,EXIT
          GOTO      INLT9999
.
INLT9500  MOVE      ONE,EXIT
.
INLT9999  RETURN
+
.****************************************************************************
.*                              QEST0000               Called by: INLT0000  *
.*               Display all Codes on Report File for "?"                   *
.****************************************************************************
.
QEST0000  DISPLAY   *P1:4,*EF,*P30:4,*V2LON,*ULON,"EXISTING LETTERS"
          MOVE      FIVE,CVERT
.
          MOVE      SP6,KEY6
          CALL      RSPRLE2                      * anything on file ?
          CALL      RKPRLE2
          BRANCH    OVRCD,QEST9500               * no
.
          GOTO      QEST1500
.
QEST1000  CALL      RKPRLE2
          BRANCH    OVRCD,QEST9000
.
          COMPARE   PRLELINE,ZERO                * line 0 ?
          GOTO      QEST9000 IF NOT EQUAL        * no
.
          ADD       ONE,CVERT
.
          COMPARE   TWENTY3,CVERT                * page full ?
          GOTO      QEST1500 IF LESS             * no
          GOTO      QEST2000                     * yes
.
QEST1500  MOVE      PRLETEXT,DIM30
          DISPLAY   *P5:CVERT,*V2LON,PRLENUMB,SP2,*HOFF,DIM30;
.
          GOTO      QEST1000
.
QEST2000  KEYIN     *P1:24,*EL,"(",*V2LON,*DV,ANSC,*HOFF,")ontinue, (":
                    *V2LON,*DV,ANSF,*HOFF,")irst Screen, (":
                    *V2LON,*DV,ANSN,*HOFF,")ext Screen : ":
                    *P45:24,*V2LON,ANS
.
          REP       UPPLOW,ANS
.
          CMATCH    ANSC,ANS                     * continue ?
          GOTO      QEST9000 IF EQUAL            * yes
.
          CMATCH    ANSF,ANS                     * first ?
          GOTO      QEST0000 IF EQUAL            * yes
.
          CMATCH    ANSN,ANS                     * next ?
          GOTO      QEST4000 IF EQUAL            * yes
.
          BEEP
          GOTO      QEST2000                     * invalid
.
QEST4000  MOVE      FIVE,CVERT
          DISPLAY   *P1:CVERT,*EF;
.
          GOTO      QEST1500
.
QEST9000  MOVE      ZERO,OVRCD
          GOTO      QEST9999
.
QEST9500  DISPLAY   *P1:24,*EL,*B,"No Letters on file.  ";
          CALL      HITENTER
.
QEST9999  RETURN
+
.****************************************************************************
.*                              CHKL0000               Called by: INLT0000  *
.*                    Check if Letter is on File                            *
.* Returns:          EXIT   0 = invalid input                               *
.*                          1 = nothing input                               *
.*                          2 = ? input                                     *
.*                          3 = valid input                                 *
.****************************************************************************
.
CHKL0000  RESET     TMPLETT                       * anything entered ?
          GOTO      CHKL9000 IF EOS               * no
.
          MATCH     SP1,TMPLETT                   * spaces entered ?
          GOTO      CHKL9000 IF EQUAL             * yes
.
          MATCH     QUEST,TMPLETT                 * "?" entered ?
          GOTO      CHKL8500 IF EQUAL             * yes
.
.         Check type of input
.
          TYPE      TMPLETT                       * numerics input ?
          GOTO      CHKL7000 IF NOT EQUAL         * no
.
.         See if letter on file
.
          MOVE      TMPLETT,TMPLETNO
          COMPARE   ONE,TMPLETNO                  * number zero or less ?
          GOTO      CHKL9500 IF LESS              * yes - invalid
.
          MOVE      ZERO,CLINE
          PACK      KEY6,TMPLETNO,CLINE
          CALL      RDPRLE1                       * read record
.
          BRANCH    COPTION,CHKL2000              * add - shouldn't exist
.
          BRANCH    OVRCD,CHKL1000                * should exist for other opts.
          MOVE      PRLETEXT,LETTNAME
          MOVE      PRLEMTOP,TOPMARG
          MOVE      PRLELEFT,LEFTMARG
          MOVE      PRLEPLEN,PHYSPAGE
          GOTO      CHKL8000
.
CHKL1000  DISPLAY   *P1:24,*EL,*B,"Letter not on file.  ";
          CALL      HITENTER
          GOTO      CHKL9500
.
CHKL2000  BRANCH    OVRCD,CHKL8000 
.
          DISPLAY   *P1:24,*EL,*B,"Letter Already Exists on File.  ";
          CALL      HITENTER
          GOTO      CHKL9500
.
CHKL7000  DISPLAY   *P1:24,*EL,*B,"Letter Number not valid.  ";
          CALL      HITENTER
          GOTO      CHKL9500
.
CHKL8000  MOVE      THREE,EXIT                   * valid
          GOTO      CHKL9999
.
CHKL8500  MOVE      TWO,EXIT                     * ?
          GOTO      CHKL9999
.
CHKL9000  MOVE      ONE,EXIT                     * nothing
          GOTO      CHKL9999
.
CHKL9500  MOVE      ZERO,EXIT                    * invalid
.
CHKL9999  RETURN
+
.****************************************************************************
.*                                LDET0000             Called by: ML0000    *
.*                    Input the Details of the new Letter                   *
.****************************************************************************
.
LDET0000  DISPLAY   *P1:5,*EF:
                    *P1:5,"   Name                :":
                    *P1:6,*V2LON,"1",*HOFF,". Paper Page Length   :":
                    *P1:7,*V2LON,"2",*HOFF,". Top Margin Size     :":
                    *P1:8,*V2LON,"3",*HOFF,". Bottom Margin Size  :":
                    *P1:9,*V2LON,"4",*HOFF,". Left Margin Size    :";
.
LDET9999  RETURN
+
.****************************************************************************
.*                              INDT0000               Called by: ML0000    *
.*                       Input the Letter Details                           *
.****************************************************************************
.
INDT0000  CALL      NAME0000            * Input the Letter Name
          CALL      PAPL0000            * Input the Paper Page Length
          CALL      TMAR0000            * Input the Top Margin Size
          CALL      BMAR0000            * Input the Bottom Margin Size
          CALL      LMAR0000            * Input the Left Margin Size
.
INDT9999  RETURN
+
.****************************************************************************
.*                                  SEL0000            Called by: ML0000    *
.*           Select Field to Update on the Input Letter Detail Screen       *
.****************************************************************************
.
SEL0000   CALL      MAINQST
.
          COMPARE   ZERO,CCITEM                  * post ?
          GOTO      SEL9500 IF EQUAL             * yes
.
          COMPARE   "-1",CCITEM                  * cancel ?
          GOTO      SEL9000 IF EQUAL             * yes
.
          BRANCH    CCITEM,SEL2000:
                           SEL3000:
                           SEL4000:
                           SEL5000
.
          BEEP
          GOTO      SEL0000
.
SEL2000   CALL      PAPL0000            * Input the Paper Page Length
          GOTO      SEL0000
.
SEL3000   CALL      TMAR0000            * Input the Top Magin Size
          GOTO      SEL0000
.
SEL4000   CALL      BMAR0000            * Input the Bottom Margin Size
          GOTO      SEL0000
.
SEL5000   CALL      LMAR0000            * Input the Left Margin Size
          GOTO      SEL0000
.
SEL9000   MOVE      ONE,EXIT
          GOTO      SEL9999
.
SEL9500   MOVE      ZERO,EXIT
.
SEL9999   RETURN
+
.****************************************************************************
.*                               NAME0000              Called by: INDT0000  *
.*                         Input the Letter Name                            *
.****************************************************************************
.
NAME0000  KEYIN     *P26:5,*DV,UNDLN20:
                    *P26:5,*V2LON,LETTNAME:
                    *P26:5,*DV,LETTNAME
.
NAME9999  RETURN
+
.****************************************************************************
.*                                PAPL0000             Called by: INDT0000  *
.*                      Input the Physical Paper Length           SEL0000   *
.****************************************************************************
.
PAPL0000  KEYIN     *P26:6,*DV,UNDLN3:
                    *P26:6,*V2LON,PRLEPLEN:
                    *P26:6,*DV,PRLEPLEN 
.
          COMPARE   ZERO,PRLEPLEN
          GOTO      PAPL0000 IF EQUAL
.
          COMPARE   PRLEPLEN,PRLEMBOT
          GOTO      PAPL9000 IF LESS
          DISPLAY   *P1:24,*EL,*B,"Page Length Must Be Greater than the ":
                           "Bottom Margin.  ";
          CALL      HITENTER
          GOTO      PAPL0000
.
PAPL9000  CALL      MARG0000
          BRANCH    OVRCD,PAPL0000
.
PAPL9999  RETURN
+
.****************************************************************************
.*                                TMAR0000             Called by: INDT0000  *
.*                        Input the top Margin Size               SEL0000   *
.****************************************************************************
.
TMAR0000  KEYIN     *P27:7,*DV,UNDLN2:
                    *P27:7,*V2LON,PRLEMTOP:
                    *P27:7,*DV,PRLEMTOP
.
          COMPARE   ZERO,PRLEMTOP
          GOTO      TMAR0000 IF EQUAL
          COMPARE   PRLEPLEN,PRLEMTOP
          GOTO      TMAR9000 IF LESS
          DISPLAY   *P1:24,*EL,*B,"Top Margin Must Be Less than Page length.  ";
          CALL      HITENTER
          GOTO      TMAR0000
.
TMAR9000  MOVE      PRLEPLEN,FORM3
          SUB       TWO,FORM3
          COMPARE   FORM3,PRLEMTOP
          GOTO      TMAR9900 IF LESS
          DISPLAY   *P1:24,*EL,*B,"Top Margin Too Big.  ";
          CALL      HITENTER
          GOTO      TMAR0000
.
TMAR9900  CALL      MARG0000
          BRANCH    OVRCD,TMAR0000
.
TMAR9999  RETURN
+
.****************************************************************************
.*                                BMAR0000             Called by: INDT0000  *
.*                         Input the Bottom Margin                SEL0000   *
.****************************************************************************
.
BMAR0000  KEYIN     *P27:8,*DV,UNDLN2:
                    *P27:8,*V2LON,PRLEMBOT:
                    *P27:8,*DV,PRLEMBOT
.
          COMPARE   ZERO,PRLEMBOT
          GOTO      BMAR0000 IF EQUAL
          COMPARE   PRLEPLEN,PRLEMBOT
          GOTO      BMAR9000 IF LESS
          DISPLAY   *P1:24,*EL,*B,"Bottom Margin Must Be Less than Page ":
                    "length.  ";
          CALL      HITENTER
          GOTO      BMAR0000
.
BMAR9000  MOVE      PRLEPLEN,FORM3
          SUB       TWO,FORM3
          COMPARE   FORM3,PRLEMBOT
          GOTO      BMAR9900 IF LESS
          DISPLAY   *P1:24,*EL,*B,"Bottom Margin Too Big.  ";
          CALL      HITENTER
          GOTO      BMAR0000
.
BMAR9900  CALL      MARG0000
          BRANCH    OVRCD,BMAR0000
.
BMAR9999  RETURN
+
.****************************************************************************
.*                              LMAR0000               Called by: INDT0000  *
.*                        Input the Left Margin                   SEL0000   *
.****************************************************************************
.
LMAR0000  KEYIN     *P27:9,*DV,UNDLN2:
                    *P27:9,*V2LON,PRLELEFT:
                    *P27:9,*DV,PRLELEFT 
.
          COMPARE   ZERO,PRLELEFT
          GOTO      LMAR0000 IF EQUAL
          COMPARE   TWENTY1,PRLELEFT
          GOTO      LMAR9999 IF LESS
.
          DISPLAY   *P1:24,*EL,*B,"Left Margin May Not Exceed 20.  ";
          CALL      HITENTER
          GOTO      LMAR0000
.
LMAR9999  RETURN
+
.****************************************************************************
.*                                MARG0000             Called by: PAPL0000  *
.*                       Verify if Top + Bottom < Page Length     TMAR0000  *
.*                                                                BMAR0000  *
.****************************************************************************
.
MARG0000  MOVE      ZERO,OVRCD
          MOVE      PRLEMTOP,FORM3
          ADD       PRLEMBOT,FORM3
          COMPARE   PRLEPLEN,FORM3
          GOTO      MARG9999 IF LESS
.
          MOVE      ONE,OVRCD
          DISPLAY   *P1:24,*EL,*B,"Invalid Top & Bottom Margin Combination.  ";
          CALL      HITENTER
.
MARG9999  RETURN
+
.****************************************************************************
.*                                  HEAD0000           Called by: ML0000    *
.*                    Write the Header Record to the Letter File            *
.****************************************************************************
HEAD0000  MOVE      ZERO,CLINE
          PREP      TEMP1,FNAMER
          MOVE      LETTNAME,PRLETEXT
          PACK      KEY6,TMPLETNO,CLINE
          CALL      WRPRLE1
.
HEAD9999  RETURN
+
.****************************************************************************
.*                                  WP0000             Called by: ML0000    *
.*              SET UP THE TEMP FILE AND CALL THE WORD PROCESSOR            *
.****************************************************************************
WP0000    MOVE      ZERO,FORM1
          CLOSE     TEMP1
          WORD      FNAMER,999,5,7,76,23,FORM1
WP9999    RETURN
+
.****************************************************************************
.*                               ADDL0000              Called by: ML0000    *
.*                     Add a Letter to the Letter File                      *
.****************************************************************************
ADDL0000  KEYIN     *P1:24,*EL,"Ok to Post Letter Changes (",*V2LON:
                    *DV,ANSY,*HOFF,*DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") :":
                    *P35:24,*V2LON,ANS
          REP       UPPLOW,ANS
          RESET     ANS
          GOTO      ADDL0000 IF EOS
.
          MATCH     SP1,ANS
          GOTO      ADDL0000 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      ADDL9999 IF EQUAL
.
          MATCH     ANSY,ANS
          GOTO      ADDL0500 IF EQUAL
.
          BEEP
          GOTO      ADDL0000
.
ADDL0500  DISPLAY   *P1:24,*EL,"Posting Changes to the Letter",*BLINKON,*V2LON:
                           " - Please Wait";
.
          CLOSE     TEMP1                         * Reset the File to Top for
          OPEN      TEMP1,FNAMER                  * Reading
          MOVE      ZERO,COUNT
.
ADDL2000  MOVE      ZERO,PRLEVARB                 * Reset the "%" Sign Marker
          PACK      DIM70,SP30,SP30,SP10
          PACK      PRLETEXT,SP30,SP30,SP10
          READ      TEMP1,SEQ;DIM70
          GOTO      ADDL9999 IF OVER
          ADD       ONE,COUNT                     * Increment count for the key
          MOVE      DIM70,PRLETEXT
          SCAN      SPECCHAR,PRLETEXT             * Set the Marker in the Letter
          GOTO      ADDL2100 IF NOT EQUAL         * File if the line of text
          MOVE      ONE,PRLEVARB                  * contains a "%"
.
ADDL2100  PACK      KEY6,TMPLETNO,COUNT           * Set up the key with Letter
          CALL      WRPRLE1                       * Number & Line Number
          GOTO      ADDL2000
.
ADDL9999  RETURN
+
.****************************************************************************
.*                                PARA0000             Called by: ML0000    *
.*                        Display the Letter Parameters                     *
.****************************************************************************
.
PARA0000  DISPLAY   *P1:5,*EL:
                    *P4:5,"Name                :":
                    *P4:6,"Paper Page Length   :":
                    *P4:7,"Top Margin Size     :":
                    *P4:8,"Bottom Margin Size  :":
                    *P4:9,"Left Margin Size    :";
.
          DISPLAY   *P26:5,*V2LON:
                    *P26:5,LETTNAME:
                    *P26:6,PRLEPLEN:
                    *P27:7,PRLEMTOP:
                    *P27:8,PRLEMBOT:
                    *P27:9,PRLELEFT;
.
PARA1000  KEYIN     *P1:24,"(",*V2LON,*DV,ANSN,*HOFF,")ext Page ":
                           "(",*V2LON,*DV,ANSE,*HOFF,")xit : ":
                    *P22:24,*V2LON,ANS:
                    *P22:24,*DV,ANS
.
          REP       UPPLOW,ANS
.
          MATCH     ANSN,ANS
          GOTO      PARA2000 IF EQUAL
.
          MATCH     ANSE,ANS
          GOTO      PARA2000 IF EQUAL
.
          BEEP
          GOTO      PARA1000
.
PARA2000  REPLACE   "N0E1",ANS
          MATCH     "0",ANS
          GOTO      PARA9500 IF EQUAL
.
          MOVE      ONE,EXIT
          GOTO      PARA9999
.
PARA9500  MOVE      ZERO,EXIT
.
PARA9999  RETURN
+
.****************************************************************************
.*                                DISP0000             Called by: ML0000    *
.*                          Display the Letter Text                         *
.****************************************************************************
.
DISP0000  MOVE      FALSE,EXIT
.
          MOVE      ONE,CLINE
          PACK      KEY6,TMPLETNO,CLINE
          CALL      RDPRLE1
          BRANCH    OVRCD,DISP9000
          MOVE      SEVEN,LINE
          DISPLAY   *P1:6,*EF:
                    *P2:6,"----------------------------------------":
                          "------------------------------";
.
          ADD       ONE,LEFTMARG
          ADD       LINE,TOPMARG
.
DISP0500  DISPLAY   *P1:LINE,">",*P72:LINE,"<";
          ADD       ONE,LINE
          COMPARE   TWENTY3,LINE
          CALL      PAGE0000 IF NOT LESS
          BRANCH    EXIT,DISP9999
          COMPARE   LINE,TOPMARG
          GOTO      DISP0500 IF NOT EQUAL
.
DISP1000  DISPLAY   *P1:LINE,">",*PLEFTMARG:LINE,PRLETEXT,*P72:LINE,"<";
          CALL      RKPRLE1
          BRANCH    OVRCD,DISP8000
.
          COMPARE   PRLENUMB,TMPLETNO
          GOTO      DISP8000 IF NOT EQUAL
.
          ADD       ONE,LINE
          COMPARE   TWENTY3,LINE
          CALL      PAGE0000 IF NOT LESS
.
          BRANCH    EXIT,DISP9999
          GOTO      DISP1000
.
DISP8000  ADD       ONE,LINE
          DISPLAY   *P2:LINE,"----------------------------------------":
                             "------------------------------";
          GOTO      DISP9500
.
DISP9000  DISPLAY   *P1:24,"No Text Entered for This Letter.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
          GOTO      DISP9999
.
DISP9500  MOVE      ZERO,EXIT
.
DISP9999  RETURN
+
.****************************************************************************
.*                                  VERF0000           Called by: ML0000    *
.*                         Display the Full Coded Text                      *
.****************************************************************************
VERF0000  DISPLAY   *P4:5,"Letter Name         : ",*V2LON,LETTNAME;
          MOVE      ONE,CLINE
          PACK      KEY6,TMPLETNO,CLINE
          CALL      RDPRLE1
          BRANCH    OVRCD,VERF9000
.
          MOVE      SEVEN,LINE
          DISPLAY   *P1:6,*EF:
                    *P2:6,"----------------------------------------":
                          "------------------------------";
.
          ADD       ONE,LEFTMARG
          ADD       LINE,TOPMARG
.
VERF0500  DISPLAY   *P1:LINE,">",*P72:LINE,"<";
          ADD       ONE,LINE
          COMPARE   TWENTY3,LINE
          CALL      PAGE0000 IF NOT LESS
          BRANCH    EXIT,VERF9999
          COMPARE   LINE,TOPMARG
          GOTO      VERF0500 IF NOT EQUAL
.
VERF1000  MOVE      PRLETEXT,DIM70
          CALL      MOD0000
          DISPLAY   *P1:LINE,">",*PLEFTMARG:LINE,PRTSTRNG,*P72:LINE,"<";
          CALL      RKPRLE1
          BRANCH    OVRCD,VERF8000
          COMPARE   PRLENUMB,TMPLETNO
          GOTO      VERF8000 IF NOT EQUAL
          ADD       ONE,LINE
          COMPARE   TWENTY2,LINE
          CALL      PAGE0000 IF NOT LESS
          BRANCH    EXIT,VERF9999
          GOTO      VERF1000
.
VERF8000  ADD       ONE,LINE
          DISPLAY   *P2:LINE,"----------------------------------------":
                             "------------------------------";
          GOTO      VERF9500
.
VERF9000  MOVE      ONE,EXIT
          DISPLAY   *P1:24,"No Text Entered for This Letter.  ";
          CALL      HITENTER
          GOTO      VERF9999
.
VERF9500  MOVE      ZERO,EXIT
.
VERF9999  RETURN
+
.****************************************************************************
.*                               PAGE0000              Called by: DISP0000  *
.*                   message at the end of a page of text         VERF0000  *
.****************************************************************************
.
PAGE0000  DISPLAY   *P2:LINE,"----------------------------------------":
                             "------------------------------";
          KEYIN     *P1:24,*EL,"(",*V2LON,*DV,ANSN,*HOFF,")ext Page ":
                           "(",*V2LON,*DV,ANSE,*HOFF,")xit : ":
                    *P22:24,*V2LON,ANS:
                    *P22:24,*DV,ANS
.
          REP       UPPLOW,ANS
.
          MATCH     ANSN,ANS
          GOTO      PAGE2000 IF EQUAL
.
          MATCH     ANSE,ANS
          GOTO      PAGE2000 IF EQUAL
.
          BEEP
          GOTO      PAGE0000
.
PAGE2000  REPLACE   "N0E1",ANS                    * Only allow N or E
          MATCH     "0",ANS
          GOTO      PAGE9500 IF EQUAL
.
          MOVE      ONE,EXIT
          GOTO      PAGE9999
.
PAGE9500  DISPLAY   *P1:7,*EF;
          SUB       LINE,TOPMARG                  * Reduce top margin by the no.
.                                                 * of lines printed
          MOVE      SEVEN,LINE                    * Reset line to top of print
          MOVE      ZERO,EXIT
.
PAGE9999  RETURN
+
.****************************************************************************
.*                              CONT0000               Called by: ML0000    *
.*                        Hit return to continue                            *
.****************************************************************************
.
CONT0000  DISPLAY   *P1:24,*EL;
          CALL      HITENTER
.
CONT9999  RETURN
+
.****************************************************************************
.*                                 MOD0000             Called by: PRT0000   *
.*               Modify a line to show maximum variable length    VERF0000  *
.****************************************************************************
.
MOD0000   PACK      PRTSTRNG,SP30,SP30,SP10       * Initialize the PRTSTRNG
          RESET     PRTSTRNG,0                    * and pointer positions
          MOVE      ONE,STARTSTR
          MOVE      ONE,ENDSTR
.
MOD2000   SCAN      SPECCHAR,DIM70                * Scan the Input Line for
          GOTO      MOD8000 IF NOT EQUAL          * a "%" sign
.
          MOVEFPTR  DIM70,PERCPOS
          BUMP      DIM70,-1                      * Go to the character before
.                                                 * the "%" sign
          GOTO      MOD3100 IF NOT EOS            * Test if the % sign is the
          RESET     DIM70,0                       * first character on the line
.                                                 * set f.p. to 0 if it is
MOD3100   MOVEFPTR  DIM70,ENDSTR                  * Store endstr at position
.                                                 * 1 char before the "%" sign
.
          COMPARE   STARTSTR,ENDSTR               * Ensure that end and start
          GOTO      MOD3200 IF NOT LESS           * positions don't overlap
.
          RESET     DIM70,STARTSTR                * Set pointer to start i.e
          GOTO      MOD9000 IF EOS                * to "%" if end < start
          GOTO      MOD3300
.
MOD3200   RESET     DIM70,STARTSTR                * Reset the pointers to 
          SETLPTR   DIM70,ENDSTR                  * extract text preceeding
.                                                 * the "%" sign
.
          APPEND    DIM70,PRTSTRNG                * Append preceeding text to
.                                                 * the print string
.
MOD3300   SETLPTR   DIM70,70                      * Set the pointers to start at
          RESET     DIM70,PERCPOS                 * "%" and go to position 70
.
          MOVE      DIM70,TEMP70                  * Delete preceeding text
          MOVE      TEMP70,DIM70                  * from the dim70 string
.
          CALL      GETV0000                      * Call the extraction routine
.                                                 * to get the % variable
          MOVEFPTR  DIM70,STARTSTR                * Store finish pos of var.
          BRANCH    EXIT,MOD5000
          RESET     SRCHVAR
          SEARCH    SRCHVAR,LCACDATE,SIXTY1,SRCHNUM * Search the list of const.
          COMPARE   ZERO,SRCHNUM                  * Exit if not a % variable
          GOTO      MOD5000 IF EQUAL
          COMPARE   SIX,COPTION
          GOTO      MOD4100 IF NOT EQUAL
.
          COMPARE   SRCHNUM,TWENTY8
          GOTO      MOD7000 IF EQUAL
.
.  -----  Load the maximum length of the variable into the print string -----
.
MOD4100   PACK      DISPSTRN,SP30,SP20,SP20
          LOAD      DISPSTRN,SRCHNUM,LXACDATE,LXACLASS,LXADDA,LXADDB,LXADDC:
                                     LXCLMDES,LXDATE,LXDEBTNO,LXDOB,LXDUSR1:
                                     LXDUSR2,LXDUSR3,LXDUSR4,LXFRSTI,LXFNAME:
                                     LXGNAME,LXHFMEM,LXHFTAB,LXHFUND,LXHOSP:
                                     LXHADDA,LXHADDB,LXHADDC,LXHPOST,LXHTELE:
                                     LXLETDAT,LXMEDNO,LXPAGE,LXPCODE,LXPRADES:
                                     LXPRAADA,LXPRAADB,LXPRAADC,LXPRAPOS:
                                     LXPRATEL,LXRESACC,LXRESADA,LXRESADB:
                                     LXRESADC,LXRESPCD,LXRESHTL,LXRESWTL:
                                     LXRESREL,LXRDFIN,LXRDGIV,LXRDNAM,LXRDSUR:
                                     LXRDTITL,LXRUSR1,LXRUSR2,LXRUSR3,LXRUSR4:
                                     LXSDFIN,LXSDGIV,LXSERDOC,LXSDSUR,LXSDTITL:
                                     LXSNAME,LXTITLE,LXVISDAT,LXWTELE
.
          APPEND    DISPSTRN,PRTSTRNG             * Add the full description 
          GOTO      MOD8000 IF EOS                * to the print string 
          GOTO      MOD2000       
.
MOD5000   RESET     SRCHVAR                       * Add the string starting with
          APPEND    SRCHVAR,PRTSTRNG              * a % if not found in the 
          GOTO      MOD2000                       * variable list
.
MOD7000   PRINT     *N;
          COMPARE   COUNT,PHYSPAGE
          GOTO      MOD7100 IF EQUAL
          ADD       ONE,COUNT
          GOTO      MOD7000
.
MOD7100   MOVE      ZERO,COUNT
.
MOD7400   ADD       ONE,COUNT
          COMPARE   COUNT,TOPMARG
          GOTO      MOD7500 IF EQUAL
          GOTO      MOD7500 IF LESS
          PRINT     *N;
          GOTO      MOD7400
.
MOD7500   GOTO      MOD9999
MOD8000   APPEND    DIM70,PRTSTRNG                * Add remaining text to print
.                                                 * string if no "%" signs left
MOD9000   MOVE      FALSE,EXIT
.
MOD9999   RETURN
+
.****************************************************************************
.*                               GETV0000              Called by: MOD0000   *
.*               Gets a letter variable form text after the scan            *
.****************************************************************************
.
GETV0000  PACK      SRCHVAR,SP30,SP30,SP10
          RESET     SRCHVAR,0
          MOVE      DIM70,ANS
          APPEND    ANS,SRCHVAR
          RESET     SRCHVAR,0
          BUMP      DIM70
          MOVE      DIM70,ANS
          REPLACE   REPSTR,ANS
          MATCH     "0",ANS
          GOTO      GETV9000 IF NOT EQUAL
          BUMP      DIM70,-1
          PACK      SRCHVAR,SP30,SP30,SP10
          RESET     SRCHVAR,0
.
GETV1000  MOVE      DIM70,ANS
          APPEND    ANS,SRCHVAR
.
          BUMP      DIM70
          GOTO      GETV9500 IF EOS
          MOVE      DIM70,ANS
          REPLACE   REPSTR,ANS
          MATCH     "0",ANS
          GOTO      GETV9500 IF NOT EQUAL
          GOTO      GETV1000
.
GETV9000  MOVE      ONE,EXIT
          GOTO      GETV9999
.
GETV9500  MOVE      ZERO,EXIT
.
GETV9999  RETURN
+
.****************************************************************************
.*                                DETL0000             Called by: ML0000    *
.*              Display and update the parameters of the letter             *
.****************************************************************************
.
DETL0000  DISPLAY   *P1:5,*EF:
                    *P1:5,"   Name                :":
                    *P1:6,*V2LON,"1",*HOFF,". Paper Page Length   :":
                    *P1:7,*V2LON,"2",*HOFF,". Top Margin Size     :":
                    *P1:8,*V2LON,"3",*HOFF,". Bottom Margin Size  :":
                    *P1:9,*V2LON,"4",*HOFF,". Left Margin Size    :";
.
          DISPLAY   *P26:5,*V2LON:
                    *P26:5,LETTNAME:
                    *P26:6,PRLEPLEN:
                    *P27:7,PRLEMTOP:
                    *P27:8,PRLEMBOT:
                    *P27:9,PRLELEFT;
.
DETL9999  RETURN
+
.****************************************************************************
.*                                 UPDT0000            Called by: ML0000    *
.*              Set up the temp file and call the word processor            *
.****************************************************************************
.
UPDT0000  MOVE      TMPLETNO,PRLENUMB
          MOVE      ZERO,PRLELINE
          MOVE      LETTNAME,PRLETEXT
          CALL      RAPRLE1
          CALL      UPPRLE1
.
.************************************************************ 
.*  read in the old call details from PPPLETR to tempsoln   *
.************************************************************
.
          PREP      TEMP1,FNAMER
          MOVE      ONE,LINENO               * Reads in the previous letter
          MOVE      ZERO,MAXLINES            * details from the PPPLETR file
          PACK      KEY6,TMPLETNO,LINENO     * based on the Letter No. entered.
          CALL      RDPRLE1                  * The MAXLINES variable is used
          BRANCH    OVRCD,UPDT2999           * keep a count of the no. of lines
.
UPDT2000  WRITE     TEMP1,SEQ;PRLETEXT       * file.
          ADD       ONE,MAXLINES             * The data is loaded into the 
          PACK      PRLETEXT,SP30,SP30,SP10  * temp file for use by the word
          CALL      RKPRLE1                  * processor.
          BRANCH    OVRCD,UPDT2999
          COMPARE   TMPLETNO,PRLENUMB
          GOTO      UPDT2999 IF NOT EQUAL
          GOTO      UPDT2000
.
.************************************************************ 
.*              execute the word processor                  *
.************************************************************
.
UPDT2999  CALL      WP0000   * call the word processor
          COMPARE   ONE,FORM1
          GOTO      UPDT3999 IF NOT EQUAL   * abort entered
.
UPDT3000  KEYIN     *P1:24,*EL,"Ok to Post Letter Changes (",*V2LON:
                    *DV,ANSY,*HOFF,*DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") : ":
                    *P35:24,*V2LON,ANS 
.
          RESET     ANS
          GOTO      UPDT3000 IF EOS
.
          MATCH     SP1,ANS
          GOTO      UPDT3000 IF EQUAL
.
          REP       UPPLOW,ANS
.
          MATCH     ANSN,ANS
          GOTO      UPDT3999 IF EQUAL
.
          MATCH     ANSY,ANS
          GOTO      UPDT3050 IF EQUAL
.
          BEEP
          GOTO      UPDT3000
.
UPDT3050  DISPLAY   *P1:24,*EL,"Posting Changes to the Letter",*BLINKON,*V2LON:
                           " - Please Wait";
          CLOSE     TEMP1                    * Reads the new call details out
          OPEN      TEMP1,FNAMER             * of the temp file and puts them
          MOVE      ZERO,LINENO              * back into the PPPLETR file.
          MOVE      TMPLETNO,PRLENUMB        * Records are updated if the key
.                                            * exists or are written if the 
UPDT3100  PACK      DIM70,SP30,SP30,SP10     * key dosen't exist.
          PACK      PRLETEXT,SP30,SP30,SP10
          MOVE      ZERO,PRLEVARB
          READ      TEMP1,SEQ;DIM70
          GOTO      UPDT3700 IF OVER 
.
          ADD       ONE,LINENO
          SCAN      SPECCHAR,DIM70
          GOTO      UPDT3150 IF NOT EQUAL
          MOVE      ONE,PRLEVARB
.
UPDT3150  SETLPTR   DIM70,70                
          RESET     DIM70                  
          MOVE      LINENO,PRLELINE
          PACK      KEY6,PRLENUMB,PRLELINE    
          CALL      RAPRLE1             
          COMPARE   ZERO,OVRCD
          GOTO      UPDT3200 IF EQUAL
          MOVE      DIM70,PRLETEXT
          CALL      WRPRLE1
          GOTO      UPDT3100
.
UPDT3200  MOVE      DIM70,PRLETEXT
          CALL      UPPRLE1
          GOTO      UPDT3100
.
UPDT3700  COMPARE   MAXLINES,LINENO          * This loop acts to delete any
          GOTO      UPDT3999 IF NOT LESS     * lines of text which are 
          PACK      KEY6,PRLENUMB,MAXLINES   * extra information left from
          CALL      DEPRLE1                  * the previous call details.
          SUB       ONE,MAXLINES
          GOTO      UPDT3700                 * This is only performed if
.
UPDT3999  RETURN                             * LINENO < MAXLINES
+
.****************************************************************************
.*                                DEL0000              Called by: ML0000    *
.*                   Delete a Letter from the Letter File                   *
.****************************************************************************
.
DEL0000   KEYIN     *P1:24,*EL,"(",*V2LON,*DV,ANSD,*HOFF,")elete  ":
                               "(",*V2LON,*DV,ANSE,*HOFF,")xit : ":
                    *P20:24,*V2LON,ANS:
                    *P20:24,*DV,ANS
.
          REP       UPPLOW,ANS
.
          MATCH     ANSD,ANS
          GOTO      DEL1000 IF EQUAL
.
          MATCH     ANSE,ANS
          GOTO      DEL9000 IF EQUAL
.
          BEEP
          GOTO      DEL0000
.
DEL1000   MOVE      ZERO,CLINE
          PACK      KEY6,TMPLETNO,CLINE
          CALL      DEPRLE1
.
DEL2000   ADD       ONE,CLINE
          PACK      KEY6,TMPLETNO,CLINE
          CALL      RDPRLE1
          BRANCH    OVRCD,DEL9500
          CALL      DEPRLE1
          GOTO      DEL2000
.
DEL9000   MOVE      ONE,EXIT
          GOTO      DEL9999
.
DEL9500   MOVE      ZERO,EXIT
.
DEL9999   RETURN
+
.**************************************************************************** 
.*                               PRT0000               Called by: ML0000    *
.*                  Print the Verified Version of the Letter                *
.****************************************************************************
.
PRT0000   DISPLAY   *P1:24,"Printing Letter : ",*V2LON,LETTNAME,*HOFF:
                           SP1,*V2LON,*BLINKON,"- Please Wait";
.
          MOVE      FALSE,EXIT
          MOVE      ZERO,CLINE
          MOVE      ZERO,COUNT
          PACK      KEY6,TMPLETNO,CLINE
          CALL      RDPRLE1
          MOVE      PRLEPLEN,PHYSPAGE
          MOVE      PRLEMBOT,BOTMARG
          MOVE      PRLEMTOP,TOPMARG
          SUB       PRLEMBOT,PRLEPLEN
          MOVE      PRLEPLEN,LSTPRINT
.
PRT0050   ADD       ONE,COUNT
          COMPARE   COUNT,TOPMARG
          GOTO      PRT1000 IF LESS
          PRINT     *N;
          GOTO      PRT0050
.
PRT1000   CALL      RKPRLE1
          BRANCH    OVRCD,PRT9000
          COMPARE   PRLENUMB,TMPLETNO
          GOTO      PRT9000 IF NOT EQUAL
.
          BRANCH    PRLEVARB,PRT2000
          PRINT     *N,*LEFTMARG,PRLETEXT;
          GOTO      PRT3000
.
PRT2000   MOVE      PRLETEXT,DIM70
          CALL      MOD0000
          PRINT     *N,*LEFTMARG,PRTSTRNG;
.
PRT3000   ADD       ONE,COUNT
          COMPARE   COUNT,LSTPRINT
          CALL      PGE0000 IF LESS
          GOTO      PRT1000
.
PRT9000   PRINT     *N;
          COMPARE   PHYSPAGE,COUNT
          GOTO      PRT9500 IF EQUAL
          GOTO      PRT9500 IF NOT LESS
          ADD       ONE,COUNT
          GOTO      PRT9000
.
PRT9500   DISPLAY   *P1:24,*EL;
.
PRT9999   RETURN
+
.****************************************************************************
.*                              PGE0000                Called by: PRT0000   *
.*        Routine to paginate if a new page is required                     *
.****************************************************************************
.
PGE0000   MOVE       PRLENUMB,FORM3
          MOVE       PRLELINE,CLINE
          CALL       RKPRLE1
          BRANCH     OVRCD,PGE8000
          COMPARE    TMPLETNO,PRLENUMB
          GOTO       PGE8000 IF NOT EQUAL
          MOVE       TOPMARG,TEMP2
          ADD        BOTMARG,TOPMARG
          MOVE       ONE,COUNT
.
PGE1000   PRINT      *N;
          COMPARE    COUNT,TOPMARG
          GOTO       PGE9000 IF EQUAL
          ADD        ONE,COUNT
          GOTO       PGE1000
.
PGE8000   PACK       KEY6,FORM3,CLINE  
          CALL       RDPRLE1
          GOTO       PGE9999
.
PGE9000   MOVE       TEMP2,COUNT
          ADD        ONE,COUNT
          MOVE       TEMP2,TOPMARG
          PACK       KEY6,FORM3,CLINE
          CALL       RDPRLE1
.
PGE9999   RETURN
+
.**********************************************************************
.*          I/O INCLUDES FOR THE EXTERNAL ROUTINES                    *
.**********************************************************************
.
          INC       STD001IO
          INC       TFILENAM                * Generate Temp File Name
          INC       IBASEQIO/INC            * Sequential Numbers File
          INC       WEBERRIO/INC            * Web Server Error Logging
.
          INC       PRILETIO/INC                  * Letter file
