*****************************************************************************
.* System    :   All                                                         *
.* Program   :   FX300346                                                    *
.* Desc      :   Fixit for Coded fields Catg YG,ST                           *
.*****************************************************************************
.* Date      :   10/07/2015                                                  *
.* Author    :   J.Tan                                                       *
.* Function  :   This program will load mapping data from an ascii file      *
.*               (set up by the user) and then process the webPAS            *
.*               fields using that mapping data to map the old codes to      *
.*               new codes.                                                  *
.* Mods      :                                                               *
.* V11.03.01     07/03/2023  Ebon Clements     TSK 0909393                   *
.*               Added hospital to oprsesaf(1-6) and oprdetfa(1&5) indexes   *
.* V10.14.01     15/03/2019 Jill Parkinson Task 0863524                      *
.*               Changed key for oprsemaf to key21                           *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       IBASEQFD/INC
          INC       OPRCLIFD/INC
          INC       OPRDEAFD/INC
          INC       OPRSEMFD/INC
          INC       OPRSESFD/INC
          INC       OPRTPSFD/INC
          INC       PATCODFD/INC
.
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.
.         ASCII Mapping File Definition
.         -----------------------------
AMAPFILE  FILE      ASCII,FIXED=26
.
.Name     Type      Length	Start Pos.     Description
.-------- ----      ------      ----------     ----------------------------
CODETYPE  DIM       1              1           Type of Code
.                                                1 - Category/Code
.                                                2 - Health Fund
.                                                3 - Health Fund Table
.                                                4 - Health Fund Group
CATEGORY  DIM       6              2           Category 
.                                                (Category for CODETYPE 1)
.                                                (Health Fund for CODETYPE = 3)
OLDCODE   DIM       8              8           Old code to be replaced
NEWCATG   DIM       2             16           New Category (Cat/Codes only)
.                                                 (if blank - use old category)
NEWCODE   DIM       8             18           New code to replace old code
.
.End of Record                    26
.
.
.
.         Indexed Mapping Temporary File Definition
.         -----------------------------------------
.         Filename : maptmpxx.dat          (xx = port id)
.
MAPTEMP1  IFILE SQL, FIXED=26, KEY="U1-1,2-7,8-15"
.
.NAME     TYPE    LENGTH   PHYSICAL   START   DESCRIPTION
.----     ----    ------   --------   -----   -----------
.CODETYPE DIM       1         1         1     Type of Code
.                                                1 - Category/Code
.                                                2 - Health Fund
.                                                3 - Health Fund Table
.CATEGORY DIM       6         6         2     Category
.                                                (Category for CODETYPE 1)
.                                                (Health Fund for CODETYPE = 3)
.OLDCODE  DIM       8         8         8     Old code to be replaced
.NEWCATG  DIM       2         2        16     New Category (H1-9 Cat/Codes only)
.                                                 (if blank - use old category)
.NEWCODE  DIM       8         8        18     New code to replace old code
.
.End of Record                         26
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ADMNTYPE  DIM       3
.
CLAMCODE  DIM       3
CMDLINE   DIM       80
CODEDFLD  DIM       8
COUNTER   FORM      2
.
DOCTCODE  DIM       6
.
ERORFLAG  FORM      1             * Load Error Flag
.                                    0 = No error occurred
.                                    1 = Error occurred
FILENAME  DIM       8
FINFLAG   FORM      1             * Finance Flag
.                                       0 = using patfinsf
.                                       1 = using patfigaf
FUNDCODE  DIM       6
.
GROUPCDE  DIM       3
.
ITEMFLAG  DIM       2
ITEMCODE  DIM       9
.
JRNLCODE  DIM       3
.
KEYFIELD  FORM      1             * key field flag
.                                    0 = key field has not been changed
.                                    1 = key field has been changed
.
PREFCHAR  DIM       1
.
SAVCAT01  DIM       2
SAVCOD01  DIM       8
SAVCOD02  DIM       8
SAVCOD03  DIM       8
SAVCOD04  DIM       8
SAVCOD05  DIM       8
SAVCOD06  DIM       8
SAVCOD07  DIM       8
SAVCOD08  DIM       8
SAVCOD09  DIM       8
SAVCOD10  DIM       8
SAVCOD11  DIM       8
SAVCOD12  DIM       8
SAVCOD13  DIM       8
SAVCOD14  DIM       8
SAVCOD15  DIM       8
SAVCOD16  DIM       8
SAVCOD17  DIM       8
SAVCOD18  DIM       8
SAVFRM01  FORM      12.2
SAVFRM02  FORM      12.2
SAVFRM03  FORM      12.2
SAVFRM04  FORM      12.2
SAVFRM05  FORM      12.2
SAVFRM06  FORM      12.2
SAVFRM07  FORM      12.2
SAVFRM08  FORM      12.2
SAVFRM09  FORM      12.2
SAVFRM10  FORM      12.2
SAVFRM11  FORM      12.2
SAVFRM12  FORM      12.2
SAVFRM13  FORM      12.2
SAVFRM14  FORM      12.2
SAVFRM15  FORM      12.2
SAVFRM16  FORM      8
SAVFRM17  FORM      8
SAVFRM18  FORM      8
SAVFRM19  FORM      8
SAVFRM20  FORM      8
SAVFRM21  FORM      8
SAVFRM22  FORM      8
SAVFRM23  FORM      8
SAVFRM24  FORM      8
SAVFRM25  FORM      8
SAVKEY3   DIM       4
SAVKEY4   DIM       4
SAVKEY5   DIM       5
SAVKEY6   DIM       6
SAVKEY8   DIM       8
SAVKEY9   DIM       9
SAVKEY12  DIM       12
SAVKEY13  DIM       13
SAVKEY14  DIM       14
SAVKEY15  DIM       15
SAVKEY16  DIM       16
SAVKEY17  DIM       17
SAVKEY18  DIM       18
SAVKEY19  DIM       19
SAVKEY20  DIM       20
SAVKEY21  DIM       21
SAVKEY22  DIM       22
SAVKEY23  DIM       23
SAVKEY24  DIM       24
SAVKEY25  DIM       25
SAVKEY26  DIM       26
SAVKEY27  DIM       27
SAVKEY28  DIM       28
SAVKEY29  DIM       29
SAVKEY30  DIM       30
SAVKEY31  DIM       32
SAVKEY32  DIM       32
SAVKEY33  DIM       33
SAVKEY34  DIM       34
SAVKEY35  DIM       35
SUBITEMC  DIM       3
.
TEMPFILE  DIM       8
.
UPDTFLAG  FORM      1             * Update Flag
.                                    0 = Update record
.                                    1 = Don't update record
.
WARDCODE  DIM       3
WBSEUID   INIT      "          "
.
.
. PROGRAM CONSTANTS
. -----------------
ERASE     INIT      "iserase "
ISBUILD   INIT      "isbuild "
CATA      INIT      "A "
CATBT     INIT      "BT"
CATCC     INIT      "CC"
CATCL     INIT      "CL"
CATCR     INIT      "cr"
CATDD     INIT      "DD"
CATDT     INIT      "DT"
CATDX     INIT      "DX"
CATFI     INIT      "FI"
CATHT     INIT      "HT"
CATH1     INIT      "H1"
CATH2     INIT      "H2"
CATH3     INIT      "H3"
CATH4     INIT      "H4"
CATH5     INIT      "H5"
CATH6     INIT      "H6"
CATH7     INIT      "H7"
CATH8     INIT      "H8"
CATH9     INIT      "H9"
CATJ      INIT      "J "
CATLA     INIT      "LA"
CATOC     INIT      "OC"
CATP      INIT      "P "
CATR      INIT      "R "
CATS      INIT      "S "
CATSP     INIT      "SP"
CATST     INIT      "ST"
CATVA     INIT      "VA"
UKEY      INIT      " 26 U1-1,2-7,8-15"
.
.
PRGID     INIT      "FX300346"
PRGNAM    INIT      "Fixit for Coded Fields Catg YG & ST"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9000          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000       * proceed with fixit
.
MAIN1000  CALL      GMAP0000               * get ascii map file name
          BRANCH    EXIT,MAIN0100          * nothing input or not found
.
          CALL      CREA0000               * create temp indexed file
.
          CALL      LOAD0000               * load code mappings into temp file
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN2000  CALL      PROC0000               * process files with coded fields
.
MAIN9000  CALL      KILL0000               * clean up temp files
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"oprcliaf";
          OPEN      OPRCLIA1,"oprcliaf"
.
          DISPLAY   *P64:24,"oprdetaf";
          OPEN      OPRDETA3,"oprdetaf"
.
          DISPLAY   *P64:24,"oprsemaf";
          OPEN      OPRSEMA1,"oprsemaf"
.
          DISPLAY   *P64:24,"oprsesaf";
          OPEN      OPRSESA1,"oprsesaf"
.
          DISPLAY   *P64:24,"oprtpsaf";
          OPEN      OPRTPSA1,"oprtpsaf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,TEMPFILE
.
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run fixit                               *
.*                        TRUE  (1)  Exit option selected                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               GMAP0000              Called by: MAIN0000   *
.*         Get the user to input the ASCII Mapping filename, then            *
.*         open the file                                                     *
.* Returns:  FILENAME - ascii mapping file name                              *
.*           EXIT  0 = Ok to continue                                        *
.*                 1 = Error                                                 *
.*****************************************************************************
.
GMAP0000  KEYIN     *P1:11,*EF,"ASCII Mapping Filename: ",*V2LON,FILENAME
.
          PACK      FILENAME,FILENAME,SP8
          MATCH     SP8,FILENAME                 * anything entered ?
          GOTO      GMAP9100 IF EQUAL            * no
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      AMAPFILE,FILENAME            * ascii file opened ?
          TRAPCLR   IO
          BRANCH    OVRCD,GMAP8000               * no - error
.
          MOVE      ZERO,EXIT                    * yes
          GOTO      GMAP9999
.
GMAP8000  DISPLAY   *P1:24,*EL,*B,"File not found.  ";
          CALL      HITENTER
          GOTO      GMAP0000
.
GMAP9100  MOVE      ONE,EXIT
.
GMAP9999  RETURN
+
.*****************************************************************************
.*                               LOAD0000              Called by: MAIN0000   *
.*     Loop through the ASCII mapping file and load each of the codes        *
.*     to be mapped and their corresponding new codes.                       *
.*****************************************************************************
.
LOAD0000  MOVE      ZERO,ERORFLAG                * initialise error flag
.
.         Loop through the ascii map file
.
LOAD0500  READ      AMAPFILE,SEQ;CODETYPE,CATEGORY,OLDCODE,NEWCATG,NEWCODE 
          GOTO      LOAD9000 IF OVER             * eof - finished
.
.         Make sure the record doesn't already exist on the temp file
.
          PACK      KEY15,CODETYPE,CATEGORY,OLDCODE
          CALL      RATEMP1               
          IF        OVRCD = 0
            DISPLAY   *P1:24,*EL,*B,"Key: [",*V2LON,CODETYPE,CATEGORY,OLDCODE:
                      *HOFF,"] already exists.  ";
            CALL      HITENTER
            MOVE      ONE,ERORFLAG               * error occurred
            GOTO      LOAD0500
          ENDIF
.
          CALL      WRTEMP1                      * write new map record
          GOTO      LOAD0500                     * get next ascii record
.
LOAD9000  IF        ERORFLAG = 1
            DISPLAY   *P1:23,*EL,*B,"Errors occurred while loading.";
          ENDIF
.
LOAD9999  RETURN
+
.*****************************************************************************
.*                               PROC0000              Called by: MAIN0000   *
.*       Process all the relevant files containing coded fields              *
.*****************************************************************************
.
PROC0000  CALL      IBACLOCK
          DISPLAY   *P1:15,*EF,"Started:",*V2LON,CTIMEIS,*HOFF:
                    *P1:24,"Processing ";
.
          CALL      OCLI0000                     * process oprcliaf
          CALL      ODEA0000                     * process oprdetaf
          CALL      OSEM0000                     * process oprsemaf
          CALL      OSES0000                     * process oprsesaf
          CALL      OTPS0000                     * process oprtpsaf
.
          CALL      IBACLOCK
          DISPLAY   *P1:16,*EF,"Stopped:",*V2LON,CTIMEIS,*HOFF:
                    *P1:24,"Fixit completed.  ";
          CALL      HITENTER
.
PROC9999  RETURN
+
.*****************************************************************************
.*                              OCLI0000              Called by: PROC0000    *
.*       Loop through oprcliaf and fix any relevant coded fields             *
.*****************************************************************************
.
OCLI0000  DISPLAY   *P12:24,*EL,"oprcliaf:";
          MOVE      SP30,KEY6
          CALL      RSOPCLI1                     * position at start of file
OCLI0500  CALL      RKOPCLI1                     * read next record
          BRANCH    OVRCD,OCLI9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OPCLCLIN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPCLCAT
.
          MOVE      ONE,CODETYPE                 * set for category-code
          PACK      CATEGORY,ANSY,ANSG,SP10      * set to Category YG
          PACK      CODEDFLD,OPCLCAT,SP10        * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OCLI9000                * no
.
          MOVE      NEWCODE,OPCLCAT              * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OCLI9000  BRANCH    UPDTFLAG,OCLI0500            * no mappings
          CALL      UPOPCLI1
          GOTO      OCLI0500                     * get next record
.
OCLI9999  RETURN
+
.*****************************************************************************
.*                              ODEA0000              Called by: PROC0000    *
.*       Loop through oprdetaf and fix any relevant coded fields             *
.*****************************************************************************
.
ODEA0000  DISPLAY   *P12:24,*EL,"oprdetaf:";
          MOVE      SP30,KEY10
          CALL      RSOPDEA3                     * position at start of file
ODEA0500  CALL      RKOPDEA3                     * read next record
          BRANCH    OVRCD,ODEA9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OPDAUNIQ
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPDAUNIT
.
          MOVE      ONE,CODETYPE                 * set for category-code
          PACK      CATEGORY,ANSS,ANST,SP10      * set to Category ST
          PACK      CODEDFLD,OPDAUNIT,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,ODEA9000                * no 
.
          MOVE      NEWCODE,OPDAUNIT             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
ODEA9000  BRANCH    UPDTFLAG,ODEA0500            * no mappings
          CALL      UPOPDEA3
          GOTO      ODEA0500                     * get next record
.
ODEA9999  RETURN
+
.*****************************************************************************
.*                              OSEM0000              Called by: PROC0000    *
.*       Loop through oprsemaf and fix any relevant coded fields             *
.*****************************************************************************
.
OSEM0000  DISPLAY   *P12:24,*EL,"oprsemaf:";
          MOVE      SP70,KEY21
          CALL      RSOPSEM1                     * position at start of file
OSEM0500  CALL      RKOPSEM1                     * read next record
          BRANCH    OVRCD,OSEM9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OPSMCLIN,OPSMDAYI,OPSMTIME
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPSMTYPE
.
          MOVE      ONE,CODETYPE                 * set for category-code
          PACK      CATEGORY,ANSS,ANST,SP10      * set to Category ST
          PACK      CODEDFLD,OPSMTYPE,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OSEM9000                * no 
.
          MOVE      NEWCODE,OPSMTYPE             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OSEM9000  BRANCH    UPDTFLAG,OSEM0500            * no mappings
          CALL      UPOPSEM1                     * update record
          GOTO      OSEM0500
.
OSEM9999  RETURN
+
.*****************************************************************************
.*                              OSES0000              Called by: PROC0000    *
.*       Loop through oprsesaf and fix any relevant coded fields             *
.*****************************************************************************
.
OSES0000  DISPLAY   *P12:24,*EL,"oprsesaf:";
          MOVE      SP20,KEY22
          CALL      RSOPSES1                     * position at start of file
OSES0500  CALL      RKOPSES1                     * read next record
          BRANCH    OVRCD,OSES9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OPSEDATE,OPSETIME,OPSECLIN
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPSETYPE
.
          MOVE      ONE,CODETYPE                 * set for category-code
          PACK      CATEGORY,ANSS,ANST,SP10      * set to Category ST
          PACK      CODEDFLD,OPSETYPE,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OSES9000                * no 
.
          MOVE      NEWCODE,OPSETYPE             * yes - load new code
.
.         Check if there were any mappings and if so, update the record
.
OSES9000  BRANCH    UPDTFLAG,OSES0500            * no mappings
          CALL      UPOPSES1                     * update record
          GOTO      OSES0500
.
OSES9999  RETURN
+
.*****************************************************************************
.*                              OTPS0000              Called by: PROC0000    *
.*       Loop through oprtpsaf and fix any relevant coded fields             *
.*****************************************************************************
.
OTPS0000  DISPLAY   *P12:24,*EL,"oprtpsaf:";
          MOVE      SP3,KEY3
OTPS0200  CALL      RSOPTPS1                     * position at start of file
OTPS0500  CALL      RKOPTPS1                     * read next record
          BRANCH    OVRCD,OTPS9999               * eof - finished
.
          DISPLAY   *P22:24,*EL,*V2LON,OPTPSPEC
          MOVE      OPTPSPEC,SAVKEY3
          PACK      SAVCOD01,OPTPSPEC,SP8        * save current code
          MOVE      ZERO,KEYFIELD                * initialise key field flag
          MOVE      ONE,UPDTFLAG                 * initialise flag for no update
.
.         Check OPTPSPEC
.
          MOVE      ONE,CODETYPE                 * set for category-code
          PACK      CATEGORY,ANSS,ANST,SP10      * set to Category ST
          PACK      CODEDFLD,OPTPSPEC,SP10       * load coded field
          CALL      CMAP0000                     * mapping required ?
          BRANCH    EXIT,OTPS9000                * no 
.
          MOVE      NEWCODE,SAVCOD01             * yes - load new code
          MOVE      ONE,KEYFIELD                 * set key field flag
.
.         Check if there were any mappings and if so, update the record
.
OTPS9000  BRANCH    UPDTFLAG,OTPS0500            * no mappings
.
.         Need to update this record, so first see if any of the fields
.         to be updated were part of the key.
.
          BRANCH    KEYFIELD,OTPS9200            * key fields changed
.
.         Just need to update the current record
.
OTPS9100  MOVE      SAVCOD01,OPTPSPEC
          CALL      UPOPTPS1                     * update record
          GOTO      OTPS9500
.
.         The key has changed, so check if the new key already exists
.
OTPS9200  MOVE      SAVCOD01,OPTPSPEC
          MOVE      OPTPSPEC,KEY3
          CALL      RDOPTPS1                     * new record already on file ?
          IF        OVRCD = 1
            MOVE      SAVKEY3,KEY3               * no
            CALL      RDOPTPS1                   * re-read original record
            BRANCH    OVRCD,OTPS9500             * shouldn't happen
            GOTO      OTPS9100
          ELSE
            MOVE      SAVKEY3,KEY3               * delete record
            CALL      DEOPTPS1
          ENDIF
.
OTPS9500  MOVE      SAVKEY3,KEY3
          GOTO      OTPS0200                     * get next record
.
OTPS9999  RETURN
+
.*****************************************************************************
.*                              CMAP0000               Called by: PROC0000   *
.*             Check for a mapped code on the temp index file                *
.* Requires:  CODEDFLD - the old code from the current record                *
.*            CATEGORY - category for coded field                            *
.*            CODETYPE - type of coded field                                 *
.*                         1 - Category/Code                                 *
.*                         2 - Health Fund                                   *
.*                         3 - Health Fund Table                             *
.* Returns:   NEWCODE - the new mapped code                                  *
.*            NEWCATG - the new mapped category (only applies to Cat H1-H9)  *
.*            EXIT  0 = mapped code on file for old code                     *
.*                  1 = no mapped code on file for old code                  *
.*            UPDTFLAG 0 = no fields mapped, so don't update record          *
.*                     1 = one or more fields mapped, so update record       *
.*****************************************************************************
.
CMAP0000  MATCH     SP8,CODEDFLD                 * blank code ?
          GOTO      CMAP9100 IF EQUAL            * yes - no mapping req'd
.
          PACK      KEY15,CODETYPE,CATEGORY,CODEDFLD,SP20
          CALL      RDTEMP1                      * old code on map file ?
          BRANCH    OVRCD,CMAP9100               * no - no mapping req'd.
.
          MOVE      ZERO,UPDTFLAG                * set flag for record update
.
          MOVE      ZERO,EXIT
          GOTO      CMAP9999
.
CMAP9100  MOVE      ONE,EXIT
.
CMAP9999  RETURN
+
.*****************************************************************************
.*                              CREA0000               Called by: MAIN0000   *
.*             Create a new temporary file                                   *
.*****************************************************************************
.
CREA0000  CALL      KILL0000                     * remove existing file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,TEMPFILE,UKEY
          EXECUTE   CMDLINE,TASKID               * create temporary index file
.
          OPEN      MAPTEMP1,TEMPFILE            * open temp index file
.
CREA9999  RETURN
+
.****************************************************************************
.*                              KILL0000               Called by: MAIN0000  *
.*               Close and erase the temporary file               CREA0000  *
.****************************************************************************
.
KILL0000  CLOSE     MAPTEMP1                     * close file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
KILL9999 RETURN
+
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                    *
.****************************************************************************
.
RATEMP1   MOVE      ZERO,OVRCD
          RESET     KEY15
          READ      MAPTEMP1,KEY15;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTEMP1   READ      MAPTEMP1,KEY15;;
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          READ      MAPTEMP1,KEY15;CODETYPE,CATEGORY,OLDCODE,NEWCATG,NEWCODE
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    MAPTEMP1;CODETYPE,CATEGORY,OLDCODE,NEWCATG,NEWCODE
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTEMP1   MOVE      ZERO,OVRCD
          READKP    MAPTEMP1;CODETYPE,CATEGORY,OLDCODE,NEWCATG,NEWCODE
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMP1   WRITE     MAPTEMP1,KEY15;CODETYPE,CATEGORY,OLDCODE,NEWCATG,NEWCODE
          RETURN
.
UPTEMP1   UPDATE    MAPTEMP1;CODETYPE,CATEGORY,OLDCODE,NEWCATG,NEWCODE
          RETURN
.
DETEMP1   DELETE    MAPTEMP1,KEY15
          RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
          INC       TFILENAM
.
          INC       IBASEQIO/INC
          INC       OPRCLIIO/INC
          INC       OPRDEAIO/INC
          INC       OPRSEMIO/INC
          INC       OPRSESIO/INC
          INC       OPRTPSIO/INC
          INC       PATCODIO/INC
.
          INC       WEBERRIO/INC
.
