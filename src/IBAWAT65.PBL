.*****************************************************************************
.*    Program      : IBAWAT65                                                *
.*    Description  : Waiting List Security Maintenance                       *
.*                                                                           *
.*    Author       : ROD   15/12/92                                          *
.*    Function     : Maintain user codes which have access to a Waiting List *
.*                                                                           *
.*    Modifications:                                                         *
.*                                                                           *
.*       V10.05.01  01/08/2015  Ania P                 CAR 261630            *
.*                  Removed use of PORT for temp file naming                 *
.*        V5.07.02  31/05/1999 Caleb Sharman                                 *
.*                  Mod to display consultants code                          *
.*        V5.01.02  16/03/93  ROD                                            *
.*                  Fixed redisplay bug after "?" & EXITCHAR                 *
.*                                                                           *
.*****************************************************************************
.
          INC       STD001FD
          INC       IBAPASFD/INC
          INC       PATCODFD/INC
          INC       PATDO1FD/INC
          INC       WATVWLFD/INC
          INC       WATSEAFD/INC
          INC       WATSEIFD/INC
          INC       IBASEQFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.
CALLPOSN  FORM      1
CMDLINE   DIM       80
CODE      DIM       2
CONLARRY  DIM       9[15]
CONSCOL   FORM      2
CONSVERT  FORM      2
CONSULT   DIM       6
COUNTER   FORM      2
DESC20    DIM       20
DIM3      DIM       3
DIM30     DIM       30
DOCCODE   DIM       6
DOCNAME   DIM       20
ITEMARRY  DIM       4[15]
ITEMNUM   FORM      2
LISTTYPE  DIM       3
LTYPCOL   FORM      2
LTYPVERT  FORM      2
PTCNDCQS  FORM      1
SAVCCOL   FORM      2
SAVCVERT  FORM      2
SCREEN    FORM      2
USERCODE  DIM       4
.
. Temp files
.
TEMPFILA  IFILE     SQL, FIXED=10, KEY="U1-6,7-9"
XXCONS    DIM       6      1
XXLTYP    DIM       3      7
.
TEMPFILB  IFILE     SQL, FIXED=5, KEY="U1-4"
XXUSER    DIM       4      1
.          End of record   5
.
PRGID     INIT      "IBAWAT65"
PRGNAM    INIT      "Waiting List Security Maintenance"
VERSION   INIT      "V12.00.00"
+
.*************************************************************************
.*  ML0000  :  Mainline code                                             *
.*************************************************************************
ML0000    CALL      INIT0000                      * initialisation
.
ML1000    CALL      MENU0000                      * Menu options
          BRANCH    MOPTION,ML3000,ML4000,ML5000
          GOTO      ML9999                        * Exit
.
. --- Individual Access by User Code ---
.
ML3000    CALL      CRET0000                      * create/erase temp file
          CALL      SETC0000                      * set up screen positions
          CALL      KUSR0000                      * keyin user code
          BRANCH    EXIT,ML1000                   * nothing input
          CALL      EXTA0000                      * Extract data into temp A
          CALL      PRCA0000                      * process data (temp file A)
          GOTO      ML3000
.
. --- Individual Access by Waiting List ---
.
ML4000    CALL      CRET0000                      * create/erase temp file
          CALL      SETC0000                      * set up screen positions
          CALL      KCON0000                      * keyin consultant
          BRANCH    EXIT,ML1000,ML1000            * nothing input, EXITCHAR
          CALL      KLTY0000                      * keyin list type
          BRANCH    EXIT,ML4000,ML1000            * nothing input,EXITCHAR
          CALL      EXTB0000                      * Extract data into temp B
          CALL      PRCB0000                      * process data (temp file B)
          GOTO      ML4000
.
. --- All Access ---
.
ML5000    CALL      CRET0000                      * create/erase temp file
          CALL      EXTB0000                      * Extract data into temp B
          CALL      PRCB0000                      * process data (temp file B)
          GOTO      ML1000
.
ML9999    CALL      KILL0000                      * remove temp files
          CHAIN     PGM
+
.*************************************************************************
.*  INIT0000  :  Initialisation                                          *
.*************************************************************************
INIT0000  CALL      DISPHEAD
          CALL      TFILENAM
.
          DISPLAY   *P60:24,"ihapassf"
          CALL       OPPASS1
          DISPLAY   *P60:24,"watvwlaf"
          OPEN      WATVWLA1,"watvwlaf"
          DISPLAY   *P60:24,"watseaaf"
          OPEN      WATSEAA1,"watseaaf"
          DISPLAY   *P60:24,"watseiaf"
          OPEN      WATSEIA1,"watseiaf"
          OPEN      WATSEIA2,"watseiaf"
          DISPLAY   *P60:24,"patdo1af"
          OPEN      PATDO1A1,"patdo1af"
          OPEN      PATDO1A2,"patdo1af"
          DISPLAY   *P60:24,"patcodes"
          OPEN      PATCODE1,"patcodes"
          OPEN      PATCODE2,"patcodes"
.
          DISPLAY   *P60:24,*EL,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,TWENTY1;*247,PTCNDCQS
.
          MOVE      ONE,CNEWDS
.
INIT9999  RETURN
+
.*************************************************************************
.*  MENU0000  :  Menu options                                            *
.*************************************************************************
MENU0000  HLINE     *G37,2,57,80
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = Individual Access by User Code":
                    *P1:6,*V2LON,"2",*HOFF," = Individual Access by Waiting ":
                    "List",*P1:7,*V2LON,"3",*HOFF," = All access":
                    *P1:9,"Select Option : ";
.
MENU1000  KEYIN     *P17:9,*DV,UNDLN1:
                    *P17:9,*V2LON,MOPTION
.
          IF        (MOPTION<0)|(MOPTION>3)
            BEEP
            GOTO      MENU1000
          ENDIF
.
          IF        MOPTION=1
            DISPLAY   *P57:2,*V2LON,"- Indiv. access by User "
          ENDIF
          IF        MOPTION=2
            DISPLAY   *P57:2,*V2LON,"- Indiv. access by W/L "
          ENDIF
          IF        MOPTION=3
            DISPLAY   *P57:2,*V2LON,"- All access "
          ENDIF
.
MENU9999  RETURN
+
.*************************************************************************
.*  KLTY0000  :  keyin List type                                         *
.*************************************************************************
KLTY0000  MOVE      "WU",CODE
          MOVE      SP3,CKYIDEF3                  * no default
          MOVE      ZERO,CKYIMAND                 * not mandatory
          MOVE      LTYPCOL,ECOL
          MOVE      LTYPVERT,EVERT
.
          CALL      PATCODKY
          BRANCH    EXIT,KLTY9999,KLTY9999
.
          MOVE      ACODE,LISTTYPE
          PACK      KEY9,CONSULT,LISTTYPE
          CALL      RDWTVWL1
          IF        OVRCD=1
            DISPLAY   *P1:24,*EL,*B,"Consultant/List Type doesn't exist.  ";
            CALL      HITENTER
            GOTO      KLTY0000
          ENDIF
.
          IF        MOPTION=1
            DISPLAY   *P43:EVERT,TDESC;
          ELSE
            DISPLAY   *P32:5,TDESC;
          ENDIF
.
KLTY9999  RETURN
+
.*************************************************************************
.*  KUSR0000  :  keyin User code                                         *
.*************************************************************************
KUSR0000  KEYIN     *PCCOL:CVERT,*DV,UNDLN4:
                    *PCCOL:CVERT,*V2LON,SECODE:
                    *PCCOL:CVERT,*DV,SECODE;
.
          ENDSET    SECODE
          APPEND    SP4,SECODE
          RESET     SECODE
.
          MATCH     QUEST,SECODE
          GOTO      KUSR3000 IF NOT EQUAL
.
. "?" was input
.
          MOVE      ZERO,HLEF
          CALL      GETSCR00
KUSR1000  CALL      IHAPASDS                      * "?" routine
          IF        OVRCD=1
            CALL      PUTSCR00
            MOVE      ONE,EXIT
            GOTO      KUSR9999
          ENDIF
KUSR2000  DISPLAY   *P1:24,*EL,"User Code   : ";
          KEYIN     *P15:24,*DV,UNDLN4:
                    *P15:24,*V2LON,SECODE:
                    *P15:24,*DV,SECODE
.
          ENDSET    SECODE
          APPEND    SP4,SECODE
          RESET     SECODE
.
          MATCH     QUEST,SECODE
          GOTO      KUSR1000 IF EQUAL
.
          MOVE      ZERO,EXIT
          MATCH     SP4,SECODE
          IF        @EQUAL
            MOVE      ONE,EXIT
            CALL      PUTSCR00
            GOTO      KUSR5000
          ENDIF
.
          PACK      KEY4,SECODE
          CALL      RDPASS1
          IF        OVRCD=1
            DISPLAY   *P1:24,*EL,*B,"Invalid code.  ";
            CALL      HITENTER
            GOTO      KUSR2000
          ENDIF
          IF        MOPTION<>3
            PACK      KEY4,SECODE
            CALL      RDWTSEA1
            IF        OVRCD=0
              DISPLAY   *P1:24,*EL,*B,"This user has ALL Access.  ";
              CALL      HITENTER
              GOTO      KUSR2000
            ENDIF
          ENDIF
          CALL      PUTSCR00
          DISPLAY   *PSAVCCOL:SAVCVERT,*V2LON,SECODE
.
KUSR3000  MOVE      ZERO,EXIT
          MATCH     SP4,SECODE
          IF        @EQUAL
            MOVE      ONE,EXIT
            GOTO      KUSR5000
          ENDIF
.
          PACK      KEY4,SECODE
          CALL      RDPASS1
          IF        OVRCD=1
            DISPLAY   *P1:24,*EL,*B,"Invalid code.  ";
            CALL      HITENTER
            GOTO      KUSR0000
          ENDIF
          IF        MOPTION<>3
            PACK      KEY4,SECODE
            CALL      RDWTSEA1
            IF        OVRCD=0
              DISPLAY   *P1:24,*EL,*B,"This user has ALL Access.  ";
              CALL      HITENTER
              GOTO      KUSR0000
            ENDIF
          ENDIF
          IF        MOPTION=1
            DISPLAY   *P32:4,SECUSER
          ENDIF
.
KUSR5000  MOVE      SECODE,USERCODE
.
KUSR9999  RETURN
+
.*************************************************************************
.*  KCON0000  :  keyin Consultant                                        *
.*************************************************************************
KCON0000  MOVE      SP6,CKYIDEF6                  * no default
          MOVE      ZERO,CKYIMAND                 * not mandatory
          MOVE      CONSCOL,ECOL
          MOVE      CONSVERT,EVERT
          DISPLAY   *PECOL:EVERT,*EL
.
          CALL      PATDOCKY
          BRANCH    EXIT,KCON9999,KCON9999
.
          MOVE      DOCCODE,CONSULT
          MOVE      DGNAME,PACGNAME
          MOVE      DSNAME,PACSNAME
          MOVE      DTITL,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
.
          IF        MOPTION=2
            DISPLAY   *P22:EVERT,DCODE,*P32:EVERT,PACFNAME;
          ENDIF
.
KCON9999  RETURN
+
.*************************************************************************
.*  NEXT0000  :  Ask line 24 Question                                    *
.*************************************************************************
NEXT0000  BRANCH    CALLPOSN,NEXT0400             * last screen?
          BRANCH    SCREEN,NEXT0100
.
. on middle screen
.
          DISPLAY   *P1:24,"(",*V2LON,"A",*HOFF,")dd, (",*V2LON,"D",*HOFF:
                    ")elete, (",*V2LON,"P",*HOFF,")ost, (",*V2LON,"F",*HOFF:
                    ")orward, (",*V2LON:
                    "B",*HOFF,")ack, (",*V2LON,"E",*HOFF,")xit ? ";
          MOVE      "54",CCOL
          GOTO      NEXT1000
.
. on 1st screen (>1 screen)
.
NEXT0100  DISPLAY   *P1:24,"(",*V2LON,"A",*HOFF,")dd, (",*V2LON,"D",*HOFF:
                    ")elete, (",*V2LON,"P",*HOFF,")ost, (",*V2LON,"F",*HOFF:
                    ")orward, (",*V2LON,"E",*HOFF,")xit ? ";
          MOVE      "46",CCOL
          GOTO      NEXT1000
.
. --- we are on the last screen (>1 screen) ---
.
NEXT0400  BRANCH    SCREEN,NEXT0500
          DISPLAY   *P1:24,"(",*V2LON,"A",*HOFF,")dd, (",*V2LON,"D",*HOFF:
                    ")elete, (",*V2LON,"P",*HOFF,")ost, (",*V2LON,"B",*HOFF:
                    ")ack, (",*V2LON,"E",*HOFF,")xit ? ";
          MOVE      "43",CCOL
          GOTO      NEXT1000
.
. only 1 screen of data
.
NEXT0500  DISPLAY   *P1:24,"(",*V2LON,"A",*HOFF,")dd, (",*V2LON,"D",*HOFF:
                    ")elete, (",*V2LON,"P",*HOFF,")ost, (",*V2LON,"E",*HOFF:
                    ")xit ? ";
          MOVE      "35",CCOL
          GOTO      NEXT1000
.
NEXT1000  KEYIN     *PCCOL:24,*DV,UNDLN1:
                    *PCCOL:24,*V2LON,ANS;
          REP       UPPLOW,ANS
          TYPE      ANS
          GOTO      NEXT1500 IF EQUAL
          MOVE      ZERO,FORM1
          REP       "A1D2P3F4B5E6 0",ANS
          MOVE      ANS,FORM1
          BRANCH    FORM1,NEXT3000,NEXT4000,NEXT5000,NEXT6000,NEXT7000,NEXT8000
NEXT1500  BEEP
          GOTO      NEXT1000
.
NEXT3000  MOVE      "1",EXIT                      * Add
          GOTO      NEXT9999
.
NEXT4000  MOVE      "2",EXIT                      * Delete
          GOTO      NEXT9999
.
NEXT5000  MOVE      "3",EXIT                      * Post
          GOTO      NEXT9999
.
NEXT6000  BRANCH    CALLPOSN,NEXT1500
          MOVE      "4",EXIT                      * Forward
          GOTO      NEXT9999
.
NEXT7000  BRANCH    SCREEN,NEXT1500
          MOVE      "5",EXIT                      * Back
          GOTO      NEXT9999
.
NEXT8000  MOVE      "6",EXIT                      * Exit
          GOTO      NEXT9999
.
NEXT9999  RETURN
+
.*************************************************************************
.*                             KILL0000             Called by:           *
.*                   erase temporary file                                *
.*************************************************************************
KILL0000  CLOSE     TEMPFILA
          CLOSE     TEMPFILB
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    TFILNAME,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
KILL9999  RETURN
+
.*************************************************************************
.*                             CRET0000            Called by:            *
.*                      create temporary file                            *
.*************************************************************************
CRET0000  CALL      KILL0000 
          CLEAR     CMDLINE 
          APPEND    "isbuild ",CMDLINE
          APPEND    TFILNAME,CMDLINE
          IF        MOPTION=1
            APPEND    " 10 U1-6,7-9",CMDLINE
          ELSE
            APPEND    " 5 U1-4",CMDLINE
          ENDIF
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          IF        MOPTION=1
            OPEN      TEMPFILA,TFILNAME
          ELSE
            OPEN      TEMPFILB,TFILNAME
          ENDIF
.
CRET9999  RETURN
+
.**************************************************************************
.*  EXTA0000  :  Extract data into temp file A                            *
.**************************************************************************
EXTA0000  DISPLAY   *P1:24,*EL,*P33:24,"Loading... [          ]";
.
          PACK      KEY13,SECODE,SP20
          CALL      RSWTSEI2
EXTA1000  CALL      RKWTSEI2
          BRANCH    OVRCD,EXTA9999
.
          MATCH     SECODE,WTSIUSER               * still same user Id.?
          GOTO      EXTA9999 IF NOT EQUAL
.
          DISPLAY   *P45:24,WTSICONS,SP1,WTSILTYP;
.
          MOVE      WTSICONS,XXCONS
          MOVE      WTSILTYP,XXLTYP
          PACK      KEY9,XXCONS,XXLTYP
          CALL      RATEMPA1
          IF        OVRCD=1
            CALL      WRTEMPA1
          ENDIF
          GOTO      EXTA1000
.
EXTA9999  RETURN
+
.**************************************************************************
.*  EXTB0000  :  Extract data into temp file B                            *
.**************************************************************************
EXTB0000  DISPLAY   *P1:24,*EL,*P33:24,"Loading... [    ]";
.
          COMPARE   THREE,MOPTION                 * ALL Access?
          GOTO      EXTB5000 IF EQUAL
.
          PACK      KEY13,CONSULT,LISTTYPE,SP20
          CALL      RSWTSEI1
EXTB1000  CALL      RKWTSEI1
          BRANCH    OVRCD,EXTB9999
.
          MATCH     CONSULT,WTSICONS              * still same consultant?
          GOTO      EXTB9999 IF NOT EQUAL
.
          MATCH     LISTTYPE,WTSILTYP             * still same consultant?
          GOTO      EXTB9999 IF NOT EQUAL
.
          DISPLAY   *P45:24,WTSIUSER;
.
          MOVE      WTSIUSER,XXUSER
          PACK      KEY4,XXUSER
          CALL      RATEMPB1
          IF        OVRCD=1
            CALL      WRTEMPB1
          ENDIF
          GOTO      EXTB1000
.
. Load data from the ALL Access file
.
EXTB5000  PACK      KEY4,SP4
          CALL      RSWTSEA1
EXTB6000  CALL      RKWTSEA1
          BRANCH    OVRCD,EXTB9999
.
          DISPLAY   *P45:24,WTSAUSER;
.
          MOVE      WTSAUSER,XXUSER
          PACK      KEY4,XXUSER
          CALL      RATEMPB1
          IF        OVRCD=1
            CALL      WRTEMPB1
          ENDIF
          GOTO      EXTB6000
.
EXTB9999  RETURN
+
.**************************************************************************
.*  PRCA0000  :  Process data from temp file B                            *
.**************************************************************************
PRCA0000  DISPLAY   *P1:5,*EF 
.
PRCA0200  DISPLAY   *P1:7,*EF,*P6:7,*V2LON,*ULON,"Consultant",SP10,SP8,*P38:7:
                    "List Type                "
.
          MOVE      ONE,SCREEN                    * init screen no.
          MOVE      ONE,ITEMNUM                   * init Item no.
          MOVE      "8",CVERT
.
          PACK      KEY9,SP10                    * position at start
          CALL      RSTEMPA1
PRCA1000  CALL      RKTEMPA1
          BRANCH    OVRCD,PRCA5000                * no more records
.
. check if enough room for display
.
          COMPARE   TEN6,ITEMNUM
          GOTO      PRCA3000 IF LESS
.
. we need a new screen
.
          MOVE      ZERO,CALLPOSN                 * not on last screen
          CALL      NEXT0000                      * ask question with Next scrn
          BRANCH    EXIT,PRCA5500:                * Add selected          
                         PRCA6000:                * Delete selected
                         PRCA6500:                * Post
                         PRCA2500:                * Page Forward selected
                         PRCA2000:                * Page Back selected
                         PRCA9999                 * Exit
.
. previous screen was selected
.
PRCA2000  PACK      KEY9,CONLARRY[1]
          CALL      RSTEMPA1                      * pos on 1st key on screen
.
. read back 12 records until 1st key on previous screen is reached
.
          MOVE      ZERO,COUNTER                  * init counter
PRCA2200  CALL      RPTEMPA1                      * read back 1 record
          ADD       ONE,COUNTER                   * increment counter
          COMPARE   TEN5,COUNTER                  * check if read far enough
          GOTO      PRCA2200 IF NOT EQUAL
.
. we have read back far enough
.
          DISPLAY   *P1:8,*EF                     * erase screen
          MOVE      "8",CVERT                     * init screen row
          MOVE      ONE,ITEMNUM                   * init screen disp counter
          SUB       ONE,SCREEN                    * update screen no.
          GOTO      PRCA3000
.
. Next screen was selected
.
PRCA2500  ADD       ONE,SCREEN                    * increment screen no.
          DISPLAY   *P1:8,*EF                     * erase screen
          MOVE      "8",CVERT                     * init screen row
          MOVE      ONE,ITEMNUM                   * init screen disp counter
.
. display record
.
PRCA3000  MOVE      "  << Missing Code >> ",DOCNAME
          PACK      KEY6,XXCONS
          CALL      RDDOCT1
          IF        OVRCD=0
            MOVE      DGNAME,PACGNAME
            MOVE      DSNAME,PACSNAME
            MOVE      DTITL,PACTITLE
            MOVE      TWO,PACFRMT
            CALL      PACNAME
            MOVE      PACFNAME,DOCNAME
          ENDIF
.
          MOVE      "<< Missing Code >>",TDESC
          PACK      KEY5,ANSW,ANSU,XXLTYP
          CALL      RDCODE1
.
          DISPLAY   *P1:CVERT,*V2LON,ITEMNUM,*HOFF,".  ":
                    *V2LON,XXCONS,*HOFF,SP2,DOCNAME,*P38:CVERT,*V2LON,XXLTYP:
                    *HOFF,SP2,TDESC;
.
.    save each record as it is displayed (for selection purposes)
.
          PACK      CONLARRY[ITEMNUM],XXCONS,XXLTYP
.
          ADD       ONE,CVERT                     * update row pos
          ADD       ONE,ITEMNUM                   * increment counter
          GOTO      PRCA1000                      * get next record
.
. we have no more records to display
.
PRCA5000  MOVE      ONE,CALLPOSN                  * on last screen
          CALL      NEXT0000
          BRANCH    EXIT,PRCA5500:                * Add selected          
                         PRCA6000:                * Delete selected
                         PRCA6500:                * Post
                         PRCA2500:                * shouldn't get here
                         PRCA2000:                * Page Back selected
                         PRCA9999                 * Exit
.
. Add Selected
.
PRCA5500  CALL      ADCL0000                      * Add Consultant/List type
          BRANCH    EXIT,PRCA9999                 * EXITCHAR
          GOTO      PRCA0200                      * redisplay from start
.
. Delete Selected
.
PRCA6000  CALL      DECL0000                      * Delete Consultant/List type
          GOTO      PRCA0200                      * redisplay from start
.
. Post Selected
.
PRCA6500  CALL      POST0000                      * Post data
          GOTO      PRCA9999
.
PRCA9999  RETURN              
+
.**************************************************************************
.*  PRCB0000  :  Process data from temp file B                            *
.**************************************************************************
PRCB0000  IF        MOPTION=3
            DISPLAY   *P1:4,*EF 
          ENDIF
.
PRCB0200  DISPLAY   *P1:7,*EF,*P6:7,*V2LON,*ULON,"User Id",SP30,SP4
.
          MOVE      ONE,SCREEN                    * init screen no.
          MOVE      ONE,ITEMNUM                   * init Item no.
          MOVE      "8",CVERT
.
          PACK      KEY4,SP4                      * position at start
          CALL      RSTEMPB1
PRCB1000  CALL      RKTEMPB1
          BRANCH    OVRCD,PRCB5000                * no more records
.
. check if enough room for display
.
          COMPARE   TEN6,ITEMNUM
          GOTO      PRCB3000 IF LESS
.
. we need a new screen
.
          MOVE      ZERO,CALLPOSN                 * not on last screen
          CALL      NEXT0000                      * ask question with Next scrn
          BRANCH    EXIT,PRCB5500:                * Add selected          
                         PRCB6000:                * Delete selected
                         PRCB6500:                * Post
                         PRCB2500:                * Page Forward selected
                         PRCB2000:                * Page Back selected
                         PRCB9999                 * Exit
.
. previous screen was selected
.
PRCB2000  PACK      KEY4,ITEMARRY[1]
          CALL      RSTEMPB1                      * pos on 1st key on screen
.
. read back 12 records until 1st key on previous screen is reached
.
          MOVE      ZERO,COUNTER                  * init counter
PRCB2200  CALL      RPTEMPB1                      * read back 1 record
          ADD       ONE,COUNTER                   * increment counter
          COMPARE   TEN5,COUNTER                  * check if read far enough
          GOTO      PRCB2200 IF NOT EQUAL
.
. we have read back far enough
.
          DISPLAY   *P1:8,*EF                     * erase screen
          MOVE      "8",CVERT                     * init screen row
          MOVE      ONE,ITEMNUM                   * init screen disp counter
          SUB       ONE,SCREEN                    * update screen no.
          GOTO      PRCB3000
.
. Next screen was selected
.
PRCB2500  ADD       ONE,SCREEN                    * increment screen no.
          DISPLAY   *P1:8,*EF                     * erase screen
          MOVE      "8",CVERT                     * init screen row
          MOVE      ONE,ITEMNUM                   * init screen disp counter
.
. display record
.
PRCB3000  MOVE      "  << Missing Code >> ",SECUSER
          PACK      KEY4,XXUSER                   * get user name
          CALL      RDPASS1
.
          DISPLAY   *P1:CVERT,*V2LON,ITEMNUM,*HOFF,".  ":
                    *V2LON,XXUSER,*HOFF,SP2,SECUSER
.
.    save each record as it is displayed (for selection purposes)
.
          MOVE      XXUSER,ITEMARRY[ITEMNUM]
.
          ADD       ONE,CVERT                     * update row pos
          ADD       ONE,ITEMNUM                   * increment counter
          GOTO      PRCB1000                      * get next record
.
. we have no more records to display
.
PRCB5000  MOVE      ONE,CALLPOSN                  * on last screen
          CALL      NEXT0000
          BRANCH    EXIT,PRCB5500:                * Add selected          
                         PRCB6000:                * Delete selected
                         PRCB6500:                * Post
                         PRCB2500:                * shouldn't get here
                         PRCB2000:                * Page Back selected
                         PRCB9999                 * Exit
.
. Add Selected
.
PRCB5500  CALL      ADDI0000                      * Add Items
          GOTO      PRCB0200                      * redisplay from start
.
. Delete Selected
.
PRCB6000  CALL      DELI0000                      * Delete an Item
          GOTO      PRCB0200                      * redisplay from start
.
. Post Selected
.
PRCB6500  CALL      POST0000                      * Post data
          GOTO      PRCB9999
.
PRCB9999  RETURN              
+
.**************************************************************************
.*  DECL0000  :  Delete Items from Batch screen  (Temp A)                 *
.**************************************************************************
DECL0000  DISPLAY   *P1:24,*EL,"Select Item to Delete : ";
.
DECL1000  KEYIN     *P25:24,*DV,UNDLN2:
                    *P25:24,*V2LON,FORM2:
                    *P25:24,*DV,FORM2
.
          COMPARE   ZERO,FORM2
          GOTO      DECL9999 IF EQUAL
.
          IF        (FORM2>(ITEMNUM-1)) | (FORM2<0)
            BEEP
            GOTO      DECL1000
          ENDIF
.
          PACK      KEY9,CONLARRY[FORM2]
          CALL      RDTEMPA1
          IF        OVRCD=1
            DISPLAY   *P1:24,*EL,*B,"Item has been deleted.  ";
            CALL      HITENTER
            GOTO      DECL0000
          ENDIF
.
          ASSIGN    (SEVEN+FORM2),CVERT
          DISPLAY   *P6:CVERT,*V2LON,*BLINKON,XXCONS;
.
          DISPLAY   *P1:24,*EL,"Ok to delete this record (",*V2LON,"Y",*HOFF:
                    "/",*V2LON,"N",*HOFF,") ? ";
.
DECL4000  KEYIN     *P35:24,*DV,UNDLN1:
                    *P35:24,*V2LON,ANS;
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      DECL5000 IF EQUAL
          MATCH     ANSN,ANS
          IF        @EQUAL
            DISPLAY   *P6:CVERT,*V2LON,XXCONS;
            GOTO      DECL0000
          ENDIF
          BEEP
          GOTO      DECL4000
.
DECL5000  DISPLAY   *P1:24,*EL,*P35:24,"Deleting...";
          CALL      DETEMPA1
          DISPLAY   *P6:CVERT,*EL,*P12:CVERT," << Item Deleted >> "
          GOTO      DECL0000
.
DECL9999  RETURN
+
.**************************************************************************
.*  DELI0000  :  Delete Items from Batch screen  (Temp B)                 *
.**************************************************************************
DELI0000  DISPLAY   *P1:24,*EL,"Select Item to Delete : ";
.
DELI1000  KEYIN     *P25:24,*DV,UNDLN2:
                    *P25:24,*V2LON,FORM2:
                    *P25:24,*DV,FORM2
.
          COMPARE   ZERO,FORM2
          GOTO      DELI9999 IF EQUAL
.
          IF        (FORM2>(ITEMNUM-1)) | (FORM2<0)
            BEEP
            GOTO      DELI1000
          ENDIF
.
          PACK      KEY4,ITEMARRY[FORM2]
          CALL      RDTEMPB1
          IF        OVRCD=1
            DISPLAY   *P1:24,*EL,*B,"Item has been deleted.  ";
            CALL      HITENTER
            GOTO      DELI0000
          ENDIF
.
          ASSIGN    (SEVEN+FORM2),CVERT
          DISPLAY   *P6:CVERT,*V2LON,*BLINKON,XXUSER;
.
          DISPLAY   *P1:24,*EL,"Ok to delete this User (",*V2LON,"Y",*HOFF:
                    "/",*V2LON,"N",*HOFF,") ? ";
.
DELI4000  KEYIN     *P32:24,*DV,UNDLN1:
                    *P32:24,*V2LON,ANS;
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      DELI5000 IF EQUAL
          MATCH     ANSN,ANS
          IF        @EQUAL
            DISPLAY   *P6:CVERT,*V2LON,XXUSER;
            GOTO      DELI0000
          ENDIF
          BEEP
          GOTO      DELI4000
.
DELI5000  DISPLAY   *P1:24,*EL,*P35:24,"Deleting...";
          CALL      DETEMPB1
          DISPLAY   *P6:CVERT,*EL,*P12:CVERT," << Item Deleted >> "
          GOTO      DELI0000
.
DELI9999  RETURN
+
.**************************************************************************
.*  ADCL0000  :  Add Consultants/List types to batch screen option 1      *
.*               Requires :  CVERT - Row of next Item                     *
.*                           ITEMNUM - Next Item No. on screen            *
.**************************************************************************
ADCL0000  IF        CVERT=23
            DISPLAY   *P1:8,*EF
            MOVE      "8",CVERT
            MOVE      ONE,ITEMNUM
          ENDIF
.
          DISPLAY   *P1:CVERT,*V2LON,ITEMNUM,*HOFF,".";
.
ADCL1000  MOVE      SIX,CONSCOL
          MOVE      CVERT,CONSVERT
          CALL      KCON0000                      * keyin a consultant
          BRANCH    EXIT,ADCL9000,ADCL9500        * nothing input, EXITCHAR
          MOVE      PACFNAME,DESC20
          DISPLAY   *P6:CONSVERT,CONSULT,*P14:CONSVERT,DESC20
          MOVE      CONSVERT,CVERT                * restore row
.
          MOVE      "38",LTYPCOL
          MOVE      CVERT,LTYPVERT
          CALL      KLTY0000                      * keyin a consultant
          MOVE      LTYPVERT,CVERT                * restore row
          BRANCH    EXIT,ADCL1000,ADCL9500        * nothing input, EXITCHAR
.
. check if already on screen (or on temp file)
.
          PACK      KEY9,CONSULT,LISTTYPE
          CALL      RDTEMPA1
          IF        OVRCD=0
            DISPLAY   *P1:24,*EL,*B,"Codes already in current batch.  ";
            CALL      HITENTER
            GOTO      ADCL1000
          ENDIF
.
          MOVE      CONSULT,XXCONS
          MOVE      LISTTYPE,XXLTYP
          CALL      WRTEMPA1                      * write to temp file
.
          ADD       ONE,CVERT
          ADD       ONE,ITEMNUM
          GOTO      ADCL0000
.
ADCL9000  MOVE      ZERO,EXIT                     * consultant not input
          GOTO      ADCL9999
.
ADCL9500  MOVE      ONE,EXIT                      * EXITCHAR
.
ADCL9999  RETURN
+
.**************************************************************************
.*  ADDI0000  :  Add Items to Batch screen                                *
.*               Requires :  CVERT - Row of next Item                     *
.*                           ITEMNUM - Next Item No. on screen            *
.**************************************************************************
ADDI0000  IF        CVERT=23
            DISPLAY   *P1:8,*EF
            MOVE      "8",CVERT
            MOVE      ONE,ITEMNUM
          ENDIF
.
          DISPLAY   *P1:CVERT,*V2LON,ITEMNUM,*HOFF,".";
.
ADDI1000  MOVE      SIX,CCOL
          MOVE      CCOL,SAVCCOL
          MOVE      CVERT,SAVCVERT
          CALL      KUSR0000                      * keyin a user code
          MOVE      SAVCCOL,CCOL                  * restore screen pos
          MOVE      SAVCVERT,CVERT                * restore screen pos
.
          MATCH     SP4,SECODE
          GOTO      ADDI9999 IF EQUAL
.
. check if already on screen (or on temp file)
.
          MOVE      SECODE,XXUSER
          PACK      KEY4,XXUSER
          CALL      RDTEMPB1
          IF        OVRCD=0
            DISPLAY   *P1:24,*EL,*B,"User already in current batch.  ";
            CALL      HITENTER
            GOTO      ADDI1000
          ENDIF
.
          DISPLAY   *P12:CVERT,SECUSER
.
          CALL      WRTEMPB1                      * write to temp file
.
          ADD       ONE,CVERT
          ADD       ONE,ITEMNUM
          GOTO      ADDI0000
.
ADDI9999  RETURN
+
.**************************************************************************
.*  DSIA0000  :  Delete record in watseiaf for USERCODE                   *
.**************************************************************************
DSIA0000  PACK      KEY13,USERCODE,SP20
          CALL      RSWTSEI2
DSIA1000  CALL      RKWTSEI2
          BRANCH    OVRCD,DSIA9999
.
          MATCH     WTSIUSER,USERCODE
          GOTO      DSIA9999 IF NOT EQUAL
.
          PACK      KEY13,WTSIUSER,WTSICONS,WTSILTYP
          CALL      DEWTSEI2
          PACK      KEY13,WTSIUSER,WTSICONS,WTSILTYP
          CALL      RSWTSEI2
          GOTO      DSIA1000
.
DSIA9999  RETURN
+
.**************************************************************************
.*  DSIB0000  :  Delete record in watseiaf for CONS & LTYP                *
.**************************************************************************
DSIB0000  PACK      KEY13,CONSULT,LISTTYPE,SP20
          CALL      RSWTSEI1
DSIB1000  CALL      RKWTSEI1
          BRANCH    OVRCD,DSIB9999
.
          MATCH     WTSICONS,CONSULT
          GOTO      DSIB9999 IF NOT EQUAL
.
          MATCH     WTSILTYP,LISTTYPE
          GOTO      DSIB9999 IF NOT EQUAL
.
          PACK      KEY13,WTSICONS,WTSILTYP,WTSIUSER
          CALL      DEWTSEI1
          PACK      KEY13,WTSICONS,WTSILTYP,WTSIUSER
          CALL      RSWTSEI1
          GOTO      DSIB1000
.
DSIB9999  RETURN
+
.**************************************************************************
.*  DSAA0000  :  Delete records in watseaaf                               *
.**************************************************************************
DSAA0000  PACK      KEY4,SP4
          CALL      RSWTSEA1
DSAA1000  CALL      RKWTSEA1
          BRANCH    OVRCD,DSAA9999
.
          PACK      KEY4,WTSAUSER
          CALL      DEWTSEA1
          PACK      KEY4,WTSAUSER
          CALL      RSWTSEA1
          GOTO      DSAA1000
.
DSAA9999  RETURN
+
.**************************************************************************
.*  POST0000  :  Post batch screens                                       *
.**************************************************************************
POST0000  DISPLAY   *P1:24,*EL,*V2LON,*P35:24,"Posting...";
.
          BRANCH    MOPTION,POST1000,POST3000,POST5000
.
. Individual Access by User code
.
POST1000  CALL      DSIA0000                      * delete all records for USER
          MOVE      USERCODE,WTSIUSER
          PACK      KEY9,SP9
          CALL      RSTEMPA1
POST1100  CALL      RKTEMPA1
          BRANCH    OVRCD,POST9999
.
          MOVE      XXCONS,WTSICONS
          MOVE      XXLTYP,WTSILTYP
          PACK      KEY13,WTSICONS,WTSILTYP,WTSIUSER
          CALL      RAWTSEI1
          IF        OVRCD=1
            CALL      WRWTSEI1
          ENDIF
          GOTO      POST1100
.
. Individual Access by Waiting List
.
POST3000  CALL      DSIB0000                      * delete recs for CONS & LTYPE
          MOVE      CONSULT,WTSICONS
          MOVE      LISTTYPE,WTSILTYP
          PACK      KEY4,SP4
          CALL      RSTEMPB1
POST3100  CALL      RKTEMPB1
          BRANCH    OVRCD,POST9999
.
          MOVE      XXUSER,WTSIUSER
          PACK      KEY13,WTSICONS,WTSILTYP,WTSIUSER
          CALL      RAWTSEI1
          IF        OVRCD=1
            CALL      WRWTSEI1
          ENDIF
          GOTO      POST3100
.
. All Access
.
POST5000  CALL      DSAA0000                      * delete All recs in watseaaf
          PACK      KEY4,SP4
          CALL      RSTEMPB1
POST5100  CALL      RKTEMPB1
          BRANCH    OVRCD,POST9999
.
          MOVE      XXUSER,WTSAUSER
          PACK      KEY4,WTSAUSER
          CALL      RAWTSEA1
          IF        OVRCD=1
            CALL      WRWTSEA1
          ENDIF
.
.    now delete any record the user has in the individual access file
.
          PACK      KEY13,XXUSER,SP20
          CALL      RSWTSEI2
POST5200  CALL      RKWTSEI2
          BRANCH    OVRCD,POST5100
.
          MATCH     XXUSER,WTSIUSER
          GOTO      POST5100 IF NOT EQUAL
.
          PACK      KEY13,WTSIUSER,WTSICONS,WTSILTYP
          CALL      DEWTSEI2
          PACK      KEY13,WTSIUSER,WTSICONS,WTSILTYP
          CALL      RSWTSEI2
          GOTO      POST5200
.
POST9999  RETURN
+
.*************************************************************************
.*  SETC0000  :  set up initial screen positions                         *
.*************************************************************************
SETC0000  BRANCH    MOPTION,SETC1000,SETC2000
.
SETC1000  DISPLAY   *P1:4,*EF:
                    *P3:4,"User Code",*P20:4,":"
          MOVE      "22",CCOL
          MOVE      "4",CVERT
          MOVE      CCOL,SAVCCOL
          MOVE      CVERT,SAVCVERT
          GOTO      SETC9999
.
SETC2000  DISPLAY   *P1:4,*EF:
                    *P3:4,"Consultant",*P20:4,":":
                    *P3:5,"List Type",*P20:5,":"
.
          MOVE      "22",CONSCOL
          MOVE      "4",CONSVERT
          MOVE      "22",LTYPCOL
          MOVE      "5",LTYPVERT
          GOTO      SETC9999
.
SETC9999  RETURN
+
.*************************************************************************
.*  Temp I/O's                                                           *
.*************************************************************************
.
. temp file A
.
RATEMPA1  MOVE      ZERO,OVRCD
          RESET     KEY9
          READ      TEMPFILA,KEY9;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTEMPA1  RESET     KEY9
          READ      TEMPFILA,KEY9;;
          RETURN
.
RDTEMPA1  MOVE      ZERO,OVRCD
          RESET     KEY9
          READ      TEMPFILA,KEY9;XXCONS,XXLTYP
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTEMPA1  MOVE      ZERO,OVRCD
          READKS    TEMPFILA;XXCONS,XXLTYP
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTEMPA1  MOVE      ZERO,OVRCD
          READKP    TEMPFILA;XXCONS,XXLTYP
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMPA1  RESET     KEY9
          WRITE     TEMPFILA,KEY9;XXCONS,XXLTYP
          RETURN
.
DETEMPA1  RESET     KEY9
          DELETE    TEMPFILA,KEY9
          RETURN
.
. temp file B
.
RATEMPB1  MOVE      ZERO,OVRCD
          RESET     KEY4
          READ      TEMPFILB,KEY4;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTEMPB1  RESET     KEY4
          READ      TEMPFILB,KEY4;;
          RETURN
.
RDTEMPB1  MOVE      ZERO,OVRCD
          RESET     KEY4
          READ      TEMPFILB,KEY4;XXUSER
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTEMPB1  MOVE      ZERO,OVRCD
          READKS    TEMPFILB;XXUSER
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTEMPB1  MOVE      ZERO,OVRCD
          READKP    TEMPFILB;XXUSER
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMPB1  RESET     KEY4
          WRITE     TEMPFILB,KEY4;XXUSER
          RETURN
.
DETEMPB1  RESET     KEY4
          DELETE    TEMPFILB,KEY4
          RETURN
.
.
          INC       STD001IO
          INC       PATCODKY
          INC       PATDOCKY
          INC       IBAPASDS
          INC       PATCODIO/INC
          INC       PATDO1IO/INC
          INC       WATSEAIO/INC
          INC       WATSEIIO/INC
          INC       WATVWLIO/INC
          INC       IBAPASIO/INC
          INC       TFILENAM
          INC       IBASEQIO/INC
          INC       WEBERRIO/INC
.
