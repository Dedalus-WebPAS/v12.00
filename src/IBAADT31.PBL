.***************************************************************************
.* System    :   Patient Management System                                 *
.* Program   :   IBAADT31                                                  *
.* Desc      :   Contract Agreement Register                               *
.***************************************************************************
.* Date      :   10/04/97                                                  *
.* Author    :   J.Tan                                                     *
.* Modifications  :                                                        *
.*        V11.00.01 04/03/2020  J.Tan          TSK 0838262                 *
.*                  Added Effective from and to date to MBS Item file      *
.*        V10.03.03 18/02/2013 Ania P         CAR 281021                   *
.*                  Removed redundant modification of constants            *
.*        V10.03.02  19/12/2012 Patrick Adair CAR 261630                   *
.*                  Removed port number from temp file name                *
.*        V10.03.01 09/01/2012  J.Tan         CAR 257430                   *
.*                  Replaced RDPTHLFA1 with RDPTHLF1                       *
.*        V10.01.01 15/02/2011 Ebon Clements  CAR 233048                   *
.*                  Removed new file option                                *
.*        V9.12.01 03/09/2009 J.Tan           CAR 205303                   *
.*                  Added Contract ID                                      *
.*        V9.08.01  04/05/2007  Mike Laming   CAR 137125 HDP 2007 DRG 5.2  *
.*                  Mods to PATDGWFD - Add field PTDWDRGV (add to Keys)    *
.*        V9.03.03  14/04/2004  Mike Laming   CAR 48938                    *
.*                  Fix U*R on BCOUNT (caused by SAVSEQ = 0) - correct key *
.*                  test SKEY26 at MBTF1000 & MBTF2000                     *
.*        V9.03.02  24/06/2003  Dean Cramer   CAR 38200                    *
.*                  Include page headings detailing all range entries      *
.*        V9.03.01  11/06/2003  Dean Cramer   CAR 38200                    *
.*                  Make keyin of episode type a dim then move to a form   *
.*                  so that web keystroke is recognised                    *
.*        V9.02.01  02/11/2001  Tonii                                      *
.*                  Removed PTCTEPSD & PTCMEPSO, Episode Type no longer in *
.*                  use                                                    *
.*                  Mods to read 0 for Daycases and 1 for Overnight        *
.***************************************************************************
.*        V5.08.04  05/12/2000  Ebon Clements  SRF 7133                    *
.*                  Fixed set up of selection variables                    *
.*        V5.08.03  25/10/2000  Dean Cramer   SRF 6710                     *
.*                  Recomplied for PATFNDDS via PATFNDKY                   *
.*                  Changed for health fund table code size increase to    *
.*                  8 characters                                           *
.*        V5.08.02  16/08/2000  Caleb Sharman                              *
.*                  Changed Health Fund variables to be 8 chars            *
.*        V5.08.B02 19/04/2000  Jill Habasque                              *
.*                  Added 'no records selected' message                    *
.*        V5.08.B01 25/02/2000  Greg Horvat      SRF 637565                *
.*                  Changes for 4 character DRGs                           *
.*        V5.07.00  10/05/99 J.Tan                                         *
.*                  Ported to 5.07                                         *
.*        V6.06.01  16/04/1999  Steve Armstrong                            *
.*                  Recompiled for PATFNDKY/PATIOFND                       *
.*        V6.06.00  10/02/1999  Jill Habasque                              *
.*                  Fixed DISPHEAD display                                 *
.***************************************************************************
.*        V6.05.01  30/10/1998  J.Tan   SRF 628244                         *
.*                  Added a new option to print new/current files          *
.*        V6.05.B01 11/06/1998  Steve Armstrong                            *
.*                  Recompiled for change in DRG from 3 to 4 chars.        *
.***************************************************************************
.*       V6.04.03   13/05/1998  Davin  SRF 622750 (Rebound)                *
.*                  Changes to PATITMKY                                    *
.*       V6.04.02   22/04/98 J.Tan  SRF 622750                             *
.*                  Recompiled PATITMKY - Fixed ? option on theatre fee for*
.*                  exclusion list item                                    *
.*       V6.04.01   11/03/1998  Davin  SRF 622758                          *
.*                  Mods to print report correct theatre fees              *
.*                                                                         *
.***************************************************************************
          INC       STD001FD
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       PATCMXVR/INC
          INC       PMSCIDFD/INC
.
          INC       PATCMXFD/INC            * casemix effective file
          INC       PATLSDFD/INC            * Lumpsum
          INC       PATASDFD/INC            * Additional charges
.
          INC       PATHLFFD/INC            * Lumpsum (MSO)
          INC       PATLDFFD/INC            * Low outliers
          INC       PATHDFFD/INC            * High outliers
          INC       PATAFEFD/INC            * Additional fee
          INC       PATCTFFD/INC            * Casemis theatre fee
.
          INC       PATFN1FD/INC
          INC       PATCODFD/INC
          INC       PATDGWFD/INC
          INC       PATITMFD/INC
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
+
.**********************************************************************
.*                       GLOBAL VARIABLES                             *
.**********************************************************************
.
AMBS      DIM       9
ACLAIM    DIM       3
AFUNDH    DIM       6
.
BANDTOT   FORM      8.2[16][99]
BCOUNT    FORM      2
BEDTYPE   DIM       3
BNDNUM    FORM      2
.
CONTRCID  DIM       6
CFEETYP   FORM      1
COLNUM    FORM      2
COUNT     FORM      2
CLMFLG    FORM      1
CODE      DIM       2
CMXFLG    FORM      1
CMDLINE   DIM       120
CODECL    INIT      "CL"
.
DIM7      DIM       7
DIM11     DIM       11                                                 *I-48938
DIM15     DIM       15
DIM17     DIM       17
DIM15A    DIM       15
DIM32     DIM       32
DRGFLG    FORM      1
DRGVERZ   DIM       3                                                 *I-137125
DES1      DIM       11[99]
DES2      DIM       11[99]
DTYP      DIM       1[99]
.
CASEDIM   DIM       1
CASETYPE  FORM      1
ENDCLM    DIM       3
ENDFND    DIM       6
ENDTAB    DIM       3
EDAY      DIM       4[99]  
ENDDAY    DIM       4
.
FNAMEA    DIM       8
FNDFLG    FORM      1
FOPTION   FORM      1
FORM3     FORM      3
.
HDECLM    DIM       5
HDEFND    DIM       5
HDETAB    DIM       5
HDSCLM    DIM       5
HDSFND    DIM       5
HDSTAB    DIM       5
HDEDESC   DIM       30
HDIDESC   DIM       30
HDTDESC   DIM       30
HEADFLG   FORM      1
.
PTCNIDES  FORM      1
PTCNDGPV  DIM       3                                                 *I-137125
RANGE     FORM      1
RPOR      FORM      8.2[99]
PPOR      FORM      8.2[99]
PRTFLG    FORM      1
MBSFLG    FORM      1
MDRFLG    FORM      1
SAVBND    FORM      2
SAVCASEM  FORM      1
SAVSEQ    FORM      2
STRCLM    DIM       3
STRFND    DIM       6
STRTAB    DIM       3
SEQNUM    FORM      2
STRCOL    FORM      2
STRDAY    DIM       4
SDIM17    DIM       17
SDIM32    DIM       32
.
THCFLG    FORM      2
TABFLG    FORM      1
.
INLIER    INIT      "Inlier "
OUTLIER   INIT      "Outlier"
ISERASE   INIT      "iserase "
ISBUILD   INIT      "isbuild "
ZERO8     INIT      "0000    "
.
TEMPA     IFILE SQL, FIXED=50, KEY="U1-3,4-9,10-12,13-21,22-22"
KEYA      INIT      " 50 U1-3,4-9,10-12,13-21,22-22"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
XXCLMN    DIM       3           3           1       Claim Code
XXHFND    DIM       6           6           4       Health fund
XXTABT    DIM       3           3          10       Table type
XXCASM    DIM       9           9          13       Casemix code
XXDCAS    DIM       1           1          22       Daycase 0=No 1=Yes
XXFXED    FORM      1           2          23       Fixed Charge indicator
XXADDS    FORM      1           2          25       Additional charge indicator
XXLOWS    FORM      1           2          27       Low outliers indicator
XXHIGH    FORM      1           2          29       High outliers indicator
XXSPAR    DIM      19          19          31       Spare
.EOR                                       50       End of record
.
PRGNAM    INIT      "Contract Agreement Register"
PRGID     INIT      "IBAADT31"
VERSION   INIT      "V12.00.00"
+
.**********************************************************************
.*                           MAINLINE                                 *
.*                       Controlling Logic                            *
.**********************************************************************
ML0000    CALL      INIT0000            * initialization
.                                       * open files
.                                       * display header
.
ML1000    CALL      OFIL0000            * Open Current/New files
          BRANCH    EXIT,ML9999,ML1000
.
          CALL      OPTN0000            * choose accom. or theatre fees
          BRANCH    EXIT,ML1000
.
ML1500    CALL      DSCR0000            * display screen options
.
          CALL      KRCL0000            * Keyin range of claim code
          BRANCH    EXIT,ML9999
.
          CALL      KRFN0000            * Keyin range of health fund
          BRANCH    EXIT,ML9999
.
          CALL      KTYP0000            * Keyin episode type
          BRANCH    EXIT,ML9999
.
ML2000    CALL      KRCM0000            * Keyin casemix code
          BRANCH    EXIT,ML9999
.
          CALL      CNID0000            * Keyin Contract ID
          BRANCH    EXIT,ML9999
.
ML2400    CALL      CONTQST             * OK to continue ?
          BRANCH    CEXIT,ML3000,ML1500,ML1000
          BEEP
          GOTO      ML2400
.
ML3000    CALL      LOAD0000            * Loading data
          CALL      PRIN0000            * print all details
          CALL      KILA0000            * Kill tempfile
          GOTO      ML1000
.
ML9999    CHAIN     PGM
+
.**********************************************************************
.*                           INIT0000                                 *
.*               Open files and display header                        *
.**********************************************************************
INIT0000  CALL      DISPHEAD
          DISPLAY   *P50:24,"Opening ":
                    *P60:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patcmxaf";
          OPEN      PATCMXA2,"patcmxaf"
.
          DISPLAY   *P64:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"patdgwaf";
          OPEN      PATDGWA1,"patdgwaf"
.
          DISPLAY   *P64:24,"patitemn";
          OPEN      PATITEM1,"patitemn"
.
          DISPLAY   *P64:24,"pmscidaf";
          OPEN      PMSCIDA1,"pmscidaf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          MOVE      SP70,XXSPAR
          READ      CONTROLF,TEN9;*212,CFEETYP
          READ      CONTROLF,TWENTY1;*44,PTCNIDES
          READ      CONTROLF,HUND05;*158,PTCNDGPV                     *I-137125
          MOVE      PTCNDGPV,DRGVERZ
.
INIT9999  RETURN
+
.******************************************************************************
.*                                  OFIL0000              Called by: ML0000   *
.*                            Choose New/Current file                         *
.******************************************************************************
OFIL0000  MOVE      ZERO,EXIT
          MOVE      ZERO,OPTION
          CALL      DISPHEAD
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = Current File ":
                    *P1:7,"Select Option : ";
OFIL1000  KEYIN     *P17:7,*V2LON,DIM1;
.
          MOVE      DIM1,OPTION
          COMPARE   ZERO,OPTION
          GOTO      OFIL9500 IF EQUAL
.
          BRANCH    OPTION,OFIL2000
          BEEP
          GOTO      OFIL1000
.
.         Open current files
.
OFIL2000  OPEN      PATLSDA1,"patlsdaf"
          OPEN      PATASDA1,"patasdaf"
          OPEN      PATHLFA1,"pathlfaf"
          OPEN      PATLDFA1,"patldfaf"
          OPEN      PATHDFA1,"pathdfaf"
          OPEN      PATAFEA1,"patafeaf"
          OPEN      PATCTFA1,"patctfaf"
          OPEN      PATCTFA2,"patctfaf"
.
          GOTO      OFIL9999
.
OFIL9500  MOVE      ONE,EXIT
.
OFIL9999  RETURN
+
.******************************************************************************
.*                                  OPTN0000              Called by: ML0000   *
.*                            Choose Print Option                             *
.******************************************************************************
OPTN0000  MOVE      ZERO,OPTION
          MOVE      ZERO,EXIT
          DISPLAY   *P1:12,*V2LON,"0",*HOFF," = Exit":
                    *P1:13,*V2LON,"1",*HOFF," = Print Accommodation Charges":
                    *P1:14,*V2LON,"2",*HOFF," = Print Theatre Fees":
                    *P1:16,"Select Option : ";
OPTN1000  KEYIN     *P17:16,*V2LON,DIM1;
.
          MOVE      DIM1,OPTION
          COMPARE   ZERO,OPTION
          GOTO      OPTN9500 IF EQUAL
.
          COMPARE   ONE,OPTION
          IF  @EQUAL
            MOVE "Accommodation Charges",HDTDESC
           ELSE
            MOVE "Theatre Fees         ",HDTDESC
          ENDIF
.
          BRANCH    OPTION,OPTN9999,OPTN9999
          BEEP
          GOTO      OPTN1000
.
OPTN9500  MOVE      ONE,EXIT
OPTN9999  RETURN
+
.**********************************************************************
.*                             DSCR0000                               *
.*                Display screen option                               *
.**********************************************************************
DSCR0000  DISPLAY    *P1:4,*EF,"From Claim Code       :":
                         *P1:5,"To   Claim Code       :":
                         *P1:7,"From Health Fund      :":
                         *P1:8,"To   Health Fund      :":
                        *P1:10,"From Health Fund Type :":
                        *P1:11,"To   Health Fund Type :":
                        *P1:13,"Episode Type          :":
                        *P1:15,"Casemix Code          :":
                        *P1:17,"Contract ID           :":
                        *P40:23,*V2LON,EXITCHAR,*HOFF," - to exit ";
DSCR9999  RETURN
+
.**********************************************************************
.*                             KRCL0000                               *
.*                keyin range of claim codes                          *
.**********************************************************************
KRCL0000  MOVE      ZERO,EXIT
          MOVE      ZERO,CLMFLG
          MOVE      SP20,STRCLM
          MOVE      SP20,ENDCLM
.
          MOVE      "4",EVERT
          MOVE      "25",ECOL               * keyin position
          MOVE      "32",ECOL1              * Display description position
          MOVE      SP10,STRCLM
          MOVE      SP3,ACODE
          MOVE      "CL",CODE
          CALL      PATCODKY                * keyin start of claim code
          BRANCH    EXIT,KRCL1000,KRCL9000  * Nothing,exit entered
          MOVE      ACODE,STRCLM  
          MOVE      ACODE,HDSCLM
          DISPLAY   *PECOL1:EVERT,*V2LON,TDESC;
          GOTO      KRCL5000
.
KRCL1000  DISPLAY   *PECOL:EVERT,*V2LON,"Start",*HOFF;
          MOVE      "Start",HDSCLM
          MOVE      ZERO,EXIT
.
KRCL5000  MOVE      "5",EVERT
          MOVE      SP10,ENDCLM
          MOVE      SP3,ACODE
          CALL      PATCODKY                * keyin end of claim code
          BRANCH    EXIT,KRCL6000,KRCL9000  * Nothing,exit entered
          MOVE      ACODE,ENDCLM  
          MOVE      ACODE,HDECLM
          DISPLAY   *PECOL1:EVERT,*V2LON,TDESC;
          GOTO      KRCL9999
.
KRCL6000  MOVE      "~~~",ENDCLM
          DISPLAY   *PECOL:EVERT,*V2LON,"End";
          MOVE      "End",HDECLM
          MOVE      ZERO,EXIT
.
          MATCH     SP3,STRCLM
          IF        @EQUAL
            MOVE      ONE,CLMFLG            * Flag for all
          ENDIF
          GOTO      KRCL9999
.
KRCL9000  MOVE      ONE,EXIT
KRCL9999  RETURN
+
.**********************************************************************
.*                             KRFN0000                               *
.*                keyin range of health fund                          *
.**********************************************************************
KRFN0000  MOVE      ZERO,EXIT
          MOVE      ZERO,FNDFLG
          MOVE      SP20,STRFND
          MOVE      SP20,ENDFND
.
          MOVE      ZERO,TABFLG
          MOVE      SP20,STRTAB
          MOVE      SP20,ENDTAB
.
          MOVE      "7",EVERT
          MOVE      "25",ECOL               * keyin position
          MOVE      "32",ECOL1              * Display description position
          MOVE      ZERO,CKYIMAND
          MOVE      SP10,STRFND
          MOVE      SP20,HFNAME
          DISPLAY   *PECOL:EVERT,*EL;
          CALL      PATFNDKY
          BRANCH    EXIT,KRFN1000,KRFN9000  * Nothing,exit entered
          PACK      STRFND,HCODE
          PACK      HDSFND,HCODE
          DISPLAY   *PECOL1:EVERT,*V2LON,HFNAME;
          GOTO      KRFN5000
.
KRFN1000  DISPLAY   *PECOL:EVERT,*V2LON,"Start",*HOFF;
          MOVE      "Start",HDSFND
          MOVE      ZERO,EXIT
.
KRFN5000  MOVE      "8",EVERT
          MOVE      SP10,ENDFND
          MOVE      SP20,HFNAME
          CALL      PATFNDKY
          BRANCH    EXIT,KRFN6000,KRFN9000  * Nothing,exit entered
          PACK      ENDFND,HCODE
          PACK      HDEFND,HCODE
          DISPLAY   *PECOL1:EVERT,*V2LON,HFNAME;
          GOTO      KRFN8000
.
KRFN6000  MOVE      "~~~~~~",ENDFND
          DISPLAY   *PECOL:EVERT,*V2LON,"End";
          MOVE      "End",HDEFND
          MOVE      ZERO,EXIT
          MATCH     SP6,STRFND
          IF        @EQUAL
            MOVE      ONE,FNDFLG            * Flag for all
            DISPLAY   *P25:10,*V2LON,"Start",*HOFF:
                      *P25:11,*V2LON,"End",*HOFF;
            MOVE      ONE,TABFLG            * flag for all
            MOVE      "Start",HDSTAB
            MOVE      "End",HDETAB
            GOTO      KRFN9999
          ENDIF
.
KRFN8000  CALL      KRTB0000                * Keyin range of table type
          GOTO      KRFN9999
.
KRFN9000  MOVE      ONE,EXIT
KRFN9999  RETURN
+
.**********************************************************************
.*                             KRTB0000                               *
.*                keyin range of health fund table type               *
.**********************************************************************
KRTB0000  MOVE      ZERO,EXIT
.
          MOVE      "10",EVERT
          MOVE      "25",ECOL               * keyin position
          MOVE      "32",ECOL1              * Display description position
          MOVE      SP3,STRTAB
          MOVE      SP3,ACODE
          MOVE      "HT",CODE
          CALL      PATCODKY                * keyin code
          BRANCH    EXIT,KRTB1000,KRTB9000  * Nothing,exit entered
          MOVE      ACODE,STRTAB  
          MOVE      ACODE,HDSTAB
          GOTO      KRTB5000
.
KRTB1000  DISPLAY   *PECOL:EVERT,*V2LON,"Start",*HOFF;
          MOVE      "Start",HDSTAB
          MOVE      ZERO,EXIT
.
KRTB5000  MOVE      "11",EVERT
          MOVE      SP3,ENDTAB
          MOVE      SP3,ACODE
          CALL      PATCODKY                * keyin code
          BRANCH    EXIT,KRTB6000,KRTB9000  * Nothing,exit entered
          MOVE      ACODE,ENDTAB  
          MOVE      ACODE,HDETAB
          GOTO      KRTB9999
.
KRTB6000  DISPLAY   *PECOL:EVERT,*V2LON,"End",*HOFF;
          MOVE      "End",HDETAB
          MOVE      "~~~",ENDTAB
          MATCH     SP3,STRTAB
          IF        @EQUAL
            MOVE      ONE,TABFLG            * flag for all
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KRTB9999
.
KRTB9000  MOVE      ONE,EXIT
KRTB9999  RETURN
+
.**********************************************************************
.*                             KRCM0000                               *
.*                keyin Casemix codes                                 *
.**********************************************************************
KRCM0000  MOVE      ZERO,EXIT
          MOVE      SP20,CMXCODE
          MOVE      ZERO,CMXFLG
          MOVE      ZERO,DRGFLG
          MOVE      ZERO,MBSFLG
          DISPLAY   *P1:20,*EF;
          BOX       1,40,19,65,23
          DISPLAY   *P45:20,*V2LON,ZERO,*HOFF," - All ":
                    *P45:21,*V2LON,ONE,*HOFF," - DRG ":
                    *P45:22,*V2LON,TWO,*HOFF," - MBS ";
.
          MOVE      ZERO,FORM1
          KEYIN     *P25:15,*V2LON,FORM1;
          MOVE      FORM1,SAVCASEM               * save choice
.
          COMPARE   ZERO,FORM1
          GOTO      KRCM0200 IF NOT EQUAL
          MOVE      ONE,CMXFLG             * flag for all
          MOVE      ONE,MBSFLG
          MOVE      ONE,DRGFLG
          DISPLAY   *P25:15,*EL,*V2LON,"All",*P16:16,*EL:
                    *P1:19,*EF;
          MOVE      "All Codes",HDIDESC
          GOTO      KRCM9999
.
KRCM0200  BRANCH    FORM1,KRCM1000,KRCM1200
          BEEP
          GOTO      KRCM0000
.
KRCM1000  DISPLAY   *P35:15,*EL,*V2LON,"DRG";    
          GOTO      KRCM2000
.
KRCM1200  DISPLAY   *P35:15,*EL,*V2LON,"MBS";    
.
KRCM2000  COMPARE   TWO,OPTION              * don't key in code
          GOTO      KRCM3000 IF EQUAL
.
          DISPLAY   *P1:19,*EF;
          MOVE      "15",EVERT
          MOVE      "25",ECOL               * keyin position
          MOVE      "35",ECOL1              * Display description position
          CALL      KCMX0000                * keyin code
          BRANCH    EXIT,KRCM9000,KRCM9999  * exit entered,Nothing
          GOTO      KRCM9999
.
KRCM3000  IF        FORM1 = 1
            MOVE      ONE,DRGFLG
          ELSE
            IF        FORM1= 2
              MOVE      ONE,MBSFLG
            ENDIF
          ENDIF
          GOTO      KRCM9999
.
KRCM9000  MOVE      ONE,EXIT
KRCM9999  RETURN
+
.**********************************************************************
.*                             KCMX0000                               *
.*                Keyin Casemix Code                                  *
.*                FORM1 = 1 for DRG , FORM1 = 2 for MBS               *
.**********************************************************************
KCMX0000  BRANCH    FORM1,KCMX1000,KCMX2000
.
.         Keyin DRG Code
.
KCMX1000  MOVE      SP10,DRGCODE
          COMPARE   TWO,OPTION
          GOTO      KCMX1200 IF EQUAL
.
          KEYIN     *PECOL:EVERT,*V2LON,DRGCODE
          RESET     DRGCODE
          GOTO      KCMX1200 IF EOS
.
          ENDSET    DRGCODE
          APPEND    SP10,DRGCODE
          RESET     DRGCODE
.
          CMATCH    EXITCHAR,DRGCODE        * exit char.entered ?
          GOTO      KCMX9500 IF EQUAL
.
          MATCH     SP4,DRGCODE
          GOTO      KCMX9999 IF EQUAL
          PACK      KEY7,DRGCODE,DRGVERZ,SP20                         *I-137125
          CALL      RDPTDGW1
          BRANCH    OVRCD,KCMX1400
          DISPLAY   *PECOL1:EVERT,*V2LON,PTDWDESC
          MOVE      PTDWDESC,HDIDESC
          PACK      CMXCODE,DRGCODE,SP20
          GOTO      KCMX9999
.
KCMX1200  DISPLAY   *PECOL:EVERT,*EL,*V2LON,"All DRG Codes",*HOFF;
          MOVE      "All DRG Codes",HDIDESC
          MOVE      ONE,DRGFLG              * Flag for all DRG
          MOVE      TWO,EXIT
          GOTO      KCMX9999
.
KCMX1400  DISPLAY   *P1:24,*EL,*B,*V2LON,"** Invalid DRG Code ** ";
          CALL      HITENTER
          GOTO      KCMX0000
.
.         Keyin MBS Code
.
KCMX2000  MOVE      ZERO,CKYIMAND
          MOVE      SP10,AMBS
          COMPARE   TWO,OPTION
          GOTO      KCMX2200 IF EQUAL
.
          CALL      PATITMKY
          BRANCH    EXIT,KCMX2200,KCMX9500
          DISPLAY   *PECOL1:EVERT,*V2LON,IDESC
          MOVE      IDESC,HDIDESC
          PACK      CMXCODE,AMBS,SP20
          GOTO      KCMX9999
.
KCMX2200  DISPLAY   *PECOL:EVERT,*V2LON,*EL,"All MBS Codes",*HOFF;
          MOVE      "All MBS Codes",HDIDESC
          MOVE      ONE,MBSFLG              * Flag for all MBS
          MOVE      TWO,EXIT
          GOTO      KCMX9999
.
KCMX9500  MOVE      ONE,EXIT
KCMX9999  RETURN
+
.******************************************************************************
.*                                 CNID0000              Called By : ML0000   *
.*                          Select Contract ID                                *
.******************************************************************************
CNID0000  MOVE      SP6,CONTRCID
          KEYIN     *P25:17,*EL,*V2LON,CONTRCID
          ENDSET    CONTRCID
          APPEND    SP70,CONTRCID
          RESET     CONTRCID
          MATCH     EXITCHAR,CONTRCID
          GOTO      CNID9800 IF EQUAL
.
          PACK      KEY6,CONTRCID,SP70
          CALL      RDPMCID1
          BRANCH    OVRCD,CNID9000
.
          MOVE      ZERO,EXIT
          GOTO      CNID9999
.
CNID9000  DISPLAY   *P1:24,*EL,*B,"Invalid Contract ID. ";
          CALL      HITENTER
          GOTO      CNID0000
.
CNID9800  MOVE      ONE,EXIT
CNID9999  RETURN
+
.**********************************************************************
.*                             KTYP0000                               *
.*                        keyin Episode Type                          *
.**********************************************************************
KTYP0000  MOVE       ZERO,EXIT
          MOVE       "13",EVERT
          BOX        1,40,19,65,23
          DISPLAY    *P45:20,*V2LON,ZERO,*HOFF," - Overnight":
                     *P45:21,*V2LON,ONE,*HOFF," - Day Case ";
.
          MOVE      SP1,CASEDIM 
          KEYIN     *PECOL:EVERT,*EL,*V2LON,CASEDIM;
.
          MATCH     "0",CASEDIM
          IF        @EQUAL
            MOVE      ZERO,CASETYPE
            GOTO      KTYP1000
          ENDIF
.
          MATCH     "1",CASEDIM
          IF        @EQUAL
            MOVE      ONE,CASETYPE
            GOTO      KTYP1000
          ENDIF
.
          BEEP
          GOTO      KTYP0000
.
KTYP1000  IF        CASETYPE = 1
            DISPLAY   *PECOL:EVERT,*V2LON,*EL,"Day Case";
            MOVE      "Day Cases",HDEDESC
          ELSE
            DISPLAY   *PECOL:EVERT,*V2LON,*EL,"Overnight";
            MOVE      "Overnight Cases",HDEDESC
          ENDIF
          GOTO      KTYP9999
.
KTYP9000  DISPLAY   *P1:24,*EL,*V2LON,*B,"** Invalid Case Type ** ";
          CALL      HITENTER
          GOTO      KTYP0000
.
KTYP9999  RETURN
+
.**********************************************************************
.*                             LOAD0000                               *
.*                Read file and load all details                      *
.**********************************************************************
LOAD0000  MOVE       "58",CLNO
          CALL       CREA0000               * Create tempfile
.
          DISPLAY    *P1:24,*EL,"Loading ...";
.
          PACK      KEY33,CONTRCID,SP70
.
.         Check if a selected claim code only
.
          IF        CLMFLG = 0
            IF        FNDFLG = 0
              PACK      KEY33,CONTRCID,STRCLM,STRFND,SP20 * position on claim,hf
            ELSE
              PACK      KEY33,CONTRCID,STRCLM,SP20        * position on claim
            ENDIF
          ENDIF
.
          CALL      RSPTCMX2
LOAD1000  CALL      RKPTCMX2
          BRANCH    OVRCD,LOAD9999
.
          DISPLAY   *P20:24,*V2LON,PTCMCLMN,PTCMHFND,PTCMCASM,XXDCAS;
.
          MATCH     CONTRCID,PTCMCNID        * Check Contract ID
          GOTO      LOAD9999 IF NOT EQUAL
.
          IF        CLMFLG = 0
            MATCH     STRCLM,PTCMCLMN        * Check with start of claim code
            GOTO      LOAD1000 IF LESS
.
            MATCH     PTCMCLMN,ENDCLM        * Check with end of claim code
            GOTO      LOAD9999 IF LESS
          ENDIF
.
          IF        FNDFLG = 0
            MATCH     STRFND,PTCMHFND        * Check with start of health fund
            GOTO      LOAD1000 IF LESS
.
            MATCH     PTCMHFND,ENDFND        * Check with end of health fund
            GOTO      LOAD1000 IF LESS
          ENDIF
.
          IF        CMXFLG = 0
            UNPACK    SP10,KEY4,KEY5
            UNPACK    PTCMCASM,KEY4,KEY5
            IF        DRGFLG = 1
              MATCH     SP5,KEY5             * all DRG code was selected
              GOTO      LOAD2000 IF EQUAL    * must be DRG code
              GOTO      LOAD1000             * not DRG code
            ELSE
              IF        MBSFLG = 1
                MATCH     SP5,KEY5           * all MBS code was selected
                GOTO      LOAD2000 IF NOT EQUAL  * must be MBS code
                GOTO      LOAD1000           * not MBS code
              ENDIF
            ENDIF
.
            MATCH     PTCMCASM,CMXCODE     * check with the selected DRG/MBS
            GOTO      LOAD1000 IF NOT EQUAL
          ENDIF
.
LOAD2000  IF        CASETYPE = 1
            CALL      LCAS0000              * Load day case
          ELSE
            CALL      LMSO0000              * Load MSO
          ENDIF
          GOTO      LOAD1000
.
LOAD9999  RETURN
+
.******************************************************************************
.         LCAS0000 - Load daycase
.******************************************************************************
LCAS0000
.         Check the Fixed charge file
.
          PACK      KEY27,PTCMCNID,PTCMCLMN,PTCMHFND,SP20,SP10
          CALL      RSPTLSD1
LCAS1200  CALL      RKPTLSD1
          BRANCH    OVRCD,LCAS2000
.
          MATCH     PTCMCNID,PTLSCNID       * Check contract id
          GOTO      LCAS2000 IF NOT EQUAL
.
          MATCH     PTCMCLMN,PTLSCLMN       * Check claim code
          GOTO      LCAS2000 IF NOT EQUAL
.
          MATCH     PTCMHFND,PTLSHFND       * Check health fund
          GOTO      LCAS2000 IF NOT EQUAL
.
          MATCH     PTCMCASM,PTLSCASM       * check with the selected casemix
          GOTO      LCAS1200 IF NOT EQUAL
.
          IF        TABFLG = 0
            MATCH     STRTAB,PTLSTABT       * Check range of table types
            GOTO      LCAS1200 IF LESS
            MATCH     PTLSTABT,ENDTAB
            GOTO      LCAS1200 IF LESS
          ENDIF
.
          MOVE      "1",XXDCAS
          PACK      KEY22,PTLSCLMN,PTLSHFND,PTLSTABT,PTLSCASM,XXDCAS
          CALL      RDTEMPA
          IF        OVRCD = 1
            CALL      CIND0000              * Clear all indicators
            MOVE      ONE,XXFXED            * set fixed charge indicator
            CALL      WRTEMPA
          ELSE
            MOVE      ONE,XXFXED            * set fixed charge indicator
            CALL      UPTEMPA
          ENDIF
.
          BRANCH    TABFLG,LCAS1200         * get next table type
.
.         Check the additional charge file
.
LCAS2000  PACK      KEY30,PTCMCNID,PTCMCLMN,PTCMHFND,SP20,SP10
          CALL      RSPTASD1
LCAS2200  CALL      RKPTASD1
          BRANCH    OVRCD,LCAS9999
.
          MATCH     PTCMCNID,PTADCNID       * Check Contract Id
          GOTO      LCAS9999 IF NOT EQUAL
.
          MATCH     PTCMCLMN,PTADCLMN       * Check claim code
          GOTO      LCAS9999 IF NOT EQUAL
.
          MATCH     PTCMHFND,PTADHFND       * Check health fund
          GOTO      LCAS9999 IF NOT EQUAL
.
          MATCH     PTCMCASM,PTADCASM       * check with the selected casemix
          GOTO      LCAS2200 IF NOT EQUAL
.
          IF        TABFLG = 0
            MATCH     STRTAB,PTADTABT       * Check range of table types
            GOTO      LCAS2200 IF LESS
            MATCH     PTADTABT,ENDTAB
            GOTO      LCAS2200 IF LESS
          ENDIF
.
          MOVE      "1",XXDCAS
          PACK      KEY22,PTADCLMN,PTADHFND,PTADTABT,PTADCASM,XXDCAS
          CALL      RDTEMPA
          IF        OVRCD = 1
            CALL      CIND0000                * Clear all indicators
            MOVE      ONE,XXADDS              * set additional indicator
            CALL      WRTEMPA
          ELSE
            MOVE      ONE,XXADDS              * set additional indicator
            CALL      UPTEMPA
          ENDIF
          BRANCH    TABFLG,LCAS2200           * get next table type
.
LCAS9999  RETURN
+
.******************************************************************************
.         LMSO0000 - Load MSO
.******************************************************************************
LMSO0000  
.         Check the fixed charge file
.
          PACK      KEY27,PTCMCNID,PTCMCLMN,PTCMHFND,SP10,SP20
          CALL      RSPTHLF1
LMSO1200  CALL      RKPTHLF1
          BRANCH    OVRCD,LMSO2000
.
          MATCH     PTCMCNID,PTHLCNID       * Check Contract ID
          GOTO      LMSO2000 IF NOT EQUAL
.
          MATCH     PTCMCLMN,PTHLCLMN       * Check claim code
          GOTO      LMSO2000 IF NOT EQUAL
.
          MATCH     PTCMHFND,PTHLHFND       * Check health fund
          GOTO      LMSO2000 IF NOT EQUAL
.
          MATCH     PTCMCASM,PTHLCASM   * check with the selected casemix
          GOTO      LMSO1200 IF NOT EQUAL
.
          IF        TABFLG = 0
            MATCH     STRTAB,PTHLTABT       * Check range of table types
            GOTO      LMSO1200 IF LESS
            MATCH     PTHLTABT,ENDTAB
            GOTO      LMSO1200 IF LESS
          ENDIF
.
          MOVE      "0",XXDCAS
          PACK      KEY22,PTHLCLMN,PTHLHFND,PTHLTABT,PTHLCASM,XXDCAS
          CALL      RDTEMPA
          IF        OVRCD = 1
            CALL      CIND0000                * Clear all indicators
            MOVE      ONE,XXFXED              * set fixed charge indicator
            CALL      WRTEMPA
          ELSE
            MOVE      ONE,XXFXED              * set fixed charge indicator
            CALL      UPTEMPA
          ENDIF
          GOTO      LMSO1200                * Next record
.
.         Check the low outliers charge file
.
LMSO2000  PACK      KEY31,PTCMCNID,PTCMCLMN,PTCMHFND,SP20,SP10
          CALL      RSPTLDF1
LMSO2200  CALL      RKPTLDF1
          BRANCH    OVRCD,LMSO3000
.
          MATCH     PTCMCNID,PTLDCNID       * Check Contract Id
          GOTO      LMSO3000 IF NOT EQUAL
.
          MATCH     PTCMCLMN,PTLDCLMN       * Check claim code
          GOTO      LMSO3000 IF NOT EQUAL
.
          MATCH     PTCMHFND,PTLDHFND       * Check health fund
          GOTO      LMSO3000 IF NOT EQUAL
.
          MATCH     PTCMCASM,PTLDCASM   * check with the selected casemix
          GOTO      LMSO2200 IF NOT EQUAL
.
          IF        TABFLG = 0
            MATCH     STRTAB,PTLDTABT       * Check range of table types
            GOTO      LMSO2200 IF LESS
            MATCH     PTLDTABT,ENDTAB
            GOTO      LMSO2200 IF LESS
          ENDIF
.
          MOVE      "0",XXDCAS
          PACK      KEY22,PTLDCLMN,PTLDHFND,PTLDTABT,PTLDCASM,XXDCAS
          CALL      RDTEMPA
          IF        OVRCD = 1
            CALL      CIND0000                * Clear all indicators
            MOVE      ONE,XXLOWS              * set low outliers indicator
            CALL      WRTEMPA
          ELSE
            MOVE      ONE,XXLOWS              * set low outliers indicator
            CALL      UPTEMPA
          ENDIF
          GOTO      LMSO2200                * Next record
.
.         Check the high outliers charge file
.
LMSO3000  PACK      KEY31,PTCMCNID,PTCMCLMN,PTCMHFND,SP20,SP10
          CALL      RSPTHDF1
LMSO3200  CALL      RKPTHDF1
          BRANCH    OVRCD,LMSO4000
.
          MATCH     PTCMCNID,PTHDCNID       * Check Contract ID
          GOTO      LMSO4000 IF NOT EQUAL
.
          MATCH     PTCMCLMN,PTHDCLMN       * Check claim code
          GOTO      LMSO4000 IF NOT EQUAL
.
          MATCH     PTCMHFND,PTHDHFND       * Check health fund
          GOTO      LMSO4000 IF NOT EQUAL
.
          MATCH     PTCMCASM,PTHDCASM   * check with the selected casemix
          GOTO      LMSO3200 IF NOT EQUAL
.
          IF        TABFLG = 0
            MATCH     STRTAB,PTHDTABT       * Check range of table types
            GOTO      LMSO3200 IF LESS
            MATCH     PTHDTABT,ENDTAB
            GOTO      LMSO3200 IF LESS
          ENDIF
.
          MOVE      "0",XXDCAS
          PACK      KEY22,PTHDCLMN,PTHDHFND,PTHDTABT,PTHDCASM,XXDCAS
          CALL      RDTEMPA
          IF        OVRCD = 1
            CALL      CIND0000                * Clear all indicators
            MOVE      ONE,XXHIGH              * set high outliers indicator
            CALL      WRTEMPA
          ELSE
            MOVE      ONE,XXHIGH              * set high outliers indicator
            CALL      UPTEMPA
          ENDIF
          GOTO      LMSO3200                * Next record
.
.         Check the additional charge file
.
LMSO4000  PACK      KEY34,PTCMCNID,PTCMCLMN,PTCMHFND,SP20,SP10
          CALL      RSPTAFE1
LMSO4200  CALL      RKPTAFE1
          BRANCH    OVRCD,LMSO9999
.
          MATCH     PTCMCNID,PTFECNID       * Check Contract ID
          GOTO      LMSO9999 IF NOT EQUAL
.
          MATCH     PTCMCLMN,PTFECLMN       * Check claim code
          GOTO      LMSO9999 IF NOT EQUAL
.
          MATCH     PTCMHFND,PTFEHFND       * Check health fund
          GOTO      LMSO9999 IF NOT EQUAL
.
          MATCH     PTCMCASM,PTFECASM   * check with the selected casemix
          GOTO      LMSO4200 IF NOT EQUAL
.
          IF        TABFLG = 0
            MATCH     STRTAB,PTFETABT       * Check range of table types
            GOTO      LMSO4200 IF LESS
            MATCH     PTFETABT,ENDTAB
            GOTO      LMSO4200 IF LESS
          ENDIF
.
          MOVE      "0",XXDCAS
          PACK      KEY22,PTFECLMN,PTFEHFND,PTFETABT,PTFECASM,XXDCAS
          CALL      RDTEMPA
          IF        OVRCD = 1
            CALL      CIND0000                * Clear all indicators
            MOVE      ONE,XXADDS              * set Additional charge indicator
            CALL      WRTEMPA
          ELSE
            MOVE      ONE,XXADDS              * set Additional charge indicator
            CALL      UPTEMPA
          ENDIF
          GOTO      LMSO4200                * Next record
.
LMSO9999  RETURN
+
.******************************************************************************
.         PRIN0000 - Print charges
.******************************************************************************
PRIN0000  CALL      HEAD0000
          MOVE      ZERO,PRTFLG
          PACK      KEY22,SP20,SP10
          CALL      RSTEMPA
          CALL      RKTEMPA
          IF        OVRCD=1
            DISPLAY   *P1:24,"No records selected. ";
            CALL      HITENTER
            GOTO      PRIN9000
          ELSE
            GOTO      PRIN1500
          ENDIF
PRIN1000  CALL      RKTEMPA
          BRANCH    OVRCD,PRIN9999
.
PRIN1500  MOVE      ZERO,HEADFLG             * Initialise heading flag
          MOVE      ZERO,CLNO                * Initialise line number
          BRANCH    OPTION,PRIN2000,PRIN3000
.
PRIN2000  MATCH     "1",XXDCAS
          IF        @EQUAL
            CALL      DCAS0000               * Print charges for Daycase
          ELSE
            CALL      DMSO0000               * Print charges for MSO
          ENDIF
          GOTO      PRIN1000
.
PRIN3000
          BRANCH    SAVCASEM,PRIN4000,PRIN5000      * Print theatre fee
.
          CALL      DRTF0000
          CALL      MBTF0000
          GOTO      PRIN9000
.
PRIN4000  CALL      DRTF0000
          GOTO      PRIN9000
.
PRIN5000  CALL      MBTF0000
.
PRIN9000  GOTO      PRIN1000
.
PRIN9999  RETURN
+
.******************************************************************************
.         DCAS0000 - Print charges for day case
.******************************************************************************
DCAS0000  IF        XXFXED = 1
            PACK      KEY27,CONTRCID,XXCLMN,XXHFND,XXTABT,XXCASM
            CALL      RDPTLSD1
            BRANCH    OVRCD,DCAS1000
.
            MOVE      PTLSTABT,XXTABT         * Set table type
            CALL      PCMX0000                * Print casemix heading
            CALL      DFIX0000                * Print daycase fixed charges
          ENDIF
.
DCAS1000  IF        XXADDS = 1
            PACK      KEY30,CONTRCID,XXCLMN,XXHFND,XXTABT,XXCASM,SP10
            CALL      RSPTASD1
DCAS2000    CALL      RKPTASD1
            BRANCH    OVRCD,DCAS9999
.
            MATCH     CONTRCID,PTADCNID       * Check Contract ID
            GOTO      DCAS9999 IF NOT EQUAL
.
            MATCH     XXCLMN,PTADCLMN       * Check claim code
            GOTO      DCAS9999 IF NOT EQUAL
.
            MATCH     XXHFND,PTADHFND       * Check health fund
            GOTO      DCAS9999 IF NOT EQUAL
.
            MATCH     XXTABT,PTADTABT       * Check with the table type
            GOTO      DCAS9999 IF NOT EQUAL
.
            MATCH     XXCASM,PTADCASM       * Check with the casemix cod
            GOTO      DCAS9999 IF NOT EQUAL
.
            MOVE      PTADTABT,XXTABT       * Set table type
            CALL      PCMX0000              * Print casemix heading
            CALL      DADD0000              * Print daycase additional charges
            GOTO      DCAS2000              * next record for different bed type
          ENDIF
.
DCAS9999  RETURN
+
.******************************************************************************
.         DMSO0000 - Print charges for MSO
.******************************************************************************
DMSO0000  CALL      PCMX0000                * Print casemix heading
          IF        XXFXED = 1
            PACK      KEY27,CONTRCID,XXCLMN,XXHFND,XXTABT,XXCASM
            CALL      RDPTHLF1
            BRANCH    OVRCD,DMSO1000
.
            MOVE      PTHLTABT,XXTABT         * Set table type
            CALL      PFIX0000                * Print MSO fixed charges
          ENDIF
.
.         Check if any low outliers data to be printed
.
DMSO1000  IF        XXLOWS = 1
            MOVE      ZERO,SEQNUM
            PACK      KEY31,CONTRCID,XXCLMN,XXHFND,XXTABT,XXCASM,SP10
            CALL      RSPTLDF1
DMSO1200    CALL      RKPTLDF1
            BRANCH    OVRCD,DMSO1400
.
            MATCH     CONTRCID,PTLDCNID       * Check Contract ID
            GOTO      DMSO1400 IF NOT EQUAL
.
            MATCH     XXCLMN,PTLDCLMN       * Check claim code
            GOTO      DMSO1400 IF NOT EQUAL
.
            MATCH     XXHFND,PTLDHFND       * Check health fund
            GOTO      DMSO1400 IF NOT EQUAL
.
            MATCH     XXTABT,PTLDTABT       * Check table type
            GOTO      DMSO1400 IF NOT EQUAL
.
            MATCH     XXCASM,PTLDCASM       * Check casemix code
            GOTO      DMSO1400 IF NOT EQUAL
.
            ADD       ONE,SEQNUM
            MOVE      PTLDEDAY,EDAY[SEQNUM]
            MOVE      PTLDDREB,RPOR[SEQNUM]
            MOVE      PTLDDPAT,PPOR[SEQNUM]
            MOVE      PTLDDES1,DES1[SEQNUM]
            MOVE      PTLDDES2,DES2[SEQNUM]
            GOTO      DMSO1200
.
DMSO1400    IF        SEQNUM <> 0
              MOVE      ONE,PRTFLG          * Set to print low outliers
              CALL      PDAT0000            * Print data
            ENDIF
          ENDIF
.
.         Check if any high outliers data to be printed
.
DMS02000  IF        XXHIGH = 1
            MOVE      ZERO,SEQNUM
            PACK      KEY31,CONTRCID,XXCLMN,XXHFND,XXTABT,XXCASM,SP10
            CALL      RSPTHDF1
DMSO2200    CALL      RKPTHDF1
            BRANCH    OVRCD,DMSO2400
.
            MATCH     CONTRCID,PTHDCNID       * Check Contract ID
            GOTO      DMSO2400 IF NOT EQUAL
.
            MATCH     XXCLMN,PTHDCLMN       * Check claim code
            GOTO      DMSO2400 IF NOT EQUAL
.
            MATCH     XXHFND,PTHDHFND       * Check health fund
            GOTO      DMSO2400 IF NOT EQUAL
.
            MATCH     XXTABT,PTHDTABT       * Check table type
            GOTO      DMSO2400 IF NOT EQUAL
.
            MATCH     XXCASM,PTHDCASM       * Check casemix code
            GOTO      DMSO2400 IF NOT EQUAL
.
            ADD       ONE,SEQNUM
            MOVE      PTHDEDAY,EDAY[SEQNUM]
            MOVE      PTHDDTYP,DTYP[SEQNUM]
            MOVE      PTHDDREB,RPOR[SEQNUM]
            MOVE      PTHDDPAT,PPOR[SEQNUM]
            MOVE      PTHDDES1,DES1[SEQNUM]
            MOVE      PTHDDES2,DES2[SEQNUM]
            GOTO      DMSO2200
.
DMSO2400    IF        SEQNUM <> 0
              MOVE      TWO,PRTFLG            * Set to print high outliers
              CALL      PDAT0000              * Print data
            ENDIF
          ENDIF
.
.         Check if any additional charges data to be printed
.
DMSO3000  IF        XXADDS = 1
            MOVE      ZERO,SEQNUM
            MOVE      SP10,BEDTYPE
            PACK      KEY34,CONTRCID,XXCLMN,XXHFND,XXTABT,XXCASM,SP10
            CALL      RSPTAFE1
DMSO3200    CALL      RKPTAFE1
            BRANCH    OVRCD,DMSO3600
.
            MATCH     CONTRCID,PTFECNID       * Check Contract ID
            GOTO      DMSO3600 IF NOT EQUAL
.
            MATCH     XXCLMN,PTFECLMN       * Check claim code
            GOTO      DMSO3600 IF NOT EQUAL
.
            MATCH     XXHFND,PTFEHFND       * Check health fund
            GOTO      DMSO3600 IF NOT EQUAL
.
            MATCH     XXTABT,PTFETABT       * Check table type
            GOTO      DMSO3600 IF NOT EQUAL
.
            MATCH     XXCASM,PTFECASM       * Check casemix code
            GOTO      DMSO3600 IF NOT EQUAL
.
            MATCH     PTFEBTYP,BEDTYPE      * Check bed type
            GOTO      DMSO3400 IF EQUAL
.
            MATCH     SP3,BEDTYPE           * First time ?
            IF        !@EQUAL
              IF        SEQNUM <> 0
                MOVE      ZERO,PRTFLG         * Set to print additional charge
                CALL      PDAT0000            * Print data
              ENDIF
            ENDIF
.
            MOVE      PTFEBTYP,BEDTYPE      * Save bed type
            MOVE      ZERO,SEQNUM
.
DMSO3400    ADD       ONE,SEQNUM
            MOVE      PTFEEDAY,EDAY[SEQNUM]
            MOVE      PTFEDREB,RPOR[SEQNUM]
            MOVE      PTFEDPAT,PPOR[SEQNUM]
            MOVE      PTFEDES1,DES1[SEQNUM]
            MOVE      PTFEDES2,DES2[SEQNUM]
            GOTO      DMSO3200
.
DMSO3600    IF        SEQNUM <> 0
              MOVE      ZERO,PRTFLG         * Set to print additional charge
              CALL      PDAT0000            * Print data
            ENDIF
          ENDIF
.
DMSO9999  RETURN
+
.******************************************************************************
.         DRG theatre fees
.******************************************************************************
DRTF0000
          MOVE      ZERO,BNDNUM
          DISPLAY   *P1:24,*EL,"Generating Theatre fees ";
.
DRTF1000  MOVE      ZERO,SEQNUM
          ADD       ONE,BNDNUM
          MOVE      BNDNUM,SAVBND
          PACK      DIM32,CONTRCID,XXCLMN,XXHFND,XXTABT,SP3,XXCASM,XXDCAS,SP20
          PACK      KEY33,DIM32,SP30
          CALL      RSPTCTF2              * Read DRG record (blank MBS)
.
DRTF2000  CALL      RKPTCTF2              * Read DRG records
          BRANCH    OVRCD,DRTF4000
.
          DISPLAY   *P40:24,*EL,*V2LON,PTCTCLMN,PTCTCASM;
.
          PACK      SDIM32,PTCTCNID,PTCTCLMN,PTCTHFND,PTCTTABT:
                           SP3,PTCTCASM,PTCTDCAS,SP30
          MATCH     DIM32,SDIM32
          GOTO      DRTF4000 IF NOT EQUAL
.
DRTF3000  ADD       ONE,SEQNUM
          ASSIGN    PTCTDREB + PTCTDPAT,BANDTOT[BNDNUM][SEQNUM]
.
          IF        SEQNUM = 6
            COMPARE   "16",BNDNUM           * last possible band
            GOTO      DRTF4000 IF EQUAL
.
            MOVE      SEQNUM,SAVSEQ                                    *I-48938
            GOTO      DRTF1000              * get next band
          ELSE
            GOTO      DRTF2000              * get next sequence total
          ENDIF
.
DRTF4000  IF        SEQNUM <> 0
            CALL      PCMX0000
            CALL      PRTF0000              * Print theatre fees
          ENDIF
.
. clear array
.
          MOVE      ZERO,SEQNUM
          MOVE      ONE,BNDNUM
          REPEAT
            ADD       ONE,SEQNUM
            MOVE      ZERO,BANDTOT[BNDNUM][SEQNUM]
          UNTIL     SEQNUM = 5
DRTF9999  RETURN
+
.******************************************************************************
.         MBS theatre fees
.******************************************************************************
MBTF0000
          MOVE      ZERO,BNDNUM
          MOVE      SP2,DIM2
          DISPLAY   *P1:24,*EL,"Generating Theatre fees ";
.
          UNPACK    SP10,KEY4,KEY5
          UNPACK    XXCASM,KEY4,KEY5
          MATCH     SP5,KEY5
          GOTO      MBTF9999 IF EQUAL
.
MBTF1000  MOVE      ZERO,SEQNUM
          ADD       ONE,BNDNUM
          MOVE      BNDNUM,DIM2
          PACK      DIM32,CONTRCID,XXCLMN,XXHFND,XXTABT,SP9,XXDCAS,DIM2,SP30
          PACK      KEY33,DIM32,SP30
          CALL      RSPTCTF1              * Read MBS record (blank DRG)
.
MBTF2000  CALL      RKPTCTF1              * Read MBS records
          BRANCH    OVRCD,MBTF4000
.
          PACK      SDIM32,PTCTCNID,PTCTCLMN,PTCTHFND,PTCTTABT,SP9: 
                           PTCTDCAS,DPTCTITM,SP30                      *I-48938
          MATCH     DIM32,SDIM32
          GOTO      MBTF3000 IF NOT EQUAL
.
          ADD       ONE,SEQNUM
          ASSIGN    PTCTDREB + PTCTDPAT,BANDTOT[BNDNUM][SEQNUM]
.
          MOVE      BNDNUM,SAVBND           * save band number
.
MBTF3000  IF        SEQNUM = 5
            COMPARE   "16",BNDNUM           * last possible band
            GOTO      MBTF4000 IF EQUAL
.
            MOVE      SEQNUM,SAVSEQ         * save sequence number
.
            GOTO      MBTF1000              * get next band
          ELSE
            GOTO      MBTF2000              * get next sequence total
          ENDIF
.
MBTF4000  
          COMPARE   ZERO,SEQNUM                                        *I-48938
          GOTO      MBTF9999 IF EQUAL                                  *I-48938
          CALL      PCMX0000                * Print casemix heading
          CALL      PRTF0000                * Print theatre fees
MBTF9999  RETURN
+
.**************************************************************************
.*                               HEAD0000              Called by:         *
.*        Print Main Heading                                              *
.**************************************************************************
HEAD0000  CALL      IBACLOCK
          CALL      HEAD132
          MOVE      ZERO,PRTFLG
          PRINT     *40,"Contract ID       : ",CONTRCID
.
          PRINT     *40,"Claim Code From   : ",HDSCLM:
                        "  To : ",HDECLM;
          PRINT     *N,*1,HDTDESC;
          PRINT     *40,"Health Fund From  : ",HDSFND:
                        "  To : ",HDEFND;
          PRINT     *N,*40,"Fund Type From    : ",HDSTAB:
                        "  To : ",HDETAB ;
          PRINT     *N,*40,"Casemix Code      : ",HDIDESC;
          PRINT     *N,*40,"Episode Type      : ",HDEDESC,*N;
          CALL      UND132
.
HEAD9999  RETURN
+
.******************************************************************************
.         PCMX0000 - Print heading
.******************************************************************************
PCMX0000  BRANCH    HEADFLG,PCMX9999
          MOVE      ZERO,MDRFLG
.
          PACK      KEY5,CODECL,XXCLMN
          CALL      RDCODE1
.
          PRINT     *F,*15,"** CASEMIX CONTRACT AGREEMENT ** ":
                    *N,*N,*1,"Claim Code        : ",XXCLMN,*37,TDESC:
                    *N,*1,"Health Fund       : ",XXHFND:
                      *37,"Table Type : ",XXTABT
.
          MOVE      FOUR,CLNO
.
          MOVE      SP70,KEY30
          MOVE      SP4,KEY4
          MOVE      SP5,KEY5
          UNPACK    XXCASM,KEY4,KEY5
          MATCH     SP5,KEY5
          IF        @EQUAL
            PRINT     *1,"DRG Code          : ",*21,KEY4;
            PACK      KEY7,KEY4,DRGVERZ,SP10                          *C-137125
            CALL      RDPTDGW1
            IF        OVRCD = 0
              PACK      KEY30,PTDWDESC,SP70
              PRINT     *30,KEY30;
            ENDIF
          ELSE
            MOVE      ONE,MDRFLG           * Flag for MBS
            PRINT     *1,"MBS Code          : ",*21,XXCASM;
            PACK      KEY9,XXCASM
            PACK      KEY17,XXCASM,SP70
            CALL      PATITMRD
            IF        OVRCD = 0
              PACK      KEY30,IDESC,SP70
              PRINT     *30,KEY30;
            ENDIF
          ENDIF
          PRINT     *N;
          ADD       ONE,CLNO
.
PCMX2000  PRINT     *1,"Daycase/Overnight : ",*21,XXDCAS;
          MOVE      ZERO,FORM1
          UNPACK    XXDCAS,DIM1
          MOVE      DIM1,FORM1
          IF        FORM1 = 3
            PRINT     *26," - Day Case "
          ELSE
            PRINT     *26," - MSO "
          ENDIF
          ADD       ONE,CLNO
          MOVE      ONE,HEADFLG
          CALL      UND80
PCMX9999  RETURN
+
.******************************************************************************
.         DFIX00000 - Print daycase fixed charges
.******************************************************************************
DFIX0000  COMPARE   "58",CLNO
          CALL      NPAG0000 IF NOT LESS
          PRINT     *1,"Fixed Charge",*1,"Fixed Charge":
                    *N,*1,"------------":
                    *N,*1,"Rebate Portion  : $",PTLSLREB:
                    *N,*1,"Patient Portion : $",PTLSLPAT:
                    *N,*1,"Description     : ",PTLSDES1
.
          ADD       FIVE,CLNO
          IF        PTCNIDES = 1
            PRINT     *19,PTLSDES2
            ADD       ONE,CLNO
          ENDIF
          CALL      UND80
DFIX9999  RETURN
.******************************************************************************
.         DADD0000 - Print daycase additional charges
.******************************************************************************
DADD0000  COMPARE   "58",CLNO
          CALL      NPAG0000 IF NOT LESS
          PRINT     *1,"Additional Charge",*1,"Additional Charge":
                    *19,"(Bed Type - ",PTADBTYP,")":
                    *N,*1,"-----------------":
                    *N,*1,"Rebate Portion  : $",PTADDREB:
                    *N,*1,"Patient Portion : $",PTADDPAT:
                    *N,*1,"Description     : ",PTADDES1
.
          ADD       FIVE,CLNO
          IF        PTCNIDES = 1
            PRINT     *19,PTADDES2
            ADD       ONE,CLNO
          ENDIF
          CALL      UND80
DADD9999  RETURN
+
.******************************************************************************
.         PFIX0000 - Print MSO fixed charges
.******************************************************************************
PFIX0000  COMPARE   "58",CLNO
          CALL      NPAG0000 IF NOT LESS
.
          PRINT    *1,"Fixed Charge",*1,"Fixed Charge":
                    *N,*1,"------------":
                    *N,*1,"Rebate Portion : $",PTHLLREB:
                    *N,*1,"Patient Portion: $",PTHLLPAT:
                    *N,*1,"Description    : ",PTHLDES1
.
          ADD       FIVE,CLNO
          IF        PTCNIDES = 1
             PRINT     *18,PTHLDES2
             ADD       ONE,CLNO
          ENDIF
          CALL      UND80
PFIX9999  RETURN
+
.******************************************************************************
.         PDAT0000 - Print MSO data
.******************************************************************************
PDAT0000  COMPARE   "58",CLNO
          CALL      NPAG0000 IF NOT LESS
.
          IF        PRTFLG = 1
            PRINT     *1,"Low Outliers",*1,"Low Outliers":
                      *N,*1,"------------"
          ELSE
            IF        PRTFLG = 2
              PRINT     *1,"High Outliers",*1,"High Outliers":
                        *N,*1,"-------------"
            ELSE
              PRINT     *1,"Additional Charge",*1,"Additional Charge":
                        *19,"(Bed Type - ",BEDTYPE,")":
                        *N,*1,"-----------------"
            ENDIF
          ENDIF
          ADD       TWO,CLNO
.
          MOVE      ONE,STRCOL
          MOVE      ONE,STRDAY
.
.         Print line for range of days
.
PDAT1000  MOVE      STRCOL,COUNT
          MOVE      ZERO,COLNUM              * number of column
.
PDAT1200  ADD       ONE,COLNUM
          MOVE      EDAY[COUNT],ENDDAY      * restore ending day
          CALL      PEDY0000                * Print endday
          COMPARE   COUNT,SEQNUM            * last record ?
          GOTO      PDAT2000 IF EQUAL
.
          MOVE      ENDDAY,FORM4
          ADD       ONE,FORM4
          MOVE      FORM4,STRDAY            * set next start day
.
          ADD       ONE,COUNT
          COMPARE   FIVE,COLNUM
          GOTO      PDAT1200 IF LESS
.
.         Print line for day type (if require)
.
PDAT2000  COMPARE   TWO,PRTFLG
          GOTO      PDAT3000 IF NOT EQUAL    * Not printing high outliers
.
          MOVE      STRCOL,COUNT
          MOVE      ZERO,COLNUM              * number of column
          MOVE      TEN,EVERT
          PRINT     *N,*1,"DayType: ";
          ADD       ONE,CLNO
.
PDAT2200  ADD       ONE,COLNUM
          MOVE      SP10,DIM7
          MOVE      DTYP[COUNT],FORM1
          LOAD      DIM7,FORM1,INLIER,OUTLIER
          PRINT     *EVERT,DIM7;
.
          COMPARE   COUNT,SEQNUM
          GOTO      PDAT3000 IF EQUAL
.
          ADD       ONE,COUNT
          ADD       "15",EVERT
          COMPARE   FIVE,COLNUM
          GOTO      PDAT2200 IF LESS
.
.         Print line for rebate portion
.
PDAT3000  MOVE      STRCOL,COUNT
          MOVE      ZERO,COLNUM              * number of column
          MOVE      TEN,EVERT
          PRINT     *N,*1,"Rebate : ";
          ADD       ONE,CLNO
.
PDAT3200  ADD       ONE,COLNUM
          PRINT     *EVERT,RPOR[COUNT];
.
          COMPARE   COUNT,SEQNUM
          GOTO      PDAT4000 IF EQUAL
.
          ADD       ONE,COUNT
          ADD       "15",EVERT
          COMPARE   FIVE,COLNUM
          GOTO      PDAT3200 IF LESS
.
.         Print line for patient portion
.
PDAT4000  MOVE      STRCOL,COUNT
          MOVE      ZERO,COLNUM              * number of column
          MOVE      TEN,EVERT
          PRINT     *N,*1,"Patient: ";
          ADD       ONE,CLNO
.
PDAT4200  ADD       ONE,COLNUM
          PRINT     *EVERT,PPOR[COUNT];
          COMPARE   COUNT,SEQNUM
          GOTO      PDAT5000 IF EQUAL
.
          ADD       ONE,COUNT
          ADD       "15",EVERT
          COMPARE   FIVE,COLNUM
          GOTO      PDAT4200 IF LESS
.
.         Print line for descriptions 1
.
PDAT5000  MOVE      STRCOL,COUNT
          MOVE      ZERO,COLNUM              * number of column
          MOVE      TEN,EVERT
          PRINT     *N,*1,"Desc.  : ";
          ADD       ONE,CLNO
.
PDAT5200  ADD       ONE,COLNUM
          PRINT     *EVERT,DES1[COUNT];
.
          IF        PTCNIDES = 1
            COMPARE   COUNT,SEQNUM
            GOTO      PDAT6000 IF EQUAL
          ELSE
            COMPARE   COUNT,SEQNUM
            GOTO      PDAT9000 IF EQUAL
          ENDIF
.
          ADD       ONE,COUNT
          ADD       "15",EVERT
.
          COMPARE   FIVE,COLNUM
          GOTO      PDAT5200 IF LESS
.
          COMPARE   ONE,PTCNIDES
          GOTO      PDAT8000 IF NOT EQUAL    * Don't print second description
.
.         Print line for descriptions 2
.
PDAT6000  MOVE      STRCOL,COUNT
          MOVE      ZERO,COLNUM              * number of column
          MOVE      TEN,EVERT
          PRINT     *N;
          ADD       ONE,CLNO
.
PDAT6200  ADD       ONE,COLNUM
          PRINT     *EVERT,DES2[COUNT];
          COMPARE   COUNT,SEQNUM
          GOTO      PDAT9000 IF EQUAL
.
          ADD       ONE,COUNT
          ADD       "15",EVERT
          COMPARE   FIVE,COLNUM
          GOTO      PDAT6200 IF LESS
.
PDAT8000  PRINT     *N
          ADD       TWO,CLNO
          ADD       FIVE,STRCOL             * Set the next start of column
          GOTO      PDAT1000 
.
PDAT9000  PRINT     *N;
          ADD       ONE,CLNO
          CALL      UND80
PDAT9999  RETURN
+
.******************************************************************************
.         PEDY0000 - Print line for range of days
.******************************************************************************
PEDY0000  IF        COLNUM = 1
            PRINT     *10,STRDAY,*15,"-",*17,ENDDAY;
          ENDIF
.
          IF        COLNUM = 2
            PRINT     *25,STRDAY,*30,"-",*32,ENDDAY;
          ENDIF
.
          IF        COLNUM = 3
            PRINT     *40,STRDAY,*45,"-",*47,ENDDAY;
          ENDIF
.
          IF        COLNUM = 4
            PRINT     *55,STRDAY,*60,"-",*62,ENDDAY;
          ENDIF
.
          IF        COLNUM = 5
            PRINT     *70,STRDAY,*75,"-",*77,ENDDAY;
          ENDIF
PEDY9999  RETURN
+
.******************************************************************************
.         PRTF0000 - Print theatre fees
.******************************************************************************
PRTF0000  COMPARE   "58",CLNO
          CALL      NPAG0000 IF NOT LESS
          MOVE      ONE,STRCOL
          PRINT     *1,"Theatre Fee";
          MOVE      STRCOL,COUNT
          MOVE      ZERO,BCOUNT
.
PRTF1000  MOVE      TEN3,EVERT
          MOVE      ZERO,COLNUM             * Number of column
.
PRTF1200  ADD       ONE,COLNUM
          PRINT     *EVERT,"-- ",COUNT," --";
.
          COMPARE   COUNT,SAVSEQ
          GOTO      PRTF2000 IF EQUAL
.
          ADD       ONE,COUNT
          ADD       "15",EVERT
          COMPARE   FIVE,COLNUM             * last column ?
          GOTO      PRTF1200 IF LESS
.
.         Print lines
.
PRTF2000  MOVE      STRCOL,COUNT
          ADD       ONE,BCOUNT
          MOVE      ZERO,COLNUM
          MOVE      TEN,EVERT
          IF        BCOUNT = 1
            PRINT     *N,*1,"-----------";
          ENDIF
.
          IF        MDRFLG = 1
            PRINT     *N,*1,"Band ",BCOUNT,": ";
          ELSE
            PRINT     *N;            * printing DRG code
          ENDIF
          ADD       TWO,CLNO
.
PRTF2300  ADD       ONE,COLNUM
.....     PRINT     *EVERT,BANDTOT[BCOUNT][COUNT];                      D-48938
          MOVE      BANDTOT[BCOUNT][COUNT],DIM11                       *I-48938
          MATCH     "00000000.00",DIM11                                *I-48938
          GOTO      PRTF2400 IF NOT EQUAL                              *I-48938
          PACK      DIM11,SP20                                         *I-48938
PRTF2400  PRINT     *EVERT,DIM11;                                      *I-48938
.
          COMPARE   COUNT,SAVSEQ
          GOTO      PRTF3000 IF EQUAL
.
          ADD       ONE,COUNT
          ADD       "15",EVERT
          COMPARE   FIVE,COLNUM
          GOTO      PRTF2300 IF LESS
.
.         Print line for next band
.
PRTF3000  
          COMPARE   BCOUNT,SAVBND
          GOTO      PRTF9000 IF EQUAL
.
          ADD       ONE,CLNO
          COMPARE   "58",CLNO
          CALL      NPAG0000 IF NOT LESS
.
          GOTO      PRTF2000
.
PRTF9000  PRINT     *N;
          ADD       ONE,CLNO
          CALL      UND80
PRTF9999  RETURN
+
.******************************************************************************
.         NPAG0000 - Next page
.******************************************************************************
NPAG0000  CALL      HEAD0000
          MOVE      ZERO,CLNO
NPAG9999  RETURN
+
.******************************************************************************
.         CIND0000 - Clear all indicator variables
.******************************************************************************
CIND0000  MOVE      ZERO,XXFXED             * Fixed Charge indicator
          MOVE      ZERO,XXADDS             * Additional charge indicator
          MOVE      ZERO,XXLOWS             * Low outliers indicator
          MOVE      ZERO,XXHIGH             * High outliers indicator
CIND9999  RETURN
+
.******************************************************************************
.         CREA0000 - Create tempfile
.******************************************************************************
CREA0000  CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FNAMEA
.
          CALL      KILA0000                * Kill tempfile
          PACK      CMDLINE,ISBUILD,FNAMEA,KEYA
          EXECUTE   CMDLINE,TASKID
          OPEN      TEMPA,FNAMEA
CREA9999  RETURN
+
.******************************************************************************
.         KILA0000 - Kill existing tempfile
.******************************************************************************
KILA0000  CLOSE     TEMPA
          PACK      CMDLINE,ISERASE,FNAMEA
          EXECUTE   CMDLINE,TASKID
KILA9999  RETURN
+
.******************************************************************************
.
RDTEMPA   MOVE      ZERO,OVRCD
          RESET     KEY22
          READ      TEMPA,KEY22;XXCLMN,XXHFND,XXTABT,XXCASM,XXDCAS:
                                XXFXED,XXADDS,XXLOWS,XXHIGH
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMPA   RESET     KEY22
          WRITE     TEMPA,KEY22;KEY22:
                                XXFXED,XXADDS,XXLOWS,XXHIGH:
                                XXSPAR
          RETURN
.
RSTEMPA   RESET     KEY22
          READ      TEMPA,KEY22;;
          RETURN
.
RKTEMPA   MOVE      ZERO,OVRCD
          READKS    TEMPA;XXCLMN,XXHFND,XXTABT,XXCASM,XXDCAS:
                          XXFXED,XXADDS,XXLOWS,XXHIGH
          GOTO      OVERCOND IF OVER
          RETURN
.
UPTEMPA   UPDATE    TEMPA;XXCLMN,XXHFND,XXTABT,XXCASM,XXDCAS:
                          XXFXED,XXADDS,XXLOWS,XXHIGH
          RETURN
+
.******************************************************************************
          INC       STD001IO
          INC       PATCODKY
          INC       PATITMKY
          INC       PATFNDKY
          INC       TFILENAM                     * Generate Temp File Name
          INC       PATITMRD
.
          INC       IBASEQIO/INC                 * Sequential Numbers File
          INC       PATCMXIO/INC
          INC       PMSCIDIO/INC
          INC       PATLSDIO/INC            * Lumpsum
          INC       PATASDIO/INC            * Additional charges
.
          INC       PATHLFIO/INC            * Lumpsum (MSO)
          INC       PATLDFIO/INC            * Low outliers
          INC       PATHDFIO/INC            * High outliers
          INC       PATAFEIO/INC            * Additional fee
          INC       PATCTFIO/INC            * Casemis theatre fee
.
          INC       PATITMIO/INC
          INC       PATFN1IO/INC
          INC       PATDGWIO/INC
          INC       PATCODIO/INC
          INC       WEBERRIO/INC                 * Web Server Error Logging
.
