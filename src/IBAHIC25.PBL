.******************************************************************************
.* System         : HIC Claims                                                *
.* Program        : IBAHIC25.PBL                                              *
.* Name           : Health Insurance Commission Reconciliation Report         *
.******************************************************************************
.* Date           : 10/10/2005                                                *
.* Author         : J.Tan                                                     *
.* Function       : List the report for HIC which may contain one or more     *
.*                  Exception & or EFT Payment statements.                    *
.*                                                                            *
.* Modifications  :                                                           *
.*                  V9.04.05 19/10/05 J.Tan                                   *
.*                           Fixed opening file from fin directory            *
.*                  V9.04.04 19/10/05 J.Tan                                   *
.*                           Fixed opening file from fin directory            *
.*                                                                            *
.*   Note:     HIC      |  PAS                                                *
.*             ------   |  ------                                             *
.*             Claim    |  Batch                                              *
.*             Voucher  |  Patient Details                                    *
.*             Item     |  Item                                               *
.*                                                                            *
.* Modifications  :                                                           *
.******************************************************************************
.
          INC       STD001FD
.
          INC       HICBTCFD/INC
          INC       HICEMSFD/INC
          INC       HICEFAFD/INC
          INC       HICEFCFD/INC
          INC       HICEFPFD/INC
          INC       HICEFXFD/INC
          INC       HICERRFD/INC
          INC       HICRCCFD/INC
          INC       HICRCIFD/INC
          INC       HICRCHFD/INC
          INC       IBACONFD/INC
          INC       PATCONFD/INC
.
.
MEDCLAIM  FILE      ASCII,FIXED=100
.
. .
. EXCEPTION REPORT FIELDS
. -----------------------
.
. Statement Header Segment
. ------------------------
.HEDSEG01  DIM       1             * Segment start flag
.HEDSEG02  DIM       1             * Segment identifier (statement header)
HEDSEG03  DIM       3             * No. of Claims in Statement
HEDSEG04  DIM       2             * Customer Class
HEDSEG05  DIM       8             * Customer ID
HEDSEG06  DIM       8             * Filler 1
HEDSEG07  DIM       1             * Function ID
HEDSEG08  DIM       8             * Statement Amount
HEDSEG09  DIM       3             * Run Number
HEDSEG10  DIM       3             * Version Number
HEDSEG11  DIM       62            * Filler 2
.
.
. Claim Statement Segment
. -----------------------
.CLMSEG01  DIM       1             * Segment start flag
.CLMSEG02  DIM       1             * Segment identifier (claim statement)
CLMSEG03  DIM       4             * Number of exceptions
CLMSEG04  DIM       5             * Claim ID - Prefix/Number
CLMSEG05  DIM       1             * Claim ID - Suffix
CLMSEG06  DIM       6             * Date of Claim Transmission (ddmmyy)
CLMSEG07  DIM       8             * Payee Provider
CLMSEG08  DIM       8             * Servicing Provider
CLMSEG09  DIM       8             * Benefit Assigned
CLMSEG10  DIM       8             * Benefit Paid
CLMSEG11  DIM       10            * Filler
.
.
. Claim Exception Segment
. -----------------------
.EXCSEG01  DIM       1             * Segment start flag
.EXCSEG02  DIM       1             * Segment identifier (statement exception)
EXCSEG03  DIM       2             * Voucher position
EXCSEG04  DIM       2             * Item position
EXCSEG05  DIM       9             * Medicare Number
EXCSEG06  DIM       1             * Last digit of medicare number
EXCSEG07  DIM       1             * Card Flag
.                                         I = Medicare Issue Number
.                                         C = Medicare Number Changed
.                                         N = Medicare Number Obtained from 
.                                             Personal Details
.                                         A = Identification Ammended
.                                         W = Card used will expire shortly
.                                         S = Card Expired.  Future services
.                                             may be rejected
.                                         X = Old Medicare issue Number
.                                         Space = No Change
EXCSEG08  DIM       12            * First name
EXCSEG09  DIM       5             * Item Number
EXCSEG10  DIM       6             * Date of Service (ddmmyy)
EXCSEG11  DIM       7             * Benefit Assigned
EXCSEG12  DIM       7             * Benefit Paid
EXCSEG13  DIM       3             * Explanation Code (Cat HD)
EXCSEG14  DIM       2             * Number of Patients (not used)
EXCSEG15  DIM       18            * Surname
EXCSEG16  DIM       6             * Filler
.
.
.
. EFT PAYMENT REPORT FIELDS
. ------------------------
.
. Transmission Header Segment
. ------------------------
.EFTSEG01  DIM       1             * Segment start flag
.EFTSEG02  DIM       1             * Segment identifier (A -transmission header)
EFTSEG03  DIM       3             * No. of Payment Statements
EFTSEG04  DIM       2             * Customer Class
EFTSEG05  DIM       8             * Customer ID
EFTSEG06  DIM       8             * Filler 1
EFTSEG07  DIM       1             * Function ID
EFTSEG08  DIM       9             * Total Deposit Amount (cents)
EFTSEG09  DIM       3             * Run Number
EFTSEG10  DIM       8             * Payment Date (ddmmccyy)
EFTSEG11  DIM       56            * Filler 2
.
. Payment Segment
. ---------------
.PAYSEG01  DIM       1             * Segment start flag
.PAYSEG02  DIM       1             * Segment identifier (P - payment statement)
PAYSEG03  DIM       2             * No. of Claim Id's
PAYSEG04  DIM       8             * Payee Provider
PAYSEG05  DIM       6             * BSB Number
PAYSEG06  DIM       9             * Account Number
PAYSEG07  DIM       32            * Account Name
PAYSEG08  DIM       9             * Provider Deposit Amount (cents)
PAYSEG09  DIM       32            * Filler
.
.
. Deposit Segment
. ---------------
.DEPSEG01  DIM       1             * Segment start flag
.DEPSEG02  DIM       1             * Segment identifier (C - deposit details)
DEPSEG03  DIM       5             * Claim ID - Prefix/Number
DEPSEG04  DIM       1             * Claim ID - Suffix
DEPSEG05  DIM       8             * Date of Transmission (ddmmccyy)
DEPSEG06  DIM       9             * Deposit Amount (cents)
DEPSEG07  DIM      15             * Filler
.
.
.
. LOCAL VARIABLES
. ---------------
BATCHNUM  DIM       5
.
CMDLINE   DIM       80
CURRDATE  DIM       8
CURRTIME  DIM       8
.
DIM2A     DIM       2
DIM2B     DIM       2
DIM5A     DIM       5
DIM5B     DIM       5
DIM6A     DIM       6
DIM6B     DIM       6
DIM7A     DIM       7
DIM8      DIM       8
DIM8A     DIM       8
DIM8B     DIM       8
DIM9      DIM       9
DIM9A     DIM       9
DIM9B     DIM       9
DIM10A    DIM       10
DIM20     DIM       20
.
EXCPFLAG  FORM      1
ERORDESC  DIM       50
EXCFIELD  DIM       4090
EXCPNAME  DIM       100
EXPLDESC  DIM       22
.
FILENAME  DIM       8
FORM3     FORM      3
FORMA5P2  FORM      5.2
FORMB5P2  FORM      5.2
FORMA6P2  FORM      6.2
FORMB6P2  FORM      6.2
FORMA7P2  FORM      6.2
.
HEADFLAG  FORM      1             * header printed flag
.                                    0 = header not printed
.                                    1 = header already printed
.
ITEMDIM5  DIM       5
ITMFORM9  FORM      9
.
.
. PROGRAM CONSTANTS
. -----------------
ASTERIXA  INIT      "*A"
ASTERIXC  INIT      "*C"
ASTERIXE  INIT      "*E"
ASTERIXP  INIT      "*P"
ASTERIXS  INIT      "*S"
ASTERIXX  INIT      "*X"
ASTERIXZ  INIT      "*Z"
.
BATCHDES  INIT      "Batch"
BTCHHEAD  DIM       20
.
CARDDESA  INIT      "Identification ammended"
CARDDESC  INIT      "Medicare number changed"
CARDDESI  INIT      "Medicare issue number"
CARDDESN  INIT      "Medicare Number obtained from personal details"
CARDDESS  INIT      "Card expired.  Future services may be rejected"
CARDDESW  INIT      "Card used will expire shortly"
CARDDESX  INIT      "Old issue number.  Future services may be rejected"
CARDDESZ  INIT      "Unknown medicare card flag"
.
FILEEXTN  INIT      ".txt"
.
GRETTHAN  INIT      ">"
.
HYPHEN    INIT      "-"
.
PATHNAME  INIT      "/tmp/"
PIPE      INIT      "|"
.
RMVEPRFX  INIT      "rm "
.
SCRIPTNAM INIT      "hicscript2 "
SP60      INIT      "                              ":
                    "                              "
.
.
PRGID     INIT      "IBAHIC15"
PRGNAM    INIT      "HIC Reconciliation Report"
VERSION   INIT      "V12.00.00"
+
.******************************************************************************
.*                                  MAIN0000                                  *
.*                                 Main Module                                *
.******************************************************************************
.
MAIN0000  CALL      INIT0000                * Initialise variables & open files
          BRANCH    EXIT,MAIN9999           * not using medclaims
.
MAIN0100  CALL      OPTN0000                * get report option
          BRANCH    EXIT,MAIN9999           * exit selected
          BRANCH    COPTION,MAIN0500:       * single batch exception report
                            MAIN0500        * single batch eft payment report
          GOTO      MAIN9999
.
MAIN0500  CALL      GBAT0000                * get single batch number
          BRANCH    EXIT,MAIN9999           * nothing entered
.
          CALL      PFIL0000                * process file name
          GOTO      MAIN9999
.
MAIN9999  CHAIN     PGM
+
.*****************************************************************************
.*                                  INIT0000       Called by: MAIN0000       *
.*                       Initialise Variable & Open Files                    *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening controlf"
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"hicbtcaf"
          OPEN      HICBTCA1,"hicbtcaf"
          OPEN      HICBTCA5,"hicbtcaf"
.
          DISPLAY   *P64:24,"hicefcaf"
          OPEN      HICEFCA1,"hicefcaf"
.
          DISPLAY   *P64:24,"hicemsaf"
          OPEN      HICEMSA1,"hicemsaf"
.
          DISPLAY   *P64:24,"hicrccaf"
          OPEN      HICRCCA1,"hicrccaf"
.
          DISPLAY   *P64:24,"hicefxaf"
          OPEN      HICEFXA1,"hicefxaf"
.
          DISPLAY   *P64:24,"hicrchaf"
          OPEN      HICRCHA1,"hicrchaf"
.
          DISPLAY   *P64:24,"hicrciaf"
          OPEN      HICRCIA1,"hicrciaf"
.
          READ      CONTROLF,ZERO;*132,IBCNUMCI
          READ      CONTROLF,HUND03;*123,PTCNHICI
          STRIP     PTCNHICI
.
          MATCH     "1",IBCNUMCI
          GOTO      INIT9100 IF NOT EQUAL
.
.         Get the current date
.
          CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
          MOVE      CTIMEIS,CURRTIME
          REP       " 0",CURRTIME
.
          MOVE      ZERO,EXIT
          GOTO      INIT9999
.
INIT9100  MOVE      ONE,EXIT
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: MAIN0000  *
.*                        get user options or exit                          *
.*    Returns:  EXIT    = FALSE (0)  Valid option selected                  *
.*                        TRUE  (1)  Exit option selected                   *
.*              COPTION - option number selected                            *
.*                        1 = Single Batch Exception Report                 *
.*                        2 = Single Batch EFT Payment Report               *
.****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Single Batch Exception ":
                                           "Report":
                    *P1:6,*V2LON,TWO,*HOFF,". Run Single Batch EFT Payment ":
                                            "Report"
.
OPTN0500  KEYIN     *P1:9,*EL,"Select Option : ":
                    *P17:9,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN8100:            * run single batch exc. report
                            OPTN8200             * run single batch eft report
.
          BEEP
          GOTO      OPTN0500
.
OPTN8100  DISPLAY   *P53:2," - Single Batch Exception Report "
          GOTO      OPTN9000
.
OPTN8200  DISPLAY   *P53:2," - Single Batch EFT Payment Report "
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                           PFIL0000              Called by: MAIN0000       *
.*            Get the file name to be processed                              *
.*****************************************************************************
.
PFIL0000  MOVE      "0",KEY1                     * Default to Exception
          IF        COPTION=2
            MOVE      "1",KEY1                   * set to Payment
          ENDIF
          PACK      KEY44,BATCHNUM,KEY1,SP70
          CALL      RSHCEFX1
PFIL1000  CALL      RKHCEFX1
          BRANCH    OVRCD,PFIL8000
.
          MATCH     BATCHNUM,HCEXBTCH            * Same batch number?
          GOTO      PFIL8000 IF NOT EQUAL
          MATCH     KEY1,HCEXTYPE                * Same record type?
          GOTO      PFIL8000 IF NOT EQUAL
.
          MOVE      PTCNHICI,EXCPNAME
          ENDSET    EXCPNAME
          APPEND    "fin/",EXCPNAME
          APPEND    HCEXFNAM,EXCPNAME
          APPEND    SP70,EXCPNAME
          RESET     EXCPNAME
.
          PACK      EXCPNAME,EXCPNAME,SP30,SP30
          MATCH     SP60,EXCPNAME                * anything entered ?
          GOTO      PFIL1000 IF EQUAL            * no - finished
.
.         Determine what the actual file name is and load this for the
.         report header
.
          MOVE      SP20,CPHDROPT
.
          STRIP     EXCPNAME
          ENDSET    EXCPNAME                     * set FP to LL
PFIL5000  BUMP      EXCPNAME,-1                  * move FP back one character
          GOTO      PFIL7000 IF EOS              * eos - finished
.
          MATCH     SLASH,EXCPNAME               * last "/" found
          GOTO      PFIL5000 IF NOT EQUAL        * no - get previous character
          BUMP      EXCPNAME                     * move to next character
          PACK      CPHDROPT,SP1,HYPHEN,SP1,EXCPNAME,SP20 * load header
.
PFIL7000  MOVE      EXCPNAME,DIM20
          RESET     EXCPNAME
.
          MOVE      ZERO,CPAGENO                 * initialise page number
          MOVE      ONE,CNOUNDLN
          CALL      IBACLOCK                     * get current date/time
.
          CALL      PHED0000                     * print header
          MOVE      ONE,HEADFLAG                 * header printed flag
.
          SCAN      DOT,DIM20
          IF        !@EQUAL
            PRINT     *N,*1,"Unable to extract filename":
                      *N,*N,*1,"*** End of Report ***"
            GOTO      PFIL1000
          ENDIF
.
          TRAP      OVERCOND IF IO
          OPEN      MEDCLAIM,EXCPNAME            * open exception file
          TRAPCLR   IO
          IF        OVRCD = 1
            PRINT     *N,*1,EXCPNAME," not found.":
                      *N,*N,*1,"*** End of Report ***"
            GOTO      PFIL1000
          ENDIF
.
          MOVE      SP20,FILENAME
          CLEAR     FILENAME
          MOVEFPTR  DIM20,FORM2
          SUB       ONE,FORM2
          RESET     DIM20
          SETLPTR   DIM20,FORM2
          MOVE      DIM20,FILENAME
.
          DISPLAY   *P1:24,*EL,"Coverting file...";
.
          PACK      CMDLINE,SP30,SP30,SP20
          CLEAR     CMDLINE
          PACK      CMDLINE,SCRIPTNAM,EXCPNAME,SP1,GRETTHAN,SP1,PATHNAME,FILENAME,FILEEXTN
          EXECUTE   CMDLINE,TASKID
          MATCH     "0       ",TASKID
          IF        !@EQUAL
            PRINT     *N,*1,"Unable to run script":
                      *N,*N,*1,"*** End of Report ***"
            CLOSE     MEDCLAIM
            GOTO      PFIL1000
          ENDIF
.
          CLOSE     MEDCLAIM
.
          PACK      EXCPNAME,PATHNAME,FILENAME,FILEEXTN
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      MEDCLAIM,EXCPNAME
          TRAPCLR   IO
          IF        OVRCD = 1
            PRINT     *N,*1,"Unable to open output file":
                      *N,*N,*1,"*** End of Report ***"
            GOTO      PFIL1000
          ENDIF
.
          CALL      PROC0000                * process files
          GOTO      PFIL1000
.
PFIL8000  DISPLAY   *P1:24,*EL,"Report Completed.  ";
          CALL      HITENTER
.
PFIL9999  RETURN
+
.*****************************************************************************
.*                           GBAT0000              Called by: MAIN0000       *
.*            Get the batch number for the report                            *
.* Returns: BATCHNUM - valid batch number                                    *
.*          EXIT - 0 = Ok to continue.                                       *
.*                 1 = Nothing entered or error occurred                     *
.*****************************************************************************
.
GBAT0000  KEYIN     *P1:13,*EF,"Batch Number: ":
                    *P15:13,*V2LON,BATCHNUM
.
          PACK      BATCHNUM,BATCHNUM,SP5
          MATCH     SP5,BATCHNUM                 * anything input ?
          GOTO      GBAT9100 IF EQUAL            * no - finished
.
.         Batch selected, so load the report header option
.
          MOVE      ZERO,CPAGENO                 * initialise page number
          MOVE      ONE,CNOUNDLN
          CALL      IBACLOCK                     * get current date/time
.
          PACK      BTCHHEAD,SP1,HYPHEN,SP1,BATCHDES,SP1,BATCHNUM,SP20
.
          BRANCH    COPTION,GBAT2000:            * single exception batch
                            GBAT4000             * single eft batch
.
.         Single batch exception report
.
GBAT2000  PACK      KEY13,BATCHNUM,SP70
          CALL      RSHCRCC1
          CALL      RKHCRCC1
          BRANCH    OVRCD,GBAT2200
          MATCH     BATCHNUM,HCRCBTCH        * Same batch number
          GOTO      GBAT3000 IF EQUAL
.
GBAT2200  PRINT     *N,*1,"No Exception records for batch.":
                    *N,*N,*1,"*** End of Report ***"
          GOTO      GBAT9100
.
GBAT3000  PACK      KEY8,HCRCRNUM,SP70
          CALL      RSHCRCH1
          CALL      RKHCRCH1                  * batch header on file ?
          BRANCH    OVRCD,GBAT3200
          MATCH     HCRCRNUM,HCRHRNUM         * Same run number?
          GOTO      GBAT9000 IF EQUAL
.
GBAT3200  PRINT     *N,*1,"Batch exception header record not on file.":
                    *N,*N,*1,"*** End of Report ***"
          GOTO      GBAT9100
.
.         Single batch eft report
.
GBAT4000  PACK      KEY13,BATCHNUM,SP70
          CALL      RSHCEFC1                     * position on batch
          CALL      RKHCEFC1                     * read next record
          BRANCH    OVRCD,GBAT8000               * eof - error
.
          MATCH     BATCHNUM,HCECBTCH            * same batch still ?
          GOTO      GBAT9000 IF EQUAL            * yes - continue
.
GBAT8000  PRINT     *N,*1,"No EFT payments for batch.":
                    *N,*N,*1,"*** End of Report ***"
          GOTO      GBAT9100
.
GBAT9000  MOVE      ZERO,EXIT
          GOTO      GBAT9999
.
GBAT9100  MOVE      ONE,EXIT
.
GBAT9999  RETURN
+
.*****************************************************************************
.*                           PROC0000              Called by: MAIN0000       *
.*            Process the exception file from HIC                            *
.*****************************************************************************
.
PROC0000  DISPLAY   *P1:24,*EL,"Processing Batch....";
.
.         Read the next report line
.
PROC0500  READ      MEDCLAIM,SEQ;EXCFIELD        * read a report record
          GOTO      PROC9500 IF OVER             * end of file - finished
.
.         Look for a Header record (Type "S" or "A")
.
PROC1000  IF        COPTION=1
            MATCH     ASTERIXS,EXCFIELD          * exception header segment ?
            GOTO      PROC1200 IF EQUAL
          ELSE
            MATCH     ASTERIXA,EXCFIELD          * eft header segment ?
            GOTO      PROC5000 IF EQUAL
          ENDIF
          GOTO      PROC0500                     * get next record
.
.         A valid exception header segment has been found,
.         so check the segment length
.
PROC1200  MOVELPTR  EXCFIELD,FORM3               * get segment length
          COMPARE   HUNDRED,FORM3                * correct length ?
          IF        !@EQUAL
            MOVE      "End of exception header encountered prematurely",ERORDESC
            CALL      PERR0000
          ENDIF
.
.         Load the available statement header segment fields
.
          CALL      CLHD0000                     * clear header fields
          CALL      HEDS0000                     * load header fields
          MOVE      ZERO,EXCPFLAG
.
.         The statement header has been processed, so now read the next
.         record, which should be a claim statement (batch).  There may be
.         one or more claim statements (batches) for a header.
.
PROC2000  READ      MEDCLAIM,SEQ;EXCFIELD        * read an exception record
          GOTO      PROC9500 IF OVER             * end of file - finished
.
PROC3000  MATCH     ASTERIXX,EXCFIELD            * start of claim segment ?
          GOTO      PROC1000 IF NOT EQUAL        * no - get next record
.
PROC3100  UNPACK    EXCFIELD,DIM2,CLMSEG03:      * no. of exceptions
                                  CLMSEG04       * claim id - prefix/number
          MATCH     BATCHNUM,CLMSEG04            * Same batch number?
          IF        !@EQUAL
PROC3200    READ      MEDCLAIM,SEQ;EXCFIELD      * read an exception record
            GOTO      PROC9500 IF OVER           * end of file - finished
            MATCH     ASTERIXX,EXCFIELD          * start of claim segment ?
            GOTO      PROC3100 IF EQUAL
            MATCH     ASTERIXE,EXCFIELD          * start of Exception segment ?
            GOTO      PROC3200 IF EQUAL
            MATCH     ASTERIXS,EXCFIELD          * start of Excp.Header segm?
            GOTO      PROC1200 IF EQUAL
            MATCH     ASTERIXA,EXCFIELD          * start of EFT Header segment ?
            GOTO      PROC5000 IF EQUAL
            GOTO      PROC0500
          ENDIF
.
          IF        EXCPFLAG=0
            CALL      SHED0000                     * print header details
            MOVE      ONE,EXCPFLAG
          ENDIF
.
.         Each claim (batch) is printed on a new page so that the report
.         can be broken up and distributed to the appropriate unit
.
          CALL      PHED0000                     * printer page header
.
.         A valid claim segment has been found, so check the segment length
.
          MOVELPTR  EXCFIELD,FORM3               * get segment length
          COMPARE   SIXTY,FORM3                  * correct length ?
          IF        !@EQUAL
            MOVE      "End of claim statement encountered prematurely",ERORDESC
            CALL      PERR0000
          ENDIF
.
.         Load the available claim statement segment fields.
.
          CALL      CLCL0000                     * clear claim fields
          CALL      CLAM0000                     * load claim fields
.
          CALL      EHED0000                     * print exception header
.
.         Check if there are exception records for this claim.
.         For each exception file received from HIC, there can be one or
.         more batches present.  For each batch, there should be one
.         statement header segment and one claim statement segment.
.         If a batch has no errors and is fully paid by HIC, then there
.         will be no exception segments.  If there are errors, then there
.         will be one exception segment for each item error within the batch.
.
PROC4000  READ      MEDCLAIM,SEQ;EXCFIELD        * read an exception record
          IF        @OVER
            PRINT     *N,*1,"End of Batch - ",CLMSEG04
            ADD       ONE,CLNO
            GOTO      PROC9500
          ENDIF
.
          MATCH     ASTERIXE,EXCFIELD            * start of exception segment ?
          IF        !@EQUAL
            PRINT     *N,*1,"End of Batch - ",CLMSEG04
            ADD       ONE,CLNO
            GOTO      PROC3000
          ENDIF
.
          MOVELPTR  EXCFIELD,FORM3               * get segment length
          COMPARE   EIGHTY3,FORM3                * correct length ?
          IF        !@EQUAL
            MOVE      "End of exception line encountered prematurely",ERORDESC
            CALL      PERR0000
          ENDIF
.
.         Load the available claim exception line segment fields.
.
          CALL      CEXP0000                     * clear exception fields
          CALL      EXCP0000                     * load exception fields
          GOTO      PROC4000                     * get next exception record
.
.         A valid EFT payment report header segment has been found,
.         so check the segment length
.
PROC5000  MOVELPTR  EXCFIELD,FORM3               * get segment length
          COMPARE   HUNDRED,FORM3                * correct length ?
          IF        !@EQUAL
            MOVE      "End of EFT header encountered prematurely",ERORDESC
            CALL      PERR0000
          ENDIF
.
.         Load the available EFT header segment fields
.
          CALL      CEFT0000                     * clear header fields
          CALL      HEDA0000                     * load header fields
.
.         The EFT payment header has been processed, so now read the next
.         record, which should be a provider payment statement
.
          READ      MEDCLAIM,SEQ;EXCFIELD        * read a provider paym't record
          GOTO      PROC9999 IF OVER             * end of file - finished
.
PROC6000  MATCH     ASTERIXP,EXCFIELD            * start of pr. payment segment?
          GOTO      PROC1000 IF NOT EQUAL        * no - get next record
.
.         A valid payee payment segment has been found, so check the segment
.         length
.
          MOVELPTR  EXCFIELD,FORM3               * get segment length
          COMPARE   HUNDRED,FORM3                * correct length ?
          IF        !@EQUAL
            MOVE      "End of claim statement encountered prematurely",ERORDESC
            CALL      PERR0000
          ENDIF
.
.         Each payee payment is printed on a new page so that the report
.         can be broken up and distributed to the appropriate unit
.
          CALL      PHED0000                     * printer page header
.
.         Load the available provider payment segment fields.
.
          CALL      CPAY0000                     * clear payment fields
          CALL      PAYM0000                     * load payment fields
.
          CALL      DHED0000                     * print deposit header
.
.         The EFT provider payment segment has been processed, so now read
.         the next record, which should be a deposit payment segment
.
PROC7000  READ      MEDCLAIM,SEQ;EXCFIELD        * read a deposit paym't record
          GOTO      PROC9999 IF OVER             * end of file - finished
.
          UNPACK    EXCFIELD,DIM2,DEPSEG03       * Claim ID - Prefix/Number
          MATCH     BATCHNUM,DEPSEG03
          GOTO      PROC7000 IF NOT EQUAL        * Not the requested batch no.
.
          IF        @OVER
            PRINT     *N,*1,"End of Payee ",PAYSEG04," payments"
            ADD       ONE,CLNO
            GOTO      PROC9500
          ENDIF
.
          MATCH     ASTERIXC,EXCFIELD            * start of dep. paym't segment?
          IF        !@EQUAL
            PRINT     *N,*1,"End of Payee ",PAYSEG04," payments"
            ADD       ONE,CLNO
            MATCH     ASTERIXZ,EXCFIELD          * no - transmission end ?
            GOTO      PROC0500 IF EQUAL          * yes - get next header
            GOTO      PROC6000                   * get next payment record
          ENDIF
.
          MOVELPTR  EXCFIELD,FORM3               * get segment length
          COMPARE   FORTY,FORM3                  * correct length ?
          IF        !@EQUAL
            COMPARE   SEVEN,FORM3                * no - check if batch # present
            IF        !@LESS
              MOVE      DEPSEG03,BATCHNUM        * load batch number
              MOVE     "End of deposit payment encountered prematurely",HCERDESC
              CALL      PERR0000
            ENDIF
            GOTO      PROC7000
          ENDIF
.
          CALL      CDEP0000                     * clear dep. payment fields
          CALL      DEPT0000                     * load deposit fields
          GOTO      PROC7000                     * get next claim summary
.
.         End of file was encountered.  We have completed processing the
.         report file, so print the end of the report
.
PROC9500  PRINT     *N,*1,"*** End of Report ***"
.
          PACK      CMDLINE,SP30,SP30,SP20
          CLEAR     CMDLINE
          PACK      CMDLINE,RMVEPRFX,EXCPNAME
          EXECUTE   CMDLINE,TASKID
          MATCH     "0       ",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to remove output file.  ";
            CALL      HITENTER
            CLOSE     MEDCLAIM
          ENDIF
.
.
PROC9999  RETURN
+
.*****************************************************************************
.*                          HEDA0000             Called by:  PROC0000        *
.*             Load EFT payment header variables                             *
.*****************************************************************************
.
HEDA0000  UNPACK    EXCFIELD,DIM2,EFTSEG03:      * No. of Payment Statements
                                  EFTSEG04:      * Customer Class
                                  EFTSEG05:      * Customer ID
                                  EFTSEG06:      * Filler 1
                                  EFTSEG07:      * Function ID
                                  EFTSEG08:      * Total Deposit Amount (cents)
                                  EFTSEG09:      * Run Number
                                  EFTSEG10:      * Payment Date (ddmmccyy)
                                  EFTSEG11       * Filler 2
.
          CALL      THED0000                     * print header
.
HEDA9999  RETURN
+
.****************************************************************************
.*                             CEFT0000            Called by: PROC0000      *
.*                 Clear statement header fields                            *
.****************************************************************************
.
CEFT0000  MOVE      SP3,EFTSEG03
          MOVE      SP2,EFTSEG04
          MOVE      SP8,EFTSEG05
          MOVE      SP8,EFTSEG06
          MOVE      SP1,EFTSEG07
          MOVE      SP9,EFTSEG08
          MOVE      SP3,EFTSEG09
          MOVE      SP8,EFTSEG10
          MOVE      SP70,EFTSEG11
.
CEFT9999  RETURN
+
.*****************************************************************************
.*                          PAYM0000             Called by:  PROC0000        *
.*             Load Provider Payment variables                               *
.*****************************************************************************
.
PAYM0000  UNPACK    EXCFIELD,DIM2,PAYSEG03:      * No. of Claim Id's
                                  PAYSEG04:      * Payee Provider
                                  PAYSEG05:      * BSB Number
                                  PAYSEG06:      * Account Number
                                  PAYSEG07:      * Account Name
                                  PAYSEG08:      * Provider Deposit Amt (cents)
                                  PAYSEG09       * Filler
.
          CALL      PAYS0000                     * print payment header
.
PAYM9999  RETURN
+
.****************************************************************************
.*                        CPAY0000                 Called by: PROC0000      *
.*              Clear provider payment statement fields                     *
.****************************************************************************
.
CPAY0000  MOVE      SP2,PAYSEG03
          MOVE      SP8,PAYSEG04
          MOVE      SP6,PAYSEG05
          MOVE      SP9,PAYSEG06
          PACK      PAYSEG07,SP30,SP2
          MOVE      SP9,PAYSEG08
          PACK      PAYSEG09,SP30,SP2
.
CPAY9999  RETURN
+
.****************************************************************************
.*                       CDEP0000                  Called by: PROC0000      *
.*                Clear the deposit payment variables                       *
.****************************************************************************
.
CDEP0000  MOVE      SP5,DEPSEG03
          MOVE      SP1,DEPSEG04
          MOVE      SP8,DEPSEG05
          MOVE      SP9,DEPSEG06
          MOVE      SP20,DEPSEG07
.
CDEP9999  RETURN
+
.*****************************************************************************
.*                          DEPT0000             Called by:  PROC0000        *
.*             Load deposit line variable                                    *
.*****************************************************************************
.
DEPT0000  UNPACK    EXCFIELD,DIM2,DEPSEG03:      * Claim ID - Prefix/Number
                                  DEPSEG04:      * Claim ID - Suffix
                                  DEPSEG05:      * Date of Transmission
                                  DEPSEG06:      * Deposit Amount (cents)
                                  DEPSEG07       * Filler
          CALL      DLIN0000                     * print deposit line
.
DEPT9999  RETURN
+
.*****************************************************************************
.*                          HEDS0000             Called by:  PROC0000        *
.*             Load Exception Statement header variables                     *
.*****************************************************************************
.
HEDS0000  UNPACK    EXCFIELD,DIM2,HEDSEG03:      * No. of Claims in Statement
                                  HEDSEG04:      * customer class
                                  HEDSEG05:      * customer id
                                  HEDSEG06:      * filler 1
                                  HEDSEG07:      * function id
                                  HEDSEG08:      * statement amount
                                  HEDSEG09:      * run number
                                  HEDSEG10:      * version number
                                  HEDSEG11       * filler 2
.
.
HEDS9999  RETURN
+
.*****************************************************************************
.*                          CLAM0000             Called by:  PROC0000        *
.*             Load Claim header variables                                   *
.*****************************************************************************
.
CLAM0000  UNPACK    EXCFIELD,DIM2,CLMSEG03:      * no. of exceptions
                                  CLMSEG04:      * claim id - prefix/number
                                  CLMSEG05:      * claim id - suffix
                                  CLMSEG06:      * date of claim transmission
                                  CLMSEG07:      * payee provider
                                  CLMSEG08:      * servicing provider
                                  CLMSEG09:      * benefit assigned
                                  CLMSEG10:      * benefit paid
                                  CLMSEG11       * filler
.
          CALL      CSTM0000                     * print claim details
.
CLAM9999  RETURN
+
.*****************************************************************************
.*                          EXCP0000             Called by:  PROC0000        *
.*             Load Exception line variable                                  *
.*****************************************************************************
.
EXCP0000  UNPACK    EXCFIELD,DIM2,EXCSEG03:      * voucher position
                                  EXCSEG04:      * item position
                                  EXCSEG05:      * medicare no.
                                  EXCSEG06:      * last digit medicare no.
                                  EXCSEG07:      * card flag
                                  EXCSEG08:      * first name
                                  EXCSEG09:      * item number
                                  EXCSEG10:      * date of service
                                  EXCSEG11:      * benefit assigned
                                  EXCSEG12:      * benefit paid
                                  EXCSEG13:      * explanation code
                                  EXCSEG14:      * no. of patients
                                  EXCSEG15:      * surname
                                  EXCSEG16       * filler
.
.         Set Card Flag
.
EXCP0700  MATCH     SP1,EXCSEG07                 * card flag blank ?
          IF        !@EQUAL
            MOVE      EXCSEG07,ANS
            REP       "I1C2N3A4W5S6X7",ANS
            MOVE      ANS,FORM1
            MOVE      CARDDESZ,ERORDESC          * default to unknown flag
            LOAD      ERORDESC,FORM1,CARDDESI,CARDDESC,CARDDESN,CARDDESA:
                                     CARDDESW,CARDDESS,CARDDESX
            CALL      PERR0000                   * write hicerraf error record
          ENDIF
.
          CALL      ELIN0000                     * print exception details
.
EXCP9999  RETURN
+
.****************************************************************************
.*                            SHED0000                 Called by: HEDS0000  *
.*             Print the statement header details                           *
.****************************************************************************
.
SHED0000  IF        HEADFLAG = 1
            MOVE      ZERO,HEADFLAG
          ELSE
            CALL      PHED0000
          ENDIF
.
          PRINT     *1,"EXCEPTION STATEMENT HEADER"
.
          CALL      LINE0000                     * print line
.
          PRINT     *1,PIPE,*3,"No of Claims",*16,PIPE,*18,"Customer Id":
                    *30,PIPE,*32,"Statement Amount",*49,PIPE,*51,"Run Number":
                    *132,PIPE
.
          CALL      LINE0000                     * print line
.
          MOVE      HEDSEG03,FORM3
          UNPACK    HEDSEG08,DIM6A,DIM2A
          PACK      DIM9A,DIM6A,DOT,DIM2A
          MOVE      DIM9A,FORMA6P2
          PRINT     *1,PIPE,*3,FORM3,*16,PIPE,*18,HEDSEG05:
                    *30,PIPE,*39,FORMA6P2,*49,PIPE,*51,HEDSEG09:
                    *132,PIPE
.
          CALL      LINE0000                     * print line
.
          ADD       SIX,CLNO                     * increment line count
.
SHED9999  RETURN
+
.****************************************************************************
.*                            THED0000                 Called by: HEAD0000  *
.*             Print the EFT Payment transmission header details            *
.****************************************************************************
.
THED0000  IF        HEADFLAG = 1
            MOVE      ZERO,HEADFLAG
          ELSE
            CALL      PHED0000
          ENDIF
.
          PRINT     *1,"EFT PAYMENT TRANSMISSION HEADER"
.
          CALL      LINE0000                     * print line
.
          PRINT     *1,PIPE,*3,"No of Payment Statements",*28,PIPE:
                    *30,"Customer Id",*42,PIPE,*44,"Total Deposit Amount":
                    *65,PIPE,*67,"Run Number",*78,PIPE,*80,"Payment Date":
                    *132,PIPE
.
          CALL      LINE0000                     * print line
.
          UNPACK    EFTSEG10,CDAY,CMON,CCENT,CYEAR   * format payment date
          CALL      PACDATE
.
          MOVE      EFTSEG03,FORM3
          UNPACK    EFTSEG08,DIM7A,DIM2A
          PACK      DIM10A,DIM7A,DOT,DIM2A
          MOVE      DIM10A,FORMA7P2
          PRINT     *1,PIPE,*3,FORM3,*28,PIPE:
                    *30,EFTSEG05,*42,PIPE,*44,FORMA7P2:
                    *65,PIPE,*67,EFTSEG09,*78,PIPE,*80,CPCDATE:
                    *132,PIPE
.
          CALL      LINE0000                     * print line
.
          ADD       SIX,CLNO                     * increment line count
.
THED9999  RETURN
+
.****************************************************************************
.*                            CSTM0000                 Called by: CLAM0000  *
.*           Print the exception claim statement details                    *
.****************************************************************************
.
CSTM0000  PRINT     *N,*1,"EXCEPTION BATCH SUMMARY"
.
          CALL      LINE0000                     * print line
.
          PRINT     *1,PIPE,*3,"No of Exceptions",*20,PIPE,*22,"Batch Id":
                    *31,PIPE,*33,"Date of Transmission",*54,PIPE:
                    *56,"Payee Provider",*71,PIPE,*73,"Servicing Provider":
                    *92,PIPE,*94,"Benefit Assigned",*111,PIPE:
                    *113,"Benefit Paid",*132,PIPE
.
          CALL      LINE0000                     * print line
.
          MOVE      CLMSEG03,FORM4
          UNPACK    CLMSEG06,CDAY,CMON,CYEAR
          CALL      PACDATE
          UNPACK    CLMSEG09,DIM6A,DIM2A
          PACK      DIM9A,DIM6A,DOT,DIM2A
          MOVE      DIM9A,FORMA6P2
          UNPACK    CLMSEG10,DIM6B,DIM2B
          PACK      DIM9B,DIM6B,DOT,DIM2B
          MOVE      DIM9B,FORMB6P2
          PRINT     *1,PIPE,*3,FORM4,*20,PIPE,*22,CLMSEG04:
                    *31,PIPE,*33,CPDATE,*54,PIPE:
                    *56,CLMSEG07,*71,PIPE,*73,CLMSEG08:
                    *92,PIPE,*101,FORMA6P2,*111,PIPE:
                    *122,FORMB6P2,*132,PIPE
.
          CALL      LINE0000                     * print line
.
          ADD       SEVEN,CLNO                   * increment line count
.
CSTM9999  RETURN
+
.****************************************************************************
.*                            PAYS0000                 Called by: CLAM0000  *
.*           Print the EFT payee payment summary details                    *
.****************************************************************************
.
PAYS0000  PRINT     *N,*1,"EFT PAYEE PAYMENT SUMMARY"
.
          CALL      LINE0000                     * print line
.
          PRINT     *1,PIPE,*3,"No of Batches",*17,PIPE,*19,"Payee Prov.":
                    *31,PIPE,*33,"BSB No.",*41,PIPE:
                    *43,"Account No.",*55,PIPE,*57,"Account Name":
                    *90,PIPE,*92,"Provider Deposit Amount",*132,PIPE
.
          CALL      LINE0000                     * print line
.
          MOVE      PAYSEG03,FORM2
          UNPACK    PAYSEG08,DIM7A,DIM2A
          PACK      DIM10A,DIM7A,DOT,DIM2A
          MOVE      DIM10A,FORMA7P2
          PRINT     *1,PIPE,*3,FORM2,*17,PIPE,*19,PAYSEG04:
                    *31,PIPE,*33,PAYSEG05,*41,PIPE:
                    *43,PAYSEG06,*55,PIPE,*57,PAYSEG07:
                    *90,PIPE,*92,FORMA7P2,*132,PIPE
.
          CALL      LINE0000                     * print line
.
          ADD       SEVEN,CLNO                   * increment line count
.
PAYS9999  RETURN
+
.****************************************************************************
.*                            EHED0000                 Called by: PROC0000  *
.*             Print claim exception header line                  ELIN0000  *
.****************************************************************************
.
EHED0000  PRINT     *N,*1,"BATCH EXCEPTION LINES - Batch ",CLMSEG04
.
          CALL      LINE0000                     * print line
.
          PRINT     *1,PIPE,*3,"Vch",*7,PIPE,*9,"Medicare No":
                    *21,PIPE,*23,"Card",*28,PIPE,*30,"Surname":
                    *49,"First Name",*62,PIPE,*64,"Item",*70,PIPE,*72,"Date of":
                    *81,PIPE,*83,"Benefit",*92,PIPE:
                    *94,"Benefit",*103,PIPE,*105,"Explanation",*132,PIPE:
                    *N:
                    *1,PIPE,*3,"Pos",*7,PIPE:
                    *21,PIPE,*23,"Flag",*28,PIPE:
                    *62,PIPE,*70,PIPE,*72,"Service":
                    *81,PIPE,*83,"Assigned",*92,PIPE:
                    *94,"Paid",*103,PIPE,*105,"Code",*132,PIPE
.
          CALL      LINE0000                     * print line
.
          ADD       SIX,CLNO                     * increment line count
.
EHED9999  RETURN
+
.****************************************************************************
.*                            DHED0000                 Called by: PROC0000  *
.*             Print batch detail line                            DLIN0000  *
.****************************************************************************
.
DHED0000  PRINT     *N,*1,"EFT BATCH PAYMENT LINES - Payee Prov. ",PAYSEG04
.
          CALL      LINE0000                     * print line
.
          PRINT     *1,PIPE,*3,"Batch ID":
                    *12,PIPE,*14,"Date of Transmission":
                    *35,PIPE,*37,"Batch Deposit Amount":
                    *132,PIPE
.
          CALL      LINE0000                     * print line
.
          ADD       FIVE,CLNO                    * increment line count
.
DHED9999  RETURN
+
.****************************************************************************
.*                            ELIN0000                 Called by: EXCP0000  *
.*             Print claim exception line details                           *
.****************************************************************************
.
ELIN0000  COMPARE   CLNO,FIFTY6                  * page full ?
          IF        @LESS
            CALL      PHED0000                   * printer page header
            CALL      EHED0000                   * print exception header
          ENDIF
.
          UNPACK    EXCSEG10,CDAY,CMON,CYEAR
          CALL      PACDATE
          UNPACK    EXCSEG11,DIM5A,DIM2A
          PACK      DIM8A,DIM5A,DOT,DIM2A
          MOVE      DIM8A,FORMA5P2
          UNPACK    EXCSEG12,DIM5B,DIM2B
          PACK      DIM8B,DIM5B,DOT,DIM2B
          MOVE      DIM8B,FORMB5P2
.
          MOVE      SP70,HCEMDESC
          MATCH     SP3,EXCSEG13                * explanation code blank ?
          IF        !@EQUAL
            MOVE      "Unknown Code",HCEMDESC
            MOVE      EXCSEG13,KEY3
            CALL      RDHCEMS1
          ENDIF
.
          UNPACK    HCEMDESC,KEY22
          PRINT     *1,PIPE,*3,EXCSEG03,*7,PIPE,*9,EXCSEG05,SP1,EXCSEG06:
                    *21,PIPE,*23,EXCSEG07,*28,PIPE,*30,EXCSEG15:
                    *49,EXCSEG08,*62,PIPE,*64,EXCSEG09,*70,PIPE,*72,CPDATE:
                    *81,PIPE,*83,FORMA5P2,*92,PIPE,*94,FORMB5P2:
                    *103,PIPE,*105,EXCSEG13,SP1,KEY22,*132,PIPE
.
          CALL      LINE0000                     * print line
.
          ADD       TWO,CLNO                     * increment line count
.
ELIN9999  RETURN
+
.****************************************************************************
.*                            DLIN0000                 Called by: DEPT0000  *
.*             Print claim summary line details                             *
.****************************************************************************
.
DLIN0000  COMPARE   CLNO,FIFTY6                  * page full ?
          IF        @LESS
            CALL      PHED0000                   * printer page header
            CALL      DHED0000                   * print claim summary header
          ENDIF
.
          UNPACK    DEPSEG06,DIM7A,DIM2A
          PACK      DIM10A,DIM7A,DOT,DIM2A
          MOVE      DIM10A,FORMA7P2
.
          UNPACK    DEPSEG05,CDAY,CMON,CCENT,CYEAR
          CALL      PACDATE
          PRINT     *1,PIPE,*3,DEPSEG03:
                    *12,PIPE,*14,CPCDATE:
                    *35,PIPE,*37,FORMA7P2:
                    *132,PIPE
.
          CALL      LINE0000                     * print line
.
          ADD       TWO,CLNO                     * increment line count
.
DLIN9999  RETURN
+
.****************************************************************************
.*                            PHED0000                 Called by: PROC0000  *
.*                       Print page heading                       ELIN0000  *
.****************************************************************************
.
PHED0000  CALL      HEAD132                      * display page header
.
          MOVE      THREE,CLNO                   * set line count
.
PHED9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: EHED0000  *
.*                      Draw line across page                     ELIN0000  *
.*                                                                SHED0000  *
.*                                                                CSTM0000  *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
.****************************************************************************
.*                               PERR0000          Called by: lots          *
.*                Print error line                                          *
.* Requires: ERORDESC - Error description                                   *
.****************************************************************************
.
PERR0000  PRINT     *1,PIPE,*3,ERORDESC:
                    *132,PIPE
.
          ADD       ONE,CLNO                     * increment line count
.
PERR9999  RETURN
+
.****************************************************************************
.*                             CLHD0000            Called by: PROC0000      *
.*                 Clear statement header fields                            *
.****************************************************************************
.
CLHD0000  MOVE      SP3,HEDSEG03
          MOVE      SP2,HEDSEG04
          MOVE      SP8,HEDSEG05
          MOVE      SP8,HEDSEG06
          MOVE      SP1,HEDSEG07
          MOVE      SP8,HEDSEG08
          MOVE      SP3,HEDSEG09
          MOVE      SP3,HEDSEG10
          MOVE      SP70,HEDSEG11
.
CLHD9999  RETURN
+
.****************************************************************************
.*                        CLCL0000                 Called by: PROC0000      *
.*              Clear claim statement fields                                *
.****************************************************************************
.
CLCL0000  MOVE      SP4,CLMSEG03
          MOVE      SP5,CLMSEG04
          MOVE      SP1,CLMSEG05
          MOVE      SP6,CLMSEG06
          MOVE      SP8,CLMSEG07
          MOVE      SP8,CLMSEG08
          MOVE      SP8,CLMSEG09
          MOVE      SP8,CLMSEG10
          MOVE      SP10,CLMSEG11
.
CLCL9999  RETURN
+
.****************************************************************************
.*                       CEXP0000                  Called by: PROC0000      *
.*                Clear the exception fields                                *
.****************************************************************************
.
CEXP0000  MOVE      SP2,EXCSEG03
          MOVE      SP2,EXCSEG04
          MOVE      SP9,EXCSEG05
          MOVE      SP1,EXCSEG06
          MOVE      SP1,EXCSEG07
          MOVE      SP20,EXCSEG08
          MOVE      SP5,EXCSEG09
          MOVE      SP6,EXCSEG10
          MOVE      SP7,EXCSEG11
          MOVE      SP7,EXCSEG12
          MOVE      SP3,EXCSEG13
          MOVE      SP2,EXCSEG14
          MOVE      SP20,EXCSEG15
          MOVE      SP6,EXCSEG16
.
CEXP9999  RETURN
+
.*****************************************************************************
.*        I/O Includes                                                       *
.*****************************************************************************
.
          INC       STD001IO
.
          INC       HICBTCIO/INC
          INC       HICEMSIO/INC
          INC       HICEFCIO/INC
          INC       HICRCCIO/INC
.         INC       HICRCIIO/INC
          INC       HICRCHIO/INC
          INC       HICEFXIO/INC
+
