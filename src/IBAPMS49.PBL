.******************************************************************************
.* System  : Patient                                                          * 
.* Program : IBAPMS49                                                         *
.* Desc    : Process Data for HCS Transmission                                *
.******************************************************************************
.* Date    : 11/09/1990                                                       *
.* Authors : Robert Sumsion  (extracted from IBAPMS49 - I.Chung & G.Hobby)    *
.* Mods    :                                                                  *
.*                                                                            *
.******************************************************************************
.*        V12.00.03 24.09.2025  Alina Bhari    TSK 0962345                    *
.*                  Report 999 when no record found for triage score -GTRIA800*
.*        V12.00.02 30.06.2025  Alina Bhari    TSK 0955908                    *
.*                  Default DOYR2024 validation of Sex in DOYR2025 - GCEP3000 *
.*        V12.00.01 22/05/2025  Alina Bhari   TSK 0955096                     *
.*                  Added alpanumeric visit number generation                 *
.*                  UKEY0000 - Not compatible for Alphanumeric Visit Number   *
.*        V11.05.07 06.05.2025  Alina Bhari    TSK 0955908                    *
.*                  Don't report palliate care P5 record when doing the       *
.*                  rest of rear reconcile. Added ROYFLAG branch to PALA0000  *
.*        V11.05.06 01.05.2025  Alina Bhari    TSK 0955908                    *
.*                  Fixed issue with sending 000 for blank triage score other *
.*                  than DOYR2025 - GTRIA000                                  *
.*        V11.05.05 28.04.2025  Alina Bhari    TSK 0955908                    *
.*                  Added validation to send 000 for blank triage score other *
.*                  that DOYR2025 - GTRIA000                                  *
.*        V11.05.04 17.04.2025  Alina Bhari    TSK 0955908                    *
.*                  Removed error message for triage score 100 - GTRIA000     *
.*                  Removed Validating NDIS Participant Flag for extra episode*
.*                  detail - EXEP0000,EXEP0100                                *
.*                  Left Justfied the cluster ID(PTEDDCID) - CULSTRID,GDSC3000*
.*                  Added DOYR2025 Validation - GTNDIS00,PDGR0000,PDGR0250    *
.*        V11.05.03 20.02.2025  Alina Bhari    TSK 0957145                    *
.*                  Correctly displayed the postcode and suburb for overseas  *
.*                  patient -PTSB3000                                         *
.*        V11.05.02 13.02.2025  Alina Bhari    TSK 0955908                    *
.*                  PRS2/VAED July 2025 changes (DOYR2025)                    *
.*                  Send 999 instead of 000 when Triage scrore on admission   *
.*                  is blank - GTRIA900,GTRIA700                              *
.*                  Send valid Value(4) for NDIS Participant for VAED Extract *
.*                  - GTNDIS00                                                *
.*                  Implemented Diagnosis Cluster Idendifier (DCID1-DCID100)  *
.*                  Send DCID field PTEDDCID (space if value empty) for each  *
.*                  Diagnosis - GDSC0000,GDSC3000                             *
.*                  Send DCID fields in the X5 Diagnosis Record (pos 1-12)    *
.*                  - PDGR0000,PDGR0250                                       *
.*                  Send DCID filed in Y5 Extra Diagnosis Record(pos 13-25,   *
.*                  26-40,41-100) - PXDG1000,PXDG1500                         *
.*        V11.05.01 12.12.2024  Ebon Clements  TSK 0954562                    *
.*                  Added OS post code validation without uppercase           *
.*                  suburb - PTSB0000                                         *
.*        V11.04.16 22.19.2024  DA Sarkies     TSK 0952484                    *
.*                  Changed size of 000000000 as it was too long              *
.*        V11.04.15 22.19.2024  DA Sarkies     TSK 0952484                    *
.*                  Added check to exclude 000000000 from NDIS identifier     *
.*        V11.04.14 06/09/2024  Ebon Clements  TSK 0950581                    *
.*                  Changed 720 error to test care type 4 - GACT7000          *
.*        V11.04.13 19/08/2024  Ebon Clements  TSK 0950524                    *
.*                  Allow blank gender for pre July 2024 cancelled admissions *
.*                  GTIGEN00                                                  *
.*        V11.04.12 25/07/2024  Bella Turco    TSK 0948287                    *
.*                  Program Identifier & Funding Arrangement no longer report *
.*                  blank values when an error is thrown in spool report      *
.*        V11.04.11 25/07/2024  Bella Turco    TSK 0948287                    *
.*                  Fixed error validation for 20240701 changes to reporting  *
.*                  Program Identifier and Funding Arrangement                *
.*        V11.04.10 17/07/2024  Bella Turco    TSK 0948287                    *
.*                  Removed reporting of Program Identifier '13' (GCEP5000)   *
.*                  & Funding Arrangement 'B' for 1/7/24 onwards (SFDA0500)   *
.*                  Changed Proceduralist ID error validation (GPRO0000)      *
.*        V11.04.09 09/07/2024  Nikitha B      TSK 0948543                    *
.*                  Modified to skip to next record if the discharge date is  *
.*                  before 01 July 2024 at VNDI5021.                          *
.*        V11.04.08 01/07/2024  Thanh T        TSK 0948274                    *
.*                  Changed GCEP4000 for sex at birth validation              *
.*        V11.04.07 01/07/2024  Ebon Clements  TSK 0947087                    *
.*                  Only subtract leave without permission days from total    *
.*                  leave days if leave without permission is greater than    *
.*                  zero LEAV0000                                             *
.*        V11.04.06 28/06/2024  Bella Turco    TSK 0948287                    *
.*                  Changed NDIS Identifier validation to follow new rules in *
.*                  GTNDIS30                                                  *
.*        V11.04.05 25/06/2024  Ebon Clements  TSK 0944269                    *
.*                  Report ACAS status for care type 9                        *
.*                  Geriatric Evaluation and Management - GACAS000            *
.*        V11.04.04 01/05/2024  Jacob Jackson  TSK 0941762                    *
.*                  Add DOYR2024 parameters for areas where DIAG41-100 exist  *
.*                  and ensure valid discharge delays are not causing errors  *
.*        V11.04.03 26/04/2024  Jacob Jackson  TSK 0941762                    *
.*                  Recompiled for PATECDFD                                   *
.*        V11.04.02 24/04/2024  Jacob Jackson  TSK 0941762                    *
.*                  VAED PRS/2 July 2024 Changes                              *
.*        V11.04.01 19/12/2023  Davin          TSK 0940352                    *
.*                  Added 'R' as valid accommodation type (GACT1400)          *
.*                  Removed '8' as valid accommodation type (GACT2500)        *
.*        V11.03.26 10.11.2023  Ebon Clements  TSK 0939103                    *
.*                  Report the first ECT produdures date/time/proceduralist   *
.*                  for private hospitals if the first coded procedure        *
.*                  doesn't require a date/time/proceduralist.                *
.*                  GOPC0000 GPRO000                                          *
.*        V11.03.25 23.10.2023  Alina Bhari    TSK 0934161                    *
.*                  Test care plan documented date against seperation date.   *
.*                  DDATE instead of EPISDATE - CPDD0000                      *
.*        V11.03.24 23.10.2023  Ebon Clements  TSK 0938775                    *
.*                  Added DRG 11 functionality - GDRG0000                     *
.*        V11.03.23 02.10.2023  Ebon Clements  TSK 0937979                    *
.*                  Added PMI file reads to GDEP0000                          *
.*        V11.03.22 27.09.2023  DA Sarkies     TSK 0931017                    *
.*                  Recompiled for PRS2DAYS.PBL                               *
.*        V11.03.21 21/09/2023  Ebon Clements  TSK 0937966                    *
.*                  Report error 714 if proceduralist is blank and            *
.*                  mandatory on the first procedure - GPRO0000               *
.*        V11.03.20 09/05/2023  Alina Bhari    TSK 0936616                    *
.*                  Report Medicare suffix from patient given name TO patient *
.*                  firstname -MSFX2100, CHAS3400, CHAS3500, CHAS3700,        *
.*                  CHAS3900, CHAS4000                                        *
.*        V11.03.19 07/08/2023  Don Nguyen     TSK 0934444                    *
.*                  Modified validation to allow the 'Medically Ready for     *
.*                  Discharge Date' to be the same or after the Admission Date*
.*        V11.03.18 03/08/2023  Don Nguyen     TSK 0934444                    *
.*                  Re-worded the error message 745 for consistency.          *
.*        V11.03.17 02/08/2023  Don Nguyen     TSK 0934444                    *
.*                  Added validation for 'Medically Ready for Discharge Date' *
.*                  (if collected) to ensure that the admission date is prior.*
.*                  Added new rejection error message R745.                   *
.*        V11.03.16 31/07/2023  Don Nguyen     TSK 0931539                    *
.*                  Leave Qualification Status as "X" for admission type with *
.*                  HDP Default "A", as per clarifcation with support team.   *
.*        V11.03.15 31/07/2023  Don Nguyen     TSK 0931539                    *
.*                  Re-worked code for the Funding Arrangement (EPISPFDA)     *
.*                  mapped value of 'N' (NHRA-funded) to be used when no      *
.*                  Admission Special Funding Arrangement record (patasfaf)   *
.*        V11.03.14 17/07/2023  Ebon Clements  TSK 0934230                    *
.*                  Fixed reporting of phase of care 10 leave days and final  *
.*                  phase or care leave days - PALA0000 - POCLDAYT POCLDAYF   *
.*                  Corrected E740 total leave and palliative care leave      *
.*                  days not equal edit VLPALD00                              *
.*        V11.03.13 14/07/2023  Don Nguyen     TSK 0931539                    *
.*                  Corrected code to send 'N' at position 232 (E5) for the   *
.*                  Funding Arrangement mapped value of 'NHRA-funded highly   *
.*                  specialised therapy' as per the updated programmer note.  *
.*        V11.03.12 11/07/2023  Don Nguyen     TSK 0931539                    *
.*                  Mapped Funding Arrangement when Cat.A - HDP Default value *
.*                  equals 'A' for 'NHRA-funded highly specialised therapy'   *
.*                  and send 'N' as the Qualification Status (QUALSTAT).      *
.*        V11.03.11 29/06/2023  Don Nguyen     TSK 0934444                    *
.*                  Restored 2022 sex at birth edits (SEXDSC00 & GCEP3000)    *
.*        V11.03.10 26/06/2023  Don Nguyen     TSK 0934162                    *
.*                  Amended sex validation (SEXDSC00 & GCEP3000) for Jul 2023 *
.*        V11.03.09 16/06/2023  Don Nguyen     TSK 0928367                    *
.*                  Added validation to ignore subsequent Procedure (ICD10)   *
.*                  codes (after the 1st) when extracting the Start Date/Time.*
.*        V11.03.08 15/06/2023  Don Nguyen     TSK 0928367                    *
.*                  Moved read of 'Unplanned return to theatre' from the      *
.*                  Episode record to the Diagnosis record.                   *
.*        V11.03.07 14/06/2023  Don Nguyen     TSK 0928367                    *
.*                  Skip NDIS Participant Flag (EXENDIS) validation if it is  *
.*                  NOT set and send a value of "4" in the E5 record instead. *
.*                  No longer send the ICD10 Start Date/Time (EPPROCDT) if it *
.*                  is NOT mandatory (PT0ODTMN=1).                            *
.*        V11.03.06 18/05/2023  Don Nguyen     TSK 0928367                    *
.*                  Corrected X5 record length to include 'Unplanned return   *
.*                  to theatre' (EPUNPRTT)                                    *
.*        V11.03.05 17/05/2023  Don Nguyen     TSK 0928367                    *
.*                  PRS2/VAED July 2023 changes (DOYR2023)                    *
.*                  15/05/2023  Alina Bhari    Task 0927506                   *
.*                  Fixed care plan documented date and seperation date error *
.*        V11.03.04 17/01/2023  Bella Turco    TSK 0926675                    *
.*                  Added Funding Arrangement - Co-Ordinated Care in SFDA0500 *
.*        V11.03.03 13/12/2022  Ebon Clements  Task 0927696                   *
.*                  Ignore X prefix operations when checking for unplanned    *
.*                  theatre requests - UNPL0000                               *
.*        V11.03.02 16/11/2022  Ebon Clements  Task 0926750                   *
.*                  Don't include leave without permission in leave with      *
.*                  permission days. Don't allow negative leave with          *
.*                  permission values - LEAV0000. Reversed 0881510 change     *
.*        V11.03.01 15/11/2022  Ebon Clements  Task 0926750                   *
.*                  Restored original leave with permission days calculation  *
.*                  LEAV0000 - Removed V11.02.06 changes                      *
.*        V11.02.07 18/10/2022  Jill Parkinson Task 0924588                   *
.*                  Mods for blank unplanned theatre                          *
.*        V11.02.06 26/09/2022  Ebon Clements  Task 0913482                   *
.*                  Added PRS2LWIP to calculate leave with permission days.   *
.*                  LEAV0000                                                  *
.*        V11.02.05 19/09/2022  Jill Parkinson Task 0924038                   *
.*                  Moved default of 9 to unplanned theatre                   *
.*        V11.02.04 12/09/2022  Jill Parkinson Task 0924038                   *
.*                  Added check for F to determine if unplanned theatre is    *
.*                  required to be sent                                       *
.*                  Also to trigger an E5 for patients coded with a proc that *
.*                  requires it to be sent                                    *
.*        V11.02.03 09/09/2022  PJ Le Febour   Task 0923766                   *
.*                  Error 307 Invalid Postcode replaced with                  *
.*                  Error 058 Invalid Postcode/Locality                       *
.*        V11.02.02 23/05/2022  Jill Parkinson Task 0915984                   *
.*                  Changed cat KB to use indicator 3, use Y6 first           *
.*        V11.02.01 21/04/2022  Jill Parkinson Task 0915984                   *
.*                  July 2022 changes                                         *
.*        V11.01.09 16/09/2021  Davin         TSK 0911056                     *
.*                  Mods to use Cat.G indc5 for sex (SEXDSC00)                *
.*        V11.01.08 15/09/2021  Thanh T       TSK 0889595                     *
.*                  Recompiled for PMSDAUFD changes                           *
.*        V11.01.07 27/08/2021  Jill Parkinson Task 0910492                   *
.*                  Added check for U in accmtype to allow all ages and stop  *
.*                  newborn only error message                                *
.*        V11.01.06 17/06/2021  Davin          Task 0907416                   *
.*                  Added separation modes J and L (GCAV0000/CTSM0000)        *
.*        V11.01.05 16/06/2021  Jill Parkinson Task 0907716                   *
.*                  Reset to July 1 2021                                      *
.*        V11.01.04 03/06/2021  Jill Parkinson Task 0906537                   *
.*                  Changed to use cat BT indicator 15 if set to K            *
.*        V11.01.03 13/04/2021  Jill Parkinson Task 0902601                   *
.*                  July 1 2021 changes - DATES SET TO 01 JANUARY FOR TESTING *
.*        V11.01.02 24/03/2021  Jill Parkinson Task 0903655                   *
.*                  VAED Bulletin march - elective surgery blitz              *
.*                  Cat PK allows 13                                          *
.*                  Cat A will send B for elective surg blitz if ind 18=B     *
.*        V11.01.01 18/02/2021  Jill Parkinson Task 0882774                   *
.*                  Fixed care plan documented date warning output            *
.*        V11.00.10 14/12/2020  Tracey Nguyen  TSK 0899802                    *
.*                  Added in DRG 10.0                                         *
.*        V11.00.09 25/09/2012  J.Tan          TSK 0896676                    *
.*                  Recompiled for PRS2CLASS - Private Hospital to allow M5   *
.*        V11.00.08 24/09/2020  J.Tan          Task 0896676                   *
.*                  Mod to exclude Non Disc. for Error 419 Contract Id= "0710"*
.*        V11.00.07 15/09/2020  J.Tan          Task 0896676                   *
.*                  Mod checking for Contract/Spoke Id= "0710"                *
.*        V11.00.06 10/06/2020  Jill Parkinson Task 0892854                   *
.*                  Corrected 2019 edit E192                                  *
.*        V11.00.05 22/05/2020  Jill Parkinson Task 0891029                   *
.*                  Corrected definition of death place as 2 chars not 3      *
.*        V11.00.04 13/05/2020  Jill Parkinson Task 0891029                   *
.*                  Changed July 1 2020 changes to July 1 20221               *
.*        V11.00.03 09/04/2020  Tracey Nguyen  Task 0887397                   *
.*                  Statistical 2020 changes - removed ';' in WRITE to medium *
.*        V11.00.02 30/03/2020  Tracey Nguyen  Task 0887397                   *
.*                  Statistical 2020 changes:                                 *
.*                  1)Added EXENDIS in J5 extract layout to send the field    *
.*                    NDIS Participant Flag and rejection error 722 - VNDIS000*
.*                  2)Added PTRIAGSC in P5 extract layout to send the field   *
.*                    Triage Score on Admission - GTRIA000, PALA0000          *
.*                  3)Added validation for Contract Type of 8 - FCTR0000      *
.*                  4)Replaced DOYR2019 with DOYR2020                         *
.*                  5)Added validation for Proceduralist ID and rejection     *
.*                    errors 714 and 724 - GPRO0000                           *
.*        V11.00.01 10/03/2020  Jill Parkinson Task 0879163                   *
.*                  Added SEXDSCIO include                                    *
.*        V10.15.01 07/10/2019 Jill Parkinson Task 0881510                    *
.*                  Commented out leave days subtraction                      *
.*        V10.14.07 29/04/2019  Peter Vela     Task 0868836                   *
.*                  Changed 20190101 back to 20190701                         * 
.*        V10.14.06 24/04/2019  Peter Vela     Task 0868836                   *
.*                  Fixed spaces assignment for PTCNGNTR = 1                  *
.*        V10.14.05 17/04/2019  Peter Vela     Task 0868836                   *
.*                  Move value to Accommodation Type even if Error 720        *
.*                  occurs GACT3100                                           * 
.*        V10.14.04 15/04/2019  Jill Parkinson Task 0868836                   *
.*                  Appended spaces to blank T5 and U5 records                *
.*        V10.14.03 11/04/2019  Peter Vela     Task 0868836                   *
.*                  Mods to still send U5 and T5 but no statistics if         *
.*                  parameter ptcngntr is set to                              *
.*                  11/04/2019  Peter Vela     Task 0868836                   *
.*                  Fixed Accommodation Type assignment in GACT3100           *
.*                  Fixed Discharge Destination validation in ITRA2000        *
.*        V10.14.02 04/04/2019  Peter Vela     Task 0868836                   *
.*                  Fixed Generate Trailer Record GTRL0000                    *
.*        V10.14.01 15/03/2019  Peter Vela     Task 0868836                   *
.*                  2019 Stat Changes                                         *
.*        V10.13.03 15/10/2018  Jill Parkinson Task 0864870                   *
.*                  Added in DRG 9.0                                          *
.*        V10.13.02 13/08/2018  Ken Bell       TSK 0863196                    *
.*                  Fix Admit/Disch Speciality not picked up for Sameday due  *
.*                  to incorrect assignment for KEY30 reading PATTRNFD table  *
.*        V10.13.01 31/07/2018  Ken Bell       TSK 0858545                    *
.*                  Fix error 648, Blank via HCP (cat PK) is valid            *
.*        V10.12.05 29/05/2018  Nicole Torrisi TSK 0857343                    *
.*                  Added more Contract/Spoke IDs to CHKID000                 *
.*        V10.12.04 09/05/2018  Ken Bell        TSK 0851821                   *
.*                  Test Fixes: O60A missing from Warning 718 logic           *
.*        V10.12.03 07/05/2018  Ken Bell        TSK 0851821                   *
.*                  Test Fixes: (1) Warning 718 fixed the incorrect DRG codes *
.*                              (2) E2 Should be 293, remove space at the end *
.*                              (3) X5 Should not suppress C/R for Disk/Modem *
.*        V10.12.02 24/04/2018  Tracey Nguyen   TSK 0841644                   *
.*                  Recompiled for PMSIMPFD - added impairment group          *
.*        V10.12.01 16/03/2017  Ken Bell       TSK 0851821                    *
.*                  Added July 2018 modifications                             *
.*----------------------------------------------------------------------------*
.*        V10.11.03 08/09/2017  Ebon Clements  TSK 0818097                    *
.*                  Added excluded newborn functionality -  EXNB0000          *
.*        V10.11.02 28/08/2017  Peter Vela     TSK 0844181                    *
.*                  Changed validation in CMHS0000 to check block code        *
.*                  1907                                                      *
.*        V10.11.01 13/07/2017  Jill Parkinson TSK 0825412                    *
.*                  Added check for patpeiaf records for prior year to be     *
.*                  ignored                                                   *
.*        V10.10.03 30/06/2017  Jill Parkinson TSK 0840322                    *
.*                  Removed update of atime and dtime from 0000 to 0001       *
.*        V10.10.02 22/03/2017  Peter Vela     TSK 0833050                    *
.*                  Changed category dp to lj                                 *
.*        V10.10.01 02/03/2017  Peter Vela     TSK 0833050                    *
.*                  2017 Statutory changes                                    *
.*                  Added Death Place to Palliative Care record               *
.*                  Added Private Hospital validation for Duration of         *
.*                  Non Invasive Ventilation                                  *
.*                  Added X to Criterion for Admission validation CRTN0000    *
.*                  Changed Admission Type/Age Edit to 65 years               *
.*        V10.08.13 19/10/2016  Jill Parkinson TSK 0826604                    *
.*                  Removed check for ROYFLAG when get ATSI status            *
.*        V10.08.12 05/10/2016 J.Tan          TSK 0826824                     *
.*                  Recompiled for CALCMVHR - MV Hours calculation            *
.*        V10.08.11 21/09/2016 Jill Parkinson TSK 0826229                     *
.*                  Corrected 2016 change to map icd prefixes from A to P     *
.*        V10.08.10 20/09/2016 Jill Parkinson TSK 0826032                     *
.*                  Added in drg 8                                            *
.*        V10.08.09 18/08/2016 Jill Parkinson TSK 0824192                     *
.*                  Mods to always send funding arrangement, discharged or not*
.*        V10.08.08 29/06/2016 Jill Parkinson TSK 0822713                     *
.*                  Mods to use PTVANHSC if populated for contract id         *
.*        V10.08.07 19/07/2016  J.Tan         TSK 0819914                     *
.*        V10.08.06 15/07/2016  J.Tan         TSK 0819914                     *
.*                  Mods Calculating non ICU MV hours                         *
.*        V10.08.05 06/06/2016 Jill Parkinson TSK 0819914                     *
.*                  Added ICUBED00 - HCP extract allows mechanical ventilation*
.*                  to be added regardless of bed type - but VAED doesn't     *
.*                  This will ignore pticumec if patient has not been in an   *
.*                  ICU or CCU bed                                            *
.*        V10.08.04 19/05/2016 Peter Vela     TSK 0813901                     *
.*                  Commented out EXEP0000 in GAEP0000                        *
.*        V10.08.03 19/05/2016 Peter Vela     TSK 0813901                     *
.*                  Changed Error 649 to Error 648                            *
.*        V10.07.02 12/04/2016 Jill Parkinson TSK 0814515                     *
.*                  Moved call to EXEP0000 to within PEPI0000                 *
.*        V10.08.01 02/04/2016 Steve Armstrong  TSK 0324703                   *
.*                  Recompiled for changes to PATURCFD.                       *
.*                  31/03/2016 Peter Vela     CAR 0813901                     *
.*                  Added 2016 Stat Changes                                   *
.******************************************************************************
.*        V10.07.01 10/12/2015 Peter Vela     CAR 313079                      *
.*                  Commented out duplicate add to PTPDMBED in UTBD0000       *
.*        V10.06.06 02/09/2015 Jill Parkinson CAR 321173                      *
.*                  Changed edit 187 to always notifiable (not error)         *
.*        V10.06.05 24/05/2015 Jill Parkinson CAR 315193                      *
.*                  Added move of ACCTSTAT to PRS2IACC in SSEG5000 to fix     *
.*                  trailer record calculations                               *
.*        V10.06.04 23/05/2015 Jill Parkinson CAR 312723                      *
.*                  Fixed healthlinks and changed dates to 20150701           *
.*        V10.06.03 18/05/2015 Jill Parkinson CAR 312723                      *
.*                  Mods to send funding arrangement for healthlinks          *
.*        V10.06.02 07/05/2015 Peter Vela     CAR 312723                      *
.*                  Changed 20150701 to 20150101 for testing in devtran       *
.*        V10.06.01 16/04/2015 Peter Vela     CAR 312723                      *
.*                  Added 2015 stat changes                                   *
.*        V10.05.09 14/01/2014 Jill Parkinson CAR 310655                      *
.*                  Removed edits 305 and 306 as no longer required           *
.*        V10.05.08 03/11/2014 Sandra Barcham CAR 307789                      *
.*                   Fixed validation for baby diagnosis prefix               *
.*        V10.05.07 24/10/2014 Jill Parkinson CAR 304674                      *
.*                  Fixed check for unqalified in UTSB000 change made for     *
.*                  CAR  293956                                               *
.*        V10.05.06 01/10/2014 Jill Parkinson CAR 305544                      *
.*                  Added check for currform=0 in UKEY0000.  If so, use ptcnukey
.*        V10.05.05 05/09/2014 Jill Parkinson CAR 304962                      *
.*                  Fixed isbuild patytdaf to correct length                  *
.*        V10.05.04 12/08/2014 Sandra Barcham CAR 304863                      *
.*                  Mods to not send carer availability for organ donation    *
.*        V10.05.03 31/07/2014 Jill Parkinson CAR 304228                      *
.*                  Mods to allow P for admission class                       *
.*        V10.05.02 18/07/2014  Davin           CAR 303772                    *
.*                  Get drg from patpgraf based on discharge date grouper     *
.*                  version. (gdrg0000)                                       * 
.*        V10.05.01 15/07/2014 Sandra Barcham   CAR 303275                    *
.*                  Code to force P to X if running June for Private Hosp only*
.*        V10.04.08 07/07/2014 Sandra Barcham   CAR 303003                    *
.*                  Use HDP Equivalent not code for aroc                      *
.*        V10.04.07 03/07/2014 Sandra Barcham   CAR 303052                    *
.*                  Send acas for 2013/2014 for care type 2 & 9               *
.*        V10.04.06 18/06/2014 Steve Armstrong  CAR 301639                    *
.*                  Moved calls to TFILENAM for FNAMEA, FNAMEC & TEMPFILE     *
.*                  into INIT0000.                                            *
.*                  Added calls to KROY0000 & KLAT0000 on exit of program.    *
.*        V10.04.05 15/05/2014 Jill Parkinson   CAR 300600                    *
.*                  Added check for contract atype in GDGR0000 instead of using*
.*        V10.04.04 03/04/2014  Jill Parkinson CAR 299599                     *
.*                  Mods to send spaces for Adm/Re-adm to Rehab after 1/7/14  *
.*        V10.04.03 17/03/2014  Jill Parkinson CAR 294183                     *
.*                  July 2014 changes                                         *
.*        V10.04.02 31/12/2013  Don Nguyen      CAR 294451                    *
.*                  Recompiled for changes to PATYTDFD and PATYTDIO           *
.*                  31/12/2013  Don Nguyen      CAR 294446                    *
.*                  Recompiled for changes to PATMTDFD and PATMTDIO           *
.*        V10.04.01 20/12/2013  Ania P          CAR 294308                    *
.*                  Recompiled for PATRDEFD                                   *
.******************************************************************************
.*        V10.03.25 02/12/2013 Jill Parkinson   CAR 293956                    *
.*                  Commented out check for unqualified newborn in UTBD0000   *
.*        V10.03.24 30/10/2013  Don Nguyen      CAR 293085                    *
.*                  Modified VPOC5100 to skip error if Cat CC = 8             *
.*        V10.03.23 15/10/2013  Jill Parkinson  CAR 292175                    *
.*                  Mods to not output error 434 in GACT5000 if from DSEG0000 *
.*        V10.03.22 20/09/2013  Jill Parkinson  CAR 291239                    *
.*                  Mods to allow complications as first diagnosis            *
.*        V10.03.21 05/09/2013  Jill Parkinson  CAR 290302                    *
.*                  Changed Warning 553 to count as warning not error         *
.*        V10.03.20 07/08/2013  Jill Parkinson  CAR 288306                    *
.*                  Added setting of DISPHASC in PSAL1000 for 2013 change     *
.*        V10.03.19 06/08/2013  Jill Parkinson  CAR 287524                    *
.*                  Added call to GACT0000 in DSEG0000 for july 2013 change   *
.*                  to use bed type on discharge even if no bed day           *
.*        V10.03.18 06/06/2013  Davin           CAR 283509                    *
.*                  Allow Separation Referral 'E' (gsrf0000)                  *
.*        V10.03.17 30/04/2013  Patrick Adair   CAR 282562                    *
.*                  PRS2/VAED July 2013 Changes                               *
.*        V10.03.16 16/01/2013  Jill Parkinson  CAR 279022                    *
.*                  Changed Error 222 to Warning 222                          *
.*        V10.03.15 02/01/2013 Patrick Adair    CAR 261630                    *
.*                  Removed port number from temp file name                   *
.*        V10.03.14 13/12/2012  Davin           CAR 277763                    *
.*                  Only give warnings in cpdd0000 for public hospitals       *
.*        V10.03.13 08/11/2012  Davin           CAR 275977                    *
.*                  Fixed Initialise Phase Of Care variables (ifoc0000)       *
.*        V10.03.12 18/10/2012  Davin           CAR 274522                    *
.*                  Allow adm.criteria value of K (crtn0000)                  *
.*                  Allow admiss. type value of K (atyp0000)                  *
.*                  Allow admiss. srce value of K (asat0000)                  *
.*                  Allow separation type = G if int.to readmit=0 (itra0000)  *
.*                  Don't report ACAS status for organ procure. (caretype=10) *
.*                  Don't report carer avail for organ procure. (caretype=10) *
.*        V10.03.11 01/10/2012  Davin           CAR 243172                    *
.*                  Default episrefl to BLANK if private hospital (gsrf0000)  *
.*        V10.03.10 06/09/2012  Davin           CAR 272425                    *
.*                  Allow care types R1 and R2 for sub acute (S5) records     *
.*                  Added check of patptdaf before writing subacute records   *
.*                  Added check of patptdaf before writing palliative records *
.*        V10.03.09 05/09/2012  Davin           CAR 271487                    *
.*                  Send health fund HDP in EPHLTHFD if populated (fund2000)  *
.*        V10.03.08 29/08/2012  Davin           CAR 271427                    *
.*                  Added check of DOYR2012 in GTAC0000                       *
.*        V10.03.07 28/08/2012  Davin           CAR 272123                    *
.*                  Added setting of DOYR2012 in GTRL0000                     *
.*        V10.03.06 21/08/2012  Davin           CAR 271245,271451             *
.*                  Initialise Phase Of Care variables (ifoc0000)             *
.*                  Don't send S5 record for palliative (care type=8)         *
.*                  Report ACAS status for restorative care (care type=R1/R2) *
.*                  Report Carer availability for rest.care (care type=R1/R2) *
.*        V10.03.05 07/08/2012  Jill Parkinson  CAR 270395                    *
.*                  Added setting of DOYR2012 in GHDR0000                     *
.*                  Added packing and use of KEY94                            *
.*        V10.03.04 31/05/2012  Davin            CAR 260600 VAED-2012         *
.*                  Added Palliative Care record (P5)                         *
.*                  Mods to trailer records                                   *
.*        V10.03.03 04/04/2012  Davin            CAR 260600 VAED-2012         *
.*                  Mods for VAED-2012                                        *
.*        V10.03.02 28/02/2012 Jill Parkinson CAR 245070                      *
.*                  Leave QUALSTAT X for admission type P in QUAL0000         *
.*        V10.03.01 18/11/2011  Mike Laming     CAR 240184                    *
.*                  Changes to IBAPOSTF Post Code table - added State to Keys *
.*        V10.02.05 20/09/2011 Jill Parkinson CAR 250209                      *
.*                  Fixed match to K in SUBA2150                              *
.*        V10.02.04 09/09/2011 Jill Parkinson CAR 250209                      *
.*                  Fixed setting of DOYR2011                                 *
.*        V10.02.03 23/08/2011 Jill Parkinson CAR 248256                      *
.*                  Added goto SUBA2900 for care type=P                       *
.*        V10.02.02 02/05/2011 Saroeun Soeur   CAR 237745                     *
.*                  BRDR0000, OLRI0000 to include test on indicator 12        *
.         V10.02.01 28/03/2011  Mike Laming   CAR 240107                      *
.                   Mods to PATECDaf & PATECOaf variables & Keys - file change*
.         V10.01.04 16/03/2011 Jill Parkinson  CAR 238493                     *
.                   July 2011 changes - patfimaf details                      *
.         V10.01.03 01/02/2011 Jill Parkinson CAR 236722                      *
.                   Changed ACAS to use CALCAGE instead of DAYSEP             *
.         V10.01.02 20/01/2011 Jill Parkinson CAR 236493                      *
.                   Added P as valid funding arrangement                      *
.         V10.01.01 23/12/2010  Mike Laming   CAR 234831                      *
.                   Add error message for invalid Sex Code                    *
.*        V10.00.06 02/09/2010 Jill Parkinson  CAR 229389                     *
.*                  Mods to allow S for care type 8                           *
.*        V10.00.05 18/08/2010 Jill Parkinson  CAR 226494                     *
.*                  Mods to send contract fields for current inpatients       *
.*        V10.00.04 19/05/2010 Jill Parkinson  CAR 221441                     *
.*                  Mods to send sub-acute details for Care type K            *
.*        V10.00.03 07/06/2010  Jill Parkinson    CAR 225495                  *
.*                  Fixed 4 character paticuaf fields                         *
.*        V10.00.02 12/04/2010  Steve Armstrong   CAR 219111                  *
.*                  Recompiled for changes to PATUNAFD.                       *
.*        V10.00.01 07/04/2010 Jill Parkinson  CAR 215709                     *
.*                  July 2010 changes                                         *
.******************************************************************************
.*        V9.12.12  02/03/2010 Sandra Barcham  CAR 217277                     *
.*                  Fix care type K to separation type S                      *
.*        V9.12.11  28/01/2010  Jill Parkinson CAR 214292                     *
.*                  Mods to extract 5.2 and 6.0 grouper versions              *
.*        V9.12.10  06/11/2009  Jill Parkinson CAR 209515                     *
.*                  Added care type K to separation type S and N edits        *
.*        V9.12.09  16/10/2009  Mike Laming   CAR 207222                      *
.*                  Mods to GOPC2000 to check for mandatory Date/Times        *
.*        V9.12.08  02/10/2009 Jill Parkinson    CAR 207187                   *
.*                  Mods to pick up carer available for caretype K            *
.*        V9.12.07  17/09/2009 Sandra Barcham    CAR 206199                   *
.*                  Fix error message for mothers U/R                         *
.*        V9.12.06  15/09/2009 Jill Parkinson    CAR 205970                   *
.*                  Allowed blank procedure start time                        *
.*                  RJ zero fill EPMOTHUR                                     *
.*                  Fixed read of patecoaf in CMHS0000                        *
.*        V9.12.05  09/09/2009 Jill Parkinson  CAR 215646                     *
.*                  Mods to remove : from procedure time                      *
.*        V9.12.04  10/08/2009 Sandra Barcham  CAR 203181                     *
.*                  Fix mother baby link                                      *
.*        V9.12.03  04/08/2009  Jill Habasque  CAR 202700                     *
.*                  Changed edit 057 to be between 10 and 60 (instead of 54)  *
.*        V9.12.02  08/07/2009  Jill Habasque  CAR 200509                     *
.*                  Put back the last change as it shouldn't have been done   *
.*        V9.12.01  18/06/2009  Jill Habasque  CAR 198609                     *
.*                  Mods to always get patasfaf details, even if not discharged*
.*        V9.11.03  12/03/2009  Jill Habasque   CAR 187979                    *
.*                  July 2009 changes                                         *
.*        V9.11.02  08/01/2009  Steve Armstrong   CAR 185927                  *
.*                  Removed isadd on temp file and included extra index in    *
.*                  isbuild.                                                  *
.*        V9.11.01  10/10/2008  J.Tan          CAR 180656                     *
.*                  Added parameter for transmit Palliative care for Priv.Hosp*
.******************************************************************************
.*        V9.10.09  02/09/2008  Jill Habasque  CAR 177469                     *
.*                  Added 8 as valid funding arrangement                      *
.*                  Recompiled for PRS2DAYS                                   *
.*        V9.10.08  25/08/2008  Jill Habasque  CAR 176535 and CAR 175371      *
.*                  Mods to send X as qualstat for admission type B           *
.*                  Recompiled for PRS2DAYS                                   *
.*        V9.10.07  15/08/2008  Jill Habasque  CAR 175371                     *
.*                  Recompiled for PRS2DAYS - mods to include contract leave  *
.*                  as patient bed days                                       *
.*        V9.10.06  18/07/2008  Jill Habasque  CAR 171758                     *
.*                  Moved call to CHAS0000 to be after move to ACCTSTAT       *
.*        V9.10.05  09/07/2008  Jill Habasque  CAR 172586                     *
.*                  Recompiled for PRS2CLAS                                   *
.*        V9.10.04  01/07/2008  Jill Habasque  CAR 170081                     *
.*                  Mods to subtract contract leave days from normal leave    *
.*        V9.10.03  12/06/2008  Jill Habasque  CAR 170081                     *
.*                  Mods to pick up last patasfaf record (instead of first)   *
.*        V9.10.02  07/04/2008  Jill Habasque  CAR 168822                     *
.*                  Added savkey9                                             *
.*        V9.10.01  03/04/2008  Jill Habasque  CAR 161251                     *
.*                  July 2008 changes                                         *
.******************************************************************************
.*        V9.09.13  03/04/2008  Jill Habasque  CAR 163809                     *
.*                  Added storing of PTASACCS in STSG0000                     *
.*        V9.09.12  14/03/2008  Jill Habasque  CAR 159965                     *
.*                  Added check for S in QUAL0000                             *
.*        V9.09.11  14/02/2008  Jill Habasque  CAR 160743                     *
.*                  Removed last two changes and also 603,604,605 and 606 errors
.*        V9.09.10  17/01/2008  Peter Vela    CAR 159465                      *
.*                  Added call to QUAL0000 in DIDV0000 to get qualification   *
.*                  status before GACT0000                                    *
.*        V9.09.09  30/11/2007  Jill Habasque CAR 153600                      *
.*                  Added calls to GACC0000 and GACT0000 in DIDV0000          *
.*        V9.09.08  22/11/2007  Peter Vela    CAR 132264                      *
.*                  Recompiled for PATCHCFD                                   *
.*        V9.09.07  09/11/2007  Jill Habasque CAR 152979                      *
.*                  Added check for caretype=P in SUBA3000                    *
.*        V9.09.06  31/10/2007  Jill Habasque CAR 153405                      *
.*                  Added read of patmi1af in UPEI0000                        *
.*        V9.09.05  27/09/2007  Jill Habasque CAR 150934                      *
.*                  Added P for care type validations                         *
.*        V9.09.04  20/09/2007  Jill Habasque CAR 150402                      *
.*                  Added 9 as valid for 2007 in lins20000                    *
.*        V9.09.03  18/09/2007  Jill Habasque CAR 150393                      *
.*                  Added another call to GSID0000 in GDPEI000                *
.*                  18/09/2007  Jill Habasque CAR 150285                      *
.*                  Added care type P to GCAV0000                             *
.*        V9.09.02  06/09/2007  Jill Habasque CAR 149684                      *
.*                  Added new spoke identifier codes                          *
.*        V9.09.01  24/07/2007  Jill Habasque CAR 145797                      *
.*                  Added call to GSID0000 in GDEP3000                        *
.******************************************************************************
.*        V9.08.15  01/06/2007  Mike Laming  CAR 140164                       *
.*                  Correct DDEST/DSTAT Indicator selection at GSTP0000       *
.*        V9.08.14  16/05/2007  Mike Laming   CAR 139700                      *
.*                  Change Leave error message to warning at label LEAV8000   *
.*        V9.08.13  20/04/2007 Jill Habasque  CAR 139025                      *
.*                  Mods to use PTVANHSC if populated                         *
.*        V9.08.12  19/04/2007 Jill Habasque  CAR 137885                      *
.*                  2007/2008 Mods                                            *
.*        V9.08.11  13/02/2007 Jill Habasque  CAR 135884                      *
.*                  Mods to calculate PEPIDEL for the month (not the YTD)     *
.*        V9.08.10  01/02/2007 Jill Habasque  CAR 132236                      *
.*                  Added clear of DDATE when processing cancelled admissions *
.*        V9.08.09  31/01/2007 Jill Habasque  CAR 132236                      *
.*                  Added setting of NEWSITID for cancelled preadmissions     *
.*        V9.08.08  23.01.2007 Jill Habasque  CAR 131570                      *
.*                  Added use of PTMIXWRD for cancelled preadmissions         *
.*        V9.08.07  19.01.2007 Jill Habasque  CAR 121616                      *
.*                  Added pack of PTYDHOSP with HOSPCODE in  DMRR3000         *
.*        V9.08.06  28.11.2006 Jill Habasque  CAR 125725                      *
.*                  Mods to allow B for admission source and separation type  *
.*        V9.08.05  22.11.2006 Sandra Barcham     125400                      *
.*                  Missing code for drg 5.1                                  *
.*        V9.08.04  20.11.2006 Sandra Barcham     125235                      *
.*                  Fix Multi Campus previous years E2'S                      *
.*        V9.08.03  01.11.2006 Sandra Barcham     122908                      *
.*                  Send blank functional assessment dates and onset if blank *
.*        V9.08.02  24.10.2006  Jill Habasque CAR 121986                      *
.*                  Removed loop of patecmaf in GSCD0000                      *
.*        V9.08.01  18.10.2006  Jill Habasque CAR 121616                      *
.*                  Added check for hospital code in GYTD0000                 *
.******************************************************************************
.*        V9.07.06  14.09.2006  Jill Habasque CAR 119117                      *
.*                  Move spaces to EPREADMT if not discharged (in E3)         *
.*        V9.07.05  01.08.2006  Jill Habasque CAR 113838                      *
.*                  Added check for discharges after end of extract in ITRA000*
.*        V9.07.04  13.07.2006  Jill Habasque CAR 112552                      *
.*                  Fixed GOTO after writing the S2 record                    *
.*        V9.07.03  13.07.2006  Jill Habasque CAR 110934                      *
.*                  Changed VADM0000 to ignore borders instead of error       *
.*        V9.07.02  12.07.2006  Jill Habasque CAR 110776                      *
.*                  Changed IBCNMHOS to PTCNPRSM in GETHOS00                  *
.*        V9.07.01  04.07.2006  Jill Habasque CAR 110994                      *
.*                  Moved call to ITRA0000                                    *
.******************************************************************************
.*        V9.06.03  01.06.2006  Jill Habasque CAR 105246                      *
.*                  July 2006 Changes - removed DOYR2004, DOYR2005            *
.*        V9.06.02  17.05.2006  Jill Habasque CAR 105648                      *
.*                  Fixed loop in GYTD0000                                    *
.*        V9.06.01  12.05.2006  Jill Habasque CAR 99867                       *
.*                  Changed to use PTHSHDPC instead of PTCNHCOD if mult extract
.******************************************************************************
.*        V9.05.01  17.04.2006  Jill Habasque CAR 99867                       *
.*                  Mods to allow multiple extracts                           *
.******************************************************************************
.*        V9.04.20  07/11/2005  Jill Habasque CAR 83019                       *
.*                  Added save of SAVEFORM                                    *
.*                  14/09/2005  Jill Habasque CAR 72430                       *
.*                  Added check for deleted admissions in GMTD0000            *
.*        V9.04.19  10/08/2005  Peter Vela    CAR 71222                       *
.*                  Initialized FORM4 in ICU account class/hrs validation     *
.*                  Made Error 605 and 606 into warnings                      *
.*        V9.04.18  01/08/2005  Jill Habasque CAR 68435                       *
.*                  Added T and H as valid admission sources for Criterion U  *
.*        V9.04.17  15/07/2005  Jill Habasque CAR 67750                       *
.*                  Added doyr2005 around PW mods                             *
.*        V9.04.16  01/07/2005  Jill Habasque CAR 60167                       *
.*                  Fixed dates from 20050601 to 20050701                     *
.*                  Added check for tcindc10 on trbtyp for new account classes*
.*        V9.04.15  30/05/2005  Peter Vela    CAR 60167                       *
.*                  PRS/2 2005 Stat Changes                                   *
.*        V9.04.14  26/05/2005  Jill Habasque CAR 62369                       *
.*                  Moved call to MHSWI000                                    *
.*        V9.04.13  19/05/2005  Peter Vela    CAR 60167                       *
.*                  PRS/2 2005 Stat Changes                                   *
.*        V9.04.12  26/04/2005  Mike Laming   CAR 60271                       *
.*                  Fix assigning NBRDAYS to Leave W/O Permission fields      *
.*        V9.04.11  22/04/2005  Mike Laming   CAR 55430                       *
.*                  Add edits for error messages R308, R553 and R575          *
.*        V9.04.10  14/12/2004  Mike Laming   CAR 55802                       *
.*                  Add reset of FORM4 at WGHT9000 to fix blank EPBAWGHT      *
.*        V9.04.09  07/10/2004  Peter Vela    CAR 53150                       *
.*                  Enhancement Report Code 3 Cesus Report                    *
.*        V9.04.08  29/10/2004  Mike Laming   CAR 54600                       *
.*                  Correct EOR in Y2 record at PXDG0000                      *
.*                  & add Disk/Tape comments for all WRITE statements         *
.*        V9.04.07  18/10/2004  Mike Laming   CAR 53388                       *
.*                  Change SFDA0000 & GDGR0000 to bypass Special Funding if   *
.*                  Admission Type (ATYPE) is not a Special Funding (THCSCOD) *
.*        V9.04.06  15/10/2004  Mike Laming   CAR 54321 (Nice)                *
.*                  Change Day work fields to FORM 5 (from FORM 3 & 4)        *
.*        V9.04.05  01/10/2004  Mike Laming   CAR 53962                       *
.*                  Change WGHT0000 to zero fill EPBAWGHT if not spaces       *
.*        V9.04.04  28/09/2004  Jill Habasque CAR 53393 & 53458               *
.*                  Fixed EPIMHSWI to be "0" filled if there is value in it   *
.*                  (missing match for spaces)                                *
.*        V9.04.03  16/09/2004  Guomin Fu     CAR 53489                       *
.*                  Recompiled for PRS2DAYS
.*                  15/09/2004  Jill Habasque CAR                             *
.*                  Changed to send 5.0 grouper for 2004                      *
.*        V9.04.02  10/09/2004  Guomin Fu     CAR 53393 & 53458               *
.*                  Fixed EPIMHSWI to be "0" filled if there is value in it   *
.*                  otherwise it is left as blank                             *
.*                  Fixed to pack KEY76 instead of KEY58 for post July 1,2004 *
.*                  seperations.                                              *
.*        V9.04.01  23/08/2004  Mike Laming   CAR 52750                       *
.*                  Change UNIQKEY to UNIQKEYL at UKEY2500                    *
.******************************************************************************
.*        V9.03.26  09/08/2004  Peter Vela    CAR 52338                       *
.*                  Fixed Error 389 - Added Separation Referral "L"           *
.*        V9.03.25  04/08/2004  Peter Vela    CAR 52365                       *
.*                  Fixed condition for U in Care Class Validation            *
.*        V9.03.24  27/07/2004  Jill Habasque CAR 50862                       *
.*                  Added call to CHLPYR00                                    *
.*        V9.03.23  23/07/2004  Jill Habasque CAR 50864                       *
.*                  Added error for patpeiaf adms in future extract period    *
.*        V9.03.22  14/07/2004  Jill Habasque                                 *
.*                  Changed FILE2004 to DOYR2004                              *
.*        V9.03.21  05/07/2004  Mike Laming   CAR 51411                       *
.*                  Correct Country Code in EPISUBRB, and re-code building of *
.*                  UNIQKEYL at label UKEY0000                                *
.*        V9.03.20  01/07/2004  Mike Laming  CAR 51349                        *
.*                  Fix Sex code at GDGR0000 & GCEP3000                       *
.*        V9.03.19  21/06/2004  Mike Laming   CAR 49016  July 2004 PRS/2      *
.*                  Change CARETYPE to 2 chars.                               *
.*        V9.03.18  04/06/2004   Peter Vela CAR 49016                         *
.*                  Ported 2004 Statutory Changes over from 5.12              *
.*        V9.03.17  21/04/2004   Sylvek Litewka  CAR 48852                    *
.*                  Modified procedure PEPI0000 to fix a problem where E2     *
.*                  records where duplicated when MEDIUM was set to 0 = Tape. *
.*        V9.03.16  10/02/2004   Davin           CAR 22654                    *
.*                  When looping through patpeiaf for included records        *
.*                  (SADM0000) and deleted records (GDPEI000), also extract   *
.*                  records that have a status of 4 (included & deleted)      *
.*        V9.03.15  13/01/2004   Sylvek Litewka  CAR 20222                    *
.*                  Modified procedures GDSC0000 and GOPC0000 to read ICD     *
.*                  files using new IO routines RDPTICD1 and RDPTICO1 and     *
.*                  patient's discharge date.                                 *
.*        V9.03.14  12/12/2003   Peter Vela CAR 45888                         *
.*                  Fixed Validation for Error 223                            *
.*        V9.03.13  10/12/2003   Peter Vela CAR 41541                         *
.*                  Fixed validation for comparing accident date and claim    *
.*                  date                                                      *
.*                  Added FORM3A and FORM3B and DIM3                          *
.*        V9.03.12  08/12/2003   Peter Vela CAR 44935                         *
.*                  Fixed Admission Source Separation type statistical data   *
.*                  collection                                                *
.*        V9.03.11  03/12/2003   Peter Vela CAR 45856                         *
.*                  Fixed edit for Critical Car Transfer                      *
.*                  24/11/2003   Jill Habasque                                *
.*                  Fixed mtd patient days calculation                        *
.*        V9.03.10  06/10/2003   Peter Vela CAR 43893                         *
.*                  Fixed Medicare Reference No validation                    *
.*                  If Medicare Number is blank then Med Ref no must be blank *
.*        ........  30/09/2003   Peter Vela CAR 43737                         *
.*                  Modified Edit CTSM9000 to allow Care Type 8 and Sep Type S*
.*        V9.03.09  26/09/2003   Jill Habasque CAR 43774                      *
.*                  Fixed on leave at end date calculation                    *
.*        V9.03.08  19/09/2003   Henry Son  CAR 42453                         *
.*                  VIC DHS 2003 changes. Added Hospital and WIES report 13.  *
.*        V9.03.07  16/09/2003   Peter Vela CAR 43118                         *
.*                  Commented out call to PYRC0000                            *
.*        ........  11/09/2003   Peter Vela CAR 43118                         *
.*                  Fixed rebound                                             *
.*        ........  09/09/2003   Peter Vela CAR 43208                         *
.*                  Added J to permitted Care Types for Carer Availability    *
.*        ........  08/09/2003   Peter Vela CAR 43158                         *
.*                  Fixed Qualification Status of E (Elective Surgery) or R   *
.*                  (Rural) will now be sent as qualification status of X     *
.*        ........  03/09/2003   Peter Vela CAR 43118                         *
.*                  Fixed read of Discharge record in SDAT0000                *
.*        ........  02/09/2003   Peter Vela CAR 42563                         *
.*                  Fixed condition for ACAS Age > 50 years old               *
.*                  Included leap years                                       *
.*        ........  29/08/2003   Peter Vela CAR 42820                         *
.*                  Added Rural Patient Initiatives and ESAS to Funding       *
.*                  Arrangement SFDA0000                                      *
.*        ........  15/08/2003   Peter Vela CAR 42192                         *
.*                  Fixed Edit in label CTSM9000 Invalid Care Type...         *
.*        ........  14/08/2003   Peter Vela CAR 42417                         *
.*                  Fixed Geriatric validation of admission type              *
.*        V9.03.06  11/08/2003  Guomin Fu  CAR 42124                          *
.*                  Fixed generating 041 error for patients discharged before *
.*                  1/07/2003. Re-initiating NEWLAYT in GACD0000              *
.*                  11/08/2003   Guomin Fu  CAR 42343                         *
.*                  Fixed admission source code in CHKC0000, added "H" and    *
.*                  removed "Z" and "C"                                       *
.*                  11/08/2003 Guomin Fu CAR 42194                            *
.*                  Removed the edit check 218 for after 1/07/2003            *
.*                  08/08/2003  Guomin Fu     CAR 42124                       *
.*                  Fixed validation for admission source at ASAT0000         *
.*        V9.03.05  05/08/2003  Guomin Fu     CAR 42124                       *
.*                  Added admission type(Cat P) of HDP equivalent L and C     *
.*                  Fixed validation of seperation type(cat DD) for intention *
.*                  to Re-admit                                               *
.*                  25/07/2003  Guomin Fu     SRF 41320                       *
.*                  Fixed qualstat does not include HDP equivalent of H and S *
.*                  in Cat S for qualification status of U or N in Cat A      *
.*        V9.03.04  07/07/2003  Jill Habasque SRF 41131                       *
.*                  Fixed 442 Error - X28.x code only                         *
.*        V9.03.03  01/07/2003  Jill Habasque SRF 38102                       *
.*                  Fixed count of errors                                     *
.*        V9.03.02  24/06/2003  Jill Habasque SRF 38102                       *
.*                  Changes to remaining ins                                  *
.*        V9.03.01  05/06/2003  Jill Habasque SRF 38102                       *
.*                  2003/2004 Mods                                            *
.******************************************************************************
.*        V9.02.33  29/04/2003  Jill Habasque SRF 35150                       *
.*                  Changed to use new patpeiaf layout                        *
.*        V9.02.32  14/04/2003  Jill Habasque SRF 38062                       *
.*                  Changed to send state drg instead of national             *
.*        V9.02.31  18/03/2003  Jill Habasque SRF 37323                       *
.*                  Added update of count of errors for messages              *
.*        V9.02.30  24/12/2002  Jill Habasque SRF 34820                       *
.*                  Added delete of PTD figures from MTD when rerunning       *
.*        V9.02.29  25/11/2002  Jill Habasque SRF 33571                       *
.*                  Added delete of PTD figures from MTD when rerunning       *
.*        V9.02.28  09/10/2002  Jill Habasque SRF 23022                       *
.*                  Added check for Z admission source                        *
.*        V9.02.27  04/10/2002  Jill Habasque SRF 23023                       *
.*                  Fixed write of Y2 records                                 *
.*                  Added admission type W as valid for admission source L    *
.*        V9.02.26  01/10/2002  Jill Habasque                                 *
.*                  Removed CPAP for newborns only error message              *
.*        V9.02.25  26/09/2002  Jill Habasque  SRF 21042                      *
.*                  Added ESAS admission type of W                            *
.*                  Remove rounding error for CPAP duration                   *
.*                  Mods to use pfundh if afundh is invalid                   *
.*        V9.02.24  23/09/2002  Jill Habasque  SRF 22498                      *
.*                  Fixed medicare suffix validation                          *
.*        V9.02.23  13/09/2002  Jill Habasque  SRF 21042                      *
.*                  2002/03 Mods                                              *
.*        V9.02.22  29/08/2002  Jill Habasque  SRF 17573                      *
.*                  Changed to use RTIODAYS instead of NHOSPDAY               *
.*        V9.02.21  19/08/2002  Jill Habasque  20636 and 21087                *
.*                  Added total warnings and errors                           *
.*                  Changed order of E2 records to be by admission date       *
.*        V9.02.20  05/08/2002  Jill Habasque  PRS 10025                      *
.*                  Fixed value of PSAGE                                      *
.*        V9.02.19  05/08/2002  Jill Habasque  PRS 10009                      *
.*                  Added rounding up of TOTBEDHR                             *
.*        V9.02.18  30/07/2002  Greg Horvat      SRF 20212                    *
.*                  Added a check when extracting X2 records to not allow     *
.*                  patients who have discharged prior to the PRS2 golive date*
.*                  30/07/2002  Greg Horvat      SRF 17471 Rebound            *
.*                  Changed the program to save the extract start & end dates *
.*                  & to use these save dates when reading the exclusion /    *
.*                  inclusion file                                            *
.*        V9.02.17  26/06/2002  Jill Habasque SRF 18801                       *
.*                  Added check for blank reason for critical care transfer   *
.*        V9.02.16  17/05/2002  Mike Laming      SRF 17471                    *
.*                  Add check to see if previous exclusions are still excluded*
.*            ~     17/05/2002  Mike Laming      SRF 17123                    *
.*                  Correct NT Postcodes (starting in 0) change EPIPOST to DIM*
.*        V5.09.15  02/05/2002  Greg Horvat      SRF 17001                    *
.*                  Fixed a bug when getting an admins coding details where   *
.*                  the wrong admin details were used to get the total no of  *
.*                  episodes                                                  *
.*        V9.02.14  22/03/2002  Greg Horvat      SRF 15619                    *
.*                  Changed to ignore an admin from the coding & rest of year *
.*                  processing if that admin is excluded on the patpeiaf file *
.*                  for the current period                                    *
.*        V9.02.13  13/03/2002  Jill Habasque 3369                            *
.*                  Added check for discharge before CHCSDTE in GACD0000      *
.*        V9.02.12  07/03/2002  Jill Habasque 3370                            *
.*                  Added check for 8888 postcode in PTSB0000                 *
.*        V9.02.11  12/02/2002  Dean Cramer                                   *
.*                  Include script execute for web extract file directory     *
.*        V9.02.10  29/01/2002  Pat Dirito                                    *
.*                  ICU hrs is now sum of ICU & NCU hrs                       *
.*        V9.02.09  16/01/2002  J.Tan                                         *
.*                  Mods to check for zeros medicare number                   *
.*                  Mods to print error for non matching postcode/suburb      *
.*                  (instead of using the first suburb of the postcode        *
.*        V9.02.08  14/01/2002  J.Tan                                         *
.*                  Set DOB to 0000ccyy if it's an estimated date of birth    *
.*        V9.02.07  09/01/2002  Jill Habasque                                 *
.*                  Added write of P2DTEPSD and P2DTCODD                      *
.*        V9.02.06  18/12/2001  Jill Habasque                                 *
.*                  Mods to not include Disease codes with an X prefix        *
.*        V9.02.05  15/12/2001  Dean Cramer                                   *
.*                  Recompile ONLY for field addition to PATRDEFD             *
.*                  Will need to use new fields when use is specified.        *
.*        V9.02.04  13/12/2001  Jill Habasque                                 *
.*                  Mods to only validate Reason for Critical Care Transfer   *
.*                  if PTCNPRCC is set to Yes                                 *
.*        V9.02.03  29/11/2001  Greg Horvat                                   *
.*                  Changed to default the date of birth to 00/00/2000 when   *
.*                  estimated DOB variable is enabled                         *
.*                  22/11/2001  Greg Horvat      SRF 14235                    *
.*                  Changed to allow adm. type Q with adm. source L           *
.*                  21/11/2001  Greg Horvat                                   *
.*                  Changed the validation of medicare suffix for children    *
.*                  (Son of, Daughter of & Baby of)                           *
.*        V9.02.02  19/11/2001  Dean Cramer                                   *
.*                  Recompiled for IBACOMN - web test in HITEXIT              *
.*        V9.02.01  28/09/2001  Greg Horvat                                   *
.*                  - Changed to allow 3 as a valid admin source code for RCH *
.*                  - Changed to allow 3 as a valid care type code for RCH    *
.*                  - Copied all the changes done in release 5.09 to this     *
.*                    release                                                 *
.*                  - Merged PMSDAT49.INC & PMSPRG49.PBL into this program    *
.*                  26/10/2001  Greg Horvat      SRF 13708                    *
.*                  Fixed the error numbers in the program to match the PRS2  *
.*                  manual                                                    *
.******************************************************************************
.*        V9.00.01  27/07/2001  Dean Cramer                                   *
.*                  Fixed a bug where the admission weight wasnt being        *
.*                  extracted correctly.                                      *
.*                  Fixed reading of bed type for patients prior to 1/7/2001  *
.*        V9.00.B02 11/05/2001  Steve Downing                                 *
.*                  Added new codes for Accom type, Prog Funding Source       *
.*                  Updated grouper version to 4.2                            *
.*        V9.00.B01 17/03/2001  Harvinder HPS                                 *
.*                  Added two files - prsdtlaf and prshrdaf                   *
.******************************************************************************
.*        V5.10.B02 08/03/2001  Greg Horvat      SRF 8741                     *
.*                  Changed the patient days MTD figure in the E2 records to  *
.*                  acutally be MTD figures, not PTD figures (very scary!!!)  *
.*                  07/03/2001  Greg Horvat      SRF 9159                     *
.*                  Changed to read in the PRS2 start & end dates each time   *
.*                  the routine VDAT0000 is called                            *
.*        V5.10.B01 23/02/2001  Steve Downing                                 *
.*                  Mods to read from patpeiaf file                           *
.*        V5.09.B03 17/02/2001  Dean Cramer                                   *
.*                  Include error code numbers as per PRS/2 manual.           *
.*        V5.09.B02 28/12/2000  Dean Cramer                                   *
.*                  Include "Print errors only" option, variable is PRERRFLG  *
.*        V5.08.14  15/11/2000 J.Tan                                          *
.*                  Recompiled for WEB Report Scheduler                       *
.*        V5.08.13  15/11/2000  Greg Horvat      SRF 7288                     *
.*                  Fixed a problem with the automatic changing for program   *
.*                  fund source for patients admitted after 1/7/2000          *
.*        V5.08.12  13/11/2000 J.Tan                                          *
.*                  Mods for WEB - No generate data for a single admission    *
.*        V5.08.11  03/10/2000  Greg Horvat      SRF 6205 & 6336              *
.*                  Fixed a bug where the separation type was incorrect & the *
.*                  same as the care type for an episode (causing error 121)  *
.*        V5.08.10  19/09/2000  Greg Horvat      SRF 5901                     *
.*                  Changed to allow a baby weight of 225 - 9999 grams for    *
.*                  patients admitted after the 1/7/2000                      *
.*        V5.08.09  19/09/2000  Tonii                                         *
.*                  Mods to accept Unknown and Indeterminate as valid         *
.*                  patient sex description                                   *
.*        V5.08.08  16/08/2000  Caleb Sharman                                 *
.*                  Changed Health Fund variables to be 8 chars               *
.*        V5.08.07  17/08/2000  Greg Horvat      SRF 5109                     *
.*                  Changed to treat a care type change of unqual to qual as  *
.*                  1 episode - I dont think its rite but well c              *
.*                  17/08/2000  Greg Horvat                                   *
.*                  Changed to ignore veterian affairs patients when doing    *
.*                  ROY calcs & the patients already in the extract           *
.*                  15/08/2000  Greg Horvat      SRF 5078                     *
.*                  Changed to write the PRS2 start & end dates in the program*
.*                  not the PRS2 common include                               *
.*                  15/08/2000  Greg Horvat      SRF 4913                     *
.*                  Changed to not collect carer availability for care types  *
.*                  U & 0 for patients discharged after 1/7/2000 & to default *
.*                  carer availability to 1 if dead                           *
.*        V5.08.06  25/07/2000  Greg Horvat      SRF 4380                     *
.*                  - Changed to calculate the MTD & YTD figures correctly    *
.*                  - Changed to not default the seperation referral to X for *
.*                    patients which arent a seperation type of home          *
.*        V5.08.05  18/07/2000  Greg Horvat                                   *
.*                  Changed to read the PRS2 start & end dates in the program *
.*                  not the PRS2 common include                               *
.*        V5.08.04  13/07/2000  Greg Horvat                                   *
.*                  - Changed to not display a sub acute warning for each sub *
.*                    acute patient                                           *
.*                  - Changed to write the PRS2 start & end dates to controlf *
.*                    straight after writing the PTD totals to the YTD totals *
.*                    when processing a new run                               *
.*                  - Changed to display the correct patient details when     *
.*                    printing coding errors                                  *
.*                  12/07/2000  Tonii   SRF 634562                            *
.*                  Recompiled for changes in PMSPRG49, added new variables   *
.*                  PRSREP4,PRSRNG4,PRSREP5 & PRSRNG5 in PMSDAT49             *
.*        V5.08.03  16/05/2000  Greg Horvat      SRF 1887                     *
.*                  Added 8 as a valid patactaf medicare suffix               *
.*        V5.08.02  06/06/2000  Tonii                                         *
.*                  Changed from KEY10 to KEY14 for the health fund file      *
.*        V5.08.01  05/05/2000  Greg Horvat      00/01 PRS2 Mods              *
.*                  Changes for 2000                                          *
.*        V5.08.B07 06/04/2000  Greg Horvat      SRF 638893                   *
.*                  Changed the admin weight no matching dx code error to be a*
.*                  warning & to validate correctly                           *
.*        V5.08.B06 22/03/2000  Jill Habasque                                 *
.*                  Added default to zero for EPREADMT                        *
.*        V5.08.B05 17/03/2000  Greg Horvat      SRF 638309                   *
.*                  Changed to extract the E2 deletion records before the     *
.*                  other E2 records                                          *
.*                  16/03/2000  Greg Horvat      SRF 636853                   *
.*                  Changed to not get the accom type & separation type if the*
.*                  patient is discharged                                     *
.*        V5.08.B04 15/03/2000  Greg Horvat                                   *
.*                  Changed to get the coding from the episode coding files   *
.*        V5.08.B03 18/02/2000  Greg Horvat      SRF 637908                   *
.*                  Changed to ignore leave records when calc status segments *
.*                  17/02/2000  Greg Horvat      SRF 637902                   *
.*                  - Changed to not get the medicare suffix if cancelled     *
.*                  - Changed to default the intention to readmit to 0        *
.*        V5.08.B02 15/02/2000  Greg Horvat      SRF 637240 637241            *
.*                  Fixed a problem validating the procedure code type        *
.*        V5.08.B01 05/01/2000  Greg Horvat      SRF 636361 (Rebound)         *
.*                  Fixed geriatric respite error again                       *
.*                  05/01/2000  Greg Horvat      SRF 635451 (Rebound)         *
.*                  Changed the baby weight errors to only appear when coded  *
.*                  05/10/2000  Greg Horvat      SRF 636893                   *
.*                  Changed to get the correct account class after the 1/1    *
.*        V5.07.38  15/12/1999  Greg Horvat      SRF 636354                   *
.*                  Recompiled for PRS2CLAS - Added account class MA          *
.*                  20/12/1999  Greg Horvat      SRF 636361                   *
.*                  Fixed geriatric respite error                             *
.*                  20/12/1999  Greg Horvat      SRF 635451                   *
.*                  Changed the baby weight errors to only appear when disch'd*
.*                  20/12/1999  Greg Horvat      SRF 636076                   *
.*                  Changed the sub acute missing error to be a warning       *
.*                  21/12/1999  Greg Horvat      SRF 636582                   *
.*                  Fixed the extraction of the medicare suffix               *
.*        V5.07.37  13/12/1999  Greg Horvat                                   *
.*                  Recompiled for PATM10T9 - Fixed obstetric & tendon injury *
.*                  complex mapping bugs                                      *
.*        V5.07.36  26/11/1999  Davin                                         *
.*                  Changed for 4 character drgs                              *
.*        V5.07.35  25/11/1999  Greg Horvat                                   *
.*                  Removed the qual status segment check                     *
.*        V5.07.34  24/11/1999  Greg Horvat                                   *
.*                  Default the carer avaliability to carer not needed for    *
.*                  statistical separations                                   *
.*                  22/11/1999  Greg Horvat      SRF 635677 635698            *
.*                  Fixed a bug where deleted E2 records arent being sent     *
.*                  18/11/1999  Greg Horvat      SRF 635870                   *
.*                  If unknown postcode or no fixed abode send a blank suburb *
.*        V5.07.33  11/11/1999  J.Tan                                         *
.*                  Mods to check for discharge status before set up site id  *
.*        V5.07.32  10/11/1999  Greg Horvat                                   *
.*                  - Changed to only do the qual status segment check when   *
.*                    not doing rest of year calculations                     *
.*                  - Changed to only display every 10th record               *
.*                  - Changed the defaulting of the site id if prior to 1/7/99*
.*        V5.07.31  09/11/1999  Greg Horvat                                   *
.*                  Changed to not write status segments if theres 0 bed days *
.*                  09/11/1999  Greg Horvat      SRF 635645 635672            *
.*                  Fixed error when validating account class                 *
.*                  08/11/1999  Greg Horvat      SRF 635557                   *
.*                  Changed the contract flag/operation code edit check to    *
.*                  only validate when discharged prior to 1/7/1999           *
.*        V5.07.30  05/11/1999  Greg Horvat                                   *
.*                  Recompiled for PATM10T9 - Changed for new complex mapping *
.*                  file structure & added more complex maps                  *
.*        V5.07.29  30/10/1999  Greg Horvat      SRF 635611 635621            *
.*                  Tried fixing accom type stuff again - its a nitemare      *
.*        V5.07.28  22/10/99 J.Tan                                            *
.*                  Fixed number of unqualified episode (public)              *
.*        V5.07.27  21/10/99 J.Tan       SRF 635417                           *
.*                  Fixed CHDATE before calling PRS2CLAS                      *
.*        V5.07.26  14/10/99 J.Tan       SRF 635122                           *
.*                  Mods to check for Qualification baby (COUNTQ)             *
.*        V5.07.25  11/10/1999  Greg Horvat      SRF 635121                   *
.*                  Fixed a bug where certain babies coding wasnt being sent  *
.*        V5.07.24  02/10/1999  Greg Horvat                                   *
.*                  Changed to get the correct accommodation type             *
.*                  30/09/1999  Jill Habasque SRF 634980                      *
.*                  Changed EPIPRGFS to allow 3 (not 1 or 2)                  *
.*        V5.07.23  28/09/1999  Greg Horvat                                   *
.*                  Mods to use DAYSEP, redundant code removed                *
.*        V5.07.22  27/09/1999  Greg Horvat      SRF 634785                   *
.*                  Changed to send patients discharged before 1/7/99 in the  *
.*                  correct format                                            *
.*                  27/09/1999  Greg Horvat      SRF 634712                   *
.*                  Fixed the validation of the discharge destination with the*
.*                  intention to readmit                                      *
.*        V5.07.21  22/09/1999  Greg Horvat                                   *
.*                  - Changed to not send cancelled admissions coding records *
.*                  - Changed the calculation of acute separations as they    *
.*                    didnt include unqualified babies                        *
.*                  - Changed the account status validation for non resident  *
.*                    patients                                                *
.*                  - Changed the calculation of the accommodation type       * 
.*        V5.07.20  14/09/1999  Greg Horvat      SRF 634608                   *
.*                  - Fixed error with health fund & level of insurance       *
.*                  - Changed carer aval error if carer not needed            *
.*                  - Changed to use the previous year account status from    *
.*                    pataccaf if before 1/7/99                               *
.*                  - Fixed a bug calculating the total bed hours             *
.*                  - Fixed a bug formatting the U/R no                       *
.*        V5.07.19  08/09/1999  Greg Horvat      SRF 634540                   *
.*                  Fixed child incompatible carer availability error message *
.*                  08/09/1999  Greg Horvat      SRF 634564                   *
.*                  Changed to check for 'Baby of' when getting the medicare  *
.*                  suffix                                                    *
.*        V5.07.18  08/09/1999  Greg Horvat      SRF 634514                   *
.*                  - Changed to not subtract contract leave days from total  *
.*                    leave days                                              *
.*                  - Changed the separation referral to default to X if the  *
.*                    separation type is H for home                           *
.*                  08/09/1999  Andrew Peel      SRF 634508                   *
.*                  Added S as a valid HDP equivalent for the criterion admiss*
.*        V5.07.17  06/09/1999  Davin                                         *
.*                  Fixed validation of diagnosis codes for babies            *
.*        V5.07.16  02/09/1999  Greg Horvat      SRF 634227                   *
.*                  Changed to default the medicare suffix to 0 for newborns  *
.*        V5.07.15  02/09/1999  Davin            SRF 634229                   *
.*                  When validating diag. codes for adm. weights < 999 grams, *
.*                  match type & code - not just code.                        *
.*        V5.07.14  01/09/1999  Greg Horvat      SRF 634342                   *
.*                  Changed to not default the separation referral to X if    *
.*                  blank                                                     *
.*        V5.07.13  27/08/1999  Davin                                         *
.*                  Initialise carer availability to blank                    *
.*        V5.07.12  24/08/1999  Greg Horvat                                   *
.*                  - Changed to default the level of insurance to 6          *
.*                  - Changed to default the site id to 0                     *
.*                  - Changed to only get the separation referral & carer     *
.*                    avail when disch before or during the extract period    *
.*        V5.07.11  19/08/1999  Greg Horvat                                   *
.*                  - Fixed the seperation referral postnatal validation      *
.*                  - Changed carer availability validation for babies        *
.*        V5.07.10  28/07/1999  J.Tan                                         *
.*                  Changes for 1999                                          *
.*                                                                            *
.******************************************************************************
.
          INC       STD001FD
.
          INC       IBAPOSFD/INC
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       OPRDEAFD/INC
          INC       PATACCFD/INC
          INC       PATACTFD/INC
          INC       PATASFFD/INC
          INC       PATATRFD/INC
          INC       PATATRTD/INC
          INC       PATCALAG/INC
          INC       PATCHCFD/INC
          INC       PATCMPFD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATDADFD/INC
          INC       PATVADFD/INC
          INC       PATDAYFD/INC
          INC       PATDHEAD/INC
          INC       PATDO1FD/INC
          INC       PATDRGFD/INC
          INC       PATDSCFD/INC
          INC       PATECAFD/INC
          INC       PATECDFD/INC
          INC       PATECMFD/INC
          INC       PATECOFD/INC
          INC       PATFN1FD/INC
          INC       PATHSPFD/INC
          INC       PMSPRDFD/INC
          INC       PATICDFD/INC
          INC       PATICOFD/INC
          INC       PATICUFD/INC
          INC       PATLISFD/INC
          INC       PATMA1FD/INC
          INC       PATLINFD/INC
          INC       PATMI1FD/INC
          INC       PATFIMFD/INC
          INC       PATMTDFD/INC
          INC       PATPEIFD/INC
          INC       PATPGRFD/INC
          INC       PATPTDFD/INC
          INC       PATRDEFD/INC
          INC       PATSFAFD/INC
          INC       PATTRNFD/INC
          INC       PATUNAFD/INC
          INC       PATURCFD/INC
          INC       PATVISFD/INC
          INC       PATWBHFD/INC
          INC       PATWR1FD/INC
          INC       PATWMAFD/INC
          INC       PATWVEFD/INC
          INC       PATYTDFD/INC
          INC       PMSDAUFD/INC
          INC       PMSFOCFD/INC
          INC       PMSHCPFD/INC
          INC       PMSIMPFD/INC
          INC       PMSPX2FD/INC
          INC       PMSVX1FD/INC
          INC       PRS2CLDF/INC
          INC       PRSDTLFD/INC
          INC       PRSHRDFD/INC
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       VISXDCFD/INC
          INC       WEBERRFD/INC                 * Web Server Error Logging
          INC       PMSCCDFD/INC                 * Concession Card Details
.
. ----- PRS2 file definfition -----
.
WORK      FILE      ASCII, FIXED=264
.
.H2 Header file
.--------------
.Name     Type   Length   Start   Description
.----     ----   ------   -----   -----------
H2        INIT    "H2"      1     Transaction type - H2
H3        INIT    "H3"      1     Transaction type - H3 (after 01/07/2006)
H4        INIT    "H4"      1     Transaction type - H4 (after 01/07/2007)
H5        INIT    "H5"      1     Transaction type - H5 (after 01/07/2012)
.PTCNHCOD DIM       3       3     Hospital code
PRDSTDTE  DIM       8       6     Period start date (ddmmccyy)
PRDEDDTE  DIM       8      14     Period end date (ddmmccyy)
NUMBEDS   DIM       4      22     Number of avaliable beds
RPTOPTN   DIM       1      26     Reporting option
.SP2      DIM       2      27     2 spaces
PRSREP1   DIM       2      29     1st request report code
PRSRNG1   DIM      12      31     1st request report date(mmccyymmccyy)
PRSREP2   DIM       2      43     2nd request report code
PRSRNG2   DIM      12      45     2nd request report date(mmccyymmccyy)
PRSREP3   DIM       2      57     3rd request report code
PRSRNG3   DIM      12      59     3rd request report date(mmccyymmccyy)
PRSREP4   DIM       2      71     4th request report code
PRSRNG4   DIM      12      73     4th request report date(mmccyymmccyy)
PRSREP5   DIM       2      85     5th request report code
PRSRNG5   DIM      12      87     5th request report date(mmccyymmccyy)
.SP139    DIM     139      99     139 spaces
PRSVER    DIM       3     238     Program version number
.
.  from 01/07/2004  ****************************************           *I-49016
PRSTCON   DIM       1      23     Reporting Type Control
PRSTREQ   DIM       1      24     Reporting Type Request
PRSREP6   DIM       2      95     6th request report code
PRSRNG6   DIM      12      97     6th request report date(mmccyymmccyy)
.
.End of Record            241
.
.E5 Episode file
.---------------
.Name     Type   Length   Start   Description
.----     ----   ------   -----   -----------
E5        INIT    "E5"      1     Transaction type - E5 
UNIQKEY   DIM       6       3     Unique key
EPIURNOL  DIM       10     12     Long UR - replaces EPIURNO (8)
EPNSITID  DIM       4      22     New Site ID after
EPIMEDI   DIM      11      26     Medicare number
EPIMCSFX  DIM       3      37     Medicare suffix
EPISEX    FORM      1      40     Sex
EPIMSTAT  FORM      1      41     Marital status
EPIBDATE  DIM       8      42     Date of birth (ddmmccyy)
EPIPOST   DIM       4      50     Postcode                             *C-90216
EPISUBRB  DIM      22      54     Suburb/locality
.
EPIADATR  DIM       8      76     Admission date (ddmmccyy)
EPIATIME  DIM       4      84     Admission time
EPIATYPE  DIM       1      88     Admission type
EPIASRCE  DIM       1      89     Admission source
EPITSRCE  DIM       4      90     Transfer source code 
.
EPILVMTD  FORM      2      94     Month to date leave days
EPILVYTD  FORM      3      96     Year to date leave days
EPILVTOT  FORM      3      99     Total leave days
.
EPIACST1  DIM       2      102    1st episode account status
EPIATYP1  DIM       1      104    1st episode accommodation type
EPIQTYP1  DIM       1      105    1st episode qualification status
EPIABDP1  FORM      2      106    1st episode month to date bed days
EPIABDY1  FORM      3      108    1st episode year to date bed days
EPIABDA1  FORM      4      111    1st episode total bed days
.
EPIACST2  DIM       2      115    2nd episode account status
EPIATYP2  DIM       1      117    2nd episode accommodation type
EPIQTYP2  DIM       1      118    2nd episode qualification status
EPIABDP2  FORM      2      119    2nd episode month to date bed days
EPIABDY2  FORM      3      121    2nd episode year to date bed days
EPIABDA2  FORM      4      124    2nd episode total bed days
.
EPIACST3  DIM       2      128    3rd episode account status
EPIATYP3  DIM       1      130    3rd episode accommodation type
EPIQTYP3  DIM       1      131    3rd episode qualification status
EPIABDP3  FORM      2      132    3rd episode month to date bed days
EPIABDY3  FORM      3      134    3rd episode year to date bed days
EPIABDA3  FORM      4      137    3rd episode total bed days
.
EPIACST4  DIM       2      141    4th episode account status
EPIATYP4  DIM       1      143    4th episode accommodation type
EPIQTYP4  DIM       1      144    4th episode qualification status
EPIABDP4  FORM      2      145    4th episode month to date bed days
EPIABDY4  FORM      3      147    4th episode year to date bed days
EPIABDA4  FORM      4      150    4th episode total bed days
.
EPIACST5  DIM       2      154    5th episode account status
EPIATYP5  DIM       1      156    5th episode accommodation type
EPIQTYP5  DIM       1      157    5th episode qualification status
EPIABDP5  FORM      2      158    5th episode month to date bed days
EPIABDY5  FORM      3      160    5th episode year to date bed days
EPIABDA5  FORM      4      163    5th episode total bed days
.
EPIACST6  DIM       2      167    6th episode account status
EPIATYP6  DIM       1      169    6th episode accommodation type
EPIQTYP6  DIM       1      170    6th episode qualification status
EPIABDP6  FORM      2      171    6th episode month to date bed days
EPIABDY6  FORM      3      173    6th episode year to date bed days
EPIABDA6  FORM      4      176    6th episode total bed days
.
EPIACST7  DIM       2      180    7th episode account status
EPIATYP7  DIM       1      182    7th episode accommodation type
EPIQTYP7  DIM       1      183    7th episode qualification status
EPIABDP7  FORM      2      184    7th episode month to date bed days
EPIABDY7  FORM      3      186    7th episode year to date bed days
EPIABDA7  FORM      4      189    7th episode total bed days
.
EPISDATE  DIM       8      193    Separation date (ddmmccyy)
EPISTIME  DIM       4      201    Separation time
EPISTYPE  DIM       1      205    Separation type
EPISTRFR  DIM       4      206    Separation transfer/trans. destinatn
EPISREFL  DIM       4      210    Separation referral
EPICAVAL  DIM       1      214    Carer availability
EPISACST  DIM       2      215    Separation account status/class
EPISATYP  DIM       1      217    Separation accommodation type
.
EPISCTYP  DIM       2      218    Care type                            *C-49016
EPNEWCOB  DIM       4      220    Country of birth code
EPABRGNL  DIM       1      224    Aboriginality
EPADCRTN  DIM       1      225    Criterion for admission
EPIINLOS  DIM       1      226    Intended LOS
EPHLTHFD  DIM       3      227    Hospital insurance fund
EPILINSR  FORM      1      230    hospital ins status
EPIMNTLS  DIM       1      231    Mental health legal status
.
EPISPFDA  DIM       1      232    Funding arrangement
EPICTTYP  DIM       1      233    Contract type
EPICTROL  DIM       1      234    Contract role
EPICTRID  DIM       4      235    Contract/spoke identifier
EPIMDCLD  DIM       2      239    Contract leave days (MTD)
EPIYDCLD  DIM       2      241    Contract leave days (YTD)
EPITLCLD  DIM       2      243    Total contract leave days
EPIUSERF  DIM       1      245    User flag
.
EPILANG4  DIM       4      246    Preferred Language * after
EPIINTRQ  DIM       1      250    Interpreter Required
EPIACASS  DIM       1      251    ACAS Status
.
EPIMHSWI  DIM       10     252    Mental Health State Wide Identifier
EPILWPMD  DIM       2      262    Leave w/out Permiss. MTD
EPILWPYD  DIM       3      264    Leave w/out Permiss. YTD
EPILWPTL  DIM       3      267    Leave w/out Permiss. Total
.
EPREADMT  DIM       1      270    Intention to readmit ***** moved here
EPDOBACC  DIM       3      271    DOB accuracy (AAA or EEE) after
EPPROGID  DIM       2      274    Program Identifier
EPMOTHUR  DIM       10     276    Mothers UR 
EPISAUNT  DIM       4      286    Admission Unit/Specialty after (01/07/2018)
EPISDUNT  DIM       4      290    Discharge Unit/Specialty after (01/07/2018)
.EPUNPRTT  DIM       1      294    Unplanned return to theatre    (01/07/2022)
EPIGENDR  DIM       1      295    Identifying Gender             (01/07/2023)
ENDISPFL  DIM       1      296    NDIS Participant Flag          (01/07/2023)
ENDISPID  DIM       9      297    NDIS Participant Identifier    (01/07/2023)
.
.End of Record             306
.
UNIQKEYL  DIM       9      3      Long Unique Key - replaces UNIQKEY (6)
EPIURNO   DIM       8      9      U/R number
EPISITID  DIM       1      22     Site id
EPIPRGFS  DIM       1      232    Program funding source
.X5 Diagnosis file
.-----------------
.Name     Type   Length   Start   Description
.----     ----   ------   -----   -----------
X2        INIT    "X2"      1     Transaction type - X2
X3        INIT    "X3"      1     Transaction type - X3 (after 01/07/2006)
X4        INIT    "X4"      1     Transaction type - X4 (after 01/07/2007)
X5        INIT    "X5"      1     Transaction type - X5 (after 01/07/2012)
.UNIQKEY  DIM       6       3     Unique key
DIAG1     DIM       8       9     Diagnosis code 1
DIAG2     DIM       8      17     Diagnosis code 2
DIAG3     DIM       8      25     Diagnosis code 3
DIAG4     DIM       8      33     Diagnosis code 4
DIAG5     DIM       8      41     Diagnosis code 5
DIAG6     DIM       8      49     Diagnosis code 6
DIAG7     DIM       8      57     Diagnosis code 7
DIAG8     DIM       8      65     Diagnosis code 8
DIAG9     DIM       8      73     Diagnosis code 9
DIAG10    DIM       8      81     Diagnosis code 10
DIAG11    DIM       8      89     Diagnosis code 11
DIAG12    DIM       8      97     Diagnosis code 12
PROC1     DIM       8      105    Procedure code 1
PROC2     DIM       8      113    Procedure code 2
PROC3     DIM       8      121    Procedure code 3
PROC4     DIM       8      129    Procedure code 4
PROC5     DIM       8      137    Procedure code 5
PROC6     DIM       8      145    Procedure code 6
PROC7     DIM       8      153    Procedure code 7
PROC8     DIM       8      161    Procedure code 8
PROC9     DIM       8      169    Procedure code 9
PROC10    DIM       8      177    Procedure code 10
PROC11    DIM       8      185    Procedure code 11
PROC12    DIM       8      193    Procedure code 12
EPBAWGHT  DIM       4      204    Admission weight for babies
EPDUSRF   DIM       1      208    User flag
EPDSICUH  DIM       4      209    Duration of ICU stay
EPDCMVH   DIM       4      213    Duration of mechanical ventilation
EPDRG     DIM       4      217    DRG code
EPDSCCU   DIM       4      221    Duration of stay in CCU
EPDCPAPH  DIM       4      225    Duration of CPAP   *after 01/07/2002
EPPROCDT  DIM      12      229    Procedure date/time * after 01/07/2009
EPCPLDDT  DIM       8      241    Care Plan Documented Date * after 01/07/2012
EPPLSTID  DIM      13      249    Proceduralist ID - (ICD10 Library)01/07/2018
EPUNPRTT  DIM       1      262    Unplanned return to theatre 01/07/2023
.
.End of Record             263
.
.Y2 Xtra diagnosis file
.----------------------
.Name     Type   Length   Start   Description
.----     ----   ------   -----   -----------
Y2        INIT    "Y2"      1     Transaction type - Y2
Y3        INIT    "Y3"      1     Transaction type - Y3 (after 01/07/2006)
Y4        INIT    "Y4"      1     Transaction type - Y4 (after 01/07/2007)
Y5        INIT    "Y5"      1     Transaction type - Y5 (after 01/07/2012)
.UNIQKEY  DIM       6       3     Unique key
DIAG13    DIM       8       9     Diagnosis code 13
DIAG14    DIM       8      17     Diagnosis code 14
DIAG15    DIM       8      25     Diagnosis code 15
DIAG16    DIM       8      33     Diagnosis code 16
DIAG17    DIM       8      41     Diagnosis code 17
DIAG18    DIM       8      49     Diagnosis code 18
DIAG19    DIM       8      57     Diagnosis code 19
DIAG20    DIM       8      65     Diagnosis code 20
DIAG21    DIM       8      73     Diagnosis code 21
DIAG22    DIM       8      81     Diagnosis code 22
DIAG23    DIM       8      89     Diagnosis code 23
DIAG24    DIM       8      97     Diagnosis code 24
DIAG25    DIM       8      105    Diagnosis code 25
PROC13    DIM       8      113    Procedure code 13
PROC14    DIM       8      121    Procedure code 14
PROC15    DIM       8      129    Procedure code 15
PROC16    DIM       8      137    Procedure code 16
PROC17    DIM       8      145    Procedure code 17
PROC18    DIM       8      153    Procedure code 18
PROC19    DIM       8      161    Procedure code 19
PROC20    DIM       8      169    Procedure code 20
PROC21    DIM       8      177    Procedure code 21
PROC22    DIM       8      185    Procedure code 22
PROC23    DIM       8      193    Procedure code 23
PROC24    DIM       8      201    Procedure code 24
PROC25    DIM       8      209    Procedure code 25
.SP24     DIM      24      217    24 spaces
.
. after 1/7/2003
DIAG26    DIM       8      217    Diagnosis code 26
DIAG27    DIM       8      224    Diagnosis code 27
DIAG28    DIM       8      232    Diagnosis code 28
DIAG29    DIM       8      240    Diagnosis code 29
DIAG30    DIM       8      248    Diagnosis code 30
DIAG31    DIM       8      256    Diagnosis code 31
DIAG32    DIM       8      264    Diagnosis code 32
DIAG33    DIM       8      272    Diagnosis code 33
DIAG34    DIM       8      280    Diagnosis code 34
DIAG35    DIM       8      288    Diagnosis code 35
DIAG36    DIM       8      296    Diagnosis code 36
DIAG37    DIM       8      304    Diagnosis code 37
DIAG38    DIM       8      312    Diagnosis code 38
DIAG39    DIM       8      320    Diagnosis code 39
DIAG40    DIM       8      328    Diagnosis code 40
PROC26    DIM       8      336    Procedure code 26
PROC27    DIM       8      344    Procedure code 27
PROC28    DIM       8      352    Procedure code 28
PROC29    DIM       8      360    Procedure code 29
PROC30    DIM       8      368    Procedure code 30
PROC31    DIM       8      376    Procedure code 31
PROC32    DIM       8      384    Procedure code 32
PROC33    DIM       8      392    Procedure code 33
PROC34    DIM       8      400    Procedure code 34
PROC35    DIM       8      408    Procedure code 35
PROC36    DIM       8      416    Procedure code 36
PROC37    DIM       8      424    Procedure code 37
PROC38    DIM       8      432    Procedure code 38
PROC39    DIM       8      440    Procedure code 39
PROC40    DIM       8      448    Procedure code 40
.
. after 1/7/2024
DIAG41    DIM       8      456    Diagnosis code 41
DIAG42    DIM       8      464    Diagnosis code 42
DIAG43    DIM       8      472    Diagnosis code 43
DIAG44    DIM       8      480    Diagnosis code 44
DIAG45    DIM       8      488    Diagnosis code 45
DIAG46    DIM       8      496    Diagnosis code 46
DIAG47    DIM       8      504    Diagnosis code 47
DIAG48    DIM       8      512    Diagnosis code 48
DIAG49    DIM       8      520    Diagnosis code 49
DIAG50    DIM       8      528    Diagnosis code 50
DIAG51    DIM       8      536    Diagnosis code 51
DIAG52    DIM       8      544    Diagnosis code 52
DIAG53    DIM       8      552    Diagnosis code 53
DIAG54    DIM       8      560    Diagnosis code 54
DIAG55    DIM       8      568    Diagnosis code 55
DIAG56    DIM       8      576    Diagnosis code 56
DIAG57    DIM       8      584    Diagnosis code 57
DIAG58    DIM       8      592    Diagnosis code 58
DIAG59    DIM       8      600    Diagnosis code 59
DIAG60    DIM       8      608    Diagnosis code 60
DIAG61    DIM       8      616    Diagnosis code 61
DIAG62    DIM       8      624    Diagnosis code 62
DIAG63    DIM       8      632    Diagnosis code 63
DIAG64    DIM       8      640    Diagnosis code 64
DIAG65    DIM       8      648    Diagnosis code 65
DIAG66    DIM       8      656    Diagnosis code 66
DIAG67    DIM       8      664    Diagnosis code 67
DIAG68    DIM       8      672    Diagnosis code 68
DIAG69    DIM       8      680    Diagnosis code 69
DIAG70    DIM       8      688    Diagnosis code 70
DIAG71    DIM       8      696    Diagnosis code 71
DIAG72    DIM       8      704    Diagnosis code 72
DIAG73    DIM       8      712    Diagnosis code 73
DIAG74    DIM       8      720    Diagnosis code 74
DIAG75    DIM       8      728    Diagnosis code 75
DIAG76    DIM       8      736    Diagnosis code 76
DIAG77    DIM       8      744    Diagnosis code 77
DIAG78    DIM       8      752    Diagnosis code 78
DIAG79    DIM       8      760    Diagnosis code 79
DIAG80    DIM       8      768    Diagnosis code 80
DIAG81    DIM       8      776    Diagnosis code 81
DIAG82    DIM       8      784    Diagnosis code 82
DIAG83    DIM       8      792    Diagnosis code 83
DIAG84    DIM       8      800    Diagnosis code 84
DIAG85    DIM       8      808    Diagnosis code 85
DIAG86    DIM       8      816    Diagnosis code 86
DIAG87    DIM       8      824    Diagnosis code 87
DIAG88    DIM       8      832    Diagnosis code 88
DIAG89    DIM       8      840    Diagnosis code 89
DIAG90    DIM       8      848    Diagnosis code 90
DIAG91    DIM       8      856    Diagnosis code 91
DIAG92    DIM       8      864    Diagnosis code 92
DIAG93    DIM       8      872    Diagnosis code 93
DIAG94    DIM       8      880    Diagnosis code 94
DIAG95    DIM       8      888    Diagnosis code 95
DIAG96    DIM       8      896    Diagnosis code 96
DIAG97    DIM       8      904    Diagnosis code 97
DIAG98    DIM       8      912    Diagnosis code 98
DIAG99    DIM       8      920    Diagnosis code 99
DIAG100   DIM       8      928    Diagnosis code 100
.End of Record             936
. 2025-2026  100 new Diagnosis Cluster ID Variables
.Name     Type   Length   Start   Description
DCID1     DIM       2     12      Diagnosis Cluster IDs 1
DCID2     DIM       2     14      Diagnosis Cluster IDs 2
DCID3     DIM       2     16      Diagnosis Cluster IDs 3
DCID4     DIM       2     18      Diagnosis Cluster IDs 4
DCID5     DIM       2     20      Diagnosis Cluster IDs 5
DCID6     DIM       2     22      Diagnosis Cluster IDs 6
DCID7     DIM       2     24      Diagnosis Cluster IDs 7
DCID8     DIM       2     26      Diagnosis Cluster IDs 8
DCID9     DIM       2     28      Diagnosis Cluster IDs 9
DCID10    DIM       2     30      Diagnosis Cluster IDs 10
DCID11    DIM       2     32      Diagnosis Cluster IDs 11
DCID12    DIM       2     34      Diagnosis Cluster IDs 12
DCID13    DIM       2     12      Diagnosis Cluster IDs 13
DCID14    DIM       2     14      Diagnosis Cluster IDs 14
DCID15    DIM       2     16      Diagnosis Cluster IDs 15
DCID16    DIM       2     18      Diagnosis Cluster IDs 16
DCID17    DIM       2     20      Diagnosis Cluster IDs 17
DCID18    DIM       2     22      Diagnosis Cluster IDs 18
DCID19    DIM       2     24      Diagnosis Cluster IDs 19
DCID20    DIM       2     26      Diagnosis Cluster IDs 20
DCID21    DIM       2     28      Diagnosis Cluster IDs 21
DCID22    DIM       2     30      Diagnosis Cluster IDs 22
DCID23    DIM       2     32      Diagnosis Cluster IDs 23
DCID24    DIM       2     34      Diagnosis Cluster IDs 24
DCID25    DIM       2     36      Diagnosis Cluster IDs 25
DCID26    DIM       2     246     Diagnosis Cluster IDs 26
DCID27    DIM       2     248     Diagnosis Cluster IDs 27
DCID28    DIM       2     250     Diagnosis Cluster IDs 28
DCID29    DIM       2     252     Diagnosis Cluster IDs 29
DCID30    DIM       2     254     Diagnosis Cluster IDs 30
DCID31    DIM       2     256     Diagnosis Cluster IDs 31
DCID32    DIM       2     258     Diagnosis Cluster IDs 32
DCID33    DIM       2     260     Diagnosis Cluster IDs 33
DCID34    DIM       2     262     Diagnosis Cluster IDs 34
DCID35    DIM       2     264     Diagnosis Cluster IDs 35
DCID36    DIM       2     266     Diagnosis Cluster IDs 36
DCID37    DIM       2     268     Diagnosis Cluster IDs 37
DCID38    DIM       2     270     Diagnosis Cluster IDs 38
DCID39    DIM       2     272     Diagnosis Cluster IDs 39
DCID40    DIM       2     274     Diagnosis Cluster IDs 40
DCID41    DIM       2     516     Diagnosis Cluster IDs 41
DCID42    DIM       2     518     Diagnosis Cluster IDs 42
DCID43    DIM       2     520     Diagnosis Cluster IDs 43
DCID44    DIM       2     522     Diagnosis Cluster IDs 44
DCID45    DIM       2     524     Diagnosis Cluster IDs 45
DCID46    DIM       2     526     Diagnosis Cluster IDs 46
DCID47    DIM       2     528     Diagnosis Cluster IDs 47
DCID48    DIM       2     530     Diagnosis Cluster IDs 48
DCID49    DIM       2     532     Diagnosis Cluster IDs 49
DCID50    DIM       2     534     Diagnosis Cluster IDs 50
DCID51    DIM       2     536     Diagnosis Cluster IDs 51
DCID52    DIM       2     538     Diagnosis Cluster IDs 52
DCID53    DIM       2     540     Diagnosis Cluster IDs 53
DCID54    DIM       2     542     Diagnosis Cluster IDs 54
DCID55    DIM       2     544     Diagnosis Cluster IDs 55
DCID56    DIM       2     546     Diagnosis Cluster IDs 56
DCID57    DIM       2     548     Diagnosis Cluster IDs 57
DCID58    DIM       2     550     Diagnosis Cluster IDs 58
DCID59    DIM       2     552     Diagnosis Cluster IDs 59
DCID60    DIM       2     554     Diagnosis Cluster IDs 60
DCID61    DIM       2     556     Diagnosis Cluster IDs 61
DCID62    DIM       2     558     Diagnosis Cluster IDs 62
DCID63    DIM       2     560     Diagnosis Cluster IDs 63
DCID64    DIM       2     562     Diagnosis Cluster IDs 64
DCID65    DIM       2     564     Diagnosis Cluster IDs 65
DCID66    DIM       2     566     Diagnosis Cluster IDs 66
DCID67    DIM       2     568     Diagnosis Cluster IDs 67
DCID68    DIM       2     570     Diagnosis Cluster IDs 68
DCID69    DIM       2     572     Diagnosis Cluster IDs 69
DCID70    DIM       2     572     Diagnosis Cluster IDs 70
DCID71    DIM       2     576     Diagnosis Cluster IDs 71
DCID72    DIM       2     578     Diagnosis Cluster IDs 72
DCID73    DIM       2     580     Diagnosis Cluster IDs 73
DCID74    DIM       2     582     Diagnosis Cluster IDs 74
DCID75    DIM       2     584     Diagnosis Cluster IDs 75
DCID76    DIM       2     586     Diagnosis Cluster IDs 76
DCID77    DIM       2     588     Diagnosis Cluster IDs 77
DCID78    DIM       2     590     Diagnosis Cluster IDs 78
DCID79    DIM       2     592     Diagnosis Cluster IDs 79
DCID80    DIM       2     594     Diagnosis Cluster IDs 80
DCID81    DIM       2     596     Diagnosis Cluster IDs 81
DCID82    DIM       2     598     Diagnosis Cluster IDs 82
DCID83    DIM       2     600     Diagnosis Cluster IDs 83
DCID84    DIM       2     602     Diagnosis Cluster IDs 84
DCID85    DIM       2     604     Diagnosis Cluster IDs 85
DCID86    DIM       2     606     Diagnosis Cluster IDs 86
DCID87    DIM       2     608     Diagnosis Cluster IDs 87
DCID88    DIM       2     610     Diagnosis Cluster IDs 88
DCID89    DIM       2     612     Diagnosis Cluster IDs 89
DCID90    DIM       2     614     Diagnosis Cluster IDs 90
DCID91    DIM       2     616     Diagnosis Cluster IDs 91
DCID92    DIM       2     618     Diagnosis Cluster IDs 92
DCID93    DIM       2     620     Diagnosis Cluster IDs 93
DCID94    DIM       2     622     Diagnosis Cluster IDs 94
DCID95    DIM       2     624     Diagnosis Cluster IDs 95
DCID96    DIM       2     626     Diagnosis Cluster IDs 96
DCID97    DIM       2     628     Diagnosis Cluster IDs 97
DCID98    DIM       2     630     Diagnosis Cluster IDs 98
DCID99    DIM       2     632     Diagnosis Cluster IDs 99
DCID100   DIM       2     634     Diagnosis Cluster IDs 100
.
.V2 Veterian affairs file
.------------------------
.Name     Type   Length   Start   Description
.----     ----   ------   -----   -----------
V2        INIT    "V2"      1     Transaction type - V2
V3        INIT    "V3"      1     Transaction type - V3 (after 01/07/2006)
V4        INIT    "V4"      1     Transaction type - V4 (after 01/07/2007)
V5        INIT    "V5"      1     Transaction type - V5 (after 01/07/2012)
.UNIQKEY  DIM       6       3     Unique key
.EPIURNO  DIM       8       9     U/R number
VETNUMB   DIM       9      17     Veterian affairs number
VETSURN   DIM      20      26     Surname
VETGIVN   DIM      12      46     Given name/forename
.EPIADATR DIM       8      58     Admission date (ddmmccyy)
.EPISDATE DIM       8      66     Separation date (ddmmccyy)
VACCDATE  DIM       8      74     Date of Accident (ddmmccyy)
VETUSRF   DIM       1      82     User flag
.SP148    DIM      148     83     170 spaces
.
.End of Record             241
.
.******************************************** Start of addition        *I-49016
.                                           * longer VETSURN & VETGIVN fields
.                                           * to be used from 01/07/2004
VETLSURN  DIM       25            Surname
VETLGIVN  DIM       15            Given name/first name
.********************************************   End of addition        *I-49016
.
.S2 Sub acute file
.-----------------
.Name     Type   Length   Start   Description
.----     ----   ------   -----   -----------
S2        INIT    "S2"      1     Transaction type - S2
S3        INIT    "S3"      1     Transaction type - S3 (after 01/07/2006)
S4        INIT    "S4"      1     Transaction type - S4 (after 01/07/2007)
S5        INIT    "S5"      1     Transaction type - S5 (after 01/07/2012)
.UNIQKEY  DIM       6       3     Unique key
.EPIURNO  DIM       8      12     U/R number
BTHIDXAD  DIM       3      22     Barthel index score on admin. * before 1/7/14
BTHIDXDS  DIM       3      25     Barthel index score on disch. * before 1/7/14
.PTRDCLSP DIM       3      28     Clinical sub program (Cat CU)
ONSETDTE  DIM       8      31     Onset date (ddmmccyy)
.PTRDARTR DIM       1      39     Admission/Readmission to rehab
.PTRDUSRF DIM       1      40     User flag
.PTRDRGAA DIM       2      41     RUG ADL on admission
.PTRDRGAD DIM       2      43     RUG ADL on discharge
.PTRDSRPC DIM       2      45     Source of referal to pall care
. **** added 01/07/2006 ****
FASSDADM  DIM       8      47     Functional assessment date on adm ddmmccyy
FASSDDCH  DIM       8      55     Functional assessment date on disch ddmmccyy
. **** added 01/07/2011 ****
IMPAIRCD  DIM       6      63     Impairment Code (pmsimpaf)
ADMFIMSC  DIM       18     69     Admission FIM Score
DSCFIMSC  DIM       18     87     Discharge FIM Score

.End of Record            105 
.
.P5 Palliative file (after 01/07/2012)
.------------------
.Name     Type   Length   Start   Description
.----     ----   ------   -----   -----------
.P5        INIT    "P5"      1     Transaction type - P5
.UNIQKEYL DIM       9       3     Unique key
.EPIURNOL DIM      10      12     U/R number
.PTRDRGAA DIM       2      22     RUG ADL on admission
.PTRDRGAD DIM       2      24     RUG ADL on discharge
.PTRDSRPC DIM       2      26     Source of referal to pall care
.ADMPHASC  DIM       1      28     Phase Of Care on Admission (HDP Cat pu)
.DISPHASC  DIM       1      29     Final Phase Of Care (HDP Cat pu)
.POCCDAT1  DIM       8      30     Phase Change Date 1 (ddmmccyy)
.POCPHOC1  DIM       1      38     Phase of Care 1 (HDP Cat pu)
.POCRUGL1  DIM       2      39     RUG ADL on Phase Change 1
.POCCDAT2  DIM       8      41     Phase Change Date 2 (ddmmccyy)
.POCPHOC2  DIM       1      49     Phase of Care 2 (HDP Cat pu)
.POCRUGL2  DIM       2      50     RUG ADL on Phase Change 2
.POCCDAT3  DIM       8      52     Phase Change Date 3 (ddmmccyy)
.POCPHOC3  DIM       1      60     Phase of Care 3 (HDP Cat pu)
.POCRUGL3  DIM       2      61     RUG ADL on Phase Change 3
.POCCDAT4  DIM       8      63     Phase Change Date 4 (ddmmccyy)
.POCPHOC4  DIM       1      71     Phase of Care 4 (HDP Cat pu)
.POCRUGL4  DIM       2      72     RUG ADL on Phase Change 4
.POCCDAT5  DIM       8      74     Phase Change Date 5 (ddmmccyy)
.POCPHOC5  DIM       1      82     Phase of Care 5 (HDP Cat pu)
.POCRUGL5  DIM       2      83     RUG ADL on Phase Change 5
.POCCDAT6  DIM       8      85     Phase Change Date 6 (ddmmccyy)
.POCPHOC6  DIM       1      93     Phase of Care 6 (HDP Cat pu)
.POCRUGL6  DIM       2      94     RUG ADL on Phase Change 6
.POCCDAT7  DIM       8      96     Phase Change Date 7 (ddmmccyy)
.POCPHOC7  DIM       1     104     Phase of Care 7 (HDP Cat pu)
.POCRUGL7  DIM       2     105     RUG ADL on Phase Change 7
.POCCDAT8  DIM       8     107     Phase Change Date 8 (ddmmccyy)
.POCPHOC8  DIM       1     115     Phase of Care 8 (HDP Cat pu)
.POCRUGL8  DIM       2     116     RUG ADL on Phase Change 8
.POCCDAT9  DIM       8     118     Phase Change Date 9 (ddmmccyy)
.POCPHOC9  DIM       1     126     Phase of Care 9 (HDP Cat pu)
.POCRUGL9  DIM       2     127     RUG ADL on Phase Change 9
.POCCDT10  DIM       8     129     Phase Change Date 10 (ddmmccyy)
.POCPOC10  DIM       1     137     Phase of Care 10 (HDP Cat pu)
.POCRGL10  DIM       2     138     RUG ADL on Phase Change 10
.PUSRFLAG  DIM       1     140     User Flag (blank)
.POCCDTFN  DIM       8     141     Final Phase Change Date (ddmmccyy) * (post 2013)
.POCRGLFN  DIM       2     148     RUG ADL on Final Phase Change      * (post 2013) 
.POCDTPLC  DIM       2     150     Death Place Category lj
. only after 01/07/2021 possibly
.PTRIAGSC  DIM       3     153     Triage Score on Admission     *T0887397
.
.End of Record            156
.
.P5 Palliative file (after 01/07/2021)
.------------------
.Name     Type   Length   Start   Description
.----     ----   ------   -----   -----------
P5        INIT    "P5"      1     Transaction type - P5
.UNIQKEYL DIM       9       3     Unique key
.EPIURNOL DIM      10      12     U/R number
.PTRDRGAA DIM       2      22     RUG ADL on admission
.PTRDRGAD DIM       2      24     RUG ADL on discharge
.PTRDSRPC DIM       2      26     Source of referal to pall care
ADMPHASC  DIM       1      28     Phase Of Care on Admission (HDP Cat pu)
DISPHASC  DIM       1      29     Final Phase Of Care (HDP Cat pu)
POCCDAT1  DIM       8      30     Phase Change Date 1 (ddmmccyy)
POCPHOC1  DIM       1      38     Phase of Care 1 (HDP Cat pu)
POCRUGL1  DIM       2      39     RUG ADL on Phase Change 1
POCCDAT2  DIM       8      41     Phase Change Date 2 (ddmmccyy)
POCPHOC2  DIM       1      49     Phase of Care 2 (HDP Cat pu)
POCRUGL2  DIM       2      50     RUG ADL on Phase Change 2
POCCDAT3  DIM       8      52     Phase Change Date 3 (ddmmccyy)
POCPHOC3  DIM       1      60     Phase of Care 3 (HDP Cat pu)
POCRUGL3  DIM       2      61     RUG ADL on Phase Change 3
POCCDAT4  DIM       8      63     Phase Change Date 4 (ddmmccyy)
POCPHOC4  DIM       1      71     Phase of Care 4 (HDP Cat pu)
POCRUGL4  DIM       2      72     RUG ADL on Phase Change 4
POCCDAT5  DIM       8      74     Phase Change Date 5 (ddmmccyy)
POCPHOC5  DIM       1      82     Phase of Care 5 (HDP Cat pu)
POCRUGL5  DIM       2      83     RUG ADL on Phase Change 5
POCCDAT6  DIM       8      85     Phase Change Date 6 (ddmmccyy)
POCPHOC6  DIM       1      93     Phase of Care 6 (HDP Cat pu)
POCRUGL6  DIM       2      94     RUG ADL on Phase Change 6
POCCDAT7  DIM       8      96     Phase Change Date 7 (ddmmccyy)
POCPHOC7  DIM       1     104     Phase of Care 7 (HDP Cat pu)
POCRUGL7  DIM       2     105     RUG ADL on Phase Change 7
POCCDAT8  DIM       8     107     Phase Change Date 8 (ddmmccyy)
POCPHOC8  DIM       1     115     Phase of Care 8 (HDP Cat pu)
POCRUGL8  DIM       2     116     RUG ADL on Phase Change 8
POCCDAT9  DIM       8     118     Phase Change Date 9 (ddmmccyy)
POCPHOC9  DIM       1     126     Phase of Care 9 (HDP Cat pu)
POCRUGL9  DIM       2     127     RUG ADL on Phase Change 9
POCCDT10  DIM       8     129     Phase Change Date 10 (ddmmccyy)
POCPOC10  DIM       1     137     Phase of Care 10 (HDP Cat pu)
POCRGL10  DIM       2     138     RUG ADL on Phase Change 10
PUSRFLAG  DIM       1     140     User Flag (blank)
POCCDTFN  DIM       8     141     Final Phase Change Date (ddmmccyy) * (post 2013)
POCRGLFN  DIM       2     148     RUG ADL on Final Phase Change      * (post 2013)
POCDTPLC  DIM       2     150     Death Place Category lj
. 
PTRIAGSC  DIM       3     153     Triage Score on Admission     *T0887397
POCLDAYA  DIM       2     156     Phase of care on admission leave days 
POCLDAY1  DIM       2     158     Phase of care 1 leave days 
POCLDAY2  DIM       2     160     Phase of care 2 leave days
POCLDAY3  DIM       2     162     Phase of care 3 leave days 
POCLDAY4  DIM       2     164     Phase of care 4 leave days 
POCLDAY5  DIM       2     166     Phase of care 5 leave days 
POCLDAY6  DIM       2     168     Phase of care 6 leave days 
POCLDAY7  DIM       2     170     Phase of care 7 leave days 
POCLDAY8  DIM       2     172     Phase of care 8 leave days 
POCLDAY9  DIM       2     174     Phase of care 9 leave days 
POCLDAYT  DIM       2     176     Phase of care 10 leave days 
POCLDAYF  DIM       2     178     Phase of care Final leave days 
.
.End of Record            180
.
.T2 Trailer file - Private hospital format
.-----------------------------------------
.Name     Type   Length   Start   Description
.----     ----   ------   -----   -----------
T2        INIT    "T2"      1     Transaction type - T2 
T3        INIT    "T3"      1     Transaction type - T3 (after 1/7/2006)
T4        INIT    "T4"      1     Transaction type - T4 (after 1/7/2007)
T5        INIT    "T5"      1     Transaction type - T5 (after 1/7/2012)
.PTCNHCOD DIM       3       3     Hospital code
RECCNT    FORM      5       6     Record counter (max 9999)
.
PEPINEW   FORM      4      11     New episode record counter
PEPICOR   FORM      4      15     Corrections episode record counter
PEPIDEL   FORM      4      19     Deletions episode record counter
.
DIAGNEW   FORM      4      23     New diagnosis record counter
DIAGCOR   FORM      4      27     Corrections diagnosis record counter
DIAGDEL   FORM      4      31     Deletions diagnosis record counter
.
DVANEW    FORM      4      35     New DVA record counter         (remove 2012)
DVACOR    FORM      4      39     Corrections DVA record counter (remove 2012)
DVADEL    FORM      4      43     Deletions DVA record counter   (remove 2012)
.
.PTMDMADM FORM      4      47     Month to date admission days
.PTMDMSEP FORM      4      51     Month to date separation days
.PTMDMSTS FORM      4      55     Month to date statistical sep days
.PTMDMLVE FORM      3      59     Month to date on leave end date days
.PTMDMINH FORM      4      62     Month to date in hsp at end date days
.PTMDMBED FORM      5      66     Month to date bed days
.
.PTYDYADM FORM      5      71     Year to date admission days
.PTYDYSEP FORM      5      76     Year to date separation days
.PTYDYSTS FORM      5      81     Year to date statistical sep days
.PTYDYBED FORM      6      86     Year to date bed days
.
.PTMDMPAS FORM      4      92     MTD private acute separation days
.PTMDMPAB FORM      5      96     MTD private acute bed days
.
.PTMDMPNS FORM      4      101    MTD private NHT separation days
.PTMDMPNB FORM      5      105    MTD private NHT bed days
.
.PTMDMCOS FORM      4      110    MTD compensable acute separation days
.PTMDMCOB FORM      5      114    MTD compensable acute bed days
.
.PTMDMIES FORM      4      119    MTD ineligible acute separation days
.PTMDMIEB FORM      5      123    MTD ineligible acute bed days
.
.PTMDMHCS FORM      4      128    MTD public contract separation days
.PTMDMHCB FORM      5      132    MTD public contract bed days
.
.SP9      DIM       9      137    9 spaces
.PTMDMPSD FORM      4      146    MTD private sameday separations
.PTMDMCSD FORM      4      150    MTD compensbale sameday separations
.PTMDMISD FORM      4      154    MTD ineligible sameday separations
.PTMDMHCD FORM      4      158    MTD public contract sameday separatn
.SP79     DIM      79      162    79 spaces
.
.End of Record             241
.
.U2 Trailer file - Private hospital format
.-----------------------------------------
.Name     Type   Length   Start   Description
.----     ----   ------   -----   -----------
U2        INIT    "U2"      1     Transaction type - U2 
U3        INIT    "U3"      1     Transaction type - U3 (after 1/7/2006)
U4        INIT    "U4"      1     Transaction type - U4 (after 1/7/2007)
U5        INIT    "U5"      1     Transaction type - U5 (after 1/7/2012)
.PTCNHCOD DIM       3       3     Hospital code
.
.PTYDYPAS FORM      5       6     YTD private acute separation days
.PTYDYPAB FORM      6      11     YTD private acute bed days
.PTYDYPAT FORM      6      17     YTD private acute total days
.
.PTYDYPNS FORM      5      23     YTD private NHT separation days
.PTYDYPNB FORM      6      28     YTD private NHT bed days
.PTYDYPNT FORM      6      34     YTD private NHT total days
.
.PTYDYCOS FORM      5      40     YTD compensable acute separation days
.PTYDYCOB FORM      6      45     YTD compensable acute bed days
.PTYDYCOT FORM      6      51     YTD compensable acute total days
.
.PTYDYIES FORM      5      57     YTD ineligible acute separation days
.PTYDYIEB FORM      6      62     YTD ineligible acute bed days
.PTYDYIET FORM      6      68     YTD ineligible acute total days
.
.PTYDYHCS FORM      5      74     YTD public contract separation days
.PTYDYHCB FORM      6      79     YTD public contract bed days
.PTYDYHCT FORM      6      85     YTD public contract total days
.
.SP17     DIM      17      91     17 spaces
.PTYDYPSD FORM      5      108    YTD private sameday separations
.PTYDYCSD FORM      5      113    YTD compensable sameday separations
.PTYDYISD FORM      5      118    YTD ineligible sameday separations
.PTYDYHCD FORM      5      123    YTD public contract sameday separatn
.SP113    DIM      113     128    113 spaces
.
.End of Record             241
.
.T2 Trailer file - Public hospital format
.----------------------------------------
.Name     Type   Length   Start   Description
.----     ----   ------   -----   -----------
.T2       INIT    "T2"      1     Transaction type - T2
.T3       INIT    "T3"      1     Transaction type - T2 (after 1/7/2006)
.T4       INIT    "T4"      1     Transaction type - T4 (after 1/7/2007)
.T5       INIT    "T5"      1     Transaction type - T5 (after 1/7/2012)
.PTCNHCOD DIM       3       3     Hospital code
.RECCNT   FORM      5       6     Record counter (max 9999)
.
.PEPINEW  FORM      4      11     New episode record counter
.PEPICOR  FORM      4      15     Corrections episode record counter
.PEPIDEL  FORM      4      19     Deletions episode record counter
.
.DIAGNEW  FORM      4      23     New diagnosis record counter
.DIAGCOR  FORM      4      27     Corrections diagnosis record counter
.DIAGDEL  FORM      4      31     Deletions diagnosis record counter
.
.DVANEW   FORM      4      35     New DVA record counter
.DVACOR   FORM      4      39     Corrections DVA record counter
.DVADEL   FORM      4      43     Deletions DVA record counter
.
SUBANEW   FORM      4      47     New sub acute record counter
SUBACOR   FORM      4      51     Corrections sub acute record counter
SUBADEL   FORM      4      55     Deletions sub acute record counter
.
PALANEW   FORM      4             New palliative record counter          * 2012
PALACOR   FORM      4             Corrections palliative record counter  * 2012
PALADEL   FORM      4             Deletions palliative record counter    * 2012
.
.PTPDMADM FORM      4      59     Month to date admission days
.PTPDMSEP FORM      4      63     Month to date separation days
.PTPDMSTS FORM      4      67     Month to date statistical sep days
.PTPDMLVE FORM      3      71     Month to date on leave end date days
.PTPDMINH FORM      4      74     Month to date in hsp at end date days
.PTPDMBED FORM      5      78     Month to date bed days
.
.PTYDYADM FORM      5      83     Year to date admission days
.PTYDYSEP FORM      5      88     Year to date separation days
.PTYDYSTS FORM      5      93     Year to date statistical sep days
.PTYDYBED FORM      6      98     Year to date bed days
.
.PTPDMHAS FORM      4      104    MTD public acute separation days
.PTPDMHAB FORM      5      108    MTD public acute bed days
.
.PTPDMPAS FORM      4      113    MTD private acute separation days
.PTPDMPAB FORM      5      117    MTD private acute bed days
.
.PTPDMCOS FORM      4      122    MTD compensable acute separation days
.PTPDMCOB FORM      5      126    MTD compensable acute bed days
.
.PTPDMIES FORM      4      131    MTD ineligible acute separation days
.PTPDMIEB FORM      5      135    MTD ineligible acute bed days
.
.PTPDMH5S FORM      4      140    MTD public NHT NH5 separation days
.PTPDMH5B FORM      5      144    MTD public NHT NH5 bed days
.
.PTPDMHNS FORM      4      149    MTD public NHT separation days
.PTPDMHNB FORM      5      153    MTD public NHT bed days
.
.PTPDMP5S FORM      4      158    MTD private NHT NH5 separation days
.PTPDMP5B FORM      5      162    MTD private NHT NH5 bed days
.
.PTPDMPNS FORM      4      167    MTD private NHT separation days
.PTPDMPNB FORM      5      171    MTD private NHT bed days
.
.PTPDMCNS FORM      4      176    MTD compensable non acute sep days
.PTPDMCNB FORM      5      180    MTD compensable non acute bed days
.
.PTPDMINS FORM      4      185    MTD ineligible non acute sep days
.PTPDMINB FORM      5      189    MTD ineligible non acute bed days
.
.PTPDMHSD FORM      4      194    MTD public sameday separations
.PTPDMPSD FORM      4      198    MTD private sameday separations
.PTPDMCSD FORM      4      202    MTD compensbale sameday separations
.PTPDMISD FORM      4      206    MTD ineligible sameday separations
.
.PTPDMUEP FORM      3      210    MTD number of unqualified episodes
.PTPDMUBD FORM      4      213    MTD number of unqualified bed days
.
.PTPDMOPS FORM      2             MTD Posthumous Organ Procure sepns     * 2012
.PTPDMOPB FORM      3             MTD Posthumous Organ Procure bed days  * 2012
.
.SP24     DIM      24      217    24 spaces
.
.End of Record             241
.
.U2 Trailer file - Public hospital format
.----------------------------------------
.Name     Type   Length   Start   Description
.----     ----   ------   -----   -----------
.U2       INIT    "U2"      1     Transaction type - U2
.U3       INIT    "U3"      1     Transaction type - U3 (after 1/7/2006)
.U4       INIT    "U4"      1     Transaction type - U4 (after 1/7/2007)
.U5       INIT    "U5"      1     Transaction type - U5 (after 1/7/2012)
.PTCNHCOD DIM       3       3     Hospital code
.
.PTYDYHAS FORM      5       6     YTD public acute separation days
.PTYDYHAB FORM      6      11     YTD public acute bed days
.PTYDYHAT FORM      6      17     YTD public acute total days
.
.PTYDYPAS FORM      5      23     YTD private acute separation days
.PTYDYPAB FORM      6      28     YTD private acute bed days
.PTYDYPAT FORM      6      34     YTD private acute total days
.
.PTYDYCOS FORM      5      40     YTD compensable acute separation days
.PTYDYCOB FORM      6      45     YTD compensable acute bed days
.PTYDYCOT FORM      6      51     YTD compensable acute total days
.
.PTYDYIES FORM      5      57     YTD ineligible acute separation days
.PTYDYIEB FORM      6      62     YTD ineligible acute bed days
.PTYDYIET FORM      6      68     YTD ineligible acute total days
.
.PTYDYH5S FORM      5      74     YTD public NHT NH5 separation days
.PTYDYH5B FORM      6      79     YTD public NHT NH5 bed days
.PTYDYH5T FORM      6      85     YTD public NHT NH5 total days
.
.PTYDYHNS FORM      5      91     YTD public NHT separation days
.PTYDYHNB FORM      6      96     YTD public NHT bed days
.PTYDYHNT FORM      6      102    YTD public NHT total days
.
.PTYDYP5S FORM      5      108    YTD private NHT NH5 separation days
.PTYDYP5B FORM      6      113    YTD private NHT NH5 bed days
.PTYDYP5T FORM      6      119    YTD private NHT NH5 total days
.
.PTYDYPNS FORM      5      125    YTD private NHT separation days
.PTYDYPNB FORM      6      130    YTD private NHT bed days
.PTYDYPNT FORM      6      136    YTD private NHT total days
.
.PTYDYCNS FORM      5      142    YTD compensable non acute sep days
.PTYDYCNB FORM      6      147    YTD compensable non acute bed days
.PTYDYCNT FORM      6      153    YTD compensable non acute total days
.
.PTYDYINS FORM      5      159    YTD ineligible non acute sep days
.PTYDYINB FORM      6      164    YTD ineligible non acute bed days
.PTYDYINT FORM      6      170    YTD ineligible non acute total days
.
.PTYDYHSD FORM      5      176    YTD public sameday separations
.PTYDYPSD FORM      5      181    YTD private sameday separations
.PTYDYCSD FORM      5      186    YTD compensable sameday separations
.PTYDYISD FORM      5      191    YTD ineligible sameday separations
.
.PTYDYUEP FORM      4      196    YTD number of unqualified episodes
.PTYDYUBD FORM      5      200    YTD number of unqualified bed days
.
.PTYDYOPS FORM      4             YTD Posthumous Organ Procurement separations
.PTYDYOPB FORM      5             YTD Posthumous Organ Procurement sepn bed days
.PTYDYOPT FORM      5             Post Org Procure Bed Days-YTD Seps
.
.SP36     DIM      36      205    36 spaces
.
.End of Record             241
.
.J5 Extra Episode file - Public hospital format
.----------------------------------------
.Name     Type   Length   Start   Description
.----     ----   ------   -----   -----------
.J5        INIT    "J5"     1      Transaction type - J5
.UNIQKEYL DIM       9      3      Unique key
.EXEACPA   DIM       1      12     Advance Care Type Plan Alert
.EXECLGP   DIM      12      13     Clinical Group
.EXENDIS   DIM       1      25     NDIS Participant Flag (HDP cat N)  *T0887397
.
.End of Record              26
.
.J5 Extra Episode file - Public hospital format (after 1/7/2022)
.----------------------------------------
.Name     Type   Length   Start   Description
.----     ----   ------   -----   -----------
J5        INIT    "J5"     1      Transaction type - J5
.UNIQKEYL DIM       9      3      Unique key
EXEACPA   DIM       1      12     Advance Care Type Plan Alert
EXECLGP   DIM      12      13     Clinical Group
EXENDIS   DIM       1      25     NDIS Participant Flag (HDP cat N)  *T0887397
EXMRFDIS  DIM       8      26     Medically Ready for discharge DDMMYYYY or space
EXREFDIS  DIM       3      34     Reason for Discharge z1 code or space
.
.End of Record            37
. ----- Tempfile Definitions -----
.
ADMTEMP   IFILE     SQL, FIXED=9, KEY="U1-8"
.
.Name     Type   Length   Physical   Start   Description
.----     ----   ------   --------   -----   -----------
DTMPADMN  DIM       8         8        1     Admission no
.
.End of Record                         9
.
TMPADMN   FORM      8
.
.
ROYTEMP   IFILE     SQL, FIXED=9, KEY="U1-8"
.
. Name    Type   Length   Physical   Start   Description
. ----    ----   ------   --------   -----   -----------
DROYADMN  DIM       8         8        1     Admission no
.
.End of Record                         9
.
ROYADMN   DIM       8
.
.
PRSTEMP1  IFILE     SQL, FIXED=27, KEY="U1-8,9-9,10-17,18-18"
PRSTEMP2  IFILE     SQL, FIXED=27, KEY="U19-26,1-8,9-9,10-17,18-18"
.
. Name    Type   Length   Physical   Start   Description
. ----    ----   ------   --------   -----   -----------
DXADMN    DIM       8          8       1     Admission no
DXTYPE    DIM       1          1       9     Record type
.                                              1 = Current admission
.                                              2 = On-leave admission
.                                              3 = Discharged patient
XCHDATE   DIM       8          8      10     Date of change
.                                              Only for XTYPE = 4 or 5
XALT      DIM       1          1      18     Alteration type
.                                              Only for XTYPE 5
XADATE    DIM       8          8      19     Admission Date
.End of Record                        27
.
XADMN     FORM      8
XTYPE     FORM      1
.
. ----- Program Variables -----
.
.******************************************** Start of change          *C-54321
ABDYSALL  FORM      5        * P/E Rec Status Segment - work Actual Bed Days ALL
ABDYSPTD  FORM      5        * P/E Rec Status Segment - work Actual Bed Days PTD
ABDYSMTD  FORM      5        * P/E Rec Status Segment - work Actual Bed Days MTD
ABDYSYTD  FORM      5        * P/E Rec Status Segment - work Actual Bed Days YTD
.********************************************   End of change          *C-54321
ACCMTYPE  DIM       1        * Pri. Epi. Rec Status Segmt - temp Accomodatn Type
ACCSTAT1  DIM       5        * Account Status 1
ACCSTAT2  DIM       5        * Account Status 2
ACCTSTAT  DIM       3        * Pri. Epi. Rec Status Segmt - temp Account Status
ADMDTE    DIM       10
ADMDTFLG  FORM      1                       * Admin details flag
ADMTYPE   DIM       3        * Pri. Epi. Rec Status SEgmt - temp Admission Type
AVLBEDS   FORM      4        * no. of available beds - for header record
.
B10NUMB   FORM      10
BEDDAYS   FORM      5        * temp Bed Days
BJDAY     FORM      5
BRTHDTE   DIM       10
BLTZFLAG  FORM      1
.
CALDAYS   FORM      4        * required by PRS2DAYS Include
CARECLSS  DIM       3        * Pr. Epi. Rec Status Segmt - temp Care Class
CAREDATE  DIM       8
CARETYPE  DIM       2        * Pr.Epi.Rec Status - temp Care Type      *C-49016
CARETYP1  DIM       1        * Care Type Prefix (1st positn of HDP)    *I-49016
CARETYP2  DIM       1        * Care Type Suffix                        *I-49016
CCHGDATE  DIM       8        *save Care Class change date for comparison purpose
CCHGFLAG  FORM      1        * Code Change flag (0=more records, 1=no more recs)
CCUDAYS   FORM      4
CCUFLAG   FORM      1
CDYSDAYS  FORM      6
CDYSFDTE  DIM       8
CDYSTDTE  DIM       8
CDYSYEAR  FORM      2
CHGCAR94  FORM      1        * flag for change of care type on 1/7/94
CHGFLAG   FORM      1        * Status segment change.  Used in SSEG0000
CHRCOUNT  FORM      1        * Count
CJDAY     FORM      5
CMDLINE   DIM       100      * command line
CODCNT    FORM      3                       * Code counter
COR       FORM      1        * temp Corrections total
COSNDFG   FORM      1                       * Coding sent flag
CPAPCDFL  FORM      1        * CPAP procedure code exists? (1=yes/0=no)
CURCTYPE  DIM       2        * return value for GCTY0000       * was 1  *C-49016
CURDATE8  DIM       8        * current date (ccyymmdd)
CURRFORM  FORM      1        * Current Age
CURWRDBD  DIM       7
CULSTRID  DIM       2        * Cluster Id - Left justified
.
DATECALC  DATE      8
DATECHCK  INIT      "20250701"
DATEDIFF  FORM      4
DAYCASE   FORM      1        * Daycase patient or not
DCC       DIM       2
DYY       DIM       2
DFYEAR    DIM       4
DIM1A     DIM       1
DIM1B     DIM       1
DIM1C     DIM       1
DIM1D     DIM       1
DIM2A     DIM       2
DIM2B     DIM       2
DIM3      DIM       3        * I CAR 41541
DIM4      DIM       4
DIM5      DIM       5                                                  *I-60271
DIM8      DIM       8
DIM13     DIM       13
DIM91     DIM       91
DIMFUND   DIM       2        * Health fund HDP
DOCNAME   DIM       28
.DOYR2024  FORM      1
DOYR2025  FORM      1
DRGVERS   DIM       3
DRG041    INIT      "041"
DRG042    INIT      "042"
DRG050    INIT      "050"
DRG051    INIT      "051"
DRG052    INIT      "052"
DRG060    INIT      "060"
DRG062    INIT      "062"
DRG070    INIT      "070"
DRG080    INIT      "080"
DRG090    INIT      "090"
DRG100    INIT      "100"
DRG110    INIT      "110"
DSCDTE    DIM       10
DSEGFLAG  FORM      1
DSPCNT    FORM      6
DUMMY     FORM      1
.******************************************** Start of change          *C-54321
DYSPTD    FORM      5        * Temp var. for bed days PTD
DYSMTD    FORM      5        * Temp var. for bed days MTD
DYSYTD    FORM      5        * Temp var. for bed days YTD
DYSALL    FORM      5        * Temp var. for bed days total
.********************************************   End of change          *C-54321
.
EFINYEAR  DIM       6        * end of financial year
ENDCHCDT  DIM       8        * ending care type change date
ENDCHCTM  DIM       5        * ending care type change time
ENDDATE   DIM       8        * ending date input
ENDDAY    DIM       3        * end day - part of PATACCFD's key
EPIADATE  DIM       8        * Pri. Episode Rec - Admission Date
EPIBDAY1  DIM        9       * Store Bed Days PTD, YTD & Tot together
EPIBDAY2  DIM        9       * Store Bed Days PTD, YTD & Tot together
EPIBDAY3  DIM        9       * Store Bed Days PTD, YTD & Tot together
EPIBDAY4  DIM        9       * Store Bed Days PTD, YTD & Tot together
EPIBDAY5  DIM        9       * Store Bed Days PTD, YTD & Tot together
EPIBDAY6  DIM        9       * Store Bed Days PTD, YTD & Tot together
EPIBDAY7  DIM        9       * Store Bed Days PTD, YTD & Tot together
EPICLSPC  DIM       2
EPICOBTH  DIM       2
EPICTYP1  FORM      1        * Pri. Episode Rec - Type of Care 1
EPICTYP2  FORM      1        * Pri. Episode Rec - Type of Care 2
EPICTYP3  FORM      1        * Pri. Episode Rec - Type of Care 3
EPICTYP4  FORM      1        * Pri. Episode Rec - Type of Care 4
EPICTYP5  FORM      1        * Pri. Episode Rec - Type of Care 5
EPICTYP6  FORM      1        * Pri. Episode Rec - Type of Care 6
EPICTYP7  FORM      1        * Pri. Episode Rec - Type of Care 7
EPIHFUND  DIM       2
EPISODNO  FORM      2
EPLUS1    DIM       8        * end date of run plus one day
EPSNDFG   FORM      1                       * Episode sent flag
EPRSRVED  DIM       10
ERRFLG    FORM      1                       * Error flag
EUPHF     FORM      1                       * Error updating prshdraf
.
FRSTECTP  FORM      1        * First ECT procedure
FLAGAUDT  FORM      1        * doing the episodes with the audit file loop
FLAGFRST  FORM      1        * doing first run flag
FLAGSING  FORM      1        * processing a single admission flag
FNAMEA    DIM       8        * temp file that stores Adm Nos.
FNAMEC    DIM       8        * temp file that stores Adm Nos. rest of year calcs
FORM3     FORM      3
FORM3A    FORM      3        * I CAR 41541
FORM3B    FORM      3        * I CAR 41541
FORM3C    FORM      3        * 0941762
FORM5     FORM      5
FORM6     FORM      6        * work variable
FORM6P2   FORM      6.2      * work variable
FORM7     FORM      7        * work variable
FORM8     FORM      8        * work variable
FORMAT04  FORM      1                                                  *I-51411
FOUNDCHC  FORM      1
FROMDATE  DIM       8        * required by PRS2DAYS Include
.
HCSFLAG   FORM      1              * flag to search using the HCS Eq.of adm.type
HLTHYNB   FORM      1        * healthy newborn? (1=yes/0=no)
HOSPCODE  DIM       3
IBCNMHOS  FORM      1
ICUFLAG   FORM      1
JUSTNO    FORM      2        * right justification amount
KEY30SAV  DIM       30       * Save Var for Tran Key 2
.
LASTEPIS  FORM      1
.******************************************** Start of change          *C-54321
...LDAYS     FORM      3     * days variable use in calc-routine LDYS0000
LDAYS     FORM      5        * days variable use in calc-routine LDYS0000
.******************************************** Start of change          *C-54321
LEAVTOTL  FORM      3        * Total leave days with and without permission
LEFTALL   FORM      4        * Current Days Left
LJUSCODE  DIM       70       * Left justified code
.
MEDIREFN  DIM       2                       * Medicare reference no
MEDIUM    FORM      1        * medium flag - 0 = Tape, 1 = Modem/Floppy
MTDCTLDY  FORM      2
MVENHOUR  FORM      6
.
NBRDAYS   FORM      5        * Required by PRS2DAYS Include            *C-54321
NEW       FORM      1        * temp New Records total
NEWBNUMB  DIM       6
NEWBORN   FORM      1        * patient is newborn (date at admission <=9 days)
NEWFLAG   FORM      1
NEWLAYT   FORM      1
NEWSITID  DIM       4
NEXTCARE  DIM       3
NOOFDAYS  FORM      3
NOSAMDAY  FORM      1                        * Not Same Day Patient
NOYTDSEP  FORM      1                        * Not Ytd Separation
NUMDAYS   FORM      5        * number of days in Julian form           *C-54321
NUMERROR  FORM      8        * total number of errors
NUMWARN   FORM      8        * total number of warnings
NUMNOTIF  FORM      8        * total number of notifiable errors
.
OCCURCNT  FORM      1        * Status Segment occurrence count
OLDACCST  DIM       5        * Previous Pri. Epi. Rec Status Segmt Account 
ONLVFLAG  FORM      1        * On-leave flag (0=not on leave, 1=on leave)
OVRCDFLG  FORM      1        * OVRCD flag - used in 
.
PATNAME   DIM       31       * patient's name output
PATYPE    DIM       3                       * Patient type
PEIEDDTE  DIM       8
PEISTDTE  DIM       8
PREEXIST  FORM      1                        * Previous YTD File Exists
PREVYEAR  DIM       8                        * Filename for previous YTD data
PROCCNTR  FORM      2                        * Procedure loop counter
PRS2END   DIM       8                        * The earliest of Period & CHCDATE 
PRS2IACC  DIM       3
PRS2RACC  FORM      2
PRS2STRT  DIM       8                        * The lastest of Period & EPIADATE
PRTHDR    FORM      1                       * Print header flag
PRERRFLG  FORM      1                       * Print errors only flag
PTERRFLG  FORM      1                       * Patient error flag
PYTDFLAG  FORM      1                       * Previous YTD flag   * I CAR 43118
.
PHASCNTR  FORM      2
POCCDATP  DIM       8                       * phase of care fields
POCPHOCP  DIM       1
POCRUGLP  DIM       2
.
QUALSTAT  DIM       1
.
REPPOS    FORM      1 
ROYFLAG   FORM      1        * Rest of year flag
.                                0 - Not doing rest of year calc
.                                1 - Doing rest of year calc
.                                2 - Printing change details
.                                3 - Prev year reconcil for admin with changes
RJUSCODE  DIM       70       * Right justified code
RPYTDF    FORM      1                       * Run previous YTD file
RTDAYS    FORM      5
.
SAVKEY9   DIM       9
SAVKEY16  DIM       16
SAVEADMN  FORM      4                        *MTD Admissions (inc statistics)
SAVECLSS  DIM       3
SAVECSED  DIM       8
SAVECSST  DIM       8
SAVEDTP1  DIM       8
SAVEFORM  FORM      1                        *Format of admission/episode pair
SAVEMADM  FORM      4                        *MTD Admissions (inc statistics)
SAVEMBED  FORM      5                        *MTD Bed Days   
SAVEMCNB  FORM      5                        *MTD Compensable Non-Acute Bed Days
SAVEMCNS  FORM      4                        *MTD Compensable Non-Acute Seps
SAVEMCNT  FORM      6                        *Comp. Non-Acute Bed Days-YTD Seps
SAVEMCOB  FORM      5                        *MTD Compensable Bed Days 
SAVEMCOS  FORM      4                        *MTD Compensable Separations
SAVEMCOT  FORM      6                        *Comp. Acute Bed Days-YTD Seps
SAVEMCSD  FORM      4                        *MTD Compensable Same Day
SAVEMH5B  FORM      5                        *MTD Public NHT/NH5 Bed Days
SAVEMH5S  FORM      4                        *MTD Public NHT/NH5 Separations
SAVEMH5T  FORM      6                        *Public NHT/NH5 Bed Days-YTD Seps
SAVEMHAB  FORM      5                        *MTD Public Acute Bed Days
SAVEMHAS  FORM      4                        *MTD Public Acute Separations
SAVEMHAT  FORM      6                        *Public Acute Bed Days-YTD Seps
SAVEMHCB  FORM      5                        *MTD Public Contract Bed Days
SAVEMHCD  FORM      4                        *MTD Public Contract Same Day
SAVEMHCS  FORM      4                        *MTD Public Contract Separations
SAVEMHCT  FORM      6                        *Public Contract Bed Days-YTD Seps
SAVEMHNB  FORM      5                        *MTD Public NHT Bed Days    
SAVEMHNS  FORM      4                        *MTD Public NHT Separations
SAVEMHNT  FORM      6                        *Public NHT Bed Days-YTD Seps
SAVEMHSD  FORM      4                        *MTD Public Same Day
SAVEMIEB  FORM      5                        *MTD Ineligible Bed Days   
SAVEMIES  FORM      4                        *MTD Ineligible Separations
SAVEMIET  FORM      6                        *Inelig. Acute Bed Days-YTD Seps
SAVEMINB  FORM      5                        *MTD Ineligible Non-Acute Bed Days
SAVEMINH  FORM      4                        *Remaining In at End of Month
SAVEMINS  FORM      4                        *MTD Ineligible Non-Acute Seps 
SAVEMINT  FORM      6                        *Inelig Non-Acute Bed Days-YTD Seps
SAVEMISD  FORM      4                        *MTD Ineligible Same Day      
SAVEMLVE  FORM      3                        *On-Leave at End of Month     
SAVEMP5B  FORM      5                        *MTD Private NHT/NH5 Bed Days
SAVEMP5S  FORM      4                        *MTD Private NHT/NH5 Separations
SAVEMP5T  FORM      6                        *Private NHT/NH5 Bed Days-YTD Seps
SAVEMPAB  FORM      5                        *MTD Private Acute Bed Days
SAVEMPAS  FORM      4                        *MTD Private Acute Separations
SAVEMPAT  FORM      6                        *Privat Acute Bed Days-YTD Seps
SAVEMPCB  FORM      5                        *MTD Private Contract Bed Days
SAVEMPCD  FORM      4                        *MTD Private Contract Same Day
SAVEMPCS  FORM      4                        *MTD Private Contract Separations
SAVEMPCT  FORM      6                        *Private Contract Bed Day-YTD Seps
SAVEMPNB  FORM      5                        *MTD Private NHT Bed Days 
SAVEMPNS  FORM      4                        *MTD Private NHT Separations
SAVEMPNT  FORM      6                        *Private NHT Bed Days-YTD Seps
SAVEMPSD  FORM      4                        *MTD Private Same Day 
SAVEMSEP  FORM      4                        *MTD Separations    
SAVEMSTS  FORM      4                        *MTD Statistical Separations 
SAVEMUBD  FORM      4                        *MTD Unqualified Episodes
SAVEMUEP  FORM      3                        *MTD Unqualified Episodes
SAVEYADM  FORM      5                        *YTD Admissions (inc statistics)
SAVEYBED  FORM      6                        *YTD Bed Days   
SAVEYCNB  FORM      6                        *YTD Compens. Non-Acute Bed Days
SAVEYCNS  FORM      5                        *YTD Compens. Non-Acute Separations
SAVEYCNT  FORM      6                        *Comp. Non-Acute Bed Days-YTD Seps
SAVEYCOB  FORM      6                        *YTD Compensable Bed Days
SAVEYCOS  FORM      5                        *YTD Compensable Separations
SAVEYCOT  FORM      6                        *Comp. Acute Bed Days-YTD Seps
SAVEYCSD  FORM      5                        *YTD Compensable Same Day
SAVEYH5B  FORM      6                        *YTD Public NHT/NH5 Bed Days
SAVEYH5S  FORM      5                        *YTD Public NHT/NH5 Separations
SAVEYH5T  FORM      6                        *Public NHT/NH5 Bed Days-YTD Seps
SAVEYHAB  FORM      6                        *YTD Public Acute Bed Days     
SAVEYHAS  FORM      5                        *YTD Public Acute Separations 
SAVEYHAT  FORM      6                        *Public Acute Bed Days-YTD Seps
SAVEYHCB  FORM      6                        *YTD Public Contract Bed Days
SAVEYHCD  FORM      5                        *YTD Public Contract Same Day
SAVEYHCS  FORM      5                        *YTD Public Contract Separations
SAVEYHCT  FORM      6                        *Public Contract Bed Days-YTD Seps
SAVEYHNB  FORM      6                        *YTD Public NHT Bed Days
SAVEYHNS  FORM      5                        *YTD Public NHT Separations
SAVEYHNT  FORM      6                        *Public NHT Bed Days-YTD Seps
SAVEYHSD  FORM      5                        *YTD Public Same Day
SAVEYIEB  FORM      6                        *YTD Ineligible Bed Days
SAVEYIES  FORM      5                        *YTD Ineligible Separations
SAVEYIET  FORM      6                        *Inelig. Acute Bed Days-YTD Seps
SAVEYINB  FORM      6                        *YTD Inelig. Non-Acute Bed Days
SAVEYINS  FORM      5                        *YTD Inelig. Non-Acute Separatiopns
SAVEYINT  FORM      6                        *Inelig Non-Acute Bed Days-YTD Seps
SAVEYISD  FORM      5                        *YTD Ineligible Same Day
SAVEYP5B  FORM      6                        *YTD Private NHT/NH5 Bed Days
SAVEYP5S  FORM      5                        *YTD Private NHT/NH5 Separations
SAVEYP5T  FORM      6                        *Private NHT/NH5 Bed Days-YTD Seps
SAVEYPAB  FORM      6                        *YTD Private Acute Bed Days 
SAVEYPAS  FORM      5                        *YTD Private Acute Separations
SAVEYPAT  FORM      6                        *Privat Acute Bed Days-YTD Seps
SAVEYPCB  FORM      6                        *YTD Private Contract Bed Days
SAVEYPCD  FORM      5                        *YTD Private Contract Same Day
SAVEYPCS  FORM      5                        *YTD Private Contract Separations
SAVEYPCT  FORM      6                        *Private Contract Bed Day-YTD Seps
SAVEYPNB  FORM      6                        *YTD Private NHT Bed Days
SAVEYPNS  FORM      5                        *YTD Private NHT Separations
SAVEYPNT  FORM      6                        *Private NHT Bed Days-YTD Seps
SAVEYPSD  FORM      5                        *YTD Private Same Day
SAVEYSEP  FORM      5                        *YTD Separations (inc statistics)
SAVEYSTS  FORM      5                        *YTD Statistical Separations 
SAVEYUBD  FORM      5                        *MTD Unqualified Episodes
SAVEYUEP  FORM      4                        *MTD Unqualified Episodes
SAVEMOPS  FORM      2                        *MTD Post Organ Procure sepns
SAVEMOPB  FORM      3                        *MTD Post Organ Procure bed days
SAVEMOPT  FORM      5                        *Post Org Procure Bed Days-YTD Seps
SAVEYOPS  FORM      4                  *YTD Post Organ Procurement separations
SAVEYOPB  FORM      5                  *YTD Post Organ Procurement sepn bed days
SAVEYOPT  FORM      5                  *YTD Post Organ Procurement sepn tot days
SAVMHLS   DIM       1                       * Save the mental health legal stat
SAVPFS    DIM       1                       * Save the program funding source
SCHCSED   DIM       8        * Sector 14, Position 239 - End date
SEPISDAT  DIM       8
SEX       DIM       8        * output storage for patient's sex        *C-49016
SFINYEAR  DIM       8        * start of financial year
SITEID    DIM       1                       * Site id
SKEY30    DIM       30
SOFMONTH  DIM       8
SPTPEEDD  DIM       8        * Save variable for PTPEEDDT
SPTPESTD  DIM       8        * Save variable for PTPESTDT
SSGEDATE  DIM       8        * Priv. Episode Rec Status Segment end change date
SSGSDATE  DIM       8        * Priv Episode Rec Status Segment start change date
STRING    DIM       4
SUMBEDS   FORM      4        * use in calculation - sum of available beds
SVEDATE   DIM       8        * Last change date in PATTRNFD for patient
SVSGEDAT  DIM       8        * End Status End Date
.
TACFLAG   FORM      1  
TEMPDATE  DIM       8        * Temp. date
TEMPVAR   DIM       20
TEMPFILE  DIM       8
TMPCOLEN  FORM      2
TMPCOLST  FORM      2
TMPCOUNT  FORM      8.3
TMPFRAC   FORM      8.3
TMPRECS   FORM      8.3                      * Total ROY Records loaded
TMPSIZE   FORM      2
TODATE    DIM       8        * required by PRS2DAYS Include
TODAY     DIM       8
.
TOTBEDHR  FORM      8        * Total bed hours
TOTCTLDY  FORM      2
TOTEPIS   FORM      3
TOTFRAC   FORM      8.3                      * Total ROY Records loaded
TOTNHT    FORM      3
TOTNONHT  FORM      3
TOTRECS   FORM      8                        * Total ROY Records loaded
TRANFNME  DIM      12        * transmission file name
TRANTYPE  DIM       2        * transaction type
.
UKEY10    DIM       10
VETFLAG   FORM      1                       * Veterian affairs flag
.
WORKALL   FORM      4        * Work Vars
WRNFLG    FORM      1                       * Warning flag
.
XCCTSTAT  DIM       3        * Pri. Epi. Rec Status Segmt - temp Account Status
.
YEARFILE  DIM       8                        * Filename for current YTD data
YTDCTLDY  FORM      2
.
COUNTER   FORM      2
DAYTOTL   FORM      3        * Days total
.
. ----- Program Constants -----
.
BASEDGTS  INIT      "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
.
CATAC     INIT      "AC"
CATCC     INIT      "CC"
CATDD     INIT      "DD"
CATD1     INIT      "D1"
CATD2     INIT      "D2"
CATD3     INIT      "D3"
CATD4     INIT      "D4"
CATD5     INIT      "D5"
CATlj     INIT      "lj"
CATN      INIT      "N "
CATP1     INIT      "P1"
CATP2     INIT      "P2"
CATP3     INIT      "P3"
CATP4     INIT      "P4"
CATP5     INIT      "P5"
CATP6     INIT      "P6"
CATU1     INIT      "U1"
CATU2     INIT      "U2"
CATU3     INIT      "U3"
CATU4     INIT      "U4"
CATU5     INIT      "U5"
CATU6     INIT      "U6"
CATU7     INIT      "U7"
CATVA     INIT      "VA"
CATVB     INIT      "VB"
CATVI     INIT      "VI"
CATVK     INIT      "VK"
CATVR     INIT      "VR"
CATpu     INIT      "pu"
CATGi     INIT      "Gi"
CATct     INIT      "ct"
CATz1     INIT      "z1"
.
JAN2025   INIT      "20250101"
.
NEG2      FORM      "-2"           * I CAR 41541
NEWBASE   FORM      "36"
NORMYR    FORM      "365"          * normal year with 365 days
.
YEARNAME  INIT      "patytd"
.
PRGID     INIT      "IBAPMS49"
PRGNAM    INIT      "Process Data For PRS/2"
VERSION   INIT      "V12.00.03"
+
.******************************************************************************
.*                                   ML0000                                   *
.*                              Controlling Logic                             *
.******************************************************************************
ML0000    CALL      INIT0000                * Initialise variables & open files
ML1000    CALL      OPTN0000                * Select option
          BRANCH    OPTION,ML2000,ML2000,ML8000
          GOTO      ML9999
.
ML2000    CALL      VDAT0000                * Get dates from controlf file
          BRANCH    EXIT,ML1000
          BRANCH    OPTION,ML3000,ML4000
.
ML3000    CALL      IDAT0000                * Input ending date
          BRANCH    EXIT,ML1000
.
ML4000    CALL      ADAT0000                * Accept date range
          BRANCH    EXIT,ML7000
.
ML4500    CALL      PEON0000                * Print errors only?
          BRANCH    EXIT,ML7000
          BRANCH    PRERRFLG,ML5000,ML5500
.
ML5000    CALL      MEDM0000                * Check which medium
          BRANCH    EXIT,ML4500
.
ML5500    CALL      CONTQST                 * Ok to Continue (Y/N/C) ?
          BRANCH    CEXIT,ML6000,ML7500,ML1000
.
ML6000    CALL      OYTD0000                * Open YTD files
          BRANCH    EXIT,ML9999
.
          CALL      PRUN0000                * Process data transmission run
          CALL      MVEXT000
          GOTO      ML1000
.
ML7000    BRANCH    OPTION,ML2000
          GOTO      ML1000
.
ML7500    BRANCH    PRERRFLG,ML5000
          GOTO      ML4500
.
. ----- Converting from Base36 to normal -----
.
ML8000    CALL      B36N0000                * Do all input & conversion
          GOTO      ML1000
.
ML9999    CALL      KROY0000                * remove temp files
          CALL      KLAT0000
          CHAIN     PGM
+
.******************************************************************************
.*                                  INIT0000              Called by: ML0000   *
.*                      Initialise Variables & Open Files                     *
.******************************************************************************
INIT0000  CALL      DISPHEAD                     * display screen header
.
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"ibapostf";
          OPEN      IBAPOST1,"ibapostf"
.
          DISPLAY   *P64:24,"pataccaf";
          OPEN      PATACCA1,"pataccaf"
.
          DISPLAY   *P64:24,"patactaf";
          OPEN      PATACTA1,"patactaf"
.
          DISPLAY   *P64:24,"patasfaf";
          OPEN      PATASFA1,"patasfaf"
.
          DISPLAY   *P64:24,"patatraf";
          OPEN      PATATRA3,"patatraf"

          DISPLAY   *P64:24,"patchcof";
          OPEN      PATCHCO1,"patchcof"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patdadaf";
          OPEN      PATDADA1,"patdadaf"
.
          DISPLAY   *P64:24,"patvadaf";
          OPEN      PATVADA1,"patvadaf"
.
          DISPLAY   *P64:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P64:24,"patdschf";
          OPEN      PATDSCH1,"patdschf"
          OPEN      PATDSCH2,"patdschf"
.
          DISPLAY   *P64:24,"patecaaf";
          OPEN      PATECAA1,"patecaaf"
.
          DISPLAY   *P64:24,"patecdaf";
          OPEN      PATECDA1,"patecdaf"
          OPEN      PATECDA2,"patecdaf"
.
          DISPLAY   *P64:24,"patecmaf";
          OPEN      PATECMA1,"patecmaf"
          OPEN      PATECMA2,"patecmaf"
.
          DISPLAY   *P64:24,"patecoaf";
          OPEN      PATECOA2,"patecoaf"
.
          DISPLAY   *P64:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"pathspaf";
          OPEN      PATHSPA1,"pathspaf"
.
          DISPLAY   *P64:24,"pmsprdaf";
          OPEN      PMSPRDA1,"pmsprdaf"
.
          DISPLAY   *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
.
          DISPLAY   *P64:24,"paticddf";
          CALL      OPICD1
.
          DISPLAY   *P64:24,"paticdof";
          CALL      OPICO1
.
          DISPLAY   *P64:24,"paticuaf";
          OPEN      PATICUA1,"paticuaf"
.
          DISPLAY   *P64:24,"patlisaf";
          OPEN      PATLISA1,"patlisaf"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P64:24,"patlinkf";
          OPEN      PATLINK1,"patlinkf"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PATMI1A2,"patmi1af"
.
          OPEN      PATFIMA1,"patfimaf"
.
          DISPLAY   *P64:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patpeiaf";
          OPEN      PATPEIO1,"patpeiaf"
          OPEN      PATPEIO2,"patpeiaf"
          OPEN      PATPEIO3,"patpeiaf"
.
          DISPLAY   *P64:24,"patpgraf";
          OPEN      PATPGRA1,"patpgraf"
.
          DISPLAY   *P64:24,"patptdaf";
          OPEN      PATPTDA1,"patptdaf"
.
          DISPLAY   *P64:24,"patrdeaf";
          OPEN      PATRDEA1,"patrdeaf"
.
          DISPLAY   *P64:24,"patsfaaf";
          OPEN      PATSFAA1,"patsfaaf"
.
          DISPLAY   *P64:24,"pattranf";
          OPEN      PATTRAN2,"pattranf"
.
          DISPLAY   *P64:24,"patunaaf";
          OPEN      PATUNAA1,"patunaaf"
.
          DISPLAY   *P64:24,"paturcaf";
          OPEN      PATURCA2,"paturcaf"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA1,"patvisaf"
.
          DISPLAY   *P64:24,"visxdcaf";
          OPEN      VISXDCA1,"visxdcaf"
.
          DISPLAY   *P64:24,"pmsimpaf";
          OPEN      PMSIMPA1,"pmsimpaf"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"patwbhaf";
          OPEN      PATWBHA1,"patwbhaf"
.
          DISPLAY   *P64:24,"patwr1af";
          OPEN      PATWR1A1,"patwr1af"
          OPEN      PATWR1A2,"patwr1af"
          OPEN      PATWR1A3,"patwr1af"
.
          DISPLAY   *P64:24,"patwvetf";
          OPEN      PATWVET1,"patwvetf"
.
          DISPLAY   *P64:24,"patwmabf";
          OPEN      PATWMAB1,"patwmabf"
.
          DISPLAY   *P64:24,"prsdtlaf";
          OPEN      PRSDTLA1,"prsdtlaf"
.
          DISPLAY   *P64:24,"prshrdaf";
          OPEN      PRSHRDA1,"prshrdaf"
          OPEN      PRSHRDA2,"prshrdaf" 
.
          DISPLAY   *P64:24,"pmsdauaf";
          OPEN      PMSDAUA2,"pmsdauaf"
.
          DISPLAY   *P64:24,"pmsfocaf";
          OPEN      PMSFOCA1,"pmsfocaf"
.
          DISPLAY   *P64:24,"oprdetaf";
          OPEN      OPRDETA2,"oprdetaf"
.
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          READ      CONTROLF,TEN;*36,CMDISD,*37,CMOPRT,*235,CMDISP,*236,CMDISS:
                                 *237,CMDISC,*238,CMDISA,*243,PTCNEFLG
          READ      CONTROLF,TEN3;*213,CHCSCOD,*245,CHOSTYP
          READ      CONTROLF,TWENTY;*53,PTCNPRS1,*63,PTCNPRS2,*210,PTCNMEDC
          READ      CONTROLF,TWENTY1;*45,PTCNDRSM                     *I-140164
          READ      CONTROLF,TWENTY1;*46,PTCNBAGE,*205,PTCNUKEY,*206,PTCNCRRG:
                                     *208,PTCNCRTN,*209,PTCNADMT:
                                     *210,PTCNHOSP
          READ      CONTROLF,FIFTY9;*85,CMORBDTM,*218,PTMORBDT        *I-207222
          READ      CONTROLF,FIFTY9;*219,PTCNREPO
          READ      CONTROLF,SEVENTY7;*1,PTCNDPRS,*12,PTCNPRSL,*36,PTCNPRS3:
                                      *37,PTCNDTE3,*220,PTCNEDRG
          READ      CONTROLF,SEVENTY9;*82,PTCNDSCI
          READ      CONTROLF,EIGHTY8;*59,PTCNI10D,*116,CHCSDTE,*170,PTCNRNG1:
                                     *182,PTCNRNG2,*222,PTCNCDSC,*223,PTCN1ATS:
                                     *242,PNSWRACE,*244,PTCNCRAY
          READ      CONTROLF,NINTY8;*81,PTCNHCOD,*225,PTCNPRS4,*227,PTCNRNG4:
                                    *239,PTCNPRS5,*241,PTCNRNG5
          READ      CONTROLF,HUND05;*167,PTCNPRCC
          READ      CONTROLF,HUND09;*195,PTCNACAS,*208,PTCNRTCN,PTCNRTRQ:
                                    PTCNPRS6,PTCNRNG6:                  *I-49016
                                    *224,PTCNPR3A,*226,PTCNRNG3        *I-53150
          READ      CONTROLF,HUND10;*247,PTCNPRSM
          READ      CONTROLF,HUND14;*140,PTCNTPAL
          READ      CONTROLF,HUND19;*183,PTCNED41,*191,PTCNED42,*199,PTCNED50:
                                    *207,PTCNED51,*215,PTCNED52,*223,PTCNED60:
                                    *231,PTCNED62,*239,PTCNED70       * 303772
          READ      CONTROLF,HUND20;*232,PTCNED80
          READ      CONTROLF,HUND23;*232,PTCNED90
          READ      CONTROLF,HUND24;*120,PTCNMVHC,*224,PTCNE100
          READ      CONTROLF,HUND28;*104,PTCNGNTR,*239,PTCNE110
          REP       " 0",PTCNHCOD
.
          IF        PTCNDPRS=1
            DISPLAY   *P64:24,"patdprsf";
            OPEN      PATDRGA1,"patdprsf"
            OPEN      PATDRGA2,"patdprsf"
          ELSE
            DISPLAY   *P64:24,"patdrgaf";
            OPEN      PATDRGA1,"patdrgaf"
            OPEN      PATDRGA2,"patdrgaf"
          ENDIF
.
          DISPLAY   *P64:24,"patmtdaf";
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PATMTDA1,"patmtdaf"
          TRAPCLR   IO
          IF        OVRCD=1
            CLEAR     CMDLINE
            APPEND    "isbuild patmtdaf 250 UC1-8",CMDLINE
            RESET     CMDLINE
            EXECUTE   CMDLINE,TASKID
            OPEN      PATMTDA1,"patmtdaf"
          ENDIF
.
          DISPLAY   *P64:24,"pmsccdaf";
          OPEN      PMSCCDA1,"pmsccdaf"          * Concession Card Details
.
          SCAN      "PreJulyTest",REPTNAME
          IF        @EQUAL
            MOVE      "20250101",DATECHCK
          ELSE
            MOVE      "20250701",DATECHCK
          ENDIF
          RESET     REPTNAME

          MOVE      ZERO,PYTDFLAG                * I CAR 43118
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FNAMEA
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FNAMEC
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,TEMPFILE
.
          CALL      IBACLOCK
          PACK      TODAY,CCC,CYY,CMM,CDD
          REP       " 0",TODAY
.
INIT9000  MOVE      ZERO,EXIT
INIT9999  RETURN
+
.******************************************************************************
.*                                  OPTN0000                                  *
.*        get user's option selection                    called by : MAINLINE *
.*                                                                            *
.*        valid options     --->  (0) Exit                                    *
.*                                (1) Process the new run                     *
.*                                (2) Reprocess the previous run              *
.******************************************************************************
OPTN0000  HLINE     *G37,2,51,80
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON," 0",*HOFF," = Exit":
                    *P1:5,*V2LON," 1",*HOFF," = Process new run":
                    *P1:6,*V2LON," 2",*HOFF," = Reprocess previous run":
                    *P1:7,*V2LON," 3",*HOFF," = Convert from Base36 to normal":
                    *P1:9,"Select Option :";
.
OPTN1000  KEYIN     *P17:9,*EL,*DV,UNDLN1,*P17:9,*V2LON,OPTION;
          COMPARE   ZERO,OPTION               * exit ?
          GOTO      OPTN9999 IF EQUAL         * yes
.
          BRANCH    OPTION,OPTN2000,OPTN3000,OPTN4000
          BEEP
          GOTO      OPTN1000
.
. ------  option 1 chosen  ------
.
.         If errors have occured in a run then we set PTCNEFLG=1 and write this
.         to the control file.  If errors occur, you generally would fix up
.         the errors and do a re-run rather than a new run.  Thus, check if
.         PTCNEFLG=1 and if true then display a warning message.
.
OPTN2000  CALL      GETHOS00
          BRANCH    EXIT,OPTN1000
          MATCH     "1",PTCNPRSM
          IF        !@EQUAL
            BRANCH    PTCNEFLG,OPTN2100       * error(s) existed in previous run
          ENDIF
          GOTO      OPTN2400
.
OPTN2100  DISPLAY   *P1:24,*EL,*B,"Errors still exist in the previous run.  ";
          CALL      HITENTER
          GOTO      OPTN1000
.
OPTN2400  DISPLAY   *P50:2,*V2LON," - New Run ";
          MOVE      " - New Run",CPHDROPT
          GOTO      OPTN9999
.
. ------  option 2 chosen  ------
.
OPTN3000  DISPLAY   *P50:2,*V2LON," - Previous Run ";
          MOVE      " - Previous Run",CPHDROPT
          CALL      GETHOS00
          BRANCH    EXIT,OPTN1000
          GOTO      OPTN9999
.
OPTN4000  DISPLAY   *P50:2,*V2LON," - From Base36 ";
          MOVE      " - From Base36",CPHDROPT
          GOTO      OPTN9999
.
OPTN9999  RETURN
.******************************************************************************
.*                                  B36N0000                                  *
.*        Convert from Base36 to Normal                  called by : MAINLINE *
.******************************************************************************
B36N0000  KEYIN     *P1:4,*EF:
                    *P1:4,"Base36 Number : ":
                    *P17:4,NEWBNUMB
.
          PACK      NEWBNUMB,NEWBNUMB,SP20
          MATCH     NEWBNUMB,SP6
          GOTO      B36N9999 IF EQUAL
.
. ------- Format Base36 - 10
          PROC      FROMBASE
          UNPACK    B10NUMB,DIM2,KEY8
          TYPE      DIM2
          GOTO      B36N1000 IF NOT EQUAL
.
          TYPE      KEY8
          GOTO      B36N2000 IF NOT EQUAL
.
          MOVE      DIM2,EPISODNO
          MOVE      KEY8,AADMNO   
.
          DISPLAY   *P1:06,"Admission number : ",AADMNO:
                    *P1:07,"Episode number   : ",EPISODNO:
                    *P1:24,"Number successfully converted.  ";
          CALL      HITENTER
          GOTO      B36N0000
.
B36N1000  DISPLAY   *P1:24,*EL,"Number converts to non-numeric episode no.  ";
          CALL      HITENTER
          MOVE      SP20,NEWBNUMB
          GOTO      B36N0000
.
B36N2000  DISPLAY   *P1:24,*EL,"Number converts to non-numeric admission no.  ";
          CALL      HITENTER
          MOVE      SP20,NEWBNUMB
          GOTO      B36N0000
.
B36N9999  RETURN
+
.******************************************************************************
.*                                  VDAT0000              Called by: ML0000   *
.*                        Get Dates From controlf File                        *
.******************************************************************************
VDAT0000  READ      CONTROLF,EIGHTY8;*124,CHCSST,*132,CHCSED
          MATCH     "1",PTCNPRSM
          IF        @EQUAL
            PACK      CHCSST,PMPRSDAT,SP70
            PACK      CHCSED,PMPREDAT,SP70
            SQUEEZE   PTHSHDPC
            PACK      PTCNHCOD,PTHSHDPC,SP70
          ENDIF
.
          BRANCH    OPTION,VDAT9000              * New run, no validation
.         
          MATCH     SP8,CHCSED
          GOTO      VDAT1000 IF EQUAL            * Blank end date, error
.
          MATCH     "00000000",CHCSED
          GOTO      VDAT9000 IF NOT EQUAL        * Blank end date, error
.
VDAT1000  DISPLAY   *P1:24,*EL,*B,"Previous run end date not on file.  ";
          CALL      HITENTER
          GOTO      VDAT9500
.
VDAT9000  MOVE      ZERO,EXIT
          GOTO      VDAT9999
.
VDAT9500  MOVE      ONE,EXIT
VDAT9999  RETURN
+
.******************************************************************************
.*                                  IDAT0000                                  *
.*        input ending date                              called by : MAINLINE *
.******************************************************************************
IDAT0000  DISPLAY   *P1:11,*EF,"Ending date : ";
.
.         set up input requirements for KEYDATE
.
          MOVE      ZERO,CDEFDTE
          MOVE      ZERO,CHIGHLT
          MOVE      "15",CCOL
          MOVE      "11",CVERT
.
.         input ending date
.
IDAT1000  UNPACK    SP6,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
          CALL      KEYDATE
          BRANCH    OVRCD,IDAT9500
.
          PACK      ENDDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",ENDDATE
.
          UNPACK    CHCSED,XCENT,XYEAR,XMON,XDAY
.
.         new ending date should be greater than the last ending date
.
          MATCH     ENDDATE,CHCSED
          GOTO      IDAT2000 IF LESS
.
          DISPLAY   *P1:24,*EL,*B,"Ending date must be greater than ":
                    XDAY,SLASH,XMON,SLASH,XCENT,XYEAR,".  ";
          CALL      HITENTER
          GOTO      IDAT1000
.
.         new ending date should be less than today's date
.
IDAT2000  PACK      CURDATE8,CCC,CYY,CMM,CDD
          REP       " 0",CURDATE8
          MATCH     CURDATE8,ENDDATE
          GOTO      IDAT3000 IF LESS
.
          DISPLAY   *P1:24,*EL,*B,"Ending date must be less than today's ":
                    "date.  ";
          CALL      HITENTER
          GOTO      IDAT1000
.
.------ valid ending date - get new starting date ------
.------ we only calculate a new starting date if a previous end date exists --
.
IDAT3000  MATCH     SP8,CHCSED              * see if end date exists
          GOTO      IDAT5000 IF EQUAL
.
          MATCH     "00000000",CHCSED       * see if end date exists
          GOTO      IDAT5000 IF EQUAL
.
          MOVE      XDAY,DD
          MOVE      XMON,MM
          MOVE      XYEAR,YY
          MOVE      XCENT,CC
          CALL      DMYCON
.
          MOVE      JULDAY,FORM4
          SUB       NORMYR,FORM4
          SUB       LEAPYR,FORM4
          COMPARE   ZERO,FORM4
          GOTO      IDAT4000 IF LESS
          IF        JULYR=99
            MOVE      ZERO,JULYR
            ADD       ONE,JULCC
          ELSE
            ADD       ONE,JULYR
          ENDIF
          MOVE      ZERO,JULDAY
.
IDAT4000  ADD       ONE,JULDAY                   * increment JULDAY by 1
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
.
.         update starting and ending dates in CONTROLF file with new date range
.
          PACK      TEMPDATE,CC,YY,MM,DD
          REP       " 0",TEMPDATE
          MATCH     TEMPDATE,CHCSST
          GOTO      IDAT5000 IF NOT LESS
.
          MOVE      TEMPDATE,CHCSST
.
IDAT5000  MOVE      ENDDATE,CHCSED
.
IDAT9000  MOVE      ZERO,EXIT
          GOTO      IDAT9999
.
IDAT9500  MOVE      ONE,EXIT
IDAT9999  RETURN
.******************************************************************************
.*                                  ADAT0000                                  *
.*        display date range and ask if user wishes to accept it or not       *
.*                            called by : MAINLINE                            *
.******************************************************************************
ADAT0000  UNPACK    CHCSST,CCENT,CYEAR,CMON,CDAY
          UNPACK    CHCSED,XCENT,XYEAR,XMON,XDAY
.
          DISPLAY   *P1:11,*EF,"Date range for this run : ",*V2LON:
                    CDAY,SLASH,CMON,SLASH,CCENT,CYEAR,*HOFF," to ",*V2LON:
                    XDAY,SLASH,XMON,SLASH,XCENT,XYEAR;
.
          DAYSEP    CHCSST,CHCSED,NUMDAYS
.
. ------  if option 1, check that date range is not longer than a month  ------
.
          BRANCH    OPTION,ADAT1100
.
          MATCH     "IBARSH99",PGM
          IF        @EQUAL
             KEYIN     ANS;
             KEYIN     ANS;
          ENDIF
          GOTO      ADAT2000
.
ADAT1100  MATCH     "IBARSH99",PGM
          IF        @EQUAL
             KEYIN     ANS;
          ENDIF
.
          COMPARE   NUMDAYS,THIRTY1
          GOTO      ADAT2000 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B,"Invalid date range - longer than a month.  ";
          CALL      HITENTER
          GOTO      ADAT9000
.
. ------  is date range accepted ?  ------
.
ADAT2000  DISPLAY   *P1:24,*EL,"Accept date range (",*V2LON,"Y",*HOFF,"/":
                               *V2LON,"N",*HOFF,") ?";
.
ADAT3000  MOVE      ANSY,ANS
          KEYIN     *P27:24,*EL,*RV,*V2LON,ANS;
          REP       UPPLOW,ANS                   * replace lower case with upper
          MATCH     ANSY,ANS                     * "Y" input ?
          GOTO      ADAT8000 IF EQUAL            * yes
.
          MATCH     ANSN,ANS                     * "N" input ?
          GOTO      ADAT9000 IF EQUAL            * yes
.
          BEEP                                   * invalid input - beep &
          GOTO      ADAT3000                                       re-enter
.
. ------  date range accepted  ------
.
ADAT8000  MOVE      CHCSED,TEMPDATE
          CALL      ADD10000                     * add 1 day to date
          MOVE      TEMPDATE,EPLUS1
          MOVE      FALSE,EXIT                   * set EXIT = 0
          GOTO      ADAT9999
.
. ------  date range not accepted  ------
.
ADAT9000  MOVE      TRUE,EXIT                    * set EXIT = 1
.
ADAT9999  RETURN
+
.******************************************************************************
.*                                  OYTD0000              Called by: ML0000   *
.*                               Open YTD Files                               *
.******************************************************************************
OYTD0000  UNPACK    CHCSED,CCENT,CYEAR,CMON,CDAY
          MATCH     "1",PTCNPRSM
          IF        @EQUAL
            PACK      TRANFNME,HOSPCODE,ANSC,CMON,CDAY,SLASH,ANSX,ANSM,ANST
          ELSE
            PACK      TRANFNME,CHCSCOD,ANSC,CMON,CDAY,SLASH,ANSX,ANSM,ANST
          ENDIF
.
          REP       " _",TRANFNME
          PACK      KEY14,CHCSED,SP6
          CALL      RDSDRGA2                * Position on & read a date range
          CALL      RDKDRGA2                  file record
          BRANCH    OVRCD,OYTD1000
.
          MATCH     DRGFDTE,CHCSED
          GOTO      OYTD1000 IF LESS        * PRS2 end date < DRG from date
.
          PACK      KEY6,DRGYR,SP2
          CALL      RDSDRGA1                * Position on & read a date range
          CALL      RDKDRGA1                  file record
          BRANCH    OVRCD,OYTD1000
.
          MOVE      DRGFDTE,SFINYEAR        * Start of financial year
          MOVE      SFINYEAR,KEY4
          REP       " 0",KEY4
          MOVE      KEY4,FORM4
          SUB       "1",FORM4
          MOVE      FORM4,KEY4
          REP       " 0",KEY4
          UNPACK    KEY4,KEY2,KEY2
.
          MOVE      ONE,PREEXIST            * Previous YTD file exists - yes
          PACK      PREVYEAR,YEARNAME,KEY2
          DISPLAY   *P64:24,PREVYEAR;
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PATYTDA1,PREVYEAR
          TRAPCLR   IO
          LOAD      PREEXIST,OVRCD,ZERO     * Previous YTD file exists - no
          CLOSE     PATYTDA1
. 
          UNPACK    SFINYEAR,CCENT,CYEAR,CMON,CDAY
          PACK      YEARFILE,YEARNAME,CYEAR * Current year YTD file
.
          DISPLAY   *P64:24,YEARFILE;
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PATYTDA1,YEARFILE
          TRAPCLR   IO
          COMPARE   ONE,OVRCD
          GOTO      OYTD9000 IF NOT EQUAL   * File exists, exit
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    YEARFILE,CMDLINE
          APPEND    " 274 UC1-8",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID          * Create current YTD file
          MATCH     "0",TASKID
          GOTO      OYTD2000 IF NOT EQUAL   * Error creating YTD file
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PATYTDA1,YEARFILE
          TRAPCLR   IO
          BRANCH    OVRCD,OYTD2000
.
          CLEAR     CMDLINE
          APPEND    "iserase patptdaf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID          * Delete PTD file
.
          CLEAR     CMDLINE
          APPEND    "isbuild patptdaf 250 UC1-8",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID          * Create PTD file
.
          CLEAR     CMDLINE
          APPEND    "iserase patmtdaf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID          * Delete MTD file
.
          CLEAR     CMDLINE
          APPEND    "isbuild patmtdaf 250 UC1-8",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID          * Create MTD file
          GOTO      OYTD9000
.
OYTD1000  DISPLAY   *P1:24,*EL,*B,"Date range file not set up for this run.  ";
          CALL      HITEXIT
          GOTO      OYTD9500
.
OYTD2000  DISPLAY   *P1:24,*EL,*B,"Fatal error: Cannot create new YTD file.  ":
                    "Please contact IBA.  ";
          CALL      HITEXIT
          GOTO      OYTD9500
.
OYTD9000  MOVE      ZERO,EXIT
          GOTO      OYTD9999
.
OYTD9500  MOVE      ONE,EXIT
OYTD9999  RETURN
+
.------------------------------------------------------------
. Move Extract to Web Directory
.------------------------------------------------------------
MVEXT000  CLEAR     CMDLINE
          APPEND    "ibapms49.us1 ",CMDLINE
          UNPACK    TRANFNME,DIM8
          REP       " _",DIM8
          APPEND    DIM8,CMDLINE
          APPEND    ".XMT",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          RETURN
.
.******************************************************************************
.*                                  PRUN0000              Called by: ML0000   *
.*                                 Process Run                                *
.******************************************************************************
PRUN0000  MOVE      ZERO,ADMDTFLG
          CLOCK     TIME,CTIMEIS
          MOVE      ZERO,CPAGENO
          MOVE      ONE,CNOUNDLN
.
          UNPACK    CHCSST,CCENT,CYEAR,CMON,CDAY
          MOVE      "01",CDAY
          PACK      SOFMONTH,CCENT,CYEAR,CMON,CDAY
          REP       " 0",SOFMONTH
          PACK      CURDATE8,CCC,CYY,CMM,CDD
          REP       " 0",CURDATE8
.
          MOVE      CHCSST,PEISTDTE
          MOVE      CHCSED,PEIEDDTE
.
          MOVE      ZERO,ROYFLAG            * Not Doing Rest-of-Year (ROY) now
          CALL      CLRV0000                * Clear work & total variables
          CALL      HEAD0000                * Print report header
          CALL      FRST0000                * See if we are doing the 1st run
          CALL      DSCN0000                * Display screen
          CALL      DMRR0000                * Delete old run records
.
          MOVE      ONE,PTCNEFLG
          WRITAB    CONTROLF,TEN;*243,PTCNEFLG
          MATCH     "1",PTCNPRSM
          GOTO      PRUN0500 IF NOT EQUAL
.
          PACK      KEY3,HOSPCODE,SP70
          CALL      RDPMPRD1
          BRANCH    OVRCD,PRUN0500
          MOVE      PTCNEFLG,PMPRERRF
          CALL      UPPMPRD1
.
PRUN0500  COMPARE   ONE,OPTION
          CALL      WSED0000 IF EQUAL       * Write PRS2 start & end dates
.
          CALL      P2HR0000                * Write/update prshdraf
          CALL      P2DT0000                * Delete records from prsdtlaf
.
          COMPARE   TWO,PRERRFLG
          CALL      GHDR0000 IF NOT EQUAL   * Generate header record
.
          CALL      GDEP0000                * Get deleted admissions
          CALL      GDPEI000                * Get deleted patpeiaf admissions
          CALL      GPEP0000                * Get primary episode records
          BRANCH    EXIT,PRUN1000
. 
          CALL      GACD0000                * Get all coding within the period
          BRANCH    EXIT,PRUN1000
.
          CALL      SADM0000                * Generate data for single admission
          BRANCH    EXIT,PRUN1000
.
          CALL      UPEI0000                * Update patpeiaf file
.
          COMPARE   TWO,PRERRFLG
          GOTO      PRUN1000 IF EQUAL       * Only printing error report
.
          CALL      RECO0000                * Reconsile current YTD data
.         CALL      PYRC0000                * D CAR 43118
          CALL      GTRL0000                * Generate trailer record
          GOTO      PRUN2000
.
PRUN1000  COMPARE   "99999",RECCNT
          GOTO      PRUN2000 IF LESS        * Record counter < 9999
.
          DISPLAY   *P1:23,*EF,*B,"Aborting job.  Total records written to ":
                    "transmission file has reached 9999":
                    *P1:24,"Please select a smaller date range.  ";
          CALL      HITENTER
.
          PRINT     *N,*N,"1 : Primary episode records generated has reached ":
                    "9999.  Job is aborted"
.
PRUN2000  MOVE      ZERO,PTCNEFLG           * No errors have been found
          LOAD      PTCNEFLG,ERRFLG,ONE     * Errors have been found
          WRITAB    CONTROLF,TEN;*243,PTCNEFLG
          MATCH     "1",PTCNPRSM
          GOTO      PRUN2500 IF NOT EQUAL
.
          PACK      KEY3,HOSPCODE,SP70
          CALL      RDPMPRD1
          BRANCH    OVRCD,PRUN2500
          MOVE      PTCNEFLG,PMPRERRF
          CALL      UPPMPRD1
.
PRUN2500  DISPLAY   *P1:23,*EF;
          IF        PTCNEFLG=1
            DISPLAY   *P1:24,*B,"Errors have been found.  No trailer record ":
                      "generated.  ";
            CALL      HITENTER
          ENDIF
.
          IF        WRNFLG>0
            DISPLAY   *P1:24,*B,"Warnings have been found.  Check report.  ";
            CALL      HITENTER
          ENDIF
.
          IF        PTCNEFLG=1
            CALL      HEAD132               * Print report header
          ELSE
            PRINT     *N
            CALL      UND132                * Print underline
          ENDIF
.
          PRINT     *N,*N,*40,"PRIMARY EPISODE RECORDS generated :",*N,*N:
                    *48,"NEW",*80,PEPINEW,*N:
                    *48,"CORRECTION",*80,PEPICOR,*N:
                    *48,"DELETION",*80,PEPIDEL,*N,*N,*N:
                    *40,"DIAGNOSES RECORDS generated :",*N,*N:
                    *48,"NEW",*80,DIAGNEW,*N:
                    *48,"CORRECTION",*80,DIAGCOR,*N:
                    *48,"DELETION",*80,DIAGDEL,*N,*N,*N:
                    *40,"DVA RECORDS generated :",*N,*N:
                    *48,"NEW",*80,DVANEW,*N:
                    *48,"CORRECTION",*80,DVACOR,*N:
                    *48,"DELETION",*80,DVADEL,*N,*N,*N
.
          PRINT     *N,*N,*1,"***  ",NUMERROR," ERRORS FOUND  ***"
          PRINT     *N,*1,"***  ",NUMWARN," WARNINGS FOUND ***"
          PRINT     *N,*1,"***  ",NUMNOTIF," NOTIFIABLE ERRORS FOUND ***"
.
PRUN8000  CALL      KLAT0000                * Delete temp admission numbers file
          CALL      KROY0000                * Delete temp admission numbers file
.
PRUN9000  MOVE      ZERO,EXIT
PRUN9999  RETURN
+
.******************************************************************************
.*                                  WSED0000              Called by: PRUN0000 *
.*                        Write PRS2 Start & End Dates                        *
.******************************************************************************
WSED0000  WRITAB    CONTROLF,EIGHTY8;*124,CHCSST,*132,CHCSED
          MATCH     "1",PTCNPRSM
          GOTO      WSED9000 IF NOT EQUAL
.
          PACK      KEY3,HOSPCODE,SP70
          CALL      RDPMPRD1
          BRANCH    OVRCD,WSED9000
          MOVE      CHCSST,PMPRSDAT
          MOVE      CHCSED,PMPREDAT
          MOVE      PTCNEFLG,PMPRERRF
          CALL      UPPMPRD1
.
WSED9000  MOVE      ZERO,EXIT
WSED9999  RETURN
+
.******************************************************************************
.*                                  P2HR0000              Called by: PRUN0000 *
.*                            Write/Update prshdraf                           *
.******************************************************************************
P2HR0000  BRANCH    OPTION,P2HR1000,P2HR3000
          GOTO      P2HR9000
.
P2HR1000  MOVE      ZERO,P2HRURUN
          PACK      KEY10,Z70
          CALL      RSP2HRD1                * Position on & read a PRS2 run
          CALL      RPP2HRD1                  header file record
.
          MOVE      CHCSST,P2HRFDAT         * From date
          MOVE      CHCSED,P2HRTDAT         * To date
          MOVE      CURDATE8,P2HRCDAT       * Date extract created
          MOVE      SP8,P2HRRDAT            * Date extract re-run
          MOVE      HOSPCODE,P2HRHOSP
          MOVE      SP70,P2HRSPAR
.
P2HR2000  MOVE      P2HRURUN,F10
          ADD       ONE,F10                 * Incrementing Run Number each time
          MOVE      F10,P2HRURUN
.
          PACK      KEY10,P2HRURUN
          CALL      RAP2HRD1                * Read a PRS2 run header file record
          COMPARE   ONE,OVRCD
          GOTO      P2HR2000 IF NOT EQUAL   * Record already exists, get next
.
          PACK      KEY10,P2HRURUN
          CALL      WRP2HRD1                * Write a PRS2 run header file rec
          GOTO      P2HR9000
.
P2HR3000  MOVE      ZERO,EUPHF              * Error updating prshdraf - no
          PACK      KEY26,CHCSST,CHCSED,SP70
          CALL      RSP2HRD2                * Position on & read a PRS2 run
          CALL      RKP2HRD2                  header file record
          BRANCH    OVRCD,P2HR4000
.
          MATCH     CHCSST,P2HRFDAT
          GOTO      P2HR4000 IF NOT EQUAL   * Different start date
.
          MATCH     CHCSED,P2HRTDAT
          GOTO      P2HR4000 IF NOT EQUAL   * Different end date
.
          MATCH     "1",PTCNPRSM
          IF        @EQUAL
            MATCH     HOSPCODE,P2HRHOSP
            GOTO      P2HR4000 IF NOT EQUAL
          ENDIF
.
          MOVE      CURDATE8,P2HRRDAT       * Extract re-run date
          CALL      UPP2HRD2                * Update a PRS2 run header file rec
          GOTO      P2HR9000
.
P2HR4000  DISPLAY   *P1:23,*EF:
                    *P1:24,"Error updating prshdraf.  Please contact IBA.  ";
          CALL      HITENTER
          MOVE      ONE,EUPHF               * Error updating prshdraf - yes
.
P2HR9000  MOVE      ZERO,EXIT
P2HR9999  RETURN
+
.******************************************************************************
.*                                  P2DT0000              Called by: PRUN0000 *
.*                Delete Records From prsdtlaf For Current Run                *
.******************************************************************************
P2DT0000  BRANCH    EUPHF,P2DT9000
.
          PACK      KEY18,P2HRURUN,SP70
P2DT1000  CALL      RSP2DTL1                * Position on & read a PRS2 run
          CALL      RKP2DTL1                  detail file record
          BRANCH    OVRCD,P2DT9000
.
          MATCH     P2HRURUN,P2DTURUN
          GOTO      P2DT9000 IF NOT EQUAL   * Different unique run no
.
          PACK      KEY18,P2DTURUN,P2DTADMN
          CALL      DEP2DTL1                * Delete a PRS2 run detail file rec
          GOTO      P2DT1000
.
P2DT9000  MOVE      ZERO,EXIT
P2DT9999  RETURN
+
.******************************************************************************
.*                                 DSCN0000                                   *
.*   display screen for Run after accepting date range  called by : PRUN0000  *
.******************************************************************************
DSCN0000  UNPACK    CHCSST,CCENT,CYEAR,CMON,CDAY
          UNPACK    CHCSED,XCENT,XYEAR,XMON,XDAY
.
          DISPLAY   *P1:3,*EF,*P30:5,*V2LON,*ULON,"Produce Error Report",*HOFF:
                    *P16:7,*EL,"Date range for this Run : ":
                    *V2LON,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR,*HOFF," to ":
                    *V2LON,XDAY,SLASH,XMON,SLASH,XCENT,XYEAR;
.
DSCN9999  RETURN
+
.******************************************************************************
.*                                  PEON0000              Called by: PRUN0000 *
.*                             Print Errors Only?                             *
.******************************************************************************
PEON0000  DISPLAY   *P1:13,*EF:
                    *P1:13,*V2LON," 0",*HOFF," = Exit":
                    *P1:14,*V2LON," 1",*HOFF," = Produce PRS/2 extract file":
                    *P1:15,*V2LON," 2",*HOFF," = Print error list only":
                    *P1:17,"Select Option : ";
.
PEON1000  MOVE      ONE,PRERRFLG
          KEYIN     *P17:17,*V2LON,*RV,PRERRFLG;
          COMPARE   ZERO,PRERRFLG
          GOTO      PEON9500 IF EQUAL
.
          BRANCH    PRERRFLG,PEON9000,PEON9000
.
          BEEP
          GOTO      PEON1000
.
PEON9000  MOVE      ZERO,EXIT
          GOTO      PEON9999
.
PEON9500  MOVE      ONE,EXIT
PEON9999  RETURN
+
.******************************************************************************
.*                                  MEDM0000              Called by: PRUN0000 *
.*                             Check Which Medium                             *
.******************************************************************************
MEDM0000  DISPLAY   *P1:19,*EF:
                    *P1:19,*V2LON," 0",*HOFF," = Exit":
                    *P1:20,*V2LON," 1",*HOFF," = Data to be sent by tape":
                    *P1:21,*V2LON," 2",*HOFF," = Data to be sent by disk/modem":
                    *P1:23,"Select Option : ";
.
MEDM1000  MOVE      TWO,COPTION
          KEYIN     *P17:23,*V2LON,*RV,COPTION;
          COMPARE   ZERO,COPTION
          GOTO      MEDM9500 IF EQUAL
.
          BRANCH    COPTION,MEDM2000,MEDM2000
.
          BEEP
          GOTO      MEDM1000
.
MEDM2000  MOVE      ZERO,MEDIUM
          LOAD      MEDIUM,COPTION,ZERO,ONE
.
MEDM9000  MOVE      ZERO,EXIT
          GOTO      MEDM9999
.
MEDM9500  MOVE      ONE,EXIT
MEDM9999  RETURN
+
.******************************************************************************
.*                                  GHDR0000                                  *
.*   generate Header Record for the transmission file    called by : PRUN0000 *
.******************************************************************************
GHDR0000  PREP      WORK,TRANFNME
          CLOSE     WORK
          PREP      WORK,TRANFNME
.
          MOVE      ZERO,DOYR2025
          MATCH     DATECHCK,CHCSED
          IF        !@LESS
            MOVE      ONE,DOYR2025
          ENDIF
          RESET     REPTNAME
.
. ------  calculate No. of Available Beds  ------
.
.         Available Beds = Sum of Available Beds on Each Day of the Period
.                          -----------------------------------------------
.                                   Number of Days in the Period
.
          MOVE      ZERO,AVLBEDS
          MOVE      ZERO,SUMBEDS                * initialize sum of avail. beds
.
          MOVE      SP6,KEY6
          CALL      RDSWARD3                    * position PATWR1FD file at the
GHDR1000  CALL      RDKWARD3                    * read next PATWR1FD record
          BRANCH    OVRCD,GHDR3000              * end-of-file
.
          MATCH     WBED,SP3
          GOTO      GHDR3000 IF NOT EQUAL
.
          PACK      KEY14,WWARD,WBED,CHCSED
          CALL      RSPTWBH1                    * read PATWBHFD record
          CALL      RKPTWBH1                    * read PATWBHFD record
          BRANCH    OVRCD,GHDR2000              * No History >= end of period
.
          MATCH     WWARD,WBHWARD
          GOTO      GHDR2000 IF NOT EQUAL
.
          MATCH     WBED,WBHBED
          GOTO      GHDR2000 IF NOT EQUAL
.
          MOVE      WBHACTV,WACTIVE
.
GHDR2000  BRANCH    WACTIVE,GHDR1000 
.
          ADD       WNBEDS,SUMBEDS
          GOTO      GHDR1000
.
GHDR3000  UNPACK    CHCSST,CCENT,CYEAR,CMON,CDAY
          PACK      PRDSTDTE,CDAY,CMON,CCENT,CYEAR
          REP       " 0",PRDSTDTE
.
          UNPACK    CHCSED,CCENT,CYEAR,CMON,CDAY
          PACK      PRDEDDTE,CDAY,CMON,CCENT,CYEAR
          REP       " 0",PRDEDDTE
.
          MOVE      PTCNREPO,RPTOPTN
          MOVE      SUMBEDS,NUMBEDS
          REP       " 0",NUMBEDS
.
          MOVE      PTCNRTCN,PRSTCON        * move Report Type Control *I-49016
          MOVE      PTCNRTRQ,PRSTREQ        * move Report Type Request *I-49016
.
          MOVE      ZERO,REPPOS
          UNPACK    SP70,PRSREP1,PRSREP2,PRSREP3,PRSREP4,PRSREP5:
                         PRSRNG1,PRSRNG2,PRSRNG3,PRSRNG4,PRSRNG5
          UNPACK    SP30,PRSREP6,PRSRNG6                               *I-49016
.
          MATCH     SP2,PTCNPRS1
          GOTO      GHDR4000 IF EQUAL       * Blank 1st report code
.
          MATCH     "00",PTCNPRS1
          GOTO      GHDR4000 IF EQUAL       * Blank 1st report code
.
          MATCH     SP20,PTCNRNG1
          GOTO      GHDR4000 IF EQUAL       * Blank 1st date range
.
          MATCH     "000000000000",PTCNRNG1
          GOTO      GHDR4000 IF EQUAL       * Blank 1st date range
.
          MOVE      "1",FORM2
          CALL      SRVR0000                * Setup report variables
.
GHDR4000  MATCH     SP2,PTCNPRS2
          GOTO      GHDR5000 IF EQUAL       * Blank 2nd report code
.
          MATCH     "00",PTCNPRS2
          GOTO      GHDR5000 IF EQUAL       * Blank 2nd report code
.
          MATCH     SP20,PTCNRNG2
          GOTO      GHDR5000 IF EQUAL       * Blank 2nd date range
.
          MATCH     "000000000000",PTCNRNG2
          GOTO      GHDR5000 IF EQUAL       * Blank 2nd date range
.
          MOVE      "2",FORM2
          CALL      SRVR0000                * Setup report variables
.
.GHDR5000  COMPARE   ZERO,PTCNPRS3
.          GOTO      GHDR6000 IF EQUAL       * Blank 3rd report code
.
.          MOVE      "3",FORM2
.          CALL      SRVR0000                * Setup report variables
.
GHDR5000  MATCH     SP2,PTCNPR3A                                       *I-53150
          GOTO      GHDR6000 IF EQUAL
.
          MATCH     "00",PTCNPR3A
          GOTO      GHDR6000 IF EQUAL
.
          MATCH     SP20,PTCNRNG3
          GOTO      GHDR6000 IF EQUAL
.
          MATCH     "000000000000",PTCNRNG3
          GOTO      GHDR6000 IF EQUAL
.
          MOVE      "3",FORM2
          CALL      SRVR0000                                       *end I-53150
.
GHDR6000  MATCH     SP2,PTCNPRS4
          GOTO      GHDR7000 IF EQUAL       * Blank 4th report code
.
          MATCH     "00",PTCNPRS4
          GOTO      GHDR7000 IF EQUAL       * Blank 4th report code
.
          MATCH     SP20,PTCNRNG4
          GOTO      GHDR7000 IF EQUAL       * Blank 4th date range
.
          MATCH     "000000000000",PTCNRNG4
          GOTO      GHDR7000 IF EQUAL       * Blank 4th date range
.
          MOVE      "4",FORM2
          CALL      SRVR0000                * Setup report variables
.
GHDR7000  MATCH     SP2,PTCNPRS5
          GOTO      GHDR7500 IF EQUAL       * Blank 5th report code    *C-53150
.
          MATCH     "00",PTCNPRS5
          GOTO      GHDR7500 IF EQUAL       * Blank 5th report code    *C-53150
.
          MATCH     SP20,PTCNRNG5
          GOTO      GHDR7500 IF EQUAL       * Blank 5th date range     *C-53150
.
          MATCH     "000000000000",PTCNRNG5
          GOTO      GHDR7500 IF EQUAL       * Blank 5th date range     *C-53150
.
          MOVE      "5",FORM2
          CALL      SRVR0000                * Setup report variables
.
GHDR7500  MATCH     SP2,PTCNPRS6                                       *I-53150
          GOTO      GHDR8000 IF EQUAL       * Blank 6th report code
.
          MATCH     "00",PTCNPRS6
          GOTO      GHDR8000 IF EQUAL       * Blank 6th report code
.
          MATCH     SP20,PTCNRNG6
          GOTO      GHDR8000 IF EQUAL       * Blank 6th date range
.
          MATCH     "000000000000",PTCNRNG6
          GOTO      GHDR8000 IF EQUAL       * Blank 6th date range
.
          MOVE      "6",FORM2
          CALL      SRVR0000                                       *end I-53150
.
GHDR8000  UNPACK    VERSION,KEY6,PRSVER
          PACK      PRSVER,PRSVER,SP3       * Software version number
          PACK      TRANTYPE,H5,SP70
.
          IF        MEDIUM=1
            WRITE     WORK,SEQ;TRANTYPE,PTCNHCOD,PRDSTDTE,PRDEDDTE:
                               RPTOPTN,PRSTCON,PRSTREQ:           
                               PRSREP1,PRSRNG1,PRSREP2,PRSRNG2:
                               PRSREP3,PRSRNG3,PRSREP4,PRSRNG4:
                               PRSREP5,PRSRNG5,PRSREP6,PRSRNG6:   
                               PRSVER
          ELSE
.                                           * write Tape recds (with ";")
            WRITE     WORK,SEQ;TRANTYPE,PTCNHCOD,PRDSTDTE,PRDEDDTE:    
                               RPTOPTN,PRSTCON,PRSTREQ:         
                               PRSREP1,PRSRNG1,PRSREP2,PRSRNG2:
                               PRSREP3,PRSRNG3,PRSREP4,PRSRNG4:
                               PRSREP5,PRSRNG5,PRSREP6,PRSRNG6:      *C-49016
                               PRSVER;
          ENDIF 
.
GHDR9000  MOVE      ZERO,EXIT
GHDR9999  RETURN
+
.******************************************************************************
.*                                  WDTF0000              Called by: GAEP0000 *
.*                          Write Records To prsdtlaf              & GDGR0000 *
.******************************************************************************
WDTF0000  BRANCH    EUPHF,WDTF9000
.
          MOVE      SP70,P2DTEPSD
          MOVE      SP70,P2DTCODD
          PACK      KEY18,P2HRURUN,AADMNO
          CALL      RDP2DTL1                * Read a PRS2 run detail file record
          IF        OVRCD=1
            MOVE      P2HRURUN,P2DTURUN
            MOVE      AADMNO,P2DTADMN
            MOVE      EPSNDFG,P2DTEPSS
            COMPARE   ONE,EPSNDFG
            IF        @EQUAL
              PACK      P2DTEPSD,CCC,CYY,CMM,CDD
              REP        " 0",P2DTEPSD
            ENDIF
            MOVE      COSNDFG,P2DTCODS
            COMPARE   ONE,COSNDFG
            IF        @EQUAL
              PACK      P2DTCODD,CCC,CYY,CMM,CDD
              REP        " 0",P2DTCODD
            ENDIF
            MOVE      SP70,P2DTSPAR
            PACK      KEY18,P2DTURUN,P2DTADMN
            CALL      WRP2DTL1              * Write a PRS2 run detail file rec
          ELSE
            MATCH     "0",P2DTEPSS
            IF        @EQUAL
              MOVE      EPSNDFG,P2DTEPSS
            ENDIF
            MATCH     "0",P2DTCODS
            IF        @EQUAL
              MOVE      COSNDFG,P2DTCODS
            ENDIF
            CALL      UPP2DTL1              * Update a PRS2 run detail file rec
          ENDIF
.
WDTF9000  MOVE      ZERO,EXIT
WDTF9999  RETURN
+
.******************************************************************************
.*                                  SRVR0000              Called by: GHDR0000 *
.*                           Setup Report Variables                           *
.******************************************************************************
SRVR0000  LOAD      KEY2,FORM2,PTCNPRS1,PTCNPRS2,PTCNPR3A:             *C-53150
                               PTCNPRS4,PTCNPRS5,PTCNPRS6              *C-49016
          REP       " 0",KEY2
          LOAD      KEY12,FORM2,PTCNRNG1,PTCNRNG2,PTCNRNG3:            *C-53150
                                PTCNRNG4,PTCNRNG5,PTCNRNG6             *C-49016
.         REP       " 0",KEY12
.         IF        FORM2=3
.           MOVE      "03",KEY2
.           UNPACK    KEY12,CCENT,CYEAR,CMON,CDAY
.           PACK      KEY12,CDAY,CMON,CCENT,CYEAR,SP4
.         ELSE
.
          MATCH     "13",KEY2                                          *I-42453
          IF        @EQUAL
            UNPACK    KEY12,CCENT,CYEAR,CMON,CDAY                      *I-42453
            PACK      KEY12,CDAY,CMON,CCENT,CYEAR,SP4                  *I-42453
          ELSE                                                         *I-42453
            MATCH     "03",KEY2                                        *I-53150
            IF        @EQUAL
              UNPACK    KEY12,CCENT,CYEAR,CMON,CDAY                    *I-53150
              PACK      KEY12,CDAY,CMON,CCENT,CYEAR,SP4                *I-53150
            ELSE
              UNPACK    KEY12,CCENT,CYEAR,CMON,XCENT,XYEAR,XMON        *I-42453
              PACK      KEY12,CMON,CCENT,CYEAR,XMON,XCENT,XYEAR        *I-42453
            ENDIF
          ENDIF
.
          ADD       ONE,REPPOS
          STORE     KEY2,REPPOS,PRSREP1,PRSREP2,PRSREP3:
                                PRSREP4,PRSREP5,PRSREP6                *C-49016
          STORE     KEY12,REPPOS,PRSRNG1,PRSRNG2,PRSRNG3:
                                 PRSRNG4,PRSRNG5,PRSRNG6               *C-49016
.
SRVR9000  MOVE      ZERO,EXIT
SRVR9999  RETURN
+
.******************************************************************************
.*                                  GDEP0000              Called by: PRUN0000 *
.*                           Get Deleted Admissions                           *
.******************************************************************************
GDEP0000  DISPLAY   *P1:23,*EF,"Processing deleted admissions":
                    *P1:24,"Admission : ";
.
          MATCH     DATECHCK,CHCSED
          IF        @LESS
            MOVE      ZERO,DOYR2025
          ELSE
            MOVE      ONE,DOYR2025
          ENDIF
          RESET     REPTNAME
.
          MOVE      ZERO,RPYTDF             * Run previous YTD file - no
          COMPARE   ONE,PREEXIST
          GOTO      GDEP1000 IF NOT EQUAL   * No previous YTD file exists
.
          CALL      CIJA0000                * Check if july or august
          BRANCH    EXIT,GDEP1000           * Not july or august
.
          MOVE      ONE,RPYTDF              * Run previous YTD file - yes
          CLOSE     PATYTDA1
          OPEN      PATYTDA1,PREVYEAR       * Open previous YTD file
.
GDEP1000  MOVE      ZERO,DSPCNT
          MOVE      SP8,KEY8
          CALL      RSPTYTD1                * Position on & read a YTD file
GDEP2000  CALL      RKPTYTD1                  record
          BRANCH    OVRCD,GDEP4000
.
          MATCH     "1",PTCNPRSM
          IF        @EQUAL
            MATCH     HOSPCODE,PTYDHOSP
            GOTO      GDEP2000 IF NOT EQUAL
            PACK      KEY3,HOSPCODE,SP70
            CALL      RDPTHSP1                * Read a hospital file record
            BRANCH    OVRCD,GDEP2000
.
            UNPACK    PTHSHSNO,KEY1,SITEID    * Site id
            UNPACK    PTHSHDPC,NEWSITID       * New 4 character Site id
          ENDIF
.
          ADD       ONE,DSPCNT
          IF        DSPCNT%40=1
            DISPLAY   *P13:24,*V2LON,PTYDADMN;
          ENDIF
.
          MATCH     SP8,PTYDDTDL
          GOTO      GDEP3000 IF EQUAL       * Patient not deleted
.
          MATCH     CHCSST,PTYDDTDL
          GOTO      GDEP2000 IF LESS        * Date deleted < start date, ignore
.
GDEP3000  PACK      KEY8,PTYDADMN
          CALL      RDMISS1                 * Read an admin file record
          BRANCH    OVRCD,GDEP2000
.
          MOVE      ASTAT,KEY1
          REP       "1021314150",KEY1
          MOVE      ONE,FORM1
          MOVE      KEY1,FORM1
          BRANCH    FORM1,GDEP2000          * Ignore admitted, disch or onleave
.
          MOVE      AURNO,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,GDEP2000          * missing master record
.
          MOVE      AURNO,KEY8
          CALL      RDPMPX21                * Read a PMI extension file record
          BRANCH    OVRCD,GDEP2000
.
          CALL      INTV0000                * Intialise E2 vars
          MOVE      PTYDFORM,CURRFORM
          MOVE      "1",TOTEPIS
          MOVE      "1",EPISODNO
          CALL      GSID0000
          CALL      UKEY0000                * Get the unique key
          LOAD      ERRFLG,PTERRFLG,ONE
.
          MOVE      SP8,DDATE
          MOVE      "99999999999",EPIMEDI   * For removal from system
          CALL      GETUT000                * Get unplanned theatre
.
          CALL      GTIGEN00                * Get Identifying Gender
          CALL      GTNDIS00                * Get NDIS Participant Identifier
.
          CALL      PEPI0000                * Post episode record
.
          MATCH     SP8,PTYDDTDL
          GOTO      GDEP2000 IF NOT EQUAL   * Patient already deleted
.
          MOVE      CURDATE8,PTYDDTDL
          CALL      UPPTYTD1                * Update the YTD file
          GOTO      GDEP2000
.
GDEP4000  COMPARE   ONE,RPYTDF
          GOTO      GDEP9000 IF NOT EQUAL   * Previous YTD file already run
.
          CLOSE     PATYTDA1
          OPEN      PATYTDA1,YEARFILE       * Open current YTD file
          MOVE      ZERO,RPYTDF             * Run previous YTD file - no
          GOTO      GDEP1000
.
GDEP9000  MOVE      ZERO,EXIT
GDEP9999  RETURN
+
.******************************************************************************
.*                                  GDPEI000              Called by: PRUN0000 *
.*                           Get Deleted patpeiaf Admissions                  *
.******************************************************************************
GDPEI000  MOVE      ZERO,ADMDTFLG
.
          MATCH     DATECHCK,CHCSED
          IF        @LESS
            MOVE      ZERO,DOYR2025
          ELSE
            MOVE      ONE,DOYR2025
          ENDIF
          RESET     REPTNAME
.
          PACK      KEY17,SP8,THREE,SP30
          CALL      RSPTPEI2                * Position on & read an exclusion/
GDPEI100  CALL      RKPTPEI2                  inclusion file record
          BRANCH    OVRCD,GDPEI150
.
          MATCH     SP70,PTPESTDT
          GOTO      GDPEI150 IF NOT EQUAL   * Different start date
.
          CALL      GSID0000
.
          MATCH     "1",PTCNPRSM
          IF        @EQUAL
            PACK      KEY8,DPTPEADM,SP70
            CALL      RDPMVX11
            IF        OVRCD<>1
              MATCH     HOSPCODE,PMVXMHOS
              GOTO      GDPEI100 IF NOT EQUAL
            ELSE
              PACK      KEY6,PTMIXWRD,SP70
              CALL      RDWARD1                 * Read a ward file record
              IF        OVRCD<>1
                MATCH     HOSPCODE,PTWDHOSN
                GOTO      GDPEI100 IF NOT EQUAL
              ENDIF
            ENDIF
            PACK      KEY3,HOSPCODE,SP70
            CALL      RDPTHSP1                * Read a hospital file record
            BRANCH    OVRCD,GDPEI100
.
            UNPACK    PTHSHSNO,KEY1,SITEID    * Site id
            UNPACK    PTHSHDPC,NEWSITID       * New 4 character Site id
.
          ENDIF
.
          COMPARE   PTPESTAT,THREE
          IF        !@EQUAL
            COMPARE   PTPESTAT,FOUR
            GOTO      GDPEI150 IF NOT EQUAL * Not 'deleted' or 'incl & deleted'
          ENDIF
.
          CALL      SDEL0000                * Validate & process admin details
          GOTO      GDPEI100
.
GDPEI150  PACK      KEY17,CHCSST,THREE,SP30
          CALL      RSPTPEI2                * Position on & read an exclusion/
GDPEI200  CALL      RKPTPEI2                  inclusion file record
          BRANCH    OVRCD,GDPEI999
.
          MATCH     PTPESTDT,CHCSST
          GOTO      GDPEI999 IF NOT EQUAL   * Different start date
.
          CALL      GSID0000
.
          MATCH     "1",PTCNPRSM
          IF        @EQUAL
            PACK      KEY8,DPTPEADM,SP70
            CALL      RDPMVX11
            IF        OVRCD<>1
              MATCH     HOSPCODE,PMVXMHOS
              GOTO      GDPEI200 IF NOT EQUAL
            ELSE
              PACK      KEY6,PTMIXWRD,SP70
              CALL      RDWARD1                 * Read a ward file record
              IF        OVRCD<>1
                MATCH     HOSPCODE,PTWDHOSN
                GOTO      GDPEI200 IF NOT EQUAL
              ENDIF
            ENDIF
            PACK      KEY3,HOSPCODE,SP70
            CALL      RDPTHSP1                * Read a hospital file record
            BRANCH    OVRCD,GDPEI200
.
            UNPACK    PTHSHSNO,KEY1,SITEID    * Site id
            UNPACK    PTHSHDPC,NEWSITID       * New 4 character Site id
.
          ENDIF
          COMPARE   PTPESTAT,THREE
          IF        !@EQUAL
            COMPARE   PTPESTAT,FOUR
            GOTO      GDPEI999 IF NOT EQUAL * Not 'deleted' or 'incl & deleted'
          ENDIF
.
          CALL      SDEL0000                * Validate & process admin details
          GOTO      GDPEI200
.
.
GDPEI999  RETURN
+
.******************************************************************************
.*                                  SDEL0000              Called by: PRUN0000 *
.*                           Send delete record                               *
.******************************************************************************
SDEL0000  PACK      KEY8,PTPEADMN,SP70
          CALL      RDMISS1
          BRANCH    OVRCD,SDEL9999
.
          CALL      INTV0000                * Intialise E2 vars
          MOVE      PTCNUKEY,CURRFORM
          MOVE      "1",TOTEPIS
          MOVE      "1",EPISODNO
          CALL      UKEY0000                * Get the unique key
          LOAD      ERRFLG,PTERRFLG,ONE
.
          MOVE      SP8,DDATE
          MOVE      "99999999999",EPIMEDI   * For removal from system
          CALL      PEPI0000                * Post episode record
.
SDEL9999  RETURN
+
.******************************************************************************
.*                                  GPEP0000              Called by: PRUN0000 *
.*                         Get Primary Episode Records                        *
.******************************************************************************
GPEP0000  DISPLAY   *P1:23,*EF,"Extracting current episode data";
          MOVE      ZERO,BEDDAYS
.
          CALL      CRAT0000                * Create and open temp adm nos file
          CALL      LODT0000                * Load tempfile with admissions
          CALL      SPCT0000                * Set percent variables
.
          MOVE      ZERO,DSPCNT
          DISPLAY   *P1:24,*EL;
          MOVE      FALSE,FLAGAUDT
          MOVE      SP70,KEY26
          CALL      RSPRTMP2                * Position on & read a tempfile
GPEP1000  CALL      RKPRTMP2                  record
          BRANCH    OVRCD,GPEP9000
.
          ADD       ONE,DSPCNT
          IF        DSPCNT%20=1
            IF        XTYPE=1
              DISPLAY   *P1:24,"Current admission : ",*V2LON,XADMN,SP3;
            ENDIF
            IF        XTYPE=2
              DISPLAY   *P1:24,"On-leave admission : ",*V2LON,XADMN,SP2;
            ENDIF
            IF        XTYPE=3
              DISPLAY   *P1:24,"Discharged admission : ",*V2LON,XADMN;
            ENDIF
          ENDIF
.
          PERFORM   XTYPE,LADM0000,LADM0000,LDSC0000
.                         Current  On-leave Discharged
          BRANCH    EXIT,GPEP9500
          GOTO      GPEP1000
.
GPEP9000  MOVE      ZERO,EXIT
          GOTO      GPEP9999
.
GPEP9500  MOVE      ONE,EXIT
GPEP9999  RETURN
+
.******************************************************************************
.*                                  CLRV0000              Called by: PRUN0000 *
.*                        Clear Work & Total Variables                        *
.******************************************************************************
CLRV0000  MOVE      ZERO,ERRFLG
          MOVE      ZERO,RECCNT
          MOVE      ZERO,WRNFLG
          MOVE      ZERO,NUMERROR
          MOVE      ZERO,NUMWARN
          MOVE      ZERO,NUMNOTIF
          MOVE      ZERO,FORM2
CLRV1000  ADD       "1",FORM2
          STORE     ZERO,FORM2,PEPINEW,PEPICOR,PEPIDEL,DIAGNEW,DIAGCOR:
                               DIAGDEL,DVACOR,DVANEW,DVADEL,SUBANEW:
                               SUBACOR,SUBADEL
          COMPARE   "13",FORM2
          GOTO      CLRV1000 IF LESS 
.
CLRV9000  MOVE      ZERO,EXIT
CLRV9999  RETURN
+
.******************************************************************************
.*                                  CROY0000                                  *
.*        create and open temp Adm Nos file for ROY      called by : PRUN0000 *
.******************************************************************************
CROY0000  CALL      KROY0000                     * delete temp Adm Nos file
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FNAMEC,CMDLINE
          APPEND    " 9 U1-8",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      ROYTEMP,FNAMEC
.
CROY9999  RETURN
.******************************************************************************
.*                                  CRAT0000                                  *
.*        create and open temp Adm Nos file              called by : PRUN0000 *
.******************************************************************************
CRAT0000  CALL      KLAT0000                     * delete temp Adm Nos file
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FNAMEA,CMDLINE
          APPEND    " 9 U1-8",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          APPEND    " 27 U1-8,9-9,10-17,18-18",CMDLINE
          APPEND    " U19-26,1-8,9-9,10-17,18-18",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      ADMTEMP,FNAMEA
          OPEN      PRSTEMP1,TEMPFILE
          OPEN      PRSTEMP2,TEMPFILE
.
CRAT9999  RETURN
.******************************************************************************
.*                                  KLAT0000                                  *
.*        routine to delete temp Adm Nos file            called by : CRAT0000 *
.******************************************************************************
KLAT0000  CLOSE     ADMTEMP
          CLOSE     PRSTEMP1
          CLOSE     PRSTEMP2
.
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FNAMEA,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    TEMPFILE,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
KLAT9999  RETURN
.****************************************************************************
.*                            KROY0000                Called by: GPEP0000   *
.*                Create Rest-Of-Year Temp admissions file                  *
.****************************************************************************
KROY0000  CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FNAMEC,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
KROY9999  RETURN
+
.******************************************************************************
.*                                  BRDR0000                                  *
.*  Check if this patient is a boarder                called by : LODT,GACD,..*
.******************************************************************************
BRDR0000  MATCH     SP3,ATYPE
          GOTO      BRDR8000 IF EQUAL
          PACK      KEY5,ANSA,SP1,ATYPE
          CALL      RDCODE1
          BRANCH    OVRCD,BRDR8000
.
          CMATCH    "X",TCINDC12                 * Ignore patient with X 
          GOTO      BRDR9000 IF EQUAL
.
          CMATCH    "B",TCINDC3                  * check if a boarder
          GOTO      BRDR9000 IF EQUAL
.
BRDR8000  MOVE      ZERO,OVRCD                   * not a boarder
          GOTO      BRDR9999
.
BRDR9000  MOVE      ONE,OVRCD                    * is a boarder
.
BRDR9999  RETURN
.****************************************************************************
.*                            LODT0000                Called by: GPEP0000   *
.*                Load temporary file with admissions                       *
.****************************************************************************
LODT0000  MOVE      ZERO,TOTRECS
.
          MOVE      ZERO,DSPCNT
          DISPLAY   *P1:24,*EL,"Loading current admissions : ";
          PACK      KEY9,TWO,SP10
          CALL      RDSMISS2                     * position read Admissions file
LODT1000  CALL      RDKMISS2                     * read next Admissions record
          BRANCH    OVRCD,LODT1500               * end-of-file
.
          COMPARE   TWO,ASTAT                    * same ASTAT value ?
          GOTO      LODT1500 IF NOT EQUAL        * no
.
          MATCH     "1",PTCNPRSM
          IF        @EQUAL
            PACK      KEY8,DAADMNO,SP70
            CALL      RDPMVX11
            IF        OVRCD<>1
              MATCH     HOSPCODE,PMVXMHOS
              GOTO      LODT1000 IF NOT EQUAL
            ENDIF
          ENDIF
.
          ADD       ONE,DSPCNT
          IF        DSPCNT%40=1
            DISPLAY   *P33:24,*V2LON,AADMNO;
          ENDIF
.
          CALL      CHKEXC00                * Check if excluded
          BRANCH    EXIT,LODT1000
.
          CALL      BRDR0000                     * patient is a boarder ?
          BRANCH    OVRCD,LODT1000               * yes, ignore
.
          CALL      EXNB0000                  * Excluded newborn
          BRANCH    EXIT,LODT1000
.
          MOVE      AURNO,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,LODT1000               * missing master record
.
          MOVE      AURNO,KEY8
          CALL      RDPMPX21                * Read a PMI extension file record
          BRANCH    OVRCD,LODT1000
.
          MATCH     ADATE,CHCSED                 * Admitted after end date
          GOTO      LODT1000 IF LESS
.
          PACK      KEY18,AADMNO,ONE,SP10
          MOVE      ADATE,XADATE
          CALL      WRPRTMP1                     * write record
          ADD       "1",TOTRECS
          GOTO      LODT1000                     * get next admission record
.
LODT1500  DISPLAY   *P1:24,*EL,"Loading on-leave admissions : ";
          PACK      KEY9,FOUR,SP10
          CALL      RDSMISS2                     * position read Admissions file
LODT2000  CALL      RDKMISS2                     * read next Admissions record
          BRANCH    OVRCD,LODT2500               * end-of-file
.
          COMPARE   FOUR,ASTAT                   * same ASTAT value ?
          GOTO      LODT2500 IF NOT EQUAL        * no
.
          MATCH     "1",PTCNPRSM
          IF        @EQUAL
            PACK      KEY8,AADMNO,SP70
            CALL      RDPMVX11  
            IF        OVRCD<>1
              MATCH     HOSPCODE,PMVXMHOS
              GOTO      LODT2000 IF NOT EQUAL 
            ENDIF                            
          ENDIF
.
          ADD       ONE,DSPCNT
          IF        DSPCNT%40=1
            DISPLAY   *P33:24,*V2LON,AADMNO;
          ENDIF
.
          CALL      CHKEXC00
          BRANCH    EXIT,LODT2000           * Excluded patient     
.
          CALL      BRDR0000                     * patient is a boarder ?
          BRANCH    OVRCD,LODT2000               * yes, ignore
.
          CALL      EXNB0000                  * Excluded newborn
          BRANCH    EXIT,LODT2000
.
          MOVE      AURNO,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,LODT2000               * missing master record
.
          MOVE      AURNO,KEY8
          CALL      RDPMPX21                * Read a PMI extension file record
          BRANCH    OVRCD,LODT2000
.
          MATCH     ADATE,CHCSED                 * Admitted after end date
          GOTO      LODT2000 IF LESS
.
          PACK      KEY18,AADMNO,TWO,SP10
          MOVE      ADATE,XADATE
          CALL      WRPRTMP1                     * write record
          ADD       "1",TOTRECS
          GOTO      LODT2000                     * get next admission record
.
.         Get discharged patients
.
LODT2500  DISPLAY   *P1:24,*EL,"Loading discharged admissions : ";
          PACK      KEY16,CHCSST,SP10
          CALL      RDSDSCH2                     * position read PATDSCFD file
LODT3000  CALL      RDKDSCH2                     * read next PATDSCFD record
          BRANCH    OVRCD,LODT9000               * end-of-file
.
          MATCH     "1",PTCNPRSM
          IF        @EQUAL
            PACK      KEY8,DDADMNO,SP70
            CALL      RDPMVX11 
            IF        OVRCD<>1
              MATCH     HOSPCODE,PMVXMHOS
              GOTO      LODT3000 IF NOT EQUAL
            ENDIF                           
          ENDIF
.
          ADD       ONE,DSPCNT
          IF        DSPCNT%40=1
            DISPLAY   *P33:24,*V2LON,DADMNO;
          ENDIF
.
          CALL      PRSL0000                     * Check PRS2 Live Date
          BRANCH    EXIT,LODT3000                * Do not collect data
.
          MOVE      DADMNO,KEY8
          CALL      RDMISS1                      * missing admission record
          BRANCH    OVRCD,LODT3000
.
          CALL      CHKEXC00
          BRANCH    EXIT,LODT3000           * Excluded patient     
.
          CALL      BRDR0000                     * patient is a boarder ?
          BRANCH    OVRCD,LODT3000               * yes, ignore
.
          CALL      EXNB0000                  * Excluded newborn
          BRANCH    EXIT,LODT3000
.
          MOVE      DURNO,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,LODT3000               * missing master record
.
          MOVE      DURNO,KEY8
          CALL      RDPMPX21                * Read a PMI extension file record
          BRANCH    OVRCD,LODT3000
.
          MATCH     ADATE,CHCSED                 * Adm Date > End Date ?
          GOTO      LODT3000 IF LESS             * yes
.
          MATCH     CHCSST,DDATE                 * Dsch Date < Start Date ?
          GOTO      LODT3000 IF LESS             * yes
.
.         MATCH     DDATE,CHCSED                 * I CAR 43118
.         GOTO      LODT3000 IF LESS             * I CAR 43118
.
          PACK      KEY18,AADMNO,THREE,SP10
          MOVE      ADATE,XADATE
          CALL      WRPRTMP1                     * write record
          ADD       "1",TOTRECS
          GOTO      LODT3000                     * get next discharge record
.
LODT9000  MOVE      ZERO,EXIT
LODT9999  RETURN
+
.******************************************************************************
.*    CHKEXC00                                           Called by LODT0000   *
.* Check if this patient is excluded                                          *
.******************************************************************************
CHKEXC00  MOVE      ZERO,EXIT
          PACK      KEY16,AADMNO,PEISTDTE,SP70
          CALL      RDPTPEI3                * Read a PRS2 excl/incl file record
          BRANCH    OVRCD,CHKEXC10
.
          COMPARE   ONE,PTPESTAT            
          GOTO      CHKEXC90 IF EQUAL
.
CHKEXC10  PACK      KEY16,AADMNO,SP70
          CALL      RDPTPEI3                * Read a PRS2 excl/incl file record
          BRANCH    OVRCD,CHKEXC99
.
          COMPARE   ONE,PTPESTAT            
          GOTO      CHKEXC90 IF EQUAL
          GOTO      CHKEXC99
.
CHKEXC90  MOVE      ONE,EXIT               * Excluded patient
.
CHKEXC99  RETURN
+
.******************************************************************************
.*    DMRR0000                                           Called by PRUN0000   *
.*    Update all PTD to YTD if new run (OPTION=1) or delete PTD if re-running *
.*    (OPTION=2) & delete all MTD records if the 1st of month                 *
.******************************************************************************
DMRR0000  COMPARE   "3",OPTION
          GOTO      DMRR7000 IF NOT LESS  
.
          MOVE      OPTION,NEWFLAG
.
          DISPLAY   *P1:23,*EF,"Updating/deleting MTD & PTD admissions":
                    *P1:24,"Admission : ";
          MOVE      ZERO,DSPCNT
.
. ------- if new run check whether it is the first run for the financial yr --
.
          COMPARE   ONE,OPTION
          GOTO      DMRR1000 IF NOT EQUAL
.
          MATCH     CHCSST,SFINYEAR          * 1st Period for the Year
          GOTO      DMRR1000 IF NOT EQUAL   
.
          COMPARE   FALSE,PREEXIST
          IF        @EQUAL
            MOVE      TWO,NEWFLAG
            GOTO      DMRR1000
          ENDIF
.
          OPEN      PATYTDA1,PREVYEAR
.
DMRR1000  MOVE      SP8,KEY8
          CALL      RSPTPTD1
DMRR1500  CALL      RKPTPTD1
          BRANCH    OVRCD,DMRR5000
.
          MATCH     "1",PTCNPRSM
          IF        @EQUAL
            MATCH     HOSPCODE,PTPDHOSP
            GOTO      DMRR1500 IF NOT EQUAL
          ENDIF
          ADD       ONE,DSPCNT
          IF        DSPCNT%40=1
            DISPLAY   *P13:24,*V2LON,PTPDADMN;
          ENDIF
          BRANCH    NEWFLAG,DMRR2000,DMRR4000 * New Run (not re-running)
.
. ------- If New Run - Update YTD File (either write or update)
DMRR2000  MOVE      PTPDADMN,KEY8
          CALL      RDPTYTD1
          BRANCH    OVRCD,DMRR3000
.
          CALL      ADPY0000                 * Add Period to Year Vars
          CALL      UPPTYTD1                 * Update YTD Vars
          GOTO      DMRR4000
          
. ------- Write New Record YTD
DMRR3000  CALL      CLRY0000                 * Clear YTD Vars
          CALL      ADPY0000                 * Add Period to Year Vars
          MOVE      PTPDADMN,KEY8
          MOVE      PTPDADMN,PTYDADMN
          MOVE      HOSPCODE,PTYDHOSP
          MOVE      SP8,PTYDDTDL
          CALL      WRPTYTD1                 * Write new YTD Vars
.
. ------- Re-Running - Just delete all PTD data
DMRR4000  IF        NEWFLAG=2
            MOVE      PTPDADMN,KEY8
            CALL      RDPTMTD1
            BRANCH    OVRCD,DMRR4500
.
            CALL      DELMTD00
            CALL      UPPTMTD1                 * Update MTD Vars
          ENDIF
DMRR4500  MOVE      PTPDADMN,KEY8
          CALL      DEPTPTD1                 * Delete PTD data
          GOTO      DMRR1500
.
. ----- Check if 1st of month & if so delete MTD file -----
.
DMRR5000  UNPACK    CHCSST,CCENT,CYEAR,CMON,CDAY
          MATCH     "01",CDAY
          GOTO      DMRR7000 IF NOT EQUAL   * Not the 1st of month
.
          PACK      KEY8,SP8
          CALL      RSPTMTD1                * Position on & read a MTD file
DMRR6000  CALL      RKPTMTD1                  record
          BRANCH    OVRCD,DMRR7000
.
          MATCH     "1",PTCNPRSM
          IF        @EQUAL
            MATCH     HOSPCODE,PTMDHOSP
            GOTO      DMRR6000 IF NOT EQUAL
          ENDIF
          ADD       ONE,DSPCNT
          IF        DSPCNT%40=1
            DISPLAY   *P13:24,*V2LON,PTMDADMN;
          ENDIF
.
          PACK      KEY8,PTMDADMN,KEY8
          CALL      DEPTMTD1                * Delete a MTD file record
          GOTO      DMRR6000
.
DMRR7000  OPEN      PATYTDA1,YEARFILE
.
DMRR9000  MOVE      ZERO,EXIT
DMRR9999  RETURN
+
.******************************************************************************
.*                                  LADM0000              Called by: GPEP0000 *
.*                            Load Admitted Patient                           *
.******************************************************************************
LADM0000  CALL      CLPATDSC                * Clear discharge variables
          PACK      KEY8,XADMN
          CALL      RDMISS1                 * Read an admission file record
          BRANCH    OVRCD,LADM9000
.
          PACK      KEY8,AURNO
          CALL      RDMAST1                 * Read a master file record
          BRANCH    OVRCD,LADM9000
.
          PACK      KEY8,AURNO
          CALL      RDPMPX21                * Read a PMI extension file record
          BRANCH    OVRCD,LADM9000
.
          PACK      KEY8,AADMNO
          CALL      RDVISA1                 * Read a visit file record
          BRANCH    OVRCD,LADM9000
.
          PACK      KEY8,AADMNO
          CALL      RDPMVX11                * Read a visit extension file record
          BRANCH    OVRCD,LADM9000
.
          MATCH     ADATE,CHCSED
          GOTO      LADM9000 IF LESS        * End date < admission date
.
          CALL      GAEP0000                * Get all episodes for admission  
          BRANCH    EXIT,LADM9000,LADM9500
.
LADM9000  MOVE      ZERO,EXIT
          GOTO      LADM9999
.
LADM9500  MOVE      ONE,EXIT
LADM9999  RETURN
+
.******************************************************************************
.*                                  LDSC0000              Called by: GPEP0000 *
.*                           Load Discharged Patient                          *
.******************************************************************************
LDSC0000  CALL      CLPATDSC                * Clear discharge variables
          PACK      KEY8,XADMN
          CALL      RDDSCH1                 * Read a discharge file record
          BRANCH    OVRCD,LDSC9000
.
          PACK      KEY8,XADMN
          CALL      RDMISS1                 * Read an admission file record
          BRANCH    OVRCD,LDSC9000
.
          PACK      KEY8,AURNO
          CALL      RDMAST1                 * Read a master file record
          BRANCH    OVRCD,LDSC9000
.
          PACK      KEY8,AURNO
          CALL      RDPMPX21                * Read a PMI extension file record
          BRANCH    OVRCD,LDSC9000
.
          PACK      KEY8,AADMNO
          CALL      RDVISA1                 * Read a visit file record
          BRANCH    OVRCD,LDSC9000
.
          PACK      KEY8,AADMNO
          CALL      RDPMVX11                * Read a visit extension file record
          BRANCH    OVRCD,LDSC9000
.
          CALL      PRSL0000                * Check PRS2 live date
          BRANCH    EXIT,LDSC9000
.
          CALL      GAEP0000                * Get all episodes for admission  
          BRANCH    EXIT,LDSC9000,LDSC9500
.
LDSC9000  MOVE      ZERO,EXIT
          GOTO      LDSC9999
.
LDSC9500  MOVE      ONE,EXIT
LDSC9999  RETURN
+
.******************************************************************************
.*                                 FRST0000                                   *
.*                 Check to see if we are doing the first run ever            *
.******************************************************************************
FRST0000  MOVE      FALSE,FLAGFRST
          MOVE      SP8,KEY8
          CALL      RSPTYTD1                * position on the trailer file
          CALL      RKPTYTD1                * if no records then we must be
          BRANCH    OVRCD,FRST9000            doing the first run ever
          GOTO      FRST9999
.
.------ we are doing the first run ever ------
.
FRST9000  MOVE      TRUE,FLAGFRST
.
FRST9999  RETURN
.******************************************************************************
.*                                  GAEP0000                                  *
.*  generate all episode records for the same admission  called by : MAINLINE *
.******************************************************************************
GAEP0000  MOVE      ZERO,DOYR2025
          CALL      GDET0000                * Get patients details
          PACK      KEY8,AADMNO
          CALL      RDDSCH1                 * Read a disch file record
          IF        OVRCD=1
            MOVE     SP70,DDATE
          ENDIF
.
          MOVE      DDATE,ICDRDDTE          * Used for reading ICD files 
.
          MATCH     DATECHCK,CHCSED
          IF        @LESS
            MOVE      ZERO,DOYR2025
            GOTO      GAEP0500
          ENDIF
.
          MATCH     SP70,DDATE
          IF        @EQUAL
            MOVE      ONE,DOYR2025
            GOTO      GAEP0500
          ENDIF
.
          MATCH     DATECHCK,DDATE
          IF        @LESS
            MOVE      ZERO,DOYR2025
          ELSE
            MOVE      ONE,DOYR2025
          ENDIF
.
.
.
GAEP0500  MOVE      "1",EPISODNO            * First Episode for Admission
          MOVE      ZERO,ADMDTFLG           * Admin details flag - no
          MOVE      ZERO,PTERRFLG           * Patient error flag - no
          MOVE      SP8,CCHGDATE
          MOVE      ZERO,VETFLAG            * Veterian affairs flag - no
          MOVE      ZERO,TACFLAG            * TAC flag - no
          MOVE      ZERO,DSEGFLAG
          MOVE      ONE,EPSNDFG             * PRS2 episode sent - yes
          MOVE      ZERO,COSNDFG            * PRS2 coding sent - no
.
          PACK      AGEDATE,ADATE
          CALL      CALCAGE                 * Calculate age as of admin date
          MOVE      PSAGEYRS,PSAGE
.
          CALL      GFRM0000                * Get Format to Write as
          CALL      CLRM0000                * Clear month variables
          CALL      CLRP0000                * Clear period variables
          CALL      GSID0000                * Get site id code
          CALL      GTEP0000                * Get Total Episodes for Admission
          CALL      GCEP0000                * Get Common Episode Rec. Vars
          BRANCH    EXIT,GAEP9100
.
          CALL      SCAR0000                * get starting care type
          MOVE      FALSE,LASTEPIS
          PACK      KEY24,AADMNO,SP20
          CALL      RDSCHCO1                * positional read on PATCHCFD file
GAEP1000  CALL      RCHC0000                * Get next CHC record
          BRANCH    EXIT,GAEP3000           * No more Care type changes
.
          CALL      UTAD0000                * Update Trailer Admissions
          CALL      CISD0000                * Check if Discharged in Period
          CALL      UKEY0000                * Get Unique Key
          CALL      ATYP0000                * get Admission Type Norm or Stat
          CALL      CRTN0000                * get Criterion for Admission
          CALL      LEAV0000                * Calculate Leave Days For Episode
.
. ------- Set up all Status Segment Information
          MOVE      CHCSED,SCHCSED          * Save End Period Date
          CALL      SSEG0000                * Get Status Segment Data 4 Episode
          MOVE      SCHCSED,CHCSED          * Restore End Period Date
          CALL      GUSP0000              * Get Admit/Disch Unit/Specialty
          CALL      DSEG0000                * Get Separation Segment
          CALL      MSFS0000                * Get the MHLS & the PFS
          CALL      SFDA0000                * Get the special fund arrange code
          CALL      VPGR0000                * Validate planned geriatric resp
          CALL      VRHP0000                * Validate a reciprocal HC patient
          CALL      VCLD0000                * Validate contract leave days
          CALL      VNBN0000                * Validate a newborn
.         CALL      VPPD0000                * Validate Pall Care Days  *I-60167
          CALL      MHSWI000                * MH State Wide Identifier
.
. ------- Get Separation Information - Statistical Dschgs until actually Dschd
.
          CALL      UTSN0000                * Update Trailer Separations
......    CALL      ITRA0000                * Get itention to re-admit
          CALL      GETUT000                * Get unplanned theatre

          CALL      GTIGEN00              * Get Identifying Gender
          CALL      GTNDIS00              * Get NDIS Participant Identifier
.
          CALL      PEPI0000                * Post Episode Record
          BRANCH    EXIT,GAEP9200
.
          CALL      GVET0000                * Get veteran affairs details
          BRANCH    EXIT,GAEP9200
.
          CALL      GTAC0000                * Get TAC details
          BRANCH    EXIT,GAEP9200
.
l
          CALL      SUBA0000                * Get sub acute details
          BRANCH    EXIT,GAEP9200
.
          CALL      PALA0000                * Get palliative details
          BRANCH    EXIT,GAEP9200
.
....      CALL      EXEP0000                * Get Extra Episode Details
....      BRANCH    EXIT,GAEP9200
.
          CALL      UNCD0000                * Update New, Correction & Dels
.
          COMPARE   TOTEPIS,EPISODNO        * No more Episodes
          GOTO      GAEP2000 IF NOT LESS
.
          CALL      SETN0000                * Set up New Data for Episode
          ADD       "1",EPISODNO
          GOTO      GAEP1000                * Get Another Episode
.
GAEP2000  CALL      CRYD0000                * Check if Rest of Year vars differ
          BRANCH    ROYFLAG,GAEP3000        * Writ roytemp file - get next adm
          BRANCH    FLAGSING,GAEP3000       * Single Admn FlaG-only print dets
.
          CALL      OLRI0000                * Get On-Leave & Remaining In Tots
          CALL      WTOF0000                * Write to Correct Files
.
GAEP3000  LOAD      ERRFLG,PTERRFLG,ONE
          CALL      UPCT0000
          CALL      WDTF0000                * Write records to prsdtlaf
.
GAEP9000  MOVE      ZERO,EXIT
          GOTO      GAEP9999
.
GAEP9100  MOVE      ONE,EXIT
          GOTO      GAEP9999
.
GAEP9200  MOVE      TWO,EXIT
GAEP9999  RETURN
+
.******************************************************************************
.*                                  GACD0000              Called by: PRUN0000 *
.*                       Get All Coding With The Period                       *
.******************************************************************************
GACD0000  DISPLAY   *P1:14,*EF,*P1:23,"Extracting current coding data":
                    *P1:24,"Admission : ";
          CALL      PRCH0000                * Print coding error header
          CALL      CROY0000                * Create Rest-Of-Year tempfile
          MOVE      ONE,ROYFLAG             * Doing Rest-of-Year now
          MOVE      ZERO,EPSNDFG            * PRS2 episode sent - no
          MOVE      ONE,COSNDFG             * PRS2 coding sent - yes
.
          DISPLAY   *P1:24;"Coding ";
          MOVE      ZERO,DSPCNT
          PACK      KEY18,CHCSST,SP20
          CALL      RSPTECM2                * Read an episode morbidity changes
GACD1000  CALL      RKPTECM2                  file record
          BRANCH    OVRCD,GACD8000
.
          MATCH     PTEMCDTE,CHCSED
          GOTO      GACD8000 IF LESS        * PRS2 end date < morb change date
.
          MATCH     "1",PTCNPRSM
          IF        @EQUAL
            PACK      KEY8,DPTEMADM,SP70
            CALL      RDPMVX11 
            IF        OVRCD<>1
              MATCH     HOSPCODE,PMVXMHOS
              GOTO      GACD1000 IF NOT EQUAL
            ENDIF                         
          ENDIF
.
          ADD       ONE,DSPCNT
          IF        DSPCNT%20=1
            DISPLAY   *P13:24,*V2LON,PTEMADMN;
          ENDIF
.
          PACK      KEY8,PTEMADMN
          CALL      RDMISS1                 * Read an admin file record
          BRANCH    OVRCD,GACD1000
.
          IF        ASTAT=1 | ASTAT=5
            GOTO      GACD1000              * Ignore pre-admit or cancelled pat
          ENDIF
.
          CALL      CHKEXC00
          BRANCH    EXIT,GACD1000
.
          PACK      KEY8,AURNO
          CALL      RDMAST1
          BRANCH    OVRCD,GACD1000
.
          PACK      KEY8,AURNO
          CALL      RDPMPX21                * Read a PMI extension file record
          BRANCH    OVRCD,GACD1000
.
          PACK      KEY8,AADMNO
          CALL      RDVISA1                 * Read a visit file record
          BRANCH    OVRCD,GACD1000
.
          PACK      KEY8,AADMNO
          CALL      RDPMVX11                * Read a visit extension file record
          BRANCH    OVRCD,GACD1000
.
          CALL      CLPATDSC                * Clear discharge file variables
          PACK      KEY8,AADMNO
          CALL      RDDSCH1                 * Read a discharge file record
          IF        OVRCD<>1
            MATCH     DATECHCK,DDATE
            IF        @LESS
              MOVE      ZERO,DOYR2025
            ELSE
              MOVE      ONE,DOYR2025
            ENDIF
.
            MATCH     DDATE,CHCSED
            GOTO      GACD1000 IF LESS      * Extract end date < disch date
.
            MATCH     CHCSDTE,DDATE
            GOTO      GACD1000 IF LESS      * Extract end date < disch date
.
            MATCH     PTCNPRSL,DDATE
            GOTO      GACD1000 IF LESS      * Disch date < PRS2 go live date
          ELSE
            MOVE      SP70,DDATE
            MOVE      ZERO,DOYR2025
            MATCH     DATECHCK,CHCSDTE
            IF        !@LESS
              MOVE      ONE,DOYR2025
            ENDIF
.
          ENDIF
.
          MOVE      DDATE,ICDRDDTE          * Used for reading ICD files
.  
          MOVE      PTEMEPNO,EPISODNO
          CALL      GTEP0000                * Get total episodes
          MOVE      CARETYPE,EPISCTYP       * I CAR 42192
          COMPARE   TOTEPIS,EPISODNO
          GOTO      GACD2000 IF EQUAL       * No of episodes = total episodes
          GOTO      GACD1000 IF NOT LESS    * No of episodes > total episodes
.
GACD2000  COMPARE   ONE,EPISODNO
          GOTO      GACD3000 IF NOT EQUAL   * Not the 1st episode
.
          PACK      KEY8,PTEMADMN
          CALL      RDTMROY1                * Read a ROY tempfile record
          COMPARE   ONE,OVRCD
          GOTO      GACD1000 IF NOT EQUAL   * Already sent coding for patient
.
          CALL      BRDR0000                * Check if a boarder patient
          BRANCH    OVRCD,GACD1000
.
          CALL      EXNB0000                  * Excluded newborn
          BRANCH    EXIT,GACD1000
.
          PACK      KEY8,AURNO
          CALL      RDMAST1                 * Read a master file record
          BRANCH    OVRCD,GACD1000
.
          PACK      KEY8,AURNO
          CALL      RDPMPX21                * Read a PMI extension file record
          BRANCH    OVRCD,GACD1000
.
          PACK      KEY8,AADMNO
          CALL      RDVISA1                 * Read a visit file record
          BRANCH    OVRCD,GACD1000
.
          PACK      KEY8,AADMNO
          CALL      RDPMVX11                * Read a visit extension file record
          BRANCH    OVRCD,GACD1000
.
          CALL      GDET0000                * Get patients details
          LOAD      ERRFLG,PTERRFLG,ONE
          MOVE      ZERO,ADMDTFLG           * Admission details flag - no
          MOVE      ZERO,PTERRFLG           * Patient error flag - no
.
GACD3000  CALL      GDGR0000                * Get diagnosis record
          BRANCH    EXIT,GACD9500
.
          COMPARE   ONE,EPISODNO
          GOTO      GACD1000 IF NOT EQUAL   * Not the 1st episode
.
          MOVE      PTEMADMN,ROYADMN
          PACK      KEY8,ROYADMN
          CALL      RATMROY1
          IF        OVRCD=1
            CALL      WRTMROY1              * Write a Rest-Of-Year tempfile rec
          ENDIF
          GOTO      GACD1000
.
GACD8000  LOAD      ERRFLG,PTERRFLG,ONE
          MOVE      ZERO,ROYFLAG            * Not doing Rest-of-Year now
.
GACD9000  MOVE      ZERO,EXIT
          GOTO      GACD9999
.
GACD9500  MOVE      ONE,EXIT
GACD9999  RETURN
+
.******************************************************************************
.*                                  GSCD0000              Called by: SADM0000 *
.*                          Get Single Patient Coding     RECO0000 & PYRC0000 *
.******************************************************************************
GSCD0000  MOVE      ZERO,EPSNDFG            * PRS2 episode sent - no
          MOVE      ONE,COSNDFG             * PRS2 coding sent - yes
          PACK      KEY18,AADMNO,SP20
          CALL      RSPTECM1                * Read an episode morbidity changes
GSCD1000  CALL      RKPTECM1                  file record
          BRANCH    OVRCD,GSCD8000
.
          MATCH     AADMNO,PTEMADMN
          GOTO      GSCD8000 IF NOT EQUAL   * Different admin no
.
          MOVE      PTEMEPNO,EPISODNO
          CALL      GTEP0000                * Get total episodes
          COMPARE   TOTEPIS,EPISODNO
          GOTO      GSCD2000 IF EQUAL       * No of episodes = total episodes
          GOTO      GSCD1000 IF NOT LESS    * No of episodes > total episodes
.
GSCD2000  CALL      GDGR0000                * Get diagnosis record
          BRANCH    EXIT,GSCD9500
          GOTO      GSCD8000
.
GSCD8000  LOAD      ERRFLG,PTERRFLG,ONE
GSCD9000  MOVE      ZERO,EXIT
          GOTO      GSCD9999
.
GSCD9500  MOVE      ONE,EXIT
GSCD9999  RETURN
+
.******************************************************************************
.*                                  GDGR0000              Called by: GACD0000 *
.*                            Get Diagnosis Record                 & GSCD0000 *
.******************************************************************************
GDGR0000  COMPARE   ONE,EPISODNO
          GOTO      GDGR2000 IF NOT EQUAL   * Not the 1st episode
.
          MOVE      ADATE,AGEDATE
          CALL      CALCAGE                 * Calculate the patients age
          MOVE      PSAGEYRS,PSAGE
          MOVE      ZERO,NEWBORN            * Not a newborn
          IF        PSAGEDAY < 10
            MOVE      ONE,NEWBORN           * Newborn
          ENDIF
.
          MOVE      PSEX,DSEXCHAR
          CALL      SEXDSC00                * get sex description (in IBACOMN)
.                                           *       returns DSEXDESC & DSEXNO
          MOVE      DSEXNO,EPISEX
.
          CALL      ATYP0000                * Get the admission type
          CALL      ASCE0000                * Get the admission source
          CALL      ILOS0000                * Get the intended los
          CALL      CRTN0000                * Get the criterion for admission
          CALL      GSTP0000                * Get the discharge separation type
          MOVE      ONE,LASTEPIS
          CALL      STRF0000                * Get the separation transfer
          CALL      GFRM0000                * Get current format for writing
          CALL      GSID0000                * Get site id code
          CALL      DIDV0000                * Get duration of ICU & CMV
          CALL      GDRG0000                * Get the DRG code
...       CALL      GDCU0000                * Get dur'n of stay in CCU  I-49016
.
          PACK      KEY5,ANSA,SP1,ATYPE
          CALL      RDCODE1                 * Category 'A ' - "patcodes"
          BRANCH    OVRCD,GDGR1000

          MOVE      THCSCOD,KEY1
          REP       "C-S-R-E-B-P-",KEY1     * check for Special Funding codes
          MATCH     "-",KEY1
          GOTO      GDGR1000 IF NOT EQUAL
.
          PACK      KEY25,AADMNO,SP30
          CALL      RSPTASF1                * Position on & read the admission
          CALL      RKPTASF1                  SFA file
          BRANCH    OVRCD,GDGR1000
.
          MATCH     AADMNO,PTAFADMN
          GOTO      GDGR2000 IF EQUAL       * Same admin no
.
GDGR1000  UNPACK    SP2,PTAFCODE,PTAFCROL
.
GDGR2000  MOVE      SP70,EPPLSTID
.
          CALL      UKEY0000                * Get unique key
. *** retrigger an E5 if coded and unplanned theatre is required to be sent
          CALL      CHKE5000
.
          CALL      GDSC0000                * Get disease codes
          BRANCH    EXIT,GDGR3000
.
          CALL      GOPC0000                * Get operation codes
          CALL      GPRO0000                * Get proceduralist id
          CALL      WGHT0000                * Get admission weight
          CALL      ITRA0000                * Get itention to re-admit
          MOVE      SITEID,EPDUSRF          * User flag
          CALL      VDCB0000                * Validate the dis codes for babies
          CALL      CPDD0000                * Get care plan documented date
.
          CALL      GETUT000                * Get unplanned theatre for X5
.
GDGR3000  CALL      PDGR0000                * Post diagnosis record
          BRANCH    EXIT,GDGR9500
.
          CALL      PXDG0000                * Post xtra diagnosis record
          BRANCH    EXIT,GDGR9500
.
          CALL      WDTF0000                * Write records to prsdtlaf
.
GDGR9000  MOVE      ZERO,EXIT
          GOTO      GDGR9999
.
GDGR9500  MOVE      ONE,EXIT
GDGR9999  RETURN
+
.******************************************************************************
.*                                  DIDV0000              Called by: GDGR0000 *
.*               Duration of ICU & Mechanincal Ventilation Stay               *
.******************************************************************************
DIDV0000  UNPACK    SP20,EPDSICUH,EPDCMVH,EPDCPAPH,EPDSCCU             *C-49016
          PACK      KEY8,AADMNO
          CALL      RDPTICU1                * Read the ICU file
          BRANCH    OVRCD,DIDV9000
.
          ADD       PTICHNCU,PTICUINT       * ICU hrs = Sum of ICU & NCU hrs
.
          COMPARE   ZERO,PTICUINT
          IF        !@EQUAL
            MOVE      PTICUINT,FORM4
            MOVE      FORM4,EPDSICUH     * ICU stay
            REP       " 0",EPDSICUH
            IF        PTICUINT = 0
              MOVE      SP10,EPDSICUH       * blanks from 01/07/2004   *I-49016
            ENDIF                                                      *I-49016
          ENDIF
.
          MATCH     "1",PTCNMVHC         * Using MV details to collect Non-ICU
          IF        @EQUAL
            PROC      CALCMVHR
            SUB       MVENHOUR,PTICUMEC
            IF        PTICUMEC<0
              MOVE      ZERO,PTICUMEC
            ENDIF
          ENDIF
.
          COMPARE   ZERO,PTICUMEC
          IF        !@EQUAL
            MOVE      PTICUMEC,FORM4
.
            MOVE      ZERO,FORM2
            MOVE      PTICMECM,FORM2      * Mechanical ventilation minutes 
            IF        FORM2 > 29 & FORM2 < 60
              ADD       ONE,FORM4         * Round up the hour if 30-59 minutes
            ENDIF
.
            MOVE      FORM4,EPDCMVH      * Mechanical ventilation hours
            REP       " 0",EPDCMVH
          ELSE
            MOVE      SP10,EPDCMVH        * blanks from 01/07/2004   *I-49016
          ENDIF
.
          IF        PTICUINT>0 | PTICUMEC>0
            CALL      CTBH0000              * Calculate total bed hours
          ENDIF
.
          COMPARE   ZERO,PTICCPAP
          IF        !@EQUAL
            MOVE      PTICCPAP,FORM4
            MOVE      FORM4,EPDCPAPH        * CPAP hours
            REP       " 0",EPDCPAPH
            IF        PTICCPAP = 0
              MOVE      SP10,EPDCPAPH       * blanks from 01/07/2004   *I-49016
            ENDIF                                                      *I-49016
          ENDIF
.
          IF        CHOSTYP=ZERO
            MATCH     SP70,ATYPE
            IF        !@EQUAL     
              PACK      KEY5,ANSA,SP1,ATYPE,SP70
              CALL      RDCODE1
              IF        OVRCD=0
                MOVE      THCSCOD,DIM1
                MATCH     "C",DIM1
                GOTO      DIDV0500 IF EQUAL
              ENDIF
            ENDIF
            MOVE      SP70,EPDCPAPH
          ENDIF
.
.******************************************** Start of addition        *I-49016
DIDV0500  COMPARE   ONE,PTCNCDSC            * 1 = Yes
          GOTO      DIDV1000 IF NOT EQUAL   * Not collecting dur of stay in CCU
          COMPARE   ZERO,PTICUCCU
          IF        !@EQUAL
            MOVE      PTICUCCU,FORM4
            MOVE      FORM4,EPDSCCU         * Critical Care Unit hours
            REP       " 0",EPDSCCU
            IF        PTICUCCU = 0
              MOVE      SP10,EPDSCCU        * blanks from 01/07/2004   *I-49016
            ENDIF                                                      *I-49016
          ENDIF
.********************************************   End of addition        *I-49016
.
DIDV1000  IF        PTICCPAP <> 0
            CALL      CIHN0000              * Check if healthy newborn
          ENDIF
.
          IF        NEWBORN = 1
            CALL      CICC0000              * Check if CPAP code exists
          ENDIF
.
. ----- Validate the ICU, CCU, mechanical ventilation hours & CPAP hours-----
.
DIDV2000  IF        (PTICUINT-TOTBEDHR) > 1
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
            PRINT     "Error 322 : Total hours in ICU > total hospital days ":
                      "for admission number ",AADMNO,*N
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
          ENDIF
.
          IF        PTICUMEC>TOTBEDHR
            CALL      VINT0000              * validate MV hours <= total stay
          ENDIF
.
          IF        PTICUMEC>PTICUINT
            CALL      VMVH0000              * validate MV hours <= ICU stay
          ENDIF
.
          IF        (NEWBORN = 1) & (PTICCPAP <> 0) & (CPAPCDFL = 0)
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL   * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
            PRINT     "### : Warning: CPAP Procedure Code and Duration ":
                      "Mismatch ",*N
            ADD       TWO,CLNO
            ADD       ONE,NUMWARN
            MOVE      ONE,WRNFLG
          ENDIF
.
          IF        (NEWBORN = 1) & (PTICCPAP = 0) & (CPAPCDFL = 1)
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL   * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
            PRINT     "### : Warning: CPAP Procedure Code and Duration ":
                      "Mismatch ",*N
            ADD       TWO,CLNO
            ADD       ONE,NUMWARN
            MOVE      ONE,WRNFLG
          ENDIF
.
          IF        PTICCPAP > TOTBEDHR
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
            PRINT     "### Warning: CPAP Duration > Total Stay ",*N  *I-60167
            ADD       TWO,CLNO                                       *I-60167
            ADD       ONE,NUMWARN                                    *I-60167
            MOVE      ONE,WRNFLG                                     *I-60167
          ENDIF
.
          IF        PTICCPAP > 9999
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
            PRINT     "### Warning: Incorrect Format CPAP Duration ",*N
            ADD       TWO,CLNO                                       *I-60167
            ADD       ONE,NUMWARN                                    *I-60167
            MOVE      ONE,WRNFLG                                     *I-60167
          ENDIF
.
.         IF        (HLTHYNB = 1) & (PTICCPAP <> 0) & (DOYR2018=0)
.           COMPARE   ONE,ADMDTFLG
.           CALL      ADDT0000 IF NOT EQUAL * Print admin details
.           COMPARE   "60",CLNO
.           CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
.           PRINT     "442 Warning: Healthy Newborn with CPAP Duration ",*N
.           ADD       TWO,CLNO                                       *I-60167
.           ADD       ONE,NUMWARN                                    *I-60167
.           MOVE      ONE,WRNFLG                                     *I-60167
.         ENDIF
.                                                                      *I-60167
          PACK      KEY30,AADMNO,Z70
          CALL      RDSTRAN2                * Position on & read the transfer
          CALL      RDPTRAN2                  file
          BRANCH    OVRCD,DIDV9000
.
          MATCH     AADMNO,TADMN
          GOTO      DIDV9000 IF NOT EQUAL   * Different admin no
.
.......   CALL      QUAL0000
.......   CALL      GACC0000
.......   CALL      GACT0000
.
          IF        PTCNHOSP<>1
            GOTO      DIDV8000
          ENDIF
.                                                 * Public Patient
.......   MATCH     "PW",XCCTSTAT             * ICU account class no ICU hrs
.......   IF        @EQUAL
.......     MOVE      ZERO,FORM4
.......     SQUEEZE   EPDSICUH 
.......     MOVE      EPDSICUH,FORM4
.......     IF        FORM4 = 0
.......       COMPARE   ONE,ADMDTFLG
.......       CALL      ADDT0000 IF NOT EQUAL * Print admin details
.......       COMPARE   "60",CLNO
.......       CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
.......       PRINT     "Error 604 : ICU account class, No ICU hours.",*N
.......       ADD       TWO,CLNO
.......       ADD       ONE,NUMERROR
.......       MOVE      ONE,PTERRFLG
.......     ENDIF
.......   ENDIF
.
.......   COMPARE   ONE,PTCNCDSC              * If CCU hours was collected
.......   IF        @EQUAL
.......     MATCH     "PX",XCCTSTAT           * CCU account class no CCU hrs
.......     IF        @EQUAL
.......       MOVE      ZERO,FORM4
.......       SQUEEZE   EPDSCCU
.......       MOVE      EPDSCCU,FORM4
.......       IF        FORM4 = 0
.......         COMPARE   ONE,ADMDTFLG
.......         CALL      ADDT0000 IF NOT EQUAL * Print admin details
.......         COMPARE   "60",CLNO
.......         CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
.......         PRINT     "Error 603 : CCU account class, No CCU hours.",*N
.......         ADD       TWO,CLNO
.......         ADD       ONE,NUMERROR
.......         MOVE      ONE,PTERRFLG
.......       ENDIF
.......     ENDIF
.......   ENDIF
          GOTO      DIDV9000
.
DIDV8000  MOVE      ZERO,FORM4
          SQUEEZE   EPDSICUH
          MOVE      EPDSICUH,FORM4
.......   IF        FORM4 > 0 
.......     MATCH     "PW",XCCTSTAT
.......     IF        !@EQUAL
.......       COMPARE   ONE,ADMDTFLG
.......       CALL      ADDT0000 IF NOT EQUAL * Print admin details
.......       COMPARE   "60",CLNO
.......       CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
.......       PRINT     "606 : Warning : Private Patient, ICU hours, no ICU account class.",*N
.......       ADD       TWO,CLNO
.......       ADD       ONE,NUMWARN
.......       MOVE      ONE,WRNFLG
.......     ENDIF
.......   ENDIF
.
.......   COMPARE   ONE,PTCNCDSC              * If CCU hours was collected
.......   IF        @EQUAL
.......     MOVE      ZERO,FORM4
.......     SQUEEZE   EPDSCCU
.......     MOVE      EPDSCCU,FORM4 
.......     IF        FORM4 > 0
.......       MATCH     "PX",XCCTSTAT
.......       IF        !@EQUAL 
.......       COMPARE   ONE,ADMDTFLG
.......       CALL      ADDT0000 IF NOT EQUAL * Print admin details
.......       COMPARE   "60",CLNO
.......       CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
.......       PRINT     "605 : Warning : Private Patient, CCU hours, no CCU account class.",*N
.......       ADD       TWO,CLNO
.......       ADD       ONE,NUMWARN
.......       MOVE      ONE,WRNFLG
.......       ENDIF
.......     ENDIF
.......   ENDIF
.
DIDV9000  MOVE      ZERO,EXIT
DIDV9999  RETURN
+
.******************************************************************************
.*                                  VMVH0000                                  *
.*                              Validate MV Hours                             *
.******************************************************************************
VMVH0000  IF        (PTICUMEC-PTICUINT) > 1
            GOTO      VMVH9000              * too many MV hours
          ENDIF
          GOTO      VMVH9999
.
VMVH5000  IF        (PTICUMEC-PTICUINT) > 12
            GOTO      VMVH9000              * too many MV hours
          ENDIF
          GOTO      VMVH9999
.
VMVH9000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
          PRINT     "Error 318 : Total hours on mechanical ventilation > total ":
                    "hours in ICU for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          MOVE      ONE,PTERRFLG
          ADD       ONE,NUMERROR
VMVH9999  RETURN
+
.******************************************************************************
.*                                  VINT0000                                  *
.*                              Validate ICU Stay                             *
.******************************************************************************
VINT0000  IF        (PTICUMEC-TOTBEDHR) > 1
            GOTO      VINT9000              * too many MV hours
          ENDIF
          GOTO      VINT9999
.
VINT5000  IF        (PTICUMEC-TOTBEDHR) > 12
            GOTO      VINT9000              * too many MV hours
          ENDIF
          GOTO      VINT9999
.
VINT9000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
          PRINT     "Error 323 : Total hours on mechanical ventilation > total ":
                    "hospital days for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          MOVE      ONE,PTERRFLG
          ADD       ONE,NUMERROR
VINT9999  RETURN
+
.******************************************************************************
.*                                  CTBH0000              Called by: DIDV0000 *
.*                          Calculate Total Bed Hours                         *
.******************************************************************************
CTBH0000  MOVE      ZERO,TOTBEDHR           * Clear total bed hours
          MOVE      ZERO,FORM6
.
          MOVE      CURDATE8,KEY8
          MATCH     SP8,DDATE
          IF        !@EQUAL
            MOVE      DDATE,KEY8
          ENDIF
          MATCH     ADATE,KEY8
          GOTO      CTBH1000 IF EQUAL       * Sameday patient, only calc hours
.
          MOVE      ZERO,NBRDAYS
          MOVE      ADATE,FROMDATE          * From date
          MOVE      KEY8,TODATE             * To date
          CALL      RTIODAYS                * Calculate total bed days
          COMPARE   NBRDAYS,ZERO
          GOTO      CTBH9000 IF NOT LESS    * 0 >= number of days
.
          ASSIGN    NBRDAYS*1440,FORM6      * Total minutes for days
.
CTBH1000  UNPACK    ATIME,CHOUR,ANS,CMIN                                
          MOVE      CHOUR,IHOUR
          MOVE      CMIN,IMIN
          ASSIGN    (IHOUR*60)+IMIN,FORM5
.
          MATCH     SP8,DDATE
          IF        @EQUAL
            CLOCK     TIME,CTIMEIS
            UNPACK    CTIMEIS,CHOUR,DIM1,CMIN,DIM2
          ELSE
            UNPACK    DTIME,CHOUR,DIM1,CMIN,DIM2
          ENDIF
          MOVE      CHOUR,IHOUR
          MOVE      CMIN,IMIN
          ASSIGN    ((IHOUR*60)+IMIN)-FORM5,FORM5
.
          ASSIGN    (FORM5+FORM6)/60,FORM6P2 * Total bed hours
          ASSIGN    (FORM6P2*SIXTY),FORM6 
          IF        FORM6%60<>0    
            ADD       ONE,FORM6P2            * Round up mins to 1 hr
          ENDIF
          MOVE      FORM6P2,TOTBEDHR        * Total bed hours
.
CTBH9000  MOVE      ZERO,EXIT
CTBH9999  RETURN
+
.******************************************************************************
.*                                  CIHN0000              Called by: DIDV0000 *
.*                          Check If Healthy Newborn                          *
.******************************************************************************
CIHN0000  MOVE      ZERO,HLTHYNB
          PACK      KEY16,AADMNO,SP20                                 *C-240107
          CALL      RSPTECD2                * Position on & read a patient
          CALL      RKPTECD2                  episode disease file record
          BRANCH    OVRCD,CIHN9000
.
          MATCH     AADMNO,PTEDADMN
          GOTO      CIHN9000 IF NOT EQUAL
.
          MATCH     "Z38.0",PTEDCODE
          IF        !@EQUAL
            MATCH     "Z38.1",PTEDCODE
            IF        !@EQUAL
              MATCH     "Z38.2",PTEDCODE
              GOTO      CIHN9000 IF NOT EQUAL
            ENDIF
          ENDIF
.
          CALL      RKPTECD2                  episode disease file record
          BRANCH    OVRCD,CIHN8000
.
          MATCH     AADMNO,PTEDADMN
          GOTO      CIHN9000 IF EQUAL
.
CIHN8000  MOVE      ONE,HLTHYNB             * healthy newborn
          GOTO      CIHN9999
.
CIHN9000  MOVE      ZERO,HLTHYNB            * unhealthy newborn
CIHN9999  RETURN
+
.******************************************************************************
.*                                  CICC0000              Called by: DIDV0000 *
.*                      Check If CPAP Procedure Code Exists                   *
.******************************************************************************
CICC0000  PACK      KEY16,AADMNO,SP20                                 *C-240107
          CALL      RSPTECO2                * Position on & read a patient
CICC1000  CALL      RKPTECO2                  episode operation file record
          BRANCH    OVRCD,CICC9000
.
          MATCH     AADMNO,PTEOADMN
          GOTO      CICC9000 IF NOT EQUAL
.
          MATCH     "92038-00",PTEOCODE
          GOTO      CICC1000 IF NOT EQUAL
.
          MOVE      ONE,CPAPCDFL            * CPAP code exists
          GOTO      CICC9999
.
CICC9000  MOVE      ZERO,CPAPCDFL           * CPAP code doesn't exist
CICC9999  RETURN
+
.******************************************************************************
.*                                  GDRG0000              Called by: GDGR0000 *
.*                              Get The DRG Code                              *
.******************************************************************************
GDRG0000  MOVE      SP4,EPDRG               * Default to no DRG
          MATCH     SP8,DDATE
          GOTO      GDRG9000 IF EQUAL       * Patient not discharged
.
          MOVE      PTDSDDRG,EPDRG          * Default to discharge DRG code
.
          MATCH     PTCNE110,DDATE          * disc.date > DRG 11.0 effect.date?
          IF        !@LESS
            MOVE      DRG110,DRGVERS        * Use 11.0 DRG version
            GOTO      GDRG1000
          ENDIF
.
          MATCH     PTCNE100,DDATE          * disc.date > DRG 10.0 effect.date?
          IF        !@LESS
            MOVE      DRG100,DRGVERS        * Use 10.0 DRG version
            GOTO      GDRG1000
          ENDIF
.
          MATCH     PTCNED90,DDATE          * disc.date > DRG 9.0 effect.date?
          IF        !@LESS
            MOVE      DRG090,DRGVERS        * Use 9.0 DRG version
            GOTO      GDRG1000
          ENDIF
.
          MATCH     PTCNED80,DDATE          * disc.date > DRG 8.0 effect.date?
          IF        !@LESS
            MOVE      DRG080,DRGVERS        * Use 8.0 DRG version
            GOTO      GDRG1000
          ENDIF
.
          MATCH     PTCNED70,DDATE          * disc.date > DRG 7.0 effect.date?
          IF        !@LESS
            MOVE      DRG070,DRGVERS        * Use 7.0 DRG version
            GOTO      GDRG1000
          ENDIF
.
          MATCH     PTCNED62,DDATE          * disc.date > DRG 6.2 effect.date?
          IF        !@LESS
            MOVE      DRG062,DRGVERS        * Using 6.2 DRG version
            GOTO      GDRG1000
          ENDIF
.
          MATCH     PTCNED60,DDATE          * disc.date > DRG 6.0 effect.date?
          IF        !@LESS
            MOVE      DRG060,DRGVERS        * Using 6.0 DRG version
            GOTO      GDRG1000
          ENDIF
.
          MATCH     PTCNED52,DDATE          * disc.date > DRG 5.2 effect.date?
          IF        !@LESS
            MOVE      DRG052,DRGVERS        * Using 5.2 DRG version
            GOTO      GDRG1000
          ENDIF
.
          MATCH     PTCNED51,DDATE          * disc.date > DRG 5.1 effect.date?
          IF        !@LESS
            MOVE      DRG051,DRGVERS        * Using 5.1 DRG version
            GOTO      GDRG1000
          ENDIF
.
          MATCH     PTCNED50,DDATE          * disc.date > DRG 5.0 effect.date?
          IF        !@LESS
            MOVE      DRG050,DRGVERS        * Using 5.0 DRG version
            GOTO      GDRG1000
          ENDIF
.
          MATCH     PTCNED42,DDATE          * disc.date > DRG 4.2 effect.date?
          IF        !@LESS
            MOVE      DRG042,DRGVERS        * Using 4.2 DRG version
            GOTO      GDRG1000
          ENDIF
.
          MATCH     PTCNED41,DDATE          * disc.date > DRG 4.1 effect.date?
          IF        !@LESS
            MOVE      DRG041,DRGVERS        * Using 4.1 DRG version
            GOTO      GDRG1000
          ENDIF
.
          GOTO      GDRG9000
.
GDRG1000  PACK      KEY13,AADMNO,SP1,ONE,DRGVERS
          CALL      RDPTPGR1                * Read a patient grouper file record
          BRANCH    OVRCD,GDRG9000
.
          MATCH     SP4,PTPGSDRG            * blank DRG ?
          GOTO      GDRG9000 IF EQUAL       * yes - finished
.
          MOVE      PTPGSDRG,EPDRG
.
          CALL      WNSR0000              * Do the Separation Referral Warning
.
GDRG9000  MOVE      ZERO,EXIT
GDRG9999  RETURN
+
.******************************************************************************
.*                                  WNSR0000              Called by: DDRG0000 *
.*                         Warning Message for Separation Referral            *
.******************************************************************************
WNSR0000  MATCH     "H",EPISTYPE
          GOTO      WNSR9000 IF NOT EQUAL   * The Separation type is not home
.
          MATCH     SP4,PTDSSREF
          GOTO      WNSR9000 IF EQUAL       * Separation referral code absent
.
WNSR1000  MOVE      ZERO,FORM1
          UNPACK    PTDSSREF,DIM1A,DIM1B,DIM1C,DIM1D
.
WNSR2000  ADD       ONE,FORM1               * Check the next code
          COMPARE   FIVE,FORM1
          GOTO      WNSR9000 IF NOT LESS    * Finished, counter >= 5
.
          MOVE      SP1,DIM1
          LOAD      DIM1,FORM1,DIM1A,DIM1B,DIM1C,DIM1D
          MATCH     SP1,DIM1
          GOTO      WNSR2000 IF EQUAL       * Blank referral code
          MATCH     "E",DIM1
          GOTO      WNSR2000 IF EQUAL       * Domicillary E code okay
          MATCH     "F",DIM1
          GOTO      WNSR2000 IF EQUAL       * Domicillary F code okay
.
. Check DRG Code because separation referral code is not E or F
          MATCH     "O01A",EPDRG
          GOTO      WNSR5000 IF EQUAL
          MATCH     "O01B",EPDRG
          GOTO      WNSR5000 IF EQUAL
          MATCH     "O01C",EPDRG
          GOTO      WNSR5000 IF EQUAL
          MATCH     "O02A",EPDRG
          GOTO      WNSR5000 IF EQUAL
          MATCH     "O02B",EPDRG
          GOTO      WNSR5000 IF EQUAL
          MATCH     "O60A",EPDRG
          GOTO      WNSR5000 IF EQUAL
          MATCH     "O60B",EPDRG
          GOTO      WNSR5000 IF EQUAL
          MATCH     "O60C",EPDRG
          GOTO      WNSR5000 IF EQUAL
          GOTO      WNSR9000
.
. Produce warning message
WNSR5000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Warning 718: Delivery Episode, Sep Referral is not E or F for ":
                    AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG
          GOTO      WNSR9000
.
WNSR9000  MOVE      ZERO,EXIT
WNSR9999  RETURN
+
.******************************************************************************
.*                                  GDCU0000              Called by: GDGR0000 *
.*                 Get Duration of Stay In Coronary Care Unit                 *
.******************************************************************************
GDCU0000  MOVE      SP4,EPDSCCU
          COMPARE   ONE,PTCNCDSC
          GOTO      GDCU9000 IF NOT EQUAL   * Not collecting dur of stay in CCU
.
          MOVE      "0000",EPDSCCU
          MATCH     ADATE,DDATE
          GOTO      GDCU1000 IF NOT EQUAL   * Not a daycase patient
.
          PACK      KEY30,AADMNO,Z70
          CALL      RDSTRAN2                * Position on & read the transfer
          CALL      RDPTRAN2                  file
          BRANCH    OVRCD,GDCU9000
.
          MATCH     AADMNO,TADMN
          GOTO      GDCU9000 IF NOT EQUAL   * Different admin no
.
          MOVE      TRBTYP,ACODE
          CALL      CSCU0000                * Check if a stay in CCU
          COMPARE   ONE,EXIT
          GOTO      GDCU9000 IF NOT EQUAL   * Not a stay in CCU
.
          MOVE      "0001",EPDSCCU          * Duration of stay in CCU
          GOTO      GDCU9000
.
GDCU1000  MOVE      ZERO,CCUDAYS
          PACK      KEY30,AADMNO,SP20
          CALL      RDSTRAN2                * Position on & read the transfer
GDCU2000  CALL      RDKTRAN2                  file
          BRANCH    OVRCD,GDCU7000
.
          MATCH     AADMNO,TADMN
          GOTO      GDCU7000 IF NOT EQUAL   * Different admin no
.
          CMATCH    ANSA,TMOVE
          GOTO      GDCU3000 IF EQUAL       * Admission record
.
          CMATCH    ANSL,TMOVE
          GOTO      GDCU4000 IF EQUAL       * Leave record
.
          CMATCH    ANSR,TMOVE
          GOTO      GDCU3000 IF EQUAL       * Return from leave record
.
          CMATCH    ANSC,TMOVE
          GOTO      GDCU5000 IF EQUAL       * Change record
.
          CMATCH    ANSD,TMOVE
          GOTO      GDCU6000 IF EQUAL       * Discharge record
          GOTO      GDCU5000                * Assume change record
.
. ----- Admission & return record -----
.
GDCU3000  CALL      LSAV0000                * Save details
          GOTO      GDCU2000
.
. ----- Leave record -----
.
GDCU4000  CALL      LEND0000                * Process end of a period
          GOTO      GDCU2000
.
. ----- Change record -----
.
GDCU5000  CALL      LEND0000                * Process end of a period
          CALL      LSAV0000                * Save new details
          GOTO      GDCU2000
.
. ----- Discharge record -----
.
GDCU6000  CALL      LEND0000                * Process end of a period
          GOTO      GDCU8000
.
. ----- Different patient, finished -----
.
GDCU7000  MOVE      CURDATE8,TDATE
          CALL      LEND0000                * Process end of a period
.
GDCU8000  MOVE      CCUDAYS,EPDSCCU         * CCU days
          REP       " 0",EPDSCCU
.
GDCU9000  MOVE      ZERO,EXIT
GDCU9999  RETURN
+
.******************************************************************************
.*                                  LSAV0000              Called by: GDCU0000 *
.*         Save Start Of Period Details For Length Of Stay Calculations       *
.******************************************************************************
LSAV0000  MOVE      TDATE,CDYSFDTE
          MOVE      TATYPE,STATYPE
          MOVE      TRBTYP,STRBTYP

LSAV9000  MOVE      ZERO,EXIT
LSAV9999  RETURN
+
.******************************************************************************
.*                                  LEND0000              Called by: GDCU0000 *
.*              Process End Of Period Details For Length Of Stay              *
.******************************************************************************
LEND0000  MOVE      TDATE,CDYSTDTE
          MATCH     CDYSTDTE,CDYSFDTE
          GOTO      LEND8000 IF NOT LESS
.
          MOVE      STRBTYP,ACODE
          CALL      CSCU0000                * Check if stay in a ICU
          COMPARE   ONE,EXIT
          GOTO      LEND8000 IF NOT EQUAL   * Not a stay in CCU
.
          CALL      CALCDAYS                * Calculate diff between dates
          SUB       ONE,CDYSDAYS            * We dont want inclusive dates
          ADD       CDYSDAYS,CCUDAYS
.
LEND8000  MOVE      TDATE,STDATE            * Save transfer date for leave days
.
LEND9000  MOVE      ZERO,EXIT
LEND9999  RETURN
+
.******************************************************************************
.*                                  CSCU0000              Called by: GDCU0000 *
.*                   Check If A Stay In A Critical Care Unit       & LEND0000 *
.******************************************************************************
CSCU0000  MATCH     SP3,ACODE
          GOTO      CSCU9000 IF EQUAL       * Dont allow blank codes
.
          PACK      KEY5,ANSB,ANST,ACODE
          CALL      RDCODE1                 * Read a codes file record
          BRANCH    OVRCD,CSCU9000
.
          MATCH     "4",TCINDC3
          GOTO      CSCU9500 IF EQUAL       * A CCU stay
.
CSCU9000  MOVE      ZERO,EXIT
          GOTO      CSCU9999
.
CSCU9500  MOVE      ONE,EXIT
CSCU9999  RETURN
+
.******************************************************************************
.*                                  GDSC0000              Called by: GDGR0000 *
.*                              Get Disease Codes                             *
.******************************************************************************
GDSC0000  MOVE      ONE,CODCNT
          IF        DOYR2025=1
            REPEAT
            STORE     SP8,CODCNT,DIAG1,DIAG2,DIAG3,DIAG4,DIAG5:
                                     DIAG6,DIAG7,DIAG8,DIAG9,DIAG10:
                                     DIAG11,DIAG12,DIAG13,DIAG14,DIAG15:
                                     DIAG16,DIAG17,DIAG18,DIAG19,DIAG20:
                                     DIAG21,DIAG22,DIAG23,DIAG24,DIAG25:
                                     DIAG26,DIAG27,DIAG28,DIAG29,DIAG30:
                                     DIAG31,DIAG32,DIAG33,DIAG34,DIAG35:
                                     DIAG36,DIAG37,DIAG38,DIAG39,DIAG40:
                                     DIAG41,DIAG42,DIAG43,DIAG44,DIAG45:
                                     DIAG46,DIAG47,DIAG48,DIAG49,DIAG50:
                                     DIAG51,DIAG52,DIAG53,DIAG54,DIAG55:
                                     DIAG56,DIAG57,DIAG58,DIAG59,DIAG60:
                                     DIAG61,DIAG62,DIAG63,DIAG64,DIAG65:
                                     DIAG66,DIAG67,DIAG68,DIAG69,DIAG70:
                                     DIAG71,DIAG72,DIAG73,DIAG74,DIAG75:
                                     DIAG76,DIAG77,DIAG78,DIAG79,DIAG80:
                                     DIAG81,DIAG82,DIAG83,DIAG84,DIAG85:
                                     DIAG86,DIAG87,DIAG88,DIAG89,DIAG90:
                                     DIAG91,DIAG92,DIAG93,DIAG94,DIAG95:
                                     DIAG96,DIAG97,DIAG98,DIAG99,DIAG100
.           Space Initialised 100 New Diagnosis Cluster IDs
            STORE     SP2,CODCNT,DCID1,DCID2,DCID3,DCID4,DCID5:
                                     DCID6,DCID7,DCID8,DCID9,DCID10:
                                     DCID11,DCID12,DCID13,DCID14,DCID15:
                                     DCID16,DCID17,DCID18,DCID19,DCID20:
                                     DCID21,DCID22,DCID23,DCID24,DCID25:
                                     DCID26,DCID27,DCID28,DCID29,DCID30:
                                     DCID31,DCID32,DCID33,DCID34,DCID35:
                                     DCID36,DCID37,DCID38,DCID39,DCID40:
                                     DCID41,DCID42,DCID43,DCID44,DCID45:
                                     DCID46,DCID47,DCID48,DCID49,DCID50:
                                     DCID51,DCID52,DCID53,DCID54,DCID55:
                                     DCID56,DCID57,DCID58,DCID59,DCID60:
                                     DCID61,DCID62,DCID63,DCID64,DCID65:
                                     DCID66,DCID67,DCID68,DCID69,DCID70:
                                     DCID71,DCID72,DCID73,DCID74,DCID75:
                                     DCID76,DCID77,DCID78,DCID79,DCID80:
                                     DCID81,DCID82,DCID83,DCID84,DCID85:
                                     DCID86,DCID87,DCID88,DCID89,DCID90:
                                     DCID91,DCID92,DCID93,DCID94,DCID95:
                                     DCID96,DCID97,DCID98,DCID99,DCID100
            ADD       ONE,CODCNT
            UNTIL     CODCNT>100
          ELSE
            REPEAT
            STORE     SP8,CODCNT,DIAG1,DIAG2,DIAG3,DIAG4,DIAG5:
                                   DIAG6,DIAG7,DIAG8,DIAG9,DIAG10:
                                   DIAG11,DIAG12,DIAG13,DIAG14,DIAG15:
                                   DIAG16,DIAG17,DIAG18,DIAG19,DIAG20:
                                   DIAG21,DIAG22,DIAG23,DIAG24,DIAG25:
                                   DIAG26,DIAG27,DIAG28,DIAG29,DIAG30:
                                   DIAG31,DIAG32,DIAG33,DIAG34,DIAG35:
                                   DIAG36,DIAG37,DIAG38,DIAG39,DIAG40:
                                   DIAG41,DIAG42,DIAG43,DIAG44,DIAG45:
                                   DIAG46,DIAG47,DIAG48,DIAG49,DIAG50:
                                   DIAG51,DIAG52,DIAG53,DIAG54,DIAG55:
                                   DIAG56,DIAG57,DIAG58,DIAG59,DIAG60:
                                   DIAG61,DIAG62,DIAG63,DIAG64,DIAG65:
                                   DIAG66,DIAG67,DIAG68,DIAG69,DIAG70:
                                   DIAG71,DIAG72,DIAG73,DIAG74,DIAG75:
                                   DIAG76,DIAG77,DIAG78,DIAG79,DIAG80:
                                   DIAG81,DIAG82,DIAG83,DIAG84,DIAG85:
                                   DIAG86,DIAG87,DIAG88,DIAG89,DIAG90:
                                   DIAG91,DIAG92,DIAG93,DIAG94,DIAG95:
                                   DIAG96,DIAG97,DIAG98,DIAG99,DIAG100
            ADD       ONE,CODCNT
            UNTIL     CODCNT>100
          ENDIF
.          ELSE
.            REPEAT
.              STORE     SP8,CODCNT,DIAG1,DIAG2,DIAG3,DIAG4,DIAG5:
.                                   DIAG6,DIAG7,DIAG8,DIAG9,DIAG10:
.                                   DIAG11,DIAG12,DIAG13,DIAG14,DIAG15:
.                                   DIAG16,DIAG17,DIAG18,DIAG19,DIAG20:
.                                   DIAG21,DIAG22,DIAG23,DIAG24,DIAG25:
.                                   DIAG26,DIAG27,DIAG28,DIAG29,DIAG30:
.                                   DIAG31,DIAG32,DIAG33,DIAG34,DIAG35:
.                                   DIAG36,DIAG37,DIAG38,DIAG39,DIAG40
.              ADD       ONE,CODCNT
.            UNTIL     CODCNT>40
.          ENDIF
.
.
          MOVE      ONE,CODCNT              * Clear the code counter
          PACK      KEY16,AADMNO,SP20                                 *C-240107
          CALL      RSPTECD2                * Position on & read a patient
GDSC1000  CALL      RKPTECD2                  episode disease file record
          BRANCH    OVRCD,GDSC9000
.
          MATCH     AADMNO,PTEDADMN
          GOTO      GDSC9000 IF NOT EQUAL   * Different admin no
.
          COMPARE   EPISODNO,PTEDEPNO
          GOTO      GDSC1000 IF NOT EQUAL   * Different episode no
.
          MATCH     ANSA,PTEDTYPE
          IF        @EQUAL
            MOVE      ANSP,PTEDTYPE
          ENDIF
.
          MATCH     ANSX,PTEDTYPE
          GOTO      GDSC1000 IF EQUAL       * Ignore operation code
.
          MATCH     CMDISD,PTEDTYPE
          GOTO      GDSC1000 IF EQUAL       * Ignore disability disease types
.
          MATCH     CMDISS,PTEDTYPE
          GOTO      GDSC1000 IF EQUAL       * Ignore sequela disease types
.
          COMPARE   ONE,CODCNT
          GOTO      GDSC3000 IF NOT EQUAL   * Not the 1st disease code
.
          MATCH     "000000000",PTEDCODE
          GOTO      GDSC2000 IF NOT EQUAL   * Not a PRS2 deletion code
.
          MOVE      "00000000",DIAG1        * PRS2 deletion code
          ADD       ONE,DIAGDEL
          GOTO      GDSC9000
.
GDSC2000  MATCH     CMDISP,PTEDTYPE
          IF        !@EQUAL
            MATCH     CMDISC,PTEDTYPE
            GOTO      GDSC4000 IF NOT EQUAL   * Not a primary disease code
          ENDIF
.
GDSC3000  PACK      KEY9,PTEDCODE,SP10
          CALL      RDPTICD1
          BRANCH    OVRCD,GDSC5000
          COMPARE   ONE,ICDRDVER            * ICD9?
          IF        @EQUAL
            MOVE      DICD10CD,PTEDCODE     * Mapped ICD10 disease code
            PACK      KEY9,PTEDCODE,SP10
            CALL      RDPT10D1              * Read an ICD10 disease file record
            BRANCH    OVRCD,GDSC5000
          ENDIF
.
          MOVE      PTEDTYPE,KEY1
          IF        CODCNT<>1
            MATCH     "4",PT0DACRQ
            IF        @EQUAL
              MOVE      ANSM,KEY1           * Morphology codes need M prefix
            ENDIF
          ENDIF
.
          MOVE      PTEDCODE,KEY9
          REP       ". ",KEY9
          REP       "/ ",KEY9
          SQUEEZE   KEY9
.
          PACK      KEY8,KEY1,KEY9,SP10
          IF        DOYR2025=1
            STORE     KEY8,CODCNT,DIAG1,DIAG2,DIAG3,DIAG4,DIAG5:
                                    DIAG6,DIAG7,DIAG8,DIAG9,DIAG10:
                                    DIAG11,DIAG12,DIAG13,DIAG14,DIAG15:
                                    DIAG16,DIAG17,DIAG18,DIAG19,DIAG20:
                                    DIAG21,DIAG22,DIAG23,DIAG24,DIAG25:
                                    DIAG26,DIAG27,DIAG28,DIAG29,DIAG30:
                                    DIAG31,DIAG32,DIAG33,DIAG34,DIAG35:
                                    DIAG36,DIAG37,DIAG38,DIAG39,DIAG40:
                                    DIAG41,DIAG42,DIAG43,DIAG44,DIAG45:
                                    DIAG46,DIAG47,DIAG48,DIAG49,DIAG50:
                                    DIAG51,DIAG52,DIAG53,DIAG54,DIAG55:
                                    DIAG56,DIAG57,DIAG58,DIAG59,DIAG60:
                                    DIAG61,DIAG62,DIAG63,DIAG64,DIAG65:
                                    DIAG66,DIAG67,DIAG68,DIAG69,DIAG70:
                                    DIAG71,DIAG72,DIAG73,DIAG74,DIAG75:
                                    DIAG76,DIAG77,DIAG78,DIAG79,DIAG80:
                                    DIAG81,DIAG82,DIAG83,DIAG84,DIAG85:
                                    DIAG86,DIAG87,DIAG88,DIAG89,DIAG90:
                                    DIAG91,DIAG92,DIAG93,DIAG94,DIAG95:
                                    DIAG96,DIAG97,DIAG98,DIAG99,DIAG100
.           Store PTEDDCID value in 100 new Diagnosis Cluster ID
.           Left justify cluster Id
            MOVE      SP70,CULSTRID
            PACK      CULSTRID,PTEDDCID,SP2
            LJUSTIFY  CULSTRID
            STORE     CULSTRID,CODCNT,DCID1,DCID2,DCID3,DCID4,DCID5:
                                     DCID6,DCID7,DCID8,DCID9,DCID10:
                                     DCID11,DCID12,DCID13,DCID14,DCID15:
                                     DCID16,DCID17,DCID18,DCID19,DCID20:
                                     DCID21,DCID22,DCID23,DCID24,DCID25:
                                     DCID26,DCID27,DCID28,DCID29,DCID30:
                                     DCID31,DCID32,DCID33,DCID34,DCID35:
                                     DCID36,DCID37,DCID38,DCID39,DCID40:
                                     DCID41,DCID42,DCID43,DCID44,DCID45:
                                     DCID46,DCID47,DCID48,DCID49,DCID50:
                                     DCID51,DCID52,DCID53,DCID54,DCID55:
                                     DCID56,DCID57,DCID58,DCID59,DCID60:
                                     DCID61,DCID62,DCID63,DCID64,DCID65:
                                     DCID66,DCID67,DCID68,DCID69,DCID70:
                                     DCID71,DCID72,DCID73,DCID74,DCID75:
                                     DCID76,DCID77,DCID78,DCID79,DCID80:
                                     DCID81,DCID82,DCID83,DCID84,DCID85:
                                     DCID86,DCID87,DCID88,DCID89,DCID90:
                                     DCID91,DCID92,DCID93,DCID94,DCID95:
                                     DCID96,DCID97,DCID98,DCID99,DCID100 
          ELSE
            STORE     KEY8,CODCNT,DIAG1,DIAG2,DIAG3,DIAG4,DIAG5:
                                  DIAG6,DIAG7,DIAG8,DIAG9,DIAG10:
                                  DIAG11,DIAG12,DIAG13,DIAG14,DIAG15:
                                  DIAG16,DIAG17,DIAG18,DIAG19,DIAG20:
                                  DIAG21,DIAG22,DIAG23,DIAG24,DIAG25:
                                  DIAG26,DIAG27,DIAG28,DIAG29,DIAG30:
                                  DIAG31,DIAG32,DIAG33,DIAG34,DIAG35:
                                  DIAG36,DIAG37,DIAG38,DIAG39,DIAG40:
                                  DIAG41,DIAG42,DIAG43,DIAG44,DIAG45:
                                  DIAG46,DIAG47,DIAG48,DIAG49,DIAG50:
                                  DIAG51,DIAG52,DIAG53,DIAG54,DIAG55:
                                  DIAG56,DIAG57,DIAG58,DIAG59,DIAG60:
                                  DIAG61,DIAG62,DIAG63,DIAG64,DIAG65:
                                  DIAG66,DIAG67,DIAG68,DIAG69,DIAG70:
                                  DIAG71,DIAG72,DIAG73,DIAG74,DIAG75:
                                  DIAG76,DIAG77,DIAG78,DIAG79,DIAG80:
                                  DIAG81,DIAG82,DIAG83,DIAG84,DIAG85:
                                  DIAG86,DIAG87,DIAG88,DIAG89,DIAG90:
                                  DIAG91,DIAG92,DIAG93,DIAG94,DIAG95:
                                  DIAG96,DIAG97,DIAG98,DIAG99,DIAG100
          ENDIF 
.
          ADD       ONE,CODCNT
          COMPARE   "101",CODCNT
          GOTO      GDSC9000 IF NOT LESS    * Code counter >= 101, exit
.          ELSE
.            STORE     KEY8,CODCNT,DIAG1,DIAG2,DIAG3,DIAG4,DIAG5:
.                                  DIAG6,DIAG7,DIAG8,DIAG9,DIAG10:
.                                  DIAG11,DIAG12,DIAG13,DIAG14,DIAG15:
.                                  DIAG16,DIAG17,DIAG18,DIAG19,DIAG20:
.                                  DIAG21,DIAG22,DIAG23,DIAG24,DIAG25:
.                                  DIAG26,DIAG27,DIAG28,DIAG29,DIAG30:
.                                  DIAG31,DIAG32,DIAG33,DIAG34,DIAG35:
.                                  DIAG36,DIAG37,DIAG38,DIAG39,DIAG40
.            ADD       ONE,CODCNT
.            COMPARE   "41",CODCNT
.            GOTO      GDSC9000 IF NOT LESS    * Code counter >= 41, exit
.          ENDIF
          GOTO      GDSC1000
.
GDSC4000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT    "Error 355 : Admission ",AADMNO," diagnosis code was not ":
                   "a primary type",*90,"No X3 record generated",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      GDSC9000
.
GDSC5000  COMPARE   ONE,CODCNT
          GOTO      GDSC1000 IF NOT EQUAL   * Not the 1st code, exit
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 355 : Missing or blank primary diagnosis code for ":
                    AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      GDSC9000
.
GDSC6000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT    "Error 351 : Admission ",AADMNO," illegal code format. ":
                   "Disease Type: ",PTEDTYPE," Disease Code: ",PTEDCODE,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      GDSC9000
.
GDSC9000  MOVE      ZERO,EXIT
GDSC9999  RETURN
+
.******************************************************************************
.*                                  GOPC0000              Called by: GDGR0000 *
.*                             Get Operation Codes                            *
.******************************************************************************
GOPC0000  MOVE      SP70,EPPROCDT
          MOVE      ZERO,FRSTECTP      * First ECT procedure
.
          MOVE      ONE,CODCNT
          REPEAT
            STORE     SP8,CODCNT,PROC1,PROC2,PROC3,PROC4,PROC5:
                                 PROC6,PROC7,PROC8,PROC9,PROC10:
                                 PROC11,PROC12,PROC13,PROC14,PROC15:
                                 PROC16,PROC17,PROC18,PROC19,PROC20:
                                 PROC21,PROC22,PROC23,PROC24,PROC25:
                                 PROC26,PROC27,PROC28,PROC29,PROC30:
                                 PROC31,PROC32,PROC33,PROC34,PROC35:
                                 PROC36,PROC37,PROC38,PROC39,PROC40
            ADD       ONE,CODCNT
          UNTIL     CODCNT>40
.
          MOVE      ONE,CODCNT              * Clear the code counter
          PACK      KEY16,AADMNO,SP20                                 *C-240107
          CALL      RSPTECO2                * Position on & read a patient
GOPC1000  CALL      RKPTECO2                  episode operation file record
          BRANCH    OVRCD,GOPC9000
.
          MATCH     AADMNO,PTEOADMN
          GOTO      GOPC9000 IF NOT EQUAL   * Different admin no
.
          COMPARE   EPISODNO,PTEOEPNO
          GOTO      GOPC1000 IF NOT EQUAL   * Different episode no
.
          MATCH     ANSX,PTEOTYPE
          GOTO      GOPC1000 IF EQUAL       * Ignore operation code
.
          MATCH     PTCNEDRG,PTEOCODE
          GOTO      GOPC2000 IF EQUAL       * PRS2 dummy code
.
          PACK      KEY9,PTEOCODE,SP10
          CALL      RDPTICO1
          BRANCH    OVRCD,GOPC5000
          COMPARE   ONE,ICDRDVER            * ICD9?
          IF        @EQUAL
            MOVE      OICD10CD,PTEOCODE     * Mapped ICD10 operation code
            PACK      KEY9,PTEOCODE,SP10
            CALL      RDPT10O1              * Read an ICD10 operation file rec
            BRANCH    OVRCD,GOPC5000
          ENDIF
.
. 2023 or later public hospitals only report the procedure date/time from the
. first coded procedure.
.
GOPC2000  IF        PTCNHOSP = 1
            COMPARE   ONE,CODCNT                 * Public
            GOTO      GOPC2200 IF NOT EQUAL      * Not the 1st code, skip date
          ENDIF
.
. 2023 or later private hospitals will report the first ECT procedures
. (14224-xx) date/time if the first coded procedure doesn't require a date/time
.
          IF        PTCNHOSP = 0
            COMPARE   ONE,CODCNT                  * Not the 1st code
            IF        !@EQUAL
              MATCH     SP70,EPPROCDT             * Skip if procedure date/time
              GOTO      GOPC2200 IF NOT EQUAL     * already populated
.
              BRANCH    FRSTECTP,GOPC2200         * Skip checked first ECT proc
.
              MATCH     "14224",PTEOCODE        
              GOTO      GOPC2200 IF NOT EQUAL     * Skip not an ETC procedure
.
              MOVE      ONE,FRSTECTP              * Yes first ECT procedure
            ENDIF
          ENDIF
.
          MATCH     SP70,EPPROCDT
          IF        @EQUAL
            MATCH     "1",PT0ODTMN               * PT0ODTMN 1=Non-Mandatory
            GOTO      GOPC2200 IF EQUAL          * Don't extract Start Date/Time
.
            MATCH     SP8,PTEODATE                                    *I-207222
            GOTO      GOPC2100 IF NOT EQUAL
.
            COMPARE   "2",PTMORBDT               * PTMORBDT 2=mandatory
            GOTO      GOPC2100 IF NOT EQUAL
.
            MATCH     "1",PT0ODTMN               * PT0ODTMN 0=Mandatory
            IF        !@EQUAL
              COMPARE   "60",CLNO
              CALL      HEAD0000 IF NOT LESS    * Line count >= 60
              PRINT     "Error 657 : Procedure Date is mandatory for ":
                        PTEOCODE," - A. ",AADMNO,*N
              ADD       TWO,CLNO
              ADD       ONE,NUMERROR
              MOVE      ONE,PTERRFLG
            ENDIF                                               * end *I-207222
.
GOPC2100    UNPACK    PTEODATE,CCENT,CYEAR,CMON,CDAY
            UNPACK    PTEOSTTM,CHOUR,DIM1,CMIN
            MATCH     "00:00",PTEOSTTM
            IF        @EQUAL
              PACK      EPPROCDT,CDAY,CMON,CCENT,CYEAR,SP70
            ELSE
              PACK      EPPROCDT,CDAY,CMON,CCENT,CYEAR,CHOUR,CMIN,SP70
            ENDIF
          ENDIF
.
GOPC2200  MOVE      PTEOCODE,KEY9
          REP       "- ",KEY9
          SQUEEZE   KEY9
          PACK      KEY9,KEY9,SP9
.
          MATCH     CMOPRT,PTEOTYPE
          GOTO      GOPC4000 IF EQUAL       * Operation code in this hospital
.
          MATCH     SP1,PTAFCODE
          GOTO      GOPC4000 IF EQUAL       * No special funding arrange code
.
          MATCH     ANSA,PTAFCROL
          GOTO      GOPC3000 IF EQUAL       * Contract role A for conting hosp
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 408 : Contracting Hospital must have Contract role":
                    " A. ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
GOPC3000  MOVE      PTEOTYPE,KEY1
          REP       "IF",KEY1               * PRS2 requires I to be F
.
          RESET     KEY9,7
          APPEND    KEY1,KEY9               * Contract flag in 8th position
          RESET     KEY9
.
GOPC4000  PACK      KEY8,KEY9,SP10
          STORE     KEY8,CODCNT,PROC1,PROC2,PROC3,PROC4,PROC5:
                                PROC6,PROC7,PROC8,PROC9,PROC10:
                                PROC11,PROC12,PROC13,PROC14,PROC15:
                                PROC16,PROC17,PROC18,PROC19,PROC20:
                                PROC21,PROC22,PROC23,PROC24,PROC25:
                                PROC26,PROC27,PROC28,PROC29,PROC30:
                                PROC31,PROC32,PROC33,PROC34,PROC35:
                                PROC36,PROC37,PROC38,PROC39,PROC40
          ADD       ONE,CODCNT
          COMPARE   "41",CODCNT
          GOTO      GOPC9000 IF NOT LESS    * Code counter > 40, exit
          GOTO      GOPC1000
.
GOPC5000  COMPARE   ONE,CODCNT
          GOTO      GOPC1000 IF NOT EQUAL   * Not the 1st code, exit
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error ### : Missing or blank primary procedure code for ":
                    AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
GOPC9000  MOVE      ZERO,EXIT
GOPC9999  RETURN
+
.******************************************************************************
.*                                  GETUT000                                  *
.*                        Get unplanned return to theatre                     *
.******************************************************************************
GETUT000  MOVE      SP70,EPUNPRTT
. if there is a value, check for a procedure that requires unplanned theatre
.
          CALL      UNPL0000
          BRANCH    EXIT,GETUT200
          GOTO      GETUT999

.         Check theatre bookings
GETUT200  PACK      KEY31,AADMNO,SP70
          CALL      RSOPDEA2
GETUT250  CALL      RKOPDEA2
          BRANCH    OVRCD,GETUT500
.
          MATCH     DAADMNO,OPDAADMN
          GOTO      GETUT500 IF NOT EQUAL
.
          MATCH     "3",DOPDASTA
          GOTO      GETUT250 IF EQUAL          * Cancelled
.
          MATCH     SP70,OPDAUSR1
          GOTO      GETUT250 IF EQUAL 
. 
          PACK      KEY5,ANSY,SIX,OPDAUSR1,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,GETUT250
          MATCH     "1",TCINDC2
          IF        @EQUAL
            PACK      EPUNPRTT,TCINDC2
            GOTO      GETUT999
          ENDIF 
          MATCH     "2",TCINDC2
          IF        @EQUAL
            PACK      EPUNPRTT,TCINDC2
            GOTO      GETUT250
          ENDIF 
          MATCH     "9",TCINDC2
          IF        @EQUAL
            MATCH     SP70,EPUNPRTT
            IF        @EQUAL
              PACK      EPUNPRTT,TCINDC2
            ENDIF
            GOTO      GETUT250
          ENDIF 
          GOTO     GETUT250
.
GETUT500  MATCH     SP70,EPUNPRTT
          GOTO      GETUT999 IF NOT EQUAL
.
          REP       " 9",EPUNPRTT
          MATCH     SP70,PMVXUVTH
          GOTO      GETUT999 IF EQUAL
.
          PACK      KEY5,ANSK,ANSB,PMVXUVTH,SP70
          CALL      RDCODE1
          IF        OVRCD<>1
            PACK      EPUNPRTT,TCINDC3,SP70
            REP       " 9",EPUNPRTT
          ENDIF
          GOTO      GETUT999
.
GETUT999  RETURN
+
.******************************************************************************
.*                                  UNPL0000                                  *
.* check if unplanned theatre is required to be sent                          *
.* only for patients coded >icd10 ed12 with F in procedure                    *
.*  returns EXIT=1 if required                                                *
.******************************************************************************
UNPL0000  MOVE      ZERO,EXIT
          PACK      KEY16,AADMNO,SP20                     
          CALL      RSPTECO2                * Position on & read a patient
UNPL0100  CALL      RKPTECO2                  episode operation file record
          BRANCH    OVRCD,UNPL9999
.
          MATCH     AADMNO,PTEOADMN
          GOTO      UNPL9999 IF NOT EQUAL
.
          MATCH     ANSX,PTEOTYPE
          GOTO      UNPL0100 IF EQUAL       * Ignore operation code
.
          MOVE      SP70,PT0OURTH
.
          PACK      KEY9,PTEOCODE,SP10
          CALL      RDPTICO1
          BRANCH    OVRCD,UNPL0100
.
          MATCH     ANSF,PT0OURTH
          GOTO      UNPL0900 IF EQUAL
          GOTO      UNPL0100
.
UNPL0900  MOVE      ONE,EXIT
.
UNPL9999  RETURN
+
.******************************************************************************
.*                                  CPDD0000                                  *
.*                        Get Care Plan Documented Date                       *
.******************************************************************************
CPDD0000  MOVE      SP70,EPCPLDDT
          UNPACK    EPISCTYP,CARETYP1,CARETYP2
          MOVE      CARETYP1,DIM1
.
          REP       "6-8-9-P-M-",DIM1
          CMATCH    "M",CARETYP1
          IF        @EQUAL
            MOVE      CARETYP2,DIM1         * check Care Type for "MC"
            REP       "C-",DIM1
          ENDIF
.
          MATCH     "-",DIM1
          GOTO      CPDD9000 IF NOT EQUAL   * not a valid care type
.
          PACK      KEY8,AADMNO
          CALL      RDPMVX11
          BRANCH    OVRCD,CPDD7000          * no care plan doc date exists
.
          MATCH     SP70,PMVXCPDD
          GOTO      CPDD7000 IF EQUAL       * no care plan doc date exists
.
          UNPACK    PMVXCPDD,CCENT,CYEAR,CMON,CDAY
          PACK      EPCPLDDT,CDAY,CMON,CCENT,CYEAR,SP70
.
          UNPACK    ADATE,XCENT,XYEAR,XMON,XDAY
          PACK      DATECALC,XCENT,XYEAR,XMON,XDAY         * admission date
.
          ADD       SEVEN,DATECALC
          MATCH     PMVXCPDD,DATECALC
          GOTO      CPDD7500 IF LESS        * cpdd is > 7 days after adm date
.
          MATCH     SP70,DDATE
          IF        !@EQUAL
            MATCH     PMVXCPDD,DDATE          
            GOTO      CPDD8000 IF LESS        * cpdd is after separation date
          ENDIF
.
          GOTO      CPDD9999
.
CPDD7000  MATCH     SP70,DDATE   
          GOTO      CPDD9000 IF EQUAL       * no separation date exists
.
          COMPARE   ONE,PTCNHOSP
          GOTO      CPDD9999 IF NOT EQUAL   * Only for public hospitals
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "670 :Warning: Care Type 6,8,9,P or MC, Separation ":
                    "Date reported but Care Plan Documented Date is null ",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG
          GOTO      CPDD9999
.
CPDD7500  COMPARE   ONE,PTCNHOSP
          GOTO      CPDD9999 IF NOT EQUAL   * Only for public hospitals
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "### :Warning: Care Plan Documented Date reported is more ":
                    "than 7 days after Admission Date ",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG
          GOTO      CPDD9999
.
CPDD8000  COMPARE   ONE,PTCNHOSP
          GOTO      CPDD9999 IF NOT EQUAL   * Only for public hospitals
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "### :Error: Care Type 2,6,P,8,9,R1 or R2, Separation ":
                    "Date reported but Care Plan Documented Date is after ":
                    "Separation Date ",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      CPDD9999
.
CPDD9000  MOVE      SP70,EPCPLDDT
CPDD9999  RETURN
+
.******************************************************************************
.*                                  WGHT0000              Called by: GDGR0000 *
.*                               Get The Weight                               *
.******************************************************************************
WGHT0000  MOVE      SP4,EPBAWGHT
          COMPARE   EPISODNO,ONE
          GOTO      WGHT1000 IF NOT EQUAL   * Not the 1st episode
.
          MATCH     "     0",ABWGHT
          IF        @EQUAL
            MOVE      SP6,ABWGHT
          ENDIF
.
          MATCH     SP6,ABWGHT
          GOTO      WGHT2000 IF EQUAL       * Blank admin weight
.
          UNPACK    ABWGHT,KEY2,STRING
          CALL      RMBL0000                * Format the admin weight
          MOVE      STRING,FORM4
          MOVE      FORM4,EPBAWGHT
          GOTO      WGHT2000
.
WGHT1000  MOVE      SP4,EPBAWGHT
          PACK      KEY10,AADMNO,EPISODNO
          CALL      RDPTECA1                * Read an episode admin file record
          BRANCH    OVRCD,WGHT3000
.
          MATCH     SP4,PTEAWGHT
          GOTO      WGHT2000 IF EQUAL       * Blank episode admin weight
. 
          MOVE      PTEAWGHT,STRING
          CALL      RMBL0000                * Format the episode admin weight
          MOVE      STRING,FORM4
          MOVE      FORM4,EPBAWGHT
.
WGHT2000  MOVE      PTCNBAGE,NOOFDAYS
          CALL      CHLPYR00
          COMPARE   NOOFDAYS,PSAGEDAY
          GOTO      WGHT4000 IF NOT LESS    * Patients age >= age parameter
.
          TYPE      EPBAWGHT
          GOTO      WGHT5000 IF NOT EQUAL   * Must be numeric
.
          MOVE      EPBAWGHT,FORM4
          COMPARE   "400",FORM4
          GOTO      WGHT6000 IF LESS      * Weight < 125
          GOTO      WGHT9000
.
WGHT3000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 189 : Patients weight for episodes greater than 1 not ":
                    "coded for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      WGHT9000
.
WGHT4000  MATCH     SP4,EPBAWGHT
          GOTO      WGHT9000 IF EQUAL        * No Coding for patient, exit
.
          MATCH     "   0",EPBAWGHT
          GOTO      WGHT9000 IF EQUAL        * Zero admission weight, exit
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 190 : Admission weight present but patient old than 365 ":
                    "days admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      WGHT9000
.
WGHT5000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 189 : Age < 365 days but admission weight missing for ":
                    "admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      WGHT9000
.
WGHT6000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Warning 187 : Neonate weight ",EPBAWGHT," is too low for ":
                    "admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG
.
WGHT9000  MOVE      ZERO,EXIT
.******************************************** Start of addition        *I-53962
          MOVE      ZERO,FORM4                                         *I-55802
          MOVE      EPBAWGHT,FORM4
          COMPARE   ZERO,FORM4
          IF        @EQUAL
            MOVE      SP4,EPBAWGHT
          ELSE
            REP       " 0",EPBAWGHT
          ENDIF
.********************************************   End of addition        *I-53962
WGHT9999  RETURN
+
.******************************************************************************
.*                                  ITRA0000              Called by: GDGR0000 *
.*                        Get The Intention To Readmit                        *
.******************************************************************************
ITRA0000  MOVE      "0",EPREADMT            * Default to zero
          COMPARE   EPISODNO,TOTEPIS
          GOTO      ITRA1000 IF EQUAL       * Processing the last episode
.
          MOVE      "0",EPREADMT            * Statistical intention to readmit
          GOTO      ITRA9000
.
ITRA1000  MATCH     SP8,DDATE
          GOTO      ITRA9000 IF EQUAL       * Not discharged, exit
.
          MATCH     DDATE,CHCSED            * if discharged > End of Period
          GOTO      ITRA9000 IF LESS
.
          MOVE      "0",EPREADMT            * Default to not applicable
          UNPACK    SP5,TCODE,ACODE
          LOAD      TCODE,PTCNADMT,CATD1,CATD2,CATD3,CATD4,CATD5:
                                   CATU6,CATU7,CATVR
          LOAD      ACODE,PTCNADMT,DUSD1,DUSD2,DUSD3,DUSD4,DUSD5:
                                   AUSR6,AUSR7,PMVXIRAD
          PACK      KEY5,TCODE,ACODE
          CALL      RDCODE1                 * Read a codes file record
          BRANCH    OVRCD,ITRA3000
.
          MOVE      THCSCOD,EPREADMT        * Intention to readmit
          TYPE      EPREADMT
          GOTO      ITRA4000 IF NOT EQUAL   * Non numeric, error
.
          MOVE      EPREADMT,FORM1
          BRANCH    FORM1,ITRA2000,ITRA2000,ITRA2000,ITRA2000,ITRA4000:
                          ITRA4000,ITRA4000,ITRA4000,ITRA2000
.
. ----- Validate the intention to readmit with the separation type ----
.
          MOVE      EPISTYPE,KEY1
          REP       "D1Z1S1G1",KEY1
          TYPE      KEY1
          GOTO      ITRA5000 IF NOT EQUAL   * Non numeric, error
          GOTO      ITRA9000
.
ITRA2000  MOVE      EPISTYPE,KEY1
          REP       "D1Z1S1",KEY1
          TYPE      KEY1
          GOTO      ITRA5000 IF EQUAL       * Numeric, error
          GOTO      ITRA9000
.
ITRA3000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 191 : Incorrect code for intention to re-admit for ":
                    "admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      ITRA9000
.
ITRA4000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 191 : Incorrect HDP Equivalent for Intention to Re-Admit ":
                    "for Admission Number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      ITRA9000
.
ITRA5000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 192 : Incorrect discharge destination ",DDEST," for ":
                    "Intention to Re-Admit ",ACODE," for admission number ":
                    AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
ITRA9000  MOVE      ZERO,EXIT
ITRA9999  RETURN
+
.******************************************************************************
.*                                  GCAP0000              Called by: RCCT0000 *
.*                     Get Care Type & Program Fund Source                    *
.******************************************************************************
GCAP0000  PACK      KEY24,AADMNO,SP30
          CALL      RDSCHCO1                * Position on & read a code changes
GCAP1000  CALL      RDKCHCO1                  file record
          BRANCH    OVRCD,GCAP2000
.
          PACK      KEY24,CHADMN,CHDATE,Z70
          CALL      RDSCHCO1                * Position on & read a code changes
          CALL      RDPCHCO1                  file record
          BRANCH    OVRCD,GCAP2000
.
          MATCH     AADMNO,CHADMN
          GOTO      GCAP2000 IF NOT EQUAL   * Different admin no
.
          MATCH     CHCSED,CHDATE
          GOTO      GCAP2000 IF NOT LESS    * Change date >= PRS2 end date
.
          MATCH     "CC",CHCATG
          GOTO      GCAP1000 IF NOT EQUAL   * Different care class
.
          MOVE      CHCODE,ACODE
          CALL      RCCP0000                * Read codes file for CT & PFS
          BRANCH    EXIT,GCAP1000
          GOTO      GCAP9000
.
GCAP2000  MOVE      ACARE,ACODE
          CALL      RCCP0000                * Read codes file for CT & PFS
          BRANCH    EXIT,GCAP9500
.
GCAP9000  MOVE      ZERO,EXIT
          GOTO      GCAP9999
.
GCAP9500  MOVE      ONE,EXIT
GCAP9999  RETURN
+
.******************************************************************************
.*                                  RCCP0000              Called by: GCAP0000 *
.*             Read Codes File For Care Type & Program Fund Source            *
.******************************************************************************
RCCP0000  UNPACK    SP5,THCSCOD,TCINDC4
          PACK      KEY5,ANSC,ANSC,ACODE
          CALL      RDCODE1                 * Read a codes file record
.
          UNPACK    THCSCOD,CURCTYPE,KEY2                              *C-49016
.
          UNPACK    THCSCOD,CURCTYPE,KEY2                              *C-49016
.
          MOVE      TCINDC4,SAVPFS
          CMATCH    "4",CURCTYPE                                       *C-49016
          GOTO      RCCP9500 IF NOT EQUAL   * Not care type 4
.
          MATCH     "6",SAVPFS
          GOTO      RCCP9500 IF NOT EQUAL   * Not program fund source 6
.
RCCP9000  MOVE      ZERO,EXIT
          GOTO      RCCP9999
.
RCCP9500  MOVE      ONE,EXIT
RCCP9999  RETURN
+
.******************************************************************************
.*                                  VDCB0000              Called by: GDGR0000 *
.*                    Validate The Disease Codes For Babies                   *
.******************************************************************************
VDCB0000  MOVE      PTCNBAGE,NOOFDAYS
          CALL      CHLPYR00
          COMPARE   NOOFDAYS,PSAGEDAY
          GOTO      VDCB9000 IF NOT LESS    * Patients age >= age parameter
.
          MATCH     "1000",EPBAWGHT
          GOTO      VDCB3000 IF NOT LESS    * Weight >= 1000
.
.          IF        DOYR2024=1
          MOVE      ZERO,FORM3C
VDCB1000  ADD       ONE,FORM3C
          MOVE      SP10,KEY8
          LOAD      KEY8,FORM3C,DIAG1,DIAG2,DIAG3,DIAG4,DIAG5:
                                  DIAG6,DIAG7,DIAG8,DIAG9,DIAG10:
                                  DIAG11,DIAG12,DIAG13,DIAG14,DIAG15:
                                  DIAG16,DIAG17,DIAG18,DIAG19,DIAG20:
                                  DIAG21,DIAG22,DIAG23,DIAG24,DIAG25:
                                  DIAG26,DIAG27,DIAG28,DIAG29,DIAG30:
                                  DIAG31,DIAG32,DIAG33,DIAG34,DIAG35:
                                  DIAG36,DIAG37,DIAG38,DIAG39,DIAG40:
                                  DIAG41,DIAG42,DIAG43,DIAG44,DIAG45:
                                  DIAG46,DIAG47,DIAG48,DIAG49,DIAG50:
                                  DIAG51,DIAG52,DIAG53,DIAG54,DIAG55:
                                  DIAG56,DIAG57,DIAG58,DIAG59,DIAG60:
                                  DIAG61,DIAG62,DIAG63,DIAG64,DIAG65:
                                  DIAG66,DIAG67,DIAG68,DIAG69,DIAG70:
                                  DIAG71,DIAG72,DIAG73,DIAG74,DIAG75:
                                  DIAG76,DIAG77,DIAG78,DIAG79,DIAG80:
                                  DIAG81,DIAG82,DIAG83,DIAG84,DIAG85:
                                  DIAG86,DIAG87,DIAG88,DIAG89,DIAG90:
                                  DIAG91,DIAG92,DIAG93,DIAG94,DIAG95:
                                  DIAG96,DIAG97,DIAG98,DIAG99,DIAG100
.          ELSE
.            MOVE      ZERO,FORM2
.VDCB1001    ADD       ONE,FORM2
.            MOVE      SP10,KEY8
.            LOAD      KEY8,FORM2,DIAG1,DIAG2,DIAG3,DIAG4,DIAG5:
.                                  DIAG6,DIAG7,DIAG8,DIAG9,DIAG10:
.                                  DIAG11,DIAG12,DIAG13,DIAG14,DIAG15:
.                                  DIAG16,DIAG17,DIAG18,DIAG19,DIAG20:
.                                  DIAG21,DIAG22,DIAG23,DIAG24,DIAG25:
.                                  DIAG26,DIAG27,DIAG28,DIAG29,DIAG30:
.                                  DIAG31,DIAG32,DIAG33,DIAG34,DIAG35:
.                                  DIAG36,DIAG37,DIAG38,DIAG39,DIAG40
.          ENDIF
.
          MATCH     SP8,KEY8
          GOTO      VDCB2000 IF EQUAL       * Blank code, error
.
          UNPACK    KEY8,KEY1,KEY7
          MATCH     "P070",KEY7
          GOTO      VDCB9000 IF EQUAL       * Valid code
.
          MATCH     "P072",KEY7
          GOTO      VDCB9000 IF EQUAL       * Valid code
.
          MATCH     "P05",KEY7
          GOTO      VDCB9000 IF EQUAL       * Valid code
.
          MATCH     "P964",KEY7
          GOTO      VDCB9000 IF EQUAL       * Valid code
.
          MATCH     "P018",KEY7
          GOTO      VDCB9000 IF EQUAL       * Valid code
.
.          IF        DOYR2024=1
          COMPARE   "100",FORM3C
          GOTO      VDCB1000 IF LESS      * Counter < 100
.          ELSE
.            COMPARE   "40",FORM2
.            GOTO      VDCB1001 IF LESS      * Counter < 40
.          ENDIF
.
VDCB2000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 411 : Admission weight < 999 grams & no matching ":
                    "primary disease code for ",AADMNO,*N 
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      VDCB9000
.
VDCB3000  MATCH     "2500",EPBAWGHT
          GOTO      VDCB9000 IF NOT LESS    * Weight >= 2500
.
.          IF        DOYR2024=1
          MOVE      ZERO,FORM3C
VDCB4000  ADD       ONE,FORM3C
          MOVE      SP10,KEY8
          LOAD      KEY8,FORM3C,DIAG1,DIAG2,DIAG3,DIAG4,DIAG5:
                                  DIAG6,DIAG7,DIAG8,DIAG9,DIAG10:
                                  DIAG11,DIAG12,DIAG13,DIAG14,DIAG15:
                                  DIAG16,DIAG17,DIAG18,DIAG19,DIAG20:
                                  DIAG21,DIAG22,DIAG23,DIAG24,DIAG25:
                                  DIAG26,DIAG27,DIAG28,DIAG29,DIAG30:
                                  DIAG31,DIAG32,DIAG33,DIAG34,DIAG35:
                                  DIAG36,DIAG37,DIAG38,DIAG39,DIAG40:
                                  DIAG41,DIAG42,DIAG43,DIAG44,DIAG45:
                                  DIAG46,DIAG47,DIAG48,DIAG49,DIAG50:
                                  DIAG51,DIAG52,DIAG53,DIAG54,DIAG55:
                                  DIAG56,DIAG57,DIAG58,DIAG59,DIAG60:
                                  DIAG61,DIAG62,DIAG63,DIAG64,DIAG65:
                                  DIAG66,DIAG67,DIAG68,DIAG69,DIAG70:
                                  DIAG71,DIAG72,DIAG73,DIAG74,DIAG75:
                                  DIAG76,DIAG77,DIAG78,DIAG79,DIAG80:
                                  DIAG81,DIAG82,DIAG83,DIAG84,DIAG85:
                                  DIAG86,DIAG87,DIAG88,DIAG89,DIAG90:
                                  DIAG91,DIAG92,DIAG93,DIAG94,DIAG95:
                                  DIAG96,DIAG97,DIAG98,DIAG99,DIAG100
.          ELSE
.            MOVE      ZERO,FORM2
.VDCB4001    ADD       ONE,FORM2
.            MOVE      SP10,KEY8
.            LOAD      KEY8,FORM2,DIAG1,DIAG2,DIAG3,DIAG4,DIAG5:
.                                  DIAG6,DIAG7,DIAG8,DIAG9,DIAG10:
.                                  DIAG11,DIAG12,DIAG13,DIAG14,DIAG15:
.                                  DIAG16,DIAG17,DIAG18,DIAG19,DIAG20:
.                                  DIAG21,DIAG22,DIAG23,DIAG24,DIAG25:
.                                  DIAG26,DIAG27,DIAG28,DIAG29,DIAG30:
.                                  DIAG31,DIAG32,DIAG33,DIAG34,DIAG35:
.                                  DIAG36,DIAG37,DIAG38,DIAG39,DIAG40
.          ENDIF
.
          MATCH     SP8,KEY8
          GOTO      VDCB5000 IF EQUAL       * Blank code, error
.
          UNPACK    KEY8,KEY1,KEY7
          MATCH     "P071",KEY7
          GOTO      VDCB9000 IF EQUAL       * Valid code
.
          MATCH     "P073",KEY7
          GOTO      VDCB9000 IF EQUAL       * Valid code
.
          MATCH     "P05",KEY7
          GOTO      VDCB9000 IF EQUAL       * Valid code
.
          MATCH     "P964",KEY7
          GOTO      VDCB9000 IF EQUAL       * Valid code
.
          MATCH     "P018",KEY7
          GOTO      VDCB9000 IF EQUAL       * Valid code
.
.          IF        DOYR2024=1
          COMPARE   "100",FORM3C
          GOTO      VDCB4000 IF LESS      * Counter < 100
.          ELSE
.            COMPARE   "40",FORM2
.            GOTO      VDCB4000 IF LESS      * Counter < 40
.          ENDIF
.
VDCB5000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "412 : Warning: Admission weight 1000-2499 grams, no ":
                    "matching disease code for ",AADMNO,*N 
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG
.
VDCB9000  MOVE      ZERO,EXIT
VDCB9999  RETURN
+
.*****************************************************************************
.*   CHLPYR00 - Check if leap year and additional day
.*****************************************************************************
CHLPYR00  IF        NOOFDAYS<>365
            GOTO      CHLPYR99
          ENDIF
          UNPACK    ADATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          CALL      DMLEAPYR
          IF        LEAPYR=1
            IF        MM>2
.
.             Add extra day if current date is a leap year after february
.
              ADD       ONE,NOOFDAYS
            ENDIF
            GOTO      CHLPYR99
          ENDIF
.
          PACK      DFYEAR,CCENT,CYEAR
          REP       " 0",DFYEAR
          MOVE      DFYEAR,F4
          SUB       ONE,F4
          MOVE      F4,DFYEAR
          UNPACK    DFYEAR,DCC,DYY    * Previous year
          MOVE      DCC,CC
          MOVE      DYY,YY
          CALL      DMLEAPYR
          IF        LEAPYR=1
            IF        MM<=2
.
.             Add extra day if previous year is a leap year &
.             current date is before end of february
.
              ADD       ONE,NOOFDAYS
            ENDIF
          ENDIF
.
CHLPYR99  RETURN
+
.******************************************************************************
.*                                  PDGR0000              Called by: GDGR0000 *
.*                            Post Diagnosis Record                           *
.******************************************************************************
PDGR0000  COMPARE   TWO,PRERRFLG                
          GOTO      PDGR0500 IF EQUAL
.
          PACK      TRANTYPE,X5,SP70
.         MOVE      SP70,EPPLSTID                      * Proceduralist ID
          COMPARE   ONE,MEDIUM                         * 0 = Tape, 1 = Disk/Modem
          GOTO      PDGR0250 IF NOT EQUAL
.
          IF        DOYR2025=1
            WRITE     WORK,SEQ;TRANTYPE,UNIQKEYL,DCID1,DCID2,DCID3,DCID4,DCID5:
                               DCID6,DCID7,DCID8,DCID9,DCID10,DCID11,DCID12:
                               DIAG1,DIAG2,DIAG3,DIAG4:
                               DIAG5,DIAG6,DIAG7,DIAG8,DIAG9,DIAG10:
                               DIAG11,DIAG12,PROC1,PROC2,PROC3,PROC4:
                               PROC5,PROC6,PROC7,PROC8,PROC9,PROC10:
                               PROC11,PROC12,EPBAWGHT,EPDUSRF:
                               EPDSICUH,EPDCMVH,EPDRG,EPDSCCU:
                               EPDCPAPH,EPPROCDT,EPCPLDDT:
                               EPPLSTID,EPUNPRTT
          ELSE
            WRITE     WORK,SEQ;TRANTYPE,UNIQKEYL,DIAG1,DIAG2,DIAG3,DIAG4:
                             DIAG5,DIAG6,DIAG7,DIAG8,DIAG9,DIAG10:
                             DIAG11,DIAG12,PROC1,PROC2,PROC3,PROC4:
                             PROC5,PROC6,PROC7,PROC8,PROC9,PROC10:
                             PROC11,PROC12,EPBAWGHT,EPDUSRF:
                             EPDSICUH,EPDCMVH,EPDRG,EPDSCCU:
                             EPDCPAPH,EPPROCDT,EPCPLDDT:
                             EPPLSTID,EPUNPRTT
          ENDIF 
          GOTO      PDGR0500
.
PDGR0250  IF        DOYR2025=1
            WRITE     WORK,SEQ;TRANTYPE,UNIQKEYL,DCID1,DCID2,DCID3,DCID4,DCID5:
                              DCID6,DCID7,DCID8,DCID9,DCID10,DCID11,DCID12:
                              DIAG1,DIAG2,DIAG3,DIAG4:
                              DIAG5,DIAG6,DIAG7,DIAG8,DIAG9,DIAG10:
                              DIAG11,DIAG12,PROC1,PROC2,PROC3,PROC4:
                              PROC5,PROC6,PROC7,PROC8,PROC9,PROC10:
                              PROC11,PROC12,EPBAWGHT,EPDUSRF:
                              EPDSICUH,EPDCMVH,EPDRG,EPDSCCU:
                              EPDCPAPH,EPPROCDT,EPCPLDDT:
                              EPPLSTID;
          ELSE
            WRITE     WORK,SEQ;TRANTYPE,UNIQKEYL,DIAG1,DIAG2,DIAG3,DIAG4:
                            DIAG5,DIAG6,DIAG7,DIAG8,DIAG9,DIAG10:
                            DIAG11,DIAG12,PROC1,PROC2,PROC3,PROC4:
                            PROC5,PROC6,PROC7,PROC8,PROC9,PROC10:
                            PROC11,PROC12,EPBAWGHT,EPDUSRF:
                            EPDSICUH,EPDCMVH,EPDRG,EPDSCCU:
                            EPDCPAPH,EPPROCDT,EPCPLDDT:
                            EPPLSTID;
          ENDIF
.
PDGR0500  ADD       "1",RECCNT
..        MATCH     EPIADATE,CHCSED
..        GOTO      PDGR2000 IF LESS        * PRS2 end date < admin date
.
          MOVE      "1",NEW
          MOVE      "0",COR
          MATCH     CHCSST,EPIADATE
          GOTO      PDGR1000 IF NOT LESS    * Admin date >= PRS2 start date
.
          MOVE      "0",NEW
          MOVE      "1",COR
.
PDGR1000  ADD       NEW,DIAGNEW
          ADD       COR,DIAGCOR
.
PDGR2000  COMPARE   "99999",RECCNT
          GOTO      PDGR9500 IF NOT LESS    * Record counter >= max no of recs
.
PDGR9000  MOVE      ZERO,EXIT
          GOTO      PDGR9999
.
PDGR9500  MOVE      ONE,EXIT
PDGR9999  RETURN
+
.******************************************************************************
.*                                  PXDG0000              Called by: GDGR0000 *
.*                         Post Xtra Diagnosis Record                         *
.******************************************************************************
PXDG0000  MATCH     SP8,DIAG13
          GOTO      PXDG1000 IF NOT EQUAL   * 13th disease code, write Y2 or Y3
.
          MATCH     SP8,PROC13
          GOTO      PXDG9000 IF EQUAL       * No 13th operation code, exit
.
PXDG1000  COMPARE   ONE,PRERRFLG                 
          GOTO      PXDG2000 IF NOT EQUAL
.
          PACK      TRANTYPE,Y5,SP70
          COMPARE   ONE,MEDIUM
          GOTO      PXDG1500 IF NOT EQUAL
.
          IF        DOYR2025=1
            WRITE     WORK,SEQ;TRANTYPE,UNIQKEYL,DCID13,DCID14,DCID15:
                                 DCID16,DCID17,DCID18,DCID19,DCID20:
                                 DCID21,DCID22,DCID23,DCID24,DCID25:
                                 DIAG13,DIAG14,DIAG15:
                                 DIAG16,DIAG17,DIAG18,DIAG19,DIAG20:
                                 DIAG21,DIAG22,DIAG23,DIAG24,DIAG25:
                                 PROC13,PROC14,PROC15,PROC16,PROC17:
                                 PROC18,PROC19,PROC20,PROC21,PROC22:
                                 PROC23,PROC24,PROC25:
                                 DCID26,DCID27,DCID28,DCID29,DCID30:
                                 DCID31,DCID32,DCID33,DCID34,DCID35:
                                 DCID36,DCID37,DCID38,DCID39,DCID40:
                                 DIAG26,DIAG27:
                                 DIAG28,DIAG29,DIAG30,DIAG31,DIAG32:
                                 DIAG33,DIAG34,DIAG35,DIAG36,DIAG37:
                                 DIAG38,DIAG39,DIAG40,PROC26,PROC27:
                                 PROC28,PROC29,PROC30,PROC31,PROC32:
                                 PROC33,PROC34,PROC35,PROC36,PROC37:
                                 PROC38,PROC39,PROC40:
                                 DCID41,DCID42,DCID43,DCID44,DCID45:
                                 DCID46,DCID47,DCID48,DCID49,DCID50:
                                 DCID51,DCID52,DCID53,DCID54,DCID55:
                                 DCID56,DCID57,DCID58,DCID59,DCID60:
                                 DCID61,DCID62,DCID63,DCID64,DCID65:
                                 DCID66,DCID67,DCID68,DCID69,DCID70:
                                 DCID71,DCID72,DCID73,DCID74,DCID75:
                                 DCID76,DCID77,DCID78,DCID79,DCID80:
                                 DCID81,DCID82,DCID83,DCID84,DCID85:
                                 DCID86,DCID87,DCID88,DCID89,DCID90:
                                 DCID91,DCID92,DCID93,DCID94,DCID95:
                                 DCID96,DCID97,DCID98,DCID99,DCID100:
                                 DIAG41,DIAG42:
                                 DIAG43,DIAG44,DIAG45,DIAG46,DIAG47:
                                 DIAG48,DIAG49,DIAG50,DIAG51,DIAG52:
                                 DIAG53,DIAG54,DIAG55,DIAG56,DIAG57:
                                 DIAG58,DIAG59,DIAG60,DIAG61,DIAG62:
                                 DIAG63,DIAG64,DIAG65,DIAG66,DIAG67:
                                 DIAG68,DIAG69,DIAG70,DIAG71,DIAG72:
                                 DIAG73,DIAG74,DIAG75,DIAG76,DIAG77:
                                 DIAG78,DIAG79,DIAG80,DIAG81,DIAG82:
                                 DIAG83,DIAG84,DIAG85,DIAG86,DIAG87:
                                 DIAG88,DIAG89,DIAG90,DIAG91,DIAG92:
                                 DIAG93,DIAG94,DIAG95,DIAG96,DIAG97:
                                 DIAG98,DIAG99,DIAG100
          ELSE
            WRITE     WORK,SEQ;TRANTYPE,UNIQKEYL,DIAG13,DIAG14,DIAG15:
                               DIAG16,DIAG17,DIAG18,DIAG19,DIAG20:
                               DIAG21,DIAG22,DIAG23,DIAG24,DIAG25:
                               PROC13,PROC14,PROC15,PROC16,PROC17:
                               PROC18,PROC19,PROC20,PROC21,PROC22:
                               PROC23,PROC24,PROC25,DIAG26,DIAG27:
                               DIAG28,DIAG29,DIAG30,DIAG31,DIAG32:
                               DIAG33,DIAG34,DIAG35,DIAG36,DIAG37:
                               DIAG38,DIAG39,DIAG40,PROC26,PROC27:
                               PROC28,PROC29,PROC30,PROC31,PROC32:
                               PROC33,PROC34,PROC35,PROC36,PROC37:
                               PROC38,PROC39,PROC40,DIAG41,DIAG42:
                               DIAG43,DIAG44,DIAG45,DIAG46,DIAG47:
                               DIAG48,DIAG49,DIAG50,DIAG51,DIAG52:
                               DIAG53,DIAG54,DIAG55,DIAG56,DIAG57:
                               DIAG58,DIAG59,DIAG60,DIAG61,DIAG62:
                               DIAG63,DIAG64,DIAG65,DIAG66,DIAG67:
                               DIAG68,DIAG69,DIAG70,DIAG71,DIAG72:
                               DIAG73,DIAG74,DIAG75,DIAG76,DIAG77:
                               DIAG78,DIAG79,DIAG80,DIAG81,DIAG82:
                               DIAG83,DIAG84,DIAG85,DIAG86,DIAG87:
                               DIAG88,DIAG89,DIAG90,DIAG91,DIAG92:
                               DIAG93,DIAG94,DIAG95,DIAG96,DIAG97:
                               DIAG98,DIAG99,DIAG100
          ENDIF
.          ELSE
.            WRITE     WORK,SEQ;TRANTYPE,UNIQKEYL,DIAG13,DIAG14,DIAG15:
.                               DIAG16,DIAG17,DIAG18,DIAG19,DIAG20:
.                               DIAG21,DIAG22,DIAG23,DIAG24,DIAG25:
.                               PROC13,PROC14,PROC15,PROC16,PROC17:
.                               PROC18,PROC19,PROC20,PROC21,PROC22:
.                               PROC23,PROC24,PROC25,DIAG26,DIAG27:
.                               DIAG28,DIAG29,DIAG30,DIAG31,DIAG32:
.                               DIAG33,DIAG34,DIAG35,DIAG36,DIAG37:
.                               DIAG38,DIAG39,DIAG40,PROC26,PROC27:
.                               PROC28,PROC29,PROC30,PROC31,PROC32:
.                               PROC33,PROC34,PROC35,PROC36,PROC37:
.                               PROC38,PROC39,PROC40
.          ENDIF
.
          GOTO      PXDG2000
.
PXDG1500  IF        DOYR2025=1
            WRITE     WORK,SEQ;TRANTYPE,UNIQKEYL,DCID13,DCID14,DCID15:
                                 DCID16,DCID17,DCID18,DCID19,DCID20:
                                 DCID21,DCID22,DCID23,DCID24,DCID25:
                                 DIAG13,DIAG14,DIAG15:    
                                 DIAG16,DIAG17,DIAG18,DIAG19,DIAG20:
                                 DIAG21,DIAG22,DIAG23,DIAG24,DIAG25:
                                 PROC13,PROC14,PROC15,PROC16,PROC17:
                                 PROC18,PROC19,PROC20,PROC21,PROC22:
                                 PROC23,PROC24,PROC25:
                                 DCID26,DCID27,DCID28,DCID29,DCID30:
                                 DCID31,DCID32,DCID33,DCID34,DCID35:
                                 DCID36,DCID37,DCID38,DCID39,DCID40:
                                 DIAG26,DIAG27:
                                 DIAG28,DIAG29,DIAG30,DIAG31,DIAG32:
                                 DIAG33,DIAG34,DIAG35,DIAG36,DIAG37:
                                 DIAG38,DIAG39,DIAG40,PROC26,PROC27:
                                 PROC28,PROC29,PROC30,PROC31,PROC32:
                                 PROC33,PROC34,PROC35,PROC36,PROC37:
                                 PROC38,PROC39,PROC40:
                                 DCID41,DCID42,DCID43,DCID44,DCID45:
                                 DCID46,DCID47,DCID48,DCID49,DCID50:
                                 DCID51,DCID52,DCID53,DCID54,DCID55:
                                 DCID56,DCID57,DCID58,DCID59,DCID60:
                                 DCID61,DCID62,DCID63,DCID64,DCID65:
                                 DCID66,DCID67,DCID68,DCID69,DCID70:
                                 DCID71,DCID72,DCID73,DCID74,DCID75:
                                 DCID76,DCID77,DCID78,DCID79,DCID80:
                                 DCID81,DCID82,DCID83,DCID84,DCID85:
                                 DCID86,DCID87,DCID88,DCID89,DCID90:
                                 DCID91,DCID92,DCID93,DCID94,DCID95:
                                 DCID96,DCID97,DCID98,DCID99,DCID100:
                                 DIAG41,DIAG42:
                                 DIAG43,DIAG44,DIAG45,DIAG46,DIAG47:
                                 DIAG48,DIAG49,DIAG50,DIAG51,DIAG52:
                                 DIAG53,DIAG54,DIAG55,DIAG56,DIAG57:
                                 DIAG58,DIAG59,DIAG60,DIAG61,DIAG62:
                                 DIAG63,DIAG64,DIAG65,DIAG66,DIAG67:
                                 DIAG68,DIAG69,DIAG70,DIAG71,DIAG72:
                                 DIAG73,DIAG74,DIAG75,DIAG76,DIAG77:
                                 DIAG78,DIAG79,DIAG80,DIAG81,DIAG82:
                                 DIAG83,DIAG84,DIAG85,DIAG86,DIAG87:
                                 DIAG88,DIAG89,DIAG90,DIAG91,DIAG92:
                                 DIAG93,DIAG94,DIAG95,DIAG96,DIAG97:
                                 DIAG98,DIAG99,DIAG100;
          ELSE
            WRITE     WORK,SEQ;TRANTYPE,UNIQKEYL,DIAG13,DIAG14,DIAG15:
                               DIAG16,DIAG17,DIAG18,DIAG19,DIAG20:
                               DIAG21,DIAG22,DIAG23,DIAG24,DIAG25:
                               PROC13,PROC14,PROC15,PROC16,PROC17:
                               PROC18,PROC19,PROC20,PROC21,PROC22:
                               PROC23,PROC24,PROC25,DIAG26,DIAG27:
                               DIAG28,DIAG29,DIAG30,DIAG31,DIAG32:
                               DIAG33,DIAG34,DIAG35,DIAG36,DIAG37:
                               DIAG38,DIAG39,DIAG40,PROC26,PROC27:
                               PROC28,PROC29,PROC30,PROC31,PROC32:
                               PROC33,PROC34,PROC35,PROC36,PROC37:
                               PROC38,PROC39,PROC40,DIAG41,DIAG42:
                               DIAG43,DIAG44,DIAG45,DIAG46,DIAG47:
                               DIAG48,DIAG49,DIAG50,DIAG51,DIAG52:
                               DIAG53,DIAG54,DIAG55,DIAG56,DIAG57:
                               DIAG58,DIAG59,DIAG60,DIAG61,DIAG62:
                               DIAG63,DIAG64,DIAG65,DIAG66,DIAG67:
                               DIAG68,DIAG69,DIAG70,DIAG71,DIAG72:
                               DIAG73,DIAG74,DIAG75,DIAG76,DIAG77:
                               DIAG78,DIAG79,DIAG80,DIAG81,DIAG82:
                               DIAG83,DIAG84,DIAG85,DIAG86,DIAG87:
                               DIAG88,DIAG89,DIAG90,DIAG91,DIAG92:
                               DIAG93,DIAG94,DIAG95,DIAG96,DIAG97:
                               DIAG98,DIAG99,DIAG100;
          ENDIF
.          ELSE
.            WRITE     WORK,SEQ;TRANTYPE,UNIQKEYL,DIAG13,DIAG14,DIAG15:
.                               DIAG16,DIAG17,DIAG18,DIAG19,DIAG20:
.                               DIAG21,DIAG22,DIAG23,DIAG24,DIAG25:
.                               PROC13,PROC14,PROC15,PROC16,PROC17:
.                               PROC18,PROC19,PROC20,PROC21,PROC22:
.                               PROC23,PROC24,PROC25,DIAG26,DIAG27:
.                               DIAG28,DIAG29,DIAG30,DIAG31,DIAG32:
.                               DIAG33,DIAG34,DIAG35,DIAG36,DIAG37:
.                               DIAG38,DIAG39,DIAG40,PROC26,PROC27:
.                               PROC28,PROC29,PROC30,PROC31,PROC32:
.                               PROC33,PROC34,PROC35,PROC36,PROC37:
.                               PROC38,PROC39,PROC40;
.          ENDIF
.                                                  
PXDG2000  ADD       "1",RECCNT
          COMPARE   "99999",RECCNT
          GOTO      PXDG9500 IF NOT LESS    * Record counter >= max no of recs
.
PXDG9000  MOVE      ZERO,EXIT
          GOTO      PXDG9999
.
PXDG9500  MOVE      ONE,EXIT
PXDG9999  RETURN
+
.******************************************************************************
.*                                  PRCH0000                                  *
.*    Print  Coding error header                         called by : PRUN0000 *
.******************************************************************************
PRCH0000  PRINT     *N
          CALL      UND132                  * Print underline
          PRINT     *N,"Coding Errors"
.
PRCH9999  RETURN
+
.******************************************************************************
.*                                  GFRM0000                                  *
.*  Get the Format the admission# written to PRS2        called by : MAINLINE *
.******************************************************************************
GFRM0000  MOVE      PTCNUKEY,CURRFORM
.
          MOVE      AADMNO,PTPDADMN
          MOVE      PTPDADMN,KEY8
          CALL      RDPTPTD1
          BRANCH    OVRCD,GFRM1000
.
          LOAD      CURRFORM,PTPDFORM,PTPDFORM,PTPDFORM,PTPDFORM
          GOTO      GFRM9999
.
GFRM1000  MOVE      AADMNO,PTYDADMN
          MOVE      PTYDADMN,KEY8
          CALL      RDPTYTD1
          BRANCH    OVRCD,GFRM2000
.
          LOAD      CURRFORM,PTYDFORM,PTYDFORM,PTYDFORM,PTYDFORM
          GOTO      GFRM9999
.
GFRM2000  COMPARE   ZERO,PREEXIST            * Check if Previous Year File Exist
          GOTO      GFRM2500 IF NOT EQUAL    * No.
          GOTO      GFRM9999                 * No, use parameter
.
GFRM2500  CLOSE     PATYTDA1
          OPEN      PATYTDA1,PREVYEAR
          PACK      KEY8,AADMNO
          CALL      RDPTYTD1
          BRANCH    OVRCD,GFRM3000
.
          LOAD      CURRFORM,PTYDFORM,PTYDFORM,PTYDFORM,PTYDFORM
.
GFRM3000  CLOSE     PATYTDA1
          OPEN      PATYTDA1,YEARFILE
.
GFRM9999  RETURN
+
.******************************************************************************
.* CRYD0000                                              called by : GAEP0000 *
.* Check rest of year differences & write to ROYTEMP if details have changed  *
.******************************************************************************
CRYD0000  BRANCH    ROYFLAG,CRYD1000          * if in writetoroyfile or writeeps
          GOTO      CRYD9000
.
CRYD1000  PACK      KEY8,AADMNO
          CALL      RDPTYTD1
          BRANCH    OVRCD,CRYD2000
.
. ------- Check if any of the variables calculated differ from those stored  
.
          COMPARE   PTYDYADM,PTPDMADM
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYSEP,PTPDMSEP
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYSTS,PTPDMSTS
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYBED,PTPDMBED
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYHAS,PTPDMHAS
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYHAB,PTPDMHAB
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYPAS,PTPDMPAS
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYPAB,PTPDMPAB
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYHNS,PTPDMHNS
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYHNB,PTPDMHNB
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYPNS,PTPDMPNS
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYPNB,PTPDMPNB
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYH5S,PTPDMH5S
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYH5B,PTPDMH5B
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYP5S,PTPDMP5S
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYP5B,PTPDMP5B
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYCOS,PTPDMCOS
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYCOB,PTPDMCOB
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYCNS,PTPDMCNS
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYCNB,PTPDMCNB
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYIES,PTPDMIES
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYIEB,PTPDMIEB
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYINS,PTPDMINS
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYINB,PTPDMINB
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYHCS,PTPDMHCS
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYHCB,PTPDMHCB
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYPCS,PTPDMPCS
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYPCB,PTPDMPCB
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYHAT,PTPDYHAT
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYPAT,PTPDYPAT
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYCOT,PTPDYCOT
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYIET,PTPDYIET
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYHNT,PTPDYHNT
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYPNT,PTPDYPNT
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYH5T,PTPDYH5T
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYP5T,PTPDYP5T
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYHCT,PTPDYHCT
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYPCT,PTPDYPCT
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYCNT,PTPDYCNT
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYINT,PTPDYINT
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYHSD,PTPDMHSD
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYPSD,PTPDMPSD
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYCSD,PTPDMCSD
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYISD,PTPDMISD
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYHCD,PTPDMHCD
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYPCD,PTPDMPCD
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYUEP,PTPDMUEP
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYUBD,PTPDMUBD
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYOPS,PTPDMOPS
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYOPB,PTPDMOPB
          GOTO      CRYD2000 IF NOT EQUAL
.
          COMPARE   PTYDYOPT,PTPDYOPT
          GOTO      CRYD2000 IF NOT EQUAL
.
          GOTO      CRYD9000
.
CRYD2000  PACK      KEY8,AADMNO
          CALL      RDTMROY1
          COMPARE   ONE,OVRCD
          CALL      WRTMROY1 IF EQUAL
.
CRYD9000  MOVE      ZERO,EXIT
CRYD9999  RETURN
+
.******************************************************************************
.*                                  WTOF0000              Called by: GAEP0000 *
.*                           Write To Correct Files                           *
.******************************************************************************
WTOF0000  BRANCH    ROYFLAG,WTOF9000,WTOF1000,WTOF2000
.
          MOVE      CURRFORM,PTPDFORM
          MOVE      AADMNO,PTPDADMN
          MOVE      PTPDADMN,KEY8
          MOVE      HOSPCODE,PTPDHOSP
          CALL      WRPTPTD1                * Write a PTD file record
.
          CALL      ADPM0000                * Add PTD to MTD variables
          MOVE      AADMNO,PTMDADMN
          MOVE      HOSPCODE,PTMDHOSP
          PACK      KEY8,PTMDADMN
          CALL      RAPTMTD1                * Check read a MTD file record
          IF        OVRCD=1
            CALL      WRPTMTD1              * Write a MTD file record
          ELSE
            CALL      UPPTMTD1              * Update a MTD file record
          ENDIF
          GOTO      WTOF9000
.
WTOF1000  CLOSE     PATYTDA1
          OPEN      PATYTDA1,YEARFILE
          GOTO      WTOF3000
.
WTOF2000  COMPARE   ZERO,PREEXIST
          GOTO      WTOF9000 IF NOT EQUAL   * Previous YTD file exists, exit
.
          CLOSE     PATYTDA1
          OPEN      PATYTDA1,PREVYEAR
.
WTOF3000  MOVE      HOSPCODE,PTYDHOSP
          PACK      KEY8,AADMNO
          CALL      RDPTYTD1                * Read a YTD file record
          BRANCH    OVRCD,WTOF4000
.
          CALL      MVPY0000                * Move period to year variables
          PACK      KEY8,AADMNO
          MOVE      HOSPCODE,PTYDHOSP
          CALL      UPPTYTD1                * Update a YTD file record
          GOTO      WTOF9999
.
WTOF4000  CALL      MVPY0000                * Move period to year variables
          MOVE      SP8,PTYDDTDL
          MOVE      AADMNO,PTYDADMN
          MOVE      HOSPCODE,PTYDHOSP
          PACK      KEY8,PTYDADMN
          CALL      WRPTYTD1                * Write a YTD file record
.
WTOF9000  MOVE      ZERO,EXIT
WTOF9999  RETURN
.******************************************************************************
.*                                  UPCT0000                                  *
.*    Update Percent Varialbes & display percent star    called by : GAEP0000 *
.******************************************************************************
UPCT0000  BRANCH    FLAGSING,UPCT9999
          BRANCH    ROYFLAG,UPCT1000,UPCT9999,UPCT9999
.
UPCT1000  ADD       "1",TMPCOUNT
          COMPARE   TOTFRAC,TMPCOUNT
          GOTO      UPCT9999 IF LESS
.
          DISPLAY   *PTMPCOLST:15,*V2LON,"*"
          ADD       "1",TMPCOLST
          ADD       TMPFRAC,TOTFRAC 
.
UPCT9999  RETURN
.******************************************************************************
.*                                  UNCD0000                                  *
.*    Check New,Cors & Dels for Episode Data             called by : GAEP0000 *
.******************************************************************************
UNCD0000  BRANCH    ROYFLAG,UNCD9999,UNCD1000,UNCD1000  *Rest of Year being done
.
UNCD1000  
..MATCH     EPIADATE,CHCSED
..        GOTO      UNCD9999 IF LESS
.
          MOVE      "1",NEW
          MOVE      "0",COR
          MATCH     CHCSST,EPIADATE
          GOTO      UNCD2000 IF NOT LESS
.
          MOVE      "0",NEW
          MOVE      "1",COR
.
UNCD2000  ADD       NEW,PEPINEW
          ADD       COR,PEPICOR
.
UNCD9999  RETURN
.******************************************************************************
.*                                  SETN0000                                  *
.*    Set up the variables for statistical admissions    called by : GAEP0000 *
.******************************************************************************
SETN0000  UNPACK    EPISDATE,CDAY,CMON,CCENT,CYEAR
          PACK      EPIADATE,CCENT,CYEAR,CMON,CDAY * New Admission Date
          REP       " 0",EPIADATE
.
          MOVE      SP10,PTDAADTS            * Blank for Statistical Admission
          MOVE      SP10,EPITSRCE            * Blank for Statistical Admission
          MOVE      SP8,SEPISDAT
          MOVE      EPISCTYP,EPIASRCE
.
.******************************************** Start of changes         *C-49016
.                                            * I CAR 44935
.....     REP       "FSES1S2S6S7S8S5S9S0S3S4S",EPIASRCE
          UNPACK    EPISCTYP,DIM1,DIM1A
          REP       "F-E-1-2-6-7-8-5-9-0-3-4-",DIM1
          MATCH     "-",DIM1
          IF        @EQUAL
            MOVE      "S",EPIASRCE
          ENDIF
.                                            * end I CAR 44935
.********************************************   End of changes         *C-49016
.
          UNPACK    SP70,EPISDATE,EPISTRFR,EPISREFL,EPISACST,EPICAVAL
          MOVE      "0",EPISATYP
          MOVE      "0 ",EPISCTYP                                      *C-49016
.
. ------- Set Time to 1 minute > previous episode statistical discharge time
          MOVE      EPISTIME,EPIATIME        * New Admission Time
          MOVE      SP10,EPISTIME            * clear separation time
          MOVE      EPIATIME,FORM4
          MATCH     "2359",EPIATIME
          GOTO      SETN9000 IF EQUAL
.
          UNPACK    EPIATIME,DIM2A,DIM2B
          MOVE      DIM2B,FORM2
          MATCH     "59",DIM2B
          GOTO      SETN1000 IF NOT EQUAL
.
. ------- If Sepn time was XX59 add 1 to hour and 00 to minutes (XX not 23)
          MOVE      DIM2A,FORM2
          ADD       "1",FORM2
          MOVE      FORM2,DIM2A
          PACK      EPIATIME,DIM2A,SP2
          REP       " 0",EPIATIME
          GOTO      SETN9999
.
SETN1000  ADD       "1",FORM4
          MOVE      FORM4,EPIATIME           * = Disch. Time + 1
          REP       " 0",EPIATIME
          GOTO      SETN9999
.
SETN9000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error ### : Statistical Discharge Time is 23:59 for ":
                  "Admission#/Episode#: ",AADMNO,"/",EPISODNO,". Please set to":
                    " 23:58 or less.",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      SETN9999
.
SETN9999  RETURN
+
.******************************************************************************
.*                                  GCEP0000                                  *
.*    generate Primary Episode Rec for the trans. file   called by : GAEP0000 *
.******************************************************************************
GCEP0000  MOVE      TRUE,NOSAMDAY           * Same day patient
          MOVE      "0 ",CARETYPE                                      *C-49016
          MOVE      "0",ACCMTYPE
.
. ----- Check if this admission has already been posted -----
.
          BRANCH    ROYFLAG,GCEP1000,GCEP1000,GCEP1000  * When doing ROY calcs.
.
          PACK      KEY8,AADMNO
          CALL      RDTMPR1                 * Read admission number temp file
          COMPARE   ZERO,OVRCD
          GOTO      GCEP9500 IF EQUAL       * Record found - ignore record
.
GCEP1000  MATCH     SP8,DDATE               * Read admission number temp file
          GOTO      GCEP2000 IF EQUAL
. 
          MATCH     DDATE,ADATE
          GOTO      GCEP2000 IF NOT EQUAL
.
          MOVE      FALSE,NOSAMDAY          * 1 Episode, 1 Segment, 1 Bed Day   
.
GCEP2000  CALL      INTV0000                * Initialize all variables
          MOVE      ADATE,EPIADATE          * Admission date
.
          UNPACK    ATIME,CHOUR,DIM1,CMIN
          PACK      EPIATIME,CHOUR,CMIN     * Admission time
          REP       " 0",EPIATIME
.
          MOVE      AURNO,EPIURNO           * U/R number
          SQUEEZE   EPIURNO
          PACK      EPIURNO,EPIURNO,SP8
.
          PACK      LJUSCODE,EPIURNO,SP70
          MOVE      "8",JUSTNO
          CALL      RJUS0000
          MOVE      RJUSCODE,EPIURNO
          REP       " 0",EPIURNO
.
          PACK      EPIURNOL,SP2,EPIURNO    * from 01/07/2004          *I-49016
          REP       " 0",EPIURNOL                                      *I-49016
.
          CALL      DOB0000                 * Get DOB
.
          MATCH     SP10,PMEDI              * I CAR 43893
          IF        @EQUAL | @EOS
            PACK      EPIMEDI,SP20
            GOTO      GCEP3000              * end I CAR 43893
          ENDIF
.
          MOVE      PTMXMCCD,MEDIREFN       * Medicare reference no
          MOVE      SP1,DIM1
          MATCH     SP2,MEDIREFN
          IF        !@EQUAL
            UNPACK    MEDIREFN,KEY1,DIM1
            MATCH     SP1,KEY1
            IF        !@EQUAL
              MOVE      KEY1,DIM1
            ENDIF
          ENDIF
          MATCH     SP1,DIM1
          IF        @EQUAL
            MOVE      "1",DIM1              * Default to "1"
            LOAD      DIM1,NEWBORN,ZERO     * Default to "0" if newborn
          ENDIF
.
          MATCH     "0000000000",PMEDI
          IF        @EQUAL
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
            PRINT "Error 033 : Invalid Medicare number for admission ",AADMNO,*N
.
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
          ENDIF
.
          PACK      EPIMEDI,PMEDI,DIM1,SP20
GCEP3000  CALL      MSFX0000                * Get the medicare suffix
          CALL      MCAG0000                                           *I-60167
.
          PACK      AGEDATE,ADATE
          CALL      CALCAGE                 * Calculate age as of admin date
.
          MOVE      PSEX,DSEXCHAR
          CALL      SEXDSC00                * Get sex description (in IBACOMN)
.                                           *       returns DSEXDESC & DSEXNO
          MOVE      DSEXNO,EPISEX
.
.          BRANCH    DOYR2025,GCEP4000       * Mods for July 2024
.
.          IF        DSEXNO < 1 | DSEXNO > 4
.            COMPARE   ONE,ADMDTFLG
.            CALL      ADDT0000 IF NOT EQUAL * Print admin details
.            COMPARE   "60",CLNO
.            CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
.            PRINT     "Error 033 : Invalid Sex at Birth for admission ":
.                      AADMNO,*N
.
.            ADD       TWO,CLNO
.            ADD       ONE,NUMERROR
.            MOVE      ONE,PTERRFLG
.          ENDIF
.
.          IF         DSEXNO = 3 & PSAGEDAY > 90
.            COMPARE   ONE,ADMDTFLG
.            CALL      ADDT0000 IF NOT EQUAL * Print admin details
.            COMPARE   "60",CLNO
.            CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.            PRINT     "Error 033 : Invalid Sex at Birth for Patient's age ":
.                      AADMNO,*N
.            ADD       TWO,CLNO
.            ADD       ONE,NUMERROR
.            MOVE      ONE,PTERRFLG
.          ENDIF
.          GOTO        GCEP5000
.
GCEP4000  MATCH     JAN2025,TODAY
          IF        @LESS
            IF         DSEXNO = 3 | DSEXNO = 4
              MOVE       5,DSEXNO
              MOVE       DSEXNO,EPISEX
            ENDIF
          ENDIF
.
          IF         DSEXNO = 1 |  DSEXNO = 2 | DSEXNO = 5
            GOTO       GCEP5000             * valid sex value
          ENDIF
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 033 : Invalid Sex at Birth for admission ":
                    AADMNO,*N
.
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
GCEP5000  CALL      MSTA0000                * Get the martial status
          MOVE      SITEID,EPISITID         * Site id
          MOVE      NEWSITID,EPNSITID       * New 4 character Site id
          CALL      ABOR0000                * Get the aboriginality
          CALL      GCOB0000                * Get country of birth
          CALL      LINS0000                * Get the hospital ins status
          CALL      ATYP0000                * Admission type
          CALL      ASCE0000                * Admission source
          CALL      GNLN0000                * Get language and interpreter req
.
          MOVE      SP70,EPPROGID
          MATCH     SP70,PMVXPGID
          IF        !@EQUAL
            PACK      KEY5,ANSP,ANSK,PMVXPGID,SP70
            CALL      RDCODE1
            IF        OVRCD=0
              MATCH     "13",THCSCOD
              IF        @EQUAL
                MATCH     "20240701",DDATE 
                IF        @LESS
                  MOVE      THCSCOD,EPPROGID
                ELSE
                  MOVE      THCSCOD,EPPROGID
                  GOTO      GCEP5500
                ENDIF
              ELSE
                MOVE      THCSCOD,EPPROGID                
              ENDIF
            ENDIF
          ENDIF 
.
          MATCH     SP70,PMVXPGID
          GOTO      GCEP6000 IF EQUAL
.
. Blank via HCS (Cat PK) is valid code
          MATCH     SP70,EPPROGID
          GOTO      GCEP6000 IF EQUAL
.
          MATCH     "04",EPPROGID
          GOTO      GCEP6000 IF EQUAL
.
          MATCH     "05",EPPROGID
          GOTO      GCEP6000 IF EQUAL
.
          MATCH     "07",EPPROGID
          GOTO      GCEP6000 IF EQUAL
.
          MATCH     "08",EPPROGID
          GOTO      GCEP6000 IF EQUAL
.
          MATCH     "09",EPPROGID
          GOTO      GCEP6000 IF EQUAL
.
          MATCH     "10",EPPROGID
          GOTO      GCEP6000 IF EQUAL
.
          MATCH     "13",EPPROGID
          GOTO      GCEP6000 IF EQUAL
.
          MATCH     "11",EPPROGID
          GOTO      GCEP6000 IF EQUAL
.
          MATCH     "12",EPPROGID
          GOTO      GCEP6000 IF EQUAL
.
.
GCEP5500  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS  * Line count >= 60
          PRINT     "Error 648 : Invalid Program Identifier",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
GCEP6000  MOVE      SP1,EPIUSERF            * User flag - always blanks
          CALL      ILOS0000                * Get intended LOS
          MOVE      SP70,EPHLTHFD  * Hosp Ins not required after 01/07/2014
          CALL      PTSB0000                * Get postcode & suburb
          BRANCH    PTERRFLG,GCEP9000
.
. ----- Write admission number to temp admission number file -----
.
          BRANCH    ROYFLAG,GCEP9000,GCEP9000,GCEP9000  * When doing ROY calcs.
.
          PACK      KEY8,AADMNO
          CALL      WRTMPR1
.
GCEP9000  MOVE      ZERO,EXIT
          GOTO      GCEP9999
.
GCEP9500  MOVE      ONE,EXIT
GCEP9999  RETURN
+
.******************************************************************************
.*  RJUS0000 :  Right justify routine                                         *
.******************************************************************************
RJUS0000  PACK      RJUSCODE,SP70
          RESET     LJUSCODE,JUSTNO
          MOVE      ZERO,CHRCOUNT
RJUS1000  CMATCH    SP1,LJUSCODE
          GOTO      RJUS2000 IF NOT EQUAL
.
          ADD       ONE,CHRCOUNT
          BUMP      LJUSCODE,-1
          GOTO      RJUS2000 IF EOS
.
          COMPARE   JUSTNO,CHRCOUNT
          GOTO      RJUS1000 IF LESS
.
RJUS2000  RESET     LJUSCODE
          CLEAR     RJUSCODE
          RESET     RJUSCODE,CHRCOUNT
          APPEND    LJUSCODE,RJUSCODE
          RESET     RJUSCODE
.
RJUS9000  MOVE      ZERO,EXIT
RJUS9999  RETURN
+
.******************************************************************************
.*  DOB0000  :  Get Date of Birth                                             *
.******************************************************************************
DOB0000   UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
          PACK      EPIBDATE,CDAY,CMON,CCENT,CYEAR
          REP       " 0",EPIBDATE           * Get the date of birth
.
          PACK      EPDOBACC,ANSA,ANSA,ANSA,SP70
          MATCH     "1",PMPXEDOB
          IF        @EQUAL
            PACK      EPDOBACC,ANSE,ANSE,ANSE,SP70
          ENDIF
.
. if age at admission date <= 9, then patient is a newborn
.
          MOVE      ZERO,NEWBORN
          COMPARE   NINE,PSAGEDAY
          IF        @LESS | @EQUAL
            MOVE      ONE,NEWBORN       
          ENDIF 
.
. if age at admission date >= 120, report error
.
          COMPARE   "120",PSAGEYRS
          GOTO      DOB9999 IF LESS
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT   "Error 227 : Age at admission is >= 120 Years for admission ":
                    "number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
DOB9000   MOVE      ZERO,EXIT
DOB9999   RETURN
+
.******************************************************************************
.*                                  PEPI0000              Called by: GAEP0000 *
.*                         Post Primary Episode Record             & GDEP0000 *
.******************************************************************************
PEPI0000  BRANCH    ROYFLAG,PEPI9000,PEPI1000,PEPI1000 * Doing ROY Calcs.
.
PEPI1000  PACK      KEY8,AADMNO
          CALL      RAPTPTD1                * Read a PTD file record
          COMPARE   ZERO,OVRCD
          GOTO      PEPI9000 IF EQUAL
.
          UNPACK    EPIADATE,CCENT,CYEAR,CMON,CDAY
          PACK      EPIADATR,CDAY,CMON,CCENT,CYEAR
.
          COMPARE   TWO,PRERRFLG               
          GOTO      PEPI8000 IF EQUAL
.
          CALL      PE2V0000                * Pack E2 variables
          BRANCH    MEDIUM,PEPI2000         * 0 = Tape  1 = Disk/Modem
.
          WRITE     WORK,SEQ;E5,DIM91,KEY8,KEY91,KEY113;
.
          GOTO      PEPI8000
.
PEPI2000  WRITE     WORK,SEQ;E5,DIM91,KEY8,KEY91,KEY113
.
PEPI8000  ADD       ONE,RECCNT              * Increment records count
          CALL      EXEP0000                * Get Extra Episode Details
          UNPACK    SP70,EPIACST1,EPIACST2,EPIACST3,EPIACST4,EPIACST5:
                         EPIACST5,EPIACST7
          CALL      ZERO0000                * Zero fill variables
          COMPARE   "99999",RECCNT
          GOTO      PEPI9500 IF NOT LESS    * Record counter >= max no of recs
.
PEPI9000  MOVE      ZERO,EXIT
          GOTO      PEPI9999
.
PEPI9500  MOVE      ONE,EXIT
PEPI9999  RETURN
+
.******************************************************************************
.*                                  PE2V0000              Called by: PEPI0000 *
.*                              Pack E2 Variables                    PRUN0000 *
.******************************************************************************
PE2V0000  MOVE      ZERO,OVRCD
          PACK      DIM91,UNIQKEYL,EPIURNOL,NEWSITID,EPIMEDI,EPIMCSFX:
                          EPISEX,EPIMSTAT,EPIBDATE,EPIPOST,EPISUBRB:
                          EPIADATR,EPIATIME,EPIATYPE,EPIASRCE,EPITSRCE
.
          PACK      KEY8,EPILVMTD,EPILVYTD,EPILVTOT
          REP       " 0",KEY8
.
          COMPARE   ZERO,ROYFLAG
          GOTO      PE2V3000 IF EQUAL       * Not doing ROY calcs
.
          MOVE      "1",FORM2
PE2V1000  STORE     ZERO,FORM2,EPIABDP1,EPIABDP2,EPIABDP3,EPIABDP4,EPIABDP5:
                               EPIABDP6,EPIABDP7
          ADD       "1",FORM2
          COMPARE   "8",FORM2
          GOTO      PE2V1000 IF LESS
.
          COMPARE   TWO,ROYFLAG
          GOTO      PE2V3000 IF EQUAL       * Doing ROY calcs
.
          MOVE      "1",FORM2
PE2V2000  STORE     ZERO,FORM2,EPIABDY1,EPIABDY2,EPIABDY3,EPIABDY4,EPIABDY5:
                               EPIABDY6,EPIABDY7
          ADD       "1",FORM2
          COMPARE   "8",FORM2
          GOTO      PE2V2000 IF LESS
.
PE2V3000  PACK      EPIBDAY1,EPIABDP1,EPIABDY1,EPIABDA1
          PACK      EPIBDAY2,EPIABDP2,EPIABDY2,EPIABDA2
          PACK      EPIBDAY3,EPIABDP3,EPIABDY3,EPIABDA3
          PACK      EPIBDAY4,EPIABDP4,EPIABDY4,EPIABDA4
          PACK      EPIBDAY5,EPIABDP5,EPIABDY5,EPIABDA5
          PACK      EPIBDAY6,EPIABDP6,EPIABDY6,EPIABDA6
          PACK      EPIBDAY7,EPIABDP7,EPIABDY7,EPIABDA7
          REP       " 0",EPIBDAY1
          REP       " 0",EPIBDAY2
          REP       " 0",EPIBDAY3
          REP       " 0",EPIBDAY4
          REP       " 0",EPIBDAY5
          REP       " 0",EPIBDAY6
          REP       " 0",EPIBDAY7
          PACK      KEY91,EPIACST1,EPIATYP1,EPIQTYP1,EPIBDAY1:
                          EPIACST2,EPIATYP2,EPIQTYP2,EPIBDAY2:
                          EPIACST3,EPIATYP3,EPIQTYP3,EPIBDAY3:
                          EPIACST4,EPIATYP4,EPIQTYP4,EPIBDAY4:
                          EPIACST5,EPIATYP5,EPIQTYP5,EPIBDAY5:
                          EPIACST6,EPIATYP6,EPIQTYP6,EPIBDAY6:
                          EPIACST7,EPIATYP7,EPIQTYP7,EPIBDAY7
.
.
          CALL      ITRA0000
          MATCH     SP70,EPISDATE
          IF        @EQUAL
            MOVE      SP70,EPREADMT
          ENDIF
          PACK      KEY93,EPISDATE,EPISTIME,EPISTYPE,EPISTRFR:
                          EPISREFL,EPICAVAL,EPISACST,EPISATYP:
                          EPISCTYP,EPNEWCOB,EPABRGNL,EPADCRTN:
                          EPIINLOS,EPHLTHFD,EPILINSR,EPIMNTLS:
                          EPISPFDA,EPICTTYP,EPICTROL:
                          EPICTRID,EPIMDCLD,EPIYDCLD,EPITLCLD:
                          EPIUSERF,EPILANG4,EPIINTRQ,EPIACASS:
                          EPIMHSWI,EPILWPMD,EPILWPYD,EPILWPTL:
                          EPREADMT,EPDOBACC,EPPROGID:
                          EPMOTHUR
.         PACK      KEY97,EPISDATE,EPISTIME,EPISTYPE,EPISTRFR:
.                         EPISREFL,EPICAVAL,EPISACST,EPISATYP:
.                         EPISCTYP,EPNEWCOB,EPABRGNL,EPADCRTN:
.                         EPIINLOS,EPHLTHFD,EPILINSR,EPIMNTLS:
.                         EPISPFDA,EPICTTYP,EPICTROL:
.                         EPICTRID,EPIMDCLD,EPIYDCLD,EPITLCLD:
.                         EPIUSERF,EPILANG4,EPIINTRQ,EPIACASS:
.                         EPIMHSWI,EPILWPMD,EPILWPYD,EPILWPTL:
.                         SP3,EPREADMT,EPDOBACC,EPPROGID:
.                         EPMOTHUR
.         PACK      KEY101,EPISDATE,EPISTIME,EPISTYPE,EPISTRFR:
.                         EPISREFL,EPICAVAL,EPISACST,EPISATYP:
.                         EPISCTYP,EPNEWCOB,EPABRGNL,EPADCRTN:
.                         EPIINLOS,EPHLTHFD,EPILINSR,EPIMNTLS:
.                         EPISPFDA,EPICTTYP,EPICTROL:
.                         EPICTRID,EPIMDCLD,EPIYDCLD,EPITLCLD:
.                         EPIUSERF,EPILANG4,EPIINTRQ,EPIACASS:
.                         EPIMHSWI,EPILWPMD,EPILWPYD,EPILWPTL:
.                         EPREADMT,EPDOBACC,EPPROGID:
.                         EPMOTHUR,EPISAUNT,EPISDUNT
.
          PACK      KEY102,EPISDATE,EPISTIME,EPISTYPE,EPISTRFR:
                          EPISREFL,EPICAVAL,EPISACST,EPISATYP:
                          EPISCTYP,EPNEWCOB,EPABRGNL,EPADCRTN:
                          EPIINLOS,EPHLTHFD,EPILINSR,EPIMNTLS:
                          EPISPFDA,EPICTTYP,EPICTROL:
                          EPICTRID,EPIMDCLD,EPIYDCLD,EPITLCLD:
                          EPIUSERF,EPILANG4,EPIINTRQ,EPIACASS:
                          EPIMHSWI,EPILWPMD,EPILWPYD,EPILWPTL:
                          EPREADMT,EPDOBACC,EPPROGID:
                          EPMOTHUR,EPISAUNT,EPISDUNT,EPUNPRTT
.
          PACK      KEY113,EPISDATE,EPISTIME,EPISTYPE,EPISTRFR:
                          EPISREFL,EPICAVAL,EPISACST,EPISATYP:
                          EPISCTYP,EPNEWCOB,EPABRGNL,EPADCRTN:
                          EPIINLOS,EPHLTHFD,EPILINSR,EPIMNTLS:
                          EPISPFDA,EPICTTYP,EPICTROL:
                          EPICTRID,EPIMDCLD,EPIYDCLD,EPITLCLD:
                          EPIUSERF,EPILANG4,EPIINTRQ,EPIACASS:
                          EPIMHSWI,EPILWPMD,EPILWPYD,EPILWPTL:
                          EPREADMT,EPDOBACC,EPPROGID:
                          EPMOTHUR,EPISAUNT,EPISDUNT,SP1:
                          EPIGENDR,ENDISPFL,ENDISPID
.
PE2V9000  MOVE      ZERO,EXIT
PE2V9999  RETURN
+
.******************************************************************************
.*                                  INTV0000                                  *
.*     initialize all Pri. Episode Record variables      called by : PRUN0000 *
.******************************************************************************
INTV0000  MOVE      ONE,FORM2
.
INTV1000  STORE     ZERO,FORM2,EPISEX,EPIMSTAT,EPILINSR,EPILVMTD:
                               EPILVYTD,EPILVTOT,EPIQTYP1,EPIABDP1,EPIABDY1:
                               EPIABDA1,EPIQTYP2,EPIABDP2,EPIABDY2,EPIABDA2:
                               EPIQTYP3,EPIABDP3,EPIABDY3,EPIABDA3,EPIQTYP4:
                               EPIABDP4,EPIABDY4,EPIABDA4,EPIQTYP5,EPIABDP5:
                               EPIABDY5,EPIABDA5,EPIQTYP6,EPIABDP6,EPIABDY6:
                               EPIABDA6,EPIQTYP7,EPIABDP7,EPIABDY7,EPIABDA7:
                               EPISCTYP,EPICTYP1,EPICTYP2,EPICTYP3,EPICTYP4:
                               EPICTYP5,EPICTYP6,EPICTYP7
.
          COMPARE   "42",FORM2                                         *C-90216
          GOTO      INTV2000 IF NOT LESS
          ADD       ONE,FORM2
          GOTO      INTV1000
.
INTV2000  UNPACK    SP20,UNIQKEY,UNIQKEYL                              *C-49016
          MOVE      "0000000000",EPIURNOL                              *I-49016
          MOVE      "00000000",EPIURNO                                 *I-49016
.         MOVE      SP8,UNIQKEY                                        *D-49016
.         MOVE      SP8,EPIURNO                                        *D-49016
.
.---- Qualification status needs to be spaces not zeros -----
.
          UNPACK    SP20,EPIQTYP1,EPIQTYP2,EPIQTYP3,EPIQTYP4,EPIQTYP5:
                         EPIQTYP6,EPIQTYP7
          UNPACK    SP20,EPIATYP1,EPIATYP2,EPIATYP3,EPIATYP4,EPIATYP5:
                         EPIATYP6,EPIATYP7
          MOVE      SP4,EPIPOST                                        *C-90216
          MOVE      SP20,EPIMEDI
          MOVE      SP3,EPIMCSFX
          MOVE      "00002000",EPIBDATE
          MOVE      SP1,EPISITID
          MOVE      SP70,EPNSITID
          PACK      EPISUBRB,SP20,SP2
          MOVE      SP8,EPIADATE
          MOVE      SP4,EPIATIME
          MOVE      SP1,EPIATYPE
          MOVE      SP1,EPIASRCE
          MOVE      SP5,EPITSRCE
          MOVE      SP3,EPIACST1
          MOVE      SP3,EPIACST2
          MOVE      SP3,EPIACST3
          MOVE      SP3,EPIACST4
          MOVE      SP3,EPIACST5
          MOVE      SP3,EPIACST6
          MOVE      SP3,EPIACST7
          MOVE      SP3,DIMFUND
          MOVE      SP8,EPISDATE
          MOVE      SP8,EPISTIME
          MOVE      SP8,SEPISDAT
          MOVE      SP8,EPISREFL
          MOVE      SP1,EPICAVAL
          MOVE      SP1,EPISTYPE
          MOVE      SP5,EPISTRFR
          MOVE      SP3,EPISACST
          MOVE      SP1,EPISATYP
          MOVE      "00",EPIMDCLD
          MOVE      "00",EPIYDCLD
          MOVE      "00",EPITLCLD
          UNPACK    SP70,EPNEWCOB,EPABRGNL,EPADCRTN,EPIUSERF,EPIINLOS:
                         EPHLTHFD,EPIMNTLS,EPIPRGFS,EPISPFDA,EPICTTYP:
                         EPICTROL,EPICTRID
          UNPACK    SP30,EPRSRVED,EPIHFUND,EPICOBTH,EPICLSPC
          MOVE      SP8,EPILANG4
          MOVE      SP1,EPIINTRQ
          MOVE      SP1,EPIACASS
.         MOVE      SP3,EPIPACPD                                       *I-60167
          MOVE      SP70,EPDOBACC
          MOVE      SP70,EPPROGID
          MOVE      SP70,EPMOTHUR
          MOVE      SP70,EPISAUNT
          MOVE      SP70,EPISDUNT
          MOVE      SP70,EPUNPRTT
          MOVE      SP70,EPIGENDR
          MOVE      SP70,ENDISPFL
          MOVE      SP70,ENDISPID
.
INTV9999  RETURN
.******************************************************************************
.*                                  UKEY0000                                  *
.*     routine to derive an unique key for Pri. Episode & Diagnosis Recs      *
.*                       called by : GAEP0000, GDIA0000                       *
.******This routine is not compatible for alphanumeric Visit Number ***********
.******************************************************************************
UKEY0000  MOVE      ZERO,FORMAT04                * set New 2004 Format *I-51411
.
          COMPARE   ZERO,CURRFORM
          IF        @EQUAL
            MOVE      PTCNUKEY,CURRFORM
          ENDIF
.
          MATCH     "20040701",ADATE             * Check admiss. date  *I-51411
          GOTO      UKEY0500 IF LESS                                   *I-51411
          MOVE      ONE,FORMAT04                                       *I-51411
.
. ------- Base36 Unique Key
UKEY0500  COMPARE   ONE,CURRFORM                          * add label  *C-51411
          GOTO      UKEY3000 IF EQUAL            * Format One (Base36)
.
. ------- Concatenation of Episode # and Admission # Unique Key
          COMPARE   TWO,CURRFORM
          GOTO      UKEY1000 IF EQUAL            * Format 2 type 1 (1+5 chars)
.                                                * from 01/07/2004 (2+7 chars)
.
          COMPARE   THREE,CURRFORM
          GOTO      UKEY2000 IF EQUAL            * Format 2 type 2 (0+6 chars)
.                                                * from 01/07/2004 (1+8 chars)
.
          GOTO      UKEY8000                     * Invalid Code PTCNUKEY
.
UKEY1000  MOVE      AADMNO,FORM8                 * convert Adm No. to FORM 8
          COMPARE   ONE,FORMAT04                                       *I-51411
          GOTO      UKEY1500 IF EQUAL            * 2004 admission      *I-51411
.
          COMPARE   "100000",FORM8               * Is Adm# < 6 digits
          GOTO      UKEY9000 IF NOT LESS         * Admission # too big
.
          COMPARE   "11",TOTEPIS                 * Is there > 10 episodes
          GOTO      UKEY9000 IF NOT LESS         * Combination too big
.
. ------- Unique Key is Accepted
          MOVE      FORM8,FORM5
          MOVE      EPISODNO,FORM1
          SUB       "1",FORM1
          PACK      UNIQKEY,FORM1,FORM5          * Episode#/Admission#
          GOTO      UKEY7000
.
.******************************************** Start of addition        *I-51411
UKEY1500  MOVE      AADMNO,FORM8
          COMPARE   "10000000",FORM8
          GOTO      UKEY9000 IF NOT LESS         * Admiss.No too big
.
          COMPARE   "99",TOTEPIS                 * Is there > 98 episodes
          GOTO      UKEY9000 IF NOT LESS         * Combination too big
.
. ------- Unique Key is Accepted                 * (2+7 chars)
          MOVE      FORM8,FORM7
          MOVE      EPISODNO,FORM2
          SUB       "1",FORM2
          PACK      UNIQKEYL,FORM2,FORM7         * Episode#/Admission#
          REP       " 0",UNIQKEYL                * add leading zeros
          GOTO      UKEY9999
.********************************************   End of addition        *I-51411
.
UKEY2000  MOVE      AADMNO,FORM8
          COMPARE   ONE,FORMAT04                                       *I-51411
          GOTO      UKEY2500 IF EQUAL            * 2004 admission      *I-51411
.
          COMPARE   "1000000",FORM8              * Is Adm# < 7 digits
          GOTO      UKEY9000 IF NOT LESS         * Admission # too big
.
          COMPARE   "1",TOTEPIS                  * Is there > 1 episode
          GOTO      UKEY9000 IF NOT EQUAL
.
. ------- Unique Key is Accepted
          UNPACK    FORM8,DIM2,UNIQKEY           *Admission# with Ep# = 1
          GOTO      UKEY7000
.
.******************************************** Start of addition        *I-51411
UKEY2500  MOVE      AADMNO,FORM8
.
          COMPARE   "11",TOTEPIS                 * Is there > 10 episodes
          GOTO      UKEY9000 IF NOT LESS         * Combination too big
.
. ------- Unique Key is Accepted                 * (1+8 chars)
          MOVE      EPISODNO,FORM1
          SUB       "1",FORM1
          PACK      UNIQKEYL,FORM1,FORM8         * Episode#/Admission# *C-52750
          REP       " 0",UNIQKEYL                * add leading zeros   *I-52750
          GOTO      UKEY9999
.********************************************   End of addition        *I-51411
.
.
. ------- Format 0 - Base36
UKEY3000  PACK      UKEY10,EPISODNO,AADMNO
          REP       " 0",UKEY10
          MOVE      UKEY10,B10NUMB
          PROC      TOBASE
.
          MOVE      NEWBNUMB,UNIQKEY
          GOTO      UKEY7000
.
.         Remove leading zero's from the unique key (prior to 01/07/2004)
.
UKEY7000  MOVE      SP1,ANS                                            *C-51411
          PACK      UNIQKEYL,SP3,UNIQKEY                             *I-51411
          REP       " 0",UNIQKEYL             * add leading zeros    *I-51411
          GOTO      UKEY9999                                         *I-51411
.
UKEY8000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error ### : Invalid Unique Key Format Code on Codes File.  ",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      UKEY9999
.
UKEY9000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 029 : Episode/Admission Number combination too big for ":
	            "Admission Number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
UKEY9999  RETURN
.******************************************************************************
.*                                  MSFX0000                                  *
.*        Pri. Episode Record - get Medicare Suffix      called by : GAEP0000 *
.******************************************************************************
MSFX0000  MOVE      PVIRESI,PATYPE          * Patient type
          COMPARE   ONE,PTCNMEDC
          GOTO      MSFX2500 IF NOT EQUAL   * Not sending medicare number
.
          MATCH     SP10,PMEDI
          GOTO      MSFX2100 IF NOT EQUAL
.
          PACK      KEY5,ANST,SP1,PATYPE
          CALL      RDCODE1                      * read PATCODFD record
.
          MATCH     SP1,TCINDC1                  * blank 1st Indicator ?
          GOTO      MSFX1000 IF EQUAL            * yes
.
          TYPE      TCINDC1                      * is 1st Indicator numeric ?
          GOTO      MSFX1000 IF NOT EQUAL        * no
          MOVE      TCINDC1,FORM1                * yes
.
          BRANCH    FORM1,MSFX1000,MSFX1100,MSFX1200
          GOTO      MSFX2000                     * invalid 1st Indicator
.
. ------  1st Indicator = "1"  ------
.
MSFX1000  MOVE      "C-U",EPIMCSFX
          GOTO      MSFX1300
.
. ------  1st Indicator = "2"  ------
.
MSFX1100  MOVE      "N-E",EPIMCSFX
          GOTO      MSFX1300
.
. ------  1st Indicator = "3"  ------
.
MSFX1200  MOVE      "P-N",EPIMCSFX
.
. ------  when Suffix is C-U, N-E or P-N, Medicare Number is set to blank  -----
.
MSFX1300  MOVE      SP20,EPIMEDI
          GOTO      MSFX9999
.
. ------  invalid 1st Indicator  ------
.
MSFX2000  MATCH     SP10,PMEDI
          GOTO      MSFX3000 IF EQUAL
.
. ------  valid Medicare Number  ------
.
MSFX2100  MOVE      PMPXFNAM,KEY25
          REP       UPPLOW,KEY25
          SCAN      "SON OF",KEY25
          GOTO      MSFX2200 IF EQUAL
.
          SCAN      "DAUGHTER OF",KEY25
          GOTO      MSFX2200 IF EQUAL
.
          SCAN      "BABY OF",KEY25
          GOTO      MSFX2200 IF EQUAL
.
          RESET     KEY25,3
          LENSET    KEY25
          RESET     KEY25
          MOVE      KEY25,EPIMCSFX
          GOTO      MSFX9999
.
MSFX2200  MOVE      "BAB",EPIMCSFX
          GOTO      MSFX9999
.
.         We are not sending any medicare number
.
MSFX2500  MOVE      SP20,EPIMEDI                 * set to blanks
          PACK      KEY5,ANST,SP1,PATYPE
          CALL      RDCODE1                      * read PATCODFD record
.
          TYPE      TCINDC1                      * is 1st Indicator numeric ?
          GOTO      MSFX2600 IF NOT EQUAL        * no - invalid value
.
          MOVE      TCINDC1,FORM1                * yes
          BRANCH    FORM1,MSFX2600,MSFX2700,MSFX2800
.
. ------  1st Indicator = "1"  ------
.
MSFX2600  MOVE      "C-U",EPIMCSFX
          GOTO      MSFX9999
.
. ------  1st Indicator = "2"  ------
.
MSFX2700  MOVE      "N-E",EPIMCSFX
          GOTO      MSFX9999
.
. ------  1st Indicator = "3"  ------
.
MSFX2800  MOVE      "P-N",EPIMCSFX
          GOTO      MSFX9999
.
. ------  invalid 1st Indicator value  ------
.
MSFX3000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error ### : Invalid 1st indicator value for patient type ":
                    PATYPE,*N
          ADD       TWO,CLNO 
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
MSFX9999  RETURN
+
.******************************************************************************
.*                                  HEAD0000              Called by: Lots     *
.*                             Print Report Header                            *
.******************************************************************************
HEAD0000  CALL      HEAD132
          UNPACK    CHCSST,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *N,*40,"Date Range : ",CPCDATE," To ";
          UNPACK    CHCSED,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     CPCDATE
          ADD       "2",CLNO
.
          MOVE      ONE,PRTHDR              * Print header flag - yes
          PERFORM   ADMDTFLG,ADDT0000       * Print admin details
.
HEAD9000  MOVE      ZERO,EXIT
HEAD9999  RETURN
+
.******************************************************************************
.*                                  ADDT0000              Called by: Lots     *
.*                           Print Admission Details                          *
.******************************************************************************
ADDT0000  BRANCH    PRTHDR,ADDT1000         * Header printed
          BRANCH    ADMDTFLG,ADDT9000       * Already printed the admins details
.
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 55
.
ADDT1000  MOVE      ZERO,PRTHDR             * Print header flag - no
          PRINT     *N:
                    "Admission No. : ",AADMNO,*26,"U/R Number : ",AURNO:
                    *48,"Name : ",PATNAME,"  Sex : ",SEX,"  Born : ",BRTHDTE:
                    "  Age : ",PSAGE,*N:
                    "Current Ward/Bed : ",CURWRDBD:
                    *40,"Doctor : ",DOCNAME,*77,"Admission Date : ",ADMDTE:
                    "  Discharge Date : ",DSCDTE,*N
          ADD       "4",CLNO
          MOVE      ONE,ADMDTFLG            * Admission details flag - yes
.
ADDT9000  MOVE      ZERO,EXIT
ADDT9999  RETURN
+
.******************************************************************************
.*                                  GDET0000              Called by: GAEP0000 *
.*                            Get Patients Details        GACD0000 & SADM0000 *
.******************************************************************************
GDET0000  MOVE      PSNAME,PACSNAME
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME                 * Format the patients name
          MOVE      PACFNAME,PATNAME
.
.* ****************************************** Start of Changes         *C-49016
.                                           * original code for sex desc. has
.                                           * been deleted & replaced by :-
          MOVE      PSEX,DSEXCHAR
          CALL      SEXDSC00                * get sex description (in IBACOMN)
.                                           *       returns DSEXDESC & DSEXNO
          MOVE      DSEXDESC,SEX
.* ******************************************   End of Changes         *C-49016
.
          UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE                 * Format the DOB
          MOVE      CPCDATE,BRTHDTE
.
          MOVE      SP70,DOCNAME
          PACK      KEY6,ADOCTA
          CALL      RDDOCT1                 * Read a doctors file record
          BRANCH    OVRCD,GDET1000
.
          MOVE      DSNAME,PACSNAME
          MOVE      DGNAME,KEY1
          MOVE      KEY1,PACGNAME
          MOVE      DTITL,PACTITLE
          MOVE      ONE,PACFRMT
          CALL      PACNAME                 * Format the doctors name
          MOVE      PACFNAME,DOCNAME
.
GDET1000  UNPACK    ADATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE                 * Format the admin date
          MOVE      CPCDATE,ADMDTE
.
          MOVE      "N/A    ",CURWRDBD
          MATCH     SP3,AWARD
          IF        !@EQUAL
            PACK      CURWRDBD,AWARD,SLASH,ABED
          ENDIF
.
          MOVE      SP8,DSCDTE
          BRANCH    ASTAT,GDET9000,GDET9000,GDET2000,GDET3000
          GOTO      GDET9000
.
GDET2000  UNPACK    DDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE                 * Format the disch date
          MOVE      CPCDATE,DSCDTE
          GOTO      GDET9000
.
GDET3000  MOVE      "On-Leave",DSCDTE
.
GDET9000  MOVE      ZERO,EXIT
GDET9999  RETURN
+
.******************************************************************************
.*                                  MSTA0000                                  *
.*        Pri. Episode Record - get Marital Status       called by : GAEP0000 *
.******************************************************************************
MSTA0000  COMPARE   PSAGE,TEN4                   * patient's age <= 14 ?
          GOTO      MSTA1000 IF LESS             * no
          MOVE      ONE,EPIMSTAT                 * yes - set Marital Status = 1
          GOTO      MSTA9999 
.
MSTA1000  MATCH     SP3,PMSTAT                   * May be blank
          GOTO      MSTA1100 IF EQUAL            * Default value
. 
          PACK      KEY5,ANSM,SP1,PMSTAT
          CALL      RDCODE1                      * read PATCODFD record
          BRANCH    OVRCD,MSTA1100
          MATCH     SP4,THCSCOD                  * blank HDP Equiv ?
          GOTO      MSTA1200 IF NOT EQUAL        * no
.
MSTA1100  MOVE      NINE,EPIMSTAT              * yes - set Marital Status = 6
          GOTO      MSTA9999
.
MSTA1200  UNPACK    THCSCOD,DIM1A,DIM1
          TYPE      DIM1                         * is HPD Equiv numeric ?
          GOTO      MSTA2000 IF NOT EQUAL        * no
          MOVE      DIM1,EPIMSTAT                * yes
          BRANCH    EPIMSTAT,MSTA9999,MSTA9999,MSTA9999,MSTA9999,MSTA9999:
                             MSTA9999,MSTA2000,MSTA2000,MSTA9999
.
. ------  invalid HDP Equiv  ------
.
MSTA2000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 034 : Invalid HDP Equivalent for Marital Status ":
                    PMSTAT," for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
MSTA9999  RETURN
+
.******************************************************************************
.*                                  ABOR0000              Called by: GCEP0000 *
.*                              Get Aboriginality                             *
.******************************************************************************
ABOR0000  MOVE      "4",EPABRGNL
....      BRANCH    ROYFLAG,ABOR9000,ABOR9000,ABOR9000 * removed task 0826604
.
          IF        PNSWRACE<1 | PNSWRACE>14
            GOTO      ABOR7000              * Invalid parameter
          ENDIF
.
          UNPACK    SP5,TCODE,ACODE
          LOAD      TCODE,PNSWRACE,CATP1,CATP2,CATP3,CATP4,CATP5:
                                   CATP6,CATU1,CATU2,CATU3,CATU4:
                                   CATU5,CATU6,CATU7,CATVA
          LOAD      ACODE,PNSWRACE,PUSR1,PUSR2,PUSR3,PUSR4,PUSR5:
                                   PUSR6,AUSR1,AUSR2,AUSR3,AUSR4:
                                   AUSR5,AUSR6,AUSR7,PMVXABRG
          MATCH     ACODE,SP3
          GOTO      ABOR9000 IF EQUAL       * Already set to 2
.
          PACK      KEY5,TCODE,ACODE
          CALL      RDCODE1                 * Read a code file record
          BRANCH    OVRCD,ABOR8000
.
          UNPACK    THCSCOD,DIM1,KEY1
          TYPE      KEY1
          GOTO      ABOR8000 IF NOT EQUAL   * Non numeric, error
.
          MOVE      KEY1,FORM1
          MATCH     SP8,DDATE
          GOTO      ABOR2000 IF EQUAL
.
ABOR2000  IF        FORM1=1 | FORM1=2 | FORM1=3 | FORM1=4 | FORM1=8 | FORM1=9
            MOVE      FORM1,EPABRGNL      * Valid aboriginal status
            MOVE      THCSCOD,KEY1
            GOTO      ABOR9000 
          ENDIF
. ----- Invalid codes file entry for aboriginality -----
.
ABOR7000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 070 : Invalid codes file entry ",ACODE," for ":
                    "aboriginality for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      ABOR9000
.
. ----- Invalid aboriginality code -----
.
ABOR8000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 070 : Invalid Indigenous Status",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
ABOR9000  MOVE      ZERO,EXIT
ABOR9999  RETURN
+
.******************************************************************************
.*                                  ILOS0000              Called by: GCEP0000 *
.*                       Get The Intended Length Of Stay                      *
.******************************************************************************
ILOS0000  MOVE      SP1,TCINDC1
          IF        PTCNDSCI=0
            PACK      TCODE,ANSP,SP1
            MOVE      ACLSS,ACODE
          ELSE
            LOAD      TCODE,PTCNDSCI,CATU1,CATU2,CATU3,CATU4,CATU5,CATVI
            LOAD      ACODE,PTCNDSCI,AUSR1,AUSR2,AUSR3,AUSR4,AUSR5,PMVXIDUS
          ENDIF
          MATCH     SP3,ACODE
          GOTO      ILOS9000 IF EQUAL       * Not setup
.
          PACK      KEY5,TCODE,ACODE
          CALL      RDCODE1                 * Read the codes file
.
          MATCH     "1",TCINDC1
          IF        @EQUAL
            MOVE      "2",EPIINLOS          * Overnight stay
          ELSE
            MOVE      "1",EPIINLOS          * Sameday stay
          ENDIF
          GOTO      ILOS9999
.
. ----- Invalid length of stay -----
.
ILOS9000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 307 : Admission number ",AADMNO," has a blank length of ":
                    "stay.  ",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
ILOS9999  RETURN
+
.******************************************************************************
.*                                  MSFS0000              Called by: GAEP0000 *
.*          Get The Mental Health Legal Status & Program Fund Source          *
.******************************************************************************
MSFS0000  MOVE      SP1,EPIMNTLS            * Not applicable
          MOVE      SP1,EPIPRGFS            * Unknown program funding source
.
          MATCH     SP8,SEPISDAT
          GOTO      MSFS9999 IF EQUAL       * Only required when discharged
.
          MATCH     SEPISDAT,CHCSED
          GOTO      MSFS9999 IF LESS        * Not discharged in period required
.
          MOVE      SP1,EPIPRGFS            * Unknown program funding source
.
          COMPARE   ONE,PTCNHOSP
          GOTO      MSFS9999 IF NOT EQUAL   * Private hospital, exit
.
.
          MOVE      SAVPFS,EPIPRGFS         * Program funding source
.
          MOVE      SP1,EPIPRGFS
.
          MATCH     "8",EPIPRGFS
          GOTO      MSFS2000 IF NOT EQUAL   * Not age care program
.
          MOVE      ZERO,FORM1
...       MOVE      CARETYPE,FORM1                                     *D-49016
          UNPACK    CARETYPE,CARETYP1,CARETYP2                         *I-49016
          MOVE      CARETYP1,FORM1                                     *I-49016
.
          BRANCH    FORM1,MSFS1000,MSFS1000,MSFS2000,MSFS2000,MSFS2000:
                          MSFS1000,MSFS1000,MSFS2000,MSFS1000
          GOTO      MSFS2000
.
MSFS1000  MOVE      "6",EPIPRGFS            * Changed to acute health service
.
. ----- Validate the program funding source -----
.
MSFS2000  MATCH     SP1,EPIPRGFS
          GOTO      MSFS4000 IF EQUAL
.
          TYPE      EPIPRGFS
          GOTO      MSFS3000 IF NOT EQUAL   * Error, must be 1 2 3 6 7 or 8
.
          MATCH     "20010701",ADATE
          IF        @LESS
            MOVE      EPIPRGFS,FORM1
            BRANCH    FORM1,MSFS3000,MSFS3000,MSFS4000,MSFS3000,MSFS3000:
                            MSFS4000,MSFS4000,MSFS4000,MSFS3000
          ELSE
            MOVE      EPIPRGFS,FORM1
            BRANCH    FORM1,MSFS4000,MSFS3000,MSFS4000,MSFS3000,MSFS3000:
                            MSFS4000,MSFS4000,MSFS4000,MSFS3000
          ENDIF
.
. ----- Invalid program funding source -----
.
MSFS3000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 270 : Admission number ",AADMNO," has an invalid program ":
                    "funding source code ",EPIPRGFS,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
. ----- Validate the mental health legal status -----
.
MSFS4000  UNPACK    CARETYPE,CARETYP1,CARETYP2                         *I-49016
          TYPE      CARETYP1                                           *C-49016
          GOTO      MSFS9999 IF NOT EQUAL   * Care type not numeric, exit
.
          MATCH     "5",CARETYP1                                       *C-49016
          GOTO      MSFS9999 IF NOT EQUAL   * Ignore all care types not 5
.
          GOTO      MSFS9999
.
MSFS5000  MOVE      EPIMNTLS,FORM1
          BRANCH    FORM1,MSFS9999,MSFS9999 * Valid MHLS & PFS, exit
.
          GOTO      MSFS7000                * Invalid MHLS & PFS, exit
.
MSFS6000  GOTO      MSFS9999              * Error 268 N/A after 2018
.
. ----- Invalid MHLS for this care type & program funding source -----
.
MSFS7000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 268 : Admission number ",AADMNO," has an invalid mental ":
                    "health legal status code ",EPIMNTLS," for care type ":
                    "code ",CARETYPE," & program funding source code ":
                    EPIPRGFS,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      MSFS9999
.
. ----- Invalid mental health legal status -----
.
MSFS8000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 266 : Admission number ",AADMNO," has an invalid mental ":
                    "health legal status code ",EPIMNTLS,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
MSFS9999  RETURN
+
.******************************************************************************
.*                                  SFDA0000              Called by: GAEP0000 *
.*                     Get The Special Funding Arrangement                    *
.******************************************************************************
SFDA0000  MOVE      ZERO,ASFFLG                                        *I-53388
          UNPACK    SP20,EPISPFDA,EPICTTYP,EPICTROL,EPICTRID           *M-53388
          UNPACK    SP20,PTAFCODE,PTAFCTYP,PTAFCROL,PTAFCSID           *M-53388
.
SFDA0500  
.**** healthlinks and elective surgery blitz patients
.**** don't have a patasfaf record, but still need to send
          PACK      KEY5,ANSA,SP1,ATYPE
          CALL      RDCODE1                 * Category 'A ' - "patcodes"
          BRANCH    OVRCD,SFDA9999
.
.** Elective surgery blitz - no patasfaf record, but still send funding arr
.
          MOVE      ZERO,BLTZFLAG
          MATCH     ANSB,TCINDC18
          IF        @EQUAL
            MATCH     "20240701",DDATE * only send if Disch Date before 20240701  
            IF        @LESS
              MOVE      ANSB,EPISPFDA  *Funding arrangement Elect Surgery blitz
              GOTO      SFDA9999
            ELSE
              MOVE      ANSB,EPISPFDA
              MOVE      ONE,BLTZFLAG
              GOTO      SFDA1500
            ENDIF
          ENDIF
.     
          MATCH     "9",THCSCOD
          IF        @EQUAL
...         MATCH     SP8,SEPISDAT      * only send funding arrangement if disch
...         IF        !@EQUAL
              MOVE      "9",EPISPFDA     * Funding arrangement code Healthlinks
              GOTO      SFDA9999
...         ENDIF
          ENDIF
.
          MATCH     ANSC,TCINDC18
          IF        @EQUAL
            MOVE      "4",EPISPFDA  * Funding arrangement code Co-Ordinated Care
            GOTO      SFDA9999
          ENDIF
.
          MATCH     "A",THCSCOD        * NHRA-funded highly specialised therapy
          IF        @EQUAL
            MOVE      "N",EPISPFDA
            GOTO      SFDA9999
          ENDIF
.
SFDA0900  PACK      KEY25,AADMNO,Z70
          CALL      RSPTASF1                * Position on & read the admission
SFDA1000  CALL      RPPTASF1                  SFA file
          BRANCH    OVRCD,SFDA4000
.
          MATCH     AADMNO,PTAFADMN
          GOTO      SFDA4000 IF NOT EQUAL   * Different admission number, exit
.
          MATCH     SP1,PTAFCODE
          GOTO      SFDA1000 IF EQUAL       * No special fund arrange, get next
.
          MATCH     ANSA,PTAFTYPE
          IF        @EQUAL
            PACK      KEY5,ANSA,SP1,ATYPE
            CALL      RDCODE1                 * Category 'A ' - "patcodes"
            BRANCH    OVRCD,SFDA9999
.
            MOVE      THCSCOD,KEY1
.
            REP       "C-S-E-B-P-9-F-N-A-",KEY1  * check for Special Funding codes
.           IF        DOYR2022=1
.             REP       "C-S-E-B-P-9-F-N-A-",KEY1  * check for Special Funding codes
.           ELSE
.             REP       "C-S-E-B-P-9-F-",KEY1  * check for Special Funding codes
.           ENDIF
.
            MATCH     "-",KEY1
            GOTO      SFDA1000 IF NOT EQUAL
            MOVE      ONE,ASFFLG
          ENDIF
.
...       MATCH     SP8,SEPISDAT      * only send funding arrangement if disch
...       IF        !@EQUAL
            MOVE      PTAFCODE,EPISPFDA       * Funding arrangement code
            REP       "AN",EPISPFDA         * Funding arrangement code
...       ENDIF
.
          MOVE      PTAFCTYP,EPICTTYP       * contract type
          MOVE      PTAFCROL,EPICTROL       * contract role
.
          PACK      KEY5,PTAFCSID,SP70
          CALL      RDPTVAD1
          IF        OVRCD<>1
            MATCH     SP70,PTVANHSC
            IF        !@EQUAL
              MOVE      PTVANHSC,PTAFCSID     * Use HDP if it is entered
            ENDIF
          ENDIF
.
          MOVE      PTAFCSID,EPICTRID       * contract/spoke id
.
          MOVE      ZERO,FORM1
          MOVE      PTAFCODE,FORM1
.
          BRANCH    FORM1,SFDA2000:       * 1 = C - Contract
                          SFDA3000:       * 2 = S - Hub/Spoke
                          SFDA1500:       * 3 = H - removed from 01/07/2004
                          SFDA1500:       * 4 - not used
                          SFDA1500:       * 5 = not used
                          SFDA9999:       * 6 = E - ESAS
                          SFDA9999:       * 7 = not used
                          SFDA9999:       * 8 = National Bowel Cancer
                          SFDA9999        * 9 = Healthlinks Program
.
SFDA1500  COMPARE   ONE,ADMDTFLG            * C CAR 42820
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          COMPARE   BLTZFLAG,ONE
          IF        @EQUAL
            PRINT     "Error 416 : Admission number ",AADMNO," has invalid ":
                      "Funding arrangement B"
          ELSE
            PRINT     "Error 416 : Admission number ",AADMNO," has invalid Funding ":
                    "arrangement ",FORM1
          ENDIF
          ADD       ONE,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      SFDA9999
.
SFDA2000  CALL      FCTR0000            * Contract
          GOTO      SFDA9999
.
SFDA3000  CALL      FHUB0000            * Hub/Spoke
          GOTO      SFDA9999
.
SFDA4000  UNPACK    SP20,PTAFCODE,PTAFCTYP,PTAFCROL,PTAFCSID
          GOTO      SFDA9999                                           *I-49016
.
SFDA5000  CALL      FHLT0000            * Healthstreams
.
SFDA9999  RETURN
+
.******************************************************************************
.*                                  FCTR0000                                  *
.*                     Validating contract funding arrangement                *
.******************************************************************************
FCTR0000  MATCH     SP1,PTAFCTYP
          IF        @EQUAL
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
            PRINT     "Error 417 : Contract type is mandatory for admission number: ":
                      AADMNO,*N
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
          ELSE
            MOVE      ZERO,FORM1
            MOVE      PTAFCTYP,FORM1
            BRANCH    FORM1,FCTR1000,FCTR1000,FCTR1000,FCTR1000,FCTR1000:
                            FCTR0500,FCTR0500,FCTR1000                    
.
FCTR0500    COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
            PRINT     "Error 417 : Invalid Contract type for admission number: ":
                      AADMNO,*N
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
          ENDIF
.
.         Contract role
.
FCTR1000  MATCH     SP1,PTAFCROL
          IF        @EQUAL
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
            PRINT     "Error 409 : Contract Role is mandatory for admission number: ":
                      AADMNO,*N
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
          ELSE
            MATCH     "1",PTAFCTYP         * contract type
            IF        @EQUAL
              MATCH     ANSB,PTAFCROL
              IF        @EQUAL
                CALL      CHKID000           * check spoke identifier
                GOTO      FCTR8000
              ENDIF
            ELSE
              MATCH     ANSA,PTAFCROL
              GOTO      FCTR1200 IF EQUAL
              MATCH     ANSB,PTAFCROL
              GOTO      FCTR1200 IF EQUAL
            ENDIF
.
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
            PRINT     "Error 418 : Invalid Contract Role for admission number: ":
                      AADMNO,*N
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
          ENDIF
.
.         Contract/Spoke Identifier is mandatory 
.         if contract type 2,3,4 or 5
.
FCTR1200  MOVE      ZERO,FORM1
          MOVE      PTAFCTYP,FORM1        * contract type
          BRANCH    FORM1,FCTR2000,FCTR2300,FCTR2300,FCTR2300,FCTR2300
.
FCTR2000  MATCH     SP5,PTAFCSID
          IF        !@EQUAL
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
            PRINT     "Error 419 : Contract/Spoke ID must be blank for admission ":
                      "number: ",AADMNO,*N
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
          ENDIF
          GOTO      FCTR8000
.
FCTR2300  MATCH     SP5,PTAFCSID
          IF        @EQUAL
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
            PRINT     "Error 419 : Contract/Spoke ID is mandatory for admission ":
                      "number: ",AADMNO,*N
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
          ENDIF
.
FCTR8000  CALL      VLEV0000              * Validate leave days
FCTR9999  RETURN
+
.******************************************************************************
.*                                  CHKID000                                  *
.*        Check Contract Spoke/Identifier                                     *
.******************************************************************************
CHKID000  MATCH     SP5,PTAFCSID
          IF        @EQUAL
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
            PRINT     "Error 419 : Contract/Spoke ID is mandatory for admission ":
                      "number: ",AADMNO,*N
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
            GOTO      CHKID999
          ENDIF
.
          MOVE      SP70,PTVANHSC
          PACK      KEY5,PTAFCSID,SP70
          CALL      RDPTVAD1
          BRANCH    OVRCD,CHKID100
.
CHKID100  MATCH     SP70,PTVANHSC
          IF        !@EQUAL
            MOVE      PTVANHSC,PTAFCSID     * Use HDP if it is entered
          ENDIF
.
          MATCH     "0010",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0011",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0012",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0030",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0050",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0070",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0100",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0110",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0200",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0300",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0311",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0312",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0313",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0314",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0315",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0316",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0317",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0321",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0331",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0332",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0333",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0334",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0341",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0351",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0400",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0500",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0600",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0700",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0800",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0900",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0910",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0920",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0930",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0940",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0950",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0960",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0970",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0980",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0990",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "8880",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0710",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0031",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          MATCH     "0032",PTAFCSID
          GOTO      CHKID999 IF EQUAL
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
          PRINT     "Error 419 : Invalid Contract/Spoke Identifier for admission ":
                    "number: ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
CHKID999  RETURN
.******************************************************************************
.*                                  FHUB0000                                  *
.*        Funding arrangement - 2 Hub/Spoke                                   *
.******************************************************************************
FHUB0000  CALL      VFDA0000             * Validating contract details
          MATCH     SP5,PTAFCSID
          IF        @EQUAL
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
            PRINT     "Error 419 : Contract/Spoke ID is mandatory for admission ":
                      "number: ",AADMNO,*N
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
          ENDIF
FHUB9999  RETURN
+
.******************************************************************************
.*                                  FHLT0000                                  *
.*        Funding arrangement - 3 Healthstreams or blank funding arrangement
.******************************************************************************
FHLT0000  CALL      VFDA0000             * Validating contract details
          MATCH     SP5,PTAFCSID
          IF        !@EQUAL
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
            PRINT     "Error 419 : Invalid Contract/Spoke ID for admission number: ":
                      AADMNO,*N
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
          ENDIF
.
FHLT9999  RETURN
+
.******************************************************************************
.*                                  VFDA0000                                  *
.*                     Validate contract                                      *
.******************************************************************************
VFDA0000  MATCH     SP1,PTAFCTYP          * Contract type must be blank
          IF        !@EQUAL
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
            PRINT     "Error 417 : Invalid Contract type for admission number: ":
                      AADMNO,*N
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
          ENDIF
.
          MATCH     SP1,PTAFCROL          * Contract role must be blank
          IF        !@EQUAL
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
            PRINT     "Error 418 : Invalid Contract role for the admission number: ":
                      AADMNO,*N
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
          ENDIF
          CALL      VLEV0000              * Validate leave days
.
VFDA9999  RETURN
+
.******************************************************************************
.*                                  VLEV0000                                  *
.*                     Validate leave days                                    *
.******************************************************************************
VLEV0000  MATCH     "1",PTAFCODE
          GOTO      VLEV2000 IF NOT EQUAL * not a contract funding arrangement
.
          MATCH     ANSB,PTAFCROL          * contract role = B
          GOTO      VLEV2000 IF EQUAL      * contract leavedays must be blank
.
          MATCH     "2",PTAFCTYP           * Type ABA
          GOTO      VLEV9999 IF EQUAL
.
          MATCH     "3",PTAFCTYP           * Type AB
          GOTO      VLEV9999 IF EQUAL
.
          MATCH     "5",PTAFCTYP           * Type BA
          GOTO      VLEV9999 IF EQUAL
.
VLEV2000  MOVE      "00",EPIMDCLD          * Contract leave days (MTD)
          MOVE      "00",EPIYDCLD          * Contract leave days (YTD)
          MOVE      "00",EPITLCLD          * Total Contract leave days
.
VLEV9999  RETURN
+
.******************************************************************************
.*                                  VCLD0000                                  *
.*                        Validate Contract Leave Days                        *
.******************************************************************************
VCLD0000  MATCH     "00",EPITLCLD           * total contract leave days
          GOTO      VCLD9000 IF EQUAL       * no contract leave days, so end
.
          MATCH     SP1,EPICTTYP            * contract type must exist
          GOTO      VCLD9000 IF NOT EQUAL
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error ### : Contract Leave, No Contract ",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
VCLD9000  MOVE      ZERO,EXIT
VCLD9999  RETURN
+
.******************************************************************************
.*                                  VPGR0000              Called by: GAEP0000 *
.*                     Validate Planned Geriatric Respite                     *
.******************************************************************************
VPGR0000  MATCH     SP8,DDATE
          GOTO      VPGR9000 IF EQUAL       * Patient not disch'd
.
          MATCH     DDATE,CHCSED                                   
          GOTO      VPGR9000 IF LESS        * End date < disch date
.
          MATCH     ANSS,EPIATYPE
          GOTO      VPGR9000 IF EQUAL       * Statiscal admission type, exit
.
          MOVE      ZERO,CODCNT
VPGR1000  ADD       ONE,CODCNT
          COMPARE   EIGHT,CODCNT
          GOTO      VPGR9000 IF NOT LESS    * Count >= 8, exit
.
          MOVE      SP3,CKYIDEF3
          LOAD     CKYIDEF3,CODCNT,EPIACST1,EPIACST2,EPIACST3,EPIACST4,EPIACST5:
                                   EPIACST6,EPIACST7
          MATCH     SP3,CKYIDEF3
          GOTO      VPGR9000 IF EQUAL       * Blank account status, exit
.
          MATCH     "MR ",CKYIDEF3
          GOTO      VPGR1000 IF NOT EQUAL   * Not a planned ger res act class
.
          MOVE      EPIATYPE,DIM1
          REP       "C-O-P-",DIM1
          MATCH     "-",DIM1              * end I CAR 42417
          GOTO      VPGR3000 IF EQUAL       * Planned ger res admin type, Ok
          GOTO      VPGR5000
.
VPGR3000  PACK      KEY13,AADMNO,CODCNT,SP20                          *C-240107
          CALL      RSPTECD1                * Position on & read a patient
          CALL      RKPTECD1                  episode disease file record
          BRANCH    OVRCD,VPGR6000
.
          MATCH     AADMNO,PTEDADMN
          GOTO      VPGR6000 IF NOT EQUAL   * Different admin no
.
          COMPARE   CODCNT,PTEDEPNO
          GOTO      VPGR6000 IF NOT EQUAL   * Different episode no
.
          MOVE      SP1,DIM1
          LOAD      DIM1,CODCNT,EPIATYP1,EPIATYP2,EPIATYP3,EPIATYP4,EPIATYP5:
                                EPIATYP6,EPIATYP7
          TYPE      DIM1
          GOTO      VPGR6000 IF NOT EQUAL   * Invalid accom type
.
          MOVE      ZERO,FORM1
          MOVE      DIM1,FORM1
          BRANCH    FORM1,VPGR4000,VPGR4000,VPGR6000,VPGR4000
          GOTO      VPGR6000
.
VPGR4000  COMPARE   TEN,PSAGEDAY
          GOTO      VPGR6000 IF LESS        * Age < 10 days, error
.
          MATCH     ANSO,EPADCRTN         * I CAR 42417
          GOTO      VPGR6000 IF NOT EQUAL * I CAR 42417
.
          MATCH     ANSH,EPIASRCE         * I CAR 42417
          GOTO      VPGR6000 IF NOT EQUAL * I CAR 42417
.
          MATCH     "Z74.2    ",PTEDCODE
          GOTO      VPGR1000 IF EQUAL       * Valid disease code, get next
.
          MATCH     "Z75.5    ",PTEDCODE
          GOTO      VPGR1000 IF EQUAL       * Valid disease code, get next
          GOTO      VPGR6000
.
VPGR5000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 329 : Admission number ",AADMNO," has an invalid planned ":
                    "geriatric respite.  Admission class HDP ",EPIATYPE:
                    " & Account Class ",CKYIDEF3,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      VPGR1000
.
VPGR6000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 329 : Admission number ",AADMNO," has an invalid planned ":
                    "geriatric respite combination.  Check Program fund ":
                    "source, Accom type, Age",*N,"Criterion for admin, Admin ":
                    "source & 1st diagnosis",*N
          ADD       THREE,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      VPGR9000
.
VPGR9000  MOVE      ZERO,EXIT
VPGR9999  RETURN
+
.******************************************************************************
.*                                  VRHP0000              Called by: GAEP0000 *
.*                   Validate A Reciprocal Healthcare Patient                 *
.******************************************************************************
VRHP0000  MATCH     SP8,DDATE
          GOTO      VRHP9000 IF EQUAL       * Patient not disch'd
.
          MATCH     DDATE,CHCSED                                   
          GOTO      VRHP9000 IF LESS        * End date < disch date
.
          MOVE      ZERO,FORM2
VRHP1000  ADD       ONE,FORM2
          COMPARE   EIGHT,FORM2
          GOTO      VRHP9000 IF NOT LESS    * Count >= 8, exit
.
          MOVE      SP3,KEY3
          LOAD      CKYIDEF3,FORM2,EPIACST1,EPIACST2,EPIACST3,EPIACST4,EPIACST5:
                                   EPIACST6,EPIACST7
.
          MATCH     SP3,CKYIDEF3
          GOTO      VRHP9000 IF EQUAL       * Blank account status, exit
.
          MATCH     "MA ",KEY3
          GOTO      VRHP1000 IF NOT EQUAL   * Not a reciprocal health care pat
.
          MATCH     "8888",EPIPOST                                     *C-90216
          GOTO      VRHP1000 IF EQUAL       * Overseas patient
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 391 : Admission number ",AADMNO," has a reciprocal ":
                    "health care agreement & not an overseas postcode",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
VRHP9000  MOVE      ZERO,EXIT
VRHP9999  RETURN
+
.******************************************************************************
.*                                  VNBN0000              Called by: GAEP0000 *
.*                             Validate A Newborn                             *
.******************************************************************************
VNBN0000  COMPARE   TEN,PSAGEDAY
          GOTO      VNBN9000 IF NOT LESS    * age must be < 10 days
          CALL      GMOTH000                * get mothers UR
.
          MOVE      ZERO,FORM2
VNBN1000  ADD       ONE,FORM2
          COMPARE   EIGHT,FORM2
          GOTO      VNBN9000 IF NOT LESS    * Count >= 8, exit
.
          MOVE      SP3,KEY3
          LOAD      CKYIDEF3,FORM2,EPIACST1,EPIACST2,EPIACST3,EPIACST4,EPIACST5:
                                   EPIACST6,EPIACST7
.
          MATCH     SP3,CKYIDEF3
          GOTO      VNBN9000 IF EQUAL       * Blank account status, exit
.
          MATCH     "NT ",KEY3
          GOTO      VNBN1000 IF NOT EQUAL   * not transferred/unqualified
.
          MATCH     "U ",EPISCTYP                                      *C-49016
          GOTO      VNBN5000 IF NOT EQUAL   * not unqualified newborn
.
          MATCH     "U",EPADCRTN
          GOTO      VNBN5000 IF NOT EQUAL   * not unqualified newborn
.
          MATCH     "Y",EPIATYPE
          GOTO      VNBN5000 IF NOT EQUAL   * not newborn
.
          MATCH     "T",EPIASRCE
          GOTO      VNBN5000 IF NOT EQUAL   * not a transfer
.
          MOVE      SP3,KEY3
          LOAD      CKYIDEF3,FORM2,EPIATYP1,EPIATYP2,EPIATYP3,EPIATYP4,EPIATYP5:
                                   EPIATYP6,EPIATYP7
.
          MATCH     "B  ",KEY3
          GOTO      VNBN5000 IF NOT EQUAL   * not other nursery/mother's bedside
.
          GOTO      VNBN1000
.
VNBN5000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error ### : Inconsistent Newborn (Transferred/Unqualified) ":
                    "Data ",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
VNBN9000  MOVE      ZERO,EXIT
VNBN9999  RETURN
+
.******************************************************************************
.*                                  GMOTH000              Called by: VNBN0000 *
.*                             Get Mothers UR                                 *
.******************************************************************************
GMOTH000  PACK      KEY5,ANSS,SP1,ASRCE
          CALL      RDCODE1
          BRANCH    OVRCD,GMOTH999
.
          MATCH     SP4,THCSCOD
          GOTO      GMOTH999 IF EQUAL
.
          UNPACK    THCSCOD,DIM1,DIM1A,DIM2
          MATCH     SP1,DIM1A
          IF        !@EQUAL
            MATCH     "Y",DIM1A
            GOTO      GMOTH999 IF NOT EQUAL  * Use the 2nd position of HDP Eq
          ELSE
            MATCH     "Y",DIM1
            GOTO      GMOTH999 IF NOT EQUAL
          ENDIF
.
          PACK      KEY16,AURNO,SP70
          CALL      RDSLINK1
GMOTH100  CALL      RDKLINK1
          BRANCH    OVRCD,GMOTH900
.
          MATCH     AURNO,LINKFUR
          GOTO      GMOTH900 IF NOT EQUAL
.
          PACK      KEY5,ANSL,ANSU,LINKREA,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,GMOTH100
.
          MATCH     ANSM,TCINDC1
          GOTO      GMOTH100 IF NOT EQUAL
.
          PACK      EPMOTHUR,SP2,LINKTUR,SP70
          REP       " 0",EPMOTHUR
          GOTO      GMOTH999
.
GMOTH900  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 653 : Mothers UR and Admission Source Mismatch ",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
.
GMOTH999  RETURN
+
.******************************************************************************
.*                                  PTSB0000              Called by: GCEP0000 *
.*                          Get The Postcode & Suburb                         *
.******************************************************************************
PTSB0000  MOVE      PPOST,KEY4
          MATCH     "1000",KEY4
          GOTO      PTSB6000 IF EQUAL       * No fixed abode
.
          MATCH     "9988",KEY4
          GOTO      PTSB6000 IF EQUAL       * Unknown postcode
.
          MATCH     "8888",KEY4
          IF        @EQUAL
            MOVE      KEY4,EPIPOST          * Postcode
            MOVE      PSUBRB,EPISUBRB       * Suburb
            GOTO      PTSB9000
          ENDIF
.
          MOVE      ZERO,FORM1
PTSB1000  PACK      KEY45,SP70
          ADD       ONE,FORM1
          LOAD      KEY45,FORM1,PADD2,PSUBRB,PADD2,PSUBRB
          PACK      KEY45,KEY45,SP70
.
          IF        FORM1 = 1 | FORM1 = 2
            REP       UPPLOW,KEY45          * Uppercase
          ENDIF
.
          PACK      KEY56,PPOST,KEY45,PADD4,SP70                      *C-240184
          CALL      RDIBPOS1                * Read a postcode file record
          COMPARE   ONE,OVRCD
          GOTO      PTSB4000 IF NOT EQUAL   * Valid record, continue
.
          PACK      KEY56,PPOST,SP70                                  *C-240184
          CALL      RSIBPOS1                * Position on & read a postcode
          CALL      RKIBPOS1                  file record
          BRANCH    OVRCD,PTSB7000
.
          MATCH     PPOST,IBPOPCOD
          GOTO      PTSB7000 IF NOT EQUAL   * Invalid postcode, error
.
          MOVE      IBPOSUBR,KEY22          * Save the 1st suburb for postcode
          MOVE      IBPOSTAT,KEY3           * save 1st suburb's state  *I-49016
          MATCH     SP70,KEY45
          GOTO      PTSB5000 IF EQUAL       * Blank suburb
          GOTO      PTSB3000
.
PTSB2000  CALL      RKIBPOS1                * Read a postcode file record
          BRANCH    OVRCD,PTSB5000
.
          MATCH     PPOST,IBPOPCOD
          GOTO      PTSB5000 IF NOT EQUAL   * Different postcode
.
PTSB3000  IF        FORM1 = 2 | FORM1 = 4
            STRIP     KEY45
          ENDIF
          MATCH     KEY45,IBPOSUBR
          GOTO      PTSB2000 IF NOT EQUAL   * Different suburb
.
PTSB4000  MOVE      PPOST,EPIPOST                                      *C-90216
          MOVE      IBPOSUBR,EPISUBRB       * Suburb
          MATCH     "OS ",IBPOSTAT        * check if OverSeas        *I-49016
          GOTO      PTSB9000 IF NOT EQUAL                            *I-49016
          MOVE      "8888",EPIPOST        * set Overseas code        *I-49016
          PACK      EPISUBRB,IBPOPCOD,SP30  * set Country code       *I-51411
          GOTO      PTSB9000
.
PTSB5000  COMPARE   TWO,FORM1
          GOTO      PTSB1000 IF LESS        * Counter < 2, get next suburb
.
          MOVE      PPOST,EPIPOST           * Postcode                *C-c20917
          MOVE      KEY22,EPISUBRB          * Suburb - 1st suburb for postcode
.
          MATCH     "OS ",KEY3            * check if OverSeas        *I-49016
          GOTO      PTSB9000 IF NOT EQUAL                            *I-49016
.
          COMPARE   FOUR,FORM1              * Counter < 4, get next add2/suburb
          GOTO      PTSB1000 IF LESS        * no uppercase for OS
.
          MOVE      "8888",EPIPOST        * set Overseas code        *I-49016
          PACK      EPISUBRB,PPOST,SP30  * set Country code       *I-51411
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 058 : Invalid Postcode/Locality ",PPOST:
                    " for admission number ":
                    AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      PTSB9000                * error no match postcode & suburb
.
.         MOVE      PPOST,KEY4
.         MOVE      KEY4,EPIPOST            * Postcode
.         MOVE      KEY22,EPISUBRB          * Suburb - 1st suburb for postcode
.         GOTO      PTSB9000
.
PTSB6000  MOVE      KEY4,EPIPOST            * Postcode
          MOVE      SP30,EPISUBRB           * Suburb - blank
          GOTO      PTSB9000
.
PTSB7000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 058 : Invalid Postcode/Locality ",PPOST:
                    " for admission number ":
                    AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
PTSB9000  MOVE      ZERO,EXIT
          REP       " 0",EPIPOST                                       *I-90216
PTSB9999  RETURN
+
.******************************************************************************
.*                                 CHKC0000                                   *
.*    check criterion for admission & admission source   Called by : CRTN0000 *
.******************************************************************************
CHKC0000  MATCH     "U",EPADCRTN
          GOTO      CHKC1000 IF NOT EQUAL
.
          MATCH     "Y",EPIASRCE
          GOTO      CHKC9000 IF EQUAL
.
          MATCH     "T",EPIASRCE
          GOTO      CHKC9000 IF EQUAL
.
          MATCH     "H",EPIASRCE
          GOTO      CHKC7000 IF NOT EQUAL
.
CHKC1000  MATCH     "N",EPADCRTN
          GOTO      CHKC2000 IF NOT EQUAL                              *C-55430
.
          TYPE      EPIASRCE
          GOTO      CHKC7000 IF EQUAL
.
          MOVE      EPIASRCE,DIM1
          REP       "Y1T2H3",DIM1           * CAR 42343
          TYPE      DIM1
          GOTO      CHKC7000 IF NOT EQUAL
          GOTO      CHKC9000
.
.******************************************** Start of addition        *I-55430
CHKC2000  MATCH     "E",EPADCRTN
          GOTO      CHKC3000 IF NOT EQUAL
.
          CALL      CTBH0000                    * get the "bed hours"
          COMPARE   FOUR,TOTBEDHR
          GOTO      CHKC9000 IF NOT LESS
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Warning 553 : Type E Criteria for Admission, LOS < 4 ":
                    "Hours for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG
.
          GOTO      CHKC9000
.
CHKC3000  MATCH     "O",EPADCRTN
          GOTO      CHKC9000 IF NOT EQUAL
.
          MATCH     "1",EPIINLOS            * is stay "intended same day"
          GOTO      CHKC9000 IF NOT EQUAL
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 308 : Admission Criteria O but intended same day ":
                    "for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          MOVE      ONE,PTERRFLG
          ADD       ONE,NUMERROR
.
          GOTO      CHKC9000
.********************************************   End of addition        *I-55430
.
.
.
CHKC7000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.          
          PRINT     "Error 072 : Invalid criterion for admission '",EPADCRTN,"' for ":
                    "admission source '",EPIASRCE,"' for admission number ":
                    AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
CHKC9000  MOVE      ZERO,EXIT
CHKC9999  RETURN
+
.******************************************************************************
.*                                 CRTN0000                                   *
.*    Pri. Episode Record - get Criterion for Admission  Called by : GAEP0000 *
.******************************************************************************
CRTN0000  COMPARE   NINE,PTCNCRTN
          GOTO      CRTN8000 IF NOT LESS     * If > 8
.
          COMPARE   ONE,PTCNCRTN
          GOTO      CRTN8000 IF LESS         * If < 1
.
          UNPACK    SP5,TCODE,ACODE
          LOAD      TCODE,PTCNCRTN,CATU1,CATU2,CATU3,CATU4,CATU5:
                                   CATU6,CATU7,CATVB
          LOAD      ACODE,PTCNCRTN,AUSR1,AUSR2,AUSR3,AUSR4,AUSR5:
                                   AUSR6,AUSR7,PMVXCADM
          MATCH     ACODE,SP3
          GOTO      CRTN1000 IF EQUAL
.
CRTN0500  COMPARE   TWO,TOTNONHT
          GOTO      CRTN1000 IF LESS         * Use Actual Adm. Dets if 1st Epis
.
          BRANCH    EPISODNO,CRTN1000        * 1st Episode Dets from Admn file
.
. ------- Must Be on the new files then - if > 1 non nht episodes
          PACK      KEY10,AADMNO,EPISODNO
          CALL      RDPTECA1
          BRANCH    OVRCD,CRTN5000
.
          MOVE      PTEACRIT,ACODE
          
CRTN1000  PACK      KEY5,TCODE,ACODE
          CALL      RDCODE1
          BRANCH    OVRCD,CRTN9000           * Not on file
.          
. ------- Must be Alpha  
          MOVE      THCSCOD,DIM1
          MOVE      THCSCOD,ANS 
          TYPE      ANS 
          GOTO      CRTN9000 IF EQUAL
.
. ------- If 1 set to one else stays at 2 - Can KEN remove this comment
          REP       "B1C2N3O4U5S6E7K8X9",ANS
          TYPE      ANS
          GOTO      CRTN9000 IF NOT EQUAL
.
          MATCH     "N",DIM1
          GOTO      CRTN1500 IF EQUAL        * Newborn
.
          MATCH     "U",DIM1
          GOTO      CRTN2000 IF NOT EQUAL    * Not Newborn
.
CRTN1500  COMPARE   ZERO,NEWBORN
          GOTO      CRTN7000 IF EQUAL        * newborn status but not newborn
          GOTO      CRTN3000
.
CRTN2000  COMPARE   ONE,NEWBORN
          GOTO      CRTN6000 IF EQUAL        * newborn but not newborn status
.
CRTN3000  MOVE      DIM1,EPADCRTN            * Valid Criterion
          CALL      CHKC0000                 * Criterion for admission
          GOTO      CRTN9999
.
CRTN5000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error ### : Episode Admission/Discharge Details File does not ":
                    "have record for admission number ",AADMNO," and episode ":
                    "number ",EPISODNO
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      CRTN9999
.
. ------- Invalid Age for Criterion 
CRTN6000  COMPARE   "2",EPISODNO
          GOTO      CRTN9999 IF NOT LESS        * don't redisplay same error
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 074 : Invalid age for criterion at start of episode ":
                    EPISODNO," for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      CRTN9999
.
. ------- Invalid Criterion for Age
.
CRTN7000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 074 : Invalid criterion for age at episode ",EPISODNO:
                    " for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      CRTN9999
.
. ------- Invalid Codes File Entry for criterion for admission
.
CRTN8000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 072 : Invalid codes file entry ",PTCNCRTN," for ":
                    "criterion for admission",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      CRTN9999
.
. ------- Invalid User Value stored in User Defined Field
.
CRTN9000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 072 : Invalid HDP equivalent for criterion for admission":
                    " ",ACODE," for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
CRTN9999  RETURN
.******************************************************************************
.*                                  SEPN0000                                  *
.*        Pri. Episode Record - get Separation Time      called by : GAEP0000 *
.******************************************************************************
SEPN0000  UNPACK    SP30,EPISTIME,EPISDATE,EPISREFL,EPICAVAL
          MATCH     "99999999",CCHGDATE
          GOTO      SEPN1000 IF EQUAL
.
          UNPACK    CCHGDATE,CCENT,CYEAR,CMON,CDAY * Get Date for E1 record
          PACK      EPISDATE,CDAY,CMON,CCENT,CYEAR
          PACK      SEPISDAT,CCENT,CYEAR,CMON,CDAY
.
          UNPACK    CHTIME,DIM2A,DIM1,DIM2B
          PACK      EPISTIME,DIM2A,DIM2B     * Change of Care type date
          GOTO      SEPN2000
.
SEPN1000  MATCH     SP8,DDATE
          GOTO      SEPN9000 IF EQUAL
.
          MATCH     DDATE,PRS2END            
          GOTO      SEPN9000 IF LESS         * Cannot be beyond period
.
          UNPACK    DTIME,CHOUR,DIM1,CMIN
          PACK      EPISTIME,CHOUR,CMIN
.
SEPN2000  TYPE      EPISTIME
          GOTO      SEPN8000 IF NOT EQUAL    * Must Be Numeric
.
          MOVE      EPISTIME,FORM4
          COMPARE   "2400",FORM4
          IF        @EQUAL
            MOVE      "0000",EPISTIME
          ENDIF
          GOTO      SEPN8000 IF NOT LESS     * If Time>24:00 - error
          MATCH     "0000",EPISTIME
          GOTO      SEPN8000 IF LESS         * Invalid Time
          GOTO      SEPN3000 IF EQUAL        * Cannot be 0000 save as 0001
          GOTO      SEPN9000                 * Valid Time
.
SEPN3000  MOVE      "0001",EPISTIME
          GOTO      SEPN9000                 * Valid Separation Time
.
. ------- Invalid Discharge Time
.
SEPN8000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 114 : Invalid discharge time for admission number ":
                    AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
SEPN9000  MOVE      ZERO,EXIT
SEPN9999  RETURN
+
.**********************************************************************
.  RMBL - Remove trailing and leading blanks          Called By lots
.        Requires - STRING   (input string)
.        Returns  - STRING   (output string without blanks)
.**********************************************************************
.
.---- remove trailing blanks ----
.
RMBL0000  PACK      STRING,STRING,SP70      * Ensure string filled to end
          ENDSET    STRING                  * Move form ptr to end of string
.
RMBL1000  CMATCH    SP1,STRING              * Quit loop if char pointed to by
          GOTO      RMBL2000 IF NOT EQUAL   *    form pointer is blank
.
          BUMP      STRING,-1               * Decrement form pointer
          GOTO      RMBL1000 IF NOT EOS     * Quit loop if form ptr = 1
.
          SETLPTR   STRING,ZERO             * Set form and length pointers to 0
          GOTO      RMBL9000                *    since we are at start of string
.                                           *    and exit routine
.
RMBL2000  LENSET    STRING                  * Set length pointer to form pointer
          RESET     STRING                  * Set form pointer to one
.
.---- remove leading blanks ----
.
RMBL3000  CMATCH    SP1,STRING              * Quit loop if char pointed to by
          GOTO      RMBL9000 IF NOT EQUAL   *    form pointer is blank
.
          BUMP      STRING,1                * Increment form pointer
          GOTO      RMBL3000 IF NOT EOS     * Quit loop if form ptr = eos
.
          SETLPTR   STRING,ZERO             * Set form and length pointers to 0
          GOTO      RMBL9000                *    since we are at start of string
.                                           *    and exit routine
RMBL9000  MOVE      ZERO,EXIT
RMBL9999  RETURN
+
.******************************************************************************
.*                                  GCOB0000              Called by: GCEP0000 *
.*                            Get Country of Birth                            *
.******************************************************************************
GCOB0000  MATCH     SP3,PCONT
          GOTO      GCOB1000 IF EQUAL       * Blank COB, use default
.
          CALL      GNCB0000
          GOTO      GCOB9999
.
GCOB1000  MOVE      "0003",EPNEWCOB         * Default COB - Not stated
          GOTO      GCOB9000
.
GCOB9000  MOVE      ZERO,EXIT
GCOB9999  RETURN
+
.******************************************************************************
.*                                  GNCB0000              Called by: GCOB0000 *
.*                 Get New Country of Birth (after 01/07/2007)                *
.******************************************************************************
GNCB0000  PACK      KEY5,ANSC,SP1,PCONT,SP70
          CALL      RDCODE1                 * Read a codes file record
          BRANCH    OVRCD,GNCB8000
.
          MATCH     SP4,PTCDNHCP
          GOTO      GNCB2000 IF NOT EQUAL   * Not a blank HCP equivalent
.
GNCB1000  MOVE      "0003",EPNEWCOB         * Default COB - Not stated
          GOTO      GNCB9000
.
GNCB2000  MOVE      PTCDNHCP,EPNEWCOB       * COB
.
          MATCH     "0000",PTCDNHCP
          GOTO      GNCB2100 IF EQUAL
.
          TYPE      PTCDNHCP
          GOTO      GNCB8000 IF NOT EQUAL   * Non numeric COB
.
          MOVE      ZERO,FORM4
          MOVE      PTCDNHCP,FORM4
          IF        FORM4<0 | FORM4>9299
            GOTO      GNCB8000              * Error
          ENDIF
.
GNCB2100  MATCH     ADATE,PBDATE
          IF        @EQUAL
            IF        FORM4<1100 | FORM4>1199
              GOTO      GNCB8100              * Error 
            ENDIF
          ENDIF
.
          IF        FORM4=1
            GOTO      GNCB8200              * Warning
          ENDIF
.
          IF        FORM4>1599 & FORM4<1608
            GOTO      GNCB8200              * Warning
          ENDIF
.
          IF        FORM4=3103
            GOTO      GNCB8200              * Warning
          ENDIF
.
          MOVE      EPABRGNL,FORM1
          IF        FORM1<4
            IF        FORM4<1100 | FORM4>1199
              GOTO      GNCB8300              * Error
            ENDIF
          ENDIF
.
          GOTO      GNCB9000
.
GNCB8000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 036 : Invalid HCP equivalent for country of birth ":
                    PCONT," for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      GNCB9000
.
GNCB8100  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Warning 069 : Newborn From Overseas ",PCONT:
                    " for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG 
          GOTO      GNCB9000
.
GNCB8200  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Warning 228 : Unusual Birth Place ",PCONT:
                    " for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG
          GOTO      GNCB9000
.
GNCB8300  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.         
          PRINT     "Warning 234 : Aboriginal/Ts Islander But Not Aust Born":
                    PCONT," for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG
          GOTO      GNCB9000
.
GNCB9000  MOVE      ZERO,EXIT
GNCB9999  RETURN
+
.******************************************************************************
.*                                  ATYP0000                                  *
.*        Pri. Episode Record - get Admission Type       called by : GAEP0000 *
.******************************************************************************
ATYP0000  BRANCH    EPISODNO,ATYP1000
          MOVE      ANSS,EPIATYPE
          GOTO      ATYP9999
.
.         The admission class may be blank but this is ok as we set up the
.         codes file with a blank code and set the HDP to X.
.
ATYP1000  PACK      KEY5,ANSP,SP1,ACLSS
ATYP2000  CALL      RDCODE1
.
          MOVE      "X",EPIATYPE                 * yes
          MATCH     SP4,THCSCOD                  * blank HDP Equiv ?
          IF        @EQUAL | OVRCD=1
            GOTO      ATYP9999
          ENDIF
.
          CMOVE     THCSCOD,EPIATYPE
.
          MOVE      EPIATYPE,DIM1
          TYPE      DIM1
          GOTO      ATYP6000 IF EQUAL
.
          IF        PTCN1ATS=1
            REP       "M1I2R3O4X5P5G6Y7Z8S9Q9W9L9C9K9",DIM1
            TYPE      DIM1
            GOTO      ATYP6000 IF NOT EQUAL * Invalid HDP Equivalent
.
            MOVE      DIM1,FORM1
            BRANCH    FORM1,ATYP4500,ATYP5000,ATYP5800,ATYP5800,ATYP5800:
                            ATYP5800,ATYP5500,ATYP5800,ATYP9999
          ELSE
            REP       "M1I2R3O4X5P5G6Y7Z8Q9W9L9C9K9",DIM1
            TYPE      DIM1
            GOTO      ATYP6000 IF NOT EQUAL * Invalid HDP Equivalent
.
            MOVE      DIM1,FORM1
            BRANCH    FORM1,ATYP4500,ATYP5000,ATYP5800,ATYP5800,ATYP5800:
                            ATYP5800,ATYP5500,ATYP5800,ATYP9999
          ENDIF
.
.         for HDP Equiv "M" patient must be a female bet. the ages 11 to 60 yrs
.
ATYP4500  BRANCH    EPISEX,ATYP7000         * 1 = Male
.
          COMPARE   TEN1,PSAGE
          GOTO      ATYP7000 IF LESS
.
          COMPARE   PSAGE,SIXTY5
          GOTO      ATYP7000 IF LESS
.
          GOTO      ATYP5800                * check age at admission
.
.         for HDP Equiv "I" patient must be greater than 11 years
.
ATYP5000  COMPARE   TEN2,PSAGE
          GOTO      ATYP8000 IF LESS
          GOTO      ATYP5800                * check age at admission
.
.--------- HDP Equiv "Y" ----------------------------------------- 
.
ATYP5500  COMPARE   ONE,NEWBORN             * is it a new born?
          GOTO      ATYP8200 IF NOT EQUAL   * No
          GOTO      ATYP9999
.
.-------- Not HDP Equiv "Y" (ie. Not Newborn - so check age at admission)
.
ATYP5800  GOTO      ATYP9999
.
ATYP6000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 052 : Invalid HDP equivalent for admission class ",ACLSS:
                    " (PRS2 admission type) for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      ATYP9999
.
ATYP7000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 057 : Patient, with admission type ",EPIATYPE,", must ":
                    "be female between 11 & 65 years old for admission ":
                    "number ",AADMNO,*N
.
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      ATYP9999
.
ATYP8000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 057 : Patient, with admission type '",EPIATYPE,"', must ":
                    "be > 11 years old for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      ATYP9999
.
ATYP8200  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 219 : Patient, with admission type ",EPIATYPE,", is ":
                    "not a newborn (age at admission < 10 days) for admission ":
                    "number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      ATYP9999
.
ATYP9000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error ### : Patient admission type for episodes greater than 1":
                    " not coded for admission number ",AADMNO," - on new file ":
                    "patecaaf.",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      ATYP9999
.
ATYP9999  RETURN
.******************************************************************************
.*                                  CASR0000                                  *
.*        Pri. Episode Record - get Transfer Source      called by : GAEP0000 *
.******************************************************************************
CASR0000  
.
. ----- Check that Admission Source = T -----
.
          MOVE      EPIASRCE,DIM1
          TYPE      DIM1
          GOTO      CASR9999 IF EQUAL       * Leave transfer source code blank
.
          REP       "T1",DIM1
          TYPE      DIM1
          GOTO      CASR9999 IF NOT EQUAL   * Leave transfer source code blank
.
          PACK      KEY8,AADMNO
          CALL      RDPTDAD1                * Read transfer source file
          BRANCH    OVRCD,CASR9000
.
          MATCH     SP5,PTDAADTS
          GOTO      CASR8000 IF EQUAL       * Blank transfer source code, error
.
          UNPACK    PTDAADTS,KEY3,KEY2
          MATCH     SP2,KEY2
          GOTO      CASR7000 IF EQUAL       * Not a 4 char transfer source code
.
          PACK      KEY5,PTDAADTS,SP70
          CALL      RDPTVAD1
          IF        OVRCD=1
            GOTO      CASR9000
          ENDIF
          MATCH     SP70,PTVANHSC
          IF        !@EQUAL
            MOVE      PTVANHSC,EPITSRCE     * Valid transfer source
          ELSE
            MOVE      PTVACODE,EPITSRCE     * Valid transfer source
          ENDIF
          GOTO      CASR9999
.
. ----- Transfer source code not a 3 char code or not a 4 char code -----
.
CASR7000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 042 : Admission transfer source should be a 4 character ":
                    "code for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      CASR9999
.
. ----- Transfer source code is blank -----
.
CASR8000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 042 : Admission transfer source is blank for admission ":
                    "number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      CASR9999
.
. ----- Transfer source code doesnt exist -----
.
CASR9000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 042 : Admission Transfer Source does not exist for ":
                    "Admission Number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
CASR9999  RETURN
+
.******************************************************************************
.*                                  QUAL0000                                  *
.* Setup Qualification for the episode.                  called by: SSEG0000  *
.******************************************************************************
QUAL0000  MOVE      SP5,QUALSTAT               * initialize Transfer Source
          PACK      KEY5,ANSA,SP1,TATYPE
          CALL      RDCODE1
          BRANCH    OVRCD,QUAL6000
.    
          MOVE      "X",QUALSTAT
          MATCH     SP4,THCSCOD
          GOTO      QUAL0500 IF EQUAL
.
          CMATCH    ANSA,THCSCOD
          GOTO      QUAL0500 IF EQUAL
.
          CMATCH    ANSP,THCSCOD
          GOTO      QUAL0500 IF EQUAL
.
          CMATCH    ANSC,THCSCOD
          GOTO      QUAL0500 IF EQUAL
.
          CMATCH    ANSS,THCSCOD
          GOTO      QUAL0500 IF EQUAL
.
          CMATCH    ANSR,THCSCOD             * I CAR 43158
          GOTO      QUAL0500 IF EQUAL
.
          CMATCH    ANSE,THCSCOD           * end I CAR 43158
          GOTO      QUAL0500 IF EQUAL
.
          CMATCH    ANSB,THCSCOD
          GOTO      QUAL0500 IF EQUAL
.
          CMATCH    ANSH,THCSCOD
          GOTO      QUAL0500 IF EQUAL
.
          CMOVE     THCSCOD,QUALSTAT
.
QUAL0500
.
. ------- If a newborn, then Qualification Status must be N or U
.
          MATCH     ANSN,QUALSTAT
          IF        @EQUAL
            COMPARE   ZERO,NEWBORN
            GOTO      QUAL7000 IF EQUAL 
          ENDIF
.
          MATCH     ANSU,QUALSTAT
          IF        @EQUAL
            COMPARE   ZERO,NEWBORN
            GOTO      QUAL7000 IF EQUAL 
          ENDIF
.
. ----- If qualification status is an X but they are are newborn then set ----
. -----    it automatically to 'N' as this gets around s problem with     ----
. -----     setting up correct account  statuses for newborns             ----
. ----- If admission type was entered incorrectly then other checks will  ----
. -----    pick it up                                                     ----
.
          MATCH     ANSX,QUALSTAT
          IF        @EQUAL
            IF        NEWBORN = 1
              MOVE      ANSN,QUALSTAT
            ENDIF
          ENDIF
.
. ------- If Admission Type is newborn, then Qualification must be N or U
.
          MATCH     ANSY,EPIATYPE
          IF        @EQUAL
            MATCH     ANSN,QUALSTAT
            IF        !@EQUAL
              MATCH     ANSU,QUALSTAT
              GOTO      QUAL7600 IF NOT EQUAL 
            ENDIF
          ENDIF
.
. ------- If Qualification is newborn, then Admission Source must be Y,T,C or Z
.
          MATCH     ANSN,QUALSTAT
          GOTO      QUAL1000 IF EQUAL
.
          MATCH     ANSU,QUALSTAT
          GOTO      QUAL9999 IF NOT EQUAL
.
          MOVE      EPIASRCE,DIM1           * if U, adm. source must be Y or T
          TYPE      DIM1
          GOTO      QUAL8000 IF EQUAL
.
          REP       "Y1T2H3",DIM1         * I CAR 45888
          TYPE      DIM1
          GOTO      QUAL8000 IF NOT EQUAL
          GOTO      QUAL9999
.
QUAL1000  MOVE      EPIASRCE,DIM1
          TYPE      DIM1
          GOTO      QUAL8000 IF EQUAL
....  CAR 41320
          REP       "T1Y2H3S4",DIM1
          TYPE      DIM1
          GOTO      QUAL8000 IF NOT EQUAL
.
          GOTO    QUAL9999
.
QUAL6000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 098 : Invalid HDP equivalent for qualification status ":
                    TATYPE," for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      QUAL9999
.
QUAL7000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Warning 243 : Invalid qualification status ",QUALSTAT,", not a ":
                    "newborn (age at admission < 10 days) for admission ":
                    "number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG
          GOTO      QUAL9999
.
QUAL7600  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 241 : Invalid qualification status '",QUALSTAT,"', for ":
                    "newborn admission type 'Y' for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      QUAL9999
.
QUAL8000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 223 : Invalid qualification status ",QUALSTAT,", for ":
                    " admission source '",EPIASRCE,"', for admission number ":
                    AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      QUAL9999
.
QUAL9999  RETURN
.******************************************************************************
.*                                  ASCE0000                                  *
.* Episode Rec-get Admissn Source for 1st Episode        called by: GCEP0000  *
.******************************************************************************
ASCE0000  MOVE      SP5,PTDAADTS            
          MOVE      SP5,EPITSRCE                 * initialize Transfer Source
          PACK      KEY5,ANSS,SP1,ASRCE
          CALL      RDCODE1
          BRANCH    OVRCD,ASCE8000
.    
          MOVE      "Z",EPIASRCE
          MATCH     SP4,THCSCOD
          GOTO      ASCE0500 IF EQUAL
.
          UNPACK    THCSCOD,DIM1,DIM1A,DIM2
          MATCH     SP1,DIM1A
          IF        !@EQUAL
            MOVE      DIM1A,EPIASRCE        * Use the 2nd position of HDP Eq
          ELSE
            MOVE      DIM1,EPIASRCE         * Use the 1st position of HDP Eq
          ENDIF
.
ASCE0500  CALL      ASAT0000         
          CALL      CASR0000                    * get transfer srce if needed
          GOTO      ASCE9999                    * everything is OK  (valid)
.
ASCE8000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 041 : Invalid HDP equivalent for admission source ",ASRCE:
                    " for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      ASCE9999
.
ASCE8200  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 221 : Invalid admission source '",EPIASRCE,"', not a ":
                    "newborn (age at admission < 10 days) for admission ":
                    "number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      ASCE9999
.
ASCE8400  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 221 : Invalid admission source ",EPIASRCE,", for a ":
                    "newborn (age at admission < 10 days) for admission ":
                    "number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      ASCE9999
.
ASCE9000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 056 : Invalid admission source ",EPIASRCE," with ":
                    "admission type ",EPIATYPE," for admission number ":
                    AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
ASCE9999  RETURN
+
.******************************************************************************
.*                                  GNLN0000                                  *
.* Get New Preferred Language and Interpreter Required   called by: LANG0000  *
.******************************************************************************
GNLN0000  PACK      KEY5,ANSL,ANSA,PMVXLNG1,SP70
          CALL      RDCODE1
          IF        OVRCD=0
            PACK      EPILANG4,PTCDNHCP,SP70  * Preferred Language
          ENDIF
.
          PACK      EPIINTRQ,PMVXINTR,SP70  * Interpreter Required
          REP       "02 9",EPIINTRQ
.
          MATCH     SP70,EPILANG4
          GOTO      GNLN0500 IF NOT EQUAL
.
          COMPARE   ZERO,PTCNHOSP
          GOTO      GNLN9999 IF EQUAL       * Not mandatory for private hosp
.
          GOTO      GNLN9200
.
GNLN0500  MATCH     "0002",EPILANG4
          GOTO      GNLN9300 IF EQUAL
.
          MATCH     "0000",EPILANG4
          GOTO      GNLN9999 IF EQUAL
.
          MATCH     "9000",EPILANG4
          GOTO      GNLN9999 IF EQUAL
.
          TYPE      EPILANG4
          GOTO      GNLN9200 IF NOT EQUAL   * Non numeric Language
.
          MOVE      ZERO,FORM4
          MOVE      EPILANG4,FORM4
          IF        FORM4<1101 | FORM4>9799
            GOTO      GNLN9200              * Error
          ENDIF
.
          MOVE      EPABRGNL,FORM1          * aboriginal?
          IF        FORM1>3
            GOTO      GNLN0700
          ENDIF
.
          IF        FORM4>7999 & FORM4<9000
            GOTO      GNLN0700              * Valid  
          ENDIF
          IF        FORM4=1201
            GOTO      GNLN0700              * Valid  
          ENDIF
          IF        FORM4=9601
            GOTO      GNLN0700              * Valid  
          ENDIF
          IF        FORM4>9699 & FORM4<9800
            GOTO      GNLN0700              * Valid  
          ENDIF
          GOTO      GNLN9100
.           
GNLN0700  PACK      EPIINTRQ,PMVXINTR,SP70  * Interpreter Required
          REP       "02 9",EPIINTRQ
.
          MATCH     "1",EPIINTRQ            * Interpreter Required
          GOTO      GNLN1000 IF NOT EQUAL
.
          MATCH     "1201",EPILANG4         * English
          GOTO      GNLN9000 IF EQUAL
.
GNLN1000  MATCH     "2",EPIINTRQ            * Interpreter Not Required
          GOTO      GNLN1100 IF NOT EQUAL
.
          MATCH     "0001",EPILANG4   
          GOTO      GNLN1100 IF EQUAL
.
          MATCH     "0003",EPILANG4   
          GOTO      GNLN1100 IF EQUAL
.
          MOVE      EPILANG4,FORM4
          IF        FORM4>1000 & FORM4<9799
            GOTO      GNLN1100
          ENDIF
          GOTO      GNLN9000 IF EQUAL
.
GNLN1100  MATCH     "9",EPIINTRQ            * Interpreter Not Stated
          GOTO      GNLN1200 IF NOT EQUAL
.
          MATCH     "0002",EPILANG4         * Not specified
          GOTO      GNLN1200 IF EQUAL
.
          MATCH     "0000",EPILANG4         * Not specified
          GOTO      GNLN9000 IF NOT EQUAL
.
GNLN1200  GOTO      GNLN9999
.
GNLN9000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 592 : Invalid Comb Int Req/Pref Lang ",*N
          ADD       TWO,CLNO
          MOVE      ONE,PTERRFLG
          ADD       ONE,NUMERROR
          GOTO      GNLN9999
.
GNLN9100  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Warning 513 : ATSI Identification but Lang not ":
                    "English or Aboriginal ",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG
          GOTO      GNLN9999
.
GNLN9200  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 511 : Invalid Preferred Language ",*N
          ADD       TWO,CLNO
          MOVE      ONE,PTERRFLG
          ADD       ONE,NUMERROR
          GOTO      GNLN9999
.
GNLN9300  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "514 : Warning : Language is Unspecified ",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG
.
          MATCH     "9",EPIINTRQ
          GOTO      GNLN9999 IF EQUAL
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "515 : Warning: Lang Not Stated must = Interpreter ":
                    "Required Not Stated",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG
          GOTO      GNLN9999
.
GNLN9999  RETURN
+
.******************************************************************************
.*                                  LINS0000                                  *
.*        Pri. Episode Record - get hospital ins status   called by : GAEP0000 *
.******************************************************************************
LINS0000  MATCH     SP4,AFNDTB
          GOTO      LINS1000 IF NOT EQUAL
          MOVE      "4",EPILINSR             * Default to no hosp insurance
.
          GOTO      LINS9999
.
LINS1000  PACK      KEY14,AFUNDH,AFNDTB,SP70
          CALL      RDFUND1
          IF        OVRCD=1
            MOVE      PFUNDH,AFUNDH
            MOVE      PFNDTB,AFNDTB
            PACK      KEY14,AFUNDH,AFNDTB,SP70
            CALL      RDFUND1
            BRANCH    OVRCD,LINS2000
          ENDIF
.
          MATCH     SP4,HFHDPE
          GOTO      LINS2000 IF EQUAL
.
          UNPACK    HFHDPE,DIM1A,DIM1,DIM1B
          MOVE      DIM1B,DIM1
          TYPE      DIM1
          GOTO      LINS2100 IF NOT EQUAL
          MOVE      DIM1,EPILINSR
.
. ------  check if HDP Equivalent is equal to 2, 4 or 9
.
          BRANCH    EPILINSR,LINS2100,LINS9999,LINS2100,LINS9999,LINS2100:
                             LINS2100,LINS2100,LINS2100,LINS9999
.
LINS2000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 264 : Invalid Hospital Insurance Fund ":
                    AFNDTB," for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      LINS9999
.
LINS2100  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 044 : Invalid Level of Insurance Code ":
                    " for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      LINS9999
.
LINS9999  RETURN
+
.******************************************************************************
.*                                  LEAV0000              Called by: GAEP0000 *
.*                        Episode Record - Get Leave Days                     *
.******************************************************************************
LEAV0000  MOVE      ZERO,EPILVTOT           * Clear total leave days
          MOVE      ZERO,EPILVYTD           * Clear YTD leave days
          MOVE      ZERO,EPILVMTD           * Clear MTD leave days
.
          MOVE      ZERO,TOTCTLDY           * Clear total contract leave days
          MOVE      ZERO,YTDCTLDY           * Clear YTD contract leave days
          MOVE      ZERO,MTDCTLDY           * Clear MTD contract leave days
.
.******************************************** Start of addition        *I-49016
          MOVE      SP3,EPILWPTL           * Clear total leave w/o perm. days
          MOVE      SP3,EPILWPYD           * Clear YTD leave w/o permiss. days
          MOVE      SP2,EPILWPMD           * Clear MTD leave w/o permiss. days
.********************************************   End of addition        *I-49016
.
. ----- Total leave days -----
.
          MOVE      ZERO,NBRDAYS
          MOVE      EPIADATE,FROMDATE       * Start date
          MOVE      EPLUS1,TODATE           * End date + 1 day
          MATCH     EPLUS1,CCHGDATE         * Check if discharged
          IF        @LESS
            MOVE      CCHGDATE,TODATE       * No, use end of period
          ENDIF
.
          PACK      CDYSFDTE,FROMDATE       * Set up from date
          PACK      CDYSTDTE,TODATE         * Set up to date
          CALL      CALCU000                * Calculate total days in hospital
          CALL      ADJT0000                * Adjust day total for discharge
          MOVE      NBRDAYS,LDAYS           * Total days in hospital at moment
.
          CALL      PRS2DAYS                * Calculate total leave days
          CALL      ADJT0000                * Adjust day total for discharge
          SUB       NBRDAYS,LDAYS           * Total leave days
          MOVE      LDAYS,EPILVTOT
.
          COMPARE   ZERO,LDAYS
          GOTO      LEAV8000 IF LESS
.....     GOTO      LEAV9000 IF EQUAL
.
          CALL      PRS2LWOP              * Calc. total leave w/o perm. days
          IF        NBRDAYS>0
            MOVE      NBRDAYS,DIM5
            UNPACK    DIM5,DIM2,EPILWPTL
            REP       " 0",EPILWPTL
          ENDIF
.                                           * re-calc Total leave days to be
.                                           * Total leave with permiss. days
. * removed 3 lines below for Task 0881510
. * restored 3 lines below for Task 1913482
.
          IF        NBRDAYS>0
            MOVE      EPILVTOT,LDAYS
            SUB       NBRDAYS,LDAYS
            MOVE      LDAYS,EPILVTOT
          ENDIF
.
          IF        EPILVTOT < ZERO
            MOVE     ZERO,EPILVTOT          * Don't allow negative value
          ENDIF
.
          CALL      PRS2CLDY                * Calculate contract leave days
          MOVE      NBRDAYS,TOTCTLDY        * Total contract leave days
          MOVE      TOTCTLDY,EPITLCLD
          REP       " 0",EPITLCLD
.
.                                           * re-calc Total leave days to be
.                                           * Total leave with contract days
.....     MOVE      EPILVTOT,LDAYS
.....     SUB       NBRDAYS,LDAYS
.....     MOVE      LDAYS,EPILVTOT
.
. ----- YTD leave days -----
.
          MOVE      ZERO,NBRDAYS
          MATCH     SFINYEAR,EPIADATE       * Check if current financial year
          IF        @LESS
            MOVE      SFINYEAR,FROMDATE     * No, use start of financial year
          ENDIF
.
          PACK      CDYSFDTE,FROMDATE       * Set up from date
          PACK      CDYSTDTE,TODATE         * Set up to date
          CALL      CALCU000                * Calculate YTD days in hospital
          CALL      ADJT0000                * Adjust day total for discharge
          MOVE      NBRDAYS,LDAYS           * YTD days in hospital at moment
.
          CALL      PRS2DAYS                * Calculate YTD leave days
          CALL      ADJT0000                * Adjust day total for discharge
          SUB       NBRDAYS,LDAYS           * YTD leave days
          MOVE      LDAYS,EPILVYTD
.
          COMPARE   ZERO,LDAYS
          GOTO      LEAV8000 IF LESS
.
          CALL      PRS2LWOP              * Calc. total leave w/o perm. days
          IF        NBRDAYS>0
            MOVE      NBRDAYS,DIM5
            UNPACK    DIM5,DIM2,EPILWPYD
            REP       " 0",EPILWPYD
.
          ENDIF
.                                           * re-calc YTD leave days to be
.                                           * YTD leave with permiss. days
          IF        NBRDAYS>0
            MOVE      EPILVYTD,LDAYS
            SUB       NBRDAYS,LDAYS
            MOVE      LDAYS,EPILVYTD
          ENDIF
.
          IF        EPILVYTD < ZERO
            MOVE     ZERO,EPILVYTD          * Don't allow negative value
          ENDIF
.
          CALL      PRS2CLDY                * Calculate contract leave days
          MOVE      NBRDAYS,YTDCTLDY        * YTD contract leave days
          MOVE      YTDCTLDY,EPIYDCLD
          REP       " 0",EPIYDCLD
.
.....     MOVE      EPILVYTD,LDAYS
.....     SUB       NBRDAYS,LDAYS
.....     MOVE      LDAYS,EPILVYTD
.
.
. ----- MTD leave days -----
.
          MOVE      ZERO,NBRDAYS
          MATCH     SOFMONTH,EPIADATE       * Check if current month
          IF        @LESS
            MOVE      SOFMONTH,FROMDATE     * No, use start month
          ENDIF
.
          PACK      CDYSFDTE,FROMDATE       * Set up from date
          PACK      CDYSTDTE,TODATE         * Set up to date
          CALL      CALCU000                * Calculate MTD days in hospital
          MOVE      NBRDAYS,LDAYS           * MTD days in hospital at moment
.
          CALL      PRS2DAYS                * Calculate MTD leave days
          SUB       NBRDAYS,LDAYS           * MTD leave days
          MOVE      LDAYS,EPILVMTD
.
          COMPARE   ZERO,LDAYS
          GOTO      LEAV8000 IF LESS
.
          CALL      PRS2LWOP              * Calc. total leave w/o perm. days
          IF        NBRDAYS>0
            MOVE      NBRDAYS,DIM5
            UNPACK    DIM5,DIM3,EPILWPMD
            REP       " 0",EPILWPMD
          ENDIF
.                                           * re-calc MTD leave days to be
.                                           * MTD leave with permiss. days
          IF        NBRDAYS>0
            MOVE      EPILVMTD,LDAYS
            SUB       NBRDAYS,LDAYS
            MOVE      LDAYS,EPILVMTD
          ENDIF
.
          IF        EPILVMTD < ZERO
            MOVE     ZERO,EPILVMTD          * Don't allow negative value
          ENDIF
.
          CALL      PRS2CLDY                * Calculate contract leave days
          MOVE      NBRDAYS,MTDCTLDY        * MTD contract leave days
          MOVE      MTDCTLDY,EPIMDCLD
          REP       " 0",EPIMDCLD
.
...       MOVE      EPILVMTD,LDAYS
...       SUB       NBRDAYS,LDAYS
...       MOVE      LDAYS,EPILVMTD
.
          GOTO      LEAV9000
.
. ----- Leave errors -----
.
LEAV8000  MOVE      ZERO,LDAYS
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
....      PRINT     "Error ### : Leave days seems to exceed total days for ":
....                "admission number ",AADMNO,*N
....      ADD       TWO,CLNO
....      ADD       ONE,NUMERROR
....      MOVE      ONE,PTERRFLG
.
          PRINT     "### : Warning: Leave days seems to exceed total days ":
                    "for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG
.
LEAV9000  MOVE      ZERO,EXIT
LEAV9999  RETURN
+
.******************************************************************************
.*                                  ADJT0000              Called by: LEAV0000 *
.*                   Adjust Total Days Etc For Discharges Etc                 *
.******************************************************************************
ADJT0000  MATCH     TODATE,DDATE
          IF        @EQUAL
            MATCH     ADATE,DDATE
            IF        !@EQUAL
.             SUB       ONE,NBRDAYS         * Dont include disch day but allow
.                                             for day cases
            ENDIF
          ENDIF
ADJT9999  RETURN
.
.******************************************************************************
.*                                  SSEG0000                                  *
.*     Pri. Episode Record - get Status Segment(s)       called by : GAEP0000 *
.******************************************************************************
. STEP 1. Get Closest Transfer Record before Statistical Admission Date
. STEP 2. Store Particulars of Transfer Record & Get current Account Status
. STEP 3. READKS PATTRNFD
. STEP 4. Check to see if ovrcd, same admission# or if account Status has 
.         changed. If any of these have happened - determine the end of 
.         the status segment and call stsg0000 to store the data
. STEP 5. Return if no more transfer data. Otherwise update New values to old 
.         values and Goto Step 3.
.
SSEG0000  MOVE      EPIADATE,PRS2STRT
.
          MOVE      SP70,SAVKEY9
          MOVE      CCHGDATE,PRS2END
          MATCH     CCHGDATE,CHCSED
          GOTO      SSEG1000 IF NOT LESS 
. 
          MOVE      EPLUS1,PRS2END
.
SSEG1000  MOVE      SP8,SVEDATE             * Last date change in PATTRNFD 
          MOVE      ONE,OCCURCNT            * initialize occurrance count
          MOVE      ZERO,ONLVFLAG           * set leave flag off
          MOVE      ZERO,CHGFLAG            * Initialize change flag
          MOVE      ZERO,DYSPTD
          MOVE      ZERO,DYSMTD
          MOVE      ZERO,DYSYTD
          MOVE      ZERO,DYSALL             * Reset bed days totals
          MOVE      "999",ENDDAY            * Always get last one
          MOVE      SP5,OLDACCST            * clear account status
          MOVE      ZERO,OVRCDFLG           * OVRCD flag- set if we hit 
.
          PACK      KEY30,AADMNO,EPIADATE,Z70
          CALL      RDSTRAN2                * position read PATTRNFD file
          CALL      RDPTRAN2                * read next PATTRNFD record
          BRANCH    OVRCD,SSEG9000          * Must Exist 
.
          MATCH     TADMN,AADMNO            * same Admission Number ?
          GOTO      SSEG9000 IF NOT EQUAL   * none exist
.
          MATCH     TATYPE,STATYPE
          IF        !@EQUAL
            PACK      SAVKEY9,SP70
          ENDIF
          MOVE      TATYPE,STATYPE          * save Adm Type for comparison
          MOVE      EPIADATE,SSGSDATE       * Initial Start Segment Date
.
          CALL      QUAL0000                * Set Up Qualification Status
.
          CALL      GACC0000                * Get the account status
.
          CALL      GACT0000                * Get Accommodation Type
          PACK      ACCSTAT2,XCCTSTAT,ACCMTYPE,QUALSTAT * Current Account Status
          MOVE      ACCSTAT2,ACCSTAT1
.
          CALL      SMDY0000                * Do Same Day Calcs if Same Day Pat.
          BRANCH    EXIT,SSEG9000           * Same Day Patient
.
SSEG2000  CALL      RDKTRAN2                * read next PATTRNFD record
          BRANCH    OVRCD,SSEG4000          * end-of-file
.
          MATCH     TADMN,AADMNO            * same Admission Number 
          GOTO      SSEG4000 IF NOT EQUAL
.
          PACK      KEY30,AADMNO,TDATE,Z70
          CALL      RDSTRAN2
          CALL      RDPTRAN2                * Get last transfer for day
          BRANCH    OVRCD,SSEG4000
.
          MATCH     "L",TMOVE
          GOTO      SSEG2000 IF EQUAL       * Patient on leave, get next
.
          MATCH     PRS2END,TDATE
          GOTO      SSEG4000 IF NOT LESS    * Transfer date >= PRS2 end date
.
. ----- Transfer date < PRS2 end date -----
.
          MATCH     "D",TMOVE
          GOTO      SSEG3000 IF EQUAL       * Patient discharged
.
          CALL      QUAL0000                * Set Up Qualification Status
.
          CALL      GACC0000                * Get the account status
          CALL      GACT0000                * Get Accommodation Type
          PACK      ACCSTAT2,XCCTSTAT,ACCMTYPE,QUALSTAT * Current Account Status
.
          MATCH     ACCSTAT1,ACCSTAT2
          GOTO      SSEG2000 IF EQUAL       * Same account status
.
          MOVE      TDATE,SSGEDATE          * Current end Status Segment
          PACK      KEY30SAV,TADMN,TDATE,TTIME,TWARD,TBED
          CALL      STSG0000                * Do a Status Segment
          MOVE      KEY30SAV,KEY30
          CALL      RDTRAN2                 * Reposition where at before SSEG
.
          MOVE      TATYPE,STATYPE
          MOVE      SSGEDATE,SSGSDATE       * Reset Next Status Segment Date
          MOVE      ACCSTAT2,ACCSTAT1
          GOTO      SSEG2000
.
SSEG3000  MOVE      TDATE,SSGEDATE
          GOTO      SSEG5000
.
. ----- Transfer date >= PRS2 end date -----
.
SSEG4000  MOVE      PRS2END,SSGEDATE
.
SSEG5000  CALL      STSG0000                * Do a Status Segment
          MOVE      ACCTSTAT,PRS2IACC
          MOVE      CHDATE,CKYIDEF8
          MOVE      CCHGDATE,CHDATE
          CALL      PRS2CLAS                * Calculate Category
          MOVE      CKYIDEF8,CHDATE
.
SSEG9000  MOVE      ZERO,EXIT
SSEG9999  RETURN
+
.******************************************************************************
.*                                 GUSP0000              Called by:  SSEG0000 * 
.*         Get/validate Admission/Discharge HDP Unit/Specialty code           *
.******************************************************************************
GUSP0000  PACK      KEY30,AADMNO,ADATE,ATIME,SP20
          CALL      RDSTRAN2                * Positional Read on  Admission
GUSP1000  CALL      RDKTRAN2                * Read the next PATTRNFD record
          BRANCH    OVRCD,GUSP9000          * No more data was found
.
          MATCH     TADMN,AADMNO            * Same Admission Number?
          GOTO      GUSP9000 IF NOT EQUAL   * No , Finished
          MATCH     TDATE,PRS2END
          GOTO      GUSP9000 IF LESS        * Xfer Date > PRS2 end
.
          MATCH     ANSA,TMOVE
          GOTO      GUSP1200 IF EQUAL       * Get Admission Unit
          MATCH     ANSD,TMOVE
          GOTO      GUSP1200 IF EQUAL       * Get Discharge Unit
          GOTO      GUSP1000                * Read Next Transfer
.
GUSP1200  MOVE      SP4,THCSCOD             * Default to blank spaces
          MATCH     SP70,TDEPT
          GOTO      GUSP5000 IF EQUAL       * No Department Unit Code
.
          PACK      KEY5,ANSA,ANSC,TDEPT
          CALL      RDCODE1
          BRANCH    OVRCD,GUSP5000          * AC Category not found
.
          MATCH     SP4,THCSCOD
          GOTO      GUSP7000 IF EQUAL       * Error, No HDP code       
.
. Check if 4th character of HDP code is a space
          MOVE      THCSCOD,DIM3
          PACK      DIM4,DIM3,SP1
          MATCH     DIM4,THCSCOD
          GOTO      GUSP1300 IF EQUAL       * Validate this code pattern
.
. Check pattern format AAAA (Where A means A-Z)
          MOVE      THCSCOD,DIM4
          REP       " 9",DIM4
          REP       "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z ",DIM4
          MATCH     SP4,DIM4
          GOTO      GUSP7000 IF NOT EQUAL   * Invalid HDP code pattern       
          GOTO      GUSP6000                * valid HDP code found
.
. Check Pattern of AAAspace (Where A means A-Z)
GUSP1300  REP       " 9",DIM3
          REP       "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z ",DIM3
          MATCH     SP3,DIM3
          GOTO      GUSP7000 IF NOT EQUAL   * Invalid HDP code pattern       
          GOTO      GUSP6000                * valid HDP code found
.
. Is blank Unit/Specialty code mandatory?
GUSP5000  CMATCH    ANSA,TMOVE
          GOTO      GUSP7000 IF EQUAL       * Mandatory Admitting Unit
          MATCH     SP8,DDATE
          GOTO      GUSP7000 IF EQUAL       * Mandatory if Discharged
          GOTO      GUSP1000                * Okay, Not Mandatory
.
. Assign Uniti/Specialty value
GUSP6000  MATCH     ANSA,TMOVE
          GOTO      GUSP6500 IF EQUAL
          MATCH     ANSD,TMOVE
          GOTO      GUSP6600 IF EQUAL
          GOTO      GUSP6900
.
GUSP6500  MOVE      THCSCOD,EPISAUNT        * Admission Unit
          GOTO      GUSP6900
GUSP6600  MOVE      THCSCOD,EPISDUNT        * Discharge Unit
          GOTO      GUSP6900
GUSP6900  GOTO      GUSP1000                * Next Transfer
.
. 715 or 716 Error Messages
GUSP7000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          CMATCH    ANSA,TMOVE              * Admitting Unit
          GOTO      GUSP7500 IF EQUAL
          CMATCH    ANSD,TMOVE              * Discharge Unit
          GOTO      GUSP7600 IF EQUAL
          GOTO      GUSP7900
.
GUSP7500  PRINT     "Error 715 : Invalid admitting Unit/Specialty"
          GOTO      GUSP7800
.
GUSP7600  PRINT     "Error 716 : Invalid discharge Unit/Specialty"
          GOTO      GUSP7800
.
GUSP7800  ADD       TWO,CLNO
          MOVE      ONE,PTERRFLG
          ADD       ONE,NUMERROR
GUSP7900  GOTO      GUSP6000                * Extract anyway
.
GUSP9000  MOVE      ZERO,EXIT
GUSP9999  RETURN
+
.******************************************************************************
.*                                  SMDY0000                                  *
.*        If Same Day Patient Add 1 Day to all           called by : SSEG0000 *
.******************************************************************************
SMDY0000  MOVE      FALSE,EXIT
          BRANCH    NOSAMDAY,SMDY9999        * If Not Same Day Patient
.
          BRANCH    ROYFLAG,SMDY0500,SMDY0500,SMDY0500
.
          MATCH     EPIADATE,CHCSED
          GOTO      SMDY1000 IF LESS         * If Admitted > End of Period 
.
          MATCH     SOFMONTH,EPIADATE
          GOTO      SMDY1000 IF LESS         * If Admitted < Start of Month  
.
SMDY0500  MOVE      "1",ABDYSPTD             * Dates in period
          MOVE      "1",ABDYSMTD
          MOVE      "1",ABDYSYTD
          MOVE      "1",ABDYSALL
          GOTO      SMDY2000
.
SMDY1000  MOVE      "0",ABDYSPTD             * Dates not in period
          MOVE      "0",ABDYSMTD
          MOVE      "1",ABDYSYTD
          MOVE      "1",ABDYSALL
.
SMDY2000  UNPACK    ACCSTAT1,ACCTSTAT,ACCMTYPE,QUALSTAT
          MOVE      "1",OCCURCNT
          CALL      UTBD0000                 * Update Trailer Variables
          CALL      UBDV0000                 * Store Trailer Variables
          MOVE      ONE,EXIT
.
SMDY9999  RETURN
+
.******************************************************************************
.*                                  RCHC0000                                  *
.*        Pri. Episode Record - read PATCHCFD file       called by : SSEG0000 *
.******************************************************************************
RCHC0000  MOVE      ZERO,EXIT
          MOVE      ZERO,FOUNDCHC
          MOVE      FALSE,CHGCAR94           * no chg of care type in episode
.
          MOVE      ENDCHCDT,CAREDATE        * starting date for new episode
          MOVE      NEXTCARE,CARECLSS        * next care class
          CALL      GCTY0000                 * get care type
          MOVE      CURCTYPE,CARETYPE        * initial care type for episode
.
RCHC1000  CALL      RDKCHCO1                 * read next PATCHCFD record
          BRANCH    OVRCD,RCHC6000           * end-of-file
.
          MATCH     AADMNO,CHADMN            * same Admission Number ?
          GOTO      RCHC6000 IF NOT EQUAL    * no
.
.         Only read changed in care class categories (CC)
.
          MATCH     "CC",CHCATG                   
          GOTO      RCHC6000 IF NOT EQUAL
.
          MATCH     CHDATE,ADATE
          GOTO      RCHC1000 IF EQUAL        * ignore changes on admission date
          MATCH     CHDATE,ENDCHCDT
          GOTO      RCHC1000 IF EQUAL        * ignore additional changes on day
.          
          CALL      LCHC0000                 * Make sure last of same HDP eq
          IF        EXIT=0
            UNPACK    CHDATE,ENDCHCDT        * set next Care Class ending date
            MOVE      CHTIME,ENDCHCTM        * set next Care Class ending time
            GOTO      RCHC1000
          ENDIF
.
          MOVE      CHTIME,CTIMEIS           * save change time
.
          MOVE      ENDCHCDT,CCHGDATE        * get Code Change date
          MOVE      ENDCHCTM,CHTIME          * get Code Change time
.
          MOVE      CHCODE,NEXTCARE          * set next Care Class
          UNPACK    CHDATE,ENDCHCDT          * set next Care Class ending date
          MOVE      CTIMEIS,ENDCHCTM         * set next Care Class ending time
.
RCHC3000  MOVE      ZERO,CCHGFLAG        * set Code change flag to more records
          MOVE      ONE,CHGFLAG              * Code change flag
.
          CALL      GSPR0000                 * Get Start PRS2 Date
          CALL      GEPR0000                 * Get End PRS2 Date
.
          CALL      GSTY0000                 * Get Separation Type
          GOTO      RCHC9000                 * Got next ... return
.
RCHC6000  COMPARE   TRUE,LASTEPIS
          GOTO      RCHC9500 IF EQUAL        * Already Got Not Dschrged Data
.
          MOVE      ACARE,CHCODE
          PACK      CHDATE,DDATE             * set to discharge date
          MATCH     SP8,DDATE                * is patient discharged ?
          IF        @EQUAL
            MOVE      "99999999",CHDATE        * no.
          ENDIF
          CALL      LCHC0000                 * Make sure last of same HDP eq
          IF        EXIT=1
            MOVE      ENDCHCDT,CCHGDATE      * get Code Change date
            MOVE      ENDCHCTM,CHTIME        * get Code Change time
            MOVE      ACARE,NEXTCARE         * set next Care Class
            MATCH     SP8,DDATE
            IF        @EQUAL
              MOVE      "99999999",ENDCHCDT
            ELSE
              MOVE      DDATE,ENDCHCDT
              MOVE      DTIME,ENDCHCTM
            ENDIF
            GOTO      RCHC3000
          ENDIF
.
          MOVE      TRUE,LASTEPIS            * Must be Last Episode
          MOVE      ACARE,CARECLSS           * set work Care Class
          MOVE      ONE,CCHGFLAG             * set Code Change flag to no
          MATCH     SP8,DDATE   
          GOTO      RCHC8000 IF EQUAL        * Not Discharged Yet
.
          MOVE      DDATE,CCHGDATE           * Make Discharge Date last change
          MOVE      DTIME,CHTIME             * Make Discharge Date last change
          CALL      GSPR0000                 * Get Start PRS2 Date
          CALL      GEPR0000                 * Get End PRS2 Date
          GOTO      RCHC9000 
.
RCHC8000  MOVE      "99999999",CCHGDATE      * Not yet discharged
          CALL      GSPR0000                 * Get Start PRS2 Date
          CALL      GEPR0000                 * Get End PRS2 Date
.
RCHC9000  MOVE      ZERO,EXIT
          GOTO      RCHC9999   
.
RCHC9500  MOVE      ONE,EXIT                * End of the Episode Road
RCHC9999  RETURN
.******************************************************************************
.*                                  SCAR0000                                  *
.*        Get the initial care type for this admission   called by : GAEP0000 *
.******************************************************************************
SCAR0000  MOVE      "0 ",CARETYPE                                      *C-49016
          MOVE      SP3,CARECLSS
          MOVE      EPIADATE,ENDCHCDT        * end of last episode
          MOVE      SP8,ENDCHCTM
.
. ------- Get First Care Class Change
          PACK      KEY24,AADMNO,SP20        * From Start of Period
          CALL      RDSCHCO1                 * read next PATCHCFD record
SCAR1000  CALL      RDKCHCO1                 * read next PATCHCFD record
          BRANCH    OVRCD,SCAR7000           * end-of-file
.
          MATCH     AADMNO,CHADMN
          GOTO      SCAR7000 IF NOT EQUAL
.
.         Only read changed in care class categories (CC)
.
          MATCH     "CC",CHCATG                   
          GOTO      SCAR7000 IF NOT EQUAL
.
          MOVE      CHCODE,CARECLSS
          MOVE      CHCODE,NEXTCARE
          MATCH     CHDATE,ADATE           * ignore changes on admission date
          GOTO      SCAR1000 IF EQUAL
          GOTO      SCAR8000
.
SCAR7000  MOVE      ACARE,CARECLSS
          MOVE      ACARE,NEXTCARE
.
SCAR8000  MOVE      ADATE,CAREDATE           * care type as at admission
          CALL      GCTY0000                 * get the care type
          MOVE      CURCTYPE,CARETYPE
.
SCAR9999  RETURN
.******************************************************************************
.*                                  GSPR0000                                  *
.*        Get Start PRS2 Date                            called by : RCHC0000 *
.******************************************************************************
GSPR0000  MOVE      CHCSST,PRS2STRT
          MATCH     EPIADATE,CHCSST
          GOTO      GSPR9999 IF NOT LESS
.
          MOVE      EPIADATE,PRS2STRT        * The Latter date
.
GSPR9999  RETURN
.******************************************************************************
.*                                  GEPR0000                                  *
.*        Get End   PRS2 Date                            called by : RCHC0000 *
.******************************************************************************
GEPR0000  MATCH     "99999999",CCHGDATE
          GOTO      GEPR1000 IF EQUAL
.
          MOVE      CCHGDATE,PRS2END
          MATCH     CCHGDATE,CHCSED
          GOTO      GEPR9999 IF NOT LESS
.
GEPR1000  MOVE      CHCSED,PRS2END           * Not Discharged - EOP = PRS2END
          GOTO      GEPR9999
.
GEPR9999  RETURN
.******************************************************************************
.*                                  LCHC0000                                  *
.*        Get Last HDP which Hasn't Changed              called by : RCHC0000 *
.******************************************************************************
LCHC0000  MOVE      CARECLSS,SAVECLSS       * Save current care class code
          MOVE      ENDCHCDT,CAREDATE       * Starting date for new episode
          MOVE      CHCODE,CARECLSS
          CALL      GCTY0000
          MOVE      SAVECLSS,CARECLSS       * Restore current care class code
.
.....          MATCH     CURCTYPE,CARETYPE
.....          GOTO      LCHC9500 IF NOT EQUAL   * Different care type
          MATCH     CURCTYPE,CARETYPE
          GOTO      LCHC9000 IF EQUAL       * Same care type, exit
.
          MATCH     "U ",CARETYPE                                      *C-49016
          GOTO      LCHC9500 IF NOT EQUAL   * Prev care type isnt unqualified
.
          MATCH     "4 ",CURCTYPE                                      *C-49016
          GOTO      LCHC9500 IF NOT EQUAL   * Current care type isnt qualified
.
          MOVE      CURCTYPE,CARETYPE       * Change the unqual C/T to qual
.
LCHC9000  MOVE      ZERO,EXIT
          GOTO      LCHC9999
.
LCHC9500  MOVE      ONE,EXIT
LCHC9999  RETURN
.******************************************************************************
.*                                  GSTY0000                                  *
.*        Get Separation Type for current Episode        called by : RCHC0000 *
.******************************************************************************
GSTY0000  MOVE      FALSE,EXIT
          BRANCH    LASTEPIS,GSTY9999        * Only do below if stat'l Sep Type
.
          MATCH     CCHGDATE,CHCSED          * If End Episode > End of Period
          GOTO      GSTY9999 IF LESS
.
. ------  Next Type of Care  ------
.
GSTY3000  MOVE      CARECLSS,SAVECLSS        * save original care class code
          MOVE      NEXTCARE,CARECLSS        * parameter for GCTY0000
          MOVE      PRS2END,CAREDATE         * end of episode, start of new
          CALL      GCTY0000                 * get new care type
          MOVE      SAVECLSS,CARECLSS        * restore original care class code
.
. ------- Calculate Separation Type - If same check if 1st Episode
.
GSTY6000  MOVE      " ",EPISTYPE
.                                           * separation type = new care type
....      MOVE      CURCTYPE,EPISTYPE                                   D-49016
          UNPACK    CURCTYPE,EPISTYPE,DIM1A                            *I-49016
.
.                                           * post 01/07/2003   I CAR 44935
          MOVE      EPISTYPE,DIM1
          REP       "F-E-1-2-6-7-8-5-9-3-4-",DIM1
          MATCH     "-",DIM1
          IF      @EQUAL
            MOVE    "S",EPISTYPE
          ENDIF
.                                           * end I CAR 44935
GSTY9999  RETURN
+
.******************************************************************************
.*                                  GSID0000              Called by: GAEP0000 *
.*                                 Get Site ID                     & GDGR0000 *
.******************************************************************************
GSID0000  MOVE      "0",SITEID              * Site id - default to 0
          READ      CONTROLF,HUND09;*239,PTCNHHDP
          PACK      NEWSITID,PTCNHHDP,SP70
          COMPARE   ONE,IBCNMHOS
          GOTO      GSID9000 IF NOT EQUAL   * Not using multi hospitals
.
          PACK      KEY30,AADMNO,Z70
          CALL      RDSTRAN2                * Position on & read a transfer
          CALL      RDPTRAN2                  file record
          BRANCH    OVRCD,GSID9000
.
          MATCH     AADMNO,TADMN
          GOTO      GSID9000 IF NOT EQUAL   * Different admission no
.
          PACK      KEY6,TWARD,TBED
          CALL      RDWARD1                 * Read a ward file record
          BRANCH    OVRCD,GSID9000
.
          PACK      KEY3,PTWDHOSN
          CALL      RDPTHSP1                * Read a hospital file record
          BRANCH    OVRCD,GSID9000
.
          UNPACK    PTHSHSNO,KEY1,SITEID    * Site id
          UNPACK    PTHSHDPC,NEWSITID       * New 4 character Site id
.
GSID9000  MOVE      ZERO,EXIT
GSID9999  RETURN
.******************************************************************************
.*                                  GTEP0000                                  *
.*        Pri. Episode Record - read PATCHCFD file       called by : SSEG0000 *
.******************************************************************************
GTEP0000  MOVE      ZERO,TOTEPIS
          MOVE      ZERO,TOTNHT  
          MOVE      ADATE,EPIADATE
          MOVE      EPIADATE,ENDCHCDT        * end of last episode
          CALL      SCAR0000                 * get starting care type
.
          ADD       "1",TOTEPIS              * first episode
          CALL      CNNH0000                 * Check if NON NHT  Type Episode
.
. ------- Get First Care Class Change
          PACK      KEY24,AADMNO,SP20        * From Start of Period
          CALL      RDSCHCO1                 * read next PATCHCFD record
GTEP1000  CALL      RDKCHCO1                 * read next PATCHCFD record
          BRANCH    OVRCD,GTEP7000           * end-of-file
.
          MATCH     AADMNO,CHADMN            * same Admission Number ?
          GOTO      GTEP7000 IF NOT EQUAL    * no
.
          MATCH     "CC",CHCATG                   
          GOTO      GTEP7000 IF NOT EQUAL    * no
.
          MATCH     CHDATE,ADATE
          GOTO      GTEP1000 IF EQUAL        * ignore changes on admission date
          MATCH     CHDATE,ENDCHCDT
          GOTO      GTEP1000 IF EQUAL        * ignore additional changes on day
.
          MATCH     CHDATE,CHCSED
          GOTO      GTEP8000 IF LESS         * Gone Over End - Last Episode
.
          CALL      LCHC0000                 * Check if Care Types Change
          IF        EXIT=0
            UNPACK    CHDATE,ENDCHCDT        * set next Care Class ending date
            GOTO      GTEP1000
          ENDIF
.
          MOVE      CURCTYPE,CARETYPE        * new care type
.
          UNPACK    CHDATE,ENDCHCDT          * set next Care Class ending date
. 
          ADD       "1",TOTEPIS              * Increment Total Epsiodes
          CALL      CNNH0000                 * Check if NON NHT  Type Episode
.
          MATCH     ENDCHCDT,DDATE
          GOTO      GTEP9000 IF EQUAL        * Check if Actual Discharge
.
          GOTO      GTEP1000                 * Next Care type matches adms.
.
. ------  no more changes of care class code ------
.
GTEP7000  MOVE      ACARE,CHCODE             * From Admission File
          PACK      CHDATE,DDATE
          MATCH     SP8,DDATE
          IF        @EQUAL
            MOVE      "99999999",CHDATE
          ENDIF
.
. ------  check for one last change of care type code ------
.
GTEP8000  CALL      LCHC0000
          IF        EXIT=1
            ADD       ONE,TOTEPIS            * new episode
            MOVE      CURCTYPE,CARETYPE      * new care type
            CALL      CNNH0000               * Check if NON NHT  Type Episode
          ENDIF
.
GTEP9000  MOVE      TOTEPIS,TOTNONHT
          SUB       TOTNHT,TOTNONHT          * Setup Total Non-NHT Episodes
.
GTEP9999  RETURN
.******************************************************************************
.*                                  CNNH0000                                  *
.*      Check if Non Care Type                           called by : RCHC0000 *
.******************************************************************************
CNNH0000  MATCH     "1 ",CARETYPE                                      *C-49016
          GOTO      CNNH9999 IF NOT EQUAL    * Not NHT as not = 1
.
          ADD       "1",TOTNHT
.
CNNH9999  RETURN
+
.******************************************************************************
.*                                  GACT0000                                  *
.*      Pri. Episode Record - Get Accommodation Type     called by : SSEG0000 *
.******************************************************************************
GACT0000  MATCH     "20010701",CCHGDATE
          GOTO      GACT0060 IF NOT LESS    * Change date >= 1/7/2001
.
          PACK      KEY6,TWARD,TBED
          CALL      RDWARD1                 * Read a ward file record
          BRANCH    OVRCD,GACT0010
.
          PACK      KEY5,ANSB,ANST,WEFRBT
          CALL      RDCODE1                 * Read a codes file record
          BRANCH    OVRCD,GACT0010
.
          MATCH     "H",TCINDC1
          IF        @EQUAL
            MOVE      FOUR,ACCMTYPE         * Hospital in the home
            GOTO      GACT9000
          ENDIF
.
          MATCH     "E",TCINDC1
          IF        @EQUAL
            MOVE      SIX,ACCMTYPE          * Emergency department
            GOTO      GACT9000
          ENDIF
.
GACT0010  MATCH     "X",QUALSTAT
          IF        !@EQUAL
            MOVE      FIVE,ACCMTYPE         * Newborn
            GOTO      GACT9000
          ENDIF
.
          MATCH     SP8,DDATE
          GOTO      GACT0020 IF EQUAL       * Not a discharged
.
          MATCH     CCHGDATE,EPIADATE
          GOTO      GACT0020 IF NOT EQUAL   * Not a daycase
.
          MOVE      THREE,ACCMTYPE          * Sameday
          GOTO      GACT9000
.
GACT0020  BRANCH    TCFORM6,GACT0040,GACT0030
          GOTO      GACT0050
.
GACT0030  MOVE      ONE,ACCMTYPE            * Overnight - shared room
          GOTO      GACT9000
.
GACT0040  MOVE      TWO,ACCMTYPE            * Overnight - single room
          GOTO      GACT9000
.
GACT0050  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 084 : Invalid Form 6 field for Bed Type ",WEFRBT,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
          MOVE      ZERO,ACCMTYPE           * Unknown accommodation type
          GOTO      GACT9000
.
GACT0060  MATCH     SP3,TRBTYP
          GOTO      GACT0500 IF EQUAL       * Blank pattranf bed type
.
          PACK      KEY5,ANSB,ANST,TRBTYP
          CALL      RDCODE1                 * Read a codes file record
          BRANCH    OVRCD,GACT0500
.
          MATCH     SP4,THCSCOD
          GOTO      GACT1000 IF NOT EQUAL   * HDP not blank, continue
.
GACT0500  PACK      KEY6,TWARD,TBED
          CALL      RDWARD1                 * Read a ward file record
          BRANCH    OVRCD,GACT3500
.
          PACK      KEY5,ANSB,ANST,WEFRBT
          CALL      RDCODE1                 * Read a codes file record
          BRANCH    OVRCD,GACT3500
.
          MATCH     SP4,THCSCOD
          GOTO      GACT4000 IF EQUAL       * Blank HDP, error
.
GACT1000  CMATCH    ANSP,XCCTSTAT
          GOTO      GACT1200 IF NOT EQUAL
.
GACT1200  MOVE      SP1,KEY1
          MATCH     SP70,TCINDC15
          IF        !@EQUAL
            MOVE      "KUNA",TEMPVAR
            REP       " _",TEMPVAR
            SCAN      TCINDC15,TEMPVAR
            IF        @EQUAL
              PACK      KEY1,TCINDC15
              GOTO      GACT1300
            ENDIF
          ENDIF
.
          UNPACK    THCSCOD,KEY1,DIM1,KEY2
          MATCH     SP1,DIM1
          IF        !@EQUAL
            MOVE      DIM1,KEY1       * Using the 2nd position of the HDP
          ENDIF
.
GACT1300  TYPE      KEY1
          GOTO      GACT2500 IF EQUAL       * Numeric accom type
.
          MOVE      ZERO,FORM1
          MOVE      KEY1,DIM1
.
GACT1400  REP       "R1S1M2B4P5H6K1U3N3A3",DIM1
          MOVE      DIM1,FORM1
          BRANCH    FORM1,GACT3000,GACT3000,GACT1500,GACT2000,GACT3000:
                            GACT3100
.
          GOTO      GACT4500
.
GACT1500  MOVE      KEY1,ACCMTYPE
          MATCH     ANSU,QUALSTAT
          GOTO      GACT5000 IF EQUAL       * Qual st = U & acc type = C, error
.
GACT2000  MOVE      KEY1,ACCMTYPE
          DAYSEP    PBDATE,ADATE,FORM5
.
          MATCH     ANSU,ACCMTYPE   * ICU okay for all (other types baby only)
          GOTO      GACT9000 IF EQUAL
. 
          COMPARE   "365",FORM5                                      *I-60167
          GOTO      GACT5500 IF NOT LESS    * Baby acc > 90/365 days old, error
          GOTO      GACT9000
.
GACT2500  MOVE      ZERO,FORM1
          MOVE      KEY1,FORM1
          BRANCH    FORM1,GACT3000,GACT3000,GACT3000,GACT3000,GACT4500:
                          GACT3000,GACT3000                            *C-49016
.
          GOTO      GACT4500
.
GACT3000  MOVE      KEY1,ACCMTYPE
          DAYSEP    PBDATE,ADATE,FORM5
.
          COMPARE   SEVEN,FORM1
          GOTO      GACT9000 IF NOT EQUAL
.
          MATCH     "4 ",CARETYPE                                      *C-49016
          GOTO      GACT6500 IF NOT EQUAL
.
          GOTO      GACT9000
.
GACT3100  MOVE      KEY1,ACCMTYPE
.
          MATCH     "4 ",CARETYPE
          GOTO      GACT7000 IF NOT EQUAL
.
          GOTO      GACT9000
.
GACT3500  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 084 : Invalid accommodation type for admission ":
                    "number ",AADMNO," in bed ",TWARD,"/",TBED,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      GACT9000
.
GACT4000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 084 : Blank accommodation type for admission ":
                    "number ",AADMNO," in bed ",TWARD,"/",TBED,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      GACT9000
.
GACT4500  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 084 : Invalid accommodation type ",KEY1," for admission ":
                    "number ",AADMNO," in bed ",TWARD,"/",TBED,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      GACT9000
.
GACT5000  BRANCH    DSEGFLAG,GACT9000
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 434 : NICU/SCN Accommodation, But Unqualified ":
                    "Newborn for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      GACT9000
.
GACT5500  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.                                                                      *I-60167
          PRINT     "240 : Warning: Newborn accommodation, but admission ":
                    "number ",AADMNO," is aged over 12 months ",*N
.
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG
          GOTO      GACT9000
.
GACT6000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "431 : Warning: Newborn but not newborn accom type ":
                    ACCMTYPE," for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG
          GOTO      GACT9999
.
GACT6500  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error ### : Acomm Type 7, not Care Type 4 ":
                    "for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          MOVE      ONE,PTERRFLG
          ADD       ONE,NUMERROR
          GOTO      GACT9000
.
GACT7000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 720 : Accomm Type is H, Mental Health and AOD hub Short Stay Unit, but Care Type is not 4, Other care (Acute) ":
                    "including Qualified newborn ",AADMNO,*N
          ADD       TWO,CLNO
          MOVE      ONE,PTERRFLG
          ADD       ONE,NUMERROR
          GOTO      GACT9000
.
GACT9000  MOVE      ZERO,EXIT
GACT9999  RETURN
+
.******************************************************************************
.*                                  GCTY0000                                  *
.*      Pri. Episode Record - Get Care Type              called by : SSEG0000 *
.******************************************************************************
GCTY0000  MATCH     SP3,CARECLSS
          GOTO      GCTY2200 IF EQUAL        * Valid code
.
          PACK      KEY5,ANSC,ANSC,CARECLSS
          CALL      RDCODE1
          BRANCH    OVRCD,GCTY2400
.
          MATCH     SP4,THCSCOD              * blank HDP Equivalent ?
          GOTO      GCTY2300 IF NOT EQUAL    * no
.
GCTY2200  MOVE      "4 ",CURCTYPE            * default Care Type to 4  *C-49016
          GOTO      GCTY9999
.
GCTY2300  UNPACK    THCSCOD,DIM1,DIM1A,DIM2
          MOVE      TCINDC4,SAVPFS          * Save the program fund source
          MOVE      TCINDC5,SAVMHLS         * Save the mental health legal stat
.
          UNPACK    THCSCOD,CARETYP1,CARETYP2,DIM2
.
          MOVE      SP10,EPIMHSWI
          PACK      CURCTYPE,CARETYP1,CARETYPE2  * first 2 posits of HDP Eq
          MOVE      CARETYP1,DIM1
.                                             * check Mental Health Care Types
          MATCH     "MC",CURCTYPE
          GOTO      GCTY9999 IF EQUAL
.
          CMATCH    "5",CARETYP1
          IF        @EQUAL
            MOVE      CARETYP2,DIM1
            REP       "E-T-K-G-S-A-",DIM1
            MATCH     "-",DIM1
            GOTO      GCTY2500 IF NOT EQUAL 
            GOTO      GCTY9999
          ENDIF
.
          REP       "1-P-6-8-9-0-4-U-",DIM1
.
          MATCH     "-",DIM1
          GOTO      GCTY9999 IF EQUAL     * valid Care Types
          GOTO      GCTY2400              * its an error
.
.         invalid HDP Equivalent
.
GCTY2400  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 080 : Invalid HDP equivalent for care class ",CARECLSS:
                    " for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      GCTY9999
.
GCTY2500  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 470 : Invalid HDP equivalent for care type '5x' ",CURCTYPE:
                    " for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      GCTY9999
.
GCTY9999  RETURN
.******************************************************************************
.*                                  STSG0000                                  *
.* Process Status Segment - May generate > 1 depending on length.    SSEG0000 *
.******************************************************************************
STSG0000  UNPACK    ACCSTAT1,ACCTSTAT,ACCMTYPE,QUALSTAT
          MOVE      SSGEDATE,SVSGEDAT
          CALL      ABDY0000                 * Calculate PTD,YTD & All Days
.
          MOVE      ABDYSALL,LEFTALL
          MATCH     "PW ",ACCTSTAT
          IF        @EQUAL
            MOVE      "999",PTASHDAY
            GOTO      STSG1500
          ENDIF
.
          MATCH     "PX ",ACCTSTAT
          IF        @EQUAL
            MOVE      "999",PTASHDAY
            GOTO      STSG1500
          ENDIF
.
          MATCH     "PY ",ACCTSTAT
          IF        @EQUAL
            MOVE      "999",PTASHDAY
            GOTO      STSG1500
          ENDIF
.
          MATCH     SP70,SAVKEY9
          IF        !@EQUAL
            PACK      KEY9,SAVKEY9
            CALL      RDPTACC1
          ELSE
            PACK      KEY9,ACLAIM,STATYPE,SP10
            PACK      CKYIDEF6,ACLAIM,STATYPE
            CALL      RSPTACC1
STSG1000    CALL      RKPTACC1
          ENDIF
.
          PACK      KEY6,PTASCLAM,PTASATYP
          MATCH     CKYIDEF6,KEY6
          GOTO      STSG2000 IF NOT EQUAL    * Not enough Account Status set up
          PACK      SAVKEY9,PTASCLAM,PTASATYP,PTASHDAY,SP70
.
STSG1500  CALL      DCAS0000                 * Day Case/Acc. Record Match
          BRANCH    EXIT,STSG1000,STSG2000   * Not DC & 0, DC & Not 0 PTASHDAY
.
          CALL      UDLV0000                 * Update Days Left Variables
          CALL      SNSE0000                 * Set New Status Segment End Date
          CALL      ABDY0000                 * Calculate PTD,YTD & All Days
          MATCH     "PW ",ACCTSTAT
          IF        !@EQUAL
            MATCH     "PX ",ACCTSTAT
            IF        !@EQUAL
              MATCH     "PY ",ACCTSTAT
              IF        !@EQUAL
                MOVE      PTASACCS,ACCTSTAT   * Default current year acc status
              ENDIF
            ENDIF
          ENDIF
.
          CALL      CHAS0000                 * Check Account Status
          IF        EXIT=1
            MOVE      SVSGEDAT,SSGEDATE      * Restore segment end date
            GOTO      STSG9000
          ENDIF
.
          CALL      UTBD0000                 * Update Bed Day Trailer Variables
          CALL      UBDV0000                 * Update Bed Day Variables
          IF        EXIT=1
            MOVE      SVSGEDAT,SSGEDATE      * Restore segment end date
            GOTO      STSG9000
          ENDIF
.
          BRANCH    DAYCASE,STSG9000         * Daycase Patients
.
          COMPARE   ZERO,LEFTALL
          GOTO      STSG9000 IF EQUAL        * No Days Left
.
          MOVE      SSGEDATE,SSGSDATE        * Update Next Stat Seg Start Date
          GOTO      STSG1000
.
STSG2000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error ### : Insufficient account status data on account status ":
                    "file for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
STSG9000  MOVE      ZERO,EXIT
STSG9999  RETURN
+
.******************************************************************************
.*                                  DCAS0000                                  *
.*  Check - if     Day Case Patient & if PTASHDAY = 0  then OK else Error     *
.*        - if Not Day Case Patient & if PTASHDAY = 0  then Get next else OK  *
.*  RETURN  EXIT = 1 if Get Next   EXIT = 2 If Error & EXIT = 0 If OK         *
.******************************************************************************
DCAS0000  MOVE      FALSE,EXIT
          BRANCH    DAYCASE,DCAS2000         * Daycase Patient
.
. ------- Non Day Case Patient
          COMPARE   "1",PTASHDAY
          GOTO      DCAS8000 IF LESS
.
          GOTO      DCAS9999
.
. ------- Day Case Patient
DCAS2000  COMPARE   "0",PTASHDAY
          GOTO      DCAS9000 IF NOT EQUAL
.
          GOTO      DCAS9999
.          
. ------- Not Day Case and have 0 PTASHDAYs.
DCAS8000  MOVE      "1",EXIT
          GOTO      DCAS9999
.
. ------- Error - No Day Case Record
DCAS9000  MOVE      "2",EXIT
.
DCAS9999  RETURN
.******************************************************************************
.*                                  UDLV0000                                  *
.*  Update Days Left Variables                           called by : STSG0000 *
.******************************************************************************
UDLV0000  BRANCH    DAYCASE,UDLV9999         * DayCase Patient
.
          MOVE      LEFTALL,WORKALL
          COMPARE   WORKALL,PTASHDAY
          GOTO      UDLV1000 IF NOT LESS
.
          COMPARE   "999",PTASHDAY
          GOTO      UDLV1000 IF EQUAL
.
          MOVE      PTASHDAY,WORKALL
.
UDLV1000  MOVE      WORKALL,ABDYSALL         * Current Days for Segment

          SUB       WORKALL,LEFTALL          * Sub Days this Seg. from Days Left
          GOTO      UDLV9999
.
UDLV9999  RETURN
.******************************************************************************
.*                                  SNSE0000                                  *
.*  Set New Status Segment End Date                      called by : STSG0000 *
.******************************************************************************
. ------- Setup End Date for this Segment
SNSE0000  BRANCH    DAYCASE,SNSE9999
.
          UNPACK    SSGSDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
          CALL      DMYCON
          MOVE      JULDAY,FORM3
          ADD       WORKALL,FORM3
          MOVE      FORM3,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
          PACK      SSGEDATE,CC,YY,MM,DD
          REP       " 0",SSGEDATE
.
          COMPARE   LEFTALL,ZERO
          GOTO      SNSE9999 IF NOT EQUAL
.
          MOVE      SVSGEDAT,SSGEDATE        * Saved end date - Last Segment
.
SNSE9999  RETURN
.******************************************************************************
.*                                  UTSN0000                                  *
.*  Update Trailer Separations for Current Segment       called by : STSG0000 *
.******************************************************************************
UTSN0000  MATCH     EPISACST,SP2
          GOTO      UTSN9999 IF EQUAL        * No Separation Details
.
          MATCH     CCHGDATE,CHCSED
          GOTO      UTSN9999 IF LESS         * If Discharged > End of Period 
.
          MATCH     CHCSST,CCHGDATE
          GOTO      UTSN9999 IF LESS         * If Discharged < Start of Month  
.
          MATCH     "U ",CARETYPE                                      *I-49016
          IF        @EQUAL
            IF        PTCNHOSP = 0
              MOVE      TEN,PRS2RACC
            ELSE
              MOVE      TEN1,PRS2RACC
            ENDIF
          ENDIF
.
          ADD       "1",PTPDMSEP             * All Separations
.
          MATCH     CCHGDATE,DDATE
          GOTO      UTSN1000 IF EQUAL
.
          ADD       "1",PTPDMSTS             * Statistical Separations only
.
UTSN1000  BRANCH    PTCNHOSP,UTSN2000        * If Public - Goto utsn2000
.
. ------- Private Hospital
          LOAD      FORM5,PRS2RACC,PTPDMPAS,PTPDMP5S,PTPDMPNS,PTPDMCOS,PTPDMCNS:
                                   PTPDMIES,PTPDMINS,PTPDMHCS,PTPDMPCS,PTPDMUEP
          ADD       "1",FORM5
          STORE     FORM5,PRS2RACC,PTPDMPAS,PTPDMP5S,PTPDMPNS,PTPDMCOS,PTPDMCNS:
                                   PTPDMIES,PTPDMINS,PTPDMHCS,PTPDMPCS,PTPDMUEP
          GOTO      UTSN9999
.
. ------- Public Hospitals
UTSN2000  LOAD      FORM5,PRS2RACC,PTPDMPAS,PTPDMHAS,PTPDMCOS,PTPDMIES,PTPDMH5S:
                                   PTPDMHNS,PTPDMP5S,PTPDMPNS,PTPDMCNS,PTPDMINS:
                                   PTPDMUEP,PTPDMOPS
          ADD       "1",FORM5                * Add to Appropriate Sep'n Count
          STORE     FORM5,PRS2RACC,PTPDMPAS,PTPDMHAS,PTPDMCOS,PTPDMIES,PTPDMH5S:
                                   PTPDMHNS,PTPDMP5S,PTPDMPNS,PTPDMCNS,PTPDMINS:
                                   PTPDMUEP,PTPDMOPS
          GOTO      UTSN9999
.
UTSN9999  RETURN
.******************************************************************************
.*                                  CISD0000                                  *
.*  Check if Seperated Yet (Statisically) within Period  called by : STSG0000 *
.******************************************************************************
CISD0000  MOVE      TRUE,NOYTDSEP            * Not a Same Day Patient
.
          MATCH     CCHGDATE,CHCSED          * Discharged After End of Period 
          GOTO      CISD9999 IF LESS
.
          MATCH     CHCSST,CCHGDATE          * Discharged Before Month
          GOTO      CISD9999 IF LESS
.
          MOVE      FALSE,NOYTDSEP           * YES - a Same Day Patient
.
CISD9999  RETURN
.******************************************************************************
.*                                  UTAD0000                                  *
.*  Update Trailer Admissions for PTD & YTD              called by : STSG0000 *
.******************************************************************************
UTAD0000  MATCH     EPIADATE,CHCSED
          GOTO      UTAD9999 IF LESS         * If Admitted > End of Period
.
          MATCH     CHCSST,EPIADATE
          GOTO      UTAD9999 IF LESS         * Admitted Before Start of Month
.
          ADD       "1",PTPDMADM
.
UTAD9999  RETURN
.******************************************************************************
.*                                  UTBD0000                                  *
.*  Update PRS Variables for the Trailer Record          called by : STSG0000 *
.******************************************************************************
UTBD0000  MOVE      ACCTSTAT,PRS2IACC
          MOVE      CHDATE,CKYIDEF8
          MOVE      CCHGDATE,CHDATE
          CALL      PRS2CLAS                 * Calculate Category
          MOVE      CKYIDEF8,CHDATE
          BRANCH    EXIT,UTBD9000
.
          MOVE      ZERO,DUMMY               * just in case
.
          ADD       ABDYSPTD,PTPDMBED      * PTD Total Bed Days
.  removed for CAR 293956
. ------- don't increment PTD total bed days if unqual baby - seperate variable
.
....      MATCH     "U",QUALSTAT
....      IF        !@EQUAL
.         ADD       ABDYSPTD,PTPDMBED      * PTD Total Bed Days
....      ELSE
          MATCH     "U",QUALSTAT
          IF        @EQUAL
            IF        PTCNHOSP = 0
              MOVE      TEN,PRS2RACC
            ELSE
              MOVE      TEN1,PRS2RACC 
            ENDIF
          ENDIF
          BRANCH    PTCNHOSP,UTBD2000        * If Public Hospital Different
.
. Private Hospital Calculation
. ------------------------------------
. ------- Bed Days
          LOAD      FORM6,PRS2RACC,PTPDMPAB,PTPDMP5B,PTPDMPNB,PTPDMCOB,PTPDMCNB:
                                   PTPDMIEB,PTPDMINB,PTPDMHCB,PTPDMPCB,PTPDMUBD
          ADD       ABDYSPTD,FORM6           * Current period to Date Bed Days
          STORE     FORM6,PRS2RACC,PTPDMPAB,PTPDMP5B,PTPDMPNB,PTPDMCOB,PTPDMCNB:
                                   PTPDMIEB,PTPDMINB,PTPDMHCB,PTPDMPCB,PTPDMUBD
.
          BRANCH    NOYTDSEP,UTBD1000        * Count as YTD Seps or Not
.
. ------- Bed Days - YTD Seps
          LOAD      FORM6,PRS2RACC,PTPDYPAT,PTPDYP5T,PTPDYPNT,PTPDYCOT,PTPDYCNT:
                                   PTPDYIET,PTPDYINT,PTPDYHCT,PTPDYPCT,DUMMY
          ADD       ABDYSALL,FORM6
          STORE     FORM6,PRS2RACC,PTPDYPAT,PTPDYP5T,PTPDYPNT,PTPDYCOT,PTPDYCNT:
                                   PTPDYIET,PTPDYINT,PTPDYHCT,PTPDYPCT,DUMMY
UTBD1000  BRANCH    NOSAMDAY,UTBD9999        * If Same Day Patient
.
. ------- Same Day Patients
          LOAD      FORM4,PRS2RACC,PTPDMPSD,PTPDMPSD,PTPDMPSD,PTPDMCSD,PTPDMCSD:
                                   PTPDMISD,PTPDMISD,PTPDMHCD,PTPDMPCD,DUMMY
          ADD       "1",FORM4
          STORE     FORM4,PRS2RACC,PTPDMPSD,PTPDMPSD,PTPDMPSD,PTPDMCSD,PTPDMCSD:
                                   PTPDMISD,PTPDMISD,PTPDMHCD,PTPDMPCD,DUMMY
          GOTO      UTBD9999
.
. Public Hospital Calculation
. ---------------------------
. ------- Bed Days
UTBD2000  LOAD      FORM6,PRS2RACC,PTPDMPAB,PTPDMHAB,PTPDMCOB,PTPDMIEB,PTPDMH5B:
                                   PTPDMHNB,PTPDMP5B,PTPDMPNB,PTPDMCNB,PTPDMINB:
                                   PTPDMUBD,PTPDMOPB
          ADD       ABDYSPTD,FORM6           * Current period to Date Bed Days
          STORE     FORM6,PRS2RACC,PTPDMPAB,PTPDMHAB,PTPDMCOB,PTPDMIEB,PTPDMH5B:
                                   PTPDMHNB,PTPDMP5B,PTPDMPNB,PTPDMCNB,PTPDMINB:
                                   PTPDMUBD,PTPDMOPB
.
. ------- Bed Days - YTD Seps
          BRANCH    NOYTDSEP,UTBD3000        * Count as YTD Seps or Not
          LOAD      FORM6,PRS2RACC,PTPDYPAT,PTPDYHAT,PTPDYCOT,PTPDYIET,PTPDYH5T:
                                   PTPDYHNT,PTPDYP5T,PTPDYPNT,PTPDYCNT,PTPDYINT:
                                   DUMMY,PTPDYOPT
          ADD       ABDYSALL,FORM6           * Add to Appropriate Amount
          STORE     FORM6,PRS2RACC,PTPDYPAT,PTPDYHAT,PTPDYCOT,PTPDYIET,PTPDYH5T:
                                   PTPDYHNT,PTPDYP5T,PTPDYPNT,PTPDYCNT,PTPDYINT:
                                   DUMMY,PTPDYOPT
.
. ------- Same Day Patients
UTBD3000  BRANCH    NOSAMDAY,UTBD9999        * If Same Day Patient
          LOAD      FORM4,PRS2RACC,PTPDMPSD,PTPDMHSD,PTPDMCSD,PTPDMISD,PTPDMHSD:
                                   PTPDMHSD,PTPDMPSD,PTPDMPSD,PTPDMCSD,PTPDMISD:
                                   DUMMY,DUMMY
          ADD       "1",FORM4
          STORE     FORM4,PRS2RACC,PTPDMPSD,PTPDMHSD,PTPDMCSD,PTPDMISD,PTPDMHSD:
                                   PTPDMHSD,PTPDMPSD,PTPDMPSD,PTPDMCSD,PTPDMISD:
                                   DUMMY,DUMMY
.
          GOTO      UTBD9999
.
UTBD9000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 083 : Invalid account classification [",PRS2IACC,"] for ":
                    "current hospital type for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
UTBD9999  RETURN
.******************************************************************************
.*                                  UBDV0000                                  *
.*  Update Bed Day Variables                             called by : STSG0000 *
.******************************************************************************
UBDV0000  MOVE      FALSE,EXIT
          COMPARE   ONE,ABDYSALL
          GOTO      UBDV9000 IF LESS        * If no Bed Days - Ignore
.
          COMPARE   "7",OCCURCNT      
          GOTO      UBDV2000 IF LESS 
.
          MOVE      ABDYSPTD,DYSPTD
          MOVE      ABDYSMTD,DYSMTD
          MOVE      ABDYSYTD,DYSYTD
          MOVE      ABDYSALL,DYSALL
.
. ----- Load current data for segments -----
.
          LOAD      ABDYSPTD,OCCURCNT,EPIABDP1,EPIABDP2,EPIABDP3,EPIABDP4:
                                      EPIABDP5,EPIABDP6,EPIABDP7
          LOAD      ABDYSMTD,OCCURCNT,EPIABDP1,EPIABDP2,EPIABDP3,EPIABDP4:
                                      EPIABDP5,EPIABDP6,EPIABDP7
          LOAD      ABDYSYTD,OCCURCNT,EPIABDY1,EPIABDY2,EPIABDY3,EPIABDY4:
                                      EPIABDY5,EPIABDY6,EPIABDY7
          LOAD      ABDYSALL,OCCURCNT,EPIABDA1,EPIABDA2,EPIABDA3,EPIABDA4:
                                      EPIABDA5,EPIABDA6,EPIABDA7
          ADD       DYSPTD,ABDYSPTD
          ADD       DYSMTD,ABDYSMTD
          ADD       DYSYTD,ABDYSYTD
          ADD       DYSALL,ABDYSALL
.
UBDV2000  STORE     ACCTSTAT,OCCURCNT,EPIACST1,EPIACST2,EPIACST3,EPIACST4:
                                      EPIACST5,EPIACST6,EPIACST7
          STORE     ACCMTYPE,OCCURCNT,EPIATYP1,EPIATYP2,EPIATYP3,EPIATYP4:
                                      EPIATYP5,EPIATYP6,EPIATYP7
          STORE     QUALSTAT,OCCURCNT,EPIQTYP1,EPIQTYP2,EPIQTYP3,EPIQTYP4:
                                      EPIQTYP5,EPIQTYP6,EPIQTYP7
.
          STORE     ABDYSMTD,OCCURCNT,EPIABDP1,EPIABDP2,EPIABDP3,EPIABDP4:
                                      EPIABDP5,EPIABDP6,EPIABDP7
.
. * Changed to store MTD figures rather than PTD figures
.
          STORE     ABDYSYTD,OCCURCNT,EPIABDY1,EPIABDY2,EPIABDY3,EPIABDY4:
                                      EPIABDY5,EPIABDY6,EPIABDY7
          STORE     ABDYSALL,OCCURCNT,EPIABDA1,EPIABDA2,EPIABDA3,EPIABDA4:
                                      EPIABDA5,EPIABDA6,EPIABDA7
.
          COMPARE   "7",OCCURCNT      
          GOTO      UBDV9999 IF NOT LESS
.
          ADD       "1",OCCURCNT
          GOTO      UBDV9999
.
UBDV9000  MOVE      TRUE,EXIT
.
UBDV9999  RETURN
+
.******************************************************************************
.*                                  CHAS0000                                  *
.*  Check Account Status for Validity                    called by : STSG0000 *
.******************************************************************************
CHAS0000  PACK      KEY6,ACCTSTAT,SP70
.
          CALL      RDPTACT1                 * read PATACTFD record
          BRANCH    OVRCD,CHAS5000           * record not found
.
          BRANCH    PTACMEDI,CHAS3300,CHAS3400,CHAS3500,CHAS3600,CHAS9000:
                             CHAS3700,CHAS3800,CHAS3850,CHAS3900,CHAS4000
.
CHAS3300  MATCH     "N-E",EPIMCSFX
          GOTO      CHAS9000 IF EQUAL
          GOTO      CHAS4900
.
CHAS3400  MATCH     "C-U",EPIMCSFX
          GOTO      CHAS9000 IF EQUAL
.
          MATCH     PMPXFNAM,EPIMCSFX
          GOTO      CHAS4900 IF NOT EQUAL
.
CHAS3500  MATCH     "C-U",EPIMCSFX
          GOTO      CHAS9000 IF EQUAL
.
          MATCH     "BAB",EPIMCSFX
          GOTO      CHAS9000 IF EQUAL
.
          MATCH     PMPXFNAM,EPIMCSFX
          GOTO      CHAS9000 IF EQUAL
          GOTO      CHAS4900
.
CHAS3600  MATCH     "N-E",EPIMCSFX
          GOTO      CHAS4900 IF EQUAL
          GOTO      CHAS9000
.
CHAS3700  MATCH     "C-U",EPIMCSFX
          GOTO      CHAS9000 IF EQUAL
.
          MATCH     "N-E",EPIMCSFX
          GOTO      CHAS9000 IF EQUAL
.
          MATCH     PMPXFNAM,EPIMCSFX
          GOTO      CHAS9000 IF EQUAL
          GOTO      CHAS4900
.
CHAS3800  MATCH     "P-N",EPIMCSFX
          GOTO      CHAS4900 IF EQUAL      
          GOTO      CHAS9000
.
CHAS3850  MATCH     "C-U",EPIMCSFX
          GOTO      CHAS9000 IF EQUAL       * Only C-U is valid
          GOTO      CHAS4900
.
CHAS3900  MATCH     "P-N",EPIMCSFX
          GOTO      CHAS9000 IF EQUAL       * Only P-N is valid
.
          MATCH     PMPXFNAM,EPIMCSFX
          GOTO      CHAS9000 IF EQUAL
          GOTO      CHAS4900
.
CHAS4000  MATCH     "C-U",EPIMCSFX
          GOTO      CHAS9000 IF EQUAL
.
          MATCH     "N-E",EPIMCSFX
          GOTO      CHAS9000 IF EQUAL
.
          MATCH     "P-N",EPIMCSFX
          GOTO      CHAS9000 IF EQUAL
.
          MATCH     PMPXFNAM,EPIMCSFX
          GOTO      CHAS9000 IF EQUAL
          GOTO      CHAS4900
.
.         invalid Medicare Suffix for Account Status
.
CHAS4900  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 094 : Invalid Medicare suffix for account status ":
                    ACCTSTAT,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      CHAS9500
.
.         invalid accommodation Type and Type of Care combination for 
.         Account Status
.
CHAS5000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 094 : Account status ",ACCTSTAT:
                    " not found",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      CHAS9500
.
CHAS9000  MOVE      ZERO,EXIT
          GOTO      CHAS9999
.
CHAS9500  MOVE      ONE,EXIT
CHAS9999  RETURN
+
.******************************************************************************
.*                                  ABDY0000                                  *
.*  P/E Rec Status Segment - calculate Actual Bed Days   called by : GAEP0000 *
.*  This routine will also determine whether or not we need to include the end*
.*  date of the period in the calculation. This should really be done in the  *
.*  passing of the parameters from the SSEG0000 routine, but I'm afraid I have*
.*  to agree with Socket; that routine is absolutely atrocious and virtually  *
.*  impossible to follow let alone modify. Therefore the code will appear here*
.******************************************************************************
.
.         SSGSDATE = Status segment start date
.         SSGEDATE = Status segment end date
.
ABDY0000  MOVE      FALSE,DAYCASE
          MOVE      ZERO,ABDYSPTD
          MOVE      ZERO,ABDYSMTD
          MOVE      ZERO,ABDYSYTD
          MOVE      ZERO,ABDYSALL
.
          REP       " 0",SSGSDATE           * Zero fill the dates
          REP       " 0",SSGEDATE
          REP       " 0",EFINYEAR
.
          MATCH     CCHGDATE,EPIADATE
          GOTO      ABDY4000 IF EQUAL       * Day Case Patient
.
. ------  calculate Actual Bed Days PTD  ------
.
          MATCH     SSGEDATE,CHCSST         * If Status Seg. <= Start of Month
          GOTO      ABDY1200 IF NOT LESS
.
          MOVE      SSGSDATE,FROMDATE
          MOVE      SSGEDATE,TODATE
.
          MATCH     CHCSST,SSGSDATE         * Start of Month
          GOTO      ABDY1000 IF NOT LESS
.
          MOVE      CHCSST,FROMDATE         * Strt of Month > Strt of Segment
.
ABDY1000  CALL      PRS2DAYS
          MOVE      NBRDAYS,ABDYSPTD
.
. ------  calculate Actual Bed Days MTD  ------
.
ABDY1200  MOVE      SSGSDATE,FROMDATE
          MOVE      SSGEDATE,TODATE
.
          MATCH     SOFMONTH,SSGSDATE       * Start of Month
          GOTO      ABDY1500 IF NOT LESS
.
          MOVE      SOFMONTH,FROMDATE       * Strt of Month > Strt of Segment
.
ABDY1500  CALL      PRS2DAYS
          MOVE      NBRDAYS,ABDYSMTD
.
. ------  calculate Actual Bed Days YTD  ------
.
.
ABDY2000  MATCH     SSGEDATE,SFINYEAR       * If Status Seg. <= Start of Month
          GOTO      ABDY3000 IF NOT LESS
.
          MOVE      SSGSDATE,FROMDATE       * Initial Value
          MOVE      SSGEDATE,TODATE         * Initial Value
.
          MATCH     SFINYEAR,SSGSDATE
          GOTO      ABDY2500 IF NOT LESS
.
          MOVE      SFINYEAR,FROMDATE       * If StartOfFinYr > StartOfSegment
.
ABDY2500  CALL      PRS2DAYS
          MOVE      NBRDAYS,ABDYSYTD
.
. ------  calculate Actual Bed Days ALL  ------
.
ABDY3000  MOVE      SSGSDATE,FROMDATE
          MOVE      SSGEDATE,TODATE
          CALL      PRS2DAYS
          MOVE      NBRDAYS,ABDYSALL
          GOTO      ABDY9999
.
. ------- Do Calcs. For Day Case Patient ------
.
ABDY4000  MOVE      TRUE,DAYCASE
          MATCH     SFINYEAR,SSGSDATE       * Within Year
          GOTO      ABDY6000 IF LESS
.
          MOVE      "1",ABDYSYTD
.
ABDY5000  MATCH     SOFMONTH,SSGSDATE       * Within Month
          GOTO      ABDY5500 IF LESS
.
          MOVE      "1",ABDYSMTD
.
ABDY5500  MATCH     CHCSST,SSGSDATE         * Within Period 
          GOTO      ABDY6000 IF LESS
.
          MOVE      "1",ABDYSPTD
.
ABDY6000  MOVE      "1",ABDYSALL            * Always within ALL
.
ABDY9999  RETURN
.****************************************************************************
.*                                GACC0000                                  *
.*  Get Account Status from PATACCA1 file                                   *
.*  Called by : SSEG0000                                                    *
.****************************************************************************
GACC0000  MOVE      ZERO,HCSFLAG
          MOVE      TATYPE,ADMTYPE           * Admission type 
.
          MATCH     SP8,DDATE   
          GOTO      GACC0500 IF NOT EQUAL      exists
.
          MATCH     TDATE,EPIADATE           * If the current transfer date is
          GOTO      GACC2000 IF EQUAL          the same as the admission date
.                                              then ignore as endday could be
.                                              correct, as any figure
          GOTO      GACC1000
.
.------ patient has been discharged so see if they are a day case ------
.
GACC0500  MATCH     EPIADATE,CCHGDATE        * See if we have a day case
          GOTO      GACC1500 IF EQUAL
.
.------ patient is not a day case so see if we have zero as the end day ------
.------ in period ------
.
GACC1000  MATCH     "  0",ENDDAY
          GOTO      GACC2000 IF NOT EQUAL
.
          MOVE      "  1",ENDDAY
.
          GOTO      GACC2000
.
.------ we have a day case patient ------
.
GACC1500  MOVE      "  0",ENDDAY             * Day case patient
.
.------ read the account status file ------
.
GACC2000  PACK      KEY9,ACLAIM,ADMTYPE,ENDDAY
          CALL      RDPTACC1                 * read the account status file
          COMPARE   ZERO,OVRCD
          GOTO      GACC2500 IF EQUAL
.
          CALL      RKPTACC1                 * get the next record on the 
          BRANCH    OVRCD,GACC3500             account status file
.
          MATCH     ADMTYPE,PTASATYP         * match admission types
          GOTO      GACC3500 IF NOT EQUAL
.
          MATCH     ACLAIM,PTASCLAM          * match claim codes
          GOTO      GACC3500 IF NOT EQUAL
.
. ----- Check if we should be using the previous year account status -----
.
GACC2500  MOVE      PTASACCS,XCCTSTAT       * Default current year acc status
.
. --------------------- Not required for 00/01 Changes ------------------------
.
.....          MATCH     SP3,PTASPRAC
.....          GOTO      GACC3000 IF EQUAL       * No previous year account status
.
.....          MATCH     "19990701",CCHGDATE
.....          GOTO      GACC3000 IF NOT LESS    * Change date >= 01/07/1999
.
.....          MOVE      PTASPRAC,XCCTSTAT       * Using previous year account status
.
.------ we have an account status file record to use so check account ------
.------ status field ------
.
GACC3000  MATCH     SP3,XCCTSTAT
          GOTO      GACC7500 IF NOT EQUAL   * Account status not blank
.
          MATCH     "N-E",EPIMCSFX
          GOTO      GACC4000 IF EQUAL       * Invalid medicare suffix
.
          COMPARE   ZERO,HCSFLAG             * Have we tried using the HCS Eq.?
          GOTO      GACC7000 IF EQUAL        * NO.
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error ### : Blank account status for combination of :":
                    "claim code ",ACLAIM,", admission type ",TATYPE:
                    " & highest day in period ",ENDDAY,*N
          ADD       THREE,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      GACC9000
.
GACC3500  MATCH     "N-E",EPIMCSFX
          GOTO      GACC6500 IF NOT EQUAL   * Valid medicare suffix
.
.         Workout the account status for an invalid Medicare suffix
.
GACC4000  PACK      KEY5,ANSC,ANSL,ACLAIM
          CALL      RDCODE1
          BRANCH    OVRCD,GACC5500
.
          MOVE      ZERO,FORM2
GACC4500  ADD       ONE,FORM2
          COMPARE   SIX,FORM2
          GOTO      GACC5500 IF NOT LESS
.
          LOAD      ANS,FORM2,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
          CMATCH    "W",ANS
          GOTO      GACC5000 IF EQUAL
.
          CMATCH    "M",ANS
          GOTO      GACC4500 IF NOT EQUAL
.
          MOVE      "TA ",XCCTSTAT
          GOTO      GACC9000
.
GACC5000  MOVE      "WC ",XCCTSTAT
          GOTO      GACC9000
.
GACC5500  BRANCH    PTCNHOSP,GACC6000
.
          MOVE      "XX ",XCCTSTAT          * Private Hospital
          GOTO      GACC9000
.
GACC6000  MOVE      "ME ",XCCTSTAT          * Public Hospital
          GOTO      GACC9000
.
. ------  record not found on Account Status file ------
.
GACC6500  COMPARE   ZERO,HCSFLAG             * Have we tried using the HCS Eq.?
          GOTO      GACC7000 IF EQUAL        * No.
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          IF        HCSFLAG=1
            PRINT     "Error ### : Account status record not found on account status":
                      " file.  Record details combination is :",*N:
                      "claim code ",ACLAIM,", admission type's ",TATYPE:
                      " HDP equ ",ADMTYPE," & highest day in period, ":
                      ENDDAY,*N
          ELSE
            PRINT     "Error ### : Account status record not found on account status":
                      " file.  Record details combination is :",*N:
                      "claim code ",ACLAIM,", admission type ",ADMTYPE:
                      " & highest day in period, ",ENDDAY,*N
          ENDIF
.
          ADD       THREE,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      GACC9000
.
.------- try to use the HCS Equivalent of the admission type -----
.
GACC7000  MOVE       ONE,HCSFLAG
          PACK       KEY5,ANSA,SP1,ADMTYPE
          CALL       RDCODE1
          BRANCH     OVRCD,GACC6500        * record not found
.
          MATCH      SP3,THCSCOD
          GOTO       GACC6500 IF EQUAL
.
          UNPACK     THCSCOD,ADMTYPE
          GOTO       GACC2000
.
GACC7500  MATCH      "XX ",XCCTSTAT
          IF         @EQUAL
            MOVE       "N-E",EPIMCSFX
            MOVE       SP20,EPIMEDI
            GOTO       GACC9000
          ENDIF
.
          MATCH      "MA ",XCCTSTAT
          IF         @EQUAL
            MOVE       "C-U",EPIMCSFX
            MOVE       SP20,EPIMEDI
            GOTO       GACC9000
          ENDIF
.
          MATCH      "UQ ",XCCTSTAT
          IF         @EQUAL
            MATCH      ANSU,QUALSTAT         * error?
            GOTO       GACC8000 IF NOT EQUAL * yes
          ENDIF
.
          CMATCH    ANSV,XCCTSTAT
          IF        @EQUAL
            MOVE      ONE,VETFLAG           * Veterian affairs flag - yes
          ENDIF
.
          CMATCH    ANST,XCCTSTAT
          IF        @EQUAL
            MOVE      ONE,TACFLAG           * TAC flag - yes
          ENDIF
          GOTO      GACC9000                 * no errors
.
GACC8000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error ### : Invalid account class ",XCCTSTAT,", for ":
                    "qualification status ",QUALSTAT,"for admission ":
                    "number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      GACC9000
.
GACC9000  MOVE      ZERO,EXIT
GACC9999  RETURN
.******************************************************************************
.*                                  SCTY0000                                  *
.*   Pri. Episode Record - Validate Separation Care Type called by : DSEG0000 *
.******************************************************************************
SCTY0000  MATCH     "U ",EPISCTYP                                      *C-49016
          GOTO      SCTY3000 IF NOT EQUAL
.
.         DOB must be same as admission date or the date before adm.date
.
          MATCH     PBDATE,ADATE
          GOTO      SCTY1000 IF EQUAL
.
.         Set up one day before admission date
.
          UNPACK    ADATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
          CALL      DMYCON
.
          SUB       ONE,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
          PACK      KEY8,CC,YY,MM,DD
          REP       " 0",KEY8
          MATCH     PBDATE,KEY8
          GOTO      SCTY1000 IF EQUAL
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Warning 222 : Unqual newborn; admit date after birth; admission ":
                    "number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG
.
SCTY1000  MATCH     SP8,DDATE
          GOTO      SCTY2000 IF EQUAL       * Not discharged
.
          PACK      KEY16,AADMNO,SP20                                 *C-240107
          CALL      RSPTECD2                * Position on & read a patient
          CALL      RKPTECD2                  episode disease file record
          BRANCH    OVRCD,SCTY2000
.
          MATCH     AADMNO,PTEDADMN
          GOTO      SCTY2000 IF NOT EQUAL   * Different admin no
.
          MATCH     "  1000",ABWGHT
          GOTO      SCTY2000 IF NOT LESS   * Weight >= 1000
.
          MATCH     "D",EPISTYPE           * Separation type = Death ?
          GOTO      SCTY2000 IF EQUAL
.
          MATCH     "T",EPISTYPE           * Separation type = Transfer ?
          GOTO      SCTY2000 IF EQUAL
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "404 : Warning: Unqual care type, admit weight < 999G for ":
                    "admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG
.
SCTY2000  COMPARE   ONE,NEWBORN
          GOTO      SCTY8000 IF NOT EQUAL
.
SCTY3000  COMPARE   ONE,NEWBORN
          IF        @EQUAL
            MATCH     "4 ",EPISCTYP                                    *C-49016
            IF        !@EQUAL
              MATCH     "U ",EPISCTYP                                  *C-49016
              GOTO      SCTY8500 IF NOT EQUAL 
            ENDIF
          ENDIF
.
          MATCH     "N",EPADCRTN
          GOTO      SCTY9999 IF NOT EQUAL
.
          MATCH     "4 ",EPISCTYP                                      *C-49016
          GOTO      SCTY9999 IF EQUAL
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error ### : Invalid separation care type ",EPISCTYP," for ":
                    "criterion for admission ",EPADCRTN," for admission ":
                    "number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      SCTY9999
.
SCTY8000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 261 : Unqualified newborn care type ",EPISCTYP," but age ":
                    "at admission > 9 days for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      SCTY9999
.
SCTY8500  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 262 : Age at admission less than 10 days but care type ":
                    "is not '4' or 'U' for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
SCTY9999  RETURN
.******************************************************************************
.*                                  DSEG0000                                  *
.*     Pri. Episode Record - get Separation Segment      called by : GAEP0000 *
.******************************************************************************
DSEG0000  MOVE      CARETYPE,EPISCTYP       * set care type even if no sepn 
          MOVE      ONE,DSEGFLAG
          CALL      SCTY0000                * validate separation care type
          CALL      CSTP0000                * Clear the separation type
          MATCH     CCHGDATE,CHCSED
          GOTO      DSEG9000 IF LESS
.
          CALL      SEPN0000                * Get Separation Date & Time
.
.         Set the account status, Accommodation type and type of care on 
.         separation.  These have already been calculated in STSG0000
.
          PACK      KEY30,DAADMNO,Z70
          CALL      RDSTRAN2
          CALL      RDPTRAN2
          BRANCH    OVRCD,DSEG0500
.
          MATCH     AADMNO,TADMN
          GOTO      DSEG0500 IF NOT EQUAL   * Different admin no
.
          MOVE      ONE,DSEGFLAG
          CALL      GACT0000     * after July 2013, use accommodation type on
.                                * discharge date, not last midnight
          MOVE      ZERO,DSEGFLAG
.
DSEG0500  MOVE      ACCTSTAT,EPISACST
          MOVE      ACCMTYPE,EPISATYP
          BRANCH    LASTEPIS,DSEG1000       * Last episode for patient
.
          COMPARE   ONE,PTCNHOSP
          GOTO      DSEG9000 IF NOT EQUAL   * Private hospital
.
          MOVE      "1",EPICAVAL            * Default to carer not needed
          GOTO      DSEG9000
.
DSEG1000  MATCH     SP8,DDATE
          GOTO      DSEG9000 IF EQUAL       * Patient not discharged
.
          MATCH     SP8,SEPISDAT
          GOTO      DSEG9000 IF EQUAL       * Only required when discharged
.
          MATCH     SEPISDAT,CHCSED
          GOTO      DSEG9000 IF LESS        * Not discharged in period required
.
          CALL      GSTP0000                * Get the separation type
          CALL      STRF0000                * Get the separation transfer
          CALL      GSRF0000                * Get the separation referral
          CALL      GCAV0000                * Get the carer availability
          CALL      GACAS000                * Get the ACAS Status
.
DSEG9000  MOVE      ZERO,EXIT
DSEG9999  RETURN
+
.******************************************************************************
.*                                  CSTP0000              Called by: DSEG0000 *
.*                          Clear The Separation Type                         *
.******************************************************************************
CSTP0000  COMPARE   ONE,LASTEPIS
          GOTO      CSTP9000 IF NOT EQUAL   * Not the last episode, exit
.
          MATCH     CCHGDATE,CHCSED
          GOTO      CSTP9000 IF NOT LESS    * PRS2 end date >= change date
.
          MOVE      SP1,EPISTYPE            * Clear the separation type
.
CSTP9000  MOVE      ZERO,EXIT
CSTP9999  RETURN
+
.******************************************************************************
.*                                  GSTP0000              Called by: DSEG0000 *
.*                           Get The Separation Type                          *
.******************************************************************************
GSTP0000  MOVE      SP2,EPISTYPE                                       *C-49016
.                                                                     *C-140164
          IF        PTCNDRSM=1
            PACK      KEY3,DSTAT
            PACK      KEY5,ANSD,SP1,DSTAT,SP5
          ELSE
            PACK      KEY3,DDEST
            PACK      KEY5,ANSD,ANSD,DDEST
          ENDIF
          MATCH     SP3,KEY3
          GOTO      GSTP9000 IF EQUAL
.
          CALL      RDCODE1                 * Read a codes file record
          BRANCH    OVRCD,GSTP9000
.
          MOVE      "Z",EPISTYPE            * Default to left against med advice
          MATCH     SP4,THCSCOD
          GOTO      GSTP9000 IF EQUAL       * Blank HDP eq
.
          UNPACK    THCSCOD,KEY1,DIM1,KEY2
          MATCH     SP1,DIM1
          IF        !@EQUAL
            MOVE      DIM1,EPISTYPE         * Use the 2nd position of HDP eq
          ELSE
            MOVE      KEY1,EPISTYPE         * Use the 1st position of HDP eq
          ENDIF
.
          CALL      CTSM0000       * new validation after 1/7/2003
          GOTO      GSTP9000
.
.******************************************** Start of deletion         D-49016
.          TYPE      EPISTYPE
.          IF        @EQUAL
.            MOVE      EPISTYPE,FORM1
.            COMPARE   ZERO,FORM1
.            GOTO      GSTP1000 IF EQUAL     * Invalid separation type
.          ELSE
.            REP       "FHPHMHBHUHRH",EPISTYPE * replaces to H
.            MOVE      EPISTYPE,KEY1
.            REP       "D1Z1T1N1A1H1K1",KEY1
.            MATCH     "1",KEY1
.            GOTO      GSTP1000 IF NOT EQUAL * Invalid separation type
.          ENDIF
.          GOTO      GSTP9000
..
.GSTP1000  COMPARE   ONE,ADMDTFLG
.          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
.          COMPARE   "60",CLNO
.          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
..
.          PRINT     "103 : Invalid HDP equivalent for discharge destination ":
.                    DDEST," for admission number ",AADMNO,*N
.          ADD       TWO,CLNO
.          ADD       ONE,NUMERROR
.          MOVE      ONE,PTERRFLG
.********************************************   End of deletion         D-49016
.
GSTP9000  MOVE      ZERO,EXIT
GSTP9999  RETURN
+
.******************************************************************************
.*                                  STRF0000              Called by: DSEG0000 *
.*                         Get The Separation Transfer                        *
.******************************************************************************
STRF0000  MOVE      SP5,EPISTRFR
          COMPARE   LASTEPIS,ZERO
          GOTO      STRF9000 IF EQUAL       * Not Last Episode
.
          MATCH     "1",TCINDC2
          GOTO      STRF9000 IF NOT EQUAL
.
          MATCH     "D",TCINDC10
          GOTO      STRF9000 IF EQUAL
.
          PACK      KEY8,AADMNO
          CALL      RDPTDAD1                * Read the transfer source file
          BRANCH    OVRCD,STRF9000
.
          UNPACK    PTDADCTS,KEY3,KEY2
          MATCH     SP2,KEY2
          GOTO      STRF1000 IF EQUAL       * Not a 4 char transfer source code
.
          PACK      KEY5,PTDADCTS,SP70
          CALL      RDPTVAD1
          IF        OVRCD=1
            GOTO      STRF9000
          ENDIF
          MATCH     SP70,PTVANHSC
          IF        !@EQUAL
            MOVE      PTVANHSC,EPISTRFR     * Valid transfer source
          ELSE
            MOVE      PTVACODE,EPISTRFR     * Valid transfer source
          ENDIF
          GOTO      STRF9000 
.
STRF1000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 042 : Discharge transfer source should be a 4 character ":
                    "code for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
STRF9000  MOVE      ZERO,EXIT
STRF9999  RETURN
+
.******************************************************************************
.*                                  GSRF0000              Called by: DSEG0000 *
.*                         Get The Separation Referral                        *
.******************************************************************************
GSRF0000  MATCH     "H",EPISTYPE
          GOTO      GSRF9000 IF NOT EQUAL   * Separation type is not home
.
          MATCH     SP4,PTDSSREF
          GOTO      GSRF1000 IF NOT EQUAL   * Separation referral code present
.
          COMPARE   ONE,PTCNHOSP
          GOTO      GSRF1000 IF NOT EQUAL   * Default to blank if private hosp
.
          PACK      PTDSSREF,ANSX,SP4       * Default to X if public hospital
.
GSRF1000  MOVE      PTDSSREF,EPISREFL       * Separation referral
          MOVE      ZERO,FORM1
          UNPACK    PTDSSREF,DIM1A,DIM1B,DIM1C,DIM1D
.
GSRF2000  ADD       ONE,FORM1
          COMPARE   FIVE,FORM1
          GOTO      GSRF5000 IF NOT LESS    * Counter >= 5
.
          MOVE      SP1,DIM1
          LOAD      DIM1,FORM1,DIM1A,DIM1B,DIM1C,DIM1D
          MATCH     SP1,DIM1
          GOTO      GSRF5000 IF EQUAL       * No separation referral found
.
          REP       "E1F1H2G2B2U2C2S2D2R2X2A2K2L2T2",DIM1 
.
          TYPE      DIM1
          GOTO      GSRF4000 IF NOT EQUAL   * Non Numeric, error
.
          MATCH     "1",DIM1                * E/F - Domiciliary postnatal care ?
          GOTO      GSRF2000 IF NOT EQUAL   * no.
.
          MATCH     "F",PSEX
          GOTO      GSRF3000 IF NOT EQUAL   * Patient not a female
.
          COMPARE   "11",PSAGE
          GOTO      GSRF3000 IF LESS        * Patient < 11 years old
.
          COMPARE   "55",PSAGE
          GOTO      GSRF2000 IF LESS        * Patient < 55 years old
.
GSRF3000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 397 : Separation refer postnatal, incompat age/sex ":
                    AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      GSRF2000
.
GSRF4000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 389 : Invalid separation referral for ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      GSRF2000
.
GSRF5000  SCAN      "X",PTDSSREF
          GOTO      GSRF9000 IF NOT EQUAL   * No referral/support services
.
          RESET     PTDSSREF
          MOVE      PTDSSREF,KEY4
          REP       "X ",KEY4
          MATCH     SP4,KEY4
          GOTO      GSRF9000 IF EQUAL       * Blank separation referral, exit
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 396 : Separation referral, no refer plus other refer ":
                    "admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      GSRF9000
.
GSRF6000  MATCH     SP4,PTDSSREF
          GOTO      GSRF9000 IF EQUAL     * Blank separation referral code
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
          PRINT     "Error 395 : Separation type not home, separation referral ":
                    "present admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
GSRF9000  MOVE      ZERO,EXIT
GSRF9999  RETURN
+
.******************************************************************************
.*                                  GCAV0000              Called by: DSEG0000 *
.*                           Get Carer Avaliability                           *
.******************************************************************************
GCAV0000  COMPARE   ONE,PTCNHOSP
          GOTO      GCAV9000 IF NOT EQUAL   * Private hospital
.
GCAV0200  *** carer available for caretypes 1,P,6,8,9 or MC ***
          MOVE      ZERO,FORM1             
          MOVE      ZERO,DIM1
          UNPACK    CARETYPE,CARETYP1,CARETYP2      
.
          MATCH     "10",CARETYPE
          GOTO      GCAV9000 IF EQUAL
.
          TYPE      CARETYP1                       
          IF        @EQUAL
            MOVE      CARETYP1,FORM1              
          ELSE
            MATCH     "P",CARETYPE
            IF        @EQUAL
              MOVE      ONE,FORM1
            ENDIF 
            MATCH     "MC",CARETYPE
            IF        @EQUAL
              MOVE      ONE,FORM1
            ENDIF 
          ENDIF
           
GCAV0500  BRANCH    FORM1,GCAV1000,GCAV9000,GCAV9000,GCAV9000,GCAV9000:
                          GCAV1000,GCAV9000,GCAV1000,GCAV1000
          GOTO      GCAV9000
.
GCAV1000  MATCH     SP70,DDEST
          GOTO      GCAV9000 IF EQUAL 
.
          PACK      KEY5,ANSD,ANSD,DDEST,SP70
          CALL      RDCODE1 
          BRANCH    OVRCD,GCAV9000
.
          MOVE      THCSCOD,DIM1
.
          MATCH     "H",DIM1
          GOTO      GCAV9000 IF NOT EQUAL           
.
          COMPARE   ONE,PCEASE
          GOTO      GCAV2000 IF NOT EQUAL   * Not dead
.
          MOVE      "1",EPICAVAL            * Carer not needed (there dead man)
          GOTO      GCAV9000
.
GCAV2000  MOVE      "8",EPICAVAL            * Default to missing or not recorded
          MOVE      ZERO,FORM8
          DAYSEP    PBDATE,ADATE,FORM8
          IF        FORM8<2922
            MOVE      "5",EPICAVAL          * Default to lives with another
          ENDIF
.
          UNPACK    SP5,TCODE,ACODE
          LOAD      TCODE,PTCNCRAY,CATD1,CATD2,CATD3,CATD4,CATD5,CATVK
          LOAD      ACODE,PTCNCRAY,DUSD1,DUSD2,DUSD3,DUSD4,DUSD5,PMVXCRAV
.
          PACK      KEY5,TCODE,ACODE
          CALL      RDCODE1
          BRANCH    OVRCD,GCAV3000
.
          MATCH     SP4,THCSCOD
          GOTO      GCAV3000 IF EQUAL       * Blank HDP equ
.
          UNPACK    THCSCOD,EPICAVAL
          MATCH     "0",EPICAVAL
          GOTO      GCAV8000 IF EQUAL       * 0 carer availability
.
          MATCH     "9",EPICAVAL
          GOTO      GCAV8000 IF EQUAL       * 9 an invalid carer availability
.
          TYPE      EPICAVAL
          GOTO      GCAV8000 IF NOT EQUAL   * Non numeric, error
.
GCAV3000  MATCH     "T",EPISTYPE
          GOTO      GCAV4000 IF EQUAL       * Transfer separation type
.
          MATCH     "S",EPISTYPE                                       *I-60167
          GOTO      GCAV4000 IF EQUAL
.
          MATCH     "Z",EPISTYPE                                       *I-60167
          GOTO      GCAV4000 IF EQUAL
.
          MATCH     "C",EPISTYPE                                       *I-60167
          GOTO      GCAV4000 IF EQUAL
.
          MATCH     "N",EPISTYPE                                       *I-60167
          GOTO      GCAV4000 IF EQUAL
.
          MATCH     "J",EPISTYPE                                       *I-60167
          GOTO      GCAV4000 IF EQUAL
.
          MATCH     "L",EPISTYPE                                       *I-60167
          GOTO      GCAV4000 IF EQUAL
.
          MATCH     "A",EPISTYPE                                       *I-60167
          GOTO      GCAV4000 IF EQUAL
.
          MATCH     "B",EPISTYPE                                       *I-60167
          GOTO      GCAV4000 IF EQUAL
.
          MATCH     "D",EPISTYPE
          GOTO      GCAV5000 IF NOT EQUAL   * Not dead separation type
.
GCAV4000  MATCH     "1",EPICAVAL
          GOTO      GCAV9000 IF EQUAL       * Carer not needed/not applicable
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 399 : Incompat separation type & carer availability ":
                    "admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
GCAV5000  MATCH     "4",EPICAVAL
          GOTO      GCAV9000 IF EQUAL       * Lives with anth, has no carer
.
          MATCH     "5",EPICAVAL
          GOTO      GCAV9000 IF EQUAL       * Lives with anth,has resident carer
.
          MATCH     "6",EPICAVAL
          GOTO      GCAV9000 IF EQUAL       * Lives with anth & has nonres carer
.
          MOVE      ZERO,FORM8
          DAYSEP    PBDATE,ADATE,FORM8
          COMPARE   "2922",FORM8
          GOTO      GCAV9000 IF NOT LESS    * Age >= 8 years old
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 400 : Child, incompatible carer availability admission ":
                    "number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      GCAV9000
.
GCAV7000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "### : Warning: carer availability is 1 (carer not needed)":
                    " & care type ",CARETYPE," for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG
          GOTO      GCAV9000
.
GCAV8000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 390 : Invalid carer availability for admission number ":
                    AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
GCAV9000  MOVE      ZERO,EXIT
GCAV9999  RETURN
+
.******************************************************************************
.*                                  GACAS000              Called by: DSEG0000 *
.*              Get the Aged Care Assessemnt Service status                   *
.******************************************************************************
GACAS000  COMPARE   ONE,PTCNHOSP
          GOTO      GACAS900 IF NOT EQUAL   * Private hospital
.
.                                           * required post 1/7/2003
          MATCH     CCHGDATE,EPIADATE
          GOTO      GACAS900 IF EQUAL       * Not sent for daycase
.
          PACK      AGEDATE,ADATE
          CALL      CALCAGE                 * Calculate age as of admin date
          MOVE      PSAGEYRS,PSAGE
          IF        PSAGE<50
            GOTO      GACAS900         * Age > 50 years old
          ENDIF
.
          MOVE      ZERO,FORM1
          MOVE      ZERO,DIM1
          UNPACK    CARETYPE,CARETYP1,CARETYP2                         *I-49016
          TYPE      CARETYP1                                           *C-49016
          IF        @EQUAL
            MOVE      CARETYP1,FORM1                                   *C-49016
          ENDIF
.
          MATCH     "MC",CARETYPE
          IF        @EQUAL
            MOVE      ONE,FORM1
          ENDIF
.
          BRANCH    FORM1,GACAS100,GACAS900,GACAS900,GACAS100,GACAS900:
                          GACAS100,GACAS100,GACAS100,GACAS100
          GOTO      GACAS900
.
GACAS100  UNPACK    SP5,TCODE,ACODE
          LOAD      TCODE,PTCNACAS,CATD1,CATD2,CATD3,CATD4,CATD5,CATU6,CATU7
          LOAD      ACODE,PTCNACAS,DUSD1,DUSD2,DUSD3,DUSD4,DUSD5,AUSR6,AUSR7
.
          PACK      KEY5,TCODE,ACODE,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,GACAS800
.
          MATCH     SP4,THCSCOD
          GOTO      GACAS800 IF EQUAL       * Blank HDP
.
          UNPACK    THCSCOD,EPIACASS
          MATCH     "0",EPIACASS
          GOTO      GACAS800 IF EQUAL       * 0 ACAS Status
.
          MATCH     "6",EPIACASS
          GOTO      GACAS800 IF NOT LESS    * invalid ACAS Status
.
          TYPE      EPIACASS
          GOTO      GACAS800 IF NOT EQUAL   * Non numeric, error
.
          MATCH     "1",EPIACASS
          GOTO      GACAS900 IF NOT EQUAL
.
          SCAN      "A",PTDSSREF
          GOTO      GACAS810 IF EQUAL
.
          GOTO      GACAS900
.
GACAS800  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Warning 460: Invalid ACAS Status ":
                    AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG

          GOTO      GACAS900
.
GACAS810  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Warning 462: Invalid ACAS Status and Sep Referral":
                    AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG
.
GACAS900  MOVE      ZERO,EXIT
GACAS999  RETURN
+
.******************************************************************************
.*                                  GVET0000              Called by: GAEP0000 *
.*                        Get Veterian Affairs Details                        *
.******************************************************************************
GVET0000  COMPARE   ONE,PTCNHOSP
          GOTO      GVET9000 IF NOT EQUAL   * Only for public hospitals
.
          BRANCH    ROYFLAG,GVET9000,GVET1000,GVET1000 * Doing ROY calcs
.
GVET1000  COMPARE   ONE,VETFLAG
          GOTO      GVET9000 IF NOT EQUAL   * Veterian affairs patient
.
          PACK      KEY8,AADMNO
          CALL      RAPTPTD1                * Read a PTD file record
          COMPARE   ONE,OVRCD
          GOTO      GVET9000 IF NOT EQUAL   * Record already exists
.
          PACK      KEY8,AADMNO
          CALL      RDWVET1                 * Read a veterian affairs file rec
          BRANCH    OVRCD,GVET4000
.
          MOVE      PSNAME,VETSURN
          MOVE      PGNAME,VETGIVN
          MOVE      PSNAME,VETLSURN                                    *I-49016
          MOVE      PGNAME,VETLGIVN                                    *I-49016
          MOVE      VCLMNO,VETNUMB
          MOVE      SP8,VACCDATE
          MOVE      SITEID,VETUSRF          * User flag
.
          MATCH     CHCSST,EPIADATE
          GOTO      GVET2000 IF NOT LESS    * Admin date >= PRS2 start date
.
          ADD       "1",DVACOR
          GOTO      GVET3000
.
GVET2000  ADD       "1",DVANEW
.
GVET3000  ADD       "1",RECCNT
          COMPARE   ONE,PRERRFLG
          GOTO      GVET3700 IF NOT EQUAL
.
          PACK      TRANTYPE,V5,SP70
          COMPARE   ONE,MEDIUM
          GOTO      GVET3500 IF NOT EQUAL
.                            
          WRITE     WORK,SEQ;TRANTYPE,UNIQKEYL,EPIURNOL,VETNUMB:
                           VETLSURN,VETLGIVN,EPIADATR:         
                           EPISDATE,VACCDATE,VETUSRF
.
          GOTO      GVET3700
.
.                                           * write Tape recd (with ";")
GVET3500  WRITE     WORK,SEQ;TRANTYPE,UNIQKEYL,EPIURNOL,VETNUMB: 
                           VETLSURN,VETLGIVN,EPIADATR:          
                           EPISDATE,VACCDATE,VETUSRF;
.
GVET3700  COMPARE   "99999",RECCNT
          GOTO      GVET9000 IF LESS        * Record counter < max no of recs
          GOTO      GVET9500
.
GVET4000  COMPARE   TWO,EPISODNO
          GOTO      GVET9000 IF NOT LESS    * Episode no >= 2
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 180 : DVA patient discharged within period does not have ":
                    "a Veteran Affairs record for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
GVET9000  MOVE      ZERO,EXIT
          GOTO      GVET9999
.
GVET9500  MOVE      ONE,EXIT
GVET9999  RETURN
+
.******************************************************************************
.*                                  GTAC0000              Called by: GAEP0000 *
.*                               Get TAC Details                              *
.******************************************************************************
GTAC0000  COMPARE   ONE,PTCNHOSP
          GOTO      GTAC9000 IF NOT EQUAL   * Only for public hospitals
.
          BRANCH    ROYFLAG,GTAC9000,GTAC1000,GTAC1000 * Doing ROY calcs
.
GTAC1000  COMPARE   ONE,TACFLAG
          GOTO      GTAC9000 IF NOT EQUAL   * Not TAC
.
          PACK      KEY8,AADMNO
          CALL      RAPTPTD1                * Read a PTD file record
          COMPARE   ONE,OVRCD
          GOTO      GTAC9000 IF NOT EQUAL   * Record already exists
.
          PACK      KEY8,AADMNO
          CALL      RDWMAB1                 * Read a TAC(MAB) file rec
          BRANCH    OVRCD,GTAC6000
.
          MOVE      PSNAME,VETSURN
          MOVE      PGNAME,VETGIVN
          MOVE      PSNAME,VETLSURN                                    *I-49016
          MOVE      PGNAME,VETLGIVN                                    *I-49016
          MOVE      MREFNO,VETNUMB
          UNPACK    MACDAT,KEY4,KEY2,DIM2
          PACK      VACCDATE,DIM2,KEY2,KEY4
          MOVE      SITEID,VETUSRF          * User flag
.
          MATCH     CHCSST,EPIADATE
          GOTO      GTAC2000 IF NOT LESS    * Admin date >= PRS2 start date
.
          ADD       "1",DVACOR
          GOTO      GTAC3000
.
GTAC2000  ADD       "1",DVANEW
.
GTAC3000  ADD       "1",RECCNT
          PACK      TRANTYPE,V5,SP70
          IF        PRERRFLG=1
            IF        MEDIUM=1
              WRITE     WORK,SEQ;TRANTYPE,UNIQKEYL,EPIURNOL,VETNUMB:
                               VETLSURN,VETLGIVN,EPIADATR:
                               EPISDATE,VACCDATE,VETUSRF
            ELSE
              WRITE     WORK,SEQ;TRANTYPE,UNIQKEYL,EPIURNOL,VETNUMB:
                               VETLSURN,VETLGIVN,EPIADATR:
                               EPISDATE,VACCDATE,VETUSRF;
            ENDIF
          ENDIF
.
. ---- Edit checks for TAC accident date ----
.
          MATCH     SP8,MACDAT              * accident date cannot be blank
          GOTO      GTAC4000 IF EQUAL
.
          MATCH     PBDATE,MACDAT           * accident date must be >= DOB
          GOTO      GTAC4000 IF LESS
.
          MATCH     MACDAT,EPIADATE         * admn. date must be >= acc. date
          GOTO      GTAC4000 IF LESS
.
          MOVE      MREFNO,DIM3             * I CAR 41541
          MATCH     "C-U",DIM3
          GOTO      GTAC8000 IF EQUAL       * end I CAR 41541
.
          UNPACK    VACCDATE,KEY6,KEY2      * get yy from accident date
          MOVE      MREFNO,DIM2             * get yy from claim no.(claim year)
.         MATCH     KEY2,DIM2               * accident date must be <= claim yr
.         GOTO      GTAC8000 IF NOT LESS    * D CAR 41541
.         GOTO      GTAC8000 IF EQUAL
.         MOVE      KEY2,FORM2
.         SUB       ONE,FORM2
.         MOVE      FORM2,KEY2
.         REP       " 0",KEY2
.         MATCH     DIM2,KEY2
.         GOTO      GTAC5000 IF LESS
.         GOTO      GTAC8000                * end D CAR 41541
.
          RESET     KEY2                    * I CAR 41541
          RESET     DIM2
          MOVE      KEY2,FORM3
          MOVE      DIM2,FORM3A
.
          ASSIGN    FORM3-FORM3A,FORM3B
.
          COMPARE   TWO,FORM3B
          GOTO      GTAC3500 IF LESS
          GOTO      GTAC5000
.
GTAC3500  COMPARE   FORM3B,ONE
          GOTO      GTAC8000 IF EQUAL
.
          COMPARE   FORM3B,ZERO
          GOTO      GTAC8000 IF EQUAL
.
          COMPARE   FORM3B,SEQ
          GOTO      GTAC8000 IF EQUAL
.
          COMPARE   FORM3B,NEG2
          GOTO      GTAC8000 IF EQUAL
.
          GOTO      GTAC5000                   * end I CAR 41541
.
GTAC4000  COMPARE   TWO,EPISODNO
          GOTO      GTAC9000 IF NOT LESS    * Episode no >= 2
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
. SRF 20804  -- Date of Accident should allow "dummy" date 01/01/1901

          MATCH     "19010101",MACDAT
          IF        @EQUAL
            PRINT     "###: Warning: Date of Accident is 01/01/1901 ",*N
            ADD       ONE,NUMWARN
            MOVE      ONE,WRNFLG
          ELSE
            PRINT     "Error ### : Invalid Date of Accident ",*N
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
          ENDIF

          ADD       TWO,CLNO
          GOTO      GTAC8000
.
GTAC5000  COMPARE   TWO,EPISODNO
          GOTO      GTAC9000 IF NOT LESS    * Episode no >= 2
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60

. SRF 20804  -- Date of Accident should allow "dummy" date 01/01/1901

          MATCH     "19010101",MACDAT
          IF        @EQUAL
            PRINT     "###: Warning: Date of Accident is 01/01/1901 ",*N
            MOVE      ONE,WRNFLG
          ELSE
            PRINT     "Error ### : Date of Accident Incompatible with TAC ":
                    "Claim Number ",*N
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
          ENDIF
          ADD       TWO,CLNO
          GOTO      GTAC8000
.
GTAC6000  COMPARE   TWO,EPISODNO
          GOTO      GVET9000 IF NOT LESS    * Episode no >= 2
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 180 : TAC Claim Number Blank for admission number ":
                    AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
GTAC8000  COMPARE   "99999",RECCNT
          GOTO      GTAC9000 IF LESS        * Record counter < max no of recs
          GOTO      GTAC9500
.
GTAC9000  MOVE      ZERO,EXIT
          GOTO      GTAC9999
.
GTAC9500  MOVE      ONE,EXIT
GTAC9999  RETURN
+
.******************************************************************************
.*                                  SUBA0000              Called by: GAEP0000 *
.*                            Get Sub Acute Details                           *
.******************************************************************************
SUBA0000  COMPARE   ONE,PTCNHOSP
          GOTO      SUBA9000 IF NOT EQUAL   * Only for public hospitals
.
          PACK      KEY8,AADMNO
          CALL      RAPTPTD1                * Read a PTD file record
          COMPARE   ONE,OVRCD
          GOTO      SUBA9000 IF NOT EQUAL   * Record already exists
.
          PACK      ADMFIMSC,SP70
          PACK      DSCFIMSC,SP70
.
          MATCH     "8 ",EPISCTYP                        *C-271245 P5 instead
          GOTO      SUBA9000 IF EQUAL
.
          MATCH     "MC",EPISCTYP                        * P5 instead
          GOTO      SUBA9000 IF EQUAL
.
          MATCH     "U ",EPISCTYP                                      *C-49016
          GOTO      SUBA9000 IF EQUAL
.
          MATCH     "P ",EPISCTYP                                      *C-49016
          GOTO      SUBA1000 IF EQUAL
.
          UNPACK    EPISCTYP,CARETYP1,CARETYP2                         *I-49016
          MOVE      CARETYP1,FORM1                                     *C-49016
          BRANCH    FORM1,SUBA9000,SUBA9000,SUBA9000,SUBA9000,SUBA9000:
                          SUBA1000,SUBA9000,SUBA9000,SUBA1000
          GOTO      SUBA9000
.
SUBA1000  BRANCH    ROYFLAG,SUBA9000,SUBA2000,SUBA2000 * Doing ROY Calcs.
.
SUBA2000  MATCH     CCHGDATE,CHCSED
          GOTO      SUBA9000 IF LESS        * PRS2 end date < change date
.
          PACK      KEY10,AADMNO,EPISODNO
          CALL      RDPTRDE1                * Read the rehab file
          BRANCH    OVRCD,SUBA5000
.
          MATCH     "8",EPISCTYP
          GOTO      SUBA2900 IF EQUAL
.
          MATCH     "P ",EPISCTYP                                      *C-49016
          GOTO      SUBA2900 IF EQUAL
.
          PACK      KEY24,AADMNO,SP70
          CALL      RSPTFIM1
SUBA2100  CALL      RKPTFIM1
          BRANCH    OVRCD,SUBA2150
.
          MATCH     DAADMNO,PTFIVISN
          GOTO      SUBA2160 IF EQUAL
.
SUBA2150  MATCH     "K ",EPISCTYP
          IF        @EQUAL
            GOTO      SUBA2900
          ELSE
            GOTO      SUBA5100
          ENDIF
.
SUBA2160  MATCH     DAADMNO,PTFIVISN
          GOTO      SUBA5100 IF NOT EQUAL
.
          MATCH     "1",PTFIDELT
          GOTO      SUBA2100 IF EQUAL
.
          MATCH     ANSA,PTFITYPE
          GOTO      SUBA2100 IF NOT EQUAL
.
          CLEAR     ADMFIMSC
          MOVE      PTFIEATS,F1
          APPEND    F1,ADMFIMSC
          MOVE      PTFIGRMS,F1
          APPEND    F1,ADMFIMSC
          MOVE      PTFIBTHS,F1
          APPEND    F1,ADMFIMSC
          MOVE      PTFIUPBS,F1
          APPEND    F1,ADMFIMSC
          MOVE      PTFILWBS,F1
          APPEND    F1,ADMFIMSC
          MOVE      PTFITLTS,F1
          APPEND    F1,ADMFIMSC
          MOVE      PTFIBLMS,F1
          APPEND    F1,ADMFIMSC
          MOVE      PTFIBWMS,F1
          APPEND    F1,ADMFIMSC
          MOVE      PTFITBDS,F1
          APPEND    F1,ADMFIMSC
          MOVE      PTFITTLS,F1
          APPEND    F1,ADMFIMSC
          MOVE      PTFITBTS,F1
          APPEND    F1,ADMFIMSC
          MOVE      PTFILOCS,F1
          APPEND    F1,ADMFIMSC
          MOVE      PTFISTRS,F1
          APPEND    F1,ADMFIMSC
          MOVE      PTFICOMS,F1
          APPEND    F1,ADMFIMSC
          MOVE      PTFIEXPS,F1
          APPEND    F1,ADMFIMSC
          MOVE      PTFISCIS,F1
          APPEND    F1,ADMFIMSC
          MOVE      PTFIPRBS,F1
          APPEND    F1,ADMFIMSC
          MOVE      PTFIMEMS,F1
          APPEND    F1,ADMFIMSC
          RESET     ADMFIMSC
          REP       " 0",ADMFIMSC
.
          PACK      KEY24,AADMNO,SP70
          CALL      RSPTFIM1
SUBA2200  CALL      RKPTFIM1
          BRANCH    OVRCD,SUBA5200
.
          MATCH     DAADMNO,PTFIVISN
          GOTO      SUBA5200 IF NOT EQUAL
.
          MATCH     "1",PTFIDELT
          GOTO      SUBA2200 IF EQUAL
.
          MATCH     ANSD,PTFITYPE
          GOTO      SUBA2200 IF NOT EQUAL
.
          CLEAR     DSCFIMSC
          MOVE      PTFIEATS,F1
          APPEND    F1,DSCFIMSC
          MOVE      PTFIGRMS,F1
          APPEND    F1,DSCFIMSC
          MOVE      PTFIBTHS,F1
          APPEND    F1,DSCFIMSC
          MOVE      PTFIUPBS,F1
          APPEND    F1,DSCFIMSC
          MOVE      PTFILWBS,F1
          APPEND    F1,DSCFIMSC
          MOVE      PTFITLTS,F1
          APPEND    F1,DSCFIMSC
          MOVE      PTFIBLMS,F1
          APPEND    F1,DSCFIMSC
          MOVE      PTFIBWMS,F1
          APPEND    F1,DSCFIMSC
          MOVE      PTFITBDS,F1
          APPEND    F1,DSCFIMSC
          MOVE      PTFITTLS,F1
          APPEND    F1,DSCFIMSC
          MOVE      PTFITBTS,F1
          APPEND    F1,DSCFIMSC
          MOVE      PTFILOCS,F1
          APPEND    F1,DSCFIMSC
          MOVE      PTFISTRS,F1
          APPEND    F1,DSCFIMSC
          MOVE      PTFICOMS,F1
          APPEND    F1,DSCFIMSC
          MOVE      PTFIEXPS,F1
          APPEND    F1,DSCFIMSC
          MOVE      PTFISCIS,F1
          APPEND    F1,DSCFIMSC
          MOVE      PTFIPRBS,F1
          APPEND    F1,DSCFIMSC
          MOVE      PTFIMEMS,F1
          APPEND    F1,DSCFIMSC
          RESET     DSCFIMSC
          REP       " 0",DSCFIMSC
.
SUBA2900  MATCH     "999",PTRDCLSP
          IF        @EQUAL
            ADD       "1",SUBADEL           * Sub acute deletion record counter
            GOTO      SUBA3000
          ENDIF
.
          MATCH     CHCSST,EPIADATE
          IF        @LESS
            ADD       "1",SUBACOR           * Sub acute correct record counter
          ELSE
            ADD       "1",SUBANEW           * Sub acute new record counter
          ENDIF
.
SUBA3000  ADD       "1",RECCNT            * Increment total record count
.
          MOVE      SP3,BTHIDXAD
          MOVE      SP3,BTHIDXDS
.
SUBA3500  MOVE      SP8,ONSETDTE
          MATCH     SP8,PTRDODTE
          IF        !@EQUAL
            UNPACK    PTRDODTE,CCENT,CYEAR,CMON,CDAY
            PACK      ONSETDTE,CDAY,CMON,CCENT,CYEAR
            REP       " 0",ONSETDTE
          ENDIF
.
          MATCH     SP1,PTRDUSRF
          IF        @EQUAL
            MOVE      SITEID,PTRDUSRF       * Site id
          ENDIF
.
          MATCH     SP2,PTRDRGAA
          IF        !@EQUAL
            REP       " 0",PTRDRGAA
          ENDIF
.
          MATCH     SP2,PTRDRGAD
          IF        !@EQUAL
            REP       " 0",PTRDRGAD
          ENDIF
.
          MATCH     SP2,PTRDSRPC
          IF        !@EQUAL
            REP       " 0",PTRDSRPC
          ENDIF
.
          IF        PRERRFLG<>1
            GOTO       SUBA4500
          ENDIF
.
          MOVE      SP8,FASSDADM
          MATCH     SP8,PTRDFADT
          IF        !@EQUAL
            UNPACK    PTRDFADT,CCENT,CYEAR,CMON,CDAY
            PACK      FASSDADM,CDAY,CMON,CCENT,CYEAR
            REP       " 0",FASSDADM
          ENDIF
.
          MOVE      SP8,FASSDDCH
          MATCH     SP8,PTRDFDDT
          IF        !@EQUAL
            UNPACK    PTRDFDDT,CCENT,CYEAR,CMON,CDAY
            PACK      FASSDDCH,CDAY,CMON,CCENT,CYEAR
            REP       " 0",FASSDDCH
          ENDIF
.
          PACK      KEY7,PTRDIMPR,SP70
          CALL      RDPMIMP1
          IF        OVRCD=1
            MOVE      SP6,IMPAIRCD
          ELSE
            MOVE      PMIMHDPE,IMPAIRCD          * impairment code (HDP Equiv)
          ENDIF     
.
          PACK      PTRDCLSP,SP70
          PACK      PTRDARTR,SP70
.
          IF        MEDIUM<>1
            GOTO      SUBA4000
          ENDIF 
          CALL      VSUB1200              * validate 2012 sub acute fields
          WRITE     WORK,SEQ;S5,UNIQKEYL,EPIURNOL,BTHIDXAD:
                             BTHIDXDS,PTRDCLSP,ONSETDTE,PTRDARTR:
                             PTRDUSRF:
                             FASSDADM,FASSDDCH,IMPAIRCD,ADMFIMSC,DSCFIMSC
          GOTO      SUBA4500
.
SUBA4000  CALL      VSUB1200              * validate 2012 sub acute fields
          WRITE     WORK,SEQ;S5,UNIQKEYL,EPIURNOL,BTHIDXAD:    
                             BTHIDXDS,PTRDCLSP,ONSETDTE,PTRDARTR:
                             PTRDUSRF:
                             FASSDADM,FASSDDCH,IMPAIRCD,ADMFIMSC,DSCFIMSC;
.
SUBA4500  CALL      VSUB0000                * validate sub acute details
.
          COMPARE   "99999",RECCNT
          GOTO      SUBA9000 IF LESS        * Record counter < max no of recs
          GOTO      SUBA9500
.
SUBA5000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "### : Warning: there are no sub acute details for ":
                    "admission number ",AADMNO,", episode number ",EPISODNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG
          GOTO      SUBA9999
.
SUBA5100  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "### :Warning: there is no admission FIM score record for ":
                    "admission number ",AADMNO,", episode number ",EPISODNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG
          GOTO      SUBA9999
.
SUBA5200  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "### :Warning: there is no discharge FIM score record for ":
                    "admission number ",AADMNO,", episode number ",EPISODNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMWARN
          MOVE      ONE,WRNFLG
          GOTO      SUBA9999
.
SUBA9000  MOVE      ZERO,EXIT
          GOTO      SUBA9999
.
SUBA9500  MOVE      ONE,EXIT
SUBA9999  RETURN
+
.******************************************************************************
.*                                  VSUB1200                                  *
.*                         Validate 2012 sub acute details                    *
.******************************************************************************
VSUB1200  MATCH     "6 ",EPISCTYP    
          IF        !@EQUAL
            PACK      BTHIDXAD,SP70         * only send if care type = 6
            PACK      BTHIDXDS,SP70         * only send if care type = 6
          ENDIF
.
          MATCH     "R1",EPISCTYP
          IF        @EQUAL
            PACK      ONSETDTE,SP70         * send blank if R1
          ENDIF
          MATCH     "R2",EPISCTYP
          IF        @EQUAL
            PACK      ONSETDTE,SP70         * send blank if R2
          ENDIF
.
          MOVE      SP1,DIM1
          UNPACK    EPISCTYP,DIM1,DIM1A
          REP       "2-6-P-",DIM1
          MATCH     "-",DIM1                * check for 2,6,P
          IF        !@EQUAL
            PACK      IMPAIRCD,SP70         * send blank
          ENDIF
.
          MOVE      SP1,DIM1
          UNPACK    EPISCTYP,DIM1,DIM1A
          REP       "2-6-9-",DIM1
          CMATCH    "R",DIM1
          IF        @EQUAL
            MOVE      DIM1A,DIM1
            REP       "1-2-",DIM1
          ENDIF
          MATCH     "-",DIM1                * check for 2,6,9,R1,R2
          IF        !@EQUAL
            PACK      FASSDADM,SP70         * send blank
            PACK      FASSDDCH,SP70         * send blank
            PACK      ADMFIMSC,SP70         * send blank
            PACK      DSCFIMSC,SP70         * send blank
          ENDIF
.
VSUB1299  RETURN
+
.******************************************************************************
.*                                  VSUB0000                                  *
.*                         Validate sub acute details                         *
.******************************************************************************
VSUB0000  MOVE      SP1,DIM1
          UNPACK    EPISCTYP,DIM1,DIM1A                                *C-49016
.
          REP       "8191E1F1",DIM1
.
          MATCH     "1",DIM1
          GOTO      VSUB9999 IF NOT EQUAL
.
          MATCH     SP3,PTRDCLSP
          IF        !@EQUAL
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL   * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
            PRINT     "Error 293 : Clin Sub-Prog Present ",*N
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
          ENDIF
.
          MATCH     SP8,PTRDODTE
          IF        !@EQUAL
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL   * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
            PRINT     "Error 294 : Onset Date Present ",*N
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
          ENDIF
.
VSUB9999  RETURN
+
.******************************************************************************
.*                                  PALA0000                                  *
.*                            Get Palliative Details                          *
.******************************************************************************
PALA0000  PACK      FROMDATE,ADATE,SP70
          PACK      TODATE,DDATE,SP70
          PACK      KEY8,AADMNO
          CALL      RAPTPTD1                * Read a PTD file record
          COMPARE   ONE,OVRCD
          GOTO      PALA9000 IF NOT EQUAL   * Record already exists
.
          PACK      KEY10,AADMNO,EPISODNO
          CALL      RDPTRDE1                * Read the rehab file
          BRANCH    OVRCD,PALA9000
.
          MATCH     "MC",EPISCTYP           
          GOTO      PALA0500 IF EQUAL
.
          MATCH     "8 ",EPISCTYP          
          GOTO      PALA9000 IF NOT EQUAL
.
PALA0500  MATCH     CCHGDATE,CHCSED
          GOTO      PALA9000 IF LESS        * PRS2 end date < change date
.
          MATCH     SP2,PTRDRGAA
          IF        !@EQUAL
            RJUSTIFY  PTRDRGAA
            REP       " 0",PTRDRGAA         * RUG ADL on admission
          ENDIF
.
          MATCH     SP2,PTRDRGAD
          IF        !@EQUAL
            RJUSTIFY  PTRDRGAD
            REP       " 0",PTRDRGAD         * RUG ADL on discharge
          ENDIF
.
          MATCH     SP2,PTRDSRPC
          IF        !@EQUAL
            RJUSTIFY  PTRDSRPC
            REP       " 0",PTRDSRPC         * Source of referal to pall care
          ENDIF
.
          PACK      KEY5,CATpu,PTRDPOCA
          CALL      RDCODE1
          IF        OVRCD=1
            MOVE      SP1,ADMPHASC
          ELSE
            MOVE      THCSCOD,ADMPHASC      * Phase Of Care on Adm (HDP Cat pu)
          ENDIF
.
          MOVE      SP1,DISPHASC
.
          MOVE      SP1,PUSRFLAG            * user flag
.
          CALL      IFOC0000                * initialise phase of care vars
.
          MOVE      ZERO,PHASCNTR           * phase change count
          MOVE      EPISODNO,DIM2
          PACK      KEY18,AADMNO,EPISODNO,SP70
          CALL      RSPMFOC1
PALA1000  CALL      RKPMFOC1                * loop phase of care change file
          BRANCH    OVRCD,PALA3000
.
          MATCH     DAADMNO,PMFOVISN
          GOTO      PALA3000 IF NOT EQUAL
.
PALA1100  MATCH     DIM2,PMFOEPNO
          GOTO      PALA3000 IF NOT EQUAL
.
          IF        PHASCNTR>9 
            UNPACK    PMFOPCDT,CCENT,CYEAR,CMON,CDAY
            PACK      POCCDTFN,CDAY,CMON,CCENT,CYEAR
            PACK      POCRGLFN,PMFORAPC 
            PACK      KEY5,CATpu,PMFOPHOC,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              MOVE      SP1,DISPHASC
            ELSE
              MOVE      THCSCOD,DISPHASC    * Phase Of Care on Dis (HDP Cat pu)
            ENDIF
          ENDIF
.
          ADD       ONE,PHASCNTR            * get first 10 phase changes
.
          COMPARE   TEN2,PHASCNTR
          GOTO      PALA1000 IF NOT LESS              * (2013)
.
          MATCH     SP8,PMFOPCDT
          IF        !@EQUAL
            UNPACK    PMFOPCDT,CCENT,CYEAR,CMON,CDAY
            PACK      POCCDATP,CDAY,CMON,CCENT,CYEAR  * Phase Change Date
            REP       " 0",POCCDATP
          ELSE
            MOVE      SP8,POCCDATP
          ENDIF
.
          STORE     POCCDATP,PHASCNTR,POCCDAT1,POCCDAT2,POCCDAT3,POCCDAT4:
                                      POCCDAT5,POCCDAT6,POCCDAT7,POCCDAT8:
                                      POCCDAT9,POCCDT10
.
............. 0902601
.
          PACK      TODATE,PMFOPCDT
          CALL      PRS2LDAY
          MOVE      NBRDAYS,F2
          STORE     F2,PHASCNTR,POCLDAYA,POCLDAY1,POCLDAY2,POCLDAY3:
                                POCLDAY4,POCLDAY5,POCLDAY6,POCLDAY7:
                                POCLDAY8,POCLDAY9,POCLDAYT
          PACK      FROMDATE,TODATE
.
............. 0902601
          PACK      KEY5,CATpu,PMFOPHOC
          CALL      RDCODE1
          IF        OVRCD=1
            MOVE      SP1,POCPHOCP
          ELSE
            MOVE      THCSCOD,POCPHOCP      * Phase Of Care change
          ENDIF
.
          STORE     POCPHOCP,PHASCNTR,POCPHOC1,POCPHOC2,POCPHOC3,POCPHOC4:
                                      POCPHOC5,POCPHOC6,POCPHOC7,POCPHOC8:
                                      POCPHOC9,POCPOC10
.
          MOVE      PMFORAPC,POCRUGLP
          MATCH     SP2,POCRUGLP
          IF        !@EQUAL
            RJUSTIFY  POCRUGLP
            REP       " 0",POCRUGLP         * RUG ADL on phase change
          ENDIF
.
          STORE     POCRUGLP,PHASCNTR,POCRUGL1,POCRUGL2,POCRUGL3,POCRUGL4:
                                      POCRUGL5,POCRUGL6,POCRUGL7,POCRUGL8:
                                      POCRUGL9,POCRGL10
.
          CALL      VPOC0000                * validate phase of care details
.
          GOTO      PALA1000                * get next phase change
.
PALA3000  PACK     TODATE,DDATE
          CALL     PRS2LDAY
          IF       PHASCNTR=0
            MOVE     NBRDAYS,F2
            MOVE     F2,POCLDAYA
          ELSE
            ADD       ONE,PHASCNTR
            MOVE      NBRDAYS,F2
.
. If more than 10 phase of care changes, report all leave days after the
. 10th change in Phase of care Final leave days - POCLDAYF
.
            IF        PHASCNTR > 12
              MOVE      "12",PHASCNTR
            ENDIF
.
            STORE     F2,PHASCNTR,POCLDAYA,POCLDAY1,POCLDAY2,POCLDAY3:
                                  POCLDAY4,POCLDAY5,POCLDAY6,POCLDAY7:
                                  POCLDAY8,POCLDAY9,POCLDAYT,POCLDAYF
          ENDIF
.
          MOVE      SP70,POCDTPLC
          PACK      KEY8,AADMNO,SP70
          CALL      RDPMVX11
          IF        OVRCD=0
            MATCH     SP70,PMVXUDF9
            IF        !@EQUAL & !@EOS
              PACK      KEY5,CATlj,PMVXUDF9,SP70
              CALL      RDCODE1
              IF        OVRCD=0
                UNPACK    THCSCOD,DIM2
                PACK      POCDTPLC,DIM2,SP70
              ENDIF 
            ENDIF
          ENDIF 
.
          ADD       "1",RECCNT              * Increment total record count
.
          IF        PRERRFLG<>1
            GOTO       PALA4500
          ENDIF
.
          CALL      GTRIA000        * Get Triage Score on Adm PTRIAGSC
.
          IF        MEDIUM<>1
            GOTO      PALA4000
          ENDIF
          IF        PHASCNTR<11
            PACK      POCCDTFN,SP70           * (2013)
            PACK      POCRGLFN,SP70           * (2013)
          ENDIF
.
          REP       " 0",POCLDAYA
          REP       " 0",POCLDAY1
          REP       " 0",POCLDAY2
          REP       " 0",POCLDAY3
          REP       " 0",POCLDAY4
          REP       " 0",POCLDAY5
          REP       " 0",POCLDAY6
          REP       " 0",POCLDAY7
          REP       " 0",POCLDAY8
          REP       " 0",POCLDAY9
          REP       " 0",POCLDAYT
          REP       " 0",POCLDAYF
.
          CALL      VLPALD00      * Validate Palliative Leave Days Total
.
          BRANCH    ROYFLAG,PALA4500
.
          WRITE     WORK,SEQ;P5,UNIQKEYL,EPIURNOL,PTRDRGAA,PTRDRGAD,PTRDSRPC:
                                ADMPHASC,DISPHASC,POCCDAT1,POCPHOC1,POCRUGL1:
                                POCCDAT2,POCPHOC2,POCRUGL2,POCCDAT3,POCPHOC3:
                                POCRUGL3,POCCDAT4,POCPHOC4,POCRUGL4,POCCDAT5:
                                POCPHOC5,POCRUGL5,POCCDAT6,POCPHOC6,POCRUGL6:
                                POCCDAT7,POCPHOC7,POCRUGL7,POCCDAT8,POCPHOC8:
                                POCRUGL8,POCCDAT9,POCPHOC9,POCRUGL9,POCCDT10:
                                POCPOC10,POCRGL10,PUSRFLAG,POCCDTFN,POCRGLFN:
                                POCDTPLC,PTRIAGSC,POCLDAYA,POCLDAY1,POCLDAY2:
                                POCLDAY3,POCLDAY4,POCLDAY5,POCLDAY6,POCLDAY7:
                                POCLDAY8,POCLDAY9,POCLDAYT,POCLDAYF
          GOTO      PALA4500
.
PALA4000  BRANCH    ROYFLAG,PALA4500
.
          WRITE     WORK,SEQ;P5,UNIQKEYL,EPIURNOL,PTRDRGAA,PTRDRGAD,PTRDSRPC:
                                ADMPHASC,DISPHASC,POCCDAT1,POCPHOC1,POCRUGL1:
                                POCCDAT2,POCPHOC2,POCRUGL2,POCCDAT3,POCPHOC3:
                                POCRUGL3,POCCDAT4,POCPHOC4,POCRUGL4,POCCDAT5:
                                POCPHOC5,POCRUGL5,POCCDAT6,POCPHOC6,POCRUGL6:
                                POCCDAT7,POCPHOC7,POCRUGL7,POCCDAT8,POCPHOC8:
                                POCRUGL8,POCCDAT9,POCPHOC9,POCRUGL9,POCCDT10:
                                POCPOC10,POCRGL10,PUSRFLAG,POCCDTFN,POCRGLFN:
                                POCDTPLC,PTRIAGSC,POCLDAYA,POCLDAY1,POCLDAY2:
                                POCLDAY3,POCLDAY4,POCLDAY5,POCLDAY6,POCLDAY7:
                                POCLDAY8,POCLDAY9,POCLDAYT,POCLDAYF;
.
PALA4500  COMPARE   "99999",RECCNT
          GOTO      PALA9000 IF LESS        * Record counter < max no of recs
          GOTO      PALA9500
.
PALA9000  MOVE      ZERO,EXIT
          GOTO      PALA9999
.
PALA9500  MOVE      ONE,EXIT
PALA9999  RETURN
+
.******************************************************************************
.*                                  VLPALD00                                  *
.*        Validate Palliative Leave Days Total & Leave With Permission Total  *
.******************************************************************************
VLPALD00  MOVE      ZERO,DAYTOTL
          MOVE      ZERO,COUNTER
          MOVE      SP2,DIM2
.
.         Sum up the Palliative Leave Days
.
          WHILE     COUNTER < 12
            ADD       ONE,COUNTER
            LOAD      DIM2,COUNTER,POCLDAYA,POCLDAY1,POCLDAY2,POCLDAY3,POCLDAY4:
                                   POCLDAY5,POCLDAY6,POCLDAY7,POCLDAY8,POCLDAY9:
                                   POCLDAYT,POCLDAYF

            MOVE      DIM2,F2
            ADD       F2,DAYTOTL
          DO
.
          MOVE      ZERO,LEAVTOTL      * Total Leave with and without permission
          ADD       EPILVTOT,LEAVTOTL  * Leave with permission
          MOVE      ZERO,F3
          MOVE      EPILWPTL,F3     
          ADD       F3,LEAVTOTL        * Leave without permission
.
          COMPARE   DAYTOTL,LEAVTOTL
          GOTO      VLPALD99 IF EQUAL
.
.-------- Rejection message 740
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 740 : Palliative Leave Days not equal to Leave Day":
                    " Total :",DAYTOTL,"-",LEAVTOTL,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      VLPALD99
.
VLPALD99  RETURN
+
.******************************************************************************
.* GTRIA000                                                                   *
.* Get triage score on admission from patatraf.ptarcod1 for PTRIAGSC          *
.******************************************************************************
GTRIA000  PACK      KEY35,AURNO,DAADMNO,ATYPE021,SP70
          CALL      RSPTATR3
          CALL      RKPTATR3
          BRANCH    OVRCD,GTRIA800
.
          MATCH     AURNO,PTARURNO
          GOTO      GTRIA800 IF NOT EQUAL
.
          MATCH     DAADMNO,PTARVISN
          GOTO      GTRIA800 IF NOT EQUAL
.
          MATCH     ATYPE021,PTARTYPE
          GOTO      GTRIA800 IF NOT EQUAL
.
.         Display Error message if PTARCOD1 isnot between 0 and 100 or 999
          IF        DOYR2025=1
            MATCH     SP70,PTARCOD1
            GOTO      GTRIA900 IF EQUAL | @EOS
.
            MOVE      PTARCOD1,DIM3
            RJUSTIFY  DIM3
            REP       " 0",DIM3
.
            MATCH     "100",DIM3
            IF        @LESS | @EQUAL
              GOTO      GTRIA700  
            ELSE
              MATCH     "999",PTARCOD1
              IF        @EQUAL
                GOTO      GTRIA700 
              ELSE
                PRINT     "Error 725 : Invalid Triage Score on Admission":
                          " - [",DIM3,"] for Admission [",PTARVISN,"]",*N
                ADD       TWO,CLNO
                ADD       ONE,NUMERROR
                MOVE      ONE,PTERRFLG
                MOVE      DIM3,PTRIAGSC
                GOTO      GTRIA999
              ENDIF
            ENDIF
          ELSE
            MATCH     SP70,PTARCOD1
            GOTO      GTRIA800 IF EQUAL | @EOS     
.
            MOVE      PTARCOD1,PTRIAGSC
            GOTO      GTRIA999 
          ENDIF   
.
GTRIA700  RJUSTIFY  PTRIAGSC
          REP       " 0",PTRIAGSC
          MOVE      PTARCOD1,PTRIAGSC
          GOTO      GTRIA999
.          
GTRIA800  IF        DOYR2025=1
            CALL      CLPATATR
            MOVE      "999",PTRIAGSC
            GOTO      GTRIA999
          ELSE
            CALL      CLPATATR
            MOVE      "000",PTRIAGSC
            GOTO      GTRIA999
          ENDIF
.
GTRIA900  CALL      CLPATATR
          MOVE      "999",PTRIAGSC
          GOTO      GTRIA999
.
GTRIA999  RETURN
.
+
.******************************************************************************
.*                                  IFOC0000                                  *
.*                      Clear The Phase of Care Change Variables              *
.******************************************************************************
IFOC0000  UNPACK    SP70,POCCDAT1,POCPHOC1,POCRUGL1
          UNPACK    SP70,POCCDAT2,POCPHOC2,POCRUGL2
          UNPACK    SP70,POCCDAT3,POCPHOC3,POCRUGL3
          UNPACK    SP70,POCCDAT4,POCPHOC4,POCRUGL4
          UNPACK    SP70,POCCDAT5,POCPHOC5,POCRUGL5
          UNPACK    SP70,POCCDAT6,POCPHOC6,POCRUGL6
          UNPACK    SP70,POCCDAT7,POCPHOC7,POCRUGL7
          UNPACK    SP70,POCCDAT8,POCPHOC8,POCRUGL8
          UNPACK    SP70,POCCDAT9,POCPHOC9,POCRUGL9
          UNPACK    SP70,POCCDT10,POCPOC10,POCRGL10
          PACK      POCLDAYA,SP70
          PACK      POCLDAY1,SP70
          PACK      POCLDAY2,SP70
          PACK      POCLDAY3,SP70
          PACK      POCLDAY4,SP70
          PACK      POCLDAY5,SP70
          PACK      POCLDAY6,SP70
          PACK      POCLDAY7,SP70
          PACK      POCLDAY8,SP70
          PACK      POCLDAY9,SP70
          PACK      POCLDAYT,SP70
          PACK      POCLDAYF,SP70
IFOC9999  RETURN
+
.******************************************************************************
.*                                  VPOC0000                                  *
.*                         Validate phase of care details                     *
.******************************************************************************
VPOC0000  MATCH     SP70,PMFOPCDT
          GOTO      VPOC5000 IF NOT EQUAL   * blank poc change date ?
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "### :Error: Palliative Care : Phase of Care Change Date ":
                    " is blank ",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      VPOC9999
.
VPOC5000  MATCH     PMFOPCDT,ADATE
          GOTO      VPOC5100 IF NOT EQUAL              * poc date = adm date ?
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "### :Error: Palliative Care : Phase of Care Change Date =":
                    " Admission Date ",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      VPOC9999
.
VPOC5100  MATCH     SP70,DDATE
          GOTO      VPOC5200 IF EQUAL
.
          MATCH     PMFOPCDT,DDATE
          GOTO      VPOC5200 IF NOT EQUAL        * poc date is = disch date ?
.
          PACK      KEY5,ANSC,ANSC,ACARE
          CALL      RDCODE1
          IF         OVRCD<>1
            UNPACK    THCSCOD,DIM1
            TYPE      DIM1                    * Numeric?
            GOTO      VPOC5101 IF NOT EQUAL   * No; skip test
.
            MOVE      ZERO,FORM1
            MOVE      DIM1,FORM1
            IF        FORM1=8
              GOTO      VPOC5200              * Is a valid entry for Cat CC = 8
            ENDIF
          ENDIF
.
VPOC5101  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "### :Error: Palliative Care : Phase of Care Change Date =":
                    " Separation Date ",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      VPOC9999
.
VPOC5200  MATCH     PMFOPCDT,ADATE
          GOTO      VPOC9999 IF LESS                   * adm date < poc date ?
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "### :Error: Palliative Care : Phase of Care Change Date ":
                    "before Admission Date ",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
.
VPOC9999  RETURN
+
.******************************************************************************
.*                                  SADM0000              Called by: PRUN0000 *
.*                    Generate Data For A Single Admission                    *
.******************************************************************************
SADM0000  MOVE      ZERO,ADMDTFLG
          DISPLAY   *P1:23,*EF,"Extracting any current run included patients":
                    *P1:24,"Admission : ";
          MOVE      ZERO,DSPCNT
          PACK      KEY17,SP8,TWO,SP30
          CALL      RSPTPEI2                * Position on & read an exclusion/
SADM1000  CALL      RKPTPEI2                  inclusion file record
          BRANCH    OVRCD,SADM1500
.
          MATCH     SP70,PTPESTDT
          GOTO      SADM1500 IF NOT EQUAL   * Different start date
.
          PACK      KEY8,PTPEADMN,SP70
          CALL      RDMISS1                 * Read an admin file record
          BRANCH    OVRCD,SADM1000
.
          MATCH     "1",PTCNPRSM
          IF        @EQUAL
            PACK      KEY8,DPTPEADM,SP70
            CALL      RDPMVX11
            IF        OVRCD<>1
              MATCH     HOSPCODE,PMVXMHOS
              GOTO      SADM1000 IF NOT EQUAL
            ELSE
              PACK      KEY6,PTMIXWRD,SP70
              CALL      RDWARD1                 * Read a ward file record
              IF        OVRCD<>1
                MATCH     HOSPCODE,PTWDHOSN
                GOTO      SADM1000 IF NOT EQUAL
              ENDIF
            ENDIF                         
          ENDIF
.
SADM1100  COMPARE   PTPESTAT,THREE
          GOTO      SADM1000 IF EQUAL       * Don't want 'deleted'
.
          COMPARE   PTPESTAT,TWO
          IF        !@EQUAL
            COMPARE   PTPESTAT,FOUR
            GOTO      SADM1500 IF NOT EQUAL * Not 'included' or 'incl & deleted'
          ENDIF
.
          CALL      CHKYR000          * Check this should be in this years run
          BRANCH    EXIT,SADM1000
          CALL      VADM0000                * Validate & process admin details
          BRANCH    EXIT,SADM9500,SADM1000
          GOTO      SADM1000
.
SADM1500  PACK      KEY17,CHCSST,TWO,SP30
          CALL      RSPTPEI2                * Position on & read an exclusion/
SADM1600  CALL      RKPTPEI2                  inclusion file record
          BRANCH    OVRCD,SADM2000
.
          MATCH     PTPESTDT,CHCSST
          GOTO      SADM2000 IF NOT EQUAL   * Different start date
.
          PACK      KEY8,PTPEADMN,SP70
          CALL      RDMISS1                 * Read an admin file record
          BRANCH    OVRCD,SADM1600
.
          MATCH     "1",PTCNPRSM
          IF        @EQUAL
            PACK      KEY8,DPTPEADM,SP70
            CALL      RDPMVX11
            IF        OVRCD<>1
              MATCH     HOSPCODE,PMVXMHOS
              GOTO      SADM1600 IF NOT EQUAL
            ELSE
              PACK      KEY6,PTMIXWRD,SP70
              CALL      RDWARD1                 * Read a ward file record
              IF        OVRCD<>1
                MATCH     HOSPCODE,PTWDHOSN
                GOTO      SADM1600 IF NOT EQUAL
              ENDIF
            ENDIF
          ENDIF
.
          DISPLAY   *P1:23,*EL,"Extracting any current run included patients";
          MOVE      ZERO,DSPCNT
.
          COMPARE   PTPESTAT,THREE
          GOTO      SADM1600 IF EQUAL       * Don't want 'deleted'
.
          COMPARE   PTPESTAT,TWO
          IF        !@EQUAL
            COMPARE   PTPESTAT,FOUR
            GOTO      SADM2000 IF NOT EQUAL * Not 'included' or 'incl & deleted'
          ENDIF
.
          CALL      CHKYR000          * Check this should be in this years run
          BRANCH    EXIT,SADM1600
          CALL      VADM0000                * Validate & process admin details
          BRANCH    EXIT,SADM2000,SADM1600
          GOTO      SADM1600
.
SADM2000  PACK      KEY17,CHCSST,ONE,SP30
          CALL      RSPTPEI2                * Position on & read an exclusion/
          CALL      RKPTPEI2                  inclusion file record
          IF        OVRCD=1
            PACK      KEY17,Z70
            CALL      RSPTPEI2                * Position on & read an exclusion/
            CALL      RPPTPEI2                  inclusion file record
            BRANCH    OVRCD,SADM9000
            GOTO      SADM3000
          ENDIF
.
          MATCH     PTPESTDT,CHCSST
          GOTO      SADM9000 IF NOT EQUAL   * Different start date
.
          UNPACK    PTPESTDT,CCENT,CYEAR,CMON,CDAY
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
          CALL      DMYCON
.
          SUB       ONE,JULDAY              * Subtract 1 day the start date
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
          PACK      KEY8,CC,YY,MM,DD
          REP       " 0",KEY8
.
          CALL      RPPTPEI2                * Read back an excl/incl file rec
          BRANCH    OVRCD,SADM9000
.
SADM3000  DISPLAY   *P1:23,*EL,"Extracting any previous run excluded patients";
          MOVE      ZERO,DSPCNT
          MOVE      PTPESTDT,SPTPESTD
          PACK      KEY17,PTPESTDT,ONE,SP30
          CALL      RSPTPEI2                * Position on & read an exclusion/
SADM4000  CALL      RKPTPEI2                  inclusion file record
          BRANCH    OVRCD,SADM9000
.
          PACK      KEY8,PTPEADMN,SP70
          CALL      RDMISS1                 * Read an admin file record
          BRANCH    OVRCD,SADM4000
.
          MATCH     "1",PTCNPRSM
          IF        @EQUAL
            PACK      KEY8,DPTPEADM,SP70
            CALL      RDPMVX11
            IF        OVRCD<>1
              MATCH     HOSPCODE,PMVXMHOS
              GOTO      SADM4000 IF NOT EQUAL
            ELSE
              PACK      KEY6,PTMIXWRD,SP70
              CALL      RDWARD1                 * Read a ward file record
              IF        OVRCD<>1
                MATCH     HOSPCODE,PTWDHOSN
                GOTO      SADM4000 IF NOT EQUAL
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     PTPESTDT,SPTPESTD
          GOTO      SADM9000 IF NOT EQUAL   * Different start date
.
          COMPARE   ONE,PTPESTAT
          GOTO      SADM9000 IF NOT EQUAL   * Not an excluded patient
.
          PACK      KEY16,CHCSST,PTPEADMN,ONE                   *I-90216
          CALL      RDPTPEI1                * Read a PRS2 excl/incl    *I-90216
          COMPARE   ONE,OVRCD                                          *I-90216
          GOTO      SADM4000 IF NOT EQUAL   * Record exists, ignore    *I-90216
.
          CALL      CHKYR000          * Check this should be in this years run
          BRANCH    EXIT,SADM4000
          CALL      VADM0000                * Validate & process admin details
          BRANCH    EXIT,SADM9500,SADM4000
          GOTO      SADM4000
.
SADM9000  MOVE      ZERO,EXIT
          GOTO      SADM9999
.
SADM9500  MOVE      ONE,EXIT
SADM9999  RETURN
+
.******************************************************************************
.*                                  CHKYR000              Called by: SADM0000 *
.*                  Check this patpeiaf record should be in this years run    *
.******************************************************************************
CHKYR000  MOVE      ZERO,EXIT
.
          PACK      KEY8,PTPEADMN,SP70
          CALL      RDDSCH1
          BRANCH    OVRCD,CHKYR999
.
          MATCH     CHCSDTE,DDATE
          GOTO      CHKYR900 IF LESS      * disch date < this years start date
          GOTO      CHKYR999
.
CHKYR900  MOVE      ONE,EXIT
          GOTO      CHKYR999
.
CHKYR999  RETURN
+
.******************************************************************************
.*                                  UPEI0000              Called by: PRUN0000 *
.*                             Update patpeiaf file                           *
.******************************************************************************
UPEI0000  PACK      KEY16,SP70   
UPEI1000  CALL      RSPTPEI1
          CALL      RKPTPEI1
          BRANCH    OVRCD,UPEI9999
.
          PACK      SAVKEY16,PTPESTDT,DPTPEADM,SP70
          MATCH     SP70,PTPESTDT
          GOTO      UPEI9999 IF NOT EQUAL         * finished new records
.
          MATCH     "1",PTCNPRSM
          IF        @EQUAL
            PACK      KEY8,DPTPEADM,SP70
            CALL      RDPMVX11
            IF        OVRCD<>1
              MATCH     HOSPCODE,PMVXMHOS
              GOTO      UPEI1500 IF NOT EQUAL
            ELSE
              PACK      KEY8,DPTPEADM,SP70
              CALL      RDMISS1
              BRANCH    OVRCD,UPEI1500
              PACK      KEY6,PTMIXWRD,SP70
              CALL      RDWARD1                 * Read a ward file record
              IF        OVRCD<>1
                MATCH     HOSPCODE,PTWDHOSN
                GOTO      UPEI1500 IF NOT EQUAL
              ENDIF
            ENDIF
          ENDIF
.
          PACK      KEY16,PTPEADMN,CHCSST,SP70    * already exists?
          CALL      RDPTPEI3
          BRANCH    OVRCD,UPEI2000
.
          PACK      KEY16,SP8,PTPEADMN,SP70
          CALL      DEPTPEI1
.
UPEI1500  PACK      KEY16,SAVKEY16
          GOTO      UPEI1000
.
UPEI2000  PACK      KEY16,SP8,PTPEADMN,SP70
          CALL      RDPTPEI1
          BRANCH    OVRCD,UPEI0000
.
          MOVE      CHCSST,PTPESTDT               * update date
          CALL      UPPTPEI1
.
          PACK      KEY16,SAVKEY16
          GOTO      UPEI1000
.
UPEI9999  RETURN
+
.******************************************************************************
.*                                  VADM0000              Called by: SADM0000 *
.*                Validate Data For Excluded/Included Admission               * 
.******************************************************************************
VADM0000  MOVE      ZERO,EXIT
          ADD       ONE,DSPCNT
          IF        DSPCNT%20=1
            DISPLAY   *P13:24,*V2LON,PTPEADMN;
          ENDIF
.
          PACK      KEY8,PTPEADMN
          CALL      RDMISS1                 * Read an admin file record
          IF        OVRCD=1
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
            PRINT     "Error ### : Invalid admission number ",PTPEADMN:
                      " in PRS2 Exclusion/Inclusion file.  ",*N
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
            GOTO      VADM9000
          ENDIF
.
          CALL      BRDR0000                 * patient is a boarder ?
          BRANCH    OVRCD,VADM9900           * yes, ignore
.
          CALL      EXNB0000                  * Excluded newborn
          BRANCH    EXIT,VADM9900
.
          MATCH     ADATE,CHCSED                 * Admitted after end date
          IF        @LESS
            PRINT     "Error ### : Invalid admission number ",PTPEADMN:
                      " in PRS2 Exclusion/Inclusion file.  ",*N
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
            GOTO      VADM9000
          ENDIF
.
          PACK      KEY8,AURNO
          CALL      RDMAST1                 * Read a master file record
          IF        OVRCD=1
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
            PRINT     "Error ### : Patient has an invalid U/R number from the PRS2 ":
                      "Exclusion/Inclusion file.  Admission number ":
                      AADMNO,*N
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
            GOTO      VADM9000
          ENDIF
.
          PACK      KEY8,AURNO
          CALL      RDPMPX21                * Read a PMI extension file record
          IF        OVRCD=1
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
            PRINT     "Error ### : Patient has an invalid U/R number from the PRS2 ":
                      "Exclusion/Inclusion file.  Admission number ":
                      AADMNO,*N
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
            GOTO      VADM9000
          ENDIF
.
          PACK      KEY8,AADMNO
          CALL      RDVISA1                 * Read a visit file record
          IF        OVRCD=1
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
            PRINT     "Error ### : Missing visit file record for admission ",AADMNO:
                      " from the PRS2 Exclusion/Inclusion file.",*N
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
            GOTO      VADM9000
          ENDIF
.
.
          PACK      KEY8,AADMNO
          CALL      RDPMVX11                * Read a visit extension file record
          IF        OVRCD=1
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS  * Line count >= 60
.
            PRINT     "Error ### : Missing visit extension file record for ":
                      "admission ",AADMNO," from the PRS2 Exclusion/Inclusion ":
                      "file.",*N
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
            GOTO      VADM9000
          ENDIF
.
          CALL      GDET0000
          MOVE      ZERO,ADMDTFLG
.
          MATCH     SP3,ATYPE
          GOTO      VADM3000 IF EQUAL       * Blank admin type
.
          PACK      KEY5,ANSA,SP1,ATYPE
          CALL      RDCODE1                 * Read a codes file record
          BRANCH    OVRCD,VADM3000
.
          MATCH     "B",TCINDC3
          GOTO      VADM3000 IF NOT EQUAL   * Not a boarder
.
          COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error ### : Patient is a boarder.  Admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      VADM9000
.
VADM3000  BRANCH    ASTAT,VADM3100,VADM4000,VADM4000,VADM4000,VADM3500
.
VADM3100  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error ### : Patient is a pre-admission.  Admission number ":
                    AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      VADM9000
.
VADM3500  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error ### : Admission number is cancelled.  Admission number ":
                    AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      VADM9000
.
VADM4000  CALL      CLPATDSC                * Clear discharge file variables
          PACK      KEY8,AADMNO
          CALL      RDDSCH1                 * Read a disch file record
          MOVE      DDATE,ICDRDDTE          * Used for reading ICD files
.
VADM5000  MOVE      ONE,FLAGSING            * Processing single adm flag - yes
          CALL      GAEP0000                * Get all episodes for admission
          MOVE      ZERO,FLAGSING           * Processing single adm flag - no
          BRANCH    EXIT,VADM9000,VADM9500
          BRANCH    PTERRFLG,VADM9000
.
          CALL      GSCD0000                * Get single patient coding
          BRANCH    EXIT,VADM9500
.
VADM9000  MOVE      ZERO,EXIT
          GOTO      VADM9999
.
VADM9500  MOVE      ONE,EXIT
          GOTO      VADM9999
.
VADM9900  MOVE      TWO,EXIT
VADM9999  RETURN
+
.******************************************************************************
.*                                  RPRN0000                                  *
.*   Print the Recons  Record Header for Edit Report     called by : PRUN0000 *
.******************************************************************************
RPRN0000  PRINT     *N
          CALL      UND132                  * Print underline
          PRINT     *N,"Reconciled Previous YTD Errors"
.
RPRN9999  RETURN
.******************************************************************************
.*                                  TPRN0000                                  *
.*   Print the Trailer Record Header for Edit Report     called by : PRUN0000 *
.******************************************************************************
TPRN0000  PRINT     *N                   
          CALL      UND132                  * Print underline
          PRINT     *N,"Trailer Errors"
.
TPRN9999  RETURN
+
.******************************************************************************
.*   RECO0000                                            called by:  PRUN0000 *
.*   Reconsile Data bewtween patptdaf & patytdaf and the IBA patient system   *
.******************************************************************************
RECO0000  CALL      RPRN0000                * Reoncile print errors
          DISPLAY   *P1:23,*EF,"Re-conciling current YTD data";
.
          MATCH     CHCSST,SFINYEAR
          GOTO      RECO9000 IF EQUAL       * 1st Period for the Year
.
          CALL      STRY0000                * Set Rest of Year Variables
          CALL      CRAT0000                * Create Temp Admissions file
          CALL      LODT0000                * Build Temp Adms b/w sfinyr & sst
          CALL      SPCT0000                * Set percent Variables
          CALL      CROY0000                * Create Temp Admissions file
.
          MOVE      ZERO,DSPCNT
          DISPLAY   *P1:24,*EL,"Admission : ";
          MOVE      ONE,ROYFLAG             * Doing Rest-of-Year now
          MOVE      SP20,KEY18
          CALL      RSPRTMP1                * position at start of temp file
RECO1000  CALL      RKPRTMP1                * read next record
          BRANCH    OVRCD,RECO2000
.
          ADD       ONE,DSPCNT
          IF        DSPCNT%20=1
            DISPLAY   *P13:24,*V2LON,XADMN;
          ENDIF
.
          PACK      KEY8,XADMN
          CALL      SDAT0000                * Setup admin & disch data
          BRANCH    EXIT,RECO1000
.
          CALL      GAEP0000
          GOTO      RECO1000
.
. ------- Send Episode data for all Changed Admissions
RECO2000  BRANCH    ERRFLG,RECO8000         * Don't Update if errors exist
          DISPLAY   *P1:14,*EF,*P1:23,"Extracting current YTD patients with ":
                    "changed data",*P1:24,"Admission : ";
          MOVE      TWO,ROYFLAG
          MOVE      SP8,KEY8
          CALL      RSTMROY1
RECO3000  CALL      RKTMROY1
          BRANCH    OVRCD,RECO4000
.
          ADD       ONE,DSPCNT
          IF        DSPCNT%20=1
            DISPLAY   *P13:24,*V2LON,ROYADMN;
          ENDIF
.
          PACK      KEY8,ROYADMN
          CALL      SDAT0000                * Setup admin & disch data
          BRANCH    EXIT,RECO3000
.

          CALL      GAEP0000                * Get all episode data for patient
          CALL      GSCD0000                * Get single patient coding
          GOTO      RECO3000
.
. ----- Loop thru YTD file & check to see if any cancelled admissions -----
.
RECO4000  DISPLAY   *P1:23,*EF,"Processing current YTD deleted admissions":
                    *P1:24,"Admission : ";
.
          CALL      RCRP0000                 * Restore Current Run Parameters
.
          MOVE      SP8,KEY8
          CALL      RSPTYTD1                * Position on & read a YTD file
RECO5000  CALL      RKPTYTD1                  record
          BRANCH    OVRCD,RECO8000
.
          ADD       ONE,DSPCNT
          IF        DSPCNT%20=1
            DISPLAY   *P13:24,*V2LON,PTYDADMN;
          ENDIF
.
          MATCH     SP8,PTYDDTDL
          GOTO      RECO5000 IF EQUAL       * Patient not deleted
.
          MATCH     CHCSST,PTYDDTDL
          GOTO      RECO5000 IF LESS        * Date deleted < start date, ignore
.
          ADD       "1",PEPIDEL
          GOTO      RECO5000
.
RECO8000  CALL      RCRP0000                 * Restore Current Run Parameters
.
RECO9000  MOVE      ZERO,EXIT
RECO9999  RETURN
.******************************************************************************
.*   PYRC0000                                            called by:  PRUN0000 *
.*   Previous Year Reconciliation from patytd(YYprevious) file                *
.******************************************************************************
PYRC0000  MOVE      ONE,PYTDFLAG            * I CAR 43118
          COMPARE   FALSE,PREEXIST
          GOTO      PYRC9000 IF EQUAL       * No Previous YTD File exists
.
          CALL      CIJA0000                * Check if July or August
          BRANCH    EXIT,PYRC9000           * Not July or August
.
          CALL      RPRN0000                * Reoncile print errors
          DISPLAY   *P1:23,*EF,"Re-conciling previous YTD data";
.
          MATCH     CHCSST,SFINYEAR
          GOTO      PYRC9000 IF EQUAL       * 1st Period for the Year
.
          CALL      STPY0000                * Set Rest of Year Variables
          CALL      CRAT0000                * Create Temp Admissions file
          CALL      LODT0000                * Build Temp Adms b/w sfinyr & sst
          CALL      SPCT0000                * Set percent Variables
          CALL      CROY0000                * Create Temp Admissions file
.
          MOVE      ZERO,DSPCNT
          DISPLAY   *P1:24,*EL,"Admission : ";
          MOVE      ONE,ROYFLAG             * Doing Rest-of-Year now
          MOVE      SP20,KEY18
          CALL      RSPRTMP1                * position at start of temp file
PYRC1000  CALL      RKPRTMP1                * read next PYRCrd
          BRANCH    OVRCD,PYRC2000
.
          ADD       ONE,DSPCNT
          IF        DSPCNT%20=1
            DISPLAY   *P13:24,*V2LON,XADMN;
          ENDIF
.
          PACK      KEY8,XADMN
          CALL      SDAT0000                * Setup admin & disch data
          BRANCH    EXIT,PYRC1000
.
          CALL      GAEP0000                * Get all episode data for patient
          GOTO      PYRC1000
.
. ------- Send Episode data for all Changed Admissions
PYRC2000  BRANCH    ERRFLG,PYRC8000         * Don't Update if errors exist
          DISPLAY   *P1:14,*EF,*P1:23,"Extracting previous YTD patients with ":
                    "changed data",*P1:24,"Admission : ";
          MOVE      THREE,ROYFLAG
          MOVE      SP8,KEY8
          CALL      RSTMROY1
PYRC3000  CALL      RKTMROY1
          BRANCH    OVRCD,PYRC4000
.
          ADD       ONE,DSPCNT
          IF        DSPCNT%20=1
            DISPLAY   *P13:24,*V2LON,ROYADMN;
          ENDIF
.
          PACK      KEY8,ROYADMN
          CALL      SDAT0000                * Setup admin & disch data
          BRANCH    EXIT,PYRC3000
.
          CALL      GAEP0000
          CALL      GSCD0000                * Get single patient coding
          GOTO      PYRC3000
.
. ----- Loop thru YTD file & check to see if any cancelled admissions -----
.
PYRC4000  DISPLAY   *P1:23,*EF,"Processing previous YTD deleted admissions":
                    *P1:24,"Admission : ";
          MOVE      SP8,KEY8
          CALL      RSPTYTD1                * Position on & read a YTD file
PYRC5000  CALL      RKPTYTD1                  record
          BRANCH    OVRCD,PYRC8000
.
          ADD       ONE,DSPCNT
          IF        DSPCNT%40=1
            DISPLAY   *P13:24,*V2LON,PTYDADMN;
          ENDIF
.
          MATCH     SP8,PTYDDTDL
          GOTO      PYRC5000 IF EQUAL       * Patient not deleted
.
          MATCH     CHCSST,PTYDDTDL
          GOTO      PYRC5000 IF LESS        * Date deleted < start date, ignore
.
          ADD       "1",PEPIDEL
          GOTO      PYRC5000
.
PYRC8000  CALL      RCRP0000                 * Restore Current Run Parameters
.
PYRC9000  MOVE      ZERO,EXIT
          MOVE      ZERO,PYTDFLAG            * I CAR 43118
PYRC9999  RETURN
.******************************************************************************
.*   CIJA0000                                            called by:  PRUN0000 *
.*   Check if July or August Run   return exit = 1 if not in July/August      *
.******************************************************************************
CIJA0000  MOVE      TRUE,EXIT
          UNPACK    CHCSED,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,FORM2
.
          COMPARE   SEVEN,FORM2    
          GOTO      CIJA9999 IF LESS
.
          COMPARE   NINE,FORM2
          GOTO      CIJA9999 IF NOT LESS
.
          MOVE      FALSE,EXIT
.
CIJA9999  RETURN
.******************************************************************************
.*   SDAT0000                                            called by : RECO0000 *
.*   Set up Admission & Discharge data                                        *
.******************************************************************************
SDAT0000  MOVE      FALSE,EXIT
          CALL      RDMISS1
          BRANCH    OVRCD,SDAT9000
.
          CALL      BRDR0000                 * patient is a boarder ?
          BRANCH    OVRCD,SDAT9000           * yes, ignore
.
          CALL      EXNB0000                  * Excluded newborn
          BRANCH    EXIT,SDAT9000
.
          PACK      KEY8,AURNO
          CALL      RDMAST1
          BRANCH    OVRCD,SDAT9000
.
          PACK      KEY8,AURNO
          CALL      RDPMPX21                * Read a PMI extension file record
          BRANCH    OVRCD,SDAT9000
.
          PACK      KEY8,AADMNO
          CALL      RDVISA1                 * Read a visit file record
          BRANCH    OVRCD,SDAT9000
.
          PACK      KEY8,AADMNO
          CALL      RDPMVX11                * Read a visit extension file record
          BRANCH    OVRCD,SDAT9000
.
          CALL      CLPATDSC                * Clear discharge file variables
          PACK      KEY8,AADMNO
          CALL      RDDSCH1
.         BRANCH    OVRCD,SDAT9000          * I CAR 43118
          GOTO      SDAT9999
.
SDAT9000  MOVE      TRUE,EXIT
.
SDAT9999  RETURN
.******************************************************************************
.*   SPCT0000                                            called by : RECO0000 *
.*   Set Percent Variables                                                    *
.******************************************************************************
SPCT0000  MOVE      TOTRECS,TMPSIZE
.
          COMPARE   "51",TOTRECS
          GOTO      SPCT1000 IF LESS
.
          MOVE      "50",TMPSIZE
.
SPCT1000  MOVE      TOTRECS,TMPRECS
          MOVE      TMPRECS,TMPFRAC
          DIV       TMPSIZE,TMPFRAC
          MOVE      TMPFRAC,TOTFRAC          * Total Thus far
.
          MOVE      "0",TMPCOUNT
          MOVE      "80",FORM2
          SUB       TMPSIZE,FORM2
          DIV       "2",FORM2
          SUB       "1",FORM2
          MOVE      FORM2,TMPCOLST
          MOVE      "80",TMPCOLEN
          SUB       TMPCOLST,TMPCOLEN
          SUB       "1",TMPCOLEN
.
          DISPLAY   *P1:14,*EL,*PTMPCOLST:14,*V2LON,"% of Records Reconciled:"
          DISPLAY   *P1:15,*EL,*PTMPCOLST:15,*V2LON,"[",*PTMPCOLEN:15,"]"
          ADD       "1",TMPCOLST
.
SPCT9999  RETURN
.******************************************************************************
.*   STRY0000                                            called by : RECO0000 *
.*   Store Rest of Year Variables and reset to period to SFINYEAR-CHCSST      *
.******************************************************************************
STRY0000  MOVE      EPLUS1,SAVEDTP1          * Save Current Variables
          MOVE      CHCSST,SAVECSST          * Save Current Variables
          MOVE      CHCSED,SAVECSED          * Save Current Variables
.
          MOVE      CHCSST,EPLUS1
          MOVE      EPLUS1,TEMPDATE
          CALL      SUB10000                 * Subtract 1 day from date
          MOVE      TEMPDATE,CHCSED          *
          MOVE      TEMPDATE,ENDDATE
          MOVE      SFINYEAR,CHCSST          * Set Start of Run
.
STRY9999  RETURN
.******************************************************************************
.*   STPY0000                                            called by : RECO0000 *
.*   Set Previous Year Variables for the reoonciliating of the previous years *
.*   data if the run date is in July or August and a previous YTD reco. file  *
.*   actually exists.                                                         *
.******************************************************************************
STPY0000  MOVE      EPLUS1,SAVEDTP1          * Save Current Variables
          MOVE      CHCSST,SAVECSST          * Save Current Variables
          MOVE      CHCSED,SAVECSED          * Save Current Variables
.
          MOVE      SFINYEAR,EPLUS1
          MOVE      EPLUS1,TEMPDATE
          CALL      SUB10000                 * Subtract 1 day from date
          MOVE      TEMPDATE,CHCSED          *
          MOVE      TEMPDATE,ENDDATE
          UNPACK    SFINYEAR,CCENT,CYEAR,CMON,CDAY
          MOVE      CYEAR,FORM2
          SUB       "1",FORM2
          MOVE      FORM2,CYEAR
          PACK      SFINYEAR,CCENT,CYEAR,CMON,CDAY
          REP       " 0",SFINYEAR            * Set Start of Run
.
STPY9999  RETURN
.******************************************************************************
.*   RCRP0000                                            called by : RECO0000 *
.*   Restore Current Run Parameters                                           *
.******************************************************************************
RCRP0000  MOVE      SAVEDTP1,EPLUS1          * Restore Current Variables
          MOVE      SAVEDTP1,ENDDATE         * Restore Current Variables
          MOVE      SAVECSST,CHCSST          * Restore Current Variables
          MOVE      SAVECSED,CHCSED          * Restore Current Variables
.
RCRP9999  RETURN
.******************************************************************************
.*   ADD10000                                            called by : RECO0000 *
.*   Add one day to the end date                                              *
.******************************************************************************
ADD10000  UNPACK    TEMPDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CCENT,CC
          MOVE      CYEAR,YY 
          MOVE      CMON,MM
          MOVE      CDAY,DD
          CALL      DMYCON
          ADD       ONE,JULDAY                   * increment JULDAY by 1
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
          PACK      TEMPDATE,CC,YY,MM,DD
          REP       " 0",TEMPDATE
.
ADD19999  RETURN
.******************************************************************************
.*   SUB10000                                            called by : RECO0000 *
.*   Subtract one day from the end date                                       *
.******************************************************************************
SUB10000  UNPACK    TEMPDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CCENT,CC
          MOVE      CYEAR,YY 
          MOVE      CMON,MM
          MOVE      CDAY,DD
          CALL      DMYCON
          SUB       ONE,JULDAY                   * increment JULDAY by 1
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
          PACK      TEMPDATE,CC,YY,MM,DD
          REP       " 0",TEMPDATE
.
SUB19999  RETURN
+
.******************************************************************************
.*                                  GTRL0000                                  *
.*   generate Trailer Record for the transmission file   called by : PRUN0000 *
.******************************************************************************
GTRL0000  DISPLAY   *P1:23,*EF;
.
          CALL      TPRN0000                * Print Trailer Header
          CALL      CLSV0000                * Clear all save variables
          CALL      GMTD0000                * Get MTD data
          CALL      GYTD0000                * Get YTD data
.
          IF        PTCNHOSP=1
            CALL      T2PU0000              * Write T2 for public hospitals
            CALL      U2PU0000              * Write U2 for public hospitals
          ELSE
            CALL      T2PR0000              * Write T2 for private hospitals
            CALL      U2PR0000              * Write U2 for private hospitals
          ENDIF
.
GTRL9000  MOVE      ZERO,EXIT
GTRL9999  RETURN
+
.******************************************************************************
.*                                  CLSV0000              Called by: GTRL0000 *
.*                      Clear The Trailer Save Variables                      *
.******************************************************************************
CLSV0000  MOVE      ONE,FORM2
CLSV1000  STORE     ZERO,FORM2,SAVEADMN,SAVEMADM,SAVEMSEP,SAVEMSTS,SAVEMLVE:
                               SAVEMINH,SAVEMBED,SAVEMHAS,SAVEMHAB,SAVEMPAS:
                               SAVEMPAB,SAVEMHNS,SAVEMHNB,SAVEMPNS,SAVEMPNB:
                               SAVEMH5S,SAVEMH5B,SAVEMP5S,SAVEMP5B,SAVEMCOS:
                               SAVEMCOB,SAVEMCNS,SAVEMCNB,SAVEMIES,SAVEMIEB:
                               SAVEMINS,SAVEMINB,SAVEMHCS,SAVEMHCB,SAVEMPCS:
                               SAVEMPCB,SAVEMHAT,SAVEMPAT,SAVEMCOT,SAVEMIET:
                               SAVEMHNT,SAVEMPNT,SAVEMH5T,SAVEMP5T,SAVEMHCT:
                               SAVEMPCT,SAVEMCNT,SAVEMINT,SAVEMHSD,SAVEMPSD:
                               SAVEMCSD,SAVEMISD,SAVEMHCD,SAVEMPCD,SAVEYADM:
                               SAVEYSEP,SAVEYSTS,SAVEYBED,SAVEYHAS,SAVEYHAB:
                               SAVEYPAS,SAVEYPAB,SAVEYHNS,SAVEYHNB,SAVEYPNS:
                               SAVEYPNB,SAVEYH5S,SAVEYH5B,SAVEYP5S,SAVEYP5B:
                               SAVEYCOS,SAVEYCOB,SAVEYCNS,SAVEYCNB,SAVEYIES:
                               SAVEYIEB,SAVEYINS,SAVEYINB,SAVEYHCS,SAVEYHCB:
                               SAVEYPCS,SAVEYPCB,SAVEYHAT,SAVEYPAT,SAVEYCOT:
                               SAVEYIET,SAVEYHNT,SAVEYPNT,SAVEYH5T,SAVEYP5T:
                               SAVEYHCT,SAVEYPCT,SAVEYCNT,SAVEYINT,SAVEYHSD:
                               SAVEYPSD,SAVEYCSD,SAVEYISD,SAVEYHCD,SAVEYPCD:
                               SAVEFORM
          ADD       ONE,FORM2
          COMPARE   "97",FORM2
          GOTO      CLSV1000 IF LESS
.
CLSV9000  MOVE      ZERO,EXIT
CLSV9999  RETURN
+
.******************************************************************************
.*                                  GMTD0000              Called by: GTRL0000 *
.*                   Accumulate MTD Data Into Save Variables                  *
.******************************************************************************
GMTD0000  MOVE      ZERO,DSPCNT
          DISPLAY   *P1:23,*EF,"Accumulating MTD trailer statistics":
                    *P1:24,"Admission : ";
          MOVE      SP8,KEY8
          CALL      RSPTMTD1                * Position on & read a MTD file
GMTD1000  CALL      RKPTMTD1                  record
          BRANCH    OVRCD,GMTD2000
.
          MATCH     "1",PTCNPRSM
          IF        @EQUAL
            MATCH     HOSPCODE,PTMDHOSP
            GOTO      GMTD1000 IF NOT EQUAL
          ENDIF
.
          ADD       ONE,DSPCNT
          IF        DSPCNT%40=1
            DISPLAY   *P13:24,*V2LON,PTMDADMN;
          ENDIF
.
          PACK      KEY8,PTMDADMN,SP70
          CALL      RDPTYTD1
          BRANCH    OVRCD,GMTD1500
.
          MATCH     SP8,PTYDDTDL
          GOTO      GMTD1500 IF EQUAL       * Patient not deleted
          GOTO      GMTD1000
.
....      MATCH     CHCSST,PTYDDTDL
....      GOTO      GMTD1000 IF LESS        * Date deleted < start date, ignore
.
GMTD1500  CALL      ADMS0000                * Add MTD to save variables
          GOTO      GMTD1000
.
GMTD2000  CALL      MVSM0000                * Move save to month variables
          GOTO      GMTD9000
.
GMTD9000  MOVE      ZERO,EXIT
GMTD9999  RETURN
+
.******************************************************************************
.*                                  GYTD0000              Called by: GTRL0000 *
.*                   Accumulate YTD Data Into Save Variables                  *
.******************************************************************************
GYTD0000  MOVE      ZERO,DSPCNT
          DISPLAY   *P1:23,*EF,"Accumulating YTD trailer statistics":
                    *P1:24,"Admission : ";
          MOVE      SP8,KEY8
          CALL      RSPTYTD1                * Position on & read a YTD file
GYTD1000  CALL      RKPTYTD1                  record
          BRANCH    OVRCD,GYTD2000
.
          MATCH     "1",PTCNPRSM
          IF        @EQUAL
            MATCH     HOSPCODE,PTYDHOSP
            GOTO      GYTD1000 IF NOT EQUAL
          ENDIF
.
          ADD       ONE,DSPCNT
          IF        DSPCNT%40=1
            DISPLAY   *P13:24,*V2LON,PTYDADMN;
          ENDIF
.
          MATCH     SP8,PTYDDTDL
          GOTO      GYTD1000 IF NOT EQUAL   * Patient deleted, ignore
.
          CALL      ADYS0000                * Add YTD to save variables
          GOTO      GYTD1000
.
GYTD2000  MOVE      SP8,KEY8
          CALL      RSPTPTD1                * Position on & read a PTD file
GYTD3000  CALL      RKPTPTD1                  record
          BRANCH    OVRCD,GYTD4000
.
          ADD       ONE,DSPCNT
          IF        DSPCNT%40=1
            DISPLAY   *P13:24,*V2LON,PTPDADMN;
          ENDIF
.
          MATCH     "1",PTCNPRSM
          IF        @EQUAL
            MATCH     HOSPCODE,PTPDHOSP
            GOTO      GYTD3000 IF NOT EQUAL
          ENDIF
.
          CALL      ADPS0000                * Add PTD to save variables
          GOTO      GYTD3000
.
GYTD4000  CALL      MVSY0000                * Move save to year variables
.
GYTD9000  MOVE      ZERO,EXIT
GYTD9999  RETURN
+
.******************************************************************************
.*                                  T2PU0000              Called by: GTRL0000 *
.*                        Write T2 For Public Hospitals                       *
.******************************************************************************
T2PU0000  PACK      KEY2,T5,SP70
          PACK      KEY56,PTCNHCOD,RECCNT,PEPINEW,PEPICOR,PEPIDEL:
                          DIAGNEW,DIAGCOR,DIAGDEL,DVANEW,DVACOR:
                          DVADEL,SUBANEW,SUBACOR,SUBADEL
          REP       " 0",KEY56
.
          PACK      KEY68,PTCNHCOD,RECCNT,PEPINEW,PEPICOR,PEPIDEL:
                          DIAGNEW,DIAGCOR,DIAGDEL,DVANEW,DVACOR:
                          DVADEL,SUBANEW,SUBACOR,SUBADEL,PALANEW:
                          PALACOR,PALADEL
          REP       " 0",KEY68          
.
          PACK      KEY45,PTMDMADM,PTMDMSEP,PTMDMSTS,PTMDMLVE,PTMDMINH:
                          PTMDMBED,PTYDYADM,PTYDYSEP,PTYDYSTS,PTYDYBED
          REP       " 0",KEY45
.
          PACK      KEY90,PTMDMHAS,PTMDMHAB,PTMDMPAS,PTMDMPAB:
                          PTMDMCOS,PTMDMCOB,PTMDMIES,PTMDMIEB:
                          PTMDMH5S,PTMDMH5B,PTMDMHNS,PTMDMHNB:
                          PTMDMP5S,PTMDMP5B,PTMDMPNS,PTMDMPNB:
                          PTMDMCNS,PTMDMCNB,PTMDMINS,PTMDMINB
          REP       " 0",KEY90
.
          PACK      KEY47,PTMDMHSD,PTMDMPSD,PTMDMCSD,PTMDMISD,PTMDMUEP:
                          PTMDMUBD,SP20,SP4
          REP       " 0",KEY47
.
          PACK      KEY35,PTMDMHSD,PTMDMPSD,PTMDMCSD,PTMDMISD,PTMDMUEP:
                          PTMDMUBD,PTMDMOPS,PTMDMOPB,SP7
          REP       " 0",KEY35          
.
          MATCH     "1",PTCNGNTR        * not sending trailer stats
          IF        @EQUAL
            IF        PRERRFLG=1
              IF        MEDIUM=1
                PACK      KEY35,SP70
                WRITE     WORK,SEQ;KEY2,PTCNHCOD,SP70,SP70,SP30,SP30,KEY35
              ELSE
                WRITE     WORK,SEQ;KEY2,PTCNHCOD,SP70,SP70,SP30,SP30,KEY35;
              ENDIF
            ENDIF
            GOTO     T2PU9000
          ENDIF
.
          IF        PRERRFLG=1
            IF        MEDIUM=1
              WRITE     WORK,SEQ;KEY2,KEY68,KEY45,KEY90,KEY35
            ELSE
              WRITE     WORK,SEQ;KEY2,KEY68,KEY45,KEY90,KEY35;
            ENDIF
          ENDIF
.
T2PU9000  MOVE      ZERO,EXIT
T2PU9999  RETURN
+
.******************************************************************************
.*                                  U2PU0000              Called by: GTRL0000 *
.*                        Write U2 For Public Hospitals                       *
.******************************************************************************
U2PU0000  PACK      KEY2,U5,SP70
          PACK      KEY88,PTCNHCOD,PTYDYHAS,PTYDYHAB,PTYDYHAT,PTYDYPAS:
                          PTYDYPAB,PTYDYPAT,PTYDYCOS,PTYDYCOB,PTYDYCOT:
                          PTYDYIES,PTYDYIEB,PTYDYIET,PTYDYH5S,PTYDYH5B:
                          PTYDYH5T
          REP       " 0",KEY88
.
          PACK      KEY85,PTYDYHNS,PTYDYHNB,PTYDYHNT,PTYDYP5S,PTYDYP5B:
                          PTYDYP5T,PTYDYPNS,PTYDYPNB,PTYDYPNT,PTYDYCNS:
                          PTYDYCNB,PTYDYCNT,PTYDYINS,PTYDYINB,PTYDYINT 
          REP       " 0",KEY85
.
          PACK      KEY65,PTYDYHSD,PTYDYPSD,PTYDYCSD,PTYDYISD:
                          PTYDYUEP,PTYDYUBD,PTYDYOPS,PTYDYOPB,PTYDYOPT,SP70
          REP       " 0",KEY65
.
          MATCH     "1",PTCNGNTR        * not sending trailer stats
          IF        @EQUAL
            IF        PRERRFLG=1
              IF        MEDIUM=1
                WRITE     WORK,SEQ;KEY2,PTCNHCOD,SP70,SP70,SP30,SP30,SP30,SP5
              ELSE
                WRITE     WORK,SEQ;KEY2,PTCNHCOD,SP70,SP70,SP30,SP30,SP30,SP5;
              ENDIF
            ENDIF
            GOTO     U2PU9000
          ENDIF
.
          IF        PRERRFLG=1
            IF        MEDIUM=1
              WRITE     WORK,SEQ;KEY2,KEY88,KEY85,KEY65
            ELSE
              WRITE     WORK,SEQ;KEY2,KEY88,KEY85,KEY65;
            ENDIF
          ENDIF
.
U2PU9000  MOVE      ZERO,EXIT
U2PU9999  RETURN
+
.******************************************************************************
.*                                  T2PR0000              Called by: GTRL0000 *
.*                       Write T2 For Private Hospitals                       *
.******************************************************************************
T2PR0000  PACK      KEY2,T5,SP70
          ADD       PTMDMP5S,PTMDMPNS
          ADD       PTMDMP5B,PTMDMPNB
          ADD       PTMDMCNS,PTMDMCOS
          ADD       PTMDMCNB,PTMDMCOB
          ADD       PTMDMINS,PTMDMIES
          ADD       PTMDMINB,PTMDMIEB
.
          PACK      KEY44,PTCNHCOD,RECCNT,PEPINEW,PEPICOR,PEPIDEL:
                          DIAGNEW,DIAGCOR,DIAGDEL,DVANEW,DVACOR:
                          DVADEL
          REP       " 0",KEY44
.
          PACK      KEY32,PTCNHCOD,RECCNT,PEPINEW,PEPICOR,PEPIDEL:
                          DIAGNEW,DIAGCOR,DIAGDEL         
          REP       " 0",KEY32                   * 2012 mods                  
.
          PACK      KEY45,PTMDMADM,PTMDMSEP,PTMDMSTS,PTMDMLVE,PTMDMINH:
                          PTMDMBED,PTYDYADM,PTYDYSEP,PTYDYSTS,PTYDYBED
          REP       " 0",KEY45
.          
          PACK      KEY70,PTMDMPAS,PTMDMPAB,PTMDMPNS,PTMDMPNB,PTMDMCOS:
                          PTMDMCOB,PTMDMIES,PTMDMIEB,PTMDMHCS,PTMDMHCB:
                          SP9,PTMDMPSD,PTMDMCSD,PTMDMISD,PTMDMHCD
          REP       " 0",KEY70
.
          PACK      KEY61,PTMDMPAS,PTMDMPAB,PTMDMPNS,PTMDMPNB,PTMDMCOS:
                          PTMDMCOB,PTMDMIES,PTMDMIEB,PTMDMHCS,PTMDMHCB:
                          PTMDMPSD,PTMDMCSD,PTMDMISD,PTMDMHCD
          REP       " 0",KEY61                   * 2012 mods
.
          PACK      KEY79,SP70,SP9
          REP       " 0",KEY79
.
          PACK      KEY100,SP70,SP30
          REP       " 0",KEY100                  * 2012 mods
.
          MATCH     "1",PTCNGNTR        * not sending trailer stats
          IF        @EQUAL
            IF        PRERRFLG=1 
              IF        MEDIUM=1
                PACK      KEY35,SP70
                WRITE     WORK,SEQ;KEY2,PTCNHCOD,SP70,SP70,SP30,SP30,SP30,SP5
              ELSE
                WRITE     WORK,SEQ;KEY2,PTCNHCOD,SP70,SP70,SP30,SP30,SP30,SP5;
              ENDIF
.
            ENDIF
            GOTO     T2PR9000
          ENDIF
.
          IF        PRERRFLG=1 
            IF        MEDIUM=1
              WRITE     WORK,SEQ;KEY2,KEY32,KEY45,KEY61,KEY100
            ELSE
              WRITE     WORK,SEQ;KEY2,KEY32,KEY45,KEY61,KEY100;
            ENDIF
          ENDIF
.
T2PR9000  MOVE      ZERO,EXIT
T2PR9999  RETURN
+
.******************************************************************************
.*                                  U2PR0000              Called by: GTRL0000 *
.*                       Write U2 For Private Hospitals                       *
.******************************************************************************
U2PR0000  PACK      KEY2,U5,SP70
          ADD       PTYDYP5S,PTYDYPNS
          ADD       PTYDYP5B,PTYDYPNB
          ADD       PTYDYCNS,PTYDYCOS
          ADD       PTYDYCNB,PTYDYCOB
          ADD       PTYDYINS,PTYDYIES
          ADD       PTYDYINB,PTYDYIEB
.
          PACK      KEY88,PTCNHCOD,PTYDYPAS,PTYDYPAB,PTYDYPAT,PTYDYPNS:
                          PTYDYPNB,PTYDYPNT,PTYDYCOS,PTYDYCOB,PTYDYCOT:
                          PTYDYIES,PTYDYIEB,PTYDYIET,PTYDYHCS,PTYDYHCB:
                          PTYDYHCT
          REP       " 0",KEY88
.
          PACK      KEY51,PTYDYPSD,PTYDYCSD,PTYDYISD,PTYDYHCD,SP10,SP7      
          REP       " 0",KEY51
.
          PACK      KEY99,SP70,SP30
          REP       " 0",KEY99
.
          MATCH     "1",PTCNGNTR        * not sending trailer stats
          IF        @EQUAL
            IF        PRERRFLG=1
              IF        MEDIUM=1
                PACK      KEY35,SP70
                WRITE     WORK,SEQ;KEY2,PTCNHCOD,SP70,SP70,SP30,SP30,SP30,SP5
              ELSE
                WRITE     WORK,SEQ;KEY2,PTCNHCOD,SP70,SP70,SP30,SP30,SP30,SP5;
              ENDIF
.
            ENDIF
            GOTO     U2PR9000
          ENDIF
.
          IF        PRERRFLG=1 
            IF        MEDIUM=1
              WRITE     WORK,SEQ;KEY2,KEY88,KEY51,KEY99
            ELSE
              WRITE     WORK,SEQ;KEY2,KEY88,KEY51,KEY99;
            ENDIF
          ENDIF
.
U2PR9000  MOVE      ZERO,EXIT
U2PR9999  RETURN
+
.******************************************************************************
.*                                  ADMS0000              Called by: GMTD0000 *
.*                          Add MTD To Save Variables                         *
.******************************************************************************
ADMS0000  ADD       PTMDMADM,SAVEMADM       * MTD Admissions (inc statistics)
          ADD       PTMDMSEP,SAVEMSEP       * MTD Separations    
          ADD       PTMDMSTS,SAVEMSTS       * MTD Statistical Separations 
          ADD       PTMDMLVE,SAVEMLVE       * MTD On-Leave
          ADD       PTMDMINH,SAVEMINH       * MTD Min on hand
          ADD       PTMDMBED,SAVEMBED       * MTD Bed Days   
          ADD       PTMDMHAS,SAVEMHAS       * MTD Public Acute Separations
          ADD       PTMDMHAB,SAVEMHAB       * MTD Public Acute Bed Days
          ADD       PTMDMPAS,SAVEMPAS       * MTD Private Acute Separations
          ADD       PTMDMPAB,SAVEMPAB       * MTD Private Acute Bed Days
          ADD       PTMDMHNS,SAVEMHNS       * MTD Public NHT Separations
          ADD       PTMDMHNB,SAVEMHNB       * MTD Public NHT Bed Days    
          ADD       PTMDMPNS,SAVEMPNS       * MTD Private NHT Separations
          ADD       PTMDMPNB,SAVEMPNB       * MTD Private NHT Bed Days 
          ADD       PTMDMH5S,SAVEMH5S       * MTD Public NHT/NH5 Separations
          ADD       PTMDMH5B,SAVEMH5B       * MTD Public NHT/NH5 Bed Days
          ADD       PTMDMP5S,SAVEMP5S       * MTD Private NHT/NH5 Separations
          ADD       PTMDMP5B,SAVEMP5B       * MTD Private NHT/NH5 Bed Days
          ADD       PTMDMCOS,SAVEMCOS       * MTD Compensable Separations
          ADD       PTMDMCOB,SAVEMCOB       * MTD Compensable Bed Days 
          ADD       PTMDMCNS,SAVEMCNS       * MTD Compensable Non-Acute Seps
          ADD       PTMDMCNB,SAVEMCNB       * MTD Compensable Non-Acute Bed Days
          ADD       PTMDMIES,SAVEMIES       * MTD Ineligible Separations
          ADD       PTMDMIEB,SAVEMIEB       * MTD Ineligible Bed Days   
          ADD       PTMDMINS,SAVEMINS       * MTD Ineligible Non-Acute Seps 
          ADD       PTMDMINB,SAVEMINB       * MTD Ineligible Non-Acute Bed Days
          ADD       PTMDMHCS,SAVEMHCS       * MTD Public Contract Separations
          ADD       PTMDMHCB,SAVEMHCB       * MTD Public Contract Bed Days
          ADD       PTMDMPCS,SAVEMPCS       * MTD Private Contract Separations
          ADD       PTMDMPCB,SAVEMPCB       * MTD Private Contract Bed Days
          ADD       PTMDYHAT,SAVEMHAT       * Public Acute Bed Days-YTD Seps
          ADD       PTMDYPAT,SAVEMPAT       * Privat Acute Bed Days-YTD Seps
          ADD       PTMDYCOT,SAVEMCOT       * Comp. Acute Bed Days-YTD Seps
          ADD       PTMDYIET,SAVEMIET       * Inelig. Acute Bed Days-YTD Seps
          ADD       PTMDYHNT,SAVEMHNT       * Public NHT Bed Days-YTD Seps
          ADD       PTMDYPNT,SAVEMPNT       * Private NHT Bed Days-YTD Seps
          ADD       PTMDYH5T,SAVEMH5T       * Public NHT/NH5 Bed Days-YTD Seps
          ADD       PTMDYP5T,SAVEMP5T       * Private NHT/NH5 Bed Days-YTD Seps
          ADD       PTMDYHCT,SAVEMHCT       * Public Contract Bed Days-YTD Seps
          ADD       PTMDYPCT,SAVEMPCT       * Private Contract Bed Day-YTD Seps
          ADD       PTMDYCNT,SAVEMCNT       * Comp. Non-Acute Bed Days-YTD Seps
          ADD       PTMDYINT,SAVEMINT       * Inelig Non-Acute Bed Days-YTD Seps
          ADD       PTMDMHSD,SAVEMHSD       * MTD Public Same Day
          ADD       PTMDMPSD,SAVEMPSD       * MTD Private Same Day 
          ADD       PTMDMCSD,SAVEMCSD       * MTD Compensable Same Day
          ADD       PTMDMISD,SAVEMISD       * MTD Ineligible Same Day      
          ADD       PTMDMHCD,SAVEMHCD       * MTD Public Contract Same Day
          ADD       PTMDMPCD,SAVEMPCD       * MTD Private Contract Same Day
          ADD       PTMDMUEP,SAVEMUEP       * MTD Unqualified Episodes     
          ADD       PTMDMUBD,SAVEMUBD       * MTD Unqualified Bed Days     
          ADD       PTMDMOPS,SAVEMOPS       * MTD Post Org Procure Separations
          ADD       PTMDMOPB,SAVEMOPB       * MTD Post Org Procure Bed Days
          ADD       PTMDYOPT,SAVEMOPT       * Post Org Procure Bed Days-YTD Seps
.
ADMS9000  MOVE      ZERO,EXIT
ADMS9999  RETURN
+
.******************************************************************************
.*                                  MVSM0000              Called by: GMTD0000 *
.*                Move Save Month Variables To Month Variables                *
.******************************************************************************
MVSM0000  MOVE      SAVEMADM,PTMDMADM       * MTD Admissions (inc statistics)
          MOVE      SAVEMSEP,PTMDMSEP       * MTD Separations    
          MOVE      SAVEMSTS,PTMDMSTS       * MTD Statistical Separations 
          MOVE      SAVEMLVE,PTMDMLVE       * MTD On-Leave
          MOVE      SAVEMINH,PTMDMINH       * MTD Min on hand
          MOVE      SAVEMBED,PTMDMBED       * MTD Bed Days   
          MOVE      SAVEMHAS,PTMDMHAS       * MTD Public Acute Separations
          MOVE      SAVEMHAB,PTMDMHAB       * MTD Public Acute Bed Days
          MOVE      SAVEMPAS,PTMDMPAS       * MTD Private Acute Separations
          MOVE      SAVEMPAB,PTMDMPAB       * MTD Private Acute Bed Days
          MOVE      SAVEMHNS,PTMDMHNS       * MTD Public NHT Separations
          MOVE      SAVEMHNB,PTMDMHNB       * MTD Public NHT Bed Days    
          MOVE      SAVEMPNS,PTMDMPNS       * MTD Private NHT Separations
          MOVE      SAVEMPNB,PTMDMPNB       * MTD Private NHT Bed Days 
          MOVE      SAVEMH5S,PTMDMH5S       * MTD Public NHT/NH5 Separations
          MOVE      SAVEMH5B,PTMDMH5B       * MTD Public NHT/NH5 Bed Days
          MOVE      SAVEMP5S,PTMDMP5S       * MTD Private NHT/NH5 Separations
          MOVE      SAVEMP5B,PTMDMP5B       * MTD Private NHT/NH5 Bed Days
          MOVE      SAVEMCOS,PTMDMCOS       * MTD Compensable Separations
          MOVE      SAVEMCOB,PTMDMCOB       * MTD Compensable Bed Days 
          MOVE      SAVEMCNS,PTMDMCNS       * MTD Compensable Non-Acute Seps
          MOVE      SAVEMCNB,PTMDMCNB       * MTD Compensable Non-Acute Bed Days
          MOVE      SAVEMIES,PTMDMIES       * MTD Ineligible Separations
          MOVE      SAVEMIEB,PTMDMIEB       * MTD Ineligible Bed Days   
          MOVE      SAVEMINS,PTMDMINS       * MTD Ineligible Non-Acute Seps 
          MOVE      SAVEMINB,PTMDMINB       * MTD Ineligible Non-Acute Bed Days
          MOVE      SAVEMHCS,PTMDMHCS       * MTD Public Contract Separations
          MOVE      SAVEMHCB,PTMDMHCB       * MTD Public Contract Bed Days
          MOVE      SAVEMPCS,PTMDMPCS       * MTD Private Contract Separations
          MOVE      SAVEMPCB,PTMDMPCB       * MTD Private Contract Bed Days
          MOVE      SAVEMHAT,PTMDYHAT       * Public Acute Bed Days-YTD Seps
          MOVE      SAVEMPAT,PTMDYPAT       * Privat Acute Bed Days-YTD Seps
          MOVE      SAVEMCOT,PTMDYCOT       * Comp. Acute Bed Days-YTD Seps
          MOVE      SAVEMIET,PTMDYIET       * Inelig. Acute Bed Days-YTD Seps
          MOVE      SAVEMHNT,PTMDYHNT       * Public NHT Bed Days-YTD Seps
          MOVE      SAVEMPNT,PTMDYPNT       * Private NHT Bed Days-YTD Seps
          MOVE      SAVEMH5T,PTMDYH5T       * Public NHT/NH5 Bed Days-YTD Seps
          MOVE      SAVEMP5T,PTMDYP5T       * Private NHT/NH5 Bed Days-YTD Seps
          MOVE      SAVEMHCT,PTMDYHCT       * Public Contract Bed Days-YTD Seps
          MOVE      SAVEMPCT,PTMDYPCT       * Private Contract Bed Day-YTD Seps
          MOVE      SAVEMCNT,PTMDYCNT       * Comp. Non-Acute Bed Days-YTD Seps
          MOVE      SAVEMINT,PTMDYINT       * Inelig Non-Acute Bed Days-YTD Seps
          MOVE      SAVEMHSD,PTMDMHSD       * MTD Public Same Day
          MOVE      SAVEMPSD,PTMDMPSD       * MTD Private Same Day 
          MOVE      SAVEMCSD,PTMDMCSD       * MTD Compensable Same Day
          MOVE      SAVEMISD,PTMDMISD       * MTD Ineligible Same Day      
          MOVE      SAVEMHCD,PTMDMHCD       * MTD Public Contract Same Day
          MOVE      SAVEMPCD,PTMDMPCD       * MTD Private Contract Same Day
          MOVE      SAVEFORM,PTMDFORM       * MTD Private Contract Same Day
          MOVE      SAVEMUEP,PTMDMUEP       * MTD Unqualified Episodes     
          MOVE      SAVEMUBD,PTMDMUBD       * MTD Unqualified Bed Days     
          MOVE      SAVEMOPS,PTMDMOPS       * MTD Post Org Procure Separations
          MOVE      SAVEMOPB,PTMDMOPB       * MTD Post Org Procure Bed Days
          MOVE      SAVEMOPT,PTMDYOPT       * Post Org Procure Bed Days-YTD Seps
.
MVSM9000  MOVE      ZERO,EXIT
MVSM9999  RETURN
+
.******************************************************************************
.*                                  MVPM0000              Called by: GMTD0000 *
.*                          Move PTD To MTD Variables                         *
.******************************************************************************
MVPM0000  MOVE      PTPDMADM,PTMDMADM       * PTD Admissions (inc statistics)
          MOVE      PTPDMSEP,PTMDMSEP       * PTD Separations    
          MOVE      PTPDMSTS,PTMDMSTS       * PTD Statistical Separations 
          MOVE      PTPDMLVE,PTMDMLVE       * PTD On-Leave
          MOVE      PTPDMINH,PTMDMINH       * PTD Min on hand
          MOVE      PTPDMBED,PTMDMBED       * PTD Bed Days   
          MOVE      PTPDMHAS,PTMDMHAS       * PTD Public Acute Separations
          MOVE      PTPDMHAB,PTMDMHAB       * PTD Public Acute Bed Days
          MOVE      PTPDMPAS,PTMDMPAS       * PTD Private Acute Separations
          MOVE      PTPDMPAB,PTMDMPAB       * PTD Private Acute Bed Days
          MOVE      PTPDMHNS,PTMDMHNS       * PTD Public NHT Separations
          MOVE      PTPDMHNB,PTMDMHNB       * PTD Public NHT Bed Days    
          MOVE      PTPDMPNS,PTMDMPNS       * PTD Private NHT Separations
          MOVE      PTPDMPNB,PTMDMPNB       * PTD Private NHT Bed Days 
          MOVE      PTPDMH5S,PTMDMH5S       * PTD Public NHT/NH5 Separations
          MOVE      PTPDMH5B,PTMDMH5B       * PTD Public NHT/NH5 Bed Days
          MOVE      PTPDMP5S,PTMDMP5S       * PTD Private NHT/NH5 Separations
          MOVE      PTPDMP5B,PTMDMP5B       * PTD Private NHT/NH5 Bed Days
          MOVE      PTPDMCOS,PTMDMCOS       * PTD Compensable Separations
          MOVE      PTPDMCOB,PTMDMCOB       * PTD Compensable Bed Days 
          MOVE      PTPDMCNS,PTMDMCNS       * PTD Compensable Non-Acute Seps
          MOVE      PTPDMCNB,PTMDMCNB       * PTD Compensable Non-Acute Bed Days
          MOVE      PTPDMIES,PTMDMIES       * PTD Ineligible Separations
          MOVE      PTPDMIEB,PTMDMIEB       * PTD Ineligible Bed Days   
          MOVE      PTPDMINS,PTMDMINS       * PTD Ineligible Non-Acute Seps 
          MOVE      PTPDMINB,PTMDMINB       * PTD Ineligible Non-Acute Bed Days
          MOVE      PTPDMHCS,PTMDMHCS       * PTD Public Contract Separations
          MOVE      PTPDMHCB,PTMDMHCB       * PTD Public Contract Bed Days
          MOVE      PTPDMPCS,PTMDMPCS       * PTD Private Contract Separations
          MOVE      PTPDMPCB,PTMDMPCB       * PTD Private Contract Bed Days
          MOVE      PTPDYHAT,PTMDYHAT       * Public Acute Bed Days-YTD Seps
          MOVE      PTPDYPAT,PTMDYPAT       * Privat Acute Bed Days-YTD Seps
          MOVE      PTPDYCOT,PTMDYCOT       * Comp. Acute Bed Days-YTD Seps
          MOVE      PTPDYIET,PTMDYIET       * Inelig. Acute Bed Days-YTD Seps
          MOVE      PTPDYHNT,PTMDYHNT       * Public NHT Bed Days-YTD Seps
          MOVE      PTPDYPNT,PTMDYPNT       * Private NHT Bed Days-YTD Seps
          MOVE      PTPDYH5T,PTMDYH5T       * Public NHT/NH5 Bed Days-YTD Seps
          MOVE      PTPDYP5T,PTMDYP5T       * Private NHT/NH5 Bed Days-YTD Seps
          MOVE      PTPDYHCT,PTMDYHCT       * Public Contract Bed Days-YTD Seps
          MOVE      PTPDYPCT,PTMDYPCT       * Private Contract Bed Day-YTD Seps
          MOVE      PTPDYCNT,PTMDYCNT       * Comp. Non-Acute Bed Days-YTD Seps
          MOVE      PTPDYINT,PTMDYINT       * Inelig Non-Acute Bed Days-YTD Seps
          MOVE      PTPDMHSD,PTMDMHSD       * PTD Public Same Day
          MOVE      PTPDMPSD,PTMDMPSD       * PTD Private Same Day 
          MOVE      PTPDMCSD,PTMDMCSD       * PTD Compensable Same Day
          MOVE      PTPDMISD,PTMDMISD       * PTD Ineligible Same Day      
          MOVE      PTPDMHCD,PTMDMHCD       * PTD Public Contract Same Day
          MOVE      PTPDMPCD,PTMDMPCD       * PTD Private Contract Same Day
          MOVE      PTPDMUEP,PTMDMUEP       * PTD Unqualified Episodes     
          MOVE      PTPDMUBD,PTMDMUBD       * PTD Unqualified Bed Days     
          MOVE      PTPDMOPS,PTMDMOPS       * PTD Post Organ Procure Separations
          MOVE      PTPDMOPB,PTMDMOPB       * PTD Post Organ Procure Bed Days
          MOVE      PTPDYOPT,PTMDYOPT       * Post Org Procure Bed Days-YTD Seps
.
MVPM9000  MOVE      ZERO,EXIT
MVPM9999  RETURN
+
.******************************************************************************
.*                                  ADYS0000              Called by: GYTD0000 *
.*                         Add Year To Save Variables                         *
.******************************************************************************
ADYS0000  ADD       PTYDYADM,SAVEYADM       * YTD Admissions (inc statistics)
          ADD       PTYDYSEP,SAVEYSEP       * YTD Separations    
          ADD       PTYDYSTS,SAVEYSTS       * YTD Statistical Separations 
          ADD       PTYDYBED,SAVEYBED       * YTD Bed Days   
          ADD       PTYDYHAS,SAVEYHAS       * YTD Public Acute Separations
          ADD       PTYDYHAB,SAVEYHAB       * YTD Public Acute Bed Days
          ADD       PTYDYPAS,SAVEYPAS       * YTD Private Acute Separations
          ADD       PTYDYPAB,SAVEYPAB       * YTD Private Acute Bed Days
          ADD       PTYDYHNS,SAVEYHNS       * YTD Public NHT Separations
          ADD       PTYDYHNB,SAVEYHNB       * YTD Public NHT Bed Days    
          ADD       PTYDYPNS,SAVEYPNS       * YTD Private NHT Separations
          ADD       PTYDYPNB,SAVEYPNB       * YTD Private NHT Bed Days 
          ADD       PTYDYH5S,SAVEYH5S       * YTD Public NHT/NH5 Separations
          ADD       PTYDYH5B,SAVEYH5B       * YTD Public NHT/NH5 Bed Days
          ADD       PTYDYP5S,SAVEYP5S       * YTD Private NHT/NH5 Separations
          ADD       PTYDYP5B,SAVEYP5B       * YTD Private NHT/NH5 Bed Days
          ADD       PTYDYCOS,SAVEYCOS       * YTD Compensable Separations
          ADD       PTYDYCOB,SAVEYCOB       * YTD Compensable Bed Days 
          ADD       PTYDYCNS,SAVEYCNS       * YTD Compensable Non-Acute Seps
          ADD       PTYDYCNB,SAVEYCNB       * YTD Compensable Non-Acute Bed Days
          ADD       PTYDYIES,SAVEYIES       * YTD Ineligible Separations
          ADD       PTYDYIEB,SAVEYIEB       * YTD Ineligible Bed Days   
          ADD       PTYDYINS,SAVEYINS       * YTD Ineligible Non-Acute Seps 
          ADD       PTYDYINB,SAVEYINB       * YTD Ineligible Non-Acute Bed Days
          ADD       PTYDYHCS,SAVEYHCS       * YTD Public Contract Separations
          ADD       PTYDYHCB,SAVEYHCB       * YTD Public Contract Bed Days
          ADD       PTYDYPCS,SAVEYPCS       * YTD Private Contract Separations
          ADD       PTYDYPCB,SAVEYPCB       * YTD Private Contract Bed Days
          ADD       PTYDYHAT,SAVEYHAT       * Public Acute Bed Days-YTD Seps
          ADD       PTYDYPAT,SAVEYPAT       * Privat Acute Bed Days-YTD Seps
          ADD       PTYDYCOT,SAVEYCOT       * Comp. Acute Bed Days-YTD Seps
          ADD       PTYDYIET,SAVEYIET       * Inelig. Acute Bed Days-YTD Seps
          ADD       PTYDYHNT,SAVEYHNT       * Public NHT Bed Days-YTD Seps
          ADD       PTYDYPNT,SAVEYPNT       * Private NHT Bed Days-YTD Seps
          ADD       PTYDYH5T,SAVEYH5T       * Public NHT/NH5 Bed Days-YTD Seps
          ADD       PTYDYP5T,SAVEYP5T       * Private NHT/NH5 Bed Days-YTD Seps
          ADD       PTYDYHCT,SAVEYHCT       * Public Contract Bed Days-YTD Seps
          ADD       PTYDYPCT,SAVEYPCT       * Private Contract Bed Day-YTD Seps
          ADD       PTYDYCNT,SAVEYCNT       * Comp. Non-Acute Bed Days-YTD Seps
          ADD       PTYDYINT,SAVEYINT       * Inelig Non-Acute Bed Days-YTD Seps
          ADD       PTYDYHSD,SAVEYHSD       * YTD Public Same Day
          ADD       PTYDYPSD,SAVEYPSD       * YTD Private Same Day 
          ADD       PTYDYCSD,SAVEYCSD       * YTD Compensable Same Day
          ADD       PTYDYISD,SAVEYISD       * YTD Ineligible Same Day      
          ADD       PTYDYHCD,SAVEYHCD       * YTD Public Contract Same Day
          ADD       PTYDYPCD,SAVEYPCD       * YTD Private Contract Same Day
          ADD       PTYDYUEP,SAVEYUEP       * YTD Unqualified Episodes     
          ADD       PTYDYUBD,SAVEYUBD       * YTD Unqualified Bed Days     
          ADD       PTYDYOPS,SAVEYOPS       * YTD Post Org Procure Separations
          ADD       PTYDYOPB,SAVEYOPB       * YTD Post Org Procure Bed Days
          ADD       PTYDYOPT,SAVEYOPT       * Post Org Procure Bed Days-YTD Seps
          MOVE      PTYDFORM,SAVEFORM
.
ADYS9000  MOVE      ZERO,EXIT
ADYS9999  RETURN
+
.******************************************************************************
.*                                  ADPS0000              Called by: GYTD0000 *
.*                          Add PTD to Save Variables                         *
.******************************************************************************
ADPS0000  ADD       PTPDMADM,SAVEYADM       * PTD Admissions (inc statistics)
          ADD       PTPDMSEP,SAVEYSEP       * PTD Separations    
          ADD       PTPDMSTS,SAVEYSTS       * PTD Statistical Separations 
          ADD       PTPDMBED,SAVEYBED       * PTD Bed Days   
          ADD       PTPDMHAS,SAVEYHAS       * PTD Public Acute Separations
          ADD       PTPDMHAB,SAVEYHAB       * PTD Public Acute Bed Days
          ADD       PTPDMPAS,SAVEYPAS       * PTD Private Acute Separations
          ADD       PTPDMPAB,SAVEYPAB       * PTD Private Acute Bed Days
          ADD       PTPDMHNS,SAVEYHNS       * PTD Public NHT Separations
          ADD       PTPDMHNB,SAVEYHNB       * PTD Public NHT Bed Days    
          ADD       PTPDMPNS,SAVEYPNS       * PTD Private NHT Separations
          ADD       PTPDMPNB,SAVEYPNB       * PTD Private NHT Bed Days 
          ADD       PTPDMH5S,SAVEYH5S       * PTD Public NHT/NH5 Separations
          ADD       PTPDMH5B,SAVEYH5B       * PTD Public NHT/NH5 Bed Days
          ADD       PTPDMP5S,SAVEYP5S       * PTD Private NHT/NH5 Separations
          ADD       PTPDMP5B,SAVEYP5B       * PTD Private NHT/NH5 Bed Days
          ADD       PTPDMCOS,SAVEYCOS       * PTD Compensable Separations
          ADD       PTPDMCOB,SAVEYCOB       * PTD Compensable Bed Days 
          ADD       PTPDMCNS,SAVEYCNS       * PTD Compensable Non-Acute Seps
          ADD       PTPDMCNB,SAVEYCNB       * PTD Compensable Non-Acute Bed Days
          ADD       PTPDMIES,SAVEYIES       * PTD Ineligible Separations
          ADD       PTPDMIEB,SAVEYIEB       * PTD Ineligible Bed Days   
          ADD       PTPDMINS,SAVEYINS       * PTD Ineligible Non-Acute Seps 
          ADD       PTPDMINB,SAVEYINB       * PTD Ineligible Non-Acute Bed Days
          ADD       PTPDMHCS,SAVEYHCS       * PTD Public Contract Separations
          ADD       PTPDMHCB,SAVEYHCB       * PTD Public Contract Bed Days
          ADD       PTPDMPCS,SAVEYPCS       * PTD Private Contract Separations
          ADD       PTPDMPCB,SAVEYPCB       * PTD Private Contract Bed Days
          ADD       PTPDYHAT,SAVEYHAT       * Public Acute Bed Days-YTD Seps
          ADD       PTPDYPAT,SAVEYPAT       * Privat Acute Bed Days-YTD Seps
          ADD       PTPDYCOT,SAVEYCOT       * Comp. Acute Bed Days-YTD Seps
          ADD       PTPDYIET,SAVEYIET       * Inelig. Acute Bed Days-YTD Seps
          ADD       PTPDYHNT,SAVEYHNT       * Public NHT Bed Days-YTD Seps
          ADD       PTPDYPNT,SAVEYPNT       * Private NHT Bed Days-YTD Seps
          ADD       PTPDYH5T,SAVEYH5T       * Public NHT/NH5 Bed Days-YTD Seps
          ADD       PTPDYP5T,SAVEYP5T       * Private NHT/NH5 Bed Days-YTD Seps
          ADD       PTPDYHCT,SAVEYHCT       * Public Contract Bed Days-YTD Seps
          ADD       PTPDYPCT,SAVEYPCT       * Private Contract Bed Day-YTD Seps
          ADD       PTPDYCNT,SAVEYCNT       * Comp. Non-Acute Bed Days-YTD Seps
          ADD       PTPDYINT,SAVEYINT       * Inelig Non-Acute Bed Days-YTD Seps
          ADD       PTPDMHSD,SAVEYHSD       * PTD Public Same Day
          ADD       PTPDMPSD,SAVEYPSD       * PTD Private Same Day 
          ADD       PTPDMCSD,SAVEYCSD       * PTD Compensable Same Day
          ADD       PTPDMISD,SAVEYISD       * PTD Ineligible Same Day      
          ADD       PTPDMHCD,SAVEYHCD       * PTD Public Contract Same Day
          ADD       PTPDMPCD,SAVEYPCD       * PTD Private Contract Same Day
          ADD       PTPDMUEP,SAVEYUEP       * PTD Unqualified Episodes     
          ADD       PTPDMUBD,SAVEYUBD       * PTD Unqualified Bed Days     
          ADD       PTPDMOPS,SAVEYOPS       * PTD Post Org Procure Separations
          ADD       PTPDMOPB,SAVEYOPB       * PTD Post Org Procure Bed Days 
          ADD       PTPDYOPT,SAVEYOPT       * Post Org Procure Bed Days-YTD Seps
          MOVE      PTPDFORM,SAVEFORM
.
ADPS9000  MOVE      ZERO,EXIT
ADPS9999  RETURN
+
.******************************************************************************
.*                                  MVSY0000              Called by: GYTD0000 *
.*                 Move Save Year Variables To Year Variables                 *
.******************************************************************************
MVSY0000  MOVE      SAVEYADM,PTYDYADM       * YTD Admissions (inc statistics)
          MOVE      SAVEYSEP,PTYDYSEP       * YTD Separations    
          MOVE      SAVEYSTS,PTYDYSTS       * YTD Statistical Separations 
          MOVE      SAVEYBED,PTYDYBED       * YTD Bed Days   
          MOVE      SAVEYHAS,PTYDYHAS       * YTD Public Acute Separations
          MOVE      SAVEYHAB,PTYDYHAB       * YTD Public Acute Bed Days
          MOVE      SAVEYPAS,PTYDYPAS       * YTD Private Acute Separations
          MOVE      SAVEYPAB,PTYDYPAB       * YTD Private Acute Bed Days
          MOVE      SAVEYHNS,PTYDYHNS       * YTD Public NHT Separations
          MOVE      SAVEYHNB,PTYDYHNB       * YTD Public NHT Bed Days    
          MOVE      SAVEYPNS,PTYDYPNS       * YTD Private NHT Separations
          MOVE      SAVEYPNB,PTYDYPNB       * YTD Private NHT Bed Days 
          MOVE      SAVEYH5S,PTYDYH5S       * YTD Public NHT/NH5 Separations
          MOVE      SAVEYH5B,PTYDYH5B       * YTD Public NHT/NH5 Bed Days
          MOVE      SAVEYP5S,PTYDYP5S       * YTD Private NHT/NH5 Separations
          MOVE      SAVEYP5B,PTYDYP5B       * YTD Private NHT/NH5 Bed Days
          MOVE      SAVEYCOS,PTYDYCOS       * YTD Compensable Separations
          MOVE      SAVEYCOB,PTYDYCOB       * YTD Compensable Bed Days 
          MOVE      SAVEYCNS,PTYDYCNS       * YTD Compensable Non-Acute Seps
          MOVE      SAVEYCNB,PTYDYCNB       * YTD Compensable Non-Acute Bed Days
          MOVE      SAVEYIES,PTYDYIES       * YTD Ineligible Separations
          MOVE      SAVEYIEB,PTYDYIEB       * YTD Ineligible Bed Days   
          MOVE      SAVEYINS,PTYDYINS       * YTD Ineligible Non-Acute Seps 
          MOVE      SAVEYINB,PTYDYINB       * YTD Ineligible Non-Acute Bed Days
          MOVE      SAVEYHCS,PTYDYHCS       * YTD Public Contract Separations
          MOVE      SAVEYHCB,PTYDYHCB       * YTD Public Contract Bed Days
          MOVE      SAVEYPCS,PTYDYPCS       * YTD Private Contract Separations
          MOVE      SAVEYPCB,PTYDYPCB       * YTD Private Contract Bed Days
          MOVE      SAVEYHAT,PTYDYHAT       * Public Acute Bed Days-YTD Seps
          MOVE      SAVEYPAT,PTYDYPAT       * Privat Acute Bed Days-YTD Seps
          MOVE      SAVEYCOT,PTYDYCOT       * Comp. Acute Bed Days-YTD Seps
          MOVE      SAVEYIET,PTYDYIET       * Inelig. Acute Bed Days-YTD Seps
          MOVE      SAVEYHNT,PTYDYHNT       * Public NHT Bed Days-YTD Seps
          MOVE      SAVEYPNT,PTYDYPNT       * Private NHT Bed Days-YTD Seps
          MOVE      SAVEYH5T,PTYDYH5T       * Public NHT/NH5 Bed Days-YTD Seps
          MOVE      SAVEYP5T,PTYDYP5T       * Private NHT/NH5 Bed Days-YTD Seps
          MOVE      SAVEYHCT,PTYDYHCT       * Public Contract Bed Days-YTD Seps
          MOVE      SAVEYPCT,PTYDYPCT       * Private Contract Bed Day-YTD Seps
          MOVE      SAVEYCNT,PTYDYCNT       * Comp. Non-Acute Bed Days-YTD Seps
          MOVE      SAVEYINT,PTYDYINT       * Inelig Non-Acute Bed Days-YTD Seps
          MOVE      SAVEYHSD,PTYDYHSD       * YTD Public Same Day
          MOVE      SAVEYPSD,PTYDYPSD       * YTD Private Same Day 
          MOVE      SAVEYCSD,PTYDYCSD       * YTD Compensable Same Day
          MOVE      SAVEYISD,PTYDYISD       * YTD Ineligible Same Day      
          MOVE      SAVEYHCD,PTYDYHCD       * YTD Public Contract Same Day
          MOVE      SAVEYPCD,PTYDYPCD       * YTD Private Contract Same Day
          MOVE      SAVEFORM,PTYDFORM       * YTD Private Contract Same Day
          MOVE      SAVEYUEP,PTYDYUEP       * YTD Unqualified Episodes     
          MOVE      SAVEYUBD,PTYDYUBD       * YTD Unqualified Bed Days     
          MOVE      SAVEYOPS,PTYDYOPS       * YTD Post Org Procure Separations
          MOVE      SAVEYOPB,PTYDYOPB       * YTD Post Org Procure Bed Days   
          MOVE      SAVEYOPT,PTYDYOPT       * Post Org Procure Bed Days-YTD Seps
.
MVSY9000  MOVE      ZERO,EXIT
MVSY9999  RETURN
+
.****************************************************************************
.*                                ZERO0000                                  *
.*  Zero fill variables                                                     *
.*  Called by : GTRL0000                                                    *
.****************************************************************************
ZERO0000  MOVE      "0",OCCURCNT
ZERO1000  ADD       "1",OCCURCNT
          STORE     ZERO,OCCURCNT,EPIABDP1,EPIABDP2,EPIABDP3,EPIABDP4,EPIABDP5:
                         EPIABDP6,EPIABDP7
          STORE     ZERO,OCCURCNT,EPIABDY1,EPIABDY2,EPIABDY3,EPIABDY4,EPIABDY5:
                         EPIABDY6,EPIABDY7
          STORE     ZERO,OCCURCNT,EPIABDA1,EPIABDA2,EPIABDA3,EPIABDA4,EPIABDA5:
                         EPIABDA6,EPIABDA7
          STORE     SP1,OCCURCNT,EPIQTYP1,EPIQTYP2,EPIQTYP3,EPIQTYP4,EPIQTYP5:
                         EPIQTYP6,EPIQTYP7
          STORE     SP1,OCCURCNT,EPIATYP1,EPIATYP2,EPIATYP3,EPIATYP4,EPIATYP5:
                         EPIATYP6,EPIATYP7
          COMPARE   "8",OCCURCNT
          GOTO      ZERO1000 IF LESS 
.
ZERO9999  RETURN
+
.******************************************************************************
.*                                  ADPM0000              Called by: WTOF0000 *
.*                          Add PTD to MTD Variables                          *
.******************************************************************************
ADPM0000  ADD       PTPDMADM,PTMDMADM       * MTD Admissions (inc statistics)
          ADD       PTPDMSEP,PTMDMSEP       * MTD Separations    
          ADD       PTPDMSTS,PTMDMSTS       * MTD Statistical Separations 
          MOVE      PTPDMLVE,PTMDMLVE       * On-Leave at End of Month     
          MOVE      PTPDMINH,PTMDMINH       * Remaining In at End of Month
          ADD       PTPDMBED,PTMDMBED       * MTD Bed Days   
          ADD       PTPDMHAS,PTMDMHAS       * MTD Public Acute Separations
          ADD       PTPDMHAB,PTMDMHAB       * MTD Public Acute Bed Days
          ADD       PTPDMPAS,PTMDMPAS       * MTD Private Acute Separations
          ADD       PTPDMPAB,PTMDMPAB       * MTD Private Acute Bed Days
          ADD       PTPDMHNS,PTMDMHNS       * MTD Public NHT Separations
          ADD       PTPDMHNB,PTMDMHNB       * MTD Public NHT Bed Days    
          ADD       PTPDMPNS,PTMDMPNS       * MTD Private NHT Separations
          ADD       PTPDMPNB,PTMDMPNB       * MTD Private NHT Bed Days 
          ADD       PTPDMH5S,PTMDMH5S       * MTD Public NHT/NH5 Separations
          ADD       PTPDMH5B,PTMDMH5B       * MTD Public NHT/NH5 Bed Days
          ADD       PTPDMP5S,PTMDMP5S       * MTD Private NHT/NH5 Separations
          ADD       PTPDMP5B,PTMDMP5B       * MTD Private NHT/NH5 Bed Days
          ADD       PTPDMCOS,PTMDMCOS       * MTD Compensable Separations
          ADD       PTPDMCOB,PTMDMCOB       * MTD Compensable Bed Days 
          ADD       PTPDMCNS,PTMDMCNS       * MTD Compensable Non-Acute Seps
          ADD       PTPDMCNB,PTMDMCNB       * MTD Compensable Non-Acute Bed Days
          ADD       PTPDMIES,PTMDMIES       * MTD Ineligible Separations
          ADD       PTPDMIEB,PTMDMIEB       * MTD Ineligible Bed Days   
          ADD       PTPDMINS,PTMDMINS       * MTD Ineligible Non-Acute Seps 
          ADD       PTPDMINB,PTMDMINB       * MTD Ineligible Non-Acute Bed Days
          ADD       PTPDMHCS,PTMDMHCS       * MTD Public Contract Separations
          ADD       PTPDMHCB,PTMDMHCB       * MTD Public Contract Bed Days
          ADD       PTPDMPCS,PTMDMPCS       * MTD Private Contract Separations
          ADD       PTPDMPCB,PTMDMPCB       * MTD Private Contract Bed Days
          ADD       PTPDYHAT,PTMDYHAT       * Public Acute Bed Days-YTD Seps
          ADD       PTPDYPAT,PTMDYPAT       * Privat Acute Bed Days-YTD Seps
          ADD       PTPDYCOT,PTMDYCOT       * Comp. Acute Bed Days-YTD Seps
          ADD       PTPDYIET,PTMDYIET       * Inelig. Acute Bed Days-YTD Seps
          ADD       PTPDYHNT,PTMDYHNT       * Public NHT Bed Days-YTD Seps
          ADD       PTPDYPNT,PTMDYPNT       * Private NHT Bed Days-YTD Seps
          ADD       PTPDYH5T,PTMDYH5T       * Public NHT/NH5 Bed Days-YTD Seps
          ADD       PTPDYP5T,PTMDYP5T       * Private NHT/NH5 Bed Days-YTD Seps
          ADD       PTPDYHCT,PTMDYHCT       * Public Contract Bed Days-YTD Seps
          ADD       PTPDYPCT,PTMDYPCT       * Private Contract Bed Day-YTD Seps
          ADD       PTPDYCNT,PTMDYCNT       * Comp. Non-Acute Bed Days-YTD Seps
          ADD       PTPDYINT,PTMDYINT       * Inelig Non-Acute Bed Days-YTD Seps
          ADD       PTPDMHSD,PTMDMHSD       * MTD Public Same Day
          ADD       PTPDMPSD,PTMDMPSD       * MTD Private Same Day 
          ADD       PTPDMCSD,PTMDMCSD       * MTD Compensable Same Day
          ADD       PTPDMISD,PTMDMISD       * MTD Ineligible Same Day      
          ADD       PTPDMHCD,PTMDMHCD       * MTD Public Contract Same Day
          ADD       PTPDMPCD,PTMDMPCD       * MTD Private Contract Same Day
          ADD       PTPDFORM,PTMDFORM       * Unique Key Format for PRS/2
          ADD       PTPDMUEP,PTMDMUEP       * Number of entirely unqualified
          ADD       PTPDMUBD,PTMDMUBD       * Number of unqualified bed days
          ADD       PTPDMOPS,PTMDMOPS       * MTD Post Org Procure Separations
          ADD       PTPDMOPB,PTMDMOPB       * MTD Post Org Procure Bed Days 
          ADD       PTPDYOPT,PTMDYOPT       * Post Org Procure Bed Days-YTD Seps
          MOVE      SP30,PTMDSPAR
.
ADPM9000  MOVE      ZERO,EXIT
ADPM9999  RETURN
+
.******************************************************************************
.*                                  DELMTD00              Called by: WTOF0000 *
.*                          Subtract PTD from MTD variables                   *
.******************************************************************************
DELMTD00  SUB       PTPDMADM,PTMDMADM       * MTD Admissions (inc statistics)
          SUB       PTPDMSEP,PTMDMSEP       * MTD Separations
          SUB       PTPDMSTS,PTMDMSTS       * MTD Statistical Separations
          SUB       PTPDMLVE,PTMDMLVE       * On-Leave at End of Month
          SUB       PTPDMINH,PTMDMINH       * Remaining In at End of Month
          SUB       PTPDMBED,PTMDMBED       * MTD Bed Days
          SUB       PTPDMHAS,PTMDMHAS       * MTD Public Acute Separations
          SUB       PTPDMHAB,PTMDMHAB       * MTD Public Acute Bed Days
          SUB       PTPDMPAS,PTMDMPAS       * MTD Private Acute Separations
          SUB       PTPDMPAB,PTMDMPAB       * MTD Private Acute Bed Days
          SUB       PTPDMHNS,PTMDMHNS       * MTD Public NHT Separations
          SUB       PTPDMHNB,PTMDMHNB       * MTD Public NHT Bed Days
          SUB       PTPDMPNS,PTMDMPNS       * MTD Private NHT Separations
          SUB       PTPDMPNB,PTMDMPNB       * MTD Private NHT Bed Days
          SUB       PTPDMH5S,PTMDMH5S       * MTD Public NHT/NH5 Separations
          SUB       PTPDMH5B,PTMDMH5B       * MTD Public NHT/NH5 Bed Days
          SUB       PTPDMP5S,PTMDMP5S       * MTD Private NHT/NH5 Separations
          SUB       PTPDMP5B,PTMDMP5B       * MTD Private NHT/NH5 Bed Days
          SUB       PTPDMCOS,PTMDMCOS       * MTD Compensable Separations
          SUB       PTPDMCOB,PTMDMCOB       * MTD Compensable Bed Days
          SUB       PTPDMCNS,PTMDMCNS       * MTD Compensable Non-Acute Seps
          SUB       PTPDMCNB,PTMDMCNB       * MTD Compensable Non-Acute Bed Days
          SUB       PTPDMIES,PTMDMIES       * MTD Ineligible Separations
          SUB       PTPDMIEB,PTMDMIEB       * MTD Ineligible Bed Days
          SUB       PTPDMINS,PTMDMINS       * MTD Ineligible Non-Acute Seps
          SUB       PTPDMINB,PTMDMINB       * MTD Ineligible Non-Acute Bed Days
          SUB       PTPDMHCS,PTMDMHCS       * MTD Public Contract Separations
          SUB       PTPDMHCB,PTMDMHCB       * MTD Public Contract Bed Days
          SUB       PTPDMPCS,PTMDMPCS       * MTD Private Contract Separations
          SUB       PTPDMPCB,PTMDMPCB       * MTD Private Contract Bed Days
          SUB       PTPDYHAT,PTMDYHAT       * Public Acute Bed Days-YTD Seps
          SUB       PTPDYPAT,PTMDYPAT       * Privat Acute Bed Days-YTD Seps
          SUB       PTPDYCOT,PTMDYCOT       * Comp. Acute Bed Days-YTD Seps
          SUB       PTPDYIET,PTMDYIET       * Inelig. Acute Bed Days-YTD Seps
          SUB       PTPDYHNT,PTMDYHNT       * Public NHT Bed Days-YTD Seps
          SUB       PTPDYPNT,PTMDYPNT       * Private NHT Bed Days-YTD Seps
          SUB       PTPDYH5T,PTMDYH5T       * Public NHT/NH5 Bed Days-YTD Seps
          SUB       PTPDYP5T,PTMDYP5T       * Private NHT/NH5 Bed Days-YTD Seps
          SUB       PTPDYHCT,PTMDYHCT       * Public Contract Bed Days-YTD Seps
          SUB       PTPDYPCT,PTMDYPCT       * Private Contract Bed Day-YTD Seps
          SUB       PTPDYCNT,PTMDYCNT       * Comp. Non-Acute Bed Days-YTD Seps
          SUB       PTPDYINT,PTMDYINT       * Inelig Non-Acute Bed Days-YTD Seps
          SUB       PTPDMHSD,PTMDMHSD       * MTD Public Same Day
          SUB       PTPDMPSD,PTMDMPSD       * MTD Private Same Day
          SUB       PTPDMCSD,PTMDMCSD       * MTD Compensable Same Day
          SUB       PTPDMISD,PTMDMISD       * MTD Ineligible Same Day
          SUB       PTPDMHCD,PTMDMHCD       * MTD Public Contract Same Day
          SUB       PTPDMPCD,PTMDMPCD       * MTD Private Contract Same Day
          SUB       PTPDFORM,PTMDFORM       * Unique Key Format for PRS/2
          SUB       PTPDMUEP,PTMDMUEP       * Number of entirely unqualified
          SUB       PTPDMUBD,PTMDMUBD       * Number of unqualified bed days
          SUB       PTPDMOPS,PTMDMOPS       * MTD Post Org Procure Separations
          SUB       PTPDMOPB,PTMDMOPB       * MTD Post Org Procure Bed Days
          SUB       PTPDYOPT,PTMDYOPT       * Post Org Procure Bed Days-YTD Seps
          MOVE      SP30,PTMDSPAR
.
DELMTD90  MOVE      ZERO,EXIT
DELMTD99  RETURN
+
.******************************************************************************
.*                                 ADPY0000                                   *
.*  Add Period to Year Variables                                              *
.*  Called by : DMRR0000                                                      *
.******************************************************************************
ADPY0000  ADD       PTPDMADM,PTYDYADM   *  PTD Admissions (inc statistics)
          ADD       PTPDMSEP,PTYDYSEP   *  PTD Separations    
          ADD       PTPDMSTS,PTYDYSTS   *  PTD Statistical Separations 
          ADD       PTPDMBED,PTYDYBED   *  PTD Bed Days   
          ADD       PTPDMHAS,PTYDYHAS   *  PTD Public Acute Separations
          ADD       PTPDMHAB,PTYDYHAB   *  PTD Public Acute Bed Days
          ADD       PTPDMPAS,PTYDYPAS   *  PTD Private Acute Separations
          ADD       PTPDMPAB,PTYDYPAB   *  PTD Private Acute Bed Days
          ADD       PTPDMHNS,PTYDYHNS   *  PTD Public NHT Separations
          ADD       PTPDMHNB,PTYDYHNB   *  PTD Public NHT Bed Days    
          ADD       PTPDMPNS,PTYDYPNS   *  PTD Private NHT Separations
          ADD       PTPDMPNB,PTYDYPNB   *  PTD Private NHT Bed Days 
          ADD       PTPDMH5S,PTYDYH5S   *  PTD Public NHT/NH5 Separations
          ADD       PTPDMH5B,PTYDYH5B   *  PTD Public NHT/NH5 Bed Days
          ADD       PTPDMP5S,PTYDYP5S   *  PTD Private NHT/NH5 Separations
          ADD       PTPDMP5B,PTYDYP5B   *  PTD Private NHT/NH5 Bed Days
          ADD       PTPDMCOS,PTYDYCOS   *  PTD Compensable Separations
          ADD       PTPDMCOB,PTYDYCOB   *  PTD Compensable Bed Days 
          ADD       PTPDMCNS,PTYDYCNS   *  PTD Compensable Non-Acute Seps
          ADD       PTPDMCNB,PTYDYCNB   *  PTD Compensable Non-Acute Bed Days
          ADD       PTPDMIES,PTYDYIES   *  PTD Ineligible Separations
          ADD       PTPDMIEB,PTYDYIEB   *  PTD Ineligible Bed Days   
          ADD       PTPDMINS,PTYDYINS   *  PTD Ineligible Non-Acute Seps 
          ADD       PTPDMINB,PTYDYINB   *  PTD Ineligible Non-Acute Bed Days
          ADD       PTPDMHCS,PTYDYHCS   *  PTD Public Contract Separations
          ADD       PTPDMHCB,PTYDYHCB   *  PTD Public Contract Bed Days
          ADD       PTPDMPCS,PTYDYPCS   *  PTD Private Contract Separations
          ADD       PTPDMPCB,PTYDYPCB   *  PTD Private Contract Bed Days
          ADD       PTPDYHAT,PTYDYHAT   *  Public Acute Bed Days-YTD Seps
          ADD       PTPDYPAT,PTYDYPAT   *  Privat Acute Bed Days-YTD Seps
          ADD       PTPDYCOT,PTYDYCOT   *  Comp. Acute Bed Days-YTD Seps
          ADD       PTPDYIET,PTYDYIET   *  Inelig. Acute Bed Days-YTD Seps
          ADD       PTPDYHNT,PTYDYHNT   *  Public NHT Bed Days-YTD Seps
          ADD       PTPDYPNT,PTYDYPNT   *  Private NHT Bed Days-YTD Seps
          ADD       PTPDYH5T,PTYDYH5T   *  Public NHT/NH5 Bed Days-YTD Seps
          ADD       PTPDYP5T,PTYDYP5T   *  Private NHT/NH5 Bed Days-YTD Seps
          ADD       PTPDYHCT,PTYDYHCT   *  Public Contract Bed Days-YTD Seps
          ADD       PTPDYPCT,PTYDYPCT   *  Private Contract Bed Day-YTD Seps
          ADD       PTPDYCNT,PTYDYCNT   *  Comp. Non-Acute Bed Days-YTD Seps
          ADD       PTPDYINT,PTYDYINT   *  Inelig Non-Acute Bed Days-YTD Seps
          ADD       PTPDMHSD,PTYDYHSD   *  PTD Public Same Day
          ADD       PTPDMPSD,PTYDYPSD   *  PTD Private Same Day 
          ADD       PTPDMCSD,PTYDYCSD   *  PTD Compensable Same Day
          ADD       PTPDMISD,PTYDYISD   *  PTD Ineligible Same Day      
          ADD       PTPDMHCD,PTYDYHCD   *  PTD Public Contract Same Day
          ADD       PTPDMPCD,PTYDYPCD   *  PTD Private Contract Same Day
          MOVE      PTPDFORM,PTYDFORM   *  Keep the format for each admission
          ADD       PTPDMUEP,PTYDYUEP   *  PTD Unqualified Episodes     
          ADD       PTPDMUBD,PTYDYUBD   *  PTD Unqualified Bed Days     
          ADD       PTPDMOPS,PTYDYOPS   *  PTD Post Org Procure Separations
          ADD       PTPDMOPB,PTYDYOPB   *  PTD Post Org Procure Bed Days 
          ADD       PTPDYOPT,PTYDYOPT   *  Post Org Procure Bed Days-YTD Seps
.
ADPY9999  RETURN
.******************************************************************************
.*                                 MVPY0000                                   *
.*  Move Period to Year Variables                                             *
.*  Called by : WTOF0000                                                      *
.******************************************************************************
MVPY0000  MOVE      PTPDMADM,PTYDYADM   *  PTD Admissions (inc statistics)
          MOVE      PTPDMSEP,PTYDYSEP   *  PTD Separations    
          MOVE      PTPDMSTS,PTYDYSTS   *  PTD Statistical Separations 
          MOVE      PTPDMBED,PTYDYBED   *  PTD Bed Days   
          MOVE      PTPDMHAS,PTYDYHAS   *  PTD Public Acute Separations
          MOVE      PTPDMHAB,PTYDYHAB   *  PTD Public Acute Bed Days
          MOVE      PTPDMPAS,PTYDYPAS   *  PTD Private Acute Separations
          MOVE      PTPDMPAB,PTYDYPAB   *  PTD Private Acute Bed Days
          MOVE      PTPDMHNS,PTYDYHNS   *  PTD Public NHT Separations
          MOVE      PTPDMHNB,PTYDYHNB   *  PTD Public NHT Bed Days    
          MOVE      PTPDMPNS,PTYDYPNS   *  PTD Private NHT Separations
          MOVE      PTPDMPNB,PTYDYPNB   *  PTD Private NHT Bed Days 
          MOVE      PTPDMH5S,PTYDYH5S   *  PTD Public NHT/NH5 Separations
          MOVE      PTPDMH5B,PTYDYH5B   *  PTD Public NHT/NH5 Bed Days
          MOVE      PTPDMP5S,PTYDYP5S   *  PTD Private NHT/NH5 Separations
          MOVE      PTPDMP5B,PTYDYP5B   *  PTD Private NHT/NH5 Bed Days
          MOVE      PTPDMCOS,PTYDYCOS   *  PTD Compensable Separations
          MOVE      PTPDMCOB,PTYDYCOB   *  PTD Compensable Bed Days 
          MOVE      PTPDMCNS,PTYDYCNS   *  PTD Compensable Non-Acute Seps
          MOVE      PTPDMCNB,PTYDYCNB   *  PTD Compensable Non-Acute Bed Days
          MOVE      PTPDMIES,PTYDYIES   *  PTD Ineligible Separations
          MOVE      PTPDMIEB,PTYDYIEB   *  PTD Ineligible Bed Days   
          MOVE      PTPDMINS,PTYDYINS   *  PTD Ineligible Non-Acute Seps 
          MOVE      PTPDMINB,PTYDYINB   *  PTD Ineligible Non-Acute Bed Days
          MOVE      PTPDMHCS,PTYDYHCS   *  PTD Public Contract Separations
          MOVE      PTPDMHCB,PTYDYHCB   *  PTD Public Contract Bed Days
          MOVE      PTPDMPCS,PTYDYPCS   *  PTD Private Contract Separations
          MOVE      PTPDMPCB,PTYDYPCB   *  PTD Private Contract Bed Days
          MOVE      PTPDYHAT,PTYDYHAT   *  Public Acute Bed Days-YTD Seps
          MOVE      PTPDYPAT,PTYDYPAT   *  Privat Acute Bed Days-YTD Seps
          MOVE      PTPDYCOT,PTYDYCOT   *  Comp. Acute Bed Days-YTD Seps
          MOVE      PTPDYIET,PTYDYIET   *  Inelig. Acute Bed Days-YTD Seps
          MOVE      PTPDYHNT,PTYDYHNT   *  Public NHT Bed Days-YTD Seps
          MOVE      PTPDYPNT,PTYDYPNT   *  Private NHT Bed Days-YTD Seps
          MOVE      PTPDYH5T,PTYDYH5T   *  Public NHT/NH5 Bed Days-YTD Seps
          MOVE      PTPDYP5T,PTYDYP5T   *  Private NHT/NH5 Bed Days-YTD Seps
          MOVE      PTPDYHCT,PTYDYHCT   *  Public Contract Bed Days-YTD Seps
          MOVE      PTPDYPCT,PTYDYPCT   *  Private Contract Bed Day-YTD Seps
          MOVE      PTPDYCNT,PTYDYCNT   *  Comp. Non-Acute Bed Days-YTD Seps
          MOVE      PTPDYINT,PTYDYINT   *  Inelig Non-Acute Bed Days-YTD Seps
          MOVE      PTPDMHSD,PTYDYHSD   *  PTD Public Same Day
          MOVE      PTPDMPSD,PTYDYPSD   *  PTD Private Same Day 
          MOVE      PTPDMCSD,PTYDYCSD   *  PTD Compensable Same Day
          MOVE      PTPDMISD,PTYDYISD   *  PTD Ineligible Same Day      
          MOVE      PTPDMHCD,PTYDYHCD   *  PTD Public Contract Same Day
          MOVE      PTPDMPCD,PTYDYPCD   *  PTD Private Contract Same Day
          MOVE      PTPDFORM,PTYDFORM   *  PTD Private Contract Same Day
          MOVE      PTPDMUEP,PTYDYUEP   *  PTD Unqualified Episodes     
          MOVE      PTPDMUBD,PTYDYUBD   *  PTD Unqualified Bed Days     
          MOVE      PTPDMOPS,PTYDYOPS   *  PTD Post Org Procure Separations
          MOVE      PTPDMOPB,PTYDYOPB   *  PTD Post Org Procure Bed Days 
          MOVE      PTPDYOPT,PTYDYOPT   *  Post Org Procure Bed Days-YTD Seps
.
MVPY9999  RETURN
+
.****************************************************************************
.*                                OLRI0000                                  *
.* Get if  & Remaining In or On-Leave at end of period Called by : GAEP0000 *
.****************************************************************************
OLRI0000  BRANCH    ROYFLAG,OLRI9999,OLRI9999,OLRI9999
          MOVE      ZERO,PTPDMINH
          MOVE      ZERO,PTPDMLVE
          PACK      KEY5,ANSA,SP1,ATYPE
          CALL      RDCODE1
          BRANCH    OVRCD,OLRI9999
.
          CMATCH    "X",TCINDC12
          GOTO      OLRI9999 IF EQUAL        *  Ignore patient with X
.
          CMATCH    "B",TCINDC3
          GOTO      OLRI9999 IF EQUAL        * Ignore Boarder Patients
.
. ------- Get the very last record before the End of Period  ate
          PACK      KEY30,AADMNO,CHCSED,Z70
          CALL      RDSTRAN2
          CALL      RDPTRAN2
          BRANCH    OVRCD,OLRI9999
.
          MATCH     AADMNO,TADMN
          GOTO      OLRI9999 IF NOT EQUAL     * If not record after period
.
. ------- Store 1 to On hand or on leave depending 
          MOVE      TMOVE,DIM1
          REP       "L1R2A2C2",DIM1
          TYPE      DIM1
          GOTO      OLRI9999 IF NOT EQUAL     * Not Valid
.
          MOVE      DIM1,FORM1
          STORE     ONE,FORM1,PTPDMLVE,PTPDMINH
.
OLRI9999  RETURN
.
.******************************************************************************
.*                                 PRSL0000                                   *
.*  Check PRS2 Live Date                                                      *
.******************************************************************************
PRSL0000  MOVE      FALSE,EXIT 
          MATCH     SP8,PTCNPRSL             * PRS2 Live date = spaces ?
          GOTO      PRSL9999 IF EQUAL        * Yes. Collect data
.
          MATCH     "00000000",PTCNPRSL      * PRS2 Live date = zeros ?
          GOTO      PRSL9999 IF EQUAL        * Yes. Collect data
.
          MATCH     PTCNPRSL,DDATE           * Discharge Date before Live Date?
          GOTO      PRSL9999 IF NOT LESS     * No. Collect data
.
PRSL9000  MOVE      TRUE,EXIT
PRSL9999  RETURN
.
.******************************************************************************
.*                                 CLRY0000                                   *
.*  Clear the trailer record                                                  *
.*  Called by : DMRR0000                                                      *
.******************************************************************************
CLRY0000  MOVE      ONE,FORM2
          MOVE      ZEROVISN,PTYDADMN
.
CLRY1000  STORE     ZERO,FORM2,PTYDYADM,PTYDYSEP,PTYDYSTS,PTYDYBED:
                               PTYDYHAS,PTYDYHAB,PTYDYHAT,PTYDYPAS,PTYDYPAB:
                               PTYDYPAT,PTYDYCOS,PTYDYCOB,PTYDYCOT,PTYDYIES:
                               PTYDYIEB,PTYDYIET,PTYDYHNS,PTYDYHNB,PTYDYHNT:
                               PTYDYPNS,PTYDYPNB,PTYDYPNT,PTYDYH5S,PTYDYH5B:
                               PTYDYH5T,PTYDYP5S,PTYDYP5B,PTYDYP5T,PTYDYHCS:
                               PTYDYHCB,PTYDYHCT,PTYDYPCS,PTYDYPCB,PTYDYPCT:
                               PTYDYCNS,PTYDYCNB,PTYDYCNT,PTYDYINS,PTYDYINB:
                               PTYDYINT,PTYDYHSD,PTYDYPSD,PTYDYCSD,PTYDYISD:
                               PTYDYHCD,PTYDYPCD,PTYDFORM,PTYDYUEP,PTYDYUBD:
                               PTYDYOPS,PTYDYOPB,PTYDYOPT
          ADD       ONE,FORM2
          COMPARE   "53",FORM2
          GOTO      CLRY1000 IF LESS
.
CLRY9999  RETURN
+
.******************************************************************************
.*                                  CLRM0000              Called by: GAEP0000 *
.*                           Clear Month Variables                            *
.******************************************************************************
CLRM0000  UNPACK    CHCSST,CCENT,CYEAR,CMON,CDAY
          MATCH     "01",CDAY
          GOTO      CLRM1000 IF EQUAL       * 1st of month clear variables
.
          PACK      KEY8,AADMNO
          CALL      RDPTMTD1                * Read a MTD file record
          COMPARE   ONE,OVRCD
          GOTO      CLRM9000 IF NOT EQUAL   * Record found, exit
.
CLRM1000  MOVE      ONE,FORM2
          MOVE      ZEROVISN,PTMDADMN
CLRM2000  STORE     ZERO,FORM2,PTMDMADM,PTMDMSEP,PTMDMSTS,PTMDMLVE:
                               PTMDMINH,PTMDMBED,PTMDMHAS,PTMDMHAB,PTMDMPAS:
                               PTMDMPAB,PTMDMHNS,PTMDMHNB,PTMDMPNS,PTMDMPNB:
                               PTMDMH5S,PTMDMH5B,PTMDMP5S,PTMDMP5B,PTMDMCOS:
                               PTMDMCOB,PTMDMCNS,PTMDMCNB,PTMDMIES,PTMDMIEB:
                               PTMDMINS,PTMDMINB,PTMDMHCS,PTMDMHCB,PTMDMPCS:
                               PTMDMPCB,PTMDYHAT,PTMDYPAT,PTMDYCOT,PTMDYIET:
                               PTMDYHNT,PTMDYPNT,PTMDYH5T,PTMDYP5T,PTMDYHCT:
                               PTMDYPCT,PTMDYCNT,PTMDYINT,PTMDMHSD,PTMDMPSD:
                               PTMDMCSD,PTMDMISD,PTMDMHCD,PTMDMPCD,PTMDFORM:
                               PTMDMUEP,PTMDMUBD,PTMDMOPS,PTMDMOPB,PTMDYOPT
          ADD       ONE,FORM2
          COMPARE   "55",FORM2
          GOTO      CLRM2000 IF LESS
.
CLRM9000  MOVE      ZERO,EXIT
CLRM9999  RETURN
+
.******************************************************************************
.*                                  CLRP0000              Called by: GAEP0000 *
.*                           Clear Period Variables                           *
.******************************************************************************
CLRP0000  MOVE      ONE,FORM2
          MOVE      ZEROVISN,PTPDADMN
CLRP1000  STORE     ZERO,FORM2,PTPDMADM,PTPDMSEP,PTPDMSTS,PTPDMLVE:
                               PTPDMINH,PTPDMBED,PTPDMHAS,PTPDMHAB,PTPDMPAS:
                               PTPDMPAB,PTPDMHNS,PTPDMHNB,PTPDMPNS,PTPDMPNB:
                               PTPDMH5S,PTPDMH5B,PTPDMP5S,PTPDMP5B,PTPDMCOS:
                               PTPDMCOB,PTPDMCNS,PTPDMCNB,PTPDMIES,PTPDMIEB:
                               PTPDMINS,PTPDMINB,PTPDMHCS,PTPDMHCB,PTPDMPCS:
                               PTPDMPCB,PTPDYHAT,PTPDYPAT,PTPDYCOT,PTPDYIET:
                               PTPDYHNT,PTPDYPNT,PTPDYH5T,PTPDYP5T,PTPDYHCT:
                               PTPDYPCT,PTPDYCNT,PTPDYINT,PTPDMHSD,PTPDMPSD:
                               PTPDMCSD,PTPDMISD,PTPDMHCD,PTPDMPCD,PTPDFORM:
                               PTPDMUEP,PTPDMUBD,PTPDMOPS,PTPDMOPB,PTPDYOPT
          ADD       ONE,FORM2
          COMPARE   "55",FORM2
          GOTO      CLRP1000 IF LESS
.
CLRP9000  MOVE      ZERO,EXIT
CLRP9999  RETURN
+
.**************************************************************************
.*  Calculate RTIO leave days                                             *
.**************************************************************************
RTDY0000  MOVE      ZERO,RTDAYS
          PACK      KEY30,AADMNO,SP20
          CALL      RDSTRAN2
RTDY1000  CALL      RDKTRAN2
          BRANCH    OVRCD,RTDY9999
.
          MATCH     TADMN,AADMNO
          GOTO      RTDY9999 IF NOT EQUAL
.
          MATCH     FROMDATE,TDATE
          GOTO      RTDY1000 IF LESS        * To date < transfer date
.
          MATCH     TDATE,TODATE
          GOTO      RTDY9999 IF LESS        * To date < transfer date
.
          MATCH     ANSL,TMOVE
          GOTO      RTDY1000 IF NOT EQUAL
.
          MATCH     SP70,PTTRLTYP
          GOTO      RTDY1000 IF EQUAL
.
          PACK      KEY5,ANST,ANSL,PTTRLTYP,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,RTDY1000
.
          MATCH     "3",TCINDC2
          GOTO      RTDY1000 IF NOT EQUAL
.
          PACK      SKEY30,DTADMN,TDATE,TTIME,TWARD,TBED,SP70
          PACK      STDATE,TDATE
          PACK      STTIME,TTIME
.
          MATCH     TDATE,ADATE
          IF        @EQUAL
            GOTO      RTDY1000
          ENDIF
.
          PACK      KEY30,DTADMN,TDATE,SP70
          CALL      RDSTRAN2
RTDY2000  CALL      RDKTRAN2
          BRANCH    OVRCD,RTDY3000
.
          MATCH     TADMN,AADMNO
          GOTO      RTDY3000 IF NOT EQUAL
.
          MATCH     TDATE,STDATE
          GOTO      RTDY3000 IF NOT EQUAL
.
          MATCH     STTIME,TTIME
          GOTO      RTDY3000 IF NOT LESS
.
          MATCH     ANSR,TMOVE
          GOTO      RTDY2000 IF NOT EQUAL
.
          ADD       ONE,RTDAYS
.
RTDY3000  MOVE      SKEY30,KEY30
          CALL      RDTRAN2
          GOTO      RTDY1000
.
RTDY9999  RETURN
+
.******************************************************************************
.*                Admission Source and Admission Type Validation              *
.******************************************************************************
ASAT0000  MOVE      SP70,DIM1
          MOVE      EPIASRCE,DIM1              * source must be S,Y,T,N,A or H
.
          MATCH     "K",DIM1
          GOTO      ASAT9999 IF EQUAL          * allow source = K (2012)
.
          REP       "S-Y-T-B-N-A-H-Q-",DIM1                            *I-60167
          MATCH     "-",DIM1
          GOTO      ASAT9100 IF NOT EQUAL
.
          MOVE      SP70,DIM1
          MOVE      EPIATYPE,DIM1              * atype must be S,Y,M,L,X,C or O
          REP       "K-S-Y-M-C-O-P-N-",DIM1
          MATCH     "-",DIM1
          GOTO      ASAT9200 IF NOT EQUAL
.
          MATCH     ANSY,EPIASRCE              * source Y must have atype of Y
          IF        @EQUAL
            MATCH     ANSY,EPIATYPE
            GOTO      ASAT9999 IF EQUAL
            GOTO      ASAT9000
          ENDIF
.
          MATCH     ANSY,EPIATYPE              * atype Y must have source of Y
          IF        @EQUAL
            MATCH     ANSY,EPIASRCE
            GOTO      ASAT9999 IF EQUAL
            GOTO      ASAT9000
          ENDIF
.
          MATCH     ANSS,EPIASRCE              * source S must have atype of S
          IF        @EQUAL
            MATCH     ANSS,EPIATYPE
            GOTO      ASAT9999 IF EQUAL
            GOTO      ASAT9000
          ENDIF
.
          MATCH     ANSS,EPIATYPE              * atype S must have source of S
          IF        @EQUAL
            MATCH     ANSS,EPIASRCE
            GOTO      ASAT9999 IF EQUAL
            GOTO      ASAT9000
          ENDIF
.
.         **** before 1/7/14 source T,N,H or A must have atype M,L,X,C,O
.         **** before 1/7/14 source B must have atype L,X,C,O
.         **** after 1/7/14 source T,N,H or A must have atype M,C,O,P
.         **** after 1/7/14 source B must have atype C,O,P
.
          MATCH     ANST,EPIASRCE  
          GOTO      ASAT0100 IF EQUAL
.
          MATCH     ANSN,EPIASRCE
          GOTO      ASAT0100 IF EQUAL
.
          MATCH     ANSH,EPIASRCE
          GOTO      ASAT0100 IF EQUAL
.
          MATCH     ANSB,EPIASRCE
          GOTO      ASAT0100 IF EQUAL
.
          MATCH     ANSA,EPIASRCE
          GOTO      ASAT0100 IF EQUAL
.
          GOTO      ASAT0200
.
ASAT0100  MOVE      SP70,TEMPVAR
          MOVE      "MCOP",TEMPVAR
          REP       " _",TEMPVAR
          SCAN      EPIATYPE,TEMPVAR
          GOTO      ASAT9000 IF NOT EQUAL
          MATCH     ANSB,EPIASRCE
          IF        @EQUAL
            MATCH     ANSM,EPIATYPE
            GOTO      ASAT9000 IF EQUAL
          ENDIF
          GOTO      ASAT9999
.
ASAT0200  GOTO      ASAT9999
.
ASAT9000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 056 : Invalid admission source ",EPIASRCE," with ":
                    "admission type ",EPIATYPE," for admission number ":
                    AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      ASAT9999
.
ASAT9100  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 041 : Invalid admission source ",EPIASRCE:
                    " for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      ASAT9999
.
ASAT9200  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 052 : Invalid admission type ",EPIATYPE:
                    " for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      ASAT9999
.
ASAT9999  RETURN
+
.******************************************************************************
.*                Care Type and Separation Mode Validation                    *
.******************************************************************************
CTSM0000  MOVE      SP70,DIM1
          UNPACK    EPISCTYP,CARETYP1,CARETYP2                         *I-49016
          MOVE      CARETYP1,DIM1
.
          REP       "P-1-2-6-8-5-9-0-3-4-U-R-",DIM1
.
          CMATCH    "5",CARETYP1
          IF        @EQUAL
            MOVE      CARETYP2,DIM1       * check Care Type for "5x"
            REP       "E-T-K-G-S-A-",DIM1
          ENDIF
.
          CMATCH    "R",CARETYP1
          IF        @EQUAL
            MOVE      CARETYP2,DIM1     * check for "R1" or "R2" (2012 mod)
            REP       "1-2-",DIM1
          ENDIF
.
          MATCH     "-",DIM1
          GOTO      CTSM9100 IF NOT EQUAL        * valid care type ?
.
          MOVE      SP70,DIM1
          MOVE      EPISTYPE,DIM1
.
          REP       "S-D-Z-T-B-N-A-H-R-G-C-J-L-",DIM1
          MATCH     "-",DIM1
          GOTO      CTSM9200 IF NOT EQUAL        * valid separation type ?
.
          CMATCH    "R",EPISCTYP
          GOTO      CTSM0100 IF EQUAL            * (2012 mod)
.
          MATCH     "F ",EPISCTYP                                      *C-49016
          GOTO      CTSM0100 IF EQUAL
.
          MATCH     "E ",EPISCTYP                                      *C-49016
          GOTO      CTSM0200 IF NOT EQUAL
.
CTSM0100  MOVE      SP70,TEMPVAR
          MOVE      "SDZTBNAHJL",TEMPVAR
          REP       " _",TEMPVAR
          SCAN      EPISTYPE,TEMPVAR
          GOTO      CTSM9000 IF NOT EQUAL
          GOTO      CTSM9999
.
CTSM0200  MATCH     "8 ",EPISCTYP                                      *C-49016
          IF        @EQUAL
            MOVE      "DZTRBNAHSJL",TEMPVAR
.
            REP       " _",TEMPVAR
            SCAN      EPISTYPE,TEMPVAR
            GOTO      CTSM9000 IF NOT EQUAL
            GOTO      CTSM9999
          ENDIF
.
          MATCH     "0 ",EPISCTYP                                      *C-49016
          GOTO      CTSM0400 IF NOT EQUAL
.
CTSM0300  MOVE      SP70,TEMPVAR
.
          MOVE      "DZTRBNAHSJL",TEMPVAR
.
          REP       " _",TEMPVAR
          SCAN      EPISTYPE,TEMPVAR
          GOTO      CTSM9000 IF NOT EQUAL
          GOTO      CTSM9999
.
CTSM0400  MATCH     "3 ",EPISCTYP                                      *C-49016
          GOTO      CTSM0500 IF NOT EQUAL
.
          MOVE      SP70,TEMPVAR
          MOVE      "SDTNHJL",TEMPVAR
          REP       " _",TEMPVAR
          SCAN      EPISTYPE,TEMPVAR
          GOTO      CTSM9000 IF NOT EQUAL
          GOTO      CTSM9999
.
CTSM0500  MATCH     "U ",EPISCTYP                                      *C-49016
          GOTO      CTSM0600 IF NOT EQUAL
.
          MOVE      SP70,TEMPVAR
          MOVE      "DZTH",TEMPVAR
          REP       " _",TEMPVAR
          SCAN      EPISTYPE,TEMPVAR
          GOTO      CTSM9000 IF NOT EQUAL
          GOTO      CTSM9999
.
CTSM0600  MATCH     "10",EPISCTYP                * (2012 mod)
          GOTO      CTSM1000 IF NOT EQUAL
.
          MATCH     "G",EPISTYPE
          GOTO      CTSM9000 IF NOT EQUAL
          GOTO      CTSM9999
.
CTSM1000  MATCH     ANSS,EPISTYPE
          GOTO      CTSM1100 IF NOT EQUAL
.
          MOVE      SP70,TEMPVAR
.
          MOVE      "PFEK12675934",TEMPVAR                            *I-60167
.
          REP       " _",TEMPVAR
.         SCAN      EPISCTYP,TEMPVAR                                    D-49016
          SCAN      CARETYP1,TEMPVAR                                   *I-49016
          GOTO      CTSM9000 IF NOT EQUAL
          GOTO      CTSM9999
.
CTSM1100  MATCH     ANSZ,EPISTYPE
          GOTO      CTSM1200 IF NOT EQUAL
.
          MOVE      SP70,TEMPVAR
.
          MOVE      "PFE126785904U",TEMPVAR                           *I-60167
.
          REP       " _",TEMPVAR
.         SCAN      EPISCTYP,TEMPVAR                                    D-49016
          SCAN      CARETYP1,TEMPVAR                                   *I-49016
          GOTO      CTSM9000 IF NOT EQUAL
          GOTO      CTSM9999
.
CTSM1200  MATCH     ANSN,EPISTYPE
          IF        !@EQUAL
            MATCH     ANSJ,EPISTYPE
            IF        !@EQUAL
              MATCH     ANSL,EPISTYPE
              GOTO      CTSM1300 IF NOT EQUAL
            ENDIF
          ENDIF
.
          MOVE      SP70,TEMPVAR
.
          MOVE      "PFEK1267859034",TEMPVAR                           *I-60167
.
          REP       " _",TEMPVAR
.         SCAN      EPISCTYP,TEMPVAR                                    D-49016
          SCAN      CARETYP1,TEMPVAR                                   *I-49016
          GOTO      CTSM9000 IF NOT EQUAL
          GOTO      CTSM9999
.
CTSM1300  MATCH     ANSA,EPISTYPE
          GOTO      CTSM1400 IF NOT EQUAL
.
          MOVE      SP70,TEMPVAR
.
          MOVE      "PFE126785904",TEMPVAR                            *I-60167
.
          REP       " _",TEMPVAR
.         SCAN      EPISCTYP,TEMPVAR                                    D-49016
          SCAN      CARETYP1,TEMPVAR                                   *I-49016
          GOTO      CTSM9000 IF NOT EQUAL
          GOTO      CTSM9999
.
CTSM1400  MATCH     ANSB,EPISTYPE                                      *I-60167
          GOTO      CTSM1500 IF NOT EQUAL
.
          MOVE      SP70,TEMPVAR
.
          MOVE      "PFE1267K85904",TEMPVAR         
.
          REP       " _",TEMPVAR
          SCAN      CARETYP1,TEMPVAR         
          GOTO      CTSM9000 IF NOT EQUAL
          GOTO      CTSM9999                                       *end I-60167 
.
CTSM1500  MATCH     ANSR,EPISTYPE
          GOTO      CTSM9999 IF NOT EQUAL
.
          MOVE      SP70,TEMPVAR
.
          MOVE      "FE1P267K85904",TEMPVAR
.
          REP       " _",TEMPVAR
          SCAN      CARETYP1,TEMPVAR
          GOTO      CTSM9000 IF NOT EQUAL
          GOTO      CTSM9999
.
CTSM9000  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 489 : Invalid Care Type ",EPISCTYP," with ":
                    "separation mode ",EPISTYPE," for admission number ":
                    AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      CTSM9999                * C CAR 42192
.
CTSM9100  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 107 : Invalid Care Type ",EPISCTYP:
                    " for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      CTSM9999
.
CTSM9200  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 103 : Invalid Sep Type ",EPISTYPE:
                    " for admission number ",AADMNO,*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      CTSM9999
.
CTSM9999  RETURN
.******************************************************************************
.*                        I/O Routines For The Tempfile                       *
.******************************************************************************
RDTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      ADMTEMP,KEY8;DTMPADMN
          GOTO      OVERCOND IF OVER
          MOVE      DTMPADMN,TMPADMN
          RETURN
.
WRTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY8
          WRITE     ADMTEMP,KEY8;KEY8
          RETURN
.
.
RSTMROY1  MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      ROYTEMP,KEY8;;
          RETURN
.
RDTMROY1  MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      ROYTEMP,KEY8;DROYADMN
          GOTO      OVERCOND IF OVER
          MOVE      DROYADMN,ROYADMN
          RETURN
.
RKTMROY1  MOVE      ZERO,OVRCD
          RESET     KEY8
          READKS    ROYTEMP;DROYADMN
          GOTO      OVERCOND IF OVER
          MOVE      DROYADMN,ROYADMN
          RETURN
.
RATMROY1  MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      ROYTEMP,KEY8;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMROY1  MOVE      ZERO,OVRCD
          RESET     KEY8
          WRITE     ROYTEMP,KEY8;KEY8
          RETURN
.
.
RSPRTMP1  READ      PRSTEMP1,KEY18;;
          RETURN
.
RKPRTMP1  MOVE      ZERO,OVRCD
          READKS    PRSTEMP1;DXADMN,DXTYPE,XCHDATE,XALT,XADATE
          GOTO      OVERCOND IF OVER
          MOVE      DXADMN,XADMN
          MOVE      DXTYPE,XTYPE
          RETURN
.
RSPRTMP2  READ      PRSTEMP2,KEY26;;
          RETURN
.
RKPRTMP2  MOVE      ZERO,OVRCD
          READKS    PRSTEMP2;DXADMN,DXTYPE,XCHDATE,XALT,XADATE
          GOTO      OVERCOND IF OVER
          MOVE      DXADMN,XADMN
          MOVE      DXTYPE,XTYPE
          RETURN
.
WRPRTMP1  WRITE     PRSTEMP1,KEY18;KEY18,XADATE
          RETURN
+
.******************************************** Start of addition        *I-49016
.******************************************************************************
.*                                  MHSWI000                                  *
.*            Get Mental Health State Wide Identifier                GCTY0000 *
.******************************************************************************
MHSWI000  MOVE      ZERO,EXIT
....      MOVE      SP10,EPIMHSWI           * (10 bytes)
.
          UNPACK    EPISCTYP,CARETYP1,CARETYP2 
          CMATCH    "5",CARETYP1
          GOTO      MHSWI100 IF EQUAL
.
          CMATCH    "4",CARETYP1
          GOTO      MHSWI999 IF NOT EQUAL
.
          CALL      CMHS0000
          BRANCH    EXIT,MHSWI150
          GOTO      MHSWI999
.
MHSWI100  MOVE      CARETYP2,DIM1
          REP       "E-T-K-G-S-A-",DIM1
          MATCH     "-",DIM1
          GOTO      MHSWI999 IF NOT EQUAL * its a Mental Health error
.                                             * valid Mental Health Care Types
MHSWI150  BRANCH    PTCNHOSP,MHSWI200       * 1 = Public
          GOTO      MHSWI999                * 0 = Private  (V6.12)
.
MHSWI200  MOVE      ZERO,OVRCD
          SQUEEZE   PMPXPRIS                * (15 bytes)
          MOVE      PMPXPRIS,EPIMHSWI       * move PRISM No. to MHSWI
          RESET     EPIMHSWI
          PACK      LJUSCODE,EPIMHSWI,SP70
          MOVE      "10",JUSTNO
          CALL      RJUS0000
          MOVE      RJUSCODE,EPIMHSWI
... C-53458
          MATCH     SP10,EPIMHSWI
          IF        !@EQUAL
.                                             * 0 filled if there is value for
            REP       " 0",EPIMHSWI           * EPIMHSWI
.******************************************** start of addition        *I-55430
          ELSE
MHSWI888    COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL   * Print admin details
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS    * Line count >= 60
            PRINT     "Error 575 : Psych Care Type (5x), MHSWPI Blank ":
                      AADMNO,*N
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
.********************************************   end of addition        *I-55430
          ENDIF
....
.
MHSWI999  RETURN
.********************************************   End of addition        *I-49016
+
.******************************************************************************
.*                                  CMHS0000              Called by: MHSWI000 *
.*                      Check If an ECT Code Exists                           *
.******************************************************************************
CMHS0000  MOVE      ZERO,EXIT
          PACK      KEY16,AADMNO,SP20                                 *C-240107
          CALL      RSPTECO2                * Position on & read a patient
CMHS1000  CALL      RKPTECO2                  episode operation file record
          BRANCH    OVRCD,CMHS9999
.
          MATCH     AADMNO,PTEOADMN
          GOTO      CMHS9999 IF NOT EQUAL
.
.         MATCH     "93341-",PTEOCODE
.         GOTO      CMHS1000 IF NOT EQUAL
.
          PACK      KEY9,PTEOCODE,SP10
          CALL      RDPTICO1
          BRANCH    OVRCD,CMHS1000
.
          MATCH     "1907",PT0OBLKN
          GOTO      CMHS1000 IF NOT EQUAL
.
          MOVE      ONE,EXIT
          GOTO      CMHS9999
.
CMHS9999  RETURN
+
.******************************************************************************
.*                                  VPPD0000                         *I-60167 *
.*            Validate Palliative Care Patient Days                           *
.*            N/A after July 2009, removing it now to avoid further confusion *
.******************************************************************************
.VPPD0000 MOVE      SP70,EPIPACPD
.
.         MATCH     "8",EPISCTYP
.         GOTO      VPPD9999 IF NOT EQUAL
.
.         PACK      EPISDATE,EPISDATE,SP70
.         MATCH     SP70,EPISDATE
.         GOTO      VPPD9999 IF EQUAL
.
.         BRANCH    PTCNHOSP,VPPD2000         * Public hospital
.         MATCH     "1",PTCNTPAL
.         GOTO      VPPD2000 IF EQUAL
.         GOTO      VPPD9999
.
.VPPD2000 MOVE      ABDYSALL,FORM3
.         MOVE      FORM3,EPIPACPD
.         REPLACE   " 0",EPIPACPD
.
.VPPD9999 RETURN
.+
.******************************************************************************
.*                                  MCAG0000                         *I-60167 *
.*            Validate Medicare Ref Number and Patient Age at Admission       *
.******************************************************************************
MCAG0000  COMPARE   ONE,PTCNMEDC
          GOTO      MCAG9999 IF NOT EQUAL
.
          SQUEEZE   PTMXMCCD
          MATCH     "0",PTMXMCCD
          GOTO      MCAG1000 IF EQUAL
.
          GOTO      MCAG9999
.
MCAG1000  IF        PSAGEMNT>6 & PSAGEMNT<12
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS
.
           PRINT     "518: Medicare Code = 0 but age at admission > 6 months",*N
            ADD       TWO,CLNO
            ADD       ONE,NUMWARN
            MOVE      ONE,WRNFLG
            GOTO      MCAG9999
          ENDIF
.
          IF        PSAGEMNT>=12
            COMPARE   ONE,ADMDTFLG
            CALL      ADDT0000 IF NOT EQUAL
            COMPARE   "60",CLNO
            CALL      HEAD0000 IF NOT LESS
.
          PRINT     "Error 519: Medicare Code = 0 but age at admission > 12 months",*N
            ADD       TWO,CLNO
            ADD       ONE,NUMERROR
            MOVE      ONE,PTERRFLG
            GOTO      MCAG9999
          ENDIF
.
MCAG9999  RETURN
+
.******************************************************************************
.*                                  GETHOS00                                  *
.*     Get hospital if multi hospital and running multiple extracts           *
.******************************************************************************
GETHOS00  MOVE      ZERO,EXIT
          MOVE      SP70,HOSPCODE
          MOVE      TEN,CVERT
          DISPLAY   *P1:CVERT,*EL,"Hospital Id : ";
          MATCH     "1",PTCNPRSM
          IF        !@EQUAL
            DISPLAY   *P1:CVERT,*EL,"Continue : ";
            KEYIN     *P15:CVERT,ANS
            GOTO      GETHOS99
          ENDIF
.
          MOVE      TEN5,ECOL
          MOVE      CVERT,EVERT
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND           * Not Mandatory
          OPEN      PATHSPA1,"pathspaf"
.
          CALL      PATHSPKY
          BRANCH    EXIT,GETHOS95,GETHOS95
          GOTO      GETHOS30
.
GETHOS30  DISPLAY   *P20:CVERT,*V2LON,PTHSNAME;
          PACK      KEY3,PTHSHOSP,SP70
          CALL      RDPMPRD1
          BRANCH    OVRCD,GETHOS90
          PACK      HOSPCODE,PTHSHOSP,SP70
          GOTO      GETHOS99
.
GETHOS90  DISPLAY   *P1:24,*EL,"No record on pmsprdaf for this hospital";
          CALL      HITENTER
          MOVE      ONE,EXIT
          GOTO      GETHOS99
.
GETHOS95  MOVE      ONE,EXIT
          GOTO      GETHOS99
.
GETHOS99  RETURN
+ 
.******************************************************************************
.*                                  EXEP0000                                  *
.*                            Get Extra Episode Details                       *
.******************************************************************************
EXEP0000  COMPARE   ONE,PTCNHOSP
          GOTO      EXEP9000 IF NOT EQUAL
.
          MATCH     SP70,DDATE
          GOTO      EXEP9000 IF EQUAL
. 
          PACK      EXECLGP,PTDSCLGP,SP70
          PACK      EXEACPA,ONE,SP70    
.
          BRANCH    DOYR2025,EXEP0100
          CALL      VNDIS000        * Validate NDIS Participant Flag - EXENDIS
.
EXEP0100  PACK      KEY27,DURNO,ZERO,ZERO,THREE,DDATE,Z70
          CALL      RSPMDAU2
EXEP1000  CALL      RPPMDAU2
          BRANCH    OVRCD,EXEP3000
.
          MATCH     PMDEURNO,DURNO
          GOTO      EXEP3000 IF NOT EQUAL
.
          MATCH     "003",PMDERTYP
          GOTO      EXEP3000 IF NOT EQUAL 
.
          MATCH     PMDECDAT,DDATE
          GOTO      EXEP1000 IF LESS 
.
          MOVE      PMDEFL01,DIM3
.
          MATCH     SP70,DIM3
          GOTO      EXEP3000 IF EQUAL
.
          PACK      KEY5,ANSP,NINE,DIM3,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,EXEP3000
.
          PACK      EXEACPA,THCSCOD,SP70
.
EXEP3000  CALL      UNCD0000
.
          ADD       "1",RECCNT              * Increment total record count
.
          IF        PRERRFLG<>1
            GOTO       EXEP4500
          ENDIF
.
          IF        MEDIUM<>1
            GOTO      EXEP4000
          ENDIF
.
          WRITE     WORK,SEQ;J5,UNIQKEYL,EXEACPA,EXECLGP,SP1,EXMRFDIS,EXREFDIS
.          
          GOTO      EXEP4500
.
EXEP4000  WRITE     WORK,SEQ;J5,UNIQKEYL,EXEACPA,EXECLGP,SP1,EXMRFDIS,EXREFDIS;
.
EXEP4500  COMPARE   "99999",RECCNT
          GOTO      EXEP9000 IF LESS        * Record counter < max no of recs
          GOTO      EXEP9500
.
EXEP9000  MOVE      ZERO,EXIT
          GOTO      EXEP9999
.
EXEP9500  MOVE      ONE,EXIT
EXEP9999  RETURN
+
.******************************************************************************
.* VNDIS000                                                                   *
.* Validate NDIS Participant Flag                                             *
.* Field is mandatory in the J5 Extract if the following conditions are met:  *
.* 1)Visit Care type (Cat CC) HDP1-2 = 1, 4, 6, 8, 9, P or MC                 *
.* 2)Separation Mode (Cat DD) HDP1 NOT = Z                                    *
.* If the above conditions are met and the NDIS Participant field is not      *
.* populated with a valid entry, generate a rejection message 722             *
.******************************************************************************
VNDIS000  MOVE      SP70,EXENDIS
          MOVE      SP70,EXMRFDIS
          MOVE      SP70,EXREFDIS
.
          MATCH     SP70,ACARE                    * Care Class
          GOTO      VNDIS999 IF EQUAL | @EOS
.
.-------- Check Type of care
          PACK      KEY5,CATCC,ACARE,SP70        
          CALL      RDCODE1
          BRANCH    OVRCD,VNDIS999
.
          UNPACK    THCSCOD,DIM2         * Type of Care is          
          MATCH     "1 ",DIM2              * 1 - NHT/Non-Acute (PMS49)
          GOTO      VNDIS500 IF EQUAL       * Yes, check Separation mode
.
          MATCH     "4 ",DIM2              * 4  - Acute (PMS49)
          GOTO      VNDIS500 IF EQUAL       * Yes, check Separation mode   
.
.          IF        DOYR2024=1
          MATCH     "5A",DIM2              * 5A - Acute, Adult Mental Health
          GOTO      VNDIS500 IF EQUAL       * Yes, check Seperation mode
.
          MATCH     "5E",DIM2              * 5E - Mental Health SECU
          GOTO      VNDIS500 IF EQUAL       * Yes, check Seperation mode
.
          MATCH     "5G",DIM2              * 5G - Acute, Aged Persons MH
          GOTO      VNDIS500 IF EQUAL       * Yes, check Seperation mode
.
          MATCH     "5K",DIM2              * 5K - Acute, Child/Adolescent MH
          GOTO      VNDIS500 IF EQUAL       * Yes, check Seperation mode
.
          MATCH     "5S",DIM2              * 5S - Acute, Specialist MH
          GOTO      VNDIS500 IF EQUAL       * Yes, check Seperation mode
.
          MATCH     "5T",DIM2              * 5T - Mental Health Nursing Home
          GOTO      VNDIS500 IF EQUAL       * Yes, check Seperation mode
.          ENDIF
.
          MATCH     "6 ",DIM2              * 6 - Design. Rehab L2 (PMS49) 
          GOTO      VNDIS500 IF EQUAL       * Yes, check Separation mode
.
          MATCH     "8 ",DIM2              * 8 - Palliative Care (PMS49)
          GOTO      VNDIS500 IF EQUAL       * Yes, check Separation mode 
.
          MATCH     "9 ",DIM2              * 9 - Geriatric Eval (PMS49)
          GOTO      VNDIS500 IF EQUAL       * Yes, check Separation mode
.
          MATCH     "P ",DIM2              * P - Design. Rehab Prog L4(PMS49)
          GOTO      VNDIS500 IF EQUAL       * Yes, check Separation mode 
.
          MATCH     "MC",DIM2              * MC - Maintenance Care
          GOTO      VNDIS500 IF EQUAL       * Yes, check Separation mode
.
          GOTO      VNDIS999 IF NOT EQUAL  * None of the above, exit
.
.
. Clinically Ready for Discharge Date
VNDIS500  MATCH     ADATE,DDATE     * must be overnight to send
          GOTO      VNDIS900 IF EQUAL
.
          PACK      KEY11,DDADMNO,ZERO,ZERO,TWO,SP70
          CALL      RDVSXDC1
          IF        OVRCD<>1
            MATCH     SP70,VSXDDAT1
            IF        !@EQUAL
.             Must be same or after the Admission Date
VNDIS501      MATCH     ADATE,VSXDDAT1     * Invalid if prior to Admission Date
              IF        @LESS
                COMPARE   ONE,ADMDTFLG
                CALL      ADDT0000 IF NOT EQUAL   * Print admin details
                COMPARE   "60",CLNO
                CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
                PRINT     "Error 745 : Clinically Ready for Discharge Date ":
                          "prior to Admission Date",*N
                ADD       TWO,CLNO
                ADD       ONE,NUMERROR
                MOVE      ONE,PTERRFLG
              ELSE
                UNPACK    VSXDDAT1,CCENT,CYEAR,CMON,CDAY
                PACK      EXMRFDIS,CDAY,CMON,CCENT,CYEAR
.
                PACK      KEY5,CATz1,VSXDCOD2,SP70
                CALL      RDCODE1
                BRANCH    OVRCD,VNDI5021
.
                MATCH     SP70,THCSCOD
                IF        @EQUAL
VNDI5021          MATCH     "20240701",DDATE
                  GOTO      VNDIS900 IF LESS        * skip date before 20240701
.
                  COMPARE   ONE,ADMDTFLG
                  CALL      ADDT0000 IF NOT EQUAL   * Print admin details
                  COMPARE   "60",CLNO
                  CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
                  PRINT     "Error 746 : Reason for Discharge Delay and ":
                            "Clinically Ready for Discharge Date mismatch ":
                            "for ",DDADMNO,*N
                  ADD       TWO,CLNO
                  ADD       ONE,NUMERROR
                  MOVE      ONE,PTERRFLG
                ELSE  
                  MATCH     "1",THCSCOD
                  GOTO      VNDIS502 IF EQUAL
.
                  MATCH     "2",THCSCOD
                  GOTO      VNDIS502 IF EQUAL
.
                  MATCH     "3",THCSCOD
                  GOTO      VNDIS502 IF EQUAL
.
                  MATCH     "4",THCSCOD
                  GOTO      VNDIS502 IF EQUAL
.
                  MATCH     "5",THCSCOD
                  GOTO      VNDIS502 IF EQUAL
.
                  MATCH     "6",THCSCOD
                  GOTO      VNDIS502 IF EQUAL
.
                  MATCH     "7",THCSCOD
                  GOTO      VNDIS502 IF EQUAL
.
                  MATCH     "8",THCSCOD
                  GOTO      VNDIS502 IF EQUAL
.
                  COMPARE   ONE,ADMDTFLG
                  CALL      ADDT0000 IF NOT EQUAL   * Print admin details
                  COMPARE   "60",CLNO
                  CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
                  PRINT     "Error 747 : Reason for Discharge Delay":
                            " invalid: ",THCSCOD," for ",DDADMNO,*N
                  ADD       TWO,CLNO
                  ADD       ONE,NUMERROR
                  MOVE      ONE,PTERRFLG
                  GOTO      VNDIS900
.
VNDIS502          MOVE      THCSCOD,EXREFDIS
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
.-------- Check NDIS Participant Flag from pmsvx1af.pmvxud13
.-------- is mandatory and must have a valid value in HDP Position 1,
.-------- otherwise write rejection message
VNDIS900  MATCH     SP70,PMVXUD13
          GOTO      VNDIS999 IF EQUAL      * Skip if not set
.
          PACK      KEY5,CATN,PMVXUD13,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,VNDIS910
. 
          UNPACK    THCSCOD,DIM1           * HDP Position 1
.
          TYPE      DIM1                   * Numeric?
          GOTO      VNDIS910 IF NOT EQUAL
.
          MOVE      ZERO,FORM1
          MOVE      DIM1,FORM1
.
          IF        FORM1 > 0 & FORM1 < 5
            MOVE      DIM1,EXENDIS         * Valid NDIS Participant Flag value
            GOTO      VNDIS999
          ELSE
            GOTO      VNDIS910             * Invalid NDIS Participant Flag
          ENDIF  
          
.-------- Rejection message 722
VNDIS910  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 722 : Invalid NDIS Participant Flag.  ":
                    "Please review Particpant Flag details.",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      VNDIS999
.
VNDIS999  RETURN
+
.******************************************************************************
.*                                  GPRO0000              Called by: GDGR0000 *
.*                             Get Proceduralist ID                           *
.******************************************************************************
GPRO0000  MOVE      ZERO,PROCCNTR           * Procedure counter
.
          PACK      KEY16,AADMNO,SP70
          CALL      RSPTECO2
GPRO1000  CALL      RKPTECO2
          BRANCH    OVRCD,GPRO9999
.
          MATCH     AADMNO,PTEOADMN
          GOTO      GPRO9999 IF NOT EQUAL   * Different admin no
.
          COMPARE   EPISODNO,PTEOEPNO
          GOTO      GPRO1000 IF NOT EQUAL   * Different episode no
.
          MATCH     ANSX,PTEOTYPE
          GOTO      GPRO1000 IF EQUAL       * Ignore operation code
.
          PACK      KEY9,PTEOCODE,SP10
          CALL      RDPTICO1
          BRANCH    OVRCD,GPRO9999
.
          COMPARE   ONE,ICDRDVER            * ICD9?
          IF        @EQUAL
            MOVE      OICD10CD,PTEOCODE     * Mapped ICD10 operation code
            PACK      KEY9,PTEOCODE,SP10
            CALL      RDPT10O1              * Read an ICD10 operation file rec
            BRANCH    OVRCD,GPRO9999
          ENDIF
.
          ADD       ONE,PROCCNTR            * Procedure counter
.
. 2023 or later public hospitals only report the proceduralist from the
. first coded procedure.
.
          IF        PTCNHOSP = 1
            MATCH     "1",PT0ODTMN           * PT0ODTMN 0=Mandatory
            GOTO      GPRO9999 IF EQUAL      * Ingore if Date/Time NOT mandatory
          ENDIF
.
. 2023 or later private hospitals will report the first ECT procedures
. (14224-xx) proceduralist if the first coded procedure has no proceduralist
.
          IF        PTCNHOSP = 0 & PROCCNTR = 1
            MATCH     "1",PT0ODTMN           * PT0ODTMN 0=Mandatory
            GOTO      GPRO1000 IF EQUAL      * Ingore if Date/Time NOT mandatory
          ENDIF
.
          IF        PTCNHOSP = 0 & PROCCNTR <> 1
            MATCH     "14224",PTEOCODE
            GOTO      GPRO1000 IF NOT EQUAL * Skip not an ETC procedure
.
            MATCH     "1",PT0ODTMN          * PT0ODTMN 0=Mandatory
            GOTO      GPRO9999 IF EQUAL     * Ingore if Date/Time NOT mandatory
          ENDIF
.
          MATCH     "20240701",DDATE
          IF        @LESS
            MATCH     SP70,PTEOCLIN           * Report error 714 proceduralist
            GOTO      GPRO9100 IF EQUAL       * is mandatory and blank
            GOTO      GPRO9100 IF EOS
          ELSE
            MATCH     SP70,PTEOCLIN
            GOTO      GPRO8000 IF EQUAL|@EOS * no 714 error if dis date is 20240701 & beyond 
          ENDIF
.
          PACK      KEY10,PTEOCLIN
          CALL      RDPMHCP1
          BRANCH    OVRCD,GPRO9999
.
          MATCH     SP70,EPPROCDT
          GOTO      GPRO9000 IF EQUAL |@EOS
.
          UNPACK    EPPROCDT,DIM8
.
          MATCH     "20240701",DDATE
          IF        @LESS
            MATCH     SP70,PMHCMPGN
            GOTO      GPRO9100 IF EQUAL|@EOS
          ELSE
            MATCH     SP70,PMHCMPGN
            GOTO      GPRO8100 IF EQUAL|@EOS * no 714 error if dis date is 20240701 & beyond
          ENDIF
. 
          MOVE      PMHCMPGN,DIM13
          SQUEEZE   DIM13
          MOVELPTR  DIM13,FORM2             * Get actual length
          IF        FORM2 = 13
            GOTO      GPRO9000              * 13 Chars, write Proceduralist ID
          ELSE
            GOTO      GPRO9200              * Write rejection error
          ENDIF
.
GPRO8000  MATCH     SP70,EPPROCDT
          GOTO      GPRO9000 IF EQUAL |@EOS
          UNPACK    EPPROCDT,DIM8
.
GPRO8100  PACK      KEY8,AADMNO,SP70
          CALL      RDMISS1
          BRANCH    OVRCD,GPRO9999
.
          MATCH     SP70,ATYPE
          GOTO      GPRO9100 IF EQUAL
          PACK      KEY5,ANSA,SP1,ATYPE,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,GPRO9999
          MATCH     ANSC,THCSCOD  * Cat A HDP Default = C don't output 714 err
          GOTO      GPRO9100 IF NOT EQUAL
.
          PACK      KEY25,AADMNO,ANSA,SP70
          CALL      RDPTASF1       * Get Contract Role
          BRANCH    OVRCD,GPRO9999
          MATCH     "A",PTAFCROL
          GOTO      GPRO9100 IF NOT EQUAL
.
GPRO9000  MATCH     "20240701",DDATE
          IF        @LESS
            MOVE      PMHCMPGN,EPPLSTID
            GOTO      GPRO9999
          ELSE
            MATCH     SP70,PTEOCLIN
            IF        @EQUAL
              MOVE      SP70,EPPLSTID
              GOTO      GPRO9999
            ELSE
              MOVE      PMHCMPGN,EPPLSTID
              GOTO      GPRO9999
            ENDIF
          ENDIF
.
GPRO9100  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 714 : Proceduralist ID / Procedure Start ":
                    "Time Mismatch",*N
          ADD       TWO,CLNO
          MOVE      ONE,PTERRFLG
          ADD       ONE,NUMERROR
          GOTO      GPRO9999
.
GPRO9200  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 741 : Proceduralist ID invalid",*N
          ADD       TWO,CLNO
          MOVE      ONE,PTERRFLG
          ADD       ONE,NUMERROR
          GOTO      GPRO9999

GPRO9999  RETURN
+
.******************************************************************************
.*        Created for TSK 0911056                                             *
.*        Requires DSEXCHAR as input                                          *
.*        Returns  DSEXDESC    8 character description                        *
.*                 DSEXNO      Form 1 field for Cat.G Indc.5                  *
.******************************************************************************
SEXDSC00  MOVE      NINE,DSEXNO             * default 9
          MOVE      SP70,DSEXDESC
.
          PACK      KEY5,ANSG,SP1,DSEXCHAR,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,SEXDSC91
.
          MOVE      ZERO,F1
          MOVE      TCINDC5,F1
          MOVE      F1,DSEXNO
.
          PACK      DSEXDESC,TDESC,SP70
.
          GOTO      SEXDSC99
.
SEXDSC91  MOVE      "Invalid Sex",DSEXDESC  * all other values are invalid
.
SEXDSC99  RETURN
+
.******************************************************************************
.*        Check and send E5 if coding completed with a procedure that         *
.*        that requires unplanned theatre to be sent                          *
.******************************************************************************
CHKE5000  COMPARE   THREE,ASTAT
          GOTO      CHKE5999 IF NOT EQUAL   * Not discharged
.
          MATCH     CHCSDTE,DDATE
          GOTO      CHKE5999 IF LESS        * Discharge date < start HDP date 
.
          MATCH     CHCSST,ADATE
          GOTO      CHKE5999 IF NOT LESS    * Adm date >= PRS2 extract start dte
.
          PACK      KEY16,SP8,AADMNO
          CALL      RDPTPEI1                * Read a PRS2 inc/exc file record
          COMPARE   ONE,OVRCD
          GOTO      CHKE5999 IF NOT EQUAL   * Record exists, already sent
.
          PACK      KEY16,CHCSST,AADMNO
          CALL      RDPTPEI1                * Read a PRS2 inc/exc file record
          COMPARE   ONE,OVRCD
          GOTO      CHKE5999 IF NOT EQUAL   * Record exists, already sent
.
          CALL      GAEP0000
.
CHKE5999  RETURN
+
.******************************************************************************
.*                  GTIGEN00                                                  *
.*        Get Identifying Gender (Cat Gi)                                     *
.******************************************************************************
GTIGEN00  MOVE      SP70,EPIGENDR
.
.          IF        DOYR2024=1
          MATCH     SP70,PMPXUCC4         * Blank identifying gender
          IF        @EQUAL
            IF        ASTAT=5
              MATCH     "20240701",ADATE  * Allow blank identifying gender for
              GOTO      GTIGEN99 IF LESS  * pre July 2024 cancelled adm
            ENDIF
            GOTO      GTIGEN90           * Error no identifying gender found
          ENDIF
.          ELSE
.            MATCH     SP70,PMPXUCC4
.            GOTO      GTIGEN99 IF EQUAL     * No Identifying Gender
.          ENDIF
.
.          IF        DOYR2024=1
          PACK      KEY5,CATGi,PMPXUCC4,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,GTIGEN90
.          ELSE
.            PACK      KEY5,CATGi,PMPXUCC4,SP70
.            CALL      RDCODE1
.            BRANCH    OVRCD,GTIGEN99
.          ENDIF
.
.
.         If Identifying Gender is not between 1-9, report error
.
          MOVE      ZERO,F1
          UNPACK    THCSCOD,DIM1            * HDP Position 1
          MOVE      DIM1,F1
.
          IF        F1 >= 1 & F1 <= 5
            MOVE      DIM1,EPIGENDR         * Valid data
            GOTO      GTIGEN99
          ELSE
            IF         F1=9
              MOVE      DIM1,EPIGENDR       * Valid data
              GOTO      GTIGEN99
            ENDIF
          ENDIF
.
GTIGEN90  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 742 : Invalid Identifying Gender",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      GTIGEN99
.
GTIGEN99  RETURN
+
.******************************************************************************
.*                  GTNDIS00                                                  *
.*        Get NDIS Participant Flag / Identifier                              *
.******************************************************************************
GTNDIS00  MOVE      SP1,ENDISPFL       * NDIS Participant Flag
          MOVE      SP9,ENDISPID       * NDIS Participant Identifier
.
          MATCH     SP70,PMVXUD13
          IF        @EQUAL
            MOVE      "4",ENDISPFL     * Default to "4" for blank
            GOTO      GTNDIS99
          ENDIF
.
.         Get NDIS Participant Flag
          PACK      KEY5,CATN,PMVXUD13,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,GTNDIS99
.
          UNPACK    THCSCOD,DIM1       * HDP Position 1
.
          MATCH     SP1,DIM1
          IF        @EQUAL
            MOVE      "4",ENDISPFL     * Default to "4" for invalid
            GOTO      GTNDIS99
          ENDIF
.
          IF        DOYR2025=1
            TYPE      DIM1               * Numeric ?
            MOVE      "4",ENDISPFL
            GOTO      GTNDIS99 IF NOT EQUAL
          ELSE
            TYPE      DIM1               * Numeric ?
            GOTO      GTNDIS99 IF NOT EQUAL 
          ENDIF 
.
          MOVE      ZERO,FORM1
          MOVE      DIM1,FORM1
.
          IF        FORM1 > 0 & FORM1 < 5
            MOVE      DIM1,ENDISPFL    * Valid NDIS Participant Flag value
          ELSE
            MOVE      "4",ENDISPFL     * Default to "4" for invalid
          ENDIF
.
          IF        FORM1=1 | FORM1=4
.           non-NDIS participants
            GOTO    GTNDIS99           * non-NDIS participant; report blank
          ENDIF
.
          IF        FORM1=2 | FORM1=3
.           NDIS participants
            GOTO    GTNDIS20           * NDIS participant; validate conc. cards
          ENDIF
.
          GOTO    GTNDIS99
.
.
.         Validate Concession Cards ...
.
GTNDIS20  PACK      KEY19,AURNO,SP20
          CALL      RSPMCCD1
GTNDIS21  CALL      RKPMCCD1
          BRANCH    OVRCD,GTNDIS90
.
          MATCH     AURNO,PMCDURNO
          GOTO      GTNDIS90 IF NOT EQUAL
.
          MATCH     SP70,PMCDCTYP
          GOTO      GTNDIS21 IF EQUAL
.
          PACK      KEY5,CATct,PMCDCTYP     * Check card type
          CALL      RDCODE1
          BRANCH    OVRCD,GTNDIS21
.
          MATCH     "7",TCINDC1             * NDIS Concession Card ?
          GOTO      GTNDIS30 IF EQUAL
.
          GOTO      GTNDIS21                * Get next concession card
.
.
.         Valditate NDIS Concession Card
.
GTNDIS30  MATCH     SP70,PMCDCNUM           * Blank card number ?
          GOTO      GTNDIS90 IF EQUAL
.
          MOVE      PMCDCNUM,KEY20
          STRIP     KEY20
          TYPE      KEY20
          GOTO      GTNDIS91 IF NOT EQUAL   * Not numeric; validation error
.
          UNPACK    SP70,KEY8,KEY1,KEY11
          UNPACK    PMCDCNUM,KEY8,KEY1,KEY11
          MATCH     SP70,KEY11
          GOTO      GTNDIS91 IF NOT EQUAL   * error if more than 9 digits
          MATCH     SP70,KEY1
          GOTO      GTNDIS91 IF EQUAL       * error if less than 9 digits
          MATCH     "000000000",PMCDCNUM
          GOTO      GTNDIS91 IF EQUAL       * error if only 0's
.
GTNDIS40  MOVE      PMCDCNUM,ENDISPID       * Extract the card number
          GOTO      GTNDIS99
.
GTNDIS90  MOVE      "999999999",ENDISPID    * No NDIS Concession Card
          GOTO      GTNDIS99
.
GTNDIS91  COMPARE   ONE,ADMDTFLG
          CALL      ADDT0000 IF NOT EQUAL   * Print admin details
          COMPARE   "60",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line count >= 60
.
          PRINT     "Error 744 : Invalid NDIS Participant Identifier",*N
          ADD       TWO,CLNO
          ADD       ONE,NUMERROR
          MOVE      ONE,PTERRFLG
          GOTO      GTNDIS99
.
GTNDIS99  RETURN
+
.==============================================================================
.
          INC       STD001IO
          INC       CALCMVHR                * Calculate Mechanical Ventilation
.         
          INC       BASECONV                * Convert from/to Base36
          INC       CALCAGE                 * Calculate a patients age
          INC       CALCDAYS                * Calculate the diff between dates
          INC       CLPATATR                * Clear Patient Attributes
          INC       CLPATDSC                * Clear discharge file variables
          INC       EXCLNEWB
          INC       RTIODAYS                * Calculate no days in hospital
          INC       PATM10T9                * Map ICD10 to ICD9 codes
          INC       PRS2CLAS                * Get Account Class Type
          INC       PRS2DAYS                * Calculate Bed days new Calculat'n
          INC       PATHSPKY
.0911056  INC       SEXDSCIO
          INC       TFILENAM                     * Generate Temp File Name
.
          INC       IBAPOSIO/INC
          INC       IBASEQIO/INC                 * Sequential Numbers File
          INC       OPRDEAIO/INC
          INC       PATACCIO/INC
          INC       PATACTIO/INC
          INC       PATASFIO/INC
          INC       PATATRIO/INC
          INC       PATCHCIO/INC
          INC       PATCMPIO/INC
          INC       PATCODIO/INC
          INC       PATDADIO/INC
          INC       PATVADIO/INC
          INC       PATDAYIO/INC
          INC       PATDO1IO/INC
          INC       PATDRGIO/INC
          INC       PATDSCIO/INC
          INC       PATECAIO/INC
          INC       PATECDIO/INC
          INC       PATECMIO/INC
          INC       PATECOIO/INC
          INC       PATFN1IO/INC
          INC       PATHSPIO/INC
          INC       PMSPRDIO/INC
          INC       PATICDIO/INC
          INC       PATICOIO/INC
          INC       PATICUIO/INC
          INC       PATLISIO/INC
          INC       PATMA1IO/INC
          INC       PATFIMIO/INC
          INC       PATMI1IO/INC
          INC       PATMTDIO/INC
          INC       PATLINIO/INC
          INC       PATPEIIO/INC
          INC       PATPGRIO/INC
          INC       PATPTDIO/INC
          INC       PATRDEIO/INC
          INC       PATSFAIO/INC
          INC       PATTRNIO/INC
          INC       PATUNAIO/INC
          INC       PATURCIO/INC
          INC       PATVISIO/INC
          INC       VISXDCIO/INC
          INC       PATWBHIO/INC
          INC       PATWR1IO/INC
          INC       PATWMAIO/INC
          INC       PATWVEIO/INC
          INC       PATYTDIO/INC
          INC       PMSDAUIO/INC
          INC       PMSFOCIO/INC
          INC       PMSIMPIO/INC
          INC       PMSHCPIO/INC
          INC       PMSPX2IO/INC
          INC       PMSVX1IO/INC
          INC       PRSDTLIO/INC
          INC       PRSHRDIO/INC
          INC       WEBERRIO/INC                 * Web Server Error Logging
          INC       PMSCCDIO/INC                 * Concession Card Details
