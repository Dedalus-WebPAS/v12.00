.--------------------------------------------------------------------
. Program       : RSHWEB01
.
. Function      : Web Report & Scheduling Server
.
. Modifications :                               
.
.V11.03.01 06/07/2023 J.Tan             TSK 0932182
.          Mod to delete the 'L' schedule txt file
.V11.02.01 05/04/2022  Ebon Clements TSK  0911828
.          Added WBSCCDAT and WBSCCTIM to file clear - CLRSCS00
.V11.01.02 03/06/2021  Ebon Clements TSK  0907054
.          Fixed infinite reschedule loop if financial period not setup
.          FINPER00 - branch on OVRCD
.V11.01.01 26/04/2021  Ebon Clements TSK  0899288
.          Added WBSCHOSP and WBSCSITE to file clear - CLRSCS00
.V10.13.02 12/10/2018  Ebon Clements TSK  0839963
.          Added delete of spooled .csv file
.V10.13.01 24/07/2018  J.Tan         TASK 0851232
.          Added checking for Final Cash Reconciliation
.V10.07.01 14/10/2015  Ebon Clements  CAR 316629
.          Added hospital to holiday file key  - OUTPHOFD
.V10.04.01 18/12/2013  Ebon Clements  CAR 267589
.          Added wait 1 second and re check active process id - CHKSIM10
.V10.03.02 16/07/2013  Jill Parkinson CAR 287923
.           Added include of PATCONFD
.V10.03.01 27/09/2012  Patrick Adair     CAR 273737
.          Corrected error processing if cfg file does not exist
.          (WBSCDSRP & WBSCSTAT were not being set)
.V10.01.02 07/03/2011  Ebon Clements     CAR 239030
.          Changed auto clear to always delete ibaspolf records - DELREP00
.V10.01.01 24/11/2010  J.Tan             CAR 233919
.          Fixed Cash release locking
.V10.00.01 04/06/2010  J.Tan             CAR 222746    
.          Mods to check if Cash release is currently being executed
. V9.10.01 22/05/2008  Ebon Clements     CAR 169081    
.          Changed CHKSIM00 to not perform ps -p if no active process id
. V9.08.01 09/07/2004  Ebon Clements     CAR 51065
.          Move CYEAR to IYEAR in ENDMTH28 to fix leap year test
. V9.03.06 09/07/2004  Ebon Clements     CAR 51065
.          Added financial period reschedule type
. V9.03.05 30/03/2004  Ebon Clements     CAR 48396
.          Added delete of .cfg file in EXCEPT80
. V9.03.04 22/03/2004  Ebon Clements     CAR 48396
.          Changed schedule status to 7 when schedule date is set to 99990101
. V9.03.03 19/02/2004  Ebon Clements     CAR 47665
.          Added wait to STRREP00 to fix ps -p error message
. V9.03.02 12/09/2003  Sandra Barcham     43010
.          Removed file prefix from opens of outpreaf & outphoaf
. V9.03.01 13/08/2003  Sylvek Litewka CAR 41293
.          Removed FD, IO and OPENS of webschaf. These are now included in     
.          IBAWEBDF.PBL and IBAWEBCD.PBL.
. V9.02.11 04/04/2003  Ebon Clements SRF 37705
.          Added RSCNTIMD - Time to run auto delete spool files
. V9.02.10 26.03.2003 Pat Dirito                 CAR 24088
.          VAR AUTODLCM was incorrectly being set.
. V9.02.09 06.12.2002 L.Vo 
.          Open outphoaf with site prefix.
. V9.02.08 17.04.2002 J.Tan
.          Added trap after WRWBSC1
.
. V9.02.07 17.04.2002 J.Tan
.          Added trap after WRWBSC1
.
. V9.02.06 07.02.2002 B.G.Ackland
.          Enable Days of Week and Public Holidays to be Excluded
.
. V9.02.05 06.12.2001 B.G.Ackland
.          Enable Days of Week and Public Holidays to be Excluded
.
. V9.02.04 10.10.2001 B.G.Ackland
.          COMMIT Transaction Control
. V9.02.03 03.10.2001 B.G.Ackland
.          COMMIT Transaction Control for WEBINT00
.
. V9.02.02 20.09.2001 B.G.Ackland
.          Infinite Reschedule program fixed.
. V9.02.01 13.09.2001 B.G.Ackland
.          Make Sure Report Can not be scheduled for a past or current date
.
. V9.00.01 29.06.2001 B.G.Ackland
.          Change to WEBSCHFD to allow for TRU64 Cluster
.
. V5.09.01 15.09.2000 Sandra Barcham
.          Replace RSHCONFD with WEBCONFD
.
. V6.07.00 18.04.2000 Pat Dirito
.          New Program
.
.---------------------------------------------------------------------
          INC       IBAWEBDF
          INC       OUTPHOFD/INC
          INC       PATDRGFD/INC
          INC       PATCONFD/INC
.
OLDSTKFL  FILE      ASCII, FIXED=400 * Key Strokes File(Adjust Length to Suit)
NEWSTKFL  FILE      ASCII, FIXED=400 * Key Strokes File(Adjust Length to Suit)
KEYSTKNM  INIT      ".cfg"           * Key Strokes File Name Extension
SAVESCHD  DIM      8
SCHDFLNO  FORM     8
ENCODE    DIM      1
OFFSETDY  FORM     4
OFFSETMH  FORM     4
OFFSETYR  FORM     4
OFFSET    FORM     4
LASTDAY   FORM     1
OUTVAR    DIM      127
CFILEPRE  DIM       3
CHECKPID  FILE      ASCII, FIXED=127
AUTODLSP  FORM      3
AUTODLCM  FORM      3
LOCKCNT   FORM      3
SIMCOUNT  FORM      4
STARTREP  DIM       127
EXECCMD   DIM       127
HUNDRED2  FORM      "102"
PREVCURR  DIM       1
PROCFLAG  FORM      1
STARTEND  DIM       1
FPFORMAT  DIM       1
RCCNCSHU  DIM       10
RCCNRCNW  DIM       10
TEMPFILE  FILE   ASCII, FIXED=256
.----------------------------------------------------------------------
PRGID     INIT      "RSHWEB01"
VERSION   INIT      "V12.00.00"
PRGNAM    INIT      "Web Report & Scheduling Server"
.----------------------------------------------------------------------
.
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*2,CDD,CMM,CYY,CCC
          READ      CONTROLF,TWO;*4,CONAME
          MOVE      CONAME,CNAME
          CLOCK     PORT,PORT
          MOVE      CDD,CDAY
          MOVE      CMM,CMON
          MOVE      CYY,CYEAR
          REP       " 0",CYEAR
          MOVE      CCC,CCENT
.
          CALL      WEBINT00       * Get Standard Web Parameters & Ignore
.
          CALL      INIT0000       * Open Files
          READ      CONTROLF,HUNDRED2;*5,RSCNSLP
.
.----------------------------------------------------------------------------
MAIN1000  DISPLAY   *WRSCNSLP

.
          READ      CONTROLF,HUNDRED2;*1,RSCNCCP,RSCNSLP,RSCNRCD,RSCNROD:
                                         RSCNCMD,RSCNCLP1,RSCNCLP2,RSCNCLP3:
                                         RSCNCLP4,RSCNCLP5,RSCNSPDL,RSCNCMDL:
                                         RSCNTIMD
          MOVE      RSCNSPDL,AUTODLSP
          MOVE      RSCNCMDL,AUTODLCM
.
MAIN2000  COMMIT
.
          BEGIN
.
          CALL      CHKSIM00       * Check Similtaneous Reports
          BRANCH    EXIT,MAIN9000
.
          CALL      STRREP00       * Start Program
          BRANCH    EXIT,MAIN9000
.
          GOTO      MAIN2000
.
MAIN9000  CALL      AUTOCL00       * Auto Clear Reports over 2 days old
          GOTO      MAIN1000
.
MAIN9999  STOP
.------------------------------------------------------------
. Unused Routines
.------------------------------------------------------------
PROFLD00
SETPAR00
CLRPAR00
          RETURN
.------------------------------------------------------------
. Open Files and Initialize Variables
.------------------------------------------------------------
INIT0000  OPEN      IBASPOL1,"ibaspolf"
          OPEN      PATDRGA2,"patdrgaf"
.
          MOVE      "out",CFILEPRE
          CALL      OPNOUT00
.
          RETURN
.------------------------------------------------------------
. Open outpatient files                 
.------------------------------------------------------------
OPNOUT00  OPEN      OUTPHOA1,"outphoaf"    
          RETURN
.----------------------------------------------------------------
. Auto Clear Failed, Printed, and Completed Reports after 2 days
. N.B. Does Not Delete Spooled Reports (Status=8)
.----------------------------------------------------------------
AUTOCL00  CLOCK     TIME,CTIMEIS
          MATCH     RSCNTIMD,CTIMEIS
          IF        !@EQUAL
            MOVE      ZERO,PROCFLAG
            GOTO      AUTOCL99
          ENDIF
.
          COMPARE   ONE,PROCFLAG            * Delete has already been processed
          GOTO      AUTOCL99 IF EQUAL       * this minute
.
          MOVE      ONE,PROCFLAG            * Set Auto delete processed to yes
          CALL      IBACLOCK
          PACK      KEY25,SIX,SP70
          CALL      RSWBSC2
AUTOCL10  CALL      RKWBSC2
          BRANCH    OVRCD,AUTOCL19
          MATCH     "6",WBSCSTAT
          GOTO      AUTOCL19 IF NOT EQUAL
          CALL      DELREP00
          GOTO      AUTOCL10
.
AUTOCL19  PACK      KEY25,SEVEN,SP70
          CALL      RSWBSC2
AUTOCL20  CALL      RKWBSC2
          BRANCH    OVRCD,AUTOCL29
          MATCH     "7",WBSCSTAT
          GOTO      AUTOCL29 IF NOT EQUAL
          CALL      DELREP00
          GOTO      AUTOCL20
.
AUTOCL29  PACK      KEY25,EIGHT,SP70
          CALL      RSWBSC2
AUTOCL30  CALL      RKWBSC2
          BRANCH    OVRCD,AUTOCL39
          MATCH     "8",WBSCSTAT
          GOTO      AUTOCL39 IF NOT EQUAL
          MATCH     "1",WBSCPERM
          GOTO      AUTOCL30 IF EQUAL
          CALL      DELSPL00
          GOTO      AUTOCL30
.
AUTOCL39  PACK      KEY25,NINE,SP70
          CALL      RSWBSC2
AUTOCL40  CALL      RKWBSC2
          BRANCH    OVRCD,AUTOCL49
          MATCH     "9",WBSCSTAT
          GOTO      AUTOCL49 IF NOT EQUAL
          CALL      DELREP00
          GOTO      AUTOCL40
AUTOCL49
AUTOCL99  RETURN 
.------------------------------------------------------------
. Delete Reports
.------------------------------------------------------------
DELREP00  MATCH     "99990101",WBSCSDAT  
          GOTO      DELREP10 IF EQUAL
.
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          DAYSEP    WBSCSDAT,KEY8,F3
          IF        F3<AUTODLCM
            GOTO      DELREP99
          ENDIF
.
DELREP10  MOVE      WBSCSCHD,KEY8
          CALL      RLWBSC1
          IF        OVRCD=0
            CALL      DEWBSC1
            CALL      UUWBSC1
          ENDIF
.
          PACK      KEY80,RSCNRCD,WBSCSCHD,KEYSTKNM
          SQUEEZE   KEY80
          PREP      OLDSTKFL,KEY80     * Delete Key Strokes File
          CLOSE     OLDSTKFL
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      SPLTFILE,WBSCSPOO
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     SPLTFILE,DELETE
          ENDIF
.
          UNPACK    WBSCSPOO,KEY8
          MOVE      ".csv",KEY4
          PACK      KEY12,KEY8,KEY4,SP70
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      SPLTFILE,KEY12
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     SPLTFILE,DELETE
          ENDIF
.
          MOVE      WBSCSPOO,KEY8
          CALL      RDSPOL1
          IF        OVRCD=0
            CALL      DESPOL1
          ENDIF
.
          CALL      DELL0000           * Delete the L*txt format file
.
DELREP99  RETURN
+
.------------------------------------------------------------
. Delete Spool Files
.------------------------------------------------------------
DELSPL00  PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
.
          DAYSEP    WBSCSDAT,KEY8,F3
          IF        F3<AUTODLSP
            GOTO      DELSPL99
          ENDIF
.
          MOVE      WBSCSCHD,KEY8
          CALL      RLWBSC1
          IF        OVRCD=0
            CALL      DEWBSC1
            CALL      UUWBSC1
          ENDIF
.
          PACK      KEY80,RSCNRCD,WBSCSCHD,KEYSTKNM
          SQUEEZE   KEY80
          PREP      OLDSTKFL,KEY80     * Delete Key Strokes File
          CLOSE     OLDSTKFL
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      SPLTFILE,WBSCSPOO
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     SPLTFILE,DELETE
          ENDIF
.
          UNPACK    WBSCSPOO,KEY8
          MOVE      ".csv",KEY4
          PACK      KEY12,KEY8,KEY4,SP70
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      SPLTFILE,KEY12
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     SPLTFILE,DELETE
          ENDIF
.
          MOVE      WBSCSPOO,KEY8
          CALL      RDSPOL1
          IF        OVRCD=0
            CALL      DESPOL1
          ENDIF
.
          CALL      DELL0000           * Delete the L*txt format file
.
DELSPL99  RETURN
.
.------------------------------------------------------------
. Delete the L*.txt format file
.------------------------------------------------------------
DELL0000  MOVE      SP70,KEY60
          UNPACK    RSCNRCD,KEY60      * Report Configuration File Directory
          SQUEEZE   KEY60
.
          MOVE      SP70,KEY10
          UNPACK    WBSCSCHD,KEY10
          SQUEEZE   KEY10
.
          CLEAR     KEY70
          APPEND    KEY60,KEY70
          APPEND    "L",KEY70
          APPEND    KEY10,KEY70
          APPEND    ".txt",KEY70
          APPEND    SP70,KEY70
          RESET     KEY70
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPFILE,KEY70
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     TEMPFILE,DELETE
          ENDIF
DELL9999  RETURN
+
.------------------------------------------------------------
. Check Similtaneous Reports
.------------------------------------------------------------
CHKSIM00  MOVE      ZERO,SIMCOUNT
          PACK      KEY25,ZERO,SP70
          CALL      RSWBSC2
CHKSIM10  CALL      RKWBSC2
          BRANCH    OVRCD,CHKSIM90
          MATCH     "0",WBSCSTAT
          GOTO      CHKSIM90 IF NOT EQUAL
          ADD       ONE,SIMCOUNT
.
          MATCH     SP70,WBSCACTV             * Active process id
          IF        @EQUAL
            DISPLAY   *W1                     * Wait 1 second for IBARSH01
.                                             * to update the active process id
            MOVE      WBSCSCHD,KEY8
            CALL      RDWBSC1                 * Re read scheduler to get the
            BRANCH    OVRCD,CHKSIM80          * active process id
.
            MATCH     SP70,WBSCACTV           * Don't perform ps -p if no active
            GOTO      CHKSIM50 IF EQUAL       * process id to stop usage error
          ENDIF
.
          CLEAR     EXECCMD
          APPEND    "ps -p",EXECCMD
          SQUEEZE   WBSCACTV
          APPEND    WBSCACTV,EXECCMD
          APPEND    " | grep TBNET >checkpid.txt",EXECCMD
          RESET     EXECCMD
          EXECUTE   EXECCMD,TASKID
.
CHKSIM40  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      CHECKPID,"checkpid"
          TRAPCLR   IO
          BRANCH    OVRCD,CHKSIM50
          MOVE      SP70,KEY20
          READ      CHECKPID,SEQ;KEY20
          GOTO      CHKSIM50 IF OVER
          CLOSE     CHECKPID,DELETE
          MATCH     SP70,KEY20
          GOTO      CHKSIM10 IF NOT EQUAL
CHKSIM50  MOVE      WBSCSCHD,KEY8
          CALL      RDWBSC1
          BRANCH    OVRCD,CHKSIM80
          MATCH     "0",WBSCSTAT
          GOTO      CHKSIM80 IF NOT EQUAL
          MOVE      "6",WBSCSTAT 
          CALL      UPWBSC1
CHKSIM80  SUB       ONE,SIMCOUNT
          GOTO      CHKSIM10
.
CHKSIM90  MOVE      ZERO,EXIT
          IF        SIMCOUNT>=RSCNCCP
            MOVE      ONE,EXIT
          ENDIF
          RETURN
.------------------------------------------------------------
. Start Report
.------------------------------------------------------------
STRREP00  CALL      IBACLOCK
          CLOCK     TIME,CTIMEIS
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          PACK      KEY25,ONE,KEY8,CTIMEIS,Z70
          CALL      RSWBSC2
STRREP10  CALL      RPWBSC2
          BRANCH    OVRCD,STRREP90
          MATCH     "1",WBSCSTAT
          GOTO      STRREP90 IF NOT EQUAL
          MOVE      ZERO,LOCKCNT
STRREP20  MOVE      WBSCSCHD,KEY8
          CALL      RLWBSC1
          BRANCH    OVRCD,STRREP10,STRREP80
.
          MATCH     "IBARCP76",WBSCRPID
          GOTO      STRREP30 IF NOT EQUAL
.
.         Check if Cash release is currently being executed
.
          READ      CONTROLF,HUND08;*99,RCCNCSHU  * IBARCP76 Web Userid Locking
          MOVE      RCCNCSHU,KEY10
          REP       " 0",KEY10
          MATCH     "0000000000",KEY10
          GOTO      STRREP85 IF NOT EQUAL  * Cash release is running, try later
.
          PACK      RCCNCSHU,WBSCUSER,SP10
          WRITAB    CONTROLF,HUND08;*99,RCCNCSHU
.
STRREP30  MATCH     "IBARCP02",WBSCRPID
          GOTO      STRREP40 IF NOT EQUAL
.
          MATCH     "Final Cash Reconciliation",WBSCDSRP
          GOTO      STRREP40 IF NOT EQUAL
.
.         Check if Cash release is currently being executed
.
          READ      CONTROLF,HUND08;*114,RCCNRCNW  * IBARCP02 Web Userid Locking
          MOVE      RCCNRCNW,KEY10
          REP       " 0",KEY10
          MATCH     "0000000000",KEY10
          GOTO      STRREP85 IF NOT EQUAL  * Cash release is running, try later
.
          PACK      RCCNRCNW,WBSCUSER,SP10
          WRITAB    CONTROLF,HUND08;*114,RCCNRCNW
.
STRREP40  MOVE      ZERO,EXIT
          MATCH     SP70,WBSCRDAT          * Reschedule Report Encoded Date
          CALL      RSHREP00 IF NOT EQUAL  * Yes
          BRANCH    EXIT,STRREP85
.
          CALL      EXCEPT00               * Check for Exceptions
          BRANCH    EXIT,STRREP70          * Excluded So Dont Execute
.
          CLEAR     EXECCMD
          STRIP     RSCNCMD
          APPEND    RSCNCMD,EXECCMD
          APPEND    SP1,EXECCMD
          APPEND    WBSCSCHD,EXECCMD
          APPEND    " >/dev/null 2>&1 &",EXECCMD
          RESET     EXECCMD
..          DISPLAY   *R,EXECCMD
          EXECUTE   EXECCMD,TASKID       * Execute the program
.
          PACK      WBSCSDAT,CCC,CYY,CMM,CDD   * Set Start Date
          REP       " 0",WBSCSDAT
          PACK      WBSCSTIM,CTIMEIS    * Set Start Time
          MOVE      ZERO,WBSCSTAT       * Set Status to 0
          CALL      UPWBSC1             * Update Record
          CALL      UUWBSC1
          DISPLAY   *W1
.
STRREP70  MOVE      ZERO,EXIT
          GOTO      STRREP99
.
.    * Program cannot be locked perform 10 retries
.
STRREP80  DISPLAY   *W5      
          ADD       ONE,LOCKCNT
          IF        LOCKCNT>10
            DISPLAY   "Can't Lock ",KEY8
            GOTO      STRREP10     * Can't Unlock so Get Next Record
          ENDIF
          GOTO      STRREP20       * Try and Lock Again
.
STRREP85  CALL      UUWBSC1
          GOTO      STRREP10       * Try and Lock Again
.
STRREP90  MOVE      ONE,EXIT
.
STRREP99  RETURN
.------------------------------------------------------------
. Check for Exceptions
.------------------------------------------------------------
EXCEPT00  PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          REP       " 0",WBSCEXCP
          MATCH     "00000000",WBSCEXCP
          GOTO      EXCEPT95 IF EQUAL
.
          MATCH     "1",WBSCEXCP          * Exclude Public Holidays
          GOTO      EXCEPT10 IF NOT EQUAL
.
          PACK      KEY11,CCC,CYY,CMM,CDD
          REP       " 0",KEY11
          CALL      RDPHOA1
          BRANCH    OVRCD,EXCEPT10
          GOTO      EXCEPT80
.
EXCEPT10  UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
          CALL      DAYOFWEK
          ADD       ONE,WEEKDAY
          RESET     WBSCEXCP,WEEKDAY
          MATCH     "1",WBSCEXCP
          GOTO      EXCEPT95 IF NOT EQUAL
.
EXCEPT80  MOVE      WBSCSCHD,KEY8
          CALL      DEWBSC1
          CALL      RDWBSC1
          CALL      UUWBSC1
.
          PACK      KEY80,RSCNRCD,WBSCSCHD,KEYSTKNM
          SQUEEZE   KEY80
          PREP      OLDSTKFL,KEY80     * Delete Key Strokes File
          CLOSE     OLDSTKFL
.
          MOVE      ONE,EXIT
          GOTO      EXCEPT99
.
EXCEPT95  MOVE      ZERO,EXIT
EXCEPT99  RETURN
.------------------------------------------------------------
. Re-schedule Report at next Date Value
.------------------------------------------------------------
RSHREP00  MOVE      WBSCSCHD,SAVESCHD
          CALL      NXTSCH00
          MOVE      SAVESCHD,KEY8
          CALL      RDWBSC1
          MOVE      SCHDFLNO,KEY8
          REP       " 0",KEY8
          MOVE      KEY8,WBSCSCHD
          CALL      RAWBSC1
          BRANCH    OVRCD,RSHREP07
.
          MATCH     ANSF,WBSCRDAT
          IF        @EQUAL
            MOVE      "{finance}",KEY9                * Reschedule report run
            PACK      VAR,KEY9,WBSCRDAT,SP70,SP70     * date by financial     
            CALL      FINPAR00    * Parse Date        * period
            BRANCH    EXIT,RSHREP05
          ELSE
            MOVE      "{date}",KEY6                   * Reschedule report run
            PACK      VAR,KEY6,WBSCRDAT,SP70,SP70     * date by month
            CALL      DATPAR00    * Parse Date
            BRANCH    EXIT,RSHREP05
          ENDIF
.
          UNPACK    VAR,CDAY,CMON,CCENT,CYEAR
          PACK      WBSCSCDT,CCENT,CYEAR,CMON,CDAY
          REP       " 0",WBSCSCDT
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          MATCH     KEY8,WBSCSCDT
          IF        @LESS
            MOVE      "99990101",WBSCSCDT   * If Date is less than Today
            MOVE      "7",WBSCSTAT          * Process Aborterd.
            CALL      IBACLOCK
            PACK      WBSCCDAT,CCC,CYY,CMM,CDD  * Completed Date
            REP       " 0",WBSCCDAT
            CLOCK     TIME,WBSCCTIM             * Completed Time
            GOTO      RSHREP06
          ENDIF
.
          MATCH     SP70,WBSCREND
          IF        !@EQUAL
            MATCH     WBSCSCDT,WBSCREND
            IF        @LESS
              MOVE      "99990101",WBSCSCDT
              MOVE      "7",WBSCSTAT        * Process Aborted.
              CALL      IBACLOCK
              PACK      WBSCCDAT,CCC,CYY,CMM,CDD  * Completed Date
              REP       " 0",WBSCCDAT
              CLOCK     TIME,WBSCCTIM             * Completed Time
            ENDIF
          ENDIF
          GOTO      RSHREP06
.
RSHREP05  MOVE      "99990101",WBSCSCDT
          MOVE      "Error in Reschedule Date",WBSCDSRP
.
RSHREP06  CALL      UPWBSC1
.
RSHREP07  MOVE      SCHDFLNO,KEY8
          REP       " 0",KEY8
          PACK      KEY80,RSCNRCD,KEY8,KEYSTKNM
          SQUEEZE   KEY80
          PREP      NEWSTKFL,KEY80     * Create Key Strokes File
.
          PACK      KEY80,RSCNRCD,SAVESCHD,KEYSTKNM
          SQUEEZE   KEY80
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDSTKFL,KEY80     * Create Key Strokes File
          TRAPCLR   IO
          BRANCH    OVRCD,RSHREP95
.
. Copy Key Strokes from Current to New Schedule
.----------------------------------------------------------------------
          READ      OLDSTKFL,SEQ;VAR     * First Keyin is Report Schedule No
          MOVE      SCHDFLNO,KEY8
          REP       " 0",KEY8
          WRITE     NEWSTKFL,SEQ;KEY8
.
RSHREP10  READ      OLDSTKFL,SEQ;VAR
          GOTO      RSHREP20 IF OVER
          STRIP     VAR
          MOVELPTR  VAR,F3
          SFORMAT   OUTVAR,F3
          MOVE      VAR,OUTVAR
          IF        F3=0
            WRITE     NEWSTKFL,SEQ;""
          ELSE
            WRITE     NEWSTKFL,SEQ;OUTVAR
          ENDIF
          SFORMAT   OUTVAR,127
          GOTO      RSHREP10
.
RSHREP20  CLOSE     NEWSTKFL
          CLOSE     OLDSTKFL
          MOVE      SCHDFLNO,KEY8
          REP       " 0",KEY8
          PACK      KEY80,RSCNRCD,KEY8,KEYSTKNM
          SQUEEZE   KEY80
          OPEN      NEWSTKFL,KEY80     * Open Key Strokes File
.
          PACK      KEY80,RSCNRCD,SAVESCHD,KEYSTKNM
          SQUEEZE   KEY80
          PREP      OLDSTKFL,KEY80     * Create Key Strokes File
.
.
. Process Dates and Periods in New Key Stroke File back to Old
.----------------------------------------------------------------------
          READ      NEWSTKFL,SEQ;VAR     * First Keyin is Report Schedule No
          WRITE     OLDSTKFL,SEQ;SAVESCHD
.
RSHREP30  READ      NEWSTKFL,SEQ;VAR
          GOTO      RSHREP40 IF OVER
          MATCH     "{date}",VAR
          CALL      DATPAR00 IF EQUAL
          MATCH     "{period}",VAR
          CALL      PERPAR00 IF EQUAL
          MATCH     "{finance}",VAR
          CALL      FINPAR00 IF EQUAL
.
          STRIP     VAR
          MOVELPTR  VAR,F3
          SFORMAT   OUTVAR,F3
          MOVE      VAR,OUTVAR
          IF        F3=0
            WRITE     OLDSTKFL,SEQ;""
          ELSE
            WRITE     OLDSTKFL,SEQ;OUTVAR
          ENDIF
          SFORMAT   OUTVAR,127
          GOTO      RSHREP30
.
RSHREP40  CLOSE     NEWSTKFL
          CLOSE     OLDSTKFL
          MOVE      SAVESCHD,KEY8
          CALL      RDWBSC1
          MOVE      ZERO,EXIT
          GOTO      RSHREP99
.
RSHREP95  MOVE      SCHDFLNO,KEY8
          REP       " 0",KEY8
          CALL      RDWBSC1
          IF        OVRCD=0
            CALL      DEWBSC1
          ENDIF
.
          MOVE      SAVESCHD,KEY8
          CALL      RDWBSC1
          IF        OVRCD=0
            MOVE      "Error Config Missing",WBSCDSRP               * Car 273737
            MOVE      "6",WBSCSTAT                                  * Car 273737
            CALL      UPWBSC1
          ENDIF
          MOVE      ONE,EXIT
.
RSHREP99  RETURN
.------------------------------------------------------------
. Get Next Report Schedule Number
.------------------------------------------------------------
NXTSCH00  PACK      KEY8,Z70
          CALL      RSWBSC1
NXTSCH10  CALL      RPWBSC1
          BRANCH    OVRCD,NXTSCH90
.
          MOVE      WBSCSCHD,SCHDFLNO
          ADD       ONE,SCHDFLNO
          GOTO      NXTSCH95
.
NXTSCH90  MOVE      ONE,SCHDFLNO
.
NXTSCH95  CALL      CLRSCS00    * Clear All Fields
          MOVE      SCHDFLNO,WBSCSCHD
          REP       " 0",WBSCSCHD
.
          MOVE      WBSCSCHD,KEY8
          CALL      RAWBSC1
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            CALL      WRWBSC1
            TRAPCLR   IO
            BRANCH    OVRCD,NXTSCH98
            CALL      RLWBSC1
          ELSE
            GOTO      NXTSCH98
          ENDIF
          GOTO      NXTSCH99
.
NXTSCH98  ADD       ONE,SCHDFLNO
          GOTO      NXTSCH95
NXTSCH99  RETURN
.------------------------------------------------------------
. Clear Server Schedule Table Variables 
.------------------------------------------------------------
CLRSCS00  MOVE      SP70,WBSCSCHD   * Schedule No  
          MOVE      SP70,WBSCSTAT   * Status  
          MOVE      SP70,WBSCSCDT   * Schedule Date 
          MOVE      SP70,WBSCSCTM   * Schedule Time 
          MOVE      SP70,WBSCACTV   * Active Process ID
          MOVE      SP70,WBSCUNIX   * Unix Command
          MOVE      SP70,WBSCDSRP   * Description of report
          MOVE      SP70,WBSCRPID   * Report Program ID
          MOVE      SP70,WBSCUSER   * Web User
          MOVE      SP70,WBSCRDTE   * Request Date
          MOVE      SP70,WBSCRTIM   * Request Time
          MOVE      SP70,WBSCSDAT   * Started Date
          MOVE      SP70,WBSCSTIM   * Started Time
          MOVE      ZERO,WBSCSFLG   * Start Flag :Set to 1 by Report Program
          MOVE      ZERO,WBSCOTYP   * Output Type : 0=Text 1=HTML
          MOVE      ZERO,WBSCNREC   * Expected No. of records
          MOVE      ZERO,WBSCNREC   * Expected No. of records
          MOVE      ZERO,WBSCRPRO   * Records Processed
          MOVE      SP70,WBSCUTIM   * Last Update Time
          MOVE      SP70,WBSCPRIN   * Printer
          MOVE      SP70,WBSCSPOO   * Spool File
          MOVE      ZERO,WBSCNCOP   * No of Copies
          MOVE      SP70,WBSCPREP   * Print Report 0=No 1=Yes
          MOVE      SP70,WBSCRDAT   * Re-Schedule Encoded Date String
          MOVE      SP70,WBSCREND   * Re-Schedule End Date
          MOVE      SP70,WBSCPERM   * Save as Permanent Spool File 1=Yes
          MOVE      SP70,WBSCEXCP   * Exclusion Flags - Hols, Mon-Sun
          MOVE      SP70,WBSCHOSP   * Hospital ID (pathspaf)
          MOVE      SP70,WBSCSITE   * Outpatient Site (outsitaf)
          MOVE      SP70,WBSCCDAT   * Completed Date (CCYYMMDD)
          MOVE      SP70,WBSCCTIM   * Completed Time (HH:MM:SS)
          MOVE      SP70,WBSCSPAR   * Spare
.
CLRSCS99  RETURN
.------------------------------------------------------------
.  Function : Parse Date String for Web Scheduling System
.------------------------------------------------------------
.------------------------------------------------------------
. Parse Financial Period
.------------------------------------------------------------
FINPAR00  UNPACK    SP70,KEY9,PREVCURR,STARTEND,FPFORMAT
          UNPACK    VAR,KEY9,ENCODE,PREVCURR,STARTEND,FPFORMAT,VAR
          CALL      FINPER00
          BRANCH    EXIT,FINPAR90
.
          MOVE      ZERO,EXIT
          GOTO      FINPAR99
.
FINPAR90  MOVE      "Invalid Date String",VAR
          MOVE      ONE,EXIT
.
FINPAR99  RETURN
.
.------------------------------------------------------------
. Find financial period start and end dates
. PREVCURR - 0 = Use current period
.            1 = Use previous period
.            2 = Use next period
. STARTEND - 0 = Use start date of period
.            1 = Use end date of period
.            2 = Not using dates using period number and year
. FPFORMAT - 0 = Return VAR in a date format DDMMCCYY
.            1 = Return VAR in a financial period format MM CCYY
.------------------------------------------------------------
FINPER00  CALL      GPERD000
          BRANCH    EXIT,FINPER90                * No Current period
.
          MATCH     "0",PREVCURR                 * Current period
          GOTO      FINPAR40 IF EQUAL
.
          MATCH     "1",PREVCURR                 * Previous period
          GOTO      FINPAR20 IF EQUAL
.
          MATCH     "2",PREVCURR                 * Next period
          GOTO      FINPAR30 IF EQUAL
.
          GOTO      FINPAR90
.
FINPAR20  CALL      RDPDRGA2                     * Previous period
          BRANCH    OVRCD,FINPER90               * No previous period
.
          GOTO      FINPAR40
.
FINPAR30  CALL      RDKDRGA2                     * Next period
          BRANCH    OVRCD,FINPER90               * No next period
.
          GOTO      FINPAR40
.
FINPAR40  MATCH     "0",STARTEND                 * Start Date
          GOTO      FINPAR45 IF EQUAL
.
          MATCH     "1",STARTEND                 * End Date
          GOTO      FINPAR50 IF EQUAL
.
          MATCH     "2",STARTEND                 * Not using dates
          GOTO      FINPAR80 IF EQUAL
.
          GOTO      FINPAR90
.
FINPAR45  UNPACK    DRGFDTE,CCENT,CYEAR,CMON,CDAY     * Start of Period
          GOTO      FINPAR80
.
FINPAR50  UNPACK    DRGTDTE,CCENT,CYEAR,CMON,CDAY     * End of Period
          GOTO      FINPAR80
.
FINPAR80  MATCH     "0",FPFORMAT
          IF        @EQUAL
            PACK      KEY8,CDAY,CMON,CCENT,CYEAR,SP70,SP70 * Return date format
            REP       " 0",KEY8
            PACK      VAR,KEY8,SP70,SP70
          ELSE
            PACK      VAR,DRGNUM,DRGYR,SP70,SP70           * Return financial
          ENDIF                                            * period format
.
          MOVE      ZERO,EXIT
          GOTO      FINPER99
.
FINPER90  MOVE      ONE,EXIT
.
FINPER99  RETURN
.
.------------------------------------------------------------
. Get financial preriod for this schedule number
.------------------------------------------------------------
GPERD000  PACK      KEY14,WBSCSCDT,SP6  * Key for to find this date in file
          CALL      RDSDRGA2            * Position in Date range file
          CALL      RDKDRGA2            * Get the first record from given date
          BRANCH    OVRCD,GPERD900      * No record found in file
.
          MATCH     DRGFDTE,WBSCSCDT    * Is the given date before this period
          GOTO      GPERD900 IF LESS    * Yes. Date not in file
.
          MOVE      ZERO,EXIT           * Period found
          GOTO      GPERD999            * Return with the period
.
.         The requested date wasn't in the file
.
GPERD900  UNPACK    SP6,DRGYR,DRGNUM    * Blank out period code
          MOVE      ONE,EXIT            * Period record not found
.
GPERD999  RETURN
.
.------------------------------------------------------------
. Parse Period
.------------------------------------------------------------
PERPAR00  UNPACK    VAR,KEY8,VAR
          MOVE      "01",CDAY
          MOVE      ZERO,LASTDAY
          MOVE      ZERO,OFFSETDY
          CALL      PARMTH00
          BRANCH    EXIT,PERPAR90
.
          CALL      PARYRR00
          BRANCH    EXIT,PERPAR90
.
          PACK      KEY6,CMON,CCENT,CYEAR,SP70,SP70
          REP       " 0",KEY6
          PACK      VAR,KEY6,SP70,SP70
          MOVE      ZERO,EXIT
          GOTO      PERPAR99
.
PERPAR90  MOVE      "Invalid Period String",VAR
PERPAR99  RETURN
.------------------------------------------------------------
. Parse Date 
.------------------------------------------------------------
DATPAR00  UNPACK    VAR,KEY6,VAR
          CALL      PARDAY00
          BRANCH    EXIT,DATPAR90
.
          CALL      PARMTH00
          BRANCH    EXIT,DATPAR90
.
          CALL      PARYRR00
          BRANCH    EXIT,DATPAR90
.
          PACK      KEY8,CDAY,CMON,CCENT,CYEAR,SP70,SP70
          REP       " 0",KEY8
          PACK      VAR,KEY8,SP70,SP70
          MOVE      ZERO,EXIT
          GOTO      DATPAR99
.
DATPAR90  MOVE      "Invalid Date String",VAR
          MOVE      ONE,EXIT
DATPAR99  RETURN

PARDAY00  UNPACK    VAR,ENCODE,VAR
          MOVE      VAR,VAR
          MOVE      ZERO,LASTDAY
          MOVE      ZERO,OFFSETDY
          CALL      OFFSET00
          MOVE      ZERO,OFFSETMH
          MATCH     "O",ENCODE
          GOTO      PARDAY10 IF EQUAL
          MATCH     "A",ENCODE
          GOTO      PARDAY20 IF EQUAL
          MATCH     "E",ENCODE
          GOTO      PARDAY30 IF EQUAL
          MOVE      ONE,EXIT
          GOTO      PARDAY99
.
PARDAY10  MOVE      OFFSET,OFFSETDY
          MOVE      CDD,CDAY
          GOTO      PARDAY40
.
PARDAY20  MOVE      OFFSET,F2
          MOVE      F2,CDAY
          GOTO      PARDAY40
.
PARDAY30  MOVE      ONE,LASTDAY
          GOTO      PARDAY40
.
PARDAY40  MOVE      ZERO,EXIT
.
PARDAY99  RETURN
.
OFFSET00  CLEAR     KEY4
OFFSET10  UNPACK    VAR,KEY1,VAR
          MATCH     "A",KEY1
          GOTO      OFFSET90 IF EQUAL
          MATCH     "O",KEY1
          GOTO      OFFSET90 IF EQUAL 
          MATCH     " ",KEY1
          GOTO      OFFSET90 IF EQUAL 
          APPEND    KEY1,KEY4
          GOTO      OFFSET10
.
OFFSET90  PACK      OUTVAR,KEY1,VAR,SP70,SP70
          MOVE      OUTVAR,VAR
          RESET     KEY4
          REP       "+ ",KEY4
          SQUEEZE   KEY4
          MOVE      ZERO,OFFSET
          MOVE      KEY4,OFFSET
          RETURN
.
.
.------------------------------------------------------------
. Parse Month String "On" or "An"
.       On = n = Offset Month by Number
.       An = n = Actual Month 
.------------------------------------------------------------
PARMTH00  UNPACK    VAR,ENCODE,VAR
          MOVE      ZERO,OFFSETYR
          CALL      OFFSET00
          MATCH     "O",ENCODE
          GOTO      PARMTH10 IF EQUAL
          MATCH     "A",ENCODE
          GOTO      PARMTH20 IF EQUAL
          MOVE      ONE,EXIT
          GOTO      PARMTH99
.
PARMTH10  ASSIGN    OFFSET+CMM,F4
          IF        (F4<1)
            ASSIGN     12+F4,F4
            MOVE       "-1",OFFSETYR
          ENDIF
          IF        (F4>12)
            ASSIGN     F4-12,F4
            MOVE       "1",OFFSETYR
          ENDIF
          MOVE      F4,F2
          MOVE      F2,CMON
          REP       " 0",CMON
          GOTO      PARMTH30
.
PARMTH20  MOVE      OFFSET,F2
          MOVE      F2,CMON
.
PARMTH30  MOVE      ZERO,EXIT
.
PARMTH99  RETURN
.------------------------------------------------------------
. Parse Year String "On" or "An"
.       On = n = Offset Year by Number
.       An = n = Actual Year 
.------------------------------------------------------------
PARYRR00  UNPACK    VAR,ENCODE,VAR
          CALL      OFFSET00
          MATCH     "O",ENCODE
          GOTO      PARYRR10 IF EQUAL
          MATCH     "A",ENCODE
          GOTO      PARYRR20 IF EQUAL
          MOVE      ONE,EXIT
          GOTO      PARYRR99
.
PARYRR10  PACK      KEY4,CCC,CYY        * Encode Character set to O
          REP       " 0",KEY4           * Year = Current + Offset
          MOVE      KEY4,F4
          ADD       OFFSET,F4
          MOVE      F4,KEY4
          REP       " 0",KEY4
          UNPACK    KEY4,CCENT,CYEAR
          GOTO      PARYRR30
.
PARYRR20  PACK      KEY4,CCC,CYY        * Encode Character set to A
          MOVE      OFFSET,F4           * Year = Offset
          MOVE      F4,KEY4
          REP       " 0",KEY4
          UNPACK    KEY4,CCENT,CYEAR
.
PARYRR30  PACK      KEY4,CCENT,CYEAR    * Change year by offest if month
          REP       " 0",KEY4           * found < 1 or > 12
          MOVE      KEY4,F4
          ADD       OFFSETYR,F4         
          MOVE      F4,KEY4
          REP       " 0",KEY4
          UNPACK    KEY4,CCENT,CYEAR
          MOVE      ZERO,EXIT
          IF        LASTDAY=1
            CALL      ENDMTH00
            GOTO      PARYRR90
          ENDIF
          COMPARE   ZERO,OFFSETDY
          CALL      OFFDAY00 IF NOT EQUAL
.
PARYRR90  MOVE      ZERO,EXIT
.
PARYRR99  RETURN
.
ENDMTH00  MOVE        CMON,IMON
          BRANCH      IMON,ENDMTH31,ENDMTH28,ENDMTH31,ENDMTH30,ENDMTH31:
                           ENDMTH30,ENDMTH31,ENDMTH31,ENDMTH30,ENDMTH31:
                           ENDMTH30,ENDMTH31
.
ENDMTH28  MOVE        "28",CDAY
          MOVE        CYEAR,IYEAR
          MOVE        IYEAR,CLYEAR
.
          DIVIDE      FOUR,CLYEAR
          MULT        FOUR,CLYEAR
.
          COMPARE     IYEAR,CLYEAR
          GOTO        ENDMTH99 IF NOT EQUAL
.
          MOVE        "29",CDAY
          GOTO        ENDMTH99 
.
ENDMTH30  MOVE        "30",CDAY
          GOTO        ENDMTH99
.
ENDMTH31  MOVE        "31",CDAY
          GOTO        ENDMTH99
.
ENDMTH99  RETURN
.
OFFDAY00  MOVE      CDD,DD
          MOVE      CMON,MM
          MOVE      CYEAR,YY
          MOVE      CCENT,CC
          CALL      DMYCON
          ADD       OFFSETDY,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
          MOVE      DD,CDAY
          MOVE      MM,CMON
          MOVE      YY,CYEAR
          MOVE      CC,CCENT
          RETURN
.
          INC       OUTPHOIO/INC
          INC       PATDRGIO/INC
          INC       DAYOFWEK
          INC       IBAWEBCD
.
