.******************************************************************************
.* System         :  Inpatient                                                *
.* Program        :  IBAINP57                                                 *
.* Description    :  Queensland Health Department Transmission Data           *
.******************************************************************************
.* Date           :  21/10/1994                                               *
.* Author         :  Greg Horvat                                              *
.* Function       :  The Queensland health department requires certain data   *
.*                   from its private hospitals. This program extracts this   *
.*                   data from the inpatient system and places the data in    *
.*                   8 different tempfiles. Then there is an option to copy   *
.*                   these 8 tempfiles to either floppy, PC or tape. This is  *
.*                   site dependant.                                          *
.*                                                                            *
.* Modifications  :                                                           *
.*                                                                            * 
.*        V12.00.01 30/05/2025  Don Nguyen      TSK 0955096                   *
.*                  Alphanumeric visit number changes                         *
.*        V11.05.01 31/03/2025  Ebon Clements   Task 0957346                  *
.*                  July 2025 changes - Diagnosis cluster id                  *
.*        V11.04.02 26/03/2024  Alina Bhari     Task 0943540                  *
.*                  Fixed to 2024/2025 - ENEDT000 - KEYPER8                   *
.*        V11.04.01 01/03/2024  Alina Bhari     Task 0929004                  *
.*                  Correctly Displayed the AN-SNAP value -DIPV5000           *
.*        V11.03.02 26/04/2023  Bella Turco     Task 0930952                  *
.*                  July 2023 changes to DOYR2023                             *
.*        V11.03.01 20/03/2023  Bella Turco     Task 0927446                  *
.*                  Send "999" to all ADL subtypes in SNPACN15                *
.*        V11.02.03 18/08/2022  Jill Parkinson  Task 0923494                  *
.*                  Added check to iggnore if return from leave=on leave date *
.*        V11.02.02 29/03/2022  Jill Parkinson  Task 0917341                  *
.*                  July 2022 changes                                         *
.*        V11.02.01 22/03/2022  Jill Parkinson Task 0917854                   *
.*                  Added check for hdp=30 for palliative patient             *
.*        V11.01.04 09/09/2021  Ebon Clements  Task 0911297                   *
.*                  Fixed 2021/2022 file name - ENEDT000 - KEYPER8            *
.*        V11.01.03 13/07/2021  Jill Parkinson Task 0901405                   *
.*                  Fixed use of hdp equiv for pmvxempl                       *
.*        V11.01.02 17/05/2021  Jill Parkinson Task 0905818                   *
.*                  Added check for pass=99 to stop U*R                       *
.*        V11.01.01 17/02/2021  Tracey Nguyen  TSK 0888639                    *
.*                  FD changed - patmmbsf.PATMMBS1 from KEY10 to KEY11        *
.******************************************************************************
.*        V11.00.04 11/01/2021  Jill Parkinson Task 0901405                   *
.*                  Fixed use pmvxempl if ptqmemps is blank (hea moved)       *
.*        V11.00.03 15/07/2020  Jill Parkinson Task 0893421                   *
.*                  Mods to use pmvxempl if ptqmemps is blank (hea moved)     *
.*        V11.00.02 05/06/2020  Jill Parkinson Task 0892648                   *
.*                  July 2020 change date corrected to 01/07/2020             *
.*        V11.00.01 20/04/2020  Jill Parkinson Task 089020                    *
.*                  July 2020 changes - change date set at 01/01/2020         *
.*        V10.15.01 13/11/2019  Ken Bell       TSK 0880442                    *
.*                  Set Elective Status to 3 for Statistical Admission Source *
.*                  Elective Status cannot be 3 if Admission Source not 06,09 *
.*        V10.14.02 09/05/2019  Tracey Nguyen  TSK 0874343                    *
.*                  Queensland Statutory Modifications 2019                   *
.*                  - Corrected DOY2019 date to be 20190701                   *
.*        V10.14.01 18/02/2019  Ebon Clements  TSK 0829856                    *
.*                  Recompiled for GETEFDRG - Contract from effective date    *
.*        V10.12.03 06/06/2018  Jill Parkinson Tsk 0858187                    *
.*                  Added check for daycase before H810 error                 *
.*        V10.12.02 24/04/2018  Tracey Nguyen   TSK 0841644                   *
.*                  Recompiled for PMSIMPFD - added impairment group          *
.*        V10.12.01 12/04/2018  Richa Phogat   TSK 0855372                    *
.*                  Corrected DOYR2018 date to be 20180701                    *
.*        V10.11.01 08/09/2017  Ebon Clements  TSK 0818097                    *
.*                  Added excluded newborn functionality -  EXNB0000          *
.*        V10.10.08 11/07/2017  Ebon Clements  TSK 0841816                    *
.*                  Fixed H810 rehab care type test DIPV9000                  *
.*        V10.10.07 06/07/2017  Jill Parkinson TSK 0841657                    *
.*                  Corrected DOYR2017 date to be 20170701                    *
.*        V10.10.06 29/05/2017  Ebon Clements  TSK 0830489                    *
.*                  Added warnings H522, H531, H571, H810 and H814            *
.*        V10.10.05 28/04/2017  Peter Vela     TSK 0836016                    *
.*                  Fixed 2017 validation for Clinical Assessment Only        *
.*                  DIPV0000                                                  *
.*        V10.10.04 11/04/2017  Peter Vela     TSK 0836016                    *
.*                  Queensland Statutory Modifications 2017                   *
.*        V10.10.03 10/04/2017  Tracey Nguyen  TSK 0836482                    *
.*                  Set PATSTATE to 9 for postcodes 9799 (At sea) and 9989    *
.*                  (No fixed address)                                        *
.*        V10.10.02 16/03/2017  Richa Phogat   TSK 0832066                    *
.*                  Changed DVA Card Number and DVA Card colour to be         *
.*                  collected from PMCDCNUM.PMSCCDFD and PMCDDVAC.PMSPX2FD    *
.*                  instead of PREPAT.PMIMA1FD and PMPXDVAC.PMIMA1FD          *
.*        V10.10.01 01/03/2017  Jill Parkinson TSK 0831576                    *
.*                  Mods to use PRS2 alternative date range file              *
.*        V10.09.01 22/12/2016  Jill Parkinson TSK 0831104                    *
.*                  Mods to get last change record in PROC2300 - it was getting
.*                  the discharge record if they were discharged on the day of*
.*                  the last transfer                                         *
.*        V10.08.05 01/09/2016  Jill Parkinson TSK 0825294                    *
.*                  Mods to send SNPACN00 to send RUG scores for Palliative   *
.*        V10.08.04 26/08/2016  Don Nguyen      TSK 0312570                   *
.*                  Recompiled for GETDRG (GTDRG000)                          *
.*                  Added PMSEDGFD/IO and GETEFDRG                            *
.*        V10.08.03 30/05/2016 Jill Parkinson TSK 0817301                     *
.*                  Right justified FIM scores and modified to only send 999  *
.*                  if no FIM scores exist                                    *
.*        V10.08.02 30/05/2016 Jill Parkinson TSK 0817301                     *
.*                  Standardised error messages, fixed duplicate TBC FIM Score*
.*        V10.08.01 22/04/2016 Jill Parkinson TSK 0817301                     *
.*                  July 2016 changes                                         *
.*        V10.06.05 12/08/2015 Jill Parkinson CAR 320516                      *
.*                  Added use of aclaim in WAAT0000 to stop error of private  *
.*                  bed type but public claim code                            * 
.*        V10.06.04 10/06/2015 Patrick Adair  CAR 290369                      *
.*                  Assign AN SNAP Equivalent Code in DIPV2000                *
.*        V10.06.03 Jill Parkinson CAR 314651                                 *
.*                  Mods to only send mv hours < 24 if proc codes 13882-00 or *
.*                  92209-00
.*        V10.06.02 Jill Parkinson CAR 293874                                 *
.*                  Mods to only send multi disiplinary care plan date if it  *
.*                  is within the visit date in the snap record               *
.*        V10.06.01 Jill Parkinson CAR 314842                                 *
.*                  July 2015 Changes                                         *
.*        V10.05.12 Jill Parkinson CAR 309590                                 *
.*                  Added clear of phase type for FIM MOT records             *
.*        V10.05.11 25/11/2014  Jill Parkinson CAR 308250                     *
.*                  Fixed to send conthosp for contract type 1 contract role B*
.*        V10.05.10 14/11/2014  Jill Parkinson CAR 308289                     *
.*                  Recompiled for index 2 of pmseraf to now have hospital    *
.*        V10.05.09 11/11/2014  Jill Parkinson CAR 308289                     *
.*                  Moved KHOS000 to be before CHKSN00 so hospital is available*
.*                  to use when checking the last sent date                    *
.*        V10.05.08 23/10/2014  Peter Vela    CAR 306804                      *
.*                  Initialised SNPMCPFL with U(nknown) in CLR90000           *
.*        V10.05.07 10/10/2014  Davin         CAR 303619                      *
.*                  Added check for overseas post code & state                *
.*        V10.05.06 07/10/2014 Jill Parkinson CAR 306937                      *
.*                  Changed WPAL0000 to check for 30 for DOYR2014             *
.*        V10.05.05 24/09/2014 Jill Parkinson CAR 306513                      *
.*                  Added branch to CKCC9999 directly above CKCC9500          *
.*        V10.05.04 18/09/2014  Davin          CAR 304204                     *
.*                  Recompiled for GETDRG - get drg vers based on disch date  *
.*        V10.05.03 15/09/2014  Jill Parkinson CAR 306184                     *
.*                  Mods to have an extra keyin for single hospital           *
.*        V10.05.02 01/09/2014  Jill Parkinson CAR 304255                     *
.*                  Mods to pmsqeraf to allow hospital to be collected        *
.*        V10.05.01 26/08/2014  Ania P         CAR 303210                     *
.*                  Recompiled for MEHHONFD                                   *
.*        V10.04.06 07/04/2014  J.Tan          CAR 296975                     *
.*                  Mods for Multi Hospital                                   *
.*        V10.04.05 24/03/2014  Jill Parkinson CAR 298897                     *
.*                  July 2014 Changes                                         *
.*        V10.04.04 06/02/2014  Jill Parkinson CAR 295994                     *
.*                  Changed to still send venthhmm but not icuhhmm unless     *
.*                  'approved ICU'                                            *
.*        V10.04.03 09/01/2014  Jill Parkinson CAR 295994                     *
.*                  Added sendicu to allow only sites that are 'approved ICU' *
.*                  to send paticuaf hours                                    *
.*        V10.04.02 20/12/2013  Ania P        CAR 294308                      *
.*                  Recompiled for PATRDEFD                                   *
.*        V10.04.01 17/12/2013  Jill Parkinson CAR 295265                     *
.*                  Fixed read of paticuaf                                    *
.*        V10.03.16 22/11/2013  Jill Parkinson CAR 294205                     *
.*                  Fixed read of patrdeaf to be a direct read                *
.*        V10.03.15 31/10/2013  Don Nguyen        CAR 293319                  *
.*                  Added ICEQ0000 to get the HDP Equivalent Impairment Code  *
.*        V10.03.14 30/10/2013  Don Nguyen        CAR 293160                  *
.*                  Moved Admission date into FIM Assessment date (PTFIDATE)  *
.*                  in SNPACT00 for same day patients.                        *
.*        V10.03.13 25/10/2013  Jill Parkinson    CAR 291982 & 292120         *
.*                  Moved use of PTCDGRPV in CKCC0000  so that it is          *
.*                  still used for 2013                                       *
.*                  Fixed compare to PMUGENDD instead of PMUGSDAT             *
.*                  Added read of pmsapgaf                                    *
.*        V10.03.12 17/09/2013  Jill Parkinson    CAR 291266                  *
.*                  Fixed loop in previous change for day cases               *
.*        V10.03.11 28/08/2013  Jill Parkinson    CAR 290382                  *
.*                  Mods to send 999 fim scores for day cases without patfimaf*
.*        V10.03.10 16/08/2013  Jill Parkinson    CAR 289007                  *
.*                  Mods to exit DIPV0000 if pre 01 July 2013                 *
.*        V10.03.09 14/06/2013  Jill Parkinson    CAR 282743                  *
.*                  Fixed read on patecdaf at PROC3100                        *
.*        V10.03.08 06/06/2013  Jill Parkinson    CAR 282743                  *
.*                  Added open of patfimaf and mehhonaf                       *
.*        V10.03.06 05/06/2013  Jill Parkinson    CAR 282743                  *
.*                  July 2013 changes                                         *
.*        V10.03.05 07/08/2012  Don Nguyen       CAR 270202                   *
.*                  Modified BLOK0000 so that it only outputs the error       *
.*                  message if Date/Time of proc is mandatory (PT0ODTMN)      *
.*        V10.03.04 05/06/2012  Don Nguyen       CAR 263648                   *
.*                  Added another edit for verion 1.1 of Specification doc    *
.*        V10.03.03 24/04/2012  Don Nguyen       CAR 263648                   *
.*                  Changes for July 1 2012 reporting                         *
.*        V10.03.02 23/11/2011  Steve Armstrong  CAR 255695                   *
.*                  Mods to cater for 2011/2012                               *
.*        V10.03.01 18/11/2011  Mike Laming      CAR 240184                   *
.*                  Changes to IBAPOSTF Post Code table - added State to Keys *
.******************************************************************************
.*        V10.02.01 28/03/2011  Mike Laming      CAR 240107                   *
.*                  Mods to PATECDaf & PATECOaf variables & Keys - file change*
.*        V10.00.03 01/09/2010  Sandra Barcham   CAR 229317                   *
.*                  For estimated DOB send space not 0                        *
.*        V10.00.02 22/04/2010  Jill Parkinson   CAR 219816                   *
.*                  Created WMUR0000 instead of being within WQST0000         *
.*        V10.00.01 12/04/2010  Jill Parkinson   CAR 218287                   *
.*                  July 2010 mods                                            *
.*        V9.12.02  01/10/2009  Jill Parkinson   CAR 206826                   *
.*                  Moved RDPTRAN2 to be at proc3000 instead of after wactflg *
.*        V9.12.01  17/09/2009 Sandra Barcham    CAR 205931                   *
.*                  Fix error message for mothers U/R                         *
.*        V9.11.01  26/03/2009  Jill Habasque    CAR 192793                   *
.*                  July 2009 Mods - added mothers ur and Activity B records  *
.*        V9.10.06  25/09/2008 Ian Farnell       CAR 173943                   *
.*                  changed us4 to us1 in MVEXT000 to mv SNP file             *
.*        V9.10.05  03/09/2008 Sandra Barcham    CAR 173943                   *
.*                  initialized CLNO under PROC0000                           *
.*                  mod PRINTERR changed IF to COMPARE  ...  IF NOT LESS      *
.*        V9.10.04  28/08/2008 Ian Farnell       CAR 173943                   *
.*                  Incld MATCH on Cat A TCINDC5 = X so do not include        *
.*                  certain type of Boarders in PROC1000                      *
.*        V9.10.03  18/07/2008 Jill Habasque   CAR 172799                     *
.*                  Fixed length of CFN2005                                   *
.*        V9.10.02  12/06/2008 Jill Habasque   CAR 169460                     *
.*                  Mods to check patqrdaf records are not sent twice if the  *
.*                  same values                                               *
.*        V9.10.01  23/05/2008 Jill Habasque   CAR 169088                     *
.*                  Mods to read last transfer record for change records      *
.*        V9.09.01  22/04/2008  Jill Habasque  CAR 166052                     *
.*                  Copied IBAINP53 and made July 2008 changes                *
.*       ****** was IBAINP53 ****
.*        V9.09.06 25/03/2008 Ian Farnell       CAR 163767                   *
.*                  Dot out MATCH on Cat A TCINDC3 = B so do not exclude      *
.*                  Boarders                                                  *
.*        V9.09.05  29/11/2007 Sandra Barcham    CAR 155725                   *
.*                  Dot out ADMPREFL,ADMINTRQ & ADMRELGN should report spaces *
.*                  Only                                                      *
.*        V9.09.04  22/11/2007 Peter Vela        CAR 132264                   *
.*                  Recompiled for PATCHCFD                                   *
.*        V9.09.03  24/09/2007 Sandra Barcham    CAR 150735                   *
.*                  Change to collect the DVA Number from patma1af.prepat     *
.*        V9.09.02  11/09/2007 Mike Laming       CAR 147728                   *
.*                  More Info - Admission Source is Cat "S ", Transport Adm.  *
.*                  Source (PMVXSTRA) is Cat."SI" - changes at WADM0800       *
.*        V9.09.01  04/09/2007 Mike Laming       CAR 147728                   *
.*                  Change Admission Source to Cat."SI" - add Ambul. No. edit *
.*        V9.08.05  26/04/2007 Jill Habasque  CAR 138049                      *
.*                  July 2007 changes                                         *
.*        V9.08.04  20/04/2007 Jill Habasque  CAR 139025                      *
.*                  Mods to use PTVANHSC if populated                         *
.*        V9.08.03  06/03/2007 Davin           CAR 123763                     *
.*                  Changed to write multiple ADL scores per SNP episode:     *
.*                  - extract now uses patqrdaf not patrdeaf                  *
.*                  - routine wsat0000 loops thru patqrdaf to get ADL scores  *
.*                  - ADL date now taken from the 'keyed in date' in patqrd   *
.*        V9.08.02  19/12/2006 Ian Farnell     CAR 114632                     *
.*                  Allow mapping of cat A or Cat CC codes to SNP care Type   *
.*                  in DRG Ver field at CKCC0000                              *
.*        V9.08.01  01/06/2006 Davin S         CAR 104165  2006 Changes       *
.*                  Added diagnostic onset type to morbidity file             *
.*                  Collect sub acute episode details based on care type      *
.*                  changes (Cat.A or Cat.CC).                                *
.*                  Added new file for SNAP (SNP - tempfile 9)                *
.*                  Added new type S (SNAP) to activity file                  *
.******************************************************************************
.*        V9.04.07  29/07/2005  Peter Vela    CAR 67306                       *
.*                  PTTRLTSC is now getting populated from PATTRNFD           *
.*        V9.04.06  21/06/2005  Peter Vela    CAR 63938                       *
.*                  Fixed extraction of ward transfer to the activity file    *
.*                  Fixed extraction of qual status to the activity file      *
.*                  Fixed extraction of NHT to activity file                  *
.*        V9.04.05  09/06/2005  Mike Laming   CAR 62629                       *
.*                  Correct patient Source of Referral at WADM7000 - include  *
.*                  2004 changes from V6.                                     *
.*        V9.04.04  13/05/2005  Mike Laming   CAR 60077                       *
.*                  Change to fix NHT Activity records at PROC2150 & GNHT0000 *
.*        V9.04.03  03/05/2005  Mike Laming   CAR 57745                       *
.*                  Correct Activity recd for Newborns at PROC2200 & PROC3000 *
.*        V9.04.02  03/05/2005  Mike Laming   CAR 61341  July 2005 QLD HD     *
.*                  Change to Extract file name (increases to 11.3 format)    *
.*                  & clean-up 2001, 2002 & 2003 changes                      *
.*        V9.04.01  05/11/2004  Mike Laming   CAR 54636 Qld HDP 2004          *
.*                  - Additional Sex "R" added to system                      *
.*                  - Change Block ranges in BLOK0000 for 2004 ICD10 4th      *
.*                  - Add new field to LOAD selection at WADM5500             *
.*        V9.03.04  16/07/2004  Jill Habasque CAR 51767                       *
.*                  Reinstated use of PTCNELPS if pmvxelps is blank           *
.*        V9.03.03  09/01/2004  Sylvek Litewka  CAR 20222                     *
.*                  Modified procedures GDIS0000, GOPR0000 and VALD0000 to    *
.*                  read ICD files using new IO routines RDPTICD1 & RDPTICO1  *
.*                  and patient's discharge date.                             *
.*        V9.03.02  11/11/2003  Guomin Fu   CAR 44642                         *
.*                  Correct zero medicare number & medicare reference number  *
.*                  display. It should display blank if no value in these     *
.*                  fields. If there is medicare number but no medicare re-   *
.*                  ference number, display "0" in medicare reference number  *
.*                  field.                                                    *
.*        V9.03.01  05/05/2003 Jill Habasque          SRF 38098               *
.*                  2003/2004 Changes                                         *
.*        V9.02.06  10/10/2002 Pat Dirito             SRF 22713               *
.*                  Now only using ibainp53.us1 & us2                         *
.*        V9.02.05  02/10/2002 Pat Dirito             SRF 22713               *
.*                  Modified to move files to extract directory for web.      *
.*        V9.02.04  02/09/2002 Pat Dirito             SRF 21757               *
.*                  Changed ICD-CODE Block Range from (1910-1911) to          *
.*                  (1909-1912)                                               *
.*        V9.02.03  01/08/2002 J.Tan                                          *
.*                  Fixed Previous palliative care                            *
.*        V9.02.02  03/06/2002 J.Tan                                          *
.*                  Fixed not using user defined fields for palliative        *
.*        V9.02.01  25/06/2002 J.Tan  SRF 18497                               *
.*                  Fixed checking disc.destination and I*C on patmx1         *
.*        V9.02.00  17/06/2002 J.Tan  SRF 18497                               *
.*                  Changes for 2002                                          *
.*        V6.09.07  04/06/2002  Davin July 2002/2003 HDP mods                 *
.*                  - Changed to use GETDRG routine                           *
.*        V6.09.06  28/05/2002  Davin July 2002/2003 HDP mods                 *
.*                  - Fixed I*C on tempfile & printing of adm number          *
.*        V6.09.05  09/05/2002  Tonii July 2002/2003 HDP mods                 *
.*                  - Added 1 new field to 'Patient File Detail Record'       *
.*                    - PATCONCT,Contract for feedback indicator              *
.*                  - Added 6 new fields to 'Admission File Detail Record'    *
.*                    - ADMINCDT - Incident date                              *
.*                    - ADMINCFG - Incident date flag                         *
.*                    - ADMWCQLD - WorkCover QLD Consent                      *
.*                    - ADMMAIC - MAIC Consent                                *
.*                    - ADMDVA - DVA Consent                                  *
.*                    - ADMDOD - DOD Consent                                  *
.*                  - Added 2 new edits                                       *
.*                  - Added 1 new valid category (23) for Source of Referral  *
.*                  - Added 1 new valid category (15) for Mode of Separation  *
.*        V6.09.05  07/05/2002  Mike Laming  SRF 14120/14358                  *
.*                  Add read to "patmmbsf" if PTEODATE is blank ("patecoaf")  *
.*        V6.09.04  22/10/2001  Mike Laming  SRF 12358                        *
.*                  Correct ACT count Activity Code Q (record count missing)  *
.*        V6.09.03  05/10/2001  Mike Laming  SRF 12358                        *
.*                  Change Funding Source to use bytes 2-3 of HDP Equivalent  *
.*                  in Category CL of PATCODES.                               *
.*                  Correct the Morbidity output - add read to PATECO.. and   *
.*                  correct checking of Procedure codes in the valid blocks   *
.*        V6.09.02  08/06/2001  Tonii 01/02 mods                              *
.*                  - Extended 'Patient File' length by 1                     *
.*                  - Added check to see if patient is Aust. Sth Sea Islander *
.*                  - Extended 'Admission File' length by 2                   *
.*                  - Added new item 'Funding Source Code'                    *
.*                  - Added check to see if procedure date is present for a   *
.*                    certain range of procedure codes                        *
.*                  - Mods to use new Country codes after July 1st 2001       *
.******************************************************************************
.*        V6.09.B05 01/03/2001  Jill Habasque                                 *
.*                  Changed to default the chargeable status to two for       *
.*                  private patients in public beds                           *
.*        V6.09.B04 23/02/2001  Jill Habasque                                 *
.*                  Mods for ABWGHT - changes to unpack into 4 characters     *
.*        V6.09.B03 12/02/2001  Jill Habasque   SRF 8246                      *
.*                  Contract Mods - added validation                          *
.*        V6.09.B02 27/12/2000  Ebon Clements   SRF 7332                      *
.*                  Allow collection of care type data for extract            *
.*        V6.09.B01 27/12/2000  Ebon Clements   SRF 7842                      *
.*                  Do not write NHT records to activity file on ward change  *
.*        V6.07.06  21/11/2000  Ebon Clements                                 *
.*                  Changed to use A and P as external cause codes (PT0DACRQ) *
.*        V6.07.05  18/09/2000  Jill Habasque                                 *
.*                  Changed to use 6,7 and 8 as external cause codes (PT0DACRQ*
.*        V6.07.04  15/09/2000  Jill Habasque                                 *
.*                  Mods to get drg from patpgraf                             *
.*        V6.07.03  29/08/2000  Jill Habasque SRF 4950                        *
.*                  Fixed activity compensable status                         *
.*        V6.07.02  31/07/2000  Jill Habasque SRF 4115                        *
.*                  Fixed clearing of codeary                                 *
.*        V6.07.01  05/05/2000  Jill Habasque                                 *
.*                  00/01 Mods - Added TEMP7 & TEMP8                          *
.*        V6.07.B03 11/04/2000  Greg Horvat      SRF 638875                   *
.*                  Changed to ignore boarders via the admission type         *
.*        V6.07.B02 11/04/2000  Jill Habasque SRF 637523                      *
.*                  Added PTCNELPS - Elective Patient Status (U1-V1,P or CC)  *
.*        V6.07.B01 02/02/2000  Greg Horvat                                   *
.*                  Changed to get the coding from the episode coding files   *
.*        V6.06.08  26/11/1999  Jill Habasque                                 *
.*                  Mods to ADMSOREF                                          *
.*        V6.06.07  29/10/1999  Greg Horvat                                   *
.*                  Recompiled for changes to PATIOICD & PATIOICO             *
.*        V6.06.06  12/10/1999  Caleb Sharman  SRF 634719                     *
.*                  Mods to UDF 10 & 11, they now use codes V1 & V2           *
.*        V6.06.05  20/09/1999  Davin                                         *
.*                  Changes for 4 character DRGs                              *
.*        V6.06.04  31/08/1999  Jill Habasque                                 *
.*                  Right Justified Source of Referral                        *
.*        V6.06.03  18/06/1999  Jill Habasque                                 *
.*                  Rebound                                                   *
.*        V6.06.02  31/05/1999 Andrew Peel                                    *
.*                  Changes for 1999/2000 Data Collection                     *
.*        V6.06.01  28/05/1999 J Habasque SRF 631798                          *
.*                  Changed CNSWRACE to PNSWRACE to allow all Adm UDF's       *
.*        V6.06.B01 11/01/1999  J.Tan  SRF 629817                             *
.*                  Mods to check flag for writting to activity file          *
.*        V6.05.05  08/12/1998  Nicole Harrington                             *
.*                  Removed CCENTRY                                           *
.*        V6.05.04  26/10/1998  Greg Horvat                                   *
.*                  Changed to display keyin & print dates with centuries     *
.*        V6.05.03  18/08/1998  J.Tan                                         *
.*                  Fixed unique number                                       *
.*        V6.05.02  27/07/1998  Greg Horvat                                   *
.*                  Changed to not extract X operation types                  *
.*        V6.05.01  15/07/98 J.Tan                                            *
.*                  Changes for 1998                                          *
.*        V6.04.08  24/07/1997  Greg Horvat      SRF 621037                   *
.*                  Changed to send a blank admin weight if the admin weight  *
.*                  is 0                                                      *
.*        V6.04.07  23/07/97 J.Tan       SRF 620580                           *
.*                  Mods to get suburb from address line 3 instead of line 2  *
.*        V6.04.06  24/04/97 J.Tan       SRF 619595                           *
.*                  Mods to admission trans to / from                         *
.*        V6.04.05  23/04/97 J.Tan      SRF 619401                            *
.*                  Mods to get suburb from postcode                          *
.*        V6.04.04  14/03/1997  Greg Horvat                                   *
.*                  Added contract leave as an activity type                  *
.*        V6.04.03  04/02/97 J.Tan       SRF 618827                           *
.*                  Mods to Admission weight                                  *
.*        V6.04.02  24/01/1996  Greg Horvat      SRF 618748                   *
.*                  Changed the download variable length to be 127 chars.  It *
.*                  was truncating at 80 chars                                *
.*        V6.04.01  03/12/96 J.Tan    SRF 617888                              *
.*                  Fixed checking for medicare number                        *
.*        V6.03.25  16/09/1996  Greg Horvat      SRF 617012                   *
.*                  Changed to get the ICD9 operation code mapping properly   *
.*        V6.03.24  06/09/96 J.Tan    SRF 616954                              *
.*                  Mods admission class category "P" to use HDP default      *
.*        V6.03.23  02/09/1996  Greg Horvat                                   *
.*                  Changed to only send the morbidity contract flag if it is *
.*                  1 or 2                                                    *
.*        V6.03.22  20/08/1996  Greg Horvat      SRF 616660                   *
.*                  Changed to send multiple 'E' codes for an admission       *
.*        V6.03.21  07/08/1996  Greg Horvat      SRF 616519                   *
.*                  Changed to use the mapping file before sending the ICD9   *
.*                  codes                                                     *
.*                  07/08/1996  Greg Horvat      SRF 616115                   *
.*                  Changed to extract mental health details                  *
.*                                                                            *
.******************************************************************************
.
          INC       STD001FD
          INC       PATCALAG/INC            * Data variables for CALCAGE
          INC       PATDHEAD/INC            * Data variables for CALCAGE
          INC       IBAPOSFD/INC            * Post code
          INC       MEHHONFD/INC            * HONOS
          INC       MRTCONFD/INC 
          INC       PATCFAFD/INC
          INC       PATFIMFD/INC
          INC       PATFX1FD/INC
          INC       PMSCCDFD/INC
          INC       PMSUPGFD/INC
          INC       PMSAPGFD/INC
          INC       PMSSNPFD/INC
          INC       PMSIMPFD/INC            * Impairment Code 
.
          INC       PATHSPFD/INC
          INC       PAT3MIFD/INC            * ICD9 mapping file
          INC       PATASFFD/INC            * funding arrangement
          INC       PATCHCFD/INC
          INC       PATCT1FD/INC            * Catchment Codes
          INC       PATCODFD/INC            * Codes file
          INC       PATCONFD/INC            * Control file
          INC       PATDADFD/INC            * Admin/disch transfer destin. file
          INC       PATVADFD/INC            * Admin/disch transfer destin. file
          INC       PATDO1FD/INC            * Doctor file
          INC       PATDRGFD/INC            * Date range file
          INC       PATDSCFD/INC            * Discharge file
          INC       PATECDFD/INC            * Patient episode disease file
          INC       PATECOFD/INC            * Patient episode operation file
          INC       PATFN1FD/INC            * Health fund file
          INC       PATICUFD/INC            * ICU
          INC       PATICDFD/INC            * ICD disease file
          INC       PATICOFD/INC            * ICD operation file
          INC       PATLINFD/INC
          INC       PATMA1FD/INC            * Master file
          INC       PMSPX2FD/INC
          INC       PMSQERFD/INC
          INC       PATMMBFD/INC            * Med Records MBS Details  *I-60905
          INC       PATPGRFD/INC
          INC       PATVISFD/INC            * Visit file
          INC       PATWVEFD/INC            * Veterans affairs claims
          INC       HL7BMTFD/INC
          INC       PATMI1FD/INC            * Admission file
          INC       PATQMHFD/INC            * QLD mental health file
          INC       PATQRDFD/INC            * Rehab file
          INC       PATRDEFD/INC            * Rehab file
          INC       PATTRNFD/INC            * Transfer file
          INC       PATWR1FD/INC            * Ward file
          INC       PMSVX1FD/INC            * 
          INC       PMSEDGFD/INC       * Effective DRG Dates
.
. ----- Tempfile Definitions -----
.
.Tape Header File
.================
TEMP1     FILE      ASCII, FIXED=31       * headmmyy.txt (mm-month, yy-year)
.
.Tape Header Record
.------------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
HEADERE   DIM       1           1         Header record type E - extract details
FACNUM    DIM       5           2         Facility number
EXTRACTP  DIM       16          7         Extract period (ccyymmddccyymmdd)
EXTRACTD  DIM       8           23        Extract date (ccyymmdd)
.End of Record                  31
.
.Header Record
.-------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
HEADERF   DIM       1           1         Header record type F - file details
FILETYPE  DIM       3           2         File type PAT - patient
.                                                   ADM - admission
.                                                   MEN - mental health
.                                                   MOR - morbidity
.                                                   ACT - activity
.                                                   PAL - palliative
.                                                   DVA - dep. veteran affairs
.                                                   SNP - sub & non-acute
RECORDN   DIM       1           5         Record type N - new
NEWRECS   DIM       5           6         Number of new records
RECORDA   DIM       1           11        Record type A - amendment
ADMRECS   DIM       5           12        Number of amendment records
RECORDD   DIM       1           17        Record type D - deletion
DELRECS   DIM       5           18        Number of deleted records
.SP8      DIM       8           23        8 spaces
.End of Record                  31
.
.
.Patient File
.============
TEMP2     FILE      ASCII, FIXED=211      * patimmyy.txt (mm-month, yy-year)
TEMP2A    FILE      ASCII, FIXED=212      * after 01/07/2001
TEMP2B    FILE      ASCII, FIXED=213      * after 01/07/2002
TEMP2C    FILE      ASCII, FIXED=214      * after 01/07/2003
TEMP2D    FILE      ASCII, FIXED=274      * after 01/07/2007
.
.Header Record
.-------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
PATFACNO  DIM       5           1         Patient facility number
PATEXTPR  DIM       16          6         Patient extract period
PAT       INIT      "PAT"       22        Patient file type
PATNOREC  DIM       5           25        Patient number of records
PATEXTID  DIM       10          30        Patient extraction software identifier
.SP234    DIM       234         40        234 spaces  *after 1/07/2007
.SP171    DIM       173         40        171 spaces
.End of Record                  213
.
.Detail Record
.-------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
PATRECID  DIM       1           1         Patient record identifier
PATUNQNO  DIM       12          2         Patient unique number
PATURNO   DIM       8           14        Patient U/R number
PATADMNO  DIM       12          22        Patient admission number
PATSURN   DIM       24          34        Patient surname
PATFIRST  DIM       15          58        Patient first name
PATSECND  DIM       15          73        Patient second name
PATADD    DIM       40          88        Patient address
PATSUBRB  DIM       40          128       Patient suburb
PATPOST   DIM       4           168       Patient postcode
PATSTATE  DIM       1           172       Patient state of residence
PATSLAUR  DIM       4           173       Patient stats local area of usual res.
PATSEX    DIM       1           177       Patient sex
PATDOB    DIM       8           178       Patient date of birth (ccyymmdd)
PATDOBEF  DIM       1           186       Patient DOB estimated flag
PATMARST  DIM       1           187       Patient marital status
PATCOBTH  DIM       4           188       Patient country of birth
PATINDST  DIM       1           192       Patient Indigenous status
PATLANCD  DIM       2           193       Patient language code
PATOCCUP  DIM       4           195       Patient occupation
PATEMPST  DIM       1           199       Patient employment status
PATMEDEL  DIM       1           200       Patient medicare eligibility
PATMEDNO  DIM       10          201       Patient medicare number
PATAUSSI  DIM       1           211       Patient Aust Sth Sea Islander?
PATCONTC  DIM       1           212       Contact for feedback indicator
.End of Record                  213
.
.after 1/7/2003
PATMEREF  DIM       1           211       Patient Medicare Reference no
.PATAUSSI DIM       1           212       Patient Aust Sth Sea Islander?
.PATCONTC DIM       1           213       Contact for feedback indicator
XPHONEHM  DIM       20          214       Home phone - after 01/07/2007
XPHONEBS  DIM       20          234       Business phone - after 01/07/2007 
XPHONEPR  DIM       20          254       Private phone - after 01/07/2007
.End of Record                  274
.
.Admission File
.==============
TEMP3A    FILE      ASCII, FIXED=132      * admimmyy.txt (mm-month, yy-year)
TEMP3B    FILE      ASCII, FIXED=134
TEMP3C    FILE      ASCII, FIXED=147
TEMP3D    FILE      ASCII, FIXED=173 
TEMP4D    FILE      ASCII, FIXED=192    * afer 01/07/2013
.
.Header Record
.-------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
ADMFACNO  DIM       5           1         Admission facility number
ADMEXTPR  DIM       16          6         Admission extract period
ADM       INIT      "ADM"       22        Admission file type
ADMNOREC  DIM       5           25        Admission number of records
ADMEXTID  DIM       10          30        Admission extraction software id.
.SP92     DIM       107         40        92 spaces
.SP133    DIM       133         40        133 spaces
.End of Record                  173
.
.Detail Record
.-------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
.ADMRECID  DIM       1           1         Admission record identifier
.ADMUNQNO  DIM       12          2         Admission unique number
.ADMURNO   DIM       8           14        Admission U/R number
.ADMADMNO  DIM       12          22        Admission admission number
.ADMADDTE  DIM       8           34        Admission admission date (ccyymmdd)
.ADMADTME  DIM       4           42        Admission admission time (hhmm)
.ADMACCLS  DIM       12          46        Admission account class
.ADMCHRST  DIM       1           58        Admission chargeable status
.ADMTYPEP  DIM       2           59        Admission care type      
.ADMCOMPS  DIM       1           61        Admission compensable status
.ADMBAND   DIM       2           62        Admission band (day cases only)
.ADMSOREF  DIM       2           64        Admission source of referral
.ADMTRNFF  DIM       5           66        Admission transferring from facility
.ADMHOSIN  DIM       1           71        Admission hospital insurance
.ADMSPDTE  DIM       8           72        Admission discharge date (ccyymmdd)
.ADMSPTME  DIM       4           80        Admission discharge time (hhmm)
.ADMOFSEP  DIM       2           84        Admission seperation mode
.ADMTRNTF  DIM       5           86        Admission transferring to facility
.ADMDRG    DIM       5           91        Admission diagnosis related group
.ADMMDC    DIM       3           96        Admission major diagnosis category
.ADMADWGT  DIM       4           99        Admission weight (<=2500g & <=28days)
.ADMADWRD  DIM       6           103       Admission admitting ward
.ADMADUNT  DIM       4           109       Admission admitting unit
.ADMSWUCD  DIM       4           113       Admission standard ward/unit code
.ADMTRDOC  DIM       6           117     Treating doctor at adm episode of care
.ADMPLSDY  DIM       1           123       Admission planned same day
.ADMEVPTS  DIM       1           124       Admission elective patient status
.ADMQSTAT  DIM       1           125       Qualification status
.ADMWRDCD  DIM       4           126       Standard ward code
.ADMCONTR  DIM       1           130       Admission contract status
.ADMCONTT  DIM       1           131       Admission contract type
.ADMFNDSC  DIM       2           132       Admission Funding source code
.ADMINCDT  DIM       8           134       Incident Date
.ADMINCFG  DIM       1           142       Incident Date flag
.ADMWCQLD  DIM       1           143       Workcover QLD consent
.ADMMAIC   DIM       1           144       MAIC consent
.ADMDVA    DIM       1           145       DVA consent
.ADMDOD    DIM       1           146       DOD consent
.ADMPREFL  DIM       4           147       Preferred language
.ADMINTRQ  DIM       1           151       Interpreter Req 
.ADMRELGN  DIM       4           152       Religion
.ADMQASN   DIM       12          156       QAS Number
.CONTHOSP  DIM       5           168       Contracting Hospital
.End of Record                  173
.
.. **** admission layout after 01/07/2013 *******
.Detail Record
.-------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
ADMRECID  DIM       1           1         Admission record identifier
ADMUNQNO  DIM       12          2         Admission unique number
ADMURNO   DIM       8           14        Admission U/R number
ADMADMNO  DIM       12          22        Admission admission number
ADMADDTE  DIM       8           34        Admission admission date (ccyymmdd)
ADMADTME  DIM       4           42        Admission admission time (hhmm)
ADMACCLS  DIM       12          46        Admission account class
ADMCHRST  DIM       1           58        Admission chargeable status
ADMTYPEP  DIM       2           59        Admission care type
ADMCOMPS  DIM       1           61        Admission compensable status
ADMBAND   DIM       2           62        Admission band (day cases only)
ADMSOREF  DIM       2           64        Admission source of referral
ADMTRNFF  DIM       5           66        Admission transferring from facility
ADMHOSIN  DIM       1           71        Admission hospital insurance
ADMSPDTE  DIM       8           72        Admission discharge date (ccyymmdd)
ADMSPTME  DIM       4           80        Admission discharge time (hhmm)
ADMOFSEP  DIM       2           84        Admission seperation mode
ADMTRNTF  DIM       5           86        Admission transferring to facility
ADMDRG    DIM       5           91        Admission diagnosis related group
ADMMDC    DIM       3           96        Admission major diagnosis category
ADMADWGT  DIM       4           99        Admission weight (<=2500g & <=28days)
ADMADWRD  DIM       6           103       Admission admitting ward
ADMADUNT  DIM       4           109       Admission admitting unit
ADMSWUCD  DIM       4           113       Admission standard ward/unit code
ADMTRDOC  DIM       6           117       Admission treating doctor
ADMPLSDY  DIM       1           123       Admission planned same day
ADMEVPTS  DIM       1           124       Admission elective patient status
ADMQSTAT  DIM       1           125       Qualification status
ADMWRDCD  DIM       4           126       Standard ward code
ADMCONTR  DIM       1           130       Admission contract status
ADMCONTT  DIM       1           131       Admission contract type
ADMFNDSC  DIM       2           132       Admission Funding source code
ADMINCDT  DIM       8           134       Incident Date
ADMINCFG  DIM       1           142       Incident Date flag
ADMWCQLD  DIM       1           143       Workcover QLD consent
ADMMAIC   DIM       1           144       MAIC consent
ADMDVA    DIM       1           145       DVA consent
ADMDOD    DIM       1           146       DOD consent
ADMPREFL  DIM       4           147       Preferred language
ADMINTRQ  DIM       1           151       Interpreter Req
ADMRELGN  DIM       4           152       Religion
ADMQASN   DIM       12          156       QAS Number
CONTHOSP  DIM       5           168       Contracting Hospital
FILLER    DIM       6           173       Blank filler
ICUHHMM   DIM       7           178       ICU Hours Mins HHHHHMM
VENTHHMM  DIM       7           185       Ventilation Hours Mins HHHHHMM
.End of Record                  192
.

.
.Mental Health File
.==================
TEMP4     FILE      ASCII, FIXED=42       * menhmmyy.txt (mm-month, yy-year)
.
.Header Record
.-------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
MENFACNO  DIM       5           1         Mental health facility number
MENEXTPR  DIM       16          6         Mental health extract period
MEN       INIT      "MEN"       22        Mental health file type
MENNOREC  DIM       5           25        Mental health number of records
MENEXTID  DIM       10          30        Mental health extraction software id.
.SP2      DIM       2           40        2 spaces
.End of Record                  42
.
.Detail Record
.-------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
MENRECID  DIM       1           1         Mental health record identifier
MENUNQNO  DIM       12          2         Mental health unique number
MENURNO   DIM       8           14        Mental health U/R number
MENADMNO  DIM       12          22        Mental health admission number
MENTUACM  DIM       1           34        Mental health type of usual accom.
MENEMPST  DIM       1           35        Mental health employment status
MENPENST  DIM       1           36        Mental health pension status
MENPLMST  DIM       1           37        Mental health problem status
MENRTFCE  DIM       2           38        Mental health referral to further care
MENLGSID  DIM       1           40        Mental health legal status indicator
MENPSNAT  DIM       1           41        Mental health previous specialised
.End of Record                  42                      non-admitted treatment
.
.
.Activity File
.=============
TEMP5     FILE      ASCII, FIXED=65       * actimmyy.txt (mm-month, yy-year)
.
.Header Record
.-------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
ACTFACNO  DIM       5           1         Activity facility number
ACTEXTPR  DIM       16          6         Activity extract period
ACT       INIT      "ACT"       22        Activity file type
ACTNOREC  DIM       5           25        Activity number of records
ACTEXTID  DIM       10          30        Activity extraction software id.
.SP25     DIM       25          40        25 spaces
.End of Record                  65
.
.Detail Record For Activity Code A (Account Class Variation)
.-----------------------------------------------------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
ACTRECID  DIM       1           1         Activity record identifier
ACTUNQNO  DIM       12          2         Activity unique number
ACTURNO   DIM       8           14        Activity U/R number
ACTADMNO  DIM       12          22        Activity admission number
ACTCODEA  DIM       1           34        Activity code A - Account class var.
ACTACCLS  DIM       12          35        Actviity account class
.SP2      DIM       2           47        2 spaces
ACTCHRST  DIM       1           49        Activity chargeable status
ACTCOMPS  DIM       1           50        Activity compensable status
ACTBAND   DIM       2           51        Activity band (2 spaces)
ACTCHDTE  DIM       8           53        Activity change date (ward transfer)
ACTCHTME  DIM       4           61        Activity change time (ward transfer)
.End of Record                  65
.
.Detail Record For Activity Code B (Patient Identifier of Mother)
.-----------------------------------------------------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
.ACTRECID  DIM       1           1         Activity record identifier
.ACTUNQNO  DIM       12          2         Activity unique number
.ACTURNO   DIM       8           14        Activity U/R number
.ACTADMNO  DIM       12          22        Activity admission number
ACTCODEB  DIM       1           34        Activity code B - Birth episode
ACTMOTHU  DIM       8           35        Mothers UR
.SP22     DIM       22          43        22 spaces
.End of Record                  65
.
.Detail Record For Activity Code C (Contract Status)
.---------------------------------------------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
.ACTRECID DIM       1           1         Activity record identifier
.ACTUNQNO DIM       12          2         Activity unique number
.ACTURNO  DIM       8           14        Activity U/R number
.ACTADMNO DIM       12          22        Activity admission number
ACTCODEC  DIM       1           34        Activity code C - contract status
ACTDTSCL  DIM       8           35        Activity start C/L date (ccyymmdd)
ACTDTRCL  DIM       8           43        Activity return C/L date (ccyymmdd)
ACTFACCT  DIM       5           51        Activity facility contracted to
.SP9      DIM       9           56        9 spaces
.End of Record                  65
.
.Detail Record For Activity Code L (Leave Episode)
.------------------------------------------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
.ACTRECID DIM       1           1         Activity record identifier
.ACTUNQNO DIM       12          2         Activity unique number
.ACTURNO  DIM       8           14        Activity U/R number
.ACTADMNO DIM       12          22        Activity admission number
ACTCODEL  DIM       1           34        Activity code L - leave episode
ACTDTESL  DIM       8           35        Activity start leave date (ccyymmdd)
ACTTMESL  DIM       4           43        Activity start leave time (hhmm)
ACTDTERL  DIM       8           47        Activity return leave date (ccyymmdd)
ACTTMERL  DIM       4           55        Activity return leave time (hhmm)
.SP6      DIM       6           59        6 spaces
.End of Record                  65
.
.Detail Record For Activity Code W (Ward Transfer)
.------------------------------------------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
.ACTRECID DIM       1           1         Activity record identifier
.ACTUNQNO DIM       12          2         Activity unique number
.ACTURNO  DIM       8           14        Activity U/R number
.ACTADMNO DIM       12          22        Activity admission number
ACTCODEW  DIM       1           34        Activity code W - ward
ACTWARD   DIM       6           35        Activity ward
ACTUNIT   DIM       4           41        Activity unit
ACTSWUCD  DIM       4           45        Activity standard ward/unit code
.ACTCHDTE DIM       8           49        Activity change date (ward transfer)
.ACTCHTME DIM       4           57        Activity change time (ward transfer)
ACTWRDCD  DIM       4           61        Standard ward code
.End of Record                  65
.
.Detail Record For Activity Code Q (Qualification status)
.--------------------------------------------------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
.ACTRECID DIM       1           1         Activity record identifier
.ACTUNQNO DIM       12          2         Activity unique number
.ACTURNO  DIM       8           14        Activity U/R number
.ACTADMNO DIM       12          22        Activity admission number
ACTCODEQ  DIM       1           34        Activity code Q - qualification stat.
ACTQSTAT  DIM       1           35        Qualification status
.ACTCHDTE DIM       8           36        Activity change date
.ACTCHTME DIM       4           44        Activity change time
.SP17     DIM       17          48        17 spaces
.End of Record                  65
.
.Detail Record For Activity Code T (Nursing home type)
.--------------------------------------------------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
.ACTRECID DIM       1           1         Activity record identifier
.ACTUNQNO DIM       12          2         Activity unique number
.ACTURNO  DIM       8           14        Activity U/R number
.ACTADMNO DIM       12          22        Activity admission number
ACTCODET  DIM       1           34        Activity code T - Nursing Home
ACTNHFLG  DIM       3           35        Nursing Home flag
ACTDTCOM  DIM       8           38        Date commenced
ACTDTCEA  DIM       8           46        Date ceased
.SP11     DIM       11          54        11 spaces
.End of Record                  65
.
.Detail Record For Activity Code S (Sub and Non-acute Items)
.--------------------------------------------------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
.ACTRECID DIM       1           1         Activity record identifier
.ACTUNQNO DIM       12          2         Activity unique number
.ACTURNO  DIM       8           14        Activity U/R number
.ACTADMNO DIM       12          22        Activity admission number
ACTCODES  DIM       1           34        Activity code S - SNAP
ACTSEPNO  DIM       3           35        SNAP episode number
ACTSADTY  DIM       3           38        ADL type
ACTSADST  DIM       3           41        ADL subtype
ACTSADSC  DIM       3           44        ADL score
ACTSADDT  DIM       8           47        ADL date
ACTSADTM  DIM       4           55        ADL time (not reqd.)
ACTSPHTY  DIM       2           59        Phase type (not reqd.)
.SP4      DIM       4           61        4 spaces
.End of Record                  65
.
.Morbidity File
.==============
TEMP6     FILE      ASCII, FIXED=106      * morbmmyy.txt (mm-month, yy-year)
.
.Header Record
.-------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
MORFACNO  DIM       5           1         Morbidity facility number
MOREXTPR  DIM       16          6         Morbidity extract period
MOR       INIT      "MOR"       22        Morbidity file type
MORNOREC  DIM       5           25        Morbidity number of records
MOREXTID  DIM       10          30        Morbidity extraction software id.
.SP66     DIM       66          40        64 spaces
.End of Record                  106
.
.Detail Record
.-------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
MORRECID  DIM       1           1         Morbidity record identifier (N,D)
MORUNQNO  DIM       12          2         Morbidity unique number
MORURNO   DIM       8           14        Morbidity U/R number
MORADMNO  DIM       12          22        Morbidity admission number
MORDICID  DIM       3           34        Morbidity diagnosis code identifier
MORICDC   DIM       7           37        Morbidity ICD9-CM/ICD10-AM code
MORICDD   DIM       50          44        Morbidity ICD9-CM text
MORPRODT  DIM       8           94        Morbidity procedure date
MORCONFG  DIM       1           102       Morbidity contract flag
MORONSET  DIM       1           103       Morbidity diagnosis onset type
MORMRINT  DIM       1           104       Morbidity most resource intensive
MOROCOMI  DIM       1           105       Morbidity oth co morbidity interesst
.End of Record                  106
.
. July 2025
.
MORBDCID  DIM       2           106       Morbidity diagnosis cluster id
.End of Record                  108
.
.Palliative Care File
.====================
TEMP7     FILE      ASCII, FIXED=40       * palhmmyy.txt (mm-month, yy-year)
.Header Record
.-------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
PALFACNO  DIM       5           1         Palliative facility number
PALEXTPR  DIM       16          6         Palliative extract period
PAL       INIT      "PAL"       22        Palliative file type
PALNOREC  DIM       5           25        Palliative number of records
PALEXTID  DIM       10          30        Palliative extraction software id.
.End of Record                  40
.
.Detail Record
.-------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
PALRECID  DIM       1           1         Palliative record identifier (N,D)
PALUNQNO  DIM       12          2         Palliative unique number
PALURNO   DIM       8           14        Palliative U/R number
PALADMNO  DIM       12          22        Palliative admission number
PALFIRST  DIM       1           34        1=No previous pal 2=Previous pal adm
PALPNONA  DIM       1           35        Previous non-admitted palliative pat.
.SP4      DIM       4           36        4 spaces
.End of Record                  40
.
.
.DVA File
.========
TEMP8     FILE      ASCII, FIXED=45       * dvapmmyy.txt (mm-month, yy-year)
.Header Record
.-------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
DVAFACNO  DIM       5           1         DVA facility number
DVAEXTPR  DIM       16          6         DVA extract period
DVA       INIT      "DVA"       22        DVA file type
DVANOREC  DIM       5           25        DVA number of records
DVAEXTID  DIM       10          30        DVA extraction software id.
.SP5      DIM       5           40        5 spaces
.End of Record                  45
.
.Detail Record
.-------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
DVARECID  DIM       1           1         DVA record identifier (N,D)
DVAUNQNO  DIM       12          2         DVA unique number
DVAURNO   DIM       8           14        DVA U/R number
DVAADMNO  DIM       12          22        DVA admission number
DVACNUMB  DIM       10          34        DVA number
DVACTYPE  DIM       1           44        DVA card type
.End of Record                  45
.
.Sub and Non-Acute File
.======================
TEMP9     FILE      ASCII, FIXED=59       * snapmmyy.txt (mm-month, yy-year)
TEMP9A    FILE      ASCII, FIXED=71       * snapmmyy.txt (mm-month, yy-year)
.
.Header Record
.-------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
SNPFACNO  DIM       5           1         SNAP facility number
SNPEXTPR  DIM       16          6         SNAP extract period
SNP       INIT      "SNP"       22        SNAP file type
SNPNOREC  DIM       5           25        SNAP number of records
SNPEXTID  DIM       10          30        SNAP extraction software id.
.SP19     DIM       19          40        19 spaces
.End of Record                  59
.
.Detail Record
.-------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
.SNPRECID  DIM       1           1         SNAP record identifier (N,A,D)
.SNPUNQNO  DIM       12          2         SNAP unique number
.SNPURNO   DIM       8           14        SNAP U/R number
.SNPADMNO  DIM       12          22        SNAP admission number
.SNPEPSNO  DIM       3           34        SNAP episode number
.SNPTYPE   DIM       3           37        SNAP type
.SNPGRPCL  DIM       3           40        SNAP group classification (not reqd.)
.SNPSTDTE  DIM       8           43        SNAP start date (ccyymmdd)
.SNPENDTE  DIM       8           51        SNAP end date (ccyymmdd)
.SNPMCPFL  DIM       1           59        Multidisciplinary care plan flag
.SNPMCPDT  DIM       8           60        Multidisciplinary care plan date
.SNPPPRSV  DIM       3           68        Proposed Principal Referral Service
.End of Record                  71
.
.Detail Record       * after 01/07/2013
.-------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
.SNPRECID  DIM       1           1         SNAP record identifier (N,A,D)
.SNPUNQNO  DIM       12          2         SNAP unique number
.SNPURNO   DIM       8           14        SNAP U/R number
.SNPADMNO  DIM       12          22        SNAP admission number
.SNPEPSNO  DIM       3           34        SNAP episode number
.SNPTYPE   DIM       3           37        SNAP type
.SNPGRPCL  DIM       3           40        SNAP group classification (not reqd.)
.SNPSTDTE  DIM       8           43        SNAP start date (ccyymmdd)
.SNPENDTE  DIM       8           51        SNAP end date (ccyymmdd)
.SNPMCPFL  DIM       1           59        Multidisciplinary care plan flag
.SNPMCPDT  DIM       8           60        Multidisciplinary care plan date
.SNPPPRSV  DIM       3           68        Proposed Principal Referral Service
.SNPIMPCD  DIM       7           71        Impairment Code
.End of Record                  78
.
.Detail Record       * after 01/07/2016
.-------------
.Name     Type      Length      Start     Description
.----     ----      ------      -----     -----------
SNPRECID  DIM       1           1         SNAP record identifier (N,A,D)
SNPUNQNO  DIM       12          2         SNAP unique number
SNPURNO   DIM       8           14        SNAP U/R number
SNPADMNO  DIM       12          22        SNAP admission number
SNPEPSNO  DIM       3           34        SNAP episode number
SNPTYPE   DIM       3           37        SNAP type
SNPGRPCL  DIM       3           40        SNAP group classification (not reqd.)
SNPSTDTE  DIM       8           43        SNAP start date (ccyymmdd)
SNPENDTE  DIM       8           51        SNAP end date (ccyymmdd)
SNPMCPFL  DIM       1           59        Multidisciplinary care plan flag
SNPMCPDT  DIM       8           60        Multidisciplinary care plan date
SNPPPRSV  DIM       3           68        Proposed Principal Referral Service
SNPIMPCD  DIM       7           71        Impairment Code
SNPCLASO  DIM       1           78        Clinical Assessment Only
.End of Record                  79
.

. ----- Program Variables -----
.
ACTCOUNT  FORM      5                       * Activity tempfile record counter
ADMCOUNT  FORM      5                       * Admission tempfile record counter
ADMIN     DIM       8                       * Admission number
ARYCOUNT  FORM      2                       * Array counter
ASTREQFL  FORM      1                       * Asterisk Required flag
ASSESONL  FORM      1                       * Assessment Only indicator
.
BJDAY     FORM      3
BABYFLG   FORM      1
BLOKNO    FORM      4                                                  *I-60903
QUALFLG   FORM      1
.
CATCC     INIT      "CC"                    * Category CC Care Type
CARECATG  DIM       2                       * category to use for care type
CARECLSS  DIM       3      * Current care class
CARETYPE  DIM       2      * Current care type
CDYSDAYS  FORM      6                       * Number of days calculated
CDYSFDTE  DIM       8                       * (CCYYMMDD) From Date
CDYSTDTE  DIM       8                       * (CCYYMMDD) To   Date
CDYSYEAR  FORM      2                       * Work Year variable
CFNAME1   DIM       7                       * Header file name
CFNAME2   DIM       7                       * Patient file name
CFNAME3   DIM       7                       * Admission file name
CFNAME4   DIM       7                       * Mental health file name
CFNAME5   DIM       7                       * Activity file name
CFNAME6   DIM       7                       * Morbidity file name
CFNAME7   DIM       7                       * Palliative file name
CFNAME8   DIM       7                       * DVA file name
CFNAME9   DIM       7                       * SNP file name
CFN2005   DIM       16
CHRCOUNT  FORM      2
CJDAY     FORM      3
CMDLINE   DIM       127
.CODEARY   DIM       9[15]
CODEARY   DIM       9[99]
CONTFLAG  FORM      1                       * Contract flag
CONTPAT   FORM      1                       * Contract patient
CURDATE   DIM       8                       * Current date (ccyymmdd)
CPTDATE   DIM       8
.
DIM1A     DIM       1
DIM4      DIM       4
DIM5      DIM       5                                                  *I-61341
DIM8      DIM       8                                                  *I-61341
DISEASE   FORM      1                       * Disease/operation flag
DCODE1    DIM       7
DCODE2    DIM       7
DCODE3    DIM       7
DCODE4    DIM       7
DCODE5    DIM       7
DCODE6    DIM       7
DCODE7    DIM       7
DCODE8    DIM       7
DCODE9    DIM       7
DCODE10   DIM       7
DCODE11   DIM       7
DCODE12   DIM       7
DCODE13   DIM       7
DCODE14   DIM       7
DCODE15   DIM       7
DCODE16   DIM       7
DCODE17   DIM       7
DCODE18   DIM       7
DCODE19   DIM       7
DCODE20   DIM       7
DCODE21   DIM       7
DCODE22   DIM       7
DCODE23   DIM       7
DCODE24   DIM       7
DCODE25   DIM       7
DCODE26   DIM       7
DCODE27   DIM       7
DCODE28   DIM       7
DCODE29   DIM       7
DCODE30   DIM       7
DCODE31   DIM       7               * I CAR 39326
DCODE32   DIM       7
DCODE33   DIM       7
DCODE34   DIM       7
DCODE35   DIM       7
DCODE36   DIM       7
DCODE37   DIM       7
DCODE38   DIM       7
DCODE39   DIM       7
DCODE40   DIM       7
DCODE41   DIM       7
DCODE42   DIM       7
DCODE43   DIM       7
DCODE44   DIM       7
DCODE45   DIM       7
DCODE46   DIM       7
DCODE47   DIM       7
DCODE48   DIM       7
DCODE49   DIM       7
DCODE50   DIM       7
DCODE51   DIM       7
DCODE52   DIM       7
DCODE53   DIM       7
DCODE54   DIM       7
DCODE55   DIM       7
DCODE56   DIM       7
DCODE57   DIM       7
DCODE58   DIM       7
DCODE59   DIM       7
DCODE60   DIM       7
DCODE61   DIM       7
DCODE62   DIM       7
DCODE63   DIM       7
DCODE64   DIM       7
DCODE65   DIM       7
DCODE66   DIM       7
DCODE67   DIM       7
DCODE68   DIM       7
DCODE69   DIM       7
DCODE70   DIM       7
DCODE71   DIM       7
DCODE72   DIM       7
DCODE73   DIM       7
DCODE74   DIM       7
DCODE75   DIM       7
DCODE76   DIM       7
DCODE77   DIM       7
DCODE78   DIM       7
DCODE79   DIM       7
DCODE80   DIM       7
DCODE81   DIM       7
DCODE82   DIM       7
DCODE83   DIM       7
DCODE84   DIM       7
DCODE85   DIM       7
DCODE86   DIM       7
DCODE87   DIM       7
DCODE88   DIM       7
DCODE89   DIM       7
DCODE90   DIM       7
DCODE91   DIM       7
DCODE92   DIM       7
DCODE93   DIM       7
DCODE94   DIM       7
DCODE95   DIM       7
DCODE96   DIM       7
DCODE97   DIM       7
DCODE98   DIM       7
DCODE99   DIM       7                       * end I CAR 39326
.
DDRGCODE  DIM       4
DMDCCODE  DIM       4
DISPFINI  DIM       10                      * Display finishing date
DISPSTRT  DIM       10                      * Display starting date
DRGVER    DIM       3
DVACOUNT  FORM      5                       * DVA tempfile record counter
DOYR2025  FORM      1
.
ENDDATE   DIM       8
ELPSCODE  DIM       3
ELPSCAT   DIM       2
EPSSDATE  DIM       8      * Episode start date (CCYYMMDD)
EPSEDATE  DIM       8      * Episode end date (CCYYMMDD)
EPSNUMB   FORM      2      * Episode number
EPSCTYPE  DIM       3      * Episode care type
EPSWDATE  DIM       8      * Episode work date (ccyymmdd)
ERRORFLG  FORM      1                       * Error flag
ERRDESC   DIM       100                     * Change from 60 -> 100    *C-60903
ERRFLAG   FORM      1
EXTCAUFL  FORM      1                       * External cause flag
.
FIMCOG    FORM      3
FIMFINSH  FORM      1
FIMMOT    FORM      3
FORM3     FORM      3
FORM5     FORM      5
FORM7     FORM      7
GETNEXT   FORM      1      * Get next episode flag
HASFIM    FORM      1
HASRUG    FORM      1
HONOSFND  FORM      1
HONTOT    FORM      3
IBCNMHOS  FORM      1
.
JUSTNO    FORM      2                       * Right justification amount
KEYPER    DIM       4                       * Keyed in period (mmyy)
KEYPER8   DIM       8
.
LASTDATE  DIM       8
LJUSCODE  DIM       80                      * Left justified code
.
MAPFILE   FORM      1                       * Mapping file flag
MENCOUNT  FORM      5                       * Mntl hlth tempfile record counter
MHFLAG    FORM      1                       * Mental health flag
MOVEMENT  FORM      1                       * Type of transfer movement
MORCOUNT  FORM      5                       * Morbidity tempfile record counter
NHTFLAG   FORM      1
NINETY9   FORM      2
NOPROGRM  FORM      1
.
OYEAR     FORM      "365"
.
PATCOUNT  FORM      5                       * Patient tempfile record counter
PASS      FORM      2                       * Disease/operation record counter
PALCOUNT  FORM      5                       * Palliative tempfile record counter
PREVTYPE  DIM       2
.
RJUSCODE  DIM       80                      * Right justified code
.
SAVADMN   DIM       8                       * Save admission number
SAVADTME  DIM       5                       * Save the admission time
SAVBEDTP  DIM       3                       * Save the bed type
SAVKEY24  DIM       24
SAVWARD   DIM       3                       * Save the ward
SAVADMNO  DIM       8                       * Save admission number
STARTDAT  DATE      8                       * Starting date (ccyymmdd)
SAVQSTAT  DIM       1
SAVNDT    DIM       8                       * Save NHT end Date
SAVNHT    DIM       1
SENDICU   DIM       1
SNPCOUNT  FORM      5                       * SNAP tempfile record counter
SNAPFLAG  FORM      1
STDWRDCD  DIM       4                       * Standard ward code
.
TEST      INIT      "TST"
TOPTION   FORM      1
TQSTAT    DIM       1
TOTCOUNT  FORM      5                       * Total patients extracted
URNO      FORM      8                       * U/R number
PTMIUS08   DIM       3           3       391      USER DEFINED FIELD 8
PTMIUS09   DIM       3           3       394      USER DEFINED FIELD 9
PTMIUS10   DIM       3           3       397      USER DEFINED FIELD 10
PTMIUS11   DIM       3           3       400      USER DEFINED FIELD 11
.PTTRLTSC  DIM       5            5        166      Leave tran
.
RERDATE   DIM        8
.
. ----- Program Constants -----
.
CODEA     INIT      "A "
CODEAY    INIT      "AY"
CODEBT    INIT      "BT"
CODEBY    INIT      "BY"
CODEC     INIT      "C "
CODECC    INIT      "CC"
CODECL    INIT      "CL"
CODED     INIT      "D "
CODED1    INIT      "D1"
CODED2    INIT      "D2"
CODED3    INIT      "D3"
CODED4    INIT      "D4"
CODED5    INIT      "D5"
CODEDD    INIT      "DD"
CODEDT    INIT      "DT"
CODELS    INIT      "LS"
CODEM     INIT      "M "
CODEP     INIT      "P "
CODEP1    INIT      "P1"
CODEP2    INIT      "P2"
CODEP3    INIT      "P3"
CODEP4    INIT      "P4"
CODEP5    INIT      "P5"
CODEP6    INIT      "P6"
CODEPT    INIT      "PT"
CODEVA    INIT      "VA"
CODERE    INIT      "RE"
CODES     INIT      "S "
CODESI    INIT      "SI"                                              *I-147728
CODET     INIT      "T "
CODETL    INIT      "TL"
CODEU1    INIT      "U1"
CODEU2    INIT      "U2"
CODEU3    INIT      "U3"
CODEU4    INIT      "U4"
CODEU5    INIT      "U5"
CODEU6    INIT      "U6"
CODEU7    INIT      "U7"
CODEU8    INIT      "U8"
CODEU9    INIT      "U9"
CODEV0    INIT      "V0"
CODEV1    INIT      "V1"
CODEV2    INIT      "V2"
CODEV3    INIT      "V3"
CODEV4    INIT      "V4"
CODEV5    INIT      "V5"
CODEVB    INIT      "VB"                                               *I-54636
.
CODEss    INIT      "ss"
.
PROCERR1  INIT      "Diagnosis code ID=PR, block is between 1 and 1759. "
PROCERR2  INIT      "Procedure date must not be NULL."
PROCDTER  INIT      "Error. Procedure Date Blank."
.
PYAA      INIT      "PYAA"
PYZZ      INIT      "PYZZ"
.
SP12      INIT      "            "
SP50      INIT      "                                                  "
SP100     INIT      "                                                  ":
                    "                                                  "
.
WACTFLG   FORM      1
.
CFPAYCOD  DIM       3        * 3M Codefinder PAY Code
.
.
PRGID     INIT      "IBAINP57"
PRGNAM    INIT      "QLD Health Department Transmissions"
VERSION   INIT      "V12.00.01"
+
.******************************************************************************
.*                                  ML0000                                    *
.*                                Main Module                                 *
.******************************************************************************
ML0000    CALL      INIT0000                * Initialize variables & open files
ML1000    CALL      OPTN0000                * Choose option
          BRANCH    EXIT,ML9999
.
ML2000    CALL      OPEN0000                * Open tempfiles & check if period
          BRANCH    EXIT,ML2000               has already been run
.
          CALL      CONTQST                 * Ok to Continue (Y/N/C) ?
          BRANCH    CEXIT,ML3000,ML1000,ML1000
.                         Yes    No     Cancel
.
ML3000    CALL      PROC0000                * Process run
.
.   Web key stroke will always be 0 so SUBO0000 will branch on exit when run
.   from web.
.
          CALL      SUBO0000                * Choose sub option
          BRANCH    EXIT,ML3100             
.
          CALL      TRAN0000                * Transfer tempfiles to median
.
ML3100    CALL      MVEXT000                * Move files to extract directory
          GOTO      ML1000
.
ML9999    CHAIN     PGM
+
.******************************************************************************
.*                                 INIT0000               Called by: ML0000   *
.*                     Initialize Variables & Open Files                      *
.******************************************************************************
INIT0000  CALL      DISPHEAD                * Display screen heading
.
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,SEVENTY9;*115,PTCNDGUP,PTCNDGUA,PTCNDGMU:
                                           PTCNDGUU:
                                      *239,PTCNDGAD,PTCNDGDS,PTCNDGTR:
                                           PTCNDGRG
          READ      CONTROLF,EIGHTY8;*59,PTCNI10D
          READ      CONTROLF,HUND05;*178,PTCNVETR,*185,PTCNELPS,*187,PTCNPPAL
          READ      CONTROLF,SEVENTY7;*1,PTCNDPRS
          READ      CONTROLF,HUND31;*1,MRCNDCID
.
          DISPLAY   *P64:24,"patasfaf";
          OPEN      PATASFA1,"patasfaf"
.
          DISPLAY   *P64:24,"patct1cf";
          OPEN      PATCT1C1,"patct1cf"
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          IF        PTCNDPRS=1
            DISPLAY   *P64:24,"patdprsf";
            OPEN      PATDRGA1,"patdprsf"
            OPEN      PATDRGA2,"patdprsf"
          ELSE
            DISPLAY   *P64:24,"patdrgaf";
            OPEN      PATDRGA1,"patdrgaf"
            OPEN      PATDRGA2,"patdrgaf"
          ENDIF
.
          DISPLAY   *P64:24,"patchcof";
          OPEN      PATCHCO1,"patchcof"
.
          DISPLAY   *P64:24,"pmsqeraf";
          OPEN      PMSQERA1,"pmsqeraf"
          OPEN      PMSQERA2,"pmsqeraf"
.
          DISPLAY   *P64:24,"patdadaf";
          OPEN      PATDADA1,"patdadaf"
.
          DISPLAY   *P64:24,"patvadaf";
          OPEN      PATVADA1,"patvadaf"
.
          DISPLAY   *P64:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P64:24,"patdschf";
          OPEN      PATDSCH1,"patdschf"
          OPEN      PATDSCH2,"patdschf"
.
          DISPLAY   *P64:24,"patecdaf";
          OPEN      PATECDA2,"patecdaf"
.
          DISPLAY   *P64:24,"patfimaf";
          OPEN      PATFIMA1,"patfimaf"
.
          DISPLAY   *P64:24,"mehhonaf";
          OPEN      MEHHONA1,"mehhonaf"
.
          DISPLAY   *P64:24,"pmsccdaf";
          OPEN      PMSCCDA1,"pmsccdaf"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"patecoaf";
          OPEN      PATECOA2,"patecoaf"
.
          DISPLAY   *P64:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"paticuaf";
          OPEN      PATICUA1,"paticuaf"
.
          DISPLAY   *P64:24,"paticddf";
          CALL      OPICD1
.
          DISPLAY   *P64:24,"paticdof";
          CALL      OPICO1
.
          DISPLAY   *P64:24,"patlinkf";
          OPEN      PATLINK1,"patlinkf"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
.
          DISPLAY   *P64:24,"patmmbsf";                              
          OPEN      PATMMBS1,"patmmbsf"                             
.
          DISPLAY   *P64:24,"patpgraf";
          OPEN      PATPGRA1,"patpgraf"
.
          DISPLAY   *P64:24,"patqmhaf";
          OPEN      PATQMHA1,"patqmhaf"
.
          DISPLAY   *P64:24,"patqrdaf";
          OPEN      PATQRDA1,"patqrdaf"
.
          DISPLAY   *P64:24,"patrdeaf";
          OPEN      PATRDEA1,"patrdeaf"
.
          DISPLAY   *P64:24,"pattranf";
          OPEN      PATTRAN2,"pattranf"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA2,"patvisaf"
.
          DISPLAY   *P64:24,"patwvetf";
          OPEN      PATWVET1,"patwvetf"
.
          DISPLAY   *P64:24,"patwr1af";
          OPEN      PATWR1A1,"patwr1af"
.
          DISPLAY   *P64:24,"ibapostf";
          OPEN      IBAPOST1,"ibapostf"
.
          DISPLAY   *P64:24,"pmsimpaf";
          OPEN      PMSIMPA1,"pmsimpaf"
.
          DISPLAY   *P64:24,"pmssnpaf";
          OPEN      PMSSNPA1,"pmssnpaf"
.
          OPEN      PATHSPA1,"pathspaf"
.
          READ      CONTROLF,ZERO;*43,IBCNMHOS        * Multi Hospital
          READ      CONTROLF,TEN;*54,CFILENO
          READ      CONTROLF,SEVENTY9;*80,PTCNQLDB
          READ      CONTROLF,TWENTY1;*216,PTCNDTRF
.
.         need to uncomment for testing in devwork
....      MOVE      ONE,PTCNDTRF
.
          READ      CONTROLF,SEVENTY7;*1,PTCNDPRS
.
          READ      CONTROLF,TWENTY1;*221,CNSWLOC
          READ      CONTROLF,EIGHTY;*250,PTCNHDPS
          READ      CONTROLF,EIGHTY8;*242,PNSWRACE
.
          MOVE      ZERO,NOPROGRM
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PMSAPGA1,"pmsapgaf"
          TRAPCLR   IO
          IF        OVRCD<>1
            OPEN      PMSUPGA1,"pmsupgaf"
          ELSE
            MOVE      ONE,NOPROGRM
          ENDIF
.
          IF        (PTCNHDPS=4 & PTCNQLDB=6)
            MOVE      CODEA,CARECATG        * use atype for care class changes
          ELSE
            MOVE      CATCC,CARECATG
          ENDIF
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PAT3MIA1,"pat3miaf"
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,MAPFILE          * 3M mapping file does not exist
          ELSE
            MOVE      ONE,MAPFILE           * 3M mapping file does exist
          ENDIF
.
          CLOCK     TIME,CTIMEIS
          MOVE      ONE,ARYCOUNT            * Reset array counter
          MOVE      ONE,CNOUNDLN            * No underline
.
          CALL      IBACLOCK
          PACK      CURDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURDATE
.
          MOVE      "99",NINETY9            * I CAR 18587
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Run clean up                           *
.*                        TRUE  (1)  Exit option selected                   *
.****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Test Extract":
                    *P1:6,*V2LON,TWO,*HOFF,". Final Extract": 
                    *P1:7,*V2LON,THREE,*HOFF,". Re-Run Extract"
.
OPTN0500  KEYIN     *P1:9,*EL,"Select Option : ",*DV,UNDLN1:
                    *P17:9,*V2LON,COPTION
.
          MOVE      COPTION,TOPTION
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN2000,OPTN2000:   * run clean-up
                            OPTN2000
.
          BEEP
          GOTO      OPTN0500
.
OPTN2000  CALL      KHOS0000
          BRANCH    EXIT,OPTN9500
.
          CALL      ENEDT000
          BRANCH    EXIT,OPTN9500
          CALL      CHKSN000         * Check sent table
          BRANCH    EXIT,OPTN9500
          GOTO      OPTN9000
.
OPTN9000  MOVE      ANSN,SENDICU
          KEYIN     *P1:10,*EL,"Sending ICU Hours : (Y for yes)",*DV,UNDLN1:
                    *P17:10,*V2LON,SENDICU
.
          MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.******************************************************************************
.*                                  ENEDT000              Called by: OPTN0000 *
.*                              Enter end date                                *
.******************************************************************************
. ----- Enter Ending Date -----
.
ENEDT000  MOVE      ZERO,EXIT
          MOVE      CCC,CCENT
          MOVE      CYY,CYEAR
          MOVE      CMM,CMON
          MOVE      CDD,CDAY
          DISPLAY   *P1:4,*EF:
                    *P1:5,"Extract End date :";
          MOVE      "5",CVERT
          MOVE      "27",CCOL
          CALL      KEYDATE                 * Keyin the ending date
          BRANCH    OVRCD,ENEDT100
.
          PACK      ENDDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",ENDDATE
          CALL      PACDATE                 * Pack the ending date
.
. ----- Check If Ending Date Is Greater Than Today's Date -----
.
          MATCH     ENDDATE,CURDATE
          IF        @LESS
            DISPLAY   *P1:24,*EL,*B,"Keyed in date is greater than today's ":
                      "date. ";
            CALL      HITENTER
            GOTO      ENEDT000
          ENDIF
.
          MOVE      "20242025",KEYPER8    * 2024 - 2025
          MOVE      ZERO,DOYR2025
.
          SCAN      "PreJulyTest",REPTNAME
          IF        @EQUAL
            MATCH     "20250101",ENDDATE      
          ELSE
            MATCH     "20250701",ENDDATE
          ENDIF
          IF        !@LESS
            MOVE      "20252026",KEYPER8    * 2025 - 2026
            MOVE      ONE,DOYR2025
          ENDIF 
.
          RESET     REPTNAME
          GOTO      ENEDT999
.
ENEDT100  MOVE      ONE,EXIT
          GOTO      ENEDT999
.
ENEDT999  RETURN
+
.******************************************************************************
.*                                  CHKSN000              Called by: OPTN0000 *
.*                    Check sent table and get run number                     *
.******************************************************************************
CHKSN000  MOVE      ZERO,EXIT
          PACK      CPTDATE,ENDDATE
          PACK      KEY14,CPTDATE,SP6   * Key for to find this date in file
          CALL      RDSDRGA2            * Position in Date range file
          CALL      RDKDRGA2            * Get the first record from given date
          BRANCH    OVRCD,CHKSN930      * No record found in file
.
          MATCH     DRGFDTE,CPTDATE     * Is the given date before this period
          GOTO      CHKSN930 IF LESS    * Yes. Date not in file
.
          IF        COPTION=3
            PACK      KEY18,PTHSHOSP,ENDDATE,Z70
            CALL      RSPMQER2
            CALL      RPPMQER2
            BRANCH    OVRCD,CHKSN940
            MATCH     PTHSHOSP,PMQEHOSP
            GOTO      CHKSN940 IF NOT EQUAL
            MATCH     ENDDATE,PMQEEDAT
            GOTO      CHKSN940 IF NOT EQUAL
            PACK      KEY10,PMQEHOSP,PMQEYEAR,PMQERUNN,SP70
            CALL      RDPMQER1
            MOVE      PMQERUNN,F3
            GOTO      CHKSN010
          ENDIF
.
          PACK      KEY10,PTHSHOSP,DRGYR,Z70
          CALL      RSPMQER1
CHKSN010  CALL      RPPMQER1
          BRANCH    OVRCD,CHKSN920
.
          MATCH     PTHSHOSP,PMQEHOSP
          GOTO      CHKSN920 IF NOT EQUAL
.
CHKSN015  MATCH     PMQEEDAT,ENDDATE
          GOTO      CHKSN910 IF LESS
          GOTO      CHKSN910 IF EQUAL
.
          MOVE      PMQEEDAT,STARTDAT
          ADD       ONE,STARTDAT
.
          COMPARE   THREE,COPTION
          IF        @EQUAL 
            MOVE      F3,PMQERUNN
            GOTO      CHKSN050
          ENDIF
.
          MOVE      PMQERUNN,F3
          MATCH     DRGYR,PMQEYEAR
          IF        !@EQUAL
            MOVE      DRGYR,PMQEYEAR
            MOVE      ZERO,F3
          ENDIF
          ADD       ONE,F3
          MOVE      F3,PMQERUNN
          REP       " 0",PMQERUNN
          PACK      PMQEEDAT,ENDDATE
          REP       " 0",PMQEEDAT
.
          IF        COPTION=2
            PACK      KEY7,PMQEYEAR,PMQERUNN,SP70
            CALL      WRPMQER1
          ENDIF
.
CHKSN050  UNPACK    STARTDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PACK      DISPSTRT,CPCDATE,SP70
          DISPLAY   *P1:10,"Extract data for ",CPCDATE," to ";
          UNPACK    ENDDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PACK      DISPFINI,CPCDATE,SP70
          DISPLAY   *P32:10,CPCDATE
          GOTO      CHKSN999
.
CHKSN910  PRINT     *1,"Extract already run after this date"
          MOVE      ONE,EXIT
          GOTO      CHKSN999
.
CHKSN920  PRINT     *1,"No previous extract exists, start date must be set"
          MOVE      ONE,EXIT
          GOTO      CHKSN999
.
CHKSN930  PRINT     *1,"Not set up on period date range file"
          MOVE      ONE,EXIT
          GOTO      CHKSN999
.
CHKSN940  PRINT     *1,"No extract run on this date"
          MOVE      ONE,EXIT
          GOTO      CHKSN999
.
CHKSN999  RETURN
+
.******************************************************************************
.*                                 OPEN0000               Called by: ML0000   *
.*         Open The Tempfiles & See If The Period Has Already Been Run        *
.******************************************************************************
OPEN0000  CLEAR     CFNAME1
          APPEND    "HDR",CFNAME1
          APPEND    KEYPER,CFNAME1
          RESET     CFNAME1
          REP       " 0",CFNAME1
          RESET     CFNAME1
.
OPEN2000  CLOSE     TEMP1
          PREP      TEMP1,CFNAME1           * Open Header tempfile
.
          CLEAR     CFNAME2
          APPEND    "PAT",CFNAME2
          APPEND    KEYPER,CFNAME2
          RESET     CFNAME2
          REP       " 0",CFNAME2
          RESET     CFNAME2
          CLOSE     TEMP2
.
          PREP      TEMP2D,CFNAME2             * Open patient tempfile
.
          CLEAR     CFNAME3
          APPEND    "ADM",CFNAME3
          APPEND    KEYPER,CFNAME3
          RESET     CFNAME3
          REP       " 0",CFNAME3
          RESET     CFNAME3
          CLOSE     TEMP3A
.
          PREP      TEMP4D,CFNAME3             * Open admission tempfile
.
          CLEAR     CFNAME4
          APPEND    "MEN",CFNAME4
          APPEND    KEYPER,CFNAME4
          RESET     CFNAME4
          REP       " 0",CFNAME4
          RESET     CFNAME4
          CLOSE     TEMP4
          PREP      TEMP4,CFNAME4           * Open Mental Health tempfile
.
          CLEAR     CFNAME5
          APPEND    "ACT",CFNAME5
          APPEND    KEYPER,CFNAME5
          RESET     CFNAME5
          REP       " 0",CFNAME5
          RESET     CFNAME5
          CLOSE     TEMP5
          PREP      TEMP5,CFNAME5           * Open Activity tempfile
.
          CLEAR     CFNAME6
          APPEND    "MOR",CFNAME6
          APPEND    KEYPER,CFNAME6
          RESET     CFNAME6
          REP       " 0",CFNAME6
          RESET     CFNAME6
          CLOSE     TEMP6
          PREP      TEMP6,CFNAME6           * Open Morbidity tempfile
.
          CLEAR     CFNAME7
          APPEND    "PAL",CFNAME7
          APPEND    KEYPER,CFNAME7
          RESET     CFNAME7
          REP       " 0",CFNAME7
          RESET     CFNAME7
          CLOSE     TEMP7
          PREP      TEMP7,CFNAME7           * Open Palliative tempfile
.
          CLEAR     CFNAME8
          APPEND    "DVA",CFNAME8
          APPEND    KEYPER,CFNAME8
          RESET     CFNAME8
          REP       " 0",CFNAME8
          RESET     CFNAME8
          CLOSE     TEMP8
          PREP      TEMP8,CFNAME8           * Open DVA tempfile
.
          CLEAR     CFNAME9
          APPEND    "SNP",CFNAME9
          APPEND    KEYPER,CFNAME9
          RESET     CFNAME9
          REP       " 0",CFNAME9
          RESET     CFNAME9
          CLOSE     TEMP9
          PREP      TEMP9A,CFNAME9           * Open SNAP tempfile
.
          MOVE      ZERO,EXIT
          GOTO      OPEN9999
.
OPEN9500  MOVE      ONE,EXIT
OPEN9999  RETURN
+
.******************************************************************************
.*                                 PROC0000               Called by: ML0000   *
.*                                Process Run                                 *
.******************************************************************************
PROC0000  MOVE      ZERO,TOTCOUNT
          MOVE      ZERO,PATCOUNT
          MOVE      ZERO,ADMCOUNT
          MOVE      ZERO,MENCOUNT
          MOVE      ZERO,ACTCOUNT
          MOVE      ZERO,MORCOUNT
          MOVE      ZERO,PALCOUNT
          MOVE      ZERO,DVACOUNT
          MOVE      ZERO,SNPCOUNT
          MOVE      "60",CLNO
          CALL      WHHD0000   * Write to & clear the header header tempfile
          CALL      WPHD0000   * Write to & clear the patient header tempfile
          CALL      WAHD0000   * Write to & clear the admission header tempfile
          CALL      WBHD0000   * Write to & clear the activity header tempfile
          CALL      WNHD0000   * Write to & clear the mntl hlth header tempfile
          CALL      WMHD0000   * Write to & clear the morbidity header tempfile
          CALL      WPLH0000   * Write to & clear the palliative header tempfile
          CALL      WDHD0000   * Write to & clear the DVA header tempfile
          CALL      WSHD0000   * Write to & clear the SNP header tempfile
.
          DISPLAY   *P1:24,*EL,"Processing Date : ",*P35:24,"Admission : ";
          PACK      KEY16,STARTDAT,SP20
          CALL      RDSDSCH2                * Position at the start of the
PROC1000  CALL      RDKDSCH2                  discharge file & read the next
          BRANCH    OVRCD,PROC9000            record
.
          MATCH     DDATE,ENDDATE          * Discharge date is greater than
          GOTO      PROC9000 IF LESS          the finishing date
.
          MOVE      DDATE,ICDRDDTE          * Used for reading ICD files
.
          MOVE      CODEDD,TCODE
          MOVE      ZERO,NHTFLAG
          MOVE      DDEST,ACODE
          LOAD      TCODE,PTCNDTRF,CODED
          LOAD      ACODE,PTCNDTRF,DSTAT
          MATCH     SP3,ACODE
          GOTO      PROC1000 IF EQUAL       * Seperation mode not set up
.
          PACK      KEY5,TCODE,ACODE
          CALL      RDCODE1                 * Read the patients code file
          BRANCH    OVRCD,PROC1000
.
          MOVE      THCSCOD,KEY2
          MATCH     "10",KEY2
          GOTO      PROC1000 IF EQUAL       * Ignore patients contracted to
.                                             other hospitals
          PACK      KEY8,DURNO
          CALL      RDMAST1                 * Read the master file
          BRANCH    OVRCD,PROC1000
          CALL      RDPMPX21
          BRANCH    OVRCD,PROC1000
.
          PACK      KEY8,DADMNO
          CALL      RDMISS1                 * Read the admission file
          BRANCH    OVRCD,PROC1000
.
          CALL      EXNB0000                * Excluded newborn
          BRANCH    EXIT,PROC1000
.
          CALL      RDPMVX11                * Read the visit extension file
          BRANCH    OVRCD,PROC1000
.
          IF        IBCNMHOS = 1
            MATCH     SP3,PTHSHOSP
            IF        !@EQUAL
              MATCH     PTHSHOSP,PMVXMHOS   * check for selected hospital
              GOTO      PROC1000 IF NOT EQUAL
            ENDIF
          ENDIF
.
          PACK      KEY5,ANSA,SP1,ATYPE
          CALL      RDCODE1                 * Read the patients code file
          BRANCH    OVRCD,PROC1000
.
.         MATCH     "B",TCINDC3
.         GOTO      PROC1000 IF EQUAL       * Ignore boarder patients
 
          MATCH     "X",TCINDC5
          GOTO      PROC1000 IF EQUAL       * Ignore Exclude patients
 
          MOVE      ONE,BABYFLG             * Default to not a baby
          PACK      CDYSFDTE,PBDATE         * DOB
          PACK      CDYSTDTE,ADATE
          CALL      CALCDAYS
          SUB       ONE,CDYSDAYS
          IF        CDYSDAYS<=9
PROC1500    MOVE      ZERO,BABYFLG          * baby, if <= 9 days
          ENDIF
.
          MOVE      AADMNO,ADMIN            * Admission number
          MOVE      PURNO,URNO              * U/R number
.
          UNPACK    DDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE                 * Format the discharge date
          REP       " 0",CPCDATE
          DISPLAY   *P19:24,*V2LON,CPCDATE,*P47:24,ADMIN;
.
          ADD       ONE,TOTCOUNT            * Increment total patient counter
          CALL      CLRP0000                * Clear patient tempfile variables
          CALL      WPAT0000                * Write to the patient tempfile
          CALL      CLRA0000                * Clear admission tempfile variables
          CALL      WADM0000                * Write to the admission tempfile
.
          CALL      CLR70000                * Clear palliative tempfile variable
          CALL      WPAL0000                * Write to palliative tempfile
          CALL      CLR80000                * Clear DVA tempfile variables
          CALL      WDVA0000                * Write to DVA tempfile
.
. ----- Get the transfer details -----
.
PROC2000  MOVE      ZERO,CONTFLAG           * Contract flag - no
          MOVE      ZERO,CONTPAT            * Contract patient - no
          MOVE      ZERO,WACTFLG            * Write to activity flag
          MOVE      SP8,ACTDTCOM
          MOVE      SP8,ACTDTCEA
          MOVE      SP8,SAVNDT
          CALL      WMUR0000
.
          PACK      KEY30,AADMNO,SP30
          CALL      RDSTRAN2                * Read the transfer file until next
PROC2100  CALL      RDKTRAN2                  admission number
          BRANCH    OVRCD,PROC3000
.
          MATCH     AADMNO,TADMN            * Check to see if different admin.
          GOTO      PROC3000 IF NOT EQUAL     number
.
          MOVE      ZERO,QUALFLG
.
          MOVE      TMOVE,KEY1
          REP       "A1D2C3L4R5",KEY1
          MOVE      KEY1,MOVEMENT
          BRANCH    MOVEMENT,PROC2200,PROC2150,PROC2300,PROC2400,PROC2200
.                            Admin,   Disch,   Change,  On leave,Return leave
PROC2150  CALL      GNHT0000
          BRANCH    EXIT,PROC2100
          CALL      CLRB0000
          CALL      WACT0000
          GOTO      PROC2100
.
PROC2200  MOVE      TRBTYP,SAVBEDTP         * Save the bed type
          MOVE      TWARD,SAVWARD           * Save the ward
          MOVE      SP1,SAVQSTAT
          CALL      GQST0000                * Get admission qualification status
          IF        EXIT = 0
            MOVE      TCINDC2,SAVQSTAT      * Save the qualification status
          ENDIF
          MOVE      SP1,SAVNHT
          CALL      GNHT0000                * Get the NHT admission status
          GOTO      PROC2100
.
PROC2300  PACK      KEY30,AADMNO,TDATE,Z70
          CALL      RDSTRAN2
PROC2320  CALL      RDPTRAN2
          BRANCH    OVRCD,PROC2100
.
          MATCH     ANSC,TMOVE   * we only want the last change record for today
          GOTO      PROC2320 IF NOT EQUAL
.
          MOVE      TTIME,KEY5
.
          MATCH     SAVWARD,TWARD
.                                           * correct IF statement     *C-57745
          IF        @EQUAL
            MOVE      SIX,MOVEMENT
          ENDIF
.
          CALL      GQST0000                * Get admission qualification status
          BRANCH    EXIT,PROC2350
.
          MATCH     TCINDC2,SAVQSTAT
          GOTO      PROC2350 IF EQUAL       * hasnt changed
.
          MOVE      TCINDC2,SAVQSTAT
          MOVE      "1",QUALFLG
.         MOVE      "0",MOVEMENT            * changed qualification status
PROC2350  CALL      CLRB0000
          CALL      WACT0000
          GOTO      PROC2100                                           *I-60077
.
PROC2400  CALL      CLRB0000                * Clear activity tempfile variables
          CALL      WACT0000                * Write to the activity tempfile
          MOVE      ONE,WACTFLG             * Flag for writting to activity file
          GOTO      PROC2100
.
. ----- Get mental health details -----
.
PROC3000  CALL      RDPTRAN2
          BRANCH    WACTFLG,PROC3020        * Check if activity file is written
.
          MOVE      SAVBEDTP,TRBTYP         * admission bed type
          MOVE      SAVWARD,TWARD           * admission ward
.
PROC3020  CALL      CLRN0000                * Clear mntl hlth tempfile variables
          CALL      WMEN0000                * Write to the mntl hlth tempfile
.
          CALL      CLR90000                * Clear SNP tempfile variables
          CALL      WSNP0000                * write to SNAP tempfile
.
. ----- Get the disease details -----
.
          MOVE      ONE,DISEASE             * Disease record
          MOVE      ONE,PASS                * Disease counter
          CALL      CARY0000                * Clear array
          UNPACK    SP100,DCODE1,DCODE2,DCODE3,DCODE4,DCODE5
          UNPACK    SP100,DCODE6,DCODE7,DCODE8,DCODE9,DCODE10
          UNPACK    SP100,DCODE11,DCODE12,DCODE13,DCODE14,DCODE15
          UNPACK    SP100,DCODE16,DCODE17,DCODE18,DCODE19,DCODE20
          PACK      KEY16,AADMNO,SP20                                 *C-240107
          CALL      RSPTECD2                * Position on & read a patient
PROC3100  CALL      RKPTECD2                  episode disease file record
          BRANCH    OVRCD,PROC4000
.
          MATCH     AADMNO,PTEDADMN         * Check to see if different admin.
          GOTO      PROC4000 IF NOT EQUAL     number
.
...       COMPARE   PASS,TEN5               * D CAR 18587
          COMPARE   PASS,NINETY9            * I CAR 18587
          GOTO      PROC4000 IF LESS        * Only 15 diseases allowed
.
          CALL      CLRM0000                * Clear morbidity tempfile variables
          CALL      WMOR0000                * Write to the morbidity tempfile
          COMPARE   PASS,NINETY9            * I CAR 18587
          GOTO      PROC4000 IF EQUAL
          GOTO      PROC3100
.
. ----- Get the operation details -----
.
PROC4000  CALL      VALD0000                * Validate Disease Codes
          MOVE      TWO,DISEASE             * Not a disease record, operation
          MOVE      ONE,PASS                * Operation counter
          CALL      CARY0000                * Clear array
          PACK      KEY16,AADMNO,SP20                                 *C-240107
          CALL      RSPTECO2                * Position on & read a patient
PROC4100  CALL      RKPTECO2                  episode operation file record
          BRANCH    OVRCD,PROC5000
.
          MATCH     AADMNO,PTEOADMN         * Check to see if different admin.
          GOTO      PROC5000 IF NOT EQUAL     number
.
          MATCH     ANSX,PTEOTYPE
          GOTO      PROC4100 IF EQUAL       * Ignore this operation code
.
          COMPARE   PASS,NINETY9            * I CAR 18587
          GOTO      PROC5000 IF LESS        * Only 99 operations allowed
.
          CALL      CLRM0000                * Clear morbidity tempfile variables
          CALL      WMOR0000                * Write to the morbidity tempfile
          COMPARE   PASS,NINETY9            * I CAR 18587
          GOTO      PROC5000 IF EQUAL
          GOTO      PROC4100
.
PROC5000  IF        CONTFLAG=0 & CONTPAT=1
            COMPARE   "55",CLNO
            CALL      HEAD0000 IF NOT LESS  * Print ther report header
.
            PRINT     *1,"|",AADMNO,*10,"| is a contract patient & ":
                      "has no morbidity contract flag.",*80,"|"
            ADD       "1",CLNO
            MOVE      "1",ERRORFLG          * Error found
          ENDIF
          GOTO      PROC1000
.
. ----- Write header details -----
.
PROC9000  CALL      UPHD0000                * Update tempfiles headers
          CALL      CLRH0000                * Clear header tempfile variables
          CALL      WHED0000                * Write to the header tempfile
.
          CALL      PSUM0000                * Print the summary details
          IF        ERRORFLG=1
            DISPLAY   *P1:24,*EL,*B,"Extract errors found.  ";
            CALL      HITENTER
          ENDIF
          DISPLAY   *P1:24,*EL,"Total Number of Patients Extracted : ":
                    *V2LON,TOTCOUNT,*HOFF,".  ";
          CALL      HITENTER
PROC9999  RETURN
+
.******************************************************************************
.*                                 SUBO0000               Called by: ML0000   *
.*                           Keyin The Sub Option                             *
.******************************************************************************
SUBO0000  MOVE      ZERO,EXIT
          MOVE      ZERO,COPTION
          DISPLAY   *P1:12,*EF:
                    *P1:12,*V2LON,"0",*HOFF," = Exit":
                    *P1:13,*V2LON,"1",*HOFF," = Send Data To Floppy/Tape":
                    *P1:15,*HOFF,"Select Option : ";
.
SUBO1000  KEYIN     *P17:15,*EL,*V2LON,COPTION;
          BRANCH    COPTION,SUBO9999
.
          COMPARE   ZERO,COPTION
          GOTO      SUBO9500 IF EQUAL
.
          BEEP
          GOTO      SUBO1000
.
SUBO9500  MOVE      ONE,EXIT
SUBO9999  RETURN
+
.******************************************************************************
.*                                 TRAN0000               Called by: ML0000   *
.*                       Transmit Tempfiles To Median                         *
.******************************************************************************
TRAN0000  MOVE      ZERO,HLEF
          CALL      GETSCR00                * Save current screen
          DISPLAY   *P1:24,*EL,"Copying Data Files to Tape. Please Wait ... ":
                    *P1:16,*EL
          CLEAR     CMDLINE
          APPEND    "TRANSMIT",CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    CFNAME1,CMDLINE
          APPEND    ".txt",CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    CFNAME2,CMDLINE
          APPEND    ".txt",CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    CFNAME3,CMDLINE
          APPEND    ".txt",CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    CFNAME4,CMDLINE
          APPEND    ".txt",CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    CFNAME5,CMDLINE
          APPEND    ".txt",CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    CFNAME6,CMDLINE
          APPEND    ".txt",CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    CFNAME7,CMDLINE
          APPEND    ".txt",CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    CFNAME8,CMDLINE
          APPEND    ".txt",CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    CFNAME9,CMDLINE
          APPEND    ".txt",CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID          * Transmit tempfiles to median
          CALL      PUTSCR00                * Restore screen
          GOTO      TRAN1000 IF OVER
.
          DISPLAY   *P1:24,*EL,"Transmission Completed.",*W2;
          GOTO      TRAN9999
.
TRAN1000  DISPLAY   *P1:24,*EL,"Unable to access script instruction. ":
                    "Contact IBA Immediately. ";
          CALL      HITENTER
TRAN9999  RETURN
+
.------------------------------------------------------------
. Move Extract to Web Directory
.------------------------------------------------------------
MVEXT000  IF        TOPTION=1
            PACK      CFN2005,FACNUM,KEYPER8,TEST,SP20
          ENDIF
          IF        TOPTION=2
            PACK      CFN2005,FACNUM,KEYPER8,PMQERUNN,SP20
          ENDIF
          IF        TOPTION=3
            PACK      CFN2005,FACNUM,KEYPER8,PMQERUNN,SP20
          ENDIF
          REP       " 0",CFN2005
          CLEAR     CMDLINE                 * Header file
          APPEND    "ibainp57.us1 ",CMDLINE
          APPEND    CFNAME1,CMDLINE
          APPEND    ".txt ",CMDLINE
          APPEND    CFN2005,CMDLINE
          APPEND    ".HDR",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE                 * Patient file
          APPEND    "ibainp57.us1 ",CMDLINE
          APPEND    CFNAME2,CMDLINE
          APPEND    ".txt ",CMDLINE
          APPEND    CFN2005,CMDLINE
          APPEND    ".PAT",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE                 * Admission file
          APPEND    "ibainp57.us1 ",CMDLINE
          APPEND    CFNAME3,CMDLINE
          APPEND    ".txt ",CMDLINE
          APPEND    CFN2005,CMDLINE
          APPEND    ".ADM",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE                 * Mental Health file
          APPEND    "ibainp57.us1 ",CMDLINE
          APPEND    CFNAME4,CMDLINE
          APPEND    ".txt ",CMDLINE
          APPEND    CFN2005,CMDLINE
          APPEND    ".MEN",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE                 * Activity file
          APPEND    "ibainp57.us1 ",CMDLINE
          APPEND    CFNAME5,CMDLINE
          APPEND    ".txt ",CMDLINE
          APPEND    CFN2005,CMDLINE
          APPEND    ".ACT",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE                 * Morbidity file
          APPEND    "ibainp57.us1 ",CMDLINE
          APPEND    CFNAME6,CMDLINE
          APPEND    ".txt ",CMDLINE
          APPEND    CFN2005,CMDLINE
          APPEND    ".MOR",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE                 * Palliative file
          APPEND    "ibainp57.us1 ",CMDLINE
          APPEND    CFNAME7,CMDLINE
          APPEND    ".txt ",CMDLINE
          APPEND    CFN2005,CMDLINE
          APPEND    ".PAL",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE                 * DVA file
          APPEND    "ibainp57.us1 ",CMDLINE
          APPEND    CFNAME8,CMDLINE
          APPEND    ".txt ",CMDLINE
          APPEND    CFN2005,CMDLINE
          APPEND    ".DVA",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE                 * SNP file
          APPEND    "ibainp57.us1 ",CMDLINE * This script has an extra <br>
          APPEND    CFNAME9,CMDLINE
          APPEND    ".txt ",CMDLINE
          APPEND    CFN2005,CMDLINE
          APPEND    ".SNP",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
MVEXT999  RETURN
.******************************************************************************
.*                                 WHHD0000               Called by: PROC0000 *
.*                Write To & Clear The Header Header Tempfile                 *
.******************************************************************************
WHHD0000  MOVE      ANSE,HEADERE            * Header extract type
.
          IF        IBCNMHOS=1
            PACK      FACNUM,PTHSHSID,SP70
          ELSE
            PACK      FACNUM,CFILENO,SP10
          ENDIF
          PACK      LJUSCODE,FACNUM,SP100
          MOVE      FIVE,JUSTNO
          CALL      RJUS0000                * Right justify the facility number
          MOVE      RJUSCODE,FACNUM
          REP       " 0",FACNUM             * Facility number
.
          PACK      EXTRACTP,STARTDAT,ENDDATE   * Extract period
          PACK      EXTRACTD,CURDATE,SP10   * Extract date
          WRITE     TEMP1,SEQ;HEADERE,FACNUM,EXTRACTP,EXTRACTD
WHHD9999  RETURN
+
.******************************************************************************
.*                                 WPHD0000               Called by: PROC0000 *
.*                Write To & Clear The Patient Header Tempfile                *
.******************************************************************************
WPHD0000  IF        IBCNMHOS=1
            PACK      PATFACNO,PTHSHSID,SP70
          ELSE
            PACK      PATFACNO,CFILENO,SP10
          ENDIF

          PACK      LJUSCODE,PATFACNO,SP100
          MOVE      FIVE,JUSTNO
          CALL      RJUS0000                * Right justify the facility number
          MOVE      RJUSCODE,PATFACNO
          REP       " 0",PATFACNO           * Facility number
.
          PACK      PATEXTPR,STARTDAT,ENDDATE   * Extract period
          MOVE      "00000",PATNOREC        * No of patient records extracted
          PACK      PATEXTID,VERSION,SP10   * Software version no
.
          WRITE     TEMP2D,SEQ;PATFACNO,PATEXTPR,PAT,PATNOREC,PATEXTID:
                            SP100,SP100,SP20,SP10,SP2,SP2
.
WPHD9999  RETURN
+
.******************************************************************************
.*                                 WAHD0000               Called by: PROC0000 *
.*              Write To & Clear The Admission Header Tempfile                *
.******************************************************************************
WAHD0000  IF        IBCNMHOS=1
            PACK      ADMFACNO,PTHSHSID,SP70
          ELSE
            PACK      ADMFACNO,CFILENO,SP10
          ENDIF
          PACK      LJUSCODE,ADMFACNO,SP100
          MOVE      FIVE,JUSTNO
          CALL      RJUS0000                * Right justify the facility number
          MOVE      RJUSCODE,ADMFACNO
          REP       " 0",ADMFACNO           * Facility number
.
          PACK      ADMEXTPR,STARTDAT,ENDDATE   * Extract period
          MOVE      "00000",ADMNOREC        * No of admssion records extracted
          PACK      ADMEXTID,VERSION,SP10   * Software version no
.
          WRITE     TEMP4D,SEQ;ADMFACNO,ADMEXTPR,ADM,ADMNOREC,ADMEXTID:
                               SP70,SP50,SP10,SP3
.
WAHD9999  RETURN
+
.******************************************************************************
.*                                 WBHD0000               Called by: PROC0000 *
.*               Write To & Clear The Activity Header Tempfile                *
.******************************************************************************
WBHD0000  IF        IBCNMHOS=1
            PACK      ACTFACNO,PTHSHSID,SP70
          ELSE
            PACK      ACTFACNO,CFILENO,SP10
          ENDIF
          PACK      LJUSCODE,ACTFACNO,SP100
          MOVE      FIVE,JUSTNO
          CALL      RJUS0000                * Right justify the facility number
          MOVE      RJUSCODE,ACTFACNO
          REP       " 0",ACTFACNO           * Facility number
.
          PACK      ACTEXTPR,STARTDAT,ENDDATE   * Extract period
          MOVE      "00000",ACTNOREC        * No of activity records extracted
          PACK      ACTEXTID,VERSION,SP10   * Software version no
          WRITE     TEMP5,SEQ;ACTFACNO,ACTEXTPR,ACT,ACTNOREC,ACTEXTID:
                              SP20,SP5
WBHD9999  RETURN
+
.******************************************************************************
.*                                 WNHD0000               Called by: PROC0000 *
.*            Write To & Clear The Mental Health Header Tempfile              *
.******************************************************************************
WNHD0000  IF        IBCNMHOS=1
            PACK      MENFACNO,PTHSHSID,SP70
          ELSE
            PACK      MENFACNO,CFILENO,SP10
          ENDIF
          PACK      LJUSCODE,MENFACNO,SP100
          MOVE      FIVE,JUSTNO
          CALL      RJUS0000                * Right justify the facility number
          MOVE      RJUSCODE,MENFACNO
          REP       " 0",MENFACNO           * Facility number
.
          PACK      MENEXTPR,STARTDAT,ENDDATE   * Extract period
          MOVE      "00000",MENNOREC        * No of mental health rec extracted
          PACK      MENEXTID,VERSION,SP10   * Software version no
          WRITE     TEMP4,SEQ;MENFACNO,MENEXTPR,MEN,MENNOREC,MENEXTID,SP2
WNHD9999  RETURN
+
.******************************************************************************
.*                                 WMHD0000               Called by: PROC0000 *
.*              Write To & Clear The Morbidity Header Tempfile                *
.******************************************************************************
WMHD0000  IF        IBCNMHOS=1
            PACK      MORFACNO,PTHSHSID,SP70
          ELSE
            PACK      MORFACNO,CFILENO,SP10
          ENDIF

          PACK      LJUSCODE,MORFACNO,SP100
          MOVE      FIVE,JUSTNO
          CALL      RJUS0000                * Right justify the facility number
          MOVE      RJUSCODE,MORFACNO
          REP       " 0",MORFACNO           * Facility number
.
          PACK      MOREXTPR,STARTDAT,ENDDATE   * Extract period
          MOVE      "00000",MORNOREC        * No of morbidity records extracted
          PACK      MOREXTID,VERSION,SP10   * Software version no
          WRITE     TEMP6,SEQ;MORFACNO,MOREXTPR,MOR,MORNOREC,MOREXTID:
                              SP50,SP10,SP6
WMHD9999  RETURN
+
.******************************************************************************
.*                                 WPLH0000               Called by: PROC0000 *
.*              Write To & Clear The Palliative Header Tempfile               *
.******************************************************************************
WPLH0000  IF        IBCNMHOS=1
            PACK      PALFACNO,PTHSHSID,SP10
          ELSE
            PACK      PALFACNO,CFILENO,SP10
          ENDIF
          PACK      LJUSCODE,PALFACNO,SP100
          MOVE      FIVE,JUSTNO
          CALL      RJUS0000                * Right justify the facility number
          MOVE      RJUSCODE,PALFACNO
          REP       " 0",PALFACNO           * Facility number
.
          PACK      PALEXTPR,STARTDAT,ENDDATE   * Extract period
          MOVE      "00000",PALNOREC        * No of morbidity records extracted
          PACK      PALEXTID,VERSION,SP10   * Software version no
.
          WRITE     TEMP7,SEQ;PALFACNO,PALEXTPR,PAL,PALNOREC,PALEXTID
.
WPLH9999  RETURN
+
.******************************************************************************
.*                                 WDHD0000               Called by: PROC0000 *
.*              Write To & Clear The DVA Header Tempfile                      *
.******************************************************************************
WDHD0000  IF        IBCNMHOS=1
            PACK      DVAFACNO,PTHSHSID,SP70
          ELSE
            PACK      DVAFACNO,CFILENO,SP10
          ENDIF

          PACK      LJUSCODE,DVAFACNO,SP100
          MOVE      FIVE,JUSTNO
          CALL      RJUS0000                * Right justify the facility number
          MOVE      RJUSCODE,DVAFACNO
          REP       " 0",DVAFACNO           * Facility number
.
          PACK      DVAEXTPR,STARTDAT,ENDDATE   * Extract period
          MOVE      "00000",DVANOREC        * No of morbidity records extracted
          PACK      DVAEXTID,VERSION,SP10   * Software version no
.
          WRITE     TEMP8,SEQ;DVAFACNO,DVAEXTPR,DVA,DVANOREC,DVAEXTID,SP5
.
WDHD9999  RETURN
+
.******************************************************************************
.*                                 WSHD0000               Called by: PROC0000 *
.*              Write To & Clear The SNAP Header Tempfile                     *
.******************************************************************************
WSHD0000  IF        IBCNMHOS=1
            PACK      SNPFACNO,PTHSHSID,SP70
          ELSE
            PACK      SNPFACNO,CFILENO,SP10
          ENDIF
          PACK      LJUSCODE,SNPFACNO,SP100
          MOVE      FIVE,JUSTNO
          CALL      RJUS0000                * Right justify the facility number
          MOVE      RJUSCODE,SNPFACNO
          REP       " 0",SNPFACNO           * Facility number
.
          PACK      SNPEXTPR,STARTDAT,ENDDATE   * Extract period
          MOVE      "00000",SNPNOREC        * No of morbidity records extracted
          PACK      SNPEXTID,VERSION,SP10   * Software version no
.
          WRITE     TEMP9A,SEQ;SNPFACNO,SNPEXTPR,SNP,SNPNOREC,SNPEXTID:
                              SP10,SP9,SP10,SP2
WSHD9999  RETURN
+
.******************************************************************************
.*                                 CLRH0000               Called by: PROC0000 *
.*                      Clear Header Tempfile Variables                       *
.******************************************************************************
CLRH0000  MOVE      ANSF,HEADERF
          PACK      FILETYPE,SP3
          MOVE      ANSN,RECORDN
          MOVE      "00000",NEWRECS
          MOVE      ANSA,RECORDA
          MOVE      "00000",ADMRECS
          MOVE      ANSD,RECORDD
          MOVE      "00000",DELRECS
CLRH9999  RETURN
+
.******************************************************************************
.*                                 CLRP0000               Called by: PROC0000 *
.*                     Clear Patient Tempfile Variables                       *
.******************************************************************************
CLRP0000  MOVE      ANSN,PATRECID
          MOVE      "000000000000",PATUNQNO
          MOVE      "00000000",PATURNO
          MOVE      "000000000000",PATADMNO
          PACK      PATSURN,SP30
          PACK      PATFIRST,SP20
          PACK      PATSECND,SP20
          PACK      PATADD,SP50
          PACK      PATSUBRB,SP50
          MOVE      "0989",PATPOST
          MOVE      "9",PATSTATE
          PACK      PATSLAUR,SP4
          MOVE      "3",PATSEX
          CLEAR     PATDOB
          APPEND    "19700615",PATDOB
          RESET     PATDOB
          PACK      PATDOBEF,SP1
          MOVE      "9",PATMARST
          MOVE      "0000",PATCOBTH
          MOVE      "9",PATINDST
          PACK      PATLANCD,SP2
          PACK      PATOCCUP,SP4
          PACK      PATEMPST,SP1
          MOVE      "9",PATMEDEL
          PACK      PATMEDNO,SP10
          PACK      PATAUSSI,SP1
          PACK      PATCONTC,SP1
          PACK      PATMEREF,SP1
          PACK      XPHONEHM,SP70
          PACK      XPHONEBS,SP70
          PACK      XPHONEPR,SP70
CLRP9999  RETURN
+
.******************************************************************************
.*                                 CLRA0000               Called by: PROC0000 *
.*                     Clear Admission Tempfile Variables                     *
.******************************************************************************
CLRA0000  MOVE      ANSN,ADMRECID
          MOVE      "000000000000",ADMUNQNO
          MOVE      "00000000",ADMURNO
          MOVE      "000000000000",ADMADMNO
          PACK      ADMADDTE,SP8
          MOVE      "0000",ADMADTME
          PACK      ADMACCLS,SP20
          MOVE      " ",ADMCHRST
          MOVE      "00",ADMTYPEP
          MOVE      "8",ADMCOMPS
          PACK      ADMBAND,SP2
          MOVE      "  ",ADMSOREF
          PACK      ADMTRNFF,SP5
          MOVE      "8",ADMHOSIN
          PACK      ADMSPDTE,SP8
          MOVE      "0000",ADMSPTME
          MOVE      "19",ADMOFSEP
          PACK      ADMTRNTF,SP5
          PACK      ADMDRG,SP5
          PACK      ADMMDC,SP3
          PACK      ADMADWGT,SP4
          PACK      ADMADWRD,SP6
          PACK      ADMADUNT,SP4
          PACK      ADMSWUCD,SP4
          PACK      ADMTRDOC,SP6
          PACK      ADMPLSDY,SP1
          PACK      ADMEVPTS,SP1
          PACK      ADMQSTAT,SP1
          MOVE      SP4,ADMWRDCD
          MOVE      SP1,ADMCONTR
          MOVE      SP1,ADMCONTT
          PACK      ADMFNDSC,SP2
          PACK      ADMINCDT,SP8
          UNPACK    SP8,ADMINCFG,ADMWCQLD,ADMMAIC,ADMDVA,ADMDOD
          UNPACK    SP70,ADMPREFL
          UNPACK    SP70,ADMINTRQ
          UNPACK    SP70,ADMRELGN
          UNPACK    SP70,ADMQASN
          UNPACK    SP70,CONTHOSP
          UNPACK    SP70,FILLER
          UNPACK    SP70,ICUHHMM
          UNPACK    SP70,VENTHHMM
CLRA9999  RETURN
+
.******************************************************************************
.*                                 CLRB0000               Called by: PROC0000 *
.*                     Clear Activity Tempfile Variables                      *
.******************************************************************************
CLRB0000  MOVE      ANSN,ACTRECID
          MOVE      "000000000000",ACTUNQNO
          MOVE      "00000000",ACTURNO
          MOVE      "000000000000",ACTADMNO
.
          MOVE      ANSA,ACTCODEA
          MOVE      ANSB,ACTCODEB
          PACK      ACTACCLS,SP20
          MOVE      "0",ACTCHRST
          PACK      ACTCOMPS,SP1            * Space fill for private hospitals
          PACK      ACTBAND,SP2
          PACK      ACTCHDTE,SP8
          MOVE      "0000",ACTCHTME
.
          MOVE      ANSC,ACTCODEC
          PACK      ACTDTSCL,SP8
          PACK      ACTDTRCL,SP8
          PACK      ACTFACCT,SP5
.
          MOVE      ANSL,ACTCODEL
          PACK      ACTDTESL,SP8
          MOVE      "0000",ACTTMESL
          PACK      ACTDTERL,SP8
          MOVE      "0000",ACTTMERL
.
          MOVE      ANSQ,ACTCODEQ
          PACK      ACTQSTAT,SP1
.
          MOVE      ANST,ACTCODET
          MOVE      "NHT",ACTNHFLG
.
          MOVE      ANSW,ACTCODEW
          PACK      ACTWARD,SP6
          PACK      ACTUNIT,SP4
          PACK      ACTSWUCD,SP4
          MOVE      SP4,ACTWRDCD
.
          MOVE      ANSS,ACTCODES
          PACK      ACTSEPNO,SP70
          PACK      ACTSADTY,SP70
          PACK      ACTSADST,SP70
          PACK      ACTSADSC,SP70
          PACK      ACTSADDT,SP70
          PACK      ACTSADTM,SP70
          PACK      ACTSPHTY,SP70
          PACK      ACTMOTHU,SP70
.
CLRB9999  RETURN
+
.******************************************************************************
.*                                 CLRN0000               Called by: PROC0000 *
.*                  Clear Mental Health Tempfile Variables                    *
.******************************************************************************
CLRN0000  MOVE      ANSN,MENRECID
          MOVE      "000000000000",MENUNQNO
          MOVE      "00000000",MENURNO
          MOVE      "000000000000",MENADMNO
          MOVE      SP1,MENTUACM
          MOVE      SP1,MENEMPST
          MOVE      SP1,MENPENST
          MOVE      SP1,MENPLMST
          MOVE      SP2,MENRTFCE
          MOVE      SP1,MENLGSID
          MOVE      SP1,MENPSNAT
CLRN9999  RETURN
+
.******************************************************************************
.*                                 CLRM0000               Called by: PROC0000 *
.*                    Clear Morbidity Tempfile Variables                      *
.******************************************************************************
CLRM0000  MOVE      ANSN,MORRECID
          MOVE      "000000000000",MORUNQNO
          MOVE      "00000000",MORURNO
          MOVE      "000000000000",MORADMNO
          PACK      MORDICID,SP3
          PACK      MORICDC,SP7
          PACK      MORICDD,SP50
          PACK      MORPRODT,SP8
          PACK      MORCONFG,SP1
          PACK      MORONSET,SP1
          PACK      MORMRINT,SP1
          PACK      MOROCOMI,SP1
          PACK      MORBDCID,SP70
CLRM9999  RETURN
+
.******************************************************************************
.*                                 CLR70000               Called by: PROC0000 *
.*                     Clear Palliative Tempfile Variables                    *
.******************************************************************************
CLR70000  MOVE      ANSN,PALRECID
          MOVE      "000000000000",PALUNQNO
          MOVE      "00000000",PALURNO
          MOVE      "000000000000",PALADMNO
          MOVE      SP10,PALFIRST
          MOVE      ONE,PALPNONA
CLR79999  RETURN
+
.******************************************************************************
.*                                 CLR80000               Called by: PROC0000 *
.*                     Clear DVA Tempfile Variables                           *
.******************************************************************************
CLR80000  MOVE      ANSN,DVARECID
          MOVE      "000000000000",DVAUNQNO
          MOVE      "00000000",DVAURNO
          MOVE      "000000000000",DVAADMNO
          MOVE      SP10,DVACNUMB
          MOVE      SP10,DVACTYPE
CLR89999  RETURN
+
.******************************************************************************
.*                                 CLR90000               Called by: PROC0000 *
.*                     Clear SNP Tempfile Variables                           *
.******************************************************************************
CLR90000  MOVE      ANSN,SNPRECID
          MOVE      "000000000000",SNPUNQNO
          MOVE      "00000000",SNPURNO
          MOVE      "000000000000",SNPADMNO
          MOVE      SP10,SNPEPSNO
          MOVE      SP10,SNPTYPE 
          MOVE      SP10,SNPGRPCL
          MOVE      SP10,SNPSTDTE
          MOVE      SP10,SNPENDTE
          MOVE      SP10,SNPMCPFL
          MOVE      SP70,SNPMCPDT
          MOVE      SP70,SNPPPRSV
          MOVE      SP70,SNPIMPCD
          MOVE      SP70,SNPCLASO
CLR99999  RETURN
+
.******************************************************************************
.*                                 WHED0000               Called by: PROC0000 *
.*                       Write To The Header Tempfile                         *
.******************************************************************************
WHED0000  MOVE      ONE,FORM1
          REPEAT
            LOAD      FILETYPE,FORM1,PAT,ADM,MEN,ACT,MOR,PAL,DVA,SNP  * File typ
            LOAD      NEWRECS,FORM1,PATNOREC,ADMNOREC,MENNOREC,ACTNOREC,MORNOREC,PALNOREC,DVANOREC,SNPNOREC
            REP       " 0",NEWRECS          * Number of new records
            WRITE     TEMP1,SEQ;HEADERF,FILETYPE,RECORDN,NEWRECS,RECORDA:
                                ADMRECS,RECORDD,DELRECS,SP8
            ADD       ONE,FORM1
          UNTIL     FORM1>=9
WHED9999  RETURN
+
.******************************************************************************
.*                                 WPAT0000               Called by: PROC0000 *
.*                       Write To The Patient Tempfile                        *
.******************************************************************************
WPAT0000  PACK      PATUNQNO,SP4,ADMIN,SP10
          REP       " 0",PATUNQNO           * Unique number / admission number
          PACK      PATURNO,URNO,SP10
          REP       " 0",PATURNO            * U/R number
          PACK      PATADMNO,SP4,ADMIN,SP10
          REP       " 0",PATADMNO           * Admssion number
          PACK      PATSURN,PSNAME,SP70
          PACK      PATFIRST,PGNAME,SP70
          PACK      PATSECND,SP70
          PACK      XPHONEHM,PTELEP,SP70
          PACK      XPHONEBS,PTELEB,SP70
          PACK      XPHONEPR,SP70
.
          PACK      PATADD,PADD1,SP30        * 1st address line
          COMPARE   ONE,CNSWLOC
          GOTO      WPAT0200 IF EQUAL        * try suburb first
.
          PACK      PATSUBRB,PADD2,SP30,SP10 * 2nd address line
          MATCH     SP25,PADD2
          IF        @EQUAL
            PACK      PATSUBRB,PSUBRB,SP30,SP10   * Suburb
            MATCH     SP15,PSUBRB
            IF        @EQUAL
              MATCH     SP4,PPOST
              IF        !@EQUAL
                PACK      KEY56,PPOST,SP70        * use postcode to get suburb
                CALL      RSIBPOS1
                CALL      RKIBPOS1
                BRANCH    OVRCD,WPAT1000
                MATCH     PPOST,IBPOPCOD          * same postcode ?
                GOTO      WPAT1000 IF NOT EQUAL   * no.
                PACK      PATSUBRB,IBPOSUBR,SP30,SP10   * Suburb
              ENDIF
            ENDIF
          ENDIF
          GOTO      WPAT1000
.
WPAT0200  PACK      PATSUBRB,PSUBRB,SP30,SP10   * Suburb
          MATCH     SP15,PSUBRB
          IF        @EQUAL
            PACK      PATSUBRB,PADD2,SP30,SP10 * 2nd address line
            MATCH     SP25,PADD2
            IF        @EQUAL
              MATCH     SP4,PPOST
              IF        !@EQUAL
                PACK      KEY56,PPOST,SP70        * use postcode to get suburb
                CALL      RSIBPOS1
                CALL      RKIBPOS1
                BRANCH    OVRCD,WPAT1000
                MATCH     PPOST,IBPOPCOD          * same postcode ?
                GOTO      WPAT1000 IF NOT EQUAL   * no.
                PACK      PATSUBRB,IBPOSUBR,SP30,SP10   * Suburb
              ENDIF
            ENDIF
          ENDIF
.
WPAT1000  STRIP     PPOST
          RESET     PPOST
          TYPE      PPOST
          IF        @EQUAL
            PACK      PATPOST,PPOST,SP5
            REP       " 0",PATPOST          * Postcode
.
            MOVE      PPOST,KEY1
            MOVE      KEY1,FORM1
            LOAD      PATSTATE,FORM1,ONE,ONE,TWO,THREE,FOUR,FIVE,SIX,TWO,THREE
.                                    NSW NSW VIC QLD   SA   WA   TAS VIC QLD
.                         Postcode   1   2   3   4     5    6    7   8   9
            MOVE      PPOST,FORM4
            IF        FORM4>0800 & FORM4<0899
              MOVE      SEVEN,PATSTATE      * NT
            ENDIF
            IF        (FORM4>2600 & FORM4<2639) | (FORM4>2900 & FORM4<2920) | (FORM4>0200 & FORM4<0299)
              MOVE      EIGHT,PATSTATE      * ACT
            ENDIF
          ENDIF
.
          MATCH     "93",PPOST
          IF        @EQUAL
            MOVE      ZERO,PATSTATE         * Overseas (CAR 303619)
          ENDIF
.
          MATCH     "9799",PPOST
          IF        @EQUAL
            MOVE      NINE,PATSTATE         * At sea
          ENDIF
.
          MATCH     "9989",PPOST
          IF        @EQUAL
            MOVE      NINE,PATSTATE         * No fixed address
          ENDIF
.
          PACK      KEY4,PPOST,SP4
          CALL      RDCATC1
          BRANCH    OVRCD,WPAT2000
.
          MOVE      SP70,PATSLAUR       * Statistical local area of usual 
                                        * residential address  
.
WPAT2000  MOVE      PSEX,PATSEX
          REP       "M1F2U3I3R3",PATSEX       * Sex                    *C-54636
          UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
          PACK      PATDOB,CCENT,CYEAR,CMON,CDAY
          REP       " 0",PATDOB             * DOB
.
          MATCH     SP3,PMSTAT
          IF        !@EQUAL
            PACK      KEY5,CODEM,PMSTAT
            CALL      RDCODE1               * Read the patient codes file
            IF        OVRCD<>1
              MOVE      THCSCOD,PATMARST
              REP       " 0",PATMARST       * Martial status
            ENDIF
          ENDIF
.
          MATCH     SP3,PCONT
          IF        !@EQUAL
            PACK      KEY5,CODEC,PCONT
            CALL      RDCODE1               * Read the patient codes file
            IF        OVRCD<>1
              UNPACK    TCFORM6,DIM2,PATCOBTH
              REP       " 0",PATCOBTH
            ENDIF
          ENDIF
.
          MOVE      CODEVA,TCODE
          MOVE      PMVXABRG,ACODE
          MOVE      "9",PATAUSSI            * Default to Uknown
          MATCH     SP3,ACODE
          IF        !@EQUAL
            PACK      KEY5,TCODE,ACODE
            CALL      RDCODE1               * Read the patient codes file
            IF        OVRCD<>1
              MOVE      THCSCOD,PATINDST
              REP       " 0",PATINDST       * Indigenous Status
              MOVE      TCINDC1,PATAUSSI    * Aust. Sth Sea Islander status
            ENDIF
          ENDIF
.
          MATCH     SP3,PTYPE
          IF        !@EQUAL
            PACK      KEY5,CODET,PTYPE
            CALL      RDCODE1               * Read the patient codes file
            IF        OVRCD<>1
              MOVE      THCSCOD,PATMEDEL
              REP       " 0",PATMEDEL       * Medicare eligibility
            ENDIF
          ENDIF
          REP       " 9",PATMEDEL       * Medicare eligibility
.
          RESET     PMEDI
          PACK      PATMEDNO,PMEDI,SP10
.
          SQUEEZE   PTMXMCCD
          MATCH     SP2,PTMXMCCD
....CAR 44642 rebound
          IF        !@EQUAL
            PACK      PATMEREF,PTMXMCCD     * Medicare Reference No
          ELSE
            MATCH       SP10,PMEDI
            IF          !@EQUAL
              MOVE        "0",PATMEREF
            ELSE
              PACK        PATMEREF,PTMXMCCD     * Medicare Reference No
            ENDIF
          ENDIF
.
          PACK      PATDOBEF,PMPXEDOB,SP70
          REP       "0 ",PATDOBEF
.
          WRITE     TEMP2D,SEQ;PATRECID,PATUNQNO,PATURNO,PATADMNO,PATSURN:
                                PATFIRST,PATSECND,PATADD,PATSUBRB,PATPOST:
                                PATSTATE,PATSLAUR,PATSEX,PATDOB,PATDOBEF:
                                PATMARST,PATCOBTH,PATINDST,PATLANCD,PATOCCUP:
                                PATEMPST,PATMEDEL,PATMEDNO,PATMEREF,PATAUSSI:
                                PATCONTC,XPHONEHM,XPHONEBS,XPHONEPR
.
 
          ADD       ONE,PATCOUNT
WPAT9999  RETURN
+
.******************************************************************************
.*                                 WADM0000               Called by: PROC0000 *
.*                      Write To The Admission Tempfile                       *
.******************************************************************************
WADM0000  PACK      ADMUNQNO,SP4,ADMIN,SP10
          REP       " 0",ADMUNQNO           * Unique number / admission number
          PACK      ADMURNO,URNO,SP10
          REP       " 0",ADMURNO            * U/R number
          PACK      ADMADMNO,SP4,ADMIN,SP10
          REP       " 0",ADMADMNO           * Admission number
.
          PACK      ADMADDTE,ADATE
          REP       " 0",ADMADDTE           * Admission date
          UNPACK    ATIME,CHOUR,KEY1,CMIN,KEY3
          PACK      ADMADTME,CHOUR,CMIN
          REP       " 0",ADMADTME           * Admission time
.
          PACK      KEY30,AADMNO,SP30
          CALL      RDSTRAN2                * Position read on the transfer
          CALL      RDKTRAN2                  file to get the admission record
          BRANCH    OVRCD,WADM0100
.
          MATCH     DAADMNO,DTADMN
          GOTO      WADM0100 IF NOT EQUAL
.
          MATCH     ANSA,TMOVE          * Check if the admission record
          GOTO      WADM0100 IF NOT EQUAL
.
          MATCH     SP3,TRBTYP
          GOTO      WADM0100 IF EQUAL
.
          PACK      KEY5,CODEBT,TRBTYP
          CALL      RDCODE1         * Read the patients code file
          IF        OVRCD<>1
            MATCH     SP1,ADMCHRST
            IF        @EQUAL
              MATCH     "1",THCSCOD
              IF        @EQUAL
                PACK      ADMCHRST,TWO
              ELSE
                MOVE      THCSCOD,ADMCHRST
                REP       " 0",ADMCHRST * Admission chargeable status
              ENDIF
            ENDIF
          ENDIF
          PACK      ADMADWRD,TWARD,SP6 * Admission ward
          PACK      ADMADUNT,TBED,SP4 * Admission bed

          CALL      GSWC0000          * Get standard ward code
          MOVE      STDWRDCD,ADMWRDCD

          CALL      GQST0000          * Get admission qualification status
          IF        EXIT = 0
            MOVE      TCINDC2,ADMQSTAT  * qualification status
          ENDIF
.
WADM0100  LOAD      TCODE,PTCNQLDB,CODED1,CODED2,CODED3,CODED4,CODED5,CODEA:
                          CATCC
          LOAD      ACODE,PTCNQLDB,DUSD1,DUSD2,DUSD3,DUSD4,DUSD5,ATYPE,ACARE
          MATCH     SP3,ACODE
          IF        !@EQUAL
            PACK      KEY5,TCODE,ACODE
            CALL      RDCODE1               * Read the patient codes file
            IF        OVRCD<>1
              UNPACK    THCSCOD,KEY2,DIM2
              MOVE      KEY2,ADMTYPEP
              MATCH     ADATE,DDATE
              IF        @EQUAL
                MOVE      DIM2,ADMBAND      * Admission banding
              ENDIF
            ENDIF
          ENDIF
          REP       " 0",ADMTYPEP           * Admission care type
.
          MATCH     SP3,ACLAIM
          IF        !@EQUAL
            PACK      KEY5,CODECL,ACLAIM
            CALL      RDCODE1               * Read the patient codes file
            IF        OVRCD<>1
              MOVE      THCSCOD,ADMCOMPS    * Admission compensable status
              MATCH     "1",ADMCOMPS                                   *I-60903
              IF        @LESS
                MOVE      "Invalid Compensable Status",ERRDESC         *I-60903
                CALL      PRINTERR                                     *I-60903
              ENDIF                                                    *I-60903
              MATCH     ANSP,TCINDC9
              IF        @EQUAL
                MOVE      "1",ADMCHRST
              ENDIF
            ENDIF
          ENDIF
.
WADM0800  MOVE      ZERO,FORM2
          MATCH     SP3,ASRCE
          IF        !@EQUAL
            PACK      KEY5,CODES,ASRCE
            CALL      RDCODE1               * Read codes file - Cat."S "
            IF        OVRCD<>1
              UNPACK    THCSCOD,KEY2,DIM2
              MOVE      KEY2,FORM2
              MOVE      FORM2,ADMSOREF      * Admission source of referral
              REP       " 0",ADMSOREF
            ENDIF
          ENDIF
.   don't send banding for statistical admissions CAR 312827
          MATCH       "06",ADMSOREF
          IF          @EQUAL
            MOVE        SP70,ADMBAND      * Admission banding
          ENDIF
.
.                                                                     *C-147728
          PACK      ADMQASN,PMVXQASN,SP70   * load QLD Ambulance No.
.
.             If the source of referral is QLD Ambulance (TCINDC1 = "A"),
.             check that the QLD Ambulance number (pmvxqasn) is not blank
.
          MATCH     SP3,PMVXSTRA                                      *I-147728
          IF        !@EQUAL
            PACK      KEY5,CODESI,PMVXSTRA
            CALL      RDCODE1               * Read codes file - Cat."SI"
            IF        OVRCD<>1
              MATCH     ANSA,TCINDC1
              IF        @EQUAL
                MATCH     SP12,PMVXQASN
                IF        @EQUAL
                  MOVE      "Missing QLD Ambulance Number",ERRDESC
                  CALL      PRINTERR
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
WADM1000  PACK      KEY8,ADMIN
          CALL      RDPTDAD1                * Read the admin/disch transfer
.                                             destination file
          IF        OVRCD<>1
            MATCH     "04",ADMSOREF
            GOTO      WADM2000 IF EQUAL     * Set up transfer from facility
.
            MATCH     "11",ADMSOREF
            GOTO      WADM2000 IF EQUAL     * Set up transfer from facility
.
            MATCH     "13",ADMSOREF
            GOTO      WADM2000 IF EQUAL     * Set up transfer from facility
.
            MATCH     "16",ADMSOREF
            GOTO      WADM2000 IF EQUAL     * Set up transfer from facility
.
            MATCH     "23",ADMSOREF
            GOTO      WADM2000 IF EQUAL     * Set up transfer from facility
.
            MATCH     "24",ADMSOREF
            GOTO      WADM2000 IF EQUAL     * Set up transfer from facility
.
            MATCH     "25",ADMSOREF
            GOTO      WADM2000 IF EQUAL     * Set up transfer from facility
          ENDIF
          GOTO      WADM3000
.
WADM2000  PACK      KEY5,PTDAADTS,SP70
          CALL      RDPTVAD1
          IF        OVRCD=1
            MOVE      PTDAADTS,KEY5
          ELSE
            MATCH     SP70,PTVANHSC
            IF        !@EQUAL
              MOVE      PTVANHSC,KEY5      * Valid transfer source
            ELSE
              MOVE      PTVACODE,KEY5      * Valid transfer source
            ENDIF
          ENDIF
          CALL      STRP0000                * Strip off blank char
          MOVE      KEY5,ADMTRNFF
          REP       " 0",ADMTRNFF           * Transfer from facility
.
WADM3000  PACK      KEY14,AFUNDH,AFNDTB
          CALL      RDFUND1                 * Read the health fund file
          IF        OVRCD<>1
            MOVE      "7",ADMHOSIN          * Hospital insurance
          ELSE
            MOVE      "9",ADMHOSIN          * hospital insuranc unknown
          ENDIF
.
          MATCH     KEY14,SP20
          IF        @EQUAL
            MOVE      "8",ADMHOSIN          * no hospital insurance 
          ENDIF
.
          PACK      ADMSPDTE,DDATE
          REP       " 0",ADMSPDTE           * Discharge date
          UNPACK    DTIME,CHOUR,KEY1,CMIN,KEY3
          PACK      ADMSPTME,CHOUR,CMIN
          REP       " 0",ADMSPTME           * Discharge time
.
          MOVE      CODEDD,TCODE
          MOVE      DDEST,ACODE
          LOAD      TCODE,PTCNDTRF,CODED
          LOAD      ACODE,PTCNDTRF,DSTAT
          MATCH     SP3,ACODE
          IF        !@EQUAL
            PACK      KEY5,TCODE,ACODE
            CALL      RDCODE1               * Read the patient codes file
            IF        OVRCD<>1
              MOVE      THCSCOD,ADMOFSEP
              REP       " 0",ADMOFSEP       * Seperation mode
            ENDIF
          ENDIF
.
          PACK      KEY8,ADMIN
          CALL      RDPTDAD1                * Read the admin/disch transfer
.                                             destination file
          IF        OVRCD<>1
            MATCH     "02",ADMOFSEP
            GOTO      WADM4000 IF EQUAL     * Set up transfer to facility
.
            MATCH     "10",ADMOFSEP
            GOTO      WADM4000 IF EQUAL     * Set up transfer to facility
.
            MATCH     "11",ADMOFSEP
            GOTO      WADM4000 IF EQUAL     * Set up transfer to facility
.
            MATCH     "12",ADMOFSEP
            GOTO      WADM4000 IF EQUAL     * Set up transfer to facility
.
            MATCH     "15",ADMOFSEP
            GOTO      WADM4000 IF EQUAL     * Set up transfer to facility
.
            MATCH     "16",ADMOFSEP
            GOTO      WADM4000 IF EQUAL     * Set up transfer to facility
.
            MATCH     "21",ADMOFSEP
            GOTO      WADM4000 IF EQUAL     * Set up transfer to facility
.
          ENDIF
          GOTO      WADM5000
.
WADM4000  PACK      KEY5,PTDADCTS,SP70
          CALL      RDPTVAD1
          IF        OVRCD=1
            MOVE      PTDADCTS,KEY5
          ELSE
            MATCH     SP70,PTVANHSC
            IF        !@EQUAL
              MOVE      PTVANHSC,KEY5      * Valid transfer source
            ELSE      
              MOVE      PTVACODE,KEY5      * Valid transfer source
            ENDIF     
          ENDIF
          CALL      STRP0000                * Strip off blank char
          MOVE      KEY5,ADMTRNTF
          REP       " 0",ADMTRNTF           * Transfer to facility
.
WADM5000  CALL     GETDRG
          MOVE     SP70,ADMDRG
          MOVE     SP70,ADMMDC
.
          TYPE     ABWGHT
          IF       @EQUAL
            MATCH    "     0",ABWGHT
            IF       !@EQUAL
              UNPACK   ABWGHT,DIM2,DIM4
              MOVE     DIM4,FORM4
              PACK     AGEDATE,ADATE
              CALL     CALCAGE              * Calculate age as at admin date
              IF       PSAGEDAY<=28 | FORM4<=2500
                PACK     ADMADWGT,DIM4,SP5
                REP      " 0",ADMADWGT      * Admission weight
              ENDIF
            ENDIF
          ENDIF
.
          PACK      KEY6,ADOCTA,SP6
          CALL      RDDOCT1                 * Read the doctors file
          IF        OVRCD<>1
            MATCH     SP3,DRTYPE
            IF        !@EQUAL
              PACK      KEY5,CODEDT,DRTYPE
              CALL      RDCODE1             * Read the codes file
              IF        OVRCD<>1
                MOVE      THCSCOD,ADMSWUCD  * Admssion admitting ward/unit code
                CALL      CWUC0000          * Check the ward/unit code
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP3,ACLSS
          IF        !@EQUAL
            PACK      KEY5,CODEP,ACLSS
            CALL      RDCODE1               * Read the patient codes file
            IF        OVRCD<>1
              MATCH     THCSCOD,ANSN
              IF        @EQUAL
                MOVE      THCSCOD,ADMPLSDY  * Admission planned sameday flag
              ENDIF
              MATCH     THCSCOD,ANSY
              IF        @EQUAL
                MOVE      THCSCOD,ADMPLSDY  * Admission planned sameday flag
              ENDIF
            ENDIF
          ELSE
            PACK      KEY5,CODEP,SP3
            CALL      RDCODE1               * Read patient codes file
            MOVE      THCSCOD,ADMPLSDY      * Admission planned sameday flag
          ENDIF
.
WADM5500  PACK      KEY8,ADMIN                  * moved from below     *M-54636
          CALL      RDPMVX11                * Read visit extn. file    *M-54636
.
          LOAD      ELPSCODE,PTCNELPS,AUSR1,AUSR2,AUSR3,AUSR4,AUSR5:
                                      AUSR6,AUSR7,PTMIUS08,PTMIUS09:
                                      PTMIUS10,PTMIUS11,ACARE,ACLSS:
                                      PMVXCADM                         *I-54636
.
          LOAD      ELPSCAT,PTCNELPS,CODEU1,CODEU2,CODEU3,CODEU4,CODEU5:
                                     CODEU6,CODEU7,CODEU8,CODEU9,CODEV1:
                                     CODEV2,CODECC,CODEP,CODEVB        *C-54636
.
          MATCH     SP3,PMVXELPS
          GOTO      WADM6000 IF EQUAL
.
          MOVE      "KC",TCODE
          PACK      KEY5,TCODE,PMVXELPS
          CALL      RDCODE1               * Read the codes file
          IF        OVRCD<>1
            MOVE      TCINDC1,ADMEVPTS    * Admission elective patient status
          ENDIF
          GOTO      WADM6100
.
WADM6000  MATCH     SP3,ELPSCODE
          IF        !@EQUAL
            PACK      KEY5,ELPSCAT,ELPSCODE,SP70
            CALL      RDCODE1               * Read the codes file
            IF        OVRCD<>1
              MOVE      TCINDC1,ADMEVPTS    * Admission elective patient status
            ENDIF
          ENDIF
.
. ----- Get the paticuaf details -----
.
WADM6100  MOVE      SP70,ICUHHMM
          MOVE      SP70,VENTHHMM
.
          PACK      KEY8,AADMNO,SP70
          CALL      RDPTICU1
          IF        OVRCD = 0
            MOVE      ZERO,F2
            MOVE      PTICINTM,F2 
            IF        PTICUINT>0|F2>0
              PACK      ICUHHMM,PTICUINT,PTICINTM,SP70 * ICU
              REP       " 0",ICUHHMM
            ENDIF
            MOVE      ZERO,F2
            MOVE      PTICMECM,F2 
            IF        PTICUMEC>0|F2>0
              PACK      VENTHHMM,PTICUMEC,PTICMECM,SP70 * Ventilator
              REP       " 0",VENTHHMM
            ENDIF
          ENDIF
.
. ***** only send icu hours if site has selected that they have an ******
. ***** approved intensive care unit ******
          MATCH     ANSY,SENDICU
          IF        !@EQUAL
            MOVE      SP70,ICUHHMM
          ENDIF
.
WADM6120  PACK      KEY25,AADMNO,SP70
          CALL      RSPTASF1
          CALL      RKPTASF1
          MATCH     PTAFADMN,AADMNO
          IF        @EQUAL
            MOVE      PTAFCROL,ADMCONTR
            MOVE      PTAFCTYP,ADMCONTT
          ENDIF
.
          MOVE      ZERO,F1
          MOVE      ADMCONTT,F1
          IF        F1<1 | F1>5
            GOTO      WADM6200
          ENDIF
.
. **** only send for contract type 1 if contract role=B
          IF        F1=1
            MATCH     ANSB,ADMCONTR
            GOTO      WADM6200 IF NOT EQUAL
          ENDIF
.
          MATCH     ANSA,ADMCONTR
          GOTO      WADM6150 IF EQUAL
.
          MATCH     ANSB,ADMCONTR
          GOTO      WADM6200 IF NOT EQUAL
.
WADM6150  PACK      CONTHOSP,PTAFCSID,SP70
          PACK      KEY5,PTAFCSID,SP70
          CALL      RDPTVAD1
          IF        OVRCD<>1
            MATCH     SP70,PTVAESTB
            IF        !@EQUAL
              PACK      CONTHOSP,PTVAESTB
            ENDIF
          ENDIF
.
          MATCH     SP70,CONTHOSP
          IF        @EQUAL
            MOVE      "Contracting Hospital Required",ERRDESC
            CALL      PRINTERR
          ENDIF
.
. Assign Elective Patient Status 3 for Statistical Referral Source
WADM6200  MATCH     "06",ADMSOREF
          GOTO      WADM6225 IF NOT EQUAL
          MOVE      "3",ADMEVPTS
          GOTO      WADM6300
.
. Elective Patient Status 3 not valid if Referral Source not 06,09
WADM6225  MATCH     "09",ADMSOREF
          GOTO      WADM6300 IF NOT EQUAL
.
WADM6250  MATCH     "3",ADMEVPTS  
          IF        !@EQUAL
            MOVE      "Episode with admission source of ",ERRDESC
            ENDSET    ERRDESC
            APPEND    ADMSOREF,ERRDESC
            APPEND    " should have an elective status of",ERRDESC
            APPEND    " not assigned",ERRDESC
            RESET     ERRDESC
            CALL      PRINTERR
          ENDIF
.
WADM6300  MATCH     "19",ADMSOREF
          GOTO      WADM6500 IF NOT EQUAL
.
          MATCH     "3",ADMEVPTS
          IF        !@EQUAL
            MOVE      "Elective status should not be assigned to ",ERRDESC
            ENDSET    ERRDESC
            APPEND    "patients returning for a routine readmission.",ERRDESC
            RESET     ERRDESC
            CALL      PRINTERR
          ENDIF
.
WADM6500  MATCH     "1",ADMCHRST
          IF        @EQUAL
            MATCH     SP8,ADMCONTR
            IF        @EQUAL
              MOVE   "Chargeable status = Public, Blank contract status",ERRDESC
              CALL      PRINTERR
            ENDIF
            MATCH     SP8,ADMCONTT
            IF        @EQUAL
              MOVE   "Chargeable status = Public, Blank contract type",ERRDESC
              CALL      PRINTERR
            ENDIF
          ENDIF
.
.   Check on Source of Reference HDP 
.
WADM7000  MOVE      ZERO,EXIT
          CALL      CHKSRC00         * Check for invalid source of referral
.
.  Separation Mode
.
WADM7500  MOVE      ZERO,EXIT
          CALL      CHKSEP00                * Check Separation Mode    *I-61341
.
          MATCH     SP3,ACLAIM
          IF        !@EQUAL
            PACK      KEY5,CODECL,ACLAIM
            CALL      RDCODE1               * Read the patient codes file
            IF        OVRCD<>1
              UNPACK    THCSCOD,DIM1,ADMFNDSC     * Fundinc Source     *I-60903
              MATCH     SP2,ADMFNDSC
              IF        @EQUAL
                MOVE      "Missing Funding Source code",ERRDESC
                CALL      PRINTERR
              ENDIF
.
              MATCH     "10",ADMFNDSC
              IF        @EQUAL
                MATCH     SP1,ADMCONTR
                IF        @EQUAL
                  MOVE      "Missing Contract Role",ERRDESC
                  CALL      PRINTERR
                ENDIF
.
                MATCH     SP1,ADMCONTT
                IF        @EQUAL
                  MOVE      "Missing Contact Type",ERRDESC 
                  CALL      PRINTERR
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
.         PACK      KEY5,ANSL,ANSA,PMPXLNG1,SP70
.         CALL      RDCODE1
.         IF        OVRCD<>1
.           PACK      ADMPREFL,THCSCOD,SP70
.         ENDIF
.
.         PACK      ADMINTRQ,PMPXINTR,SP70
.
.         PACK      KEY5,ANSR,SP1,PREG,SP70
.         CALL      RDCODE1
.         IF        OVRCD<>1
.           PACK      ADMRELGN,THCSCOD,SP70
.         ENDIF
.
....      PACK      ADMQASN,PMVXQASN,SP70                              D-147728
.
          CALL      CHKMV000
.
          WRITE     TEMP4D,SEQ;ADMRECID,ADMUNQNO,ADMURNO,ADMADMNO,ADMADDTE:
                                ADMADTME,ADMACCLS,ADMCHRST,ADMTYPEP,ADMCOMPS:
                                ADMBAND,ADMSOREF,ADMTRNFF,ADMHOSIN,ADMSPDTE:
                                ADMSPTME,ADMOFSEP,ADMTRNTF,ADMDRG,ADMMDC:
                                ADMADWGT,ADMADWRD,ADMADUNT,ADMSWUCD,ADMTRDOC:
                                ADMPLSDY,ADMEVPTS,ADMQSTAT,ADMWRDCD,ADMCONTR:
                                ADMCONTT,ADMFNDSC,ADMINCDT,ADMINCFG,ADMWCQLD:
                                ADMMAIC,ADMDVA,ADMDOD,ADMPREFL,ADMINTRQ:
                                ADMRELGN,ADMQASN,CONTHOSP,FILLER,ICUHHMM:
                                VENTHHMM
          ADD       ONE,ADMCOUNT
.
WADM9999  MATCH     "00",ADMTYPEP
          IF        @EQUAL
            COMPARE   "55",CLNO
            CALL      HEAD0000 IF NOT LESS  * Print ther report header
.
            PRINT     *1,"|",AADMNO,*10,"| has an invalid care type.",*80,"|"
            ADD       "1",CLNO
            MOVE      "1",ERRORFLG          * Error found
          ENDIF
          RETURN
+
.******************************************************************************
.*                                 CHKMV000     CAR 314551                    *
.* Only send MV hours if less than 24 if MV opr codes are entered             *
.******************************************************************************
CHKMV000  MATCH     SP70,VENTHHMM
          GOTO      CHKMV9999 IF EQUAL
.
          MOVE      VENTHHMM,FORM7
.
          COMPARE   ZERO,FORM7
          GOTO      CHKMV999 IF EQUAL
.
          COMPARE   "2400",FORM7           * always send if > 24 hours
          GOTO      CHKMV999 IF NOT LESS
.
          PACK      KEY16,AADMNO,SP20 
          CALL      RSPTECO2                * Position on & read a patient
CHKMV100  CALL      RKPTECO2                  episode operation file record
          BRANCH    OVRCD,CHKMV900
.
          MATCH     AADMNO,PTEOADMN         * Check to see if different admin.
          GOTO      CHKMV900 IF NOT EQUAL     number
.
          MATCH     "13882-00",PTEOCODE
          GOTO      CHKMV999 IF EQUAL
.
          MATCH     "92209-00",PTEOCODE
          GOTO      CHKMV999 IF EQUAL
.
          GOTO      CHKMV100
.
CHKMV900  MOVE      SP70,VENTHHMM
.
CHKMV999  RETURN
+
.******************************************************************************
.*                                 CHKSRC00                                   *
.*                         Validate Source of Referral                        *
.******************************************************************************
CHKSRC00  MOVE      ZERO,EXIT                                          *C-61341
          MATCH     "04",ADMSOREF
          GOTO      CHKSRC90 IF EQUAL
.
          MATCH     "05",ADMSOREF
          GOTO      CHKSRC90 IF EQUAL
.
          MATCH     "11",ADMSOREF
          GOTO      CHKSRC90 IF EQUAL
.
          MATCH     "12",ADMSOREF
          GOTO      CHKSRC90 IF EQUAL
.
          MATCH     "13",ADMSOREF
          GOTO      CHKSRC90 IF EQUAL
.
          GOTO      CHKSRC99
.
CHKSRC90  MOVE      "Category ",ERRDESC
          ENDSET    ERRDESC
          APPEND    ADMSOREF,ERRDESC
          APPEND    " Invalid Source of Referral",ERRDESC
          RESET     ERRDESC
          CALL      PRINTERR
.
CHKSRC99  RETURN
+
.******************************************************************************
.*                                 CHKSEP00                                   *
.*                         Validate Separation Referral                       *
.******************************************************************************
CHKSEP00  MOVE      ZERO,EXIT
          MATCH     "02",ADMOFSEP
          GOTO      CHKSEP90 IF EQUAL
.
          MATCH     "03",ADMOFSEP
          GOTO      CHKSEP90 IF EQUAL
.
          MATCH     "10",ADMOFSEP
          GOTO      CHKSEP90 IF EQUAL
.
          MATCH     "11",ADMOFSEP
          GOTO      CHKSEP90 IF EQUAL
.
          GOTO      CHKSEP99
.
CHKSEP90  MOVE      "Category ",ERRDESC
          ENDSET    ERRDESC
          APPEND    ADMSOREF,ERRDESC
          APPEND    " Invalid Separation Mode",ERRDESC
          RESET     ERRDESC
          CALL      PRINTERR
.
CHKSEP99  RETURN
+
.******************************************************************************
.*                                 WPAL0000                                   *
.*                       Write to temp7 - Palliative care file                *
.******************************************************************************
WPAL0000  MATCH     "30",ADMTYPEP      * check if a palliative patient
          GOTO      WPAL1000 IF EQUAL
          GOTO      WPAL9999
.
WPAL1000  PACK      PALUNQNO,SP4,ADMIN,SP10
          REP       " 0",PALUNQNO           * Unique number / admission number
          PACK      PALURNO,URNO,SP10
          REP       " 0",PALURNO            * U/R number
          PACK      PALADMNO,SP4,ADMIN,SP10
          REP       " 0",PALADMNO           * Admission number
.
          CALL      PALF0000                * check if previously admitted for
.                                             palliative care treatment
          MOVE      "KH",TCODE
          MOVE      PMVXPPAL,ACODE
          PACK      KEY5,TCODE,ACODE
          CALL      RDCODE1
          IF        OVRCD = 0
            UNPACK    THCSCOD,KEY1
            MOVE      ZERO,FORM1
            MOVE      KEY1,FORM1   
          ENDIF
.
          IF        FORM1=1|FORM1=2
            MOVE      FORM1,PALPNONA       * previous non-admitted palliative
          ENDIF
.
          WRITE     TEMP7,SEQ;PALRECID,PALUNQNO,PALURNO,PALADMNO,PALFIRST:
                              PALPNONA,SP4
          ADD       ONE,PALCOUNT
.
WPAL9999  RETURN
+
.******************************************************************************
.*                                 PALF0000                Called by WPAL0000 *
.*       Check if previously admitted for palliative care treatment           *
.******************************************************************************
PALF0000  MOVE      ONE,PALFIRST            * 1=no previous pal admissions
          MOVE      AADMNO,SAVADMN
          PACK      KEY24,URNO,SP30         * loop thru visits for prev adm
          CALL      RDSVISA2
PALF1000  CALL      RDKVISA2
          BRANCH    OVRCD,PALF9999          * no more visits
.
          MOVE      URNO,KEY8
          MATCH     KEY8,PVIURNO            * different U/R?
          GOTO      PALF9999 IF NOT EQUAL
. 
          PACK      KEY8,PVIBILL            * get adm details for this visit
          CALL      RDMISS1
          BRANCH    OVRCD,PALF1000
          CALL      RDPMVX11                * Read the visit extension file
          BRANCH    OVRCD,PALF1000
.
          IF        IBCNMHOS = 1
            MATCH     SP3,PTHSHOSP
            IF        !@EQUAL
              MATCH     PTHSHOSP,PMVXMHOS   * check for selected hospital
              GOTO      PALF1000 IF NOT EQUAL
            ENDIF
          ENDIF
.
          MATCH     ADMIN,PVIBILL           * current admission, exit
          GOTO      PALF9999 IF EQUAL
.
          MOVE      "KG",TCODE
          MOVE      PMVXPALC,ACODE
          MATCH     SP3,ACODE
          GOTO      PALF1000 IF EQUAL
.
          PACK      KEY5,TCODE,ACODE      * Read the episode type
          CALL      RDCODE1 
          BRANCH    OVRCD,PALF1000
.
          UNPACK    THCSCOD,KEY2,DIM2     * if HDP=30,31,32,or 33 palliative visit
          MATCH     "30",KEY2
          GOTO      PALF2000 IF EQUAL
.
          MATCH     "31",KEY2
          GOTO      PALF2000 IF EQUAL
.
          MATCH     "32",KEY2
          GOTO      PALF2000 IF EQUAL
.
          MATCH     "33",KEY2
          GOTO      PALF1000 IF NOT EQUAL
.
PALF2000  MOVE      TWO,PALFIRST
.
PALF9999  MOVE      SAVADMN,AADMNO
          RETURN
+
.******************************************************************************
.*                                 WDVA0000                                   *
.*                       Write to temp8 - DVA file                            *
.******************************************************************************
WDVA0000  MATCH     "5",ADMCOMPS      * check if a DVA patient
          GOTO      WDVA9999 IF NOT EQUAL
.
          PACK      DVAUNQNO,SP4,ADMIN,SP10
          REP       " 0",DVAUNQNO           * Unique number / admission number
          PACK      DVAURNO,URNO,SP10
          REP       " 0",DVAURNO            * U/R number
          PACK      DVAADMNO,SP4,ADMIN,SP10
          REP       " 0",DVAADMNO           * Admission number
.
.         Get DVA Number using concession card details
.
          MOVE      URNO,PURNO
          MOVE      THREE,DIM1              * set for DVA card type
          CALL      GCCARD00                * get DVA card details
.          
          CALL      VETR0000                * Get card type
.
.         MOVE      ADMIN,KEY8
.         CALL      RDWVET1                 * read patwvetaf for claim number
.         IF        OVRCD <> 0                             
.           MOVE      "Missing veterans affairs claim number. ",ERRDESC
.           CALL      PRINTERR
.         ENDIF
.
.         MOVE      VCLMNO,DVACNUMB
          MOVE      PMCDCNUM,DVACNUMB         * 150735
          MATCH     SP10,DVACNUMB
          IF        @EQUAL
            MOVE      "Missing DVA Number. ",ERRDESC"
            CALL      PRINTERR
          ENDIF
.
          MATCH     SP10,DVACTYPE
          IF        @EQUAL
            MOVE      "Missing veterans affairs card type. ",ERRDESC
            CALL      PRINTERR
          ENDIF
.
          WRITE     TEMP8,SEQ;DVARECID,DVAUNQNO,DVAURNO,DVAADMNO,DVACNUMB:
                              DVACTYPE
          ADD       ONE,DVACOUNT
.
WDVA9999  RETURN
+
.******************************************************************************
.*                                 VETR0000               Called by: SETF0000 *
.*                        get Veteran card                                    *
.******************************************************************************
VETR0000  MOVE      PMCDDVAC,ACODE
          MOVE      "DX",TCODE
          PACK      KEY5,TCODE,ACODE
          CALL      RDCODE1
          IF        OVRCD = 0
            PACK      DVACTYPE,THCSCOD
          ENDIF
VETR9999  RETURN
+
.******************************************************************************
.*                                 GSWC0000                                   *
.*                       Get standard ward code                               *
.******************************************************************************
GSWC0000  PACK      STDWRDCD,SP70
          PACK      KEY6,TWARD,SP70         * get ward classification (Cat.CG)
          CALL      RDWARD1
          BRANCH    OVRCD,GSWC9999
.
          PACK      KEY5,ANSC,ANSG,WCLASS   * use Cat.CG
          CALL      RDCODE1
          BRANCH    OVRCD,GSWC9999
.
          MATCH     ANSS,TCINDC2            * check indc.2 for 'SNAP' ward
          IF        @EQUAL
            MOVE      "SNAP",STDWRDCD
          ENDIF
GSWC9999  RETURN
+
.******************************************************************************
.*                                 GQST0000                                   *
.*                       Get qualification status                             *
.******************************************************************************
GQST0000  BRANCH    BABYFLG,GQST9000
          MOVE      ZERO,EXIT
          MOVE      SP1,TCINDC2
          MATCH     SP3,TATYPE
          IF        !@EQUAL
            PACK      KEY5,CODEA,TATYPE
            CALL      RDCODE1
            IF        OVRCD <> 1
              MATCH     "A",TCINDC2
              GOTO      GQST9999 IF EQUAL
              MATCH     "U",TCINDC2
              GOTO      GQST9999 IF EQUAL
            ENDIF
          ENDIF
GQST9000  MOVE        ONE,EXIT
GQST9999  RETURN
+
.******************************************************************************
.*                                 GNHT0000                                   *
.*                       Get Nursing Home type                                *
.******************************************************************************
GNHT0000  MOVE      ZERO,EXIT
          MOVE      SP1,TCINDC2
          MATCH     SP3,TATYPE
          GOTO      GNHT9000 IF EQUAL
.
          PACK      KEY5,CODEA,TATYPE
          CALL      RDCODE1
          BRANCH    OVRCD,GNHT9000
.
          MATCH     "N",TCINDC2
          GOTO      GNHT2000 IF NOT EQUAL
.
          MATCH     "01",THCSCOD
          GOTO      GNHT2000 IF EQUAL
.
          MATCH     "05",THCSCOD
          GOTO      GNHT2000 IF EQUAL
.
          MATCH     "07",THCSCOD
          GOTO      GNHT2000 IF EQUAL
.
          MATCH     "08",THCSCOD
          GOTO      GNHT2000 IF EQUAL
.
          MATCH     "A",TMOVE                   * admission record?
          IF        @EQUAL
            MOVE      TDATE,ACTDTCOM            * Date commenced (start)
          ELSE
            MATCH     "D",TMOVE
            IF        @EQUAL
              MOVE      TDATE,ACTDTCEA
              MOVE      ONE,NHTFLAG
              MOVE      SP1,SAVNHT
              GOTO      GNHT8000
            ELSE
              MATCH     TCINDC2,SAVNHT
              MOVE      TDATE,SAVNDT
              GOTO      GNHT8000 IF EQUAL         * continuation - no change
              MOVE      TDATE,ACTDTCOM            * possible new Care period
            ENDIF
          ENDIF
          MOVE      "N",SAVNHT                  * save NHT indicator
          MOVE      TDATE,SAVNDT
          GOTO      GNHT8000
.
GNHT2000  MATCH     "N",SAVNHT
          GOTO      GNHT9000 IF NOT EQUAL
          MOVE      SAVNDT,ACTDTCEA              * Date ceased
          MOVE      ONE,NHTFLAG           * NHT record ready to be written
          MOVE      SP1,SAVNHT
          GOTO      GNHT8000
.
GNHT8000  MOVE        ZERO,EXIT
          GOTO        GNHT9999
.         
GNHT9000  MOVE        ONE,EXIT
GNHT9999  RETURN
+
.******************************************************************************
.*                                 STRP0000                                   *
.*                       Strip off blank char.                                *
.******************************************************************************
STRP0000  STRIP     KEY5
          TYPE      KEY5
          GOTO      STRP9000 IF NOT EQUAL
          MOVE      KEY5,FORM5
          MOVE      FORM5,KEY5
          REP       " 0",KEY5
          GOTO      STRP9999
.
STRP9000  ENDSET    KEY5
          APPEND    SP10,KEY5
          RESET     KEY5
STRP9999  RETURN
+
.******************************************************************************
.*                                 WACT0000               Called by: PROC0000 *
.*                       Write To The Activity Tempfile                       *
.******************************************************************************
WACT0000  PACK      ACTUNQNO,SP4,ADMIN,SP10
          REP       " 0",ACTUNQNO           * Unique number / admission number
          PACK      ACTURNO,URNO,SP10
          REP       " 0",ACTURNO            * U/R number
          PACK      ACTADMNO,SP4,ADMIN,SP10
          REP       " 0",ACTADMNO           * Admission number
.
          PACK      ACTCHDTE,TDATE
          REP       " 0",ACTCHDTE           * Change date
          UNPACK    TTIME,CHOUR,KEY1,CMIN
          PACK      ACTCHTME,CHOUR,CMIN
          REP       " 0",ACTCHTME           * Change time
.
          BRANCH    MOVEMENT,WACT9999,WACT9999,WACT1000,WACT2000,WACT9999:
                             WACT9999
.                            Admin,   Disch,   Change,  On leave,Return leave
.
          CALL      WQST0000                * Write to qualification status file
          GOTO      WACT3000
.
WACT1000  MOVE      SP1,ANS
.                                           * NHT needed before Ward change
          CALL      GNHT0000
          IF        NHTFLAG = 1
            CALL      WNHT0000
          ENDIF
.
          CALL      WWAT0000                * Write to the ward actvitiy file
          GOTO      WACT3000
.
.         Check type of leave
.
WACT2000  PACK      KEY5,CODETL,PTTRLTYP
          CALL      RDCODE1
          IF        OVRCD = 0
            MATCH     ANSC,THCSCOD
            IF        @EQUAL
              IF        PTCNHDPS=4
                CALL      WCAT0000          * Write to the cont leave act file
                GOTO      WACT3000
              ENDIF
            ENDIF
          ENDIF
          CALL      WLAT0000              * Write to the leave actvitiy file
.
WACT3000  MOVE      TWARD,SAVWARD           * Save the ward
.         MOVE      TQSTAT,SAVQSTAT         * Save the qualification status
          CALL      WAAT0000                * Write to the active activity file
          MOVE      TRBTYP,SAVBEDTP         * Save the bed type
          GOTO      WACT9999
.
WACT9999  CALL      GNHT0000
          IF        NHTFLAG=1
            CALL      WNHT0000
          ENDIF
          IF        QUALFLG=1
            MOVE      SAVQSTAT,TQSTAT
            CALL      WQST0000                * Write to the activity t
          ENDIF
.
          RETURN
+
.******************************************************************************
.*                                 WQST0000               Called by: WACT0000 *
.*                    Write To The Qualification status file                  *
.******************************************************************************
WQST0000  BRANCH    BABYFLG,WQST9999
          MOVE      TQSTAT,ACTQSTAT
          WRITE     TEMP5,SEQ;ACTRECID,ACTUNQNO,ACTURNO,ACTADMNO,ACTCODEQ:
                              ACTQSTAT,ACTCHDTE,ACTCHTME:
                              SP10,SP7
          ADD       ONE,ACTCOUNT                                       *I-60904
.
WQST9999  RETURN
+
.******************************************************************************
.*                                 WMUR0000               Called by: WACT0000 *
.*                    Write the mothers UR for a baby                         *
.******************************************************************************
WMUR0000  BRANCH    BABYFLG,WMUR9999
.
          PACK      ACTUNQNO,SP4,ADMIN,SP10
          REP       " 0",ACTUNQNO           * Unique number / admission number
          PACK      ACTURNO,URNO,SP10
          REP       " 0",ACTURNO            * U/R number
          PACK      ACTADMNO,SP4,ADMIN,SP10
          REP       " 0",ACTADMNO           * Admission number
.
          PACK      ACTCHDTE,ADATE
          REP       " 0",ACTCHDTE           * Change date
          UNPACK    ATIME,CHOUR,KEY1,CMIN
          PACK      ACTCHTME,CHOUR,CMIN
          REP       " 0",ACTCHTME           * Change time
.
          CALL      GMOTH000
.
          WRITE     TEMP5,SEQ;ACTRECID,ACTUNQNO,ACTURNO,ACTADMNO,ACTCODEB:
                              ACTMOTHU,SP10,SP10,SP2
          ADD       ONE,ACTCOUNT
.
WMUR9999  RETURN
+
.******************************************************************************
.*                                  GMOTH000              Called by: WQST0000 *
.*                             Get Mothers UR                                 *
.******************************************************************************
GMOTH000  PACK      KEY5,ANSS,SP1,ASRCE
          CALL      RDCODE1
          BRANCH    OVRCD,GMOTH999
.
          MATCH     SP4,THCSCOD
          GOTO      GMOTH999 IF EQUAL
.
          MATCH     "09",THCSCOD
          GOTO      GMOTH999 IF NOT EQUAL
.
          PACK      KEY16,AURNO,SP70
          CALL      RDSLINK1
GMOTH100  CALL      RDKLINK1
          BRANCH    OVRCD,GMOTH900
.
          MATCH     AURNO,LINKFUR
          GOTO      GMOTH900 IF NOT EQUAL
.
          PACK      KEY5,ANSL,ANSU,LINKREA,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,GMOTH100
.
          MATCH     ANSM,TCINDC1
          GOTO      GMOTH100 IF NOT EQUAL
.
          PACK      ACTMOTHU,LINKTUR,SP70
          REP       " 0",ACTMOTHU
          GOTO      GMOTH999
.
GMOTH900  COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS    * Print ther report header
.
          PRINT     *1,"|",AADMNO,*10,"| does not have a mother/baby ":
                    "link record.",*80,"|"
          ADD       "1",CLNO
          MOVE      "1",ERRORFLG            * Error found
.
GMOTH999  RETURN
+
.******************************************************************************
.*                                 WWAT0000               Called by: WACT0000 *
.*                    Write To The Ward Activity Tempfile                     *
.******************************************************************************
WWAT0000  PACK      ACTWARD,TWARD,SP6       * Change ward
          PACK      ACTUNIT,TBED,SP4        * Change bed
.
          CALL      GSWC0000                * Get standard ward code
          MOVE      STDWRDCD,ACTWRDCD
.
          PACK      KEY6,TADOCT,SP6
          CALL      RDDOCT1                 * Read the doctors file
          IF        OVRCD<>1
            MATCH     SP3,DRTYPE
            IF        !@EQUAL
              PACK      KEY5,CODEDT,DRTYPE
              CALL      RDCODE1             * Read the codes file
              IF        OVRCD<>1
                MOVE      THCSCOD,ACTSWUCD  * Change ward/unit code
                CALL      CWUC0000          * Check the ward/unit code
              ENDIF
            ENDIF
          ENDIF
.
          WRITE     TEMP5,SEQ;ACTRECID,ACTUNQNO,ACTURNO,ACTADMNO,ACTCODEW:
                              ACTWARD,ACTUNIT,ACTSWUCD,ACTCHDTE,ACTCHTME:
                              ACTWRDCD
          ADD       ONE,ACTCOUNT
WWAT9999  RETURN
+
.******************************************************************************
.*                                 WCAT0000               Called by: WACT0000 *
.*                Write To The Contract Leave Activity Tempfile               *
.******************************************************************************
WCAT0000  PACK      ACTDTSCL,TDATE
          REP       " 0",ACTDTSCL           * Contract leave start date
.
          MOVE      PTTRLTSC,ACTFACCT       * Contract leave transfer source
.
          CALL      RDKTRAN2                * Read the transfer file to get the
          BRANCH    OVRCD,WCAT9999            return from leave record
.
          MATCH     AADMNO,TADMN            * Check to see if different admin.
          GOTO      WCAT9999 IF NOT EQUAL     number
.
          MATCH     ACTDTESL,ACTDTERL
          GOTO      WCAT9999 IF EQUAL
.
          PACK      ACTDTRCL,TDATE
          REP       " 0",ACTDTRCL           * Contract leave return date
.
          WRITE     TEMP5,SEQ;ACTRECID,ACTUNQNO,ACTURNO,ACTADMNO,ACTCODEC:
                              ACTDTSCL,ACTDTRCL,ACTFACCT,SP9
          ADD       ONE,ACTCOUNT
          MOVE      ONE,CONTPAT             * Contract patient - yes
WCAT9999  RETURN
+
.******************************************************************************
.*                                 WLAT0000               Called by: WACT0000 *
.*                   Write To The Leave Activity Tempfile                     *
.******************************************************************************
WLAT0000  PACK      ACTDTESL,TDATE
          REP       " 0",ACTDTESL           * Leave start date
          UNPACK    TTIME,CHOUR,KEY1,CMIN
          PACK      ACTTMESL,CHOUR,CMIN
          REP       " 0",ACTTMESL           * Leave start time
.
          CALL      RDKTRAN2                * Read the transfer file to get the
          BRANCH    OVRCD,WLAT9999            return from leave record
.
          MATCH     AADMNO,TADMN            * Check to see if different admin.
          GOTO      WLAT9999 IF NOT EQUAL     number
.
          PACK      ACTDTERL,TDATE
          REP       " 0",ACTDTERL           * Leave return date
          UNPACK    TTIME,CHOUR,KEY1,CMIN
          PACK      ACTTMERL,CHOUR,CMIN
          REP       " 0",ACTTMERL           * Leave return time
.
. 0923494 do not report if start/return on the same day
.
          MATCH     ACTDTESL,ACTDTERL
          GOTO      WLAT9999 IF EQUAL
.
          WRITE     TEMP5,SEQ;ACTRECID,ACTUNQNO,ACTURNO,ACTADMNO,ACTCODEL:
                              ACTDTESL,ACTTMESL,ACTDTERL,ACTTMERL,SP6
          ADD       ONE,ACTCOUNT
WLAT9999  RETURN
+
.******************************************************************************
.*                                 WAAT0000               Called by: WWAT0000 *
.*                  Write To The Activity Activity Tempfile        & WLAT0000 *
.******************************************************************************
WAAT0000  MATCH     SAVBEDTP,TRBTYP
          GOTO      WAAT9999 IF EQUAL       * Same bed type as admin bed type,
.                                             ignore
          MATCH     SP3,TRBTYP
          IF        !@EQUAL
            PACK      KEY5,CODEBT,TRBTYP
            CALL      RDCODE1               * Read the patients code file
            IF        OVRCD<>1
              MOVE      THCSCOD,ACTCHRST
              REP       " 0",ACTCHRST       * Change chargeable status
            ENDIF
          ENDIF
.
..... CAR 320516
.  overwrite bed type for public patients
          PACK      KEY5,CODECL,ACLAIM
          CALL      RDCODE1               * Read the patient codes file
          IF        OVRCD<>1
            MATCH     ANSP,TCINDC9
            IF        @EQUAL
              MOVE      "1",ACTCHRST
            ENDIF
          ENDIF
.
          MOVE      ADMCOMPS,ACTCOMPS
.
          WRITE     TEMP5,SEQ;ACTRECID,ACTUNQNO,ACTURNO,ACTADMNO,ACTCODEA:
                              ACTACCLS,SP2,ACTCHRST,ACTCOMPS,ACTBAND:
                              ACTCHDTE,ACTCHTME
          ADD       ONE,ACTCOUNT
WAAT9999  RETURN
+
.******************************************************************************
.*                                 WNHT0000               Called by: WWAT0000 *
.*                  Write To The Activity NHT Tempfile             & WLAT0000 *
.******************************************************************************
WNHT0000  WRITE     TEMP5,SEQ;ACTRECID,ACTUNQNO,ACTURNO,ACTADMNO,ACTCODET:
                              ACTNHFLG,ACTDTCOM,ACTDTCEA,SP10,SP1
          ADD       ONE,ACTCOUNT
.
WNHT9000  MOVE      ZERO,NHTFLAG            * reset printing controls  *I-60077
.         MOVE      SP1,SAVNHT                                         *I-60077
.
WNHT9999  RETURN
+
.******************************************************************************
.*                                 WSAT0000                                   *
.*                   Write To The SNAP Activity Tempfile                      *
.******************************************************************************
WSAT0000  MOVE      ZERO,SNAPFLAG
          PACK      ACTUNQNO,SP4,ADMIN,SP10
          REP       " 0",ACTUNQNO           * Unique number / admission number
          PACK      ACTURNO,URNO,SP10
          REP       " 0",ACTURNO            * U/R number
          PACK      ACTADMNO,SP4,ADMIN,SP10
          REP       " 0",ACTADMNO           * Admission number
.
          MOVE      EPSNUMB,FORM3
          MOVE      FORM3,ACTSEPNO          * episode number
          REP       " 0",ACTSEPNO
.
          CALL      SNPACN00                * new snap details 2016
          GOTO      WSAT9000
.
WSAT9000  COMPARE   ONE,SNAPFLAG
          GOTO      WSAT9999 IF EQUAL       * snap activity record written
.
          MOVE      "Missing Sub Acute Details",ERRDESC
          CALL      PRINTERR
WSAT9999  RETURN
+
.******************************************************************************
.*                                 SNPACN00                                   *
.*            Write To The SNAP Activity Tempfile *** July 2016 ****          *
.******************************************************************************
.    
SNPACN00  MOVE      ZERO,HASFIM
          MATCH     "20",CARETYPE    * Rehab  20 sends FIM scores
          GOTO      SNPACN05 IF EQUAL
.
          MATCH     "09",CARETYPE    * GEM 09 sends FIM scores
          GOTO      SNPACN05 IF EQUAL
.
          GOTO      SNPACN30
.
SNPACN05  MOVE      ZERO,FIMFINSH
          PACK      KEY24,AADMNO,SP70
          CALL      RSPTFIM1
SNPACN10  CALL      RKPTFIM1
          BRANCH    OVRCD,SNPACN15
.
          MATCH     DAADMNO,PTFIVISN
          GOTO      SNPACN15 IF NOT EQUAL
.
. ***** ignore deleted scores *****
          MATCH     "1",PTFIDELT
          GOTO      SNPACN10 IF EQUAL
.
          MOVE      SP70,ACTSADSC
          MOVE      ZERO,ASSESONL
          MATCH     "1",PTFIASES
          IF        @EQUAL
            MOVE      "999",ACTSADSC
            MOVE      "1",ASSESONL
          ENDIF
.
          MOVE      ONE,HASFIM
.
          GOTO      SNPACN20
.
. ***** for day cases, with no fim scores - send 999 record
SNPACN15  COMPARE   ONE,FIMFINSH
          GOTO      SNPACN35 IF EQUAL
.
          COMPARE   ONE,HASFIM
          GOTO      SNPACN35 IF EQUAL
.
          MATCH     ADATE,DDATE
          GOTO      SNPACN35 IF NOT EQUAL
.
          MOVE      ADATE,PTFIDATE
          MOVE      "FIM",ACTSADTY        * ADL Type = FIM
.
          MOVE      "EAT",ACTSADST        * ADL Subtype = EAT
          MOVE      "999",ACTSADSC
          REP       " 0",ACTSADSC
          MOVE      PTFIDATE,ACTSADDT     * episode start date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "GRM",ACTSADST        * ADL Subtype = GRM
          MOVE      "999",ACTSADSC
          REP       " 0",ACTSADSC
          MOVE      PTFIDATE,ACTSADDT     * episode start date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "BTH",ACTSADST        * ADL Subtype = BTH
          MOVE      "999",ACTSADSC
          REP       " 0",ACTSADSC
          MOVE      PTFIDATE,ACTSADDT     * episode start date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "DRU",ACTSADST        * ADL Subtype = DRU
          MOVE      "999",ACTSADSC
          REP       " 0",ACTSADSC
          MOVE      PTFIDATE,ACTSADDT     * episode start date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "DRL",ACTSADST        * ADL Subtype = DRL
          MOVE      "999",ACTSADSC
          REP       " 0",ACTSADSC
          MOVE      PTFIDATE,ACTSADDT     * episode start date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "TLT",ACTSADST        * ADL Subtype = TLT
          MOVE      "999",ACTSADSC
          REP       " 0",ACTSADSC
          MOVE      PTFIDATE,ACTSADDT     * episode start date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "BDR",ACTSADST        * ADL Subtype = BDR
          MOVE      "999",ACTSADSC
          REP       " 0",ACTSADSC
          MOVE      PTFIDATE,ACTSADDT     * episode start date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "BWL",ACTSADST        * ADL Subtype = BWL
          MOVE      "999",ACTSADSC
          REP       " 0",ACTSADSC
          MOVE      PTFIDATE,ACTSADDT     * episode start date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "TBC",ACTSADST        * ADL Subtype = TBC
          MOVE      "999",ACTSADSC
          REP       " 0",ACTSADSC
          MOVE      PTFIDATE,ACTSADDT     * episode start date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "TTL",ACTSADST        * ADL Subtype = TTL
          MOVE      "999",ACTSADSC
          REP       " 0",ACTSADSC
          MOVE      PTFIDATE,ACTSADDT     * episode start date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "TBS",ACTSADST        * ADL Subtype = TBS
          MOVE      "999",ACTSADSC
          REP       " 0",ACTSADSC
          MOVE      PTFIDATE,ACTSADDT     * episode start date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "LWW",ACTSADST        * ADL Subtype = LWW
          MOVE      "999",ACTSADSC
          REP       " 0",ACTSADSC
          MOVE      PTFIDATE,ACTSADDT     * episode start date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "LST",ACTSADST        * ADL Subtype = LST
          MOVE      "999",ACTSADSC
          REP       " 0",ACTSADSC
          MOVE      PTFIDATE,ACTSADDT     * episode start date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "CMP",ACTSADST        * ADL Subtype = CMP
          MOVE      "999",ACTSADSC
          REP       " 0",ACTSADSC
          MOVE      PTFIDATE,ACTSADDT     * episode start date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "EXP",ACTSADST        * ADL Subtype = EXP
          MOVE      "999",ACTSADSC
          REP       " 0",ACTSADSC
          MOVE      PTFIDATE,ACTSADDT     * episode start date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "SOC",ACTSADST        * ADL Subtype = SOC
          MOVE      "999",ACTSADSC
          REP       " 0",ACTSADSC
          MOVE      PTFIDATE,ACTSADDT     * episode start date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "PRS",ACTSADST        * ADL Subtype = PRS
          MOVE      "999",ACTSADSC
          REP       " 0",ACTSADSC
          MOVE      PTFIDATE,ACTSADDT     * episode start date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "MEM",ACTSADST        * ADL Subtype = MEM
          MOVE      "999",ACTSADSC
          REP       " 0",ACTSADSC
          MOVE      PTFIDATE,ACTSADDT     * episode start date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "999",FIMMOT
          MOVE      "MOT",ACTSADST        * ADL Subtype = MOT
          MOVE      FIMMOT,ACTSADSC       * Motor FIM
          REP       " 0",ACTSADSC
.
          MOVE      PTFIDATE,ACTSADDT     * episode start date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5

          MOVE      PTFIDATE,ACTSADDT     * ADL Date
          MOVE      "999",FIMCOG
          MOVE      "COG",ACTSADST        * ADL Subtype = MOT
          MOVE      FIMCOG,ACTSADSC       * COG FIM
          REP       " 0",ACTSADSC
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          COMPARE   ONE,FIMFINSH
          GOTO      SNPACN35
.
SNPACN20  MOVE      "FIM",ACTSADTY        * ADL Type = FIM
          MOVE      PTFIDATE,ACTSADDT     * episode start date
          PACK      ACTSPHTY,SP70
          MOVE      "EAT",ACTSADST        * ADL Subtype = EAT
          IF        ASSESONL=ZERO
            MOVE      PTFIEATS,FORM3
            MOVE      FORM3,ACTSADSC
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "GRM",ACTSADST        * ADL Subtype = GRM
          IF        ASSESONL=ZERO
            MOVE      PTFIGRMS,FORM3
            MOVE      FORM3,ACTSADSC
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "BTH",ACTSADST        * ADL Subtype = BTH
          IF        ASSESONL=ZERO
            MOVE      PTFIBTHS,FORM3
            MOVE      FORM3,ACTSADSC
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "DRU",ACTSADST        * ADL Subtype = DRU
          IF        ASSESONL=ZERO
            MOVE      PTFIUPBS,FORM3
            MOVE      FORM3,ACTSADSC
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "DRL",ACTSADST        * ADL Subtype = DRL
          IF        ASSESONL=ZERO
            MOVE      PTFILWBS,FORM3
            MOVE      FORM3,ACTSADSC
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "TLT",ACTSADST        * ADL Subtype = TLT
          IF        ASSESONL=ZERO
            MOVE      PTFITLTS,FORM3
            MOVE      FORM3,ACTSADSC
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "BDR",ACTSADST        * ADL Subtype = BDR
          IF        ASSESONL=ZERO
            MOVE      PTFIBLMS,FORM3
            MOVE      FORM3,ACTSADSC
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "BWL",ACTSADST        * ADL Subtype = BWL
          IF        ASSESONL=ZERO
            MOVE      PTFIBWMS,FORM3
            MOVE      FORM3,ACTSADSC
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "TBC",ACTSADST        * ADL Subtype = TBC
          IF        ASSESONL=ZERO
            MOVE      PTFITBDS,FORM3
            MOVE      FORM3,ACTSADSC
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "TTL",ACTSADST        * ADL Subtype = TTL
          IF        ASSESONL=ZERO
            MOVE      PTFITTLS,FORM3
            MOVE      FORM3,ACTSADSC
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "TBS",ACTSADST        * ADL Subtype = TBS
          IF        ASSESONL=ZERO
            MOVE      PTFITBTS,FORM3
            MOVE      FORM3,ACTSADSC
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "LWW",ACTSADST        * ADL Subtype = LWW
          IF        ASSESONL=ZERO
            MOVE      PTFILOCS,FORM3
            MOVE      FORM3,ACTSADSC
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "LST",ACTSADST        * ADL Subtype = LST
          IF        ASSESONL=ZERO
            MOVE      PTFISTRS,FORM3
            MOVE      FORM3,ACTSADSC
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "CMP",ACTSADST        * ADL Subtype = CMP
          IF        ASSESONL=ZERO
            MOVE      PTFICOMS,FORM3
            MOVE      FORM3,ACTSADSC
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "EXP",ACTSADST        * ADL Subtype = EXP
          IF        ASSESONL=ZERO
            MOVE      PTFIEXPS,FORM3
            MOVE      FORM3,ACTSADSC
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "SOC",ACTSADST        * ADL Subtype = SOC
          IF        ASSESONL=ZERO
            MOVE      PTFISCIS,FORM3
            MOVE      FORM3,ACTSADSC
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "PRS",ACTSADST        * ADL Subtype = PRS
          IF        ASSESONL=ZERO
            MOVE      PTFIPRBS,FORM3
            MOVE      FORM3,ACTSADSC
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "MEM",ACTSADST        * ADL Subtype = MEM
          IF        ASSESONL=ZERO
            MOVE      PTFIMEMS,FORM3
            MOVE      FORM3,ACTSADSC
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
. **** motor total
.
          ASSIGN    PTFIEATS+PTFIGRMS+PTFIBTHS+PTFIUPBS+PTFILWBS+PTFITLTS+PTFIBLMS+PTFIBWMS+PTFITBDS+PTFITTLS+PTFITBTS+PTFILOCS+PTFISTRS,FIMMOT
          MOVE      "MOT",ACTSADST        * ADL Subtype = MOT
          IF        ASSESONL=ZERO
            MOVE      FIMMOT,ACTSADSC
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
. **** cognitive total
.
          ASSIGN    PTFICOMS+PTFIEXPS+PTFISCIS+PTFIPRBS+PTFIMEMS,FIMCOG
          MOVE      "COG",ACTSADST        * ADL Subtype = COG
          IF        ASSESONL=ZERO
            MOVE      FIMCOG,ACTSADSC
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MATCH     EPSSDATE,ACTSADDT     *  ADL Date < episode start date
          IF        @LESS
            CLEAR     ERRDESC
            APPEND    "H571 - ADL Date is not between SNAP episode ",ERRDESC
            APPEND    "start/end dates",ERRDESC
            RESET     ERRDESC
            CALL      PRINTERR
          ENDIF
.
          MATCH     ACTSADDT,EPSEDATE     *  ADL Date > episode end date
          IF        @LESS
            CLEAR     ERRDESC
            APPEND    "H571 - ADL Date is not between SNAP episode ",ERRDESC
            APPEND    "start/end dates",ERRDESC
            RESET     ERRDESC
            CALL      PRINTERR
          ENDIF
.
          GOTO      SNPACN10
.
SNPACN30  MATCH     "09",CARETYPE         * Geriatric Eval and maintenance
          GOTO      SNPACN35 IF NOT EQUAL
.
          BRANCH    FIMFINSH,SNPACN35     * Day case with no FIM so 999 sent
.
          BRANCH    HASFIM,SNPACN35       * FIM Scores exits
.
          MOVE      "H814 - Snap Type GEM but no FIM scores reported",ERRDESC
          CALL      PRINTERR
.
.******** get honos scores
SNPACN35  MOVE      ZERO,HONOSFND
          PACK      KEY16,DAADMNO,SP70
          CALL      RSMHHON1
SNPACN40  CALL      RKMHHON1
          BRANCH    OVRCD,SNPACN60
.
          MATCH     DAADMNO,MHHNVISN
          GOTO      SNPACN60 IF NOT EQUAL
.
          MOVE      SP70,ACTSADSC
          MOVE      ZERO,ASSESONL
          MATCH     SP70,MHHNSSET
          IF        !@EQUAL
            PACK      KEY5,CODEss,MHHNSSET,SP70
            CALL      RDCODE1
            IF        OVRCD=0
              COMPARE   TEN,TCFORM6
              IF        @EQUAL
                MOVE      "999",ACTSADSC
                MOVE      "1",ASSESONL
              ENDIF
            ENDIF
          ENDIF
.
          MOVE      ONE,HONOSFND
          MOVE      "HON",ACTSADTY        * ADL Type = HON
          MOVE      MHHNHDAT,ACTSADDT     * ADL Date
          PACK      ACTSPHTY,SP70
.
          MOVE      "BEH",ACTSADST        * ADL Subtype = BEH
          IF        ASSESONL=ZERO
            MOVE      MHHNADQ1,FORM3
            MOVE      FORM3,ACTSADSC        * ADL Score
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "NAS",ACTSADST        * ADL Subtype = NAS
          IF        ASSESONL=ZERO
            MOVE      MHHNADQ2,FORM3
            MOVE      FORM3,ACTSADSC        * ADL Score
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "DDU",ACTSADST        * ADL Subtype = DDU
          IF        ASSESONL=ZERO
            MOVE      MHHNADQ3,FORM3        * ADL Score
            MOVE      FORM3,ACTSADSC  
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "CGP",ACTSADST        * ADL Subtype = CGP
          IF        ASSESONL=ZERO
            MOVE      MHHNADQ4,FORM3     * ADL Score
            MOVE      FORM3,ACTSADSC     * ADL Score
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "PID",ACTSADST        * ADL Subtype = PID
          IF        ASSESONL=ZERO
            MOVE      MHHNADQ5,FORM3     * ADL Score
            MOVE      FORM3,ACTSADSC     * ADL Score
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "HAD",ACTSADST        * ADL Subtype = HAD
          IF        ASSESONL=ZERO
            MOVE      MHHNADQ6,FORM3     * ADL Score
            MOVE      FORM3,ACTSADSC     * ADL Score
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "DPS",ACTSADST        * ADL Subtype = DPS
          IF        ASSESONL=ZERO
            MOVE      MHHNADQ7,FORM3     * ADL Score
            MOVE      FORM3,ACTSADSC     * ADL Score
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "OMB",ACTSADST        * ADL Subtype = OMB
          IF        ASSESONL=ZERO
            MOVE      MHHNADQ8,FORM3     * ADL Score
            MOVE      FORM3,ACTSADSC     * ADL Score
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "SSR",ACTSADST        * ADL Subtype = SSR
          IF        ASSESONL=ZERO
            MOVE      MHHNADQ9,FORM3     * ADL Score
            MOVE      FORM3,ACTSADSC     * ADL Score
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "ADL",ACTSADST        * ADL Subtype = ADL
          IF        ASSESONL=ZERO
            MOVE      MHHNAQ10,FORM3     * ADL Score
            MOVE      FORM3,ACTSADSC     * ADL Score
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "LVC",ACTSADST        * ADL Subtype = LVC
          IF        ASSESONL=ZERO
            MOVE      MHHNAQ11,FORM3     * ADL Score
            MOVE      FORM3,ACTSADSC     * ADL Score
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      "WLQ",ACTSADST        * ADL Subtype = WLQ
          IF        ASSESONL=ZERO
            MOVE      MHHNAQ12,FORM3     * ADL Score
            MOVE      FORM3,ACTSADSC     * ADL Score
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          MOVE      MHHNADQ1,F1
          ASSIGN    FIMMOT+F1,FIMMOT
          MOVE      MHHNADQ2,F1
          ASSIGN    FIMMOT+F1,FIMMOT
          MOVE      MHHNADQ3,F1
          ASSIGN    FIMMOT+F1,FIMMOT
          MOVE      MHHNADQ4,F1
          ASSIGN    FIMMOT+F1,FIMMOT
          MOVE      MHHNADQ5,F1
          ASSIGN    FIMMOT+F1,FIMMOT
          MOVE      MHHNADQ6,F1
          ASSIGN    FIMMOT+F1,FIMMOT
          MOVE      MHHNADQ7,F1
          ASSIGN    FIMMOT+F1,FIMMOT
          MOVE      MHHNADQ8,F1
          ASSIGN    FIMMOT+F1,FIMMOT
          MOVE      MHHNADQ9,F1
          ASSIGN    FIMMOT+F1,FIMMOT
          MOVE      MHHNAQ10,F1
          ASSIGN    FIMMOT+F1,FIMMOT
          MOVE      MHHNAQ11,F1
          ASSIGN    FIMMOT+F1,FIMMOT
          MOVE      MHHNAQ12,F1
          ASSIGN    FIMMOT+F1,FIMMOT
.
          MOVE      "TOT",ACTSADST        * ADL Subtype = TOT
          IF        ASSESONL=ZERO
            MOVE      FIMMOT,ACTSADSC       * ADL Score
            REP       " 0",ACTSADSC
          ENDIF
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          GOTO      SNPACN40
.
.*******  get rug scores
.
SNPACN60  MOVE      ZERO,HASRUG             * RUG scores exist - No
.
          PACK      KEY12,AADMNO,EPSNUMB,SP70
          CALL      RSPTQRD1
SNPACN70  CALL      RKPTQRD1
          BRANCH    OVRCD,SNPACN90          * no ADL scores exist
.
          MATCH     AADMNO,PTQRADMN         * same admission?
          GOTO      SNPACN90 IF NOT EQUAL
.
          COMPARE   EPSNUMB,PTQREPNO        * same episode?
          GOTO      SNPACN90 IF NOT EQUAL
.
          PACK      KEY5,ANSC,ANSU,PTQRCLSP,SP5
          CALL      RDCODE1                 * get ADL Type/Subtype
          BRANCH    OVRCD,SNPACN70          * not valid
.
          MATCH     "RUG",THCSCOD
          GOTO      SNPACN70 IF NOT EQUAL
.
          MOVE      ONE,HASRUG            * RUG scores exist - Yes
.
          MOVE      "RUG",ACTSADTY        * ADL Type = RUG
          MOVE      "TOT",ACTSADST        * ADL Subtype = TOT
          MOVE      PTQRRGAA,FORM3       * ADL Score
          MOVE      FORM3,ACTSADSC       * ADL Score
          REP       " 0",ACTSADSC
.
          IF        FORM3 < 4 | FORM3 > 18
            CLEAR     ERRDESC
            APPEND    "H531 - ADL Score ",ERRDESC
            APPEND    "is outside the valid range for ADL Subtype",ERRDESC
            RESET     ERRDESC
            CALL      PRINTERR
          ENDIF
.
          MOVE      PTQRCOM1,ACTSADDT     * ADL Date
          PACK      ACTSPHTY,SP70
.
          MATCH     "30",CARETYPE         * only send for palliative
          GOTO      SNPACN75 IF NOT EQUAL
.
          MATCH     SP70,PTQRPCSA
          IF        !@EQUAL
            PACK      ACTSPHTY,ZERO,PTQRPCSA     * Phase type
          ENDIF
SNPACN75  CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          GOTO      SNPACN70
.
SNPACN90  MATCH     "30",CARETYPE           * Palliative Care
          IF        !@EQUAL
            MATCH     "11",CARETYPE         * Maintenance
            GOTO      SNPACN91 IF NOT EQUAL
          ENDIF
.
          BRANCH    HASRUG,SNPACN91         * RUG scores exist
.
          MOVE      "H522 - No ADL scores provided for SNAP episode",ERRDESC
          CALL      PRINTERR
.
SNPACN91  COMPARE   ONE,HONOSFND
          GOTO      SNPACN99 IF EQUAL
.
          MATCH     "10",CARETYPE
          GOTO      SNPACN99 IF NOT EQUAL
.
          PRINT    *1,"|",AADMNO,*10,"| is a public patient with a care ":
                   "type of ",ACARE,", and has no HONOS score",*80,"|"
          GOTO      SNPACN99
.
SNPACN95  PRINT    *1,"|",AADMNO,*10,"| is a public patient with a care ":
                   "type of ",ACARE,", and has no FIM score",*80,"|"
          GOTO      SNPACN99
.
SNPACN99  RETURN
+
.******************************************************************************
.*                                 SNPACT00                                   *
.*            Write To The SNAP Activity Tempfile *** July 2013 ****          *
.******************************************************************************
.     ****** get fim scores
SNPACT00  MOVE      ZERO,HASFIM
          MATCH     "20",CARETYPE    * Rehab sends FIM scores
          GOTO      SNPACT05 IF EQUAL
.
          MATCH     "09",CARETYPE    * Geriatric Eval and maintenance
          GOTO      SNPACT05 IF EQUAL
          GOTO      SNPACT30
.
SNPACT05  MOVE      ZERO,FIMFINSH
          PACK      KEY24,AADMNO,SP70
          CALL      RSPTFIM1
SNPACT10  CALL      RKPTFIM1
          BRANCH    OVRCD,SNPACT15
.
          MATCH     DAADMNO,PTFIVISN
          GOTO      SNPACT15 IF NOT EQUAL
.
. ***** ignore deleted scores *****
          MATCH     "1",PTFIDELT
          GOTO      SNPACT10 IF EQUAL
.
          GOTO      SNPACT20
.
. ***** for day cases, with no fim scores - send 999 record
SNPACT15  COMPARE   ONE,HASFIM
          GOTO      SNPACT30 IF EQUAL
.
          MATCH     ADATE,DDATE
          GOTO      SNPACT30 IF NOT EQUAL
.
          MOVE      "999",FIMMOT
          MOVE      "999",FIMCOG
          MOVE      ADATE,PTFIDATE
          MOVE      ONE,FIMFINSH
          GOTO      SNPACT25
.
. **** motor total
.
SNPACT20  MOVE       ONE,HASFIM
          ASSIGN    PTFIEATS+PTFIGRMS+PTFIBTHS+PTFIUPBS+PTFILWBS+PTFITLTS+PTFIBLMS+PTFIBWMS+PTFITBDS+PTFITTLS+PTFITBTS+PTFILOCS+PTFISTRS,FIMMOT
.
. **** cognitive total
.
          ASSIGN    PTFICOMS+PTFIEXPS+PTFISCIS+PTFIPRBS+PTFIMEMS,FIMCOG
.
SNPACT25  MOVE      "FIM",ACTSADTY        * ADL Type = FIM
          MOVE      "MOT",ACTSADST        * ADL Subtype = MOT
          MOVE      FIMMOT,ACTSADSC       * Motor FIM
          REP       " 0",ACTSADSC
.
          MOVE      PTFIDATE,ACTSADDT     * episode start date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5

          MOVE      PTFIDATE,ACTSADDT     * ADL Date
          MOVE      "COG",ACTSADST        * ADL Subtype = MOT
          MOVE      FIMCOG,ACTSADSC       * COG FIM
          REP       " 0",ACTSADSC
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          COMPARE   ONE,FIMFINSH
          GOTO      SNPACT30 IF EQUAL
.
          GOTO      SNPACT10

.
.******** get honos scores
.
SNPACT30  PACK      KEY16,DAADMNO,SP70
          CALL      RSMHHON1
SNPACT40  CALL      RKMHHON1
          BRANCH    OVRCD,SNPACT60
.
          MATCH     DAADMNO,MHHNVISN
          GOTO      SNPACT60 IF NOT EQUAL
.
. **** behaviour score
.
          MOVE      "HON",ACTSADTY        * ADL Type = HON
          MOVE      "BEH",ACTSADST        * ADL Subtype = BEH
          MOVE      MHHNADQ1,F1
          ASSIGN    FIMMOT+F1,FIMMOT
          MOVE      MHHNADQ2,F1
          ASSIGN    FIMMOT+F1,FIMMOT
          MOVE      MHHNADQ3,F1
          ASSIGN    FIMMOT+F1,FIMMOT
          MOVE      MHHNADQ4,F1
          ASSIGN    FIMMOT+F1,FIMMOT
          MOVE      MHHNADQ5,F1
          ASSIGN    FIMMOT+F1,FIMMOT
          MOVE      MHHNADQ6,F1
          ASSIGN    FIMMOT+F1,FIMMOT
          MOVE      MHHNADQ7,F1
          ASSIGN    FIMMOT+F1,FIMMOT
          MOVE      MHHNADQ8,F1
          ASSIGN    FIMMOT+F1,FIMMOT
          MOVE      MHHNADQ9,F1
          ASSIGN    FIMMOT+F1,FIMMOT
.
          MOVE      FIMMOT,ACTSADSC       * ADL Score
          REP       " 0",ACTSADSC
.
          MOVE      MHHNHDAT,ACTSADDT     * ADL Date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
. **** Activity of daily living score
.
          MOVE      "HON",ACTSADTY        * ADL Type = HON
          MOVE      "ADL",ACTSADST        * ADL Subtype = ADL
          MOVE      MHHNADQ9,F1
          ASSIGN    FIMCOG+F1,FIMCOG
          MOVE      MHHNAQ10,F1
          ASSIGN    FIMCOG+F1,FIMCOG
          MOVE      MHHNAQ11,F1
          ASSIGN    FIMCOG+F1,FIMCOG
          MOVE      MHHNAQ12,F1
          ASSIGN    FIMCOG+F1,FIMCOG
.
          MOVE      FIMCOG,ACTSADSC       * ADL Score
          REP       " 0",ACTSADSC
.
          MOVE      MHHNHDAT,ACTSADDT     * ADL Date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
. **** HONOS Total
.
          MOVE      "HON",ACTSADTY        * ADL Type = HON
          MOVE      "TOT",ACTSADST        * ADL Subtype = TOT
          ASSIGN    FIMMOT+FIMCOG,HONTOT
.
          MOVE      HONTOT,ACTSADSC       * ADL Score
          REP       " 0",ACTSADSC
.
          MOVE      MHHNHDAT,ACTSADDT     * ADL Date
          PACK      ACTSPHTY,SP70
          CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          GOTO      SNPACT40
.
.*******  get rug scores
.
SNPACT60  PACK      KEY12,AADMNO,EPSNUMB,SP70
          CALL      RSPTQRD1
SNPACT70  CALL      RKPTQRD1
          BRANCH    OVRCD,SNPACT99          * no ADL scores exist
.
          MATCH     AADMNO,PTQRADMN         * same admission?
          GOTO      SNPACT99 IF NOT EQUAL
.
          COMPARE   EPSNUMB,PTQREPNO        * same episode?
          GOTO      SNPACT99 IF NOT EQUAL
.
          PACK      KEY5,ANSC,ANSU,PTQRCLSP,SP5
          CALL      RDCODE1                 * get ADL Type/Subtype
          BRANCH    OVRCD,SNPACT70          * not valid
.
          MATCH     "RUG",THCSCOD
          GOTO      SNPACT70 IF NOT EQUAL
.
          MOVE      "RUG",ACTSADTY        * ADL Type = RUG
          MOVE      "TOT",ACTSADST        * ADL Subtype = TOT
          MOVE      PTQRRGAA,ACTSADSC       * ADL Score
          REP       " 0",ACTSADSC
.
          MOVE      PTQRCOM1,ACTSADDT     * ADL Date
          PACK      ACTSPHTY,SP70
          MATCH     "30",CARETYPE         * only send for palliative
          GOTO      SNPACT75 IF NOT EQUAL
.
          MATCH     SP70,PTQRPCSA
          IF        !@EQUAL
            PACK      ACTSPHTY,ZERO,PTQRPCSA     * Phase type
          ENDIF
SNPACT75  CALL      WTMP5000              * write to SNAP Act.Tempfile 5
.
          GOTO      SNPACT70
.
SNPACT99  RETURN
+
.******************************************************************************
.*                                 WTMP5000                                   *
.*                   Write To The SNAP Activity Tempfile 5                    *
.******************************************************************************
WTMP5000  WRITE     TEMP5,SEQ;ACTRECID,ACTUNQNO,ACTURNO,ACTADMNO,ACTCODES:
                              ACTSEPNO,ACTSADTY,ACTSADST,ACTSADSC,ACTSADDT:
                              ACTSADTM,ACTSPHTY,SP4
          ADD       ONE,ACTCOUNT
          MOVE      ONE,SNAPFLAG            * snap activity record written
WTMP5999  RETURN
+
.******************************************************************************
.*                                 WSNP0000                                   *
.*                       Write To The SNAP Tempfile                           *
.******************************************************************************
WSNP0000  CALL      GSWC0000                * Get standard ward code
          PACK      SNPUNQNO,SP4,ADMIN,SP10
          REP       " 0",SNPUNQNO           * Unique number / admission number
          PACK      SNPURNO,URNO,SP10
          REP       " 0",SNPURNO            * U/R number
          PACK      SNPADMNO,SP4,ADMIN,SP10
          REP       " 0",SNPADMNO           * Admission number
.
          MATCH     "A ",CARECATG
          IF        @EQUAL
            CALL      LRAT0000              * get snap episode details (Cat.A)
          ELSE
            CALL      LODB0000              * get snap episode details (Cat.CC)
          ENDIF
.
WSNP9999  RETURN
+
.******************************************************************************
.*                                 LODB0000                                   *
.*             Get SNAP Details - based on care type (Cat.CC)                 *
.******************************************************************************
LODB0000  PACK      LASTDATE,CCC,CYY,CMM,CDD
          REP       " 0",LASTDATE

          MOVE      ZERO,EPSNUMB            * Reset no of episodes counter
.
          PACK      KEY8,AADMNO,SP70
          CALL      RDDSCH1                 * Read the discharge file
          IF        OVRCD<>1
            PACK      LASTDATE,DDATE
          ENDIF
.
          PACK      EPSSDATE,ADATE      * Episode start date
          PACK      EPSWDATE,ADATE      * Episode work date
.
          PACK      KEY24,AADMNO,SP70
          CALL      RDSCHCO1                * Position on & read the code
LODB1000  CALL      RDKCHCO1                * changes file
          BRANCH    OVRCD,LODB3000
.
          MATCH     AADMNO,CHADMN
          GOTO      LODB3000 IF NOT EQUAL   * Different admission number, exit
.
          MATCH     "CC",CHCATG
          GOTO      LODB3000 IF NOT EQUAL   * Different care class, exit
.
          MOVE      CHCODE,CARECLSS         * Episode care class
          MOVE      CHDATE,EPSEDATE         * Episode end date
.
          MATCH     EPSEDATE,EPSWDATE
          GOTO      LODB1000 IF EQUAL       * Ignore changes on the same day
.
          CALL      CNEX0000                * Check for change in care type
          MOVE      EPSEDATE,EPSWDATE       * New episode work date
          BRANCH    GETNEXT,LODB1000        * No change in care type, get next
.
          ADD       ONE,EPSNUMB             * Increment file episode counter
          CALL      CKCC0000                * Check for a valid sub acute code
          BRANCH    EXIT,LODB2000           * Not sub acute care type
.
          MOVE      CARECLSS,EPSCTYPE       * Care type
          CALL      WTMP9000                * Write details to SNP tempfile 9
          CALL      WSAT0000                * SNAP activity record required
.
LODB2000  MOVE      EPSEDATE,EPSSDATE       * New episode start date
          GOTO      LODB1000
.
. ----- Reached last episode -----
.
LODB3000  MOVE      ACARE,CARECLSS          * Load current care type
          IF        EPSNUMB=0
            PACK      EPSSDATE,ADATE    * New episode start date
            PACK      EPSWDATE,ADATE    * New episode work date
          ENDIF
          MOVE      LASTDATE,EPSEDATE       * Episode end date
.
          CALL      GCTY0000                * Get the care type
          CALL      CKCC0000                * Check for a valid sub acute code
          BRANCH    EXIT,LODB9999
.
          ADD       ONE,EPSNUMB             * Increment file episode counter
.
          MOVE      CARECLSS,EPSCTYPE       * Care type
          CALL      WTMP9000                * Write details to SNP tempfile 9
          CALL      WSAT0000                * SNAP activity record required
.
LODB9999  RETURN
+
.******************************************************************************
.*                                  CNEX0000              Called by: LODB0000 *
.*                  Check Next Care Class For Care Type Change                *
.******************************************************************************
CNEX0000  PACK      SAVKEY24,CHADMN,CHDATE,CHTIME,SP70
.
          MOVE      CHCODE,CARECLSS         * Episode care class
          MOVE      CHDATE,EPSEDATE         * Episode end date
          CALL      GCTY0000                * Get the care type
.
          MOVE      CARETYPE,PREVTYPE
          PACK      KEY24,CHADMN,CHDATE,Z70
          CALL      RDSCHCO1                * Position on & read the care class
          CALL      RDKCHCO1                * file
          BRANCH    OVRCD,CNEX1000
.
          MATCH     AADMNO,CHADMN
          GOTO      CNEX1000 IF NOT EQUAL   * Different admission, exit
.
          MATCH     "CC",CHCATG
          GOTO      CNEX1000 IF NOT EQUAL   * Different care class, exit
.
          MOVE      CHCODE,CARECLSS         * Episode care class
          MOVE      CHDATE,EPSEDATE         * Episode end date
          CALL      GCTY0000                * Get the care type
          GOTO      CNEX2000
.
CNEX1000  MOVE      ACARE,CARECLSS          * Load current care class
          MOVE      LASTDATE,EPSEDATE       * Episode end date
          CALL      GCTY0000                * Get the care type
.
CNEX2000  MOVE      ZERO,GETNEXT            * Care type change, display episode
          MATCH     PREVTYPE,CARETYPE
          GOTO      CNEX3000 IF NOT EQUAL   * Care type changed
.
          MOVE      ONE,GETNEXT             * No care type change, get next
.
CNEX3000  MOVE      SAVKEY24,KEY24
          CALL      RDCHCO1                 * Reposition on the care class file
.
          MOVE      CHCODE,CARECLSS         * Episode care class
          MOVE      CHDATE,EPSEDATE         * Episode end date
          CALL      GCTY0000                * Get the care type
.
CNEX9999  RETURN
+
.******************************************************************************
.*                                 LRAT0000                                   *
.*             Get SNAP Details - based on admission type (Cat.A)             *
.******************************************************************************
LRAT0000  PACK      LASTDATE,CCC,CYY,CMM,CDD
          REP       " 0",LASTDATE

          MOVE      ZERO,EPSNUMB            * Reset no of episodes counter
.
          PACK      KEY8,AADMNO,SP70
          CALL      RDDSCH1                 * Read the discharge file
          IF        OVRCD<>1
            PACK      LASTDATE,DDATE
          ENDIF
.
          PACK      KEY30,AADMNO,SP70
          CALL      RDSTRAN2
LRAT1000  CALL      RDKTRAN2
          BRANCH    OVRCD,LRAT3000
.
          MATCH     AADMNO,TADMN
          GOTO      LRAT3000 IF NOT EQUAL   * Different admission number, exit
.
          MATCH     ADATE,TDATE
          IF        @EQUAL
            MOVE      TDATE,EPSSDATE        * initial Episode start date
            MOVE      TATYPE,CARECLSS       * initial Episode care class
            GOTO      LRAT1000              * ignore adm record
          ELSE
            MOVE      TDATE,EPSEDATE        * Episode end date
          ENDIF
.
          MATCH     CARECLSS,TATYPE
          GOTO      LRAT1000 IF EQUAL       * no care class change
.
.>>>>     MATCH     EPSEDATE,EPSWDATE
.>>>>     GOTO      LRAT1000 IF EQUAL       * Ignore changes on the same day
.
          CALL      GCTY0000                * Get the care type
          ADD       ONE,EPSNUMB             * Increment file episode counter
          CALL      CKCC0000                * Check for a valid sub acute code
          BRANCH    EXIT,LRAT2000           * Not sub acute care type
.
          MOVE      CARECLSS,EPSCTYPE       * Care type
          CALL      WTMP9000                * Write details to SNP tempfile 9
          CALL      WSAT0000                * SNAP activity record required
.
LRAT2000  MOVE      EPSEDATE,EPSSDATE       * New episode start date
          MOVE      TATYPE,CARECLSS         * save Episode care class
          GOTO      LRAT1000
.
LRAT3000  MOVE      LASTDATE,EPSEDATE       * last episode date
          CALL      GCTY0000                * Get the care type
          ADD       ONE,EPSNUMB             * Increment file episode counter
          CALL      CKCC0000                * Check for a valid sub acute code
          BRANCH    EXIT,LRAT9999           * Not sub acute care type
.
          MOVE      CARECLSS,EPSCTYPE       * Care type
          CALL      WTMP9000                * Write details to SNP tempfile 9
          CALL      WSAT0000                * SNAP activity record required
.
LRAT9999  RETURN
+
.******************************************************************************
.*                                  GCTY0000                                  *
.*                            Get Episode Care Type                           *
.******************************************************************************
GCTY0000  MOVE      SP4,THCSCOD             
          PACK      KEY5,CARECATG,CARECLSS,SP70
          CALL      RDCODE1                 * Read the codes file
          BRANCH    OVRCD,GCTY9999
.
          UNPACK    THCSCOD,CARETYPE,KEY2
.
GCTY9999  RETURN
+
.******************************************************************************
.*                                 CKCC0000                                   *
.*                     Check For A Valid Sub Acute Code                       *
.******************************************************************************
CKCC0000  MOVE      ONE,EXIT                * Default not sub acute
.
          MATCH     SP3,PTCDGRPV
          IF        !@EQUAL
            MOVE      PTCDGRPV,CARECLSS
          ENDIF
.
CKCC1000  MATCH     "20",CARETYPE
+
          GOTO      CKCC9500 IF EQUAL
.
          MATCH     "09",CARETYPE
          GOTO      CKCC9500 IF EQUAL
.
          PACK      KEY5,ANSC,ANSL,ACLAIM,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,CKCC9999
.
          MATCH     ANSP,TCINDC9               * public?
          GOTO      CKCC9999 IF NOT EQUAL
.
          MATCH     "30",CARETYPE
          GOTO      CKCC9500 IF EQUAL
.
          MATCH     "10",CARETYPE
          GOTO      CKCC9500 IF EQUAL
.
          MATCH     "11",CARETYPE
          GOTO      CKCC9500 IF EQUAL
.
          GOTO      CKCC9999
.
CKCC9500  MOVE      ZERO,EXIT               * valid sub acute care type for QLD
CKCC9999  RETURN
+
.******************************************************************************
.*                                 ICEQ0000                                   *
.*        Reads the Impairment Code table and overwrites SNPIMPCD with the    *
.*        HDP Equivalent Impairment Code if one exists (i.e. not blank).      *
.******************************************************************************
ICEQ0000  PACK      KEY7,SNPIMPCD,SP70
          CALL      RDPMIMP1
          BRANCH    OVRCD,ICEQ9999
.
          MATCH     SP70,PMIMHDPE
          GOTO      ICEQ9999 IF EQUAL
.
          MOVE      PMIMHDPE,SNPIMPCD
.
ICEQ9999  RETURN
+
.******************************************************************************
.*                                 WTMP9000                                   *
.*                       Write To The SNAP Tempfile 9                         *
.******************************************************************************
WTMP9000  MOVE      EPSNUMB,FORM3
          MOVE      FORM3,SNPEPSNO          * episode number
          REP       " 0",SNPEPSNO
.
          MOVE      EPSCTYPE,SNPTYPE        * episode care type
          MOVE      EPSSDATE,SNPSTDTE       * episode start date
          MOVE      EPSEDATE,SNPENDTE       * episode end date
          MATCH     SP70,DUSD5
          IF        !@EQUAL
            PACK      KEY5,ANSD,FIVE,DUSD5
            CALL      RDCODE1
            IF        OVRCD<>1
              PACK      SNPPPRSV,THCSCOD,SP70
            ENDIF
          ENDIF
.
          CALL      DIPV0000    * get ANSNAP or patrdeaf values
          MOVE      SP70,SNPCLASO
.
          CALL      ICEQ0000    * get Impairment Code HDP Equivalent (if exists)
.
          WRITE     TEMP9A,SEQ;SNPRECID,SNPUNQNO,SNPURNO,SNPADMNO,SNPEPSNO:
                                SNPTYPE,SNPGRPCL,SNPSTDTE,SNPENDTE:
                                SNPMCPFL,SNPMCPDT,SNPPPRSV,SNPIMPCD:
                                SNPCLASO
.
          ADD       ONE,SNPCOUNT
WTMP9999  RETURN
+
.******************************************************************************
.*                                 WMEN0000               Called by: PROC0000 *
.*                   Write To The Mental Health Tempfile                      *
.******************************************************************************
WMEN0000  COMPARE   ONE,MHFLAG
          GOTO      WMEN9000 IF NOT EQUAL   * No mental health details required
.
          PACK      KEY8,AADMNO
          CALL      RDPTQMH1                * Read the QLD mental health file
          BRANCH    OVRCD,WMEN8000
.
          MATCH     AADMNO,PTQMADMN
          GOTO      WMEN8000 IF NOT EQUAL
.
          PACK      MENUNQNO,SP4,ADMIN,SP10
          REP       " 0",MENUNQNO           * Unique number / admission number
          PACK      MENURNO,URNO,SP10
          REP       " 0",MENURNO            * U/R number
          PACK      MENADMNO,SP4,ADMIN,SP10
          REP       " 0",MENADMNO           * Admission number
          MOVE      PTQMTOUA,MENTUACM       * MH type of usual accomodation
          MOVE      PTQMEMPS,MENEMPST       * MH employment status
          MATCH     SP70,PMVXEMPL
          IF        !@EQUAL
            PACK      KEY5,ANSK,ANSD,PMVXEMPL,SP70
            CALL      RDCODE1
            IF        OVRCD<>1
              MATCH     SP70,THCSCOD 
              IF        !@EQUAL
                PACK      MENEMPST,THCSCOD,SP70
              ENDIF
            ENDIF
          ENDIF
          MOVE      PTQMPSNS,MENPENST       * MH pension status
          MOVE      PTQMPRMS,MENPLMST       * MH problem status
          MOVE      PTQMRTFC,MENRTFCE       * MH referral to further care
          MOVE      PTQMMLSI,MENLGSID       * MH legal status indicator
          MOVE      PTQMPSNT,MENPSNAT       * MH prev specialised treatment
.
          WRITE     TEMP4,SEQ;MENRECID,MENUNQNO,MENURNO,MENADMNO,MENTUACM:
                              MENEMPST,MENPENST,MENPLMST,MENRTFCE,MENLGSID:
                              MENPSNAT
          ADD       ONE,MENCOUNT
          GOTO      WMEN9000
.
WMEN8000  COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS    * Print ther report header
.
          PRINT     *1,"|",AADMNO,*10,"| does not have any ":
                    "mental health details.",*80,"|"
          ADD       "1",CLNO
          MOVE      "1",ERRORFLG            * Error found
.
WMEN9000  MOVE      "0",MHFLAG              * No mental health details required
WMEN9999  RETURN
+
.******************************************************************************
.*                                 WMOR0000               Called by: PROC0000 *
.*                      Write To The Morbidity Tempfile                       *
.******************************************************************************
WMOR0000  PACK      MORUNQNO,SP4,ADMIN,SP10
          REP       " 0",MORUNQNO           * Unique number / admission number
          PACK      MORURNO,URNO,SP10
          REP       " 0",MORURNO            * U/R number
          PACK      MORADMNO,SP4,ADMIN,SP10
          REP       " 0",MORADMNO           * Admission number
.
          PERFORM   DISEASE,GDIS0000,GOPR0000
.                           Disease, Operation
          BRANCH    EXIT,WMOR9999
.
          ADD       ONE,PASS                * Increment disease/operation count
.
          IF        DOYR2025 = 1
            WRITE     TEMP6,SEQ;MORRECID,MORUNQNO,MORURNO,MORADMNO,MORDICID:
                                MORICDC,MORICDD,MORPRODT,MORCONFG,MORONSET:
                                MORMRINT,MOROCOMI,MORBDCID
          ELSE
            WRITE     TEMP6,SEQ;MORRECID,MORUNQNO,MORURNO,MORADMNO,MORDICID:
                                MORICDC,MORICDD,MORPRODT,MORCONFG,MORONSET:
                                MORMRINT,MOROCOMI
          ENDIF
.
          ADD       ONE,MORCOUNT
WMOR9999  RETURN
+
.******************************************************************************
.*                                 PSUM0000               Called by: PROC0000 *
.*                         Print The Summary Details                          *
.******************************************************************************
PSUM0000  COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS    * Print ther report header
.
          PRINT     *1,"------------------------------------------":
                       "--------------------------------------" 
          PRINT     *N,*N,*1,"Hospital Facility Number : ",FACNUM,*N,*N:
              *1,"Number of Patient Records Extracted       : ",PATCOUNT,*N:
              *1,"Number of Admission Records Extracted     : ",ADMCOUNT,*N:
              *1,"Number of Mental Health Records Extracted : ",MENCOUNT,*N:
              *1,"Number of Activity Records Extracted      : ",ACTCOUNT,*N:
              *1,"Number of Morbidity Records Extracted     : ",MORCOUNT,*N:
              *1,"Number of Palliative Records Extracted    : ",PALCOUNT,*N:
              *1,"Number of DVA Records Extracted           : ",DVACOUNT,*N:
              *1,"Number of SNP Records Extracted           : ",SNPCOUNT,*N,*N:
              *1,"Total Number of Patients Extracted        : ",TOTCOUNT,*N,*N:
                    *1,"*** End of Report ***"
          COMPARE   ONE,ERRFLAG
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,*V2LON,"Errors Found ";
            CALL      HITENTER
          ENDIF
PSUM9999  RETURN
+
.******************************************************************************
.*                                 CWUC0000               Called by: WADM0000 *
.*                         Check The Ward/Unit Code                & WACT0000 *
.******************************************************************************
CWUC0000  BRANCH    MHFLAG,CWUC9999
.
          MOVE      "0",MHFLAG              * No mental health details required
          MATCH     PYAA,THCSCOD
          GOTO      CWUC9999 IF LESS        * Ward/unit code < PYAA
.
          MATCH     THCSCOD,PYZZ
          GOTO      CWUC9999 IF LESS    * PYZZ < Ward/unit code
.
          MOVE      "1",MHFLAG              * Mental health details required
CWUC9999  RETURN
+
.******************************************************************************
.*                                 HEAD0000               Called by: PSUM0000 *
.*                          Print The Report Header                & WMEN0000 *
.******************************************************************************
HEAD0000  CALL      HEAD80                  * Print the report header
          IF        IBCNMHOS=1
            PRINT     *N,*27,"Hospital : ",PTHSNAME,*N;
          ENDIF
.
          PRINT     *N:
                    *27,"Starting  Date : ",DISPSTRT,*N:
                    *27,"Finishing Date : ",DISPFINI,*N
          ADD       "4",CLNO
          PRINT     *N,"------------------------------------------":        
                       "--------------------------------------": 
                    *N,*1,"| ADM No ",*10,"|   Description ",*80,"|":
                    *N,"------------------------------------------": 
                       "--------------------------------------"   
HEAD9999  RETURN
+
.******************************************************************************
.*                                 GDIS0000               Called by: WMOR0000 *
.*                           Get The Disease Codes                            *
.******************************************************************************
GDIS0000  PACK      KEY9,PTEDCODE,SP10
          CALL      RDPTICD1                * Read ICD file based on Disch dte
.
.         Record found. Check which ICD file was read. If it was ICD9 then 
.         get mapped ICD10 code and read ICD10 to ensure that code exists.
.         If code was found on ICD10 V2 or V3 file then continue processing.
.
          IF        OVRCD=0
            IF        ICDRDVER=1
              MATCH     SP9,DICD10CD        * Found in ICD9
              GOTO      GDIS9500 IF EQUAL   * If no mapped ICD10 code then exit
              PACK      KEY9,DICD10CD,SP10  * Get mapped ICD10 code
              GOTO      GDIS1000            * Go to read ICD10 
            ELSE
              GOTO      GDIS1500            * Found in ICD10, continue
            ENDIF
          ENDIF
. 
.         Record not found. Check which ICD file was read. If it was ICD9 then
.         exit. If code was not found on ICD10 file then try ICD9. If found in
.         ICD9 then get mapped ICD10 code and read ICD10 to ensure that it
.         exists.
.
          IF        ICDRDVER=1
            GOTO      GDIS9500              * Not Found in ICD9, exit
          ELSE
            CALL      RD10T9D1              * Not found in ICD10, try ICD9
            BRANCH    OVRCD,GDIS9500        * Not found in ICD9, exit
            PACK      KEY9,DICD10CD,SP10    * Get mapped ICD10 code
          ENDIF
.
GDIS1000  CALL      RDPT10D1                * Read ICD10 with mapped code (ICD9)
          BRANCH    OVRCD,GDIS9500          * Code not found, exit
. 
GDIS1500  MOVE      "PD ",MORDICID          * Principal disease code
          IF        PASS<>1
            MOVE      "OD ",MORDICID        * Other disease code
            MATCH     "2",PT0DACRQ
            IF        @EQUAL
              MOVE      "EX ",MORDICID      * External disease code
            ENDIF
.
            MATCH     "6",PT0DACRQ
            IF        @EQUAL
              MOVE      "EX ",MORDICID      * External disease code
            ENDIF
.
            MATCH     "7",PT0DACRQ
            IF        @EQUAL
              MOVE      "EX ",MORDICID      * External disease code
            ENDIF
.
            MATCH     "8",PT0DACRQ
            IF        @EQUAL
              MOVE      "EX ",MORDICID      * External disease code
            ENDIF
.
            MATCH     "4",PT0DACRQ
            IF        @EQUAL
              MOVE      "M  ",MORDICID      * Morphology disease code
            ENDIF
.
            MATCH     "A",PT0DACRQ
            IF        @EQUAL
              MOVE      "EX ",MORDICID      * Activity code          
            ENDIF
.
            MATCH     "P",PT0DACRQ
            IF        @EQUAL
              MOVE      "EX ",MORDICID      * Place code             
            ENDIF
.
          ELSE
            MATCH     ANSA,PT0DADTP
            IF        @EQUAL
              PRINT     *1,"|",AADMNO,*10,"| An asterisk code can never be the":
                        " principal diagnosis.",*80,"|"
            ENDIF
          ENDIF
          GOTO      GDIS3000
.
GDIS3000  SCAN      "PD",MORDICID
          GOTO      GDIS4000 IF EQUAL       * Principal disease code
.
          SCAN      "OD",MORDICID
          GOTO      GDIS5000 IF NOT EQUAL   * No an other disease code
.
GDIS4000  RESET     KEY9
          MOVE      ONE,FORM2
          REPEAT
            MATCH     KEY9,CODEARY[FORM2]
            GOTO      GDIS9500 IF EQUAL     * Duplicate disease code, error
.
            ADD       ONE,FORM2
          UNTIL     FORM2>PASS
          PACK      CODEARY[PASS],KEY9,SP9
.
GDIS5000  STORE     KEY9,PASS,DCODE1,DCODE2,DCODE3,DCODE4,DCODE5,DCODE6:
                              DCODE7,DCODE8,DCODE9,DCODE10,DCODE11,DCODE12:
                              DCODE13,DCODE14,DCODE15,DCODE16,DCODE17,DCODE18:
                              DCODE19,DCODE20,DCODE21,DCODE22,DCODE23,DCODE24:
                              DCODE25,DCODE26,DCODE27,DCODE28,DCODE29,DCODE30:
                              DCODE31,DCODE32,DCODE33,DCODE34,DCODE35,DCODE36:
                              DCODE37,DCODE38,DCODE39,DCODE40,DCODE41,DCODE42:
                              DCODE43,DCODE44,DCODE45,DCODE46,DCODE47,DCODE48:
                              DCODE49,DCODE50,DCODE51,DCODE52,DCODE53,DCODE54:
                              DCODE55,DCODE56,DCODE57,DCODE58,DCODE59,DCODE60:
                              DCODE61,DCODE62,DCODE63,DCODE64,DCODE65,DCODE66:
                              DCODE67,DCODE68,DCODE69,DCODE70,DCODE71,DCODE72:
                              DCODE73,DCODE74,DCODE75,DCODE76,DCODE77,DCODE78:
                              DCODE79,DCODE80,DCODE81,DCODE82,DCODE83,DCODE84:
                              DCODE85,DCODE86,DCODE87,DCODE88,DCODE89,DCODE90:
                              DCODE91,DCODE92,DCODE93,DCODE94,DCODE95,DCODE96:
                              DCODE97,DCODE98,DCODE99
.
          REP       ". ",KEY9
          REP       "/ ",KEY9
          SQUEEZE   KEY9
          PACK      KEY9,KEY9,SP10
          PACK      MORICDC,KEY9,SP9        * Disease code
.
          MOVE      PTEDOSET,MORONSET       * Diagnosis onset type
.
.         Report the diagnosis cluster id after 2025
.
          MATCH     "1",MRCNDCID              * Using Diagnosis Clister Id ?
          IF        @EQUAL
            SQUEEZE   PTEDDCID
            PACK      MORBDCID,PTEDDCID,SP70  * Diag clister id - Left Justify
          ELSE
            PACK      MORBDCID,NINE,SP70      * Diag clister id
          ENDIF
.
GDIS9000  MOVE      ZERO,EXIT
          GOTO      GDIS9999
.
GDIS9500  MOVE      ONE,EXIT
GDIS9999  RETURN
+
+
.******************************************************************************
.*                                 VALD0000               Called by: WMOR0000 *
.*                          Validate the Disease Codes                        *
.******************************************************************************
.
VALD0000  MOVE      ZERO,ASTREQFL
          MOVE      ZERO,EXTCAUFL      * External Cause Flag
.
          MOVE      ONE,FORM2
VALD1000  MOVE      SP70,KEY9
          LOAD      KEY9,FORM2,DCODE1,DCODE2,DCODE3,DCODE4,DCODE5,DCODE6:
                               DCODE7,DCODE8,DCODE9,DCODE10,DCODE11,DCODE13:
                               DCODE14,DCODE15,DCODE16,DCODE17,DCODE18,DCODE19:
                               DCODE20,DCODE21,DCODE22,DCODE23,DCODE24,DCODE25:
                               DCODE26,DCODE27,DCODE28,DCODE29,DCODE30:
                               DCODE31,DCODE32,DCODE33,DCODE34,DCODE35,DCODE36:
                               DCODE37,DCODE38,DCODE39,DCODE40,DCODE41,DCODE42:
                               DCODE43,DCODE44,DCODE45,DCODE46,DCODE47,DCODE48:
                               DCODE49,DCODE50,DCODE51,DCODE52,DCODE53,DCODE54:
                               DCODE55,DCODE56,DCODE57,DCODE58,DCODE59,DCODE60:
                               DCODE61,DCODE62,DCODE63,DCODE64,DCODE65,DCODE66:
                               DCODE67,DCODE68,DCODE69,DCODE70,DCODE71,DCODE72:
                               DCODE73,DCODE74,DCODE75,DCODE76,DCODE77,DCODE78:
                               DCODE79,DCODE80,DCODE81,DCODE82,DCODE83,DCODE84:
                               DCODE85,DCODE86,DCODE87,DCODE88,DCODE89,DCODE90:
                               DCODE91,DCODE92,DCODE93,DCODE94,DCODE95,DCODE96:
                               DCODE97,DCODE98,DCODE99
          ADD       ONE,FORM2
.
          CALL      RDPTICD1
          IF        OVRCD=1
            IF        ICDRDVER=1
              CALL      RDPT10D1            * Not found in ICD9, read ICD10
              BRANCH    OVRCD,VALD9000      * Also not found in ICD10, exit
            ELSE
              GOTO      VALD9000            * Not fnd in ICD10 on frst read,exit
            ENDIF
          ENDIF
.
          IF        ASTREQFL=1
            MATCH     ANSA,PT0DADTP
            IF        @EQUAL
              MOVE      ZERO,ASTREQFL
            ENDIF
          ENDIF
.
          MATCH     "1",DDAGGER          * Requires an asterisk code to follow
          IF        @EQUAL
            MOVE      ONE,ASTREQFL 
          ENDIF
.
          MATCH     "2",DDAGGER
          IF        @EQUAL
            MOVE      ONE,ASTREQFL         
          ENDIF
.
          CMATCH    ANSS,KEY9           * External cause code required
          IF        @EQUAL
            MOVE      ONE,EXTCAUFL
          ENDIF
.
          CMATCH    ANST,KEY9
          IF        @EQUAL
            MOVE      ONE,EXTCAUFL
          ENDIF
.
          CMATCH    ANSV,KEY9          * External cause code found
          GOTO      VALD3000 IF EQUAL
.
          CMATCH    ANSW,KEY9
          GOTO      VALD3000 IF EQUAL
.
          CMATCH    ANSX,KEY9
          GOTO      VALD3000 IF EQUAL
.
          CMATCH    ANSY,KEY9
          GOTO      VALD1000 IF NOT EQUAL
.
VALD3000  MOVE      ZERO,EXTCAUFL
.
          GOTO      VALD1000
.
VALD9000  IF        EXTCAUFL=1
            MOVE     "  Requires an External Cause Code.",ERRDESC
            CALL     PRINTERR
          ENDIF
.
          IF        ASTREQFL=1
            MOVE     "  Requires an asterisk code.",ERRDESC
            CALL     PRINTERR
          ENDIF
.
VALD9999  RETURN
+
.******************************************************************************
.*                                 GOPR0000               Called by: WMOR0000 *
.*                          Get The Operation Codes                           *
.******************************************************************************
GOPR0000  PACK      KEY9,PTEOCODE,SP10
          CALL      RDPTICO1                * Read ICD file based on Disch dte
.
.         Record found. Check which ICD file was read. If it was ICD9 then
.         get mapped ICD10 code and read ICD10 to ensure that code exists.
.         If code was found on ICD10 V2 or V3 file then continue processing.
.
          IF        OVRCD=0
            IF        ICDRDVER=1
              MATCH     SP9,OICD10CD        * Found in ICD9
              GOTO      GOPR9500 IF EQUAL   * If no mapped ICD10 code then exit
              PACK      KEY9,OICD10CD,SP10  * Get mapped ICD10 code
              GOTO      GOPR1000            * Go to read ICD10
            ELSE
              GOTO      GOPR1500            * Found in ICD10, continue
            ENDIF
          ENDIF
.
.         Record not found. Check which ICD file was read. If it was ICD9 then
.         exit. If code was not found on ICD10 file then try ICD9. If found in
.         ICD9 then get mapped ICD10 code and read ICD10 to ensure that it
.         exists.
.
          IF        ICDRDVER=1
            GOTO      GOPR9500              * Not Found in ICD9, exit
          ELSE
            CALL      RD10T9O1              * Not found in ICD10, try ICD9
            BRANCH    OVRCD,GOPR9500        * Not found in ICD9, exit
            PACK      KEY9,OICD10CD,SP10    * Get mapped ICD10 code
          ENDIF
.
GOPR1000  CALL      RDPT10O1                * Read ICD10 with mapped code (ICD9)
          BRANCH    OVRCD,GOPR9500          * Code not found, exit
.
GOPR1500  MOVE      "PR ",MORDICID          * Operation code
          GOTO      GOPR3000
.
GOPR3000  REP       "- ",KEY9
          REP       ". ",KEY9
          SQUEEZE   KEY9
          PACK      KEY9,KEY9,SP10
          PACK      MORICDC,KEY9,SP9        * Operation code
.
          MATCH     "I",PTEOTYPE
          IF        @EQUAL
            MOVE      "1",MORCONFG
            MOVE      ONE,CONTFLAG          * Contract flag - yes
          ENDIF
.
          MATCH     "N",PTEOTYPE
          IF        @EQUAL
            MOVE      "2",MORCONFG
            MOVE      ONE,CONTFLAG          * Contract flag - yes
          ENDIF
.
. ------ check procedure code range, procedure date must be present for these
. ------ block range
.
          CALL      BLOK0000                                           *I-60903
          BRANCH    EXIT,GOPR9999                                      *I-60903
.
GOPR9000  MOVE      ZERO,EXIT
          GOTO      GOPR9999
.
GOPR9500  MOVE      ONE,EXIT
GOPR9999  RETURN
+
.******************************************************************************
.*                                 BLOK0000               Called by: GOPR0000 *
.*                        Morbidity Date Block Ranges                         *
.******************************************************************************
BLOK0000  MOVE      ZERO,EXIT
          MOVE      PTEODATE,MORPRODT       * setup Operation Date
          MOVE      PT0OBLKN,DIM4
          SQUEEZE   DIM4
          MOVE      DIM4,BLOKNO
.
.                                           * Procedure Codes within specified
.                                           * blocks MUST have a Procedure or
.                                           * Operation date.
.
.                                           * Check if this procedure code is in
.                                           * one of the Blocks.
.
          COMPARE   "1",BLOKNO              * Block 1-1059
          IF        !@LESS
            COMPARE   "1060",BLOKNO
            GOTO      BLOK4000 IF LESS      * Yes - in this block - check date
          ENDIF
.
          COMPARE   "1062",BLOKNO              * Block 1062-1821
          IF        !@LESS
            COMPARE   "1822",BLOKNO
            GOTO      BLOK4000 IF LESS      * Yes - in this block - check date
          ENDIF
.
          COMPARE   "1825",BLOKNO              * Block 1825-1866
          IF        !@LESS
            COMPARE   "1867",BLOKNO
            GOTO      BLOK4000 IF LESS      * Yes - in this block - check date
          ENDIF
.
          COMPARE   "1869",BLOKNO              * Block 1869-1892
          IF        !@LESS
            COMPARE   "1893",BLOKNO
            GOTO      BLOK4000 IF LESS      * Yes - in this block - check date
          ENDIF
.
          COMPARE   "1894",BLOKNO              * Block 1894-1912
          IF        !@LESS
            COMPARE   "1913",BLOKNO
            GOTO      BLOK4000 IF LESS      * Yes - in this block - check date
          ENDIF
.
          COMPARE   "1920",BLOKNO              * Block 1920-2016
          IF        !@LESS
            COMPARE   "2017",BLOKNO
            GOTO      BLOK4000 IF LESS      * Yes - in this block - check date
          ENDIF
.
          GOTO      BLOK9999                * Accept - not in one of the Blocks
.
BLOK4000  MATCH     SP8,MORPRODT
          GOTO      BLOK9999 IF NOT EQUAL
.
.                                             Read Med. Records MBS Details
.                                             if Operation date is blank
          MOVE      SP8,MMDATE              * reset date field         *I-60905
          PACK      KEY11,DPTEOADM,DPTEOUNQ *                          *I-60905
          CALL      RDMMBS1                                            *I-60905
          MOVE      MMDATE,MORPRODT         * Move date if it exists   *I-60905
.
          MATCH     SP8,MORPRODT            * Re-test for blank date   *I-60905
          GOTO      BLOK9999 IF NOT EQUAL                              *I-60905
.
.
.
          MATCH     "PR ",MORDICID
          IF        @EQUAL
.                                  Message='...Procedure date must not be NULL.'
            MATCH     "1",PT0ODTMN     * Is Date/Time of Proc Non-Mandatory?
            IF        !@EQUAL
.
.             date/time of proc is mandatory
.
              PACK      ERRDESC,PROCERR1,PROCERR2
              CALL      PRINTERR
            ENDIF
          ELSE
.                                  Message='Error. Procedure Date Blank.'
            MOVE      PROCDTER,ERRDESC
            CALL      PRINTERR
          ENDIF
.
......    MOVE      ONE,EXIT   * commented out for CAR 312808
.
BLOK9999  RETURN
+
.******************************************************************************
.*                                 RJUS0000               Called by: WHHD0000 *
.*                           Right justify the code                           *
.******************************************************************************
RJUS0000  PACK      RJUSCODE,SP5
          RESET     LJUSCODE,JUSTNO
          MOVE      ZERO,CHRCOUNT
RJUS1000  CMATCH    SP1,LJUSCODE
          GOTO      RJUS2000 IF NOT EQUAL
.
          ADD       ONE,CHRCOUNT
          BUMP      LJUSCODE,-1
          GOTO      RJUS2000 IF EOS
.
          COMPARE   JUSTNO,CHRCOUNT
          GOTO      RJUS1000 IF LESS
.
RJUS2000  RESET     LJUSCODE
          CLEAR     RJUSCODE
          RESET     RJUSCODE,CHRCOUNT
          APPEND    LJUSCODE,RJUSCODE
          RESET     RJUSCODE
.
RJUS9000  MOVE      ZERO,EXIT
RJUS9999  RETURN
.
.******************************************************************************
.*                                 PRINTERR               Called by: PROC0000 *
.*                              Print error report                            *
.******************************************************************************
PRINTERR  MOVE      ONE,ERRFLAG
.
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
.
          PRINT     *1,"|",AADMNO,*10,"| ",ERRDESC,*80,"|"          *C-60903
          PACK      ERRDESC,SP50,SP10
          ADD       ONE,CLNO
.
          RETURN
+
.******************************************************************************
.*                                 CARY0000               Called by: PROC0000 *
.*                                Clear Array                                 *
.******************************************************************************
CARY0000  MOVE      NINETY9,ARYCOUNT
.         MOVE      TEN5,ARYCOUNT
          MOVE      ONE,FORM2
          REPEAT
            MOVE      SP9,CODEARY[FORM2]    * Clear tempfile
            ADD       ONE,FORM2
          UNTIL     FORM2>=ARYCOUNT
          MOVE      ONE,ARYCOUNT            * Reset array counter
CARY9999  RETURN
+
.******************************************************************************
.*                                 UPHD0000               Called by: PROC0000 *
.*                          Update Tempfile Headers                           *
.******************************************************************************
UPHD0000  MOVE      PATCOUNT,PATNOREC
          REP       " 0",PATNOREC
          MOVE      ADMCOUNT,ADMNOREC
          REP       " 0",ADMNOREC
          MOVE      MENCOUNT,MENNOREC
          REP       " 0",MENNOREC
          MOVE      ACTCOUNT,ACTNOREC
          REP       " 0",ACTNOREC
          MOVE      MORCOUNT,MORNOREC
          REP       " 0",MORNOREC
          MOVE      PALCOUNT,PALNOREC
          REP       " 0",PALNOREC
          MOVE      DVACOUNT,DVANOREC
          REP       " 0",DVANOREC
          MOVE      SNPCOUNT,SNPNOREC
          REP       " 0",SNPNOREC
.
          WRITAB    TEMP2D,ZERO;*25,PATNOREC
.
          WRITAB    TEMP4D,ZERO;*25,ADMNOREC
          WRITAB    TEMP4,ZERO;*25,MENNOREC
          WRITAB    TEMP5,ZERO;*25,ACTNOREC
          WRITAB    TEMP6,ZERO;*25,MORNOREC
          WRITAB    TEMP7,ZERO;*25,PALNOREC
          WRITAB    TEMP8,ZERO;*25,DVANOREC
          WRITAB    TEMP9A,ZERO;*25,SNPNOREC
UPHD9999  RETURN
+
.*******************************************************************************
. Get ANSNAP Program for this visit
.*******************************************************************************
DIPV0000  MOVE      "2",SNPCLASO     * default to 2=No
          MATCH     "20",CARETYPE
          GOTO      DIPV0500 IF EQUAL
.
          MATCH     "09",CARETYPE
          GOTO      DIPV0500 IF EQUAL
.
          MATCH     "10",CARETYPE
          GOTO      DIPV0500 IF EQUAL
.
          MATCH     "30",CARETYPE
          GOTO      DIPV0500 IF EQUAL
.
          GOTO      DIPV9999
.
DIPV0500  MOVE      ANSU,SNPMCPFL      * default MCDP flag to U
          PACK      KEY31,DURNO,SP70             * Read thru Program Details
          CALL      RDPMUPG1
DIPV1000  CALL      RKPMUPG1
          BRANCH    OVRCD,DIPV5000               * EOF Reached
.
          MATCH     DURNO,PMUGURNO
          GOTO      DIPV5000 IF NOT EQUAL        * EOR Reached
.
          MATCH     PMUGATYP,ATYPE               * Check Admiss Type matches
          GOTO      DIPV1000 IF NOT EQUAL
.
          MATCH     PMUGSDAT,ADATE        * Program starts after this adm?
          GOTO      DIPV1000 IF LESS
.
          MATCH     SP70,PMUGENDD
          IF        !@EQUAL
            MATCH     ADATE,PMUGENDD      * Did program end before this adm?
            GOTO      DIPV1000 IF LESS
          ENDIF
.
          MATCH     SP70,PMUGCLAM                * Check Claim Code matches
          IF        !@EQUAL
            MATCH     PMUGCLAM,ACLAIM
            GOTO      DIPV1000 IF NOT EQUAL
          ENDIF
.
          MATCH     SP70,PMUGFUND                * Check Health Fund matches
          GOTO      DIPV2000 IF EQUAL
.
          MATCH     PMUGFUND,AFUNDH             * Check Health Fund matches
          GOTO      DIPV1000 IF NOT EQUAL

          PACK      KEY14,AFUNDH,AFNDTB,SP10
          CALL      RDFUND1
          BRANCH    OVRCD,DIPV1000
.
          MATCH     PMUGTABT,PTHFBCAT            * Check Health Fund Table Type
          GOTO      DIPV1000 IF NOT EQUAL
.
DIPV2000  PACK      SNPMCPFL,ANSN               * default care plan flag to no
. don't include mult disc care plan if outside visit dates CAR 293874
          MATCH     ADATE,PMUGRPDT
          IF        @LESS
            MOVE      SP70,PMUGRPDT
          ENDIF
.
          MATCH     PMUGRPDT,DDATE
          IF        @LESS
            MOVE      SP70,PMUGRPDT
          ENDIF
.
          PACK      SNPMCPDT,PMUGRPDT           * Multi Disc Care Plan Date
          MATCH     SP70,PMUGRPDT
          IF        !@EQUAL
            PACK      SNPMCPFL,ANSY             * if date entered, set yes
          ENDIF
.
          PACK      KEY31,PMUGURNO,PMUGATYP,PMUGCLAM,PMUGFUND,PMUGTABT:
                          PMUGEDAT,SP70
          CALL      RDPMAPG1
          IF        OVRCD<>1
            PACK      SNPIMPCD,PMAGICDE,SP70      * impairment code
          ENDIF
.
          MATCH     PMAGSNAP,SP70
          GOTO      DIPV9000 IF EQUAL
.
          PACK      KEY5,PMAGSNAP,PMAGVERS,SP70
          CALL      RDPMSNP1
          BRANCH    OVRCD,DIPV9000
.
          PACK      SNPTYPE,PMSNANSE,SP70
          MOVE      "2",SNPCLASO     * default to 2=No
          MATCH     "1",PMAGASSO
          IF        @EQUAL
            MOVE      "1",SNPCLASO
          ENDIF
.
          GOTO      DIPV9000
.
DIPV5000  PACK      KEY10,AADMNO,EPSNUMB,SP70
          CALL      RDPTRDE1
          BRANCH    OVRCD,DIPV9000
.
          PACK      SNPMCPDT,PTRDFADT           * Multi Disc Care Plan Date
.
          PACK      SNPMCPFL,ANSN               * default care plan flag to no
          MATCH     SP70,PTRDFADT
          IF        !@EQUAL
            PACK      SNPMCPFL,ANSY             * if date entered, set yes
          ENDIF
.
          PACK      SNPIMPCD,PTRDIMPR,SP70      * impairment code
.
          MOVE      "2",SNPCLASO     * default to 2=No
          MATCH     "1",PTRDUSRF
          IF        @EQUAL
            MOVE      "1",SNPCLASO
          ENDIF
.
          MATCH     PTRDSNAP,SP70
          IF        !@EQUAL
            MATCH     PTRDVERS,SP70
            IF        !@EQUAL
              PACK       KEY5,PTRDSNAP,PTRDVERS,SP70
              CALL       RDPMSNP1
              BRANCH     OVRCD,DIPV9000
.
              MATCH     PMSNHCPE,SP70
              IF        !@EQUAL
                PACK      SNPTYPE,PMSNHCPE,SP70
              ENDIF 
.
            ENDIF
          ENDIF
.
DIPV9000  MATCH     "20",CARETYPE                * Rehab
          GOTO      DIPV9999 IF NOT EQUAL
.
          MATCH     SP70,SNPIMPCD                * impairment code
          GOTO      DIPV9999 IF NOT EQUAL
.
          MATCH     ADATE,DDATE   * not required for day cases
          GOTO      DIPV9999 IF EQUAL
.
          CLEAR     ERRDESC
          APPEND    "H810 - SNAP type Rehab. but primary ",ERRDESC
          APPEND    "impairment code is missing",ERRDESC
          RESET     ERRDESC
          CALL      PRINTERR
.
DIPV9999  RETURN
+
.******************************************************************************
.*                                  KHOS0000              Called by: ML0000   *
.*                            Enter Hospital id                               *
.******************************************************************************
KHOS0000  MOVE      SP70,PTHSHOSP
          COMPARE   ONE,IBCNMHOS
          IF        !@EQUAL
            KEYIN     *P1:9,"Hospital",KEY1;
            GOTO      KHOS9999
          ENDIF
.
          MOVE      TEN2,CVERT
          DISPLAY   *P1:CVERT,*EL,"Hospital Id : ";
          MOVE      TEN2,ECOL
          MOVE      CVERT,EVERT
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND           * Not Mandatory
.
          CALL      PATHSPKY
          BRANCH    EXIT,KHOS3000,KHOS9500
.
KHOS2000  DISPLAY   *P20:12,*V2LON,PTHSNAME;
          GOTO      KHOS9999
.
KHOS3000  MOVE      "All Hospitals",PTHSNAME
          MOVE      SP10,PTHSHOSP
          MOVE      SP70,PTHSHSID
          MOVE      ZERO,EXIT
          GOTO      KHOS9999
.
KHOS9500  MOVE      ONE,EXIT
KHOS9999  RETURN
+
.==============================================================================
.
          INC       STD001IO
.
          INC       CALCDAYS                * Calculate date
          INC       CALCAGE                 * Calculate age
          INC       EXCLNEWB
          INC       GETDRG                  * Get DRG & MDC for admission
          INC       PATCOMN3                * Keyin the period
          INC       PATHSPKY
.
          INC       PATHSPIO/INC
          INC       IBAPOSIO/INC            * Post code
          INC       MEHHONIO/INC
          INC       PATFIMIO/INC
          INC       PMSCCDIO/INC
          INC       PMSUPGIO/INC
          INC       PMSAPGIO/INC
          INC       PMSSNPIO/INC
          INC       PAT3MIIO/INC            * ICD9 mapping file
          INC       PATASFIO/INC
          INC       PATCFAIO/INC
          INC       PATCHCIO/INC
          INC       PATCODIO/INC            * Codes file
          INC       PATDADIO/INC            * Admin/disch transfer destin. file
          INC       PATVADIO/INC            * Admin/disch transfer destin. file
          INC       PATCT1IO/INC            * Catchment codes
          INC       PATDO1IO/INC            * Doctor file
          INC       PATDRGIO/INC            * Date range file
          INC       PATDSCIO/INC            * Discharge file
          INC       PATECDIO/INC            * Patient episode disease file
          INC       PATECOIO/INC            * Patient episode operation file
          INC       PATFN1IO/INC            * Health fund file
          INC       PATFX1IO/INC
          INC       PATICUIO/INC            * ICU
          INC       PATICDIO/INC            * ICD disease file
          INC       PATICOIO/INC            * ICD operation file
          INC       PATLINIO/INC
          INC       PATMA1IO/INC            * Master file
          INC       PMSPX2IO/INC
          INC       PMSQERIO/INC
          INC       PMSIMPIO/INC            * Impairment Code
          INC       PATMMBIO/INC            * Med Records MBS Details  *I-60905
          INC       PATPGRIO/INC
          INC       PATVISIO/INC            * Visit file
          INC       PATWVEIO/INC            * Veterans affairs claims
          INC       HL7BMTIO/INC
.         INC       HL7BMTMA
          INC       PATMI1IO/INC            * Admission file
          INC       PMSVX1IO/INC            * visit extension file
          INC       PATQMHIO/INC            * QLD mental health file
          INC       PATRDEIO/INC            * Rehab file
          INC       PATQRDIO/INC            * Rehab file
          INC       PATTRNIO/INC            * Transfer file
          INC       PATWR1IO/INC            * Ward file
          INC       PMSEDGIO/INC       * Effective DRG Dates
.         INC       HL7BMTTR
          INC       GETEFDRG
.
          INC       GCCARD00/PBL
+
.

