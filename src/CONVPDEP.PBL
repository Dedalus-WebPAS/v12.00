.*****************************************************************************
.* System    :   Patient Management System                                   *
.* Program   :   CONVPDEP                                                    *
.* Desc      :   Data Migration Program to upload printer departments from   *
.*               a third party legacy system into webPAS.                    *
.*****************************************************************************
.* Date      :   15/06/2011                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program will loop through the convpdep.txt file and    *
.*               for each valid record found, it will write a new ibadptaf   *
.*               record.  For each non-blank valid printer code, it will     *
.*               write a record to ibapddaf.                                 *
.* Mods      :                                                               *
.*        V10.04.01  17/03/2014  Steve Armstrong   CAR 296128                *
.*                   Added display of warning message if error records found.*
.*****************************************************************************
.*        V10.02.00  15/06/2011  Steve Armstrong   CAR 239574                *
.*                   Created program                                         *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       IBADPTFD/INC
          INC       IBAPDDFD/INC
          INC       IBAPRTFD/INC
          INC       PATHSPFD/INC
.
.         Printer Department upload file layout - convpdep.txt
.
PRDEPUPL  FILE      HL7, FIXED=4000         * Pipe delimited upload file
.                                             4096 is maximum
.
.         Fields must be pipe delimited and in the following sequence.
.         Field lengths are irrelevant other than the fact that where
.         a field is longer than allowed, the extra data will be ignored.
.
PDEPDEPT  DIM       6       1     * Department Code          (ibadptaf.ibdpdept)
PDEPDESC  DIM       80      7     * Department Description   (ibadptaf.ibdpdesc)
PDEPHOSP  DIM       3      87     * Hospital Code (pathspaf) (ibadptaf.ibdphosp)
PDEPPR01  DIM       6      90     * Printer 1     (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR02  DIM       6      96     * Printer 2     (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR03  DIM       6     102     * Printer 3     (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR04  DIM       6     108     * Printer 4     (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR05  DIM       6     114     * Printer 5     (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR06  DIM       6     120     * Printer 6     (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR07  DIM       6     126     * Printer 7     (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR08  DIM       6     132     * Printer 8     (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR09  DIM       6     138     * Printer 9     (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR10  DIM       6     144     * Printer 10    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR11  DIM       6     150     * Printer 11    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR12  DIM       6     156     * Printer 12    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR13  DIM       6     162     * Printer 13    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR14  DIM       6     168     * Printer 14    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR15  DIM       6     174     * Printer 15    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR16  DIM       6     180     * Printer 16    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR17  DIM       6     186     * Printer 17    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR18  DIM       6     192     * Printer 18    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR19  DIM       6     198     * Printer 19    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR20  DIM       6     204     * Printer 20    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR21  DIM       6     210     * Printer 21    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR22  DIM       6     216     * Printer 22    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR23  DIM       6     222     * Printer 23    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR24  DIM       6     228     * Printer 24    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR25  DIM       6     234     * Printer 25    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR26  DIM       6     240     * Printer 26    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR27  DIM       6     246     * Printer 27    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR28  DIM       6     252     * Printer 28    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR29  DIM       6     258     * Printer 29    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR30  DIM       6     264     * Printer 30    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR31  DIM       6     270     * Printer 31    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR32  DIM       6     276     * Printer 32    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR33  DIM       6     282     * Printer 33    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR34  DIM       6     288     * Printer 34    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR35  DIM       6     294     * Printer 35    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR36  DIM       6     300     * Printer 36    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR37  DIM       6     306     * Printer 37    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR38  DIM       6     312     * Printer 38    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR39  DIM       6     318     * Printer 39    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR40  DIM       6     324     * Printer 40    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR41  DIM       6     330     * Printer 41    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR42  DIM       6     336     * Printer 42    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR43  DIM       6     342     * Printer 43    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR44  DIM       6     348     * Printer 44    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR45  DIM       6     354     * Printer 45    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR46  DIM       6     360     * Printer 46    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR47  DIM       6     366     * Printer 47    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR48  DIM       6     372     * Printer 48    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR49  DIM       6     378     * Printer 49    (ibaprtaf) (ibapddaf.ibpdprtr)
PDEPPR50  DIM       6     384     * Printer 50    (ibaprtaf) (ibapddaf.ibpddept)
.
. End of Record           390
.
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ADDCOUNT  FORM      8             * added record count
.
CODCOUNT  FORM      8             * code error record count
COUNTER   FORM      2
CURRCENT  FORM      2             * current century
CURRDATE  DIM       8             * current date
.
DIM6      DIM       6
DUPCOUNT  FORM      8             * duplicate record count
.
ERORDESC  DIM       70
ERORFLAG  FORM      1             * Field Validation Error Flag
.                                     0 = No Errors on Field Validations
.                                     1 = Errors on Field Validations
.
FORM10    FORM      10
.
MANCOUNT  FORM      8             * mandatory field error record count
.
RECCOUNT  FORM      8             * record read counter
.
TEMPCODE  DIM       10            * Coded field (length = max code field length)
TEMPTYPE  FORM      1             * Type of coded field
TMPFIELD  DIM       8             * Field name
TMPSTRNG  DIM       40            * Temporary string (max field length)
.
VCHKFLAG  FORM      1             * Validation flag
.                                     0 = writing data to database
.                                     1 = only validating import data file
.
.
.
. PROGRAM CONSTANTS
. -----------------
PIPE      INIT      "|"
.
.
.
PRGID     INIT      "CONVPDEP"
PRGNAM    INIT      "Upload Printer Departments"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000       * proceed with upload
.
MAIN1000  CALL      OPEN0000               * open upload file
          BRANCH    EXIT,MAIN0100          * file not found
.
          CALL      ASKQ0000               * validation run only ?
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN2000  CALL      UPLD0000               * process upload
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"ibaprtaf";
          OPEN      IBAPRTA1,"ibaprtaf"
.
          DISPLAY   *P64:24,"ibadptaf";
          OPEN      IBADPTA1,"ibadptaf"
.
          DISPLAY   *P64:24,"ibapddaf";
          OPEN      IBAPDDA1,"ibapddaf"
.
          DISPLAY   *P64:24,"pathspaf";
          OPEN      PATHSPA1,"pathspaf"
.
          DISPLAY   *P64:24,"controlf"
          OPEN      CONTROLF,"controlf"
.
          MOVE      ONE,CNOUNDLN
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run data upload                         *
.*                        TRUE  (1)  Exit selected                           *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Data Upload"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run data upload
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               OPEN0000              Called by: MAIN0000   *
.*                  Open upload file (convpdep.txt)                          *
.*****************************************************************************
.
OPEN0000  MOVE      ZERO,OVRCD
.
          TRAP      OVERCOND IF IO
          OPEN      PRDEPUPL,"convpdep"
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN9100
.
          MOVE      ZERO,EXIT
          GOTO      OPEN9999
.
OPEN9100  DISPLAY   *P1:24,*EL,*B,"Upload file - convpdep.txt - not found.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
OPEN9999  RETURN
+
.*****************************************************************************
.*                               ASKQ0000              Called by: MAIN0000   *
.*                  Ask if running validation only                           *
.* Returns: VCHKFLAG  - validation flag                                      *
.*                       0 = normal mode                                     *
.*                       1 = validation only mode                            *
.*****************************************************************************
.
ASKQ0000  MOVE      ANSY,ANS
          KEYIN     *P1:10,*EL,"Validation only (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") ?":
                    *P25:10,*V2LON,*RV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS                     * Y input ?
          IF        @EQUAL
            DISPLAY   *P25:10,*V2LON,DYES,*HOFF:
                      *P35:10,"(No data will be uploaded)"
            MOVE      ONE,VCHKFLAG               * yes
            GOTO      ASKQ9999
          ENDIF
.
          MATCH     ANSN,ANS                     * N input ?
          IF        @EQUAL
            DISPLAY   *P25:10,*V2LON,DNO,*HOFF:
                      *P35:10,"(Data will be uploaded)"
            MOVE      ZERO,VCHKFLAG              * yes
            GOTO      ASKQ9999
          ENDIF
.
          GOTO      ASKQ0000                     * invalid input
.
ASKQ9999  RETURN
+
.******************************************************************************
.*                                  UPLD0000              Called by: MAIN0000 *
.*                  Process the PMI upload file records                       *
.******************************************************************************
.
UPLD0000  CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          MOVE      CCC,CURRCENT
.
          DISPLAY   *P1:13,"Processing ",*V2LON,"convpdep.txt",*HOFF:
                    *P1:15,"Started    : ",*V2LON,CTIMEIS,*HOFF:
                    *P1:17,"Department : ":
                    *P1:18,"Description: ":
                    *P1:19,"Records    : "
.
          MOVE      ZERO,RECCOUNT                * initialise records read
          MOVE      ZERO,ADDCOUNT                * initialise added record count
          MOVE      ZERO,CODCOUNT                * init. code error record count
          MOVE      ZERO,DUPCOUNT                * initialise dup. record count
          MOVE      ZERO,MANCOUNT                * init. mand error record count
.
          CALL      HEAD0000                     * Print the report header
.
.         Loop through upload file records
.
UPLD1000  READ      PRDEPUPL,SEQ;PDEPDEPT,PDEPDESC,PDEPHOSP,PDEPPR01,PDEPPR02:
                                 PDEPPR03,PDEPPR04,PDEPPR05,PDEPPR06,PDEPPR07:
                                 PDEPPR08,PDEPPR09,PDEPPR10,PDEPPR11,PDEPPR12:
                                 PDEPPR13,PDEPPR14,PDEPPR15,PDEPPR16,PDEPPR17:
                                 PDEPPR18,PDEPPR19,PDEPPR20,PDEPPR21,PDEPPR22:
                                 PDEPPR23,PDEPPR24,PDEPPR25,PDEPPR26,PDEPPR27:
                                 PDEPPR28,PDEPPR29,PDEPPR30,PDEPPR31,PDEPPR32:
                                 PDEPPR33,PDEPPR34,PDEPPR35,PDEPPR36,PDEPPR37:
                                 PDEPPR38,PDEPPR39,PDEPPR40,PDEPPR41,PDEPPR42:
                                 PDEPPR43,PDEPPR44,PDEPPR45,PDEPPR46,PDEPPR47:
                                 PDEPPR48,PDEPPR49,PDEPPR50
          GOTO      UPLD9000 IF OVER
.
          ADD       ONE,RECCOUNT                 * increment records read
          IF        (RECCOUNT%1000) = 0 | RECCOUNT = 1
            DISPLAY   *P14:17,*V2LON,PDEPDEPT:
                      *P14:18,PDEPDESC:
                      *P14:19,RECCOUNT;
          ENDIF
.
          CALL      POUT0000                     * pad out fields with spaces
.
          CALL      CLER0000                     * clear database variables
.
          CALL      MAND0000                     * check for Mandatory fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      SETV0000                     * set up file variables
.
          CALL      CVAL0000                     * validate coded fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          BRANCH    VCHKFLAG,UPLD1000            * error checking only
.
          MOVE      IBDPDEPT,KEY6
          CALL      RAIBDPT1
          IF        OVRCD = 1
            CALL      WRIBDPT1                   * write new record
            ADD       ONE,ADDCOUNT               * increment added record count
.
            CALL      WPDP0000                   * write printer/dept. record
          ELSE
            MOVE      "Department record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ENDIF
.
          GOTO      UPLD1000                     * get next record
.
.         Upload completed
.
UPLD9000  ASSIGN    (CODCOUNT+DUPCOUNT+MANCOUNT),FORM10
          IF        FORM10 > 0
            CALL      LINE0000                   * print bottom line if errors
          ENDIF
.
          COMPARE   CLNO,FIFTY7                  * room for stats ?
          CALL      HEAD0000 IF LESS             * no - new page req'd.
.
          CLOCK     TIME,CTIMEIS
          DISPLAY   *P14:19,*V2LON,RECCOUNT,*HOFF:
                    *P1:21,"Finished   : ",*V2LON,CTIMEIS
.
.         Warn the user if there were any records with errors
.
          IF        FORM10 > 0
            DISPLAY   *P1:22,*V2LON,*BLINKON,"Warning:  Records found with ":
                      "errors.  Refer to error report."
          ENDIF
.
          DISPLAY   *P1:24,*EL,*B,"Upload complete.  ";
          CALL      HITENTER
.
          PRINT     *N:
                    *1,"Total records read                    - ",RECCOUNT,*N:
                    *1,"Records added                         - ",ADDCOUNT,*N:
                    *1,"Duplicate Records detected            - ",DUPCOUNT,*N:
                    *1,"Records with invalid codes detected   - ",CODCOUNT,*N:
                    *1,"Records with blank mandatory fields   - ",MANCOUNT:
                    *N,*N,*1,"*** End of Report ***"
.
UPLD9999  RETURN
+
.****************************************************************************
.*                             MAND0000                Called by: UPLD0000  *
.*                 Check for standard Mandatory fields                      *
.* Returns: EXIT   0 = all mandatory fields are populated                   *
.*                 1 = one or more mandatory fields are blank               *
.*          MANCOUNT - updated count of records with mandatory fields       *
.*                     missing                                              *
.****************************************************************************
.
MAND0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          MOVE      PDEPDEPT,TMPSTRNG
          MOVE      "PDEPDEPT",TMPFIELD          * department code
          CALL      CHKM0000
.
          MOVE      PDEPDESC,TMPSTRNG
          MOVE      "PDEPDESC",TMPFIELD          * department description
          CALL      CHKM0000
.
          MOVE      PDEPHOSP,TMPSTRNG
          MOVE      "PDEPHOSP",TMPFIELD          * hospital
          CALL      CHKM0000
.
          BRANCH    ERORFLAG,MAND9100            * errors on mand. fields
.
          MOVE      ZERO,EXIT                    * no errors on mand. fields
          GOTO      MAND9999
.
MAND9100  ADD       ONE,MANCOUNT                 * incr. mand error record count
          MOVE      ONE,EXIT
.
MAND9999  RETURN
+
.*****************************************************************************
.*                            CHKM0000             Called by: MAND0000       *
.*                    Check if a mandatory field is blank                    *
.* Requires: TMPSTRNG - field to be checked                                  *
.*           TMPFIELD - 8 character field name                               *
.* Returns:  ERORFLAG = 1   field is blank (error)                           *
.*****************************************************************************
.
CHKM0000  MATCH     TMPSTRNG,SP70                * blank field ?
          GOTO      CHKM9999 IF NOT EQUAL        * no - finished
.
          MOVE      "Mandatory Field blank ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set error flag
.
CHKM9999  RETURN
+
.******************************************************************************
.*                                  CLER0000              Called by: UPLD0000 *
.*                    Clear all the database fields                           *
.******************************************************************************
.
CLER0000  MOVE      SP70,IBDPDEPT
          MOVE      SP70,IBDPDESC
          MOVE      SP70,IBDPHOSP
          MOVE      SP70,IBDPWARD
          MOVE      SP70,IBDPEMRS
          MOVE      SP70,IBDPOUTL
          PACK      IBDPSPAR,SP70,SP70
.
CLER9999  RETURN
+
.******************************************************************************
.*                                  HEAD0000              Called by: UPLD0000 *
.*                           Print The Report Header                 PERR0000 *
.******************************************************************************
.
HEAD0000  MOVE      "- Error Report",CPHDROPT
          CALL      HEAD132                 * Print the report header
.
          PRINT     *1,"< convpdep.txt >"
.
          CALL      LINE0000                     * draw line across page
.
          PRINT     *1,PIPE,*3,"Dept.",*10,PIPE,*12,"Description":
                    *55,PIPE,*57,"Error Description",*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      SEVEN,CLNO                   * initialise line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: HEAD0000  *
.*                      Draw line across page                               *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
.******************************************************************************
.*                                  SETV0000              Called by: UPLD0000 *
.*                       Load the record variables                            *
.******************************************************************************
.
SETV0000  MOVE      PDEPDEPT,IBDPDEPT
          MOVE      PDEPDESC,IBDPDESC
          MOVE      PDEPHOSP,IBDPHOSP
.
SETV9999  RETURN
+
.*****************************************************************************
.*                            POUT0000             Called by: UPLD0000       *
.*            Pad out all the record fields with spaces given that we        *
.*            are dealing with pipe delimited records                        *
.*****************************************************************************
.
POUT0000  PACK      PDEPDEPT,PDEPDEPT,SP70
          PACK      PDEPDESC,PDEPDESC,SP70
          PACK      PDEPHOSP,PDEPHOSP,SP70
          PACK      PDEPPR01,PDEPPR01,SP70
          RJUSTIFY  PDEPPR01
          PACK      PDEPPR02,PDEPPR02,SP70
          RJUSTIFY  PDEPPR02
          PACK      PDEPPR03,PDEPPR03,SP70
          RJUSTIFY  PDEPPR03
          PACK      PDEPPR04,PDEPPR04,SP70
          RJUSTIFY  PDEPPR04
          PACK      PDEPPR05,PDEPPR05,SP70
          RJUSTIFY  PDEPPR05
          PACK      PDEPPR06,PDEPPR06,SP70
          RJUSTIFY  PDEPPR06
          PACK      PDEPPR07,PDEPPR07,SP70
          RJUSTIFY  PDEPPR07
          PACK      PDEPPR08,PDEPPR08,SP70
          RJUSTIFY  PDEPPR08
          PACK      PDEPPR09,PDEPPR09,SP70
          RJUSTIFY  PDEPPR09
          PACK      PDEPPR10,PDEPPR10,SP70
          RJUSTIFY  PDEPPR10
          PACK      PDEPPR11,PDEPPR11,SP70
          RJUSTIFY  PDEPPR11
          PACK      PDEPPR12,PDEPPR12,SP70
          RJUSTIFY  PDEPPR12
          PACK      PDEPPR13,PDEPPR13,SP70
          RJUSTIFY  PDEPPR13
          PACK      PDEPPR14,PDEPPR14,SP70
          RJUSTIFY  PDEPPR14
          PACK      PDEPPR15,PDEPPR15,SP70
          RJUSTIFY  PDEPPR15
          PACK      PDEPPR16,PDEPPR16,SP70
          RJUSTIFY  PDEPPR16
          PACK      PDEPPR17,PDEPPR17,SP70
          RJUSTIFY  PDEPPR17
          PACK      PDEPPR18,PDEPPR18,SP70
          RJUSTIFY  PDEPPR18
          PACK      PDEPPR19,PDEPPR19,SP70
          RJUSTIFY  PDEPPR19
          PACK      PDEPPR20,PDEPPR20,SP70
          RJUSTIFY  PDEPPR20
          PACK      PDEPPR21,PDEPPR21,SP70
          RJUSTIFY  PDEPPR21
          PACK      PDEPPR22,PDEPPR22,SP70
          RJUSTIFY  PDEPPR22
          PACK      PDEPPR23,PDEPPR23,SP70
          RJUSTIFY  PDEPPR23
          PACK      PDEPPR24,PDEPPR24,SP70
          RJUSTIFY  PDEPPR24
          PACK      PDEPPR25,PDEPPR25,SP70
          RJUSTIFY  PDEPPR25
          PACK      PDEPPR26,PDEPPR26,SP70
          RJUSTIFY  PDEPPR26
          PACK      PDEPPR27,PDEPPR27,SP70
          RJUSTIFY  PDEPPR27
          PACK      PDEPPR28,PDEPPR28,SP70
          RJUSTIFY  PDEPPR28
          PACK      PDEPPR29,PDEPPR29,SP70
          RJUSTIFY  PDEPPR29
          PACK      PDEPPR30,PDEPPR30,SP70
          RJUSTIFY  PDEPPR30
          PACK      PDEPPR31,PDEPPR31,SP70
          RJUSTIFY  PDEPPR31
          PACK      PDEPPR32,PDEPPR32,SP70
          RJUSTIFY  PDEPPR32
          PACK      PDEPPR33,PDEPPR33,SP70
          RJUSTIFY  PDEPPR33
          PACK      PDEPPR34,PDEPPR34,SP70
          RJUSTIFY  PDEPPR34
          PACK      PDEPPR35,PDEPPR35,SP70
          RJUSTIFY  PDEPPR35
          PACK      PDEPPR36,PDEPPR36,SP70
          RJUSTIFY  PDEPPR36
          PACK      PDEPPR37,PDEPPR37,SP70
          RJUSTIFY  PDEPPR37
          PACK      PDEPPR38,PDEPPR38,SP70
          RJUSTIFY  PDEPPR38
          PACK      PDEPPR39,PDEPPR39,SP70
          RJUSTIFY  PDEPPR39
          PACK      PDEPPR40,PDEPPR40,SP70
          RJUSTIFY  PDEPPR40
          PACK      PDEPPR41,PDEPPR41,SP70
          RJUSTIFY  PDEPPR41
          PACK      PDEPPR42,PDEPPR42,SP70
          RJUSTIFY  PDEPPR42
          PACK      PDEPPR43,PDEPPR43,SP70
          RJUSTIFY  PDEPPR43
          PACK      PDEPPR44,PDEPPR44,SP70
          RJUSTIFY  PDEPPR44
          PACK      PDEPPR45,PDEPPR45,SP70
          RJUSTIFY  PDEPPR45
          PACK      PDEPPR46,PDEPPR46,SP70
          RJUSTIFY  PDEPPR46
          PACK      PDEPPR47,PDEPPR47,SP70
          RJUSTIFY  PDEPPR47
          PACK      PDEPPR48,PDEPPR48,SP70
          RJUSTIFY  PDEPPR48
          PACK      PDEPPR49,PDEPPR49,SP70
          RJUSTIFY  PDEPPR49
          PACK      PDEPPR50,PDEPPR50,SP70
          RJUSTIFY  PDEPPR50
.
POUT9999  RETURN
+
.*****************************************************************************
.*                           CVAL0000              Called by: UPLD0000       *
.*                 Validate all the relevant coded fields.                   *
.*        This validation is performed on the database fields just prior     *
.*        to writing the data and after any mappings have been performed.    *
.* Returns:  EXIT - 0 = No code validation errors                            *
.*                  1 = Code validation errors                               *
.*          CODCOUNT - updated count of records with coded field errors      *
.*****************************************************************************
.
CVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          MATCH     SP3,PDEPHOSP                 * blank code ?
          GOTO      CVAL0010 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PDEPHOSP,SP10
          MOVE      "PDEPHOSP",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * pathspaf (hospital)
          CALL      VCOD0000
.
.         Loop through and check the fifty printer codes
.
CVAL0010  MOVE      ZERO,COUNTER                 * initialise counter
.
          WHILE     COUNTER < FIFTY
            ADD       ONE,COUNTER                * increment counter
            LOAD      DIM6,COUNTER,PDEPPR01,PDEPPR02,PDEPPR03,PDEPPR04,PDEPPR05:
                                   PDEPPR06,PDEPPR07,PDEPPR08,PDEPPR09,PDEPPR10:
                                   PDEPPR11,PDEPPR12,PDEPPR13,PDEPPR14,PDEPPR15:
                                   PDEPPR16,PDEPPR17,PDEPPR18,PDEPPR19,PDEPPR20:
                                   PDEPPR21,PDEPPR22,PDEPPR23,PDEPPR24,PDEPPR25:
                                   PDEPPR26,PDEPPR27,PDEPPR28,PDEPPR29,PDEPPR30:
                                   PDEPPR31,PDEPPR32,PDEPPR33,PDEPPR34,PDEPPR35:
                                   PDEPPR36,PDEPPR37,PDEPPR38,PDEPPR39,PDEPPR40:
                                   PDEPPR41,PDEPPR42,PDEPPR43,PDEPPR44,PDEPPR45:
                                   PDEPPR46,PDEPPR47,PDEPPR48,PDEPPR49,PDEPPR50
.
            MATCH     SP6,DIM6                   * blank code ?
            IF        !@EQUAL
              PACK      TEMPCODE,DIM6,SP10       * no
              MOVE      "PDEPPR",TMPFIELD
              ENDSET    TMPFIELD
              APPEND    COUNTER,TMPFIELD
              RESET     TMPFIELD
              REP       " 0",TMPFIELD
              MOVE      TWO,TEMPTYPE             * ibaprtaf (printers)
              CALL      VCOD0000
            ENDIF
          DO
.
CVAL9000  BRANCH    ERORFLAG,CVAL9100            * errors on code validation
.
          MOVE      ZERO,EXIT                    * no errors on code validation
          GOTO      CVAL9999
.
CVAL9100  ADD       ONE,CODCOUNT                 * incr. code error record count
          MOVE      ONE,EXIT
.
CVAL9999  RETURN
+
.*****************************************************************************
.*                           VCOD0000              Called by: CVAL0000       *
.*                   Validate a coded field                                  *
.* Requires: TEMPCODE - temporary code variable                              *
.*           TEMPTYPE - temporary code type                                  *
.*           TMPFIELD - temporary field name                                 *
.*****************************************************************************
.
VCOD0000  BRANCH    TEMPTYPE,VCOD1000:           * pathspaf (hospital)
                             VCOD2000            * ibaprtaf (printers)
.
.         Validate a hospital field (pathspaf)
.
VCOD1000  MOVE      TEMPCODE,KEY3
          CALL      RDPTHSP1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate a printer field (ibaprtaf)
.
VCOD2000  MOVE      TEMPCODE,KEY6
          CALL      RDPRTA1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999
.
VCOD9100  MOVE      "Invalid coded field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error
.
          MOVE      ONE,ERORFLAG                 * set code error flag
.
VCOD9999  RETURN
+
.*****************************************************************************
.*                              PERR0000           Called by: UPLD0000       *
.*                   Print an error detail line               CHKM0000       *
.* Requires: Valid read on PMI records (for name fields)      DERR0000       *
.*           ERORDESC - error description                     TERR0000       *
.*           CLNO - current page line count                   NERR0000       *
.* Returns:  CLNO - updated page line count                   VCOD0000       *
.*****************************************************************************
.
PERR0000  COMPARE   CLNO,SIXTY3                  * page full ?
          IF        @LESS
            CALL      LINE0000                   * yes - print bottom line
            CALL      HEAD0000                   * print header
          ENDIF
.
          PRINT     *1,PIPE,*3,PDEPDEPT,*10,PIPE,*12,PDEPDESC,*55,PIPE:
                    *57,ERORDESC,*132,PIPE
          ADD       ONE,CLNO                     * increment page line count
.
PERR9999  RETURN
+
.*****************************************************************************
.*                              WPDP0000           Called by: UPLD0000       *
.*          Write a printer/department record (ibapddaf) for each valid      *
.*          printer code                                                     *
.*****************************************************************************
.
.         Loop through and check the fifty printer codes
.
WPDP0000  MOVE      ZERO,COUNTER                 * initialise counter
.
          WHILE     COUNTER < FIFTY
            ADD       ONE,COUNTER                * increment counter
            LOAD      DIM6,COUNTER,PDEPPR01,PDEPPR02,PDEPPR03,PDEPPR04,PDEPPR05:
                                   PDEPPR06,PDEPPR07,PDEPPR08,PDEPPR09,PDEPPR10:
                                   PDEPPR11,PDEPPR12,PDEPPR13,PDEPPR14,PDEPPR15:
                                   PDEPPR16,PDEPPR17,PDEPPR18,PDEPPR19,PDEPPR20:
                                   PDEPPR21,PDEPPR22,PDEPPR23,PDEPPR24,PDEPPR25:
                                   PDEPPR26,PDEPPR27,PDEPPR28,PDEPPR29,PDEPPR30:
                                   PDEPPR31,PDEPPR32,PDEPPR33,PDEPPR34,PDEPPR35:
                                   PDEPPR36,PDEPPR37,PDEPPR38,PDEPPR39,PDEPPR40:
                                   PDEPPR41,PDEPPR42,PDEPPR43,PDEPPR44,PDEPPR45:
                                   PDEPPR46,PDEPPR47,PDEPPR48,PDEPPR49,PDEPPR50
.
            MATCH     SP6,DIM6                   * blank code ?
            IF        !@EQUAL
              PACK      KEY12,IBDPDEPT,DIM6      * no
              CALL      RAIBPDD1
              IF        OVRCD = 1
                MOVE      IBDPDEPT,IBPDDEPT      * load department code
                PACK      IBPDSEQU,SP2,ONE       * load sequence code (1)
                MOVE      DIM6,IBPDPRTR          * load printer code
                PACK      IBPDSPAR,SP70,SP70
                CALL      WRIBPDD1               * write printer/department rec.
              ELSE
                PACK      KEY13,DIM6,SLASH,IBDPDEPT
                SQUEEZE   KEY13
                MOVE      "Printer/Dept. (",ERORDESC
                ENDSET    ERORDESC
                APPEND    KEY13,ERORDESC
                APPEND    ") record already exists ",ERORDESC
                RESET     ERORDESC
                CALL      PERR0000               * print error line
                ADD       ONE,DUPCOUNT           * increment dupl. record count
              ENDIF
            ENDIF
          DO
.
WPDP9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       IBADPTIO/INC
          INC       IBAPDDIO/INC
          INC       IBAPRTIO/INC
          INC       PATHSPIO/INC
