.*****************************************************************************
. Program      : V12BKQUE                                    
. Description  : Conversion bokqueaf to new File layout      
.*****************************************************************************
. Modifications:           
.*****************************************************************************
. V12.00.00  15/04/2025 Thanh T       TSK 0955096 
.            Initial Version
.*****************************************************************************
.
.  using vi Global change command      :%s/FromString/ToString/g
.
.  Global change V12BKQUE  eg F57PTDOC
.  Global change v12bkque  eg f57ptdoc
.  Global change BOKQUEFD  eg PATDOCFD (new layout)
.  Global change bokqueaf  eg patdoctf
.  Global change BOKQUEA1  eg PATDOCT1
.  Global change KEY20      eg KEY20
.  Global change KEY20      eg KEY9
.  Global change WRBKQUE1   eg WRDOCT1
.  Global change sbokquef  eg sptdoctf
.
.  Global changes if Oracle Option is required -
.
.  Global Change answeryn  to Yes
.  Global change RSBKQUE1  eg RSPTDOC1
.  Global change RKBKQUE1  eg RKPTDOC1
.  Global change UPBKQUE1  eg UPPTDOC1
.
.  Global changes if Oracle Option is NOT required -

.  Global Change answeryn  to No
.  Global change RSBKQUE1  to OFDUMYIO
.  Global change RKBKQUE1  to OFDUMYIO
.  Global change UPBKQUE1  to OFDUMYIO
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
LOGFILE   FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE1
.
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.
..OLDFILE1  IFILE     SQL, FIXED=xxx, KEY="Uxx-xx"
OLDFILE1  IFILE     SQL, FIXED=600, KEY="U1-20"
.
.Name     Type      Length  Phys.  Start  Description
.-------  ----      ------  -----  -----  ----------------------------------
.DBKQUMES   DIM     20      20       1   Message Id
.
.          BOKRC1FD variables
.
OBKREBOO  FORM     8       5      21   Booking/Admission No.
.BKREURNO  DIM      8       8      26   U/R Number
.BKREADOC  DIM      6       6      34   Attending Doctor
.BKRESDOC  DIM      6       6      40   Referring Doctor
.BKREEDAT  DIM      8       8      46   Expected due date (CCYYMMDD)
.BKREATIM  DIM      8       8      54   Expected assessment time
.BKREPDAT  DIM      8       8      62   Pre-assessment date
.BKREPTIM  DIM      8       8      70   Pre-assessment time
.BKREADAT  DIM      8       8      78   Date booking was made CCYYMMDD
.BKRETYPE  DIM      3       3      86   Booking type (Cat "BK")
.BKRECANC  DIM      3       3      89   Cancellation reason (Cat "BC")
.BKREOMEM  DIM      1       1      92   Benefit fund member (Y/N/U)
.BKREPREV  DIM      1       1      93   Previous inpatient (Y/N/U)
.BKREACCM  DIM      3       3      94   Preferred accommodation (Cat BP)
.BKREPROC  DIM      9       9      97   Waiting list procedure code
.BKRECNT   FORM     2       2     106   Waiting list procedure count
.BKREWARD  DIM      3       3     108   Expected ward
OBKREADM  FORM     8       5     111   Maternity admission number
.BKREPREA  DIM      1       1     116   Deposit paid (Y/N) Matern only
.BKREEBED  DIM      3       3     117   Expected bed
.BKRECLSS  DIM      3       3     120   Patient Cat./Adm Class. (Cat P)
.BKREATYP  DIM      3       3     123   Adm Type/Pat. Class (Cat A)
.BKREDEPT  DIM      3       3     126   Department (Cat AC)
.BKRETDOC  DIM      6       6     129   Associated Doctor
.BKRECLMT  DIM      3       3     135   Claim type (Cat CL)
.XXXXRFGP   DIM      8       8     138   Referring GP
.BKREGPPC  DIM      6       6     146   GP Practice code
.BKREGPFA  DIM      20      20    152   GPFH Approval Number
.BKRERESI  DIM      3       3     172   Resident Status (Cat T)
.BKREEATY  DIM      3       3     175   Elective Admission Type  (Cat CC)
.BKREECRA  DIM      20      20    178   ECR Approval Number
.BKREGPPT  DIM      2       2     198   GP Practice count
.BKREDOFR  DIM      3       3     200   District of Residence (Cat DA)
.BKREOPER  DIM      4       4     203   Operator who made I/P Booking
.BKREELOS  FORM     3       3     207   Expected Length of Stay (Days)
.BKREBKDT  DIM      8       8     210   Booking date (ccyymmdd)
.
.          BOKRX1FD variables
.
.BKRXPOWD  DIM      3       3     218   Post-Op Ward (patwr1af)
.BKRXADWD  DIM      3       3     221   Admitting Ward (patwr1af)
.BKRXCDTE  DIM      8       8     224   Contact Date (ccyymmdd)
.BKRXPSTY  DIM      1       1     232   Parent Staying (0=NO,1=YES)
.BKRXCNDT  DIM      8       8     233   Confirmation Date (ccyymmdd)
.BKRXUDF1  DIM      3       3     241   User Defined Field 1 (Cat BE)
.BKRXUDF2  DIM      3       3     244   User Defined Field 2 (Cat BF)
.BKRXUDF3  DIM      3       3     247   User Defined Field 3 (Cat BG)
.BKRXUDF4  DIM      3       3     250   User Defined Field 4 (Cat BH)
.BKRXUDF5  DIM      3       3     253   User Defined Field 5 (Cat BL)
.BKRXUDD1  DIM      8       8     256   User Defined Date 1 (ccyymmdd)
.BKRXUDD2  DIM      8       8     264   User Defined Date 2 (ccyymmdd)
.BKRXUDD3  DIM      8       8     272   User Defined Date 3 (ccyymmdd)
.BKRXUDD4  DIM      8       8     280   User Defined Date 4 (ccyymmdd)
.BKRXUFF1  DIM     50      50     288   Procedure Description 1
.BKRXUFF2  DIM     50      50     338   Procedure Description 2
.BKRXUFF3  DIM     50      50     388   Procedure Description 3
.BKRXUFF4  DIM     50      50     438   User Defined Free Format 4
.BKRXEDC1  DIM     10      10     488   Extra Doctor Code 1 (pmshcpaf)
.BKRXEDC2  DIM     10      10     498   Extra Doctor Code 2 (pmshcpaf)
.BKRXEDC3  DIM     10      10     508   Extra Doctor Code 3 (pmshcpaf)
.BKRXODTE  DIM      8       8     518   Operation Date (ccyymmdd)
.BKRXOPRD  DIM      3       3     526   Operation Period (Cat SP)
OBKQUSPA   DIM     71      71     529   Spare Variable
.
. End of Record                   600
.
.
.                                     ******** copy the new FD here *******
.
BOKQUEA1   IFILE SQL, FIXED=600, KEY="U1-20"
.
.Name      Type  Length Physical Start Description
.----      ----  ------ -------- ----- -----------
DBKQUMES   DIM     20      20       1   Message Id
.
.          BOKRC1FD variables
.
BKREBOOK  DIM      8       8      21   Booking/Admission No.
BKREURNO  DIM      8       8      29   U/R Number
BKREADOC  DIM      6       6      37   Attending Doctor
BKRESDOC  DIM      6       6      43   Referring Doctor
BKREEDAT  DIM      8       8      49   Expected due date (CCYYMMDD)
BKREATIM  DIM      8       8      57   Expected assessment time
BKREPDAT  DIM      8       8      65   Pre-assessment date
BKREPTIM  DIM      8       8      73   Pre-assessment time
BKREADAT  DIM      8       8      81   Date booking was made CCYYMMDD
BKRETYPE  DIM      3       3      89   Booking type (Cat "BK")
BKRECANC  DIM      3       3      92   Cancellation reason (Cat "BC")
BKREOMEM  DIM      1       1      95   Benefit fund member (Y/N/U)
BKREPREV  DIM      1       1      96   Previous inpatient (Y/N/U)
BKREACCM  DIM      3       3      97   Preferred accommodation (Cat BP)
BKREPROC  DIM      9       9     100   Waiting list procedure code
BKRECNT   FORM     2       2     109   Waiting list procedure count
BKREWARD  DIM      3       3     111   Expected ward
BKREADMN  DIM      8       8     114   Maternity admission number
BKREPREA  DIM      1       1     122   Deposit paid (Y/N) Matern only
BKREEBED  DIM      3       3     123   Expected bed
BKRECLSS  DIM      3       3     126   Patient Cat./Adm Class. (Cat P)
BKREATYP  DIM      3       3     129   Adm Type/Pat. Class (Cat A)
BKREDEPT  DIM      3       3     132   Department (Cat AC)
BKRETDOC  DIM      6       6     135  Associated Doctor
BKRECLMT  DIM      3       3     141   Claim type (Cat CL)
XXXXRFGP  DIM      8       8     144   Referring GP
BKREGPPC  DIM      6       6     152   GP Practice code
BKREGPFA  DIM      20      20    158   GPFH Approval Number
BKRERESI  DIM      3       3     178   Resident Status (Cat T)
BKREEATY  DIM      3       3     181   Elective Admission Type  (Cat CC)
BKREECRA  DIM      20      20    184   ECR Approval Number
BKREGPPT  DIM      2       2     204   GP Practice count
BKREDOFR  DIM      3       3     206   District of Residence (Cat DA)
BKREOPER  DIM      4       4     209   Operator who made I/P Booking
BKREELOS  FORM     3       3     213   Expected Length of Stay (Days)
BKREBKDT  DIM      8       8     216   Booking date (ccyymmdd)
.
.          BOKRX1FD variables
.
BKRXPOWD  DIM      3       3     224   Post-Op Ward (patwr1af)
BKRXADWD  DIM      3       3     227   Admitting Ward (patwr1af)
BKRXCDTE  DIM      8       8     230   Contact Date (ccyymmdd)
BKRXPSTY  DIM      1       1     238   Parent Staying (0=NO,1=YES)
BKRXCNDT  DIM      8       8     239   Confirmation Date (ccyymmdd)
BKRXUDF1  DIM      3       3     247   User Defined Field 1 (Cat BE)
BKRXUDF2  DIM      3       3     250   User Defined Field 2 (Cat BF)
BKRXUDF3  DIM      3       3     253   User Defined Field 3 (Cat BG)
BKRXUDF4  DIM      3       3     256   User Defined Field 4 (Cat BH)
BKRXUDF5  DIM      3       3     259   User Defined Field 5 (Cat BL)
BKRXUDD1  DIM      8       8     262   User Defined Date 1 (ccyymmdd)
BKRXUDD2  DIM      8       8     270   User Defined Date 2 (ccyymmdd)
BKRXUDD3  DIM      8       8     278   User Defined Date 3 (ccyymmdd)
BKRXUDD4  DIM      8       8     286   User Defined Date 4 (ccyymmdd)
BKRXUFF1  DIM     50      50     294   Procedure Description 1
BKRXUFF2  DIM     50      50     344   Procedure Description 2
BKRXUFF3  DIM     50      50     394   Procedure Description 3
BKRXUFF4  DIM     50      50     444   User Defined Free Format 4
BKRXEDC1  DIM     10      10     494   Extra Doctor Code 1 (pmshcpaf)
BKRXEDC2  DIM     10      10     504   Extra Doctor Code 2 (pmshcpaf)
BKRXEDC3  DIM     10      10     514   Extra Doctor Code 3 (pmshcpaf)
BKRXODTE  DIM      8       8     524   Operation Date (ccyymmdd)
BKRXOPRD  DIM      3       3     532   Operation Period (Cat SP)
BKQUSPAR  DIM     65      65     535   Spare Variable
.
.End of Record                   600
.
. LOCAL VARIABLES
. ---------------
CMDLINE   DIM       200
.
DEFPATH   DIM       60
DIM60     DIM       60
DISNUM    FORM      4
.
ERORTEXT  DIM       80
.
INPFILE   DIM       8
.
MINUS3    FORM      "-3"
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVEFLG   FORM      1
.
USINGORC  DIM       1
.
.
. PROGRAM CONSTANTS
. -----------------
CREATEXT  INIT    "Log file created "
DASHLINE  INIT      "--------------------------------------------------":
                    "------------------------------"
ENDGTEXT  INIT    "Ending   fixit (Option "
OPENTEXT  INIT    "Log file opened "
SP60      INIT    "                                                            "
STARTTXT  INIT    "Starting fixit (Option "
.
.
.
PRGNAM    INIT      "CONVERSION BOKQUEFD"
PRGID     INIT      "V12BKQUE"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                             MAIN0000                                      *
.*                         Program Mainline                                  *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
.
          CALL      OLOG0000                      * create/open log file
MAIN0500  CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000:             * run c-isam fixit
                            MAIN2000              * run oracle fixit
          GOTO      MAIN9999                      * exit selected
.
MAIN1000  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9000
.
MAIN2000  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:               * yes
                          MAIN0500:               * no
                          MAIN9000                * cancel
.
MAIN5000  BRANCH    COPTION,MAIN6000:             * c-isam fixit
                            MAIN7000              * oracle fixit
.
.         Running c-isam fix
.
MAIN6000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9000
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/zip saved file
          GOTO      MAIN9000
.
.         Running oracle fix
.
MAIN7000  CALL      OFIX0000                      * run oracle fix
.
MAIN9000  CALL      CLOG0000                      * close log file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
.
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          MOVE      ZERO,DISNUM
          
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  MOVE      "No",USINGORC
          REP       "yYnN",USINGORC
          MOVE      USINGORC,KEY1
          REP       "Y-N-",KEY1
          MATCH     "-",KEY1
          GOTO      OPTN9200 IF NOT EQUAL
.
          DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (c-isam only)"
          MATCH     "Y",USINGORC
          IF        @EQUAL
            DISPLAY   *P1:6,*V2LON,TWO,*HOFF,". Run Fixit (Oracle only)"
          ENDIF
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run c-isam fixit
                            OPTN9000             * run oracle fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9200  DISPLAY   *P1:3,*EF,*P1:4," Oracle Option has not been set up ":
                          "correctly":
                    *P1:6," Program will terminate    - ";
          MOVE      "Oracle Option has not been set up correctly",ERORTEXT
          WRITE     LOGFILE,SEQ;*+,ERORTEXT
          CALL      HITENTER
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
. 
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
.
PREP0000  CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
.
          CALL      SLOG0000                      * write start to log file
.
          MOVE      "bokqueaf",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat bokqueaf.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sbokquef.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat bokqueaf.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "sbokquef.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "bokqueaf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Unable to remove the original file.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "sbokquef",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            MOVE      "Unable to open saved original file.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "bokqueaf",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
. Index 1
          APPEND    " 600 UC1-20",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
          OPEN      BOKQUEA1,NEWFILE
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          GOTO      PREP9999
.
PREP5000  MOVE      "Old file not found.  ",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  MOVE      "Unable to copy original file.  (Error: ",ERORTEXT
          ENDSET    ERORTEXT
          APPEND    TASKID,ERORTEXT
          APPEND    ")  ",ERORTEXT
          RESET     ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
            MOVE      "File does not exist",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
              MOVE      "File has already been converted",ERORTEXT
              WRITE     LOGFILE,SEQ;ERORTEXT
            ELSE
              DISPLAY   "has caused an IO error - ";
              MOVE      "File has caused an IO Error",ERORTEXT
              WRITE     LOGFILE,SEQ;ERORTEXT
            ENDIF
          ENDIF
          MOVE      "File will be bypassed",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *+,ERORTEXT
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
.
          PACK      KEY20,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
.
          ADD       ONE,RECNUM                    * update record counter
          ADD       ONE,DISNUM                    * Display counter
.
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
.    eg    PACK      DSPARE,SP70
.          PACK      PTDSDMDC,SP10
.          PACK      PTDSDDRG,SP10
.
          MOVE      OBKREBOO,BKREBOOK
          MOVE      OBKREADM,BKREADMN
          MOVE      SP70,BKQUSPAR
.                                               * Pack key here
          PACK      KEY20,DBKQUMES,SP70
          CALL      WRBKQUE1                    * write to new file

          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     BOKQUEA1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS:
                    *P1:24;
.
READ9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
.
VALD0000  MOVE      ZERO,EXIT
.
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            MOVE      "Directory path must end with a slash (/) ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Directory does not exist ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or zip save file                                     *
.**********************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "sbokquef*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "gzip -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Saved file not zipped or removed.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:24,*EL,*B,"Finished processing  ",CDATE,SP1,CTIMEIS:
                    ".  ";
          CALL      HITENTER
.
          CALL      ELOG0000                     * write an end log entry
.
ENDP9999  RETURN
+
.**********************************************************************
.*        DEFT0000 -  Get the default directory                       *
.**********************************************************************
.
DEFT0000  EXECUTE   "ldat bokqueaf.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  MOVE      "Error finding 'bokqueaf'.  ",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.*****************************************************************************
.*                            OLOG0000                                       *
.*                    Open the log file                                      *
.*****************************************************************************
.
OLOG0000  CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      LOGFILE,"v12bkque.log"       * open log file
          TRAPCLR   IO
          IF        OVRCD = 1
            PREP      LOGFILE,"v12bkque.log"     * create and open log file
            WRITE     LOGFILE,MINUS3;DASHLINE
            WRITE     LOGFILE,SEQ;CREATEXT,CDATE,SP1,CTIMEIS
          ELSE
            WRITE     LOGFILE,MINUS3;DASHLINE
            WRITE     LOGFILE,SEQ;OPENTEXT,CDATE,SP1,CTIMEIS
          ENDIF
.
OLOG9999  RETURN
+
.*****************************************************************************
.*                            CLOG0000                                       *
.*                    Close the log file                                     *
.*****************************************************************************
.
CLOG0000  CLOSE     LOGFILE
.
CLOG9999  RETURN
+
.*****************************************************************************
.*                            SLOG0000                                       *
.*                    Write a start log to the log file                      *
.*****************************************************************************
.
SLOG0000  WRITE     LOGFILE,SEQ;DASHLINE
          WRITE     LOGFILE,SEQ;STARTTXT,COPTION,RBRACK,SP1,CDATE,SP1:
                                   CTIMEIS
.
SLOG9999  RETURN
+
.*****************************************************************************
.*                            ELOG0000                                       *
.*                    Write an end log to the log file                       *
.*****************************************************************************
.
ELOG0000  WRITE     LOGFILE,SEQ;ENDGTEXT,COPTION,RBRACK,SP1,CDATE,SP1:
                                   CTIMEIS
ELOG9999  RETURN
+
.*****************************************************************************
.*                            OFIX0000                                       *
.*                    Oracle fix to "BOKQUEFD"                               *
.*****************************************************************************
.
OFIX0000  DISPLAY   *P1:24,*EL;
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,*EL,"Record No. :";
.
          CALL      SLOG0000                      * write start to log file
.
          OPEN      BOKQUEA1,"bokqueaf"
.
          PACK      KEY20,SP70
          CALL      RSBKQUE1                      * position at start of file
OFIX0500  CALL      RKBKQUE1                      * read next record
          BRANCH    OVRCD,OFIX9000                * eof - finished
.
          ADD       ONE,RECNUM                    * increment record counter
          ADD       ONE,DISNUM                    * Display counter
.         
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM 
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.>>>>>>>  Add code here to populate/update variables
.
          CALL      UPBKQUE1
.
          GOTO      OFIX0500                     * get next record
.         
OFIX9000  CLOSE     BOKQUEA1
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Update completed ",CDATE,SP1,CTIMEIS:
                    *P1:24;
          CALL      HITENTER
.
          CALL      ELOG0000                     * write an end log entry
.
OFIX9999  RETURN
.
OFDUMYIO  RETURN
+
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE1
.
READSOLD  RESET     KEY20
          MOVE      ZERO,OVRCD
          READ      OLDFILE1,KEY20;;
          RETURN
.
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE1
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;DBKQUMES,OBKREBOO,BKREURNO,BKREADOC,BKRESDOC:
                                  BKREEDAT,BKREATIM,BKREPDAT,BKREPTIM,BKREADAT:
                                  BKRETYPE,BKRECANC,BKREOMEM,BKREPREV,BKREACCM:
                                  BKREPROC,BKRECNT,BKREWARD,OBKREADM,BKREPREA:
                                  BKREEBED,BKRECLSS,BKREATYP,BKREDEPT,BKRETDOC:
                                  BKRECLMT,XXXXRFGP,BKREGPPC,BKREGPFA,BKRERESI:
                                  BKREEATY,BKREECRA,BKREGPPT,BKREDOFR,BKREOPER:
                                  BKREELOS,BKREBKDT,BKRXPOWD,BKRXADWD,BKRXCDTE:
                                  BKRXPSTY,BKRXCNDT,BKRXUDF1,BKRXUDF2,BKRXUDF3:
                                  BKRXUDF4,BKRXUDF5,BKRXUDD1,BKRXUDD2,BKRXUDD3:
                                  BKRXUDD4,BKRXUFF1,BKRXUFF2,BKRXUFF3,BKRXUFF4:
                                  BKRXEDC1,BKRXEDC2,BKRXEDC3,BKRXODTE,BKRXOPRD:
                                  OBKQUSPA
          GOTO      OVERCOND IF OVER
          RETURN
.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
.                  For Oracle fixits, you will probably also need to copy
.                  the RS.., RK.... & UP.... I/O routines for the new FD.
.
RSBKQUE1  RESET     KEY20
          READ      BOKQUEA1,KEY20;;
          RETURN
.
RKBKQUE1  MOVE      ZERO,OVRCD
          READKS    BOKQUEA1;DBKQUMES,BKREBOOK,BKREURNO,BKREADOC,BKRESDOC:
                                  BKREEDAT,BKREATIM,BKREPDAT,BKREPTIM,BKREADAT:
                                  BKRETYPE,BKRECANC,BKREOMEM,BKREPREV,BKREACCM:
                                  BKREPROC,BKRECNT,BKREWARD,BKREADMN,BKREPREA:
                                  BKREEBED,BKRECLSS,BKREATYP,BKREDEPT,BKRETDOC:
                                  BKRECLMT,XXXXRFGP,BKREGPPC,BKREGPFA,BKRERESI:
                                  BKREEATY,BKREECRA,BKREGPPT,BKREDOFR,BKREOPER:
                                  BKREELOS,BKREBKDT,BKRXPOWD,BKRXADWD,BKRXCDTE:
                                  BKRXPSTY,BKRXCNDT,BKRXUDF1,BKRXUDF2,BKRXUDF3:
                                  BKRXUDF4,BKRXUDF5,BKRXUDD1,BKRXUDD2,BKRXUDD3:
                                  BKRXUDD4,BKRXUFF1,BKRXUFF2,BKRXUFF3,BKRXUFF4:
                                  BKRXEDC1,BKRXEDC2,BKRXEDC3,BKRXODTE,BKRXOPRD:
                                  BKQUSPAR
.
          GOTO      OVERCOND IF OVER
.
          RETURN
.
UPBKQUE1  MOVE      ZERO,OVRCD
.
          UPDATE    BOKQUEA1;DBKQUMES,BKREBOOK,BKREURNO,BKREADOC,BKRESDOC:
                                  BKREEDAT,BKREATIM,BKREPDAT,BKREPTIM,BKREADAT:
                                  BKRETYPE,BKRECANC,BKREOMEM,BKREPREV,BKREACCM:
                                  BKREPROC,BKRECNT,BKREWARD,BKREADMN,BKREPREA:
                                  BKREEBED,BKRECLSS,BKREATYP,BKREDEPT,BKRETDOC:
                                  BKRECLMT,XXXXRFGP,BKREGPPC,BKREGPFA,BKRERESI:
                                  BKREEATY,BKREECRA,BKREGPPT,BKREDOFR,BKREOPER:
                                  BKREELOS,BKREBKDT,BKRXPOWD,BKRXADWD,BKRXCDTE:
                                  BKRXPSTY,BKRXCNDT,BKRXUDF1,BKRXUDF2,BKRXUDF3:
                                  BKRXUDF4,BKRXUDF5,BKRXUDD1,BKRXUDD2,BKRXUDD3:
                                  BKRXUDD4,BKRXUFF1,BKRXUFF2,BKRXUFF3,BKRXUFF4:
                                  BKRXEDC1,BKRXEDC2,BKRXEDC3,BKRXODTE,BKRXOPRD:
                                  BKQUSPAR
.
          RETURN
.
WRBKQUE1   RESET     KEY20
          MOVE      ZERO,OVRCD
.
          WRITE     BOKQUEA1,KEY20;DBKQUMES,BKREBOOK,BKREURNO,BKREADOC,BKRESDOC:
                                  BKREEDAT,BKREATIM,BKREPDAT,BKREPTIM,BKREADAT:
                                  BKRETYPE,BKRECANC,BKREOMEM,BKREPREV,BKREACCM:
                                  BKREPROC,BKRECNT,BKREWARD,BKREADMN,BKREPREA:
                                  BKREEBED,BKRECLSS,BKREATYP,BKREDEPT,BKRETDOC:
                                  BKRECLMT,XXXXRFGP,BKREGPPC,BKREGPFA,BKRERESI:
                                  BKREEATY,BKREECRA,BKREGPPT,BKREDOFR,BKREOPER:
                                  BKREELOS,BKREBKDT,BKRXPOWD,BKRXADWD,BKRXCDTE:
                                  BKRXPSTY,BKRXCNDT,BKRXUDF1,BKRXUDF2,BKRXUDF3:
                                  BKRXUDF4,BKRXUDF5,BKRXUDD1,BKRXUDD2,BKRXUDD3:
                                  BKRXUDD4,BKRXUFF1,BKRXUFF2,BKRXUFF3,BKRXUFF4:
                                  BKRXEDC1,BKRXEDC2,BKRXEDC3,BKRXODTE,BKRXOPRD:
                                  BKQUSPAR
          RETURN
.
          INC       STD001IO
