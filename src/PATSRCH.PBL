
.*  Include name          : PATSRCH.PBL                                      *
.*  Function              : SEARCH THROUGH THE PMI FILE                      *
.*  Author                : GRAEME WILLIAMS (I.B.A)                          *
.*                                                                           *
.*  Entry Points          : SOUND000 - Sound-ex Search                       *
.*                          STRCT000 - Strict Surname Search                 *
.*                          DBRTH000 - DOB Search                            *
.*                                                                           *
.*  Parameters            : CVERT   - Starting line for display              *
.*                          SRCHOPT - Select what appears in                 *
.*                                    the last column of search              *
.*                                    0 = Deceased indicator                 *
.*                                    1 = Programmer Defined                 *
.*                                    2 = First line of Address              *
.*                                    3 = Two line surname enq.              *
.*                          SRCHCLR - 0 = Clear Search Parameters            *
.*                                    1 = Dont clear search parameters       *
.*                                                                           *
.*  EXTERNAL SUBROUTINES  : GETSVAR - Set up SRCHVAL for a U/R.              *
.*                                    Used when SRCHOPT = 1                  *
.*                                  - Set up SRCHDIAG, SRCHWBED              *
.*                                    and SRCHVAR                            *
.*                                    Used when SRCHOPT = 3                  *
.*                                                                           *
.*  RETURNS               : SRCHFLAG - 1 = Continue Enquiry                  *
.*                                     0 = Exit Search                       *
.*                                     2 = Next (DBRTH000 only)              *
.*                          CPPURNO  - U/R number selected                   *
.*                                                                           *
.*  MAJOR INCLUDES NEEDED : IBACOMM  - Common IBA Variables                  *
.*                          PATGSRFD - Surname/Given name Index file         *
.*  (removed V.10.B01)      PATSURFD - Surname Index file                    *
.*                          PATMA1FD - PMI file                              *
.*                          PATPR1FD - 0 U/R Master file                     *
.*                          PATMI1FD - Admissions file                       *
.*                          OUTPREFD - Pre-attendance details                *
.*                          PATSNDX  - Sound-ex Algorithm                    *
.*                          PATSNX2  - Soundex for given name                *
.*                          PATTRNFD - Patient bed transfer                  *
.*                                                                           *
.* MODIFICATIONS :                                                           *
.*****************************************************************************
.* V12.00.01 15.05.2025  DA Sarkies     TSK 0955096                          *
.*           Updated for Alpha-Numeric Visit Number                          *
.*****************************************************************************
.* V10.02.02 13/07/2011  Steve Armstrong   CAR 240722                        *
.*           Further mods to cater for second given name as                  *
.*           part of PATGSRFD keys                                           *
.* V10.02.01 22/06/2011  Steve Armstrong   CAR 240722                        *
.*           Mods to cater for changes to PATGSRFD:                          *
.*                - GSRSNAM & GSRGNAM extended to 30 chars.                  *
.*                - PTGSGNM2 added.                                          *
.*                - all indexes changed in length.                           *
.*****************************************************************************
.* V9.03.03  11/06/2004  Mike Laming   CAR 49016  July 2004 PRS/2            *
.*           - Add Sex Description routine SEXDSC00 with Code "R" - "Intersex"
.* V9.03.02  18/09/2003 Sandra Barcham      43475                            *
.*           Access patgsrnf with key70 not key61                            *
.* V9.03.01  Jill Habasque CAR 42780                                         *
.*           Fixed branch to SOUND210                                        *
.*****************************************************************************
.* V9.00.01  Raghunandan Surve, HPS - SRF14992                               *
.*           Fixed DOB search problem for inactive UR                        * 
.*****************************************************************************
.*        V5.10.B02 23/04/2001  Ebon Clements                                *
.*                  Fixed key for second index of PATGSRFD.                  *
.*                  It should have been KEY45 not KEY61                      *
.*        V5.10.B01  5/04/2001  Glenn Saunders                               *
.*                  Remove access to PTCNSNDX and associated processing.     *
.*                  Remove all references to PATSUR file (old surname file). *
.*****************************************************************************
.*        V5.08.08  19/02/2001  Steve Armstrong                              *
.*                  Rewrote DOB search due to multiple problems              *
.*        V5.08.07  08/11/2000  Caleb Sharman  SRF 647467                    *
.*                  Mods to VADOB000 so the date ranges are compared         *
.*                  to the full date instead of just the day & month         *
.*        V5.08.06  31/10/2000  Caleb Sharman  SRF 1927                      *
.*                  Fixed the previous option in the DOB search so it        *
.*                  now picks up pre-admission patients                      *
.*        V5.08.05  22/08/2000  Tonii                                        *
.*                  PSEX now accepts "U" and "I", Unknown and Indeterminate  *
.*                  respectively                                             *
.*        V5.08.04  14/08/2000  Jill Habasque SRF 5029                       *
.*                  Added VADOB000 - mods to match between date range instead*
.*                  of just comparing PBDATE to the keyed in date.           *
.*        V5.08.03  18/07/2000  Caleb Sharman SRF 3394                       *
.*                  Mods so the DOB search looks through the pre-admis.      *
.*                  file as well as the PMI. (Other searches do this)        *
.*        V5.08.02  07/07/2000  Caleb Sharman SRF 646931                     *
.*                  Added error message for future DOB in other search's     *
.*        V5.08.01  01/05/2000  Greg Horvat                                  *
.*                  Changed to open patmx1af when opening patma1af           *
.*        V5.08.B01 24/01/2000  Steve Downing  SRF 646413                    *
.*                  Added error message for future DOB in DOB search         *
.*                                                                           *
.*****************************************************************************
.*      V5.07.02   23/06/1999  Andrew Peel  SRF  645681                      *
.*                 Fixed DOB search - previous screen option                 *
.*      V5.07.01   22/06/1999  Andrew Peel                                   *
.*                 Removed code used for old date format (DD/MM/YY)          *
.*      V5.07.B03  19/01/1999  Nicole Harrington                             *
.*                 Mods to fix DOB search                                    *
.*      V5.07.B02  10/12/1998  Davin                                         *
.*                 Increment array counter (CSRHNO) by 1, not 2, when        * 
.*                 displaying previous record (PREVS580 - 2 lines per pat.)  *
.*                 09/12/1998  Steve Armstrong                               *
.*                 Fixed resetting of FORM2 after returning from calc. of    *
.*                 patient age (when displaying 2 lines per patient DISPR580)*
.*      V5.07.B01  07/12/1998  Davin  SRF 645159                             *
.*                 Fixed 'previous' option in soundex search (save tmpkey &  *
.*                 always call FIRSN000 to get first record)                 *
.*      V5.07.B00  08/10/1998  Glenn Berry      5.07 changes                 *
.*****************************************************************************
.*       V5.00     04/04/89 K.Peak                                           *
.*                 Unable to admit deceased patients now  SRF 4959           *
.*       V5.01     05/06/89 Graeme Williams     SRF 4705                     *
.*                 Allow for 0 U/R patients                                  *
.*       V5.02     26/06/89 J.Tan           SRF 100410                       *
.*                 Endset/reset given name                                   *
.*       V5.03     27/06/89 M.Ohleiter                                       *
.*                 Updated for release 5.01                                  *
.*       V5.04     29.06.89 E.Phan                                           *
.*                 Removed above code.  Solved above problem with a check    *
.*                 for EOS and a CLEAR.  This  also fixes SRF 101299 which   *
.*                 rejects partial given names.                              *
.*       V5.01.01  15/08/89 M.Ohleiter                                       *
.*                 Added SRCHOPT=3 option                                    *
.*                 16/08/89 Graeme Williams                                  *
.*                 Added ranges to D.O.B. tests                              *
.*                 Allow for the input of an Age                             *
.*       V5.01.02  09/10/89 M.Ohleiter      SRF 102392                       *
.*                 Fixed DOB calcul'n (1900-09)                              *
.*       V5.01.03  09/01/90 Graeme Williams  SRF 103238                      *
.*                 Retain search parameters in multiple searches             *
.*       V5.01.04  12/02/90 D.Di.Paola.                                      *
.*                 Fixed extraction of outpat. pre-att. details and inpat.   *
.*                 pre-adm. details because if Getsvar routine is used it    *
.*                 changes the display variables SRF 103794                  *
.*       V5.01.05  27/02/90 D.Di.Paola                                       *
.*                 Fixed searching for zero U/R No's by restoring u/r no. to *
.*                 purno after reading patpramf Therefore avoiding problems  *
.*                 with duplicate U/R & Billing Numbers...       SRF 103983  *
.*       V5.01.06  13/07/90 Paul Duncan                                      *
.*                 added search thru the alternative surname file - the      *
.*                 branches on PTCNCNDX                                      *
.*       V5.01.07  24/01/91 Graeme Williams                                  *
.*                 Allowed for bookings from the BOKRC1FD file.              *
.*       V5.01.08  23/05/91 Graeme Williams                                  *
.*                 Fixed up D.O.B. and Age                                   *
.*       V5.01.09  29/05/92 Graeme Williams   SRF 114897                     *
.*                 Fixed if DOB in prev. century                             *
.*       V5.01.10  02/12/92 Steve O'Gorman                                   *
.*                 Added Rev Surn/Giv Search Added New Picking List          *
.*       V5.01.11  08/12/92 Steve O'Gorman                                   *
.*                 Added DOB Search                                          *
.*       V5.01.12  19/03/1993    Justin Coates                               *
.*                 Added (R)egister option if CREGOPT = one                  *
.*                                                                           *
.*       V5.01.13  23/04/1993    ROD                                         *
.*                 --------->  RE-WRITTEN  <---------       (Super!)         *
.*       V5.01.14  02/09/93 Whirlpool    SRF 440260                          *
.*                 Changed Date of birth search to test century              *
.*       V5.01.15  19/11/93 Whirlpool    SRF 440451                          *
.*                 Made call to NZCLR Parameter driven - good one Chucky     *
.*       V5.01.16  30/12/1993  Glenn Berry       Taranaki Mods (3.1.2)       *
.*                 Return closest match first in soundex search (PTCNCMSX)   *
.*       V5.01.17  21/01/1994    Justin Coates   SRF 440345                  *
.*                 When (R)egister, set CMPURNO tpo ZEROUR                   *
.*       V5.01.18  11/05/1994    Matt Surridge                               *
.*                 Set NMPNUMB to SPACES before doing search.                *
.*       V5.01.19  17/05/1194    Ian Rutt                                    *
.*                 Added Calcage to determine patients age in either years,  *
.*                 months, weeks, or days.  Only calls Calcage when the      *
.*                 parameter (PTCNDATE) is a 1                               *
.*       V5.01.20  13/07/1994   Rob Leonard                                  *
.*                 Fixed displaying on wrong row when (S)earch more option   *
.*                 chosen. Only happened when Calcage called.                *
.*                 15/07/1994   Rob Leonard                                  *
.*                 Changed (R)egister prompt to Search Na(T)ional if NZHIS   *
.*       V5.03.01  19/05/1995   ROD                                          *
.*                 Fixed soundex search when using closest match             *
.*       V5.03.02  26/05/1995  Greg Horvat       SRF 640142                  *
.*                 Fixed the keyin of the given name & sex to work correctly *
.*                 when using delete, backspace or arrow keys if a default   *
.*                 intail/name is set.                                       *
.*       V5.03.03  13/07/1995  Whirlpool                                     *
.*                 Fixed call to CALCAGE if patient is dead i.e AGEDATE      *
.*       V5.03.04  03/11/1995  Steve Armstrong   SRF 612481/612532           *
.*                 Fixed soundex search when running closest match first     *
.*                 with PTCNSNDX set to 0 (surname only).                    *
.*                 After strict match finished, sdxsnam & sdxgnam were set   *
.*                 to the values of the last record read in the surname file,*
.*                 so soundex search never found original person.            *
.*                 Added code to reset to original search parameters after   *
.*                 strict search.                                            *
.*       V5.03.05  14/12/95 J.Tan    SRF 613019                              *
.*                 Fixed restoring date of birth search variable             *
.*       V5.04.01  10/07/1996  Steve Armstrong   SRF 641714                  *
.*                 Fixed bug with "Returning Closest Match.." set to "Yes"   *
.*                 not checking patient given name as well as surname for    *
.*                 strict surname match.                                     *
.*                                                                           *
.*****************************************************************************

.*********************************************************************
.*  SOUND000  :  Sound-ex search                                     *
.*********************************************************************
SOUND000  
          MATCH     "IBAPAT32",PRGID
          IF        !@EQUAL
              MOVE      FORM1,OPTION
          ELSE
              GOTO  SOUND020
          ENDIF
.
          MATCH     "IBAHOS31",PRGID
          GOTO      SOUND010 IF EQUAL
          MATCH     "IBAPAT31",PRGID
          GOTO      SOUND020 IF NOT EQUAL
.
SOUND010  IF        XOPTION=XURG | XOPTION=XURMH
              MOVE      ONE,OPTION
          ENDIF
.
          IF        XOPTION=XSOUNDG | XOPTION=XSOUNDMH
              MOVE      FOUR,OPTION
          ENDIF
.
SOUND020  MOVE      ZERO,NZIBDOBS                * not doing DOB search
          CALL      SRCHCLR                      * Clear the search parameters
          CALL      RDPAR000                     * read system parametres
.
SOUND050  CALL      SPARA000                     * keyin Search Parameters
          BRANCH    EXIT,SOUND900                * no search parameters input
...       TRAP      SOUND400 IF F1               * F1 to end search
.
SOUND075  CALL      SHEAD000                     * display header
          MOVE      ZERO,CMSXFLAG
.
.------   Using Closest Match in Soundex Search?
SOUND090  IF        PTCNCMSX=1
            CALL      SCMSX000                   * Search for Strict Matches
            BRANCH    SRCHFLAG,SOUND999:         * Item selected
                               SOUND999:         * ********
                               SOUND900:         * (E)xit
                               SOUND950:         * (R)egister
                               SOUND600          * (D)OB
.
            UNPACK    SP30,GSRSKEY,GSRGKEY1:     * Initialize
                        GSRGKEY2  
.
            MOVE      ONE,CMSXFLAG
            MOVE      CPAGENO,CPAGETMP
            MOVE      TMPKEY98,CMFIRST
            MOVE      TMPURNO,CMSXURNO
            MOVE      TMPBILL,CMSXBILL
.
          ENDIF
.
. loop thru the sound-ex order records
.
          IF        PTCNCMSX=0
             MOVE   ONE,CPAGENO
          ENDIF
.
          MOVE      ZERO,FORM1                   * we are reading order records
          CALL      RSSND000                     * Positional Reads Soundex Srch
SOUND100  CALL      RKSND000                     * read next record
          BRANCH    OVRCD,SOUND200               * no more records
          GOTO      SOUND250                     * go and display this record
.
. now try Reverse Sound-ex searchs
.
SOUND200  CALL      RSRSX000                     * Posit reads Reverse Surname
          BRANCH    EXIT,SOUND500                * not doing Reverse search
          MOVE      ONE,FORM1                    * we are reading reverse recs
SOUND210  CALL      RKRSX000                     * Read Next record
          BRANCH    OVRCD,SOUND500               * no more records
.
. We have a valid record - check if screen is full
.
SOUND250  CALL      CHEKF000
          COMPARE   TWENTY3,CLINES
          GOTO      SOUND300 IF LESS
          COMPARE   TWENTY3,CLINES
          GOTO      SOUND300 IF EQUAL
.
. screen is full
.
          MOVE      CCOL4,PGNARRAY[CPAGENO]
          MOVE      ONE,SRCHSCRN            * we have a next screen flag
          CALL      SOPTN000                * Ask line 24 options
          BRANCH    SRCHFLAG,SOUND999:      * Item selected
                             SOUND850:      * (N)ext 
                             SOUND900:      * (E)xit 
                             SOUND950:      * (R)egister
                             SOUND600:      * (D)OB
                             SOUND290:      * (S)earch More
                             SOUND260       * (P)revious Screen
.
SOUND260  CALL      FIRSN000 
          BRANCH    EXIT,SOUND075
          IF        PTCNCMSX=0
             GOTO      SOUND270
          ELSE
             IF        CPAGENO=CPAGETMP
                GOTO      SOUND090
             ENDIF
             IF        (CPAGENO+1)=CPAGETMP
                MOVE      ONE,CURRSCRN
                GOTO      SOUND090
             ENDIF
          ENDIF 
.
SOUND270  CALL      RPSND000
          BRANCH    OVRCD,SOUND300
          CALL      PREVS000
          COMPARE   PGNARRAY[CPAGENO],CSRHNO
          GOTO      SOUND290 IF EQUAL
.
          GOTO      SOUND270
.
.         search more (set up for new screen)
.
SOUND290  MOVE      FORM2,CVERT
          MOVE      ZERO,CCOL4                    * init array counter
          DISPLAY   *P1:CVERT,*EF
.
. display the record
.
SOUND300  CALL      DISPR000
          BRANCH    FORM1,SOUND210               * we are reading reverse recs
          GOTO      SOUND100                      * get next record (normal)
.
SOUND400  NORETURN                                * Comes here if F1 was hit
.
. we have no more records to display
.
SOUND500  MOVE      ZERO,SRCHSCRN             * no next screen flag
          CALL      SOPTN000                * Ask line 24 options
          BRANCH    SRCHFLAG,SOUND999:      * Item selected
                             SOUND850:      * (N)ext
                             SOUND900:      * (E)xit
                             SOUND950:      * (R)egister
                             SOUND600       * (D)OB
.
                    GOTO     SOUND260       * (P)revious Screen
.
SOUND600  MOVE      ONE,SRCHCLR             * dont clear search parameters
          CALL      DBRTH000                * do DOB search
          MOVE      ZERO,SRCHCLR            * clear search parameter flag
          BRANCH    SRCHFLAG,SOUND999,SOUND050       * Item selected or Register
          GOTO      SOUND900
.
SOUND850  MOVE      SRCHSVRT,CVERT          * Next input,  so restore row,column
          MOVE      SRCHSCOL,CCOL
          GOTO      SOUND050
.
SOUND900  MOVE      ZERO,SRCHFLAG                * Exit Search
          GOTO      SOUND999
.
. Register
.
SOUND950  MOVE      ONE,SRCHFLAG                 * Register selected
          MOVE      TWO,NZOPTION                 * in case automatic search on
          CALL      NATSR000                     * do National search if reqd.
.
SOUND999  MOVE      SRCHSVRT,CVERT               * restore row,column
          MOVE      SRCHSCOL,CCOL
          RETURN
+
.*********************************************************************
.*  STRCT000  :  Strict Surname search                               *
.*********************************************************************
STRCT000  
.
          MATCH     "IBAPAT32",PRGID
          IF        !@EQUAL
              MOVE      FORM1,OPTION
          ELSE
              GOTO  STRCT020
          ENDIF
.
          MATCH     "IBAHOS31",PRGID
          GOTO      STRCT010 IF EQUAL
          MATCH     "IBAPAT31",PRGID
          GOTO      STRCT020 IF NOT EQUAL
.
STRCT010  IF        XOPTION=XURG | XOPTION=XURMH
              MOVE      ONE,OPTION
          ENDIF
.
          IF        XOPTION=XSTRCTG | XOPTION=XSTRCTMH
              MOVE      THREE,OPTION
          ENDIF
.
STRCT020  MOVE      ZERO,NZIBDOBS                * not doing DOB search
          CALL      SRCHCLR                      * Clear the search parameters
          CALL      RDPAR000                     * read system parametres
.
STRCT050  CALL      SPARA000                     * keyin Search Parameters
          BRANCH    EXIT,STRCT900                * no search parameters input
...       TRAP      STRCT400 IF F1               * F1 to end search
.
STRCT075  CALL      SHEAD000                     * display header
.
. loop thru the strict order surname records
.
          MOVE      ONE,CPAGENO                  * This is Page #1
          MOVE      TWENTY3,PGNARRAY[CPAGENO]
          MOVE      ZERO,FORM1                   * we are reading order records
          CALL      RSSTR000                     * Positional Reads Strict Surn.
STRCT100  CALL      RKSTR000                     * read next record
          BRANCH    OVRCD,STRCT200               * no more records
          GOTO      STRCT250                     * go and display this record
.
. now try Reverse Strict search
.
STRCT200  CALL      RSRST000                     * Position reads Reverse Strict
          BRANCH    EXIT,STRCT500                * not doing Reverse search
          MOVE      ONE,FORM1                    * we are reading reverse recs
.
STRCT210  CALL      REVST000                     * get next record
          BRANCH    OVRCD,STRCT500               * no more records
.
. We have a valid record - check if screen is full
.
STRCT250  CALL      CHEKF000
          COMPARE   TWENTY3,CLINES
          GOTO      STRCT300 IF LESS
          COMPARE   TWENTY3,CLINES
          GOTO      STRCT300 IF EQUAL
.
. screen is full
.
          MOVE      CCOL4,PGNARRAY[CPAGENO]
          MOVE      ONE,SRCHSCRN            * we have a next screen flag
          CALL      SOPTN000                * Ask line 24 options
          BRANCH    SRCHFLAG,STRCT999:      * Item selected
                             STRCT850:      * (N)ext
                             STRCT900:      * (E)xit
                             STRCT950:      * (R)egister
                             STRCT600:      * (D)OB
                             STRCT290:      * (S)earch More
                             STRCT260       * (P)revious Screen
.
STRCT260  CALL      FIRST000
          BRANCH    EXIT,STRCT075           * No records left
.
STRCT270  CALL      RPSTR000                * get the previous record
          BRANCH    OVRCD,STRCT300
          CALL      PREVS000
          COMPARE   PGNARRAY[CPAGENO],CSRHNO
          GOTO      STRCT290 IF EQUAL
.
          GOTO      STRCT270
.
STRCT290  MOVE      FORM2,CVERT
          MOVE      ZERO,CCOL4                    * init array counter
          DISPLAY   *P1:CVERT,*EF
.
. display the record
.
STRCT300  CALL      DISPR000
          BRANCH    FORM1,STRCT210                * we are reading reverse recs
          GOTO      STRCT100                      * get next record (normal)
.
STRCT350
.
STRCT400  NORETURN                                * Comes here if F1 was hit
.
. we have no more records to display
.
STRCT500  MOVE      ZERO,SRCHSCRN           * no next screen flag
          CALL      SOPTN000                * Ask line 24 options
          BRANCH    SRCHFLAG,STRCT999:      * Item selected
                             STRCT850:      * (N)ext
                             STRCT900:      * (E)xit
                             STRCT950:      * (R)egister
                             STRCT600       * (D)OB
.
          GOTO      STRCT260                * (P)revious Screen
.
STRCT600  MOVE      ONE,SRCHCLR             * dont clear search parameters
          CALL      DBRTH000                * do DOB search
          MOVE      ZERO,SRCHCLR            * clear search parameter flag
          BRANCH    SRCHFLAG,STRCT999,STRCT050       * Item selected or Register
          GOTO      STRCT900
.
STRCT850  MOVE      SRCHSVRT,CVERT          * Next input,  so restore row,column
          MOVE      SRCHSCOL,CCOL
          GOTO      STRCT050
.
STRCT900  MOVE      ZERO,SRCHFLAG                * Exit Search
          GOTO      STRCT999
.
STRCT950  MOVE      ONE,SRCHFLAG                 * Register selected
          MOVE      "1",NZOPTION                 * in case automatic search on
          CALL      NATSR000                     * do National search if reqd.
.
STRCT999  MOVE      SRCHSVRT,CVERT               * restore row,column
          MOVE      SRCHSCOL,CCOL
          RETURN
+
.**************************************************************************
.*  FIRST000  :  Get the first record on the screen, ready to read previous *
.**************************************************************************
FIRST000  IF        CURRSCRN=1
              MOVE     ZERO,CCOL4
              MOVE     SIX,CVERT
              MOVE     ZERO,CURRSCRN
          ENDIF
.
          MOVE      ZERO,EXIT
          MOVE      ZERO,CSRHNO
          DISPLAY   *P1:6,*EF
.
. ---- Using Given & Surname File ----
.
FIRST100  PACK      KEY98,TMPKEY98
          CALL      RDPTGSR2          * read first of duplicate records
          BRANCH    OVRCD,FIRST900
FIRST150  MATCH     GSRURNO,TMPURNO
          GOTO      FIRST200 IF NOT EQUAL     * correct urno?
.
          MATCH     GSRBILL,TMPBILL           * correct billing no?
          GOTO      FIRST999 IF EQUAL         * correct rec, ready to read
.                                             * back through file
FIRST200  CALL      RKPTGSR2
          BRANCH    OVRCD,FIRST900
          GOTO      FIRST150
.
FIRST900  MOVE      ONE,EXIT
.
FIRST999  RETURN
.**************************************************************************
.*  FIRSN000  :  Get the first record on the screen, ready to read previous *
.**************************************************************************
FIRSN000  MOVE      ZERO,EXIT
          MOVE      ZERO,CSRHNO
          DISPLAY   *P1:6,*EF
.
. ---- Using Given & Surname File ----
.
FIRSN100  PACK      KEY34,TMPKEY34
          CALL      RDPTGSR3          * read first of duplicate records
          BRANCH    OVRCD,FIRSN900
FIRSN150  MATCH     GSRURNO,TMPURNO
          GOTO      FIRSN200 IF NOT EQUAL     * correct urno?
.
          MATCH     GSRBILL,TMPBILL           * correct billing no?
          GOTO      FIRSN999 IF EQUAL         * correct rec, ready to read
.                                             * back through file
FIRSN200  CALL      RKPTGSR3
          BRANCH    OVRCD,FIRSN900
          GOTO      FIRSN150
.
FIRSN900  MOVE      ONE,EXIT
.
FIRSN999  RETURN
.**************************************************************************
.*  CHEKF000  :  Check record to determine no. of lines to print          *
.**************************************************************************
CHEKF000  MOVE      ZERO,SRCHFLAG                * Assume we will continue
          MOVE      ZERO,CLINES
.
.        Check for a 0 U/R record
.
CHEKF010  MATCH     ZEROUR,GSRURNO
          GOTO      CHEKF100 IF NOT EQUAL
.
.        We have a patient without a U/R number. Check that we have the
.        desired system
.
          COMPARE   ZERO,SRCHSYS                 * All systems wanted ?
          GOTO      CHEKF020 IF EQUAL            * Yes. Get the pre-adm details
.
          COMPARE   GSRSYS,SRCHSYS               * Do we have the correct sys ?
          GOTO      CHEKF999 IF NOT EQUAL        * No. Ignore record
.
.        Get the details of this 0 U/R number
.
CHEKF020  MOVE      GSRBILL,PURNO
          MOVE      PURNO,KEY8
          CALL      RDPRAM1                      * Get the pre-adm details
          BRANCH    OVRCD,CHEKF999               * No details -> ignore record
          MOVE      GSRURNO,PURNO                * Restore correct U/R No.
.
.        Now get the visit details
.
          BRANCH     GSRSYS,CHEKF999,CHEKF150,CHEKF150
          GOTO       CHEKF999
.
.        We have a U/R number. Get the details and validate them
.
CHEKF100 MOVE       GSRURNO,PURNO
         MOVE       PURNO,KEY8
         CALL       RDMAST1
         BRANCH     OVRCD,CHEKF999
         CALL       RDPMPX21
.
.        Test for a valid sex
.
CHEKF150 MATCH      SP1,SRCHSEX
         GOTO       CHEKF200 IF EQUAL
.
         MATCH      PSEX,SRCHSEX
         GOTO       CHEKF999 IF NOT EQUAL       * Invalid sex - continue
.
.        Test for a valid date of birth
.
CHEKF200 MATCH      SP4,SRCHFDAT
         GOTO       CHEKF500 IF EQUAL
.
          UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
         PACK       SRCHWORK,CMON,CDAY
.
.        Two different sets of test, depending on whether or not the
.        ending date is less than the starting date, or not.
.
         MATCH      SRCHFDAT,SRCHTDAT
         GOTO       CHEKF250 IF LESS
.
.        We want a date in the date range, and in the year range
.
         MATCH      SRCHFDAT,SRCHWORK
         GOTO       CHEKF999 IF LESS
.
         MATCH      SRCHWORK,SRCHTDAT
         GOTO       CHEKF999 IF LESS
.
         PACK       SRCHWORK,CCENT,CYEAR
         REP        " 0",SRCHWORK
.
         MATCH      SRCHFSYR,SRCHWORK
         GOTO       CHEKF999 IF LESS
.
         MATCH      SRCHWORK,SRCHTSYR
         GOTO       CHEKF999 IF LESS
.
         GOTO       CHEKF500            * Valid record
.
.        We want a date less that the todate, OR after the start date
.        This occurs when the valid date is something like 27/12 to 03/01
.
CHEKF250 MATCH      SRCHFDAT,SRCHWORK
         GOTO       CHEKF270 IF LESS
.
.        We have a date after the starting date
.
         PACK       SRCHWORK,CCENT,CYEAR
         REP        " 0",SRCHWORK
.
         MATCH      SRCHFSYR,SRCHWORK
         GOTO       CHEKF999 IF LESS
.
         MATCH      SRCHWORK,SRCHTSYR
         GOTO       CHEKF999 IF LESS
.
         GOTO       CHEKF500            * Valid record
.
.        We have a date before the to date
.        Check if after the from date
.
CHEKF270 MATCH      SRCHWORK,SRCHTDAT
         GOTO       CHEKF999 IF LESS
.
         PACK       SRCHWORK,CCENT,CYEAR
         REP        " 0",SRCHWORK
.
         MATCH      SRCHFEYR,SRCHWORK
         GOTO       CHEKF999 IF LESS
.
         MATCH      SRCHWORK,SRCHTEYR
         GOTO       CHEKF999 IF LESS
.
.        Set up the rest of the variables ready to display
.
CHEKF500  MOVE      SP1,ANS
          LOAD      ANS,PCASE,CCNOTES    * Load case notes indicator
.
          MOVE      PTMASNAM,SRCHSN
          MOVE      PMPXFNAM,SRCHGN
.
.        Set up last column depending on the display option desired
.
          BRANCH    SRCHOPT,CHEKF540,CHEKF550,CHEKF560
.
.        Set up with the deceased indicator
.
CHEKF520  MOVE      "DECEASED       ",SRCHVAR
          BRANCH    PCEASE,CHEKF600
          MOVE      SP20,SRCHVAR
          GOTO      CHEKF600
.
.        Programmer defined value - used by enquiries to show admission status
.
CHEKF540  CALL      GETSVAR
          GOTO      CHEKF600
.
.        Set up with the first address line
.
CHEKF550  BRANCH    SRCHPCKL,CHEKF520            * No Address if Nes Pick. List
          MOVE      PADD1,SRCHVAR
          GOTO      CHEKF600
.
.        Set variables for surname enquiry
.
CHEKF560  CALL      GETSVAR                      * Set up SRCHDIAG,SRCHWBED
.
.        Display the record
.
CHEKF580  BRANCH    SRCHPCKL,CHEKF600            * New Picking List
.
          SETLPTR   SRCHSN,17
          SETLPTR   SRCHGN,16
          ADD       ONE,CLINES
          GOTO      CHEKF650
.
.        Display the record
.
CHEKF600 MOVE       FORM2,DIM2         * save FORM2 value
         MOVE       DIM2,FORM2
.
         SETLPTR    SRCHSN,17
         SETLPTR    SRCHGN,16
         SETLPTR    SRCHVAR,15
.
. ---  New 2nd Line of the Picking List  ---
.
         IF         SRCHPCKL=1
           ADD        ONE,CLINES
         ENDIF
.
CHEKF650 ADD        ONE,CLINES
.
.        Check if this was a 0 U/R record
.
         MATCH      ZEROUR,GSRURNO
         GOTO       CHEKF800 IF EQUAL
.
.        Check if this was an alias record
.
         MATCH      GSRSNAM,PTMASNAM
         GOTO       CHEKF700 IF NOT EQUAL
.
         MATCH      GSRGNAM,PMPXFNAM
         GOTO       CHEKF999 IF EQUAL
.
         MATCH      PTGSGNM2,PMPXSNAM
         GOTO       CHEKF999 IF EQUAL
.
.        Display the alias
.
CHEKF700 ADD        ONE,CLINES
         GOTO       CHEKF999
.
.        A Zero U/R number. Display the visit details for this record
.
CHEKF800 BRANCH     GSRSYS,CHEKF999,CHEKF820,CHEKF840
         GOTO       CHEKF999
.
.        Outpatient pre-attendance booking
.
CHEKF820 
         MOVE       GSRBILL,KEY8
         OPEN       OUTPREA1,"outpreaf"
         CALL       RDPREA1
         CLOSE      OUTPREA1
         BRANCH     OVRCD,CHEKF830               * No details, ignore record
.
         ADD        ONE,CLINES 
         GOTO       CHEKF999
.
.        Outpatient Referral
.
CHEKF830 PROC       OUTRF000
         GOTO       CHEKF999
.
.        Inpatient pre-admission booking
.
CHEKF840 
         MOVE       GSRBILL,AADMNO
         MOVE       AADMNO,KEY8
         CALL       RDMISS1
         BRANCH     OVRCD,CHEKF850      * No details, check for a booking
.
         ADD        ONE,CLINES
         GOTO       CHEKF999
.
.        Inpatient booking (from BOKRC1FD)
.
.        We are using the 6th index instead of the 1st index, as some
.        programs will have the 1st index open already, while others
.        will not. No program that needs this include should have the
.        6th index open, so this include can quite safely open and close
.        this index as required.
.
CHEKF850 OPEN      BOKRC1A6,"bokrc1af"
         PACK       KEY16,GSRURNO,GSRBILL
         CALL       RDBKREC6
         BRANCH     OVRCD,CHEKF859      * No booking. Ignore record
         ADD        ONE,CLINES
.
CHEKF859 CLOSE     BOKRC1A6
.
CHEKF999 ADD        CVERT,CLINES
         RETURN
+
.**************************************************************************
.*  RPSTR000  :  Read the previous record                                 *
.**************************************************************************
.
. --- using the given surname file ---
.
RPSTR000  BRANCH    SRCHHREC,RPSTR020   * using sdxsys as flag to say whether
                                        * we've had a full read or just a rds
          CALL      RPPTGSR2
          BRANCH    OVRCD,RPSTR999      * no more records
.
RPSTR020  MATCH     SRCHSUR,GSRSNAM
          GOTO      RPSTR900 IF NOT EQUAL         * no more records
.
.          DISPLAY   *P55:24,GSRSNAM;
.
          MATCH     SRCHGIV,SP70
          GOTO      RPSTR100 IF EQUAL
.
          MATCH     SRCHGIV,GSRGNAM
          GOTO      RPSTR200 IF LESS
          GOTO      RPSTR300 IF NOT EQUAL
.
RPSTR100  MOVE      ZERO,SRCHHREC        * clear flag
          MOVE      ZERO,OVRCD           * valid record
          GOTO      RPSTR999
.
.        Records given name less than that wanted - jump forward
.
RPSTR200  PACK      KEY98,GSRSNAM,SRCHGIV,SP70,SP70
          CALL      RDPTGSR2
          COMPARE   ZERO,OVRCD
          GOTO      RPSTR020 IF EQUAL
          CALL      RSPTGSR2
          MOVE      ZERO,SRCHHREC        * flag to say we did a rds
          GOTO      RPSTR000
.
.        We have finished the given names for this particular surname
.        try the next surname with the same starting string
.
RPSTR300  MOVE      "~",ANS
          PACK      KEY98,GSRSNAM,ANS,ANS,ANS,SP70,SP70
          CALL      RDPTGSR2
          COMPARE   ZERO,OVRCD
          GOTO      RPSTR020 IF EQUAL
          CALL      RSPTGSR2
          MOVE      ZERO,SRCHHREC        * flag to say we did a rds
          GOTO      RPSTR000
.
RPSTR900  MOVE      ONE,OVRCD            * no more records
.
RPSTR999 RETURN
+
.**************************************************************************
.*  PREVS000  :  Subroutine to process Previous Screen records            *
.**************************************************************************
PREVS000  MOVE      ZERO,SRCHFLAG                * Assume we will continue
.
.        Check for a 0 U/R record
.
PREVS010  MATCH     ZEROUR,GSRURNO
          GOTO      PREVS100 IF NOT EQUAL
.
.        We have a patient without a U/R number. Check that we have the
.        desired system
.
          COMPARE   ZERO,SRCHSYS                 * All systems wanted ?
          GOTO      PREVS020 IF EQUAL            * Yes. Get the pre-adm details
.
          COMPARE   GSRSYS,SRCHSYS               * Do we have the correct sys ?
          GOTO      PREVS999 IF NOT EQUAL        * No. Ignore record
.
.        Get the details of this 0 U/R number
.
PREVS020  MOVE      GSRBILL,PURNO
          MOVE      PURNO,KEY8
          CALL      RDPRAM1                      * Get the pre-adm details
          BRANCH    OVRCD,PREVS999               * No details -> ignore record
          MOVE      GSRURNO,PURNO                * Restore correct U/R No.
.
.        Now get the visit details
.
          BRANCH     GSRSYS,PREVS999,PREVS150,PREVS150
          GOTO       PREVS999
.
.        We have a U/R number. Get the details and validate them
.
PREVS100 MOVE       GSRURNO,PURNO
         MOVE       PURNO,KEY8
         CALL       RDMAST1
         BRANCH     OVRCD,PREVS999
         CALL       RDPMPX21
.
.        Test for a valid sex
.
PREVS150 MATCH      SP1,SRCHSEX
         GOTO       PREVS200 IF EQUAL
.
         MATCH      PSEX,SRCHSEX
         GOTO       PREVS999 IF NOT EQUAL       * Invalid sex - continue
.
.        Test for a valid date of birth
.
PREVS200 MATCH      SP4,SRCHFDAT
         GOTO       PREVS500 IF EQUAL
.
          UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
         PACK       SRCHWORK,CMON,CDAY
.
.        Two different sets of test, depending on whether or not the
.        ending date is less than the starting date, or not.
.
         MATCH      SRCHFDAT,SRCHTDAT
         GOTO       PREVS250 IF LESS
.
.        We want a date in the date range, and in the year range
.
         MATCH      SRCHFDAT,SRCHWORK
         GOTO       PREVS999 IF LESS
.
         MATCH      SRCHWORK,SRCHTDAT
         GOTO       PREVS999 IF LESS
.
         PACK       SRCHWORK,CCENT,CYEAR
         REP        " 0",SRCHWORK
.
         MATCH      SRCHFSYR,SRCHWORK
         GOTO       PREVS999 IF LESS
.
         MATCH      SRCHWORK,SRCHTSYR
         GOTO       PREVS999 IF LESS
.
         GOTO       PREVS500            * Valid record
.
.        We want a date less that the todate, OR after the start date
.        This occurs when the valid date is something like 27/12 to 03/01
.
PREVS250 MATCH      SRCHFDAT,SRCHWORK
         GOTO       PREVS270 IF LESS
.
.        We have a date after the starting date
.
         PACK       SRCHWORK,CCENT,CYEAR
         REP        " 0",SRCHWORK
.
         MATCH      SRCHFSYR,SRCHWORK
         GOTO       PREVS999 IF LESS
.
         MATCH      SRCHWORK,SRCHTSYR
         GOTO       PREVS999 IF LESS
.
         GOTO       PREVS500            * Valid record
.
.        We have a date before the to date
.        Check if after the from date
.
PREVS270 MATCH      SRCHWORK,SRCHTDAT
         GOTO       PREVS999 IF LESS
.
         PACK       SRCHWORK,CCENT,CYEAR
         REP        " 0",SRCHWORK
.
         MATCH      SRCHFEYR,SRCHWORK
         GOTO       PREVS999 IF LESS
.
         MATCH      SRCHWORK,SRCHTEYR
         GOTO       PREVS999 IF LESS
.
.        Set up the rest of the variables ready to display
.
PREVS500  MOVE      SP1,ANS
          LOAD      ANS,PCASE,CCNOTES    * Load case notes indicator
.
          MOVE      PTMASNAM,SRCHSN
          MOVE      PMPXFNAM,SRCHGN
.
.        Set up last column depending on the display option desired
.
          BRANCH    SRCHOPT,PREVS540,PREVS550,PREVS560
.
.        Set up with the deceased indicator
.
PREVS520  MOVE      "DECEASED       ",SRCHVAR
          BRANCH    PCEASE,PREVS600
          MOVE      SP20,SRCHVAR
          GOTO      PREVS600
.
.        Programmer defined value - used by enquiries to show admission status
.
PREVS540  CALL      GETSVAR
          GOTO      PREVS600
.
.        Set up with the first address line
.
PREVS550  BRANCH    SRCHPCKL,PREVS520            * No Address if Nes Pick. List
          MOVE      PADD1,SRCHVAR
          GOTO      PREVS600
.
.        Set variables for surname enquiry
.
PREVS560  CALL      GETSVAR                      * Set up SRCHDIAG,SRCHWBED
.
.        Display the record
.
PREVS580  BRANCH    SRCHPCKL,PREVS600            * New Picking List
.
          ADD       ONE,CSRHNO                     * increment array counter
          SETLPTR   SRCHSN,17
          SETLPTR   SRCHGN,16
          GOTO      PREVS650
.
.        Display the record
.
PREVS600 MOVE       FORM2,DIM2         * save FORM2 value
         MOVE       DIM2,FORM2
.
         ADD        ONE,CSRHNO                     * increment array counter
         SETLPTR    SRCHSN,17
         SETLPTR    SRCHGN,16
         SETLPTR    SRCHVAR,15
.
. ---  New 2nd Line of the Picking List  ---
.
PREVS650 
.        Check if this was a 0 U/R record
.
         MATCH      ZEROUR,GSRURNO
         GOTO       PREVS800 IF EQUAL
.
.        Check if this was an alias record
.
         MATCH      GSRSNAM,PTMASNAM
         GOTO       PREVS700 IF NOT EQUAL
.
         MATCH      GSRGNAM,PMPXFNAM
         GOTO       PREVS999 IF EQUAL
.
         MATCH      PTGSGNM2,PMPXSNAM
         GOTO       PREVS999 IF EQUAL
.
.        Display the alias
.
PREVS700 
         GOTO       PREVS999
.
.        A Zero U/R number. Display the visit details for this record
.
PREVS800 BRANCH     GSRSYS,PREVS999,PREVS820,PREVS840
         GOTO       PREVS999
.
.        Outpatient pre-attendance booking
.
PREVS820 
         MOVE       GSRBILL,KEY8
         OPEN       OUTPREA1,"outpreaf"
         CALL       RDPREA1
         CLOSE      OUTPREA1
         BRANCH     OVRCD,PREVS830               * No details, ignore record
         GOTO       PREVS999
.
.        Outpatient Referral
.
PREVS830 PROC       OUTRF000
         GOTO       PREVS999
.
.        Inpatient pre-admission booking
.
PREVS840 
         MOVE       GSRBILL,AADMNO
         MOVE       AADMNO,KEY8
         CALL       RDMISS1
         BRANCH     OVRCD,PREVS850      * No details, check for a booking
.
         GOTO       PREVS999
.
.        Inpatient booking (from BOKRC1FD)
.
.        We are using the 6th index instead of the 1st index, as some
.        programs will have the 1st index open already, while others
.        will not. No program that needs this include should have the
.        6th index open, so this include can quite safely open and close
.        this index as required.
.
PREVS850 OPEN      BOKRC1A6,"bokrc1af"
         PACK       KEY16,GSRURNO,GSRBILL
         CALL       RDBKREC6
         BRANCH     OVRCD,PREVS859      * No booking. Ignore record
.
.
PREVS859 CLOSE     BOKRC1A6
.
PREVS999 RETURN
+
.*********************************************************************
.*  FCMSX000  : Get the first strct record for soundex search where  *
.*              PTCNCMSX = 1                                         *
.*********************************************************************
.
FCMSX000   PACK     KEY98,CMFIRST
           CALL     RDPTGSR2
FCMSX250   MATCH    GSRURNO,CMSXURNO
           GOTO     FCMSX300 IF NOT EQUAL
.
           MATCH    GSRBILL,CMSXBILL
           GOTO     FCMSX350 IF EQUAL
.
FCMSX300   CALL     RKPTGSR2
           BRANCH   OVRCD,FCMSX999
           GOTO     FCMSX250
.
FCMSX350   CALL     RPPTGSR2
           GOTO     FCMSX999
.
FCMSX999   RETURN
+ 
.*********************************************************************
.*  SCMSX000  :  Closest Matches for Soundex Search -                *
.*               Do strict matches                                   *
.*********************************************************************
SCMSX000  BRANCH    CURRSCRN,SCMSX700
          BRANCH    CMSXFLAG,SCMSX025
          GOTO      SCMSX075         * super bit of code Berry (Spastic)
.
SCMSX025  MOVE      SIX,CVERT
          MOVE      ZERO,CCOL4
          DISPLAY   *P1:6,*EF
          CALL      FCMSX000
          GOTO      SCMSX100
.
SCMSX050  CALL      SPARA000                     * keyin Search Parameters
          BRANCH    EXIT,SCMSX900                * no search parameters input
...       TRAP      SCMSX400 IF F1               * F1 to end search
SCMSX060  CALL      SHEAD000                     * display header 
.
. loop thru the strict order surname records
.
SCMSX075  MOVE      ONE,CPAGENO
          MOVE      TWENTY3,PGNARRAY[CPAGENO]
          MOVE      ZERO,FORM1                   * we are reading order records
          CALL      RSSTR000                     * Positional Reads Strict Surn.
SCMSX100  CALL      RKSTR000                     * read next record
          BRANCH    OVRCD,SCMSX200               * no more records
          GOTO      SCMSX250                     * go and display this record
.
. now try Reverse Strict search
.
SCMSX200  CALL      RSRST000                     * Position reads Reverse Strict
          BRANCH    EXIT,SCMSX990                * not doing Reverse search
          MOVE      ONE,FORM1                    * we are reading reverse recs
.
SCMSX210  CALL      REVST000                     * get next record
          BRANCH    OVRCD,SCMSX990               * no more records
.
. We have a valid record - check if screen is full
.
SCMSX250  CALL      CHEKF000
          COMPARE   TWENTY3,CLINES
          GOTO      SCMSX300 IF LESS
          COMPARE   TWENTY3,CLINES
          GOTO      SCMSX300 IF EQUAL
.
. screen is full
.
          MOVE      CCOL4,PGNARRAY[CPAGENO]
          MOVE      ONE,SRCHSCRN            * we have a next screen flag
          CALL      SOPTN000                * Ask line 24 options
          BRANCH    SRCHFLAG,SCMSX999:      * Item selected
                             SCMSX850:      * (N)ext
                             SCMSX999:      * (E)xit
                             SCMSX999:      * (R)egister
                             SCMSX999:      * (D)OB
                             SCMSX290:      * (S)earch More
                             SCMSX260       * (P)revious Screen
.
SCMSX260  CALL      FIRST000
          BRANCH    EXIT,SCMSX060
.
SCMSX270  CALL      RPSTR000
          BRANCH    OVRCD,SCMSX300
          CALL      PREVS000
          COMPARE   PGNARRAY[CPAGENO],CSRHNO
          GOTO      SCMSX290 IF EQUAL
.
          GOTO      SCMSX270
.
SCMSX290  MOVE      FORM2,CVERT
          MOVE      ZERO,CCOL4                    * init array counter
          DISPLAY   *P1:CVERT,*EF
.
. display the record
.
SCMSX300  CALL      DISPR000
          BRANCH    FORM1,SCMSX210                * we are reading reverse recs
          GOTO      SCMSX100                      * get next record (normal)
.
SCMSX400  NORETURN                                * Comes here if F1 was hit
.
. we have no more records to display
.
SCMSX500  MOVE      ZERO,SRCHSCRN           * no next screen flag
          CALL      SOPTN000                * Ask line 24 options
          BRANCH    SRCHFLAG,SCMSX999:      * Item selected
                             SCMSX850:      * (N)ext
                             SCMSX999:      * (E)xit
                             SCMSX999:      * (R)egister
                             SCMSX999       * (D)OB
.
          GOTO      SCMSX260
.
SCMSX600  MOVE      ONE,SRCHCLR             * dont clear search parameters
          CALL      DBRTH000                * do DOB search
          MOVE      ZERO,SRCHCLR            * clear search parameter flag
          BRANCH    SRCHFLAG,SCMSX990,SCMSX050       * Item selected or Register
          GOTO      SCMSX900
.
SCMSX700  CALL      FIRST000
          IF        EXIT=1
               MOVE      ZERO,SRCHFLAG
          ENDIF
          BRANCH    EXIT,SCMSX060
SCMSX750  CALL      RPSTR000
          BRANCH    OVRCD,SCMSX300
          CALL      PREVS000
          COMPARE   PGNARRAY[CPAGENO],CSRHNO
          GOTO      SCMSX300 IF EQUAL
          GOTO      SCMSX750
.
.
SCMSX850  MOVE      SRCHSVRT,CVERT          * Next input,  so restore row,column
          MOVE      SRCHSCOL,CCOL
          GOTO      SCMSX050
.
SCMSX890  MOVE      ONE,EXIT
SCMSX900  MOVE      ZERO,SRCHFLAG                * Exit Search
          GOTO      SCMSX999
.
SCMSX950  MOVE      ONE,SRCHFLAG                 * Register selected
          MOVE      "1",NZOPTION                 * in case automatic search on
          CALL      NATSR000                     * do National search if reqd.
.
SCMSX980  MOVE      ONE,EXIT
          GOTO      SCMSX999
.
SCMSX990  MOVE      ZERO,EXIT
          GOTO      SCMSX999
.
SCMSX999  RETURN
+
.************************************************************************
.*  RDPAR000  :  Read in the system parametres                          *
.************************************************************************
RDPAR000  READ      CONTROLF,TEN;*246,SRCHDRNG,SRCHYRNG
          READ      CONTROLF,TWENTY1;*53,SRCHRSGS:         * Reverse Surn/Giv
                                     *54,SRCHPCKL          * Picking List
          READ      CONTROLF,FIFTY9;*231,PTCNRGNS
          READ      CONTROLF,SEVENTY7;*243,PTCNCMSX      
          READ      CONTROLF,EIGHTY;*229,PTCNDATE
.
RDPAR999  RETURN
+
.********************************************************************
.*  RSSND000  :  Initialise for reading via sound-ex                *
.********************************************************************
.
RSSND000  MOVE      SRCHSUR,GSRSNAM               * set up soundex variable
          MOVE      ZERO,SRCHMACH                    
          CALL      SOUNDEX                       * Compute the soundex key
          MOVE      GSRSKEY,SRCHSNDX               * Save key for test in loop
          SCAN      SRCHMACH,SRCHSNDX       * ignore trailing zeros in match
          BUMP      SRCHSNDX,-1             * for surname soundex
          LENSET    SRCHSNDX
          RESET     SRCHSNDX
.
.    no second given name if gsrgkey2 starts with 0 (as first letter is kept)
.
          CMATCH    SRCHMACH,GSRGKEY2
          GOTO      RSSND600 IF EQUAL
.
          MOVE      ONE,SRCHHREC              * use as flag to say if rd or rds
          PACK      KEY34,GSRSKEY,GSRGKEY1,GSRGKEY2,SP70
          CALL      RDPTGSR3
          COMPARE   ZERO,OVRCD
          RETURN    IF EQUAL
          CALL      RSPTGSR3
          MOVE      ZERO,SRCHHREC             * set to rds                   
          GOTO      RSSND999
.
RSSND600  MOVE      ONE,SRCHHREC              * use as flag to say if rd or rds
          PACK      KEY34,GSRSKEY,GSRGKEY1,SP70
          CALL      RDPTGSR3
          COMPARE   ZERO,OVRCD
          RETURN    IF EQUAL
          CALL      RSPTGSR3
          MOVE      ZERO,SRCHHREC             * set to rds                   
.
RSSND999  RETURN
+
.************************************************************************
.*  RSSTR000  :  Do positional reads for strict surname                 *
.************************************************************************
.
RSSTR000  MOVE      ONE,SRCHHREC              * use as flag to say if rd or rds
          MOVE      SRCHSUR,GSRSNAM
          ENDSET    GSRSNAM
          APPEND    SP70,GSRSNAM
          RESET     GSRSNAM
          PACK      KEY98,GSRSNAM,SRCHGIV,SP70,SP70
          CALL      RDPTGSR2              * position on required name
          BRANCH    OVRCD,RSSTR300
          GOTO      RSSTR999
.
RSSTR300  CALL      RSPTGSR2                 * position because no exact record
          MOVE      ZERO,SRCHHREC             * set to rds                   
.
RSSTR999  RETURN
+
.************************************************************************
.*  RSRST000  :  Do positional reads for Reverse strict surname         *
.************************************************************************
RSRST000  MOVE       ONE,EXIT
          COMPARE    ZERO,SRCHRSGS         * reverse giv seq required
          GOTO       RSRST999 IF EQUAL
.
          MATCH      SRCHGIV,SP70          * no given name entered, cant reverse
          GOTO       RSRST999 IF EQUAL
.
          MOVE       SRCHGIV,SSDXSNAM
          SCAN       SP1,SSDXSNAM           * Remove any possible 2nd Given Name
          ENDSET     SSDXSNAM
          APPEND     SP70,SSDXSNAM
          RESET      SSDXSNAM
.
          PACK       KEY98,SSDXSNAM,SRCHSUR,SP70,SP70
          CALL       RDPTGSR2
          IF         OVRCD=0
            MOVE       ONE,SRCHHREC
          ELSE
            CALL       RSPTGSR2
            MOVE       ZERO,SRCHHREC
          ENDIF
          MOVE      ZERO,EXIT
.
RSRST999  RETURN
+
.***********************************************************************
.* RKSND000  :  read in the next soundex order record & double soundex *
.***********************************************************************
.
RKSND000  BRANCH    SRCHHREC,RKSND320   * using srchhrec as flag to say whether
                                        * we've had a full read or just a rds
          CALL      RKPTGSR3
          BRANCH    OVRCD,RKSND999
.
RKSND320  MOVE      ZERO,SRCHMACH
          MOVE      ZERO,SRCHHREC       * clear flag for next entry
          MATCH     SRCHSNDX,GSRSKEY    * right surname soundex?
          GOTO      RKSND900 IF NOT EQUAL
.
          MATCH     SRCHGIV,SP70        * any given name entered?
          GOTO      RKSND350 IF EQUAL
.
          MATCH     SRCHGSX1,GSRGKEY1
          GOTO      RKSND330 IF EQUAL
          GOTO      RKSND325 IF LESS
.
          MOVE      "zzz",GSRGKEY1
          PACK      KEY34,GSRSKEY,GSRGKEY1,SP70
          CALL      RSPTGSR3
          GOTO      RKSND000
.
RKSND325  PACK      KEY34,GSRSKEY,SRCHGSX1,SP70
          CALL      RSPTGSR3
          GOTO      RKSND000
.
RKSND330  MOVE      ZERO,SRCHMACH       * if first char zero - nothing entered
          MATCH     SRCHMACH,GSRGKEY2
          GOTO      RKSND350 IF EQUAL
.
          MATCH     SP1,GSRGKEY2        * no second name on file
          GOTO      RKSND350 IF EQUAL
.
          MATCH     SRCHMACH,SRCHGSX2   * no second given name entered
          GOTO      RKSND350 IF EQUAL
.
          MATCH     SP1,SRCHGSX2
          GOTO      RKSND350 IF EQUAL
.
          MATCH     SRCHGSX2,GSRGKEY2
          GOTO      RKSND350 IF EQUAL
          GOTO      RKSND340 IF LESS
.
          MOVE      "zzz",GSRGKEY2
          PACK      KEY34,GSRSKEY,GSRGKEY1,GSRGKEY2,SP70
          CALL      RSPTGSR3
          GOTO      RKSND000
.
RKSND340  PACK      KEY34,GSRSKEY,GSRGKEY1,SRCHGSX2,SP70
          CALL      RSPTGSR3
          GOTO      RKSND000
.
RKSND350  IF        PTCNCMSX=1
            MATCH     GSRSNAM,SRCHSUR            * Strict surname match?
            IF        @EQUAL
              MATCH     GSRGNAM,SRCHGIV          * yes-strict given name match?
              IF        @EQUAL
                GOTO      RKSND000
              ENDIF
            ENDIF
.           GOTO      RKSND000 IF EQUAL          * Ignore this one
          ENDIF
.
          MOVE      ZERO,SRCHFLAG                * Valid Record
          MOVE      ZERO,EXIT
          MOVE      ZERO,OVRCD
          GOTO      RKSND999
.
RKSND900  MOVE      ONE,OVRCD                     * no more data
.
RKSND999  RETURN
+
.***********************************************************************
.* RPSND000  :  read in the next soundex order record & double soundex *
.***********************************************************************
.
RPSND000  BRANCH    SRCHHREC,RPSND320   * using srchhrec as flag to say whether
                                        * we've had a full read or just a rds
          CALL      RPPTGSR3
          BRANCH    OVRCD,RPSND999
.
RPSND320  MOVE      ZERO,SRCHMACH
          MOVE      ZERO,SRCHHREC       * clear flag for next entry
          MATCH     SRCHSNDX,GSRSKEY    * right surname soundex?
          GOTO      RPSND900 IF NOT EQUAL
.
          MATCH     SRCHGIV,SP70        * any given name entered?
          GOTO      RPSND350 IF EQUAL
.
          MATCH     SRCHGSX1,GSRGKEY1
          GOTO      RPSND330 IF EQUAL
          GOTO      RPSND325 IF LESS
.
          MOVE      "zzz",GSRGKEY1
          PACK      KEY34,GSRSKEY,GSRGKEY1,SP70
          CALL      RSPTGSR3
          GOTO      RPSND000
.
RPSND325  PACK      KEY34,GSRSKEY,SRCHGSX1,SP70
          CALL      RSPTGSR3
          GOTO      RPSND000
.
RPSND330  MOVE      ZERO,SRCHMACH       * if first char zero - nothing entered
          MATCH     SRCHMACH,GSRGKEY2
          GOTO      RPSND350 IF EQUAL
.
          MATCH     SP1,GSRGKEY2        * no second name on file
          GOTO      RPSND350 IF EQUAL
.
          MATCH     SRCHMACH,SRCHGSX2   * no second given name entered
          GOTO      RPSND350 IF EQUAL
.
          MATCH     SP1,SRCHGSX2
          GOTO      RPSND350 IF EQUAL
.
          MATCH     SRCHGSX2,GSRGKEY2
          GOTO      RPSND350 IF EQUAL
          GOTO      RPSND340 IF LESS
.
          MOVE      "zzz",GSRGKEY2
          PACK      KEY34,GSRSKEY,GSRGKEY1,GSRGKEY2,SP70
          CALL      RSPTGSR3
          GOTO      RPSND000
.
RPSND340  PACK      KEY34,GSRSKEY,GSRGKEY1,SRCHGSX2,SP70
          CALL      RSPTGSR3
          GOTO      RPSND000
.
RPSND350  IF        PTCNCMSX=1
            MATCH     GSRSNAM,SRCHSUR            * Strict surname match?
            IF        @EQUAL
              MATCH     GSRGNAM,SRCHGIV          * yes-strict given name match?
              IF        @EQUAL
                GOTO      RPSND000
              ENDIF
            ENDIF
.           GOTO      RPSND000 IF EQUAL          * Ignore this one
          ENDIF
.
          MOVE      ZERO,SRCHFLAG                * Valid Record
          MOVE      ZERO,EXIT
          MOVE      ZERO,OVRCD
          GOTO      RPSND999
.
RPSND900  MOVE      ONE,OVRCD                     * no more data
.
RPSND999  RETURN
+
.**************************************************************************
.*  RKSTR000  :  get next strict surname order record                     *
.**************************************************************************
.
. --- using the given surname file ---
.
RKSTR000  BRANCH    SRCHHREC,RKSTR020   * using sdxsys as flag to say whether
                                        * we've had a full read or just a rds
          CALL      RKPTGSR2
          BRANCH    OVRCD,RKSTR999      * no more records
.
RKSTR020  MATCH     SRCHSUR,GSRSNAM
          GOTO      RKSTR900 IF NOT EQUAL         * no more records
.
          DISPLAY   *P55:24,GSRSNAM;
.
          MATCH     SRCHGIV,SP70
          GOTO      RKSTR100 IF EQUAL
.
          MATCH     SRCHGIV,GSRGNAM
          GOTO      RKSTR200 IF LESS
          GOTO      RKSTR300 IF NOT EQUAL
.
RKSTR100  MOVE      ZERO,SRCHHREC        * clear flag
          MOVE      ZERO,OVRCD           * valid record
          GOTO      RKSTR999
.
.        Records given name less than that wanted - jump forward
.
RKSTR200  PACK      KEY98,GSRSNAM,SRCHGIV,SP70,SP70
          CALL      RDPTGSR2
          COMPARE   ZERO,OVRCD
          GOTO      RKSTR020 IF EQUAL
          CALL      RSPTGSR2
          MOVE      ZERO,SRCHHREC        * flag to say we did a rds
          GOTO      RKSTR000
.
.        We have finished the given names for this particular surname
.        try the next surname with the same starting string
.
RKSTR300  MOVE      "~",ANS
          PACK      KEY98,GSRSNAM,ANS,ANS,ANS,SP70,SP70
          CALL      RDPTGSR2
          COMPARE   ZERO,OVRCD
          GOTO      RKSTR020 IF EQUAL
          CALL      RSPTGSR2
          MOVE      ZERO,SRCHHREC        * flag to say we did a rds
          GOTO      RKSTR000
.
RKSTR900  MOVE      ONE,OVRCD            * no more records
.
RKSTR999 RETURN
+
.***************************************************************************
.*  RSRSX000  :  Position on soundex order record for rev surname          *
.***************************************************************************
RSRSX000  MOVE      ONE,EXIT
          COMPARE   ZERO,PTCNRGNS         * reverse giv seq required
          GOTO      RSRSX999 IF EQUAL
.
          MATCH     SRCHGIV,SP70          * no given name entered - cant reverse
          GOTO      RSRSX999 IF EQUAL
.
          PACK      GSRSKEY,SRCHSNDX,SP10
          REP       " 0",GSRSKEY
          PACK      KEY34,GSRSKEY,SRCHGSX1,SP70
          CALL      RSPTGSR4
.
          MOVE      ZERO,EXIT             * position OK
.
RSRSX999  RETURN
+
.***************************************************************************
.*  RKRSX000  :  Read Next soundex order record for rev surname            *
.***************************************************************************
RKRSX000  CALL      RKPTGSR4
          BRANCH    OVRCD,RKRSX999
.
          MATCH     SRCHSNDX,GSRSKEY
          GOTO      RKRSX800 IF NOT EQUAL
.
          MATCH     SRCHGSX1,GSRGKEY2
          GOTO      RKRSX530 IF EQUAL
          GOTO      RKRSX525 IF LESS
.
          MOVE      "zzz",GSRGKEY1
          PACK      KEY34,GSRSKEY,GSRGKEY1,SP70
          CALL      RSPTGSR4
          GOTO      RKRSX000
.
RKRSX525  PACK      KEY34,GSRSKEY,SRCHGSX1,SP70
          CALL      RSPTGSR4
          GOTO      RKRSX000
.
RKRSX530  MOVE      ZERO,SRCHMACH       * if first char zero - nothing entered
          MATCH     SRCHMACH,SRCHGSX2
          GOTO      RKRSX900 IF EQUAL
.
          MATCH     SP1,SRCHGSX2
          GOTO      RKRSX900 IF EQUAL
.
          MATCH     SRCHGSX2,GSRGKEY1
          GOTO      RKRSX900 IF EQUAL
          GOTO      RKRSX540 IF LESS
.
          MOVE      "zzz",GSRGKEY1
          PACK      KEY34,GSRSKEY,GSRGKEY2,GSRGKEY1,SP70
          CALL      RSPTGSR4
          GOTO      RKRSX000
.
RKRSX540  PACK      KEY34,GSRSKEY,GSRGKEY2,SRCHGSX2,SP70
          CALL      RSPTGSR4
          GOTO      RKRSX000
.
RKRSX800  MOVE      ONE,OVRCD                     * invalid record
          GOTO      RKRSX999
.
RKRSX900  MOVE      ZERO,OVRCD
.
RKRSX999  RETURN
+
.***************************************************************************
.*  RSRSG000  :  Postion Read Reverse Surname/Given Name Search - Soundex  *
.***************************************************************************
RSRSG000  MOVE      ONE,EXIT
          COMPARE   ZERO,SRCHRSGS         * reverse giv seq required
          GOTO      RSRSG999 IF EQUAL
.
          MATCH     SRCHGIV,SP70          * no given name entered, cant reverse
          GOTO      RSRSG999 IF EQUAL
.
          MOVE      SRCHGIV,GSRSNAM
          SCAN      SP1,GSRSNAM           * Remove any possible 2nd Given Name
          IF        @EQUAL
            APPEND    SP70,GSRSNAM
            RESET     GSRSNAM
          ENDIF
.
          CALL      SOUNDEX
          MOVE      GSRSKEY,SRCHSNDX
          PACK      GSRGNAM,SRCHSUR,SP70
          CALL      SOUNDX2
          MOVE      GSRGKEY1,SRCHGSX1
          PACK      KEY34,GSRSKEY,GSRGKEY1,SP70
          CALL      RSPTGSR3
          MOVE      ZERO,EXIT                     * Position Ok
.
RSRSG999  RETURN
+
.***************************************************************************
.*  RKRSG000  :  Read Next Reverse Surname/Given Name Search - Soundex     *
.***************************************************************************
.
RKRSG000  CALL       RKPTGSR3
          BRANCH     OVRCD,RKRSG999
.
          MATCH      SRCHSNDX,GSRSKEY             * right surname soundex?
          GOTO       RKRSG900 IF NOT EQUAL
.
          MATCH      SRCHGSX1,GSRGKEY1
          GOTO       RKRSG900 IF NOT EQUAL
          GOTO       RKRSG999                     * valid record
.
RKRSG900  MOVE      ONE,OVRCD                     * no more records
.
RKRSG999  RETURN
+
.***************************************************************************
.* REVST000  :  do the Reverse Surname/Given Name Search - Strict          *
.*              Returns: OVRCD 0=Valid record, 1=No more records           *
.***************************************************************************
REVST000  IF         SRCHHREC=0
            CALL       RKPTGSR2
            BRANCH     OVRCD,REVST999
          ENDIF
.
          MOVE       ZERO,SRCHHREC
.
          MATCH      SRCHGIV,GSRSNAM
          GOTO       REVST900 IF NOT EQUAL
.
          MATCH      SRCHSUR,GSRGNAM
          GOTO       REVST900 IF NOT EQUAL
.
. we have a valid record
.
          MOVE      ZERO,OVRCD
          GOTO      REVST999
.
REVST900  MOVE      ONE,OVRCD                     * no more records
.
REVST999  RETURN
. +
.*********************************************************************
.*  SPARA000  :  Keyin Search Parameters                             *
.*               Returns:  EXIT  0=Ok ,  1=Nothing input for search  *
.*********************************************************************
SPARA000  CALL      KSSUR000                      * keyin surname
          BRANCH    EXIT,SPARA999                 * nothing input
.
          CALL      KSGIV000                      * keyin given name
.
          CALL      KSSEX000                      * keyin sex
.
          CALL      KSBDT000                      * keyin date of birth
          BRANCH    EXIT,SPARA800                 * a date was input
.
          CALL      KSAGE000                      * keyin age
.
SPARA800  MOVE      ZERO,EXIT                     * everything Ok.
          GOTO      SPARA999
.
SPARA900  MOVE      ONE,EXIT                      * nothing input for search
.
SPARA999  RETURN
+
.***************************************************************
.*  KSSUR000  :  Keyin Surname search field                    *
.***************************************************************
KSSUR000  CALL      RDPAR000                     * read sys parameters
.
          MOVE      CVERT,SRCHSVRT               * Save the vertical position
          MOVE      CCOL,SRCHSCOL                * Save the column position
.
.        Check if we have a pre-existing surname or not
.
          MATCH     SRCHSUR,SP70                 * Do we have a surname ?
          GOTO      KSSUR100 IF NOT EQUAL        * We have a surname already
.
.        No existing surname. Just key in a new surname
.
          KEYIN     *P1:CVERT,*EF,"Surn.:":
                    *V2LON,SRCHSUR;
.
          MOVE      ONE,SRCHFLAG                 * Set flag as nothing entered
.
.        Check if anything was entered
.
          RESET     SRCHSUR
          GOTO      KSSUR900 IF EOS
.
          CMATCH    SP1,SRCHSUR
          GOTO      KSSUR900 IF EQUAL
          GOTO      KSSUR200
.
.        We have an existing surname. Do the keyin with an *RV.
.
KSSUR100  KEYIN     *P1:CVERT,*EF,"Surn.:":
                    *NOSTRIP,*V2LON,*RV,SRCHSUR;
.
          MOVE      ONE,SRCHFLAG                 * Set flag as nothing entered
.
.         Check if anything was entered
.
          RESET     SRCHSUR
.
          CMATCH    SP1,SRCHSUR
          GOTO      KSSUR900 IF EQUAL
.
.        We have a surname.
.
KSSUR200  MOVE      ZERO,SRCHFLAG                * Reset flag
          MOVE      ZERO,EXIT
.
.        other surname file - double soundex
.
KSSUR300  PACK      GSRSNAM,SRCHSUR,SP70
          DISPLAY   *P7:CVERT,*V2LON,GSRSNAM;
          MOVE      SP70,GSRGNAM
          GOTO      KSSUR999
.
KSSUR900  MOVE      ONE,EXIT                      * nothing input
.
KSSUR999  RETURN
+
.***************************************************************
.*  KSGIV000  :  Keyin Given Name search field                 *
.***************************************************************
KSGIV000  MATCH     SRCHGIV,SP70                  * given name from last srch?
          GOTO      KSGIV100 IF NOT EQUAL
.
          KEYIN     *P28:CVERT,*EL,"Given:",*V2LON,SRCHGIV;
.
.        This code is necessary because of a problem in TBL where if a 
.        string is keyed in and backspaced, EOS is set but the 1st char
.        remains.
.
          RESET     SRCHGIV
          GOTO      KSGIV200 IF NOT EOS
          CLEAR     SRCHGIV                  * Reset SRCHGIV to zero
          APPEND    SP70,SRCHGIV             * Wipe out string
          RESET     SRCHGIV                  * Set form pointer to 1
          LENSET    SRCHGIV,1                * Set logical length to 1 i.e.EOS
          GOTO      KSGIV200
.
.        We have an existing given name. Key in a new given name, using *RV.
.
KSGIV100  KEYIN     *P28:CVERT,*EL,"Given:":
                    *NOSTRIP,*RV,*V2LON,SRCHGIV;
.
.        This code is necessary because of a problem in TBL where if a 
.        string is keyed in and backspaced, EOS is set but the 1st char
.        remains.
.
          RESET     SRCHGIV
          GOTO      KSGIV200 IF NOT EOS
          CLEAR     SRCHGIV                  * Reset SRCHGIV to zero
          APPEND    SP70,SRCHGIV             * Wipe out string
          RESET     SRCHGIV                  * Set form pointer to 1
          LENSET    SRCHGIV,1                * Set logical length to 1 i.e.EOS
.
KSGIV200  PACK      GSRGNAM,SRCHGIV,SP70
          DISPLAY   *P34:CVERT,*V2LON,GSRGNAM;
          UNPACK    SP30,GSRGKEY1,GSRGKEY2 * if so, clear given name keys
          CALL      SOUNDX2                * get soundex keys for given names
          MOVE      GSRGKEY1,SRCHGSX1      * save soundexs for test in search
          SCAN      "0",SRCHGSX1
          BUMP      SRCHGSX1,-1
          LENSET    SRCHGSX1
          RESET     SRCHGSX1
          MOVE      GSRGKEY2,SRCHGSX2    
          SCAN      "0",SRCHGSX2
          BUMP      SRCHGSX2,-1
          LENSET    SRCHGSX2
          RESET     SRCHGSX2
.
          MATCH     GSRGNAM,SP70           * no given name entered 
          GOTO      KSGIV999 IF NOT EQUAL
          UNPACK    SP30,GSRGKEY1,GSRGKEY2 * if so, clear given name keys
.
KSGIV999  RETURN
+
.***************************************************************
.*  KSSEX000  :  Keyin Sex search field                        *
.***************************************************************
KSSEX000  MATCH     SP1,SRCHSEX                   * have sex from last search?
          GOTO      KSSEX100 IF NOT EQUAL
.
          KEYIN     *P60:CVERT,*EL,"Sex:",*V2LON,SRCHSEX
.
          RESET     SRCHSEX
          GOTO      KSSEX999 IF EOS
          GOTO      KSSEX200
.
.        Using the last sex as the default
.
KSSEX100  KEYIN     *P60:CVERT,*EL,"Sex:",*NOSTRIP,*V2LON,*RV,SRCHSEX
.
          ENDSET    SRCHSEX
          APPEND    SP1,SRCHSEX
          RESET     SRCHSEX
.
KSSEX200  CMATCH    SP1,SRCHSEX
          GOTO      KSSEX999 IF EQUAL
.
.* ****************************************** Start of Changes         *C-49016
          RESET     DSEXCODE
          SCAN      SRCHSEX,DSEXCODE        * sex codes (in IBACOMN)
.* ******************************************   End of Changes         *C-49016
.
          GOTO      KSSEX999 IF EQUAL
.
          BEEP
          GOTO      KSSEX100
.
KSSEX999  RETURN
+
.***************************************************************
.*  KSBDT000  :  Keyin Birth Date search field                 *
.***************************************************************
KSBDT000  DISPLAY   *P66:CVERT,*EL,"DOB:"
          MOVE      "70",CCOL
          MOVE      ZERO,CHIGHLT
          UNPACK    SRCHDOB,CCENT,CYEAR,CMON,CDAY
          MATCH     SP2,CCENT
          GOTO      KSBDT100 IF NOT EQUAL
          MOVE      CCC,CCENT
KSBDT100  MOVE      ZERO,ECOL            * Use the default error position
          MOVE      ONE,CCANLDTE         * Allow a blank to cancel default date
          CALL      KEYDATE
          MOVE      ZERO,CCANLDTE        * Reset to normal
          BRANCH    CQUEST,KSBDT000
          BRANCH    OVRCD,KSBDT900       * No D.O.B. entered. Ask for Age
.
          PACK      SRCHDOB,CCENT,CYEAR,CMON,CDAY
          REP       " 0",SRCHDOB
.
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          PACK      SRCHDOB,CCENT,CYEAR,CMON,CDAY
          REP       " 0",SRCHDOB
.
          MATCH     SRCHDOB,KEY8
          GOTO      KSBDT200 IF NOT LESS
.
          DISPLAY   *P1:24,*V2LON," Date of Birth cannot be in the future.  ";
          CALL      HITENTER
          GOTO      KSBDT000
.
KSBDT200  MOVE      SP3,SRCHAGE          * Make sure we don't have an age
.
          CALL      DBRNG000             * Work out date ranges
.
          MOVE      ONE,EXIT             * a date was entered
          GOTO      KSBDT999
.
KSBDT900  MOVE      ZERO,EXIT            * no date entered
.
KSBDT999  RETURN
+
.***************************************************************
.*  KSAGE000  :  Keyin Age search field                        *
.***************************************************************
KSAGE000  MOVE      SP8,SRCHDOB          * Make sure we don't have a D.O.B.
.
          MATCH     SP3,SRCHAGE          * existing age search field?
          GOTO      KSAGE100 IF NOT EQUAL
.
          KEYIN     *P66:CVERT,*EL,"Age:",*V2LON,*JR,*DE,SRCHAGE;
          RESET     SRCHAGE
          GOTO      KSAGE700 IF EOS
          GOTO      KSAGE200
.
.        Using a default age
.
KSAGE100  KEYIN     *P66:CVERT,*EL,"Age:",*NOSTRIP,*V2LON,*JR,*RV,SRCHAGE;
.
          MATCH     SP3,SRCHAGE
          GOTO      KSAGE700 IF EQUAL
.
          TYPE      SRCHAGE
          GOTO      KSAGE200 IF EQUAL
.
          MOVE      SP3,SRCHAGE                   * non numeric input
          GOTO      KSAGE000
.
KSAGE200  DISPLAY   *P70:CVERT,*V2LON,SRCHAGE;
.
.        We have an Age, now work out the range of dates this corresponds to.
.        The day/month range will be from tomorrows date to todays date.
.        Eg. If today is 23/04/1968, and an age of zero was selected, then
.            we want a birth date from 24/04/1967 to 23/04/1968.
.
          PACK      SRCHTDAT,CMM,CDD
          REP       " 0",SRCHTDAT
.
          MOVE      CCC,CC
          MOVE      CYY,YY
          MOVE      CMM,MM
          MOVE      CDD,DD
          CALL      DMYCON               * Convert to a julian date
          ADD       ONE,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
.
          PACK      SRCHFDAT,MM,DD
          REP       " 0",SRCHFDAT
.
.        We have the from and to dates. Now work out the from and to years.
.        The from ending year = current year - age - year range
.        The to ending year   = current year - age + year range
.
.        The starting year range will be the same if the from date is less than
.        the end year, otherwise it will be one less than the ending year range
.
          PACK      SRCHWORK,CCC,CYY
          REP       " 0",SRCHWORK
.
          MOVE      SRCHAGE,PSAGE       * Convert age to a form field
.
          MOVE      SRCHWORK,SRCHYEAR
          SUB       PSAGE,SRCHYEAR
          SUB       SRCHYRNG,SRCHYEAR
          MOVE      SRCHYEAR,SRCHFEYR
          MOVE      SRCHYEAR,SRCHFSYR
.
          MOVE      SRCHWORK,SRCHYEAR
          SUB       PSAGE,SRCHYEAR
          ADD       SRCHYRNG,SRCHYEAR
          MOVE      SRCHYEAR,SRCHTEYR
          MOVE      SRCHYEAR,SRCHTSYR
.
          MATCH     SRCHFDAT,SRCHTDAT
          GOTO      KSAGE999 IF NOT LESS
.
.         Subtract one from the starting year range
.
          MOVE      SRCHFSYR,SRCHYEAR
          SUB       ONE,SRCHYEAR
          MOVE      SRCHYEAR,SRCHFSYR
.
          MOVE      SRCHTSYR,SRCHYEAR
          SUB       ONE,SRCHYEAR
          MOVE      SRCHYEAR,SRCHTSYR
          GOTO      KSAGE999
.
.        Nothing entered for date of birth or age
.
KSAGE700  DISPLAY   *P70:CVERT,*EL;
          MOVE      SP4,SRCHFDAT
.
KSAGE999  RETURN
+
.**************************************************************************
.*  DBRNG000  :  Work out the valid date range                            *
.*                                                                        *
.*       We have a date of birth. Now work out a range of dates           *
.*       corresponding to this date +/- the day range variable.           *
.*                                                                        *
.*       The from ending year (CCYY) = calculated birth year - year range *
.*       The to ending year   (CCYY) = calculated birth year + year range *
.*                                                                        *
.*       The from date (MMDD) = birth date - day range                    *
.*       The to date   (MMDD) = birth date + day range                    *
.**************************************************************************
.
DBRNG000  MOVE      CDAY,DD
          MOVE      CMON,MM
          MOVE      CYEAR,YY
          MOVE      CCENT,CC
          CALL      DMYCON
          ADD       SRCHDRNG,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
.
          PACK      SRCHTDAT,MM,DD
          REP       " 0",SRCHTDAT
.
          PACK      SRCHWORK,CC,YY
          REP       " 0",SRCHWORK
.
          MOVE      SRCHWORK,SRCHYEAR
          SUB       SRCHYRNG,SRCHYEAR
          MOVE      SRCHYEAR,SRCHFEYR
          MOVE      SRCHYEAR,SRCHFSYR
.
          MOVE      SRCHWORK,SRCHYEAR
          ADD       SRCHYRNG,SRCHYEAR
          MOVE      SRCHYEAR,SRCHTEYR
          MOVE      SRCHYEAR,SRCHTSYR
.
.        Get the from date (date of birth minus SRCHDRNG)
.
          MOVE      CDAY,DD
          MOVE      CMON,MM
          MOVE      CYEAR,YY
          MOVE      CCENT,CC
          CALL      DMYCON
          SUB       SRCHDRNG,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
.
          PACK      SRCHFDAT,MM,DD
          REP       " 0",SRCHFDAT
.
.        The starting year range will be the same if the from date is less than
.        the end year, otherwise it will be one less than the ending year range
.
          MATCH     SRCHFDAT,SRCHTDAT
          GOTO      DBRNG999 IF NOT LESS
.
.        Subtract one from the starting year range
.
          MOVE      SRCHFSYR,SRCHYEAR
          SUB       ONE,SRCHYEAR
          MOVE      SRCHYEAR,SRCHFSYR
.
          MOVE      SRCHTSYR,SRCHYEAR
          SUB       ONE,SRCHYEAR
          MOVE      SRCHYEAR,SRCHTSYR
.
DBRNG999  RETURN
+
.*************************************************************************
.*  SHEAD000  :  Search Heading                                          *
.*               Requires:  CVERT                                        *
.*************************************************************************
SHEAD000 IF         SRCHFLAG=7
            MOVE    FOUR,CVERT
         ENDIF
         ADD        ONE,CVERT
         MOVE       ZERO,CCOL4                     * init array counter
         COMPARE    THREE,SRCHOPT
         GOTO       SHEAD100 IF NOT EQUAL
.
         DISPLAY    *P1:CVERT,*EF,*ULON:
                    *P5:CVERT,"     U/R":
                    *P15:CVERT,"Patients Name/Address             ":
                    *P50:CVERT,"Sex":
                    *P54:CVERT,"Age"
         IF         PTCNDATE=1 
           DISPLAY    *P59:CVERT,*ULON,"Ward   ":
                      *P67:CVERT,"Status         ";
         ELSE 
           DISPLAY    *P58:CVERT,*ULON,"Ward   ":
                      *P66:CVERT,"Status         ";
         ENDIF
         GOTO       SHEAD900
.
SHEAD100 DISPLAY    *P1:CVERT,*EF,*ULON:
                    *P4:CVERT,"     U/R":
                    *P13:CVERT,"Patients Name                               ":
                    *P48:CVERT,"Sex",*P52:CVERT," D.O.B.   ",*P63:CVERT,"Age";
.
.        Display the heading for the last column, depending on SRCHOPT
.
         BRANCH     SRCHOPT,SHEAD200,SHEAD220
.
SHEAD200 IF         PTCNDATE=1
           DISPLAY    *P68:CVERT,*ULON,"Status        ";
         ELSE
           DISPLAY    *P67:CVERT,*ULON,"Status        ";
         ENDIF
         GOTO       SHEAD900
.
SHEAD220 BRANCH     SRCHPCKL,SHEAD200            * No Address if Nes Pick. List
         IF         PTCNDATE=1  
           DISPLAY    *P68:CVERT,*ULON,"Address       ";
         ELSE
           DISPLAY    *P67:CVERT,*ULON,"Address       ";
         ENDIF
.
.        Position ourselves on the starting line of the display
.
SHEAD900 ADD        ONE,CVERT
         MOVE       CVERT,FORM2                   * Save starting line
.
SHEAD999 RETURN
.
.**************************************************************************
.*  DISPR000  :  Subroutine to process a given surname index record       *
.**************************************************************************
+
DISPR000  MOVE      ZERO,SRCHFLAG                * Assume we will continue
.
.        Check for a 0 U/R record
.
DISPR010  MATCH     ZEROUR,GSRURNO
          GOTO      DISPR100 IF NOT EQUAL
.
.        We have a patient without a U/R number. Check that we have the
.        desired system
.
          COMPARE   ZERO,SRCHSYS                 * All systems wanted ?
          GOTO      DISPR020 IF EQUAL            * Yes. Get the pre-adm details
.
          COMPARE   GSRSYS,SRCHSYS               * Do we have the correct sys ?
          GOTO      DISPR999 IF NOT EQUAL        * No. Ignore record
.
.        Get the details of this 0 U/R number
.
DISPR020  MOVE      GSRBILL,PURNO
          MOVE      PURNO,KEY8
          CALL      RDPRAM1                      * Get the pre-adm details
          BRANCH    OVRCD,DISPR999               * No details -> ignore record
          MOVE      GSRURNO,PURNO                * Restore correct U/R No.
.
.        Now get the visit details
.
          BRANCH     GSRSYS,DISPR999,DISPR150,DISPR150
          GOTO       DISPR999
.
.        We have a U/R number. Get the details and validate them
.
DISPR100 MOVE       GSRURNO,PURNO
         MOVE       PURNO,KEY8
         CALL       RDMAST1
         BRANCH     OVRCD,DISPR999
         CALL       RDPMPX21
.
.        Test for a valid sex
.
DISPR150 MATCH      SP1,SRCHSEX
         GOTO       DISPR200 IF EQUAL
.
         MATCH      PSEX,SRCHSEX
         GOTO       DISPR999 IF NOT EQUAL       * Invalid sex - continue
.
.        Test for a valid date of birth
.
DISPR200 MATCH      SP4,SRCHFDAT
         GOTO       DISPR500 IF EQUAL
.
         UNPACK     PBDATE,CCENT,CYEAR,CMON,CDAY
         PACK       SRCHWORK,CMON,CDAY
.
.        Two different sets of test, depending on whether or not the
.        ending date is less than the starting date, or not.
.
         MATCH      SRCHFDAT,SRCHTDAT
         GOTO       DISPR250 IF LESS
.
.        We want a date in the date range, and in the year range
.
         MATCH      SRCHFDAT,SRCHWORK
         GOTO       DISPR999 IF LESS
.
         MATCH      SRCHWORK,SRCHTDAT
         GOTO       DISPR999 IF LESS
.
         PACK       SRCHWORK,CCENT,CYEAR
         REP        " 0",SRCHWORK
.
         MATCH      SRCHFSYR,SRCHWORK
         GOTO       DISPR999 IF LESS
.
         MATCH      SRCHWORK,SRCHTSYR
         GOTO       DISPR999 IF LESS
.
         GOTO       DISPR500            * Valid record
.
.        We want a date less that the todate, OR after the start date
.        This occurs when the valid date is something like 27/12 to 03/01
.
DISPR250 MATCH      SRCHFDAT,SRCHWORK
         GOTO       DISPR270 IF LESS
.
.        We have a date after the starting date
.
         PACK       SRCHWORK,CCENT,CYEAR
         REP        " 0",SRCHWORK
.
         MATCH      SRCHFSYR,SRCHWORK
         GOTO       DISPR999 IF LESS
.
         MATCH      SRCHWORK,SRCHTEYR
         GOTO       DISPR999 IF LESS
.
         GOTO       DISPR500            * Valid record
.
.        We have a date before the to date
.        Check if after the from date
.
DISPR270 MATCH      SRCHWORK,SRCHTDAT
         GOTO       DISPR999 IF LESS
.
         PACK       SRCHWORK,CCENT,CYEAR
         REP        " 0",SRCHWORK
.
         MATCH      SRCHFEYR,SRCHWORK
         GOTO       DISPR999 IF LESS
.
         MATCH      SRCHWORK,SRCHTEYR
         GOTO       DISPR999 IF LESS
.
.        Set up the rest of the variables ready to display
.
DISPR500  UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          MOVE      SP1,ANS
          LOAD      ANS,PCASE,CCNOTES    * Load case notes indicator
.
          MOVE      PTMASNAM,SRCHSN
          MOVE      PMPXFNAM,SRCHGN
.
.        Set up last column depending on the display option desired
.
          BRANCH    SRCHOPT,DISPR540,DISPR550,DISPR560
.
.        Set up with the deceased indicator
.
DISPR520  MOVE      "DECEASED       ",SRCHVAR
          BRANCH    PCEASE,DISPR600
          MOVE      SP20,SRCHVAR
          GOTO      DISPR600
.
.        Programmer defined value - used by enquiries to show admission status
.
DISPR540  CALL      GETSVAR
          GOTO      DISPR600
.
.        Set up with the first address line
.
DISPR550  BRANCH    SRCHPCKL,DISPR520            * No Address if Nes Pick. List
          MOVE      PADD1,SRCHVAR
          GOTO      DISPR600
.
.        Set variables for surname enquiry
.
DISPR560  CALL      GETSVAR                      * Set up SRCHDIAG,SRCHWBED
.
.        Display the record
.
DISPR580  BRANCH    SRCHPCKL,DISPR600            * New Picking List
          MOVE      FORM2,DIM2
          CALL      SRCHZ000                     * Recalculate patients age
          MOVE      DIM2,FORM2
.
          ADD       ONE,CCOL4                     * increment array counter
          IF        CCOL4=1
             IF     OPTION=3|OPTION=2|OPTION=1
                PACK     TMPKEY98,GSRSNAM,GSRGNAM,PTGSGNM2,GSRDOB
                MOVE     GSRURNO,TMPURNO
                MOVE     GSRBILL,TMPBILL
                MOVE     GSRDOB,TMPDOB
             ENDIF
             IF     OPTION=4|OPTION=2|OPTION=1
                PACK    TMPKEY34,GSRSKEY,GSRGKEY1,GSRGKEY2
                PACK    TMPKEY98,GSRSNAM,GSRGNAM,PTGSGNM2,GSRDOB
                MOVE    GSRURNO,TMPURNO
                MOVE    GSRBILL,TMPBILL
                MOVE    GSRDOB,TMPDOB
             ENDIF
          ENDIF
.
          SETLPTR   SRCHSN,17
          SETLPTR   SRCHGN,16
          COMPARE   FORM1,ZERO
          DISPLAY   *P1:CVERT,*V2LON,CCOL4,*HOFF,". ":
                    *P5:CVERT,*V2LON,GSRURNO,ANS:
                    *P15:CVERT,*+,SRCHSN,*-,SP1,SRCHGN:
                    *P51:CVERT,PSEX
          IF        PTCNDATE=1
.
.----- PSAGETYP has the age type (ie. Years, Months, Weeks, or days)
.----- PSAGECON has the age in one of the above forms
.
            MOVE      PSAGETYP,DIM1
            DISPLAY   *P54:CVERT,*V2LON,PSAGECON,*HOFF,DIM1:
                      *P59:CVERT,SRCHWBED:
                      *P67:CVERT,SRCHVAR;
          ELSE
            DISPLAY   *P54:CVERT,PSAGE:
                      *P58:CVERT,SRCHWBED:
                      *P66:CVERT,SRCHVAR;
          ENDIF
          ADD       ONE,CVERT
          DISPLAY   *P15:CVERT,PADD1:
                    *P39:CVERT,SP1,SRCHDIAG;
          GOTO      DISPR650
.
.        Display the record
.
DISPR600 MOVE       FORM2,DIM2         * save FORM2 value
         CALL       SRCHZ000           * recalculate the patients age
         MOVE       DIM2,FORM2
.
         ADD        ONE,CCOL4                     * increment array counter
         IF        CCOL4=1
             IF     OPTION=3 | OPTION=2 | OPTION=1
                PACK     TMPKEY98,GSRSNAM,GSRGNAM,PTGSGNM2,GSRDOB
                MOVE     GSRURNO,TMPURNO
                MOVE     GSRBILL,TMPBILL
                MOVE     GSRDOB,TMPDOB
             ENDIF
             IF     OPTION=4 | OPTION=2 | OPTION=1
                PACK    TMPKEY34,GSRSKEY,GSRGKEY1,GSRGKEY2
                PACK    TMPKEY98,GSRSNAM,GSRGNAM,PTGSGNM2,GSRDOB
                MOVE    GSRURNO,TMPURNO
                MOVE    GSRBILL,TMPBILL
                MOVE    GSRDOB,TMPDOB
             ENDIF
         ENDIF
.
         SETLPTR    SRCHSN,17
         SETLPTR    SRCHGN,16
         SETLPTR    SRCHVAR,15
         COMPARE    ZERO,FORM1
         IF         @EQUAL
           ADD        ONE,CLYEAR
         ENDIF
         DISPLAY    *P1:CVERT,*V2LON,CCOL4,*HOFF,". ":
                    *P4:CVERT,*V2LON,GSRURNO,ANS:
                    *P13:CVERT,*+,SRCHSN,*-,SP1,SRCHGN:
                    *P49:CVERT,PSEX:
                    *P52:CVERT,CPCDATE
         IF        PTCNDATE=1
.
.----- PSAGETYP has the age type (ie. Years, Months, Weeks, or days)
.----- PSAGECON has the age in one of the above forms
.
           MOVE      PSAGETYP,DIM1
           DISPLAY   *P63:CVERT,*V2LON,PSAGECON,*HOFF,DIM1:
                     *P68:CVERT,SRCHVAR;
         ELSE
           DISPLAY   *P63:CVERT,PSAGE:
                     *P67:CVERT,SRCHVAR;
         ENDIF
.
. ---  New 2nd Line of the Picking List  ---
.
         IF         SRCHPCKL=1
           ADD        ONE,CVERT
           PACK       SRCHDADD,PADD1
           STRIP      SRCHDADD
.
           ENDSET     SRCHDADD
           APPEND     SP1,SRCHDADD
           APPEND     PADD2,SRCHDADD
           RESET      SRCHDADD
           STRIP      SRCHDADD
.
           ENDSET     SRCHDADD
           APPEND     SP1,SRCHDADD
           APPEND     PSUBRB,SRCHDADD
           RESET      SRCHDADD
           STRIP      SRCHDADD
.
           ENDSET     SRCHDADD
           APPEND     SP1,SRCHDADD
           APPEND     PADD4,SRCHDADD
           RESET      SRCHDADD
           STRIP      SRCHDADD
.
           ENDSET     SRCHDADD
           APPEND     SP1,SRCHDADD
           APPEND     PPOST,SRCHDADD
           RESET      SRCHDADD
.
           DISPLAY    *P5:CVERT,SRCHDADD:
                      *P59:CVERT,SP1,PTMXSPID;
         ENDIF
.
DISPR650 MOVE       GSRURNO,DIM8ARRY[CCOL4]       * save U/R displayed for selct
.
.        If dob search, save first record key
.
         IF         CCOL4 = 1
           PACK       KEY16,PBDATE,GSRBILL        * for DOB search only
         ENDIF
         ADD        ONE,CVERT
.
.        Check if this was a 0 U/R record
.
         MATCH      ZEROUR,GSRURNO
         GOTO       DISPR800 IF EQUAL
.
.        Check if this was an alias record
.
         MATCH      GSRSNAM,PTMASNAM
         GOTO       DISPR700 IF NOT EQUAL
.
         MATCH      GSRGNAM,PMPXFNAM
         GOTO       DISPR999 IF EQUAL
.
         MATCH      PTGSGNM2,PMPXSNAM
         GOTO       DISPR999 IF EQUAL
.
.        Display the alias
.
DISPR700 DISPLAY    *P5:CVERT,*V2LON,"Alias",*HOFF:
                    *P15:CVERT,GSRSNAM,GSRGNAM;
         ADD        ONE,CVERT
         GOTO       DISPR999
.
.        A Zero U/R number. Display the visit details for this record
.
DISPR800 BRANCH     GSRSYS,DISPR999,DISPR820,DISPR840
         GOTO       DISPR999
.
.        Outpatient pre-attendance booking
.
DISPR820 
         MOVE       GSRBILL,KEY8
         OPEN       OUTPREA1,"outpreaf"
         CALL       RDPREA1
         CLOSE      OUTPREA1
         BRANCH     OVRCD,DISPR830               * No details, ignore record
.
         UNPACK     OPRDATE,CCENT,CYEAR,CMON,CDAY
         CALL       PACDATE
.
         DISPLAY    *P15:CVERT,"Pre-attendance for Clinic ":
                    OPRCLIN," at ",OPRTIME," on ",CPCDATE," (",OPRCTYP,")";
         ADD        ONE,CVERT 
         GOTO       DISPR999
.
.        Outpatient Referral
.
DISPR830 PROC       OUTRF000
         GOTO       DISPR999
.
.        Inpatient pre-admission booking
.
DISPR840 
         MOVE       GSRBILL,AADMNO
         MOVE       AADMNO,KEY8
         CALL       RDMISS1
         BRANCH     OVRCD,DISPR850      * No details, check for a booking
.
         UNPACK     ADATE,CCENT,CYEAR,CMON,CDAY
         CALL       PACDATE
.
         DISPLAY    *P11:CVERT,"Pre-admission ",AADMNO," for Doctor ":
                    ADOCTA," at ",ATIME," on ",CPCDATE;
         ADD        ONE,CVERT
         GOTO       DISPR999
.
.        Inpatient booking (from BOKRC1FD)
.
.        We are using the 6th index instead of the 1st index, as some
.        programs will have the 1st index open already, while others
.        will not. No program that needs this include should have the
.        6th index open, so this include can quite safely open and close
.        this index as required.
.
DISPR850 OPEN      BOKRC1A6,"bokrc1af"
         PACK       KEY16,GSRURNO,GSRBILL
         CALL       RDBKREC6
         BRANCH     OVRCD,DISPR859      * No booking. Ignore record
.
         UNPACK     BKREEDAT,CCENT,CYEAR,CMON,CDAY
         CALL       PACDATE
.
         DISPLAY    *P11:CVERT,"Inpatient booking ",BKREBOOK," for ":
                    CPCDATE,". (",BKRETYPE,")";
         ADD        ONE,CVERT
.
DISPR859 CLOSE     BOKRC1A6
.
DISPR999 RETURN
+
.**************************************************************************
.*  SOPTN000  :  Subroutine to ask line 24 options                        *
.*               Requires: SRCHSCRN   0=only 1 screen, 1=>1 screen        *
.*               Returns : SRCHFLAG : 1=Item selected                     *
.*                                    2=Next                              *
.*                                    3=Exit                              *
.*                                    4=Register (Search National)        *
.*                                    5=DOB Search                        *
.*                                    6=Search More                       *
.**************************************************************************
SOPTN000  DISPLAY   *P1:23,*EF
          MOVE      "24",OPTLINE
. ------   Calculate How many Chars are needed to display Options ----
.
          MOVE      "14",OPTCOUNT             * Select Item
          IF        SRCHSCRN=1
            ADD       "15",OPTCOUNT           * Search More
          ENDIF
.
          IF        CPAGENO>1
               ADD       "19",OPTCOUNT        * Prev. Screen
          ENDIF
.
          IF        CREGOPT=1 
            IF        PTCNNHII=1
              ADD       "19",OPTCOUNT         * Search National
            ELSE
              ADD       "12",OPTCOUNT         * Register
            ENDIF
          ENDIF
.
          IF        SRCHDOBS=1
            ADD       "14",OPTCOUNT           * DOB Search
          ENDIF
.
          ADD       "18",OPTCOUNT             * Next, Exit
.
          IF        OPTCOUNT<80
            MOVE      "24",OPTLINE       * Only one line req'd 
            GOTO      SOPTN010
          ELSE
            MOVE      "23",OPTLINE       * Two lines required
            MOVE      "1",TWOLINES       * Flag for 2 lines req'd
          ENDIF
.
.
. -------  Now Display the options -------
.
SOPTN010  MOVE      "14",CCOL1
          DISPLAY   *P1:OPTLINE,*EL,"Select Item, ";
.         
          IF        SRCHSCRN=1
            DISPLAY   "(",*V2LON,ANSS,*HOFF,")earch more, ";
            ADD       "15",CCOL1
          ENDIF
.
          IF        CPAGENO>1
               DISPLAY   "(",*V2LON,ANSP,*HOFF,")revious Screen, ";
               ADD       "19",CCOL1
          ENDIF
.
          IF        CREGOPT=1 
            IF        PTCNNHII=1
              DISPLAY   "Search Na(",*V2LON,ANST,*HOFF,")ional, ";
              ADD       "19",CCOL1 
            ELSE
              DISPLAY   "(",*V2LON,ANSR,*HOFF,")egister, ";
              ADD       "12",CCOL1
            ENDIF
          ENDIF
.
          IF        TWOLINES=1
             IF        CCOL1>61
               MOVE      "24",OPTLINE
               MOVE      "1",CCOL1
             ENDIF
          ENDIF
.
          IF        SRCHDOBS=1
            DISPLAY   *PCCOL1:OPTLINE,"(",*V2LON,ANSD,*HOFF,")OB Search, ";
            ADD       "14",CCOL1 
          ENDIF
.
          IF        TWOLINES=1
             IF        CCOL1>61
               MOVE      "24",OPTLINE
               MOVE      "1",CCOL1
             ENDIF
          ENDIF
.
          DISPLAY   *PCCOL1:OPTLINE,"(",*V2LON,ANSN,*HOFF,")ext, (":
                    *V2LON,ANSE,*HOFF,")xit ? ";
          ADD       "17",CCOL1
.
SOPTN100  KEYIN     *PCCOL1:OPTLINE,*JR,*V2LON,CKYIDEF2:
                    *PCCOL1:OPTLINE,*DV,CKYIDEF2
          ENDSET    CKYIDEF2
          APPEND    SP2,CKYIDEF2
          RESET     CKYIDEF2
          REP       UPPLOW,CKYIDEF2
.
          MOVE      ZERO,SRCHFLAG
.
          TYPE      CKYIDEF2
          GOTO      SOPTN500 IF EQUAL
.
          IF        PTCNNHII=1
            REP       "N2n2E3e3T4t4d5D5s6S6p7P7",CKYIDEF2
          ELSE
            REP       "N2n2E3e3R4r4d5D5s6S6p7P7",CKYIDEF2
          ENDIF
.
          MOVE      CKYIDEF2,SRCHFLAG
.
          IF        CPAGENO>1
             IF        SRCHSCRN=0
                 BRANCH    SRCHFLAG,SOPTN000,SOPTN999,SOPTN999,SOPTN200:
                           SOPTN210,SOPTN100,SOPTN900
             ENDIF
             BRANCH    SRCHFLAG,SOPTN000,SOPTN999,SOPTN999,SOPTN200,SOPTN210:
                       SOPTN220,SOPTN900
          ELSE
             IF        SRCHSCRN=0
                BRANCH    SRCHFLAG,SOPTN000,SOPTN999,SOPTN999,SOPTN200:
                          SOPTN210
             ELSE
                BRANCH    SRCHFLAG,SOPTN000,SOPTN999,SOPTN999,SOPTN200:
                          SOPTN210,SOPTN220
             ENDIF
          ENDIF
.
          BEEP
          GOTO      SOPTN100
.
SOPTN200  IF        CREGOPT=1
            MOVE      ZEROUR,CPPURNO              * Register
            PACK      CMPURNO,SP10,SP2,ZEROUR
            PACK      C12URNO,SP4,ZEROUR
            PACK      C17URNO,SP9,ZEROUR
            GOTO      SOPTN999
          ENDIF
          BEEP
          GOTO      SOPTN100
.
SOPTN210  BRANCH    SRCHDOBS,SOPTN999             * DOB Search
          BEEP
          GOTO      SOPTN100
.
SOPTN220  ADD       ONE,CPAGENO
          BRANCH    SRCHSCRN,SOPTN999               * Search More
          BEEP
          GOTO      SOPTN100
.
. a numeric was input
.
SOPTN500  MOVE      CKYIDEF2,CCOL3                * move to form field
          IF        (CCOL3<1) | (CCOL3>CCOL4)
            BEEP
            GOTO      SOPTN100
          ENDIF
          MOVE      ONE,SRCHFLAG                  * item no. was selected
          MOVE      DIM8ARRAY[CCOL3],CPPURNO      * U/R number selected
          GOTO      SOPTN999
.
SOPTN900  SUB       ONE,CPAGENO
.
SOPTN999  RETURN
.
.*******************************************************************
.*  DBRTH000  :  Date of Birth search                              *
.*               Returns: SRCHFLAG  0=Exit selected                *
.*                                  1=Item selected or Register    *
.*******************************************************************
DBRTH000  MOVE      ONE,NZIBDOBS                 * doing DOB search
          MOVE      ZERO,SRCHFLAG
          MOVE      ZERO,CLYEAR
          CALL      SRCHCLR                      * Clear the search parameters
.
          MOVE      "17",CCOL
          MOVE      "4",CVERT
          DISPLAY   *P1:CVERT,*EF,"Date of Birth :"
          MOVE      ZERO,CHIGHLT
          MOVE      ZERO,ECOL            * Use the default error position
          MOVE      ONE,CCANLDTE         * Allow a blank to cancel default date
          UNPACK    SRCHDOB,CCENT,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
.
          CALL      KEYDATE
          MOVE      ZERO,CCANLDTE        * Reset to normal
          BRANCH    CQUEST,DBRTH950
          BRANCH    OVRCD,DBRTH940
.
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          PACK      SRCHDOB,CCENT,CYEAR,CMON,CDAY
          REP       " 0",SRCHDOB
.
          MATCH     SRCHDOB,KEY8
          GOTO      DBRTH005 IF NOT LESS
.
          DISPLAY   *P1:24,*V2LON," Date of Birth cannot be in the future.  ";
          CALL      HITENTER
          GOTO      DBRTH000
.
DBRTH005  MOVE      ONE,CPAGENO          * set screen number to one
.
          CALL      RDPAR000             * Read the System parameters
          CALL      DBRNG000             * Calculate date range
          CALL      SHEAD000             * Display Headings
.
. --- now loop thru file & display all valid records ---
.
          OPEN      PATPR1A1,"patpr1af"
          OPEN      PATPR1A2,"patpr1af"
          OPEN      PATPX1A1,"patpx1af"
          OPEN      PATMA1A2,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
          OPEN      PATGSRN1,"patgsrnf"
          MOVE      SP4,SRCHFDAT
.
.         Check if using date range parameters in DOB search
.
          READ      CONTROLF,HUND05;*100,PTCNUDRN
.
          BRANCH    PTCNUDRN,DBRTH025       * using date range parameters
.
.         Search patpr1af for EXACT DOB matches
.
          MOVE      ZERO,FORM1              * set flag for patpr1af search
          MOVE      SRCHDOB,KEY8
          CALL      RDPRAM2                 * dob on patpr1af ?
          BRANCH    OVRCD,DBRTH015          * no - check patma1af ?
.
          GOTO      DBRTH050                * yes - valid record for display
.
DBRTH010  BRANCH    FORM1,DBRTH020          * patma1af search
          CALL      RDKPRAM2                * get next patpr1af record
          BRANCH    OVRCD,DBRTH015          * eof - finished patpr1af search
.
          MATCH     SRCHDOB,PBDATE          * same dob still ?
          GOTO      DBRTH015 IF NOT EQUAL   * no - finished patpr1af search
.
          GOTO      DBRTH050                * valid record for display
.
.         Search patma1af for EXACT DOB matches
.
DBRTH015  MOVE      ONE,FORM1               * set for search of patma1af
          MOVE      SRCHDOB,KEY8
          CALL      RDPTMAS2                * dob on patma1af ?
          BRANCH    OVRCD,DBRTH500          * no - finished
.
          GOTO      DBRTH050                * yes - valid record for display
.
DBRTH020  CALL      RKPTMAS2                * get next patma1af record
          BRANCH    OVRCD,DBRTH500          * eof - finished patma1af search
.
          MATCH     SRCHDOB,PBDATE          * same dob still ?
          GOTO      DBRTH500 IF NOT EQUAL   * no - finished patma1af search
.
          GOTO      DBRTH050                * valid record for display
.
.         Using Parameters for DOB search.
.         Loop through the pre-admission file, then the patient master file
.         using the dob index to find matching dob records within date ranges
.
DBRTH025  MOVE      ZERO,FORM1              * set for pre-admission
DBRTH030  MOVE      SRCHFSYR,SRCHYEAR       * load the starting year
.
DBRTH035  CALL      DTRNG000                * get date range for working year
.
.         Loop through patma1af/patpr1af, using dob index, between start and 
.         end dob
.
          MOVE      SRCHWKDT,KEY8
          IF        FORM1 = 0
            CALL      RDPRAM2               * start dob on file (patpr1af) ?
          ELSE
            CALL      RDPTMAS2              * start dob on file (patma1af)?
          ENDIF
          COMPARE   ZERO,OVRCD              * yes
          GOTO      DBRTH050 IF EQUAL       * valid record found
.
DBRTH040  IF        FORM1 = 0
            CALL      RDKPRAM2              * no - read next record (patpr1af)
          ELSE
            CALL      RKPTMAS2              * no - read next record (patma1af)
          ENDIF
          BRANCH    OVRCD,DBRTH045          * eof - finished 
.
          MATCH     PBDATE,SRCHTDTE         * patient dob > end search date ?
          GOTO      DBRTH045 IF LESS        * yes - finished
.
          GOTO      DBRTH050                * dob search match found
.
.         We have finished looping through the date range for the working
.         year (SRCHYEAR).  Check if this year was the end year in the date
.         date range.
.
DBRTH045  MOVE      SRCHTEYR,SRCHFWCY
          COMPARE   SRCHFWCY,SRCHYEAR       * last year ?
          IF        !@LESS
            COMPARE   FORM1,ZERO
            IF        @EQUAL
              MOVE      ONE,FORM1           * finished pre-admission so set 
              GOTO      DBRTH030            * flag for patma1af.
            ENDIF
            GOTO      DBRTH500              * finished patpr1af and patma1af
          ENDIF
.
          ADD       ONE,SRCHYEAR            * no - increment working year
          GOTO      DBRTH035                * go and set up next date range
.
DBRTH050  BRANCH    PSTAT,DBRTH010
          MOVE      PTMASNAM,GSRSNAM
          MOVE      PMPXFNAM,GSRGNAM
          MOVE      PMPXSNAM,PTGSGNM2
          IF        FORM1 = 0
            PACK      KEY115,ZEROUR,PURNO,GSRSNAM,GSRGNAM,PTGSGNM2,PBDATE,PSEX:
                             SP70,SP70
          ELSE
            PACK      KEY115,PURNO,ZEROUR,GSRSNAM,GSRGNAM,PTGSGNM2,PBDATE,PSEX:
                             SP70,SP70
          ENDIF
          CALL      RDPTGSR1
          BRANCH    OVRCD,DBRTH040
.
. We have a valid record - check if screen is full
.
          COMPARE   TWENTY2,CVERT
          GOTO      DBRTH300 IF LESS
.
. screen is full
.
          MOVE      ONE,SRCHSCRN            * we have a next screen flag
          MOVE      CCOL4,PGNARRAY[CPAGENO]
          CALL      SOPTN000                * Ask line 24 options
          BRANCH    SRCHFLAG,DBRTH999:      * Item selected
                             DBRTH999:      * (N)ext
                             DBRTH950:      * (E)xit
                             DBRTH910:      * (R)egister
                             DBRTH000:      * (D)OB
                             DBRTH295:      * (S)earch More
                             DBRTH055       * (P)revious Screen
.
.         Previous page selected
.         We need to position on the first record on the current page
.         before we can read backwards.
.
DBRTH055  MATCH     ZEROUR,DIM8ARRY[1]      * pre-admission record ?
          IF        @EQUAL
            MOVE      ZERO,FORM1            * set flag for patpr1af search
            UNPACK    KEY16,KEY8,D8
            CALL      RDPRAM2               * dob record on file ?
            BRANCH    OVRCD,DBRTH060        * no - shouldn't happen
            GOTO      DBRTH065
.
DBRTH060    CALL      RDKPRAM2              * read next patpr1af record
            BRANCH    OVRCD,DBRTH005        * shouldn't happen
.
DBRTH065    MATCH     D8,PURNO              * read first record on page ?
            GOTO      DBRTH080 IF EQUAL     * yes - now read back
            GOTO      DBRTH060              * no - not first record yet
          ELSE
            MOVE      ONE,FORM1             * set flag for patma1af search
            UNPACK    KEY16,KEY8,D8
            MOVE      DIM8ARRY[1],D8
            CALL      RDPTMAS2              * dob record on file ?
            BRANCH    OVRCD,DBRTH070        * no - shouldn't happen
            GOTO      DBRTH075
.
DBRTH070    CALL      RKPTMAS2              * read next patma1af record
            BRANCH    OVRCD,DBRTH005        * shouldn't happen
.
DBRTH075    MATCH     D8,PURNO              * read first record on page ?
            GOTO      DBRTH080 IF EQUAL     * yes - now read back
            GOTO      DBRTH070              * no - not first record yet
          ENDIF
.
.         We are positioned on the first record for the current page.
.         Now read back one page.
.
DBRTH080  MOVE      PGNARRAY[CPAGENO],FORM4 * get no. of recs. on prev. page
.
          BRANCH    PTCNUDRN,DBRTH115       * using dob search parameters
.
.         If we are positioned in the patpr1af file, then we simply need to
.         read back in this file until we get to the appropriate record.
.         If we are in the patma1af file, then we need to read back through
.         this file until we either reach the correct record, or we have to
.         start looping back through the patpr1af file.
.
DBRTH085  IF        FORM1 = 0
DBRTH090    CALL      RDPPRAM2              * read previous patpr1af record
            BRANCH    OVRCD,DBRTH005        * eof - shouldn't happen
.
            MATCH     SRCHDOB,PBDATE        * same dob still ?
            GOTO      DBRTH005 IF NOT EQUAL * no - shouldn't happen
.
.           Validate that there is a patgsrnf record
.
            MOVE      PTMASNAM,GSRSNAM
            MOVE      PMPXFNAM,GSRGNAM
            MOVE      PMPXSNAM,PTGSGNM2
            PACK      KEY115,ZEROUR,PURNO,GSRSNAM,GSRGNAM,PTGSGNM2,PBDATE,PSEX:
                             SP70,SP70
            CALL      RDPTGSR1
            BRANCH    OVRCD,DBRTH090
.
            SUB       ONE,FORM4             * decrement counter
            COMPARE   ZERO,FORM4            * first record on page ?
            GOTO      DBRTH090 IF NOT EQUAL * no - get next record
.
          ELSE
DBRTH095    CALL      RPPTMAS2              * read previous patma1af record
            BRANCH    OVRCD,DBRTH100        * eof - look in patpr1af
.
            MATCH     SRCHDOB,PBDATE        * same dob still ?
            GOTO      DBRTH100 IF NOT EQUAL * no - look in patpr1af
.
.           Validate that there is a patgsrnf record
.
            MOVE      PTMASNAM,GSRSNAM
            MOVE      PMPXFNAM,GSRGNAM
            MOVE      PMPXSNAM,PTGSGNM2
            PACK      KEY115,PURNO,ZEROUR,GSRSNAM,GSRGNAM,PTGSGNM2,PBDATE,PSEX:
                             SP70,SP70
            CALL      RDPTGSR1              * record on file ?
            BRANCH    OVRCD,DBRTH095        * no - ignore this record
.
            SUB       ONE,FORM4             * decrement counter
            COMPARE   ZERO,FORM4            * first record on page ?
            GOTO      DBRTH095 IF NOT EQUAL * no - get next record
          ENDIF
          GOTO      DBRTH295                * first record found for prev. page.
.
.         We have read back all the appropriate records in patma1af,
.         now we have to get the records from patpr1af.
.         First, we need to position on the first matching dob record in the
.         file, then loop forward until eof or dob changes
.
DBRTH100  MOVE      ZERO,FORM1
          MOVE      SRCHDOB,KEY8
          CALL      RDPRAM2                 * dob on file ?
          BRANCH    OVRCD,DBRTH005          * no - shouldn't happen
          GOTO      DBRTH110                * yes
.
DBRTH105  CALL      RDKPRAM2                * read next record
          BRANCH    OVRCD,DBRTH085          * eof - now read back 1 record
.
DBRTH110  MATCH     PBDATE,SRCHDOB          * same dob still ?
          GOTO      DBRTH105 IF EQUAL       * yes - get next record
          GOTO      DBRTH085                * no - no start reading backwards
.
.         Using DOB search parameters
.
DBRTH115  UNPACK    PBDATE,KEY4,ANS,ANS,ANS,ANS
          MOVE      KEY4,SRCHYEAR           * load working year for current pt.
DBRTH120  CALL      DTRNG0000               * get date ranhe for the working yr.
.
DBRTH125  IF        FORM1 = 0
            CALL      RDPPRAM2              * read previous record
            BRANCH    OVRCD,DBRTH005        * shouldn't happen
.
            MATCH     SRCHWKDT,PBDATE       * still in valid date range ?
            GOTO      DBRTH155 IF NOT LESS  * yes
.
.           Date is not in valid range, so get range for previous year
.
DBRTH130    SUB       ONE,SRCHYEAR        * decrement working year by 1
            MOVE      SRCHFSYR,SRCHFWCY
            COMPARE   SRCHFWCY,SRCHYEAR   * working year < start year ?
            IF        @LESS
              MOVE      ZERO,FORM1        * yes - finished patma1af
              MOVE      SRCHTEYR,SRCHYEAR * load end dob search year
              GOTO      DBRTH120          * now search back through patpr1af
            ENDIF
.
            CALL      DTRNG000            * get date range for this year
            MOVE      SRCHTDTE,KEY8       * load key with end date
            CALL      RDPRAM2             * end dob on file ?
            BRANCH    OVRCD,DBRTH125      * no - get previous record
.
            MATCH     SRCHWKDT,PBDATE     * still in valid date range ?
            GOTO      DBRTH155 IF NOT LESS  * yes
            GOTO      DBRTH130            * no - search previous year
          ELSE
            CALL      RPPTMAS2              * read previous patma1af record
            IF        OVRCD = 1
              MOVE      ZERO,FORM1          * set flag for patpr1af file
              GOTO      DBRTH115            * loop through patpr1af
            ENDIF
.
            MATCH     SRCHWKDT,PBDATE       * still in valid date range ?
            GOTO      DBRTH155 IF NOT LESS  * yes
.
.           Date is not in valid range, so get range for previous year
.
DBRTH135    SUB       ONE,SRCHYEAR        * decrement working year by 1
            MOVE      SRCHFSYR,SRCHFWCY
            COMPARE   SRCHFWCY,SRCHYEAR   * working year < start year ?
            IF        @LESS
              MOVE      ZERO,FORM1        * yes - now loop through patpr1af 
              MOVE      SRCHTEYR,SRCHYEAR * load end dob search year
              CALL      DTRNG000          * get date range for end year
              MOVE      SRCHTDTE,KEY8     
              CALL      RDPRAM2           * end dob on file ?
              BRANCH    OVRCD,DBRTH125    * no - read previous record
.
DBRTH145      CALL      RDKPRAM2          * yes - read next record
              BRANCH    OVRCD,DBRTH005    * eof - read previous record
.
              MATCH     PBDATE,SRCHTDTE   * dob still in range ?
              GOTO      DBRTH125 IF LESS  * no - get previous record
              GOTO      DBRTH145          * yes - get next record
            ENDIF
.
            CALL      DTRNG000            * get date range for this year
            MOVE      SRCHTDTE,KEY8       * load key with end date
            CALL      RDPTMAS2            * end dob on file ?
            BRANCH    OVRCD,DBRTH125      * no - get previous record
.
DBRTH150    CALL      RKPTMAS2            * read next record
            BRANCH    OVRCD,DBRTH125      * eof - get previous record
.
            MATCH     PBDATE,SRCHTDTE     * dob still in range ?
            GOTO      DBRTH125 IF LESS    * no - get previous record
            GOTO      DBRTH150            * yes - get next record
          ENDIF
.
.         Make sure patient has a patgsrnf record
.
DBRTH155  MOVE      PTMASNAM,GSRSNAM
          MOVE      PMPXFNAM,GSRGNAM
          MOVE      PMPXSNAM,PTGSGNM2
          IF        FORM1 = 0
            PACK      KEY115,ZEROUR,PURNO,GSRSNAM,GSRGNAM,PTGSGNM2,PBDATE,PSEX:
                             SP70,SP70
          ELSE
            PACK      KEY115,PURNO,ZEROUR,GSRSNAM,GSRGNAM,PTGSGNM2,PBDATE,PSEX:
                             SP70,SP70
          ENDIF
          CALL      RDPTGSR1                * patgsrnf record on file ?
          BRANCH    OVRCD,DBRTH125          * no - get previous record
.
.         Valid record found - so update counter
.
          SUB       ONE,FORM4               * decrement record counter
.
          COMPARE   ZERO,FORM4              * first record on page ?
          GOTO      DBRTH125 IF NOT EQUAL   * no - get next record
.
.         We are back on the first record of the previous page, so
.         now display page again
.
DBRTH295  MOVE      FORM2,CVERT
          MOVE      ZERO,CCOL4                    * init array counter
          MOVE      ZERO,CLYEAR
          DISPLAY   *P1:CVERT,*EF
.
DBRTH300  CALL      DISPR000                      * display a record
          BRANCH    PTCNUDRN,DBRTH040             * extact dob match search
          GOTO      DBRTH010                      * get next record
.
. we have no more records to display
.
DBRTH500  MOVE      ZERO,SRCHSCRN             * no next screen flag
          MOVE      CCOL4,PGNARRAY[CPAGENO]
          CALL      SOPTN000                * Ask line 24 options
          BRANCH    SRCHFLAG,DBRTH999:      * Item selected
                             DBRTH999:      * (N)ext
                             DBRTH950:      * (E)xit
                             DBRTH910:      * (R)egister
                             DBRTH000:      * (D)OB
                             DBRTH500:      * (S)earch More
                             DBRTH055       * (P)revious Screen
          GOTO      DBRTH500
.
. Register
.
DBRTH910  MOVE      ONE,SRCHFLAG                 * Register selected
          MOVE      TWO,NZOPTION                 * in case automatic search on
          CALL      NATSR000                     * do National search if reqd.
          GOTO      DBRTH999
.
DBRTH940  MOVE      "0",SRCHFLAG            * nothing input (so set as Exit)
          MOVE      SP10,SRCHDOB            * initialise DOB
          CALL      SRCHCLR                 * clear search parameters
          RETURN
.
DBRTH950  MOVE      "0",SRCHFLAG            * nothing input (so set as Exit)
.
DBRTH999  CALL      SRCHCLR                 * clear search parameters
          MOVE      SRCHSVRT,CVERT               * restore row,column
          RETURN
+
.*****************************************************************************
.*                         DTRNG000                                          *
.*            Calculate date range for a the working year                    *
.*****************************************************************************
.
.         Calculate the start date for the working year
.
DTRNG000  UNPACK    SRCHDOB,ANS,ANS,ANS,ANS,SRCHWORK
          PACK      SRCHWKDT,SRCHYEAR,SRCHWORK
          UNPACK    SRCHWKDT,CCENT,CYEAR,CMON,CDAY
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
          CALL      DMYCON
          SUB       SRCHDRNG,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
          PACK      SRCHWKDT,CC,YY,MM,DD
          REP       " 0",SRCHWKDT
.
.         Calculate the end date for the working year
.
          PACK      SRCHTDTE,SRCHYEAR,SRCHWORK
          UNPACK    SRCHTDTE,CCENT,CYEAR,CMON,CDAY      
          MOVE      CCENT,CC
          MOVE      CYEAR,YY
          MOVE      CMON,MM
          MOVE      CDAY,DD
          CALL      DMYCON
          ADD       SRCHDRNG,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
          PACK      SRCHTDTE,CC,YY,MM,DD
          REP       " 0",SRCHTDTE
.
DTRNG999  RETURN
+
.*********************************************************************
.*  VPDOB000 :  Validate previous DOB                                *
.*        EXIT  =  1    -       invalid record, read next            *
.*                 2    -       end of date range, stop searching    *
.*                 3    -       search next year range               *
.*********************************************************************
VPDOB000  MOVE      ZERO,EXIT
          BRANCH    FORM1,VPDOB050          * using master file
          GOTO      VPDOB075                * using pre-adm file
.
VPDOB050  MOVE      SRCHFEYR,FORM4
          MATCH     SRCHFDAT,SRCHBDAY       * see if search crosses over years
          IF        @LESS
            SUB       ONE,FORM4
          ENDIF
VPDOB055  PACK      SRCHTDTE,FORM4,SRCHFDAT
          MATCH     SRCHTDTE,PBDATE         * before starting date range
          IF        @LESS
            MOVE      ONE,EXIT
            GOTO      VPDOB900
          ENDIF
.
          MATCH     SRCHFDAT,SRCHTDAT
          IF        @LESS
            ADD       ONE,FORM4
          ENDIF
          PACK      SRCHTDTE,FORM4,SRCHTDAT
          MATCH     SRCHTDTE,PBDATE         * after ending date range
          IF        @LESS
             GOTO     VPDOB900
          ENDIF
.         ADD       ONE,FORM4
          GOTO      VPDOB055
.
VPDOB075  PACK      SRCHTDTE,SRCHFSYR,SRCHFDAT
          MATCH     SRCHTDTE,PBDATE         * before starting date range
          IF        @LESS
            MOVE      ONE,EXIT
            GOTO      VPDOB900
          ENDIF
.
          UNPACK    PBDATE,C4YEAR,C4YEAR
          MATCH     SRCHFDAT,SRCHTDAT
          IF        @LESS
            MATCH     SRCHFDAT,C4YEAR
            IF        @LESS
              MATCH     C4YEAR,SRCHTDAT
              IF        @LESS
                MOVE      THREE,EXIT
                GOTO      VPDOB900
              ENDIF
            ENDIF
          ELSE
            MATCH     C4YEAR,SRCHFDAT
            IF        @LESS
              MATCH     C4YEAR,SRCHTDAT
              IF        @LESS
                MOVE      THREE,EXIT
                GOTO      VPDOB900
              ENDIF
            ELSE
              MOVE      THREE,EXIT
              GOTO      VPDOB900
            ENDIF
          ENDIF
.
VPDOB100  PACK      SRCHTDTE,SRCHTEYR,SRCHTDAT
          MATCH     PBDATE,SRCHTDTE         * after ending year range
          IF        @LESS
            MOVE      TWO,EXIT
            GOTO      VPDOB900
          ENDIF
.
          GOTO      VPDOB900
.
VPDOB900  MOVE      SRCHTDAT,SRCHBDAY
.
VPDOB999  RETURN
+
.*********************************************************************
.*  DOBREC00 :  Display record                                       *
.*********************************************************************
.
DOBREC00  COMPARE   TWENTY2,CVERT           * page full ?
          GOTO      DOBREC95 IF LESS        * no
.
.         Screen is full
.
          MOVE      ONE,SRCHSCRN            * we have a next screen flag
          CALL      SOPTN000                * Ask line 24 options
          BRANCH    SRCHFLAG,DOBREC99:      * Item selected
                             DOBREC99:      * (N)ext
                             DOBREC99:      * (E)xit
                             DOBREC99:      * (R)egister
                             DOBREC99:      * (D)OB
                             DOBREC90:      * (S)earch More
                             DOBREC60       * (P)revious Screen
.
DOBREC60  MOVE      PGNARRAY[CPAGENO],CVERT
          ADD       ONE,CPAGENO
          ADD       PGNARRAY[CPAGENO],CVERT
          SUB       ONE,CPAGENO
          ADD       ONE,CVERT
.
.         ADD       TWO,CVERT
.         IF        SRCHPCKL=1
.           ADD       ONE,CVERT
.           DIV       TWO,CVERT
.         ENDIF
DOBREC70  CALL      RDPPRAM1                * read the previous record
          BRANCH    OVRCD,DOBREC90
.
          CALL      VPDOB000
          BRANCH    EXIT,DOBREC70,DOBREC70,DOBREC70
.
          OPEN      PATGSRN1,"patgsrnf"
          MOVE      PTMASNAM,GSRSNAM
          MOVE      PMPXFNAM,GSRGNAM
          MOVE      PMPXSNAM,PTGSGNM2
          PACK      KEY115,ZEROUR,PURNO,GSRSNAM,GSRGNAM,PTGSGNM2,PBDATE,PSEX:
                           SP70,SP70
          CALL      RDPTGSR1
          BRANCH    OVRCD,DOBREC70
.
          SUB       ONE,CVERT
          COMPARE   ONE,CVERT
          GOTO      DOBREC70 IF NOT LESS
.
.         search more (set up for new screen)
.
DOBREC90  MOVE      FORM2,CVERT
          MOVE      ZERO,CCOL4                    * init array counter
          MOVE      ZERO,CLYEAR
          DISPLAY   *P1:CVERT,*EF
.
          COMPARE   SEVEN,SRCHFLAG
          GOTO      DOBREC99 IF EQUAL
.
DOBREC95  CALL      DISPR000                      * display a record
.
DOBREC99  RETURN
.
.*********************************************************************
.*  SRCHCLR  :  Subroutine to clear the search parameters            *
.*********************************************************************
SRCHCLR   IF        CREGOPT=1 
            IF        PTCNNHII=1
              CALL      NZCLR0000                 * clear National Search pars
            ENDIF
          ENDIF
.
          MOVE      SP20,NMPNUMB
          BRANCH    SRCHCLR,SRCHC999              * dont clear search pars.
.
          MOVE      SP70,SRCHSUR
          MOVE      SP70,SRCHGIV
          MOVE      SP1,SRCHSEX
          MOVE      SP10,SRCHFDAT
          MOVE      SP10,SRCHTDAT
          MOVE      SP10,SRCHFSYR
          MOVE      SP10,SRCHTSYR
          MOVE      SP10,SRCHFEYR
          MOVE      SP10,SRCHTEYR
          MOVE      SP10,SRCHDOB
          MOVE      SP3,SRCHAGE
SRCHC999  RETURN
+
. *****************************************************************************
. * SRCHZ000   : Re-calculate the patients age before re-displaying it        *
. * Parameters : PBDATE   Birth Date 
. * Returns    : PSAGE    Patients age                                        *
. *****************************************************************************
.
SRCHZ000  PACK      CTIMEIS,CCC,CYY,CMM,CDD  * Date to calculate age to.
.
.         If the patient is deceased, and a date of death is known, then
.         calculate the age to the date of death, not current date
.
          COMPARE   ONE,PCEASE               * Is the patient dead ?
          GOTO      SRCHZ100 IF NOT EQUAL    * No.
.
          MATCH     SP8,PDECDTE              * Do we have a date of death ?
          GOTO      SRCHZ100 IF EQUAL        * No.
.
          MOVE      PDECDTE,CTIMEIS
.
SRCHZ100  REP       " 0",CTIMEIS
          UNPACK    CTIMEIS,XCENT,XYEAR,XMON,XDAY
.
.         Set up the patients birth date
.
          UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
          PACK      SRCHWORK,CCENT,CYEAR    * Pack up the full birth year
          REP       " 0",SRCHWORK
          PACK      SRCHBDAY,CMON,CDAY       * Pack up the annual birthdate
          REP       " 0",SRCHBDAY
          MOVE      SRCHWORK,SRCHYEAR        * Birth year as a numeric
.
          PACK      SRCHWORK,XCENT,XYEAR     * Pack up the full current year
          REP       " 0",SRCHWORK
          MOVE      SRCHWORK,SRCHBRTH        * Current year as a numeric
.
.         Calculate the number of years since birth
.
          SUB       SRCHYEAR,SRCHBRTH
          MOVE      SRCHBRTH,PSAGE           * Save the number years
.
.         Check if the day and month born is less than the current date
.
          PACK      SRCHWORK,XMON,XDAY
          REP       " 0",SRCHWORK
.
          MATCH     SRCHBDAY,SRCHWORK        * Has the birthday past yet ?
          GOTO      SRCHZ800 IF NOT LESS     * Yes.
.
          SUB       ONE,PSAGE                * Haven't reached the birthday yet'
.
SRCHZ800  COMPARE   ONE,PTCNDATE
          GOTO      SRCHZ999 IF NOT EQUAL
.
. ----- Will calculate the patients age in either years, months, weeks, or days.
. ----- the age will be in variable (PSAGECON) and the age type in (PSAGETYP)
.
          COMPARE   ONE,PCEASE               * Is the patient dead ?
          GOTO      SRCHZ900 IF NOT EQUAL    * No.
.
          MATCH     SP8,PDECDTE              * Do we have a date of death ?
          GOTO      SRCHZ900 IF EQUAL        * No.
.
. ------  The patient is dead so set agedate to date of death, the ------
. ------  "X" variables are set at the top of the routine.         ------
.
          PACK      AGEDATE,XCENT,XYEAR,XMON,XDAY
          REP       " 0",AGEDATE
          GOTO      SRCHZ950
          
.
SRCHZ900  PACK      AGEDATE,CCC,CYY,CMM,CDD
.
SRCHZ950  CALL      CALCAGE
.
SRCHZ999  RETURN
+
.**********************************************************************
.* OUTRF000 - Check Outpatient Referral File                          *
.**********************************************************************
         DEFPROC    OUTRF000
.
         INC       OUTRF1FD/INC
.
         OPEN      OUTRF1A1,"outrf1af"
         CALL       RDOTRFL1
         CLOSE     OUTRF1A1
         BRANCH     OVRCD,OUTRF999
.
         UNPACK     OTRLDATE,CCENT,CYEAR,CMON,CDAY
         CALL       PACDATE
.
         DISPLAY    *P15:CVERT,"Outpatient Referral made on ":
                    CPCDATE," for ",OTRLCONS
         ADD        ONE,CVERT 
.
         GOTO       OUTRF999
.
         INC       OUTRF1IO/INC
.
OVERCOND MOVE       ONE,OVRCD
         RETURN
.
OUTRF999 ENDPROC
.************************************************************************
.*  NATSR000  :  Do National search                                     *
.************************************************************************
NATSR000  COMPARE   ONE,PTCNNHII             * using NZHIS/IBA Interface?
          GOTO      NATSR999 IF NOT EQUAL    * no.
.
          MOVE      ZERO,NZIBVNEW            * assume no NMPI No. selected
          MOVE      ZEROUR,PURNO             * we shouldn't have a UR here
          CALL      CLPATMAS                 * clear all master vars
.
          CALL      NZIBSRCH                 * Perform NZ National Dbase search
          BRANCH    EXIT,NATSR800
.
          MATCH     ZEROUR,PURNO
          GOTO      NATSR700 IF EQUAL
.
          MOVE      ZERO,NZIBVNEW
          GOTO      NATSR999
.
NATSR700  MOVE      ONE,NZIBVNEW               * NMPI No. selected with 0 UR
          GOTO      NATSR999
.
NATSR800  MOVE      TWO,NZIBVNEW               * Nat Srch done but no NMPI sel
.
NATSR999  RETURN
.
          INC       CALCYRS                    * calculate yrs
+
