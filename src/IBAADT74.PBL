******************************************************************************
.* System         : Patient Billing                                           *
.* Program        : IBAADT74.PBL                                              *
.* Name           : TAC EDI Outpatients Account Extract                       *
.******************************************************************************
.* Date           : 03/11/1999  (07/05/2009)                                  *
.* Author         : Greg Horvat / Mike Laming                                 *
.* Function       : Extract EDI Outpatient details for Victorian TAC          *
.* Modifications  :                                                           *
.*                                                                            *
.* V12.00.01 19/05/2025  J.Tan          TSK 0955096                           *
.*           Added Alphanumeric visit number changes                          *
.* V10.05.01  06/10/2014  Ebon Clements CAR 268970                            *
.*            Removed OUTCLIFD index 2 open as it was not used                *
.* V10.04.01  15/06/2014 Jill Parkinson CAR 301639                            *
.*            Moved call TFILENAM to INIT000                                  *
.* V10.03.01  19/12/2012 Patrick Adair                             CAR 261630 *
.*                       Removed port number from temp file name              *
.*        V10.01.01 17/12/2010  Mike Laming   CAR 233046                      *
.*                  Mods to Misc.Charges PATMCHFD - Key change, logic changes *
.*        V10.00.01 30/04/2010 J.Tan         CAR 220887                       *
.*                  Mods checking for Active/Inactive of Misc.charge          *
.*        V9.12.04  27/08/2009  Mike Laming   CAR 201835                      *
.*                  Add code to bypass zero balance Invoices at LOAD2000      *
.*        V9.12.03  30/07/2009  Mike Laming   CAR 201835                      *
.*                  Fix fields XXPAINVN & XXHDDATE                            *
.*        V9.12.02  27/07/2009  Mike Laming   CAR 201835                      *
.*                  Add changes made to new Priv.Prac. program IBAADT76       *
.*        V9.12.01  18/06/2009  Mike Laming   CAR 195875                      *
.*                  Minor mods to Extract File name                           *
.*        V9.11.00  06/05/2009  Mike Laming   CAR 195875                      *
.*                  Ported from v6.17 IBAADT73 and re-built for Outpatients   *
.*                                                                            *
.******************************************************************************
.
          INC       STD001FD
.
          INC       IBACONFD/INC            * Control file
          INC       IBAGEDFD/INC            * GST rate file
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       OUTBOAFD/INC            * O/P booking A file
          INC       OUTBB1FD/INC            * O/P booking B file
          INC       OUTCLIFD/INC            * O/P clinic file
          INC       OUTDTRFD/INC            * O/P DTR file
          INC       OUTSITFD/INC            * O/P site file
          INC       PATCODFD/INC            * Codes file
          INC       PATCONFD/INC            * Control file
          INC       PATDO1FD/INC            * Doctor file
          INC       PATFN1FD/INC            * Health Fund rable
          INC       PATEBHFD/INC            * EDI batch header file
          INC       PATEBIFD/INC            * EDI batch invoice file
          INC       PATEDAFD/INC            * EDI audit file
          INC       PATINVFD/INC            * Invoice file
          INC       PATMA1FD/INC            * Master file
          INC       PATMCHFD/INC            * Miscellaneous charges file
          INC       PATWMAFD/INC            * TAC file
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
. ----- Tempfile variables -----
.
EXTFILE1  FILE      ASCII,FIXED=256
.
TEMP1     IFILE     SQL,FIXED=42, KEY="U1-8"
TEMP2     IFILE     SQL,FIXED=42, KEY="U11-18,1-8"
FILELIN1  INIT      " 42 U1-8 U11-18,1-8"
.
.Name     Type   Length   Physical   Start   Description
.----     ----   ------   --------   -----   -----------
TMPINVNO  DIM       8         8        1     Invoice no
TMPMEFLG  DIM       1         1        9     Medical/Paramedical flag
TMPTAXIF  DIM       1         1        10    Taxi voucher flag 
TMPADMNO  DIM       8         8        11    Admin no
TMPERFLG  DIM       1         1        19    Tempfile error flag
TMPINAMT  FORM    12.2       11        20    Invoice amount 
TMPGSTAM  FORM    12.2       11        31    Invoice GST amount
.
.End of Record                         42
.
. TAC Extract Records
.
. ---- HEADER Record
XXHDHEAD  DIM       6                  1     Literal "Header"
XXHDINVC  DIM       4                  7     Invoice Count
XXHDDATE  DIM       8                  11    format (ddmmyycc)
XXHDTIME  DIM       6                  19    format (hhmmss)
XXHDTAXT  DIM       11                 25    Literal "Tax Invoice"
XXHDREFN  DIM       11                 36    Batch Ref.No (patebhaf.ptehbtn)
XXHDHNAM  DIM       30                 47    Hospital Name
XXHDHABN  DIM       11                 77    Hospital ABN
XXHDTNAM  DIM       3                  88    Literal "TAC"
XXHDTABN  DIM       11                 91    TAC ABN literal "22033947623"
XXHDTADD  DIM       32                 102   TAC Address Literal
XXHDPNUM  DIM       5                  134   TAC allocated Provider Number
.                                   to 138
TACHEAD   INIT      "Header"                             DIM 6
TACTAXT   INIT      "TAX INVOICE"                        DIM 11
TACTNAM   INIT      "TAC"                                DIM 3
TACABN    INIT      "22033947623"                        DIM 11 - TAC ABN
TACADD    INIT      "222 Exhibition Street, Melbourne"   DIM 32
.
. ---- PATIENT Record
XXPATINT  DIM       7                  1     Literal "Patient"
XXPAINVN  DIM       9                  8     Invoice No.
XXPAINDT  DIM       8                  17    Invoice date (ddmmyycc)
XXPANAMR  DIM       30                 25    Patient Name
XXPACLMN  DIM       8                  55    Claim No.
XXPAPBDT  DIM       8                  63    Patient Date of Birth
.                                   to 71
TACTINT   INIT      "Patient"                            DIM 7
.
.  ---- ITEM Record (recurring)
XXITITEM  DIM       4                  1     Literal "Item"
XXITREFN  DIM       9                  5     Item line Reference
XXITNUMB  DIM       6                  14    Item Number   (.otitemno)
XXITSDAT  DIM       8                  20    Service Date (ddmmyycc)
XXITAMNT  DIM       8                  28    Cost of Service in cents.
XXITTAXA  DIM       12                 36    Tax Info (GST Included or Cents or
.                                   to 47   
TACITEM   INIT      "Item"                               DIM 4
..TACTAXA   INIT      "GST Included"
TACTAXA   INIT      "000000000000"
.
. ---- TRAILER Record
XXTRAILR  DIM       7                  1     Literal "Trailer"
XXTRBTOT  DIM       12                 8     Total Amount (Inv. Total) in cents
XXTRGSTS  DIM       24                 20    
.                                   to 43
TACAILR   INIT      "Trailer"                            DIM 7
TACGSTS   INIT      "Total Price Includes GST"           DIM 24
.
. ----- Program variables -----
.
BCHTAMNT  FORM      12.2                    * Batch Total Amount
BCHINVCT  FORM      4                       * Batch Invoice Count
BCHITMCT  FORM      4                       * Batch Item Count
.
CFILEPRE  DIM       3
CLMDESC   DIM       20                      * Claim type description
CLMTYPE   DIM       3                       * Claim type
CMDLINE   DIM       80
CODE      DIM       2                       * For PATCODKY
CURRDATE  DIM       8                       * Current date (ccyymmdd)
DIM4      DIM       4
DIM15A    DIM       15
DIM24A    DIM       24
.
ENDDTE8   DIM       8                       * End date (ccyymmdd)
ERRORFLG  FORM      1                       * Error flag
ERRINVNO  DIM       8                       * Error invoice no
ERRMSG    DIM       60                      * Error message
EXTFNAME  DIM       12                      * Extract file name
.
FNAMEA    DIM       8
FORM10P2  FORM      10.2
FORM12P2  FORM      12.2
FORM6P2   FORM      6.2
FORM3     FORM      3
FORM8     FORM      8
.
GSTAMNT   FORM      12.2
.
IBALANCE  FORM      12.2
ITEMCONT  FORM      4                       * Invoice Item counter
INVOICEN  FORM      8
.
KEY21A    DIM       21
.
MXNOFSRV  FORM      2                       * Maximum no of services
NOOFSERV  FORM      2                       * No of services
NOABN     FORM      1
NOTACP    FORM      1
NOTACITM  FORM      1
.
OPGSTTL   FORM      12.4                    * O/P item GST total
OPITMTL   FORM      12.4                    * O/P item total
.
RECSREAD  FORM      5
RECSERR   FORM      5
RECSWARN  FORM      5
RECSWRIT  FORM      5
.
SAVADMIN  DIM       8                       * Save the admin no
SOBAOUTN  DIM       8
SOBADATE  DIM       8
STRTDTE8  DIM       8                       * Start date (ccyymmdd)
SVKEY26   DIM       26
.
TACDUR    FORM      4                       * TAC duration
TACITMTP  DIM       1                       * TAC item type
TMFADMNO  DIM       8                       * Admin no
TMFMEFLG  FORM      1                       * Medical/Paramedical flag (O/P only
TMFTAXIF  FORM      1                       * Taxi voucher flag (O/P only)
TMFERFLG  FORM      1                       * Invoice Error flag
.
PASSNUMB  FORM      1                       * Validation flag
.
WRNINVNO  DIM       8                       * Warning invoice no
.
. ----- Program constants -----
.
PRGID     INIT      "IBAADT74"
PRGNAM    INIT      "TAC EDI Outpatient Extract"
VERSION   INIT      "V12.00.01"
+
.******************************************************************************
.*                                   ML0000                                   *
.*                                 Main Module                                *
.******************************************************************************
ML0000    CALL      INIT0000                * Initialise variables & open files
.
ML1000    CALL      OPTN0000                * Select main option
          BRANCH    EXIT,ML9999
.
ML1500    IF        OPTION = 2              
            CALL      INNO0000
            BRANCH    EXIT,ML1000           
            GOTO      ML5000
          ENDIF
.
ML2000    CALL      CLTY0000                * Keyin the claim type
          BRANCH    EXIT,ML1000,ML1000
.
ML3000    CALL      DATE0000                * Keyin the invoice date range
          BRANCH    EXIT,ML2000
.
ML4000    CALL      CONTQST                 * Ok to Continue (Y/N/C) ?
          BRANCH    CEXIT,ML5000,ML3000,ML1000
          GOTO      ML1000
.
ML5000    CALL      OPEN0000                * Open the tempfile
          CALL      LOAD0000                * Load the tempfile
          CALL      VALD0000                * Validate the tempfile
          CALL      CHEK0000                * check if any valid Invoices
          IF        EXIT <> 0
            BRANCH    OPTION,ML1000,ML1500
          ENDIF
.
          CALL      CREA0000                * create extract file
          CALL      WRIT0000                * Write to the files
          CALL      SEND0000                * use a ".us1" script to move file
          CALL      KILL0000                * Delete the tempfile
.
          BRANCH    OPTION,ML1000,ML1500
          GOTO      ML1000
.
ML9999    CALL      KILL0000                * Delete the tempfile
          CHAIN     PGM
+
.******************************************************************************
.*                                  INIT0000              Called by: ML0000   *
.*                       Initialise Variable & Open Files                     *
.******************************************************************************
INIT0000  MOVE      ZERO,EXIT
          CALL      DISPHEAD                * Display screen heading
          MOVE      "99",CLNO
.
          DISPLAY   *P56:24,"Opening controlf"
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"ibagedaf"
          OPEN      IBAGEDA1,"ibagedaf"
.
          DISPLAY   *P64:24,"outsitaf"
          OPEN      OUTSITA1,"outsitaf"
.
          DISPLAY   *P64:24,"patcodes"
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patdo1af"
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P64:24,"patebhaf"
          OPEN      PATEBHA1,"patebhaf"
.
          DISPLAY   *P64:24,"patfn1af"
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"patebiaf"
          OPEN      PATEBIA1,"patebiaf"
.
          DISPLAY   *P64:24,"patinvrf"
          OPEN      PATINVR1,"patinvrf"
          OPEN      PATINVR2,"patinvrf"
          OPEN      PATINVR3,"patinvrf"
.
          DISPLAY   *P64:24,"patma1af"
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patmchgf"
          OPEN      PATMCHG1,"patmchgf"
.
          DISPLAY   *P64:24,"patwmabf"
          OPEN      PATWMAB1,"patwmabf"
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FNAMEA
.
          READ      CONTROLF,ZERO;*70,IBCNABNN        * ABN Number
          READ      CONTROLF,TEN;*206,CAUDF           * Audit flag
          READ      CONTROLF,TWENTY;*193,PTCNDCLM
          READ      CONTROLF,TWENTY;*166,PTCNTACP     * TAC Provider No.
          READ      CONTROLF,HUND10;*116,PTCNEDIH     * EDI Hospital Code
.
          IF        CAUDF<>1
            DISPLAY   *P64:24,"patedaaf"
            OPEN      PATEDAA1,"patedaaf"
          ENDIF
.
          CALL      IBACLOCK                * Get current date & time
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          MOVE      ZERO,CKYIMAND
          MOVE      ZERO,CKYIMODE
          MOVE      ONE,CNEWDS
.
INIT9000  MOVE      ZERO,EXIT
INIT9999  RETURN
+
.******************************************************************************
.*                                  OPTN0000              Called by: ML0000   *
.*                             Select Main Option                             *
.******************************************************************************
OPTN0000  MOVE      ZERO,OPTION
          HLINE     *G37,2,52,80
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = TAC Extract by Date range":
                    *P1:6,*V2LON,"2",*HOFF," = TAC Extract by Invoice No.":
                    *P1:8,"Select Option : ";
OPTN1000  KEYIN     *P17:8,*V2LON,*DV,UNDLN2,*P17:8,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      OPTN9500 IF EQUAL
.
          BRANCH    OPTION,OPTN2000,OPTN2000
.
          BEEP
          GOTO      OPTN1000
.
OPTN2000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.******************************************************************************
.*                                  INNO0000              Called by: ML0000   *
.*                            Keyin The Invoice No.                           *
.******************************************************************************
INNO0000  MOVE      ZERO,EXIT
          MOVE      ZERO,INVOICEN
          MOVE      SP3,CLMTYPE
.         
          DISPLAY   *P1:10,"Invoice No. : ";
          KEYIN      *P15:10,*EL,*V2LON,INVOICEN,*DV,*P15:10,INVOICEN
.
          COMPARE    ZERO,INVOICEN
          GOTO       INNO9999 IF NOT EQUAL  * invoice no entered
.
          MOVE       ONE,EXIT
.
INNO9999  RETURN
+
.******************************************************************************
.*                                  CLTY0000              Called by: ML0000   *
.*                            Keyin The Claim Type                            *
.******************************************************************************
CLTY0000  MOVE      "14",ECOL
          MOVE      "10",EVERT
          MOVE      "CL",CODE
          MOVE      SP3,CKYIDEF3
          DISPLAY   *P1:EVERT,"Claim Type : ",*EF;
          CALL      PATCODKY                * Keyin a codes file code
          BRANCH    EXIT,CLTY2000,CLTY9500
.                        Spaces   Exit
.
          MOVE      ACODE,CLMTYPE
          MOVE      TDESC,CLMDESC
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,ACODE,SP2,TDESC;
.
          MOVE      ONE,FORM1
CLTY1000  LOAD      KEY1,FORM1,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
          MATCH     ANSM,KEY1
          GOTO      CLTY9000 IF EQUAL       * TAC claim type
.
          ADD       ONE,FORM1
          COMPARE   "6",FORM1
          GOTO      CLTY1000 IF LESS        * Counter < 6
.
          DISPLAY   *P1:24,*EL,*B,"Invalid TAC claim type.  ";
          CALL      HITENTER
          GOTO      CLTY0000
.
CLTY2000  UNPACK    SP30,CLMTYPE,CLMDESC
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,"All TAC Claims";
.
CLTY9000  MOVE      ZERO,EXIT
          GOTO      CLTY9999
.
CLTY9500  MOVE      ONE,EXIT
CLTY9999  RETURN
+
.******************************************************************************
.*                                  DATE0000              Called by: ML0000   *
.*                        Keyin The Invoice Date Range                        *
.******************************************************************************
DATE0000  MOVE      "21",CCOL
          MOVE      "12",CVERT
          DISPLAY   *P1:CVERT,*EF,"Starting Date     : ";
          ADD       ONE,CVERT
          DISPLAY   *P1:CVERT,"Ending Date       : ";
.
          MOVE      ONE,CCANLDTE            * Blank cancel default
          MOVE      ZERO,CHIGHLT            * Use highlight
.
. ----- Enter starting date -----
.
DATE1000  SUB       ONE,CVERT
DATE2000  MOVE      CCC,CCENT
          UNPACK    SP6,CYEAR,CMON,CDAY
          CALL      KEYDATE                 * Keyin date
          BRANCH    OVRCD,DATE9500
          BRANCH    CQUEST,DATE2000
.
          PACK      STRTDTE8,CCENT,CYEAR,CMON,CDAY
          REP       " 0",STRTDTE8
.
          MATCH     STRTDTE8,CURRDATE
          IF        @LESS
            DISPLAY   *P1:24,*B,*EL,"Start date must not be after the ":
                      "current date.  ";
            CALL      HITENTER 
            GOTO      DATE2000
          ENDIF
.
. ----- Enter ending date -----
.
          ADD       ONE,CVERT
DATE3000  UNPACK    STRTDTE8,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE                 * Keyin date
          BRANCH    OVRCD,DATE1000
          BRANCH    CQUEST,DATE3000
.
          PACK      ENDDTE8,CCENT,CYEAR,CMON,CDAY
          REP       " 0",ENDDTE8
.
          MATCH     ENDDTE8,CURRDATE
          IF        @LESS
            DISPLAY   *P1:24,*B,*EL,"End date must not be after the current ":
                      "date.  ";
            CALL      HITENTER 
            GOTO      DATE3000
          ENDIF
.
          MATCH     STRTDTE8,ENDDTE8
          IF        @LESS
            DISPLAY   *P1:24,*B,*EL,"End date must be after the start date.  ";
            CALL      HITENTER 
            GOTO      DATE3000
          ENDIF
.
          MOVE      "0701",CKYIDEF4
          UNPACK    STRTDTE8,KEY2,KEY2,KEY4
          MATCH     CKYIDEF4,KEY4
          IF        @LESS
            UNPACK    ENDDTE8,KEY2,KEY2,KEY4
            MATCH     KEY4,CKYIDEF4
            IF        @LESS
              DISPLAY   *P1:24,*B,*EL,"Both dates must be from the same ":
                        "financial year.  ";
              CALL      HITENTER
              GOTO      DATE0000
            ENDIF
          ENDIF
.
DATE9000  MOVE      ZERO,EXIT
          GOTO      DATE9999
.
DATE9500  MOVE      ONE,EXIT
DATE9999  RETURN
+
.******************************************************************************
.*                                  OPEN0000              Called by: ML0000   *
.*                              Open The Tempfile                             *
.******************************************************************************
OPEN0000  CALL      KILL0000                * Delete the tempfile
.
          CLEAR     KEY99
          APPEND    "isbuild ",KEY99
          APPEND    FNAMEA,KEY99
          APPEND    FILELIN1,KEY99
          RESET     KEY99
          EXECUTE   KEY99,TASKID
.
          OPEN      TEMP1,FNAMEA
          OPEN      TEMP2,FNAMEA
.
OPEN9000  MOVE      ZERO,EXIT
OPEN9999  RETURN
+
.******************************************************************************
.*                                  LOAD0000              Called by: ML0000   *
.*                              Load The Tempfile                             *
.******************************************************************************
LOAD0000  MOVE      ZERO,RECSREAD              * Clear the read counter
          MOVE      ZERO,RECSWRIT              * Clear the write counter
          DISPLAY   *P1:24,*EL,"Scanning : ",*P35:24,"Loading : ";
.
          IF        OPTION = 2
            PACK      KEY8,INVOICEN
            CALL      RDPTINV1
            BRANCH    OVRCD,LOAD9000
          ELSE
            PACK      KEY16,STRTDTE8,SP20
            CALL      RDSINV2               * Position on & read an invoice
LOAD1000    CALL      RDKINV2                   file record
            BRANCH    OVRCD,LOAD9000
.
            MATCH     PINVDTE,ENDDTE8
            GOTO      LOAD9000 IF LESS      * End date < invoice date
.
            COMPARE   "2",PINVSYS
            GOTO      LOAD1000 IF NOT EQUAL * not an Outpatient
.
....        COMPARE   ZERO,PTINEDSF
....        GOTO      LOAD1000 IF NOT EQUAL * Only extract invoice with EDI of
.                                             not sent
          ENDIF
.
.                                           * calc. outstanding Inv. balance
LOAD2000  MOVE      PINVAMT,IBALANCE        * Invoice Amount
          ADD       PINVPATA,IBALANCE       * minus Amount paid by Patient
          ADD       PINVHFDA,IBALANCE       * minus Amount paid by Health Fund
          ADD       PINVOTHA,IBALANCE       * minus Other Amounts paid
          ADD       PINVJOUR,IBALANCE       * plus Journals
          ADD       PTINGSTJ,IBALANCE       * plus GST Adjustments
          ADD       PTINCRTT,IBALANCE       * Credit Note
          IF        IBALANCE <= 0
            GOTO      LOAD6000              * don't send if zero Balance
          ENDIF
.
          ADD       ONE,RECSREAD
          MOVE      ZERO,TMFMEFLG           * ME/PM item flag
          MOVE      ZERO,TMFTAXIF           * TX item flag
.
LOAD3000  PACK      KEY6,PINVSITE
          CALL      RDSITA1                 * Read the O/P site file
          BRANCH    OVRCD,LOAD6000
.
          MATCH     OSTFILE,CFILEPRE        * Save Current File Prefix
          IF        !@EQUAL
            MOVE      OSTFILE,CFILEPRE
            CALL      OPNOUT00              * Open all relevent "out" files
          ENDIF
.
          PACK      KEY8,PINVADM
          CALL      RDBOKB1                 * Read a booking B file record
          BRANCH    OVRCD,LOAD6000
.
          MATCH     OBACOMP,PINVCLM
          GOTO      LOAD6000 IF NOT EQUAL   * Different claim code
.          
LOAD4000  CALL      GTPT0000                * Get TAC patients
          BRANCH    EXIT,LOAD6000
.
          MOVE      PINVNO,TMPINVNO
          MOVE      PINVADM,TMFADMNO
          MOVE      PINVADM,TMPADMNO
          MOVE      ZERO,TMFERFLG           * Error flag - no
          MOVE      ZERO,TMPINAMT
          MOVE      ZERO,TMPGSTAM
.
          PACK      KEY8,TMPINVNO
          CALL      RATEMP1                 * Position read a tempfile record
          COMPARE   ONE,OVRCD
          GOTO      LOAD6000 IF NOT EQUAL   * Read exists
.
          CALL      WRTEMP1                 * Write a tempfile record
.
.                                           * check which Option
LOAD6000  BRANCH    OPTION,LOAD1000,LOAD9000
          GOTO      LOAD1000
.
.
LOAD9000  MOVE      ZERO,EXIT
LOAD9999  RETURN
+
.******************************************************************************
.*                                  HEAD0000              Called by: ML0000   *
.*                             Print Report Header                            *
.******************************************************************************
HEAD0000  CALL      HEAD80                  * Print 80 column header
.
          IF        OPTION = 1
            MATCH     SP3,CLMTYPE
            IF        @EQUAL
              PRINT     *N,*20,"Claim Type : All TAC Claims",*N
            ELSE
              PRINT     *N,*20,"Claim Type : ",CLMTYPE,SP2,CLMDESC,*N
            ENDIF
.
            UNPACK    STRTDTE8,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE                 * Format the start date
            PRINT     *20,"Start Date : ",CPCDATE
            UNPACK    ENDDTE8,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE                 * Format the end date
            PRINT     *20,"End Date   : ",CPCDATE,*N
          ELSE
            PRINT     *N,*20,"Invoice No. :",INVOICEN,*N,*N,*N
          ENDIF
.
          CALL      UND80
          PRINT     *1,"| Inv No | Adm No | Error",*80,"|"
          CALL      UND80
          MOVE       "7",CLNO
.
HEAD9000  MOVE      ZERO,EXIT
.
HEAD9999  RETURN
+
.******************************************************************************
.*                                  VALD0000              Called by: ML0000   *
.*                            Validate The Tempfile                           *
.******************************************************************************
VALD0000  MOVE      ZERO,EXIT
.
          MOVE      "1",PASSNUMB            * Pass 1 = validation only
          MOVE      ZERO,NOABN
          MOVE      ZERO,NOTACP
          MOVE      ZERO,RECSREAD           * Clear the read counter
          MOVE      ZERO,RECSERR            * Clear the error counter
          MOVE      ZERO,RECSWARN           * Clear the warning counter
          MOVE      ZERO,ITEMCONT           * Clear the invoice Item counter
          MOVE      ZEROVISN,SAVADMIN       * Clear the save admin no
          MOVE      ZERO,BCHINVCT            * No of valid Invoices
          MOVE      ZERO,BCHITMCT           * No of valid Items
          MOVE      ZERO,BCHTAMNT           * Clear the total amount counter
          MOVE      SP8,ERRINVNO            * Clear the error invoice no
          MOVE      SP8,WRNINVNO            * Clear the warning invoice no
.
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line counter >= 55 lines
          MATCH     SP20,IBCNABNN
          IF        @EQUAL
            MOVE      "Blank hospital ABN number",ERRMSG
            PACK      ERRMSG,ERRMSG,SP70
            PRINT     *1,"|",*10,"|",*19,"|",ERRMSG,"|"
            MOVE      ONE,NOABN
          ENDIF
.
          MATCH     SP5,PTCNTACP
          IF        @EQUAL
            MOVE      "TAC Provider Number is blank",ERRMSG
            PACK      ERRMSG,ERRMSG,SP70
            PRINT     *1,"|",*10,"|",*19,"|",ERRMSG,"|"
            MOVE      ONE,NOTACP
          ENDIF
.
          PACK      KEY16,SP20
          CALL      RSTEMP2                 * Position on & read a tempfile
VALD1000  CALL      RKTEMP2                 * Read a tempfile record
          BRANCH    OVRCD,VALD9999
.
          MOVE      "0",ERRORFLG
          ADD       ONE,RECSREAD
.
          CALL      GPTD0000                * Get patient details
          BRANCH    EXIT,VALD5000
.
          MOVE      ZERO,TMPINAMT           * Clear the invoice amount counter
          MOVE      ZERO,TMPGSTAM           * Clear the invoice GST amount count
          MOVE      ZERO,ITEMCONT           * Item count for Invoice

          CALL      WTIN0000                * Write invoice details
          CALL      WTIT0000                * Write item details
.
.                                           * finished this Invoice - save info
VALD5000  PACK      KEY8,TMPINVNO
.
          IF        ERRORFLG = 0 & (ITEMCONT > 0)
            ADD       ONE,BCHINVCT           * store Totals for valid Invoices
            ADD       ITEMCONT,BCHITMCT
            ASSIGN    (TMPINAMT + TMPGSTAM + BCHTAMNT),BCHTAMNT
          ELSE
            MOVE      ERRORFLG,TMFERFLG
          ENDIF
          CALL      UPTEMP1                 * Update a tempfile record
.
          GOTO      VALD1000
.
VALD9000  MOVE      ONE,EXIT
.
VALD9999  RETURN
+
.******************************************************************************
.*                                  CHEK0000              Called by: ML0000   *
.*                  Check details to determine if a file is to be written     *
.******************************************************************************
CHEK0000  MOVE      ZERO,EXIT
          MOVE      BCHINVCT,RECSWRIT
          CALL      TAIL0000
.
          IF        NOABN = 1
            PRINT     *N,*1,"Hospital ABN is missing - file cannot be extracted"
            GOTO      CHEK9000
          ENDIF
.
          IF        NOTACP = 1
            PRINT     *N,*1,"TAC Provider No. is missing - cannot continue"
            GOTO      CHEK9000
          ENDIF
.
CHEK1000  IF        BCHINVCT = 0
            IF        RECSREAD = 0
              IF        OPTION = 2
                MOVE      INVOICEN,KEY8
                SQUEEZE   KEY8
                PRINT     *N,*1,"Invoice ",KEY8;
                IF        NOTACITM <> 0
                  PRINT     " has no TAC Items - It";
                ENDIF
                IF        IBALANCE <= 0
                  MOVE      IBALANCE,DIM15A
                  SQUEEZE   DIM15A
                  PRINT     " has a balance of $ ",DIM15A," - It";
                ENDIF
                PRINT     " has not been extracted."
                GOTO      CHEK9000
              ENDIF
              PRINT     *N,*1,"No Invoices to be extracted for this Date range"
            ELSE
              PRINT     *N,*1,"There are no valid Invoices to be extracted"
            ENDIF
            GOTO      CHEK9000
          ENDIF
.
          IF        RECSERR > 0
            PRINT     *N,*1,"Errors have been detected - these Invoices ":
                      "will not be extracted"
          ENDIF

          GOTO      CHEK9999
.
CHEK9000  PRINT     *N,"*** End of Report ***"
          MOVE      "99",CLNO
          MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.******************************************************************************
.*                                  CREA0000              Called by: ML0000   *
.*                          Create the Extract file                           *
.******************************************************************************
CREA0000  MOVE      ZERO,EXIT
.                                           * get the next Batch Number
          READ      CONTROLF,NINTY8;*157,PTCNBTHN
          ADD       ONE,PTCNBTHN
          WRITAB    CONTROLF,NINTY8;*157,PTCNBTHN
          SUB       ONE,PTCNBTHN
.
.                                           * generate Extract file name
CREA1000  MOVE      "OU",KEY2               
          PACK      KEY4,PTCNEDIH,KEY2,SP10 * EDI Hospital Code + "OU"
          REP       " A",KEY4
          MOVE      PTCNBTHN,FORM8          * Batch Number
          MOVE      FORM8,FORM4
          MOVE      ".txt",DIM4
          PACK      EXTFNAME,KEY4,FORM4,DIM4,SP10
          REP       " 0",EXTFNAME
.
          MOVE      ZERO,OVRCD              * open Extract file
          TRAP      OVERCOND IF IO
          OPEN      EXTFILE1,EXTFNAME
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      CREA0000 IF EQUAL       * File exists - create a new one
.
          PREP      EXTFILE1,EXTFNAME       * open the text file
.
          UNPACK    EXTFNAME,KEY2,DIM2,KEY4 
          PRINT     *N,*1,"Extract file name is - '",EXTFNAME,"'":
                    *N,*22,"(Hospital Code '",PTCNEDIH,"' + Out Pat. code ":
                    "'OP' + Batch No. '",KEY4,"' )"
          MATCH     KEY2,PTCNEDIH
          IF        !@EQUAL
            PRINT     "Hospital Code '",PTCNEDIH,"' is not valid ":
                      *N,"- please correct it in EDI Parameter Maintenance"
          ENDIF
.
CREA9999  RETURN
+
.******************************************************************************
.*                                  WRIT0000              Called by: ML0000   *
.*                             Write To The Files                             *
.******************************************************************************
WRIT0000  MOVE      ZERO,EXIT
          MOVE      "2",PASSNUMB            * Pass "2" - Write extract    
          MOVE      ZEROVISN,SAVADMIN       * Clear the save admin no
          MOVE      ZERO,RECSWRIT           * Clear the write counter
          DISPLAY   *P1:18,*EF,*P1:24,"Writing : ";
.
          CALL      WTHD0000                * Write header details
.
          PACK      KEY16,SP20
          CALL      RSTEMP2                 * Position on & read a tempfile
WRIT1000  CALL      RKTEMP2                   record
          BRANCH    OVRCD,WRIT8000
.
          BRANCH    TMFERFLG,WRIT1000       * Error record found, read next
.
          ADD       ONE,RECSWRIT
.
          CALL      GPTD0000                * Get patient details
          BRANCH    EXIT,WRIT1000
.
          CALL      WTIN0000                * Write invoice details
          CALL      WTIT0000                * Write item details
.
          MOVE      ONE,PTINEDSF            * EDI sent flag - sent
..MLMLML. CALL      UPINV1                  * Update an invoice file record
.
          BRANCH    CAUDF,WRIT2000          * Not using EDI audit flag
.
          PACK      KEY8,PINVNO
          CALL      RAPTEDA1                * check for EDI audit file record
          COMPARE   ONE,OVRCD
          GOTO      WRIT2000 IF NOT EQUAL   * Record exists
.
          MOVE      PINVNO,PTEDINVN
          MOVE      CURRDATE,PTEDDECM
          MOVE      CTIMEIS,PTEDTECM
          MOVE      PASSCODE,PTEDOPRR
          MOVE      PTINEDSF,PTEDEDSF
          MOVE      PTCNBTHN,PTEDBTHN
          MOVE      ONE,PTEDEETP
          MOVE      SP70,PTEDSPR1
.
          PACK      KEY8,PTEDINVN
          CALL      WRPTEDA1                * Write an EDI audit file record
.
WRIT2000  PACK      KEY16,PTCNBTHN,PINVNO
          CALL      RAPTEBI1                * Read an EDI batch inv file record
          COMPARE   ONE,OVRCD
          GOTO      WRIT1000 IF NOT EQUAL   * Record exists
.
          MOVE      PTCNBTHN,PTEIBTHN
          MOVE      PINVNO,PTEIINVN
          MOVE      SP70,PTEISPAR
.
          PACK      KEY16,PTEIBTHN,PTEIINVN
          CALL      WRPTEBI1                * Write an EDI batch inv file record
          GOTO      WRIT1000
.
WRIT8000  CALL      WTTL0000                * Write trailer details
.
          MOVE      PTCNBTHN,PTEHBTHN
          MOVE      "TAC   ",PTEHHFGP
          MOVE      STRTDTE8,PTEHSTDT
          MOVE      ENDDTE8,PTEHEDDT
          MOVE      BCHTAMNT,PTEHBHTL
          MOVE      RECSWRIT,PTEHTRIB
          MOVE      CURRDATE,PTEHDTBC
          MOVE      CTIMEIS,PTEHTMBC
          MOVE      PASSCODE,PTEHOPER
          MOVE      TWO,PTEHEETP            * "2" = TAC Outpatients
          PACK      PTEHEFNAM,EXTFNAME      * Extract File name (incl '.txt')
          MOVE      SP70,PTEHSPAR
.
          PACK      KEY8,PTEHBTHN
          CALL      RAPTEBH1                * Read an EDI batch header file rec
          COMPARE   ONE,OVRCD
          CALL      WRPTEBH1 IF EQUAL       * Write an EDI batch header file rec
.
          DISPLAY   *P1:18,*EF,"Total records read      : ",RECSREAD:
                    *P1:19,"Total records extracted : ",*V2LON,RECSWRIT,*HOFF:
                    *P1:21,"Extract filename : ",*V2LON,EXTFNAME,*HOFF:
                    *P1:22,"Batch number     : ",*V2LON,PTEHBTHN,*HOFF:
                    *P1:24,*B,"Extract finished.  ";
.
          PRINT     *N,*1,"This Extract contains",BCHINVCT:
                    " Invoices     with a Total value of $",BCHTAMNT:
                    *N,"*** End of Report ***"
.                    
.
WRIT9999  RETURN
+
.******************************************************************************
.*                                  TAIL0000              Called by: ML0000   *
.*                              Print Report Tail                             *
.******************************************************************************
TAIL0000  MOVE      ZERO,EXIT
          COMPARE   "50",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line counter >= 50 lines
.
TAIL1000  CALL      UND80
          PRINT     *N,*1,"Total Records Read        : ",RECSREAD:
                    *N,*1,"Total Number of Errors    : ",RECSERR:
                    *N,*1,"Total Number of Warnings  : ",RECSWARN:
                    *N,*N,*1,"Total Records Extracted   : ",RECSWRIT
.
TAIL9999  RETURN
+
.******************************************************************************
.*                                  GTPT0000              Called by: LOAD0000 *
.*                              Get TAC Patients                              *
.******************************************************************************
GTPT0000  MOVE      ZERO,EXIT
          MOVE      ZERO,NOTACITM
          COMPARE   ZERO,PINVAMT
          GOTO      GTPT9500 IF EQUAL     * Zero total, ignore invoice
.
          MATCH     SP3,CLMTYPE
          GOTO      GTPT1000 IF EQUAL       * Getting all TAC claims
.
          MATCH     CLMTYPE,PINVCLM
          GOTO      GTPT9500 IF NOT EQUAL   * Different claim type
.
GTPT1000  PACK      KEY5,ANSC,ANSL,PINVCLM
          CALL      RDCODE1                 * Read a codes file record
          BRANCH    OVRCD,GTPT9500
.
          MOVE      ZERO,FORM1
          REPEAT
            ADD       ONE,FORM1
            LOAD      KEY1,FORM1,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
            MATCH     "M",KEY1
            GOTO      GTPT3000 IF EQUAL       * TAC claim type
          UNTIL     FORM1 > 4
          GOTO      GTPT9500
.
.
.                                           * check Items for a TAC Item
GTPT3000  PACK      KEY31,PINVADM,PINVNO,SP30
          CALL      RDSDTRO3                * Position on & read an O/P DTR
GTPT5000  CALL      RDKDTRO3                  file record
          BRANCH    OVRCD,GTPT9500
.
          MATCH     PINVADM,OTNUMB
          GOTO      GTPT9500 IF NOT EQUAL   * Different admin no
.
          MATCH     PINVNO,OTINVNO
          GOTO      GTPT9500 IF NOT EQUAL   * Different invoice no
.
          COMPARE   ONE,OTRECTYP
          GOTO      GTPT9500 IF NOT EQUAL   * Different record type
.
          COMPARE   ZERO,OTPATAMT
          GOTO      GTPT5000 IF EQUAL       * Zero total amount ignore
.
          CALL      GOIT0000                * Get the outpatient item types
          BRANCH    EXIT,GTPT5000
.
          GOTO      GTPT9999
.
.
GTPT9500  MOVE      ONE,EXIT
          MOVE      ONE,NOTACITM
.
GTPT9999  RETURN
+
.******************************************************************************
.*                                  GOIT0000              Called by: GTPT0000 *
.*                        Get The Outpatient Item Types                       *
.******************************************************************************
GOIT0000  MOVE      ZERO,EXIT    
          MOVE      SP1,PTMCTACT
.
          PACK      SVKEY26,OBACOMP,OTBBFUND,OTBBTBLE,OTITEMNO,SP30
          CALL      RDMCH000
          COMPARE   ZERO,EXIT
          GOTO      GOIT2000 IF EQUAL       * Record exists
.
          PACK      SVKEY26,OBACOMP,SP6,SP8,OTITEMNO,SP30
          CALL      RDMCH000
          COMPARE   ZERO,EXIT
          GOTO      GOIT2000 IF EQUAL       * Record exists
.
          PACK      SVKEY26,ZERO,SP2,SP6,SP8,OTITEMNO,SP30
          CALL      RDMCH000
          BRANCH    EXIT,GOIT9500           * error, record does no exist
.
GOIT2000  MOVE      PTMCTACT,TACITMTP
          MOVE      TACITMTP,KEY1
          MOVE      ZERO,FORM1
          REP       "A1T1M1P2",KEY1
          MOVE      KEY1,FORM1
.
          BRANCH    FORM1,GOIT9000,GOIT9400 * test "A", "M", "T" & "P"
          GOTO      GOIT9500                * everything else
.
GOIT9000  MOVE      ZERO,EXIT
          GOTO      GOIT9999
.
GOIT9400  MOVE      "Paramedical items no longer accepted",ERRMSG
          CALL      EMSG0000            * Print an error message
.
GOIT9500  MOVE      ONE,EXIT
.
GOIT9999  RETURN
+
.******************************************************************************
.*                                  RDMCH000              Called by: GOIT0000 *
.*                     Read Misc.Items for a TAC type              & GTID0000 *
.******************************************************************************
RDMCH000  MOVE      ZERO,EXIT
          MOVE      ZERO,OVRCD
          PACK      KEY34,SVKEY26,CURRDATE
          CALL      RDMCHG1                 * Read the miscell charge file
          IF        OVRCD=0
            MATCH     "1",PTMCACTV          * Inactive?
            GOTO      RDMCH999 IF NOT EQUAL * Record exists
          ENDIF
.
          CALL      RDSMCHG1                * position on key26 + Date
          CALL      RDPMCHG1                * find latest effective date
          PACK      KEY26,MCLMCOD,MHFUND,PTMCHFTT,MCHARGE,SP30
          MATCH     KEY26,SVKEY26
          GOTO      RDMCH100 IF NOT EQUAL
.
          MATCH     "1",PTMCACTV            * Inactive?
          GOTO      RDMCH999 IF NOT EQUAL   * Record exists
.
RDMCH100  MOVE      ONE,EXIT                * record does not exist
.
RDMCH999  RETURN
.
.******************************************************************************
.*                                  WTHD0000              Called by: VALD0000 *
.*                            Write Header Details                 & WRIT0000 *
.******************************************************************************
WTHD0000  MOVE      TACHEAD,XXHDHEAD        * set up Header literals
          MOVE      TACTAXT,XXHDTAXT
          MOVE      TACTNAM,XXHDTNAM
          MOVE      TACABN,XXHDTABN
          MOVE      TACADD,XXHDTADD
.
          MOVE      PTCNBTHN,KEY8           * Batch Number
          PACK      KEY11,SP3,KEY8
....      SQUEEZE   KEY11
          REP       " 0",KEY11
          PACK      XXHDREFN,KEY11,SP20
.                                           * generate Extract Date/Time info
          CALL      IBACLOCK                * Get current date & time
.....     PACK      XXHDDATE,CCC,CYY,CMM,CDD
          PACK      XXHDDATE,CDD,CMM,CCC,CYY
          REP       " 0",XXHDDATE

          UNPACK    CTIMEIS,CHOUR,KEY1,CMIN,KEY1,KEY2
          PACK      XXHDTIME,CHOUR,CMIN,KEY2
          REP       " 0",XXHDTIME
.
...       MOVE      BCHINVCT,XXHDINVC       * Invoice count
          MOVE      BCHITMCT,KEY4           * Item count (right aligned)
          SQUEEZE   KEY4
          PACK      XXHDINVC,KEY4,SP4       * Item count (left aligned)
.
          PACK      XXHDHNAM,CNAME,SP30     * Hospital Name
          PACK      XXHDPNUM,PTCNTACP,SP10  * Hospital's Provider Number
          PACK      XXHDHABN,IBCNABNN,SP10  * Hospital's ABN
.
          IF        PASSNUMB = 2
            WRITE     EXTFILE1,SEQ;XXHDHEAD,XXHDINVC,XXHDDATE,XXHDTIME:
                                   XXHDTAXT,XXHDREFN,XXHDHNAM,XXHDHABN:
                                   XXHDTNAM,XXHDTABN,XXHDTADD,XXHDPNUM
          ENDIF
.
WTHD9000  MOVE      ONE,EXIT
.
WTHD9999  RETURN
+
.******************************************************************************
.*                                  GPTD0000              Called by: VALD0000 *
.*                             Get Patient Details                 & WRIT0000 *
.******************************************************************************
GPTD0000  MOVE      ZERO,EXIT
.
          PACK      KEY8,TMPINVNO
          CALL      RDTEMP1                 * Direct Read the tempfile record
.
          PACK      KEY8,TMPINVNO
          CALL      RDINV1                  * Read an invoice file record
          IF        OVRCD = 1
            MOVE      "Missing invoice file record",ERRMSG
            CALL      EMSG0000            * Print an error message
            GOTO      GPTD9500
          ENDIF
.
          MATCH     SAVADMIN,TMFADMNO
          GOTO      GPTD9999 IF EQUAL       * Same admin no, dont get details
.
          PACK      KEY8,PINVUR
          CALL      RDMAST1                 * Read a master file record
          IF        OVRCD = 1
            MOVE      "Missing master file record",ERRMSG
            CALL      EMSG0000            * Print an error message
            GOTO      GPTD9500
          ENDIF
.
.
GPTD1000  PACK      KEY6,PINVSITE
          CALL      RDSITA1                 * Read the O/P site file
          IF        OVRCD = 1
            MOVE      "Missing O/P site file record",ERRMSG
            CALL      EMSG0000            * Print an error message
            GOTO      GPTD9500
          ENDIF
.
          MATCH     OSTFILE,CFILEPRE        * Save Current File Prefix
          IF        !@EQUAL
            MOVE      OSTFILE,CFILEPRE
            CALL      OPNOUT00              * Open all relevent "out" files
          ENDIF
.
          PACK      KEY8,TMFADMNO
          CALL      RDBOKB1                 * Read a booking B file record
          IF        OVRCD = 1
            MOVE      "Missing O/P booking B file record",ERRMSG
            CALL      EMSG0000            * Print an error message
            GOTO      GPTD9500
          ENDIF
.
          MOVE      OBADATE,SOBADATE
          MOVE      OBAOUTNO,SOBAOUTN
          PACK      KEY36,PURNO,OBADATE,SP70
          CALL      RDSBOKA3                * Position on & booking A file
GPTD2000  CALL      RDKBOKA3                  record
          BRANCH    OVRCD,GPTD3000
.
          MATCH     PURNO,OBAURNO
          GOTO      GPTD3000 IF NOT EQUAL   * Different U/R no
.
          MATCH     SOBADATE,OBADATE
          GOTO      GPTD3000 IF NOT EQUAL   * Different booking date
.
          MATCH     SOBAOUTN,OBAOUTNO
          GOTO      GPTD2000 IF NOT EQUAL   * Different admin no
          GOTO      GPTD4000
.
GPTD3000  CALL      CLBA0000                * Clear booking A file variables
.
GPTD4000  PACK      KEY31,TMFADMNO,SP30
          CALL      RDSDTRO3                * Position on & read an O/P DTR
          CALL      RDKDTRO3                  file record
          BRANCH    OVRCD,GPTD4200
.
          MATCH     TMFADMNO,OTNUMB
          GOTO      GPTD6000 IF EQUAL
.
GPTD4200  MOVE      "Missing O/P DTR file record",ERRMSG
          CALL      EMSG0000            * Print an error message
          GOTO      GPTD9500
.
GPTD6000  MOVE      TMFADMNO,SAVADMIN         * Save the admin no
          GOTO      GPTD9999
.
GPTD9500  MOVE      ONE,EXIT
          MOVE      "1",ERRORFLG
.
GPTD9999  RETURN
+
.******************************************************************************
.*                                  WTTX0000              Called by: VALD0000 *
.*                         Write Taxi Voucher Details              & WRIT0000 *
.*                ---- this routine is no longer active ----                  *
.******************************************************************************
..WTTX0000  MOVE      SP1,KEY1
..          PACK      KEY31,TMFADMNO,PINVNO,ONE,SP30
..          CALL      RDSDTRO3              * Position on an O/P DTR file record
...
..WTTX1000  MOVE      SP1,KEY1
..          CALL      RDKDTRO3              * Read an O/P DTR file record
..          BRANCH    OVRCD,WTTX9000
...
..          MATCH     TMFADMNO,OTNUMB
..          GOTO      WTTX9000 IF NOT EQUAL * Different admin no
...
..          MATCH     PINVNO,OTINVNO
..          GOTO      WTTX9000 IF NOT EQUAL * Different invoice no
...
..          COMPARE   ONE,OTRECTYP
..          GOTO      WTTX9000 IF NOT EQUAL * Different record type
...
..          COMPARE   ZERO,OTPATAMT
..          GOTO      WTTX1000 IF EQUAL     * Zero total amount ignore
...
..          UNPACK    SP20,PTHFBCAT         * change "H/F Table" to "Table Type"
..          PACK      KEY14,OTBBFUND,OTBBTBLE,SP20
..          CALL      RDFUND1               * "Table Type code" now in PTHFBCAT
...
... ----- Get the taxi voucher item type -----
...
..          MOVE      SP1,TACITMTP
..          PACK      KEY29,OTBBFUND,OTBBTBLE,PTHFBCAT,OTITEMNO,CURRDATE,SP10
..          CALL      PATMCHRD                * read Misc.Charges file
..          COMPARE   ZERO,EXIT
..          GOTO      WTTX2000 IF EQUAL
...
..WTTX2000  PACK      KEY29,OTBBFUND,SP6,SP3,OTITEMNO,CURRDATE,SP10
..          CALL      PATMCHRD                * read Misc.Charges file
..          COMPARE   ZERO,EXIT
..          GOTO      WTTX2000 IF EQUAL
...
..WTTX3000  PACK      KEY29,PTCNDCLM,SP6,SP3,OTITEMNO,CURRDATE,SP10
..          CALL      PATMCHRD                * read Misc.Charges file
..          COMPARE   ONE,EXIT
..          GOTO      WTTX1000 IF EQUAL
...
..WTTX2000  MOVE      PTMCTACT,TACITMTP       * TAC item type
......      MATCH     "I",TACITMTP
......      GOTO      WTTX1000 IF EQUAL       * Invalid TAC item type, ignore
...
..          MOVE      ZERO,FORM1
..          MOVE      TACITMTP,KEY1
..          REP       "A1T1M1",KEY1
..          MOVE      KEY1,FORM1
..          BRANCH    FORM1,WTTX5000
...
..          CLEAR     ERRMSG
..          APPEND    "TX - Invalid TAC item type for item ",ERRMSG
..          APPEND    MCHARGE,ERRMSG
..          APPEND    SP70,ERRMSG
..          RESET     ERRMSG
..          CALL      EMSG0000                * Print an error message
..          GOTO      WTTX1000
...
..WTTX5000  MOVE      SP1,KEY1
..          CALL      SMIS0000                * Setup multiple item stuff
...
..WTTX6000  CALL      GITA0000                * Get the item amount
..          BRANCH    PASSNUMB,WTTX7000
...
..          MOVE      "TX",KEY2
..          MOVE      OTDDATE,KEY8
..          WRITE     EXTFILE1,SEQ;KEY2,KEY8,PTMCTACT;
...
..          ASSIGN    OPITMTL+GSTAMNT,FORM12P2
..          MOVE      FORM12P2,FORM7P2
..          MOVE      FORM7P2,KEY10
..          UNPACK    KEY10,KEY7,KEY1,KEY2
..          PACK      KEY9,KEY7,KEY2
..          REP       " 0",KEY9
..          WRITE     EXTFILE1,SEQ;KEY9;
...
..          MOVE      SP9,KEY9
..          IF        GSTAMNT<>0
..            PACK      KEY9,ANSY,SP8
..          ENDIF
..          WRITE     EXTFILE1,SEQ;KEY9
...
..WTTX7000  MOVE      SP1,KEY1
..          ADD       ONE,NOOFSERV            * Increment no of services
..          COMPARE   MXNOFSRV,NOOFSERV
..          GOTO      WTTX6000 IF LESS        * No of services < max no of serv
..          GOTO      WTTX1000
...
..WTTX9000  MOVE      ZERO,EXIT
..WTTX9999  RETURN
+
.******************************************************************************
.*                                  WTME0000              Called by: VALD0000 *
.*                            Write Medical Details                & WRIT0000 *
.*                ---- this routine is no longer active ----                  *
.******************************************************************************
..WTME0000  PACK      KEY31,TMFADMNO,PINVNO,ONE,SP30
..          CALL      RDSDTRO3                * Position on & read an O/P DTR
..WTME1000  CALL      RDKDTRO3                  file record
..          BRANCH    OVRCD,WTME9000
...
..          MATCH     TMFADMNO,OTNUMB
..          GOTO      WTME9000 IF NOT EQUAL   * Different admin no
...
..          MATCH     PINVNO,OTINVNO
..          GOTO      WTME9000 IF NOT EQUAL   * Different invoice no
...
..          COMPARE   ONE,OTRECTYP
..          GOTO      WTME9000 IF NOT EQUAL   * Different record type
...
..          COMPARE   ZERO,OTPATAMT
..          GOTO      WTME1000 IF EQUAL       * Zero total amount ignore
...
..          MOVE      SP1,CKYIDEF1            * Item type - medical
..          CALL      GTID0000                * Get the TAC item type & duration
..          BRANCH    EXIT,WTME1000
...
..          CALL      SMIS0000                * Setup multiple item stuff
...
..WTME2000  CALL      GITA0000                * Get the item amount
..          BRANCH    PASSNUMB,WTME3000
...
..          MOVE      "ME",KEY2
..          MOVE      OTDDATE,KEY8
..          WRITE     EXTFILE1,SEQ;KEY2,KEY8;
...
..WTME3000  IF        NOOFSERV=0
..            CALL      GPRO0000              * Get the provider number
..          ENDIF
..          BRANCH    PASSNUMB,WTME4000
...
..          PACK      KEY20,PINVNO,SP20
..          SQUEEZE   KEY20
..          PACK      KEY20,KEY20,SP20
..          MOVE      STRTTIME,KEY4
..          MOVE      "E",KEY1
..          MOVE      OTITEMNO,KEY6
...
..          ASSIGN    OPITMTL+GSTAMNT,FORM12P2
..          MOVE      FORM12P2,FORM7P2
..          MOVE      FORM7P2,KEY10
..          UNPACK    KEY10,KEY7,DIM1,KEY2
..          PACK      KEY9,KEY7,KEY2
..          REP       " 0",KEY9
..          WRITE     EXTFILE1,SEQ;PROVNO,KEY20,KEY4,KEY1,TACITMTP:
..                               KEY6,KEY9;
...
..          MOVE      SP9,KEY9
..          IF        GSTAMNT<>0
..            PACK      KEY9,ANSY,SP8
..          ENDIF
..          WRITE     EXTFILE1,SEQ;KEY9
...
..          CALL      INTM0000                * Increment start time
..WTME4000  ADD       ONE,NOOFSERV              * Increment no of services
..          COMPARE   MXNOFSRV,NOOFSERV
..          GOTO      WTME2000 IF LESS        * No of services < max no of serv
..          GOTO      WTME1000
...
..WTME9000  MOVE      ZERO,EXIT
..WTME9999  RETURN
+
.******************************************************************************
.*                                  WTIN0000              Called by: VALD0000 *
.*                       Write Outpatient Invoice Section          & WRIT0000 *
.******************************************************************************
WTIN0000  MOVE      ZERO,EXIT
.                                           * set up Patient literals
          MOVE      TACTINT,XXPATINT
.
...       PACK      KEY9,PINVNO,SP10        * set up Invoice No.
...       SQUEEZE   KEY9
          MOVE      PINVNO,F9
          MOVE      F9,KEY9                 * right allign
          PACK      XXPAINVN,KEY9,SP10
.
.                                           * set up Invoice Date
          UNPACK    PINVDTE,CCENT,CYEAR,CMON,CDAY
          PACK      XXPAINDT,CDAY,CMON,CCENT,CYEAR
.
          PACK      KEY30,PGNAME,SP70       * set up Patient Name
WTIN1000  BUMP      KEY30
          CMATCH    SP1,KEY30
          GOTO      WTIN1000 IF NOT EQUAL
          LENSET    KEY30
          BUMP      KEY30,-1
          APPEND    ", ",KEY30
          APPEND    PSNAME,KEY30
          RESET     KEY30
          PACK      XXPANAMR,KEY30,SP70
          UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
          PACK      XXPAPBDT,CDAY,CMON,CCENT,CYEAR
.
.                                           * set up Claim No.
WTIN2000  UNPACK    SP30,MREFNO,MACDAT
          PACK      KEY8,TMFADMNO
          CALL      RDWMAB1                 * Read a TAC file record
          IF        OVRCD=1
            MOVE      "Patient missing motor accident details",ERRMSG
            CALL      EMSG0000              * Print an error message
            GOTO      WTIN4000
          ENDIF
.
WTIN2500  UNPACK    MREFNO,KEY2,KEY1,KEY5,KEY12
          REP       "-/./ /",KEY1
          MATCH     "/",KEY1
          IF        !@EQUAL
            PACK      CKYIDEF5,KEY1,KEY5
            MOVE      "/",KEY1
            MOVE      CKYIDEF5,KEY5
          ENDIF
.
          PACK      MREFNO,KEY2,KEY1,KEY5   * Reformatting the motor accident no
.
          TYPE      KEY2
          GOTO      WTIN3000 IF NOT EQUAL   * Not numeric
.
          TYPE      KEY5
          GOTO      WTIN4000 IF EQUAL       * Numeric, continue on
.
WTIN3000  MOVE  "Warning: Incorrect format on motor accident ref number",ERRMSG
          CALL      WMSG0000                * Print a warning message
.
WTIN4000  PACK      XXPACLMN,MREFNO,SP10
.                                           * write Patient Record
          IF        PASSNUMB = 2
            WRITE     EXTFILE1,SEQ;XXPATINT,XXPAINVN,XXPAINDT,XXPANAMR:
                                   XXPACLMN,XXPAPBDT
          ENDIF
.
WTIN9999  RETURN
+
.******************************************************************************
.*                                  WTIT0000              Called by: VALD0000 *
.*                       Write Outpatient Item Section             & WRIT0000 *
.******************************************************************************
WTIT0000  MOVE      ZERO,EXIT
.                                           * setup Item Literals
          MOVE      TACITEM,XXITITEM
          MOVE      ZERO,ITEMCONT
.
          PACK      KEY31,TMFADMNO,PINVNO,ONE,SP30
          CALL      RDSDTRO3                * Position on & read an O/P DTR
WTIT1000  CALL      RDKDTRO3                  file record
          BRANCH    OVRCD,WTIT9000
.         
          MATCH     TMFADMNO,OTNUMB
          GOTO      WTIT9000 IF NOT EQUAL   * Different admin no
.
          MATCH     PINVNO,OTINVNO
          GOTO      WTIT9000 IF NOT EQUAL   * Different invoice no
.
          COMPARE   ONE,OTRECTYP
          GOTO      WTIT9000 IF NOT EQUAL   * Different record type
.
          COMPARE   ZERO,OTPATAMT
          GOTO      WTIT1000 IF EQUAL       * Zero total amount ignore
.
....      MOVE      "P",CKYIDEF1            * Item type - paramedical
          CALL      GTID0000                * Get the TAC item type & duration
          BRANCH    EXIT,WTIT1000
.
          CALL      SMIS0000                * Setup multiple item stuff
.
WTIT2000  CALL      GITA0000                * Get the item amount
.
          MOVE      DOTTRANS,KEY9
          SQUEEZE   KEY9
          PACK      XXITREFN,KEY9,SP9
.
          PACK      XXITNUMB,OTITEMNO,SP10
          UNPACK    OTDDATE,CCENT,CYEAR,CMON,CDAY
          PACK      XXITSDAT,CDAY,CMON,CCENT,CYEAR
.
          ASSIGN    (OPITMTL + GSTAMNT),FORM12P2
          MULT      "100",FORM12P2
          MOVE      FORM12P2,FORM8
          MOVE      FORM8,KEY8
          REP       " 0",KEY8
          MOVE      KEY8,XXITAMNT
.
          MOVE      TACTAXA,XXITTAXA
.
          IF        PASSNUMB = 2
.                                           * write the Item Record
            WRITE     EXTFILE1,SEQ;XXITITEM,XXITREFN,XXITNUMB,XXITSDAT:
                                   XXITAMNT,XXITTAXA
          ENDIF
          ADD       ONE,ITEMCONT
.
WTIT4000  ADD       ONE,NOOFSERV            * Increment no of services
          COMPARE   MXNOFSRV,NOOFSERV
          GOTO      WTIT2000 IF LESS        * No of services < max no of serv
          GOTO      WTIT1000
.
WTIT9000  MOVE      ZERO,EXIT
WTIT9999  RETURN
+
.******************************************************************************
.*                                  WTTL0000              Called by: VALD0000 *
.*                            Write Trailer Details                & WRIT0000 *
.******************************************************************************
WTTL0000  MOVE      ZERO,EXIT
.
          COMPARE   "2",PASSNUMB            * is it output Pass ?
          GOTO      WTTL9999 IF NOT EQUAL   * no, bypass
.
.                                           * set up Trailer Literals
          MOVE      TACAILR,XXTRAILR
          MOVE      TACGSTS,XXTRGSTS
.
          MOVE      BCHTAMNT,FORM10P2
          MOVE      FORM10P2,KEY13
          UNPACK    KEY13,KEY10,KEY1,KEY2
          PACK      XXTRBTOT,KEY10,KEY2
          REP       " 0",XXTRBTOT
.                                           * write the Trailer Record
          WRITE     EXTFILE1,SEQ;XXTRAILR,XXTRBTOT,XXTRGSTS
.
WTTL9999  RETURN
+
.******************************************************************************
.*                                  CLBA0000              Called by: GPTD0000 *
.*                       Clear Booking A File Variables                       *
.******************************************************************************
CLBA0000  UNPACK    SP70,OBASITE,OBACLIN,OBADATE,OBASTRT,OBATIME
          UNPACK    SP70,OBACTYP,OBAVISIT,DOBASTAT,OBAFINST,OBALOCK
          UNPACK    SP70,OBABKDTE,OBASESST,OBADISCH
          MOVE      ZERO,OBASLOT
          MOVE      ZEROVISN,OBAURNO
          MOVE      ZEROVISN,OBAOUTNO
          MOVE      ZERO,OBASTAT
          MOVE      ZERO,OBADAY
          MOVE      ZERO,OBAEXSL
          MOVE      ZERO,OBAPXRAY
          MOVE      ZERO,OBAPULL
          MOVE      ZERO,OTBARESV
.
CLBA9000  MOVE      ZERO,EXIT
CLBA9999  RETURN
+
.******************************************************************************
.*                                  GITA0000              Called by: Lots     *
.*                             Get The Item Amount                            *
.******************************************************************************
GITA0000  MOVE      ZERO,EXIT
          MOVE      ZERO,GSTAMNT
          MOVE      OPGSTTL,GSTAMNT         * Move O/P GST amount to GST amount
.
GITA3000  IF        PASSNUMB = 1
            ADD       OPITMTL,TMPINAMT      * Incrmt invoice amount 
            ADD       GSTAMNT,TMPGSTAM      * GST portion of rebate amount
          ENDIF
.
GITA9999  RETURN
+
.******************************************************************************
.*                                  GTID0000              Called by: WTME0000 *
.*                      Get The TAC Item Type & Duration           & WTIT0000 *
.******************************************************************************
GTID0000  MOVE      ZERO,TACDUR
          MOVE      SP1,TACITMTP
.
          UNPACK    SP20,PTHFBCAT           * change "H/F Table" to "Table Type"
          PACK      KEY14,OTBBFUND,OTBBTBLE,SP20
          CALL      RDFUND1                 * "Table Type code" now in PTHFBCAT
.
          PACK      KEY29,OBACOMP,OTBBFUND,PTHFBCAT,OTITEMNO,CURRDATE
          CALL      PATMCHRD
          COMPARE   ZERO,EXIT
          GOTO      GTID2000 IF EQUAL       * Record exists
.
          PACK      KEY29,OBACOMP,SP6,SP3,OTITEMNO,CURRDATE
          CALL      PATMCHRD
          COMPARE   ZERO,EXIT
          GOTO      GTID2000 IF EQUAL       * Record exists
.
          PACK      KEY29,PTCNDCLM,SP6,SP3,OTITEMNO,CURRDATE
          CALL      PATMCHRD
          BRANCH    EXIT,GTID9500           * not found - bypass
.
GTID2000  MOVE      PTMCTACT,TACITMTP       * TAC item type
          MOVE      ZERO,FORM1
          MOVE      PTMCTACT,KEY1
          REP       "A1T1M1",KEY1
          MOVE      KEY1,FORM1
          BRANCH    FORM1,GTID9000
.
GTID5000  IF        PASSNUMB = 1
            CLEAR     ERRMSG
            APPEND    "IT - Invalid TAC item type for item ",ERRMSG
            APPEND    OTITEMNO,ERRMSG
            APPEND    SP70,ERRMSG
            RESET     ERRMSG
            CALL      EMSG0000              * Print an error message
          ENDIF
          GOTO      GTID9500
.
.                                           * currently not used
GTID6000  MOVE      PTMCTACD,TACDUR
          IF        TACDUR=0
            MOVE      "  15",TACDUR         * Deflt TAC duration to 15 minutes
          ENDIF
.
GTID9000  MOVE      ZERO,EXIT
          GOTO      GTID9999
.
GTID9500  MOVE      ONE,EXIT
GTID9999  RETURN
+
.******************************************************************************
.*                                  SMIS0000              Called by: Lots     *
.*                          Setup Multiple Item Stuff                         *
.******************************************************************************
SMIS0000  MOVE      OTSERVS,MXNOFSRV        * Maximum no of services
          IF        MXNOFSRV = 0
            MOVE      ONE,MXNOFSRV          * Default maximum no of serv to 1
          ENDIF
          ASSIGN    OTPATAMT/MXNOFSRV,OPITMTL * O/P item total
          ASSIGN    OTDTGSTM/MXNOFSRV,OPGSTTL * O/P item GST total
          MOVE      ZERO,NOOFSERV           * No of services
.
SMIS9000  MOVE      ZERO,EXIT
SMIS9999  RETURN
+
.******************************************************************************
.*                                  KILL0000              Called by: ML0000   *
.*                             Delete The Tempfile                 & OPEN0000 *
.******************************************************************************
KILL0000  CLOSE     TEMP1
          CLOSE     TEMP2
.
          CLEAR     KEY99
          APPEND    "iserase ",KEY99
          APPEND    FNAMEA,KEY99
          RESET     KEY99
          EXECUTE   KEY99,TASKID
.
KILL9000  MOVE      ZERO,EXIT
KILL9999  RETURN
+
.******************************************************************************
.*                                  SEND0000                                  *
.*                   Use ".us1" script to move file to PC                     *
.******************************************************************************
SEND0000  MOVE      ZERO,EXIT   
.
.    set up Command Line as - "priweb02.us1 CSOUnnnn CSOUnnnn "
.
          CLEAR     CMDLINE
          APPEND    "priweb02.us1 ",CMDLINE
          APPEND    EXTFNAME,CMDLINE
          APPEND    SP1,CMDLINE                  * was ".txt "
          APPEND    EXTFNAME,CMDLINE
          APPEND    SP1,CMDLINE                  * was ".txt "
...       APPEND    USERID,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          DISPLAY   *P1:24,*EF,*W1;
          CALL      DISPHEAD                * Re-Display screen heading
.
SEND9999  RETURN
+
.******************************************************************************
.*                                  EMSG0000              Called by: Lots     *
.*                             Print Error Message                            *
.******************************************************************************
EMSG0000  COMPARE   "2",PASSNUMB
          GOTO      EMSG9000 IF EQUAL       * Not validating, writing details
.
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line counter >= 55 lines
.
          PACK      ERRMSG,ERRMSG,SP70
          PRINT     *1,"|",TMPINVNO,"|",TMFADMNO,"|",ERRMSG,"|"
          ADD       ONE,CLNO
.
          MOVE      ONE,ERRORFLG            * Error flag - yes
          MATCH     ERRINVNO,PINVNO
          IF        !@EQUAL
            ADD       ONE,RECSERR           * Increment the error counter
            MOVE      PINVNO,ERRINVNO
          ENDIF
.
EMSG9000  MOVE      ZERO,EXIT
EMSG9999  RETURN
+
.******************************************************************************
.*                                  WMSG0000              Called by: Lots     *
.*                            Print Warning Message                           *
.******************************************************************************
WMSG0000  COMPARE   "2",PASSNUMB
          GOTO      WMSG9000 IF EQUAL       * Not validating, writing details
.
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line counter >= 55 lines
.
          PACK      ERRMSG,ERRMSG,SP70
          PRINT     *1,"|",TMPINVNO,"|",TMFADMNO,"|",ERRMSG,"|"
          ADD       ONE,CLNO
.
          MATCH     WRNINVNO,PINVNO
          IF        !@EQUAL
            ADD       ONE,RECSWARN             * Increment the warning counter
            MOVE      PINVNO,WRNINVNO
          ENDIF
.
WMSG9000  MOVE      ZERO,EXIT
WMSG9999  RETURN
+
.************************************************************************
.                    Open Outpateint Files
.************************************************************************
OPNOUT00  PACK      CFNAME,CFILEPRE,FILBOKA3  * Get the name of the BOKA3 file
          CLOSE     OUTBOKA3
          OPEN      OUTBOKA3,CFNAME           * Open the file
.
          PACK      CFNAME,CFILEPRE,FILDTRO3
          CLOSE     OUTDTRO3
          OPEN      OUTDTRO3,CFNAME
.
          PACK      CFNAME,CFILEPRE,FILBB1A1  * Set up physical filename
          CLOSE     OUTBB1A1
          OPEN      OUTBB1A1,CFNAME
.
          RETURN
+
.******************************************************************************
.*                       I/O Routines For The Tempfile                        *
.******************************************************************************
RATEMP1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      TEMP1,KEY8;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      TEMP1,KEY8;TMPINVNO,TMPMEFLG,TMPTAXIF,TMPADMNO,TMPERFLG:
                                TMPINAMT,TMPGSTAM
          GOTO      OVERCOND IF OVER
          MOVE      TMPMEFLG,TMFMEFLG
          MOVE      TMPTAXIF,TMFTAXIF
          MOVE      TMPADMNO,TMFADMNO
          MOVE      TMPERFLG,TMFERFLG
          RETURN
.
UPTEMP1   MOVE      TMFMEFLG,TMPMEFLG
          MOVE      TMFTAXIF,TMPTAXIF
          MOVE      TMFADMNO,TMPADMNO
          MOVE      TMFERFLG,TMPERFLG
          UPDATE    TEMP1;TMPINVNO,TMPMEFLG,TMPTAXIF,TMPADMNO,TMPERFLG:
                          TMPINAMT,TMPGSTAM
          RETURN
.
WRTEMP1   RESET     KEY8
          MOVE      TMFMEFLG,TMPMEFLG
          MOVE      TMFTAXIF,TMPTAXIF
          MOVE      TMFADMNO,TMPADMNO
          MOVE      TMFERFLG,TMPERFLG
          WRITE     TEMP1,KEY8;TMPINVNO,TMPMEFLG,TMPTAXIF,TMPADMNO,TMPERFLG:
                                TMPINAMT,TMPGSTAM
          RETURN
.
RSTEMP2   RESET     KEY16
          READ      TEMP2,KEY16;;
          RETURN
.
RKTEMP2   MOVE      ZERO,OVRCD
          READKS    TEMP2;TMPINVNO,TMPMEFLG,TMPTAXIF,TMPADMNO,TMPERFLG:
                          TMPINAMT,TMPGSTAM
          GOTO      OVERCOND IF OVER
          MOVE      TMPMEFLG,TMFMEFLG
          MOVE      TMPTAXIF,TMFTAXIF
          MOVE      TMPADMNO,TMFADMNO
          MOVE      TMPERFLG,TMFERFLG
          RETURN
+
.==============================================================================
.
          INC       STD001IO
.
          INC       PATCODKY                * Keyin a codes file code
          INC       PATMCHRD                * Miscellaneous Charges read routine
          INC       TFILENAM                     * Generate Temp File Name
.
          INC       IBAGEDIO/INC            * GST rate file
          INC       IBASEQIO/INC                 * Sequential Numbers File
          INC       OUTBOAIO/INC            * O/P booking A file
          INC       OUTBB1IO/INC            * O/P booking B file
          INC       OUTCLIIO/INC            * O/P clinic file
          INC       OUTDTRIO/INC            * O/P DTR file
          INC       OUTSITIO/INC            * O/P site file
          INC       PATCODIO/INC            * Codes file
          INC       PATDO1IO/INC            * Doctor file
          INC       PATEBHIO/INC            * EDI batch header file
          INC       PATEBIIO/INC            * EDI batch invoice file
          INC       PATEDAIO/INC            * EDI audit file
          INC       PATFN1IO/INC
          INC       PATINVIO/INC            * Invoice file
          INC       PATMA1IO/INC            * Master file
          INC       PATMCHIO/INC            * Miscellaneous charges file
          INC       PATWMAIO/INC            * TAC file
          INC       WEBERRIO/INC                 * Web Server Error Logging
+
