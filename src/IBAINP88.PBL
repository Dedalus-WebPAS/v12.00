.******************************************************************************
.*                                                                            *
.*                        P R O G R A M   S U M M A R Y                       *
.*                        -------------   -------------                       *
.*                                                                            *
.*     PROGRAM NAME  :   IBAINP88                                             *
.*                                                                            *
.*     FUNCTION      :   MBS PROCEDURE REPORTS WITH PRINCIPAL ONLY            *
.*                                                                            *
.*     DATE WRITTEN  :   12/05/1994                                           *
.*                                                                            *
.*     AUTHOR        :   Jeni Tan                                             *
.*                                                                            *
.*     MODIFICATIONS :                                                        *
.*                                                                            *
.******************************************************************************
.* V12.00.01 28/05/2025 Thanh T         TSK 0955096                           *
.*           Changed for alphanumeric visit number                            *
.******************************************************************************
.* V11.01.01 22/02/2021  Tracey Nguyen  TSK 0888639                           *
.*           FD changed - patmmbsf.PATMMBS1 from KEY10 to KEY11               *
.******************************************************************************
.* V11.00.01 11/03/2020  J.Tan          TSK 0838262                           *
.*           Added Effective from and to date to MBS Item file                *
.* V10.04.01  15/06/2014 Jill Parkinson CAR 301639                            *
.*            Moved TFILENAM to INIT0000                                      *
.* V10.03.01  28/12/2012 Patrick Adair                             CAR 261630 *
.*                       Removed port number from temp file name              *
.*        V10.00.01 30/04/2010  J.Tan     CAR 220887                          *
.*                  Mods checking for Active/Inactive of Misc.charge          *
.*        V9.07.00  03/08/2006  Steve Armstrong   CAR 114667                  *
.*                  Ported from V6.14                                         *
.******************************************************************************
.*        V6.09.B01 11/12/2000  Caleb Sharman                                 *
.*                  Mods to use keyin routine for Claim Code                  * 
.*        V6.07.02  22/11/2000  Ebon Clements                                 *
.*                  Fix re-display of screen after mbs item ? routine         *
.*        V6.07.01  21/11/2000  Ebon Clements SRF 6253                        *
.*                  Read patmchgf file for the misc charges descriptions.     *
.*                  Read with zero claim code, blank h/fund and table         *
.*        V6.06.01  10/02/1999  Jill Habasque                                 *
.*                  Fixed DISPHEAD display                                    *
.*        V6.05.04  11/12/1998  Nicole Harrington                             *
.*                  Added End of Report message                               *
.*        V6.05.03  08/12/1998  Nicole Harrington                             *
.*                  Removed CCENTRY                                           *
.*        V6.05.02   04/10/1998  Jill Habasque                                *
.*                   Added ? searches for Health Fund & MBS Items             *
.*        V6.05.01   29/10/1998  Jill Habasque                                *
.*                   Changed to display century                               *
.*        V6.01.00 12/05/94 J.Tan    SRF 127023                               *
.*                                Copy from IBAHOS88 and add option four      *
.*        V6.03.01  11/10/1995  Greg Horvat      SRF 611811                   *
.*                  Changed to use CALCDAYS instead of CALC when calculating  *
.*                  the difference between two dates                          *
.*        V6.03.02  27/10/1995  Greg Horvat      SRF 612064 612205 612206     *
.*                  Recompiled for changes to NHOSPDAY                        *
.*                                                                            *
.******************************************************************************
.
          INC       STD001FD
.
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATDSCFD/INC
          INC       PATDTRFD/INC
          INC       PATFN1FD/INC
          INC       PATITMFD/INC
          INC       PATMA1FD/INC
          INC       PATMI1FD/INC
          INC       PATTFEFD/INC
          INC       PATTRNFD/INC
          INC       PATMMBFD/INC
          INC       PATMCHFD/INC
          INC       PMSVX1FD/INC
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
+
.
.         Temporary file definitions
.
WORK      IFILE     SQL, FIXED=101, KEY="u1-28"
.
.NAME     TYPE   LENGTH   PHYSICAL  START LOC.    DESCRIPTION
.----     ----   ------   --------  ----------    -----------
XMBS      DIM       9         9         1         MBS Item number
XMBSORD   DIM       2         2         10        Order of MBS Code
XAGEGRP   DIM       2         2         12        Age grouping (eg 0-10, 11-20)
XCOMP     DIM       1         1         14        Compensable flag
.                                                 0=Not Compensable, 1=Comp.
XCODE     DIM       6         6         15        H.F. Code or Claim code
XTABLE    DIM       8         8         21        H.F. Table or Blank
XVAR00    FORM      5         4         29        Total 00 (Day Case)
XVAR01    FORM      5         4         33        Total 01
XVAR02    FORM      5         4         37        Total 02
XVAR03    FORM      5         4         41        Total 03
XVAR04    FORM      5         4         45        Total 04
XVAR05    FORM      5         4         49        Total 05
XVAR06    FORM      5         4         53        Total 06
XVAR07    FORM      5         4         57        Total 07
XVAR08    FORM      5         4         61        Total 08
XVAR09    FORM      5         4         65        Total 09
XVAR10    FORM      5         4         69        Total 10
XVAR11    FORM      5         4         73        Total 11
XVAR12    FORM      5         4         77        Total 12
XVAR13    FORM      5         4         81        Total 13
XVAR14    FORM      5         4         85        Total 14
XVAR15    FORM      5         4         89        Total 15
XVAR16    FORM      5         4         93        Total 16
XVAR17    FORM      5         4         97        Total 17 (>16 total)
.End of Record                         101
.
WORK1     IFILE     SQL, FIXED=99, KEY="u1-22"
.
.NAME     TYPE   LENGTH   PHYSICAL  START LOC.    DESCRIPTION
.----     ----   ------   --------  ----------    -----------
XCLAIM    DIM       3         3          1        Claim code
XHFUND    DIM       6         6          4        Health Fund
XHDPEQ    DIM       4         4         10        HDP Equiv.
.XMBS     DIM       9         9         14        MBS Code (principal only)
XMBSFEE   FORM      5         4         23        MBS Schedule Fee
.XVAR00   FORM      5         4         27        Total 00 (Day Case)
.XVAR01   FORM      5         4         31        Total 01
.XVAR02   FORM      5         4         35        Total 02
.XVAR03   FORM      5         4         39        Total 03
.XVAR04   FORM      5         4         43        Total 04
.XVAR05   FORM      5         4         47        Total 05
.XVAR06   FORM      5         4         51        Total 06
.XVAR07   FORM      5         4         55        Total 07
.XVAR08   FORM      5         4         59        Total 08
.XVAR09   FORM      5         4         63        Total 09
.XVAR10   FORM      5         4         67        Total 10
.XVAR11   FORM      5         4         71        Total 11
.XVAR12   FORM      5         4         75        Total 12
.XVAR13   FORM      5         4         79        Total 13
.XVAR14   FORM      5         4         83        Total 14
.XVAR15   FORM      5         4         87        Total 15
.XVAR16   FORM      5         4         91        Total 16
.XVAR17   FORM      5         4         95        Total 17 (>16 total)
.End of record                          99
.
. ------ <Work Variables and Constants> ------
.
CALDAYS   FORM      4
CDYSDAYS  FORM      6
CDYSFDTE  DIM       8
CDYSTDTE  DIM       8
CDYSYEAR  FORM      2
CURRDATE  DIM       8
CODE      DIM       2
CODECL    INIT      "CL"
COMMAND   DIM       50
CURAGEG   DIM       2         * Current Age group
CURCODE   DIM       7         * Current Comp Indic/HF pair when print report
CURCOMP   DIM       1         * Current Compensable indicator
CURMBS    DIM       13        * Current MBS/Order/Age group pair when print rep
CURMCNT   FORM      2         * Current MBS Operation Order when gen temp file
CURMORD   DIM       2         * Current MBS Operation Order when print report
CURSESS   DIM       18
CURCLM    DIM       3
CURHF     DIM       6
CURHDP    DIM       4
CLMFROM   DIM       3
CLMTO     DIM       3
CVERTF    FORM      2
CVERTT    FORM      2
.
DEXT      DIM       2
DST       INIT      "st"
DND       INIT      "nd"
DRD       INIT      "rd"
DTH       INIT      "th"
.
DIM4      DIM       4
DIM9      DIM       9
DSCHFROM  DIM       8         * Discharge Date From
DSCHTO    DIM       8         * Discharge Date To
.
FIRSTFLG  FORM      1
FNAMEI    DIM       8         * Temporary index file name
FNAMEA    DIM       8         * Temporary index file name
FROMDATE  DIM       8
FROMDESC  DIM       40
FUNDDESC  DIM       20
FUNDFROM  DIM       6         * Health Fund From
FUNDTO    DIM       6         * Health Fund To
.
HVAR00    FORM      5         * Total 00 (Day Case)
HVAR01    FORM      5         * Total 01
HVAR02    FORM      5         * Total 02
HVAR03    FORM      5         * Total 03
HVAR04    FORM      5         * Total 04
HVAR05    FORM      5         * Total 05
HVAR06    FORM      5         * Total 06
HVAR07    FORM      5         * Total 07
HVAR08    FORM      5         * Total 08
HVAR09    FORM      5         * Total 09
HVAR10    FORM      5         * Total 10
HVAR11    FORM      5         * Total 11
HVAR12    FORM      5         * Total 12
HVAR13    FORM      5         * Total 13
HVAR14    FORM      5         * Total 14
HVAR15    FORM      5         * Total 15
HVAR16    FORM      5         * Total 16
HVAR17    FORM      5         * Total 17 (>16 total)
.
ITEMFROM  DIM       9         * MBS Item From
ITEMTO    DIM       9         * MBS Item To
.
JYEAR     FORM      2
.
KEY21A    DIM       21
.
MBSINDX   FORM      2
.
NBRDAYS   FORM      4
NEWCODE   DIM       7         * Current Comp Indic/HF pair when print report
NEWMBS    DIM       13        * Current MBS/Order/Age group pair when print rep
NEWSESS   DIM       18
NEWCLM    DIM       3
NEWHF     DIM       6
NEWHDP    DIM       4
.
OPTDESC   DIM       42
OPT1      INIT      "MBS Codes by Operation Billing           "
OPT2      INIT      "MBS Codes by Length of Stay              "
OPT3      INIT      "MBS Codes by Length of Stay and Age Group"
OPT4      INIT      "MBS Codes by Length of Stay Principal only"
.
SOPDESC   DIM       42
SOPT1     INIT      "Totals only                               "
SOPT2     INIT      "Totals by Claim Code                      "
SOPT3     INIT      "Totals by Claim Code & Health Fund        "
SOPT4     INIT      "Totals by Health Fund                     "
SOPT5     INIT      "Totals by Health Fund and Table HDP Equiv."
.
PDSCHF    DIM       10
PDSCHT    DIM       10
DESCFR    DIM       9
DESCTO    DIM       9
SAVFUND   DIM       10
SP14      INIT      "              "
SOPTION   FORM      1
.
TABLDESC  DIM       20
TODATE    DIM       8
.
TVAR00    FORM      5         * Total 00 (Day Case)
TVAR01    FORM      5         * Total 01
TVAR02    FORM      5         * Total 02
TVAR03    FORM      5         * Total 03
TVAR04    FORM      5         * Total 04
TVAR05    FORM      5         * Total 05
TVAR06    FORM      5         * Total 06
TVAR07    FORM      5         * Total 07
TVAR08    FORM      5         * Total 08
TVAR09    FORM      5         * Total 09
TVAR10    FORM      5         * Total 10
TVAR11    FORM      5         * Total 11
TVAR12    FORM      5         * Total 12
TVAR13    FORM      5         * Total 13
TVAR14    FORM      5         * Total 14
TVAR15    FORM      5         * Total 15
TVAR16    FORM      5         * Total 16
TVAR17    FORM      5         * Total 17 (>16 total)
.
WDATE1    DIM       8
WDATE2    DIM       8
WORKV     FORM      5
WTEMP     FORM      5
ZERO8     INIT      "0000    "
.
PRGID     INIT      "IBAINP88"
PRGNAM    INIT      "MBS PROCEDURE REPORT"
VERSION   INIT      "V12.00.01"
+
. *****************************************************************************
. * MAIN0000: Main line code for MBS Procedure Reports                        *
. *****************************************************************************
MAIN0000  CALL      INIT0000            * Initialization
.
MAIN0100  MOVE      ZERO,SOPTION        * Initialise the sub-option var.
          CALL      OPTN0000            * Select option
          BRANCH    EXIT,MAIN9999       * Exit option selected
          BRANCH    OPTION,MAIN1000:    * MBS codes by Operation Billing
                           MAIN1000:    * MBS codes by Length of Stay
                           MAIN1000:    * MBS codes by Length of Stay & Age
                           MAIN2000     * MBS codes by LOS Principal Only
.
.------------------------------------------------------------------------------
. Option 1 : MBS codes by Operation Billing. This option reports the number
.            of patients who had each procedure as a primary, secondary,
.            tertiary, etc fee.
.
. Option 2 : MBS codes by Length of Stay. This option reports the number of
.            patients for each procedure for each length of stay from Day Case
.            to 16, and for 16+.
.
. Option 3 : MBS codes by Length of Stay & Age. This option reports the number
.            of patients for each procedure for each length of stay from
.            Day Case to 16, and for 16+. This is broken up by a range of ages.
.
. Option 4 : MBS codes by Length of Stay Principal only. This option reports
.            the number of patients for each procedure for each length of stay
.            from Day Case to 16, and for 16+.
.
MAIN1000  CALL      DMEN0000             * Display the option menu
          CALL      KDSC0000             * Enter the discharge date range
          BRANCH    EXIT,MAIN0100        * No date entered
.
          CALL      KFND0000             * Enter single health fund or all
          MOVE      "17",CVERTF          * Vertical line for MBS from
          MOVE      "18",CVERTT          * Vertical line for MBS to
          CALL      KMBS0000             * Enter the MBS range
.
          CALL      CONTQST              * Okay to continue ?
          MOVE      ANS,EXIT             * Convert answer to a numeric
          BRANCH    EXIT,MAIN5000:       * Yes
                         MAIN1000:       * No.
                         MAIN0100        * Cancel
.
MAIN2000  CALL      SOPT0000             * Display Sub-options 
          BRANCH    EXIT,MAIN0100        * Return to main menu
.
          MOVE      "15",CVERTF          * Vertical line for MBS from
          MOVE      "16",CVERTT          * Vertical line for MBS to
          CALL      DMNU0000             * Display the option menu
          BRANCH    SOPTION,MAIN2100:    * Totals only
                            MAIN2200:    * Totals by Claim Code
                            MAIN2300:    * Totals by Claim Code & Health Fund
                            MAIN2400:    * Totals by Health Fund
                            MAIN2500     * Totals by Health Fund & Table HDP
.
MAIN2100  CALL      KDSC0000             * Enter the discharge date range
          BRANCH    EXIT,MAIN2000
          CALL      KMBS0000             * Enter the MBS range
          GOTO      MAIN3000
.
MAIN2200  CALL      KDSC0000             * Enter the discharge date range
          BRANCH    EXIT,MAIN2000
          CALL      KMBS0000             * Enter the MBS range
          CALL      KCLM0000             * Enter the Claim code range
          GOTO      MAIN3000
.
MAIN2300  CALL      KDSC0000             * Enter the discharge date range
          BRANCH    EXIT,MAIN2000
          CALL      KMBS0000             * Enter the MBS range
          CALL      KCLM0000             * Enter the Claim code range
          CALL      KFUN0000             * Enter single health fund or all
          GOTO      MAIN3000
.
MAIN24000 CALL      KDSC0000             * Enter the discharge date range
          BRANCH    EXIT,MAIN2000
          CALL      KMBS0000             * Enter the MBS range
          CALL      KFUN0000             * Enter single health fund or all
          GOTO      MAIN3000
.
MAIN25000 CALL      KDSC0000             * Enter the discharge date range
          BRANCH    EXIT,MAIN2000
          CALL      KMBS0000             * Enter the MBS range
          CALL      KFUN0000             * Enter single health fund or all
          GOTO      MAIN3000
.
MAIN3000  CALL      CONTQST              * Okay to continue ?
          MOVE      ANS,EXIT             * Convert answer to a numeric
          BRANCH    EXIT,MAIN6000:       * Yes
                         MAIN2000:       * No.
                         MAIN0100        * Cancel
.
.         Loop over the discharge file for the requested date, and accumulate
.         the data in a temporary file
.
MAIN5000  CALL      CREA0000             * Create a temporary file
          CALL      PROC0000             * Process discharges into temp file
          CALL      GENR0000             * Generate the report
          CALL      KILL0000             * Remove the temporary file
          GOTO      MAIN1000
.
MAIN6000  CALL      CREB0000             * Create a temporary file
          CALL      PROA0000             * Process discharges into temp file
          CALL      GENA0000             * Generate the report
          CALL      KILA0000             * Remove the temporary file
          GOTO      MAIN2000
.
MAIN9999  CHAIN     PGM                  * Return from whence thou comest.
+
. *****************************************************************************
. * INIT0000: Initialization Procedure                                        *
. *****************************************************************************
INIT0000  CALL      DISPHEAD            * Display the standard heading
          CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
          DISPLAY   *P56:24,"Opening ";
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patdschf";
          OPEN      PATDSCH2,"patdschf"
.
          DISPLAY   *P64:24,"patdtraf";
          OPEN      PATDTRA1,"patdtraf"
.
          DISPLAY   *P64:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"patitemn";
          OPEN      PATITEM1,"patitemn"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P64:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
.
          DISPLAY   *P64:24,"pattfeef";
          OPEN      PATTFEE1,"pattfeef"
.
          DISPLAY   *P64:24,"pattranf";
          OPEN      PATTRAN2,"pattranf"
.
          DISPLAY   *P64:24,"patmmbsf";
          OPEN      PATMMBS1,"patmmbsf"
.
          DISPLAY   *P64:24,"patmchgf";
          OPEN      PATMCHG1,"patmchgf"
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FNAMEI
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FNAMEA
.
INIT9999  RETURN
+
. *****************************************************************************
. * OPTN0000: Key in the option wanted                                        *
. * RETURNS : EXIT    = 0 (Valid Option selected, returned in OPTION)         *
. *                   = 1 (Exit Option selected)                              *
. *           OPTION  = 1 (MBS items by Operation Billing)                    *
. *                     2 (MBS items by Length of Stay)                       *
. *                     3 (MBS items by Length of Stay & Age)                 *
. *                     4 (MBS items by Length of Stay Principal only)        *
. *****************************************************************************
OPTN0000  CALL      DISPHEAD
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = MBS Items by Operation Billing":
                    *P1:6,*V2LON,TWO,*HOFF," = MBS Items by Length of Stay":
                    *P1:7,*V2LON,THREE,*HOFF:
                                         " = MBS Items by Length of Stay & Age":
                    *P1:8,*V2LON,FOUR,*HOFF:
                                " = MBS Items by Length of Stay Principal only":
                    *P1:10,"Select Option :";
.
.         Key in the option desired
.
OPTN1000  KEYIN     *P17:10,*EF,*DV,UNDLN1,*P17:10,*V2LON,OPTION;
.
          COMPARE   ZERO,OPTION         * Have they selected the exit option ?
          GOTO      OPTN9000 IF EQUAL   * Yes. Set indicator.
          DISPLAY   *P17:10,*EL,*V2LON,OPTION;
.
.         Validate option selected
.
          BRANCH    OPTION,OPTN1100:    * By Operation Billing
                           OPTN1200:    * By Length of Stay
                           OPTN1300:    * By Length of Stay & Age
                           OPTN1400     * By Length of Stay principal only
          BEEP                          * Invalid option
          GOTO      OPTN1000            * Rekey option
.
.         Operation Billing option
.
OPTN1100  DISPLAY   *P50:2,*V2LON,"- Operation Billing";
          MOVE      ZERO,EXIT           * Valid Option
          GOTO      OPTN9999
.
.         Length of Stay opyion
.
OPTN1200  DISPLAY   *P50:2,*V2LON,"- Length of Stay";
          MOVE      ZERO,EXIT           * Valid Option
          GOTO      OPTN9999
.
.         Length of Stay & Age option
.
OPTN1300  DISPLAY   *P50:2,*V2LON,"- Length of Stay & Age";
          MOVE      ZERO,EXIT           * Valid Option
          GOTO      OPTN9999
.
.         Length of Stay Principal only
.
OPTN1400  DISPLAY   *P50:2,*V2LON,"- Length of Stay Principal Only";
          MOVE      ZERO,EXIT           * Valid Option
          GOTO      OPTN9999
.
.         Exit option
.
OPTN9000  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
. *****************************************************************************
. * DMEN0000: Display options menu                                            *
. *****************************************************************************
DMEN0000  DISPLAY   *P1:12,*EF:
                    *P1:12,"Discharge Date From :":
                    *P1:13,"Discharge Date To   :":
                    *P1:15,"Health Fund         :":
                    *P40:15,"<",*V2LON,"ENTER",*HOFF,"> for All":
                    *P1:17,"MBS Item From       :":
                    *P1:18,"MBS Item To         :";
DMEN9999  RETURN
+
. *****************************************************************************
. * DMNU0000: Display options menu                                            *
. *****************************************************************************
DMNU0000  DISPLAY   *P1:12,*EF:
                    *P1:12,"Discharge Date From :":
                    *P1:13,"Discharge Date To   :":
                    *P1:CVERTF,"MBS Item From       :":
                    *P1:CVERTT,"MBS Item To         :";
.
          BRANCH    SOPTION,DMNU9999,DMNU2000,DMNU2000,DMNU4000,DMNU4000
.
DMNU2000  DISPLAY   *P1:18,"Claim Code From     :":
                    *P1:19,"Claim Code To       :";
.
          COMPARE   TWO,SOPTION
          GOTO      DMNU9999 IF EQUAL
.
DMNU4000  DISPLAY   *P1:21,"Health Fund From    :":
                    *P1:22,"Health Fund To      :";
.
DMNU9999  RETURN
+
. *****************************************************************************
. * SOPT0000: Display Sub-options                                             *
. *****************************************************************************
SOPT0000  MOVE      ZERO,EXIT
          DISPLAY   *P1:4,*EF:
                    *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Totals only":
                    *P1:6,*V2LON,TWO,*HOFF," = Totals by Claim Code":
                    *P1:7,*V2LON,THREE,*HOFF," = Totals by Claim Code":
                                           " & Health Fund":
                    *P1:8,*V2LON,FOUR,*HOFF," = Totals by Health Fund":
                    *P1:9,*V2LON,FIVE,*HOFF," = Totals by Health Fund":
                                           " & Table HDP Equiv.":
                    *P1:11,"Select Option :";
SOPT1000  KEYIN     *P17:11,*EF,*DV,UNDLN1,*P17:11,*V2LON,SOPTION;
.
          COMPARE   ZERO,SOPTION        * Have they selected the exit option ?
          GOTO      SOPT9000 IF EQUAL   * Yes. Set indicator.
.
          DISPLAY   *P17:11,*EL,*V2LON,SOPTION;
          BRANCH    SOPTION,SOPT9999,SOPT9999,SOPT9999,SOPT9999,SOPT9999
          BEEP
          GOTO      SOPT1000
.
SOPT9000  MOVE      ONE,EXIT
.
SOPT9999  RETURN
+
. *****************************************************************************
. * KDSC0000: Keyin the range of discharge dates                              *
. * RETURNS: DSCHFROM = Discharge Date From (YYMMDD)                          *
. *          DSCHTO   = Discharge Date To   (YYMMDD)                          *
. *          EXIT     = 0 means Date range entered                            *
. *                   = 1 means No date range entered                         *
. *****************************************************************************
KDSC0000  MOVE      TEN2,CVERT          * Line for From Date keyin
          MOVE      TWENTY3,CCOL        * Column for From Date keyin
          MOVE      ZERO,CHIGHLT        * Highlighting on
          UNPACK    SP6,CYEAR,CMON,CDAY * Initialise date
          MOVE      CCC,CCENT
          MOVE      ONE,CDEFDTE
.
          CALL      KEYDATE             * Key in the date
          BRANCH    OVRCD,KDSC9000      * No date entered
.
          PACK      DSCHFROM,CCENT,CYEAR,CMON,CDAY
          REP       " 0",DSCHFROM       * Pack up and zero fill the from date
.
.         Validate From Date
.
          PACK      XDATE,CCC,CYY,CMM,CDD   * Validate against the current date
          REP       " 0",XDATE
.
          MATCH     DSCHFROM,XDATE      * Is the from date in the future
          GOTO      KDSC1000 IF NOT LESS* No. From date is valid
.
          DISPLAY   *P1:24,*EL,*V2LON,*B:
                    "** Date should not be in the future **    ";
          CALL      HITENTER
          GOTO      KDSC0000
.
.         Key in the discharge To Date
.
KDSC1000  MOVE      TEN3,CVERT          * Line for To Date keyin
          MOVE      TWENTY3,CCOL        * Column for To Date keyin
          MOVE      ZERO,CHIGHLT        * Highlighting on
          UNPACK    SP6,CYEAR,CMON,CDAY * Initialise date
          MOVE      CCC,CCENT
.
          CALL      KEYDATE             * Key in the date
          BRANCH    OVRCD,KDSC0000      * No date entered
.
          PACK      DSCHTO,CCENT,CYEAR,CMON,CDAY
          REP       " 0",DSCHTO         * Pack up and zero fill the to date
.
.         Validate To Date
.
          MATCH     DSCHTO,XDATE        * Is the from date in the future
          GOTO      KDSC2000 IF NOT LESS* No. From date is valid
.
          DISPLAY   *P1:24,*EL,*V2LON,*B:
                    "** Date should not be in the future **    ";
          CALL      HITENTER
          GOTO      KDSC1000
.
.         Validate date range
.
KDSC2000  MATCH     DSCHFROM,DSCHTO     * Check from date against to date
          GOTO      KDSC8000 IF NOT LESS* Date range valid
.
          DISPLAY   *P1:24,*EL,*V2LON,*B:
                    "** Date To must be greater or equal to Date From **   ";
          CALL      HITENTER
          GOTO      KDSC1000
.
.         Valid date range entered
.
KDSC8000  MOVE      ZERO,EXIT           * Tell the calling routine all is OK
          GOTO      KDSC9999            * Return
.
.         No date range entered
.
KDSC9000  MOVE      ONE,EXIT            * Tell the calling routine nothing done
.
KDSC9999  RETURN
+
. *****************************************************************************
. * KFND0000: Keyin the Health fund for the report.                           *
. * RETURNS: FUNDFROM = Health fund From                                      *
. *          FUNDTO   = Health fund To                                        *
. *****************************************************************************
KFND0000  KEYIN     *P23:15,*DV,UNDLN6:
                    *P23:15,*V2LON,FUNDFROM;
.
          RESET     FUNDFROM            * Was anything entered ?
          GOTO      KFND8000 IF EOS     * No. Do all health funds
.
          ENDSET    FUNDFROM            * Go to the end of what was entered
          APPEND    SP6,FUNDFROM        * Pad with blanks
          RESET     FUNDFROM            * Reset back to normal
.
          MATCH     QUEST,FUNDFROM
          IF        @EQUAL
            CALL      PATFNDDS
            KEYIN     *P1:24,*EL,*V2LON,"    Fund : ",FUNDFROM
            DISPLAY   *P1:4,*EF
            CALL      DMEN0000
            DISPLAY   *P23:15,*V2LON,FUNDFROM
            ENDSET    FUNDFROM
            APPEND    SP6,FUNDFROM 
            RESET     FUNDFROM
            MATCH     SP6,FUNDFROM
            IF        @EQUAL
              MOVE      "ZZZZZZ",FUNDTO     * Finish with the last health fund
              MOVE      "All Health Funds",HFNAME
            ENDIF
            UNPACK    DSCHFROM,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            MOVE      CPCDATE,PDSCHF
            UNPACK    DSCHTO,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            MOVE      CPCDATE,PDSCHT
            DISPLAY   *P23:12,*V2LON,PDSCHF
            DISPLAY   *P23:13,*V2LON,PDSCHT
          ENDIF
          
.         Validate the health fund entered
.
          MATCH     SP6,FUNDFROM
          GOTO      KFND1000 IF EQUAL
          DISPLAY   *P23:15,*EL,*V2LON,FUNDFROM;
.
          PACK      KEY14,FUNDFROM,ZERO8
          CALL      RDFUND1             * Read in the health fund record
          BRANCH    OVRCD,KFND5000      * No such health fund
          DISPLAY   *P35:15,HFNAME;
          GOTO      KFND2000
.
.         Blank health fund selected
.
KFND1000  DISPLAY   *P23:15,*EL,*V2LON,"No Health Fund";
.
.         Set To Fund
.
KFND2000  MOVE      FUNDFROM,FUNDTO     * To fund = From fund ie. Only one fund
          GOTO      KFND9999            * Return
.
.         Invalid Health Fund
.
KFND5000  DISPLAY   *P1:24,*EL,*V2LON,*B,"** Invalid Health Fund **    ";
          CALL      HITENTER
          GOTO      KFND0000            * Rekey in health fund
.
.         All health funds selected
.
KFND8000  MOVE      SP6,FUNDFROM        * Start from the first health fund
          MOVE      "ZZZZZZ",FUNDTO     * Finish with the last health fund
.
          MOVE      "All Health Funds",HFNAME
          DISPLAY   *P23:15,*EL,*V2LON,"All Health Funds";
.
KFND9999  RETURN
+
. *****************************************************************************
. * KFUN0000: Keyin range of Health fund for the report.                      *
. * RETURNS: FUNDFROM = Health fund From                                      *
. *          FUNDTO   = Health fund To                                        *
. *****************************************************************************
KFUN0000  KEYIN     *P23:21,*DV,UNDLN6:
                    *P23:21,*V2LON,FUNDFROM;
.
          MOVE      FUNDFROM,SAVFUND
          ENDSET    FUNDFROM            * Go to the end of what was entered
          APPEND    SP6,FUNDFROM        * Pad with blanks
          RESET     FUNDFROM            * Reset back to normal
.
.         Validate the health fund entered
.
          MATCH     SP6,FUNDFROM
          GOTO      KFUN1000 IF EQUAL
          DISPLAY   *P23:21,*EL,*V2LON,FUNDFROM;
.
          PACK      KEY14,FUNDFROM,ZERO8
          CALL      RDFUND1             * Read in the health fund record
          BRANCH    OVRCD,KFUN0500      * No such health fund
          DISPLAY   *P35:21,HFNAME;
          GOTO      KFUN2000
.
.         Invalid Health Fund
.
KFUN0500  DISPLAY   *P1:24,*EL,*V2LON,*B,"** Invalid Health Fund **    ";
          CALL      HITENTER
          GOTO      KFUN0000            * Rekey in health fund
.
.         nothing entered for from health fund
.
KFUN1000  DISPLAY   *P23:21,*EL,*V2LON,"Start";
          MOVE      SP6,FUNDFROM        * Start from the first health fund
.
.         Set To Fund
.
KFUN2000  KEYIN     *P23:22,*DV,UNDLN6:
                    *P23:22,*V2LON,FUNDTO;
.
          ENDSET    FUNDTO              * Go to the end of what was entered
          APPEND    SP6,FUNDTO          * Pad with blanks
          RESET     FUNDTO              * Reset back to normal
.
.         Validate the health fund entered
.
          MATCH     SP6,FUNDTO
          GOTO      KFUN3000 IF EQUAL
          DISPLAY   *P23:22,*EL,*V2LON,FUNDTO;
.
          PACK      KEY14,FUNDTO,ZERO8
          CALL      RDFUND1             * Read in the health fund record
          BRANCH    OVRCD,KFUN2500      * No such health fund
          DISPLAY   *P35:22,HFNAME;
.
          GOTO      KFUN8000            * Return
.
.         Invalid Health Fund
.
KFUN2500  DISPLAY   *P1:24,*EL,*V2LON,*B,"** Invalid Health Fund **    ";
          CALL      HITENTER
          GOTO      KFUN2000            * Rekey in health fund
.
.         All health funds selected
.
KFUN3000  DISPLAY   *P23:22,*EL,*V2LON,"Finish";
          MOVE      "ZZZZZZ",FUNDTO     * Finish with the last health fund
.
KFUN8000  MATCH     FUNDFROM,FUNDTO     * Is this a valid range
          GOTO      KFUN9999 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*V2LON,*B:
                    "** Health Fund To must be greater or equal to Health":
                    " Fund From **  ";
          CALL      HITENTER
          GOTO      KFUN0000
.
KFUN9999  RETURN
+
. *****************************************************************************
. * KCLM0000: Keyin range of Claim codes for the report.                      *
. * RETURNS: CLMFROM = Claim From                                             *
. *          CLMTO   = Claim To                                               *
. *****************************************************************************
KCLM0000  MOVE      TEN8,EVERT
          MOVE      TWENTY3,ECOL
          MOVE      ZERO,CKYIMAND
          MOVE      "CL",CODE
          CALL      PATCODKY
          MOVE      ACODE,CLMFROM  
.
          ENDSET    CLMFROM             * Go to the end of what was entered
          APPEND    SP3,CLMFROM         * Pad with blanks
          RESET     CLMFROM             * Reset back to normal
.
.         Validate the claim entered
.
          MATCH     SP3,CLMFROM
          GOTO      KCLM1000 IF EQUAL
          DISPLAY   *P23:18,*EL,*V2LON,CLMFROM;
.
          PACK      KEY5,CODECL,CLMFROM
          CALL      RDCODE1             * Read in the codes file
          BRANCH    OVRCD,KCLM0500      * No such claim code
          DISPLAY   *P35:18,TDESC;
          GOTO      KCLM2000
.
.         Invalid claim code
.
KCLM0500  DISPLAY   *P1:24,*EL,*V2LON,*B,"** Invalid Claim code**    ";
          CALL      HITENTER
          GOTO      KCLM0000            * Rekey in claim code
.
.         nothing entered for from claim code
.
KCLM1000  DISPLAY   *P23:18,*EL,*V2LON,"Start";
          MOVE      SP3,CLMFROM        * Start from the first claim code
.
.         Set To claim
.
KCLM2000  MOVE      TEN9,EVERT
          MOVE      TWENTY3,ECOL
          MOVE      ZERO,CKYIMAND
          MOVE      "CL",CODE
          CALL      PATCODKY
          MOVE      ACODE,CLMTO  
.
          ENDSET    CLMTO               * Go to the end of what was entered
          APPEND    SP3,CLMTO           * Pad with blanks
          RESET     CLMTO               * Reset back to normal
.
.         Validate the claim code entered
.
          MATCH     SP3,CLMTO
          GOTO      KCLM3000 IF EQUAL
          DISPLAY   *P23:19,*EL,*V2LON,CLMTO;
.
          PACK      KEY5,CODECL,CLMTO
          CALL      RDCODE1             * Read in the codes file
          BRANCH    OVRCD,KCLM2500      * No such claim code
          DISPLAY   *P35:19,TDESC;
.
          GOTO      KCLM8000            * Return
.
.         Invalid claim code
.
KCLM2500  DISPLAY   *P1:24,*EL,*V2LON,*B,"** Invalid Claim code **    ";
          CALL      HITENTER
          GOTO      KCLM2000            * Rekey in claim code
.
.         All claim codes selected
.
KCLM3000  DISPLAY   *P23:19,*EL,*V2LON,"Finish";
          MOVE      "ZZZ",CLMTO        * Finish with the last claim code
.
KCLM8000  MATCH     CLMFROM,CLMTO      * Is this a valid range
          GOTO      KCLM9999 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*V2LON,*B:
                    "** Claim code To must be greater or equal to Claim":
                    " code From **  ";
          CALL      HITENTER
          GOTO      KCLM0000
.
KCLM9999  RETURN
+
. *****************************************************************************
. * KMBS0000: Keyin the MBS Item range for the report.                        *
. * RETURNS: ITEMFROM = MBS Item From                                         *
. *          ITEMTO   = MBS Item To                                           *
. *****************************************************************************
KMBS0000  KEYIN     *P23:CVERTF,*DV,UNDLN9:
                    *P23:CVERTF,*V2LON,ITEMFROM;
.
          ENDSET    ITEMFROM                * Go to the end of the keyed in item
          APPEND    SP9,ITEMFROM            * Pad out with spaces
          RESET     ITEMFROM                * Reset back to normal
.
          MATCH     SP9,ITEMFROM            * Was anything entered ?
          GOTO      KMBS1000 IF EQUAL       * No. Display appropriate data
.
          DISPLAY   *P23:CVERTF,*V2LON,ITEMFROM;
.
          MATCH     QUEST,ITEMFROM
          IF        @EQUAL
QMBS000     DISPLAY   *P1:4,*EF
            DISPLAY   *P30:4,*V2LON,*ULON,"MBS Codes"
            MOVE      "1",CCOL
            MOVE      "5",CVERT
            PACK      ITEMFROM,SP9
            PACK      KEY17,ITEMFROM,SP70
            CALL      RDSITEM1
QMBS        CALL      RDKITEM1
            BRANCH    OVRCD,QMBS9999
            DISPLAY   *PCCOL:CVERT,*V2LON,ITEMNO,*HOFF," ",IDESC 
            ADD       ONE,CVERT
            COMPARE   TWENTY4,CVERT
            GOTO      QMBS IF LESS 
            MOVE      FIVE,CVERT
            ADD       "40",CCOL
            COMPARE   "70",CCOL
             GOTO      QMBS IF LESS
             
          KEYIN    *P1:24,*EL," (",*V2LON,"E",*HOFF,")xit, ":
                    "(",*V2LON,"F",*HOFF,")irst Screen, ":
                    "(",*V2LON,"N",*HOFF,")ext Screen : ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          CMATCH    ANSE,ANS
          GOTO      QMBS9999 IF EQUAL
          CMATCH    ANSF,ANS
          GOTO      QMBS000 IF EQUAL
          MOVE      "5",CVERT
          MOVE      "2",CCOL
          DISPLAY   *P1:5,*EF
          GOTO      QMBS
QMBS9999   
          KEYIN     *P1:24,*EL,"   Item Code: ",ITEMFROM
          DISPLAY   *P1:4,*EF
          IF        OPTION = 4
            CALL      DMNU0000                            
          ELSE
            CALL      DMEN0000
          ENDIF
          UNPACK    DSCHFROM,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,PDSCHF
          UNPACK    DSCHTO,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,PDSCHT
          IF        OPTION = 4
            DISPLAY   *P23:12,*V2LON,PDSCHF
            DISPLAY   *P23:13,*V2LON,PDSCHT 
            DISPLAY   *P23:15,*EL,*V2LON,ITEMFROM
          ELSE
            DISPLAY   *P23:12,*V2LON,PDSCHF
            DISPLAY   *P23:13,*V2LON,PDSCHT 
            DISPLAY   *P23:15,*EL,*V2LON,HCODE,"      ",*HOFF,HFNAME
            DISPLAY   *P23:17,*EL,*V2LON,ITEMFROM
          ENDIF
          ENDIF

.         Validate the data input
.
          PACK      KEY17,ITEMFROM,SP70      * Key for the MBS item file
          CALL      PATITMRD                * Check that a record exists
          BRANCH    OVRCD,KMBS0500          * Invalid item number
.
          DISPLAY   *P36:CVERTF,IDESC;
          MOVE      IDESC,FROMDESC
          GOTO      KMBS4000                * Now get end of the MBS item range
.
.         Invalid From MBS item code
.
KMBS0500  DISPLAY   *P1:24,*EL,*V2LON,*B,"** Invalid MBS Item **    ";
          CALL      HITENTER
          GOTO      KMBS0000                * Rekey in the MBS item
.
.         Nothing entered for from item number
.
KMBS1000  DISPLAY   *P23:CVERTF,*EL,*V2LON,"Start";
.
.         Input the To MBS item number
.
KMBS4000  KEYIN     *P23:CVERTT,*EL,*DV,UNDLN9:
                    *P23:CVERTT,*V2LON,ITEMTO;
.
          ENDSET    ITEMTO                  * Go to the end of the keyed in item
          APPEND    SP9,ITEMTO              * Pad out with spaces
          RESET     ITEMTO                  * Reset back to normal
.
          MATCH     SP9,ITEMTO              * Was anything entered ?
          GOTO      KMBS5000 IF EQUAL       * No. Display appropriate data
.
          MATCH     QUEST,ITEMTO
          IF        @EQUAL          
QMBST000    DISPLAY   *P1:4,*EF
            DISPLAY   *P30:4,*V2LON,*ULON,"MBS Codes"
            MOVE      "1",CCOL
            MOVE      "5",CVERT
            PACK      ITEMTO,SP9
            PACK      KEY17,ITEMTO,SP70
            CALL      RDSITEM1
QMBS1       CALL      RDKITEM1
            BRANCH    OVRCD,QMBST999
            DISPLAY   *PCCOL:CVERT,*V2LON,ITEMNO,*HOFF," ",IDESC
            ADD       ONE,CVERT
            COMPARE   TWENTY4,CVERT
            GOTO      QMBS1 IF LESS
            MOVE      FIVE,CVERT
            ADD       "40",CCOL
            COMPARE   "70",CCOL
            GOTO      QMBS1 IF LESS


          KEYIN    *P1:24,*EL," (",*V2LON,"E",*HOFF,")xit, ":
                    "(",*V2LON,"F",*HOFF,")irst Screen, ":
                    "(",*V2LON,"N",*HOFF,")ext Screen : ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          CMATCH    ANSE,ANS
          GOTO      QMBST999 IF EQUAL
          CMATCH    ANSF,ANS
          GOTO      QMBST000 IF EQUAL
          MOVE      "5",CVERT
          MOVE      "2",CCOL
          DISPLAY   *P1:5,*EF
          GOTO      QMBS1
QMBST999  
          KEYIN     *P1:24,*EL,"   Item Code: ",ITEMTO
          DISPLAY   *P1:4,*EF
          IF        OPTION = 4
            CALL      DMNU0000
          ELSE
            CALL      DMEN0000
          ENDIF
          IF        OPTION = 4
            DISPLAY   *P23:12,*V2LON,PDSCHF
            DISPLAY   *P23:13,*V2LON,PDSCHT
            DISPLAY   *P23:15,*EL,*V2LON,ITEMFROM,"   ",*HOFF,FROMDESC
            DISPLAY   *P23:16,*EL,*V2LON,ITEMTO  
          ELSE
            DISPLAY   *P23:12,*V2LON,PDSCHF
            DISPLAY   *P23:13,*V2LON,PDSCHT
            DISPLAY   *P23:15,*EL,*V2LON,HCODE,"      ",*HOFF,HFNAME
            DISPLAY   *P23:17,*EL,*V2LON,ITEMFROM,"   ",*HOFF,FROMDESC
            DISPLAY   *P23:18,*EL,*V2LON,ITEMTO  
          ENDIF
          ENDIF
.
DISPLAY   *P23:CVERTT,*V2LON,ITEMTO;
.
.         Validate the data input
.
          PACK      KEY17,ITEMTO,SP9         * Key for the MBS item file
          CALL      PATITMRD                * Check that a record exists
          BRANCH    OVRCD,KMBS4500          * Invalid item number
.
          DISPLAY   *P35:CVERTT,IDESC;
          GOTO      KMBS8000                * Validate the MBS item range
.
.         Invalid To MBS item code
.
KMBS4500  DISPLAY   *P1:24,*EL,*V2LON,*B,"** Invalid MBS Item **    ";
          CALL      HITENTER
          GOTO      KMBS4000                * Rekey in the MBS item
.
.         Nothing entered.
.
KMBS5000  DISPLAY   *P23:CVERTT,*EL,*V2LON,"Finish";
          MOVE      "ZZZZZZZZZ",ITEMTO      * Ending item number for report
.
.         Validate the item number range entered
.
KMBS8000  MATCH     ITEMFROM,ITEMTO         * Is this a valid range ?
          GOTO      KMBS9999 IF NOT LESS    * Yes. Return to calling routine.
.
          DISPLAY   *P1:24,*EL,*V2LON,*B:
                    "** Item To must be greater or equal to Item From **   ";
          CALL      HITENTER
          GOTO      KMBS4000                * Rekey in the MBS range
.
KMBS9999  RETURN
+
. *****************************************************************************
. * CREA0000: Create and Open a temporary index file                          *
. *****************************************************************************
CREA0000  CALL      KILL0000                * Delete any existing temporary file
.
          CLEAR     COMMAND                 * Clear the command line
          APPEND    "isbuild ",COMMAND      * Isbuild
          APPEND    FNAMEI,COMMAND          * temp_filename
          APPEND    " 101 u1-28",COMMAND    * record_length key
          RESET     COMMAND                 * Reset the command line
.
          EXECUTE   COMMAND,TASKID          * Execute the isbuild command
.
          OPEN      WORK,FNAMEI             * Open the temporary file
.
CREA9999  RETURN
+
. *****************************************************************************
. * KILL0000: Remove a temporary index file                                   *
. *****************************************************************************
KILL0000  CLOSE     WORK                * Make sure the temp file is closed
.
          CLEAR     COMMAND             * Clear the command line
          APPEND    "iserase ",COMMAND  * Iserase
          APPEND    FNAMEI,COMMAND      * temp_filename
          RESET     COMMAND             * Reset the command line
.
          EXECUTE   COMMAND,TASKID      * Execute the isbuild command
.
KILL9999  RETURN
+
. *****************************************************************************
. * CREB0000: Create and Open a temporary index file                          *
. *****************************************************************************
CREB0000  CALL      KILA0000                * Delete any existing temporary file
.
          CLEAR     COMMAND                 * Clear the command line
          APPEND    "isbuild ",COMMAND      * Isbuild
          APPEND    FNAMEA,COMMAND          * temp_filename
          APPEND    " 99 u1-22",COMMAND     * record_length key
          RESET     COMMAND                 * Reset the command line
.
          EXECUTE   COMMAND,TASKID          * Execute the isbuild command
.
          OPEN      WORK1,FNAMEA            * Open the temporary file
.
CREB9999  RETURN
+
. *****************************************************************************
. * KILA0000: Remove a temporary index file                                   *
. *****************************************************************************
KILA0000  CLOSE     WORK1               * Make sure the temp file is closed
.
          CLEAR     COMMAND             * Clear the command line
          APPEND    "iserase ",COMMAND  * Iserase
          APPEND    FNAMEA,COMMAND      * temp_filename
          RESET     COMMAND             * Reset the command line
.
          EXECUTE   COMMAND,TASKID      * Execute the isbuild command
.
KILA9999  RETURN
+
. *****************************************************************************
. * PROC0000: Process the data and post to the temporary file                 *
. *****************************************************************************
PROC0000  DISPLAY   *P1:24,*EL,*P10:24,"Admission : ":
                    *P34:24,"Discharge Date: ":
                    *P64:24,"MBS: ";
.
          PACK      KEY16,DSCHFROM,SP6  * Loop over the discharges in date ord.
          CALL      RDSDSCH2            * Start with the from date
PROC1000  CALL      RDKDSCH2            * Read the next discharge record
          BRANCH    OVRCD,PROC9999      * No more records. Finished processing
.
          MATCH     DDATE,DSCHTO        * Have we finished the requested range?
          GOTO      PROC9999 IF LESS    * Yes. Finished processing
.
          UNPACK    DDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE             * Pack up the discharge date for disp
.
          DISPLAY   *P22:24,*V2LON,DADMNO,*P50:24,CPCDATE;
.
.         Get the extra information needed
.
          MOVE      DADMNO,KEY8         * Key for the admission file
          CALL      RDMISS1             * Read in the admission record
          BRANCH    OVRCD,PROC1000      * No admission record, ignore discharge
.
          MATCH     FUNDFROM,AFUNDH     * Is the H.F. within the request range?
          GOTO      PROC1000 IF LESS    * No. Reject record
.
          MATCH     AFUNDH,FUNDTO       * Is the H.F. within the request range?
          GOTO      PROC1000 IF LESS    * No. Reject record
.
          CALL      COMP0000            * Calculate compensable flag & code.
.
          MOVE      AURNO,KEY8          * Key for the master file
          CALL      RDMAST1             * Read in the master file record
          BRANCH    OVRCD,PROC1000      * No master record, ignore discharge
.
          CALL      AGE0000             * Calculate the age group
.
.         If we are doing options 2 or 3, then calculate the length of stay
.
          MOVE      SP30,CURSESS        * Current session (for option 1)
          MOVE      ZERO,CURMCNT        * Current session record number
.
          BRANCH    OPTION,PROC2000     * Skip onward if not L.O.S. report
.
          MOVE      ADATE,FROMDATE      * Fromdate for length of stay calc.
          MOVE      DDATE,TODATE        * Todate for length of stay calc.
          CALL      NHOSPDAY            * Calcluates the length of stay
.
.         Process the dtran file
.
PROC2000  PACK      KEY22,AADMNO,SP20   * Loop over the dtran file for patient
          CALL      RDSDTRN1            * Position at start of patient
.
PROC2100  CALL      RDKDTRN1            * Read the next dtran record
          BRANCH    OVRCD,PROC1000      * No more records - get next discharge
.
          MATCH     TADMNO,AADMNO       * Still the same patient
          GOTO      PROC1000 IF NOT EQUAL
.
.         Check if we have a MBS item. Ignore if not.
.
          COMPARE   TWO,TRECTYPE        * Theatre fee ?
          GOTO      PROC2100 IF NOT EQUAL
.
.         Check that it exists on the item file
.
          PACK      KEY8,TFCENT,TFYEAR,TFMONTH,TFDAY,SP70
          REP       " 0",KEY8
.
          PACK      KEY9,TITEMNO,SP5   * Key for MBS item file
          PACK      KEY17,KEY9,KEY8,SP70
          CALL      PATITMRD           * Read the record
          BRANCH    OVRCD,PROC2500     * No record. Try the reference field
          GOTO      PROC3000           * We have an MBS item
.
.         Try the reference field for the MBS code
.
PROC2500  MOVE      TRECEIPT,DIM4      * Change to a DIM 4
          PACK      KEY9,TRECEIPT,SP5  * Key for MBS item file
          PACK      KEY17,KEY9,KEY8,SP70
          CALL      PATITMRD           * Read the record
          BRANCH    OVRCD,PROC3000     * No record. Continue
          MOVE      TRECEIPT,TITEMNO
.
.         Check if MBS item is within requested range
.
PROC3000  MATCH     ITEMFROM,TITEMNO   * Is the MBS item in requested range?
          GOTO      PROC2100 IF LESS   * No. Ignore record
.
          MATCH     TITEMNO,ITEMTO     * Is the MBS item in requested range?
          GOTO      PROC2100 IF LESS   * No. Ignore record
.
          MOVE      TITEMNO,XMBS       * Setup the key variable for temp file
.
.         Determine the ordering of the MBS code. This returns the order in
.         CURMCNT and the current session in CURSESS.
.
          CALL      MORD0000           * Calculate MBS order (1st,2nd,3rd,etc)
.
          DISPLAY   *P70:24,*V2LON,XMBS;
.
          BRANCH    OPTION,PROC3100,PROC4000,PROC4000
.
.         Option 1: Generating Operating Billing statistics.
.
PROC3100  MOVE      SP2,XMBSORD         * Optn 1 doesn't need an order breakup
          MOVE      CURMCNT,MBSINDX     * Set up order of MBS item in session
.
          PACK      KEY28,XMBS,XMBSORD,XAGEGRP,XCOMP,XCODE,XTABLE
          CALL      RDWORK              * Read the temp file record
          BRANCH    OVRCD,PROC3200      * No record found. Should never occur
.
.         Make all numbers greater than seven, equal to seven
.
          MOVE      CURMCNT,MBSINDX     * Set up order of MBS item in session
          COMPARE   EIGHT,MBSINDX       * Is the current item number 7 or less
          GOTO      PROC3150 IF LESS    * Yes.
.
          MOVE      SEVEN,MBSINDX       * Set the count to seven
.
PROC3150  LOAD      WTEMP,MBSINDX,XVAR01,XVAR02,XVAR03,XVAR04:
                                  XVAR05,XVAR06,XVAR07
.
          ADD       ONE,WTEMP           * Increment the number of admissions
.
          STORE     WTEMP,MBSINDX,XVAR01,XVAR02,XVAR03,XVAR04:
                                  XVAR05,XVAR06,XVAR07
          CALL      UPWORK              * Update the temporary file.
          GOTO      PROC2100            * Get the next dtran record
.
.         New record required
.
PROC3200  CALL      WRKI0000            * Initialise temporary file vars
          MOVE      ONE,WTEMP           * Increment the number of admissions
          STORE     WTEMP,MBSINDX,XVAR01,XVAR02,XVAR03,XVAR04,XVAR05,XVAR06:
                                  XVAR07
          CALL      WRWORK              * Write the new record to the temp file
          GOTO      PROC2100            * Get the next dtran record
.
.         Option 2 & 3: Generating Length of Stay statistics.
.
.         Day cases are treated specially, and length of stays > 16 are treated
.         as all being 17.
.
PROC4000  MOVE      CURMCNT,XMBSORD     * Set up the order of MBS operation
.
          COMPARE   FIVE,CURMCNT        * What operation number are we up to?
          GOTO      PROC2100 IF NOT LESS* Ignore everything after 4th oper.
.
          MATCH     ADATE,DDATE         * Day case patient ?
          GOTO      PROC4100 IF NOT EQUAL
.
          MOVE      TEN8,MBSINDX        * Day cases are position 18 in file
          GOTO      PROC4500            * Update the file
.
.         Non-day cases
.
PROC4100  MOVE      NBRDAYS,MBSINDX     * Use the number of days as the index
          COMPARE   TEN8,MBSINDX        * Is it less than 18 days ?
          GOTO      PROC4500 IF LESS    * Yes. Update the file
.
          MOVE      TEN7,MBSINDX        * All days from 17 onwards treat as 17.
.
.         Update the temp file 
.
PROC4500  PACK      KEY28,XMBS,XMBSORD,XAGEGRP,XCOMP,XCODE,XTABLE
          CALL      RDWORK              * Read the temp file if it exists
          BRANCH    OVRCD,PROC4600      * No record found - write a new one
.
          LOAD      WTEMP,MBSINDX,XVAR01,XVAR02,XVAR03,XVAR04,XVAR05,XVAR06:
                                  XVAR07,XVAR08,XVAR09,XVAR10,XVAR11,XVAR12:
                                  XVAR13,XVAR14,XVAR15,XVAR16,XVAR17,XVAR00
          ADD       ONE,WTEMP           * Increment the number of admissions
          STORE     WTEMP,MBSINDX,XVAR01,XVAR02,XVAR03,XVAR04,XVAR05,XVAR06:
                                  XVAR07,XVAR08,XVAR09,XVAR10,XVAR11,XVAR12:
                                  XVAR13,XVAR14,XVAR15,XVAR16,XVAR17,XVAR00
          CALL      UPWORK              * Update the temporary file.
          GOTO      PROC2100            * Get the next dtran record
.
.         New record required
.
PROC4600  CALL      WRKI0000            * Initialise temporary file vars
          MOVE      ONE,WTEMP           * Increment the number of admissions
          STORE     WTEMP,MBSINDX,XVAR01,XVAR02,XVAR03,XVAR04,XVAR05,XVAR06:
                                  XVAR07,XVAR08,XVAR09,XVAR10,XVAR11,XVAR12:
                                  XVAR13,XVAR14,XVAR15,XVAR16,XVAR17,XVAR00
                                  
          CALL      WRWORK              * Write the new record to the temp file
          GOTO      PROC2100            * Get the next dtran record
.
PROC9999  RETURN
+
. *****************************************************************************
. * PROA0000: Process the data and post to the temporary file                 *
. *****************************************************************************
PROA0000  DISPLAY   *P1:24,*EL,*P10:24,"Admission : ":
                    *P34:24,"Discharge Date: ":
                    *P64:24,"MBS: ";
.
          PACK      KEY16,DSCHFROM,SP6  * Loop over the discharges in date ord.
.
          CALL      RDSDSCH2            * Start with the from date
PROA1000  CALL      RDKDSCH2            * Read the next discharge record
          BRANCH    OVRCD,PROA9999      * No more records. Finished processing
.
          MATCH     DDATE,DSCHTO        * Have we finished the requested range?
          GOTO      PROA9999 IF LESS    * Yes. Finished processing
.
          UNPACK    DDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE             * Pack up the discharge date for disp
.
          DISPLAY   *P22:24,*V2LON,DADMNO,*P50:24,CPCDATE;
.
          CALL      IVAR0000            * Initialise variables
.
.         Get the extra information needed
.
          MOVE      DADMNO,KEY8         * Key for the admission file
          CALL      RDMISS1             * Read in the admission record
          BRANCH    OVRCD,PROA1000      * No admission record, ignore discharge
.
          MOVE      AURNO,KEY8          * Key for the master file
          CALL      RDMAST1             * Read in the master file record
          BRANCH    OVRCD,PROA1000      * No master record, ignore discharge
.
          CALL      GMBS0000            * Get the first MBS code
          MATCH     SP9,XMBS            * Check if there is principal MBS Code
          GOTO      PROA1000 IF EQUAL
.
          MATCH     ITEMFROM,XMBS       * Is the Item within the request range?
          GOTO      PROA1000 IF LESS    * No. Reject record
.
          MATCH     XMBS,ITEMTO         * Is the Item within the request range?
          GOTO      PROA1000 IF LESS    * No. Reject record
.
          MOVE      XMBS,KEY9           * Key for the item file
          PACK      KEY17,KEY9,ADATE,SP70
          CALL      PATITMRD            * Read the item file
          BRANCH    OVRCD,PROA1000      * Invalid MBS item code
          MOVE      QIAMT,XMBSFEE       * MBS Amount
.
          IF SOPTION = 2 | SOPTION = 3
            MOVE      ACLAIM,XCLAIM
            MATCH     CLMFROM,ACLAIM    * Is the claim within the request range?
            GOTO      PROA1000 IF LESS  * No. Reject record
.
            MATCH     ACLAIM,CLMTO      * Is the claim within the request range?
            GOTO      PROA1000 IF LESS  * No. Reject record
          ENDIF
.
          IF SOPTION = 3 | SOPTION = 4 | SOPTION = 5
            MOVE      AFUNDH,XHFUND
            MATCH     FUNDFROM,AFUNDH   * Is the H.F. within the request range?
            GOTO      PROA1000 IF LESS  * No. Reject record
.
            MATCH     AFUNDH,FUNDTO     * Is the H.F. within the request range?
            GOTO      PROA1000 IF LESS  * No. Reject record
          ENDIF
.
          MOVE        SP10,XHDPEQ
          IF SOPTION = 5
            CALL      GHDP0000          * Get the HDP of health fund table
          ENDIF
.
          DISPLAY   *P70:24,*V2LON,XMBS;
.
          MOVE      ADATE,FROMDATE      * Fromdate for length of stay calc.
          MOVE      DDATE,TODATE        * Todate for length of stay calc.
          CALL      NHOSPDAY            * Calcluates the length of stay
.
          MATCH     ADATE,DDATE         * Day case patient ?
          GOTO      PROA2000 IF NOT EQUAL
.
          MOVE      TEN8,MBSINDX        * Day cases are position 18 in file
          GOTO      PROA3000            * Update the file
.
.         Non- day cases
.
PROA2000  MOVE      NBRDAYS,MBSINDX     * Use the number of days as the index
          COMPARE   TEN8,MBSINDX        * Is it less than 18 days ?
          GOTO      PROA3000 IF LESS    * Yes. Update the file
.
          MOVE      TEN7,MBSINDX        * All days from 17 onwards treat as 17
.
.         Update/write to the tempfile
.
PROA3000  PACK      KEY22,XCLAIM,XHFUND,XHDPEQ,XMBS
          CALL      RDWORK1             * Read the tempfile if it exists
          BRANCH    OVRCD,PROA3500      * No record found - write a new one
.
          LOAD      WTEMP,MBSINDX,XVAR01,XVAR02,XVAR03,XVAR04,XVAR05,XVAR06:
                                  XVAR07,XVAR08,XVAR09,XVAR10,XVAR11,XVAR12:
                                  XVAR13,XVAR14,XVAR15,XVAR16,XVAR17,XVAR00
          ADD       ONE,WTEMP           * Increment the number of admissions
          STORE     WTEMP,MBSINDX,XVAR01,XVAR02,XVAR03,XVAR04,XVAR05,XVAR06:
                                  XVAR07,XVAR08,XVAR09,XVAR10,XVAR11,XVAR12:
                                  XVAR13,XVAR14,XVAR15,XVAR16,XVAR17,XVAR00
          CALL      UPWORK1             * Update the temporary file.
          GOTO      PROA1000            * Get the next discharged patients
.
PROA3500  CALL      WRKI0000            * Initialise temporary file vars
          MOVE      ONE,WTEMP           * Increment the number of admissions
          STORE     WTEMP,MBSINDX,XVAR01,XVAR02,XVAR03,XVAR04,XVAR05,XVAR06:
                                  XVAR07,XVAR08,XVAR09,XVAR10,XVAR11,XVAR12:
                                  XVAR13,XVAR14,XVAR15,XVAR16,XVAR17,XVAR00
          CALL      WRWORK1
          GOTO      PROA1000            * Get the next discharged patients
.
PROA9999  RETURN
+
. *****************************************************************************
. * GHDP0000: Get the HDP Equivalent of Health fund table                     *
. *****************************************************************************
GHDP0000  PACK      KEY14,AFUNDH,AFNDTB
          CALL      RDFUND1
          BRANCH    OVRCD,GHDP9999
          MOVE      HFHDPE,XHDPEQ          * HDP Eq. of Health Fund table
GHDP9999  RETURN
+
. *****************************************************************************
. * GMBS0000: Get the first MBS code (Pricipal only)                          *
. *****************************************************************************
GMBS0000  MOVE      SP10,XMBS
          PACK      KEY11,AADMNO,SP70
          CALL      RDSMMBS1
          CALL      RDKMMBS1
          BRANCH    OVRCD,GMBS9999
.
          MATCH     AADMNO,MMADMN
          GOTO      GMBS9999 IF NOT EQUAL
          MOVE      MMCODE,XMBS
.
GMBS9999  RETURN
+
. *****************************************************************************
. * IVAR0000: Initialize temporary file variables                             *
. *****************************************************************************
IVAR0000  MOVE      SP3,XCLAIM
          MOVE      SP6,XHFUND
          MOVE      SP4,XHDPEQ
          MOVE      SP9,XMBS
          MOVE      ZERO,XMBSFEE
IVAR9999  RETURN
+
. *****************************************************************************
. * WRKI0000: Initialize working file variables                               *
. *****************************************************************************
WRKI0000  MOVE      ZERO,FORM2              * Initialize variable count
.
WRKI1000  ADD       ONE,FORM2               * Go to the next variable
          COMPARE   TEN9,FORM2              * Have we finished all the variables
          GOTO      WRKI9999 IF NOT LESS    * Yes. Return to calling routine
.
          STORE     ZERO,FORM2,XVAR01,XVAR02,XVAR03,XVAR04,XVAR05,XVAR06:
                               XVAR07,XVAR08,XVAR09,XVAR10,XVAR11,XVAR12:
                               XVAR13,XVAR14,XVAR15,XVAR16,XVAR17,XVAR00
          GOTO      WRKI1000                * Get the next variable
.
WRKI9999  RETURN
+
. *****************************************************************************
. * COMP0000: Set up compensable and coding variables for temporary file.     *
. * RETURNS: XCOMP   = Compensable indicator. 0 = No, 1 = Yes.                *
. *          XCODE   = Health Fund code if XCOMP = 0, Claim code if XCOMP = 1 *
. *          XTABLE  = Health Fund table if XCOMP = 0, Blank if XCOMP = 1     *
. *                    (XTABLE will be blank for Option 1)                    *
. *****************************************************************************
COMP0000  MOVE      ZERO,XCOMP              * Assume not compensable
          MOVE      AFUNDH,XCODE            * Initialise with H.F code
          MOVE      AFNDTB,XTABLE           * Initialise with H.F. Table
.
          STORE     SP8,OPTION,XTABLE       * Convert table to blank for Opt. 1
.
.         Determine if the patient is compensable
.
          PACK      KEY5,CODECL,ACLAIM      * Key for codes file
          CALL      RDCODE1                 * Read the codes file entry
          BRANCH    OVRCD,COMP9999          * No codes record - assume not comp.
          MOVE      ZERO,FORM2              * Initialise variable counter
.
COMP1000  ADD       ONE,FORM2               * Go to the next variable number
          COMPARE   SIX,FORM2               * Finished with all the indicators?
          GOTO      COMP9999 IF NOT LESS    * Yes. Finished processing
.
          LOAD      ANS,FORM2,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
.
          MATCH     ANSW,ANS                * Is this a workcare claim ?
          GOTO      COMP2000 IF EQUAL       * Yes.
.
          MATCH     ANSM,ANS                * Is this a motor accident claim ?
          GOTO      COMP2000 IF EQUAL       * Yes.
.
          MATCH     ANSV,ANS                * Is this a veteran affairs claim ?
          GOTO      COMP2000 IF EQUAL       * Yes.
          GOTO      COMP1000                * Try the next indicator
.
.         Compensable claim
.
COMP2000  MOVE      ONE,XCOMP               * Set compensable indicator
          PACK      XCODE,ACLAIM,SP6        * Pack up claim code
          MOVE      SP8,XTABLE              * Blank out table
.
COMP9999  RETURN
+
. *****************************************************************************
. * AGE0000: Calculate age grouping (Option 3 only)                           *
. * RETURNS: XAGEGRP = Age group code. Blank if not option 3.                 *
. *****************************************************************************
AGE0000   MOVE      SP2,XAGEGRP             * Initialise age group
          COMPARE   THREE,OPTION            * Are we in option 3 ?
          GOTO      AGE9999 IF NOT EQUAL    * No. Finished setting up age group
.
.         Determine age group that the patient lies in.
.         The age groupings are:
.         0-10, 11-20, 21-30, 31-40, 41-50, 51-60, 61-70, 71-80, 81-90, 91+
.         These correspond to group codes (XAGEGRP):
.          00    11     21     31     41     51     61     71     81    91
.
.         We use the formula:
.
.            ( (PSAGE - 1) / 10 ) * 10 + 1    if PSAGE >= 11
.            00                               if PSAGE <  11
.
.         Allowing for integer division (which truncates), this will translate
.         the age into the corresponding code.
.
          COMPARE   TEN1,PSAGE              * Is the age less than 11 ?
          GOTO      AGE2000 IF LESS         * Yes. Skip onto setting up code
.
          COMPARE   "91",PSAGE              * Is the age greater than 90 ?
          GOTO      AGE1000 IF NOT LESS     * Yes. Skip onto setting up code
.
          SUB       ONE,PSAGE               * Subtract 1 from the age
          DIV       TEN,PSAGE               * Divide age by 10 get decade number
          MULT      TEN,PSAGE               * Multiply by 10 to get decade year
          ADD       ONE,PSAGE               * Add 1 to the age
.
          MOVE      PSAGE,FORM2             * Change to a 2 digit field
          MOVE      FORM2,XAGEGRP           * Set up group code
          GOTO      AGE2000                 * Goto the finish of setting up code
.
.         Age 91+
.
AGE1000   MOVE      "91",XAGEGRP            * Age group for 91+
.
AGE2000   REP       " 0",XAGEGRP            * Zero fill age group code
.
AGE9999   RETURN
+
. *****************************************************************************
. * MORD0000: Calculates the ordering of the current MBS code in this session *
. * PARAMETERS: CURSESS  : Current Theatre Session (Inv/Date/Session No)      *
. *             CURMCNT  : Current number of MBS items in this session        *
. * RETURNS   : CURSESS  : Current Theatre Session (Inv/Date/Session No) (New)*
. *             CURMCNT  : Ordering of MBS item in current theatre session    *
. *****************************************************************************
MORD0000  PACK      NEWSESS,TREF,TFCENT,TFYEAR,TFMONTH,TFDAY,TSESSION
.
.         Have we changed sessions ?
.
          MATCH     NEWSESS,CURSESS     * Still the same session ?
          GOTO      MORD5000 IF EQUAL   * Yes. Increment current counter
.
.         New session
.
          MOVE      NEWSESS,CURSESS     * Save the new session
          MOVE      ONE,CURMCNT         * Reset the MBS item counter
          GOTO      MORD9999            * Return
.
.         Another item in the same session
.
MORD5000  ADD       ONE,CURMCNT         * Increment the current counter
.
MORD9999  RETURN
+
. *****************************************************************************
. * GENR0000: Generate the report from the temporary file                     *
. *****************************************************************************
GENR0000  DISPLAY   *P1:24,*EL,*P29:24,"** Generating Report **",*W:
                    *P1:24,*EL,*P24:24,"Generating : ";
.
          MOVE      "60",CLNO           * Force a new page with first print
          MOVE      ZERO,CPAGENO        * Start from page zero
          MOVE      SP10,CURMBS         * Initialize current MBS code
.
.         Loop over the temporary file, and print the data
.
          MOVE      SP30,KEY28          * Process the entire temporary file
          CALL      RDSWORK             * Position at start of file
.
GENR1000  CALL      RDKWORK             * Read the next record from the file
          BRANCH    OVRCD,GENR9000      * Finished processing the temp file
.
          DISPLAY   *P37:24,*V2LON,XMBS,SP1,XAGEGRP,SP1,XCOMP,SP1,XCODE;
.
.         Check for a new MBS/Order/Age group combination
.
          PACK      NEWMBS,XMBS,XMBSORD,XAGEGRP
          MATCH     CURMBS,NEWMBS       * Do we still have the same MBS code ?
          GOTO      GENR2000 IF EQUAL   * Yes. Just continue on
.
.         New MBS code. Print total for last MBS code if non-blank
.
          MATCH     SP8,CURMBS          * First time through ?
          GOTO      GENR1200 IF EQUAL   * Yes. Just initialise everything
.
          CALL      PHFT0000            * Print the H.F. total
          CALL      PMBT0000            * Print the MBS total
.
GENR1200  CALL      HFDI0000            * Initialise H.F. totals
          CALL      MBSI0000            * Initialise MBS totals
          MOVE      NEWMBS,CURMBS       * Save current MBS/Age Group item
          PACK      CURCODE,XCOMP,XCODE * Save current Code
          CALL      SUBH0000            * Print a new heading for this MBS item
          GOTO      GENR3000            * Print this new record
.
.         Check for a new Compensable Indicator/Health Fund pair
.
GENR2000  PACK      NEWCODE,XCOMP,XCODE * Pack up code for current record
          MATCH     CURCODE,NEWCODE     * Have we changed group ?
          GOTO      GENR3000 IF EQUAL   * No. Just go and print this record
.
          CALL      PHFT0000            * Print the H.F. total
          CALL      HFDI0000            * Initialise H.F. totals
          MOVE      NEWCODE,CURCODE     * Save the current code
.
.         Print the data for this record
.
GENR3000  BRANCH    OPTION,GENR4000     * For option 1 just accumulate data
          CALL      PDTA0000            * Print this data record
.
GENR4000  CALL      ADDT0000            * Add up totals (H.F. and MBS)
          GOTO      GENR1000            * Get the next record
.
.         Finished processing the temporary file
.
GENR9000  COMPARE   ZERO,CPAGENO        * Was anything printed ?
          GOTO      GENR9500 IF EQUAL   * No. Tell the user.
.
          CALL      PHFT0000            * Print the H.F. total
          CALL      PMBT0000            * Print the MBS total
.
          PRINT     *N,*N,"***  End of Report  ***"
.
          DISPLAY   *P1:24,*EL,*P24:24,*V2LON:
                    "** Report Generation Completed **",*W2;
          GOTO      GENR9999            * Finished everything!
.
.         No data found to print
.
GENR9500  DISPLAY   *P1:24,*EL,*P23:24,*V2LON:
                    "** No Data for Selected Criteria **",*W2;
.
GENR9999  RETURN
+
. *****************************************************************************
. * GENA0000: Generate the report from the temporary file                     *
. *****************************************************************************
GENA0000  DISPLAY   *P1:24,*EL,*P29:24,"** Generating Report **",*W:
                    *P1:24,*EL,*P24:24,"Generating : ";
.
          MOVE      "60",CLNO           * Force a new page with first print
          MOVE      ZERO,CPAGENO        * Start from page zero
          MOVE      SP3,CURCLM          * Initialize current claim code
          MOVE      SP3,NEWCLM          * Initialize new claim code
          MOVE      SP6,CURHF           * Initialize current health fund
          MOVE      SP6,NEWHF           * Initialize new health fund
          MOVE      SP4,CURHDP          * Initialize current HDP Eq.
          MOVE      SP4,NEWHDP          * Initialize new HDP Eq.
          MOVE      ONE,FIRSTFLG        * Set flag for first through
.
.         Loop over the temporary file, and print the data
.
          MOVE      SP30,KEY22          * Process the entire temporary file
          CALL      RDSWORK1            * Position at start of file
.
GENA0100  CALL      RDKWORK1            * Read the next record from the file
          BRANCH    OVRCD,GENA9000      * Finished processing the temp file
.
          DISPLAY   *P37:24,*V2LON,XCLAIM,SP1,XHFUND,SP1,XHDPEQ,SP1,XMBS;
.
          MOVE      XCLAIM,NEWCLM       * Save new claim code
          MOVE      XHFUND,NEWHF        * Save new health fund
          MOVE      XHDPEQ,NEWHDP       * Save new HDP
.
          BRANCH    SOPTION,GENA1000,GENA2000,GENA3000:
                            GENA4000,GENA5000
.
.         Option 1 - Totals only
.
GENA1000  CALL      PRTD0000                * Print data
          CALL      ADDT0000                * Accumulate totals
          GOTO      GENA0100                * Get next record
.
.         Option 2 - Totals by claim code
.
GENA2000  MATCH     NEWCLM,CURCLM           * same Claim code ?
          GOTO      GENA2300 IF EQUAL       * Yes, just continue on
.
.         Print new claim code. Print total for last claim code if non-blank
.
          MATCH     SP3,CURCLM              * First time through ?
          GOTO      GENA2100 IF EQUAL       * Yes, just initialise everything
.
          CALL      PSTT0000                * Print the claim Sub total
          MOVE      XCLAIM,CURCLM           * Save current claim code
          CALL      SUHD0000                * Claim code sub heading
.
GENA2100  CALL      HFDI0000                * Initialise claim totals vars.
.
GENA2300  MOVE      XCLAIM,CURCLM           * Save current claim code
          CALL      PRTD0000                * Print data
          CALL      ADDT0000                * Accumulate totals
          GOTO      GENA0100                * Get next record
.
.         Option 3 - Totals by Claim code & Health Fund
.
GENA3000  MATCH     NEWCLM,CURCLM           * Same claim code ?
          GOTO      GENA3200 IF NOT EQUAL   * No, print a sub heading
.
          MATCH     NEWHF,CURHF             * Same health fund ?
          GOTO      GENA3800 IF EQUAL       * Yes, same hf & claim continue on
.
          CALL      PSTT0000                * Print sub-totals health fund vars.
.
          CALL      HFDI0000                * Initialise health fund vars
          MOVE      XHFUND,CURHF            * Save current health fund
.
          CALL      PRHF0000                * Health fund sub heading
          GOTO      GENA3800                * Continue printing data
.
GENA3200  MATCH     SP3,CURCLM              * First time through ?
          GOTO      GENA3400 IF EQUAL       * Yes.
.
          CALL      PSTT0000                * Print sub-totals (health fund)
          CALL      PMBT0000                * Print totals for claim codes
.
          MOVE      XCLAIM,CURCLM           * Save current claim code
          MOVE      XHFUND,CURHF            * Save current health fund
          CALL      SUHD0000                * Claim code/health fund sub heading
.
GENA3400  CALL      HFDI0000                * Initialise health fund vars.
          CALL      MBSI0000                * Initialise claim code vars.
.
GENA3800  MOVE      XCLAIM,CURCLM           * Save current claim code
          MOVE      XHFUND,CURHF            * Save current health fund
          CALL      PRTD0000                * Print data
          CALL      ADDT0000                * Accumulate totals
          GOTO      GENA0100                * Get next record
.
.         Option 4 - Totals by Health Fund
.
GENA4000  BRANCH    FIRSTFLG,GENA4100       * First time through
.
          MATCH     NEWHF,CURHF             * Same health fund ?
          GOTO      GENA4300 IF EQUAL       * Yes, continue on
.
          CALL      PSTT0000                * Print sub total (health fund)
          PRINT     *N;                     * Print an extra line
          ADD       ONE,CLNO                * Increment no of lines
          MOVE      XHFUND,CURHF            * Save current health fund
          CALL      SUHD0000                * Health fund sub heading
.
GENA4100  CALL      HFDI0000                * Initialise health fund totals vars
.
GENA4300  MOVE      XHFUND,CURHF            * Save current health fund
          CALL      PRTD0000                * Print data
          CALL      ADDT0000                * Accumulate totals
          MOVE      ZERO,FIRSTFLG           * Set the flag
          GOTO      GENA0100                * Get next record
.
.         Option 5 - Totals by health fund and table HDP Equiv.
.
GENA5000  BRANCH    FIRSTFLG,GENA5400       * First time through
.
          MATCH     NEWHF,CURHF             * Same health fund ?
          GOTO      GENA5200 IF NOT EQUAL   * No, print a sub heading
.
          MATCH     NEWHDP,CURHDP           * Same HDP Eq.?
          GOTO      GENA5800 IF EQUAL       * Yes, same hf & hdp continue on
.
          CALL      PSTT0000                * Print sub-totals HDP eq. vars
          CALL      HFDI0000                * Initialise HDP eq. vars.
          MOVE      XHDPEQ,CURHDP           * Save current HDP
.
          CALL      PRHD0000                * Print HDP eq. sub heading
          GOTO      GENA5800                * Continue printing data
.
GENA5200  CALL      PSTT0000                * Print sub-totals HDP eq. vars
          CALL      PMBT0000                * Print totals for health fund
          PRINT     *N;                     * Print an extra line
          ADD       ONE,CLNO                * Increment no of lines
          MOVE      XHFUND,CURHF            * Save current health fund
          MOVE      XHDPEQ,CURHDP           * Save HDP Eq.
          CALL      SUHD0000                * Health fund/HDP Eq. sub heading
.
GENA5400  CALL      HFDI0000                * Initialise HDP Eq. vars.
          CALL      MBSI0000                * Initialise claim code vars.
.
GENA5800  MOVE      XHFUND,CURHF            * Save current health fund
          MOVE      XHDPEQ,CURHDP           * Save HDP Eq.
          CALL      PRTD0000                * Print data
          CALL      ADDT0000                * Accumulate totals
          MOVE      ZERO,FIRSTFLG           * Set te flag
          GOTO      GENA0100                * Get next record
.
GENA9000  BRANCH    SOPTION,GENA9100,GENA9100:
                            GENA9200,GENA9100,GENA9200
.
GENA9100  CALL      PSTT0000                * Print totals
          GOTO      GENA9999
.
GENA9200  CALL      PSTT0000                * Print totals
          CALL      PMBT0000                * Print Grand totals
.
GENA9999  PRINT     *N,"**** End of Report ****"
          RETURN
+
. *****************************************************************************
. * ADDT0000: Accumulate totals                                               *
. *****************************************************************************
ADDT0000  MOVE      ZERO,FORM2          * Initialise current variable counter
.
ADDT1000  ADD       ONE,FORM2           * Move to the next variable
          COMPARE   TEN9,FORM2          * Have we finished all the variables ?
          GOTO      ADDT9999 IF NOT LESS* Yes. Finished.
.
.         Get this amount from the temporary file variables
.
          LOAD      WTEMP,FORM2,XVAR01,XVAR02,XVAR03,XVAR04,XVAR05,XVAR06:
                                XVAR07,XVAR08,XVAR09,XVAR10,XVAR11,XVAR12:
                                XVAR13,XVAR14,XVAR15,XVAR16,XVAR17,XVAR00
.
.         Increment H.F totals
.
          LOAD      WORKV,FORM2,HVAR01,HVAR02,HVAR03,HVAR04,HVAR05,HVAR06:
                                HVAR07,HVAR08,HVAR09,HVAR10,HVAR11,HVAR12:
                                HVAR13,HVAR14,HVAR15,HVAR16,HVAR17,HVAR00
          ADD       WTEMP,WORKV         * Add in the current record amount
.
          STORE     WORKV,FORM2,HVAR01,HVAR02,HVAR03,HVAR04,HVAR05,HVAR06:
                                HVAR07,HVAR08,HVAR09,HVAR10,HVAR11,HVAR12:
                                HVAR13,HVAR14,HVAR15,HVAR16,HVAR17,HVAR00
.
.         Increment the MBS item totals
.
          LOAD      WORKV,FORM2,TVAR01,TVAR02,TVAR03,TVAR04,TVAR05,TVAR06:
                                TVAR07,TVAR08,TVAR09,TVAR10,TVAR11,TVAR12:
                                TVAR13,TVAR14,TVAR15,TVAR16,TVAR17,TVAR00
          ADD       WTEMP,WORKV         * Add in the current record amount
.
          STORE     WORKV,FORM2,TVAR01,TVAR02,TVAR03,TVAR04,TVAR05,TVAR06:
                                TVAR07,TVAR08,TVAR09,TVAR10,TVAR11,TVAR12:
                                TVAR13,TVAR14,TVAR15,TVAR16,TVAR17,TVAR00
          GOTO      ADDT1000            * Get the next variable
.
ADDT9999  RETURN
+
. *****************************************************************************
. * HFDI0000: Initialise Health Fund totals                                   *
. *****************************************************************************
HFDI0000  MOVE      ZERO,FORM2          * Initialise current variable counter
.
HFDI1000  ADD       ONE,FORM2           * Move to the next variable
          COMPARE   TEN9,FORM2          * Have we finished all the variables ?
          GOTO      HFDI9999 IF NOT LESS* Yes. Finished.
.
.         Initialise H.F totals
.
          STORE     ZERO,FORM2,HVAR01,HVAR02,HVAR03,HVAR04,HVAR05,HVAR06:
                               HVAR07,HVAR08,HVAR09,HVAR10,HVAR11,HVAR12:
                               HVAR13,HVAR14,HVAR15,HVAR16,HVAR17,HVAR00
          GOTO      HFDI1000            * Get the next variable
.
HFDI9999  RETURN
+
. *****************************************************************************
. * MBSI0000: Initialise MBS Item totals                                      *
. *****************************************************************************
MBSI0000  MOVE      ZERO,FORM2             * Initialise current variable counter
.
MBSI1000  ADD       ONE,FORM2              * Move to the next variable
          COMPARE   TEN9,FORM2             * Finished with all the variables ?
          GOTO      MBSI9999 IF NOT LESS   * Yes. Finished.
.
.         Initialise MBS totals
.
          STORE     ZERO,FORM2,TVAR01,TVAR02,TVAR03,TVAR04,TVAR05,TVAR06:
                               TVAR07,TVAR08,TVAR09,TVAR10,TVAR11,TVAR12:
                               TVAR13,TVAR14,TVAR15,TVAR16,TVAR17,TVAR00
          GOTO      MBSI1000               * Get the next variable
.
MBSI9999  RETURN
+
. *****************************************************************************
. * PDTA0000: Print this data record (Options 2 & 3 only)                     *
. *****************************************************************************
PDTA0000  CALL      GTBD0000            * Get the description for this table
.
          MATCH     "1",CURCOMP         * Is this a compensable record ?
          GOTO      PDTA9999 IF EQUAL   * Yes. Don't bother printing data
.
          COMPARE   "52",CLNO           * Is the page full ?
          CALL      HEAD0000 IF NOT LESS* Yes. Print a new page heading
.
          PRINT     *1,"|",*3,TABLDESC:
                    *24,"|",XVAR00:
                    *30,"|",XVAR01:
                    *36,"|",XVAR02:
                    *42,"|",XVAR03:
                    *48,"|",XVAR04:
                    *54,"|",XVAR05:
                    *60,"|",XVAR06:
                    *66,"|",XVAR07:
                    *72,"|",XVAR08:
                    *78,"|",XVAR09:
                    *84,"|",XVAR10:
                    *90,"|",XVAR11:
                    *96,"|",XVAR12:
                    *102,"|",XVAR13:
                    *108,"|",XVAR14:
                    *114,"|",XVAR15:
                    *120,"|",XVAR16:
                    *126,"|",XVAR17:
                    *132,"|"
          ADD       ONE,CLNO            * Update current line count
.
PDTA9999  RETURN
+
. *****************************************************************************
. * PHFT0000: Print the H.F/Claim Code total. Seperate print for Option 1     *
. *****************************************************************************
PHFT0000  CALL      GHFD0000                * Get the description for this fund
.
          COMPARE   "52",CLNO               * Is the page full ?
          CALL      HEAD0000 IF NOT LESS    * Yes. Print a new page heading
.
          BRANCH    OPTION,PHFT5000         * Seperate print for option 1
.
.         Options 2 & 3 print for H.F. totals
.
          MATCH     "1",CURCOMP             * Is current record a comp claim ?
          CALL      UND132 IF NOT EQUAL     * Print the 132 character line break
.
          PRINT     *1,"|",*3,FUNDDESC:
                    *24,"|",HVAR00:
                    *30,"|",HVAR01:
                    *36,"|",HVAR02:
                    *42,"|",HVAR03:
                    *48,"|",HVAR04:
                    *54,"|",HVAR05:
                    *60,"|",HVAR06:
                    *66,"|",HVAR07:
                    *72,"|",HVAR08:
                    *78,"|",HVAR09:
                    *84,"|",HVAR10:
                    *90,"|",HVAR11:
                    *96,"|",HVAR12:
                    *102,"|",HVAR13:
                    *108,"|",HVAR14:
                    *114,"|",HVAR15:
                    *120,"|",HVAR16:
                    *126,"|",HVAR17:
                    *132,"|"
          ADD       ONE,CLNO                * Update current line count
          CALL      PAGE0000                * Print the 132 character line break
          GOTO      PHFT9999                * Return
.
.         Option 1 print for H.F totals
.
PHFT5000  PRINT     *1,"|",*3,FUNDDESC:
                    *24,"|",*26,HVAR01:
                    *32,"|",*34,HVAR02:
                    *40,"|",*42,HVAR03:
                    *48,"|",*50,HVAR04:
                    *56,"|",*58,HVAR05:
                    *64,"|",*66,HVAR06:
                    *72,"|",*74,HVAR07:
                    *80,"|"
          ADD       ONE,CLNO                * Update current line count
.
PHFT9999  RETURN
+
. *****************************************************************************
. * PSTT0000: Print the Sub-totals variables                                  *
. *****************************************************************************
PSTT0000  COMPARE   "52",CLNO               * Is the page full ?
          CALL      HEAD0000 IF NOT LESS    * Yes. Print a new page heading
          CALL      UND132                  * Print the 132 char.line break
          PRINT     *1,"| Total":
                    *13,"!":
                    *24,"|",HVAR00:
                    *30,"|",HVAR01:
                    *36,"|",HVAR02:
                    *42,"|",HVAR03:
                    *48,"|",HVAR04:
                    *54,"|",HVAR05:
                    *60,"|",HVAR06:
                    *66,"|",HVAR07:
                    *72,"|",HVAR08:
                    *78,"|",HVAR09:
                    *84,"|",HVAR10:
                    *90,"|",HVAR11:
                    *96,"|",HVAR12:
                    *102,"|",HVAR13:
                    *108,"|",HVAR14:
                    *114,"|",HVAR15:
                    *120,"|",HVAR16:
                    *126,"|",HVAR17:
                    *132,"|"
.
          ADD       ONE,CLNO
          BRANCH    SOPTION,PSTT2000,PSTT2000,PSTT3000,PSTT2000,PSTT3000
.
PSTT2000  CALL      UND132                  * Print the 132 char.line break
          GOTO      PSTT9999
.
PSTT3000  CALL      PAGE0000                * Print the totals page break
.
PSTT9999  RETURN
+
. *****************************************************************************
. * PAGE0000: Print the Totals Page Break                                     *
. *****************************************************************************
PAGE0000  PRINT     *1,"*===========================================":
                       "============================================":
                       "===========================================*"
          ADD       ONE,CLNO            * Update print line count
.
PAGE9999  RETURN
+
. *****************************************************************************
. * PMBT0000: Print the MBS Item total. Seperate print for Option 1           *
. *****************************************************************************
PMBT0000  COMPARE   "52",CLNO               * Is the page full ?
          CALL      HEAD0000 IF NOT LESS    * Yes. Print a new page heading
.
          BRANCH    OPTION,PMBT5000         * Seperate print for option 1
.
.         Options 2 & 3 & 4 print for MBS totals
.
          PRINT     *1,"|",*3,"Totals":
                    *24,"|",TVAR00:
                    *30,"|",TVAR01:
                    *36,"|",TVAR02:
                    *42,"|",TVAR03:
                    *48,"|",TVAR04:
                    *54,"|",TVAR05:
                    *60,"|",TVAR06:
                    *66,"|",TVAR07:
                    *72,"|",TVAR08:
                    *78,"|",TVAR09:
                    *84,"|",TVAR10:
                    *90,"|",TVAR11:
                    *96,"|",TVAR12:
                    *102,"|",TVAR13:
                    *108,"|",TVAR14:
                    *114,"|",TVAR15:
                    *120,"|",TVAR16:
                    *126,"|",TVAR17:
                    *132,"|"
          ADD       ONE,CLNO                * Update current line count
          CALL      PAGE0000                * Print the 132 character line break
          GOTO      PMBT9999                * Return
.
.         Option 1 print for MBS totals
.
PMBT5000  CALL      UND80                   * Print the 80 character line break
          PRINT     *1,"|",*3,"Total":
                    *24,"|",*26,TVAR01:
                    *32,"|",*34,TVAR02:
                    *40,"|",*42,TVAR03:
                    *48,"|",*50,TVAR04:
                    *56,"|",*58,TVAR05:
                    *64,"|",*66,TVAR06:
                    *72,"|",*74,TVAR07:
                    *80,"|"
          ADD       ONE,CLNO                * Update current line count
          CALL      UND80                   * Print the 80 character line break
.
PMBT9999  RETURN
+
. *****************************************************************************
. * GTBD0000: Get the description for the current table                       *
. *****************************************************************************
GTBD0000  UNPACK    CURCODE,CURCOMP,HCODE
.
          MATCH     "1",CURCOMP         * Is this a claim record ?
          GOTO      GTBD2000 IF EQUAL   * Yes. Get the appropriate description
.
          PACK      KEY14,HCODE,XTABLE  * Key for the health fund file
          MATCH     SP14,KEY14          * Blank health fund ?
          GOTO      GTBD3000 IF EQUAL   * Yes. Get the appropriate description
.
          CALL      RDFUND1             * Read the health fund table record
          BRANCH    OVRCD,GTBD4000      * No record found
          MOVE      HFNAME,TABLDESC     * Save the health fund table name
          GOTO      GTBD9999            * Return
.
.         Compenable visit. Will not have tables. A blank description will do
.
GTBD2000  MOVE      SP30,TABLDESC       * Description for claim patients
          GOTO      GTBD9999            * Return
.
.         No health fund or table
.
GTBD3000  MOVE      "No Health Fund Table",TABLDESC
          GOTO      GTBD9999            * Return
.
.         Invalid health fund table. Display the health fund and table codes
.
GTBD4000  PACK      TABLDESC,HCODE,SLASH,XTABLE,SP30
.
GTBD9999  RETURN
+
. *****************************************************************************
. * GHFD0000: Get the description for the current fund/claim code             *
. *****************************************************************************
GHFD0000  UNPACK    CURCODE,CURCOMP,HCODE
.
          MATCH     "1",CURCOMP         * Is this a claim record ?
          GOTO      GHFD2000 IF EQUAL   * Yes. Get the appropriate description
.
          MATCH     SP6,HCODE           * Blank health fund ?
          GOTO      GHFD3000 IF EQUAL   * Yes. Get the appropriate description
.
          PACK      KEY14,HCODE,ZERO8
          CALL      RDFUND1             * Read the health fund record
          BRANCH    OVRCD,GHFD4000      * No record found
          MOVE      HFNAME,FUNDDESC     * Save the health fund name
          GOTO      GHFD9999            * Return
.
.         Compenable visit. Use the claim code description
.
GHFD2000  PACK      TDESC,CODECL,SP1,HCODE,SP20
          PACK      KEY5,CODECL,HCODE   * Key for claim code record
          CALL      RDCODE1             * Read in the description
.
          MOVE      TDESC,FUNDDESC      * Save the claim code description
          GOTO      GHFD9999            * Return
.
.         No health fund or table
.
GHFD3000  MOVE      "No Health Fund      ",FUNDDESC
          GOTO      GHFD9999            * Return
.
.         Invalid health fund table. Display the health fund and table codes
.
GHFD4000  PACK      FUNDDESC,HCODE,SP30
.
GHFD9999  RETURN
+
. *****************************************************************************
. * SUBH0000: Print the MBS code and description                              *
. *****************************************************************************
SUBH0000  UNPACK    CURMBS,DIM9,CURMORD,CURAGEG
.
          PACK      IDESC,SP30,SP30     * Clear description
          MOVE      "UNKNOWN CODE",IDESC* Default description
          MOVE      ZERO,IAMT           * Default fee
.
          PACK      KEY9,DIM9,SP9       * Key for MBS item file
          PACK      KEY17,KEY9,SP70
          CALL      PATITMRD            * Get the description and fee from file
.                                       * Check if it is a misc charge
          IF        OVRCD = 1
            MOVE      "UNKNOWN CODE",MDESC    * Default description          
            MOVE      "0  ",KEY3
            PACK      KEY29,KEY3,SP6,SP3,DIM9,SP20
            CALL      PATMCHRD                * read Misc.Charges file 
            IF        EXIT = 0
              MOVE      MDESC,IDESC
            ENDIF
          ENDIF
.
          COMPARE   "45",CLNO           * Is there room for the subheading ?
          GOTO      SUBH8000 IF NOT LESS* No. Print a full heading
.
          PRINT     *N,*1,"MBS Code: ",DIM9,*24,"Description: ",IDESC:
                    *78,"Fee: ",IAMT;
          ADD       ONE,CLNO            * Update current print line count
.
.         If the MBS order is blank, then don't print it (Option 1). Otherwise
.         print the order of this MBS item.
.
          MATCH     SP2,CURMORD         * Do we have an MBS order ?
          GOTO      SUBH0700 IF EQUAL   * No. Check the age grouping
.
          MOVE      CURMORD,CURMCNT     * Convert back to a Form field
          LOAD      DEXT,CURMCNT,DST,DND,DRD,DTH,DTH,DTH,DTH,DTH,DTH,DTH,DTH:
                                 DTH,DTH,DTH,DTH,DTH,DTH,DTH,DTH,DTH,DST,DND:
                                 DRD,DTH,DTH,DTH,DTH,DTH,DTH,DTH,DST
.
          PRINT     *93,CURMCNT,DEXT," Operation";
.
.         If the age group is blank, then don't print anything. Otherwise
.         print the current age grouping
.
SUBH0700  MATCH     SP2,CURAGEG         * Do we have an age grouping ?
          GOTO      SUBH2000 IF EQUAL   * No. Just print the field headings
.
.         To get the ending range, divide the age group by ten, add one and
.         multiply by ten (except if age group is 91 which means 91+)
.
          MATCH     "91",CURAGEG        * Are we in the 91+ age grouping ?
          GOTO      SUBH1000 IF EQUAL   * Yes. Special age heaing for this grp
.
          MOVE      CURAGEG,FORM2       * Convert age group to numeric
          DIV       TEN,FORM2           * Divide by ten to get decade
          ADD       ONE,FORM2           * Go to start of next decade
          MULT      TEN,FORM2           * Multiply by ten to get end of range
.
          PRINT     *112,"Age Group: ",CURAGEG," - ",FORM2;
          GOTO      SUBH2000            * Print the rest of the heading
.
.         Special heading for the group 91+
.
SUBH1000  PRINT     *112,"Age Group: ",CURAGEG,"+";
.
.         Space down to the heading section
.
SUBH2000  PRINT     *N
          ADD       TWO,CLNO            * Update current print line count
.
          BRANCH    OPTION,SUBH4000     * Option 1 has a seperate heading
.
.         Field headings for options 2 & 3
.
          CALL      UND132              * Print the 132 character line break
          PRINT     *1,"| Health Fund":
                    *24,"|  DC":
                    *30,"|   1":
                    *36,"|   2":
                    *42,"|   3":
                    *48,"|   4":
                    *54,"|   5":
                    *60,"|   6":
                    *66,"|   7":
                    *72,"|   8":
                    *78,"|   9":
                    *84,"|  10":
                    *90,"|  11":
                    *96,"|  12":
                    *102,"|  13":
                    *108,"|  14":
                    *114,"|  15":
                    *120,"|  16":
                    *126,"| >16":
                    *132,"|"
          ADD       ONE,CLNO            * Update current line count
          CALL      UND132              * Print the 132 character line break
          GOTO      SUBH9999            * Return
.
.         Print the field headings for option 1
.
SUBH4000  CALL      UND80               * Print the 80 character line break
          PRINT     *1,"| Health Fund":
                    *24,"|   1st":
                    *32,"|   2nd":
                    *40,"|   3rd":
                    *48,"|   4th":
                    *56,"|   5th":
                    *64,"|   6th":
                    *72,"|  >6th":
                    *80,"|"
          ADD       ONE,CLNO            * Update current line count
          CALL      UND80               * Print the 80 character line break
          GOTO      SUBH9999            * Return
.
.         No room on current page for sub-heading
.
SUBH8000  CALL      HEAD0000            * Print a new page heading
.
SUBH9999  RETURN
+
. *****************************************************************************
. * HEAD0000: Print a page heading                                            *
. *****************************************************************************
HEAD0000  CLOCK     TIME,CTIMEIS        * Get current time
          BRANCH    OPTION,HEAD1000,HEAD2000,HEAD2000,HEAD3000
.
.         Option 1 uses the 80 character heading
.
HEAD1000  CALL      HEAD80              * Print the standard 80 char heading
          CALL      POPT0000            * Print the options used
          CALL      SUBH0000            * Print the subheading
          GOTO      HEAD9999            * Return
.
.         Options 2 & 3 uses the 132 character heading
.
HEAD2000  CALL      HEAD132             * Print the standard 132 char heading
          CALL      POPT0000            * Print the options used
          CALL      SUBH0000            * Print the subheading
          GOTO      HEAD9999            * Return
.
.         Option 4
.
HEAD3000  CALL      HEAD132             * Print the standard 132 char heading
          CALL      POPT0000            * Print the options used
          CALL      SUHD0000            * Print subheading (Claim/Health Fund)
.
HEAD9999  RETURN
+
. *****************************************************************************
. * POPT0000: Print the options selected                                      *
. *****************************************************************************
POPT0000  LOAD      OPTDESC,OPTION,OPT1,OPT2,OPT3,OPT4
          PACK      SOPDESC,SP20,SP30
          LOAD      SOPDESC,SOPTION,SOPT1,SOPT2,SOPT3,SOPT4,SOPT5
.
.         Load in the print position depending on option
.
          LOAD      FORM2,OPTION,TWENTY,FORTY,FORTY,FORTY
.
.         Set up the from and to discharge date variables
.
          UNPACK    DSCHFROM,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE                 * Pack up the from date for printing
          MOVE      CPCDATE,PDSCHF           * Save the formatted from date
.
          UNPACK    DSCHTO,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE                 * Pack up the to date for printing
          MOVE      CPCDATE,PDSCHT           * Save the formatted from date
.
.         Set up the from and to item code ranges
.
          PACK      DESCFR,ITEMFROM,SP9     * Default Item from
          PACK      DESCTO,ITEMTO,SP9       * Default Item to
.
          MATCH     SP9,ITEMFROM            * Starting from "Start" ?
          GOTO      POPT0200 IF NOT EQUAL
          MOVE      "Start    ",DESCFR      * Print "Start" not spaces
.
POPT0200  MATCH     "ZZZZZZZZZ",ITEMTO      * Ending with "Finish" ?
          IF        @EQUAL
            MOVE      "Finish   ",DESCTO      * Print "Finish" not "ZZZZZZZZZ"
          ENDIF 
.
          PRINT     *FORM2,OPTDESC," - ",SOPDESC,*N,*N:
                    *FORM2,"Discharges from ",PDSCHF,"  to ",PDSCHT,*N:
                    *FORM2,"MBS Items  from ",DESCFR," to ",DESCTO
.
          COMPARE   FOUR,OPTION             * LOS Principal option
          GOTO      POPT8000 IF NOT EQUAL   * No.
.
          ADD       FOUR,CLNO
          BRANCH    SOPTION,POPT9999,POPT2000,POPT2000:
                            POPT3000,POPT3000
.
.         Set up the from and to claim code ranges
.
POPT2000  PACK      DESCFR,CLMFROM,SP10     * Default Claim from
          PACK      DESCTO,CLMTO,SP10       * Default Claim to
.
          MATCH     SP3,CLMFROM             * Starting from "Start" ?
          GOTO      POPT2020 IF NOT EQUAL
          MOVE      "Start    ",DESCFR      * Print "Start" not spaces
.
POPT2020  MATCH     "ZZZ",CLMTO             * Ending with "Finish" ?
          GOTO      POPT2050 IF NOT EQUAL
          MOVE      "Finish   ",DESCTO      * Print "Finish" not "ZZZZZZZZZ"
.
POPT2050  PRINT     *FORM2,"Claim Code from ",DESCFR," to ",DESCTO
          ADD       ONE,CLNO
.
          COMPARE   TWO,SOPTION             * Option 2 - Totals by claim code ?
          GOTO      POPT3000 IF NOT EQUAL
.
          PRINT     *N;
          GOTO      POPT9999
.
.         Set up the from and to health fund ranges
.
POPT3000  PACK      DESCFR,FUNDFROM,SP10    * Default Health Fund from
          PACK      DESCTO,FUNDTO,SP10      * Default Health Fund to
.
          MATCH     SP6,FUNDFROM            * Starting from "Start" ?
          GOTO      POPT3020 IF NOT EQUAL
          MOVE      "Start    ",DESCFR      * Print "Start" not spaces
.
POPT3020  MATCH     "ZZZZZZ",FUNDTO         * Ending with "Finish" ?
          GOTO      POPT3030 IF NOT EQUAL
          MOVE      "Finish   ",DESCTO      * Print "Finish" not "ZZZZZZ"
.
POPT3030  PRINT     *FORM2,"Health Fund from ",DESCFR," to ",DESCTO,*N
          ADD       ONE,CLNO
          GOTO      POPT9999
.
.         Check if they are doing a single health fund or not
.
POPT8000  MATCH     FUNDFROM,FUNDTO         * Is the from and to funds the same
          GOTO      POPT8100 IF EQUAL       * Yes. A Single health fund selected
.
          PRINT     *FORM2,"All Health Funds",*N
          GOTO      POPT8200                * Increment current line count
.
POPT8100  MOVE      SP30,HFNAME
          PACK      KEY14,FUNDFROM,ZERO8
          CALL      RDFUND1
.
          PRINT     *FORM2,"Health Fund     ",FUNDFROM,SP6,HFNAME,*N
.
POPT8200  ADD       SIX,CLNO                * Update the current line count
.
POPT9999  RETURN
+
. *****************************************************************************
. * PRTD0000: Print data for option 4                                         *
. *****************************************************************************
PRTD0000  COMPARE   "52",CLNO               * Is the page full ?
          CALL      HEAD0000 IF NOT LESS    * Yes. print a new page heading
.
          PRINT     *1,"!",*3,XMBS:
                    *13,"! ",XMBSFEE:
                    *24,"|",XVAR00:
                    *30,"|",XVAR01:
                    *36,"|",XVAR02:
                    *42,"|",XVAR03:
                    *48,"|",XVAR04:
                    *54,"|",XVAR05:
                    *60,"|",XVAR06:
                    *66,"|",XVAR07:
                    *72,"|",XVAR08:
                    *78,"|",XVAR09:
                    *84,"|",XVAR10:
                    *90,"|",XVAR11:
                    *96,"|",XVAR12:
                    *102,"|",XVAR13:
                    *108,"|",XVAR14:
                    *114,"|",XVAR15:
                    *120,"|",XVAR16:
                    *126,"|",XVAR17:
                    *132,"|"
          ADD       ONE,CLNO
.
PRTD9999  RETURN
+
. *****************************************************************************
. * SUHD0000: Print Claim code/Health fund Sub-heading for option 4           *
. *****************************************************************************
SUHD0000  COMPARE   "45",CLNO               * Is there room for the subheading?
          GOTO      SUHD8000 IF NOT LESS    * No.  print a new page heading
.
          BRANCH    SOPTION,SUHD7000,SUHD2000,SUHD2000,SUHD4000,SUHD4000
.
SUHD2000  CALL      PRCL0000              * Print claim code sub-heading
.
          COMPARE   TWO,SOPTION
          GOTO      SUHD7000 IF EQUAL
          CALL      UND132                * Print the 132 char. line break
          CALL      PRHF0000              * Print health fund sub-heading
          GOTO      SUHD9999
.
SUHD4000  CALL      PRHF0000              * Print health fund sub-heading
          COMPARE   FOUR,SOPTION
          GOTO      SUHD7000 IF EQUAL
          CALL      UND132                * Print the 132 char. line break
          CALL      PRHD0000              * Print Table HDP Eq. sub-heading
          GOTO      SUHD9999
.
SUHD7000  CALL      PMSH0000             * Print the main of sub heading
          GOTO      SUHD9999
.
SUHD8000  CALL      HEAD0000             * Print a new page heading
.
SUHD9999  RETURN
+
. *****************************************************************************
. * PMSH0000: Print Main of sub heading for optionn 4                         *
. *****************************************************************************
PMSH0000  CALL      UND132               * Print the 132 char. line break
          PRINT     *1,"| MBS Code":
                    *13,"!  Fee":
                    *24,"| D/C":
                    *30,"|   1":
                    *36,"|   2":
                    *42,"|   3":
                    *48,"|   4":
                    *54,"|   5":
                    *60,"|   6":
                    *66,"|   7":
                    *72,"|   8":
                    *78,"|   9":
                    *84,"|  10":
                    *90,"|  11":
                    *96,"|  12":
                    *102,"|  13":
                    *108,"|  14":
                    *114,"|  15":
                    *120,"|  16":
                    *126,"| >16":
                    *132,"!"
          ADD       ONE,CLNO
          CALL      UND132               * Print the 132 char. line break
          RETURN
+
. *****************************************************************************
. * PRCL0000: Print Claim code Sub-heading for option 4                       *
. *****************************************************************************
PRCL0000  PACK      TDESC,SP30,SP30      * Clear description
          MOVE      "UNKNOWN CODE",TDESC * Default description
.
          PACK      KEY5,CODECL,CURCLM   * Set up key for code file
          CALL      RDCODE1              * Read code file
.
          PRINT     *N,*1,"Claim Code : ",CURCLM:
                       *24,"Description : ",TDESC
          ADD       TWO,CLNO
PRCL000   RETURN
+
. *****************************************************************************
. * PRHF0000: Print Health fund Sub-heading for option 4                      *
. *****************************************************************************
PRHF0000  PACK      HFNAME,SP30,SP30      * Clear description
          MOVE      "UNKNOWN CODE",HFNAME * Default description
.
          PACK      KEY14,CURHF,ZERO8
          CALL      RDFUND1
.
          COMPARE   "45",CLNO             * Is there roomm for the subheading?
          GOTO      PRHF8000 IF NOT LESS  * No. Print a full heading
.
          COMPARE   THREE,SOPTION
          GOTO      PRHF1000 IF NOT EQUAL
.
          PRINT     *1,"! Health Fund : ",CURHF:
                    *24,"Description : ",HFNAME,*132,"!"
.
          CALL      PMSH0000             * Print the sub heading
          ADD       ONE,CLNO
          GOTO      PRHF9999
.
PRHF1000  PRINT     *1,"Health Fund : ",CURHF:
                    *24,"Description : ",HFNAME
          ADD       ONE,CLNO
          GOTO      PRHF9999
.
PRHF8000  CALL      HEAD0000                * Print a new page heading
.
PRHF9999  RETURN
+
. *****************************************************************************
. * PRHD0000: Print HDP Eq.                                                   *
. *****************************************************************************
PRHD0000  PRINT     *1,"! Table HDP Equiv : ",CURHDP:
                    *132,"!"
          ADD       ONE,CLNO
          CALL      PMSH0000             * Print the subheading
.
PRHD9999  RETURN
+
. *****************************************************************************
. * I/O Routines for temporary file                                           *
. *****************************************************************************
RDSWORK   RESET     KEY28               * Make sure key is reset
          READ      WORK,KEY28;;        * Position on key
          RETURN
.
RDWORK    RESET     KEY28               * Make sure key is reset
          MOVE      ZERO,OVRCD          * Assume successful read
          READ      WORK,KEY28;XMBS,XMBSORD,XAGEGRP,XCOMP,XCODE,XTABLE:
                               XVAR00,XVAR01,XVAR02,XVAR03,XVAR04,XVAR05:
                               XVAR06,XVAR07,XVAR08,XVAR09,XVAR10,XVAR11:
                               XVAR12,XVAR13,XVAR14,XVAR15,XVAR16,XVAR17
          GOTO      OVERCOND IF OVER    * Unsuccessful read
          RETURN
.
RDKWORK   MOVE      ZERO,OVRCD          * Assume successful read
          READKS    WORK;XMBS,XMBSORD,XAGEGRP,XCOMP,XCODE,XTABLE:
                         XVAR00,XVAR01,XVAR02,XVAR03,XVAR04,XVAR05:
                         XVAR06,XVAR07,XVAR08,XVAR09,XVAR10,XVAR11:
                         XVAR12,XVAR13,XVAR14,XVAR15,XVAR16,XVAR17
          GOTO      OVERCOND IF OVER    * Unsuccessful read
          RETURN
.
UPWORK    UPDATE    WORK;XMBS,XMBSORD,XAGEGRP,XCOMP,XCODE,XTABLE:
                         XVAR00,XVAR01,XVAR02,XVAR03,XVAR04,XVAR05:
                         XVAR06,XVAR07,XVAR08,XVAR09,XVAR10,XVAR11:
                         XVAR12,XVAR13,XVAR14,XVAR15,XVAR16,XVAR17
          RETURN
.
WRWORK    RESET     KEY28               * Make sure key is reset
          WRITE     WORK,KEY28;KEY28:
                               XVAR00,XVAR01,XVAR02,XVAR03,XVAR04,XVAR05:
                               XVAR06,XVAR07,XVAR08,XVAR09,XVAR10,XVAR11:
                               XVAR12,XVAR13,XVAR14,XVAR15,XVAR16,XVAR17
          RETURN
+
. *****************************************************************************
. * I/O Routines for the second temporary file                                *
. *****************************************************************************
RDSWORK1  RESET     KEY22               * Make sure key is reset
          READ      WORK1,KEY22;;       * Position on key
          RETURN
.
RDWORK1   RESET     KEY22               * Make sure key is reset
          MOVE      ZERO,OVRCD          * Assume successful read
          READ      WORK1,KEY22;XCLAIM,XHFUND,XHDPEQ,XMBS,XMBSFEE:
                                XVAR00,XVAR01,XVAR02,XVAR03,XVAR04,XVAR05:
                                XVAR06,XVAR07,XVAR08,XVAR09,XVAR10,XVAR11:
                                XVAR12,XVAR13,XVAR14,XVAR15,XVAR16,XVAR17
          GOTO      OVERCOND IF OVER    * Unsuccessful read
          RETURN
.
RDKWORK1  MOVE      ZERO,OVRCD          * Assume successful read
          READKS    WORK1;XCLAIM,XHFUND,XHDPEQ,XMBS,XMBSFEE:
                          XVAR00,XVAR01,XVAR02,XVAR03,XVAR04,XVAR05:
                          XVAR06,XVAR07,XVAR08,XVAR09,XVAR10,XVAR11:
                          XVAR12,XVAR13,XVAR14,XVAR15,XVAR16,XVAR17
          GOTO      OVERCOND IF OVER    * Unsuccessful read
          RETURN
.
UPWORK1   UPDATE    WORK1;XCLAIM,XHFUND,XHDPEQ,XMBS,XMBSFEE:
                          XVAR00,XVAR01,XVAR02,XVAR03,XVAR04,XVAR05:
                          XVAR06,XVAR07,XVAR08,XVAR09,XVAR10,XVAR11:
                          XVAR12,XVAR13,XVAR14,XVAR15,XVAR16,XVAR17
          RETURN
.
WRWORK1   RESET     KEY22               * Make sure key is reset
          WRITE     WORK1,KEY22;KEY22,XMBSFEE:
                               XVAR00,XVAR01,XVAR02,XVAR03,XVAR04,XVAR05:
                               XVAR06,XVAR07,XVAR08,XVAR09,XVAR10,XVAR11:
                               XVAR12,XVAR13,XVAR14,XVAR15,XVAR16,XVAR17
          RETURN
+
.==============================================================================
.
          INC       STD001IO
          INC       CALCDAYS
          INC       NHOSPDAY
          INC       PATCODKY
          INC       PATFNDDS
          INC       PATMCHRD                * Miscellaneous Charges read routine
          INC       PATITMRD
          INC       TFILENAM                     * Generate Temp File Name
.
          INC       IBASEQIO/INC                 * Sequential Numbers File
          INC       PATCODIO/INC
          INC       PATDSCIO/INC
          INC       PATDTRIO/INC
          INC       PATFN1IO/INC
          INC       PATITMIO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PATTFEIO/INC
          INC       PATTRNIO/INC
          INC       PATMMBIO/INC
          INC       PATMCHIO/INC
          INC       PMSVX1IO/INC
          INC       WEBERRIO/INC                 * Web Server Error Logging
