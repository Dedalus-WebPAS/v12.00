.*****************************************************************************
.* System    :   Patient Management System                                   *
.* Program   :   HL7REGEN                                                    *
.* Desc      :   Provide functionality for user to recreate HL7 messages     *
.*               based on selected criteria.                                 *
.*****************************************************************************
.* Date      :   15/04/2011                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program will present the user with a number of         *
.*               different options to regenerate various HL7 messages based  *
.*               on current patient/visit status.                            *
.* Mods      :                                                               *
.*****************************************************************************
.*        V12.00.01  21/05/2025 Bella Turco            TSK 0955096           *
.*                   Alphanumeric changes                                    *
.*        V11.04.01  28/03/2024 Thanh T                TSK 0935314           *
.*                   Recompiled for PMSQDRFD changes                         *
.*****************************************************************************
.*        V11.02.01  09/02/2022  Thanh T          TSK 0905641                *
.*                   Recompiled as OUTMA1FD/WATTR1FD changes                 *
.*        V11.00.01  01/04/2020  J.Tan             TSK 0868813               *
.*                   Changed PKNAME to DIM80                                 *
.*        V10.13.01  24/10/2018  Steve Armstrong  TSK 0863512                *
.*                   Recompiled for changes to DGCLICUD, DGCLICCE & DGCLICAE.*
.*                   Also added read of pmsvx1af prior to above DGCLI..      *
.*                   calls.                                                  *
.*****************************************************************************
.*        V10.11.02  28/12/2017  Ania P           TSK 0848601                *
.*                   Recompiled for changes to DGCLICAE                      *
.*        V10.11.01  27/12/2017  Steve Armstrong  TSK 0850165                *
.*                   Recompiled for changes to DGCLICAC.                     *
.*****************************************************************************
.*        V10.06.02  27/08/2015  Steve Armstrong   CAR 296884                *
.*                   Fixed population of PVIBILL for A44 for O/P (Booked or  *
.*                   DNA) where no patvisaf record exists.                   *
.*        V10.06.01  12/03/2015  Steve Armstrong   CAR 314108                *
.*                   Removed definition of PTCGDATE as PATCGPFD is no longer *
.*                   in use                                                  *
.*****************************************************************************
.*        V10.05.01  20/01/2014  Jill Parkinson CAR 309731                   *
.*                   Mods to only send A03 for outpatients with a departure  *
.*                   time completed                                          *
.*****************************************************************************
.*        V10.04.01  21/03/2014  Steve Armstrong   CAR 298483                *
.*                   Recompiled for changes to DGCLICON & DGCLICOC           *
.*****************************************************************************
.*        V10.03.09  14/11/2013  Steve Armstrong   CAR 294040                *
.*                   Recompiled for changes to DGCLICPE                      *
.*        V10.03.08  14/11/2013  J.Tan            CAR 292492                 *
.*                   Added SETX000 and use STD002FD instead of STD001FD      *
.*        V10.03.07  10/09/2013  Steve Armstrong  CAR 291089                 *
.*                   Recompiled for changes to PMSQVIIO.                     *
.*        V10.03.06  21/08/2013  Steve Armstrong   CAR 290365                *
.*                   Added load of transfer doctor (TADOCT) into admission   *
.*                   attending doctor (ADOCTA) for Option 11.                *
.*                   Fixed A14 to be sent with A01 in Option 11 so that the  *
.*                   claim type and attending doctor are set correctly.      *
.*        V10.03.05  25/07/2013  Steve Armstrong   CAR 268961                *
.*                   Fixed loading of Old U/R in Option 13 (PCHG0000).       *
.*        V10.03.04  18/05/2013  Steve Armstrong   CAR 268961                *
.*                   Recompiled for changes to PMSQVIFD                      *
.*                   Added read on I/P discharge record for Patient Visit    *
.*                   option prior to processing normal messages (PINP5000).  *
.*        V10.03.03  03/05/2013  Steve Armstrong   CAR 268961                *
.*                   Mods to speed up the processing:                        *
.*                    - Mods to IPRE0000, IADM0000, IFED0000, IONL0000,      *
.*                      IDWC0000, OPBK0000, OPAT0000 & EREG0000 to use a     *
.*                      direct read on pmsvx1af using index 3 and to do this *
.*                      prior to reading the pmi related records.            *
.*                    - Mods to IFED0000 to loop through emrvisaf for the    *
.*                      U/R number, instead of patvisaf.                     *
.*                    - Mods to OPBK0000 to position in outbokaf to only     *
.*                      read future bookings.                                *
.*                    - Mods to OPAT0000 to position in outbokaf to only     *
.*                      read attended bookings.                              *
.*                   Added display of hospital approval number when sending  *
.*                   facility is input.                                      *
.*                   Option 11 renamed "Patient Visit" and modified to       *
.*                   cater for other visit types besides just inpatients.    *
.*                   Added Option 12 (Patient Merge) and Option 13 (Change   *
.*                   U/R).                                                   *
.*        V10.03.02  01/05/2013  Steve Armstrong   CAR 284376                *
.*                   Recompiled for changes to BRHLCOMN so that PMI messages *
.*                   can use H7CIHOSP for Facility Code.                     *
.*                   Recompiled for changes to DGCLICUP.                     *
.*        V10.03.01  29/10/2011  Steve Armstrong CAR 249257                  *
.*                   Mods to IVIS0000 routine to read the corresponding      *
.*                   patre1af record prior to sending an A01 message.        *
.*****************************************************************************
.*        V10.02.03  27/10/2011  Steve Armstrong CAR 251323                  *
.*                   Recompiled for PMSQVIFD changes                         *
.*        V10.02.02  12/10/2011  Steve Armstrong   CAR 251644                *
.*                   Recompiled for changes to PMSQVIFD/PMSQVIIO.            *
.*        V10.02.01  21/09/2011  Steve Armstrong   CAR 251515                *
.*                   Recompiled for changes to WATQUEFD.                     *
.*****************************************************************************

          INC       STD002FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
.
          INC       ALLCONFD/INC
          INC       ALLREFFD/INC
          INC       BOKRC1FD/INC
          INC       EMRCONFD/INC
          INC       EMRVISFD/INC
          INC       HL7INBFD/INC
          INC       MEHLERFD/INC
          INC       MLTHCPFD/INC
          INC       NHIMASFD/INC
          INC       NZHISIFD/INC
          INC       OUTBB1FD/INC
          INC       OUTBOAFD/INC
          INC       OUTCANFD/INC
          INC       OUTCONFD/INC
          INC       OUTCTYFD/INC
          INC       OUTMA1FD/INC
          INC       OUTPREFD/INC
          INC       OUTRSHFD/INC
          INC       OUTSITFD/INC
          INC       PATALRFD/INC
          INC       PATCALAG/INC
          INC       PATCODFD/INC
          INC       PATCOMM/INC
          INC       PATCONFD/INC
          INC       PATDHEAD/INC
          INC       PATDO1FD/INC
          INC       PATDSCFD/INC
          INC       PATECDFD/INC
          INC       PATGSRFD/INC
          INC       PATHSPFD/INC
          INC       PATMA1FD/INC
          INC       PATMI1FD/INC
          INC       PATNIDFD/INC
          INC       PATONLFD/INC
          INC       PATPR1FD/INC
          INC       PATRE1FD/INC
          INC       PATTRNFD/INC
          INC       PATUADFD/INC
          INC       PATUNAFD/INC
          INC       PATVISFD/INC
          INC       PATWR1FD/INC
          INC       PMSBRQFD/INC
          INC       PMSHCPFD/INC
          INC       PMSPX2FD/INC
          INC       PMSVX1FD/INC
          INC       WATCONFD/INC
          INC       WATTR1FD/INC
          INC       WATTX1FD/INC
          INC       WEBSECFD/INC
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ADMITFLG  FORM      1            * patunaaf admission cancellation found
.                                   0 = Yes
.                                   1 = No
BJDAY     FORM      3
.
CANCFLAG  FORM      1            * send cancel messages flag
.                                   0 = Yes
.                                   1 = No
CANCLFLG  FORM      1            * patunaaf preadmission cancellation found
.                                   0 = Yes
.                                   1 = No
CJDAY     FORM      3
COUNT     FORM      2
COUNTER   FORM      8
CURRDATE  DIM       8
.
DIM3      DIM       3
DIM8      DIM       8
DIM8A     DIM       8
DIM8B     DIM       8
DISCHFLG  FORM      1            * patunaaf discharge cancellation found
.                                   0 = Yes
.                                   1 = No
.
FILEPRFX  DIM       3
FORM3     FORM      3
FRSTGNAM  DIM       40
FULLGNAM  DIM       80
.
IBAMFLAG  FORM      1
.
MERGEDUR  FORM      1             * merged U/R flag (for option 12)
.                                     0 = second U/R selected is not merged
.                                     1 = second U/R selected is also merged
.
NEWURNO   DIM       8
NMPNUMB   DIM       20
.
OLDURNO   DIM       8
OPTNDESC  DIM       31
.
PMHCACTN  DIM       1
.
SAVALTYP  DIM       1
SAVASTAT  DIM       1
SAVDSTAT  DIM       3
SAVEADAT  DIM       8
SAVEATIM  DIM       8
SAVEBED   DIM       3
SAVEDATE  DIM       8
SAVEDDAT  DIM       8
SAVEDTIM  DIM       8
SAVETIME  DIM       8
SAVEHOSP  DIM       3
SAVEPDAT  DIM       8
SAVEPTIM  DIM       8
SAVETYPE  DIM       1
SAVEURNO  DIM       8
SAVEWARD  DIM       3
SAVKEY30  DIM       30
SAVTXWRD  DIM       3
SCNDGNAM  DIM       40
.
VISITDSC  DIM       12
VISITNUM  DIM       8
VISITTYP  FORM      1             * Visit Type
.                                     1 = ED
.                                     2 = O/P
.                                     3 = I/P
.                                     4 = W/L
.
.
. PROGRAM CONSTANTS
. -----------------
OPTDES01  INIT      " Patient Demographic "
OPTDES02  INIT      " Active Medical Staff "
OPTDES03  INIT      " Inpatient Pre-admissions "
OPTDES04  INIT      " Inpatient Admissions "
OPTDES05  INIT      " I/P Admissions from ED "
OPTDES06  INIT      " Inpatients On-leave "
OPTDES07  INIT      " I/P Disch's without coding "
OPTDES08  INIT      " Outpatient Bookings "
OPTDES09  INIT      " Outpatient Attendances "
OPTDES10  INIT      " Emergency Registrations "
OPTDES11  INIT      " Patient Visit "
OPTDES12  INIT      " Patient Merge "
OPTDES13  INIT      " Change U/R "
TILDA30   INIT      "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
VISDESC1  INIT      "Emergency   "
VISDESC2  INIT      "Outpatient  "
VISDESC3  INIT      "Inpatient   "
VISDESC4  INIT      "Waiting List"
.
.
.
PRGID     INIT      "HL7REGEN"
PRGNAM    INIT      "HL7 Message Regeneration"
VERSION   INIT      "V12.00.01"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      SETX0000               * Setup common variables
          CALL      INIT0000               * initialisation and open files
.
MAIN0050  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
.
MAIN0070  CALL      GRAT0000               * get receiving application tag
          BRANCH    EXIT,MAIN0050          * nothing input
.
          BRANCH    COPTION,MAIN0100:      * patient demographic
                            MAIN0200:      * active medical staff
                            MAIN0300:      * inpatient preadmissions
                            MAIN0400:      * inpatient admissions
                            MAIN0500:      * inpatient admissions from emerg.
                            MAIN0600:      * inpatients on-leave
                            MAIN0700:      * I/P discharges without coding
                            MAIN0800:      * outpatient bookings
                            MAIN0900:      * outpatient attendances
                            MAIN1000:      * emergency registrations
                            MAIN1100:      * patient visit
                            MAIN1200:      * patient merge
                            MAIN1300       * change U/R
.
.         Patient Demographic
.
MAIN0100  CALL      PDEM0000
          GOTO      MAIN0070
.
.         Active Medical Staff
.
MAIN0200  CALL      AMED0000
          GOTO      MAIN0070
.
.         Inpatient Preadmissions
.
MAIN0300  CALL      IPRE0000
          GOTO      MAIN0070
.
.         Inpatient Admissions
.
MAIN0400  CALL      IADM0000
          GOTO      MAIN0070
.
.         Inpatient Admissions from Emergency
.
MAIN0500  CALL      IFED0000
          GOTO      MAIN0070
.
.         Inpatients On-Leave
.
MAIN0600  CALL      IONL0000
          GOTO      MAIN0070
.
.         Inpatient Discharges Without Coding
.
MAIN0700  CALL      IDWC0000
          GOTO      MAIN0070
.
.         Outpatient Bookings
.
MAIN0800  CALL      OPBK0000
          GOTO      MAIN0070
.
.         Outpatient Attendances
.
MAIN0900  CALL      OPAT0000
          GOTO      MAIN0070
.
.         Emergency Registrations
.
MAIN1000  CALL      EREG0000
          GOTO      MAIN0070
.
.         Patient Visit
.
MAIN1100  CALL      PVIS0000
          GOTO      MAIN0070
.
.         Patient Merge
.
MAIN1200  CALL      PMRG0000
          GOTO      MAIN0070
.
.         Change U/R
.
MAIN1300  CALL      PCHG0000
          GOTO      MAIN0070
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"bokrc1af";
          OPEN      BOKRC1A1,"bokrc1af"
.
          DISPLAY   *P64:24,"emrvisaf";
          OPEN      EMRVISA1,"emrvisaf"
          OPEN      EMRVISA2,"emrvisaf"
.
          DISPLAY   *P64:24,"mlthcpaf";
          OPEN      MLTHCPA1,"mlthcpaf"
.
          DISPLAY   *P64:24,"outsitaf";
          OPEN      OUTSITA1,"outsitaf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P64:24,"patdschf";
          OPEN      PATDSCH1,"patdschf"
.
          DISPLAY   *P64:24,"patecdaf";
          OPEN      PATECDA1,"patecdaf"
.
          DISPLAY   *P64:24,"patgsrnf";
          OPEN      PATGSRN1,"patgsrnf"
          OPEN      PATGSRN2,"patgsrnf"
          OPEN      PATGSRN3,"patgsrnf"
          OPEN      PATGSRN4,"patgsrnf"
.
          DISPLAY   *P64:24,"pathspaf";
          OPEN      PATHSPA1,"pathspaf"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PATMI1A2,"patmi1af"
.
          DISPLAY   *P64:24,"patonlvf";
          OPEN      PATONLV1,"patonlvf"
.
          DISPLAY   *P64:24,"patpr1af";
          OPEN      PATPR1A1,"patpr1af"
          OPEN      PATPX1A1,"patpx1af"
.
          DISPLAY   *P64:24,"patre1af";
          OPEN      PATRE1A1,"patre1af"
.
          DISPLAY   *P64:24,"pattranf";
          OPEN      PATTRAN2,"pattranf"
.
          DISPLAY   *P64:24,"patuadaf";
          OPEN      PATUADA1,"patuadaf"
.
          DISPLAY   *P64:24,"patunaaf";
          OPEN      PATUNAA1,"patunaaf"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA1,"patvisaf"
          OPEN      PATVISA2,"patvisaf"
.
          DISPLAY   *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
          OPEN      PMSVX1A3,"pmsvx1af"
.
          DISPLAY   *P64:24,"wattr1af";
          OPEN      WATTR1A1,"wattr1af"
.
          DISPLAY   *P64:24,"wattx1af";
          OPEN      WATTX1A1,"wattx1af"
.
          DISPLAY   *P64:24,"websecaf";
          OPEN      WEBSECA1,"websecaf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,THIRTY2;*139,OTCNA03M:
                                     *140,OTCNA13M
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run selected option                     *
.*                        TRUE  (1)  Exit option selected                    *
.*****************************************************************************
.
OPTN0000  HLINE     *G37,2,53,80
          DISPLAY   *P1:3,*EF,*P1:4,*V2LON,SP1,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,SP1,ONE,*HOFF,". Patient Demographic (A31)":
                    *P1:6,*V2LON,SP1,TWO,*HOFF,". Active Medical Staff (M02)":
                    *P1:7,*V2LON,SP1,THREE,*HOFF,". Inpatient Preadmissions ":
                    "(A14)":
                    *P1:8,*V2LON,SP1,FOUR,*HOFF,". Inpatient Admissions (A01)":
                    *P1:9,*V2LON,SP1,FIVE,*HOFF,". Inpatient Admissions from ":
                    "Emergency (A01)":
                    *P1:10,*V2LON,SP1,SIX,*HOFF,". Inpatients On-leave ":
                    "(A01), (A21)":
                    *P1:11,*V2LON,SP1,SEVEN,*HOFF,". Inpatient Discharges ":
                    "without coding (A01), (A03)":
                    *P1:12,*V2LON,SP1,EIGHT,*HOFF,". Outpatient Bookings (A05)":
                    *P1:13,*V2LON,SP1,NINE,*HOFF,". Outpatient Attendances ":
                    "(A04)":
                    *P1:14,*V2LON,TEN,*HOFF,". Emergency Registrations ":
                    "(A04)":
                    *P1:15,*V2LON,TEN1,*HOFF,". Patient Visit":
                    *P1:16,*V2LON,TEN2,*HOFF,". Patient Merge (A34)":
                    *P1:17,*V2LON,TEN3,*HOFF,". Change U/R (A44)"
.
OPTN0500  KEYIN     *P1:19,*EL,"Select Option : ":
                    *P17:19,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * patient demographic
                            OPTN9000:            * active medical staff
                            OPTN9000:            * inpatient preadmissions
                            OPTN9000:            * inpatient admissions
                            OPTN9000:            * I/P admissions from emergency
                            OPTN9000:            * inpatients on leave
                            OPTN9000:            * I/P discharges without coding
                            OPTN9000:            * outpatient bookings
                            OPTN9000:            * outpatient attendances
                            OPTN9000:            * emergency registrations
                            OPTN9000:            * inpatient visit
                            OPTN9000:            * patient merge
                            OPTN9000             * change U/R
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  LOAD      OPTNDESC,COPTION,OPTDES01,OPTDES02,OPTDES03,OPTDES04:
                                     OPTDES05,OPTDES06,OPTDES07,OPTDES08:
                                     OPTDES09,OPTDES10,OPTDES11,OPTDES12:
                                     OPTDES13
          DISPLAY   *P53:2,*V2LON,*+,OPTNDESC
.
          MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               PDEM0000              Called by: MAIN0000   *
.*               Send an A31 (PMI Update) message for a given U/R            *
.*****************************************************************************
.
PDEM0000  DISPLAY   *P1:6,*EF,"U/R Number:"
          MOVE      SIX,EVERT
          MOVE      TEN3,ECOL
          CALL      GPAT0000                     * get patient U/R
          BRANCH    EXIT,PDEM9999                * nothing entered
.
PDEM1000  MOVE      EIGHT,EVERT
          CALL      GSND0000                     * get sending facility
          BRANCH    EXIT,PDEM0000                * nothing input
.
          CALL      CONTQST                      * ask if ok to continue
          BRANCH    CEXIT,PDEM2000:              * yes
                          PDEM1000:              * no
                          PDEM9999               * cancel
.
PDEM2000  CALL      PMIGTNID                     * get national id
          MOVE      NMPNUMB,PTNINMPI
          MOVE      ONE,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICUP                     * trigger A31 message
.
          DISPLAY   *P1:24,*EL,"Message successfully triggered.  ";
          CALL      HITENTER
.
PDEM9999  RETURN
+
.*****************************************************************************
.*                               AMED0000              Called by: MAIN0000   *
.*         Send an M02 message for each active doctor on patdo1af            *
.*****************************************************************************
.
AMED0000  MOVE      SIX,EVERT
          CALL      GSND0000                     * get sending facility
          BRANCH    EXIT,AMED9999                * nothing input
.
          CALL      CONTQST                      * ask if ok to continue
          BRANCH    CEXIT,AMED1000:              * yes
                          AMED0000:              * no
                          AMED9999               * cancel
.
.         Loop through patdo1af looking for active doctor records
.
AMED1000  DISPLAY   *P1:24,*EL,"Processing:";
          MOVE      ZERO,COUNTER                 * initialise counter
.
          MOVE      SP6,KEY6
          CALL      RDSDOCT1                     * position at start of file
AMED1500  CALL      RDKDOCT1                     * read next record
          BRANCH    OVRCD,AMED9000               * eof - finished
.
          DISPLAY   *P13:24,*EL,*V2LON,DCODE;
.
          COMPARE   ZERO,DRSTAT                  * active doctor ?
          GOTO      AMED1500 IF NOT EQUAL        * no - ignore record
.
.         Get the pmshcpaf record for the doctor to populate the
.         HL7 holding table fields (in pmsqdraf)
.
          PACK      KEY10,DCODE,SP10
          CALL      RDPMHCP1                     * hcp record found ?
          BRANCH    OVRCD,AMED1500               * no - ignore record
.
.         Check if the doctor is specific to a facility
.
          MATCH     "1",PTDOHOSS                 * doctor hospital specific ?
          GOTO      AMED2000 IF NOT EQUAL        * no
.
.         The doctor is hospital specific, so check if he is specific
.         for the selected facility
.
          PACK      KEY13,PTHSHOSP,PMHCHCPC
          CALL      RDMLHCP1                     * record on file ?
          BRANCH    OVRCD,AMED1500               * no - ignore record
.
AMED2000  MOVE      "A",PMHCACTN                 * action flag for DGCLIM02
          MOVE      TWO,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLIM02                     * trigger M02 message
          ADD       ONE,COUNTER                  * increment message counter
.
          GOTO      AMED1500                     * get next doctor record
.
AMED9000  DISPLAY   *P1:24,*EL,*+,COUNTER,*-:
                    " Messages successfully triggered.  ";
          CALL      HITENTER
.
AMED9999  RETURN
+
.*****************************************************************************
.*                               IPRE0000              Called by: MAIN0000   *
.*        Send an A14 message for each pre-admission record in patmi1af      *
.*        for the selected facility                                          *
.*****************************************************************************
.
IPRE0000  MOVE      SIX,EVERT
          CALL      GSND0000                     * get sending facility
          BRANCH    EXIT,IPRE9999                * nothing input
.
          CALL      CONTQST                      * ask if ok to continue
          BRANCH    CEXIT,IPRE1000:              * yes
                          IPRE0000:              * no
                          IPRE9999               * cancel
.
.         Loop through patmi1af looking for pre-admission records
.
IPRE1000  DISPLAY   *P1:24,*EL,"Processing:";
          MOVE      ZERO,COUNTER                 * initialise counter
.
          PACK      KEY9,ONE,SP9
          CALL      RDSMISS2                     * position on pre-admissions
IPRE1500  CALL      RDKMISS2                     * read next record
          BRANCH    OVRCD,IPRE9000               * eof - finished
.
          COMPARE   ONE,ASTAT                    * pre-admission still ?
          GOTO      IPRE9000 IF NOT EQUAL        * no - finished
.
          DISPLAY   *P13:24,*EL,*V2LON,AADMNO;
.
.         Get the rest of the visit related details so that the HL7 holding
.         table (pmsqviaf) will be populated.
.
          PACK      KEY11,PTHSHOSP,AADMNO
          CALL      RDPMVX13                     * visit ext. record found ?
          BRANCH    OVRCD,IPRE1500               * no - ignore record
.
.         Get the PMI details so that the HL7 holding table (pmsqptaf)
.         will be populated.
.
          MOVE      AURNO,KEY8
          CALL      RDMAST1                      * U/R on file ?
          BRANCH    OVRCD,IPRE1500               * no - ignore record
.
          MOVE      AURNO,KEY8
          CALL      RDPMPX21                     * U/R ext. on file ?
          BRANCH    OVRCD,IPRE1500               * no - ignore record
.
.         Clear admission related fields that wont be populated for a
.         pre-admission
.
          CALL      CLPATDSC
          CALL      CLPATTRN
.
          MOVE      AADMNO,KEY8
          CALL      RDPTRES1                     * pra record on file ?
          IF        OVRCD = 1
            PACK      PKNAME,SP70,SP20           * no
            MOVE      SP35,PKADD1
            MOVE      SP35,PKADD2
            MOVE      SP35,PKSUBR
            MOVE      SP35,PKADD4
            MOVE      SP8,PKPOST
            MOVE      SP20,PKTELEP
            MOVE      SP20,PKTELEB
            MOVE      SP10,PKRELP
            MOVE      SP20,PTREMOBL
          ENDIF
.
          CALL      PMIGTNID                     * get national id
          MOVE      NMPNUMB,PTNINMPI
          MOVE      THREE,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICPE                     * trigger A14 message
.
          ADD       ONE,COUNTER                  * increment message counter
.
          GOTO      IPRE1500                     * get next admission record
.
IPRE9000  DISPLAY   *P1:24,*EL,*+,COUNTER,*-:
                    " Messages successfully triggered.  ";
          CALL      HITENTER
.
IPRE9999  RETURN
+
.*****************************************************************************
.*                               IADM0000              Called by: MAIN0000   *
.*        Send an A01 message for each current admission record in patmi1af  *
.*        for the selected facility                                          *
.*****************************************************************************
.
IADM0000  MOVE      SIX,EVERT
          CALL      GSND0000                     * get sending facility
          BRANCH    EXIT,IADM9999                * nothing input
.
          CALL      CONTQST                      * ask if ok to continue
          BRANCH    CEXIT,IADM1000:              * yes
                          IADM0000:              * no
                          IADM9999               * cancel
.
.         Loop through patmi1af looking for admission records
.
IADM1000  DISPLAY   *P1:24,*EL,"Processing:";
          MOVE      ZERO,COUNTER                 * initialise counter
.
          PACK      KEY9,TWO,SP9
          CALL      RDSMISS2                     * position on admissions
IADM1500  CALL      RDKMISS2                     * read next record
          BRANCH    OVRCD,IADM9000               * eof - finished
.
          COMPARE   TWO,ASTAT                    * admission still ?
          GOTO      IADM9000 IF NOT EQUAL        * no - finished
.
          DISPLAY   *P13:24,*EL,*V2LON,AADMNO;
.
.         Get the rest of the visit related details so that the HL7 holding
.         table (pmsqviaf) will be populated.
.
          PACK      KEY11,PTHSHOSP,AADMNO
          CALL      RDPMVX13                     * visit ext. record found ?
          BRANCH    OVRCD,IADM1500               * no - ignore record
.
.         Get the PMI details so that the HL7 holding table (pmsqptaf)
.         will be populated.
.
          MOVE      AURNO,KEY8
          CALL      RDMAST1                      * U/R on file ?
          BRANCH    OVRCD,IADM1500               * no - ignore record
.
          MOVE      AURNO,KEY8
          CALL      RDPMPX21                     * U/R ext. on file ?
          BRANCH    OVRCD,IADM1500               * no - ignore record
.
          CALL      CLPATDSC                     * clear discharge fields
.
.         Get the last transfer record for the patient
.
          PACK      KEY30,AADMNO,TILDA30
          CALL      RDSTRAN2                     * position after admission
          CALL      RDPTRAN2                     * read previous record
          BRANCH    OVRCD,IADM1500               * eof - ignore record
.
          MOVE      AADMNO,KEY8
          CALL      RDPTRES1                     * pra record on file ?
          IF        OVRCD = 1
            PACK      PKNAME,SP70,SP20           * no
            MOVE      SP35,PKADD1
            MOVE      SP35,PKADD2
            MOVE      SP35,PKSUBR
            MOVE      SP35,PKADD4
            MOVE      SP8,PKPOST
            MOVE      SP20,PKTELEP
            MOVE      SP20,PKTELEB
            MOVE      SP10,PKRELP
            MOVE      SP20,PTREMOBL
          ENDIF
.
          CALL      PMIGTNID                     * get national id
          MOVE      NMPNUMB,PTNINMPI
          MOVE      FOUR,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICAD                     * trigger A01 message
.
          ADD       ONE,COUNTER                  * increment message counter
.
          GOTO      IADM1500                     * get next admission record
.
IADM9000  DISPLAY   *P1:24,*EL,*+,COUNTER,*-:
                    " Messages successfully triggered.  ";
          CALL      HITENTER
.
IADM9999  RETURN
+
.*****************************************************************************
.*                               IFED0000              Called by: MAIN0000   *
.*        Send an A01 message for each current admission record in patmi1af  *
.*        for the selected facility, where the admission was from ED.        *
.*****************************************************************************
.
IFED0000  MOVE      SIX,EVERT
          CALL      GSND0000                     * get sending facility
          BRANCH    EXIT,IFED9999                * nothing input
.
          CALL      CONTQST                      * ask if ok to continue
          BRANCH    CEXIT,IFED1000:              * yes
                          IFED0000:              * no
                          IFED9999               * cancel
.
.         Loop through patmi1af looking for admission records
.
IFED1000  DISPLAY   *P1:24,*EL,"Processing:";
          MOVE      ZERO,COUNTER                 * initialise counter
.
          PACK      KEY9,TWO,SP9
          CALL      RDSMISS2                     * position on admissions
IFED1500  CALL      RDKMISS2                     * read next record
          BRANCH    OVRCD,IFED9000               * eof - finished
.
          COMPARE   TWO,ASTAT                    * admission still ?
          GOTO      IFED9000 IF NOT EQUAL        * no - finished
.
          DISPLAY   *P13:24,*EL,*V2LON,AADMNO;
.
.         Loop through the visit file looking for ED visits for this U/R
.         to see if any were subsequently admitted under the same admission
.         number.
.
          PACK      KEY16,AURNO,TILDA30
          CALL      RSEMVIS3                     * position on ED visits for UR
IFED2000  CALL      RPEMVIS3                     * read previous record
          BRANCH    OVRCD,IFED1500
.
          MATCH     AURNO,EMVIURNO               * same U/R number still ?
          GOTO      IFED1500 IF NOT EQUAL        * no - ignore record
.
          MOVE      AADMNO,DIM8
          MATCH     DIM8,EMVIPADM                * same I/P admission number ?
          GOTO      IFED2000 IF NOT EQUAL        * no - ignore visit
.
.         A valid admission from ED has been found.
.         Get the rest of the visit related details so that the HL7 holding
.         table (pmsqviaf) will be populated.
.
          PACK      KEY11,PTHSHOSP,AADMNO
          CALL      RDPMVX13                     * visit ext. record found ?
          BRANCH    OVRCD,IFED1500               * no - ignore record
.
.         Get the PMI details so that the HL7 holding table (pmsqptaf)
.         will be populated.
.
          MOVE      AURNO,KEY8
          CALL      RDMAST1                      * U/R on file ?
          BRANCH    OVRCD,IFED1500               * no - ignore record
.
          MOVE      AURNO,KEY8
          CALL      RDPMPX21                     * U/R ext. on file ?
          BRANCH    OVRCD,IFED1500               * no - ignore record
.
          CALL      CLPATDSC                     * clear discharge fields
.
.         Get the last transfer record for the patient
.
          PACK      KEY30,AADMNO,TILDA30
          CALL      RDSTRAN2                     * position after admission
          CALL      RDPTRAN2                     * read previous record
          BRANCH    OVRCD,IFED1500               * eof - ignore record
.
          MOVE      AADMNO,KEY8
          CALL      RDPTRES1                     * pra record on file ?
          IF        OVRCD = 1
            PACK      PKNAME,SP70,SP20           * no
            MOVE      SP35,PKADD1
            MOVE      SP35,PKADD2
            MOVE      SP35,PKSUBR
            MOVE      SP35,PKADD4
            MOVE      SP8,PKPOST
            MOVE      SP20,PKTELEP
            MOVE      SP20,PKTELEB
            MOVE      SP10,PKRELP
            MOVE      SP20,PTREMOBL
          ENDIF
.
          CALL      PMIGTNID                     * get national id
          MOVE      NMPNUMB,PTNINMPI
          MOVE      FIVE,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICAD                     * trigger A01 message
.
          ADD       ONE,COUNTER                  * increment message counter
.
          GOTO      IFED1500                     * get next admission record
.
IFED9000  DISPLAY   *P1:24,*EL,*+,COUNTER,*-:
                    " Messages successfully triggered.  ";
          CALL      HITENTER
.
IFED9999  RETURN
+
.*****************************************************************************
.*                               IONL0000              Called by: MAIN0000   *
.*        Send an A01 and A21 message for each admission currently on-leave  *
.*        in patmi1af for the selected facility                              *
.*****************************************************************************
.
IONL0000  MOVE      SIX,EVERT
          CALL      GSND0000                     * get sending facility
          BRANCH    EXIT,IONL9999                * nothing input
.
          CALL      CONTQST                      * ask if ok to continue
          BRANCH    CEXIT,IONL1000:              * yes
                          IONL0000:              * no
                          IONL9999               * cancel
.
.         Loop through patmi1af looking for admission records with a status
.         of 'on-leave'
.
IONL1000  DISPLAY   *P1:24,*EL,"Processing:";
          MOVE      ZERO,COUNTER                 * initialise counter
.
          PACK      KEY9,FOUR,SP9
          CALL      RDSMISS2                     * position on admissions
IONL1500  CALL      RDKMISS2                     * read next record
          BRANCH    OVRCD,IONL9000               * eof - finished
.
          COMPARE   FOUR,ASTAT                   * on-leave admission still ?
          GOTO      IONL9000 IF NOT EQUAL        * no - finished
.
          DISPLAY   *P13:24,*EL,*V2LON,AADMNO;
.
.         Get the rest of the visit related details so that the HL7 holding
.         table (pmsqviaf) will be populated.
.
          PACK      KEY11,PTHSHOSP,AADMNO
          CALL      RDPMVX13                     * visit ext. record found ?
          BRANCH    OVRCD,IONL1500               * no - ignore record
.
.         Get the PMI details so that the HL7 holding table (pmsqptaf)
.         will be populated.
.
          MOVE      AURNO,KEY8
          CALL      RDMAST1                      * U/R on file ?
          BRANCH    OVRCD,IONL1500               * no - ignore record
.
          MOVE      AURNO,KEY8
          CALL      RDPMPX21                     * U/R ext. on file ?
          BRANCH    OVRCD,IONL1500               * no - ignore record
.
          CALL      CLPATDSC                     * clear discharge fields
.
.         Get the last transfer record for the patient
.
          PACK      KEY30,AADMNO,TILDA30
          CALL      RDSTRAN2                     * position after admission
          CALL      RDPTRAN2                     * read previous record
          BRANCH    OVRCD,IONL1500               * eof - ignore record
.
.         Get the on-leave record for the admission
.
          PACK      KEY14,TWARD,TBED,AADMNO
          CALL      RDONLV1
          IF        OVRCD = 1
            MOVE      SP8,OERDATE
          ENDIF
.
          MOVE      AADMNO,KEY8
          CALL      RDPTRES1                     * pra record on file ?
          IF        OVRCD = 1
            PACK      PKNAME,SP70,SP20           * no
            MOVE      SP35,PKADD1
            MOVE      SP35,PKADD2
            MOVE      SP35,PKSUBR
            MOVE      SP35,PKADD4
            MOVE      SP8,PKPOST
            MOVE      SP20,PKTELEP
            MOVE      SP20,PKTELEB
            MOVE      SP10,PKRELP
            MOVE      SP20,PTREMOBL
          ENDIF
.
          CALL      PMIGTNID                     * get national id
          MOVE      NMPNUMB,PTNINMPI
          MOVE      SIX,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICAD                     * trigger A01 message
.
          MOVE      SEVEN,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICPO                     * trigger A21 message
.
          ADD       TWO,COUNTER                  * increment message counter
.
          GOTO      IONL1500                     * get next admission record
.
IONL9000  DISPLAY   *P1:24,*EL,*+,COUNTER,*-:
                    " Messages successfully triggered.  ";
          CALL      HITENTER
.
IONL9999  RETURN
+
.*****************************************************************************
.*                               IDWC0000              Called by: MAIN0000   *
.*        Send an A01 and A03 message for each discharged admission          *
.*        on patmi1af for the selected facility, where there is no coding.   *
.*****************************************************************************
.
IDWC0000  MOVE      SIX,EVERT
          CALL      GSND0000                     * get sending facility
          BRANCH    EXIT,IDWC9999                * nothing input
.
          CALL      CONTQST                      * ask if ok to continue
          BRANCH    CEXIT,IDWC1000:              * yes
                          IDWC0000:              * no
                          IDWC9999               * cancel
.
.         Loop through patmi1af looking for admission records with a status
.         of discharged
.
IDWC1000  DISPLAY   *P1:24,*EL,"Processing:";
          MOVE      ZERO,COUNTER                 * initialise counter
.
          PACK      KEY9,THREE,SP9
          CALL      RDSMISS2                     * position on admissions
IDWC1500  CALL      RDKMISS2                     * read next record
          BRANCH    OVRCD,IDWC9000               * eof - finished
.
          COMPARE   THREE,ASTAT                  * discharged status still ?
          GOTO      IDWC9000 IF NOT EQUAL        * no - finished
.
          DISPLAY   *P13:24,*EL,*V2LON,AADMNO;
.
.         Get the rest of the visit related details so that the HL7 holding
.         table (pmsqviaf) will be populated.
.
          PACK      KEY11,PTHSHOSP,AADMNO
          CALL      RDPMVX13                     * visit ext. record found ?
          BRANCH    OVRCD,IDWC1500               * no - ignore record
.
          MOVE      AADMNO,KEY8
          CALL      RDDSCH1                      * discharge record found ?
          BRANCH    OVRCD,IDWC1500               * no - ignore record
.
.         Get the PMI details so that the HL7 holding table (pmsqptaf)
.         will be populated.
.
          MOVE      AURNO,KEY8
          CALL      RDMAST1                      * U/R on file ?
          BRANCH    OVRCD,IDWC1500               * no - ignore record
.
          MOVE      AURNO,KEY8
          CALL      RDPMPX21                     * U/R ext. on file ?
          BRANCH    OVRCD,IDWC1500               * no - ignore record
.
.         Check if there has been any coding for this admission
.
          PACK      KEY12,AADMNO,SP20
          CALL      RSPTECD1                     * position on admission number
          CALL      RKPTECD1                     * read next record
          BRANCH    OVRCD,IDWC2000               * eof - no coding
.
          MATCH     AADMNO,PTEDADMN              * same admission still ?
          GOTO      IDWC2000 IF NOT EQUAL        * no - no coding
.
.         There are coding records for the admission, so ignore record
.         and get the next admission
.
          GOTO      IDWC1500
.
.         The admission has no coding, so get the last transfer record
.         for the patient
.
IDWC2000  PACK      KEY30,AADMNO,TILDA30
          CALL      RDSTRAN2                     * position after admission
          CALL      RDPTRAN2                     * read previous record
          BRANCH    OVRCD,IDWC1500               * eof - ignore record
.
          MOVE      AADMNO,KEY8
          CALL      RDPTRES1                     * pra record on file ?
          IF        OVRCD = 1
            PACK      PKNAME,SP70,SP20           * no
            MOVE      SP35,PKADD1
            MOVE      SP35,PKADD2
            MOVE      SP35,PKSUBR
            MOVE      SP35,PKADD4
            MOVE      SP8,PKPOST
            MOVE      SP20,PKTELEP
            MOVE      SP20,PKTELEB
            MOVE      SP10,PKRELP
            MOVE      SP20,PTREMOBL
          ENDIF
.
          CALL      PMIGTNID                     * get national id
          MOVE      NMPNUMB,PTNINMPI
          MOVE      EIGHT,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICAD                     * trigger A01 message
.
          MOVE      NINE,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICDS                     * trigger A03 message
.
          ADD       TWO,COUNTER                  * increment message counter
.
          GOTO      IDWC1500                     * get next admission record
.
IDWC9000  DISPLAY   *P1:24,*EL,*+,COUNTER,*-:
                    " Messages successfully triggered.  ";
          CALL      HITENTER
.
IDWC9999  RETURN
+
.*****************************************************************************
.*                               OPBK0000              Called by: MAIN0000   *
.*        Send an A05 message for all O/P bookings related to the selected   *
.*        facility.                                                          *
.*****************************************************************************
.
OPBK0000  MOVE      SIX,EVERT
          CALL      GSND0000                     * get sending facility
          BRANCH    EXIT,OPBK9999                * nothing input
.
          CALL      CONTQST                      * ask if ok to continue
          BRANCH    CEXIT,OPBK1000:              * yes
                          OPBK0000:              * no
                          OPBK9999               * cancel
.
.         Get the current date
.
OPBK1000  CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
.         Loop through outsitaf to get the file prefix for each O/P site
.
          DISPLAY   *P1:24,*EL,"Processing:";
          MOVE      ZERO,COUNTER                 * initialise counter
          MOVE      SP3,FILEPRFX                 * initialise O/P site prefix
.
          MOVE      SP6,KEY6
          CALL      RDSSITA1                     * position at start of file
OPBK1500  CALL      RDKSITA1                     * read next record
          BRANCH    OVRCD,OPBK9000               * eof - finished
.
          DISPLAY   *P13:24,*EL,*V2LON,OSTSITE;
.
          MATCH     FILEPRFX,OSTFILE             * same file prefix still ?
          GOTO      OPBK2000 IF EQUAL            * yes - no need to open files
.
.         Open the O/P clinic type file
.
          CLOSE     OUTCTYA1                     * close current file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PACK      CFNAME,OSTFILE,FILCTYA1     
          OPEN      OUTCTYA1,CFNAME              * open new file
          TRAPCLR   IO
          IF        OVRCD = 1
            MOVE      SP6,FILEPRFX               * clinic type file not found
            GOTO      OPBK1500
          ENDIF
.
.         Open the O/P booking file
.
          CLOSE     OUTBOKA2                     * close current file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PACK      CFNAME,OSTFILE,FILBOKA2
          OPEN      OUTBOKA2,CFNAME              * open new file
          TRAPCLR   IO
          IF        OVRCD = 1
            MOVE      SP6,FILEPRFX               * booking file not found
            GOTO      OPBK1500
          ENDIF
.
.         Open the O/P booking extension file
.
          CLOSE     OUTBB1A1                     * close current file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PACK      CFNAME,OSTFILE,FILBB1A1
          OPEN      OUTBB1A1,CFNAME              * open new file
          TRAPCLR   IO
          IF        OVRCD = 1
            MOVE      SP6,FILEPRFX               * booking file not found
            GOTO      OPBK1500
          ENDIF
.
          MOVE      OSTFILE,FILEPRFX             * save new file prefix
.
.         Loop through the clinic type table
.
OPBK2000  PACK      KEY12,OSTSITE,SP20
          CALL      RDSCTYA1                     * position at start of file
OPBK2500  CALL      RDKCTYA1                     * read next record
          BRANCH    OVRCD,OPBK1500               * eof - get next O/P site
.
          MATCH     OSTSITE,OCTSITE              * same site still ?
          GOTO      OPBK1500 IF NOT EQUAL        * no - get next site
.
          DISPLAY   *P20:24,*EL,*V2LON,OCTCTYP;
.
.         For each clinic type, loop through the O/P booking file looking for
.         future bookings
.
          PACK      KEY35,OSTSITE,OCTCTYP,ONE,CURRDATE,SP70
          CALL      RDSBOKA2                     * position at start of file
OPBK3000  CALL      RDKBOKA2                     * read next record
          BRANCH    OVRCD,OPBK2500               * eof - get next clinic type
.
          MATCH     OSTSITE,OBASITE              * same site still ?
          GOTO      OPBK2500 IF NOT EQUAL        * no - get next clinic type
.
          MATCH     OCTCTYP,OBACTYP              * same clinic type still ?
          GOTO      OPBK2500 IF NOT EQUAL        * no - get next clinic type
.
          COMPARE   ONE,OBASTAT                  * status "booked" ?
          GOTO      OPBK2500 IF NOT EQUAL        * no - ignore record
.
          DISPLAY   *P27:24,*EL,*V2LON,OBAOUTNO;
.
.         We have a "booked" record, so get the visit extension record to
.         check the facility id.
.
          PACK      KEY11,PTHSHOSP,OBAOUTNO
          CALL      RDPMVX13                     * visit ext. record found ?
          BRANCH    OVRCD,OPBK3000               * no - ignore record
.
.         Read the outbb1af record
.
          MOVE      OBAOUTNO,KEY8
          CALL      RDBOKB1                      * booking ext. record found ?
          BRANCH    OVRCD,OPBK3000               * no - ignore record
.
.         Get the PMI details so that the HL7 holding table (pmsqptaf)
.         will be populated.
.
          MOVE      OBAURNO,KEY8
          CALL      RDMAST1                      * U/R on file ?
          BRANCH    OVRCD,OPBK3000               * no - ignore record
.
          MOVE      OBAURNO,KEY8
          CALL      RDPMPX21                     * U/R ext. on file ?
          BRANCH    OVRCD,OPBK3000               * no - ignore record
.
.         Clear fields from other files that are not relevant for these messages
.
          MOVE      SP3,OTMALTYP
.
          MOVE      TEN,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICON                     * trigger A05 message
.
          ADD       ONE,COUNTER                  * increment message counter
.
          GOTO      OPBK3000                     * get next booking record
.
OPBK9000  DISPLAY   *P1:24,*EL,*+,COUNTER,*-:
                    " Messages successfully triggered.  ";
          CALL      HITENTER
.
OPBK9999  RETURN
+
.*****************************************************************************
.*                               OPAT0000              Called by: MAIN0000   *
.*     Send an A04 message for all O/P attendances related to the selected   *
.*     facility.                                                             *
.*****************************************************************************
.
OPAT0000  MOVE      SIX,EVERT
          CALL      GSND0000                     * get sending facility
          BRANCH    EXIT,OPAT9999                * nothing input
.
          CALL      CONTQST                      * ask if ok to continue
          BRANCH    CEXIT,OPAT1000:              * yes
                          OPAT0000:              * no
                          OPAT9999               * cancel
.
.         Loop through outsitaf to get the file prefix for each O/P site
.
OPAT1000  DISPLAY   *P1:24,*EL,"Processing:";
          MOVE      ZERO,COUNTER                 * initialise counter
          MOVE      SP3,FILEPRFX                 * initialise O/P site prefix
.
          MOVE      SP6,KEY6
          CALL      RDSSITA1                     * position at start of file
OPAT1500  CALL      RDKSITA1                     * read next record
          BRANCH    OVRCD,OPAT9000               * eof - finished
.
          DISPLAY   *P13:24,*EL,*V2LON,OSTSITE;
.
          MATCH     FILEPRFX,OSTFILE             * same file prefix still ?
          GOTO      OPAT2000 IF EQUAL            * yes - no need to open files
.
.         Open the O/P clinic type file
.
          CLOSE     OUTCTYA1                     * close current file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PACK      CFNAME,OSTFILE,FILCTYA1     
          OPEN      OUTCTYA1,CFNAME              * open new file
          TRAPCLR   IO
          IF        OVRCD = 1
            MOVE      SP6,FILEPRFX               * clinic type file not found
            GOTO      OPAT1500
          ENDIF
.
.         Open the O/P booking file
.
          CLOSE     OUTBOKA2                     * close current file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PACK      CFNAME,OSTFILE,FILBOKA2
          OPEN      OUTBOKA2,CFNAME              * open new file
          TRAPCLR   IO
          IF        OVRCD = 1
            MOVE      SP6,FILEPRFX               * booking file not found
            GOTO      OPAT1500
          ENDIF
.
.         Open the O/P booking extension file
.
          CLOSE     OUTBB1A1                     * close current file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PACK      CFNAME,OSTFILE,FILBB1A1
          OPEN      OUTBB1A1,CFNAME              * open new file
          TRAPCLR   IO
          IF        OVRCD = 1
            MOVE      SP6,FILEPRFX               * booking file not found
            GOTO      OPAT1500
          ENDIF
.
          MOVE      OSTFILE,FILEPRFX             * save new file prefix
.
.         Loop through the clinic type table
.
OPAT2000  PACK      KEY12,OSTSITE,SP20
          CALL      RDSCTYA1                     * position at start of file
OPAT2500  CALL      RDKCTYA1                     * read next record
          BRANCH    OVRCD,OPAT1500               * eof - get next O/P site
.
          MATCH     OSTSITE,OCTSITE              * same site still ?
          GOTO      OPAT1500 IF NOT EQUAL        * no - get next site
.
          DISPLAY   *P20:24,*EL,*V2LON,OCTCTYP;
.
.         For each clinic type, loop through the O/P booking file
.
          PACK      KEY35,OSTSITE,OCTCTYP,FOUR,SP70
          CALL      RDSBOKA2                     * position at start of file
OPAT3000  CALL      RDKBOKA2                     * read next record
          BRANCH    OVRCD,OPAT2500               * eof - get next clinic type
.
          MATCH     OSTSITE,OBASITE              * same site still ?
          GOTO      OPAT2500 IF NOT EQUAL        * no - get next clinic type
.
          MATCH     OCTCTYP,OBACTYP              * same clinic type still ?
          GOTO      OPAT2500 IF NOT EQUAL        * no - get next clinic type
.
          COMPARE   FOUR,OBASTAT                 * status "attended" ?
          GOTO      OPAT2500 IF NOT EQUAL        * no - ignore record
.
          DISPLAY   *P27:24,*EL,*V2LON,OBAOUTNO;
.
.         We have an "attended" record, so get the visit extension record to
.         check the facility id.
.
          PACK      KEY11,PTHSHOSP,OBAOUTNO
          CALL      RDPMVX13                     * visit ext. record found ?
          BRANCH    OVRCD,OPAT3000               * no - ignore record
.
.         Read the outbb1af record
.
          MOVE      OBAOUTNO,KEY8
          CALL      RDBOKB1                      * booking ext. record found ?
          BRANCH    OVRCD,OPAT3000               * no - ignore record
.
.         Get the PMI details so that the HL7 holding table (pmsqptaf)
.         will be populated.
.
          MOVE      OBAURNO,KEY8
          CALL      RDMAST1                      * U/R on file ?
          BRANCH    OVRCD,OPAT3000               * no - ignore record
.
          MOVE      OBAURNO,KEY8
          CALL      RDPMPX21                     * U/R ext. on file ?
          BRANCH    OVRCD,OPAT3000               * no - ignore record
.
.         Clear fields from other files that are not relevant for these messages
.
          CALL      CLOUTCAN
          CALL      CLOUTRSH
          MOVE      SP3,OTMALTYP
.
          MOVE      TEN1,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICOA                     * trigger A04 message
.
          ADD       ONE,COUNTER                  * increment message counter
.
          GOTO      OPAT3000                     * get next booking record
.
OPAT9000  DISPLAY   *P1:24,*EL,*+,COUNTER,*-:
                    " Messages successfully triggered.  ";
          CALL      HITENTER
.
OPAT9999  RETURN
+
.*****************************************************************************
.*                               EREG0000              Called by: MAIN0000   *
.*     Send an A04 message for all current patients in Emergency for the     *
.*     selected facility.                                                    *
.*****************************************************************************
.
EREG0000  MOVE      SIX,EVERT
          CALL      GSND0000                     * get sending facility
          BRANCH    EXIT,EREG9999                * nothing input
.
          CALL      CONTQST                      * ask if ok to continue
          BRANCH    CEXIT,EREG1000:              * yes
                          EREG0000:              * no
                          EREG9999               * cancel
.
.         Loop through emrvisaf looking for current patient records
.
EREG1000  DISPLAY   *P1:24,*EL,"Processing:";
          MOVE      ZERO,COUNTER                 * initialise counter
.
          PACK      KEY9,ONE,SP9
          CALL      RSEMVIS2                     * position on current patients
EREG1500  CALL      RKEMVIS2                     * read next record
          BRANCH    OVRCD,EREG9000               * eof - finished
.
          COMPARE   ONE,EMVISTAT                 * current patient still ?
          GOTO      EREG9000 IF NOT EQUAL        * no - finished
.
          DISPLAY   *P13:24,*EL,*V2LON,EMVIADMN;
.
.         A current patient has been found in ED.
.         Get the visit extension file to check to the facility.
.
          PACK      KEY11,PTHSHOSP,EMVIADMN
          CALL      RDPMVX13                     * visit ext. record found ?
          BRANCH    OVRCD,EREG1500               * no - ignore record
.
.         Get the PMI details so that the HL7 holding tables (pmsqptaf
.         and pmsqviaf) will be populated.
.
          MOVE      EMVIURNO,KEY8
          CALL      RDMAST1                      * U/R on file ?
          BRANCH    OVRCD,EREG1500               * no - ignore record
.
          MOVE      EMVIURNO,KEY8
          CALL      RDPMPX21                     * U/R ext. on file ?
          BRANCH    OVRCD,EREG1500               * no - ignore record
.
          MOVE      EMVIADMN,KEY8
          CALL      RDPMVX11                     * visit ext. on file ?
          BRANCH    OVRCD,EREG1500               * no - ignore record
.
          CALL      PMIGTNID                     * get national id
          MOVE      NMPNUMB,PTNINMPI
          MOVE      TEN2,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICAE                     * trigger A04 message
.
          ADD       ONE,COUNTER                  * increment message counter
.
          GOTO      EREG1500                     * get next ED visit record
.
EREG9000  DISPLAY   *P1:24,*EL,*+,COUNTER,*-:
                    " Messages successfully triggered.  ";
          CALL      HITENTER
.
EREG9999  RETURN
+
.*****************************************************************************
.*                               PVIS0000              Called by: MAIN0000   *
.*         Send messages for all the relevant transfer records for the       *
.*         admission                                                         *
.*****************************************************************************
.
PVIS0000  CALL      GVIS0000                     * get visit number
          BRANCH    EXIT,PVIS9999                * nothing entered
.
          MOVE      ZERO,COUNTER                 * initialise message counter
.
          CALL      PMIGTNID                     * get national id
          MOVE      NMPNUMB,PTNINMPI
.
          PERFORM   VISITTYP,PEMR0000:           * ED
                             POUT0000:           * O/P
                             PINP0000:           * I/P
                             PWAT0000            * W/L
          BRANCH    EXIT,PVIS9999
.
PVIS9000  DISPLAY   *P1:24,*EL,*V2LON,*+,COUNTER,*-,*HOFF:
                    " Messages successfully triggered.  ";
          CALL      HITENTER
.
PVIS9999  RETURN
+
.*****************************************************************************
.*                               PMRG0000              Called by: MAIN0000   *
.*               Send messages for a patient merge                           *
.*****************************************************************************
.
PMRG0000  MOVE      SIX,EVERT
          CALL      GSND0000                     * get sending facility
          BRANCH    EXIT,PMRG9999                * nothing input
.
.         First, get the user to keyin the "Merged From" U/R number
.
PMRG1000  KEYIN     *P1:9,*EF,"#"#Merged from#"# U/R Number:":
                    *P27:9,*V2LON,*JR,OLDURNO
.
          PACK      OLDURNO,OLDURNO,SP8
          MATCH     SP8,OLDURNO
          GOTO      PMRG9999 IF EQUAL
.
PMRG2000  MOVE      ZERO,MERGEDUR                * initialise merged U/R flag
.
          MOVE      OLDURNO,KEY8
          CALL      RDMAST1
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"#"#Merged From#"# U/R not on file.  ";
            CALL      HITENTER
            GOTO      PMRG1000
          ENDIF
.
          COMPARE   ONE,PSTAT                    * merged U/R ?
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"#"#Merged From#"# U/R is not merged.  ";
            CALL      HITENTER
            GOTO      PMRG1000
          ENDIF
.
          MATCH     PPSNAME,SP20
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,*B,"#"#Merged to#"# U/R is blank.  ";
            CALL      HITENTER
            GOTO      PMRG1000
          ENDIF
          MOVE      PPSNAME,KEY8
.
          MOVE      PURNO,OLDURNO                * save "Merged From" U/R
.
          MOVE      PSNAME,PACSNAME              * display patient name
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      ONE,PACFRMT
          CALL      PACNAME
          DISPLAY   *P40:9,PACFNAME:
                    *P1:11,"#"#Merged to#"#   U/R Number:",*V2LON,SP1,KEY8;
.
.         Using the value from PPSNAME, now get the "Merged to" PMI details
.
          MOVE      PPSNAME,KEY8
          CALL      RDMAST1
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"#"#Merged to#"# U/R not on file.  ";
            CALL      HITENTER
            GOTO      PMRG1000
          ENDIF
.
          MOVE      PURNO,KEY8
          CALL      RDPMPX21
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"#"#Merged to#"# PMI extension record not ":
                      "on file.  ";
            CALL      HITENTER
            GOTO      PMRG1000
          ENDIF
.
.         Now check to see if the "Merged To" U/R is also merged to
.         another U/R
.
          COMPARE   ONE,PSTAT                    * merged U/R ?
          GOTO      PMRG5000 IF NOT EQUAL        * no
.
          MATCH     PPSNAME,SP20                 * "Merged To" U/R blank ?
          IF        @EQUAL
            DISPLAY   *P1:24,*El,*B,"#"#Merged To#"# U/R is blank.  ";
            CALL      HITENTER
          ENDIF
.
          MOVE      PPSNAME,KEY8
          DISPLAY   *P1:18,*EF,*B,"Warning: U/R ",*V2LON,PURNO,*HOFF:
                    " is also inactive and merged to U/R ",*V2LON,KEY8
          MOVE      ONE,MERGEDUR                 * set merged U/R flag
.
PMRG5000  MOVE      PSNAME,PACSNAME              * display patient name
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      ONE,PACFRMT
          CALL      PACNAME
          DISPLAY   *P40:11,PACFNAME;
.
          CALL      CONTQST                      * ask if ok to continue
          BRANCH    CEXIT,PMRG9000:              * yes
                          PMRG1000:              * no
                          PMRG0000               * cancel
.
PMRG9000  CALL      PMIGTNID                     * get national id
          MOVE      NMPNUMB,PTNINMPI
          MOVE      THIRTY8,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICMR                     * trigger A34 message
.
          DISPLAY   *P1:24,*EL,"Message successfully triggered.  ";
          CALL      HITENTER
.
.         Check if there was another merge after this that we also need to
.         process
.
          IF        MERGEDUR = 1
            MOVE      PURNO,OLDURNO
            DISPLAY   *P1:9,*EF,"#"Merged from#" U/R Number:":
                      *P27:9,*V2LON,OLDURNO
            GOTO      PMRG2000
          ENDIF
.
PMRG9999  RETURN
+
.*****************************************************************************
.*                               PCHG0000              Called by: MAIN0000   *
.*               Send messages for a change of U/R for a visit               *
.*****************************************************************************
.
PCHG0000  CALL      GVIS0000                     * get visit number
          BRANCH    EXIT,PCHG9999                * nothing entered
.
          MOVE      ZERO,COUNTER                 * initialise record counter
.
          PACK      KEY24,VISITNUM,SP30
          CALL      RSPTUAD1                     * position on visit
PCHG0500  CALL      RKPTUAD1                     * read next record
          BRANCH    OVRCD,PCHG9000               * eof - finished
.
          MATCH     VISITNUM,PTUAADMN            * same visit number still ?
          GOTO      PCHG9000 IF NOT EQUAL        * no - finished
.
          ADD       ONE,COUNTER                  * increment counter
.
.         Display the U/R change details for the visit
.
          MOVE      PTUAOUR,KEY8
          CALL      RDMAST1
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Inactive PMI master record not found.  ";
            CALL      HITENTER
            GOTO      PCHG0500
          ENDIF
.
          MOVE      PSNAME,PACSNAME
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      ONE,PACFRMT
          CALL      PACNAME
          DISPLAY   *P1:15,*EF,"Inactive U/R: ",*V2LON,PTUAOUR,*HOFF:
                    *P35:15,PACFNAME;
.
          MOVE      PTUANUR,KEY8
          CALL      RDMAST1
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Active PMI master record not found.  ";
            CALL      HITENTER
            GOTO      PCHG0500
          ENDIF
.
          MOVE      PSNAME,PACSNAME
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      ONE,PACFRMT
          CALL      PACNAME
          DISPLAY   *P1:17,*EF,"Active U/R  : ",*V2LON,PTUANUR,*HOFF:
                    *P35:17,PACFNAME;
.
          UNPACK    PTUADATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P1:19,"Alteration Date : ",*V2LON,CPCDATE,*HOFF:
                    *P1:20,"Alteration Time : ",*V2LON,PTUATIME;
.
          MOVE      PURNO,KEY8
          CALL      RDPMPX21
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"PMI extension record not found.  ";
            CALL      HITENTER
            GOTO      PCHG0500
          ENDIF
.
          CALL      CONTQST                      * ask if ok to continue
          BRANCH    CEXIT,PCHG2000:              * yes
                          PCHG0500:              * no
                          PCHG0000               * cancel
.
PCHG2000  MOVE      PTUAOUR,OLDURNO              * load old U/R
          CALL      PMIGTNID                     * get national id
          MOVE      NMPNUMB,PTNINMPI
          MOVE      THIRTY9,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICUR                     * trigger A44 message
.
          DISPLAY   *P1:24,*EL,"Message successfully triggered.  ";
          CALL      HITENTER
          GOTO      PCHG0500                     * get next change U/R record
.
PCHG9000  IF        COUNTER = 0 
            DISPLAY   *P1:24,*EL,*B,"Visit has not had a change of U/R.  ";
            CALL      HITENTER
            GOTO      PCHG0000
          ENDIF
.
PCHG9999  RETURN
+
.*****************************************************************************
.*                               GVIS0000              Called by: PVIS0000   *
.*                   Get the user to keyin a visit number                    *
.* Returns: PMI and Visit based records relevant to the type of visit        *
.*          EXIT  0 = valid visit number entered                             *
.*                1 = nothing entered                                        *
.*****************************************************************************
.
GVIS0000  MOVE      SP20,VISITDSC                * initialise visit description
.
          KEYIN     *P1:6,*EF,"Visit Number:":
                    *P15:6,*V2LON,*DE,*JR,VISITNUM
.
          PACK      VISITNUM,VISITNUM,SP8
          MATCH     SP8,VISITNUM                 * anything entered ?
          GOTO      GVIS9100 IF EQUAL            * no
.
.         See if a visit extension (pmsvx1af) record exists.  If it does exist,
.         it could be an ED, I/P or O/P visit, otherwise check to see if it's
.         a W/L entry
.
          MOVE      VISITNUM,KEY8
          CALL      RDPMVX11                     * visit ext. record found ?
          BRANCH    OVRCD,GVIS0100               * no - check for W/L entry
.
          MATCH     SP3,PMVXMHOS                 * blank hospital code ?
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,*B,"Hospital code is blank.  ";
            CALL      HITENTER
            GOTO      GVIS0000
          ENDIF
.
          MOVE      PMVXMHOS,SAVEHOSP
.
.         Get the patvisaf record to find out the visit type.  If no record
.         exists, it could be an O/P booking or O/P DNA.
.
          MOVE      SP6,PVISITE                  * clear O/P site variable
          MOVE      VISITNUM,KEY8
          CALL      RDPTVIS1                     * patvisaf record found ?
          BRANCH    OVRCD,GVIS2000               * no -check for O/P booking/DNA
.
          BRANCH    PVITYPE,GVIS1000:            * ED
                            GVIS2000:            * O/P
                            GVIS3000             * I/P
.
          DISPLAY   *P1:24,*EL,*B,"Patient visit type not valid.  ";
          CALL      HITENTER
          GOTO      GVIS0000
.
.         Check if the visit is a W/L entry.  As we are only sending
.         scheduled W/L entries, we can access the W/L record via bokrc1af.
.
GVIS0100  MOVE      VISITNUM,KEY8
          CALL      RDBKREC1                     * booking record found ?
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Patient visit not valid.  ";
            CALL      HITENTER
            GOTO      GVIS0000
          ENDIF
.
          COMPARE   ZERO,BKRESTAT                * booked status ?
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Booking status not scheduled.  ";
            CALL      HITENTER
            GOTO      GVIS0000
          ENDIF
.
          PACK      KEY19,BKREURNO,BKREPROC,BKRECNT
          CALL      RDTREA1
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"W/L record not on file.  ";
            CALL      HITENTER
            GOTO      GVIS0000
          ENDIF
.
          COMPARE   TWO,WMSTAT                   * scheduled status ?
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"W/L status not scheduled.  ";
            CALL      HITENTER
            GOTO      GVIS0000
          ENDIF
.
          MATCH     SP3,WTWMIHSP                 * blank hospital code ?
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,*B,"Hospital blank for visit.  ";
            CALL      HITENTER
            GOTO      GVIS0000
          ENDIF
.
          PACK      KEY19,BKREURNO,BKREPROC,BKRECNT
          CALL      RDWTTX11
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"W/L extension record not on file.  ";
            CALL      HITENTER
            GOTO      GVIS0000
          ENDIF
.
          MOVE      VISDESC4,VISITDSC
          MOVE      WTWMIHSP,SAVEHOSP            * save hospital code
          MOVE      WMURNO,SAVEURNO
          MOVE      FOUR,VISITTYP
          MOVE      ZERO,PVITYPE                 * set visit type for DGCLICUR
          GOTO      GVIS5000
.
.         ED visit, so get the visit details
.
GVIS1000  MOVE      VISITNUM,KEY8
          CALL      RDEMVIS1                     * visit record on file ?
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Emergency visit not on file.  ";
            CALL      HITENTER
            GOTO      GVIS0000
          ENDIF
.
          MOVE      VISITNUM,KEY8
          CALL      RDPMVX11
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Visit extension record not on file.  ";
            CALL      HITENTER
            GOTO      GVIS0000
          ENDIF
.
          MOVE      EMVIURNO,SAVEURNO
          MOVE      VISDESC1,VISITDSC
          MOVE      ONE,VISITTYP
          GOTO      GVIS5000
.
.         O/P visit, so get the booking details
.
GVIS2000  MATCH     SP6,PVISITE                  * site blank ?
          GOTO      GVIS2100 IF EQUAL            * yes - possible O/P booking
.
          MOVE      PVISITE,KEY6
          CALL      RDSITA1                      * site record found ?
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"O/P Site record not found.  ";
            CALL      HITENTER
            GOTO      GVIS0000
          ENDIF
.
          MATCH     SP3,OSTFILE
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,*B,"O/P site prefix blank.  ";
            CALL      HITENTER
            GOTO      GVIS0000
          ENDIF
          GOTO      GVIS2200
.
GVIS2100  MOVE      SP6,KEY6
          CALL      RDSSITA1                     * position at start of file
GVIS2150  CALL      RDKSITA1                     * read next record
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Visit record not found.  ";
            CALL      HITENTER
            GOTO      GVIS0000
          ENDIF
.
.         Open the O/P booking extension file
.
GVIS2200  CLOSE     OUTBB1A1                     * close current file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PACK      CFNAME,OSTFILE,FILBB1A1
          OPEN      OUTBB1A1,CFNAME              * open new file
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD                   * file opened ?
          GOTO      GVIS2300 IF EQUAL            * yes
.
          MATCH     SP6,PVISITE                  * site blank ?
          IF        @EQUAL
            GOTO      GVIS2150                   * get next site record
          ELSE
            DISPLAY   *P1:24,*EL,*B,"Unable to open O/P Booking B file.  ";
            CALL      HITENTER
            GOTO      GVIS0000
          ENDIF
.
.         Get the booking B record
.
GVIS2300  MOVE      VISITNUM,KEY8
          CALL      RDBOKB1
          COMPARE   ZERO,OVRCD                   * booking B record found ?
          GOTO      GVIS2400 IF EQUAL            * yes
.
          MATCH     SP6,PVISITE                  * site blank ?
          IF        @EQUAL
            GOTO      GVIS2150                   * get next site record
          ELSE
            DISPLAY   *P1:24,*EL,*B,"O/P booking B record not found.  ";
            CALL      HITENTER
            GOTO      GVIS0000
          ENDIF
.
.         Open the O/P booking file
.
GVIS2400  CLOSE     OUTBOKA6                     * close current file
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          PACK      CFNAME,OSTFILE,FILBOKA6
          OPEN      OUTBOKA6,CFNAME              * open new file
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD                   * file opened ?
          GOTO      GVIS2500 IF EQUAL            * yes
.
          MATCH     SP6,PVISITE                  * site blank ?
          IF        @EQUAL
            GOTO      GVIS2150                   * get next site record
          ELSE
            DISPLAY   *P1:24,*EL,*B,"Unable to open O/P Booking A file.  ";
            CALL      HITENTER
            GOTO      GVIS0000
          ENDIF
.
GVIS2500  PACK      KEY36,VISITNUM,SP70
          CALL      RDSBOKA6                     * position before visit number
          CALL      RDKBOKA6                     * read next record
          COMPARE   ZERO,OVRCD                   * booking A record found ?
          GOTO      GVIS2600 IF EQUAL            * yes
.
          MATCH     SP6,PVISITE                  * site blank ?
          IF        @EQUAL
            GOTO      GVIS2150                   * get next site record
          ELSE
            DISPLAY   *P1:24,*EL,*B,"O/P booking A record not found.  ";
            CALL      HITENTER
            GOTO      GVIS0000
          ENDIF
.
GVIS2600  MATCH     OBAOUTNO,VISITNUM            * same visit number ?
          GOTO      GVIS2700 IF EQUAL            * yes
.
          MATCH     SP6,PVISITE                  * site blank ?
          IF        @EQUAL
            GOTO      GVIS2150                   * get next site record
          ELSE
            DISPLAY   *P1:24,*EL,*B,"O/P booking A record not found.  ";
            CALL      HITENTER
            GOTO      GVIS0000
          ENDIF
.
.         If there was a patvisaf record for the visit, then it must have
.         a status of attended.
.         If there was no patvisaf record for the visit, then it must have
.         a status of booked or DNA.
.
GVIS2700  MATCH     SP6,PVISITE                  * site blank ?
          IF        @EQUAL
            IF        OBASTAT <> 1 & OBASTAT <> 5
              DISPLAY   *P1:24,*EL,*B,"O/P booking A record status invalid.  ";
              CALL      HITENTER
              GOTO      GVIS0000
            ENDIF
          ELSE
            IF        OBASTAT <> 4
              DISPLAY   *P1:24,*EL,*B,"O/P booking A record status invalid.  ";
              CALL      HITENTER
              GOTO      GVIS0000
            ENDIF
          ENDIF
.
          MOVE      VISDESC2,VISITDSC
          MOVE      OBAURNO,SAVEURNO
          MOVE      TWO,VISITTYP
          IF        OBASTAT = 1 | OBASTAT = 5
            MOVE      TWO,PVITYPE                * for DGCLICUR
            MOVE      OBAOUTNO,PVIBILL           * for DGCLICUR (CAR 296884)
          ENDIF
          GOTO      GVIS5000
.
.         I/P visit, so get the admission details
.
GVIS3000  MOVE      VISITNUM,KEY8
          CALL      RDPTMIS1                     * admission on file ?
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Inpatient visit not on file.  ";
            CALL      HITENTER
            GOTO      GVIS0000
          ENDIF
.
          BRANCH    ASTAT,GVIS3500:              * pre-admitted
                          GVIS3500:              * admitted
                          GVIS3500:              * discharged
                          GVIS3500               * on-leave
.
          DISPLAY   *P1:22,*EL,*B,"Inpatient visit cancelled.  ";
.
GVIS3500  MOVE      VISDESC3,VISITDSC
          MOVE      AURNO,SAVEURNO
          MOVE      THREE,VISITTYP
.
GVIS5000  MOVE      SAVEHOSP,KEY3
          CALL      RDPTHSP1
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Hospital not on file.  ";
            CALL      HITENTER
            GOTO      GVIS0000
          ENDIF
.
          MOVE      SAVEURNO,KEY8
          CALL      RDMAST1                      * U/R on file ?
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"PMI Master file not found.  ";
            CALL      HITENTER
            GOTO      GVIS0000
          ENDIF
.
          MOVE      SAVEURNO,KEY8
          CALL      RDPMPX21                     * U/R ext. on file ?
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"PMI Extension file not found.  ";
            CALL      HITENTER
            GOTO      GVIS0000
          ENDIF
.
          MOVE      VISITNUM,KEY8
          CALL      RDPTRES1                     * pra record on file ?
          IF        OVRCD = 1
            PACK      PKNAME,SP70,SP20           * no
            MOVE      SP35,PKADD1
            MOVE      SP35,PKADD2
            MOVE      SP35,PKSUBR
            MOVE      SP35,PKADD4
            MOVE      SP8,PKPOST
            MOVE      SP20,PKTELEP
            MOVE      SP20,PKTELEB
            MOVE      SP10,PKRELP
            MOVE      SP20,PTREMOBL
          ENDIF
.
          MOVE      PSNAME,PACSNAME              * format name for display
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      ONE,PACFRMT
          CALL      PACNAME
.
          DISPLAY   *P1:7,"Visit Type  : ",*V2LON,VISITDSC
          IF        COPTION = 13
            DISPLAY   *P1:9,"Current U/R : ",*V2LON,PURNO
          ELSE
            DISPLAY   *P1:9,"U/R         : ",*V2LON,PURNO
          ENDIF
          DISPLAY   *P30:9,PACFNAME
.
          DISPLAY   *P1:11,*EF,"Sending Facility: ",*V2LON,PTHSHOSP,*HOFF:
                    *P30:11,PTHSNAME:
                    *P1:12,"Approval No.    : ",*V2LON,PTHSAPPR
.
          MOVE      SAVEHOSP,HL7SFTAG            * save sending facility
          MOVE      ZERO,EXIT
          GOTO      GVIS9999
.
GVIS9100  MOVE      ONE,EXIT
.
GVIS9999  RETURN
+
.*****************************************************************************
.*                               SCAN0000          Calld by: PVIS0000        *
.*            See if we need to send cancellation messages first             *
.* Returns: CANCFLAG - send messages to cancel visit flag                    *
.*                     0 = send cancel visit messages                        *
.*                     1 = don't send cancel visit messages                  *
.*****************************************************************************
.
SCAN0000  KEYIN     *P1:14,*EF,"Send message(s) to cancel visit prior to ":
                               "Regeneration (",*V2LON,*DV,ANSY,*HOFF,*DV,SLASH:
                               *V2LON,*DV,ANSN,*HOFF,")?":
                    *P62:14,*V2LON,ANS
.
          PACK      ANS,ANS,SP1
          MATCH     SP1,ANS                      * anything input ?
          GOTO      SCAN9000 IF EQUAL            * no - invalid
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS                     * "Y" input ?
          IF        @EQUAL
            MOVE      ZERO,CANCFLAG              * yes
            DISPLAY   *P62:14,*V2LON,DYES
            GOTO      SCAN9999
          ENDIF
.
          MATCH     ANSN,ANS                     * "N" input ?
          IF        @EQUAL
            MOVE      ONE,CANCFLAG               * yes
            DISPLAY   *P62:14,*V2LON,DNO
            GOTO      SCAN9999
          ENDIF
.
SCAN9000  BEEP
          GOTO      SCAN0000
.
SCAN9999  RETURN
+
.*****************************************************************************
.*                             PEMR0000            Called by: PVIS0000       *
.*                   Process an emergency visit                              *
.* Requires:  Valid read on the emrivasf record for the visit number         *
.* Returns:   EXIT  0 = ok to continue                                       *
.*                  1 = exit out                                             *
.*****************************************************************************
.
PEMR0000  COMPARE   FOUR,EMVISTAT                * cancelled visit ?
          GOTO      PEMR1000 IF NOT EQUAL        * no
.
.         The current visit status is cancelled, so check that the
.         user wishes to continue
.
PEMR0500  KEYIN     *P1:23,*EF,"The selected visit is cancelled.":
                    *P1:24,"Ok to continue with message regeneration (":
                    *V2LON,*DV,ANSY,*HOFF,*DV,SLASH,*V2LON,*DV,ANSN,*HOFF,")?":
                    *P49:24,*V2LON,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSN,ANS                     * "N" entered ?
          IF        @EQUAL
            DISPLAY   *P49:24,*V2LON,DNO
            GOTO      PEMR9100                   * yes - finished
          ENDIF
.
          MATCH     ANSY,ANS                     * "Y" entered ?
          IF        @EQUAL
            DISPLAY   *P49:24,*V2LON,DYES
            GOTO      PEMR0700                   * yes - proceed
          ENDIF
.
          BEEP
          GOTO      PEMR0500
.
PEMR0700  DISPLAY   *P1:24,*EL,"Processing:";
.
.         First send a visit registration message (A04)
.
          DISPLAY   *P13:24,*EL,*V2LON,"A04";
          MOVE      SP8,EMVIDDAT                 * clear discharge variables
          MOVE      SP8,EMVIDTIM
          MOVE      SP3,EMVIDSTA
          MOVE      TWENTY7,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICAE                     * trigger A04 message
          ADD       ONE,COUNTER                  * increment counter
.
.         Send cancel visit message (A11)
.
          DISPLAY   *P13:24,*EL,*V2LON,"A11";
          MOVE      TWENTY8,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICCE                     * trigger A11 message
          ADD       ONE,COUNTER                  * increment counter
          GOTO      PEMR9000                     * finished
.
.         The current visit status is not cancelled.
.         We need to send cancellation messages based on the current status.
.
PEMR1000  CALL      SCAN0000                     * send cancellation messages ?
.
          CALL      CONTQST                      * ok to continue ?
          BRANCH    CEXIT,PEMR1500:              * yes
                          PEMR9100:              * no
                          PEMR9100               * cancel
.
PEMR1500  DISPLAY   *P1:24,*EL,"Processing:";
          BRANCH    CANCFLAG,PEMR5000            * not sending canc. messages
.
          BRANCH    EMVISTAT,PEMR3000:           * current patient
                             PEMR2000:           * discharged incomplete
                             PEMR2000            * discharged complete
.
.         Send cancel discharge message (A13)
.
PEMR2000  DISPLAY   *P13:24,*EL,*V2LON,"A13";
          MOVE      TWENTY3,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICUD                     * trigger A13 message
          ADD       ONE,COUNTER                  * increment counter
.
.         Send cancel visit message (A11)
.
PEMR3000  DISPLAY   *P13:24,*EL,*V2LON,"A11";
          MOVE      EMVIDDAT,DIM8A               * save discharge variables
          MOVE      EMVIDTIM,DIM8B
          MOVE      EMVIDSTA,DIM3
          MOVE      SP8,EMVIDDAT                 * clear discharge variables
          MOVE      SP8,EMVIDTIM
          MOVE      SP3,EMVIDSTA
.
          MOVE      TWENTY4,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICCE                     * trigger A11 message
          ADD       ONE,COUNTER                  * increment counter
.
          MOVE      DIM8A,EMVIDDAT               * restore discharge variables
          MOVE      DIM8B,EMVIDTIM
          MOVE      DIM3,EMVIDSTA
.
.         We have sent any cancellation messages (if required), so
.         now send all the standard ED messages to achieve the current status
.         of the visit.
.
.         First send a visit registration message (A04)
.
PEMR5000  DISPLAY   *P13:24,*EL,*V2LON,"A04";
          MOVE      EMVIDDAT,DIM8A               * save discharge variables
          MOVE      EMVIDTIM,DIM8B
          MOVE      EMVIDSTA,DIM3
          MOVE      SP8,EMVIDDAT                 * clear discharge variables
          MOVE      SP8,EMVIDTIM
          MOVE      SP3,EMVIDSTA
.
          MOVE      TWENTY5,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICAE                     * trigger A04 message
          ADD       ONE,COUNTER                  * increment counter
.
          MOVE      DIM8A,EMVIDDAT               * restore discharge variables
          MOVE      DIM8B,EMVIDTIM
          MOVE      DIM3,EMVIDSTA
.
          COMPARE   ONE,EMVISTAT                 * current patient ?
          GOTO      PEMR9000 IF EQUAL            * yes - finished
.
.         The patient is discharged, so send a visit discharge message (A03)
.
          DISPLAY   *P13:24,*EL,*V2LON,"A03";
          MOVE      TWENTY6,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICDI                     * trigger A03 message
          ADD       ONE,COUNTER                  * increment counter
.
PEMR9000  MOVE      ZERO,EXIT
          GOTO      PEMR9999
.
PEMR9100  MOVE      ONE,EXIT
.
PEMR9999  RETURN
+
.*****************************************************************************
.*                             POUT0000            Called by: PVIS0000       *
.*                   Process an outpatient visit                             *
.* Requires:  Valid read on the outbokaf & outbb1af record for the visit     *
.*            number                                                         *
.* Returns:   EXIT  0 = ok to continue                                       *
.*                  1 = exit out                                             *
.*****************************************************************************
.
POUT0000  CALL      SCAN0000                     * send cancellation messages ?
.
          CALL      CONTQST                      * ok to continue ?
          BRANCH    CEXIT,POUT1500:              * yes
                          POUT9100:              * no
                          POUT9100               * cancel
.
POUT1500  CALL      CLOUTRSH                     * clear outrshaf variables
          CALL      CLOUTCAN                     * clear outcanaf variables
          MOVE      SP3,OTMALTYP
.
          DISPLAY   *P1:24,*EL,"Processing:";
          BRANCH    CANCFLAG,POUT5000            * not sending canc. messages
.
          BRANCH    OBASTAT,POUT3000:            * booked
                            POUT9999:            * N/A
                            POUT9999:            * N/A
                            POUT2000:            * attended
                            POUT3000             * DNA
.
POUT2000  COMPARE   ONE,OTCNA13M                 * sending A13 dis. messages?
          GOTO      POUT2500 IF NOT EQUAL        * no
.
.         Send cancel discharge message (A13)
.
          DISPLAY   *P13:24,*EL,*V2LON,"A13";
          MOVE      THIRTY6,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICOH                     * trigger A13 message
          ADD       ONE,COUNTER                  * increment counter
.
.         Send cancel attendance message (A11)
.
POUT2500  DISPLAY   *P13:24,*EL,*V2LON,"A11";
          MOVE      THIRTY7,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICOU                     * trigger A11 message
          ADD       ONE,COUNTER                  * increment counter
.
.         Send cancel booking message (A38)
.
POUT3000  DISPLAY   *P13:24,*EL,*V2LON,"A38";
          MOVE      THIRTY5,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICOC                     * trigger A38 message
          ADD       ONE,COUNTER                  * increment counter
.
.         We have sent any cancellation messages (if required), so
.         now send all the standard O/P messages to achieve the current status
.         of the visit.
.
.         Send an O/P booking message (A05)
.
POUT5000  DISPLAY   *P13:24,*EL,*V2LON,"A05";
          MOVE      THIRTY1,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICON                     * trigger A05 message
          ADD       ONE,COUNTER                  * increment counter
.
          COMPARE   FIVE,OBASTAT                 * DNA status ?
          GOTO      POUT6000 IF NOT EQUAL        * no
.
.         Send an O/P DNA message (A08)
.
          DISPLAY   *P13:24,*EL,*V2LON,"A08";
          MOVE      THIRTY3,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICOB                     * trigger A08 message
          ADD       ONE,COUNTER                  * increment counter
          GOTO      POUT9000
.
POUT6000  COMPARE   FOUR,OBASTAT                 * attended status ?
          GOTO      POUT9000 IF NOT EQUAL        * no
.
.         Send an O/P attended message (A04)
.
          DISPLAY   *P13:24,*EL,*V2LON,"A04";
          MOVE      THIRTY2,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICOA                     * trigger A04 message
          ADD       ONE,COUNTER                  * increment counter
.
.         Also send an O/P discharge message if the paremeter for this
.         is turned on (A03)
.
          COMPARE   ONE,OTCNA03M                 * sending A03 dis. messages?
          GOTO      POUT9000 IF NOT EQUAL        * no
.
          MATCH     SP70,OTBBDPTM                * CAR 309731
          GOTO      POUT9000 IF EQUAL
.
          DISPLAY   *P13:24,*EL,*V2LON,"A03";
          MOVE      THIRTY4,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICOG                     * trigger A03 message
          ADD       ONE,COUNTER                  * increment counter
.
POUT9000  MOVE      ZERO,EXIT
          GOTO      POUT9999
.
POUT9100  MOVE      ONE,EXIT
.
POUT9999  RETURN
+
.*****************************************************************************
.*                             PWAT0000            Called by: PVIS0000       *
.*                   Process a waiting list entry                            *
.* Requires:  Valid read on the wattr1af & wattx1af record for the visit     *
.*            number                                                         *
.* Returns:   EXIT  0 = ok to continue                                       *
.*                  1 = exit out                                             *
.*****************************************************************************
.
PWAT0000  CALL      SCAN0000                     * send cancellation messages ?
.
          CALL      CONTQST                      * ok to continue ?
          BRANCH    CEXIT,PWAT1500:              * yes
                          PWAT9100:              * no
                          PWAT9100               * cancel
.
PWAT1500  DISPLAY   *P1:24,*EL,"Processing:";
          BRANCH    CANCFLAG,PWAT5000            * not sending canc. messages
.
.         Send cancel W/L booking (A38)
.
          DISPLAY   *P13:24,*EL,*V2LON,"A38";
          MOVE      THIRTY,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLIWLD                     * trigger A38 message
          ADD       ONE,COUNTER                  * increment counter
.
.         We have sent any cancellation messages (if required), so
.         now send all the standard W/L messages to achieve the current status
.         of the visit.
.
.         Send a W/L booking message (A05)
.
PWAT5000  DISPLAY   *P13:24,*EL,*V2LON,"A05";
          MOVE      TWENTY9,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLIWLB                     * trigger A05 message
          ADD       ONE,COUNTER                  * increment counter
.
PWAT9000  MOVE      ZERO,EXIT
          GOTO      PWAT9999
.
PWAT9100  MOVE      ONE,EXIT
.
PWAT9999  RETURN
+
.*****************************************************************************
.*                             PINP0000            Called by: PVIS0000       *
.*                   Process an inpatient visit                              *
.*****************************************************************************
.
PINP0000  CALL      CLPATDSC                     * clear discharge fields
.
.         We need to process a cancelled admission differently, so
.         check the admission status first
.
          COMPARE   FIVE,ASTAT                   * cancelled admission ?
          GOTO      PINP1000 IF NOT EQUAL        * no
.
          DISPLAY   *P1:18,*EF,*B,"Warning: Visit",*V2LON,AADMNO,*HOFF:
                    " is cancelled";
.
          CALL      CONTQST                      * ok to continue ?
          BRANCH    CEXIT,PINP0500:              * yes
                          PINP9999:              * no
                          PINP9999               * cancel
.
PINP0500  CALL      PCAN0000
          GOTO      PINP9999
.
PINP1000  CALL      SCAN0000                     * send cancellation messages ?
.
          CALL      CONTQST                      * ok to continue ?
          BRANCH    CEXIT,PINP1500:              * yes
                          PINP9999:              * no
                          PINP9999               * cancel
.
PINP1500  DISPLAY   *P1:24,*EL,"Processing:";
          BRANCH    CANCFLAG,PINP5000            * not sending canc. messages
.
.         This is not a cancelled admission, so check the current status
.         of the visit
.
          BRANCH    ASTAT,PINP4000:              * pre-admitted
                          PINP3000:              * admitted
                          PINP2000:              * discharged
                          PINP3000               * on-leave
.
.         Send cancel discharge message (A13)
.
PINP2000  PACK      KEY30,AADMNO,TILDA30
          CALL      RDSTRAN2                     * position after admission
          CALL      RDPTRAN2                     * read previous record
          BRANCH    OVRCD,PINP9999               * eof - finished
.
          MATCH     AADMNO,TADMN                 * same admission still ?
          GOTO      PINP9999 IF NOT EQUAL        * no - finished
.
          MATCH     ANSD,TMOVE                   * discharge movement ?
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Discharge Transfer record not found.  ";
            CALL      HITENTER
            GOTO      PINP9999
          ENDIF
.
          MOVE      AADMNO,KEY8
          CALL      RDDSCH1                      * discharge record found ?
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Discharge record not found.  ";
            CALL      HITENTER
            GOTO      PINP9999
          ENDIF
.
          DISPLAY   *P13:24,*EL,*V2LON,"A13";
          MOVE      TEN8,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICCD                     * trigger A13 message
          ADD       ONE,COUNTER                  * increment counter
          GOTO      PINP3050
.
.         Send cancel admission message (A11)
.
PINP3000  PACK      KEY30,AADMNO,TILDA30
          CALL      RDSTRAN2                     * position after admission
PINP3050  CALL      RDPTRAN2                     * read previous record
          BRANCH    OVRCD,PINP3100               * eof - finished
.
          MATCH     AADMNO,TADMN                 * same admission still ?
          GOTO      PINP3100 IF NOT EQUAL        * no - finished
.
          MATCH     ANSA,TMOVE                   * admission movement ?
          GOTO      PINP3200 IF EQUAL            * yes
          GOTO      PINP3050                     * no - get previous record
.
PINP3100  DISPLAY   *P1:24,*EL,*B,"Admission Transfer record not found.  ";
          CALL      HITENTER
          GOTO      PINP9999
.
PINP3200  DISPLAY   *P13:24,*EL,*V2LON,"A11";
          MOVE      TEN9,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICCA                     * trigger A11 message
          ADD       ONE,COUNTER                  * increment counter
.
.         Send cancel pre-admission message (A27)
.
PINP4000  CALL      CLPATTRN                     * no pattranf for a pre-adm.
.
          DISPLAY   *P13:24,*EL,*V2LON,"A27";
          MOVE      TWENTY,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICPA                     * trigger A27 message
          ADD       ONE,COUNTER                  * increment counter
.
.         We have sent any cancellation messages (if required), so
.         now send the normal messages.
.
PINP5000  CALL      CLPATTRN                     * no pattranf for a pre-adm.
          CALL      CLPATDSC                     * clear discharge fields
.
          IF        ASTAT = 3
            MOVE      AADMNO,KEY8
            CALL      RDDSCH1                    * discharge record found ?
            IF        OVRCD = 1
              DISPLAY   *P1:24,*EL,*B,"Discharge record not found.  ";
              CALL      HITENTER
              GOTO      PINP9999
            ENDIF
          ENDIF
.
.         Send a pre-admission message (A14)
.
          IF        ASTAT = 1
            DISPLAY   *P13:24,*EL,*V2LON,"A14";  * pre-admission only
            MOVE      TWENTY1,HL7TRGID
            MOVE      SP8,HL7INCLD
            PROC      DGCLICPE                   * trigger A14 message
            ADD       ONE,COUNTER                * increment counter
            MOVE      "A14",SAVETYPE             * save last message type
            MOVE      ADATE,SAVEDATE             * save last message date
            MOVE      ATIME,SAVETIME             * save last message time
            GOTO      PINP9500
          ENDIF
.
          MOVE      SP3,SAVEWARD                 * initialise saved ward
          MOVE      SP3,SAVEBED                  * initialise saved bed
.
.         Loop through the transfer records for the admission
.         
          PACK      KEY30,AADMNO,SP30
          CALL      RDSTRAN2                     * position before admission
PINP5500  CALL      RDKTRAN2                     * read next record
          BRANCH    OVRCD,PINP9500               * eof - finished
.
          MATCH     AADMNO,TADMN                 * same admission still ?
          GOTO      PINP9500 IF NOT EQUAL        * no - finished
.
          PACK      SAVKEY30,TADMN,TDATE,TTIME,TWARD,TBED
.
          MOVE      PTTRCLTY,ACLAIM              * load transfer claim type
          MOVE      TADOCT,ADOCTA                * load transfer att. doctor
.
.         Check if this is an admission transfer record
.
          MATCH     ANSA,TMOVE                   * admission movement ?
          GOTO      PINP6000 IF NOT EQUAL        * no
.
.         Now, send the admission messages (A01)
.
          MOVE      TWARD,SAVEWARD               * save admission ward code
          MOVE      TBED,SAVEBED                 * save admission bed code
.
          DISPLAY   *P13:24,*EL,*V2LON,"A14";
          MOVE      TWENTY1,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICPE                     * trigger A14 message
          ADD       ONE,COUNTER                  * increment counter
.
          DISPLAY   *P13:24,*EL,*V2LON,"A01";
          MOVE      TEN3,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICAD                     * trigger A01 message
          ADD       ONE,COUNTER                  * increment counter
          MOVE      "A01",SAVETYPE               * save last message type
          MOVE      TDATE,SAVEDATE               * save last message date
          MOVE      TTIME,SAVETIME               * save last message time
          GOTO      PINP5500                     * get next tran record
.
.         Check if this is an on-leave transfer record
.
PINP6000  MATCH     ANSL,TMOVE                   * on-leave movement ?
          GOTO      PINP7000 IF NOT EQUAL        * no
.
.         Get the on-leave record for the admission
.
          PACK      KEY14,TWARD,TBED,AADMNO
          CALL      RDONLV1
          IF        OVRCD = 1
            MOVE      SP8,OERDATE
          ENDIF
.
.         Now send an on-leave message (A21)
.
          DISPLAY   *P13:24,*EL,*V2LON,"A21";
          MOVE      TEN4,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICPO                     * trigger A21 message
          ADD       ONE,COUNTER                  * increment counter
          MOVE      "A21",SAVETYPE               * save last message type
          MOVE      TDATE,SAVEDATE               * save last message date
          MOVE      TTIME,SAVETIME               * save last message time
          GOTO      PINP5500                     * get next tran record
.
.         Check if this is a return from leave transfer record
.
PINP7000  MATCH     ANSR,TMOVE                   * return movement ?
          GOTO      PINP8000 IF NOT EQUAL        * no
.
.         Now send a return from leave message (A22)
.
          DISPLAY   *P13:24,*EL,*V2LON,"A22";
          MOVE      TEN5,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICPR                     * trigger A22 message
          ADD       ONE,COUNTER                  * increment counter
          MOVE      "A22",SAVETYPE               * save last message type
          MOVE      TDATE,SAVEDATE               * save last message date
          MOVE      TTIME,SAVETIME               * save last message time
          GOTO      PINP5500                     * get next tran record
.
.         Check if this is a change transfer record
.
PINP8000  MATCH     ANSC,TMOVE                   * change movement ?
          GOTO      PINP9000 IF NOT EQUAL        * no
.
.         We have a "change" record, so check for a change of ward and/or bed.
.         If there is a change in either then we need to send an A02 message.
.
          MATCH     TWARD,SAVEWARD               * ward change ?
          GOTO      PINP8500 IF NOT EQUAL        * yes
.
          MATCH     TBED,SAVEBED                 * bed change ?
          GOTO      PINP8500 IF NOT EQUAL        * yes
.
.         Now, send an update message (A08)
.
          DISPLAY   *P13:24,*EL,*V2LON,"A08";
          MOVE      TWENTY2,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICAC                     * trigger A08 message
          ADD       ONE,COUNTER                  * increment counter
          MOVE      "A08",SAVETYPE               * save last message type
          MOVE      TDATE,SAVEDATE               * save last message date
          MOVE      TTIME,SAVETIME               * save last message time
          GOTO      PINP5500
.
.         The ward and/or bed changed with this change record.
.
PINP8500  MOVE      TWARD,SAVEWARD               * save new ward
          MOVE      TBED,SAVEBED                 * save new bed
.
.         Now, send a transfer message (A02)
.
          DISPLAY   *P13:24,*EL,*V2LON,"A02";
          MOVE      TEN6,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICTR                     * trigger A02 message
          ADD       ONE,COUNTER                  * increment counter
          MOVE      "A02",SAVETYPE               * save last message type
          MOVE      TDATE,SAVEDATE               * save last message date
          MOVE      TTIME,SAVETIME               * save last message time
          GOTO      PINP5500                     * get next tran record
.
.         Check if this is a discharge transfer record
.
PINP9000  MATCH     ANSD,TMOVE                   * discharge movement ?
          GOTO      PINP5500 IF NOT EQUAL        * no
.
          MOVE      AADMNO,KEY8
          CALL      RDDSCH1                      * discharge record found ?
          BRANCH    OVRCD,PINP5500               * no - ignore record
.
.         Now, send a discharge message (A03)
.
          DISPLAY   *P13:24,*EL,*V2LON,"A03";
          MOVE      TEN7,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICDS                     * trigger A03 message
          ADD       ONE,COUNTER                  * increment counter
          MOVE      "A03",SAVETYPE               * save last message type
          MOVE      TDATE,SAVEDATE               * save last message date
          MOVE      TTIME,SAVETIME               * save last message time
          GOTO      PINP5500                     * get next tran record
.
.         See if there were any subsequent admissions and or discharges
.         which were subsequently cancelled.  If so, then we need to send
.         these messages followed by their corresponding cancellation
.         messages.
.
PINP9500  PERFORM   ASTAT,GCAN0000:              * Pre-admitted
                          GCAN0000:              * Admitted
                          GCAN9999:              * Discharged
                          GCAN0000               * On-Leave
.
PINP9999  RETURN
+
.*****************************************************************************
.*                               GRAT0000              Called by: MAIN0000   *
.*            Get the Receiving Application Tag                              *
.* Returns:  HL7RCTAG - Receiving Application Tag (MSH.5)                    *
.*           EXIT   0 - Ok to continue                                       *
.*                  1 - Nothing input                                        *
.*****************************************************************************
.
GRAT0000  KEYIN     *P1:4,*EF,"Receiving Application Tag:":
                    *P28:4,*V2LON,HL7RCTAG
.
          PACK      HL7RCTAG,HL7RCTAG,SP20
          MATCH     SP20,HL7RCTAG                * anything entered ?
          GOTO      GRAT9100 IF EQUAL            * no
.
          MOVE      ZERO,EXIT                    * yes
          GOTO      GRAT9999
.
GRAT9100  MOVE      ONE,EXIT
.
GRAT9999  RETURN
+
.****************************************************************************
.*                              GPAT0000             Called by: PDEM0000    *
.*                   Get the patient U/R or Search                          *
.* Requires:  EVERT - keyin line                                            *
.*            ECOL  - keyin column                                          *
.* Returns:   Patient master details from patma1af, patmx1af & pmspx2af     *
.*            EXIT  0 = Valid U/R input                                     *
.*                  1 = Nothing input                                       *
.****************************************************************************
.
GPAT0000  MOVE      ECOL,CCOL
          MOVE      EVERT,CVERT
          MOVE      ZERO,SRCHSYS
          MOVE      THREE,SRCHOPT
          CALL      KURN                         * get U/R
          BRANCH    EXIT,GPAT9100                * nothing entered
          BRANCH    OVRCD,GPAT9700               * U/R does not exist
.
          MOVE      PURNO,KEY8
          CALL      RDPMPX21
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"PMI extension record not found.  ";
            CALL      HITENTER
            GOTO      GPAT9100
          ENDIF
.
          MOVE      PSNAME,PACSNAME
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      ONE,PACFRMT
          CALL      PACNAME
          DISPLAY   *P35:CVERT,PACFNAME;
.
          MOVE      ZERO,EXIT
          GOTO      GPAT9999
.
GPAT9100  MOVE      ONE,EXIT
          GOTO      GPAT9999
.
GPAT9700  DISPLAY   *P1:24,*EL,*B,"U/R number does not exist.  ";
          CALL      HITENTER
          GOTO      GPAT0000
.
GPAT9999  RETURN
+
.
GETSVAR   RETURN
+
.****************************************************************************
.*                              GSND0000             Called by: LOTS        *
.*                   Get the Sending Facility Tag                           *
.* Returns:   Hospital details from pathspaf                                *
.*            EXIT  0 = Valid U/R input                                     *
.*                  1 = Nothing input                                       *
.*            HL7SFTAG - Sending Facility Tag (MSH.4)                       *
.****************************************************************************
.
GSND0000  IF        COPTION = 1
            DISPLAY   *P1:8,*EF,"Sending Facility:"
            MOVE      EIGHT,EVERT
          ELSE
            DISPLAY   *P1:6,*EF,"Sending Facility:"
            MOVE      SIX,EVERT
          ENDIF
.
          MOVE      TEN9,ECOL
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      ZERO,CKYIMODE
.
          CALL      PATHSPKY
          BRANCH    EXIT,GSND9100:               * nothing entered
                         GSND9100                * exitchar entered
.
          IF         COPTION = 1
            DISPLAY   *P35:8,PTHSNAME:
                      *P1:9,"Approval No.    : ",*V2LON,PTHSAPPR
          ELSE
            DISPLAY   *P35:6,PTHSNAME:
                      *P1:7,"Approval No.    : ",*V2LON,PTHSAPPR
          ENDIF
.
GSND9000  MOVE      PTHSHOSP,HL7SFTAG
.
          MOVE      ZERO,EXIT
          GOTO      GSND9999
.
GSND9100  MOVE      ONE,EXIT
.
GSND9999  RETURN
+
.*****************************************************************************
.*                               GCAN0000          Called by: PINP0000       *
.*           Get any cancellations that occurred after the last transfer     *
.*           record processed for the admission.                             *
.* Requires: SAVETYPE: Last message type                                     *
.*           SAVEDATE: Last message transfer date                            *
.*           SAVETIME: Last message transfer time                            *
.*           SAVKEY30: Key for last transfer record for admission            *
.*           AADMNO:   Admission number                                      *
.*****************************************************************************
.
.         Loop through the patunaaf table for the admission to get the
.         highest status after the last transfer record for the admission
.
GCAN0000  MOVE      SP1,SAVALTYP                 * clear save variable
          MOVE      ASTAT,SAVASTAT               * save admission status
.
.         Re-read the last transfer record for the admission
.
          COMPARE   ONE,ASTAT                    * pre-admission ?
          GOTO      GCAN0100 IF EQUAL            * yes
.
          MOVE      SAVKEY30,KEY30
          CALL      RDTRAN2                      * pattranf record found ?
          BRANCH    OVRCD,GCAN9999               * no - finished
.
          MOVE      PTTRCLTY,ACLAIM              * load transfer claim type
          MOVE      TADOCT,ADOCTA                * load transfer att. doctor
.
GCAN0100  PACK      KEY25,AADMNO,SAVEDATE,SAVETIME,SP30
          CALL      RDSUNAA1                     * position on visit
GCAN0500  CALL      RDKUNAA1                     * read next record
          BRANCH    OVRCD,GCAN5000               * eof - finished
.
          MATCH     PTUNADMN,AADMNO              * same admission still ?
          GOTO      GCAN5000 IF NOT EQUAL        * no - finished
.
          MATCH     "1",PTUNTYPE                 * unadmit record ?
          GOTO      GCAN1000 IF NOT EQUAL        * no
.
          MOVE      PTUNTYPE,SAVALTYP            * save alteration type
          MOVE      PTUNDATE,SAVEADAT            * save alteration date
          MOVE      PTUNTIME,SAVEATIM            * save alteration time
          GOTO      GCAN0500                     * get next record
.
GCAN1000  MATCH     "2",PTUNTYPE                 * undischarge record ?
          IF        @EQUAL
            MOVE      PTUNTYPE,SAVALTYP          * yes - highest status found
            MOVE      PTUNODTE,SAVEDDAT          * save discharge date
            MOVE      PTUNOTTM,SAVEDTIM          * save discharge time
            MOVE      PTUNDTYP,SAVDSTAT          * save discharge status
          ENDIF
.
          GOTO      GCAN0500                     * get next record
.
.         We have finished looping, so send the relevant messages if there had
.         been a subsequent increase in status
.
GCAN5000  MATCH     SP1,SAVALTYP                 * any subsequent cancellations?
          GOTO      GCAN9999 IF EQUAL            * no - finished
.
          CALL      CLPATDSC                     * clear discharge fields
.
          BRANCH    ASTAT,GCAN5100:              * pre-admitted
                          GCAN5200:              * admitted
                          GCAN9999:              * discharged
                          GCAN5200               * on-leave
.
.         Send an admission message if this is a current pre-admission
.
GCAN5100  DISPLAY   *P13:24,*EL,*V2LON,"A01";
          MOVE      TWO,ASTAT                    * set astat to admitted
          MOVE      SAVEADAT,TDATE               * set transfer date/time
          MOVE      SAVEATIM,TTIME
          MOVE      FORTY,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICAD                     * trigger A01 message
          ADD       ONE,COUNTER                  * increment counter
.
.         Send a discharge message if this is a current admission or
.         pre-admission and the highest status was discharged
.
GCAN5200  MATCH     "2",SAVALTYP
          GOTO      GCAN5300 IF NOT EQUAL
.
          DISPLAY   *P13:24,*EL,*V2LON,"A03";
          MOVE      THREE,ASTAT                  * set astat to discharged
          MOVE      SAVEDDAT,DDATE               * set discharge variables
          MOVE      SAVEDTIM,DTIME
          MOVE      SAVDSTAT,DSTAT
          MOVE      FORTY1,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICDS                     * trigger A03 message
          ADD       ONE,COUNTER                  * increment counter
.
.         Send a cancel discharge message if this is a current admission or
.         pre-admission and the highest status was discharged
.
          DISPLAY   *P13:24,*EL,*V2LON,"A13";
          MOVE      FORTY2,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICCD                     * trigger A13 message
          ADD       ONE,COUNTER                  * increment counter
.
.         Send a cancel admission message if this is a current pre-admission
.
GCAN5300  MATCH     "2",SAVASTAT                 * current admission ?
          GOTO      GCAN9999 IF EQUAL            * yes - finished
.
          DISPLAY   *P13:24,*EL,*V2LON,"A11";
          MOVE      TWO,ASTAT                    * set astat to admitted
          MOVE      SAVEADAT,TDATE               * set transfer date/time
          MOVE      SAVEATIM,TTIME
          MOVE      FORTY3,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICCA                     * trigger A11 message
          ADD       ONE,COUNTER                  * increment counter
.
GCAN9000  MOVE      SAVASTAT,ASTAT               * restore astat
.
GCAN9999  RETURN
+
.*****************************************************************************
.*                               PCAN0000          Called by: PINP0000       *
.*           Get any cancellations that occurred where the admission status  *
.*           is cancelled.                                                   *
.* Requires: AADMNO:   Admission number                                      *
.*****************************************************************************
.
.         Loop through the patunaaf table for the admission to get the
.         highest status for a cancelled admission
.
PCAN0000  MOVE      ONE,CANCLFLG                 * init. flags for record types
          MOVE      ONE,ADMITFLG
          MOVE      ONE,DISCHFLG
.
          PACK      KEY25,AADMNO,SP30
          CALL      RDSUNAA1                     * position on visit
PCAN0500  CALL      RDKUNAA1                     * read next record
          BRANCH    OVRCD,PCAN5000               * eof - finished
.
          MATCH     PTUNADMN,AADMNO              * same admission still ?
          GOTO      PCAN5000 IF NOT EQUAL        * no - finished
.
          MATCH     "5",PTUNTYPE                 * cancel pre-admission record ?
          GOTO      PCAN0700 IF NOT EQUAL        * no
.
          MOVE      ZERO,CANCLFLG                * set flag for found
          MOVE      PTUNDATE,SAVEPDAT            * save alteration date
          MOVE      PTUNTIME,SAVEPTIM            * save alteration time
          GOTO      PCAN0500                     * get next record
.
PCAN0700  MATCH     "1",PTUNTYPE                 * unadmit record ?
          GOTO      PCAN1000 IF NOT EQUAL        * no
.
          MOVE      ZERO,ADMITFLG                * set flag for found
          MOVE      PTUNDATE,SAVEADAT            * save alteration date
          MOVE      PTUNTIME,SAVEATIM            * save alteration time
          GOTO      PCAN0500                     * get next record
.
PCAN1000  MATCH     "2",PTUNTYPE                 * undischarge record ?
          GOTO      PCAN1000 IF NOT EQUAL        * no
.
          MOVE      ZERO,DISCHFLG                * set flag for found
          MOVE      PTUNODTE,SAVEDDAT            * save discharge date
          MOVE      PTUNOTTM,SAVEDTIM            * save discharge time
          MOVE      PTUNDTYP,SAVDSTAT            * save discharge status
          GOTO      PCAN0500                     * get next record
.
.         We have finished looping, so send the relevant messages if there had
.         been a subsequent increase in status
.
PCAN5000  CALL      CLPATTRN                     * clear pattranf variables
          CALL      CLPATDSC                     * clear discharge fields
.
          BRANCH    CANCLFLG,PCAN9999
.
.         Send a pre-admission message
.
          DISPLAY   *P13:24,*EL,*V2LON,"A14";
          MOVE      ONE,ASTAT                    * set astat to pre-admitted
          MOVE      ADATE,TDATE                  * set transfer date/time
          MOVE      ATIME,TTIME
          MOVE      FORTY9,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICPE                     * trigger A14 message
          ADD       ONE,COUNTER                  * increment counter
.
.         Send an admission message
.
          BRANCH    ADMITFLG,PCAN5200
.
          DISPLAY   *P13:24,*EL,*V2LON,"A01";
          MOVE      TWO,ASTAT                    * set astat to admitted
          MOVE      SAVEADAT,TDATE               * set transfer date/time
          MOVE      SAVEATIM,TTIME
          MOVE      FORTY4,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICAD                     * trigger A01 message
          ADD       ONE,COUNTER                  * increment counter
.
.         Send a discharge message if the highest status was discharged
.
          BRANCH    DISCHFLG,PCAN5100
.
          DISPLAY   *P13:24,*EL,*V2LON,"A03";
          MOVE      THREE,ASTAT                  * set astat to discharged
          MOVE      SAVEDDAT,DDATE               * set discharge variables
          MOVE      SAVEDTIM,DTIME
          MOVE      SAVDSTAT,DSTAT
          MOVE      FORTY5,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICDS                     * trigger A03 message
          ADD       ONE,COUNTER                  * increment counter
.
.         Send a cancel discharge message if the highest status was discharged
.
          DISPLAY   *P13:24,*EL,*V2LON,"A13";
          MOVE      FORTY6,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICCD                     * trigger A13 message
          ADD       ONE,COUNTER                  * increment counter
.
.         Send a cancel admission message
.
PCAN5100  BRANCH    CANCLFLG,PCAN9000
.
          DISPLAY   *P13:24,*EL,*V2LON,"A11";
          MOVE      TWO,ASTAT                    * set astat to admitted
          MOVE      SAVEADAT,TDATE               * set transfer date/time
          MOVE      SAVEATIM,TTIME
          MOVE      FORTY7,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICCA                     * trigger A11 message
          ADD       ONE,COUNTER                  * increment counter
.
PCAN5200  DISPLAY   *P13:24,*EL,*V2LON,"A27";
          MOVE      FIVE,ASTAT                   * set astat to cancelled
          MOVE      SAVEPDAT,TDATE               * set transfer date/time
          MOVE      SAVEPTIM,TTIME
          MOVE      FORTY8,HL7TRGID
          MOVE      SP8,HL7INCLD
          PROC      DGCLICPA                     * trigger A27 message
          ADD       ONE,COUNTER                  * increment counter
.
PCAN9000  MOVE      FIVE,ASTAT                   * restore astat
.
PCAN9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD002IO
.
          INC       CALCAGE
          INC       CLOUTCAN
          INC       CLOUTRSH
          INC       CLPATDSC
          INC       CLPATMAS
          INC       CLPATTRN
          INC       DGCLICAC
          INC       DGCLICAD
          INC       DGCLICAE
          INC       DGCLICCA
          INC       DGCLICCE
          INC       DGCLICCD
          INC       DGCLICDI
          INC       DGCLICDS
          INC       DGCLICMR
          INC       DGCLICOA
          INC       DGCLICOB
          INC       DGCLICOC
          INC       DGCLICOG
          INC       DGCLICOH
          INC       DGCLICON
          INC       DGCLICOU
          INC       DGCLICPA
          INC       DGCLICPE
          INC       DGCLICPO
          INC       DGCLICPR
          INC       DGCLICTR
          INC       DGCLICUD
          INC       DGCLICUP
          INC       DGCLICUR
          INC       DGCLIM02
          INC       DGCLIWLB
          INC       DGCLIWLD
          INC       NZHISIIO
          INC       NZIBSRCH
          INC       PATALERT
          INC       PATCOMN1
          INC       PATHSPKY
          INC       PATSNDX
          INC       PATSNX2
          INC       PMIGTNID
          INC       PMIHEAD
.
          INC       BOKRC1IO/INC
          INC       EMRVISIO/INC
          INC       HL7INBIO/INC
          INC       MLTHCPIO/INC
          INC       NHIMASIO/INC
          INC       OUTBOAIO/INC
          INC       OUTBB1IO/INC
          INC       OUTCTYIO/INC
          INC       OUTPREIO/INC
          INC       OUTSITIO/INC
          INC       PATALRIO/INC
          INC       PATCODIO/INC
          INC       PATDO1IO/INC
          INC       PATDSCIO/INC
          INC       PATECDIO/INC
          INC       PATGSRIO/INC
          INC       PATHSPIO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PATNIDIO/INC
          INC       PATONLIO/INC
          INC       PATPR1IO/INC
          INC       PATRE1IO/INC
          INC       PATTRNIO/INC
          INC       PATUADIO/INC
          INC       PATUNAIO/INC
          INC       PATVISIO/INC
          INC       PMSHCPIO/INC
          INC       PMSPX2IO/INC
          INC       PMSVX1IO/INC
          INC       WATTR1IO/INC
          INC       WATTX1IO/INC
          INC       WEBSECIO/INC
