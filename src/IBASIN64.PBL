.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V10.02.01 19.05.2011 Sandra Barcham   239574
.           New printer/department table mods
.-------------------------------------------------------
. V9.09.01  24.09.2007 Sandra Barcham   CAR 147373
.           Changed Fax number from apmasfax to apmaur2
.-------------------------------------------------------
. V9.04.01  08.04.2005 Peter Vela CAR 59696
.           Changed commodity group from DIM 5 to DIM 6
.-------------------------------------------------------
. V9.03.03  23.07.2004  Mike Laming  CAR 43474
.           Change UNCEA200 & USCEA200 to not write to "apscebaf" if qty = 0
. V9.03.02  13.07.2004  Steve Armstrong   CAR 51708
.           Added PATCONFD to replace SINCONFD Sector 13
. V9.03.01  29.09.2003 Mike Laming CAR 43776
.           Add reads to CONTROLF for fixed info needed in E-mail Header
.-------------------------------------------------------
. V9.02.02  04.06.2003 Mike Laming CAR 39306
.           Add Virtual Integration process - if SNCOEMAL is set,
.           to Email/Fax/Print Purchase Ords (see FPORD100)
. V9.02.01  18.03.2003  Davin Sloan Quote 15040
.           Recompiled for SINORDPR & SINORDFX (Multiple Delivery Points)
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.01  26.03.2002 Sai HPS SRF 15893
.           Recompiled for changes to SINORDPR.PBL
.           Changed the width of vars displayed for layout 16
.           Also removed IBACODFD/IO
. VF.09.B03 02.03.2001 Sandra Barcham
.           Add in vha customer code 6,7,8 & 9
.           srf 9088
. VF.09.B02 23.11.2000 Charles Handaya
.           Modification of Warehouse Security
.-------------------------------------------------------
. VF.01.B01 01.11.2000 Charles Handaya
.           Change P/O layout 10=STL, inside SINORDPR.PBL
.           from matrix printer Landscape to matrix printer Potrait
.           Added GST Unit Price in P/O Detail
.           Added Additional Comments in P/O Header
.           Quote 9871
.-------------------------------------------------------
. VF.01.04  30.10.2000 Sandra Barcham
.           Recompiled for IBACODIO & IBAPRNIO
. VF.01.03  16.08.2000 Sandra Barcham
.           Add in customer code 4 & 5
.           srf 4940
. VF.01.02  20.06.2000 Sandra Barcham
.           Fix default warehouse for non-stock
. VF.01.01  25.05.2000 Charles Handaya
.           Recompiled for SINORDPR chge (print 4 comments in P/O header - MHG)
.-------------------------------------------------------
. VF.00.03  15.02.2000 Sandra Barcham
.           Remove temporary file
. VF.00.02  15.02.2000 Sandra Barcham
.           Fix fax number
. VF.00.01  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
.           10.11.1999  Charles Handaya
.           Fix Y2K of Audit Files Date (CCYYMMDD)
.           14.10.1999  Charles Handaya
.           Included the faxing or printing Purchase Order for non VHA
.           Quote 9568
.-------------------------------------------------------
CEAFILE   FORM      1
COMMENT1  DIM       60
COMMENT2  DIM       60
COMMENT3  DIM       60
COMMENT4  DIM       60
COUNTING  FORM      1
DTOGST10  DIM       10
DUTPRC10  DIM       10
ENDCON    DIM       3
ENDCRD    DIM       5
ENDMSG    DIM       3
ENDPON    DIM       7
F12       FORM      12
F12P4     FORM      12.4
F12P4A    FORM      12.4
FAXNUMB   DIM       20
FILESLIM  DIM       8
MHGPRT    DIM       9
SAVECT    FORM      12.4
SAVGST    FORM      12.4
STRCRD    DIM       5
STRPON    DIM       7
STRMSG    DIM       3
STRCON    DIM       3
SUPLIN1   DIM       35
SUPLIN2   DIM       35
SUPLIN3   DIM       35
SUPLIN4   DIM       35
SUPLIN5   DIM       35
.
D15A      DIM       15
D11       DIM       11
D12       DIM       12
D30       DIM       30
D35       DIM       35
D45A      DIM       45
D50       DIM       50
DELDET18  FORM      1
DIM15A    DIM       15
DIM15B    DIM       15
DIM30     DIM       30
DIM35     DIM       35
EARLYDEL  DIM       10
FORM3P2   FORM      3.2
FORM4P2   FORM      4.2
FORM5P2   FORM      5.2
FORM8P2   FORM      8.2
FORM12P2  FORM      12.2
HYPHEN    INIT      "-"
LINEUP    FORM      "0"
MYCOL     FORM      2
MYVERT    FORM      2
OFFUSE    INIT      "Office Use Only: "
PNLN1     DIM       13
PNLN2     DIM       13
STARS70   INIT      "***********************************":
                    "***********************************"
TF7P2B    FORM      7.2
TF6P2     FORM      6.2
WVHAMESS  DIM       40
.
CPPAPER1  FORM      2
CDEFPRT1  DIM       3
SPLFILE1  DIM       8
CNOCOPY1  DIM       3
.
CPPAPER2  FORM      2
CDEFPRT2  DIM       3
SPLFILE2  DIM       8
CNOCOPY2  DIM       3
.
VHADEL    DIM       40
OTHDEL    DIM       40
VHAORDER  FORM      8
ORDTOTAL  FORM      12.2
LASTORD   DIM       7
LASTSUP   DIM       5
LASTFNO   DIM       3
VHASEQNO  FORM      3
NXORDLIN  FORM      3
UNIT10    DIM       10
PART15    DIM       15
ACKCONF   FORM      1
WGIVEN    FORM      10  *** HOW MUCH STOCK ACTUALLY ORDERED
WORDER    FORM      10
PFORM3    FORM      3
.
SIVHACK   DIM       2      2        119   Ack Type IA=Price Unchanged
.                                                  IP=Price Change
.                                                  IB=Back Ordered
.                                                  IR=Item Rejected
.
SIVHAQT   FORM      7      5        121   Ack Qty  IA=Confirmed Quantity
.                                                  IP=Conformed Quantity
.
INVVHAAF  FILE     ASCII, FIXED=126
.
SSIVHDAT   DIM       6      6        1     Date
SSIVHFNO   DIM       3      3        7     File Number
SSIVHORD   DIM       20     7        10    Order Reference
SSIVHLIN   DIM       3      3        17    Line Number
SSIVHQTY   FORM      7      5        20    Quantity Ordered
SSIVHSUN   DIM       15     15       25    Supply Unit
SSIVHCOS   FORM      9.4    8        40    Cost
SSIVHPAT   DIM       20     20       48    Part Number (customer code)
SSIVHSTA   DIM       1      1        68    Status 0 = Load 1 = Overwritten
.                                                 2 = Processed
SSIVHCOR   DIM       7      7        69    Purchase Order Created
SSIVHVEN   DIM       20     20       69    Vendor Code
SSIVHTYPE  FORM      2      2        69    Supplier being used 0-VHASOS,1-Barwon
SSIVHSPA   DIM       30     30       71
.
.
.
SITEABBR  DIM       3
SITEAVHA  INIT      "VHA"
SITEABLS  INIT      "BLS"
SITE      DIM       5
SITEVHA   INIT      "V.H.A"
SITEBLS   INIT      "B.L.S"
SITETYPE  FORM      2
HEADMESS  DIM       25
.
FMTQTY    DIM       9
FMTPRI    DIM       14
FMTTOT    DIM       14
CCTOTAL   FORM      12.2
.
TODAY     DIM       8
TRANFILE  DIM       40
KILLFILE  INIT      "X*"
RM        INIT      "rm "
PIPE      INIT      "|"
TILDA     INIT      "~"
.
ORDERCNT  FORM      2            * Order Count
ORDERS    FORM      7[99]
IMPORTFL  FILE      ASCII, FIXED=250
QTYREQ    FORM      6
QTYEXT    FORM      6
LASTCST   DIM       5
..FILENAME  DIM       8
..COMMAND   DIM       127
COMMANDS  DIM       127
.
. Search Functions
.------------------
SAV1      DIM       57
SAV2      DIM       57
SAV3      DIM       57
SAV4      DIM       57
SAV5      DIM       57
SAV6      DIM       57
SAV7      DIM       57
SAV8      DIM       57
SAV9      DIM       57
.
SKEY57    DIM       57
PARTCODE  DIM       20
.
.         File Variables
.
FNAME     INIT      "sin64t"          * set up for temp file name
TEMPFILE  DIM       8
.
EXPORTFL  FILE      ASCII,FIXED=155
EXPORTFN  DIM       8
PEGTXTFL  FORM      5
.
.         Temporary File Definition
.         -------------------------
.         Filename : sin64txx.dat          (xx = port id)
.
S64TEMP1  IFILE SQL, FIXED=15, KEY="U1-7"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
STMPPONO  DIM       7      7        1     Purchase Order Number
STMPSUPP  DIM       5      5        8     Supplier Code
STMPPRFX  FORM      1      2        13    Status (0=Print, 1=Fax)
.
.End of Record                      15
.
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASIN64
.   Function      :   Load and Order Imprest                  
.   Generated  On :   19/05/2011
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSCEAFD/INC
          INC       APSCEBFD/INC
          INC       APSCIOFD/INC
          INC       APSMASFD/INC
          INC       APSMXRFD/INC
          INC       APSORDFD/INC
          INC       APSPPDFD/INC
          INC       APSSNTFD/INC
          INC       APSSUBFD/INC
          INC       FMSAMAFD/INC
          INC       FMSCONFD/INC
          INC       FMSCSAFD/INC
          INC       FMSFPSFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCDF    
          INC       FMSLMCFD/INC
          INC       FMSTUPFD/INC
          INC       IBAGEDFD/INC
          INC       IBAGSTFD/INC
          INC       IBAPRNFD/INC
          INC       PATCONFD/INC
          INC       SINCCAFD/INC
          INC       SINCGAFD/INC
          INC       SINCGBFD/INC
          INC       SINCIAFD/INC
          INC       SINCICFD/INC
          INC       SINCIEFD/INC
          INC       SINCIFFD/INC
          INC       SINCIHFD/INC
          INC       SINCODFD/INC
          INC       SINCONFD/INC
          INC       SINDPCFD/INC
          INC       SINFACFD/INC
          INC       SINLIMFD/INC
          INC       SINLTTFD/INC
          INC       SINNATFD/INC
          INC       SINORIFD/INC
          INC       SINPEGFD/INC
          INC       SINPERFD/INC
          INC       SINPOAFD/INC
          INC       SINPOBFD/INC
          INC       SINPOCFD/INC
          INC       SINPODFD/INC
          INC       SINRCPFD/INC
          INC       SINSCDFD/INC
          INC       SINSCMFD/INC
          INC       SINSOSFD/INC
          INC       SINSUAFD/INC
          INC       SINSUBFD/INC
          INC       SINTMPDF/INC
          INC       SINTRNFD/INC
          INC       SINVHAFD/INC
          INC       SINWARFD/INC
          INC       SINWSEFD/INC
.=========================
.Local Variable Definition
.-------------------------
IMPORTFN  DIM      40 * Scr 00 Fld     7
CONFDESC  DIM      30 * Scr 00 Fld    15
MESSDESC  DIM      30 * Scr 00 Fld    16
DEFTWARE  DIM       5 * Scr 00 Fld    17
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASIN64"
PRGNAM    INIT      "Load and Order Imprest                  "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      RDPAR000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening apsceaaf";
          OPEN      APSCEAA1,"apsceaaf"
          DISPLAY   *P56:24,"Opening apsceaaf";
          OPEN      APSCEAA2,"apsceaaf"
          DISPLAY   *P56:24,"Opening apscebaf";
          OPEN      APSCEBA1,"apscebaf"
          DISPLAY   *P56:24,"Opening apscebaf";
          OPEN      APSCEBA2,"apscebaf"
          DISPLAY   *P56:24,"Opening apscioaf";
          OPEN      APSCIOA1,"apscioaf"
          DISPLAY   *P56:24,"Opening apscioaf";
          OPEN      APSCIOA2,"apscioaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA1,"apsmxraf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA2,"apsmxraf"
          DISPLAY   *P56:24,"Opening apsordaf";
          OPEN      APSORDA1,"apsordaf"
          DISPLAY   *P56:24,"Opening apsordaf";
          OPEN      APSORDA2,"apsordaf"
          DISPLAY   *P56:24,"Opening apsppdaf";
          OPEN      APSPPDA1,"apsppdaf"
          DISPLAY   *P56:24,"Opening apssntaf";
          OPEN      APSSNTA1,"apssntaf"
          DISPLAY   *P56:24,"Opening apssubaf";
          OPEN      APSSUBA1,"apssubaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA2,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA3,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA4,"fmsamaaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 43",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudam";
            OPEN      FMSAUDAM,"fmsaudam"
          ENDIF
          MOVE      "   51",AUDTSECT
          MOVE      " 46",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudla";
            OPEN      FMSAUDLA,"fmsaudla"
          ENDIF
          DISPLAY   *P56:24,"Opening fmscsaaf";
          OPEN      FMSCSAA1,"fmscsaaf"
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
          DISPLAY   *P56:24,"Opening fmslmcaf";
          OPEN      FMSLMCA1,"fmslmcaf"
          DISPLAY   *P56:24,"Opening ibagedaf";
          OPEN      IBAGEDA1,"ibagedaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA1,"ibagstaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA2,"ibagstaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA3,"ibagstaf"
          MOVE      "   24",AUDTSECT
          MOVE      "201",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudga";
            OPEN      SINAUDGA,"sinaudga"
          ENDIF
          MOVE      "   24",AUDTSECT
          MOVE      "207",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudic";
            OPEN      SINAUDIC,"sinaudic"
          ENDIF
          MOVE      "   24",AUDTSECT
          MOVE      "208",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudie";
            OPEN      SINAUDIE,"sinaudie"
          ENDIF
          MOVE      "   24",AUDTSECT
          MOVE      "210",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudpa";
            OPEN      SINAUDPA,"sinaudpa"
          ENDIF
          MOVE      "   24",AUDTSECT
          MOVE      "210",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudpc";
            OPEN      SINAUDPC,"sinaudpc"
          ENDIF
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA1,"sinccaaf"
          DISPLAY   *P56:24,"Opening sincgaaf";
          OPEN      SINCGAA1,"sincgaaf"
          DISPLAY   *P56:24,"Opening sincgaaf";
          OPEN      SINCGAA2,"sincgaaf"
          DISPLAY   *P56:24,"Opening sincgbaf";
          OPEN      SINCGBA1,"sincgbaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA1,"sinciaaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA1,"sincicaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA2,"sincicaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA4,"sincicaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA1,"sincieaf"
          DISPLAY   *P56:24,"Opening sincifaf";
          OPEN      SINCIFA1,"sincifaf"
          DISPLAY   *P56:24,"Opening sincifaf";
          OPEN      SINCIFA2,"sincifaf"
          DISPLAY   *P56:24,"Opening sincihaf";
          OPEN      SINCIHA1,"sincihaf"
          DISPLAY   *P56:24,"Opening sincodaf";
          OPEN      SINCODA1,"sincodaf"
          DISPLAY   *P56:24,"Opening sindpcaf";
          OPEN      SINDPCA1,"sindpcaf"
          DISPLAY   *P56:24,"Opening sinfacaf";
          OPEN      SINFACA1,"sinfacaf"
          DISPLAY   *P56:24,"Opening sinfacaf";
          OPEN      SINFACA2,"sinfacaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA1,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA2,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA3,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinoriaf";
          OPEN      SINORIA1,"sinoriaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA1,"sinperaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA1,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpobaf";
          OPEN      SINPOBA1,"sinpobaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA1,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA7,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA8,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpodaf";
          OPEN      SINPODA1,"sinpodaf"
          DISPLAY   *P56:24,"Opening sinrcpaf";
          OPEN      SINRCPA1,"sinrcpaf"
          DISPLAY   *P56:24,"Opening sinscdaf";
          OPEN      SINSCDA1,"sinscdaf"
          DISPLAY   *P56:24,"Opening sinscdaf";
          OPEN      SINSCDA2,"sinscdaf"
          DISPLAY   *P56:24,"Opening sinscdaf";
          OPEN      SINSCDA3,"sinscdaf"
          DISPLAY   *P56:24,"Opening sinscmaf";
          OPEN      SINSCMA1,"sinscmaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA1,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsubaf";
          OPEN      SINSUBA1,"sinsubaf"
          DISPLAY   *P56:24,"Opening sintrnaf";
          OPEN      SINTRNA1,"sintrnaf"
          DISPLAY   *P56:24,"Opening  sinvhaaf           ";
          OPEN      SINVHAA1,"sinvhaaf"          
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA1,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA1,"sinwseaf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA2,"sinwseaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Options                            
          ENDIF
          RETURN
.--------------------------------
. Screen - Options                            
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Options                            
.-------------------------------------------------------
CF00L000
          MOVE      SP70,SIPAORI 
          MOVE      SP70,SIPAICN 
          MOVE      SP70,SIPADEL 
          MOVE      SP70,SIPAMES 
          MOVE      SP70,SIPADIN 
          MOVE      SP70,SIPAIDP 
          MOVE      SP70,SIPACON 
          MOVE      SP70,DEFTWARE
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Options                            
.--------------------------------------------------------
KY00L000
.
KY00L110
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIORNAME
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIOREXT 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      EORIG000
          BRANCH    EXIT,KY00L900,KY00L900
          MOVE      ZERO,ACCEPT
          MOVE      SIPAORI,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIORNAME,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIOREXT,VAR      
            CALL      DISPITEM
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Options                            
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Options                            
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Options                            
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Options                            
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L101:
                            PS00L999,PS00L102,PS00L103,PS00L104:
                            PS00L105,PS00L106,PS00L107,PS00L108:
                            PS00L109,PS00L110,PS00L111,PS00L112:
                            PS00L113,PS00L114,PS00L999,PS00L115:
                            PS00L116
          GOTO     PS00L999
.
PS00L101
          MOVE      HEADMESS,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      SIORNAME,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      IMPORTFN,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      SIOREXT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      SIPAICN,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      SIPADEL,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      SIPAMES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          UNPACK    SIPADIN,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      SIPAIDP,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          MOVE      SIPACON,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          MOVE      CONFDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          MOVE      MESSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          MOVE      DEFTWARE,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L114
          MOVE      SIWADES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L115
          MOVE      SIPEPER,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L116
          MOVE      SIPEYEAR,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Options                            
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L103,SF00L104,SF00L105,SF00L106:
                            SF00L107,SF00L108,SF00L006,SF00L006:
                            SF00L109,SF00L006,SF00L006,SF00L006:
                            SF00L006
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L103,SF00L104,SF00L105,SF00L106:
                            SF00L107,SF00L108,SF00L020,SF00L020:
                            SF00L109,SF00L020,SF00L020,SF00L020:
                            SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      PROC0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L103
          CALL     SELECTED
          STRIP     SIPAICN 
          SFORMAT   VAR,SCPSLEN
          MOVE      SIPAICN,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,SIPAICN 
          SFORMAT   VAR,127
          ENDSET    SIPAICN 
          APPEND    SP70,SIPAICN 
          RESET     SIPAICN 
          CMATCH    EXITCHAR,SIPAICN 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,SIPAICN 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
          ENDIF
          MOVE      SIPAICN,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L104
          CALL     SELECTED
          STRIP     SIPADEL 
          SFORMAT   VAR,SCPSLEN
          MOVE      SIPADEL,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,SIPADEL 
          SFORMAT   VAR,127
          ENDSET    SIPADEL 
          APPEND    SP70,SIPADEL 
          RESET     SIPADEL 
          CMATCH    EXITCHAR,SIPADEL 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,SIPADEL 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
          ENDIF
          MOVE      SIPADEL,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L105
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,MESSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EMESS000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SIPAMES,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      MESSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L106
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EORDD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L106
            ENDIF
            BRANCH    EXIT,SF00L106,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          UNPACK    SIPADIN,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L107
          CALL     SELECTED
          STRIP     SIPAIDP 
          SFORMAT   VAR,SCPSLEN
          MOVE      SIPAIDP,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,SIPAIDP 
          SFORMAT   VAR,127
          ENDSET    SIPAIDP 
          APPEND    SP70,SIPAIDP 
          RESET     SIPAIDP 
          CMATCH    EXITCHAR,SIPAIDP 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,SIPAIDP 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L107
            ENDIF
          ENDIF
          MOVE      SIPAIDP,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L108
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CONFDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ECONF000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L108
            ENDIF
            BRANCH    EXIT,SF00L108,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SIPACON,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CONFDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L109
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIWADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EWARE000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L109
            ENDIF
            BRANCH    EXIT,SF00L109,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      DEFTWARE,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIWADES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.------------------------------------------------------------
. Read Parameters
.------------------------------------------------------------
RDPAR000  CALL      SELPRT00    * Select Printer
          CALL      GETCON00    * Read Controlf Parameters
          CALL      REDCON00
.
          CALL      ONAT0000    * Do NATO Stuff
.
          CALL      SCOD0000    * Select Default Account VHA1,VHA2,BLS
.
..          CALL      PORT0000    * Lock Port for Modem
.
          CALL      COPY0000    * Copy File from PC using script "ibasin64.us1"
.
          RETURN
.------------------------------------------------------------
. Select Printer
.------------------------------------------------------------
SELPRT00
.         OPEN      IBAPRNT1,"ibaprntf"
          DISPLAY   *P20:2,*EF,"Select Printer":
                    *P40:2,*V2LON," - for Purchase Order";
.
          MOVE      TWO,CPPAPER
          CALL      SELPRINT
          MOVE      CPPAPER,CPPAPER1
          MOVE      CDEFPRT,CDEFPRT1
          MOVE      SPLFILE,SPLFILE1
          MOVE      CNOCOPY,CNOCOPY1
.
          DISPLAY   *P40:2,*EF,*V2LON," - for Report";
.
          MOVE      THREE,CPPAPER
          CALL      SELPRINT
          MOVE      CPPAPER,CPPAPER2
          MOVE      CDEFPRT,CDEFPRT2
          MOVE      SPLFILE,SPLFILE2
          MOVE      CNOCOPY,CNOCOPY2
.
.         CLOSE     IBAPRNT1
          CALL      DISPHEAD
.
SELPRT99  RETURN
.------------------------------------------------------------
. Read Control Parameters
.------------------------------------------------------------
GETCON00  READ      CONTROLF,TWENTY3;*143,HDEFWH
.
          READ      CONTROLF,TWENTY4;*165,HLASTCIN,*228,SNCOVHA4,SNCOVHA5
.
          READ      CONTROLF,TWENTY5;HADEL1,HADEL2,HADEL3,HADEL4:
                                     HADEL5,HADEL6,HADEL7,HADEL8
.
          READ      CONTROLF,TWENTY6;*1,INCNVHAD,*30,INCNVHAC,INCNVHAS,*47:
                                     INCNVHAN,INCNTRAN:
                                     *92,INCNTVHA:
                                     *174,INCNSOSD:
                                     *246,HVHAPART
.
.                                           * read Virtual Integration flag
          READ      CONTROLF,SIXTY3;*242,SNCOEMAL
.                                           * read fixed info for e-mail
          READ      CONTROLF,TEN3;CHADD1,CHADD2,CHPOST                 *I-f1101
          READ      CONTROLF,TWENTY3;*51,HSHORT                        *I-f1101
          READ      CONTROLF,SIXTY3;*1,SNCOHEAN                        *I-f1101
.
          CLEAR     KEY40
          STRIP     INCNSOSD
          APPEND    INCNSOSD,KEY40
          MOVE      PORT,KEY2
          REP       " 0",KEY2
          APPEND    KEY2,KEY40
          APPEND    "/",KEY40
          RESET     KEY40
          MOVE      KEY40,INCNSOSD
.
          PACK      HVHAPART,HVHAPART,SP70
          REP       " 0",HVHAPART
.
          READ      CONTROLF,SIXTY3;*86,INCNTVH2,INCNVHA2:
                                    *183,SNCOVHA3,SNCOTVH3:
                                    *240,SNCOPURC
          PACK      INCNTVH2,INCNTVH2,SP70
          PACK      INCNVHA2,INCNVHA2,SP70
          PACK      SNCOTVH3,SNCOTVH3,SP70
          PACK      SNCOVHA3,SNCOVHA3,SP70
.
          READ      CONTROLF,SIXTY7;*216,SNCOVHA6,SNCOVHA7,SNCOVHA8,SNCOVHA9
          PACK      SNCOVHA6,SNCOVHA6,SP70
          PACK      SNCOVHA7,SNCOVHA7,SP70
          PACK      SNCOVHA8,SNCOVHA8,SP70
          PACK      SNCOVHA9,SNCOVHA9,SP70
          RETURN
.------------------------------------------------------------
. Get VHA Account code MENU
.------------------------------------------------------------
SCOD0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON," 0.",*HOFF," Exit":
                    *P1:5,*V2LON," 1.",*HOFF," H.S.A. Customer Code ",INCNVHAC:
                    *P1:6,*V2LON," 2.",*HOFF," H.S.A. Customer Code ",INCNVHA2:
                    *P1:7,*V2LON," 3.",*HOFF," H.S.A. Customer Code ",SNCOVHA3:
                    *P1:8,*V2LON," 4.",*HOFF," H.S.A. Customer Code ",SNCOVHA4:
                    *P1:9,*V2LON," 5.",*HOFF," H.S.A. Customer Code ",SNCOVHA5:
                    *P1:10,*V2LON," 6.",*HOFF," H.S.A. Customer Code ",SNCOVHA6:
                    *P1:11,*V2LON," 7.",*HOFF," H.S.A. Customer Code ",SNCOVHA7:
                    *P1:12,*V2LON," 8.",*HOFF," H.S.A. Customer Code ",SNCOVHA8:
                    *P1:13,*V2LON," 9.",*HOFF," H.S.A. Customer Code ",SNCOVHA9
          KEYIN     *P1:15,*HOFF,"Select Option : ",*V2LON,F1
          MOVE      ONE,EXIT
          COMPARE   ZERO,F1
          GOTO      SCOD9900 IF EQUAL
          MOVE      ZERO,EXIT
          MOVE      ZERO,SITETYPE
.
.
          LOAD      SITE,F1,SITEVHA,SITEVHA,SITEVHA,SITEVHA,SITEVHA:
                            SITEVHA,SITEVHA,SITEVHA,SITEVHA
.
          LOAD      SITEABBR,F1,SITEAVHA,SITEAVHA,SITEAVHA,SITEAVHA,SITEAVHA:
                                SITEAVHA,SITEAVHA,SITEAVHA,SITEAVHA
.
          BRANCH    F1,SCOD0100,SCOD0200,SCOD0300,SCOD0400,SCOD0500:
                       SCOD0600,SCOD0700,SCOD0800,SCOD0900
.
          BEEP
          GOTO      SCOD0000
.
SCOD0100  MOVE      ONE,INSSVHA
          MOVE      "HSA Customer Code ",KEY18
          PACK      HEADMESS,KEY18,INCNVHAC
          GOTO      SCOD9999
.
SCOD0200  MOVE      ONE,INSSVHA
          MOVE      "HSA Customer Code ",KEY18
          PACK      HEADMESS,KEY18,INCNVHA2
          PACK      KEY6,INCNVHA2,SP70
          REP       " 0",KEY6
          MATCH     "000000",KEY6
          IF        @EQUAL
            DISPLAY     *P1:23,*EL,*B,"Invalid Customer Code. - ";
            CALL        HITENTER
            GOTO        SCOD0000
          ENDIF
          PACK      INCNTVHA,INCNTVH2,SP70
          PACK      INCNVHAC,INCNVHA2,SP70
          GOTO      SCOD9999
.
SCOD0300  MOVE      ONE,INSSVHA
          MOVE      "HSA Customer Code ",KEY18
          PACK      HEADMESS,KEY18,SNCOVHA3
          PACK      KEY6,SNCOVHA3,SP70
          REP       " 0",KEY6
          MATCH     "000000",KEY6
          IF        @EQUAL
            DISPLAY     *P1:23,*EL,*B,"Invalid Customer Code. - ";
            CALL        HITENTER
            GOTO        SCOD0000
          ENDIF
          PACK      INCNTVHA,SNCOTVH3,SP70
          PACK      INCNVHAC,SNCOVHA3,SP70
          GOTO      SCOD9999
.
SCOD0400  MOVE      ONE,INSSVHA
          MOVE      "HSA Customer Code ",KEY18
          PACK      HEADMESS,KEY18,SNCOVHA4
          PACK      KEY6,SNCOVHA4,SP70
          REP       " 0",KEY6
          MATCH     "000000",KEY6
          IF        @EQUAL
            DISPLAY     *P1:23,*EL,*B,"Invalid Customer Code. - ";
            CALL        HITENTER
            GOTO        SCOD0000
          ENDIF
          PACK      INCNVHAC,SNCOVHA4,SP70
          GOTO      SCOD9999
.
SCOD0500  MOVE      ONE,INSSVHA
          MOVE      "HSA Customer Code ",KEY18
          PACK      HEADMESS,KEY18,SNCOVHA5
          PACK      KEY6,SNCOVHA5,SP70
          REP       " 0",KEY6
          MATCH     "000000",KEY6
          IF        @EQUAL
            DISPLAY     *P1:23,*EL,*B,"Invalid Customer Code. - ";
            CALL        HITENTER
            GOTO        SCOD0000
          ENDIF
          PACK      INCNVHAC,SNCOVHA5,SP70
          GOTO      SCOD9999
.
SCOD0600  MOVE      ONE,INSSVHA
          MOVE      "HSA Customer Code ",KEY18
          PACK      HEADMESS,KEY18,SNCOVHA6
          PACK      KEY6,SNCOVHA6,SP70
          REP       " 0",KEY6
          MATCH     "000000",KEY6
          IF        @EQUAL
            DISPLAY     *P1:23,*EL,*B,"Invalid Customer Code. - ";
            CALL        HITENTER
            GOTO        SCOD0000
          ENDIF
          PACK      INCNVHAC,SNCOVHA6,SP70
          GOTO      SCOD9999
.
SCOD0700  MOVE      ONE,INSSVHA
          MOVE      "HSA Customer Code ",KEY18
          PACK      HEADMESS,KEY18,SNCOVHA7
          PACK      KEY6,SNCOVHA7,SP70
          REP       " 0",KEY6
          MATCH     "000000",KEY6
          IF        @EQUAL
            DISPLAY     *P1:23,*EL,*B,"Invalid Customer Code. - ";
            CALL        HITENTER
            GOTO        SCOD0000
          ENDIF
          PACK      INCNVHAC,SNCOVHA7,SP70
          GOTO      SCOD9999
.
SCOD0800  MOVE      ONE,INSSVHA
          MOVE      "HSA Customer Code ",KEY18
          PACK      HEADMESS,KEY18,SNCOVHA8
          PACK      KEY6,SNCOVHA8,SP70
          REP       " 0",KEY6
          MATCH     "000000",KEY6
          IF        @EQUAL
            DISPLAY     *P1:23,*EL,*B,"Invalid Customer Code. - ";
            CALL        HITENTER
            GOTO        SCOD0000
          ENDIF
          PACK      INCNVHAC,SNCOVHA8,SP70
          GOTO      SCOD9999
.
SCOD0900  MOVE      ONE,INSSVHA
          MOVE      "HSA Customer Code ",KEY18
          PACK      HEADMESS,KEY18,SNCOVHA9
          PACK      KEY6,SNCOVHA9,SP70
          REP       " 0",KEY6
          MATCH     "000000",KEY6
          IF        @EQUAL
            DISPLAY     *P1:23,*EL,*B,"Invalid Customer Code. - ";
            CALL        HITENTER
            GOTO        SCOD0000
          ENDIF
          PACK      INCNVHAC,SNCOVHA9,SP70
          GOTO      SCOD9999
.
SCOD9900  CHAIN     PGM
.
SCOD9999  RETURN
.----------------------------------------------------------------------
. PORT0000  Set the port in controlf
.           Only one user at a time can use Programs that
.           Access the Modem Port. (SUB20,SUB40,SIN64,SIN66)
.----------------------------------------------------------------------
PORT0000  READ      CONTROLF,TWENTY6;*50,INCNTRAN
          MATCH     SP2,INCNTRAN             * Check if program in use
          GOTO      PORT9000 IF EQUAL
          MATCH     PORT,INCNTRAN            * Check if in use at this port
          GOTO      PORT9000 IF EQUAL
.
          DISPLAY   *P1:24,*EL,*B,"Modem in use on port ":
                    *V2LON,INCNTRAN,SP2;
          CALL      HITENTER
          CHAIN     PGM
.
.         Write port to controlf so only we can use the program.
.
PORT9000  MOVE      PORT,INCNTRAN
          WRITAB    CONTROLF,TWENTY6;*50,INCNTRAN
          MOVE      ZERO,EXIT
.
PORT9999  RETURN
.------------------------------------------------------------
. Copy File from DOS to UNIX using script ibasin64.us1
.------------------------------------------------------------
COPY0000  DISPLAY   *P20:15,*EL,"Copying download file from PC ";
.
          CLEAR     IMPORTFN
          APPEND    "downld",IMPORTFN
          APPEND    PORT,IMPORTFN
          RESET     IMPORTFN
          REP       " 0",IMPORTFN
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      IMPORTFL,IMPORTFN
          TRAPCLR   IO
          IF        OVRCD=0
            MOVE      "ERROR - download File Exists",DISPMSG
            BEEP
            MOVE      NO,DEFYESNO
            CALL      MESSAGE4
            IF        EXIT=1
..              CALL      CLRPOR00    * Clear Modem Lock for Port
              CHAIN     PGM
            ENDIF
            CLOSE     IMPORTFL,DELETE
          ENDIF
.
          DISPLAY   *P1:10,*EF:
                    *P20:11,"Copying File from DOS to Unix Host":
                    *P1:12;
.
          CLEAR     KEY80
          APPEND    "ibasin64.us1 ",KEY80
          APPEND    IMPORTFN,KEY80
          APPEND    ".txt",KEY80
          RESET     KEY80
          EXECUTE   KEY80,TASKID
.
          MOVE      YES,DEFYESNO
          MOVE      "Copy Complete",DISPMSG
          BEEP
          CALL      MESSAGE4
          IF        EXIT=1
..            CALL      CLRPOR00    * Clear Modem Lock for Port
            CHAIN     PGM
          ENDIF
          CALL      DISPHEAD
          RETURN
.------------------------------------------------------------------------
. Open Nato X-Ref File if required
.------------------------------------------------------------------------
ONAT0000  OPEN      CONTROLF,"controlf"
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*141,INCNNATO
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,INCNNATO
            WRITAB    CONTROLF,SIXTY3;*141,INCNNATO
          ENDIF
.
          IF        INCNNATO=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      SINNATA1,"sinnataf"
            TRAPCLR   IO
            IF        OVRCD=1
              DISPLAY   *P1:24,*EL,*B,"Nato file does not exist. Run fixit.  ";
              CALL      HITENTER
              CHAIN     PGM
            ENDIF
.
            OPEN      SINNATA2,"sinnataf"
          ENDIF
.
ONAT9999  RETURN
.----------------------------------------------------------------------
. HACCNT    FORM 1  Running the Accounting System          0=No
. HACCDATA  DIM  20 General Ledger Data Directory
. HDEFWH    DIM  5  Default Warehouse for Non Stock Items
. HORDDES   DIM  1  Order Number Alhpa Prefix
.----------------------------------------------------------------------
REDCON00  MOVE      ONE,CEAFILE
          READ      CONTROLF,TWENTY3;*95,HACCNT,*124,HORDDES:
                                    *143,HDEFWH
          READ      CONTROLF,TWENTY4;*135,HACCDATA,*165,HLASTCIN
          COMPARE   ONE,HACCNT
          GOTO      REDCON99 IF NOT EQUAL
.
.---- GL interface is on ----
.
          CLOSE     CONTROLF           * get gl control file if possible
          MOVE      "controlf.txt",KEY12
          PACK      KEY80,HACCDATA,KEY12
          SQUEEZE   KEY80
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      CONTROLF,KEY80
          TRAPCLR   IO
          IF        OVRCD=1
            OPEN      CONTROLF,"controlf"
          ENDIF
.
          CALL      RDFMCO50           * Read Account Code Parameters
          CALL      RDFMCO51
          CALL      RDFMCO52
          CALL      RDFMCO65
          CLOSE     CONTROLF
          OPEN      CONTROLF,"controlf"
.
          MOVE      "fmsamaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSAMAA1,KEY80
.
          MOVE      "fmslmaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSLMAA1,KEY80
.
          MOVE      "fmslmcaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSLMCA1,KEY80
.
          MOVE      "fmscsaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSCSAA1,KEY80
.
          MOVE      "fmstupaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSTUPA1,KEY80
.
          MOVE      ZERO,OVRCD
          MOVE      "apscioaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          TRAP      OVERCOND IF IO
          OPEN      APSCIOA1,KEY80
          TRAPCLR   IO
.
          MOVE      ZERO,OVRCD
          MOVE      "apsordaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          TRAP      OVERCOND IF IO
          OPEN      APSORDA1,KEY80
          TRAPCLR   IO
.
          MOVE      ZERO,OVRCD
          MOVE      "apsceaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          TRAP      OVERCOND IF IO
          OPEN      APSCEAA1,KEY80
          TRAPCLR   IO
.
          MOVE      "apscebaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          TRAP      OVERCOND IF IO
          OPEN      APSCEBA1,KEY80
          TRAPCLR   IO
          MOVE      OVRCD,CEAFILE
.
REDCON99  RETURN
.----------------------------------------------------------------------
. Process Imprest Details
.----------------------------------------------------------------------
PROC0000  DISPLAY  *P1:24,*EL,"Verifying ..."
.
          CALL     OPNTMP00       * Create Temp File for Load
.
          MOVE      CPPAPER2,CPPAPER
          MOVE      CDEFPRT2,CDEFPRT
          MOVE      SPLFILE2,SPLFILE
          MOVE      CNOCOPY2,CNOCOPY
.         OPEN      IBAPRNT1,"ibaprntf"
          CALL      OPNPRINT
.
          CALL     CLRORD00       * Clear Order Number Array
.
          CALL     VERI0000       * Verify & Load Contents of File
          BRANCH   EXIT,PROC9300
.
          CALL     GENOR000       * Generate Orders
          BRANCH   EXIT,PROC9999
.
          CALL     MAKTR000       * Create VHA Transfer File
.
          COMPARE  ZERO,VHAORDER  * Check for VHA Orders
          GOTO     PROC1000 IF EQUAL
.
          CALL     SEND0000       * Send Files to VHA & Receive Ack
.
          CALL     LOAD0000       * Load Acknoledgement Files
.
PROC1000  CALL     PEND0000       * Print End of Report
          CALL     CLSPRINT
.
PROC9100  CALL     FPORD000       * Fax or Print P/O of non VHA customer
.         CLOSE    IBAPRNT1
.
          CLOSE    IMPORTFL,DELETE
          MOVE     ZERO,EXIT      * Exit Screen
          GOTO     PROC9999
.
PROC9200  MOVE     TWO,EXIT       * Restart Screen
          GOTO     PROC9999
.
PROC9300  MOVE     THREE,EXIT     * Restore Screen
          GOTO     PROC9999
.
PROC9999  CALL     CLSTMP00
          RETURN
.----------------------------------------------------------------------
. VERI0000 - Verify & Load Contents of File
.----------------------------------------------------------------------
VERI0000  CLEAR     IMPORTFN
          APPEND    "downld",IMPORTFN
          APPEND    PORT,IMPORTFN
          RESET     IMPORTFN
          REP       " 0",IMPORTFN
.
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     IMPORTFL,IMPORTFN
          TRAPCLR  IO
          BRANCH   OVRCD,VERI9100
          MOVE     ZERO,SECTOR
          MOVE     ZERO,CPAGENO
          MOVE     "99",CLNO
          CLOCK    TIME,CTIMEIS
.
VERI1000  ADD      ONE,SECTOR
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF FORMAT
          READ     IMPORTFL,SEQ;SICACODE,SIIACAT,QTYREQ,QTYEXT
          GOTO     VERI9900 IF OVER
          TRAPCLR  FORMAT
          BRANCH   OVRCD,VERI9200
.
          COMPARE  ZERO,QTYEXT
          GOTO     VERI1100 IF NOT EQUAL
          COMPARE  ZERO,QTYREQ          * Don't Load if Zero Quantity
          GOTO     VERI1000 IF EQUAL    * Get Next Item
.
VERI1100  MOVE     SICACODE,KEY5
          CALL     RDSICA1              * Cost Centre Details
          BRANCH   OVRCD,VERI9300
.
          MOVE     SIIACAT,KEY7
          CALL     RDSIIA1              * Catalog Details
          BRANCH   OVRCD,VERI9400
.
          COMPARE  ONE,SIIANON          * Non Stock 1=Yes
          GOTO     VERI3000 IF NOT EQUAL
.
          CALL     GETSUP00
          BRANCH   EXIT,VERI2000
.
          PACK     KEY30,SIIAISS,SIICSUT,SP70
          CALL     RDSIFA1
          BRANCH   OVRCD,VERI9500
.
          CALL     WRTTMP00             * Write Details of Order to Temp File
.
          GOTO     VERI1000
.
. No Supplier Details
.
VERI2000  COMPARE  "55",CLNO
          CALL     VHEAD000 IF NOT LESS
          ADD      ONE,CLNO
          ADD      QTYEXT,QTYREQ
          PRINT    SICACODE,SP1,SICADESC,SP1,SIIACAT,SP1,SIIADES:
                   " *NO SUPPLIER*",*126,QTYREQ
          GOTO     VERI1000
.
. Stock Item Not to be Ordered
.
VERI3000  COMPARE  "55",CLNO
          CALL     VHEAD000 IF NOT LESS
          ADD      ONE,CLNO
          ADD      QTYEXT,QTYREQ
          PRINT    SICACODE,SP1,SICADESC,SP1,SIIACAT,SP1,SIIADES:
                   " *STOCK*",*126,QTYREQ
          GOTO     VERI1000
.
VERI9100  MOVE     "ERROR : Can't Open Import File - ",DISPMSG
          BEEP
          CALL     MESSAGE1
          MOVE     ONE,EXIT
          GOTO     VERI9999
.
VERI9200  CLEAR    DISPMSG
          APPEND   "ERROR : Format Error at Line",DISPMSG
          APPEND   SECTOR,DISPMSG
          APPEND   " - ",DISPMSG
          RESET    DISPMSG
          BEEP
          CALL     MESSAGE1
          MOVE     ONE,EXIT
          GOTO     VERI9999
.
VERI9300  CLEAR    DISPMSG
          APPEND   SECTOR,DISPMSG
          APPEND   " ERROR : Cost Centre Invalid ",DISPMSG
          APPEND   KEY5,DISPMSG
          APPEND   " - ",DISPMSG
          RESET    DISPMSG
          BEEP
          CALL     MESSAGE1
          MOVE     ONE,EXIT
          GOTO     VERI9999
.
VERI9400  CLEAR    DISPMSG
          APPEND   SECTOR,DISPMSG
          APPEND   " ERROR : Catalog Code Invalid ",DISPMSG
          APPEND   KEY7,DISPMSG
          APPEND   " - ",DISPMSG
          RESET    DISPMSG
          BEEP
          CALL     MESSAGE1
          MOVE     ONE,EXIT
          GOTO     VERI9999
.
VERI9500  CLEAR    DISPMSG
          APPEND   SECTOR,DISPMSG
          APPEND   " ERROR : Issue/Supply Factor Missing ",DISPMSG
          STRIP    SIIAISS
          APPEND   SIIAISS,DISPMSG
          APPEND   "/",DISPMSG
          STRIP    SIICSUT
          APPEND   SIICSUT,DISPMSG
          APPEND   " - ",DISPMSG
          RESET    DISPMSG
          BEEP
          CALL     MESSAGE1
          MOVE     ONE,EXIT
          GOTO     VERI9999
.
VERI9900  MOVE     ZERO,EXIT
.
          COMPARE  ZERO,CPAGENO
          GOTO     VERI9999 IF EQUAL
          CALL     UND132
          PRINT    *50,"*** End of Exceptions Report ***"
.
VERI9999  RETURN
.---------------------------------------------------------------------
. Determine Supplier
.--------------------
.   - Return Catalog/Supplier Record  SIIC
.   - Return Contract & Contract Date SISDSDT & SISDCON
.---------------------------------------------------------------------
GETSUP00  PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          PACK      KEY45,SIIACAT,CURRDATE,Z70
          CALL      RSSISD2                 * Check for Contract Price
          CALL      RPSISD2                 * Lastest Price
          BRANCH    OVRCD,GETSUP10          * No Contract
.
          MATCH     SISDCAT,SIIACAT         * Correct Catalog
          GOTO      GETSUP10 IF NOT EQUAL   * No Contract
.
          MOVE      SISDCON,KEY10
          CALL      RDSISC1
          BRANCH    OVRCD,GETSUP10          * No Contract
.
          MATCH     SISCEDT,CURRDATE        * Check for Completed Contract
          GOTO      GETSUP10 IF NOT LESS    * Contract Out of Date
.
          MOVE      SISDSUP,SILISUP
          CALL      SUPCHK00                * Check Supplier Code
          BRANCH    EXIT,GETSUP10
.
          PACK      KEY27,SISDCAT,SISDSUP,SISDSUT
          CALL      RDSIIC1
          IF        OVRCD=1
            BEEP
            DISPLAY   *P1:19,*EF
            HLINE     *G37,19,1,80
            DISPLAY   *P1:20,"Supplier/Supply Unit ",*V2LON,SISDSUP,"/",SISDSUT:
                      *HOFF," is Not a Valid Catalog/Supplier Record.":
                      *P1:21,"Catalog   : ",*V2LON,SIIECAT,*HOFF,SP1,SIIADES:
                      *P1:22,"Warehouse : ",*V2LON,SIIEWAR,*HOFF:
                      *P1:24,"Alternative Supplier Used - ";
            CALL      HITENTER
            DISPLAY   *P1:24,*EL
            GOTO      GETSUP10
          ENDIF
          GOTO      GETSUP80
.
GETSUP10  MOVE      SIIAPSC,SILISUP
          MOVE      SP70,SISDCON
          MOVE      SP70,SISDSDT
          CALL      SUPCHK00
          BRANCH    EXIT,GETSUP20
.
          PACK      KEY12,SIIACAT,SILISUP,SP70
          PACK      KEY27,SIIACAT,SILISUP,SP70
          CALL      RSSIIC1
.
GETSUP12  CALL      RKSIIC1
          BRANCH    OVRCD,GETSUP15
          PACK      KEY27,SIICCAT,SIICSUP,SP70
          MATCH     KEY12,KEY27
          GOTO      GETSUP15 IF NOT EQUAL
          COMPARE   ZERO,SIICAPO
          GOTO      GETSUP12 IF EQUAL
          GOTO      GETSUP80
.
GETSUP15  BEEP
          DISPLAY   *P1:19,*EF
          HLINE     *G37,19,1,80
          DISPLAY   *P1:20,"Supplier Code ",*V2LON,KEY5:
                    *HOFF," Does Not have a Valid Catalog/Supplier Record.":
                    *P1:21,"Catalog   : ",*V2LON,SIIECAT,*HOFF,SP1,SIIADES:
                    *P1:22,"Warehouse : ",*V2LON,SIIEWAR,*HOFF:
                    *P1:24,"Alternative Supplier Used - ";
          CALL      HITENTER
          DISPLAY   *P1:24
.
GETSUP20  PACK      KEY27,SIIACAT,SP70
          CALL      RSSIIC1
.
GETSUP30  CALL      RKSIIC1
          BRANCH    OVRCD,GETSUP90
          MATCH     SIIACAT,SIICCAT
          GOTO      GETSUP90 IF NOT EQUAL
          MATCH     SIIAPSC,SIICSUP      * Ignore Prefered Supplier
          GOTO      GETSUP30 IF EQUAL
          COMPARE   ZERO,SIICAPO
          GOTO      GETSUP30 IF EQUAL
          GOTO      GETSUP80
.
GETSUP80  MOVE      ZERO,EXIT
          GOTO      GETSUP99
.
GETSUP90  MOVE      ONE,EXIT
GETSUP99  RETURN
.------------------------------------------------------------
. Check Supplier Code Exists and is not on hold for Orders
.------------------------------------------------------------
SUPCHK00  MOVE      SILISUP,KEY5
          MOVE      ZERO,EXIT
          CALL      RDAPMA1
          IF        OVRCD=1
            BEEP
            DISPLAY   *P1:19,*EF
            HLINE     *G37,19,1,80
            DISPLAY   *P1:20,"Supplier Code ",*V2LON,KEY5:
                      *HOFF," No Longer Exists.":
                      *P1:21,"Catalog   : ",*V2LON,SIIECAT,*HOFF,SP1,SIIADES:
                      *P1:22,"Warehouse : ",*V2LON,SIIEWAR,*HOFF:
                      "     Contract : ",*V2LON,SILICON:
                      *P1:24,"Alternative Supplier Used - ";
            CALL      HITENTER
            DISPLAY   *P1:24,*EL
            MOVE      ONE,EXIT
          ENDIF
.
          IF        APMAHOR=1
            BEEP
            DISPLAY   *P1:19,*EF
            HLINE     *G37,19,1,80
            DISPLAY   *P1:20,"Supplier Code ",*V2LON,KEY5:
                      *HOFF," is On Hold for Order Processing.":
                      *P1:21,"Catalog   : ",*V2LON,SIIECAT,*HOFF,SP1,SIIADES:
                      *P1:22,"Warehouse : ",*V2LON,SIIEWAR,*HOFF:
                      "     Contract : ",*V2LON,SILICON:
                      *P1:24,"Alternative Supplier Used - ";
            CALL      HITENTER
            DISPLAY   *P1:24,*EL
            MOVE      ONE,EXIT
          ENDIF
          RETURN
.----------------------------------------------------------------------
. Exceptions Report Heading
.----------------------------------------------------------------------
VHEAD000  CALL     HEAD132
          PRINT    *40,"********IMPREST ITEMS NOT ORDERED FROM VHA **********"
          CALL     UND132
          PRINT    "Cost Centre                                    ":
                   "Catalog                                        ":
                   "                              Quantity"
          CALL     UND132
          RETURN
.----------------------------------------------------------------------
. Write to Temp File
.----------------------------------------------------------------------
WRTTMP00  MOVE      QTYREQ,SILIQTY    *   No Factor Conversion
          ADD       QTYEXT,SILIQTY    *   as St. Vincents DOES NOT REQ.
          MOVE      SIIASUB,SILISUB   *   Product Group (Subjective)
          MOVE      SIICSUP,SILISUP   *   Supplier
          MOVE      SIICSUT,SILISUT   *   Supply Unit
          MOVE      SIICPD1,SILIPD    *   Part Description
          MOVE      SIICPNO,SILIPN    *   Part Number
          MOVE      SIICLCT,SILIECT   *   Expected Unit Cost
          MOVE      SISDCON,SILICON   *   Contract
          MOVE      SISDSDT,SILICDT   *   Contract Date
.
          MOVE      CCC,CC           *   Calculate Expected Delivery Date
          MOVE      CYY,YY           *   from Todays Date
          MOVE      CMM,MM
          MOVE      CDD,DD           *   Todays Date
          CALL      DMYCON           *   Convert to Jul Date
          ADD       SIICLTM,JULDAY   *   Add Lead Time
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON           *    Convert Date Back
          PACK      SILIEDT,CC,YY,MM,DD
          REP       " 0",SILIEDT
.
          PACK     KEY17,SICACODE,SIICSUP,SIIACAT,SP70
          UNPACK   KEY17,SILICST,SILISUP,SILICAT
          CALL     RDSILI1
          IF       OVRCD=0
            ADD      QTYREQ,SILIQTY
            ADD      QTYEXT,SILIQTY
            CALL     UPSILI1
          ELSE
            CALL     WRSILI1
          ENDIF
          RETURN
.----------------------------------------------------------------
.  OPNTMP00  -  Create Port Based Temp File for Load
.  CLSTMP00  -  Close & Delete Temp File
.----------------------------------------------------------------
OPNTMP00  DISPLAY  *P1:10;
          CLEAR    FILESLIM
          APPEND   "SINLIM",FILESLIM
          APPEND   PORT,FILESLIM
          RESET    FILESLIM
          REP      " 0",FILESLIM
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     SINLIMA1,FILESLIM
          TRAPCLR  IO
          IF       OVRCD=0
            CLOSE    SINLIMA1,DELETE
          ENDIF
.
          CLEAR    COMMANDS
          APPEND   ISBUILD,COMMANDS
          APPEND   FILESLIM,COMMANDS
          APPEND   " 157 UC1-5,6-10,11-17",COMMANDS
          RESET    COMMANDS
          EXECUTE  COMMANDS,TASKID
          OPEN     SINLIMA1,FILESLIM
.
          RETURN
.
CLSTMP00  DISPLAY  *P1:10;
          CLOSE    SINLIMA1,DELETE
          RETURN
.------------------------------------------------------------
. Generate Orders from Temp File.
.------------------------------------------------------------
GENOR000  DISPLAY  *P1:24,*EL,"Processing ..."
          MOVE     ZERO,CPAGENO
          MOVE     "99",CLNO
          CLOCK    TIME,CTIMEIS
.
          MOVE     SP70,LASTSUP   * Last Supplier
          MOVE     SP70,LASTCST   * Last Cost Centre
          PACK     KEY17,SP70
          CALL     RDSILI1
          IF       OVRCD=0
            CALL     RPSILI1
          ENDIF
GENOR100  CALL     RKSILI1
          BRANCH   OVRCD,GENOR900
.
          CALL     MKORD000                * create order
          BRANCH   EXIT,GENOR999           * 1=could not create order
.
          GOTO     GENOR100
.
GENOR900  MOVE     ZERO,EXIT
GENOR999  RETURN
.----------------------------------------------------------------------
. Process order line Item
.----------------------------------------------------------------------
MKORD000  MATCH     LASTSUP,SILISUP         * New Order for Each Supplier
          GOTO      MKORD100 IF EQUAL
.
          CALL      NEWORD00
          GOTO      MKORD200
.
MKORD100  MATCH     LASTCST,SILICST         * New Order for Each Cost Centre
          GOTO      MKORD200 IF EQUAL
.
          CALL      NEWORD00
.
MKORD200  MOVE      ONE,SIIANON
          MOVE      SP70,SIIAISS
          MOVE      SILICAT,KEY7
          CALL      RDSIIA1
.
          PACK      SIPCDAT,SIPEYEAR,SIPEPER,SP70
          MOVE      SIPAWAR,SIPCWAR
.
          MOVE      SILISUB,SIPCPRD
          MOVE      SILICST,SIPCCST     * Cost Centre
          MOVE      SILICAT,SIPCCAT     * Catalog Code
          MOVE      SILIPN,SIPCPN       * Part Number
          MOVE      SILIPD,SIPCPD       * Part Description
          MOVE      SILISUT,SIPCSUT     * Supply Unit
          MOVE      SILICDT,SIPCCDT     * Contract Date
          MOVE      SILICON,SIPCCON     * Contract
          MOVE      SILIEDT,SIPCEDD     * Expected Delivery Date
          MOVE      SILIECT,SIPCECT     * Expected Cost
          MOVE      SIIAGST,SIPCGST
          CALL      CALTAX00
          MOVE      SILIQTY,SIPCOQT     * Order Quantity
.
          MOVE      SP70,SIPCFDD        * Set Up Other P/O Fields
          MOVE      SIPCOQT,SIPCOQO
          MOVE      SIPCECT,SIPCOOP
          MOVE      SIPCGSTA,SIPCOGS
          MOVE      ZERO,SIPCRQT
          MOVE      ZERO,SIPCIQT
          MOVE      ZERO,SIPCTCR
          MOVE      ZERO,SIPCTIN
          MOVE      SP70,SIPCUR1
          MOVE      SP70,SIPCUR2
          MOVE      SP70,SIPCUD1
          MOVE      SP70,SIPCUD2
          MOVE      SP70,SIPCUY1
          MOVE      SP70,SIPCUY2
          MOVE      SP70,SIPCSPA
.
          MOVE      SIPAPON,SIPCPON
          REPEAT
            ADD       ONE,NXORDLIN
            MOVE      NXORDLIN,SIPCITM
            PACK      KEY10,SIPCPON,SIPCITM
            CALL      RASIPC1
          UNTIL     OVRCD=1
          CALL      WRSIPC1             * Write Order Detail Line
          MOVE      ONE,AUDTTYPE
          CALL      WASIPC00            * Audit Add
.
          MOVE      ONE,SIFACTOR        * Get Factor for Usage Calc
          PACK      KEY30,SIIAISS,SIPCSUT
          CALL      RDSIFA1             * Should not be Required for St V.
.
          ASSIGN    SIPCOQT*SIFACTOR,SIUSQTY
          IF        SIPCECT<0
            MOVE      ZERO,SIUSCST
          ELSE
            IF        SNCOPURC=1
              ASSIGN    SIPCECT*SIPCOQT,SIUSCST
            ELSE
              MOVE      SIPCECT,F12P4
              SUB       SIPCGSTA,F12P4
              ASSIGN    F12P4*SIPCOQT,SIUSCST
            ENDIF
          ENDIF
.
          CALL      SINORDUS            * Update Purchases Usage
.
          PACK      KEY12,SIPCCAT,SIPCWAR
          CALL      RDSIIE1
          IF        OVRCD=0
            ADD       SIUSQTY,SIIESOO
            CALL      UPSIIE1           * Update Stock on Order
          ENDIF
.
          BRANCH    SIIANON,MKORD300
          CALL      USCEA000
          GOTO      MKORD900
.
MKORD300  CALL      UNCEA000
.
MKORD900  MOVE      ZERO,EXIT           * Create Order OK
          GOTO      MKORD999
.
MKORD950  MOVE      ONE,EXIT            * Can't Create Order
MKORD999  RETURN
.------------------------------------------------------------
. Start New Purchase Order
.------------------------------------------------------------
NEWORD00  PACK      LASTCST,SILICST,SP70
          PACK      LASTSUP,SILISUP,SP70
          CALL      UUSIPA1               * unlock last order
          MOVE      SILICST,KEY5          * Get Cost Centre Details
          CALL      RDSICA1
          CALL      NXORD000              * get next order
          BRANCH    EXIT,MKORD950         * Exit if Error Found
          MOVE      "500",NXORDLIN
          ADD       ONE,ORDERCNT          * Save Order No. in List
          MOVE      SIPAPON,ORDERS[ORDERCNT]
          MATCH     INCNVHAS,SIPASUP
          GOTO      NEWORD10 IF NOT EQUAL
.
          MOVE      VHADEL,SIPADEL
          CALL      WRVTR000              * Write to VHA Transfer File
          GOTO      NEWORD20
.
NEWORD10  MOVE      OTHDEL,SIPADEL
          MOVE      "1",NXORDLIN
.
NEWORD20  DISPLAY   *P1:24,*EL,"Generating Order No. : ":
                    *V2LON,SIPAPON,SLASH,NXORDLIN,*HOFF:
                    " for ",*V2LON,SILISUP,"/",SILICST;
          RETURN
.------------------------------------------------------------
. Write Record to VHA Transfer File
.------------------------------------------------------------
WRVTR000  MOVE      SIPAPON,SITRPURC
          MOVE      ZERO,SITRSTAT
          MOVE      PASSCODE,SITRUSER
          MOVE      SP70,SITRCREA
          MOVE      SIPADIN,SITREDAT
          MOVE      SP70,SITRTDAT
          MOVE      ZERO,SITRTNUM
          MOVE      SP70,SITRSPAR
          MOVE      SIPAORI,SITRORG
          MOVE      SIPAPON,KEY7
          CALL      RASITR1
          IF        OVRCD=1
            CALL      WRSITR1
          ENDIF
WRVTR999  RETURN
.----------------------------------------------------------------------
. Get next order
.----------------------------------------------------------------------
NXORD000  MOVE      "       ",SIPAPON
          CALL      SINORDNO         * Get Next Order Number
          IF        OVRCD=1
            MOVE      "Unable to Allocate an Order Number - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      NXORD950
          ENDIF
.
          PACK      APMAUR2,SP70
          PACK      APMASCON,SP70
          PACK      KEY5,SILISUP,SP70
          CALL      RDAPMA1
.
          MOVE      SICADESC,SIPAIDP
          MOVE      SILISUP,SIPASUP
          PACK      SIPASCN,APMASCON,SP70
          PACK      SIPADPR,SP70
          PACK      SIPADCN,SP70
          PACK      SIPADCM,SP70
          PACK      SIPASPA,SP70
          MOVE      SILICST,SIPACST
          MOVE      DEFTWARE,SIPAWAR
.
          MOVE      SIPAPON,KEY7
          CALL      RASIPA1
          COMPARE   ZERO,OVRCD
          GOTO      NXORD000 IF EQUAL
.
          CALL      WRSIPA1
          CALL      RLSIPA1
          MOVE      ONE,AUDTTYPE
          CALL      WASIPA00                 * Audit Add
.
          PACK      KEY7,SIPAPON
          CALL      RDSIRP1
          IF        OVRCD=1
            MOVE      SIPAPON,SIRPPON
            CALL      WRSIRP1
          ENDIF
          MOVE      ZERO,F1
NXORD900  MOVE      ZERO,EXIT
          GOTO      NXORD999
.
NXORD950  MOVE      ONE,EXIT
.
NXORD999  RETURN
.-------------------------------------------------------------------
. Clear Order Array (List of Orders for Transmit After Generation)
.-------------------------------------------------------------------
CLRORD00  MOVE     ZERO,ORDERCNT
CLRORD10  ADD      ONE,ORDERCNT
          MOVE     ZERO,ORDERS[ORDERCNT]
          COMPARE  "99",ORDERCNT
          GOTO     CLRORD10 IF NOT EQUAL
          MOVE     ZERO,ORDERCNT
          RETURN
.
.------------------------------------------------------------
. Create Transfer Files
.------------------------------------------------------------
MAKTR000  MOVE     ZERO,ORDERCNT
          MOVE     ZERO,CPAGENO
          MOVE     ZERO,VHAORDER   * Count of Orders for VHA
          CLOCK    TIME,CTIMEIS
          MOVE     "90",CLNO
          DISPLAY  *P1:24,*EL,"Creating Transfer Files ..."
.
MAKTR100  ADD      ONE,ORDERCNT
          COMPARE  ZERO,ORDERS[ORDERCNT]
          GOTO     MAKTR999 IF EQUAL
.
          MOVE     ORDERS[ORDERCNT],SIPAPON
.
          CALL     BILD0000       * Build Transfer File
          GOTO     MAKTR100
.
MAKTR999  RETURN
.----------------------------------------------------------------------
. Build a transmission file given a purchase order number
.----------------------------------------------------------------------
BILD0000  DISPLAY   *P50:24,*V2LON,SIPAPON; * Show some screen action
.
.         Write to the ascii transmission file.
.         Set up variables needed by transmission file
.
.    ---- Write header -----
.
          MOVE      SIPAPON,INSSPURA         * Purchase order
          MOVE      INCNVHAC,INSSCUS         * Customer code
.
          PACK      KEY7,SIPAPON,SP70
          CALL      RDSIPA1
          BRANCH    OVRCD,BILD1000           * Should never occur
.
          MATCH     INCNVHAS,SIPASUP         * Skip Non VHA Orders
          GOTO      BILD8000 IF NOT EQUAL
.
          ADD       ONE,VHAORDER             * Count of Orders for VHA
.
          PACK      KEY10,SIPAPON,SP70
          CALL      RSSIPC1
          CALL      RKSIPC1                  * First Line for Cost Centre
          BRANCH    OVRCD,BILD9000           * Should Not Occur
.
          MOVE      SIPCCST,KEY5
          CALL      RDSICA1
.
          MATCH     SP70,SICAUR1             * Check for Cost Centre Account
          IF        !@EQUAL
            MOVE       SICAUR1,INSSCUS       * Get Account from Cost Centre
          ENDIF
.
          STRIP     SICADESC
          MOVE      " - ",KEY3
          MOVE      "[",KEY1
          MOVE      "] ",KEY2
          STRIP     SIPADEL
          PACK      INSSDEL,KEY1,SICACODE,KEY2,SICADESC,KEY3,SIPADEL,SP70
          UNPACK    SIPADIN,KEY2,INSSDAT     * Purchase order date 6 Char
.
BILD1000  CALL      WRINSS1                  * Header
.
          PACK      KEY10,SIPAPON,SP70
          CALL      RSSIPC1
.
.   ----- Write main body ----
.
BILD2000  CALL      RKSIPC1
          BRANCH    OVRCD,BILD9000
.
          MATCH     SIPAPON,SIPCPON          * Same P/O?
          GOTO      BILD9000 IF NOT EQUAL    * No
.
          MOVE      SIPCOQT,INSSQTY          * Quantity
          MOVE      SIPCSUT,INSSPACK         * Pack unit
          MOVE      SIPCECT,INSSPRIC         * Unit price
          MOVE      SIPCCAT,INSSCATA         * Catalog code
          MOVE      SIPCPN,INSSVCOD          * Supplier Part Number
.
          CALL      WRINSS2                  * Write this item to trans. file
          GOTO      BILD2000                 * Get next item
.
. Non VHA Order So Just Print Details
.
BILD8000  CALL      PRNON000                 * Print Non VHA Order
          GOTO      BILD9999
.
.   ----- Write trailer ----
.
BILD9000  CALL      WRINSS3                  * Trailer
.
BILD9999  RETURN
.----------------------------------------------------------------------
. Send all transmission files
.----------------------------------------------------------------------
SEND0000  CALL      RMACK000               * Remove Ack File ibasin64.txt
          CLEAR     KEY80
          APPEND    "ibasin64.us2 ",KEY80
          APPEND    PORT,KEY80
          RESET     KEY80
          DISPLAY   *P1:15,*EF,"Executing Command ...";
          EXECUTE   KEY80,TASKID
.
          CALL      CHACK000               * Check for Valid Ack File
          COMPARE   ZERO,EXIT
          GOTO      SEND1000 IF EQUAL
          MOVE      "ERROR ORDERS NOT RECEIVED OK - ",DISPMSG
          BEEP
          CALL      MESSAGE1
          GOTO      SEND1500
.
SEND1000  KEYIN     *P1:24,*EL,"Did You Receive Your Orders Ok (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ",ANS;
          CALL      DISPHEAD                 * Redisplay Screen Header
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      SEND2000 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      SEND1000 IF NOT EQUAL
.
SEND1500  MOVE      ANSY,ANS
          KEYIN     *P1:24,*EL,"Resend Files (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,*RV,ANS;
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      SEND0000 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      SEND1500 IF NOT EQUAL
          GOTO      SEND2900
.
SEND2000  MOVE     ZERO,ORDERCNT
SEND2100  ADD      ONE,ORDERCNT
          COMPARE  ZERO,ORDERS[ORDERCNT]
          GOTO     SEND2900 IF EQUAL
.
          MOVE     ORDERS[ORDERCNT],KEY7
          CALL     RDSITR1
          BRANCH   OVRCD,SEND2100
          MOVE     THREE,SITRSTAT
          CALL     UPSITR1
          GOTO     SEND2100
.
SEND2900  CALL     CLRT0000                   * Remove Files
.
SEND9999  RETURN
.****************************************************************************
.*                              CLRT0000                                    *
.* Clear Files fronm transfer Directory                                     *
.****************************************************************************
CLRT0000  STRIP     INCNSOSD         * Remove Spaces from Directory Name
          CLEAR     COMMANDS
          APPEND    RM,COMMANDS
          APPEND    INCNSOSD,COMMANDS
          APPEND    KILLFILE,COMMANDS
          RESET     COMMANDS
          EXECUTE   COMMANDS,TASKID
          RETURN
.----------------------------------------------------------------------
. Print End of Report
.----------------------------------------------------------------------
PEND0000  CALL     ORDTOT00
          CALL     HEAD132
          PRINT    *50,"Summary of Orders Created"
          CALL     UND132
          PRINT    "Order Number    Supplier  "
          CALL     UND132
          MOVE     ZERO,ORDERCNT
.
PEND1000  ADD      ONE,ORDERCNT
          COMPARE  ZERO,ORDERS[ORDERCNT]
          GOTO     PEND9000 IF EQUAL
.
          MOVE     ORDERS[ORDERCNT],KEY7
          CALL     RDSIPA1
          BRANCH   OVRCD,PEND1000
          MOVE     SIPASUP,KEY5
          CALL     RDAPMA1
          BRANCH   OVRCD,PEND1000
          PRINT    *3,SIPAPON,*17,SIPASUP,SP1,APMASN1,SP1,APMASN2
          GOTO     PEND1000
.
PEND9000  CALL     UND132
          PRINT    *50,"**** End of Report ****"
          RETURN
.------------------------------------------------------------
. Delete Ack File if Existing
.------------------------------------------------------------
RMACK000  STRIP     INCNSOSD         * Remove Spaces from Directory Name
          CLEAR     COMMANDS
          APPEND    INCNSOSD,COMMANDS
          APPEND    "ibasin64.txt",COMMANDS
          RESET     COMMANDS         * File to Open
          PREP      INVVHAAF,COMMANDS
          CLOSE     INVVHAAF
.
          RETURN
.------------------------------------------------------------
. Check Ack File Exists
.------------------------------------------------------------
CHACK000  MOVE      ZERO,CPAGENO
          MOVE      "99",CLNO
          CLOCK     TIME,CTIMEIS
          STRIP     INCNSOSD         * Remove Spaces from Directory Name
          CLEAR     COMMANDS
          APPEND    INCNSOSD,COMMANDS
          APPEND    "ibasin64.txt",COMMANDS
          RESET     COMMANDS         * File to Open
          DISPLAY   *P1:24,*EL,"Opening : ",*V2LON,COMMANDS;
          MOVE      ZERO,OVRCD       * does file exist ? (srf 112436)
          TRAP      OVERCOND IF IO
          OPEN      INVVHAAF,COMMANDS
          TRAPCLR   IO
          BRANCH    OVRCD,CHACK950
          MOVE      SP70,LASTORD
          DISPLAY   *P1:24,*EL,"Loading Acknowledgements : ";
.
CHACK100  CALL      RKSIVHF
          BRANCH    OVRCD,CHACK900
          DISPLAY   *P40:24,SIVHDAT,".",SIVHFNO,".",SIVHLIN;
.         CLOSE     INVVHAAF
.
          UNPACK    SIVHORD,KEY13,KEY7      * Check order exists (RJ in Field)
          MATCH     SP70,KEY7               * Check if Blank Order
          GOTO      CHACK100 IF EQUAL
.
          CALL      RLSIPA1                 * ie Last 7 Characters
          BRANCH    OVRCD,CHACK100,CHACK100
          CALL      RDSITR1                 * Check on Transmission File
          BRANCH    OVRCD,CHACK100          * for Acknoledgement Order Only.
.
          MOVE      ZERO,EXIT
          CLOSE     INVVHAAF
          GOTO      CHACK999
.
CHACK900  CLOSE     INVVHAAF
CHACK950  MOVE      ONE,EXIT
CHACK999  RETURN
.------------------------------------------------------------
. Load Acknoledgement Files
.------------------------------------------------------------
LOAD0000  MOVE      ZERO,CPAGENO
          MOVE      "99",CLNO
          CLOCK     TIME,CTIMEIS
          STRIP     INCNSOSD         * Remove Spaces from Directory Name
          CLEAR     COMMANDS
          APPEND    INCNSOSD,COMMANDS
          APPEND    "ibasin64.txt",COMMANDS
          RESET     COMMANDS         * File to Open
          DISPLAY   *P1:24,*EL,"Opening : ",*V2LON,COMMANDS;
          MOVE      ZERO,OVRCD       * does file exist ? (srf 112436)
          TRAP      OVERCOND IF IO
          OPEN      INVVHAAF,COMMANDS
          TRAPCLR   IO
          BRANCH    OVRCD,LOAD9200
          MOVE      SP70,LASTORD
          DISPLAY   *P1:24,*EL,"Loading Acknowledgements : ";
          MOVE      SP70,LASTFNO
          MOVE      ZERO,VHASEQNO
.
LOAD1000  CALL      RKSIVHF
          BRANCH    OVRCD,LOAD9999
          DISPLAY   *P40:24,SIVHDAT,".",SIVHFNO,".",SIVHLIN;
          MATCH     SIVHFNO,LASTFNO
          IF        !@EQUAL
            MOVE      SIVHFNO,LASTFNO
            MOVE      ZERO,VHASEQNO         * Reset to 0 for each Order
          ENDIF
          ADD       ONE,VHASEQNO            * Order of VHA Receival/Invoice
.
          PACK      KEY12,SIVHDAT,SIVHFNO,VHASEQNO
          CALL      RASIVH1                 * Check if Order on VHA File
          COMPARE   ZERO,OVRCD              * If it is the ignore item
          GOTO      LOAD1000 IF EQUAL
.
          UNPACK    SIVHORD,KEY13,KEY7      * Check order exists (RJ in Field)
          MATCH     KEY7,LASTORD
          IF        !@EQUAL
            MATCH     SP70,LASTORD
            CALL      ORDTOT00 IF NOT EQUAL
            MOVE      ZERO,ORDTOTAL
            MOVE      KEY7,LASTORD
            MOVE      "99",CLNO
          ENDIF
.
          MATCH     SP70,KEY7               * Check if Blank Order
          GOTO      LOAD2000 IF EQUAL
.
LOAD1100  CALL      RLSIPA1                 * ie Last 7 Characters
          BRANCH    OVRCD,LOAD2000,LOAD9000
          CALL      RDSITR1                 * Check on Transmission File
          BRANCH    OVRCD,LOAD2000          * for Acknoledgement Order Only.
.                                           * If we did not transmit then the
.                                           * Can't be a Imprest Order
          CALL      PACK0000                * Process Ack.
.
          MOVE      VHASEQNO,SIVHLIN
          PACK      KEY12,SIVHDAT,SIVHFNO,SIVHLIN
          CALL      RASIVH1
          MOVE      SITETYPE,SIVHTYPE
          MOVE      "2",SIVHSTA             * Processed
          MOVE      SIPAPON,SIVHCOR         * Purchase Order
          MOVE      SIIACAT,SIVHCAT         * Catalog
          MOVE      "2",SIVHTYP
          CALL      WRSIVH1
          GOTO      LOAD1000
.
. Note If not imprest then should be processed in IBASUB20/40
.
LOAD2000  CALL      WRVHA000       * NOT Imprest So write to VHA file Only
          GOTO      LOAD1000
.
LOAD9000  BEEP
          KEYIN      *P1:24,*EL,"Purchase Order ",*DV,KEY7:
                    " Record Locked - (":
                    *V2LON,"R",*HOFF,")etry or e(":
                    *V2LON,"X",*HOFF,")it ? ",ANS
          REP       UPPLOW,ANS              * Convert to Upper Case
          MATCH     ANSR,ANS                * Re-try
          GOTO      LOAD1100 IF EQUAL       * Return to locking
          MATCH     ANSX,ANS                * Exit
          GOTO      LOAD9050 IF EQUAL       * Must be a valid response
          MATCH     ANSE,ANS                * Exit
          GOTO      LOAD9000 IF NOT EQUAL   * Must be a valid response
.
LOAD9050  MOVE      TWO,EXIT                * ABORT
          GOTO      LOAD9999                * Return
.
LOAD9100  BEEP
          DISPLAY   *P1:24,*EL,"Purchase Order ",KEY7:
                    " Completed or Cancelled - ";
          CALL      HITENTER
          GOTO      LOAD1000                * Return
.
LOAD9200  DISPLAY   *P1:24,*B,*EL,"No Acknowledgements to Load - ";
          CALL      HITENTER
          GOTO      LOAD9999
.
LOAD9999  RETURN
.----------------------------------------------------------------------------
. Order Not a Imprest Order ie does not exist on system then just write
. details to sinvhaaf so that load can be performed in IBASUB20/40
.----------------------------------------------------------------------------
WRVHA000  MOVE      VHASEQNO,SIVHLIN
          PACK      KEY12,SIVHDAT,SIVHFNO,SIVHLIN
          CALL      RASIVH1
          COMPARE   ZERO,OVRCD
          GOTO      WRVHA100 IF EQUAL
          MOVE      ZERO,SIVHSTA
          MOVE      SP70,SIVHCOR
          MOVE      SITETYPE,SIVHTYPE
          CALL      WRSIVH1
          GOTO      WRVHA900
.
WRVHA100  UNPACK    SIVHDAT,CYEAR,CMON,CDAY
          CALL      PACDATE
          BEEP
          DISPLAY   *P1:23,*EL,"Duplicate Found. Date : ",*V2LON,CPDATE:
                    *HOFF,"  File No. : ",*V2LON,SIVHFNO:
                    *HOFF,"  Line : ",*V2LON,SIVHLIN
          KEYIN     *P1:24,*EL,"(",*V2LON,"O",*HOFF,")verwrite or (":
                                   *V2LON,"I",*HOFF,")gnore ? ",*V2LON,ANS
          REP       UPPLOW,ANS
          MATCH     "I",ANS                       * Ignore
          GOTO      WRVHA900 IF EQUAL             * So Get Next Record
          MATCH     "O",ANS
          GOTO      WRVHA100 IF NOT EQUAL
          CALL      SINV0000                      * Save Fields Read
          PACK      KEY12,SIVHDAT,SIVHFNO,SIVHLIN
          CALL      RDSIVH1                       * Restore Fields
          CALL      RINV0000
          MATCH     "0",SIVHSTA                   * Not Processed so OK
          GOTO      WRVHA200 IF EQUAL
          MOVE      ONE,SIVHSTA                   * Processed Then Overwritten
WRVHA200  CALL      UPSIVH1                       * Update
          GOTO      WRVHA900                      * Get Next
.
WRVHA900  MOVE      ZERO,EXIT
WRVHA999  RETURN
.------------------------------------------------------
. Save Load Fields
.------------------------------------------------------
SINV0000  MOVE     SIVHDAT,SSIVHDAT
          MOVE     SIVHFNO,SSIVHFNO
          MOVE     SIVHORD,SSIVHORD
          MOVE     SIVHLIN,SSIVHLIN
          MOVE     SIVHQTY,SSIVHQTY
          MOVE     SIVHSUN,SSIVHSUN
          MOVE     SIVHCOS,SSIVHCOS
          MOVE     SIVHPAT,SSIVHPAT
          MOVE     SIVHSTA,SSIVHSTA
          MOVE     SIVHCOR,SSIVHCOR
          MOVE     SIVHVEN,SSIVHVEN
          MOVE     SIVHTYPE,SSIVHTYPE
          MOVE     SIVHSPA,SSIVHSPA
SINV9999  RETURN
.------------------------------------------------------
. Restore Load Fields (ex COR and STA)
.------------------------------------------------------
RINV0000  MOVE     SSIVHDAT,SIVHDAT
          MOVE     SSIVHFNO,SIVHFNO
          MOVE     SSIVHORD,SIVHORD
          MOVE     SSIVHLIN,SIVHLIN
          MOVE     SSIVHQTY,SIVHQTY
          MOVE     SSIVHSUN,SIVHSUN
          MOVE     SSIVHCOS,SIVHCOS
          MOVE     SSIVHPAT,SIVHPAT
          MOVE     SSIVHVEN,SIVHVEN
RINV9999  RETURN
.------------------------------------------------------------
. Sequencial File Read
. ------------------------------------------------------------
RKSIVHF   MOVE      ZERO,OVRCD
          READ      INVVHAAF,SEQ;SIVHDAT,SIVHFNO,SIVHORD:
                                 SIVHLIN,SIVHQTY,SIVHSUN:
                                 SIVHCOS,SIVHPAT,SIVHVEN:
                                 SIVHACK,SIVHAQT
          GOTO      OVERCOND IF OVER
          RETURN
.------------------------------------------------------------
. Process Line of Acknoledgement File
.------------------------------------------------------------
PACK0000  CALL      GLINE000               * Get Order Line Details (sipc)
          BRANCH    EXIT,PACK9900
.
          MOVE      SIPCCAT,KEY7           * Read Catalog Code
          CALL      RDSIIA1
          BRANCH    OVRCD,PACK9999
.
          CALL      LOCCAT00               * Lock Catalog Code
          BRANCH    EXIT,PACK9999          * Ignore Line
.
          UNPACK    SIVHACK,ANS,KEY1       * Extract Ack Code
          REP       "A1P2B3R4S5",KEY1      * A=Confirmed Price Unchanged = 1
.                                          * P=Confirmed Price Changed   = 2
.                                          * B=Back Ordered              = 3
.                                          * R=Rejected                  = 4
.                                          * S=Substituted               = 5
          MOVE      ZERO,ACKCONF
          MOVE      KEY1,ACKCONF           * Ack. Confirmation Code 1-4 as Above
.
          BRANCH    ACKCONF,PACK1000,PACK2000,PACK3000,PACK4000,PACK5000
          GOTO      PACK9800
.
PACK1000  CALL      ACKIA000               * A=Confirmed Price Unchanged = 1
          GOTO      PACK9999
.
PACK2000  CALL      ACKIP000               * P=Confirmed Price Changed   = 2
          GOTO      PACK9999
.
PACK3000  CALL      ACKIB000               * B=Back Ordered              = 3
          GOTO      PACK9999
.
PACK4000  CALL      ACKIR000               * R=Rejected                  = 4
          GOTO      PACK9999
.
PACK5000  CALL      ACKIS000               * S=Substituted               = 5
          GOTO      PACK9999
.
. Invalid Acknoledgement Code
.
PACK9800  MOVE      "Ack. Type Invalid - ",DISPMSG
          BEEP
          CALL      MESSAGE1
          MOVE      ONE,EXIT
          GOTO      PACK9999
.
. Additional Data in Acknoledgement File Not in Order Details Table
.
PACK9900  MOVE      "Ack. Order Line Not on Original Order - ",DISPMSG
          BEEP
          CALL      MESSAGE1
          MOVE      ONE,EXIT
          GOTO      PACK9999
.
PACK9999  CALL      UUSIIA1                 * Unlock Any Catalogs
          RETURN
.------------------------------------------------------------
. Get Purchase Order Line Details - EXIT=1 If No Match
.------------------------------------------------------------
GLINE000  MOVE      SIVHLIN,KEY3
          SQUEEZE   KEY3
          MOVE      KEY3,NXORDLIN
          ADD       "500",NXORDLIN
          PACK      KEY10,SIPAPON,NXORDLIN       * Read Detail Line
          CALL      RDSIPC1                      * Using Line Number Returned
          BRANCH    OVRCD,GLINE100               * In Ack File
          MATCH     SIPCCAT,SIVHPAT              * Check Catalog Code
          GOTO      GLINE100 IF NOT EQUAL
          GOTO      GLINE900
.
. Line Number Not Correct So Scan Order Details for Matching Catalog
.--------------------------------------------------------------------
GLINE100  PACK      KEY10,SIPAPON,SP70
          CALL      RSSIPC1
GLINE110  CALL      RKSIPC1
          BRANCH    OVRCD,GLINE990         * Can't Find it
          MATCH     SIPAPON,SIPCPON        * Check Same Order
          GOTO      GLINE990 IF NOT EQUAL  * Can't Find it
          MATCH     SIVHPAT,SIPCCAT        * Check Catalog
          GOTO      GLINE110 IF NOT EQUAL  * Try Next
          MOVE      SIPCITM,F3
          IF        F3<500
            MATCH     "IS",SIVHACK         * May have found the Original
            GOTO      GLINE110 IF NOT EQUAL
          ENDIF
.
GLINE900  MOVE      ZERO,EXIT
          MOVE      SIPCCST,KEY5
          CALL      RDSICA1
          MOVE      SIPCCST,SIPACST
          MOVE      SIPCITM,F3
          IF        F3>500
            MATCH     "IS",SIVHACK
            IF        !@EQUAL
              MOVE      VHASEQNO,SIPCITM   * Update into VHA Sequence if not
              CALL      UPSIPC1            * already Re Sequenced ie <500
            ENDIF
          ENDIF
.
          GOTO      GLINE999
GLINE990  MOVE      ONE,EXIT
GLINE999  RETURN
.------------------------------------------------------------
. Acknoledgement IA - Confirm Quantity
.------------------------------------------------------------
ACKIA000  COMPARE    ZERO,SIPCECT          * If Expected Not Zero
          GOTO       ACKIA010 IF NOT EQUAL * Ignore Following Price Check
          COMPARE    SIVHCOS,SIPCECT       * Check for Price Variation
          GOTO       ACKIA100 IF NOT EQUAL
.
ACKIA010  COMPARE    SIVHAQT,SIPCOQT       * Check for Quantity Variation
          GOTO       ACKIA900 IF EQUAL     * All Equal so Do Nothing
.
          MOVE       "WARNING: Quantity Changed       ",KEY40
          CALL       ACKLIN00
          CALL       UPLIN000              * Update New Quantity
          GOTO       ACKIA999
.
ACKIA100  MOVE       "WARNING: Price Variation        ",KEY40
          CALL       ACKLIN00
          CALL       UPLIN000              * Update New Price
          GOTO       ACKIA999
.
ACKIA900  MOVE       SP70,KEY40
          CALL       ACKLIN00              * Print Line Details
.
ACKIA999  RETURN
.------------------------------------------------------------
. Acknoledgement IP - Confirmed Price Changed
.------------------------------------------------------------
ACKIP000  MOVE       "WARNING: Price Changed            ",KEY40
          CALL       ACKLIN00
.
          CALL       UPLIN000              * Update New Quantity/Price
.
ACKIP999  RETURN
.----------------------------------------------------------------------
. Acknoledgement IB - Back Ordered (No Update Required Just a Warning)
.----------------------------------------------------------------------
ACKIB000  MOVE       "WARNING: Back Order Created    ",KEY40
          CALL       ACKLIN00
.
ACKIB999  RETURN
.------------------------------------------------------------
. Acknoledgement IR - Rejected
.------------------------------------------------------------
ACKIR000  IF         SIVHQTY=0
            MOVE       SIVHAQT,SIVHQTY  * VHA Subs Sending Back Blank Org Qty
          ENDIF
          ASSIGN     SIVHQTY-SIVHAQT,SIVHAQT
.
          COMPARE    ZERO,SIVHCOS
          IF         @EQUAL
            MOVE       SIPCECT,SIVHCOS
          ENDIF
          MOVE       "WARNING: Item Rejected ",KEY40
          CALL       ACKLIN00
.
          CALL       UPLIN000              * Update New Quantity
.
ACKIR999  RETURN
.------------------------------------------------------------
. Acknoledgement IS - Substituted
.
.    If Substitute Occurs VHA will send a reject on the
.    Original Line of the order for the appropriate quantity
.    and then send a substitute record on the original line.
.    The Substitute Line will need to generate an additional
.    line on the order.
.------------------------------------------------------------
ACKIS000  MOVE      "WARNING: Substitute Item   ",KEY40
          CALL      ACKLIN00
.
          MOVE      SP70,SIVHPAT            * Clear Local Part
          PACK      PARTCODE,SIVHVEN,SP70
          CALL      GCAT0000                * Get Catalog
          BRANCH    EXIT,ACKIS999
.
          CALL      LOCCAT00                * Lock Catalog Code
          BRANCH    EXIT,ACKIS999
.
          MOVE      SP70,SIPCEDD            * Set Up Delivery Date
          MOVE      ONE,SIFACTOR
          PACK      KEY30,SIIAISS,SIICSUT,SP70
          CALL      RDSIFA1
.
          MOVE      SIVHAQT,WORDER          * Order Qty * Factor
          MULT      SIFACTOR,WORDER         * Give No. in Issue Units
          MOVE      WORDER,WGIVEN
.
          CALL      UPSOO000                * Update Stock on Order
.
          MOVE      VHASEQNO,PFORM3
          SUB       ONE,PFORM3
          MOVE      SIPCCST,SIPACST
          CALL      WRPLN000                * Write New Purchase Order Line
.
          ASSIGN    SIPCOQT*SIFACTOR,SIUSQTY
          IF        SIPCECT<0
            MOVE      ZERO,SIUSCST
          ELSE
            IF        SNCOPURC=1
              ASSIGN    SIPCECT*SIPCOQT,SIUSCST
            ELSE
              MOVE      SIPCECT,F12P4
              SUB       SIPCGSTA,F12P4
              ASSIGN    F12P4*SIPCOQT,SIUSCST
            ENDIF
          ENDIF
          UNPACK    SIPCDAT,SIPEYEAR,SIPEPER
.
          CALL      SINORDUS                * Update Purchases Usage
.
          BRANCH    SIIANON,ACKIS800
          CALL      USCEA000
          GOTO      ACKIS999
.
ACKIS800  CALL      UNCEA000
.
ACKIS999  RETURN
.------------------------------------------------------------
. Print Non VHA Details
.------------------------------------------------------------
PRNON000  MOVE      "90",CLNO
          CLOCK     TIME,CTIMEIS
.
          MOVE      ZERO,ORDTOTAL
          PACK      KEY10,SIPAPON,SP70
          CALL      RSSIPC1
PRNON100  CALL      RKSIPC1
          BRANCH    OVRCD,PRNON900
          MATCH     SIPAPON,SIPCPON          * Same P/O?
          GOTO      PRNON900 IF NOT EQUAL    * No
          MOVE      SIPCCAT,KEY7
          CALL      RDSIIA1
          MOVE      SP70,KEY40
          CALL      ACKLIN00
          GOTO      PRNON100
.
PRNON900  CALL      ORDTOT00
          RETURN
.----------------------------------------------------------------------
. Print Line Item Details
.----------------------------------------------------------------------
ACKLIN00  COMPARE   "55",CLNO
          CALL      ACKHED00 IF NOT LESS
.
          MOVE      "9,999,999",FMTQTY
          MOVE      "9,999,999.9999",FMTPRI
          MOVE      "999,999,999.99",FMTTOT
          ASSIGN    SIPCOQT*SIPCECT,F12P2
          MOVE      SIPCOQT,F7
          FEDIT     F7,FMTQTY               * Quantity
          FEDIT     SIPCECT,FMTPRI          * Price
          FEDIT     F12P2,FMTTOT            * Line Total
          ADD       F12P2,ORDTOTAL          * Accumulate Order Total
.
          MOVE      SIPCPN,PART15
          MOVE      SIPCSUT,UNIT10
          PRINT     SIPCCAT,SP1,SIIADES,SP1,PART15,SP1,UNIT10,FMTQTY:
                    FMTPRI,FMTTOT
.
          ADD       ONE,CLNO
          MATCH     SP70,KEY40              * Check for Ack Error to Report
          GOTO      ACKLIN90 IF EQUAL       * NO
          SUB       F12P2,ORDTOTAL          * Accumulate Order Total
.
          MOVE      "9,999,999",FMTQTY
          MOVE      "9,999,999.9999",FMTPRI
          MOVE      "999,999,999.99",FMTTOT
          ASSIGN    SIVHAQT*SIVHCOS,F12P2
          MOVE      SIVHAQT,F7
          FEDIT     F7,FMTQTY               * Quantity
          FEDIT     SIVHCOS,FMTPRI          * Price
          FEDIT     F12P2,FMTTOT            * Line Total
          ADD       F12P2,ORDTOTAL          * Accumulate Order Total
.
          MOVE      SIVHVEN,PART15
          MOVE      SIVHSUN,UNIT10
          PRINT     "******* ",KEY40," New Order Details":
                    *70,PART15,SP1,UNIT10,FMTQTY,FMTPRI,FMTTOT
          ADD       ONE,CLNO
ACKLIN90  PRINT     " "
          ADD       ONE,CLNO
ACKLIN99  RETURN
.----------------------------------------------------------------------
. Print Report Header
.----------------------------------------------------------------------
ACKHED00  CALL      HEAD132
          PRINT     *35,"*** Imprest Order Report ***"
          UNPACK    SIPADIN,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      SIPASUP,KEY5
          CALL      RDAPMA1
          PRINT     "Cost Centre      : ",SICADESC,"(",SICACODE,")":
                *80,"Originator       : ",SIORNAME,"(",SIPAORI,")"
          PRINT     "Supplier         : ",SIPASUP,SP1,APMASN1," Ph: ",APMASTEL:
                 *N,"Order Number     : ",SIPAPON:
                *50,"Order Date       : ",CPCDATE:
                *80,"Delivery         : ",SIPADEL
          CALL      UND132
          PRINT     "Catalog Description                      ":
                    "                            Part No.     ":
                    "   Sup. Units      Qty         Price         Total"
          CALL      UND132
          MOVE      "9",CLNO
          RETURN
.----------------------------------------------------------------------
. Print Order Total
.----------------------------------------------------------------------
ORDTOT00  CALL     UND132
          PRINT    "Total for Order = ",ORDTOTAL
          RETURN
.----------------------------------------------------------------------
. Print End of Report
.----------------------------------------------------------------------
ACKEND00  PRINT      *50,"**** End of Report ****"
          RETURN
.------------------------------------------------------------
. Update Order Line Item Details
.------------------------------------------------------------
UPLIN000  MOVE      SIPCWAR,SIWAWAR          * Set up SIWAWAR for usage
          MOVE      SIPCWAR,KEY5
          CALL      RDSIWA1
          PACK      KEY10,SIPCPON,SIPCITM,SP70
          CALL      RDSIPC1
.
          ASSIGN    SIVHAQT-SIPCOQT,F12P2
          MOVE      F12P2,WORDER
          COMPARE   SIVHQTY,SIVHAQT          * Update Var. to Stock on Order
          CALL      UPSOO000 IF NOT EQUAL    * Qty=WORDER
.
. ------- Update Order Usage
.
          MOVE      ONE,SIFACTOR
          PACK      KEY30,SIIAISS,SIPCSUT
          CALL      RDSIFA1
          ASSIGN    (SIPCOQT*SIFACTOR),SIUSQTY
.
          MOVE      ONE,SIFACTOR
          PACK      KEY30,SIIAISS,SIVHSUN
          CALL      RDSIFA1
          ASSIGN    (SIVHAQT*SIFACTOR)-SIUSQTY,SIUSQTY
.
          IF        SIVHCOS<0
            MOVE      ZERO,SIVHCOS
          ENDIF
          IF        SNCOPURC=1
            ASSIGN    (SIVHCOS*SIVHAQT)-(SIPCECT*SIPCOQT),SIUSCST
          ELSE
            MOVE      SIPCECT,SAVECT
            MOVE      SIPCGSTA,SAVGST
            MOVE      SIVHCOS,SIPCECT
            CALL      CALTAX00
            MOVE      SIPCECT,F12P4
            SUB       SIPCGSTA,F12P4
            MOVE      SAVECT,SIPCECT
            MOVE      SAVGST,SIPCGSTA
            MOVE      SIPCECT,F12P4A
            SUB       SIPCGSTA,F12P4A
            ASSIGN    (F12P4*SIVHAQT)-(F12P4A*SIPCOQT),SIUSCST
          ENDIF
.
          CALL      SINORDUS                * Update Purchasing Usage
.
. ------- Update Purchase Order File
.
          MOVE      "2",AUDTTYPE            * before audit
          CALL      WASIPC00
          MOVE      SIVHSUN,SIPCSUT
          MOVE      SIVHAQT,SIPCOQT         * New Order Quantity
          MOVE      SIVHCOS,SIPCECT         * New Expected Cost
          CALL      CALTAX00
          CALL      UPSIPC1
          MOVE      "3",AUDTTYPE            * after audit
          CALL      WASIPC00
.
          IF        HLASTCIN=1
            PACK      KEY27,SIPCCAT,INCNVHAS,SIPCSUT,SP70
            CALL      RDSIIC1
            IF        OVRCD=0
              MOVE      "2",AUDTTYPE            * before audit
              CALL      WASIIC00
              MOVE      SIPCECT,SIICLCT
              CALL      UPSIIC1                 * Update Last Cost
              MOVE      "3",AUDTTYPE            * after audit
              CALL      WASIIC00
            ENDIF
          ENDIF
.
          RETURN
.------------------------------------------------------------
. Update Stock on Order
.------------------------------------------------------------
UPSOO000  PACK      KEY12,SIIACAT,SIPAWAR,SP70
          UNPACK    KEY12,SIIECAT,SIIEWAR
          CALL      RDSIIE1
          BRANCH    OVRCD,UPSOO100
.
          MOVE      "2",AUDTTYPE            * before audit
          CALL      WASIIE00
          ADD       WORDER,SIIESOO
          CALL      UPSIIE1
          MOVE      "3",AUDTTYPE            * after audit
          CALL      WASIIE00
          GOTO      UPSOO999
.
. Not on File So Create a New Record with Default Warehouse
.
UPSOO100  MOVE      "000000",SIIESID
          MOVE      "PURCHASE",SIIERAS
          MOVE      ZERO,SIIESOH
          MOVE      WORDER,SIIESOO
          MOVE      ZERO,SIIEROQ
          MOVE      ZERO,SIIEROL
          MOVE      ZERO,SIIESTI
          MOVE      SP70,SIIESTD
          MOVE      ZERO,SIIESIC
          MOVE      ZERO,SIIESAB
          MOVE      "A",SIIEABC
          MOVE      ZERO,SIIESUS
          UNPACK    SP70,SIIEUR1,SIIEUR2,SIIEUC1,SIIEUC2:
                         SIIEUD1,SIIEUD2,SIIEUY1,SIIEUY2
          MOVE      SP30,SIIESPA
.
          CALL      WRSIIE1
          MOVE      "1",AUDTTYPE            * new audit
          CALL      WASIIE00
.
UPSOO999  RETURN
.------------------------------------------------------------
. Read & Lock Catalog Record
.------------------------------------------------------------
LOCCAT00  PACK      KEY7,SIIACAT,SP70            * lock Catalog
          CALL      RLSIIA1
          BRANCH    OVRCD,LOCCAT10,LOCCAT20
          MOVE      ZERO,EXIT
          GOTO      LOCCAT99
LOCCAT10  DISPLAY   *P1:24,*B,*EF:
                    "CONTACT IBA - Catalog ",KEY7," Missing - ";
          CALL      HITENTER
          MOVE      ONE,EXIT
          GOTO      LOCCAT99
LOCCAT20  KEYIN      *P1:24,*EL,"Catalog ",*DV,KEY7:
                    " Record Locked - (":
                    *V2LON,"R",*HOFF,")etry or e(":
                    *V2LON,"X",*HOFF,")it ? ",ANS
          REP       UPPLOW,ANS              * Convert to Upper Case
          MATCH     ANSR,ANS                * Re-try
          GOTO      LOCCAT00 IF EQUAL       * Return to locking
          MATCH     ANSX,ANS                * Exit
          GOTO      LOCCAT90 IF EQUAL       * Must be a valid response
          MATCH     ANSE,ANS                * Exit
          GOTO      LOCCAT20 IF NOT EQUAL   * Must be a valid response
.
LOCCAT90  MOVE      ONE,EXIT                * ABORT
          GOTO      LOCCAT99                * Return
.
LOCCAT99  RETURN
.------------------------------------------------------------
. Write Purchase Order Line Details
.------------------------------------------------------------
WRPLN000  ADD       ONE,PFORM3              * Order Line
          PACK      KEY10,SIPAPON,PFORM3,SP70
          UNPACK    KEY10,SIPCPON,SIPCITM
          CALL      RASIPC1
          COMPARE   ZERO,OVRCD
          GOTO      WRPLN000 IF EQUAL
          IF        SIIANON=0
            MOVE      "Stock",SIPCCST
          ELSE
            MOVE      SIPACST,SIPCCST
          ENDIF
          MOVE      SIIASUB,SIPCPRD
.
          PACK      SIPEDATE,SIPADIN,SP70
          REP       " 0",SIPEDATE
          CALL      RSIPE000           * get current period
          PACK      SIPCDAT,SIPEYEAR,SIPEPER,SP70
.
          MOVE      SIPAWAR,SIPCWAR
          PACK      KEY5,SIPCWAR,SP70
          CALL      RDSIWA1
.
          MOVE      SIIACAT,SIPCCAT
          MOVE      SIICPNO,SIPCPN
          MOVE      SIICPD1,SIPCPD
          MOVE      SP70,SIPCCON
          MOVE      SP70,SIPCCDT
          MOVE      SIICSUT,SIPCSUT
          MOVE      SP70,SIPCFDD
.
          DIV       SIFACTOR,WGIVEN
          MOVE      WGIVEN,SIPCOQT
          MULT      SIFACTOR,WGIVEN
.
          MOVE      ZERO,SIPCIQT
          MOVE      ZERO,SIPCRQT
          MOVE      SIVHCOS,SIPCECT
          MOVE      SIIAGST,SIPCGST
          CALL      CALTAX00
          MOVE      SIPCOQT,SIPCOQO
          MOVE      SIPCECT,SIPCOOP
          MOVE      SIPCGSTA,SIPCOGS
          PACK      SIPCUR1,SP70
          PACK      SIPCUR2,SP70
          PACK      SIPCUD1,SP70
          PACK      SIPCUD2,SP70
          PACK      SIPCUY1,SP70
          PACK      SIPCUY2,SP70
          PACK      SIPCSPA,SP70
.
          CALL      WRSIPC1
          MOVE      "1",AUDTTYPE
          CALL      WASIPC00
          RETURN
.----------------------------------------------------
.        Get Catalog Code from Supplier Part Number
.----------------------------------------------------
GCAT0000  CALL      CPART000         * Check for Related Part Numbers
          BRANCH    EXIT,GCAT1000,GCAT5000
.
          CALL      CCAT0000              * choose catalog
          BRANCH    EXIT,GCAT9500
.
. Only 1 Matching Part Found
.
GCAT1000  MOVE      ONE,SIFACTOR
          PACK      KEY30,SIIAISS,SIICSUT,SP70
          CALL      RDSIFA1
          MATCH     SP70,SIVHSUN        * No VHA supply unit ?
          GOTO      GCAT9000 IF EQUAL
          MATCH     SIICSUT,SIVHSUN     * Same as VHA supply unit ?
          GOTO      GCAT9000 IF EQUAL
.
          MOVE      SIICSUT,KEY15
          REP       UPPLOW,KEY15
          MATCH     KEY15,SIVHSUN       * Same as VHA supply unit ?
          GOTO      GCAT1300 IF EQUAL
.
GCAT1010  DISPLAY   *P1:3,*EF:
                    *P1:14,*V2LON,*ULON,"Supply Unit Does Not Match",*HOFF:
                    *P1:16,"Catalog Code     : ":
                                               *V2LON,SIIACAT,*HOFF,SP1,SIIADES:
                    *P1:17,"Part Number      : ",*V2LON,SIICPNO,*HOFF:
                    *P1:18,"P/O Order Number : ",*V2LON,SIPAPON,*HOFF:
                    *P1:19,"Issue Unit       : ",*V2LON,SIIAISS,*HOFF:
                    *P1:20,"Supply Unit      : ",*V2LON,SIICSUT,*HOFF:
                    *P1:21,"Factor           : ",*V2LON,SIFACTOR,*HOFF:
                    *P1:22,"Sup. Units ",SITE," : ",*V2LON,SIVHSUN
.
          KEYIN     *P1:24,*EF,"(":
                    *V2LON,"Q",*HOFF,")uit, (":
                    *V2LON,"C",*HOFF,")atalog, (":
                    *V2LON,"S",*HOFF,")upply Unit, (":
                    *V2LON,"P",*HOFF,")ost Current Data ? ",*V2LON,ANS;
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
          MATCH     ANSQ,ANS
          GOTO      GCAT9500 IF EQUAL
          MATCH     ANSC,ANS
          GOTO      GCAT1100 IF EQUAL
          MATCH     ANSS,ANS
          GOTO      GCAT1200 IF EQUAL
          MATCH     ANSP,ANS
          GOTO      GCAT1300 IF EQUAL
          GOTO      GCAT1000
.
GCAT1100  CALL      KCAT0000           * keyin catalog
          BRANCH    EXIT,GCAT1100,GCAT9500
          GOTO      GCAT1000
.
GCAT1200  CALL      KSUP0000           * keyin supply unit
          BRANCH    EXIT,GCAT1200,GCAT9500
          GOTO      GCAT1000
.
GCAT1300  PACK      KEY27,SIIACAT,INCNVHAS,SIICSUT,SP70
          CALL      RDSIIC1
          IF        OVRCD=1
            DISPLAY   *P1:24,*B,*EF:
                      "Catalog/Supplier/Unit Combination Does Not Exist - ";
            CALL      HITENTER
            GOTO      GCAT1010
          ENDIF
          GOTO      GCAT9000
.
.---- catalog not found ----
.
GCAT5000  UNPACK    SIVHDAT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P1:3,*EF:
                    *P1:14,*V2LON,*ULON,SITE," Part Number Not Found",*HOFF:
                    *P1:16,"Date             : ",*V2LON,CPDATE,*HOFF:
                    *P1:17,"File             : ",*V2LON,SIVHFNO,*HOFF:
                    *P1:18,"Order Reference  : ",*V2LON,SIVHORD,*HOFF:
                    *P1:19,"Part Number      : ",*V2LON,PARTCODE,*HOFF:
                    *P1:20,SITEABBR," Supply Units : ",*V2LON,SIVHSUN,*HOFF:
                    *P1:21,"Quantity Ordered : ",*V2LON,SIVHQTY,*HOFF:
                    *P1:22,"Unit Cost        : ",*V2LON,SIVHCOS,*HOFF;
.
          CALL      KCAT0000
          BRANCH    EXIT,GCAT5000,GCAT9500
          GOTO      GCAT1000
.
.
GCAT9000  MOVE      ZERO,EXIT
          GOTO      GCAT9999
.
GCAT9500  MOVE      ONE,EXIT
.
GCAT9999  RETURN
.------------------------------------------------------------
. Find Matching Part Number for VHA
. Returns Exit   0 = Multiple Catalogs Found
.                1 = Single Found
.                2 = No Matching Parts
.------------------------------------------------------------
CPART000  MOVE      SP70,SKEY57
          PACK      KEY57,INCNVHAS,PARTCODE,SP70
          CALL      RSSIIC2
CPART100  CALL      RKSIIC2           * Scan for Part Number for This Supplier
          BRANCH    OVRCD,CPART990    * Not Found
          MATCH     INCNVHAS,SIICSUP  * End of Supplier
          GOTO      CPART990 IF NOT EQUAL
          MATCH     PARTCODE,SIICPNO  * End of Matching Part numbers
          GOTO      CPART990 IF NOT EQUAL
.
          MOVE      SIICCAT,KEY7
          CALL      RDSIIA1
          BRANCH    OVRCD,CPART100
          COMPARE   TWO,SIIASUS
          GOTO      CPART100 IF EQUAL     * skip if Suspended
          COMPARE   THREE,SIIASUS
          GOTO      CPART100 IF EQUAL     * skip if Suspended
          COMPARE   ZERO,SIIANON
          GOTO      CPART100 IF EQUAL     * skip if stock
.
          PACK      SKEY57,SIICSUP,SIICPNO,SIICCAT,SIICSUT,SP70
.
CPART200  CALL      RKSIIC2            * search for another
          BRANCH    OVRCD,CPART980     * Not Found
          MATCH     INCNVHAS,SIICSUP
          GOTO      CPART980 IF NOT EQUAL
          MATCH     PARTCODE,SIICPNO
          GOTO      CPART980 IF NOT EQUAL
.
          MOVE      SIICCAT,KEY7
          CALL      RDSIIA1
          BRANCH    OVRCD,CPART200
          COMPARE   TWO,SIIASUS
          GOTO      CPART200 IF EQUAL     * skip if Suspended
          COMPARE   THREE,SIIASUS
          GOTO      CPART200 IF EQUAL     * skip if Suspended
          COMPARE   ZERO,SIIANON
          GOTO      CPART200 IF EQUAL     * skip if stockA
.
          MOVE      ZERO,EXIT             * More than One Matching Part Number
          GOTO      CPART999
.
.
CPART980  PACK      KEY57,SKEY57,SP70       * read data
          CALL      RDSIIC2
          MOVE      SIICCAT,KEY7
          CALL      RDSIIA1
          MOVE      ONE,EXIT              * One Matching Part Number
          GOTO      CPART999
.
CPART990  MOVE      TWO,EXIT              * Cant Find any Matching VHA Parts
.
CPART999  RETURN
.----------------------------------------------------
.        Keyin Supply Unit
.----------------------------------------------------
KSUP0000  DISPLAY   *P1:24,*EL,"Enter Supply Unit  : ";
          MOVE      "22",CCOL
          MOVE      "24",CVERT
.
          MOVE      SP70,SIFASUPP
          MOVE      SIIAISS,SIFAISSU
          MOVE      ZERO,CKEYTYP
          CALL      KSIFAB00
          BRANCH    EXIT,KSUP9999,KSUP9999
.
KSUP9999  RETURN
.----------------------------------------------------
.        Keyin Catalog
.----------------------------------------------------
KCAT0000  DISPLAY   *P1:24,*EL,"Enter Catalog Code : ";
          MOVE      "22",CCOL
          MOVE      "24",CVERT
.
          MOVE      ZERO,CKEYTYP
          CALL      KSIIAA00
          BRANCH    EXIT,KCAT9999,KCAT9999
.
          IF        SIIASUS=2 | SIIASUS=3
            DISPLAY   *P1:24,*B,*EF,"Catalog ",SIIACAT," Suspended - ";
            CALL      HITENTER
            GOTO      KCAT0000         * skip if suspended
          ENDIF
.
          IF        SIIANON=0
            DISPLAY   *P1:24,*B,*EF,*+,"ERROR: Stock Catalog - ";
            CALL      HITENTER
            GOTO      KCAT0000
          ENDIF
.
          PACK      KEY27,SIIACAT,INCNVHAS,SIICSUT,SP70
          CALL      RDSIIC1
          IF        OVRCD=1
            PACK      KEY27,SIIACAT,INCNVHAS,SP70
            UNPACK    SP70,SIICCAT,SIICSUP
            CALL      RSSIIC1
            CALL      RKSIIC1
            PACK      KEY12,SIICCAT,SIICSUP,SP70
            MATCH     KEY12,KEY27
            GOTO      KCAT9999 IF EQUAL
            DISPLAY   *P1:24,*B,*EL,"Catalog ",*V2LON,SIIACAT,*HOFF:
                      " Not Linked To Supplier ",*V2LON,INCNVHAS,*HOFF," - ";
            CALL      HITENTER
            GOTO      KCAT0000
          ENDIF
.
KCAT9999  RETURN
.----------------------------------------------------
.        Choose Catalog
.----------------------------------------------------
CCAT0000  UNPACK    SIVHDAT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,*ULON,"Duplicate Part Numbers Found",*HOFF:
                    *P1:6,"Date             : ",*V2LON,CPDATE,*HOFF:
                    *P1:7,"File             : ",*V2LON,SIVHFNO,*HOFF:
                    *P1:8,"Order Reference  : ",*V2LON,SIVHORD,*HOFF:
                    *P1:9,"P/O Order Number : ",*V2LON,SIPAPON,*HOFF:
                    *P1:10,"Part Number      : ",*V2LON,PARTCODE,*HOFF:
                    *P1:11,SITEABBR," Supply Units : ",*V2LON,SIVHSUN,*HOFF:
                    *P1:12,"Quantity Ordered : ",*V2LON,SIVHQTY,*HOFF:
                    *P1:13,"Unit Cost        : ",*V2LON,SIVHCOS,*HOFF;
.
          CALL      DHED0000                * display heading
.
          PACK      KEY57,INCNVHAS,PARTCODE,SP70
          CALL      RSSIIC2
.
CCAT1000  CALL      RKSIIC2
          BRANCH    OVRCD,CCAT2000 * Not Found
          MATCH     INCNVHAS,SIICSUP
          GOTO      CCAT2000 IF NOT EQUAL
          MATCH     PARTCODE,SIICPNO
          GOTO      CCAT2000 IF NOT EQUAL
.
          MOVE      SIICCAT,KEY7
          CALL      RDSIIA1
          BRANCH    OVRCD,CCAT1000
.
          IF        SIIASUS=2 | SIIASUS=3
            GOTO      CCAT1000         * skip if suspended
          ENDIF
.
          COMPARE   ZERO,SIIANON
          GOTO      CCAT1000 IF EQUAL
.
          ADD       ONE,CVERT
          ADD       ONE,F2
          DISPLAY   *P1:CVERT,*V2LON,SP1,F2,DOT,*HOFF,*P10:CVERT,SIICCAT:
                    *P20:CVERT,"Non-Stock",*P35:CVERT,SIICSUT:
                    *P55:CVERT,SIIAAVC;
.
          PACK      SKEY57,SIICSUP,SIICPNO,SIICCAT,SIICSUT,SP70
          STORE     SKEY57,F2,SAV1,SAV2,SAV3,SAV4,SAV5,SAV6,SAV7,SAV8,SAV9
.
          COMPARE   "22",CVERT
          GOTO      CCAT1000 IF LESS
.
          DISPLAY   *P1:24,*EF,"More (Y/N) ? ";
          MOVE      "24",CVERT
          MOVE      "14",CCOL
          CALL      YORN0000
          BRANCH    FYESNO,CCAT2000
.
          CALL      DHED0000
          GOTO      CCAT1000
.
CCAT2000  KEYIN     *P1:24,*EF,"Select Item, (":
                    *V2LON,"R",*HOFF,")edisplay Data, (":
                    *V2LON,"Q",*HOFF,")uit ? ",*V2LON,ANS;
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
          MATCH     ANSQ,ANS
          GOTO      CCAT9500 IF EQUAL
          MATCH     ANSR,ANS
          GOTO      CCAT0000 IF EQUAL
.
          MOVE      ZERO,F2
          MOVE      ANS,F2
          MOVE      SP70,SKEY57
          LOAD      SKEY57,F2,SAV1,SAV2,SAV3,SAV4,SAV5,SAV6,SAV7,SAV8,SAV9
          MATCH     SP70,SKEY57
          GOTO      CCAT2000 IF EQUAL
.
CCAT9000  MOVE      ZERO,EXIT
          GOTO      CCAT9999
.
CCAT9500  MOVE      ONE,EXIT
.
CCAT9999  RETURN
.----------------------------------------------------
.        Display heading
.----------------------------------------------------
DHED0000  MOVE      SP70,SAV1
          MOVE      SP70,SAV2
          MOVE      SP70,SAV3
          MOVE      SP70,SAV4
          MOVE      SP70,SAV5
          MOVE      SP70,SAV6
          MOVE      SP70,SAV7
          MOVE      SP70,SAV8
          MOVE      SP70,SAV9
.
          MOVE      "15",CVERT
          MOVE      ZERO,F2
          DISPLAY   *P1:CVERT,*V2LON,*ULON,"Item",*P10:CVERT,"Catalog":
                    *P20:CVERT,"Type",*P35:CVERT,"Supply Unit":
                    *P55:CVERT,"  Issue Unit Cost",*EF;
.
DHED9999  RETURN
.----------------------------------------------------
. Fax or Print P/O of non VHA customer  (Quote 9568)
.----------------------------------------------------
FPORD000  MOVE      ZERO,ORDERCNT
.
FPORD100  ADD      ONE,ORDERCNT
          COMPARE  ZERO,ORDERS[ORDERCNT]
          GOTO     FPORD999 IF EQUAL
.
          MOVE     ORDERS[ORDERCNT],KEY7
          CALL     RDSIPA1
          BRANCH   OVRCD,FPORD100
          MOVE     SIPASUP,KEY5
          CALL     RDAPMA1
          BRANCH   OVRCD,FPORD100
.
          MATCH     INCNVHAS,SIPASUP
          GOTO      FPORD100 IF EQUAL
.
          MOVE      CPPAPER1,CPPAPER
          MOVE      CDEFPRT1,CDEFPRT
          MOVE      SPLFILE1,SPLFILE
          MOVE      CNOCOPY1,CNOCOPY
.         OPEN      IBAPRNT1,"ibaprntf"
.
.
.                                             * Is this Virtual Integration
FPORD200  CALL      GETSCR00
          IF        SNCOEMAL = 1
.
            MATCH     SP30,APMAUR2            * Is there a Fax/Email Address
            GOTO      FPORD400 IF EQUAL       * No - Print Pur.Ord.
.
            MATCH     SP15,APMACEDI           * Is there an EAN ?
            IF        @EQUAL
.                                             * Blank - no EAN
              SCAN      "@",APMAUR2           * Is there an Email Address
              GOTO      FPORD400 IF EQUAL     * Print Pur.Ord. (cant Fax it)
            ELSE
.                                             * There is an EAN
              SCAN      "@",APMAUR2           * Is there an Email Address
              GOTO      FPORD600 IF EQUAL     * E-mail Pur.Ord.
            ENDIF
            GOTO      FPORD500              * Fax Pur.Ord.
.
          ELSE                              * Original routine (no Virt Integ.)
            MATCH     SP30,APMAUR2
            GOTO      FPORD500 IF NOT EQUAL * Print Pur.Ord.
            GOTO      FPORD400              * Fax Pur.Ord.
          ENDIF
.
FPORD400  MOVE      ONE,NOPRINT
          RESET     APMAUR2
          CALL      OPNPRINT
          CALL      SINORDPR                * print purchase order
          CALL      CLSPRINT
          GOTO      FPORD800                * get next record
.
FPORD500  MOVE      ONE,NOPRINT
          RESET     APMAUR2
          MOVE      ZERO,HLEF
          CALL      SINORDFX                * fax purchase order routine
          GOTO      FPORD800
.
.                                           * Virtual Integration process if
.                                           * SNCOEMAL flag is set
FPORD600  MOVE      ONE,NOPRINT
          RESET     APMAUR2
          CALL      SINORDEM                * E-mail purchase order routine
          GOTO      FPORD800
.
FPORD800  CALL      PUTSCR00
          GOTO      FPORD100
.
FPORD999  RETURN
.
CALTAX00  COMPARE   ZERO,SIPCECT
          GOTO      CALTAX90 IF EQUAL
.
          MATCH     SP6,SIPCGST
          GOTO      CALTAX90 IF EQUAL
.
          PACK      KEY8,CCC,CYY,CMM,CDD,SP70
          REP       " 0",KEY8
.
          PACK      KEY14,SIPCGST,KEY8,SP70
          CALL      RDIBGE1
          COMPARE   ZERO,OVRCD
          GOTO      CALTAX10 IF EQUAL
.
          CALL      RPIBGE1
          BRANCH    OVRCD,CALTAX90
.
          MATCH     SIPCGST,IBGECODE
          GOTO      CALTAX90 IF NOT EQUAL
.
CALTAX10  ASSIGN    (SIPCECT-(SIPCECT/(ONE+(IBGEAMNT/HUNDRED)))),SIPCGSTA
          GOTO      CALTAX99
.
CALTAX90  MOVE      ZERO,SIPCGSTA
.
CALTAX99  RETURN
.----------------------------------------------------------------------
. Update Non-Stock Item to Accounts Payable Files
.----------------------------------------------------------------------
UNCEA000  MOVE      HORDDES,APEAISC  * System Prefix
          MOVE      SIPCPON,APEAORD
          MOVE      SIPASUP,APEACRD
          PACK      KEY8,APEAISC,APEAORD,SP70
          CALL      RDAPEA1         * Order Header Record
          IF        OVRCD=1
            MOVE      SIPADIN,APEADAT
            CALL      WRAPEA1
          ELSE
            MATCH     SIPASUP,APEACRD
            IF        !@EQUAL
              MOVE      SIPASUP,APEACRD
              MOVE      SIPADIN,APEADAT
              CALL      UPAPEA1
            ENDIF
          ENDIF
.
          MOVE      HORDDES,APEBISC  * System Prefix
          MOVE      SIPCPON,APEBORD
          PACK      APEBCAT,SIPCITM,SP70
          PACK      KEY14,APEBISC,APEBORD,APEBCAT
          CALL      RDAPEB1
          IF        OVRCD=0
            ADD       SIPCOQT,APEBQTY
            MOVE      SIPCECT,APEBUCT
            MOVE      SIPCGSTA,APEBUGS
            ASSIGN    APEBQTY*APEBUCT,APEBAMT
            ASSIGN    APEBQTY*APEBUGS,APEBGST
            IF        APEBQTY>0
              CALL      UPAPEB1
            ELSE
              CALL      DEAPEB1
              UNPACK    SP70,APEBISC,APEBORD,APEBCAT
              PACK      KEY8,APEAISC,APEAORD,SP70
              PACK      KEY14,KEY8,SP70
              CALL      RSAPEB1
              CALL      RKAPEB1
              PACK      KEY14,APEBISC,APEBORD,APEBCAT,SP70
              MATCH     KEY8,KEY14
              CALL      DEAPEA1 IF NOT EQUAL
            ENDIF
.
            MOVE      SIPCOQT,APEBQTY
            MOVE      SIPCECT,APEBUCT
            MOVE      SIPCGSTA,APEBUGS
            ASSIGN    APEBQTY*APEBUCT,APEBAMT
            ASSIGN    APEBQTY*APEBUGS,APEBGST
            CALL      UFMFP000         * update committed expenditure
            GOTO      UNCEA999
          ENDIF
.
. No Existing Record
.--------------------
          MOVE      SIPCWAR,KEY5
          CALL      RDSIWA1
          IF        OVRCD=1
            MOVE      SP70,KEY5
            CALL      RSSIWA1
            CALL      RKSIWA1
          ENDIF
.
          PACK      SICAGL,SP70
          MOVE      SIPCCST,KEY5
          CALL      RDSICA1
.
          UNPACK    SICAGL,APEBLED,APEBACC
          MOVE      SIWADISS,APEBDIS
          MOVE      SIWARESP,APEBRES
          MOVE      SP70,APEBSPA
          MOVE      SIPCOQT,APEBQTY
          MOVE      SIPCECT,APEBUCT
          MOVE      SIPCGSTA,APEBUGS
          ASSIGN    APEBQTY*APEBUCT,APEBAMT
          ASSIGN    APEBQTY*APEBUGS,APEBGST
          MOVE      SIPCPD,APEBDES
.
UNCEA100  MATCH     SP70,APEBACC       * use posting acc if no CC
          GOTO      UNCEA115 IF EQUAL
.
          STORE     APEBACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          LOAD      APEBACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          IF        FMSUUD2A=1
            PACK      APEBACC,APEBACC,FMSUUD2B
          ENDIF
.
          MATCH     SP70,SIPCPRD
          IF        @EQUAL
            MOVE      SIIASUB,SIPCPRD
          ENDIF
          PACK      KEY5,SIPCPRD,SP70
          CALL      RDSISA1
          BRANCH    SIWATYP,UNCEA120,UNCEA115
.
UNCEA110  PACK      SILTSUB,SIPCPRD,SP70
          PACK      FMAMLEDG,APEBLED,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APEBACC,APEBACC,SILTSUB,SP70 * Add subj code
          GOTO      UNCEA200
.
UNCEA115  PACK      APEBACC,SICAPACC,SP70        * Use CC Posting Account
          GOTO      UNCEA200
.
UNCEA120  MOVE      SISACOMM,KEY6                                      *C-59696
          CALL      RDSIGA1
          PACK      SILTSUB,SISACOMM,SP70
          PACK      FMAMLEDG,APEBLED,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APEBACC,APEBACC,SILTSUB,SP70 * Add commodity code
.
UNCEA200  CALL      XHKFMS00
.                                           * don't write if qty=0     *I-43474
          IF        APEBQTY > 0
            CALL      WRAPEB1
          ENDIF                                                        *I-43474
          CALL      UFMFP000           * update committed expenditure
.
UNCEA999  RETURN
.------------------------------------------------------------
. Check FMS Account
.------------------------------------------------------------
XHKFMS00  MOVE      ZERO,FMAMTYPE
          PACK      KEY14,APEBLED,APEBACC,SP70
          CALL      RDFMAM1
          IF        OVRCD=1
            SQUEEZE   KEY14
            CALL      RDFMAM1
            IF        OVRCD=0
              UNPACK    KEY14,APEBLED,APEBACC
            ENDIF
          ENDIF
.
          RETURN
.----------------------------------------------------------------------
. Update Stock Item to Accounts Payable Files
.----------------------------------------------------------------------
USCEA000  MOVE      HORDDES,APEAISC  * System Prefix
          MOVE      SIPCPON,APEAORD
          MOVE      SIPASUP,APEACRD
          PACK      KEY8,APEAISC,APEAORD,SP70
          CALL      RDAPEA1         * Order Header Record
          IF        OVRCD=1
            MOVE      SIPADIN,APEADAT
            CALL      WRAPEA1
          ELSE
            MATCH     SIPASUP,APEACRD
            IF        !@EQUAL
              MOVE      SIPASUP,APEACRD
              MOVE      SIPADIN,APEADAT
              CALL      UPAPEA1
            ENDIF
          ENDIF
.
          MOVE      HORDDES,APEBISC  * System Prefix
          MOVE      SIPCPON,APEBORD
          PACK      APEBCAT,SIPCITM,SP70
          PACK      KEY14,APEBISC,APEBORD,APEBCAT
          CALL      RDAPEB1
          IF        OVRCD=0
            ADD       SIPCOQT,APEBQTY
            MOVE      SIPCECT,APEBUCT
            MOVE      SIPCGSTA,APEBUGS
            ASSIGN    APEBQTY*APEBUCT,APEBAMT
            ASSIGN    APEBQTY*APEBUGS,APEBGST
            IF        APEBQTY>0
              CALL      UPAPEB1
            ELSE
              CALL      DEAPEB1
              UNPACK    SP70,APEBISC,APEBORD,APEBCAT
              PACK      KEY8,APEAISC,APEAORD,SP70
              PACK      KEY14,KEY8,SP70
              CALL      RSAPEB1
              CALL      RKAPEB1
              PACK      KEY14,APEBISC,APEBORD,APEBCAT,SP70
              MATCH     KEY8,KEY14
              CALL      DEAPEA1 IF NOT EQUAL
            ENDIF
.
            MOVE      SIPCOQT,APEBQTY
            MOVE      SIPCECT,APEBUCT
            MOVE      SIPCGSTA,APEBUGS
            ASSIGN    APEBQTY*APEBUCT,APEBAMT
            ASSIGN    APEBQTY*APEBUGS,APEBGST
            CALL      UFMFP000         * update committed expenditure
            GOTO      USCEA999
          ENDIF
.
. No Existing Record
.--------------------
          MOVE      SIPCWAR,KEY5
          CALL      RDSIWA1
          IF        OVRCD=1
            MOVE      SP70,KEY5
            CALL      RSSIWA1
            CALL      RKSIWA1
          ENDIF
.
          MOVE      SIWALED,APEBLED
          MOVE      SIWADISS,APEBDIS
          MOVE      SIWARESP,APEBRES
          MOVE      SP70,APEBSPA
          MOVE      SIPCOQT,APEBQTY
          MOVE      SIPCECT,APEBUCT
          MOVE      SIPCGSTA,APEBUGS
          ASSIGN    APEBQTY*APEBUCT,APEBAMT
          ASSIGN    APEBQTY*APEBUGS,APEBGST
          MOVE      SIPCPD,APEBDES
.
          BRANCH    SIWAPTY,USCEA100,USCEA100
          MOVE      SIWAPACC,APEBACC
          GOTO      USCEA200
.
USCEA100  STORE     SIWAPACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                      KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          LOAD      APEBACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          IF        FMSUUD2A=1
            PACK      APEBACC,APEBACC,FMSUUD2B
          ENDIF
          PACK      KEY5,SIPCPRD,SP70
          CALL      RDSISA1
          BRANCH    SIWAPTY,USCEA110,USCEA120
.
USCEA110  PACK      SILTSUB,SIPCPRD,SP70
          PACK      FMAMLEDG,APEBLED,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APEBACC,APEBACC,SILTSUB,SP70 * Add subj code
          GOTO      USCEA200
.
USCEA120  MOVE      SISACOMM,KEY6                                      *C-59696
          CALL      RDSIGA1
          PACK      SILTSUB,SISACOMM,SP70
          PACK      FMAMLEDG,APEBLED,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APEBACC,APEBACC,SILTSUB,SP70 * Add commodity code
.
USCEA200  CALL      XHKFMS00
.                                           * don't write if qty=0     *I-43474
          IF        APEBQTY > 0
            CALL      WRAPEB1
          ENDIF                                                        *I-43474
          CALL      UFMFP000           * update committed expenditure
.
USCEA999  RETURN
.----------------------------------------------------------------------
. Update period summary file
.----------------------------------------------------------------------
UFMFP000  PACK      KEY2,APEBLED,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,UFMFP999
.
          PACK      KEY14,APEBLED,APEBACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,UFMFP999
.
          PACK      WORKDATE,APEADAT,SP70
          CALL      CFYR0000
          BRANCH    EXIT,UFMFP999
.
          MOVE      "fmsp",KEY4
          PACK      KEY8,KEY4,CURYEAR,SP70
          REP       " 0",CURYEAR
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,KEY8
          TRAPCLR   IO
          BRANCH    OVRCD,UFMFP999
.
          PACK      KEY14,APEBLED,APEBACC,SP70
          UNPACK    KEY14,FMFPCULD,FMFPCUAC
          CALL      RDFMFP1
          IF        OVRCD=0
            ASSIGN    APEBAMT+FMFPCOM2,FMFPCOM2
            CALL      UPFMFP1
          ELSE
            MOVE      ZERO,FMFPCBF
            MOVE      ZERO,FMFPC01
            MOVE      ZERO,FMFPC02
            MOVE      ZERO,FMFPC03
            MOVE      ZERO,FMFPC04
            MOVE      ZERO,FMFPC05
            MOVE      ZERO,FMFPC06
            MOVE      ZERO,FMFPC07
            MOVE      ZERO,FMFPC08
            MOVE      ZERO,FMFPC09
            MOVE      ZERO,FMFPC10
            MOVE      ZERO,FMFPC11
            MOVE      ZERO,FMFPC12
            MOVE      ZERO,FMFPC13
.
            MOVE      ZERO,FMFPABF
            MOVE      ZERO,FMFPA01
            MOVE      ZERO,FMFPA02
            MOVE      ZERO,FMFPA03
            MOVE      ZERO,FMFPA04
            MOVE      ZERO,FMFPA05
            MOVE      ZERO,FMFPA06
            MOVE      ZERO,FMFPA07
            MOVE      ZERO,FMFPA08
            MOVE      ZERO,FMFPA09
            MOVE      ZERO,FMFPA10
            MOVE      ZERO,FMFPA11
            MOVE      ZERO,FMFPA12
            MOVE      ZERO,FMFPA13
            MOVE      ZERO,FMFPCOM
.
            MOVE      ZERO,FMFPCBFD
            MOVE      ZERO,FMFPC01D
            MOVE      ZERO,FMFPC02D
            MOVE      ZERO,FMFPC03D
            MOVE      ZERO,FMFPC04D
            MOVE      ZERO,FMFPC05D
            MOVE      ZERO,FMFPC06D
            MOVE      ZERO,FMFPC07D
            MOVE      ZERO,FMFPC08D
            MOVE      ZERO,FMFPC09D
            MOVE      ZERO,FMFPC10D
            MOVE      ZERO,FMFPC11D
            MOVE      ZERO,FMFPC12D
            MOVE      ZERO,FMFPC13D
.
            MOVE      ZERO,FMFPABFD
            MOVE      ZERO,FMFPA01D
            MOVE      ZERO,FMFPA02D
            MOVE      ZERO,FMFPA03D
            MOVE      ZERO,FMFPA04D
            MOVE      ZERO,FMFPA05D
            MOVE      ZERO,FMFPA06D
            MOVE      ZERO,FMFPA07D
            MOVE      ZERO,FMFPA08D
            MOVE      ZERO,FMFPA09D
            MOVE      ZERO,FMFPA10D
            MOVE      ZERO,FMFPA11D
            MOVE      ZERO,FMFPA12D
            MOVE      ZERO,FMFPA13D
            MOVE      ZERO,FMFPCOMD
.
            MOVE      ZERO,FMFPCBFT
            MOVE      ZERO,FMFPC01T
            MOVE      ZERO,FMFPC02T
            MOVE      ZERO,FMFPC03T
            MOVE      ZERO,FMFPC04T
            MOVE      ZERO,FMFPC05T
            MOVE      ZERO,FMFPC06T
            MOVE      ZERO,FMFPC07T
            MOVE      ZERO,FMFPC08T
            MOVE      ZERO,FMFPC09T
            MOVE      ZERO,FMFPC10T
            MOVE      ZERO,FMFPC11T
            MOVE      ZERO,FMFPC12T
            MOVE      ZERO,FMFPC13T
.
            MOVE      ZERO,FMFPABFT
            MOVE      ZERO,FMFPA01T
            MOVE      ZERO,FMFPA02T
            MOVE      ZERO,FMFPA03T
            MOVE      ZERO,FMFPA04T
            MOVE      ZERO,FMFPA05T
            MOVE      ZERO,FMFPA06T
            MOVE      ZERO,FMFPA07T
            MOVE      ZERO,FMFPA08T
            MOVE      ZERO,FMFPA09T
            MOVE      ZERO,FMFPA10T
            MOVE      ZERO,FMFPA11T
            MOVE      ZERO,FMFPA12T
            MOVE      ZERO,FMFPA13T
            MOVE      ZERO,FMFPCOMT
.
            PACK      FMFPSPAR,SP70,SP70
            ASSIGN    APEBAMT,FMFPCOM2
            CALL      WRFMFP1
          ENDIF
.
          COMPARE   ONE,FMCOCALC
          GOTO      UFMFP999 IF NOT EQUAL
.
          PACK      KEY20,PORT,CURYEAR,APEBLED,APEBACC,SP70
          CALL      RDFMTU1            * record exists ?
          COMPARE   ZERO,OVRCD
          GOTO      UFMFP999 IF EQUAL
.
          UNPACK    KEY20,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC
          MOVE      FMAMCLEV,FMTULEV
          MOVE      ZERO,FMTUACT
          MOVE      ZERO,FMTUBUD
          MOVE      SP70,FMTUSPAR
          CALL      WRFMTU1            * Flag For Total Account Update
.
UFMFP999  RETURN
.----------------------------------------------------------------------
. get subjective/commodity translation
.----------------------------------------------------------------------
GTRA0000  PACK      KEY8,FMAMLEDG,SILTSUB,SP70                         *C-59696
          CALL      RDSILT1
.
GTRA9999  RETURN
.----------------------------------------------------------------------
. Enter Originator Code
.----------------------------------------------------------------------
EORIG000  MOVE      ZERO,CKEYTYP
          CALL      KSIORA00
          BRANCH    EXIT,EORIG999,EORIG999
.
          MOVE      SIORORIG,SIPAORI
          CALL      SDEF0000
.
EORIG999  RETURN
.----------------------------------------------------------------------
. Set up defaults
.----------------------------------------------------------------------
SDEF0000  CLEAR     IMPORTFN
          APPEND    "downld",IMPORTFN
          APPEND    PORT,IMPORTFN
          RESET     IMPORTFN
          REP       " 0",IMPORTFN
.
          MOVE      SP70,SIPAICN
          MOVE      SIPAORI,KEY3
          CALL      RDSIOR1
          IF        OVRCD=0
            MOVE      SIORHOSP,SIPAICN
          ENDIF
.
          MOVE      SP70,SIPACON
          MOVE      SP70,CONFDESC
          MOVE      SP70,SIPAIDP
          MOVE      SP70,SIPAUR1
          MOVE      SP70,SIPAUR2
          MOVE      SP70,SIPAUD1
          MOVE      SP70,SIPAUD2
          MOVE      SP70,SIPAUC1
          MOVE      SP70,SIPAUC2
          MOVE      SP70,SIPAUY1
          MOVE      SP70,SIPAUY2
          MOVE      SP70,SIPADPR
          MOVE      SP70,SIPADCM
          MOVE      SP70,SIPADCN
.
          READ      CONTROLF,TWENTY5;HADEL1,HADEL2,HADEL3,HADEL4:
                                     HADEL5,HADEL6,HADEL7,HADEL8
          MOVE      SIORDEL,F1
          LOAD      OTHDEL,F1,HADEL1,HADEL2,HADEL3,HADEL4:
                              HADEL5,HADEL6,HADEL7,HADEL8
.
          MOVE      SIORMESS,SIPAMES
          MOVE      SIORCON,SIPACON
          MOVE      SP70,MESSDESC
          MOVE      SP70,CONFDESC
.
          MATCH     SP70,SIPAMES
          IF        !(@EQUAL)
            MOVE      "ME ",SICDCATA
            PACK      KEY6,SICDCATA,SIPAMES,SP70
            CALL      RDSICD1
            IF        OVRCD=0
              MOVE      SICDDESC,MESSDESC
            ENDIF
          ENDIF
.
          MATCH     SP70,SIPACON
          IF        !(@EQUAL)
            MOVE      "CF ",SICDCATA
            PACK      KEY6,SICDCATA,SIPACON,SP70
            CALL      RDSICD1
            IF        OVRCD=0
              MOVE      SICDDESC,CONFDESC
            ENDIF
          ENDIF
.
          PACK      SIPADIN,CCC,CYY,CMM,CDD
          REP       " 0",SIPADIN
          MOVE      SIPADIN,SIPEDATE
          CALL      RSIPE000   * Get Period End Date
.
          CALL      CALDAY00   * Calculate Delivery Instructions Day
.
          PACK      KEY5,SP70
          CALL      RSSIWA1
SDEF1000  CALL      RKSIWA1
          BRANCH    OVRCD,SDEF9999
.
. check warehouse security access
.
          PACK      KEY9,PASSCODE,SIWAWAR,SP70
          CALL      RDSIWS1
          BRANCH    OVRCD,SDEF1000
.
          MOVE      SIWAWAR,DEFTWARE
          MOVE      ZERO,F7
          MOVE      SIWANPO,F7
          COMPARE   ZERO,F7
          GOTO      SDEF1000 IF EQUAL
.
SDEF9999  RETURN
.------------------------------------------------------------
. Calculate Day of Delivery as 2 Days after Order Date
. as per St. Vincents
.------------------------------------------------------------
CALDAY00  MOVE      CCC,CC           *   Calculate Expected Delivery Day
          MOVE      CYY,YY           *   from Todays Date
          MOVE      CMM,MM
          MOVE      CDD,DD           *   Todays Date
          CALL      DMYCON           *   Convert to Jul Date
.
          IF        SIORDEL=2 | SIORDEL=3 | SIORDEL=6
            ADD       "1",JULDAY       *   Add Lead Time One Day (Food Services)
          ELSE
            ADD       "2",JULDAY       *   Add Lead Time Two Day
          ENDIF
.
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON           *    Convert Date Back
          PACK      KEY8,CC,YY,MM,DD
          REP       " 0",KEY8
          UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
          CALL      TODAY000         * Calculate Day Number 1-7
.
.   No Delivery on Weekend so convert sat,sun to mon,tue
.
          BRANCH    WEEKDAY,CALDAY10,CALDAY20,CALDAY30,CALDAY40,CALDAY50:
                            CALDAY10,CALDAY20
CALDAY10  MOVE      "MONDAY   ",SIPADEL
          GOTO      CALDAY99
CALDAY20  MOVE      "TUESDAY  ",SIPADEL
          GOTO      CALDAY99
CALDAY30  MOVE      "WEDNESDAY",SIPADEL
          GOTO      CALDAY99
CALDAY40  MOVE      "THURSDAY ",SIPADEL
          GOTO      CALDAY99
CALDAY50  MOVE      "FRIDAY   ",SIPADEL
          GOTO      CALDAY99
CALDAY99  MOVE      SIPADEL,VHADEL
          RETURN
.
.------------------------------------------------------------
. TODAY000  : Convert todays date to a day number : 1 Mon to 7 Sun
. Variables : CDAY,CMON,CYEAR,CCENT
. Returns   : WEEKDAY the day number of the week (1-7)
.------------------------------------------------------------
TODAY000  CALL      GFDAY000                    * get first day of given year
          BRANCH    EXIT,TODAY999
.
.------ First day of year exists ------
.
          MOVE      CDAY,DD
          MOVE      CMON,MM
          MOVE      CYEAR,YY
          MOVE      CCENT,CC
          CALL      DMYCON                      * convert to a julian date
.
.------ Calculate the day of the week ------
.
          MOVE      JULDAY,FSTJULDY
          DIV       SEVEN,FSTJULDY
          MULT      SEVEN,FSTJULDY
.
          SUB       FSTJULDY,JULDAY
.
          MOVE      JULDAY,FSTJULDY
          ADD       FSTDAY,FSTJULDY
          SUB       ONE,FSTJULDY
          MOVE      FSTJULDY,WEEKDAY
.
.------ Change to a number from 1 to 7 ------
.
          COMPARE   ZERO,FSTJULDY
          GOTO      TODAY900 IF EQUAL
.
          COMPARE   EIGHT,FSTJULDY
          GOTO      TODAY999 IF LESS
.
          SUB       SEVEN,FSTJULDY
          MOVE      FSTJULDY,WEEKDAY
          GOTO      TODAY999
.
TODAY900  MOVE      SEVEN,WEEKDAY
.
TODAY999  RETURN
.**********************************************************************
.*                               GFDAY000                             *
.*        Routine to get the starting day of a given Year 1979-2013   *
.**********************************************************************
GFDAY000  PACK      KEY4,CCENT,CYEAR
          REP       " 0",KEY4
          MOVE      KEY4,F4
          MOVE      ZERO,EXIT
          SUB       "1978",F4
          BRANCH    F4,GFDAY100,GFDAY200,GFDAY400,GFDAY500,GFDAY600: * 79-83
                       GFDAY700,GFDAY200,GFDAY300,GFDAY400,GFDAY500: * 84-88
                       GFDAY700,GFDAY100,GFDAY200,GFDAY300,GFDAY500: * 89-93
                       GFDAY600,GFDAY700,GFDAY100,GFDAY300,GFDAY400: * 94-98
                       GFDAY500,GFDAY600,GFDAY100,GFDAY200,GFDAY300: * 99-03
                       GFDAY400,GFDAY600,GFDAY700,GFDAY100,GFDAY200: * 04-08
                       GFDAY400,GFDAY500,GFDAY600,GFDAY700,GFDAY200  * 09-13
          MOVE      ONE,EXIT
          GOTO      GFDAY999
GFDAY100  MOVE      ONE,FSTDAY      * Mon
          GOTO      GFDAY999
GFDAY200  MOVE      TWO,FSTDAY      * Tue
          GOTO      GFDAY999
GFDAY300  MOVE      THREE,FSTDAY    * Wed
          GOTO      GFDAY999
GFDAY400  MOVE      FOUR,FSTDAY     * Thu
          GOTO      GFDAY999
GFDAY500  MOVE      FIVE,FSTDAY     * Fri
          GOTO      GFDAY999
GFDAY600  MOVE      SIX,FSTDAY      * Sat
          GOTO      GFDAY999
GFDAY700  MOVE      SEVEN,FSTDAY    * Sun
GFDAY999  RETURN
.
.----------------------------------------------
. Enter Message Code
.----------------------------------------------
EMESS000  MOVE        ZERO,CKEYTYP
          MOVE        "ME ",SICDCATA
          CALL        KSICDB00
          BRANCH      EXIT,EMESS900,EMESS999
          MOVE        SICDCODE,SIPAMES
EMESS900  MOVE        SP70,MESSDESC
          MATCH       SP70,SIPAMES
          GOTO        EMESS999 IF EQUAL
.
          MOVE        "ME ",SICDCATA
          PACK        KEY6,SICDCATA,SIPAMES,SP70
          CALL        RDSICD1
          IF          OVRCD=0
            MOVE        SICDDESC,MESSDESC
          ENDIF
.
EMESS999  RETURN
.
.------------------------------------------------------------
. Enter Date of Order
.------------------------------------------------------------
EORDD000  UNPACK    SIPADIN,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          PACK      SIPADIN,CCENT,CYEAR,CMON,CDAY
          REP       " 0",SIPADIN
          MOVE      SIPADIN,SIPEDATE
          CALL      RSIPE000   * Get Period End Date
          IF        OVRCD=1
            MOVE      "Period Not on File. Invalid Date - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      EORDD000
          ENDIF
          IF        SIPELOC=1
            MOVE      "Period Locked. - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      EORDD000
          ENDIF
.
          MATCH     SIPEYEAR,SIPECYR
          IF        !(@EQUAL)
            MOVE      "WARNING : Period Not in Current Year. - ",DISPMSG
            BEEP
            CALL      MESSAGE1
          ENDIF
.
EORDD999  RETURN
.
.----------------------------------------------
. Enter Confirmation Code
.----------------------------------------------
ECONF000  MOVE        ZERO,CKEYTYP
          MOVE        "CF ",SICDCATA
          CALL        KSICDB00
          BRANCH      EXIT,ECONF900,ECONF999
          MOVE        SICDCODE,SIPACON
ECONF900  MOVE      SP70,CONFDESC
          MATCH     SP70,SIPACON
          GOTO      ECONF999 IF EQUAL
.
          MOVE      "CF ",SICDCATA
          PACK      KEY6,SICDCATA,SIPACON,SP70
          CALL      RDSICD1
          IF        OVRCD=0
            MOVE      SICDDESC,CONFDESC
          ENDIF
.
ECONF999  RETURN
.
.------------------------------------------------------------
. Enter Warehouse Code for Next P/O Number
.------------------------------------------------------------
EWARE000  MOVE      ZERO,CKEYTYP
          CALL      KSIWSA00
          MOVE      SIWAWAR,DEFTWARE
          BRANCH    EXIT,EWARE000,EWARE900
.
          MOVE      ZERO,F7
          MOVE      SIWANPO,F7
          COMPARE   ZERO,F7
          IF        @EQUAL
            BEEP
            MOVE      "Warehouse May Not Have Purchase Orders. - ",DISPMSG
            CALL      MESSAGE1
            GOTO      EWARE000
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      EWARE999
.
EWARE900  MOVE      TWO,EXIT
.
EWARE999  RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSCEAIO/INC
          INC       APSCEBIO/INC
          INC       APSCIOIO/INC
          INC       APSMASIO/INC
          INC       APSMXRIO/INC
          INC       APSPPDIO/INC
          INC       APSSUBIO/INC
          INC       FMSAMAIO/INC
          INC       FMSCONIO/INC
          INC       FMSCSAIO/INC
          INC       FMSFPSIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMCIO/INC
          INC       FMSLMCKY    
          INC       FMSTUPIO/INC
          INC       IBAGEDIO/INC
          INC       IBAGSTIO/INC
          INC       IBAPRINT    
          INC       IBAPRNIO/INC
          INC       SINCCAIO/INC
          INC       SINCGAIO/INC
          INC       SINCGBIO/INC
          INC       SINCIAIO/INC
          INC       SINCIAKY    
          INC       SINCICIO/INC
          INC       SINCIEIO/INC
          INC       SINCIFIO/INC
          INC       SINCIHIO/INC
          INC       SINCODIO/INC
          INC       SINCODKY    
          INC       SINDPCIO/INC
          INC       SINFACIO/INC
          INC       SINFACKY    
          INC       SINLIMIO/INC
          INC       SINLTTIO/INC
          INC       SINNATIO/INC
          INC       SINORDEM    
          INC       SINORDFX    
          INC       SINORDPR    
          INC       SINORDUS    
          INC       SINORIIO/INC
          INC       SINORIKY    
          INC       SINPEGIO/INC
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINPOAIO/INC
          INC       SINPOBIO/INC
          INC       SINPOCIO/INC
          INC       SINPODIO/INC
          INC       SINPONCD    
          INC       SINRCPIO/INC
          INC       SINSCDIO/INC
          INC       SINSCMIO/INC
          INC       SINSOSIO/INC
          INC       SINSUAIO/INC
          INC       SINSUBIO/INC
          INC       SINTRNIO/INC
          INC       SINVHAIO/INC
          INC       SINWARIO/INC
          INC       SINWSEIO/INC
          INC       SINWSEKY    
.
          INC       STDGENCD
.
