.******************************************************************************
.* System    :   Private Practice                                             *
.* Program   :   IBAPRI06                                                     *
.* Desc      :   Pathology Test Maintenance                                   *
.******************************************************************************
.* Date      :   28/12/90                                                     *
.* Author    :   Stephen Armstrong                                            *
.* Function  :   Allows standard maintenance of pathology test file           *
.* Mods      :                                                                *
.*        V5.07.01  15/10/1999  D.Di Paola                                    *
.*                  Recompiled for PRIITMFD                                   *
.*       V5.07.B01  04/11/1998  Jim Stathopoulos                              *
.*                  507 Changes                                               *
.******************************************************************************
.*        V5.05.01  08/10/1997  Steve Armstrong         WWH Mods              *
.*                  Mods for change from GETITEM to KYPRIITM                  *
.******************************************************************************
.*        V5.04.00  02/07/1997  Howellsy                                      *
.*                  Ported from 6.04                                          *
.* ************************************************************************** *
.*        V6.01  25/06/92  DIG                                         *
.*                      Re-Compiled for file changes, etc                     *
.*        V6.01.02  12/05/1994  Graeme Williams   SRF 129360                  *
.*                  Added the Standard Abbreviation field                     *
.*        V6.01.03  22/07/1994  Graeme Williams   SRF 130946                  *
.*                  Set SUBITEM to blanks for AMA item numbers                *
.*        V6.03.01  20/05/1996  Greg Horvat      SRF 615223                   *
.*                  Recompiled for GETITEM - Problem with the sub item code   *
.*                                                                            *
.******************************************************************************
.
.$$$$$
.         Pathology Test Maintenance Program ( IBAPRI06 )
.         -----------------------------------------------
.
.         ML0000
.         Initialise and open files
.              priitemf
.              primultf
.              pritestf
.
.         ML0100
.         See which option is selected - insert, change, delete.
.         If 0 is selected, chain back to the calling program.
.
.         ML1000
.         Insert option selected
.
.         User prompted to input test code
.            If nothing is input, the program returns to get the next option.
.            If a "?" is input, the test codes already on file are listed
.            If exitchar is input, the program returns to get the next option.
.
.         User prompted to input effective date
.            If nothing is input for effective date, returns to get the
.              next test code.
.            If a "?" is input, the effective dates, if any, for this test code
.              are displayed.
.         Once a valid date is input, the program checks that the code/date
.         is not already on file, before proceeding with input of the other
.         fields.
.
.         Test description is a mandatory field. 
.            If exitchar is input, the program returns to get the next option.
.
.         An MBS and/or AMA item number must be entered.
.         MBS item number:
.            If nothing is input, the program skips to the next field.
.            If exitchar is input, the program returns to get the next option.
.            If a "?" is input, the program lists the valid MBS items on file
.
.         AMA item number:
.            If nothing is input, the program skips to the next field (providing
.               an MBS item has been input).
.            If exitchar is input, the program returns to get the next option.
.            If a "?" is input, the program lists the valid AMA items on file
.
.         If nothing was entered for MBS and AMA item number, the program
.         returns to get the MBS item number.
.
.         User is prompted to input multiple services code
.            If nothing is input for multiple services code, the program skips
.               to the Post/Cancel screen.
.            If "?" is input, the program lists the multiple service codes on
.               file
.
.         If a multiple services code has been input, then the user must input
.         the number of procedures associated with that code.
.         A number > zero must be input.
.
.         Once all the details have been input:
.            If (C)ancel is selected, the program returns to get the next test
.            code
.            If an item is selected, the user can edit that field.
.            If (P)ost is selected, the record is written to the file.
.
.         ML2000
.         Change option selected.
.         This option is much the same as the insert mode.
.         When the user inputs the test code, the program checks that the test
.         code is on file.  If so, it proceeds to get the effective date.
.         Once the effective date is input, the program checks that the
.         code/date combination actually exists on file before displaying the
.         details to the screen.
.
.         If (C)ancel is selected, the program returns to get the next
.         test code.
.         If an item is selected, the user can edit that field.
.         If (P)ost is selected, the record is updated.
.
.         ML3000
.         Delete option selected.
.         This module proceeds as for the change module, until the details
.         are displayed on the screen.
.         
.         If (C)ancel is selected, the program returns to get the next option.
.         If (N)o is selected, the program returns to get the next test code.
.         If (Y)es is selected, the program deletes the record, then returns
.         to get the next test code.
.
.         ML9999
.         Chain back to calling program
.
.$$$$$
          INC       STD001FD
.
          INC       PRIITMFD/INC
          INC       PRITESFD/INC
          INC       PRIMULFD/INC
.
.
. CONSTANTS
. ---------
.
NINE3     FORM      "999"
NINE8     FORM      "99999999"
ZED8      INIT      "zzzzzzzz"
ZED11     INIT      "zzzzzzzzzzz"
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
.
ABBREV    DIM       4                            * Standard abbreviation
AMAITEM   DIM       9                            * AMA item #
.
DESCR     DIM       30                           * Item description
DFLAG     FORM      1                            * for PRITESDS
.
ENDATE    DIM       8                            * effective date
.
IFLAG     FORM      2                            * item type 
.                                                     0 = MBS 
.                                                     1 = AMA 
ITEMNUMB  DIM       9                            * item number (KYPRIITM)
ITMDESC   DIM       30                           * for PRIITMDS
ITMFLAG   FORM      1                            * for PRIITMDS
.  
MBSITEM   DIM       9                            * MBS item #
MFLAG     FORM      1                            * for PRIMULDS
MSCODE    DIM       5                            * multiple services code
MSUBITM   DIM       3                            * MBS subitem number
MULDESC   DIM       30                           * for PRIMULDS
.
PATHFLAG  FORM      1                            * for PRIITMDS
PROCNO    FORM      3                            * number of procedures
.
SERDATE   DIM       8                            * for PRITESDS
SHTDESC   DIM       25                           * for PRITESDS
SUBITEM   DIM       3                            * subitem number (KYPRIITM)
.
TCODE     DIM       9                            * test code
TDESC     DIM       30                           * test description
TESTDESC  DIM       30                           * for PRITESDS
.
.
PRGID     INIT      "IBAPRI06"
PRGNAM    INIT      "Pathology Test Maintenance"
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialization and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,ML1000:        * insert
                            ML2000:        * change
                            ML3000         * delete
.
. ---- add a procedure code ----
.
ML1000    CALL      SCR0000                * display screen format
          CALL      PROC0000               * input procedure code
          BRANCH    EXIT,ML0100            * nothing input, get next option
          CALL      DATE0000               * get effective date
          BRANCH    EXIT,ML1000            * nothing input
          CALL      ACPT0000               * accept initial values
          BRANCH    EXIT,ML1000
          CALL      SEL0000                * select field to modify
          BRANCH    EXIT,ML1000            * (C)ancel selected
          CALL      WRT0000                * write to file
          GOTO      ML1000
.
. ---- modify a procedure code ----
.
ML2000    CALL      SCR0000                * display screen format
          CALL      PROC0000               * input procedure code
          BRANCH    EXIT,ML0100            * nothing input, get next option
          CALL      DATE0000               * get effective date
          BRANCH    EXIT,ML2000            * nothing input
          CALL      DISP0000               * display details
          CALL      SEL0000                * select field to modify
          BRANCH    EXIT,ML2000            * (C)ancel selected
          CALL      UPD0000                * update record
          GOTO      ML2000
.
. ---- delete a procedure code ----
.
ML3000    CALL      SCR0000                * display screen format
          CALL      PROC0000               * input procedure code
          BRANCH    EXIT,ML0100            * nothing input, get next option
          CALL      DATE0000               * get effective date
          BRANCH    EXIT,ML3000            * nothing input
          CALL      DISP0000               * display details
          CALL      DELQST                 * ok to delete ?
          BRANCH    CEXIT,ML3100:          * Yes
                          ML3000:          * No
                          ML0100           * Cancel
ML3100    CALL      DEL0000                * delete this record
          GOTO      ML3000
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"priitemf";          * item file
          OPEN      PRIITEM1,"priitemf"
.
          DISPLAY   *P64:24,"priitemf";          * item file
          OPEN      PRIITEM2,"priitemf"
.
          DISPLAY   *P64:24,"primultf";          * multiple item file
          OPEN      PRIMULT1,"primultf"
          OPEN      PRIMULT2,"primultf"
.
          DISPLAY   *P64:24,"pritestf";          * pathology test file
          OPEN      PRITEST1,"pritestf"
          OPEN      PRITEST3,"pritestf"
.
          MOVE      ZERO,CHIGHLT
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Valid option selected                  *
.*                        TRUE  (1)  Exit option selected                   *
.*              COPTION = 1  Insert option selected                         *
.*                        2  Change option selected                         *
.*                        3  Delete option selected                         *
.****************************************************************************
.
. ---- display option screen ----
.
OPTN0000  CALL      SELOPTN                       * select option
          COMPARE   ZERO,COPTION
          GOTO      OPTN9000 IF EQUAL                 * exit
.
          MOVE      FALSE,EXIT
          GOTO      OPTN9999
.
OPTN9000  MOVE      TRUE,EXIT                   * set EXIT = 1
.
OPTN9999  RETURN
+
.**************************************************************************
.*                                  CLR0000            Called by: PROC0000*
.*                            clear global variables                      *
.**************************************************************************
.
CLR0000   MOVE      SP9,TCODE
          MOVE      SP8,ENDATE
          MOVE      SP30,TDESC
          MOVE      SP9,MBSITEM
          MOVE      SP3,MSUBITM
          MOVE      SP9,AMAITEM
          MOVE      SP5,MSCODE
          MOVE      ZERO,PROCNO
          UNPACK    SP8,CCENT,CYEAR,CMON,CDAY
          MOVE      SP4,ABBREV
.
CLR9999   RETURN
+
.**************************************************************************
.*                               PROC0000              Called by: ML0000  *
.*                       input identification code                        *
.**************************************************************************
.
PROC0000  CALL      CLR0000                  * Clear the record variables
.
          KEYIN     *P30:4,*DV,UNDLN9:       * get test code
                    *P30:4,*V2LON,TCODE:
                    *P30:4,*DV,TCODE
.
          CALL      CHEK0000                     * see what was entered
          BRANCH    EXIT,PROC9000:               * nothing/exitchar entered
                         PROC4000:               * ? entered
                         PROC8000                * valid code
.
          GOTO      PROC0000                     * invalid entry
.
PROC4000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
PROC4200  CALL      PRITESDS                     * display test codes on file
.
PROC4500  KEYIN     *P1:24,*EL,"Test Code : ",*DV,UNDLN9:
                    *P13:24,*V2LON,TCODE:
                    *P13:24,*DV,TCODE
.
          CALL      CHEK0000                     * see what was entered
          BRANCH    EXIT,PROC8900:               * nothing/exitchar entered
                         PROC4200:               * ? entered
                         PROC7900                * valid code
.
          GOTO      PROC4500                     * invalid entry
.
PROC7900  CALL      PUTSCR00
          DISPLAY   *P30:4,*V2LON,TCODE
PROC8000  MOVE      TCODE,PRTECODE
          MOVE      ZERO,EXIT
.
          CALL      LOAD0000
          GOTO      PROC9999
.
PROC8900  CALL      FRESCR00
PROC9000  MOVE      ONE,EXIT
.
PROC9999  RETURN
+
.**************************************************************************
.*                                  CHEK0000           Called by: PROC0000*
.*                    See if anything entered                             *
.*           Exit - 0 = Invalid entry                                     *
.*                  1 = Nothing or Exitchar entered                       *
.*                  2 = ? entered                                         *
.*                  3 = valid code                                        *
.**************************************************************************
.
CHEK0000  ENDSET    TCODE
          APPEND    SP9,TCODE
          RESET     TCODE
.
          MATCH     SP9,TCODE                    * anything entered ?
          GOTO      CHEK7000 IF EQUAL            * no
.
          MATCH     EXITCHAR,TCODE               * exitchar entered ?
          GOTO      CHEK7000 IF EQUAL            * yes
.
          MATCH     QUEST,TCODE                  * ? entered ?
          GOTO      CHEK8000 IF EQUAL            * yes
.
.         Code entered, so see if valid
.
          BRANCH    COPTION,CHEK9000             * insert mode
.
          PACK      KEY17,TCODE,SP20             * change/delete mode
          CALL      RSPRTE1                      * position in file
          CALL      RKPRTE1                      * read next record
          BRANCH    OVRCD,CHEK3000               * code not on file
.
          MATCH     PRTECODE,TCODE               * same code ?
          GOTO      CHEK9000 IF EQUAL            * yes
.
CHEK3000  DISPLAY   *P1:24,*EL,*B,"Test not on file. ";
          CALL      HITENTER
          GOTO      CHEK6000
.
CHEK6000  MOVE      ZERO,EXIT                    * test code input
          GOTO      CHEK9999
.
CHEK7000  MOVE      ONE,EXIT                     * nothing input
          GOTO      CHEK9999
.
CHEK8000  MOVE      TWO,EXIT                     * ? input
          GOTO      CHEK9999
.
CHEK9000  MOVE      THREE,EXIT
.
CHEK9999  RETURN
+
.****************************************************************************
.*                               DATE0000              Called by: ML0000    *
.*                     get effective date of test                           *
.****************************************************************************
.
DATE0000  MOVE      THIRTY,CCOL
          MOVE      FIVE,CVERT
          UNPACK    SP6,CDAY,CMON,CYEAR
          MOVE      CCC,CCENT
          CALL      KEYDATE                      * get date
          BRANCH    CQUEST,DATE4000
          BRANCH    OVRCD,DATE9500               * invalid date input
.
          CALL      VALD0000                     * validate test & date
          BRANCH    EXIT,DATE0000                * not valid
.
          GOTO      DATE9000                     * valid
.
DATE4000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
.
DATE5000  CALL      GETD0000                     * display effective dates
          MOVE      THIRTY,CCOL
          MOVE      FIVE,CVERT
          UNPACK    SP6,CDAY,CMON,CYEAR
          MOVE      CCC,CCENT
          CALL      KEYDATE                      * get date
          BRANCH    CQUEST,DATE5000
          BRANCH    OVRCD,DATE9400               * invalid date input
.
          CALL      VALD0000                     * validate test & date
          BRANCH    EXIT,DATE5000                * invalid
.
          CALL      PACDATE
          CALL      PUTSCR00
          DISPLAY   *P30:5,*V2LON,CPCDATE
          
DATE9000  MOVE      ZERO,EXIT
          GOTO      DATE9999
.
DATE9400  CALL      FRESCR00
DATE9500  MOVE      ONE,EXIT
.
DATE9999  RETURN
+
.****************************************************************************
.*                                VALD0000             Called by: DATE0000  *
.*                validate the test and date input                          *
.*   RETURNS:      EXIT   0 = invalid test and date                         *
.*                        1 = valid test and date                           *
.****************************************************************************
.
VALD0000  PACK      ENDATE,CCENT,CYEAR,CMON,CDAY * save date
.
          PACK      KEY17,TCODE,ENDATE
          CALL      RDPRTE1                      * code on file ?
.
          BRANCH    COPTION,VALD1000:            * mustn't exist
                            VALD2000:            * must exist
                            VALD2000             * must exist
.
VALD1000  BRANCH    OVRCD,VALD9000               * not on file
.
          DISPLAY   *P1:24,*EL,*B,"Test and date already on file.  ";
          CALL      HITENTER
          GOTO      VALD9500
.
VALD2000  COMPARE   ZERO,OVRCD                   * code on file ?
          GOTO      VALD9000 IF EQUAL            * yes
.
          DISPLAY   *P1:24,*EL,*B,"Test not on file for this date.  ";
          CALL      HITENTER
          GOTO      VALD9500
.
VALD9000  MOVE      ZERO,EXIT
          GOTO      VALD9999
.
VALD9500  MOVE      ONE,EXIT
.
VALD9999  RETURN
+
.***************************************************************************
.*                               GETD0000              Called by: DATE0000 *
.*                  display effective dates for test code                  *
.***************************************************************************
.
GETD0000  DISPLAY   *P1:7,*EF,*V2LON,*ULON,"Effective Dates for ",TCODE
          MOVE      SEVEN,CVERT
          PACK      KEY17,TCODE,SP8
          CALL      RSPRTE1                      * position in file
          CALL      RKPRTE1                      * read next record
          BRANCH    OVRCD,GETD8000               * no records on file
.
          GOTO      GETD2000
.
GETD1000  CALL      RKPRTE1                      * read next record
          BRANCH    OVRCD,GETD9999               * end of file
.
GETD2000  MATCH     TCODE,PRTECODE               * same test code ?
          GOTO      GETD9999 IF NOT EQUAL        * no
.
          COMPARE   TWENTY2,CVERT                * page full ?
          GOTO      GETD5000 IF NOT LESS         * yes
.
GETD3000  ADD       ONE,CVERT                    * increment line count
          UNPACK    PRTEDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          DISPLAY   *P1:CVERT,CPCDATE            * display date
          GOTO      GETD1000                     * get next record
.
GETD5000  KEYIN     *P1:24,*EL,"(",*V2LON,*DV,ANSC,*HOFF,")ontinue, (":
                    *V2LON,*DV,ANSN,*HOFF,")ext page, (",*V2LON,*DV,ANSF,*HOFF:
                    ")irst page ? ":
                    *P41:24,*V2LON,ANS
.
          RESET     ANS
          REP       UPPLOW,ANS
.
          CMATCH    ANSC,ANS                     * continue ?
          GOTO      GETD9999 IF EQUAL            * yes
.
          CMATCH    ANSN,ANS                     * next ?
          GOTO      GETD7000 IF EQUAL            * yes
.
          CMATCH    ANSF,ANS                     * first
          GOTO      GETD0000 IF EQUAL            * yes
.
          BEEP
          GOTO      GETD5000
.
GETD7000  DISPLAY   *P1:8,*EF                    * clear page for next screen
          MOVE      SEVEN,CVERT
          GOTO      GETD3000
.
GETD8000  DISPLAY   *P1:24,*EL,*B,"No dates for this test on file.  ";
          CALL      HITENTER
.
GETD9999  RETURN
+
.**************************************************************************
.*                                  SCR0000            Called by: ML0000  *
.*                         display screen format                  PROC0000*
.*                                                                MBSN0000*
.*                                                                AMAN0000*
.*                                                                MULT0000*
.**************************************************************************
.
SCR0000   DISPLAY   *P1:3,*EF,*P18:4,"Test Code :":
                    *P13:5,"Effective From :":
                    *P2:7,*V2LON,"1",*HOFF,". Test Description",*P28:7,":":
                    *P2:8,*V2LON,"2",*HOFF,". MBS Item Number",*P28:8,":":
                    *P2:9,*V2LON,"3",*HOFF,". AMA Item Number",*P28:9,":":
                    *P2:10,*V2LON,"4",*HOFF:
                    ". Multiple Services Code",*P28:10,":":
                    *P2:11,*V2LON,"5",*HOFF,". No. of Procedures",*P28:11,":":
                    *P2:12,*V2LON,"6",*HOFF:
                    ". Standard Abbreviation",*P28:12,":"
.
SCR9999   RETURN
+
.*************************************************************************
.*                                  ACPT0000           Called by: ML0000 *
.*   INPUT mode only :      accept initial values                        *
.*************************************************************************
.
ACPT0000  CALL      DESC0000                     * Test description
          BRANCH    EXIT,ACPT9999                * exitchar entered
.
ACPT0500  CALL      MBSN0000                     * MBS Number
          BRANCH    EXIT,ACPT9999                * exitchar entered
.
          CALL      AMAN0000                     * AMA Number
          BRANCH    EXIT,ACPT9999                * exitchar entered
.
.         Make sure an AMA or an MBS item (or both) has been input
.
          MATCH     SP9,PRTEITMN                 * blank MBS item ?
          GOTO      ACPT1000 IF NOT EQUAL        * no
.         
          MATCH     SP9,PRTEAMAN                 * blank AMA item ?
          GOTO      ACPT1000 IF NOT EQUAL        * no
.
          DISPLAY   *P1:24,*EL,*B,"An MBS and/or AMA item number is ":
                    "mandatory. ";
          CALL      HITENTER
          GOTO      ACPT0500
.
ACPT1000  CALL      MULT0000                     * Multiple services code
          BRANCH    EXIT,ACPT9999                * exitchar entered
.
          MATCH     SP5,MSCODE                   * blank code ?
          GOTO      ACPT9000 IF EQUAL            * yes
.
          CALL      NPRO0000                     * Number of procedures
          CALL      ABRV0000                     * Standard abbreviation
.
ACPT9000  MOVE      ZERO,EXIT
.
ACPT9999  RETURN
+
.****************************************************************************
.*                                  DESC0000           Called by: ACPT0000  *
.*                    input the test description                  SEL0000   *
.****************************************************************************
.
DESC0000  KEYIN     *P30:7,*DV,UNDLN30:
                    *P30:7,*V2LON,TDESC:
                    *P30:7,*DV,TDESC
.
          ENDSET    TDESC
          APPEND    SP30,TDESC
          RESET     TDESC
.
          MATCH     SP30,TDESC                   * anything entered ?
          GOTO      DESC5000 IF EQUAL            * no
.
          MATCH     EXITCHAR,TDESC               * exitchar entered ?
          GOTO      DESC9000 IF EQUAL            * yes
.
          GOTO      DESC9500                     * description entered
.
DESC5000  DISPLAY   *P1:24,*EL,*B,"Test description is mandatory. ";
          CALL      HITENTER
          GOTO      DESC0000
.
DESC9000  MOVE      ONE,EXIT
          GOTO      DESC9999
.
DESC9500  MOVE      TDESC,PRTEDESC
          MOVE      ZERO,EXIT
.
DESC9999  RETURN
+
.****************************************************************************
.*                                  MBSN0000           Called by: ACPT0000  *
.*                  input MBS item number                         SEL0000   *
.****************************************************************************
.
MBSN0000  MOVE      EIGHT,CVERT
          MOVE      THIRTY,CCOL 
          DISPLAY   *P30:8,*EL
          MOVE      ZERO,IFLAG
          MOVE      SP9,MBSITEM
          MOVE      SP3,MSUBITM
          CALL      KYPRIITM
          BRANCH    EXIT,MBSN9500:               * exitchar entered
                         MBSN4000:               * ? entered
                         MBSN9000                * nothing entered
.
          CALL      CHKI0000                     * see if valid item
          BRANCH    EXIT,MBSN0000                * no
          GOTO      MBSN7000
.
MBSN4000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
MBSN4200  MOVE      ZERO,ITMFLAG
          MOVE      ENDATE,SERDATE
          MOVE      ZERO,PATHFLAG
          CALL      PRIITMDS                     * display items on file
.
MBSN4500  MOVE      TWENTY4,CVERT
          MOVE      TEN5,CCOL
          DISPLAY   *P1:24,*EL,"Item number : ";
          CALL      KYPRIITM
          BRANCH    EXIT,MBSN9400:               * exitchar entered
                         MBSN4200:               * ? entered
                         MBSN8000                * nothing entered
.
          CALL      CHKI0000                     * see if valid item
          BRANCH    EXIT,MBSN4500                * no
.
.         Valid item input after ?
.
          CALL      PUTSCR00                     * restore screen
          DISPLAY   *P30:8,*V2LON,PRITITMN
          MATCH     SP3,PRITSUBN                 * subitem ?
          GOTO      MBSN7000 IF EQUAL            * no
.
          DISPLAY   *P40:8,*V2LON,PRITSUBN
.
MBSN7000  DISPLAY   *P46:8,PRITDESC              * item on file
          GOTO      MBSN9000
.
.         Nothing input after ?
.
MBSN8000  CALL      PUTSCR00                     * restore screen
          DISPLAY   *P30:8,*EL
.
MBSN9000  MOVE      ITEMNUMB,MBSITEM
          MOVE      SUBITEM,MSUBITM
          MOVE      MBSITEM,PRTEITMN
          MOVE      MSUBITM,PRTESUBN
          MOVE      ZERO,EXIT
          GOTO      MBSN9999
.
MBSN9400  CALL      FRESCR00
MBSN9500  MOVE      ONE,EXIT
.
MBSN9999  RETURN
+
.****************************************************************************
.*                                  CHKI0000           Called by: MBSN0000  *
.*                     see if item input is valid                 AMAN0000  *
.*  RETURNS:       EXIT   0 = valid item input                              *
.*                        1 = invalid item input                            *
.****************************************************************************
.
CHKI0000  PACK      KEY22,IFLAG,ITEMNUMB,SUBITEM,ENDATE
          CALL      RDPRIT1
          COMPARE   ZERO,OVRCD                   * on file ?
          GOTO      CHKI2000 IF EQUAL            * yes
.
          DISPLAY   *P1:24,*EL,*B,"Item not on file. ";
          CALL      HITENTER
          GOTO      CHKI9500
.
CHKI2000  COMPARE   ZERO,PRITPATH                * pathology item ?
          GOTO      CHKI9000 IF EQUAL            * yes
.
          DISPLAY   *P1:24,*EL,*B,"Not a pathology item. ";
          CALL      HITENTER
          GOTO      CHKI9500
.
CHKI9000  MOVE      ZERO,EXIT
          GOTO      CHKI9999
.
CHKI9500  MOVE      ONE,EXIT
.
CHKI9999  RETURN
+
.****************************************************************************
.*                                  AMAN0000           Called by: ACPT0000  *
.*                  input AMA item number                         SEL0000   *
.****************************************************************************
.
AMAN0000  MOVE      NINE,CVERT 
          MOVE      THIRTY,CCOL 
          DISPLAY   *P30:9,*EL
          MOVE      ONE,IFLAG
          MOVE      SP9,AMAITEM
          MOVE      SP3,SUBITEM
          CALL      KYPRIITM
          BRANCH    EXIT,AMAN9500:               * exitchar entered
                         AMAN4000:               * ? entered
                         AMAN9000                * nothing entered
.
          CALL      CHKI0000                     * see if valid item
          BRANCH    EXIT,AMAN0000                * no
          GOTO      AMAN7000
.
AMAN4000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
AMAN4200  MOVE      ZERO,ITMFLAG
          MOVE      ENDATE,SERDATE
          MOVE      ZERO,PATHFLAG
          CALL      PRIITMDS                     * display items on file
.
AMAN4500  MOVE      TWENTY4,CVERT
          MOVE      TEN5,CCOL
          DISPLAY   *P1:24,*EL,"Item number : ";
          CALL      KYPRIITM
          BRANCH    EXIT,AMAN9400:               * exitchar entered
                         AMAN4200:               * ? entered
                         AMAN8000                * nothing entered
.
          CALL      CHKI0000                     * see if valid item
          BRANCH    EXIT,AMAN4500                * no
.
.         Valid item input after ?
.
          CALL      PUTSCR00                     * restore screen
          DISPLAY   *P30:9,*V2LON,PRITITMN
.
AMAN7000  DISPLAY   *P46:9,PRITDESC              * item on file
          GOTO      AMAN9000
.
.         Nothing input after ?
.
AMAN8000  CALL      PUTSCR00                     * restore screen
          DISPLAY   *P30:9,*EL
.
AMAN9000  MOVE      ITEMNUMB,AMAITEM
          MOVE      AMAITEM,PRTEAMAN
          MOVE      ZERO,EXIT
          GOTO      AMAN9999
.
AMAN9400  CALL      FRESCR00
AMAN9500  MOVE      ONE,EXIT
.
AMAN9999  RETURN
+
.****************************************************************************
.*                                  MULT0000           Called by: ACPT0000  *
.*                   input multiple services code                 SEL0000   *
.****************************************************************************
.
MULT0000  KEYIN     *P30:10,*DV,UNDLN5:
                    *P30:10,*V2LON,MSCODE:
                    *P30:10,*DV,MSCODE
.
          CALL      CHKM0000                * see what was entered
          BRANCH    EXIT,MULT9000:          * exitchar entered
                         MULT4000:          * ? entered
                         MULT8000:          * nothing entered
                         MULT8000           * valid code entered
.
          GOTO      MULT0000                * invalid code
.
MULT4000  MOVE      ZERO,HLEF
          CALL      GETSCR00                * save screen
MULT4200  MOVE      ZERO,MFLAG
          MOVE      ENDATE,SERDATE
          CALL      PRIMULDS                * list codes on file
.
MULT4500  KEYIN     *P1:24,*EL,"Multiple Services Code : ",*DV,UNDLN5:
                    *P26:24,*V2LON,MSCODE:
                    *P26:24,*DV,MSCODE
.
          CALL      CHKM0000                * see what was entered
          BRANCH    EXIT,MULT8900:          * exitchar entered
                         MULT4200:          * ? entered
                         MULT7900:          * nothing entered
                         MULT7900           * valid code entered
.
          GOTO      MULT4500                * invalid code
.
MULT7900  CALL      PUTSCR00                * restore screen
          DISPLAY   *P30:10,*EL,*V2LON,MSCODE
MULT8000  MOVE      MSCODE,PRTEMSER
          DISPLAY   *P46:10,PRMUDESC
          MOVE      ZERO,EXIT
          GOTO      MULT9999
.
MULT8900  CALL      FRESCR00
MULT9000  MOVE      ONE,EXIT
.
MULT9999  RETURN
+
.**************************************************************************
.*                                  CHKM0000           Called by: MULT0000*
.*        See if anything entered for multiple services code              *
.*           Exit - 0 = Invalid code input                                *
.*                  1 = Exitchar entered                                  *
.*                  2 = ? entered                                         *
.*                  3 = nothing entered                                   *
.*                  4 = valid code input                                  *
.**************************************************************************
.
CHKM0000  ENDSET    MSCODE
          APPEND    SP5,MSCODE
          RESET     MSCODE
.
          MATCH     SP5,MSCODE                   * anything entered ?
          GOTO      CHKM8000 IF EQUAL            * no
.
          MATCH     EXITCHAR,MSCODE              * exitchar entered ?
          GOTO      CHKM6000 IF EQUAL            * yes
.
          MATCH     QUEST,MSCODE                 * ? entered ?
          GOTO      CHKM7000 IF EQUAL            * yes
.
.         Code entered, see if valid
.
          PACK      KEY16,MSCODE,ENDATE,NINE3
          CALL      RSPRMU1                      * position in file
          CALL      RPPRMU1                      * read previous record
          BRANCH    OVRCD,CHKM5000               * end of file
.
.         The effective date for the test code, must be equal to or
.         greater than the first multiple services code on file
.
          MATCH     MSCODE,PRMUCODE              * same code ?
          GOTO      CHKM5000 IF NOT EQUAL        * no
.
          MATCH     PRMUDATE,ENDATE              * test effective date = or >
          GOTO      CHKM5000 IF LESS             * no 
.
          GOTO      CHKM9000
.
CHKM5000  DISPLAY   *P1:24,*EL,*B,"Multiple service code not on file. ";
          CALL      HITENTER
          MOVE      ZERO,EXIT                    * test code input
          GOTO      CHKM9999
.
CHKM6000  MOVE      ONE,EXIT                     * exitchar input
          GOTO      CHKM9999
.
CHKM7000  MOVE      TWO,EXIT                     * ? input
          GOTO      CHKM9999
.
CHKM8000  MOVE      SP30,PRMUDESC
          MOVE      THREE,EXIT                   * nothing input
          GOTO      CHKM9999
.
CHKM9000  MOVE      FOUR,EXIT
.
CHKM9999  RETURN
+
.****************************************************************************
.*                                  NPRO0000           Called by: ACPT0000  *
.*                     input number of procedures                 SEL0000   *
.****************************************************************************
.
NPRO0000  KEYIN     *P30:11,*EL,*V2LON,PROCNO:
                    *P30:11,*DV,PROCNO
.
          COMPARE   ONE,PROCNO                   * procedures < 1 ?
          GOTO      NPRO9000 IF NOT LESS         * no
.
          DISPLAY   *P1:24,*EL,*B,"Number of procedures must be greater ":
                    "than 0. ";
          CALL      HITENTER
          GOTO      NPRO0000
.
NPRO9000  MOVE      PROCNO,PRTETESN
.
NPRO9999  RETURN
+
.****************************************************************************
.*                                  ABRV0000           Called by: ACPT0000  *
.*                    input the standard abbreviation             SEL0000   *
.****************************************************************************
.
ABRV0000  KEYIN     *P30:12,*DV,UNDLN4:
                    *P30:12,*V2LON,PRTEABRV:
                    *P30:12,*DV,PRTEABRV
.
          ENDSET    PRTEABRV
          APPEND    SP30,PRTEABRV
          RESET     PRTEABRV
.
          MATCH     SP4,PRTEABRV
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,*B,"An abbreviation code is required. ";
            CALL      HITENTER
            GOTO      ABRV0000
          ENDIF
.
ABRV9999  RETURN
+
.****************************************************************************
.*                                   SEL0000           Called by: ML0000    *
.*                         select field to modify or post                   *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Post was selected.                     *
.*                        TRUE  (1)  Cancel was selected.                   *
.****************************************************************************
.
SEL0000   CALL      MAINQST                  * Ask for an item, post or cancel
.
          COMPARE   ZERO,CCITEM              * What was entered ?
          GOTO      SEL8000 IF EQUAL         * Post was selected
          GOTO      SEL9000 IF LESS          * Cancel was selected
.
          BRANCH    CCITEM,SEL1000:          * test description
                           SEL2000:          * MBS number
                           SEL3000:          * AMA number
                           SEL4000:          * Multiple services code
                           SEL5000:          * Number of procedures
                           SEL6000           * Standard abbreviation
.
          BEEP
          GOTO      SEL0000
.
SEL1000   CALL      DESC0000
          GOTO      SEL0000
.
SEL2000   CALL      MBSN0000
          BRANCH    EXIT,SEL9999
.
          MATCH     SP9,PRTEITMN                 * blank MBS item ?
          GOTO      SEL0000 IF NOT EQUAL         * no
.
          MATCH     SP9,PRTEAMAN                 * blank AMA item ?
          GOTO      SEL0000 IF NOT EQUAL         * no
.
          DISPLAY   *P1:24,*EL,*B,"An MBS and/or AMA item number is ":
                    "mandatory. ";
          CALL      HITENTER
          GOTO      SEL2000
.
SEL3000   CALL      AMAN0000
          BRANCH    EXIT,SEL9999
.
          MATCH     SP9,PRTEITMN                 * blank MBS item ?
          GOTO      SEL0000 IF NOT EQUAL         * no
.
          MATCH     SP9,PRTEAMAN                 * blank AMA item ?
          GOTO      SEL0000 IF NOT EQUAL         * no
.
          DISPLAY   *P1:24,*EL,*B,"An MBS and/or AMA item number is ":
                    "mandatory. ";
          CALL      HITENTER
          GOTO      SEL2000
.
SEL4000   CALL      MULT0000
          MATCH     SP5,PRTEMSER
          GOTO      SEL4500 IF EQUAL
          COMPARE   ZERO,PRTETESN
          GOTO      SEL4800 IF EQUAL
          GOTO      SEL0000
.
.         No multiple services code
.
SEL4500   DISPLAY   *P30:11,*EL,*P30:12,*EL
          MOVE      ZERO,PRTETESN
          MOVE      SP4,PRTEABRV
          GOTO      SEL0000
.
.         Added a multiple services code
.
SEL4800   CALL      NPRO0000
          CALL      ABRV0000
          GOTO      SEL0000
.
SEL5000   MATCH     SP5,PRTEMSER
          GOTO      SEL5500 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL,*B,"Multiple services code must be input ":
                    "first. ";
          CALL      HITENTER
          GOTO      SEL0000
.
SEL5500   CALL      NPRO0000
          GOTO      SEL0000
.
SEL6000   MATCH     SP5,PRTEMSER
          GOTO      SEL6500 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL,*B,"Multiple services code must be input ":
                    "first. ";
          CALL      HITENTER
          GOTO      SEL0000
.
SEL6500   CALL      ABRV0000
          GOTO      SEL0000
.
.         Post was selected. Set the exit flag to tell the calling routine.
.
SEL8000   MOVE      ZERO,EXIT                * Post was selected 
          GOTO      SEL9999
.
.         Cancel was selected. Set the exit flag to tell the calling routine.
.
SEL9000   MOVE      ONE,EXIT                 * Cancel was selected
.
SEL9999   RETURN
+
.**************************************************************************
.*                              LOAD0000               Called by: PROC0000*
.*            load file variables ready for redisplay after ? option      *
.**************************************************************************
.
LOAD0000  BRANCH    COPTION,LOAD5000
.
.         Change or Delete mode - move file variables into program variables
.
          MOVE      PRTEDESC,TDESC
          MOVE      PRTEITMN,MBSITEM
          MOVE      PRTESUBN,MSUBITM
          MOVE      PRTEAMAN,AMAITEM
          MOVE      PRTEMSER,MSCODE
          MOVE      PRTETESN,PROCNO
          MOVE      PRTEABRV,ABBREV
          GOTO      LOAD9999
.
.         Insert Mode - move program variables into file variables
.
LOAD5000  MOVE      TDESC,PRTEDESC
          MOVE      MBSITEM,PRTEITMN
          MOVE      MBSITEM,PRTESUBN
          MOVE      AMAITEM,PRTEAMAN
          MOVE      MSCODE,PRTEMSER
          MOVE      PROCNO,PRTETESN
          MOVE      ABBREV,PRTEABRV
.
LOAD9999  RETURN
+
.**************************************************************************
.*                              WRT0000                Called by: ML0000  *
.*                          write a new record                            *
.**************************************************************************
.
WRT0000   DISPLAY   *P50:24,*V2LON,"* Record Inserted *";
.
          CALL      WRPRTE1                      * write record
.
WRT9999   RETURN
+
.*************************************************************************
.*                                DISP0000             Called by: ML0000 *
.*                   display details corresponse to procedure code.      *
.*                   and save values read from file                      *
.*************************************************************************
.
DISP0000  DISPLAY   *P30:4,*V2LON,PRTECODE
.
          UNPACK    PRTEDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P30:5,*V2LON,CPCDATE:
                    *P30:7,PRTEDESC:
                    *P30:8,PRTEITMN
.
          MATCH     SP3,PRTESUBN                 * subitem number ?
          GOTO      DISP1000 IF EQUAL            * no
.
          DISPLAY   *P38:8,*V2LON,"(",PRTESUBN,")"
.
DISP1000  MOVE      ZERO,IFLAG                   * get MBS item description
          MOVE      SP30,DESCR
          PACK      KEY22,IFLAG,PRTEITMN,PRTESUBN,PRTEDATE
          CALL      RDPRIT1
          BRANCH    OVRCD,DISP2000
.
          MOVE      PRITDESC,DESCR
DISP2000  DISPLAY   *P46:8,DESCR,*P30:9,*V2LON,PRTEAMAN
.
          MOVE      ONE,IFLAG                    * get AMA item description
          MOVE      SP30,DESCR
          PACK      KEY22,IFLAG,PRTEAMAN,SP3,PRTEDATE
          CALL      RDPRIT1
          BRANCH    OVRCD,DISP3000
.
          MOVE      PRITDESC,DESCR
DISP3000  DISPLAY   *P46:9,DESCR
.
          MATCH     SP5,PRTEMSER                 * service code blank ?
          GOTO      DISP9999 IF EQUAL            * yes
.
          MOVE      SP30,PRMUDESC
          PACK      KEY16,MSCODE,ENDATE,NINE3
          CALL      RSPRMU1                      * position in file
          CALL      RPPRMU1                      * read previous record
.
          DISPLAY   *P30:10,*V2LON,PRTEMSER,*HOFF,*P46:10,PRMUDESC:
                    *P30:11,*V2LON,PRTETESN:
                    *P30:12,*V2LON,PRTEABRV
.
DISP9999  RETURN
+
.***************************************************************************
.*                               UPD0000               Called by: ML0000   *
.*                      update record and insert key if part of            *
.*                      key has been modified.                             *
.***************************************************************************
.
UPD0000   DISPLAY   *P50:24,*V2LON,"* Record Changed *";
.
          CALL      UPPRTE1
.
UPD9999   RETURN
+
.****************************************************************************
.*                              DEL0000                Called by: ML0000    *
.*                         delete an existing record                        *
.****************************************************************************
.
DEL0000   DISPLAY   *P50:24,*V2LON,"* Record Deleted *";
.
          PACK      KEY17,TCODE,ENDATE
          CALL      DEPRTE1
.
DEL9999   RETURN
.
+
.****************************************************************************
.*  I/O Includes
.****************************************************************************
.
          INC       STD001IO
.
          INC       KYPRIITM
          INC       PRITESDS
          INC       PRIITMDS
          INC       PRIMULDS
.
          INC       PRIITMIO/INC                 * item file
          INC       PRITESIO/INC                 * test file
          INC       PRIMULIO/INC                 * multiple services file
