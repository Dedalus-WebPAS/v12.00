.***************************************************************************
.* System    :   Inpatients                                                *
.* Program   :   FX273636                                                  *
.* Desc      :   Update pmsmdt/mtx with vismdt/mtx                         *
.***************************************************************************
.* Date      :   25/09/2012                                                *
.* Author    :   Davin Sloan                                               *
.* Function  :   Copy visit based clinical notes (type 001) to UR based    *
.***************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       EMRVISFD/INC
          INC       VISMDTFD/INC
          INC       VISMTXFD/INC
          INC       PMSMDTFD/INC
          INC       PMSMTXFD/INC
.
. LOCAL VARIABLE DEFINITION
. -------------------------
.
DIM30     DIM       30
COUNTER   FORM      8
.
PRGID     INIT      "FX273636"
PRGNAM    INIT      "Update pmsmdt with vismdt    "
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,ML1000         * proceed with clean up
.
ML1000    CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,ML2000:          * yes
                          ML0100:          * no
                          ML0100           * cancel
.
ML2000    CALL      PROC0000               * process
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          OPEN      PMSMDTA1,"pmsmdtaf"
          OPEN      PMSMTXA1,"pmsmtxaf"
          OPEN      VISMDTA1,"vismdtaf"
          OPEN      VISMTXA1,"vismtxaf"
          OPEN      EMRVISA1,"emrvisaf"
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Run clean up                           *
.*                        TRUE  (1)  Exit option selected                   *
.****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ",*DV,UNDLN1:
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run clean-up
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.**************************************************************************
.*                               PROC0000              Called by: ML0000  *
.*                                                                        *
.**************************************************************************
.
PROC0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          MOVE      ZERO,COUNTER
          PACK      KEY17,SP70
          CALL      RSVSMDT1
PROC0100  CALL      RKVSMDT1                     * loop through visit notes
          BRANCH    OVRCD,PROC9000
.
          ADD       ONE,COUNTER
          IF        (COUNTER%100) = 0
            DISPLAY   *P15:20,*V2LON,COUNTER
          ENDIF
.
          MATCH     "001",VSMDTYPE               * type 001
          GOTO      PROC0100 IF NOT EQUAL
.
          PACK      KEY8,VSMDVISN,SP70
          CALL      RDEMVIS1                     * get ur number
          BRANCH    OVRCD,PROC0100
.
          MOVE      VSMDNOTE,F6
PROC0110  PACK      KEY14,EMVIURNO,F6
          CALL      RAPMMDT1
          BRANCH    OVRCD,PROC0120
.
          ADD       ONE,F6                       * note number already exists
          GOTO      PROC0110
.
PROC0120  MOVE      EMVIURNO,PMMDURNO            * write note to pmsmtdaf
          MOVE      F6,PMMDNOTE
          MOVE      VSMDDATE,PMMDDATE
          MOVE      VSMDTIME,PMMDTIME
          MOVE      VSMDUSER,PMMDUSER
          MOVE      VSMDOCCG,PMMDOCCG
          MOVE      VSMDDELT,PMMDDELT
          MOVE      VSMDDDAT,PMMDDDAT
          MOVE      VSMDDTIM,PMMDDTIM
          MOVE      VSMDDUSE,PMMDDUSE
          MOVE      VSMDDOCC,PMMDDOCC
          PACK      PMMDSPAR,SP70,SP70
.
          CALL      WRPMMDT1
.
          CALL      VISMTX00                     * get vismtx details
.
          GOTO      PROC0100                     * get next vismdt record
.
PROC9000  DISPLAY   *P1:24,*EL,*B,"Finished processing.  ";
          CALL      HITENTER
.
PROC9999  RETURN
+
.**************************************************************************
.*                               VISMTX00                                 *
.*                                                                        *
.**************************************************************************
VISMTX00  PACK      KEY20,VSMDVISN,VSMDTYPE,VSMDNOTE,SP70
          CALL      RSVSMTX1
VISMTX10  CALL      RKVSMTX1                     * loop through visit text
          BRANCH    OVRCD,VISMTX99
.
          MATCH     VSMDVISN,VSMTVISN            * check visit
          GOTO      VISMTX99 IF NOT EQUAL
.
          MATCH     VSMDTYPE,VSMTTYPE            * check type
          GOTO      VISMTX99 IF NOT EQUAL
.
          MATCH     VSMDNOTE,VSMTNOTE            * check note
          GOTO      VISMTX99 IF NOT EQUAL
.
          MOVE      VSMTUNIQ,F3
VISMTX20  PACK      KEY17,PMMDURNO,PMMDNOTE,F3
          CALL      RAPMMTX1
          BRANCH    OVRCD,VISMTX30
.
          ADD       ONE,F3                       * line number already exists
          GOTO      VISMTX20
.
VISMTX30  MOVE      PMMDURNO,PMMTURNO            * write note line to pmsmtxaf
          MOVE      PMMDNOTE,PMMTNOTE
          MOVE      F3,PMMTUNIQ
          UNPACK    VSMTCMNT,PMMTCMNT,DIM30
          PACK      PMMTSPAR,SP70
.
          CALL      WRPMMTX1
.
          MATCH     DIM30,SP70
          IF        !@EQUAL
            ADD       ONE,F3                     * need another line
            MOVE      PMMDURNO,PMMTURNO          * write note line to pmsmtxaf
            MOVE      PMMDNOTE,PMMTNOTE
            MOVE      F3,PMMTUNIQ
            PACK      PMMTCMNT,DIM30,SP70
            PACK      PMMTSPAR,SP70
            CALL      WRPMMTX1
          ENDIF
          GOTO      VISMTX10                     * get next vismtx record
.
VISMTX99  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       EMRVISIO/INC
          INC       VISMDTIO/INC
          INC       VISMTXIO/INC
          INC       PMSMDTIO/INC
          INC       PMSMTXIO/INC
          INC       STD001IO
