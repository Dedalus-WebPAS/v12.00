.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.04.01  19.04.2005 Peter Vela CAR 59696
.           Recompiled for SINTMPDF
. V9.03.01  10.09.2003 Steve Downing (VF.11.01 CAR 9375)
.           Recompiled for SINREBFD & SINREBIO
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.01.00  18.02.2000 Charles Handaya
.           Add Export Function  srf 637199
.           Change to standard Period Range Keyin
.-------------------------------------------------------
EXPORTFL  FILE      ASCII, FIXED=400     * Export File (Adjust Length to Suit)
EXPORTFN  DIM       8                    * Export File Name
TABDELM   EQU       0x09                 * Tab Delimiter
.
ENDPER    DIM       2
KYPERIOD  DIM       2
STRPER    DIM       2
SVKEY6    DIM       6
.
PRNDES01  INIT      "The Number of Internal Requisition Lines Picked"
PRNDES02  INIT      "The Number of Imprest Lines Picked             "
PRNDES03  INIT      "The Number of Back Ordered Lines Picked        "
PRNDES04  INIT      "The Number of Stock Lines Ordered              "
PRNDES05  INIT      "The Number of Non-Stock Lines Ordered          "
PRNDES06  INIT      "The Number of Stock Lines Received             "
PRNDES07  INIT      "The Number of Non-Stock Lines Received         "
PRNDES08  INIT      "The Number of Purchase Orders Raised           "
PRNDES09  INIT      "The Number of Internal Requisition Input       "
PRNDES10  INIT      "The Number of Stock Lines Returned             "
PRNDES11  INIT      "The Number of Invoices                         "
PRNDES12  INIT      "The Number of Requisition Line Items           "
PRNDES13  INIT      "The Number of Requisition Line Items (Issued=0)"
.
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASUB33
.   Function      :   Departmental Workload Report            
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSBMFFD/INC
          INC       APSIMSFD/INC
          INC       APSINPFD/INC
          INC       SINCONFD/INC
          INC       SINITMFD/INC
          INC       SINLODFD/INC
          INC       SINPERFD/INC
          INC       SINPOAFD/INC
          INC       SINPOCFD/INC
          INC       SINPOFFD/INC
          INC       SINREAFD/INC
          INC       SINREBFD/INC
          INC       SINTMPDF/INC
.=========================
.Local Variable Definition
.-------------------------
GENYEAR   DIM       4 * Scr 00 Fld     4
FROMPER   DIM       6 * Scr 00 Fld     5
TOPER     DIM       6 * Scr 00 Fld     6
GENERTYP  FORM      1 * Scr 00 Fld     7
GENERDES  DIM      40 * Scr 00 Fld     8
EXPORTYN  FORM      1 * Scr 00 Fld     9
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASUB33"
PRGNAM    INIT      "Departmental Workload Report            "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      RDCON000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA4,"apsbmfaf"
          DISPLAY   *P56:24,"Opening sinitmaf";
          OPEN      SINITMA1,"sinitmaf"
          DISPLAY   *P56:24,"Opening sinitmaf";
          OPEN      SINITMA2,"sinitmaf"
          DISPLAY   *P56:24,"Opening sinlodaf";
          OPEN      SINLODA1,"sinlodaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA1,"sinperaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA1,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA2,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA3,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA4,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA1,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA2,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA3,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA4,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA5,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA6,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA7,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA8,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA1,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA2,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA3,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA4,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA1,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA2,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA3,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA4,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA1,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA2,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA3,"sinrebaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Screen                        
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Screen                        
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      SETACCEP
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Screen                        
.-------------------------------------------------------
CF00L000
          MOVE      SP70,GENYEAR 
          MOVE      SP70,FROMPER 
          MOVE      ZERO,GENERTYP
          MOVE      ZERO,EXPORTYN
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Screen                        
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Screen                        
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Screen                        
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Screen                        
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Screen                        
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L101:
                            PS00L102,PS00L103,PS00L104,PS00L105:
                            PS00L106
          GOTO     PS00L999
.
PS00L101
          MOVE      GENYEAR,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      FROMPER,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      TOPER,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      GENERTYP,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      GENERDES,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Screen                        
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L104,SF00L006,SF00L105,SF00L006:
                            SF00L106
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L103:
                            SF00L104,SF00L020,SF00L105,SF00L020:
                            SF00L106
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      PRNA0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L103
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KYEAR000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      GENYEAR,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L104
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOPER   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EPER0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMPER,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOPER,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L105
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,GENERDES
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KGENT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      GENERTYP,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      GENERDES,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L106
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,EXPORTYN
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------------------------------------
. Read controlf file data and open gl files
.----------------------------------------------------------------------
RDCON000  READ      CONTROLF,TWENTY3;*95,HACCNT
          READ      CONTROLF,TWENTY4;*135,HACCDATA
.
          IF        HACCNT<>1
            GOTO      RDCON999
          ENDIF
.
.---- accounting system active ----
.
          MOVE      "apsbmfaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      APSBMFA1,KEY80
.
          MOVE      "apsimsaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      APSIMSA1,KEY80
.
          MOVE      "apsinpaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      APSINPA1,KEY80
          OPEN      APSINPA2,KEY80
.
RDCON999  RETURN
.********************************************************************
. Set accept mode
.********************************************************************
SETACCEP  MOVE      ONE,ACCEPT
          RETURN
.********************************************************************
. PRNA - print report for SILD                      Called by ML
.         Requires : STRPER,ENDPER   (print range )
.                    GENERTYPE       (0=Generate if required, 1=Gen Regardless)
.         Returns  : EXIT            (1=illegal range entered)
.********************************************************************
PRNA0000  CALL      CGEN0000                     * generate data
          BRANCH    EXIT,PRNA9500                * quit ?
.
          MOVE      ZERO,CPAGENO                 * reset page no.
          CLOCK     TIME,CTIMEIS                 * get current time
          MOVE      "599",CLNO                   * init last line number
.
          CALL      FILA0000                     * go to correct posit in file
          CALL      MAKEXP00                     * create export file
.
PRNA1000  CALL      NREA0000                     * get next record
          BRANCH    OVRCD,PRNA8000               * end of file ?
.
          DISPLAY   *P1:24,"Printing : ",*V2LON,SILDDATE,*EF;
.
          CALL      WRIA0000                     * print details
          GOTO      PRNA1000                     * get next record
.
PRNA8000  COMPARE   ZERO,CPAGENO
          CALL      HEAA0000 IF EQUAL            * print head if nothing printed
          CALL      UND80                        * print line
          PRINT     "****   End of Report   ****"
.
          CALL      TRAN0000
.
PRNA9000  MOVE      ZERO,EXIT                    * exit screen
          GOTO      PRNA9999
.
PRNA9500  MOVE      ONE,EXIT                     * continue
.
PRNA9999  RETURN
.**********************************************************************
.  FILA - Set file pointer                             Called By PRNA
.**********************************************************************
FILA0000
          MOVE      ZERO,F2
          MOVE      STRPER,F2
          SUB       ONE,F2
.
FILA9999  RETURN
.**********************************************************************
.  NREA - Get next record                              Called By PRNA
.**********************************************************************
NREA0000
          ADD       ONE,F2                       * get next period
          PACK      KEY6,GENYEAR,F2,SP70
          REP       " 0",KEY6
.
          PACK      DAT6,GENYEAR,ENDPER,SP70
          MATCH     KEY6,DAT6
          GOTO      NREA9500 IF LESS             * out of range ?
.
          PACK      SKEY6,KEY6,SP70              * save surrent period
          CALL      RDSILD1                      * read period data
          BRANCH    OVRCD,NREA0000               * should be there !!
          MATCH     SP70,SILDGEN                 * update generated date if req.
          IF        @EQUAL
            PACK      SILDGEN,CCC,CYY,CMM,CDD,SP70
            REP       " 0",SILDGEN
            CALL      UPSILD1
          ENDIF
.
NREA9000  MOVE      ZERO,OVRCD         * continue
          GOTO      NREA9999
.
NREA9500  MOVE      ONE,OVRCD          * quit
.
NREA9999  RETURN
.**********************************************************************
.  CGEN - Generate Data                                Called By PRNA
.         Returns - EXIT =1 if quit or other periods not generated
.**********************************************************************
.
.---- get desired periods to generate ----
.
CGEN0000  MOVE      ZERO,F2
          MOVE      ZERO,FOUNDX
          READ      CONTROLF,TWENTY3;*124,HORDDES
.
CGEN1000  ADD       ONE,F2                       * loop through each period
          PACK      KEY6,GENYEAR,F2,SP70
          REP       " 0",KEY6
          UNPACK    KEY6,SILDDATE
.
          DISPLAY   *P1:24,"Checking : ",*V2LON,KEY6,*EF;
.
          PACK      DAT6,GENYEAR,ENDPER,SP70
          MATCH     KEY6,DAT6
          GOTO      CGEN1900 IF LESS             * out of range ?
.
          REPEAT
            CALL      RLSILD1                    * lock period record
            IF        OVRCD=1
              PACK      DAT6,GENYEAR,STRPER,SP70
              MATCH     DAT6,KEY6                * check if before from period
              IF        @LESS
                DISPLAY   *P1:24,*B,*EF,"ERROR - Period ":
                          F2," Has NOT Been Generated - ";
                CALL      HITENTER
                GOTO      CGEN9500
              ELSE
                UNPACK    KEY6,SILDDATE            * default data
                MOVE      ZERO,SILDIRP
                MOVE      ZERO,SILDILP
                MOVE      ZERO,SILDBOLP
                MOVE      ZERO,SILDSLO
                MOVE      ZERO,SILDNSLO
                MOVE      ZERO,SILDSLR
                MOVE      ZERO,SILDNSLR
                MOVE      ZERO,SILDIRI
                MOVE      ZERO,SILDSLRT
                MOVE      ZERO,SILDINV
                MOVE      ZERO,SILDRQL
                MOVE      ZERO,SILDZIS
                MOVE      ZERO,SILDTPO
                UNPACK    SP70,SILDGEN,SILDSPA
                CALL      WRSILD1
              ENDIF
            ENDIF
            IF        OVRCD=2
              BEEP
              KEYIN     *P1:24,*EL,"Record For Period ",*DV,F2," Locked - (":
                        *V2LON,"R",*HOFF,")etry or e(":
                        *V2LON,"X",*HOFF,")it ? ",*V2LON,ANS
              PACK      ANS,ANS,SP70
              REP       UPPLOW,ANS
              MATCH     "X",ANS
              GOTO      CGEN9500 IF EQUAL
              MATCH     "E",ANS
              GOTO      CGEN9500 IF EQUAL
            ENDIF
          UNTIL     OVRCD=0
.
          MATCH     SP70,SILDGEN                 * check if to be generated
          IF        @EQUAL | GENERTYP=1
            PACK      DAT6,GENYEAR,STRPER,SP70
            MATCH     DAT6,KEY6                  * check if before from period
            IF        !@LESS
              MOVE      ZERO,SILDIRP             * clear data
              MOVE      ZERO,SILDILP
              MOVE      ZERO,SILDBOLP
              MOVE      ZERO,SILDSLO
              MOVE      ZERO,SILDNSLO
              MOVE      ZERO,SILDSLR
              MOVE      ZERO,SILDNSLR
              MOVE      ZERO,SILDIRI
              MOVE      ZERO,SILDSLRT
              MOVE      ZERO,SILDINV
              MOVE      ZERO,SILDRQL
              MOVE      ZERO,SILDZIS
              MOVE      ZERO,SILDTPO
              UNPACK    SP70,SILDGEN,SILDSPA
              CALL      UPSILD1
              MOVE      ONE,FOUNDX
            ENDIF
          ENDIF
.
          GOTO      CGEN1000
.
.---- process data ----
.
CGEN1900  IF        FOUNDX=1
            CALL      PPOA0000         * process P/O
            CALL      PREQ0000         * process requisitions
            CALL      PITM0000         * process item history
          ENDIF
.
CGEN9000  MOVE      ZERO,EXIT          * continue
          GOTO      CGEN9999
.
CGEN9500  MOVE      ONE,EXIT           * quit
.
CGEN9999  RETURN
.********************************************************************
. PPOA - Process P/O
.********************************************************************
PPOA0000  MOVE      ZERO,COUNT
          PACK      KEY7,SP70
          CALL      RSSIPA1            * loop through purchase orders
.
PPOA0500  CALL      RKSIPA1            * get next record
          BRANCH    OVRCD,PPOA9999
.
          ADD       ONE,COUNT
          IF        COUNT%200=0
            DISPLAY   *P1:24,"Processing SIPA1 : ":
                      *V2LON,SIPAPON,"/",COUNT,*EF;
          ENDIF
.
          PACK      SIPEDATE,SIPADIN,SP70
          CALL      RSIPE000           * get period
.
          PACK      KEY6,SIPEYEAR,SIPEPER,SP70
          CALL      RLSILD1            * check if in a generate period
          BRANCH    OVRCD,PPOA0900,PPOA0900
          MATCH     SP70,SILDGEN
          GOTO      PPOA0900 IF NOT EQUAL
.
          ADD       ONE TO SILDTPO
          CALL      UPSILD1
.
.---- process line items ----
.
PPOA0900  PACK      KEY10,SIPAPON,SP70
          CALL      RSSIPC1            * loop through line items
.
PPOA1000  CALL      RKSIPC1            * get next record
          BRANCH    OVRCD,PPOA5000
          MATCH     SIPAPON,SIPCPON
          GOTO      PPOA5000 IF NOT EQUAL
.
          PACK      KEY6,SIPCDAT,SP70  * check if in a generate period
          CALL      RLSILD1
          BRANCH    OVRCD,PPOA1900,PPOA1900
          MATCH     SP70,SILDGEN
          GOTO      PPOA1900 IF NOT EQUAL
.
          MATCH     "Stock",SIPCCST
          IF        @EQUAL
            ADD       ONE,SILDSLO
          ELSE
            ADD       ONE,SILDNSLO
          ENDIF
          CALL      UPSILD1
.
PPOA1900  PACK      KEY12,SIPCPON,SIPCITM,SP70
          CALL      RSSIPF1            * loop through line item receivals
.
PPOA2000  CALL      RKSIPF1            * get next record
          BRANCH    OVRCD,PPOA2900
          PACK      KEY10,SIPFPON,SIPFITM,SP70
          MATCH     KEY10,KEY12
          GOTO      PPOA2900 IF NOT EQUAL
.
          PACK      KEY6,SIPFUDT,SP70  * check if in a generate period
          CALL      RLSILD1
          BRANCH    OVRCD,PPOA2000,PPOA2000
          MATCH     SP70,SILDGEN
          GOTO      PPOA2000 IF NOT EQUAL
.
          MATCH     "Stock",SIPCCST
          IF        @EQUAL
            ADD       ONE,SILDSLR
          ELSE
            ADD       ONE,SILDNSLR
          ENDIF
          CALL      UPSILD1
          GOTO      PPOA2000
.
PPOA2900  GOTO      PPOA1000
.
.---- process invoices ----
.
PPOA5000  IF        HACCNT<>1
            GOTO      PPOA0500
          ENDIF
          PACK      KEY51,SIPASUP,HORDDES,SIPAPON,SP70
          CALL      RSAPIN2            * loop through order details
.
PPOA5100  CALL      RKAPIN2            * get next record
          BRANCH    OVRCD,PPOA0500
          PACK      KEY13,APINCRD,APINORD,SP70
          MATCH     KEY13,KEY51
          GOTO      PPOA0500 IF NOT EQUAL
          MATCH     "1",APINUPD        * updated ?
          GOTO      PPOA5100 IF NOT EQUAL
.
          PACK      KEY40,APINBCH,APINCRD,APINREF,APINDOC,SP70
          CALL      RDAPIM1            * get header details
          BRANCH    OVRCD,PPOA5100
          MATCH     "1",APIMUPD        * updated ?
          GOTO      PPOA5100 IF NOT EQUAL
          MATCH     "2",APIMTYP        * 0=inv, 1=crd
          GOTO      PPOA5100 IF NOT LESS
.
          PACK      KEY5,APINBCH,SP70
          CALL      RDAPBM1            * get batch details
          BRANCH    OVRCD,PPOA5100
          REP       " 0",APBMUDT
          MATCH     "00000000",APBMUDT * updated ? NO
          GOTO      PPOA5100 IF EQUAL
.
          PACK      SIPEDATE,APBMADT,SP70
          CALL      RSIPE000           * get period
.
          PACK      KEY6,SIPEYEAR,SIPEPER,SP70
          CALL      RLSILD1            * check if in a generate period
          BRANCH    OVRCD,PPOA5100,PPOA5100
          MATCH     SP70,SILDGEN
          GOTO      PPOA5100 IF NOT EQUAL
.
          ADD       ONE TO SILDINV
          CALL      UPSILD1
.
          GOTO      PPOA0500
.
PPOA9999  RETURN
.********************************************************************
. PREQ - Process Requisitions
.********************************************************************
PREQ0000  MOVE      ZERO,COUNT
          PACK      KEY8,SP70
          CALL      RSSIRA1
.
PREQ1000  CALL      RKSIRA1            * get next record
          BRANCH    OVRCD,PREQ5000
          ADD       ONE,COUNT
          IF        COUNT%200=0
            DISPLAY   *P1:24,"Processing SIRA1 : ":
                      *V2LON,SIRATYP,SIRAREQ,"/",COUNT,*EF;
          ENDIF
.
          PACK      SIPEDATE,SIRADAT,SP70
          CALL      RSIPE000           * get period
.
          PACK      KEY6,SIPEYEAR,SIPEPER,SP70
          CALL      RLSILD1            * check if in a generate period
          BRANCH    OVRCD,PREQ1000,PREQ1000
          MATCH     SP70,SILDGEN
          GOTO      PREQ1000 IF NOT EQUAL
.
          ADD       ONE TO SILDIRI
          CALL      UPSILD1
.
.---- process requisition details ----
.
          PACK      KEY20,SIRATYP,SIRAREQ,SP70
          CALL      RSSIRB1
.
PREQ2000  CALL      RKSIRB1            * get next record
          BRANCH    OVRCD,PREQ1000
          PACK      KEY8,SIRBTYP,SIRBREQ,SP70
          MATCH     KEY8,KEY20
          GOTO      PREQ1000 IF NOT EQUAL
.
          ADD       ONE TO SILDRQL
          IF        ZERO=SIRBIQT
            ADD       ONE TO SILDZIS
          ENDIF
          CALL      UPSILD1
          GOTO      PREQ2000
.
.
PREQ5000
.
PREQ9999  RETURN
.********************************************************************
. PITM - process item history
.********************************************************************
PITM0000  MOVE      ZERO,COUNT
          PACK      KEY28,SP70
          CALL      RSSIIT1
.
PITM1000  CALL      RKSIIT1
          BRANCH    OVRCD TO PITM9999
.
          ADD       ONE,COUNT
          IF        COUNT%200=0
            DISPLAY   *P1:24,"Processing SIRA1 : ":
                      *V2LON,SIITWAR,SIITCAT,*EF;
          ENDIF
.
          PACK      SIPEDATE,SIITDAT,SP70
          CALL      RSIPE000           * get period
.
          PACK      KEY6,SIPEYEAR,SIPEPER,SP70
          CALL      RLSILD1            * check if in a generate period
          BRANCH    OVRCD,PITM1000,PITM1000
          MATCH     SP70,SILDGEN
          GOTO      PITM1000 IF NOT EQUAL
.
          IF        5=SIITTYP
            ADD       ONE TO SILDIRP
            CALL      UPSILD1
          ENDIF
.
          IF        6=SIITTYP
            ADD       ONE TO SILDBOLP
            CALL      UPSILD1
          ENDIF
.
          IF        7=SIITTYP
            ADD       ONE TO SILDILP
            CALL      UPSILD1
          ENDIF
.
          IF        8=SIITTYP
            ADD       ONE TO SILDSLRT
            CALL      UPSILD1
          ENDIF
          GOTO      PITM1000
.
PITM9999  RETURN
.********************************************************************
. HEAA - print report                               Called by PRNA
.********************************************************************
HEAA0000  CALL      HEAD80                       * print heading
.
          UNPACK    SILDGEN,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          UNPACK    SKEY6,SIPEYEAR,SIPEPER
.
          PRINT     *20,"Print Departmental Workload Report For ":
                    SIPEPER,SLASH,SIPEYEAR,*N:
                    *20,"Date Last Generated ",CPCDATE
          ADD       "2",CLNO
          CALL      UND80                        * print line
          PRINT     "|                                                 |":
                    "     Period | Year-to-date",*80,"|"
          ADD       "1",CLNO
          CALL      UND80                        * print line
.
HEAA9999  RETURN
.********************************************************************
. WRIA - print data line                            Called by PRNA
.********************************************************************
WRIA0000  COMPARE   "55",CLNO                    * end of page ?
          CALL      HEAA0000 IF NOT LESS         * start new page
.
          CALL      CYTD0000                     * calc YTD
          CALL      WRTEXP00
.
          PRINT     "| ",PRNDES01," | ":
                    SILDIRP," |  ",FORM12A," | ",*N:
                    "| ",PRNDES02," | ":
                    SILDILP," |  ",FORM12B," | ",*N:
                    "| ",PRNDES03," | ":
                    SILDBOLP," |  ",FORM12C," | ",*N:
                    "| ",PRNDES04," | ":
                    SILDSLO," |  ",FORM12D," | ",*N:
                    "| ",PRNDES05," | ":
                    SILDNSLO," |  ",FORM12E," | ",*N:
                    "| ",PRNDES06," | ":
                    SILDSLR," |  ",FORM12F," | ",*N:
                    "| ",PRNDES07," | ":
                    SILDNSLR," |  ",FORM12G," | ",*N:
                    "| ",PRNDES08," | ":
                    SILDTPO," |  ",FORM12H," | ",*N:
                    "| ",PRNDES09," | ":
                    SILDIRI," |  ",FORM12I," | ",*N:
                    "| ",PRNDES10," | ":
                    SILDSLRT," |  ",FORM12J," | ",*N:
                    "| ",PRNDES11," | ":
                    SILDINV," |  ",FORM12K," | ",*N:
                    "| ",PRNDES12," | ":
                    SILDRQL," |  ",FORM12L," | ",*N:
                    "| ",PRNDES13," | ":
                    SILDZIS," |  ",FORM12M," | "
          MOVE      "599",CLNO                   * set to go to next page
.
WRIA9999  RETURN
.**********************************************************************
.  CYTD - Calculate Year to Date                       Called By WRIA
.**********************************************************************
CYTD0000  MOVE      ZERO,FORM12A
          MOVE      ZERO,FORM12B
          MOVE      ZERO,FORM12C
          MOVE      ZERO,FORM12D
          MOVE      ZERO,FORM12E
          MOVE      ZERO,FORM12F
          MOVE      ZERO,FORM12G
          MOVE      ZERO,FORM12H
          MOVE      ZERO,FORM12I
          MOVE      ZERO,FORM12J
          MOVE      ZERO,FORM12K
          MOVE      ZERO,FORM12L
          MOVE      ZERO,FORM12M
.
          PACK      KEY6,SKEY6,SP70
          CALL      RSSILD1
          CALL      RKSILD1
.
CYTD1000  CALL      RPSILD1
          BRANCH    OVRCD,CYTD9000
          MATCH     SILDDATE,SIPEYEAR
          GOTO      CYTD9000 IF NOT EQUAL
.
          ADD       SILDIRP,FORM12A
          ADD       SILDILP,FORM12B
          ADD       SILDBOLP,FORM12C
          ADD       SILDSLO,FORM12D
          ADD       SILDNSLO,FORM12E
          ADD       SILDSLR,FORM12F
          ADD       SILDNSLR,FORM12G
          ADD       SILDTPO,FORM12H
          ADD       SILDIRI,FORM12I
          ADD       SILDSLRT,FORM12J
          ADD       SILDINV,FORM12K
          ADD       SILDRQL,FORM12L
          ADD       SILDZIS,FORM12M
          GOTO      CYTD1000
.
CYTD9000  PACK      KEY6,SKEY6,SP70         * re-read current period
          CALL      RDSILD1
.
CYTD9999  RETURN
.------------------------------------------------------------
. File       : casetran
.
. Functions  : This file contains standard routines for
.              creating and transfering TAB delimited
.              export files to a PC using the unix script
.              keatran.
.
. Routines   : MAKEXP00  - Create the Export File and Headings
.              WRTEXP00  - Write Export details Record to File
.              TRAN0000  - Transfer file to PC using script keatran
.
. Note       : The Variable EXPORTYN is used to determine if a
.              export file is to be created. 0=No, 1=Yes.
.
. Variables to be Declared
. ------------------------
. EXPORTFL  FILE      ASCII, FIXED=400     * Export File (Adjust Length to Suit)
. EXPORTFN  DIM       8                    * Export File Name
. TABDELM   EQU       0x09                 * Tab Delimiter
.------------------------------------------------------------
. Create Export File
.------------------------------------------------------------
MAKEXP00  COMPARE   ONE,EXPORTYN
          GOTO      MAKEXP99 IF NOT EQUAL
          MOVE      "EXPORT",SVKEY6
          PACK      EXPORTFN,SVKEY6,PORT
          REP       " 0",EXPORTFN
          PREP      EXPORTFL,EXPORTFN
.
          WRITE     EXPORTFL,SEQ;"Period",TABDELM:
                                 "Year",TABDELM:
                                 "Description",TABDELM:
                                 "Current Period",TABDELM:
                                 "Year To Date"
          GOTO      MAKEXP99
.
MAKEXP99  RETURN
.------------------------------------------------------------
. Write to Export File
.------------------------------------------------------------
WRTEXP00  COMPARE   ONE,EXPORTYN
          GOTO      WRTEXP99 IF NOT EQUAL
.
          WRITE     EXPORTFL,SEQ;SIPEPER,TABDELM:
                                 SIPEYEAR,TABDELM:
                                 PRNDES01,TABDELM:
                                 SILDIRP,TABDELM:
                                 FORM12A
          WRITE     EXPORTFL,SEQ;SIPEPER,TABDELM:
                                 SIPEYEAR,TABDELM:
                                 PRNDES02,TABDELM:
                                 SILDILP,TABDELM:
                                 FORM12B
          WRITE     EXPORTFL,SEQ;SIPEPER,TABDELM:
                                 SIPEYEAR,TABDELM:
                                 PRNDES03,TABDELM:
                                 SILDBOLP,TABDELM:
                                 FORM12C
          WRITE     EXPORTFL,SEQ;SIPEPER,TABDELM:
                                 SIPEYEAR,TABDELM:
                                 PRNDES04,TABDELM:
                                 SILDSLO,TABDELM:
                                 FORM12D
          WRITE     EXPORTFL,SEQ;SIPEPER,TABDELM:
                                 SIPEYEAR,TABDELM:
                                 PRNDES05,TABDELM:
                                 SILDNSLO,TABDELM:
                                 FORM12E
          WRITE     EXPORTFL,SEQ;SIPEPER,TABDELM:
                                 SIPEYEAR,TABDELM:
                                 PRNDES06,TABDELM:
                                 SILDSLR,TABDELM:
                                 FORM12F
          WRITE     EXPORTFL,SEQ;SIPEPER,TABDELM:
                                 SIPEYEAR,TABDELM:
                                 PRNDES07,TABDELM:
                                 SILDNSLR,TABDELM:
                                 FORM12G
          WRITE     EXPORTFL,SEQ;SIPEPER,TABDELM:
                                 SIPEYEAR,TABDELM:
                                 PRNDES08,TABDELM:
                                 SILDTPO,TABDELM:
                                 FORM12H
          WRITE     EXPORTFL,SEQ;SIPEPER,TABDELM:
                                 SIPEYEAR,TABDELM:
                                 PRNDES09,TABDELM:
                                 SILDIRI,TABDELM:
                                 FORM12I
          WRITE     EXPORTFL,SEQ;SIPEPER,TABDELM:
                                 SIPEYEAR,TABDELM:
                                 PRNDES10,TABDELM:
                                 SILDSLRT,TABDELM:
                                 FORM12J
          WRITE     EXPORTFL,SEQ;SIPEPER,TABDELM:
                                 SIPEYEAR,TABDELM:
                                 PRNDES11,TABDELM:
                                 SILDINV,TABDELM:
                                 FORM12K
          WRITE     EXPORTFL,SEQ;SIPEPER,TABDELM:
                                 SIPEYEAR,TABDELM:
                                 PRNDES12,TABDELM:
                                 SILDRQL,TABDELM:
                                 FORM12L
          WRITE     EXPORTFL,SEQ;SIPEPER,TABDELM:
                                 SIPEYEAR,TABDELM:
                                 PRNDES13,TABDELM:
                                 SILDZIS,TABDELM:
                                 FORM12M
WRTEXP99  RETURN
.------------------------------------------------------------
. Execute Transfer Script eg softerm
.------------------------------------------------------------
TRAN0000  COMPARE   ONE,EXPORTYN
          GOTO      TRAN9999 IF NOT EQUAL
          MOVE      YES,DEFYESNO
          CLOSE     EXPORTFL
          DISPLAY   *P1:24,*EL,"Execute Transfer Now (":
                               *V2LON,"Y",*HOFF,"/":
                               *V2LON,"N",*HOFF,") ? "
          MOVE      "24",CVERT
          MOVE      "30",CCOL
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      TRAN9999 IF EQUAL   *  No Transfer
.
          MOVE      ZERO,HLEF
          CALL      GETSCR00
.
          CLEAR     KEY80
          APPEND    "keatran ",KEY80
          APPEND    EXPORTFN,KEY80
          APPEND    ".txt",KEY80
          RESET     KEY80
          EXECUTE   KEY80,TASKID
.
          CALL      PUTSCR00
.
          DISPLAY   *P1:24,*EL,"Transfer Completed Ok (":
                               *V2LON,"Y",*HOFF,"/":
                               *V2LON,"N",*HOFF,") ? "
          MOVE      "24",CVERT
          MOVE      "31",CCOL
          CALL      YORN0000
          COMPARE   ZERO,FYESNO,
          GOTO      TRAN0000 IF EQUAL   *  Not ok
.
          PREP      EXPORTFL,EXPORTFN
          CLOSE     EXPORTFL
.
TRAN9999  RETURN
.
.---------------------------------------------------------------------------
. KYEAR - keyin year
. Returns : GENYEAR (year)
.---------------------------------------------------------------------------
KYEAR000  CALL      RINPECON           * default to current year
          MOVE      SIPECYR,SIPEYEAR
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,*JR,SIPEYEAR
          PACK      SIPEYEAR,SIPEYEAR,SP70
.
          MATCH     SP70,SIPEYEAR
          GOTO      KYEAR990 IF EQUAL
          PACK      KEY4,SP3,EXITCHAR * exitchar entered ?
          MATCH     KEY4,SIPEYEAR
          GOTO      KYEAR990 IF EQUAL
.
          TYPE      SIPEYEAR           * valid numeric ?
          GOTO      KYEAR000 IF NOT EQUAL
.
          MOVE      SIPEYEAR,SIPEYF4
          IF        SIPEYF4<100
            SQUEEZE   SIPEYEAR
            MOVE      SIPEYEAR,FORM2
            PACK      SIPEYEAR,CCC,FORM2,SP70
          ENDIF
.
          PACK      GENYEAR,SIPEYEAR,SP70
          REP       " 0",GENYEAR
          MOVE      ZERO,EXIT          * year ok
          GOTO      KYEAR999
.
KYEAR990  MOVE      TWO,EXIT           * no year entered
.
KYEAR999  RETURN
.------------------------------------------------------------
. Enter Period Range
.------------------------------------------------------------
EPER0000  MOVE      "    5",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
          CALL      KPERNG00
          BRANCH    EXIT,EPER0100,EPER9500
          MOVE      KYPERIOD,STRPER
          PACK      FROMPER,KYPERIOD,SP70
          GOTO      EPER0150
.
EPER0100  MOVE      "Start ",FROMPER
          MOVE      "01",STRPER
.
EPER0150  MOVE      FROMPER,VAR
          CALL      DISPITEM
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
          CALL      KPERNG00
          BRANCH    EXIT,EPER0200,EPER9500
          MOVE      KYPERIOD,ENDPER
          PACK      TOPER,KYPERIOD,SP70
          MATCH     STRPER,ENDPER
          GOTO      EPER9000 IF EQUAL
          GOTO      EPER9000 IF NOT LESS
          BEEP
          MOVE      "To Period Must Be > From Period - ",DISPMSG
          CALL      MESSAGE1
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          MOVE      SP70,VAR
          CALL      DISPITEM
.
          GOTO      EPER0000
.
EPER0200  MOVE      "Finish",TOPER
          PACK      ENDPER,SIPENUM
.
EPER9000  MOVE      "    5",FLDID
          CALL      GETPOSIT
          MOVE      ZERO,EXIT
          GOTO      EPER9999
.
EPER9500  MOVE      TWO,EXIT
          GOTO      EPER9999
.
EPER9999  RETURN
.------------------------------------------------------------
. Keyin Period
.------------------------------------------------------------
KPERNG00  PACK      KYPERIOD,SP70
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,*JR,KYPERIOD
          PACK      KYPERIOD,KYPERIOD,SP70
          ENDSET    KYPERIOD           * check for EXITCHAR
          MATCH     EXITCHAR,KYPERIOD
          GOTO      KPERNG95 IF EQUAL
          RESET     KYPERIOD
.
          MOVE      ZERO,F2
          MOVE      KYPERIOD,F2
          COMPARE   ZERO,F2            * no period entered ?
          GOTO      KPERNG90 IF EQUAL
.                                      * period greater than total no. of perds
          IF        F2>SIPENUM
            BEEP
            MOVE      "Invalid Period - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KPERNG00
          ENDIF
.
          MOVE      F2,SIPEPER         * check if period exists
          REP       " 0",SIPEPER
          PACK      KEY6,SIPEYEAR,SIPEPER,SP70
          REP       " 0",KEY6
          CALL      RDSIPE1
          IF        OVRCD=1
            BEEP
            MOVE      "Period NOT Created - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KPERNG00
          ENDIF
          MOVE      SIPEPER,KYPERIOD
          MOVE      ZERO,EXIT          * period ok
          GOTO      KPERNG99
.
KPERNG90  MOVE      ONE,EXIT           * no period entered
          GOTO      KPERNG99
.
KPERNG95  MOVE      TWO,EXIT           * EXITCHAR entered
.
KPERNG99  RETURN
.
.---------------------------------------------------------------------------
. KGENT - keyin generate type
.---------------------------------------------------------------------------
KGENT000
          PACK      DISPMSG,SP70,SP70  * save line 24
          CALL      MESSAGE2
.
          DISPLAY   *P1:24:
                    *V2LON,"0",*HOFF,"=Generate Report Only If Required, ":
                    *V2LON,"1",*HOFF,"=Generate Report Regardless";
.
          REPEAT
            KEYIN     *PCCOL:CVERT,*V2LON,GENERTYP
          UNTIL     (GENERTYP=0) | (GENERTYP=1)
.
          IF        GENERTYP=1
            MOVE      "Generate Report Regardless                ",GENERDES
          ELSE
            MOVE      "Generate Report Only If Required          ",GENERDES
          ENDIF
.
          CALL      MESSAGE3           * restore line 24
.
KGENT999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSBMFIO/INC
          INC       APSIMSIO/INC
          INC       APSINPIO/INC
          INC       SINITMIO/INC
          INC       SINLODIO/INC
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINPOAIO/INC
          INC       SINPOCIO/INC
          INC       SINPOFIO/INC
          INC       SINREAIO/INC
          INC       SINREBIO/INC
.
          INC       STDGENCD
.
