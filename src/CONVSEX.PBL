. Program        :  CONVSEX                 
. Description    :  Sex Mapping and Conversion          
.-----------------------------------------------------------------------------
. Date           :  23/06/2023
. Author         :  Thanh T
. Function       :  Mapping of Category G, Gi and Gp codes for Gender
. Modifications  :                                             
.-----------------------------------------------------------------------------
. V11.03.03  27/07/2023  Thanh T    TSK 0931858
.            Changed CVSEX000, IDGEN000 and IDPRO000 to skip input data which
.            are blank  
. V11.03.02  25/07/2023  Thanh T    TSK 0931858
.            Changed VCSEX500 to validate if the to category code is blank
.            for option 3
. V11.03.01  23/06/2023  Thanh T    TSK 0931858
.            Changed CVSEX000 to add a new pmsdauaf row when PSEX is changed
.            for option 3 
. V11.03.00  23/06/2023  Thanh T    TSK 0931858 
.            Initila Version   
.-----------------------------------------------------------------------------
.
          INC       STD001FD
.
          INC       IBACONFD/INC
          INC       PATCODFD/INC            * Codes file
          INC       PATMA1FD/INC         
          INC       PMSPX2FD/INC         
          INC       PMSDAUFD/INC         
.
. Input file 
.
IDGENTXT  FILE       HL7, FIXED=1000      * Populate Ident Gender Mapping File 
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
XIGNFCDE  DIM       3      3        1     Identifying Gender Code - From
XIGNTCDE  DIM       3      3        4     Identifying Gender Code - To 
.
IDPROTXT  FILE       HL7, FIXED=1000      * Populate Ident Pronoun Mapping File
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
XIPRFCDE  DIM       3      3        1     Identifying Pronoun Code - From
XIPRTCDE  DIM       3      3        4     Identifying Pronoun Code - To
.
CVGENTXT  FILE       HL7, FIXED=1000      * Covert Gender Codes Mapping File
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
XCVGFCDE  DIM       3      3        1     Covert Gender Code - From
XCVGTCDE  DIM       3      3        4     Covert Gender Code - To
.
. ----- Program Variables -----
.
CMDLINE   DIM       200
WORKLINE  DIM       200
.
ARCDCNT   FORM      2
ARCDEFR   DIM       3[20] 
ARCDETO   DIM       3[20] 
ARDSCFR   DIM       20[20] 
ARDSCTO   DIM       20[20] 
.
CONVFR    DIM       3
CONVTO    DIM       3
CODEFOND  DIM       1
.
DIM8      DIM       8
DIM40     DIM       40
DINFIEL1  DIM       100
ERRFLAG   FORM      1
ERRORMSG  DIM       80 
ERRORMS1  DIM       74 
FNAMEI    DIM       500
FORM3     FORM      3
.
LINECNTR  FORM      8
DSPLCNTR  FORM      2
NOFERROR  FORM      8
NOFUPDAT  FORM      8
NOFREAD   FORM      8
.
PATHNAME  DIM       150
PRTLINE   DIM       70
SAVE150   DIM       150
SAVE150X  DIM       150
TDESCFR   DIM       20
TDESCTO   DIM       20
.
XFLD0001  DIM       30
XFLD0002  DIM       30
.
COPT1FIL  INIT      "mapcatgi"
COPT2FIL  INIT      "mapcatgp"
COPT3FIL  INIT      "convcatg"
.
CBLANK    INIT      "Blank"
CISBLANK  INIT      "Is Blank"
CINVALID  INIT      "Invalid"
CCODEGT3  INIT      "Invalid Code Length > 3"
CCDECAT1  INIT      "Invavid Category G Code"
CCDECAT2  INIT      "Invavid Category Gi Code"
CCDECAT3  INIT      "Invavid Category Gp Code"
CCDECAT4  INIT      "Invavid Category G Code in PSEX"
CCDECAT5  INIT      "To Category G Code is Blank"
.
HYPHEN    INIT      "-"
CDOTTXT   INIT      ".txt"
.
OPTNAME1  INIT      "Populate Identifying Gender" 
OPTNAME2  INIT      "Populate Identifying Pronoun" 
OPTNAME3  INIT      "Convert Gender codes" 
.
.-----------------------------------------------------------------------------
PRGID     INIT      "CONVSEX"
PRGNAM    INIT      "Sex Mapping and Conversion" 
VERSION   INIT      "V12.00.00"
.******************************************************************************
.                                Main Module     
.******************************************************************************
ML0000    CALL      INIT0000                * Initailize variables & open files
          CALL      KOPT0000                * Keyin Upload or Update option
          BRANCH    EXIT,ML9999
.
          BRANCH    COPTION,ML1000,ML1000,ML1000
          GOTO      ML9999
.
ML1000    CALL      KASC0000                * Keyin file
          BRANCH    EXIT,ML0000
.
ML1100    CALL      VALD0000
          BRANCH    EXIT,ML8000
.
          CALL      DSPPAR00
. 
          CALL      SFLD0000
          BRANCH    EXIT,ML0000
.
          CALL      CTOT0000                * Clear total vars
.
          IF        COPTION=3
            CALL      PRHD3000
          ENDIF
.
          CALL      PROC0000                * with Updating file
.
          CALL      PTOT0000                * Print report totals
.
          GOTO      ML9999
.
ML8000    DISPLAY   *P1:22,*EL,*B,"Mapping file contains at least ":
                                  "one invalid code."
          DISPLAY   *P1:23,*EL,*B,"Please correct the file before running ":
                                  "the program again."
          CALL      HITENTER
          GOTO      ML0000 
.
ML9999    CHAIN     PGM
+
.******************************************************************************
. Initialize Variables & Open Files                      
.******************************************************************************
INIT0000  CALL      DISPHEAD                * Display screen heading
.
          CALL      IBACLOCK
.
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P56:24,"Opening patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          DISPLAY   *P64:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"pmspfx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"pmspdauaf";
          OPEN      PMSDAUA1,"pmsdauaf"
.
          MOVE      ZERO,LINECNTR
.
INIT9999  RETURN
+
.******************************************************************************
. Choose Upload or Update files                 
.******************************************************************************
KOPT0000  MOVE      ZERO,EXIT
          MOVE      ZERO,COPTION
          DISPLAY   *P1:3,*EF:
                    *P1:3,*V2LON,"0",*HOFF," - Exit":
                    *P1:4,*V2LON,"1",*HOFF," - Populate Identifying Gender ":
                          "(Category Gi) in pmspx2af.PMPXUCC4":
                    *P1:5,*V2LON,"2",*HOFF," - Populate Identifying Pronoun ":
                          "(Category Gp) in pmspx2af.PMPXUCC5":
                    *P1:6,*V2LON,"3",*HOFF," - Convert Gender codes ":
                          "(Category G) in patma1af.PSEX";
.
          DISPLAY   *P1:8,"Select Option : ";
.
KOPT1000  KEYIN     *P17:8,*V2LON,COPTION;
          BRANCH    COPTION,KOPT9999,KOPT9999,KOPT9999
.
          COMPARE   ZERO,COPTION
          GOTO      KOPT9000 IF EQUAL
          BEEP
          GOTO      KOPT1000
.
KOPT9000  MOVE      ONE,EXIT
KOPT9999  RETURN
+
.******************************************************************************
. Keyin file                                 
.******************************************************************************
KASC0000  MOVE      ZERO,EXIT
          PACK      FNAMEI WITH SP70,SP70,SP70
.
          IF        COPTION=1
            DISPLAY   *P14:10,*EF,"Full path where ",COPT1FIL,".txt resides";
          ENDIF
          IF        COPTION=2
            DISPLAY   *P14:10,*EF,"Full path where ",COPT2FIL,".txt resides";
          ENDIF
          IF        COPTION=3
            DISPLAY   *P14:10,*EF,"Full path where ",COPT3FIL,".txt resides";
          ENDIF
.
          KEYIN     *P1:9,*EL,"Keyin Path : ",*V2LON,PATHNAME
.
          PACK      PATHNAME,PATHNAME,SP70,SP70,SP70
.
          MATCH     SP70,PATHNAME
          GOTO      KASC9000 IF EQUAL
.
          STRIP     PATHNAME 
          MOVE      PATHNAME,SAVE150
          MOVELPTR  SAVE150,FORM3
          RESET     SAVE150
          MOVE      SAVE150,SAVE150X
.
. Get last character of the PATHNAME to see if it a slash "/", if it is not,
. append a slash "/" at the end
.
          MOVE      ZERO,F3
          WHILE     F3 < FORM3
            BUMP      SAVE150X
            ADD       ONE,F3 
          DO
.
          MATCH     SLASH,SAVE150X
          IF        !@EQUAL
            PACK      PATHNAME,PATHNAME,SLASH   
          ENDIF
.
KASC5000  IF        COPTION=1
            MOVE      COPT1FIL,DIM8
            PACK      FNAMEI,PATHNAME,DIM8,CDOTTXT
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      IDGENTXT,FNAMEI
            TRAPCLR   IO
            BRANCH    OVRCD,KASC8100
          ENDIF
.
          IF        COPTION=2
            MOVE      COPT2FIL,DIM8
            PACK      FNAMEI,PATHNAME,DIM8,CDOTTXT
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      IDPROTXT,FNAMEI
            TRAPCLR   IO
            BRANCH    OVRCD,KASC8200
          ENDIF
.
          IF        COPTION=3
            MOVE      COPT3FIL,DIM8
            PACK      FNAMEI,PATHNAME,DIM8,CDOTTXT
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      CVGENTXT,FNAMEI
            TRAPCLR   IO
            BRANCH    OVRCD,KASC8300
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      KASC9999
.
KASC8100  DISPLAY   *P1:24,*EL,*B,"Mapping file ",COPT1FIL," does not exist. ";
          CALL      HITENTER
          GOTO      KASC0000
.
KASC8200  DISPLAY   *P1:24,*EL,*B,"Mapping file ",COPT2FIL," does not exist. ";
          CALL      HITENTER
          GOTO      KASC0000
.
KASC8300  DISPLAY   *P1:24,*EL,*B,"Mapping file ",COPT3FIL," does not exist. ";
          CALL      HITENTER
          GOTO      KASC0000
.
KASC9000  MOVE      ONE,EXIT
.
KASC9999  RETURN
+
.******************************************************************************
. Select Field
.******************************************************************************
SFLD0000  CALL      MAINQST                 * Select Item, (P)ost, (C)ancel ?
.
SFLD0100  COMPARE   ZERO,CCITEM
          GOTO      SFLD9999 IF EQUAL
          GOTO      SFLD1000 IF LESS
.
          MOVE      ZERO,EXIT
.
          GOTO      SFLD0000
.
SFLD1000  MOVE      ONE,EXIT
SFLD9999  RETURN
.
.******************************************************************************
. Validating input files
.******************************************************************************
VALD0000  MOVE      ZERO,EXIT
.
          BRANCH    COPTION,VALD1000,VALD2000,VALD3000
          GOTO      PROC9999 
.
VALD1000  CALL      VIDGN000          * Validate Populate Identifying Gender
          GOTO      PROC9999
.
VALD2000  CALL      VIDPR000          * Validate Populate Identifying Pronoun
          GOTO      PROC9999
.
VALD3000  CALL      VCSEX000          * Validate Convert Gender Codes
          GOTO      PROC9999
.
VALD9999  RETURN
.
.******************************************************************************
. Process Populate Identifying Gender
.******************************************************************************
VIDGN000  OPEN      IDGENTXT,FNAMEI
          CALL      IDINT000 
.
VIDGN100  READ      IDGENTXT,SEQ;XFLD0001,XFLD0002
          GOTO      VIDGN900 IF OVER
.
          CALL      PFLD0000
.
          MATCH     SP70,XFLD0001
          GOTO      VIDGN200 IF NOT EQUAL
.
          MATCH     SP70,XFLD0002
          GOTO      VIDGN200 IF NOT EQUAL
.
          GOTO      VIDGN100
.
VIDGN200  PACK      TDESCFR,CBLANK,SP70
          PACK      TDESCTO,CBLANK,SP70
.
          MATCH     SP70,XFLD0001
          IF        @EQUAL | @EOS
            GOTO      VIDGN500
          ENDIF
.
          MOVE      XFLD0001,DINFIEL1
          STRIP     DINFIEL1
          MOVELPTR  DINFIEL1,FORM3
          IF        FORM3 > 3
            PACK      ERRORMSG,CCODEGT3,SP1,HYPHEN,SP1,XFLD0001
            CALL      DSERR000
            GOTO      VIDGN900
          ENDIF
.
          MOVE      "G ",KEY2
          UNPACK    XFLD0001,KEY3
          PACK      KEY5,KEY2,KEY3,SP70
          CALL      RDCODE1
          IF        OVRCD=1
            PACK      ERRORMSG,CCDECAT1,SP1,HYPHEN,SP1,XFLD0001
            CALL      DSERR000 
            GOTO      VIDGN900
          ENDIF
.
          MOVE      TDESC,TDESCFR
.
VIDGN500  MATCH     SP70,XFLD0002
          IF        @EQUAL | @EOS
            GOTO      VIDGN800
          ENDIF
.
          MOVE      XFLD0002,DINFIEL1
          STRIP     DINFIEL1
          MOVELPTR  DINFIEL1,FORM3
          IF        FORM3 > 3
            PACK      ERRORMSG,CCODEGT3,SP1,HYPHEN,SP1,XFLD0002
            CALL      DSERR000
            GOTO      VIDGN900
          ENDIF
.
          MOVE      "Gi",KEY2
          UNPACK    XFLD0002,KEY3
          PACK      KEY5,KEY2,KEY3,SP70
          CALL      RDCODE1
          IF        OVRCD=1
            PACK      ERRORMSG,CCDECAT2,SP1,HYPHEN,SP1,XFLD0002
            CALL      DSERR000
            GOTO      VIDGN900
          ENDIF
.
          MOVE      TDESC,TDESCTO
.
VIDGN800  ADD       ONE,ARCDCNT
          MOVE      XFLD0001,ARCDEFR[ARCDCNT]
          MOVE      XFLD0002,ARCDETO[ARCDCNT]
          MOVE      TDESCFR,ARDSCFR[ARCDCNT]
          MOVE      TDESCTO,ARDSCTO[ARCDCNT]
.
          GOTO      VIDGN100
.
VIDGN900  CLOSE     IDGENTXT
VIDGN999  RETURN
.
.******************************************************************************
. Process Populate Identifying Pronoun
.******************************************************************************
VIDPR000  OPEN      IDPROTXT,FNAMEI
          CALL      IDINT000
.
VIDPR100  READ      IDPROTXT,SEQ;XFLD0001,XFLD0002
          GOTO      VIDPR900 IF OVER
.
          CALL      PFLD0000
.
          MATCH     SP70,XFLD0001
          GOTO      VIDPR200 IF NOT EQUAL
.
          MATCH     SP70,XFLD0002
          GOTO      VIDPR200 IF NOT EQUAL
.
          GOTO      VIDPR100
.
VIDPR200  PACK      TDESCFR,CBLANK,SP70
          PACK      TDESCTO,CBLANK,SP70
.
          MATCH     SP70,XFLD0001
          IF        @EQUAL | @EOS
            GOTO      VIDPR500
          ENDIF
.
          MOVE      XFLD0001,DINFIEL1
          STRIP     DINFIEL1
          MOVELPTR  DINFIEL1,FORM3
          IF        FORM3 > 3
            PACK      ERRORMSG,CCODEGT3,SP1,HYPHEN,SP1,XFLD0001
            CALL      DSERR000
            GOTO      VIDPR900
          ENDIF
.
          MOVE      "G ",KEY2
          UNPACK    XFLD0001,KEY3
          PACK      KEY5,KEY2,KEY3,SP70
          CALL      RDCODE1
          IF        OVRCD=1
            PACK      ERRORMSG,CCDECAT1,SP1,HYPHEN,SP1,XFLD0001
            CALL      DSERR000
            GOTO      VIDPR900
          ENDIF
.
          MOVE      TDESC,TDESCFR
.
VIDPR500  MATCH     SP70,XFLD0002
          IF        @EQUAL | @EOS
            GOTO      VIDPR800
          ENDIF
.
          MOVE      XFLD0002,DINFIEL1
          STRIP     DINFIEL1
          MOVELPTR  DINFIEL1,FORM3
          IF        FORM3 > 3
            PACK      ERRORMSG,CCODEGT3,SP1,HYPHEN,SP1,XFLD0002
            CALL      DSERR000
            GOTO      VIDPR900
          ENDIF
.
          MOVE      "Gp",KEY2
          UNPACK    XFLD0002,KEY3
          PACK      KEY5,KEY2,KEY3,SP70
          CALL      RDCODE1
          IF        OVRCD=1
            PACK      ERRORMSG,CCDECAT3,SP1,HYPHEN,SP1,XFLD0002
            CALL      DSERR000
            GOTO      VIDPR900
          ENDIF
.
          MOVE      TDESC,TDESCTO
.
VIDPR800  ADD       ONE,ARCDCNT
          MOVE      XFLD0001,ARCDEFR[ARCDCNT]
          MOVE      XFLD0002,ARCDETO[ARCDCNT]
          MOVE      TDESCFR,ARDSCFR[ARCDCNT]
          MOVE      TDESCTO,ARDSCTO[ARCDCNT]
.
          GOTO      VIDPR100
.
VIDPR900  CLOSE     IDPROTXT
VIDPR999  RETURN
.
.******************************************************************************
.* Process Convert Gender codes 
.******************************************************************************
VCSEX000  OPEN      CVGENTXT,FNAMEI
          CALL      IDINT000
.
VCSEX100  READ      CVGENTXT,SEQ;XFLD0001,XFLD0002
          GOTO      VCSEX900 IF OVER
.
          CALL      PFLD0000
.
          MATCH     SP70,XFLD0001          
          GOTO      VCSEX200 IF NOT EQUAL
.
          MATCH     SP70,XFLD0002
          GOTO      VCSEX200 IF NOT EQUAL
.
          GOTO      VCSEX100
.
VCSEX200  PACK      TDESCFR,CBLANK,SP70
          PACK      TDESCTO,CBLANK,SP70
.
          MATCH     SP70,XFLD0001
          IF        @EQUAL | @EOS
            GOTO      VCSEX500
          ENDIF
.
          MOVE      XFLD0001,DINFIEL1
          STRIP     DINFIEL1
          MOVELPTR  DINFIEL1,FORM3
          IF        FORM3 > 3
            PACK      ERRORMSG,CCODEGT3,SP1,HYPHEN,SP1,XFLD0001
            CALL      DSERR000
            GOTO      VCSEX900
          ENDIF
.
          MOVE      "G ",KEY2
          UNPACK    XFLD0001,KEY3
          PACK      KEY5,KEY2,KEY3,SP70
          CALL      RDCODE1
          IF        OVRCD=1
            PACK      ERRORMSG,CCDECAT1,SP1,HYPHEN,SP1,XFLD0001
            CALL      DSERR000
            GOTO      VCSEX900
          ENDIF
.
          MOVE      TDESC,TDESCFR
.
VCSEX500  MATCH     SP70,XFLD0002
          IF        @EQUAL | @EOS
            PACK      ERRORMSG,CCDECAT5
            CALL      DSERR000
            GOTO      VCSEX900
          ENDIF
.
          MOVE      XFLD0002,DINFIEL1
          STRIP     DINFIEL1
          MOVELPTR  DINFIEL1,FORM3
          IF        FORM3 > 3
            PACK      ERRORMSG,CCODEGT3,SP1,HYPHEN,SP1,XFLD0002
            CALL      DSERR000
            GOTO      VCSEX900
          ENDIF
.
          MOVE      "G ",KEY2
          UNPACK    XFLD0002,KEY3
          PACK      KEY5,KEY2,KEY3,SP70
          CALL      RDCODE1
          IF        OVRCD=1
            PACK      ERRORMSG,CCDECAT1,SP1,HYPHEN,SP1,XFLD0002
            CALL      DSERR000
            GOTO      VCSEX900
          ENDIF
.
          MOVE      TDESC,TDESCTO
.
VCSEX800  ADD       ONE,ARCDCNT
          MOVE      XFLD0001,ARCDEFR[ARCDCNT]
          MOVE      XFLD0002,ARCDETO[ARCDCNT]
          MOVE      TDESCFR,ARDSCFR[ARCDCNT]
          MOVE      TDESCTO,ARDSCTO[ARCDCNT]
.
          GOTO      VCSEX100
.
VCSEX900  CLOSE     CVGENTXT
VCSEX999  RETURN
.
.******************************************************************************
. Initialise working array
.******************************************************************************
IDINT000  MOVE      ZERO,ARCDCNT 
.
          WHILE     F2 < 20
            ADD       ONE,F2
            MOVE      SP70,ARCDEFR[F2]
            MOVE      SP70,ARCDETO[F2]
            MOVE      SP70,ARDSCFR[F2]
            MOVE      SP70,ARDSCTO[F2]
          DO 
.
IDINT999  RETURN
.
.******************************************************************************
. Display error line
.******************************************************************************
DSERR000  MOVE      ONE,EXIT
.
          DISPLAY   *P1:20,*V2LON,*EL,ERRORMSG
.
DSERR999  RETURN
.
.******************************************************************************
. Display the parameters
.******************************************************************************
DSPPAR00  MOVE      ZERO,F2
          MOVE      11,DSPLCNTR
.
          IF        COPTION=1
            DISPLAY   *P1:DSPLCNTR,*V2LON,*EL,"Convert From (Catgegory G)    ":
                                              "To (category Gi)"
          ENDIF
.
          IF        COPTION=2
            DISPLAY   *P1:DSPLCNTR,*V2LON,*EL,"Convert From (Catgegory G)    ":
                                              "To (category Gp)"
          ENDIF
.
          IF        COPTION=3
            DISPLAY   *P1:DSPLCNTR,*V2LON,*EL,"Convert From (Catgegory G)    ":
                                              "To (category G)"
          ENDIF
.
          ADD     ONE,DSPLCNTR
.
          WHILE     F2 < ARCDCNT
            ADD       ONE,F2
            IF        F2 < 12
              PACK      PRTLINE,ARCDEFR[F2],SP1,HYPHEN,SP1,ARDSCFR[F2],SP4:
                                ARCDETO[F2],SP1,HYPHEN,SP1,ARDSCTO[F2]
              DISPLAY   *P1:DSPLCNTR,*V2LON,*EL,PRTLINE
              ADD       ONE,DSPLCNTR
            ENDIF
          DO
.
DSPPAR99  RETURN
.
.******************************************************************************
. Processing conversion                         
.******************************************************************************
PROC0000  BRANCH    COPTION,PROC1000,PROC2000,PROC3000
.
PROC1000  CALL      IDGEN000         * Process Populate Identifying Gender 
          GOTO      PROC9999
.
PROC2000  CALL      IDPRO000         * Process Populate Identifying Pronoun 
          GOTO      PROC9999
.
PROC3000  CALL      CVSEX000         * Process Convert Gender Codes
          GOTO      PROC9999
.
PROC9999  RETURN
.
.******************************************************************************
. Process Populate Identifying Gender
.******************************************************************************
IDGEN000  MOVE      SP70,KEY8
          CALL      RDPMPX21                * Position on & read a master file
IDGEN200  CALL      RKPMPX21
          BRANCH    OVRCD,IDGEN999
.
          ADD       ONE,NOFREAD
.
          MATCH     SP70,PMPXUCC4
          GOTO      IDGEN200 IF NOT EQUAL
.
          MOVE      PMPXURNO,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,IDGEN200
.
          MOVE      PSEX,CONVFR
.
          CALL      GTOCDE00 
          MATCH     "1",CODEFOND
          GOTO      IDGEN200 IF NOT EQUAL
.
          MATCH     CONVTO,PMPXUCC4
          GOTO      IDGEN200 IF EQUAL
.
IDGEN800  MOVE      CONVTO,PMPXUCC4
          CALL      UPPMPX21  
          ADD       ONE,NOFUPDAT
.
          GOTO      IDGEN200 
.
IDGEN999  RETURN
.
.******************************************************************************
. Process Populate Identifying Pronoun
.******************************************************************************
IDPRO000  MOVE      SP70,KEY8
          CALL      RDPMPX21                * Position on & read a master file
IDPRO200  CALL      RKPMPX21
          BRANCH    OVRCD,IDPRO999
.
          ADD       ONE,NOFREAD
.
          MATCH     SP70,PMPXUCC5
          GOTO      IDPRO200 IF NOT EQUAL
.
          MOVE      PMPXURNO,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,IDPRO200
.
          MOVE      PSEX,CONVFR
.
          CALL      GTOCDE00
          MATCH     "1",CODEFOND
          GOTO      IDPRO200 IF NOT EQUAL
.
          MATCH     CONVTO,PMPXUCC5
          GOTO      IDPRO200 IF EQUAL
.
IDPRO800  MOVE      CONVTO,PMPXUCC5
          CALL      UPPMPX21
          ADD       ONE,NOFUPDAT
.
          GOTO      IDPRO200
.
IDPRO999  RETURN
.
.******************************************************************************
. Process Convert Gender Codes
.******************************************************************************
CVSEX000  MOVE      SP70,KEY8
          CALL      RDSMAST1                * Position on & read a master file
CVSEX200  CALL      RDKMAST1
          BRANCH    OVRCD,CVSEX999
.
          ADD       ONE,NOFREAD
.
          MATCH     SP70,PSEX
          IF        @EQUAL
            MOVE      "PSEX field is blank",ERRORMS1 
            CALL      PERR0000            
            GOTO      CVSEX200
          ENDIF  
.
          MOVE      "G ",KEY2
          UNPACK    PSEX,KEY3
          PACK      KEY5,KEY2,KEY3,SP70
          CALL      RDCODE1
          IF        OVRCD=1
            PACK      ERRORMS1,CCDECAT4,SP1,HYPHEN,SP1,PSEX
            CALL      PERR0000
            GOTO      CVSEX200
          ENDIF
.
CVSEX400  MOVE      PSEX,CONVFR
.
          CALL      GTOCDE00
          MATCH     "1",CODEFOND
          GOTO      CVSEX200 IF NOT EQUAL
.
          MATCH     CONVTO,PSEX
          GOTO      CVSEX200 IF EQUAL
.
          CALL      CLPMSDAU 
          MOVE      PURNO,PMDEURNO    
          CLOCK     TIME,CTIMEIS
          CALL      IBACLOCK
          CLOCK     TIME,PMDECTIM 
          PACK      PMDECDAT,CCC,CYY,CMM,CDD  
          REP       " 0",PMDECDAT
          MOVE      "005",PMDERTYP
          MOVE      PSEX,PMDEFL08
          MOVE      "CONVSEX",PMDECUID
.
          CALL      WRPMDAU1
.
          MOVE      CONVTO,PSEX
          CALL      UPMAST1 
.
          ADD       ONE,NOFUPDAT
.
          GOTO      CVSEX200
.
CVSEX999  RETURN
.
.******************************************************************************
. Get conversion to code from conversion array
. Input:
.   CONVFR - Conversion from Code
. Output:
.   CONVTO - Conversion to Code
.   CODEFOND - flag to determine of the conversion from code is found
.******************************************************************************
GTOCDE00  MOVE      ZERO,CODEFOND
          MOVE      SP70,CONVTO 
          MOVE      ZERO,F2
.
          WHILE     F2 < ARCDCNT 
            ADD       ONE,F2
            MATCH     CONVFR,ARCDEFR[F2]
            IF        @EQUAL
              MOVE      ARCDETO[F2],CONVTO
              MOVE      ONE,CODEFOND
              GOTO      GTOCDE99
            ENDIF
          DO
.
GTOCDE99  RETURN
.
.******************************************************************************
. Print error line
.******************************************************************************
PERR0000  ADD       ONE,NOFERROR            * Total error count
          MOVE      ONE,ERRFLAG
.
          ADD       ONE,LINECNTR
          IF        LINECNTR > 55
            CALL      HEAD132
            PRINT     *N,"Option 3 using file: ",COPT3FIL,".txt      ",OPTNAME3
            PRINT     *1,""
            CALL      UND132
            PRINT     *1,"| U/R No.",*12,"| Patient Name":
                      *55,"| Error Description",*132,"|"
            CALL      UND132
            MOVE      9,LINECNTR
          ENDIF
.           
          MOVE      PSNAME,PACSNAME
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,DIM40
.
          PRINT     *1,"|",*3,PURNO,*12,"|",DIM40,*55,"|":
                    *57,ERRORMS1,*132,"|"
.
PERR9999  RETURN
+
.******************************************************************************
. Pack fields with spaces
.******************************************************************************
PFLD0000  PACK      XFLD0001,XFLD0001,SP70
          PACK      XFLD0002,XFLD0002,SP70
.
PFLD9999  RETURN
+
.******************************************************************************
. Clear total vars
.******************************************************************************
CTOT0000  MOVE      ZERO,NOFERROR
          MOVE      ZERO,NOFREAD
          MOVE      ZERO,NOFUPDAT
.
CTOT999   RETURN
+
.******************************************************************************
. Print the selection details
.******************************************************************************
PRHD3000  CALL      HEAD132
.
          PRINT     *N,"Option 3 using file: ",COPT3FIL,".txt      ",OPTNAME3
          PRINT     *1,""
          PRINT     *1,"Convert From (Category G)     ":
                       "To (Catgeory G)"
          PRINT     *1,"---------------------------   ":
                       "---------------------------"
.
          MOVE      8,LINECNTR
          CALL      PRTCAR00
.
          PRINT     *1,""
          CALL      UND132
          PRINT     *1,"| U/R No.",*12,"| Patient Name":
                    *55,"| Error Description",*132,"|"
          CALL      UND132
          ADD       FOUR,LINECNTR
.
PRHD3999  RETURN
.
.******************************************************************************
. Print header for input converted array
.******************************************************************************
PRTCAR00  MOVE      ZERO,F2
.
          WHILE     F2 < ARCDCNT
            ADD       ONE,F2
            PACK      PRTLINE,ARCDEFR[F2],SP1,HYPHEN,SP1,ARDSCFR[F2],SP4:
                              ARCDETO[F2],SP1,HYPHEN,SP1,ARDSCTO[F2]
            PRINT     *1,PRTLINE
            ADD     ONE,LINECNTR
          DO
.
PRTCAR99  RETURN
+
.******************************************************************************
. Print total line
.******************************************************************************
PTOT0000  BRANCH    COPTION,PTOT1000,PTOT2000,PTOT3000
          GOTO      PTOT9999
.
PTOT1000  CALL      HEAD132
          PRINT     *N,"Option 1 using file: ",COPT1FIL,".txt      ",OPTNAME1 
          PRINT     *1,""
          PRINT     *1,"Convert From (Category G)     ":
                       "To (Catgeory Gi)"
          PRINT     *1,"---------------------------   ":
                       "---------------------------"
.
          CALL      PRTCAR00
.
          PRINT     *1,""
          PRINT     *1,"Total records read      : ",NOFREAD
          PRINT     *1,"Total records converted : ",NOFUPDAT
          PRINT     *1,""
          PRINT     *1,"*** End of Report ***"
.
          DISPLAY   *P1:21,*V2LON,*EL," "
          DISPLAY   *P1:22,*V2LON,*EL,"Total records read      : ",NOFREAD
          DISPLAY   *P1:23,*V2LON,*EL,"Total records converted : ",NOFUPDAT
          DISPLAY   *P1:24,*V2LON,*EL;
          CALL      HITENTER
.
          GOTO      PTOT9999
.
PTOT2000  CALL      HEAD132 
          PRINT     *N,"Option 2 using file: ",COPT2FIL,".txt      ",OPTNAME2 
          PRINT     *1,""
          PRINT     *1,"Convert From (Category G)     ":
                       "To (Catgeory Gp)"
          PRINT     *1,"---------------------------   ":
                       "---------------------------"
.
          CALL      PRTCAR00
.
          PRINT     *1,""
          PRINT     *1,"Total records read      : ",NOFREAD
          PRINT     *1,"Total records converted : ",NOFUPDAT
          PRINT     *1,""
          PRINT     *1,"*** End of Report ***"
.
          DISPLAY   *P1:21,*V2LON,*EL," "
          DISPLAY   *P1:22,*V2LON,*EL,"Total records read      : ",NOFREAD
          DISPLAY   *P1:23,*V2LON,*EL,"Total records converted : ",NOFUPDAT
          DISPLAY   *P1:24,*V2LON,*EL;
          CALL      HITENTER
.
          GOTO      PTOT9999
.
PTOT3000  CALL      UND132
          PRINT     *1,""
          PRINT     *1,"Total records read                  : ",NOFREAD
.
          IF        COPTION = 3
            PRINT     *1,"Records with invalid codes detected : ",NOFERROR
          ENDIF
.
          PRINT     *1,"Total records converted             : ",NOFUPDAT
.
          PRINT     *1,""
          PRINT     *1,"*** End of Report ***"
.
          DISPLAY   *P1:20,*V2LON,*EL," "
          DISPLAY   *P1:21,*V2LON,*EL,"Total records read        ":
                                      "          : ",NOFREAD
          DISPLAY   *P1:22,*V2LON,*EL,"Records with invalid codes":
                                      " detected : ",NOFERROR
          DISPLAY   *P1:23,*V2LON,*EL,"Total records converted   ":
                                      "          : ",NOFUPDAT
          DISPLAY   *P1:24,*V2LON,*EL;
          CALL      HITENTER
.
          GOTO      PTOT9999
.
PTOT9999  RETURN
.
          INC       STD001IO
.
          INC       CLPMSDAU         
          INC       PATCODIO/INC
          INC       PATMA1IO/INC         
          INC       PMSPX2IO/INC         
          INC       PMSDAUIO/INC         

