. ********************************************************************** 
. *                                                                    *
. *                        I N C L U D E   S U M M A R Y               *
. *                        -------------   -------------               *
. *                                                                    *
. * INCLUDE NAME   : IBAPRINT                                          *
. *                                                                    *
. * FUNCTION       : Controls the Printing of Reports                  *
. *                                                                    *
. * AUTHOR         : BATMAN and ROBIN (with help from ALFRED)          *
. *                                                                    *
. * Mod's         :                                                    *
. **********************************************************************
. * V10.04.01 11.04.2014  Ebon Clements   CAR 299449                   *
. *           Added SP3 before PRXCODE on printer file reads           *
. * C2.09.B01 06.11.2000  Charles Handaya                              *
. *           Change format of ibaspolf                                *
. **********************************************************************
. * C1.00.07  25.02.1999  B.G.Ackland     SRF 629228/629236            *
. *           Fixed printer selection default                          *
. * C1.00.06  24/11/1998  Jill Habasque                                *
. *           Removed CCENTRY                                          *
. * C1.00.05  04.02.1998    Nick                                       *
. *           Mods to make "P" same as "ENTER" when selecting a printer*
. *           Mods made in ARROW000                                    *
. * C1.00.04  21.05.1997    B.G.Ackland                                *
. *           Added New Print Display Features                         *
. * C1.00.03  26/03/1996    Justin Coates  (SUHT mods)                 *
. *           added the Queue option to select a printer by printer no.*
. * C1.00.02  13/11/1995    Justin Coates  (SUHT mods)                 *
. *           added option to Print at a Later Date after spooling     *
. * C1.00.01  09/02/1994  Graeme Williams  SRF 134920, 134922, 134932  *
. *           Allow "M" and "F" to work when SPOLFLAG is set.          *
. **********************************************************************
. *                                                                    *
. * V6.01.01  01/03/1994  Graeme Williams  SRF 128139                  *
. *           Altered SELPRINT to try to eliminate the U*R error       *
. * V6.01.00  08/02/1994  Greg Horvat      SRF 127532                  *
. *           Defaulted the (D)isplay option to 132 columns            *
. **********************************************************************
. * V6.00.04  21/12/1993  Graeme Williams   SRF 125074                 *
. *           Change OPNPRINT to not open a filename if it is currently*
. *           spooled. Change SELPRINT to remove a filename from the   *
. *           IBASPOL1 file if Cancel is selected. General cleaning up *
. *           of the code. If eXit is chosen in SELPRINT, and nothing  *
. *           has been done, then DON'T delete the spool file if we are*
. *           in IBASPOOL (new parameter IBPRNODL used to check this)  *
. * V6.00.03  22/10/1993 Graeme Williams     SRF 124588                *
. *           Remove Exit option if being run at the start of a program*
. * V6.00.02  21/10/1993 Graeme Williams                               *
. *           Don't clear the number of copies on a CLSPRINT. This is  *
. *           because of the programs that ask for the printer at the  *
. *           start of the program, and will want to print the requeste*
. *           number of copies for all prints done in the program.     *
. *           Number of copies cleared by SELPRINT and in IBASYS99     *
. * V6.00.01  18/08/1993 Gabrielle    SRF 123850                       *
. *           Allow for numbers to be keyed-in as well as arrows       *
. **********************************************************************
. *           21/04/1993 D.Jones   SRF 120997                          *
. *           Fixed deleting of spool files                            *
. *           15/04/1993 D.Jones   SRF 120997                          *
. *           Fixed deleting of spool files after printing thru IBASPOO*
. *           18/09/1992 J.Tan     SRF 116926                          *
. *           Fixed spooling option                                    *
. *           10/06/1992  ROD                                          *
. *           Append user Id (PASSCODE) to spool file                  *
. *           16/03/1992   Justin Coates                               *
. *           Made it so can't select unavailable printer              *
. *           12/03/1992  ROD                                          *
. *           Fixed Keyin position on a message (tough)                *
. *           30/07/1991  Steve O'Gorman                               *
. *           Rewrote to New Standards for Release 6                   *
. *           08/07/1991  ROD                                          *
. *           Added 'Display Spool file'. Lets user display a spool fil*
. *           on the screen.                                           *
. **********************************************************************
.
.$$$$$$
.
.        This include controls the printing of reports.
.
.        It contains four subroutines OPNPRINT, CLSPRINT, SPLEMPTY & SELPRINT
.
.       OPNPRINT: Initialise for the printing. It uses SPLOPEN to put the
.                 report into a unique file name.
.
.       CLSPRINT: Print file. It uses SPLCLOSE to close the file, and then
.                 looks in the codes file to find the command to be EXECUTEd
.                 to print the file on the correct printer. Deletes
.                 the spool file afterwards
.
.       SPLPRINT: Print file. It uses SPLCLOSE to close the file, and then
.                 looks in the codes file to find the command to be EXECUTEd
.                 to print the file on the correct printer. Does not delete
.                 the spool file afterwards
.
.       SPLEMPTY: Check if the current spool file exists, and is not empty
.                 It tries to open the current file, and read the first char.
.                 If this fails, it returns OVRCD=1 for empty file,
.                 OVRCD=2 for no file.
.
.       SELPRINT: Select the printer this spoolfile is to be printed on.
.                 If a printer is selected, then set the printer code to that
.                 printer (for use in CLSPRINT). If spooling is selected, and
.                 there is a current spool file, set CPRTFLG to 3, and clear
.                 the spool file name. If there is no current spool file,
.                 open one first.
.
.      Includes that are assumed to included in the main program are :
.
.         INC         STD001FD             * Common data area
.
.         INC       IBAPRNFD/INC           * Default Printers and Next Spool id
.                                            This FD includes IHAPASS/INC
.                                            IBAPRTFD/INC + IBASPOFD/INC
.
.         INC       IBAPRNIO/INC           * This IO includes IBASPOIO/INC
.                                            IBAIHAIO/INC + IBAPRTIO/INC
.
.      Commonly used variables that cannot be defined in the main program
.      as they are defined in IBAPRNFD :
.                                        DIM1    DIM  1
.                                        DIM2    DIM  2
.                                        DIM19   DIM  19
.                                        KEY3    DIM  3
.                                        KEY4    DIM  4
.                                        KEY39   DIM  39
.
.         If CPRTFLG is not 0, then don't do any spooling
.
.$$$$$$
.
.**********************************************************************
.*                            OPNPRINT                                *
.*                        Web Open a Print File                       *
.*                                                                    *
.* This function will get the next sequence number to use for spool   *
.* file, convert it to a base62 number (to change a 9 character number*
.* to a 5 character Alpha numeric).                                   *
.* It then checks if the file already exists  before returning a      *
.* valid filename to use.                                             *
.**********************************************************************
OPNPRINT  MOVE      ZERO,F2
          OPEN      IBASEQA1,"ibaseqaf"
.
OPNPRN10  COMPARE   TWENTY,F2                * loop 20 times if ibaseqaf is
          GOTO      OPNPRN95 IF NOT LESS     * locked - then error
.
          ADD       ONE,F2
.
          MOVE      "SPOOL",KEY8             * read ibaseqaf for the next
          PACK      KEY8,KEY8,SP70           * SPOOL sequential number
          CALL      RLIBSEQ1
          BRANCH    OVRCD,OPNPRN90,OPNPRN10
.
          ADD       ONE,IBSQNEXT
          CALL      UPIBSEQ1
          CALL      UUIBSEQ1
.
          COMPARE   IBSQMAXM,IBSQNEXT        * check it's not > maximum allowed
          IF        !@LESS
            MOVE      ZERO,IBSQNEXT          * go back to zero if max reached
            CALL      UPIBSEQ1
            CALL      UUIBSEQ1
            GOTO      OPNPRN10
          ENDIF
.
          PACK      B10NUMB,IBSQNEXT,SP70  * Convert to base 62 number
          MOVE      SIXTY2,NEWBASE
          CALL      TOBASE
.
.   ***** create the new spool file name as <hospital id><5 char base62 number>
.
          UNPACK    NEWBNUMB,KEY5,D5
          PACK      SPLFILE,ANSI,ANSB,ANSA,D5,SP70
          REP       " 0",SPLFILE
          PACK      KEY20,SPLFILE,PRT,SP70
.
.   ***** check that this file doesn't exist
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      SPLTEMP,KEY20
          TRAPCLR   IO
.
          IF        OVRCD<>1
            GOTO      OPNPRINT           * file exists, get next spool number
          ENDIF
.
          SPLOPEN   SPLFILE              * open spool file for writing to
          GOTO      OPNPRN99
.
OPNPRN90  MOVE      "SPOOL",IBSQTYPE  * if no record on ibaseqaf for SPOOL
          PACK      KEY8,IBSQTYPE,SP70 * create one with a max of 916132832
          MOVE      ZERO,IBSQNEXT
          MOVE      "916132832",IBSQMAXM
          CALL      RAIBSEQ1
          IF        OVRCD=1
            CALL      WRIBSEQ1
          ENDIF
          GOTO      OPNPRINT
.
OPNPRN95  DISPLAY   *W1,"ibaseqaf spool record locked.";
          CALL      HITENTER
          MOVE      ZERO,F2
          GOTO      OPNPRINT
.
OPNPRN99  RETURN
+
.********************************************************************** 
.*                            CLSPRINT                                *
.*                       Close a Print File                           *
.********************************************************************** 
.
.         Check if file is of non-zero size
.
CLSPRINT  CALL      SPLEMPTY
          BRANCH    OVRCD,CLSPR800,CLSPR900
.
          COMPARE   THREE,CPRTFLG
          GOTO      CLSPR999 IF EQUAL
.
          MATCH     SP3,CNOCOPY           * no number of copies entered
          GOTO      CLSPR050 IF NOT EQUAL * print number of copies
.
          MOVE      ONE,CNOCOPY           * set number of copies to one
.
.          Get print command
.
CLSPR050  REPLACE   " 0",CDEFPRT  * pass 01 to PR not  1
.
          PACK      COMMAND,IBPRPR,CDEFPRT,SP1,SPLFILE,SP1,CNOCOPY:
                                           SP1,PASSCODE,SP30
.
          MOVE      "23",EVERT
          MOVE      "3",ECOL
          GETVAR    DIM2,KEY2,ECOL,EVERT
          MATCH     "eX",DIM2
          IF        @EQUAL
            CALL      CLRBX000                * Clear the Box
            DISPLAY   *P20:23,*V2LON,"Printing being queued. Please wait.";
            EXECUTE   COMMAND,TASKID
            CALL      OPTNS000                * Redisplay the Option Line
          ELSE
            DISPLAY   *P20:24,*EL,*V2LON,"Printing being queued. Please wait";
            EXECUTE   COMMAND,TASKID
          ENDIF
.
          GOTO      CLSPR900
.
.         Quick delete of spool file
.
CLSPR800  MOVE      FILENAME,CSPDESC       * name of file to be deleted
          CALL      SPLDELET
.
CLSPR900  MOVE      SP8,SPLFILE
          GOTO      CLSPR9999
.
CLSPR950  CALL      CLRBX000               * Clear Box Line
.
          RESET     CMESSAGE
          APPEND    "Current Printer ",CMESSAGE
          APPEND    CDEFPRT,CMESSAGE
          APPEND    "Missing. Contact IBA Immediately",CMESSAGE
          RESET     CMESSAGE
.
          STRIP     CMESSAGE
          DISPLAY   *P1:23,*B,*EF,*P1:24,*+,CMESSAGE:
                    " - Hit <",*V2LON,"ENTER",*HOFF,"> to Continue ";
          KEYIN     *EOFF,ANS;
          DISPLAY   *P1:24,*EL;
.
          CHAIN      "ANSWER"
.
CLSPR999  RETURN
.
.********************************************************************** 
.*                            SPLDELET                                *
.*                     Delete the Spool File                          *
.********************************************************************** 
SPLDELET  PACK        CSPDESC,CSPDESC,SP20
          MATCH       SP20,CSPDESC
          IF          !(@EQUAL)
            PREPARE     SPLTFILE,CSPDESC
            CLOSE       SPLTFILE
.
            OPEN        IBASPOL1,"ibaspolf"
            MOVE        SPLFILE,KEY8
            CALL        DESPOL1              * delete from files spooled
          ENDIF
          MOVE        SP8,SPLFILE
          RETURN
.
.********************************************************************** 
.*                            SPLPRINT                                *
.*                      Print the Spool File                          *
.********************************************************************** 
SPLPRINT  COMPARE     ZERO,CPRTFLG
          GOTO        SPLPR999 IF NOT EQUAL
.
.         Check if file is of non-zero size
.
          CALL        SPLEMPTY
          BRANCH      OVRCD,SPLPR800,SPLPR900
.
.          Get print command
.
          REPLACE     " 0",CDEFPRT  * pass 01 to PR not  1
.
          PACK      COMMAND,IBPRSR,CDEFPRT,SP1,SPLFILE,SP1,CNOCOPY:
                                           SP1,PASSCODE,SP30
.
          MOVE        "23",EVERT
          MOVE        "3",ECOL
          GETVAR      DIM2,KEY2,ECOL,EVERT
          MATCH       "eX",DIM2
          IF          @EQUAL
            CALL        CLRBX000                * Clear the Box
            DISPLAY     *P20:23,*V2LON,"Printing being queued. Please wait.";
            EXECUTE     COMMAND,TASKID
            CALL        OPTNS000                * Redisplay the Option Line
          ELSE
            DISPLAY     *P20:24,*EL,*V2LON,"Printing being queued. Please wait";
            EXECUTE     COMMAND,TASKID
          ENDIF
.
          GOTO        SPLPR900
.
SPLPR800  MOVE        FILENAME,CSPDESC
          CALL        SPLDELET
.
SPLPR900  MOVE        SP8,SPLFILE
.
SPLPR999  RETURN
+
.********************************************************************** 
.*                            PRINT000                                *
.*             Print the Spool File (don't clear SPLFILE)             *
.********************************************************************** 
.
PRINT000  COMPARE     TWO,IBPRSPLF          * If Spooled then leave flag
          GOTO        PRINT010 IF EQUAL
.
          OPEN        IBASPOL1,"ibaspolf"
          PACK        KEY8,SPLFILE
          CALL        RDSPOL1
          IF          OVRCD = 0
            MOVE        TWO,IBPRSPLF
          ELSE
            MOVE        ONE,IBPRSPLF          * Set Flag for Printed
          ENDIF
.
PRINT010  
.         COMPARE     ZERO,CPRTFLG
.         GOTO        PRINT999 IF NOT EQUAL
.
.         Check if file is of non-zero size
.
          CALL        SPLEMPTY
          BRANCH      OVRCD,PRINT999,PRINT999
.
.          Get print command
.
          REPLACE     " 0",CDEFPRT  * pass 01 to PR not  1
.
          PACK      COMMAND,IBPRSR,CDEFPRT,SP1,SPLFILE,SP1,CNOCOPY:
                                           SP1,PASSCODE,SP30
.
          MOVE        "23",EVERT
          MOVE        "3",ECOL
          GETVAR      DIM2,KEY2,ECOL,EVERT
          MATCH       "eX",DIM2
          IF          @EQUAL
            CALL        CLRBX000                * Clear the Box
            DISPLAY     *P20:23,*V2LON,"Printing being queued. Please wait.";
            EXECUTE     COMMAND,TASKID
            CALL        OPTNS000                * Redisplay the Option Line
          ELSE
            DISPLAY     *P20:24,*EL,*V2LON,"Printing being queued. Please wait";
            EXECUTE     COMMAND,TASKID
          ENDIF
.
PRINT999  RETURN
.********************************************************************** 
.*                            SPLEMPTY                                *
.*                Determine Status of the Spool File                  *
.*                                                                    *
.*                               OVRCD = 0 means file is not empty    *
.*                                       1 means file is empty        *
.*                                       2 means file does not exist  *
.********************************************************************** 
SPLEMPTY  COMPARE   ZERO,CPRTFLG
          GOTO      SPLEM800 IF NOT EQUAL
.
.         Close the file to make sure there is nothing in the buffers
.
          SPLCLOSE
.
          PACK      FILENAME,SPLFILE,IBPREXTN
.
          MATCH     SP8,SPLFILE
          GOTO      SPLEM950 IF EQUAL
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
.
          OPEN      SPLTFILE,FILENAME
          TRAPCLR   IO
.
          BRANCH    OVRCD,SPLEM950
.
.         File exists : Check if it contains anything
.
          READ      SPLTFILE,ZERO;*1,ANS
          GOTO      SPLEM900 IF OVER
.
SPLEM800  MOVE      ZERO,OVRCD              * File Not Empty
          CLOSE     SPLTFILE
          GOTO      SPLEM999
.
SPLEM900  MOVE      ONE,OVRCD               * File is Empty
          MOVE      FILENAME,CSPDESC        * default name for SPLDELET
          CLOSE     SPLTFILE
          GOTO      SPLEM999
.
SPLEM950  MOVE      TWO,OVRCD               * File Does Not Exist
          GOTO      SPLEM999
.
SPLEM999  RETURN
.
.********************************************************************** 
.*                            SELPRINT                                *
.*                   Select Printer to be Used                        *
.********************************************************************** 
.
SELPRINT  MOVE       ZERO,IBPRSPLF          * Printed or Spooled NO
          CALL       CLEAR000               * Clear all Printer Arrays
.
          COMPARE    ZERO,CPRTFLG           If CPRTFLG is non-zero, return.
          GOTO       SELPR999 IF NOT EQUAL
.
          MOVE       "  1",CNOCOPY          * default number of copies
.
          OPEN       IHAPASS1,"ihapassf"
          OPEN       IBAPRTA1,"ibaprtaf"
          OPEN       IBACODE1,"ibacodef"
          OPEN       CONTROLF,"controlf"
.
.         Read the Default Printer table to find the default printer for
.         the current paper type
.
.         MOVE      "  0",CDEFPRT
.         MOVE      PORT,KEY2
.         CALL      RDPRNT1
.         BRANCH    OVRCD OF SELPR100
.
.         LOAD      CDEFPRT,CPPAPER,CPRT1,CPRT2,CPRT3,CPRT4,CPRT5:
.                                   CPRT6,CPRT7,CPRT8,CPRT9,CPRT10:
.                                   CPRT11,CPRT12,CPRT13,CPRT14,CPRT15:
.                                   CPRT16,CPRT17,CPRT18,CPRT19,CPRT20:
.                                   CPRT21,CPRT22,CPRT23,CPRT24,CPRT25:
.                                   CPRT26,CPRT27,CPRT28,CPRT29,CPRT30
.
.         MATCH     "  0",CDEFPRT
.         GOTO      SELPR150 IF EQUAL
.
.         Default Printer Found
.
.         PACK      KEY6,CDEFPRT
.         CALL      RDPRTA1
.         BRANCH    OVRCD,SELPR100
.         GOTO      SELPR150
.
.         There is no default printer
.
SELPR100  MOVE      "     0",CDEFPRT
.
.         Loop over the Printer Codes file, and display the available printers
.
SELPR150  CALL      PRNTS000                * Display Printer in the System
.
.         Select the printer to be used
.
         MOVE      CDEFPRT,NCURPRT
.
         CALL      ARROW000                * Select Using Arrow Keys
.
.         Check if default printer has been altered
.
.         MATCH     CDEFPRT,NCURPRT
.         GOTO      SELPR900 IF EQUAL
.
.         Post the change in default printer
.
.         MOVE      PORT,KEY2
.         CALL      RDPRNT1
.         BRANCH    OVRCD OF SELPR200
.
.         STORE     NCURPRT WITH CPPAPER OF CPRT1,CPRT2,CPRT3,CPRT4,CPRT5:
.                                   CPRT6,CPRT7,CPRT8,CPRT9,CPRT10,CPRT11:
.                                   CPRT12,CPRT13,CPRT14,CPRT15,CPRT16:
.                                   CPRT17,CPRT18,CPRT19,CPRT20,CPRT21,CPRT22:
.                                   CPRT23,CPRT24,CPRT25,CPRT26,CPRT27,CPRT28:
.                                   CPRT29,CPRT30
.
.         CALL      UPPRNT1
.         GOTO      SELPR300
.
.SELPR200  MOVE      "  0",CPRT1
.          MOVE      "  0",CPRT2
.          MOVE      "  0",CPRT3
.          MOVE      "  0",CPRT4
.          MOVE      "  0",CPRT5
.          MOVE      "  0",CPRT6
.          MOVE      "  0",CPRT7
.          MOVE      "  0",CPRT8
.          MOVE      "  0",CPRT9
.          MOVE      "  0",CPRT10
.          MOVE      "  0",CPRT11
.          MOVE      "  0",CPRT12
.          MOVE      "  0",CPRT13
.          MOVE      "  0",CPRT14
.          MOVE      "  0",CPRT15
.          MOVE      "  0",CPRT16
.          MOVE      "  0",CPRT17
.          MOVE      "  0",CPRT18
.          MOVE      "  0",CPRT19
.          MOVE      "  0",CPRT20
.          MOVE      "  0",CPRT21
.          MOVE      "  0",CPRT22
.          MOVE      "  0",CPRT23
.          MOVE      "  0",CPRT24
.          MOVE      "  0",CPRT25
.          MOVE      "  0",CPRT26
.          MOVE      "  0",CPRT27
.          MOVE      "  0",CPRT28
.          MOVE      "  0",CPRT29
.          MOVE      "  0",CPRT30
.          MOVE      ZERO,CSPOOLID
.
.          STORE     NCURPRT WITH CPPAPER OF CPRT1,CPRT2,CPRT3,CPRT4,CPRT5:
.                                    CPRT6,CPRT7,CPRT8,CPRT9,CPRT10,CPRT11:
.                                    CPRT12,CPRT13,CPRT14,CPRT15,CPRT16:
.                                    CPRT17,CPRT18,CPRT19,CPRT20,CPRT21,CPRT22:
.                                    CPRT23,CPRT24,CPRT25,CPRT26,CPRT27,CPRT28:
.                                    CPRT29,CPRT30
.          CALL      WRPRNT1
.
.         Change Successfully Posted
.
.SELPR300  MOVE      NCURPRT,CDEFPRT
.
.         If we have not selected spooling, then we have finished the selection
.
.SELPR900  CLOSE     IBACODE1
          TYPE      NCURPRT
.
SELPR999  RETURN
.
.         We have selected spooling, so check if there is a currently open
.         spool file
.
.********************************************************************** 
.*                            CLEAR000                                *
.*                 Clear all Printer Array Variables                  *
.********************************************************************** 
.
CLEAR000  MOVE      ONE,CPRTCOL
          MOVE      ONE,CPRTROW
.
          WHILE     CPRTROW<=16
            WHILE     CPRTCOL<=2
              MOVE      SP70,CPRTARAY[CPRTCOL][CPRTROW]
              ADD       ONE,CPRTCOL
            DO
            ADD       ONE,CPRTROW
            MOVE      ONE,CPRTCOL
          DO
.
          RETURN
.
.********************************************************************** 
.*                            PRNTS000                                *
.*              Display Printer Available for a Department            *
.********************************************************************** 
.
PRNTS000  CALL      PRTSC000                * Display Printer Screen
          DISPLAY   *ULON,*V2LON:
                    *P2:4,"No.":
                    *P7:4,"Description          ":
                    *P29:4,"Printer    ";
.
          MOVE      FIVE,CVERT
          MOVE      THREE,CCOL
          MOVE      ONE,CPRTCOL
          MOVE      ONE,CPRTROW
          MOVE      ONE,IBPRRCNT
          MOVE      ONE,CURPRROW            * assume 1st printer is default
          MOVE      ONE,CURPRCOL            * assume 1st printer is default
.
          PACK      KEY5,CDEPCDE,SP5        * Position at start of Department
          CALL      RDSICOD1
PRNTS100  CALL      RDKICOD1
          BRANCH    OVRCD OF PRNTS900
.
          MATCH     CDEPCDE,PRXCATA         * Check if in the same Department
          GOTO      PRNTS900 IF NOT EQUAL
.
          PACK      KEY6,SP3,PRXCODE            * Read the printer file
          CALL      RDPRTA1
          BRANCH    OVRCD,PRNTS100
.
          MOVE      PRTCODE,CPRTARAY[CPRTCOL][CPRTROW]
.
          MATCH     CDEFPRT,QPRTCODE        * Check if Default Printer
          GOTO      PRNTS200 IF NOT EQUAL
.
          MOVE      CPRTROW,CURPRROW
          MOVE      CPRTCOL,CURPRCOL
.
PRNTS200  ADD       ONE,CPRTROW
          DISPLAY   *PCCOL:CVERT,*V2LON,IBPRRCNT:
                    *HOFF,SP2,PRTDESC,SP2,"[",PRTCODE,"]";
.
PRNTS300  COMPARE   ZERO,PRTAVAL            * Check if Available
          GOTO      PRNTS400 IF EQUAL
.
          MOVE      CCOL,ECOL               * Set 'Unav.' display position
          ADD       "32",ECOL
          DISPLAY   *PECOL:CVERT,*V2LON,"(N/A)";
.
PRNTS400  ADD       ONE,CVERT
          ADD       ONE,IBPRRCNT
          COMPARE   TEN7,CPRTROW            * Check for bottom of screen
          GOTO      PRNTS100 IF NOT EQUAL
.
          COMPARE   ONE,CPRTCOL             * Check if 1st column
          GOTO      PRNTS890 IF NOT EQUAL
.
          ADD       "39",CCOL               * Change to 2nd column
          MOVE      FIVE,CVERT
          MOVE      ONE,CPRTROW
          MOVE      TWO,CPRTCOL
.
          DISPLAY   *ULON,*V2LON:
                    *P41:4,"No.":
                    *P46:4,"Description          ":
                    *P68:4,"Printer    ";
.
          GOTO      PRNTS100
.
PRNTS890  DISPLAY   *P64:23,*V2LON,*BLINKON,"M"
.>>>>>>>  DISPLAY   *P56:23,*V2LON,*BLINKON,"M"
PRNTS900  ASSIGN    IBPRRCNT-1,S1BPRRCN
PRNTS999  RETURN
.
.********************************************************************** 
.*                            PRTSC000                                *
.*                   Display the Printer Screen                       *
.********************************************************************** 
PRTSC000  DISPLAY   *P1:3,*EF;
          BOX       16,1,3,80,24
          DISPLAY   *P31:3,*V2LON,*HON,"Printer Selection";
          DISPLAY   *P1:22,*G33,*P80:22,*G34;
          HLINE     *G37,22,2,79
.
          MATCH     SP8,SPLFILE
          GOTO      PRTSC100 IF EQUAL
.
          MOVE      ZERO,SPOLFLAG
          GOTO      PRTSC200
.
PRTSC100  MOVE      ONE,SPOLFLAG
.
PRTSC200  CALL      OPTNS000                * Display Options
          RETURN
.
.********************************************************************** 
.*                            OPTNS000                                *
.*                     Dislay Screen Options                          *
.********************************************************************** 
.
OPTNS000  CALL      CLRBX000                * Clear the Box Line
.
          DISPLAY   *P65:22,*G21,*P65:23,*G39,*P65:24,*G30;
.>>>>>>>  DISPLAY   *P57:22,*G21,*P57:23,*G39,*P57:24,*G30;
.
          MATCH     SP3,CNOCOPY
          GOTO      OPTNS050 IF NOT EQUAL
          MOVE      "  1",CNOCOPY
.
OPTNS050  BRANCH    SPOLFLAG,OPTNS100
.
          DISPLAY   *P3:23,"e",*V2LON,ANSX,*HOFF,"it, ":
                           *V2LON,ANSP,*HOFF,"rint, ":
                           *V2LON,ANSS,*HOFF,"pool, ":
                           *V2LON,ANSD,*HOFF,"isplay, ":
                           *V2LON,ANSC,*HOFF,"ancel, ":
                           *V2LON,ANSN,*HOFF,"o. of Copies";
          GOTO      OPTNS500
.
OPTNS100  DISPLAY   *P3:23,*V2LON,ANSS,*HOFF,"pool, ":
                           *V2LON,ANSN,*HOFF,"o. of Copies";
.
OPTNS500  READ      CONTROLF,ZERO;*46,FORM1      * IBCNAQOP
          IF        FORM1 = ONE
            DISPLAY   ", ",*V2LON,ANSQ,*HOFF,"ueue"
          ENDIF
          DISPLAY   *P66:23," Copies : ",*V2LON,CNOCOPY
.
OPTNS999  RETURN
.
.********************************************************************** 
.*                            ARROW000                                *
.*                  Select Printer Using Arrow Keys                   *
.********************************************************************** 
ARROW000  COMPARE   ZERO,CURPRROW
          GOTO      ARROW050 IF NOT EQUAL
.
          MOVE      ONE,CURPRROW
          MOVE      ONE,CURPRCOL
.
ARROW050  IF        CURPRCOL=1
            MOVE      THREE,CPRTCOL
          ELSE
            MOVE      "42",CPRTCOL
          ENDIF
.
          ASSIGN    CURPRROW+4,CPRTROW
.
          IF        CURPRCOL=1
            MOVE      CURPRROW,IBPRRCNT
            DISPLAY   *PCPRTCOL:CPRTROW,*V2LON,*HON,IBPRRCNT
          ELSE
            ASSIGN    CURPRROW+16,IBPRRCNT
            DISPLAY   *PCPRTCOL:CPRTROW,*V2LON,*HON,IBPRRCNT
          ENDIF
.
          KEYIN     *P1:24,*EOFF,*+,*JR,*NOEDIT,ANS
.
          IF        CURPRCOL=1
            MOVE      CURPRROW,IBPRRCNT
            DISPLAY   *PCPRTCOL:CPRTROW,*V2LON,CURPRROW
          ELSE
            ASSIGN    CURPRROW+16,IBPRRCNT
            DISPLAY   *PCPRTCOL:CPRTROW,*V2LON,IBPRRCNT
          ENDIF
.
          GOTO      ARROW100 IF UP
          GOTO      ARROW200 IF DOWN
          GOTO      ARROW300 IF LEFT
          GOTO      ARROW400 IF RIGHT
          GOTO      ARROW900 IF EOS
.
          REP       UPPLOW,ANS
          RESET     ANS
          PACK      ANS,ANS,SP1
.
          TYPE      ANS                      * Numeric ?
          IF        @EQUAL
            CALL      KNUM0000               * Yes
            IF        EXIT = TRUE
              GOTO      ARROW900             * Number input check if valid    
            ELSE
              GOTO      ARROW000             * Errow re-enter number/arrow
            ENDIF
          ENDIF
.
          BRANCH    SPOLFLAG,ARROW070
.
          REP       "X1P2S3D4C5N6M7F8Q9",ANS
          MOVE      ZERO,FORM1
          MOVE      ANS,FORM1
          BRANCH    FORM1,ARROW950,ARROW500,ARROW600,ARROW700,ARROW800,ARROW850:
                          ARROW650,ARROW660,ARROW690
.                           eXit    Print   Spool    Display  Cancel   No. Copy
.                           More    First   Queue
.
          BEEP                               * No.
          GOTO      ARROW000 
.
ARROW070  REP       "S1N2M3F4Q5",ANS
          MOVE      ZERO,FORM1
          MOVE      ANS,FORM1
          BRANCH    FORM1,ARROW610,ARROW850,ARROW650,ARROW660,ARROW690
.                           Spool  No. Copy   More   First    Queue
.
          BEEP
          GOTO      ARROW000
.
ARROW100  IF        CURPRROW=1
            IF        CURPRCOL=2
              MOVE      "16",CURPRROW
              MOVE      "1",CURPRCOL
            ELSE
              BEEP
            ENDIF
          ELSE
            SUB       ONE,CURPRROW
          ENDIF
.
          GOTO        ARROW000
.
ARROW200  IF        CURPRROW=16
            IF        CURPRCOL=1
              MOVE      "1",CURPRROW
              MOVE      "2",CURPRCOL
              MATCH     CPRTARAY[CURPRCOL][CURPRROW],SP70
              IF        @EQUAL
                MOVE      "16",CURPRROW
                MOVE      "1",CURPRCOL
                BEEP
              ENDIF
            ELSE
              BEEP
            ENDIF
          ELSE
            ADD       ONE,CURPRROW
            MATCH     CPRTARAY[CURPRCOL][CURPRROW],SP70
            IF        @EQUAL
              SUB       ONE,CURPRROW
              BEEP
            ENDIF
          ENDIF
.
          GOTO        ARROW000
.
ARROW300  IF        CURPRCOL=2
            SUB       ONE,CURPRCOL
          ELSE
            BEEP
          ENDIF
.
          GOTO      ARROW000
.
ARROW400  IF        CURPRCOL=1
            ADD       ONE,CURPRCOL
            MATCH     CPRTARAY[CURPRCOL][CURPRROW],SP70
            IF        @EQUAL
              SUB       ONE,CURPRCOL
              BEEP
            ENDIF
          ELSE
            BEEP
          ENDIF
.
          GOTO      ARROW000
.
ARROW500  MOVE      CPRTARAY[CURPRCOL][CURPRROW],CDEFPRT
          CALL      PRINT000                * Print the Spool File
          GOTO      ARROW000
.
ARROW600  CALL      INTSP000                * Spool the File
          MOVE      "3",CPRTFLG
          GOTO      ARROW000
.
ARROW650  COMPARE   "32",S1BPRRCN
          CALL      MORPR000 IF EQUAL       * Display More Printers
          GOTO      ARROW000
.
ARROW660  CALL      PRNTS000                * Display Printers from Start
          GOTO      ARROW000
.
ARROW610  CALL      INTSP000                * Spool the File & Exit
          MOVE      "3",CPRTFLG
          GOTO      ARROW970
.
ARROW690  CALL      IPEQN000                * Enter the queue number
          GOTO      ARROW000
.
ARROW700  CALL      DSPLF000                * Display the File
          GOTO      ARROW000
.
ARROW800  CALL      CANCL000                * Cancel the File
          BRANCH    EXIT,ARROW999           * & Exit
          GOTO      ARROW000                * 'N' to Cancel
.
ARROW850  CALL      COPYS000                * Keyin Number of Copies
          GOTO      ARROW000
.
ARROW900  IF        CPRTFLG=3
            MOVE      CPRTARAY[CURPRCOL][CURPRROW],CDEFPRT
            CALL      PRINT000
            GOTO      ARROW999
          ENDIF
.
          MOVE      CPRTARAY[CURPRCOL][CURPRROW],KEY6      * <RETURN> Hit
          CALL      RDPRTA1
          COMPARE   ZERO,PRTAVAL
          GOTO      ARROW910 IF EQUAL      * printer is available
.
          ASSIGN    CURPRROW+4,CPRTROW
.
          IF        CURPRCOL = 1
            DISPLAY   *P3:CPRTROW,*V2LON,*HON,CURPRROW
          ELSE
            ASSIGN    CURPRROW+16,IBPRRCNT
            DISPLAY   *P42:CPRTROW,*V2LON,*HON,IBPRRCNT
          ENDIF
          DISPLAY   *P3:23,*B,"Printer is Unavailable. Hit <",*V2LON,"ENTER":
                    *HOFF,"> to continue     "
          KEYIN     *EOFF,ANS
          CALL      OPTNS000
          GOTO      ARROW000
.
.         have a valid printer
.
ARROW910  MOVE      CPRTARAY[CURPRCOL][CURPRROW],NCURPRT   * <RETURN> Hit
          MOVE      NCURPRT,CDEFPRT                       
          GOTO      ARROW999
.
ARROW950  BRANCH    IBPRSPLF,ARROW960,ARROW970
          CALL      CLRBX000
          DISPLAY   *P3:23,*B,*V2LON,"WARNING ",*HOFF:
                    ": File Not Spooled/Printed. Ok to Continue":
                    " (",*V2LON,ANSY,*HOFF,"/":
                    *V2LON,ANSN,*HOFF,") ? ";
.
ARROW955  KEYIN     *P62:23,*+,*V2LON,ANS
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS
          IF        @EQUAL
            BRANCH    IBPRNODL,ARROW970      * in IBASPOOL, don't delete file
            GOTO      ARROW960
          ENDIF
.
          MATCH     ANSN,ANS
          IF        @EQUAL
            CALL      OPTNS000
            GOTO      ARROW000
          ENDIF
.
          BEEP
          GOTO      ARROW955
.
ARROW960  MOVE      FILENAME,CSPDESC
          CALL      SPLDELET                * Delete the Spool File
          GOTO      ARROW999
.
ARROW970  MOVE      SP8,SPLFILE
.
ARROW999  RETURN
+
.*****************************************************************************
.* KNUM0000  -  Check if key-in is a number                                  *
.*****************************************************************************
KNUM0000  PACK      DIM2,ANS                * Yes.
          REP       " 0",DIM2
.
          MOVE      DIM2,PRNTNUMB            * Save Printer No.
          ASSIGN    S1BPRRCN/TEN,S2BPRRCN
          COMPARE   PRNTNUMB,S2BPRRCN        * Less than ten items on screen?
          GOTO      KNUM1000 IF LESS         * Yes. No need to enter 2nd char.
.
          KEYIN     *P1:24,*EOFF,*+,*NOEDIT,ANS
          RESET     ANS                     * Enter hit ?
          GOTO      KNUM1000 IF EOS         * Yes. Accept 1 digit
.
          TYPE      ANS                     * No. Numeric ?
          GOTO      KNUM0100 IF NOT EQUAL   * No.
          PACK      DIM2,DIM2,ANS           * Yes
          MOVE      DIM2,PRNTNUMB
          IF        PRNTNUMB > S1BPRRCN
            DISPLAY   *P3:23,*B,"Selection ",PRNTNUMB," is Unavailable. ":
                      "Hit <",*V2LON,"ENTER",*HOFF,"> to continue "
            KEYIN     *EOFF,ANS
            CALL      OPTNS000               * Redisplay option screen
            MOVE      ZERO,CURPRROW
            MOVE      FALSE,EXIT
            GOTO      KNUM9999               * return
          ELSE
            GOTO      KNUM1000 
          ENDIF
.
.         Error - Re-enter from original keyin with arrows
.
KNUM0100  BEEP
          MOVE      FALSE,EXIT
          GOTO      KNUM9999                 * return
          
.
KNUM1000  IF        PRNTNUMB < 1
            GOTO      KNUM0100
          ENDIF
          MOVE      TRUE,EXIT
          IF        PRNTNUMB > 16
            MOVE     TWO,CURPRCOL            * 2nd Column
            ASSIGN    PRNTNUMB-16,CURPRROW
          ELSE
            MOVE     ONE,CURPRCOL            * 1st Column
            MOVE     PRNTNUMB,CURPRROW
          ENDIF
.
KNUM9999  RETURN
.
.*****************************************************************************
.* SPOOLING  -  Create a Spool File                                          *
.*****************************************************************************
.
SPOOLING  MATCH     SP8,SPLFILE             * Check for a Spool File Name
          GOTO      SPOOL050 IF NOT EQUAL
.
          CALL      OPNPRINT
.
SPOOL050  OPEN      IBASPOL1,"ibaspolf"
.
          MOVE      SPLFILE,KEY8
          CALL      RDSPOL1
          BRANCH    OVRCD OF SPOOL100
.
.         Spool file already exists in "Spooled Files", so delete the old
.         data in preparation of writing the current files data.
.
          CALL      DESPOL1
.
.         Get the description of this spool file
.
SPOOL100  CALL      CLRBX000                * Clear the Options Box
.
          MATCH     "IBASYS99",PRGID
          GOTO      SPOOL110 IF NOT EQUAL
.
          DISPLAY   *P3:23,"Generated Spoolfile is ",*V2LON,SPLFILE;
.
          KEYIN     *P35:23,"Description : ":
                    *P47:23,*DV,UNDLN30:
                    *P47:23,*V2LON,CSPDESC;
.
          GOTO      SPOOL120
.
SPOOL110  DISPLAY   *P1:24,"Generated Spoolfile is ",*V2LON,SPLFILE;
.
          KEYIN     *P33:24,"Description : ":
                    *P47:24,*DV,UNDLN30:
                    *P47:24,*V2LON,CSPDESC;
.
SPOOL120  PACK      CSPDESC,CSPDESC,SP30,SP30
.
.         Get the other variables to be written away
.
          PACK      CSPDATE,CCC,CYY,CMM,CDD
          REP       " 0",CSPDATE
.
          CLOCK     TIME,CSPTIME
          MOVE      PASSCODE,CSPOPER
.
          MOVE      SPLFILE,CSPNAME
          MOVE      SPLFILE,KEY8
          MOVE      CPROGLEV,CSPLEVE
          MOVE      CDEPCDE,CSPDEPT
.
          CALL      WRSPOL1
.
          CLOSE     IBASPOL1
.
.         To implement the spooling:
.                   set CPRTFLG to 3 (Spooling inside a program)
.                   clear the spool file name (so SPLEMPTY won't find it)
.
          MOVE      THREE,CPRTFLG
          MOVE      SP8,SPLFILE
.
SPOOL999  RETURN
+
.*****************************************************************************
.* CANCL000  -  Cancel a spool file                                          *
.*****************************************************************************
.
CANCL000  CALL      CLRBX000                * Clear the Option Box
.
          DISPLAY   *P3:23,"Ok to Cancel Spoolfile (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF:
                    ") ? ";
.
CANCL100  KEYIN     *P34:23,*DV,UNDLN1:
                    *P34:23,*V2LON,*+,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          IF        @EQUAL
.
            PACK      CSPDESC,SPLFILE,IBPREXTN,SP30
            CALL      SPLDELET
.
            MOVE      TRUE,EXIT
            GOTO      CANCL999
.
          ENDIF
.
          MATCH     ANSN,ANS
          IF        @EQUAL
.
            CALL      OPTNS000              * Redisplay Option Line
.
            MOVE      FALSE,EXIT
            GOTO      CANCL999
.
          ENDIF
.
          BEEP
          GOTO      CANCL100
.
CANCL999  RETURN
+
.*****************************************************************************
.* COPYS000  -  Keyin No. of Copies                                          *
.*****************************************************************************
.
COPYS000  KEYIN     *P76:23,*DV,UNDLN3:
                    *P76:23,*JR,*DE,*V2LON,CNOCOPY:
                    *P76:23,*DV,CNOCOPY;
.
          RESET     CNOCOPY
          GOTO      COPYS100 IF EOS
.
          TYPE      CNOCOPY
          GOTO      COPYS999 IF EQUAL
.
          BEEP
          GOTO      COPYS000
.
COPYS100  MOVE      "  1",CNOCOPY
          DISPLAY   *P76:23,*V2LON,CNOCOPY
.
COPYS999  RETURN
+
.*****************************************************************************
.* DSPLF000  -  Display a spool file                                         *
.*****************************************************************************
.
DSPLF000  MOVE      ZERO,HLEF
          CALL      GETSCR00                      * save screen
.
          MOVE      "23",EVERT
          MOVE      "3",ECOL
          GETVAR    DIM2,KEY2,ECOL,EVERT
          MATCH     "eX",DIM2
          IF        @EQUAL
            CALL      CLRBX000                * Clear the Box
            DISPLAY   *P3:23,"(",*V2LON,"80",*HOFF,") Characters or (":
                      *V2LON,"132",*HOFF,") Characters ? "
            MOVE      "39",CCOL
            MOVE      "23",CVERT
          ELSE
            DISPLAY   *P1:24,*EL,"(",*V2LON,"80",*HOFF,") Characters or (":
                      *V2LON,"132",*HOFF,") Characters ? "
            MOVE      "37",CCOL
            MOVE      "24",CVERT
          ENDIF
.
DSPLF110  MOVE      "132",CHARS
          KEYIN     *PCCOL:CVERT,*DV,UNDLN3:
                    *PCCOL:CVERT,*V2LON,*RV,CHARS:
                    *PCCOL:CVERT,*V2LON,*DV,CHARS
.
          COMPARE   ZERO,CHARS
          GOTO      DSPLF900 IF EQUAL
.
          COMPARE   "80",CHARS                    * 80 Columns?
          GOTO      DSPLF210 IF EQUAL
.
          COMPARE   "132",CHARS                   * 132 Columns?
          GOTO      DSPLF230 IF EQUAL
.
          BEEP
          GOTO      DSPLF110
.
DSPLF210  DISPLAY   *C80,*ES                      * put in 80 Column mode
          MOVE      "80",CMAXCOL
          GOTO      DSPLF300
.
DSPLF230  DISPLAY   *C132,*ES                     * put in 132 Column mode
          MOVE      "132",CMAXCOL
.
. now set up spool file
.
DSPLF300  DISPLAY   *P1:1,*EF                     * clear screen
.
          MOVE      SP20,SPLSRCH             * Search String
          MOVE      SEQ,SPLSLIN              * Search Line Number
          MOVE      ZERO,SPLLINE             * Line Number
          MOVE      ZERO,SPLLAST             * Line No at Start of Last Page
          MOVE      ZERO,SPLPAGE             * Page
          PACK      CSPDESC,SPLFILE,IBPREXTN
          TRAP      DSPLF950 IF IO
          OPEN      SPLTFILE,CSPDESC
          TRAPCLR   IO
.
.
. now loop through file and display data
.
          MOVE      ONE,MVERT                      * init display counter
          MOVE      ONE,XXCOL                       * init display position
.
DSPLF310  READ      SPLTFILE,CPRTMIN1;CDISPLN1;    * get 80 chars of data
.
          RESET     CDISPLN1
          GOTO      DSPLF400 IF EOS
.
          COMPARE   "23",MVERT                     * is screen full?
          GOTO      DSPLF450 IF LESS
.
. screen is full so ask line 24 question
.
DSPLF320  MOVE      ZERO,CLASTPGE                 * (M)ore flag
.
          CALL      SFUL0000 
          BRANCH    EXIT,DSPLF960:                * Exit
                         DSPLF300:                * Redisplay
                         DSPLF330:                * More
                         DSPLF350:                * nothing input
                         DSPLF360:                * Last Page
                         DSPLF370:                * Goto Page
                         DSPLF380:                * Search
                         DSPLF390                 * Goto Prev Page
.
DSPLF330  MOVE      ONE,MVERT                      * reset display counter
          GOTO      DSPLF450
.
DSPLF350  MOVE      "22",MVERT                     * leave line 23 blank
          DISPLAY   *P1:24,*EL;                   * don't scroll line 24
          GOTO      DSPLF450
.
DSPLF360  CALL      GOLST000                       * Go To Last Page Full
          MOVE      ONE,MVERT                      * reset display counter
          GOTO      DSPLF310
.
DSPLF370  CALL      GOPAG000                       * Go To Page Full
          MOVE      ONE,MVERT                      * reset display counter
          GOTO      DSPLF310
.
DSPLF380  CALL      GOSCH000                       * Search
          MOVE      ONE,MVERT                      * reset display counter
          GOTO      DSPLF310
.
DSPLF390  CALL      GOPRV000                       * Previous Page
          MOVE      ONE,MVERT                      * reset display counter
          GOTO      DSPLF310
.
DSPLF400  READ      SPLTFILE,CPRTMIN1;ANS
          GOTO      DSPLF800 IF OVER
          ADD       ONE,MVERT
          MOVE      ONE,XXCOL
          ADD       ONE,SPLLINE                   * Line Number
          DISPLAY   *V24,*R;                      * scroll up 1 line
          GOTO      DSPLF310
.
. Process a line
.
DSPLF450  SCAN      CNTRLM,CDISPLN1               * Check for a ^M
          GOTO      DSPLF500 IF NOT EQUAL         * ^M not found
.
          CALL      DSPCM000                      * process a ^M 
          GOTO      DSPLF400                      * go to the next line
.
DSPLF500  CALL      DISPL000                      * display a line
          GOTO      DSPLF310
.
DSPLF800  MOVE      ONE,CLASTPGE                  * (M)ore flag
.
          CALL      SFUL0000
          BRANCH    EXIT,DSPLF960:                * Exit
                         DSPLF300:                * Redisplay
                         DSPLF300:                * Redisplay
                         DSPLF300:                * Redisplay
                         DSPLF300:                * Redisplay
                         DSPLF370:                * Goto Page
                         DSPLF370:                * Search
                         DSPLF390                 * Previous Page
          GOTO      DSPLF300
.
DSPLF900  CALL      OPTNS000                      * restore options
          MOVE      "23",EVERT
          MOVE      "3",ECOL
          GETVAR    DIM2,KEY2,ECOL,EVERT
          MATCH     "(8",DIM2
          IF        @EQUAL
            CALL      OPTNS000                      * restore options        
          ENDIF
          MOVE      ONE,EXIT
          GOTO      DSPLF960
.
DSPLF950  NORETURN
          DISPLAY   *P1:24,*EL,*B,"*** Spoolfile is Missing *** ",CSPDESC," - ";
          KEYIN     "Hit <",*V2LON,"ENTER",*HOFF,"> to continue ":
                    *EOFF,ANS,*P1:24,*EL;
          MOVE      FOUR,EXIT
.
DSPLF960  DISPLAY   *C80,*ES                      * return to 80 Column mode
          CALL      PUTSCR00                      * restore screen
.
DSPLF999  RETURN
+
.------------------------------------------------------------
. Go To Last Page in Spool File
.------------------------------------------------------------
GOLST000  DISPLAY   *P1:24,*EL,"Searching .";
          PACK      CSPDESC,SPLFILE,IBPREXTN
          OPEN      SPLTFILE,CSPDESC
          MOVE      ZERO,SPLPAGE
          MOVE      ZERO,SPLLINE
          MOVE      ZERO,SPLLAST
GOLST100  READ      SPLTFILE,CPRTMIN1;ANS
          GOTO      GOLST200 IF OVER
          ADD       ONE,SPLLINE
          CMATCH    CPRTFF,ANS                * check for a ^L (form feed)
          GOTO      GOLST100 IF NOT EQUAL
          ADD       ONE,SPLPAGE
          IF        SPLPAGE%10=0
            DISPLAY   ".";
          ENDIF
          MOVE      SPLLINE,SPLLAST
          GOTO      GOLST100
.
GOLST200  PACK      CSPDESC,SPLFILE,IBPREXTN
          OPEN      SPLTFILE,CSPDESC
          SUB       ONE,SPLPAGE
          SUB       ONE,SPLLAST
          MOVE      ZERO,SPLLINE
GOLST300  READ      SPLTFILE,CPRTMIN1;ANS
          GOTO      GOLST999 IF OVER
          ADD       ONE,SPLLINE
          CMATCH    CPRTFF,ANS                * check for a ^L (form feed)
          IF        @EQUAL
            ADD       ONE,SPLPAGE
            IF        SPLPAGE%10=0
              DISPLAY    ".";
            ENDIF
          ENDIF
          COMPARE   SPLLINE,SPLLAST
          GOTO      GOLST300 IF NOT EQUAL
.
GOLST999  DISPLAY   *P1:24,*EL
          RETURN
.------------------------------------------------------------
. Goto Previous Page
.------------------------------------------------------------
GOPRV000  PACK      CSPDESC,SPLFILE,IBPREXTN
          OPEN      SPLTFILE,CSPDESC
          MOVE      ZERO,SPLPAGE
          MOVE      SPLLINE,SPLLAST
          SUB       "44",SPLLAST
          MOVE      ZERO,SPLLINE
          IF        SPLLAST<1
            GOTO       GOPRV999
          ENDIF
GOPRV100  READ      SPLTFILE,CPRTMIN1;ANS
          GOTO      GOPRV999 IF OVER
          ADD       ONE,SPLLINE
          CMATCH    CPRTFF,ANS                * check for a ^L (form feed)
          IF        @EQUAL
            ADD       ONE,SPLPAGE
            IF        SPLPAGE%10=0
              DISPLAY    ".";
            ENDIF
          ENDIF
          COMPARE   SPLLINE,SPLLAST
          GOTO      GOPRV100 IF NOT EQUAL
.
GOPRV999  DISPLAY   *P1:24,*EL
          RETURN
.------------------------------------------------------------
. Go To Selected Page in Spool File
.------------------------------------------------------------
GOPAG000  KEYIN     *P1:24,*EL,"Page Number : ",*V2LON,SPLFPAG
          DISPLAY   *P1:24,*EL,"Searching .";
          PACK      CSPDESC,SPLFILE,IBPREXTN
          OPEN      SPLTFILE,CSPDESC
          MOVE      ZERO,SPLLINE 
          MOVE      ZERO,SPLLAST
          MOVE      ZERO,SPLPAGE
GOPAG100  READ      SPLTFILE,CPRTMIN1;ANS;
          GOTO      GOPAG290 IF OVER
          CMATCH    CPRTFF,ANS                * check for a ^L (form feed)
          GOTO      GOPAG200 IF EQUAL
          READ      SPLTFILE,CPRTMIN1;ANS
          ADD       ONE,SPLLINE
          GOTO      GOPAG100
.
GOPAG200  ADD       ONE,SPLPAGE
          IF        SPLPAGE%10=0
            DISPLAY   ".";
          ENDIF
          MOVE      SPLLINE,SPLLAST           * Record Line of Last Page
          COMPARE   SPLFPAG,SPLPAGE           * Found Search Page
          GOTO      GOPAG999 IF EQUAL
          READ      SPLTFILE,CPRTMIN1;ANS
          ADD       ONE,SPLLINE
          GOTO      GOPAG100
.
GOPAG290  PACK      CSPDESC,SPLFILE,IBPREXTN  * Goto Last Page
          OPEN      SPLTFILE,CSPDESC
          SUB       ONE,SPLLAST
          MOVE      ZERO,SPLLINE
          MOVE      ZERO,SPLPAGE
GOPAG300  READ      SPLTFILE,CPRTMIN1;ANS
          GOTO      GOPAG999 IF OVER
          ADD       ONE,SPLLINE
          CMATCH    CPRTFF,ANS                * check for a ^L (form feed)
          IF        @EQUAL
            ADD       ONE,SPLPAGE
            IF        SPLPAGE%10=0
              DISPLAY    ".";
            ENDIF
          ENDIF
          COMPARE   SPLLINE,SPLLAST
          GOTO      GOPAG300 IF NOT EQUAL
.
GOPAG999  DISPLAY   *P1:24,*EL
          RETURN
.------------------------------------------------------------
. Search for String in Print File
.------------------------------------------------------------
GOSCH000  KEYIN     *P1:24,*EL,"Search String : ",*V2LON,*RV,SPLSRCH
          DISPLAY   *P1:24,*EL,"Searching .";
.
          STRIP     SPLSRCH
          MOVE      SEQ,SPLSLIN
GOSCH100  READ      SPLTFILE,CPRTMIN1;SPLSRCH1,SPLSRCH2,SPLSRCH3
          GOTO      GOSCH190 IF OVER
          ADD       ONE,SPLLINE
          CMATCH    CPRTFF,SPLSRCH1                * check for a ^L (form feed)
          GOTO      GOSCH110 IF NOT EQUAL
          MOVE      SPLLINE,SPLLAST
          ADD       ONE,SPLPAGE
          IF        SPLPAGE%10=0
            DISPLAY    ".";
          ENDIF
.
GOSCH110  PACK      SPLSRCHS,SPLSRCH1,SPLSRCH2
          SCAN      SPLSRCH,SPLSRCHS      
          GOTO      GOSCH120 IF EQUAL 
          PACK      SPLSRCHS,SPLSRCH2,SPLSRCH3
          SCAN      SPLSRCH,SPLSRCHS      
          GOTO      GOSCH120 IF EQUAL 
          GOTO      GOSCH100
.
GOSCH120  MOVE      SPLLINE,SPLSLIN
          SUB       ONE,SPLSLIN
          MOVE      SPLLINE,SPLLAST
          SUB       TEN,SPLLAST
          GOTO      GOSCH200
.
GOSCH190  BEEP
          KEYIN     *P1:24,*EL,"Search String Not Found. Hit <":
                    *V2LON,"ENTER",*HOFF,"> to continue",ANS
          MOVE      ZERO,SPLLAST
.
GOSCH200  PACK      CSPDESC,SPLFILE,IBPREXTN  * Goto Line
          OPEN      SPLTFILE,CSPDESC
          MOVE      ZERO,SPLLINE
          MOVE      ZERO,SPLPAGE
          COMPARE   ZERO,SPLLAST
          GOTO      GOSCH999 IF EQUAL
          SUB       ONE,SPLLAST
GOSCH300  READ      SPLTFILE,CPRTMIN1;ANS
          GOTO      GOSCH999 IF OVER
          ADD       ONE,SPLLINE
          CMATCH    CPRTFF,ANS                * check for a ^L (form feed)
          IF        @EQUAL
            ADD       ONE,SPLPAGE
            IF        SPLPAGE%10=0
              DISPLAY    ".";
            ENDIF
          ENDIF
          COMPARE   SPLLINE,SPLLAST
          GOTO      GOSCH300 IF NOT EQUAL
.
GOSCH999  DISPLAY   *P1:24,*EL
          RETURN
.
.***************************************************************************
.* DISPL000  -   Display a line of data                                    *
.***************************************************************************
DISPL000  COMPARE   XXCOL,CMAXCOL
          GOTO      DISPL999 IF LESS
.
          CMATCH    CPRTFF,CDISPLN1                * check for a ^L (form feed)
          GOTO      DISPL050 IF NOT EQUAL
          MOVE      SPLLINE,SPLLAST
          ADD       ONE,SPLPAGE
          BUMP      CDISPLN1
          MOVE      CDISPLN1,CDISPLN1             * remove ^L (form feed)
.
DISPL050  MOVELPTR  CDISPLN1,CENDLIN
.
          ADD       XXCOL,CENDLIN
          SUB       ONE,CENDLIN
          COMPARE   CENDLIN,CMAXCOL
          GOTO      DISPL100 IF NOT LESS
.
          SUB       CMAXCOL,CENDLIN
          ENDSET    CDISPLN1
          MULT      "-1",CENDLIN
          BUMP      CDISPLN1,CENDLIN
          LENSET    CDISPLN1
          RESET     CDISPLN1
.
DISPL100  IF        SPLLINE=SPLSLIN
            DISPLAY   *PXXCOL:23,*+,*HON,CDISPLN1;
          ELSE
            DISPLAY   *PXXCOL:23,*+,CDISPLN1;
          ENDIF
.
          MOVELPTR  CDISPLN1,CENDLIN
          ADD       CENDLIN,XXCOL                    * increment column position
.
DISPL999  RETURN
+
.***************************************************************************
.*  DSPCM000  -  Process a ^M                                              *
.***************************************************************************
DSPCM000  CLEAR     CTMPLINE
.
          BUMP      CDISPLN1
          GOTO      DSPCM100 IF EOS
.
          MOVE      CDISPLN1,CTMPLINE              * save rest of line
.
. Display upto ^M
.
          BUMP      CDISPLN1,-1
DSPCM100  MOVEFPTR  CDISPLN1,CENDLIN               * check where ^M is
.
          BRANCH    CENDLIN,DSPCM200               * 1st character ^M ?
.
          BUMP      CDISPLN1,-1
          LENSET    CDISPLN1
          RESET     CDISPLN1
          CALL      DISPL000                      * display a line
.
DSPCM200  MOVE      CTMPLINE,CDISPLN1
          MOVE      ONE,XXCOL
          RESET     CDISPLN1
          GOTO      DSPCM380 IF EOS
.
DSPCM300  CMATCH    SP1,CDISPLN1
          GOTO      DSPCM310 IF EQUAL
.
          CMATCH    CNTRLM,CDISPLN1
          GOTO      DSPCM400 IF NOT EQUAL
.
          MOVE      ZERO,XXCOL
.
DSPCM310  ADD       ONE,XXCOL
          BUMP      CDISPLN1
          GOTO      DSPCM300 IF NOT EOS
.
DSPCM380  READ      SPLTFILE,CPRTMIN1;CDISPLN1;
          GOTO      DSPCM999 IF OVER
.
          RESET     CDISPLN1
          GOTO      DSPCM999 IF EOS
.
          GOTO      DSPCM300
.
. Non blank character found
.
DSPCM400  MOVE      CDISPLN1,CTMPLINE
          MOVE      CTMPLINE,CDISPLN1              * this shifts line to FP 1
.
. check for another ^M
.
DSPCM500  SCAN      CNTRLM,CDISPLN1
          GOTO      DSPCM000 IF EQUAL
.
          CALL      DISPL000
.
          READ      SPLTFILE,CPRTMIN1;CDISPLN1;
          GOTO      DSPCM999 IF OVER
.
          RESET     CDISPLN1
          GOTO      DSPCM999 IF EOS
.
          GOTO      DSPCM500
.
DSPCM999  RETURN
+
.***************************************************************************
.* SFUL0000  -   Screen is full so get user options                        *
.***************************************************************************
SFUL0000  BRANCH    CLASTPGE,SFUL0500
.
. we are NOT on the last page
.
          DISPLAY   *P1:24,*EL,"e",*V2LON,"X",*HOFF,"it, ":
                    *V2LON,"S",*HOFF,"tart, ":
                    *V2LON,"E",*HOFF,"nd, ":
                    *V2LON,"N",*HOFF,"ext, ":
                    *V2LON,"L",*HOFF,"ast, ":
                    *V2LON,"G",*HOFF,"oto Page, ":
                    *V2LON,"F",*HOFF,"ind ? ";
.
          MOVE      "49",MVERT
          GOTO      SFUL1000
.
. we are on the last page
.
SFUL0500  DISPLAY   *P1:24,*EL,"e",*V2LON,"X",*HOFF,"it, ":
                    *V2LON,"S",*HOFF,"tart, ":
                    *V2LON,"L",*HOFF,"ast, ":
                    *V2LON,"G",*HOFF,"oto Page ? ";
.
          MOVE      "32",MVERT
.
SFUL1000  KEYIN     *PMVERT:24,*V2LON,"_":
                    *PMVERT:24,*V2LON,*NOEDIT,*+,ANS;
          GOTO      SFUL6500 IF HOME
          GOTO      SFUL7500 IF END 
          GOTO      SFUL7000 IF PAGEDOWN
          GOTO      SFUL7800 IF PAGEUP   
.
          REP       UPPLOW,ANS
          RESET     ANS
          GOTO      SFUL7200 IF EOS
.
          MOVE      ZERO,FORM1
          REP       "1z2z3z",ANS
          REP       "X1S2N3 3E4G5F6L7",ANS
          MOVE      ANS,FORM1
          BRANCH    FORM1,SFUL5000,SFUL6500,SFUL7000,SFUL7500,SFUL7600:
                          SFUL7700,SFUL7800
.
SFUL2000  BEEP
          GOTO      SFUL1000
.
SFUL5000  MOVE      ONE,EXIT                    * exit
          GOTO      SFUL9999
.
SFUL6500  MOVE      TWO,EXIT                     * Redisplay
          GOTO      SFUL9999
.
SFUL7000  BRANCH    CLASTPGE,SFUL2000             * More wasn't asked
SFUL7100  MOVE      THREE,EXIT
          DISPLAY   *P1:24,*EL;
          GOTO      SFUL9999
SFUL7200  BRANCH    CLASTPGE,SFUL2000
          MOVE      FOUR,EXIT                      * nothing was input
          GOTO      SFUL9999
.
SFUL7500  BRANCH    CLASTPGE,SFUL2000
          MOVE      FIVE,EXIT                      * Last Page
          GOTO      SFUL9999
.
SFUL7600  MOVE      SIX,EXIT                       * Goto Page
          GOTO      SFUL9999
.
SFUL7700  BRANCH    CLASTPGE,SFUL2000
          MOVE      SEVEN,EXIT                     * Search for Page
          GOTO      SFUL9999
.
SFUL7800  MOVE      EIGHT,EXIT                     * Last Page
          GOTO      SFUL9999
.
SFUL9999  RETURN
+
.***************************************************************************
. CLRBX000   -   Clear the Box on Line 23                                  *
.***************************************************************************
.
CLRBX000  DISPLAY   *P2:23,SP30,SP30,SP10,SP8
          DISPLAY   *P65:22,*G37,*P65:23," ",*P65:24,*G38;
.>>>>>>>  DISPLAY   *P57:22,*G37,*P57:23," ",*P57:24,*G38;
          RETURN
+
.*****************************************************************************
.* INTSP000  -  Internal Spooling Routine                                    *
.*****************************************************************************
.
INTSP000  MOVE      TWO,IBPRSPLF            Set flag for Spooled
.
          MATCH     SP8,SPLFILE             * Check for a Spool File Name
          GOTO      INTSP050 IF NOT EQUAL
.
          CALL      OPNPRINT
.
INTSP050  OPEN      IBASPOL1,"ibaspolf"
.
          PACK      CSPDESC,SP30,SP30
          MOVE      SPLFILE,KEY8
          CALL      RDSPOL1
          BRANCH    OVRCD OF INTSP100
.
.         Spool file already exists in "Spooled Files", so delete the old
.         data in preparation of writing the current files data.
.
          CALL      DESPOL1
.
.         Get the description of this spool file
.
INTSP100  CALL      CLRBX000                * Clear the Options Box
.
          DISPLAY   *P3:23,"Generated Spoolfile is ",*V2LON,SPLFILE;
.
          MATCH     SP30,CSPDESC
          IF        @EQUAL
            KEYIN     *P35:23,"Description : ":
                      *P47:23,*DV,UNDLN30:
                      *P47:23,*V2LON,CSPDESC;
          ELSE
            KEYIN     *P35:23,"Description : ":
                      *P47:23,*DV,CSPDESC:
                      *P47:23,*RV,*V2LON,CSPDESC;
          ENDIF
.
INTSP120  PACK      CSPDESC,CSPDESC,SP30,SP30
.
.         Get the other variables to be written away
.
          PACK      CSPDATE,CCC,CYY,CMM,CDD
          REP       " 0",CSPDATE
          CLOCK     TIME,CSPTIME
          MOVE      PASSCODE,CSPOPER
          MOVE      SPLFILE,CSPNAME
          MOVE      SPLFILE,KEY8
          MOVE      CPROGLEV,CSPLEVE
          MOVE      CDEPCDE,CSPDEPT
.
          CALL      WRSPOL1
          CLOSE     IBASPOL1
.
          CALL      PLTR0000                * print at a later date ??
          CALL      OPTNS000
.
INTSP999  RETURN
+
.********************************************************************** 
.*                            MORPR000                                *
.*         Display Any More Printer More Available for a Department   *
.********************************************************************** 
MORPR000  CALL      CLEAR000                * Clear Array
          CALL      PRTSC000                * Display Printer Screen
          DISPLAY   *P63:23,*V2LON,*BLINKON,"F"
.>>>>>>>  DISPLAY   *P55:23,*V2LON,*BLINKON,"F"
          DISPLAY   *ULON,*V2LON:
                    *P2:4,"No.":
                    *P7:4,"Description          ":
                    *P29:4,"Printer    ";
          MOVE      FIVE,CVERT
          MOVE      THREE,CCOL
          MOVE      ONE,CPRTCOL
          MOVE      ONE,CPRTROW
          MOVE      ONE,IBPRRCNT
          MOVE      ONE,CURPRROW            * assume 1st printer is default
          MOVE      ONE,CURPRCOL            * assume 1st printer is default
.
MORPR100  CALL      RDKICOD1
          BRANCH    OVRCD OF MORPR900
.
          MATCH     CDEPCDE,PRXCATA         * Check if in the same Department
          GOTO      MORPR900 IF NOT EQUAL
.
          PACK      KEY6,SP3,PRXCODE            * Read the printer file
          CALL      RDPRTA1
          BRANCH    OVRCD,MORPR100
.
          MOVE      PRTCODE,CPRTARAY[CPRTCOL][CPRTROW]
.
          MATCH     CDEFPRT,QPRTCODE        * Check if Default Printer
          GOTO      MORPR200 IF NOT EQUAL
.
          MOVE      CPRTROW,CURPRROW
          MOVE      CPRTCOL,CURPRCOL
.
MORPR200  ADD       ONE,CPRTROW
          DISPLAY   *PCCOL:CVERT,*V2LON,IBPRRCNT:
                    *HOFF,SP2,PRTDESC,SP2,"[",PRTCODE,"]";
.
MORPR300  COMPARE   ZERO,PRTAVAL            * Check if Available
          GOTO      MORPR400 IF EQUAL
.
          MOVE      CCOL,ECOL               * Set 'Unav.' display position
          ADD       "32",ECOL
          DISPLAY   *PECOL:CVERT,*V2LON,"(N/A)";
.
MORPR400  ADD       ONE,CVERT
          ADD       ONE,IBPRRCNT
          COMPARE   TEN7,CPRTROW            * Check for bottom of screen
          GOTO      MORPR100 IF NOT EQUAL
.
          COMPARE   ONE,CPRTCOL             * Check if 1st column
          GOTO      MORPR890 IF NOT EQUAL
.
          ADD       "39",CCOL               * Change to 2nd column
          MOVE      FIVE,CVERT
          MOVE      ONE,CPRTROW
          MOVE      TWO,CPRTCOL
.
          DISPLAY   *ULON,*V2LON:
                    *P41:4,"No.":
                    *P46:4,"Description          ":
                    *P68:4,"Printer    ";
.
          GOTO      MORPR100
.
MORPR890  DISPLAY   *P64:23,*V2LON,*BLINKON,"M"
.>>>>>>>  DISPLAY   *P56:23,*V2LON,*BLINKON,"M"
MORPR900  ASSIGN    IBPRRCNT-1,S1BPRRCN
MORPR999  RETURN
.
.*********************************************************************
.         ask if the user wants to print at a later date
.*********************************************************************
PLTR0000  OPEN       CONTROLF,"controlf"
          READ       CONTROLF,ZERO;*44,FORM1     * ibcnpltr
          COMPARE    ONE,FORM1
          GOTO       PLTR9999 IF NOT EQUAL  * not using this feature
.
PLTR1000  CALL       CLRBX000
          KEYIN      *P3:23,"Do you want to print at a later date (":
                     *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ",*V2LON,ANS
          REP        UPPLOW,ANS
          MATCH      ANSY,ANS
          GOTO       PLTR2000 IF EQUAL      * Yes
          MATCH      ANSN,ANS
          GOTO       PLTR9999 IF EQUAL      * No 
          BEEP
          GOTO       PLTR1000
.
PLTR2000  CALL       CLRBX000
          DISPLAY    *P3:23,"Time to print : "
          UNPACK     SP4,CHOUR,CMIN
          MOVE       "23",CVERT
          MOVE       "19",CCOL 
          CALL       KEYTIME
          BRANCH     OVRCD,PLTR9999         * exit
.
          PACK       KEY5,CHOUR,COLON,CMIN
          REP        " 0",KEY5
.
          DISPLAY    *P43:23,"Date to print : "
          MOVE       CCC,CCENT
          UNPACK     SP6,CDAY,CMON,CYEAR
          MOVE       "23",CVERT
          MOVE       "59",CCOL 
          CALL       KEYDATE
          BRANCH     OVRCD,PLTR2000         * re-enter time
.         
          PACK       CPDATE,CCENT,CYEAR,CMON,CDAY
          REP        " 0",CPDATE
.
. check that the date/time is not in the past
.
          CALL       IBACLOCK
.
          PACK       KEY8,CCC,CYY,CMM,CDD
          REP        " 0",KEY8
.
          MATCH      KEY8,CPDATE
          GOTO       PLTR9000 IF LESS       * entered date < current date
          GOTO       PLTR3000 IF EQUAL      * entered date = current date
          GOTO       PLTR7000               * entered date > current date
.
. check that time is not in the past
.
PLTR3000  CLOCK      TIME,CTIMEIS           * get the current time
          REP        " 0",CTIMEIS
          PACK       KEY8,KEY5,COLON,SP2    * entered time
          REP        " 0",KEY8
          MATCH      CTIMEIS,KEY8
          GOTO       PLTR9100 IF LESS       * entered time < current time
.
. print the spool file at the specified date/time
.
PLTR7000  UNPACK    CPDATE,CCENT,CYEAR,CMON,CDAY
          UNPACK    KEY5,CHOUR,ANS,CMIN
          MOVE      "SRAT ",KEY5            * shell script to print
          PACK      KEY50,KEY5,CDEFPRT,SP1,SPLFILE,SP1,CNOCOPY,SP1,PASSCODE:
                          SP1,CHOUR,COLON,CMIN,SP1,CDAY,SP1,CMON,SP1,CYEAR:
                          SP1,CCENT,SP30,SP20
          EXECUTE   KEY50,KEY8
          GOTO      PLTR9999
.
PLTR9000  CALL       CLRBX000
          KEYIN      *P3:23,*B,"Date can not be in the past.  Hit <":
                     *V2LON,"ENTER",*HOFF,"> to continue",ANS
          GOTO       PLTR2000
.
PLTR9100  CALL       CLRBX000
          KEYIN      *P3:23,*B,"Time can not be in the past.  Hit <":
                     *V2LON,"ENTER",*HOFF,"> to continue",ANS
          GOTO       PLTR2000
.
PLTR9999  RETURN
+
.*********************************************************************
.         Enter the Queue number to print on
.         Returns : EXIT = 1      nothing entered
.*********************************************************************
IPEQN000  READ      CONTROLF,ZERO;*46,FORM1      * IBCNAQOP
          COMPARE   ONE,FORM1
          GOTO      IPEQN990 IF NOT EQUAL   * option not available
.
          MOVE      "23",EVERT
          MOVE      "3",ECOL
          GETVAR    DIM2,KEY2,ECOL,EVERT
          MATCH     "Sp",DIM2
          GOTO      IPEQN050 IF EQUAL
          MATCH     "eX",DIM2
          GOTO      IPEQN050 IF EQUAL
.
          DISPLAY   *P1:24,*EL,"Enter the Queue number : "
          MOVE      "26",CCOL
          MOVE      "24",CVERT
          GOTO      IPEQN110
.
IPEQN050  CALL      CLRBX000                * Clear the Box
          DISPLAY   *P3:23,"Enter the Queue number : "
          MOVE      "28",CCOL
          MOVE      "23",CVERT
.
IPEQN110  KEYIN     *PCCOL:CVERT,*V2LON,CCITEM:
                    *PCCOL:CVERT,*DV,CCITEM
.
          COMPARE   ZERO,CCITEM
          GOTO      IPEQN900 IF EQUAL       * nothing entered
.
. validate the printer selected
.
          MOVE      CCITEM,KEY6
          CALL      RDPRTA1
          BRANCH    OVRCD,IPEQN910
.
. position in department/printer file
.
          MOVE      CDEPCDE,KEY2
          PACK      KEY5,KEY2,PRTCODE
          CALL      RDICOD1
          BRANCH    OVRCD,IPEQN910
          CALL      RDPICOD1
.        
          MOVE      PRTCODE,CDEFPRT         * set current printer
          CALL      MORPR000                * Display Printers from current
          GOTO      IPEQN999
.
. nothing entered
.
IPEQN900  MATCH     "Sp",DIM2
          IF        @EQUAL
            CALL      OPTNS000                      * restore options        
          ENDIF
          MATCH     "eX",DIM2
          IF        @EQUAL
            CALL      OPTNS000                      * restore options        
          ENDIF
          GOTO      IPEQN999
.
. invalid details
.
IPEQN910  BEEP
          GOTO      IPEQN110
.
IPEQN990  BEEP
IPEQN999  RETURN
+
.******************************************************************************
.*                  Convert from base 10 to base NEWBASE                      *
.*                                                                            *
.* Parameters     : B10NUMB   FORM      ??   Define the size as required      *
.*                  NEWBASE   FORM      2    Initialise to the new base       *
.*                  BASEDGTS  INIT      ??   Initialise to the digits for the *
.*                                           new base, starting from zero.    *
.*                                                                            *
.*                  Example: Converting to base 16                            *
.*                  NEWBASE   FORM      "16"                                  *
.*                  BASEDGTS  INIT      "0123456789ABCDEF"                    *
.*                                                                            *
.* Returns        : NEWBNUMB  DIM       ??   B10NUMB in new base              *
.******************************************************************************
.
TOBASE    PACK      NEWBNUMB,SP30,SP30,SP30,SP30
          MOVELPTR  NEWBNUMB,INDEXT          * position being updated
.
          MOVE      B10NUMB,OLDNUMB
          WHILE     OLDNUMB > 0 & INDEXT > 0
            ASSIGN    (OLDNUMB % NEWBASE)+1,INDEXF
            RESET     BASEDGTS,INDEXF
            RESET     NEWBNUMB,INDEXT
            CMOVE     BASEDGTS,NEWBNUMB
            ASSIGN    (OLDNUMB / NEWBASE),OLDNUMB
            SUB       ONE,INDEXT
          DO
          RESET     NEWBNUMB
          RESET     BASEDGTS
.
          RETURN
+

.
