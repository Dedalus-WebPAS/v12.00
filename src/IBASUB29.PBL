.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.04.01  08.04.2005 Peter Vela CAR 59696
.           Changed commodity group from DIM 5 to DIM 6
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B01 27.11.2000 Charles Handaya
.           Modification of Warehouse Security
.-------------------------------------------------------
. VF.00.02  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
.           29.12.1999 Charles Handaya
.           Recompiled for Fixing Audit Date (CCYYMMDD)
. VF.00.01  02.09.1999 Sandra Barcham
.           Add in Creditor Keyword Search
.           srf 631485
.-------------------------------------------------------
CHECKCST  DIM       5
CHECKSUP  DIM       5
DAT6      DIM       6
ENDCRD    DIM       5
ENDCOST   DIM       5
F14P4     FORM      14.4
FIRSTHRU  FORM      1
FORMATPR  DIM       23
FORMATYR  DIM       25
GTOTPER   FORM      14.2
GTOTYTD   FORM      14.2
NONDESC   INIT      " - Non-Stock Catalogs Only"
ORDCOUNT  FORM      8
PRINTCST  DIM       5
PRINTSUP  DIM       5
REPTDESC  DIM       27
REPTSTKF  FORM      1
STKDESC   INIT      " - Stock Catalogs Only"
STRCRD    DIM       5
STRCOST   DIM       5
TCSTPER   FORM      14.2
TCSTYTD   FORM      14.2
TSUPPER   FORM      14.2
TSUPYTD   FORM      14.2
.
EXPORTFL  FILE      ASCII, FIXED=400
TABDELM   EQU       0x09
.
TEMPFILE  IFILE     SQL, FIXED=36, KEY="U1-5,6-10,11-16"               *C-59696
.
TEMPSUPP  DIM       5        5       1
TEMPCOST  DIM       5        5       6
TEMPCOMM  DIM       6        6       11                                *C-59696
TEMPPERV  FORM      14.2     9       17                                *C-59696
TEMPYTDV  FORM      16.2     10      26                                *C-59696
.
.                                    36
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASUB29
.   Function      :   Supplier P/O Received by Cost Centre    
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSMASFD/INC
          INC       APSMXRFD/INC
          INC       SINCCAFD/INC
          INC       SINCGAFD/INC
          INC       SINCIAFD/INC
          INC       SINCONFD/INC
          INC       SINFACFD/INC
          INC       SINNATFD/INC
          INC       SINPERFD/INC
          INC       SINPOAFD/INC
          INC       SINPOCFD/INC
          INC       SINPOFFD/INC
          INC       SINSUAFD/INC
          INC       SINWARFD/INC
          INC       SINWSEFD/INC
.=========================
.Local Variable Definition
.-------------------------
FROMCOST  DIM      45 * Scr 00 Fld     4
TOCOST    DIM      45 * Scr 00 Fld     5
EXPORTYN  FORM      1 * Scr 00 Fld     8
USYEAR    DIM       4 * Scr 00 Fld    10
USPERD    DIM       2 * Scr 00 Fld    11
REPTSTCK  DIM       1 * Scr 00 Fld    14
FROMSUPP  DIM      40 * Scr 00 Fld    15
TOSUPP    DIM      40 * Scr 00 Fld    16
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASUB29"
PRGNAM    INIT      "Supplier P/O Received by Cost Centre    "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 48",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening apsaudma";
            OPEN      APSAUDMA,"apsaudma"
          ENDIF
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA2,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA3,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA1,"apsmxraf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA2,"apsmxraf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA1,"sinccaaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA2,"sinccaaf"
          DISPLAY   *P56:24,"Opening sincgaaf";
          OPEN      SINCGAA1,"sincgaaf"
          DISPLAY   *P56:24,"Opening sincgaaf";
          OPEN      SINCGAA2,"sincgaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA1,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA2,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA3,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinfacaf";
          OPEN      SINFACA1,"sinfacaf"
          DISPLAY   *P56:24,"Opening sinfacaf";
          OPEN      SINFACA2,"sinfacaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA1,"sinperaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA1,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA2,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA3,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA4,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA1,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA2,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA3,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA4,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA5,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA6,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA7,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA1,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA2,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA3,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA1,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA2,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA3,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA1,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA2,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA1,"sinwseaf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA2,"sinwseaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Program Options                    
          ENDIF
          RETURN
.--------------------------------
. Screen - Program Options                    
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      SETSCR00
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Program Options                    
.-------------------------------------------------------
CF00L000  COMPARE   ZERO,ACCEPT
              GOTO      CF00L999 IF EQUAL
          MOVE      SP70,FROMCOST
          MOVE      SP70,TOCOST  
          MOVE      ZERO,EXPORTYN
          MOVE      SP70,USYEAR  
          MOVE      SP70,USPERD  
          MOVE      SP70,REPTSTCK
          MOVE      SP70,FROMSUPP
          MOVE      SP70,TOSUPP  
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Program Options                    
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Program Options                    
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Program Options                    
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Program Options                    
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Program Options                    
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L101:
                            PS00L102,PS00L999,PS00L999,PS00L103:
                            PS00L999,PS00L104,PS00L105,PS00L999:
                           PS00L999,PS00L106,PS00L107,PS00L108
          GOTO     PS00L999
.
PS00L101
          MOVE      FROMCOST,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      TOCOST,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      USYEAR,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      USPERD,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      REPTSTCK,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      FROMSUPP,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      TOSUPP,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Program Options                    
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L006,SF00L006,SF00L006,SF00L104:
                            SF00L006,SF00L105,SF00L106,SF00L006:
                           SF00L006,SF00L107,SF00L108,SF00L006
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L103:
                            SF00L020,SF00L020,SF00L020,SF00L104:
                            SF00L020,SF00L105,SF00L106,SF00L020:
                           SF00L020,SF00L107,SF00L108,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      PRNTA000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOCOST  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      RCOS0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMCOST,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOCOST,VAR       
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L104
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,EXPORTYN
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L105
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KYEAR000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      USYEAR,VAR       
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L106
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KPERD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L106
            ENDIF
            BRANCH    EXIT,SF00L106,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      USPERD,VAR       
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L107
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ESTCK000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L107
            ENDIF
            BRANCH    EXIT,SF00L107,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      REPTSTCK,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L108
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOSUPP  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      RCRED000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L108
            ENDIF
            BRANCH    EXIT,SF00L108,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMSUPP,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOSUPP,VAR       
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------------------------------------
. Set Screen Defaults
.----------------------------------------------------------------------
SETSCR00  MOVE      "Start      ",FROMSUPP
          MOVE      "Finish     ",TOSUPP
          MOVE      SP70,STRCRD
          MOVE      SP70,ENDCRD
          MOVE      "Start      ",FROMCOST
          MOVE      "Finish     ",TOCOST
          MOVE      SP70,STRCOST
          MOVE      SP70,ENDCOST
          MOVE      ONE,ACCEPT
          RETURN
.********************************************************************
.  Print Report
.********************************************************************
PRNTA000  PACK      DAT6,USYEAR,USPERD,SP70
          UNPACK    DAT6,SIPEYEAR,SIPEPER
.
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,TWENTY3;*95,HACCNT,*124,HORDDES
          READ      CONTROLF,SIXTY3;*143,HNONUSAG
.
          CALL      MKTM1000
.
          CALL      EXTR0000
.
          IF        EXPORTYN=1
            CALL      MAKEXP00
          ENDIF
.
          DISPLAY   *P1:24,*EL,"Printing :   ";
          MOVE      ZERO,CPAGENO                 * reset page no.
          CLOCK     TIME,CTIMEIS                 * get current time
          MOVE      "999",CLNO                   * init last line number
.
          CALL      WRIA0000
.
PRNTA900  MOVE      ZERO,EXIT                    * exit screen
          GOTO      PRNTA999
.
PRNTA950  MOVE      ONE,EXIT                     * continue
.
PRNTA999  CALL      MESSAGE3                     * restore line 24
          CLOSE     TEMPFILE,DELETE
          IF        EXPORTYN=1
            CALL      TRAN0000
          ENDIF
          RETURN
.------------------------------------------------------------
. Extract Orders
.------------------------------------------------------------
EXTR0000  MOVE      ZERO,ORDCOUNT
          DISPLAY   *P1:24,*EL,"Extracting Orders ..."
          PACK      KEY6,SIPEYEAR,SP70
          CALL      RSSIPF3
.
EXTR1000  CALL      RKSIPF3
          BRANCH    OVRCD,EXTR9999
.
          UNPACK    SIPFUDT,KEY4,KEY2
          MATCH     SIPEYEAR,KEY4
          GOTO      EXTR9999 IF NOT EQUAL
.
          ADD       ONE,ORDCOUNT
          IF        ORDCOUNT%500=1
            DISPLAY   *P30:24,ORDCOUNT
          ENDIF
.
          CALL      ORDRAN00                     * Check Ranges
          BRANCH    EXIT,EXTR1000
.
          PACK      KEY5,SIPCPRD,SP70
          CALL      RDSISA1
          BRANCH    OVRCD,EXTR1000
.
          ASSIGN    SIPFQTY*SIPFCST,F14P4
.
          COMPARE   ZERO,F14P4
          GOTO      EXTR1000 IF EQUAL
.
          PACK      KEY16,SIPASUP,SIPCCST,SISACOMM,SP70                *C-59696
          READ      TEMPFILE,KEY16;TEMPSUPP,TEMPCOST,TEMPCOMM,TEMPPERV: *C-59696
                                   TEMPYTDV
          GOTO      EXTR2000 IF OVER
.
          MATCH     SIPEPER,KEY2
          IF        @EQUAL
            ADD       F14P4,TEMPPERV
            ADD       F14P4,TEMPYTDV
          ELSE
            ADD       F14P4,TEMPYTDV
          ENDIF
          UPDATE    TEMPFILE;TEMPSUPP,TEMPCOST,TEMPCOMM,TEMPPERV:
                                   TEMPYTDV
          GOTO      EXTR1000
.
EXTR2000  MOVE      SIPASUP,TEMPSUPP
          MOVE      SIPCCST,TEMPCOST
          MOVE      SISACOMM,TEMPCOMM
          MATCH     SIPEPER,KEY2
          IF        @EQUAL
            MOVE      F14P4,TEMPPERV
            MOVE      F14P4,TEMPYTDV
          ELSE
            MOVE      ZERO,TEMPPERV
            MOVE      F14P4,TEMPYTDV
          ENDIF
          WRITE     TEMPFILE,KEY16;TEMPSUPP,TEMPCOST,TEMPCOMM,TEMPPERV: *C-59696
                                   TEMPYTDV
          GOTO      EXTR1000
.
EXTR9999  RETURN

.------------------------------------------------------------
. Check Order Range
.------------------------------------------------------------
ORDRAN00  PACK      KEY7,SIPFPON,SP70
          CALL      RDSIPA1
          BRANCH    OVRCD,ORDRAN90
.
          MATCH     STRCRD,SIPASUP
          GOTO      ORDRAN90 IF LESS
          MATCH     SIPASUP,ENDCRD
          GOTO      ORDRAN90 IF LESS
.
          PACK      KEY10,SIPFPON,SIPFITM,SP70
          CALL      RDSIPC1
          BRANCH    OVRCD,ORDRAN90
.
          IF        REPTSTKF=1
            MATCH     "Stock",SIPCCST
            GOTO      ORDRAN90 IF NOT EQUAL
.
. check warehouse security
.
            MATCH     SP70,SIPCWAR
            IF        !@EQUAL
              PACK      KEY9,PASSCODE,SIPCWAR,SP70
              CALL      RDSIWS1
              BRANCH    OVRCD,ORDRAN90
            ENDIF
          ELSE
            PACK      KEY5,SIPCCST
            CALL      RDSICA1
            BRANCH    OVRCD,ORDRAN90
            MATCH     STRCOST,SIPCCST
            GOTO      ORDRAN90 IF LESS
            MATCH     SIPCCST,ENDCOST
            GOTO      ORDRAN90 IF LESS
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      ORDRAN99
.
ORDRAN90  MOVE      ONE,EXIT
.
ORDRAN99  RETURN
.------------------------------------------------------------
. Print Catalog Analysis (Full Report)
.------------------------------------------------------------
WRIA0000  MOVE      TRUE,FIRSTHRU
          MOVE      ZERO,GTOTPER
          MOVE      ZERO,GTOTYTD
          MOVE      ZERO,TCSTPER
          MOVE      ZERO,TCSTYTD
          MOVE      ZERO,TSUPPER
          MOVE      ZERO,TSUPYTD
          MOVE      SP70,CHECKCST
          MOVE      SP70,CHECKSUP
          PACK      KEY16,SP70                                         *C-59696
          READ      TEMPFILE,KEY16;;                                   *C-59696
.
WRIA1000  READKS    TEMPFILE;TEMPSUPP,TEMPCOST,TEMPCOMM,TEMPPERV,TEMPYTDV
          GOTO      WRIA9000 IF OVER
.
. ------- First Time Thru Set Check Var and Reset Firsthru var
          IF        FIRSTHRU=TRUE
            MOVE      TEMPSUPP,CHECKSUP
            MOVE      SP70,CHECKCST
            MOVE      FALSE,FIRSTHRU
          ENDIF
.
. ------- Has it Changed Suppliers
.
          MATCH     TEMPSUPP,CHECKSUP    * Changed Suppliers
          IF        !@EQUAL
            CALL      ATOT0000
            MOVE      TEMPSUPP,CHECKSUP
            CALL      HEAD0000
          ENDIF
.
. ------- Has it Changed Cost Centres
.
          MATCH     TEMPCOST,CHECKCST    * Changed Cost Centres
          IF        !@EQUAL
            CALL      BTOT0000
            MOVE      SP70,SICADESC
            MATCH     "Stock",TEMPCOST
            IF        !@EQUAL
              PACK      KEY5,TEMPCOST,SP70
              CALL      RDSICA1
              IF        OVRCD=1
                MOVE      "Unknown Cost Centre",SICADESC
              ENDIF
            ENDIF
            COMPARE   "53",CLNO
            CALL      HEAD0000 IF NOT LESS
            PRINT     "| ",TEMPCOST," ",SICADESC,*78,"|",*104,"|",*132,"|"
            ADD       ONE,CLNO
            MOVE      TEMPCOST,CHECKCST
          ENDIF
.
WRIA2000  CALL      ASUB0000
          GOTO      WRIA1000
.
WRIA9000  CALL      PRTOT000
.
WRIA9999  RETURN
.--------------------------------------------------------------------
. Print Sub-Totals if Not Zero
.--------------------------------------------------------------------
ASUB0000  IF        TEMPPERV=0&TEMPYTDV=0
            GOTO      ASUB9999
          ENDIF
.
          COMPARE   "53",CLNO                    * end of page ?
          CALL      HEAD0000 IF NOT LESS         * start new page
.
          MOVE      "(99,999,999,999,999.99 ",FORMATPR
          MOVE      "(9999,999,999,999,999.99 ",FORMATYR
          FEDIT     TEMPPERV,FORMATPR
          FEDIT     TEMPYTDV,FORMATYR
.
          PACK      KEY6,TEMPCOMM,SP70                                 *C-59696
          CALL      RDSIGA1
          IF        OVRCD=1
            MOVE      SP70,SIGADES
            MOVE      "Invalid Commodity Group",SIGADES
          ENDIF
.
          PRINT     "|",*9,SIGACOD,SP1,SIGADES,*78,"| ":
                    FORMATPR,*104,"| ":
                    FORMATYR,*132,"|"
          ADD       ONE,CLNO           * add one to line number
.
          IF        EXPORTYN=1
            CALL      WREXPT00
          ENDIF
.
          ADD       TEMPPERV,TCSTPER
          ADD       TEMPYTDV,TCSTYTD
.
ASUB9999  RETURN
.--------------------------------------------------------------------
. Print Totals if Not Zero
.--------------------------------------------------------------------
ATOT0000  CALL      BTOT0000
          MOVE      "(99,999,999,999,999.99 ",FORMATPR
          MOVE      "(9999,999,999,999,999.99 ",FORMATYR
          FEDIT     TSUPPER,FORMATPR
          FEDIT     TSUPYTD,FORMATYR
.
          PACK      KEY5,CHECKSUP,SP70
          CALL      RDAPMA1
          IF        OVRCD=1
            MOVE      SP70,APMASN1
            MOVE      "Unknown Supplier Code",APMASN1
          ELSE
            MATCH     SP70,APMASN1
            IF        @EQUAL
              MOVE      APMACN1,APMASN1
            ENDIF
          ENDIF
          PRINT     "| Supplier Total : ",CHECKSUP," ",APMASN1,*78,"| ":
                    FORMATPR,*104,"| ":
                    FORMATYR,*132,"|"
          CALL      UND132
.
          ADD       ONE,CLNO           * add one to line number
          ADD       TSUPPER,GTOTPER
          ADD       TSUPYTD,GTOTYTD
          MOVE      ZERO,TSUPPER
          MOVE      ZERO,TSUPYTD
.
ATOT9999  RETURN
.--------------------------------------------------------------------
. Print Totals if Not Zero
.--------------------------------------------------------------------
BTOT0000  IF        TCSTPER=0&TCSTYTD=0
            GOTO      BTOT9999
          ENDIF
.
          MOVE      "(99,999,999,999,999.99 ",FORMATPR
          MOVE      "(9999,999,999,999,999.99 ",FORMATYR
          FEDIT     TCSTPER,FORMATPR
          FEDIT     TCSTYTD,FORMATYR
.
          MOVE      SP70,SICADESC
          MATCH     "Stock",CHECKCST
          IF        !@EQUAL
            PACK      KEY5,CHECKCST,SP70
            CALL      RDSICA1
            IF        OVRCD=1
              MOVE      SP70,SICADESC
              MOVE      "Unknown Cost Centre",SICADESC
            ENDIF
          ENDIF
          CALL      UND132
          PRINT     "| Cost Centre Total : ",CHECKCST," ",SICADESC,*78,"| ":
                    FORMATPR,*104,"| ":
                    FORMATYR,*132,"|"
          CALL      UND132
.
          ADD       ONE,CLNO           * add one to line number
          ADD       TCSTPER,TSUPPER
          ADD       TCSTYTD,TSUPYTD
          MOVE      ZERO,TCSTPER
          MOVE      ZERO,TCSTYTD
          MOVE      SP5,CHECKCST
.
BTOT9999  RETURN
.--------------------------------------------------------------------------
. Print Report Totals
.--------------------------------------------------------------------------
PRTOT000  CALL      ATOT0000
          MOVE      "(99,999,999,999,999.99 ",FORMATPR
          MOVE      "(9999,999,999,999,999.99 ",FORMATYR
          FEDIT     GTOTPER,FORMATPR
          FEDIT     GTOTYTD,FORMATYR
.
          CALL      UND132
          PRINT     "| Grand Total",*78,"| ":
                    FORMATPR,*104,"| ":
                    FORMATYR,*132,"|"
          CALL      UND132
.
          PRINT     *N,*N,*3,"***** End of Report *****"
.
          ADD       ONE,CLNO           * add one to line number
          MOVE      ZERO,GTOTPER
          MOVE      ZERO,GTOTYTD
.
PRTOT999  RETURN
.------------------------------------------------------------
. Print Report Heading
.------------------------------------------------------------
HEAD0000  CALL      HEAD132                     * print heading
.
          IF        CPAGENO=1
            MOVE    NONDESC,REPTDESC
            LOAD    REPTDESC,REPTSTKF,STKDESC
            STRIP   FROMSUPP
            STRIP   FROMCOST
            PRINT   *+,*40,"Usage Period : ",USPERD,"/",USYEAR,REPTDESC:
                    *N,*1,"Supplier Code Range : ",FROMSUPP:
                    " to ",TOSUPP:
                    *N,*1,"Cost Centre Range   : ",FROMCOST:
                    " to ",TOCOST,*N
            ADD     FOUR,CLNO
          ENDIF
.
          PACK      KEY5,CHECKSUP,SP70
          CALL      RDAPMA1
          IF        OVRCD=1
            MOVE      SP70,APMASN1
            MOVE      "Unknown Supplier",APMASN1
          ELSE
            MATCH     SP70,APMASN1
            IF        @EQUAL
              MOVE      APMACN1,APMASN1
            ENDIF
          ENDIF
.
HEAD1000  PRINT     "Supplier    : ",APMACRD,SP2,APMASN1
          CALL      UND132                      * print line
.
          PRINT     "| Cost Centre",*78,"|",*104,"|",*132,"|":
                    *N,"|       Commodity",*78,"|                 Period ":
                    *104,"|             Year to Date ",*132,"|"
.
HEAD9000  ADD       "1",CLNO
          CALL      UND132                      * print line
.
HEAD9999  RETURN
.--------------------------------------------------------------------------
. Execute Transfer Script eg softerm
.--------------------------------------------------------------------------
TRAN0000  MOVE     YES,DEFYESNO
          CLOSE    EXPORTFL
          DISPLAY  *P1:24,*EL,"Execute Transfer Now (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "30",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN9999 IF EQUAL   *  No Transfer
.
          MOVE     ZERO,HLEF
          CALL     GETSCR00
.
          MOVE     "EXPORT",KEY6
          PACK     KEY8,KEY6,PORT
          REP      " 0",KEY8
          CLEAR    KEY80
          APPEND   "keatran ",KEY80
          APPEND   KEY8,KEY80
          APPEND   ".txt",KEY80
          RESET    KEY80
          EXECUTE  KEY80,TASKID
.
          CALL     PUTSCR00
.
          DISPLAY  *P1:24,*EL,"Transfer Completed Ok (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "31",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN0000 IF EQUAL   *  Not ok
.
          PREP     EXPORTFL,KEY8
          CLOSE    EXPORTFL
.
TRAN9999  RETURN
.------------------------------------------------------------
. Create Export File
.------------------------------------------------------------
MAKEXP00  MOVE     "EXPORT",KEY6
          PACK     KEY8,KEY6,PORT
          REP      " 0",KEY8
          PREP     EXPORTFL,KEY8
MAKEXP10  WRITE    EXPORTFL,SEQ;"Period",TABDELM:
                           "Supplier Code",TABDELM,"Supplier Code Name",TABDELM:
                           "Cost Centre",TABDELM,"Cost Centre Name",TABDELM:
                           "Commodity",TABDELM,"Commodity Name",TABDELM:
                           "Period Value",TABDELM,"Year to Date Value",TABDELM
          GOTO     MAKEXP99
MAKEXP99  RETURN
.------------------------------------------------------------
. Write to Export File
.------------------------------------------------------------
WREXPT00  WRITE     EXPORTFL,SEQ;USPERD,"/",USYEAR,TABDELM:
                               TEMPSUPP,TABDELM,APMASN1,TABDELM:
                               TEMPCOST,TABDELM,SICADESC,TABDELM:
                               TEMPCOMM,TABDELM,SIGADES,TABDELM:
                               TEMPPERV,TABDELM,TEMPYTDV,TABDELM
          GOTO      WREXPT99
WREXPT99  RETURN
.
.------------------------------------------------------------
. Create Temp File
.------------------------------------------------------------
MKTM1000  MOVE     "sub291",KEY6
          PACK     KEY8,KEY6,PORT
          REP      " 0",KEY8
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     TEMPFILE,KEY8
          TRAPCLR  IO
          IF       OVRCD=0
            CLOSE    TEMPFILE,DELETE
          ENDIF
          CLEAR    KEY80
          APPEND   "isbuild ",KEY80
          APPEND   KEY8,KEY80
          APPEND   " 36 UC1-5,6-10,11-16",KEY80                        *C-59696
          RESET    KEY80
          EXECUTE  KEY80,TASKID
          OPEN     TEMPFILE,KEY8
          RETURN
.----------------------------------------------------------------------
. Enter Cost Centre Code Range
.----------------------------------------------------------------------
RCOS0000  MOVE       "    4",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          CALL       KSICAA00
          BRANCH     EXIT,RCOS0010,RCOS0999
          MOVE       SICACODE,STRCOST
          PACK       FROMCOST,SICACODE,SP1,SICADESC
          GOTO       RCOS0020
.
RCOS0010  MOVE       SP70,STRCOST
          MOVE       "Start ",FROMCOST
.
RCOS0020  MOVE       FROMCOST,VAR
          CALL       DISPITEM
.
RCOS0030  MOVE       "    5",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          CALL       KSICAA00
          BRANCH     EXIT,RCOS0900,RCOS0999
          MOVE       SICACODE,ENDCOST
          PACK       TOCOST,SICACODE,SP1,SICADESC
          MATCH      STRCOST,ENDCOST
          GOTO       RCOS0999 IF NOT LESS
.
          BEEP
          MOVE       "To Code Must Be > From Code - ",DISPMSG
          CALL       MESSAGE1
          MOVE       SP70,VAR
          CALL       DISPITEM
          GOTO       RCOS0000
.
RCOS0900  MOVE       "~~~~~",ENDCOST
          MOVE       "Finish ",TOCOST
.
RCOS0999  MOVE       "    4",FLDID
          RETURN
.
.----------------------------------------------------------------------
. Keyin Year
.----------------------------------------------------------------------
KYEAR000  CALL      RINPECON
          MOVE      SIPECYR,USYEAR
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,*JR,USYEAR
          PACK      USYEAR,USYEAR,SP70
.
          MATCH     SP70,USYEAR
          GOTO      KYEAR950 IF EQUAL
          PACK      KEY4,SP3,EXITCHAR
          MATCH     KEY4,USYEAR
          GOTO      KYEAR950 IF EQUAL
.
          TYPE      USYEAR
          GOTO      KYEAR000 IF NOT EQUAL
.
          MOVE      USYEAR,SIPEYF4
          IF        SIPEYF4<100
            SQUEEZE   USYEAR
            MOVE      USYEAR,FORM2
            PACK      USYEAR,CCC,FORM2,SP70
          ENDIF
.
          REP       " 0",USYEAR
.
KYEAR900  MOVE      ZERO,EXIT                    * entry ok
          GOTO      KYEAR999
.
KYEAR950  MOVE      TWO,EXIT                     * quit screen
.
KYEAR999  RETURN
.----------------------------------------------------------------------
. Keyin period
.----------------------------------------------------------------------
KPERD000  KEYIN     *PCCOL:CVERT,*V2LON,*RV,*ZF,*JR,USPERD
          PACK      USPERD,USPERD,SP70
          REP       " 0",USPERD
.
          PACK      KEY2,ZERO,EXITCHAR      * check for exitchar
          MATCH     KEY2,USPERD
          GOTO      KPERD950 IF EQUAL
.
          TYPE      USPERD                  * check if numeric
          GOTO      KPERD000 IF NOT EQUAL
.
          MOVE      USPERD,F2
          IF        F2>SIPENUM
            BEEP
            MOVE      "Invalid Period - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KPERD000
          ENDIF
.
          PACK      KEY6,USYEAR,USPERD
          REP       " 0",KEY6
          CALL      RDSIPE1
          IF        OVRCD=1
            BEEP
            MOVE      "Period Does Not Exist - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KPERD000
          ENDIF
.
.
KPERD900  MOVE      ZERO,EXIT                    * entry ok
          GOTO      KPERD999
.
KPERD950  MOVE      TWO,EXIT                     * quit screen
.
KPERD999  RETURN
ESTCK0000  MOVE     FALSE,EXIT
           MOVE     ANSS,REPTSTCK
           KEYIN    *PCCOL:CVERT,*EL,*V2LON,*RV,REPTSTCK
           PACK     REPTSTCK,REPTSTCK,SP10
.
           MATCH    EXITCHAR,REPTSTCK
           IF       @EQUAL
             MOVE     TWO,EXIT
             GOTO     ESTCK999
           ENDIF
.
           TYPE     REPTSTCK
           GOTO     ESTCK900 IF EQUAL
           REP      UPPLOW,REPTSTCK
           MOVE     REPTSTCK,ANS
           REP      "S1N0",ANS
           TYPE     ANS
           GOTO     ESTCK900 IF NOT EQUAL
.
. -------- Valid Option
           MOVE     ANS,FORM1
           IF       FORM1=1
             MOVE     ANSS,REPTSTCK          * Only Stock
             DISPLAY  *PCCOL:CVERT,*EL,*V2LON,"Stock Only"
             MOVE     FORM1,REPTSTKF           * Report Variable
             GOTO     ESTCK999
           ENDIF
.
           IF       FORM1=0
             MOVE     ANSN,REPTSTCK          * Only Non-Stock
             DISPLAY  *PCCOL:CVERT,*EL,*V2LON,"Non-Stock Only"
             MOVE     FORM1,REPTSTKF           * Report Variable
             GOTO     ESTCK999
           ENDIF
.
ESTCK900   DISPLAY  *P1:24,*EL,"Invalid Option.  ";
           CALL     HITENTER
           GOTO     ESTCK0000
.
ESTCK9999  RETURN
.
.----------------------------------------------------------------------
. Enter Creditor Code Range
.----------------------------------------------------------------------
RCRED000  MOVE       "   15",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          CALL       KAPMAA00
          BRANCH     EXIT,RCRED010,RCRED999
          MOVE       APMACRD,STRCRD
          PACK       FROMSUPP,APMACRD,SP1,APMACN1
          GOTO       RCRED020
.
RCRED010  MOVE       SP70,STRCRD
          MOVE       "Start ",FROMSUPP
.
RCRED020  MOVE       FROMSUPP,VAR
          CALL       DISPITEM
.
RCRED030  MOVE       "   16",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          CALL       KAPMAA00
          BRANCH     EXIT,RCRED900,RCRED999
          MOVE       APMACRD,ENDCRD
          PACK       TOSUPP,APMACRD,SP1,APMACN1
          MATCH      STRCRD,ENDCRD
          GOTO       RCRED999 IF NOT LESS
.
          BEEP
          MOVE       "To Creditor Code Must Be > From Creditor Code - ",DISPMSG
          CALL       MESSAGE1
          MOVE       "   15",FLDID
          CALL       GETPOSIT
          MOVE       SP70,VAR
          CALL       DISPITEM
          GOTO       RCRED000
.
RCRED900  MOVE       "~~~~~",ENDCRD
          MOVE       "Finish ",TOSUPP
.
RCRED999  MOVE       "   16",FLDID
          RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSCKIKY    
          INC       APSMASIO/INC
          INC       APSMASKY    
          INC       APSMXRIO/INC
          INC       SINCCAIO/INC
          INC       SINCCAKY    
          INC       SINCGAIO/INC
          INC       SINCIAIO/INC
          INC       SINFACIO/INC
          INC       SINNATIO/INC
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINPOAIO/INC
          INC       SINPOCIO/INC
          INC       SINPOFIO/INC
          INC       SINSUAIO/INC
          INC       SINWARIO/INC
          INC       SINWSEIO/INC
.
          INC       STDGENCD
.
