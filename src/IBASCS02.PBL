.******************************************************************************
.* System    :   Accounting System                                            *
.* Program   :   IBASCS02                                                     *
.* Desc      :   File Code Maintenance                                        *
.******************************************************************************
.* Date      :   07.03.91                                                     *
.* Author    :   B.G.Ackland (IBA)                                            *
.* Mods      :                                                                *
.*                                                                            *
.* V10.13.01 05/12/2018  Don Nguyen  TSK 0838558                              *
.*           Deleted temp files (TEMPFILE & VERSFILE) on program exit         *
.* V10.12.01 17/01/2018  Ania P      TSK 0261630                              *
.*           Removed PORT                                                     *
.* V10.10.02 03/04/2017  Steve Armstrong                                      *
.*           Increased comment lines from 25 to 50.                           *
.* V10.10.01 15/03/2017  Steve Armstrong                                      *
.*           Changed "CAR Number" to "Task No."                               *
.******************************************************************************
.* V10.09.02 09/12/2016  Steve Armstrong                                      *
.*           Re-wrote PFLD0000 routine to align fields and to cater for a     *
.*           3-digit key value.                                               *
.* V10.09.01 06/12/2016  Steve Armstrong                                      *
.*           Mods to use DIM100 instead of DIM80 in GENC0000 when generating  *
.*           an FD, in order to cater for an index definition which is more   *
.*           than 80 characters in length.                                    *
.*           Also added RESET of DIM100 and changed PRINT to use *+/*- so a   *
.*           blank line is not added after indexes which are less than 81     *
.*           characters.                                                      *
.******************************************************************************
.* V10.08.01 30/03/2016  Steve Armstrong                                      *
.*           Extended CARNUMB from DIM 6 to DIM 7 to cater for iASSIST numbers*
.******************************************************************************
.* V10.03.03 28/08/2013  Ebon Clements                                        *
.*           Changed XITEMNO tests back to 15 from 25 in SELB0000 to fix      *
.*           page up and page down.                                           *
.* V10.03.02 29/10/2012  Mike Laming                                          *
.*           Increase Comment lines from 15 to 25 - added Vars to STDHLPDF.PBL*
.* V10.03.01 10/11/2011  Mike Laming                                          *
.*           Added "Index accepts duplicates (Y/N)", Mods to SYSIDXFD/IO      *
.* V10.02.01 10/05/2011  Mike Laming                                          *
.*           Added CAR number field in init Modifications, added Key lengths  *
.*           to File Information panel.                                       *
.* V10.01.03 25/11/2010  Steve Armstrong                                      *
.*           Mods to check if release has changed - if it hasn't, add one to  *
.*           the default version, otherwise, initialise the version to "01".  *
.* V10.01.02 23/11/2010  Steve Armstrong                                      *
.*           Added comma between Modify & Comments in user prompt             *
.* V10.01.01 12/11/2010  Mike Laming   CAR 218862                             *
.*           Mods to fix field length in "Modify" & reset access to FD.INC    *
.******************************************************************************
.* V10.00.02 08/04/2010  Mike Laming   CAR 218862                             *
.*           Mods to handle Version number correctly in VERPV000              *
.* V10.00.01 25/03/2010  Mike Laming   CAR 218862                             *
.*           Mods to handle RELEASE number of "V10.00.00" & lengthen COMMENTS *
.******************************************************************************
.* V9.11.02 13/10/2008  Mike Laming   CAR 180164                              *
.*          Increase number of Comment lines to 15                            *
.* V9.11.01 08/10/2008  Mike Laming   CAR 180164                              *
.*          Fix I*P at VERS9999 (added a Read) when Generating                *
.******************************************************************************
.* V9.10.01 18/09/2008  Mike Laming   CAR 180164                              *
.*          Change (C)omments from "wp " to use "WORD" command                *
.*          Add ability to change Field data lines                            *
.******************************************************************************
.* C2.00.01 10.09.1999 Sandra Barcham                                         *
.*          Change ITEMNO to XITEMNO                                          *
.******************************************************************************
.* C1.00.01 13.10.1994 B.G.Ackland                                            *
.*          Fix Audit File Length -1                                          *
.******************************************************************************
.* V6.00.02 27.07.1994 B.G.Ackland                                            *
.*          Fix Audit Date Pack                                               *
.******************************************************************************
.$$$$$$
.        PROGRAM IBASCS02
.             open files and initialise variables
.             WHILE user wants to add/modify/delete DO
.                  get desired option (add, modify or delete)
.                  CASE option OF
.                       ADD     : WHILE user wants to add records DO
.                                      accept initial values
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN write new data
.                                      END IF
.                                 END WHILE
.                       MODIFY  : WHILE user wants to modify records DO
.                                      get and display desired record
.                                      WHILE user wants modify screen data DO
.                                           get number of item to be modified
.                                           allow user to modify option
.                                      END WHILE
.                                      IF user wants to post data
.                                           THEN update data
.                                      END IF
.                                 END WHILE
.                       DELETE  : WHILE user wants to delete records DO
.                                      get and display desired record
.                                      IF user wants to delete data
.                                           THEN delete data
.                                      END IF
.                                 END WHILE
.                  END CASE
.             END WHILE
.        END
.$$$$$$
. Standard FMS Accounting System Include
.---------------------------------------
          INC       STDGENDF
.
.==============================================================================
.FILE DESCRIPTION INCLUDES
.-------------------------
          INC       SYSSCFFD/INC
          INC       SYSFILFD/INC
          INC       SYSFLDFD/INC
          INC       SYSIDXFD/INC
          INC       SYSCOMFD/INC
          INC       IBASEQFD/INC 
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
.
COUNTER   FORM      2
LOADNAME  DIM       8
LOADFILE  FILE      ASCII, FIXED=80
LOADV4FL  FORM      1
FLDLENTH  FORM      4
F2A       FORM      2
LDFLD     DIM       8
LDTYP     DIM       4
LINLENTH  FORM      4
LOWUP     INIT      "AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz"
START     FORM      4
STRTPOSN  FORM      2
ENDOFREC  DIM       4
COUNT     FORM      5
SEGMENT   DIM       4
SYCOMMT   DIM       12
SL        INIT      "/"
CAT       INIT      "cat "
PRT       INIT      ".prt"
TXT       INIT      ".txt"
IOTYPE    DIM       15
IOTYPE0   INIT      "2/2 Coding"
IOTYPE1   INIT      "2/3 Coding"
IOTYPE2   INIT      "Version 4"
RELEASE   DIM       5
RECDCNT   FORM      3
PRGVERS   FORM      3
PRGVER2   DIM       2
FILENAME  DIM       8
VERSNAME  DIM       8
DATE      DIM       10
PROGID    DIM       3
CARNUMB   DIM       7
COMMENTS  DIM       50
TEMPFILE  FILE      ASCII, FIXED=80
VERSFILE  FILE      ASCII, FIXED=80
INPUT     INIT      " < "
OUTPUT    INIT      " >> "
.
PREVRELS  DIM       5
DIM8A     DIM       8
DIM10A    DIM       10
DIM10B    DIM       10
DIM15A    DIM       15
DIM37A    DIM       37
DIM60A    DIM       60
DIM60B    DIM       60
DIM80A    DIM       80
FORM3     FORM      3
.
ACCEPT    FORM      1                  * accept mode (1=on)
SAVKEY8   DIM       8
DTYPE     DIM       4
DTYPE0    INIT      "DIM "
DTYPE1    INIT      "FORM"
DLROW     FORM      2
KYNO      DIM       7[8]
LSTDROW   FORM      2
LDITEM    FORM      2
CHECK4    FORM      4
SAVNUM    DIM       4
DLEN      DIM       5
DSTR      DIM       5
DPHY      DIM       5
BEFD      DIM       3
AFTD      DIM       3
CF3       FORM      3
FROM      DIM       4
TO        DIM       4
FIXED     DIM       4
.
CNUMOPT    FORM      2
.
OPT        DIM       10
OPT0       INIT      "Exit      "
OPT1       INIT      "Insert    "
OPT2       INIT      "Modify    "
OPT3       INIT      "Delete    "
OPT4       INIT      "Gen Code  "
OPT5       INIT      "Select File"
FDNAME     DIM       12
FDNAMEL    DIM       14
IONAME     DIM       12
NEWVERS    DIM       1
PRNAME     DIM       21
TBSPOOL    INIT      "#$TBSPOOL/"
INC        INIT      ".INC"
FD         INIT      "FD"
IO         INIT      "IO"
ED         INIT      "ed "
MV         INIT      "mv "
RM         INIT      "rm "
CP         INIT      "cp "
CN         INIT      " C-"
CREATEIO   INIT      "createio "
INTO       INIT      " > "
COMMAND    DIM       80
TIFILE     INIT      "   IFILE    SQL, FIXED="
TKEYD      INIT      ", KEY=#"D"
TKEYU      INIT      ", KEY=#"U"
AUDKEY     INIT      ", KEY=#"D1-8,9-16,17-18,19-19#""
AUD        INIT      "AUD"
DIM80      DIM       80
DIM100     DIM       100
.
. Init Variables for IO Routines
.-------------------------------
PROVER     INIT      "          GOTO      OVERCOND IF OVER"
PRLOCK     INIT      "          GOTO      OVERLOCK IF LOCKED"
PRUPLOCK   INIT      "          GOTO      UPDFLOCK IF LOCKED"
PRRETURN   INIT      "          RETURN"
PRBLANK    INIT      "."
PRMOVRCD   INIT      "          MOVE      ZERO,OVRCD"
SHTOVRCD   INIT      "  MOVE      ZERO,OVRCD"
MOVE       INIT      "          MOVE      "
.
RESKEY     INIT      "RESET     KEY"
.
RS         INIT      "RS" * Positional Read
RA         INIT      "RA" * Read ANS
RD         INIT      "RD" * Read
RK         INIT      "RK" * Read Next
RP         INIT      "RP" * Read Previous
UP         INIT      "UP" * Update / Unlock
WR         INIT      "WR" * Write
DE         INIT      "DE" * Delete
RL         INIT      "RL" * Read and Lock
KL         INIT      "KL" * Readks and Lock
PL         INIT      "PL" * Readkp and Lock
UU         INIT      "UU" * Unlock
.
AS         INIT      "AS"
AK         INIT      "AK"
AU         INIT      "AU"
AW         INIT      "AW"
AD         INIT      "AD"
WA         INIT      "WA" * Write Audit
DA         INIT      "DA" * Delete Audit
.
RDS        INIT      "RDS"
RDA        INIT      "RDA"
RDK        INIT      "RDK"
RDP        INIT      "RDP"
.
RSIDXID    DIM       8
RAIDXID    DIM       8
RDIDXID    DIM       8
RKIDXID    DIM       8
RPIDXID    DIM       8
UPIDXID    DIM       8
WRIDXID    DIM       8   
DEIDXID    DIM       8
RLIDXID    DIM       8
KLIDXID    DIM       8
PLIDXID    DIM       8
UUIDXID    DIM       8
.
AUDD       INIT      "AUDD"
AUDT       INIT      "AUDT"
AUDP       INIT      "AUDP"
AUDR       INIT      "AUDR"
AUDS       INIT      "AUDS"
AUDO       INIT      "AUDO"
.
IDXID      DIM       6
FILEID     DIM       8
READ       INIT      "READ      "
READL      INIT      "READL     "
DUMMY      DIM       20
READLKS    INIT      "READLKS   "
READLKP    INIT      "READLKP   "
UNLOCK     INIT      "UNLOCK    "
WRITE      INIT      "WRITE     "
UPDATE     INIT      "UPDATE    "
READKS     INIT      "READKS    "
READKP     INIT      "READKP    "
DELETE     INIT      "DELETE    "
CKEY       INIT      ",KEY"
SEMI       INIT      ";"
DISANS     INIT      "ANS"
KEYLEN     FORM      4
FIRST      FORM      1
.
PRGID     INIT      "IBASCS02"
PRGNAM    INIT      "File Code Maintenance"
VERSION   INIT      "V12.00.00"
.
.******************************************************************************
.*  MAINLINE - Controlling Logic                                              *
.******************************************************************************
ML0000    CALL      INIT0000           * display heading and open files
.
ML0100    CALL      NEWOPTN            * insert/modify/delete/exit ?
          COMPARE   ZERO,COPTION
          GOTO      ML9000 IF EQUAL    * exit program
.
ML0200    CALL      PROC0000           * get entry
          BRANCH    EXIT,ML0100,ML0100 * exit option
.
          MOVE      ZERO,ACCEPT
          LOAD      ACCEPT,COPTION,ONE,ZERO,ZERO    * set up mode
.
.                            Ins    Mod    Del     Gen   Sel
          BRANCH    COPTION,ML1000,ML1000,ML2000,ML4000,ML0100
          GOTO      ML0100
.
.---- add/modify data ----
.
ML1000    CALL      SCRA0000
          CALL      SELA0000           * modify screen A
          IF        EXIT = 1
            BRANCH    COPTION,ML0200,ML0100   * don't save data
            GOTO    ML0200             * don't save data
          ENDIF
.
          CALL      POST0000           * post screen A data
.
          LOAD      ACCEPT,COPTION,ONE,ZERO,ZERO * set up mode
          CALL      SCRB0000           * display screen B
          CALL      SELB0000           * modify screen B
.
ML1100    LOAD      ACCEPT,COPTION,ONE,ZERO,ZERO * set up mode
          CALL      SCRC0000           * display screen C
          CALL      SELC0000           * modify screen C
          BRANCH    EXIT,ML1100,ML1200 * don't save data
          CALL      POSC0000           * post screen C data
          GOTO      ML1100
.
ML1200    CALL      RDEF0000           * Check For Redefines & Renumber Fields
          BRANCH    COPTION,ML0200,ML0100
          GOTO      ML0200 
.
.---- delete data ----
.
ML2000    CALL      SCRA0000
          CALL      DELQST             * ok to delete (y/n/c) ?
          BRANCH    CEXIT,ML2100,ML0100,ML0100
.
ML2100    CALL      DELT0000           * delete screen A data
          UNPACK    SP70,SYFISYS,SYFIFIL,SYFIDES
          GOTO      ML0100             * get next entry
.
ML4000    CALL      VERS0000           * accept version info
          BRANCH    EXIT,ML0100
          CALL      GENC0000           * generate FD & IO
.
          GOTO      ML0100
.
ML9000    PREP      TEMPFILE,FILENAME  * clean up tempfiles
          CLOSE     TEMPFILE,DELETE
          PREP      VERSFILE,VERSNAME
          CLOSE     VERSFILE,DELETE
ML9999    CHAIN     PGM                * chain back to menu
.------------------------------------------------------------------------------
. GENC0000 - Generate FD/IO Code Files
.------------------------------------------------------------------------------
GENC0000  DISPLAY   *P1:20,*EL,"Generating FD";
          PACK      FDNAME,SYSCID3,SYFIID3,FD,SP70
          
          MOVE      "chmod 666 ",KEY10   * reset access to FD.INC
          MOVE      ".INC",KEY4
          PACK      KEY12,SYSCID3,SYFIID3,FD,KEY4
          PACK      KEY22,KEY10,KEY12
          EXECUTE   KEY22,TASKID
.
          SPLOPEN   FDNAME
.
          CALL      GENH0000           * Generate File Heading.
          COMPARE   ONE,SYFIAUD        * Generate Audit File Yes/No.
          CALL      GENA0000 IF EQUAL 
.
          PACK      KEY8,SYFISYS,SYFIFIL,Z70
          CALL      RSSYFL1
          CALL      RPSYFL1
          MOVE      SYFLSTR,START
          ADD       SYFLPHY,START
          MOVE      START,DIM4
          CALL      FLEN0000
          MOVE      DIM4,ENDOFREC
.
          PRINT     PRBLANK
          PRINT     ".Data File Definition"
          PRINT     ".--------------------"
          PACK      KEY5,SYFISYS,SYFIFIL,SP70
          CALL      RSSYID1
GENC1000  CALL      RKSYID1
          BRANCH    OVRCD,GENC2000
          MATCH     SYIDSYS,SYFISYS
          GOTO      GENC2000 IF NOT EQUAL
          MATCH     SYIDFIL,SYFIFIL
          GOTO      GENC2000 IF NOT EQUAL
.
          MOVE      TKEYU,KEY9
          MATCH     "Y",SYIDIUD
          IF        @EQUAL
            MOVE      TKEYD,KEY9
          ENDIF
          PACK      DIM100,SYSCID3,SYFIID3,SYFIID4,SYIDIDX,TIFILE,ENDOFREC,KEY9
          ENDSET    DIM100
.
          MOVE      ZERO,COUNT
GENC1050  ADD       ONE,COUNT
          LOAD      SEGMENT,COUNT,SYIDFL1,SYIDFL2,SYIDFL3,SYIDFL4:
                                  SYIDFL5,SYIDFL6,SYIDFL7,SYIDFL8
          MATCH     SP70,SEGMENT
          GOTO      GENC1100 IF EQUAL
.
          PACK      KEY8,SYIDSYS,SYIDFIL,SEGMENT
          CALL      RDSYFL2
.
          MOVE      SYFLSTR,DIM4
          CALL      FLEN0000
          COMPARE   ONE,COUNT
          GOTO      GENC1060 IF EQUAL
          APPEND    ",",DIM100   * No Comma on first index segment
.
GENC1060  APPEND    DIM4,DIM100
          APPEND    "-",DIM100
          MOVE      SYFLSTR,START
          ADD       SYFLPHY,START
          SUB       ONE,START
          MOVE      START,DIM4
          CALL      FLEN0000
          APPEND    DIM4,DIM100
.
          COMPARE   EIGHT,COUNT
          GOTO      GENC1050 IF NOT EQUAL
.
GENC1100  APPEND    "#"",DIM100
          RESET     DIM100
          PRINT     *+,DIM100,*-
          GOTO      GENC1000
GENC2000  PACK      KEY8,SYFISYS,SYFIFIL,SP70
          PRINT     PRBLANK
          PRINT     ".Name     Type      Length Physical Start Description"
          PRINT     ".----     ----      ------ -------- ----- -----------"
          CALL      RSSYFL1
GENC2100  CALL      RKSYFL1
          BRANCH    OVRCD,GENC3000
          MATCH     SYFLSYS,SYFISYS
          GOTO      GENC3000 IF NOT EQUAL
          MATCH     SYFLFIL,SYFIFIL
          GOTO      GENC3000 IF NOT EQUAL
.
          MOVE      DTYPE0,DTYPE
          LOAD      DTYPE,SYFLTYP,DTYPE1
          MOVE      SYFLLEN,DLEN
          BRANCH    SYFLTYP,GENC2200
          MOVE      SYFLLEN,F3
          MOVE      F3,DLEN
          GOTO      GENC2250
.
GENC2200  MOVE      SYFLLEN,DLEN
          UNPACK    DLEN,BEFD,ANS,AFTD
          MOVE      AFTD,F3
          COMPARE   ZERO,F3
          GOTO      GENC2250 IF NOT EQUAL
          MOVE      SYFLLEN,F3
          MOVE      F3,DLEN
.
GENC2250  MOVE      DLEN,DIM5
GENC2255  MATCH     SP1,DIM5
          GOTO      GENC2260 IF NOT EQUAL
          BUMP      DIM5
          GOTO      GENC2255
GENC2260  PACK      DLEN,DIM5,SP70
          MOVE      SYFLPHY,DIM4
          CALL      FLEN0000
          PACK      DPHY,DIM4,SP70
.
          MOVE      SYFLSTR,DIM4
          CALL      FLEN0000
          PACK      DSTR,DIM4,SP70
.
GENC2300  COMPARE   TWO,SYFITIO
          GOTO      GENC2310 IF NOT EQUAL
          PACK      DIM8,SYFLV4N
          COMPARE   ONE,SYFLRED
          GOTO      GENC2350 IF NOT EQUAL
          PACK      DIM8,ANSD,SYFLV4N
          GOTO      GENC2350
.
GENC2310  PACK      DIM8,SYFLSYS,SYFLFIL,SYFLFLD
          COMPARE   ONE,SYFLRED
          GOTO      GENC2350 IF NOT EQUAL
          PACK      DIM8,ANSD,SYFLSYS,SYFLFIL,SYFLFLD
.
GENC2350  PRINT     DIM8,SP2,DTYPE,SP6,DLEN,SP2,DPHY,SP4,DSTR,SP1,SYFLDES
.
          MOVE      SYFLSTR,START
          ADD       SYFLPHY,START
.
. ---- print extra comments ----
.
          PACK      KEY10,SYFLSYS,SYFLFIL,SYFLFLD,SP10
          CALL      RDSYCM1
.
GENC2400  CALL      RKSYCM1
          BRANCH    OVRCD,GENC2100
.
          MATCH     SYFLSYS,SYCMSYS
          GOTO      GENC2100 IF NOT EQUAL
          MATCH     SYFLFIL,SYCMFIL
          GOTO      GENC2100 IF NOT EQUAL
          MATCH     SYFLFLD,SYCMFLD
          GOTO      GENC2100 IF NOT EQUAL
.
          PRINT     PRBLANK,SP30,SP10,SP1,SYCMTEXT
          GOTO      GENC2400
.
GENC3000  MOVE      START,DIM4
          CALL      FLEN0000
          PACK      DSTR,DIM4,SP70
          PRINT     PRBLANK
          PRINT     ".End of Record                      ",DSTR
          PRINT     PRBLANK
.
          PACK      KEY8,SYFISYS,SYFIFIL,SP70
          MOVE      ZERO,COUNT
          CALL      RSSYFL1
GENC4000  CALL      RKSYFL1
          BRANCH    OVRCD,GENC5000
          MATCH     SYFLSYS,SYFISYS
          GOTO      GENC5000 IF NOT EQUAL
          MATCH     SYFLFIL,SYFIFIL
          GOTO      GENC5000 IF NOT EQUAL
.
          COMPARE   ONE,SYFLRED
          GOTO      GENC4000 IF NOT EQUAL
          ADD       ONE,COUNT
          COMPARE   ONE,COUNT
          GOTO      GENC4100 IF NOT EQUAL
.
          PRINT     ".Redefine Key Variables"
          PRINT     ".----------------------"
.
GENC4100  COMPARE   TWO,SYFITIO
          GOTO      GENC4110 IF NOT EQUAL
          PACK      DIM8,SYFLV4N
          GOTO      GENC4120
GENC4110  PACK      DIM8,SYFLSYS,SYFLFIL,SYFLFLD
GENC4120  MOVE      SYFLLEN,F3
          MOVE      F3,DIM4
          CALL      FLEN0000
          PACK      DLEN,DIM4,SP70
          PRINT     DIM8,SP2,"FORM",SP6,DLEN
          GOTO      GENC4000
.
GENC5000  SPLCLOSE
.
          PACK      PRNAME,TBSPOOL,SYSCID3,SYFIID3,FD,PRT
          PACK      FDNAME,SYSCID3,SYFIID3,FD,INC
.
. set up new version comments and create new FD 
.
          PREP      TEMPFILE,FILENAME
          MATCH     "Y",NEWVERS             * 
          IF        @EQUAL
            MOVE      "V",KEY1
            SQUEEZE   CARNUMB
            PACK      DIM80,PRBLANK,SP1,KEY1,RELEASE,PRBLANK,PRGVER2:
                            SP1,DATE,SP1,PROGID,CN,CARNUMB,SP1,COMMENTS
            STRIP     DIM80
            WRITE     TEMPFILE,SEQ;DIM80
          ENDIF
..        CLOSE     TEMPFILE
          PACK      COMMAND,MV,FILENAME,TXT,SP1,FDNAME
          EXECUTE   COMMAND,TASKID
.
. append old version comments from VERSFILE to FD
.
          PACK      COMMAND,CAT,VERSNAME,TXT,OUTPUT,FDNAME
          EXECUTE   COMMAND,TASKID
.
. append new FD to original FD
.
          PACK      COMMAND,CAT,PRNAME,OUTPUT,FDNAME
          EXECUTE   COMMAND,TASKID
.
. remove work spoolfile
.
          PACK      COMMAND,RM,PRNAME
          EXECUTE   COMMAND,TASKID
.
          DISPLAY   *P1:20,*EL,"Generating IO";
.
          CALL      GNIO0000      * Generate IO
GENC9999  RETURN
.
.----------------------------------------------------------------------
. FLEN0000 - 
.----------------------------------------------------------------------
FLEN0000  MATCH     SP1,DIM4
          GOTO      FLEN9999 IF NOT EQUAL
          BUMP      DIM4
          GOTO      FLEN0000
FLEN9999  RETURN
.----------------------------------------------------------------------
. GENH0000 - Generate Heading for FD Details
.----------------------------------------------------------------------
GENH0000
          PRINT    ". *------------------------------------------":
                   "----------------------------"
          PRINT    ". * Include Name  :   ",SYSCID3,SYFIID3,"FD.INC"
          PRINT    ". *"
          PRINT    ". * Function      :   File Def'n Include for ",SYSCDES
          PRINT    ". *                   ",SYFIDES
          PRINT    ". *"
          PRINT    ". * File Type     :   SQL"
          PRINT    ". *"
          PACK     DIM6,SYSCID3,SYFIID3
          REP      LOWUP,DIM6
          PRINT    ". * File Name     :   ",DIM6,"af.dat"
          COMPARE  ONE,SYFIAUD
          GOTO     GENH1000 IF NOT EQUAL 
          PACK     DIM8,SYSCID3,AUD,SYFIFIL
          REP      LOWUP,DIM8
          PRINT    ". * Audit Name    :   ",DIM8,".dat" 
GENH1000  PRINT    ". *"
          CALL     GETLEN00
          PRINT    ". * Index Values  :   ",KYNO[1],SP1,KYNO[2],SP1,KYNO[3]:
                   SP1,KYNO[4],SP1,KYNO[5],SP1,KYNO[6],SP1,KYNO[7]
          PRINT    ". *"
          PRINT    ". *-------------------------------------------":
                   "---------------------------"
GENH9999  RETURN
.----------------------------------------------------------------------
. GENA0000 - Generate Audit File FD Details
.----------------------------------------------------------------------
GENA0000
          PRINT     PRBLANK
          PRINT     ".Audit File Definition"
          PRINT     ".--------------------"
          PACK      KEY8,SYFISYS,SYFIFIL,Z70
          CALL      RSSYFL1
          CALL      RPSYFL1
          MOVE      SYFLSTR,START
          ADD       SYFLPHY,START
          ADD       "25",START
          MOVE      START,DIM4
          CALL      FLEN0000
          PACK      DIM80,SYSCID3,AUD,SYFIFIL,TIFILE,DIM4,AUDKEY
          PACK      DIM4,SYFISYS,SYFIFIL
          PRINT     DIM80
          PRINT     PRBLANK
          PRINT     ".Name     Type      Length Physical Start Description"
          PRINT     ".----     ----      ------ -------- ----- -----------"
          PRINT     DIM4,"AUDD  DIM       8      8        1     Date of Change"
          PRINT     DIM4,"AUDT  DIM       8      8        9     Time of Change"
          PRINT     DIM4,"AUDP  DIM       2      2        17    Port"
          PRINT     DIM4,"AUDR  DIM       1      1        19    Record Type"
          PRINT     ".                                         A=Added Record"
          PRINT     ".                                         B=Before Change"
          PRINT     ".                                         C=After Change"
          PRINT     ".                                         D=Deleted Record"
          PRINT     DIM4,"AUDS  FORM      1      2        20    Record Status"
          PRINT     ".                                         1=Not Printed"
          PRINT     ".                                         2=Printed"
          PRINT     DIM4,"AUDO  DIM       4      4        22    Operator ID"
          PRINT     PRBLANK
          RETURN
.----------------------------------------------------------------------
. GNIO0000- Generate IO.INC 
.----------------------------------------------------------------------
GNIO0000  PACK      IONAME,SYSCID3,SYFIID3,IO,SP70
.
          SPLOPEN   IONAME
.
          PRINT     PRBLANK
          PRINT     PRBLANK,SP1,IONAME
          PRINT     ". --------"
          PRINT     ". Filename     : ",DIM6,"af.dat"
          PRINT     PRBLANK
.
          PACK      KEY5,SYFISYS,SYFIFIL,SP70
          CALL      RSSYID1
GNIO1000  CALL      RKSYID1
          BRANCH    OVRCD,GNIO2000
          MATCH     SYIDSYS,SYFISYS
          GOTO      GNIO2000 IF NOT EQUAL
          MATCH     SYIDFIL,SYFIFIL
          GOTO      GNIO2000 IF NOT EQUAL
.
          MOVE      ZERO,COUNT
          MOVE      ZERO,KEYLEN
GNIO1100  ADD       ONE,COUNT
          LOAD      SEGMENT,COUNT,SYIDFL1,SYIDFL2,SYIDFL3,SYIDFL4:
                                  SYIDFL5,SYIDFL6,SYIDFL7,SYIDFL8
          MATCH     SP70,SEGMENT
          GOTO      GNIO1200 IF EQUAL
.
          PACK      KEY8,SYIDSYS,SYIDFIL,SEGMENT
          CALL      RDSYFL2
          ADD       SYFLPHY,KEYLEN
.
          COMPARE   EIGHT,COUNT
          GOTO      GNIO1100 IF NOT EQUAL
.
GNIO1200  MOVE      KEYLEN,DIM4
          CALL      FLEN0000
          BRANCH    SYFITIO,GNIO1300,GNIO1400
.
          PACK      IDXID,SYFISYS,SYFIFIL,SYIDIDX,SP70
          PACK      RSIDXID,RS,IDXID,SP70
          PACK      RAIDXID,RA,IDXID,SP70
          PACK      RDIDXID,RD,IDXID,SP70
          PACK      RKIDXID,RK,IDXID,SP70
          PACK      RPIDXID,RP,IDXID,SP70
          PACK      UPIDXID,UP,IDXID,SP70
          PACK      WRIDXID,WR,IDXID,SP70
          PACK      DEIDXID,DE,IDXID,SP70
          PACK      RLIDXID,RL,IDXID,SP70
          PACK      KLIDXID,KL,IDXID,SP70
          PACK      PLIDXID,PL,IDXID,SP70
          PACK      UUIDXID,UU,IDXID,SP70
          GOTO      GNIO1500
.
GNIO1300  PACK      IDXID,SYFISYS,SYFIID3,SYIDIDX,SP70
          PACK      RSIDXID,RS,IDXID,SP70
          PACK      RAIDXID,RA,IDXID,SP70
          PACK      RDIDXID,RD,IDXID,SP70
          PACK      RKIDXID,RK,IDXID,SP70
          PACK      RPIDXID,RP,IDXID,SP70
          PACK      UPIDXID,UP,IDXID,SP70
          PACK      WRIDXID,WR,IDXID,SP70
          PACK      DEIDXID,DE,IDXID,SP70
          PACK      RLIDXID,RL,IDXID,SP70
          PACK      KLIDXID,KL,IDXID,SP70
          PACK      PLIDXID,PL,IDXID,SP70
          PACK      UUIDXID,UU,IDXID,SP70
          GOTO      GNIO1500
.
GNIO1400
          PACK      RSIDXID,RDS,SYFIID3,SYFIID4,SYIDIDX,SP70
          PACK      RAIDXID,RDA,SYFIID3,SYFIID4,SYIDIDX,SP70
          PACK      RDIDXID,RD,SYFIID3,SYFIID4,SYIDIDX,SP70
          PACK      RKIDXID,RDK,SYFIID3,SYFIID4,SYIDIDX,SP70
          PACK      RPIDXID,RDP,SYFIID3,SYFIID4,SYIDIDX,SP70
          PACK      UPIDXID,UP,SYFIID3,SYFIID4,SYIDIDX,SP70
          PACK      WRIDXID,WR,SYFIID3,SYFIID4,SYIDIDX,SP70
          PACK      DEIDXID,DE,SYFIID3,SYFIID4,SYIDIDX,SP70
          PACK      IDXID,SYFISYS,SYFIID3,SYIDIDX,SP70
          PACK      RLIDXID,RL,IDXID,SP70
          PACK      KLIDXID,KL,IDXID,SP70
          PACK      PLIDXID,PL,IDXID,SP70
          PACK      UUIDXID,UU,IDXID,SP70
.
GNIO1500  PACK      FILEID,SYSCID3,SYFIID3,SYFIID4,SYIDIDX
          CALL      FLIO0000
          GOTO      GNIO1000
GNIO2000
.
GNIO9000  
          COMPARE   ONE,SYFIAUD
          CALL      GAIO0000 IF EQUAL *Audit IO of Required
          SPLCLOSE
          PACK      PRNAME,TBSPOOL,SYSCID3,SYFIID3,IO,PRT
          PACK      IONAME,SYSCID3,SYFIID3,IO,INC
          PACK      COMMAND,MV,PRNAME,SP1,IONAME
          EXECUTE   COMMAND,TASKID
          DISPLAY   *P1:24,*EL,*B,"Completed - ";
          CALL      HITENTER
          RETURN
.----------------------------------------------------------------------
. FLIO0000 - File IO Routine Prints
.----------------------------------------------------------------------
FLIO0000  PACK      DIM80,SP70,SP70
. Positional Read
.
          PACK      DIM80,RSIDXID,SP2,RESKEY,DIM4
          PRINT     DIM80
          PACK      DIM80,SP10,READ,FILEID,CKEY,DIM4,SEMI,SEMI
          PRINT     DIM80
          PRINT     PRRETURN
          PRINT     PRBLANK
. Read ANS
.
          PACK      DIM80,RAIDXID,SP2,RESKEY,DIM4
          PRINT     DIM80
          PRINT     PRMOVRCD
          PACK      DIM80,SP10,READ,FILEID,CKEY,DIM4,SEMI,DISANS
          PRINT     DIM80
          PRINT     PROVER
          PRINT     PRRETURN
          PRINT     PRBLANK
. Read
.
          PACK      DIM80,RDIDXID,SP2,RESKEY,DIM4
          PRINT     DIM80
          PRINT     PRMOVRCD
          PACK      DIM80,SP70,SP70
          CLEAR     DIM80
          PACK      DIM80,SP10,READ,FILEID,CKEY,DIM4,SEMI
          CALL      PFLD0000    * Print Field List
          PRINT     PROVER
          CALL      PRER0000    * Print Redefine Read Moves
          PRINT     PRRETURN
          PRINT     PRBLANK
. Readks
.
          PACK      DIM80,RKIDXID,SHTOVRCD
          PRINT     DIM80
          PACK      DIM80,SP70,SP70
          PACK      DIM80,SP10,READKS,FILEID,SEMI
          CALL      PFLD0000    * Print Field List
          PRINT     PROVER
          CALL      PRER0000    * Print Redefine Read Moves
          PRINT     PRRETURN
          PRINT     PRBLANK
. Readkp
.
          PACK      DIM80,RPIDXID,SHTOVRCD
          PRINT     DIM80
          PACK      DIM80,SP70,SP70
          PACK      DIM80,SP10,READKP,FILEID,SEMI
          CALL      PFLD0000    * Print Field List
          PRINT     PROVER
          CALL      PRER0000    * Print Redefine Read Moves
          PRINT     PRRETURN
          PRINT     PRBLANK
. Update 
.
          PACK      DIM80,UPIDXID,SHTOVRCD
          PRINT     DIM80
          CALL      PREW0000    * Print Redefine Write Moves
          PACK      DIM80,SP70,SP70
          PACK      DIM80,SP10,UPDATE,FILEID,SEMI
          CALL      PFLD0000    * Print Field List
          COMPARE   ONE,SYFILOC
          GOTO      FLIO1000 IF NOT EQUAL
          PRINT     PRUPLOCK
FLIO1000  PRINT     PRRETURN
          PRINT     PRBLANK
. Write
.
          PACK      DIM80,WRIDXID,SP2,RESKEY,DIM4
          PRINT     DIM80
          CALL      PREW0000    * Print Redefine Write Moves
          PACK      DIM80,SP70,SP70
          PACK      DIM80,SP10,WRITE,FILEID,CKEY,DIM4,SEMI
          CALL      PFLD0000    * Print Field List
          PRINT     PRRETURN
          PRINT     PRBLANK
. Delete
.
          PACK      DIM80,DEIDXID,SP2,RESKEY,DIM4
          PRINT     DIM80
          PACK      DIM80,SP10,DELETE,FILEID,CKEY,DIM4
          PRINT     DIM80
          PRINT     PRRETURN
          PRINT     PRBLANK
          COMPARE   ONE,SYFILOC
          GOTO      FLIO9999 IF NOT EQUAL
. Readl
.
          PACK      DIM80,RLIDXID,SP2,RESKEY,DIM4
          PRINT     DIM80
          PRINT     PRMOVRCD
          PACK      DIM80,SP70,SP70
          PACK      DIM80,SP10,READL,FILEID,CKEY,DIM4,SEMI
          CALL      PFLD0000    * Print Field List
          PRINT     PROVER
          PRINT     PRLOCK
          CALL      PRER0000    * Print Redefine Read Moves
          PRINT     PRRETURN
          PRINT     PRBLANK
. Readlks
.
          PACK      DIM80,KLIDXID,SHTOVRCD,SP70
          STRIP     DIM80
          PRINT     DIM80
          PACK      DIM80,SP70,SP70
          PACK      DIM80,SP70,SP70
          PACK      DIM80,SP5,SP5,READLKS,FILEID,SEMI
          CALL      PFLD0000    * Print Field List
          PRINT     PROVER
          PRINT     PRLOCK
          CALL      PRER0000    * Print Redefine Read Moves
          PRINT     PRRETURN
          PRINT     PRBLANK
. Readlkp
.
          PACK      DIM80,PLIDXID,SHTOVRCD,SP70
          PRINT     DIM80
          PACK      DIM80,SP70,SP70
          PACK      DIM80,SP10,READLKP,FILEID,SEMI
          CALL      PFLD0000    * Print Field List
          PRINT     PROVER
          PRINT     PRLOCK
          CALL      PRER0000    * Print Redefine Read Moves
          PRINT     PRRETURN
          PRINT     PRBLANK
. Unlock 
.
          PACK      DIM80,UUIDXID,SP2,RESKEY,DIM4
          PRINT     DIM80
          PACK      DIM80,SP10,UNLOCK,FILEID,SP70
          PRINT     DIM80
          PRINT     PRRETURN
          PRINT     PRBLANK
.
FLIO9999  RETURN
.----------------------------------------------------------------------
.PFLD0000 - Print Field List
.
. Requires: DIM80 - first part of I/O command, e.g.
.                   "          READ      PMSARQA1,KEY10;"
.----------------------------------------------------------------------
PFLD0000  MOVELPTR  DIM80,LINLENTH               * save end posn for DIM80
          ASSIGN    (LINLENTH+1),STRTPOSN        * save start posn for next line
          ENDSET    DIM80                        * posn at end of DIM80
.
          MOVE      ONE,FIRST                   * set flag for 1st field on line
.
          PACK      KEY8,SYFISYS,SYFIFIL,SP70
          CALL      RSSYFL1                      * posn on system/file
PFLD1000  CALL      RKSYFL1                      * read next record
          BRANCH    OVRCD,PFLD9000               * eof - finished
.
          MATCH     SYFISYS,SYFLSYS              * same system code still ?
          GOTO      PFLD9000 IF NOT EQUAL        * no - finished
.
          MATCH     SYFIFIL,SYFLFIL              * same file code still ?
          GOTO      PFLD9000 IF NOT EQUAL        * no - finished
.
          COMPARE   TWO,SYFITIO                  * IO Type 2 ?
          GOTO      PFLD1050 IF NOT EQUAL        * no - use existing field name
.
.         We're using a Version 4 field name
.
          MOVE      SYFLV4N,DIM8                 * load version 4 name
.
          COMPARE   ONE,SYFLRED                  * redefined field ?
          GOTO      PFLD1100 IF NOT EQUAL        * no - leave name as input
.
          PACK      DIM8,ANSD,SYFLV4N            * yes - prefix with "D"
          GOTO      PFLD1100
.
.         Load the field name
.
PFLD1050  PACK      DIM8,SYFLSYS,SYFLFIL,SYFLFLD
.
          COMPARE   ONE,SYFLRED                  * redefined field ?
          GOTO      PFLD1100 IF NOT EQUAL        * no - leave name as input
.
          PACK      DIM8,ANSD,SYFLSYS,SYFLFIL,SYFLFLD   * yes - prefix with "D"
.
PFLD1100  STRIP     DIM8                         * remove trailing spaces
          MOVELPTR  DIM8,FLDLENTH                * get field name length
          ADD       FLDLENTH,LINLENTH            * add field length to line len
.
          COMPARE   SEVENTY9,LINLENTH            * line too long ?
          GOTO      PFLD2000 IF NOT LESS         * yes - move to next line
.
          BRANCH    FIRST,PFLD1500               * first line of I/O
.
          APPEND    ",",DIM80                    * subsequent lines of I/O
          ADD       ONE,LINLENTH                 * increment line length
          APPEND    DIM8,DIM80
.         CALL      SEND0000
          GOTO      PFLD1000
.
PFLD1500  MOVE      ZERO,FIRST                   * not first line
          APPEND    DIM8,DIM80
          GOTO      PFLD1000                     * get next field
.
.         Too many characters to fit on the line, so move to the next line
.
PFLD2000  APPEND    COLON,DIM80
          RESET     DIM80
          PRINT     DIM80
          PACK      DIM80,SP70,SP70
          CLEAR     DIM80
.
.         Prefix spaces to the starting position for the line
.
          MOVE      ONE,COUNTER
          WHILE     COUNTER < STRTPOSN
            APPEND    SP1,DIM80
            ADD       ONE,COUNTER
          DO
.
          APPEND    DIM8,DIM80                  * load 1st field on line
          ASSIGN    (STRTPOSN+(FLDLENTH-1)),LINLENTH    * reset line length
          GOTO      PFLD1000
         
PFLD9000  RESET     DIM80
          PRINT     DIM80
          RETURN
.
SEND0000  RESET     DIM80,80
SEND1000  
          CMATCH    SP1,DIM80
          GOTO      SEND2000 IF NOT EQUAL
.
          BUMP      DIM80,-1
          GOTO      SEND1000 IF NOT EOS
.
          CLEAR     DIM80
          GOTO      SEND9999
SEND2000  
SEND9999  RETURN
.----------------------------------------------------------------------
.PRER0000 - Print Redefines After Read 
.----------------------------------------------------------------------
PRER0000  PACK      KEY8,SYFISYS,SYFIFIL,SP70
          CALL      RSSYFL1
PRER1000  CALL      RKSYFL1
          BRANCH    OVRCD,PRER9999
          MATCH     SYFISYS,SYFLSYS
          GOTO      PRER9999 IF NOT EQUAL
          MATCH     SYFIFIL,SYFLFIL
          GOTO      PRER9999 IF NOT EQUAL
          COMPARE   ONE,SYFLRED
          GOTO      PRER1000 IF NOT EQUAL
          PACK      DIM8,ANSD,SYFLSYS,SYFLFIL,SYFLFLD
          PACK      DIM80,SP70,SP70
          PACK      DIM80,MOVE,DIM8
          CALL      SEND0000
          APPEND    ",",DIM80
          APPEND    SYFLSYS,DIM80
          APPEND    SYFLFIL,DIM80
          APPEND    SYFLFLD,DIM80
          RESET     DIM80
          PRINT     DIM80
          GOTO      PRER1000
PRER9999  RETURN
.----------------------------------------------------------------------
.PREW0000 - Print Redefines Before Write
.----------------------------------------------------------------------
PREW0000  PACK      KEY8,SYFISYS,SYFIFIL,SP70
          CALL      RSSYFL1
PREW1000  CALL      RKSYFL1
          BRANCH    OVRCD,PREW9999
          MATCH     SYFISYS,SYFLSYS
          GOTO      PREW9999 IF NOT EQUAL
          MATCH     SYFIFIL,SYFLFIL
          GOTO      PREW9999 IF NOT EQUAL
          COMPARE   ONE,SYFLRED
          GOTO      PREW1000 IF NOT EQUAL
          PACK      DIM80,SP70,SP70
          PACK      DIM80,MOVE,SYFLSYS,SYFLFIL,SYFLFLD
          CALL      SEND0000
          APPEND    ",",DIM80
          PACK      DIM8,ANSD,SYFLSYS,SYFLFIL,SYFLFLD
          APPEND    DIM8,DIM80
          PRINT     DIM80
          GOTO      PREW1000
PREW9999  RETURN
.
.----------------------------------------------------------------------
. GAIO0000 - Generate Audit IO Code
.----------------------------------------------------------------------
GAIO0000  
          BRANCH    SYFITIO,GAIO0100,GAIO0100
          PACK      IDXID,SYFISYS,SYFIFIL,SP70
          GOTO      GAIO0200
GAIO0100  PACK      IDXID,SYFISYS,SYFIID3,SP70
GAIO0200  MOVE      "  19",DIM4
          CALL      FLEN0000
          PACK      FILEID,SYSCID3,AUD,SYFIFIL
.
          PRINT     ".**************************************"
          PRINT     ". WAssff - Write Audit Record           "
          PRINT     ". Requires - AUDTTYPE 1=write "
          PRINT     ".                     2=before change"
          PRINT     ".                     3=after change"
          PRINT     ".                     4=delete"
          PRINT     ".**************************************"
          PRINT     "WA",SYFISYS,SYFIFIL,"00"
          PRINT     "          MOVE      #"",SYFIASEC,"#",AUDTSECT"
          PRINT     "          MOVE      #"",SYFIAPOS,"#",AUDTPOST"
          PRINT     "          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG"
          PRINT     "          COMPARE   ONE,AUDTFLAG"
          PRINT     "          GOTO      WA",SYFISYS,SYFIFIL,"99 IF NOT EQUAL"
          PRINT     "."
          PRINT     "          PACK     ",SYFISYS,SYFIFIL,"AUDD,CCC,CYY,CMM,CDD"
          PRINT     "          REP       #" 0#",",SYFISYS,SYFIFIL,"AUDD"
          PRINT     "          CLOCK     TIME,",SYFISYS,SYFIFIL,"AUDT"
          PRINT     "          MOVE      PORT,",SYFISYS,SYFIFIL,"AUDP"
          PRINT     "          LOAD      ",SYFISYS,SYFIFIL,"AUDR,AUDTTYPE":
                    ",ANSA,ANSB,ANSC,ANSD"
          PRINT     "          MOVE      ONE,",SYFISYS,SYFIFIL,"AUDS"
          PRINT     "          MOVE      PASSCODE,",SYFISYS,SYFIFIL,"AUDO"
          PRINT     "          PACK      KEY19,":
                    SYFISYS,SYFIFIL,"AUDD,":
                    SYFISYS,SYFIFIL,"AUDT,":
                    SYFISYS,SYFIFIL,"AUDP,":
                    SYFISYS,SYFIFIL,"AUDR"
          PRINT     "          MOVE      KEY19,AUDTSKEY"
          PRINT     "          CALL      AW",SYFISYS,SYFIFIL
          PRINT     "WA",SYFISYS,SYFIFIL,"99  RETURN"
.
          PRINT     ".**************************************"
          PRINT     ". DAssff - Delete Before Change Audit "
          PRINT     ".**************************************"
          PRINT     "DA",SYFISYS,SYFIFIL,"00"
          PRINT     "          MOVE      #"",SYFIASEC,"#",AUDTSECT"
          PRINT     "          MOVE      #"",SYFIAPOS,"#",AUDTPOST"
          PRINT     "          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG"
          PRINT     "          COMPARE   ONE,AUDTFLAG"
          PRINT     "          GOTO      DA",SYFISYS,SYFIFIL,"99 IF NOT EQUAL"
          PRINT     "."
          PRINT     "          MOVE      AUDTSKEY,KEY19"
          PRINT     "          CALL      AD",SYFISYS,SYFIFIL
          PRINT     "DA",SYFISYS,SYFIFIL,"99  RETURN"
.
. Positional Audit Read
.
          PACK      DIM80,AS,IDXID,SP2,RESKEY,DIM4
          PRINT     DIM80
          PACK      DIM80,SP10,READ,FILEID,CKEY,DIM4,SEMI,SEMI
          PRINT     DIM80
          PRINT     PRRETURN
          PRINT     PRBLANK

. Audit Readks
.
          PACK      DIM80,AK,IDXID
          PRINT     DIM80
          PRINT     PRMOVRCD
          PACK      DIM80,SP70,SP70
          PACK      DIM80,SP10,READKS,FILEID,SEMI,SYFISYS,SYFIFIL,AUDD,COMMA:
                          SYFISYS,SYFIFIL,AUDT,COMMA,SYFISYS,SYFIFIL,AUDP,COMMA:
                          SYFISYS,SYFIFIL,AUDR,COMMA,SYFISYS,SYFIFIL,AUDS,COLON
          PRINT     DIM80
          PACK      DIM80,SP70,SP70
          PACK      DIM80,SP10,SP10,SYFISYS,SYFIFIL,AUDO,COMMA
          CALL      PFLD0000    * Print Field List
          CALL      PRER0000 
          PRINT     PROVER
          PRINT     PRRETURN
          PRINT     PRBLANK
. Audit Update
.
          PACK      DIM80,AU,IDXID
          PRINT     DIM80
          CALL      PREW0000 
          PACK      DIM80,SP70,SP70
          PACK      DIM80,SP10,UPDATE,FILEID,SEMI,SYFISYS,SYFIFIL,AUDD,COMMA:
                          SYFISYS,SYFIFIL,AUDT,COMMA,SYFISYS,SYFIFIL,AUDP,COMMA:
                          SYFISYS,SYFIFIL,AUDR,COMMA,SYFISYS,SYFIFIL,AUDS,COLON
          PRINT     DIM80
          PACK      DIM80,SP70,SP70
          PACK      DIM80,SP10,SP10,SYFISYS,SYFIFIL,AUDO,COMMA
          CALL      PFLD0000    * Print Field List
          PRINT     PRRETURN
          PRINT     PRBLANK
. Audit Write
.
          PACK      DIM80,AW,IDXID,SP2,RESKEY,DIM4
          PRINT     DIM80
          CALL      PREW0000 
          PACK      DIM80,SP70,SP70
          PACK      DIM80,SP10,WRITE,FILEID,CKEY,DIM4,SEMI:
                          SYFISYS,SYFIFIL,AUDD,COMMA,SYFISYS,SYFIFIL,AUDT,COMMA:
                          SYFISYS,SYFIFIL,AUDP,COMMA,SYFISYS,SYFIFIL,AUDR,COMMA:
                          SYFISYS,SYFIFIL,AUDS,COLON
          PRINT     DIM80
          PACK      DIM80,SP70,SP70
          PACK      DIM80,SP10,SP10,SYFISYS,SYFIFIL,AUDO,COMMA
          CALL      PFLD0000    * Print Field List
          PRINT     PRRETURN
          PRINT     PRBLANK
. Audit Delete
.
          PACK      DIM80,AD,IDXID,SP2,RESKEY,DIM4
          PRINT     DIM80
          PACK      DIM80,SP10,DELETE,FILEID,CKEY,DIM4,SEMI
          PRINT     DIM80
          PRINT     PRRETURN
          PRINT     PRBLANK
.
          RETURN
.******************************************************************************
.* INIT - Open Files                             Called by ML0000             *
.******************************************************************************
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P50:24,"Opening sysscfa1";
          OPEN      SYSSCFA1,"sysscfaf"
          DISPLAY   *P50:24,"Opening sysfila1";
          OPEN      SYSFILA1,"sysfilaf"
          DISPLAY   *P50:24,"Opening sysfila2"; 
          OPEN      SYSFILA2,"sysfilaf"
          DISPLAY   *P50:24,"Opening sysflda1";
          OPEN      SYSFLDA1,"sysfldaf"
          DISPLAY   *P50:24,"Opening sysflda2"; 
          OPEN      SYSFLDA2,"sysfldaf"
          DISPLAY   *P50:24,"Opening sysidxa1";
          OPEN      SYSIDXA1,"sysidxaf"
          DISPLAY   *P50:24,"Opening syscoma1";
          OPEN      SYSCOMA1,"syscomaf"
.
          CALL      TFILENAM
          MOVE      TFILNAME,FILENAME
          CALL      TFILENAM
          MOVE      TFILNAME,VERSNAME
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.******************************************************************************
.* SCRA - Display Screen A         
.*        Requires : ACCEPT   (1=accept mode)                                  *
.******************************************************************************
SCRA0000  DISPLAY   *P1:4,*EF,"    System Code          : ":
                    *V2LON,SYSCSYS,*HOFF,SP1,SYSCDES:
                    *P1:5,"    File Code            : ",*V2LON,SYFIFIL:
                    *P1:7," 1",*HOFF,". Description          : ",*V2LON:
                    *P1:8," 2",*HOFF,". File Id              : ",*V2LON:
                    *P1:9," 3",*HOFF,". Audit File (Y/N)     : ",*V2LON:
                    *P1:10," 4",*HOFF,". I/O Type (0,1,2)     : ",*V2LON:
                    *P1:11," 5",*HOFF,". Seventh Character    : ",*V2LON:
                    *P1:12," 6",*HOFF,". Audit Control Sector : ",*V2LON:
                    *P1:13," 7",*HOFF,".               Pos.   : ",*V2LON:
                    *P1:14," 8",*HOFF,". I/O Record Lock (Y/N): ";
          BRANCH    ACCEPT,SCRA9999    * accept mode
.
          ADD       ONE,SYFIAUD
          LOAD      YESNO,SYFIAUD,NO,YES
          SUB       ONE,SYFIAUD
          ADD       ONE,SYFITIO
          LOAD      IOTYPE,SYFITIO,IOTYPE0,IOTYPE1,IOTYPE2
          SUB       ONE,SYFITIO
          DISPLAY   *P28:7,*V2LON,SYFIDES:
                    *P28:8,*V2LON,SYFIID3:
                    *P28:9,*V2LON,YESNO:
                    *P28:10,*V2LON,SYFITIO,*HOFF,SP1,IOTYPE:
                    *P28:11,*V2LON,SYFIID4:
                    *P28:12,*V2LON,SYFIASEC:
                    *P28:13,*V2LON,SYFIAPOS
          ADD       ONE,SYFILOC
          LOAD      YESNO,SYFILOC,NO,YES
          SUB       ONE,SYFILOC
          DISPLAY   *P28:14,*V2LON,YESNO
.
SCRA9999  RETURN
.******************************************************************************
.* SCRB - Display Screen B
.*        Requires : ACCEPT   (1=accept mode)                                  *
.******************************************************************************
SCRB0000  DISPLAY   *P1:4,*EF,"    System Code          : ":
                    *V2LON,SYSCSYS,*HOFF,SP1,SYSCDES:
                    *P1:5,"    File Code            : ":
                    *V2LON,SYFIFIL,*HOFF,SP1,SYFIDES:
                    *P1:7,*V2LON,*ULON,"Item":
                    *P6:7,"Field",*P13:7,"Type",*P19:7,"Length":
                    *P27:7,"Description"
          COMPARE   TWO,SYFITIO
          GOTO      SCRB9999 IF NOT EQUAL
          DISPLAY   *V2LON,*ULON,*P63:7,"Field Name V4"
SCRB9999  RETURN
.******************************************************************************
.* SCRC - Display Screen C         
.*        Requires : ACCEPT   (1=accept mode)                                  *
.******************************************************************************
SCRC0000  DISPLAY   *P1:4,*EF,"    System Code          : ":
                    *V2LON,SYSCSYS,*HOFF,SP1,SYSCDES:
                    *P1:5,"    File Code            : ":
                    *V2LON,SYFIFIL,*HOFF,SP1,SYFIDES:
                    *P1:6,"    Index Number         : ",*V2LON:
                    *P1:8," 1",*HOFF,". Description          : ",*V2LON:
                    *P1:9," 2",*HOFF,". Field Segment 1      : ",*V2LON:
                    *P1:10," 3",*HOFF,". Field Segment 2      : ",*V2LON:
                    *P1:11," 4",*HOFF,". Field Segment 3      : ",*V2LON:
                    *P1:12," 5",*HOFF,". Field Segment 4      : ",*V2LON:
                    *P1:13," 6",*HOFF,". Field Segment 5      : ",*V2LON:
                    *P1:14," 7",*HOFF,". Field Segment 6      : ",*V2LON:
                    *P1:15," 8",*HOFF,". Field Segment 7      : ",*V2LON:
                    *P1:16," 9",*HOFF,". Field Segment 8      : ",*V2LON:
                    *P1:18,"10",*HOFF,". Index accepts duplicates (Y/N) : "
SCRC9999  RETURN
.
DISC0000  DISPLAY   *P28:6,*V2LON,SYIDIDX
          DISPLAY   *P28:8,*V2LON,SYIDDES
          DISPLAY   *P28:9,*EL:
                    *P28:10,*EL:
                    *P28:11,*EL:
                    *P28:12,*EL:
                    *P28:13,*EL:
                    *P28:14,*EL:
                    *P28:15,*EL:
                    *P28:16,*EL:
                    *P38:18,*EL
          MATCH     SP70,SYIDFL1
          GOTO      DISC9999 IF EQUAL
          PACK      KEY8,SYFISYS,SYFIFIL,SYIDFL1
          CALL      RDSYFL2
          DISPLAY   *P28:9,*V2LON,SYIDFL1,*HOFF,SP1,SYFLDES
          DISPLAY   *P38:18,*V2LON,SYIDIUD
.
          MATCH     SP70,SYIDFL2
          GOTO      DISC9999 IF EQUAL
          PACK      KEY8,SYFISYS,SYFIFIL,SYIDFL2
          CALL      RDSYFL2
          DISPLAY   *P28:10,*V2LON,SYIDFL2,*HOFF,SP1,SYFLDES
.
          MATCH     SP70,SYIDFL3
          GOTO      DISC9999 IF EQUAL
          PACK      KEY8,SYFISYS,SYFIFIL,SYIDFL3
          CALL      RDSYFL2
          DISPLAY   *P28:11,*V2LON,SYIDFL3,*HOFF,SP1,SYFLDES
.
          MATCH     SP70,SYIDFL4
          GOTO      DISC9999 IF EQUAL
          PACK      KEY8,SYFISYS,SYFIFIL,SYIDFL4
          CALL      RDSYFL2
          DISPLAY   *P28:12,*V2LON,SYIDFL4,*HOFF,SP1,SYFLDES
.
          MATCH     SP70,SYIDFL5
          GOTO      DISC9999 IF EQUAL
          PACK      KEY8,SYFISYS,SYFIFIL,SYIDFL5
          CALL      RDSYFL2
          DISPLAY   *P28:13,*V2LON,SYIDFL5,*HOFF,SP1,SYFLDES
.
          MATCH     SP70,SYIDFL6
          GOTO      DISC9999 IF EQUAL
          PACK      KEY8,SYFISYS,SYFIFIL,SYIDFL6
          CALL      RDSYFL2
          DISPLAY   *P28:14,*V2LON,SYIDFL6,*HOFF,SP1,SYFLDES
.
          MATCH     SP70,SYIDFL7
          GOTO      DISC9999 IF EQUAL
          PACK      KEY8,SYFISYS,SYFIFIL,SYIDFL7
          CALL      RDSYFL2
          DISPLAY   *P28:15,*V2LON,SYIDFL7,*HOFF,SP1,SYFLDES
.
          MATCH     SP70,SYIDFL8
          GOTO      DISC9999 IF EQUAL
          PACK      KEY8,SYFISYS,SYFIFIL,SYIDFL8
          CALL      RDSYFL2
          DISPLAY   *P28:16,*V2LON,SYIDFL8,*HOFF,SP1,SYFLDES
.
DISC9999  RETURN
.******************************************************************************
.* PROC - Enter Code                             Called by ML0000             *
.*        Returns : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.) *
.*                  FMDSDISS (variable entered)                               *
.******************************************************************************
PROC0000  MOVE      ZERO,EXIT
          PACK      KEY34,SYFISYS,SYFIFIL,SYFIDES,SP30
          IF        COPTION = 2 | COPTION = 4
            MATCH     SP2,SYFISYS
            GOTO      PROC1000 IF EOS
            IF        !@EQUAL
              MATCH     SP2,SYFIFIL
              GOTO      PROC9500 IF NOT EQUAL
            ENDIF
          ENDIF
          UNPACK    SP70,SYFISYS,SYFIFIL,SYFIDES
.
PROC1000  DISPLAY   *P1:4,"    System Code          : ",*EF;
          DISPLAY   *P1:5,"    File Code            : ",*EF;
.
          MOVE      "28",CCOL          * set up screen address
          MOVE      "4",CVERT
          CALL      KSYSCA00
          BRANCH    EXIT,PROC9000,PROC9000
          DISPLAY   *PCCOL:CVERT,*V2LON,SYSCSYS,*HOFF,SP1,SYSCDES
          MOVE      SYSCSYS,SYFISYS
          UNPACK    SP70,SYFIFIL,SYFIDES
          MOVE      "5",CVERT
.
PROC3000  MOVE      ZERO,CKEYTYP       * change mode
          COMPARE   ONE,COPTION        
          GOTO      PROC4000 IF NOT EQUAL
          MOVE      ONE,CKEYTYP        * insert mode (Add mode)
          MOVE      ZERO,SYFIVERS      * (should clear SYFI... here)  *I-218862
.
PROC4000  CALL      KSYFIA00
          IF        EXIT <> 0
            UNPACK    SP70,SYFISYS,SYFIFIL,SYFIDES
          ENDIF
          GOTO      PROC9500
.
.
PROC9000  UNPACK    KEY34,SYFISYS,SYFIFIL,SYFIDES
          MOVE      SYFISYS,SYSCSYS 
.
PROC9500  MOVE      ZERO,CKEYTYP
PROC9999  RETURN
.******************************************************************************
.* SELA - Modify screen A data                   Called by ML0000             *
.*        Returns : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.) *
.*                  FMDSDISS (variable entered)                               *
.******************************************************************************
SELA0000  MOVE      ZERO,CCITEM
.
.---- determine option to execute ----
.
SELA0100  ADD       ONE,CCITEM                   * get next option
          BRANCH    ACCEPT,SELA0500              * in accept mode ?
          CALL      MAINQST                      * select/post/cancel ?
.
          COMPARE   ZERO,CCITEM
          GOTO      SELA9000 IF EQUAL            * post ?
.
          COMPARE   SEQ,CCITEM
          GOTO      SELA9500 IF EQUAL            * cancel ?
.
SELA0500  MOVE      "28",CCOL                    * set up screen address
          MOVE      "6",CVERT
          ADD       CCITEM,CVERT
          BRANCH    CCITEM,SELA1100,SELA1200,SELA1300,SELA1400,SELA1500:
                           SELA1600,SELA1700,SELA1800
.
          BRANCH    ACCEPT,SELA0900              * finished accept mode ?
          BEEP                                   * illegal option
.
SELA0900  MOVE      ZERO,ACCEPT                  * clear accept mode
          GOTO      SELA0100                     * get next option
.
.---- option 1 ----
.
SELA1100  KEYIN     *PCCOL:CVERT,*V2LON,SYFIDES   * read in description
          PACK      SYFIDES,SYFIDES,SP70
.
          MATCH     SYFIDES,SP70
          GOTO      SELA1150 IF NOT EQUAL        * description spaces ?
          PACK      SYFIDES,SYSCDES,UNDLN70
.
SELA1150  MATCH     SYFIDES,UNDLN70
          GOTO      SELA1190 IF EQUAL            * nothing entered ?
          GOTO      SELA0100
.
SELA1190  DISPLAY   *P1:24,*EL,*B:               * nothing entered
                    "A Description Must Be Entered - ";
          CALL      HITENTER
          GOTO      SELA1100
.
SELA1200  MOVE      ONE,CKEYTYP
          CALL      KSYFIB00
          BRANCH    EXIT,SELA1200,SELA1200
          MOVE      ZERO,CKEYTYP
          GOTO      SELA0100
.
SELA1300  CALL      YORN0000
          MOVE      FYESNO,SYFIAUD
          GOTO      SELA0100
.
SELA1400  DISPLAY   *P1:24,"I/O Type : 0 - 2/2 Coding, 1 - 2/3 Coding":
                    ", 2 -  Version 4 Coding"
          KEYIN     *PCCOL:CVERT,*V2LON,SYFITIO:
                    *PCCOL:CVERT,*DV,SYFITIO
          ADD       ONE,SYFITIO
          BRANCH    SYFITIO,SELA1410,SELA1410,SELA1410
          BEEP
          GOTO      SELA1400
.
SELA1410  LOAD      IOTYPE,SYFITIO,IOTYPE0,IOTYPE1,IOTYPE2
          SUB       ONE,SYFITIO
          DISPLAY   *PCCOL:CVERT,*V2LON,SYFITIO,*HOFF,SP1,IOTYPE
          GOTO      SELA0100
.
SELA1500  KEYIN     *PCCOL:CVERT,*V2LON,SYFIID4
          REP       UPPLOW,SYFIID4
          MATCH     SP1,SYFIID4
          GOTO      SELA1550 IF NOT EQUAL
          MOVE      "A",SYFIID4
SELA1550  DISPLAY   *PCCOL:CVERT,*V2LON,SYFIID4
          GOTO      SELA0100
.
SELA1600  COMPARE   ZERO,SYFIAUD
          GOTO      SELA0100 IF EQUAL
          KEYIN     *PCCOL:CVERT,*V2LON,SYFIASEC:
                    *PCCOL:CVERT,*DV,*V2LON,SYFIASEC
          GOTO      SELA0100
.
SELA1700  COMPARE   ZERO,SYFIAUD
          GOTO      SELA0100 IF EQUAL
          KEYIN     *PCCOL:CVERT,*V2LON,SYFIAPOS:
                    *PCCOL:CVERT,*DV,*V2LON,SYFIAPOS
          GOTO      SELA0100
.
SELA1800  CALL      YORN0000
          MOVE      FYESNO,SYFILOC
          GOTO      SELA0100
.
.---- exit points ----
.
SELA9000  MOVE      ZERO,EXIT                    * post
          GOTO      SELA9999
.
SELA9500  MOVE      ONE,EXIT                     * cancel
          IF        COPTION = 1
            UNPACK    SP70,SYFIFIL,SYFIDES
          ENDIF
.
SELA9999  RETURN
.******************************************************************************
.* POST - Post data                              Called by ML0000             *
.******************************************************************************
POST0000  PACK      KEY4,SYSCSYS,SYFIFIL,SP70
          MOVE      SYSCSYS,SYFISYS
          CALL      DESYFI1                 * delete old record (if possible)
          CALL      WRSYFI1                 * write new record
.
POST9999  RETURN
.******************************************************************************
.* POSC - Post data                              Called by ML0000             *
.******************************************************************************
POSC0000  PACK      KEY5,SYFISYS,SYFIFIL,SYIDIDX
          MOVE      SYFISYS,SYIDSYS
          MOVE      SYFIFIL,SYIDFIL
          CALL      DESYID1                 * delete old record (if possible)
          CALL      WRSYID1                 * write new record
.
POSC9999  RETURN
.******************************************************************************
.* DELT - Delete Index and Field Data    
.******************************************************************************
DELT0000  PACK      KEY4,SYSCSYS,SYFIFIL,SP70
          MOVE      SYSCSYS,SYFISYS
          CALL      RDSYFI1
          CALL      DESYFI1                 * delete old record (if possible)
          PACK      KEY8,SYFISYS,SYFIFIL,SP70
          CALL      RSSYFL1
DELT1000  CALL      RKSYFL1
          BRANCH    OVRCD,DELT2000
          MATCH     SYFLSYS,SYFISYS
          GOTO      DELT2000 IF NOT EQUAL
          MATCH     SYFLFIL,SYFIFIL
          GOTO      DELT2000 IF NOT EQUAL
          PACK      KEY8,SYFLSYS,SYFLFIL,SYFLNUM
          CALL      DESYFL1
          CALL      RSSYFL1
          GOTO      DELT1000
.
DELT2000  PACK      KEY5,SYFISYS,SYFIFIL,SP70
          CALL      RSSYID1
DELT3000  CALL      RKSYID1
          BRANCH    OVRCD,DELT9999
          MATCH     SYIDSYS,SYFISYS
          GOTO      DELT9999 IF NOT EQUAL
          MATCH     SYIDFIL,SYFIFIL
          GOTO      DELT9999 IF NOT EQUAL
          PACK      KEY5,SYIDSYS,SYIDFIL,SYIDIDX
          CALL      DESYID1
          CALL      RSSYID1
          GOTO      DELT3000
.
DELT9999  RETURN
.----------------------------------------------------------------------
. Field Input
.----------------------------------------------------------------------
SELB0000  MOVE      ONE,XITEMNO
          BRANCH    ACCEPT,SELB3000
          SUB       ONE,XITEMNO
          MOVE      "7",LSTDROW
          DISPLAY   *P1:8,*EF
          PACK      KEY8,SYFISYS,SYFIFIL,SP70
.
          CALL      RSSYFL1
SELB1000  CALL      RKSYFL1
          BRANCH    OVRCD,SELB1200
          MATCH     SYFLSYS,SYFISYS
          GOTO      SELB1200 IF NOT EQUAL
          MATCH     SYFLFIL,SYFIFIL
          GOTO      SELB1200 IF NOT EQUAL
          ADD       ONE,XITEMNO
          ADD       ONE,LSTDROW
          PACK      KEY8,SYFLSYS,SYFLFIL,SYFLNUM
          STORE     KEY8,XITEMNO,ST1,ST2,ST3,ST4,ST5:
                                 ST6,ST7,ST8,ST9,ST10:
                                 ST11,ST12,ST13,ST14,ST15:
                                 ST16,ST17,ST18,ST19,ST20:
                                 ST21,ST22,ST23,ST24,ST25
          MOVE      DTYPE0,DTYPE
          SUB       SYFLRED,SYFLTYP
          LOAD      DTYPE,SYFLTYP,DTYPE1
          ADD       SYFLRED,SYFLTYP
          MOVE      SYFLLEN,DLEN
          BRANCH    SYFLTYP,SELB1100
          MOVE      SYFLLEN,F3
          MOVE      F3,DLEN
.
SELB1100  MOVE      ZERO,F1
          MOVE      " 1",KEY2
          MOVE      SP10,SYCOMMT
          PACK      KEY10,SYFLSYS,SYFLFIL,SYFLFLD,KEY2,SP10
          CALL      RDSYCM1
          IF        OVRCD = 0
            MOVE      "+ Comment/s",SYCOMMT
          ENDIF
.
          DISPLAY   *P1:LSTDROW,SP1,*V2LON,XITEMNO,DOT,*HOFF:
                    *P6:LSTDROW,SYFLFLD:
                    *P13:LSTDROW,DTYPE:
                    *P20:LSTDROW,DLEN:
                    *P27:LSTDROW,SYFLDES:
                    *P64:LSTDROW,SYCOMMT
          COMPARE   TWO,SYFITIO
          GOTO      SELB1150 IF NOT EQUAL
          DISPLAY   *P63:LSTDROW,SYFLV4N
.
SELB1150  COMPARE   "15",XITEMNO
          GOTO      SELB1000 IF NOT EQUAL
.
SELB1200  MOVE      ONE,LDITEM
          MOVE      "7",DLROW
          ADD       ONE,DLROW
          MOVE      ST1,KEY8
          CALL      RDSYFL1
          DISPLAY   *P2:DLROW,*V2LON,*HON,LDITEM,DOT
.
SELB2000  MOVE      SP1,ANS
          MOVE      ZERO,EXIT
          KEYIN     *P1:24,"(",*V2LON,*DV,ANSI,*HOFF,")nsert, (":
                    *V2LON,*DV,ANSD,*HOFF:
                    ")elete, (",*V2LON,*DV,ANSM,*HOFF,")odify, (":
                    *V2LON,*DV,ANSC,*HOFF:
                    ")omments, (",*V2LON,*DV,ANSL,*HOFF,")oad, (":
                    *V2LON,*DV,ANSE,*HOFF:
                    ")xit ? ",*NOEDIT,*V2LON,ANS
          GOTO      SELB8100 IF PAGEDOWN
          GOTO      SELB8200 IF PAGEUP
          GOTO      SELB8500 IF UP
          GOTO      SELB8600 IF DOWN
          RESET     ANS
SELB2005  REP       UPPLOW,ANS
          MATCH     "E",ANS
          GOTO      SELB9999 IF EQUAL
          MATCH     "X",ANS
          GOTO      SELB9999 IF EQUAL
          MATCH     "I",ANS
          GOTO      SELB3000 IF EQUAL
          MATCH     "D",ANS
          GOTO      SELB5000 IF EQUAL
          MATCH     "M",ANS
          GOTO      SELB4000 IF EQUAL
          MATCH     "L",ANS
          GOTO      SELB6000 IF EQUAL
          MATCH     "C",ANS
          GOTO      SELB7000 IF EQUAL
          GOTO      SELB2000 
.
SELB3000  COMPARE   ZERO,ACCEPT
          GOTO      SELB3100 IF EQUAL
          MOVE      ONE,F4
          MOVE      F4,SAVNUM
          MOVE      "7",DLROW
          MOVE      ZERO,XITEMNO
          GOTO      SELB3200

SELB3100  LOAD      SAVKEY8,LDITEM,ST1,ST2,ST3,ST4,ST5:
                                  ST6,ST7,ST8,ST9,ST10:
                                  ST11,ST12,ST13,ST14,ST15:
                                  ST16,ST17,ST18,ST19,ST20:
                                  ST21,ST22,ST23,ST24,ST25
          CALL      MOVD0000
          UNPACK    SAVKEY8,SYFLSYS,SYFLFIL,SYFLNUM
          MOVE      SYFLNUM,F4
          ADD       ONE,F4
          MOVE      F4,SAVNUM               * position after highlighted field
          MOVE      "7",DLROW
          MOVE      ZERO,XITEMNO
.
SELB3200  ADD       ONE,XITEMNO
          ADD       ONE,DLROW
          COMPARE   "23",DLROW
          GOTO      SELB3210 IF NOT EQUAL
          DISPLAY   *P1:8,*EF
          MOVE      "8",DLROW
          MOVE      ONE,XITEMNO
.
SELB3210  DISPLAY   *P1:DLROW,*EF,SP1,XITEMNO,DOT
.
          MOVE      DLROW,CVERT
          MOVE      "6",CCOL
          MOVE      ONE,CKEYTYP
          MOVE      SYFISYS,SYFLSYS
          MOVE      SYFIFIL,SYFLFIL
          CALL      KSYFLA00
          MOVE      ZERO,CKEYTYP
          BRANCH    EXIT,SELB3900,SELB3900

          MATCH     SYFLFLD,AUDD
          GOTO      SELB3220 IF EQUAL
          MATCH     SYFLFLD,AUDT
          GOTO      SELB3220 IF EQUAL
          MATCH     SYFLFLD,AUDP
          GOTO      SELB3220 IF EQUAL
          MATCH     SYFLFLD,AUDR
          GOTO      SELB3220 IF EQUAL
          MATCH     SYFLFLD,AUDS
          GOTO      SELB3220 IF EQUAL
          MATCH     SYFLFLD,AUDO
          GOTO      SELB3230 IF NOT EQUAL
SELB3220  DISPLAY   *P1:24,*EL,*B,"Invalid Field Name (Audit Use Only) - ";
          CALL      HITENTER
          GOTO      SELB3210
.
SELB3230  DISPLAY   *P6:DLROW,SYFLFLD
.
SELB3240  MOVE      "13",CCOL
          DISPLAY   *P1:24,*EL,"Type : 0 = DIM, 1 = FORM"
          KEYIN     *PCCOL:DLROW,SYFLTYP
          MOVE      DTYPE0,DTYPE
          COMPARE   ZERO,SYFLTYP
          GOTO      SELB3250 IF EQUAL
          MOVE      DTYPE1,DTYPE
          COMPARE   ONE,SYFLTYP
          GOTO      SELB3240 IF NOT EQUAL
.
SELB3250  DISPLAY   *PCCOL:DLROW,DTYPE
.
          BRANCH    SYFLTYP,SELB3300
          MOVE      "22",CCOL
          KEYIN     *PCCOL:DLROW,F3:
                    *PCCOL:DLROW,*HOFF,*DV,F3
          MOVE      F3,SYFLLEN
          GOTO      SELB3400
.
SELB3300  MOVE      "20",CCOL
          KEYIN     *PCCOL:DLROW,SYFLLEN:
                    *PCCOL:DLROW,*HOFF,*DV,SYFLLEN
SELB3400  COMPARE   ZERO,SYFLLEN
          GOTO      SELB3240 IF EQUAL
          MOVE      "27",CCOL
          KEYIN     *PCCOL:DLROW,SYFLDES:
                    *PCCOL:DLROW,*HOFF,*DV,SYFLDES
          PACK      SYFLV4N,SYFISYS,SYFIFIL,SYFLFLD
          COMPARE   TWO,SYFITIO
          GOTO      SELB3500 IF NOT EQUAL
          KEYIN     *P63:DLROW,*V2LON,SYFLV4N,*HOFF:
                    *P63:DLROW,*DV,SYFLV4N
SELB3500  PACK      KEY8,SYFISYS,SYFIFIL,SAVNUM
          UNPACK    KEY8,SYFLSYS,SYFLFIL,SYFLNUM
          CALL      WRSYFL1
          CALL      RDSYFL1
          PACK      SAVKEY8,SYFLSYS,SYFLFIL,SYFLNUM
          CALL      MOVD0000
          UNPACK    SAVKEY8,SYFLSYS,SYFLFIL,SYFLNUM
          MOVE      SYFLNUM,F4
          ADD       ONE,F4
          MOVE      F4,SAVNUM
          GOTO      SELB3200
.
SELB3900  CALL      RNUM0000       * Renumber Fd
          MOVE      ZERO,ACCEPT
          GOTO      SELB0000
.
SELB4000  LOAD      SAVKEY8,LDITEM,ST1,ST2,ST3,ST4,ST5:
                                  ST6,ST7,ST8,ST9,ST10:
                                  ST11,ST12,ST13,ST14,ST15:
                                  ST16,ST17,ST18,ST19,ST20:
                                  ST21,ST22,ST23,ST24,ST25
          MOVE      SAVKEY8,KEY8
          UNPACK    SAVKEY8,SYFLSYS,SYFLFIL,SYFLNUM
.
          CALL      RDSYFL1
.
          MOVE      DTYPE0,DTYPE
          COMPARE   ZERO,SYFLTYP
          GOTO      SELB4100 IF EQUAL
          MOVE      DTYPE1,DTYPE
SELB4100  DISPLAY   *P13:DLROW,DTYPE:                  *  ",*W2" delay removed
                    *P1:24,*EL,"Type : 0 = DIM, 1 = FORM"
.
SELB4200  MOVE      "13",CCOL
          KEYIN     *PCCOL:DLROW,SYFLTYP
          MOVE      DTYPE0,DTYPE
          COMPARE   ZERO,SYFLTYP
          GOTO      SELB4250 IF EQUAL
          MOVE      DTYPE1,DTYPE
          COMPARE   ONE,SYFLTYP
          GOTO      SELB4200 IF NOT EQUAL
.
SELB4250  DISPLAY   *PCCOL:DLROW,DTYPE:
                    *P1:24,*EL
          BRANCH    SYFLTYP,SELB4300
.
          MOVE      SYFLLEN,F3
          MOVE      "20",CCOL
          KEYIN     *PCCOL:DLROW,*RV,F3:
                    *PCCOL:DLROW,*HOFF,*DV,F3
          MOVE      F3,SYFLLEN
          DISPLAY   *PCCOL:DLROW,F3,SP2
          GOTO      SELB4400
.
SELB4300  MOVE      "20",CCOL
          KEYIN     *PCCOL:DLROW,*RV,SYFLLEN:
                    *PCCOL:DLROW,*HOFF,*DV,SYFLLEN
          DISPLAY   *PCCOL:DLROW,SYFLLEN,SP1
.
SELB4400  COMPARE   ZERO,SYFLLEN
          GOTO      SELB4200 IF EQUAL
          MOVE      "27",CCOL
          KEYIN     *PCCOL:DLROW,*RV,SYFLDES:
                    *PCCOL:DLROW,*HOFF,*DV,SYFLDES
          PACK      SYFLV4N,SYFISYS,SYFIFIL,SYFLFLD
          COMPARE   TWO,SYFITIO
          GOTO      SELB4500 IF NOT EQUAL
          KEYIN     *P63:DLROW,*V2LON,SYFLV4N,*HOFF:
                    *P63:DLROW,*DV,SYFLV4N
.
SELB4500  PACK      KEY8,SYFISYS,SYFIFIL,SYFLNUM
          CALL      UPSYFL1
.
SELB4999  MOVE      ZERO,ACCEPT
          GOTO      SELB0000
.
SELB5000  LOAD      SAVKEY8,LDITEM,ST1,ST2,ST3,ST4,ST5:
                                  ST6,ST7,ST8,ST9,ST10:
                                  ST11,ST12,ST13,ST14,ST15:
                                  ST16,ST17,ST18,ST19,ST20:
                                  ST21,ST22,ST23,ST24,ST25
          MOVE      SAVKEY8,KEY8
          CALL      DESYFL1
          CALL      RNUM0000
          GOTO      SELB0000
.
SELB6000  CALL      LOAD0000
          BRANCH    EXIT,SELB0000,SELB0000
          GOTO      SELB2000
.
SELB7000  PREP      TEMPFILE,FILENAME
          LOAD      KEY8,LDITEM,ST1,ST2,ST3,ST4,ST5:
                                  ST6,ST7,ST8,ST9,ST10:
                                  ST11,ST12,ST13,ST14,ST15:
                                  ST16,ST17,ST18,ST19,ST20:
                                  ST21,ST22,ST23,ST24,ST25
          CALL      SAVE0000            * save current screen
          CALL      RDCM0000            * read in existing comments
          CALL      WPRC0000            * call word processor
          CALL      DRAW0000            * redisplay screen           * moved up
          BRANCH    EXIT,SELB7500       * reply from WPRC0000
          CALL      PSCM0000            * Ok to post comments ?
          BRANCH    OVRCD,SELB7999
.
SELB7500  CALL      WRCM0000            * write data to comments file
          MOVE      LDITEM,FORM2
          ADD       "7",FORM2
          DISPLAY   *P60:FORM2,*EL
          MATCH     "1",KEY1
          IF        @EQUAL
            DISPLAY   *P60:FORM2,"+ Comment/s"
          ENDIF
.
SELB7999  GOTO      SELB2000
.
SELB8100  
          LOAD      KEY8,XITEMNO,ST1,ST2,ST3,ST4,ST5:
                                 ST6,ST7,ST8,ST9,ST10:
                                 ST11,ST12,ST13,ST14,ST15:
                                 ST16,ST17,ST18,ST19,ST20:
                                 ST21,ST22,ST23,ST24,ST25
          CALL      RSSYFL1                * Page Down
          CALL      RKSYFL1                * Page Down
          BRANCH    OVRCD,SELB8700
          MATCH     SYFLSYS,SYFISYS
          GOTO      SELB8700 IF NOT EQUAL
          MATCH     SYFLFIL,SYFIFIL
          GOTO      SELB8700 IF NOT EQUAL
          CALL      RPSYFL1
          MOVE      ZERO,XITEMNO            
          MOVE      "7",LSTDROW
          DISPLAY   *P1:8,*EF
          GOTO      SELB1000
.
SELB8200  MOVE      ST1,KEY8                * Page Up
          CALL      RDSYFL1
          CALL      RPSYFL1
          BRANCH    OVRCD,SELB8700     * No Previous Page Invalid Selection
          MATCH     SYFLSYS,SYFISYS
          GOTO      SELB8700 IF NOT EQUAL
          MATCH     SYFLFIL,SYFIFIL
          GOTO      SELB8700 IF NOT EQUAL
.
          DISPLAY   *P1:8,*EF
          MOVE      "7",LSTDROW
          MOVE      "15",XITEMNO
SELB8210  CALL      RPSYFL1                 
          BRANCH    OVRCD,SELB8220
          MATCH     SYFLSYS,SYFISYS
          GOTO      SELB8220 IF NOT EQUAL
          MATCH     SYFLFIL,SYFIFIL
          GOTO      SELB8220 IF NOT EQUAL
          SUB       ONE,XITEMNO
          COMPARE   ZERO,XITEMNO
          GOTO      SELB8210 IF NOT EQUAL
SELB8220  MOVE      ZERO,XITEMNO
          GOTO      SELB1000
.
SELB8300  MOVE      ST1,KEY8                * Home
          CALL      RDSYFL1
          CALL      RPSYFL1
          BRANCH    OVRCD,SELB8900     * No Previous Page Invalid Selection
          MATCH     SYFLSYS,SYFISYS
          GOTO      SELB8900 IF NOT EQUAL
          MATCH     SYFLFIL,SYFIFIL
          GOTO      SELB8900 IF NOT EQUAL
          DISPLAY   *P1:8,*EF
          GOTO      SELB0000
.
SELB8400  CALL      RKSYFL1                 * End
          BRANCH    OVRCD,SELB8700
          MATCH     SYFLSYS,SYFISYS
          GOTO      SELB8700 IF NOT EQUAL
          MATCH     SYFLFIL,SYFIFIL
          GOTO      SELB8700 IF NOT EQUAL
          DISPLAY   *P1:8,*EF
          MOVE      ZERO,XITEMNO
          PACK      KEY8,SYFISYS,SYFIFIL,Z70
          MOVE      "7",LSTDROW
          MOVE      "15",XITEMNO
          CALL      RSSYFL1
SELB8410  CALL      RPSYFL1                 
          BRANCH    OVRCD,SELB8420
          MATCH     SYFLSYS,SYFISYS
          GOTO      SELB8420 IF NOT EQUAL
          MATCH     SYFLFIL,SYFIFIL
          GOTO      SELB8420 IF NOT EQUAL
          SUB       ONE,XITEMNO
          COMPARE   ZERO,XITEMNO
          GOTO      SELB8410 IF NOT EQUAL
SELB8420  MOVE      ZERO,XITEMNO
          GOTO      SELB1000
.
SELB8500  COMPARE   LDITEM,ONE
          GOTO      SELB8900 IF EQUAL
          DISPLAY   *P1:DLROW,*V2LON,SP1,LDITEM,DOT
          SUB       ONE,LDITEM
          SUB       ONE,DLROW
          LOAD      KEY8,LDITEM,ST1,ST2,ST3,ST4,ST5:
                                  ST6,ST7,ST8,ST9,ST10:
                                  ST11,ST12,ST13,ST14,ST15:
                                  ST16,ST17,ST18,ST19,ST20:
                                  ST21,ST22,ST23,ST24,ST25
          CALL      RDSYFL1
          DISPLAY   *P1:DLROW,*HON,*V2LON,SP1,LDITEM,DOT
          GOTO      SELB2000
.
SELB8600  COMPARE   LDITEM,XITEMNO
          GOTO      SELB8900 IF EQUAL
          DISPLAY   *P1:DLROW,*V2LON,SP1,LDITEM,DOT
          ADD       ONE,LDITEM
          ADD       ONE,DLROW
          LOAD      KEY8,LDITEM,ST1,ST2,ST3,ST4,ST5:
                                  ST6,ST7,ST8,ST9,ST10:
                                  ST11,ST12,ST13,ST14,ST15:
                                  ST16,ST17,ST18,ST19,ST20:
                                  ST21,ST22,ST23,ST24,ST25
          CALL      RDSYFL1
          DISPLAY   *P1:DLROW,*V2LON,*HON,SP1,LDITEM,DOT
          GOTO      SELB2000
.
SELB8700  LOAD      KEY8,LDITEM,ST1,ST2,ST3,ST4,ST5:
                                ST6,ST7,ST8,ST9,ST10:
                                ST11,ST12,ST13,ST14,ST15:
                                ST16,ST17,ST18,ST19,ST20:
                                ST21,ST22,ST23,ST24,ST25
          CALL      RDSYFL1
.
SELB8900  BEEP
          GOTO      SELB2000
.
SELB9999  
          RETURN
.
MOVD0000  PACK      KEY8,SYFISYS,SYFIFIL,Z70
          MOVE      TWO,F4
          MOVE      F4,SYFLNUM
          CALL      RSSYFL1
MOVD1000  CALL      RPSYFL1
          BRANCH    OVRCD,MOVD9999
          MATCH     SYFISYS,SYFLSYS
          GOTO      MOVD9999 IF NOT EQUAL
          MATCH     SYFIFIL,SYFLFIL
          GOTO      MOVD9999 IF NOT EQUAL
          PACK      KEY8,SYFLSYS,SYFLFIL,SYFLNUM
          MATCH     KEY8,SAVKEY8
          GOTO      MOVD9999 IF EQUAL
          CALL      DESYFL1
          MOVE      SYFLNUM,F4
          ADD       ONE,F4
          MOVE      F4,SYFLNUM
          PACK      KEY8,SYFLSYS,SYFLFIL,SYFLNUM
          CALL      WRSYFL1
          GOTO      MOVD1000
MOVD9999  RETURN
.
MOVU0000  MOVE      SAVKEY8,KEY8
          CALL      RSSYFL1
MOVU1000  CALL      RKSYFL1
          BRANCH    OVRCD,MOVU9999
          MATCH     SYFISYS,SYFLSYS
          GOTO      MOVU9999 IF NOT EQUAL
          MATCH     SYFIFIL,SYFLFIL
          GOTO      MOVU9999 IF NOT EQUAL
          PACK      KEY8,SYFLSYS,SYFLFIL,SYFLNUM
          CALL      DESYFL1
          MOVE      SYFLNUM,F4
          SUB       ONE,F4
          MOVE      F4,SYFLNUM
          PACK      KEY8,SYFLSYS,SYFLFIL,SYFLNUM
          CALL      WRSYFL1
          GOTO      MOVU1000
MOVU9999  RETURN
.
RNUM0000  PACK      KEY8,SYFISYS,SYFIFIL,SP70
          MOVE      ZERO,F4
          MOVE      ONE,START
          CALL      RSSYFL1
RNUM1000  CALL      RKSYFL1
          BRANCH    OVRCD,RNUM9999
          MATCH     SYFLSYS,SYFISYS
          GOTO      RNUM9999 IF NOT EQUAL
          MATCH     SYFLFIL,SYFIFIL
          GOTO      RNUM9999 IF NOT EQUAL
          MOVE      SYFLNUM,CHECK4
          ADD       ONE,F4
.
          CALL      CPHY0000     * Calculate physical length
          MOVE      START,SYFLSTR
          CALL      UPSYFL1
          ADD       SYFLPHY,START
.
          COMPARE   CHECK4,F4
          GOTO      RNUM1000 IF EQUAL
          PACK      KEY8,SYFLSYS,SYFLFIL,SYFLNUM
          CALL      DESYFL1
          MOVE      F4,SYFLNUM
          PACK      KEY8,SYFLSYS,SYFLFIL,SYFLNUM
          CALL      WRSYFL1
          GOTO      RNUM1000
RNUM9999  RETURN
.
CPHY0000  BRANCH    SYFLTYP,CPHY5000
          MOVE      SYFLLEN,SYFLPHY
          GOTO      CPHY9999
CPHY5000  MOVE      SYFLLEN,DIM5
          UNPACK    DIM5,BEFD,ANS,AFTD
          MOVE      BEFD,F3
          ADD       ONE,F3   * to Round Up
          DIV       TWO,F3
          MULT      TWO,F3
          MOVE      F3,SYFLPHY
.
          MOVE      AFTD,F3
          ADD       ONE,F3   * to Round Up
          DIV       TWO,F3
          MULT      TWO,F3
          ADD       F3,SYFLPHY
          DIV       TWO,SYFLPHY
          ADD       ONE,SYFLPHY
CPHY9999  RETURN
.
.******************************************************************************
.* SELC - Modify screen C data                   Called by ML0000             *
.*        Returns : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.) *
.*                  FMDSDISS (variable entered)                               *
.******************************************************************************
SELC0000  MOVE      ZERO,CCITEM
          BRANCH    ACCEPT,SELC0050
          MOVE      "28",CCOL
          MOVE      "6",CVERT
          PACK      KEY5,SYFISYS,SYFIFIL,ONE
          CALL      RDSYID1
          BRANCH    OVRCD,SELC0050
          CALL      DISC0000
          GOTO      SELC0100
.
SELC0010  CALL      RKSYID1
          BRANCH    OVRCD,SELC0000
          MATCH     SYIDSYS,SYFISYS
          GOTO      SELC0000 IF NOT EQUAL
          MATCH     SYIDFIL,SYFIFIL
          GOTO      SELC0000 IF NOT EQUAL
          CALL      DISC0000
          GOTO      SELC0100
.
SELC0020  CALL      RPSYID1
          BRANCH    OVRCD,SELC0030
          MATCH     SYIDSYS,SYFISYS
          GOTO      SELC0030 IF NOT EQUAL
          MATCH     SYIDFIL,SYFIFIL
          GOTO      SELC0030 IF NOT EQUAL
          CALL      DISC0000
          GOTO      SELC0100
.
SELC0030  PACK      KEY5,SYFISYS,SYFIFIL,Z70
          CALL      RSSYID1
          CALL      RPSYID1
          CALL      DISC0000
          GOTO      SELC0100
.
SELC0050  MOVE      "28",CCOL
          MOVE      "6",CVERT
          MOVE      ONE,ACCEPT
          MOVE      ZERO,CCITEM
          CALL      SCRC0000
          MOVE      SYFISYS,SYIDSYS
          MOVE      SYFIFIL,SYIDFIL
          MOVE      ONE,CKEYTYP
          CALL      KSYIDA00
          MOVE      ZERO,CKEYTYP
          BRANCH    EXIT,SELC0090,SELC0090
          UNPACK    SP70,SYIDFL1,SYIDFL2,SYIDFL3,SYIDFL4:
                         SYIDFL5,SYIDFL6,SYIDFL7,SYIDFL8
          GOTO      SELC0100
.
SELC0090  MOVE      TWO,EXIT
          GOTO      SELC9999
.
.---- determine option to execute ----
.
SELC0100  ADD       ONE,CCITEM                   * get next option
          BRANCH    ACCEPT,SELC0500              * in accept mode ?
          CALL      LQSTQST                      * select/post/cancel ?
.
          COMPARE   ZERO,CCITEM
          GOTO      SELC9000 IF EQUAL            * post ?
.
          COMPARE   SEQ,CCITEM
          GOTO      SELC9500 IF EQUAL            * cancel ?
.
          COMPARE   "-2",CCITEM
          GOTO      SELC0050 IF EQUAL            * add ?
.
          COMPARE   "-3",CCITEM
          GOTO      SELC0010 IF EQUAL            * next ?
.
          COMPARE   "-4",CCITEM
          GOTO      SELC0020 IF EQUAL            * last ?
.
          COMPARE   "-5",CCITEM
          GOTO      SELC9800 IF EQUAL            * Exit
.
          COMPARE   "-6",CCITEM
          GOTO      SELC0500 IF NOT EQUAL            * delete ?
          PACK      KEY5,SYIDSYS,SYIDFIL,SYIDIDX
          CALL      DESYID1
          GOTO      SELC0000
.
SELC0500  MOVE      "28",CCOL                    * set up screen address
          MOVE      "7",CVERT
          ADD       CCITEM,CVERT
          BRANCH    CCITEM,SELC1100,SELC1200,SELC1200,SELC1200,SELC1200:
                           SELC1200,SELC1200,SELC1200,SELC1200
.
          IF        CCITEM = 10
            MOVE      "38",CCOL
            MOVE      "18",CVERT
            GOTO      SELC1300
          ENDIF
.
          BRANCH    ACCEPT,SELC0900              * finished accept mode ?
          BEEP                                   * illegal option
.
SELC0900  MOVE      ZERO,ACCEPT                  * clear accept mode
          GOTO      SELC0100                     * get next option
.
.---- option 1 ----
.
SELC1100  KEYIN     *PCCOL:CVERT,*V2LON,SYIDDES   * read in description
          PACK      SYIDDES,SYIDDES,SP70
.
          MATCH     SYIDDES,SP70
          GOTO      SELC1150 IF NOT EQUAL        * description spaces ?
          PACK      SYSCDES,SYSCDES,UNDLN70
.
SELC1150  MATCH     SYIDDES,UNDLN70
          GOTO      SELC1190 IF EQUAL            * nothing entered ?
          GOTO      SELC0100
.
SELC1190  DISPLAY   *P1:24,*EL,*B:               * nothing entered
                    "A Description Must Be Entered - ";
          CALL      HITENTER
          GOTO      SELC1100
.
SELC1200  MOVE      SYFISYS,SYFLSYS
          MOVE      SYFIFIL,SYFLFIL
          CALL      KSYFLA00
          BRANCH    EXIT,SELC1250,SELC1250
          DISPLAY   *PCCOL:CVERT,*V2LON,SYFLFLD,*HOFF,SP1,SYFLDES
          MOVE      CCITEM,F2
          SUB       ONE,F2
          STORE     SYFLFLD,F2,SYIDFL1,SYIDFL2,SYIDFL3,SYIDFL4:
                               SYIDFL5,SYIDFL6,SYIDFL7,SYIDFL8
          GOTO      SELC0100
SELC1250
          MOVE      SP70,SYFLFLD
          MOVE      CCITEM,F2
          LOAD      SYFLFLD,F2,SYIDFL1,SYIDFL2,SYIDFL3,SYIDFL4:
                               SYIDFL5,SYIDFL6,SYIDFL7,SYIDFL8
          MATCH     SP70,SYFLFLD
          GOTO      SELC1200 IF NOT EQUAL
          MOVE      "9",CCITEM
          GOTO      SELC0100
.
SELC1300  KEYIN     *PCCOL:CVERT,*V2LON,SYIDIUD   * read Y or N for duplicates
          PACK      SYIDIUD,SYIDIUD,SP1
          REP       "nNyY",SYIDIUD
          DISPLAY   *PCCOL:CVERT,*V2LON,SYIDIUD
          MOVE      SYIDIUD,KEY1
          REP       " -N-Y-",KEY1
          MATCH     "-",KEY1
          GOTO      SELC1390 IF NOT EQUAL
.         
          GOTO      SELC0100
.
SELC1390  DISPLAY   *P1:24,*EL,*B:               * nothing entered
                    "Invalid character entered - ";
          CALL      HITENTER
          GOTO      SELC1300
.
.---- exit points ----
.
SELC9000  MOVE      ZERO,EXIT                    * post
          GOTO      SELC9999
.
SELC9500  MOVE      ONE,EXIT                     * cancel
          GOTO      SELC9999
.
SELC9800  MOVE      TWO,EXIT                     * Exit   
          GOTO      SELC9999
.
SELC9999  RETURN
.******************************************************************************
.* INCLUDES FOR I/O'S                                                         *
.******************************************************************************
NEWOPTN   MOVE      ZERO,COPTION
          DISPLAY   *P70:2,SP10
          DISPLAY   *P1:3,*EL,"System Code: ",*V2LON,SYFISYS,*HOFF:
                    "  File Code: ",*V2LON,SYFIFIL,SP2,SYFIDES,*HOFF
          DISPLAY   *P1:4,*EF,"Options: ":
                          *P10:4,OPT1:
                          *P20:4,OPT2:
                          *P30:4,OPT3:
                          *P40:4,OPT4:
                          *P50:4,OPT5:
                          *HON,*V2LON,*P70:4,OPT0
          HLINE     *G37,5,1,80
.
NEWO1000  KEYIN     *P1:4,*NOEDIT,*+,*EOFF,ANS
          GOTO      NEWO2000 IF RIGHT
          GOTO      NEWO3000 IF LEFT
          REP       UPPLOW,ANS
          PACK      ANS,ANS,SP70
          MATCH     SP70,ANS
          GOTO      NEWO9000 IF EQUAL
          MATCH     "I",ANS
          GOTO      NEWO9100 IF EQUAL
          MATCH     "M",ANS
          GOTO      NEWO9200 IF EQUAL
          MATCH     "D",ANS
          GOTO      NEWO9300 IF EQUAL
          MATCH     "G",ANS
          GOTO      NEWO9400 IF EQUAL
          MATCH     "S",ANS
          GOTO      NEWO9500 IF EQUAL
          MATCH     "E",ANS
          GOTO      NEWO9600 IF EQUAL
          MATCH     "X",ANS
          GOTO      NEWO9500 IF EQUAL
          GOTO      NEWO1000
.
NEWO2000  BRANCH    COPTION,NEWO2100,NEWO2200,NEWO2300,NEWO2400,NEWO2500
.
          DISPLAY   *P70:4,OPT0:
                    *HON,*V2LON,*P10:4,OPT1
          MOVE      "1",COPTION
          GOTO      NEWO1000
.
NEWO2100  DISPLAY   *P10:4,OPT1:
                    *HON,*V2LON,*P20:4,OPT2
          MOVE      "2",COPTION
          GOTO      NEWO1000
.
NEWO2200  DISPLAY   *P20:4,OPT2:
                    *HON,*V2LON,*P30:4,OPT3
          MOVE      "3",COPTION
          GOTO      NEWO1000
.
NEWO2300  DISPLAY   *P30:4,OPT3:
                    *HON,*V2LON,*P40:4,OPT4
          MOVE      "4",COPTION
          GOTO      NEWO1000
.
NEWO2400  DISPLAY   *P40:4,OPT4:
                    *HON,*V2LON,*P50:4,OPT5
          MOVE      "5",COPTION
          GOTO      NEWO1000
.
NEWO2500  DISPLAY   *P50:4,OPT5:
                    *HON,*V2LON,*P70:4,OPT0
          MOVE      "0",COPTION
          GOTO      NEWO1000
.
NEWO3000  BRANCH    COPTION,NEWO3100,NEWO3200,NEWO3300,NEWO3400,NEWO3500
.
          DISPLAY   *P70:4,OPT0:
                    *HON,*V2LON,*P50:4,OPT5
          MOVE      "5",COPTION
          GOTO      NEWO1000
.
NEWO3100  DISPLAY   *P10:4,OPT1:
                    *HON,*V2LON,*P70:4,OPT0
          MOVE      "0",COPTION
          GOTO      NEWO1000
NEWO3200  DISPLAY   *P20:4,OPT2:
                    *HON,*V2LON,*P10:4,OPT1
          MOVE      "1",COPTION
          GOTO      NEWO1000
NEWO3300  DISPLAY   *P30:4,OPT3:
                    *HON,*V2LON,*P20:4,OPT2
          MOVE      "2",COPTION
          GOTO      NEWO1000
NEWO3400  DISPLAY   *P40:4,OPT4:
                    *HON,*V2LON,*P30:4,OPT3
          MOVE      "3",COPTION
          GOTO      NEWO1000
NEWO3500  DISPLAY   *P50:4,OPT5:
                    *HON,*V2LON,*P40:4,OPT4
          MOVE      "4",COPTION
          GOTO      NEWO1000
.
NEWO9100  MOVE      "1",COPTION
          GOTO      NEWO9000
NEWO9200  MOVE      "2",COPTION
          GOTO      NEWO9000
NEWO9300  MOVE      "3",COPTION
          GOTO      NEWO9000
NEWO9400  MOVE      "4",COPTION
          GOTO      NEWO9000
NEWO9500  MOVE      "5",COPTION
          GOTO      NEWO9000
NEWO9600  MOVE      "0",COPTION
          GOTO      NEWO9000
.
NEWO9000  MOVE      OPT0,OPT
          IF        COPTION <> 4
            DISPLAY   *P1:3,*EL
          ENDIF
          LOAD      OPT,COPTION,OPT1,OPT2,OPT3,OPT4,OPT5
          DISPLAY   *P70:2,*HON,*V2LON,OPT
NEWO9999  RETURN
.******************************************************************************
.         Subroutine to SELECT ITEM, POST or CANCEL
.------------------------------------------------------------------------------
.
LQSTQST   MOVE      ZERO,CCITEM
          MOVE      SP10,CCITEMD
          KEYIN     *P1:24,*EL,"Select Item, (",*V2LON,"P",*HOFF,")ost, (":
                    *V2LON,"C",*HOFF,")ancel, (":
                    *V2LON,"A",*HOFF,")dd, (":
                    *V2LON,"D",*HOFF,")elete, (":
                    *V2LON,"N",*HOFF,")ext, (":
                    *V2LON,"L",*HOFF,")ast, (":
                    *V2LON,"E",*HOFF,")xit ? ",*V2LON,*JR,CCITEMD;
.
          RESET     CCITEMD
          GOTO      LQSTQST IF EOS
.
          REP       UPPLOW,CCITEMD
.
          MATCH     "  C",CCITEMD
          GOTO      LQSTQST1 IF EQUAL
.
          MATCH     "  P",CCITEMD
          GOTO      LQSTQST2 IF EQUAL
.
          MATCH     "  A",CCITEMD
          GOTO      LQSTQST3 IF EQUAL
.
          MATCH     "  N",CCITEMD
          GOTO      LQSTQST4 IF EQUAL
.
          MATCH     "  L",CCITEMD
          GOTO      LQSTQST5 IF EQUAL
.
          MATCH     "  E",CCITEMD
          GOTO      LQSTQST6 IF EQUAL
          MATCH     "  X",CCITEMD
          GOTO      LQSTQST6 IF EQUAL
.
          MATCH     "  D",CCITEMD
          GOTO      LQSTQST7 IF EQUAL
.
          TYPE      CCITEMD
          GOTO      LQSTQSTE IF NOT EQUAL
.
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM
          GOTO      LQSTQSTE IF LESS
.
          RETURN
.
LQSTQSTE  BEEP
          GOTO      LQSTQST
.
LQSTQST1  MOVE      "-1",CCITEM
          RETURN
.
LQSTQST2  MOVE      "0",CCITEM
          RETURN
+
LQSTQST3  MOVE      "-2",CCITEM
          RETURN
.
LQSTQST4  MOVE      "-3",CCITEM
          RETURN
.
LQSTQST5  MOVE      "-4",CCITEM
          RETURN
.
LQSTQST6  MOVE      "-5",CCITEM
          RETURN
.
LQSTQST7  MOVE      "-6",CCITEM
          RETURN
.----------------------------------------------------------------------
. RDEF0000 - Check for Redefines for indexes
.----------------------------------------------------------------------
RDEF0000  PACK      KEY8,SYFISYS,SYFIFIL,SP70
          CALL      RSSYFL1
RDEF1000  CALL      RKSYFL1
          BRANCH    OVRCD,RDEF2000
          MATCH     SYFLSYS,SYFISYS
          GOTO      RDEF2000 IF NOT EQUAL
          MATCH     SYFLFIL,SYFIFIL
          GOTO      RDEF2000 IF NOT EQUAL
          COMPARE   ONE,SYFLRED
          GOTO      RDEF1000 IF NOT EQUAL
.
          MOVE      ZERO,SYFLRED
          MOVE      ONE,SYFLTYP
          CALL      CPHY0000
          CALL      UPSYFL1
.
          GOTO      RDEF1000
.
RDEF2000  PACK      KEY5,SYFISYS,SYFIFIL,SP70
          CALL      RSSYID1
RDEF3000  CALL      RKSYID1
          BRANCH    OVRCD,RDEF4000
          MATCH     SYIDSYS,SYFISYS
          GOTO      RDEF4000 IF NOT EQUAL
          MATCH     SYIDFIL,SYFIFIL
          GOTO      RDEF4000 IF NOT EQUAL
          MOVE      ZERO,COUNT
RDEF3500  ADD       ONE,COUNT
          LOAD      SEGMENT,COUNT,SYIDFL1,SYIDFL2,SYIDFL3,SYIDFL4:
                                  SYIDFL5,SYIDFL6,SYIDFL7,SYIDFL8
          MATCH     SP70,SEGMENT
          GOTO      RDEF3000 IF EQUAL
          PACK      KEY8,SYIDSYS,SYIDFIL,SEGMENT
          CALL      RDSYFL2
          COMPARE   ONE,SYFLTYP
          GOTO      RDEF3600 IF NOT EQUAL
          MOVE      ONE,SYFLRED
          MOVE      ZERO,SYFLTYP
          CALL      CPHY0000
          CALL      UPSYFL2
.
RDEF3600  COMPARE   EIGHT,COUNT
          GOTO      RDEF3500 IF NOT EQUAL
.
RDEF4000  CALL      RNUM0000
.
RDEF9999  RETURN
.------------------------------------------------------------
. Load an existing Fd Details
.------------------------------------------------------------
LOAD0000  KEYIN     *P1:24,*EL,"FD Name : ",*V2LON,LOADNAME
          DISPLAY   *P1:24,*EL,"FD Name : ",*V2LON,LOADNAME
          ENDSET    LOADNAME
          APPEND    SP70,LOADNAME
          RESET     LOADNAME
          MATCH     SP70,LOADNAME
          GOTO      LOAD9000 IF EQUAL
.
          CLEAR     COMMAND
          APPEND    "formatfd ",COMMAND
          APPEND    LOADNAME,COMMAND
          APPEND    ".INC",COMMAND
          RESET     COMMAND
          DISPLAY   *P1:10;
          EXECUTE   COMMAND,TASKID
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      LOADFILE,LOADNAME
          TRAPCLR   IO
          BRANCH    OVRCD,LOAD9100
          MOVE      ZERO,F4 
          COMPARE   "2",SYFITIO
          GOTO      LOAD1000 IF NOT EQUAL
          KEYIN     *P40:24,"Prefix Character to Ignore : ",*V2LON,LOADV4FL
          DISPLAY   *P40:24,"Prefix Character to Ignore : ",*V2LON,LOADV4FL
          DISPLAY   *P1:10,*EF,*P25:12,*V2LON,*BLINKON,"Loading Field Details"
.  
LOAD1000  READ      LOADFILE,SEQ;LDFLD,LDTYP,SYFLLEN,SYFLDES
          GOTO      LOAD3000 IF OVER
          MOVE      ZERO,SYFLTYP
          MATCH     "DIM ",LDTYP
          GOTO      LOAD1100 IF EQUAL
          MOVE      ONE,SYFLTYP
.
LOAD1100  COMPARE   "2",SYFITIO
          GOTO      LOAD2000 IF EQUAL
.
          UNPACK    LDFLD,SYFLSYS,SYFLFIL,SYFLFLD
          MOVE      SYFISYS,SYFLSYS
          MOVE      SYFIFIL,SYFLFIL
          PACK      KEY8,SYFLSYS,SYFLFIL,SYFLFLD
          CALL      RASYFL2
          COMPARE   ZERO,OVRCD
          GOTO      LOAD8000 IF EQUAL
.
LOAD1200  ADD       ONE,F4
          MOVE      F4,SYFLNUM
          PACK      KEY8,SYFLSYS,SYFLFIL,SYFLNUM
          CALL      RASYFL1
          COMPARE   ZERO,OVRCD
          GOTO      LOAD1200 IF EQUAL
          CALL      WRSYFL1
          GOTO      LOAD1000
.
LOAD2000
          MOVE      LOADV4FL,F1
          MOVE      LDFLD,SYFLV4N
          BRANCH    LOADV4FL,LOAD2010,LOAD2020,LOAD2030,LOAD2040
          UNPACK    LDFLD,SYFLFLD
          GOTO      LOAD2090
LOAD2010  UNPACK    LDFLD,DIM1,SYFLFLD
          GOTO      LOAD2090
LOAD2020  UNPACK    LDFLD,DIM2,SYFLFLD
          GOTO      LOAD2090
LOAD2030  UNPACK    LDFLD,DIM3,SYFLFLD
          GOTO      LOAD2090
LOAD2040  UNPACK    LDFLD,DIM4,SYFLFLD
.
LOAD2090  MOVE      SYFISYS,SYFLSYS
          MOVE      SYFIFIL,SYFLFIL
          PACK      KEY8,SYFLSYS,SYFLFIL,SYFLFLD
          CALL      RASYFL2
          COMPARE   ZERO,OVRCD
          GOTO      LOAD2100 IF NOT EQUAL
          DISPLAY   *P1:23,"Duplicate Field : ",*V2LON,KEY8;
          ADD       ONE,F1
          BRANCH    F1,LOAD2091,LOAD2092,LOAD2093,LOAD2094,LOAD8000
          UNPACK    LDFLD,SYFLFLD
          GOTO      LOAD2099
LOAD2091  UNPACK    LDFLD,DIM1,SYFLFLD
          GOTO      LOAD2099
LOAD2092  UNPACK    LDFLD,DIM2,SYFLFLD
          GOTO      LOAD2099
LOAD2093  UNPACK    LDFLD,DIM3,SYFLFLD
          GOTO      LOAD2099
LOAD2094  UNPACK    LDFLD,DIM3,SYFLFLD
          GOTO      LOAD2099
LOAD2099  MOVE      SYFISYS,SYFLSYS
          MOVE      SYFIFIL,SYFLFIL
          PACK      KEY8,SYFLSYS,SYFLFIL,SYFLFLD
          DISPLAY   "  Changed to : ",*V2LON,KEY8,*HOFF,"  - ";
          CALL      HITENTER
          GOTO      LOAD2090
.
LOAD2100  ADD       ONE,F4
          MOVE      F4,SYFLNUM
          CALL      RASYFL1
          COMPARE   ZERO,OVRCD
          GOTO      LOAD2100 IF EQUAL
          CALL      WRSYFL1
          GOTO      LOAD1000
.
LOAD3000
          CLOSE     LOADFILE
          CALL      RNUM0000
          DISPLAY   *P1:10,*EF,*P25:12,*V2LON,*BLINKON,"Loading Index Details"
          CLEAR     COMMAND
          APPEND    "rm ",COMMAND
          APPEND    LOADNAME,COMMAND
          APPEND    ".txt",COMMAND
          RESET     COMMAND
          DISPLAY   *P1:10;
          EXECUTE   COMMAND,TASKID
          DISPLAY   *P1:10;
.
          DISPLAY   *P1:10;
          CLEAR     COMMAND
          APPEND    "idx ",COMMAND
          APPEND    LOADNAME,COMMAND
          APPEND    ".INC",COMMAND
          RESET     COMMAND
          DISPLAY   *P1:10;
          EXECUTE   COMMAND,TASKID
          DISPLAY   *P1:10;
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      LOADFILE,LOADNAME
          TRAPCLR   IO
          BRANCH    OVRCD,LOAD9200
          MOVE      ZERO,F4 
          UNPACK    SP70,SYIDFL1,SYIDFL2,SYIDFL3,SYIDFL4:
                         SYIDFL5,SYIDFL6,SYIDFL7,SYIDFL8
          MOVE      SP70,SYIDDES 
          MOVE      SP70,SYIDDES
          MOVE      SYFISYS,SYIDSYS
          MOVE      SYFIFIL,SYIDFIL
.  
LOAD4000  READ      LOADFILE,SEQ;F1,LDFLD
          GOTO      LOAD4999 IF OVER
          COMPARE   ZERO,F1
          GOTO      LOAD4800 IF EQUAL
          ADD       ONE,F4
          COMPARE   "2",SYFITIO
          GOTO      LOAD4500 IF EQUAL
          UNPACK    LDFLD,DIM4,SYFLFLD
          STORE     SYFLFLD,F4,SYIDFL1,SYIDFL2,SYIDFL3,SYIDFL4:
                               SYIDFL5,SYIDFL6,SYIDFL7,SYIDFL8
          GOTO      LOAD4000
.
LOAD4500
          BRANCH    LOADV4FL,LOAD4510,LOAD4520,LOAD4530,LOAD4540
          UNPACK    LDFLD,SYFLFLD
          GOTO      LOAD4590
LOAD4510  UNPACK    LDFLD,DIM1,SYFLFLD
          GOTO      LOAD4590
LOAD4520  UNPACK    LDFLD,DIM2,SYFLFLD
          GOTO      LOAD4590
LOAD4530  UNPACK    LDFLD,DIM3,SYFLFLD
          GOTO      LOAD4590
LOAD4540  UNPACK    LDFLD,DIM4,SYFLFLD
.
LOAD4590  
          STORE     SYFLFLD,F4,SYIDFL1,SYIDFL2,SYIDFL3,SYIDFL4:
                               SYIDFL5,SYIDFL6,SYIDFL7,SYIDFL8
          GOTO      LOAD4000
.
LOAD4800  COMPARE   ZERO,F4
          GOTO      LOAD4900 IF EQUAL
          PACK      KEY5,SYIDSYS,SYIDFIL,SYIDIDX
          CALL      RASYID1
          COMPARE   ZERO,OVRCD
          GOTO      LOAD4900 IF EQUAL
          CALL      WRSYID1
LOAD4900  UNPACK    LDFLD,DIM7,SYIDIDX
          UNPACK    SP70,SYIDFL1,SYIDFL2,SYIDFL3,SYIDFL4:
                         SYIDFL5,SYIDFL6,SYIDFL7,SYIDFL8
          MOVE      ZERO,F4
          GOTO      LOAD4000
LOAD4999  PACK      KEY5,SYIDSYS,SYIDFIL,SYIDIDX
          CALL      RASYID1
          COMPARE   ZERO,OVRCD
          GOTO      LOAD9900 IF EQUAL
          CALL      WRSYID1
          GOTO      LOAD9900
.
LOAD8000  DISPLAY   *P1:24,*EL,"Duplicate Field Found : ",KEY8," - ";
          CALL      HITENTER
          GOTO      LOAD1000
.
LOAD9000  MOVE      ZERO,EXIT
          GOTO      LOAD9999
.
LOAD9100  DISPLAY   *P1:24,*EL,"FD Not Found - ";
          MOVE      ZERO,EXIT
          CALL      HITENTER
          GOTO      LOAD9999
.
LOAD9200  DISPLAY   *P1:24,*EL,"Index Details Not Found - ";
          MOVE      ZERO,EXIT
          CALL      HITENTER
          GOTO      LOAD9999
.
LOAD9900  MOVE      ONE,EXIT
          CLOSE     LOADFILE
          PREP      LOADFILE,LOADNAME
          CLOSE     LOADFILE
          GOTO      LOAD9999
.
LOAD9999  RETURN
.
. -------------------------------------------------------------------
. VERS0000 - Accept version information for FD & IO
. -------------------------------------------------------------------
.
VERS0000  MOVE      ZERO,EXIT
          UNPACK    VERSION,DIM1,RELEASE    * handles "10.00" to "99.99"
          MOVE      "N",NEWVERS
          CALL      VERPV000                * display previous versions (only 3)
          BRANCH    EXIT,VERS9500,VERS9600  * EXIT=1 - don't generate new Vers,
.                                           * EXIT=2 - 'Cancel'
.
VERS0500  DISPLAY   *P1:7,*EF,*V2LON," 1",*HOFF,". Release    : V",RELEASE:
                    *P1:8,*V2LON," 2",*HOFF,". Version    : ",PRGVER2:
                    *P1:9,*V2LON," 3",*HOFF,". Date       : ":
                    *P1:10,*V2LON," 4",*HOFF,". Id         : ":
                    *P1:11,*V2LON," 5",*HOFF,". Task No.   : ":
                    *P1:12,*V2LON," 6",*HOFF,". Comments   : ";
          MOVE      ZERO,CCITEM
          MOVE      ONE,ACCEPT
.
VERS1000  ADD       ONE,CCITEM
          BRANCH    ACCEPT,VERS1500
          CALL      MAINQST
.
VERS1010  COMPARE   ZERO,CCITEM
          GOTO      VERS9900 IF EQUAL
.
          COMPARE   SEQ,CCITEM
          GOTO      VERS9600 IF EQUAL
.
VERS1500  MOVE      "18",CCOL
          MOVE      "6",CVERT
          ADD       CCITEM,CVERT
          BRANCH    CCITEM,VERS2100,VERS2200,VERS2300,VERS2400,VERS2500,VERS2600
.
          BRANCH    ACCEPT,VERS1900
          BEEP
.
VERS1900  MOVE      ZERO,ACCEPT
          GOTO      VERS1000
.
VERS2100  MOVE      SP1,KEY1
          KEYIN     *P19:CVERT,*V2LON,*RV,RELEASE; 
          STRIP     RELEASE
          GOTO      VERS1000
.
VERS2200  MOVE      SP1,KEY1
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,PRGVERS;
          DISPLAY   *PCCOL:CVERT,*V2LON,PRGVERS;
          MOVE      PRGVERS,F2 
          MOVE      F2,PRGVER2 
          REP       " 0",PRGVER2 
          GOTO      VERS1000
.
VERS2300  MOVE      CDD,CDAY
          MOVE      CMM,CMON
          MOVE      CYY,CYEAR
          MOVE      CCC,CCENT
          MOVE      ONE,CCENTRY
          MOVE      ZERO,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          CALL      KEYDATE
          PACK      DATE,CDAY,SL,CMON,SL,CCENT,CYEAR
          REP       " 0",DATE
          GOTO      VERS1000
.
VERS2400  KEYIN     *PCCOL:CVERT,*V2LON,PROGID;
          GOTO      VERS1000
.
VERS2500  KEYIN     *PCCOL:CVERT,*V2LON,CARNUMB;
          GOTO      VERS1000
.
VERS2600  KEYIN     *PCCOL:CVERT,*V2LON,COMMENTS;
          GOTO      VERS1000
.
VERS9500  MOVE      ZERO,EXIT
          GOTO      VERS9999
.
VERS9600  MOVE      ONE,EXIT
          GOTO      VERS9999
.
VERS9900  CALL      RDSYFI1
          MOVE      PRGVERS,SYFIVERS
          MOVE      RELEASE,SYFIREL
          CALL      UPSYFI1
          MOVE      ZERO,EXIT
.
VERS9999  RETURN
.
. -------------------------------------------------------------------
. VERPV000 - Create a file of Version Info and Display previous Versions
. -------------------------------------------------------------------
VERPV000  MOVE      ONE,EXIT
          MOVE      "N",NEWVERS
          MOVE      SP2,PRGVER2
.
.                                           * copy old '*FD.INC' to a Vers file
          DISPLAY   *P1:7,*EF
          PACK      FDNAME,SYSCID3,SYFIID3,FD,INC
          PREP      TEMPFILE,FILENAME
          DISPLAY   *P10:13,*EF,SP1;
          PACK      COMMAND,CP,SP1,FDNAME,SP1,FILENAME,TXT
          EXECUTE   COMMAND,TASKID 
          DISPLAY   *P10:13,*EF,SP1;
.
          PREP      VERSFILE,VERSNAME       * create the Vers file
          MOVE      ZERO,F3                 * count comment records in input FD
          MOVE      ZERO,RECDCNT            * count records read in input FD
          OPEN      TEMPFILE,FILENAME
.
VERPV100  READ      TEMPFILE,SEQ;DIM10A,DIM10B,DIM60A
          GOTO      VERPV200 IF OVER
          ADD       ONE,RECDCNT
          UNPACK    DIM10A,ANS,ANS,ANS,PREVRELS
.
          MATCH     "----------",DIM10B
          GOTO      VERPV200 IF EQUAL       * found end of version notes
          MATCH     ". ",DIM10A
          GOTO      VERPV200 IF NOT EQUAL
.
          MATCH     SP2,PRGVER2
          IF        @EQUAL
            PACK      DIM15A,DIM10A,DIM10B
            SCAN      "V10",DIM15A
            IF        @EQUAL
              MATCH     RELEASE,PREVRELS
              IF        @EQUAL
                BUMP      DIM15A,7
                MOVE      DIM15A,KEY2         * get the Version no.
                MOVE      ZERO,F2
                MOVE      KEY2,F2
                ADD       ONE,F2
                MOVE      F2,PRGVER2
                REP       " 0",PRGVER2
                MOVE      F2,PRGVERS
              ELSE
                MOVE      "01",PRGVERS
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     ". V",DIM10A
          IF        !@EQUAL
            BUMP      DIM10A,2
            MOVE      ". V",KEY3
            PACK      DIM80A,KEY3,DIM10A,DIM10B,DIM60A,SP20
          ELSE
            RESET     DIM10A
            PACK      DIM80A,DIM10A,DIM10B,DIM60A,SP20
          ENDIF
          WRITE     VERSFILE,SEQ;DIM80A
          ADD       ONE,F3
          GOTO      VERPV100
.
VERPV200  MOVE      ZERO,EXIT
          MATCH     SP2,PRGVER2
          IF        @EQUAL
            MOVE      "01",PRGVER2
            MOVE      ONE,PRGVERS
          ENDIF
.
          PREP      TEMPFILE,FILENAME
          COMPARE   ZERO,F3
          GOTO      VERPV500 IF EQUAL
.
          OPEN      VERSFILE,VERSNAME       * reset position
          MOVE      ZERO,F3
          MOVE      EIGHT,CVERT
VERPV300  READ      VERSFILE,SEQ;DIM60A
          GOTO      VERPV500 IF OVER
.
          ADD       ONE,F3
          BRANCH    F3,VERPV350,VERPV400,VERPV400,VERPV400,VERPV400,VERPV400
          GOTO      VERPV500
.
VERPV350  DISPLAY   *P1:7,*EF,"Previous Versions - "
.
VERPV400  ADD       ONE,CVERT
          DISPLAY   *P10:CVERT,DIM60A
          GOTO      VERPV300
.
VERPV500  MOVE      "(Y or N)",DIM10A
          IF        RECDCNT = 0 & SYFIVERS > 0
            DISPLAY   *P10:15,"Previous Version History was not found - you ":
                              "should copy the live":
                      *P10:16,SP1,FDNAME,SP1,"into the data 'tmp' directory ":
                              "before continuing";
            MOVE      "(Y or C)",DIM10A
          ELSE
            COMPARE   ZERO,F3
            GOTO      VERPV900 IF EQUAL
          ENDIF
.
VERPV600  MOVE      SP1,ANS
          DISPLAY   *P1:24,"     Create a new Version comment ",DIM10A:
                           " ? : ";
          KEYIN     *P50:24,*V2LON,ANS;
          REP       UPPLOW,ANS
          DISPLAY   *P1:23,*EF
          MATCH     "Y",ANS
          GOTO      VERPV900 IF EQUAL
          MATCH     "N",ANS
          GOTO      VERPV901 IF EQUAL
          MATCH     "C",ANS
          GOTO      VERPV902 IF EQUAL
          GOTO      VERPV600
.
VERPV900  MOVE      "Y",NEWVERS
          MOVE      ZERO,EXIT
          GOTO      VERPV999
.
VERPV901  MOVE      "N",NEWVERS
          MOVE      ONE,EXIT
          GOTO      VERPV999
.
VERPV902  MOVE      "N",NEWVERS
          MOVE      TWO,EXIT
          GOTO      VERPV999
.
VERPV999  DISPLAY   *P1:7,*EF,SP1
          RETURN
.
. --------------------------------------------------------------------------
. RDCM0000 Read in comments for current record
. --------------------------------------------------------------------------
.
RDCM0000  CALL      RDSYFL1
          PACK      KEY10,SYFLSYS,SYFLFIL,SYFLFLD,SP10
.
          CALL      RSSYCM1
.
RDCM1000  CALL      RKSYCM1
          BRANCH    OVRCD,RDCM9999
.
          MATCH     SYCMSYS,SYFLSYS
          GOTO      RDCM9999 IF NOT EQUAL
          MATCH     SYCMFIL,SYFLFIL
          GOTO      RDCM9999 IF NOT EQUAL
          MATCH     SYCMFLD,SYFLFLD
          GOTO      RDCM9999 IF NOT EQUAL
.
          PACK      DIM37A,SYCMTEXT,SP30
          MATCH     SP30,DIM37A
          GOTO      RDCM1000 IF EQUAL       * drop any blank lines
.
          WRITE     TEMPFILE,SEQ;SYCMTEXT
          GOTO      RDCM1000
.
RDCM9999  RETURN         
.
.*****************************************************************************
.*                  WPRC0000                                                 *
.*        Execute the word processor                                         *
.* Returns:  Exit  0 = Abort                                                 *
.*                 1 = Exit normally                                         *
.*****************************************************************************
.
WPRC0000  CLOSE     TEMPFILE
          MOVE      EIGHT,F2
          ADD       LDITEM,F2               * set vertical posit. for text box
          IF        LDITEM > 9 
            SUB       EIGHT,F2
          ENDIF
          MOVE      F2,F2A
          ADD       SIX,F2A
.
          MOVE      TEN1,FORM2              * display text box
          MOVE      ONE,FORM2
.                             V----- max number of Comment lines
          WORD      FILENAME,50,26,F2,72,F2A,FORM2 
WPRC5000  MOVE      ZERO,EXIT
          IF        FORM2 = ZERO
            MOVE      ONE,EXIT
          ENDIF
.
WPRC9999  RETURN
+
. ---------------------------------------------------------------------
. POST0000 Post word processor data
. ---------------------------------------------------------------------
.
PSCM0000  DISPLAY   *P1:24,*EL,"Ok to Post Comments (",*V2LON,ANSY,*HOFF:
                           "/",*V2LON,ANSN,*HOFF,") ? ";
.
PSCM1000  KEYIN     *P29:24,*EL,*DV,UNDLN1,*P29:24,*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      PSCM9500 IF EQUAL
          MATCH     ANSP,ANS
          GOTO      PSCM9500 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      PSCM9000 IF EQUAL
.
          BEEP
          GOTO      PSCM1000
.
PSCM9000  MOVE      ONE,OVRCD
          GOTO      PSCM9999
.
PSCM9500  MOVE      ZERO,OVRCD
PSCM9999  RETURN
.
. ---------------------------------------------------------------------
. WRCM0000 Write word processing data to live data file
. ---------------------------------------------------------------------
.
WRCM0000  MOVE      ZERO,KEY1               * set "comments" flag
          PACK      KEY10,SYFLSYS,SYFLFIL,SYFLFLD,SP10
          PACK      SYCMSPAR,SP30
          CALL      RDSYCM1
.
WRCM1000  CALL      RKSYCM1
          BRANCH    OVRCD,WRCM5000
.
          MATCH     SYFLSYS,SYCMSYS
          GOTO      WRCM5000 IF NOT EQUAL
          MATCH     SYFLFIL,SYCMFIL
          GOTO      WRCM5000 IF NOT EQUAL
          MATCH     SYFLFLD,SYCMFLD
          GOTO      WRCM5000 IF NOT EQUAL
.
          PACK      KEY10,SYCMSYS,SYCMFIL,SYCMFLD,SYCMUNIQ
          CALL      DESYCM1
          GOTO      WRCM1000
.
WRCM5000  CLOSE     TEMPFILE
          OPEN      TEMPFILE,FILENAME
          MOVE      SYFLSYS,SYCMSYS
          MOVE      SYFLFIL,SYCMFIL
          MOVE      SYFLFLD,SYCMFLD
          MOVE      ZERO,SYCMUNIQ
.  
WRCM6000  PACK      SYCMTEXT,SP70
          PACK      DIM60A,SP70
          PACK      DIM37A,SP70
          READ      TEMPFILE,SEQ;DIM60A  
          GOTO      WRCM9999 IF OVER
.
          PACK      DIM60B,DIM60A,SP30,SP30
          UNPACK    DIM60B,SYCMTEXT,DIM37A  * split line into 37 char bits
.
WRCM6500  MATCH     SP70,SYCMTEXT
          GOTO      WRCM6000 IF EQUAL
          ADD       ONE,SYCMUNIQ
          PACK      KEY10,SYCMSYS,SYCMFIL,SYCMFLD,SYCMUNIQ
          CALL      WRSYCM1
          MOVE      ONE,KEY1                * flag "comments exist"
          MATCH     SP70,DIM37A
          GOTO      WRCM6000 IF EQUAL
.                                           * if any left, write another record
          PACK      SYCMTEXT,DIM37A,SP70
          PACK      DIM37A,SP70
          GOTO      WRCM6500
.
WRCM9999  RETURN
.
. ---------------------------------------------------------------------------
. SAVE0000 Save screen
. ---------------------------------------------------------------------------
.
SAVE0000  MOVE      ONE,CSSCRNUM
          MOVE      ONE,HTOP
          MOVE      ONE,HLEF
          MOVE      "24",HBOT
          MOVE      "80",HRIG
          GETSCR    CSSCRNUM,HLEF,HTOP,HRIG,HBOT
SAVE9999  RETURN
.
. --------------------------------------------------------------------------
. DRAW0000 Redisplay field screen
. --------------------------------------------------------------------------
.
DRAW0000  MOVE      ONE,CSSCRNUM
          MOVE      ONE,HTOP
          MOVE      ONE,HLEF
          MOVE      "24",HBOT
          MOVE      "80",HRIG
          PUTSCR    CSSCRNUM,HLEF,HTOP,HRIG,HBOT
DRAW9999  RETURN
.
. --------------------------------------------------------------------------
. GETLEN00 Read Index Key Lengths
. --------------------------------------------------------------------------
.
GETLEN00  UNPACK    SP70,KYNO[1],KYNO[2],KYNO[3],KYNO[4],KYNO[5]
          UNPACK    SP70,KYNO[6],KYNO[7],KYNO[8]
          MOVE      "KEY",KEY3
          MOVE      ZERO,F1
.
          PACK      KEY5,SYFISYS,SYFIFIL,SP70
          CALL      RSSYID1
GETLEN10  CALL      RKSYID1
          BRANCH    OVRCD,GETLEN99
          MATCH     SYIDSYS,SYFISYS
          GOTO      GETLEN99 IF NOT EQUAL
          MATCH     SYIDFIL,SYFIFIL
          GOTO      GETLEN99 IF NOT EQUAL
.
          MOVE      ZERO,COUNT
          MOVE      ZERO,KEYLEN
GETLEN20  ADD       ONE,COUNT
          LOAD      SEGMENT,COUNT,SYIDFL1,SYIDFL2,SYIDFL3,SYIDFL4:
                                  SYIDFL5,SYIDFL6,SYIDFL7,SYIDFL8
          MATCH     SP70,SEGMENT
          GOTO      GETLEN30 IF EQUAL
.
          PACK      KEY8,SYIDSYS,SYIDFIL,SEGMENT
          CALL      RDSYFL2
          ADD       SYFLPHY,KEYLEN
.
          COMPARE   EIGHT,COUNT
          GOTO      GETLEN20 IF NOT EQUAL
.
GETLEN30  MOVE      KEYLEN,DIM4
          SQUEEZE   DIM4
          ADD       ONE,F1
          PACK      KYNO[F1],KEY3,DIM4
          GOTO      GETLEN10
.
GETLEN99  RETURN
. --------------------------------------------------------------------------
.        
          INC       SYSSCFIO/INC   
          INC       SYSFILIO/INC   
          INC       SYSFLDIO/INC   
          INC       SYSIDXIO/INC   
          INC       SYSCOMIO/INC   
          INC       IBASEQIO/INC
          INC       WEBERRIO/INC
.
          INC       TFILENAM
          INC       SYSSCFKY        
          INC       SYSFILKY        
          INC       SYSFLDKY        
          INC       SYSIDXKY        
          INC       STDGENCD         
.
