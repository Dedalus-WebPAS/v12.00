.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.04.01  08.04.2005 Peter Vela CAR 59696
.           Changed commodity group from DIM 5 to DIM 6
. V9.03.01 23/07/2004  Mike Laming  CAR 43474
.          Change UNCEA200 to not write to "apscebaf" if qty = 0
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B01 17.11.2000 Charles Handaya
.           Modification of Warehouse Security
.-------------------------------------------------------
. VF.00.02  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
.           22.12.1999 Charles Handaya
.           Recompiled for Fixing Audit Date (CCYYMMDD)
. VF.00.01  02.11.1999 Sandra Barcham
.           Recompiled to change E to exit to X in SINPONCD
.-------------------------------------------------------
CEAFILE   FORM      1
DIM30     DIM       30
ENDCST    DIM       5
F12P4     FORM      12.4
FMTQTY    DIM       9
FMTPRI    DIM       14
FMTTOT    DIM       14
FORM8P2   FORM      8.2
HEADMESS  DIM       25
LASTCST   DIM       5
LASTSUP   DIM       5
MODQTY    FORM      12.2
ORDERCNT  FORM      2
ORDERS    FORM      7[99]
ORDTOTAL  FORM      12.2
OTHDEL    DIM       40
NXORDLIN  FORM      3
PART15    DIM       15
SECSIWS   FORM      1
STRCST    DIM       5
UNIT10    DIM       10
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASIN48
.   Function      :   Generate Non-stock P/O from Imprest     
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSCEAFD/INC
          INC       APSCEBFD/INC
          INC       APSCIOFD/INC
          INC       APSMASFD/INC
          INC       APSMXRFD/INC
          INC       APSORDFD/INC
          INC       APSSNTFD/INC
          INC       APSSUBFD/INC
          INC       FMSAMAFD/INC
          INC       FMSCONFD/INC
          INC       FMSCSAFD/INC
          INC       FMSFPSFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCDF    
          INC       FMSLMCFD/INC
          INC       FMSTUPFD/INC
          INC       SINCCAFD/INC
          INC       SINCGAFD/INC
          INC       SINCGBFD/INC
          INC       SINCIAFD/INC
          INC       SINCICFD/INC
          INC       SINCIEFD/INC
          INC       SINCIFFD/INC
          INC       SINCIHFD/INC
          INC       SINCODFD/INC
          INC       SINCONFD/INC
          INC       SINFACFD/INC
          INC       SINLTTFD/INC
          INC       SINNATFD/INC
          INC       SINNPOFD/INC
          INC       SINORIFD/INC
          INC       SINPERFD/INC
          INC       SINPOAFD/INC
          INC       SINPOCFD/INC
          INC       SINRCPFD/INC
          INC       SINSUAFD/INC
          INC       SINSUBFD/INC
          INC       SINTMPDF/INC
          INC       SINWARFD/INC
          INC       SINWSEFD/INC
.=========================
.Local Variable Definition
.-------------------------
IMPORTFN  DIM      40 * Scr 00 Fld     7
CONFDESC  DIM      30 * Scr 00 Fld    15
MESSDESC  DIM      30 * Scr 00 Fld    16
DEFTWARE  DIM       5 * Scr 00 Fld    17
FROMCST   DIM      40 * Scr 00 Fld    22
TOCST     DIM      40 * Scr 00 Fld    23
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASIN48"
PRGNAM    INIT      "Generate Non-stock P/O from Imprest     "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      RDPAR000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening apsceaaf";
          OPEN      APSCEAA1,"apsceaaf"
          DISPLAY   *P56:24,"Opening apsceaaf";
          OPEN      APSCEAA2,"apsceaaf"
          DISPLAY   *P56:24,"Opening apscebaf";
          OPEN      APSCEBA1,"apscebaf"
          DISPLAY   *P56:24,"Opening apscebaf";
          OPEN      APSCEBA2,"apscebaf"
          DISPLAY   *P56:24,"Opening apscioaf";
          OPEN      APSCIOA1,"apscioaf"
          DISPLAY   *P56:24,"Opening apscioaf";
          OPEN      APSCIOA2,"apscioaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA1,"apsmxraf"
          DISPLAY   *P56:24,"Opening apsmxraf";
          OPEN      APSMXRA2,"apsmxraf"
          DISPLAY   *P56:24,"Opening apsordaf";
          OPEN      APSORDA1,"apsordaf"
          DISPLAY   *P56:24,"Opening apsordaf";
          OPEN      APSORDA2,"apsordaf"
          DISPLAY   *P56:24,"Opening apssntaf";
          OPEN      APSSNTA1,"apssntaf"
          DISPLAY   *P56:24,"Opening apssubaf";
          OPEN      APSSUBA1,"apssubaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA1,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA2,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA3,"fmsamaaf"
          DISPLAY   *P56:24,"Opening fmsamaaf";
          OPEN      FMSAMAA4,"fmsamaaf"
          MOVE      "   51",AUDTSECT
          MOVE      " 43",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudam";
            OPEN      FMSAUDAM,"fmsaudam"
          ENDIF
          MOVE      "   51",AUDTSECT
          MOVE      " 46",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening fmsaudla";
            OPEN      FMSAUDLA,"fmsaudla"
          ENDIF
          DISPLAY   *P56:24,"Opening fmscsaaf";
          OPEN      FMSCSAA1,"fmscsaaf"
          DISPLAY   *P56:24,"Opening fmslmaaf";
          OPEN      FMSLMAA1,"fmslmaaf"
          DISPLAY   *P56:24,"Opening fmslmcaf";
          OPEN      FMSLMCA1,"fmslmcaf"
          MOVE      "   24",AUDTSECT
          MOVE      "201",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudga";
            OPEN      SINAUDGA,"sinaudga"
          ENDIF
          MOVE      "   24",AUDTSECT
          MOVE      "207",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudic";
            OPEN      SINAUDIC,"sinaudic"
          ENDIF
          MOVE      "   24",AUDTSECT
          MOVE      "208",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudie";
            OPEN      SINAUDIE,"sinaudie"
          ENDIF
          MOVE      "   24",AUDTSECT
          MOVE      "210",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudpa";
            OPEN      SINAUDPA,"sinaudpa"
          ENDIF
          MOVE      "   24",AUDTSECT
          MOVE      "210",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudpc";
            OPEN      SINAUDPC,"sinaudpc"
          ENDIF
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA1,"sinccaaf"
          DISPLAY   *P56:24,"Opening sincgaaf";
          OPEN      SINCGAA1,"sincgaaf"
          DISPLAY   *P56:24,"Opening sincgaaf";
          OPEN      SINCGAA2,"sincgaaf"
          DISPLAY   *P56:24,"Opening sincgbaf";
          OPEN      SINCGBA1,"sincgbaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA1,"sinciaaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA1,"sincicaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA2,"sincicaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA1,"sincieaf"
          DISPLAY   *P56:24,"Opening sincifaf";
          OPEN      SINCIFA1,"sincifaf"
          DISPLAY   *P56:24,"Opening sincifaf";
          OPEN      SINCIFA2,"sincifaf"
          DISPLAY   *P56:24,"Opening sincihaf";
          OPEN      SINCIHA1,"sincihaf"
          DISPLAY   *P56:24,"Opening sincodaf";
          OPEN      SINCODA1,"sincodaf"
          DISPLAY   *P56:24,"Opening sinfacaf";
          OPEN      SINFACA1,"sinfacaf"
          DISPLAY   *P56:24,"Opening sinfacaf";
          OPEN      SINFACA2,"sinfacaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA1,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA2,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA3,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinnpoaf";
          OPEN      SINNPOA1,"sinnpoaf"
          DISPLAY   *P56:24,"Opening sinoriaf";
          OPEN      SINORIA1,"sinoriaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA1,"sinperaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA1,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA1,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinrcpaf";
          OPEN      SINRCPA1,"sinrcpaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA1,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsubaf";
          OPEN      SINSUBA1,"sinsubaf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA1,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA1,"sinwseaf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA2,"sinwseaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Options                            
          ENDIF
          RETURN
.--------------------------------
. Screen - Options                            
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Options                            
.-------------------------------------------------------
CF00L000
          MOVE      SP70,SIPAORI 
          MOVE      SP70,IMPORTFN
          MOVE      SP70,SIPAICN 
          MOVE      SP70,SIPADEL 
          MOVE      SP70,SIPAMES 
          MOVE      SP70,SIPADIN 
          MOVE      SP70,SIPAIDP 
          MOVE      SP70,SIPACON 
          MOVE      SP70,DEFTWARE
          MOVE      SP70,FROMCST 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Options                            
.--------------------------------------------------------
KY00L000
.
KY00L110
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIORNAME
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIOREXT 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "0",CKEYTYP
          CALL      EORIG000
          BRANCH    EXIT,KY00L900,KY00L900
          MOVE      ZERO,ACCEPT
          MOVE      SIPAORI,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIORNAME,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIOREXT,VAR      
            CALL      DISPITEM
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Options                            
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Options                            
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Options                            
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Options                            
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L101:
                            PS00L999,PS00L102,PS00L103,PS00L104:
                            PS00L105,PS00L106,PS00L107,PS00L108:
                            PS00L109,PS00L110,PS00L111,PS00L112:
                            PS00L113,PS00L114,PS00L999,PS00L115:
                            PS00L116,PS00L117,PS00L118
          GOTO     PS00L999
.
PS00L101
          MOVE      HEADMESS,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      SIORNAME,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      IMPORTFN,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      SIOREXT,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      SIPAICN,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      SIPADEL,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      SIPAMES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          UNPACK    SIPADIN,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      SIPAIDP,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          MOVE      SIPACON,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          MOVE      CONFDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          MOVE      MESSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          MOVE      DEFTWARE,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L114
          MOVE      SIWADES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L115
          MOVE      SIPEPER,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L116
          MOVE      SIPEYEAR,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L117
          MOVE      FROMCST,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L118
          MOVE      TOCST,VAR        
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Options                            
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L006:
                            SF00L006,SF00L006,SF00L103,SF00L006:
                            SF00L104,SF00L105,SF00L106,SF00L107:
                            SF00L108,SF00L109,SF00L006,SF00L006:
                            SF00L110,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L111,SF00L006
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L103,SF00L020:
                            SF00L104,SF00L105,SF00L106,SF00L107:
                            SF00L108,SF00L109,SF00L020,SF00L020:
                            SF00L110,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L111,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      PROC0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L103
          CALL     SELECTED
          STRIP     IMPORTFN
          SFORMAT   VAR,SCPSLEN
          MOVE      IMPORTFN,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,IMPORTFN
          SFORMAT   VAR,127
          ENDSET    IMPORTFN
          APPEND    SP70,IMPORTFN
          RESET     IMPORTFN
          CMATCH    EXITCHAR,IMPORTFN
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,IMPORTFN
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
          ENDIF
          MOVE      IMPORTFN,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L104
          CALL     SELECTED
          STRIP     SIPAICN 
          SFORMAT   VAR,SCPSLEN
          MOVE      SIPAICN,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,SIPAICN 
          SFORMAT   VAR,127
          ENDSET    SIPAICN 
          APPEND    SP70,SIPAICN 
          RESET     SIPAICN 
          CMATCH    EXITCHAR,SIPAICN 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,SIPAICN 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
          ENDIF
          MOVE      SIPAICN,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L105
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EDELP000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SIPADEL,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L106
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,MESSDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EMESS000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L106
            ENDIF
            BRANCH    EXIT,SF00L106,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SIPAMES,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   16",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      MESSDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L107
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EORDD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L107
            ENDIF
            BRANCH    EXIT,SF00L107,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          UNPACK    SIPADIN,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L108
          CALL     SELECTED
          STRIP     SIPAIDP 
          SFORMAT   VAR,SCPSLEN
          MOVE      SIPAIDP,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,SIPAIDP 
          SFORMAT   VAR,127
          ENDSET    SIPAIDP 
          APPEND    SP70,SIPAIDP 
          RESET     SIPAIDP 
          CMATCH    EXITCHAR,SIPAIDP 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,SIPAIDP 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L108
            ENDIF
          ENDIF
          MOVE      SIPAIDP,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L109
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,CONFDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ECONF000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L109
            ENDIF
            BRANCH    EXIT,SF00L109,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SIPACON,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   15",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      CONFDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L110
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIWADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EWARE000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L110
            ENDIF
            BRANCH    EXIT,SF00L110,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      DEFTWARE,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   18",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIWADES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L111
.
.
          MOVE      "   23",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOCST   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFCST000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L111
            ENDIF
            BRANCH    EXIT,SF00L111,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMCST,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   23",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOCST,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.------------------------------------------------------------
. Read Parameters
.------------------------------------------------------------
RDPAR000  CALL      GETCON00    * Read Controlf Parameters
.
          CALL      ONAT0000    * Do NATO Stuff
          CALL      CSIWS000    * check warehouse security
.
          RETURN
.------------------------------------------------------------
. Read Control Parameters
.------------------------------------------------------------
GETCON00  READ      CONTROLF,TWENTY3;*129,SNCODFYR,SNCONOPR,*143,HDEFWH
          READ      CONTROLF,TWENTY4;*165,HLASTCIN
          READ      CONTROLF,TWENTY5;HADEL1,HADEL2,HADEL3,HADEL4:
                                     HADEL5,HADEL6,HADEL7,HADEL8
          READ      CONTROLF,TWENTY6;*248,HPURCHP
          READ      CONTROLF,SIXTY3;*132,INCOSIN7,*240,SNCOPURC
.
.----------------------------------------------------------------------
. HACCNT    FORM 1  Running the Accounting System          0=No
. HACCDATA  DIM  20 General Ledger Data Directory
. HDEFWH    DIM  5  Default Warehouse for Non Stock Items
. HORDDES   DIM  1  Order Number Alhpa Prefix
.----------------------------------------------------------------------
          MOVE      ONE,CEAFILE
          READ      CONTROLF,TWENTY3;*95,HACCNT,*124,HORDDES:
                                    *143,HDEFWH
          READ      CONTROLF,TWENTY4;*135,HACCDATA,*165,HLASTCIN
          COMPARE   ONE,HACCNT
          GOTO      GETCON99 IF NOT EQUAL
.
.---- GL interface is on ----
.
          CLOSE     CONTROLF           * get gl control file if possible
          MOVE      "controlf.txt",KEY12
          PACK      KEY80,HACCDATA,KEY12
          SQUEEZE   KEY80
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      CONTROLF,KEY80
          TRAPCLR   IO
          IF        OVRCD=1
            OPEN      CONTROLF,"controlf"
          ENDIF
.
          CALL      RDFMCO50           * Read Account Code Parameters
          CALL      RDFMCO51
          CALL      RDFMCO52
          CALL      RDFMCO65
          CLOSE     CONTROLF
          OPEN      CONTROLF,"controlf"
.
          MOVE      "fmsamaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSAMAA1,KEY80
.
          MOVE      "fmslmaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSLMAA1,KEY80
.
          MOVE      "fmslmcaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSLMCA1,KEY80
.
          MOVE      "fmscsaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSCSAA1,KEY80
.
          MOVE      "fmstupaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSTUPA1,KEY80
.
          MOVE      ZERO,OVRCD
          MOVE      "apscioaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          TRAP      OVERCOND IF IO
          OPEN      APSCIOA1,KEY80
          TRAPCLR   IO
.
          MOVE      ZERO,OVRCD
          MOVE      "apsordaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          TRAP      OVERCOND IF IO
          OPEN      APSORDA1,KEY80
          TRAPCLR   IO
.
          MOVE      ZERO,OVRCD
          MOVE      "apsceaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          TRAP      OVERCOND IF IO
          OPEN      APSCEAA1,KEY80
          TRAPCLR   IO
.
          MOVE      "apscebaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          TRAP      OVERCOND IF IO
          OPEN      APSCEBA1,KEY80
          TRAPCLR   IO
          MOVE      OVRCD,CEAFILE
.
GETCON99  RETURN
.------------------------------------------------------------------------
. Open Nato X-Ref File if required
.------------------------------------------------------------------------
ONAT0000  OPEN      CONTROLF,"controlf"
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*141,INCNNATO
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,INCNNATO
            WRITAB    CONTROLF,SIXTY3;*141,INCNNATO
          ENDIF
.
          IF        INCNNATO=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      SINNATA1,"sinnataf"
            TRAPCLR   IO
            IF        OVRCD=1
              DISPLAY   *P1:24,*EL,*B,"Nato file does not exist. Run fixit.  ";
              CALL      HITENTER
              CHAIN     PGM
            ENDIF
.
            OPEN      SINNATA2,"sinnataf"
          ENDIF
.
ONAT9999  RETURN
.----------------------------------------------------------------------
. Check warehouse security
. Returns SECSIWS : 0 = no access to any warehouse
.                   1 = access to one warehouse
.                   2 = access to more than one warehouse
.                   3 = access to all warehouse(Not Applicable - for future use)
.----------------------------------------------------------------------
..                                            * (for future use)
..CSIWS000  MOVE      "3",SECSIWS             * default to all warehouse's
.
..          PACK      KEY9,SP70               * any security set up ???
..          CALL      RSSIWS1
..          CALL      RKSIWS1
..          BRANCH    OVRCD,CSIWS999
.
CSIWS000  MOVE      "0",SECSIWS             * check for no warehouse's
          PACK      KEY9,PASSCODE,SP70
          CALL      RSSIWS1
          CALL      RKSIWS1
          BRANCH    OVRCD,CSIWS999
.
          MATCH     SIWSUID,PASSCODE
          GOTO      CSIWS999 IF NOT EQUAL
.
          MOVE      "1",SECSIWS             * check for one warehouse's
          CALL      RKSIWS1
          BRANCH    OVRCD,CSIWS999
.
          MATCH     SIWSUID,PASSCODE
          GOTO      CSIWS999 IF NOT EQUAL
.
          MOVE      "2",SECSIWS             * more than one warehouse
.
CSIWS999  RETURN
.
.----------------------------------------------------------------------
. Process Imprest Details
.----------------------------------------------------------------------
PROC0000  DISPLAY  *P1:24,*EL,"Verifying ..."
.
          CALL     GENOR000       * Generate Orders
          BRANCH   EXIT,PROC9999
.
PROC9999  RETURN
.------------------------------------------------------------
. Generate Orders from Temp File.
.------------------------------------------------------------
GENOR000  DISPLAY  *P1:24,*EL,"Processing ..."
.
          MOVE     SP70,LASTSUP   * Last Supplier
          MOVE     SP70,LASTCST   * Last Cost Centre
          PACK     KEY17,STRCST,SP70
          CALL     RSSINP1
.
GENOR100  CALL     RKSINP1
          BRANCH   OVRCD,GENOR900
.
          MATCH    SINPCST,ENDCST
          GOTO     GENOR900 IF LESS
.
          CALL     MKORD000                * create order
          BRANCH   EXIT,GENOR999           * 1=could not create order
.
          GOTO     GENOR100
.
GENOR900  MOVE     ZERO,EXIT
          CALL     PEND0000
GENOR999  RETURN
.----------------------------------------------------------------------
. Process order line Item
.----------------------------------------------------------------------
MKORD000  MATCH     LASTSUP,SINPSUP         * New Order for Each Supplier
          GOTO      MKORD100 IF EQUAL
.
          CALL      NEWORD00
          GOTO      MKORD200
.
MKORD100  MATCH     LASTCST,SINPCST         * New Order for Each Cost Centre
          GOTO      MKORD200 IF EQUAL
.
          CALL      NEWORD00
.
MKORD200  MOVE      ONE,SIIANON
          MOVE      ONE,SIFACTOR
          MOVE      SP70,SIIAISS
          MOVE      SINPCAT,KEY7
          CALL      RDSIIA1
          IF        OVRCD=0
            PACK      KEY30,SIIAISS,SINPSUT
            CALL      RDSIFA1
          ENDIF
.
          MOVE      ".49",FORM8P2
          ASSIGN    SINPQTY/SIFACTOR,SIPCOQT
          ASSIGN    SIPCOQT+FORM8P2,SIPCOQT          * Order quantity
          MOVE      SIPCOQT,FORM12
          MOVE      FORM12,SIPCOQT
.
          PACK      SIPCDAT,SIPEYEAR,SIPEPER,SP70
          MOVE      SIPAWAR,SIPCWAR
.
          MOVE      SINPSUB,SIPCPRD
          MOVE      SINPCST,SIPCCST     * Cost Centre
          MOVE      SINPCAT,SIPCCAT     * Catalog Code
          MOVE      SINPPN,SIPCPN       * Part Number
          MOVE      SINPPD,SIPCPD       * Part Description
          MOVE      SINPSUT,SIPCSUT     * Supply Unit
          MOVE      SINPCDT,SIPCCDT     * Contract Date
          MOVE      SINPCON,SIPCCON     * Contract
          MOVE      SINPEDT,SIPCEDD     * Expected Delivery Date
          MOVE      SINPECT,SIPCECT     * Expected Cost
          MOVE      SINPGSTA,SIPCGSTA
          MOVE      SINPGST,SIPCGST
.
          MOVE      SP70,SIPCFDD        * Set Up Other P/O Fields
          MOVE      SIPCOQT,SIPCOQO
          MOVE      SIPCECT,SIPCOOP
          MOVE      SIPCGSTA,SIPCOGS
          MOVE      ZERO,SIPCRQT
          MOVE      ZERO,SIPCIQT
          MOVE      ZERO,SIPCTCR
          MOVE      ZERO,SIPCTIN
          MOVE      SP70,SIPCUR1
          MOVE      SP70,SIPCUR2
          MOVE      SP70,SIPCUD1
          MOVE      SP70,SIPCUD2
          MOVE      SP70,SIPCUY1
          MOVE      SP70,SIPCUY2
          MOVE      SP70,SIPCSPA
.
          MOVE      SIPAPON,SIPCPON
          REPEAT
            ADD       ONE,NXORDLIN
            MOVE      NXORDLIN,SIPCITM
            PACK      KEY10,SIPCPON,SIPCITM
            CALL      RASIPC1
          UNTIL     OVRCD=1
          CALL      WRSIPC1             * Write Order Detail Line
          MOVE      ONE,AUDTTYPE
          CALL      WASIPC00            * Audit Add
.
          MOVE      ONE,SIFACTOR        * Get Factor for Usage Calc
          PACK      KEY30,SIIAISS,SIPCSUT
          CALL      RDSIFA1             * Should not be Required for St V.
.
          ASSIGN    SIPCOQT*SIFACTOR,SIUSQTY
          IF        SIPCECT<0
            MOVE      ZERO,SIUSCST
          ELSE
            IF        SNCOPURC=1
              ASSIGN    SIPCECT*SIPCOQT,SIUSCST
            ELSE
              MOVE      SIPCECT,F12P4
              SUB       SIPCGSTA,F12P4
              ASSIGN    F12P4*SIPCOQT,SIUSCST
            ENDIF
          ENDIF
.
          CALL      SINORDUS            * Update Purchases Usage
.
          PACK      KEY12,SIPCCAT,SIPCWAR
          CALL      RDSIIE1
          IF        OVRCD=0
            ADD       SIUSQTY,SIIESOO
            CALL      UPSIIE1           * Update Stock on Order
          ENDIF
.
          COMPARE   ZERO,CEAFILE
          GOTO      MKORD900 IF NOT EQUAL
.
          MOVE      SIPCOQT,MODQTY
          CALL      UNCEA000
.
MKORD900  MOVE      ZERO,EXIT           * Create Order OK
          GOTO      MKORD999
.
MKORD950  MOVE      ONE,EXIT            * Can't Create Order
MKORD999  RETURN
.------------------------------------------------------------
. Start New Purchase Order
.------------------------------------------------------------
NEWORD00  PACK      LASTCST,SINPCST,SP70
          PACK      LASTSUP,SINPSUP,SP70
          CALL      UUSIPA1               * unlock last order
          MOVE      SINPCST,KEY5          * Get Cost Centre Details
          CALL      RDSICA1
          CALL      NXORD000              * get next order
          BRANCH    EXIT,MKORD950         * Exit if Error Found
          ADD       ONE,ORDERCNT          * Save Order No. in List
          MOVE      SIPAPON,ORDERS[ORDERCNT]
.
NEWORD10  MOVE      "0",NXORDLIN
.
NEWORD20  DISPLAY   *P1:24,*EL,"Generating Order No. : ":
                    *V2LON,SIPAPON,SLASH,NXORDLIN,*HOFF:
                    " for ",*V2LON,SINPSUP,"/",SINPCST;
          RETURN
.----------------------------------------------------------------------
. Get next order
.----------------------------------------------------------------------
NXORD000  MOVE      "       ",SIPAPON
          CALL      SINORDNO         * Get Next Order Number
          IF        OVRCD=1
            MOVE      "Unable to Allocate an Order Number - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      NXORD950
          ENDIF
.
          PACK      APMASCON,SP70
          PACK      KEY5,SINPSUP,SP70
          CALL      RDAPMA1
.
          MOVE      SICADESC,SIPAIDP
          MOVE      SINPSUP,SIPASUP
          PACK      SIPASCN,APMASCON,SP70
          PACK      SIPADPR,SP70
          PACK      SIPADCN,SP70
          PACK      SIPADCM,SP70
          PACK      SIPASPA,SP70
          MOVE      SINPCST,SIPACST
          MOVE      DEFTWARE,SIPAWAR
.
          MOVE      SIPAPON,KEY7
          CALL      RASIPA1
          COMPARE   ZERO,OVRCD
          GOTO      NXORD000 IF EQUAL
.
          CALL      WRSIPA1
          CALL      RLSIPA1
          MOVE      ONE,AUDTTYPE
          CALL      WASIPA00                 * Audit Add
.
          PACK      KEY7,SIPAPON
          CALL      RDSIRP1
          IF        OVRCD=1
            MOVE      SIPAPON,SIRPPON
            CALL      WRSIRP1
          ENDIF
          MOVE      ZERO,F1
NXORD900  MOVE      ZERO,EXIT
          GOTO      NXORD999
.
NXORD950  MOVE      ONE,EXIT
.
NXORD999  RETURN
.----------------------------------------------------------------------
. Print End of Report
.----------------------------------------------------------------------
PEND0000  MOVE     ZERO,CPAGENO
          MOVE     "999",CLNO
          CLOCK    TIME,CTIMEIS
          MOVE     ZERO,ORDERCNT
.
PEND1000  ADD      ONE,ORDERCNT
          COMPARE  ZERO,ORDERS[ORDERCNT]
          GOTO     PEND9000 IF EQUAL
.
          MOVE     ORDERS[ORDERCNT],KEY7
          CALL     RDSIPA1
          BRANCH   OVRCD,PEND1000
.
          UNPACK   SP70,SICACODE,SICADESC
          PACK     KEY5,SIPACST,SP70
          CALL     RDSICA1
.
          PACK     KEY5,SIPASUP,SP70
          CALL     RDAPMA1
          BRANCH   OVRCD,PEND1000
.
          CALL     ACKHED00
.
          CALL     PRNON000
          GOTO     PEND1000
.
PEND9000  IF       CLNO=999
            CALL     ACKHED00
            Print    *N,*1,"No Purchase Orders Generated",*N
          ENDIF
          CALL     UND132
          PRINT    *50,"**** End of Report ****"
.
PEND9100  PACK     KEY17,STRCST,SP70
          CALL     RSSINP1
          CALL     RKSINP1
          BRANCH   OVRCD,PEND9999
.
          MATCH    SINPCST,ENDCST
          GOTO     PEND9999 IF LESS
.
          PACK     KEY17,SINPCST,SINPSUP,SINPCAT,SP70
          CALL     DESINP1
          GOTO     PEND9100
.
PEND9999  RETURN
.------------------------------------------------------------
. Print Non VHA Details
.------------------------------------------------------------
PRNON000  MOVE      ZERO,ORDTOTAL
          PACK      KEY10,SIPAPON,SP70
          CALL      RSSIPC1
.
PRNON100  CALL      RKSIPC1
          BRANCH    OVRCD,PRNON900
          MATCH     SIPAPON,SIPCPON          * Same P/O?
          GOTO      PRNON900 IF NOT EQUAL    * No
          MOVE      SIPCCAT,KEY7
          CALL      RDSIIA1
          MOVE      SP70,KEY40
          CALL      ACKLIN00
          GOTO      PRNON100
.
PRNON900  CALL      ORDTOT00
          RETURN
.----------------------------------------------------------------------
. Print Line Item Details
.----------------------------------------------------------------------
ACKLIN00  COMPARE   "55",CLNO
          CALL      ACKHED00 IF NOT LESS
.
          MOVE      "9,999,999",FMTQTY
          MOVE      "9,999,999.9999",FMTPRI
          MOVE      "999,999,999.99",FMTTOT
          ASSIGN    SIPCOQT*SIPCECT,F12P2
          MOVE      SIPCOQT,F7
          FEDIT     F7,FMTQTY               * Quantity
          FEDIT     SIPCECT,FMTPRI          * Price
          FEDIT     F12P2,FMTTOT            * Line Total
          ADD       F12P2,ORDTOTAL          * Accumulate Order Total
.
          MOVE      SIPCPN,PART15
          MOVE      SIPCSUT,UNIT10
          PRINT     SIPCCAT,SP1,SIIADES,SP1,PART15,SP1,UNIT10,FMTQTY:
                    FMTPRI,FMTTOT
.
          ADD       ONE,CLNO
ACKLIN99  RETURN
.----------------------------------------------------------------------
. Print Report Header
.----------------------------------------------------------------------
ACKHED00  CALL      HEAD132
          UNPACK    SIPADIN,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      SIPASUP,KEY5
          CALL      RDAPMA1
          PRINT     "Cost Centre      : ",SIPACST,"(",SICACODE,")":
                *80,"Originator       : ",SIORNAME,"(",SIPAORI,")"
          PRINT     "Supplier         : ",SIPASUP,SP1,APMASN1," Ph: ",APMASTEL:
                 *N,"Order Number     : ",SIPAPON:
                *50,"Order Date       : ",CPCDATE:
                 *N,"Delivery         : ",SIPADEL
          CALL      UND132
          PRINT     "Catalog Description                      ":
                    "                            Part Number  ":
                    "   Supply Unit     Qty         Price         Total"
          CALL      UND132
          MOVE      "9",CLNO
          RETURN
.----------------------------------------------------------------------
. Print Order Total
.----------------------------------------------------------------------
ORDTOT00  CALL     UND132
          PRINT    "Total for Order = ",ORDTOTAL
          CALL     UND132
          RETURN
.----------------------------------------------------------------------
. Print End of Report
.----------------------------------------------------------------------
ACKEND00  PRINT      *50,"**** End of Report ****"
          RETURN
.----------------------------------------------------------------------
. Update Non-Stock Item to Accounts Payable Files
.----------------------------------------------------------------------
UNCEA000  MOVE      HORDDES,APEAISC  * System Prefix
          MOVE      SIPCPON,APEAORD
          MOVE      SIPASUP,APEACRD
          PACK      KEY8,APEAISC,APEAORD,SP70
          CALL      RDAPEA1         * Order Header Record
          IF        OVRCD=1
            MOVE      SIPADIN,APEADAT
            CALL      WRAPEA1
          ELSE
            MATCH     SIPASUP,APEACRD
            IF        !@EQUAL
              MOVE      SIPASUP,APEACRD
              MOVE      SIPADIN,APEADAT
              CALL      UPAPEA1
            ENDIF
          ENDIF
.
          MOVE      HORDDES,APEBISC  * System Prefix
          MOVE      SIPCPON,APEBORD
          PACK      APEBCAT,SIPCITM,SP70
          PACK      KEY14,APEBISC,APEBORD,APEBCAT
          CALL      RDAPEB1
          IF        OVRCD=0
            ADD       MODQTY,APEBQTY
            MOVE      SIPCECT,APEBUCT
            MOVE      SIPCGSTA,APEBUGS
            ASSIGN    APEBQTY*APEBUCT,APEBAMT
            ASSIGN    APEBQTY*APEBUGS,APEBGST
            IF        APEBQTY>0
              CALL      UPAPEB1
            ELSE
              CALL      DEAPEB1
              UNPACK    SP70,APEBISC,APEBORD,APEBCAT
              PACK      KEY8,APEAISC,APEAORD,SP70
              PACK      KEY14,KEY8,SP70
              CALL      RSAPEB1
              CALL      RKAPEB1
              PACK      KEY14,APEBISC,APEBORD,APEBCAT,SP70
              MATCH     KEY8,KEY14
              CALL      DEAPEA1 IF NOT EQUAL
            ENDIF
.
            MOVE      MODQTY,APEBQTY
            MOVE      SIPCECT,APEBUCT
            MOVE      SIPCGSTA,APEBUGS
            ASSIGN    APEBQTY*APEBUCT,APEBAMT
            ASSIGN    APEBQTY*APEBUGS,APEBGST
            CALL      UFMFP000         * update committed expenditure
            GOTO      UNCEA999
          ENDIF
.
. No Existing Record
.--------------------
          MOVE      HDEFWH,KEY5
          CALL      RDSIWA1
          IF        OVRCD=1
            MOVE      SP70,KEY5
            CALL      RSSIWA1
            CALL      RKSIWA1
          ENDIF
.
          PACK      SICAGL,SP70
          MOVE      SIPCCST,KEY5
          CALL      RDSICA1
.
          UNPACK    SICAGL,APEBLED,APEBACC
          MOVE      SIWADISS,APEBDIS
          MOVE      SIWARESP,APEBRES
          MOVE      SP70,APEBSPA
          MOVE      MODQTY,APEBQTY
          MOVE      SIPCECT,APEBUCT
          MOVE      SIPCGSTA,APEBUGS
          ASSIGN    APEBQTY*APEBUCT,APEBAMT
          ASSIGN    APEBQTY*APEBUGS,APEBGST
          MOVE      SIPCPD,APEBDES
.
UNCEA100  MATCH     SP70,APEBACC       * use posting acc if no CC
          GOTO      UNCEA115 IF EQUAL
.
          STORE     APEBACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          LOAD      APEBACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          IF        FMSUUD2A=1
            PACK      APEBACC,APEBACC,FMSUUD2B
          ENDIF
.
          MATCH     SP70,SIPCPRD
          IF        @EQUAL
            MOVE      SIIASUB,SIPCPRD
          ENDIF
          PACK      KEY5,SIPCPRD,SP70
          CALL      RDSISA1
          BRANCH    SIWATYP,UNCEA120,UNCEA115
.
UNCEA110  PACK      SILTSUB,SIPCPRD,SP70
          PACK      FMAMLEDG,APEBLED,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APEBACC,APEBACC,SILTSUB,SP70 * Add subj code
          GOTO      UNCEA200
.
UNCEA115  PACK      APEBACC,SICAPACC,SP70        * Use CC Posting Account
          GOTO      UNCEA200
.
UNCEA120  MOVE      SISACOMM,KEY6                                      *C-59696
          CALL      RDSIGA1
          PACK      SILTSUB,SISACOMM,SP70
          PACK      FMAMLEDG,APEBLED,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APEBACC,APEBACC,SILTSUB,SP70 * Add commodity code
.
UNCEA200  CALL      XHKFMS00
.                                           * don't write if qty=0     *I-43474
          IF        APEBQTY > 0
            CALL      WRAPEB1
          ENDIF                                                        *I-43474
          CALL      UFMFP000           * update committed expenditure
.
UNCEA999  RETURN
.------------------------------------------------------------
. Check FMS Account
.------------------------------------------------------------
XHKFMS00  MOVE      ZERO,FMAMTYPE
          PACK      KEY14,APEBLED,APEBACC,SP70
          CALL      RDFMAM1
          IF        OVRCD=1
            SQUEEZE   KEY14
            CALL      RDFMAM1
            IF        OVRCD=0
              UNPACK    KEY14,APEBLED,APEBACC
            ENDIF
          ENDIF
.
          RETURN
.----------------------------------------------------------------------
. Update period summary file
.----------------------------------------------------------------------
UFMFP000  PACK      KEY2,APEBLED,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,UFMFP999
.
          PACK      KEY14,APEBLED,APEBACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,UFMFP999
.
          PACK      WORKDATE,APEADAT,SP70
          CALL      CFYR0000
          BRANCH    EXIT,UFMFP999
.
          MOVE      "fmsp",KEY4
          PACK      KEY8,KEY4,CURYEAR,SP70
          REP       " 0",CURYEAR
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,KEY8
          TRAPCLR   IO
          BRANCH    OVRCD,UFMFP999
.
          PACK      KEY14,APEBLED,APEBACC,SP70
          UNPACK    KEY14,FMFPCULD,FMFPCUAC
          CALL      RDFMFP1
          IF        OVRCD=0
            ASSIGN    APEBAMT+FMFPCOM2,FMFPCOM2
            CALL      UPFMFP1
          ELSE
            MOVE      ZERO,FMFPCBF
            MOVE      ZERO,FMFPC01
            MOVE      ZERO,FMFPC02
            MOVE      ZERO,FMFPC03
            MOVE      ZERO,FMFPC04
            MOVE      ZERO,FMFPC05
            MOVE      ZERO,FMFPC06
            MOVE      ZERO,FMFPC07
            MOVE      ZERO,FMFPC08
            MOVE      ZERO,FMFPC09
            MOVE      ZERO,FMFPC10
            MOVE      ZERO,FMFPC11
            MOVE      ZERO,FMFPC12
            MOVE      ZERO,FMFPC13
.
            MOVE      ZERO,FMFPABF
            MOVE      ZERO,FMFPA01
            MOVE      ZERO,FMFPA02
            MOVE      ZERO,FMFPA03
            MOVE      ZERO,FMFPA04
            MOVE      ZERO,FMFPA05
            MOVE      ZERO,FMFPA06
            MOVE      ZERO,FMFPA07
            MOVE      ZERO,FMFPA08
            MOVE      ZERO,FMFPA09
            MOVE      ZERO,FMFPA10
            MOVE      ZERO,FMFPA11
            MOVE      ZERO,FMFPA12
            MOVE      ZERO,FMFPA13
            MOVE      ZERO,FMFPCOM
.
            MOVE      ZERO,FMFPCBFD
            MOVE      ZERO,FMFPC01D
            MOVE      ZERO,FMFPC02D
            MOVE      ZERO,FMFPC03D
            MOVE      ZERO,FMFPC04D
            MOVE      ZERO,FMFPC05D
            MOVE      ZERO,FMFPC06D
            MOVE      ZERO,FMFPC07D
            MOVE      ZERO,FMFPC08D
            MOVE      ZERO,FMFPC09D
            MOVE      ZERO,FMFPC10D
            MOVE      ZERO,FMFPC11D
            MOVE      ZERO,FMFPC12D
            MOVE      ZERO,FMFPC13D
.
            MOVE      ZERO,FMFPABFD
            MOVE      ZERO,FMFPA01D
            MOVE      ZERO,FMFPA02D
            MOVE      ZERO,FMFPA03D
            MOVE      ZERO,FMFPA04D
            MOVE      ZERO,FMFPA05D
            MOVE      ZERO,FMFPA06D
            MOVE      ZERO,FMFPA07D
            MOVE      ZERO,FMFPA08D
            MOVE      ZERO,FMFPA09D
            MOVE      ZERO,FMFPA10D
            MOVE      ZERO,FMFPA11D
            MOVE      ZERO,FMFPA12D
            MOVE      ZERO,FMFPA13D
            MOVE      ZERO,FMFPCOMD
.
            MOVE      ZERO,FMFPCBFT
            MOVE      ZERO,FMFPC01T
            MOVE      ZERO,FMFPC02T
            MOVE      ZERO,FMFPC03T
            MOVE      ZERO,FMFPC04T
            MOVE      ZERO,FMFPC05T
            MOVE      ZERO,FMFPC06T
            MOVE      ZERO,FMFPC07T
            MOVE      ZERO,FMFPC08T
            MOVE      ZERO,FMFPC09T
            MOVE      ZERO,FMFPC10T
            MOVE      ZERO,FMFPC11T
            MOVE      ZERO,FMFPC12T
            MOVE      ZERO,FMFPC13T
.
            MOVE      ZERO,FMFPABFT
            MOVE      ZERO,FMFPA01T
            MOVE      ZERO,FMFPA02T
            MOVE      ZERO,FMFPA03T
            MOVE      ZERO,FMFPA04T
            MOVE      ZERO,FMFPA05T
            MOVE      ZERO,FMFPA06T
            MOVE      ZERO,FMFPA07T
            MOVE      ZERO,FMFPA08T
            MOVE      ZERO,FMFPA09T
            MOVE      ZERO,FMFPA10T
            MOVE      ZERO,FMFPA11T
            MOVE      ZERO,FMFPA12T
            MOVE      ZERO,FMFPA13T
            MOVE      ZERO,FMFPCOMT
.
            PACK      FMFPSPAR,SP70,SP70
            ASSIGN    APEBAMT,FMFPCOM2
            CALL      WRFMFP1
          ENDIF
.
          COMPARE   ONE,FMCOCALC
          GOTO      UFMFP999 IF NOT EQUAL
.
          PACK      KEY20,PORT,CURYEAR,APEBLED,APEBACC,SP70
          CALL      RDFMTU1            * record exists ?
          COMPARE   ZERO,OVRCD
          GOTO      UFMFP999 IF EQUAL
.
          UNPACK    KEY20,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC
          MOVE      FMAMCLEV,FMTULEV
          MOVE      ZERO,FMTUACT
          MOVE      ZERO,FMTUBUD
          MOVE      SP70,FMTUSPAR
          CALL      WRFMTU1            * Flag For Total Account Update
.
UFMFP999  RETURN
.
.----------------------------------------------------------------------
. get subjective/commodity translation
.----------------------------------------------------------------------
GTRA0000  PACK      KEY8,FMAMLEDG,SILTSUB,SP70                         *C-59696
          CALL      RDSILT1
.
GTRA9999  RETURN
.
.----------------------------------------------------------------------
. Enter Originator Code
.----------------------------------------------------------------------
EORIG000  COMPARE   ZERO,SECSIWS
          GOTO      EORIG900 IF EQUAL
.
          MOVE      ZERO,CKEYTYP
          CALL      KSIORA00
          BRANCH    EXIT,EORIG999,EORIG999
.
          MOVE      SIORORIG,SIPAORI
          CALL      SDEF0000
          GOTO      EORIG999
.
EORIG900  MOVE      "You have no access for All warehouses - ",DISPMSG
          CALL      MESSAGE1
          MOVE      ONE,EXIT
          GOTO      EORIG999
.
EORIG999  RETURN
.----------------------------------------------------------------------
. Set up defaults
.----------------------------------------------------------------------
SDEF0000  MOVE      ZERO,EXIT
          MOVE      SP70,SIPAICN
          MOVE      SIPAORI,KEY3
          CALL      RDSIOR1
          IF        OVRCD=0
            MOVE      SIORHOSP,SIPAICN
          ENDIF
.
          MOVE      SP70,SIPACON
          MOVE      SP70,CONFDESC
          MOVE      SP70,SIPAIDP
          MOVE      SP70,SIPAUR1
          MOVE      SP70,SIPAUR2
          MOVE      SP70,SIPAUD1
          MOVE      SP70,SIPAUD2
          MOVE      SP70,SIPAUC1
          MOVE      SP70,SIPAUC2
          MOVE      SP70,SIPAUY1
          MOVE      SP70,SIPAUY2
          MOVE      SP70,SIPADPR
          MOVE      SP70,SIPADCM
          MOVE      SP70,SIPADCN
.
          READ      CONTROLF,TWENTY5;HADEL1,HADEL2,HADEL3,HADEL4:
                                     HADEL5,HADEL6,HADEL7,HADEL8
          MOVE      SIORDEL,F1
          LOAD      OTHDEL,F1,HADEL1,HADEL2,HADEL3,HADEL4:
                              HADEL5,HADEL6,HADEL7,HADEL8
.
          MOVE      SIORDEL,SIPAPNT
          MOVE      OTHDEL,SIPADEL
          MOVE      SIORMESS,SIPAMES
          MOVE      SIORCON,SIPACON
          MOVE      SP70,MESSDESC
          MOVE      SP70,CONFDESC
.
          MATCH     SP70,SIPAMES
          IF        !(@EQUAL)
            MOVE      "ME ",SICDCATA
            PACK      KEY6,SICDCATA,SIPAMES,SP70
            CALL      RDSICD1
            IF        OVRCD=0
              MOVE      SICDDESC,MESSDESC
            ENDIF
          ENDIF
.
          MATCH     SP70,SIPACON
          IF        !(@EQUAL)
            MOVE      "CF ",SICDCATA
            PACK      KEY6,SICDCATA,SIPACON,SP70
            CALL      RDSICD1
            IF        OVRCD=0
              MOVE      SICDDESC,CONFDESC
            ENDIF
          ENDIF
.
          MOVE      "Start      ",FROMCST
          MOVE      "End        ",TOCST
          MOVE      SP70,STRCST
          MOVE      "~~~~~",ENDCST
.
          PACK      SIPADIN,CCC,CYY,CMM,CDD
          REP       " 0",SIPADIN
          MOVE      SIPADIN,SIPEDATE
          CALL      RSIPE000   * Get Period End Date
.
          PACK      KEY5,SP70
          CALL      RSSIWA1
SDEF1000  CALL      RKSIWA1
          BRANCH    OVRCD,SDEF9999
.
. check warehouse security
.
          PACK      KEY9,PASSCODE,SIWAWAR,SP70
          CALL      RDSIWS1
          BRANCH    OVRCD,SDEF1000
.
          MOVE      ZERO,F7
          MOVE      SIWANPO,F7
          COMPARE   ZERO,F7
          IF        @EQUAL
            MOVE      "   17",FLDID
            CALL      GETPOSIT
            IF        EXIT=0
              MOVE     SIWAWAR,DEFTWARE
              PACK     VAR,DEFTWARE,SP70,SP70
              CALL      DISPITEM
            ENDIF
.
            MOVE      "   18",FLDID
            CALL      GETPOSIT
            IF        EXIT=0
              PACK     VAR,SIWADES,SP70,SP70
              CALL      DISPITEM
            ENDIF
.
            MOVE      "    5",FLDID
            CALL      GETPOSIT
.
            BEEP
            CLEAR     DISPMSG
            APPEND    "Warehouse ",DISPMSG
            APPEND    SIWAWAR,DISPMSG
            APPEND    " May Not Have Purchase Orders. - ",DISPMSG
            CALL      MESSAGE1
            MOVE      ONE,EXIT
            GOTO      SDEF9999
          ENDIF
.
          MOVE      SIWAWAR,DEFTWARE
          MOVE      ZERO,F7
          MOVE      SIWANPO,F7
          COMPARE   ZERO,F7
          GOTO      SDEF1000 IF EQUAL
.
SDEF9999  RETURN
.
EDELP000  KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,SIPADEL:
                    *PCCOL:CVERT
          ENDSET    SIPADEL
          APPEND    SP70,SIPADEL
          RESET     SIPADEL
          CMATCH    EXITCHAR,SIPADEL
          IF        @EQUAL
            MOVE      TWO,EXIT
            GOTO      EDELP999
          ENDIF
          MOVE      "0",SIPAPNT
          MOVE      SIPADEL,ANS
          MOVE      ZERO,F1
          MOVE      ANS,F1
          BRANCH    F1,EDELP100,EDELP100,EDELP100,EDELP100:
                       EDELP100,EDELP100,EDELP100,EDELP100
          GOTO      EDELP999
.
EDELP100  IF        HPURCHP=6
            MOVE      F1,SIPAPNT
            IF        F1 >=1 & F1 <6
              LOAD      DIM30,F1,HADEL1,HADEL2,HADEL3,HADEL4:
                                 HADEL5
              PACK      SIPADEL,DIM30,SP70
              GOTO      EDELP999
            ELSE
              MOVE      "6",SIPAPNT
            ENDIF
          ENDIF
.
          IF        HPURCHP=16
            MOVE      F1,SIPAPNT
            IF        F1 >=1 & F1 <9
              LOAD      DIM30,F1,HADEL1,HADEL2,HADEL3,HADEL4:
                                 HADEL5,HADEL6,HADEL7,HADEL8
              PACK      SIPADEL,DIM30,SP70
              GOTO      EDELP999
            ELSE
              MOVE      "0",SIPAPNT
              PACK      DIM30,HADEL3,SP70
              GOTO      EDELP999
            ENDIF
          ENDIF
.
          LOAD      DIM30,F1,HADEL1,HADEL2,HADEL3,HADEL4:
                             HADEL5,HADEL6,HADEL7,HADEL8
          PACK      SIPADEL,DIM30,SP70
.
EDELP999  RETURN
.----------------------------------------------
. Enter Message Code
.----------------------------------------------
EMESS000  MOVE        ZERO,CKEYTYP
          MOVE        "ME ",SICDCATA
          CALL        KSICDB00
          BRANCH      EXIT,EMESS900,EMESS999
          MOVE        SICDCODE,SIPAMES
EMESS900  MOVE        SP70,MESSDESC
          MATCH       SP70,SIPAMES
          GOTO        EMESS999 IF EQUAL
.
          MOVE        "ME ",SICDCATA
          PACK        KEY6,SICDCATA,SIPAMES,SP70
          CALL        RDSICD1
          IF          OVRCD=0
            MOVE        SICDDESC,MESSDESC
          ENDIF
.
EMESS999  RETURN
.
.------------------------------------------------------------
. Enter Date of Order
.------------------------------------------------------------
EORDD000  UNPACK    SIPADIN,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          PACK      SIPADIN,CCENT,CYEAR,CMON,CDAY
          REP       " 0",SIPADIN
          MOVE      SIPADIN,SIPEDATE
          CALL      RSIPE000   * Get Period End Date
          IF        OVRCD=1
            MOVE      "Period Not on File. Invalid Date - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      EORDD000
          ENDIF
          IF        SIPELOC=1
            MOVE      "Period Locked. - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      EORDD000
          ENDIF
.
          MATCH     SIPEYEAR,SIPECYR
          IF        !(@EQUAL)
            MOVE      "WARNING : Period Not in Current Year. - ",DISPMSG
            BEEP
            CALL      MESSAGE1
          ENDIF
.
EORDD999  RETURN
.
.----------------------------------------------
. Enter Confirmation Code
.----------------------------------------------
ECONF000  MOVE        ZERO,CKEYTYP
          MOVE        "CF ",SICDCATA
          CALL        KSICDB00
          BRANCH      EXIT,ECONF900,ECONF999
          MOVE        SICDCODE,SIPACON
ECONF900  MOVE      SP70,CONFDESC
          MATCH     SP70,SIPACON
          GOTO      ECONF999 IF EQUAL
.
          MOVE      "CF ",SICDCATA
          PACK      KEY6,SICDCATA,SIPACON,SP70
          CALL      RDSICD1
          IF        OVRCD=0
            MOVE      SICDDESC,CONFDESC
          ENDIF
.
ECONF999  RETURN
.
.------------------------------------------------------------
. Enter Warehouse Code for Next P/O Number
.------------------------------------------------------------
EWARE000  MOVE      ZERO,CKEYTYP
          CALL      KSIWSA00
          MOVE      SIWAWAR,DEFTWARE
          BRANCH    EXIT,EWARE000,EWARE900
.
          MOVE      ZERO,F7
          MOVE      SIWANPO,F7
          COMPARE   ZERO,F7
          IF        @EQUAL
            BEEP
            MOVE      "Warehouse May Not Have Purchase Orders. - ",DISPMSG
            CALL      MESSAGE1
            GOTO      EWARE000
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      EWARE999
.
EWARE900  MOVE      TWO,EXIT
.
EWARE999  RETURN
.
.--------------------------------------------------
. Enter Range
.  where SICA    = System & File for Keyin Routines
.        CST     = Field ID
.        KFCST   = Call Routine Label
.        "   22" = Screen Item Number for "from" Variable
.        "   23" = Screen Item Number for "to" Variable
.        yyyyy.. = Description of Variable
.
.  Return Values
.        FROMCST  Code & Description for Start of Range
.        TOCST    Code & Description for End of Range
.        STRCST   Code for Start of Range
.        ENDCST   Code for End of Range
.--------------------------------------------------
KFCST000   MOVE     "   22",FLDID
           CALL     GETPOSIT
           CALL     KSICAA00
           BRANCH   EXIT,KFCST100,KFCST999
           MOVE     SICACODE,STRCST
           PACK     FROMCST,SICACODE,SP1,SICADESC
           GOTO     KFCST140
KFCST100   MOVE     "Start             ",FROMCST
           MOVE     SP70,STRCST
.
KFCST140   MOVE     FROMCST,VAR
           CALL     DISPITEM
.
KFCST150   MOVE     "   23",FLDID
           CALL     GETPOSIT
           CALL     KSICAA00
           BRANCH   EXIT,KFCST200,KFCST999
           MOVE     SICACODE,ENDCST
           PACK     TOCST,SICACODE,SP1,SICADESC
           MATCH    STRCST,ENDCST
           GOTO     KFCST999 IF EQUAL
           GOTO     KFCST999 IF NOT LESS
           BEEP
           MOVE     "To Cost Centre Must Be > From Cost Centre - ",DISPMSG
           CALL     MESSAGE1
           GOTO     KFCST000
.
KFCST200   MOVE     "Finish             ",TOCST
           MOVE     Z70,ENDCST
.
KFCST999   MOVE     "   22",FLDID
           CALL     GETPOSIT
           RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSCEAIO/INC
          INC       APSCEBIO/INC
          INC       APSCIOIO/INC
          INC       APSCKIKY    
          INC       APSMASIO/INC
          INC       APSMASKY    
          INC       APSMXRIO/INC
          INC       APSORDIO/INC
          INC       APSSNTIO/INC
          INC       APSSUBIO/INC
          INC       FMSAMAIO/INC
          INC       FMSCONIO/INC
          INC       FMSCSAIO/INC
          INC       FMSFPSIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMCIO/INC
          INC       FMSLMCKY    
          INC       FMSTUPIO/INC
          INC       SINCCAIO/INC
          INC       SINCCAKY    
          INC       SINCGAIO/INC
          INC       SINCGBIO/INC
          INC       SINCIAIO/INC
          INC       SINCIAKY    
          INC       SINCICIO/INC
          INC       SINCIEIO/INC
          INC       SINCIFIO/INC
          INC       SINCIHIO/INC
          INC       SINCODIO/INC
          INC       SINCODKY    
          INC       SINFACIO/INC
          INC       SINFACKY    
          INC       SINLTTIO/INC
          INC       SINNATIO/INC
          INC       SINNPOIO/INC
          INC       SINORDUS    
          INC       SINORIIO/INC
          INC       SINORIKY    
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINPOAIO/INC
          INC       SINPOCIO/INC
          INC       SINPONCD    
          INC       SINRCPIO/INC
          INC       SINSUAIO/INC
          INC       SINSUBIO/INC
          INC       SINWARIO/INC
          INC       SINWSEIO/INC
          INC       SINWSEKY    
.
          INC       STDGENCD
.
