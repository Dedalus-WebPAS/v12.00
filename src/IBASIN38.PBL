.---------------------------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.04.01  11.04.2005 Peter Vela CAR 59696
.           Recompiled for SINUSAGE
. V9.03.01  10.09.2003 Steve Downing (VF.11.01 CAR 9375)
.           Recompiled for SINREBFD & SINREBIO
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B01 02.11.2000 Charles Handaya
.           Recompiled for sincchaf and SINUSAGE change
.           Modification of Warehouse Security
.-------------------------------------------------------
. VF.01.01  18.07.2000 Charles Handaya
.           Omnicell import file - Add Restock ID (SIBARESI, SIBPRESI)
.           Quote 9817
.-------------------------------------------------------
. VF.00.02  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
.           10.11.1999 Charles Handaya
.           Fix Y2K of Audit Files Date (CCYYMMDD)
. VF.00.01  03.11.1999 Sandra Barcham
.           Change locked message to use X
.---------------------------------------------------------------------------
ATOTAL1A  FORM      12.2
CMDLINE   DIM       80
SSIITSOH  FORM      12.2
STARTPER  DIM       2
TMBANAME  DIM       8
TMBANAMA  INIT      "tmpbac"
TOTALEFT  FORM      12.2
.
TMPBACA1  IFILE     SQL, FIXED=61, KEY="U26-33,21-25,6-12,1-5,13-20"
.---------------------------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASIN38
.   Function      :   Print Final Discrepancy Report          
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       SINBACFD/INC
          INC       SINBATFD/INC
          INC       SINBPSFD/INC
          INC       SINCCAFD/INC
          INC       SINCCBFD/INC
          INC       SINCCEFD/INC
          INC       SINCCFFD/INC
          INC       SINCCHFD/INC
          INC       SINCGBFD/INC
          INC       SINCIAFD/INC
          INC       SINCIEFD/INC
          INC       SINCIFFD/INC
          INC       SINCIHFD/INC
          INC       SINCIIFD/INC
          INC       SINCONFD/INC
          INC       SINDISFD/INC
          INC       SINITMFD/INC
          INC       SINNATFD/INC
          INC       SINPERFD/INC
          INC       SINREAFD/INC
          INC       SINREBFD/INC
          INC       SINSUAFD/INC
          INC       SINSUBFD/INC
          INC       SINTMPDF/INC
          INC       SINWARFD/INC
          INC       SINWRKDF    
          INC       SINWRKFD/INC
          INC       SINWSEFD/INC
.=========================
.Local Variable Definition
.-------------------------
FROMCATA  DIM       7 * Scr 02 Fld     6
FCDESC    DIM      60 * Scr 02 Fld     7
TOCATA    DIM       7 * Scr 02 Fld     8
TCDESC    DIM      60 * Scr 02 Fld     9
.
.    Multi Item Key Fields Scr BA Fld     1
.-------------------------------------------------------
SIBT1NAM  INIT      "SIBT1"
SIBT1LEN  FORM      "58"
SIBT1IDX  INIT      "DC1-5 UC6-13"
SIBT1FNM  DIM       8  * Filename
SIBT1AFL  FORM      1  * End Accept Mode
SIBT1END  FORM      1  * End Display
SIBT1SNO  FORM      5  * Number of Items on the Screen
SIBT1NXT  DIM         13
SIBT1FL1  IFILE     SQL, FIXED=58,  KEY="D1-5"
SIBT1FL2  IFILE     SQL, FIXED=58, KEY="U6-13"
SIBT1CNT  FORM      3  * Number of Items on Screen
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASIN38"
PRGNAM    INIT      "Print Final Discrepancy Report          "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      ONAT0000
          CALL      SC00L000
          CLOSE     SIBT1FL2
          CLOSE     SIBT1FL1,DELETE
.
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   24",AUDTSECT
          MOVE      "208",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudie";
            OPEN      SINAUDIE,"sinaudie"
          ENDIF
          DISPLAY   *P56:24,"Opening sinbacaf";
          OPEN      SINBACA1,"sinbacaf"
          DISPLAY   *P56:24,"Opening sinbacaf";
          OPEN      SINBACA2,"sinbacaf"
          DISPLAY   *P56:24,"Opening sinbacaf";
          OPEN      SINBACA3,"sinbacaf"
          DISPLAY   *P56:24,"Opening sinbataf";
          OPEN      SINBATA1,"sinbataf"
          DISPLAY   *P56:24,"Opening sinbpsaf";
          OPEN      SINBPSA1,"sinbpsaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA1,"sinccaaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA2,"sinccaaf"
          DISPLAY   *P56:24,"Opening sinccbaf";
          OPEN      SINCCBA1,"sinccbaf"
          DISPLAY   *P56:24,"Opening sincceaf";
          OPEN      SINCCEA1,"sincceaf"
          DISPLAY   *P56:24,"Opening sincceaf";
          OPEN      SINCCEA2,"sincceaf"
          DISPLAY   *P56:24,"Opening sinccfaf";
          OPEN      SINCCFA1,"sinccfaf"
          DISPLAY   *P56:24,"Opening sinccfaf";
          OPEN      SINCCFA2,"sinccfaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA1,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA2,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA3,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA4,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA5,"sincchaf"
          DISPLAY   *P56:24,"Opening sincgbaf";
          OPEN      SINCGBA1,"sincgbaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA1,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA2,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA3,"sinciaaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA1,"sincieaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA2,"sincieaf"
          DISPLAY   *P56:24,"Opening sincifaf";
          OPEN      SINCIFA1,"sincifaf"
          DISPLAY   *P56:24,"Opening sincifaf";
          OPEN      SINCIFA2,"sincifaf"
          DISPLAY   *P56:24,"Opening sincihaf";
          OPEN      SINCIHA1,"sincihaf"
          DISPLAY   *P56:24,"Opening sincihaf";
          OPEN      SINCIHA2,"sincihaf"
          DISPLAY   *P56:24,"Opening sinciiaf";
          OPEN      SINCIIA1,"sinciiaf"
          DISPLAY   *P56:24,"Opening sindisaf";
          OPEN      SINDISA1,"sindisaf"
          DISPLAY   *P56:24,"Opening sinitmaf";
          OPEN      SINITMA1,"sinitmaf"
          DISPLAY   *P56:24,"Opening sinitmaf";
          OPEN      SINITMA2,"sinitmaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA1,"sinperaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA1,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA2,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA3,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA4,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA1,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA2,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA3,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA1,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA2,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA3,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsubaf";
          OPEN      SINSUBA1,"sinsubaf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA1,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA2,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA1,"sinwseaf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA2,"sinwseaf"
.--------------------------------------------------------
. Initialise Batch Screen Requisition                        
.--------------------------------------------------------
          MOVE     ZERO,SIBT1SNO
          MOVE     "BA    1",KEY7
          PACK     KEY15,PRGID,KEY7,SP70
          PACK     KEY20,PRGID,KEY7,SP70
          CALL     RSSCPS2
          CALL     RKSCPS2
          IF       OVRCD=0
            PACK     KEY20,SCPSPID,SCPSSID,SCPSITM
            MATCH    KEY15,KEY20
            IF       @EQUAL
              MOVE     SCPSNOR,SIBT1SNO
            ENDIF
          ENDIF
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Screen                        
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Print Final Discrepancy Report     
          ENDIF
          MATCH     "02",SCRID
          IF         @EQUAL
            CALL       PS02L000   * Clear Stocktake Flags              
          ENDIF
          MATCH     "BA",SCRID
          IF         @EQUAL
            CALL       PSBAL000   * Backorder Allocation               
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Screen                        
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Screen                        
.-------------------------------------------------------
CF00L000
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Screen                        
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Screen                        
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Screen                        
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Screen                        
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Screen                        
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Screen                        
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      SC01L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L103
          CALL      SC02L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.--------------------------------
. Screen - Print Final Discrepancy Report     
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC01L200
          CALL      CF01L000 * Clear Fields
          CALL      SETACCEP
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Print Final Discrepancy Report     
.-------------------------------------------------------
CF01L000
          MOVE      SP70,SIWAWAR 
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Print Final Discrepancy Report     
.--------------------------------------------------------
KY01L000
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Print Final Discrepancy Report     
.---------------------------------------------------------
WP01L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Print Final Discrepancy Report     
.---------------------------------------------------------
LM01L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Print Final Discrepancy Report     
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Print Final Discrepancy Report     
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L999,PS01L101:
                            PS01L102
          GOTO     PS01L999
.
PS01L101
          MOVE      SIWAWAR,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L102
          MOVE      SIWADES,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Print Final Discrepancy Report     
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L101,SF01L102,SF01L103:
                            SF01L006
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L103:
                            SF01L020
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          GOTO     SF01L001
.
SF01L101
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      FINAL000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF01L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF01L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF01L999
          ENDIF
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF01L000
          ENDIF
          GOTO      SF01L001
.
SF01L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIWADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KSIWA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L103
            ENDIF
            BRANCH    EXIT,SF01L103,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      SIWAWAR,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIWADES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
SF01L990  MOVE      FOUR,EXIT * Exit Char Exit
SF01L999  RETURN
.--------------------------------
. Screen - Clear Stocktake Flags              
.--------------------------------
SC02L000
SC02L100
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC02L200
          CALL      CF02L000 * Clear Fields
          CALL      SETSCR02
SC02L300
          CALL      KY02L000 * Enter Key Fields
          BRANCH    EXIT,SC02L999,SC02L999
SC02L400
          CALL      WP02L000 * Load any WP Details
SC02L500
          CALL      LM02L000 * Load any Batch Details
SC02L600
          CALL      DF02L000 * Display Fields
SC02L700
          CALL      SF02L000 * Select Fields
          BRANCH    EXIT,SC02L100,SC02L100,SC02L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC02L800
SC02L900
SC02L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Clear Stocktake Flags              
.-------------------------------------------------------
CF02L000
          MOVE      SP70,SIWAWAR 
          MOVE      SP70,FROMCATA
          MOVE      SP70,TOCATA  
CF02L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Clear Stocktake Flags              
.--------------------------------------------------------
KY02L000
          MOVE      ZERO,EXIT
          GOTO      KY02L999
.
KY02L900  MOVE      ONE,EXIT
KY02L999  RETURN
.---------------------------------------------------------
. Load WP files for : Clear Stocktake Flags              
.---------------------------------------------------------
WP02L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Clear Stocktake Flags              
.---------------------------------------------------------
LM02L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Clear Stocktake Flags              
.---------------------------------------------------------
DF02L000
          BRANCH   ACCEPT,DF02L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF02L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF02L900
          MATCH    PRGID,SCPSPID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF02L010 IF NOT EQUAL
.
          CALL     PS02L000 * Display Field
          GOTO     DF02L010
DF02L900
DF02L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Clear Stocktake Flags              
.---------------------------------------------------------
PS02L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS02L999,PS02L999,PS02L999,PS02L101:
                            PS02L102,PS02L103,PS02L104,PS02L105:
                            PS02L106
          GOTO     PS02L999
.
PS02L101
          MOVE      SIWAWAR,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L102
          MOVE      SIWADES,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L103
          MOVE      FROMCATA,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L104
          MOVE      FCDESC,VAR       
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L105
          MOVE      TOCATA,VAR       
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L106
          MOVE      TCDESC,VAR       
          CALL      DISPITEM
          GOTO     PS02L999
PS02L999
          RETURN
.---------------------------------------------------------
. Selections for : Clear Stocktake Flags              
.---------------------------------------------------------
SF02L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF02L001  BRANCH   ACCEPT,SF02L020
.
SF02L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L006,SF02L101,SF02L102,SF02L103:
                            SF02L006,SF02L104,SF02L006,SF02L105:
                            SF02L006
SF02L006  BEEP
          GOTO     SF02L005
SF02L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF02L090
          MATCH    PRGID,SCSLPID
          GOTO     SF02L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF02L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L020,SF02L020,SF02L020,SF02L103:
                            SF02L020,SF02L104,SF02L020,SF02L105:
                            SF02L020
          GOTO     SF02L020
SF02L090  MOVE     ZERO,ACCEPT
          GOTO     SF02L001
.
SF02L101
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      CLSTK000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF02L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF02L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF02L999
          ENDIF
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF02L000
          ENDIF
          GOTO      SF02L001
.
SF02L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIWADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KSIWA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L103
            ENDIF
            BRANCH    EXIT,SF02L103,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      SIWAWAR,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIWADES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L104
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FCDESC  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCATF000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L104
            ENDIF
            BRANCH    EXIT,SF02L104,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      FROMCATA,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    7",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      FCDESC,VAR       
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L105
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TCDESC  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCATT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L105
            ENDIF
            BRANCH    EXIT,SF02L105,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      TOCATA,VAR       
          CALL      DISPITEM
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TCDESC,VAR       
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
SF02L990  MOVE      FOUR,EXIT * Exit Char Exit
SF02L999  RETURN
.--------------------------------
. Screen - Backorder Allocation               
.--------------------------------
SCBAL000
SCBAL100
          MOVE      "BA",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SCBAL200
          CALL      CFBAL000 * Clear Fields
SCBAL300
          CALL      KYBAL000 * Enter Key Fields
          BRANCH    EXIT,SCBAL999,SCBAL999
SCBAL400
          CALL      WPBAL000 * Load any WP Details
SCBAL500
          CALL      LMBAL000 * Load any Batch Details
SCBAL600
          CALL      DFBAL000 * Display Fields
SCBAL700
          CALL      SFBAL000 * Select Fields
          BRANCH    EXIT,SCBAL100,SCBAL100,SCBAL200
SCBAL800
SCBAL900
SCBAL999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Backorder Allocation               
.-------------------------------------------------------
CFBAL000
CFBAL999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Backorder Allocation               
.--------------------------------------------------------
KYBAL000
          MOVE      ZERO,EXIT
          GOTO      KYBAL999
.
KYBAL900  MOVE      ONE,EXIT
KYBAL999  RETURN
.---------------------------------------------------------
. Load WP files for : Backorder Allocation               
.---------------------------------------------------------
WPBAL000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Backorder Allocation               
.---------------------------------------------------------
LMBAL000
.---------------------------------------------------------
. Load for :     1 Requisition                        
.---------------------------------------------------------
          UNPACK    SP70,SIBTPON,SIBTREQ
          PACK      SIBT1FNM,ANST,SIBT1NAM,PORT
          REP       " 0",SIBT1FNM
          MOVE      ZERO,SIBT1AFL
          CLOSE     SIBT1FL2
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      SIBT1FL1,SIBT1FNM
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     SIBT1FL1,DELETE
          ENDIF
          PACK      KEY80,SGENISB,SIBT1FNM,SP1,SIBT1LEN,SP1,SIBT1IDX
          DISPLAY   *P1:3;
          EXECUTE   KEY80,TASKID
          OPEN      SIBT1FL1,SIBT1FNM
          OPEN      SIBT1FL2,SIBT1FNM
          PACK      KEY15,PORT,SP70
          MOVE      KEY15,SAVKEY80
          SETLPTR   SAVKEY80,7 
          CALL      RDSIBT1 
          IF        OVRCD=0
            CALL      RPSIBT1 
          ENDIF
LMBAL100
          CALL      RKSIBT1 
          BRANCH    OVRCD,LMBAL105
          PACK      KEY15,SIBTPON,SIBTREQ
          MATCH     SAVKEY80,KEY15   
          GOTO      LMBAL105 IF NOT EQUAL
          RESET     KEY15,8
          MOVE      KEY15,KEY8
          MOVE      SP70,SCTMROW
          MOVE      SP70,SCTMCOL
          CALL      TASIBT12
          IF        OVRCD=0
            CALL      TUSIBT12
          ELSE
            CALL      TWSIBT12
          ENDIF
          GOTO     LMBAL100
LMBAL105
          MOVE     SP70,KEY8   
          CALL     TSSIBT12
          RETURN
.---------------------------------------------------------
. Batch Item Selected Screen : Backorder Allocation               
.---------------------------------------------------------
SMBAL000
          MOVE      ZERO,STDGSFLG
          MOVE      SCPSITM,FIRSTITM
          MOVE      SCPSROW,SCTMROW
          MOVE      SCPSCOL,SCTMCOL
          PACK      KEY15,PRGID,SCRID,SCPSROW,SCPSCOL
          MOVE      KEY15,SKSCPS15
          CALL      RDSCPS1
          COMPARE   ZERO,ACCEPT
          GOTO      SMBAL010 IF EQUAL
SMBAL005
          MOVE      SCPSROW,CVERT
          MOVE      SCPSCOL,CCOL
          MOVE      SCPSITM,FIELDNO
          MOVE      ONE,STDGSFLG
          BRANCH    FIELDNO,SMBAL101,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010
SMBAL006
          CALL      RKSCPS1
          BRANCH    OVRCD,SMBAL007
          MATCH     PRGID,SCPSPID
          GOTO      SMBAL007 IF NOT EQUAL
          MATCH     SCRID,SCPSSID
          GOTO      SMBAL007 IF NOT EQUAL
          MATCH     FIRSTITM,SCPSITM
          GOTO      SMBAL007 IF EQUAL
          MATCH     NAMSSFFI,SCPSMTY
          GOTO      SMBAL006 IF NOT EQUAL
          GOTO      SMBAL005
SMBAL007
          MOVE      ZERO,STDGSFLG
          MOVE      SKSCPS15,KEY15
          CALL      RDSCPS1
SMBAL010
          BRANCH    STDGSFLG,SMBAL006
          CALL      RKSCPS1
          BRANCH    OVRCD,SMBAL900
          MATCH     PRGID,SCPSPID
          GOTO      SMBAL900 IF NOT EQUAL
          MATCH     SCRID,SCPSSID
          GOTO      SMBAL900 IF NOT EQUAL
          MATCH     FIRSTITM,SCPSITM
          GOTO      SMBAL900 IF EQUAL
          MATCH     NAMSSFFI,SCPSMTY
          GOTO      SMBAL010 IF NOT EQUAL
          MOVE      SCPSROW,CVERT
          MOVE      SCPSCOL,CCOL
          MOVE      SCPSITM,FIELDNO
          BRANCH    FIELDNO,SMBAL010,SMBAL010,SMBAL010,SMBAL102:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010,SMBAL010,SMBAL010,SMBAL010:
                            SMBAL010
          GOTO      SMBAL010
.
SMBAL101
          MOVE     ZERO,SIBT1AFL
          STRIP     SIBTREQ 
          SFORMAT   VAR,SCPSLEN
          MOVE      SIBTREQ,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,SIBTREQ 
          SFORMAT   VAR,127
          ENDSET    SIBTREQ 
          APPEND    SP70,SIBTREQ 
          RESET     SIBTREQ 
          MATCH     SP70,SIBTREQ 
          GOTO      SMBAL990 IF EQUAL
          CMATCH    EXITCHAR,SIBTREQ 
          GOTO      SMBAL990 IF EQUAL
          PACK     KEY15,SIBTPON,SIBTREQ                                                           
          RESET    KEY15,8
          MOVE     KEY15,KEY8
          CALL      TASIBT12
          IF        OVRCD=0
            MOVE      "Record Already On File - ",DISPMSG
            CALL      MESSAGE1
            GOTO      SMBAL101
          ENDIF
          MOVE      SIBTREQ,VAR      
          CALL      DISPITEM
          CALL      BACLIN00
          GOTO     SMBAL010
.
SMBAL102
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,SIBTISS 
          IF        SCPSMAN=1
            COMPARE   ZERO,SIBTISS 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SMBAL102
            ENDIF
          ENDIF
          MOVE      SIBTISS,VAR      
          CALL      DISPITEM
          GOTO     SMBAL010
SMBAL900
          MATCH    "SIBT1",NAMSSFFI
          IF       @EQUAL
            PACK     KEY15,SIBTPON,SIBTREQ
            RESET    KEY15,8
            MOVE     KEY15,KEY8
            CALL      TASIBT12
            IF        OVRCD=0
              CALL      TUSIBT12
            ELSE
              CALL      TWSIBT12
            ENDIF
            GOTO      SMBAL999
          ENDIF
          GOTO      SMBAL999
SMBAL990
          MATCH    "SIBT1",NAMSSFFI
          IF       @EQUAL
            MOVE     ONE,SIBT1AFL
          ENDIF
SMBAL999
          RETURN
.--------------------------------------------------------
. Display Current Page of Multi Items
.--------------------------------------------------------
DPBAL000
          MOVE     ZERO,SIBT1CNT
          MOVE     ZERO,SIBT1END
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DPBAL010
          CALL     RKSCPS1
          BRANCH   OVRCD,DPBAL600
          MATCH    PRGID,SCPSPID
          GOTO     DPBAL600 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DPBAL600 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     DPBAL010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,DPBAL101,DPBAL102,DPBAL103,DPBAL104:
                            DPBAL105,DPBAL010,DPBAL010,DPBAL010:
                            DPBAL010,DPBAL010,DPBAL010,DPBAL010:
                            DPBAL010,DPBAL010,DPBAL010,DPBAL010:
                            DPBAL010,DPBAL010,DPBAL010,DPBAL010:
                            DPBAL010
          GOTO      DPBAL010
.
DPBAL101
          IF        SIBT1END=0
            CALL      TKSIBT12
            IF        OVRCD=1
              MOVE      ONE,SIBT1END
            ELSE
              MOVE      ZERO,SIBT1END
              MOVE      SCPSROW,SCTMROW
              MOVE      SCPSCOL,SCTMCOL
              CALL      TUSIBT12
              MOVE      SIBTREQ,VAR      
              CALL      DISPITEM
          CALL      BACLIN00
            ENDIF
          ENDIF
          IF        SIBT1END=1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPBAL010
.
DPBAL102
          IF        SIBT1END=0
            MOVE      SIBTCST,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPBAL010
.
DPBAL103
          IF        SIBT1END=0
            MOVE      SIBTQTY,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPBAL010
.
DPBAL104
          IF        SIBT1END=0
            MOVE      SIBTISS,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPBAL010
.
DPBAL105
          IF        SIBT1END=0
            MOVE      SICADESC,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DPBAL010
DPBAL600
          MATCH    "SIBT1",NAMSSFFI
          GOTO     DPBAL605 IF NOT EQUAL
          GOTO     DPBAL999
DPBAL605
DPBAL999
          RETURN
.--------------------------------------------------------
. Display First Page of Multi Items
.--------------------------------------------------------
FPBAL000
.
          CALL     CTBAL000
          MATCH    "SIBT1",NAMSSFFI
          GOTO     FPBAL105 IF NOT EQUAL
          MOVE     SP70,KEY8   
          CALL     TSSIBT12 * Start
          CALL     DPBAL000
          GOTO     FPBAL999
FPBAL105
FPBAL999  RETURN
.--------------------------------------------------------
. Display Last Page of Multi Items
.--------------------------------------------------------
LPBAL000
.
          CALL     CTBAL000
          MATCH    "SIBT1",NAMSSFFI
          GOTO     LPBAL105 IF NOT EQUAL
          PACK     KEY8,Z70
          CALL     TSSIBT12
          IF       OVRCD=1
            CALL     TPSIBT12 * End
          ENDIF
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<SIBT1SNO
            CALL     TPSIBT12
            ADD      ONE,SECTOR
          DO
          CALL     DPBAL000
          GOTO     LPBAL999
LPBAL105
LPBAL999  RETURN
.--------------------------------------------------------
. Display Previous Page  
.--------------------------------------------------------
PPBAL000
.
PPBAL100
          MATCH    "SIBT1",NAMSSFFI
          GOTO     PPBAL115 IF NOT EQUAL
PPBAL105
          MOVE     SP70,SIBT1NXT
          PACK     KEY5,SP1,ONE,SP70
          CALL     TSSIBT11
          CALL     TKSIBT11 * First on Page
          MOVE     KEY8,SIBT1NXT
          CALL     TSSIBT12
          CALL     TPSIBT12 * Get Key
          IF       OVRCD=1
            BEEP
            GOTO      PPBAL999
          ENDIF
.
          CALL     CTBAL000
.
. Position and Display Page
.--------------------------
PPBAL110
          MOVE     SIBT1NXT,KEY8   
          CALL     TSSIBT12
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<=SIBT1SNO
            CALL     TPSIBT12
            ADD      ONE,SECTOR
          DO
          CALL     DPBAL000
          GOTO     PPBAL999
PPBAL115
PPBAL999  RETURN
.--------------------------------------------------------
. Display Next Page of Multi Items
.--------------------------------------------------------
NPBAL000
          MATCH    "SIBT1",NAMSSFFI
          GOTO     NPBAL115 IF NOT EQUAL
NPBAL105
          MOVE     SP70,SIBT1NXT
          PACK     KEY5,Z70
          CALL     TSSIBT11
          CALL     TPSIBT11
          MOVE     KEY8,SIBT1NXT
          CALL     TSSIBT12
          CALL     TKSIBT12
          IF       OVRCD=1
            BEEP
            GOTO      NPBAL999
          ENDIF
.
          CALL     CTBAL000
.
. Position and Display Page
.--------------------------
NPBAL110
          MOVE     SIBT1NXT,KEY8   
          CALL     TSSIBT12
          CALL     DPBAL000
          GOTO     NPBAL999
NPBAL115
NPBAL999  RETURN
.--------------------------------------------------------
. Clear Page of Multi Items from Temp File
.--------------------------------------------------------
CTBAL000
          MATCH    "SIBT1",NAMSSFFI
          GOTO     CTBAL115 IF NOT EQUAL
CTBAL105
          PACK     KEY5,SP1,ONE,SP70
          CALL     TSSIBT11
          CALL     TKSIBT11
          BRANCH   OVRCD,CTBAL110
          CALL     TRSIBT12
          MOVE     SP70,SCTMROW
          MOVE     SP70,SCTMCOL
          CALL     TUSIBT12
          GOTO     CTBAL105
CTBAL110
          GOTO     CTBAL999
CTBAL115
CTBAL999  RETURN
.----------------------------------
. Clear Pages of Multi Items 
.----------------------------------
CPBAL000
          CALL     CTBAL000
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
CPBAL010
          CALL     RKSCPS1
          BRANCH   OVRCD,CPBAL999
          MATCH    PRGID,SCPSPID
          GOTO     CPBAL999 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     CPBAL999 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     CPBAL010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,CPBAL100,CPBAL100,CPBAL100,CPBAL100:
                            CPBAL100,CPBAL010,CPBAL010,CPBAL010:
                            CPBAL010,CPBAL010,CPBAL010,CPBAL010:
                            CPBAL010,CPBAL010,CPBAL010,CPBAL010:
                            CPBAL010,CPBAL010,CPBAL010,CPBAL010:
                            CPBAL010
.
CPBAL100
          PACK     VAR,SP70,SP70
          CALL     DISPITEM  * Display Blank Item
          GOTO     CPBAL010
CPBAL999  RETURN
.---------------------------------------------------------
. Add Items
.---------------------------------------------------------
ADBAL000
          CALL      CPBAL000 * Clear Screen of Items
          PACK      KEY20,PRGID,SCRID,ITMSSFFI,SP70
          CALL      RSSCPS2
ADBAL010  CALL      RKSCPS2
          BRANCH    OVRCD,ADBAL000
          MATCH     PRGID,SCPSPID
          GOTO      ADBAL000 IF NOT EQUAL
          MATCH     SCRID,SCPSSID
          GOTO      ADBAL000 IF NOT EQUAL
          MATCH     ITMSSFFI,SCPSITM
          GOTO      ADBAL000 IF NOT EQUAL
          PACK      SKSCPS20,SCPSPID,SCPSSID,SCPSITM,SCPSROW,SCPSCOL
          MOVE      ACCEPT,SACCEPT
          MOVE      ONE,ACCEPT
          CALL      SMBAL000
          MOVE      SACCEPT,ACCEPT
          MOVE      SKSCPS20,KEY20
          CALL      RDSCPS2
          MATCH     "SIBT1",NAMSSFFI
          IF        @EQUAL
            COMPARE   ZERO,SIBT1AFL
            GOTO      ADBAL010 IF EQUAL
            CALL      FPBAL000
            GOTO      ADBAL999
          ENDIF
ADBAL999
          RETURN
.---------------------------------------------------------
. Delete Items
.---------------------------------------------------------
DLBAL000  
          MOVE      SCSLDES,DISPMSG
          CALL      MESSAGE2
DLBAL005  
          CALL      MDELQ000
          BRANCH    EXIT,DLBAL900,DLBAL900
          MOVE      SCSLITM,FIELDNO
          MATCH     ITMSSFFI,SCSLITM
          GOTO      DLBAL100 IF NOT EQUAL
          CALL      SELECTED
          MATCH     "SIBT1",SCPSMTY
          IF        @EQUAL
            PACK      KEY5,SCSLROW,SCSLCOL
            CALL      TRSIBT11
            IF        OVRCD=0
              CALL      TDSIBT12
            ELSE
              BEEP
              GOTO      DLBAL005
            ENDIF
            PACK      KEY5,SP1,ONE,SP70
            CALL      TSSIBT11
            CALL      TKSIBT11
            MOVE     KEY8,SIBT1NXT
            CALL      CTBAL000
            MOVE      SIBT1NXT,KEY8   
            CALL      TSSIBT12
            CALL      TPSIBT12
            CALL      DPBAL000
            GOTO      DLBAL005
          ENDIF
DLBAL100  MOVE      "Invalid Selection. - ",DISPMSG
          CALL      MESSAGE1
          GOTO      DLBAL005
DLBAL900  CALL      MESSAGE3
          RETURN
.---------------------------------------------------------
. Batch IO for Screen : Backorder Allocation               
.---------------------------------------------------------
.---------------------------------------------------------
. Batch IO for :     1 Requisition                        
.---------------------------------------------------------
TSSIBT11  RESET     KEY5
          READ      SIBT1FL1,KEY5;;
          RETURN
.
TSSIBT12  RESET     KEY8   
          READ      SIBT1FL2,KEY8;;
          RETURN
.
TASIBT12  RESET     KEY8   
          MOVE      ZERO,OVRCD
          READ      SIBT1FL2,KEY8;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
TDSIBT11  RESET     KEY5
          DELETE    SIBT1FL1,KEY5
          RETURN
.
TDSIBT12  RESET     KEY8
          DELETE    SIBT1FL2,KEY8
          RETURN
.
TKSIBT11  MOVE      ZERO,OVRCD
          READKS    SIBT1FL1;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TKSIBT12  MOVE      ZERO,OVRCD
          READKS    SIBT1FL2;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TPSIBT11  MOVE      ZERO,OVRCD
          READKP    SIBT1FL1;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TPSIBT12  MOVE      ZERO,OVRCD
          READKP    SIBT1FL2;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TRSIBT11  RESET     KEY5
          MOVE      ZERO,OVRCD
          READ      SIBT1FL1,KEY5;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TRSIBT12  RESET     KEY8   
          MOVE      ZERO,OVRCD
          READ      SIBT1FL2,KEY8;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TUSIBT11  UPDATE    SIBT1FL1;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          RETURN
.
TUSIBT12
          UPDATE    SIBT1FL2;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          RETURN
.
TWSIBT12  RESET     KEY8   
          WRITE     SIBT1FL2,KEY8;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          RETURN
.---------------------------------------------------------
. Display Fields for : Backorder Allocation               
.---------------------------------------------------------
DFBAL000
          BRANCH   ACCEPT,DFBAL999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DFBAL010
          CALL     RKSCPS1
          BRANCH   OVRCD,DFBAL900
          MATCH    PRGID,SCPSPID
          GOTO     DFBAL900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DFBAL900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DFBAL010 IF NOT EQUAL
.
          CALL     PSBAL000 * Display Field
          GOTO     DFBAL010
DFBAL900
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      FPBAL000
DFBAL999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Backorder Allocation               
.---------------------------------------------------------
PSBAL000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PSBAL999,PSBAL999,PSBAL999,PSBAL999:
                            PSBAL999,PSBAL999,PSBAL999,PSBAL999:
                            PSBAL999,PSBAL999,PSBAL999,PSBAL101:
                            PSBAL102,PSBAL103,PSBAL104,PSBAL999:
                            PSBAL999,PSBAL999,PSBAL999,PSBAL999:
                            PSBAL999
          GOTO     PSBAL999
.
PSBAL101
          MOVE      TOTALREC,VAR     
          CALL      DISPITEM
          GOTO     PSBAL999
.
PSBAL102
          MOVE      SIIACAT,VAR      
          CALL      DISPITEM
          GOTO     PSBAL999
.
PSBAL103
          MOVE      SIIADES,VAR      
          CALL      DISPITEM
          GOTO     PSBAL999
.
PSBAL104
          MOVE      SIIAISS,VAR      
          CALL      DISPITEM
          GOTO     PSBAL999
PSBAL999
          RETURN
.---------------------------------------------------------
. Selections for : Backorder Allocation               
.---------------------------------------------------------
SFBAL000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SFBAL001  BRANCH   ACCEPT,SFBAL020
.
SFBAL005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SFBAL101,SFBAL006,SFBAL006,SFBAL006:
                            SFBAL006,SFBAL006,SFBAL006,SFBAL006:
                            SFBAL102,SFBAL006,SFBAL006,SFBAL006:
                            SFBAL006,SFBAL006,SFBAL006,SFBAL103:
                            SFBAL104,SFBAL006,SFBAL006,SFBAL105:
                            SFBAL106
SFBAL006  BEEP
          GOTO     SFBAL005
SFBAL020  CALL     RKSCSL1
          BRANCH   OVRCD,SFBAL090
          MATCH    PRGID,SCSLPID
          GOTO     SFBAL090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SFBAL090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SFBAL101,SFBAL020,SFBAL020,SFBAL020:
                            SFBAL020,SFBAL020,SFBAL020,SFBAL020:
                            SFBAL020,SFBAL020,SFBAL020,SFBAL020:
                            SFBAL020,SFBAL020,SFBAL020,SFBAL020:
                            SFBAL020,SFBAL020,SFBAL020,SFBAL020:
                            SFBAL020
          GOTO     SFBAL020
SFBAL090  MOVE     ZERO,ACCEPT
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      FPBAL000
          GOTO     SFBAL001
.
SFBAL101
          CALL      SELECTED
          BRANCH    EXIT,SFBAL001
          MOVE      "SIBT1",NAMSSFFI
          MOVE      SCPSITM,ITMSSFFI
          IF        ACCEPT=0
            PACK      KEY5,SCPSROW,SCPSCOL
            CALL      TRSIBT11
            BRANCH    OVRCD,SFBAL001
            MATCH     SCTMROW,SCSLROW
            GOTO      SFBAL001 IF NOT EQUAL
            MATCH     SCTMCOL,SCSLCOL
            GOTO      SFBAL001 IF NOT EQUAL
            CALL      SMBAL000 * Change Line
          ELSE
            IF        SIBT1AFL=0
              MOVE      "SIBT1",NAMSSFFI
              MOVE     "    1",ITMSSFFI
              CALL      ADBAL000 * Add Line
            ENDIF
          ENDIF
          GOTO     SFBAL001
.
SFBAL102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      BALAN000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SFBAL999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SFBAL001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SFBAL999
          ENDIF
          MOVE      "BA",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DFBAL000
          ENDIF
          GOTO      SFBAL001
.
SFBAL103
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      NPBAL000
          GOTO     SFBAL001
.
SFBAL104
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      PPBAL000
          GOTO     SFBAL001
.
SFBAL105
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      FPBAL000
          GOTO     SFBAL001
.
SFBAL106
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      LPBAL000
          GOTO     SFBAL001
SFBAL990  MOVE      ONE,EXIT * Exit Char Restart
SFBAL999  RETURN
.@@@@@ Function Restart Point @@@@@
.------------------------------------------------------------------------
. Open Nato X-Ref File if required
.------------------------------------------------------------------------
ONAT0000  OPEN      CONTROLF,"controlf"
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*143,HNONUSAG
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ONE,HNONUSAG
            WRITAB    CONTROLF,SIXTY3;*143,HNONUSAG
          ENDIF
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*141,INCNNATO
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,INCNNATO
            WRITAB    CONTROLF,SIXTY3;*141,INCNNATO
          ENDIF
.
          IF        INCNNATO=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      SINNATA1,"sinnataf"
            TRAPCLR   IO
            IF        OVRCD=1
              DISPLAY   *P1:24,*EL,*B,"Nato file does not exist. Run fixit.  ";
              CALL      HITENTER
              CHAIN     PGM
            ENDIF
.
            OPEN      SINNATA2,"sinnataf"
          ENDIF
.
ONAT9999  RETURN
.********************************************************************
. Set accept mode
.********************************************************************
SETACCEP  MOVE      ONE,ACCEPT
          RETURN
.----------------------------------------------------------------------
. Print final discrepancy report
.----------------------------------------------------------------------
FINAL000  MOVE      ZERO,ATOTAL1A
          MOVE      ZERO,ATOTAL02
          MOVE      ZERO,FORM12A
          MOVE      ZERO,FORM12B
.
          PACK      DISPMSG,SP70,SP70            * save line 24
          CALL      MESSAGE2
.
          CALL      CWARE000           * check warehouse
          BRANCH    EXIT,FINAL950
.
          CALL      CONTQST            * ok to continue (Y/N/C)
          SUB       ONE,CEXIT
          BRANCH    CEXIT,FINAL950,FINAL950
.
          DISPLAY   *P1:24,"Printing :   ";
          MOVE      ZERO,CPAGENO       * reset page no.
          CLOCK     TIME,CTIMEIS       * get current time
          MOVE      "999",CLNO         * init last line number
          MOVE      ONE,OPTIONA
.
FINAL010  MOVE      ZERO,CONTQTY
          PACK      KEY20,SIWAWAR,SP70 * go to start of records
          CALL      RSSIWK1
.
FINAL100  CALL      RKSIWK1
          BRANCH    OVRCD,FINAL900     * any more records ?
          MATCH     SIWKWAR,SIWAWAR
          GOTO      FINAL900 IF NOT EQUAL
.
          ADD       ONE,CONTQTY
          CALL      PCATA0000          * process catalog
          GOTO      FINAL100
.
FINAL900  COMPARE   ZERO,CONTQTY       * all catalog's cleared ?
          GOTO      FINAL010 IF NOT EQUAL
.
          COMPARE   ZERO,CPAGENO
          CALL      HEAA0000 IF EQUAL  * print head if nothing printed
          CALL      UND132             * print line
          PRINT     *1,"Totals",*71,FORM12A,*84,ATOTAL1A:
                    *101,FORM12B,*115,ATOTAL02
          ADD       "1",CLNO           * add one to line number
          CALL      UND132             * print line
.
          PRINT     *N,*N:
                    "*** END OF REPORT ***"
.
          CALL      ISSIWK1            * delete stocktake file
          IF        OVRCD=0
            BEEP
            CLEAR     DISPMSG
            APPEND    "ERROR - Could not delete work file - ",DISPMSG
            CALL      MESSAGE1
          ENDIF
          MOVE      TWO,EXIT           * restart screen
          GOTO      FINAL999
.
FINAL950  MOVE      ONE,EXIT           * return to prompt
.
FINAL999  CALL      UUSIWA1
          CALL      MESSAGE3                     * restore line 24
          RETURN
.----------------------------------------------------------------------
. Check if warehouse ok for stocktake
.----------------------------------------------------------------------
CWARE000  PACK      KEY5,SIWAWAR,SP70            * lock warehouse
          REPEAT
            CALL      RLSIWA1
            IF        OVRCD=1
              CLEAR     DISPMSG
              APPEND    "Warehouse Missing - ",DISPMSG
              DISPLAY   *P1:24,*EL,*+,*B,DISPMSG;
              CALL      HITENTER
              GOTO      CWARE950
            ENDIF
            IF        OVRCD=2
              KEYIN     *P1:24,*EL,"Warehouse Locked - (":
                        *V2LON,"R",*HOFF,")etry or e(":
                        *V2LON,"X",*HOFF,")it ? ",*V2LON,ANS
              PACK      ANS,ANS,SP70
              REP       UPPLOW,ANS
              MATCH     "X",ANS
              GOTO      CWARE950 IF EQUAL
              MATCH     "E",ANS
              GOTO      CWARE950 IF EQUAL
            ENDIF
          UNTIL     OVRCD=0
.
          CALL      OPSIWK1            * check if stocktake file exists
          IF        OVRCD=1
            CLOSE     SINWRKA1
            CLEAR     DISPMSG
            APPEND    "Stocktake Not in Progress for this Warehouse - ",DISPMSG
            DISPLAY   *P1:24,*EL,*+,*B,DISPMSG;
            CALL      HITENTER
            GOTO      CWARE950
          ENDIF
.
.
CWARE900  MOVE      ZERO,EXIT          * continue
          GOTO      CWARE999
.
CWARE950  MOVE      ONE,EXIT           * quit
          CALL      UUSIWA1
.
CWARE999  RETURN
.----------------------------------------------------------------------
. Process Catalog
.----------------------------------------------------------------------
PCATA000  DISPLAY   *P1:24,"Printing : ",*V2LON,SIWKCAT,*EL;
.
          PACK      KEY7,SIWKCAT,SP70            * lock catalog
          REPEAT
            CALL      RLSIIA1
            IF        OVRCD=1
              CLEAR     DISPMSG
              APPEND    "Catalog ",DISPMSG
              APPEND    KEY7,DISPMSG
              APPEND    " Missing - ",DISPMSG
              DISPLAY   *P1:24,*+,*EL,*B,DISPMSG;
              CALL      HITENTER
              GOTO      PCATA999
            ENDIF
            IF        OVRCD=2
              KEYIN     *P1:24,*EL,"Catalog ",*DV,KEY7," Locked - (":
                        *V2LON,"R",*HOFF,")etry or (":
                        *V2LON,"S",*HOFF,")kip ? ",*V2LON,ANS
              PACK      ANS,ANS,SP70
              REP       UPPLOW,ANS
              MATCH     "S",ANS
              GOTO      PCATA999 IF EQUAL
            ENDIF
          UNTIL     OVRCD=0
.
          PACK      KEY12,SIWKCAT,SIWAWAR,SP70   * lock catalog
          REPEAT
            CALL      RLSIIE1
            IF        OVRCD=1
              CLEAR     DISPMSG
              APPEND    "Catalog/Warehouse ",DISPMSG
              APPEND    KEY7,DISPMSG
              APPEND    " Missing - ",DISPMSG
              DISPLAY   *P1:24,*+,*EL,*B,DISPMSG;
              CALL      HITENTER
              GOTO      PCATA999
            ENDIF
            IF        OVRCD=2
              KEYIN     *P1:24,*EL,"Catalog/Ware ",*DV,KEY12," Locked - (":
                        *V2LON,"R",*HOFF,")etry or (":
                        *V2LON,"S",*HOFF,")kip ? ",*V2LON,ANS
              PACK      ANS,ANS,SP70
              REP       UPPLOW,ANS
              MATCH     "S",ANS
              GOTO      PCATA999 IF EQUAL
            ENDIF
          UNTIL     OVRCD=0
.
          CALL      WRIA0000           * print details
.
          MOVE      "2",AUDTTYPE       * before audit
          CALL      WASIIE00
.
          MOVE      ZERO,SIIESTI       * clear stocktake
          ASSIGN    (SIIESOH+SIWKCNT-SIWKSOH),SIIESOH
          PACK      SIIESTD,CCC,CYY,CMM,CDD,SP70
          REP       " 0",SIIESTD
.
          CALL      UPSIIE1
          MOVE      "3",AUDTTYPE       * after audit
          CALL      WASIIE00
.
          ASSIGN    SIWKCNT-SIWKSOH,TOTALREC
          IF        TOTALREC>0
            CALL      BACK0000         * allocate back orders if more found
          ENDIF
.
          PACK      KEY20,SIWKWAR,SIWKRACK,SIWKCAT,SP70
          CALL      DESIWK1
          CALL      RSSIWK1
.
PCATA999  CALL      UUSIIA1
          CALL      UUSIIE1
          RETURN
.********************************************************************
. WRIA - print data line                            Called by PRNA
.********************************************************************
WRIA0000  COMPARE   "54",CLNO                    * end of page ?
          CALL      HEAA0000 IF NOT LESS         * start new page
.
.---- write item history records ----
.
          PACK      SIITDAT,CCC,CYY,CMM,CDD,SP70
          REP       " 0",SIITDAT
          CLOCK     TIME,SIITTIM
          PACK      SIITOPR,PASSCODE,SP70
          PACK      SIITPOR,PORT,SP70
          PACK      SIITPRG,PRGID,SP70
          PACK      SIPEDATE,SIITDAT,SP70
          CALL      RSIPE000
          IF        OVRCD=1
            UNPACK    SIITDAT,CCENT,CYEAR,CMON,CDAY
            PACK      SIITPER,CCENT,CYEAR,CMON,SP70
          ELSE
            PACK      SIITPER,SIPEYEAR,SIPEPER,SP70
          ENDIF
          REP       " 0",SIITPER
          PACK      SIITCST,SP70
          PACK      SIITREQ,SP70
          PACK      SIITPUR,SP70
          PACK      SIITREF,SP70
          ASSIGN    (SIIESOH+SIWKCNT-SIWKSOH),SSIITSOH
          MOVE      SSIITSOH,SIITSOH
          PACK      SIITSPA,SP70
.
          MOVE      "2",SIITTYP             * stocktake adjustment record
          ASSIGN    (SIWKCNT-SIWKSOH)*SIIAAVC,SIITAMT
          ASSIGN    (SIWKCNT-SIWKSOH),SIITQTY
          REPEAT
            CLOCK     TIME,SIITTIM
            PACK      KEY28,SIIEWAR,SIIECAT,SIITDAT,SIITTIM,SP70
            UNPACK    KEY28,SIITWAR,SIITCAT,SIITDAT,SIITTIM
            CALL      RASIIT1
          UNTIL     OVRCD=1
          CALL      WRSIIT1
.
          MOVE      "3",SIITTYP             * stocktake balance record
          ASSIGN    (SIIESOH+SIWKCNT-SIWKSOH)*SIIAAVC,SIITAMT
          ASSIGN    (SIIESOH+SIWKCNT-SIWKSOH),SIITQTY
          REPEAT
            CLOCK     TIME,SIITTIM
            PACK      KEY28,SIIEWAR,SIIECAT,SIITDAT,SIITTIM,SP70
            UNPACK    KEY28,SIITWAR,SIITCAT,SIITDAT,SIITTIM
            CALL      RASIIT1
          UNTIL     OVRCD=1
          CALL      WRSIIT1
.
.---- write discrepancy history ----
.
          PACK      KEY20,SIIEWAR,SIIECAT,SIITDAT,SP70
          UNPACK    KEY20,SIDSWAR,SIDSCAT,SIDSDAT
          CALL      RDSIDS1
          IF        OVRCD=1
            ASSIGN    (SIWKCNT-SIWKSOH),SIDSDIS
            ASSIGN    SIDSDIS*SIIAAVC,SIDSVAL
            CALL      WRSIDS1
          ELSE
            ASSIGN    (SIWKCNT-SIWKSOH)+SIDSDIS,SIDSDIS
            ASSIGN    SIDSDIS*SIIAAVC,SIDSVAL
            CALL      UPSIDS1
          ENDIF
.
.---- print data ----
.
          ASSIGN    SIWKCNT-SIWKSOH,F12P2
          MOVE      F12P2,FORM12
          ASSIGN    (SIWKCNT-SIWKSOH)*SIIAAVC,F12P2
          PRINT     *1,SIWKCAT,SP2,SIIADES,*71,FORM12,*84,F12P2;
          ADD       FORM12,FORM12A
          ADD       F12P2,ATOTAL1A
.
. ------- Get YTD Values
          CALL      GYTD0000           * Get YTD Values
          PRINT     *101,FORM12,*115,F12P2
.
          ADD       FORM12,FORM12B
          ADD       F12P2,ATOTAL02
          ADD       "1",CLNO           * add one to line number
.
WRIA9999  RETURN
.********************************************************************
. GYTD - Get YTD values                             Called by WRIA
.********************************************************************
GYTD0000  MOVE      ZERO,FORM12
          MOVE      ZERO,F12P2
.
.         MOVE      "01",SIPEPER
          MOVE      "01",STARTPER
          PACK      KEY6,SIPEYEAR,STARTPER
          CALL      RDSIPE1
          BRANCH    OVRCD,GYTD9999
.
          PACK      KEY28,SIWKWAR,SIWKCAT,SIPESDT,SP70
          CALL      RSSIIT1
GYTD1000  CALL      RKSIIT1
          BRANCH    OVRCD,GYTD9999
.
          MATCH     SIITWAR,SIWKWAR
          GOTO      GYTD9999 IF NOT EQUAL
.
          MATCH     SIITCAT,SIWKCAT
          GOTO      GYTD9999 IF NOT EQUAL
.
          MATCH     SIITDAT,KEY6
          GOTO      GYTD9999 IF LESS
.
          IF        SIITTYP=2
            ADD       SIITQTY,FORM12
            ADD       SIITAMT,F12P2
          ENDIF
          GOTO      GYTD1000
.
GYTD9999  RETURN
.********************************************************************
. HEAA - print report                               Called by PRNA
.********************************************************************
HEAA0000  CALL      HEAD132                      * print heading
.
          ADD       "1",CLNO
          PRINT     *40,"Warehouse : ",SIWAWAR,SP2,SIWADES,*N
          CALL      UND132                       * print line
          PRINT     *71,"     This   ",*101,"     YTD    ",*N:
                    *1,"Catalog",*71," Discrepancy",*84,"          Value":
                                 *101," Discrepancy",*115,"      YTD Value"
          ADD       "2",CLNO
          CALL      UND132                       * print line
.
HEAA9999  RETURN
.----------------------------------------------------------------------
. Process Back Orders
. Requires : TOTALREC (quantity to allocate)
.----------------------------------------------------------------------
BACK0000  READ      CONTROLF,TWENTY3;*120,HBACK
          READ      CONTROLF,SIXTY3;*144,HALLOCBO
.
          COMPARE   ONE,HBACK
          GOTO      BACK9999 IF NOT EQUAL
.
          MOVE      ZERO,TOTALSOB
          MOVE      ZERO,COUNT
.
          PACK      KEY12,SIIEWAR,SIIECAT,SP70
          PACK      KEY25,SIIEWAR,SIIECAT,SP70
          CALL      RSSIBA2
.
BACK1000  CALL      RKSIBA2
          BRANCH    OVRCD,BACK1100
          PACK      KEY25,SIBAWAR,SIBACAT,SIBACST,SIBAREQ,SP70
          MATCH     KEY12,KEY25
          GOTO      BACK1100 IF NOT EQUAL
.
BACK1050  CALL      RLSIBA2
          IF        OVRCD=2
            BEEP
            DISPLAY   *P1:24,*EL,"Back Order Locked : ",KEY25
            GOTO      BACK1050
          ENDIF
.
          ADD       SIBAQTY,TOTALSOB      * Total of Requisitions
          ADD       ONE,COUNT             * Number of Requisitions
          GOTO      BACK1000
.
BACK1100  COMPARE   ZERO,TOTALSOB
          GOTO      BACK9000 IF EQUAL
.
          IF        TOTALREC>TOTALSOB
            CALL      BACALL00           * Allocate all Backorders
            GOTO      BACK9000
          ENDIF
.
          IF        COUNT=1
            CALL      BACONE00           * Allocate to Single Back Order
            GOTO      BACK9000
          ENDIF
.
          CALL      BACUSR00           * Allow User to Allocate Backorder
.
BACK9000  CALL      UUSIBA2
.
BACK9999  RETURN
.-------------------------------------------------------------------
. Not Enough Received to Cover All Back Orders.
.-------------------------------------------------------------------
BACUSR00  CALL      KLTMBA00
          CALL      CRTMBA00
.
          PACK      KEY12,SIIEWAR,SIIECAT,SP70
          PACK      KEY25,SIIEWAR,SIIECAT,SP70
          PACK      SKEY7,PORT,SP70
          CALL      RSSIBA2
.
BACUSR10  CALL      RKSIBA2
          BRANCH    OVRCD,BACUSR20
          PACK      KEY25,SIBAWAR,SIBACAT,SIBACST,SIBAREQ,SP70
          MATCH     KEY12,KEY25
          GOTO      BACUSR20 IF NOT EQUAL
.
          IF        HALLOCBO=2
            PACK      KEY33,SIBADAT,KEY25
          ELSE
            PACK      KEY33,SP8,KEY25
          ENDIF
.
          CALL      RATMBA1
          IF        OVRCD=1
            CALL      WRTMBA1
          ENDIF
          GOTO      BACUSR10
.
BACUSR20  MOVE      SP70,KEY33
          MOVE      TOTALREC,TOTALEFT
          CALL      RSTMBA1
.
BACUSR30  CALL      RKTMBA1
          BRANCH    OVRCD,BACUSR40
.
          PACK      SIBTPON,SKEY7,SP70
          MOVE      SIBAREQ,SIBTREQ
          MOVE      SIBACST,SIBTCST
          MOVE      SIBAQTY,SIBTQTY
.
          IF        HALLOCBO=2
            IF        TOTALEFT>=SIBTQTY
              MOVE      SIBTQTY,SIBTISS
              SUB       SIBTQTY,TOTALEFT
            ELSE
              MOVE      TOTALEFT,SIBTISS
              MOVE      ZERO,TOTALEFT
            ENDIF
          ELSE
            ASSIGN    (SIBAQTY/TOTALSOB),F12P2
            ASSIGN    (F12P2*TOTALREC)+.50,F12P2
            MOVE      F12P2,QTYFORM8
            IF        TOTALEFT>=QTYFORM8
              MOVE      QTYFORM8,SIBTISS
              SUB       QTYFORM8,TOTALEFT
            ELSE
              MOVE      TOTALEFT,SIBTISS
              MOVE      ZERO,TOTALEFT
            ENDIF
          ENDIF
.
          PACK      KEY15,SIBTPON,SIBTREQ
          CALL      RASIBT1
          IF        OVRCD=1
            CALL      WRSIBT1
          ENDIF
          GOTO      BACUSR30
.
BACUSR40  CALL      KLTMBA00
          CALL      SCBAL000
.
          PACK      KEY8,SP70
          CALL      TSSIBT12
.
BACUSR50  CALL      TKSIBT12
          BRANCH    OVRCD,BACUSR99
          MOVE      SIIEWAR,SIBPWAR
          MOVE      SIBTCST,SIBPCST
.
          COMPARE   ZERO,SIBTISS
          GOTO      BACUSR80 IF EQUAL
.
          PACK      KEY25,SIIEWAR,SIIECAT,SIBTCST,SIBTREQ,SP70
          CALL      RDSIBA2
          BRANCH    OVRCD,BACUSR50
.
          MOVE      SIBTISS,SIBPAQT
          ASSIGN    SIBAQTY-SIBTISS,SIBPBQT
          CALL      WRPIC000
.
          ASSIGN    SIBAQTY-SIBTISS,SIBAQTY
          IF        SIBAQTY>0
            CALL      UPSIBA2
          ELSE
            CALL      DESIBA2
          ENDIF
.
BACUSR80  PACK      KEY15,SKEY7,SIBTREQ,SP70
          CALL      RASIBT1
          IF        OVRCD=0
            CALL      DESIBT1
          ENDIF
          GOTO      BACUSR50
.
BACUSR99  RETURN
.-----------------------------------------------------------------
. Kill the Temporary Backorder File
.-----------------------------------------------------------------
KLTMBA00  PACK      TMBANAME,TMBANAMA,PORT
          CLOSE     TMPBACA1
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    TMBANAME,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
KLTMBA99  RETURN
.-----------------------------------------------------------------
. Create the Temporary Backorder File
.-----------------------------------------------------------------
CRTMBA00  CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TMBANAME,CMDLINE
          APPEND    " 61 UC26-33,21-25,6-12,1-5,13-20",CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      TMPBACA1,TMBANAME
.
CRTMBA99  RETURN
.-----------------------------------------------------------------
. Enough Received to Cover All Back Orders.
.-----------------------------------------------------------------
BACALL00  PACK      KEY12,SIIEWAR,SIIECAT,SP70
          PACK      KEY25,SIIEWAR,SIIECAT,SP70
          CALL      RSSIBA2
.
BACALL10  CALL      RKSIBA2
          BRANCH    OVRCD,BACALL99
          PACK      KEY25,SIBAWAR,SIBACAT,SIBACST,SIBAREQ,SP70
          MATCH     KEY12,KEY25
          GOTO      BACALL99 IF NOT EQUAL
.
          MOVE      SIBAQTY,SIBPAQT
          MOVE      ZERO,SIBPBQT
          CALL      WRPIC000   * Write to Picking Sheets
.
          PACK      KEY25,SIBAWAR,SIBACAT,SIBACST,SIBAREQ,SP70
          CALL      DESIBA2    * Back Order Compltete So Remove
          GOTO      BACALL10
.
BACALL99  RETURN
.----------------------------------------------------------------------
. Single Item on Back Order Only.
.----------------------------------------------------------------------
BACONE00  PACK      KEY12,SIIEWAR,SIIECAT,SP70
          PACK      KEY25,SIIEWAR,SIIECAT,SP70
          CALL      RSSIBA2
          CALL      RKSIBA2
          BRANCH    OVRCD,BACONE99
          PACK      KEY25,SIBAWAR,SIBACAT,SIBACST,SIBAREQ,SP70
          MATCH     KEY12,KEY25
          GOTO      BACONE99 IF NOT EQUAL
.
          MOVE      TOTALREC,SIBPAQT
          ASSIGN    SIBAQTY-TOTALREC,SIBPBQT
.
          CALL      WRPIC000
.
          ASSIGN    SIBAQTY-TOTALREC,SIBAQTY
          IF        SIBAQTY=0
            CALL      DESIBA2
          ELSE
            CALL      UPSIBA2
          ENDIF
.
BACONE99  RETURN
.-----------------------------------------------
. Write to Picking Sheet File for Back Orders
.-----------------------------------------------
WRPIC000  CALL      GETREQ00    * Post Requisition File Entry
.
          MOVE      SIIEWAR,SIBPWAR    * Warehouse
          MOVE      SIIECAT,SIBPCAT    * Catalog
          MOVE      SIBAQTY,SIBPRQT    * Quantity Required
          MOVE      BACKDEL,SIBPDEL    * Delivery Details
          MOVE      SIRACST,SIBPCST    * Cost Centre
          MOVE      SIIERAS,SIBPRAC    * Rack&Shelf
          MOVE      SIRATYP,SIBPTYP    * Req Type
          MOVE      SIRAREQ,SIBPREQ    * Req No.
          MOVE      SP2,SIBPPFL
          MOVE      SIBARESI,SIBPRESI  * Restock ID             Quote 9817
          PACK    KEY83,SIBPWAR,SIBPCST,SIBPDEL,SIBPRAC,SIBPCAT,SIBPTYP,SIBPREQ
          CALL      RASIBP1
          IF        OVRCD=1
            CALL      WRSIBP1
          ENDIF
.
          SUB       SIBPAQT,SIIESOH
          CALL      UPSIIE1
.
          PACK      SIITDAT,CCC,CYY,CMM,CDD,SP70
          REP       " 0",SIITDAT
          CLOCK     TIME,SIITTIM
          PACK      SIITOPR,PASSCODE,SP70
          PACK      SIITPOR,PORT,SP70
          PACK      SIITPRG,PRGID,SP70
          PACK      SIPEDATE,SIITDAT,SP70
          CALL      RSIPE000
          IF        OVRCD=1
            UNPACK    SIITDAT,CCENT,CYEAR,CMON,CDAY
            PACK      SIITPER,CCENT,CYEAR,CMON,SP70
          ELSE
            PACK      SIITPER,SIPEYEAR,SIPEPER,SP70
          ENDIF
          REP       " 0",SIITPER
.
          MOVE      SIBPWAR,SIITWAR            * Warehouse
          MOVE      SIBPCAT,SIITCAT            * Catalog
          ASSIGN    SIBPAQT*SEQ,SIITQTY        * Quantity
          ASSIGN    SEQ*SIBPAQT*SIIAAVC,SIITAMT
          MOVE      SIBPCST,SIITCST            * Cost Centre
          PACK      SIITREQ,SIBPTYP,SIBPREQ
          MOVE      "6",SIITTYP                * Back Order Requisition
          MOVE      SP7,SIITPUR                * Order Number
          MOVE      SIIESOH,SIITSOH         * Stock on Hand
          MOVE      SP70,SIITREF
          MOVE      SP70,SIITSPA               * Spare
.
          MOVE      PRGID,SIITPRG
          MOVE      PORT,SIITPOR
          MOVE      PASSCODE,SIITOPR
          PACK      SIITDAT,CCC,CYY,CMM,CDD
          REP       " 0",SIITDAT
          REPEAT
            CLOCK     TIME,SIITTIM
            PACK      KEY28,SIITWAR,SIITCAT,SIITDAT,SIITTIM,SP70
            CALL      RASIIT1
          UNTIL     OVRCD=1
          CALL      WRSIIT1
.
          ASSIGN    SIBPAQT,SIUSQTY        * Quantity
          ASSIGN    SIBPAQT*SIIAAVC,SIUSCST
.
          MOVE      SIBACST,KEY5
          CALL      RDSICA1
.
          CALL      SINUSAGE
.
          RETURN
.------------------------------------------------------------
. Write Backorder Requisition Details
.------------------------------------------------------------
GETREQ00  PACK      KEY8,ANSB,Z70
          CALL      RSSIRA1
          CALL      RPSIRA1
          IF        OVRCD=1
            MOVE      ZERO,F7
          ELSE
            MOVE      SIRAREQ,F7
          ENDIF
.
          MOVE      SP70,SIRADEL
          PACK      KEY8,SIBAREQ,SP70
          CALL      RDSIRA1
          MOVE      SIRADEL,BACKDEL
.
GETREQ10  ADD       ONE,F7
          PACK      KEY8,ANSB,F7
          CALL      RDSIRA1
          COMPARE   ZERO,OVRCD
          GOTO      GETREQ10 IF EQUAL
.
          UNPACK    KEY8,SIRATYP,SIRAREQ   * Move in details
          MOVE      SIBACST,SIRACST
          MOVE      ZERO,SIRAIND
          PACK      SIRADAT,CCC,CYY,CMM,CDD
          REP       " 0",SIRADAT
          ASSIGN    SIBPAQT*SIIAAVC,SIRATOT
.
          CLEAR     SIRADEL
          APPEND    "From Req'n : ",SIRADEL
          APPEND    SIBAREQ,SIRADEL
          APPEND    " Stocktake : ",SIRADEL
          APPEND    CDATE,SIRADEL
          RESET     SIRADEL
.
          CALL      WRSIRA1                * Write to Header File
.
          PACK      KEY20,SIRATYP,SIRAREQ,SIBAWAR,SIBACAT
          UNPACK    KEY20,SIRBTYP,SIRBREQ,SIRBWAR,SIRBCAT
          CALL      RASIRB1
          IF        OVRCD=0
            CALL      DESIRA1
            GOTO      GETREQ10
          ELSE
            MOVE      SIBAQTY,SIRBRQT
            MOVE      SIBPAQT,SIRBIQT
            ASSIGN    SIBPAQT*SIIAAVC,SIRBAMT
            UNPACK    SP70,SIRBBCH,SIRBLED,SIRBACC,SIRBSPA
            MOVE      SIRADAT,SIRBDAT
            CALL      WRSIRB1              * Write to Details File
          ENDIF
          RETURN
.----------------------------------------------------------------------
. Keyin SIWA
.----------------------------------------------------------------------
KSIWA000
          CALL      KSIWSA00                     * keyin SIWA with security tbl.
          BRANCH    EXIT,KSIWA950,KSIWA950
.
.
KSIWA900  MOVE      ZERO,EXIT
          GOTO      KSIWA999
.
KSIWA950  MOVE      TWO,EXIT
.
KSIWA999  RETURN
.----------------------------------------------------------------------
. Set up screen 02
.----------------------------------------------------------------------
SETSCR02
          MOVE      ONE,ACCEPT              * set accept mode
.
          CALL      DCAT0000                * default catalog range
.
          RETURN
.----------------------------------------------------------------------
. Default range
.----------------------------------------------------------------------
DCAT0000
          PACK      FROMCATA,START,SP70
          PACK      FCATALOG,SP70
          PACK      FCDESC,SP70
.
          PACK      TOCATA,END,SP70
          PACK      TCATALOG,Z70
          PACK      TCDESC,SP70
          RETURN
.----------------------------------------------------------------------
. Clear all catalog's set for stocktake
.----------------------------------------------------------------------
CLSTK000
          PACK      DISPMSG,SP70,SP70  * save line 24
          CALL      MESSAGE2
.
          CALL      CWARE000           * check warehouse
          BRANCH    EXIT,CLSTK950
.
          MATCH     FCATALOG,TCATALOG  * check range
          IF        @LESS
            DISPLAY   *P1:24,*B,*EF,"Illegal Catalog Range - ";
            CALL      HITENTER
            GOTO      CLSTK950
          ENDIF
.
          CALL      CONTQST            * ok to continue (Y/N/C)
          SUB       ONE,CEXIT
          BRANCH    CEXIT,CLSTK950,CLSTK950
.
          DISPLAY   *P1:24,"Processing : ";
.
CLSTK010
          MOVE      ZERO,CONTQTY
          PACK      KEY20,SIWAWAR,FCATALOG,SP70  * go to start of records
          CALL      RSSIWK2
          CALL      RPSIWK2
.
CLSTK100
          CALL      RKSIWK2
          BRANCH    OVRCD,CLSTK900     * any more records ?
          MATCH     SIWKWAR,SIWAWAR
          GOTO      CLSTK900 IF NOT EQUAL
          MATCH     SIWKCAT,TCATALOG
          GOTO      CLSTK900 IF LESS
.
          CALL      CCATA0000          * process catalog
          IF        SIIESTI=1
            ADD       ONE,CONTQTY      * get this one later
          ENDIF
          GOTO      CLSTK100
.
.
CLSTK900
          COMPARE   ZERO,CONTQTY       * all catalog's cleared ?
          GOTO      CLSTK010 IF NOT EQUAL
.
          MOVE      TWO,EXIT           * restart screen
          GOTO      CLSTK999
.
CLSTK950  MOVE      ONE,EXIT           * return to prompt
.
CLSTK999
          CALL      UUSIWA1
          CALL      MESSAGE3                     * restore line 24
          RETURN
.----------------------------------------------------------------------
. Process Catalog
.----------------------------------------------------------------------
CCATA000
          DISPLAY   *P1:24,"Printing : ",*V2LON,SIWKCAT,*EL;
          MOVE      ZERO,SIIESTI
.
          PACK      KEY7,SIWKCAT,SP70            * lock catalog
          REPEAT
            CALL      RLSIIA1
            IF        OVRCD=1
              CLEAR     DISPMSG
              APPEND    "Catalog ",DISPMSG
              APPEND    KEY7,DISPMSG
              APPEND    " Missing - ",DISPMSG
              DISPLAY   *P1:24,*+,*EL,*B,DISPMSG;
              CALL      HITENTER
              GOTO      CCATA999
            ENDIF
            IF        OVRCD=2
              KEYIN     *P1:24,*EL,"Catalog ",*DV,KEY7," Locked - (":
                        *V2LON,"R",*HOFF,")etry or (":
                        *V2LON,"S",*HOFF,")kip ? ",*V2LON,ANS
              PACK      ANS,ANS,SP70
              REP       UPPLOW,ANS
              MATCH     "S",ANS
              GOTO      CCATA999 IF EQUAL
            ENDIF
          UNTIL     OVRCD=0
.
          PACK      KEY12,SIWKCAT,SIWAWAR,SP70   * lock catalog
          REPEAT
            CALL      RLSIIE1
            IF        OVRCD=1
              CLEAR     DISPMSG
              APPEND    "Catalog/Warehouse ",DISPMSG
              APPEND    KEY7,DISPMSG
              APPEND    " Missing - ",DISPMSG
              DISPLAY   *P1:24,*+,*EL,*B,DISPMSG;
              CALL      HITENTER
              GOTO      CCATA999
            ENDIF
            IF        OVRCD=2
              KEYIN     *P1:24,*EL,"Catalog/Ware ",*DV,KEY12," Locked - (":
                        *V2LON,"R",*HOFF,")etry or (":
                        *V2LON,"S",*HOFF,")kip ? ",*V2LON,ANS
              PACK      ANS,ANS,SP70
              REP       UPPLOW,ANS
              MATCH     "S",ANS
              GOTO      CCATA999 IF EQUAL
            ENDIF
          UNTIL     OVRCD=0
.
          IF        ONE=SIIESTI
            MOVE      "2",AUDTTYPE     * before audit
            CALL      WASIIE00
            MOVE      ZERO,SIIESTI     * clear stocktake
            CALL      UPSIIE1
            MOVE      "3",AUDTTYPE     * after audit
            CALL      WASIIE00
          ENDIF
.
CCATA999
          CALL      UUSIIA1
          CALL      UUSIIE1
          RETURN
.----------------------------------------------------------------------
. Keyin from code (SIIA)
.----------------------------------------------------------------------
KCATF000
          CALL      KSIIEA00                     * keyin SIIA
          MOVE      SIIECAT,SIIACAT
          BRANCH    EXIT,KCATF100,KCATF950
.
          PACK      FROMCATA,SIIACAT,SP70        * item entered
          PACK      FCATALOG,SIIACAT,SP70
          PACK      FCDESC,SIIADES,SP70
          GOTO      KCATF900
.
KCATF100  PACK      FROMCATA,START,SP70          * nothing entered
          PACK      FCATALOG,SP70
          PACK      FCDESC,SP70
          GOTO      KCATF900
.
KCATF900  MOVE      ZERO,EXIT                    * entry ok
          GOTO      KCATF999
.
KCATF950  MOVE      TWO,EXIT                     * quit screen
.
KCATF999  RETURN
.----------------------------------------------------------------------
. Keyin to code (SIIA)
.----------------------------------------------------------------------
KCATT000
          CALL      KSIIEA00                     * keyin SIIA
          MOVE      SIIECAT,SIIACAT
          BRANCH    EXIT,KCATT100,KCATT950
.
          PACK      TOCATA,SIIACAT,SP70          * item entered
          PACK      TCATALOG,SIIACAT,SP70
          PACK      TCDESC,SIIADES,SP70
          GOTO      KCATT900
.
KCATT100  PACK      TOCATA,END,SP70              * nothing entered
          PACK      TCATALOG,Z70
          PACK      TCDESC,SP70
          GOTO      KCATT900
.
KCATT900  MOVE      ZERO,EXIT                    * entry ok
          GOTO      KCATT999
.
KCATT950  MOVE      TWO,EXIT                     * quit screen
.
KCATT999  RETURN
BACLIN00  MOVE     SIBTCST,KEY5
          CALL     RDSICA1
          RETURN
BALAN000  MOVE      ZERO,EXIT
          MOVE      ZERO,F12P2
          PACK      KEY8,SP70
          CALL      TSSIBT12
BALAN100  CALL      TKSIBT12
          BRANCH    OVRCD,BALAN200
          ADD       SIBTISS,F12P2
          GOTO      BALAN100
.
BALAN200  MOVE      ZERO,EXIT
          COMPARE   F12P2,TOTALREC
          GOTO      BALAN999 IF EQUAL
          PACK      DISPMSG,SP70,SP70
          CALL      MESSAGE2
.
BALAN300  DISPLAY   *P1:24,*EL,*B,"Received :",*V2LON,TOTALREC,*HOFF:
                    "  Allocated :",*V2LON,F12P2,*HOFF," Continue (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? "
          KEYIN     *P71:24,*V2LON,ANS
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      BALAN400 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      BALAN300 IF NOT EQUAL
          MOVE      ONE,EXIT
          CALL      MESSAGE3
          GOTO      BALAN999
.
BALAN400
          IF        F12P2>TOTALREC
            MOVE      ONE,EXIT
          ELSE
            MOVE      ZERO,EXIT
          ENDIF
.
          CALL      MESSAGE3
.
BALAN999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       SINBACIO/INC
          INC       SINBATIO/INC
          INC       SINBOTIO/INC
          INC       SINBPSIO/INC
          INC       SINCCAIO/INC
          INC       SINCCBIO/INC
          INC       SINCCEIO/INC
          INC       SINCCFIO/INC
          INC       SINCCHIO/INC
          INC       SINCGBIO/INC
          INC       SINCIAIO/INC
          INC       SINCIAKY    
          INC       SINCIEIO/INC
          INC       SINCIEKY    
          INC       SINCIFIO/INC
          INC       SINCIHIO/INC
          INC       SINCIIIO/INC
          INC       SINDISIO/INC
          INC       SINITMIO/INC
          INC       SINNATIO/INC
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINREAIO/INC
          INC       SINREBIO/INC
          INC       SINSUAIO/INC
          INC       SINSUBIO/INC
          INC       SINUSAGE    
          INC       SINWARIO/INC
          INC       SINWRKCD    
          INC       SINWRKIO/INC
          INC       SINWSEIO/INC
          INC       SINWSEKY    
.
          INC       STDGENCD
.
