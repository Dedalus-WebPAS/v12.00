.----------------------------------------------------------------------
. Program       : EMRWEB06
.
. Function      : Procedures Diagnosis and Investigations Server
.
. Modifications :
.
.----------------------------------------------------------------------
. V12.00.02 03/06/2025  J.Tan          TSK 0955096
.           Added Alphanumeric visit number changes
. V12.00.01 30/05/2025  Jacob Jackson   TSK 0955096
.           Alphanumeric changes
. V11.05.01 22/04/2025  Bella Turco     TSK 0959304
.           Added code to ignore "006" AECC Class records in ADDCOD00
. V11.03.05 17/10/2023  Ebon Clements   TSK 0888745
.           Populate EMRHISFD created by fields - WRTHIS00
. V11.03.04 05/09/2023  Ebon Clements   TSK 0888745
.           Added clear of EMRHISFD created/update by fields - WRTHIS00
. V11.03.03 13/07/2023  Ebon Clements   TSK 0933552
.           Fixed diagnosis record in context after AECC Class record 
.           update when deleteing a diagnosis - EMRVCD30
. V11.03.02 13/07/2023  Ebon Clements   TSK 0933552
.           Fixed visit dianosis free text comments update after
.           deleting the primary diagnosis - EMRVCD30 - SAVCTYPE
. V11.03.01 22/05/2023  Peter Vela      TSK 0910319
.           Added VALEMP00 - Check if Emergency patient has existing
.           proecedures in pmsmtiaf
. V11.02.02 04/03/2022  J.Tan           TSK 0916690
.           Mod to update delete flag for AECC class (DAEC0000)
. V11.02.01 09/02/2022  Thanh T       TSK 0905641
.           Recompiled as OUTMA1FD (PATMASTM) changes
. V11.01.08 22/12/2021  Thanh T         TSK 0877055
.           Recompiled for WEBPTMAS changes 
. V11.01.07 23/08/2021  Thanh T        TSK 0907648
.           Changed ADDCOD20 to use the user name that current logins on
.           to coding creation screen instead of web user id 
. V11.01.06 18/08/2021  Thanh T        TSK 0907648
.           Changed TABCOD00 and TABCWA00 fix the issue with incorrect
.           user name when EMVCWUSR does not exist in websecaf table
. V11.01.05 13/08/2021  Thanh T        TSK 0907648  
.           Changed UPDCOD00 to update the last update user, date/time  
.           Changed ADDCOD20 to use the user name that current logins on
.           to coding creation screen instead of web user id 
.           Changed CHKDGE10 to remove the checking for Coding already
.           existed error
. V11.01.04 15/07/2021  Ebon Clements  TSK 0908675
.           Test for blank EMVCEDAD linked doctor code. Re V11.00.03 change
.           TABCOD30
. V11.01.03 21/05/2021  Thanh T        TSK 0873184
.           Added SEENDTIM, TESTDTIM, EMCNPBSD for EMRVISTM changes
. V11.01.02 30/03/2021  Peter Vela     TSK 0900574
.           Fixed days validation in EMINHR00
. V11.01.01 10/03/2021  Peter Vela     TSK 0900574
.           Added Cat R5 tag for HCPs
. V11.00.04 09/12/2020  Thanh T        TSK 0872840
.           Added PMSCCDFD/PMSCCDIO as PMSPX2TM changes
. V11.00.03 14/07/2020  Tracey Nguyen  TSK 0889537
.           Checked if EMVCEDAD is the actual linked doctor code - TABCOD30
. V11.00.02 24/02/2020  J.Tan          TSK 0838262
.           Added Effective from and to date to MBS Item file
. V11.00.01 02/03/2020  Peter Vela     TSK 0888853
.           Added tag for PSAGEYRS
. V10.14.04 08/08/2019  Richa Phogat   TSK 0878541
.           Updated key length from Key22 to Key32 in EVCD5000
. V10.14.03 17/07/2019  Ebon Clements  TSK 0877986
.           Added 20 zero test to PTCNNSSI using EDWARD
. v10.14.02 16/07/2019  Richa Phogat   TSK 0877002
.           Added EVCD5000
. V10.14.01 27/02/2019  Don Nguyen     TSK 0821139
.           Recompiled for EMRVISTM - Modified Location selection list code
.----------------------------------------------------------------------
. V10.13.04 08/11/2018  Tracey Nguyen  TSK 0863870
.           Added trap to write to emr history file (emrhisaf) and
.           added SP70 when packing into KEY22 - WRTHIS80
. V10.13.03 14/09/2018  Ebon Clement   TSK 0861770
.           Fixed EDWARD alteration writes for  diagnosis
.           10/08/2018  Peter Vela     TSK 0852438
.           Added tag validation for misc items Facility Fee Billing
.           emrweb0602019.html radio buttons
.           Added tag validation for ama/mbs items Facility Fee Billing
.           emrweb0602019.html radio buttons
. V10.13.02 07/08/2018  Peter Vela     TSK 0852438
.           Added tag validation for 75% fee MBS Consultation Billing
. V10.13.01 23/07/2018  Peter Vela     TSK 0860680
.           Added read of patcodes in REST0000
.----------------------------------------------------------------------
. V10.12.07 19/06/2018  Peter Vela     TSK 0852438
.           Added Standardised Billing Sheet for HEA
. V10.12.06 27/06/2018  Jill Parkinson TSK 0859204
.           Removed changes made in v10.12.04
. V10.12.05 31/05/2018  Ebon Clements  TSK 0853789
.           Move one to EXIT after Item may have been invoiced warning 
.           VCDWAR00
. V10.12.04 16/04/2018  Thanh T.       TSK 0853789
.           Modified ADDCOD00/UPDCOD00 to check for invalid diagnosis
.           code error before update
. V10.12.03 29/03/2018  Ebon Clements  TSK 0848319
.           Fixed EDWARD visit alteration file key pack - WEDV0000
. V10.12.02 20/03/2018  Ebon Clements  TSK 0848319
.           Added EDWARD visit alteration file write to discharge - WEDV0000
. V10.12.01 19/03/2018  Thanh T.       TSK 0853519
.           Fixed validation in CKDT0000 to allow the procedure codes
.           to be added when emrvisaf.demvista = '1' (Current) regardless
.           of the procedure date/time must be before the discharge
.           date/time.
.----------------------------------------------------------------------
. V10.11.03 27/11/2017  Thanh Tieu     Task 0821710
.           Recompiled as PATMASTM changed
. V10.11.02 14/11/2017  Don Nguyen     TSK 0816814
.           Added UPEUDC00 to update EMR Visit Codes' side value posted from 
.           radio buttons ("evcrdb") for SNOMED.
.           Modified TABCOD00 to output radio buttons for Diagnosis Side values
.           stored against EMVCUDC1 for SNOMED (NZ only).
. V10.11.01 30/07/2017  Thanh T.       TSK 0821710
.           Audit admission/outpatient/UR comments. changed PATMASTM/PMSPX2TM.
.----------------------------------------------------------------------
. V10.10.03 19/04/2017  Jill Parkinson TSK 0837151
.           Added branch on exit after UPDCOD00
. V10.10.02 28/03/2017  Nicole Torrisi    TSK 0833996
.           Changed CHKDGE00 to check EMVCCSYS for procedure code
. V10.10.01 09/03/2017  Peter Vela        TSK 0815584
.           Added TABCWA for wahealth
. V10.09.03 27/02/2017  Peter Vela        TSK 0815584
.           Added separate calls for EMICDESC and EMVCFTXT in SPDT0000
. V10.09.02 06/02/2017  Peter Vela        TSK 0815584
.           Added new columns in TABCOD00
.           Added wahealth functionality to EMRVCD00
. V10.09.01 25/11/2016  Ebon Clements     TSK 0814745
.           Added report 7 - Other clinical information (Multiple)
. V10.08.03 08/07/2016  Jill Parkinson    TSK 0822002
.           Recompiled for PATMASTM
. V10.08.02 20.06.2016  B.G.Ackland       TSK 0821135
.           Secuity fix for reads on WBSE7 index
. V10.08.01 27/05/2016  Jill Parkinson TSK 0814124   
.           Changed emrmtxaf to use emic9cod instead of emicvemd        
.           10/06/2016  Peter Vela    TSK 0816991
.           Recompiled for EMRVISTM
. V10.07.01 16/12/2015  Ebon Clements    TSK 0808260
.           Move one to exit in ADDCOD94 and UPDCOD94 after CLOSHTML
. V10.06.08 18/09/2015  Ebon Clements    CAR 320155
.           Recompiled for EMRDRCHR - Fixed presenting complaint update - KEY22
. V10.06.07 27/08/2015  Ania P           CAR 303291
.           Recompiled for EMRCLITM
. V10.06.06 05/08/2015  Peter Vela      CAR 320066
.           Recompiled for EMRVISTM
. V10.06.05 22/06/2015  Peter Vela      CAR 311435
.           Recompiled for EMRVISTM
. V10.06.04 22/04/2015  Ebon Clements   CAR 310251
.           Added template mapping functionality - GETMAP00
. V10.06.03 02/04/2015  J.Tan           CAR 244314
.           Mods to update Dr Billing Complete
. V10.06.02 03/03/2015  Peter Vela      CAR 282090
.           Recompiled for EMRVISTM
. V10.06.01 20/03/2015  Ebon Clements   CAR 304779
.           Added multiple delay reasons to one delay record.
.           Added delay comments
. V10.05.05 19/12/2014  B.G.Ackland     CAR 310348
.           Recompiled for changes to IBAWEBCD
. V10.05.04 21/08/2014  Peter Vela       CAR 303909
.           Recompiled for EMRVISTM
. V10.05.03 19/08/2014  Peter Vela       CAR 304873
.           Recompiled for EMRVISTM 
. V10.05.02 18/08/2014  Peter Vela       CAR 304873
.           Recompiled for EMRVISTM
. V10.05.01 11/08/2014  Don Nguyen      CAR 297774
.           Recompiled for changes to PMSBRQFD/IO
. V10.04.05 07/04/2014  Peter Vela      CAR 286258
.           Recompiled for PATMASTM
. V10.04.04 31.03.2014  B.G.Ackland  CAR 299363
.           Replace META Tag Redirect with Javascript in Common RDIREC00
.           Routine
. V10.04.03 14/01/2014  Peter McMullen CAR 294083 
.           Check username  against loginid (index 7) of websecaf 
. V10.04.02 22/01/2014  Peter Vela     CAR 285739
.           Added validation for invalid admission number in CLIN1000
. V10.04.01 17/01/2013  Peter Vela     CAR 285739
.           Check for cancelled emergency visits in CLIN1000
.----------------------------------------------------------------------
. V10.03.09 17/10/2013  J.Tan          CAR 292665
.           Fixed deleting primary Procedures items
. V10.03.08 19/03/2013  Jill Parkinson CAR 282814
.           Recompiled for PATMASTM - Disability alert DSAL0000 change
. V10.03.07 04.03.2013 Peter McMullen CAR 271555 
.           Convert VERUSR00 to use standard authenticaion VFYUSR00
. V10.03.06 25/02/2013  Ania P          CAR 281021
.           RECOMPILED for EMRCLITM
. V10.03.05 12/10/2012  Ebon Clements  CAR 266929
.           Added report 5 - Emergency visit delay reasons
.           Added report 6 - Research project maintenance
. V10.03.04 11/10/2012  Ebon Clements  CAR 274400
.           Fixed save of free format diagnosis EMVCFTXT - SPLDFF00
. V10.03.03 21/09/2012  Don Nguyen     CAR 270231
.           Modified SETEXT00 to use Free Format Text (EMVCFTXT) if not empty
. V10.03.02 23/05/2012  Peter Vela     CAR 264245
.           Added tag for EFF Facility Fee
. V10.03.01 16/01/2012  Sandra Barcham  CAR 256563
.           Recompiled for PATMASTM
.----------------------------------------------------------------------
. V10.02.02 26/09/2011  Ebon Clements  CAR 249584
.           Recompiled for changes to WEBEMRVR.
. V10.02.01 28/03/2011  Ebon Clements  CAR 239311
.           Recompiled for EMRDCMTX - Save free format diagnosis
.----------------------------------------------------------------------
. V10.01.03 01/03/2011  Ebon Clements  CAR 223822
.           Added EMDCLUID and EMDCSPAR to emr free text diagnosis
. V10.01.02 28/02/2011  Ebon Clements  CAR 235686
.           Added EMCNLDIA test when saving free format diagnosis
. V10.01.01 17/11/2010  Jill Parkinson    CAR 233088
.           Increased PTMAS037 from 10 to 19
.----------------------------------------------------------------------
. V10.00.05 30/08/2010 Peter Vela        CAR 216620
.           Added EMCNDEDI EMR default indicator functionality to add, update 
.           and delete EMRVCD00
. V10.00.04 26/08/2010 Peter Vela        CAR 216620
.           Added functionality to add, update and delete to pmsbrq
. V10.00.03 11/06/2010 Peter Vela        CAR 216620
.           Added EMVCD033 - EMVCFTXT.EMRVCDFD Free Format Text
. V10.00.02 14/04/2010 Steve Armstrong   CAR 219933
.           Recompiled for changes to EMRVCDFD
. V10.00.01 18/03/2010  Peter Vela     CAR 206240
.           Added tag for EMVICOMP - compensable patient indicator
.----------------------------------------------------------------------
. V9.12.07  15/03/2010  J.Tan          CAR 296240
.           Mods for ED Billing Sheet
. V9.12.06  23/02/2010  Peter Vela     CAR 214931
.           Added tag for EMVIYN04 - EMRB0000
. V9.12.05  19/01/2010  Ebon Clements CAR 213775
.           Fixed write of history record if key already existed - WRTHIS80
. V9.12.04  07/12/2009  WeeLee Koo  CAR 211407
.           Reversed changes in V9.12.03 (SV385230) 
. V9.12.03  03/12/2009  WeeLee Koo  CAR 211407
.           Deleted Diagnosis in emrdcmaf (EMRVCD30) 
. V9.12.02  12/11/2009  Ebon Clements  CAR 195974
.           Allow duplicate procedure codes - ADDCOD00
. V9.12.01  22/06/2009  Saroeun Soeur  CAR 197930
.           created subroutine for other clinic details - CLIN0000 
. V9.11.01  05/11/2008  Peter McMullen CAR 174725
.           convert internal javascript to W3C standards
. V9.10.01  04/09/2008  Peter Vela         CAR 160353
.           Fixed date check in LOKCOD00 for priitemf
. V9.09.03  13/02/2008  Peter Vela         CAR 158947
.           Fixed validation for EMVCCSYS @ EMRVCD30
. V9.09.02  14/01/2008  Peter Vela         CAR 158947
.           Fixed error message and redirect @ EMRVCD95
. V9.09.01  01/06/2007  Peter Vela         CAR SJOG ED Billing
.           Added EMVCSUBN EMVCEDAD to emrvisaf
.           SJOG ED Billing functionality
.           Added delete procedure record @ EMRVCD30
. V9.08.02  25/05/2007  Jill Habasque      CAR 141653
.           Removed open of reslnkaf
. V9.08.01  31/01/2007  Peter Vela    CAR 127930
.           Recompiled for EMRSITFD
. V9.05.01  09/03/2006  Ebon Clements CAR 78533
.           Mods for PATCODTM - Hospital specific category codes
. V9.05.B02 27/02/2006  Peter Vela         CAR 94746
.           Added branch out of program if error message is displayed from
.           ADDCOD00
.           Fixed duplicate validation in ADDCOD00
. V9.05.B01 30/01/2006  Ebon Clements CAR 93186
.           Mods for REDIRECT length change. Recompiled for IBAWEBDF
. V9.04.04  08/07/2005  Mike Laming        CAR 63036
.           Change RDICD1 & RDICO1 to RDPTICD1/RDPTICO1 to use ICD10 V1-4
. V9.04.03  01/06/2005  Peter Vela    CAR 60166
.           Recompiled for EMRCONFD
. V9.04.02  02/05/2005  Peter Vela    CAR 60868
.           Added function for splitting Diagnosis lines
. V9.04.01  01/03/2005  Peter Vela    CAR 57547
.           Recompiled for PATVADFD and PATVADIO
. V9.03.08  09/08/2004  Davin  CAR 52214
.           Recompiled for emrvcdaf change
. V9.03.07  07/06/2004 Peter Vela CAR 49016
.           2004 Statutory Changes - recompiled for PMSPX2TM
. V9.03.06  26/03/2004 Peter Vela        CAR 13038
.           Recompiled for PATDOCCD - Doctor Name format Parameter
. V9.03.05  24/10/2003  Steve Armstrong  CAR 38016
.           Mods to use standard CLEMRVIS instead of local CLEMRDET 
. V9.03.04  14/10/2003 Ebon Clements CAR 44193
.           Changed VERUSR00 to not check server security if the updated type
.           has no security level set.
. V9.03.03  26/08/2003 Peter Vela    CAR 42825
.           Recompiled for EMRVISTM
. V9.03.02  25/08/2003 Ebon Clements CAR 42813
.           Recompiled for EMRSITFD changes that were missing in V9 that
.           had been made in 5.09 - EMSTDLOC
. V9.03.01  21/08/2003 Jill Habasque SRF 42754
.           Added emrdocaf
. V9.02.27  20/03/2003 Peter Vela CAR 37438
.           Recompiled for EMRVISTM - Added new tag (EMRA8500)
. V9.02.26  05/03/2003 Lina Vo  CAR 36977
.           Added SETDG000 to set new primary diagnosis when primary      
.           diagnosis has been deleted or unchecked.
.           Added CHKDGE00 to check diagnosis is valid and not duplicated.
. V9.02.25  04/03/2003 Lina Vo  CAR 34675
.           Changed UPDCOD00 to validate Diagnosis code before updating.
. V9.02.24  07/02/2003 Tonii CAR 35992
.           Recompiled for PATMISTM - inactive codes in patfundf
. V9.02.23  19/12/2002  Jill Habasque SRF 34675
.           Added read of emricdaf before reading emrmtxaf in CHDG000
. V9.02.22  21/11/2002  Pat Dirito               SRF 33644
.           Fixed read of PTCNI10D was reading incorrect position
. V9.02.21  13/11/2002  Ebon Clemenst SRF 33351 22706
.           Added write to history file when diagnosis and procedure codes are
.           updated.
.           Fixed format of EMVCD007 for emrvcdaf date
. V9.02.20  09/10/2002  Peter Vela    SRF 17693
.           Recompiled for PATMISTM - Admitting Point
. V9.02.19  27/08/2002  Ebon Clements SRF 20077
.           Changed ADDCOD00 to exit before the read of the vemd matrix
.           and update of EMVIREGN and EMVINATI if it is a procedure code.
. V9.02.18  13/08/2002  Ebon Clements SRF 20721
.           Fixed size of PTMAS cgi variable address fields
.           Changed ADDCOD00 and UPDCOD00 to update EMVIREGN and EMVINATI
.           when a primary diagnosis is add/updated
. V9.02.17  21/04/2002  Bronko Sosic
.           Changes for diagnosis add/update for EMR
. V9.02.16  28/03/2002  Bronko Sosic
.           Recompiled for EMRICDFD
. V9.02.15  19/03/2002  B.G.Ackland
.           Fix Diagnosis
. V9.02.14  17/03/2002  B.G.Ackland
.           Fix Procedure Screen
. V9.02.13  17/03/2002  B.G.Ackland
.           Added ICD10 Diagnosis Output of Patient Summary Tag
. V9.02.12  14/03/2002  Bronko Sosic
.           Mods for web user ids
. V9.02.11  07/03/2002  Bronko Sosic
.           Changed Text saved to emergency
. V9.02.10  24/02/2002  Bronko Sosic
.           Changed so that it passes a flag to EMRWEB02 when a code
.           is in the VEMD Matrix
. V9.02.09  08/02/2002  Pat Dirito
.           Recompiled for MRTVISCD
. V9.02.08  07/02/2002 Bronko Sosic                            
.           Changed MULT0000 So that it can remove All codes
. V9.02.07  04/12/2001 Katie Nelson/Harvinder   SRF 648628(nz)
.           Recompiled for NHI tags added to PATMASTM
. V9.02.06  26.11.2001 Bronko Sosic
.           Removed EMRDOCFD                       
. V9.02.05  22.11.2001 Bronko Sosic
.           Changed alert for diagnosis            
. V9.02.04  18.11.2001 Bronko Sosic
.           Added write to text file for ICD codes
. V9.02.03  08.09.2001 Harvinder
.           Added one more nextpage routine
. V9.02.02  30.08.2001 Raghu
.           Recompiled for EMRHISFD
. V9.02.01  27.08.2001 Ashwin - HPS
.           Initialise the error variable(EXIT) in LOKCOD00 routine
. V9.01.02  16.08.2001 J.Tan
.           Recompiled for PATMASTM
. V9.00.001 13.08.2001 J.Tan
.           Recompiled for PATMASTM
. V9.00.01  03.08.2001 B.G.Ackland
.           Change MASF000 to be first
. V9.00.B02 13.07.2001 Sandra Barcham
.           Replace GP with HCP
. V9.00.B01 14.06.2001 B.G.Ackland
.           Recompile for Changes to PATMASTM
.----------------------------------------------------------------------
.                 V5.09.03  15.01.2001  Bronko Sosic
.                           Recompiled for MRTMASTM   
.                 V5.09.02  11.01.2001  Bronko Sosic
.                           Recompiled for MRTVISCD & changes to MRTMASFD  
.                 V5.08.07  28/09/2000 Bronko Sosic  
.                           Recompiled for PATMASTM / PATMISTM
.                 V5.08.05  16/08/2000  Caleb Sharman
.                           Changed Health Fund variables to be 8 chars
.                 V5.08.04  21/06/2000  B.G.Ackland
.                           Changed CHKDG000 to validate whether code is primary
.                           Added CLRALL00 - clears all emergency codes
.                 V5.08.03  13/06/2000  Pat Dirito
.                           Removed ERORFLAG & MULTFLAG no longer need them
.                           for MULT0000
.                           07/06/2000  Bronko Sosic
.                           Recompiled for PATMASTM
.                 V5.08.02  04/05/2000  B.G.Ackland
.                           Fix Image Path
.                 V5.08.01  02/05/2000  Nicole Harrington
.                           Added check of "S" codes to CHKDG000
.----------------------------------------------------------------------
. Modifications : V5.07.04  28.01.2000  B.G.Ackland
.                           Recompile in Work
.                 V5.07.03  10/01/2000  Nicole Harrington SRF 636562 & 636518
.                           Added ability to set diagnosis to be primary
.                           14/12/1999  Nicole Harrington
.                           Recompiled for changes to EMRVISTM
.                 V5.07.02  05/11/1999  Nicole Harrington
.                           Added clear of ERORFLAG
.                 V5.07.01  01/11/1999  Nicole Harrington
.                           Added option 3 - multiple procedure coding for BHS
.                 V5.07.00  14/10/1999  Nicole Harrington
.                           Port 6.06 - 5.07
.----------------------------------------------------------------------
. Modifications : V6.06.01  22/06/1999  Katie Nelson      
.                           Re-Compiled for EMRVISTM                   
.                 V6.06.00  11/05/1999  Nicole Harrington
.                           Modified skeleton server to create program
.                           26/05/1999  Katie Nelson     
.                           Added Emergency Coding Maintenance
.
.----------------------------------------------------------------------
          INC       IBAWEBDF    
          INC       WEBDATDF    
.
          INC       EMRDCMFD/INC
          INC       EMROCIFD/INC
          INC       EMROCITD/INC
          INC       AAEDTRFD/INC
          INC       ALLTMPFD/INC
          INC       APSMASFD/INC
          INC       GTCMPATD/INC
          INC       COMPARFD/INC
          INC       EMRCONFD/INC
          INC       EMRGRCFD/INC
          INC       EMRHISFD/INC
          INC       EMRDELFD/INC
          INC       EMRDELTD/INC
          INC       EMRICDFD/INC
          INC       EMRINVFD/INC
          INC       EMRLOCFD/INC
          INC       EMRPROFD/INC
          INC       EMRRESFD/INC
          INC       EMRRESTD/INC
          INC       EMRRSLFD/INC
          INC       EMRRSLTD/INC
          INC       EMRRVSFD/INC
          INC       EMRRVSTD/INC
          INC       EMRMTXFD/INC
          INC       EMRSECFD/INC
          INC       EMRSITFD/INC
          INC       EMRVCDFD/INC
          INC       EMRVDGFD/INC
          INC       EMRVPRFD/INC
          INC       EMRDOCFD/INC
          INC       EMRVISFD/INC
          INC       EMRCLIFD/INC
          INC       EMRCLITD/INC
          INC       EMRUNKFD/INC
          INC       EMRUTYFD/INC
          INC       MRTMASFD/INC
          INC       OPRNURFD/INC
          INC       OUTSITFD/INC
          INC       OUTPHOFD/INC
          INC       PATALRFD/INC
          INC       PMSADWFD/INC
          INC       PMSUCHFD/INC
          INC       PMSUCDFD/INC
          INC       PATMASTD/INC
          INC       PATCONFD/INC
          INC       PATDSCFD/INC
          INC       PATDO1FD/INC
          INC       PATFN1FD/INC
          INC       PATHSPFD/INC
          INC       PATDHEAD/INC
          INC       PATICDFD/INC
          INC       PATICOFD/INC
          INC       PATIN1FD/INC
          INC       PATITMFD/INC
          INC       PATMCHFD/INC
          INC       PRIITMFD/INC
          INC       PATMA1FD/INC
          INC       PMSBRQFD/INC
          INC       PMSRELFD/INC
          INC       PMSHCPFD/INC
          INC       PMSHCGFD/INC
          INC       PMSHCPTD/INC
          INC       PMSHCGTD/INC
          INC       PMSPX2FD/INC
          INC       PMSMTIFD/INC
          INC       PMSPX2TD/INC
          INC       PMSVX1FD/INC
          INC       PMSCCDFD/INC            * Concession Card Details
.
          INC       PATMI1FD/INC
          INC       PATPR1FD/INC
          INC       PATVADFD/INC
          INC       PATVISFD/INC
          INC       PATWMAFD/INC
          INC       PATWR1FD/INC
          INC       PATCOMM/INC
          INC       PATCALAG/INC
          INC       VISMDTFD/INC
          INC       WEBEMRVR/INC
          INC       NHIMASFD/INC
          INC       NHIETHFD/INC
.
.--------------------------------------
. CGI Parameters         
.--------------------------------------
CHKINJUR  INIT      "&chkinjur="
CLEARALL  FORM      1
FORMACTN  DIM       2        
FOLDERSF  DIM       3
LOCKTYPE  DIM       8
NEXTPAGE  FORM      1        * 0=Close Window, 1=Redirect, 2=Insert
UPDATEKY  DIM       16
WEBUSERI  DIM       10
TESTKEY   DIM       16
EMVISFLG  FORM      1
CHCKNAME  FORM      1
PASSWORD  DIM       256
RECORDKY  DIM       14
UPDATETY  DIM       1
USERNAME  DIM       256
EMUTY001  DIM       5
PRIMDIAG  DIM       1
EMRPROCS  DIM       9[99]
.
ITMAMOUN  DIM       9[99]
ITMQUANT  DIM       3[99]
SUNDRITM  DIM       2[99]
ITMCOUNT  FORM      3
.
ECRECKEY  DIM       16[99]  * Array of EMRVCD Keys (prefixed with side value)
ECKEYCNT  FORM      2       * Count of EMRVCD Keys
ECKEYEND  FORM      2       * Count of EMRVCD Keys
.
.
.--------------------------------------
. Program Variables
.--------------------------------------
AGEINDAY  DIM       6
.
DESCCTYP  DIM       20
DESCORDR  DIM       3
DESCRETN  DIM       3
DESCPATH  DIM       20
DESCSEEN  DIM       3
.
DIM10     DIM       10
DIM11     DIM       11 
DIM100    DIM       100
DISPAGE   DIM       4
DISPDATE  DIM       11
DISPTYPE  DIM       20
DISPPRES  DIM       20
DISPREAS  DIM       20
DISPRS02  DIM       20
DISPRS03  DIM       20
DISPRS04  DIM       20
DISPRS05  DIM       20
DISPRS06  DIM       20
DISPRS07  DIM       20
DISPRS08  DIM       20
DISPRS09  DIM       20
DISPRS10  DIM       20
DISPRESP  DIM       20
DISPSELF  DIM       50
DISPSELT  DIM       50
DISPSTAT  DIM       10
SAVCTYPE  DIM       3
SAVEDIAG  DIM       100
SAVEUNIQ  DIM       3 
SAVKEY14  DIM       14
SAVKEY16  DIM       16
SAVSPACE  FORM      3
CHECKALL  DIM       16
CHECKCUR  DIM       16
CURSPACE  FORM      3
INJ       DIM       1
COMM127   DIM       127
OBJNAME   DIM       3
ALTFLAG   FORM      1
ARRCOUNT  FORM      3
ALERTDIM  DIM       86
CALLPOSN  FORM      1
CHGADD    FORM      1
CHGFLAG   FORM      1
CHGSFNT   FORM      1
CHGUR     FORM      1
CHGSTAT   FORM      1
CENT      DIM       2
CURRDATE  DIM       8
COUNTER   FORM      3
CODEDESC  DIM       70
ICDDESC   DIM       70
INVALDAT  FORM      1                       * outside date range flag
INVALDFL  FORM      1
CLMFLG    FORM      2
DAY       DIM       2
DCC       DIM       2
DDD       DIM       2
DEXCNT    FORM      3
DIM80     DIM       80
DIAGINDC  FORM      1
DMM       DIM       2
DPURNO    DIM       8
DYY       DIM       2 
DOCTCODE  DIM       6
DOCTRHIS  DIM       50
DATE      DIM       8
TIME      DIM       8
DIM9      DIM       9
.
EMSTRTIM  DIM       8
EMENDTIM  DIM       8
EMWKDAYS  DIM       8
EMRDIAIN  DIM       1
EMRINVIN  DIM       1
.
EFLGDESC  DIM       3                       * No=0, Yes=1
EMVDG001  DIM       9
EMVDG002  DIM       1
EMVDG003  DIM       1
EMVPR001  DIM       9
EMVPR002  DIM       1
EMINV001  DIM       8
EMINV002  DIM       2
EMINV003  DIM       3
EMINV004  DIM       8
EMINV005  DIM       6
EMINV006  DIM       10
EMINV007  DIM       8
EMINV008  DIM       6
EMINV009  DIM       50
EMINV010  DIM       50
EMINV011  DIM       3
EMINV012  DIM       3
EMINV013  DIM       3
EMINV014  DIM       3
EMINV015  DIM       8
EMINV016  DIM       8
EMINV017  DIM       5
EMINV018  DIM       5
EMINV019  FORM      12.2
EMINV020  FORM      12.2
EMINV021  DIM       1
EMINV022  DIM       1
EMINV023  DIM       1
EMINV024  DIM       1
.
EMVIS001  DIM       11
EMVIS002  DIM       8
EMVIS003  DIM       3
EMVIS004  DIM       50
EMVIS005  DIM       50
EMVIS006  DIM       3
EMVIS007  DIM       6
EMVIS008  DIM       3
EMVIS009  DIM       3
EMVIS010  DIM       3
EMVIS011  DIM       3
EMVIS012  DIM       3
EMVIS013  DIM       3
EMVIS014  DIM       20
EMVIS015  DIM       3
EMVIS016  DIM       3
EMVIS017  DIM       6
EMVIS018  DIM       8
EMVIS019  DIM       8
EMVIS020  DIM       6
EMVIS021  DIM       3
EMVIS022  DIM       3
EMVIS023  DIM       3
EMVIS024  DIM       11
EMVIS025  DIM       8
EMVIS026  DIM       3
EMVIS027  DIM       3
EMVIS028  DIM       11
EMVIS029  DIM       8
EMVIS030  DIM       11
EMVIS031  DIM       8
EMVIS032  DIM       5
EMVIS033  DIM       5
EMVIS034  DIM       6
EMVIS035  DIM       2
EMVIS036  DIM       50
EMVIS037  DIM       50
EMVIS038  DIM       50
EMVIS039  DIM       50
EMVIS040  DIM       50
EMVIS041  DIM       3
EMVIS042  DIM       3
EMVIS043  DIM       3
EMVIS044  DIM       3
EMVIS045  DIM       3
EMVIS046  DIM       3
EMVIS047  DIM       3
EMVIS048  DIM       3
EMVIS049  DIM       3
EMVIS050  DIM       3
EMVIS051  DIM       3
EMVIS052  DIM       3
EMVIS053  DIM       3                                       
EMVIS054  DIM       3
EMVIS055  DIM       3
EMVIS056  DIM       3
EMVIS057  DIM       3
EMVIS058  DIM       3
EMVIS059  DIM       3
EMVIS060  DIM       3
EMVIS061  DIM       3
EMVIS062  DIM       3
EMVIS063  DIM       3                                       
EMVIS064  DIM       3
EMVIS065  DIM       3
EMVIS066  DIM       3
EMVIS067  DIM       3
EMVIS068  DIM       3
EMVIS069  DIM       3
EMVIS070  DIM       3
EMVIS071  DIM       11
EMVIS072  DIM       11
EMVIS073  DIM       11
EMVIS074  DIM       11
EMVIS075  DIM       11
EMVIS076  DIM       11
EMVIS077  DIM       11
EMVIS078  DIM       11
EMVIS079  DIM       11
EMVIS080  DIM       11
EMVIS081  DIM       8
EMVIS082  DIM       8
EMVIS083  DIM       8
EMVIS084  DIM       8
EMVIS085  DIM       8
EMVIS086  DIM       8
EMVIS087  DIM       8
EMVIS088  DIM       8
EMVIS089  DIM       8
EMVIS090  DIM       8
EMVIS091  FORM      1
EMVIS092  FORM      1
EMVIS093  FORM      1
EMVIS094  FORM      1
EMVIS095  FORM      1
EMVIS096  FORM      1
EMVIS097  FORM      1
EMVIS098  FORM      1
EMVIS099  FORM      1
EMVIS100  FORM      1
EMVIS101  FORM      6
EMVIS102  FORM      6
EMVIS103  FORM      6
EMVIS104  FORM      6
EMVIS105  FORM      6
EMVIS106  DIM       6
EMVIS107  DIM       6
EMVIS108  DIM       6
EMVIS109  DIM       6
EMVIS110  DIM       6
EMVIS111  DIM       50
EMVIS112  DIM       50
EMVIS113  DIM       1
EMVIS114  FORM      3
EMVIS115  DIM       8
EMVIS116  DIM       3
EMVIS117  DIM       3
EMVIS118  DIM       8
EMVIS119  DIM       9    * procedure code
EMVIS120  DIM       1    * send proc code in extract?
EMVIS121  DIM       9    * diagnosis code
EMVIS122  DIM       1    * primary diagnosis? 
EMVIS123  DIM       1    * send diag code in extract?
EMVIS124  DIM       19   * HF membership no
EMVIS125  DIM       3    * Admission Class
EMVIS126  DIM       3    * Care Class
EMVIS127  DIM       3    * Triage Nurse
EMVIS128  DIM       3    * Triage Date
EMVIS129  DIM       3    * Triage Time
EMVIS130  DIM       3    * Attending Nurse
EMVIS131  DIM       3    * External Location
.
EMVCD001  DIM       8    * Visit Number
EMVCD002  DIM       3    * Coding Type
EMVCD003  DIM       3    * Unique Record No
EMVCD004  DIM       2    * Coding System
EMVCD005  DIM       10   * Main Code
EMVCD006  DIM       3    * Sequencing
EMVCD007  DIM       8    * Date
EMVCD008  DIM       8    * Time
EMVCD009  DIM       3    * User Def Code 1
EMVCD010  DIM       3    * User Def Code 2
EMVCD011  DIM       3    * User Def Code 3
EMVCD012  DIM       3    * User Def Code 4
EMVCD013  DIM       40   * User Def Reference 1
EMVCD014  DIM       40   * User Def Reference 2
EMVCD015  DIM       1    * User Def Y/N 1
EMVCD016  DIM       1    * User Def Y/N 2
EMVCD017  DIM       1    * User Def Y/N 3
EMVCD018  DIM       1    * User Def Y/N 4
EMVCD019  FORM      12.2 * User Def Amount 1
EMVCD020  FORM      12.2 * User Def Amount 2
EMVCD021  FORM      12.2 * User Def Amount 3
EMVCD022  FORM      12.2 * User Def Amount 4
EMVCD023  DIM       8    * User Def Date 1
EMVCD024  DIM       8    * User Def Date 2
EMVCD025  DIM       8    * User Def Date 3
EMVCD026  DIM       8    * User Def Date 4
EMVCD027  DIM       6    * User Def Time 1
EMVCD028  DIM       6    * User Def Time 2
EMVCD029  DIM       6    * User Def Time 3
EMVCD030  DIM       6    * User Def Time 4
EMVCD031  DIM       1    * Extract Flag
EMVCD032  DIM       1    * Delete Flag
EMVCD033  DIM       100  * Free Format Text
.
EXTRACT   DIM       3
EVISFLAG  FORM      1
FCC       FORM      2
FDD       FORM      2
FIELDNO   FORM      3
FILTRESP  DIM       11
FILTSTAT  DIM       1
FILTTYPE  DIM       2
FMM       FORM      2
FORM5     FORM      5
FYY       FORM      2
HELPAGE   FORM      1
HELSIZE   FORM      1
HOUR      DIM       2
HISTTYPE  DIM       5
HTMLLNK2  DIM       127
INJTXT1   DIM       50
INJTXT2   DIM       50
KEY2A     DIM       2
KEY21A    DIM       21
KEY50A    DIM       50
MULTHOSP  DIM       3
MASUPDFL  FORM      1
MIN       DIM       2
MONTH     DIM       3
MONTH2    FORM      2
NATMNINJ  DIM       3
PEXCNT    FORM      3
PRIMARY   DIM       3
PRIMDIM   DIM       127
PRICOUNT  FORM      3
PRAUPDFL  FORM      1
PROCCNT   FORM      3
PTCUPDFL  FORM      1
.
PTMAS001  DIM       4
PTMAS002  DIM       1
PTMAS003  DIM       3
PTMAS004  DIM       1
PTMAS005  DIM       20
PTMAS006  DIM       25
PTMAS007  DIM       19
PTMAS008  DIM       35
PTMAS009  DIM       35
PTMAS010  DIM       35
PTMAS011  DIM       8
PTMAS012  DIM       20
PTMAS013  DIM       20
PTMAS014  DIM       1
PTMAS015  DIM       3
PTMAS016  DIM       11
PTMAS017  DIM       3
PTMAS018  DIM       3
PTMAS019  DIM       3
PTMAS020  DIM       3
PTMAS021  DIM       14
PTMAS022  DIM       10
PTMAS023  DIM       15
PTMAS024  DIM       6
PTMAS025  DIM       10
PTMAS026  DIM       1
PTMAS027  DIM       20
PTMAS028  DIM       1
PTMAS029  DIM       1
PTMAS030  DIM       1
PTMAS031  DIM       3
PTMAS032  DIM       3
PTMAS033  DIM       3
PTMAS034  DIM       30
PTMAS035  DIM       6
PTMAS036  DIM       8
PTMAS037  DIM       19
PTMAS038  DIM       3
PTMAS039  DIM       3
PTMAS040  DIM       3
PTMAS041  DIM       3
PTMAS042  DIM       3
PTMAS043  DIM       3
PTMAS044  DIM       1
PTMAS045  DIM       1
PTMAS046  DIM       1
PTMAS047  DIM       2
PTMAS048  DIM       20
PTMAS049  DIM       35
PTMAS050  DIM       35
PTMAS051  DIM       35
PTMAS052  DIM       8
PTMAS053  DIM       20
PTMAS054  DIM       20
PTMAS055  DIM       10
PTMAS056  DIM       3
PTMAS057  DIM       2
PTMAS058  DIM       6
PTMAS059  DIM       11
PTMAS060  DIM       3
PTMAS061  DIM       35
PTMAS062  DIM       25
PTMAS063  DIM       25
PTMAS064  DIM       15
PTMAS065  DIM       4
PTMAS066  DIM       12
PTMAS067  DIM       12
PTMAS068  DIM       10
PTMAS069  DIM       4.2
PTMAS070  DIM       20
PTMAS081  DIM       2
PTMAS082  DIM       6
PTMAS083  DIM       20
PTMAS084  DIM       20
PTMAS085  DIM       35
PTMAS086  DIM       8 
.
SEENDTIM  DIM       16
TESTDTIM  DIM       16
TESTDATE  DIM       8
TESTTIME  DIM       8
.
SAVDOC    DIM       10
SAVEDOCT  DIM       10
SAVENURS  DIM       10
SAVEDRDT  DIM       8
SAVEDRTM  DIM       6
SAVENRDT  DIM       8
SAVENRTM  DIM       6
SAVKEY17  DIM       17
SCRID     DIM       2 
SEC       DIM       2
SELCDATE  DIM       8
SEQFLAG   FORM      3
STOREFLG  FORM      2
TMPKEY    DIM       9[10]         * record key for procedures
TMPKEY1   DIM       22[11]        * record key for current patients
TMPKEY2   DIM       22[3]         * record key for incomplete patie
TODDATE   FORM      8
TRIDATE   DIM       8
TRITIME   DIM       8
USERDESC  DIM       30
UNKFLAG   FORM      1
VCODE     DIM       5
YEAR2     DIM       2
HISTFLAG  FORM      1
WADCMIND  DIM       1
WRITEFLG  DIM       1
FORM2CNT  FORM      2
EMRHITIM  DIM       8
WORKDATE  DATE      8
SAVEKEY8  DIM       8
SAVEDAT1  DIM       8
.
.--------------------------------------
. Program Constants
.--------------------------------------
ADM       INIT      "&admissno="
CATTY     INIT      "ty"
CATwl     INIT      "wl"
CATYA     INIT      "Ya"
CATYB     INIT      "Yb"
D         INIT      "D"
DELD      INIT      "DD"
I         INIT      "I"
P         INIT      "P"
DI        INIT      "DI"
DU        INIT      "DU"
II        INIT      "II"
IU        INIT      "IU"
ID        INIT      "ID"
PI        INIT      "PI"
PU        INIT      "PU"
PD        INIT      "PD"
WI        INIT      "WI"
WD        INIT      "WD"
WU        INIT      "WU"
DIMN      INIT      "N"
DIMY      INIT      "Y"
ONEDIM    INIT      "1"
UR        INIT      "&urnumber="
URL       DIM       127
SEC1      FORM      "00005"
SP12      INIT      "            "
TWODIM    INIT      "2"
ZEROTWO   INIT      "02"
ZERO3     INIT      "000"
ZERO8     INIT      "00000000"
TILDA14   INIT      "~~~~~~~~~~~~~~"
.
SP100     INIT      "                                   ":
                    "                                   ":
                    "                              "
.
.---------------------------------------------------------------------
PRGID     INIT      "EMRWEB06"
VERSION   INIT      "V12.00.02"
PRGNAM    INIT      "Procedures, Diagnoses and Investigations Server"
.---------------------------------------------------------------------
.
.------------------------------------------------------------
.         Mainline
.------------------------------------------------------------
MAIN0000  CALL      WEBINT00       * Initialise Fifo Etc.
          CALL      INIT0000       * Open Files
.
MAIN1000  CALL      WEBRED00       * Read Fifo WEBPID and USERID
.
          COMPARE   "999",REPORTNO * End Server Process on Report Option 999
          GOTO      MAIN9999 IF EQUAL
.
          MOVE      WBSEESC,KEY3
          CALL      RDEMSIT1
          IF        OVRCD=1
            MOVE      "Emergency Site Invalid",WEBTITLE
            CALL      WEBERR00
            GOTO      MAIN1000
          ENDIF
.
          CALL      GETMAP00
.
          BRANCH    REPORTNO,MAIN1100,MAIN1200,MAIN1300,MAIN1400,MAIN1500:
                             MAIN1600,MAIN1700
.
          PACK      WEBTITLE,PRGID,SP1,VERSION,SP1,PRGNAM,SP70
          MOVE      "INVALID OPTION",WEBTITLE
          CALL      WEBERR00   * Create Output File and Write HTML Page Header
          GOTO      MAIN1000
.
MAIN1100  CALL      PDIP0000            * process templates for display/update
          BRANCH    EXIT,MAIN1000
          CALL      NXTPG000            * redirect/close/go back?
          GOTO      MAIN1000
.
MAIN1200  CALL      EMRVCD00            * Emergency Coding Maintenance 
          BRANCH    EXIT,MAIN1000
          CALL      NXTPG000            * redirect/close/go back?
          GOTO      MAIN1000
.
MAIN1300  CALL      MULT0000            * Posting of Multiple Codes
          BRANCH    EXIT,MAIN1000
          CALL      NXTPG000           
          GOTO      MAIN1000
.
MAIN1400  CALL      CLIN0000
          BRANCH    EXIT,MAIN1000
          CALL      NXTPG000
          GOTO      MAIN1000
.
MAIN1500  CALL      DELY0000            * ED Visit Delay Reasons     
          BRANCH    EXIT,MAIN1000
          CALL      NXTPG000           
          GOTO      MAIN1000
.
MAIN1600  CALL      RESP0000            * Research project maintenance
          BRANCH    EXIT,MAIN1000
          CALL      NXTPG000           
          GOTO      MAIN1000
.
MAIN1700  CALL      OTHC0000            * Other clinical information multiple
          BRANCH    EXIT,MAIN1000
          CALL      NXTPG000           
          GOTO      MAIN1000
.
MAIN9999  MOVE      "SERVER SHUTDOWN COMPLETE",WEBTITLE
          CALL      WEBERR00
          STOP
.------------------------------------------------------------
.         CLIN0000 other clinic information
.------------------------------------------------------------
.
CLIN0000  RESET     UPDATETY
          MATCH     SP1,UPDATETY
          GOTO      CLIN1000 IF EQUAL
.
          MOVE      ZERO,EXIT
.
          MATCH     "U",UPDATETY    * Update formaction
          GOTO      CLIN2000 IF EQUAL
.
          MATCH     "C",UPDATETY
          GOTO      CLIN1000 IF EQUAL
.
          GOTO      CLIN9300
.
CLIN1000  CALL      CLPATMAS
          CALL      CLPMSPX2
.
          PACK      KEY8,URNUMBER,SP70
          CALL      RDMAST1
          IF        OVRCD=0
            MOVE      PURNO,KEY8
            CALL      RDPMPX21
            IF        OVRCD=1
              CALL      CLPMSPX2
            ENDIF
          ENDIF
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMUNK1
          IF        OVRCD=0
            MOVE      ZEROUR,PURNO
            MOVE      EMUNDET1,PSNAME
            MOVE      EMUNDET2,PGNAME
            MOVE      SP70,PTITL
            MOVE      SP70,PBDATE
            MOVE      EMUNAGE,PSAGE
            MOVE      EMUNSEX,PSEX
          ENDIF
.
          PACK      KEY8,ADMISSNO,SP70         
          CALL      RDEMCLI1
          IF        OVRCD=1
            CALL      CLRC0000
          ENDIF
.
          MATCH     "001",TEMPLATE
          IF        @EQUAL
            PACK      KEY8,ADMISSNO,SP70
            CALL      RDEMVIS1
            BRANCH    OVRCD,CLIN9200
.
            COMPARE   FOUR,EMVISTAT
            GOTO      CLIN9500 IF EQUAL
          ENDIF
.          
          MOVE      "Emergency Coding Maintenance",WEBTITLE
          CALL      WEBHED00   * Create Output File and Write HTML Page Header
          BRANCH    EXIT,CLIN9999
.
          CALL      WEBBOD00   * Process Web Body
.
          CALL      WEBEND00   * Process End of HTML File
.
          MOVE      ONE,EXIT
.
          GOTO      CLIN9999

.
CLIN2000  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMCLI1
          IF        OVRCD=1
            CALL      CLRC0000     * Clear all the file variables
            CALL      UPAR0000
            PACK      EMCIVISN,ADMISSNO,SP70
            CALL      IBACLOCK
            REP       " 0",XDATE
            PACK      EMCIRCDT,XDATE
            PACK      EMCITRCD,CTIMEIS
            PACK      EMCIUWCR,WEBUSERI
            CALL      WREMCLI1
          ELSE
            CALL      UPAR0000
            CALL      IBACLOCK
            REP       " 0",XDATE
            PACK      EMCIRUDT,XDATE
            PACK      EMCITRUP,CTIMEIS
            PACK      EMCIUUPD,WEBUSERI
            CALL      UPEMCLI1         
          ENDIF
.
          MOVE      "Emergency Coding Maintenance",WEBTITLE
          CALL      WEBHED00   * Create Output File and Write HTML Page Header
          BRANCH    EXIT,CLIN9999
.
          CALL      WEBBOD00   * Process Web Body
.
          CALL      WEBEND00   * Process End of HTML File
.
          MOVE      ONE,EXIT
          GOTO      CLIN9999
.
CLIN9100  MOVE      "Emergency Coding record does not exist",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CLIN9999
.
CLIN9200  MOVE      "Invalid Admission Number.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CLIN9999
.
CLIN9300  MOVE      "Invalid Form Action.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CLIN9999
.
CLIN9400  MOVE      "Invalid U/R Number",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CLIN9999
.
CLIN9500  MOVE      "Emergency Visit has been cancelled.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CLIN9999
.
CLIN9999  RETURN
+
.------------------------------------------------------------
.  Next Page                               Called by MAIN0000
.------------------------------------------------------------
NXTPG000  IF        NEXTPAGE=0
            CALL      WINCLS00              * Refresh parent and close window
          ENDIF
.
          IF        NEXTPAGE=1
            PACK      REDIRECT,REDIRECT,CHKINJUR,INJ
            SQUEEZE   REDIRECT
            CALL      RDIREC00            * redirect page to REDIRECT
          ENDIF
.
          IF        NEXTPAGE=2
              CALL      GOBACK00            * go back one page
          ENDIF
.
          IF        NEXTPAGE=3
            REP       " +",ADMISSNO
            REP       " +",URNUMBER
            PACK      REDIRECT,REDIRECT,ADM,ADMISSNO,UR,URNUMBER,SP70
            SQUEEZE   REDIRECT
            REP       "+ ",ADMISSNO
            REP       "+ ",URNUMBER
            CALL      RDIREC00              * redirect 
          ENDIF
.
          IF        NEXTPAGE=4
            CALL     POPUP000
          ENDIF
.
          IF        NEXTPAGE=5
            CALL      CLOSE000
          ENDIF
.
          IF        NEXTPAGE=6
            CALL      PREDIR00 
          ENDIF
.
          IF        NEXTPAGE=7
            CALL      PREDR200
          ENDIF
.
NXTPG999  RETURN
.
.------------------------------------------------------------------------------
.  Redirect Parent URL
.------------------------------------------------------------------------------
PREDR200  CALL      OPENHTML
          BRANCH    EXIT,PREDR290
.
          PACK      REDIRECT,REDIRECT,CHKINJUR,INJ
          SQUEEZE   REDIRECT
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
.                             " alert(#"",WEBTITLE,"#");":
                             " parent.location.href=#"",REDIRECT,"#";":
                             "}":
                             "</script>"
          CALL      CLOSHTML
.
          GOTO      PREDR299
.
PREDR290  DISPLAY   "*** Fifo Not Found ***"
.
PREDR299  RETURN
.------------------------------------------------------------------------------
.  Redirect Parent URL
.------------------------------------------------------------------------------
PREDIR00  CALL      OPENHTML
          BRANCH    EXIT,PREDIR90
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
.                             " alert(#"",WEBTITLE,"#");":
                             " parent.location.href=#"",REDIRECT,"#";":
                             "}":
                             "</script>"
          CALL      CLOSHTML
.
          GOTO      PREDIR99
.
PREDIR90  DISPLAY   "*** Fifo Not Found ***"
.
PREDIR99  RETURN
.------------------------------------------------------------
.         POPUP000  Close window and pop up new window
.------------------------------------------------------------
POPUP000  CALL      CHKDG000
          BRANCH    EXIT,POPUP100,POPUP200
.
POPUP100  CALL      OPENHTML
          BRANCH    EXIT,POPUP999
          REP       " +",URNUMBER
          REP       " +",ADMISSNO
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                             "    linkURL=#"",REDIRECT,"&admissno=":
                             ADMISSNO,"&urnumber=",URNUMBER,"#";":
         "opener.parent.document.getElementById('PopUpScreen').style.display=":
                             "#"none#";":
                             "opener.parent.location.href=linkURL;":
                             "self.close();":
                             "}":
                             "</script>"
          CALL      CLOSHTML
          REP       "+ ",URNUMBER
          REP       "+ ",ADMISSNO
          GOTO      POPUP999
.
POPUP200  CALL      CLOSE000
          GOTO      POPUP999
.
POPUP999  RETURN
.------------------------------------------------------------
. Refresh Parent and Close Window
.------------------------------------------------------------
CLOSE000  CALL      OPENHTML
          BRANCH    EXIT,CLOSE999
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
        " opener.parent.document.getElementById('PopUpScreen').style.display=":
                             "    #"none#";":
                             "    opener.parent.location.reload();":
                             "    self.close();":
                             "}":
                             "</script>"
          CALL      CLOSHTML
CLOSE999  RETURN
.------------------------------------------------------------
. Process Template Fields                  Called by WEBBOD00
.------------------------------------------------------------
PROFLD00  BRANCH    REPORTNO,PROFLD10,PROFLD20,PROFLD20,PROFLD40,PROFLD50:
                             PROFLD60,PROFLD70
          GOTO      PROFLD99
.
PROFLD10  BRANCH    FLDSETNO,PROFLD11,PROFLD12,PROFLD13,PROFLD14,PROFLD15:
                    PROFLD16,PROFLD17,PROFLD18
          GOTO      PROFLD99
.
PROFLD11  MOVE      EMVIADMN,ADMISSNO 
          CALL      MASF0000             * master file fields
          GOTO      PROFLD99
.
PROFLD12  CALL      EMRA0000             * emrvisaf/emrunkaf/emrvpraf/emrvdgaf
          GOTO      PROFLD99
.
PROFLD13  CALL      EMRB0000             * emrvisaf user defined fields
          GOTO      PROFLD99
.
PROFLD14  CALL      PROTAB00                * Procedure Table
          GOTO      PROFLD99
.
PROFLD15  CALL      DIATAB00                * Diagnosis Table
          GOTO      PROFLD99
.
PROFLD16  CALL      INVF0000                * Investigation fields
          GOTO      PROFLD99
.
PROFLD17  CALL      VPRF0000                * procedure fields
          GOTO      PROFLD99
.
PROFLD18  CALL      VDGF0000                * diagnosis fields
          GOTO      PROFLD99
.
PROFLD20  BRANCH    FLDSETNO,PROFLD21,PROFLD22,PROFLD23,PROFLD24
          GOTO      PROFLD99
.
PROFLD21  CALL      MASF0000                * Patient Master Details
          GOTO      PROFLD99
.
PROFLD22  CALL      EVCD0000                * Coding fields 
          GOTO      PROFLD99
.
PROFLD23  CALL      EMRA0000
          GOTO      PROFLD99                * Emergency Details
.
PROFLD24  CALL      EMRB0000
          GOTO      PROFLD99
.
PROFLD40  BRANCH    FLDSETNO,PROFLD41,PROFLD42
          GOTO      PROFLD99
.
PROFLD41  CALL      MASF0000 
          GOTO      PROFLD99
.
PROFLD42  CALL      EMRC0000
          GOTO      PROFLD99
.
PROFLD50  BRANCH    FLDSETNO,PROFLD51,PROFLD52,PROFLD53,PROFLD54
          GOTO      PROFLD99
.
PROFLD51  CALL      MASF0000
          GOTO      PROFLD99
.
PROFLD52  CALL      EMDE0000
          GOTO      PROFLD99
.
PROFLD53  CALL      EMRA0000
          GOTO      PROFLD99                * Emergency Details
.
PROFLD54  CALL      EMRB0000
          GOTO      PROFLD99
.
PROFLD60  BRANCH    FLDSETNO,PROFLD61,PROFLD62,PROFLD63,PROFLD64
          GOTO      PROFLD99
.
PROFLD61  CALL      EMRE0000
          GOTO      PROFLD99
.
PROFLD62  CALL      GTAG0000
          GOTO      PROFLD99
.
PROFLD63  CALL      EMRS0000
          GOTO      PROFLD99
.
PROFLD64  CALL      EMRV0000
          GOTO      PROFLD99
.
PROFLD70  BRANCH    FLDSETNO,PROFLD71,PROFLD72,PROFLD73
          GOTO      PROFLD99
.
PROFLD71  CALL      MASF0000
          GOTO      PROFLD99
.
PROFLD72  CALL      EMOC0000
          GOTO      PROFLD99
.
PROFLD73  CALL      GTAG0000
          GOTO      PROFLD99
.
PROFLD99  RETURN
.------------------------------------------------------------
. Open Files and Initialize Variables      Called by MAIN0000
.------------------------------------------------------------
INIT0000  OPEN      AAEDTRE1,"aaedtref"
          OPEN      ALLTMPA1,"alltmpaf" 
.
          OPEN      EMRDELA1,"emrdelaf"
          OPEN      EMROCIA1,"emrociaf"
          OPEN      EMRPROA1,"emrproaf"
          OPEN      EMRDCMA1,"emrdcmaf"
          OPEN      EMRMTXA3,"emrmtxaf"
          OPEN      EMRHISA1,"emrhisaf"
          OPEN      EMRHISA2,"emrhisaf"
          OPEN      EMRINVA1,"emrinvaf"
          OPEN      EMRRESA1,"emrresaf"
          OPEN      EMRRSLA1,"emrrslaf"
          OPEN      EMRRVSA1,"emrrvsaf"
          OPEN      EMRUNKA1,"emrunkaf"
          OPEN      EMRUTYA1,"emrutyaf"
          OPEN      EMRLOCA1,"emrlocaf"
          OPEN      EMRSITA1,"emrsitaf"
          OPEN      EMRVDGA1,"emrvdgaf"
          OPEN      EMRDOCA1,"emrdocaf"
          OPEN      EMRVISA1,"emrvisaf"
          OPEN      EMRVISA2,"emrvisaf"
          OPEN      EMRVISA3,"emrvisaf"
.
          OPEN      EMRVCDA1,"emrvcdaf"
          OPEN      EMRVCDA2,"emrvcdaf"
.
          OPEN      EMRVPRA1,"emrvpraf"
          OPEN      PATHSPA1,"pathspaf"
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
          OPEN      PATCODE1,"patcodes"
          OPEN      PATCODE2,"patcodes"
          OPEN      PATFN1A1,"patfn1af"
          OPEN      PATITEM1,"patitemn"
          OPEN      PATMCHG1,"patmchgf"
          OPEN      PATMCHG4,"patmchgf"
          OPEN      PRIITEM1,"priitemf"
          OPEN      PATVISA1,"patvisaf"
          OPEN      PATVISA2,"patvisaf"
          OPEN      PATVISA4,"patvisaf"
          OPEN      IHAPASS1,"ihapassf"
          OPEN      IBACODE1,"ibacodef"
          OPEN      MRTMASA2,"mrtmasaf"
          OPEN      PATDSCH1,"patdschf"
          OPEN      PMSADWA1,"pmsadwaf"
          OPEN      PMSCCDA1,"pmsccdaf"
          OPEN      PMSHCPA1,"pmshcpaf"
          OPEN      PMSHCPA4,"pmshcpaf"
          OPEN      PMSBRQA1,"pmsbrqaf"
          OPEN      PMSBRQA2,"pmsbrqaf"
          OPEN      PMSMTIA2,"pmsmtiaf"
          OPEN      EMRCLIA1,"emrcliaf"
          OPEN      OUTPHOA1,"outphoaf"
          OPEN      PATMI1A8,"patmi1af"
          OPEN      VISMDTA1,"vismdtaf"
          OPEN      WEBSECA7,"websecaf"
.
          OPEN      CONTROLF,"controlf"
..          READ      CONTROLF,EIGHTY;*1,HLBMDGUP,HLBMDGUA,HLBMDGMU:
..                                       HLBMDGUU:
..                                  *105,HLBMDGAD,HLBMDGDS,HLBMDGTR:
..                                       HLBMDGRG
          READ      CONTROLF,TEN;*196,CGENRUR,*211,CAUDK,*213,CAUDM:
                                 *244,CHOSPNUM
          READ      CONTROLF,TEN3;*188,CMABINS,*194,CVETINS
          READ      CONTROLF,TEN8;*246,CMAXAGE
          READ      CONTROLF,TEN9;*208,CPMIAD,*209,CSRESP
          READ      CONTROLF,TWENTY;*14,PTPCLRES
          READ      CONTROLF,TWENTY2;*53,STCNPEMR
          READ      CONTROLF,THIRTY;*89,HELPAGE,HELPRNT,HELSIZE,HEPMR5:
                                    *187,HEMR5COD,*195,HINPCLM:
                                    *197,AEALERT
          READ      CONTROLF,EIGHTY9;*27,EMCNSCRN,*28,EMCNCAP1,*41,EMCNCAP2:
                                     *54,EMCNCAP3,*67,EMCNCAP4,*80,EMCNCAP5:
                                     *93,EMCNTIME,*98,EMCNMAXP,*100,EMCNMAXD:
                                     *106,EMCNUDFC,*108,EMCNUDDA,*110,EMCNUDTA:
                                     *112,EMCNUDFD,*114,EMCNUDFE:
                                     *116,EMCNUDFF,*118,EMCNUDFG,*122,EMCNUDXA:
                                     *138,EMCNICDF,*139,EMCNPCIE,*232,EMCNDEDI:
                                     *235,EMCNLDIA
          READ      CONTROLF,EIGHTY8;*59,PTCNI10D
          READ      CONTROLF,EIGHTY;*250,PTCNHDPS     * state parameter
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          READ      CONTROLF,HUND03;*214,PTCNHHFT,*215,PTCNHCLM
          READ      CONTROLF,HUND22;*12,EMCNPBSD
          READ      CONTROLF,HUND25;*93,PTCNNSSI
.
          IF        IBCNMHOS=1
            OPEN      MLTCODA1,"mltcodaf"
            OPEN      MLTCODA2,"mltcodaf"
          ENDIF
.
          PACK      DIM8,CCC,CYY,CMM,CDD
          REP       " 0",DIM8
          MATCH     PTCNI10D,DIM8
          IF        !@LESS
              MOVE      ONE,EMICFLAG       * Using ICD10
          ELSE
              MOVE      ZERO,EMICFLAG      * Using ICD9
          ENDIF
.
.******************************************** start of changes         *I-63036
....      OPEN      PATICDO1,"paticdof"
....      OPEN      PATICDD1,"paticddf"
....      OPEN      PATI10O1,"pati10of"
....      OPEN      PATI10D1,"pati10df"
          CALL      OPICD1                  * Open ICD10 V1-4 Dis file
          CALL      OPICO1                  * Open ICD10 V1-4 Op files
.********************************************   end of changes         *I-63036
.
          OPEN      EMRICDA1,"emricdaf"
.
          MOVE      ZERO,COUNTER            * Initalize
.
          CALL      INTMAS00                * from PATMASTM
.
INIT9999  RETURN
.------------------------------------------------------------
. Clear Parameters                         Called by WEBRED00
.------------------------------------------------------------
CLRPAR00  MOVE      SP70,REPORTNO
          MOVE      SP70,TEMPLATE
          MOVE      ZERO,CLEARALL
          MOVE      SP70,ADMISSNO
          MOVE      SP70,URNUMBER
          MOVE      SP70,DOCTCODE
          MOVE      SP70,FORMACTN 
          MOVE      SP70,PRIMDIAG
          MOVE      SP70,LOCKTYPE
          MOVE      SP70,UPDATEKY
          MOVE      SP70,WEBUSERI
          MOVE      SP70,UPDATETY
          MOVE      SP70,USERDESC
          MOVE      SP70,RECORDKY
          MOVE      ZERO,NEXTPAGE
          MOVE      ZERO,MASTFLAG
          MOVE      ZERO,EMVISFLG
          MOVE      ZERO,STOREFLG
          MOVE      ZERO,CHGFLAG
          MOVE      SP70,PATFNAME
          MOVE      SP256,PASSWORD
          MOVE      SP256,USERNAME
          PACK      REDIRECT,SP70,SP70,SP70,SP70
          PACK      WEBTITLE,SP70,SP70
          MOVE      SP70,FILTSTAT
          MOVE      SP70,FILTTYPE
          MOVE      SP70,FILTRESP
.
          MOVE      SP70,EMUTY001
          MOVE      Z70,PTMAS001
          MOVE      Z70,PTMAS002
          MOVE      Z70,PTMAS003
          MOVE      Z70,PTMAS004
          MOVE      Z70,PTMAS005
          MOVE      Z70,PTMAS006
          MOVE      Z70,PTMAS007
          MOVE      Z70,PTMAS008
          MOVE      Z70,PTMAS009
          MOVE      Z70,PTMAS010
          MOVE      Z70,PTMAS011
          MOVE      Z70,PTMAS012
          MOVE      Z70,PTMAS013
          MOVE      Z70,PTMAS014
          MOVE      Z70,PTMAS015
          MOVE      Z70,PTMAS016
          MOVE      Z70,PTMAS017
          MOVE      Z70,PTMAS018
          MOVE      Z70,PTMAS019
          MOVE      Z70,PTMAS020
          MOVE      Z70,PTMAS021
          MOVE      Z70,PTMAS022
          MOVE      Z70,PTMAS023
          MOVE      Z70,PTMAS024
          MOVE      Z70,PTMAS025
          MOVE      Z70,PTMAS026
          MOVE      Z70,PTMAS027
          MOVE      Z70,PTMAS028
          MOVE      Z70,PTMAS029
          MOVE      Z70,PTMAS030
          MOVE      Z70,PTMAS031
          MOVE      Z70,PTMAS032
          MOVE      Z70,PTMAS033
          MOVE      Z70,PTMAS034
          MOVE      Z70,PTMAS035
          MOVE      Z70,PTMAS036
          MOVE      Z70,PTMAS037
          MOVE      Z70,PTMAS038
          MOVE      Z70,PTMAS039
          MOVE      Z70,PTMAS040
          MOVE      Z70,PTMAS041
          MOVE      Z70,PTMAS042
          MOVE      Z70,PTMAS043
          MOVE      Z70,PTMAS044
          MOVE      Z70,PTMAS045
          MOVE      Z70,PTMAS046
          MOVE      Z70,PTMAS047
          MOVE      Z70,PTMAS048
          MOVE      Z70,PTMAS049
          MOVE      Z70,PTMAS050
          MOVE      Z70,PTMAS051
          MOVE      Z70,PTMAS052
          MOVE      Z70,PTMAS053
          MOVE      Z70,PTMAS054
          MOVE      Z70,PTMAS055
          MOVE      Z70,PTMAS056
          MOVE      Z70,PTMAS057
          MOVE      Z70,PTMAS058
          MOVE      Z70,PTMAS059
          MOVE      Z70,PTMAS060
          MOVE      Z70,PTMAS061
          MOVE      Z70,PTMAS062
          MOVE      Z70,PTMAS063
          MOVE      Z70,PTMAS064
          MOVE      Z70,PTMAS065
          MOVE      Z70,PTMAS066
          MOVE      Z70,PTMAS067
          MOVE      Z70,PTMAS068
          MOVE      Z70,PTMAS069
          MOVE      Z70,PTMAS070
          MOVE      Z70,PTMAS081
          MOVE      Z70,PTMAS082
          MOVE      Z70,PTMAS083
          MOVE      Z70,PTMAS084
.
          MOVE      Z70,EMVIS001
          MOVE      Z70,EMVIS002
          MOVE      Z70,EMVIS003
          MOVE      Z70,EMVIS004
          MOVE      Z70,EMVIS005
          MOVE      Z70,EMVIS006
          MOVE      Z70,EMVIS007
          MOVE      Z70,EMVIS008
          MOVE      Z70,EMVIS009
          MOVE      Z70,EMVIS010
          MOVE      Z70,EMVIS011
          MOVE      Z70,EMVIS012
          MOVE      Z70,EMVIS013
          MOVE      Z70,EMVIS014
          MOVE      Z70,EMVIS015
          MOVE      Z70,EMVIS016
          MOVE      Z70,EMVIS017
          MOVE      Z70,EMVIS018
          MOVE      Z70,EMVIS019
          MOVE      Z70,EMVIS020
          MOVE      Z70,EMVIS021
          MOVE      Z70,EMVIS022
          MOVE      Z70,EMVIS023
          MOVE      Z70,EMVIS024
          MOVE      Z70,EMVIS025
          MOVE      Z70,EMVIS026
          MOVE      Z70,EMVIS027
          MOVE      Z70,EMVIS028
          MOVE      Z70,EMVIS029
          MOVE      Z70,EMVIS030
          MOVE      Z70,EMVIS031
          MOVE      Z70,EMVIS032
          MOVE      Z70,EMVIS033
          MOVE      Z70,EMVIS034
          MOVE      Z70,EMVIS035
          MOVE      Z70,EMVIS036
          MOVE      Z70,EMVIS037
          MOVE      Z70,EMVIS038
          MOVE      Z70,EMVIS039
          MOVE      Z70,EMVIS040
          MOVE      Z70,EMVIS041
          MOVE      Z70,EMVIS042
          MOVE      Z70,EMVIS043
          MOVE      Z70,EMVIS044
          MOVE      Z70,EMVIS045
          MOVE      Z70,EMVIS046
          MOVE      Z70,EMVIS047
          MOVE      Z70,EMVIS048
          MOVE      Z70,EMVIS049
          MOVE      Z70,EMVIS050
          MOVE      Z70,EMVIS051
          MOVE      Z70,EMVIS052
          MOVE      Z70,EMVIS053
          MOVE      Z70,EMVIS054
          MOVE      Z70,EMVIS055
          MOVE      Z70,EMVIS056
          MOVE      Z70,EMVIS057
          MOVE      Z70,EMVIS058
          MOVE      Z70,EMVIS059
          MOVE      Z70,EMVIS060
          MOVE      Z70,EMVIS061
          MOVE      Z70,EMVIS062
          MOVE      Z70,EMVIS063
          MOVE      Z70,EMVIS064
          MOVE      Z70,EMVIS065
          MOVE      Z70,EMVIS066
          MOVE      Z70,EMVIS067
          MOVE      Z70,EMVIS068
          MOVE      Z70,EMVIS069
          MOVE      Z70,EMVIS070
          MOVE      Z70,EMVIS071
          MOVE      Z70,EMVIS072
          MOVE      Z70,EMVIS073
          MOVE      Z70,EMVIS074
          MOVE      Z70,EMVIS075
          MOVE      Z70,EMVIS076
          MOVE      Z70,EMVIS077
          MOVE      Z70,EMVIS078
          MOVE      Z70,EMVIS079
          MOVE      Z70,EMVIS080
          MOVE      Z70,EMVIS081
          MOVE      Z70,EMVIS082
          MOVE      Z70,EMVIS083
          MOVE      Z70,EMVIS084
          MOVE      Z70,EMVIS085
          MOVE      Z70,EMVIS086
          MOVE      Z70,EMVIS087
          MOVE      Z70,EMVIS088
          MOVE      Z70,EMVIS089
          MOVE      Z70,EMVIS090
          MOVE      ZERO,EMVIS091
          MOVE      ZERO,EMVIS092
          MOVE      ZERO,EMVIS093
          MOVE      ZERO,EMVIS094
          MOVE      ZERO,EMVIS095
          MOVE      ZERO,EMVIS096
          MOVE      ZERO,EMVIS097
          MOVE      ZERO,EMVIS098
          MOVE      ZERO,EMVIS099
          MOVE      ZERO,EMVIS100
          MOVE      ZERO,EMVIS101
          MOVE      ZERO,EMVIS102
          MOVE      ZERO,EMVIS103
          MOVE      ZERO,EMVIS104
          MOVE      ZERO,EMVIS105
          MOVE      Z70,EMVIS106
          MOVE      Z70,EMVIS107
          MOVE      Z70,EMVIS108
          MOVE      Z70,EMVIS109
          MOVE      Z70,EMVIS110
          MOVE      Z70,EMVIS111
          MOVE      Z70,EMVIS112
          MOVE      Z70,EMVIS113
          MOVE      ZERO,EMVIS114
          MOVE      Z70,EMVIS115
          MOVE      Z70,EMVIS116
          MOVE      Z70,EMVIS117
          MOVE      Z70,EMVIS118
          MOVE      Z70,EMVIS119
          MOVE      Z70,EMVIS120
          MOVE      Z70,EMVIS121
          MOVE      Z70,EMVIS122
          MOVE      Z70,EMVIS123
          MOVE      Z70,EMVIS124
          MOVE      Z70,EMVIS125
          MOVE      Z70,EMVIS126
          MOVE      Z70,EMVIS127
          MOVE      Z70,EMVIS128
          MOVE      Z70,EMVIS129
          MOVE      Z70,EMVIS130
          MOVE      Z70,EMVIS131 
.
          MOVE      Z70,EMINV001
          MOVE      Z70,EMINV002
          MOVE      Z70,EMINV003
          MOVE      Z70,EMINV004
          MOVE      Z70,EMINV005
          MOVE      Z70,EMINV006
          MOVE      Z70,EMINV007
          MOVE      Z70,EMINV008
          MOVE      Z70,EMINV009
          MOVE      Z70,EMINV010
          MOVE      Z70,EMINV011
          MOVE      Z70,EMINV012
          MOVE      Z70,EMINV013
          MOVE      Z70,EMINV014
          MOVE      Z70,EMINV015
          MOVE      Z70,EMINV016
          MOVE      Z70,EMINV017
          MOVE      Z70,EMINV018
          MOVE      ZERO,EMINV019
          MOVE      ZERO,EMINV020
          MOVE      Z70,EMINV021
          MOVE      Z70,EMINV022
          MOVE      Z70,EMINV023
          MOVE      Z70,EMINV024
.
          MOVE      Z70,EMVPR001
          MOVE      Z70,EMVPR002
          MOVE      Z70,EMVDG001
          MOVE      Z70,EMVDG002
          MOVE      Z70,EMVDG003

          MOVE      SP70,EMVCD001
          MOVE      SP70,EMVCD002
          MOVE      SP70,EMVCD003
          MOVE      SP70,EMVCD004
          MOVE      SP70,EMVCD005
          MOVE      SP70,EMVCD006
          MOVE      SP70,EMVCD007
          MOVE      SP70,EMVCD008
          MOVE      SP70,EMVCD009
          MOVE      SP70,EMVCD010
          MOVE      SP70,EMVCD011
          MOVE      SP70,EMVCD012
          MOVE      SP70,EMVCD013
          MOVE      SP70,EMVCD014
          MOVE      SP70,EMVCD015
          MOVE      SP70,EMVCD016
          MOVE      SP70,EMVCD017
          MOVE      SP70,EMVCD018
          MOVE      ZERO,EMVCD019
          MOVE      ZERO,EMVCD020
          MOVE      ZERO,EMVCD021
          MOVE      ZERO,EMVCD022
          MOVE      SP70,EMVCD023
          MOVE      SP70,EMVCD024
          MOVE      SP70,EMVCD025
          MOVE      SP70,EMVCD026
          MOVE      SP70,EMVCD027
          MOVE      SP70,EMVCD028
          MOVE      SP70,EMVCD029
          MOVE      SP70,EMVCD030
          MOVE      SP70,EMVCD031
          MOVE      ZERO,EMVCD032
          PACK      EMVCD033,SP70,SP70
          MOVE      SP70,HISTTYPE
          MOVE      ZERO,HISTFLAG
          MOVE      SP70,WADCMIND
.
          CALL      CPAR0000  *move Z70 to all cgi variables
.
          CALL      CLPRC000
          CALL      CPEMDE00
          CALL      CPEMOC00
          CALL      CPEMRE00
          CALL      CPEMRS00
          CALL      CPEMRV00
.
          MOVE      ZERO,ECKEYEND
          CALL      CLEUDC00
.
CLRPAR99  RETURN
+
.------------------------------------------------------------
. Set Parameters                           Called by WEBRED00
.------------------------------------------------------------
SETPAR00  MATCH     "reportno=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,REPORTNO
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "template=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,TEMPLATE
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "clearall=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,CLEARALL
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "admissno=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,ADMISSNO
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "urnumber=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,URNUMBER
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "updatety=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,UPDATETY
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "updateky=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,UPDATEKY
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "webuseri=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,WEBUSERI
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "locktype=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,LOCKTYPE
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "recordky=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,RECORDKY
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "nextpage=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,NEXTPAGE
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "redirect=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,REDIRECT
            SQUEEZE   REDIRECT
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "username=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,USERNAME
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "password=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PASSWORD
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emuty001=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,EMUTY001
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emvis",QRYNAME
          IF        @EQUAL
            CALL      EMVIS000
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "eminv",QRYNAME
          IF        @EQUAL
            CALL      EMINV000
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emvpr",QRYNAME
          IF        @EQUAL
            CALL      EMVPR000
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emvdg",QRYNAME
          IF        @EQUAL
            CALL      EMVDG000
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "ptmas",QRYNAME
          IF        @EQUAL
            CALL      SPMAS000
            COMPARE   ZERO,EXIT
            GOTO      SETPAR99 IF EQUAL
          ENDIF
.
          MATCH     "chckname=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,CHCKNAME
            GOTO      SETPAR99 
          ENDIF
.
          MATCH     "doctcode=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,DOCTCODE
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emvcd",QRYNAME
          IF        @EQUAL
            CALL      EMVCD000
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emrprocs=",QRYNAME
          IF        @EQUAL
            ADD       ONE,PROCCNT
            MOVE      QRYDATA,EMRPROCS[PROCCNT]
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "filtstat=",QRYNAME
          IF        @EQUAL
            PACK      FILTSTAT,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "filtresp=",QRYNAME
          IF        @EQUAL
            PACK      FILTRESP,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "primdiag=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,PRIMDIAG
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emrcl",QRYNAME
          IF        @EQUAL
            CALL      SPAR0000
            GOTO      SETPAR99
          ENDIF 
.
          MATCH     "emdel",QRYNAME
          IF        @EQUAL
            CALL      SPEMDE00
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emres",QRYNAME
          IF        @EQUAL
            CALL      SPEMRE00
            GOTO      SETPAR99
          ENDIF 
.
          MATCH     "emrsl",QRYNAME
          IF        @EQUAL
            CALL      SPEMRS00
            GOTO      SETPAR99
          ENDIF 
.
          MATCH     "filttype=",QRYNAME
          IF        @EQUAL
            PACK      FILTTYPE,QRYDATA,SP70
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "emrvs",QRYNAME
          IF        @EQUAL
            CALL      SPEMRV00
            GOTO      SETPAR99
          ENDIF 
.
          MATCH     "emoci",QRYNAME
          IF        @EQUAL
            CALL      SPEMC000
            GOTO      SETPAR99
          ENDIF 
.
          MATCH     "wadcmind=",QRYNAME
          IF        @EQUAL
            MOVE      QRYDATA,WADCMIND
            GOTO      SETPAR99
          ENDIF
.
          MATCH     "evcrdb",QRYNAME
          IF        @EQUAL
            COMPARE   "99",ECKEYEND
            IF        @LESS | @EQUAL
              ADD       ONE,ECKEYEND
              PACK      ECRECKEY[ECKEYEND],QRYDATA,SP70
            ENDIF
            GOTO      SETPAR99
          ENDIF
.
SETPAR99  RETURN
.------------------------------------------------------------
.         PROTAB00  Procedure Table        Called by PROFLD00
.------------------------------------------------------------
PROTAB00  WRITE     HTMLFILE;"<tr><td align=left><b>Code</td>":
                                 "<td align=left><b>Procedure</td>":
                                 "<td align=left><b>Extract</td>":
                                 "</tr>"
.
          PACK      KEY17,ADMISSNO,Z70
          CALL      RSEMVPR1
PROTAB10  CALL      RPEMVPR1
          BRANCH    OVRCD,PROTAB99
. 
          MOVE      ADMISSNO,DIM8VISN
          MATCH     DIM8VISN,EMVPADMN
          GOTO      PROTAB99 IF NOT EQUAL
.
          MOVE      "Unknown procedure",EMPRDESC
          PACK      KEY9,EMVPCODE,SP70
          CALL      RDEMPRO1
.
          REP       " +",URNUMBER
          REP       " +",ADMISSNO
.
          MOVE      "Yes",EXTRACT
          MATCH     EMVPSEND,DIMN
          IF        @EQUAL
            MOVE      "No",EXTRACT
          ENDIF  
.
          WRITE     HTMLFILE;"<tr><td nowrap>":
                             "<A HREF='javascript:ShowDetail(emrweb06#.pbl?":
                             "reportno=1&template=2&admissno=",EMVPADMN:
                             "&emvpr001=",EMPRCODE,"'>":
                             "<img src=../images/MaintenanceIcon.gif hspace=4":
                             " border=0 align=absmiddle></a>":
                             EMPRCODE,"</td>":
                             "<td nowrap >":
                             EMPRDESC,"</td>":
                             "<td nowrap >":
                             EXTRACT,"</td>":
                             "</tr>" 
.
          REP       "+ ",URNUMBER
          REP       "+ ",ADMISSNO
.
          GOTO      PROTAB10
.
PROTAB99  RETURN
.------------------------------------------------------------------------------
.         PEXCNT00  Count number of extracted procedures     Called by PROTAB00
.------------------------------------------------------------------------------
PEXCNT00  PACK      KEY17,ADMISSNO,Z70
          CALL      RSEMVPR1
PEXCNT10  CALL      RPEMVPR1
          BRANCH    OVRCD,PEXCNT99
.
          MOVE      ADMISSNO,DIM8VISN
          MATCH     DIM8VISN,EMVPADMN
          GOTO      PEXCNT99 IF NOT EQUAL
.
          MATCH     DIMY,EMVPSEND
          IF        @EQUAL
            ADD       ONE,PEXCNT
          ENDIF
          GOTO      PEXCNT10 
.
PEXCNT99  RETURN
.------------------------------------------------------------
.         DEXCNT00  Count number of extracted diagnoses and primary diagnoses
.         Called by DIATAB00
.------------------------------------------------------------
DEXCNT00  PACK      KEY17,ADMISSNO,Z70
          CALL      RSEMVDG1
DEXCNT10  CALL      RPEMVDG1
          BRANCH    OVRCD,DEXCNT99
.
          MOVE      ADMISSNO,DIM8VISN
          MATCH     DIM8VISN,EMVDADMN
          GOTO      DEXCNT99 IF NOT EQUAL
.
          MATCH     DIMY,EMVDSEND
          IF        @EQUAL
            ADD       ONE,DEXCNT
          ENDIF
.
          MATCH     DIMY,EMVDPRIM
          IF        @EQUAL
            ADD       ONE,PRICOUNT
          ENDIF
.
          GOTO      DEXCNT10
.
DEXCNT99  RETURN                                            
.------------------------------------------------------------
.         DIATAB00  Diagnosis Table        Called by PROFLD00
.------------------------------------------------------------
DIATAB00  WRITE     HTMLFILE;"<tr><td align=left><b>Code</td>":
                                 "<td align=left><b>Diagnosis</td>":
                                 "<td align=left><b>Primary</td>":
                                 "<td align=left><b>Extract</td>":
                                 "</tr>"
.
          PACK      KEY17,ADMISSNO,Z70
          CALL      RSEMVDG1
DIATAB10  CALL      RPEMVDG1              * read visit diagnosis file
          BRANCH    OVRCD,DIATAB99        * no diagnoses on file
. 
          MOVE      ADMISSNO,DIM8VISN
          MATCH     DIM8VISN,EMVDADMN
          GOTO      DIATAB99 IF NOT EQUAL * no diagnoses match this patient
.
          PACK      KEY9,EMVDCODE,SP70
          IF        EMCNICDF=1
            MOVE      "Unknown diagnosis",EMICDESC
            IF        EMICFLAG=1
              CALL      RDEMICD3              * using ICD10
              MOVE      EMICDESC,DIM40
            ELSE
              CALL      RDEMICD1              * using ICD9
              MOVE      EMICDESC,DIM40
            ENDIF
          ELSE
            MOVE      "Unknown diagnosis",DDESC
            CALL      RD10T9D1                * using paticdfd
            IF        OVRCD=1
              CALL      RDPT10D1
            ENDIF
            MOVE      DDESC,DIM40
          ENDIF
.
          REP       " +",URNUMBER
          REP       " +",ADMISSNO
.
          MOVE      "Yes",EXTRACT
          MATCH     EMVDSEND,DIMN
          IF        @EQUAL
            MOVE      "No",EXTRACT
          ENDIF
.
          MOVE      "Yes",PRIMARY
          MATCH     EMVDPRIM,DIMN
          IF        @EQUAL
            MOVE      "No",PRIMARY
          ENDIF
.
          WRITE     HTMLFILE;"<tr><td nowrap><i>":
                             EMVDCODE,"</td>":
                             "<td nowrap >":
                             DIM40,"</td>":
                             "<td nowrap >":
                             PRIMARY,"</td>":
                             "<td nowrap >":
                             EXTRACT,"</td>":
                             "</tr>" 
.
          REP       "+ ",URNUMBER
          REP       "+ ",ADMISSNO
.
          GOTO      DIATAB10
.
DIATAB99  RETURN
.------------------------------------------------------------
.         INVTAB00  Investigations Table
.------------------------------------------------------------
INVTAB00  WRITE     HTMLFILE;"<tr><td align=left><b>Code</td>":
                                 "<td align=left><b>Investigation</td>":
                                 "</tr>"
.
          PACK      KEY13,ADMISSNO,Z70
          CALL      RSEMIN1
INVTAB10  CALL      RPEMIN1 
          BRANCH    OVRCD,INVTAB99
.
          MATCH     ADMISSNO,EMINADMN
          GOTO      INVTAB99 IF NOT EQUAL
.
          MOVE      "Unknown investigation",DIM40
.         read file to find investigation description
.
INVTAB99  RETURN
.------------------------------------------------------------
. Set Parameters for Emergency Visit Details
.------------------------------------------------------------
EMVIS000  MOVE      ZERO,EXIT
          UNPACK    QRYNAME,KEY5,KEY3
          MOVE      KEY3,F3
          STORE     QRYDATA,F3,EMVIS001,EMVIS002,EMVIS003,EMVIS004,EMVIS005:
                               EMVIS006,EMVIS007,EMVIS008,EMVIS009,EMVIS010:
                               EMVIS011,EMVIS012,EMVIS013,EMVIS014,EMVIS015:
                               EMVIS016,EMVIS017,EMVIS018,EMVIS019,EMVIS020:
                               EMVIS021,EMVIS022,EMVIS023,EMVIS024,EMVIS025:
                               EMVIS026,EMVIS027,EMVIS028,EMVIS029,EMVIS030:
                               EMVIS031,EMVIS032,EMVIS033,EMVIS034,EMVIS035:
                               EMVIS036,EMVIS037,EMVIS038,EMVIS039,EMVIS040:
                               EMVIS041,EMVIS042,EMVIS043,EMVIS044,EMVIS045:
                               EMVIS046,EMVIS047,EMVIS048,EMVIS049,EMVIS050:
                               EMVIS051,EMVIS052,EMVIS053,EMVIS054,EMVIS055:
                               EMVIS056,EMVIS057,EMVIS058,EMVIS059,EMVIS060:
                               EMVIS061,EMVIS062,EMVIS063,EMVIS064,EMVIS065:
                               EMVIS066,EMVIS067,EMVIS068,EMVIS069,EMVIS070:
                               EMVIS071,EMVIS072,EMVIS073,EMVIS074,EMVIS075:
                               EMVIS076,EMVIS077,EMVIS078,EMVIS079,EMVIS080:
                               EMVIS081,EMVIS082,EMVIS083,EMVIS084,EMVIS085:
                               EMVIS086,EMVIS087,EMVIS088,EMVIS089,EMVIS090:
                               EMVIS091,EMVIS092,EMVIS093,EMVIS094,EMVIS095:
                               EMVIS096,EMVIS097,EMVIS098,EMVIS099,EMVIS100:
                               EMVIS101,EMVIS102,EMVIS103,EMVIS104,EMVIS105:
                               EMVIS106,EMVIS107,EMVIS108,EMVIS109,EMVIS110:
                               EMVIS111,EMVIS112,EMVIS113,EMVIS114,EMVIS115:
                               EMVIS116,EMVIS117,EMVIS118,EMVIS119,EMVIS120: 
                               EMVIS121,EMVIS122,EMVIS123,EMVIS124,EMVIS125:
                               EMVIS126,EMVIS127,EMVIS128,EMVIS129,EMVIS130:
                               EMVIS131
.
EMVIS999  RETURN
.------------------------------------------------------------
. Set Parameters for investigation Details
.------------------------------------------------------------
EMINV000  MOVE      ZERO,EXIT
          UNPACK    QRYNAME,KEY5,KEY3
          MOVE      KEY3,F3
          STORE     QRYDATA,F3,EMINV001,EMINV002,EMINV003,EMINV004,EMINV005:
                               EMINV006,EMINV007,EMINV008,EMINV009,EMINV010:
                               EMINV011,EMINV012,EMINV013,EMINV014,EMINV015:
                               EMINV016,EMINV017,EMINV018,EMINV019,EMINV020:
                               EMINV021,EMINV022,EMINV023,EMINV024
EMINV999  RETURN
.------------------------------------------------------------
. Set Parameters for procedure details
.------------------------------------------------------------
EMVPR000  MOVE      ZERO,EXIT
          UNPACK    QRYNAME,KEY5,KEY3
          MOVE      KEY3,F3
          STORE     QRYDATA,F3,EMVPR001,EMVPR002
.
EMVPR999  RETURN
.------------------------------------------------------------
. Set Parameters for diagnosis details
.------------------------------------------------------------
EMVDG000  MOVE      ZERO,EXIT
          UNPACK    QRYNAME,KEY5,KEY3
          MOVE      KEY3,F3
          STORE     QRYDATA,F3,EMVDG001,EMVDG002,EMVDG003
.
EMVDG999  RETURN
.------------------------------------------------------------
. Processing of procedures, diagnoses and investigations
.------------------------------------------------------------
PDIP0000  MATCH     SP70,FORMACTN
          GOTO      PDIP9000 IF EQUAL
.
          UNPACK    FORMACTN,KEY1,ANS
.
          MATCH     KEY1,P
          IF        @EQUAL
            CALL      PROC0000
            GOTO      PDIP9999
          ENDIF
.
          MATCH     KEY1,D
          IF        @EQUAL
            CALL      DIAG0000
            GOTO      PDIP9999
          ENDIF
.
          MATCH     KEY1,I
          IF        @EQUAL
            CALL      INVS0000
            GOTO      PDIP9999
          ENDIF
.
PDIP9000  CALL      GETVIS00
          BRANCH    EXIT,PDIP9990
          CALL      CHKADM00
          MATCH     SP8,URNUMBER
          IF        @EQUAL | @EOS
            MOVE      EMVIURNO,URNUMBER
          ENDIF
.
          CALL      CHKUR000 
.
PDIP9900  CALL      PATNAA00
          MOVE      PATFNAME,WEBTITLE
          CALL      WEBHED00
          BRANCH    EXIT,PDIP9999
          CALL      WEBBOD00
          CALL      WEBEND00
.
PDIP9950  MOVE      ONE,EXIT
          GOTO      PDIP9999
.
PDIP9990  MOVE      "Invalid Admission Number.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      PDIP9999
.
PDIP9999  RETURN
.------------------------------------------------------------
.         INVS0000  Investigations
.------------------------------------------------------------
INVS0000  MATCH     II,FORMACTN                   * Insert investigation
          IF        @EQUAL
            CALL      WRINV000
            GOTO      INVS9999
          ENDIF
.
          MATCH     IU,FORMACTN                   * Update investigation
          IF        @EQUAL
.           CALL      UPINV000
            GOTO      INVS9999
          ENDIF
.
          MATCH     ID,FORMACTN                   * Delete investigation
          IF        @EQUAL
            CALL      DEINV000
            GOTO      INVS9999
          ENDIF
.
          MOVE      "An error occurrred in the form action",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
.
INVS9999  RETURN
.------------------------------------------------------------
.         PROC0000  Procedure processing
.------------------------------------------------------------
PROC0000  MATCH     PI,FORMACTN                   * Insert procedure
          IF        @EQUAL
            CALL      WRPR0000
            GOTO      PROC9999
          ENDIF
.
          MATCH     PU,FORMACTN                   * Update procedure
          IF        @EQUAL
.           CALL      UPPR0000
            GOTO      PROC9999
          ENDIF
.
          MATCH     PD,FORMACTN                   * Delete procedure
          IF        @EQUAL
            CALL      DEPR0000
            GOTO      PROC9999
          ENDIF
.
          MOVE      "An error occurrred in the form action",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
.
PROC9999  RETURN
.------------------------------------------------------------
.         DIAG0000  Diagnosis Processing
.------------------------------------------------------------
DIAG0000  MATCH     DI,FORMACTN                   * Insert procedure
          IF        @EQUAL
            CALL      WRDG0000
            GOTO      DIAG9999
          ENDIF
.
          MATCH     DU,FORMACTN                   * Update procedure
          IF        @EQUAL
.           CALL      UPDG0000
            GOTO      DIAG9999
          ENDIF
.
          MATCH     DELD,FORMACTN                 * Delete procedure
          IF        @EQUAL
            CALL      DEDG0000
            GOTO      DIAG9999
          ENDIF 
.
          MOVE      "An error occurrred in the form action",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT 
.
DIAG9999  RETURN
.------------------------------------------------------------
.         WRPR0000  Write procedures to file
.------------------------------------------------------------
WRPR0000  MATCH     SP70,EMVPR001
          GOTO      WRPR9990 IF EQUAL
.
          MATCH     Z70,EMVPR001
          GOTO      WRPR9990 IF EQUAL  
.
          MOVE      ZERO,PEXCNT
          CALL      PEXCNT00
.
          PACK      KEY9,EMVPR001
          CALL      RDEMPRO1
          BRANCH    OVRCD,WRPR9950
.
          MOVE      EMVPR001,EMVPCODE
          MOVE      ADMISSNO,EMVPADMN

          MATCH     Z70,EMVPR002
          IF        @EQUAL
            MOVE      DIMY,EMVPSEND
          ELSE
            MOVE      EMVPR002,EMVPSEND 
          ENDIF
.
          MATCH     EMVPSEND,DIMY
          IF        @EQUAL
            COMPARE   EMCNMAXP,ZERO
            IF        !@EQUAL
              IF        PEXCNT>=EMCNMAXP
                CLEAR     ALERTDIM
                APPEND    "Maximum number of procedures for extraction",ALERTDIM
                APPEND    " exceeded, procedure not set for extraction",ALERTDIM
                RESET     ALERTDIM
                CALL      ALTCLS00
                MOVE      DIMN,EMVPSEND
              ENDIF
            ENDIF
          ENDIF
.
          PACK      EMVPSPAR,SP70
.
          PACK      KEY17,ADMISSNO,EMVPR001
          CALL      RDEMVPR1
          COMPARE   ZERO,OVRCD
          GOTO      WRPR9900 IF EQUAL 
.
          CALL      WREMVPR1
          MOVE      ZERO,EXIT
          GOTO      WRPR9999
.
WRPR9900  MOVE      "Procedure already exists for this patient",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      WRPR9999 
.
WRPR9950  MOVE      "Procedure code does not exist",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      WRPR9999
.
WRPR9990  MOVE      "Error adding procedure",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      WRPR9999
.
WRPR9999  RETURN 
.------------------------------------------------------------
.         UPPR0000  Update procedure
.------------------------------------------------------------
UPPR0000  MATCH     SP70,ADMISSNO               * admission blank 
          GOTO      UPPR9900 IF EQUAL           * yes
.
          MOVE      ADMISSNO,KEY8               
          CALL      RDEMVIS1                    * no - admission exists?
          BRANCH    OVRCD,UPPR9900              * no
.
          MATCH     SP70,EMVPR001               * yes - proc code blank?
          GOTO      UPPR9950 IF EQUAL           * yes
.
          MOVE      EMVPR001,KEY9               
          CALL      RDEMPRO1                    * no - proc code valid?
          BRANCH    OVRCD,UPPR9950              * no
.
          PACK      KEY17,ADMISSNO,EMVPR001
          CALL      RDEMVPR1                    * yes - proc on file for adm
          BRANCH    OVRCD,UPPR9990              * no 
.
          MOVE      EMVPR001,EMVPCODE           * yes - store proc vars
          MOVE      EMVPR002,EMVPSEND
          CALL      UPEMVPR1                    * update emrvrpaf record
          MOVE      ZERO,EXIT
          GOTO      UPPR9999
.
UPPR9900  MOVE      "Invalid admission number",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      UPPR9999 
.
UPPR9950  MOVE      "Invalid procedure code",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      UPPR9999
.
UPPR9990  MOVE      "The procedure is not on file for this admission",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      UPPR9999
.
UPPR9999  RETURN
.------------------------------------------------------------
.         DEPR0000  Delete procedure
.------------------------------------------------------------
DEPR0000  MATCH     SP70,ADMISSNO               * admission blank
          GOTO      DEPR9900 IF EQUAL           * yes
.
          MOVE      ADMISSNO,KEY8
          CALL      RDEMVIS1                    * no - admission exists?
          BRANCH    OVRCD,DEPR9900              * no
.
          MATCH     SP70,EMVPR001               * yes - proc code blank?
          GOTO      DEPR9950 IF EQUAL           * yes
.
          MOVE      EMVPR001,KEY9
          CALL      RDEMPRO1                    * no - proc code valid?
          BRANCH    OVRCD,DEPR9950              * no
.
          PACK      KEY17,ADMISSNO,EMVPR001
          CALL      RDEMVPR1                    * yes - proc on file for adm
          BRANCH    OVRCD,DEPR9990              * no
.
          CALL      DEEMVPR1                    * update emrvrpaf record
          MOVE      ZERO,EXIT
          GOTO      DEPR9999
.
DEPR9900  MOVE      "Invalid admission number",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DEPR9999
.
DEPR9950  MOVE      "Invalid procedure code",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DEPR9999
.
DEPR9990  MOVE      "The procedure is not on file for this admission",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DEPR9999
.
DEPR9999  RETURN
.------------------------------------------------------------
.         WRDG0000  Write diagnoses
.------------------------------------------------------------
WRDG0000  MATCH     SP70,EMVDG001
          GOTO      WRDG9990 IF EQUAL
.
          MATCH     Z70,EMVDG001
          GOTO      WRDG9990 IF EQUAL  
.
          PACK      KEY9,EMVDG001
          iF        EMCNICDF=1    
            IF        EMICFLAG=1                   
              CALL      RDEMICD3                    * using ICD10
            ELSE
              CALL      RDEMICD1                    * using ICD9
            ENDIF
          ELSE
            CALL      RD10T9D1                      * using paticdfd
            IF        OVRCD=1
              CALL      RDPT10D1
            ENDIF
          ENDIF
          BRANCH    OVRCD,WRDG9950
.
          MOVE      ZERO,DEXCNT
          MOVE      ZERO,PRICOUNT
          CALL      DEXCNT00
.
          MOVE      EMVDG001,EMVDCODE
          MOVE      ADMISSNO,EMVDADMN
.
          MATCH     Z70,EMVDG003
          IF        @EQUAL
            MOVE      DIMY,EMVDSEND
          ELSE
            MOVE      EMVDG003,EMVDSEND 
          ENDIF
.
          PACK      KEY17,EMVDADMN,EMVDCODE
          CALL      RDEMVDG1
          COMPARE   ZERO,OVRCD
          GOTO      WRDG9900 IF EQUAL 
.
          MATCH     EMVDSEND,DIMY
          IF        @EQUAL
            COMPARE   EMCNMAXD,ZERO
            IF        !@EQUAL
              IF        DEXCNT>=EMCNMAXD
                CLEAR     ALERTDIM
                APPEND    "Maximum number of diagnoses for extraction ",ALERTDIM
                APPEND    "exceeded, diagnosis not set for extraction ",ALERTDIM
                MOVE      ONE,ALTFLAG
                MOVE      DIMN,EMVDSEND
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     Z70,EMVDG002
          IF        @EQUAL
            MOVE      DIMN,EMVDPRIM
          ELSE
            MOVE      EMVDG002,EMVDPRIM
          ENDIF 
.
WRDG1000  MATCH     DIMY,EMVDPRIM
          IF        @EQUAL
            IF        PRICOUNT>=ONE
              CLEAR     PRIMDIM
              APPEND    "Primary diagnosis already entered, will not ",PRIMDIM
              APPEND    "be set as primary diagnosis.",PRIMDIM
              MOVE      ONE,ALTFLAG
              MOVE      DIMN,EMVDPRIM
              SUB       ONE,PRICOUNT
            ENDIF
          ENDIF
.
          COMPARE   ONE,ALTFLAG
          IF        @EQUAL
            RESET     ALERTDIM
            RESET     PRIMDIM
            CALL      ALTCLS00
          ENDIF
.
          PACK      EMVDSPAR,SP70
.
          PACK      KEY17,EMVDADMN,EMVDCODE
          CALL      RDEMVDG1
          COMPARE   ZERO,OVRCD
          GOTO      WRDG9900 IF EQUAL 
.
          CALL      WREMVDG1
          MOVE      ZERO,EXIT
          GOTO      WRDG9999
.
WRDG9900  MOVE      "Diagnosis already exists for this patient",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      WRDG9999 
.
WRDG9950  MOVE      "Diagnosis code does not exist",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      WRDG9999 
.
WRDG9990  MOVE      "Error adding diagnosis",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      WRDG9999
.
WRDG9999  RETURN 
.------------------------------------------------------------
.         UPDG0000  Update diagnosis
.------------------------------------------------------------
UPDG0000  MATCH     SP70,ADMISSNO               * admission blank
          GOTO      UPDG9900 IF EQUAL           * yes
.
          MOVE      ADMISSNO,KEY8
          CALL      RDEMVIS1                    * no - admission exists?
          BRANCH    OVRCD,UPDG9900              * no
.
          MATCH     SP70,EMVDG001               * yes - diag code blank?
          GOTO      UPDG9950 IF EQUAL           * yes
.
          PACK      KEY9,EMVDG001               * no - check for valid diag
          IF        EMCNICDF=1
            IF        EMICFLAG=1
              CALL      RDEMICD3                    * using ICD10
            ELSE
              CALL      RDEMICD1                    * using ICD9
            ENDIF
          ELSE
            CALL      RD10T9D1                      * using paticdfd
            IF        OVRCD=1
              CALL      RDPT10D1
            ENDIF
          ENDIF
          BRANCH    OVRCD,UPDG9950              * no
.
          PACK      KEY17,ADMISSNO,EMVDG001
          CALL      RDEMVDG1                    * yes - diag on file for adm
          BRANCH    OVRCD,UPPR9990              * no
.
          MOVE      EMVDG001,EMVDCODE           * yes - store diag vars
          MOVE      EMVDG002,EMVDPRIM 
          MOVE      EMVDG003,EMVDSEND 
          CALL      UPEMVDG1                    * update emrvrpaf record
          MOVE      ZERO,EXIT
          GOTO      UPDG9999
.
UPDG9900  MOVE      "Invalid admission number",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      UPDG9999
.
UPDG9950  MOVE      "Invalid diagnosis code",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      UPDG9999
.
UPDG9990  MOVE      "The diagnosis is not on file for this admission",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      UPDG9999
.
UPDG9999  RETURN
.------------------------------------------------------------
.         DEDG0000  Delete diagnosis
.------------------------------------------------------------
DEDG0000  MATCH     SP70,ADMISSNO               * admission blank
          GOTO      DEDG9900 IF EQUAL           * yes
.
          MOVE      ADMISSNO,KEY8
          CALL      RDEMVIS1                    * no - admission exists?
          BRANCH    OVRCD,DEDG9900              * no
.
          MATCH     SP70,EMVDG001               * yes - proc code blank?
          GOTO      DEDG9950 IF EQUAL           * yes
.
          PACK      KEY17,ADMISSNO,EMVDG001
          CALL      RDEMVDG1                    * no - proc on file for adm
          BRANCH    OVRCD,DEDG9990              * no
.
          CALL      DEEMVDG1                    * delete emrvrpaf record
          MOVE      ZERO,EXIT
          GOTO      DEDG9999
.
DEDG9900  MOVE      "Invalid admission number",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DEDG9999
.
DEDG9950  MOVE      "Invalid diagnosis code",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DEDG9999
.
DEDG9990  MOVE      "The diagnosis is not on file for this admission",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DEDG9999
.
DEDG9999  RETURN
.------------------------------------------------------------------------------
.         STINV000  Store EMINVXXX vars in file variables
.------------------------------------------------------------------------------
STINV000  MATCH     EMINV002,Z70
          IF        !@EQUAL
            MOVE      EMINV002,EMINRTYP
          ENDIF
.
          MATCH     EMINV003,Z70
          IF        !@EQUAL
            MOVE      EMINV003,EMINRNUM
          ENDIF
.
          MATCH     EMINV004,Z70
          IF        !@EQUAL
            UNPACK    EMINV004,DAY,ANS,MONTH,ANS,CENT,YEAR2
            CALL      MONNUM00
            PACK      EMINV004,CENT,YEAR2,MONTH2,DAY
            REP       " 0",EMINV004
            MATCH     ZERO8,EMINV004
            IF        @EQUAL
              PACK      EMINLUDT,SP70
              MOVE      EMINV004,EMINLUDT
            ENDIF
          ENDIF
.
          MATCH     EMINV005,Z70
          IF        !@EQUAL
            MOVE      EMINV005,EMINLUTM
          ENDIF
.
.*******CODE***********
          MATCH     EMINV006,Z70
          IF        !@EQUAL
            MOVE      EMINV006,EMINMCOD
          ENDIF
.
          MATCH     EMINV007,Z70
          IF        !@EQUAL
            UNPACK    EMINV007,DAY,ANS,MONTH,ANS,CENT,YEAR2
            CALL      MONNUM00
            PACK      EMINV007,CENT,YEAR2,MONTH2,DAY
            REP       " 0",EMINV007
            MATCH     ZERO8,EMINV007
            IF        @EQUAL
              PACK      EMINLUDT,SP70
              MOVE      EMINV007,EMINMDAT
            ENDIF
          ENDIF
.
          MATCH     EMINV008,Z70
          IF        !@EQUAL
            MOVE      EMINV008,EMINMTIM
          ENDIF
.
          MATCH     EMINV009,Z70
          IF        !@EQUAL
            MOVE      EMINV009,EMINREF1
          ENDIF
.
          MATCH     EMINV010,Z70
          IF        !@EQUAL
            MOVE      EMINV010,EMINREF2
          ENDIF
.
.***************CODE*************
          MATCH     EMINV011,Z70
          IF        !@EQUAL
            MOVE      EMINV011,EMINCOD1
          ENDIF
.
.***************CODE*************
          MATCH     EMINV012,Z70
          IF        !@EQUAL
            MOVE      EMINV012,EMINCOD2
          ENDIF
.
.***************CODE*************
          MATCH     EMINV013,Z70
          IF        !@EQUAL
            MOVE      EMINV013,EMINCOD3
          ENDIF
.
.***************CODE*************
          MATCH     EMINV014,Z70
          IF        !@EQUAL
            MOVE      EMINV014,EMINCOD4
          ENDIF
.
          MATCH     EMINV015,Z70
          IF        !@EQUAL
            UNPACK    EMINV015,DAY,ANS,MONTH,ANS,CENT,YEAR2
            CALL      MONNUM00
            PACK      EMINV015,CENT,YEAR2,MONTH2,DAY
            REP       " 0",EMINV015
            MATCH     ZERO8,EMINV015
            IF        @EQUAL
              PACK      EMINLUDT,SP70
              MOVE      EMINV015,EMINDAT1
            ENDIF
          ENDIF
.
          MATCH     EMINV016,Z70
          IF        !@EQUAL
            UNPACK    EMINV016,DAY,ANS,MONTH,ANS,CENT,YEAR2
            CALL      MONNUM00
            PACK      EMINV016,CENT,YEAR2,MONTH2,DAY
            REP       " 0",EMINV016
            MATCH     ZERO8,EMINV016
            IF        @EQUAL
              PACK      EMINLUDT,SP70
              MOVE      EMINV016,EMINDAT2
            ENDIF
          ENDIF
.
          MATCH     EMINV017,Z70
          IF        !@EQUAL
            MOVE      EMINV017,EMINTIM1
          ENDIF
.
          MATCH     EMINV018,Z70
          IF        !@EQUAL
            MOVE      EMINV018,EMINTIM2
          ENDIF
.
          COMPARE   ZERO,EMINV019
          IF        !@EQUAL
            MOVE      EMINV019,EMINAMT1
          ENDIF
.
          COMPARE   ZERO,EMINV020
          IF        !@EQUAL
            MOVE      EMINV020,EMINAMT2
          ENDIF
.
          MATCH     EMINV021,Z70
          IF        !@EQUAL
            MOVE      EMINV021,EMINYN01
          ENDIF
.
          MATCH     EMINV022,Z70
          IF        !@EQUAL
            MOVE      EMINV022,EMINYN02
          ENDIF
.
          MATCH     EMINV023,Z70
          IF        !@EQUAL
            MOVE      EMINV023,EMINYN03
          ENDIF
.
          MATCH     EMINV024,Z70
          IF        !@EQUAL
            MOVE      EMINV024,EMINYN04
          ENDIF
.
STINV999  RETURN
.-------------------------------------------------------------------------------
.  Goes back 1 page
.-------------------------------------------------------------------------------
GOBACK00  CALL      OPENHTML
          BRANCH    EXIT,GOBACK99
          MOVE      NEXTPAGE,F1
          SUB       ONE,F1
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                             "    alert(#"",WEBTITLE,"#");":
.                            "    self.close();":
                             "    window.history.go(-",F1,");":
                             "}":
                             "</script>"
          CALL      CLOSHTML
GOBACK99  RETURN
.------------------------------------------------------------
.         CUNK0000  Clear unknown patient file variables
.------------------------------------------------------------
CUNK0000  PACK      EMUNDET1,SP50
          PACK      EMUNDET2,SP50
          PACK      EMUNSEX,SP10
          CLEAR     EMUNAGE
.
CUNK9999  RETURN
.------------------------------------------------------------
.         CHKVIS00 Check visit file
.------------------------------------------------------------
CHKVIS00  PACK      KEY16,PURNO,Z70
          CALL      RSEMVIS3
CHKVIS10  CALL      RPEMVIS3
          IF        OVRCD=1
            CALL      CLEMRVIS
            GOTO      CHKVIS80
          ENDIF
.
          MOVE      PURNO,DPURNO
          MATCH     DPURNO,EMVIURNO
          IF        @EQUAL
            COMPARE   ONE,EMVISTAT
            IF        @EQUAL
              APPEND    "Patient already registered in emergency",WEBTITLE
              CALL      WEBERR00
              GOTO      CHKVIS90
            ENDIF
          ELSE
            CALL      CLEMRVIS
            GOTO      CHKVIS80
          ENDIF
          GOTO      CHKVIS10
.
CHKVIS80  MOVE      ZERO,EXIT
          GOTO      CHKVIS99
.
CHKVIS90  MOVE      ONE,EXIT
          GOTO      CHKVIS99
.
CHKVIS99  RETURN
+
.------------------------------------------------------------
.         MONNUM00  Convert month name to number
.------------------------------------------------------------
MONNUM00    MATCH     JAN,MONTH
            IF        @EQUAL
              MOVE      ONE,MONTH2
              GOTO      MONNUM99  
            ENDIF
.
            MATCH     FEB,MONTH
            IF        @EQUAL
              MOVE      TWO,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     MAR,MONTH
            IF        @EQUAL
              MOVE      THREE,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     APR,MONTH
            IF        @EQUAL
              MOVE      FOUR,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     MAY,MONTH
            IF        @EQUAL
              MOVE      FIVE,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     JUN,MONTH
            IF        @EQUAL
              MOVE      SIX,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     JUL,MONTH
            IF        @EQUAL
              MOVE      SEVEN,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     AUG,MONTH
            IF        @EQUAL
              MOVE      EIGHT,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     SEP,MONTH
            IF        @EQUAL
              MOVE      NINE,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     OCT,MONTH
            IF        @EQUAL
              MOVE      TEN,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     NOV,MONTH
            IF        @EQUAL
              MOVE      TEN1,MONTH2
              GOTO      MONNUM99
            ENDIF
.
            MATCH     DEC,MONTH
            IF        @EQUAL
              MOVE      TEN2,MONTH2
              GOTO      MONNUM99
            ENDIF
.
MONNUM99  RETURN
.------------------------------------------------------------
. Output HTML Error File & go back 2 pages
.------------------------------------------------------------
WEBER200  CALL      OPENHTML
          BRANCH    EXIT,WEBER295
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                             "    alert(#"",WEBTITLE,"#");":
                             "    history.go(-2);":
                             "}":
                             "</script>"
          CALL      CLOSHTML
          GOTO      WEBER299
.
WEBER295  DISPLAY   "*** Fifo Not Found ***"
.
WEBER299  RETURN
.------------------------------------------------------------
.         ALTCLS00 Display alert, close window and refresh parent 
.------------------------------------------------------------
ALTCLS00  CALL      OPENHTML
          BRANCH    EXIT,ALTCLS99
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                             "    alert(#"",ALERTDIM,PRIMDIM,"#");":
                             "    opener.history.go(0);":
                             "    self.close();":
                             "}":
                             "</script>"
          CALL      CLOSHTML
.
ALTCLS99  RETURN
.------------------------------------------------------------
.          CHKADM00  Check ADMISSNO contents
.------------------------------------------------------------
CHKADM00  MOVE      ONE,EVISFLAG
          MATCH     SP8,ADMISSNO
          IF        @EQUAL
            CALL      CLEMRVIS
            MOVE      ZERO,EVISFLAG
            GOTO      CHKADM90
          ENDIF
.
          MOVE      ADMISSNO,KEY8
          CALL      RDEMVIS1
          IF        OVRCD=1
            CALL      CLEMRVIS
            MOVE      ZERO,EVISFLAG
            GOTO      CHKADM90
          ENDIF
.
          PACK      KEY17,ADMISSNO,EMVPR001         * read procedure file
          CALL      RDEMVPR1
.
          PACK      KEY17,ADMISSNO,EMVDG001         * read procedure file
          CALL      RDEMVDG1
.
          PACK      KEY17,ADMISSNO,RECORDKY         * read procedure file
          CALL      RDEMIN1
.
CHKADM90  BRANCH    EVISFLAG,CHKADM99    * this code has been added to pass an
.                                        * admissno to links from patweb98
          MATCH     SP8,URNUMBER                            
          IF        !@EQUAL
            PACK      KEY16,URNUMBER,Z70 
            CALL      RSEMVIS3
            CALL      RPEMVIS3
            IF        OVRCD=1
              CALL      CLEMRVIS
              GOTO      CHKADM99
            ENDIF
          ENDIF
.
CHKADM99  RETURN
.------------------------------------------------------------
.         CHKUR000 Check URNUMBER contents
.------------------------------------------------------------
CHKUR000  MOVE      ONE,UNKFLAG
.
          PACK      KEY8,URNUMBER,SP70
          CALL      RDMAST1
          IF        OVRCD=1
            CALL      CLPATMAS
            CALL      CLPMSPX2
            MOVE      ZERO,UNKFLAG
            MOVE      ZEROUR,URNUMBER
            MATCH     SP8,ADMISSNO
            IF        @EQUAL
              MOVE      EMVIADMN,ADMISSNO
            ENDIF
            GOTO      CHKUR990
          ENDIF
.
          MOVE      PURNO,KEY8
          CALL      RDPMPX21
          IF        OVRCD=1
            CALL      CLPMSPX2
          ENDIF
.
CHKUR990  BRANCH    UNKFLAG,CHKUR999
.
          MOVE      ADMISSNO,KEY8
          CALL      RDEMUNK1
          IF        OVRCD=1
            CALL      CUNK0000
            GOTO      CHKUR999
          ENDIF
.
          MOVE      EMUNDET2,PGNAME
          MOVE      EMUNDET1,PSNAME
          MOVE      EMUNAGE,PSAGEYRS
          MOVE      EMUNSEX,PSEX
          PACK      PTITL,SP70 
.
CHKUR999  RETURN          
.------------------------------------------------------------
.         WRINV000  Write Emergency Investigations 
.------------------------------------------------------------
WRINV000  MATCH     SP70,ADMISSNO             * admissno blank?
          GOTO      WRINV900 IF EQUAL         * yes 
.
          MOVE      EMINV003,FORM3
          PACK      KEY13,ADMISSNO,Z70        * does admissno have existing inv?
WRINV100  CALL      RSEMIN1                   * positional read at end of adm.
WRINV110  CALL      RKEMIN1                   * read previous
          BRANCH    OVRCD,WRINV130            * no more admissions
.
          MATCH     ADMISSNO,EMINADMN         * admissno still equal
          GOTO      WRINV130 IF NOT EQUAL     * No - end
.
          MATCH     EMINRTYP,EMINV002         * record type equal?
          IF        @EQUAL                      
            GOTO      WRINV120                * yes - check record num
          ENDIF
          GOTO      WRINV110                  * no - keep looking
.
WRINV120  MATCH     EMINRNUM,EMINV003         * record number equal?
          IF        @EQUAL
            MOVE      EMINV003,FORM3          * yes - add one to record number
            ADD       ONE,FORM3
          ELSE
            MOVE      EMINV003,FORM3
          ENDIF
.
WRINV130  PACK      KEY13,ADMISSNO,EMINV002,FORM3        * record exists?
          CALL      RDEMIN1
          BRANCH    OVRCD,WRINV140                       * no - proceed
          GOTO      WRINV120                             * yes - increment form3
.
WRINV140  MOVE      ADMISSNO,EMINADMN
          CALL      STINV000                  * store investigation variables 
          MOVE      FORM3,EMINRNUM            * store record number
.
          CALL      WREMIN1                   * write new investigation
          MOVE      ZERO,EXIT                 * write successful
          GOTO      WRINV999                  * so return
.
WRINV900  MOVE      "Error adding investigation",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      WRINV999
.
WRINV990  MOVE      "Investigation already exists for this patient",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      WRINV999 
.
WRINV999  RETURN
.------------------------------------------------------------
.         DEINV000  Delete an investigation
.------------------------------------------------------------
DEINV000  MATCH     SP70,RECORDKY
          GOTO      DEINV900 IF EQUAL 
.
          MATCH     SP70,ADMISSNO 
          GOTO      DEINV900 IF EQUAL
.
          PACK      KEY13,ADMISSNO,RECORDKY,SP70
          CALL      RDEMIN1
          BRANCH    OVRCD,DEINV990
.
          CALL      DEEMIN1
          MOVE      ZERO,EXIT
          GOTO      DEINV999
.
DEINV900  MOVE      "Error deleting investigation",WEBTITLE
          CALL      WEBERR00 
          MOVE      ONE,EXIT
          GOTO      DEINV999
.
DEINV990  APPEND    "Investigation record does not exist",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DEINV999 
.
DEINV999  RETURN
.------------------------------------------------------------
.         UPINV000  Update investigation
.------------------------------------------------------------
UPINV000  MATCH     SP70,RECORDKY
          GOTO      UPINV900 IF EQUAL
.
          MATCH     SP70,ADMISSNO
          GOTO      UPINV900 IF EQUAL
.
          PACK      KEY13,ADMISSNO,RECORDKY,SP70
          CALL      RDEMIN1
          BRANCH    OVRCD,UPINV990
.
          CALL      STINV000
          CALL      UPEMIN1
          MOVE      ZERO,EXIT
          GOTO      UPINV999
.
UPINV900  MOVE      "Error deleting investigation",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      UPINV999
.
UPINV990  APPEND    "Investigation record does not exist",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      UPINV999
.
UPINV999  RETURN
.------------------------------------------------------------
.  Emergency Coding Maintenance 
.------------------------------------------------------------
EMRVCD00  MOVE      "0",EMRINVIN
          RESET     UPDATETY
          MATCH     SP1,UPDATETY
          GOTO      EMRVCD70 IF EQUAL
.
          MOVE      ZERO,EXIT
.
          MATCH     "A",UPDATETY    * Add formaction
          GOTO      EMRVCD10 IF EQUAL
.
          MATCH     "U",UPDATETY    * Update formaction
          GOTO      EMRVCD20 IF EQUAL
.
          MATCH     "D",UPDATETY    * Delete formaction
          GOTO      EMRVCD30 IF EQUAL
.
          MATCH     "C",UPDATETY
          GOTO      EMRVCD99 IF EQUAL
.
          MATCH     "E",UPDATETY    * Update User Defined Code 1 (EMVCUDC1)
          GOTO      EMRVCD40 IF EQUAL
.
          GOTO      EMRVCD93
.
EMRVCD10  MOVE      ONE,DIAGINDC
          CALL      ADDCOD00                * Add a code 
          BRANCH    EXIT,EMRVCD99
          IF        HISTFLAG = 1
            MOVE      EMUTY001,HISTTYPE
            CALL      WRTHIS00
          ENDIF
.
          MATCH     "005",EMVCTYPE
          IF        @EQUAL
            MATCH     "1",WADCMIND
            IF        @EQUAL
              CALL      WEMDT000              * Diagnosis Free Text Update wah
            ELSE
              CALL      EMDT0000              * Diagnosis Free Text Update
            ENDIF
          ENDIF
.
          CALL      WEDV0000           * Write EDWARD visit alteration
          GOTO      EMRVCD99
.
EMRVCD20  CALL      UPDCOD00                * Update code 
          BRANCH    EXIT,EMRVCD99
.
          IF        HISTFLAG = 1
            MOVE      EMUTY001,HISTTYPE
            CALL      WRTHIS00
          ENDIF
.
          MATCH     "005",EMVCTYPE
          IF        @EQUAL
            MATCH     "1",WADCMIND
            IF        @EQUAL
              CALL      WEMDT000              * Diagnosis Free Text Update wah
            ELSE
              CALL      EMDT0000              * Diagnosis Free Text Update
            ENDIF
          ENDIF
.
          GOTO      EMRVCD99
.
EMRVCD30  CALL      VERUSR00
          BRANCH    EXIT,EMRVCD99
.
          PACK      KEY14,RECORDKY,SP70
          CALL      RDEMVCD1
          BRANCH    OVRCD,EMRVCD91
.
          MOVE      EMVCVIST,KEY8
          CALL      RDEMVIS1                * Read EMR visit record
          BRANCH    OVRCD,EMRVCD91
.
          MOVE      EMVCTYPE,SAVCTYPE       * Save coding type
.
          MATCH     "005",EMVCTYPE
          IF        @EQUAL
            CALL      DAEC0000         * Update delete flag for AECC Class rec.
.
            PACK      KEY14,RECORDKY,SP70     * Re read correct record
            CALL      RDEMVCD1                * Prior to delete
            BRANCH    OVRCD,EMRVCD91
.
            CALL      DEEMVCD1                * deletes away the data
          ELSE
            CALL      DEEMVCD1                * deletes away the data
          ENDIF
.
          CALL      WEDV0000           * Write EDWARD visit alteration
.
          MOVE      ZERO,FORM2
          MOVE      EMVCCSYS,FORM2
.
          MOVE      EMVCUNIQ,SAVEUNIQ       * save current record id
          MATCH     "000",EMVCSEQU
          IF        @EQUAL
            PACK      KEY50,EMVCVIST,EMVCMNCD,EMVCSUBN:
                            EMVCEDAD,EMVCDATE,EMVCTIME,EMVCTYPE,SP70
            CALL      SETDG000              * set new primary diagnosis
            CALL      SETBRQ00              * set diagnosis in initial bed req
            UNPACK    KEY50,EMVCVIST,EMVCMNCD,EMVCSUBN:
                            EMVCEDAD,EMVCDATE,EMVCTIME,EMVCTYPE
            MOVE      SAVCTYPE,EMVCTYPE       * restore saved coding type
          ENDIF
.
          MOVE      EMUTY001,HISTTYPE
          CALL      WRTHIS00
.
          COMPARE   SIX,FORM2
          GOTO      EMRVCD35 IF NOT EQUAL
.         
          PACK      KEY15,EMVCVIST,EIGHT,SP70
          CALL      RSPMMTI2
EMRVCD32  CALL      RKPMMTI2
.         BRANCH    OVRCD,EMRVCD95
          IF        OVRCD=1
            MOVE      "1",EMRINVIN
            GOTO       EMRVCD95
          ENDIF
.
          MATCH     EMVCVIST,PMMIVISN
.         GOTO      EMRVCD95 IF NOT EQUAL
          IF        !@EQUAL
            MOVE      "1",EMRINVIN
            GOTO       EMRVCD95
          ENDIF
.
          MATCH     "8",PMMIRTYP
.         GOTO      EMRVCD95 IF NOT EQUAL
          IF        !@EQUAL
            MOVE      "1",EMRINVIN
            GOTO       EMRVCD95
          ENDIF
.
          MOVE      EMVCMNCD,DIM9
          MATCH     PMMIITEM,DIM9
          GOTO      EMRVCD32 IF NOT EQUAL
.
          MATCH     PMMISUBN,EMVCSUBN
          GOTO      EMRVCD32 IF NOT EQUAL
.
          MATCH     PMMIEDAD,EMVCEDAD
          GOTO      EMRVCD32 IF NOT EQUAL
.
          MATCH     PMMITDAT,EMVCDATE
          GOTO      EMRVCD32 IF NOT EQUAL
.
          MATCH     PMMISVTM,EMVCTIME
          GOTO      EMRVCD32 IF NOT EQUAL
.
          PACK      KEY15,PMMIVISN,PMMIRTYP,PMMITRAN,SP70
          CALL      DEPMMTI2
.
EMRVCD35  MATCH     "005",EMVCTYPE
          IF        @EQUAL
            MATCH     "1",WADCMIND
            IF        @EQUAL
              CALL      WEMDT000              * Diagnosis Free Text Update wah
            ELSE
              CALL      EMDT0000              * Diagnosis Free Text Update
            ENDIF
          ENDIF
.
          MATCH     "1",EMRDIAIN
          GOTO      EMRVCD95 IF EQUAL
.
          MOVE      ZERO,EXIT
          GOTO      EMRVCD99
.
EMRVCD40  CALL      UPEUDC00                * Update EMR Visit Codes' EMVCUDC1
          GOTO      EMRVCD99
.
EMRVCD70  MATCH     SP70,ADMISSNO
          IF        @EQUAL
            UNPACK    RECORDKY,ADMISSNO
          ENDIF
.
          CALL      GETVIS00
          BRANCH    EXIT,EMRVCD92
.
          CALL      CLPATMAS
          CALL      CLPMSPX2
          PACK      KEY8,URNUMBER,SP70
          CALL      RDMAST1
          IF        OVRCD=0
            MOVE      PURNO,KEY8
            CALL      RDPMPX21
            IF        OVRCD=1
              CALL      CLPMSPX2
            ENDIF
            GOTO      EMRVCD50
          ENDIF
.
          MOVE      ADMISSNO,KEY8
          CALL      RDEMUNK1
          BRANCH    OVRCD,EMRVCD94
.
          MOVE      ZEROUR,PURNO
          MOVE      EMUNDET1,PSNAME
          MOVE      EMUNDET2,PGNAME
          MOVE      SP70,PTITL
          MOVE      SP70,PBDATE
          MOVE      EMUNAGE,PSAGE
          MOVE      EMUNSEX,PSEX
. 
EMRVCD50  PACK      KEY14,RECORDKY,SP70
          CALL      RDEMVCD1
          IF        OVRCD=1
            CALL      CLRVCD00     * Clear all the file variables
          ENDIF
.
          MOVE      "Emergency Coding Maintenance",WEBTITLE
          CALL      WEBHED00   * Create Output File and Write HTML Page Header
          BRANCH    EXIT,EMRVCD99
.
          CALL      WEBBOD00   * Process Web Body
.
          CALL      WEBEND00   * Process End of HTML File
.
          MOVE      ONE,EXIT
          GOTO      EMRVCD99
.
EMRVCD91  MOVE      "Emergency Coding record does not exist",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      EMRVCD99
.
EMRVCD92  MOVE      "Invalid Admission Number.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      EMRVCD99
.
EMRVCD93  MOVE      "Invalid Form Action.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      EMRVCD99
.
EMRVCD94  MOVE      "Invalid U/R Number",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      EMRVCD99
.
EMRVCD95  CALL      VCDWAR00
          GOTO      EMRVCD99
.
EMRVCD99  RETURN
+
.-----------------------------------------------------------------
.         Update deleted fields for any AECC Class (EMVCTYPE=006)
.-----------------------------------------------------------------
DAEC0000  MOVE      "006",KEY3
          PACK      KEY14,DEMVIADM,KEY3,SP70
          CALL      RSEMVCD1
DAEC1000  CALL      RKEMVCD1
          BRANCH    OVRCD,DAEC9999
.
          MATCH     DEMVIADM,EMVCVIST
          GOTO      DAEC9999 IF NOT EQUAL     * different visit
.
          MATCH     KEY3,EMVCTYPE
          GOTO      DAEC9999 IF NOT EQUAL
.
          MOVE      USERID,EMVCWUSR
          MATCH     USERNAME,SP256
          IF        !@EQUAL
            PACK      KEY80,USERNAME,SP70
            CALL      RDWBSE7
            IF        OVRCD=0
              MOVE      WBSEUID,EMVCWUSR
            ENDIF
          ENDIF
.
          CALL      IBACLOCK
          PACK      EMVCLUDT,CCC,CYY,CMM,CDD  * Last update date
          REP       " 0",EMVCLUDT
          PACK      EMVCLUTM,CTIMEIS          * last update time
          MOVE      "1",EMVCDELE              * deleted flag
          CALL      UPEMVCD1
          GOTO      DAEC1000
.
DAEC9999  RETURN
+
.------------------------------------------------------------
.          VCDWAR00  Warn user that item may already have been invoiced
.------------------------------------------------------------
VCDWAR00  CALL      OPENHTML
          BRANCH    EXIT,VCDWAR90
.
          REP       " +",ADMISSNO
          REP       " +",URNUMBER
          PACK      REDIRECT,REDIRECT,ADM,ADMISSNO,UR,URNUMBER,SP70
          SQUEEZE   REDIRECT
          REP       "+ ",ADMISSNO
          REP       "+ ",URNUMBER
.
          MOVE      "Item may have been invoiced.", WEBTITLE
.
.         WRITE     HTMLFILE;"<script type=#"text/javascript#"> {";
          WRITE     HTMLFILE;"<script type=#"text/javascript#" ":
                             "src=#"../js/Standard.js#"></script>":
                             "<script type=#"text/javascript#" ":
                             "src=#"../js/Custom.js#"></script>":
                             "<script type=#"text/javascript#">  ";
.
          MATCH     "1",EMRINVIN
          IF        @EQUAL
            WRITE     HTMLFILE;" alert(#"",WEBTITLE,"#");";
          ENDIF
.
          MATCH     "1",EMRDIAIN
          IF        @EQUAL
            WRITE     HTMLFILE;" alert(#"Only Free Format Description from Primary Diagnosis is defaulted to Bed Request.#");";
          ENDIF
.
          IF        NEXTPAGE=3
            REP       " +",ADMISSNO
            REP       " +",URNUMBER
            PACK      REDIRECT,REDIRECT,ADM,ADMISSNO,UR,URNUMBER,SP70
            SQUEEZE   REDIRECT
            REP       "+ ",ADMISSNO
            REP       "+ ",URNUMBER
            WRITE     HTMLFILE;" location.href=#"",REDIRECT,"#";":
                               "</script>";
            GOTO      VCDWAR80
          ENDIF
.
          WRITE     HTMLFILE;" if (self.name.match(/PopUpFrame/)) {":
                             " reloadParentFrame();}":
                             " else { ":
                             "  opener.history.go(0);":
                             "  self.close(); }":
                             "</script>";
.
VCDWAR80  CALL      CLOSHTML
          MOVE      ONE,EXIT
          GOTO      VCDWAR99
.
VCDWAR90  DISPLAY   "*** Fifo Not Found ***"
          MOVE      ZERO,EXIT
.
VCDWAR99  RETURN
.
.------------------------------------------------------------
.          GETVIS00  Check ADMISSNO contents
.------------------------------------------------------------
GETVIS00  MATCH     SP70,ADMISSNO
          GOTO      GETVIS90 IF EQUAL
          MOVE      ADMISSNO,KEY8
          CALL      RDEMVIS1
          BRANCH    OVRCD,GETVIS90
          MOVE      ZERO,EXIT
          GOTO      GETVIS99
.
GETVIS90  MATCH     SP8,URNUMBER                            
          GOTO      GETVIS95 IF EQUAL
          PACK      KEY16,URNUMBER,Z70 
          CALL      RSEMVIS3
          CALL      RPEMVIS3
          BRANCH    OVRCD,GETVIS95
          MATCH     URNUMBER,EMVIURNO
          GOTO      GETVIS95 IF NOT EQUAL
          MOVE      EMVIADMN,ADMISSNO
          MOVE      ZERO,EXIT
          GOTO      GETVIS99
.
GETVIS95  MOVE      ONE,EXIT
.
GETVIS99  RETURN
.------------------------------------------------------------
.  Add a code
.------------------------------------------------------------
ADDCOD00  MOVE      ZERO,INJ
          MOVE      ZERO,HISTFLAG
          CALL      VERUSR00
          BRANCH    EXIT,ADDCOD99
.       
          PACK      KEY8,EMVCD001,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,ADDCOD91 
.
          CALL      CKDT0000                     * Check procedure date range
          BRANCH    EXIT,ADDCOD99
.
          PACK      KEY5,CATwl,EMVCD002,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,ADDCOD92 
.
          MOVE      ZERO,SEQFLAG
          PACK      KEY14,EMVCD001,SP70
          CALL      RSEMVCD1
ADDCOD04  CALL      RKEMVCD1
          IF        OVRCD=1
.           MOVE      ZERO,SEQFLAG
            GOTO      ADDCOD05
          ENDIF
.
          MATCH     EMVCD001,EMVCVIST
          IF        !@EQUAL
.           MOVE      ZERO,SEQFLAG
            GOTO      ADDCOD05
          ENDIF
.
          MATCH     "006",EMVCTYPE
          GOTO      ADDCOD04 IF EQUAL                * AECC Class
.
          MATCH     "004",EMVCTYPE
          IF        !@EQUAL
            MATCH     EMVCD005,EMVCMNCD
            GOTO      ADDCOD93 IF EQUAL
          ENDIF
.
          MOVE      ZERO,FORM2
          MOVE      EMVCD004,FORM2
          COMPARE   EMVCCSYS,FORM2
          IF        @EQUAL
            MOVE      ONE,SEQFLAG
.           GOTO      ADDCOD05
          ENDIF
.
          GOTO      ADDCOD04
.
ADDCOD05  MOVE      ONE,COUNTER
          PACK      KEY14,EMVCD001,EMVCD002,Z70
          CALL      RSEMVCD1
ADDCOD10  CALL      RPEMVCD1
          BRANCH    OVRCD,ADDCOD20
          MATCH     EMVCD001,EMVCVIST 
          GOTO      ADDCOD20 IF NOT EQUAL
.
          MOVE      EMVCUNIQ,COUNTER
          ADD       ONE,COUNTER 
.
ADDCOD20  MOVE      COUNTER,EMVCD003 
          REP       " 0",EMVCD003
.
          PACK      SAVKEY14,EMVCVIST,EMVCTYPE,EMVCUNIQ,SP70
          MATCH     SP70,UPDATEKY
          IF        !@EQUAL
            CALL      CHKKEY00                  * Check Last Update Date/time   
            COMPARE   ONE,EXIT
            IF        @EQUAL
              MOVE      ZERO,EXIT
              GOTO      ADDCOD99
            ENDIF
          ENDIF
.
          MOVE      USERID,EMVCWUSR
          MOVE      USERID,EMVCCUID          * user id created
          MATCH     USERNAME,SP256
          IF        !@EQUAL
            PACK      KEY80,USERNAME,SP70
            CALL      RDWBSE7
            IF        OVRCD=0
              MOVE      WBSEUID,EMVCWUSR
              MOVE      WBSEUID,EMVCCUID          * user id created
            ENDIF
          ENDIF
.
          CALL      IBACLOCK
          PACK      EMVCLUDT,CCC,CYY,CMM,CDD  * Last update date
          REP       " 0",EMVCLUDT
          PACK      EMVCLUTM,CTIMEIS          * last update time
          PACK      EMVCCDAT,CCC,CYY,CMM,CDD  * date created
          REP       " 0",EMVCCDAT
          PACK      EMVCCTIM,CTIMEIS          * time created
          MOVE      SP70,EMVCSUBN
          MOVE      SP70,EMVCEDAD
.
          CALL      VCDSAV00      * Moves input variables to file variables
          PACK      RECORDKY,EMVCVIST,EMVCTYPE,EMVCUNIQ
          PACK      KEY14,RECORDKY,SP70
          CALL      WREMVCD1      * Writes away the data
          CALL      SETEXT00      * Writes to EMR Text File for Emergency pat.  
.
          MATCH     "005",EMVCTYPE               * Diagnosis ?
          IF        !@EQUAL
            GOTO      ADDCOD90                   * This must be a procedure
          ENDIF
.
          PACK      KEY9,EMVCMNCD,SP70
          CALL      RDEMICD1
          BRANCH    OVRCD,ADDCOD92
.
          PACK      KEY10,EMIC9COD,SP70
          CALL      RSEMMX3
          CALL      RKEMMX3
          IF        OVRCD=1
            MOVE      ZERO,INJ
          ELSE
            MATCH     EMMXPDG,EMIC9COD
            IF        @EQUAL
              MOVE      ONE,INJ
            ELSE
              MOVE      ZERO,INJ
            ENDIF
          ENDIF
.
          MATCH     "1",INJ                      * Correct diagnosis code
          GOTO      ADDCOD80 IF NOT EQUAL
.
          MATCH     "005",EMVCTYPE               * Diagnosis
          GOTO      ADDCOD90 IF NOT EQUAL
.
          MATCH     "000",EMVCSEQU               * Primary disgnosis
          GOTO      ADDCOD90 IF NOT EQUAL
.
          MOVE      EMMXBRG,EMVIREGN             * Body region
          MOVE      EMMXNAT,EMVINATI             * Nature of injury
          CALL      UPEMVIS1
.
ADDCOD80  MATCH     "005",EMVCTYPE               * Diagnosis
          GOTO      ADDCOD90 IF NOT EQUAL
.
          MATCH     "000",EMVCSEQU               * Primary disgnosis
          GOTO      ADDCOD90 IF NOT EQUAL
.
          COMPARE   ONE,DIAGINDC
          GOTO      ADDCOD90 IF NOT EQUAL
.
          PACK      KEY25,EMVCVIST,ONE,SP70
          CALL      RSPMBRQ2
          CALL      RKPMBRQ2
          BRANCH    OVRCD,ADDCOD90      
.
          MATCH     EMVCVIST,PMBRVISN
          GOTO      ADDCOD90 IF NOT EQUAL
.
          MATCH     "1",PMBRRSTA
          GOTO      ADDCOD90 IF NOT EQUAL
.
.         MOVE      EMVCMNCD,PMBRDIAG
.         MOVE      EMVCFTXT,PMBRFTXT
.
          MOVE      EMVCFTXT,PMBRFTXT
          MATCH     "0",EMCNDEDI
          IF        @EQUAL
            MOVE      EMVCMNCD,PMBRDIAG
          ELSE
            MOVE      SP70,PMBRDIAG
          ENDIF
.
ADDCOD85  CALL      UPPMBRQ2
.
ADDCOD90  MOVE      ZERO,EXIT
          MOVE      ONE,HISTFLAG
.
          MATCH     "005",EMVCTYPE               * Diagnosis
          GOTO      ADDCOD99 IF NOT EQUAL
.         
          MATCH     "000",EMVCSEQU               * Primary disgnosis
          GOTO      ADDCOD99 IF NOT EQUAL
.           
          COMPARE   ONE,DIAGINDC
          GOTO      ADDCOD99 IF NOT EQUAL
.
          MATCH     "1",EMCNDEDI
          IF        @EQUAL
            MATCH     "1",WADCMIND
            IF        !@EQUAL
              GOTO      ADDCOD94
            ENDIF
          ENDIF
.
          GOTO      ADDCOD99
.
ADDCOD91  MOVE      "Invalid Visit Number",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      ADDCOD99
.
ADDCOD92  MOVE      "Emergency Coding Type does not exist",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      ADDCOD99
.
ADDCOD93  MOVE      "Emergency Coding record already exists",WEBTITLE
          CALL      WEBERR00
..          CALL      DISAC000
          MOVE      ONE,EXIT
          GOTO      ADDCOD99
.
ADDCOD94  IF        HISTFLAG = 1
            MOVE      EMUTY001,HISTTYPE
            CALL      WRTHIS00
          ENDIF
.
          CALL      OPENHTML
          BRANCH    EXIT,ADDCOD95
.         
          MOVE      "Only Free Format Description from Primary Diagnosis is defaulted to Bed Request.", WEBTITLE
.         
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                             " alert(#"",WEBTITLE,"#");":
                             " parent.location.href=#"",REDIRECT,"#";":
                             "}":
                             "</script>"
          CALL      CLOSHTML
          MOVE      ONE,EXIT
          GOTO      ADDCOD99
.
ADDCOD95  DISPLAY   "*** Fifo Not Found ***"
          MOVE      ZERO,EXIT
          GOTO      ADDCOD99
.
ADDCOD99  RETURN
.------------------------------------------------------------
.  Check Last Update date and Time
.------------------------------------------------------------
CHKKEY00  MOVE      ZERO,EXIT 
          PACK      KEY14,EMVCD001,EMVCD002,Z70
          CALL      RSEMVCD1
CHKKEY10  CALL      RPEMVCD1
          BRANCH    OVRCD,CHKKEY99
.
          MATCH     EMVCTYPE,EMVCD002
          GOTO      CHKKEY99 IF NOT EQUAL
.
          MATCH     EMVCWUSR,WEBUSERI
          GOTO      CHKKEY99 IF EQUAL

          CALL      IBACLOCK
          PACK      KEY8,CTIMEIS          
          PACK      CHECKALL,UPDATEKY,SP70
          REP       " 0",CHECKALL
          REP       ":0",CHECKALL
          PACK      CHECKCUR,EMVCLUDT,EMVCLUTM,SP70
          REP       " 0",CHECKCUR
          REP       ":0",CHECKCUR

          MATCH     CHECKCUR,CHECKALL
          GOTO      CHKKEY99 IF NOT LESS
. 
CHKKEY95  CALL      OPENHTML
          BRANCH    EXIT,CHKKEY98
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                             " alert(#"Patient details updated by":
                             " another user.\nThe screen will now be":
                             " refreshed. \nChanges to details":
                             " have not been retained.#");":
                             " if (window.name.substr(0,4)=='Hide' ) {":
                             " opener.history.go(0); ":
                             " self.close() } ":
                             " else {":
                             " history.go(-1)}":
                             "}":
                             "</script>"
          CALL      CLOSHTML
          MOVE      ONE,EXIT
          GOTO      CHKKEY99
.
CHKKEY98
CHKKEY99  PACK      KEY14,SAVKEY14,SP70
          CALL      RDEMVCD1
          RETURN
.------------------------------------------------------------
.  Update EMR Text File  
.------------------------------------------------------------
SETEXT00  BRANCH    EMVCCSYS,SETEXT99,SETEXT99,SETEXT99,SETEXT99
.
          PACK      KEY9,EMVCMNCD,SP70
          CALL      RDEMICD1
          BRANCH    OVRCD,SETEXT99
.
..          PACK      KEY9,EMIC10CD,SP70
..          CALL      RDPT10D1
..          BRANCH    OVRCD,SETEXT99
.
..          MOVE      DDESC,EMICDESC
.
          MOVE      SP70,KEY22
          MOVE      SP70,KEY48
          PACK      KEY8,EMVCVIST,SP70
          CALL      RDEMDCM1
          IF        OVRCD=1
            CALL      CLREMD00              * Clear the text file
            MOVE      EMVCVIST,EMDCADMI     * Updating diagnosis comments
.           UNPACK    EMICDESC,KEY48,KEY22                             *D-60868
            MATCH     SP70,EMVCFTXT
            IF        @EQUAL
              CALL      SPLDIA00                                       *I-60868
              MOVE      SP70,EMICDESC
              MOVE      KEY48,EMICDESC
              CALL      STEMD000              * Diagnosis file variable storage
              MATCH     SP70,KEY22
              IF        !@EQUAL
                MOVE      SP70,EMICDESC
                MOVE      KEY22,EMICDESC
                CALL      STEMD000            * Diagnosis file variable storage
              ENDIF
            ELSE
              CALL      SPLDFF00            * use the Free Format Text
              MOVE      SP70,EMICDESC
              MOVE      KEY50,EMICDESC
              CALL      STEMD000              * Diagnosis file variable storage
              MATCH     SP70,KEY50A
              IF        !@EQUAL
                MOVE      SP70,EMICDESC
                MOVE      KEY50A,EMICDESC
                CALL      STEMD000            * Diagnosis file variable storage
              ENDIF
            ENDIF
            CALL      WREMDCM1
          ELSE
            MOVE      EMVCVIST,EMDCADMI     * Updating diagnosis comments
.           UNPACK    EMICDESC,KEY48,KEY22                             *D-60868
            MATCH     SP70,EMVCFTXT
            IF        @EQUAL
              CALL      SPLDIA00                                       *I-60868
              MOVE      SP70,EMICDESC
              MOVE      KEY48,EMICDESC
              CALL      STEMD000              * Diagnosis file variable storage
              MATCH     SP70,KEY22
              IF        !@EQUAL
                MOVE      SP70,EMICDESC
                MOVE      KEY22,EMICDESC
                CALL      STEMD000            * Diagnosis file variable storage
              ENDIF
            ELSE
              CALL      SPLDFF00            * use the Free Format Text
              MOVE      SP70,EMICDESC
              MOVE      KEY50,EMICDESC
              CALL      STEMD000              * Diagnosis file variable storage
              MATCH     SP70,KEY50A
              IF        !@EQUAL
                MOVE      SP70,EMICDESC
                MOVE      KEY50A,EMICDESC
                CALL      STEMD000            * Diagnosis file variable storage
              ENDIF
            ENDIF
            CALL      UPEMDCM1
          ENDIF

SETEXT99  RETURN
.------------------------------------------------------------
.  Save Routen for Text 
.------------------------------------------------------------
STEMD000  MATCH     SP70,EMDCTXT1
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT1
            GOTO      STEMD999
          ENDIF
.
          MATCH     SP70,EMDCTXT2
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT2
            GOTO      STEMD999
          ENDIF
.
          MATCH     SP70,EMDCTXT3
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT3
            GOTO      STEMD999
          ENDIF
.
          MATCH     SP70,EMDCTXT4
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT4
            GOTO      STEMD999
          ENDIF
.
          MATCH     SP70,EMDCTXT5
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT5
            GOTO      STEMD999
          ENDIF
.
          MATCH     SP70,EMDCTXT6
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT6
            GOTO      STEMD999
          ENDIF
.
          MATCH     SP70,EMDCTXT7
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT7
            GOTO      STEMD999
          ENDIF
.
          MATCH     SP70,EMDCTXT8
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT8
            GOTO      STEMD999
          ENDIF
.
          MATCH     SP70,EMDCTXT9
          IF        @EQUAL
            MOVE      EMICDESC,EMDCTXT9
            GOTO      STEMD999
          ENDIF
.
STEMD999  RETURN
.------------------------------------------------------------
.  Clear Diagnisis File
.------------------------------------------------------------
CLREMD00  MOVE      SP70,EMDCTXT1
          MOVE      SP70,EMDCTXT2
          MOVE      SP70,EMDCTXT3
          MOVE      SP70,EMDCTXT4
          MOVE      SP70,EMDCTXT5
          MOVE      SP70,EMDCTXT6
          MOVE      SP70,EMDCTXT7
          MOVE      SP70,EMDCTXT8
          MOVE      SP70,EMDCTXT9
          MOVE      SP70,EMDCLUID
          MOVE      SP70,EMDCSPAR
.
CLREMR99  RETURN
.------------------------------------------------------------
.  Update code 
.------------------------------------------------------------
UPDCOD00  MOVE      ZERO,HISTFLAG
          CALL      VERUSR00
          BRANCH    EXIT,UPDCOD99
.
          PACK      KEY14,RECORDKY,SP70
          CALL      RDEMVCD1
          BRANCH    OVRCD,UPDCOD91
.
          PACK      KEY8,RECORDKY,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,UPDCOD91
.
          PACK      TESTKEY,EMVCLUDT,EMVCLUTM 
          MATCH     UPDATEKY,TESTKEY
          GOTO      UPDCOD92 IF NOT EQUAL
.
          MOVE      EMVCUNIQ,SAVEUNIQ       * save current record id
          CALL      CHKDGE00                * validate diagnosis    
          BRANCH    EXIT,UPDCOD99 
.
          MATCH     "1",PRIMDIAG        * if primary diag checked
          IF        @EQUAL
            CALL      CHGDG000          * clear existing primary diag. record
          ELSE
            MATCH   "000",EMVCSEQU      * if primary diag unchecked 
            IF      @EQUAL
              CALL    SETDG000          * set new primary diag.
            ENDIF
          ENDIF
.
          PACK      KEY14,RECORDKY,SP70
          CALL      RLEMVCD1       * locks the record
          CALL      VCDSAV00       * Moves input variables to file variables
          MATCH     "1",PRIMDIAG
          IF        @EQUAL
            MOVE      "000",EMVCSEQU
          ENDIF
.
          MOVE      WBSEUID,EMVCWUSR          * Last Update user
.
          CALL      IBACLOCK
          PACK      EMVCLUDT,CCC,CYY,CMM,CDD  * Last update date
          REP       " 0",EMVCLUDT
          PACK      EMVCLUTM,CTIMEIS          * last update time
.
          CALL      UPEMVCD1       * Writes away the data
          CALL      UUEMVCD1       * Unlocks the record
          CALL      WEDV0000           * Write EDWARD visit alteration
.
UPDCOD10  MATCH     "005",EMVCTYPE               * Primary diagnosis
          GOTO      UPDCOD90 IF NOT EQUAL
.
          MATCH     "000",EMVCSEQU               * Primary diagnosis
          GOTO      UPDCOD90 IF NOT EQUAL
.
          MOVE      EMVCVIST,KEY8
          CALL      RDEMVIS1                     * Read EMR visit record
          BRANCH    OVRCD,UPDCOD80
.
          PACK      KEY9,EMVCMNCD,SP70
          CALL      RDEMICD1                     * Get VEMD code
          BRANCH    OVRCD,UPDCOD80 
.
          PACK      KEY10,EMIC9COD,SP70
          CALL      RSEMMX3
          CALL      RKEMMX3
          BRANCH    OVRCD,UPDCOD80
          MATCH     EMMXPDG,EMIC9COD             * Same diagnosis
          GOTO      UPDCOD80 IF NOT EQUAL
.
          MOVE      EMMXBRG,EMVIREGN             * Update Body region
          MOVE      EMMXNAT,EMVINATI             * Update Nature of injury
          CALL      UPEMVIS1
.
UPDCOD80  PACK      KEY25,EMVCVIST,ONE,SP70
          CALL      RSPMBRQ2
          CALL      RKPMBRQ2
          BRANCH    OVRCD,UPDCOD90
.
          MATCH     EMVCVIST,PMBRVISN
          GOTO      UPDCOD90 IF NOT EQUAL
.
          MATCH     "1",PMBRRSTA
          GOTO      UPDCOD90 IF NOT EQUAL
.
.         MOVE      EMVCMNCD,PMBRDIAG
.         MOVE      EMVCFTXT,PMBRFTXT
.
          MOVE      EMVCFTXT,PMBRFTXT
          MATCH     "0",EMCNDEDI
          IF        @EQUAL
            MOVE      EMVCMNCD,PMBRDIAG
          ELSE
            MOVE      SP70,PMBRDIAG
          ENDIF
.
          CALL      UPPMBRQ2
.
UPDCOD90  MOVE      ZERO,EXIT
          MOVE      ONE,HISTFLAG
.
          MATCH     "005",EMVCTYPE               * Diagnosis
          GOTO      ADDCOD99 IF NOT EQUAL
.
          MATCH     "000",EMVCSEQU               * Primary disgnosis
          GOTO      ADDCOD99 IF NOT EQUAL
.
          MATCH     "1",EMCNDEDI
          IF        @EQUAL
            GOTO      UPDCOD94
          ENDIF
.
          GOTO      UPDCOD99
.
UPDCOD91  MOVE      "Emergency Coding record does not exist",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      UPDCOD99
.
UPDCOD92  MOVE      "Invalid Update Key",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      UPDCOD99
.
UPDCOD94  IF        HISTFLAG = 1
            MOVE      EMUTY001,HISTTYPE
            CALL      WRTHIS00
          ENDIF
.
          CALL      OPENHTML
          BRANCH    EXIT,UPDCOD95
.         
          MOVE      "Only Free Format Description from Primary Diagnosis is defaulted to Bed Request.", WEBTITLE
.         
.         WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
.                            " alert(#"",WEBTITLE,"#");":
.                            " parent.location.href=#"",REDIRECT,"#";":
.                            "}":
.                            "</script>"
.
          WRITE     HTMLFILE;"<script type=#"text/javascript#" ":
                             "src=#"../js/Standard.js#"></script>":
                             "<script type=#"text/javascript#" ":
                             "src=#"../js/Custom.js#"></script>":
                             "<script type=#"text/javascript#">  ":
                             " alert(#"",WEBTITLE,"#");":
                             " if (self.name.match(/PopUpFrame/)) {":
                             " reloadParentFrame();}":
                             " else { ":
                             "  opener.history.go(0);":
                             "  self.close(); }":
                             "</script>"
.
          CALL      CLOSHTML
          MOVE      ONE,EXIT
          GOTO      UPDCOD99
.         
UPDCOD95  DISPLAY   "*** Fifo Not Found ***"
          MOVE      ONE,EXIT
          GOTO      UPDCOD99
.
UPDCOD99  RETURN
+
.------------------------------------------------------------------------------
.  Update Emergency Visit Codes with Side Value (L/R/NA) from radio buttons
.------------------------------------------------------------------------------
UPEUDC00  MOVE      ZERO,ECKEYCNT
.
UPEUDC10  ADD       ONE,ECKEYCNT
          IF        ECKEYCNT>ECKEYEND
            GOTO       UPEUDC99
          ENDIF
.
          MATCH     SP70,ECRECKEY[ECKEYCNT]  * = corresponding UR
          GOTO      UPEUDC10 IF EQUAL
          UNPACK    ECRECKEY[ECKEYCNT],KEY1,DIM1,KEY14
.
          PACK      KEY14,KEY14,SP70
          CALL      RDEMVCD1
          BRANCH    OVRCD,UPEUDC10
.
          PACK      KEY8,KEY14,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,UPEUDC10
.
          MOVE      KEY1,FORM3
          MOVE      FORM3,EMVCUDC1
          CALL      UPEMVCD1
.
          CALL      WEDV0000           * Write EDWARD visit alteratio
          GOTO      UPEUDC10
.
UPEUDC99  RETURN
+
.------------------------------------------------------------
. Clear array of EMRVCD keys and Side Value (EMVCUDC1)
.------------------------------------------------------------
CLEUDC00  MOVE      ZERO,ECKEYEND
          MOVE      ONE,ARRCOUNT
.
CLEUDC10  MOVE      SP70,ECRECKEY[ARRCOUNT]
          ADD       ONE,ARRCOUNT
          IF        ARRCOUNT>99
            GOTO      CLEUDC99
          ENDIF
.
          GOTO      CLEUDC10
.
CLEUDC99  RETURN
+
.------------------------------------------------------------
.         Posting of Multiple Procedure codes
.------------------------------------------------------------
MULT0000  MOVE      ZERO,HISTFLAG 
          CALL      VERUSR00
          BRANCH    EXIT,MULT9999
.
..MULT0000  COMPARE   ZERO,PROCCNT 
..          GOTO      MULT9000 IF EQUAL
.
          MATCH     SP70,UPDATEKY
          IF        !@EQUAL
            CALL      CHKKEY00                  * Check Last Update Date/time
            COMPARE   ONE,EXIT
            IF        @EQUAL
              MOVE      ZERO,EXIT
              GOTO      MULT9999   
            ENDIF
          ENDIF
.
          IF        CLEARALL=1
            CALL      CLRALL00
          ENDIF
.
          MOVE      ZERO,ARRCOUNT
          WHILE     ARRCOUNT<PROCCNT
            ADD       ONE,ARRCOUNT
            MOVE      EMRPROCS[ARRCOUNT],EMVCD005
            MOVE      ZERO,DIAGINDC
            CALL      ADDCOD00
            BRANCH    EXIT,MULT9999
          DO
.
          IF        HISTFLAG = 1
             MOVE      EMUTY001,HISTTYPE
             CALL      WRTHIS00                * Write Hostory Record
          ENDIF
.
          CALL      WEDV0000           * Write EDWARD visit alteration
          MOVE      ZERO,EXIT
          GOTO      MULT9999
.
MULT9000  MOVE      "No procedures to add.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
.
MULT9999  RETURN
.------------------------------------------------------------
. Clear All Exiting Codes
.------------------------------------------------------------
CLRALL00  PACK      KEY14,EMVCD001,EMVCD002,SP70
          CALL      RSEMVCD1
CLRALL10  CALL      RKEMVCD1
          BRANCH    OVRCD,CLRALL99
          MATCH     EMVCD001,EMVCVIST
          GOTO      CLRALL99 IF NOT EQUAL
          MATCH     EMVCD002,EMVCTYPE
          GOTO      CLRALL99 IF NOT EQUAL
          PACK      KEY14,EMVCVIST,EMVCTYPE,EMVCUNIQ,SP70
          CALL      DEEMVCD1
          CALL      RSEMVCD1
          GOTO      CLRALL10
CLRALL99  RETURN
.------------------------------------------------------------
. Verify Username/password/security level for update type
.------------------------------------------------------------
VERUSR00  MOVE      EMUTY001,KEY5
          CALL      RDEMUTY1
          BRANCH    OVRCD,VERUSR95
.
          MATCH     "0",EMUTSID            * Security ID Required?
          GOTO      VERUSR70 IF EQUAL      * no - dont check for pwd/sec level
.
          PACK      KEY80,USERNAME,SP256   * check for valid user ID
          CALL      RDWBSE7
          IF        OVRCD=1
            REP       LOWUPP,KEY80
            CALL      RDWBSE7
            BRANCH    OVRCD,VERUSR85
          ENDIF
.
          MATCH     "0",EMUTPWD            * password required
          GOTO      VERUSR70 IF EQUAL      * no - check for name/sec level
.
.         check for user/password on apache file
.
          MOVE      USERNAME,SECUREID
          MOVE      PASSWORD,SECUREPW
          CALL      VFYUSR00
          BRANCH    EXIT,VERUSR80
.                                                                                      
VERUSR70  MATCH     SP70,EMUTSLV      * No security level set so ok to continue
          IF        @EQUAL 
            PACK      KEY18,WBSEUID,PRGID,SP70
            CALL      RDWBST1
            IF        OVRCD=1
              MOVE      WBSEUID,WBSTUID     * WBSTUID used in WRTHIS00
              MOVE      SP70,WBSTPRG
              MOVE      ZERO,WBSTLEV
            ENDIF
            MOVE      ZERO,EXIT 
            GOTO      VERUSR99
          ENDIF
.
          PACK      KEY18,WBSEUID,PRGID,SP70
          CALL      RDWBST1
          BRANCH    OVRCD,VERUSR75
.
          MOVE      ZERO,F2
          MOVE      EMUTSLV,FORM2     * level required>user sec level??
          IF        FORM2>WBSTLEV
            MOVE      "Security level inadquate for this update type",WEBTITLE
            GOTO      VERUSR98
          ENDIF
          MOVE      ZERO,EXIT
.
VERUSR75  MOVE      "Security invalid for this server",WEBTITLE
          GOTO      VERUSR98
.
VERUSR80  MOVE      "User ID/Password invalid",WEBTITLE
          GOTO      VERUSR98
.
VERUSR85  MOVE      "User ID invalid",WEBTITLE
          GOTO      VERUSR98
.
VERUSR95  MOVE      "Invalid Update Type",WEBTITLE
          GOTO      VERUSR98
.
VERUSR98  CALL      WEBERR00
          MOVE      ONE,EXIT
.
VERUSR99  RETURN
.------------------------------------------------------------
. Set Parameters for Emergency Coding
.------------------------------------------------------------
EMVCD000  MOVE      ZERO,EXIT
          UNPACK    QRYNAME,KEY5,KEY3
          MOVE      KEY3,F3
.
          IF        F3=7
            MATCH     SP70,QRYDATA
            GOTO      EMVCD999 IF EQUAL
            GOTO      EMVCD999 IF EOS
.
            UNPACK    QRYDATA,CDAY,KEY1,MTHNAM3,KEY1,CCENT,CYEAR
            CALL      SETMTH00              * Set CMON from MTHNAM3
            PACK      EMVCD007,CCENT,CYEAR,CMON,CDAY
            GOTO      EMVCD9999
          ENDIF
.
          STORE     QRYDATA,F3,EMVCD001,EMVCD002,EMVCD003,EMVCD004,EMVCD005:
                               EMVCD006,EMVCD007,EMVCD008,EMVCD009,EMVCD010:
                               EMVCD011,EMVCD012,EMVCD013,EMVCD014,EMVCD015:
                               EMVCD016,EMVCD017,EMVCD018,EMVCD019,EMVCD020:
                               EMVCD021,EMVCD022,EMVCD023,EMVCD024,EMVCD025:
                               EMVCD026,EMVCD027,EMVCD028,EMVCD029,EMVCD030:
                               EMVCD031,EMVCD032,EMVCD033
EMVCD999  RETURN
.------------------------------------------------------------
. Initialize's file data
.-----------------------------------------------------------
CLRVCD00  MOVE      SP70,EMVCVIST
          MOVE      SP70,EMVCTYPE
          MOVE      SP70,EMVCUNIQ
          MOVE      SP70,EMVCCSYS
          MOVE      SP70,EMVCMNCD
          MOVE      SP70,EMVCSEQU
          MOVE      SP70,EMVCDATE
          MOVE      SP70,EMVCTIME
          MOVE      SP70,EMVCUDC1
          MOVE      SP70,EMVCUDC2
          MOVE      SP70,EMVCUDC3
          MOVE      SP70,EMVCUDC4
          MOVE      SP70,EMVCUDR1
          MOVE      SP70,EMVCUDR2
          MOVE      SP70,EMVCUYN1
          MOVE      SP70,EMVCUYN2
          MOVE      SP70,EMVCUYN3
          MOVE      SP70,EMVCUYN4
          MOVE      ZERO,EMVCUDA1
          MOVE      ZERO,EMVCUDA2
          MOVE      ZERO,EMVCUDA3
          MOVE      ZERO,EMVCUDA4
          MOVE      SP70,EMVCUDD1
          MOVE      SP70,EMVCUDD2
          MOVE      SP70,EMVCUDD3
          MOVE      SP70,EMVCUDD4
          MOVE      SP70,EMVCUDT1
          MOVE      SP70,EMVCUDT2
          MOVE      SP70,EMVCUDT3
          MOVE      SP70,EMVCUDT4
          MOVE      SP70,EMVCEFLG 
          MOVE      SP70,EMVCLUDT 
          MOVE      SP70,EMVCLUTM 
          MOVE      SP70,EMVCWUSR 
          MOVE      SP70,EMVCSPAR 
          MOVE      SP70,EMVCDELE 
.
CLRVCD99  RETURN
.------------------------------------------------------------
. Moves cgi variables into file variables
.------------------------------------------------------------
VCDSAV00  MOVE      EMVCD001,EMVCVIST
          MOVE      EMVCD002,EMVCTYPE
          MOVE      EMVCD003,EMVCUNIQ
          MOVE      EMVCD004,EMVCCSYS
          MOVE      EMVCD005,EMVCMNCD
.
          PACK      EMVCD006,EMVCD006,SP70
          MATCH     SP70,EMVCD006
          IF        @EQUAL
            MOVE      SEQFLAG,EMVCSEQU
            REP       " 0",EMVCSEQU
          ELSE
            MOVE      EMVCD006,EMVCSEQU
          ENDIF
.
          MOVE      EMVCD007,EMVCDATE
          MOVE      EMVCD008,EMVCTIME
          MOVE      EMVCD009,EMVCUDC1
          MOVE      EMVCD010,EMVCUDC2
          MOVE      EMVCD011,EMVCUDC3
          MOVE      EMVCD012,EMVCUDC4
          MOVE      EMVCD013,EMVCUDR1
          MOVE      EMVCD014,EMVCUDR2
          MOVE      EMVCD015,EMVCUYN1
          MOVE      EMVCD016,EMVCUYN2
          MOVE      EMVCD017,EMVCUYN3
          MOVE      EMVCD018,EMVCUYN4
          MOVE      EMVCD019,EMVCUDA1
          MOVE      EMVCD020,EMVCUDA2
          MOVE      EMVCD021,EMVCUDA3
          MOVE      EMVCD022,EMVCUDA4
          MOVE      EMVCD023,EMVCUDD1
          MOVE      EMVCD024,EMVCUDD2
          MOVE      EMVCD025,EMVCUDD3
          MOVE      EMVCD026,EMVCUDD4
          MOVE      EMVCD027,EMVCUDT1
          MOVE      EMVCD028,EMVCUDT2
          MOVE      EMVCD029,EMVCUDT3
          MOVE      EMVCD030,EMVCUDT4
          MOVE      EMVCD031,EMVCEFLG 
          MOVE      EMVCD032,EMVCDELE 
          PACK      EMVCFTXT,EMVCD033,SP70,SP70
.
VCDSAV99  RETURN
.------------------------------------------------------------
. Emergency Coding fields 
.------------------------------------------------------------
EVCD0000  BRANCH    FLDITMNO,EVCD0100,EVCD0200,EVCD0300,EVCD0400,EVCD0500:
                             EVCD0600,EVCD0700,EVCD0800,EVCD0900,EVCD1000:
                             EVCD1100,EVCD1200,EVCD1300,EVCD1400,EVCD1500:
                             EVCD1600,EVCD1700,EVCD1800,EVCD1900,EVCD2000:
                             EVCD2100,EVCD2200,EVCD2300,EVCD2400,EVCD2500:
                             EVCD2600,EVCD2700,EVCD2800,EVCD2900,EVCD3000:
                             EVCD3100,EVCD3200,EVCD3300,EVCD3400,EVCD3500:
                             EVCD3600,EVCD3700,EVCD3800,EVCD3900,EVCD4000:
                             EVCD4100,EVCD4200,EVCD4300,EVCD4400,EVCD4500:
                             EVCD4600,EVCD4700,EVCD4800,EVCD4900,EVCD5000:
                             EVCD5100,EVCD5200,EVCD5300,EVCD5400,EVCD5500:
                             EVCD5600,EVCD5700,EVCD5800,EVCD5900,EVCD6000:
                             EVCD6100
          GOTO      EVCD9999
.
EVCD0100  PACK      EMVCVIST,EMVCVIST,SP70
          MATCH     SP70,EMVCVIST
          IF        @EQUAL 
            MOVE      ADMISSNO,EMVCVIST
          ENDIF
          WRITE     HTMLFILE;EMVCVIST;
          GOTO      EVCD9999
.
EVCD0200  MOVE      "wl",CATEGORY
          MOVE      EMVCTYPE,CODE
          CALL      CODITM00
          GOTO      EVCD9999
.
EVCD0300  WRITE     HTMLFILE;EMVCUNIQ; 
          GOTO      EVCD9999
.
EVCD0400  WRITE     HTMLFILE;EMVCCSYS; 
          GOTO      EVCD9999
.
EVCD0500  UNPACK    DIM127,DIM1,KEY1,DIM127
          MOVE      KEY1,F1
          BRANCH    F1,EVCD0550      
          CALL      LOKCOD00 
          WRITE     HTMLFILE;CODEDESC; 
          GOTO      EVCD9999
.
EVCD0550  WRITE     HTMLFILE;EMVCMNCD; 
          GOTO      EVCD9999
.
EVCD0600  WRITE     HTMLFILE;EMVCSEQU; 
          GOTO      EVCD9999
.
EVCD0700  MATCH     EMVCDATE,SP70
          GOTO      EVCD9999 IF EQUAL
          UNPACK    EMVCDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR; 
          GOTO      EVCD9999
.
EVCD0800  WRITE     HTMLFILE;EMVCTIME; 
          GOTO      EVCD9999
.
EVCD0900  WRITE     HTMLFILE;EMVCUDC1; 
          GOTO      EVCD9999
.
EVCD1000  WRITE     HTMLFILE;EMVCUDC2; 
          GOTO      EVCD9999
.
EVCD1100  WRITE     HTMLFILE;EMVCUDC3; 
          GOTO      EVCD9999
.
EVCD1200  WRITE     HTMLFILE;EMVCUDC4; 
          GOTO      EVCD9999
.
EVCD1300  WRITE     HTMLFILE;EMVCUDR1; 
          GOTO      EVCD9999
.
EVCD1400  WRITE     HTMLFILE;EMVCUDR2; 
          GOTO      EVCD9999
.
EVCD1500  WRITE     HTMLFILE;EMVCUYN1; 
          GOTO      EVCD9999
.
EVCD1600  WRITE     HTMLFILE;EMVCUYN2; 
          GOTO      EVCD9999
.
EVCD1700  WRITE     HTMLFILE;EMVCUYN3; 
          GOTO      EVCD9999
.
EVCD1800  WRITE     HTMLFILE;EMVCUYN4; 
          GOTO      EVCD9999
.
EVCD1900  WRITE     HTMLFILE;EMVCUDA1; 
          GOTO      EVCD9999
.
EVCD2000  WRITE     HTMLFILE;EMVCUDA2; 
          GOTO      EVCD9999
.
EVCD2100  WRITE     HTMLFILE;EMVCUDA3; 
          GOTO      EVCD9999
.
EVCD2200  WRITE     HTMLFILE;EMVCUDA4; 
          GOTO      EVCD9999
.
EVCD2300  WRITE     HTMLFILE;EMVCUDD1; 
          GOTO      EVCD9999
.
EVCD2400  WRITE     HTMLFILE;EMVCUDD2; 
          GOTO      EVCD9999
.
EVCD2500  WRITE     HTMLFILE;EMVCUDD3; 
          GOTO      EVCD9999
.
EVCD2600  WRITE     HTMLFILE;EMVCUDD4; 
          GOTO      EVCD9999
.
EVCD2700  WRITE     HTMLFILE;EMVCUDT1; 
          GOTO      EVCD9999
.
EVCD2800  WRITE     HTMLFILE;EMVCUDT2; 
          GOTO      EVCD9999
.
EVCD2900  WRITE     HTMLFILE;EMVCUDT3; 
          GOTO      EVCD9999
.
EVCD3000  WRITE     HTMLFILE;EMVCUDT4; 
          GOTO      EVCD9999
.
EVCD3100  WRITE     HTMLFILE;EMVCEFLG; 
          GOTO      EVCD9999
.
EVCD3200  PACK      RECORDKY,EMVCVIST,EMVCTYPE,EMVCUNIQ 
          WRITE     HTMLFILE;RECORDKY; 
          GOTO      EVCD9999
.
EVCD3300  PACK      UPDATEKY,EMVCLUDT,EMVCLUTM 
          WRITE     HTMLFILE;UPDATEKY; 
          GOTO      EVCD9999
.
EVCD3400  CALL      TABCOD00                * Table of Visit Coding
          GOTO      EVCD9999
.
EVCD3500  CALL      IBACLOCK
          PACK      DATE,CCC,CYY,CMM,CDD
          REP       " 0",DATE
          PACK      TIME,CTIMEIS
          REP       " 0",TIME
          PACK      KEY16,DATE,TIME,SP70
          WRITE     HTMLFILE;KEY16;
          GOTO      EVCD9999
.
EVCD3600  WRITE     HTMLFILE;EMVCDELE; 
          GOTO      EVCD9999
.
EVCD3700  CALL      COMP0000
          WRITE     HTMLFILE;EXIT;
          GOTO      EVCD9999
.
EVCD3800  WRITE     HTMLFILE;EMVCFTXT;
          GOTO      EVCD9999
.
EVCD3900  CALL      GETEFF00
          GOTO      EVCD9999
.
EVCD4000  CALL      TABCWA00                * Table of Visit Coding wahealth
          GOTO      EVCD9999
.
EVCD4100  MATCH     "1",PTCNHCLM
          IF        !@EQUAL
            UNPACK    DIM127,D1,KEY1,DIM127
            GOTO      EVCD9999
          ENDIF
.         GOTO      EVCD9999 IF NOT EQUAL
.
          MOVE      "CL",CATEGORY
          MOVE      EMVICOMP,CODE
          CALL      CODITM00
          GOTO      EVCD9999
.
EVCD4200  MATCH     "1",PTCNHHFT
          GOTO      EVCD9999 IF NOT EQUAL
.
          MATCH     SP70,EMVIFUND
          IF        !@EQUAL & !@EOS
            WRITE     HTMLFILE;EMVIFUND,SLASH,EMVITABL;
          ENDIF
          GOTO      EVCD9999
.
EVCD4300  CALL      DOCHIS00
          GOTO      EVCD9999
.
EVCD4400  PACK      KEY14,EMVIFUND,EMVITABL,SP70
          CALL      RDFUND1
          BRANCH    OVRCD,EVCD9999
.
          WRITE     HTMLFILE;PTHFBCAT;
. 
          GOTO      EVCD9999
.
EVCD4500  CALL      VALM7500
          GOTO      EVCD9999
.
EVCD4600  CALL      VALDRV00
          GOTO      EVCD9999
.
EVCD4700  CALL      VALMIT00
          GOTO      EVCD9999
.
EVCD4800  CALL      VALMSC00
          GOTO      EVCD9999
.
EVCD4900  CALL      VALPRI00
          GOTO      EVCD9999
.
EVCD5000  UNPACK    DIM127,D1,KEY1,DIM127
          MOVE      ZERO,F1
          MOVE      KEY1,F1
.
          PACK      KEY32,EMVIADMN,EMVIDOCT,TILDA14
          CALL      RSEMHIS2
EVCD5010  CALL      RPEMHIS2                 * read previous record
          BRANCH    OVRCD,EVCD9999           * error
.
          MOVE      EMVIADMN,KEY8
          MATCH     KEY8,EMHIVIS             * same visit number ?
          GOTO      EVCD9999 IF NOT EQUAL    * no - error
.
          MATCH     EMVIDOCT,EMHIDOC         * same Doctor code?
          GOTO      EVCD5010 IF NOT EQUAL    * no - error
.
          MATCH     "ALDOC",EMHIUPT          * Doctor Update type
          GOTO      EVCD5010 IF NOT EQUAL    * no - error
. 
          BRANCH    F1,EVCD5020
.
          MATCH     SP70,EMHIDSD
          GOTO      EVCD9999 IF EQUAL
          UNPACK    EMHIDSD,CCENT,CYEAR,CMON,CDAY
          MATCH     "00",CMON
          GOTO      EVCD9999 IF EQUAL
          MATCH     "00",CDAY
          GOTO      EVCD9999 IF EQUAL
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          WRITE     HTMLFILE;CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR;
          GOTO      EVCD9999
.
EVCD5020  UNPACK    EMHIDST,HOUR,MIN,SEC
          PACK      EMRHITIM,HOUR,COLON,MIN,COLON,SEC
          REP       " 0",EMRHITIM
          WRITE     HTMLFILE;EMRHITIM;       
          GOTO      EVCD9999
.
EVCD5100  UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
          PACK      AGEDATE,CCC,CYY,CMM,CDD
          CALL      CALCAGE
          WRITE     HTMLFILE;PSAGEYRS;
          GOTO      EVCD9999
.
EVCD5200  MATCH     SP70,EMVIDOCT
          GOTO      EVCD5210 IF EQUAL
.
          PACK      KEY10,EMVIDOCT,SP70
          CALL      RDPMHCP1
          BRANCH    OVRCD,EVCD5210
.
          MATCH     SP70,PMHCUDF1          
          GOTO      EVCD5210 IF EQUAL
.
          MOVE      "R5",CATEGORY
          MOVE      PMHCUDF1,CODE
          CALL      CODITM00
.
          GOTO      EVCD9999
.
EVCD5210  UNPACK    DIM127,D1,KEY1,DIM127
          GOTO      EVCD9999
.
EVCD5300  CALL      EMINHR00
          GOTO      EVCD9999
.
EVCD5400  PACK      KEY17,EMVIURNO,TWO,SP70
          CALL      RSPTMI18
          CALL      RKPTMI18
          BRANCH    OVRCD,EVCD9999
.
          COMPARE   TWO,ASTAT
          GOTO      EVCD9999 IF NOT EQUAL
.
          WRITE     HTMLFILE;ONE;
          GOTO      EVCD9999 
.
EVCD5500  MOVE      NO,YESNO
          IF        PUYN2=2
            MOVE      YES,YESNO
          ENDIF
          WRITE     HTMLFILE;YESNO;
          GOTO      MASF9999
.
EVCD5600  MATCH     SP70,EMVITRDT
          GOTO      MASF9999 IF EQUAL
.
          MATCH     SP70,EMVITRTM
          GOTO      MASF9999 IF EQUAL
.
          MATCH     SP70,EMVIDRDT
          GOTO      MASF9999 IF EQUAL
.
          MATCH     SP70,EMVIDRTM
          GOTO      MASF9999 IF EQUAL
.
          MOVE      EMVITRDT,FIRSTDAT
          MOVE      EMVITRTM,D5
          REP       ": ",D5
          SQUEEZE   D5
          PACK      FIRSTIME,D5,SP70
.
          MOVE      EMVIDRDT,LASTDATE
          MOVE      EMVIDRTM,D5
          REP       ": ",D5
          SQUEEZE   D5
          PACK      LASTTIME,D5,SP70
.
          CALL      TIMEDIFF
.
          IF        CALCTIME < 5
            WRITE     HTMLFILE;ONE;
          ENDIF
.
          GOTO      MASF9999
.
EVCD5700  PACK      KEY14,EMVIADMN,ZERO,ZERO,FIVE,SP70
          CALL      RSEMVCD1
          CALL      RKEMVCD1
          BRANCH    OVRCD,EVCD9999
.
          MATCH     DEMVIADM,EMVCVIST
          GOTO      MASF9999 IF NOT EQUAL
.
          MATCH     "005",EMVCTYPE
          GOTO      MASF9999 IF NOT EQUAL
.
          MATCH     "Fracture",EMVCFTXT
          GOTO      EVCD5750 IF EQUAL
.
          MATCH     "Dislocation",EMVCFTXT
          GOTO      EVCD5750 IF EQUAL
.
          GOTO      MASF9999
.
EVCD5750  WRITE     HTMLFILE;ONE;
.
          GOTO      MASF9999
.
EVCD5800  MATCH     SP70,EMVITRDT
          GOTO      EVCD9999 IF EQUAL
.
.         MOVE      EMVITRDT,WORKDATE
.         ADD       SEVEN,WORKDATE
          MOVE      EMVITRDT,SAVEDAT1
          MOVE      EMVIADMN,SAVEKEY8
.
          PACK      KEY26,EMVIURNO,SP1,ONE,SP70
          CALL      RSPTVIS4 
EVCD5810  CALL      RKPTVIS4
          BRANCH    OVRCD,EVCD5850
.
          MATCH     EMVIURNO,PVIURNO
          GOTO      EVCD5850 IF NOT EQUAL
.
          MATCH     " 1",PTVITYPE
          GOTO      EVCD5850 IF NOT EQUAL
.
          PACK      KEY8,PVIBILL,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,EVCD5810
.
          MATCH     SP70,EMVIDDAT
          GOTO      EVCD5810 IF EQUAL
.
          MATCH     EMVIDDAT,SAVEDAT1
          GOTO      EVCD5850 IF LESS
.
          MOVE      EMVIDDAT,WORKDATE
          ADD       SEVEN,WORKDATE
.
          MATCH     WORKDATE,SAVEDAT1
          GOTO      EVCD5890 IF LESS
.
          MATCH     WORKDATE,SAVEDAT1
          GOTO      EVCD5890 IF EQUAL

          GOTO      EVCD5810
.
EVCD5850  PACK      KEY26,EMVIURNO,SP1,THREE,SP70
          CALL      RSPTVIS4
EVCD5860  CALL      RKPTVIS4
          BRANCH    OVRCD,EVCD5895
.
          MATCH     EMVIURNO,PVIURNO
          GOTO      EVCD5895 IF NOT EQUAL
.
          MATCH     " 3",PTVITYPE
          GOTO      EVCD5895 IF NOT EQUAL
.
          PACK      KEY8,PVIBILL,SP70
          CALL      RDDSCH1
          BRANCH    OVRCD,EVCD5860
.
          MATCH     SP70,DDATE
          GOTO      EVCD5860 IF EQUAL
.
          MATCH     DDATE,SAVEDAT1
          GOTO      EVCD5860 IF LESS
.
          MOVE      DDATE,WORKDATE
          ADD       SEVEN,WORKDATE
.
          MATCH     WORKDATE,SAVEDAT1
          GOTO      EVCD5890 IF LESS
.
          MATCH     WORKDATE,SAVEDAT1
          GOTO      EVCD5890 IF EQUAL
.
          GOTO      EVCD5860
.
EVCD5890  WRITE     HTMLFILE;ONE;
.
          GOTO      MASF9999
.
EVCD5895  PACK      KEY8,SAVEKEY8,SP70
          CALL      RDEMVIS1
.
          GOTO      EVCD9999
.
EVCD5900  MATCH     SP70,EMVIDRDT
          GOTO      EVCD9999 IF EQUAL
.
          MATCH     SP70,EMVIDRTM
          GOTO      EVCD9999 IF EQUAL
.
          MATCH     SP70,EMVIUD01
          GOTO      EVCD9999 IF EQUAL
.
          MATCH     SP70,EMVIUT01
          GOTO      EVCD9999 IF EQUAL 
.
          MOVE      EMVIDRDT,FIRSTDAT
          MOVE      EMVIDRTM,D5
          REP       ": ",D5
          SQUEEZE   D5
          PACK      FIRSTIME,D5,SP70
.
          MOVE      EMVIUD01,LASTDATE
          MOVE      EMVIUT01,D5
          REP       ": ",D5
          SQUEEZE   D5
          PACK      LASTTIME,D5,SP70
.
          CALL      TIMEDIFF
.
          WRITE     HTMLFILE;CALCTIME;
.
          GOTO      EVCD9999 
.
EVCD6000  MATCH     SP70,EMVIDRDT
          GOTO      EVCD9999 IF EQUAL
.
          MATCH     SP70,EMVIDRTM
          GOTO      EVCD9999 IF EQUAL
.
          PACK      KEY17,DEMVIADM,ZERO,ONE,ONE,SP70
          CALL      RSVSMDT1
EVCD6010  CALL      RKVSMDT1
          BRANCH    OVRCD,EVCD9999
.
          MATCH     DEMVIADM,VSMDVISN
          GOTO      EVCD9999 IF NOT EQUAL
. 
          MATCH     "011",VSMDTYPE
          GOTO      EVCD9999 IF NOT EQUAL
.
          MATCH     SP70,VSMDDATE
          GOTO      EVCD6010 IF EQUAL
.
          MATCH     SP70,VSMDTIME
          GOTO      EVCD6010 IF EQUAL
.
          MOVE      EMVIDRDT,FIRSTDAT
          MOVE      EMVIDRTM,D5
          REP       ": ",D5
          SQUEEZE   D5
          PACK      FIRSTIME,D5,SP70
.
          MOVE      VSMDDATE,LASTDATE
          MOVE      VSMDTIME,D5
          REP       ": ",D5
          SQUEEZE   D5
          PACK      LASTTIME,D5,SP70
.
          CALL      TIMEDIFF
.
          WRITE     HTMLFILE;CALCTIME;
.
          GOTO      EVCD9999
.
EVCD6100  CALL      VALEMP00
          GOTO      EVCD9999
.
EVCD9999  RETURN
.
.------------------------------------------------------------
.         Check for Compensable patient
.------------------------------------------------------------
COMP0000  MATCH     SP70,EMVICOMP
          GOTO      COMP9000 IF EQUAL
.
          PACK      KEY5 WITH CODECL,EMVICOMP
          CALL      RDCODE1
          BRANCH    OVRCD OF COMP9000
.
.         Check the indicators for a W, M, or V (these are the claims)
.
          MOVE      ZERO,FORM2
COMP1000  ADD       ONE,FORM2
          COMPARE   SIX,FORM2
          GOTO      COMP9000 IF NOT LESS
.
          LOAD      ANS USING FORM2 OF TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
.
          CMATCH    "W",ANS
          GOTO      COMP2000 IF EQUAL
.
          CMATCH    "M",ANS
          GOTO      COMP2000 IF EQUAL
.
          CMATCH    "V",ANS
          GOTO      COMP2000 IF EQUAL
.
          GOTO      COMP1000
.
.         We have a claim
.
COMP2000  MOVE      ONE,EXIT
          GOTO      COMP9999
.
COMP9000  MOVE      ZERO,EXIT
COMP9999  RETURN
+
.------------------------------------------------------------
.  Table of Visit Coding
.------------------------------------------------------------
TABCOD00  MOVE      ZERO,FORM2CNT      * init radio button count
          UNPACK    DIM127,KEY1,OBJNAME,KEY1,EMVCD002,KEY1,EMVCD004,DIM127
          PACK      KEY14,ADMISSNO,EMVCD002,SP70
          CALL      RSEMVCD1
TABCOD10  CALL      RKEMVCD1
          BRANCH    OVRCD,TABCOD99
          MATCH     ADMISSNO,EMVCVIST
          GOTO      TABCOD99 IF NOT EQUAL
          MATCH     EMVCD002,EMVCTYPE
          GOTO      TABCOD99 IF NOT EQUAL
.
          MATCH     SP70,EMVCD004
          IF        !@EQUAL & !@EOS
            MOVE      ZERO,FORM2
            MOVE      EMVCD004,FORM2
            COMPARE   FORM2,EMVCCSYS
            GOTO      TABCOD99 IF NOT EQUAL            
          ENDIF
.
          CALL      LOKCOD00                * Lookup Code to get description
          BRANCH    EXIT,TABCOD99
.
          MATCH      "1",EMVCEFLG
          IF         @EQUAL
            MOVE     "Yes",EFLGDESC
          ELSE 
            MOVE     "No",EFLGDESC
          ENDIF
.
TABCOD20  MOVE      SP70,WBSENAM
          MATCH     SP70,EMVCWUSR
          IF        !@EQUAL
            PACK      KEY10,EMVCWUSR,SP70
            CALL      RDWBSE1
            IF        OVRCD=1
              MOVE      EMVCWUSR,WBSENAM
            ENDIF
          ENDIF
.
          PACK      RECORDKY,EMVCVIST,EMVCTYPE,EMVCUNIQ
.
.-------- Get HCP name for EMVCEDAD
.
          MATCH     SP70,EMVCEDAD
          IF        @EQUAL
            MOVE      SP70,DOCFNAME          * Blank attendind dr
            GOTO      TABCOD50
          ENDIF
.
          PACK      KEY10,EMVCEDAD,SP70
          CALL      RDPMHCP1
          BRANCH    OVRCD,TABCOD30           * Check if it's the linked doctor
.
          MOVE      PMHCTITL,FMTTITLE
          MOVE      PMHCGNAM,FMTGNAME
          MOVE      PMHCSNAM,FMTSNAME
          CALL      DOCNM000
          GOTO      TABCOD50
.
.-------- Check if EMVCEDAD is the actual linked doctor code (<= 6 chars code)
TABCOD30  MOVE      EMVCEDAD,DIM10
          STRIP     DIM10
          MOVELPTR  DIM10,F2
          IF        F2 > 6
            GOTO      TABCOD31                   * HCP code > 6 chars code 
          ENDIF
.
          PACK      KEY16,EMVCEDAD,SP70          
          CALL      RSPMHCP4
          CALL      RKPMHCP4
          BRANCH    OVRCD,TABCOD31
.
          MATCH     EMVCEDAD,PMHCLDOC            * Same linked doctor code?
          GOTO      TABCOD31 IF NOT EQUAL        * No
.
          MOVE      PMHCTITL,FMTTITLE            * Yes, format Doctor's name
          MOVE      PMHCGNAM,FMTGNAME
          MOVE      PMHCSNAM,FMTSNAME
          CALL      DOCNM000
          GOTO      TABCOD50
          
TABCOD31  MOVE      "Invalid HCP - ",DOCFNAME
          ENDSET    DOCFNAME
          APPEND    EMVCEDAD,DOCFNAME
          RESET     DOCFNAME
.
TABCOD50  MATCH     "000",EMVCSEQU
          IF        @EQUAL
            MOVE      "Primary",KEY10
          ELSE
            MOVE      "Additional",KEY10
          ENDIF
. 
          WRITE     HTMLFILE;OBJNAME,".addRow(#"",KEY10:                  * 0
                             "#",#"",EMVCCSYS:
                             "#",#"",EMVCMNCD:
                             "#",#"",CODEDESC:  
                             "#",#"",EMVCDATE:  
                             "#",#"",EMVCTIME:  
                             "#",#"",EFLGDESC:
                             "#",#"&nbsp;",WBSENAM:
                             "#",#"",EMVCLUDT:
                             "#",#"",EMVCLUTM:
                             "#",#"javascript:ShowDetail('",URNUMBER:     * 10
                                   "','",RECORDKY,"','",EMVCTYPE,"')": 
                             "#",#"",ICDDESC:  
                             "#",#"",EMVCDATE,EMVCTIME:  
                             "#",#"",EMVCLUDT,EMVCLUTM;
.
          MATCH     "1",EMVCDELE
          IF        @EQUAL
            WRITE     HTMLFILE;"#",#"","ShowStrike";
          ELSE
            WRITE     HTMLFILE;"#",#"",SP1;
          ENDIF
.
          WRITE     HTMLFILE;"#",#"",EMVCUDA1;                            * 15
.
          WRITE     HTMLFILE;"#",#"",DOCFNAME;
.
          WRITE     HTMLFILE;"#",#"javascript:DeleteDetail('",URNUMBER:
                             "','",RECORDKY,"')";
.
          MATCH     SP100,EMVCFTXT
          IF        @EQUAL | @EOS
            WRITE     HTMLFILE;"#",#"",ICDDESC;
          ELSE
            WRITE     HTMLFILE;"#",#"",EMVCFTXT;
          ENDIF
.

          WRITE     HTMLFILE;"#",#"",EMVCMNCD,"&nbsp;&nbsp;&nbsp;",ICDDESC:
                             "#",#"",EMVCFTXT;                            * 20
.
.         Output NZ only fields...
.
          IF        PTCNHDPS=1
            MOVE      FORM2CNT,KEY2
            REP       " 0",KEY2
.
            MOVE      THREE,F3        * Default Side Value to 3=N/A
            MOVE      EMVCUDC1,F3
.
            PACK      SAVKEY14,EMVCVIST,EMVCTYPE,EMVCUNIQ,SP70
            WRITE     HTMLFILE;"#",#"<table border=0 width=100% cellspacing=0":
                      " cellpadding=0><tr>":
                      "<td align=right><input type=radio class=Mandatory":
                      " name=evcrdb",KEY2," value='1_",SAVKEY14,"' ";
            IF        F3=1
              WRITE     HTMLFILE;"checked";
            ENDIF 
            WRITE     HTMLFILE;"></td>":
                      "<td align=right><input type=radio class=Mandatory":
                      " name=evcrdb",KEY2," value='2_",SAVKEY14,"' ";
            IF        F3=2
              WRITE     HTMLFILE;"checked";
            ENDIF
            WRITE     HTMLFILE;"></td>":
                      "<td align=right><input type=radio class=Mandatory":
                      " name=evcrdb",KEY2," value='3_",SAVKEY14,"' ";
            IF        F3=3
              WRITE     HTMLFILE;"checked";
            ENDIF
            WRITE     HTMLFILE;"></td>":
                      "</tr></table>";
.
            ADD       ONE,FORM2CNT
          ENDIF
.
          WRITE     HTMLFILE;"#")"
.
          GOTO      TABCOD10
.     
TABCOD99  RETURN
+
.------------------------------------------------------------
.  Lookup Code to get description
.------------------------------------------------------------
LOKCOD00  BRANCH    EMVCCSYS,LOKCOD10,LOKCOD20,LOKCOD30,LOKCOD40,LOKCOD50:
                             LOKCOD60
.
.   User Defined
.
          GOTO      LOKCOD99
.            
LOKCOD10  PACK      KEY9,EMVCMNCD,SP70
          MOVE      EMVCDATE,ICDRDDTE                                  *I-63036
          CALL      RDPTICD1                             * was RDICD1  *C-63036
          IF        OVRCD=1
            MOVE      "Invalid Diagnoses Code ",CODEDESC
            GOTO      LOKCOD99
          ENDIF
.
          MOVE      DDESC,CODEDESC
          GOTO      LOKCOD99
.
LOKCOD20  PACK      KEY9,EMVCMNCD,SP70
          MOVE      EMVCDATE,ICDRDDTE                                  *I-63036
          CALL      RDPTICO1                             * was RDICO1  *C-63036
          IF        OVRCD=1
            MOVE      "Invalid Procedure Code ",CODEDESC
            GOTO      LOKCOD99
          ENDIF
.
          MOVE      ODESC,CODEDESC
          GOTO      LOKCOD99
.
LOKCOD30  PACK      KEY17,EMVCMNCD,EMVCDATE,SP70
          CALL      PATITMRD
          IF        OVRCD=1
            MOVE      "Invalid MBS Code",CODEDESC
            GOTO      LOKCOD99
          ENDIF
.
          MOVE      IDESC,CODEDESC
          GOTO      LOKCOD99
.
LOKCOD40  PACK      KEY9,EMVCMNCD,SP70
          CALL      RDEMPRO1
          IF        OVRCD=1
            MOVE      "Invalid Emergency Procedure Code",CODEDESC
            GOTO      LOKCOD99
          ENDIF
.
          MOVE      EMPRDESC,CODEDESC
          GOTO      LOKCOD99
.
LOKCOD50  PACK      KEY9,EMVCMNCD,SP70
          CALL      RDEMICD1
          IF        OVRCD=1
            MOVE      "Invalid Emergency Diagnosis Code",CODEDESC
            GOTO      LOKCOD99
          ENDIF
          MOVE      EMICDESC,CODEDESC
.
..          PACK      KEY9,EMIC10CD,SP70
..          CALL      RDPT10D1
..          IF        OVRCD=1
..            MOVE      "Invalid ICD10 Diagnoses Code ",ICDDESC
..            GOTO      LOKCOD99
..          ENDIF
..          MOVE      DDESC,ICDDESC
          MOVE      EMICDESC,ICDDESC

.
          GOTO      LOKCOD99
.
LOKCOD60  MOVE      EMVCMNCD,DIM9
          PACK      KEY22,SP1,ZERO,DIM9,EMVCSUBN,Z70
          CALL      RSPRIT1
LOCOD65   CALL      RPPRIT1
          BRANCH    OVRCD,LOKCOD69
.
          COMPARE   ZERO,PRITFLAG
          GOTO      LOKCOD69 IF NOT EQUAL
.
          MATCH     DIM9,PRITITMN
          GOTO      LOKCOD69 IF NOT EQUAL
.
          MATCH     EMVCSUBN,PRITSUBN
          GOTO      LOKCOD69 IF NOT EQUAL
.
          MATCH     PRITDAT1,EMVCDATE
          GOTO      LOKCOD69 IF LESS 
.
          MOVE      PRITDESC,CODEDESC
          GOTO      LOKCOD99
.
LOKCOD69  MOVE      "Invalid Emergency Procedure Code ",CODEDESC
          GOTO      LOKCOD99
.
LOKCOD99  MOVE      ZERO,EXIT
          RETURN
.------------------------------------------------------------
.         CHKDG000  Checks diagnoses for body injury data requirement 
.------------------------------------------------------------
CHKDG000  PACK      KEY9,EMVCD005,SP70
          CALL      RDEMICD1
          BRANCH    OVRCD,CHKDG900
.
          PACK      KEY10,EMIC9COD,SP70    
          CALL      RSEMMX3    * Check Code Entered is a Injury Code
          CALL      RKEMMX3    * Exist if Not Injury Code
          BRANCH    OVRCD,CHKDG900
          MATCH     EMIC9COD,EMMXPDG
          GOTO      CHKDG900 IF NOT EQUAL
.
          MOVE      "005",KEY3
          PACK      KEY17,ADMISSNO,KEY3,SP70
          CALL      RSEMVCD2   * Determine Primary Diagnosis
CHKDG100  CALL      RKEMVCD2
          BRANCH    OVRCD,CHKDG900
          MATCH     ADMISSNO,EMVCVIST
          GOTO      CHKDG900 IF NOT EQUAL
          MATCH     "005",EMVCTYPE
          GOTO      CHKDG900 IF NOT EQUAL
.
          COMPARE   ONE,EMVCCSYS                 * ICD10 diagnosis?
          GOTO      CHKDG200 IF EQUAL
          COMPARE   FIVE,EMVCCSYS                * EMR Diagnosis?
          GOTO      CHKDG200 IF EQUAL
          GOTO      CHKDG900
.
CHKDG200  PACK      KEY9,EMVCMNCD,SP70
          CALL      RDEMICD1
          BRANCH    OVRCD,CHKDG900
.
          PACK      KEY10,EMIC9COD,SP70    
          CALL      RSEMMX3
          CALL      RKEMMX3    * Check Injury Matrix for Diagnosis
          BRANCH    OVRCD,CHKDG900
          MATCH     EMIC9COD,EMMXPDG
          GOTO      CHKDG900 IF NOT EQUAL
          MOVE      ONE,EXIT   * Requires Injury Data
          GOTO      CHKDG999
.
CHKDG900  MOVE      TWO,EXIT   * Doesn't require Injury Data
          GOTO      CHKDG999
.
CHKDG999  RETURN
.------------------------------------------------------------
.   Stationary Codes Selection List        Called by MAIN0000
.------------------------------------------------------------
SCODL000  PACK      KEY6,SP6
          CALL      RSIBTH1
SCODL100  CALL      RKIBTH1
          BRANCH    OVRCD,SCODL999
.
          IF        IBTHSTFM<>SEVEN
                                            * (stationary type 2 = MR5)
            GOTO      SCODL100
          ENDIF
.
          LOAD      F1,IBTHSTFM,TWO,ONE,THREE,THREE,THREE,THREE,ONE
          COMPARE   F1,ONE                  * (Pvitype=1 which is A&E)
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=#"",IBTHSCOD,"#">":
                               IBTHDESC,"</option>";
          ENDIF
          GOTO      SCODL100

SCODL999  RETURN
.------------------------------------------------------------
.         CLPRC000
.------------------------------------------------------------
CLPRC000  MOVE      ZERO,PROCCNT
          MOVE      ONE,ARRCOUNT
.
CLPRC100  MOVE      SP70,EMRPROCS[ARRCOUNT]
          ADD       ONE,ARRCOUNT
          IF        ARRCOUNT>99
            GOTO      CLPRC999
          ENDIF
          GOTO      CLPRC100
.
CLPRC999  RETURN
.------------------------------------------------------------
. Check changed Diagnosis is valid and does not already exists.
.------------------------------------------------------------
CHKDGE00  
.          PACK      KEY9,EMVCD005,SP70
.          CALL      RDEMICD1                * validate diagnosis code
.          BRANCH    OVRCD,CHKDGE90 
.
          PACK      KEY17,EMVCD001,EMVCD002,ZERO3,SP70
          CALL      RSEMVCD2
CHKDGE10  CALL      RKEMVCD2
          BRANCH    OVRCD,CHKDGE99
.
          MATCH     EMVCD001,EMVCVIST
          GOTO      CHKDGE99 IF NOT EQUAL
.
          MATCH     EMVCD002,EMVCTYPE
          GOTO      CHKDGE99 IF NOT EQUAL
.
          MATCH     SAVEUNIQ,EMVCUNIQ     * disregard current record
          GOTO      CHKDGE10 IF EQUAL
.
.          MATCH     EMVCD005,EMVCMNCD
.          GOTO      CHKDGE91 IF EQUAL
.
          COMPARE   FOUR,EMVCCSYS                * emrproaf
          GOTO      CHKDGE20 IF EQUAL
          COMPARE   FIVE,EMVCCSYS                * emricdaf
          GOTO      CHKDGE30 IF EQUAL
.
          GOTO      CHKDGE10      * Read Next Record if there is one?
.
CHKDGE20  PACK      KEY9,EMVCD005,SP70
          CALL      RDEMPRO1
          BRANCH    OVRCD,CHKDGE92
.
          GOTO      CHKDGE10      * Read Next Record if there is one?
.
CHKDGE30  PACK      KEY9,EMVCD005,SP70
          CALL      RDEMICD1                * validate diagnosis code
          BRANCH    OVRCD,CHKDGE90
.
          GOTO      CHKDGE10      * Read Next Record if there is one?
.
CHKDGE90  MOVE      "Invalid Diagnosis Code",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CHKDGE99
.
CHKDGE91  MOVE      "Emergency Coding record already exists",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CHKDGE99
.
CHKDGE92  MOVE      "Invalid Procedure Code",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CHKDGE99
.
CHKDGE99  RETURN
.------------------------------------------------------------
. Change Primary Diagnosis
.------------------------------------------------------------
CHGDG000  PACK      KEY17,EMVCD001,EMVCD002,ZERO3,SP70
          CALL      RSEMVCD2
CHGDG100  CALL      RKEMVCD2
          BRANCH    OVRCD,CHGDG999
.
          MATCH     EMVCD001,EMVCVIST
          GOTO      CHGDG999 IF NOT EQUAL
.
          MATCH     EMVCD002,EMVCTYPE
          GOTO      CHGDG999 IF NOT EQUAL
.
          MATCH     "000",EMVCSEQU
          GOTO      CHGDG100 IF NOT EQUAL
.
          PACK      KEY17,EMVCVIST,EMVCTYPE,EMVCSEQU,EMVCUNIQ
          MOVE      KEY17,SAVKEY17
          CALL      RLEMVCD2
          BRANCH    OVRCD,CHGDG999,CHGDG999
          MOVE      "001",EMVCSEQU
          CALL      UPEMVCD2
          CALL      UUEMVCD2
.
          MOVE      SAVKEY17,KEY17
          CALL      RSEMVCD2      * Reposition Key
.
          GOTO      CHGDG100      * Read Next Record if there is one?
.
CHGDG999  RETURN
.
.------------------------------------------------------------
. Set new Primary Diagnosis after deletion or unchecked primary
.------------------------------------------------------------
SETDG000  MOVE      "000",SEQFLAG         * primary diag indicator
.
          PACK      KEY17,EMVCD001,EMVCD002,ZERO3,SP70
          CALL      RSEMVCD2
SETDG100  CALL      RKEMVCD2
          BRANCH    OVRCD,SETDG999
.
          MATCH     EMVCD001,EMVCVIST
          GOTO      SETDG999 IF NOT EQUAL
.
          MATCH     EMVCD002,EMVCTYPE
          GOTO      SETDG999 IF NOT EQUAL
.
          MATCH     SAVEUNIQ,EMVCUNIQ     * do not override current record
          GOTO      SETDG100 IF EQUAL
.
          MOVE      "001",SEQFLAG         * non-primary diag indicator
.
          MATCH     "001",EMVCSEQU
          GOTO      SETDG999 IF NOT EQUAL
.
.  Update emr visit coding file with new primary diagnosis
.
          PACK      KEY17,EMVCVIST,EMVCTYPE,EMVCSEQU,EMVCUNIQ
          CALL      RLEMVCD2
          BRANCH    OVRCD,SETDG999,SETDG999
          MOVE      "000",EMVCSEQU
          CALL      UPEMVCD2
          CALL      UUEMVCD2
.
.  Update emr visit file with new primary diagnosis
.
          MOVE      EMVCVIST,KEY8
          CALL      RDEMVIS1                     * Read EMR visit record
          BRANCH    OVRCD,SETDG999
.
          PACK      KEY9,EMVCMNCD,SP70
          CALL      RDEMICD1                     * Get VEMD code
          BRANCH    OVRCD,SETDG999 
.
          PACK      KEY10,EMIC9COD,SP70
          CALL      RSEMMX3
          CALL      RKEMMX3
          BRANCH    OVRCD,SETDG999
          MATCH     EMMXPDG,EMIC9COD             * Same diagnosis
          GOTO      SETDG999 IF NOT EQUAL
.
          MOVE      EMMXBRG,EMVIREGN             * Update Body region
          MOVE      EMMXNAT,EMVINATI             * Update Nature of injury
          CALL      UPEMVIS1
.
SETDG999  RETURN
.
.------------------------------------------------------------
. Find primary diagnosis in EMRVCD. If found then update PMSBRQ
.------------------------------------------------------------
SETBRQ00  MOVE      "0",EMRDIAIN
          PACK      KEY17,EMVCD001,ZERO,ZERO,FIVE,ZERO3,SP70
          CALL      RSEMVCD2
SETBRQ10  CALL      RKEMVCD2
          BRANCH    OVRCD,SETBRQ40
.
          MATCH     EMVCD001,EMVCVIST
          GOTO      SETBRQ40 IF NOT EQUAL
.
          MATCH     "005",EMVCTYPE
          GOTO      SETBRQ40 IF NOT EQUAL
.
          MATCH     "000",EMVCSEQU
          GOTO      SETBRQ40 IF NOT EQUAL
.
          MOVE      EMVCMNCD,DIM10
          MOVE      EMVCFTXT,DIM100
.
          GOTO      SETBRQ50
.
SETBRQ40  PACK      DIM10,SP70
          PACK      DIM100,SP70,SP70
.
SETBRQ50  PACK      KEY25,EMVCD001,ONE,SP70
          CALL      RSPMBRQ2
          CALL      RKPMBRQ2
          BRANCH    OVRCD,SETBRQ99
.
          MATCH     EMVCD001,PMBRVISN
          GOTO      SETBRQ99 IF NOT EQUAL
.
          MATCH     "1",PMBRRSTA
          GOTO      SETBRQ99 IF NOT EQUAL
.
.         MOVE      DIM10,PMBRDIAG
          MOVE      DIM100,PMBRFTXT
.
          MATCH     "0",EMCNDEDI
          IF        @EQUAL
            MOVE      DIM10,PMBRDIAG
          ELSE
            MOVE      SP70,PMBRDIAG
            MATCH     "1",EMCNDEDI
            IF        @EQUAL
              MOVE      "1",EMRDIAIN
            ENDIF
          ENDIF
.
          CALL      UPPMBRQ2
.
SETBRQ99  RETURN
.
.------------------------------------------------------------
.         Write history record
.------------------------------------------------------------
WRTHIS00  MOVE      SP70,SAVEDRDT
          MOVE      SP70,SAVEDRTM
          MOVE      SP70,SAVENRDT
          MOVE      SP70,SAVENRTM
          MOVE      SP70,SAVEDOCT
          MOVE      SP70,SAVENURS
.
          PACK      KEY22,ADMISSNO,Z70
          CALL      RSEMHIS1
WRTHIS05  CALL      RPEMHIS1
          BRANCH    OVRCD,WRTHIS10
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      WRTHIS10 IF NOT EQUAL
.
          MOVE      EMHIDSD,SAVEDRDT
          MOVE      EMHIDST,SAVEDRTM
          MOVE      EMHINSD,SAVENRDT
          MOVE      EMHINST,SAVENRTM
          MOVE      EMHIDOC,SAVEDOCT
          MOVE      EMHINUR,SAVENURS
.
WRTHIS10  MOVE      EMVIADMN,EMHIVIS
          CLOCK     TIME,CTIMEIS
.
          PACK      EMHIDAT,CCC,CYY,CMM,CDD
          REP       " 0",EMHIDAT
          UNPACK    CTIMEIS,HOUR,D1,MIN,D1,SEC
          PACK      EMHITIM,HOUR,MIN,SEC
          REP       " 0",EMHITIM
.
          MATCH     SAVEDOCT,EMVIDOCT       * Is this a new doctor
          IF        @EQUAL
            MOVE      SAVEDRDT,EMHIDSD        * Restore current doctor date and
            MOVE      SAVEDRTM,EMHIDST        * time
          ELSE
            PACK      EMHIDSD,CCC,CYY,CMM,CDD * New doctor so seen date and time
            REP       " 0",EMHIDSD            * are set the current and time
            PACK      EMHIDST,HOUR,MIN,SEC
            REP       " 0",EMHIDST
          ENDIF
.
          MATCH     SAVENURS,EMVIATNS       * Is this a new nurse
          IF        @EQUAL
            MOVE      SAVENRDT,EMHINSD        * Restore current nurse date and
            MOVE      SAVENRTM,EMHINST        * time
          ELSE
            PACK      EMHINSD,CCC,CYY,CMM,CDD * New nurse so seen date and time
            REP       " 0",EMHINSD            * are set the current and time
            PACK      EMHINST,HOUR,MIN,SEC
            REP       " 0",EMHINST
          ENDIF
.
WRTHIS40  MOVE      HISTTYPE,EMHIUPT
          MOVE      USERID,EMHIEUS
          MOVE      EMVILOCN,EMHILOC
          MOVE      EMVIDOCT,EMHIDOC
          MOVE      EMVIATNS,EMHINUR
          PACK      EMHISPA,SP70,SP70
          PACK      EMHIDSD,EMHIDSD,SP70
          PACK      EMHIDST,EMHIDST,SP70
          PACK      EMHINSD,EMHINSD,SP70
          PACK      EMHINST,EMHINST,SP70
.
          MATCH     SP70,EMHINUR
          IF        @EQUAL
            MOVE      SP70,EMHINSD
            MOVE      SP70,EMHINST
          ENDIF
.
          MATCH     SP70,EMHIDOC
          IF        @EQUAL
            MOVE      SP70,EMHIDSD
            MOVE      SP70,EMHIDST
          ENDIF
.
          CALL      IBACLOCK
          PACK      EMHICDAT,CCC,CYY,CMM,CDD  * Date Record Created (ccyymmdd)
          REP       " 0",EMHICDAT
          CLOCK     TIME,EMHICTIM             * Time Record Created (hh:mm:ss)
          MOVE      USERID,EMHICUID           * Web User Id Created (websecaf)
.
          MOVE      SP70,EMHIUDAT      * Date Record Updated (ccyymmdd)
          MOVE      SP70,EMHIUTIM      * Time Record Updated (hh:mm:ss)
          MOVE      SP70,EMHIUUID      * Web User Id Updated (websecaf)
.
WRTHIS80  PACK      KEY22,EMHIVIS,EMHIDAT,EMHITIM,SP70
          CALL      RAEMHIS1
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            MOVE      SP70,EMHIDRBC          * Dr Billing Complete
            CALL      WREMHIS1
            TRAPCLR   IO
            BRANCH    OVRCD,WRTHIS85         * Add one second and try again
.
          ELSE
WRTHIS85    CALL      IBACLOCK                   * Set new date and time and
            PACK      EMHIDAT,CCC,CYY,CMM,CDD    * try write again
            REP       " 0",EMHIDAT
            CLOCK     TIME,CTIMEIS
            UNPACK    CTIMEIS,HOUR,D1,MIN,D1,SEC
            PACK      EMHITIM,HOUR,MIN,SEC
            REP       " 0",EMHITIM
            GOTO      WRTHIS80
          ENDIF
.
          PROC      EMRDRCHR            * Update Dr Billing complete
          MOVE      ZERO,EXIT
.
WRTHIS99  RETURN
.
.------------------------------------------------------------
. Check procedure date range before saving procedure details
.------------------------------------------------------------
CKDT0000  MATCH     SP70,EMVCD007                * Procedure date
          GOTO      CKDT9999 IF EQUAL
.
          MATCH     SP70,EMVCD008                * Procedure time
          GOTO      CKDT9999 IF EQUAL
.
          PACK      KEY16,EMVIDATE,EMVITIME,SP70
          REP       ":0",KEY16
          PACK      SAVKEY16,EMVCD007,EMVCD008,SP70
          REP       ":0",SAVKEY16
.
          MATCH     SP70,KEY16
          GOTO      CKDT9200 IF EQUAL            * Triage date/time mandatory
.
          MATCH     SAVKEY16,KEY16    * check arrival date/time
          IF        !@LESS
            GOTO      CKDT9000 
          ENDIF
.
CKDT1000  MATCH     "1",DEMVISTA
          GOTO      CKDT9999 IF EQUAL
.
          PACK      KEY16,EMVIDDAT,EMVIDTIM,SP70
          MATCH     SP70,KEY16
          GOTO      CKDT9999 IF EQUAL
          REP       ":0",KEY16
.
          MATCH     KEY16,SAVKEY16    * check discharge date/time
          IF        !@LESS
            GOTO      CKDT9100
          ENDIF
          GOTO      CKDT9999
.
CKDT9000  MOVE      "Procedure date/time must be after triage date/time",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CKDT9999
.
CKDT9100  MOVE      "Procedure date/time must be before discharge date/time",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CKDT9999
.
CKDT9200  MOVE      "Patient must have a traige date/time before adding procedures",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      CKDT9999
.
CKDT9999  RETURN
.------------------------------------------------------------
. Split Emergency Visit ICD10 code Free Format Text into KEY48 and KEY22
.------------------------------------------------------------
SPLDFF00  MOVE      SP70,KEY50
          MOVE      SP70,KEY50A
.
          STRIP     EMVCFTXT                * Remove trailing spaces
          MOVE      ZERO,F3
          MOVELPTR  EMVCFTXT,F3             * get length of comment
          RESET     EMVCFTXT
.
          IF        F3>=90
            UNPACK    EMVCFTXT,KEY50,KEY50A * Split in half to save 2 X DIM 50
            GOTO      SPLDFF99
          ENDIF
.
          MOVE      FIFTY,FORM2
SPLDFF10  RESET     EMVCFTXT,FORM2
          CMATCH    EMVCFTXT,SP1
.
          IF        @EQUAL
            UNPACK    EMVCFTXT,KEY50A
            RESET     EMVCFTXT
            SETLPTR   EMVCFTXT,FORM2
            UNPACK    EMVCFTXT,KEY50
            RESET     EMVCFTXT
            GOTO      SPLDFF99
          ENDIF
.
          SUBTRACT  ONE,FORM2
.
          IF        FORM2=ZERO
            RESET     EMVCFTXT
            UNPACK    EMVCFTXT,KEY50,KEY50A
          ELSE
            GOTO      SPLDFF10
          ENDIF
.
SPLDFF99  RETURN
+
.------------------------------------------------------------
. Split Diagnosis in to KEY48 and KEY22                                *I-60868
.------------------------------------------------------------
SPLDIA00  MOVE      FORTY8,FORM2
SPLDIA10  RESET     EMICDESC,FORM2
          CMATCH    EMICDESC,SP1
.
          IF        @EQUAL
            UNPACK    EMICDESC,KEY22
            RESET     EMICDESC
            SETLPTR   EMICDESC,FORM2
            UNPACK    EMICDESC,KEY48
            RESET     EMICDESC
            GOTO      SPLDIA99
          ENDIF
.
          SUBTRACT  ONE,FORM2
.
          IF        FORM2=ZERO
            RESET     EMICDESC
            UNPACK    EMICDESC,KEY48,KEY22
          ELSE
            GOTO      SPLDIA10
          ENDIF
.
SPLDIA99  RETURN
+
.------------------------------------------------------------
. Find out if there is an EFF existing in pmsmtiaf and aaedtraf
.------------------------------------------------------------
GETEFF00  PACK      KEY15,ADMISSNO,THREE,SP70
          CALL      RSPMMTI2
GETEFF10  CALL      RKPMMTI2
          BRANCH    OVRCD,GETEFF50
.
          MATCH     ADMISSNO,PMMIVISN
          GOTO      GETEFF50 IF NOT EQUAL
.
          MATCH     "3",PMMIRTYP
          GOTO      GETEFF50 IF NOT EQUAL
.
          MATCH     "EFF      ",PMMIITEM
          GOTO      GETEFF10 IF NOT EQUAL
.
          WRITE     HTMLFILE;ONE;
          GOTO      GETEFF99
.
GETEFF50  PACK      KEY22,ADMISSNO,SP70
          CALL      RDSDTRE1
GETEFF60  CALL      RDKDTRE1
          BRANCH    OVRCD,GETEFF90
.
          MATCH     ADMISSNO,DATNUMB
          GOTO      GETEFF90 IF NOT EQUAL
.
          MATCH     "EFF      ",ATITEMNO
          GOTO      GETEFF60 IF NOT EQUAL
.
          WRITE     HTMLFILE;ONE;
          GOTO      GETEFF99
.
GETEFF90  WRITE     HTMLFILE;ZERO;
          GOTO      GETEFF99
.
GETEFF99  RETURN
.
.------------------------------------------------------------
. Emergency Visit Delay Reasons
.------------------------------------------------------------
DELY0000  RESET     UPDATETY
          MATCH     SP1,UPDATETY
          GOTO      DELY8000 IF EQUAL
.
          MATCH     "A",UPDATETY                 * Add formaction
          GOTO      DELY1000 IF EQUAL
.
          MATCH     "U",UPDATETY                 * Update formaction
          GOTO      DELY2000 IF EQUAL
.
          MATCH     "D",UPDATETY                 * Delete formaction
          GOTO      DELY3000 IF EQUAL
.
          GOTO      DELY9000
.
.         ************ ADD FORMACTION ***********
.
DELY1000  MOVE      ONE,F2
          PACK      KEY29,EMDEL001,EMDEL002,EMDEL003,EMDEL004,Z70
          CALL      RSEMDEL1
          CALL      RPEMDEL1                     * Read last record
          BRANCH    OVRCD,DELY1500
.
          MATCH     EMDEL001,EMDEVISN
          GOTO      DELY1500 IF NOT EQUAL
.
          MATCH     EMDEL002,EMDEDATE
          GOTO      DELY1500 IF NOT EQUAL
.
          MATCH     EMDEL003,EMDETIME
          GOTO      DELY1500 IF NOT EQUAL
.
          MATCH     EMDEL004,EMDETYPE
          GOTO      DELY1500 IF NOT EQUAL
.
          MOVE      EMDECNTR,F2                  * Add one to unique count
          ADD       ONE,F2
.
DELY1500  MOVE      F2,EMDEL005                  * Assign unique counter
          CALL      CLEMDE00                     * Clear file variables
          CALL      MVEMDE00                     * Move cgi to file variables
.
          PACK      EMDECDAT,CCC,CYY,CMM,CDD
          REP       " 0",EMDECDAT                * Current date
          CLOCK     TIME,EMDECTIM                * Current time 
          MOVE      USERID,EMDECUID              * web user id
.
          PACK      KEY29,EMDEVISN,EMDEDATE,EMDETIME,EMDETYPE,EMDECNTR,SP70
          CALL      RAEMDEL1
          IF        OVRCD=1
            CALL      WREMDEL1
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      DELY9999
.
.         ************ UPDATE FORMACTION **********
.
DELY2000  PACK      KEY29,EMDEL001,EMDEL002,EMDEL003,EMDEL004,EMDEL005,SP70
          CALL      RDEMDEL1
          BRANCH    OVRCD,DELY9200
.
          CALL      MVEMDE00                     * Move cgi to file variables
.
          PACK      EMDEUDAT,CCC,CYY,CMM,CDD
          REP       " 0",EMDEUDAT                * Current date
          CLOCK     TIME,EMDEUTIM                * Current time
          MOVE      USERID,EMDEUUID              * web user id
.
          CALL      UPEMDEL1
.
          MOVE      ZERO,EXIT
          GOTO      DELY9999

.         ************ DELETE FORMACTION **********
.
DELY3000  PACK      KEY29,EMDEL001,EMDEL002,EMDEL003,EMDEL004,EMDEL005,SP70
          CALL      RDEMDEL1
          BRANCH    OVRCD,DELY9200
.
          MOVE      ONE,EMDEDELT                 * Flag as deleted
          PACK      EMDEUDAT,CCC,CYY,CMM,CDD
          REP       " 0",EMDEUDAT                * Current date
          CLOCK     TIME,EMDEUTIM                * Current time 
          MOVE      USERID,EMDEUUID              * web user id
.
          CALL      UPEMDEL1                      
.
          MOVE      ZERO,EXIT
          GOTO      DELY9999
.
.         ************ DISPLAY FORMACTION **********
.
DELY8000  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1                      * Read department table
          BRANCH    OVRCD,DELY9100
.
          PACK      KEY29,EMDEL001,EMDEL002,EMDEL003,EMDEL004,EMDEL005,SP70
          CALL      RDEMDEL1  
          IF        OVRCD=1
            CALL      CLEMDE00    * Clear all the file variables
          ENDIF
.
          PACK      KEY8,URNUMBER,SP70
          CALL      RDMAST1
          IF        OVRCD<>1
            CALL      RDPMPX21
            IF        OVRCD=1
              CALL      CLPMSPX2
            ENDIF
            GOTO      DELY8500
          ENDIF
.
          MOVE      ADMISSNO,KEY8
          CALL      RDEMUNK1
          BRANCH    OVRCD,DELY9300
.
          MOVE      ZEROUR,PURNO
          MOVE      EMUNDET1,PSNAME
          MOVE      EMUNDET2,PGNAME
          MOVE      SP70,PTITL
          MOVE      SP70,PBDATE
          MOVE      EMUNAGE,PSAGE
.
DELY8500  CLEAR     WEBTITLE
          MOVE      "Delay Reasons",WEBTITLE
          RESET     WEBTITLE
.
          CALL      WEBHED00   * Create Output File and Write HTML Page Header
          BRANCH    EXIT,DELY9999
          CALL      WEBBOD00   * Process Web Body
          CALL      WEBEND00   * Process End of HTML File
          MOVE      ONE,EXIT
          GOTO      DELY9999
.
DELY9000  MOVE      "Invalid Update Type.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DELY9999
.
DELY9100  MOVE      "Invalid Emergency Visit.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DELY9999
.
DELY9200  MOVE      "Invalid Delay Reason Record.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DELY9999
.
DELY9300  MOVE      "Invalid U/R Number.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DELY9999
.
DELY9400  MOVE      "Delay Reason is a Mandatory Field.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      DELY9999
.
DELY9999  RETURN
.
.------------------------------------------------------------
. Research Project Maintenance
.------------------------------------------------------------
RESP0000  RESET     UPDATETY
          MATCH     SP1,UPDATETY
          GOTO      RESP8000 IF EQUAL
.
          MATCH     "A",UPDATETY                 * Add formaction
          GOTO      RESP1000 IF EQUAL
.
          MATCH     "U",UPDATETY                 * Update formaction
          GOTO      RESP2000 IF EQUAL
.
          MATCH     "D",UPDATETY                 * Delete formaction
          GOTO      RESP3000 IF EQUAL
.
          MATCH     "S",UPDATETY                 * Add selection formaction
          GOTO      RESP4000 IF EQUAL
.
          MATCH     "T",UPDATETY                 * Update selection formaction
          GOTO      RESP5000 IF EQUAL
.
          MATCH     "V",UPDATETY                 * Delete selection formaction
          GOTO      RESP6000 IF EQUAL
.
          MATCH     "P",UPDATETY                 * Update visit formaction
          GOTO      RESP7000 IF EQUAL
.
          GOTO      RESP9000
.
.         ************ ADD FORMACTION ***********
.
RESP1000  PACK      KEY11,EMRES001,EMRES002,SP70
          CALL      RAEMRES1
          COMPARE   ONE,OVRCD
          GOTO      RESP9100 IF NOT EQUAL
.
          CALL      CLEMRE00                     * Clear file variables
          CALL      MVEMRE00                     * Move cgi to file variables
.
          PACK      EMRECDAT,CCC,CYY,CMM,CDD
          REP       " 0",EMRECDAT                * Current date
          CLOCK     TIME,EMRECTIM                * Current time
          MOVE      USERID,EMRECUID              * web user id
.
          CALL      WREMRES1
.
          MOVE      ZERO,EXIT
          GOTO      RESP9999
.
.         ************ UPDATE FORMACTION ***********
.
RESP2000  PACK      KEY11,EMRES001,EMRES002,SP70
          CALL      RDEMRES1
          BRANCH    OVRCD,RESP9200
.
          CALL      MVEMRE00                     * Move cgi to file variables
.
          PACK      EMREUDAT,CCC,CYY,CMM,CDD
          REP       " 0",EMREUDAT                * Current date
          CLOCK     TIME,EMREUTIM                * Current time
          MOVE      USERID,EMREUUID              * web user id
.
          CALL      UPEMRES1
.
          MOVE      ZERO,EXIT
          GOTO      RESP9999
.
.         ************ DELETE FORMACTION **********
.
RESP3000  PACK      KEY11,EMRES001,EMRES002,SP70
          CALL      RDEMRES1
          BRANCH    OVRCD,RESP9200
.
RESP3100  PACK      KEY33,EMRES001,EMRES002,SP70
          CALL      RSEMRSL1
          CALL      RKEMRSL1
          BRANCH    OVRCD,RESP3200
.
          MATCH     EMRSRESP,EMRES001
          GOTO      RESP3200 IF NOT EQUAL
.
          MATCH     EMRSSDAT,EMRES002
          GOTO      RESP3200 IF NOT EQUAL
.
          PACK      KEY33,EMRSRESP,EMRSSDAT,EMRSTYPE,EMRSSELF,EMRSSELT,SP70
          CALL      DEEMRSL1
          GOTO      RESP3100
.
RESP3200  PACK      KEY19,EMRES001,EMRES002,SP70
          CALL      RSEMRVS1
          CALL      RKEMRVS1
          BRANCH    OVRCD,RESP3300
.
          MATCH     EMRVRESP,EMRES001
          GOTO      RESP3300 IF NOT EQUAL
.
          MATCH     EMRVSDAT,EMRES002
          GOTO      RESP3300 IF NOT EQUAL
.
          PACK      KEY19,EMRVRESP,EMRVSDAT,EMRVVISN,SP70
          CALL      DEEMRVS1
          GOTO      RESP3200
.
RESP3300  PACK      KEY11,EMRES001,EMRES002,SP70
          CALL      DEEMRES1
.
          MOVE      ZERO,EXIT
          GOTO      RESP9999
.
.         ************ ADD SELECTION FORMACTION ***********
.
RESP4000  PACK      KEY33,EMRSL001,EMRSL002,EMRSL003,EMRSL004,EMRSL005,SP70
          CALL      RAEMRSL1
          COMPARE   ONE,OVRCD
          GOTO      RESP9100 IF NOT EQUAL
.
          CALL      CLEMRS00                     * Clear file variables
          CALL      MVEMRS00                     * Move cgi to file variables
.
          PACK      EMRSCDAT,CCC,CYY,CMM,CDD
          REP       " 0",EMRSCDAT                * Current date
          CLOCK     TIME,EMRSCTIM                * Current time
          MOVE      USERID,EMRSCUID              * web user id
.
          CALL      WREMRSL1
.
          MOVE      ZERO,EXIT
          GOTO      RESP9999
.
.         ************ UPDATE SELECTION FORMACTION ***********
.
RESP5000  PACK      KEY33,EMRSL001,EMRSL002,EMRSL003,EMRSL004,EMRSL005,SP70
          CALL      RDEMRSL1
          BRANCH    OVRCD,RESP9200
.
          CALL      MVEMRS00                     * Move cgi to file variables
.
          PACK      EMRSUDAT,CCC,CYY,CMM,CDD
          REP       " 0",EMRSUDAT                * Current date
          CLOCK     TIME,EMRSUTIM                * Current time
          MOVE      USERID,EMRSUUID              * web user id
.
          CALL      UPEMRSL1
.
          MOVE      ZERO,EXIT
          GOTO      RESP9999
.
.         ************ DELETE SELECTION FORMACTION ***********
.
RESP6000  PACK      KEY33,EMRSL001,EMRSL002,EMRSL003,EMRSL004,EMRSL005,SP70
          CALL      RDEMRSL1
          BRANCH    OVRCD,RESP9200
.
          CALL      DEEMRSL1
.
          MOVE      ZERO,EXIT
          GOTO      RESP9999
.
.         ************ UPDATE PROJECT VISIT FORMACTION ***********
.
RESP7000  PACK      KEY19,EMRVS001,EMRVS002,EMRVS003,SP70
          CALL      RDEMRVS1
          BRANCH    OVRCD,RESP9300
.
          CALL      MVEMRV00                     * Move cgi to file variables
.
          PACK      EMRVUDAT,CCC,CYY,CMM,CDD
          REP       " 0",EMRVUDAT                * Current date
          CLOCK     TIME,EMRVUTIM                * Current time
          MOVE      USERID,EMRVUUID              * web user id
.
          CALL      UPEMRVS1
.
          MOVE      ZERO,EXIT
          GOTO      RESP9999
.
.         ************ DISPLAY FORMACTION **********
.
RESP8000  PACK      KEY11,EMRES001,EMRES002,SP70
          CALL      RDEMRES1
          IF        OVRCD=1
            CALL      CLEMRE00
          ENDIF
.
          PACK      KEY33,EMRSL001,EMRSL002,EMRSL003,EMRSL004,EMRSL005,SP70
          CALL      RDEMRSL1
          IF        OVRCD=1
            CALL      CLEMRS00
          ENDIF
.
          PACK      KEY19,EMRVS001,EMRVS002,EMRVS003,SP70
          CALL      RDEMRVS1
          IF        OVRCD=1
            CALL      CLEMRV00
          ENDIF
.
          CLEAR     WEBTITLE
          MOVE      "Research Projects",WEBTITLE
          RESET     WEBTITLE
.
          CALL      WEBHED00   * Create Output File and Write HTML Page Header
          BRANCH    EXIT,RESP9999
          CALL      WEBBOD00   * Process Web Body
          CALL      WEBEND00   * Process End of HTML File
          MOVE      ONE,EXIT
          GOTO      RESP9999
.
RESP9000  MOVE      "Invalid Update Type.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      RESP9999
.
RESP9100  MOVE      "Research Project/Selection Already Exists.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      RESP9999
.
RESP9200  MOVE      "Invalid Research Project/Selection.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      RESP9999
.
RESP9300  MOVE      "Invalid Research Project Visit.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      RESP9999
.
RESP9999  RETURN
.
.--------------------------------------------------------------------------
. General tags for research programs
.--------------------------------------------------------------------------
GTAG0000  BRANCH    FLDITMNO,GTAG0010,GTAG0020,GTAG0030,GTAG0040,GTAG0050:
                             GTAG0060,GTAG0070,GTAG0080,GTAG0090
.
          WRITE     HTMLFILE;"Invalid IBA Tag";
          GOTO      GTAG9999
.
GTAG0010  CALL      REST0000                * Table of research projects
          GOTO      EMRE9999
.
GTAG0020  WRITE     HTMLFILE;FILTSTAT;
          GOTO      EMRE9999
.
GTAG0030  WRITE     HTMLFILE;FILTTYPE;
          GOTO      EMRE9999
.
GTAG0040  CALL      RSLT0000                * List of research selection 
          GOTO      EMRE9999                * criteria
.
GTAG0050  CALL      RPPT0000                * Research project patient list
          GOTO      EMRE9999
.
GTAG0060  MATCH     Z70,EMRVS003
          GOTO      GTAG9999 IF EQUAL
.
          PACK      KEY8,EMRVS003,SP70      
          CALL      RDEMVIS1
          BRANCH    OVRCD,EMRE9999
.
          PACK      KEY8,EMVIURNO,SP70
          CALL      RDMAST1
          IF        OVRCD=1
            PACK      KEY8,EMVIADMN,SP70
            CALL      RDEMUNK1
            BRANCH    OVRCD,GTAG9999
.
            MOVE      "       0",PURNO
            MOVE      EMUNDET2,PGNAME
            MOVE      EMUNDET1,PSNAME
            MOVE      EMUNSEX,PSEX
            MOVE      EMUNBDAT,PBDATE
            PACK      PTITL,SP70
          ENDIF
.
          CALL      PATNAM00
          WRITE     HTMLFILE;PATFNAME;
          GOTO      EMRE9999
.
GTAG0070  CALL      RSEL0000                * Research project selection list
          GOTO      EMRE9999
.
GTAG0080  CALL      HRPT0000                * Hospital level research patients
          GOTO      EMRE9999                * list
.
GTAG0090  CALL      OCIT0000                * Other clinical information       
          GOTO      EMRE9999                * list
.
GTAG9999  RETURN
.
.--------------------------------------------------------------------------
. Table of research projects
.--------------------------------------------------------------------------
REST0000  PACK      KEY11,SP70
          CALL      RSEMRES1
REST1000  CALL      RKEMRES1
          BRANCH    OVRCD,REST9999
.
          MATCH     "0",FILTSTAT                 * Active only
          IF        @EQUAL
            MATCH     "1",EMRESTAT
            GOTO      REST1000 IF EQUAL
          ENDIF
.
          MATCH     "1",FILTSTAT                 * Inactive only
          IF        @EQUAL
            MATCH     "1",EMRESTAT
            GOTO      REST1000 IF NOT EQUAL
          ENDIF
.
          PACK      KEY5,CATEU,EMRERESP,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,REST1000
.
          IF        IBCNMHOS=1
            MATCH    "1",PTCDHOSS
            IF       @EQUAL
              PACK     KEY8,WBSEHOSP,TCODE,ACODE,SP70
              CALL     RDMLCOD1
              BRANCH   OVRCD,REST1000
            ENDIF
          ENDIF
.
          UNPACK    EMRESDAT,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          PACK      DISPDATE,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR,SP70
.
          CLEAR     HTMLLINK
          APPEND    "javascript:linkResearch('",HTMLLINK
          APPEND    EMRERESP,HTMLLINK
          APPEND    "','",HTMLLINK
          APPEND    DISPDATE,HTMLLINK
          APPEND    "')",HTMLLINK
          RESET     HTMLLINK
.
          MOVE      SP70,WBSENAM
          MATCH     SP70,EMDECUID
          IF        !@EQUAL
            PACK      KEY10,EMDECUID,SP70
            CALL      RDWBSE1
            IF        OVRCD=1
              MOVE      EMDECUID,WBSENAM
            ENDIF
          ENDIF
.
          MOVE      SP70,DISPRESP
          MATCH     SP70,EMRERESP
          IF        !@EQUAL
            PACK      KEY5,CATEU,EMRERESP,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              MOVE      EMRERESP,TDESC
            ENDIF
            MOVE      TDESC,DISPRESP
          ENDIF
.
          MATCH     "1",EMRESTAT
          IF        @EQUAL
            MOVE      "Inactive",DISPSTAT
          ELSE
            MOVE      "Active",DISPSTAT
          ENDIF
.
          WRITE     HTMLFILE;"t.addRow(#"",HTMLLINK,"#",":      * 0
                             "#"",DISPRESP,"#",":               * 1
                             "#"",EMRESDAT,"#",":               * 2
                             "#"",EMREEDAT,"#",":               * 3
                             "#"",DISPSTAT,"#",":               * 4
                             "#"",EMREGDAT,EMREGTIM,"#")"       * 5
.
          GOTO      REST1000
.
REST9999  RETURN
.
.--------------------------------------------------------------------------
. Table of research project selection criteria
.--------------------------------------------------------------------------
RSLT0000  PACK      KEY33,EMRERESP,EMRESDAT,SP70
          CALL      RSEMRSL1
RSLT1000  CALL      RKEMRSL1
          BRANCH    OVRCD,RSLT9999
.
          MATCH     EMRERESP,EMRSRESP            * Same research project
          GOTO      RSLT9999 IF NOT EQUAL
.
          MATCH     EMRESDAT,EMRSSDAT            * Same start date
          GOTO      RSLT9999 IF NOT EQUAL
.
          MATCH     SP70,FILTTYPE
          IF        !@EQUAL
            MATCH     FILTTYPE,EMRSTYPE          * Selection Type Filter
            GOTO      RSLT1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "0",FILTSTAT                 * Active only
          IF        @EQUAL
            MATCH     "1",EMRSSTAT
            GOTO      RSLT1000 IF EQUAL
          ENDIF
.
          MATCH     "1",FILTSTAT                 * Inactive only
          IF        @EQUAL
            MATCH     "1",EMRSSTAT
            GOTO      RSLT1000 IF NOT EQUAL
          ENDIF
.
          UNPACK    EMRSSDAT,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          PACK      DISPDATE,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR,SP70
.
          CLEAR     HTMLLINK
          APPEND    "javascript:updateSelection('",HTMLLINK
          APPEND    EMRSRESP,HTMLLINK
          APPEND    "','",HTMLLINK
          APPEND    DISPDATE,HTMLLINK
          APPEND    "','",HTMLLINK
          APPEND    EMRSTYPE,HTMLLINK
          APPEND    "','",HTMLLINK
          APPEND    EMRSSELF,HTMLLINK
          APPEND    "','",HTMLLINK
          APPEND    EMRSSELT,HTMLLINK
          APPEND    "')",HTMLLINK
          RESET     HTMLLINK
.
          MATCH     "1",EMRSSTAT
          IF        @EQUAL
            MOVE      "Inactive",DISPSTAT
          ELSE
            MOVE      "Active",DISPSTAT
          ENDIF
.
          MOVE      SP70,DISPTYPE
          MOVE      SP70,DISPSELF
          MOVE      SP70,DISPSELT
.
          MOVE      SP70,DISPTYPE
          MOVE      ZERO,F2
          MOVE      EMRSTYPE,F2
          LOAD      DISPTYPE,F2,EMRSTY01,EMRSTY02,EMRSTY03,EMRSTY04,EMRSTY05
.
          MATCH     "01",EMRSTYPE
          IF        @EQUAL
            PACK      KEY5,CATEL,EMRSSELF,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              MOVE      EMRSSELF,TDESC
            ENDIF
            MOVE      TDESC,DISPSELF
.
            PACK      KEY5,CATEL,EMRSSELT,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              MOVE      EMRSSELT,TDESC
            ENDIF
            MOVE      TDESC,DISPSELT
          ENDIF
.
          MATCH     "02",EMRSTYPE
          IF        @EQUAL
            MOVE      EMRSSELF,DISPSELF
            MOVE      EMRSSELT,DISPSELT
.
            PACK      KEY9,EMRSSELF,SP70
            CALL      RDEMICD1
            IF        OVRCD=0
              MOVE      EMICDESC,DISPSELF
            ENDIF
.
            PACK      KEY9,EMRSSELT,SP70
            CALL      RDEMICD1
            IF        OVRCD=0
              MOVE      EMICDESC,DISPSELT
            ENDIF
          ENDIF
.
          MATCH     "03",EMRSTYPE
          IF        @EQUAL
            MOVE      EMRSSELF,DISPSELF
            MOVE      EMRSSELT,DISPSELT
          ENDIF
.
          MATCH     "04",EMRSTYPE
          IF        @EQUAL
            PACK      KEY5,ANSC,SP1,EMRSSELF,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              MOVE      EMRSSELF,TDESC
            ENDIF
            MOVE      TDESC,DISPSELF
.
            PACK      KEY5,ANSC,SP1,EMRSSELT,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              MOVE      EMRSSELT,TDESC
            ENDIF
            MOVE      TDESC,DISPSELT
          ENDIF
.
          MATCH     "05",EMRSTYPE
          IF        @EQUAL
            MOVE      EMRSSELF,DISPSELF
            MOVE      EMRSSELT,DISPSELT
          ENDIF
.
          WRITE     HTMLFILE;"t.addRow(#"",HTMLLINK,"#",":      * 0
                             "#"",DISPTYPE,"#",":               * 1
                             "#"",DISPSELF,"#",":               * 2
                             "#"",DISPSELT,"#",":               * 3
                             "#"",DISPSTAT,"#")"                * 4
.
          GOTO      RSLT1000
.
RSLT9999  RETURN
.
.--------------------------------------------------------------------------
. Table of research project patients
.--------------------------------------------------------------------------
RPPT0000  PACK      KEY19,EMRERESP,EMRESDAT,SP70
          CALL      RSEMRVS1
RPPT1000  CALL      RKEMRVS1
          BRANCH    OVRCD,RPPT9999
.
          MATCH     EMRERESP,EMRVRESP            * Same research project
          GOTO      RPPT9999 IF NOT EQUAL
.
          MATCH     EMRESDAT,EMRVSDAT            * Same start date
          GOTO      RPPT9999 IF NOT EQUAL
.
          MATCH     SP70,FILTSTAT
          IF        !@EQUAL
            MATCH     FILTSTAT,EMRVPSTA          * Status Filter
            GOTO      RPPT1000 IF NOT EQUAL
          ENDIF
.
          PACK      KEY8,EMRVVISN,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,RPPT1000
.
          IF        IBCNMHOS=1
            PACK      KEY8,EMVIADMN,SP70
            CALL      RDPMVX11
            BRANCH    OVRCD,RSLT1000
.
            MATCH     WBSEHOSP,PMVXMHOS
            GOTO      RSLT1000 IF NOT EQUAL
          ENDIF
.
          PACK      KEY8,EMVIURNO,SP70
          CALL      RDMAST1
          IF        OVRCD=1
            PACK      KEY8,EMVIADMN,SP70
            CALL      RDEMUNK1
            BRANCH    OVRCD,RPPT1000
.
            MOVE      "       0",PURNO
            MOVE      EMUNDET2,PGNAME
            MOVE      EMUNDET1,PSNAME
            MOVE      EMUNSEX,PSEX
            MOVE      EMUNBDAT,PBDATE
            PACK      PTITL,SP70
          ENDIF
.
          MATCH     SP70,PBDATE
          IF        !@EQUAL
            PACK      AGEDATE,CCC,CYY,CMM,CDD
            REP       " 0",AGEDATE
            CALL      CALCAGE
            MOVE      PSAGEDAY,AGEINDAY
            PACK      DISPAGE,SP70
            CLEAR     DISPAGE
            APPEND    PSAGECON,DISPAGE
            APPEND    PSAGETYP,DISPAGE
            RESET     DISPAGE
          ELSE
            MOVE      "Unk",DISPAGE
            MOVE      SP70,AGEINDAY
          ENDIF
.
          CALL      PATLN000
          CALL      PATFLD00
          MOVE      KEY3,FOLDERSF
.
          MOVE      SP70,DISPPRES
          MATCH     SP70,EMVIUC20
          IF         !@EQUAL
            PACK      KEY5,CATEL,EMVIUC20,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              MOVE      EMVIUC20,TDESC
            ENDIF
            MOVE      TDESC,DISPPRES
          ENDIF
.
          UNPACK    EMRVSDAT,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          PACK      DISPDATE,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR,SP70
.
          CLEAR     HTMLLNK2
          APPEND    "javascript:updatePatient('",HTMLLNK2
          APPEND    EMRVRESP,HTMLLNK2
          APPEND    "','",HTMLLNK2
          APPEND    DISPDATE,HTMLLNK2
          APPEND    "','",HTMLLNK2
          APPEND    EMRVVISN,HTMLLNK2
          APPEND    "')",HTMLLNK2
          RESET     HTMLLNK2
.
          CLEAR     HTMLLINK
          APPEND    "javascript:linkPatient('",HTMLLINK
          APPEND    EMVIURNO,HTMLLINK
          APPEND    "','",HTMLLINK
          APPEND    EMRVVISN,HTMLLINK
          APPEND    "')",HTMLLINK
          RESET     HTMLLINK
.
          MOVE      SP70,DISPSTAT
          MATCH     "0",EMRVPSTA
          IF        @EQUAL
            MOVE      EMRVPST0,DISPSTAT
          ENDIF
          MATCH     "1",EMRVPSTA
          IF        @EQUAL
            MOVE      EMRVPST1,DISPSTAT
          ENDIF
          MATCH     "2",EMRVPSTA
          IF        @EQUAL
            MOVE      EMRVPST2,DISPSTAT
          ENDIF
.
          MOVE      SP70,DOCFNAME
          PACK      KEY6,EMVIDOCT,SP70
          CALL      RDDOCT1
          IF        OVRCD<>1
.           CALL      DOCNAM00
            MOVE      DTITL,FMTTITLE
            MOVE      DGNAME,FMTGNAME
            MOVE      DSNAME,FMTSNAME
            CALL      DOCNM000
          ENDIF
.
          WRITE     HTMLFILE;"t.addRow(#"",HTMLLINK,"#",":      * 0
                             "#"",FORMATNM,"#",":               * 1
                             "#"",FOLDERSF,"#",":               * 2
                             "#"",EMRVVISN,"#",":               * 3
                             "#"",DISPPRES,"#",":               * 4
                             "#"",DISPSTAT,"#",":               * 5
                             "#"",DISPAGE,"#",":                * 6
                             "#"",AGEINDAY,"#",":               * 7
                             "#"",DOCFNAME,"#",":               * 7
                             "#"",HTMLLNK2,"#")"                * 9
.
          GOTO      RPPT1000
.
RPPT9999  RETURN
.
.--------------------------------------------------------------------------
. Hospital level list of research project patients
.--------------------------------------------------------------------------
HRPT0000  MATCH     SP70,FILTRESP
          IF        !@EQUAL
            PACK      KEY19,FILTRESP,SP70
          ELSE
            PACK      KEY19,SP70
          ENDIF
.
          CALL      RSEMRVS1
HRPT1000  CALL      RKEMRVS1
          BRANCH    OVRCD,HRPT9999
.
          MATCH     SP70,FILTRESP
          IF        !@EQUAL
            PACK      DIM11,EMRVRESP,EMRVSDAT,SP70
.
            MATCH     DIM11,FILTRESP             * Same research project
            GOTO      HRPT9999 IF NOT EQUAL
          ENDIF
.
          MATCH     SP70,FILTSTAT
          IF        !@EQUAL
            MATCH     FILTSTAT,EMRVPSTA          * Status Filter
            GOTO      HRPT1000 IF NOT EQUAL
          ENDIF
.
          PACK      KEY8,EMRVVISN,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,HRPT1000
.
          IF        IBCNMHOS=1
            PACK      KEY8,EMVIADMN,SP70
            CALL      RDPMVX11
            BRANCH    OVRCD,HRPT1000
.
            MATCH     WBSEHOSP,PMVXMHOS
            GOTO      HRPT1000 IF NOT EQUAL
          ENDIF

          PACK      KEY8,EMVIURNO,SP70
          CALL      RDMAST1
          IF        OVRCD=1
            PACK      KEY8,EMVIADMN,SP70
            CALL      RDEMUNK1
            BRANCH    OVRCD,HRPT1000
.
            MOVE      "       0",PURNO
            MOVE      EMUNDET2,PGNAME
            MOVE      EMUNDET1,PSNAME
            MOVE      EMUNSEX,PSEX
            MOVE      EMUNBDAT,PBDATE
            PACK      PTITL,SP70
          ENDIF
.
          MATCH     SP70,PBDATE
          IF        !@EQUAL
            PACK      AGEDATE,CCC,CYY,CMM,CDD
            REP       " 0",AGEDATE
            CALL      CALCAGE
            MOVE      PSAGEDAY,AGEINDAY
            PACK      DISPAGE,SP70
            CLEAR     DISPAGE
            APPEND    PSAGECON,DISPAGE
            APPEND    PSAGETYP,DISPAGE
            RESET     DISPAGE
          ELSE
            MOVE      "Unk",DISPAGE
            MOVE      SP70,AGEINDAY
          ENDIF
.
          CALL      PATLN000
          CALL      PATFLD00
          MOVE      KEY3,FOLDERSF
.
          MOVE      SP70,DISPPRES
          MATCH     SP70,EMVIUC20
          IF         !@EQUAL
            PACK      KEY5,CATEL,EMVIUC20,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              MOVE      EMVIUC20,TDESC
            ENDIF
            MOVE      TDESC,DISPPRES
          ENDIF
.
          UNPACK    EMRVSDAT,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          PACK      DISPDATE,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR,SP70
.
          CLEAR     HTMLLNK2
          APPEND    "javascript:updatePatient('",HTMLLNK2
          APPEND    EMRVRESP,HTMLLNK2
          APPEND    "','",HTMLLNK2
          APPEND    DISPDATE,HTMLLNK2
          APPEND    "','",HTMLLNK2
          APPEND    EMRVVISN,HTMLLNK2
          APPEND    "')",HTMLLNK2
          RESET     HTMLLNK2
.
          CLEAR     HTMLLINK
          APPEND    "javascript:linkPatient('",HTMLLINK
          APPEND    EMVIURNO,HTMLLINK
          APPEND    "','",HTMLLINK
          APPEND    EMRVVISN,HTMLLINK
          APPEND    "')",HTMLLINK
          RESET     HTMLLINK
.
          MOVE      SP70,DISPSTAT
          MATCH     "0",EMRVPSTA
          IF        @EQUAL
            MOVE      EMRVPST0,DISPSTAT
          ENDIF
          MATCH     "1",EMRVPSTA
          IF        @EQUAL
            MOVE      EMRVPST1,DISPSTAT
          ENDIF
          MATCH     "2",EMRVPSTA
          IF        @EQUAL
            MOVE      EMRVPST2,DISPSTAT
          ENDIF
.
          MOVE      SP70,DOCFNAME
          PACK      KEY6,EMVIDOCT,SP70
          CALL      RDDOCT1
          IF        OVRCD<>1
.           CALL      DOCNAM00
            MOVE      DTITL,FMTTITLE
            MOVE      DGNAME,FMTGNAME
            MOVE      DSNAME,FMTSNAME
            CALL      DOCNM000
          ENDIF
.
          MOVE      SP70,DISPRESP
          MATCH     SP70,EMRVRESP
          IF        !@EQUAL
            PACK      KEY5,CATEU,EMRVRESP,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              MOVE      EMRVRESP,TDESC
            ENDIF
            MOVE      TDESC,DISPRESP
          ENDIF
.

          WRITE     HTMLFILE;"t.addRow(#"",HTMLLINK,"#",":      * 0
                             "#"",FORMATNM,"#",":               * 1
                             "#"",FOLDERSF,"#",":               * 2
                             "#"",EMRVVISN,"#",":               * 3
                             "#"",DISPPRES,"#",":               * 4
                             "#"",DISPSTAT,"#",":               * 5
                             "#"",DISPAGE,"#",":                * 6
                             "#"",AGEINDAY,"#",":               * 7
                             "#"",DOCFNAME,"#",":               * 8
                             "#"",HTMLLNK2,"#",":               * 9
                             "#"",DISPRESP,"#",":               * 10
                             "#"",EMRVSDAT,"#")"                * 11
.
          GOTO      HRPT1000
.
HRPT9999  RETURN
.
.--------------------------------------------------------------------------
. Selection list of project patients
.--------------------------------------------------------------------------
RSEL0000  PACK      KEY11,SP70
          CALL      RSEMRES1
RSEL1000  CALL      RKEMRES1
          BRANCH    OVRCD,RSEL9999
.
          PACK      KEY5,CATEU,EMRERESP,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,RSEL1000
.
          IF        IBCNMHOS=1
            MATCH    "1",PTCDHOSS
            IF       @EQUAL
              PACK     KEY8,WBSEHOSP,TCODE,ACODE,SP70
              CALL     RDMLCOD1
              BRANCH   OVRCD,RSEL1000
            ENDIF
          ENDIF
.
          UNPACK    EMRESDAT,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          PACK      DISPDATE,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR,SP70
.
          PACK      DIM11,EMRERESP,EMRESDAT,SP70
.
          MATCH     FILTRESP,DIM11
          IF        @EQUAL
            WRITE     HTMLFILE;"<option value=#"",DIM11,"#" selected>":
                               TDESC," - ",DISPDATE,"</option>"
          ELSE
            MATCH     "1",EMRESTAT
            GOTO      RSEL1000 IF EQUAL
.
            WRITE     HTMLFILE;"<option value=#"",DIM11,"#">",TDESC," - ":
                               DISPDATE,"</option>"
          ENDIF
          GOTO      RSEL1000
.
RSEL9999  RETURN
+
.-----------------------------------------------------------------------------.
. Determine Template from Mapping Table                                       .
.-----------------------------------------------------------------------------.
GETMAP00  MOVE      REPORTNO,F2
          MOVE      F2,ALTMMPRP
          REP       " 0",ALTMMPRP
          MOVE      TEMPLATE,F3
          MOVE      F3,ALTMMPTP
          REP       " 0",ALTMMPTP
          PACK      KEY16,EMSTSCOD,PRGID,ALTMMPRP,ALTMMPTP,SP70
          CALL      RDALTMP1
          IF        OVRCD=0
            MOVE     ALTMMPTT,TEMPLATE
          ENDIF
GETMAP99  RETURN
.
.------------------------------------------------------------
. Other Clinical Information Multiple
.------------------------------------------------------------
OTHC0000  MATCH     SP70,UPDATETY
          GOTO      OTHC7000 IF EQUAL
.
          MATCH     "A",UPDATETY            * Add
          GOTO      OTHC1000 IF EQUAL
.
          MATCH     "U",UPDATETY            * Update
          GOTO      OTHC2000 IF EQUAL
.
          MATCH     "D",UPDATETY            * Delete
          GOTO      OTHC3000 IF EQUAL
.
          GOTO      OTHC9000
.
OTHC1000  MOVE      ZERO,FORM2
.
          PACK      KEY10,EMOCI001,Z70
          CALL      RSEMOCI1
          CALL      RPEMOCI1
          BRANCH    OVRCD,OTHC1100
.
          MATCH     EMOCI001,EMOCVISN
          GOTO      OTHC1100 IF NOT EQUAL
.
          MOVE      EMOCCNTR,FORM2
.
OTHC1100  CALL      CLEMROCI                * Clear file vars
.
          ADD       ONE,FORM2
          MOVE      FORM2,EMOCI002
.
          CALL      MVEMOC00
.
          PACK      EMOCCDAT,CCC,CYY,CMM,CDD
          REP       " 0",EMOCCDAT
          CLOCK     TIME,EMOCCTIM
          MOVE      USERID,EMOCCUID 
.
          PACK      KEY10,EMOCI001,EMOCI002,SP70
          CALL      RAEMOCI1
          IF        OVRCD=1
            CALL      WREMOCI1
          ELSE
            GOTO      OTHC1100
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      OTHC9999
.
OTHC2000  PACK      KEY10,EMOCI001,EMOCI002,SP70
          CALL      RDEMOCI1
          BRANCH    OVRCD,OTHC9200
.
          CALL      MVEMOC00
.
          PACK      EMOCUDAT,CCC,CYY,CMM,CDD
          REP       " 0",EMOCUDAT
          CLOCK     TIME,EMOCUTIM
          MOVE      USERID,EMOCUUID
.
          CALL      UPEMOCI1
.
          MOVE      ZERO,EXIT
          GOTO      OTHC9999
.
OTHC3000  PACK      KEY10,EMOCI001,EMOCI002,SP70
          CALL      RDEMOCI1
          BRANCH    OVRCD,OTHC9200
.
          CALL      DEEMOCI1
.
          MOVE      ZERO,EXIT
          GOTO      OTHC9999
.
OTHC7000  PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,OTHC9100
.
          PACK      KEY8,URNUMBER,SP70
          CALL      RDMAST1
          IF        OVRCD=1
            CALL      CLPATMAS
            CALL      CLPMSPX2
          ELSE  
            MOVE      PURNO,KEY8
            CALL      RDPMPX21
            IF        OVRCD=1
              CALL      CLPMSPX2
            ENDIF
          ENDIF
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDEMUNK1
          IF        OVRCD=0
            MOVE      ZEROUR,PURNO
            MOVE      EMUNDET1,PSNAME
            MOVE      EMUNDET2,PGNAME
            MOVE      SP70,PTITL
            MOVE      SP70,PBDATE
            MOVE      EMUNAGE,PSAGE
            MOVE      EMUNSEX,PSEX
          ENDIF
.
          PACK      KEY10,EMOCI001,EMOCI002,SP70
          CALL      RDEMOCI1
          IF        OVRCD=1
            CALL      CLEMROCI
          ENDIF
.
          CLEAR     WEBTITLE
          MOVE      "Other Clinical Information",WEBTITLE
          RESET     WEBTITLE
.
          CALL      WEBHED00   * Create Output File and Write HTML Page Header
          BRANCH    EXIT,OTHC9999
          CALL      WEBBOD00   * Process Web Body
          CALL      WEBEND00   * Process End of HTML File
.
          MOVE      ONE,EXIT
          GOTO      OTHC9999
.
OTHC9000  MOVE      "Invalid Form Action.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      OTHC9999
.
OTHC9100  MOVE      "Invalid Emergency Visit Record.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      OTHC9999
.
OTHC9200  MOVE      "Invalid Clinical Information Record.",WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      OTHC9999
.
OTHC9999  RETURN
.
.------------------------------------------------------------
. Other clinical information table
.------------------------------------------------------------
OCIT0000  PACK      KEY10,ADMISSNO,SP70
          CALL      RSEMOCI1
OCIT1000  CALL      RKEMOCI1
          BRANCH    OVRCD,OCIT9999
.
          MATCH     ADMISSNO,EMOCVISN
          GOTO      OCIT9999 IF NOT EQUAL
.
          CLEAR     HTMLLINK
          APPEND    "javascript:LinkRecord('",HTMLLINK
          APPEND    EMOCVISN,HTMLLINK
          APPEND    "','",HTMLLINK
          APPEND    EMOCCNTR,HTMLLINK
          APPEND    "')",HTMLLINK
          RESET     HTMLLINK
.
          CLEAR     HTMLLNK2
          APPEND    "javascript:DeleteRecord('",HTMLLNK2
          APPEND    EMOCVISN,HTMLLNK2
          APPEND    "','",HTMLLNK2
          APPEND    EMOCCNTR,HTMLLNK2
          APPEND    "')",HTMLLNK2
          RESET     HTMLLNK2
.
          MOVE      SP70,DESCCTYP
          MATCH     SP70,EMOCTYPE
          IF        !@EQUAL
            PACK      KEY5,CATTY,EMOCTYPE,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              MOVE      EMOCTYPE,TDESC
            ENDIF
            MOVE      TDESC,DESCCTYP
          ENDIF
.
          MOVE      SP70,DESCORDR
          MATCH     "1",EMOCORDR
          IF        @EQUAL
            MOVE      DYES,DESCORDR
          ENDIF
.
          MOVE      SP70,DESCRETN
          MATCH     "1",EMOCPRET
          IF        @EQUAL
            MOVE      DYES,DESCRETN
          ENDIF
.
          MOVE      SP70,DESCSEEN
          MATCH     "1",EMOCRSFL
          IF        @EQUAL
            MOVE      DYES,DESCSEEN
          ENDIF
.
          MOVE      SP70,DESCPATH
          MATCH     SP70,EMOCPCCD
          IF        !@EQUAL
            PACK      KEY5,ANSP,ANSQ,EMOCPCCD,SP70
            CALL      RDCODE1
            IF        OVRCD=1
              MOVE      EMOCPCCD,TDESC
            ENDIF
            MOVE      TDESC,DESCPATH
          ENDIF
.
          WRITE     HTMLFILE;"t.addRow(#"",HTMLLINK,"#",": * 0
                             "#"",HTMLLNK2,"#",":          * 1
                             "#"",DESCCTYP,"#",":          * 2
                             "#"",DESCORDR,"#",":          * 3
                             "#"",EMOCCTOD,EMOCCTOT,"#",": * 4
                             "#"",DESCRETN,"#",":          * 5
                             "#"",EMOCCTRD,EMOCCTRT,"#",": * 6
                             "#"",DESCSEEN,"#",":          * 7
                             "#"",EMOCCTSD,EMOCCTST,"#",": * 8
                             "#"",DESCPATH,"#",":          * 9
                             "#"",ONE,"#",":               * 10
                             "#"",EMOCCTOD,"#",":          * 11
                             "#"",EMOCCTOT,"#",":          * 12
                             "#"",EMOCCTRD,"#",":          * 13
                             "#"",EMOCCTRT,"#",":          * 14
                             "#"",EMOCCTSD,"#",":          * 15
                             "#"",EMOCCTST,"#")"           * 16
.
          GOTO      OCIT1000
.
OCIT9999  RETURN
.
.------------------------------------------------------------
. Write to emrdcmaf for wahealth
.------------------------------------------------------------
WEMDT000  PACK      KEY8,ADMISSNO,SP70           * Delete diagnosis free text
          CALL      DEEMDCM1                     * record
.
          MOVE      SP70,EMDCTXT1
          MOVE      SP70,EMDCTXT2
          MOVE      SP70,EMDCTXT3
          MOVE      SP70,EMDCTXT4
          MOVE      SP70,EMDCTXT5
          MOVE      SP70,EMDCTXT6
          MOVE      SP70,EMDCTXT7
          MOVE      SP70,EMDCTXT8
          MOVE      SP70,EMDCTXT9
          MOVE      ZERO,WRITEFLG                * No valid records
.
          PACK      KEY14,ADMISSNO,ZERO,ZERO,FIVE,SP70
          CALL      RSEMVCD1
WEMDT100  CALL      RKEMVCD1
          BRANCH    OVRCD,WEMDT800
.
          MATCH     ADMISSNO,EMVCVIST
          GOTO      WEMDT800 IF NOT EQUAL
.
          MATCH      "005",EMVCTYPE              * Diagnosis
          GOTO      WEMDT800 IF NOT EQUAL
.
          PACK      KEY9,EMVCMNCD,SP70         
          CALL      RDEMICD1                  
          BRANCH    OVRCD,WEMDT100           
.
          MOVE      EMVCFTXT,DIM100
.
          STRIP     EMICDESC
          PACK      EMVCFTXT,EMICDESC,SP70
          CALL      SPDT0000                     * Split diagnosis
.
          PACK      EMVCFTXT,DIM100,SP70
          CALL      SPDT0000
.
          MOVE      ONE,WRITEFLG                 * Yes valid records
          GOTO      WEMDT100
.
WEMDT800  MATCH     "1",WRITEFLG                 * Any valid diagnosis records
          GOTO      WEMDT999 IF NOT EQUAL
.
          MOVE      ADMISSNO,EMDCADMI
          PACK      KEY8,ADMISSNO,SP70
.
          CALL      RAEMDCM1
          IF        OVRCD=1
            CALL      WREMDCM1                   * Write diagnosis fee text
          ENDIF                                  * record
.
WEMDT999  RETURN
.------------------------------------------------------------
.  Table of Visit Coding wahealth
.------------------------------------------------------------
TABCWA00  UNPACK    DIM127,KEY1,OBJNAME,KEY1,EMVCD002,KEY1,EMVCD004,DIM127
          PACK      KEY14,ADMISSNO,EMVCD002,SP70
          CALL      RSEMVCD1
TABCWA10  CALL      RKEMVCD1
          BRANCH    OVRCD,TABCWA99
          MATCH     ADMISSNO,EMVCVIST
          GOTO      TABCWA99 IF NOT EQUAL
          MATCH     EMVCD002,EMVCTYPE
          GOTO      TABCWA99 IF NOT EQUAL
.
          MATCH     SP70,EMVCD004
          IF        !@EQUAL & !@EOS
            MOVE      ZERO,FORM2
            MOVE      EMVCD004,FORM2
            COMPARE   FORM2,EMVCCSYS
            GOTO      TABCWA10 IF NOT EQUAL
          ENDIF
.
          CALL      LOKCOD00                * Lookup Code to get description
          BRANCH    EXIT,TABCWA99
.
          MATCH      "1",EMVCEFLG
          IF         @EQUAL
            MOVE     "Yes",EFLGDESC
          ELSE
            MOVE     "No",EFLGDESC
          ENDIF
.
          MOVE      SP70,WBSENAM
          MATCH     SP70,EMVCWUSR
          IF        !@EQUAL
            PACK      KEY10,EMVCWUSR,SP70
            CALL      RDWBSE1
            IF        OVRCD=1
              MOVE      EMVCWUSR,WBSENAM
            ENDIF
          ENDIF
.
          PACK      RECORDKY,EMVCVIST,EMVCTYPE,EMVCUNIQ
.
          PACK      KEY10,EMVCEDAD,SP70
          CALL      RDPMHCP1
          IF        OVRCD=1
            MOVE      "Invalid HCP - ",DOCFNAME
            ENDSET    DOCFNAME
            APPEND    EMVCEDAD,DOCFNAME
            RESET     DOCFNAME
          ELSE
            MOVE      PMHCTITL,FMTTITLE
            MOVE      PMHCGNAM,FMTGNAME
            MOVE      PMHCSNAM,FMTSNAME
            CALL      DOCNM000
          ENDIF
.
          MATCH     "000",EMVCSEQU
          IF        @EQUAL
            MOVE      "Primary",KEY10
          ELSE
            MOVE      "Additional",KEY10
          ENDIF
.
          WRITE     HTMLFILE;OBJNAME,".addRow(#"",KEY10:
                             "#",#"",EMVCCSYS:
                             "#",#"",EMVCMNCD:
                             "#",#"",CODEDESC:
                             "#",#"",EMVCDATE:
                             "#",#"",EMVCTIME:
                             "#",#"",EFLGDESC:
                             "#",#"",WBSENAM:
                             "#",#"",EMVCLUDT:
                             "#",#"",EMVCLUTM:
                             "#",#"javascript:ShowDetail('",URNUMBER:
                                   "','",RECORDKY,"','",EMVCTYPE,"')":
                             "#",#"",ICDDESC:
                             "#",#"",EMVCDATE,EMVCTIME:
                             "#",#"",EMVCLUDT,EMVCLUTM;
.
          MATCH     "1",EMVCDELE
          IF        @EQUAL
            WRITE     HTMLFILE;"#",#"","ShowStrike";
          ELSE
            WRITE     HTMLFILE;"#",#"",SP1;
          ENDIF
.
          WRITE     HTMLFILE;"#",#"",EMVCUDA1;
.
          WRITE     HTMLFILE;"#",#"",DOCFNAME;
.
          WRITE     HTMLFILE;"#",#"javascript:DeleteDetail('",URNUMBER:
                             "','",RECORDKY,"')";
.
          MATCH     SP100,EMVCFTXT
          IF        @EQUAL | @EOS
            WRITE     HTMLFILE;"#",#"",ICDDESC;
          ELSE
            WRITE     HTMLFILE;"#",#"",EMVCFTXT;
          ENDIF
.
          WRITE     HTMLFILE;"#",#"",EMVCMNCD,"&nbsp;&nbsp;&nbsp;",ICDDESC:
                             "#",#"",EMVCFTXT;
.
          WRITE     HTMLFILE;"#")"
.
          GOTO      TABCWA10
.
TABCWA99  RETURN
.
.-----------------------------------------------------------
. Write EDWARD emergency visit alteration record
.------------------------------------------------------------
WEDV0000  MATCH     SP70,PTCNNSSI        * no edward source system
          GOTO      WEDV9999 IF EQUAL
.
          MATCH     "00000000000000000000",PTCNNSSI  * no edward source system
          GOTO      WEDV9999 IF EQUAL
.
          MOVE      EMVIADMN,PMAWVISN
          MOVE      FOUR,PMAWTYPE
          PACK      PMAWOLDV,SP70,SP70,SP70,SP70
          PACK      PMAWNEWV,SP70,SP70,SP70,SP70
.
          CALL      IBACLOCK
          PACK      PMAWCDAT,CCC,CYY,CMM,CDD
          REP       " 0",PMAWCDAT
          MOVE      "00:00:00",PMAWCTIM
          PACK      PMAWCUID,USERID
          PACK      PMAWSPAR,SP70,SP70
.
          PACK      KEY27,PMAWCDAT,PMAWCTIM,PMAWVISN,PMAWTYPE,SP70
          CALL      RAPMADW1
          IF        OVRCD=1
            CALL      WRPMADW1
          ELSE
            CALL      UPPMADW1
          ENDIF
.
WEDV9999  RETURN
+
.------------------------------------------------------------
.         Attending Doctor History
.------------------------------------------------------------
DOCHIS00  MOVE      SP70,SAVDOC
          PACK      KEY22,ADMISSNO,SP70
          CALL      RSEMHIS1
DOCHIS10  CALL      RKEMHIS1
          BRANCH    OVRCD,DOCHIS99
.
          MATCH     ADMISSNO,EMHIVIS
          GOTO      DOCHIS99 IF NOT EQUAL
.
          MATCH     EMHIDOC,SAVDOC
          GOTO      DOCHIS10 IF EQUAL
.
          MATCH     "FRDOC",EMHIUPT
          GOTO      DOCHIS10 IF EQUAL
.
DOCHIS15  MOVE      SP70,DOCTRHIS
          MOVE      EMHIDOC,KEY6
          CALL      RDDOCT1
          IF        OVRCD=1
            MOVE      SP70,DOCTRHIS
          ELSE
            APPEND    DTITL,DOCTRHIS
            APPEND    DGNAME,DOCTRHIS
            APPEND    DSNAME,DOCTRHIS
          ENDIF
.
          WRITE     HTMLFILE;"<option value=#"",EMHIDOC,"#" selected>":
                               DOCTRHIS,"</option>"
.
          MOVE      DCODE,SAVDOC
          GOTO      DOCHIS10
.
DOCHIS99  RETURN
+
.------------------------------------------------------------
. validate 75% fee for MBS Consultation Billing
.------------------------------------------------------------
VALM7500  UNPACK    DIM127,DIM1,KEY9,DIM127
.
          PACK      KEY9,KEY9,SP70
.
          MATCH     SP70,KEY9
          GOTO      VALM7599 IF EQUAL
          GOTO      VALM7599 IF EOS
.
          MATCH     SP70,EMVIDATE
          GOTO      VALM7599 IF EQUAL
          GOTO      VALM7599 IF EOS
.
          PACK      KEY22,SP1,ZERO,KEY9,SP70
VALM7505  CALL      RSPRIT1
VALM7510  CALL      RKPRIT1
          BRANCH    OVRCD,VALM7599
.
          COMPARE   ZERO,PRITFLAG
          GOTO      VALM7599 IF NOT EQUAL
.
          MATCH     KEY9,PRITITMN
          GOTO      VALM7599 IF NOT EQUAL
.
          MATCH     SP70,PRITSUBN
          GOTO      VALM7599 IF NOT EQUAL
.
          MATCH     PRITDAT1,EMVIDATE
          GOTO      VALM7510 IF LESS
.
          COMPARE   ZERO,PRITSF75
          GOTO      VALM7510 IF EQUAL
.
          WRITE     HTMLFILE;ONE;
.
VALM7599  RETURN
+
.------------------------------------------------------------
. validate RV sub item code in priitemf
.------------------------------------------------------------
VALDRV00  UNPACK    DIM127,DIM1,KEY9,DIM127
.
          PACK      KEY9,KEY9,SP70
.
          MATCH     SP70,KEY9
          GOTO      VALDRV99 IF EQUAL
          GOTO      VALDRV99 IF EOS
.
          MATCH     SP70,EMVIDATE
          GOTO      VALDRV99 IF EQUAL
          GOTO      VALDRV99 IF EOS
.
          PACK      KEY22,SP1,ZERO,KEY9,ANSR,ANSV,SP1,SP70
VALDRV05  CALL      RSPRIT1
VALDRV10  CALL      RKPRIT1
          BRANCH    OVRCD,VALDRV99
.
          COMPARE   ZERO,PRITFLAG
          GOTO      VALDRV99 IF NOT EQUAL
.
          MATCH     KEY9,PRITITMN
          GOTO      VALDRV99 IF NOT EQUAL
.
          MATCH     "RV ",PRITSUBN
          GOTO      VALDRV99 IF NOT EQUAL
.
          MATCH     PRITDAT1,EMVIDATE
          GOTO      VALDRV10 IF LESS
.
          WRITE     HTMLFILE;ONE;
.
VALDRV99  RETURN
+
.------------------------------------------------------------
. Validate Misc Charge Item Code
.------------------------------------------------------------
VALMIT00  UNPACK    DIM127,DIM1,KEY9,DIM127
.
          PACK      KEY9,KEY9,SP70
.
VALMIT01  MOVE      ZERO,INVALDFL
.
.         Check for miscellaneous item code
.
          CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
          PACK      KEY14,EMVIFUND,EMVITABL,SP70
          CALL      RDFUND1
          IF        OVRCD=1
            MOVE      SP70,PTHFBCAT
          ENDIF
.
          PACK      KEY29,EMVICOMP,EMVIFUND,PTHFBCAT,KEY9,CURRDATE,SP10
          CALL      PATMCHRD                * read Misc.Charges file
          COMPARE   ZERO,EXIT
          GOTO      VALMIT80 IF EQUAL       * it's valid
.
          MOVE      WKMCINAC,INVALDFL       * inactive
          MOVE      WKMCXXDT,INVALDAT       * date range error
.
.         No record with health fund details - try a blank health fund
.
          PACK      KEY29,EMVICOMP,SP6,SP3,KEY9,CURRDATE,SP10
          CALL      PATMCHRD                * read Misc.Charges file
          COMPARE   ZERO,EXIT
          GOTO      VALMIT80 IF EQUAL       * it's valid
.
          MOVE      WKMCINAC,INVALDFL       * inactive
          MOVE      WKMCXXDT,INVALDAT       * date range error
.
.
.         No record with blank fund details. Last chance, try default claim.
.
VALMIT02  IF        IBCNMHOS=1
            MATCH     SP10,MULTHOSP
            IF        @EQUAL
              PACK      KEY3,WBSEHOSP,SP70
              CALL      RSPTHSP1
              CALL      RKPTHSP1
              BRANCH    OVRCD,VALMIT99
            ELSE
              PACK      KEY3,MULTHOSP
              CALL      RDPTHSP1
              BRANCH    OVRCD,VALMIT99
            ENDIF
            PACK      KEY29,PTHSDCLM,SP6,SP3,KEY9,CURRDATE,SP10
          ELSE
            PACK      KEY29,PTCNDCLM,SP6,SP3,KEY9,CURRDATE,SP10
          ENDIF
.
VALMIT03  CALL      PATMCHRD                * read Misc.Charges file
          COMPARE   ZERO,EXIT
          GOTO      VALMIT80 IF EQUAL       * it's valid
.
          MOVE      WKMCINAC,INVALDFL       * inactive
          MOVE      WKMCXXDT,INVALDAT       * date range error
.
.                          read forward (for some reason)
.
VALMIT05  IF        IBCNMHOS=1
            PACK      KEY29,PTHSDCLM,SP6,SP3,KEY9,CURRDATE,SP10
          ELSE
            PACK      KEY29,PTCNDCLM,SP6,SP3,KEY9,CURRDATE,SP10
          ENDIF
          CALL      RDMCHG1
          IF        OVRCD=0
            MATCH     "1",PTMCACTV               * Inactive ?
            GOTO      VALMIT80 IF NOT EQUAL      * No
            MOVE      ONE,INVALDFL
          ENDIF
.
          UNPACK    KEY29,KEY21,KEY8

          CALL      RDKMCHG1                     * read forward (beware)
          BRANCH    OVRCD,VALMIT50
          PACK      KEY21A,MCLMCOD,MHFUND,PTMCHFTT,MCHARGE
          MATCH     KEY21,KEY21A
          IF        @EQUAL
            MOVE      ONE,INVALDFL
            GOTO      VALMIT80
          ENDIF
          GOTO      VALMIT99
.
.         read thru all hospitals in multi hospitals table
.
VALMIT50  IF        IBCNMHOS=1
            MATCH     SP10,MULTHOSP
            IF        @EQUAL
              CALL      RKPTHSP1
              IF        OVRCD=0
                PACK      KEY29,PTHSDCLM,SP6,SP3,KEY9,CURRDATE,SP10
                GOTO      VALMIT03
              ENDIF
            ENDIF
          ENDIF
.
          BRANCH    INVALDFL,VALMIT99
          BRANCH    INVALDAT,VALMIT99
          GOTO      VALMIT99
.
.                   set up HTLM data
.
VALMIT80  WRITE     HTMLFILE;ONE;
.
VALMIT99  RETURN
.
.------------------------------------------------------------
. validate misc item against pmsmtiaf aaedtraf
.------------------------------------------------------------
VALMSC00  UNPACK    DIM127,DIM1,KEY9,DIM127
.
          PACK      KEY9,KEY9,SP70
.
          MATCH     SP70,KEY9
          GOTO      VALMSC99 IF EQUAL
          GOTO      VALMSC99 IF EOS
.
          MOVE      EMVIADMN,KEY8
.
          PACK      KEY15,KEY8,THREE,SP70
          CALL      RSPMMTI2
VALMSC10  CALL      RKPMMTI2
          BRANCH    OVRCD,VALMSC50
.
          MATCH     KEY8,PMMIVISN
          GOTO      VALMSC50 IF NOT EQUAL
.
          MATCH     "3",PMMIRTYP
          GOTO      VALMSC50 IF NOT EQUAL
.
          MATCH     KEY9,PMMIITEM
          GOTO      VALMSC10 IF NOT EQUAL
.
          GOTO      VALMSC97
.
VALMSC50  PACK      KEY22,KEY8,SP70
          CALL      RDSDTRE1
VALMSC60  CALL      RDKDTRE1
          BRANCH    OVRCD,VALMSC99
.
          MATCH     KEY8,DATNUMB
          GOTO      VALMSC99 IF NOT EQUAL
.
          COMPARE   ONE,ATRECTYP
          GOTO      VALMSC60 IF NOT EQUAL
.
          MATCH     KEY9,ATITEMNO
          GOTO      VALMSC60 IF NOT EQUAL
.
VALMSC97  WRITE     HTMLFILE;ONE;
.
VALMSC99  RETURN
+
.------------------------------------------------------------
. validate ama/mbs item against pmsmtiaf aaedtraf
.------------------------------------------------------------
VALPRI00  UNPACK    DIM127,DIM1,KEY9,DIM127
.
          PACK      KEY9,KEY9,SP70
.
          MATCH     SP70,KEY9
          GOTO      VALPRI99 IF EQUAL
          GOTO      VALPRI99 IF EOS
.
          MOVE      EMVIADMN,KEY8
.
          PACK      KEY15,KEY8,EIGHT,SP70
          CALL      RSPMMTI2
VALPRI10  CALL      RKPMMTI2
          BRANCH    OVRCD,VALPRI50
.
          MATCH     KEY8,PMMIVISN
          GOTO      VALPRI50 IF NOT EQUAL
.
          MATCH     "8",PMMIRTYP
          GOTO      VALPRI50 IF NOT EQUAL
.
          MATCH     KEY9,PMMIITEM
          GOTO      VALPRI10 IF NOT EQUAL
.
          GOTO      VALPRI97
.
VALPRI50  PACK      KEY22,KEY8,SP70
          CALL      RDSDTRE1
VALPRI60  CALL      RDKDTRE1
          BRANCH    OVRCD,VALPRI99
.
          MATCH     KEY8,DATNUMB
          GOTO      VALPRI99 IF NOT EQUAL
.
          COMPARE   FIVE,ATRECTYP
          GOTO      VALPRI60 IF NOT EQUAL
.
          MATCH     KEY9,ATITEMNO
          GOTO      VALPRI60 IF NOT EQUAL
.
VALPRI97  WRITE     HTMLFILE;ONE;
.
VALPRI99  RETURN
+
.------------------------------------------------------------
. Validate Emergency In Hours/Days for Cab Emr Billing Sheet
.------------------------------------------------------------
EMINHR00  MOVE      "EMSTRTIM",CPARPARM
          MOVE      IBCNMHOS,CPARMHOS
          MOVE      USERID,CPARUSER
          CALL      GTCMPA00
          BRANCH    CPARERRO,EMINHR99
.
          MATCH     SP70,CMPAVALU
          GOTO      EMINHR99 IF EQUAL
.
          MOVE      CMPAVALU,EMSTRTIM
.
          MOVE      "EMENDTIM",CPARPARM
          MOVE      IBCNMHOS,CPARMHOS
          MOVE      USERID,CPARUSER
          CALL      GTCMPA00
          BRANCH    CPARERRO,EMINHR99
.
          MATCH     SP70,CMPAVALU
          GOTO      EMINHR99 IF EQUAL
.
          MOVE      CMPAVALU,EMENDTIM
.
          MOVE      "EMWKDAYS",CPARPARM
          MOVE      IBCNMHOS,CPARMHOS
          MOVE      USERID,CPARUSER
          CALL      GTCMPA00
          BRANCH    CPARERRO,EMINHR99
.
          MATCH     SP70,CMPAVALU
          GOTO      EMINHR99 IF EQUAL
.
          MOVE      CMPAVALU,EMWKDAYS
.
          CALL      IBACLOCK
.
          PACK      KEY8,CCC,CYY,CMM,CDD,SP70
          REP       " 0",KEY8
          REP       " 0",EMWKDAYS
.         MATCH     "00000000",EMWKDAYS
.         GOTO      EMINHR99 IF EQUAL
.
          MATCH     SP70,EMVITRDT
          GOTO      EMINHR99 IF EQUAL
.
          MATCH     SP70,EMVITRTM
          GOTO      EMINHR99 IF EQUAL          
.
.         MATCH     SP70,EMVIUC21
.         IF        !@EQUAL
.           MOVE      "em",CATEGORY
.           MOVE      EMVIUC21,CODE
.           CALL      GETCOD00           
.
.           MATCH     "D",TCINDC5
.           IF        @EQUAL
.             WRITE     HTMLFILE;THREE;              
.             GOTO      EMINHR99
.           ENDIF
.            
.         ENDIF
.
          MATCH     "1",EMWKDAYS
          IF        @EQUAL
.
            PACK      KEY11,KEY8,SP70
            CALL      RDPHOA1
            IF        OVRCD=1
              IF        IBCNMHOS=1
                PACK      KEY11,KEY8,WBSEHOSP,SP70 
                CALL      RDPHOA1                 
                BRANCH    OVRCD,EMINHR50
.
                GOTO      EMINHR70
.
              ENDIF
            ELSE
.
              GOTO      EMINHR70
.
            ENDIF
          ENDIF          
.
EMINHR50  UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
          CALL      DAYOFWEK
          ADD       ONE,WEEKDAY
          RESET     EMWKDAYS,WEEKDAY
          MATCH     "1",EMWKDAYS
          IF        @EQUAL
            GOTO      EMINHR70
          ENDIF
.
          MATCH      EMSTRTIM,EMVITRTM
          IF         @LESS
            GOTO      EMINHR70
          ENDIF
.
          MATCH      EMVITRTM,EMENDTIM
          IF         @LESS
            GOTO      EMINHR70
          ENDIF
.
EMINHR60  MATCH     SP70,EMVIUC21
          IF        !@EQUAL
            MOVE      "em",CATEGORY
            MOVE      EMVIUC21,CODE
            CALL      GETCOD00
.
            MATCH     "D",TCINDC5
            IF        @EQUAL
              WRITE     HTMLFILE;THREE;
              GOTO      EMINHR99
            ENDIF
.
          ENDIF
.
          WRITE     HTMLFILE;ONE;
          GOTO      EMINHR99
.
EMINHR70  MATCH     SP70,EMVIUC21
          IF        !@EQUAL
            MOVE      "em",CATEGORY
            MOVE      EMVIUC21,CODE
            CALL      GETCOD00
.
            MATCH     "D",TCINDC5
            IF        @EQUAL
              WRITE     HTMLFILE;FOUR;
              GOTO      EMINHR99
            ENDIF
.
          ENDIF
.
          WRITE     HTMLFILE;TWO;
.
EMINHR99  RETURN
+
.----------------------------------------------------------------
. Check if Emergency patient has existing proecedures in pmsmtiaf
.----------------------------------------------------------------
VALEMP00  MOVE      EMVIADMN,KEY8
.
          PACK      KEY15,KEY8,EIGHT,SP70
          CALL      RSPMMTI2
VALEMP10  CALL      RKPMMTI2
          BRANCH    OVRCD,VALEMP99
.
          MATCH     KEY8,PMMIVISN
          GOTO      VALEMP99 IF NOT EQUAL
.
          MATCH     "8",PMMIRTYP
          GOTO      VALEMP99 IF NOT EQUAL
.
          MATCH     " 1",PMMISYST
          GOTO      VALEMP10 IF NOT EQUAL
.
VALEMP97  WRITE     HTMLFILE;ONE;
.
VALEMP99  RETURN
+
.------------------------------------------------------------
.         Includes
.------------------------------------------------------------
          INC       CLEMROCI
          INC       CLEMRVIS
          INC       CLPATMAS
          INC       CLCOMPAR
          INC       EMRDCMIO/INC
          INC       EMROCIIO/INC
          INC       EMROCITM
          INC       EMRDCMTX
          INC       EMRDELTM
          INC       AAEDTRIO/INC
          INC       ALLTMPIO/INC
          INC       APSMASIO/INC
          INC       COMPARIO/INC
          INC       EMRDELIO/INC
          INC       EMRGRCIO/INC
          INC       EMRICDIO/INC
          INC       EMRHISIO/INC
          INC       EMRINVIO/INC
          INC       EMRMTXIO/INC
          INC       EMRPROIO/INC
          INC       EMRLOCIO/INC
          INC       EMRRESIO/INC
          INC       EMRRESTM
          INC       EMRRSLIO/INC
          INC       EMRRSLTM
          INC       EMRRVSIO/INC
          INC       EMRRVSTM
          INC       EMRSECIO/INC
          INC       EMRSITIO/INC
          INC       EMRVCDIO/INC
          INC       EMRVDGIO/INC
          INC       EMRDOCIO/INC
          INC       EMRCLIIO/INC
          INC       EMRVISIO/INC
          INC       EMRVISTM
          INC       EMRINVTM
          INC       EMRVPRTM
          INC       EMRVDGTM
          INC       EMRCLITM
          INC       EMRVPRIO/INC
          INC       EMRUNKIO/INC
          INC       EMRUTYIO/INC
          INC       PATDOCTM
          INC       PATDOCCD
          INC       PMSADWIO/INC
          INC       PMSUCHIO/INC
          INC       PMSUCDIO/INC
          INC       PATALRIO/INC
          INC       PATMASTM
          INC       CLPMSPX2
          INC       PMSPX2TM
          INC       PATMSXTM
          INC       PATNAMCD
          INC       PATFN1IO/INC
          INC       PATHSPIO/INC
          INC       PATIN1IO/INC
          INC       PATMA1IO/INC
          INC       PATMCHIO/INC
          INC       PMSHCPIO/INC
          INC       PMSBRQIO/INC
          INC       PMSRELIO/INC
          INC       PMSHCGIO/INC
          INC       PMSHCPTM
          INC       PMSHCGTM
.
          INC       PMSCCDIO/INC            * Concession Card Details
          INC       PMSPX2IO/INC
          INC       PMSMTIIO/INC
          INC       PMSVX1IO/INC
          INC       PATITMIO/INC
          INC       PRIITMIO/INC
          INC       OPRNURIO/INC
          INC       OUTSITIO/INC
          INC       OUTPHOIO/INC
          INC       MRTMASIO/INC
          INC       PATVADIO/INC
          INC       PATDO1IO/INC
          INC       PATVISIO/INC
          INC       PATICDIO/INC
          INC       PATWR1IO/INC
          INC       PATMI1IO/INC
          INC       PATDSCIO/INC
          INC       PATICOIO/INC
          INC       PATPR1IO/INC
          INC       NHIMASIO/INC
          INC       NHIETHIO/INC
          INC       VISMDTIO/INC
          INC       GTCMPA00
          INC       PATITMRD
          INC       EMRDRCHR
          INC       CLNHIMAS                   * Clear nhimasaf file variables
          INC       WEBPTMAS
          INC       WEBDATCD    
          INC       DAYOFWEK    
          INC       IBAWEBCD    
          INC       CALCAGE  
          INC       NAMSTRCD
          INC       PATMCHRD
