.******************************************************************************
.*                                                                            *
.*                         P R O G R A M   S U M M A R Y                      *
.*                         -------------   -------------                      *
.*                                                                            *
.*  PROGRAM NAME:   NZPBIL19                                                  *
.*                                                                            *
.*  FUNCTION:       FEES INVOICED REPORT FOR NZ PRIVATE BILLING               *
.*                                                                            *
.*  DATE WRITTEN:   03/07/86 (29/01/07 A COPY FROM IBABIL19)                  *
.*                                                                            *
.*  MODIFICATIONS:                                                            *
.*                                                                            *
.*----------------------------------------------------------------------------*
.*        V11.05.01 21/02/2025  J.Tan   TSK 0955356                           *
.*                  Added FININVN,FINADMN,FINURNO                             *
.*                  14/02/2025 J.Tan           TSK 0946490                    *
.*                  Recompiled for PATCATBI - Changes for MV CWO Payment Model*
.*        V11.04.03 15/03/2024  J.Tan          TSK 0910994                    *
.*                  Recompiled for CMXMATRX                                   *
.*        V11.04.02 29/01/2024  Jacob Jackson  TSK 0919335                    *
.*                  Add HF History includes                                   *
.*        V11.04.01 29/01/2024  Jacob Jackson  TSK 0919335                    *
.*                  Add new local variable and recompile for GETTFEES         *
.*        V11.03.01 18/10/2023  Nikitha B       TSK 0931217                   *
.*                  Opened nzpspraf file and called TFILENAM for FNAMEQ       *
.*        V11.02.01 16/03/2022  J.Tan           TSK 0902652                   *
.*                  Recompiled for AAECATBI/OUTCATBI - New Patient Invoice    *
.*        V11.01.03 25/08/2021  J.Tan           TSK 0905305                   *
.*                  Recompiled for AAECATBI - AE Care class (ABFAECCL)        *
.*        V11.01.02 28/04/2021  Thanh T         TSK 0895165                   *
.*                  Recompiled for OPRARDFD changes                           *
.*                  07/04/2021  Tracey Nguyen   TSK 0901515                   *
.*                  Recompiled for PMSCMTFD - Added new fields                *
.*                  a) 1 File type for ICD procedure (PMCCIPF)                *
.*                  b) 3 new CMBS Field Type (PMCCFTS4/PMCCFT5C/PMCCFT6C)     *
.*                  c) 3 new CMBS Codes From (PMCCPC4F,PMCCSC5F,PMCCTC6F)     *
.*                  d) 3 new CMBS Codes To   (PMCCPC4T/PMCCSC5T,PMCCTC6T)     *
.*                  24/04/2021  J.Tan           TSK 0863287                   *
.*                  Recompiled for PATCATBI - Patient Inv. new functionality  *
.*        V11.01.01 10/03/2021  Tracey Nguyen   TSK 0901515                   *
.*                  Recompiled for PMSCMTFD - Added Primary ICD Procedure 1-5 *
.*                  (PMCCICP1-5)                                              *
.*----------------------------------------------------------------------------*
.*        V11.00.03 25/08/2020  J.Tan          TSK 0895840                    *
.*                  Recompiled for NZPCATBI - Fixed Keyin amount Inc.to Contr.*
.*        V11.00.02 25/08/2020  J.Tan          TSK 0896164                    *
.*                  Recompiled for NZPCATBI - multiple Contract proc.issue    *
.*        V11.00.01 10/03/2020  J.Tan          TSK 0838262                    *
.*                  Added Effective from and to date to MBS Item file         *
.*        V10.15.01 11/10/2019  Peter Vela       TSK 0882906                  *
.*                  Recompiled for OUTCATBI - Fixed I*C for OUTBB1 ABF        *
.*        V10.14.01 22/03/2019  J.Tan            TSK 0857392                  *
.*                  Changed RCP Transaction count from DIM3 to DIM5           *
.*        V10.13.03 11/01/2019  Peter Vela     TSK 0867807                    *
.*                  Recompiled for OUTCATBI                                   *
.*        V10.13.02 26/10/2018  Thanh T        TSK 0859743                    *
.*                  Added BULKBILL field and removed OUTHEDFD/OUTHEDIO,       *
.*                  OUTSESFD/OUTSESIO for OUTCATBI changes                    *
.*        V10.13.01 25/10/2018  Thanh T        TSK 0859743                    *
.*                  Added OUTHEDFD/OUTHEDIO, OUTSESFD/OUTSESIO for OUTCATBI   *
.*                  changes                                                   *
.*----------------------------------------------------------------------------*
.*        V10.12.01 15.01.2018  J.Tan   TSK 0848146                           *
.*                  Added CACCFEE=5 - Accumulation FI by Claim code           *
.*        V10.11.01 07/09/2017  J.Tan         TSK 0837479                     *
.*                  Recompiled for CMXMATRX - OPCNCONS(Consumption type items)*
.*        V10.08.02 26/08/2016  Don Nguyen    TSK 0312570                     *
.*                  Recompiled for CMXMATRX - Added check for PTCNDGED=1      *
.*                  Added PMSEDGFD/IO and GETEFDRG                            *
.*        V10.08.01 02/05/2016  Ebon Clements TSK 0268970                     *
.*                  Change to use OUTCLIFD index 1 instead of index 2         *
.*        V10.07.01 18/11/2015  J.Tan         CAR 303942                      *
.*                  Added new payment types                                   *
.*        V10.06.01 14/07/2015  Peter Vela     CAR 318700                     *
.*                  Recompiled for PRBILCMN - Validate for deleted VISMDT     *
.*                  record                                                    *
.*        V10.04.02 11/06/2014 Sandra Barcham CAR 301639                      *
.*                  Moved call to TFILENAM to INIT0000                        *
.*        V10.04.01 08/04/2013 J.Tan          CAR 261630                      *
.*                  Removed port number from temp file name                   *
.*        V10.03.01 21/09/2012  J.Tan          CAR 271474                     *
.*                  Recompiled for CMXMATRX - using index 5 of pmscmtaf       *
.*                  04/12/2012  J.Tan          CAR 262673                     *
.*                  Recompiled for PATCATBI - Casepayment perdiem rate        *
.*        V10.01.02 24/02/2011  Peter Vela    CAR 233034                      *
.*                  Removed PATBF2FD and PATBF2IO                             *
.*        V10.01.01 21/12/2010  Mike Laming   CAR 233046                      *
.*                  Recompiled for PABXBILL - Mods to Misc.Charges PATMCHFD   *
.*        V10.00.01 07/06/2010  Mike Laming   CAR 212864                      *
.*                  Recompiled for PATCATBI - mods at GCDE6500                *
.*        V9.12.07  16/02/2010  Peter Vela    CAR 215485                      *
.*                  Recompiled for PATCATBI - Ignore Leave if less than 1 day *
.*        V9.12.06  05/02/2010  Peter Vela    CAR 215485                      *
.*                  Recompiled for PATCATBI - Ignore Leave if less than 1 day *
.*        V9.12.05  24/11/2009  Davin         CAR 210721                      *
.*                  Recompiled for CHKCMXPT - I*C on patcmxaf file            *
.*        V9.12.04  09/10/2009  J.Tan         CAR 203934                      *
.*                  Recompiled for PATCATBI - display ICD10 Sugg.Class on Inv.*
.*        V9.12.03  29/09/2009  J.Tan         CAR 202803                      *
.*                  Fixed Co-payment                                          *
.*        V9.12.02  21/09/2009  J.Tan         CAR 204390                      *
.*                  Recompiled for STEPDOWN - mods to old bed fees file       *
.*        V9.12.01  03/07/2009  Peter Vela    CAR 199927                      *
.*                  Recompiled for EMROPOCK - Check if PMMIAMTT = 0 GPRC4000  *
.*        V9.11.05  16/03/2009  J.Tan         CAR 188205                      *
.*                  Recompiled for PATCATBI - Mods to Non-banked Deposits     *
.*        V9.11.04  09/02/2009  J.Tan             CAR 188549                  *
.*                  Fixed printing Cash after checking on Credit note Adjust. *
.*        V9.11.03  29/01/2009  J.Tan             CAR 188549                  *
.*                  Mods Summary fees invoice                                 *
.*        V9.11.02  20/11/2008  Steve Armstrong   CAR 181373                  *
.*                  Recompiled for changes to PATCATBI.                       *
.*        V9.11.01  20/11/2008  Steve Armstrong   CAR 181373                  *
.*                  Recompiled for changes to PATCATBI.                       *
.*        V9.10.04  06/08/2008 J.Tan      CAR 175246                          *
.*                  Recompiled for AAECATBI                                   *
.*        V9.10.03  23/07/2008  J.Tan         CAR 170967                      *
.*                  Fixed printing Misc.item groups                           *
.*                  10/07/2008  J.Tan         CAR 170222                      *
.*                  Mods checking for blank rounding parameter                *
.*        V9.10.02  10/06/2008  J.Tan         CAR 170222                      *
.*                  Added RDAWORK prior WRWORK to stop hanging                *
.*        V9.10.01  13/05/2008 J.Tan      CAR 162313                          *
.*                  Added Deposit status to comdepaf                          *
.*        V9.09.07  20/02/2008 Peter Vela     CAR 161535                      *
.*                  Recompiled for PATCATBI                                   *
.*        V9.09.06  12/11/2007 J.Tan          CAR 151803                      *
.*                  Recompiled for AAECATBI - Cabrini ED Billing              *
.*        V9.09.05  20/08/2007 J.Tan          CAR 144656                      *
.*                  Recompiled for PATCATBI - for Multiple Procedures Billing *
.*        V9.09.04  10/08/2007 Peter Vela     CAR 146143                      *
.*                  Recompiled for PATCATBI                                   *
.*        V9.09.03  17/07/2007  J.Tan     CAR 140282                          *
.*                  Recompiled for NZPCATBI - Revenue breakdown               *
.*                  V9.09.02 03/07/2007 Peter Vela     CAR 142173             *
.*                  Recompiled for AAECATBI                                   *
.*                  V9.09.01 13/06/2007 J.Tan          CAR 142173             *
.*                  Recompiled for AAECATBI - GST for Emergency               *
.*                  V9.08.03 23/04/2007 J.Tan          CAR 132272             *
.*                  Mods for Credit notes                                     *
.*                  V9.08.02 19/02/2007 Peter Vela     CAR sjog-vic           *
.*                  Recompiled for PATCATBI - St. John of God invoice layout  *
.*                  V9.08.01 23/02/07 J.Tan      CAR 120014                   *
.*                  Mods for patient fixed fee                                *
.*                                                                            *
.******************************************************************************
.
          INC       STD001FD
          INC       PABXVARS/INC
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
          INC       IBATMHFD/INC
          INC       AAEDE1FD/INC
          INC       AAEDEBFD/INC
          INC       AAEDTRFD/INC
.
          INC       IBASECFD/INC
          INC       IBAPASFD/INC
          INC       IBACONFD/INC
          INC       IBAGEDFD/INC
          INC       IBAGSTFD/INC
.
          INC       OUTBOAFD/INC
          INC       OUTBB1FD/INC
          INC       OUTCLIFD/INC
          INC       OUTDTRFD/INC
          INC       OUTSITFD/INC
          INC       PATELGFD/INC
          INC       PATBFEFD/INC
          INC       PATCFAFD/INC
          INC       PATCMCFD/INC
          INC       PATCODFD/INC
          INC       PMSCIDFD/INC
          INC       PMSCCDFD/INC
          INC       PATCOMM/INC
          INC       PATCONFD/INC
          INC       PATCTFFD/INC
          INC       PATDHEAD/INC
          INC       PATDGWFD/INC
          INC       PATDINVS/INC
          INC       PATDO1FD/INC
          INC       PATDRGFD/INC
          INC       PATDSCFD/INC
          INC       PATDTRFD/INC
          INC       PATECDFD/INC
          INC       PATECOFD/INC
          INC       PATFINFD/INC
          INC       PATFIGFD/INC
          INC       NZPEXTFD/INC
          INC       NZPRDTFD/INC
          INC       NZPFINFD/INC
          INC       NZPFIGFD/INC
          INC       PATFMOFD/INC
          INC       PATFN1FD/INC
          INC       PATFX1FD/INC
          INC       PATFN2FD/INC
          INC       PATHSPFD/INC
          INC       PATHTRFD/INC
          INC       EMRHTRFD/INC
          INC       OUTHTRFD/INC
          INC       PATIBLFD/INC
          INC       PATICUFD/INC
          INC       PATIN1FD/INC
          INC       PATINMFD/INC
          INC       PATINVFD/INC
          INC       PATIOVFD/INC
          INC       PATIPEFD/INC
          INC       PATITMFD/INC
          INC       PATMA1FD/INC
          INC       PATMCHFD/INC
          INC       PATMI1FD/INC
          INC       PATOVBFD/INC
          INC       PATPGRFD/INC
          INC       PATRBLFD/INC
          INC       PATRE1FD/INC
          INC       PATRCAUD/INC
          INC       PATRATFD/INC
          INC       PATRFNFD/INC
          INC       PATRFGFD/INC
          INC       NZPRFNFD/INC
          INC       PATSELDT/INC
          INC       PATSRBFD/INC
          INC       PATTFEFD/INC
          INC       PATTRNFD/INC
          INC       PATVENFD/INC
          INC       PATVISFD/INC
          INC       PMSVX1FD/INC
          INC       PATWC1FD/INC
          INC       PATWMAFD/INC
          INC       PATWR1FD/INC
          INC       PATWVEFD/INC
          INC       PATFMSFD/INC
          INC       PMSFMSFD/INC
          INC       IBAGINFD/INC
          INC       FMSLMAFD/INC
          INC       PMSSINFD/INC
          INC       PMSEVTFD/INC
          INC       PMSHATFD/INC
          INC       PMSHCPFD/INC
          INC       PATCMTFD/INC
          INC       PMSCMTFD/INC
          INC       PMSCNOFD/INC
          INC       PMSIDEFD/INC
          INC       PMSPBRFD/INC
          INC       PMSSGAFD/INC
          INC       PMSMTIFD/INC
          INC       PMSMPRFD/INC
.
          INC       PATAFEFD/INC
          INC       PATASDFD/INC
          INC       PATCMXFD/INC
          INC       PATHDFFD/INC
          INC       PATHLFFD/INC
          INC       PATLDFFD/INC
          INC       PATLSDFD/INC
.
          INC       VISPAYFD/INC
          INC       NZPBFEFD/INC
          INC       NZPCMTFD/INC
          INC       NZPCFNFD/INC
          INC       MLTCFNFD/INC
          INC       NZPIBRFD/INC
          INC       NZPSPRFD/INC
          INC       NZPPFEFD/INC
          INC       NZPPICFD/INC
          INC       NZPMCHFD/INC
          INC       NZPMXCFD/INC
          INC       NZPTFEFD/INC
          INC       NZPIVBFD/INC
          INC       NZPRVBFD/INC
          INC       NZPRBRFD/INC
          INC       OPRSESFD/INC
          INC       OPRARDFD/INC
          INC       OPRDEAFD/INC
          INC       PRIITMFD/INC
.
          INC       EMRSITFD/INC
          INC       EMRHISFD/INC
          INC       EMRVISFD/INC
          INC       COMDEPFD/INC
          INC       RCPBNKFD/INC
          INC       RCPBDTFD/INC
          INC       RCPDTEFD/INC
          INC       RCPCONFD/INC
          INC       PMSEDGFD/INC       * Effective DRG Dates
          INC       PATDDHFD/INC
+
.
.          Temporary file used to accumulate data before printing report
.
TEMPFILE IFILE     SQL, FIXED=218, KEY="U1-1,2-3,4-16"     * was 186   *C-65765
.
.Name    Type     Size    Physical   Start     Description
.----    ----     ----    --------   -----     -----------
DSECTION DIM       1         1         1       Section of report
.                                              1 = Section 1 (Inv/cash/jrnl/crd)
.                                              2 = Section 2 (To be inv)
.                                              3 = Section 3 (Merch cards)
.
DSUBSECT DIM       2         2         2       Sub Section of report
.                                              Section 1:
.                                                 1 = FFS
.                                                 2 = Patient Fixed Fee
.                                                 3 = From Funder Contribution
.                                                 4 = Co-Payment
.                                                 5 = Funder Co-Payment Adjust.
.                                                 6 = Funder Contribution
.                                                 7 = Misc/Theatre items
.                                                 8 = Credit Note FFS
.                                                 9 = Credit Note Fixed Fees
.                                                10 = Credit Note From Funder
.                                                11 = Credit Note Co-Payment
.                                                12 = Credit Note Funder Co-Pay
.                                                     Adjustment
.                                                13 = Credit Note Funder Contr.
.                                                14 = Credit Note Misc/Thea.Item
.                                                15 = GST 
.                                                16 = Credit Note GST 
.                                                17 = Cash
.                                                18 = Journals
.                                                19 = GST Journals
.                                                20 = Rounding 
.                                                21 = Credit Note Rounding
.
.                                              Section 2:
.                                                 1 = FFS
.                                                 2 = Patient Fixed Fee
.                                                 3 = From Funder Contribution
.                                                 4 = Co-Payment
.                                                 5 = Funder Co-Payment Adj.
.                                                 6 = Funder Contribution
.                                                 7 = Misc items
.                                                 8 = Cash
.                                              Section 3:
.                                                 1 = Claimed
.                                                 2 = Cash
.                                                 3 = Commission
.                                                 4 = Journals
.
SUBCODE  DIM       13        13        4       Subsection code
.                                              Section 1.1 & 2.1 & 1.4:
.                                              Fees for Service
.                                              ----------------
.                                                 AXXX   , XXX  = Adm Type
.                                                               = Adm Type
.                                                 or
.                                                 AXXXYYY, XXX  = Ward
.                                                          YYY  = Claim Type
.                                                 or
.                                                 AXXXYYYZ,XXX  = Claim Type
.                                                          YYY  = Adm type
.                                                            Z  = Extra Charge
.
.                                              Patient Pat.Fixed Fee
.                                              --------------------------------
.                                              CXXXXXXYYYYYYYYY
.                                               XXXXXX   - Contract/HF
.                                               YYYYYYYY - Contract Proc.
.
.                                         Co-Payment
.                                         ------------------------------------
.                                         GXXXXXXYYYYYYYYY
.                                          XXXXXX   - Contract/HF
.                                          YYYYYYYY - Contract Proc.
.                                               
.                                         Funder Co-Payment Adjustment
.                                         ------------------------------------
.                                         HXXXXXXYYYYYYYYY
.                                          XXXXXX   - Contract/HF
.                                          YYYYYYYY - Contract Proc.
.
.                                              Funder Contribution
.                                              -------------------
.                                              FXXXXXXYYYYYYYYY
.                                               XXXXXX   - Contract/HF
.                                               YYYYYYYY - Contract Proc.
.
.                                                 Outpatient
.                                                 OXXXXXXYYY
.                                                        XXXXXX = Clinic id
.                                                           YYY = Site prefix
.
.                                              Section 1.3 & 2.3 & 1.4:
.                                                PTCNMFEE=1
.                                                 XXXYYY    XXX = Claim Code,
.                                                           YYY = Misc Grp/Item
.                                                ELSE
.                                                 XXX    , XXX  = Misc Grp
.                                                (if Misc.Grp does not exist):
.                                                    YYYY, YYYY = Item code
.                                                ZZZZZZYYY      = GST code
.                                                ZZZZZZZ        = Section Total
.                                                                   (Inc Accom)
.                                              Section 1.5 & 2.5:
.                                                 A             = From Patient
.                                                 BXXXXXX       = From H.F.
.                                                 C             = From Govt Sub
.                                                 DXXX   , XXX  = Deposit
.                                                 IXXXXXX,      = Ins Company
.                                                 MXXX   , XXX  = Merch Company
.                                                 ZZZZZZZ       = Section Total
.                                              Section 1.6 & 2.6 & 1.7:
.                                               PTCNJFEE=1
.                                                 XXXYY         = Claim Code,
.                                                                 Journal Code
.                                               ELSE
.                                                 XX            = Journal Code
.                                               ENDIF
.                                                 WCXXX         = Merch Commiss
.                                                 WJXXX         = Merch Journal
.                                                 ZZZZZZYYY     = GST code
.                                                 ZZZZZZZ       = Section Total
.                                              Section 3.1, 3.2, 3.3, 3.4:
.                                                 XXX           = Merchant Code
.                                                 ZZZZZZZ       = Section Total
.
. ***  Note:Credit Note will have prefix of N for Accommodation
.                                           Q for Misc.item
.
SUBDESC1 DIM       30        30        17      Description for Subcode 1
SUBDCOD  DIM       11        11        47      Displayed code for sub code
SUBDESC2 DIM       30        30        58      Description for Subcode 2
SUBUS2DS FORM      1         2         88      Using 2nd description
XSUBPER  FORM     12.2       8         90      Period Figure
XSUBYTD  FORM     12.2       8         98      YTD Figure
XSUBPRY  FORM     12.2       8        106      Prior Year Figure
XSUBM01  FORM     12.2       8        114      Month 01 Figure
XSUBM02  FORM     12.2       8        122      Month 02 Figure
XSUBM03  FORM     12.2       8        130      Month 03 Figure
XSUBM04  FORM     12.2       8        138      Month 04 Figure
XSUBM05  FORM     12.2       8        146      Month 05 Figure
XSUBM06  FORM     12.2       8        154      Month 06 Figure
XSUBM07  FORM     12.2       8        162      Month 07 Figure
XSUBM08  FORM     12.2       8        170      Month 08 Figure
XSUBM09  FORM     12.2       8        178      Month 09 Figure
XSUBM10  FORM     12.2       8        186      Month 10 Figure
XSUBM11  FORM     12.2       8        194      Month 11 Figure
XSUBM12  FORM     12.2       8        202      Month 12 Figure
XSUBM13  FORM     12.2       8        210      Month 13 Figure
.
.                  END OF RECORD      218
.
.        Redefine variables for the key for the temp file
.
.Name    Type     Size    Physical   Start     Description
.----    ----     ----    --------   -----     -----------
SECTION  FORM      1         1         1       Section of report
SUBSECT  FORM      2         2         2       Sub Section of report
.
SUBPER   FORM     10.2       7         90      Period Figure
SUBYTD   FORM     10.2       7         97      YTD Figure
SUBPRY   FORM     10.2       7        104      Prior Year Figure
SUBM01   FORM      8.2       6        111      Month 01 Figure
SUBM02   FORM      8.2       6        117      Month 02 Figure
SUBM03   FORM      8.2       6        123      Month 03 Figure
SUBM04   FORM      8.2       6        129      Month 04 Figure
SUBM05   FORM      8.2       6        135      Month 05 Figure
SUBM06   FORM      8.2       6        141      Month 06 Figure
SUBM07   FORM      8.2       6        147      Month 07 Figure
SUBM08   FORM      8.2       6        153      Month 08 Figure
SUBM09   FORM      8.2       6        159      Month 09 Figure
SUBM10   FORM      8.2       6        165      Month 10 Figure
SUBM11   FORM      8.2       6        171      Month 11 Figure
SUBM12   FORM      8.2       6        177      Month 12 Figure
SUBM13   FORM      8.2       6        183      Month 13 Figure
.
PTINVGL   FILE      ASCII, FIXED=120
.
.Name    Type     Size    Start     Description
.----    ----     ----    -----     -----------
.IBGILEDG  DIM       2      2        1     Ledger
.IBGIACCT  DIM       12     12       3     Account
.IBGIDATE  DIM       8      8        15    Date (Optional)
.IBGISIGN  DIM       1      1        23    Sign
.IBGIVALU  FORM      12.2   15       31    Value
.IBGIDESC  DIM       30     30       39    Transaction Description (Optional)
.IBGIREF   DIM       15     15       69    Reference (Optional)
.IBGIDISS  DIM       5      5        84    Dissection (Optional)
.IBGIRESP  DIM       4      4        89    Responsibility (Optional)
.IBGICRAC  DIM       12     12       93    Credit Account - Cash (Optional)
.IBGICRAA  DIM       12     12       105   Credit Account - Accrual (Optional)
.IBGIBASC  DIM       3      3        117   BAS Code
.End of record                       120
.
PTTBIGL   FILE      ASCII, FIXED=120
.
.Name    Type     Size    Start     Description
.----    ----     ----    -----     -----------
.IBGILEDG  DIM       2      2        1     Ledger
.IBGIACCT  DIM       12     12       3     Account
.IBGIDATE  DIM       8      8        15    Date (Optional)
.IBGISIGN  DIM       1      1        23    Sign
.IBGIVALU  FORM      12.2   15       31    Value
.IBGIDESC  DIM       30     30       39    Transaction Description (Optional)
.IBGIREF   DIM       15     15       69    Reference (Optional)
.IBGIDISS  DIM       5      5        84    Dissection (Optional)
.IBGIRESP  DIM       4      4        89    Responsibility (Optional)
.IBGICRAC  DIM       12     12       93    Credit Account - Cash (Optional)
.IBGICRAA  DIM       12     12       105   Credit Account - Accrual (Optional)
.IBGIBASC  DIM       3      3        117   BAS Code
.End of record                       120
.
.               WORK AREA
.
ACCTOTF         FORM    1
ACCDTE          DIM     8         * accommodation date used in AAECATBI
AECNCHRS        FORM    1
AECNFTYP        FORM    1
DIM13           DIM     13
DIM14           DIM     14
DIM24A          DIM     24
CATCR           INIT    "cr"
MCCODE          INIT    "MC"
DPCODE          INIT    "DP"
MSO             INIT    "MSO"
SAMEDAY         INIT    "SAMEDAY"
.
XLCNT           FORM    2
ZERO00          FORM    ".00"
.
.
.
.      EXTRA VARIABLES
.
CREDFLAG  FORM      1
CDYSDAYS  FORM      6                       * CALCDAYS number of days
CDYSFDTE  DIM       8                       * CALCDAYS from date
CDYSTDTE  DIM       8                       * CALCDAYS to date
CDYSYEAR  FORM      2                       * CALCDAYS year
CERTINDC  FORM      1
CALDAYS         FORM    3
CLMTYPE         DIM     3
CURRDATE        DIM     8
CURYEAR         DIM     4
BULKBILL        DIM     1
CODE            DIM     2
CODEA           INIT    "A "
CODECL          INIT    "CL"
CODEDP          INIT    "DP"
CODEJ           INIT    "J "
CODEPY          INIT    "Py"
CMDLINE         DIM     80
CURSECT         FORM    1
CURSESS         DIM     18
CURSUBS         FORM    2
.
DIM1A           DIM     1
DIM4            DIM     4
DIM4A           DIM     4
DIM9            DIM     9
DIM12           DIM     12 
DIM18           DIM     18 
DIM18A          DIM     18 
DIM30           DIM     30
DISCJRNL        DIM     7
DWARD           DIM     3
DIM3AA          DIM     3
DIM3BB          DIM     3
DIM3CC          DIM     3
DIM5A           DIM     5
.
EMCNGINV        DIM     1
EMCNDPOC        DIM     1
EMCNOPOC        DIM     15
EFTDATE         DIM     8
ERRORFLG        FORM    1
EXTRA           INIT    "Extra"
EXTRACH         DIM     5
.
FEESFLAG        FORM    1
FMTTITLE        DIM     10
FMTGNAME        DIM     35
DOCFNAME        DIM     50
FOUR0           INIT    "0000"
FORM3A          FORM    3
FIVE9           FORM    "59"
FINYTD          FORM    8.2
FNAMEI          DIM     8
FNAMEW          DIM     8
FILEOPEN        DIM     30
FFIN            INIT    "ffin"
TFIN            INIT    "tfin"
THCFLG          FORM    2
.
FPDATE          DIM     10
FCC             FORM    2
FDD             FORM    2
FMM             FORM    2
FYY             FORM    2
FTCC            DIM     2
FTDD            DIM     2
FTMM            DIM     2
FTYY            DIM     2
FIRSTFLG        FORM    1
.
GSTADJST        FORM    6.6
GSTCODE         INIT    "ZZZZZZYYY"     * code for GST record
.
HFHIFUND        FORM    2
.
JYEAR           FORM    2
.
KEY13A          DIM     13
KEYFLAG         FORM    1
.
MBSFLAG         FORM    1
MDESC1          DIM     68
MDESC2          DIM     68
MDESC3          DIM     68
MINDEX          FORM    2
MONNAME         DIM     12
.
NOSUBS          FORM    1
NUMPERS         FORM    2
.
OPCNCONS        DIM     1
OPOCFLAG        FORM    1
OPRDATE         DIM     8
OTCNCFEE        FORM    1
OTCNFTYP        FORM    1
.
SECTHD          DIM     29
SECT1           INIT    "FEES INVOICED DETAIL"
SECT2           INIT    "TO BE INVOICED DETAIL"
SECT3           INIT    "MERCHANT TRANSACTION DETAIL"
SUMM1           INIT    "FEES INVOICED SUMMARY"
SUMM2           INIT    "TO BE INVOICED SUMMARY"
SUMM3           INIT    "MERCHANT SUMMARY"
.
SERVDOCT        DIM     10
SAVAMNT         FORM    12.2
SAVBEND         FORM    3
SAVALLW         FORM      6.2
SAVDISC         FORM      6.2
SAVEXTRA        FORM      6.2
SAVFIN          FORM      8.2[20]
SAVKEY16        DIM     16
SAVFMSUB        DIM     1
SAVFMSYS        DIM     1
SAVFMHOS        DIM     3
SP12            INIT    "            "
SP14            INIT    "              "
STYTD           FORM    2
SUBHEAD         DIM     29
SYSAL           INIT    "Consolidated "
SYSIP           INIT    "   Inpatient "
SYSOP           INIT    "  Outpatient "
SYSAE           INIT    "       A + E "
SYSOT           INIT    "  Other Fin. "
SYSID           DIM     13
SYSTEM          FORM    1
INVNAME         DIM     80
TBINAME         DIM     80
TBIFLAG         FORM    1
TFEEIND         FORM    1
VISTYP          DIM       3   
TOTAMTS         FORM    12.2
.
TOMINUS         INIT    " -A-B-C-D-E-F-G-H-I-J-K-L-M-N-O-P-Q-R-S-T-U-V-W-X-Y-Z-"
.
WORK1           FORM    12.2
WORK2           FORM    12.2
.
UNKCLCOD        INIT    "UNKNOWN CLAIM CODE  "
UNKJOUR         INIT    "UNKNOWN JOURNAL TYPE"
UNKMISC         INIT    "UNKNOWN MISC CODE   "
UNKMGRP         INIT    "UNKNOWN MISC GROUP  "
ACCOMTL         INIT    "ACCOM: "
ACCTL1          INIT    "WARD "
ACCTL2          INIT    "  CLAIM TYPE "
ACCTL3          INIT    "MATRN : "
ACCTL4          INIT    "CLAIM "
ACCTL5          INIT    "CLINIC "
ACCTL6          INIT    "ADM TYPE"
.
FMTSNAME        DIM       35
.
PATTYPE         DIM      3
PATIP           INIT     " IP"
PATDC           INIT     " DC"
PRTFLAG         FORM     1
.
WBSEUID         DIM     10
WDATE1          DIM      8
WDATE2          DIM      8
NOTCYR          FORM     1
YEARTTL         DIM      19
NOWYEAR         DIM      4
NOWCC           DIM      2
NOWYY           DIM      2
OPNBRA          INIT    "("
CLSBRA          INIT    ")"
OPNFLAG         FORM    "0"      * Used in stepdown
Z20             INIT    "ZZZZZZZZZZZZZZZZZZZZ"
ZERO4           INIT    "0000"
.
.         Web Variables (only the include files use these variables)
.
DAYFORMT  DIM       4
NJAN      INIT      "January"
NFEB      INIT      "February"
NMAR      INIT      "March"
NAPR      INIT      "April"
NMAY      INIT      "May"
NJUN      INIT      "June"
NJUL      INIT      "July"
NAUG      INIT      "August"
NSEP      INIT      "September"
NOCT      INIT      "October"
NNOV      INIT      "November"
NDEC      INIT      "December"
.
HESYST    FORM      1
HOSPID    DIM       3
HOSPNAME  DIM       50
HOSPFLAG  FORM      1
HTMLFILE  FIFO      ASCII, FIXED=250
MTHNAM3   DIM       3
MTHNAM3A  DIM       3
.
CFPAYCOD  DIM       3        * 3M Codefinder PAY Code
.
.
.         end web variables
.
PRGID     INIT      "NZPBIL19"
PRGNAM    INIT      "Fees Invoiced Report"
VERSION   INIT      "V12.00.00"
+
.
.        ======================================================================
.        MAIN0000: Main program loop
.        ======================================================================
.
.        Start of program
.
         CALL      INIT0000                      * Initialiation routine
         BRANCH    EXIT,MAIN9999                 * Init failure (oh me, oh my)
MAIN1000 CALL      OPTN0000                      * Select option to be run
         BRANCH    EXIT,MAIN9999                 * They want to leave (sob).
.
         CALL      OPST0000                      * Do initialisation for option
         CALL      GENF0000                      * Generate sections 1 & 3
         BRANCH    FEESFLAG,MAIN1200
         CALL      GENT0000                      * Generate section 2 of report
.
MAIN1200 CALL      PRNT0000                      * Print the report
         CALL      ENDP0000                      * Do any post processing
.
         BRANCH    OPTION,MAIN1000               * Print only
.
         MATCH     "1",PTCNSIGL                  * System based G/L interface?
         GOTO      MAIN1000 IF NOT EQUAL         * No
.
         COMPARE   ONE,CGLIND
         GOTO      MAIN1000 IF NOT EQUAL         * No interface 
         CALL      PRGL0000                      * Print G/L Inteface
.
         GOTO      MAIN1000                      * Get the next option
.
MAIN9999 CHAIN     PGM                           * Exit
         STOP
+
.        ======================================================================
.        INIT0000: Initialisation routine
.        ======================================================================
.
INIT0000 CALL      DISPHEAD                      * Display program heading
          CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
.        Open files
.
         DISPLAY   *P56:24,"Opening patdschf";
         OPEN      PATDSCH1,"patdschf"
.
         DISPLAY   *P64:24,"patmi1af";
         OPEN      PATMI1A1,"patmi1af"
.
         DISPLAY   *P64:24,"patma1af";
         OPEN      PATMA1A1,"patma1af"
.
         DISPLAY   *P64:24,"patmx1af";
         OPEN      PATMX1A1,"patmx1af"
.
         DISPLAY   *P64:24,"patwr1af";
         OPEN      PATWR1A1,"patwr1af"
.
         DISPLAY   *P64:24,"pattranf";
         OPEN      PATTRAN2,"pattranf"
.
         DISPLAY   *P64:24,"patdtraf";
         OPEN      PATDTRA1,"patdtraf"
.
         DISPLAY   *P64:24,"pmsmtiaf";
         OPEN      PMSMTIA1,"pmsmtiaf"
         OPEN      PMSMTIA2,"pmsmtiaf"
         OPEN      PMSMTIA4,"pmsmtiaf"
.
         DISPLAY   *P64:24,"patdrgaf";
         OPEN      PATDRGA1,"patdrgaf"
.
         DISPLAY   *P64:24,"patfn1af";
         OPEN      PATFN1A1,"patfn1af"
.
         DISPLAY   *P64:24,"nzpfinaf";
         OPEN      NZPFINA1,"nzpfinaf"
         OPEN      NZPFINA2,"nzpfinaf"
         OPEN      PATFINS1,"patfinsf"
.
         DISPLAY   *P64:24,"nzprfnaf";
         OPEN      NZPRFNA1,"nzprfnaf"
.
         DISPLAY   *P64:24,"nzpfigaf";
         OPEN      NZPFIGA1,"nzpfigaf"
         OPEN      NZPFIGA2,"nzpfigaf"
.
         DISPLAY   *P64:24,"patcodes";
         OPEN      PATCODE1,"patcodes"
.
         DISPLAY   *P64:24,"aaede1af";
         OPEN      AAEDE1A1,"aaede1af"
.
         DISPLAY   *P64:24,"aaedtref";
         OPEN      AAEDTRE1,"aaedtref"
.
         DISPLAY   *P64:24,"outsitaf";
         OPEN      OUTSITA1,"outsitaf"
.
         DISPLAY   *P64:24,"patvisaf";
         OPEN      PATVISA1,"patvisaf"
.
         DISPLAY   *P64:24,"pmsvx1af";
         OPEN      PMSVX1A1,"pmsvx1af"
.
         DISPLAY   *P64:24,"patipenf";
         OPEN      PATIPEN1,"patipenf"
.
         DISPLAY   *P64:24,"patcmcaf";
         OPEN      PATCMCA1,"patcmcaf"
.
         DISPLAY   *P64:24,"rcpbdtaf";
         OPEN      RCPBDTA1,"rcpbdtaf"
.
         DISPLAY   *P64:24,"oprardaf";
         OPEN      OPRARDA1,"oprardaf"
.
         DISPLAY   *P64:24,"controlf";
         OPEN      CONTROLF,"controlf"
.
         OPEN      PATMCHG1,"patmchgf"           * Misc Charges file
         OPEN      NZPMCHA1,"nzpmchaf"           * Misc Charges file
         OPEN      NZPSPRA1,"nzpspraf"           * Patient Contract Procedure
         OPEN      PATITEM1,"patitemn"           * MBS item file
         OPEN      NZPSPRA2,"nzpspraf"
.
         READ      CONTROLF,ZERO;*43,IBCNMHOS,*85,IBCNUGST
         READ      CONTROLF,TEN;*33,PTCNGSTF,*104,PTCNMBSF:            *C-47385
                                *192,CACCFEE:
                                *217,CAUDQ     * added for V5.01.15 - SRF 105195
         READ      CONTROLF,TEN3;*211,CINV1ST,*245,CHOSTYP
         READ      CONTROLF,TEN5;*247,CSTDOWN
         READ      CONTROLF,TEN8;*162,CGLIND,CGLPATH
         READ      CONTROLF,TEN9;*212,CFEETYP
         READ      CONTROLF,TWENTY;*164,PTRESDAY,*193,PTCNDCLM:
                                   *199,PTCNBCUT,*211,PTCNCNDY
         READ      CONTROLF,TWENTY1;*120,PTCNADDC
         READ      CONTROLF,THIRTY;*200,AECNFTYP
         READ      CONTROLF,THIRTY1;*163,OTCNFTYP,OTCNCFEE
         READ      CONTROLF,THIRTY6;*113,HJNL
         READ      CONTROLF,FIVE9;*1,CDLSTEP,*60,PTCNUFMS,*66,CGSTPERC,CGSTITEM
         READ      CONTROLF,SEVENTY7;*214,PTCNBTNM
         READ      CONTROLF,SEVENTY9;*68,PTCNMFEE,PTCNJFEE
         READ      CONTROLF,EIGHTY8;*102,CFEEDT,*162,PTCFEEOF:
                                    *194,PTCFEEAE,PTCFEEOP,*233,PTCNADES
         READ      CONTROLF,HUND03;*219,PTCNSIGL
         READ      CONTROLF,HUND05;*99,PTCNNWCM:
                                   *205,PTCNPFID:
                                   *247,PTCNCDIS
         READ      CONTROLF,HUND08;*1,HDATARCP
         READ      CONTROLF,HUND09;*247,PTCNROUN
.
...  used in ABFAECCL
          CALL      TFILENAM                * Get file name calculating Exponent
          MOVE      TFILNAME,FNAMEN
.
...  used in PATCATBI CRMV0000
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,FNAMEX
.
...  used in PATCATBI PTMP0000
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,FNAMEZ
.
...  used in PATCATBI PT2P0000
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,FNAMEY
.
...  used in NZPCATBI CRWL0000
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,FNAMEQ
.
...  used in PABXBILL
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,PBXFNAME
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,PBXFNAM2
.
         PACK      DISCJRNL,HJNL,SP10
         MOVE      ONE,PRTFLAG
.
         IF        IBCNMHOS=1
           MOVE      ONE,CGLIND           * Multi hosp always has G/L interface
           OPEN      PATHSPA1,"pathspaf"
         ENDIF
.
         MOVE      ZERO,PTCNGSTF        * not applicable for Aust.GST
.
         PACK      CURRDATE WITH CCC,CYY,CMM,CDD
         REP       " 0",CURRDATE
.
.        Set up the names of the temporary files used
.
         CALL      TFILENAM                     * Generate temporary file name
         MOVE      TFILNAME,FNAMEI
.
         CALL      TFILENAM                     * Generate temporary file name
         MOVE      TFILNAME,FNAMEW
.
.        Set up the G/L interface file names
.
         PACK      KEY4,CMM,CDD
         REP       " 0",KEY4
         STRIP     HDATARCP
         CLEAR     INVNAME
         APPEND    HDATARCP,INVNAME
         APPEND    FFIN,INVNAME
         APPEND    KEY4,INVNAME
         APPEND    ".txt",INVNAME
         APPEND    SP70,INVNAME
         RESET     INVNAME
.
         STRIP     HDATARCP
         CLEAR     TBINAME
         APPEND    HDATARCP,TBINAME
         APPEND    TFIN,TBINAME
         APPEND    KEY4,TBINAME
         APPEND    ".txt",TBINAME
         APPEND    SP70,TBINAME
         RESET     TBINAME
.
         COMPARE   ONE,CGLIND      * Check parameter
         GOTO      INIT0500 IF NOT EQUAL
.
         MOVE      TWENTY,XLCNT
INIT0400 RESET     CGLPATH,XLCNT
         CMATCH    SP1,CGLPATH
         GOTO      INIT0450 IF NOT EQUAL
         SUB       ONE,XLCNT
         COMPARE   ZERO,XLCNT
         GOTO      INIT0400 IF NOT EQUAL
         CLEAR     CGLPATH
         GOTO      INIT0460
.
INIT0450 LENSET    CGLPATH
         RESET     CGLPATH
.
INIT0460 MATCH     "1",PTCNSIGL
         GOTO      INIT0480 IF EQUAL       * Using system based G/L Interface
.
         DISPLAY   *P38:24,"patfmsaf";
         MOVE      ZERO,OVRCD
         TRAP      OVERCOND IF IO
         OPEN      PATFMSA1,"patfmsaf"
         TRAPCLR   IO
         IF        OVRCD = 1
           DISPLAY   *P1:24,*EL,*B,"File Not Found, patfmsaf - ";
           CALL      HITENTER
           GOTO      INIT9900
         ENDIF
         GOTO      INIT0500
.
INIT0480 DISPLAY   *P38:24,"pmsfmsaf";
         MOVE      ZERO,OVRCD
         TRAP      OVERCOND IF IO
         OPEN      PMSFMSA1,"pmsfmsaf"
         TRAPCLR   IO
         IF        OVRCD = 1
           DISPLAY   *P1:24,*EL,*B,"File Not Found, pmsfmsaf - ";
           CALL      HITENTER
           GOTO      INIT9900
         ENDIF
.
.        Get the current financial period (used as a default year)
.
INIT0500 PACK      CPTDATE,CCC,CYY,CMM,CDD
         REP       " 0",CPTDATE
         CALL      GPERD
         BRANCH    EXIT,INIT9000
.
         MOVE      DRGYR,NOWYEAR                 * Save the year.
.
.        Set up the month descriptions for the heading.
.        MDESC1 contains the first  six periods of the financial year
.        MDESC2 contains the second six periods of the financial year
.        MDESC3 contains the third six periods of the financial year
.        NUMPERS contains the number of periods in the financial year
.
         CLEAR     MDESC1                        * Clear the description
         CLEAR     MDESC2                        * Clear the description
         CLEAR     MDESC3                        * Clear the description
.
         PACK      KEY6,NOWYEAR,SP2
         CALL      RDSDRGA1                      * Position at start of year
INIT1000 CALL      RDKDRGA1
         BRANCH    OVRCD,INIT4000                * Finished loop
.
         MATCH     DRGYR,NOWYEAR                 * Still the same year ?
         GOTO      INIT4000 IF NOT EQUAL         * No. Finished loop
.
.        Add the description for this period to the appropriate variable
.
         ADD       ONE,NUMPERS                   * Increment number of periods
.
         IF        PRTFLAG=1
           COMPARE   NINE,NUMPERS                * Done the 2nd 6 periods yet ?
           GOTO      INIT3000 IF NOT LESS        * Yes.
           COMPARE   FIVE,NUMPERS                * Done the 1st 6 periods yet ?
           GOTO      INIT2000 IF NOT LESS        * Yes.
         ELSE
           COMPARE   TEN4,NUMPERS                * Done the 2nd 6 periods yet ?
           GOTO      INIT3000 IF NOT LESS        * Yes.
           COMPARE   SEVEN,NUMPERS               * Done the 1st 6 periods yet ?
           GOTO      INIT2000 IF NOT LESS        * Yes.
         ENDIF
.
.        Add the description to the 1st six periods
.
         APPEND    SP5,MDESC1                    * Add leading blanks
         APPEND    DRGMDSC,MDESC1                * Append description
         APPEND    SP3,MDESC1                    * Add trailing blanks
         GOTO      INIT1000
.
.        Add the description to the 2nd six periods
.
INIT2000 APPEND    SP5,MDESC2                    * Add leading blanks
         APPEND    DRGMDSC,MDESC2                * Append description
         APPEND    SP3,MDESC2                    * Add trailing blanks
         GOTO      INIT1000
.
.        Add the description to the 3rd six periods
.
INIT3000 APPEND    SP5,MDESC3                    * Add leading blanks
         APPEND    DRGMDSC,MDESC3                * Append description
         APPEND    SP3,MDESC3                    * Add trailing blanks
         GOTO      INIT1000
.
.        Finished processing financial year
.
INIT4000 APPEND    SP30,MDESC1
         APPEND    SP30,MDESC1
         APPEND    SP30,MDESC1
.
         APPEND    SP30,MDESC2
         APPEND    SP30,MDESC2
         APPEND    SP30,MDESC2
.
         APPEND    SP30,MDESC3
         APPEND    SP30,MDESC3
         APPEND    SP30,MDESC3
.
         RESET     MDESC1                        * Reset description 1
         RESET     MDESC2                        * Reset description 2
         RESET     MDESC3                        * Reset description 2
.
.        Restore the financial year record
.
         PACK      KEY6,NOWYEAR,SP2
         CALL      RDSDRGA1
         CALL      RDKDRGA1
.
         MOVE      ZERO,EXIT                     * Initialisation succeeded
         GOTO      INIT9999
.
.        Error finding current period
.
INIT9000 KEYIN      *P1:24,*EL,*B:
                    "Current Date Missing in the Period Range File. ";
         CALL       HITENTER
.
INIT9900 MOVE       ONE,EXIT                     * Initialisation failed
.
INIT9999 RETURN
+
.        ======================================================================
.        OPTN0000: Select option to be run
.        ======================================================================
.
OPTN0000 HLINE     *G37,2,50,80
         KEYIN     *P1:3,*EF:
                   *P1:4,*V2LON,*DV,ZERO,*HOFF," = Exit":
                   *P1:5,*V2LON,*DV,ONE,*HOFF," = Print Only":
                   *P1:6,*V2LON,*DV,TWO,*HOFF," = Print and Reset":
                   *P1:8,"Option : ",*EL,*V2LON,OPTION
.
         COMPARE   ZERO TO OPTION                * Check if they want to exit
         GOTO      OPTN9000 IF EQUAL
.
         MOVE      ZERO,FEESFLAG
         BRANCH    OPTION,OPTN1000,OPTN1000:     * Validate option
                          OPTN0900
.
.        Invalid selection
.
         BEEP
         GOTO      OPTN0000
.
OPTN0900 MOVE      ONE,OPTION
         MOVE      ONE,FEESFLAG
.
.        Determine which system this report is for
.
OPTN1000 CALL      PATSELFN                      * Select the system
         BRANCH    EXIT,OPTN0000                 * No system selected
.
.        Set up from date for the report
.
         MOVE      CFEEDT,DIM8                   * Default to inpatient
         LOAD      DIM8,FSTSYS,PTCFEEAE,PTCFEEOP,CFEEDT,PTCFEEOF
.
         UNPACK    DIM8 WITH FTCC,FTYY,FTMM,FTDD
         MOVE      FTCC,FCC
         MOVE      FTYY,FYY
         MOVE      FTMM,FMM
         MOVE      FTDD,FDD
         MOVE      FCC,CCENT
         MOVE      FYY,CYEAR
         MOVE      FMM,CMON
         MOVE      FDD,CDAY
         CALL      PACDATE
         MOVE      CPCDATE,FPDATE           * DD/MM/CCYY print date
         REP       " 0" IN FPDATE
.
         MOVE       SYSAL,SYSID
         LOAD       SYSID,FSTSYS,SYSAE,SYSOP,SYSIP,SYSOT
.
.        Get the year of the report
.
         MOVE       DRGYR,NOWYEAR
         DISPLAY    *P1:11,*EF,"Report for Year : ",*V2LON,NOWYEAR
.
         KEYIN      *P19:11,*V2LON,*RV,*JR,*DE,NOWYEAR
.
         UNPACK     NOWYEAR,NOWCC,NOWYY
         MATCH      SP2,NOWCC
         IF         @EQUAL
           MOVE       CCC,NOWCC
         ENDIF
         PACK       NOWYEAR,NOWCC,NOWYY
         REP        " 0",NOWYEAR
         DISPLAY    *P19:11,*V2LON,NOWYEAR
.
.        NOTCYR is a flag to say if we are doing the current financial year.
.        If it a "1" then we don't do the "To Be Invoiced" section of the report
.
         MOVE       ZERO,NOTCYR       * Assume this is current financial year
.
         MATCH      NOWYEAR,DRGYR
         GOTO       OPTN2000 IF EQUAL
.
         CALL       GHED0000
.
.        Check with the indicator if we are doing the first of month 
.        invoice to go in previous month
.
         COMPARE    ONE,CINV1ST
         GOTO       OPTN1100 IF NOT EQUAL
.
.        If this is the first day of financial year, then do the "To Be 
.        Invoiced" section of the report
.
         PACK       DIM8,CCC,CYY,CMM,CDD   * Current date
         REP        " 0",DIM8
         MATCH      DIM8,DRGFDTE           * Is today is the first day of
         GOTO       OPTN2000 IF EQUAL      * financial year ?
.
OPTN1100 MOVE       ONE,NOTCYR        * This is not the current financial year
.
.        Pack up the title
.
OPTN2000 PACK       YEARTTL WITH SYSID,OPNBRA,NOWYEAR,CLSBRA
         DISPLAY    *P50:2,*V2LON,"-",YEARTTL,SP1
.
         MOVE       SP10,HOSPID
         IF         IBCNMHOS=1
           CALL       KHOS0000        * Hospital id
           BRANCH     EXIT,OPTN9999
         ENDIF
.
         MOVE       ZERO,EXIT         * Successful option selected
         BRANCH     OPTION,OPTN9999   * Print only option
.
         MOVE       ZERO,TBIFLAG  * default not to transfer'Fees to be invoiced'
         COMPARE    ONE,IBCNMHOS
         GOTO       OPTN2600 IF NOT EQUAL     * not multi hospital
.
         MATCH      SP3,HOSPID 
         GOTO       OPTN2600 IF EQUAL
         PACK       KEY3,HOSPID
         CALL       RDPTHSP1
         BRANCH     OVRCD,OPTN2600
.
         MOVE       ZERO,PTCNUFMS
         MOVE       PTHSUFMS,PTCNUFMS        * parameter for Using IBA FMS
         MOVE       ZERO,CGLIND
         MOVE       PTHSPTIN,CGLIND          * parameter for G/L Interface
         CALL       TFIL0000                 * set Interface files for multihosp
.
OPTN2600 COMPARE    ONE,CGLIND
         GOTO       OPTN9999 IF NOT EQUAL
         PREP       PTINVGL,INVNAME     * open invoiced G/L text file
.
OPTN3000 KEYIN      *P1:24,*EL,"Transfer Fees to be Invoiced to Finance ":
                    "System (Y/N) ? ":
                    *V2LON,ANS;
         REP        "yYnN",ANS
.
         MATCH      ANSN,ANS
         GOTO       OPTN9999 IF EQUAL
         MATCH      ANSY,ANS
         GOTO       OPTN4000 IF EQUAL
         BEEP
         GOTO       OPTN3000
.
OPTN4000 MOVE       ONE,TBIFLAG       * Flag to transfer fees to be invoiced
         PREP       PTTBIGL,TBINAME   * Open to be invoiced G/L file
         GOTO       OPTN9999
.
.        No option selected. Set flag to indicate this
.
OPTN9000 MOVE       ONE,EXIT          * No option selected
.
OPTN9999 RETURN
.
.        ======================================================================
.        TFIL0000: Set transfer file for multi hospital
.        ======================================================================
TFIL0000 MOVE      HOSPID,KEY3
         REP       " 0",KEY3
         PACK      KEY4,CMM,CDD
         REP       " 0",KEY4
         STRIP     HDATARCP
         CLEAR     INVNAME
         APPEND    HDATARCP,INVNAME
         APPEND    "f",INVNAME
         APPEND    KEY3,INVNAME
         APPEND    KEY4,INVNAME
         APPEND    ".txt",INVNAME
         APPEND    SP70,INVNAME
         RESET     INVNAME
.
         STRIP     HDATARCP
         CLEAR     TBINAME
         APPEND    HDATARCP,TBINAME
         APPEND    "t",TBINAME
         APPEND    KEY3,TBINAME
         APPEND    KEY4,TBINAME
         APPEND    ".txt",TBINAME
         APPEND    SP70,TBINAME
         RESET     TBINAME
.
TFIL9999 RETURN
+
.        ======================================================================
.        KHOS0000: Keyin hospital ID
.        ======================================================================
KHOS0000 DISPLAY    *P1:12,*EL,"Hospital Id : ";
         MOVE       TEN5,ECOL
         MOVE       "12",EVERT
         MOVE       SP3,CKYIDEF3
         MOVE       ZERO,CKYIMAND           * Not Mandatory
         OPEN       PATHSPA1,"pathspaf"
.
         CALL       PATHSPKY
         BRANCH     EXIT,KHOS1000,KHOS2000
         MOVE       PTHSHOSP,HOSPID
         MOVE       PTHSNAME,HOSPNAME
         MOVE       ZERO,EXIT
         GOTO       KHOS9999
.
KHOS1000 MOVE       "All Hospitals",HOSPNAME
         MOVE       SP10,PTHSHOSP
         MOVE       ZERO,EXIT
         GOTO       KHOS9999
.
KHOS2000 MOVE       ONE,EXIT
KHOS9999 RETURN
.
.        ======================================================================
.        OPST0000: Initialise for the report
.        ======================================================================
.
OPST0000 MOVE       ZERO,CPAGENO                 * Init page number
         MOVE       "60",CLNO                    * Init line number
         CLOCK      TIME,CTIMEIS                 * Init starting time
         MOVE       ONE,CNOUNDLN
.
         DISPLAY    *P1:15,*EF;
.
.        Delete the work file if it exists
.
         CLOSE      TEMPFILE
         CLEAR      CMDLINE
         APPEND     "iserase ",CMDLINE
         APPEND     FNAMEW,CMDLINE
         RESET      CMDLINE
.
         EXECUTE    CMDLINE,TASKID               * Delete the work file
.
.        Paraniod behaviour, but Hong King have reported that they are
.        getting I*I on the temp file open.
.
         CLEAR      CMDLINE
         APPEND     "/bin/rm -f ",CMDLINE
         APPEND     FNAMEW,CMDLINE
         APPEND     ".*",CMDLINE
         RESET      CMDLINE
         EXECUTE    CMDLINE,TASKID
.
.        Create the work file
.
         CLEAR      CMDLINE
         APPEND     "isbuild ",CMDLINE
         APPEND     FNAMEW,CMDLINE
         APPEND     " 218 U1-1,2-3,4-16",CMDLINE
         RESET      CMDLINE
.
         EXECUTE    CMDLINE,TASKID               * Create the work file
         OPEN       TEMPFILE,FNAMEW              * Open the work file
.
.        Initialise the current section
.
         MOVE       ONE,CURSECT                  * Start with section one
. 
         MOVE       ZERO,HOSPFLAG                * Print all hospitals data
         IF         IBCNMHOS=1
           MATCH      SP70,HOSPID
           IF         !@EQUAL
             MOVE       ONE,HOSPFLAG             * Print one hospital data only
           ENDIF
         ENDIF
.
OPST9999 RETURN
.
.        ======================================================================
.        GSTS0000: Get the first site record
.        ======================================================================
.
GSTS0000 BRANCH     SYSTEM,GSTS8000,GSTS0100,GSTS8000,GSTS8000
.
.        When appropriate, get the first outpatient site
.
GSTS0100 MOVE       FSTSITE,KEY6                 * Current site
         CALL       RDSITA1                      * Get the site record
         BRANCH     OVRCD,GSTS1000               * Not an exact key
.
         GOTO       GSTS2000                     * Validate the department
.
.        Do a positional read to find the first site record
.
GSTS1000 CALL       RDKSITA1                     * Read next site record
         BRANCH     OVRCD,GSTS9000               * Nothing found.
.
.        Validate the department
.
GSTS2000 MATCH      FSTDEPT,OSTSYST              * Check against starting dept.
         GOTO       GSTS1000 IF LESS             * Invalid. Get next record
.
         MATCH      OSTSYST,FEDDEPT              * Check against ending dept.
         GOTO       GSTS1000 IF LESS             * Invalid. Get next record
.
         MOVE       ZERO,EXIT                    * Valid site found
         GOTO       GSTS9999
.
.        Not an outpatients system
.
GSTS8000 MOVE       ZERO,EXIT                    * Successful location of site
         MOVE       SP6,OSTSITE                  * The site for non-outpatients
.
         MOVE       Z20,KEY6                     * Position ourselves
         CALL       RDSSITA1                     * for non-outpatient systems
         GOTO       GSTS9999
.
.        No valid record found
.
GSTS9000 MOVE       ONE,EXIT                     * No valid site found
.
GSTS9999 RETURN
.
.        ======================================================================
.        GENF0000: Generate the fee's invoiced section of the report
.        ======================================================================
.
GENF0000 MOVE       ZERO,GSTFLAG                  * Initialise GST flag
.
GENF0020 MOVE       ONE,FIRSTFLG
         MOVE       FSTSYS,SYSTEM                * Current system
         CALL       VSYS0000                     * Get the starting site
         BRANCH     EXIT,GENF8000                * No valid sites
         MOVE       ZERO,FIRSTFLG
.
         DISPLAY    *P1:24,*EL,*P10:24,"Financial Type :";
.
.        Position ourselves at the appropriate position in the file
.        and then loop until we have finished
.
GENF0100 PACK       KEY28,SYSTEM,OSTSITE,NOWYEAR,SP30
         IF         HOSPFLAG=1
           PACK       KEY28,HOSPID,SYSTEM,OSTSITE,NOWYEAR,SP30
         ENDIF
         CALL       RSFINN
GENF1000 CALL       RKFINN
         BRANCH     OVRCD,GENF8000               * No more data in file
.
.
         DISPLAY    *P30:24,*V2LON,NZFISYST,SP1,NZFITYPE,SP1,NZFICODE;
.
         IF         HOSPFLAG=1
           MATCH       SP10,HOSPID
           IF          !@EQUAL
             MATCH       NZFIHOSP,HOSPID
             GOTO        GENF8000 IF NOT EQUAL
           ENDIF
         ENDIF
.
         CALL       VSYS0000                     * Validate system
         BRANCH     EXIT,GENF8000,GENF0100       * 1=no more site, 2=next site
.
.        Add the data to the work file
.
GENF2000 CALL       PWRK0000                * Processing work file
         GOTO       GENF1000
.
GENF8000 COMPARE    TWO,CURSECT             * printing "to be invoiced"
         GOTO       GENF9999 IF EQUAL       * no GST for to be invoiced
.
         BRANCH     GSTFLAG,GENF9999        * GST has been processed
.
.        Print GST amount
.
         MOVE       ONE,GSTFLAG
         GOTO       GENF0020                * setup GST amount
.
GENF9999 RETURN
+
.        ======================================================================
.        Validate the system
.        ======================================================================
VSYS0000 MOVE       ZERO,EXIT
         BRANCH     FIRSTFLG,VSYS1300            * First flag
.
         MOVE       SYSTEM,KEY1
         MATCH      NZFISYST,KEY1                * Change of system ?
         GOTO       VSYS1200 IF NOT EQUAL        * Get the next system
.
.        Validate the site
.
         MATCH      NZFISITE,OSTSITE              * Change of site ?
         GOTO       VSYS1400 IF EQUAL            * No.
.
.        Get next outpatient site and try again
.
VSYS1100 CALL       RDKSITA1                     * Get the next site record
         BRANCH     OVRCD,VSYS1200               * No record. Get next system
.
         MATCH      NZFISITE,FEDSITE              * Check ending site
         GOTO       VSYS1200 IF LESS             * Get next system
.
.        Validate the department
.
         MATCH      FSTDEPT,OSTSYST              * Check against starting dept
         GOTO       VSYS1100 IF LESS             * Invalid. Get next site
.
         MATCH      OSTSYST,FEDDEPT              * Check against ending dept
         GOTO       VSYS1100 IF LESS             * Invalid. Get next site
.
.        Reposition for this new site
.
         MOVE       TWO,EXIT
         GOTO       VSYS9999
.
.        Get the next system
.
VSYS1200 COMPARE    NINE,SYSTEM                  * Have we finished ?
         GOTO       VSYS9000 IF EQUAL            * Yes.
.
         ADD        ONE,SYSTEM                   * Get the next system number
.
.        Check if still in the valid range
.
         COMPARE    SYSTEM,FEDSYS                * Check against ending system
         GOTO       VSYS9000 IF LESS             * Outside range. Finished
.
VSYS1300 CALL       GSTS0000                     * Get the starting site
         BRANCH     EXIT,VSYS1200                * No valid sites, try next sys
.
         MOVE       TWO,EXIT
         GOTO       VSYS9999
.
.        Check that we still have the correct financial year
.
VSYS1400 MATCH      NZFIYEAR,NOWYEAR              * Still current year ?
         GOTO       VSYS1100 IF NOT EQUAL        * No. Get next site
         GOTO       VSYS9999
.
VSYS9000 MOVE       ONE,EXIT
VSYS9999 RETURN
+
.        ======================================================================
.        PWRK0000:  Processing work file
.        ======================================================================
PWRK0000 CALL       WKEY0000                     * Get the key for work file
         BRANCH     ERRORFLG,PWRK9999
.
         CALL       ADDW0000
.
         MOVE       Z20,SUBCODE                  * Add the totals key to work
         CALL       ADDW0000
.
.        We have finished processing this record. Check if a reset needs
.        to be done
.
         BRANCH     OPTION,PWRK9999
.
.        Check if the parameter is set to do the interface 
.
         IF         CGLIND = 1
.
.        invoiced section - then do the interface for the invoiced.
.
           IF         CURSECT = 1
.            CALL       TRGL0000                    * G/L Interface
.
.        to be invoiced section - check if the user requested to do the 
.        interface for the to be invoiced.
.
           ELSE
             IF         TBIFLAG = 1
.              CALL       TRGL0000                  * G/L Interface
             ENDIF
           ENDIF
          ENDIF
.
.        If doing a reset, zero period value
.
         PACK       KEY28,NZFISYST,NZFISITE,NZFIYEAR,NZFITYPE,NZFICODE:
                          NZFIHOSP,SP70
         IF         HOSPFLAG=1
           PACK       KEY28,NZFIHOSP,NZFISYST,NZFISITE,NZFIYEAR,NZFITYPE:
                            NZFICODE,SP70
         ENDIF
.
         BRANCH     GSTFLAG,PWRK9000
         IF         HOSPFLAG=1
           CALL       RDNZFIN2
           BRANCH     OVRCD,PWRK9999
           MOVE       ZERO,NZFIPERD
           CALL       UPNZFIN2
         ELSE
           CALL       RDNZFIN1
           BRANCH     OVRCD,PWRK9999
           MOVE       ZERO,NZFIPERD
           CALL       UPNZFIN1
         ENDIF
.
         GOTO       PWRK9999
.
PWRK9000 IF         HOSPFLAG=1
           CALL       RDNZFIG2
           BRANCH     OVRCD,PWRK9999
           MOVE       ZERO,NZFIPERD
           CALL       UPNZFIG2
         ELSE
           CALL       RDNZFIG1
           BRANCH     OVRCD,PWRK9999
           MOVE       ZERO,NZFIPERD
           CALL       UPNZFIG1
         ENDIF
.
PWRK9999 RETURN
+
.        ======================================================================
.        GENT0000: Generate the to be invoiced section of the report
.        ======================================================================
.
GENT0000 BRANCH    NOTCYR,GENT9999               * Not cur yr -> no to be inv.
.
         CLOSE     NZPFINA1                      * Close the file
         CLOSE     NZPFINA2                      * Close the file
         MOVE      TWO,CURSECT                   * To-be-invoiced section
.
.        Create a temporary index file with the same format as NZPFINS
.
         CALL      INDZ0000                      * Create a temp index file
.
.        Calculate the To-Be-Invoiced data, and put into tempfile
.
         IF        PTCNPFID = 1
           PRINT     *1,"Admission No",*20,"Invoice Amount",*40,"Total"
         ENDIF
         CALL      CTBI0000                      * Calculate to be invoiced
         IF        PTCNPFID = 1
           PRINT     *N,*N,*N,*1,"Admission No",*20,"Cash Amount",*40,"Total"
         ENDIF
.
         CALL      GETC0000                      * cash still to be invoiced
.
         IF        PTCNPFID = 1
           CALL      HEAD0000
           MOVE      ZERO,CPAGENO                 * Init page number
         ENDIF
.
         CALL      GENF0000                      * Process temp file
.
.        Get rid of the temporary file
.
         CLOSE     NZPFINA1                      * Close temporary file
         CLOSE     NZPFINA2                      * Close temporary file
.        CALL      KILL0000                      * Delete temporary index file
         OPEN      NZPFINA1,"nzpfinaf"           * Re-open NZPFINA file
         OPEN      NZPFINA2,"nzpfinaf"           * Re-open NZPFINA file
.
GENT9999 RETURN
+
.        ======================================================================
.        TRGL0000: Transfer fees to financial system
.        ======================================================================
.
TRGL0000 COMPARE   ZERO,NZFIPERD
         GOTO      TRGL9999 IF EQUAL
         MOVE      ZERO,CREDFLAG
         MOVE      NZFIHOSP,PTFMHOSP
.
.        Check for fees generated
.
         CMATCH    "A",NZFITYPE
         GOTO      TRGL3000 IF NOT EQUAL
.
         CMATCH    "A",NZFICODE
         GOTO      TRGL1000 IF EQUAL
         CMATCH    "N",NZFICODE             * credit note
         GOTO      TRGL0900 IF EQUAL
.
         CMATCH    "C",NZFICODE             * Patient Co-payment
         GOTO      TRGL1000 IF EQUAL
         CMATCH    "P",NZFICODE             * Patient Co-payment credit note
         GOTO      TRGL0900 IF EQUAL
.
         CMATCH    "F",NZFICODE             * Funder Contribution
         GOTO      TRGL1000 IF EQUAL
         CMATCH    "R",NZFICODE             * Funder Contribution credit note
         GOTO      TRGL2000 IF NOT EQUAL
.
TRGL0900 MOVE      ONE,CREDFLAG            * set flag for credit note
.
TRGL1000 MOVE      "1",PTFMSUB             * Accommodations
         GOTO      TRGL4000
.
.        Check for miscellaneous
.
TRGL2000 CMATCH    "M",NZFICODE
         GOTO      TRGL2200 IF EQUAL
         CMATCH    "Q",NZFICODE             * Misc. credit note
         GOTO      TRGL9999 IF NOT EQUAL
         MOVE      ONE,CREDFLAG            * set flag for credit note
.
TRGL2200 MOVE      "3",PTFMSUB             * Miscellaneous
         GOTO      TRGL4000
.
.        Check for journals
.
TRGL3000 CMATCH    "C",NZFITYPE
         GOTO      TRGL9999 IF NOT EQUAL
         MOVE      "5",PTFMSUB               * Journals
.
.        check if record exist in the interface file
.
TRGL4000 MOVE      PTFMSUB,SAVFMSUB
         MOVE      PTFMHOSP,SAVFMHOS
         MOVE      NZFISYST,SAVFMSYS
         PACK      KEY17,PTFMHOSP,PTFMSUB,NZFICODE,SP70
         PACK      KEY18,PTFMHOSP,SAVFMSYS,PTFMSUB,NZFICODE,SP70
         CALL      RDSYFMS
         COMPARE   ZERO,OVRCD
         GOTO      TRGL5000 IF EQUAL
.
         UNPACK    NZFICODE,ANS,DIM3,DIM3A,DIM3B
         MOVE      PTFMSUB,FORM1
         BRANCH    FORM1,TRGL4040,TRGL9999,TRGL4020
         GOTO      TRGL4800
.
.        Miscellaneous items
.
TRGL4020 UNPACK    NZFICODE,ANS,DIM3,DIM9
         PACK      KEY17,PTFMHOSP,PTFMSUB,ANS,DIM3,SP10
         PACK      KEY18,PTFMHOSP,SAVFMSYS,PTFMSUB,ANS,DIM3,SP10
         CALL      RDSYFMS
         BRANCH    OVRCD,TRGL4032
         GOTO      TRGL5000
.
TRGL4032 PACK      KEY17,PTFMHOSP,PTFMSUB,ANS,SP3,DIM9,SP10
         PACK      KEY18,PTFMHOSP,SAVFMSYS,PTFMSUB,ANS,SP3,DIM9,SP10
         CALL      RDSYFMS
         BRANCH    OVRCD,TRGL4800
         GOTO      TRGL5000
.
.        Accommodations
.
TRGL4040 CMATCH    "C",ANS                      * Check for Pat Co-payment
         GOTO      TRGL4050 IF NOT EQUAL
         UNPACK    NZFICODE,ANS,DIM1,DIM3        * "C",Episode type,Adm.type
         PACK      KEY17,PTFMHOSP,PTFMSUB,ANS,DIM1,DIM3,SP20
         PACK      KEY18,PTFMHOSP,SAVFMSYS,PTFMSUB,ANS,DIM1,DIM3,SP20
         CALL      RDSYFMS
         BRANCH    OVRCD,TRGL4042
         GOTO      TRGL5000
.
TRGL4042 PACK      KEY17,PTFMHOSP,PTFMSUB,ANS,DIM1,SP20
         PACK      KEY18,PTFMHOSP,SAVFMSYS,PTFMSUB,ANS,DIM1,SP20
         CALL      RDSYFMS
         BRANCH    OVRCD,TRGL4800                * no record
         GOTO      TRGL5000
.
TRGL4050 CMATCH    "F",ANS                      * Check for Funder Contribution
         GOTO      TRGL4090 IF NOT EQUAL
.
         UNPACK    NZFICODE,ANS,DIM3             * "D",ward
         PACK      KEY17,PTFMHOSP,PTFMSUB,ANS,DIM3,SP20
         PACK      KEY18,PTFMHOSP,SAVFMSYS,PTFMSUB,ANS,DIM3,SP20
         CALL      RDSYFMS
         BRANCH    OVRCD,TRGL4800                * no record
         GOTO      TRGL5000
.
TRGL4090 BRANCH    CACCFEE,TRGL4100:            * Ward/Claim code ?
                           TRGL4100:            * Ward/Adm. type
                           TRGL4500:            * Ward/Claim/Adm.type ?
                           TRGL4500:            * Ward/Adm.type/Claim ?
                           TRGL4800             * Claim ?
.
.        Accommodation by admission type
.
         GOTO      TRGL4800
.
.        Accommodation by ward/claim or by Ward/admission type
.
TRGL4100 PACK      KEY17,PTFMHOSP,PTFMSUB,ANS,DIM3,SP10       * use default
         PACK      KEY18,PTFMHOSP,SAVFMSYS,PTFMSUB,ANS,DIM3,SP10 * use default
         CALL      RDSYFMS
         COMPARE   ZERO,OVRCD
         GOTO      TRGL5000 IF EQUAL
.
         PACK      KEY17,PTFMHOSP,PTFMSUB,ANS,SP3,DIM3A,SP10  * use default
         PACK      KEY18,PTFMHOSP,SAVFMSYS,PTFMSUB,ANS,SP3,DIM3A,SP10
         CALL      RDSYFMS
         BRANCH    OVRCD,TRGL4800                * no record
.
.        By ward/claim/admission type or ward/adm/claim type
.
TRGL4500  PACK      KEY17,PTFMHOSP,PTFMSUB,SP20            * use default
          PACK      KEY18,PTFMHOSP,SAVFMSYS,PTFMSUB,SP20   * use default
          CALL      RDSYFMS
.         BRANCH    OVRCD,TRGL9999
TRGL4850  CALL      RKSYFMS
          BRANCH    OVRCD,TRGL4800
          MATCH     PTFMHOSP,SAVFMHOS
          GOTO      TRGL4800 IF NOT EQUAL
          MATCH     "1",PTCNSIGL
          IF        @EQUAL
            MATCH     PMFMSYST,SAVFMSYS
            GOTO      TRGL4800 IF NOT EQUAL
          ENDIF
          MATCH     PTFMSUB,SAVFMSUB
          GOTO      TRGL4800 IF NOT EQUAL
          UNPACK    PTFMCOD,ANS,DIM3AA,DIM3BB,DIM3CC 
          MATCH     SP3,DIM3AA
          GOTO      TRGL4851 IF EQUAL
          MATCH     DIM3,DIM3AA
          GOTO      TRGL4850 IF NOT EQUAL
TRGL4851  MATCH     SP3,DIM3BB
          GOTO      TRGL4852 IF EQUAL
          MATCH     DIM3A,DIM3BB
          GOTO      TRGL4850 IF NOT EQUAL
TRGL4852  MATCH     SP3,DIM3CC
          GOTO      TRGL5000 IF EQUAL
          MATCH     DIM3B,DIM3CC
          GOTO      TRGL4850 IF NOT EQUAL
          GOTO      TRGL5000
TRGL4800  PACK      KEY17,SAVFMHOS,SAVFMSUB,SP20    * use default
          PACK      KEY18,SAVFMHOS,SAVFMSYS,SAVFMSUB,SP20 
          CALL      RDSYFMS
          BRANCH    OVRCD,TRGL9999
.
.         Check of Accommodation
.
TRGL5000  MOVE      "Fees Invoiced G/L Transfer    ",IBGIDESC    * Default
          CALL      ACDS0000                      * Get G/L transfer description
          MOVE      CURRDATE,IBGIDATE               * Date
          MOVE      SP20,IBGIREF                  * Reference
          MOVE      SP20,IBGICRAC                 * Credit account - cash
          MOVE      SP1,IBGISIGN                  * Sign
          MOVE      NZFIPERD,IBGIVALU               * Amount
.
          IF        CURSECT = 1
.
.         invoiced section
.
           MOVE      PTFMIDI,IBGIDISS              * Dissection
           MOVE      PTFMIRE,IBGIRESP              * Responsibility
           MOVE      PTFMILD,IBGILEDG              * Ledger
.
           MATCH     "5",PTFMSUB                   * Check for journal
           IF        @EQUAL
             MULT      "-1",IBGIVALU               * Amount
             MOVE      PTFMICA,IBGIACCT            * Debit account
             MOVE      PTFMIDA,IBGICRAA            * Credit account
           ELSE
             MOVE      PTFMIDA,IBGIACCT            * Debit Account
             MOVE      PTFMICA,IBGICRAA            * Income Acc - Credit Acc.
             IF        CREDFLAG=1
               MULT      "-1",IBGIVALU
             ENDIF
           ENDIF
.
           IF        GSTFLAG=1
             MATCH     "5",PTFMSUB                 * Check for journal
             IF        !@EQUAL
               MOVE      PTFMIGS,IBGICRAA          * GST Control - Credit Acc
             ENDIF
           ENDIF
.
           MOVE      PTFMBASC,IBGIBASC
           CALL      WRPTFMI                       * write to invoiced file
.
        ELSE
.
.        to be invoiced section
.
           MOVE      PTFMTDI,IBGIDISS              * Dissection
           MOVE      PTFMTRE,IBGIRESP              * Responsibility
           MOVE      PTFMTLD,IBGILEDG              * Ledger
.
           MATCH     "5",PTFMSUB                   * Check for journal
           IF        @EQUAL
             MULT      "-1",IBGIVALU               * Amount
             MOVE      PTFMTCA,IBGIACCT            * Debit account
             MOVE      PTFMTDA,IBGICRAA            * Credit account
           ELSE
             MOVE      PTFMTDA,IBGIACCT            * Debit Account
             MOVE      PTFMTCA,IBGICRAA            * Income Acc - Credit Acc.
             IF        CREDFLAG=1
               MULT      "-1",IBGIVALU
             ENDIF
           ENDIF
.
           MOVE      SP3,IBGIBASC
           CALL      WRPTFMT                      * write to to be invoiced file
.
         ENDIF
.
TRGL9999 RETURN
+
.        ======================================================================
.        Get accommodation description
.        ======================================================================
ACDS0000  MATCH     ANSA,NZFITYPE
          GOTO      ACDS0200 IF EQUAL          * Fees
.
          MATCH     ANSC,NZFITYPE
          GOTO      ACDS9999 IF NOT EQUAL      * Not journals
.
          CALL      JRDS0000                   * Get journal description
          GOTO      ACDS9999
.
ACDS0200  UNPACK    NZFICODE,KEY1,DIM3,DIM4
          MATCH     ANSA,KEY1
          GOTO      ACDS1000 IF EQUAL          * Normal accommodation
          MATCH     ANSN,KEY1
          GOTO      ACDS1000 IF EQUAL          * Accomm.Credit notes
.
          MATCH     ANSC,KEY1
          GOTO      ACDS1100 IF EQUAL          * From Funder contribution
          MATCH     ANSO,KEY1
          GOTO      ACDS1100 IF EQUAL          * From Funder contr.credit notes
.
          MATCH     ANSB,KEY1
          GOTO      ACDS1200 IF EQUAL          * Fixed fee
          MATCH     ANSP,KEY1
          GOTO      ACDS1200 IF EQUAL          * Fixed Fee Credit notes
.
          MATCH     ANSD,KEY1
          GOTO      ACDS1300 IF EQUAL          * Co-payment
          MATCH     ANSR,KEY1
          GOTO      ACDS1300 IF EQUAL          * Co-Payment Credit notes
.
          MATCH     ANSG,KEY1
          GOTO      ACDS1320 IF EQUAL          * Funder Co-payment Adj.
          MATCH     ANSU,KEY1
          GOTO      ACDS1320 IF EQUAL          * Funder Co-Pay.Adj.Credit notes
.
          MATCH     ANSF,KEY1
          GOTO      ACDS1400 IF EQUAL          * Funder Contr.
          MATCH     ANSS,KEY1
          GOTO      ACDS1400 IF EQUAL          * Funder Contr.Credit notes
.
          MATCH     ANSM,KEY1
          GOTO      ACDS0800 IF EQUAL          * misc
          MATCH     ANSQ,KEY1
          GOTO      ACDS0800 IF EQUAL          * Misc.Credit note
          GOTO      ACDS9999
.
ACDS0800  CALL      MSDS0000                   * Check for Misc.
          GOTO      ACDS9999
.
ACDS1000  BRANCH    CACCFEE,ACDS1010,ACDS1020,ACDS1030,ACDS1040,ACDS1050
.
.         Accommodation by admission type
.
          UNPACK    NZFICODE,KEY1,KEY3
          PACK      KEY5,CODEA,KEY3
          CALL      RDCODE1
          IF        OVRCD=0
            PACK      IBGIDESC,ACCOMTL,TDESC,SP70       * Get the description
          ENDIF
          GOTO      ACDS9999
.
.        Accommodation by ward/claim
.
ACDS1010  UNPACK    NZFICODE,KEY1,DIM3,DIM4
          PACK      IBGIDESC,ACCOMTL,ACCTL1,DIM3,ACCTL2,DIM4,SP70
          GOTO      ACDS9999
.
.        Accommodation by ward/adm.type
.
ACDS1020  UNPACK    NZFICODE,KEY1,WWARD,DIM3
          PACK      IBGIDESC,ACCTL1,WWARD,SP1,ACCTL6,DIM3,SP70
          GOTO      ACDS9999
.
.        Accommodation by ward/claim/admission type
.
ACDS1030  UNPACK    NZFICODE,KEY1,WWARD,DIM3A,DIM3B
          PACK   IBGIDESC,ACCOMTL,ACCTL1,WWARD,SP1,ACCTL4,DIM3A,SLASH,DIM3B,SP70
          GOTO      ACDS9999
.
.        Accomodation by  Ward/admission type/Claim type
.
ACDS1040  UNPACK    NZFICODE,KEY1,DIM3A,DIM3B,DIM3C
          PACK      IBGIDESC,ACCOMTL,ACCTL1,DIM3A,SP1,DIM3B,SLASH,DIM3C,SP70
          GOTO      ACDS9999
.
.         Accommodation by Claim type
.
ACDS1050  UNPACK    NZFICODE,KEY1,KEY3
          PACK      KEY5,CODECL,KEY3
          CALL      RDCODE1
          IF        OVRCD=0
            PACK      IBGIDESC,ACCOMTL,TDESC,SP70       * Get the description
          ENDIF
          GOTO      ACDS9999
.
ACDS1100  MOVE      SP30,IBGIDESC
          CLEAR     IBGIDESC
          APPEND    "From Funder Contr.: ",IBGIDESC
          APPEND    DIM8,IBGIDESC
          APPEND    " - ",IBGIDESC
          APPEND    TDESC,IBGIDESC
          RESET     IBGIDESC
          GOTO      ACDS1240
.
.        Patient Co-payment
.
ACDS1200  MOVE      SP30,IBGIDESC
          CLEAR     IBGIDESC
          APPEND    "Pat.Co-Payment: ",IBGIDESC
          APPEND    DIM8,IBGIDESC
          APPEND    " - ",IBGIDESC
          APPEND    TDESC,IBGIDESC
          RESET     IBGIDESC
.
ACDS1240  UNPACK    NZFICODE,KEY1,DIM1,DIM3        * Seperate out the codes
          MOVE      DIM1,FORM1
          MOVE      SP10,DIM8
          MOVE      MSO,DIM8
          LOAD      DIM8,FORM1,SAMEDAY
.
          PACK      TDESC,SP20
          PACK      KEY5,ANSA,SP1,DIM3
          CALL      RDCODE1
.
          GOTO      ACDS9999
.
.         Co-Payment
.
ACDS1300  UNPACK    NZFICODE,KEY1,DIM3        * Seperate out the codes
          MOVE      SP30,IBGIDESC
          CLEAR     IBGIDESC
          APPEND    "Co-Payment:",IBGIDESC
          APPEND    DIM3,IBGIDESC
          RESET     IBGIDESC
          GOTO      ACDS9999
.
.         Funder Co-Payment Adjustment
.
ACDS1320  UNPACK    NZFICODE,KEY1,DIM3        * Seperate out the codes
          MOVE      SP30,IBGIDESC
          CLEAR     IBGIDESC
          APPEND    "Funder Co-Pay Adj.:",IBGIDESC
          APPEND    DIM3,IBGIDESC
          RESET     IBGIDESC
          GOTO      ACDS9999
.
.         Funder Contribution
.
ACDS1400  UNPACK    NZFICODE,KEY1,DIM3        * Seperate out the codes
          MOVE      SP30,IBGIDESC
          CLEAR     IBGIDESC
          APPEND    "Funder Contr.:",IBGIDESC
          APPEND    DIM3,IBGIDESC
          RESET     IBGIDESC
.
ACDS9999  RETURN
.
.        ======================================================================
.        MSDS0000: Get misc.item group description
.        ======================================================================
MSDS0000 UNPACK    SP70,KEY3,DIM3,DIM9
         BRANCH    PTCNMFEE,MSDS6000          * by claim/misc.group
.
         UNPACK    NZFICODE,KEY1,DIM3,DIM9       * by misc.group/item code
.
         MATCH     SP70,DIM3
         GOTO      MSDS3000 IF EQUAL            * No group
.
.        We have a grouping code. Get the description from the codes file
.
         PACK      IBGIDESC,UNKMGRP,DIM3,SP70         * Default description
.
         MOVE      "-",DIM1
         PACK      KEY5,CODEFI,DIM3              * Get the group code desc.
         CALL      RDCODE1
         IF        OVRCD=0
           MATCH     SP70,DIM9
           IF        @EQUAL
             PACK      IBGIDESC,TDESC,DIM1,DIM3,SP70
           ELSE
             MOVE      TDESC,KEY15
             PACK      IBGIDESC,KEY15,DIM1,DIM3,SP1,DIM9,SP70
           ENDIF
         ENDIF
         GOTO      MSDS9999
.
.        Get item description
.
MSDS3000 PACK      IBGIDESC,UNKMISC,DIM9,SP70         * Default description
.
.        check that it is a valid MBS item number
.
         PACK      KEY9,DIM9                     * Key for item file
         PACK      KEY17,KEY9,SP70
         CALL      PATITMRD                      * Read the item file
         BRANCH    OVRCD,MSDS4000                * Check for valid misc charge
         MOVE      IDESC,KEY20                   * Save the description
         MOVE      "-",DIM1
         PACK      IBGIDESC,KEY20,DIM1,KEY9,SP70
         GOTO      MSDS9999
.
.        Get the description from the Misc charges file
.
MSDS4000 IF        IBCNMHOS=1
           MOVE      PTHSDCLM,PTCNDCLM
         ENDIF
         MOVE      PTCNDCLM,NZMCCLMC              * Claim code 0
         PACK      KEY29,SP3,NZMCCLMC,SP14,DIM9 * Claim code 0 & blank H.F.
         PACK      KEY37,KEY29,CURRDATE
         CALL      RDNZMCH1                      * Read this record
         COMPARE   ZERO,OVRCD
         GOTO      MSDS4200 IF EQUAL
.
         CALL      RPNZMCH1
         BRANCH    OVRCD,MSDS9999                * No record, use default desc.
.
         PACK      KEY29A,NZMCHOSP,NZMCCLMC,NZMCCNTR,NZMCFTAB,NZMCMCHG
         MATCH     KEY29,KEY29A
         GOTO      MSDS9999 IF NOT EQUAL
.
MSDS4200 MOVE      NZMCDESC,KEY20                * Save the description
         MOVE      "-",DIM1
         PACK      IBGIDESC,KEY20,SP1,DIM1,DIM9,SP70
         GOTO      MSDS9999
.
.        Misc.item by claim and Item group
.
MSDS6000 UNPACK    NZFICODE,KEY1,DIM3,KEY3       * by claim/misc.group
.
         PACK      IBGIDESC,UNKCLCOD,SP1,OPNBRA,DIM3,CLSBRA,SP70 * Default desc.
         PACK      KEY5,CODECL,DIM3
         CALL      RDCODE1
         IF        OVRCD<>1
           MOVE      "-",DIM1
           PACK      IBGIDESC,TDESC,DIM1,DIM3,SP1,KEY3,SP70
         ENDIF
MSDS9999 RETURN
+
.        ======================================================================
.        JRDS0000: Get Journal description
.        ======================================================================
JRDS0000 COMPARE   ONE,PTCNJFEE                  * Journals by claim code ?
         GOTO      JRDS3300 IF EQUAL             * Yes
.
         UNPACK    NZFICODE,DIM2
         PACK      KEY5,CODEJ,DIM2,SP1           * Key for journal code
         CALL      RDCODE1                       * Read in codes file record
         PACK      IBGIDESC,TDESC,SP1,OPNBRA,DIM2,CLSBRA,SP70
         GOTO      JRDS9999
.
JRDS3300 UNPACK    NZFICODE,DIM3,DIM2             * claim/journal
         PACK      IBGIDESC,UNKCLCOD,SP1,OPNBRA,DIM3,CLSBRA,SP70 * Default desc.
.
         MATCH     SP3,DIM3
         GOTO      JRDS3400 IF EQUAL             * No claim code set up
.
         PACK      KEY5,CODECL,DIM3              * Key for journal code
         CALL      RDCODE1                       * Read in codes file record
         IF        OVRCD<>1
           PACK      IBGIDESC,TDESC,SP1,OPNBRA,DIM3,SP1,DIM2,CLSBRA,SP70
         ENDIF
         GOTO      JRDS9999
.
JRDS3400 PACK      IBGIDESC,UNKJOUR,SP1,OPNBRA,DIM2,CLSBRA  * Default desc.
.
         MATCH     SP2,DIM2
         GOTO      JRDS9999 IF EQUAL             * No journal code set up
.
         PACK      KEY5,CODEJ,DIM2,SP1           * Key for journal code
         CALL      RDCODE1                       * Read in codes file record
         IF        OVRCD<>1
           PACK      SUBDESC2,TDESC,SP1,OPNBRA,DIM2,CLSBRA
         ENDIF
JRDS9999 RETURN
+
.        ======================================================================
.        PRNT0000: Loop over the work file, and print the report
.        ======================================================================
.
PRNT0000 DISPLAY   *P1:24,*EL,*P10:24,"Printing : ";
.
         MOVE      ZERO,CURSECT                  * Initialise current section
         MOVE      ZERO,CURSUBS                  * Initialise current subsect
         MOVE      SP20,KEY16                    * Loop from start of work file
         CALL      RDSWORK                       * Positional read of work
PRNT1000 CALL      RDKWORK                       * Read the next record
         BRANCH    OVRCD,PRNT8000                * Finished work file
.
         COMPARE   CURSECT,SECTION               * Check for new section
         GOTO      PRNT2000 IF EQUAL             * Same section
.
         IF        CURSECT<>0
           PACK      SAVKEY16,DSECTION,DSUBSECT,SUBCODE,SP70
           CALL      FIXA0000                      * Fix accom/misc totals
           MOVE      SAVKEY16,KEY16
           CALL      RDWORK
         ENDIF
.
         CALL      PSUM0000                      * Print the summary section
         MOVE      "60",CLNO                     * Force new page
         MOVE      SECTION,CURSECT               * Save new section number
         MOVE      SUBSECT,CURSUBS               * Save new sub-section number
.
.        Load up the section and subsection headings
.
         LOAD      SECTHD,CURSECT,SECT1,SECT2,SECT3
.
         DISPLAY   *P21:24,*EL,*V2LON,SECTHD     * Display the section name
.
PRNT2000 COMPARE   CURSUBS,SUBSECT               * Check for a new subsection
         GOTO      PRNT3000 IF EQUAL             * Same subsection
.
         COMPARE   "52",CLNO                     * Enough room on page ?
         GOTO      PRNT2200 IF NOT LESS          * No.
.
         CALL      ENDS0000                      * End of a subsection
         CALL      SUBS0000                      * Print Subsection title
         GOTO      PRNT2400
.
PRNT2200 MOVE      "60",CLNO                     * Force a new page
.
PRNT2400 MOVE      SUBSECT,CURSUBS               * Save new sub-section number
.
PRNT3000 CALL      PDAT0000                      * Print this data record
         GOTO      PRNT1000                      * Get the next record
.
.        End of work file. Check if anything was produced
.
PRNT8000 IF        CURSECT<>0
           PACK      SAVKEY16,DSECTION,DSUBSECT,SUBCODE,SP70
           CALL      FIXA0000                      * Fix accom/misc totals
           MOVE      SAVKEY16,KEY16
           CALL      RDWORK
         ENDIF
         CALL      PSUM0000                      * Print the last summary
.
         COMPARE   ZERO,CPAGENO                  * Still on page zero ?
         GOTO      PRNT9000 IF NOT EQUAL         * No. A report was produced
.
         DISPLAY   *P1:24,*EL,*B:
                   "No Data Found for the Report ",YEARTTL:
                   ". ";
         CALL      HITENTER
.
         GOTO      PRNT9999
.
PRNT9000 CALL      ENDS0000                      * End of a subsection
         PRINT     *N,"*** END OF REPORT ***"
.
PRNT9999 RETURN
.
.        ======================================================================
.        PDAT0000: Print the current work file record
.        ======================================================================
.
PDAT0000 MATCH      SUBCODE,Z20                  * Check for a totals record
         GOTO       PDAT2000 IF EQUAL            * Yes. Print totals record
.
.        Check for a non-zero line
.
         MOVE       ZERO,FORM2                   * Start from the beginning
PDAT1000 ADD        ONE,FORM2                    * Get next variable
.
         COMPARE    TEN6,FORM2
         GOTO       PDAT9999 IF NOT LESS
.
         LOAD       WORK1,FORM2,XSUBM01,XSUBM02,XSUBM03,XSUBM04:
                                XSUBM05,XSUBM06,XSUBM07,XSUBM08:
                                XSUBM09,XSUBM10,XSUBM11,XSUBM12:
                                XSUBM13,XSUBPER,XSUBPRY
.
.        Check if this is non-zero
.
         COMPARE    ZERO,WORK1
         GOTO       PDAT1000 IF EQUAL
.
.        We have a line with at least one non-zero figure
.
PDAT2000 COMPARE   "52",CLNO
         CALL      HEAD0000 IF NOT LESS          * Start new page if neccessary
.
         MATCH     SUBCODE,Z20                   * Check for a totals record
         CALL      TOTL0000 IF EQUAL             * Print a line of '-'s
.
         DISPLAY   *P43:24,*EL,*V2LON,SUBDESC1;
.
.        Print the data
.
         CALL      PRTD0000                      * Print the work file record
.
         MATCH     SUBCODE,Z20                   * Check if not a totals rec.
         CALL      BLNK0000 IF NOT EQUAL         * Print a blank line
.
PDAT9999 RETURN
.
.        ======================================================================
.        PRTD0000: Print the data variables
.        ======================================================================
.
PRTD0000 COMPARE   TEN2,NUMPERS
         GOTO      PRTD2000 IF NOT EQUAL
.
.        Print 12 periods
.
         MOVE      SUBDESC1,DIM29
         BRANCH    PRTFLAG,PRTD1000
.
.******************************************** start of changes         *C-65765
         PRINT     *1,"|",*2,DIM29,*30,"|",*31,SUBPER,*45,"|":
                   *46,SUBYTD,*60,"|",*61,SUBM01,*73,SUBM02:
                   *85,SUBM03,*97,SUBM04,*109,SUBM05:
                   *121,SUBM06,*132,"|",*N:
                   *1,"|";
.
         IF        SUBUS2DS=1
           UNPACK    SUBDESC2,KEY26
           PRINT     *2,KEY26;
         ELSE
           UNPACK    SUBDESC2,DIM15
           PRINT     *2,DIM15,*19,SUBDCOD;
         ENDIF
.
         PRINT     *30,"|",*45,"|":
                   *46,SUBPRY,*60,"|",*61,SUBM07,*73,SUBM08:
                   *85,SUBM09,*97,SUBM10,*109,SUBM11:
                   *121,SUBM12,*132,"|"
 
         ADD       TWO,CLNO                      * Increment the line count
         GOTO      PRTD9999
.
PRTD1000 PRINT     *1,"|",*2,DIM29,*33,"|",*34,XSUBPER,*50,"|":
                   *51,XSUBYTD,*67,"|",*68,XSUBM01,*84,XSUBM02:
                   *101,XSUBM03,*117,XSUBM04,*132,"|",*N:
                   *1,"|";
.
         IF        SUBUS2DS=1
           UNPACK    SUBDESC2,KEY29
           PRINT     *2,KEY29;
         ELSE
           UNPACK    SUBDESC2,DIM15
           PRINT     *2,DIM15,*19,SUBDCOD;
         ENDIF
.
         PRINT     *33,"|",*50,"|":
                   *51,XSUBPRY,*67,"|",*68,XSUBM05,*84,XSUBM06:
                   *101,XSUBM07,*117,XSUBM08,*132,"|",*N;
.
         PRINT     *1,"|":
                   *33,"|",*50,"|":
                   *67,"|",*68,XSUBM09,*84,XSUBM10:
                   *101,XSUBM11,*117,XSUBM12,*132,"|"
         ADD       THREE,CLNO                      * Increment the line count
         GOTO      PRTD9999
.
.        Print 13 periods
.
PRTD2000 MOVE      SUBDESC1,DIM29
         PRINT     *1,"|",*2,DIM27,*30,"|",*31,SUBPER,*45,"|":
                   *46,SUBYTD,*60,"|",*61,SUBM01,*73,SUBM02:
                   *85,SUBM03,*97,SUBM04,*109,SUBM05:
                   *121,SUBM06,*132,"|",*N:
                   *1,"|";
         IF        SUBUS2DS=1
           PRINT     *2,SUBDESC2;
         ELSE
           PRINT     *21,SUBDCOD;
         ENDIF
         PRINT     *30,"|",*45,"|":
                   *46,SUBPRY,*60,"|",*61,SUBM07,*73,SUBM08:
                   *85,SUBM09,*97,SUBM10,*109,SUBM11:
                   *121,SUBM12,*132,"|",*N:
                   *1,"|",*30,"|",*45,"|",*60,"|",*61,SUBM07,*132,"|"
.********************************************   end of changes         *C-65765
.
         ADD       THREE,CLNO                    * Increment the line count
.
PRTD9999 RETURN
.
.        ======================================================================
.        BLNK0000: Print a "blank" line
.        ======================================================================
.
BLNK0000 BRANCH    PRTFLAG,BLNK1000
         PRINT     *1,"|",*30,"|",*45,"|",*60,"|",*132,"|"
         GOTO      BLNK2000
.
BLNK1000 PRINT     *1,"|",*33,"|",*50,"|",*67,"|",*132,"|"
BLNK2000 ADD       ONE,CLNO
         RETURN
.
.        ======================================================================
.        TOTL0000: Print a line of '-'s
.        ======================================================================
.
TOTL0000 BRANCH    PRTFLAG,TOTL1000
         PRINT     *1,"|",*30,"|--------------|--------------|------------":
                   "--------------------------------------------------":
                   "---------|"
         GOTO      TOTL2000
.
TOTL1000 PRINT     *1,"|",*33,"|----------------|----------------|":
                   "-----------------":
                   "-----------------":
                   "-----------------":
                   "-------------|"
TOTL2000 ADD       ONE,CLNO
         RETURN
.
.        ======================================================================
.        ENDS0000: Print the end of a section
.        ======================================================================
.
ENDS0000 PRINT     "*-------------------------------------------------":
                   "--------------------------------------------------":
                   "-------------------------------*"
         ADD       ONE,CLNO
         RETURN
.
.        ======================================================================
.        PSUB0000: Print a subheading line
.        ======================================================================
.
PSUB0000 BRANCH    PRTFLAG,PSUB1000
.
         PRINT     *1,"|",SUBHEAD,*30,"|",*45,"|",*60,"|",*132,"|"
.
.        Convert letters to '-'s and reprint (gives an underline)
.
         REP       TOMINUS,SUBHEAD
         PRINT     *1,"|",SUBHEAD,*30,"|",*45,"|",*60,"|",*132,"|"
         GOTO      PSUB2000
.
PSUB1000 PRINT     *1,"|",SUBHEAD,*33,"|",*50,"|",*67,"|",*132,"|"
.
PSUB2000 ADD       TWO,CLNO
         RETURN
.
.        ======================================================================
.        FIXA0000: Add the Accommodation totals to the Misc Item totals
.        ======================================================================
.
FIXA0000 BRANCH    CURSECT,FIXA0100,FIXA5000
.
FIXA0100 MOVE      ONE,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Sect 1 Accom total key
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA2000                * No Accom in section 1
.
         CALL      SAVT0000                      * Save the total amounts
.
.        Read in the Misc Item total (if it exists). If it exists, add the
.        accommodation totals. If it does not exist, then change to description
.        to "TOTALS" on the accommodation record
.
         MOVE      SEVEN,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Sect 1 Misc Item total key
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA1000                * No Misc Items in section 1
.
         CALL      ADDW0000                      * Add the Accom totals
         GOTO      FIXA2000                      * Now fix section 2
.
.        Fix the description on the accommodation record
.
FIXA1000 MOVE      ONE,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Sect 1 Accom total key
         CALL      RDWORK                        * Re-read in the accom record
.
         MOVE      SEVEN,SUBSECT                 * Change to Misc total
         PACK      KEY16,ONE,SUBSECT,Z20
         MOVE      "TOTAL                         ",SUBDESC1
         CALL      WRWORK                        * Update the description
.
FIXA2000 MOVE      TWO,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Sect 1 Patient Co-payment
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA3200                * No Misc Items in section 1
.
         CALL      SAVT0000                      * Save the total amounts
         MOVE      SEVEN,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * set 1 misc item total key
         CALL      RDWORK                        * read in the work file record
         BRANCH    OVRCD,FIXA3000                * no misc item in section 1
.
         CALL      ADDW0000                      * Add the Accom totals
         GOTO      FIXA3200
.
FIXA3000 MOVE      TWO,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Sect 1 Accom total key
         CALL      RDWORK                        * Re-read in the accom record
.
         MOVE      SEVEN,SUBSECT                  * Change to Misc total
         PACK      KEY16,ONE,SUBSECT,Z20
         MOVE      "TOTAL                         ",SUBDESC1
         CALL      WRWORK                        * Update the description
.
FIXA3200 MOVE      THREE,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Sect 1 Funder Contribution
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA3600                * No Misc Items in section 1
.
         CALL      SAVT0000                      * Save the total amounts
         MOVE      SEVEN,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * set 1 misc item total key
         CALL      RDWORK                        * read in the work file record
         BRANCH    OVRCD,FIXA3400                * no misc item in section 1
.
         CALL      ADDW0000                      * Add the Accom totals
         GOTO      FIXA3600
.
FIXA3400 MOVE      THREE,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Sect 1 Accom total key
         CALL      RDWORK                        * Re-read in the accom record
.
         MOVE      SEVEN,SUBSECT                 * Change to Misc total
         PACK      KEY16,ONE,SUBSECT,Z20
         MOVE      "TOTAL                         ",SUBDESC1
         CALL      WRWORK                        * Update the description
.
FIXA3600 MOVE      FOUR,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Sect 1 Funder Contribution
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA3720                * No Misc Items in section 1
.
         CALL      SAVT0000                      * Save the total amounts
         MOVE      SEVEN,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * set 1 misc item total key
         CALL      RDWORK                        * read in the work file record
         BRANCH    OVRCD,FIXA3700                * no misc item in section 1
.
         CALL      ADDW0000                      * Add the Accom totals
         GOTO      FIXA3720
.
FIXA3700 MOVE      FOUR,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Sect 1 Accom total key
         CALL      RDWORK                        * Re-read in the accom record
.
         MOVE      SEVEN,SUBSECT                 * Change to Misc total
         PACK      KEY16,ONE,SUBSECT,Z20
         MOVE      "TOTAL                         ",SUBDESC1
         CALL      WRWORK                        * Update the description
.
FIXA3720 MOVE      FIVE,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Sect 1 Funder Co-payment
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA3800                * No Misc Items in section 1
.
         CALL      SAVT0000                      * Save the total amounts
         MOVE      SEVEN,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * set 1 misc item total key
         CALL      RDWORK                        * read in the work file record
         BRANCH    OVRCD,FIXA3740                * no misc item in section 1
.
         CALL      ADDW0000                      * Add the Accom totals
         GOTO      FIXA3800
.
FIXA3740 MOVE      FIVE,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Sect 1 Accom total key
         CALL      RDWORK                        * Re-read in the accom record
.
         MOVE      SEVEN,SUBSECT                 * Change to Misc total
         PACK      KEY16,ONE,SUBSECT,Z20
         MOVE      "TOTAL                         ",SUBDESC1
         CALL      WRWORK                        * Update the description
.
FIXA3800 MOVE      SIX,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Sect 1 Funder Contribution
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA4000                * No Misc Items in section 1
.
         CALL      SAVT0000                      * Save the total amounts
         MOVE      SEVEN,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * set 1 misc item total key
         CALL      RDWORK                        * read in the work file record
         BRANCH    OVRCD,FIXA3900                * no misc item in section 1
.
         CALL      ADDW0000                      * Add the Accom totals
         GOTO      FIXA4000
.
FIXA3900 MOVE      SIX,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Sect 1 Accom total key
         CALL      RDWORK                        * Re-read in the accom record
.
         MOVE      SEVEN,SUBSECT                 * Change to Misc total
         PACK      KEY16,ONE,SUBSECT,Z20
         MOVE      "TOTAL                         ",SUBDESC1
         CALL      WRWORK                        * Update the description
.
.        Check for credit notes
.
FIXA4000 MOVE      EIGHT,FORM2
         PACK      KEY16,ONE,FORM2,Z20 
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA4600     
.
         CALL      SAVT0000                      * Save the total amounts
.
.        Read in the Misc Item total (if it exists). If it exists, add the
.        accommodation totals. If it does not exist, then change to description
.        to "TOTALS" on the accommodation record
.
         MOVE      TEN4,FORM2
         PACK      KEY16,ONE,FORM2,Z20  
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA4500      
.
         CALL      ADDW0000                      * Add the Accom totals
         GOTO      FIXA4600                      * Now fix section 9
.
.        Fix the description on the accommodation record
.
FIXA4500 MOVE      EIGHT,FORM2
         PACK      KEY16,ONE,FORM2,Z20 
         CALL      RDWORK                        * Re-read in the accom record
.
         MOVE      TEN4,SUBSECT                  * Change to Misc total
         MOVE      "TOTAL                         ",SUBDESC1
         CALL      WRWORK                        * Update the description
.
FIXA4600 MOVE      NINE,FORM2
         PACK      KEY16,ONE,FORM2,Z20
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA4800                * No Misc Items in section 9
.
         CALL      SAVT0000                      * Save the total amounts
         MOVE      TEN4,FORM2
         PACK      KEY16,ONE,FORM2,Z20 
         CALL      RDWORK                        * read in the work file record
         BRANCH    OVRCD,FIXA4700                * no misc item in section 1
.
         CALL      ADDW0000                      * Add the Accom totals
         GOTO      FIXA4800
.
FIXA4700 MOVE      NINE,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Sect 9 Accom total key
         CALL      RDWORK                        * Re-read in the accom record
.
         MOVE      TEN4,SUBSECT                   * Change to Misc total
         MOVE      "TOTAL                         ",SUBDESC1
         CALL      WRWORK                        * Update the description
.
FIXA4800 MOVE      TEN,FORM2
         PACK      KEY16,ONE,FORM2,Z20
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA4920                * No Misc Items in section 10
.
         CALL      SAVT0000                      * Save the total amounts
         MOVE      TEN4,FORM2
         PACK      KEY16,ONE,FORM2,Z20
         CALL      RDWORK                        * read in the work file record
         BRANCH    OVRCD,FIXA4900                * no misc item in section 1
.
         CALL      ADDW0000                      * Add the Accom totals
         GOTO      FIXA4920
.
FIXA4900 MOVE      TEN,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Sect 10 Accom total key
         CALL      RDWORK                        * Re-read in the accom record
.
         MOVE      TEN4,SUBSECT                   * Change to Misc total
         MOVE      "TOTAL                         ",SUBDESC1
         CALL      WRWORK                        * Update the description
.
FIXA4920 MOVE      TEN1,FORM2
         PACK      KEY16,ONE,FORM2,Z20
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA4942                * No Misc Items in section 
.
         CALL      SAVT0000                      * Save the total amounts
         MOVE      TEN4,FORM2
         PACK      KEY16,ONE,FORM2,Z20
         CALL      RDWORK                        * read in the work file record
         BRANCH    OVRCD,FIXA4940                * no misc item in section 1
.
         CALL      ADDW0000                      * Add the Accom totals
         GOTO      FIXA4942
.
FIXA4940 MOVE      TEN1,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Sect 9 Accom total key
         CALL      RDWORK                        * Re-read in the accom record
.
         MOVE      TEN4,SUBSECT                   * Change to Misc total
         MOVE      "TOTAL                         ",SUBDESC1
         CALL      WRWORK                        * Update the description
.
FIXA4942 MOVE      TEN2,FORM2
         PACK      KEY16,ONE,FORM2,Z20
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA4950                * No Misc Items in section
.
         CALL      SAVT0000                      * Save the total amounts
         MOVE      TEN4,FORM2
         PACK      KEY16,ONE,FORM2,Z20
         CALL      RDWORK                        * read in the work file record
         BRANCH    OVRCD,FIXA4944                * no misc item in section 1
.
         CALL      ADDW0000                      * Add the Accom totals
         GOTO      FIXA4950
.
FIXA4944 MOVE      TEN2,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Sect 9 Accom total key
         CALL      RDWORK                        * Re-read in the accom record
.
         MOVE      TEN4,SUBSECT                   * Change to Misc total
         MOVE      "TOTAL                         ",SUBDESC1
         CALL      WRWORK                        * Update the description
.
FIXA4950 MOVE      TEN3,FORM2
         PACK      KEY16,ONE,FORM2,Z20
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA9999                * No Misc Items in section 9
.
         CALL      SAVT0000                      * Save the total amounts
         MOVE      TEN4,FORM2
         PACK      KEY16,ONE,FORM2,Z20
         CALL      RDWORK                        * read in the work file record
         BRANCH    OVRCD,FIXA4960                * no misc item in section 1
.
         CALL      ADDW0000                      * Add the Accom totals
         GOTO      FIXA9999
.
FIXA4960 MOVE      TEN3,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Sect 9 Accom total key
         CALL      RDWORK                        * Re-read in the accom record
.
         MOVE      TEN4,SUBSECT                   * Change to Misc total
         MOVE      "TOTAL                         ",SUBDESC1
         CALL      WRWORK                        * Update the description
         GOTO      FIXA9999
.
.        Fix up the accommodation/misc item totals for section 2
.
FIXA5000 MOVE      ONE,FORM2
         PACK      KEY16,TWO,FORM2,Z20           * Sect 2 Accom total key
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA7000                * No Accom in section 2
.
         CALL      SAVT0000                      * Save the total amounts
.
.        Read in the Misc Item total (if it exists). If it exists, add the
.        accommodation totals. If it does not exist, then change to description
.        to "TOTALS" on the accommodation record
.
         MOVE      SEVEN,FORM2
         PACK      KEY16,TWO,FORM2,Z20           * Sect 2 Misc Item total key
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA6000                * No Misc Items in section 2
.
         CALL      ADDW0000                      * Add the Accom totals
         GOTO      FIXA7000
.
.        Fix the description on the accommodation record
.
FIXA6000 MOVE      ONE,FORM2
         PACK      KEY16,TWO,FORM2,Z20           * Sect 2 Accom total key
         CALL      RDWORK                        * Re-read in the accom record
.
         MOVE      SEVEN,SUBSECT                 * Change to Misc total
         MOVE      "TOTAL                         ",SUBDESC1
         CALL      WRWORK                        * Update the description
.
FIXA7000 MOVE      TWO,FORM2
         PACK      KEY16,TWO,FORM2,Z20           * Sect 2 Casemix Accom.
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA8200                * No Accom in section 2
.
         CALL      SAVT0000                      * Save the total amounts
         MOVE      SEVEN,FORM2
         PACK      KEY16,TWO,FORM2,Z20           * Sect 2 Misc Item total key
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA8000                * No Misc Items in section 2
.
         CALL      ADDW0000                      * Add the Accom totals
         GOTO      FIXA8200
.
FIXA8000 MOVE      TWO,FORM2
         PACK      KEY16,TWO,FORM2,Z20           * Sect 2 Casemix Accom.
         CALL      RDWORK                        * Read in the work file record
.
         MOVE      SEVEN,SUBSECT                 * Change to Misc total
         MOVE      "TOTAL                         ",SUBDESC1
         CALL      WRWORK                        * Update the description
.
FIXA8200 MOVE      THREE,FORM2
         PACK      KEY16,TWO,FORM2,Z20           * Sect 2 Casemix Accom.
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA8600                * No Accom in section 2
.
         CALL      SAVT0000                      * Save the total amounts
         MOVE      SEVEN,FORM2
         PACK      KEY16,TWO,FORM2,Z20           * Sect 2 Misc Item total key
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA8400                * No Misc Items in section 2
.
         CALL      ADDW0000                      * Add the Accom totals
         GOTO      FIXA8600
.
FIXA8400 MOVE      THREE,FORM2
         PACK      KEY16,TWO,FORM2,Z20           * Sect 2 Casemix Accom.
         CALL      RDWORK                        * Read in the work file record
.
         MOVE      SEVEN,SUBSECT                 * Change to Misc total
         MOVE      "TOTAL                         ",SUBDESC1
         CALL      WRWORK                        * Update the description
.
FIXA8600 MOVE      FOUR,FORM2
         PACK      KEY16,TWO,FORM2,Z20           * Sect 2 Casemix Accom.
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA8900                * No Accom in section 2
.
         CALL      SAVT0000                      * Save the total amounts
         MOVE      SEVEN,FORM2
         PACK      KEY16,TWO,FORM2,Z20           * Sect 2 Misc Item total key
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA8800                * No Misc Items in section 2
.
         CALL      ADDW0000                      * Add the Accom totals
         GOTO      FIXA8900
.
FIXA8800 MOVE      FOUR,FORM2
         PACK      KEY16,TWO,FORM2,Z20           * Sect 2 Casemix Accom.
         CALL      RDWORK                        * Read in the work file record
.
         MOVE      SEVEN,SUBSECT                 * Change to Misc total
         MOVE      "TOTAL                         ",SUBDESC1
         CALL      WRWORK                        * Update the description
.
FIXA8900 MOVE      FIVE,FORM2
         PACK      KEY16,TWO,FORM2,Z20           * Sect 2 Casemix Accom.
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA9000                * No Accom in section 2
.
         CALL      SAVT0000                      * Save the total amounts
         MOVE      SEVEN,FORM2
         PACK      KEY16,TWO,FORM2,Z20           * Sect 2 Misc Item total key
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA8920                * No Misc Items in section 2
.
         CALL      ADDW0000                      * Add the Accom totals
         GOTO      FIXA9000
.
FIXA8920 MOVE      FIVE,FORM2
         PACK      KEY16,TWO,FORM2,Z20           * Sect 2 Casemix Accom.
         CALL      RDWORK                        * Read in the work file record
.
         MOVE      SEVEN,SUBSECT                 * Change to Misc total
         MOVE      "TOTAL                         ",SUBDESC1
         CALL      WRWORK                        * Update the description
.
FIXA9000 MOVE      SIX,FORM2
         PACK      KEY16,TWO,FORM2,Z20           * Sect 2 Casemix Accom.
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA9999                * No Accom in section 2
.
         CALL      SAVT0000                      * Save the total amounts
         MOVE      SEVEN,FORM2
         PACK      KEY16,TWO,FORM2,Z20           * Sect 2 Misc Item total key
         CALL      RDWORK                        * Read in the work file record
         BRANCH    OVRCD,FIXA9200                * No Misc Items in section 2
.
         CALL      ADDW0000                      * Add the Accom totals
         GOTO      FIXA9999
.
FIXA9200 MOVE      SIX,FORM2
         PACK      KEY16,TWO,FORM2,Z20           * Sect 2 Casemix Accom.
         CALL      RDWORK                        * Read in the work file record
.
         MOVE      SEVEN,SUBSECT                 * Change to Misc total
         MOVE      "TOTAL                         ",SUBDESC1
         CALL      WRWORK                        * Update the description
.
FIXA9999 RETURN
.
.        ======================================================================
.        SAVT0000: Save the work file totals in the NZPFINA variables
.        ======================================================================
.
SAVT0000 MOVE      ZERO,FORM2                    * Start from the beginning
SAVT1000 ADD       ONE,FORM2                     * Get the next variable
         COMPARE   TEN7,FORM2                    * Have we finished yet ?
         GOTO      SAVT9999 IF NOT LESS          * Yes.
.
         LOAD      WORK1,FORM2,XSUBM01,XSUBM02,XSUBM03,XSUBM04:
                               XSUBM05,XSUBM06,XSUBM07,XSUBM08:
                               XSUBM09,XSUBM10,XSUBM11,XSUBM12:
                               XSUBM13,XSUBPER,XSUBPRY,XSUBYTD
.
         STORE     WORK1,FORM2,NZFIMTH1,NZFIMTH2,NZFIMTH3,NZFIMTH4:
                               NZFIMTH5,NZFIMTH6,NZFIMTH7,NZFIMTH8:
                               NZFIMTH9,NZFIMT10,NZFIMT11,NZFIMT12:
                               NZFIMT13,NZFIPERD,NZFILSYR,FINYTD
         GOTO      SAVT1000
.
SAVT9999 RETURN
.
.        ======================================================================
.        REST0000: Restore the work file totals from the NZPFINA variables
.        ======================================================================
.
REST0000 MOVE      ZERO,FORM2                    * Start from the beginning
REST1000 ADD       ONE,FORM2                     * Get the next variable
         COMPARE   TEN7,FORM2                    * Have we finished yet ?
         GOTO      REST9999 IF NOT LESS          * Yes.
.
         LOAD      WORK1,FORM2,NZFIMTH1,NZFIMTH2,NZFIMTH3,NZFIMTH4:
                               NZFIMTH5,NZFIMTH6,NZFIMTH7,NZFIMTH8:
                               NZFIMTH9,NZFIMT10,NZFIMT11,NZFIMT12:
                               NZFIMT13,NZFIPERD,NZFILSYR,FINYTD
.
         STORE     WORK1,FORM2,XSUBM01,XSUBM02,XSUBM03,XSUBM04:
                               XSUBM05,XSUBM06,XSUBM07,XSUBM08:
                               XSUBM09,XSUBM10,XSUBM11,XSUBM12:
                               XSUBM13,XSUBPER,XSUBPRY,XSUBYTD
         GOTO      REST1000
.
REST9999 RETURN
.
.        ======================================================================
.        SUBT0000: Subtract the work file totals from the NZPFINA variables
.        ======================================================================
.
SUBT0000 MOVE      ZERO,FORM2                    * Start from the beginning
SUBT1000 ADD       ONE,FORM2                     * Get the next variable
         COMPARE   TEN7,FORM2                    * Have we finished yet ?
         GOTO      SUBT9999 IF NOT LESS          * Yes.
.
         LOAD      WORK1,FORM2,NZFIMTH1,NZFIMTH2,NZFIMTH3,NZFIMTH4:
                               NZFIMTH5,NZFIMTH6,NZFIMTH7,NZFIMTH8:
                               NZFIMTH9,NZFIMT10,NZFIMT11,NZFIMT12:
                               NZFIMT13,NZFIPERD,NZFILSYR,FINYTD
.
         LOAD      WORK2,FORM2,XSUBM01,XSUBM02,XSUBM03,XSUBM04:
                               XSUBM05,XSUBM06,XSUBM07,XSUBM08:
                               XSUBM09,XSUBM10,XSUBM11,XSUBM12:
                               XSUBM13,XSUBPER,XSUBPRY,XSUBYTD
.
         SUB       WORK2,WORK1
.
         STORE     WORK1,FORM2,NZFIMTH1,NZFIMTH2,NZFIMTH3,NZFIMTH4:
                               NZFIMTH5,NZFIMTH6,NZFIMTH7,NZFIMTH8:
                               NZFIMTH9,NZFIMT10,NZFIMT11,NZFIMT12:
                               NZFIMT13,NZFIPERD,NZFILSYR,FINYTD
         GOTO      SUBT1000
.
SUBT9999 RETURN
.
.        ======================================================================
.        ADDI0000: Add the work file totals from the NZPFINA variables
.        ======================================================================
.
ADDI0000 MOVE      ZERO,FORM2                    * Start from the beginning
ADDI1000 ADD       ONE,FORM2                     * Get the next variable
         COMPARE   TEN7,FORM2                    * Have we finished yet ?
         GOTO      ADDI9999 IF NOT LESS          * Yes.
.
         LOAD      WORK1,FORM2,NZFIMTH1,NZFIMTH2,NZFIMTH3,NZFIMTH4:
                               NZFIMTH5,NZFIMTH6,NZFIMTH7,NZFIMTH8:
                               NZFIMTH9,NZFIMT10,NZFIMT11,NZFIMT12:
                               NZFIMT13,NZFIPERD,NZFILSYR,FINYTD
.
         LOAD      WORK2,FORM2,XSUBM01,XSUBM02,XSUBM03,XSUBM04:
                               XSUBM05,XSUBM06,XSUBM07,XSUBM08:
                               XSUBM09,XSUBM10,XSUBM11,XSUBM12:
                               XSUBM13,XSUBPER,XSUBPRY,XSUBYTD
.
         ADD       WORK2,WORK1
.
         STORE     WORK1,FORM2,NZFIMTH1,NZFIMTH2,NZFIMTH3,NZFIMTH4:
                               NZFIMTH5,NZFIMTH6,NZFIMTH7,NZFIMTH8:
                               NZFIMTH9,NZFIMT10,NZFIMT11,NZFIMT12:
                               NZFIMT13,NZFIPERD,NZFILSYR,FINYTD
         GOTO      ADDI1000
.
ADDI9999 RETURN
.
.        ======================================================================
.        PSUM0000: Print the summary for the currect section
.        ======================================================================
.
.
PSUM0000 LOAD      SECTHD,CURSECT,SUMM1,SUMM2,SUMM3
         MOVE      ONE,NOSUBS                    * No subheadings in summary
.
.        Save the current record for reposition later on
.
         PACK      SAVKEY16,SECTION,SUBSECT,SUBCODE
.
.        Go to the appropriate summary section
.
         BRANCH    CURSECT,PSUM1000,PSUM2000,PSUM3000
         MOVE      ZERO,NOSUBS                   * Turn subheadings on
         GOTO      PSUM9999
.
.        Section 1 summary (Fee's Invoiced)
.
PSUM1000 CALL      ZERO0000                      * Zero the variables
         MOVE      SEVEN,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Fee's invoiced total key
         CALL      RDWORK                        * Read in the record
.
         CALL      HEAD0000                      * Start new page
.
.        Change the descriptions for the Fee's Invoiced total
.
         MOVE      "FEES INVOICED                 ",SUBDESC1
         MOVE      SP20,SUBDCOD
.
         CALL      PRTD0000                      * Print the data
         CALL      BLNK0000                      * Blank line
         CALL      SAVT0000                      * Save the totals
.
PSUM1080 CALL      ZERO0000                      * Zero the variables
         MOVE      TEN5,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * GST
         CALL      RDWORK                        * Read in the record
.
.        Change the descriptions for the GST total
.
         MOVE      "PLUS GST                      ",SUBDESC1
         MOVE      SP20,SUBDCOD
.
         CALL      PRTD0000                      * Print the data
         CALL      BLNK0000                      * Blank line
         CALL      ADDI0000                      * Add to the totals
.
.        Get Rounding adjustment
.
         CALL      ZERO0000                      * Zero the variables
         MOVE      "20",FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Rounding
         CALL      RDWORK                        * Read in the record
.
         MOVE      "LESS ROUNDING ADJUSTMENT      ",SUBDESC1
         MOVE      SP20,SUBDCOD
.
         CALL      PRTD0000                      * Print the data
         CALL      BLNK0000                      * Blank line
         CALL      SUBT0000                      * Subtract from the totals
.
         CALL      ZERO0000                      * Zero the variables
         MOVE      TEN4,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Credit Note Acc.
         CALL      RDWORK                        * Read in the record
.
         MOVE      "LESS CREDIT NOTES             ",SUBDESC1
         MOVE      SP20,SUBDCOD
.
         CALL      PRTD0000                      * Print the data
         CALL      BLNK0000                      * Blank line
         CALL      SUBT0000                      * Subtract from the totals
.
.        Change the descriptions for the GST total
.
         CALL      ZERO0000                      * Zero the variables
         MOVE      TEN6,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * GST
         CALL      RDWORK                        * Read in the record
.
.        Change the descriptions for the GST total
.
         MOVE      "LESS CREDIT NOTE GST               ",SUBDESC1
         MOVE      SP20,SUBDCOD
.
         CALL      PRTD0000                      * Print the data
         CALL      BLNK0000                      * Blank line
         CALL      SUBT0000                      * Subtract from the totals
.
.        Get Credit Note Rounding adjustment
.
         CALL      ZERO0000                      * Zero the variables
         MOVE      "21",FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Rounding
         CALL      RDWORK                        * Read in the record
         BRANCH    OVRCD,PSUM1900
.
         MOVE      "PLUS CREDIT NOTE ROUNDING ADJ.",SUBDESC1
         MOVE      SP20,SUBDCOD
.
         CALL      PRTD0000                      * Print the data
         CALL      BLNK0000                      * Blank line
         CALL      SUBT0000                      * Subtract from the totals
.
PSUM1900 CALL      ZERO0000                      * Zero the variables
         MOVE      TEN7,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Cash Received total key
         CALL      RDWORK                        * Read in the record
.
.        Change the descriptions for the Cash Received total
.
         MOVE      "LESS CASH RECEIVED            ",SUBDESC1
         MOVE      SP20,SUBDCOD
.
         CALL      PRTD0000                      * Print the data
         CALL      BLNK0000                      * Blank line
         CALL      SUBT0000                      * Subtract from the totals
.
         CALL      ZERO0000                      * Zero the variables
         MOVE      TEN8,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * Journals total key
         CALL      RDWORK                        * Read in the record
.
.        Change the descriptions for the Journals total
.
         MOVE      "LESS JOURNALS                 ",SUBDESC1
         MOVE      SP20,SUBDCOD
.
         CALL      PRTD0000                      * Print the data
         CALL      BLNK0000                      * Blank line
         CALL      SUBT0000                      * Subtract from the totals
.
         CALL      ZERO0000                      * Zero the variables
         MOVE      TEN9,FORM2
         PACK      KEY16,ONE,FORM2,Z20           * GST Journals total key
         CALL      RDWORK                        * Read in the record
.
.        Change the descriptions for the Journals total
.
         MOVE      "LESS GST JOURNALS             ",SUBDESC1
         MOVE      SP20,SUBDCOD
.
         CALL      PRTD0000                      * Print the data
         CALL      BLNK0000                      * Blank line
         CALL      SUBT0000                      * Subtract from the totals
.
.        Print the grand total
.
         MOVE      "NETT:                         ",SUBDESC1
         MOVE      SP20,SUBDCOD
.
         CALL      REST0000                      * Restore the totals
         CALL      TOTL0000                      * Start of totals line
         CALL      PRTD0000                      * Print the data
.         CALL      ENDS0000                      * End of section 
         MOVE      ZERO,NOSUBS                   * Turn subheadings on
         GOTO      PSUM9990
.
.        Section 2 summary (To Be Invoiced)
.
PSUM2000 CALL      ZERO0000                      * Zero the variables
         MOVE      SEVEN,FORM2
         PACK      KEY16,TWO,FORM2,Z20             * To be invoiced total key
         CALL      RDWORK                        * Read in the record
.
         CALL      HEAD0000                      * Start new page
.
.        Change the descriptions for the To Be Invoiced total
.
         MOVE      "TO BE INVOICED                ",SUBDESC1
         MOVE      SP20,SUBDCOD
.
         CALL      PRTD0000                      * Print the data
         CALL      BLNK0000                      * Blank line
         CALL      SAVT0000                      * Save the totals
.
         CALL      ZERO0000                      * Zero the variables
         MOVE      EIGHT,FORM2
         PACK      KEY16,TWO,FORM2,Z20           * Cash Received total key
         CALL      RDWORK                        * Read in the record
.
.        Change the descriptions for the Cash Received total
.
         MOVE      "LESS CASH RECEIVED            ",SUBDESC1
         MOVE      SP20,SUBDCOD
.
         CALL      PRTD0000                      * Print the data
         CALL      BLNK0000                      * Blank line
         CALL      SUBT0000                      * Subtract from the totals
.
.        Print the grand total
.
         MOVE      "NETT:                         ",SUBDESC1
         MOVE      SP20,SUBDCOD
.
         CALL      REST0000                      * Restore the totals
         CALL      TOTL0000                      * Start of totals line
         CALL      PRTD0000                      * Print the data
         CALL      ENDS0000                      * End of section 
         MOVE      ZERO,NOSUBS                   * Turn subheadings on
         GOTO      PSUM9990
.
.        Section 3 summary (Merchant Cards)
.
PSUM3000 CALL      ZERO0000                      * Zero the variables
         MOVE      ONE,FORM2
         PACK      KEY16,THREE,FORM2,Z20         * Claimed total key
         CALL      RDWORK                        * Read in the record
         BRANCH    OVRCD,PSUM9990                * No Misc Items, No summary
.
         CALL      HEAD0000                      * Start new page
.
.        Change the descriptions for the Claimed total
.
         MOVE      "CLAIMED                       ",SUBDESC1
         MOVE      SP20,SUBDCOD
.
         CALL      PRTD0000                      * Print the data
         CALL      BLNK0000                      * Blank line
         CALL      SAVT0000                      * Save the totals
.
         CALL      ZERO0000                      * Zero the variables
         MOVE      TWO,FORM2
         PACK      KEY16,THREE,FORM2,Z20         * Cash Received total key
         CALL      RDWORK                        * Read in the record
.
.        Change the descriptions for the Cash Received total
.
         MOVE      "LESS CASH RECEIVED            ",SUBDESC1
         MOVE      SP20,SUBDCOD
.
         CALL      PRTD0000                      * Print the data
         CALL      BLNK0000                      * Blank line
         CALL      SUBT0000                      * Subtract from the totals
.
         CALL      ZERO0000                      * Zero the variables
         MOVE      THREE,FORM2
         PACK      KEY16,THREE,FORM2,Z20           * Commissions total key
         CALL      RDWORK                        * Read in the record
.
.        Change the descriptions for the Commissions total
.
         MOVE      "LESS COMMISSIONS              ",SUBDESC1
         MOVE      SP20,SUBDCOD
.
         CALL      PRTD0000                      * Print the data
         CALL      BLNK0000                      * Blank line
         CALL      SUBT0000                      * Subtract from the totals
.
         CALL      ZERO0000                      * Zero the variables
         MOVE      FOUR,FORM2
         PACK      KEY16,THREE,FORM2,Z20         * Journals total key
         CALL      RDWORK                        * Read in the record
.
.        Change the descriptions for the Journals total
.
         MOVE      "LESS JOURNALS                 ",SUBDESC1
         MOVE      SP20,SUBDCOD
.
         CALL      PRTD0000                      * Print the data
         CALL      BLNK0000                      * Blank line
         CALL      SUBT0000                      * Subtract from the totals
.
.        Print the grand total
.
         MOVE      "NETT:                         ",SUBDESC1
         MOVE      SP20,SUBDCOD
.
         CALL      REST0000                      * Restore the totals
         CALL      TOTL0000                      * Start of totals line
         CALL      PRTD0000                      * Print the data
         CALL      ENDS0000                      * End of section 
         MOVE      ZERO,NOSUBS                   * Turn subheadings on
.
.        Reposition in the work file
.
PSUM9990 MOVE      SAVKEY16,KEY16
         CALL      RDWORK
.
PSUM9999 RETURN
+
.        ======================================================================
.        ENDP0000: Do the end of report processing
.        ======================================================================
.
ENDP0000 CLOSE     TEMPFILE                      * Make sure file is closed
         CLEAR     CMDLINE                       * Clear CMDLINE
         APPEND    "iserase ",CMDLINE            * Set up for erase of work
         APPEND    FNAMEW,CMDLINE
         RESET     CMDLINE
.
         EXECUTE   CMDLINE,TASKID                * Delete work file
.
.        If Print & Reset was selected, then rest date in control file
.
         BRANCH    OPTION,ENDP9999,ENDP1000
.
ENDP1000 CALL      MVEXT000                      * move file to web
.
.        Reset date in control file
.
         BRANCH    FSTSYS,ENDP1100,ENDP1200,ENDP1300,ENDP1400
.
.        This must be consolidate report or only inpatient system is used
.
.         MOVE      ZERO,FORM2
.         MOVE      FUAAE,FORM2
.         ADD       FUOUTP,FORM2
.         ADD       FUINP,FORM2
.         ADD       COTHSFN,FORM2
.
.         COMPARE   ONE,FORM2                     * Only one system ?
.         GOTO      ENDP1300 IF EQUAL             * must be inpatient
.
.         DISPLAY   *P1:24,*EL,*B:
.                   "You Cannot Reset Consolidated Report.  ";
.         CALL      HITENTER
.
         MOVE      CURRDATE,PTCFEEAE
         WRITAB    CONTROLF,EIGHTY8;*194,PTCFEEAE  * A&E
.
         MOVE      CURRDATE,PTCFEEOP
         WRITAB    CONTROLF,EIGHTY8;*202,PTCFEEOP  * Outpatient
.
         MOVE      CURRDATE,CFEEDT
         WRITAB    CONTROLF,EIGHTY8;*102,CFEEDT      * Inpatient
.
         MOVE      CURRDATE,PTCFEEOF
         WRITAB    CONTROLF,EIGHTY8;*162,PTCFEEOF    * Other financial
.
         GOTO      ENDP9999                      * Consolidate
.
ENDP1100 MOVE      CURRDATE,PTCFEEAE
         WRITAB    CONTROLF,EIGHTY8;*194,PTCFEEAE  * A&E
         GOTO      ENDP9999
.
ENDP1200 MOVE      CURRDATE,PTCFEEOP
         WRITAB    CONTROLF,EIGHTY8;*202,PTCFEEOP  * Outpatient
         GOTO      ENDP9999
.
ENDP1300 MOVE      CURRDATE,CFEEDT
         WRITAB    CONTROLF,EIGHTY8;*102,CFEEDT      * Inpatient
         GOTO      ENDP9999
.
ENDP1400 MOVE      CURRDATE,PTCFEEOF
         WRITAB    CONTROLF,EIGHTY8;*162,PTCFEEOF    * Other financial
.
ENDP9999 RETURN
+
.------------------------------------------------------------
. Move Extract to Web Directory
.------------------------------------------------------------
MVEXT000  MOVE      "fin",KEY3
          PACK      KEY4,CMM,CDD
          REP       " 0",KEY4
.
          COMPARE   ONE,IBCNMHOS
          GOTO      MVEXT100 IF NOT EQUAL     * not multi hospital
.
          MATCH     SP3,HOSPID
          GOTO      MVEXT100 IF EQUAL
          PACK      KEY3,HOSPID
          REP       " 0",KEY3
.
MVEXT100  SQUEEZE   INVNAME
          CLEAR     CMDLINE
          APPEND    "nzpbil19.us1 ",CMDLINE
          APPEND    INVNAME,CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    "f",CMDLINE
          APPEND    KEY3,CMDLINE        * pass filename for display on web
          APPEND    KEY4,CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.         Setup to be invoiced file
.
          SQUEEZE   TBINAME
          CLEAR     CMDLINE
          APPEND    "nzpbil19.us2 ",CMDLINE
          APPEND    TBINAME,CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    "t",CMDLINE
          APPEND    KEY3,CMDLINE        * pass filename for display on web
          APPEND    KEY4,CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
MVEXT999  RETURN
.
.        ======================================================================
.        HEAD0000: Print the heading for the report
.        ======================================================================
.
HEAD0000 COMPARE   ZERO,CPAGENO                  * First page ?
         CALL      ENDS0000 IF NOT EQUAL         * No. End previous page
.
         MOVE      YEARTTL,CPHDROPT
.
.        Print the standard section of the heading
.
         CALL      HEAD132
.
         IF        IBCNMHOS =1
            PRINT     *40,"Hospital : ",HOSPID,"    ",HOSPNAME
            MOVE      THREE,CLNO
         ENDIF
.
         PRINT     *N,*45,"REPORT FOR ITEMS ENTERED DURING PERIOD ":
                          FPDATE," TO ",CDATE,*N
.
         CLOCK     TIME,CTIMEIS                  * Clock the starting time
         MOVE      FIVE,CLNO                     * Reset the line counter
.
.        Check if we are doing outpatients. If so, check if we are doing
.        a single site, dept or all sites
.
         COMPARE   TWO,FSTSYS                    * Outpatients ?
         GOTO      HEAD2000 IF NOT EQUAL         * No.
.
         MATCH     SP6,FSTSITE                   * A single site ?
         GOTO      HEAD1000 IF NOT EQUAL         * Yes.
.
         MATCH     SP3,FSTDEPT                   * A single department ?
         GOTO      HEAD0500 IF NOT EQUAL         * Yes.
.
.        Printing all sites
.
         PRINT     *45,"ALL SITES",*N
         ADD       TWO,CLNO
         GOTO      HEAD2000
.
.        Printing a single department
.
HEAD0500 MOVE      SP20,TDESC                    * Clear description
         PACK      KEY5,CODEO,FSTDEPT            * Pack key for dept code
         CALL      RDCODE1                       * Read in the dept desc.
.
         PRINT     *45,"DEPT: ",FSTDEPT,SP3,TDESC,*N
         ADD       TWO,CLNO
         GOTO      HEAD2000
.
.        Printing a single site
.
HEAD1000 MOVE      SP30,OSTDESC                  * Clear description
         MOVE      FSTSITE,KEY6                  * Pack key for site code
         CALL      RDSITA1                       * Read in the site desc.
.
         PRINT     *45,"SITE: ",FSTSITE,SP3,OSTDESC,*N
         ADD       TWO,CLNO
.
HEAD2000 CALL      ENDS0000                      * Print the line of '-'s
.
.        Print the column headings
.
         BRANCH    PRTFLAG,HEAD2200
.
.******************************************** start of changes         *C-65765
         PRINT     *1,"|",*30,"|",*37,"PERIOD",*45,"|",*51,"Y.T.D.":
                   *60,"|",*61,MDESC1,*132,"|",*N:
                   *1,"|",*2,SECTHD,*30,"|":
                   *45,"|",*49,"PRIOR YEAR",*60,"|":
                   *61,MDESC2,*132,"|"
.
         ADD       TWO,CLNO                      * Modify line counter
         GOTO      HEAD2400
.
HEAD2200 UNPACK    MDESC1,KEY64
         PRINT     *1,"|",*33,"|",*38,"PERIOD",*50,"|",*58,"Y.T.D.":
                   *67,"|",*68,KEY64,*132,"|",*N;
.
         UNPACK    MDESC2,KEY64
         PRINT     *1,"|",*2,SECTHD,*33,"|":
                   *50,"|",*54,"PRIOR YEAR",*67,"|":
                   *68,KEY64,*132,"|"
.
         ADD       THREE,CLNO                      * Modify line counter
.
.        If we don't have 12 periods in the year, then print the 3rd descrip.
.
HEAD2400 BRANCH    PRTFLAG,HEAD2600
.
         COMPARE   TEN2,NUMPERS
         GOTO      HEAD3000 IF EQUAL
.
         PRINT     *1,"|",*30,"|",*45,"|",*60,"|",*61,MDESC3,*132,"|"
         ADD       ONE,CLNO                      * Modify line counter
         GOTO      HEAD3000
.
HEAD2600 UNPACK    MDESC3,KEY64
         PRINT     *1,"|",*33,"|",*50,"|",*67,"|",*68,KEY64,*132,"|"
.********************************************   end of changes         *C-65765
         ADD       ONE,CLNO                      * Modify line counter
.
.        Print the last section of the heading
.
HEAD3000 CALL      ENDS0000                      * Print the line of '-'s
.
         BRANCH    NOSUBS,HEAD9999               * Subheading to be printed ?
.
         CALL      SUBS0000                      * Print the subsection title
.
HEAD9999 RETURN
.
.        ======================================================================
.        SUBS0000: Print the subsection heading if appropriate
.        ======================================================================
.
.        SUBSECT is the current subsection to be printed
.        CURSECT is the subsection of the previous record. It is used
.                to determine whether or not to print a new heading when
.                changing between Accommodation and Misc Items.
.
SUBS0000 BRANCH    CURSECT,SUBS1000,SUBS2000,SUBS9999
         GOTO      SUBS9999
.
.        Section 1 subheadings (Fee's invoiced)
.
SUBS1000 BRANCH    SUBSECT,SUBS1100,SUBS1200,SUBS1210,SUBS1220,SUBS1222:
                           SUBS1230,SUBS1300,SUBS1370,SUBS1380,SUBS1381:
                           SUBS1382,SUBS1383,SUBS1384,SUBS1390,SUBS1400:
                           SUBS1420,SUBS1500,SUBS1600,SUBS1700
         GOTO      SUBS9999
.
.        Accommodation
.
SUBS1100 MOVE      "FEES INVOICED",SUBHEAD       * Fee's invoiced
         GOTO      SUBS5000
.
SUBS1200 MOVE      "FEES INVOICED - PAT.FIXED FEE",SUBHEAD
         GOTO      SUBS5000
.
SUBS1210 MOVE      "FEES INVOICED - FROM FUNDER CONTR.",SUBHEAD
         GOTO      SUBS5000
.
SUBS1220 MOVE      "FEES INVOICED - CO-PAYMENT",SUBHEAD
         GOTO      SUBS5000
.
SUBS1222 MOVE      "FEES INVOICED - FUNDER CO-PAY ADJ.",SUBHEAD
         GOTO      SUBS5000
.
SUBS1230 MOVE      "FEES INVOICED - FUNDER CONTR.",SUBHEAD
         GOTO      SUBS5000
.
.        Misc Items
.
SUBS1300 COMPARE   ONE,CURSECT                   * Check if was Accommodation
         GOTO      SUBS1350 IF NOT EQUAL         * No.
.
.        Changed from Accommodation to Misc items
.
         CALL      BLNK0000                      * Print a blank line
         GOTO      SUBS9999
.
SUBS1350 MOVE      "FEES INVOICED",SUBHEAD       * Fee's invoiced
         GOTO      SUBS5000
.
SUBS1370 MOVE      "CREDIT NOTES FEES INVOICED",SUBHEAD       * Fee's invoiced
         GOTO      SUBS5000
.
SUBS1380 MOVE      "CREDIT NOTES - FIXED FEE",SUBHEAD
         GOTO      SUBS5000
.
SUBS1381 MOVE      "CREDIT NOTES - FROM FUNDER CONTR.",SUBHEAD
         GOTO      SUBS5000
.
SUBS1382 MOVE      "CREDIT NOTES - CO-PAYMENT",SUBHEAD
         GOTO      SUBS5000
.
SUBS1383 MOVE      "CREDIT NOTES - FUNDER CO-PAY.ADJ.",SUBHEAD
         GOTO      SUBS5000
.
SUBS1384 MOVE      "CREDIT NOTES - FUNDER CONTR.",SUBHEAD
         GOTO      SUBS5000
.
SUBS1390 
.        CALL      BLNK0000                      * Print a blank line
         MOVE      "CREDIT NOTES",SUBHEAD
         IF        PRTFLAG=1
           PRINT     *1,"|",SUBHEAD,*33,"|",*50,"|",*67,"|",*132,"|"
         ELSE
           PRINT     *1,"|",SUBHEAD,*32,"|",*49,"|",*66,"|",*132,"|"
         ENDIF
         ADD       ONE,CLNO
         GOTO      SUBS9999
.
SUBS1400 MOVE      "GST",SUBHEAD
         GOTO      SUBS5000
.
SUBS1420 MOVE      "CREDIT NOTES GST",SUBHEAD
         GOTO      SUBS5000
.
.        Cash Received
.
SUBS1500 MOVE      "CASH RECEIVED",SUBHEAD       * Cash Received
         GOTO      SUBS5000
.
.        Journals
.
SUBS1600 MOVE      "JOURNALS",SUBHEAD            * Journals
         GOTO      SUBS5000
.
SUBS1700 MOVE      "GST JOURNALS",SUBHEAD        * GST Journals
         GOTO      SUBS5000
.
.        Section 2 subheadings (To be invoiced)
.
SUBS2000 BRANCH    SUBSECT,SUBS2100,SUBS2200,SUBS2205:
                           SUBS2210,SUBS2212,SUBS2220,SUBS2300:
                           SUBS2400
         GOTO      SUBS9999
.
.        Accommodation
.
SUBS2100 MOVE      "TO BE INVOICED",SUBHEAD       * Fee's invoiced
         GOTO      SUBS5000
.
SUBS2200 MOVE      "TO BE INVOICED - FIXED FEE",SUBHEAD  * Fee's invoiced
         GOTO      SUBS5000
.
SUBS2205 MOVE      "TO BE INVOICED - FROM FUNDER CONTR.",SUBHEAD
         GOTO      SUBS5000
.
SUBS2210 MOVE      "TO BE INVOICED - CO-PAYMENT",SUBHEAD  * Fee's invoiced
         GOTO      SUBS5000
.
SUBS2212 MOVE      "TO BE INVOICED - FUNDER CO-PAY.ADJ.",SUBHEAD
         GOTO      SUBS5000
.
SUBS2220 MOVE      "TO BE INVOICED - FUNDER CONTR.",SUBHEAD   * Fee's invoiced
         GOTO      SUBS5000
.
.        Misc Items
.
SUBS2300 COMPARE   ONE,CURSECT                   * Check if was Accommodation
         GOTO      SUBS2350 IF NOT EQUAL         * No.
.
.        Changed from Accommodation to Misc items
.
         CALL      BLNK0000                      * Print a blank line
         GOTO      SUBS9999
.
SUBS2350 MOVE      "TO BE INVOICED",SUBHEAD       * Fee's invoiced
         GOTO      SUBS5000
.
.        Cash Received
.
SUBS2400 MOVE      "CASH RECEIVED",SUBHEAD       * Cash Received
         GOTO      SUBS5000
.
.        SUBHEAD contains the description to be printed.
.
SUBS5000 CALL      PSUB0000                      * Print the subheading
.
SUBS9999 RETURN
.
.        ======================================================================
.        Check for Credit note GST
.        ======================================================================
CRGST000 MOVE      ZERO,EXIT
         MATCH     "N",NZFICODE
         GOTO      CRGST900 IF EQUAL    * Credit Note FFS
         MATCH     "P",NZFICODE
         GOTO      CRGST900 IF EQUAL    * Credit Note Patient Co-payment
         MATCH     "R",NZFICODE
         GOTO      CRGST900 IF EQUAL    * Credit Note Co-payment
         MATCH     "U",NZFICODE
         GOTO      CRGST900 IF EQUAL    * Credit Note Funder Co-payment Adj.
         MATCH     "S",NZFICODE
         GOTO      CRGST900 IF EQUAL    * Credit Note Funder Contribution
         MATCH     "O",NZFICODE
         GOTO      CRGST900 IF EQUAL    * Credit Note From Funder Contribution
         MATCH     "Q",NZFICODE
         GOTO      CRGST999 IF NOT EQUAL    * Not Credit Note Misc.
CRGST900 MOVE      ONE,EXIT
CRGST999 RETURN
+
.        ======================================================================
.        WKEY0000: Get the work file key for the current NZPFINA record
.        ======================================================================
.
WKEY0000 MOVE      ZERO,ERRORFLG 
         CMATCH    ANSA,NZFITYPE                  * Fee's Invoiced
         GOTO      WKEY1000 IF EQUAL
.
         CMATCH    ANSB,NZFITYPE                  * Cash Received
         GOTO      WKEY2000 IF EQUAL
.
         CMATCH    ANSC,NZFITYPE                  * Journals
         GOTO      WKEY3000 IF EQUAL
.
         CMATCH    ANSD,NZFITYPE                  * Merch Card Claimed
         GOTO      WKEY4000 IF EQUAL
.
         CMATCH    ANSE,NZFITYPE                  * Merch Card Paid
         GOTO      WKEY5000 IF EQUAL
.
         CMATCH    ANSF,NZFITYPE                  * Merch Card Commission
         GOTO      WKEY6000 IF EQUAL
.
         CMATCH    ANSG,NZFITYPE                  * Merch Card Journals
         GOTO      WKEY7000 IF EQUAL
.        GOTO      WKEY1000 IF EQUAL
.        GOTO      WKEY9999
.
.        Fee's Generated
.
WKEY1000 MOVE      CURSECT,SECTION               * Section 1 or 2
.
         IF        GSTFLAG=1
           MOVE      TEN5,SUBSECT                * for GST
           CALL      CRGST000                    * Credit Note GST?
           IF        EXIT=1
             MOVE      TEN6,SUBSECT              * for Credit note GST
           ENDIF
.
           MOVE      SP20,SUBCODE
           MOVE      ONE,PTFMSUB
           CALL      GLED0000                    * Get the general ledger
           GOTO      WKEY1999
         ENDIF
.
.        Normal
.
         CMATCH    ANSA,NZFICODE                  * FFS
         GOTO      WKEY1100 IF EQUAL
         CMATCH    ANSN,NZFICODE                  * Credit note FFS
         GOTO      WKEY1120 IF EQUAL
.
         CMATCH    ANSB,NZFICODE                  * Fixed fee
         GOTO      WKEY1200 IF EQUAL
         CMATCH    ANSP,NZFICODE                  * Credit note Fixed fee
         GOTO      WKEY1220 IF EQUAL
.
         CMATCH    ANSC,NZFICODE                  * From Funder contribution
         GOTO      WKEY1230 IF EQUAL
         CMATCH    ANSO,NZFICODE                  * Credit note from Funder Cntr
         GOTO      WKEY1232 IF EQUAL
.
         CMATCH    ANSD,NZFICODE                  * Co-Payment
         GOTO      WKEY1240 IF EQUAL
         CMATCH    ANSR,NZFICODE                  * Credit note Co-Payment
         GOTO      WKEY1260 IF EQUAL
.
         CMATCH    ANSG,NZFICODE                  * Funder Co-Payment Adj.
         GOTO      WKEY1280 IF EQUAL
         CMATCH    ANSU,NZFICODE                  * Cr.note Funder Co-Pay.Adj.
         GOTO      WKEY1290 IF EQUAL
.
         CMATCH    ANSF,NZFICODE                  * Funder Contribution
         GOTO      WKEY1300 IF EQUAL
         CMATCH    ANSS,NZFICODE                  * Credit note Funder Contr.
         GOTO      WKEY1320 IF EQUAL
.
         CMATCH    ANSM,NZFICODE                  * Misc Items
         GOTO      WKEY1800 IF EQUAL
         CMATCH    ANSQ,NZFICODE                  * Credit note misc item
         GOTO      WKEY1820 IF EQUAL
         MOVE      ONE,ERRORFLG
         GOTO      WKEY1999
.
.        FFS subsection
.
WKEY1100 MOVE      ONE,SUBSECT                  * Subsection 1
         GOTO      WKEY1140
.
.        Credit Note FFS
.
WKEY1120 MOVE      EIGHT,SUBSECT                 * Subsection 8
.
.        If the current record is an outpatient record, then this means
.        that we are using the clinic id as the code. Otherwise, use
.        whatever the code from the fees invoiced file is as the sub-code
.
WKEY1140 MATCH     "2",NZFISYST
         IF        @EQUAL
           UNPACK    NZFICODE,ANS,OCACLIN
           PACK      SUBCODE,ANSO,OCACLIN,OSTFILE,SP20
         ELSE
           PACK      SUBCODE,NZFICODE,SP20        * Subsection code
         ENDIF
         GOTO      WKEY1999
.
.        Patient Co-payment
.
WKEY1200 MOVE      TWO,SUBSECT                   * Subsection 2
         GOTO      WKEY1700
.
WKEY1220 MOVE      NINE,SUBSECT                  * Subsection 9
         GOTO      WKEY1700
.
WKEY1230 MOVE      THREE,SUBSECT                 * Subsection 3
         GOTO      WKEY1700
.
WKEY1232 MOVE      TEN,SUBSECT                   * Subsection 10
         GOTO      WKEY1700
.
WKEY1240 MOVE      FOUR,SUBSECT                  * Subsection 4
         GOTO      WKEY1700
.
WKEY1260 MOVE      TEN1,SUBSECT                  * Subsection 11
         GOTO      WKEY1700
.
WKEY1280 MOVE      FIVE,SUBSECT                  * Subsection 5
         GOTO      WKEY1700
.
WKEY1290 MOVE      TEN2,SUBSECT                  * Subsection 12
         GOTO      WKEY1700
.
WKEY1300 MOVE      SIX,SUBSECT                  * Subsection 6
         GOTO      WKEY1700
.
WKEY1320 MOVE      TEN3,SUBSECT                  * Subsection 13
         GOTO      WKEY1700
.
WKEY1700 PACK      SUBCODE,NZFICODE,SP20         * Subsection code
         GOTO      WKEY1999
.
.        Misc Items
.
WKEY1800 MOVE      SEVEN,SUBSECT                   * Subsection 7
         UNPACK    NZFICODE,ANS,DIM3A
         IF        PTCNMFEE=1
           UNPACK    NZFICODE,ANS,DIM3,DIM3A
         ENDIF
         MATCH     SP70,PTCNROUN
         GOTO      WKEY1840 IF EQUAL
.
         MATCH     PTCNROUN,DIM3A
         IF        @EQUAL
           MOVE      "20",SUBSECT                 * Rounding
         ENDIF
         GOTO      WKEY1840
.
WKEY1820 MOVE      TEN4,SUBSECT                   * Subsection 14
         UNPACK    NZFICODE,ANS,DIM3A
         IF        PTCNMFEE=1
           UNPACK    NZFICODE,ANS,DIM3,DIM3A
         ENDIF
         MATCH     SP70,PTCNROUN
         GOTO      WKEY1840 IF EQUAL
.
         MATCH     PTCNROUN,DIM3A
         IF        @EQUAL
           MOVE      "21",SUBSECT                 * Credit note Rounding
         ENDIF
.
WKEY1840 UNPACK    NZFICODE,ANS,DIM3,DIM9
         PACK      SUBCODE,NZFICODE,SP20          * Subsection code
         IF        PTCNMFEE<>1
           MATCH     SP70,DIM3
           IF        !@EQUAL
             PACK      SUBCODE,ANS,DIM3,SP20      * Subsection code
           ENDIF
         ENDIF
.
WKEY1999 IF        GSTFLAG=1
           MOVE      TEN5,SUBSECT                * for GST
           CALL      CRGST000                    * Credit Note GST?
           IF        EXIT=1
             MOVE      TEN6,SUBSECT              * for Credit note GST
           ENDIF
           MOVE      ONE,PTFMSUB
           CALL      GLED0000                    * Get the general ledger
         ENDIF
         GOTO      WKEY9999
.
.        Cash received
.
WKEY2000 MOVE      CURSECT,SECTION               * Section 1 or 2
         MOVE      TEN7,SUBSECT                  * Subsection 17
         IF        CURSECT=2
           MOVE      EIGHT,SUBSECT               * Subsection 8
         ENDIF
         PACK      SUBCODE,NZFICODE,SP20         * Subsection code
         GOTO      WKEY9999
.
.        Journals
.
WKEY3000 MOVE      CURSECT,SECTION               * Section 1 or 2
.
         IF        GSTFLAG=1 
           MOVE      TEN9,SUBSECT
           MOVE      SP20,SUBCODE
           MOVE      FIVE,PTFMSUB
           PACK      SUBCODE,NZFICODE,SP70       * Subsection code
           CALL      GLED0000                    * Get the general ledger
           GOTO      WKEY9999
         ENDIF
.
         MOVE      TEN8,SUBSECT                   * Subsection 18
         UNPACK    NZFICODE,DIM13
         IF        PTCNJFEE=1
           UNPACK    DIM13,DIM3,DIM10
           PACK      SUBCODE,DIM3,DIM10,SP20     * Subsection code
.                            Claim Code, Journal Code
         ELSE
           PACK      SUBCODE,DIM13,SP20          * Subsection code
.                            Journal Code
         ENDIF
         GOTO      WKEY9999
.
.        Merchant card claimed
.
WKEY4000 MOVE      THREE,SECTION                 * Section 3
         MOVE      ONE,SUBSECT                   * Subsection 1
         PACK      SUBCODE,NZFICODE,SP20          * Subsection code
         GOTO      WKEY9999
.
.        Merchant card journals
.
WKEY5000 MOVE      THREE,SECTION                 * Section 3
         MOVE      TWO,SUBSECT                   * Subsection 2
         PACK      SUBCODE,NZFICODE,SP20          * Subsection code
         GOTO      WKEY9999
.
.        Merchant card commissions
.
WKEY6000 MOVE      THREE,SECTION                 * Section 3
         MOVE      THREE,SUBSECT                 * Subsection 3
         PACK      SUBCODE,NZFICODE,SP20          * Subsection code
         GOTO      WKEY9999
.
.        Merchant card journals
.
WKEY7000 MOVE      THREE,SECTION                 * Section 3
         MOVE      FOUR,SUBSECT                  * Subsection 4
         PACK      SUBCODE,NZFICODE,SP20          * Subsection code
.
WKEY9999 RETURN
+
.        ======================================================================
.        GLED0000: Get the General Ledger
.        ======================================================================
GLED0000 COMPARE   ONE,CGLIND
         GOTO      GLED9999 IF NOT EQUAL
.
         UNPACK    SP70,ANS,KEY12
         UNPACK    NZFICODE,ANS,KEY12
         REP       "NAHCJDQMPT",ANS
         PACK      KEY17,PTFMHOSP,PTFMSUB,ANS,KEY12
         PACK      KEY18,PTFMHOSP,NZFISYST,PTFMSUB,ANS,KEY12
         CALL      RDSYFMS
         IF        OVRCD=1
           PACK      KEY17,PTFMHOSP,PTFMSUB,SP20        * use default
	   PACK      KEY18,PTFMHOSP,NZFISYST,PTFMSUB,SP20
           CALL      RDSYFMS
           BRANCH    OVRCD,GLED9999
         ENDIF
         PACK      SUBCODE,PTFMILD             * ledger
GLED9999 RETURN
+
.        ======================================================================
.        GETD0000: Get the description for the current NZPFINA record
.        ======================================================================
.
GETD0000 MOVE      SP30,SUBDESC1                 * Initialise Description
         MOVE      SP30,SUBDESC2                 * Initialise Description
         MOVE      SP20,SUBDCOD                  * Initialise Printed Code
         MOVE      ZERO,SUBUS2DS                 * Initialise 2nd desc flag
.
.        Check to see if this is a totals record
.
         MATCH     SUBCODE,Z20                    * Totals record ?
         GOTO      GETD0500 IF NOT EQUAL         * No.
.
.        Totals record. The description will be TOTAL, unless this
.        is the accommodation totals record
.
         MOVE      "TOTAL",SUBDESC1              * Totals description
.
.        Only sections 1 & 2 may have accommodation
.
         BRANCH    SECTION,GETD0100,GETD0120,GETD9999
         GOTO      GETD9999
.
.        Subsection 1 is the accommodation
.
GETD0100 BRANCH    SUBSECT,GETD0210,GETD0220,GETD0222,GETD0224,GETD0225:
                           GETD0230,GETD0240,GETD9999,GETD9999,GETD9999:
                           GETD9999,GETD9999,GETD9999,GETD0242,GETD0250:
                           GETD0270,GETD9999,GETD9999,GETD0260,GETD0272:
                           GETD0274
         GOTO      GETD9999
.
GETD0120 BRANCH    SUBSECT,GETD0210,GETD0220,GETD0222,GETD0224,GETD0225:
                           GETD0230,GETD0240
         GOTO      GETD9999
.
.        total description
.
GETD0210 MOVE      "TOTAL FEES FOR SERVICE",SUBDESC1 * Fees for service 
         GOTO      GETD9999
.
GETD0220 MOVE      "TOTAL PATIENT FIXED FEE",SUBDESC1 * Fixed Fee
         GOTO      GETD9999
.
GETD0222 MOVE      "TOTAL FROM FUNDER CONTR.",SUBDESC1 * Fees for service 
         GOTO      GETD9999
.
GETD0224 MOVE      "TOTAL CO-PAYMENT",SUBDESC1      * Co-Payment
         GOTO      GETD9999
.
GETD0225 MOVE      "TOTAL FUNDER CO-PAY.ADJ.",SUBDESC1  * Funder Co-Payment Adj.
         GOTO      GETD9999
.
GETD0230 MOVE      "TOTAL FUNDER CONTR.",SUBDESC1      * Funder Contribution
         GOTO      GETD9999
.
GETD0240 MOVE      "TOTAL ITEMS",SUBDESC1 
         GOTO      GETD9999
.
GETD0242 MOVE      "TOTAL CREDIT NOTES",SUBDESC1 
         GOTO      GETD9999
.
GETD0250 MOVE      "TOTAL GST",SUBDESC1 
         GOTO      GETD9999
.
GETD0260 MOVE      "TOTAL GST JOURNAL",SUBDESC1
         GOTO      GETD9999
.
GETD0270 MOVE      "TOTAL CREDIT NOTES GST ",SUBDESC1
         GOTO      GETD9999
.
GETD0272 MOVE      "TOTAL ROUNDING",SUBDESC1
         GOTO      GETD9999
.
GETD0274 MOVE      "TOTAL CREDIT NOTES ROUNDING",SUBDESC1
         GOTO      GETD9999
.
.        We do different things depending on the currect section
.
GETD0500 BRANCH    SECTION,GETD1000,GETD1040,GETD3000
.
.        Section 1 & 2, Fee's Invoiced, & To Be Invoiced
.
GETD1000 BRANCH    SUBSECT,GETD1100,GETD1100,GETD1100,GETD1100,GETD1100:
                           GETD1100,GETD1300,GETD1100,GETD1100,GETD1100:
                           GETD1100,GETD1100,GETD1100,GETD1300,GETD1100:
                           GETD1100,GETD1500,GETD1600,GETD1700,GETD1800:
                           GETD1800
         GOTO      GETD1100
.
GETD1040 BRANCH    SUBSECT,GETD1100,GETD1100,GETD1100,GETD1100,GETD1100:
                           GETD1100,GETD1300,GETD1500
.
.        Accommodation (includes Pat Co-payment, Funder Contr, O/P clinics)
.
GETD1100 RESET     SUBCODE 
         UNPACK    SUBCODE,ANS,DIM3,DIM3A        * Seperate out the codes
.
         CMATCH    ANSA,ANS                      * Normal Accommodation
         GOTO      GETD1110 IF EQUAL
.
         CMATCH    ANSB,ANS                      * Fixed fee
         GOTO      GETD1160 IF EQUAL
.
         CMATCH    ANSC,ANS                      * From funder contribution
         GOTO      GETD1160 IF EQUAL
.
         CMATCH    ANSD,ANS                      * Co-Payment
         GOTO      GETD1160 IF EQUAL
.
         CMATCH    ANSG,ANS                      * Funder Co-Payment Adj.
         GOTO      GETD1160 IF EQUAL
.
         CMATCH    ANSF,ANS                      * Funder Contribution
         GOTO      GETD1160 IF EQUAL
.
         CMATCH    ANSO,ANS                      * Outpatient clinic
         GOTO      GETD1170 IF EQUAL
.
.        The following prefix(s) are for credit note
.
         CMATCH    ANSN,ANS
         GOTO      GETD1110 IF EQUAL             * Credit note FFS
.
         CMATCH    ANSP,ANS                      * Patient Co-payment
         GOTO      GETD1160 IF EQUAL
.
         CMATCH    ANSO,ANS                      * From Funder Contribution
         GOTO      GETD1160 IF EQUAL
.
         CMATCH    ANSR,ANS                      * Co-Payment
         GOTO      GETD1160 IF EQUAL
.
         CMATCH    ANSU,ANS                      * Funder Co-payment Adj.
         GOTO      GETD1160 IF EQUAL
.
         CMATCH    ANSS,ANS                      * Funder Contribution
         GOTO      GETD1160 IF EQUAL
.
.        Should never get here, but just in case ...
.
         MOVE      "UNKNOWN CODE",SUBDESC1
.
         IF        GSTFLAG=1 & SUBSECT=4
           GOTO      GETD1300                     * Check with Misc.
         ENDIF
         GOTO      GETD1399
.
.        Normal Accommodation record. Check to see if it is by admission type
.        or by ward/claim code (Use CACCFEE)
.
GETD1110 BRANCH    CACCFEE,GETD1120,GETD1125,GETD1130,GETD1133: * Wrd/Claim/Adm?
                           GETD1135
.
.        Accommodation by admission type
.
         MOVE      SP20,TDESC
         PACK      KEY5,CODEA,DIM3              * Key for admission type
         CALL      RDCODE1                      * Read in the codes record
.
         PACK      SUBDESC1,ACCOMTL,TDESC       * Get the description
         GOTO      GETD1399
.
.        Accommodation by ward/claim
.
GETD1120 PACK      SUBDESC1,ACCOMTL,ACCTL1,DIM3,ACCTL2,DIM3A
         GOTO      GETD1399
.
.        Accommodation by ward/Adm.type
.
GETD1125 MOVE      SP20,WBDESC                   * initialise ward description
         MOVE      DIM3,WWARD                    * initialise ward code
         PACK      KEY6,WWARD,SP3                * key for ward record
         CALL      RDWARD1                       * get the ward description
         MOVE      WBDESC,DWARD                  * shorten ward description
.
         PACK      SUBDESC1,ACCTL1,WWARD,SP1,ACCTL4,DIM3A
         GOTO      GETD1399
.
.        Accommodation by ward/claim/admission type
.
GETD1130 UNPACK    SUBCODE,ANS,WWARD,DIM3,DIM3A        * Seperate out the codes
         PACK      SUBDESC1,ACCOMTL,ACCTL1,WWARD,SP1,ACCTL4,DIM3,SLASH,DIM3A
         GOTO      GETD1399
.
.        Accomodation by  Ward/admission type/Claim type
.
GETD1133 UNPACK    SUBCODE,ANS,DIM3A,DIM3B,DIM3C
         PACK      SUBDESC1,ACCOMTL,ACCTL1,DIM3A,SP1,DIM3B,SP1,DIM3C
         GOTO      GETD1399
.
.        Accommodation by Claim type
.
GETD1135 MOVE      SP20,TDESC
         PACK      KEY5,CODECL,DIM3             * Key for Claim type
         CALL      RDCODE1                      * Read in the codes record
.
         PACK      SUBDESC1,ACCOMTL,TDESC       * Get the description
         GOTO      GETD1399
.
.        Patient Co-payment/Funder Contribution
.
GETD1160 UNPACK    SUBCODE,ANS,DIM6,DIM9        * Seperate out the codes
         PACK      PTCADES1,DIM9,SP70
         MOVE      DIM9,KEY9
         CALL      RDPTCMC1
.
         MOVE      SP30,SUBDESC1
         CLEAR     SUBDESC1
         APPEND    DIM6,SUBDESC1
         APPEND    " - ",SUBDESC1
         APPEND    DIM9,SUBDESC1
         APPEND    SP1,SUBDESC1
         APPEND    PTCADES1,SUBDESC1
         RESET     SUBDESC1
         GOTO      GETD1399
.
.        Clinic id
.
GETD1170 UNPACK    SUBCODE,ANS,DIM6,DIM3         * get parts of key
.
         PACK      CFNAME,DIM3,FILCLIA1          * file name for clinic file
         MOVE      ZERO,OVRCD                    * assume file exists
         TRAP      OVERCOND IF IO                * trap for open errors
         OPEN      OUTCLIA1,CFNAME               * open clinic id file
         TRAPCLR   IO                            * clear IO trap
         BRANCH    OVRCD,GETD1175
.
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          PACK      KEY20,NZFISITE,DIM6,KEY8
          CALL      RDCLIA1
          IF        OVRCD = 1
            CALL      RDPCLIA1
            IF        OVRCD = 0
              MATCH     NZFISITE,OCASITE
              IF        !@EQUAL
                MOVE      ONE,OVRCD
              ELSE
                MATCH     DIM6,OCACLIN
                IF        !@EQUAL
                  MOVE      ONE,OVRCD
                ENDIF
              ENDIF
            ENDIF
          ENDIF
         CLOSE     OUTCLIA1
         BRANCH    OVRCD,GETD1175                * no details
.
.        Set up default description
.
         PACK      SUBDESC1,ACCTL5,OCACLIN,SP1,OCADESC
.
.        If the name is not based on a doctor code, we have finished
.
         MATCH     SP6,OCADOCT                   * do we have a doctor code ?
         GOTO      GETD1399 IF EQUAL             * no, use clinic desc.
.
.        Get the doctors name
.
         OPEN      PATDO1A1,"patdo1af"                      * open doctors file
         MOVE      OCADOCT,KEY6
         CALL      RDDOCT1                       * get doctor record
         CLOSE     PATDO1A1
         BRANCH    OVRCD,GETD1399                * no doctor -> blank desc.
.
         MOVE      TWO,PACFRMT                   * format as surname,given name
         MOVE      DSNAME,PACSNAME
         MOVE      DGNAME,PACGNAME
         MOVE      DTITL,PACTITLE
         CALL      PACNAME
         PACK      SUBDESC1,ACCTL5,OCACLIN,SP1,PACFNAME
         GOTO      GETD1399
.
.        Missing file or missing code
.
GETD1175 MOVE      "UNKNOWN CLINIC CODE",OCADESC
         PACK      SUBDESC1,ACCTL5,DIM6,SP1,OCADESC
         GOTO      GETD1399
.
.        Miscellenaous Items (Includes theatre)
.
GETD1300 UNPACK    SUBCODE,ANS,DIM3,DIM9          * Unpack the subsection code
.
         COMPARE   ONE,PTCNMFEE                   * Miscell. items by claim code
         GOTO      GETD1350 IF EQUAL              * Yes
.
         MATCH     SP3,DIM3                      * Are we grouping misc codes ?
         GOTO      GETD1320 IF EQUAL             * No.
.
.        We have a grouping code. Get the description from the codes file
.
         PACK      SUBDESC1,UNKMGRP,DIM3         * Default description
.
         PACK      KEY5,CODEFI,DIM3              * Get the group code desc.
         CALL      RDCODE1
         BRANCH    OVRCD,GETD1310                * Code not found
         MOVE      TDESC,SUBDESC1                * Save the description
.
.        Pack up the printed code
.
GETD1310 PACK      SUBDCOD,OPNBRA,DIM3,CLSBRA
         GOTO      GETD1399
.
.        Pack up the printed code
.
GETD1320 PACK      SUBDCOD,OPNBRA,DIM9,CLSBRA
.
         PACK      SUBDESC1,UNKMISC,DIM9         * Default description
.
.        Code is numeric - check that it is a valid MBS item number
.
         PACK      KEY9,DIM9                     * Key for item file
         PACK      KEY17,KEY9,SP70
         CALL      PATITMRD                      * Read the item file
         BRANCH    OVRCD,GETD1330                * Check for valid misc charge
         MOVE      IDESC,SUBDESC1                * Save the description
         GOTO      GETD1399
.
.        Get the description from the Misc charges file
.
GETD1330 IF        IBCNMHOS=1
           MOVE      PTHSDCLM,PTCNDCLM
         ENDIF
         MOVE      PTCNDCLM,NZMCCLMC             * Claim code 0
         PACK      KEY29,SP3,NZMCCLMC,SP14,DIM9   * Claim code 0 & blank H.F.
         PACK      KEY37,KEY29,CURRDATE
         CALL      RDNZMCH1                      * Read this record
         COMPARE   ZERO,OVRCD
         GOTO      GETD1335 IF EQUAL
.
         CALL      RPNZMCH1         
         BRANCH    OVRCD,GETD1399                * No record, use default desc.
.
         PACK      KEY29A,NZMCHOSP,NZMCCLMC,NZMCCNTR,NZMCFTAB,NZMCMCHG,SP70
         MATCH     KEY29,KEY29A
         GOTO      GETD1399 IF NOT EQUAL
.
GETD1335 MOVE      NZMCDESC,SUBDESC1             * Save the description
         GOTO      GETD1399
.
.        Get miscell charges claim code
.
GETD1350 MOVE      ONE,SUBUS2DS                  * Using 2nd description
         UNPACK    SUBCODE,ANS,DIM3,DIM9         * Unpack the subsection code
.
         PACK      SUBDESC1,UNKCLCOD,SP1,OPNBRA,DIM3,CLSBRA  * Default desc.
.
         PACK      KEY5,CODECL,DIM3
         CALL      RDCODE1
         IF        OVRCD<>1
           PACK      SUBDESC1,TDESC,SP1,OPNBRA,DIM3,CLSBRA
         ENDIF
.
         UNPACK    DIM9,DIM3,DIM5
         COMPARE   ONE,PTCNMFEE                  * Are we grouping misc codes ?
         GOTO      GETD1354 IF NOT EQUAL
.
         PACK      SUBDESC2,UNKMGRP,SP1,OPNBRA,DIM3,CLSBRA * Default desc.
.
         MATCH     SP70,DIM3
         IF        !@EQUAL
           PACK      KEY5,CODEFI,DIM3            * Get the group code desc.
           CALL      RDCODE1
           IF        OVRCD=0
             PACK      SUBDESC2,TDESC,SP1,OPNBRA,DIM3,CLSBRA
           ENDIF
         ELSE
           MATCH     SP70,DIM5
           IF        !@EQUAL
             PACK      KEY9,DIM5,SP70
             PACK      KEY17,KEY9,SP70
             CALL      PATITMRD
             IF        OVRCD=0
               PACK      SUBDESC2,IDESC,SP1,OPNBRA,DIM5,CLSBRA
             ENDIF
           ELSE
             GOTO      GETD1354
           ENDIF
         ENDIF
.
         GOTO      GETD1399
.
GETD1354 PACK      SUBDESC2,UNKMISC,SP1,DIM9 * Default desc.
.
         PACK      KEY9,DIM9                   * Key for item file
         PACK      KEY17,KEY9,SP70
         CALL      PATITMRD                    * Read the item file
         BRANCH    OVRCD,GETD1355
.
         MOVE      IDESC,DIM30
         CALL      FTDS0000                  * Format description
         PACK      SUBDESC2,DIM30
.
         GOTO      GETD1399
.
GETD1355 IF        IBCNMHOS=1
           MOVE      PTHSDCLM,PTCNDCLM
         ENDIF
         MOVE      PTCNDCLM,NZMCCLMC              * Claim code 0
         PACK      KEY29,SP3,NZMCCLMC,SP14,DIM9   * Claim code 0 & blank H.F.
         PACK      KEY37,KEY29,CURRDATE
         CALL      RDNZMCH1                  * Read this record
         COMPARE   ZERO,OVRCD
         GOTO      GETD1366 IF EQUAL
.
         CALL      RPNZMCH1
         BRANCH    OVRCD,GETD1399
.        
         PACK      KEY29A,NZMCHOSP,NZMCCLMC,NZMCCNTR,NZMCFTAB,NZMCMCHG,SP70
         MATCH     KEY29,KEY29A
         GOTO      GETD1399 IF NOT EQUAL
.
GETD1366 MOVE      NZMCDESC,DIM30
         CALL      FTDS0000                * Format description
         MATCH     SP4,DIM4
         IF        @EQUAL
           PACK      SUBDESC2,DIM30
         ELSE
           PACK      SUBDESC2,DIM4,DIM30
         ENDIF
.
         GOTO      GETD1399
.
GETD1399 COMPARE   TEN5,SUBSECT                  * GST ?
         GOTO      GETD1400 IF EQUAL
         COMPARE   TEN6,SUBSECT
         GOTO      GETD9999 IF NOT EQUAL
.
.        GST
.
GETD1400 COMPARE   ONE,CGLIND
         GOTO      GETD9999 IF NOT EQUAL         * No G/L interface
.
         PACK      SUBDESC1,SUBCODE,SP70         * Set to ledger 
         COMPARE   ONE,PTCNUFMS
         GOTO      GETD9999 IF NOT EQUAL         * not using fms file
.
         PACK      KEY2,SUBCODE
         OPEN      FMSLMAA1,"fmslmaaf"
         CALL      RDFMLA1
         CLOSE     FMSLMAA1
         IF        OVRCD=0
           MOVE      "-",ANS
           PACK      SUBDESC1,SUBCODE,ANS,FMLADESC   * Ledger description
         ENDIF
         GOTO      GETD9999
.
.        Cash received. Find out what type of receipt it is.
.
GETD1500 MOVE      SP30,SUBDESC1                 * Initialise description
         MOVE      SP30,SUBDCOD                  * Initialise printed code
.
         CMATCH    ANSA,SUBCODE                  * Patient Cash
         GOTO      GETD1510 IF EQUAL
.
         CMATCH    ANSB,SUBCODE                  * Health Fund cash
         GOTO      GETD1520 IF EQUAL
.
         CMATCH    ANSC,SUBCODE                  * Government subsidy cash
         GOTO      GETD1530 IF EQUAL
.
         CMATCH    ANSD,SUBCODE                  * Deposits received
         GOTO      GETD1540 IF EQUAL
.
         CMATCH    ANSI,SUBCODE                  * Insurance company cash
         GOTO      GETD1550 IF EQUAL
.
         CMATCH    ANSM,SUBCODE                  * Merchant card cash
         GOTO      GETD1560 IF EQUAL
.
         GOTO      GETD9999
.
.        Patient cash
.
GETD1510 MOVE      "PATIENT",SUBDESC1
         GOTO      GETD9999
.
.        Health Fund cash
.
GETD1520 UNPACK    SUBCODE,ANS,KEY6              * Extract the health fund code
         MATCH     SP6,KEY6                      * blank code ?
         GOTO      GETD1525 IF EQUAL
.
.        Set up the default health fund cash description
.
         CLEAR     HFNAME
         APPEND    "UNKNOWN H.F. CODE ",HFNAME
         APPEND    KEY6,HFNAME
         RESET     HFNAME
.
         PACK      KEY14,KEY6,FOUR0,SP10
.
         CALL      RDFUND1                       * Read in the health fund
         MOVE      HFNAME,SUBDESC1               * Save the description
         GOTO      GETD9999
.
GETD1525 MOVE      "HEALTH FUND",SUBDESC1
         GOTO      GETD9999
.
.        Government Subsidy cash
.
GETD1530 MOVE      "GOVERNMENT SUBSIDY",SUBDESC1
         GOTO      GETD9999
.
.        Deposit received
.
GETD1540 UNPACK    SUBCODE,ANS,DIM3,DIM4         * Extract the deposit code
.
.        Set up the default deposit description
.
         CLEAR     TDESC
         APPEND    "UNK DEPOSIT CODE ",TDESC
         APPEND    DIM3,TDESC
         RESET     TDESC
.
         PACK      KEY5 WITH CODEDP,DIM3         * Pack up key for deposit code
         CALL      RDCODE1                       * Read in codes file record
         MOVE      TDESC,SUBDESC1                * Save the description
         GOTO      GETD9999
.
.        Insurance company cash
.
GETD1550 UNPACK    SUBCODE,ANS,KEY6              * Extract the Ins Company code
.
.        Set up the default insurance cash description
.
         CLEAR     INAME
         APPEND    "UNKNOWN INSURANCE CODE ",INAME
         APPEND    KEY6,INAME
         RESET     INAME
.
         OPEN      PATIN1A1,"patin1af"            * Open the insurance file
         CALL      RDINSR1                       * Read in the insurance record
         CLOSE     PATIN1A1                      * Close the insurance file
         MOVE      INAME,SUBDESC1                * Save the description
         GOTO      GETD9999
.
.        Merchant card cash receipt
.
GETD1560 UNPACK    SUBCODE,ANS,DIM3,DIM4         * Extract the merchant code
.
         CALL      MRCH0000                      * Get the merchant card desc.
         MOVE      TDESC,SUBDESC1                * Save the description
         GOTO      GETD9999
.
.        Journals
.
GETD1600 MATCH     GSTCODE,SUBCODE               * GST code ?
         GOTO      GETD1660 IF EQUAL             * yes, special description
.
         COMPARE   ONE,PTCNJFEE                  * Journals by claim code ?
         GOTO      GETD1650 IF EQUAL             * Yes
.
         UNPACK    SUBCODE,DIM2,DIM3,DIM4        * Extract the journal code
.
.        If DIM3 if non-blank, then this is a Merchant Card
.
         MATCH     SP3,DIM3                      * Merchant code ?
         GOTO      GETD1610 IF EQUAL             * No.
.
         MATCH     "WJ",DIM2                     * Merchant card journal ?
         GOTO      GETD1620 IF EQUAL             * Yes.
.
         MATCH     "WC",DIM2                     * Merchant card commission ?
         GOTO      GETD1630 IF EQUAL             * Yes.
.
.        Normal journal
.
GETD1610 MOVE      "UNKNOWN JOURNAL TYPE",TDESC  * Default description
.
         PACK      KEY5,CODEJ,DIM2,SP1           * Key for journal code
         CALL      RDCODE1                       * Read in codes file record
         MOVE      TDESC,SUBDESC1                * Save the description
.
         PACK      SUBDCOD,OPNBRA,DIM2,CLSBRA    * Pack up printed code
         GOTO      GETD9999
.
.        Merchant card journal
.
GETD1620 MOVE      " - JOURNAL   ",DIM13
         GOTO      GETD1640
.
.        Merchant card commission
.
GETD1630 MOVE      " - COMMISSION",DIM13
.
.        Get the merchant card description
.
GETD1640 CALL      MRCH0000                      * Get the merchant card desc.
         MOVE      TDESC,DIM19                   * Shorten description
         PACK      SUBDESC1,DIM19,DIM13          * Pack up subsection desc.
         GOTO      GETD9999
.
.        Get journal claim code description
.
GETD1650 MOVE      ONE,SUBUS2DS                  * Using 2nd description
         UNPACK    SUBCODE,DIM3,DIM2,DIM8
         PACK      SUBDESC1,UNKCLCOD,SP1,OPNBRA,DIM3,CLSBRA     * Default desc.
.
         MATCH     SP3,DIM3
         GOTO      GETD1655 IF EQUAL             * No claim code set up
.
         PACK      KEY5,CODECL,DIM3              * Key for journal code
         CALL      RDCODE1                       * Read in codes file record
         IF        OVRCD<>1
           PACK      SUBDESC1,TDESC,SP1,OPNBRA,DIM3,CLSBRA
         ENDIF
.
GETD1655 PACK      SUBDESC2,UNKJOUR,SP1,OPNBRA,DIM2,SP1,CLSBRA  * Default desc.
.
         MATCH     SP2,DIM2
         GOTO      GETD9999 IF EQUAL             * No journal code set up
.
         PACK      KEY5,CODEJ,DIM2,SP1           * Key for journal code
         CALL      RDCODE1                       * Read in codes file record
         IF        OVRCD<>1
           PACK      SUBDESC2,TDESC,SP1,OPNBRA,DIM2,SP1,CLSBRA
         ENDIF
.
         GOTO      GETD9999
.
GETD1660 MOVE      "GST DISCOUNT ADJUSTMENT",SUBDESC1
         GOTO      GETD9999
.
.        GST Journal
.
GETD1700 MOVE      SP30,SUBDESC1                 * Initialise description
         MOVE      SP30,SUBDCOD                  * Initialise printed code
         COMPARE   ONE,CGLIND
         GOTO      GETD1600 IF NOT EQUAL         * No G/L interface
.
         PACK      SUBDESC1,SUBCODE,SP70         * Set to ledger 
         COMPARE   ONE,PTCNUFMS
         GOTO      GETD9999 IF NOT EQUAL         * not using fms file
.
         PACK      KEY2,SUBCODE
         OPEN      FMSLMAA1,"fmslmaaf"
         CALL      RDFMLA1
         CLOSE     FMSLMAA1
         IF        OVRCD=0
           MOVE      "-",ANS
           PACK      SUBDESC1,SUBCODE,ANS,FMLADESC   * Ledger description
         ENDIF
         GOTO      GETD9999
.
GETD1800 IF        PTCNMFEE=1
           UNPACK    SUBCODE,ANS,DIM3,DIM3A    * Seperate out the codes
         ELSE
           UNPACK    SUBCODE,ANS,DIM3A         * Seperate out the codes
         ENDIF
.
         PACK      KEY5,CODEFI,DIM3A           * Get the group code desc.
         CALL      RDCODE1
         BRANCH    OVRCD,GETD9999
.
         IF        SUBSECT=20
           MOVE      "CREDIT NOTES ",KEY13
           PACK      SUBDESC1,KEY13,TDESC,SP1,OPNBRA,DIM3A,CLSBRA
         ELSE
           PACK      SUBDESC1,TDESC,SP1,OPNBRA,DIM3A,CLSBRA
         ENDIF
         GOTO      GETD9999
.
.        Section 3, Merchant Cards
.
GETD3000 BRANCH    SUBSECT,GETD3100,GETD3200,GETD3300,GETD3400
.
.        Claimed
.
GETD3100 MOVE      "CLAIMED    - ",DIM13
         GOTO      GETD3800
.
.        Cash Received
.
GETD3200 MOVE      "RECEIVED   - ",DIM13
         GOTO      GETD3800
.
.        Commission
.
GETD3300 MOVE      "COMMISSION - ",DIM13
         GOTO      GETD3800
.
.        Journals
.
GETD3400 MOVE      "JOURNALS   - ",DIM13
.
.        Get the description for the merchant card, and append to the header
.
GETD3800 MOVE      SUBCODE,DIM3                  * Extract merchant code
         CALL      MRCH0000                      * Get the description
         PACK      SUBDESC1,DIM13,TDESC          * Save the subsection desc
.
GETD9999 RETURN
.
.        ======================================================================
.        FTDS0000: Format the miscell charges description
.        ======================================================================
.
FTDS0000 ENDSET    DIM30
FTDS1000 CMATCH    SP1,DIM30
         GOTO      FTDS2000 IF NOT EQUAL
.
         BUMP      DIM30,-1
         GOTO      FTDS1000 IF NOT EOS
.
         CLEAR     DIM30
         GOTO      FTDS3000
.
FTDS2000 APPEND    SP1,DIM30
FTDS3000 APPEND    DIM9,DIM30                    * Move item to description
         RESET     DIM30
FTDS9999 RETURN
.
.        ======================================================================
.        MRCH0000: Get the merchant card description
.        ======================================================================
.
MRCH0000 CLEAR     TDESC
         APPEND    "UNK MERCH CODE ",TDESC
         APPEND    DIM3,TDESC
         RESET     TDESC
.
         PACK      KEY5 WITH MCCODE,DIM3         * Pack up the merch. code key
         CALL      RDCODE1                       * Read the codes file record
MRCH9999 RETURN
+
.        ======================================================================
.        CTBI0000: Subroutine to loop over all admissions and calculate
.        the grand total of all invoices still to be issued. This data will be
.        put into the temporary file openned up on NZPFINA 
.        ======================================================================
.
CTBI0000 MOVE       ZERO,DISPROG                 * Flag required by CALCTBI
.
         DISPLAY    *P1:24,*EL:
                    "Calculating Total Amount Still to be Invoiced.":
                    *P48:24,*EL,"Billing No :";
.
.        Loop over Admissions with invoices pending
.
         MOVE       SP8,KEY8                     * Loop over all pending No.'s
         CALL       RDSIPEN1
CTBI1000 CALL       RDKIPEN1                     * Get next invoice pending adm
         BRANCH     OVRCD,CTBI9999               * Nothing left to process
.
         DISPLAY    *P61:24,*EL,*V2LON,IPADMNO;  * Display number on screen
         MOVE       ZERO,CASHFLAG                * Flag required by CALCTBI
.
.        Check for a valid system
.
         COMPARE   FSTSYS,IPSYSTM
         GOTO      CTBI1000 IF LESS
.
         COMPARE   IPSYSTM,FEDSYS
         GOTO      CTBI1000 IF LESS
.
.        Check for a valid site
.
         MATCH     FSTSITE,IPSITE
         GOTO      CTBI1000 IF LESS
.
         MATCH     IPSITE,FEDSITE
         GOTO      CTBI1000 IF LESS
.
         IF        HOSPFLAG=1
           PACK      KEY8,IPADMNO,SP8
           CALL      RDPMVX11
           BRANCH    OVRCD,CTBI1000
           MATCH     PMVXMHOS,HOSPID
           GOTO      CTBI1000 IF NOT EQUAL
         ENDIF
.
.        Calculate the amount to be invoiced - different for each system
.
         BRANCH     IPSYSTM,CTBI4000,CTBI3000,CTBI2000,CTBI3000,CTBI1000
.
.        Inpatient to be invoiced
.
CTBI2000 MOVE       IPADMNO,KEY8
         CALL       RDMISS1                      * Read in the admision record
         BRANCH     OVRCD,CTBI9200
.
         MOVE       IPADMNO,KEY8
         CALL       RDVISA1                      * Read in the visit record
         BRANCH     OVRCD,CTBI9200
.
         MOVE       AURNO,KEY8
         CALL       RDMAST1                      * Read in the PMI record
         BRANCH     OVRCD,CTBI9100
.
         MOVE       SP8,DDATE                    * Required by CALCTBI
.
.        Check to see if the patient is discharged yet
.
         MOVE       ONE,DISFLG                   * Assume no discharge record
.
         COMPARE    THREE,ASTAT
         GOTO       CTBI2200 IF NOT EQUAL
.
         MOVE       ZERO,DISFLG                  * Patient is discharged
.
         MOVE       AADMNO,KEY8
         CALL       RDDSCH1                      * Read in the discharge record
         BRANCH     OVRCD,CTBI1000
.
.        PROGFLAG=4 means calculate the amount to be invoiced, and put the
.        figures into the file openned on NZPFINA, but don't actually produce
.        the invoice.
.
CTBI2200 MOVE       FOUR,PROGFLAG
         OPEN       PATDO1A1,"patdo1af"
         MOVE       ZERO,IBCNUGST           * Set to No GST for to be invoiced
.
         MOVE       "PRFA  ",EXPPAYER       * check for patient invoice
         MOVE       ONE,PRPATINV            * flag for printing patient invoice
         CALL       CALCTBI                 * Calculate the amt to invoice
.
.        Get all the funder
.
         OPEN       VISPAYA1,"vispayaf"
         MOVE       AADMNO,DTADMNO
         PACK       KEY14,AADMNO,SP70          * get the first funder
         CALL       RSVSPAY1
CTBI2300 CALL       RKVSPAY1                     * get next expected payer
         BRANCH     OVRCD,CTBI2800
         MATCH      DTADMNO,VSPAVISN             * Same visit?
         GOTO       CTBI2800 IF NOT EQUAL
.
         MOVE       ZERO,PRPATINV                * Set to print funder invoice
         MATCH      SP70,VSPAPAYC
         GOTO       CTBI2300 IF EQUAL            * try next funder
.
         MOVE       VSPAPAYC,EXPPAYER            * Set the next funder
         MOVE       ZERO,PRPATINV           * flag for printing funder invoice
         CALL       CALCTBI                 * Calculate the amt to invoice
         GOTO       CTBI2300
.
CTBI2800 MOVE       THREE,IBCNUGST          * set gst back to nz private
         CLOSE      PATDO1A1
.
         IF         PTCNPFID = 1
           ADD        NETTOT,TOTAMTS
           PRINT      *1,VISTYP,"  ",IPADMNO,*20,NETTOT,*40,TOTAMTS:
                      " HF=",AFUNDH,SLASH,AFNDTB
         ENDIF
.
         GOTO       CTBI1000
.
.        Outpatient to be invoiced
.
CTBI3000 MOVE       IPADMNO,PVIBILL
         MOVE       PVIBILL,KEY8
         CALL       RDVISA1                      * Read in the visit record
         BRANCH     OVRCD,CTBI9200
.
         COMPARE    FOUR,IPSYSTM
         GOTO       CTBI3500 IF NOT EQUAL
.
.        Other financial 
.
         MOVE       "out",OSTFILE
         MOVE       PVIURNO,AURNO
         GOTO       CTBI3600
.
CTBI3500 CALL       GETB0000                     * Get the booking file record
         BRANCH     OVRCD,CTBI9200               * Couldn't find it
.
         MOVE       OBAURNO,AURNO
.
CTBI3600 MOVE       AURNO,KEY8
         CALL       RDMAST1                      * Read in the PMI record
         BRANCH     OVRCD,CTBI9100
.
         CLOSE      OUTDTRO1
         PACK       CFNAME,OSTFILE,FILDTRO1
         OPEN       OUTDTRO1,CFNAME
         PACK       CFNAME,OSTFILE,FILBB1A1
         CALL       OPOTBB11
.
.        PROGFLAG=4 means calculate the amount to be invoiced, and put the
.        figures into the file openned on NZPFINA, but don't actually produce
.        the invoice.
.
         PACK       PINVDTE,CCC,CYY,CMM,CDD
         REP        " 0",PINVDTE
.
         MOVE       FOUR,PROGFLAG
         MOVE       IPADMNO,OTNUMB 
         MOVE       ZERO,IBCNUGST           * Set to No GST for to be invoiced
         CALL       OUTTBI                  * Calculate the amt to invoice
         MOVE       THREE,IBCNUGST          * set gst back to nz private
         IF         PTCNPFID = 1
           ADD        NETTOT,TOTAMTS
           PRINT      *1,VISTYP,"  ",IPADMNO,*20,NETTOT,*40,TOTAMTS
         ENDIF
.
         GOTO       CTBI1000
.
.        A + E to be invoiced
.
CTBI4000 MOVE       IPADMNO,PVIBILL
         MOVE       PVIBILL,KEY8
         CALL       RDVISA1                      * Read in the visit record
         BRANCH     OVRCD,CTBI9200
.
         MOVE       PVIBILL,KEY8
         CALL       RDDETA1                      * Read in the A+E details
         BRANCH     OVRCD,CTBI9200
.
         MOVE       ADAURNO,AURNO
         MOVE       AURNO,KEY8
         CALL       RDMAST1                      * Read in the PMI record
         BRANCH     OVRCD,CTBI9100
.
.        PROGFLAG=4 means calculate the amount to be invoiced, and put the
.        figures into the file openned on NZPFINA, but don't actually produce
.        the invoice.
.
         PACK       PINVDTE,CCC,CYY,CMM,CDD
         REP        " 0",PINVDTE
.
         MOVE       FOUR,PROGFLAG
         MOVE       ZERO,IBCNUGST           * Set to No GST for to be invoiced
         CALL       AAETBI                  * Calculate the amt to invoice
         MOVE       THREE,IBCNUGST          * set gst back to nz private
         IF         PTCNPFID = 1
           ADD        NETTOT,TOTAMTS
           PRINT      *1,VISTYP,"  ",IPADMNO,*20,NETTOT,*40,TOTAMTS
         ENDIF
         GOTO       CTBI1000
.
CTBI9100 
.        DISPLAY    *P1:24,*B,*EL,"Admission No ",IPADMNO:
.                   " has Invalid U/R No ",AURNO,".  ",*W2;
.
.        DISPLAY    *P1:24,*EL:
.                   "Calculating Total Amount Still to be Invoiced.":
.                   *P48:24,*EL,"Billing No :";
         GOTO       CTBI1000
.
CTBI9200 
.        DISPLAY    *P1:24,*B,*EL,"Invalid Admission No ",IPADMNO:
.                   " in Invoices Pending File. ",*W2;
.
.        DISPLAY    *P1:24,*EL:
.                   "Calculating Total Amount Still to be Invoiced.":
.                   *P48:24,*EL,"Billing No :";
         GOTO       CTBI1000
.
CTBI9999 RETURN
.
.        ======================================================================
.        GETB0000: Locate Booking Record given the Visit file details
.        ======================================================================
.
GETB0000 MOVE       ZERO,OVRCD
.
         MOVE       "out",OSTFILE
         MOVE       PVISITE,KEY6
         CALL       RDSITA1                      * Get the site prefix
.
         PACK       CFNAME,OSTFILE,FILBB1A2
         CALL       OPOTBB12
.
         PACK       KEY16,PVIDATE,PVIBILL
         CALL       RDBOKB2
         COMPARE    ZERO,OVRCD
         GOTO       GETB3000 IF EQUAL
         GOTO       GETB9999
.
GETB3000 MOVE       PVIURNO,OBAURNO
         MOVE       PVISITE,OBASITE
         CLOSE     OUTBB1A2
GETB9999 RETURN
.
.        ======================================================================
.        GETC0000: Get the cash payments pending
.        ======================================================================
.
GETC0000 MOVE      "B",NZFITYPE                   * Cash received section
         OPEN      COMDEPA7,"comdepaf"
         OPEN      RCPDTEA1,"rcpdteaf"
.
         MOVE      "0",CMDESTAT
         PACK      KEY26,CMDESTAT,SP70           * position from Deposit held
         CALL      RSCMDEP7
GETC1000 CALL      RKCMDEP7                      * Read next record
         BRANCH    OVRCD,GETC9000                * Finished file
.
         MATCH     "0",CMDESTAT                  * Deposit held?
         GOTO      GETC9000 IF NOT EQUAL
.
         PACK      KEY8,CMDEADMN,SP8
         CALL      RDPMVX11
         BRANCH    OVRCD,GETC1000
.
         IF        HOSPFLAG=1
           MATCH     PMVXMHOS,HOSPID
           GOTO      GETC1000 IF NOT EQUAL
         ENDIF
.
         BRANCH    CMDESYST,GETC1020,GETC1020,GETC1020
         GOTO      GETC1000
.
.        Read in the visit file record
.
GETC1020 MOVE      CMDEADMN,PVIBILL
         MOVE      PVIBILL,KEY8
         CALL      RDVISA1
         COMPARE   ZERO,OVRCD
         GOTO      GETC1100 IF EQUAL
.
.        No visit record, it could be a pre-admission patient
.
         MOVE      CMDEADMN,KEY8
         CALL      RDMISS1
         BRANCH    OVRCD OF GETC1000
.
         COMPARE   ONE,ASTAT
         GOTO      GETC1000 IF NOT EQUAL
.
         MOVE      CMDEADMN,PVIBILL
         MOVE      THREE,PVITYPE                 * Inpatient
         MOVE      SP6,PVISITE
.
.        Check for a valid system
.
GETC1100 COMPARE   FSTSYS,PVITYPE
         GOTO      GETC1000 IF LESS
.
         COMPARE   PVITYPE,FEDSYS
         GOTO      GETC1000 IF LESS
.
.        Check for a valid site
.
         IF        PVITYPE = TWO
           MATCH     FSTSITE,PVISITE
           GOTO      GETC1000 IF LESS
.
           MATCH     PVISITE,FEDSITE
           GOTO      GETC1000 IF LESS
         ENDIF
.
.        Read receipt details
.
         PACK      KEY17,CMDERECN,CMDETCNT
         CALL      RDRCDTE1
         BRANCH    OVRCD,GETC1000
.
         PACK      NZFICODE WITH ANSD,CMDEDTYP,SP70 * Deposit
.
.        Post this payment to the temporary fee's invoiced file
.
         UNPACK    SP70,FININVN,FINADMN,FINURNO
         PACK      FINDATE,CCC,CYY,CMM,CDD
         REP       " 0",FINDATE
         MOVE      PVITYPE,NZFISYST
         IF        PVITYPE = TWO
           MOVE      PVISITE,NZFISITE
         ELSE
           MOVE      SP6,NZFISITE
         ENDIF
         MOVE      RCDTAMNT,FINAMT
         MOVE      PMVXMHOS,NZFIHOSP
.
         MOVE      NZFISYST,FINSYS
         MOVE      NZFISITE,FINSITE
         MOVE      NZFIHOSP,FINHOSP
         MOVE      NZFITYPE,FINTYPE
         MOVE      NZFICODE,FINCODE
         CALL      PATCALF
         IF        PTCNPFID = 1
           ADD        FINAMT,TOTAMTS
           PRINT      *1,CMDEADMN,*20,FINAMT,*40,TOTAMTS
         ENDIF
.
         GOTO      GETC1000
.
GETC9000 CLOSE     COMDEPA7
         CLOSE     RCPDTEA1
.
         RETURN
+
.        ======================================================================
.        INDZ0000: Create a temporary index file with the NZPFINA format
.        ======================================================================
.
INDZ0000 CALL      KILL0000                      * Delete the file first
         CLOSE     NZPFINA1                    * Make sure the file is closed
         CLOSE     NZPFINA2                    * Make sure the file is closed
.
         PACK      CMDLINE,SP70
         CLEAR     CMDLINE
         APPEND    "isbuild ",CMDLINE
         APPEND    FNAMEI,CMDLINE
         APPEND    " 194 UC4-4,5-10,11-14,15-15,16-28,1-3",CMDLINE
         APPEND    SP70,CMDLINE
         RESET     CMDLINE
         EXECUTE   CMDLINE,TASKID
.
         PACK      CMDLINE,SP70
         CLEAR     CMDLINE
         APPEND    "isadd ",CMDLINE
         APPEND    FNAMEI,CMDLINE
         APPEND    " UC1-3,4-4,5-10,11-14,15-15,16-28",CMDLINE
         APPEND    SP70,CMDLINE
         RESET     CMDLINE
         EXECUTE   CMDLINE,TASKID
.
         OPEN      NZPFINA1,FNAMEI               * Open temp file as NZPFINA
         OPEN      NZPFINA2,FNAMEI               * Open temp file as NZPFINA
.
INDZ9999 RETURN
.
.        ======================================================================
.        KILL0000: Deleting an indexed file based on port
.        ======================================================================
.
KILL0000 CLEAR     CMDLINE
         APPEND    "iserase ",CMDLINE
         APPEND    FNAMEI,CMDLINE
         RESET     CMDLINE
         EXECUTE   CMDLINE,TASKID
KILL9999 RETURN
+
.        ======================================================================
.        I/O routines for the work file
.        ======================================================================
.
RDAWORK  MOVE      ZERO,OVRCD
         RESET     KEY16
         READ      TEMPFILE,KEY16;ANS
         GOTO      OVERCOND IF OVER
         RETURN
.
RDSWORK  READ      TEMPFILE,KEY16;;
         RETURN
.
RDWORK   MOVE      ZERO,OVRCD
         READ      TEMPFILE,KEY16;DSECTION,DSUBSECT,SUBCODE,SUBDESC1,SUBDCOD:
                                  SUBDESC2,SUBUS2DS,XSUBPER,XSUBYTD,XSUBPRY:
                                  XSUBM01,XSUBM02,XSUBM03,XSUBM04,XSUBM05:
                                  XSUBM06,XSUBM07,XSUBM08,XSUBM09,XSUBM10:
                                  XSUBM11,XSUBM12,XSUBM13
         GOTO      OVERCOND IF OVER
         MOVE      DSECTION,SECTION
         MOVE      DSUBSECT,SUBSECT
.
         MOVE      XSUBPER,SUBPER
         MOVE      XSUBYTD,SUBYTD
         MOVE      XSUBPRY,SUBPRY
         MOVE      XSUBM01,SUBM01
         MOVE      XSUBM02,SUBM02
         MOVE      XSUBM03,SUBM03
         MOVE      XSUBM04,SUBM04
         MOVE      XSUBM05,SUBM05
         MOVE      XSUBM06,SUBM06
         MOVE      XSUBM07,SUBM07
         MOVE      XSUBM08,SUBM08
         MOVE      XSUBM09,SUBM09
         MOVE      XSUBM10,SUBM10
         MOVE      XSUBM11,SUBM11
         MOVE      XSUBM12,SUBM12
         MOVE      XSUBM13,SUBM13
         RETURN
.
RDKWORK  MOVE      ZERO,OVRCD
         READKS    TEMPFILE;DSECTION,DSUBSECT,SUBCODE,SUBDESC1,SUBDCOD:
                            SUBDESC2,SUBUS2DS,XSUBPER,XSUBYTD,XSUBPRY:
                            XSUBM01,XSUBM02,XSUBM03,XSUBM04,XSUBM05:
                            XSUBM06,XSUBM07,XSUBM08,XSUBM09,XSUBM10:
                            XSUBM11,XSUBM12,XSUBM13
         GOTO      OVERCOND IF OVER
         MOVE      DSECTION,SECTION
         MOVE      DSUBSECT,SUBSECT
         MOVE      XSUBPER,SUBPER
         MOVE      XSUBYTD,SUBYTD
         MOVE      XSUBPRY,SUBPRY
         MOVE      XSUBM01,SUBM01
         MOVE      XSUBM02,SUBM02
         MOVE      XSUBM03,SUBM03
         MOVE      XSUBM04,SUBM04
         MOVE      XSUBM05,SUBM05
         MOVE      XSUBM06,SUBM06
         MOVE      XSUBM07,SUBM07
         MOVE      XSUBM08,SUBM08
         MOVE      XSUBM09,SUBM09
         MOVE      XSUBM10,SUBM10
         MOVE      XSUBM11,SUBM11
         MOVE      XSUBM12,SUBM12
         MOVE      XSUBM13,SUBM13
         RETURN
.
UPWORK   MOVE      SECTION,DSECTION
         MOVE      SUBSECT,DSUBSECT
         UPDATE    TEMPFILE;DSECTION,DSUBSECT,SUBCODE,SUBDESC1,SUBDCOD:
                            SUBDESC2,SUBUS2DS,XSUBPER,XSUBYTD,XSUBPRY:
                            XSUBM01,XSUBM02,XSUBM03,XSUBM04,XSUBM05:
                            XSUBM06,XSUBM07,XSUBM08,XSUBM09,XSUBM10:
                            XSUBM11,XSUBM12,XSUBM13
         RETURN
.
WRWORK   MOVE      ZERO,OVRCD
         MOVE      SECTION,DSECTION
         MOVE      SUBSECT,DSUBSECT
         WRITE     TEMPFILE,KEY16;DSECTION,DSUBSECT,SUBCODE,SUBDESC1,SUBDCOD:
                                  SUBDESC2,SUBUS2DS,XSUBPER,XSUBYTD,XSUBPRY:
                                  XSUBM01,XSUBM02,XSUBM03,XSUBM04,XSUBM05:
                                  XSUBM06,XSUBM07,XSUBM08,XSUBM09,XSUBM10:
                                  XSUBM11,XSUBM12,XSUBM13
         RETURN
.
.        ======================================================================
.        ADDW0000: Add data to the work file
.        ======================================================================
.
ADDW0000 PACK       KEY16,SECTION,SUBSECT,SUBCODE
         CALL       RDWORK                       * Read the work file record
         BRANCH     OVRCD,ADDW2000               * No record currently in file
.
.        Update the record with the new data
.
         ADD        NZFIPERD,XSUBPER                * Period Total
         ADD        NZFILSYR,XSUBPRY                * Prior year total
.
         MOVE       ZERO,FORM2                   * Prepare to loop over months
ADDW1600 ADD        ONE,FORM2                    * Get the next month
         COMPARE    TEN4,FORM2                   * Check if we have finished
         GOTO       ADDW1800 IF NOT LESS         * Yes, update the record
.
         LOAD       WORK1,FORM2,NZFIMTH1,NZFIMTH2,NZFIMTH3,NZFIMTH4:
                                NZFIMTH5,NZFIMTH6,NZFIMTH7,NZFIMTH8:
                                NZFIMTH9,NZFIMT10,NZFIMT11,NZFIMT12:
                                NZFIMT13
.
         ADD        WORK1,XSUBYTD                 * Increment YTD total
.
         LOAD       WORK2,FORM2,XSUBM01,XSUBM02,XSUBM03,XSUBM04:
                                XSUBM05,XSUBM06,XSUBM07,XSUBM08:
                                XSUBM09,XSUBM10,XSUBM11,XSUBM12,XSUBM13
.
         ADD        WORK1,WORK2                  * Increment month total
.
         STORE      WORK2,FORM2,XSUBM01,XSUBM02,XSUBM03,XSUBM04:
                                XSUBM05,XSUBM06,XSUBM07,XSUBM08:
                                XSUBM09,XSUBM10,XSUBM11,XSUBM12,XSUBM13
         GOTO       ADDW1600                     * Get next month
.
.        Update the work file
.
ADDW1800 CALL       UPWORK
         GOTO       ADDW9999
.
.        Create a new work file record
.
ADDW2000 CALL       GETD0000                     * Get the description
.
         MOVE       NZFIPERD,XSUBPER               * Period Total
         MOVE       NZFILSYR,XSUBPRY                * Prior year total
         MOVE       ZERO,XSUBYTD                  * Year to date total
.
         MOVE       ZERO,FORM2                   * Prepare to loop over months
ADDW2200 ADD        ONE,FORM2                    * Get the next month
         COMPARE    TEN4,FORM2                   * Check if we have finished
         GOTO       ADDW2400 IF NOT LESS         * Yes, write the record
.
         LOAD       WORK1,FORM2,NZFIMTH1,NZFIMTH2,NZFIMTH3,NZFIMTH4:
                                NZFIMTH5,NZFIMTH6,NZFIMTH7,NZFIMTH8:
                                NZFIMTH9,NZFIMT10,NZFIMT11,NZFIMT12:
                                NZFIMT13
.
         ADD        WORK1,XSUBYTD                 * Increment YTD total
.
         STORE      WORK1,FORM2,XSUBM01,XSUBM02,XSUBM03,XSUBM04:
                                XSUBM05,XSUBM06,XSUBM07,XSUBM08:
                                XSUBM09,XSUBM10,XSUBM11,XSUBM12,XSUBM13
         GOTO       ADDW2200                     * Get next month
.
.        Write to the work file
.
ADDW2400 PACK       KEY16,SECTION,SUBSECT,SUBCODE
         CALL       RDAWORK
         COMPARE    ZERO,OVRCD
         GOTO       ADDW9999 IF EQUAL
.
         CALL       WRWORK
.
ADDW9999 RETURN
.
.         ======================================================================
.         ZERO0000: Zero the amounts in the work file variables
.         ======================================================================
.
ZERO0000  MOVE      ZERO,FORM2                    * Start from the beginning
ZERO1000  ADD       ONE,FORM2                     * Get the next variable
          COMPARE   TEN7,FORM2                    * Have we finished yet ?
          GOTO      ZERO9999 IF NOT LESS          * Yes.
.
          STORE     ZERO,FORM2,XSUBM01,XSUBM02,XSUBM03,XSUBM04:
                               XSUBM05,XSUBM06,XSUBM07,XSUBM08:
                               XSUBM09,XSUBM10,XSUBM11,XSUBM12:
                               XSUBM13,XSUBPER,XSUBPRY,XSUBYTD
          GOTO      ZERO1000
.
ZERO9999  RETURN
+
.        ==========================================
.        WRPTFMI: Write record to the Invoiced file
.        ==========================================
WRPTFMI  WRITE     PTINVGL,SEQ;IBGILEDG,IBGIACCT,IBGIDATE,IBGISIGN:
                               IBGIVALU,IBGIDESC,IBGIREF,IBGIDISS:
                               IBGIRESP,IBGICRAC,IBGICRAA,IBGIBASC
         RETURN
+
.        ================================================
.        WRPTFMT: Write record to the to be Invoiced file
.        ================================================
WRPTFMT  MOVE       SP3,IBGIBASC
         WRITE     PTTBIGL,SEQ;IBGILEDG,IBGIACCT,IBGIDATE,IBGISIGN:
                               IBGIVALU,IBGIDESC,IBGIREF,IBGIDISS:
                               IBGIRESP,IBGICRAC,IBGICRAA,IBGIBASC
         RETURN
+
RSFINN   IF         GSTFLAG=1
           IF         HOSPFLAG=1
             CALL       RSNZFIG2                     * Initialise file
           ELSE
             CALL       RSNZFIG1                     * Initialise file
           ENDIF
         ELSE
           IF         HOSPFLAG=1
             CALL       RSNZFIN2                     * Initialise file
           ELSE
             CALL       RSNZFIN1                     * Initialise file
           ENDIF
         ENDIF
         RETURN
+
RKFINN   IF         GSTFLAG=1
           IF         HOSPFLAG=1
             CALL       RKNZFIG2
           ELSE
             CALL       RKNZFIG1
           ENDIF
         ELSE
           IF         HOSPFLAG=1
             CALL       RKNZFIN2
           ELSE
             CALL       RKNZFIN1
           ENDIF
         ENDIF
         RETURN
.
+
.        ================================================
.         I/O for G/L Interface file
.        ================================================
RDSYFMS   MATCH     "1",PTCNSIGL
          IF        @EQUAL
            CALL      RDPMFMS1
            BRANCH    OVRCD,RDSYFM9
            CALL      MVFLD00              * move fields
          ELSE
            CALL      RDPTFM1
          ENDIF
RDSYFM9   RETURN
.
RKSYFMS   MATCH     "1",PTCNSIGL
          IF        @EQUAL
            CALL      RKPMFMS1
            BRANCH    OVRCD,RKSYFM9
            CALL      MVFLD00              * move fields
          ELSE
            CALL      RKPTFM1
          ENDIF
RKSYFM9   RETURN
.
.        ========================================================
.        Move fields from System based G/L Int.to Normal G/L Int.
.        ========================================================
MVFLD00   MOVE      PMFMHOSP,PTFMHOSP
          MOVE      PMFMRSUB,PTFMSUB
          MOVE      PMFMCODE,PTFMCOD
          MOVE      PMFMFDIS,PTFMIDI
          MOVE      PMFMFRES,PTFMIRE
          MOVE      PMFMFLED,PTFMILD
          MOVE      PMFMFCRD,PTFMICA
          MOVE      PMFMFDEB,PTFMIDA
          MOVE      PMFMGSTA,PTFMIGS
.
          MOVE      PMFMTDIS,PTFMTDI
          MOVE      PMFMTRES,PTFMTRE
          MOVE      PMFMTLED,PTFMTLD
          MOVE      PMFMTCRD,PTFMTCA
          MOVE      PMFMTDEB,PTFMTDA
          MOVE      PMFMBASC,PTFMBASC
MVFLD99   RETURN
.
.        ========================================================
.        Print G/L Interface
.        ========================================================
PRGL0000  OPEN      IBAGINA1,INVNAME
          MOVE      ZERO,CPAGENO
          MOVE      "60",CLNO                    * Init line number
          MOVE      ZERO,FIRSTFLG
          CALL      PRGIN000
.
          COMPARE   ONE,TBIFLAG
          GOTO      PRGL9000 IF NOT EQUAL        * No to be invoiced
.
          CLOSE     IBAGINA1
          MOVE      "60",CLNO                    * Init line number
          MOVE      ONE,FIRSTFLAG
          OPEN      IBAGINA1,TBINAME
          CALL      PRGIN000
.
PRGL9000  CLOSE     IBAGINA1
PRGL9999  RETURN
.
.        ========================================================
.        Print IBAGINA file 
.        ========================================================
PRGIN000  CALL      RKIBGI1
          BRANCH    OVRCD,PRGIN999
.
          ADD       ONE,SECTOR
          IF        SECTOR%100=0
            DISPLAY   *P40:24,*V2LON,SECTOR
          ENDIF
.
          COMPARE   SIXTY,CLNO
          CALL      HDGIN000 IF NOT LESS
.
          PRINT     *1,IBGIACCT,*22,IBGICRAA,*44,IBGIDESC,*78,IBGIVALU
          ADD       ONE,CLNO
          GOTO      PRGIN000
.
PRGIN999  RETURN
+
.        ========================================================
.        Header
.        ========================================================
HDGIN000  CALL      IBACLOCK
          CALL      HEAD132
.
          PRINT     *1,"Debit Account",*22,"Credit Account":
                    *44,"Description",*78,"Amount"
          CALL      UND132
          IF        FIRSTFLG=0
            PRINT     *1,"Fees Invoiced G/L Interface Section":
                      *N,"==================================="
          ELSE
            PRINT     *1,"To Be Invoiced G/L Interface Section":
                      *N,"===================================="
          ENDIF
          MOVE      THREE,CLNO
HDGIN999  RETURN
+
.
.        ========================================================
.        Get Header report description
.        ========================================================
GHED0000 MOVE      ZERO,NUMPERS
         CLEAR     MDESC1                        * Clear the description
         CLEAR     MDESC2                        * Clear the description
         CLEAR     MDESC3                        * Clear the description
         PACK      KEY6,NOWYEAR,SP2
         CALL      RDSDRGA1                      * Position at start of year
GHED1000 CALL      RDKDRGA1
         BRANCH    OVRCD,GHED4000                * Finished loop
.
         MATCH     DRGYR,NOWYEAR                 * Still the same year ?
         GOTO      GHED4000 IF NOT EQUAL         * No. Finished loop
.
.        Add the description for this period to the appropriate variable
.
         ADD       ONE,NUMPERS                   * Increment number of periods
.
         COMPARE   NINE,NUMPERS                * Done the 2nd 6 periods yet ?
         GOTO      GHED3000 IF NOT LESS        * Yes.
         COMPARE   FIVE,NUMPERS                * Done the 1st 6 periods yet ?
         GOTO      GHED2000 IF NOT LESS        * Yes.
.
.        Add the description to the 1st six periods
.
         APPEND    SP5,MDESC1                    * Add leading blanks
         APPEND    DRGMDSC,MDESC1                * Append description
         APPEND    SP3,MDESC1                    * Add trailing blanks
         GOTO      GHED1000
.
.        Add the description to the 2nd six periods
.
GHED2000 APPEND    SP5,MDESC2                    * Add leading blanks
         APPEND    DRGMDSC,MDESC2                * Append description
         APPEND    SP3,MDESC2                    * Add trailing blanks
         GOTO      GHED1000
.
.        Add the description to the 3rd six periods
.
GHED3000 APPEND    SP5,MDESC3                    * Add leading blanks
         APPEND    DRGMDSC,MDESC3                * Append description
         APPEND    SP3,MDESC3                    * Add trailing blanks
         GOTO      GHED1000
.
.        Finished processing financial year
.
GHED4000 APPEND    SP30,MDESC1
         APPEND    SP30,MDESC1
         APPEND    SP30,MDESC1
.
         APPEND    SP30,MDESC2
         APPEND    SP30,MDESC2
         APPEND    SP30,MDESC2
.
         APPEND    SP30,MDESC3
         APPEND    SP30,MDESC3
         APPEND    SP30,MDESC3
.
         RESET     MDESC1                        * Reset description 1
         RESET     MDESC2                        * Reset description 2
         RESET     MDESC3                        * Reset description 2
.
GHED9999 RETURN
+
          INC       STD001IO
          INC       PATGNCMX
          INC       PATHSPKY
          INC       CMGETTHR
          INC       CMXMATRX
          INC       AAECATBI
          INC       CLPMSIDE
          INC       AAEDE1IO/INC
          INC       AAEDTRIO/INC
          INC       IBAPASIO/INC
          INC       IBASECIO/INC
          INC       IBAGEDIO/INC
          INC       IBAGSTIO/INC
          INC       OUTCATBI
          INC       OUTBOAIO/INC
          INC       OUTBB1IO/INC
          INC       OUTCLIIO/INC
          INC       OUTDTRIO/INC
          INC       OUTSITIO/INC
          INC       PATCALFN
          INC       PATCATBI
          INC       PATCOMN3
          INC       PATDRGIO/INC
          INC       PATECDIO/INC
          INC       PATECOIO/INC
          INC       PATCODDS
          INC       TFILENAM                     * Generate Temp File Name
.
          INC       IBASEQIO/INC                 * Sequential Numbers File
          INC       WEBERRIO/INC                 * Web Server Error Logging
.
          INC       PATAFEIO/INC
          INC       PATASDIO/INC
          INC       PATCMXIO/INC
          INC       PATCTFIO/INC
          INC       PATDGWIO/INC
          INC       PATHDFIO/INC
          INC       PATHLFIO/INC
          INC       PATLDFIO/INC
          INC       PATLSDIO/INC
.
          INC       PATELGIO/INC
          INC       PATBFEIO/INC
          INC       PATCMCIO/INC
          INC       PATCFAIO/INC
          INC       PATTFEIO/INC
          INC       PATCODIO/INC
          INC       PMSCIDIO/INC
          INC       PMSCCDIO/INC
          INC       PATDO1IO/INC
          INC       PATDSCIO/INC
          INC       PATDTRIO/INC
          INC       PATIBLIO/INC
          INC       PATICUIO/INC
          INC       PATIOVIO/INC
          INC       PATFINIO/INC
          INC       PATFIGIO/INC
          INC       NZPFINIO/INC
          INC       NZPFIGIO/INC
          INC       PATFMOIO/INC
          INC       PATFN1IO/INC
          INC       PATFN2IO/INC
          INC       PATFX1IO/INC
          INC       PATHSPIO/INC
          INC       PATHTRIO/INC
          INC       EMRHTRIO/INC
          INC       OUTHTRIO/INC
          INC       PATIN1IO/INC
          INC       PATINMIO/INC
          INC       PATINVIO/INC
          INC       PATIPEIO/INC
          INC       PATITMIO/INC
          INC       PATMA1IO/INC
          INC       PATMCHIO/INC
          INC       PATMI1IO/INC
          INC       PATOVBIO/INC
          INC       PATPGRIO/INC
          INC       PATRBLIO/INC
          INC       PATRCAIO/INC
          INC       PATRATIO/INC
          INC       PATRFNIO/INC
          INC       PATRFGIO/INC
          INC       NZPRFNIO/INC
          INC       PATSRBIO/INC
          INC       PATTRNIO/INC
          INC       PATVENIO/INC
          INC       PATVISIO/INC
          INC       PMSVX1IO/INC
          INC       PATWC1IO/INC
          INC       PATWMAIO/INC
          INC       PATWR1IO/INC
          INC       PATWVEIO/INC
          INC       PATFMSIO/INC
          INC       PMSFMSIO/INC
          INC       FMSLMAIO/INC
          INC       PMSSINIO/INC
          INC       PMSEVTIO/INC
          INC       PMSHATIO/INC
          INC       PMSHCPIO/INC
          INC       PATCMTIO/INC
          INC       PMSCMTIO/INC
          INC       PMSCNOIO/INC
          INC       PMSIDEIO/INC
          INC       PMSPBRIO/INC
          INC       PMSSGAIO/INC
          INC       PMSMTIIO/INC
          INC       PMSMPRIO/INC
          INC       PRBILCMN
          INC       IBAGINIO/INC
.
          INC       VISPAYIO/INC
          INC       NZPEXTIO/INC
          INC       NZPRDTIO/INC
          INC       NZPBFEIO/INC
          INC       NZPCMTIO/INC
          INC       NZPCFNIO/INC
          INC       MLTCFNIO/INC
          INC       NZPIBRIO/INC
          INC       NZPSPRIO/INC
          INC       NZPPFEIO/INC
          INC       NZPPICIO/INC
          INC       NZPMCHIO/INC
          INC       NZPMXCIO/INC
          INC       NZPTFEIO/INC
          INC       NZPIVBIO/INC
          INC       NZPRVBIO/INC
          INC       NZPRBRIO/INC
          INC       OPRSESIO/INC
          INC       OPRARDIO/INC
          INC       OPRDEAIO/INC
          INC       PRIITMIO/INC
.
          INC       CLNZPPIC
          INC       PATIVMES
          INC       CLPATDTR                * Clear DTR file variables
          INC       PATSELFN
          INC       STEPDOWN
          INC       PATCMSTP
          INC       NHOSPDAY
          INC       CHKCMXPT
          INC       CALCDAYS
          INC       PABXBILL
          INC       PATMCHRD                * Miscellaneous Charges read routine
          INC       GETBFEES
          INC       GETTFEES
          INC       GETCNEFF
          INC       PATITMRD
.
          INC       EMRSITIO/INC
          INC       EMRHISIO/INC
          INC       EMRVISIO/INC
          INC       COMDEPIO/INC
          INC       RCPBNKIO/INC
          INC       RCPDTEIO/INC
          INC       RCPBDTIO/INC
          INC       PMSEDGIO/INC       * Effective DRG Dates
          INC       PATDDHIO/INC
          INC       VALCMXFN
          INC       GETEFDRG
.
.        The following a subroutines mentioned in PATCATBI, but will never be
.        needed by this program. They are defined here to allow compilation
.
ENDPRT
GETTHR
INITIVAR
NXTTRAN1
PROCMISC
PRTCLMS
PRTEOL
TAIL
WRITETRN
PRTINVTL
SINVT000
DOCNM000
ISUG0000
PEOL0000
CKTL0000
PRLN0000
IPRH0000
ENDPRT00
PROACC00
PRTIPROV
          RETURN
+
.
. The dummy routine required by PATGNCMX. 
.
WEBERR00  RETURN
+
.
ENDIT     CHAIN     PGM
          STOP
.
