.******************************************************************************
.* System    :   Private Practice System                                      *
.* Program   :   IBAPRI44                                                     *
.* Desc      :   Doctors Commission Report                                    *
.******************************************************************************
.* Date      :   08/11/91                                                     *
.* Author    :   Stephen Armstrong                                            *
.* Function  :   Print a report detailing the commission generated by         *
.*               either the primary doctor, or the associated doctors,        *
.*               within a specified range of practices and invoice dates      *
.* Mods      :                                                                *
.* V10.13.01 02/08/2018  Richa Phogat  TSK 0848506                            *
.*           Updated keylength for RSPRDO1 from KEY18 to KEY22                *
.*           Updated keylength for RDTEMP1 from KEY12 to KEY16                *
.*           Updated keylength for RSPRIN4 from KEY30 to KEY34                *
.*           Extended XDOCT from 6 to 10 chars. Changed COMTEMP1              * 
.*           08/08/2018  Tracey Nguyen TSK 0848506                            *
.*           Changed UKEY to match with COMTEMP1                              *
.*        V10.04.01 15/04/2014  J.Tan          CAR 261630                     *
.*                  Removed port number from temp file name                   *
.*        V9.11.01  20/10/2008  J.Tan         CAR 178415                      *
.*                  Mods checking for Medical practice user access            *
.*        V9.02.01  02/10/2001  J.Tan                                         *
.*                  Mods to use PMSHCPFD instead of PATDO1FD                  *
.*        V5.08.02  29/06/2000  Steve Downing                                 *
.*                  Mods to print ABN number/GST Registered                   *
.*        V5.08.01  05/05/2000  J.Tan                                         *
.*                  Recompiled for PRIDOCT file                               *
.*        V5.07.01  09/06/1999  Greg Horvat                                   *
.*                  Recompiled for PRIINVIO - Fixed problem with direct read  *
.*                                                                            *
.*               V6.00.01 31/08/92 Steve Armstrong                            *
.*                        Updated to use patdrgaf file for start of fin.      *
.*                        year                                                *
.*               V6.00.02 07/10/92  Steve Armstrong                           *
.*                        Modified for alphanumeric debtor number             *
.******************************************************************************
.
.$$$$$
.         Doctors Commission Report Program (IBAPRI44)
.         --------------------------------------------
.
.         ML0000
.         Open files and initialisation
.         pripracf
.         pridoctf
.         priinvof
.         pmshcpaf
.         patdrgaf
.         controlf
.
.         ML0000
.         Get user option
.            If zero selected, end program
.            If valid option selected, proceed to get start med. prac. code
.
.         ML1000
.         Get starting medical practice code
.            If exitchar entered, return to get next option
.            If nothing entered, default to "start"
.            If valid input, proceed to get end med. prac. code
.
.         Get ending medical practice code
.            If exitchar entered, return to get next option
.            If nothing entered, default to "finish"
.            If valid input, proceed to get start date
.
.         Get starting date
.
.         Get ending date
.
.         Get report type
.            If nothing input, default to "primary" doctor
.            If (P)rimary or (A)ssociated input, proceed to confirm report
.
.         Get printout confirmation
.            If (Y)es input, proceed to create temp. file
.            If (N)o input, return to get next option
.            If (C)ancel input, return to get next option
.
.         ML5000
.         Create temporary file
.         Process records on invoice file and write valid records to temp file
.
.         Print records in temp. file
.
.         Erase temporary file
.
.         Return to get next option
.
.         ML9999
.         Chain back to calling program
.
.
.$$$$$
.
.
          INC       STD001FD
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
.         Temporary File Definition
.         -------------------------
.
.         Filename : PRI44Axx.dat          (xx = port id)
.
COMTEMP1  IFILE SQL, FIXED=53, KEY="U1-6,7-16"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
XPRAC     DIM       6           6           1       Medical practice
XDOCT     DIM      10          10           7       Service doctor
XITOT     FORM    10.2          7          17       Invoice total
XJTOT     FORM    10.2          7          24       Journals total
XPERC     FORM     3.2          4          31       % commission
XCRCD     DIM      5            5          35       Creditor code
XABNN     DIM     11           11          40       ABN Number
XGSTR     FORM     1            2          51       GST Registered
.
.End of Record                             53
.
.
.
. FILE DESCRIPTION INCLUDES
. -------------------------
.
          INC       APSMASFD/INC
.
          INC       PRIPRAFD/INC                 * medical practice file
          INC       PRIDOCFD/INC                 * practice doctor file
          INC       PRIINVFD/INC                 * invoice file
          INC       PRICONFD/INC                 * control file
          INC       PRIALSFD/INC                 * Medical Prac.all user access
          INC       PRISECFD/INC                 * Medical Prac.security access
.
          INC       PMSHCPFD/INC                 * doctor file
          INC       PATDRGFD/INC                 * date range file
.
.
. PROGRAM CONSTANTS
. -----------------
.
ASSHED    INIT      "- Associated Doctors"
ASSOCD    INIT      "Associated"
ERASE     INIT      "iserase "
FINISH    INIT      "Finish"
ISBUILD   INIT      "isbuild "
PIPE      INIT      "|"
PRIMARY   INIT      "Primary   "
PRIMHED   INIT      "- Primary Doctor"
START     INIT      "Start"
UKEY      INIT      " 53 U1-6,7-16"
ZED6      INIT      "zzzzzz"
Z30       INIT      "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
.
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
.
CMDLIN1   DIM       29
CMDLIN2   DIM       16
COMMAMT   FORM      10.2
CURRDAT   DIM       8                            * current date
.
DOCNAME   DIM       48                           * formatted doctor name
.
EDATE     DIM       8                            * end date
EPRAC     DIM       6                            * end medical practice code
.
IBCNUGST  FORM      1
.
MPBILL    FORM      10.2                         * prac. net billing total
MPCOMM    FORM      10.2                         * prac. commission total
MPITOT    FORM      10.2                         * prac. invoice total
MPJTOT    FORM      10.2                         * prac. journal total
MPRAC     DIM       6                            * medical practice code
.
NETBILL   FORM      10.2                         * net bill for doctor
.
REPTYPE   FORM      1                            * report type flag
.                                                   0 = primary doctor
.                                                   1 = associated doctors
.
SAVPRAC   DIM       6                            * saved medical practice
SDATE     DIM       8                            * start date
SPRAC     DIM       6                            * start medical practice code
.
TEMPAMT   FORM      12.2                         * temp. storage variable
TEMPFILE  DIM       8
.
USERID    DIM       10
.
PRGID     INIT      "IBAPRI44"
PRGNAM    INIT      "Doctors Commission Report"
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,ML1000         * by medical practice
.
ML1000    CALL      SPRA0000               * get starting medical practice code
          BRANCH    EXIT,ML0100            * exitchar entered
.
          CALL      EPRA0000               * get ending medical practice code
          BRANCH    EXIT,ML0100            * exitchar entered
.
          CALL      SDAT0000               * get starting date
.
          CALL      EDAT0000               * get ending date
.
          CALL      DTYP0000               * get doctor type
.
          CALL      USID0000               * Keyin user id
.
          CALL      CONTQST                * ok to continue ?
          BRANCH    CEXIT,ML5000:          * Yes
                          ML0100:          * No
                          ML0100           * Cancel
.
ML5000    CALL      CREA0000               * create temporary file
          CALL      PROC0000               * process records for printing
.
          CALL      PRIN0000               * print records on temp file
          CALL      KILL0000               * erase temp. file
          GOTO      ML0100
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                     * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"pripracf";
          OPEN      PRIPRAC1,"pripracf"          * medical practice file
.
          DISPLAY   *P64:24,"pridoctf";
          OPEN      PRIDOCT1,"pridoctf"          * practice doctor file
.
          DISPLAY   *P64:24,"priinvof";
          OPEN      PRIINVO4,"priinvof"          * invoice file
.
          OPEN      PRIALSA1,"prialsaf"
          OPEN      PRISECA1,"prisecaf"
.
          DISPLAY   *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
.
          DISPLAY   *P64:24,"patdrgaf";
          OPEN      PATDRGA2,"patdrgaf"          * date range file
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"          * control file
.
          READ      CONTROLF,ZERO;*85,IBCNUGST
          READ      CONTROLF,THIRTY3;*213,PRCNDAPS
.
          IF        PRCNDAPS=1
            DISPLAY   *P64:24,"apsmasaf";
            OPEN      APSMASA1,"apsmasaf"          * control file
          ENDIF
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,TEMPFILE
.
          MOVE      ONE,PACFRMT
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Valid option selected                  *
.*                        TRUE  (1)  Exit option selected                   *
.*              COPTION = 1  By medical practice                            *
.****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = By Medical Practice"
.
OPTN1000  KEYIN     *P1:7,*EL,"Select option : ",*DV,UNDLN1:
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION
          GOTO      OPTN9500 IF EQUAL            * exit
.
          BRANCH    COPTION,OPTN9000
.
          BEEP
          GOTO      OPTN1000
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.**************************************************************************
.*                               SPRA0000              Called by: ML0000  *
.*                       input start medical practice code                *
.* Returns:          EXIT  0 = valid code input                           *
.*                         1 = exitchar input                             *
.**************************************************************************
.
SPRA0000  KEYIN     *P1:7,*EF,"From Medical Practice : ",*DV,UNDLN6:
                    *P25:7,*V2LON,MPRAC:
                    *P25:7,*DV,MPRAC
.
          CALL      CHK0000                      * see what was entered
          BRANCH    EXIT,SPRA5000:               * nothing entered
                         SPRA4000:               * ? entered
                         SPRA9500:               * exitchar input
                         SPRA8000                * valid input
.
          GOTO      SPRA0000                     * invalid input
.
SPRA4000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
SPRA4200  CALL      PRIPRADS                     * list codes on file
.
SPRA4500  KEYIN     *P1:24,*EL,"From Medical Practice : ",*DV,UNDLN6:
                    *P25:24,*V2LON,MPRAC:
                    *P25:24,*DV,MPRAC
.
          CALL      CHK0000                      * see what was entered
          BRANCH    EXIT,SPRA4900:               * nothing entered
                         SPRA4200:               * ? entered
                         SPRA9400:               * exitchar input
                         SPRA7900                * valid input
.
          GOTO      SPRA4500                     * invalid input
.
SPRA4900  CALL      PUTSCR00                     * restore screen
SPRA5000  MOVE      SP6,SPRAC
          DISPLAY   *P25:7,*V2LON,START
          GOTO      SPRA8500
.
SPRA7900  CALL      PUTSCR00                     * restore screen
          DISPLAY   *P25:7,*V2LON,MPRAC
SPRA8000  MOVE      MPRAC,SPRAC
          DISPLAY   *P35:7,PRPRDESC
.
SPRA8500  MOVE      ZERO,EXIT
          GOTO      SPRA9999
.
SPRA9400  CALL      FRESCR00
SPRA9500  MOVE      ONE,EXIT
.
SPRA9999  RETURN
+
.**************************************************************************
.*                               EPRA0000              Called by: ML0000  *
.*                       input end medical practice code                  *
.* Returns:          EXIT  0 = valid code input                           *
.*                         1 = exitchar input                             *
.**************************************************************************
.
EPRA0000  KEYIN     *P1:8,*EF,"To   Medical Practice : ",*DV,UNDLN6:
                    *P25:8,*V2LON,MPRAC:
                    *P25:8,*DV,MPRAC
.
          CALL      CHK0000                      * see what was entered
          BRANCH    EXIT,EPRA5000:               * nothing entered
                         EPRA4000:               * ? entered
                         EPRA9500:               * exitchar input
                         EPRA3000                * valid input
.
          GOTO      EPRA0000                     * invalid input
.
EPRA3000  MATCH     SPRAC,MPRAC                  * end prac < start prac ?
          GOTO      EPRA8000 IF NOT LESS         * no
.
          DISPLAY   *P1:24,*EL,"End practice less than start practice.  ";
          CALL      HITENTER
          GOTO      EPRA0000
.
EPRA4000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
EPRA4200  CALL      PRIPRADS                     * list codes on file
.
EPRA4500  KEYIN     *P1:24,*EL,"To   Medical Practice : ",*DV,UNDLN6:
                    *P25:24,*V2LON,MPRAC:
                    *P25:24,*DV,MPRAC
.
          CALL      CHK0000                      * see what was entered
          BRANCH    EXIT,EPRA4900:               * nothing entered
                         EPRA4200:               * ? entered
                         EPRA9400:               * exitchar input
                         EPRA6000                * valid input
.
          GOTO      EPRA4500                     * invalid input
.
EPRA4900  CALL      PUTSCR00                     * restore screen
EPRA5000  MOVE      ZED6,EPRAC
          DISPLAY   *P25:8,*V2LON,FINISH
          GOTO      EPRA8500
.
EPRA6000  MATCH     SPRAC,MPRAC                  * end prac < start prac ?
          GOTO      EPRA7900 IF NOT LESS         * no
.
          DISPLAY   *P1:24,*EL,"End practice less than start practice.  ";
          CALL      HITENTER
          GOTO      EPRA4500
.
EPRA7900  CALL      PUTSCR00                     * restore screen
          DISPLAY   *P25:8,*V2LON,MPRAC
EPRA8000  MOVE      MPRAC,EPRAC
          DISPLAY   *P35:8,PRPRDESC
.
EPRA8500  MOVE      ZERO,EXIT
          GOTO      EPRA9999
.
EPRA9400  CALL      FRESCR00
EPRA9500  MOVE      ONE,EXIT
.
EPRA9999  RETURN
+
.**************************************************************************
.*                              CHK0000                Called by: SPRA0000*
.*                see what was input for medical practice         EPRA0000*
.* Returns:           EXIT   0 = invalid input                            *
.*                           1 = nothing input                            *
.*                           2 = ? input                                  *
.*                           3 = exitchar input                           *
.*                           4 = valid input                              *
.**************************************************************************
.
CHK0000  ENDSET     MPRAC
         APPEND     SP6,MPRAC
         RESET      MPRAC
.
         MATCH      SP6,MPRAC                    * anything entered ?
         GOTO       CHK8000 IF EQUAL             * yes
.
         MATCH      EXITCHAR,MPRAC               * exitchar input ?
         GOTO       CHK9000 IF EQUAL             * yes
.
         MATCH      QUEST,MPRAC                  * "?" input ?
         GOTO       CHK8500 IF EQUAL             * yes
.
         MOVE       MPRAC,KEY6
         CALL       RDPRPR1                      * record on file ?
         COMPARE    ZERO,OVRCD
         GOTO       CHK9500 IF EQUAL             * yes
.
         DISPLAY    *P1:24,*EL,*B,"Medical Practice not on file.  ";
         CALL       HITENTER
.
         MOVE       ZERO,EXIT
         GOTO       CHK9999
.
CHK8000  MOVE       ONE,EXIT
         GOTO       CHK9999
.
CHK8500  MOVE       TWO,EXIT
         GOTO       CHK9999
.
CHK9000  MOVE       THREE,EXIT
         GOTO       CHK9999
.
CHK9500  MOVE       FOUR,EXIT
.
CHK9999  RETURN
+
.****************************************************************************
.*                             SDAT0000                Called by: ML0000    *
.*                       get starting date                                  *
.****************************************************************************
.
SDAT0000  DISPLAY   *P1:10,*EL,"From Date :"
          MOVE      TEN,CVERT
          MOVE      TEN3,CCOL
          MOVE      ZERO,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
          CALL      IBACLOCK                     * get current date
.
          PACK      CURRDAT,CCC,CYY,CMM,CDD
          REP       " 0",CURRDAT
          UNPACK    SP10,CCENT,CYEAR,CMON,CDAY
.
          PACK      KEY14,CURRDAT,Z30          * get start of financial year
          CALL      RDSDRGA2
SDAT0500  CALL      RDPDRGA2
          BRANCH    OVRCD,SDAT0700
.
          MOVE      DRGNUM,FORM2
          IF        FORM2 = 1
             UNPACK    DRGFDTE,CCENT,CYEAR,CMON,CDAY
          ELSE
             GOTO   SDAT0500
          ENDIF
.
SDAT0700  CALL      KEYDATE
          BRANCH    OVRCD,SDAT0000
          PACK      SDATE,CCENT,CYEAR,CMON,CDAY
.
          MATCH     SDATE,CURRDAT                * date in future ?
          GOTO      SDAT1000 IF LESS             * yes
          GOTO      SDAT9999                     * no
.
SDAT1000  DISPLAY   *P1:24,*EL,*B,"Date in the future.  ";
          CALL      HITENTER
          GOTO      SDAT0000
.
SDAT9999  RETURN
+
.****************************************************************************
.*                             EDAT0000                Called by: ML0000    *
.*                          get ending date                                 *
.****************************************************************************
.
EDAT0000  DISPLAY   *P1:11,*EL,"To   Date :"
          MOVE      TEN1,CVERT
          MOVE      TEN3,CCOL
          MOVE      ZERO,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
          CALL      IBACLOCK                     * default to current date
.
          PACK      CURRDAT,CCC,CYY,CMM,CDD
          REP       " 0",CURRDAT
          UNPACK    CURRDAT,CCENT,CYEAR,CMON,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,EDAT0000
          PACK      EDATE,CCENT,CYEAR,CMON,CDAY
.
          MATCH     EDATE,CURRDAT                * date in future ?
          GOTO      EDAT1000 IF LESS             * yes
.
          MATCH     SDATE,EDATE                  * start date > end date ?
          GOTO      EDAT2000 IF LESS             * yes
          GOTO      EDAT9999
.
EDAT1000  DISPLAY   *P1:24,*EL,*B,"Date in the future.  ";
          CALL      HITENTER
          GOTO      EDAT0000
.
EDAT2000  DISPLAY   *P1:24,*EL,*B,"Start date greater than end date.  ";
          CALL      HITENTER
          GOTO      EDAT0000
.
EDAT9999  RETURN
+
.****************************************************************************
.*                               DTYP0000              Called by: ML0000    *
.*            see if primary or associated doctors                          *
.* Returns:         REPTYPE  0  Primary doctor                              *
.*                           1  Associated doctors                          *
.****************************************************************************
.
DTYP0000  KEYIN     *P1:13,*EF,"(",*V2LON,*DV,ANSP,*HOFF,")rimary or (":
                    *V2LON,*DV,ANSA,*HOFF,")ssociated doctors ? ",*DV,ANSP:
                    *P37:13,*V2LON,ANS
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
          REP       UPPLOW,ANS
.
          MATCH     SP1,ANS                      * anything entered ?
          GOTO      DTYP1000 IF EQUAL            * no
.
          MATCH     ANSP,ANS                     * P entered ?
          GOTO      DTYP1000 IF EQUAL            * yes
.
          MATCH     ANSA,ANS                     * A entered ?
          GOTO      DTYP2000 IF EQUAL            * yes
.
          BEEP
          GOTO      DTYP0000                     * invalid
.
DTYP1000  MOVE      ZERO,REPTYPE
          DISPLAY   *P37:13,*V2LON,PRIMARY
          GOTO      DTYP9999
.
DTYP2000  MOVE      ONE,REPTYPE
          DISPLAY   *P37:13,*V2LON,ASSOCD
.
DTYP9999  RETURN
+
.****************************************************************************
.         Keyin user id
.****************************************************************************
USID0000  KEYIN     *P1:17,*EL,"User Id : ",USERID;
          PACK      USERID,USERID,SP70
          MATCH     SP70,USERID
          GOTO      USID0000 IF EQUAL
USID9999  RETURN
+
.****************************************************************************
.*                               PROC0000              Called by: ML0000    *
.*                    process records for printing                          *
.****************************************************************************
.
PROC0000  DISPLAY   *P1:24,*EL,"Processing:";
.
          MOVE      SP6,SAVPRAC                  * initialise practice
          PACK      KEY34,SPRAC,SP30
          CALL      RSPRIN4                      * position in file
PROC0500  CALL      RKPRIN4                      * read next record
          BRANCH    OVRCD,PROC9999               * end of file
.
          MATCH     PRINPRAC,EPRAC               * > end practice ?
          GOTO      PROC9999 IF LESS             * yes - finish
.
.         check the medical practice user access
.
          PACK      KEY10,USERID,SP70
          CALL      RDPRALS1
          COMPARE   ZERO,OVRCD
          GOTO      PROC0800 IF EQUAL       * User has access to all Med.Prac.
.
          PACK      KEY16,PRINPRAC,USERID,SP70
          CALL      RDPRSEC1
          BRANCH    OVRCD,PROC0500          * no access
.
PROC0800  MATCH     SAVPRAC,PRINPRAC             * same practice still ?
          GOTO      PROC1000 IF EQUAL            * yes
.
.         New practice, so read the practice file to get the primary
.         doctor code
.
          MOVE      PRINPRAC,KEY6
          CALL      RDPRPR1                      * read practice record
          COMPARE   ONE,OVRCD                    * on file ?
          IF        @EQUAL
             DISPLAY   *P1:24,*EL,*B,PRINPRAC," practice missing from file.  ";
             CALL      HITENTER
             DISPLAY   *P1:24,"Processing:";
             PACK      KEY34,PRINPRAC,Z30
             CALL      RSPRIN4                   * position after this practice
             GOTO      PROC0500                  * get next record
          ENDIF
.
          MOVE      PRINPRAC,SAVPRAC             * save new practice
.
.         Depending on whether we are printing primary or associated
.         doctors, check that this doctor is valid
.
PROC1000  MATCH     PRPRPDOC,PRINDOCT            * same as primary doctor ?
          IF        @EQUAL
             BRANCH    REPTYPE,PROC0500          * yes
          ELSE
             BRANCH    REPTYPE,PROC2000          * no
             GOTO      PROC0500
          ENDIF
.
PROC2000  MATCH     SDATE,PRINDATE               * < start date ?
          GOTO      PROC0500 IF LESS             * yes - ignore
.
          MATCH     PRINDATE,EDATE               * past end date ?
          GOTO      PROC0500 IF LESS             * yes - ignore
.
          DISPLAY   *P13:24,*EL,*V2LON,PRINPRAC,SP1,PRINDOCT,SP1,PRINDATE;
.
          PACK      KEY16,PRINPRAC,PRINDOCT
          CALL      RDTEMP1                      * see if record already on file
          BRANCH    OVRCD,PROC5000               * no
.
          ADD       PRINITOT,XITOT
          ADD       PRINJAMT,XJTOT
          CALL      UPTEMP1
          GOTO      PROC0500                     * get next record
.
.         Record doesn't exist on file, so get the doctor's commission
.         from the practice doctor file before writing the new temp file
.         record
.
PROC5000  PACK      KEY22,PRINPRAC,PRINDOCT,SP70
          CALL      RSPRDO1                      * position in file
          CALL      RKPRDO1                      * read next record
          BRANCH    OVRCD,PROC5500               * end of file
.
          MATCH     PRINPRAC,PRDOPRAC            * same practice ?
          GOTO      PROC5500 IF NOT EQUAL        * no
.
          MATCH     PRINDOCT,PRDODOCT            * same doctor ?
          GOTO      PROC5500 IF NOT EQUAL        * no
.
          GOTO      PROC6000                     * record found
.
PROC5500  DISPLAY   *P1:24,*EL,*B,"No commission record for ",PRINDOCT," in ":
                    PRINPRAC," practice.  ";
          CALL      HITENTER
          DISPLAY   *P1:24,"Processing:";
          MOVE      ZERO,PRDOCOMM
.
PROC6000  MOVE      PRDOCOMM,XPERC
          MOVE      PRINITOT,XITOT
          MOVE      PRINJAMT,XJTOT
          MOVE      PRDOCRCD,XCRCD
          MOVE      PRDOABNN,XABNN
          MOVE      PRDOGSTR,XGSTR
          CALL      WRTEMP1                      * write record
          GOTO      PROC0500
.
PROC9999  RETURN
+
.****************************************************************************
.*                               PRIN0000              Called by: ML0000    *
.*                     print records from temp file                         *
.****************************************************************************
.
PRIN0000  DISPLAY   *P1:24,*EL,"Printing:";
.
          MOVE      ZERO,CPAGENO
          MOVE      ZERO,CNOUNDLN
          MOVE      ZERO,CLNO
          CALL      IBACLOCK
          MOVE      PRIMHED,CPHDROPT
          LOAD      CPHDROPT,REPTYPE,ASSHED
.
          MOVE      ZERO,MPITOT                  * initialise totals
          MOVE      ZERO,MPJTOT
          MOVE      ZERO,MPBILL
          MOVE      ZERO,MPCOMM
.
          MOVE      SP20,KEY16
          CALL      RSTEMP1                      * position at start of file
          CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,PRIN9500               * no records on file
.
.         Records in temp file found
.
          CALL      HEAD0000                     * print page header
          MOVE      XPRAC,SAVPRAC                * store current practice
.
PRIN1000  MATCH     SAVPRAC,XPRAC                * same practice ?
          IF        @EQUAL
             GOTO      PRIN5000                  * yes
          ELSE
             CALL      PTOT0000                  * print prev. practice total
             MOVE      XPRAC,SAVPRAC             * store current practice
             COMPARE   FIFTY4,CLNO               * page full ?
             CALL      LINE0000 IF LESS          * no
          ENDIF
.
PRIN5000  DISPLAY   *P11:24,*EL,*V2LON,XPRAC,SP1,XDOCT;
          CALL      DISP0000                     * print record
.
          CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,PRIN9000               * end of file
          GOTO      PRIN1000                     * get next record
.
PRIN9000  CALL      PTOT0000                     * print practice totals
          CALL      LINE0000                     * print line across page
          GOTO      PRIN9700
.
PRIN9500  CALL      HEAD0000                     * write page header
.
PRIN9700  DISPLAY   *P1:24,*EL,*V2LON,"** Report Generated **";
          PRINT     *N,*1,"*** End of Report ***"
.
PRIN9999  RETURN
+
.****************************************************************************
.*                            DISP0000                 Called by: PRIN0000  *
.*                  valid record so print it                                *
.****************************************************************************
.
DISP0000  COMPARE   FIFTY4,CLNO                  * page full ?
          CALL      HEAD0000 IF NOT LESS         * yes
.
          MOVE      "Unknown doctor",DOCNAME
          MOVE      XDOCT,KEY6
          PACK      KEY10,XDOCT,SP10
          CALL      RDPMHCP1                     * doctor on file ?
          BRANCH    OVRCD,DISP1000               * no
.
          MOVE      PMHCSNAM,PACSNAME            * format doctor name
          MOVE      PMHCGNAM,PACGNAME
          MOVE      PMHCTITL,PACTITLE
          CALL      PACNAME
          MOVE      PACFNAME,DOCNAME
.
DISP1000  MOVE      XITOT,NETBILL                * calculate net bill
          ADD       XJTOT,NETBILL
.
          MOVE      NETBILL,TEMPAMT              * calculate commission
          MULT      XPERC,TEMPAMT
          DIV       "100",TEMPAMT
          MOVE      TEMPAMT,COMMAMT
.
          IF        IBCNUGST=2
            IF        PRCNDAPS=1
              MATCH     SP5,XCRCD
              GOTO      DISP2000 IF EQUAL
.
              MOVE      SP10,KEY3
              PACK      KEY5,XCRCD
              CALL      RDAPMA1
              IF        OVRCD=0
                MOVE      APMAABN,XABNN
                MOVE      APMAGREG,XGSTR
                MOVE      DNO,KEY3
                LOAD      KEY3,XGSTR,DYES
              ENDIF
              UNPACK    DOCNAME,KEY22
              PRINT     *1,PIPE,*3,XDOCT,*14,KEY22:
                        *36,"(",XCRCD,*42,SLASH,XABNN,*54,SLASH,KEY3,")";
            ELSE
              MATCH     SP10,XABNN
              GOTO      DISP2000 IF EQUAL
.
              MOVE      DNO,KEY3
              LOAD      KEY3,XGSTR,DYES
              UNPACK    DOCNAME,KEY28
              PRINT     *1,PIPE,*3,XDOCT,*14,KEY28:
                        *42,"(",XABNN,*54,SLASH,KEY3,")";
            ENDIF
          ELSE
DISP2000    UNPACK    DOCNAME,KEY44
            PRINT     *1,PIPE,*3,XDOCT,*14,KEY44;
          ENDIF
.
          PRINT     *59,PIPE,*61,XITOT:
                    *75,PIPE,*77,XJTOT,*91,PIPE,*93,NETBILL,*107,PIPE:
                    *109,XPERC,*116,PIPE,*118,COMMAMT,*132,PIPE
.
          ADD       ONE,CLNO                     * increment line count
.
          ADD       XITOT,MPITOT                 * update practice totals
          ADD       XJTOT,MPJTOT
          ADD       NETBILL,MPBILL
          ADD       COMMAMT,MPCOMM
.
DISP9999  RETURN
+
.****************************************************************************
.*                            HEAD0000                 Called by: PRIN0000  *
.*                       print page heading                       DISP0000  *
.****************************************************************************
.
HEAD0000  CALL      HEAD132                      * display page header
.
          PRINT     *40,"PERIOD FROM";
.
          UNPACK    SDATE,CCENT,CYEAR,CMON,CDAY  * format start date
          CALL      PACDATE
          PRINT     *52,CPCDATE,*63,"to";
.
          UNPACK    EDATE,CCENT,CYEAR,CMON,CDAY  * format end date
          CALL      PACDATE
          PRINT     *66,CPCDATE,*N:
                    *40,"MEDICAL PRACTICE SEQUENCE FROM";
.
          MATCH     SP6,SPRAC                    * blank start practice ?
          IF        @EQUAL
             PRINT     *71,START;                * yes
          ELSE
             PRINT     *71,SPRAC;
          ENDIF
.
          PRINT     *78,"to";
.
          MATCH     ZED6,EPRAC                   * blank end practice ?
          IF        @EQUAL
             PRINT     *81,FINISH,*N             * yes
          ELSE
             PRINT     *81,EPRAC,*N
          ENDIF
.
          CALL      LINE0000                     * draw line across page
.
          CALL      LINE0000                     * draw line across page
.
          IF        IBCNUGST=2
            IF        PRCNDAPS=1
              PRINT     *1,PIPE,*3,"DOCTOR":
                        *37,"CRD CODE/ABN/GST REG.";
            ELSE
              PRINT     *1,PIPE,*3,"DOCTOR",*43,"ABN No/GST REG.";
            ENDIF
          ELSE
            PRINT     *1,PIPE,*3,"DOCTOR";
          ENDIF
.
          PRINT     *59,PIPE,*63,"INVOICES",*75,PIPE:
                    *79,"JOURNALS",*91,PIPE,*94,"NET BILLING",*107,PIPE:
                    *111,"%",*116,PIPE,*119,"COMMISSION",*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      NINE,CLNO                    * increment line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            PTOT0000                 Called by: PRIN0000  *
.*                  print practice totals                                   *
.****************************************************************************
.
PTOT0000  PRINT     *1,PIPE,*59,PIPE,"---------------",*75,PIPE:
                    "---------------",*91,PIPE,"---------------",*107,PIPE:
                    "--------",*116,PIPE,"---------------",*132,PIPE
.
          MOVE      SAVPRAC,KEY6
          MOVE      "Unknown practice",PRPRDESC
          CALL      RDPRPR1                      * read practice record
.
          PRINT     *1,PIPE,*3,"TOTAL FOR ",PRPRDESC,*59,PIPE:
                    *61,MPITOT,*75,PIPE,*77,MPJTOT,*91,PIPE,*93,MPBILL:
                    *107,PIPE,*116,PIPE,*118,MPCOMM,*132,PIPE
.
          MOVE      ZERO,MPITOT                  * re-initialise totals
          MOVE      ZERO,MPJTOT
          MOVE      ZERO,MPBILL
          MOVE      ZERO,MPCOMM
.
PTOT9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: PRIN0000  *
.*                      draw line across page                     HEAD0000  *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
          ADD       ONE,CLNO
.
LINE9999  RETURN
+
.**************************************************************************
.*                              CREA0000               Called by: ML0000  *
.*             create a new temporary file                                *
.**************************************************************************
.
CREA0000  CALL      KILL0000                     * remove existing file
.
          PACK      CMDLIN1,ISBUILD,TEMPFILE,UKEY
          EXECUTE   CMDLIN1,TASKID               * create temporary index file
.
          OPEN      COMTEMP1,TEMPFILE            * open temp index file
.
CREA9999  RETURN
+
.****************************************************************************
.*                              KILL0000               Called by: ML0000    *
.*               close and erase the temporary file               CREA0000  *
.****************************************************************************
.
KILL0000  CLOSE     COMTEMP1                     * close file
.
          PACK      CMDLIN2,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLIN2,TASKID               * erase temp file
.
KILL9999 RETURN
+
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                    *
.****************************************************************************
.
RSTEMP1   READ      COMTEMP1,KEY16;;
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          READ      COMTEMP1,KEY16;XPRAC,XDOCT,XITOT,XJTOT,XPERC:
                                   XCRCD,XABNN,XGSTR
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    COMTEMP1;XPRAC,XDOCT,XITOT,XJTOT,XPERC,XCRCD,XABNN,XGSTR
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMP1   WRITE     COMTEMP1,KEY16;KEY16,XITOT,XJTOT,XPERC,XCRCD,XABNN,XGSTR
          RETURN
.
UPTEMP1   UPDATE    COMTEMP1;XPRAC,XDOCT,XITOT,XJTOT,XPERC,XCRCD,XABNN,XGSTR
          RETURN
+
. =========================================================================
.  I/O Includes
. =========================================================================
.
          INC       STD001IO
          INC       TFILENAM                * Generate Temp File Name
          INC       IBASEQIO/INC            * Sequential Numbers File
          INC       WEBERRIO/INC            * Web Server Error Logging
.
          INC       PRIPRADS
.
          INC       APSMASIO/INC
          INC       PRIPRAIO/INC                 * medical practice file
          INC       PRIDOCIO/INC                 * practice doctor file
          INC       PRIINVIO/INC                 * invoice file
          INC       PRIALSIO/INC                 * Medical Prac.all user access
          INC       PRISECIO/INC                 * Medical Prac.security access
.
          INC       PMSHCPIO/INC                 * doctor file
          INC       PATDRGIO/INC                 * date range file
