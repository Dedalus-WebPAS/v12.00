.*****************************************************************************
.* System    :   Patient Management                                          *
.* Program   :   IBAPMS11                                                    *
.* Desc      :   Generate Single Patient OVV request for Eclipse             *
.*****************************************************************************
.* Date      :   09/07/2014                                                  *
.* Author    :   Peter Vela                                                  *
.* Function  :   This program will allow the user to keyin a valid U/R       *
.*               number, then create a file with a corresponding OVV         *
.*               request, ready for submission to the Server Adaptor.        *
.* Modifications:                                                            *
.*               V10.10.01  17/03/2017  Richa Phogat   TSK 0832066           *
.*                          Changed DVA Card Number collected from           *
.*                          PMCDCNUM.PMSCCDF instead of PREPAT.PMIMA1FD      *
.*               V10.07.01  22/01/2016 Peter Vela CAR 294157                 *
.*                          Added new fields                                 *
.*               V10.05.02  17/11/2014 Peter Vela CAR 294157                 *
.*                          Added functionality to switch between PVP and PVV*
.*               V10.05.01  12/11/2014 Peter Vela CAR 294157                 *
.*                          New Program                                      *
.*****************************************************************************
.
.>>>>>>   Add extract error writing to file
.
.>>>>>>   Resolve extract file naming convention and change code accordingly
.>>>>>>   Might also need to add filename to pmsovvaf so there is a link to
.>>>>>>   the physical file
.
.>>>>>>   Need to change PMSOVVFD to be written to by this program along
.>>>>>>   with any errors (in a related new FD).  Should there be a status
.>>>>>>   to indicate where the extract is at as well.
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       BOKRC1FD/INC
          INC       NHIMASFD/INC
          INC       NZHISIFD/INC
          INC       OUTPREFD/INC
          INC       PATALRFD/INC
          INC       PATCALAG/INC
          INC       PATCODFD/INC
          INC       PATCOMM/INC
          INC       PATCONFD/INC
          INC       PATCRTFD/INC
          INC       PATDHEAD/INC
          INC       PATGSRFD/INC
          INC       PATLCNFD/INC
          INC       PATMA1FD/INC
          INC       PATMI1FD/INC
          INC       PATPR1FD/INC
          INC       PMSHCPFD/INC
          INC       PMSOVVFD/INC
          INC       PMSPX2FD/INC
          INC       PMSVX1FD/INC
          INC       PMSCCDFD/INC
.>>>>>    INC       PMSXXXFD/INC
.
.
OVVXFILE  FILE      ASCII,FIXED=150
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
BJDAY     FORM      3
.
CJDAY     FORM      3
CMDLINE   DIM       80
COUNT     FORM      2
CURRDATE  DIM       8                  * current date (ccyymmdd)
.
DIM8      DIM       8
.
ERORDESC  DIM       40   *****>>>>> same length as FD field length ****
FILENAME  DIM       8
.
FORM3     FORM      3
.
FRSTGNAM  DIM       40
FULLGNAM  DIM       80
.
LONGFNAM  DIM       12
.
NMPNUMB   DIM       20
.
SCNDGNAM  DIM       40
.
. ----- Eclipse Data Variables -----
.
. HDR segment       Len    Pos
.-------------      ---    ---
.~        DIM       1        1
.HDR      DIM       3        2
HDRSEG01  DIM       8        5    * Location Id
HDRSEG02  DIM       10      13    * Certificate Id
HDRSEG03  DIM       60      23    * Sender Id
HDRSEG04  DIM       1       83    * Test/Production Flag (T/P)
. End of Segment            84
.
. OVV segment       Len    Pos
.-------------      ---    ---
.~        DIM       1        1
.OVV      DIM       3        2
OVVSEG01  DIM       3        5    * OPVTypeCde
OVVSEG02  DIM       40       8    * PatientFirstName
OVVSEG03  DIM       40      48    * PatientFamilyName
OVVSEG04  DIM       8       88    * PatientDateOfBirth
OVVSEG05  DIM       1       96    * PatientGender
OVVSEG06  DIM       9       97    * VeteranFileNumber
OVVSEG07  DIM       8      106    * PatientURNum
OVVSEG08  DIM       40     114    * PatientAddressLocality
OVVSEG09  DIM       4      154    * PatientAddressPostcode
OVVSEG10  DIM       40     158    * PatientAliasFirstName
OVVSEG11  DIM       40     198    * PatientAliasFamilyName
OVVSEG12  DIM       8      238    * ServicingProviderNum
OVVSEG13  DIM       1      246    * PatientSecondInitial
. End of Segment           247
.
.
. PROGRAM CONSTANTS
. -----------------
SP40      INIT      "                                        "
SP60      INIT      "                              ":
                    "                              "
TILDA01   INIT      "~"
TXT       INIT      ".txt"
.
.
PRGID     INIT      "IBAPMS11"
PRGNAM    INIT      "Generate Single Patient OVV Request"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
          BRANCH    EXIT,MAIN9999          * not using EDI
.
MAIN0500  CALL      GTUR0000               * keyin the U/R number
          BRANCH    EXIT,MAIN9999          * nothing entered
.
          CALL      PROC0000               * process
          BRANCH    EXIT,MAIN0500          * error
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN1000:        * yes
                          MAIN0500:        * no
                          MAIN9999         * cancel
.
MAIN1000  CALL      EXTR0000               * extract data into file
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.* Returns:    EXIT  0 = ok to continue                                      *
.*                   1 = not using eclipse                                   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P56:24,"Opening patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"pmsccdaf";
          OPEN      PMSCCDA1,"pmsccdaf"
.
          DISPLAY   *P64:24,"pmsovvaf";
          OPEN      PMSOVVA1,"pmsovvaf"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"patlcnaf";
          OPEN      PATLCNA1,"patlcnaf"
.
          DISPLAY   *P64:24,"patcrtaf";
          OPEN      PATCRTA1,"patcrtaf"
.
.>>>>>    DISPLAY   *P64:24,"pmsxxxaf";
.>>>>>    OPEN      PMSXXXA1,"pmsxxxaf"
.
          DISPLAY   *P64:24,"patpr1af";
          OPEN      PATPR1A1,"patpr1af"
          OPEN      PATPX1A1,"patpx1af"
.
          DISPLAY   *P64:24,"patgsrnf";
          OPEN      PATGSRN1,"patgsrnf"
          OPEN      PATGSRN2,"patgsrnf"
          OPEN      PATGSRN3,"patgsrnf"
          OPEN      PATGSRN4,"patgsrnf"
.
          DISPLAY   *P64:24,"pmshcpaf"
          OPEN      PMSHCPA1,"pmshcpaf"
.
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,TEN;*79,CAPPRVNO
          READ      CONTROLF,HUND10;*115,PTCNUEDI      * Using EDI
          READ      CONTROLF,HUND23;*1,PTCNOVVO:       * OVV outbound path
                                    *121,PTCNOVTP      * OVV test or prod'n
.
          COMPARE   ONE,PTCNUEDI
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Hospital not using Eclipse.  ";
            CALL      HITENTER
            GOTO      INIT9100
          ENDIF
.
          MOVE      "eclvvsrv",FILENAME
.
          MOVE      ZERO,EXIT
          GOTO      INIT9999
.
INIT9100  MOVE      ONE,EXIT
.
INIT9999  RETURN
+
.*****************************************************************************
.*                               GTUR0000              Called by: MAIN0000   *
.*                Keyin the patient U/R number                               *
.* Returns:  EXIT   0 = Valid U/R entered                                    *
.*                  1 = Nothing entered                                      *
.*****************************************************************************
.
GTUR0000  DISPLAY   *P1:4,*EF,"U/R Number     :"
          MOVE      TEN8,CCOL
          MOVE      FOUR,CVERT
          MOVE      ZERO,SRCHSYS
          MOVE      THREE,SRCHOPT
          CALL      KURN                         * get U/R
          BRANCH    EXIT,GTUR9100                * nothing entered
          BRANCH    OVRCD,GTUR9700               * U/R does not exist
.
          MOVE      PURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,GTUR9800
.
          MOVE      ZERO,EXIT
          GOTO      GTUR9999
.
GTUR9100  MOVE      ONE,EXIT
          GOTO      GTUR9999
.
GTUR9700  DISPLAY   *P1:24,*EL,*B,"U/R number not on file.  ";
          GOTO      GTUR9900
.
GTUR9800  DISPLAY   *P1:24,*EL,*B,"pmxpx2af record not on file.  ";
GTUR9900  CALL      HITENTER
          GOTO      GTUR0000
.
GTUR9999  RETURN
+
.*****************************************************************************
.*                               PROC0000              Called by: MAIN0000   *
.*        Load the OVV variables with the relevant PMI data                  *
.* Returns: EXIT   0 = Ok to continue                                        *
.*                 1 = error(s) encountered                                  *
.*****************************************************************************
.
.         Load PatientDateOfBirth
.
PROC0000  MATCH     SP8,PBDATE
          IF        @EQUAL
            MOVE      "OVV.01-PatientDateOfBirth is blank",ERORDESC
            CALL      EROR0000
            GOTO      PROC9100
          ELSE
            UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
            PACK      OVVSEG04,CDAY,CMON,CCENT,CYEAR
          ENDIF
.
.         Load PatientFamilyName
.
          PACK      OVVSEG03,PSNAME,SP30,SP10    * Surname
          MATCH     SP40,OVVSEG03
          IF        @EQUAL
            MOVE      "OVV.02-PatientFamilyName is blank",ERORDESC
            CALL      EROR0000
            GOTO      PROC9100
          ENDIF
.
.         Load PatientFirstName
.
          PACK      OVVSEG02,PMPXFNAM,SP30,SP30
          MATCH     SP40,OVVSEG02
          IF        @EQUAL
            MOVE      "OVV.03-PatientFirstName is blank",ERORDESC
            CALL      EROR0000
            GOTO      PROC9100
          ENDIF
.
.         Load PatientGender
.
          PACK      OVVSEG05,PSEX,SP30,SP30
          MATCH     SP40,OVVSEG05
          IF        @EQUAL
            MOVE      "OVV.04-PatientGender is blank",ERORDESC
            CALL      EROR0000
            GOTO      PROC9100
          ENDIF
.
.         Load VeteranFileNum
.
.         Get DVA Number using concession card details
.
          MOVE      THREE,DIM1                  * set for DVA card type
          CALL      GCCARD00                    * get DVA card details
.
          PACK      OVVSEG06,PMCDCNUM,SP30,SP30
.         MATCH     SP40,OVVSEG06
.         IF        @EQUAL
.           MOVE      "OVV.05-VeteranFileNumber is blank",ERORDESC
.           CALL      EROR0000
.           GOTO      PROC9100
.         ENDIF          
.
.         Load remaining variables
.         
          MATCH     SP70,OVVSEG06
          IF        @EQUAL
            MOVE      "PVP",OVVSEG01
          ELSE
            MOVE      "PVV",OVVSEG01     * OVVTypeCde
          ENDIF
.
          MOVE      PURNO,OVVSEG07     * PatientURNum
.
.         Load PatientSecondInitial
.
          PACK      OVVSEG13,PMPXSNAM,SP70
.
.         Load PatientAddressLocality
.
          PACK      OVVSEG08,PSUBRB,SP70
.
.         Load PatientAddressPostcode
.
          PACK      OVVSEG09,PPOST,SP70
.
          MATCH     SP70,OVVSEG09
          IF        !@EQUAL
            MATCH     SP70,OVVSEG08
            IF        @EQUAL
              MOVE      "OVV.08-PatientAddressLocality is blank",ERORDESC
              CALL      EROR0000
              GOTO      PROC9100
            ENDIF
          ENDIF
.
          MATCH     SP70,OVVSEG08
          IF        !@EQUAL
            MATCH     SP70,OVVSEG09
            IF        @EQUAL
              MOVE      "OVV.09-PatientAddressPostcode is blank",ERORDESC
              CALL      EROR0000
              GOTO      PROC9100
            ENDIF
          ENDIF
.
.         Load PatientAliasFirstName
.         Load PatientAliasFamilyName
.
          PACK      OVVSEG10,SP70,SP70
          PACK      OVVSEG11,SP70,SP70
.
          PACK      KEY115,PURNO,SP70,SP70
          CALL      RSPTGSR1
          CALL      RKPTGSR1
          IF        OVRCD=0
            MATCH     PURNO,GSRURNO
            IF        @EQUAL
              PACK      OVVSEG10,GSRGNAM,SP70
              PACK      OVVSEG11,GSRSNAM,SP70
            ENDIF
          ENDIF
.
.         Load ServicingProviderNum
.
          PACK      OVVSEG12,SP70
.
.         MATCH     SP70,PMPXRHC1
.         GOTO      PROC9050 IF EQUAL
.
.         PACK      KEY10,PMPXRHC1,SP70
.         CALL      RDPMHCP1
.         IF        OVRCD=0
.           PACK      OVVSEG12,PMHCPRV1,SP70
.         ENDIF
.
.         MOVE      CAPPRVNO,OVVSEG12
          PACK      OVVSEG12,CAPPRVNO,SP70
.
PROC9050  DISPLAY   *P1:10,"OVVTypeCde            :[",*V2LON,OVVSEG01,*HOFF,"]":
                    *P1:11,"PatientFirstName      :[",*V2LON,OVVSEG02,*HOFF,"]":
                    *P1:12,"PatientFamilyName     :[",*V2LON,OVVSEG03,*HOFF,"]":
                    *P1:13,"PatientDateOfBirth    :[",*V2LON,OVVSEG04,*HOFF,"]":
                    *P1:14,"PatientGender         :[",*V2LON,OVVSEG05,*HOFF,"]":
                    *P1:15,"VeteranFileNumber     :[",*V2LON,OVVSEG06,*HOFF,"]":
                    *P1:16,"PatientURNum          :[",*V2LON,OVVSEG07,*HOFF,"]":
                    *P1:17,"PatientSecondInitial  :[",*V2LON,OVVSEG13,*HOFF,"]":
                    *P1:18,"PatientAddressLocality :[",*V2LON,OVVSEG08,*HOFF,"]":
                    *P1:19,"PatientAddressPostCode:[",*V2LON,OVVSEG09,*HOFF,"]":
                    *P1:20,"PatientAliasFirstName:[",*V2LON,OVVSEG10,*HOFF,"]":
                    *P1:21,"PatientAliasFamilyName:[",*V2LON,OVVSEG11,*HOFF,"]":
                    *P1:22,"ServicingProviderNum:[",*V2LON,OVVSEG12,*HOFF,"]":
                    *P1:24
.
          MOVE      ZERO,EXIT
          GOTO      PROC9999
.
PROC9100  MOVE      ONE,EXIT
.
PROC9999  RETURN
+
.*****************************************************************************
.*                               EXTR0000              Called by: MAIN0000   *
.*        Extract the data into a file ready for sending to Eclipse          *
.*****************************************************************************
.
EXTR0000  PREP      OVVXFILE,FILENAME
          CLOSE     OVVXFILE,DELETE
          PREP      OVVXFILE,FILENAME
.
          CALL      IBACLOCK                   * get current date
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
          CALL      WHDR0000                   * write HDR segment
          BRANCH    EXIT,EXTR9999              * error occurred
.
          WRITE     OVVXFILE,SEQ;TILDA01,ANSO,ANSV,ANSV:
                                 OVVSEG01,OVVSEG02,OVVSEG03,OVVSEG04,OVVSEG05:
                                 OVVSEG06,OVVSEG07,OVVSEG08,OVVSEG09,OVVSEG10:
                                 OVVSEG11,OVVSEG12,OVVSEG13
.
.         Write trailer to separate each OVV request
.
          WRITE     OVVXFILE,SEQ;TILDA01,ANST,ANSL,ANSR
.
          CLOSE     OVVXFILE                     * close text file
.
          CALL      FNAM0000
          CALL      MFIL0000                     * move file to outbound dir.
.
EXTR9999  RETURN
+
.******************************************************************************
.*                             WHDR0000            Called by: PROC0000        *
.*                  Write the header segment                                  *
.* Returns: EXIT   0 = no errors occurred                                     *
.*                 1 = one or more errors occurred                            *
.******************************************************************************
.
.         Get the first active location - it is irrelevant which location it
.         is, even for a multi-hospital environment.
.
WHDR0000  MOVE      SP8,KEY8
          CALL      RSPTLCN1                     * position at start of file
WHDR0500  CALL      RKPTLCN1                     * read next record
          IF        OVRCD = 1
            MOVE      "HDR.01-Current Location not set up",ERORDESC
            CALL      EROR0000
            GOTO      WHDR9100
          ENDIF
.
          MATCH     ANSA,PTLNACTV                * active location ?
          GOTO      WHDR0500 IF NOT EQUAL        * no - ignore record
.
.         We have an active location
.
          MATCH     SP8,PTLNLOCN                 * blank location ?
          GOTO      WHDR0500 IF EQUAL            * yes - ignore record
.
          MOVE      PTLNLOCN,HDRSEG01            * set location id
.
.         Get the certificate that covers today
.
WHDR2000  PACK      KEY16,HDRSEG01,CURRDATE
          CALL      RDPTCTI1                     * record found for today ?
          COMPARE   ZERO,OVRCD
          GOTO      WHDR3000 IF EQUAL            * yes - use this certificate id
.
          CALL      RPPTCTI1                     * no - read previous record
          IF        OVRCD = 0
            MATCH     CURRDATE,PTCITDTE          * within date range ?
            GOTO      WHDR3000 IF NOT LESS       * yes - use this certificate id
          ENDIF
.
          MOVE      "HDR.02-Current Certificate not available",ERORDESC
          CALL      EROR0000
          GOTO      WHDR9100
.
WHDR3000  MATCH     SP10,PTCIIDEN
          IF        @EQUAL
            MOVE      "HDR.03-Certificate Identifier blank",ERORDESC
            CALL      EROR0000
            GOTO      WHDR9100
          ELSE
            MOVE      PTCIIDEN,HDRSEG02          * load certificate identifier
          ENDIF
.
          MATCH     SP60,PTCISNID
          IF        @EQUAL
            MOVE      "HDR.04-Sender Id blank",ERORDESC
            CALL      EROR0000
            GOTO      WHDR9100
          ELSE
            MOVE      PTCISNID,HDRSEG03          * load sender id
          ENDIF
.
          MATCH     SP1,PTCNOVTP
          IF        @EQUAL
            MOVE      "HDR.05-Test/Production parameter blank",ERORDESC
            CALL      EROR0000
            GOTO      WHDR9100
          ELSE
            MOVE      PTCNOVTP,HDRSEG04
          ENDIF
.
          WRITE     OVVXFILE,SEQ;TILDA01,ANSH,ANSD,ANSR:
                                 HDRSEG01,HDRSEG02,HDRSEG03,HDRSEG04
          MOVE      ZERO,EXIT
          GOTO      WHDR9999
.
WHDR9100  MOVE      ONE,EXIT
.
WHDR9999  RETURN
+
.
GETSVAR   RETURN
+
.*****************************************************************************
.*                               EROR0000              Called by: PROC0000   *
.*        An error has occurred due to insufficient data for a valid OVV,    *
.*        so write the error back to pmsxxxaf and finish.                    *
.*****************************************************************************
.
EROR0000  PACK      ERORDESC,ERORDESC,SP40
.
.>>>>>    Load data fields
.>>>>>    CALL      WRPMXXX1
.
EROR9999  RETURN
+
.*****************************************************************************
.*                               MFIL0000        Called by: PROC0000         *
.*       Move extract file from 'cd' directory to OVV outbound directory     *
.*****************************************************************************
.
MFIL0000  MOVE      ZERO,HLEF
          CALL      GETSCR00
          STRIP     PTCNOVVO
          CLEAR     CMDLINE
          APPEND    "mv ",CMDLINE
          APPEND    FILENAME,CMDLINE
          APPEND    ".txt",CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    PTCNOVVO,CMDLINE
          APPEND    LONGFNAM,CMDLINE
          APPEND    TXT,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          CALL      PUTSCR00
.
          MATCH     "0       ",TASKID
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Unable to move extract file.  ";
            CALL      HITENTER
            MOVE      ONE,EXIT
          ELSE
            MOVE      ZERO,EXIT
          ENDIF
.
MFIL9999  RETURN
+
.*****************************************************************************
.*                               FNAM0000                                    *
.*           Get the next OPV batch filename                                 *
.*****************************************************************************
.
FNAM0000  MOVE      "123",PRXCODE                * System Lock Sector 123
          CALL      GETSLK00                     * Get System Lock-Sector 123
.
          READ      CONTROLF,HUND23;*135,PTCNOVBD,*143,PTCNOVBC
.
.         If the ovv batch date field is blank, then update it with
.         today's date and set the ovv batch count to 1.
.
          REP       " 0",PTCNOVBD
          MATCH     "00000000",PTCNOVBD
          IF        @EQUAL
            MOVE      CURRDATE,PTCNOVBD
            MOVE      "0002",PTCNOVBC
            PACK      LONGFNAM,CURRDATE,ZERO,ZERO,ZERO,ONE
            REP       " 0",LONGFNAM
            GOTO      FNAM8000
          ENDIF
.
.         If the ovv batch date is less than today's date, then update it with
.         today's date and set the ovv batch count to 1.
.
          MATCH     CURRDATE,PTCNOVBD            * opv batch date < curr. date ?
          IF        @LESS
            MOVE      CURRDATE,PTCNOVBD
            MOVE      "0002",PTCNOVBC
            PACK      LONGFNAM,CURRDATE,ZERO,ZERO,ZERO,ONE
            GOTO      FNAM8000
          ENDIF
.
.         The ovv batch date is the same as today's date, so increment
.         the count by 1 and update.
.
          MOVE      ZERO,FORM4
          MOVE      PTCNOVBC,FORM4
          PACK      LONGFNAM,PTCNOVBD,FORM4
          REP       " 0",LONGFNAM
          ADD       ONE,FORM4
          MOVE      FORM4,PTCNOVBC
.
FNAM8000  WRITAB    CONTROLF,HUND23;*135,PTCNOVBD,*143,PTCNOVBC
.
          CALL      RELSLK00                    * Release System Lock-Sector 123
.
FNAM9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       CALCAGE
          INC       CLPATMAS
          INC       CLPMSHCP
          INC       NZHISIIO
          INC       NZIBSRCH
          INC       PATCOMN1
          INC       PATSNDX
          INC       PATSNX2
.
          INC       BOKRC1IO/INC
          INC       NHIMASIO/INC
          INC       OUTPREIO/INC
          INC       PATCODIO/INC            * Codes file
          INC       PATCRTIO/INC
          INC       PATGSRIO/INC
          INC       PATLCNIO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PATPR1IO/INC
          INC       PMSHCPIO/INC
          INC       PMSOVVIO/INC
          INC       PMSPX2IO/INC
          INC       PMSVX1IO/INC
          INC       PMSCCDIO/INC
.>>>>>>   INC       PMSXXXFD/INC
          INC       GCCARD00/PBL

