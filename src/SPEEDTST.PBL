.***************************************************************************
.* System    :   Web
.* Program   :   SPEEDTST                                                  *
.* Desc      :   Test Database IO
.***************************************************************************
.* Date      :   18/01/2019                                                *
.* Author    :   T.H.BOYER (From TESTDBIO by B.G.Ackland  11/20018)        *
.* Function  :   Testing MS SQL Performance
.* Modifications  :                                                        *
.* 17/03/20221 Jill Parkinson                         
.*             Added more info for use of speed testing read/write/update  *
.* 17/05/19 TESTDBIX with 1000 & 10 records FULLTIME
.* 17/05/19 Use pmshcpaf & pmshkiaf
.***************************************************************************
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       PATCODFD/INC                 * Codes
          INC       PMSHCPFD/INC                 * HCP Table
          INC       PMSHKIFD/INC                 * HCP Keyword Table
          INC       PMSVX1FD/INC                 * Visit extension  
          INC       EMRLOCFD/INC                 * Visit extension  
          INC       EMRVISFD/INC                 * Visit extension  
          INC       PATMI1FD/INC                 * Visit extension  
.
. LOCAL VARIABLE DEFINITION
. -------------------------
COUNT     FORM      8
DIRECTN   DIM       1
FROMDATE  DIM       8
MAXREC    FORM      8
CTIMEXIS  DIM       11
SAVEKEY8  DIM       8
.
PRGID     INIT      "SPEEDTST"
PRGNAM    INIT      "Database IO Speed Test"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN1000  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
.
          PERFORM   COPTION,PRIN0000,PRIN0000,PRIN0000,PRIN0000,PRIN0000:
                            VIST0000,DISC0000,DISC0000,VXTN0000
.
          GOTO      MAIN1000
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
          OPEN      PMSHCPA1,"pmshcpaf"
          OPEN      PMSHCPA1,"pmshcpaf"
          OPEN      PMSHCPA2,"pmshcpaf"
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"pmsvx1af";
          OPEN      PMSVX1A2,"pmsvx1af"
          OPEN      PMSVX1A1,"pmsvx1af"
          OPEN      PATMI1A2,"patmi1af"
          OPEN      EMRVISA1,"emrvisaf"
          OPEN      EMRVISA7,"emrvisaf"
          OPEN      EMRLOCA1,"emrlocaf"
          OPEN      PATCODE1,"patcodes"
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"pmshkiaf";
          OPEN      PMSHKIA1,"pmshkiaf"
          OPEN      PMSHKIA2,"pmshkiaf"
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run report                              *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION  1 = Standard Report selected                        *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Long Test (10000) - Including Write/Update/Delete - do not run in production":
                    *P1:6,*V2LON,TWO,*HOFF,". Short Test (10)":
                    *P1:7,*V2LON,THREE,*HOFF,". No write/update/delete (10000)":
                    *P1:8,*V2LON,FOUR,*HOFF,". No write/update/delete (10)":
                    *P1:9,*V2LON,FIVE,*HOFF,". Read lock emrvisaf         ":
                    *P1:10,*V2LON,SIX,*HOFF,". Loop visits from date  ":
                    *P1:11,*V2LON,SEVEN,*HOFF,". Loop patmi1af dastat(10)":
                    *P1:12,*V2LON,EIGHT,*HOFF,". Loop patmi1af dastat(10000)":
                    *P1:13,*V2LON,NINE,*HOFF,". Loop pmsvx1af (10000)"
.
OPTN0500  KEYIN     *P1:14,*EL,"Select Option : ":
                    *P17:14,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000,OPTN9100,OPTN9000,OPTN9100:   * run report
                            OPTN9100,OPTN9000,OPTN9100,OPTN9000:
                            OPTN9000
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      "10000",MAXREC
          MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
.*THB OPTN9100  MOVE      "100",MAXREC
OPTN9100  MOVE      "10",MAXREC
          MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               PRIN0000              Called by: MAIN0000   *
.*                  Process the records for printing                         *
.*****************************************************************************
.
PRIN0000  CALL      IBACLOCK
          IF        COPTION=5
            GOTO      PRIN6000
          ENDIF
          MOVE      ZERO,COUNT
          CLOCK     FULLTIME,CTIMEXIS
          DISPLAY   *P25:11,"Started looping pmshcpaf ";
          DISPLAY   *P1:12,*EF:
                    *P1:12,"Forward Scan.",*P25:12,CTIMEXIS;
          PACK      KEY10,SP70
          CALL      RSPMHCP1                     * READ PMSHCPA1
PRIN0500  CALL      RKPMHCP1                     * READKS PMSHCPA1
          BRANCH    OVRCD,PRIN1000               * eof - finished
          PACK      KEY25,PMHCHCPC,SP70
          CALL      RSPMHKI1
PRIN0600  CALL      RKPMHKI1
          BRANCH    OVRCD,PRIN0500
          MATCH     PMHCHCPC,PMHKHCPC
          GOTO      PRIN0500 IF NOT EQUAL
          ADD       ONE,COUNT
          IF        COUNT<MAXREC
            GOTO      PRIN0600                   * THB was PRIN0600 500
          ENDIF
.
PRIN1000  CLOCK     FULLTIME,CTIMEXIS
          DISPLAY   *P38:12,"Record Count ",COUNT;
          DISPLAY   *P1:13,"Reverse Scan.",*P25:13,CTIMEXIS;
          MOVE      ZERO,COUNT
          PACK      KEY10,Z70
          CALL      RSPMHCP1                     * READ PMSHCPA1 
PRIN1500  CALL      RPPMHCP1                     * READKP PMSHCPA1
          BRANCH    OVRCD,PRIN2000               * eof - finished
.
          PACK      KEY25,PMHCHCPC,Z70
          CALL      RSPMHKI1
PRIN1600  CALL      RPPMHKI1
          BRANCH    OVRCD,PRIN1500
          MATCH     PMHCHCPC,PMHKHCPC
          GOTO      PRIN1500 IF NOT EQUAL
          ADD       ONE,COUNT
          IF        COUNT<MAXREC
            GOTO      PRIN1600            * get next record THB was PRIN1600 500
          ENDIF
.
PRIN2000  CLOCK     FULLTIME,CTIMEXIS
          DISPLAY   *P38:13,"Record Count ",COUNT;
          DISPLAY   *P1:14,"Forward Scan by Surname",*P25:14,CTIMEXIS;
          MOVE      ZERO,COUNT
          MOVE      "K         ",KEY10
          PACK      KEY80,KEY10,SP70
          CALL      RSPMHCP1                     * READ PMSHCPA1
PRIN2500  CALL      RKPMHCP1                     * READKS PMSHCPA1
          BRANCH    OVRCD,PRIN3000               * eof - finished
.
          PACK      KEY25,PMHCHCPC,SP70
          CALL      RSPMHKI1
PRIN2600  CALL      RKPMHKI1
          BRANCH    OVRCD,PRIN2500
          MATCH     PMHCHCPC,PMHKHCPC
          GOTO      PRIN2500 IF NOT EQUAL
          ADD       ONE,COUNT
          IF        COUNT<MAXREC
            GOTO      PRIN2600             * get next record THB was PRIN2600 500
          ENDIF
.
PRIN3000  CLOCK     FULLTIME,CTIMEXIS
          DISPLAY   *P38:14,"Record Count ",COUNT;
          DISPLAY   *P1:15,"Reverse Scan by Surname",*P25:15,CTIMEXIS;
          MOVE      ZERO,COUNT
          MOVE      "K         ",KEY10
          PACK      KEY80,KEY10,Z70
          CALL      RSPMHCP1                     * READ PMSHCPA1
PRIN3500  CALL      RPPMHCP1                     * READKP PMSHCPA1  
          BRANCH    OVRCD,PRIN4000               * eof - finished
.
          PACK      KEY25,PMHCHCPC,Z70
          CALL      RSPMHKI1
PRIN3600  CALL      RPPMHKI1
          BRANCH    OVRCD,PRIN3500
          MATCH     PMHCHCPC,PMHKHCPC
          GOTO      PRIN3500 IF NOT EQUAL
          ADD       ONE,COUNT
          IF        COUNT<MAXREC
            GOTO      PRIN3600           * get next record THB was PRIN3600 500
          ENDIF
.
PRIN4000  CLOCK     FULLTIME,CTIMEXIS
          DISPLAY   *P38:15,"Record Count ",COUNT;
          BRANCH    COPTION,PRIN4050,PRIN4050,PRIN4700,PRIN4700,PRIN6000
.
PRIN4050  DISPLAY   *P1:16,"Copy Records ",*P25:16,CTIMEXIS;
          MOVE      ZERO,COUNT
          PACK      KEY3,Z70
          PACK      KEY80,SP70,SP70
          CALL      RSPMHCP2                     * READ PMSHCPA2
PRIN4100  CALL      RKPMHCP2                     * READKS PMSHCPA2 
          BRANCH    OVRCD,PRIN4200               * eof - finished
          ADD       ONE,COUNT
          PACK      KEY10,KEY3,PMHCHCPC,SP70
          PACK      PMHCHCPC,KEY10
          CALL      RDPMHCP1
          IF        OVRCD=1
            CALL      WRPMHCP1
          ENDIF
          ADD       ONE,COUNT
          IF        COUNT<MAXREC
            GOTO      PRIN4100                     * get next record
          ENDIF
.
PRIN4200  CLOCK     FULLTIME,CTIMEXIS
          DISPLAY   *P38:16,"Record Count ",COUNT;
          DISPLAY   *P60:16,"Finished ",*P70:16,CTIMEXIS 
          DISPLAY   *P1:24,*EL;
          CALL      HITENTER
          CLOCK     FULLTIME,CTIMEXIS
          DISPLAY   *P1:17,"Update Records ",*P25:17,CTIMEXIS;
          PACK      KEY10,KEY3,SP70
          CALL      RSPMHCP1                     * READ PMSHCPA1
PRIN4300  CALL      RKPMHCP1                     * READKS PMSHCPA1
          BRANCH    OVRCD,PRIN4500               * eof - finished
          MATCH     KEY3,PMHCHCPC
          GOTO      PRIN4500 IF NOT EQUAL
          MOVE      PMHCGNAM,KEY35
          MOVE      PMHCSNAM,PMHCGNAM
          MOVE      KEY35,PMHCSNAM
          CALL      UPPMHCP1
          GOTO      PRIN4300
.
PRIN4500  CLOCK     FULLTIME,CTIMEXIS
          DISPLAY   *P38:17,"Record Count ",COUNT;
          DISPLAY   *P60:17,"Finished ",*P70:17,CTIMEXIS
          DISPLAY   *P1:24,*EL;
          CALL      HITENTER
          CLOCK     FULLTIME,CTIMEXIS
          DISPLAY   *P1:18,"Delete Records ",*P25:18,CTIMEXIS;
          PACK      KEY10,KEY3,SP70
          CALL      RSPMHCP1                     * READ PMSHCPA1
PRIN4600  CALL      RKPMHCP1                     * READKS PMSHCPA1 
          BRANCH    OVRCD,PRIN4700               * eof - finished
          MATCH     KEY3,PMHCHCPC
          GOTO      PRIN4700 IF NOT EQUAL
          PACK      KEY10,PMHCHCPC
          CALL      DEPMHCP1
          DISPLAY   *P38:18,"Record Count ",COUNT;
          GOTO      PRIN4600
.
PRIN4700  CLOCK     FULLTIME,CTIMEXIS
          DISPLAY   *P1:19,"Complete       ",*P25:19,CTIMEXIS;
          CALL      HITENTER
          GOTO      PRIN9999
.
PRIN6000  
..PACK      KEY8,SP1,SP1,FOUR,ONE,THREE,ZERO,EIGHT,TWO,SP70
.         CALL      RLEMVIS1
.         BRANCH    OVRCD,PRIN6100,PRIN6200
.         DISPLAY   *P1:18,"Readlock       ",KEY8,*P25:18,CTIMEXIS;
.         CALL      HITENTER
.
.         MOVE      "C7 ",EMVILOCN
.         CALL      UPEMVIS1
.         DISPLAY   *P1:19,"Updated C7     ",KEY8,*P25:19,CTIMEXIS;
.         CALL      HITENTER
.         CALL      ULEMVIS1
......
          PROC      EMRCHK00
.
          PACK      KEY3,ANSC,EIGHT,SP70
          CALL      RDEMLOC1
.
          PACK      KEY11,ANSC,EIGHT,SP70    *** Broken
....      PACK      KEY11,SP70             *** OK
          CALL      RSEMVIS7
          CALL      RKEMVIS7
          DISPLAY   *P1:18,"Read emrvisa7  ",KEY11,*P25:18,CTIMEXIS;
          CALL      HITENTER
.
          PACK      KEY8,SP1,SP1,FOUR,ONE,THREE,ZERO,EIGHT,TWO,SP70
          CALL      RLEMVIS1
          BRANCH    OVRCD,PRIN6100,PRIN6200
.
          DISPLAY   *P1:18,"Readlock emrvisa1  ",KEY8;
          CALL      HITENTER
          PACK      EMVILOCN,ANSC,EIGHT,SP70
          CALL      UPEMVIS1
          CALL      ULEMVIS1                     * Unlock emr visit record
.
          DISPLAY   *P1:20,"Unlocked       ",*P25:20,CTIMEXIS;
          CALL      HITENTER
          GOTO      PRIN9999
.
PRIN6100  DISPLAY   *P1:19,"Not found     ",KEY8,*P25:19,CTIMEXIS;
          CALL      HITENTER
          GOTO      PRIN9999
.
PRIN6200  DISPLAY   *P1:19,"Locked    ",KEY8,*P25:19,CTIMEXIS;
          CALL      HITENTER
          GOTO      PRIN9999
.
PRIN9500  DISPLAY   *P1:23,*EF:
                    *P1:24,"Complete.  ";
          CALL      HITENTER
.
PRIN9999  RETURN
+
.*****************************************************************************
.*                               VIST0000              Called by: MAIN0000   *
.*                  Loop visits                                              *
.*****************************************************************************
.
VIST0000  CALL      IBACLOCK
          MOVE      ZERO,COUNT
          MOVE      ANSF,DIRECTN
          KEYIN     *P1:11,*EL,"Forwards or Backwards (F or B) ":
                    *P40:11,*V2LON,DIRECTN
.
          CALL      KDAT0000
          BRANCH    EXIT,VIST9999
.
          CALL      IBACLOCK
          CLOCK     FULLTIME,CTIMEXIS
.
          DISPLAY   *P1:16,"Started looping pmsvx1af ",CTIMEXIS;
          PACK      KEY16,FROMDATE,SP70
          CALL      RSPMVX12                     * READ PMSVX1A2
.
          MATCH     ANSB,DIRECTN
          GOTO      VIST0600 IF EQUAL
.
VIST0500  CALL      RKPMVX12                     * READKS PMSVX1A2
          BRANCH    OVRCD,VIST1000               * eof - finished
          ADD       ONE,COUNT
          DISPLAY   *P1:18,"Forward Record ",PMVXVSDT," Record Count ",COUNT;
          IF        COUNT<MAXREC
            GOTO      VIST0500              
          ENDIF
          GOTO      VIST1000              
.
VIST0600  CALL      RPPMVX12
          BRANCH    OVRCD,VIST1000               * eof - finished
          ADD       ONE,COUNT
          DISPLAY   *P1:18,"Backwards Record ",PMVXVSDT," Record Count ",COUNT;
          IF        COUNT<MAXREC
            GOTO      VIST0600              
          ENDIF
          GOTO      VIST1000              
.
VIST1000  CALL      IBACLOCK
          CLOCK     FULLTIME,CTIMEXIS
          DISPLAY   *P1:20,"Complete       ",*P25:20,CTIMEXIS 
          CALL      HITENTER
          GOTO      VIST9999
.
VIST9999  RETURN
+
.*****************************************************************************
.*                               DISC0000              Called by: MAIN0000   *
.*                  Loop patmi1af                                            *
.*****************************************************************************
.
DISC0000  CALL      IBACLOCK
          MOVE      ZERO,COUNT
          MOVE      ZERO,F1
          MOVE      ZERO,KEY1
.         KEYIN     *P1:13,*EL,"Status=":
.                   *P25:13,*V2LON,KEY1
.
         CALL      IBACLOCK
          CLOCK     FULLTIME,CTIMEXIS
.
          DISPLAY   *P1:16,"Started looping patmi1af ",CTIMEXIS;
DISC0200  ADD       ONE,F1
          IF        F1>5
            MOVE     ZERO,F1
            GOTO     DISC0200
          ENDIF
          MOVE      F1,KEY1
          PACK      KEY9,KEY1,SP70
          CALL      RDSMISS2
DISC0500  CALL      RDKMISS2
          BRANCH    OVRCD,DISC1000               * eof - finished
.         MATCH     DASTAT,KEY1
.         GOTO      DISC1000 IF NOT EQUAL
          ADD       ONE,COUNT
          DISPLAY   *P1:18,"DASTAT=",DASTAT,"Admission:",DAADMNO," Record Count ",COUNT;
          IF        COUNT<MAXREC
            GOTO      DISC0200
          ENDIF
          GOTO      DISC1000
.
DISC1000  CALL      IBACLOCK
          CLOCK     FULLTIME,CTIMEXIS
          DISPLAY   *P1:20,"Complete       ",*P25:20,CTIMEXIS
          CALL      HITENTER
          GOTO      DISC9999
.
DISC9999  RETURN
+
.********************************************************************
.*                          KDAT0000                                *
.*  Keyin date                                                      *
.********************************************************************
KDAT0000  MOVE      SP70,FROMDATE
          DISPLAY   *P1:12,"Keyin the start date :";
          CALL      IBACLOCK
          MOVE      CCC,CCENT
          MOVE      CYY,CYEAR
          MOVE      CMM,CMON
          MOVE      CDD,CDAY
          MOVE      "38",CCOL
          MOVE      "12",CVERT
          CALL      KEYDATE
          BRANCH    OVRCD,KDAT9999
.
          PACK      FROMDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",FROMDATE
KDAT9999  RETURN
+
.------------------------------------------------------------
. Procedure that includes EMRVISFD
.------------------------------------------------------------
           DEFPROC  EMRCHK00
 
           INC      EMRVISFD/INC
 
EMRCHK10  OPEN     EMRVISA1,"emrvisaf"
 
           GOTO     EMRCHK99
 
           INC      EMRVISIO/INC
           INC      EMRLOCIO/INC
           INC      IBAOVRIO/INC
.
EMRCHK99  ENDPROC
+
.------------------------------------------------------------
. Procedure that includes PATVISFD
.------------------------------------------------------------
.         DEFPROC  PATCHK00
.
.         INC      PATVISFD/INC
.
.PATCHK10  OPEN     PATVISA1,"patvisaf"
.
.          GOTO     PATCHK99
.
.          INC      PATVISIO/INC
.          INC      IBAOVRIO/INC
.
.PATCHK99  ENDPROC
+
.*****************************************************************************
.*                               VXTN0000              Called by: MAIN0000   *
.*                  Loop visits extn                                         *
.*****************************************************************************
.
VXTN0000  CALL      IBACLOCK
          MOVE      ZERO,COUNT
.
          CALL      IBACLOCK
          CLOCK     FULLTIME,CTIMEXIS
.
          DISPLAY   *P1:16,"Started looping pmsvx1af"
          DISPLAY   *P1:17,"Forward Scan Start ",CTIMEXIS;
.
          PACK      KEY8,SP70
          CALL      RSPMVX11                     * READ PMSVX1A2
VXTN0500  CALL      RKPMVX11                     * READKS PMSVX1A2
          BRANCH    OVRCD,VXTN1000               * eof - finished
.
          ADD       ONE,COUNT
          MOVE      PMVXVISN,SAVEKEY8             * Save 1000th visit number
          DISPLAY   *P42:17,"Record Count ",COUNT;
          IF        COUNT<MAXREC
            GOTO      VXTN0500
          ENDIF
.
VXTN1000  MOVE      ZERO,COUNT
          CALL      IBACLOCK
          CLOCK     FULLTIME,CTIMEXIS
          DISPLAY   *P1:18,"Reverse  Scan Start ",CTIMEXIS;
          PACK      KEY8,Z70
          CALL      RSPMVX11 
VXTN1100  CALL      RPPMVX11
          BRANCH    OVRCD,VXTN2000               * eof - finished
.
          ADD       ONE,COUNT
          DISPLAY   *P42:18,"Record Count ",COUNT;
          IF        COUNT<MAXREC
            GOTO      VXTN1100
          ENDIF
.
VXTN2000  MOVE      ZERO,COUNT
          CALL      IBACLOCK
          CLOCK     FULLTIME,CTIMEXIS
          DISPLAY   *P1:19,"Forward Scan 10000th Record ",CTIMEXIS;
          PACK      KEY8,SAVEKEY8,SP70
          CALL      RSPMVX11
VXTN2100  CALL      RKPMVX11
          BRANCH    OVRCD,VXTN3000               * eof - finished
.
          ADD       ONE,COUNT
          DISPLAY   *P42:19,"Record Count ",COUNT;
          IF        COUNT<MAXREC
            GOTO      VXTN2100
          ENDIF
.
VXTN3000  MOVE      ZERO,COUNT
          CALL      IBACLOCK
          CLOCK     FULLTIME,CTIMEXIS
          DISPLAY   *P1:20,"Reverse  Scan 10000th Record ",CTIMEXIS;
          PACK      KEY8,SAVEKEY8,Z70
          CALL      RSPMVX11
VXTN3100  CALL      RPPMVX11
          BRANCH    OVRCD,VXTN9000               * eof - finished
.
          ADD       ONE,COUNT
          DISPLAY   *P42:20,"Record Count ",COUNT;
          IF        COUNT<MAXREC
            GOTO      VXTN3100
          ENDIF
.
VXTN9000  CALL      IBACLOCK
          CLOCK     FULLTIME,CTIMEXIS
          DISPLAY   *P1:21,"Complete       ",*P30:21,CTIMEXIS
          CALL      HITENTER
          GOTO      VXTN9999
.
VXTN9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       PATCODIO/INC
          INC       EMRVISIO/INC
          INC       EMRLOCIO/INC
          INC       PMSHCPIO/INC
          INC       PMSHKIIO/INC
          INC       PMSVX1IO/INC
          INC       PATMI1IO/INC
+
