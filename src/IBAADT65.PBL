.*******************************************************************************
.* System         :  PMI                                                       *
.* Program        :  IBAADT65                                                  *
.* Description    :  Upload RGO Birth and Death Data                           *
.*******************************************************************************
.* Date           :  01/11/2012                                                *
.* Author         :  Patrick Adair                                             *
.* Function       :  Upload RGO Birth and Death Data from Tab Delimited files  *
.* Modifications  :                                                            *
.*                                                                             *
.*******************************************************************************
.* V11.03.01 12.07.2023  DA Sarkies    TSK 0927256                             *
.*           Added ACODETMP to hold ACODE value for RGO Death updates          *
.*******************************************************************************
.* V11.02.01 01/04/2022  Thanh T       TSK 0903453                             *
.*           Added SPPXUCC4, SPPXUCC5, SPPXATF1 and SPPXATF2 for               *
.*           DEATHAUD changes                                                  *
.* V11.01.02 20/12/2021  Thanh T        TSK 0877055                            *
.*           Added DEATHATD for common variables to be used in DEATHAUD        *
.* V11.01.01 15/09/2021  Thanh T       TSK 0889595                             *
.*           Recompiled for PMSDAUFD/DEATHAUD changes                          *
.*******************************************************************************
.* V11.00.02  23/06/2020 Peter Vela     Task 0878550                           *
.*                       Recompiled for DEATHAUD                               *
.* V11.00.01  10/06/2020 Peter Vela     Task 0878550                           *
.*                       Recompiled for DEATHAUD                               *
.* V10.14.01  13/06/2019 Peter Vela     Task 0871798                           *
.*                       Recompiled for DEATHAUD                               *
.* V10.13.01  13/08/2018 Peter Vela     Task 0845218                           *
.*                       Recompiled for DEATHAUD                               *
.* V10.12.01  11/07/2018 Peter Vela     TSK 0845218                            *
.*                       Recompiled for DEATHAUD                               *
.* V10.08.03  07/10/2016 Steve Armstrong  TSK 0822315                          *
.*                       Fixed GOTO statements in UDFLD000 which were          *
.*                       sending the code back to UBFLD210/UBFLD260 after a    *
.*                       successful call to VSTR0000, instead of sending it to *
.*                       UDFLD210/UDFLD260.                                    *
.* V10.08.02  04/08/2016 Steve Armstrong  TSK 0822315                          *
.*                       Modified check for special characters in names -      *
.*                       VSTR0000 to allow characters in the Octal range of    *
.*                       040 to 0176 instead of just anything below 0178.      *
.* V10.08.01  13/05/2016 Ebon Clements  TSK 0297535                            *
.*                       Added check for special characters in names - VSTR0000*
.*******************************************************************************
.* V10.06.03  18/05/2015 Patrick Adair  CAR 208170                             *
.*                       Recompiled for changes to UPDUR                       *
.* V10.06.02  15/04/2015 Peter Vela     CAR 312723                             *
.*                       Recompiled for DEATHAUD                               *
.* V10.06.01  12/03/2015 Steve Armstrong  CAR 314108                           *
.*                       Removed reference to PATCGPFD (No Longer in use)      *
.*******************************************************************************
.* V10.05.01  12/02/2015 Patrick Adair  CAR 208170                             *
.*                       Amended call to Death Audit table and include new     *
.*                       HCP save variables as SVMAS variables are too small   *
.*                       for new fields and have not been maintained to ensure *
.*                       file consistency                                      *
.*******************************************************************************
.* V10.04.02  26/03/2014 J.Tan            CAR 279251                           *
.*                       Mods to write to Death audit file                     *
.* V10.04.01  24/03/2014 Ebon Clements    CAR 296129                           *
.*                       Added merged U/R test to ensure death details are     *
.*                       not updated on merged patients. TRYD1000              *
.*******************************************************************************
.* V10.03.15  25/10/2013 Steve Armstrong  CAR 294144                           *
.*                       Mods to not load the U/R number (WRKURNUM), after a   *
.*                       match has been found in TRYD0000, until the patient   *
.*                       given names have also been matched.                   *
.* V10.03.14  15/10/2013 Steve Armstrong  CAR 269144                           *
.*                       Major changes to handle multipe births.  This included*
.*                       changing the work temp file and indexes, changing the *
.*                       structure of MAIN0000, loading the upload data first  *
.*                       before doing any matching, adding the CDUP000 routine *
.*                       to determine duplicate births (before any matching)   *
.*                       and restructing the print routine.                    *
.* V10.03.13  26/09/2013 Steve Armstrong  CAR 269144                           *
.*                       Mods to look for a match on patgsrnf in TRYB0000      *
.*                       & TRYD0000 before looping through patma1af using DOB  *
.*                       index.                                                *
.* V10.03.12  23/09/2013 Steve Armstrong  CAR 269144                           *
.*                       Mods to fix check of discharge date against date of   *
.*                       death (previously was erroring when dates were the    *
.*                       same).                                                *
.* V10.03.11  11/09/2013 Steve Armstrong  CAR 269144                           *
.*                       Mods when processing birth records to check for       *
.*                       multiple births with the same date, linked to         *
.*                       the mother, and if found, reject the records as       *
.*                       duplicate births so that they can be subsequently     *
.*                       processed manually.                                   *
.* V10.03.10  23/08/2013 Steve Armstrong  CAR 269144                           *
.*                       Mods to only match address line 4 (state) if          *
.*                       populated in webPAS. Also, if the webPAS value is     *
.*                       blank, then update the field using the RGO state.     *
.* V10.03.09  20/08/2013 Steve Armstrong  CAR 269144                           *
.*                       Fixed temp file so that index is based on a DIM field *
.*                       instead of a FORM field (WRKRTYPE).                   *
.*                       Fixed Start position of WRKERROR in temp file         *
.*                       definition to be 125 instead of 123 and also EOR to be*
.*                       175 instead of 173.                                   *
.*                       Fixed matching of DOB for 5 days prior to DOB so that *
.*                       the end date is the day prior to the birth date (as   *
.*                       the birth date has already been matched in the 5 days *
.*                       after the DOB).                                       *
.* V10.03.08  26/07/2013 Steve Armstrong  CAR 287787                           *
.*                       Recompiled for changes to DGCLICUA.                   *
.* V10.03.07  30/06/2013 Davin             CAR 283202                          *
.*                       Recompiled for changes to hl7 messaging               *
.* V10.03.06  13/05/2013 Patrick Adair                              CAR 269114 *
.*                       Read Control File to check Audit on patma1af          *
.* V10.03.05  01/05/2013 Steve Armstrong  CAR 284376                           *
.*                       Recompiled for changes to DGCLICUP.                   *
.* V10.03.04  26/04/2013 Sandra Barcham                             CAR 269144 *
.*                       Use C instead or R for Death Notification             *
.* V10.03.03  17/04/2013 Patrick Adair                              CAR 267329 *
.*                       Updated UPDF7000 to call UPDUR                        *
.* V10.03.02  03/04/2013 Davin                                      CAR 270648 *
.*                       Recompiled for changes to HL7 messaging includes      *
.* V10.03.01  19/12/2012 Patrick Adair                              CAR 261630 *
.*                       Removed port number from temp file name               *
.* V10.03.00  10/12/2012 Patrick Adair                              CAR 269144 *
.*                       Initial Program Release                               *
.*******************************************************************************
.
          INC       STD001FD
.
          INC       BOKRC1FD/INC
          INC       IBACONFD/INC
          INC       IBASEQFD/INC
          INC       DEATHATD/INC
          INC       NHIETHFD/INC
          INC       NHIMASFD/INC
          INC       PATAK1FD/INC
          INC       PATAM1FD/INC
          INC       PATCALAG/INC
          INC       PATCODFD/INC
          INC       PATCOMM/INC
          INC       PATCONFD/INC
          INC       PATDHEAD/INC
          INC       PATDSCFD/INC
          INC       PATDTHFD/INC
          INC       PATGSRFD/INC
          INC       PATINVFD/INC
          INC       PATLINFD/INC
          INC       PATLOCFD/INC
          INC       PATMA1FD/INC
          INC       PATMI1FD/INC
          INC       PATNIDFD/INC
          INC       PATPA1FD/INC
          INC       PATPR1FD/INC
          INC       PATRE1FD/INC
.         INC       PATRE1TD/INC
          INC       PATURAFD/INC
          INC       PATVISFD/INC
          INC       PMSCURFD/INC
          INC       PMSPX2FD/INC
          INC       PMSVX1FD/INC
          INC       PMSDAUFD/INC
          INC       TFILEVAR/INC
          INC       WEBSECFD/INC
          INC       WEBERRFD/INC
.
.*******************************************************************************
.*                           RGO Births Upload file                            *
.*******************************************************************************
.
BIRTHTXT  FILE       HL7, FIXED=4000
.
.Name     Type      Size  Description                     Field
.----     ----      ----  -----------                     -----
BXXXXSEX  DIM       1     Sex                                 1
BXXSNAME  DIM       40    Patient Surname                     2
BXXGNAME  DIM       80    Patient Given Names                 3
BXXBDATE  DIM       10    Date of Birth (dd/mm/ccyy)          4
BXMBDATE  DIM       10    Mother's Date of Birth (dd/mm/ccyy) 5
BXXXADD1  DIM       35    (Informant) Address Line 1          6
BXXXADD2  DIM       35    (Informant) Address Line 2          7
BXXSUBRB  DIM       35    (Informant) Town (Suburb)           8
BXXXADD4  DIM       35    (Informant) State                   9
BXXXPOST  DIM       8     Postcode                           10
.
.*******************************************************************************
.*                           RGO Deaths Upload file                            *
.*******************************************************************************
.
DEATHTXT  FILE       HL7, FIXED=4000
.
.Name     Type      Size  Description                     Field
.----     ----      ----  -----------                     -----
DXXXXSEX  DIM       1     Sex                                 1
DXXSNAME  DIM       40    Patient Surname                     2
DXXGNAME  DIM       80    Patient Given Names                 3
DXDECDTE  DIM       10    Date of Death (dd/mm/ccyy)          4
DXXDDESC  DIM       8     Date of Death Description           5
DXXBDATE  DIM       10    Date of Birth (dd/mm/ccyy)          6
DXXXDAGE  DIM       3     Death Age                           7
DXXDACLS  DIM       1     Age Class Code                      8
DXXXADD1  DIM       35    Address Line 1 (Address)            9
DXXSUBRB  DIM       35    Address Line 3 (Town/Suburb)       10
DXXXADD4  DIM       35    Address Line 4 (State)             11
.
.*******************************************************************************
.*                         Working Report File                                 *
.*******************************************************************************
.
WORK1     IFILE     SQL, FIXED=543, KEY="U1-1,449-454"
WORK2     IFILE     SQL, FIXED=543, KEY="U175-194,195-202,203-210,449-454"
.
.Name     Type     Size    Physical   Start       Description
.----     ----     ----    --------   -----       -----------
DWRKRTYP  DIM       1         1         1         Report Type Code
.                                                    0 = Waiting
.                                                    1 = Accepted Record
.                                                    2 = Irregularity Record
.                                                    3 = Exception Record
WRKURNUM  DIM       8         8         2         Patient U/R
WRKFRMNM  DIM       47        47       10         Patient Formatted Name
WRKGENDR  DIM       1         1        57         Patient Sex
WRKBDAT1  DIM       10        10       58         Patient DOB (dd/mm/ccyy)
WRKDDAT1  DIM       10        10       68         Patient DOD (dd/mm/ccyy)
WRKRGONM  DIM       47        47       78         RGO Name
WRKERROR  DIM       50        50      125         Error Description
WRKSNAME  DIM       20        20      175         Patient Surname
WRKMDAT2  DIM       8         8       195         Mother's DOB (ccyymmdd)
WRKBDAT2  DIM       8         8       203         Patient DOB (ccyymmdd)
WRKFGNAM  DIM       40        40      211         Patient First Given Name
WRKSGNAM  DIM       40        40      251         Patient Second Given Name
WRKADDR1  DIM       35        35      291         Patient Address Line 1
WRKADDR2  DIM       35        35      326         Patient Address Line 2
WRKSUBRB  DIM       35        35      361         Patient Address Line 3
WRKADDR4  DIM       35        35      396         Patient Address Line 4
WRKPCODE  DIM       8         8       431         Patient Postcode
WRKMDAT1  DIM       10        10      439         Mother's DOB (dd/mm/ccyy)
DWRKCNTR  DIM       6         6       449         Record Counter
WRKDDAT2  DIM       8         8       455         Patient DOD (ccyymmdd)
WRKGNAME  DIM       80        80      463         Given Names
.
.End of record                        543
.
. Redefine FORM fields from KEY
. -----------------------------
WRKRTYPE  FORM      1
WRKCOUNT  FORM      6
.
.
. Local Variables
. ---------------
ACODETMP  DIM       3              * TMP Variable to hold ACODE
ACTION    DIM       1
ADD       DIM       2
AMM       DIM       2
AYY       DIM       2
ACC       DIM       2
.
BJDAY     FORM      3
.
CJDAY     FORM      3
CMDLINE   DIM       200           * Command Line
COUNTER   FORM      6
CURRDATE  DIM       8             * Today's Date
CURKEY42  DIM       42
.
DATECALC  DATE      8             * Calculate Date range values
DATEFROM  DIM       8             * Date to read from
DATETOOO  DIM       8             * Date to read to
DAYSNUMB  FORM      5
DETNTREC  FORM      2
DIM4      DIM       4
DIM8      DIM       8
DIM10     DIM       10
DIM20     DIM       20
DIM30A    DIM       30
DIM30B    DIM       30
DIM30C    DIM       30
DUPLFLAG  FORM      1
.
ENDOFILE  FORM      1             * ENd of File flag
.                                     0 = not end of file
.                                     1 = end of file
.
FNAMEINP  DIM       150           * Input File path/name
FNAMEOUT  DIM       8             * Temporary Output File Name
FORM8     FORM      8
FORMDTE1  FORM      8             * Date Calculation Field
FORMDTE2  FORM      8             * Date Calculation Field
FORMRSLT  FORM      8             * Date Calculation Field
FULLGNAM  DIM       80            * full given names
FRSTGNAM  DIM       40            * first given name
FSTKEY42  DIM       42
.
GSRNFLAG  FORM      1             * patgsrnf flag
.                                     0 = matching patgsrnf record not found
.                                     1 = matching patgsrnf record found
.
LEAPDAYS  FORM      2             * Days in February
.
MATCHFND  FORM      1             * Matching PMI Record Found
.                                                  0 = Not yet (?)
.                                                  1 = Yes
.                                                  2 = Irregularity
NMPNUMB   DIM       20
.
OPERCODE  DIM       4
.
PATHNAME  DIM       100           * Path Name of Input File
PMICATNM  DIM       80            * PMI Given Names (concatenated)
PMIFNAME  DIM       40            * webPAS PMI First Name
PMISNAME  DIM       40            * webPAS PMI Second Name
PRINTCNT  FORM      4             * Count of Records Printed
PRINTSEX  DIM       6             * Print full Sex description
PRNTWNAM  DIM       33            * Print Shortened webPAS Name
PRNTRNAM  DIM       33            * Print Shortened RGO Name
PRNTURNO  DIM       8             * To stop printing 0 U/R nos
.
ALIASSTS  DIM       1
SAVEUSR1  DIM       3
.
SAVEBDOB  DATE      8
SAVEMDOB  DIM       8
SAVESNAM  DIM       20
SAVIGNAM  DIM       25            * Save Input Given Name for print
SAVISNAM  DIM       20            * Save Input Surname for print
SAVPFNAM  DIM       25            * Save PMI First Name for print
SAVPSNAM  DIM       20            * Save PMI Surname for print
SAVEPHCP  DIM       10            * Used for HCP Audit as SVMAS variables
SAVEPRAC  DIM       10            * are too small
SAVEPCTR  DIM       2
.
.SAVESNAM  DIM       40
SAVEXFNM  DIM       40
SAVEXSNM  DIM       40
SAVETITL  DIM       4
SAVEPSEX  DIM       1
SAVEPDOB  DIM       8
SAVEPFGN  DIM       25
SAVEPMST  DIM       3
SAVEPREG  DIM       3
SAVEPCNT  DIM       3
SAVEPTYP  DIM       3
SAVEABRG  DIM       3
SAVEUSR7  DIM       3
SAVEMEDI  DIM       10
SAVEMCCD  DIM       2
SAVEMEDC  DIM       8
SAVECONP  DIM       1
SAVEUPRF  DIM       3
SAVEINTR  DIM       1
SAVELNG1  DIM       3
SAVEPRVI  DIM       3
SAVEFLDR  DIM       3
SAVESN16  DIM       1
SPPXUCC4  DIM       3
SPPXUCC5  DIM       3
SPPXATF1  DIM       80
SPPXATF2  DIM       80
SAVECUID  DIM       8
SAVECDAT  DIM       8
SAVECTIM  DIM       8
.
SCNDGNAM  DIM       40            * second given name
SURSYST   FORM      1
.
TEMPDATE  DIM       8             * Date Validation
TIMEIS    DIM       8
.
USERNAME  DIM       10
URNUMBER  DIM       8
URCHKDGT  FORM      4
URNLNGTH  FORM      2
URCHKPRD  FORM      2
URNOWGHT  FORM      1
USERID    DIM       10            * Input User ID
.
VALSTRNG  DIM       80            * Validate character string
.
WORKDATE  DATE      8
WORKTYPE  FORM      1             * Report sub type indicator
WRKDDESC  DIM       8             * Date of Death Description
.
.
. Program Constants
. -----------------
CATDY     INIT      "DY"
CATTC     INIT      "tc"
EXCEP001  INIT      "Surname is blank"
EXCEP002  INIT      "First name is blank"
EXCEP003  INIT      "Sex must be M or F"
EXCEP004  INIT      "Birth date is blank"
EXCEP005  INIT      "Patient birth Date is not valid"
EXCEP006  INIT      "No matching record found"
EXCEP007  INIT      "Birth date in the future"
EXCEP008  INIT      "Birth date more than 35 years ago"
EXCEP009  INIT      "Birth already recorded"
EXCEP010  INIT      "Patient is current inpatient so name not updated"
EXCEP011  INIT      "Death date is blank"
EXCEP012  INIT      "Death date is invalid"
EXCEP013  INIT      "Death date less than birth date"
EXCEP014  INIT      "Death date in the future"
EXCEP015  INIT      "Death date less than 1851"
EXCEP016  INIT      "Death date less than last admission date"
EXCEP017  INIT      "Death date less than last discharge date"
EXCEP018  INIT      "Death already recorded"
EXCEP019  INIT      "Death date mismatched"
EXCEP020  INIT      "Mother's birth date is not valid"
EXCEP021  INIT      "Mother's birth date in the future"
EXCEP022  INIT      "Unknown character in surname"
EXCEP023  INIT      "Unknown character in first name"
.
INITACT   INIT      "ACT"
INITNSW   INIT      "NSW"
INITNT    INIT      "NT"
INITQLD   INIT      "QLD"
INITSA    INIT      "SA"
INITTAS   INIT      "TAS"
INITVIC   INIT      "VIC"
INITWA    INIT      "WA"
IRREG001  INIT      "Matched except postcode"
IRREG002  INIT      "Date of Birth within 5 days"
IRREG003  INIT      "Duplicate Birth row"
OCTALHIG  INIT      0176
OCTALLOW  INIT      040
PRGNAMBH  INIT      "REGISTRAR GENERAL'S OFFICE BIRTH DATA"
PRGNAMDH  INIT      "REGISTRAR GENERAL'S OFFICE DEATH DATA"
SEC1      FORM      "00001"
STATEACT  INIT      "AUSTRALIAN CAPITAL TERRITORY"
STATENSW  INIT      "NEW SOUTH WALES"
STATENT   INIT      "NORTHERN TERRITORY"
STATEQLD  INIT      "QUEENSLAND"
STATESA   INIT      "SOUTH AUSTRALIA"
STATETAS  INIT      "TASMANIA"
STATEVIC  INIT      "VICTORIA"
STATEWA   INIT      "WESTERN AUSTRALIA"
TILDA30   INIT      "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
URWTARAY  INIT      "234567"
.
.
PRGID     INIT      "IBAADT65"
.                   ****************** NB Spaces at end of PRGNAM are deliberate
PRGNAM    INIT      "Upload RGO Birth/Deaths              "
VERSION   INIT      "V12.00.00"
+
.******************************************************************************
.*                                  MAIN0000                                  *
.*                               Main Procedure                               *
.******************************************************************************
.
MAIN0000  CALL      INIT0000                     * Initialise variables & files
.
          CALL      CRET0000                     * create temp file
          CALL      CLER0000                     * clear temp file
.
          CALL      GOPT0000                     * select option
          BRANCH    EXIT,MAIN9000                * exit selected
.
          CALL      GFIL0000                     * get upload path & filename
          BRANCH    EXIT,MAIN9000                * nothing entered
.
          CALL      GUSR0000                     * get web user id
          BRANCH    EXIT,MAIN9000                * user id blank or not valid
.
          CALL      GPTH0000                     * get pathname
          BRANCH    EXIT,MAIN9000                * nothing entered
.
          PERFORM   COPTION,UPBF0000:            * process births
                            UPDF0000             * process deaths
          BRANCH    EXIT,MAIN9000                * nothing loaded
.
          CALL      REPT0000                     * print report
.
MAIN9000  CALL      KILL0000                     * delete temp file
.
MAIN9999  CHAIN     PGM
+
.******************************************************************************
.*                                 INIT0000                                   *
.*                     Initialise Variables & Open Files                      *
.******************************************************************************
.
INIT0000  CALL      DISPHEAD                     * Display screen heading
.
          CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
          DISPLAY   *P64:24,"bokrc1af";
          OPEN      BOKRC1A1,"bokrc1af"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"nhimasaf";
          OPEN      NHIMASA1,"nhimasaf"
.
          DISPLAY   *P64:24,"nhimasaf";
          OPEN      NHIMASA2,"nhimasaf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE2,"patcodes"
.
          DISPLAY   *P64:24,"patdschf";
          OPEN      PATDSCH1,"patdschf"
.
          DISPLAY   *P64:24,"patdthaf";
          OPEN      PATDTHA1,"patdthaf"
.
          DISPLAY   *P64:24,"patgsrnf";
          OPEN      PATGSRN1,"patgsrnf"
          OPEN      PATGSRN2,"patgsrnf"
          OPEN      PATGSRN3,"patgsrnf"
          OPEN      PATGSRN4,"patgsrnf"
          OPEN      PATGSRN6,"patgsrnf"
.
          DISPLAY   *P64:24,"patinvrf";
          OPEN      PATINVR3,"patinvrf"
.
          DISPLAY   *P64:24,"patlinkf";
          OPEN      PATLINK1,"patlinkf"
.
          DISPLAY   *P64:24,"patlocaf";
          OPEN      PATLOCA1,"patlocaf"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A2,"patma1af"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
.
          DISPLAY   *P64:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patnidaf";
          OPEN      PATNIDA1,"patnidaf"
.
          DISPLAY   *P64:24,"patpa1af";
          OPEN      PATPA1A1,"patpa1af"
.
          DISPLAY   *P64:24,"patre1af";
          OPEN      PATRE1A1,"patre1af"
.
          DISPLAY   *P64:24,"paturadf";
          OPEN      PATURAD1,"paturadf"
.
          DISPLAY   *P64:24,"paturadf";
          OPEN      PATURAD2,"paturadf"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA2,"patvisaf"
.
          DISPLAY   *P64:24,"pmscuraf";
          OPEN      PMSCURA1,"pmscuraf"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"websecaf";
          OPEN      WEBSECA1,"websecaf"
.
          READ      CONTROLF,TEN;*213,CAUDM
          IF        CAUDM=0
            DISPLAY   *P64:24,"patam1af";
            OPEN      PATAM1A1,"patam1af"
          ENDIF
.
INIT9999  RETURN
+
.******************************************************************************
.*                                 GOPT0000              Called by : MAIN0000 *
.*                    Select RGO File type to upload                          *
.* Returns:   COPTION = Option selected                                       *
.*                      1 = Births                                            *
.*                      2 = Deaths                                            *
.*            EXIT   0 = Ok to continue                                       *
.*                   1 = Exit selected                                        *
.******************************************************************************
.
GOPT0000  DISPLAY   *P1:4,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = Load RGO Birth Data":
                    *P1:6,*V2LON,"2",*HOFF," = Load RGO Death Data":
                    *P1:8,"Select Option : ";
.
GOPT1000  KEYIN     *P17:8,*V2LON,COPTION;
          BRANCH    COPTION,GOPT7000:            * births
                            GOPT8000             * deaths
.
          COMPARE   ZERO,COPTION                 * anything entered ?
          GOTO      GOPT9100 IF EQUAL            * no - exit
.
          BEEP
          GOTO      GOPT1000
.
GOPT7000  MOVE      PRGNAMBH,PRGNAM
          GOTO      GOPT9000
.
GOPT8000  MOVE      PRGNAMDH,PRGNAM
.
GOPT9000  MOVE      ZERO,EXIT
          GOTO      GOPT9999
.
GOPT9100  MOVE      ONE,EXIT
.
GOPT9999  RETURN
+
.******************************************************************************
.*                                 GFIL0000              Called by : MAIN0000 *
.*                     Keyin Upload File name and path                        *
.******************************************************************************
.
GFIL0000  PACK      FNAMEINP,SP70,SP70,SP70
.
          COMPARE   ONE,COPTION
          IF        @EQUAL
            DISPLAY   *P26:11,*EF,"Upload RGO Births File";
          ELSE
            DISPLAY   *P26:11,*EF,"Upload RGO Deaths File";
          ENDIF
.
          KEYIN     *P1:13,*EL,"Keyin Path & File Name : ",*V2LON,FNAMEINP
.
          PACK      FNAMEINP,FNAMEINP,SP70,SP70,SP70
.
          MATCH     SP70,FNAMEINP
          GOTO      GFIL9100 IF EQUAL
.
          SCAN      ".txt",FNAMEINP
          IF        !@EQUAL
            SQUEEZE   FNAMEINP
            ENDSET    FNAMEINP
            APPEND    ".txt",FNAMEINP              * add ".txt" if necessary
            APPEND    SP70,FNAMEINP
            RESET     FNAMEINP
          ENDIF
          RESET     FNAMEINP
.
.         Open file if it exists
.
          DISPLAY   *P26:13,*V2LON,*EL,FNAMEINP;
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          COMPARE   ONE,COPTION
          IF        @EQUAL
            OPEN      BIRTHTXT,FNAMEINP          * RGO Births File
          ELSE
            OPEN      DEATHTXT,FNAMEINP          * RGO Deaths File
          ENDIF
          TRAPCLR   IO
          BRANCH    OVRCD,GFIL8000
.
          CALL      GFMT0000                     * reformat upload file
.
.         Open reformatted upload file
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          COMPARE   ONE,COPTION
          IF        @EQUAL
            OPEN      BIRTHTXT,FNAMEINP          * RGO Births File
          ELSE
            OPEN      DEATHTXT,FNAMEINP          * RGO Deaths File
          ENDIF
          TRAPCLR   IO
          BRANCH    OVRCD,GFIL8000

          MOVE      ZERO,EXIT
          GOTO      GFIL9999
.
GFIL8000  DISPLAY   *P1:24,*EL,*B,"File not found.  ";
          CALL      HITENTER
          GOTO      GFIL0000
.
GFIL9100  CALL      HEAD132
          PRINT     *N,"Filename blank. "
          MOVE      ONE,EXIT
.
GFIL9999  RETURN
+
.*******************************************************************************
.*                                  GFMT0000               Called by: GFIL0000 *
.*          Reformat tab delimited input file to HL7 pipe format               *
.*******************************************************************************
.
GFMT0000  CLEAR     CMDLINE
          APPEND    "ibaadt65.us1 ",CMDLINE
          APPEND    FNAMEINP,CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
GFMT9999  RETURN
+
.*******************************************************************************
.*                                  GUSR0000               Called by: MAIN0000 *
.*                               Get Web User Id                               *
.*******************************************************************************
.
GUSR0000  KEYIN     *P1:15,*EF,"Web User Id  : ",*V2LON,USERID
.
          PACK      USERID,USERID,SP70
          MATCH     SP70,USERID
          GOTO      GUSR9100 IF EQUAL
.
          PACK      KEY10,USERID,SP70
          CALL      RDWBSE1
          BRANCH    OVRCD,GUSR9100
.
          MOVE      ZERO,EXIT
          GOTO      GUSR9999
.
GUSR9100  CALL      HEAD132
          PRINT     *N,"User id blank or not on file. "
          MOVE      ONE,EXIT
.
GUSR9999  RETURN
+
.******************************************************************************
.*                                  GPTH0000             Called by : MAIN0000 *
.*                     Keyin Upload File name and path                        *
.******************************************************************************
.
GPTH0000  KEYIN     *P1:17,*EL,"Keyin Path & File Name : ":
                    *P26:17,*V2LON,PATHNAME
.
          PACK      PATHNAME,PATHNAME,SP70,SP70
.
          MATCH     SP70,PATHNAME
          GOTO      GPTH9100 IF EQUAL
.
          MOVE      ZERO,EXIT
          GOTO      GPTH9999
.
GPTH9100  CALL      HEAD132
          PRINT     *N,"Filename blank. "
          MOVE      ONE,EXIT
.
GPTH9999  RETURN
+
.******************************************************************************
.*                                  CRET0000             Called by : MAIN0000 *
.*                       Create the temporary file                            *
.******************************************************************************
.
CRET0000  CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FNAMEOUT
.
          CALL      KILL0000                     * Remove any existing file
.
          CLEAR     CMDLINE                      * Create Upload Report file
          APPEND    "isbuild ",CMDLINE
          APPEND    FNAMEOUT,CMDLINE
          APPEND    " 543 U1-1,449-454 U175-194,195-202,203-210,449-454",CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
          OPEN      WORK1,FNAMEOUT               * Open Upload Report file
          OPEN      WORK2,FNAMEOUT
.
CRET9999  RETURN
+
.******************************************************************************
.*                                  CLER0000             Called by : MAIN0000 *
.*                       Clear the temporary file                             *
.******************************************************************************
.
CLER0000  MOVE      SP7,KEY7
          CALL      RSWORK1                      * position at start of file
          CALL      RKWORK1                      * read next record
          BRANCH    OVRCD,CLER9999               * eof - finished
.
          PACK      KEY7,WRKRTYPE,WRKCOUNT
          CALL      DEWORK1                      * delete record
          GOTO      CLER0000                     * get next record
.
CLER9999  RETURN
+
.******************************************************************************
.*                                  KILL0000             Called by : MAIN0000 *
.*                        Delete the temporary file                  CRET0000 *
.******************************************************************************
.
KILL0000  CLOSE     WORK1                        * Close Upload Report file .
          CLOSE     WORK2
          CLEAR     CMDLINE                      * Remove Upload Report file
          APPEND    "iserase ",CMDLINE
          APPEND    FNAMEOUT,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
KILL9999  RETURN
+
.******************************************************************************
.*                                  UPBF0000             Called by : MAIN0000 *
.*                         Upload RGO Birth Details                           *
.******************************************************************************
.
.         Loop through the upload file and load each record into the
.         temporary file after some initial validation
.
UPBF0000  MOVE      ZERO,COUNTER                 * initialise counter
.
UPBF0500  READ      BIRTHTXT,SEQ;BXXXXSEX,BXXSNAME,BXXGNAME,BXXBDATE,BXMBDATE:
                                 BXXXADD1,BXXXADD2,BXXSUBRB,BXXXADD4,BXXXPOST
          GOTO      UPBF1000 IF OVER             * eof - finished loop
.
          ADD       ONE,COUNTER                  * increment counter
.
          CALL      CLWK0000                     * clear work fields
.
          PACK      SAVISNAM,BXXSNAME,SP70       * Store name for print
          PACK      SAVIGNAM,BXXGNAME,SP70       * Store name for print
.
          REP       UPPLOW,BXXXXSEX              * Uppercase relevant fields
          REP       UPPLOW,BXXSNAME
          REP       UPPLOW,BXXGNAME
          REP       UPPLOW,BXXXADD1
          REP       UPPLOW,BXXXADD2
          REP       UPPLOW,BXXSUBRB
          REP       UPPLOW,BXXXADD4
.
          CALL      UBFLD000                    * Validate/Reformat Birth Fields
.
.         Write a record to the work file
.
          CALL      WWRK0000                     * write upload report record
          GOTO      UPBF0500                     * get next record
.
UPBF1000  COMPARE   ZERO,COUNTER                 * any records uploaded ?
          IF        @EQUAL
            CALL      HEAD132                    * no
            PRINT     *N,"No records loaded. "
            GOTO      UPBF9100
          ENDIF
.
.         There were records loaded, so loop through the work file
.         and check for duplicate birth records
.
          CALL      CDUP0000
          BRANCH    EXIT,UPBF9100
.
.         Now loop through the work file and check for a matching pmi record
.         for each upload record that has a waiting status.
.
          CALL      MATB0000
          MOVE      ZERO,EXIT
          GOTO      UPBF9999
.
UPBF9100  MOVE      ONE,EXIT
.
UPBF9999  RETURN
+
.*****************************************************************************
.*                               MATB0000          Called by: CDUP0000       *
.*                Check for a matching pmi record for the birth record       *
.*****************************************************************************
.
MATB0000  MOVE      SP7,KEY7
          CALL      RSWORK1                      * position at start of file
          CALL      RKWORK1                      * read the first record
          BRANCH    OVRCD,MATB9999               * eof - finished
.
          COMPARE   ZERO,WRKRTYPE                * still waiting record ?
          GOTO      MATB9999 IF NOT EQUAL        * no - finished
.
.         First, check for a matching pmi record using the uploaded patient DOB
.         and searching up to 5 days past the DOB
.
          MOVE      WRKBDAT2,DATEFROM            * load date from
          MOVE      WRKBDAT2,DATECALC            * calculate date to
          ADD       FIVE,DATECALC
          MOVE      DATECALC,DATETOOO
          CALL      TRYB0000                     * matching pmi record found ?
          BRANCH    MATCHFND,MATB1000:           * yes
                             MATB8000            * no - irregularity
.
.         No match was found, so check for a matching pmi record using
.         the uploaded patient DOB and searching up to 5 days prior to the DOB
.
          MOVE      WRKBDAT2,DATECALC            * load date from
          SUBTRACT  ONE,DATECALC
          MOVE      DATECALC,DATETOOO            * calculate date to
          MOVE      WRKBDAT2,DATECALC
          SUBTRACT  FIVE,DATECALC
          MOVE      DATECALC,DATEFROM
          CALL      TRYB0000                     * matching pmi record found ?
          BRANCH    MATCHFND,MATB1000:           * yes
                             MATB8000            * no - irregularity
.
.         No matching pmi record has been found so report as exception
.
          MOVE      THREE,WRKRTYPE
          MOVE      EXCEP006,WRKERROR
          GOTO      MATB8000
.
.         Check if the uploaded patient DOB was the same as the DOB on
.         the pmi record or was within 5 days.  If it's the latter,
.         then report it as an irregularity.
.
MATB1000  MOVE      PURNO,WRKURNUM               * load webPAS U/R
.
          MATCH     WRKBDAT2,PBDATE              * same dob ?
          GOTO      MATB2000 IF EQUAL            * yes
.
          MOVE      TWO,WRKRTYPE
          MOVE      IRREG002,WRKERROR
          MOVE      TWO,MATCHFND
          GOTO      MATB8000
.
.         Check if the uploaded patient given names were the same as the
.         given names on the pmi record.  If they are, then report it as an
.         irregularity as the names have already been recorded.
.
MATB2000  PACK      KEY8,PURNO
          CALL      RDPMPX21                     * PMI extension record found ?
          IF        OVRCD = 1
            MOVE      THREE,WRKRTYPE             * no  -exception error
            MOVE      EXCEP006,WRKERROR
            GOTO      MATB8000
          ENDIF
.
          MOVE      PMPXFNAM,PMIFNAME
          MOVE      PMPXSNAM,PMISNAME
          STRIP     PMIFNAME
          STRIP     PMISNAME
          PACK      PMICATNM,PMIFNAME,SP1,PMISNAME,SP70
          MATCH     WRKGNAME,PMICATNM
          IF        @EQUAL
            MOVE      THREE,WRKRTYPE
            MOVE      EXCEP009,WRKERROR
            GOTO      MATB8000
          ENDIF
.
.         Get the last admission for the patient
.
          PACK      KEY24,PURNO,CURRDATE,TILDA30
          CALL      RDSVISA2                     * position after U/R, Today
MATB3000  CALL      RDPVISA2                     * read previous record
          BRANCH    OVRCD,MATB4000               * eof - no visit found
.
          MATCH     PURNO,PVIURNO                * same U/R still ?
          GOTO      MATB4000 IF NOT EQUAL        * no - no visit found
.
          COMPARE   THREE,PVITYPE                * I/P admission ?
          GOTO      MATB3000 IF NOT EQUAL        * no - ignore record
.
.         We have the last I/P admission visit record, so now
.         get the admission details
.
          MOVE      PVIBILL,KEY8
          CALL      RDMISS1                      * admission on file ?
          BRANCH    OVRCD,MATB3000               * no - get next visit
.
          BRANCH    ASTAT,MATB3000:              * pre-admission
                          MATB3500:              * current admission
                          MATB4000:              * discharged
                          MATB3500:              * on-leave
                          MATB3000               * cancelled
.
MATB3500  MOVE      THREE,WRKRTYPE
          MOVE      EXCEP010,WRKERROR
          GOTO      MATB8000
.
.         The uploaded patient is not currently admitted, so update the
.         PMI values
.
MATB4000  CALL      ACTMSAV                      * Save PMI Fields
          MOVE      THREE,URSYST                 * Originating System
          MOVE      PURNO,GSRURNO                * Ensure GSRURNO is set
          MOVE      PURNO,WRKURNUM               * load webPAS U/R
          MOVE      PGNAME,SAVPFNAM              * Save First Name for Print
          MOVE      PSNAME,SAVPSNAM              * Save Surname Name for Print
          PACK      PMPXFNAM,WRKFGNAM,SP70       * Set New First Name  (long)
          PACK      PMPXSNAM,WRKSGNAM,SP70       * Set New Other Names (long)
.
.         Set combined given name
.
          MOVE      WRKFGNAM,PGNAME
          STRIP     PGNAME
          ENDSET    PGNAME
          APPEND    SP1,PGNAME
          APPEND    WRKSGNAM,PGNAME
          APPEND    SP70,PGNAME
          RESET     PGNAME
.
.         Update the webPAS address line 4 (state) if it's blank.
.
          MATCH     PADD4,SP70
          IF        @EQUAL
            PACK      PADD4,WRKADDR4,SP70
          ENDIF
.
          CALL      UPDUR                        * update pmi records
          MOVE      ONE,WRKRTYPE                 * set as accepted record
.
MATB8000  CALL      UPWORK1                      * update upload report record
          GOTO      MATB0000                     * get next record
.
MATB9999  RETURN
+
.*****************************************************************************
.*                               MATD0000          Called by: UPDF0000       *
.*                Check for a matching pmi record for the death record       *
.*****************************************************************************
.
MATD0000  MOVE      SP7,KEY7
          CALL      RSWORK1                      * position at start of file
          CALL      RKWORK1                      * read the first record
          BRANCH    OVRCD,MATD9999               * eof - finished
.
          COMPARE   ZERO,WRKRTYPE                * still waiting record ?
          GOTO      MATD9999 IF NOT EQUAL        * no - finished
.
.         First, check for a matching pmi record using the uploaded patient DOB
.
          CALL      TRYD0000                     * matching pmi record found ?
          BRANCH    MATCHFND,MATD1000:           * yes
                             MATD8000            * no - irregularity
.
.         No matching pmi record has been found so report as exception
.
          MOVE      THREE,WRKRTYPE
          MOVE      EXCEP006,WRKERROR
          GOTO      MATD8000
.
.         Check if the uploaded patient given names were the same as the
.         given names on the pmi record.  If they are, then report it as an
.         irregularity as the names have already been recorded.
.
MATD1000  PACK      KEY8,PURNO
          CALL      RDPMPX21                     * PMI extension record found ?
          IF        OVRCD = 1
            MOVE      THREE,WRKRTYPE
            MOVE      EXCEP006,WRKERROR
            GOTO      MATD8000
          ENDIF
.
          MOVE      PMPXFNAM,PMIFNAME
          MOVE      PMPXSNAM,PMISNAME
          STRIP     PMIFNAME
          STRIP     PMISNAME
          PACK      PMICATNM,PMIFNAME,SP1,PMISNAME,SP70
          MATCH     WRKGNAME,PMICATNM
          IF        !@EQUAL
            MOVE      THREE,WRKRTYPE
            MOVE      EXCEP006,WRKERROR
            GOTO      MATD8000
          ENDIF
.
.         The given names match, so load the U/R number
.
          MOVE      PURNO,WRKURNUM
.
.         Get the last admission for the patient
.
          PACK      KEY24,PURNO,CURRDATE,TILDA30
          CALL      RDSVISA2                     * position after U/R, Today
MATD2000  CALL      RDPVISA2                     * read previous record
          BRANCH    OVRCD,MATD5000               * eof - no visit found
.
          MATCH     PURNO,PVIURNO                * same U/R still ?
          GOTO      MATD5000 IF NOT EQUAL        * no - no visit found
.
          COMPARE   THREE,PVITYPE                * I/P admission ?
          GOTO      MATD2000 IF NOT EQUAL        * no - ignore record
.
.         We have the last I/P admission visit record, so now
.         get the admission details
.
          MOVE      PVIBILL,KEY8
          CALL      RDMISS1                      * admission on file ?
          BRANCH    OVRCD,MATD2000               * no - get next visit
.
          BRANCH    ASTAT,MATD2000:              * pre-admission
                          MATD3000:              * current admission
                          MATD4000:              * discharged
                          MATD3000:              * on-leave
                          MATD2000               * cancelled
.
.         The patient is currently admitted, so check if the date of death
.         is less than the last admit date.
.
MATD3000  MATCH     ADATE,WRKDDAT2
          IF        @LESS
            MOVE      THREE,WRKRTYPE
            MOVE      EXCEP016,WRKERROR
            GOTO      MATD8000
          ENDIF
          GOTO      MATD5000
.
.         The patient is discharged, so check if the date of death is
.         less than the last discharge date.
.
MATD4000  MOVE      AADMNO,KEY8
          CALL      RDDSCH1                      * discharge record found ?
          BRANCH    OVRCD,MATD5000               * no - get next visit
.
          MATCH     DDATE,WRKDDAT2
          IF        @LESS
            MOVE      THREE,WRKRTYPE
            MOVE      EXCEP017,WRKERROR
            GOTO      MATD8000
          ENDIF
.
          GOTO      MATD3000                     * get next admission record
.
.         Check if the patient is already deceased
.
MATD5000  COMPARE   ONE,PCEASE                   * patient already deceased ?
          GOTO      MATD6000 IF NOT EQUAL        * no
.
          MATCH     PDECDTE,WRKDDAT2             * death date the same ?
          IF        !@EQUAL
            MOVE      THREE,WRKRTYPE             * no
            MOVE      EXCEP019,WRKERROR
            GOTO      MATD8000
          ENDIF
.
.         The death date is the same so report as already recorded
.
          MOVE      THREE,WRKRTYPE
          MOVE      EXCEP018,WRKERROR
          GOTO      MATD8000
.
.         The patient is currently not deceased on the patient master file,
.         so update the PMI details
.
MATD6000  CALL      ACTMSAV                      * Save PMI Fields
          MOVE      THREE,URSYST                 * Originating System
          MOVE      PURNO,GSRURNO                * Ensure GSRURNO is set
          MOVE      PGNAME,SAVPFNAM              * Save First Name for Print
          MOVE      PSNAME,SAVPSNAM              * Save Surname Name for Print
          PACK      PMPXFNAM,WRKFGNAM,SP70       * Set New First Name  (long)
          PACK      PMPXSNAM,WRKSGNAM,SP70       * Set New Other Names (long)
.
          MOVE      WRKDDAT2,PDECDTE             * Set Date of death
          MOVE      ONE,PCEASE                   * Set Decease Flag
.
          MOVE      ACODETMP,PMPXDETY               * Death Notification Code
.
.         Update the webPAS address line 4 (state) if it's blank.
.
          MATCH     PADD4,SP70
          IF        @EQUAL
            PACK      PADD4,WRKADDR4,SP70
          ENDIF
.
          CALL      UPDUR                        * update pmi details record
          CALL      UPPMPX21                     * update pmi extension record
.
.         Write a record to the death polling file
.
          PACK      PTDHURNO,PURNO,SP70
          PACK      PTDHWEBU,USERID,SP70
          PACK      KEY8,PURNO,SP70
          CALL      WRPTDH1
.
          MOVE      PURNO,URNUMBER
          MOVE      "001",D3
          CALL      WDAU0000                     * Write to Death audit file
.
          MOVE      ONE,WRKRTYPE                 * set as accepted record
.
MATD8000  CALL      UPWORK1                      * update upload report record
          GOTO      MATD0000                     * get next record
.
MATD9999  RETURN
+
.******************************************************************************
.*                                  UBFLD000             Called by : UPBF0000 *
.*  Remove quotes from input fields and pack with spaces where necessary      *
.*  Validate input fields                                                     *
.*                                                                            *
.*  Note: Adding or removing validations on fields in this routine may have   *
.*        an impact on the CDUP0000 routine.  Make sure you check CDUP0000 to *
.*        to see if it also requires any changes.                             *
.******************************************************************************
.
UBFLD000  PACK      WRKGENDR,BXXXXSEX,SP70       * load patient sex
.
          MATCH     ANSM,WRKGENDR                * sex male ?
          GOTO      UBFLD100 IF EQUAL            * yes - valid
.
          MATCH     ANSF,WRKGENDR                * sex female ?
          GOTO      UBFLD100 IF EQUAL            * yes - valid
.
          MOVE      EXCEP003,WRKERROR            * invalid sex
.
UBFLD100  PACK      WRKSNAME,BXXSNAME,SP70       * load patient surname
.
          MATCH     WRKSNAME,SP70                * surname blank ?
          GOTO      UBFLD200 IF NOT EQUAL        * no - valid
.
.         Surname is blank so load the error if there has been
.         no previous error
.
          MATCH     SP70,WRKERROR
          IF        @EQUAL
            MOVE      EXCEP001,WRKERROR
          ENDIF
.
UBFLD200  PACK      VALSTRNG,BXXSNAME,SP70
          CALL      VSTR0000            * Check for special characters
          COMPARE   ZERO,EXIT
          GOTO      UBFLD210 IF EQUAL
.
.         String has special character so load the error if there has been
.         no previous error
.
          MATCH     SP70,WRKERROR
          IF        @EQUAL
            MOVE      EXCEP022,WRKERROR
          ENDIF
.
UBFLD210  PACK      WRKGNAME,BXXGNAME,SP70,SP70  * load patient given names
.
          MATCH     WRKGNAME,SP70                * blank given names ?
          GOTO      UBFLD250 IF NOT EQUAL        * no - valid
.
.         Given name is blank so load the error if there has been
.         no previous error
.
          MATCH     SP70,WRKERROR
          IF        @EQUAL
            MOVE      EXCEP002,WRKERROR
          ENDIF
          GOTO      UBFLD300
.
.         Separate out first and second given names
.
UBFLD250  PACK      VALSTRNG,BXXGNAME,SP70
          CALL      VSTR0000            * Check for special characters
          COMPARE   ZERO,EXIT
          GOTO      UBFLD260 IF EQUAL
.
.         String has special character so load the error if there has been
.         no previous error
.
          MATCH     SP70,WRKERROR
          IF        @EQUAL
            MOVE      EXCEP023,WRKERROR
          ENDIF
.
UBFLD260  PACK      FULLGNAM,WRKGNAME,SP70,SP70
          CALL      SEPRNAME
          MOVE      FRSTGNAM,WRKFGNAM
          MOVE      SCNDGNAM,WRKSGNAM
.
UBFLD300  PACK      WRKBDAT1,BXXBDATE,SP70       * load patient birth date
.
          MATCH     SP8,WRKBDAT1                 * blank dob ?
          GOTO      UBFLD310 IF NOT EQUAL        * no - valid
.
.         DOB is blank so load the error if there has been
.         no previous error
.
          MATCH     SP70,WRKERROR
          IF        @EQUAL
            MOVE      EXCEP004,WRKERROR
          ENDIF
          GOTO      UBFLD450
.
.         Validate the date of birth
.
UBFLD310  UNPACK    WRKBDAT1,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          PACK      WRKBDAT2,CCENT,CYEAR,CMON,CDAY,SP70
.
          MOVE      WRKBDAT2,TEMPDATE
          CALL      VDTE0000                     * valid patient dob ?
          COMPARE   ZERO,EXIT
          GOTO      UBFLD330 IF EQUAL            * yes
.
.         DOB is not a valid date so load the error if there has been
.         no previous error
.
          MATCH     SP70,WRKERROR               
          IF        @EQUAL
            MOVE      EXCEP005,WRKERROR
          ENDIF
          GOTO      UBFLD400
.
.         We have a valid patient birth date
.
UBFLD330  MATCH     WRKBDAT2,CURRDATE            * dob > current date
          GOTO      UBFLD340 IF NOT LESS         * no - valid
.
.         DOB is in the future so load the error if there has been
.         no previous error
.
          MATCH     SP70,WRKERROR
          IF        @EQUAL
            MOVE      EXCEP007,WRKERROR
          ENDIF
          GOTO      UBFLD400
.
.         Check if the birth date is 35 years or more in the past
.
UBFLD340  MOVE      WRKBDAT2,FORMDTE1
          MOVE      CURRDATE,FORMDTE2
          ASSIGN    FORMDTE2-FORMDTE1,FORMRSLT
          IF        FORMRSLT < 350000
            GOTO      UBFLD400
          ENDIF
.
.         DOB is 35 or more years in the past so load the error
.         if there has been no previous error
.
          MATCH     SP70,WRKERROR
          IF        @EQUAL
            MOVE      EXCEP008,WRKERROR
          ENDIF
.
.         Load the mother's date of birth
.
UBFLD400  PACK      WRKMDAT1,BXMBDATE,SP70
          UNPACK    WRKMDAT1,CDAY,ANS,CMON,ANS,CCENT,CYEAR
          PACK      WRKMDAT2,CCENT,CYEAR,CMON,CDAY,SP70
.
          MATCH     SP70,WRKMDAT2                * blank mother's DOB ?
          GOTO      UBFLD450 IF EQUAL            * yes
.
          MOVE      WRKMDAT2,TEMPDATE
          CALL      VDTE0000                     * valid mother's dob ?
          COMPARE   ZERO,EXIT
          GOTO      UBFLD410 IF EQUAL            * yes
.
.         DOB is not a valid date so load the error if there has been
.         no previous error
.
          MATCH     SP70,WRKERROR               
          IF        @EQUAL
            MOVE      EXCEP020,WRKERROR
          ENDIF
          GOTO      UBFLD450
.
.         We have a valid mother's birth date
.
UBFLD410  MATCH     WRKMDAT2,CURRDATE            * dob > current date
          GOTO      UBFLD450 IF NOT LESS         * no - valid
.
.         DOB is in the future so load the error if there has been
.         no previous error
.
          MATCH     SP70,WRKERROR
          IF        @EQUAL
            MOVE      EXCEP021,WRKERROR
          ENDIF
.
UBFLD450  PACK      WRKADDR1,BXXXADD1,SP70       * load address line 1
.
          PACK      WRKADDR2,BXXXADD2,SP70       * load address line 2
.
          PACK      WRKSUBRB,BXXSUBRB,SP70       * load address line 3
.
          PACK      WRKADDR4,BXXXADD4,SP70       * load address line 4
.
.         Load shortened form of state
.
          MATCH     STATEWA,BXXXADD4
          IF        @EQUAL
            PACK      WRKADDR4,INITWA,SP70
            GOTO      UBFLD500
          ENDIF
.
          MATCH     STATEACT,BXXXADD4
          IF        @EQUAL
            PACK      WRKADDR4,INITACT,SP70
            GOTO      UBFLD500
          ENDIF
.
          MATCH     STATENSW,BXXXADD4
          IF        @EQUAL
            PACK      WRKADDR4,INITNSW,SP70
            GOTO      UBFLD500
          ENDIF
.
          MATCH     STATENT,BXXXADD4
          IF        @EQUAL
            PACK      WRKADDR4,INITNT,SP70
            GOTO      UBFLD500
          ENDIF
.
          MATCH     STATEQLD,BXXXADD4
          IF        @EQUAL
            PACK      WRKADDR4,INITQLD,SP70
            GOTO      UBFLD500
          ENDIF
.
          MATCH     STATESA,BXXXADD4
          IF        @EQUAL
            PACK      WRKADDR4,INITSA,SP70
            GOTO      UBFLD500
          ENDIF
.
          MATCH     STATETAS,BXXXADD4
          IF        @EQUAL
            PACK      WRKADDR4,INITTAS,SP70
            GOTO      UBFLD500
          ENDIF
.
          MATCH     STATEVIC,BXXXADD4
          IF        @EQUAL
            PACK      WRKADDR4,INITVIC,SP70
          ENDIF
.
UBFLD500  PACK      WRKPCODE,BXXXPOST,SP70       * load postcode
.
          MATCH     SP70,WRKERROR                * any errors encountered ?
          GOTO      UBFLD999 IF EQUAL            * no
.
.         An exception error occurred
.
          MOVE      THREE,WRKRTYPE
.
UBFLD999  RETURN
+
.******************************************************************************
.*                                  TRYB0000             Called by : UPBF0000 *
.*            Attempt to find matching birth PMI record in webPAS             *
.******************************************************************************
.
TRYB0000  MOVE      ZERO,MATCHFND                * initialise pmi match flag
          MOVE      ZERO,GSRNFLAG                * initialise patgsrnf flag
.
          PACK      DIM30A,WRKFGNAM,SP70
          PACK      DIM30B,WRKSGNAM,SP70
          PACK      DIM30C,WRKSNAME,SP70
.
          PACK      KEY98,WRKBDAT2,DIM30C,DIM30A,DIM30B
          CALL      RDPTGSR6                     * surname record found ?
          BRANCH    OVRCD,TRYB0100               * no - try without 2nd given
.
          GOTO      TRYB0200                     * yes - get pmi record
.
TRYB0100  PACK      KEY98,WRKBDAT2,DIM30C,DIM30A,SP30
          CALL      RDPTGSR6                     * surname record found ?
          BRANCH    OVRCD,TRYB0300               * no - try dob check
.
.         We found a matching patgsrnf record, so use the U/R to read
.         the patient's patma1af record
.
TRYB0200  MOVE      GSRURNO,KEY8
          CALL      RDMAST1                      * PMI rcord found ?
          BRANCH    OVRCD,TRYB0300               * no
.
          MOVE      ONE,GSRNFLAG                 * set patgsrnf flag
          GOTO      TRYB1000
.
.         We couldn't find a matching patgsrnf record, so try looping
.         through patma1af using DOB.
.
TRYB0300  PACK      KEY8,DATEFROM,SP70
          CALL      RDPTMAS2                     * Read PMI for Date of Birth
          BRANCH    OVRCD,TRYB0500               * No exact match on DOB
.
          GOTO      TRYB1000
.
.         If a mismatch occurred after we used a patgsrnf record, then
.         we need to try using DOB on patma1af
.
TRYB0500  IF        GSRNFLAG = 1
            MOVE      ZERO,GSRNFLAG              * reset patgsrnf falg
            GOTO      TRYB0300
          ENDIF
.
          CALL      RKPTMAS2                     * Get next PMI DOB record
          BRANCH    OVRCD,TRYB9999               * EOF
.
          MATCH     PBDATE,DATETOOO              * All records checked
          GOTO      TRYB9999 IF LESS

TRYB1000  MATCH     WRKGENDR,PSEX                * Check sex matches
          GOTO      TRYB0500 IF NOT EQUAL
.
          MATCH     WRKSNAME,PSNAME              * Check Surname matches
          GOTO      TRYB0500 IF NOT EQUAL
.
.         Check the mother's DOB matches
.
          PACK      KEY16,PURNO,SP70
          CALL      RDSLINK1                     * position on child's U/R
TRYB1100  CALL      RDKLINK1                     * read next record
          BRANCH    OVRCD,TRYB2000               * eof - link record not found
.
          MATCH     PURNO,LINKFUR                * same U/R still ?
          GOTO      TRYB2000 IF NOT EQUAL        * no
.
.         Make sure the link reason is "Mother/Child"
.
          CALL      CLNK0000                     * mother/child link ?
          BRANCH    EXIT,TRYB1100                * no - get next record
.
          PROC      GMDOB000                     * match on Mother's DOB ?
          BRANCH    EXIT,TRYB0500                * no - get next link record
.
.         Match the remainder of the required fields
.
TRYB2000  MATCH     WRKADDR1,PADD1               * Check Address 1
          GOTO      TRYB0500 IF NOT EQUAL
.
          MATCH     WRKSUBRB,PSUBRB              * Check Suburb
          GOTO      TRYB0500 IF NOT EQUAL
.
.         Only match address line 4 (state) if it's populated as
.         newborns in webPAS may not have a value in that field
.
          MATCH     PADD4,SP70                   * Check State
          IF        !@EQUAL
            MATCH     WRKADDR4,PADD4
            GOTO      TRYB0500 IF NOT EQUAL
          ENDIF
.
.         At this point, we either have a match or an error, so format
.         the webPAS patient name from patma1af fields, so that it can be
.         printed in the report
.
          MOVE      PSNAME,WRKFRMNM
          STRIP     WRKFRMNM
          ENDSET    WRKFRMNM
          APPEND    ", ",WRKFRMNM
          APPEND    PGNAME,WRKFRMNM
          APPEND    SP70,WRKFRMNM
          RESET     WRKFRMNM
.
          MATCH     WRKPCODE,PPOST               * Check Post Code
          IF        !@EQUAL
            MOVE      PURNO,WRKURNUM
            MOVE      TWO,WRKRTYPE
            MOVE      IRREG001,WRKERROR
            MOVE      TWO,MATCHFND
            GOTO      TRYB9999
          ENDIF
.
          MOVE      ONE,MATCHFND                 * PMI match found
.
TRYB9999  RETURN
+
.******************************************************************************
.*                                  GMDOB000             Called by : TRYB0000 *
.*             Procedure to get the Mother's DOB from patma1af                *
.******************************************************************************
.
          DEFPROC   GMDOB000
.
          INC       PATMA1FD/INC
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PATMA1A1,"patma1af"          * Patient Master File (U/R)
          TRAPCLR   IO
          BRANCH    OVRCD,GMDOB900
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PATMX1A1,"patmx1af"
          TRAPCLR   IO
          BRANCH    OVRCD,GMDOB900
.
          PACK      KEY8,LINKTUR
          CALL      RDMAST1                      * Get Mother's DOB record
          BRANCH    OVRCD,GMDOB900
.
          MATCH     WRKMDAT2,PBDATE              * Check Mother's DOB matches
          GOTO      GMDOB900 IF NOT EQUAL
.
          MOVE      ZERO,EXIT
          GOTO      GMDOB999
.                                                * Error if DOB does not Match
GMDOB900  MOVE      ONE,EXIT
          GOTO      GMDOB999
.
          INC       PATMA1IO/INC
          INC       IBAOVRIO/INC
.
GMDOB999  ENDPROC
+
.******************************************************************************
.*                                  UPDF0000             Called by : MAIN0000 *
.*                          Upload RGO Death Details                          *
.******************************************************************************
.
.         First get the default RGO Death Notification code (Cat DY)
.
UPDF0000  MOVE      SP70,ACODETMP
          PACK      KEY5,CATDY,SP70            * Check Death Notification ok
          CALL      RDSCODE1                     * position on Cat DY
UPDF0500  CALL      RDKCODE1                     * read next record
          IF        OVRCD = 1
            CALL      CLWK0000                   * no - clear work variables
            GOTO      UPDF9050
          ENDIF
.
          MATCH     TCODE,CATDY                  * same category still ?
          IF        !@EQUAL
            CALL      CLWK0000                   * no - clear work variables
            GOTO      UPDF9050
          ENDIF
.
          MATCH     TCINDC1,ANSC                 * code for RGO ?
          GOTO      UPDF0500 IF NOT EQUAL        * no - get next record
.
.         We have a valid RGO death notification code
.
          MOVE      ACODE,ACODETMP
          MOVE      ZERO,COUNTER                 * initialise counter
.
UPDF1000  READ      DEATHTXT,SEQ;DXXXXSEX,DXXSNAME,DXXGNAME,DXDECDTE,DXXDDESC:
                                 DXXBDATE,DXXXDAGE,DXXDACLS,DXXXADD1,DXXSUBRB:
                                 DXXXADD4
          GOTO      UPDF9000 IF OVER
.
          ADD       ONE,COUNTER                  * increment counter
.
          CALL      CLWK0000                     * clear work fields
.
          PACK      SAVISNAM,DXXSNAME,SP70       * Store name for print
          PACK      SAVIGNAM,DXXGNAME,SP70       * Store name for print
.
          REP       UPPLOW,DXXXXSEX              * Uppercase relevant fields
          REP       UPPLOW,DXXSNAME
          REP       UPPLOW,DXXGNAME
          REP       UPPLOW,DXXXADD1
          REP       UPPLOW,DXXSUBRB
          REP       UPPLOW,DXXXADD4
.
          CALL      UDFLD000                    * Validate/Reformat Death Fields
.
.         Write a record to the work file
.
          CALL      WWRK0000                     * write upload report record
          GOTO      UPDF1000                     * get next record
.
UPDF9000  COMPARE   ZERO,COUNTER                 * any records uploaded ?
          IF        @EQUAL
            CALL      HEAD132                    * no
            PRINT     *N,"No records loaded. "
            GOTO      UPDF9100
          ENDIF
.
.         There were records loaded, so loop through the work file
.         and check for a matching pmi record for each upload record
.         that has a waiting status.
.
          CALL      MATD0000
          MOVE      ZERO,EXIT
          GOTO      UPDF9999
.
UPDF9050  CALL      HEAD132
          PRINT     *N,"No Death Notification Code - Load Aborted"
UPDF9100  MOVE      ONE,EXIT
.
UPDF9999  RETURN
+
.******************************************************************************
.*                                  UDFLD000             Called by : UPDF0000 *
.*  Remove quotes from input fields and pack with spaces where necessary      *
.*  Validate input fields                                                     *
.******************************************************************************
.
UDFLD000  PACK      WRKGENDR,DXXXXSEX,SP70       * load gender
.
          MATCH     ANSM,WRKGENDR                * male ?
          GOTO      UDFLD100 IF EQUAL            * yes
.
          MATCH     ANSF,WRKGENDR                * female ?
          GOTO      UDFLD100 IF EQUAL            * yes
.
          MATCH     SP70,WRKERROR                * blank gender ?
          IF        @EQUAL
            MOVE      EXCEP003,WRKERROR          * yes - error
          ENDIF
.
UDFLD100  PACK      WRKSNAME,DXXSNAME,SP70       * load surname
.
          MATCH     WRKSNAME,SP70                * blank surname ?
          GOTO      UDFLD200 IF NOT EQUAL        * no
.
          MATCH     SP70,WRKERROR                * yes - error
          IF        @EQUAL
            MOVE      EXCEP001,WRKERROR
          ENDIF
.
UDFLD200  PACK      VALSTRNG,DXXSNAME,SP70
          CALL      VSTR0000            * Check for special characters
          COMPARE   ZERO,EXIT
          GOTO      UDFLD210 IF EQUAL
.
.         String has special character so load the error if there has been
.         no previous error
.
          MATCH     SP70,WRKERROR
          IF        @EQUAL
            MOVE      EXCEP022,WRKERROR
          ENDIF
.
UDFLD210  PACK      WRKGNAME,DXXGNAME,SP70       * load given names
.
          MATCH     WRKGNAME,SP70                * blank given names ?
          GOTO      UDFLD250 IF NOT EQUAL        * no
.
          MATCH     SP70,WRKERROR                * yes - error
          IF        @EQUAL
            MOVE      EXCEP002,WRKERROR
          ENDIF
.
.         Separate out first and second given names
.
UDFLD250  PACK      VALSTRNG,DXXGNAME,SP70
          CALL      VSTR0000            * Check for special characters
          COMPARE   ZERO,EXIT
          GOTO      UDFLD260 IF EQUAL
.
.         String has special character so load the error if there has been
.         no previous error
.
          MATCH     SP70,WRKERROR
          IF        @EQUAL
            MOVE      EXCEP023,WRKERROR
          ENDIF
.
UDFLD260  PACK      FULLGNAM,WRKGNAME,SP70,SP70
          CALL      SEPRNAME
          MOVE      FRSTGNAM,WRKFGNAM
          MOVE      SCNDGNAM,WRKSGNAM
.
UDFLD300  PACK      WRKDDAT1,DXDECDTE,SP70       * load date of death
.
          MATCH     SP8,WRKDDAT1                 * blank date of death ?
          GOTO      UDFLD310 IF NOT EQUAL        * no
.
          MATCH     SP70,WRKERROR                * yes - error
          IF        @EQUAL
            MOVE      EXCEP011,WRKERROR
          ENDIF
.
UDFLD310  UNPACK    WRKDDAT1,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          PACK      WRKDDAT2,CCENT,CYEAR,CMON,CDAY,SP70
.
          MOVE      WRKDDAT2,TEMPDATE
          CALL      VDTE0000                     * valid date ?
          BRANCH    EXIT,UDFLD320                * no - error
.
          GOTO      UDFLD330                     * yes
.
UDFLD320  MATCH     SP70,WRKERROR
          IF        @EQUAL
            MOVE      EXCEP012,WRKERROR
          ENDIF
.
.         We have a valid date of death
.
UDFLD330  MATCH     WRKDDAT2,CURRDATE            * Death Date > Today's Date
          GOTO      UDFLD340 IF NOT LESS         * no
.
          MATCH     SP70,WRKERROR                * yes - error
          IF        @EQUAL
            MOVE      EXCEP014,WRKERROR
          ENDIF
.
UDFLD340  PACK      D4,CCENT,CYEAR               * Death Date before 1850 ?
          MOVE      D4,FORM4
          IF        FORM4 > 1850
            GOTO      UDFLD400                   * no
          ENDIF
.
          MATCH     SP70,WRKERROR                * yes - error
          IF        @EQUAL
            MOVE      EXCEP015,WRKERROR
          ENDIF
.
UDFLD400  PACK      WRKBDAT1,DXXBDATE,SP70       * load birth date
.
          MATCH     SP8,WRKBDAT1                 * blank birth date ?
          GOTO      UDFLD410 IF NOT EQUAL        * no
.
          MATCH     SP70,WRKERROR                * yes - error
          IF        @EQUAL
            MOVE      EXCEP004,WRKERROR
          ENDIF
.
UDFLD410  UNPACK    WRKBDAT1,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          PACK      WRKBDAT2,CCENT,CYEAR,CMON,CDAY,SP70
.
          MOVE      WRKBDAT2,TEMPDATE
          CALL      VDTE0000                     * valid birth date ?
          BRANCH    EXIT,UDFLD420                * no - error
.
          GOTO      UDFLD430                     * yes
.
UDFLD420  MATCH     SP70,WRKERROR
          IF        @EQUAL
            MOVE      EXCEP005,WRKERROR
          ENDIF
.
UDFLD430  MATCH     WRKBDAT2,WRKDDAT2            * Death Date < Birth Date ?
          GOTO      UDFLD500 IF NOT LESS         * no
.
          MATCH     SP70,WRKERROR                * yes - error
          IF        @EQUAL
            MOVE      EXCEP013,WRKERROR
          ENDIF
.
UDFLD500  PACK      WRKADDR1,DXXXADD1,SP70       * load address line 1
.
          PACK      WRKSUBRB,DXXSUBRB,SP70       * load suburb
.
          PACK      WRKADDR4,DXXXADD4,SP70       * load state
.
          MATCH     STATEWA,DXXXADD4
          IF        @EQUAL
            PACK      WRKADDR4,INITWA,SP70
            GOTO      UDFLD600
          ENDIF
.
          MATCH     STATEACT,DXXXADD4
          IF        @EQUAL
            PACK      WRKADDR4,INITACT,SP70
            GOTO      UDFLD600
          ENDIF
.
          MATCH     STATENSW,DXXXADD4
          IF        @EQUAL
            PACK      WRKADDR4,INITNSW,SP70
            GOTO      UDFLD600
          ENDIF
.
          MATCH     STATENT,DXXXADD4
          IF        @EQUAL
            PACK      WRKADDR4,INITNT,SP70
            GOTO      UDFLD600
          ENDIF
.
          MATCH     STATEQLD,DXXXADD4
          IF        @EQUAL
            PACK      WRKADDR4,INITQLD,SP70
            GOTO      UDFLD600
          ENDIF
.
          MATCH     STATESA,DXXXADD4
          IF        @EQUAL
            PACK      WRKADDR4,INITSA,SP70
            GOTO      UDFLD600
          ENDIF
.
          MATCH     STATETAS,DXXXADD4
          IF        @EQUAL
            PACK      WRKADDR4,INITTAS,SP70
            GOTO      UDFLD600
          ENDIF
.
          MATCH     STATEVIC,DXXXADD4
          IF        @EQUAL
            PACK      WRKADDR4,INITVIC,SP70
            GOTO      UDFLD600
          ENDIF
.
UDFLD600  MATCH     SP70,WRKERROR                * any errors ?
          GOTO      UDFLD999 IF EQUAL            * no
.
.         An exception error occurred
.
          MOVE      THREE,WRKRTYPE
.
UDFLD999  RETURN
+
.******************************************************************************
.*                                  TRYD0000             Called by : UPDF0000 *
.*         Attempt to find matching birth PMI record in webPAS                *
.******************************************************************************
.
TRYD0000  MOVE      ZERO,MATCHFND                * initialise matching flag
          MOVE      ZERO,GSRNFLAG                * initialise patgsrnf flag
.
          PACK      DIM30A,WRKFGNAM,SP70
          PACK      DIM30B,WRKSGNAM,SP70
          PACK      DIM30C,WRKSNAME,SP70
.
          PACK      KEY98,WRKBDAT2,DIM30C,DIM30A,DIM30B
          CALL      RDPTGSR6                     * surname record found ?
          BRANCH    OVRCD,TRYD0100               * no - try without 2nd given
.
          GOTO      TRYD0200                     * yes - get pmi record
.
TRYD0100  PACK      KEY98,WRKBDAT2,DIM30C,DIM30A,SP30
          CALL      RDPTGSR6                     * surname record found ?
          BRANCH    OVRCD,TRYD0300               * no - try dob check
.
.         We found a matching patgsrnf record, so use the U/R to read
.         the patient's patma1af record
.
TRYD0200  MOVE      GSRURNO,KEY8
          CALL      RDMAST1                      * PMI rcord found ?
          BRANCH    OVRCD,TRYD0300               * no
.
          MOVE      ONE,GSRNFLAG                 * set patgsrnf flag
          GOTO      TRYD1000
.
.         We couldn't find a matching patgsrnf record, so try looping
.         through patma1af using DOB.
.
TRYD0300  PACK      KEY8,WRKBDAT2,SP70
          CALL      RDPTMAS2                     * dob on file ?
          BRANCH    OVRCD,TRYD9999               * no - finished
.
          GOTO      TRYD1000
.
.         If a mismatch occurred after we used a patgsrnf record, then
.         we need to try using DOB on patma1af
.
TRYD0500  IF        GSRNFLAG = 1
            MOVE      ZERO,GSRNFLAG              * reset patgsrnf falg
            GOTO      TRYD0300
          ENDIF
.
          CALL      RKPTMAS2                     * read next DOB record
          BRANCH    OVRCD,TRYD9999               * eof - finished
.
          MATCH     WRKBDAT2,PBDATE              * same date of birth ?
          GOTO      TRYD9999 IF NOT EQUAL        * no - finished
.
TRYD1000  BRANCH    PSTAT,TRYD0500               * Skip merged U/R
.
          MATCH     WRKGENDR,PSEX                * same gender ?
          GOTO      TRYD0500 IF NOT EQUAL        * no - get next record
.
          MATCH     WRKSNAME,PSNAME              * same surname ?
          GOTO      TRYD0500 IF NOT EQUAL        * no - get next record
.
          MATCH     WRKADDR1,PADD1               * same address 1 ?
          GOTO      TRYD0500 IF NOT EQUAL        * no - get next record
.
          MATCH     WRKSUBRB,PSUBRB              * same suburb ?
          GOTO      TRYD0500 IF NOT EQUAL        * no - get next record
.
.         Only match address line 4 (state) if it's populated as
.         patient's in webPAS may not have a value in that field.
.
          MATCH     PADD4,SP70
          IF        !@EQUAL
            MATCH     WRKADDR4,PADD4             * same address 4 ?
            GOTO      TRYD0500 IF NOT EQUAL      * no - get next record
          ENDIF
.
          MOVE      PSNAME,WRKFRMNM              * load full formatted name
          STRIP     WRKFRMNM
          ENDSET    WRKFRMNM
          APPEND    ", ",WRKFRMNM
          APPEND    PGNAME,WRKFRMNM
          APPEND    SP70,WRKFRMNM
          RESET     WRKFRMNM
.
          MOVE      ONE,MATCHFND                 * set flag for match
.
TRYD9999  RETURN
+
.******************************************************************************
.*                                  PRIN0000             Called by : REPT0000 *
.*                      Print RGO Birth and Death record line                 *
.******************************************************************************
.
PRIN0000  MATCH     ZEROUR,WRKURNUM              * zero U/R ?
          IF        @EQUAL
            PACK      PRNTURNO,SP8               * yes - print as spaces
          ELSE
            MOVE      WRKURNUM,PRNTURNO          * print as normal
          ENDIF
.
.         Format patient gender
.
          MOVE      WRKGENDR,PRINTSEX
          MATCH     "M",WRKGENDR
          IF        @EQUAL
            MOVE      "Male",PRINTSEX
          ENDIF
          MATCH     "F",WRKGENDR
          IF        @EQUAL
            MOVE      "Female",PRINTSEX
          ENDIF
.
          MOVE      WRKFRMNM,PRNTWNAM
          MOVE      WRKRGONM,PRNTRNAM
.
          BRANCH    WORKTYPE,PRIN1000:           * accepted
                             PRIN2000:           * irregularites
                             PRIN3000            * exceptions
.
.         Accepted record
.
PRIN1000  BRANCH    COPTION,PRIN1100:            * birth record
                            PRIN1200             * death record
.
PRIN1100  PRINT     *1,PRNTURNO:                 * accepted birth
                    *17,PRNTWNAM:
                    *56,PRNTRNAM
          GOTO      PRIN9000
.
PRIN1200  PRINT     *1,PRNTURNO:                 * accepted death
                    *17,PRNTWNAM:
                    *56,PRNTRNAM:
                    *91,PRINTSEX:
                    *100,WRKBDAT1:
                    *114,WRKDDAT1
          GOTO      PRIN9000
.
.         Irregularity record (births and deaths)
.
PRIN2000  PRINT     *1,PRINTSEX:
                    *17,WRKBDAT1:
                    *40,PRNTRNAM:
                    *79,WRKERROR
          GOTO      PRIN9000
.
.         Exception record (births and deaths)
.
PRIN3000  PRINT     *1,PRNTURNO:
                    *17,PRNTRNAM:
                    *52,PRINTSEX:
                    *64,WRKBDAT1:
                    *79,WRKERROR
.
PRIN9000  ADD       ONE,CLNO                     * increment line count
          ADD       ONE,PRINTCNT                 * increment rec. type count
.
PRIN9999  RETURN
+
.******************************************************************************
.*                                  CLWK0000             Called by : UPBF0000 *
.*              Clear Upload Report file and work fields             UPDF0000 *
.******************************************************************************
.
CLWK0000  MOVE      ZERO,WRKRTYPE                * clear work temp file vars.
          MOVE      SP70,WRKURNUM
          MOVE      SP70,WRKFRMNM
          MOVE      SP70,WRKGENDR
          MOVE      SP70,WRKBDAT1
          MOVE      SP70,WRKDDAT1
          MOVE      SP70,WRKRGONM
          MOVE      SP70,WRKERROR
          MOVE      SP70,WRKSNAME
          MOVE      SP70,WRKMDAT2
          MOVE      SP70,WRKBDAT2
          MOVE      SP70,WRKFGNAM
          MOVE      SP70,WRKSGNAM
          MOVE      SP70,WRKADDR1
          MOVE      SP70,WRKADDR2
          MOVE      SP70,WRKSUBRB
          MOVE      SP70,WRKADDR4
          MOVE      SP70,WRKPCODE
          MOVE      SP70,WRKMDAT1
          MOVE      ZERO,WRKCOUNT
          MOVE      SP70,WRKDDAT2
          PACK      WRKGNAME,SP70,SP70
.
          PACK      PMIFNAME,SP70           * clear other working variables
          PACK      PMISNAME,SP70
          PACK      PMICATNM,SP70
          PACK      SAVISNAM,SP70
          PACK      SAVIGNAM,SP70
          PACK      SAVPFNAM,SP70
          PACK      SAVPSNAM,SP70
.
CLWK9999  RETURN
+
.*******************************************************************************
.*                                  VDTE0000              Called by : UBFLD000 *
.*                           Validate a date field                    UDFLD000 *
.* Requires:  TEMPDATE - Date in format ccyymmdd                               *
.* Returns:   EXIT = 1 if an error in date validation occurs.                  *
.*******************************************************************************
.
VDTE0000  SQUEEZE   TEMPDATE
          MOVELPTR  TEMPDATE,FORM1
          IF        FORM1 <> 8
            GOTO      VDTE9800
          ENDIF
.
          MOVE      CCENT,FORM2
          IF        FORM2 < 18 | FORM2 > CCC
            GOTO      VDTE9800
          ENDIF
.
          MOVE      CMON,FORM2
          IF        FORM2 < 1 | FORM2 > 12
            GOTO      VDTE9800
          ENDIF
.
          BRANCH    FORM2,VDTE1000:              * Jan
                          VDTE3000:              * Feb
                          VDTE1000:              * Mar
                          VDTE2000:              * Apr
                          VDTE1000:              * May
                          VDTE2000:              * Jun
                          VDTE1000:              * Jul
                          VDTE1000:              * Aug
                          VDTE2000:              * Sep
                          VDTE1000:              * Oct
                          VDTE2000:              * Nov
                          VDTE1000               * Dec
.
.                                                * Validate days for 31 day Mths
VDTE1000  MOVE      CDAY,FORM2
          IF        FORM2 < 1 | FORM2 > 31
            GOTO      VDTE9800
          ENDIF
          GOTO      VDTE9900
.                                                * Validate days for 30 day Mths
VDTE2000  MOVE      CDAY,FORM2
          IF        FORM2 < 1 | FORM2 > 30
            GOTO      VDTE9800
          ENDIF
          GOTO      VDTE9900
.                                                * Validate days for February
.   N.B. A leap year is one where:
.        If the year is divisible 100 and 400, then it is a leap century year
.        Otherwise every year divisible by 4 is a leap year.
.
VDTE3000  MOVE      CDAY,FORM2
          PACK      D4,CCENT,CYEAR
          MOVE      D4,FORM4
          MOVE      TWENTY8,LEAPDAYS             * Normal February Days
.
          IF        (FORM4%4) = 0
            IF        (FORM4%100) = 0
              IF        (FORM4%400) = 0
                MOVE      TWENTY9,LEAPDAYS       * Leap Century February Days
              ENDIF
            ELSE
              MOVE      TWENTY9,LEAPDAYS         * Leap Year February Days
            ENDIF
          ENDIF
.                                                * Check for February days
VDTE3100  IF        FORM2 < 1 | FORM2 > LEAPDAYS
            GOTO      VDTE9800
          ENDIF
          GOTO      VDTE9900
.
VDTE9800  MOVE      ONE,EXIT
          GOTO      VDTE9999
.
VDTE9900  MOVE      ZERO,EXIT
.
VDTE9999  RETURN
+
.******************************************************************************
.*                                  WWRK0000             Called by : UPBF0000 *
.*                          Write Upload Report record               UPDF0000 *
.******************************************************************************
.
WWRK0000  MOVE      SP8,WRKURNUM                 * load webPAS UR/No
.
          STRIP     SAVISNAM                     * format RGO name
          STRIP     SAVIGNAM
          PACK      WRKRGONM,SAVISNAM,COMMA,SP1,SAVIGNAM,SP70
.
          MOVE      COUNTER,WRKCOUNT             * load unique record counter
          CALL      WRWORK1                      * Write Upload Report Record
.
WWRK9999  RETURN
+
.******************************************************************************
.*                                  PRHD0000             Called by : REPT0000 *
.*                      Print report header details                           *
.******************************************************************************
.
PRHD0000  COMPARE   SIXTY,CLNO                   * page full ?
          GOTO      PRHD1000 IF LESS             * no
.
          CALL      HEAD132                      * yes - print new page header
.
          PRINT     "Load file     :":
                    *N,*6,PATHNAME
.
          MOVE      FIVE,CLNO
.
PRHD1000  BRANCH    COPTION,PRHD2000:            * births
                            PRHD3000             * deaths
.
.         Print Birth Header
.
PRHD2000  BRANCH    WORKTYPE,PRHD2100:           * accepted records
                             PRHD2200:           * irregularities
                             PRHD2300            * exceptions
.
PRHD2100  PRINT     *N,"ACCEPTED BIRTH RECORDS":
                    *N,*N,"webPAS UR",*17,"Child's Name",*56,"RGO Name":
                    *N,"---------",*17,"---------------------------------":
                       *56,"---------------------------------"
          ADD       FOUR,CLNO
          GOTO      PRHD9999
.
PRHD2200  PRINT     *N,"BIRTH IRREGULARITY DATA":
                    *N,*N,"Sex",*17,"Birth Date",*40,"RGO Name",*79,"Error":
                    *N,"---------",*17,"----------":
                       *40,"---------------------------------":
                       *79,"---------------------------------"
          ADD       FOUR,CLNO
          GOTO      PRHD9999
.
PRHD2300  PRINT    *N,"BIRTH EXCEPTION REPORT":
                   *N,*N,"webPAS UR",*17,"RGO Name",*52,"Sex":
                      *64,"Birth Date",*79,"Error":
                   *N,"---------",*17,"---------------------------------":
                      *52,"------",*64,"----------":
                      *79,"---------------------------------"
          ADD       FOUR,CLNO
          GOTO      PRHD9999
.
.         Print Death Header
.
PRHD3000  BRANCH    WORKTYPE,PRHD3100:           * accepted records
                             PRHD3200:           * irregularities
                             PRHD3300            * exceptions
.
PRHD3100  PRINT     *N,"ACCEPTED DEATH RECORDS":
                    *N,*N,"webPAS UR",*17,"Patient Name",*56,"RGO Name":
                       *91,"Sex",*100,"Birth Date",*114,"Death Date":
                    *N,"---------",*17,"---------------------------------":
                       *56,"---------------------------------":
                       *91,"------",*100,"----------",*114,"----------"
          ADD       FOUR,CLNO
          GOTO      PRHD9999
.
PRHD3200  PRINT     *N,"DEATH IRREGULARITY DATA":
                    *N,*N,"Sex",*17,"Birth Date",*40,"RGO Name",*79,"Error":
                    *N,"---------",*17,"----------":
                       *40,"---------------------------------":
                       *79,"---------------------------------"
          ADD       FOUR,CLNO
          GOTO      PRHD9999
.
PRHD3300  PRINT    *N,"DEATH EXCEPTION REPORT":
                    *N,*N,"webPAS UR",*17,"RGO Name",*52,"Sex":
                       *64,"Birth Date",*79,"Error":
                    *N,"---------",*17,"---------------------------------":
                       *52,"------",*64,"----------":
                       *79,"---------------------------------"
          ADD       FOUR,CLNO
.
PRHD9999  RETURN
+
.******************************************************************************
.*                         CLNK0000                Called by: TRYB0000        *
.*           Check for a Mother/Child link type                               *
.******************************************************************************
.
CLNK0000  PACK      KEY5,ANSL,ANSU,LINKREA
          CALL      RDCODE1                      * link code on file ?
          BRANCH    OVRCD,CLNK9100               * no
.
          MATCH     "M",TCINDC1                  * Mother/Child link ?
          GOTO      CLNK9100 IF NOT EQUAL        * no
.
          MOVE      ZERO,EXIT                    * yes
          GOTO      CLNK9999
.
CLNK9100  MOVE      ONE,EXIT
.
CLNK9999  RETURN
+
.******************************************************************************
.*                                  PTOT0000             Called by : REPT0000 *
.*                        Print sub report totals                             *
.******************************************************************************
.
PTOT0000  BRANCH  WORKTYPE,PTOT1000:             * accepted
                           PTOT2000:             * irregularity
                           PTOT3000              * exception
.
PTOT1000  PRINT   *N,"Total Processed ",PRINTCNT,*N,*N
          GOTO    PTOT9000
.
PTOT2000  PRINT   *N,"Total Unmatched ",PRINTCNT,*N,*N
          GOTO    PTOT9000
.
PTOT3000  PRINT   *N,"Total Exceptions ",PRINTCNT,*N,*N
.
PTOT9000  MOVE    ZERO,PRINTCNT                  * initialise rec type count
          ADD     FOUR,CLNO                      * update line count
.
PTOT9999  RETURN
+
.*****************************************************************************
.*                               REPT0000          Called by: MAIN0000       *
.*                    Print report of upload                                 *
.*****************************************************************************
.
REPT0000  DISPLAY   *P1:24,*EL,*P10:24,"Printing: ";
.
          MOVE      ONE,WORKTYPE                 * initialise record type
          MOVE      ZERO,PRINTCNT                * initialise rec type count
          MOVE      SEVENTY,CLNO                 * set line count for new page
          MOVE      ZERO,CPAGENO                 * initialise page count
.
.         This is a new record type, so print the relevant header
.
REPT0200  CALL      PRHD0000
.
.         Loop through the temp file looking for records of the current record
.         type only
.
          PACK      KEY7,WORKTYPE,SP7
          CALL      RSWORK1                      * position at start of type
REPT0500  CALL      RKWORK1                      * read next record
          BRANCH    OVRCD,REPT0800               * eof - finished
.
          COMPARE   WRKRTYPE,WORKTYPE            * same record type ?
          GOTO      REPT1000 IF EQUAL            * yes
.
REPT0800  CALL      PTOT0000                     * print total records
          ADD       ONE,WORKTYPE                 * increment record type
.
          COMPARE   WORKTYPE,THREE               * last record type ?
          GOTO      REPT9000 IF LESS             * yes - finished
.
          GOTO      REPT0200                     * no - loop for next rec type
.
REPT1000  COMPARE   SIXTY,CLNO                   * page full ?
          CALL      PRHD0000 IF NOT LESS         * yes
.
          CALL      PRIN0000                     * print record
          GOTO      REPT0500                     * get next record
.
REPT9000  PRINT     "*** End of Report ***"
.
REPT9999  RETURN
+
.*****************************************************************************
.*                               CDUP0000          Called by: MAIN0000       *
.*                  Check for duplicate birth records                        *
.*****************************************************************************
.
CDUP0000  MOVE      SP20,SAVESNAM                * initialise save variables
          MOVE      SP8,SAVEMDOB
          MOVE      SP8,SAVEBDOB
          MOVE      ONE,DUPLFLAG                 * initialise duplicate flag
          MOVE      ZERO,ENDOFILE                * initialise eof flag
.
          MOVE      SP70,KEY42
          CALL      RSWORK2                      * position at start of file
CDUP0500  CALL      RKWORK2                      * read the first record
          IF        OVRCD = 1
            MOVE      ONE,ENDOFILE               * set end of file flag
            GOTO      CDUP8000
          ENDIF
.
.         Save the key for the current record we are processing
.
          PACK      CURKEY42,WRKSNAME,WRKMDAT2,WRKBDAT2,WRKCOUNT
.
.         Note: Preliminary validations in UBLFD000 will already have picked
.         up errors relating to surname, mother's DOB and patient's DOB,
.         which are the critical fields for checking for duplicate births,
.         so we only need to check if this is an error record based on
.         either of the following:
.>>>>>>    (a) Sex must be M or F
.>>>>>>    (B) Birth date > 35 Years
.         If it is, then we still need to check for a duplicate birth and
.         if found, then overwrite the original error message to reflect
.         a duplicate birth.
.
          MATCH     SP8,WRKMDAT2                 * blank mother's DOB ?
          GOTO      CDUP0500 IF EQUAL            * yes - check for pmi match
.
.         We have a record where surname, mother's DOB and patient DOB
.         are all populated, so check if this is the first record we are
.         validating
.
          MATCH     SP20,SAVESNAM                * blank saved surname ?
          GOTO      CDUP8000 IF EQUAL            * yes - first record
.
.         This is not the first record we are validating, so check if
.         the patient surname has changed
.
CDUP1000  MATCH     SAVESNAM,WRKSNAME            * same surname still ?
          GOTO      CDUP8000 IF NOT EQUAL        * no
.
.         The patient surname is still the same, so check if
.         the mother's DOB has changed
.
          MATCH     SAVEMDOB,WRKMDAT2            * same mother's DOB ?
          GOTO      CDUP8000 IF NOT EQUAL        * no
.
.         We have a record with the same surname and mother's DOB,
.         so check if the patient DOB is within a day of the patient
.         DOB from the previous record
.
          MOVE      WRKBDAT2,WORKDATE            * load current patient's DOB
          DAYSEP    WORKDATE,SAVEBDOB,DAYSNUMB
          IF        DAYSNUMB > -2 & DAYSNUMB < 2
            MOVE      TWO,WRKRTYPE
            MOVE      IRREG003,WRKERROR
            CALL      UPWORK2
            MOVE      ZERO,DUPLFLAG              * set duplicate flag
            GOTO      CDUP0500
          ENDIF
.
.         This is either the first record we are validating, or we have
.         a change in either surname or mother's DOB.  As such, we need
.         to save the new surname and mother's DOB fields as well as saving
.         the key to the current record (in case we need to go back and
.         update the record with an error message for duplicate birth).
.
.         First check if we found a duplicate birth record for the previous
.         surname/mother's DOB combination
.
CDUP8000  IF        DUPLFLAG = 1
            BRANCH    ENDOFILE,CDUP9000          * finished
            GOTO      CDUP8300
          ENDIF
.
.         We found a duplicate birth record, so go back and update the first
.         record for that combination with the duplicate birth message/status
.
          MOVE      FSTKEY42,KEY42
          CALL      RDWORK2                      * record on file ?
          BRANCH    OVRCD,CDUP9100               * no - shouldn't happen
.
          MOVE      TWO,WRKRTYPE                 * irregularity record
          MOVE      IRREG003,WRKERROR            * duplicate birth row
          CALL      UPWORK2                      * update record
          BRANCH    ENDOFILE,CDUP9000            * finished
.
.         Now reposition back on the record we were are about to process.
.
CDUP8100  MOVE      CURKEY42,KEY42
          CALL      RDWORK2                      * current record found ?
          BRANCH    OVRCD,CDUP9100               * no - shouldn't happen
.
.         Now reset the duplicate flag and load the new surname, mother's DOB
.         and patient DOB before continuing
.
CDUP8200  MOVE      ONE,DUPLFLAG                 * reset duplicate flag
CDUP8300  MOVE      WRKSNAME,SAVESNAM            * save new surname
          MOVE      WRKMDAT2,SAVEMDOB            * save new mother's DOB
          MOVE      WRKBDAT2,SAVEBDOB            * save new patient DOB
          PACK      FSTKEY42,WRKSNAME,WRKMDAT2,WRKBDAT2,WRKCOUNT
          GOTO      CDUP0500                     * get next record
.
CDUP9000  MOVE      ZERO,EXIT
          GOTO      CDUP9999
.
CDUP9100  PRINT     *N,"Duplicate birth processing error - Load aborted"
          MOVE      ONE,EXIT
.
CDUP9999  RETURN
+
.*****************************************************************************
.*                               VSTR0000          Called by: UBFLD000       *
.*                                                            UDFLD000       *
.* Check for special characters in a string. A character greater than        *
.* octal 0176 or less than 040.                                              *
.* Requires:  VALSTRNG - String to validate for special characters           *
.* Returns :  EXIT = 0 No special character found.                           *
.*            EXIT = 1 Yes special character found.                          *
.*****************************************************************************
VSTR0000  MATCH     SP70,VALSTRNG           * Is the string empty
          GOTO      VSTR8000 IF EQUAL
.
          MOVE      SP70,DIM1
.
VSTR1000  MOVE      VALSTRNG,DIM1           * Get 1 character
.
          MATCH     DIM1,OCTALHIG           * Not greater than octal 0176
          GOTO      VSTR9000 IF LESS
.
          MATCH     OCTALLOW,DIM1           * Not less than octal 040
          GOTO      VSTR9000 IF LESS
.
          BUMP      VALSTRNG                * Bump to next character
          GOTO      VSTR1000 IF NOT EOS
.
VSTR8000  RESET     VALSTRNG                * OK no special characters found
          MOVE      ZERO,EXIT
          GOTO      VSTR9999
.
VSTR9000  RESET     VALSTRNG                * Error special character found
          MOVE      ONE,EXIT
          GOTO      VSTR9999
.
VSTR9999  RETURN
+
.*******************************************************************************
.* I/O routines for report file                                                *
.*******************************************************************************
.
.         Index 1
.
RSWORK1   READ      WORK1,KEY7;;
          RETURN
.
RKWORK1   MOVE      ZERO,OVRCD
          READKS    WORK1;DWRKRTYP,WRKURNUM,WRKFRMNM,WRKGENDR,WRKBDAT1:
                          WRKDDAT1,WRKRGONM,WRKERROR,WRKSNAME,WRKMDAT2:
                          WRKBDAT2,WRKFGNAM,WRKSGNAM,WRKADDR1,WRKADDR2:
                          WRKSUBRB,WRKADDR4,WRKPCODE,WRKMDAT1,DWRKCNTR:
                          WRKDDAT2,WRKGNAME
          GOTO      OVERCOND IF OVER
          MOVE      DWRKRTYP,WRKRTYPE
          MOVE      DWRKCNTR,WRKCOUNT
          RETURN
.
RDWORK1   MOVE      ZERO,OVRCD
          READ      WORK1,KEY7;DWRKRTYP,WRKURNUM,WRKFRMNM,WRKGENDR,WRKBDAT1:
                               WRKDDAT1,WRKRGONM,WRKERROR,WRKSNAME,WRKMDAT2:
                               WRKBDAT2,WRKFGNAM,WRKSGNAM,WRKADDR1,WRKADDR2:
                               WRKSUBRB,WRKADDR4,WRKPCODE,WRKMDAT1,DWRKCNTR:
                               WRKDDAT2,WRKGNAME
          GOTO      OVERCOND IF OVER
          MOVE      DWRKRTYP,WRKRTYPE
          MOVE      DWRKCNTR,WRKCOUNT
          RETURN
.
UPWORK1   MOVE      WRKRTYPE,DWRKRTYP
          MOVE      WRKCOUNT,DWRKCNTR
          UPDATE    WORK1;DWRKRTYP,WRKURNUM,WRKFRMNM,WRKGENDR,WRKBDAT1:
                          WRKDDAT1,WRKRGONM,WRKERROR,WRKSNAME,WRKMDAT2:
                          WRKBDAT2,WRKFGNAM,WRKSGNAM,WRKADDR1,WRKADDR2:
                          WRKSUBRB,WRKADDR4,WRKPCODE,WRKMDAT1,DWRKCNTR:
                          WRKDDAT2,WRKGNAME
          RETURN
.
WRWORK1   MOVE      WRKRTYPE,DWRKRTYP
          MOVE      WRKCOUNT,DWRKCNTR
          WRITE     WORK1,KEY7;DWRKRTYP,WRKURNUM,WRKFRMNM,WRKGENDR,WRKBDAT1:
                               WRKDDAT1,WRKRGONM,WRKERROR,WRKSNAME,WRKMDAT2:
                               WRKBDAT2,WRKFGNAM,WRKSGNAM,WRKADDR1,WRKADDR2:
                               WRKSUBRB,WRKADDR4,WRKPCODE,WRKMDAT1,DWRKCNTR:
                               WRKDDAT2,WRKGNAME
          RETURN
.
DEWORK1   RESET     KEY7
          DELETE    WORK1,KEY7
          RETURN
.
.         Index 2
.
RSWORK2   READ      WORK2,KEY42;;
          RETURN
.
RKWORK2   MOVE      ZERO,OVRCD
          READKS    WORK2;DWRKRTYP,WRKURNUM,WRKFRMNM,WRKGENDR,WRKBDAT1:
                          WRKDDAT1,WRKRGONM,WRKERROR,WRKSNAME,WRKMDAT2:
                          WRKBDAT2,WRKFGNAM,WRKSGNAM,WRKADDR1,WRKADDR2:
                          WRKSUBRB,WRKADDR4,WRKPCODE,WRKMDAT1,DWRKCNTR:
                          WRKDDAT2,WRKGNAME
          GOTO      OVERCOND IF OVER
          MOVE      DWRKRTYP,WRKRTYPE
          MOVE      DWRKCNTR,WRKCOUNT
          RETURN
.
RDWORK2   MOVE      ZERO,OVRCD
          READ      WORK2,KEY42;DWRKRTYP,WRKURNUM,WRKFRMNM,WRKGENDR,WRKBDAT1:
                                WRKDDAT1,WRKRGONM,WRKERROR,WRKSNAME,WRKMDAT2:
                                WRKBDAT2,WRKFGNAM,WRKSGNAM,WRKADDR1,WRKADDR2:
                                WRKSUBRB,WRKADDR4,WRKPCODE,WRKMDAT1,DWRKCNTR:
                                WRKDDAT2,WRKGNAME
          GOTO      OVERCOND IF OVER
          MOVE      DWRKRTYP,WRKRTYPE
          MOVE      DWRKCNTR,WRKCOUNT
          RETURN
.
UPWORK2   MOVE      WRKRTYPE,DWRKRTYP
          MOVE      WRKCOUNT,DWRKCNTR
          UPDATE    WORK2;DWRKRTYP,WRKURNUM,WRKFRMNM,WRKGENDR,WRKBDAT1:
                          WRKDDAT1,WRKRGONM,WRKERROR,WRKSNAME,WRKMDAT2:
                          WRKBDAT2,WRKFGNAM,WRKSGNAM,WRKADDR1,WRKADDR2:
                          WRKSUBRB,WRKADDR4,WRKPCODE,WRKMDAT1,DWRKCNTR:
                          WRKDDAT2,WRKGNAME
          RETURN
+
*******************************************************************************
.
          INC       STD001IO
.
          INC       ACTMSAV
          INC       CALCAGE
          INC       CLNHIMAS
          INC       DGCLICUP
          INC       PATCOMN2
          INC       SEPRNAME
          INC       TFILENAM
          INC       UPDUR
          INC       DEATHAUD
          INC       CLPMSDAU
.
          INC       BOKRC1IO/INC
          INC       IBASEQIO/INC
          INC       NHIETHIO/INC
          INC       NHIMASIO/INC
          INC       PATAM1IO/INC
          INC       PATCODIO/INC
          INC       PATDSCIO/INC
          INC       PATDTHIO/INC
          INC       PATGSRIO/INC
          INC       PATINVIO/INC
          INC       PATLINIO/INC
          INC       PATLOCIO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PATNIDIO/INC
          INC       PATPA1IO/INC
          INC       PATPR1IO/INC
          INC       PATRE1IO/INC
          INC       PATURAIO/INC
          INC       PATVISIO/INC
          INC       PMSCURIO/INC
          INC       PMSPX2IO/INC
          INC       PMSVX1IO/INC
          INC       PMSDAUIO/INC
          INC       WEBSECIO/INC
          INC       WEBERRIO/INC
