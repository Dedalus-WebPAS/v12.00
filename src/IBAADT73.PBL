.******************************************************************************
.* System         : Patient Billing                                           *
.* Program        : IBAADT73.PBL                                              *
.* Name           : TAC EDI Inpatients Account Extract                        *
.******************************************************************************
.* Date           : 03/11/1999   (re-build 14/05/2009)                        *
.* Author         : Greg Horvat / Mike Laming                                 *
.* Function       : Extract EDI Inpatient details for Victorian TAC           *
.* Modifications  :                                                           *
.* V12.00.01  30/05/2025 Jacob Jackson  TSK 0955096                           *
.*            Alphanumeric changes                                            *
.* V11.04.01  05/03/2024 Ebon Clements  TSK 0936738                           *
.*            Changed misc charge reads for use MISCDATE instead of CURRDATE  *
.*            PATMCHRD. Get ME record provider number from TDOCTA             *
.*            provider number 1 DPROV (PMHCPRV1) - GPRO0000                   *
.* V10.05.01  19/09/2014 Sandra Barcham CAR 305730                            *
.*            if this is Medial Admision it change the 'Inpatient Type' to 3  *
.*            blanks spaces, The setup is Admision Type Indicator 9 = C       *
.* V10.04.01  15/06/2014 Jill Parkinson CAR 301639                            *
.*            Moved call TFILENAM to INIT000                                  *
.* V10.03.05  19/12/2012 Patrick Adair                             CAR 261630 *
.*                       Removed port number from temp file name              *
.*        V10.03.04 24/02/2012  Peter Vela    CAR 260667                      *
.*                  Changed TADMTYP back to ATYPE @ WTLV0000                  *
.*        V10.03.03 03/02/2012  Peter Vela    CAR 259138                      *
.*                  Changed ATYPE to TADMTYP @ WTIP0000 and WTLV0000          *
.*        V10.03.02 03/02/2012  Peter Vela    CAR 259138                      *
.*                  Added new validations for Inpatient Type when Indicator   *
.*                  9 = X @ GXCD0000                                          *
.*        V10.03.01 02/02/2012  Peter Vela    CAR 259138                      *
.*                  Added validation for new Inaptient Type when Indicator    *
.*                  9 = X @ WTIP0000                                          *
.*        V10.02.01 28/03/2011  Mike Laming   CAR 240107                      *
.*                  Mods to PATECDaf & PATECOaf variables & Keys - file change*
.*        V10.01.01 17/12/2010  Mike Laming   CAR 233046                      *
.*                  Mods to Misc.Charges PATMCHFD - Key change, logic changes *
.*        V10.00.01 30/04/2010 J.Tan         CAR 220887                       *
.*                  Mods checking for Active/Inactive of Misc.charge          *
.*        V9.12.16  18/01/2010  Mike Laming   CAR 213368                      *
.*                  Further mod to allow "ME" only records to be processed in *
.*                  routine GTPT0000                                          *
.*        V9.12.15  13/01/2010  Mike Laming   CAR 213368                      *
.*                  Mods to WTME0000 to read Provider No. from DTR TDDESC     *
.*        V9.12.14  12/01/2010  Mike Laming   CAR 213368                      *
.*                  Re-insert WTME0000 routine (bypasses "HBF" & "BLF" Items) *
.*        V9.12.13  06/01/2010  Mike Laming   CAR 213368                      *
.*                  Fix to FROMDATE for NHOSPDAY at WTIP2000                  *
.*        V9.12.12  04/01/2010  Mike Laming   CAR 213368                      *
.*                  Mods to GSEQ0000 to set "ID" sequence code                *
.*        V9.12.11  18/12/2009  Mike Laming   CAR 212672                      *
.*                  Another fix XXIPISEQ                                      *
.*        V9.12.10  16/12/2009  Mike Laming   CAR 212672                      *
.*                  Add routine GSEQ0000 to get Item sequence code in SERVSEQ *
.*        V9.12.09  14/12/2009  Mike Laming   CAR 212297                      *
.*                  Change date range calculation at WTLV3000                 *
.*        V9.12.08  11/12/2009  Mike Laming   CAR 212297                      *
.*                  Fix to read Misc. Items "HBF" & "BLF" as an "IP" record   *
.*        V9.12.07  04/12/2009  Mike Laming   CAR 211747                      *
.*                  Fix CALLs to SMIS0000 & GITA0000 for multiple Misc.Charges*
.*        V9.12.06  12/10/2009  Mike Laming   CAR 207895                      *
.*                  Comment out both Calls to WTTX0000 (Taxi Charges)         *
.*        V9.12.05  27/08/2009  Mike Laming   CAR 201835                      *
.*                  Add code to bypass zero balance Invoices at LOAD2000      *
.*        V9.12.04  24/07/2009  Mike Laming   CAR 201835                      *
.*                  Add PATECDaf and PATECOaf for ICD Codes in "IC" record    *
.*        V9.12.03  23/07/2009  Mike Laming   CAR 201835                      *
.*                  Add an Invoice No OPTION & ".us1" script file transfer    *
.*        V9.12.02  15/06/2009  Mike Laming   CAR 195877                      *
.*                  Fix REPEAT loop at GTPT1000                               *
.*        V9.12.01  06/05/2009  Mike Laming   CAR 195875                      *
.*                  Ported from V9.11.01                                      *
.*        V9.11.00  06/05/2009  Mike Laming   CAR 195875                      *
.*                  Ported from v6.17 IBAADT73 and re-built for Inpatients    *
.*                                                                            *
.*                                                                            *
.******************************************************************************
+
          INC       STD001FD
.
          INC       IBACONFD/INC            * Control file
          INC       IBAGEDFD/INC            * GST rate file
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       PATCODFD/INC            * Codes file
          INC       PATCONFD/INC            * Control file
          INC       PATDO1FD/INC            * Doctor file
          INC       PATDSCFD/INC            * Discharge file
          INC       PATDTRFD/INC            * DTR file
          INC       PATEBHFD/INC            * EDI batch header file
          INC       PATEBIFD/INC            * EDI batch invoice file
          INC       PATECDFD/INC            * Patient ICD10 Disease Codes
          INC       PATECOFD/INC            * Patient ICD10 Operation Codes
          INC       PATEDAFD/INC            * EDI audit file
          INC       PATFN1FD/INC            * Health Fund rable
          INC       PATICDFD/INC            * ICD disease file
          INC       PATINVFD/INC            * Invoice file
          INC       PATITMFD/INC            * Item file
          INC       PATMA1FD/INC            * Master file
          INC       PATMCHFD/INC            * Miscellaneous charges file
          INC       PATMI1FD/INC            * Admin file
          INC       PATTRNFD/INC            * Transfer file
          INC       PATWMAFD/INC            * TAC file
          INC       PMSVX1FD/INC
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
. ----- Tempfile variables -----
.
EXTFILE1  FILE      ASCII,FIXED=256
.
TEMP1     IFILE     SQL,FIXED=42, KEY="U1-8"
TEMP2     IFILE     SQL,FIXED=42, KEY="U11-18,1-8"
FILELIN1  INIT      " 42 U1-8 U11-18,1-8"
.
.Name     Type   Length   Physical   Start   Description
.----     ----   ------   --------   -----   -----------
TMPINVNO  DIM       8         8        1     Invoice no
DUMMY1    DIM       1         1        9     Medical/Paramedical flag (O/P only)
DUMMY2    DIM       1         1        10    Taxi voucher flag (O/P only)
TMPADMNO  DIM       8         8        11    Admin no
TMPERFLG  DIM       1         1        19    Tempfile error flag
TMPINAMT  FORM    12.2       11        20    Invoice Item amount
TMPGSTAM  FORM    12.2       11        31    Invoice GST amount
.
.End of Record                         42
.
TMFADMNO  DIM       8                       * Admin no
.
. ----- TAC Record Layouts
. ----- Batch Header Record
XXHDTYPE  DIM       2         1             * Record Type "HD"
XXHDTXNO  DIM       8         3             * TAC Transmiter No.
XXHDINVC  DIM       4         11            * No. of Accounts (No.of Invoices)
XXHDCDAT  DIM       8         15            * Batch Created Date (ccyymmdd)
XXHDCTIM  DIM       6         23            * Batch Created Time (hhmmss)
XXHDLBDT  DIM       8         29            * Last Batch (valid) Create Date
XXHDLBTM  DIM       6         37            * Last Batch (valid) Create Time
XXHDTAMT  DIM       12        43            * Batch Total Amount (in cents)
XXHDTTXT  DIM       11        55            * text "TAX Invoice"
XXHDHABN  DIM       11        66            * Provider (Hospital) ABN
XXHDHNAM  DIM       30        77            * Provider (Hospital) Name
XXHDTABN  DIM       11        107           * TAC ABN
XXHDTNAM  DIM       3         118           * TAC Name
.                       e-o-r 120
.
. ----- Patient Detail Record
XXACTYPE  DIM       2         1             * Record Type "AC"
XXACPYNO  DIM       8         3             * TAC Payee Number
XXACPYTY  DIM       2         11            * TAC Payee Type
XXACCLMN  DIM       8         13            * TAC Claim No.
XXACSNAM  DIM       25        21            * Patient Surname
XXACGNM1  DIM       25        46            * 1st Given Name
XXACGNM2  DIM       25        71            * 2nd Given Name
XXACADD1  DIM       25        96            * Address Line 1
XXACADD2  DIM       25        121           * Address Line 2
XXACSUBR  DIM       30        146           * Suburb/Town
XXACPCOD  DIM       4         176           * Postcode
XXACPDOB  DIM       8         180           * Date of Birth (ccyymmdd)
XXACACDT  DIM       8         188           * Date of Accident
XXACTAMT  DIM       9         196           * Total Amount of Account (in cents)
XXACREFN  DIM       20        205           * Provider Reference No.
XXACTGST  DIM       9         225           * Total GSt included (in cents)
.                       e-o-r 233
.
. ----- Inpatient Record
XXIPTYPE  DIM       2         1             * Record Type "IP"
XXIPSTDT  DIM       8         3             * Billing Start Date (Admiss Date)
XXIPENDT  DIM       8         11            * Billing End Date (Disch. Date)
XXIPNDYS  DIM       4         19            * No.of Days Billed
XXIPIPTY  DIM       3         23            * Inpatient Type
XXIPAMNT  DIM       9         26            * Amount  (in cents)
XXIPISEQ  DIM       2         35            * Inpatient Sequence ???
XXIPWIND  DIM       1         37            * Private Ward Ind.
XXIPTXSI  DIM       9         38            * Taxable Supply Ind. or GST Amount
.                       e-o-r 46 
.
. ----- Injury Code
XXICTYPE  DIM       2         1             * Record Type "IC"
XXICCODE  DIM       9         3             * ICD Code
.                       e-o-r 2
.
. ----- Hospital Transport Record
XXTXTYPE  DIM       2         1             * Record Type "TX"
XXTXSDAT  DIM       8         3             * Date of Service (ccyymmdd)
XXTXDEST  DIM       1         11            * Destination Code
XXTXAMNT  DIM       9         12            * Amount (in cents)
XXTXTXSI  DIM       9         21            * Taxable Supply Ind. or GST Amount
.                       e-o-r 29
.
. ----- Medical Record
XXMETYPE  DIM       2         1             * Record Type "ME"
XXMESDAT  DIM       8         3             * Date of Service (ccyymmdd)
XXMESPNO  DIM       8         11            * Service Provider No.
XXMEINVN  DIM       20        19            * Service Invoice No
XXMESCTM  DIM       4         39            * Service Commenced Time 
XXMESLOC  DIM       1         43            * Service Location Code
XXMEITTY  DIM       1         44            * Item Type
XXMEITNO  DIM       6         45            * Item No.
XXMEAMNT  DIM       9         51            * Amount (in cents)
XXMETXSI  DIM       9         60            * Taxable Supply Ind. or GST Amount
.                       e-o-r 69
.
. ----- Batch Trailer Record
XXTLTYPE  DIM       2         1             * Record Type "TL"
XXTLTXNO  DIM       8         3             * TAC Transmitter (Provider) No.
XXTLINCN  DIM       4         11            * Number of Accounts (Invoices)
XXTLCDAT  DIM       8         15            * Batch Create Date (ccyymmdd)
XXTLCTIM  DIM       6         23            * Batch Create Time (hhmmss)
XXTLLBDT  DIM       8         29            * Last Batch (valid) Create Date
XXTLLBTM  DIM       6         37            * Last Batch (valid) Create Time
XXTLTAMT  DIM       12        43            * Amount (in cents)
.                       e-o-r 54
.
TEMPIP    IFILE     SQL, FIXED=76, KEY="U1-29"     * KEY29
FILELIN2  INIT      " 76 U1-29"
.
.Name     Type   Length   Physical   Start   Description
.----     ----   ------   --------   -----   -----------
XXIPKEY     DIM       29        1             * Work File Key
.                               * PINVNO + XXIPSTDT + XXIPENDT + ITEMCNT + SP2
..XXIPTYPE  DIM       2         30            * Record Type "IP"
..XXIPSTDT  DIM       8         32            * Billing Start Date (Admiss Date)
..XXIPENDT  DIM       8         40            * Billing End Date (Disch. Date)
..XXIPNDYS  DIM       4         48            * No.of Days Billed
..XXIPIPTY  DIM       3         52            * Inpatient Type
..XXIPAMNT  DIM       9         55            * Amount  (in cents) 
..XXIPISEQ  DIM       2         64            * Inpatient Sequence ???
..XXIPWIND  DIM       1         66            * Private Ward Ind.
..XXIPTXSI  DIM       9         67            * Taxable Supply Ind. or GST Amnt
.                         e-o-r 76
.
. ----- TAC Literals
TACTNAM   INIT      "TAC"                   * TAC Name        DIM 3
TACABN    INIT      "22033947623"           * TAC ABN         DIM 11
.
. ----- Program variables -----
.
BCHTAMNT  FORM      12.2                    * Batch Total Amount   
BCHINVCT  FORM      4                       * Batch Invoice Count
BCHITMCT  FORM      4                       * Batch Item Count
.
CALDAYS   FORM      4                       * For NHOSPDAY
CDYSDAYS  FORM      6                       * For CALCDAYS
CDYSFDTE  DIM       8                       * For CALCDAYS
CDYSTDTE  DIM       8                       * For CALCDAYS
CDYSYEAR  FORM      2                       * For CALCDAYS
CLMDESC   DIM       20                      * Claim type description
CLMTYPE   DIM       3                       * Claim type
CMDLINE   DIM       80
CODE      DIM       2                       * For PATCODKY
CURRDATE  DIM       8                       * Current date (ccyymmdd)
CURTME6   DIM       6                       * Current time (hhmmss)
CALCDATE  DATE      8
.
DIM2A     DIM       2
DIM2B     DIM       2
DIM2C     DIM       2
DIM3A     DIM       3
DIM4      DIM       4
DIM8A     DIM       8
DIM8B     DIM       8
DIM8C     DIM       8
DIM15A    DIM       15
.
ENDDTE8   DIM       8                       * End date (ccyymmdd)
ERRORFLG  FORM      1                       * Error flag
ERRINVNO  DIM       8                       * Error invoice no
ERRMSG    DIM       60                      * Error message
EXTFNAME  DIM       12                      * Extract file name
.
FNDACCOM  FORM      1
FNAMEA    DIM       8
FNAMEB    DIM       8
FORM10P2  FORM      10.2
FORM12P2  FORM      12.2
FORM6P2   FORM      6.2
FORM7P2   FORM      7.2
FORM3     FORM      3
FORM5     FORM      5
FORM8     FORM      8
FORM9     FORM      9
FROMDATE  DIM       8                       * From date for NHOSPDAY
.
GSTAMNT   FORM      12.2
.
IBALANCE  FORM      12.2                    * Invoice Balance
INPSEQ    DIM       2                       * Inpatient sequence
SERVSEQ   DIM       2                       * Services (or Items) sequence
INVOICEN  FORM      8                       * Invoice No. keyin field (Optn 2)
IPSCT     FORM      2                       * Inpatient sequence counter
ITMCOUNT  FORM      4                       * Invoice counter
ITEMCNT   FORM      3                                                 *I-212672
ITMINAMT  FORM      12.2                    * Item amount
ITMGSTAM  FORM      12.2                    * Item GST amount
.
KEY21A    DIM       21
.
MEPMFLG   FORM      1                       * Medical/Paramedical flag 
MISCDATE  DIM       8                       * Misc charge date
MXNOFSRV  FORM      2                       * Maximum no of services
.
NBRDAYS   FORM      4                       * No of days in hospital
NOOFSERV  FORM      2                       * No of services
NOABN     FORM      1
NOTACP    FORM      1
NOTACITM  FORM      1
.
PROVNO    DIM       8                       * Provider no
RECSREAD  FORM      5                       * Read counter
RECSERR   FORM      5                       * Error counter
RECSWARN  FORM      5                       * Warning counter
RECSWRIT  FORM      5                       * Write counter
READECD   FORM      1
.
SAVADMIN  DIM       8                       * Save the admin no
SAVIPSCT  FORM      2                       * Save the inpatient sequence count
STRTDTE8  DIM       8                       * Start date (ccyymmdd)
STRTTIME  DIM       4                       * Start time (hhmm)
SVKEY26   DIM       26
.
TACDUR    FORM      4                       * TAC duration
TACITMTP  DIM       1                       * TAC item type
TMFERFLG  FORM      1                       * Tempfile error flag
TODATE    DIM       8                       * To date for NHOSPDAY
TXFLG     FORM      1                       * Taxi voucher flag (O/P only)
.
PASSNUMB  FORM      1                       * Validation flag
.
WDATE1    DIM       8                       * For NHOSPDAY
WDATE2    DIM       8                       * For NHOSPDAY
WRNINVNO  DIM       8                       * Warning invoice no
.
XCODINDC  FORM      1
.
. ----- Program constants -----
.
CATBLC    INIT      "BLC"
CATBLF    INIT      "BLF"
CATCCU    INIT      "CCU"
CATDAY    INIT      "DAY"
CATHBF    INIT      "HBF"
CATHDU    INIT      "HDU"
CATICU    INIT      "ICU"
CATILU    INIT      "ILU"
CATNRM    INIT      "NRM"
CATPSY    INIT      "PSY"
CATREH    INIT      "REH"
CATTLC    INIT      "TLC"
CATUNK    INIT      "unk"
ZED30     INIT      "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
.
CAT201    INIT      "201"
CAT202    INIT      "202"
CAT203    INIT      "203"
CAT204    INIT      "204"
CAT205    INIT      "205"
CAT206    INIT      "206"
CAT207    INIT      "207"
CAT208    INIT      "208"
CAT209    INIT      "209"
CAT210    INIT      "210"
CAT211    INIT      "211"
CAT212    INIT      "212"
CAT213    INIT      "213"
CAT214    INIT      "214"
CAT215    INIT      "215"
CAT216    INIT      "216"
CAT217    INIT      "217"
CAT218    INIT      "218"
CAT219    INIT      "219"
CAT220    INIT      "220"
CAT221    INIT      "221"
CAT222    INIT      "222"
CAT223    INIT      "223"
CAT224    INIT      "224"
CAT225    INIT      "225"
CAT226    INIT      "226"
CAT227    INIT      "227"
CAT228    INIT      "228"
CAT229    INIT      "229"
CAT230    INIT      "230"
CAT231    INIT      "231"
CAT232    INIT      "232"
CAT233    INIT      "233"
CAT234    INIT      "234"
CAT235    INIT      "235"
CAT236    INIT      "236"
CAT237    INIT      "237"
CAT238    INIT      "238"
CAT239    INIT      "239"
CAT240    INIT      "240"
CAT241    INIT      "241"
CAT242    INIT      "242"
CAT243    INIT      "243"
CAT244    INIT      "244"
CAT245    INIT      "245"
.
PRGID     INIT      "IBAADT73"
PRGNAM    INIT      "TAC EDI Inpatient Extract"
VERSION   INIT      "V12.00.01"
+
.******************************************************************************
.*                                   ML0000                                   *
.*                                 Main Module                                *
.******************************************************************************
ML0000    CALL      INIT0000                * Initialise variables & open files
.
ML1000    CALL      OPTN0000                * Select main option
          BRANCH    EXIT,ML9999
.         
ML1500    IF        OPTION = 2
            CALL      INNO0000
            BRANCH    EXIT,ML1000
            GOTO      ML5000
          ENDIF
.
ML2000    CALL      CLTY0000                * Keyin the claim type
          BRANCH    EXIT,ML1000,ML1000
.
ML3000    CALL      DATE0000                * Keyin the invoice date range
          BRANCH    EXIT,ML2000
.
ML4000    CALL      CONTQST                 * Ok to Continue (Y/N/C) ?
          BRANCH    CEXIT,ML5000,ML3000,ML1000
          GOTO      ML1000
.
ML5000    CALL      OPEN0000                * Open the tempfile
          CALL      LOAD0000                * Load the tempfile
          CALL      VALD0000                * Validate the tempfile
          CALL      CHEK0000                * Extract question
          IF        EXIT <> 0
            BRANCH    OPTION,ML1000,ML1500
          ENDIF
.
          CALL      CREA0000                * create extract file
          CALL      WRIT0000                * Write to the files
          CALL      SEND0000                * use a ".us1" script to move file
          CALL      KILL0000                * Delete the tempfile
.
          BRANCH    OPTION,ML1000,ML1500
          GOTO      ML1000
.
ML9999    CALL      KILL0000                * Delete the tempfile
          CHAIN     PGM
+
.******************************************************************************
.*                                  INIT0000              Called by: ML0000   *
.*                       Initialise Variable & Open Files                     *
.******************************************************************************
INIT0000  CALL      DISPHEAD                * Display screen heading
          MOVE      "99",CLNO
.
          DISPLAY   *P56:24,"Opening controlf"
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"ibagedaf"
          OPEN      IBAGEDA1,"ibagedaf"
.
          DISPLAY   *P64:24,"patcodes"
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patdo1af"
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P64:24,"patdschf"
          OPEN      PATDSCH1,"patdschf"
.
          DISPLAY   *P64:24,"patdtraf"
          OPEN      PATDTRA4,"patdtraf"
.
          DISPLAY   *P64:24,"patebhaf"
          OPEN      PATEBHA1,"patebhaf"
.
          DISPLAY   *P64:24,"patecdaf"
          OPEN      PATECDA1,"patecdaf"
.
          DISPLAY   *P64:24,"patecoaf"
          OPEN      PATECOA1,"patecoaf"
.
          DISPLAY   *P64:24,"patebiaf"
          OPEN      PATEBIA1,"patebiaf"
.
          DISPLAY   *P64:24,"patfn1af"
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"pati10df"
          OPEN      PATI10D1,"pati10df"
.
          DISPLAY   *P64:24,"paticddf"
          OPEN      PATICDD1,"paticddf"
.
          DISPLAY   *P64:24,"patinvrf"
          OPEN      PATINVR1,"patinvrf"
          OPEN      PATINVR2,"patinvrf"
          OPEN      PATINVR3,"patinvrf"
.
          DISPLAY   *P64:24,"patitemn"
          OPEN      PATITEM1,"patitemn"
.
          DISPLAY   *P64:24,"patma1af"
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patmchgf"
          OPEN      PATMCHG1,"patmchgf"
.
          DISPLAY   *P64:24,"patmi1af"
          OPEN      PATMI1A1,"patmi1af"
.
          DISPLAY   *P64:24,"pattranf"
          OPEN      PATTRAN2,"pattranf"
.
          DISPLAY   *P64:24,"pmsvx1af"
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"patwmabf"
          OPEN      PATWMAB1,"patwmabf"
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FNAMEA
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FNAMEB
.
          READ      CONTROLF,ZERO;*70,IBCNABNN        * ABN Number
          READ      CONTROLF,TEN;*206,CAUDF           * Audit flag
          READ      CONTROLF,TWENTY;*193,PTCNDCLM
          READ      CONTROLF,HUND10;*116,PTCNEDIH     * EDI Hospital Code
          READ      CONTROLF,HUND14;*222,PTCNTACT:    * TAC Transmitter No.
                                    *230,PTCNTACE     * TAC Payee No.
.
          IF        CAUDF<>1
            DISPLAY   *P64:24,"patedaaf"
            OPEN      PATEDAA1,"patedaaf"
          ENDIF
.
          CALL      IBACLOCK                * Get current date & time
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          MOVE      ZERO,CKYIMAND
          MOVE      ZERO,CKYIMODE
          MOVE      ONE,CNEWDS
.
INIT9000  MOVE      ZERO,EXIT
INIT9999  RETURN
+
.******************************************************************************
.*                                  OPTN0000              Called by: ML0000   *
.*                             Select Main Option                             *
.******************************************************************************
OPTN0000  MOVE      ZERO,OPTION
          HLINE     *G37,2,52,80
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = TAC Extract by Date range":
                    *P1:6,*V2LON,"2",*HOFF," = TAC Extract by Invoice No.":
                    *P1:8,"Select Option : ";
OPTN1000  KEYIN     *P17:8,*V2LON,*DV,UNDLN2,*P17:8,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      OPTN9500 IF EQUAL
.
          BRANCH    OPTION,OPTN2000,OPTN2000
.
          BEEP
          GOTO      OPTN1000
.
OPTN2000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.******************************************************************************
.*                                  INNO0000              Called by: ML0000   *
.*                            Keyin The Invoice No.                           *
.******************************************************************************
INNO0000  MOVE      ZERO,EXIT
          MOVE      ZERO,INVOICEN
          MOVE      SP3,CLMTYPE
.
          DISPLAY   *P1:10,"Invoice No. : ";
          KEYIN      *P15:10,*EL,*V2LON,INVOICEN,*DV,*P15:10,INVOICEN
.
          COMPARE    ZERO,INVOICEN
          GOTO       INNO9999 IF NOT EQUAL  * invoice no entered
.
          MOVE       ONE,EXIT
.
INNO9999  RETURN
+
.******************************************************************************
.*                                  CLTY0000              Called by: ML0000   *
.*                            Keyin The Claim Type                            *
.******************************************************************************
CLTY0000  MOVE      "14",ECOL
          MOVE      "10",EVERT
          MOVE      "CL",CODE
          MOVE      SP3,CKYIDEF3
          DISPLAY   *P1:EVERT,"Claim Type : ",*EF;
          CALL      PATCODKY                * Keyin a codes file code
          BRANCH    EXIT,CLTY2000,CLTY9500
.                        Spaces   Exit
.
          MOVE      ACODE,CLMTYPE
          MOVE      TDESC,CLMDESC
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,ACODE,SP2,TDESC;
.
          MOVE      ONE,FORM1
CLTY1000  LOAD      KEY1,FORM1,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
          MATCH     ANSM,KEY1
          GOTO      CLTY9000 IF EQUAL       * TAC claim type
.
          ADD       ONE,FORM1
          COMPARE   "6",FORM1
          GOTO      CLTY1000 IF LESS        * Counter < 6
.
          DISPLAY   *P1:24,*EL,*B,"Invalid TAC claim type.  ";
          CALL      HITENTER
          GOTO      CLTY0000
.
CLTY2000  UNPACK    SP30,CLMTYPE,CLMDESC
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,"All TAC Claims";
.
CLTY9000  MOVE      ZERO,EXIT
          GOTO      CLTY9999
.
CLTY9500  MOVE      ONE,EXIT
CLTY9999  RETURN
+
.******************************************************************************
.*                                  DATE0000              Called by: ML0000   *
.*                        Keyin The Invoice Date Range                        *
.******************************************************************************
DATE0000  MOVE      "21",CCOL
          MOVE      "12",CVERT
          DISPLAY   *P1:CVERT,*EF,"Starting Date     : ";
          ADD       ONE,CVERT
          DISPLAY   *P1:CVERT,"Ending Date       : ";
.
          MOVE      ONE,CCANLDTE            * Blank cancel default
          MOVE      ZERO,CHIGHLT            * Use highlight
.
. ----- Enter starting date -----
.
DATE1000  SUB       ONE,CVERT
DATE2000  MOVE      CCC,CCENT
          UNPACK    SP6,CYEAR,CMON,CDAY
          CALL      KEYDATE                 * Keyin date
          BRANCH    OVRCD,DATE9500
          BRANCH    CQUEST,DATE2000
.
          PACK      STRTDTE8,CCENT,CYEAR,CMON,CDAY
          REP       " 0",STRTDTE8
.
          MATCH     STRTDTE8,CURRDATE
          IF        @LESS
            DISPLAY   *P1:24,*B,*EL,"Start date must not be after the ":
                      "current date.  ";
            CALL      HITENTER 
            GOTO      DATE2000
          ENDIF
.
. ----- Enter ending date -----
.
          ADD       ONE,CVERT
DATE3000  UNPACK    STRTDTE8,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE                 * Keyin date
          BRANCH    OVRCD,DATE1000
          BRANCH    CQUEST,DATE3000
.
          PACK      ENDDTE8,CCENT,CYEAR,CMON,CDAY
          REP       " 0",ENDDTE8
.
          MATCH     ENDDTE8,CURRDATE
          IF        @LESS
            DISPLAY   *P1:24,*B,*EL,"End date must not be after the current ":
                      "date.  ";
            CALL      HITENTER 
            GOTO      DATE3000
          ENDIF
.
          MATCH     STRTDTE8,ENDDTE8
          IF        @LESS
            DISPLAY   *P1:24,*B,*EL,"End date must be after the start date.  ";
            CALL      HITENTER 
            GOTO      DATE3000
          ENDIF
.
          MOVE      "0701",CKYIDEF4
          UNPACK    STRTDTE8,KEY2,KEY2,KEY4
          MATCH     CKYIDEF4,KEY4
          IF        @LESS
            UNPACK    ENDDTE8,KEY2,KEY2,KEY4
            MATCH     KEY4,CKYIDEF4
            IF        @LESS
              DISPLAY   *P1:24,*B,*EL,"Both dates must be from the same ":
                        "financial year.  ";
              CALL      HITENTER
              GOTO      DATE0000
            ENDIF
          ENDIF
.
DATE9000  MOVE      ZERO,EXIT
          GOTO      DATE9999
.
DATE9500  MOVE      ONE,EXIT
DATE9999  RETURN
+
.******************************************************************************
.*                                  OPEN0000              Called by: ML0000   *
.*                              Open The Tempfile                             *
.******************************************************************************
OPEN0000  CALL      KILL0000                * Delete the tempfiles
.
          CLEAR     KEY99
          APPEND    "isbuild ",KEY99
          APPEND    FNAMEA,KEY99
          APPEND    FILELIN1,KEY99
          RESET     KEY99
          EXECUTE   KEY99,TASKID
.
          OPEN      TEMP1,FNAMEA
          OPEN      TEMP2,FNAMEA
.
          CLEAR     KEY99
          APPEND    "isbuild ",KEY99
          APPEND    FNAMEB,KEY99
          APPEND    FILELIN2,KEY99
          RESET     KEY99
          EXECUTE   KEY99,TASKID
.
          OPEN      TEMPIP,FNAMEB
.
OPEN9000  MOVE      ZERO,EXIT
OPEN9999  RETURN
+
.******************************************************************************
.*                                  LOAD0000              Called by: ML0000   *
.*                              Load The Tempfile                             *
.******************************************************************************
LOAD0000  MOVE      ZERO,RECSREAD              * Clear the read counter
          MOVE      ZERO,RECSWRIT              * Clear the write counter
          DISPLAY   *P1:24,*EL,"Scanning : ",*P35:24,"Loading : ";
.
          IF        OPTION = 2
            PACK      KEY8,INVOICEN
            CALL      RDINV1 
            BRANCH    OVRCD,LOAD9000
          ELSE
            PACK      KEY16,STRTDTE8,SP20
            CALL      RDSINV2               * Position on & read an invoice
LOAD1000    CALL      RDKINV2                 file record
            BRANCH    OVRCD,LOAD9000
.
            MATCH     PINVDTE,ENDDTE8
            GOTO      LOAD9000 IF LESS      * End date < invoice date
          ENDIF
.
          COMPARE   "3",PINVSYS
          GOTO      LOAD6000 IF NOT EQUAL   * not an Inpatient
.
          COMPARE   ZERO,PTINEDSF
          GOTO      LOAD6000 IF NOT EQUAL   * Only extract invoice with EDI of
.                                           * not sent
.
.                                           * calc. outstanding Inv. balance
LOAD2000  MOVE      PINVAMT,IBALANCE        * Invoice Amount
          ADD       PINVPATA,IBALANCE       * minus Amount paid by Patient
          ADD       PINVHFDA,IBALANCE       * minus Amount paid by Health Fund
          ADD       PINVOTHA,IBALANCE       * minus Other Amounts paid
          ADD       PINVJOUR,IBALANCE       * plus Journals
          ADD       PTINGSTJ,IBALANCE       * plus GST Adjustments
          ADD       PTINCRTT,IBALANCE       * Credit Note
          IF        IBALANCE <= 0
            GOTO      LOAD6000              * don't send if zero Balance
          ENDIF
.
          ADD       ONE,RECSREAD
          MOVE      ZERO,MEPMFLG            * ME/PM item flag
          MOVE      ZERO,TXFLG              * TX item flag
.
LOAD3000  PACK      KEY8,PINVADM
          CALL      RDMISS1                 * Read an admin file record
          BRANCH    OVRCD,LOAD6000
.          
          COMPARE   ONE,ASTAT
          GOTO      LOAD6000 IF EQUAL       * Don't extract for pre-admitted
.          
          COMPARE   FIVE,ASTAT
          GOTO      LOAD6000 IF EQUAL       * Don't extract for cancelled adm
.
          MATCH     ACLAIM,PINVCLM
          GOTO      LOAD6000 IF NOT EQUAL   * Different claim code
.
LOAD4000  CALL      GTPT0000                * Get TAC patients
          BRANCH    EXIT,LOAD6000
.
          MOVE      PINVNO,TMPINVNO
          MOVE      PINVADM,TMFADMNO
          MOVE      PINVADM,TMPADMNO
          MOVE      ZERO,TMFERFLG           * Error flag - no
          MOVE      ZERO,TMPINAMT
          MOVE      ZERO,TMPGSTAM
.
          PACK      KEY8,TMPINVNO
          CALL      RATEMP1                 * Position read a tempfile record
          COMPARE   ONE,OVRCD
          GOTO      LOAD6000 IF NOT EQUAL   * Read exists
.
          CALL      WRTEMP1                 * Write a tempfile record
.
.                                           * check which Option
LOAD6000  BRANCH    OPTION,LOAD1000,LOAD9000
          GOTO      LOAD1000
.
LOAD9000  MOVE      ZERO,EXIT
.
LOAD9999  RETURN
+
.******************************************************************************
.*                                  HEAD0000              Called by: ML0000   *
.*                             Print Report Header                            *
.******************************************************************************
HEAD0000  CALL      HEAD80                  * Print 80 column header
.
          IF        OPTION = 1
            MATCH     SP3,CLMTYPE
            IF        @EQUAL
              PRINT     *N,*20,"Claim Type : All TAC Claims",*N
            ELSE
              PRINT     *N,*20,"Claim Type : ",CLMTYPE,SP2,CLMDESC,*N
            ENDIF
.
            UNPACK    STRTDTE8,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE                 * Format the start date
            PRINT     *20,"Start Date : ",CPCDATE
            UNPACK    ENDDTE8,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE                 * Format the end date
            PRINT     *20,"End Date   : ",CPCDATE,*N
          ELSE
            PRINT     *N,*20,"Invoice No. :",INVOICEN,*N,*N,*N
          ENDIF
.
          CALL      UND80
          PRINT     *1,"| Inv No | Adm No | Error",*80,"|"
          CALL      UND80
          MOVE      "7",CLNO
.
HEAD9000  MOVE      ZERO,EXIT
.
HEAD9999  RETURN
+
.******************************************************************************
.*                                  VALD0000              Called by: ML0000   *
.*                            Validate The Tempfile                           *
.******************************************************************************
VALD0000  MOVE      ZERO,EXIT
.
          MOVE      "1",PASSNUMB            * Pass 1 = validation only
          MOVE      ZERO,NOABN
          MOVE      ZERO,NOTACP
          MOVE      ZERO,ITMCOUNT           * Item Count (per Invoice)  
          MOVE      ZERO,RECSERR            * Clear the error counter
          MOVE      ZERO,RECSREAD           * Clear the read counter
          MOVE      ZERO,RECSWARN           * Clear the warning counter
          MOVE      ZEROVISN,SAVADMIN           * Clear the save admin no
          MOVE      ZERO,BCHINVCT           * Batch No of (valid) Invoices
          MOVE      ZERO,BCHITMCT           * Batch No of (valid) Items
          MOVE      ZERO,BCHTAMNT           * Batch Total Amount (valid invs)
          MOVE      SP8,ERRINVNO            * Clear the error invoice no
          MOVE      SP8,WRNINVNO            * Clear the warning invoice no
.
          MATCH     SP20,IBCNABNN           * check for ABN Numb.
          IF        @EQUAL
            UNPACK    SP30,TMPINVNO,TMPADMNO
            MOVE      "Blank hospital ABN number",ERRMSG
            PACK      ERRMSG,ERRMSG,SP70
            CALL      EMSG0000
            MOVE      ONE,NOABN
          ENDIF
.
          MATCH     SP5,PTCNTACP            * check for TAC Provider Numb.
          IF        @EQUAL
            UNPACK    SP30,TMPINVNO,TMPADMNO
            MOVE      "TAC Provider Number is blank",ERRMSG
            PACK      ERRMSG,ERRMSG,SP70
            CALL      EMSG0000
            MOVE      ONE,NOTACP
          ENDIF
.
          PACK      KEY16,SP20              
          CALL      RSTEMP2                 * Position on & read a tempfile
VALD1000  CALL      RKTEMP2                 * Read a tempfile record
          BRANCH    OVRCD,VALD8000
.         
          MOVE      "0",ERRORFLG
          ADD       ONE,RECSREAD
.
          CALL      GPTD0000                * Get patient details
          BRANCH    EXIT,VALD5000
.
          MOVE      ZERO,TMPINAMT           * Clear the invoice amount
          MOVE      ZERO,TMPGSTAM           * Clear the invoice GST amount
          MOVE      ZERO,ITMCOUNT           * No of Items per invoice
.
          CALL      WTAC0000                * Write patient details
...obs.   CALL      GIPS0000                * Get the inpatient sequence
          CALL      WTIP0000                * Write Accom. details  (to temp)
          CALL      WTLV0000                * Write Leave details   (to temp)
....      CALL      WTTH0000                * Write theatre details (?????)
          CALL      WTIC0000                * Write ICD details  (Injury Code)
....      CALL      WTTX0000                * Write Hospital Transport (Taxi) 
          CALL      WTME0000                * Write Medical details
.
.                                           * finished this Invoice - save info
VALD5000  PACK      KEY8,TMPINVNO
.
          IF        ERRORFLG = 0 & (ITMCOUNT > 0)
            ADD       ONE,BCHINVCT          * count valid Invoices
            ADD       ITMCOUNT,BCHITMCT     * total Item count for valid Invs.
            ASSIGN    (TMPINAMT + TMPGSTAM + BCHTAMNT),BCHTAMNT
          ELSE
            MOVE      "1",TMFERFLG          * flag an error Invoice
          ENDIF
.
          CALL      UPTEMP1                 * Update a tempfile record
          GOTO      VALD1000
.
.
VALD8000  CALL      WTTL0000                * Write trailer details
.
VALD9999  RETURN
+
.******************************************************************************
.*                                  CHEK0000              Called by: ML0000   *
.*                  Check details to determine if a file is to be written     *
.******************************************************************************
CHEK0000  MOVE      ZERO,EXIT
          MOVE      BCHINVCT,RECSWRIT
          CALL      TAIL0000
.
          IF        NOABN = 1
            PRINT     *N,*1,"Hospital ABN is missing - file not extracted"
            GOTO      CHEK9000
          ENDIF
.
          IF        NOTACP = 1
            PRINT     *N,*1,"TAC Provider No. is missing - cannot continue"
            GOTO      CHEK9000
          ENDIF
.
CHEK1000  IF        BCHINVCT = 0
            IF        RECSREAD = 0
              IF        OPTION = 2
                MOVE      INVOICEN,KEY8
                SQUEEZE   KEY8
                PRINT     *N,*1,"Invoice ",KEY8;
                IF        NOTACITM <> 0
                  PRINT     " has no TAC Items - It";
                ENDIF
                IF        IBALANCE <= 0
                  MOVE      IBALANCE,DIM15A
                  SQUEEZE   DIM15A
                  PRINT     " has a balance of $ ",DIM15A," - It";
                ENDIF
                PRINT     " has not been extracted."
                GOTO      CHEK9000
              ENDIF
              PRINT     *N,*1,"No Invoices to be extracted for this Date range"
            ELSE
              PRINT     *N,*1,"There are no valid Invoices to be extracted"
            ENDIF
            GOTO      CHEK9000
          ENDIF
.
          IF        RECSERR > 0
            PRINT     *N,*1,"Errors have been detected - these Invoices ":
                      "will not be extracted"
          ENDIF

          GOTO      CHEK9999
.
CHEK9000  PRINT     *N,"*** End of Report ***"
          MOVE      "99",CLNO
          MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.******************************************************************************
.*                                  CREA0000              Called by: ML0000   *
.*                          Create the Extract file                           *
.******************************************************************************
CREA0000  MOVE      ZERO,EXIT
.                                           * get the next Batch Number
          READ      CONTROLF,NINTY8;*157,PTCNBTHN
          ADD       ONE,PTCNBTHN
          WRITAB    CONTROLF,NINTY8;*157,PTCNBTHN
          SUB       ONE,PTCNBTHN
.
.                                           * generate Extract file name
CREA1000  MOVE      "IN",KEY2
          PACK      KEY4,PTCNEDIH,KEY2,SP10 * EDI Hospital Code + "IN"
          REP       " A",KEY4
          MOVE      PTCNBTHN,FORM8          * Batch Number
          MOVE      FORM8,FORM4
          MOVE      ".txt",DIM4
          PACK      EXTFNAME,KEY4,FORM4,DIM4,SP10
          REP       " 0",EXTFNAME
.
          MOVE      ZERO,OVRCD              * open Extract file
          TRAP      OVERCOND IF IO
          OPEN      EXTFILE1,EXTFNAME
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      CREA0000 IF EQUAL       * File exists - create a new one
.
          PREP      EXTFILE1,EXTFNAME       * open the text file
.
          UNPACK    EXTFNAME,KEY2,DIM2,KEY4
          PRINT     *N,*1,"Extract file name is - '",EXTFNAME,"'":
                    *N,*22,"(Hospital Code '",PTCNEDIH,"' + Inpatient code ":
                    "'IN' + Batch No. '",KEY4,"' )"
          MATCH     KEY2,PTCNEDIH
          IF        !@EQUAL
            PRINT     "Hospital Code '",PTCNEDIH,"' is not valid ":
                      *N,"- please correct it in EDI Parameter Maintenance"
          ENDIF
.
CREA9999  RETURN
+
.******************************************************************************
.*                                  WRIT0000              Called by: ML0000   *
.*                             Write To The Files                             *
.******************************************************************************
WRIT0000  MOVE      ZERO,EXIT
          MOVE      "2",PASSNUMB            * Pass "2" - Write extract
          MOVE      ZEROVISN,SAVADMIN           * Clear the save admin no
          MOVE      ZERO,RECSWRIT           * Clear the write counter
          DISPLAY   *P1:18,*EF,*P1:24,"Writing : ";
.
          CALL      WTHD0000                * Write header details
.
          PACK      KEY16,SP20
          CALL      RSTEMP2                 * Position on & read a tempfile
WRIT1000  CALL      RKTEMP2                   record
          BRANCH    OVRCD,WRIT8000
.
          BRANCH    TMFERFLG,WRIT1000       * error record found - read next
.
          ADD       ONE,RECSWRIT
.
          CALL      GPTD0000                * Get patient details
          BRANCH    EXIT,WRIT1000
.
          CALL      WTAC0000                * Write patient details
...obs.   CALL      GIPS0000                * Get the inpatient sequence
          CALL      WTIP0000                * Write Accom. details  (to tempIP)
          CALL      WTLV0000                * Write Leave details   (to tempIP)
          CALL      WTOU0000                * Write TempIP file to Out File
....      CALL      WTTH0000                * Write theatre details (?????)
          CALL      WTIC0000                * Write ICD details  (Injury Code)
....      CALL      WTTX0000                * Write Hospital Transport (Taxi) 
          CALL      WTME0000                * Write Medical details

.
          MOVE      ONE,PTINEDSF            * EDI sent flag - sent
..MLML..  CALL      UPINV1                  * Update an invoice file record
.
WRIT2000  BRANCH    CAUDF,WRIT3000          * Not using EDI audit flag
.
          PACK      KEY8,PINVNO
          CALL      WRPTEDA1                * Write an EDI audit file record
          COMPARE   ONE,OVRCD
          GOTO      WRIT3000 IF NOT EQUAL   * Record exists
.
          MOVE      PINVNO,PTEDINVN
          MOVE      CURRDATE,PTEDDECM
          MOVE      CTIMEIS,PTEDTECM
          MOVE      PASSCODE,PTEDOPRR
          MOVE      PTINEDSF,PTEDEDSF
          MOVE      PTCNBTHN,PTEDBTHN
          MOVE      ONE,PTEDEETP
          MOVE      SP70,PTEDSPR1
.
          PACK      KEY8,PTEDINVN
          CALL      WRPTEDA1                * Write an EDI audit file record
.
WRIT3000  PACK      KEY16,PTCNBTHN,PINVNO
          CALL      RAPTEBI1                * Read an EDI batch inv file record
          COMPARE   ONE,OVRCD
          GOTO      WRIT1000 IF NOT EQUAL   * Record exists
.
          MOVE      PTCNBTHN,PTEIBTHN
          MOVE      PINVNO,PTEIINVN
          MOVE      SP70,PTEISPAR
.
          PACK      KEY16,PTEIBTHN,PTEIINVN
          CALL      WRPTEBI1                * Write an EDI batch inv file record
          GOTO      WRIT1000
.
.
WRIT8000  CALL      WTTL0000                * Write trailer details
.
          MOVE      PTCNBTHN,PTEHBTHN
          MOVE      "TAC   ",PTEHHFGP
          MOVE      STRTDTE8,PTEHSTDT
          MOVE      ENDDTE8,PTEHEDDT
          MOVE      BCHTAMNT,PTEHBHTL
          MOVE      RECSWRIT,PTEHTRIB
          MOVE      CURRDATE,PTEHDTBC
          MOVE      CTIMEIS,PTEHTMBC
          MOVE      PASSCODE,PTEHOPER
          MOVE      THREE,PTEHEETP          * "3" = TAC Inpatients
          PACK      PTEHEFNAM,EXTFNAME      * Extract File name (incl '.txt')
          MOVE      SP70,PTEHSPAR
.
          PACK      KEY8,PTEHBTHN
          CALL      RAPTEBH1                * Read an EDI batch header file rec
          COMPARE   ONE,OVRCD
          CALL      WRPTEBH1 IF EQUAL       * Write an EDI batch header file rec
.
          DISPLAY   *P1:18,*EF,"Total records read      : ",RECSREAD:
                    *P1:19,"Total records extracted : ",*V2LON,RECSWRIT,*HOFF:
                    *P1:21,"Extract filename : ",*V2LON,EXTFNAME,*HOFF:
                    *P1:22,"Batch number     : ",*V2LON,PTEHBTHN,*HOFF:
                    *P1:24,*B,"Extract finished.  ";
.
          PRINT     *N,*1,"This Extract contains",BCHINVCT:
                    " Invoices     with a Total value of $",BCHTAMNT:
                    *N,"*** End of Report ***"
.
.
WRIT9000  MOVE      ZERO,EXIT
WRIT9999  RETURN
+
.******************************************************************************
.*                                  TAIL0000              Called by: ML0000   *
.*                              Print Report Tail                             *
.******************************************************************************
TAIL0000  MOVE      ZERO,EXIT
          COMPARE   "50",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line counter >= 50 lines
.
TAIL1000  CALL      UND80
          PRINT     *N,*1,"Total Records Read        : ",RECSREAD:
                    *N,*1,"Total Number of Errors    : ",RECSERR:
                    *N,*1,"Total Number of Warnings  : ",RECSWARN:
                    *N,*N,*1,"Total Records Extracted   : ",RECSWRIT
.
TAIL9000  MOVE      ZERO,EXIT
TAIL9999  RETURN
+
.******************************************************************************
.*                                  GTPT0000              Called by: LOAD0000 *
.*                              Get TAC Patients                   & GIPS0000 *
.******************************************************************************
GTPT0000  MOVE      ZERO,EXIT
          MOVE      ZERO,NOTACITM
          COMPARE   ZERO,PINVREB
          GOTO      GTPT9500 IF EQUAL       * Zero rebate, ignore invoice
.
          MATCH     SP3,CLMTYPE
          GOTO      GTPT1000 IF EQUAL       * Getting all TAC claims
.
          MATCH     CLMTYPE,PINVCLM
          GOTO      GTPT9500 IF NOT EQUAL   * Different claim type
.
GTPT1000  PACK      KEY5,ANSC,ANSL,PINVCLM
          CALL      RDCODE1                 * Read a codes file record
          BRANCH    OVRCD,GTPT9500
.
          MOVE      ZERO,FORM1
          REPEAT
            ADD       ONE,FORM1
            LOAD      KEY1,FORM1,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
            MATCH     "M",KEY1
            GOTO      GTPT3000 IF EQUAL       * TAC claim type
          UNTIL     FORM1 > 4
          GOTO      GTPT9500
.
.
GTPT3000  MOVE      ZERO,FNDACCOM           * reset "Found Accom." flag
          PACK      KEY23,PINVADM,PINVNO,SP30
          CALL      RDSDTRN4                * Position on & read a DTR file
GTPT4000  CALL      RDKDTRN4                  record
          BRANCH    OVRCD,GTPT9500
.
          MATCH     PINVADM,TADMNO
          GOTO      GTPT9500 IF NOT EQUAL   * Different admin no
.
          MATCH     PINVNO,TREF
          GOTO      GTPT9500 IF NOT EQUAL   * Different invoice no
.
GTPT4500  COMPARE   THREE,TRECTYPE               * <===== MLMLML
.                                                           * start   *I-213368
....      GOTO      GTPT9500 IF NOT LESS    * Not an Accom or Theatre record
.                                           * new test - if no Accom or theatre,
.                                           * see if there is a TAC "ME" record
          IF        !@LESS
            BRANCH    FNDACCOM,GTPT9500     * Accom/Theatre found - jump out.
            CALL      CHKME000              * see if there is a TAC "ME" record
            BRANCH    EXIT,GTPT9500
            GOTO      GTPT9000
          ENDIF
          MOVE      ONE,FNDACCOM            * set flag for "Found Accom."
.                                                           * end     *I-213368
.
          COMPARE   ZERO,TREBATE
          GOTO      GTPT4000 IF EQUAL       * Zero rebate amount ignore
.
GTPT9000  MOVE      ZERO,EXIT
          GOTO      GTPT9999
.
GTPT9500  MOVE      ONE,EXIT
          MOVE      ONE,NOTACITM
.
GTPT9999  RETURN
+
.******************************************************************************
.*                                  WTHD0000              Called by: VALD0000 *
.*                            Write Header Details                 & WRIT0000 *
.******************************************************************************
WTHD0000  MOVE      ZERO,EXIT
.
          MOVE      "HD",XXHDTYPE
          PACK      XXHDTXNO,PTCNTACT,SP10  * Hospital's Transmitter Number
          MOVE      BCHINVCT,XXHDINVC       * No.of Invoices (Dim 4)
          REP       " 0",XXHDINVC
.
.                                           * generate Extract Date/Time info
          CALL      IBACLOCK                * Get current date & time
          PACK      XXHDCDAT,CCC,CYY,CMM,CDD
          REP       " 0",XXHDCDAT
.
          UNPACK    CTIMEIS,CHOUR,KEY1,CMIN,KEY1,KEY2
          PACK      XXHDCTIM,CHOUR,CMIN,KEY2
          REP       " 0",XXHDCTIM
.
          MOVE      PTCNBTHN,KEY8           * Batch Number
.
          MOVE      "00000000",XXHDLBDT
          MOVE      "000000",XXHDLBTM
          PACK      KEY8,PTCNBTHN,SP8
          CALL      RSPTEBH1
WTHD1000  CALL      RPPTEBH1
          BRANCH    OVRCD,WTHD2000
          MATCH     "3",DPTEHEET            * is this an Inpatient Header rec?
          GOTO      WTHD1000 IF NOT EQUAL
.
          MOVE      PTEHDTBC,XXHDLBDT       * insert Last Batch Create Date/Time
          UNPACK    PTEHTMBC,DIM2A,KEY1,DIM2B,KEY1,DIM2C
          PACK      XXHDLBTM,DIM2A,DIM2B,DIM2C
.
WTHD2000  MOVE      BCHTAMNT,FORM10P2
          MOVE      FORM10P2,KEY13
          UNPACK    KEY13,KEY10,KEY1,KEY2
          PACK      XXHDTAMT,KEY10,KEY2
          REP       " 0",XXHDTAMT
.
          MOVE      "TAX INVOICE",XXHDTTXT 
          PACK      XXHDHABN,IBCNABNN,SP10  * Hospital's ABN
          PACK      XXHDHNAM,CNAME,SP30     * Hospital Name
          MOVE      TACTNAM,XXHDTNAM        
          MOVE      TACABN,XXHDTABN         
.
.                                           * write the Header Record
          IF        PASSNUMB = 2
            WRITE     EXTFILE1,SEQ;XXHDTYPE,XXHDTXNO,XXHDINVC,XXHDCDAT:
                                   XXHDCTIM,XXHDLBDT,XXHDLBTM,XXHDTAMT:
                                   XXHDTTXT,XXHDHABN,XXHDHNAM,XXHDTABN:
                                   XXHDTNAM
          ENDIF
.
WTHD9999  RETURN
+
.******************************************************************************
.*                                  GPTD0000              Called by: VALD0000 *
.*                             Get Patient Details                 & WRIT0000 *
.******************************************************************************
GPTD0000  MOVE      ZERO,EXIT
.
          PACK      KEY8,TMPINVNO
          CALL      RDTEMP1                 * Direct Read the tempfile record
.
          PACK      KEY8,TMPINVNO
          CALL      RDINV1                  * Read an invoice file record
          IF        OVRCD = 1
            MOVE      "Missing invoice file record",ERRMSG
            CALL      EMSG0000            * Print an error message
            GOTO      GPTD9500
          ENDIF
.
          MATCH     SAVADMIN,TMFADMNO
          GOTO      GPTD9999 IF EQUAL       * Same admin no, dont get details
.
          PACK      KEY8,PINVUR
          CALL      RDMAST1                 * Read a master file record
          IF        OVRCD = 1
            MOVE      "Missing master file record",ERRMSG
            CALL      EMSG0000              * Print an error message
            GOTO      GPTD9500
          ENDIF
.
GPTD1000  PACK      KEY8,TMFADMNO
          CALL      RDMISS1                 * Read an admin file record
          IF        OVRCD = 1
            MOVE      "Missing admission file record",ERRMSG
            CALL      EMSG0000              * Print an error message
            GOTO      GPTD9500
          ENDIF
.
          CALL      CLPATDSC                * Clear disch file variables
          IF        ASTAT = 3
            PACK      KEY8,TMFADMNO
            CALL      RDDSCH1               * Read a disch file record
            IF        OVRCD = 1
              MOVE      "Missing discharge file record",ERRMSG
              CALL      EMSG0000            * Print an error message
              GOTO      GPTD9500
            ENDIF
          ENDIF
.
GPTD2000  MOVE      TMFADMNO,SAVADMIN         * Save the admin no
          GOTO      GPTD9999
.
GPTD9500  MOVE      ONE,EXIT
          MOVE      "1",ERRORFLG
.
GPTD9999  RETURN
+
.******************************************************************************
.*                                  WTAC0000              Called by: VALD0000 *
.*                            Write Patient Details                & WRIT0000 *
.******************************************************************************
WTAC0000  MOVE      ZERO,EXIT
.
          MOVE      "AC",XXACTYPE
          PACK      XXACPYNO,PTCNTACE,SP20  * TAC Payee No.
          MOVE      "01",XXACPYTY           * TAC Payee Type
.
.                                           * TAC Claim No.
          UNPACK    SP30,MREFNO,MACDAT
          PACK      KEY8,TMFADMNO
          CALL      RDWMAB1                 * Read a TAC file record
          IF        OVRCD=1
            MOVE      "Patient missing motor accident details",ERRMSG
            CALL      EMSG0000              * Print an error message
          ENDIF
.
          UNPACK    MREFNO,KEY2,KEY1,KEY5,KEY12
          REP       "-/./ /",KEY1
          MATCH     "/",KEY1
          IF        !@EQUAL
            PACK      CKYIDEF5,KEY1,KEY5
            MOVE      "/",KEY1
            MOVE      CKYIDEF5,KEY5
          ENDIF
          PACK      XXACCLMN,KEY2,KEY1,KEY5,SP10 * TAC Claim No.
.
          TYPE      KEY2
          IF        @EQUAL
            TYPE      KEY5
            GOTO      WTAC3000 IF EQUAL       * Numeric, continue on
          ENDIF
.
WTAC1000  MATCH     SP8,PBDATE
          GOTO      WTAC2000 IF EQUAL       * Blank DOB
.
          MATCH     SP8,MACDAT
          GOTO      WTAC2000 IF EQUAL       * Blank accident date
.
          MOVE  "Warning: Incorrect format on motor accident ref number",ERRMSG
          CALL      WMSG0000                * Print a warning message
          GOTO      WTAC3000
.
WTAC2000  MOVE      "Incorrect format on motor accident ref number",ERRMSG
          CALL      EMSG0000                * Print an error message
.
.
WTAC3000  MATCH     SP8,MACDAT
          IF        @EQUAL
            MOVE      "Warning: Blank motor accident date, using default",ERRMSG
            CALL      WMSG0000              * Print a warning message
            MOVE      "19010101",MACDAT     * Default motor accident date
          ENDIF
          PACK      XXACACDT,MACDAT,SP10
.
          PACK      XXACSNAM,PSNAME,SP20
          SCAN      " ",PGNAME
          MOVEFPTR  PGNAME,F2
          BUMP      PGNAME
          PACK      XXACGNM2,PGNAME,SP20
          RESET     PGNAME
          SETLPTR   PGNAME,F2
          PACK      XXACGNM1,PGNAME,SP20
          PACK      XXACADD1,PADD1,SP20
          PACK      XXACADD2,PADD2,SP20
          PACK      XXACSUBR,PSUBRB,SP20
          PACK      XXACPCOD,PPOST,SP10
          PACK      XXACPDOB,PBDATE,SP10
.
.  Note - this is the Total value so it is being calculated in Pass 1 - not
.  available to the AC record until Pass 2
.                                          
WTAC4000  ASSIGN    (TMPINAMT + TMPGSTAM),FORM12P2
          MULT      "100",FORM12P2
          MOVE      FORM12P2,FORM9
          MOVE      FORM9,XXACTAMT          * Invoice Total Amount (inc GST)
          REP       " 0",XXACTAMT
.
          MOVE      "000000000",XXACTGST
          IF        TMPGSTAM <> 0
            MOVE      TMPGSTAM,FORM12P2
            MULT      "100",FORM12P2
            MOVE      FORM12P2,FORM9
            MOVE      FORM9,XXACTGST          * GST on Invoice
            REP       " 0",XXACTGST
          ENDIF
.
          MOVE      TMPINVNO,KEY8
          SQUEEZE   KEY8
          PACK      XXACREFN,KEY8,SP30      * Invoice/Account No.
.
.                                           * write Patient Details
WTAC5000  IF        PASSNUMB = 2
            WRITE     EXTFILE1,SEQ;XXACTYPE,XXACPYNO,XXACPYTY,XXACCLMN:
                                   XXACSNAM,XXACGNM1,XXACGNM2,XXACADD1:
                                   XXACADD2,XXACSUBR,XXACPCOD,XXACPDOB:
                                   XXACACDT,XXACTAMT,XXACREFN,XXACTGST
          ENDIF
.
WTAC9999  RETURN
+
.******************************************************************************
.*                                  WTIP0000              Called by: VALD0000 *
.*                           Write Inpatient Details               & WRIT0000 *
.******************************************************************************
WTIP0000  MOVE      ZERO,EXIT
          MOVE      ZERO,ITEMCNT
.
          PACK      KEY23,TMFADMNO,PINVNO,ONE,SP30
          CALL      RDSDTRN4                * Position on & read a DTR file
WTIP1000  CALL      RDKDTRN4                  record
          BRANCH    OVRCD,WTIP9999
.
          MATCH     TMFADMNO,TADMNO
          GOTO      WTIP9999 IF NOT EQUAL   * Different admin no
.
          MATCH     PINVNO,TREF
          GOTO      WTIP9999 IF NOT EQUAL   * Different invoice no
.
          COMPARE   ONE,TRECTYPE
          GOTO      WTIP9999 IF NOT EQUAL   * Different record type
.
          COMPARE   ZERO,TREBATE
          GOTO      WTIP1000 IF EQUAL       * Zero rebate amount ignore
.
          CALL      GITA0000                * Get the item amount
.
.                                           * set up Inpatient "IP" record
WTIP2000  MOVE      "IP",XXIPTYPE
.
          PACK      XXIPSTDT,TFCENT,TFYEAR,TFMONTH,TFDAY
          REP       " 0",XXIPSTDT           * Billing Start Date
          PACK      XXIPENDT,TTCENT,TTYEAR,TTMONTH,TTDAY
          REP       " 0",XXIPENDT           * Billing End Date
.
          MOVE      XXIPSTDT,FROMDATE
          MOVE      XXIPENDT,TODATE
          CALL      NHOSPDAY                * Calcuate no of days in hospital
          MOVE      NBRDAYS,XXIPNDYS
          REP       " 0",XXIPNDYS           * Number of Days Billed
.
. 
..WTIP3000  MATCH     SP3,PTDTBTYP            * Bed Type
..          GOTO      WTIP4000 IF EQUAL       * Blank bed type
...
..          PACK      KEY5,ANSB,ANST,PTDTBTYP
..          CALL      RDCODE1                 * Read a codes file record
..          BRANCH    OVRCD,WTIP4000
...
..          MOVE      ZERO,FORM1
..          MOVE      TCINDC9,FORM1
..          BRANCH    FORM1,WTIP3500,WTIP3500,WTIP3500
..          GOTO      WTIP4000
...
..WTIP3500  LOAD      KEY3,FORM1,CATICU,CATHDU,CATCCU
..          GOTO      WTIP4000
.
.                                           * Inpatient Type
WTIP4000  MATCH     SP3,TADMTYP
          IF        @EQUAL
            MOVE      "Blank admission type",ERRMSG
            CALL      EMSG0000              * Print an error message
            GOTO      WTIP1000
          ENDIF
.
          PACK      KEY5,ANSA,SP1,TADMTYP
          CALL      RDCODE1                 * Read a codes file record
          IF        OVRCD=1
            MOVE      "Missing admission type",ERRMSG
            CALL      EMSG0000              * Print an error message
            GOTO      WTIP1000              * read next "Dtr" record
          ENDIF
.
          MOVE      ZERO,FORM1
          MOVE      TCINDC9,KEY1
          TYPE      KEY1
          IF        @EQUAL
            REP       "102430405060708190",KEY1
            MOVE      KEY1,FORM1
          ELSE
.
            MATCH     "X",KEY1
            IF        @EQUAL
.
               CALL      GXCD0000
               BRANCH    XCODINDC,WTIP4600
.
               GOTO      WTIP4400
.
            ENDIF
.
            REP       "A3B0C5D0E0F4",KEY1
            TYPE      KEY1
            GOTO      WTIP4400 IF NOT EQUAL   * Non numeric codes, error
          ENDIF
.
WTIP4200  MOVE      KEY1,FORM1
          MOVE      CATREH,KEY3
          LOAD      KEY3,FORM1,CATBLF,CATBLC,CATHBF,CATHDU,SP3
          GOTO      WTIP4600
.
WTIP4400  MOVE      "Invalid inpatient type (Category A, 9th Indicator)",ERRMSG
          CALL      WMSG0000                * Print an warning message
.
WTIP4600  PACK      XXIPIPTY,KEY3,SP3
.
.                                           * Item Amount
WTIP5000  ASSIGN    (TREBATE + GSTAMNT),FORM12P2
          MULT      "100",FORM12P2
          MOVE      FORM12P2,FORM9
          MOVE      FORM9,KEY9
          REP       " 0",KEY9
          MOVE      KEY9,XXIPAMNT           * Item Total Amount
.
          MOVE      SP9,XXIPTXSI
          IF        GSTAMNT <> 0
            MOVE      GSTAMNT,FORM12P2
            MULT      "100",FORM12P2
            MOVE      FORM12P2,FORM9
            MOVE      FORM9,KEY9
            REP       " 0",KEY9
            MOVE      KEY9,XXIPTXSI           * Item GST Amount
          ENDIF
.
.                                                                     *C-212672
          CALL      GSEQ0000                * get "Service" sequence code
          PACK      XXIPISEQ,SERVSEQ,SP2
.            
          MOVE      SP1,XXIPWIND            * Private Ward Indic. (" " or "Y")
.
WTIP7000  IF        PASSNUMB = 2
.                                           * write "IP" recd to TempIP table
            ADD       ONE,ITEMCNT
            PACK      XXIPKEY,PINVNO,XXIPSTDT,XXIPENDT,ITEMCNT,SP30
            PACK      KEY29,XXIPKEY,SP30
            CALL      WRTMPIP1
          ENDIF
          ADD       ONE,ITMCOUNT
. 
          GOTO      WTIP1000
.
WTIP9999  RETURN
+
.******************************************************************************
.*                                  WTLV0000              Called by: VALD0000 *
.*                             Write Leave Details                 & WRIT0000 *
.*    Bodgie routine to read Misc.Items and create an Accom. "IP" record      *
.******************************************************************************
WTLV0000  MOVE      ZERO,EXIT
.
          PACK      KEY23,TMFADMNO,PINVNO,THREE,SP30
          CALL      RDSDTRN4              * Position on an I/P DTR file record
WTLV1000  CALL      RDKDTRN4              * Read an I/P DTR file record
          BRANCH    OVRCD,WTLV9999
.
          MATCH     TMFADMNO,TADMNO
          GOTO      WTLV9999 IF NOT EQUAL   * Different admin no
.
          MATCH     PINVNO,PINVNO
          GOTO      WTLV9999 IF NOT EQUAL   * Different invoice no
.
          COMPARE   THREE,TRECTYPE
          GOTO      WTLV9999 IF NOT EQUAL   * Different record type
.
          COMPARE   ZERO,TREBATE
          GOTO      WTLV1000 IF EQUAL     * Zero rebate amount ignore
.
          MATCH     "HBF      ",TITEMNO
          GOTO      WTLV2000 IF EQUAL
          MATCH     "BLF      ",TITEMNO
          GOTO      WTLV1000 IF NOT EQUAL
.
          
WTLV2000  MOVE      TSERVS,MXNOFSRV         * Maximum no of services
          IF        MXNOFSRV = 0
            MOVE      ONE,MXNOFSRV          * Default maximum no of serv to 1
          ENDIF
          ASSIGN    (TREBATE * MXNOFSRV),FORM12P2
          MOVE      ONE,TSERVS
          MOVE      FORM12P2,TREBATE
.
          CALL      GITA0000                * get Item value & update totals
.
WTLV3000  MOVE      "IP",XXIPTYPE
.
          PACK      XXIPSTDT,TFCENT,TFYEAR,TFMONTH,TFDAY
          REP       " 0",XXIPSTDT           * Leave Start Date
          MOVE      XXIPSTDT,CALCDATE
          ADD       MXNOFSRV,CALCDATE       * MXNOFSRV = no.of days of Leave
.
          MOVE      CALCDATE,XXIPENDT
          REP       " 0",XXIPENDT           * Billing End Date
.
          MOVE      MXNOFSRV,FORM4
          MOVE      FORM4,XXIPNDYS
          REP       " 0",XXIPNDYS           * Number of Days Billed
.
.                                           * Inpatient Type
WTLV4000  MATCH     SP3,ATYPE
          IF        @EQUAL
            GOTO      WTLV1000
          ENDIF
.
          PACK      KEY5,ANSA,SP1,ATYPE
          CALL      RDCODE1                 * Read a codes file record
          IF        OVRCD=1
            MOVE      "Missing admission type",ERRMSG
            CALL      EMSG0000              * Print an error message
            GOTO      WTLV1000              * read next "Dtr" record
          ENDIF
.
.
WTLV4500  PACK      XXIPIPTY,TITEMNO,SP3
.
.                                           * Item Amount
WTLV5000  ASSIGN    (TREBATE + GSTAMNT),FORM12P2
          MULT      "100",FORM12P2
          MOVE      FORM12P2,FORM9
          MOVE      FORM9,KEY9
          REP       " 0",KEY9
          MOVE      KEY9,XXIPAMNT           * Item Total Amount
.
          MOVE      SP9,XXIPTXSI
          IF        GSTAMNT <> 0
            MOVE      GSTAMNT,FORM12P2
            MULT      "100",FORM12P2
            MOVE      FORM12P2,FORM9
            MOVE      FORM9,KEY9
            REP       " 0",KEY9
            MOVE      KEY9,XXIPTXSI         * Item GST Amount
          ENDIF
.
          CALL      GSEQ0000                * get "Service" sequence code
          PACK      XXIPISEQ,SERVSEQ,SP2
.
          MOVE      SP1,XXIPWIND            * Private Ward Indic. (" " or "Y")
.
WTLV7000  IF        PASSNUMB = 2
.                                           * write "IP" recd to TempIP table
            ADD       ONE,ITEMCNT
            PACK      XXIPKEY,PINVNO,XXIPSTDT,XXIPENDT,ITEMCNT,SP30
            PACK      KEY29,XXIPKEY,SP30
            CALL      WRTMPIP1
          ENDIF
          ADD       ONE,ITMCOUNT
.
          GOTO      WTLV1000
.
WTLV9999  RETURN
+
.******************************************************************************
.*                                  WTOU0000                                  *
.*                             Write IP Details                               *
.******************************************************************************
WTOU0000  MOVE      ZERO,EXIT
          BRANCH    PASSNUMB,WTOU9999       * bypass this if PASSNUMB = 1
.
.                                           * check the Item Sequence Codes
WTOU1000  MOVE      ZERO,F2
          PACK      KEY29,PINVNO,ZED30
          CALL      RSTMPIP1
WTOU1500  CALL      RPTMPIP1
          BRANCH    OVRCD,WTOU2000
.
          UNPACK    XXIPKEY,DIM8A,DIM8B,DIM8C,DIM3A,DIM4
          MATCH     DIM8A,PINVNO
          GOTO      WTOU1500 IF NOT EQUAL
.
          ADD       ONE,F2
          MOVE      DIM3A,F3
.
          IF        F2 = 1 & F3 = 1
            CMATCH   "I",XXIPISEQ
            IF       @EQUAL
              MOVE     "ID",XXIPISEQ          * only 1 Item - set to "ID"
            ENDIF
          ENDIF
.
.                                           * read Items and write to extract
WTOU2000  PACK      KEY29,PINVNO,SP30
          CALL      RSTMPIP1
WTOU2500  CALL      RKTMPIP1
          BRANCH    OVRCD,WTOU5000
.
          UNPACK    XXIPKEY,KEY8,KEY30
          MATCH     KEY8,PINVNO
          GOTO      WTOU2500 IF NOT EQUAL
.
          WRITE     EXTFILE1,SEQ;XXIPTYPE,XXIPSTDT,XXIPENDT,XXIPNDYS:
                                 XXIPIPTY,XXIPAMNT,XXIPISEQ,XXIPWIND:
                                 XXIPTXSI
          GOTO      WTOU2500
.
.                                           * finished writing - clear table
WTOU5000  PACK      KEY29,SP30
          CALL      RSTMPIP1
          CALL      RKTMPIP1
          BRANCH    OVRCD,WTOU9999
.
          PACK      KEY29,XXIPKEY,SP30
          CALL      DETMPIP1
          GOTO      WTOU5000
.
WTOU9999  RETURN
+
.******************************************************************************
.*                                  WTTH0000              Called by: VALD0000 *
.*                          Write Theatre Fee Details              & WRIT0000 *
.******************************************************************************
WTTH0000  MOVE      ZERO,EXIT
.
...          PACK      KEY23,TMFADMNO,PINVNO,TWO,SP30
...          CALL      RDSDTRN4                * Position on & read a DTR file
...WTTH1000  CALL      RDKDTRN4                  record
...          BRANCH    OVRCD,WTTH9999
....
...          MATCH     TMFADMNO,TADMNO
...          GOTO      WTTH9999 IF NOT EQUAL   * Different admin no
....
...          MATCH     PINVNO,TREF
...          GOTO      WTTH9999 IF NOT EQUAL   * Different invoice no
....
...          COMPARE   TWO,TRECTYPE
...          GOTO      WTTH9999 IF NOT EQUAL   * Different record type
....
...          COMPARE   ZERO,TREBATE
...          GOTO      WTTH1000 IF EQUAL       * Zero rebate amount ignore
....
...          CALL      GITA0000                * Get the item amount
....
...          MOVE      "TH",XXTHTYPE
....
...          PACK      XXTHODAT,TFCENT,TFYEAR,TFMONTH,TFDAY
...          REP       " 0",XXTHODAT
...          ASSIGN    (TREBATE + GSTAMNT),FORM12P2
...          MULT      "100",FORM12P2
...          MOVE      FORM12P2,FORM9
...          MOVE      FORM9,XXTHAMNT
...          REP       " 0",XXTHAMNT
....
...          PACK      XXTHITMN,TITEMNO,SP20
....
...          MOVE      SP9,XXTHTXSI
...          IF        GSTAMNT<>0
...            PACK      XXTHTXSI,ANSY,SP8
...          ENDIF
....
...          IF        PASSNUMB = 2
...            WRITE     EXTFILE1,SEQ;XXTHTYPE,XXTHODAT,XXTHAMNT,XXTHITMN:
...                                   XXTHTXSI
...          ENDIF
...          ADD       ONE,ITMCOUNT
....
...          GOTO      WTTH1000
.
WTTH9999  RETURN
+
.******************************************************************************
.*                                  WTIC0000              Called by: VALD0000 *
.*                              Write ICD Details                  & WRIT0000 *
.******************************************************************************
WTIC0000  MOVE      ZERO,EXIT
.
          MOVE      "1",READECD
          PACK      KEY13,TMFADMNO,SP20                               *C-240107
          CALL      RSPTECD1
WTIC1000  CALL      RKPTECD1
          BRANCH    OVRCD,WTIC2000
.
          MATCH     TMPADMNO,DPTEDADM
          GOTO      WTIC2000 IF NOT EQUAL
.
          MATCH     SP9,PTEDCODE
          GOTO      WTIC1000 IF EQUAL
.
          MOVE      PTEDCODE,KEY9
          GOTO      WTIC7000                * write an "IC" Record
.
.
WTIC2000  MOVE      ZERO,READECD
          PACK      KEY13,TMFADMNO,SP20                               *C-240107
          CALL      RSPTECO1
WTIC3000  CALL      RKPTECO1
          BRANCH    OVRCD,WTIC9999
.
          MATCH     TMPADMNO,DPTEOADM
          GOTO      WTIC9999 IF NOT EQUAL
.
          MATCH     SP9,PTEOCODE
          GOTO      WTIC3000 IF EQUAL
.
          MOVE      PTEOCODE,KEY9
          GOTO      WTIC7000                * write an "IC" Record
       

WTIC7000  MOVE      "IC",XXICTYPE           * write an "IC" Record
          PACK      XXICCODE,KEY9,SP10
.
          IF        PASSNUMB = 2
            WRITE     EXTFILE1,SEQ;XXICTYPE,XXICCODE
          ENDIF
.
          COMPARE   ONE,READECD
          GOTO      WTIC1000 IF EQUAL
          GOTO      WTIC3000
.
WTIC9999  RETURN
+
.******************************************************************************
.*                                  WTTX0000              Called by: VALD0000 *
.*                     Transport (Taxi) Details - "TX"             & WRIT0000 *
.******************************************************************************
WTTX0000  MOVE      ZERO,EXIT
          MOVE      SP1,KEY1
.
          PACK      KEY23,TMFADMNO,PINVNO,THREE,SP30
          CALL      RDSDTRN4              * Position on an I/P DTR file record
WTTX1000  CALL      RDKDTRN4              * Read an I/P DTR file record
          BRANCH    OVRCD,WTTX9999
.
          MATCH     TMFADMNO,TADMNO
          GOTO      WTTX9999 IF NOT EQUAL * Different admin no
.
          MATCH     PINVNO,TREF
          GOTO      WTTX9999 IF NOT EQUAL * Different invoice no
.
          COMPARE   THREE,TRECTYPE
          GOTO      WTTX9999 IF NOT EQUAL * Different record type
.
          COMPARE   ZERO,TREBATE
          GOTO      WTTX1000 IF EQUAL     * Zero rebate amount ignore
.
          UNPACK    SP20,PTHFBCAT           * change "H/F Table" to "Table Type"
          PACK      KEY14,AFUNDH,AFNDTB,SP20
          CALL      RDFUND1                 * "Table Type code" now in PTHFBCAT
.
. ----- Get the taxi voucher item type -----
.
          MOVE      SP1,TACITMTP
          PACK      MISCDATE,DTFCENT,DTFYEAR,DTFMONTH,DTFDAY  * date
          REP       " 0",MISCDATE
.
          PACK      KEY29,ACLAIM,AFUNDH,PTHFBCAT,TITEMNO,MISCDATE,SP10
          CALL      PATMCHRD                * read Misc.Charges file 
          COMPARE   ZERO,EXIT
          GOTO      WTTX4000 IF EQUAL
.
WTTX2000  PACK      KEY29,ACLAIM,SP6,SP3,TITEMNO,MISCDATE,SP10
          CALL      PATMCHRD                * read Misc.Charges file 
          COMPARE   ZERO,EXIT
          GOTO      WTTX4000 IF EQUAL
.
WTTX3000  PACK      KEY29,PTCNDCLM,SP6,SP3,TITEMNO,MISCDATE,SP10
          CALL      PATMCHRD                * read Misc.Charges file 
          BRANCH    EXIT,WTTX1000           * not found - get next Misc.Item
.
WTTX4000  MOVE      ZERO,FORM1
          MOVE      PTMCTACT,TACITMTP       * TAC item type    ????? MLMLML
          MOVE      TACITMTP,KEY1
....      REP       "S1H2R3O4C5A6M7P8T9",KEY1
....      MOVE      KEY1,FORM1
....      BRANCH    FORM1,WTTX5000,WTTX5000,WTTX5000,WTTX5000,WTTX5000:
....                      WTTX1000,WTTX1000,WTTX1000,WTTX1000
.
          REP       "C1D1E1F1G1H1O1P1R1S1W1X1Y1Z1--A2I2M2T2",KEY1
          MOVE      KEY1,FORM1
          BRANCH    FORM1,WTTX5000,WTTX1000
.
          IF        PASSNUMB = 1
            CLEAR     ERRMSG
            APPEND    "TX - Invalid 'TAC item type' for item ",ERRMSG
            APPEND    MCHARGE,ERRMSG
            APPEND    SP70,ERRMSG
            RESET     ERRMSG
            CALL      EMSG0000              * Print an error message
          ENDIF
.
.                                           * set up the "TX" record
WTTX5000  MOVE      "TX",XXTXTYPE
          PACK      XXTXSDAT,TFCENT,TFYEAR,TFMONTH,TFDAY
          REP       " 0",XXTXSDAT
          MOVE      PTMCTACT,XXTXDEST       * TAC Destination Code ???? MLMLML
.
          CALL      GITA0000                * Get the item amount
.
          ASSIGN    (TREBATE + GSTAMNT),FORM12P2
          MULT      "100",FORM12P2
          MOVE      FORM12P2,FORM9
          MOVE      FORM9,KEY9
          REP       " 0",KEY9
          MOVE      KEY9,XXTXAMNT
.
          MOVE      SP9,XXTXTXSI
          IF        GSTAMNT <> 0
...         PACK      XXTXTXSI,ANSY,SP8
            MOVE      GSTAMNT,FORM12P2
            MULT      "100",FORM12P2
            MOVE      FORM12P2,FORM9
            MOVE      FORM9,KEY9
            REP       " 0",KEY9
            MOVE      KEY9,XXTXTXSI
          ENDIF
.
          IF        PASSNUMB = 2
            WRITE     EXTFILE1,SEQ;XXTXTYPE,XXTXSDAT,XXTXDEST,XXTXAMNT:
                                   XXTXTXSI
          ENDIF
          ADD       ONE,ITMCOUNT
.
          GOTO      WTTX1000
.
WTTX9999  RETURN
+
.******************************************************************************
.*                                  WTME0000              Called by: VALD0000 *
.*                            Write Medical Details                & WRIT0000 *
.*                ---- this routine back is in action   ----                  *
.******************************************************************************
WTME0000  MOVE      ZERO,EXIT
.
          PACK      KEY23,TMFADMNO,PINVNO,THREE,SP30
          CALL      RDSDTRN4              * Position on an I/P DTR file record
WTME1000  CALL      RDKDTRN4              * Read an I/P DTR file record
          BRANCH    OVRCD,WTME9999            
.         
          MATCH     TMFADMNO,TADMNO
          GOTO      WTME9000 IF NOT EQUAL   * Different admin no
.         
          MATCH     PINVNO,TREF   
          GOTO      WTME9000 IF NOT EQUAL   * Different invoice no
.         
          COMPARE   THREE,TRECTYPE
          GOTO      WTME9000 IF NOT EQUAL   * Different record type
.
          MATCH     "HBF      ",TITEMNO     * Leave charges ? (in WTLV0000)
          GOTO      WTME1000 IF EQUAL       * don't process Leave here
          MATCH     "BLF      ",TITEMNO
          GOTO      WTME1000 IF EQUAL
.         
          COMPARE   ZERO,TREBATE
          GOTO      WTME1000 IF EQUAL       * Zero rebate amount ignore
.         
. ----- Get the Medical Details item type -----
.
          MOVE      SP1,TACITMTP
          PACK      MISCDATE,DTFCENT,DTFYEAR,DTFMONTH,DTFDAY  * date
          REP       " 0",MISCDATE
.
          UNPACK    SP20,PTHFBCAT           * change "H/F Table" to "Table Type"
          PACK      KEY14,AFUNDH,AFNDTB,SP20
          CALL      RDFUND1                 * "Table Type code" now in PTHFBCAT
.
          PACK      KEY29,ACLAIM,AFUNDH,PTHFBCAT,TITEMNO,MISCDATE,SP10
          CALL      PATMCHRD                * read Misc.Charges file
          COMPARE   ZERO,EXIT
          GOTO      WTME2000 IF EQUAL       * record found
.
          PACK      KEY29,ACLAIM,SP6,SP3,TITEMNO,MISCDATE,SP10
          CALL      PATMCHRD                * read Misc.Charges file
          COMPARE   ZERO,EXIT
          GOTO      WTME2000 IF EQUAL       * record found
.
          PACK      KEY29,PTCNDCLM,SP6,SP3,TITEMNO,MISCDATE,SP10
          CALL      PATMCHRD                * read Misc.Charges file
          BRANCH    EXIT,WTME1000           * not found - get next Misc.Item
.         
WTME2000  MOVE      ZERO,FORM1
          MOVE      PTMCTACT,TACITMTP       * TAC item type
          MOVE      TACITMTP,KEY1
          REP       "T-M-",KEY1
          MATCH     "-",KEY1
          IF        !@EQUAL & (PASSNUMB = 1)
            CLEAR     ERRMSG
            APPEND    "ME - Invalid 'TAC item type' for item ",ERRMSG
            APPEND    MCHARGE,ERRMSG
            APPEND    SP70,ERRMSG
            RESET     ERRMSG
            CALL      EMSG0000              * Print an error message
          ENDIF
.                                             
          MOVE      PTMCTACD,TACDUR
          IF        TACDUR=0
            MOVE      "  15",TACDUR         * Deflt TAC duration to 15 minutes
          ENDIF
.
WTME3000  MOVE      ZERO,EXIT
          CALL      SMIS0000                * Setup multiple item stuff to
.
          MOVE      SP8,PROVNO              * Provider no.
          CALL      GPRO0000                * Get provider number
......    CALL      PROVN000                * Get provider no. for M & T type
.                                           * set up the Extract fields
          MOVE      "0800",STRTTIME
          MOVE      "ME",XXMETYPE
          PACK      XXMESDAT,TFCENT,TFYEAR,TFMONTH,TFDAY
          REP       " 0",XXMESDAT           * Date of Service
          PACK      XXMESPNO,PROVNO,SP10    * Service Provider No.
          MOVE      SP20,XXMEINVN           * Service Invoice No. 
          MOVE      SP4,STRTTIME
          IF        MXNOFSRV > 1
            MOVE      "0800",STRTTIME
          ENDIF
          MOVE      "E",XXMESLOC            * Service Location code
          MOVE      TACITMTP,XXMEITTY       * TAC item type
.
          MATCH     SP10,PTMCECEQ           * is Item No. PTMCECEQ or MCHARGE ?
          IF        @EQUAL
            PACK      XXMEITNO,MCHARGE,SP10   * Item Number from MCHARGE
          ELSE
            PACK      XXMEITNO,PTMCECEQ,SP10  * Item Number from PTMCECEQ
          ENDIF
.
WTME3500  ASSIGN    (TREBATE + GSTAMNT),FORM12P2  * Item Amount
          MULT      "100",FORM12P2
          MOVE      FORM12P2,FORM9
          MOVE      FORM9,KEY9
          REP       " 0",KEY9
          MOVE      KEY9,XXMEAMNT
.
          MOVE      SP9,XXMETXSI                  * Item GST Amount
          IF        GSTAMNT <> 0
            MOVE      GSTAMNT,FORM12P2
            MULT      "100",FORM12P2
            MOVE      FORM12P2,FORM9
            MOVE      FORM9,KEY9
            REP       " 0",KEY9
            MOVE      KEY9,XXMETXSI
          ENDIF
.
WTME4000  MOVE      STRTTIME,XXMESCTM       * Start time for mult. services
.         
          IF        PASSNUMB = 1
            ADD       TREBATE,TMPINAMT      * Incrmt invoice amount counter
            ADD       GSTAMNT,TMPGSTAM      * GST portion of rebate amount
          ENDIF     
.
          IF        PASSNUMB = 2
            WRITE     EXTFILE1,SEQ;XXMETYPE,XXMESDAT,XXMESPNO,XXMEINVN:
                                   XXMESCTM,XXMESLOC,XXMEITTY,XXMEITNO:
                                   XXMEAMNT,XXMETXSI
          ENDIF
          ADD       ONE,ITMCOUNT
.
.                                           * set up recurrance when TSERVS > 1
WTME7000  ADD       ONE,NOOFSERV            * Increment no of services
          COMPARE   MXNOFSRV,NOOFSERV
          IF        @LESS
            CALL      INTM0000              * Increment start time
            GOTO      WTME4000              * write this item again
          ENDIF
          GOTO      WTME1000
.
WTME9000  MOVE      ZERO,EXIT
WTME9999  RETURN
+
.******************************************************************************
.*                                  CHKME000              Called by: GTPT0000 *
.*        Routine to find "ME" only Invoices - called from GTPT4500           *
.******************************************************************************
CHKME000  MOVE      ZERO,EXIT
          GOTO      CHKME200                * process DTR record from GTPT0000
.
CHKME100  CALL      RDKDTRN4                * process the next DTR record
          BRANCH    OVRCD,CHKME950
.
          MATCH     PINVADM,TADMNO
          GOTO      CHKME950 IF NOT EQUAL   * Different admin no
.
          MATCH     PINVNO,TREF
          GOTO      CHKME950 IF NOT EQUAL   * Different invoice no
.
CHKME200  COMPARE   THREE,TRECTYPE
          GOTO      CHKME950 IF NOT EQUAL   * Different record type
.
          MATCH     "HBF      ",TITEMNO     * Leave charges ? (in WTLV0000)
          GOTO      CHKME100 IF EQUAL       * don't process Leave here
          MATCH     "BLF      ",TITEMNO
          GOTO      CHKME100 IF EQUAL
.
          COMPARE   ZERO,TREBATE
          GOTO      CHKME100 IF EQUAL       * Zero rebate amount ignore
.
. ----- Get the Medical Details item type -----
.
.                                           * Admiss info read in LOAD0000 (OK)
CHKME300  MOVE      SP1,TACITMTP
          PACK      MISCDATE,DTFCENT,DTFYEAR,DTFMONTH,DTFDAY  * date
          REP       " 0",MISCDATE
.
          UNPACK    SP20,PTHFBCAT           * change "H/F Table" to "Table Type"
          PACK      KEY14,AFUNDH,AFNDTB,SP20
          CALL      RDFUND1                 * "Table Type code" now in PTHFBCAT
.         
          PACK      KEY29,ACLAIM,AFUNDH,PTHFBCAT,TITEMNO,MISCDATE,SP10
          CALL      PATMCHRD                * read Misc.Charges file
          COMPARE   ZERO,EXIT               
          GOTO      CHKME400 IF EQUAL       * record found
.         
          PACK      KEY29,ACLAIM,SP6,SP3,TITEMNO,MISCDATE,SP10
          CALL      PATMCHRD                * read Misc.Charges file
          COMPARE   ZERO,EXIT               
          GOTO      CHKME400 IF EQUAL       * record found
.
          PACK      KEY29,PTCNDCLM,SP6,SP3,TITEMNO,MISCDATE,SP10
          CALL      PATMCHRD                * read Misc.Charges file
          BRANCH    EXIT,CHKME100           * not found - get next Misc.Item
.
CHKME400  MOVE      ZERO,FORM1
          MOVE      PTMCTACT,TACITMTP       * TAC item type
          MOVE      TACITMTP,KEY1
          REP       "T-M-",KEY1
          MATCH     "-",KEY1
          GOTO      CHKME100 IF NOT EQUAL
.
          MOVE      ZERO,EXIT               * a TAC "ME" has been found
          GOTO      CHKME999
.
CHKME950  MOVE      ONE,EXIT                * no TAC "ME" record found
.
CHKME999  RETURN
+
.******************************************************************************
.*                                  WTTL0000              Called by: VALD0000 *
.*                            Write Trailer Details                & WRIT0000 *
.******************************************************************************
WTTL0000  MOVE      ZERO,EXIT
.
.                                           * Trailer data is same as Header
          MOVE      "TL",XXTLTYPE
          PACK      XXTLTXNO,XXHDTXNO,SP10  * TAC Transmitter No.
          PACK      XXTLINCN,XXHDINVC,SP4
          PACK      XXTLCDAT,XXHDCDAT,SP10
          PACK      XXTLCTIM,XXHDCTIM,SP10
          PACK      XXTLLBDT,XXHDLBDT,SP10
          PACK      XXTLLBTM,XXHDLBTM,SP10
          PACK      XXTLTAMT,XXHDTAMT,SP10

          IF        PASSNUMB = 2
            WRITE     EXTFILE1,SEQ;XXTLTYPE,XXTLTXNO,XXTLINCN,XXTLCDAT:
                                   XXTLCTIM,XXTLLBDT,XXTLLBTM,XXTLTAMT
          ENDIF
.
WTTL9999  RETURN
+
.******************************************************************************
.*                                  GIPS0000              Called by: WRIT0000 *
.*                         Get The Inpatient Sequence                         *
.*        ----------------- not in use - not in use ----------------          *
.******************************************************************************
GIPS0000  MOVE      ZERO,EXIT
          MOVE      ZERO,IPSCT              * Clear the inpatient sequence count
.
          PACK      KEY16,TMFADMNO,SP20
          CALL      RDSINV3                 * Position on & read an invoice file
GIPS1000  CALL      RDKINV3                   record
          BRANCH    OVRCD,GIPS2000
.
          MATCH     TMFADMNO,PINVADM
          GOTO      GIPS2000 IF NOT EQUAL   * Different admin no
.
          CALL      GTPT0000                * Get TAC patients
          BRANCH    EXIT,GIPS1000
.
          ADD       ONE,IPSCT               * Incrmt the inpatient sequence cnt
          MATCH     PINVNO,TMPINVNO
          GOTO      GIPS1000 IF NOT EQUAL   * Not the current invoice
.
          MOVE      IPSCT,SAVIPSCT          * Save the inpatient sequence count
          GOTO      GIPS1000
.
GIPS2000  MOVE      "I ",INPSEQ             * Inpatient sequence - initial
          BRANCH    IPSCT,GIPS3000          * Only 1 invoice
.
          BRANCH    SAVIPSCT,GIPS4000       * 1st invoice in sequence
.
          MOVE      "S ",INPSEQ             * Inpatient sequence - subsequent
          COMPARE   IPSCT,SAVIPSCT
          GOTO      GIPS4000 IF NOT EQUAL   * Current invoice isnt last invoice
.
          MATCH     SP8,DDATE
          GOTO      GIPS4000 IF EQUAL       * Not discharged
.
          MATCH     ALACDTE,DDATE
          GOTO      GIPS4000 IF NOT EQUAL   * Last invoice date <> disch date
.
          MOVE      "D ",INPSEQ             * Inpatient sequence - disch
          GOTO      GIPS4000
.
GIPS3000  MATCH     SP8,DDATE
          GOTO      GIPS4000 IF EQUAL       * Not discharged
.
          MATCH     ALACDTE,DDATE
          GOTO      GIPS4000 IF NOT EQUAL   * Last invoice date <> disch date
.
          MOVE      "ID",INPSEQ             * Inpatient sequence - initial disch
.
GIPS4000  PACK      KEY8,TMPINVNO
          CALL      RDINV1                  * Read an invoice file record
.
GIPS9999  RETURN
+
.******************************************************************************
.*                                  GSEQ0000              Called by:          *
.*                             Get the Item Sequence                          *
.******************************************************************************
GSEQ0000  MOVE      ZERO,EXIT
          MOVE      "S ",SERVSEQ                      * set to "S ' as default
.
          PACK      KEY30,TMFADMNO,XXIPSTDT,SP30      * use DTR start date
          CALL      RDSTRAN2
GSEQ1000  CALL      RDKTRAN2
          BRANCH    OVRCD,GSEQ5000
.
          MATCH     TMFADMNO,TADMN
          GOTO      GSEQ5000 IF NOT EQUAL
.
          MATCH     XXIPSTDT,TDATE                    * check for DTR start date
          GOTO      GSEQ1000 IF LESS
.
          MATCH     XXIPSTDT,TDATE                    * check for DTR start date
          GOTO      GSEQ5000 IF NOT EQUAL
.
          MATCH     "A",TMOVE                         * check if Admission
          IF        @EQUAL
            MOVE      "I ",SERVSEQ                    * set "I " default
            PACK      KEY30,TMFADMNO,XXIPENDT,ZED30   * use DTR end date
            CALL      RDSTRAN2
            CALL      RDPTRAN2
            BRANCH    OVRCD,GSEQ9999
            MATCH     XXIPENDT,TDATE                  * check for DTR end date
            IF        @EQUAL
              MATCH     "D",TMOVE
              IF        @EQUAL
                MOVE      "ID",SERVSEQ                * set "ID"
              ENDIF
            ENDIF
            GOTO      GSEQ9999              * don't go any further - get out
          ENDIF
.
.
GSEQ5000  PACK      KEY30,TMFADMNO,XXIPENDT,ZED30     * use DTR end date
          CALL      RDSTRAN2
          CALL      RDPTRAN2
          BRANCH    OVRCD,GSEQ9999
.
          MATCH     TMFADMNO,TADMN
          GOTO      GSEQ9999 IF NOT EQUAL
.
          MATCH     XXIPENDT,TDATE                    * check for DTR end date
          IF        @EQUAL
            MATCH     "D",TMOVE
            IF        @EQUAL
              MOVE      "D ",SERVSEQ                  * set "D "
            ENDIF
          ENDIF
.
GSEQ9999  RETURN
+
.******************************************************************************
.*                                  GITA0000              Called by: Lots     *
.*                             Get The Item Amount                            *
.******************************************************************************
GITA0000  MOVE      ZERO,EXIT
          MOVE      ZERO,GSTAMNT
.
. ----- Need to calculate GST on inpatient rebate amount cause we dont -----
. ----- store the GST on rebate amounts -----
.
GITA1000  ASSIGN    (PTDTGSTM + PTDTGSTL),FORM7P2
          COMPARE   ZERO,FORM7P2
          GOTO      GITA3000 IF EQUAL       * No GST amount
.
          PACK      KEY8,TFCENT,TFYEAR,TFMONTH,TFDAY
          REP       " 0",KEY8
          PACK      KEY14,PTDTGSTC,KEY8
          CALL      RDIBGE1                 * Read a GST rates file record
          COMPARE   ONE,OVRCD
          GOTO      GITA2000 IF NOT EQUAL   * Record found
.
          CALL      RPIBGE1                 * Read a GST rates file record
          BRANCH    OVRCD,GITA3000
.
          MATCH     PTDTGSTC,IBGECODE
          GOTO      GITA3000 IF NOT EQUAL   * Different GST code
.
GITA2000  ASSIGN    (TREBATE * IBGEAMNT) / 100,GSTAMNT
.
GITA3000  IF        PASSNUMB = 1
            ADD       TREBATE,TMPINAMT      * Incrmt invoice amount counter
            ADD       GSTAMNT,TMPGSTAM      * GST portion of rebate amount
          ENDIF
.
GITA9999  RETURN
+
.******************************************************************************
.*                                  SMIS0000              Called by:          *
.*                          Setup Multiple Item Stuff                         *
.******************************************************************************
SMIS0000  MOVE      TSERVS,MXNOFSRV         * Maximum no of services
          IF        MXNOFSRV = 0
            MOVE      ONE,MXNOFSRV          * Default maximum no of serv to 1
          ENDIF
.
          ASSIGN    (TPATAMTT / MXNOFSRV),TREBATE      * Item total
          ASSIGN    (PTDTGSTM / MXNOFSRV),GSTAMNT      * Item GST total
          MOVE      ZERO,NOOFSERV           * No of services
.
SMIS9000  MOVE      ZERO,EXIT
SMIS9999  RETURN
+
.******************************************************************************
.*                                  GPRO0000              Called by: WTME0000 *
.*                           Get The Provider Number                          *
.******************************************************************************
GPRO0000  MOVE      ZERO,EXIT
          MOVE      SP8,PROVNO
.
          MATCH     SP70,TDOCTO             * "Operating Doc" OR TDOCTA ?
          IF        !@EQUAL
            PACK      KEY6,TDOCTO,SP70
            GOTO      GPRO0500
          ENDIF
.
          MATCH     SP70,ADOCTA             * Default admitting doctor?
          IF        !@EQUAL
            PACK      KEY6,ADOCTA,SP70
            GOTO      GPRO0500
          ENDIF
.
          GOTO      GPRO1000                * Blank doctor code
.
GPRO0500  CALL      RDDOCT1                 * Read a doctors file record
          BRANCH    OVRCD,GPRO1000
.
          MATCH     SP70,DPROV
          GOTO      GPRO2000 IF EQUAL       * Blank provider no
.
          MOVE      DPROV,PROVNO
          GOTO      GPRO9999
.
GPRO1000  CLEAR     ERRMSG
          APPEND    "ME Item ",ERRMSG
          SQUEEZE   TITEMNO
          APPEND    TITEMNO,ERRMSG
          APPEND    " - Missing Doctor information",ERRMSG
          APPEND    SP70,ERRMSG
          RESET     ERRMSG
          CALL      EMSG0000                * Print an error message
          GOTO      GPRO9999
.
GPRO2000  CLEAR     ERRMSG
          APPEND    "ME Item ",ERRMSG
          SQUEEZE   TITEMNO
          APPEND    TITEMNO,ERRMSG
          APPEND    " - Missing Provider number",ERRMSG
          APPEND    SP70,ERRMSG
          RESET     ERRMSG
          CALL      EMSG0000                * Print an error message
          GOTO      GPRO9999
.
GPRO9999  RETURN
+
.******************************************************************************
.*                                  PROVN000              Called by: WTME0000 *
.*                           Get The Provider Number                          *
.*               ------- no longer user - see GPRO0000 ------                 *
.******************************************************************************
PROVN000  MOVE      ZERO,EXIT
          MOVE      SP8,PROVNO
.
          CLEAR     ERRMSG                  * set up first bit of error message
          APPEND    "ME Item ",ERRMSG
          SQUEEZE   TITEMNO
          APPEND    TITEMNO,ERRMSG
.                                           * Provider No. should be in first
.                                           * 8 characters of DTR Record
.
          SCAN      " ",TDDESC              * check through DTR Description
          GOTO      PROVN800 IF NOT EQUAL
.
          MOVEFPTR  TDDESC,F2
          IF        F2 > 9
            GOTO      PROVN820              * Provider No greater than 8 chars
          ENDIF
          RESET     TDDESC
          SETLPTR   TDDESC,F2
          PACK      KEY8,TDDESC,SP10
...       SQUEEZE   KEY8
...       TYPE      KEY8
...       GOTO      PROVN840 IF NOT EQUAL   * numeric Provider No not found
.
          PACK      PROVNO,KEY8,SP10
          GOTO      PROVN999
.
.
PROVN800  APPEND    " - Provider number not found",ERRMSG
          APPEND    SP70,ERRMSG
          RESET     ERRMSG
          CALL      EMSG0000                * Print an error message
          GOTO      PROVN999
.
PROVN820  APPEND    " - Provider no. greater than 8 chars",ERRMSG
          APPEND    SP70,ERRMSG
          RESET     ERRMSG
          CALL      EMSG0000                * Print an error message
          GOTO      PROVN999
.
PROVN840  APPEND    " - Provider no. is not numeric - ",ERRMSG
          APPEND    KEY8,ERRMSG
          APPEND    SP70,ERRMSG
          RESET     ERRMSG
          CALL      EMSG0000                * Print an error message
          GOTO      PROVN999
.
PROVN999  RETURN
+
.******************************************************************************
.*                                  INTM0000              Called by: WTME0000 *
.*                            Increment Start Time                 & WTPM0000 *
.******************************************************************************
INTM0000  MOVE      ZERO,EXIT
          MOVE      ZERO,FORM5
          UNPACK    STRTTIME,CHOUR,CMIN
          MOVE      CHOUR,IHOUR
          MOVE      CMIN,IMIN
          ASSIGN    (IHOUR * 60) + IMIN,FORM5
.
          ADD       TACDUR,FORM5            * Increment by TAC duration
.
          IF        FORM5 > 1440
            SUB       "1440",FORM5          * Subtract 1440 minutes (1 day)
          ENDIF
.
INTM3000  ASSIGN    (FORM5 / 60),IHOUR
          ASSIGN    (FORM5 % 60),IMIN
          PACK      STRTTIME,IHOUR,IMIN
          REP       " 0",STRTTIME
.
INTM9999  RETURN
+
.******************************************************************************
.*                                  KILL0000              Called by: ML0000   *
.*                             Delete The Tempfile                 & OPEN0000 *
.******************************************************************************
KILL0000  CLOSE     TEMP1
          CLOSE     TEMP2
          CLOSE     TEMPIP
.
          CLEAR     KEY99
          APPEND    "iserase ",KEY99
          APPEND    FNAMEA,KEY99
          RESET     KEY99
          EXECUTE   KEY99,TASKID
.
          CLEAR     KEY99
          APPEND    "iserase ",KEY99
          APPEND    FNAMEB,KEY99
          RESET     KEY99
          EXECUTE   KEY99,TASKID
.
KILL9000  MOVE      ZERO,EXIT
KILL9999  RETURN
+
.******************************************************************************
.*                                  SEND0000                                  *
.*                   Use ".us1" script to move file to PC                     *
.******************************************************************************
SEND0000  MOVE      ZERO,EXIT
.
.    set up Command Line as - "priweb02.us1 CSINnnnn CSINnnnn  "
.
          CLEAR     CMDLINE    
          APPEND    "priweb02.us1 ",CMDLINE
          APPEND    EXTFNAME,CMDLINE
          APPEND    SP1,CMDLINE                  * was ".txt "
          APPEND    EXTFNAME,CMDLINE
          APPEND    SP1,CMDLINE                  * was ".txt "
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          DISPLAY   *P1:24,*EF,*W1;
          CALL      DISPHEAD                * Re-Display screen heading
.
SEND9999  RETURN
+
.******************************************************************************
.*                                  EMSG0000              Called by: Lots     *
.*                             Print Error Message                            *
.******************************************************************************
EMSG0000  COMPARE   "2",PASSNUMB
          GOTO      EMSG9000 IF EQUAL       * don't write message if Pass 2   
.
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line counter >= 55 lines
.
          PACK      ERRMSG,ERRMSG,SP70
          PRINT     *1,"|",TMPINVNO,"|",TMPADMNO,"|",ERRMSG,"|"
          ADD       ONE,CLNO
.
          MOVE      "1",ERRORFLG            * Error flag - yes
          MATCH     ERRINVNO,PINVNO
          IF        !@EQUAL
            ADD       ONE,RECSERR           * Increment the error counter
            MOVE      PINVNO,ERRINVNO
          ENDIF
.
EMSG9000  MOVE      ZERO,EXIT
EMSG9999  RETURN
+
.******************************************************************************
.*                                  WMSG0000              Called by: Lots     *
.*                            Print Warning Message                           *
.******************************************************************************
WMSG0000  COMPARE   "1",PASSNUMB
          GOTO      WMSG9000 IF NOT EQUAL   * Not validating, writing details
.
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line counter >= 55 lines
.
          PACK      ERRMSG,ERRMSG,SP70
          PRINT     *1,"|",TMPINVNO,"|",TMFADMNO,"|",ERRMSG,"|"
          ADD       ONE,CLNO
.
          MATCH     WRNINVNO,PINVNO
          IF        !@EQUAL
            ADD       ONE,RECSWARN             * Increment the warning counter
            MOVE      PINVNO,WRNINVNO
          ENDIF
.
WMSG9000  MOVE      ZERO,EXIT
WMSG9999  RETURN
+
.******************************************************************************
.*                                  GXCOD000              Called by: WTIP0000 *
.*                                Get X Codes                                 *
.******************************************************************************
GXCD0000  MOVE      ZERO,XCODINDC
.
          MATCH     CAT201,ACODE
          IF        @EQUAL
            MOVE      CAT201,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT202,ACODE
          IF        @EQUAL
            MOVE      CAT202,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT203,ACODE
          IF        @EQUAL
            MOVE      CAT203,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT204,ACODE
          IF        @EQUAL
            MOVE      CAT204,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT205,ACODE
          IF        @EQUAL
            MOVE      CAT205,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT206,ACODE
          IF        @EQUAL
            MOVE      CAT206,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT207,ACODE
          IF        @EQUAL
            MOVE      CAT207,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT208,ACODE
          IF        @EQUAL
            MOVE      CAT208,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT209,ACODE
          IF        @EQUAL
            MOVE      CAT209,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT210,ACODE
          IF        @EQUAL
            MOVE      CAT210,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT211,ACODE
          IF        @EQUAL
            MOVE      CAT211,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT212,ACODE
          IF        @EQUAL
            MOVE      CAT212,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT213,ACODE
          IF        @EQUAL
            MOVE      CAT213,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT214,ACODE
          IF        @EQUAL
            MOVE      CAT214,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT215,ACODE
          IF        @EQUAL
            MOVE      CAT215,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT216,ACODE
          IF        @EQUAL
            MOVE      CAT216,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT217,ACODE
          IF        @EQUAL
            MOVE      CAT217,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT218,ACODE
          IF        @EQUAL
            MOVE      CAT218,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT219,ACODE
          IF        @EQUAL
            MOVE      CAT219,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT220,ACODE
          IF        @EQUAL
            MOVE      CAT220,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT221,ACODE
          IF        @EQUAL
            MOVE      CAT221,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT222,ACODE
          IF        @EQUAL
            MOVE      CAT222,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT223,ACODE
          IF        @EQUAL
            MOVE      CAT223,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT224,ACODE
          IF        @EQUAL
            MOVE      CAT224,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT225,ACODE
          IF        @EQUAL
            MOVE      CAT225,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT226,ACODE
          IF        @EQUAL
            MOVE      CAT226,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT227,ACODE
          IF        @EQUAL
            MOVE      CAT227,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT228,ACODE
          IF        @EQUAL
            MOVE      CAT228,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT229,ACODE
          IF        @EQUAL
            MOVE      CAT229,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT230,ACODE
          IF        @EQUAL
            MOVE      CAT230,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT231,ACODE
          IF        @EQUAL
            MOVE      CAT231,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT232,ACODE
          IF        @EQUAL
            MOVE      CAT232,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT233,ACODE
          IF        @EQUAL
            MOVE      CAT233,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT234,ACODE
          IF        @EQUAL
            MOVE      CAT234,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT235,ACODE
          IF        @EQUAL
            MOVE      CAT235,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT236,ACODE
          IF        @EQUAL
            MOVE      CAT236,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT237,ACODE
          IF        @EQUAL
            MOVE      CAT237,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT238,ACODE
          IF        @EQUAL
            MOVE      CAT238,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT239,ACODE
          IF        @EQUAL
            MOVE      CAT239,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT240,ACODE
          IF        @EQUAL
            MOVE      CAT240,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT241,ACODE
          IF        @EQUAL
            MOVE      CAT241,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT242,ACODE
          IF        @EQUAL
            MOVE      CAT242,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT243,ACODE
          IF        @EQUAL
            MOVE      CAT243,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT244,ACODE
          IF        @EQUAL
            MOVE      CAT244,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
          MATCH     CAT245,ACODE
          IF        @EQUAL
            MOVE      CAT245,KEY3
            MOVE      ONE,XCODINDC
            GOTO      GXCD9999
          ENDIF
.
GXCD9999  RETURN
+
.******************************************************************************
.*                       I/O Routines For The Tempfile                        *
.******************************************************************************
RATEMP1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      TEMP1,KEY8;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      TEMP1,KEY8;TMPINVNO,DUMMY1,DUMMY2,TMPADMNO,TMPERFLG:
                                TMPINAMT,TMPGSTAM
          GOTO      OVERCOND IF OVER
          MOVE      DUMMY1,MEPMFLG
          MOVE      DUMMY2,TXFLG
          MOVE      TMPADMNO,TMFADMNO
          MOVE      TMPERFLG,TMFERFLG
          RETURN
.
UPTEMP1   MOVE      MEPMFLG,DUMMY1
          MOVE      TXFLG,DUMMY2
          MOVE      TMFADMNO,TMPADMNO
          MOVE      TMFERFLG,TMPERFLG
          UPDATE    TEMP1;TMPINVNO,DUMMY1,DUMMY2,TMPADMNO,TMPERFLG:
                          TMPINAMT,TMPGSTAM
          RETURN
.
WRTEMP1   RESET     KEY8
          MOVE      MEPMFLG,DUMMY1
          MOVE      TXFLG,DUMMY2
          MOVE      TMFADMNO,TMPADMNO
          MOVE      TMFERFLG,TMPERFLG
          WRITE     TEMP1,KEY8;TMPINVNO,DUMMY1,DUMMY2,TMPADMNO,TMPERFLG:
                               TMPINAMT,TMPGSTAM
          RETURN
.
RSTEMP2   RESET     KEY16
          READ      TEMP2,KEY16;;
          RETURN
.
RKTEMP2   MOVE      ZERO,OVRCD
          READKS    TEMP2;TMPINVNO,DUMMY1,DUMMY2,TMPADMNO,TMPERFLG:
                          TMPINAMT,TMPGSTAM
          GOTO      OVERCOND IF OVER
          MOVE      DUMMY1,MEPMFLG
          MOVE      DUMMY2,TXFLG
          MOVE      TMPADMNO,TMFADMNO
          MOVE      TMPERFLG,TMFERFLG
          RETURN
+
.******************************************************************************
.*                       I/O Routines For The Tempfile                        *
.******************************************************************************
RATMPIP1  MOVE      ZERO,OVRCD
          RESET     KEY29
          READ      TEMPIP,KEY29;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPIP1  RESET     KEY29
          READ      TEMPIP,KEY29;;
          RETURN
.
RKTMPIP1  MOVE      ZERO,OVRCD
          READKS    TEMPIP;XXIPKEY,XXIPTYPE,XXIPSTDT,XXIPENDT,XXIPNDYS:
                           XXIPIPTY,XXIPAMNT,XXIPISEQ,XXIPWIND,XXIPTXSI
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMPIP1  MOVE      ZERO,OVRCD
          READKP    TEMPIP;XXIPKEY,XXIPTYPE,XXIPSTDT,XXIPENDT,XXIPNDYS:
                           XXIPIPTY,XXIPAMNT,XXIPISEQ,XXIPWIND,XXIPTXSI
          GOTO      OVERCOND IF OVER
          RETURN
.
UPTMPIP1  MOVE      ZERO,OVRCD
          UPDATE    TEMPIP;XXIPKEY,XXIPTYPE,XXIPSTDT,XXIPENDT,XXIPNDYS:
                           XXIPIPTY,XXIPAMNT,XXIPISEQ,XXIPWIND,XXIPTXSI
          RETURN
.
WRTMPIP1  RESET     KEY29
          WRITE     TEMPIP,KEY29;XXIPKEY,XXIPTYPE,XXIPSTDT,XXIPENDT,XXIPNDYS:
                                 XXIPIPTY,XXIPAMNT,XXIPISEQ,XXIPWIND,XXIPTXSI
          RETURN
.
DETMPIP1  RESET     KEY29
          DELETE    TEMPIP,KEY29
          RETURN
.==============================================================================
.
          INC       STD001IO
.
          INC       CALCDAYS                * Calculate diff between dates
          INC       CLPATDSC                * Clear the disch file variables
          INC       NHOSPDAY                * Calcuate no of days in hospital
          INC       PATCODKY                * Keyin a codes file code
          INC       PATMCHRD                * Miscellaneous Charges read routine
          INC       TFILENAM                     * Generate Temp File Name
.
          INC       IBAGEDIO/INC            * GST rate file
          INC       IBASEQIO/INC                 * Sequential Numbers File
          INC       PATCODIO/INC            * Codes file
          INC       PATDO1IO/INC            * Doctor file
          INC       PATDSCIO/INC            * Discharge file
          INC       PATDTRIO/INC            * DTR file
          INC       PATEBHIO/INC            * EDI batch header file
          INC       PATEBIIO/INC            * EDI batch invoice file
          INC       PATECDIO/INC            * Patient ICD10 Disease Codes
          INC       PATECOIO/INC            * Patient ICD10 Operation Codes
          INC       PATEDAIO/INC            * EDI audit file
          INC       PATFN1IO/INC
          INC       PATICDIO/INC            * ICD disease file
          INC       PATINVIO/INC            * Invoice file
          INC       PATITMIO/INC            * Item file
          INC       PATMA1IO/INC            * Master file
          INC       PATMCHIO/INC            * Miscellaneous charges file
          INC       PATMI1IO/INC            * Admin file
          INC       PATTRNIO/INC            * Transfer file
          INC       PATWMAIO/INC            * TAC file
          INC       PMSVX1IO/INC
          INC       WEBERRIO/INC                 * Web Server Error Logging
+
