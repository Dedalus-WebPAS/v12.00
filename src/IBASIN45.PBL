.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.04.01  11.04.2005 Peter Vela CAR 59696
.           Recompiled for SINUSAGE
. V9.03.01  10.09.2003 Steve Downing (VF.11.01 CAR 9375)
.           Recompiled for SINREBFD & SINREBIO
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B01 02.11.2000 Charles Handaya
.           Recompiled for sincchaf and SINUSAGE change
.           Recompiled (Modification of Warehouse Security)
.-------------------------------------------------------
. VF.01.01  18.07.2000 Charles Handaya
.           Omnicell import file - Move spaces into Restock ID (SIBARESI)
.           Quote 9817
.-------------------------------------------------------
. VF.00.02  22.12.1999 Charles Handaya
.           Recompiled for Fixing Audit Date (CCYYMMDD)
. VF.00.01  03.11.1999 Sandra Barcham
.           Change locked message to use X
.-------------------------------------------------------
BADLOAD   FORM      1
CMDLINE   DIM       100
CHECKTOT  FORM      12.2
CHECKCST  DIM       5
CHECK55   DIM       55
CURREQNO  DIM       7
ERRORMSG  DIM       11
FILNAMSV  DIM       40
FILFOUND  FORM      1
FORM7     FORM      7
PGRANREQ  FORM      12.2
PGRANBAC  FORM      12.2
PGRANISS  FORM      12.2
PCSTREQ   FORM      12.2
PCSTBAC   FORM      12.2
PCSTISS   FORM      12.2
REQDATE   DIM       8
REQDAT10  DIM       10
TOTERRS   FORM      8
TEMPTOT   FORM      12.2
WORKDATE  DIM       8
Z20       INIT      "zzzzzzzzzzzzzzzzzzzz"
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASIN45
.   Function      :   Import Requisition Details              
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       SINBACFD/INC
          INC       SINCCAFD/INC
          INC       SINCCBFD/INC
          INC       SINCCEFD/INC
          INC       SINCCFFD/INC
          INC       SINCCHFD/INC
          INC       SINCGBFD/INC
          INC       SINCIAFD/INC
          INC       SINCIEFD/INC
          INC       SINCIHFD/INC
          INC       SINCIIFD/INC
          INC       SINCODFD/INC
          INC       SINCONFD/INC
          INC       SINIMFFD/INC
          INC       SINITMFD/INC
          INC       SINPERFD/INC
          INC       SINPRQFD/INC
          INC       SINREAFD/INC
          INC       SINREBFD/INC
          INC       SINSUAFD/INC
          INC       SINSUBFD/INC
          INC       SINTMPDF/INC
          INC       SINWARFD/INC
          INC       SINWRKDF    
          INC       SINWRKFD/INC
.=========================
.Local Variable Definition
.-------------------------
FILENAME  DIM      40 * Scr 00 Fld     2
CNTRLTOT  FORM     12.2 * Scr 00 Fld     5
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASIN45"
PRGNAM    INIT      "Import Requisition Details              "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   24",AUDTSECT
          MOVE      "206",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudba";
            OPEN      SINAUDBA,"sinaudba"
          ENDIF
          DISPLAY   *P56:24,"Opening sinbacaf";
          OPEN      SINBACA1,"sinbacaf"
          DISPLAY   *P56:24,"Opening sinbacaf";
          OPEN      SINBACA2,"sinbacaf"
          DISPLAY   *P56:24,"Opening sinbacaf";
          OPEN      SINBACA3,"sinbacaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA1,"sinccaaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA2,"sinccaaf"
          DISPLAY   *P56:24,"Opening sinccbaf";
          OPEN      SINCCBA1,"sinccbaf"
          DISPLAY   *P56:24,"Opening sincceaf";
          OPEN      SINCCEA1,"sincceaf"
          DISPLAY   *P56:24,"Opening sincceaf";
          OPEN      SINCCEA2,"sincceaf"
          DISPLAY   *P56:24,"Opening sinccfaf";
          OPEN      SINCCFA1,"sinccfaf"
          DISPLAY   *P56:24,"Opening sinccfaf";
          OPEN      SINCCFA2,"sinccfaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA1,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA2,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA3,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA4,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA5,"sincchaf"
          DISPLAY   *P56:24,"Opening sincgbaf";
          OPEN      SINCGBA1,"sincgbaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA1,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA2,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA3,"sinciaaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA1,"sincieaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA2,"sincieaf"
          DISPLAY   *P56:24,"Opening sincihaf";
          OPEN      SINCIHA1,"sincihaf"
          DISPLAY   *P56:24,"Opening sincihaf";
          OPEN      SINCIHA2,"sincihaf"
          DISPLAY   *P56:24,"Opening sinciiaf";
          OPEN      SINCIIA1,"sinciiaf"
          DISPLAY   *P56:24,"Opening sincodaf";
          OPEN      SINCODA1,"sincodaf"
          DISPLAY   *P56:24,"Opening sincodaf";
          OPEN      SINCODA2,"sincodaf"
          DISPLAY   *P56:24,"Opening sinitmaf";
          OPEN      SINITMA1,"sinitmaf"
          DISPLAY   *P56:24,"Opening sinitmaf";
          OPEN      SINITMA2,"sinitmaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA1,"sinperaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
          DISPLAY   *P56:24,"Opening sinprqaf";
          OPEN      SINPRQA1,"sinprqaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA1,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA2,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA3,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA4,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA1,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA2,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA3,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA1,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA2,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA3,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsubaf";
          OPEN      SINSUBA1,"sinsubaf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA1,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA2,"sinwaraf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Import Requisition Details         
          ENDIF
          RETURN
.--------------------------------
. Screen - Import Requisition Details         
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      " 4",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      SETUP000
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Import Requisition Details         
.-------------------------------------------------------
CF00L000
          MOVE      SP70,FILENAME
          MOVE      SP70,CPCDATE 
          MOVE      ZERO,CNTRLTOT
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Import Requisition Details         
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Import Requisition Details         
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Import Requisition Details         
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Import Requisition Details         
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Import Requisition Details         
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L101,PS00L102,PS00L999:
                            PS00L103,PS00L999
          GOTO     PS00L999
.
PS00L101
          MOVE      FILENAME,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      CPCDATE,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      CNTRLTOT,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Import Requisition Details         
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L104,SF00L105
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L101,SF00L102,SF00L020:
                            SF00L104,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KFILE000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L101
            ENDIF
            BRANCH    EXIT,SF00L101,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FILENAME,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L102
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KREQD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L102
            ENDIF
            BRANCH    EXIT,SF00L102,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      CPCDATE,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L103
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L104
          CALL     SELECTED
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,CNTRLTOT
          IF        SCPSMAN=1
            COMPARE   ZERO,CNTRLTOT
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
          ENDIF
          MOVE      CNTRLTOT,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L105
          CALL      PROC0000
          MOVE      ZERO,EXIT
          GOTO      SF00L999
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------------------------------------
. Setup Parameters
.----------------------------------------------------------------------
SETUP000  MOVE      ZERO,CKEYTYP
          MOVE      ZERO,FILFOUND
          MOVE      ONE,ACCEPT
.
SETUP999  RETURN
.----------------------------------------------------------------------
. Keyin import File Name
.----------------------------------------------------------------------
KFILE000
          STRIP     FILENAME
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,FILENAME
          PACK      FILENAME,FILENAME,SP70
          MATCH     SP70,FILENAME
          GOTO      KFILE950 IF EQUAL
          MATCH     EXITCHAR,FILENAME
          GOTO      KFILE950 IF EQUAL
.
          MOVE      FILENAME,FILNAMSV
.
. ------- Look for File in Full Path or Current
          STRIP     FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      SINIMFA1,FILENAME
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      KFILE900 IF EQUAL
.
. ------- May require extension separated by a "/"
          REP       "./",FILENAME
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      SINIMFA1,FILENAME
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      KFILE900 IF EQUAL
.
          MOVE      "Unable to Open File. ",DISPMSG
          CALL      MESSAGE1
          GOTO      KFILE0000
.
KFILE900  MOVE      ZERO,EXIT          * return to prompt
          MOVE      TRUE,FILFOUND
          GOTO      KFILE9999
.
KFILE950  MOVE      TWO,EXIT           * Abort Screen
.
KFILE999  RETURN
.----------------------------------------------------------------------
. Keyin Requisition Date
.----------------------------------------------------------------------
KREQD000  PACK      REQDATE,CCC,CYY,CMM,CDD,SP70
          REP       " 0",REQDATE
          UNPACK    REQDATE,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          BRANCH    OVRCD,KREQD000
.
          PACK      REQDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *PCCOL:CVERT,*V2LON,CPCDATE
          MOVE      CPCDATE,REQDAT10
          MOVE      ZERO,EXIT
.
KREQD999  RETURN

.----------------------------------------------------------------------
. Process Requisitions
.----------------------------------------------------------------------
PROC0000  MOVE      FALSE,BADLOAD
          CALL      KILL0000                * Delete old temp file if exist
          CALL      CREA0000                * Create new temp file
          CALL      LOAD0000                * Load Requisitions
          IF        EXIT=1
            IF        TOTERRS>0
              CALL      UND80
              PRINT     "Total Errors: ",TOTERRS
              CALL      UND80
              PRINT     "End of Error Report"
              CALL      UND80
            ENDIF
            DISPLAY   *P1:24,*B,*EL,"Error Existed in Load. ":
                                    "Fix Errors and Re-Run. ";
            CALL      HITENTER
            GOTO      PROC9999
          ENDIF
.
          CALL      REQS0000                * Create Requisitions (as IBASIN31)
.
          MOVE      "Process Complete.  ",DISPMSG
          CALL      MESSAGE1
.
PROC9999  CALL      KILL0000
          RETURN
.----------------------------------------------------------------------
. Delete Old Temp File
.----------------------------------------------------------------------
KILL0000  PACK      SINIMFNM,SINIMFAA,PORT
          REP       " 0",SINIMFNM
          CLOSE     SINIMFB1
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    SINIMFNM,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
KILL9999  RETURN
.----------------------------------------------------------------------
. Create New Temp File
.----------------------------------------------------------------------
CREA0000  CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    SINIMFNM,CMDLINE
          APPEND    " 85 UC10-14,15-64,70-76,65-69,1-1",CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      SINIMFB1,SINIMFNM
.
CREA9999  RETURN
.----------------------------------------------------------------------
. Load Requisitons from text file in temp ifile
.----------------------------------------------------------------------
LOAD0000  MOVE      "99",CLNO
          MOVE      ZERO,OVRCD
          MOVE      ZERO,TOTERRS
          MOVE      ZERO,COUNT
          MOVE      ZERO,CHECKTOT
LOAD1000  CALL      RKSIMF1C             * Read through text file
          BRANCH    OVRCD,LOAD9000
          ADD       ONE,COUNT            * Record Count
.
. ------- Check if Format is incorrect for current record
          IF        EXIT=1
            CLEAR     DISPMSG
            MOVE      COUNT,KEY5
            SQUEEZE   KEY5
            APPEND    "Invalid File Format. Line ",DISPMSG
            APPEND    KEY5,DISPMSG
            APPEND    ". ",DISPMSG
            CALL      PLINE000
            GOTO      LOAD9999
          ENDIF
.
. ------- Check If Dates Match
          MATCH     SIMFDATC,REQDATE
          IF        !@EQUAL
            CLEAR     DISPMSG
            MOVE      COUNT,KEY5
            SQUEEZE   KEY5
            APPEND    "Incorrect Date of Requisition. Line ",DISPMSG
            APPEND    KEY5,DISPMSG
            APPEND    ". ",DISPMSG
            CALL      PLINE000
          ENDIF
.
. ------- Check if all codes loaded are valid
          CALL      CCODS000                * Check Codes
.
. ------- IF a Valid Record Read
.
          IF        BADLOAD=0
            PACK      KEY68,SIMFCSTC,SIMFDELC,SIMFCATC,SIMFWARC,SIMFTYPC,SP70
            CALL      RASIMF1
            IF        OVRCD=1
              MOVE      SIMFTYPC,SIMFTYP
              MOVE      SIMFDATC,SIMFDAT
              MOVE      SIMFCSTC,SIMFCST
              MOVE      SIMFDELC,SIMFDEL
              MOVE      SIMFWARC,SIMFWAR
              MOVE      SIMFCATC,SIMFCAT
              MOVE      SIMFQTYC,SIMFQTY
              CALL      WRSIMF1
            ELSE
              CALL      RDSIMF1
              ADD       SIMFQTYC,SIMFQTY
              CALL      UPSIMF1
            ENDIF
          ENDIF
          ADD       SIMFQTYC,CHECKTOT
          GOTO      LOAD1000
.
. ------- Check if Control Total equals actual
LOAD9000  IF        CNTRLTOT<>CHECKTOT
            MOVE      "Control Totals Do Not Match. ",DISPMSG
            CALL      PLINE000            * Print the error
          ENDIF
.
LOAD9999  MOVE      BADLOAD,EXIT
          RETURN
.------------------------------------------------------------
. Pack up error for codes
.------------------------------------------------------------
CODERR00  STRIP     ERRORMSG
          CLEAR     DISPMSG
          MOVE      COUNT,KEY5
          SQUEEZE   KEY5
          APPEND    "Invalid ",DISPMSG
          APPEND    ERRORMSG,DISPMSG
          APPEND    " Code. Line ",DISPMSG
          APPEND    KEY5,DISPMSG
          APPEND    ". ",DISPMSG
          CALL      PLINE000              * Print Message Routine
.
CODERR99  RETURN
.------------------------------------------------------------
. Print a Line
.------------------------------------------------------------
PLINE000  IF        CLNO>56
            CALL      HEAD80
            PRINT     "Error Report"
            ADD       ONE,CLNO
            CALL      UND80
          ENDIF
.
          PRINT     DISPMSG
          ADD       ONE,CLNO
          ADD       ONE,TOTERRS
          MOVE      ONE,BADLOAD
.
PLINE999  RETURN
.------------------------------------------------------------
. Display Message on Line 24
.------------------------------------------------------------
MESSAG00  GETVAR    LINE24,ATTR24,1,24
          RESET     DISPMSG
          STRIP     DISPMSG
          ENDSET    DISPMSG
          APPEND    SP1,DISPMSG
          RESET     DISPMSG
          DISPLAY   *P1:24,*EL,*+,DISPMSG;
          KEYIN     "Hit <",*V2LON,"ENTER",*HOFF,"> to continue, e":
                    *V2LON,"X",*HOFF,"it",*EOFF,ANS,*P1:24,*EL;
          PUTVAR    LINE24,ATTR24,1,24
          REP       "xX",ANS
          MATCH     ANSX,ANS
          GOTO      MESSAG90 IF EQUAL
.
          MOVE      ZERO,EXIT
          GOTO      MESSAG99
.
MESSAG90  MOVE      ONE,EXIT
.
MESSAG99  RETURN
.----------------------------------------------------------------------
. Check Codes
.----------------------------------------------------------------------
. ------- Check Catalog Code File
CCODS000  MOVE     ZERO,SIIANON
          PACK     KEY7,SIMFCATC,SP70
          CALL     RDSIIA1
          IF       OVRCD=1 | SIIANON=1
            MOVE     "Catalog    ",ERRORMSG
            CALL     CODERR00
          ENDIF
.
. ------- Check Cost Centre File
          PACK     KEY5,SIMFCSTC,SP70
          CALL     RDSICA1
          IF       OVRCD=1
            MOVE     "Cost Centre",ERRORMSG
            CALL     CODERR00
          ENDIF
.
. ------- Check Warehouse File
          PACK     KEY5,SIMFWARC,SP70
          CALL     RDSIWA1
          IF       OVRCD=1
            MOVE     "Warehouse  ",ERRORMSG
            CALL     CODERR00
          ENDIF
.
. ------- Check Catalog/Warehouse File
          PACK     KEY12,SIMFCATC,SIMFWARC,SP70
          CALL     RDSIIE1
          IF       OVRCD=1
            MOVE     "Catalog/War",ERRORMSG
            CALL     CODERR00
          ENDIF
.
. ------- Check Codes File
          MOVE     "RT ",KEY3
          PACK     KEY6,KEY3,SIMFTYPC,SP70
          CALL     RDSICD1
          IF       OVRCD=1
            MOVE     "Record Type",ERRORMSG
            CALL     CODERR00
          ENDIF
.
CCODS999  RETURN
.----------------------------------------------------------------------
. Load Requisitions into SIN requisition files as if in IBASIN31
.----------------------------------------------------------------------
REQS0000  PACK      KEY68,SP70
          PACK      CHECK55,SP70
          MOVE      ZERO,PCSTREQ
          MOVE      ZERO,PCSTBAC
          MOVE      ZERO,PCSTISS
          MOVE      ZERO,PGRANREQ
          MOVE      ZERO,PGRANBAC
          MOVE      ZERO,PGRANISS
          MOVE      "99",CLNO
          CALL      RSSIMF1
.
REQS1000  CALL      RKSIMF1
          BRANCH    OVRCD,REQS9000
.
          MATCH     CHECK55,SP70
          IF        @EQUAL
            PACK      CHECK55,SIMFCST,SIMFDEL
            CALL      HEAD0000
            CALL      GETREQ00               * Get Next Valid Req. Number
          ENDIF
.
          PACK      KEY55,SIMFCST,SIMFDEL
          MATCH     CHECK55,KEY55
          IF        !@EQUAL
            CALL      CSTTOT00               * Cost Centre Total
            CALL      HEAD0000
            PACK      CHECK55,SIMFCST,SIMFDEL
            CALL      GETREQ00               * Allocate Next Valid Req. Number
          ENDIF
.
          CALL      PITEM000                 * Write Req. & Print Item
          GOTO      REQS1000
.
REQS9000  IF        PCSTREQ > 0
            CALL      CSTTOT00               * Cost Centre Total
          ELSE
            CALL      UND132
          ENDIF
          CALL      GRNTOT00                 * Grand Total
.
REQS9999  RETURN
.----------------------------------------------------------------------
. Write and Print Item
.----------------------------------------------------------------------
PITEM000  PACK      KEY20,SIMFTYP,SIRAREQ,SIMFWAR,SIMFCAT,SP70
          CALL      RASIRB1
          IF        OVRCD=0
            MOVE      "Invalid Record in Requisition Details File - ",DISPMSG
            CALL      MESSAGE1
            GOTO      PITEM999
          ENDIF
.
          CALL      POST0000                * Post All Details (BO's & set SOO &
.                                           * SOH & Update Req Files and item
.                                           * History & Header Tot
          IF        CLNO>57
            CALL      HEAD0000
          ENDIF
.
. ------- Print Line
          IF        HBACK=0
            MOVE      ZERO,SIBAQTY
          ENDIF
          PRINT     *001,SIRACST:
                    *009,SIRBTYP,SIRBREQ:
                    *019,SIRBCAT:
                    *028,SIRBWAR:
                    *035,SIMFDEL:
                    *085,SIRBRQT:
                    *103,SIBAQTY:
                    *117,SIRBIQT
          ADD       ONE,CLNO
.
          ADD       SIRBRQT,PCSTREQ
          ADD       SIRBIQT,PCSTISS
          IF        HBACK=1
            ADD       SIBAQTY,PCSTBAC
          ENDIF
.                                           * SOH & Issued & Usage etc
.
PITEM999  RETURN
.----------------------------------------------------------------------
. Header of Report
.----------------------------------------------------------------------
HEAD0000  CALL      HEAD132
          PRINT     *N
          PRINT     "Requsitions for Date: ",REQDAT10
          CALL      UND132
          PRINT     *001,"Cost    ":
                    *009,"Requis'n  ":
                    *019,"         ":
                    *028,"Ware-  ":
                    *035,SP20,SP20,SP10,SP2:
                    *085,"               ":
                    *101,"               ":
                    *117,"               "
.
          PRINT     *001,"Centre  ":
                    *009,"Number  ":
                    *019,"Catalog  ":
                    *028,"House  ":
                    *035,"Delivery Details",SP20,SP10,SP6:
                    *085,"   Qty Required":
                    *101,"Qty Backordered":
                    *117,"     Qty Issued"
          CALL      UND132
          MOVE      "08",CLNO
.
HEAD9999  RETURN
.----------------------------------------------------------------------
. Print Cost Centre Total
.----------------------------------------------------------------------
CSTTOT00  CALL      UND132
          UNPACK    CHECK55,KEY5,KEY50
          PRINT     *014,"Totals for Cost Centre: ",KEY5,SP1,KEY50:
                    *085,PCSTREQ,*101,PCSTBAC,*117,PCSTISS
          CALL      UND132
.
          CALL      UPSIRA1     * Updating SIRATOT along the way
          CALL      UUSIRA1
          ADD       PCSTREQ,PGRANREQ
          ADD       PCSTBAC,PGRANBAC
          ADD       PCSTISS,PGRANISS
          MOVE      ZERO,PCSTBAC
          MOVE      ZERO,PCSTISS
          MOVE      ZERO,PCSTREQ
.
CSTTOT99  RETURN
.----------------------------------------------------------------------
. Print Grand Total
.----------------------------------------------------------------------
GRNTOT00  PRINT     *054,"Grand Totals":
                    *085,PGRANREQ,*101,PGRANBAC,*117,PGRANISS
          CALL      UND132
          PRINT     "End of Report"
          CALL      UND132
.
GRNTOT99  RETURN
.----------------------------------------------------------------------
. Get Next Valid Req. Number
.----------------------------------------------------------------------
GETREQ00  PACK      KEY8,SIMFTYP,Z20
          MOVE      ZERO,FORM7
          CALL      RSSIRA1
          CALL      RPSIRA1
          MATCH     "1",SIRATYP
          IF        OVRCD=1 | !@EQUAL
            MOVE      ONE,FORM7
          ELSE
            MOVE      SIRAREQ,FORM7
            ADD       ONE,FORM7
          ENDIF
.
          MOVE      SIMFTYP,SIRATYP
          MOVE      FORM7,SIRAREQ
          MOVE      "0",SIRAIND
          MOVE      SIMFCST,SIRACST
          MOVE      SIMFDAT,SIRADAT
          MOVE      SIMFDEL,SIRADEL
          MOVE      ZERO,SIRATOT             * Update Later
          PACK      SIRASPA,SP70
.
GETREQ10  PACK      KEY8,SIRATYP,SIRAREQ,SP70
          CALL      RASIRA1
          IF        OVRCD=0 | OVRCD=2
            ADD       ONE,FORM7
            MOVE      FORM7,SIRAREQ
            GOTO      GETREQ10
          ENDIF
.
          DISPLAY    *P1:24,*EL,"Posting Requisition : "
.
          CALL      WRSIRA1
          CALL      RLSIRA1
          MOVE      ZERO,SECTOR
.
GETREQ99  RETURN
.----------------------------------------------------------------------
. Create and Set Details as Required
.----------------------------------------------------------------------
POST0000  MOVE      SIRATYP,SIRBTYP
          MOVE      SIRAREQ,SIRBREQ
          MOVE      SIMFWAR,SIRBWAR
          MOVE      SIMFCAT,SIRBCAT
          MOVE      SIMFQTY,SIRBRQT
          PACK      SIRBDAT,SP70
          PACK      SIRBBCH,SP70
          PACK      SIRBLED,SP70
          PACK      SIRBACC,SP70
          PACK      SIRBSPA,SP70
.
          ADD        ONE,SECTOR
          DISPLAY    *P23:24,*V2LON,SIRAREQ,*HOFF,"/",*V2LON,SECTOR
.
. Lock Catalog/Warehouse Record
.
POST1000  PACK       KEY12,SIRBCAT,SIRBWAR
          CALL       RLSIIE1   * Lock
          BRANCH     OVRCD,POST5000,POST4000
.
          CALL       SISIWK1   * check if stocktake in progress
          COMPARE    ZERO,OVRCD
          GOTO       POST4100 IF EQUAL
.
          PACK       KEY7,SIRBCAT
          CALL       RDSIIA1   * Read Catalog File
          BRANCH     OVRCD,POST5000
.
          CALL      UPSOH000  * Update Stock on Hand & Backorders if Required
          CALL      UPPIC000  * Update Picking Sheet Details
          ASSIGN    SIIAAVC*SIRBIQT,SIRBAMT
          CALL      WRSIRB1   * Write Requisition Details
          CALL      UPITM000  * Update Item History
.
          PACK      KEY5,SIRACST
          CALL      RDSICA1   * Read Cost Centre
          MOVE      SIRBAMT,SIUSCST
          MOVE      SIRBIQT,SIUSQTY
          CALL      SINUSAGE  * Update Usage
.
          ADD       SIUSCST,SIRATOT      * Total issued cost
          CALL      UUSIIE1   * Unlock
          GOTO      POST9999
.
POST4000  MOVE      ZERO,COUNT
          REPEAT
            ADD       ONE,COUNT
            DISPLAY   *P1:24,*W
            PACK      KEY12,SIRBCAT,SIRBWAR
            CALL      RLSIIE1
          UNTIL     (OVRCD=0)|(COUNT=5)
.
          COMPARE   ZERO,OVRCD
          GOTO      POST1000 IF EQUAL
          BEEP
          DISPLAY   *P1:24,*EL,"Catalog/Warehouse Locked : ":
                    *V2LON,SIRBCAT,*HOFF,"/",*V2LON,SIRBWAR,*HOFF:
                    " - Hit <Enter> to Retry ";
          KEYIN     ANS
          DISPLAY   *P1:24,*EL,"Posting Requisition : "
          DISPLAY   *P23:24,*V2LON,SIRAREQ,*HOFF,"/",*V2LON,SECTOR
          GOTO      POST1000
.
POST4100  DISPLAY   *P1:24,*EL,"Catalog/Warehouse Deleted. STOCKTAKE : ":
                    *V2LON,SIRBCAT,*HOFF,"/",*V2LON,SIRBWAR,*HOFF;
          CALL      HITENTER
          DISPLAY   *P1:24,*EL,"Posting Requisition : "
          DISPLAY   *P23:24,*V2LON,SIRAREQ,*HOFF,"/",*V2LON,SECTOR
          GOTO      POST9999
.
POST5000  DISPLAY   *P1:24,*EL,"Catalog/Warehouse Deleted : ":
                    *V2LON,SIRBCAT,*HOFF,"/",*V2LON,SIRBWAR,*HOFF;
          CALL      HITENTER
          DISPLAY   *P1:24,*EL,"Posting Requisition : "
          DISPLAY   *P23:24,*V2LON,SIRAREQ,*HOFF,"/",*V2LON,SECTOR
          GOTO      POST9999
.
POST9999  RETURN
.--------------------------------------------
. Update Stock on hand and Backorder File
.--------------------------------------------
UPSOH000  MOVE      SIRBWAR,KEY5
          CALL      RDSIWA1
.
. Requisition Input Before Picking.
.
          IF        SIIESOH<SIRBRQT
            MOVE      SIIESOH,SIRBIQT
            MOVE      ZERO,SIIESOH
          ELSE
            MOVE      SIRBRQT,SIRBIQT
            SUB       SIRBIQT,SIIESOH
          ENDIF
.
UPSOH600  CALL      UPSIIE1
          MOVE      ZERO,SIBAQTY
          IF        SIRBIQT<SIRBRQT
            CALL      UPBAC000
          ENDIF
          GOTO      UPSOH999
UPSOH999  RETURN
.-----------------------------------
. Update Backorder File
.-----------------------------------
UPBAC000  MOVE      ZERO,SIBAQTY
.
          READ      CONTROLF,TWENTY3;*120,HBACK
          COMPARE   ONE,HBACK
          GOTO      UPBAC999 IF NOT EQUAL
.
          MOVE      SIRACST,SIBACST
          PACK      SIBAREQ,SIRATYP,SIRAREQ
          MOVE      SIRBCAT,SIBACAT
          MOVE      SIRBWAR,SIBAWAR
          PACK      KEY25,SIBACST,SIBACAT,SIBAREQ,SIBAWAR
          CALL      RDSIBA1
          IF        OVRCD=0
            MOVE      TWO,AUDTTYPE
            CALL      WASIBA00                 * Before Audit Change
            ASSIGN    SIBAQTY+SIRBRQT-SIRBIQT,SIBAQTY
            CALL      UPSIBA1
            MOVE      THREE,AUDTTYPE
            CALL      WASIBA00                 * After Audit Change
          ELSE
            ASSIGN    SIRBRQT-SIRBIQT,SIBAQTY
            MOVE      SIRADAT,SIBADAT
            MOVE      SP70,SIBARESI
            CALL      WRSIBA1
            MOVE      ONE,AUDTTYPE
            CALL      WASIBA00                 * Audit Added
          ENDIF
UPBAC999  RETURN
.-----------------------------------
. Update Picking Sheets File
.-----------------------------------
UPPIC000  MOVE      SIRBWAR,SIPRWAR  * Warehouse
          MOVE      SIRACST,SIPRCST  * Cost Centre
          MOVE      SIRADEL,SIPRDEL  * Delivery Details
          MOVE      SIIERAS,SIPRRAC  * Rack&Shelf
          MOVE      SIRBCAT,SIPRCAT  * Catalog
          MOVE      SIRATYP,SIPRTYP  * Req Type
          MOVE      SIRAREQ,SIPRREQ  * Req No
UPPIC100
          PACK     KEY83,SIPRWAR,SIPRCST,SIPRDEL,SIPRRAC,SIPRCAT,SIPRTYP,SIPRREQ
          CALL      RDSIPR1
          BRANCH    OVRCD,UPPIC500
          MATCH     SP70,SIPRPFL
          GOTO      UPPIC400 IF EQUAL
.
. Can't update a picking sheet record if it has already been printed.
.
          MATCH     SP70,SIPRDEL
          IF        @EQUAL
            MOVE      "Part 2",SIPRDEL
            GOTO      UPPIC100
          ENDIF
          ENDSET    SIPRDEL
          APPEND    " - 2",SIPRDEL
          RESET     SIPRDEL
          GOTO      UPPIC100 * If all that doesn't work there is a problem.
.
UPPIC400  ADD       SIRBIQT,SIPRAQT  * Quantity to Issue
          ADD       SIRBRQT,SIPRRQT  * Quantity Requisted
          MOVE      SIBAQTY,SIPRBQT
          MOVE      SP70,SIPRPFL     * Print Flag
          MOVE      SP70,SIPRSPA
          CALL      UPSIPR1
          GOTO      UPPIC999
.
UPPIC500  MOVE      SIRBIQT,SIPRAQT  * Quantity to Issue
          MOVE      SIRBRQT,SIPRRQT  * Quantity Requisted
          MOVE      SIBAQTY,SIPRBQT
          MOVE      SP70,SIPRPFL     * Print Flag
          MOVE      SP70,SIPRSPA
          CALL      WRSIPR1
.
UPPIC999  RETURN
.-----------------------------------
. Update Item History
.-----------------------------------
UPITM000  MOVE      SIRADAT,SIPEDATE
          CALL      RSIPE000                       * Get Usage Period
          PACK      SIITPER,SIPEYEAR,SIPEPER,SP70
.
          MOVE      SIRBWAR,SIITWAR                * Warehouse
          MOVE      SIRBCAT,SIITCAT                * Catalog
          ASSIGN    SIRBIQT*SEQ,SIITQTY            * Quantity
          ASSIGN    SEQ*SIRBIQT*SIIAAVC,SIITAMT
          MOVE      SIRACST,SIITCST                * Cost Centre
          PACK      SIITREQ,SIRATYP,SIRAREQ
          MOVE      "5",SIITTYP                    * Requisition
          MOVE      SP70,SIITPUR
          MOVE      SP70,SIITREF
          MOVE      SIIESOH,SIITSOH                * Stock on Hand
          MOVE      SP70,SIITSPA
.
          MOVE      PRGID,SIITPRG
          MOVE      PORT,SIITPOR
          MOVE      PASSCODE,SIITOPR
          PACK      SIITDAT,CCC,CYY,CMM,CDD
          REP       " 0",SIITDAT
          REPEAT
            CLOCK     TIME,SIITTIM
            PACK      KEY28,SIITWAR,SIITCAT,SIITDAT,SIITTIM,SP70
            CALL      RASIIT1
          UNTIL     OVRCD=1
          CALL      WRSIIT1
          RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       SINBACIO/INC
          INC       SINCCAIO/INC
          INC       SINCCBIO/INC
          INC       SINCCEIO/INC
          INC       SINCCFIO/INC
          INC       SINCCHIO/INC
          INC       SINCGBIO/INC
          INC       SINCIAIO/INC
          INC       SINCIEIO/INC
          INC       SINCIHIO/INC
          INC       SINCIIIO/INC
          INC       SINCODIO/INC
          INC       SINIMFIO/INC
          INC       SINITMIO/INC
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINPRQIO/INC
          INC       SINREAIO/INC
          INC       SINREBIO/INC
          INC       SINSUAIO/INC
          INC       SINSUBIO/INC
          INC       SINUSAGE    
          INC       SINWARIO/INC
          INC       SINWRKCD    
          INC       SINWRKIO/INC
.
          INC       STDGENCD
.
