.***************************************************************************
.* System    :   Emergency                                                 *
.* Program   :   IBAEMR98                                                  *
.* Desc      :   System Parameter Maintenance                              *
.***************************************************************************
.* Date      :   06/11/1997                                                *
.* Author    :   Steve Armstrong                                           *
.* Function  :   This program allows maintenance on system parameters.     *
.* Mods      :                                                             *
.*        V9.04.01  01/06/2005  Peter Vela    CAR 60166                    *
.*                  Recompiled for EMRCONFD                                *
.*        V9.03.03  27/04/2004  Ebon Clements CAR 48865                    *
.*                  Added EMCNLDAT - V9 emergency go live date             *
.*        V9.03.02  28/08/2003  Ebon Clements CAR                          *
.*                  Added EMCNDDTM to IBA Controlled screen                *
.*        V9.03.01  15/05/2003  Lina Vo  CAR 38501                         *
.*                  Added EMCNDOCT to IBA Controlled screen                *
.*        V9.02.02  09/01/2002  Davin                                      *
.*                  Added EMCNDGAE, EMCNDGEC & EMCNDGCE for broadcast APIs *
.*                  Added new submenu screen for IBA screens               *
.*        V9.02.01   20/12/2001  Bronko sosic                              *
.*                   Mods to include new cat code of ex                    *
.*        V9.00.B01  21/06/2001  Tonii  2001/2002 mods                     *
.*                   Mods to include default for the 2 new parameters      *
.*                   EMCNUDXC and EMCNUDXD                                 *
.*                   Added second VEMD extraction Screen to accommodate    *
.***************************************************************************
.*               V5.07.01  23/12/1998  Nicole Harrington                   *
.*               Mods to add parameter to default desc of injury event to  * 
.*               complaint field                                           *
.***************************************************************************
.
          INC       STD001FD
.
          INC       EMRCONFD/INC
          INC       PATCODFD/INC
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ARRAY     DIM       2[18]
ARRAY2    DIM       2[2]
BOXHDR    DIM       20
CAPTDESC  DIM       13                 * caption description
CAPTION   FORM      1                  * screen caption number (1-5)
CATDES01  DIM       20
CATDES02  DIM       20
CATDES03  DIM       20
CATDES04  DIM       20
CATDES05  DIM       20
CATDES06  DIM       20
CATDES07  DIM       20
CATDES08  DIM       20
CATDES09  DIM       20
CATDES10  DIM       20
CATDES11  DIM       20
CATDES12  DIM       20
CATDES13  DIM       20
CATDES14  DIM       20
CATDES15  DIM       20
CATDES16  DIM       20
CATDES17  DIM       20
CATDES18  DIM       20
CATDES19  DIM       20
CATDES20  DIM       20
CATDES21  DIM       20
CATDES22  DIM       20
CATDES23  DIM       20
CATDES24  DIM       20
CATDES25  DIM       20
CATDES26  DIM       20
CATDES27  DIM       20
CATDES28  DIM       20
CATDES29  DIM       20
CATDES30  DIM       20
CATDES31  DIM       20
CATEGORY  DIM       2
COUNTR    FORM      2
CSPASSWD  DIM       8
DANS1     DIM       20
DANS2     DIM       20
DANS3     DIM       20
DIM10     DIM       10 
LIVEDATE  DIM       10
FORM8     FORM      8
IBAOPT    FORM      1
PASS      DIM       8
REPFLAG   FORM      1
VEMDSCRF  FORM      1       * VEMD screen number flag
.
.
. PROGRAM CONSTANTS
. -----------------
CATA1     INIT      "A1"
CATA2     INIT      "A2"
CATA3     INIT      "A3"
CATA4     INIT      "A4"
CATA5     INIT      "A5"
CATA6     INIT      "A6"
CATA7     INIT      "A7"
CATA8     INIT      "A8"
CATEA     INIT      "ea"
CATEB     INIT      "eb"
CATEC     INIT      "ec"
CATED     INIT      "ed"
CATEE     INIT      "ee"
CATEF     INIT      "ef"
CATEG     INIT      "eg"
CATEH     INIT      "eh"
CATEI     INIT      "ei"
CATEJ     INIT      "ej"
CATEK     INIT      "ek"
CATEL     INIT      "el"
CATEM     INIT      "em"
CATEN     INIT      "en"
CATEO     INIT      "eo"
CATEP     INIT      "ep"
CATEQ     INIT      "eq"
CATER     INIT      "er"
CATES     INIT      "es"
CATET     INIT      "et"
CATEU     INIT      "eu"
CATEV     INIT      "ev"
CATEX     INIT      "ex"
DESC1     INIT      "VEMD"
DESC2     INIT      "NSW"
SCREEN1   INIT      "Audits"
SCREEN2   INIT      "User Screen 1"
SCREEN3   INIT      "User Screen 2"
SCREEN4   INIT      "IBA Screens"
SCREEN51  INIT      "VEMD Mapping Screen 1"
SCREEN52  INIT      "VEMD Mapping Screen 2"
.
PRGID     INIT      "IBAEMR98"
PRGNAM    INIT      "System Parameter Maintenance"
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
.
          BRANCH    COPTION,ML1000:        * audits
                            ML2000:        * user screen 1
                            ML3000:        * user screen 2
                            ML4000:        * iba screens
                            ML5000:        * mapping screen
                            ML6000         * mapping screen 2
.
ML1000
          GOTO      ML0100
.
.         User screen 1
.
ML2000    CALL      SCU10000               * display user screen 1 background
          CALL      DSU10000               * display user screen 1 details
          CALL      SLU10000               * select item, post, cancel
          BRANCH    EXIT,ML0100            * cancel selected
          CALL      WRU10000               * post selected
          GOTO      ML0100
.
.         User screen 2
.
ML3000
          GOTO      ML0100
.
.         IBA Screens
.
ML4000    CALL      IBASECUR               * keyin security passwd
          BRANCH    EXIT,ML0100            * invalid - no access
.
ML4100    CALL      SUBM0000               * sub menu for iba screen selection
          BRANCH    EXIT,ML4500,ML4600
          GOTO      ML0100
.
.         IBA Screen 1
.
ML4500    CALL      SCI10000               * display iba screen 1 background
          CALL      DSI10000               * display iba screen 1 details
          CALL      SLI10000               * select item, post, cancel
          BRANCH    EXIT,ML4100            * cancel selected
          CALL      WRI10000               * post selected
          GOTO      ML4100
.
.         Interface Engine set up
.
ML4600    CALL      SCII0000               * display screen background
          CALL      DSII0000               * display screen details
          CALL      SLII0000               * select item, post, cancel
          BRANCH    EXIT,ML4100            * cancel selected
          CALL      WRII0000               * post selected
          GOTO      ML4100
.
.         Mapping Screen
.
ML5000    MOVE      ONE,VEMDSCRF
          CALL      SCRM0000
          CALL      LOAD0000               * load & display current values
          BRANCH    EXIT,ML0100            * exitchar selected
          CALL      SELC0000               * select and modify field
          BRANCH    EXIT,ML0100            * cancel selected
.
          CALL      WMAP0000               * write mapping details
          GOTO      ML0100
.
ML6000    MOVE      TWO,VEMDSCRF
          CALL      SCRM0000
          CALL      LOAD0000
          BRANCH    EXIT,ML0100            * exitchar selected
          CALL      SELC0000               * select and modify field
          BRANCH    EXIT,ML0100            * cancel selected
.
          CALL      WMAP0000               * write mapping details
          GOTO      ML0100
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          CALL      GDES0000                  * get category descriptions
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Run clean up                           *
.*                        TRUE  (1)  Exit option selected                   *
.****************************************************************************
.
OPTN0000  MOVE      ZERO,REPFLAG
          HLINE     *G37,2,55,80
          DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Audits":
                    *P1:6,*V2LON,TWO,*HOFF,". User Controlled Screen 1":
                    *P1:7,*V2LON,THREE,*HOFF,". User Controlled Screen 2":
                    *P1:8,*V2LON,FOUR,*HOFF,". I.B.A. Controlled Screens"
          MOVE      TEN,CVERT
.
          READ      CONTROLF,EIGHTY9;*97,EMCNEXTR
          IF        EMCNEXTR > 0
            ADD       TWO,CVERT
            IF        EMCNEXTR = 1
              DISPLAY   *P1:9,*V2LON,FIVE,*HOFF,". VEMD Mapping Screen"
              DISPLAY   *P1:10,*V2LON,SIX,*HOFF,". VEMD Mapping Screen 2"
            ELSE
              DISPLAY   *P1:9,*V2LON,FIVE,*HOFF,". NSW Mapping Screen"
            ENDIF
          ENDIF
.
OPTN0500  KEYIN     *P1:CVERT,*EL,"Select Option : ":
                    *P17:CVERT,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN8100:            * audits
                            OPTN8200:            * user screen 1
                            OPTN8300:            * user screen 1
                            OPTN8400:            * iba screens
                            OPTN8500:            * mapping screen
                            OPTN8600             * mapping screen 2
.
OPTN1000  BEEP                                   * invalid
          GOTO      OPTN0500
.
OPTN8100  DISPLAY   *P55:2,*V2LON,SP1,SCREEN1,SP1
          GOTO      OPTN9000
.
OPTN8200  DISPLAY   *P55:2,*V2LON,SP1,SCREEN2,SP1
          GOTO      OPTN9000
.
OPTN8300  DISPLAY   *P55:2,*V2LON,SP1,SCREEN3,SP1
          GOTO      OPTN9000
.
OPTN8400  DISPLAY   *P55:2,*V2LON,SP1,SCREEN4,SP1
          GOTO      OPTN9000
.
OPTN8500  COMPARE   EMCNEXTR,ZERO                * extract type set up ?
          GOTO      OPTN1000 IF EQUAL            * no - ignore
.
          DISPLAY   *P55:2,*V2LON,SP1,SCREEN51,SP1
          GOTO      OPTN9000
.
OPTN8600  COMPARE   EMCNEXTR,ZERO                * extract type set up ?
          GOTO      OPTN1000 IF EQUAL            * no - ignore
.
          DISPLAY   *P55:2,*V2LON,SP1,SCREEN52,SP1
          GOTO      OPTN9000
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.****************************************************************************
.*                           SUBM0000                                       *
.*             sub menu for IBA controlled screens                          *
.****************************************************************************
SUBM0000  HLINE     *G37,2,56,80
          DISPLAY   *P55:2,*V2LON,SP1,SCREEN4,SP1,*P1:4,*EF:
                    *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = IBA screen 1":
                    *P1:6,*V2LON,TWO,*HOFF," = Interface Engine Set Up":
                    *P1:9,"Option :"
.
SUBM1000  KEYIN     *P10:9,*EL,*V2LON,IBAOPT
.
          COMPARE   ZERO,IBAOPT
          GOTO      SUBM8000 IF EQUAL
          GOTO      SUBM1000 IF LESS
.
          BRANCH    IBAOPT,SUBM4000,SUBM6000
          BEEP
          GOTO      SUBM1000
.
SUBM4000  DISPLAY   *P55:2,*V2LON,SP1,"IBA Screen 1",SP1,*P1:4,*EF
          MOVE      ONE,EXIT
          GOTO      SUBM9999
.
SUBM6000  DISPLAY   *P55:2,*V2LON,SP1,"Interface Engine",SP1,*P1:4,*EF
          MOVE      TWO,EXIT
          GOTO      SUBM9999
.
SUBM8000  MOVE      ZERO,EXIT
.
SUBM9999  RETURN
+
.**************************************************************************
.*                            SCU10000                 Called by: ML0000  *
.*                Display the background for user screen 1                *
.**************************************************************************
.
SCU10000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,SP1,ONE,*HOFF:
                          ". Number of data input screens used",*P42:4,COLON:
                    *P1:5,*V2LON,SP1,TWO,*HOFF:
                          ". Caption for Screen 1 Option",*P42:5,COLON:
                    *P1:6,*V2LON,SP1,THREE,*HOFF:
                          ". Caption for Screen 2 Option",*P42:6,COLON:
                    *P1:7,*V2LON,SP1,FOUR,*HOFF:
                          ". Caption for Screen 3 Option",*P42:7,COLON:
                    *P1:8,*V2LON,SP1,FIVE,*HOFF:
                          ". Caption for Screen 4 Option",*P42:8,COLON:
                    *P1:9,*V2LON,SP1,SIX,*HOFF:
                          ". Caption for Screen 5 Option",*P42:9,COLON:
                    *P1:10,*V2LON,SP1,SEVEN,*HOFF:
                          ". Timeout for Workbench Refresh (mins)":
                          *P42:10,COLON:
                    *P1:11,*V2LON,SP1,EIGHT,*HOFF:
                          ". Maximum procedures for extraction",*P42:11,COLON:
                    *P1:12,*V2LON,SP1,NINE,*HOFF:
                          ". Maximum diagnoses for extraction",*P42:12,COLON:
                    *P1:13,*V2LON,SP1,TEN,*HOFF:
                         ".Using paticddf or emricdaf file ?   :",*P42:12,COLON:
                    *P1:14,*V2LON,SP1,TEN1,*HOFF:
                           ".Display Desc of Injury Event in ":
                    *P5:15,"Patient Complaint Field (Y/N)?",*P42:15,COLON
.
SCU19999  RETURN
+
.**************************************************************************
.*                            DSU10000                 Called by: ML0000  *
.*                   Display the data for user screen 1                   *
.**************************************************************************
.
DSU10000  READ      CONTROLF,EIGHTY9;*27,EMCNSCRN,*28,EMCNCAP1,*41,EMCNCAP2:
                                     *54,EMCNCAP3,*67,EMCNCAP4,*80,EMCNCAP5:
                                     *93,EMCNTIME,*98,EMCNMAXP,*100,EMCNMAXD:
                                     *138,EMCNICDF,*139,EMCNPCIE
.
          DISPLAY   *P44:4,*V2LON,EMCNSCRN:
                    *P44:5,EMCNCAP1:
                    *P44:6,EMCNCAP2:
                    *P44:7,EMCNCAP3:
                    *P44:8,EMCNCAP4:
                    *P44:9,EMCNCAP5:
                    *P44:10,EMCNTIME:
                    *P44:11,EMCNMAXP:
                    *P44:12,EMCNMAXD 
.
          IF        EMCNICDF=1
             DISPLAY  *P44:13,*EL,*V2LON,"emricdaf"
          ELSE
             DISPLAY  *P44:13,*EL,*V2LON,"paticddf"
          ENDIF
.
          IF        EMCNPCIE=1
            DISPLAY  *P44:15,*EL,*V2LON,"Yes"
          ELSE
            DISPLAY  *P44:15,*EL,*V2LON,"No"
          ENDIF
.
DSU19999  RETURN
+
.**************************************************************************
.*                            SLU10000                 Called by: ML0000  *
.*                 select field to modify or post                         *
.*    Returns:  EXIT    =       (0)  Post was selected.                   *
.*                              (1)  Cancel was selected.                 *
.**************************************************************************
.
SLU10000  CALL      MAINQST                  * Ask for an item, post or cancel
.
          COMPARE   ZERO,CCITEM              * What was entered ?
          GOTO      SLU18000 IF EQUAL        * Post was selected
          GOTO      SLU19000 IF LESS         * Cancel was selected
.
          BRANCH    CCITEM,SLU11000:         * no. of screens
                           SLU11050:         * caption 1
                           SLU11100:         * caption 2
                           SLU11150:         * caption 3
                           SLU11200:         * caption 4
                           SLU11250:         * caption 5
                           SLU11300:         * timeout
                           SLU11350:         * maximum procedures
                           SLU11400:         * maximum diagnoses
                           SLU11450:         * paticddf or emricdaf ?
                           SLU11500          * copy injury event to complaint?
.
          BEEP                               * invalid
          GOTO      SLU10000
.
.         Number of screens for data entry
.
SLU11000  CALL      SCRN0000                     * get number of screens
          GOTO      SLU10000
.
.         Caption for data entry screen 1
.
SLU11050  MOVE      ONE,CAPTION
          CALL      CAPT0000                     * get caption
          GOTO      SLU10000
.
.         Caption for data entry screen 2
.
SLU11100  MOVE      TWO,CAPTION
          CALL      CAPT0000                     * get caption
          GOTO      SLU10000
.
.         Caption for data entry screen 3
.
SLU11150  MOVE      THREE,CAPTION
          CALL      CAPT0000                     * get caption
          GOTO      SLU10000
.
.         Caption for data entry screen 4
.
SLU11200  MOVE      FOUR,CAPTION
          CALL      CAPT0000                     * get caption
          GOTO      SLU10000
.
.         Caption for data entry screen 5
.
SLU11250  MOVE      FIVE,CAPTION
          CALL      CAPT0000                     * get caption
          GOTO      SLU10000
.
.         Workbench Timeout for refresh
.
SLU11300  CALL      TOUT0000                     * get timeout
          GOTO      SLU10000
.
.         Maximum procedures for extraction
.
SLU11350  CALL      MAXP0000                     * get max. # of procedures
          GOTO      SLU10000
.
.         Maximum diagnoses for extraction
.
SLU11400  CALL      MAXD0000                     * get max. # of diagnoses
          GOTO      SLU10000
.
.         Using paticddf or emricdaf for ICD codes
.
SLU11450  CALL      ICDF0000                     * get max. # of diagnoses
          GOTO      SLU10000
.
SLU11500  CALL      PCIE0000                     * get yes/no
          GOTO      SLU10000
.
.         Post was selected. Set the exit flag to tell the calling routine.
.
SLU18000  MOVE      ZERO,EXIT                * Post was selected
          GOTO      SLU19999
.
.         Cancel was selected. Set the exit flag to tell the calling routine.
.
SLU19000  MOVE      ONE,EXIT                 * Cancel was selected
.
SLU19999  RETURN
+
.**************************************************************************
.*                            WRU10000                 Called by: ML0000  *
.*                  Post the data for user screen 1                       *
.**************************************************************************
.
WRU10000  WRITAB    CONTROLF,EIGHTY9;*27,EMCNSCRN,*28,EMCNCAP1,*41,EMCNCAP2:
                                     *54,EMCNCAP3,*67,EMCNCAP4,*80,EMCNCAP5:
                                     *93,EMCNTIME,*98,EMCNMAXP,*100,EMCNMAXD:
                                     *138,EMCNICDF,*139,EMCNPCIE
.
WRU19999  RETURN
+
.**************************************************************************
.*                            SCRN0000                 Called by: SLU10000*
.*                  Keyin the caption for a data entry screen             *
.**************************************************************************
.
SCRN0000  KEYIN     *P44:4,*EL,*V2LON,EMCNSCRN:
                    *P44:4,*DV,EMCNSCRN
.
          IF        EMCNSCRN < 1 | EMCNSCRN > 5
            DISPLAY   *P1:24,*EL,*B,"Number must be between 1 and 5.  ";
            CALL      HITENTER
            GOTO      SCRN0000
          ENDIF
.
          IF        EMCNSCRN < 5
            BRANCH    EMCNSCRN,SCRN1000:
                               SCRN2000:
                               SCRN3000:
                               SCRN4000
          ELSE
            GOTO      SCRN9999
          ENDIF
.
SCRN1000  DISPLAY   *P44:6,*EL
          PACK      EMCNCAP2,SP10,SP3
SCRN2000  DISPLAY   *P44:7,*EL
          PACK      EMCNCAP3,SP10,SP3
SCRN3000  DISPLAY   *P44:8,*EL
          PACK      EMCNCAP4,SP10,SP3
SCRN4000  DISPLAY   *P44:9,*EL
          PACK      EMCNCAP5,SP10,SP3
.
SCRN9999  RETURN
+
.**************************************************************************
.*                            CAPT0000                 Called by: SLU10000*
.*                  Keyin the caption for a data entry screen             *
.**************************************************************************
.
CAPT0000  COMPARE   CAPTION,EMCNSCRN
          IF        @LESS
            DISPLAY   *P1:24,*EL,*B,"Screen not in use.  ";
            CALL      HITENTER
            GOTO      CAPT9999
          ENDIF
.
          ASSIGN    (CAPTION+4),CVERT
          KEYIN     *P44:CVERT,*V2LON,CAPTDESC:
                    *P44:CVERT,*DV,CAPTDESC
.
          STORE     CAPTDESC,CAPTION,EMCNCAP1,EMCNCAP2,EMCNCAP3,EMCNCAP4:
                                     EMCNCAP5
.
CAPT9999  RETURN
+
.**************************************************************************
.*                            TOUT0000                 Called by: SLU10000*
.*                  Keyin the workbench refresh timeout                   *
.**************************************************************************
.
TOUT0000  KEYIN     *P44:10,*EL,*V2LON,EMCNTIME:
                    *P44:10,*DV,EMCNTIME
.
TOUT9999  RETURN
+
.**************************************************************************
.*                            MAXP0000                 Called by: SLU10000*
.*           keyin maximum number of procedures for Extraction            *
.**************************************************************************
.
MAXP0000  KEYIN     *P44:11,*EL,*V2LON,EMCNMAXP:
                    *P44:11,*DV,EMCNMAXP
.
          COMPARE   ZERO,EMCNMAXP
          IF        @LESS
            BEEP
            GOTO    MAXP0000
          ENDIF
.
MAXP9999  RETURN
+
.**************************************************************************
.*                            MAXD0000                 Called by: SLU10000*
.*           keyin maximum number of procedures for Extraction            *
.**************************************************************************
.
MAXD0000  KEYIN     *P44:12,*EL,*V2LON,EMCNMAXD:
                    *P44:12,*DV,EMCNMAXD
.
          COMPARE   ZERO,EMCNMAXD
          IF        @LESS
            BEEP
            GOTO    MAXD0000
          ENDIF
.
MAXD9999  RETURN
+
.**************************************************************************
.*                            ICDF0000                 Called by: SLU10000*
.*           keyin maximum number of procedures for Extraction            *
.**************************************************************************
.
ICDF0000  IF        EMCNICDF=0
             MOVE     ONE,EMCNICDF
             DISPLAY  *P44:13,*EL,*V2LON,"emricdaf"
          ELSE
             MOVE     ZERO,EMCNICDF
             DISPLAY  *P44:13,*EL,*V2LON,"paticddf"
          ENDIF
.
ICDF9999  RETURN
+
.**************************************************************************
.*                            PCIE0000                 Called by: SLU10000*
.*           keyin yes or no to default complaint to injury event         *
.**************************************************************************
.
PCIE0000  IF        EMCNPCIE=0
             MOVE     ONE,EMCNPCIE
             DISPLAY  *P44:15,*EL,*V2LON,"Yes"
          ELSE
             MOVE     ZERO,EMCNPCIE
             DISPLAY  *P44:15,*EL,*V2LON,"No"
          ENDIF
.
PCIE9999  RETURN
+
.**************************************************************************
.*                            SCI10000                 Called by: ML0000  *
.*                Display the background for IBA screen 1                 *
.**************************************************************************
.
SCI10000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,SP1,ONE,*HOFF:
                          ". Type of extract to run",*P42:4,COLON:
                    *P1:5,*V2LON,SP1,TWO,*HOFF:
                          ". Using patdo1af or emrdocaf file ?",*P42:5,COLON:
                    *P1:6,*V2LON,SP1,THREE,*HOFF:
                         ". Entering Doctors Seen Date and Time ?",*P42:6,COLON:
                    *P1:7,*V2LON,SP1,FOUR,*HOFF:
                          ". Go Live Date for V9 Emergency",*P42:7,COLON
.
SCI19999  RETURN
+
.**************************************************************************
.*                            DSI10000                 Called by: ML0000  *
.*                   Display the data for IBA screen 1                    *
.**************************************************************************
.
DSI10000  READ      CONTROLF,EIGHTY9;*97,EMCNEXTR
          READ      CONTROLF,EIGHTY9;*144,EMCNDOCT,*145,EMCNDDTM
          READ      CONTROLF,EIGHTY9;*180,EMCNLDAT
.
          LOAD      DIM10,EMCNEXTR,DESC1,DESC2
          DISPLAY   *P44:4,*V2LON,DIM10
.
          IF        EMCNDOCT=1
             DISPLAY  *P44:5,*EL,*V2LON,"emrdocaf"
          ELSE
             DISPLAY  *P44:5,*EL,*V2LON,"patdo1af"
          ENDIF
.
          MOVE      DNO,DANS1
          LOAD      DANS1,EMCNDDTM,DYES,DNO
          DISPLAY  *P44:6,*EL,*V2LON,DANS1
.
          UNPACK    EMCNLDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,LIVEDATE
          DISPLAY  *P44:7,*EL,*V2LON,LIVEDATE
.
DSI19999  RETURN
+
.**************************************************************************
.*                            SLI10000                 Called by: ML0000  *
.*                 select field to modify or post                         *
.*    Returns:  EXIT    =       (0)  Post was selected.                   *
.*                              (1)  Cancel was selected.                 *
.**************************************************************************
.
SLI10000  CALL      MAINQST                  * Ask for an item, post or cancel
.
          COMPARE   ZERO,CCITEM              * What was entered ?
          GOTO      SLI18000 IF EQUAL        * Post was selected
          GOTO      SLI19000 IF LESS         * Cancel was selected
.
          BRANCH    CCITEM,SLI11000:         * no. of screens
                           SLI11500:         * doctor file
                           SLI11600:         * Entering Doctors Seen Date/Time
                           SLI11700          * Energency V9 Go Live Date
.
          BEEP                               * invalid
          GOTO      SLI10000
.
.         Type of extract for emergency data
.
SLI11000  CALL      EXTR0000                 * get extract type
          GOTO      SLI10000
.
.         Using patdo1af or emrdocaf file ?
.
SLI11500  CALL      DOCT0000                 * get doctor file 
          GOTO      SLI10000
.
.
.         Entering Doctors Seen Date and Time ?
.
SLI11600  MOVE      "44",CCOL
          MOVE      "6",CVERT
          MOVE      EMCNDDTM,ANS
          CALL      KYNQ0000                * Keyin yes/no question
          MOVE      ANS,EMCNDDTM
          GOTO      SLI10000
.
.         Emergency V9 Go Live Date
.
SLI11700  MOVE      "44",CCOL
          MOVE      "7",CVERT
          MOVE      ZERO,CHIGHLT             * Highlight on
          MOVE      CCC,CCENT
          UNPACK    SP20,CYEAR,CMON,CDAY,CDAY
          CALL      KEYDATE
          PACK      EMCNLDAT,CCENT,CYEAR,CMON,CDAY
          GOTO      SLI10000
.
.         Post was selected. Set the exit flag to tell the calling routine.
.
SLI18000  MOVE      ZERO,EXIT                * Post was selected
          GOTO      SLI19999
.
.         Cancel was selected. Set the exit flag to tell the calling routine.
.
SLI19000  MOVE      ONE,EXIT                 * Cancel was selected
.
SLI19999  RETURN
+
.**************************************************************************
.*                            WRI10000                 Called by: ML0000  *
.*                  Post the data for iba screen 1                        *
.**************************************************************************
.
WRI10000  WRITAB    CONTROLF,EIGHTY9;*97,EMCNEXTR,*144,EMCNDOCT,*145,EMCNDDTM:
                                     *180,EMCNLDAT
.
WRI19999  RETURN
+
.**************************************************************************
.*                            EXTR0000                 Called by: ML0000  *
.*                  Get the type of extract being run                     *
.**************************************************************************
.
EXTR0000  DISPLAY   *P1:24,*EL,*V2LON,ZERO,*HOFF," = Not in use, ",*V2LON:
                    ONE,*HOFF," = VEMD, ",*V2LON,TWO,*HOFF," = NSW"
.
          KEYIN     *P44:4,*EL,*V2LON,EMCNEXTR:
                    *P44:4,*DV,EMCNEXTR
.
          IF        EMCNEXTR < 0 | EMCNEXTR > 2
            DISPLAY   *P1:24,*EL,*B,"Must be 0, 1 or 2.  ";
            CALL      HITENTER
            GOTO      EXTR0000
          ENDIF
.
          MOVE      "Not in use",DIM10
          LOAD      DIM10,EMCNEXTR,DESC1,DESC2
          DISPLAY   *P44:4,*EL,*V2LON,DIM10
.
EXTR9999  RETURN
+
.**************************************************************************
.*                            DOCT0000                 Called by: ML0000  *
.*                  Get Using patdo1af or emrdocaf file                   *
.**************************************************************************
.
DOCT0000  DISPLAY   *P1:24,*EL,*V2LON,ZERO,*HOFF," = patdo1af, ",*V2LON:
                    ONE,*HOFF," = emrdocaf "
.
          KEYIN     *P44:5,*EL,*V2LON,EMCNDOCT:
                    *P44:5,*DV,EMCNDOCT
.
          IF        EMCNDOCT < 0 | EMCNDOCT > 1
            DISPLAY   *P1:24,*EL,*B,"Must be 0 or 1.  ";
            CALL      HITENTER
            GOTO      DOCT0000
          ENDIF
.
          IF        EMCNDOCT=1
             DISPLAY  *P44:5,*EL,*V2LON,"emrdocaf"
          ELSE
             DISPLAY  *P44:5,*EL,*V2LON,"patdo1af"
          ENDIF
.
DOCT9999  RETURN
+
.**************************************************************************
.*                            SCII0000                 Called by: ML0000  *
.*          Display the background for Interface Engine set up            *
.**************************************************************************
SCII0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,SP1,ONE,*HOFF:
                    ". Send Message CAE After Emergency Visit ?":
                    *P57:4,COLON:
                    *P1:5,*V2LON,SP1,TWO,*HOFF:
                    ". Send Message CEC After Change Emergency Visit ?":
                    *P57:5,COLON:
                    *P1:6,*V2LON,SP1,THREE,*HOFF:
                    ". Send Message CCE After Cancel Emergency Visit ?":
                    *P57:6,COLON
.
SCII9999  RETURN
+
.**************************************************************************
.*                            DSII0000                 Called by: ML0000  *
.*            Display the data for Interface Engine set up                *
.**************************************************************************
DSII0000  READ      CONTROLF,EIGHTY9;*177,EMCNDGAE,*178,EMCNDGEC,*179,EMCNDGCE
.
          MOVE      DNO,DANS1
          LOAD      DANS1,EMCNDGAE,DYES,DNO
.
          MOVE      DNO,DANS2
          LOAD      DANS2,EMCNDGEC,DYES,DNO
.
          MOVE      DNO,DANS3
          LOAD      DANS3,EMCNDGCE,DYES,DNO
.
          DISPLAY   *P59:4,*V2LON,DANS1:
                    *P59:5,DANS2:
                    *P59:6,DANS3
.
DSII9999  RETURN
+
.**************************************************************************
.*                            SLII0000                 Called by: ML0000  *
.*                 select field to modify or post                         *
.*    Returns:  EXIT    =       (0)  Post was selected.                   *
.*                              (1)  Cancel was selected.                 *
.**************************************************************************
SLII0000  CALL      MAINQST                  * Ask for an item, post or cancel
.
          COMPARE   ZERO,CCITEM              * What was entered ?
          GOTO      SLII8000 IF EQUAL        * Post was selected
          GOTO      SLII9000 IF LESS         * Cancel was selected
.
          BRANCH    CCITEM,SLII1000:         * send CAE after visit
                           SLII1100:         * send CEC after change visit
                           SLII1200          * send CCE after cancel visit
.
          BEEP                               * invalid
          GOTO      SLII0000
.
SLII1000  MOVE      "59",CCOL
          MOVE      "4",CVERT
          MOVE      EMCNDGAE,ANS
          CALL      KYNQ0000                * Keyin yes/no question
          MOVE      ANS,EMCNDGAE
          GOTO      SLII0000
.
SLII1100  MOVE      "59",CCOL
          MOVE      "5",CVERT
          MOVE      EMCNDGEC,ANS
          CALL      KYNQ0000                * Keyin yes/no question
          MOVE      ANS,EMCNDGEC
          GOTO      SLII0000
.
SLII1200  MOVE      "59",CCOL
          MOVE      "6",CVERT
          MOVE      EMCNDGCE,ANS
          CALL      KYNQ0000                * Keyin yes/no question
          MOVE      ANS,EMCNDGCE
          GOTO      SLII0000
.
.         Post was selected. Set the exit flag to tell the calling routine.
.
SLII8000  MOVE      ZERO,EXIT                * Post was selected
          GOTO      SLII9999
.
.         Cancel was selected. Set the exit flag to tell the calling routine.
.
SLII9000  MOVE      ONE,EXIT                 * Cancel was selected
.
SLII9999  RETURN
+
.**************************************************************************
.*                            WRII0000                 Called by: ML0000  *
.*             Post the data for interface engine set up                  *
.**************************************************************************
WRII0000  WRITAB    CONTROLF,EIGHTY9;*177,EMCNDGAE,*178,EMCNDGEC,*179,EMCNDGCE
.
WRII9999  RETURN
+
.****************************************************************************
.*                               SCRM0000              Called by: ML0000    *
.*          Display the VEMD fields for mapping                             *
.****************************************************************************
.
SCRM0000  IF        VEMDSCRF = 1
            DISPLAY   *P1:3,*EF,*P2:5,*V2LON,ONE,*HOFF,". Aboriginality":
                      *P45:5,COLON:
                      *P2:6,*V2LON,TWO,*HOFF,". Preferred Language":
                      *P45:6,COLON:
                      *P2:7,*V2LON,THREE,*HOFF,". Type of Visit":
                      *P45:7,COLON:
                      *P2:8,*V2LON,FOUR,*HOFF,". Triage Date":
                      *P45:8,COLON:
                      *P2:9,*V2LON,FIVE,*HOFF,". Triage Time":
                      *P45:9,COLON:
                      *P2:10,*V2LON,SIX,*HOFF,". Referred To On Departure":
                      *P45:10,COLON:
                      *P2:11,*V2LON,SEVEN,*HOFF,". Reason For Transfer":
                      *P45:11,COLON:
                      *P2:12,*V2LON,EIGHT,*HOFF,". Escort Service":
                      *P45:12,COLON:
                      *P2:13,*V2LON,NINE,*HOFF,". Departure Transport Mode":
                      *P45:13,COLON:
                      *P1:14,*V2LON,TEN,*HOFF,". Nature Of Main Injury":
                      *P45:14,COLON:
                      *P1:15,*V2LON,TEN1,*HOFF,". Description of Body Injury ":
                                              "Event Line 1":
                      *P45:15,COLON:
                      *P1:16,*V2LON,TEN2,*HOFF,". Description of Body Injury ":
                                              "Event Line 2":
                      *P45:16,COLON:
                      *P1:17,*V2LON,TEN3,*HOFF,". Injury Cause":
                      *P45:17,COLON:
                      *P1:18,*V2LON,TEN4,*HOFF,". Human Intent":
                      *P45:18,COLON:
                      *P1:19,*V2LON,TEN5,*HOFF,". Activity When Injured":
                      *P45:19,COLON:
                      *P1:20,*V2LON,TEN6,*HOFF,". Occupation":
                      *P45:20,COLON:
                      *P1:21,*V2LON,TEN7,*HOFF,". Departure Ready Date":
                      *P45:21,COLON:
                      *P1:22,*V2LON,TEN8,*HOFF,". Departure Ready Time":
                      *P45:22,COLON
          ELSE
            IF          VEMDSCRF = 2
              DISPLAY   *P1:3,*EF:
                        *P2:5,*V2LON,ONE,*HOFF,". Product involved with ":
                                               " Injury ":
                        *P45:5,COLON:
                        *P2:6,*V2LON,TWO,*HOFF,". Safety Device in use ":
                                               "during injury ":
                        *P45:6,COLON
            ENDIF
          ENDIF
.
SCRM9999  RETURN
+
.****************************************************************************
.*                               SELC0000              Called by: ML0000    *
.*                 Select a field and modify it                             *
.* Returns: EXIT - 0 = post selected                                        *
.*                 1 = cancel selected                                      *
.****************************************************************************
.
SELC0000  CALL      MAINQST                      * Select item, post, cancel
.
          COMPARE   ZERO,CCITEM
          GOTO      SELC8000 IF EQUAL            * Post was selected
          GOTO      SELC9000 IF LESS             * Cancel was selected
.
          IF        VEMDSCRF = 1
            BRANCH    CCITEM,SELC1000:             * aboriginality
                             SELC1000:             * preferred language
                             SELC1000:             * type of visit
                             SELC2000:             * triage date
                             SELC3000:             * triage time
                             SELC1000:             * referred to on departure
                             SELC1000:             * reason for transfer
                             SELC1000:             * escort service
                             SELC1000:             * departure transport mode
                             SELC1000:             * nature of main injury
                             SELC4000:             * description of body inj. 1
                             SELC4000:             * description of body inj. 2
                             SELC1000:             * injury cause
                             SELC1000:             * human intent
                             SELC1000:             * activity when injured
                             SELC1000:             * occupation
                             SELC2000:             * departure ready date
                             SELC3000              * departure ready time
          ELSE
            BRANCH    CCITEM,SELC5000:             * Product involved in injury
                             SELC5000              * Safety device in use
          ENDIF
.
          BEEP                                   * invalid
          GOTO      SELC0000
.
.         User defined codes field
.
SELC1000  MOVE      CCITEM,COUNTR
          CALL      KEYC0000
          MOVE      CATEGORY,ARRAY[COUNTR]
          GOTO      SELC0000
.
.         User defined date field
.
SELC2000  MOVE      CCITEM,COUNTR
          CALL      KEYD0000
          MOVE      FORM2,ARRAY[COUNTR]
          GOTO      SELC0000
.
.         User defined time field
.
SELC3000  MOVE      CCITEM,COUNTR
          CALL      KEYT0000
          MOVE      FORM2,ARRAY[COUNTR]
          GOTO      SELC0000
.
.         User defined free text field
.
SELC4000  MOVE      CCITEM,COUNTR
          CALL      KEYF0000
          MOVE      FORM2,ARRAY[COUNTR]
          GOTO      SELC0000
.
.         User defined free text field
.
SELC5000  MOVE      CCITEM,COUNTR
          CALL      KEYF0000
          MOVE      FORM2,ARRAY2[COUNTR]
          GOTO      SELC0000
.
.
.         Post was selected
.
SELC8000  MOVE      ZERO,EXIT                    * Post was selected
          GOTO      SELC9999
.
.         Cancel was selected
.
SELC9000  MOVE      ONE,EXIT                     * Cancel was selected
.
SELC9999  RETURN
+
.****************************************************************************
.*                               KEYC0000              Called by: SELC0000  *
.*          Keyin a User Defined Codes field                                *
.****************************************************************************
.
KEYC0000  ASSIGN    (COUNTR+4),EVERT             * set row
          KEYIN     *P47:EVERT,*EL,*V2LON,CATEGORY:
                    *P47:EVERT,*DV,CATEGORY
.
          CALL      CHKC0000                * see what was entered
          BRANCH    EXIT,KEYC1000:          * ? entered
                         KEYC7500:          * valid code
                         KEYC7500:          * nothing entered
                         KEYC9000           * exitchar
.
          GOTO      KEYC0000                * invalid code
.
KEYC1000  MOVE      ZERO,HLEF
          CALL      GETSCR00
          CALL      QUES0000                * display codes on file
          BRANCH    EXIT,KEYC7000           * exit selected (nothing)
.
KEYC7000  CALL      PUTSCR00                * restore screen
          DISPLAY   *P47:EVERT,*V2LON,CATEGORY
KEYC7500  DISPLAY   *P55:EVERT,TDESC
          MOVE      ZERO,EXIT
          GOTO      KEYC9999
.
KEYC8000  CALL      FRESCR00
KEYC9000  MOVE      ONE,EXIT
.
KEYC9999  RETURN
+
.***************************************************************************
.*                                  CHKC0000           Called by: KEYC0000 *
.*                      See what was input                                 *
.*      Returns: EXIT  0 = invalid                                         *
.*                     1 = "?"                                             *
.*                     2 = valid                                           *
.*                     3 = nothing                                         *
.*                     4 = exitchar                                        * 
.***************************************************************************
.
CHKC0000  PACK      CATEGORY,CATEGORY,SP2
.
          MATCH     SP2,CATEGORY                 * anything entered ?
          GOTO      CHKC9000 IF EQUAL            * no
.
          MATCH     EXITCHAR,CATEGORY            * exitchar entered ?
          GOTO      CHKC7000 IF EQUAL            * yes
.
          MATCH     QUEST,CATEGORY               * ? entered ?
          GOTO      CHKC8000 IF EQUAL            * yes
.
.         Code entered
.
          PACK      KEY5,CATEGORY,SP3
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,CHKC6000               * no
.
.         Make sure that the category selected is one of the Emergency 
.         user defined categories
.
          MOVE      ZERO,FORM2
          WHILE     FORM2 < 31
            ADD       ONE,FORM2
            LOAD      DIM2,FORM2,CATA1,CATA2,CATA3,CATA4,CATA5,CATA6,CATA7:
                                 CATA8,CATEA,CATEB,CATEC,CATED,CATEE,CATEF:
                                 CATEG,CATEH,CATEI,CATEJ,CATEK,CATEL,CATEM:
                                 CATEN,CATEO,CATEP,CATEQ,CATER,CATES,CATET:
                                 CATEU,CATEV,CATEX
            MATCH     DIM2,CATEGORY              * emergency UD category ?
            GOTO      CHKC5000 IF EQUAL          * yes - valid
          DO
          DISPLAY   *P1:24,*EL,*B,"Category not applicable.  ";
          GOTO      CHKC6100
.
CHKC5000  MOVE      TWO,EXIT                     * code entered
          GOTO      CHKC9999
.
CHKC6000  DISPLAY   *P1:24,*EL,*B,"Category not on file. ";
CHKC6100  CALL      HITENTER
          MOVE      ZERO,EXIT
          GOTO      CHKC9999
.
CHKC7000  MOVE      FOUR,EXIT
          GOTO      CHKC9999
.
CHKC8000  MOVE      ONE,EXIT
          GOTO      CHKC9999
.
CHKC9000  MOVE      SP20,TDESC
          MOVE      THREE,EXIT
.
CHKC9999  RETURN
+
.****************************************************************************
.*                               KEYD0000              Called by: SELC0000  *
.*          Keyin a User Defined Date field                                 *
.****************************************************************************
.
KEYD0000  ASSIGN    (COUNTR+4),EVERT             * set row
          KEYIN     *P1:24,*EL,"(Valid values are 1 - 10)":
                    *P47:EVERT,*EL,*V2LON,FORM2:
                    *P47:EVERT,*DV,FORM2
.
          IF        FORM2 < 1 | FORM2 > 10
            BEEP
            GOTO      KEYD0000
          ENDIF
.
          DISPLAY   *P47:EVERT,*V2LON,"User Defined Date Field ",FORM2:
                    *P1:24,*EL
.
KEYD9999  RETURN
+
.****************************************************************************
.*                               KEYT0000              Called by: SELC0000  *
.*          Keyin a User Defined Time field                                 *
.****************************************************************************
.
KEYT0000  ASSIGN    (COUNTR+4),EVERT             * set row
          KEYIN     *P1:24,*EL,"(Valid values are 1 - 10)":
                    *P47:EVERT,*EL,*V2LON,FORM2:
                    *P47:EVERT,*DV,FORM2
.
          IF        FORM2 < 1 | FORM2 > 10
            BEEP
            GOTO      KEYT0000
          ENDIF
.
          DISPLAY   *P47:EVERT,*V2LON,"User Defined Time Field ",FORM2:
                    *P1:24,*EL
.
KEYT9999  RETURN
+
.****************************************************************************
.*                               KEYF0000              Called by: SELC0000  *
.*          Keyin a User Defined Free Text field                            *
.****************************************************************************
.
KEYF0000  ASSIGN    (COUNTR+4),EVERT             * set row
          KEYIN     *P1:24,*EL,"(Valid values are 1 - 5)":
                    *P47:EVERT,*EL,*V2LON,FORM2:
                    *P47:EVERT,*DV,FORM2
.
          IF        FORM2 < 1 | FORM2 > 5
            BEEP
            GOTO      KEYF0000
          ENDIF
.
          DISPLAY   *P47:EVERT,*V2LON,"User Defined Free Text Field ",FORM2:
                    *P1:24,*EL
.
KEYF9999  RETURN
+
.******************************************************************************
.*                                 KYNQ0000                                   *
.*                           Keyin Yes/No Question                            *
.******************************************************************************
KYNQ0000  MOVE      ANS,KEY1
          REP       "0N1Y",KEY1
          KEYIN     *PCCOL:CVERT,*DV,SP3:
                    *PCCOL:CVERT,*V2LON,*RV,KEY1:
                    *PCCOL:CVERT,*DV,KEY1;
.
          MOVE      ZERO,FORM1
          REP       "y1Y1n2N2",KEY1
          MOVE      KEY1,FORM1
          BRANCH    FORM1,KYNQ1000,KYNQ1000
.
          BEEP
          GOTO      KYNQ0000
.
KYNQ1000  LOAD      ANS,FORM1,ONE,ZERO
          LOAD      KEY3,FORM1,DYES,DNO
          DISPLAY   *PCCOL:CVERT,*V2LON,KEY3;
.
KYNQ9000  MOVE      ZERO,EXIT
KYNQ9999  RETURN
+
.****************************************************************************
.*                               GDES0000              Called by: INIT0000  *
.*          Get the descriptions for the Emergency Categories               *
.****************************************************************************
.
GDES0000  MOVE      ZERO,FORM2                   * initialise counter
.
          WHILE     FORM2 < 31
            ADD       ONE,FORM2                  * increment counter
            LOAD      CATEGORY,FORM2,CATA1,CATA2,CATA3,CATA4,CATA5,CATA6,CATA7:
                                     CATA8,CATEA,CATEB,CATEC,CATED,CATEE,CATEF:
                                     CATEG,CATEH,CATEI,CATEJ,CATEK,CATEL,CATEM:
                                     CATEN,CATEO,CATEP,CATEQ,CATER,CATES,CATET:
                                     CATEU,CATEV,CATEX
.
            MOVE      "Unknown Category",TDESC
            PACK      KEY5,CATEGORY,SP3
            CALL      RDCODE1
            STORE     TDESC,FORM2,CATDES01,CATDES02,CATDES03,CATDES04,CATDES05:
                                  CATDES06,CATDES07,CATDES08,CATDES09,CATDES10:
                                  CATDES11,CATDES12,CATDES13,CATDES14,CATDES15:
                                  CATDES16,CATDES17,CATDES18,CATDES19,CATDES20:
                                  CATDES21,CATDES22,CATDES23,CATDES24,CATDES25:
                                  CATDES26,CATDES27,CATDES28,CATDES29,CATDES30:
                                  CATDES31 
          DO
.
GDES9999  RETURN
+
.****************************************************************************
.*                               QUES0000              Called by: KEYC0000  *
.*          Display the Emergency categories and allow user to select one   *
.* Returns: EXIT  0 = valid selection made                                  *
.*                1 = Exit selected                                         *
.****************************************************************************
.
QUES0000  DISPLAY   *P1:3,*EF,*P20:4,*V2LON,"Emergency User Defined Categories":
                    *P1:5,*V2LON,*ULON,"Item",*P6:5,"Category",*P16:5:
                    "Description      ",*P40:5,*V2LON,*ULON,"Item",*P45:5:
                    "Category",*P55:5,"Description      ",*HOFF:
                    *P2:6,*V2LON,ONE,*HOFF,".    ",CATA1,*P16:6,CATDES01:
                    *P2:7,*V2LON,TWO,*HOFF,".    ",CATA2,*P16:7,CATDES02:
                    *P2:8,*V2LON,THREE,*HOFF,".    ",CATA3,*P16:8,CATDES03:
                    *P2:9,*V2LON,FOUR,*HOFF,".    ",CATA4,*P16:9,CATDES04:
                    *P2:10,*V2LON,FIVE,*HOFF,".    ",CATA5,*P16:10,CATDES05:
                    *P2:11,*V2LON,SIX,*HOFF,".    ",CATA6,*P16:11,CATDES06:
                    *P2:12,*V2LON,SEVEN,*HOFF,".    ",CATA7,*P16:12,CATDES07:
                    *P2:13,*V2LON,EIGHT,*HOFF,".    ",CATA8,*P16:13,CATDES08:
                    *P2:14,*V2LON,NINE,*HOFF,".    ",CATEA,*P16:14,CATDES09:
                    *P1:15,*V2LON,TEN,*HOFF,".    ",CATEB,*P16:15,CATDES10:
                    *P1:16,*V2LON,TEN1,*HOFF,".    ",CATEC,*P16:16,CATDES11:
                    *P1:17,*V2LON,TEN2,*HOFF,".    ",CATED,*P16:17,CATDES12:
                    *P1:18,*V2LON,TEN3,*HOFF,".    ",CATEE,*P16:18,CATDES13:
                    *P1:19,*V2LON,TEN4,*HOFF,".    ",CATEF,*P16:19,CATDES14:
                    *P1:20,*V2LON,TEN5,*HOFF,".    ",CATEG,*P16:20,CATDES15:
                    *P1:21,*V2LON,TEN6,*HOFF,".    ",CATEH,*P16:21,CATDES16:
                    *P1:22,*V2LON,TEN7,*HOFF,".    ",CATEI,*P16:22,CATDES17:
                    *P40:6,*V2LON,TEN8,*HOFF,".    ",CATEJ,*P55:6,CATDES18:
                    *P40:7,*V2LON,TEN9,*HOFF,".    ",CATEK,*P55:7,CATDES19:
                    *P40:8,*V2LON,TWENTY,*HOFF,".    ",CATEL,*P55:8,CATDES20:
                    *P40:9,*V2LON,TWENTY1,*HOFF,".    ",CATEM,*P55:9,CATDES21:
                    *P40:10,*V2LON,TWENTY2,*HOFF,".    ",CATEN,*P55:10,CATDES22:
                    *P40:11,*V2LON,TWENTY3,*HOFF,".    ",CATEO,*P55:11,CATDES23:
                    *P40:12,*V2LON,TWENTY4,*HOFF,".    ",CATEP,*P55:12,CATDES24:
                    *P40:13,*V2LON,TWENTY5,*HOFF,".    ",CATEQ,*P55:13,CATDES25:
                    *P40:14,*V2LON,TWENTY6,*HOFF,".    ",CATER,*P55:14,CATDES26:
                    *P40:15,*V2LON,TWENTY7,*HOFF,".    ",CATES,*P55:15,CATDES27:
                    *P40:16,*V2LON,TWENTY8,*HOFF,".    ",CATET,*P55:16,CATDES28:
                    *P40:17,*V2LON,TWENTY9,*HOFF,".    ",CATEU,*P55:17,CATDES29:
                    *P40:18,*V2LON,THIRTY,*HOFF,".    ",CATEV,*P55:18,CATDES30:
                    *P40:18,*V2LON,THIRTY1,*HOFF,".    ",CATEX,*P55:18,CATDES31
.
QUES0500  KEYIN     *P1:24,*EL,"Select Item, (",*V2LON,*DV,ANSE,*HOFF,")xit :":
                    *P23:24,*V2LON,*JR,DIM2:
                    *P23:24,*DV,DIM2
.
          PACK      DIM2,DIM2,SP2
.
          TYPE      DIM2                         * numeric input ?
          GOTO      QUES5000 IF EQUAL            * yes
.
          REP       UPPLOW,DIM2
          UNPACK    DIM2,ANS,ANS
.
          MATCH     ANSE,ANS                     * exit entered ?
          GOTO      QUES9500 IF EQUAL            * yes
.
          BEEP
          GOTO      QUES0000
.
.         A number was entered so make sure it is valid
.
QUES5000  MOVE      DIM2,FORM2
          IF        FORM2 < 1 | FORM2 > 31
            BEEP
            GOTO      QUES0500
          ENDIF
.
          LOAD      CATEGORY,FORM2,CATA1,CATA2,CATA3,CATA4,CATA5,CATA6,CATA7:
                                   CATA8,CATEA,CATEB,CATEC,CATED,CATEE,CATEF:
                                   CATEG,CATEH,CATEI,CATEJ,CATEK,CATEL,CATEM:
                                   CATEN,CATEO,CATEP,CATEQ,CATER,CATES,CATET:
                                   CATEU,CATEV,CATEX
.
          LOAD      TDESC,FORM2,CATDES01,CATDES02,CATDES03,CATDES04,CATDES05:
                                CATDES06,CATDES07,CATDES08,CATDES09,CATDES10:
                                CATDES11,CATDES12,CATDES13,CATDES14,CATDES15:
                                CATDES16,CATDES17,CATDES18,CATDES19,CATDES20:
                                CATDES21,CATDES22,CATDES23,CATDES24,CATDES25:
                                CATDES26,CATDES27,CATDES28,CATDES29,CATDES30:
                                CATDES31
.
          MOVE      ZERO,EXIT
          GOTO      QUES9999
.
QUES9500  MOVE      SP2,CATEGORY
          MOVE      SP20,TDESC
          MOVE      ONE,EXIT
.
QUES9999  RETURN
+
.****************************************************************************
.*                               LOAD0000              Called by: ML0000    *
.*          Load and display the current mapping details from file          *
.****************************************************************************
.
LOAD0000  READ      CONTROLF,EIGHTY9;*102,EMCNUDFA,*104,EMCNUDFB,*106,EMCNUDFC:
                                     *108,EMCNUDDA,*110,EMCNUDTA,*112,EMCNUDFD:
                                     *114,EMCNUDFE,*116,EMCNUDFF,*118,EMCNUDFG:
                                     *120,EMCNUDFH,*122,EMCNUDXA,*124,EMCNUDXB:
                                     *126,EMCNUDFI,*128,EMCNUDFJ,*130,EMCNUDFK:
                                     *132,EMCNUDFL,*134,EMCNUDDB,*136,EMCNUDTB:
                                     *140,EMCNUDXC,*142,EMCNUDXD
.
          MOVE      EMCNUDFA,ARRAY[1]
          MOVE      EMCNUDFB,ARRAY[2]
          MOVE      EMCNUDFC,ARRAY[3]
          MOVE      EMCNUDDA,ARRAY[4]
          MOVE      EMCNUDTA,ARRAY[5]
          MOVE      EMCNUDFD,ARRAY[6]
          MOVE      EMCNUDFE,ARRAY[7]
          MOVE      EMCNUDFF,ARRAY[8]
          MOVE      EMCNUDFG,ARRAY[9]
          MOVE      EMCNUDFH,ARRAY[10]
          MOVE      EMCNUDXA,ARRAY[11]
          MOVE      EMCNUDXB,ARRAY[12]
          MOVE      EMCNUDFI,ARRAY[13]
          MOVE      EMCNUDFJ,ARRAY[14]
          MOVE      EMCNUDFK,ARRAY[15]
          MOVE      EMCNUDFL,ARRAY[16]
          MOVE      EMCNUDDB,ARRAY[17]
          MOVE      EMCNUDTB,ARRAY[18]
.
          MOVE      EMCNUDXC,ARRAY2[1]
          MOVE      EMCNUDXD,ARRAY2[2]
.
          IF        VEMDSCRF = 1
            MATCH     SP2,ARRAY[1]
            IF        !@EQUAL
              MOVE      "Unknown Category",TDESC
              PACK      KEY5,ARRAY[1],SP3
              CALL      RDCODE1
              DISPLAY   *P47:5,*V2LON,ARRAY[1],*HOFF,*P55:5,TDESC
            ENDIF
.
            MATCH     SP2,ARRAY[2]
            IF        !@EQUAL
              MOVE      "Unknown Category",TDESC
              PACK      KEY5,ARRAY[2],SP3
              CALL      RDCODE1
              DISPLAY   *P47:6,*V2LON,ARRAY[2],*HOFF,*P55:6,TDESC
            ENDIF
.   
            MATCH     SP2,ARRAY[3]
            IF        !@EQUAL
              MOVE      "Unknown Category",TDESC
              PACK      KEY5,ARRAY[3],SP3
              CALL      RDCODE1
              DISPLAY   *P47:7,*V2LON,ARRAY[3],*HOFF,*P55:7,TDESC
            ENDIF
.
            MATCH     SP2,ARRAY[4]
            IF        !@EQUAL
              DISPLAY   *P47:8,*V2LON,"User Defined Date Field ",ARRAY[4]
            ENDIF
.
            MATCH     SP2,ARRAY[5]
            IF        !@EQUAL
              DISPLAY   *P47:9,*V2LON,"User Defined Time Field ",ARRAY[5]
            ENDIF
.
            MATCH     SP2,ARRAY[6]
            IF        !@EQUAL
              MOVE      "Unknown Category",TDESC
              PACK      KEY5,ARRAY[6],SP3
              CALL      RDCODE1
              DISPLAY   *P47:10,*V2LON,ARRAY[6],*HOFF,*P55:10,TDESC
            ENDIF
.
            MATCH     SP2,ARRAY[7]
            IF        !@EQUAL
              MOVE      "Unknown Category",TDESC
              PACK      KEY5,ARRAY[7],SP3
              CALL      RDCODE1
              DISPLAY   *P47:11,*V2LON,ARRAY[7],*HOFF,*P55:11,TDESC
            ENDIF
.
            MATCH     SP2,ARRAY[8]
            IF        !@EQUAL
              MOVE      "Unknown Category",TDESC
              PACK      KEY5,ARRAY[8],SP3
              CALL      RDCODE1
              DISPLAY   *P47:12,*V2LON,ARRAY[8],*HOFF,*P55:12,TDESC
            ENDIF
.
            MATCH     SP2,ARRAY[9]
            IF        !@EQUAL
              MOVE      "Unknown Category",TDESC
              PACK      KEY5,ARRAY[9],SP3
              CALL      RDCODE1
              DISPLAY   *P47:13,*V2LON,ARRAY[9],*HOFF,*P55:13,TDESC
            ENDIF
.
            MATCH     SP2,ARRAY[10]
            IF        !@EQUAL
              MOVE      "Unknown Category",TDESC
              PACK      KEY5,ARRAY[10],SP3
              CALL      RDCODE1
              DISPLAY   *P47:14,*V2LON,ARRAY[10],*HOFF,*P55:14,TDESC
            ENDIF
.
            MATCH     SP2,ARRAY[11]
            IF        !@EQUAL
              DISPLAY   *P47:15,*V2LON,"User Defined Free Text Field ",ARRAY[11]
            ENDIF
.
            MATCH     SP2,ARRAY[12]
            IF        !@EQUAL
              DISPLAY   *P47:16,*V2LON,"User Defined Free Text Field ",ARRAY[12]
            ENDIF
.
            MATCH     SP2,ARRAY[13]
            IF        !@EQUAL
              MOVE      "Unknown Category",TDESC
              PACK      KEY5,ARRAY[13],SP3
              CALL      RDCODE1
              DISPLAY   *P47:17,*V2LON,ARRAY[13],*HOFF,*P55:17,TDESC
            ENDIF
.
            MATCH     SP2,ARRAY[14]
            IF        !@EQUAL
              MOVE      "Unknown Category",TDESC
              PACK      KEY5,ARRAY[14],SP3
              CALL      RDCODE1
              DISPLAY   *P47:18,*V2LON,ARRAY[14],*HOFF,*P55:18,TDESC
            ENDIF
.
            MATCH     SP2,ARRAY[15]
            IF        !@EQUAL
              MOVE      "Unknown Category",TDESC
              PACK      KEY5,ARRAY[15],SP3
              CALL      RDCODE1
              DISPLAY   *P47:19,*V2LON,ARRAY[15],*HOFF,*P55:19,TDESC
            ENDIF
.
            MATCH     SP2,ARRAY[16]
            IF        !@EQUAL
              MOVE      "Unknown Category",TDESC
              PACK      KEY5,ARRAY[16],SP3
              CALL      RDCODE1
              DISPLAY   *P47:20,*V2LON,ARRAY[16],*HOFF,*P55:20,TDESC
            ENDIF
.
            MATCH     SP2,ARRAY[17]
            IF        !@EQUAL
              DISPLAY   *P47:21,*V2LON,"User Defined Date Field ",ARRAY[17]
            ENDIF
.
            MATCH     SP2,ARRAY[18]
            IF        !@EQUAL
              DISPLAY   *P47:22,*V2LON,"User Defined Date Field ",ARRAY[18]
            ENDIF
          ELSE          
            MATCH     SP2,ARRAY2[1]
            IF        !@EQUAL
              DISPLAY   *P47:5,*V2LON,"User Defined Free Text Field ",ARRAY2[1]
            ENDIF
.
            MATCH     SP2,ARRAY2[2]
            IF        !@EQUAL
              DISPLAY   *P47:6,*V2LON,"User Defined Free Text Field ",ARRAY2[2]
            ENDIF
          ENDIF
.
.
LOAD9999  RETURN
+
.****************************************************************************
.*                               WMAP0000              Called by: ML0000    *
.*          Write the mapping details to the controlf file                  *
.****************************************************************************
.
WMAP0000  MOVE      ARRAY[1],EMCNUDFA
          MOVE      ARRAY[2],EMCNUDFB
          MOVE      ARRAY[3],EMCNUDFC
          MOVE      ARRAY[4],EMCNUDDA
          MOVE      ARRAY[5],EMCNUDTA
          MOVE      ARRAY[6],EMCNUDFD
          MOVE      ARRAY[7],EMCNUDFE
          MOVE      ARRAY[8],EMCNUDFF
          MOVE      ARRAY[9],EMCNUDFG
          MOVE      ARRAY[10],EMCNUDFH
          MOVE      ARRAY[11],EMCNUDXA
          MOVE      ARRAY[12],EMCNUDXB
          MOVE      ARRAY[13],EMCNUDFI
          MOVE      ARRAY[14],EMCNUDFJ
          MOVE      ARRAY[15],EMCNUDFK
          MOVE      ARRAY[16],EMCNUDFL
          MOVE      ARRAY[17],EMCNUDDB
          MOVE      ARRAY[18],EMCNUDTB
.
          MOVE      ARRAY2[1],EMCNUDXC
          MOVE      ARRAY2[2],EMCNUDXD
.
          WRITAB    CONTROLF,EIGHTY9;*102,EMCNUDFA,*104,EMCNUDFB,*106,EMCNUDFC:
                                     *108,EMCNUDDA,*110,EMCNUDTA,*112,EMCNUDFD:
                                     *114,EMCNUDFE,*116,EMCNUDFF,*118,EMCNUDFG:
                                     *120,EMCNUDFH,*122,EMCNUDXA,*124,EMCNUDXB:
                                     *126,EMCNUDFI,*128,EMCNUDFJ,*130,EMCNUDFK:
                                     *132,EMCNUDFL,*134,EMCNUDDB,*136,EMCNUDTB:
                                     *140,EMCNUDXC,*142,EMCNUDXD
.
WMAP9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       IBASECUR
.
          INC       PATCODIO/INC
.
.
.
.
.
