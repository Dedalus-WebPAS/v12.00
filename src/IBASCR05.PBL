.-------------------------------------------------------------------------------
. Program       : IBASCR05 Dynamic Screen Program Generator
.-------------------------------------------------------------------------------
. Modifications : 
.-------------------------------------------------------------------------------
. V10.02.01 07/04/2011  Jill Parkinson CAR 239574
.           Removed open of ibaprntf
. V9.04.01  06/09/2004  Sandra Barhcam
.           When clearing key variables on batch screens allow for D variables
.-------------------------------------------------------------------------------
. C2.10.01  20/09/2002  Steve Downing
.           Mods to save PORT no of parent program if a forked program
. C2.09.B02 15.01.2001  B.G.Ackland    
.           Change Setup of Start Key "SKY" in LMLAB Rotuine
. C2.09.B01 06.11.2000  Sandra Barcham
.           Recompiled for change to ibaspolf
.-------------------------------------------------------------------------------
. C2.00.02  14.08.2000  Sandra Barcham
.           Implement $WORKDIR for source work directory   
. C2.00.01  09.09.1999  Sandra Barcham
.           Change ITEMNO to XITEMNO for PATITMFD          
.-------------------------------------------------------------------------------
. C1.00.06  18.03.1997  B.G.Ackland
.           Allow for Variable 0 Match Length Batch Screens
. C1.00.05  04.10.1996  B.G.Ackland
.           Allow for Variable Length Key in Batch Screens
.           ie Match Length = 99
. C1.00.04  26.05.1996  B.G.Ackland
.           Fix Batch Screens for Last Page Options  
. C1.00.03  26/02/1996  B.G.Ackland
.           Split Display Fields DFxxL000 Routine So that it may be
.           used for Print Screen Function. New routine PSxxL000.
.           Created new routine PRTSVARS called by screen print  
.           function PRSCR000 in STDPRTCD.PBL. 
. C1.00.02  05.06.1995  Robert Sumsion - Added Display Print Lines for 
.           Opening Temp Files.
. C1.00.01  13/02/1995  Greg Horvat      SRF 134920 134922 134932
.           Recompiled for IBAPRINT
.-------------------------------------------------------------------------------
. V6.00.03  03.12.1992  B.G.Ackland
.-------------------------------------------------------------------------------
. Modify generated keyin code for left justified dim fields to recognise the 
. length of the field on the screen. Modifications at Labels SKEY1100 and
. PKEY1100.
. The code 
.            PRINT    "          STRIP     ",KEY8
.            PRINT    "          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,",KEY9
. was changed to
.            STRIP    KEY8
.            PRINT    "          STRIP     ",KEY8
.            PRINT    "          SFORMAT   VAR,SCPSLEN"
.            PRINT    "          MOVE      ",*+,KEY8,",VAR"
.            PRINT    "          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR"
.            PRINT    "          MOVE      VAR,",KEY8
. The following lines of code were removed as they should not be required.
.          ENDIF
.          PRINT    "                    *PCCOL:CVERT"
.          IF        SCFLFTY=0
.-------------------------------------------------------------------------------
. V6.00.04 09.01.92 B.G.Ackland
.-------------------------------------------------------------------------------
. Modify generated keyin code for left justified dim fields to reset length  
. of general varaiable VAR to 127. Modifications at Labels SKEY1100 and
. PKEY1100.
. The code 
.            PRINT    "          MOVE      VAR,",KEY8
. The following lines of code were removed as they should not be required.
.            PRINT    "          MOVE      VAR,",KEY8
.            PRINT    "          SFORMAT   VAR,127"
.-------------------------------------------------------------------------------
. V6.00.05 10.03.93 B.G.Ackland
.-------------------------------------------------------------------------------
. Default Y/N Keyins
.-------------------------------------------------------------------------------
. V6.00.06 16.03.93 B.G.Ackland
.-------------------------------------------------------------------------------
. Semi Colon on Keyin for painter section
.-------------------------------------------------------------------------------
. V6.00.07 14.04.93 B.G.Ackland
.-------------------------------------------------------------------------------
. Change Chain to PGM
.-------------------------------------------------------------------------------
. V6.00.08 19.04.93 B.G.Ackland
.-------------------------------------------------------------------------------
. Move zero to FORM2 before YESNO LOAD so that Invlaid DIM fields will default
. to No(0=No) or Yes(0=Yes).
.-------------------------------------------------------------------------------
. V6.00.09 22.04.93 B.G.Ackland
.-------------------------------------------------------------------------------
. Allow Selection Maintenance when editing Selection or WP field. 
. Fix Selection Delete on Field Delete. 
.-------------------------------------------------------------------------------
. V6.00.10 02.07.93 B.G.Ackland
.-------------------------------------------------------------------------------
. Fix Restore Screen After Enquiry Select.
. New Version Control.
.-------------------------------------------------------------------------------
. V6.00.11 14.07.93 B.G.Ackland
.-------------------------------------------------------------------------------
. Allow vi  program under Generation        
.-------------------------------------------------------------------------------
. V6.00.12 13.10.93 N.Dye
.-------------------------------------------------------------------------------
. Fix batch screen redisplay after selection
. Allow fromlive if program not found during generation
.-------------------------------------------------------------------------------
. V6.00.13 15.11.93 B.G.Ackland
.-------------------------------------------------------------------------------
. Fix batch screen with 0 match length.
.-------------------------------------------------------------------------------
. V6.00.14 12.04.94 Neeriem Dye - Contractor !!
.-------------------------------------------------------------------------------
. V6.00.15 31.05.94 Robert Sumsion - Add Hitenter after compilation.
.-------------------------------------------------------------------------------
. Fix empty file when editing a function if the text file does not exist
. and delete temporary file apon program termination
.-------------------------------------------------------------------------------
.===============================================================================
          INC       SYSSTDDF
          INC       PAINTDDF
          INC       IBAPRNFD/INC
          INC       IBAHLPFD/INC
          INC       SCRPRGFD/INC  * Program Master File
          INC       SCRMASFD/INC  * Screen Master File
          INC       SCRSBGFD/INC  * Screen Background
          INC       SCRFLDFD/INC  * Screen Fields
          INC       SCRSLTFD/INC  * Screen Selections
          INC       SCRPSTFD/INC  * Screen Positions
          INC       SCRINCFD/INC  * Screen Positions
          INC       SCRTAGFD/INC  * Screen Positions
          INC       SCRFMAFD/INC  * Function Master
          INC       SCRFDTFD/INC  * Function Details
          INC       SCRLOCFD/INC  * Program Lock
          INC       SCROPNFD/INC  * File Opens
          INC       SCRWPDFD/INC  * File Opens
          INC       SCRTFCFD/INC  * Temp Functions File
.
          INC       SYSSCFFD/INC
          INC       SYSFILFD/INC
          INC       SYSIDXFD/INC
          INC       SYSFLDFD/INC
          INC       SYSKVRFD/INC
.
NEWPROG   FORM      1
SELKEY13  DIM       13
SAVEACC   FORM      1
SAVEITM   FORM      3
COMPOPT   DIM       20
OPENSTAT  DIM       15
OPENNORM  INIT      "Generated "
OPENADD   INIT      "Added "
OPENDEL   INIT      "Deleted "
OPENAUD   INIT      "Audit Open "
COPYTFNO  DIM       5
COPYFFNO  DIM       5
BIO       INIT      "bio"
SAVEPROM  DIM       5
SAVPGM    DIM       8
WORDTYPE  FORM      3
RECLEN    FORM      4
VAR127    DIM       127
SHELL     INIT      "sh"
FUNCNAME  INIT      "scrtfc"
KILLTFUN  DIM       80
MAKETFUN  DIM       80
KILLDEC   DIM       80
MAKEDEC   DIM       80
SCRTDCA1  IFILE     SQL, FIXED=9, KEY="U1-8"
DECNAME   INIT      "scrtdc"
DECFNAME  DIM       8
INDEX     INIT      " 9 UC1-8"
.
MULTIBSQ  FORM      1[20]     * Array of Multiple IDs (Batch Sequence)
MULTIBTY  FORM      1[20]     * Array of Multiple IDs (Batch Type)
MULTIMTY  DIM       5[20]     * Array of Multiple IDs (Batch Screens)
MULTITIO  DIM       6[20]     * Array of IO Label
MULTIFNO  DIM       5[20]     * Array of Multiple Field No (Batch Screens)
MULTIKEY  DIM       6[20]     * Array of Multiple Field No (Batch Screens)
MULTIKLN  DIM       4[20]     * Array of Multiple Field No (Batch Screens)
MULTISLN  DIM       4[20]     * Array of Multiple Field No (Batch Screens)
MULTIPAK  DIM       80[20]     * Array of Multiple Field No (Batch Screens)
MULTIMLN  FORM      2[20]     * Array of Match Length (Batch Screens)
MULTIIDX  FORM      2         * Index for Above
IDXMUL    FORM      2         * Index for Above
PKEYLEN   DIM       4
.
SAVPID    DIM       8
FSTPID    DIM       8
LSTPID    DIM       8
.
COPYTPID  DIM       8
COPYTSID  DIM       2
SAVKEY10  DIM       10
SAVKEY12  DIM       12
SAVKEY13  DIM       13
SAVKEY15  DIM       15
SAVKEY16  DIM       16
SAVKEY20  DIM       20
SAVKEY21  DIM       21
.
FIELDNAM  DIM       8
KEYNAME   DIM       8
RACALLID  DIM       8
RDCALLID  DIM       8
RKCALLID  DIM       8
RSCALLID  DIM       8
RPCALLID  DIM       8
.
RA        INIT      "RA"
RS        INIT      "RS"
RK        INIT      "RK"
RP        INIT      "RP"
RDA       INIT      "RDA"
RDS       INIT      "RDS"
RDK       INIT      "RDK"
RDP       INIT      "RDP"
RD        INIT      "RD"
.
SCRNTYP   DIM       20
SCRNTYP0  INIT      "Normal Screen "
SCRNTYP1  INIT      "Virtual Screen "
.
SCRNSEX   DIM       20
SCRNSEX0  INIT      "Restart Screen "
SCRNSEX1  INIT      "Exit Screen "
.
SCRNCLR   DIM       20
SCRNCLR0  INIT      "Clear All"
SCRNCLR1  INIT      "Clear Key and Select"
SCRNCLR2  INIT      "No Clear "
.
BCHSEQ    DIM       20
BCHSEQ0   INIT      "Ascending "
BCHSEQ1   INIT      "Descending "
.
BCHTYP    DIM       20
BCHTYP0   INIT      "Maintenance "
BCHTYP1   INIT      "Enquiry Only "
BCHTYP2   INIT      "Selection Maint."
BCHTYP3   INIT      "Selection Enq."
.
FLAGSP70  FORM      1
OLDPID    DIM       8
NEWPID    DIM       8
.
KEYTYPE   DIM       7 
KEYTYPE0  INIT      "Modify"
KEYTYPE1  INIT      "Insert"
KEYTYPE2  INIT      "Either"
.
FIELDNO   FORM      5
FORM5     FORM      5
.
INDENT    FORM      3
INITFOR2  INIT      "FORM2"
INITVAR   INIT      "VAR"
INITL006  INIT      "L006"
INITL010  INIT      "L010"
INITL020  INIT      "L020"
INITL990  INIT      "L990"
INITL999  INIT      "L999"
BRATYPE   FORM      1   * Branch Type 0=Display 1=Select
ENDLABEL  DIM       8
DEFLABEL  DIM       8
BRALABEL  DIM       5
.
LABELNO3  FORM      3
.
SCLAB     DIM       4  * Screen Mainline
KYLAB     DIM       4  * Key Field Entry
DFLAB     DIM       4  * Display Screen Fields
PSLAB     DIM       4  * Display/Print Screen Fiels
SFLAB     DIM       4  * Select Fields
WPLAB     DIM       4  * WP Initialization
CFLAB     DIM       4  * Clear Fields
.
.         Multiples (Batch Screen) Labels
.
LMLAB     DIM       4  * Load Details
DPLAB     DIM       4  * Display Page
NPLAB     DIM       4  * Next Page
PPLAB     DIM       4  * Previous Page
LPLAB     DIM       4  * Last Page
FPLAB     DIM       4  * First Page
CPLAB     DIM       4  * Clear Page
CTLAB     DIM       4  * Clear Temp Row/Col
ADLAB     DIM       4  * Add 
DLLAB     DIM       4  * Delete a Line
SMLAB     DIM       4  * Add/Change a Line
.
LABELSC   INIT      "SC"  * Screen Mainline
LABELKY   INIT      "KY"  * Key Field Entry
LABELDF   INIT      "DF"  * Display Screen Fields
LABELPS   INIT      "PS"  * Display / Print Screen Fields
LABELSF   INIT      "SF"  * Select Fields
LABELWP   INIT      "WP"  * WP Initialization
LABELCF   INIT      "CF"  * Clear Fields
.
.         Multiples (Batch Screen) Labels
.
LABELLM   INIT      "LM"  * Load Details
LABELDP   INIT      "DP"  * Display Page
LABELNP   INIT      "NP"  * Next Page
LABELPP   INIT      "PP"  * Previous Page
LABELLP   INIT      "LP"  * Last Page
LABELFP   INIT      "FP"  * First Page
LABELCP   INIT      "CP"  * Clear Page
LABELCT   INIT      "CT"  * Clear Temp Row/Col
LABELAD   INIT      "AD"  * Add 
LABELDL   INIT      "DL"  * Delete a Line
LABELSM   INIT      "SM"  * Add/Change a Line
.
LOWUP     INIT      "AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz"
.
SCFDTMP1  FILE      ASCII, FIXED=80
NAMEFILE  DIM       8
SCRCMD80   DIM       80
FUNTYPE   DIM       20
FUNTYPE1  INIT      "Manual       "
FUNTYPE2  INIT      "Included Call"
FUNTYPE3  INIT      "Included Call"
FUNTYPE4  INIT      "Generated    "
.
DTYPE     DIM       4
DTYPE0    INIT      "DIM "
DTYPE1    INIT      "FORM"
FLDFLAG   FORM      1
KEYFLAG   FORM      1
KTYPNAM    DIM       10
KTYPNAM0   INIT      "Normal  "
KTYPNAM1   INIT      "*JR     "
KTYPNAM2   INIT      "*JR,*ZF "
KTYPNAM3   INIT      "0=No    "
KTYPNAM4   INIT      "0=Yes   "
KTYPNAM5   INIT      "Date    "
KTYPNAM6   INIT      "Null    "
FDINC      INIT      "FD/INC"
KYINC      INIT      "KY"
IOINC      INIT      "IO/INC"
VI         INIT      "vi "
TXT        INIT      ".txt"
.
ACCEPT    FORM      1
LOCYESNO  DIM       3
KTYPDES   DIM       20
EXITDES   DIM       20
.
. Save Variables
.----------------
SSCPSPID   DIM       8      8        1     Program                            
SSCPSSID   DIM       2      2        9     Screen                             
SSCPSITM   DIM       5      5        18    Field Number                       
SSCPSROW   DIM       2      2        23    Row                                
SSCPSCOL   DIM       3      3        25    Column                             
SSCPSMAN   FORM      1      2        28    Mandatory 0=No                     
SSCPSLEN   FORM      3      3        30    Display Length                     
SSCPSATT   DIM       1      1        33    Display Attributes                 
SSCPSNOR   FORM      2      1        33    Display Attributes                 
SSCPSMTY   DIM       5      1        33    Display Attributes                 
SSCPSFMT   DIM       25     1        33    Display Attributes                 
.
. Save Item Variables 
.---------------------
SSCFLPID   DIM       8      8        1     Program ID                         
SSCFLSID   DIM       2      2        9     Screen Id                          
SSCFLFNO   DIM       5      5        11    Field Number                       
SSCFLDES   DIM       35     35       16    Description                        
SSCFLTYP   FORM      1      2        51    Type 0.Key 1.Sel 2.Dis 3.Fun 4.Scr 
SSCFLFLD   DIM       8      8        53    Field                              
SSCFLCAL   DIM       8      8        61    Call Routine                       
SSCFLWPF   DIM       8      8        69    Word Processor File                
SSCFLFSC   DIM       2      2        77    Screen to Call                     
SSCFLDEC   FORM      1      2        79    Declare Field in Program 0=No      
SSCFLMIN   FORM      3      3        81    Minimum Screen Length              
SSCFLMAX   FORM      3      3        84    Maximum Screen Length              
SSCFLFLN   FORM      3.1    4        87    Field Length                       
SSCFLFTY   FORM      1      2        91    Field Type 0=Dim                   
SSCFLKTY   FORM      1      2        93    Keyin Type 0-6                     
SSCFLMAN   FORM      1      2        95    Mandatory 0=No                     
SSCFLFEX   FORM      1      2        97    Function Exit Type                 
SSCFLDAF   DIM       5      5        99    Display After Field                
SSCFLMUL   FORM      1      2        99    Display After Field                
SSCFLMTY   DIM       5      2        99    Display After Field                
SSCFLKEY   FORM      1      2        99    Display After Field                
SSCFLSPA   DIM       33     33       104   Spare                              
.--------------------------------------------------------------------
AUD       INIT      "AUD"
KEYLEN    FORM      4
KEYFILE   DIM       4
PPACKKEY  INIT      "          PACK      KEY"
SEGMENT   DIM       4
PACKKEY   DIM       80    * Validation Pack Key
SAV80     DIM       80 
.
FIRST     FORM      1
COUNT     FORM      4
AUDFLAG   FORM      1
LOCFLAG   FORM      1
.
DSEC      DIM       5
DPOS      DIM       3
ISBUILD   INIT      "isbuild "
ISERASE   INIT      "iserase "
TEMPNAME  INIT      "systmp"
KEYDEFN   INIT      " 9 UC1-3,4-6,7-8"
INCLFILE  FILE      ASCII, FIXED=80
PBLFILE   FILE      ASCII, FIXED=80
FD        INIT      "FD"
IO        INIT      "IO"
KY        INIT      "KY"
PRNAME     DIM       12
PBLANK    INIT      "."
PSELA     INIT      "SELA"
LABELNO   FORM      4
PDISPLAY  INIT      "          DISPLAY    "
PDSPACE   INIT      "                     "
PRETURN   INIT      "          RETURN"
PCALL     INIT      "          CALL      "
UUCALLID  DIM       8
RLCALLID  DIM       8
UPCALLID  DIM       8
WRCALLID  DIM       8
DECALLID  DIM       8
AWCALLID  DIM       8
ADCALLID  DIM       8
UU        INIT      "UU"
RL        INIT      "RL"
AW        INIT      "AW"
AD        INIT      "AD"
WR        INIT      "WR"
UP        INIT      "UP"
DE        INIT      "DE"
.
OPENFILE  DIM       8
PHYSFILE  DIM       8
.
MOVEFLAG  FORM      1
SAVCCOL   FORM      3
SAVCVERT  FORM      2
DIM80     DIM       80
DIM8      DIM       8
DIM5      DIM       5
DFP1      DIM       3
DFP2      DIM       1
DOTSLASH  INIT      "./"
.
CHAR      DIM       1
.
.
CNUMOPT   FORM      2
.
FLDACC    FORM      1                  * accept mode (1=on)
X80       INIT      "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx":
                    "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
.
FCNT      FORM      2
LCNT      FORM      2
LASTTYP   FORM      1
.
PBL       INIT      ".PBL"
INC       INIT      ".INC"
COMPILER  DIM       20
BATCHFLG  FORM      1
.
LOCKFIL   FILE      ASCII, FIXED=80
LOCKNAM   INIT      "scrloc"
WHOAMI    INIT      "who am i |awk '{print $1       }'>"
.
PRGNAM    INIT      "Dynamic Control System Program Generater"
PRGID     INIT      "IBASCR05"
VERSION   INIT      "V12.00.00"
.
          MOVE     ZERO,BATCHFLG
          DISPLAY   *P1:1,*EF:
                    *P25:1,*V2LON,"Dynamic Screen Program Generator ",VERSION
          HLINE     *G37,2,1,80
          DISPLAY   *P34:10,*BLINKON,*V2LON,"Loading Program"
          OPEN      CONTROLF,"controlf"
          MOVE      "53",SECTOR
          READ      CONTROLF,SECTOR;*78,COMPILER
          CLOSE     CONTROLF
          OPEN      SCRPRGA1,"scrprgaf"
          OPEN      SCRMASA1,"scrmasaf"
          OPEN      SCRFLDA1,"scrfldaf"
          OPEN      SCRFLDA2,"scrfldaf"
          OPEN      SCRFLDA3,"scrfldaf"
          OPEN      SCRSBGA1,"scrsbgaf"
          OPEN      SCRPSTA1,"scrpstaf"
          OPEN      SCRPSTA2,"scrpstaf"
          OPEN      SCRSLTA1,"scrsltaf"
          OPEN      SCRSLTA2,"scrsltaf"
          OPEN      SCRFMAA1,"scrfmaaf"
          OPEN      SCRFMAA2,"scrfmaaf"
          OPEN      SCRFDTA1,"scrfdtaf"
          OPEN      SYSSCFA1,"sysscfaf"
          OPEN      SYSFILA1,"sysfilaf"
          OPEN      SYSSCFA2,"sysscfaf"
          OPEN      SYSFILA2,"sysfilaf"
          OPEN      SYSIDXA1,"sysidxaf"
          OPEN      SYSFLDA1,"sysfldaf"
          OPEN      SYSFLDA2,"sysfldaf"
          OPEN      SYSKVRA1,"syskvraf"
          OPEN      SCROPNA1,"scropnaf"
          OPEN      SCRINCA1,"scrincaf"
          OPEN      SCRTAGA1,"scrtagaf"
          OPEN      SCRWPDA1,"scrwpdaf"
          OPEN      SCRLOCA1,"scrlocaf"
.
          PACK      NAMEFILE,DECNAME,PORT
          REP       " 0",NAMEFILE
          MOVE      NAMEFILE,DECFNAME
          PACK      KILLDEC,ISERASE,NAMEFILE
          PACK      MAKEDEC,ISBUILD,NAMEFILE,INDEX
.
          PACK      NAMEFILE,FUNCNAME,PORT
          REP       " 0",NAMEFILE
          PACK      KILLTFUN,ISERASE,NAMEFILE
          PACK      MAKETFUN,ISBUILD,NAMEFILE,INDEX
          EXECUTE   KILLTFUN,TASKID
          EXECUTE   MAKETFUN,TASKID
          OPEN      SCRTFCA1,NAMEFILE
.
          CALL      GLOAD000     * Load Graphic Characters
.
          MOVE      "3",MINLINE
          MOVE      "24",MAXLINE
          MOVE      "1",MINCOL
          MOVE      "80",MAXCOL
.
MAIN1000  CALL      GPRG0000          * Get Program to Work On
          BRANCH    EXIT,MAIN9999
.
          CALL      OPRG0000          * Work On Program
          GOTO      MAIN1000
.
MAIN9999  CLOSE     SCRTFCA1,DELETE
.
          CLEAR     NAMEFILE
          APPEND    "tscfd1",NAMEFILE
          APPEND    PORT,NAMEFILE
          RESET     NAMEFILE
          REP       " 0",NAMEFILE
          PREP      SCFDTMP1,NAMEFILE
          CLOSE     SCFDTMP1,DELETE
.
          CHAIN     PGM
.
.-------------------------------------------
. Get Program to Work On and Lock It
.-------------------------------------------
GPRG0000  DISPLAY   *P1:1,*EF:
                    *P25:1,*V2LON,"Dynamic Screen Program Generator"
          HLINE     *G37,2,1,80
          MOVE      ONE,ACCEPT
          CALL      DPPR0000
          MOVE      ZERO,EXIT
          MOVE      FOUR,CVERT
          MOVE      "20",CCOL
          MOVE      TWO,CKEYTYP
          MOVE      "6",HTOP
          MOVE      "24",HBOT
          MOVE      "40",HLEF
          MOVE      "80",HRIG
          CALL      KSCPRA00
          BRANCH    EXIT,GPRG9100,GPRG9100
GPRG1000  MOVE      SCPRPID,KEY8
          CALL      RDSCPR1
          BRANCH    OVRCD,GPRG5000
.
          CALL      LPRG0000
          BRANCH    EXIT,GPRG0000
.
          MOVE      ZERO,EXIT
          GOTO      GPRG9999
.
GPRG5000  MOVE      ONE,ACCEPT
          CALL      CPRG0000
          CALL      SPRG0000
          BRANCH    EXIT,GPRG0000
.
          CALL      WPRG0000
          GOTO      GPRG1000
.
GPRG9100  MOVE      ONE,EXIT
          GOTO      GPRG9999
.
GPRG9999  RETURN
.
CPRG0000  MOVE      SP70,SCPRNAM
          MOVE      SP70,SCPRCBF
          MOVE      SP70,SCPRCAF
          RETURN
.-------------------------------------------------
. WPRG - Write to Files
.-------------------------------------------------
WPRG0000  PACK      KEY8,SCPRPID,SP70
          CALL      RASCPR1
          IF        OVRCD=0
            CALL      UPSCPR1
          ELSE
            CALL      WRSCPR1
          ENDIF
WPRG9999  RETURN
.-------------------------------------------------
. DPRG - Delete Program
.-------------------------------------------------
DPRG0000  PACK      KEY8,SCPRPID,SP70
          CALL      RASCPR1
          IF        OVRCD=0
            CALL      DESCPR1
          ENDIF
          CALL      PRDEL000
.
DPRG9999  RETURN
.---------------------------------------------------
. Delete Program from all Files 
.----------------------------------------------------
PRDEL000  MOVE      SCPRPID,OLDPID
.
PRDEL010  
          PACK      KEY15,OLDPID,SP70
          CALL      RSSCFL1
          CALL      RKSCFL1
          BRANCH    OVRCD,PRDEL020
          MATCH     OLDPID,SCFLPID
          GOTO      PRDEL020 IF NOT EQUAL
          PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO
          CALL      DESCFL1
          GOTO      PRDEL010
.
.
PRDEL020  
          PACK      KEY21,OLDPID,SP70
          CALL      RSSCIN1
          CALL      RKSCIN1
          BRANCH    OVRCD,PRDEL030
          MATCH     OLDPID,SCINPID
          GOTO      PRDEL030 IF NOT EQUAL
          PACK      KEY21,SCINPID,SCINTYP,SCININC
          CALL      DESCIN1
          GOTO      PRDEL020
.
.
PRDEL030  
          PACK      KEY10,OLDPID,SP70
          CALL      RSSCMA1
          CALL      RKSCMA1
          BRANCH    OVRCD,PRDEL040
          MATCH     OLDPID,SCMAPID
          GOTO      PRDEL040 IF NOT EQUAL
          PACK      KEY10,SCMAPID,SCMASID
          CALL      DESCMA1
          GOTO      PRDEL030
.
PRDEL040  
          PACK      KEY16,OLDPID,SP70
          CALL      RSSCOP1
          CALL      RKSCOP1
          BRANCH    OVRCD,PRDEL050
          MATCH     OLDPID,SCOPPID
          GOTO      PRDEL050 IF NOT EQUAL
          PACK      KEY16,SCOPPID,SCOPFIL
          CALL      DESCOP1
          GOTO      PRDEL040
.
PRDEL050  
          PACK      KEY15,OLDPID,SP70
          CALL      RSSCPS1
          CALL      RKSCPS1
          BRANCH    OVRCD,PRDEL060
          MATCH     OLDPID,SCPSPID
          GOTO      PRDEL060 IF NOT EQUAL
          PACK      KEY15,SCPSPID,SCPSSID,SCPSROW,SCPSCOL
          CALL      DESCPS1
          GOTO      PRDEL050
.
PRDEL060  
          PACK      KEY12,OLDPID,SP70
          CALL      RSSCSB1
          CALL      RKSCSB1
          BRANCH    OVRCD,PRDEL070
          MATCH     OLDPID,SCSBPID
          GOTO      PRDEL070 IF NOT EQUAL
          PACK      KEY12,SCSBPID,SCSBSID,SCSBLIN
          CALL      DESCSB1
          GOTO      PRDEL060
.
PRDEL070  
          PACK      KEY13,OLDPID,SP70
          CALL      RSSCSL1
          CALL      RKSCSL1
          BRANCH    OVRCD,PRDEL080
          MATCH     OLDPID,SCSLPID
          GOTO      PRDEL080 IF NOT EQUAL
          PACK      KEY13,SCSLPID,SCSLSID,SCSLSEL
          CALL      DESCSL1
          GOTO      PRDEL070
.
PRDEL080  
          PACK      KEY15,OLDPID,SP70
          CALL      RSSCTA1
          CALL      RKSCTA1
          BRANCH    OVRCD,PRDEL999
          MATCH     OLDPID,SCTAPID
          GOTO      PRDEL999 IF NOT EQUAL
          PACK      KEY15,SCTAPID,SCTASID,SCTAFNO
          CALL      DESCTA1
          GOTO      PRDEL080
.
PRDEL999  MOVE      OLDPID,SCPRPID
          RETURN
.----------------------------------------
. LPRG - Lock Program to be Updated
.----------------------------------------
LPRG0000  PACK      KEY8,SCPRPID,SP70
          CALL      RLSCPR1
          BRANCH    OVRCD,LPRG9000,LPRG8000
.
          CALL      RDSCLO1
          COMPARE   ZERO,OVRCD
          GOTO      LPRG7000 IF EQUAL
.
LPRG6000  DISPLAY   *P1:24,*EL,"Do you want exclusive access (Y/N) ? "
          MOVE      "38",CCOL
          MOVE      "24",CVERT
          MOVE      ANSN,DEFYESNO   * Default Y
          CALL      YORN0000
          IF        FYESNO=1
            PACK      NAMEFILE,LOCKNAM,PORT
            REP       " 0",PORT
            PACK      SCRCMD80,WHOAMI,NAMEFILE,TXT
            EXECUTE   SCRCMD80,TASKID
            OPEN      LOCKFIL,NAMEFILE
            READ      LOCKFIL,SEQ;SCLOUID
            CLOSE     LOCKFIL,DELETE
            MOVE      SCPRPID,SCLOPID
            MOVE      SCPRPID,KEY8
            CALL      WRSCLO1
          ENDIF
          GOTO      LPRG9999
LPRG7000
          MATCH     SP70,SCLOUID
          GOTO      LPRG7500 IF NOT EQUAL
          CALL      DESCLO1
          GOTO      LPRG6000

LPRG7500  PACK      NAMEFILE,LOCKNAM,PORT
          REP       " 0",PORT
          PACK      SCRCMD80,WHOAMI,NAMEFILE,TXT
          EXECUTE   SCRCMD80,TASKID
          OPEN      LOCKFIL,NAMEFILE
          READ      LOCKFIL,SEQ;KEY10
          CLOSE     LOCKFIL,DELETE
          MATCH     KEY10,SCLOUID
          GOTO      LPRG9100 IF EQUAL
          DISPLAY   *P1:24,"Program in use by : ",SCLOUID," - ";
          CALL      HITENTER
          GOTO      LPRG9000
.
LPRG8000  KEYIN     *P1:24,*EL,"Record Locked - (":
                    *V2LON,"R",*HOFF,")etry or (":
                    *V2LON,"E",*HOFF,")xit ? ",ANS
          REP       UPPLOW,ANS
          MATCH     ANSR,ANS
          GOTO      LPRG0000 IF EQUAL
          MATCH     ANSE,ANS
          GOTO      LPRG0000 IF NOT EQUAL
.
LPRG9000  MOVE      ONE,EXIT
          GOTO      LPRG9999
LPRG9100  MOVE      ZERO,EXIT
.
LPRG9999  RETURN
.----------------------------------------
. UPRG - Unlock Program
.----------------------------------------
ULOC0000  CALL      UUSCPR1
ULOC9999  RETURN
.----------------------------------------
. OPRG - Program Level Options
.----------------------------------------
OPRG0000  DISPLAY   *P1:1,*EF,"e",*V2LON,"X",*HOFF,"it, ":
                    *V2LON,"S",*HOFF,"creens, ":
                    *V2LON,"G",*HOFF,"enerate, ":
                    *V2LON,"M",*HOFF,"odify, ":
                    *V2LON,"R",*HOFF,"ename, ":
                    *V2LON,"C",*HOFF,"opy, ":
                    *V2LON,"U",*HOFF,"nix, ":
                    *V2LON,"P",*HOFF,"rint, ":
                    *V2LON,"E",*HOFF,"dit Functions"
          HLINE     *G37,2,1,80
.
OPRG0100  MOVE      ZERO,ACCEPT
          CALL      DPPR0000
.
          KEYIN     *P1:24,*EL,*EOFF,*NOEDIT,*+,ANS
          REP       UPPLOW,ANS
          MATCH     ANSX,ANS
          GOTO      OPRG9000 IF EQUAL
          MATCH     ANSM,ANS
          GOTO      OPRG1000 IF EQUAL
          MATCH     ANSE,ANS
          GOTO      OPRG2000 IF EQUAL
          MATCH     ANSG,ANS
          GOTO      OPRG3000 IF EQUAL
          MATCH     ANSS,ANS
          GOTO      OPRG4000 IF EQUAL
          MATCH     ANSR,ANS
          GOTO      OPRG5000 IF EQUAL
          MATCH     ANSU,ANS
          GOTO      OPRG6000 IF EQUAL
          MATCH     ANSP,ANS
          GOTO      OPRG7000 IF EQUAL
          MATCH     ANSC,ANS
          GOTO      OPRG8000 IF EQUAL
          BEEP
          GOTO      OPRG0100
.
OPRG1000  MOVE      ZERO,ACCEPT
          CALL      SPRG0000
          BRANCH    EXIT,OPRG9000
          GOTO      OPRG0100
.
OPRG2000  CALL      EFUNC000     * Edit a Function
          GOTO      OPRG0000
.
OPRG3000  CALL      GENER000     * Generate Options
          GOTO      OPRG0000
.
OPRG4000  CALL      SOPT0000     * Screen Options
          GOTO      OPRG0000
.
OPRG5000  CALL      RNAME000     * Rename Program ID
          GOTO      OPRG9000
.
OPRG6000  CALL      UNIXS000     * Unix Shell
          GOTO      OPRG9000
.
OPRG7000  CALL      PPRG0000     * Print Program
          GOTO      OPRG9000
.
OPRG8000  CALL      PCOPY000     * Copy from Program ID
          GOTO      OPRG9000
.
OPRG9000  CALL      ULOC0000    * Unlock Program
OPRG9999  RETURN
.----------------------------------------
. Display Program Details
.----------------------------------------
DPPR0000  DISPLAY   *P1:4,*EF,"    Program ID   : ":
                    *P1:6,*V2LON," 1.",*HOFF," Program Name : ":
                    *P1:7,*V2LON," 2.",*HOFF," Call Before  : ":
                    *P1:8,*V2LON," 3.",*HOFF," Call After   : ":
                    *P1:9,*V2LON," 4.",*HOFF," Init. Screen : ";
          DISPLAY   *P20:04,*V2LON,*EL,SCPRPID
          BRANCH    ACCEPT,DPPR9999
          DISPLAY   *P20:06,*V2LON,*EL,SCPRNAM
.
          PACK      KEY16,SCPRCBF,SCPRPID
          CALL      RDSCFM1
          IF        OVRCD=1
            PACK      KEY16,SCPRCBF,SP70
            CALL      RDSCFM1
            IF        OVRCD=1
              MOVE      SP70,SCFMDES
            ENDIF
          ENDIF
.
          DISPLAY   *P20:07,*V2LON,*EL,SCPRCBF,SP1,*HOFF,SCFMDES
          PACK      KEY16,SCPRCAF,SCPRPID
          CALL      RDSCFM1
          IF        OVRCD=1
            PACK      KEY16,SCPRCAF,SP70
            CALL      RDSCFM1
            IF        OVRCD=1
              MOVE      SP70,SCFMDES
            ENDIF
          ENDIF
.
          DISPLAY   *P20:08,*V2LON,*EL,SCPRCAF,SP1,*HOFF,SCFMDES
          DISPLAY   *P20:09,*V2LON,*EL,SCPRISC

DPPR9999  RETURN
.----------------------------------------
. Modify Program Details
.----------------------------------------
SPRG0000  MOVE      ZERO,CCITEM
SPRG0100  ADD       ONE,CCITEM
          BRANCH    ACCEPT,SPRG0500
          CALL      MDELQST
.
          COMPARE   ZERO,CCITEM
          GOTO      SPRG9000 IF EQUAL
.
          COMPARE   SEQ,CCITEM
          GOTO      SPRG9500 IF EQUAL
.
          COMPARE   "-2",CCITEM
          GOTO      SPRG9400 IF EQUAL
.
SPRG0500  BRANCH    CCITEM,SPRG1100,SPRG1200,SPRG1300,SPRG1400
.
          BRANCH    ACCEPT,SPRG0900
          BEEP
.
SPRG0900  MOVE      ZERO,ACCEPT
          GOTO      SPRG0100
.
. Program Description
.
SPRG1100  MOVE      "20",CCOL
          MOVE      "06",CVERT
          KEYIN     *PCCOL:CVERT,*RV,*V2LON,SCPRNAM:
                    *PCCOL:CVERT,*DV,*V2LON,SCPRNAM:
                    *PCCOL:CVERT
          ENDSET    SCPRNAM
          APPEND    SP70,SCPRNAM
          RESET     SCPRNAM
.
          MATCH     SP70,SCPRNAM
          GOTO      SPRG9500 IF EQUAL
          CMATCH    EXITCHAR,SCPRNAM
          GOTO      SPRG9500 IF EQUAL
          GOTO      SPRG0100
.
. Call Before
.
SPRG1200  MOVE      "20",CCOL
          MOVE      "07",CVERT
          MOVE      TWO,CKEYTYP
          MOVE      SP8,SCPRCBF
          MOVE      SP70,SCFMDES
          DISPLAY   *PCCOL:CVERT,*V2LON,SCPRCBF,SP1,*HOFF,SCFMDES
          MOVE      SCPRPID,SCFMPID
          CALL      KSCFMA00
          BRANCH    EXIT,SPRG0100,SPRG9500
          MOVE      SCFMFID,SCPRCBF
.
          PACK      KEY16,SCFMFID,SCFMPID
          CALL      RDSCFM1
          BRANCH    OVRCD,SPRG1250
.
          DISPLAY   *PCCOL:CVERT,*V2LON,SCPRCBF,SP1,*HOFF,SCFMDES
          GOTO      SPRG0100
SPRG1250  DISPLAY   *P1:24,*EL,"Function Not on File. Insert (":
                    *V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ";
          MOVE      "38",CCOL
          MOVE      "24",CVERT
          MOVE      ANSY,DEFYESNO   * Default Y
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      SPRG1200 IF EQUAL
          CALL      IFUNC000
          BRANCH    EXIT,SPRG1200
          MOVE      "20",CCOL
          MOVE      "07",CVERT
          DISPLAY   *PCCOL:CVERT,*V2LON,SCPRCBF,SP1,*HOFF,SCFMDES
          GOTO      SPRG0100
.
. Call After
.
SPRG1300  MOVE      "20",CCOL
          MOVE      "08",CVERT
          MOVE      TWO,CKEYTYP
          MOVE      SP8,SCPRCAF
          MOVE      SP70,SCFMDES
          DISPLAY   *PCCOL:CVERT,*V2LON,SCPRCAF,SP1,*HOFF,SCFMDES
          MOVE      SCPRPID,SCFMPID
          CALL      KSCFMA00
          BRANCH    EXIT,SPRG0100,SPRG9500
          MOVE      SCFMFID,SCPRCAF
.
          PACK      KEY16,SCFMFID,SCFMPID
          CALL      RDSCFM1
          BRANCH    OVRCD,SPRG1350
          DISPLAY   *PCCOL:CVERT,*V2LON,SCPRCAF,SP1,*HOFF,SCFMDES
          GOTO      SPRG0100
SPRG1350  DISPLAY   *P1:24,*EL,"Function Not on File. Insert (":
                    *V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ";
          MOVE      "38",CCOL
          MOVE      "24",CVERT
          MOVE      ANSY,DEFYESNO   * Default Y
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      SPRG1300 IF EQUAL
          CALL      IFUNC000
          BRANCH    EXIT,SPRG1300
          MOVE      "20",CCOL
          MOVE      "08",CVERT
          DISPLAY   *PCCOL:CVERT,*V2LON,SCPRCAF,SP1,*HOFF,SCFMDES
          GOTO      SPRG0100
.
SPRG1400  MOVE      "20",CCOL
          MOVE      "09",CVERT
          KEYIN     *PCCOL:CVERT,*RV,*V2LON,SCPRISC:
                    *PCCOL:CVERT,*DV,*V2LON,SCPRISC:
                    *PCCOL:CVERT
          ENDSET    SCPRISC
          APPEND    SP70,SCPRISC
          RESET     SCPRISC
          GOTO      SPRG0100
.
SPRG9000  CALL      WPRG0000     * Write or Update
          MOVE      ZERO,EXIT
          GOTO      SPRG9999
.
SPRG9400  
          CALL      DPRG0000
          MOVE      ONE,EXIT
          GOTO      SPRG9999
.
SPRG9500  MOVE      SCPRPID,KEY8
          CALL      RDSCPR1
          IF        OVRCD=0
            MOVE      ZERO,EXIT
          ELSE
            MOVE      ONE,EXIT
          ENDIF
          GOTO      SPRG9999
.
SPRG9999  RETURN
.----------------------------------------------------
. Rename Program ID
.----------------------------------------------------
RNAME000  DISPLAY   *P1:1,*EL,"Enter New Program ID : ";
          MOVE      "24",CCOL
          MOVE      "1",CVERT
          MOVE      ONE,CKEYTYP
          MOVE      SCPRPID,OLDPID
          CALL      KSCPRA00
          BRANCH    EXIT,RNAME999,RNAME999
          MOVE      SCPRPID,NEWPID
          DISPLAY   *PCCOL:CVERT,*V2LON,NEWPID
          DISPLAY   *P40:1,"Ok to Continue (",*V2LON,"Y",*HOFF,"/":
                                              *V2LON,"N",*HOFF,") ? "
          MOVE      "63",CCOL
          MOVE      ONE,CVERT
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      RNAME999 IF EQUAL
.
          MOVE      OLDPID,SCPRPID
          PACK      KEY8,OLDPID
          PACK      KEY8,SCPRPID,SP70
          CALL      RASCPR1
          IF        OVRCD=0
            CALL      DESCPR1
          ENDIF
          MOVE      NEWPID,KEY8
          MOVE      NEWPID,SCPRPID
          CALL      WPRG0000
          CALL      LPRG0000
.
RNAME010  
          PACK      KEY15,OLDPID,SP70
          CALL      RSSCFL1
          CALL      RKSCFL1
          BRANCH    OVRCD,RNAME020
          MATCH     OLDPID,SCFLPID
          GOTO      RNAME020 IF NOT EQUAL
          PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO
          CALL      DESCFL1
          MOVE      NEWPID,SCFLPID
          PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO
          CALL      WRSCFL1
          GOTO      RNAME010
.
.
RNAME020  
          PACK      KEY21,OLDPID,SP70
          CALL      RSSCIN1
          CALL      RKSCIN1
          BRANCH    OVRCD,RNAME030
          MATCH     OLDPID,SCINPID
          GOTO      RNAME030 IF NOT EQUAL
          PACK      KEY21,SCINPID,SCINTYP,SCININC
          CALL      DESCIN1
          MOVE      NEWPID,SCINPID
          PACK      KEY21,SCINPID,SCINTYP,SCININC
          CALL      WRSCIN1
          GOTO      RNAME020
.
.
RNAME030  
          PACK      KEY10,OLDPID,SP70
          CALL      RSSCMA1
          CALL      RKSCMA1
          BRANCH    OVRCD,RNAME040
          MATCH     OLDPID,SCMAPID
          GOTO      RNAME040 IF NOT EQUAL
          PACK      KEY10,SCMAPID,SCMASID
          CALL      DESCMA1
          MOVE      NEWPID,SCMAPID
          PACK      KEY10,SCMAPID,SCMASID
          MOVE      SCMASID,SCMAFSC
          CALL      WRSCMA1
          GOTO      RNAME030
.
RNAME040  
          PACK      KEY16,OLDPID,SP70
          CALL      RSSCOP1
          CALL      RKSCOP1
          BRANCH    OVRCD,RNAME050
          MATCH     OLDPID,SCOPPID
          GOTO      RNAME050 IF NOT EQUAL
          PACK      KEY16,SCOPPID,SCOPFIL
          CALL      DESCOP1
          MOVE      NEWPID,SCOPPID
          PACK      KEY16,SCOPPID,SCOPFIL
          CALL      WRSCOP1
          GOTO      RNAME040
.
RNAME050  
          PACK      KEY15,OLDPID,SP70
          CALL      RSSCPS1
          CALL      RKSCPS1
          BRANCH    OVRCD,RNAME060
          MATCH     OLDPID,SCPSPID
          GOTO      RNAME060 IF NOT EQUAL
          PACK      KEY15,SCPSPID,SCPSSID,SCPSROW,SCPSCOL
          CALL      DESCPS1
          MOVE      NEWPID,SCPSPID
          PACK      KEY15,SCPSPID,SCPSSID,SCPSROW,SCPSCOL
          CALL      WRSCPS1
          GOTO      RNAME050
.
RNAME060  
          PACK      KEY12,OLDPID,SP70
          CALL      RSSCSB1
          CALL      RKSCSB1
          BRANCH    OVRCD,RNAME070
          MATCH     OLDPID,SCSBPID
          GOTO      RNAME070 IF NOT EQUAL
          PACK      KEY12,SCSBPID,SCSBSID,SCSBLIN
          CALL      DESCSB1
          MOVE      NEWPID,SCSBPID
          PACK      KEY12,SCSBPID,SCSBSID,SCSBLIN
          CALL      WRSCSB1
          GOTO      RNAME060
.
RNAME070  
          PACK      KEY13,OLDPID,SP70
          CALL      RSSCSL1
          CALL      RKSCSL1
          BRANCH    OVRCD,RNAME080
          MATCH     OLDPID,SCSLPID
          GOTO      RNAME080 IF NOT EQUAL
          PACK      KEY13,SCSLPID,SCSLSID,SCSLSEL
          CALL      DESCSL1
          MOVE      NEWPID,SCSLPID
          PACK      KEY13,SCSLPID,SCSLSID,SCSLSEL
          CALL      WRSCSL1
          GOTO      RNAME070
.
RNAME080  
          PACK      KEY15,OLDPID,SP70
          CALL      RSSCTA1
          CALL      RKSCTA1
          BRANCH    OVRCD,RNAME999
          MATCH     OLDPID,SCTAPID
          GOTO      RNAME999 IF NOT EQUAL
          PACK      KEY15,SCTAPID,SCTASID,SCTAFNO
          CALL      DESCTA1
          MOVE      NEWPID,SCTAPID
          PACK      KEY15,SCTAPID,SCTASID,SCTAFNO
          CALL      WRSCTA1
          GOTO      RNAME080
.
RNAME999  MOVE      OLDPID,SCPRPID
          RETURN
.
.------------------------------------
. Screen Options
.------------------------------------
SOPT0000  CALL      GSCR0000
          BRANCH    EXIT,SOPT9999
.
SOPT0010  DISPLAY   *P1:1,*EF,"e",*V2LON,"X",*HOFF,"it, ":
                    *V2LON,"M",*HOFF,"odify, ":
                    *V2LON,"B",*HOFF,"ack, ":
                    *V2LON,"F",*HOFF,"ields, ":
                    *V2LON,"C",*HOFF,"opy, ":
                    *V2LON,"R",*HOFF,"emove, ":
                    *V2LON,"I",*HOFF,"tems, ":
                    *V2LON,"T",*HOFF,"ag, ":
                    *V2LON,"S",*HOFF,"elect, ":
                    *V2LON,"P",*HOFF,"rint, ":
                    *V2LON,"E",*HOFF,"dit Fun."
          HLINE     *G37,2,1,80
.
SOPT0100  MOVE      ZERO,ACCEPT
          CALL      DSMA0000
.
          KEYIN     *P1:24,*EL,*EOFF,*NOEDIT,*+,ANS
          REP       UPPLOW,ANS
          MATCH     ANSX,ANS
          GOTO      SOPT9000 IF EQUAL
          MATCH     ANSM,ANS
          GOTO      SOPT1000 IF EQUAL
          MATCH     ANSE,ANS
          GOTO      SOPT2000 IF EQUAL
          MATCH     ANSB,ANS
          GOTO      SOPT3000 IF EQUAL
          MATCH     ANSF,ANS
          GOTO      SOPT4000 IF EQUAL
          MATCH     ANSC,ANS
          GOTO      SOPT5000 IF EQUAL
          MATCH     ANSU,ANS
          GOTO      SOPT6000 IF EQUAL
          MATCH     ANSR,ANS
          GOTO      SOPT7000 IF EQUAL
          MATCH     ANSI,ANS
          GOTO      SOPT8000 IF EQUAL
          MATCH     ANST,ANS
          GOTO      SOPT8100 IF EQUAL
          MATCH     ANSS,ANS
          GOTO      SOPT8200 IF EQUAL
          MATCH     ANSP,ANS
          GOTO      SOPT8300 IF EQUAL
          BEEP
          GOTO      SOPT0100
.
. Modify Details
.---------------
SOPT1000  CALL      SSMA0000
          BRANCH    EXIT,SOPT9000
          GOTO      SOPT0010
.
. Edit Functions
.----------------
SOPT2000  CALL      EFUNC000
          GOTO      SOPT0010
.
. Paint Screen Background
.------------------------
SOPT3000  CALL      RLOAD000
          CALL      PAINT000
          GOTO      SOPT0010
.
. Edit Fields
.------------
SOPT4000  CALL      RLOAD000     * Display Background and Fields
          CALL      PTFLD000     * Edit Screen Fields
          CALL      BSCAN000     * Scan and Update Batch Type Displays
          GOTO      SOPT0010
.
. Copy
.------------
SOPT5000  CALL      SCOPY000
          GOTO      SOPT0010
.
SOPT6000  CALL      UNIXS000     * Unix Shell
          GOTO      SOPT0010
.
. Remove
.------------
SOPT7000  CALL      SREMV000
          GOTO      SOPT0010
.
. Item Maintenance
.------------------
SOPT8000  
          CALL      IEDIT000
          GOTO      SOPT0010
.
. Tags Maintenance
.------------------
SOPT8100  
          CALL      ITAGS000
          GOTO      SOPT0010
.
. Selection Maintenance
.------------------
SOPT8200  
          CALL      SEDIT000
          GOTO      SOPT0010
.
. Print
.------------------
SOPT8300  
          CALL      PRSCR000
          GOTO      SOPT0010
.
SOPT9000 
SOPT9999  RETURN
.---------------------------
. Remove Part of a Screen
.--------------------------
SREMV000  
          DISPLAY   *P1:1,*EL,"Remove ",*V2LON,"A",*HOFF,"ll, ":
                    *V2LON,"B",*HOFF,"ackground, ":
                    *V2LON,"S",*HOFF,"elections, ":
                    *V2LON,"P",*HOFF,"ositions, ":
                    *V2LON,"I",*HOFF,"tems, ":
                    *V2LON,"T",*HOFF,"ags"
.
SREMV020  KEYIN     *P1:24,*EOFF,*NOEDIT,*+,ANS
          REP       UPPLOW,ANS
          MATCH     ANSA,ANS
          GOTO      SREMV100 IF EQUAL
          MATCH     ANSB,ANS
          GOTO      SREMV200 IF EQUAL
          MATCH     ANSS,ANS
          GOTO      SREMV300 IF EQUAL
          MATCH     ANSP,ANS
          GOTO      SREMV400 IF EQUAL
          MATCH     ANSI,ANS
          GOTO      SREMV500 IF EQUAL
          MATCH     ANST,ANS
          GOTO      SREMV600 IF EQUAL
          BEEP
          GOTO      SREMV020
.
.
. Remove All
.--------------
SREMV100  
          DISPLAY   *P1:1,*EL,"Remove All from Program/Screen : ":
                    SCMAPID,"/",SCMASID
          DISPLAY   *P59:1,"Continue (Y/N) ? "
          MOVE      ONE,CVERT
          MOVE      "76",CCOL
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      SREMV900 IF EQUAL
.
          CALL      RMFLD000 * Remove Fields
          CALL      RMPST000 * Remove Edit Positions
          CALL      RMSBG000 * Remove Background
          CALL      RMSLT000 * Remove Selections
          CALL      RMTAG000 * Remove Tags
          GOTO      SREMV900
.
. Remove Background
.--------------
SREMV200  
          DISPLAY   *P1:1,*EL,"Remove Background From Program/Screen : ":
                    SCMAPID,"/",SCMASID
          DISPLAY   *P59:1,"Continue (Y/N) ? "
          MOVE      ONE,CVERT
          MOVE      "76",CCOL
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      SREMV900 IF EQUAL
.
          CALL      RMSBG000 * Remove Background
          GOTO      SREMV900
.
. Remove Selections
.--------------
SREMV300  
          DISPLAY   *P1:1,*EL,"Remove Selections From Program/Screen : ":
                    SCMAPID,"/",SCMASID
          DISPLAY   *P59:1,"Continue (Y/N) ? "
          MOVE      ONE,CVERT
          MOVE      "76",CCOL
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      SREMV900 IF EQUAL
.
          CALL      RMSLT000 * Remove Background
          GOTO      SREMV900
.
. Remove Position
.--------------
SREMV400  
          DISPLAY   *P1:1,*EL,"Remove Item Positions From Program/Screen : ":
                    SCMAPID,"/",SCMASID
          DISPLAY   *P59:1,"Continue (Y/N) ? "
          MOVE      ONE,CVERT
          MOVE      "76",CCOL
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      SREMV900 IF EQUAL
.
          CALL      RMPST000 * Remove Background
          GOTO      SREMV900
.
. Remove Fields & Tags
.-------------------
SREMV500  
          DISPLAY   *P1:1,*EL,"Remove Items & Tags From Program/Screen : ":
                    SCMAPID,"/",SCMASID
          DISPLAY   *P59:1,"Continue (Y/N) ? "
          MOVE      ONE,CVERT
          MOVE      "76",CCOL
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      SREMV900 IF EQUAL
.
          CALL      RMFLD000 * Remove Fields
          CALL      RMTAG000 * Remove Tags
          GOTO      SREMV900
.
. Remove Tags
.-------------------
SREMV600  
          DISPLAY   *P1:1,*EL,"Remove Tags From Program/Screen : ":
                    SCMAPID,"/",SCMASID
          DISPLAY   *P59:1,"Continue (Y/N) ? "
          MOVE      ONE,CVERT
          MOVE      "76",CCOL
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      SREMV900 IF EQUAL
.
          CALL      RMTAG000 * Remove Tags
          GOTO      SREMV900

SREMV900  RETURN
          
.

.----------------------
. Copy a Screen
.---------------------
SCOPY000  DISPLAY   *P1:1,*EL,"Copy from Program/Screen : "
          MOVE      ONE,CVERT
          MOVE      "28",CCOL
          MOVE      SCPRPID,COPYTPID
          MOVE      SCMASID,COPYTSID
          CALL      KSCPRA00
          BRANCH    EXIT,SCOPY900,SCOPY900
          MOVE      ONE,CVERT
          MOVE      "37",CCOL
          MOVE      SCPRPID,SCMAPID
          CALL      KSCMAA00
          BRANCH    EXIT,SCOPY900,SCOPY900
SCOPY010  DISPLAY   *P1:1,*EL,"Copy ",*V2LON,"A",*HOFF,"ll, ":
                    *V2LON,"B",*HOFF,"ackground, ":
                    *V2LON,"I",*HOFF,"tems, ":
                    *V2LON,"P",*HOFF,"artial Items, ":
                    *V2LON,"T",*HOFF,"ags, ":
                    *V2LON,"L",*HOFF,"ocal Functions"
.
SCOPY020  KEYIN     *P1:24,*EOFF,*NOEDIT,*+,ANS
          REP       UPPLOW,ANS
          MATCH     ANSA,ANS
          GOTO      SCOPY100 IF EQUAL
          MATCH     ANSB,ANS
          GOTO      SCOPY200 IF EQUAL
          MATCH     ANSI,ANS
          GOTO      SCOPY300 IF EQUAL
          MATCH     ANST,ANS
          GOTO      SCOPY400 IF EQUAL
          MATCH     ANSP,ANS
          GOTO      SCOPY500 IF EQUAL
          MATCH     ANSL,ANS
          GOTO      SCOPY600 IF EQUAL
          BEEP
          GOTO      SCOPY020
.
.
. Copy All
.--------------
SCOPY100  
          DISPLAY   *P1:1,*EL,"Copy All from Program/Screen : ":
                    SCMAPID,"/",SCMASID
          DISPLAY   *P59:1,"Continue (Y/N) ? "
          MOVE      ONE,CVERT
          MOVE      "76",CCOL
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      SCOPY900 IF EQUAL
.
          CALL      CPFLD000 * Copy Fields
          CALL      CPPST000 * Copy Edit Positions
          CALL      CPSBG000 * Copy Background
          CALL      CPSLT000 * Copy Selections
          CALL      CPTAG000 * Copy Tags
          GOTO      SCOPY900
.
. Copy Background
.--------------
SCOPY200  
          DISPLAY   *P1:1,*EL,"Copy Background From Program/Screen : ":
                    SCMAPID,"/",SCMASID
          DISPLAY   *P59:1,"Continue (Y/N) ? "
          MOVE      ONE,CVERT
          MOVE      "76",CCOL
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      SCOPY900 IF EQUAL
.
          CALL      CPSBG000 * Copy Background
          GOTO      SCOPY900
.
. Copy Fields & Tags
.-------------------
SCOPY300  
          DISPLAY   *P1:1,*EL,"Copy Items & Tags From Program/Screen : ":
                    SCMAPID,"/",SCMASID
          DISPLAY   *P59:1,"Continue (Y/N) ? "
          MOVE      ONE,CVERT
          MOVE      "76",CCOL
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      SCOPY900 IF EQUAL
.
          CALL      CPFLD000 * Copy Fields
          CALL      CPTAG000 * Copy Tags
          GOTO      SCOPY900
.
. Copy Tags
.-------------------
SCOPY400  
          DISPLAY   *P1:1,*EL,"Copy Tags From Program/Screen : ":
                    SCMAPID,"/",SCMASID
          DISPLAY   *P59:1,"Continue (Y/N) ? "
          MOVE      ONE,CVERT
          MOVE      "76",CCOL
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      SCOPY900 IF EQUAL
.
          CALL      CPTAG000 * Copy Tags
          GOTO      SCOPY900
.
. Partial Copy Fields & Tags
.---------------------------
SCOPY500  
          DISPLAY   *P1:1,*EL,"Program/Screen : ",SCMAPID,"/",SCMASID:
                              " From :        To :"
          MOVE      SCMAPID,SCFLPID
          MOVE      SCMASID,SCFLSID
          MOVE      ONE,CVERT
          MOVE      "37",CCOL
          CALL      KSCFLA00
          BRANCH    EXIT,SCOPY500,SCOPY900
          MOVE      SCFLFNO,COPYFFNO
          MOVE      ONE,CVERT
          MOVE      "47",CCOL
          CALL      KSCFLA00
          BRANCH    EXIT,SCOPY500,SCOPY900
          MOVE      SCFLFNO,COPYTFNO
          DISPLAY   *P59:1,"Continue (Y/N) ? "
          MOVE      ONE,CVERT
          MOVE      "76",CCOL
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      SCOPY900 IF EQUAL
.
          CALL      APFLD000 * Append Fields
.
          GOTO      SCOPY900
.
. Copy Local Functions
.----------------------
SCOPY600  
          DISPLAY   *P1:1,*EL,"Copy All Local Functions Program : ",SCMAPID
          DISPLAY   *P59:1,"Continue (Y/N) ? "
          MOVE      ONE,CVERT
          MOVE      "76",CCOL
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      SCOPY900 IF EQUAL
.
          CALL      CPFUN000 * Copy Local Function
          GOTO      SCOPY900
.
SCOPY900  MOVE      COPYTPID,KEY8
          CALL      RDSCPR1
          PACK      KEY10,COPYTPID,COPYTSID
          CALL      RDSCMA1
          RETURN
.
. Append Fields
.----------------
APFLD000  
          MOVE      ZERO,SECTOR
          PACK      KEY15,COPYTPID,COPYTSID,Z70
          CALL      RSSCFL1
          CALL      RPSCFL1
          IF        OVRCD=0
            MATCH     COPYTPID,SCFLPID
            IF        @EQUAL
              MATCH     COPYTSID,SCFLSID
              IF        @EQUAL
                MOVE      SCFLFNO,SECTOR
              ENDIF
            ENDIF
          ENDIF
.
          PACK      KEY15,SCPRPID,SCMASID,COPYFFNO,SP70
          CALL      RSSCFL1
APFLD100  CALL      RKSCFL1
          BRANCH    OVRCD,APFLD200
          MATCH     SCPRPID,SCFLPID
          GOTO      APFLD200 IF NOT EQUAL
          MATCH     SCMASID,SCFLSID
          GOTO      APFLD200 IF NOT EQUAL
          PACK      SAVKEY15,SCFLPID,SCFLSID,SCFLFNO
APFLD110  
          ADD       ONE,SECTOR
          PACK      KEY15,COPYTPID,COPYTSID,SECTOR
          UNPACK    KEY15,SCFLPID,SCFLSID,SCFLFNO
          CALL      RASCFL1
          COMPARE   ZERO,OVRCD
          GOTO      APFLD110 IF EQUAL
          CALL      WRSCFL1
          MOVE      SAVKEY15,KEY15
          CALL      RDSCFL1
          CALL      RDSCWP1
          PACK      KEY15,COPYTPID,COPYTSID,SECTOR
          UNPACK    KEY15,SCWPPID,SCWPSID,SCWPITM
          CALL      RASCWP1
          IF        OVRCD=0
            CALL      UPSCWP1
          ELSE
            CALL      WRSCWP1
          ENDIF
          MATCH     COPYTFNO,SCFLFNO
          GOTO      APFLD100 IF NOT EQUAL
.
APFLD200 
APFLD999  RETURN
.
.
. Copy Fields
.-------------
CPFLD000  PACK      KEY15,SCPRPID,SCMASID,SP70
          CALL      RSSCFL1
CPFLD100  CALL      RKSCFL1
          BRANCH    OVRCD,CPFLD200
          MATCH     SCPRPID,SCFLPID
          GOTO      CPFLD200 IF NOT EQUAL
          MATCH     SCMASID,SCFLSID
          GOTO      CPFLD200 IF NOT EQUAL
          PACK      SAVKEY15,SCFLPID,SCFLSID,SCFLFNO
          PACK      KEY15,COPYTPID,COPYTSID,SCFLFNO
          UNPACK    KEY15,SCFLPID,SCFLSID,SCFLFNO
          CALL      RASCFL1
          IF        OVRCD=0
            CALL      UPSCFL1
          ELSE
            CALL      WRSCFL1
          ENDIF
          MOVE      SAVKEY15,KEY15
          CALL      RDSCFL1
          GOTO      CPFLD100
.
CPFLD200  PACK      KEY15,SCPRPID,SCMASID,SP70
          CALL      RSSCWP1
CPFLD300  CALL      RKSCWP1
          BRANCH    OVRCD,CPFLD999
          MATCH     SCPRPID,SCWPPID
          GOTO      CPFLD999 IF NOT EQUAL
          MATCH     SCMASID,SCWPSID
          GOTO      CPFLD999 IF NOT EQUAL
          PACK      SAVKEY15,SCWPPID,SCWPSID,SCWPITM
          PACK      KEY15,COPYTPID,COPYTSID,SCWPITM
          UNPACK    KEY15,SCWPPID,SCWPSID,SCWPITM
          CALL      RASCWP1
          IF        OVRCD=0
            CALL      UPSCWP1
          ELSE
            CALL      WRSCWP1
          ENDIF
          MOVE      SAVKEY15,KEY15
          CALL      RDSCWP1
          GOTO      CPFLD300
.
CPFLD999  RETURN
.
. Copy Field Screen Positions
.----------------------------
CPPST000  
          PACK      KEY15,SCPRPID,SCMASID,SP70
          CALL      RSSCPS1
CPPST100  CALL      RKSCPS1
          BRANCH    OVRCD,CPPST999
          MATCH     SCPRPID,SCPSPID
          GOTO      CPPST999 IF NOT EQUAL
          MATCH     SCMASID,SCPSSID
          GOTO      CPPST999 IF NOT EQUAL
          PACK      SAVKEY15,SCPSPID,SCPSSID,SCPSROW,SCPSCOL
          PACK      KEY15,COPYTPID,COPYTSID,SCPSROW,SCPSCOL
          UNPACK    KEY15,SCPSPID,SCPSSID,SCPSROW,SCPSCOL
          CALL      RASCPS1
          IF        OVRCD=0
            CALL      UPSCPS1
          ELSE
            CALL      WRSCPS1
          ENDIF
          MOVE      SAVKEY15,KEY15
          CALL      RDSCPS1
          GOTO      CPPST100
CPPST999  RETURN
.
. Copy Screen Background
.------------------------
CPSBG000  PACK      KEY12,SCPRPID,SCMASID,SP70
          CALL      RSSCSB1
CPSBG100  CALL      RKSCSB1
          BRANCH    OVRCD,CPSBG999
          MATCH     SCPRPID,SCSBPID
          GOTO      CPSBG999 IF NOT EQUAL
          MATCH     SCMASID,SCSBSID
          GOTO      CPSBG999 IF NOT EQUAL
          PACK      SAVKEY12,SCSBPID,SCSBSID,SCSBLIN
          PACK      KEY12,COPYTPID,COPYTSID,SCSBLIN
          UNPACK    KEY12,SCSBPID,SCSBSID,SCSBLIN
          CALL      RASCSB1
          IF        OVRCD=0
            CALL      UPSCSB1
          ELSE
            CALL      WRSCSB1
          ENDIF
          MOVE      SAVKEY12,KEY12
          CALL      RDSCSB1
          GOTO      CPSBG100
CPSBG999  RETURN
.
. Copy Selections
.-----------------
CPSLT000
          PACK      KEY13,SCPRPID,SCMASID,SP70
          CALL      RSSCSL1
CPSLT100  CALL      RKSCSL1
          BRANCH    OVRCD,CPSLT999
          MATCH     SCPRPID,SCSLPID
          GOTO      CPSLT999 IF NOT EQUAL
          MATCH     SCMASID,SCSLSID
          GOTO      CPSLT999 IF NOT EQUAL
          PACK      SAVKEY13,SCSLPID,SCSLSID,SCSLSEL
          PACK      KEY13,COPYTPID,COPYTSID,SCSLSEL
          UNPACK    KEY13,SCSLPID,SCSLSID,SCSLSEL
          CALL      RASCSL1
          IF        OVRCD=0
            CALL      UPSCSL1
          ELSE
            CALL      WRSCSL1
          ENDIF
          MOVE      SAVKEY13,KEY13
          CALL      RDSCSL1
          GOTO      CPSLT100
CPSLT999  RETURN
.
. Screen Field Tags
.------------------
CPTAG000  PACK      KEY15,SCPRPID,SCMASID,SP70
          CALL      RSSCTA1
CPTAG100  CALL      RKSCTA1
          BRANCH    OVRCD,CPTAG999
          MATCH     SCPRPID,SCTAPID
          GOTO      CPTAG999 IF NOT EQUAL
          MATCH     SCMASID,SCTASID
          GOTO      CPTAG999 IF NOT EQUAL
          PACK      SAVKEY15,SCTAPID,SCTASID,SCTAFNO
          PACK      KEY15,COPYTPID,COPYTSID,SCTAFNO
          UNPACK    KEY15,SCTAPID,SCTASID,SCTAFNO
          CALL      RASCTA1
          IF        OVRCD=0
            CALL      UPSCTA1
          ELSE
            CALL      WRSCTA1
          ENDIF
          MOVE      SAVKEY15,KEY15
          CALL      RDSCTA1
          GOTO      CPTAG100
CPTAG999  RETURN
.
. Screen Functions
.------------------
CPFUN000  PACK      KEY16,SCPRPID,SP70
          CALL      RSSCFM2
CPFUN100  CALL      RKSCFM2
          BRANCH    OVRCD,CPFUN999
          MATCH     SCPRPID,SCFMPID
          GOTO      CPFUN999 IF NOT EQUAL
.
          PACK      SAVKEY16,SCFMFID,SCFMPID
          PACK      KEY16,SCFMFID,COPYTPID
          UNPACK    KEY16,SCFMFID,SCFMPID
          CALL      RASCFM1
          IF        OVRCD=0
            CALL      UPSCFM1
          ELSE
            CALL      WRSCFM1
          ENDIF
.
          PACK      KEY21,SAVKEY16,SP70
          CALL      RSSCFD1
CPFUN200  CALL      RKSCFD1
          BRANCH    OVRCD,CPFUN100
          PACK      KEY21,SCFDFID,SCFDPID,SP70
          MATCH     SAVKEY16,KEY21
          GOTO      CPFUN100 IF NOT EQUAL
          PACK      KEY21,SCFDFID,COPYTPID,SCFDLIN
          UNPACK    KEY21,SCFDFID,SCFDPID,SCFDLIN
          CALL      RASCFD1
          IF        OVRCD=0
            CALL      UPSCFD1
          ELSE
            CALL      WRSCFD1
          ENDIF
          PACK      KEY21,SAVKEY16,SCFDLIN
          CALL      RDSCFD1
          GOTO      CPFUN200
.
CPFUN999  RETURN
.
. Remove Fields
.-------------
RMFLD000  PACK      KEY15,SCPRPID,SCMASID,SP70
          CALL      RSSCFL1
          CALL      RKSCFL1
          BRANCH    OVRCD,RMFLD200
          MATCH     SCPRPID,SCFLPID
          GOTO      RMFLD200 IF NOT EQUAL
          MATCH     SCMASID,SCFLSID
          GOTO      RMFLD200 IF NOT EQUAL
          PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO
          CALL      DESCFL1
          GOTO      RMFLD000
.
RMFLD200  PACK      KEY15,SCPRPID,SCMASID,SP70
          CALL      RSSCWP1
          CALL      RKSCWP1
          BRANCH    OVRCD,RMFLD999
          MATCH     SCPRPID,SCWPPID
          GOTO      RMFLD999 IF NOT EQUAL
          MATCH     SCMASID,SCWPSID
          GOTO      RMFLD999 IF NOT EQUAL
          PACK      KEY15,SCWPPID,SCWPSID,SCWPITM
          CALL      DESCWP1
          GOTO      RMFLD200
.
RMFLD999  RETURN
.
. Remove Field Screen Positions
.----------------------------
RMPST000  
          PACK      KEY15,SCPRPID,SCMASID,SP70
          CALL      RSSCPS1
          CALL      RKSCPS1
          BRANCH    OVRCD,RMPST999
          MATCH     SCPRPID,SCPSPID
          GOTO      RMPST999 IF NOT EQUAL
          MATCH     SCMASID,SCPSSID
          GOTO      RMPST999 IF NOT EQUAL
          PACK      KEY15,SCPSPID,SCPSSID,SCPSROW,SCPSCOL
          CALL      DESCPS1
          GOTO      RMPST000
RMPST999  RETURN
.
. Remove Screen Background
.------------------------
RMSBG000  PACK      KEY12,SCPRPID,SCMASID,SP70
          CALL      RSSCSB1
          CALL      RKSCSB1
          BRANCH    OVRCD,RMSBG999
          MATCH     SCPRPID,SCSBPID
          GOTO      RMSBG999 IF NOT EQUAL
          MATCH     SCMASID,SCSBSID
          GOTO      RMSBG999 IF NOT EQUAL
          PACK      KEY12,SCSBPID,SCSBSID,SCSBLIN
          CALL      DESCSB1
          GOTO      RMSBG000
RMSBG999  RETURN
.
. Remove Selections
.-----------------
RMSLT000
          PACK      KEY13,SCPRPID,SCMASID,SP70
          CALL      RSSCSL1
          CALL      RKSCSL1
          BRANCH    OVRCD,RMSLT999
          MATCH     SCPRPID,SCSLPID
          GOTO      RMSLT999 IF NOT EQUAL
          MATCH     SCMASID,SCSLSID
          GOTO      RMSLT999 IF NOT EQUAL
          PACK      KEY13,SCSLPID,SCSLSID,SCSLSEL
          CALL      DESCSL1
          GOTO      RMSLT000
RMSLT999  RETURN
.
. Screen Field Tags
.------------------
RMTAG000  PACK      KEY15,SCPRPID,SCMASID,SP70
          CALL      RSSCTA1
          CALL      RKSCTA1
          BRANCH    OVRCD,RMTAG999
          MATCH     SCPRPID,SCTAPID
          GOTO      RMTAG999 IF NOT EQUAL
          MATCH     SCMASID,SCTASID
          GOTO      RMTAG999 IF NOT EQUAL
          PACK      KEY15,SCTAPID,SCTASID,SCTAFNO
          CALL      DESCTA1
          GOTO      RMTAG000
RMTAG999  RETURN
.
.-------------------------------------------
. Get Screen to Work On 
.-------------------------------------------
GSCR0000  DISPLAY   *P1:1,*EF:
                    *P25:1,*V2LON,"Dynamic Screen Program Generator"
          HLINE     *G37,2,1,80
          MOVE      ONE,ACCEPT
          CALL      DSMA0000   * Display Details
          MOVE      ZERO,EXIT
          MOVE      FIVE,CVERT
          MOVE      "20",CCOL
          MOVE      TWO,CKEYTYP
          MOVE      "6",HTOP
          MOVE      "24",HBOT
          MOVE      "40",HLEF
          MOVE      "80",HRIG
          MOVE      SCPRPID,SCMAPID
          CALL      KSCMAA00
          BRANCH    EXIT,GSCR9000,GSCR9000
.
GSCR1000  PACK      KEY10,SCPRPID,SCMASID
          CALL      RDSCMA1
          BRANCH    OVRCD,GSCR5000
          MOVE      ZERO,EXIT
          GOTO      GSCR9999
.
GSCR5000  MOVE      ONE,ACCEPT
          CALL      CSMA0000   * Display Details
          CALL      SSMA0000   * Add Details
          BRANCH    EXIT,GSCR0000
          MOVE      ZERO,EXIT
          GOTO      GSCR9999
.
GSCR9000  MOVE      ONE,EXIT
          GOTO      GSCR9999
.
GSCR9999  RETURN
.
CSMA0000  MOVE      SP70,SCMADES
          MOVE      SP70,SCMACBF
          MOVE      SP70,SCMACAF
          MOVE      ZERO,SCMATYP
          MOVE      ZERO,SCMASEX
          MOVE      SP70,SCMAFSC
          MOVE      ZERO,SCMACLR
          MOVE      ZERO,SCMALEF
          MOVE      ZERO,SCMATOP
          MOVE      ZERO,SCMABOT
          MOVE      ZERO,SCMARIG
          RETURN 
.---------------------------------- 
. Display Screen Details
.----------------------------------
DSMA0000  DISPLAY   *P1:4,*EF,"    Program ID   : ":
                    *V2LON,*EF,SCPRPID,SP1,*HOFF,SCPRNAM:
                    *P1:5,*EF,"    Screen  ID   : ":
                    *P1:07,*EF,*V2LON," 1.",*HOFF," Description  : ":
                    *P1:08,*EF,*V2LON," 2.",*HOFF," Top/Left     : ":
                    *P1:09,*EF,*V2LON," 3.",*HOFF," Bottom/Right : ": 
                    *P1:10,*EF,*V2LON," 4.",*HOFF," Screen Type  : ":
                    *P1:11,*EF,*V2LON," 5.",*HOFF," Call Before  : ":
.                    *P1:12,*EF,*V2LON," 6.",*HOFF," Call Aft CF  : ":
.                    *P1:13,*EF,*V2LON," 7.",*HOFF," Call Aft KY  : ":
.                    *P1:14,*EF,*V2LON," 8.",*HOFF," Call Bef DF  : ":
.                    *P1:15,*EF,*V2LON," 9.",*HOFF," Call Bef SF  : ":
                    *P1:12,*EF,*V2LON," 6.",*HOFF," Call After   : ":
                    *P1:13,*EF,*V2LON," 7.",*HOFF," Select Exit  : ":
                    *P1:14,*EF,*V2LON," 8.",*HOFF," Clear Fields : "
          DISPLAY   *P20:05,*V2LON,*EL,SCMASID
          BRANCH    ACCEPT,DSMA9999
.
          DISPLAY   *P20:07,*V2LON,*EL,SCMADES:
                    *P20:08,*V2LON,SCMATOP,*HOFF,"/",*V2LON,SCMALEF:
                    *P20:09,*V2LON,SCMABOT,*HOFF,"/",*V2LON,SCMARIG
          MOVE      SCRNTYP0,SCRNTYP
          LOAD      SCRNTYP,SCMATYP,SCRNTYP1
          DISPLAY   *P20:10,*V2LON,SCRNTYP
.
          PACK      KEY16,SCMACBF,SCPRPID
          CALL      RDSCFM1
          IF        OVRCD=1
            PACK      KEY16,SCMACBF,SP70
            CALL      RDSCFM1
            IF        OVRCD=1
              MOVE      SP70,SCFMDES
            ENDIF
          ENDIF
.
          DISPLAY   *P20:11,*V2LON,*EL,SCMACBF,SP1,*HOFF,SCFMDES
.
.          MOVE      SCMACBK,KEY8
.          CALL      RDSCFM1
.          IF        OVRCD=1
.            MOVE      SP70,SCFMDES
.          ENDIF
.          DISPLAY   *P20:12,*V2LON,*EL,SCMACBK,SP1,*HOFF,SCFMDES
.
.          MOVE      SCMACAK,KEY8
.          CALL      RDSCFM1
.          IF        OVRCD=1
.            MOVE      SP70,SCFMDES
.          ENDIF
.          DISPLAY   *P20:13,*V2LON,*EL,SCMACAK,SP1,*HOFF,SCFMDES
.
.          MOVE      SCMACBD,KEY8
.          CALL      RDSCFM1
.          IF        OVRCD=1
.            MOVE      SP70,SCFMDES
.          ENDIF
.          DISPLAY   *P20:14,*V2LON,*EL,SCMACBD,SP1,*HOFF,SCFMDES
..
.          MOVE      SCMACBS,KEY8
.          CALL      RDSCFM1
.          IF        OVRCD=1
.            MOVE      SP70,SCFMDES
.          ENDIF
.          DISPLAY   *P20:15,*V2LON,*EL,SCMACBS,SP1,*HOFF,SCFMDES
.
          PACK      KEY16,SCMACAF,SCPRPID
          CALL      RDSCFM1
          IF        OVRCD=1
            PACK      KEY16,SCMACAF,SP70
            CALL      RDSCFM1
            IF        OVRCD=1
              MOVE      SP70,SCFMDES
            ENDIF
          ENDIF
          DISPLAY   *P20:12,*V2LON,*EL,SCMACAF,SP1,*HOFF,SCFMDES
.
          MOVE      SCRNSEX0,SCRNSEX
          MOVE      SCMASEX,F1
          LOAD      SCRNSEX,F1,SCRNSEX1
          DISPLAY   *P20:13,*V2LON,SCRNSEX
.
          MOVE      SCRNCLR0,SCRNCLR
          MOVE      SCMACLR,F1
          LOAD      SCRNCLR,F1,SCRNCLR1,SCRNCLR2
          DISPLAY   *P20:14,*V2LON,SCRNCLR
.
DSMA9999  RETURN
.----------------------------------------
. Modify Screen Details
.----------------------------------------
SSMA0000  MOVE      ZERO,CCITEM
SSMA0100  ADD       ONE,CCITEM
          BRANCH    ACCEPT,SSMA0500
          CALL      MDELQST
.
          COMPARE   ZERO,CCITEM
          GOTO      SSMA9000 IF EQUAL
.
          COMPARE   SEQ,CCITEM
          GOTO      SSMA9500 IF EQUAL
.
          COMPARE   "-2",CCITEM
          GOTO      SSMA9400 IF EQUAL
.
SSMA0500  BRANCH    CCITEM,SSMA1100,SSMA1200,SSMA1300,SSMA1400,SSMA1500:
                           SSMA2000,SSMA2100,SSMA2200
.
          BRANCH    ACCEPT,SSMA0900
          BEEP
.
SSMA0900  MOVE      ZERO,ACCEPT
          GOTO      SSMA0100
.
. Screen Description
.
SSMA1100  MOVE      "07",CVERT
          MOVE      "20",CCOL
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,SCMADES:
                    *PCCOL:CVERT,*DV,*V2LON,SCMADES:
                    *PCCOL:CVERT
          ENDSET    SCMADES
          APPEND    SP70,SCMADES
          RESET     SCMADES
.
          MATCH     SP70,SCMADES
          GOTO      SSMA9500 IF EQUAL
          CMATCH    EXITCHAR,SCMADES
          GOTO      SSMA9500 IF EQUAL
          GOTO      SSMA0100
.
. Top/Left
.
SSMA1200  MOVE      "08",CVERT
          MOVE      "20",CCOL
          KEYIN     *PCCOL:CVERT,*V2LON,SCMATOP:
                    *PCCOL:CVERT,*DV,*V2LON,SCMATOP,*HOFF,"/",*V2LON,SCMALEF:
                    *PCCOL:CVERT,*DV,*V2LON,SCMATOP:
                    *HOFF,"/",*V2LON,*DV,SCMALEF
          GOTO      SSMA0100
.
. Bottom/Right
.
SSMA1300  MOVE      "09",CVERT
          MOVE      "20",CCOL
          KEYIN     *PCCOL:CVERT,*V2LON,SCMABOT:
                    *PCCOL:CVERT,*DV,*V2LON,SCMABOT,*HOFF,"/",*V2LON,SCMARIG:
                    *PCCOL:CVERT,*DV,*V2LON,SCMABOT:
                    *HOFF,"/",*V2LON,*DV,SCMARIG
          GOTO      SSMA0100
.
. Screen Type
.
SSMA1400  MOVE      "20",CCOL
          MOVE      "10",CVERT
          DISPLAY   *P1:24,*EL,*V2LON,"0. ",*HOFF,"Normal, ":
                               *V2LON,"1. ",*HOFF,"Virtual "
          KEYIN     *PCCOL:CVERT,*V2LON,SCMATYP
          MOVE      SCRNTYP0,SCRNTYP
          LOAD      SCRNTYP,SCMATYP,SCRNTYP1
          IF        SCMATYP>1|SCMATYP<0
            BEEP
            GOTO    SSMA1400
          ENDIF
          DISPLAY   *PCCOL:CVERT,*V2LON,SCRNTYP
          GOTO      SSMA0100
.
. Call Before
.
SSMA1500  MOVE      "20",CCOL
          MOVE      "11",CVERT
          MOVE      TWO,CKEYTYP
          MOVE      SP8,SCMACBF
          MOVE      SP70,SCFMDES
          DISPLAY   *PCCOL:CVERT,*V2LON,SCMACBF,SP1,*HOFF,SCFMDES
          MOVE      SCPRPID,SCFMPID
          CALL      KSCFMA00
          BRANCH    EXIT,SSMA0100,SSMA9500
          MOVE      SCFMFID,SCMACBF
.
          PACK      KEY16,SCFMFID,SCFMPID
          CALL      RDSCFM1
          BRANCH    OVRCD,SSMA1550
.
          DISPLAY   *PCCOL:CVERT,*V2LON,SCMACBF,SP1,*HOFF,SCFMDES
          GOTO      SSMA0100
SSMA1550  DISPLAY   *P1:24,*EL,"Function Not on File. Insert (":
                    *V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ";
          MOVE      "38",CCOL
          MOVE      "24",CVERT
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      SSMA1500 IF EQUAL
          CALL      IFUNC000
          BRANCH    EXIT,SSMA1500
          MOVE      "20",CCOL
          MOVE      "11",CVERT
          DISPLAY   *PCCOL:CVERT,*V2LON,SCMACBF,SP1,*HOFF,SCFMDES
          GOTO      SSMA0100
.
. Call After CF
.
.SSMA1600  MOVE      "20",CCOL
.          MOVE      "12",CVERT
.          MOVE      TWO,CKEYTYP
.          MOVE      SP8,SCMACBK
.          MOVE      SP70,SCFMDES
.          DISPLAY   *PCCOL:CVERT,*V2LON,SCMACBK,SP1,*HOFF,SCFMDES
.          CALL      KSCFMA00
.          BRANCH    EXIT,SSMA0100,SSMA9500
.          MOVE      SCFMFID,SCMACBK
.          PACK      KEY8,SCFMFID
.          CALL      RDSCFM1
.          BRANCH    OVRCD,SSMA1650
.          DISPLAY   *PCCOL:CVERT,*V2LON,SCMACBK,SP1,*HOFF,SCFMDES
.          GOTO      SSMA0100
.SSMA1650  DISPLAY   *P1:24,*EL,"Function Not on File. Insert (":
.                    *V2LON,"Y",*HOFF,"/":
.                    *V2LON,"N",*HOFF,") ? ";
.          MOVE      "38",CCOL
.          MOVE      "24",CVERT
.          CALL      YORN0000
.          COMPARE   ZERO,FYESNO
.          GOTO      SSMA1600 IF EQUAL
.          CALL      IFUNC000
.          BRANCH    EXIT,SSMA1600
.          MOVE      "20",CCOL
.          MOVE      "12",CVERT
.          DISPLAY   *PCCOL:CVERT,*V2LON,SCMACBK,SP1,*HOFF,SCFMDES
.          GOTO      SSMA0100
..
.. Call After Key 
..
.SSMA1700  MOVE      "20",CCOL
.          MOVE      "13",CVERT
.          MOVE      TWO,CKEYTYP
.          MOVE      SP8,SCMACAK
.          MOVE      SP70,SCFMDES
.          DISPLAY   *PCCOL:CVERT,*V2LON,SCMACAK,SP1,*HOFF,SCFMDES
.          CALL      KSCFMA00
.          BRANCH    EXIT,SSMA0100,SSMA9500
.          MOVE      SCFMFID,SCMACAK
.          PACK      KEY8,SCFMFID
.          CALL      RDSCFM1
.          BRANCH    OVRCD,SSMA1750
.          DISPLAY   *PCCOL:CVERT,*V2LON,SCMACAK,SP1,*HOFF,SCFMDES
.          GOTO      SSMA0100
.SSMA1750  DISPLAY   *P1:24,*EL,"Function Not on File. Insert (":
.                    *V2LON,"Y",*HOFF,"/":
.                    *V2LON,"N",*HOFF,") ? ";
.          MOVE      "38",CCOL
.          MOVE      "24",CVERT
.          CALL      YORN0000
.          COMPARE   ZERO,FYESNO
.          GOTO      SSMA1700 IF EQUAL
.          CALL      IFUNC000
.          BRANCH    EXIT,SSMA1700
.          MOVE      "20",CCOL
.          MOVE      "13",CVERT
.          DISPLAY   *PCCOL:CVERT,*V2LON,SCMACAK,SP1,*HOFF,SCFMDES
.          GOTO      SSMA0100
..
.. Call After Key 
..
.SSMA1800  MOVE      "20",CCOL
.          MOVE      "14",CVERT
.          MOVE      TWO,CKEYTYP
.          MOVE      SP8,SCMACBD
.          MOVE      SP70,SCFMDES
.          DISPLAY   *PCCOL:CVERT,*V2LON,SCMACBD,SP1,*HOFF,SCFMDES
.          CALL      KSCFMA00
.          BRANCH    EXIT,SSMA0100,SSMA9500
.          MOVE      SCFMFID,SCMACBD
.          PACK      KEY8,SCFMFID
.          CALL      RDSCFM1
.          BRANCH    OVRCD,SSMA1850
.          DISPLAY   *PCCOL:CVERT,*V2LON,SCMACBD,SP1,*HOFF,SCFMDES
.          GOTO      SSMA0100
.SSMA1850  DISPLAY   *P1:24,*EL,"Function Not on File. Insert (":
.                    *V2LON,"Y",*HOFF,"/":
.                    *V2LON,"N",*HOFF,") ? ";
.          MOVE      "38",CCOL
.          MOVE      "24",CVERT
.          CALL      YORN0000
.          COMPARE   ZERO,FYESNO
.          GOTO      SSMA1800 IF EQUAL
.          CALL      IFUNC000
.          BRANCH    EXIT,SSMA1800
.          MOVE      "20",CCOL
.          MOVE      "14",CVERT
.          DISPLAY   *PCCOL:CVERT,*V2LON,SCMACBD,SP1,*HOFF,SCFMDES
..          GOTO      SSMA0100
.
. Call After
.
.SSMA1900  MOVE      "20",CCOL
.          MOVE      "15",CVERT
.          MOVE      TWO,CKEYTYP
.          MOVE      SP8,SCMACBS
.          MOVE      SP70,SCFMDES
.          DISPLAY   *PCCOL:CVERT,*V2LON,SCMACBS,SP1,*HOFF,SCFMDES
.          CALL      KSCFMA00
.          BRANCH    EXIT,SSMA0100,SSMA9500
.          MOVE      SCFMFID,SCMACBS
.          PACK      KEY8,SCFMFID
.          CALL      RDSCFM1
.          BRANCH    OVRCD,SSMA1950
.          DISPLAY   *PCCOL:CVERT,*V2LON,SCMACBS,SP1,*HOFF,SCFMDES
.          GOTO      SSMA0100
.SSMA1950  DISPLAY   *P1:24,*EL,"Function Not on File. Insert (":
.                    *V2LON,"Y",*HOFF,"/":
.                    *V2LON,"N",*HOFF,") ? ";
.          MOVE      "38",CCOL
.          MOVE      "24",CVERT
.          CALL      YORN0000
.          COMPARE   ZERO,FYESNO
.          GOTO      SSMA1900 IF EQUAL
.          CALL      IFUNC000
.          BRANCH    EXIT,SSMA1900
.          MOVE      "20",CCOL
.          MOVE      "15",CVERT
.          DISPLAY   *PCCOL:CVERT,*V2LON,SCMACBS,SP1,*HOFF,SCFMDES
.          GOTO      SSMA0100
..
.. Call After
..
SSMA2000  MOVE      "20",CCOL
          MOVE      "12",CVERT
          MOVE      TWO,CKEYTYP
          MOVE      SP8,SCMACAF
          MOVE      SP70,SCFMDES
          DISPLAY   *PCCOL:CVERT,*V2LON,SCMACAF,SP1,*HOFF,SCFMDES
          MOVE      SCPRPID,SCFMPID
          CALL      KSCFMA00
          BRANCH    EXIT,SSMA0100,SSMA9500
          MOVE      SCFMFID,SCMACAF
          PACK      KEY16,SCFMFID,SCFMPID
          CALL      RDSCFM1
          BRANCH    OVRCD,SSMA2050
          DISPLAY   *PCCOL:CVERT,*V2LON,SCMACAF,SP1,*HOFF,SCFMDES
          GOTO      SSMA0100
SSMA2050  DISPLAY   *P1:24,*EL,"Function Not on File. Insert (":
                    *V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ";
          MOVE      "38",CCOL
          MOVE      "24",CVERT
          MOVE      ANSY,DEFYESNO   * Default Y
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      SSMA2000 IF EQUAL
          CALL      IFUNC000
          BRANCH    EXIT,SSMA2000
          MOVE      "20",CCOL
          MOVE      "16",CVERT
          DISPLAY   *PCCOL:CVERT,*V2LON,SCMACAF,SP1,*HOFF,SCFMDES
          GOTO      SSMA0100
.
. Select Exit Type
.----------------------------------------
SSMA2100  MOVE      "20",CCOL
          MOVE      "13",CVERT
          DISPLAY   *P1:24,*EL,*V2LON,"0. ",*HOFF,"Restart, ":
                               *V2LON,"1. ",*HOFF,"Exit "
          KEYIN     *PCCOL:CVERT,*V2LON,SCMASEX
          MOVE      SCRNSEX0,SCRNSEX
          MOVE      SCMASEX,F1
          LOAD      SCRNSEX,F1,SCRNSEX1
          IF        F1>1|F1<0
            BEEP
            GOTO    SSMA2100
          ENDIF
          DISPLAY   *PCCOL:CVERT,*V2LON,SCRNSEX
          GOTO      SSMA0100
.
. Clear Fields Type
.----------------------------------------
SSMA2200  MOVE      "20",CCOL
          MOVE      "14",CVERT
          DISPLAY   *P1:24,*EL,*V2LON,"0. ",*HOFF,"Clear All, ":
                               *V2LON,"1. ",*HOFF,"Clear Select & Key Fields, ":
                               *V2LON,"2. ",*HOFF,"No Clear Field"
          KEYIN     *PCCOL:CVERT,*V2LON,SCMACLR
          MOVE      SCRNCLR0,SCRNCLR
          MOVE      SCMACLR,F1
          LOAD      SCRNCLR,F1,SCRNCLR1,SCRNCLR2
          IF        F1>2|F1<0
            BEEP
            GOTO    SSMA2200
          ENDIF
          DISPLAY   *PCCOL:CVERT,*V2LON,SCRNCLR
          GOTO      SSMA0100
.
SSMA9000  CALL      WSCR0000     * Write or Update
          MOVE      ZERO,EXIT
          GOTO      SSMA9999
.
SSMA9400  CALL      DSCR0000     * Delete
          MOVE      ONE,EXIT
          GOTO      SSMA9999
.
SSMA9500  PACK      KEY10,SCPRPID,SCMASID
          CALL      RDSCMA1
          IF        OVRCD=0
            MOVE      ZERO,EXIT
            CALL      DSMA0000
          ELSE
            MOVE      ONE,EXIT
          ENDIF
          GOTO      SSMA9999
.
SSMA9999  RETURN
.-------------------------------------------------
. WSCR - Write to Files
.-------------------------------------------------
WSCR0000  PACK      KEY10,SCMAPID,SCMASID,SP70
          MOVE      SCMASID,SCMAFSC
          CALL      RASCMA1
          IF        OVRCD=0
            CALL      UPSCMA1
          ELSE
            CALL      WRSCMA1
          ENDIF
WSCR9999  RETURN
.-------------------------------------------------
. DSCR - Delete Record
. ************* Expand for all Files *************
.-------------------------------------------------
DSCR0000  CALL      RMFLD000 * Remove Fields
          CALL      RMPST000 * Remove Edit Positions
          CALL      RMSBG000 * Remove Background
          CALL      RMSLT000 * Remove Selections
          CALL      RMTAG000 * Remove Tags
          PACK      KEY10,SCMAPID,SCMASID,SP70
          CALL      RASCMA1
          IF        OVRCD=0
            CALL      DESCMA1
          ENDIF
DSCR9999  RETURN
.
.------------------------------------
. Paint a Screen
.------------------------------------
PAINT000  
          MOVE      SCMATOP,MINLINE
          MOVE      SCMALEF,MINCOL
          MOVE      SCMABOT,MAXLINE
          MOVE      SCMARIG,MAXCOL
.
          MOVE      MINCOL,CCOL
PAINT060  MOVE      MINLINE,CVERT
          MOVE      ONE,SCRNSAVE
PAINT090  DISPLAY   *P1:1,*EL
          DISPLAY   *P1:1,"e",*V2LON,"X",*HOFF,"it, ":
                    *V2LON,"S",*HOFF,"ave, ":
                    *V2LON,"C",*HOFF,"ancel, ":
                    *V2LON,"V",*HOFF,"ideo, ":
                    *V2LON,"E",*HOFF,"dit, ":
                    *V2LON,"G",*HOFF,"raphic, ":
                    *V2LON,"M",*HOFF,"ove"
          HLINE     *G37,2,1,80
.
PAINT100  KEYIN     *PCCOL:CVERT,*EOFF,*NOEDIT,*+,*CURSON,ANS;
          CALL      KMOVE000
          BRANCH    EXIT,PAINT100
          REP       UPPLOW,ANS
.
          MATCH     ANSE,ANS
          GOTO      PAINT200 IF EQUAL
.
          MATCH     ANSV,ANS
          GOTO      PAINT300 IF EQUAL
.
          MATCH     ANSG,ANS
          GOTO      PAINT500 IF EQUAL
.
          MATCH     ANSM,ANS
          GOTO      PAINT600 IF EQUAL
.
          MATCH     ANSS,ANS
          GOTO      PAINT700 IF EQUAL
.
          MATCH     ANSX,ANS
          GOTO      PAINT800 IF EQUAL
.
          MATCH     ANSC,ANS
          GOTO      PAINT900 IF EQUAL
          MATCH     ANSU,ANS
          GOTO      PAINT950 IF EQUAL
          GOTO      PAINT100
.
. Edit part of the Screen
.------------------------
PAINT200  CALL      EDIT0000
          GOTO      PAINT090
.
. Set Video Attributes
.---------------------
PAINT300  CALL      VIDEO000
          GOTO      PAINT090
.
. Graphic
.------------
PAINT500  CALL      GRAPH000
          GOTO      PAINT090
.
. Move   
.------------
PAINT600  CALL      MOVE0000
          GOTO      PAINT090
.
. Save Screen
.-------------
PAINT700  CALL      SAVE0000
          DISPLAY   *P13:1,"Saved - ";
          CALL      HITENT01
          GOTO      PAINT090
.
. Exit - Disable if screen modified and not saved
.-------------------------------------------------
PAINT800  BRANCH    SCRNSAVE,PAINT999
          KEYIN     *P1:1,*EL:
                    *P1:1,"Screen Background must be Saved First - ";
          CALL      HITENT01 
          GOTO      PAINT090
.
. Cancel - Reload Screen
.-----------------------
PAINT900  CALL      RLOAD000
          GOTO      PAINT090
.
PAINT950  CALL      UNIXS000     * Unix Shell
          GOTO      PAINT090
.
PAINT999  RETURN
.
.----------------------------------------
. Edit Screen
.----------------------------------------
EDIT0000  MOVE      ZERO,SCRNSAVE
          DISPLAY   *P1:1,*EL
          DISPLAY   *P1:1,"Edit, <",*V2LON,"Enter",*HOFF,"> to Exit"
EDIT0100  GETVAR    CDATA,CATTR,CCOL,CVERT
          KEYIN     *PCCOL:CVERT,*EOFF,*NOEDIT,*+,*CURSON,ANS;
          CALL      KMOVE000
          BRANCH    EXIT,EDIT0100
          RESET     ANS
          GOTO      EDIT0900 IF EOS
          MOVE      ANS,CDATA
          PUTVAR    CDATA,CATTR,CCOL,CVERT
          COMPARE   MAXCOL,CCOL
          GOTO      EDIT0100 IF EQUAL
          ADD       ONE,CCOL
          GOTO      EDIT0100
EDIT0900
          RETURN
.----------------------------------------
. Video Edit
.----------------------------------------
VIDEO000  MOVE      ZERO,SCRNSAVE
          DISPLAY   *P1:1,*EL
          DISPLAY   *P1:1,"e",*V2LON,"X",*HOFF,"it, ":
                    *V2LON,"H",*HOFF,"ighlight, ":
                    *V2LON,"R",*HOFF,"everse, ":
                    *V2LON,"B",*HOFF,"link, ":
                    *V2LON,"U",*HOFF,"nderline "
          MOVE      ZERO,FBLINK
          MOVE      ZERO,FV2LON
          MOVE      ZERO,FHON
          MOVE      ZERO,FULON
VIDEO100  GETVAR    CDATA,CATTR,CCOL,CVERT
          CALL      PUTCH000
          KEYIN     *PCCOL:CVERT,*EOFF,*NOEDIT,*+,*CURSON,ANS;
          CALL      KMOVE000
          BRANCH    EXIT,VIDEO100
          REP       UPPLOW,ANS
          MATCH     ANSX,ANS
          GOTO      VIDEO900 IF EQUAL
          REP       "0z1z2z3z4z5z6z7z8z9z",ANS
          REP       "B1U2H3R4",ANS
          TYPE      ANS
          GOTO      VIDEO100 IF NOT EQUAL
          MOVE      ANS,F1
          LOAD      FLAG,F1,FBLINK,FULON,FV2LON,FHON
          BRANCH    FLAG,VIDEO200
          STORE     ONE,F1,FBLINK,FULON,FV2LON,FHON
          GOTO      VIDEO100
VIDEO200  STORE     ZERO,F1,FBLINK,FULON,FV2LON,FHON
          GOTO      VIDEO100
.
VIDEO900  
          RETURN
.------------------------------------------
. Save Screen to ID
.------------------------------------------
SAVE0000  MOVE      CVERT,SVERT
          MOVE      CCOL,SCOL
          DISPLAY   *P1:1,*EL
          DISPLAY   *P1:1,*V2LON,SCPRPID,*HOFF,"/",*V2LON,SCMASID
          MOVE      SCPRPID,SCSBPID
          MOVE      SCMASID,SCSBSID
          ASSIGN    MINLINE-1,LINE
.
SAVE1000  ADD       ONE,LINE
.
          PACK      SCSBDAT,SP70,SP70
          PACK      SCSBATT,SP70,SP70
          GETVAR    SCSBDAT,SCSBATT,1,LINE
.
          MOVE      LINE,SCSBLIN
          PACK      KEY12,SCSBPID,SCSBSID,SCSBLIN
          CALL      DESCSB1
          MATCH     SP80,SCSBDAT
          GOTO      SAVE1100 IF EQUAL
          CALL      WRSCSB1
.
SAVE1100  COMPARE   MAXLINE,LINE
          GOTO      SAVE1000 IF NOT EQUAL
          MOVE      ONE,SCRNSAVE
.
SAVE9999  MOVE      SVERT,CVERT
          MOVE      SCOL,CCOL
          RETURN
.----------------------------------------
. Reload a Screen Display
.----------------------------------------
RLOAD000  DISPLAY   *P1:1,*EL,*P1:3,*EF
.
          MOVE      SCMATOP,MINLINE
          MOVE      SCMALEF,MINCOL
          MOVE      SCMABOT,MAXLINE
          MOVE      SCMARIG,MAXCOL
.
          PACK      KEY12,SCPRPID,SCMASID,SP70
          CALL      RSSCSB1
RLOAD100  CALL      RKSCSB1
          BRANCH    OVRCD,RLOAD999
          MATCH     SCSBPID,SCPRPID
          GOTO      RLOAD999 IF NOT EQUAL
          MATCH     SCSBSID,SCMASID
          GOTO      RLOAD999 IF NOT EQUAL
          MOVE      SCSBLIN,LINE
          PUTVAR    SCSBDAT,SCSBATT,1,LINE
          GOTO      RLOAD100
.
RLOAD999  MOVE      ONE,SCRNSAVE
          RETURN
.
.----------------------------------------
. Graphic Edit
.----------------------------------------
GRAPH000  MOVE      ZERO,SCRNSAVE
          MOVE      ONE,GCHARNUM
          MOVE      ZERO,LINETYPE
          MOVE      CCOL,SCOL
          MOVE      CVERT,SVERT
GRAPH090  DISPLAY   *P1:1,*EL
          DISPLAY   *P1:1,"e",*V2LON,"X",*HOFF,"it, ":
                    *V2LON,"E",*HOFF,"rase Line, ":
                    *V2LON,"S",*HOFF,"ingle Line, ":
                    *V2LON,"D",*HOFF,"ouble Line, ":
                    *V2LON,"C",*HOFF,"haracter Select"
GRAPH100  GETVAR    CDATA,CATTR,CCOL,CVERT
          KEYIN     *PCCOL:CVERT,*EOFF,*NOEDIT,*+,*CURSON,ANS;
          CALL      GMOVE000
          BRANCH    EXIT,GRAPH100
          REP       UPPLOW,ANS
          MATCH     ANSX,ANS
          GOTO      GRAPH900 IF EQUAL
          MATCH     ANSS,ANS
          GOTO      GRAPH200 IF EQUAL
          MATCH     ANSD,ANS
          GOTO      GRAPH300 IF EQUAL
          MATCH     ANSE,ANS
          GOTO      GRAPH400 IF EQUAL
          MATCH     ANSC,ANS
          GOTO      GRAPH500 IF EQUAL
          GOTO      GRAPH100
GRAPH200  MOVE      ONE,LINETYPE
          GOTO      GRAPH100
GRAPH300  MOVE      TWO,LINETYPE
          GOTO      GRAPH100
GRAPH400  MOVE      ZERO,LINETYPE
          GOTO      GRAPH100
GRAPH500  DISPLAY   *P1:1,*EL
          KEYIN     *P1:1,"Character Number : ",GCHARNUM
          IF        GCHARNUM>45|GCHARNUM<1
              BEEP
              GOTO    GRAPH500
          ENDIF
          MOVE      THREE,LINETYPE
          GOTO      GRAPH090
.
GRAPH900  MOVE      SCOL,CCOL
          MOVE      SVERT,CVERT
          RETURN
.----------------------------------
. Move Display Area of the Screen
.----------------------------------
MOVE0000  CALL      MARK0000
          MOVE      ZERO,SCRNSAVE
          DISPLAY   *P1:1,*EL
          DISPLAY   *P1:1,"Move to the new Position, e":
                    *V2LON,"X",*HOFF,"it "
MOVE1000  KEYIN     *PCCOL:CVERT,*EOFF,*NOEDIT,*+,*CURSON,ANS;
          CALL      KMOVE000
          BRANCH    EXIT,MOVE1000
          REP       UPPLOW,ANS
          MATCH     ANSX,ANS
          GOTO      MOVE1000 IF NOT EQUAL
          MOVE      SCOL,COLOFF
          SUB       CCOL,COLOFF
          MOVE      SVERT,VERTOFF
          SUB       CVERT,VERTOFF
          SUSPEND
          CALL      PUTSCR000
          ASSIGN    MINLINE-ONE,CVERT
          WHILE     CVERT<MAXLINE
            ADD       ONE,CVERT
            ASSIGN    MINCOL-ONE,CCOL
            WHILE     CCOL<MAXCOL
              ADD       ONE,CCOL
              IF        FARRAY[CCOL][CVERT]=1
                ASSIGN    CCOL-COLOFF,F3
                ASSIGN    CVERT-VERTOFF,VERT
                IF        !(F3<MINCOL|VERT<MINLINE|F3>MAXCOL|VERT>MAXLINE)
                  PUTVAR    CARRAY[CCOL][CVERT],AARRAY[CCOL][CVERT],F3,VERT
                ENDIF
              ENDIF
            DO
          DO
          FLUSH
          MOVE      SCOL,CCOL
          MOVE      SVERT,CVERT
MOVE9999  RETURN
.----------------------------------
. Mark area to Move 
.----------------------------------
MARK0000  MOVE      CVERT,SVERT
          MOVE      CCOL,SCOL          
          MOVE      MINCOL,HLEF
          MOVE      MAXCOL,HRIG
          MOVE      MINLINE,HTOP
          MOVE      MAXLINE,HBOT
          CALL      CLRIT000
          DISPLAY   *P1:1,*EL
          DISPLAY   *P1:1,"Mark Area to Move, e":
                    *V2LON,"X",*HOFF,"it "
MARK0900  
          BRANCH    FARRAY[CCOL][CVERT],MARK0950
          MOVE      ONE,FARRAY[CCOL][CVERT]
          GETVAR    CARRAY[CCOL][CVERT],AARRAY[CCOL][CVERT],CCOL,CVERT
          MOVE      AARRAY[CCOL][CVERT],CATTR
          AND       ATTGRAPH,CATTR
          OR        ATTHON,CATTR
          OR        ATTV2LON,CATTR
          PUTVAR    CARRAY[CCOL][CVERT],CATTR,CCOL,CVERT
          GOTO      MARK1000
.
MARK0950  MOVE      ZERO,FARRAY[CCOL][CVERT]
          PUTVAR    CARRAY[CCOL][CVERT],AARRAY[CCOL][CVERT],CCOL,CVERT
.    
MARK1000  KEYIN     *PCCOL:CVERT,*EOFF,*NOEDIT,*+,*CURSON,ANS;
          CALL      KMOVE000
          BRANCH    EXIT,MARK0900
          REP       UPPLOW,ANS
          MATCH     ANSX,ANS
          GOTO      MARK1000 IF NOT EQUAL
          SUSPEND
          ASSIGN    MINLINE-ONE,CVERT
          WHILE     CVERT<MAXLINE
            ADD       ONE,CVERT
            ASSIGN    MINCOL-ONE,CCOL
            WHILE     CCOL<MAXCOL
              ADD       ONE,CCOL
              IF        FARRAY[CCOL][CVERT]=1 
                DISPLAY   *PCCOL:CVERT,SP1
              ENDIF
            DO
          DO
          CALL      GETSCR00
          ASSIGN    MINLINE-ONE,CVERT
          WHILE     CVERT<MAXLINE
            ADD       ONE,CVERT
            ASSIGN    MINCOL-ONE,CCOL
            WHILE     CCOL<MAXCOL
              ADD       ONE,CCOL
              IF        FARRAY[CCOL][CVERT]=1 
                MOVE      AARRAY[CCOL][CVERT],CATTR
                AND       ATTGRAPH,CATTR
                OR        ATTHON,CATTR
                OR        ATTV2LON,CATTR
                PUTVAR    CARRAY[CCOL][CVERT],CATTR,CCOL,CVERT
              ENDIF
            DO
          DO
          FLUSH
          MOVE      SCOL,CCOL
          MOVE      SVERT,CVERT
          RETURN
.
CLRIT000
          MOVE      CCOL,SCOL
          MOVE      CVERT,SVERT
          ASSIGN    MINLINE-ONE,CVERT
          WHILE     CVERT<MAXLINE
            ADD       ONE,CVERT
            ASSIGN    MINCOL-ONE,CCOL
            WHILE     CCOL<MAXCOL
              ADD       ONE,CCOL
              MOVE      ZERO,FARRAY[CCOL][CVERT]
              MOVE      SP1,CARRAY[CCOL][CVERT]
              MOVE      SP1,AARRAY[CCOL][CVERT]
            DO
          DO
          MOVE      SCOL,CCOL
          MOVE      SVERT,CVERT
          RETURN
.--------------------------------------------
. Display Fields over Backgraoud Screen 
.--------------------------------------------
DPFLD000  MOVE      CVERT,SVERT
          MOVE      CCOL,SCOL
          PACK      KEY15,SCPRPID,SCMASID,SP70
          CALL      RSSCPS1
DPFLD100  CALL      RKSCPS1
          BRANCH    OVRCD,DPFLD999
          MATCH     SCPRPID,SCPSPID
          GOTO      DPFLD999 IF NOT EQUAL
          MATCH     SCMASID,SCPSSID
          GOTO      DPFLD999 IF NOT EQUAL
. 
          CALL      DPITM000
.
          GOTO      DPFLD100
.
DPFLD999  MOVE      SVERT,CVERT
          MOVE      SCOL,CCOL
          RETURN
.
.-------------------------------------------
. Display a Field Item of the Screen Painter
.-------------------------------------------
DPITM000  
          MOVE      CVERT,SVERT
          MOVE      CCOL,SCOL
          PACK      KEY15,SCPRPID,SCMASID,SCPSITM
          CALL      RDSCFL1
          BRANCH    MOVEFLAG,DPITM010
          IF        SCFLTYP=5
            GOTO      DPITM100
          ENDIF
DPITM010  MOVE      SCPSROW,CVERT
          MOVE      ONE,LLCNT
          WHILE     LLCNT<=SCPSLEN
            MOVE      SCPSCOL,CCOL
            ADD       LLCNT,CCOL
            SUB       ONE,CCOL
            PUTVAR    ANSX,SCPSATT,CCOL,CVERT
            ADD       ONE,LLCNT
          DO
          GOTO      DPITM999
.
DPITM100  MOVE      SCPSROW,CTOP
          MOVE      SCPSCOL,CLEF 
          MOVE      SCPSLEN,LLCNT
          MOVE      SCPSNOR,CVERT
          ASSIGN    CLEF+LLCNT+1,CRIG
          ASSIGN    CTOP+CVERT+1,CBOT
          MOVE      SCPSCOL,CCOL 
          BOX       16,CLEF,CTOP,CRIG,CBOT
          ADD       ONE,CLEF
          SUB       "12",CRIG
          DISPLAY   *PCLEF:CBOT,*HON,SP1,SP10:
                    *PCRIG:CBOT,SP5
          ADD       SIX,CRIG
          DISPLAY   *PCRIG:CBOT,*HON,SP5
.
DPITM999
          MOVE      SVERT,CVERT
          MOVE      SCOL,CCOL
          RETURN
.--------------------------------------------------------------
. Paint Fields on Screen
.--------------------------------------------------------------
PTFLD000  MOVE      SCMATOP,MINLINE
          MOVE      SCMALEF,MINCOL
          MOVE      SCMABOT,MAXLINE
          MOVE      SCMARIG,MAXCOL
          CALL      DPFLD000 * Display Current Fields
.
PTFLD090  DISPLAY   *P1:1,*EL
          DISPLAY   *P1:1,"e",*V2LON,"X",*HOFF,"it, ":
                    *V2LON,"I",*HOFF,"tems, ":
                    *V2LON,"E",*HOFF,"dit, ":
                    *V2LON,"S",*HOFF,"elect, ":
                    *V2LON,"V",*HOFF,"ideo, ":
                    *V2LON,"M",*HOFF,"ove, ":
                    *V2LON,"R",*HOFF,"edisplay, ":
                    *V2LON,"T",*HOFF,"ag, ":
                    *V2LON,"L",*HOFF,"oad, ":
                    *V2LON,"P",*HOFF,"rint, ":
                    *V2LON,"F",*HOFF,"unctions"
.
PTFLD100  KEYIN     *PCCOL:CVERT,*EOFF,*NOEDIT,*+,*CURSON,ANS;
          CALL      KMOVE000
          BRANCH    EXIT,PTFLD100
          REP       UPPLOW,ANS
.
          MATCH     ANSE,ANS
          GOTO      PTFLD200 IF EQUAL
.
          MATCH     ANSV,ANS
          GOTO      PTFLD300 IF EQUAL
.
          MATCH     ANSR,ANS
          GOTO      PTFLD400 IF EQUAL
.
          MATCH     ANSM,ANS
          GOTO      PTFLD500 IF EQUAL
.
          MATCH     ANSI,ANS
          GOTO      PTFLD600 IF EQUAL
.
          MATCH     ANSL,ANS
          GOTO      PTFLD650 IF EQUAL
.
          MATCH     ANST,ANS
          GOTO      PTFLD700 IF EQUAL
.
          MATCH     ANSP,ANS
          GOTO      PTFLD750 IF EQUAL
.
          MATCH     ANSF,ANS
          GOTO      PTFLD800 IF EQUAL
.
          MATCH     ANSS,ANS
          GOTO      PTFLD850 IF EQUAL
.
          MATCH     ANSX,ANS
          GOTO      PTFLD900 IF EQUAL
.
          MATCH     ANSU,ANS
          GOTO      PTFLD950 IF EQUAL
.
          GOTO      PTFLD100
.
. Edit part of the Screen
.------------------------
PTFLD200  MOVE      CCOL,SCOL
          MOVE      CVERT,SVERT
          CALL      FEDIT000
          MOVE      SCOL,CCOL
          MOVE      SVERT,CVERT
          GOTO      PTFLD090
.
. Set Video Attributes
.---------------------
PTFLD300  MOVE      CCOL,SCOL
          MOVE      CVERT,SVERT
          CALL      FVIDE000
          MOVE      SCOL,CCOL
          MOVE      SVERT,CVERT
          GOTO      PTFLD090
.
. Redisplay Screen
.---------------------
PTFLD400  MOVE      CCOL,SCOL
          MOVE      CVERT,SVERT
          CALL      RLOAD000
          CALL      DPFLD000
          MOVE      SCOL,CCOL
          MOVE      SVERT,CVERT
          GOTO      PTFLD090
.
. Move A Field
.--------------
PTFLD500  CALL      FMOV0000
          GOTO      PTFLD090
.
. Edit Items
.-----------
PTFLD600  MOVE      CCOL,SCOL
          MOVE      CVERT,SVERT
          CALL      IEDIT000
          MOVE      SCOL,CCOL
          MOVE      SVERT,CVERT
          GOTO      PTFLD090
.
. Load Items
.-----------
PTFLD650  MOVE      CCOL,SCOL
          MOVE      CVERT,SVERT
          CALL      ILOAD000
          MOVE      SCOL,CCOL
          MOVE      SVERT,CVERT
          GOTO      PTFLD090
.
. Tag Items
.-----------
PTFLD700  MOVE      CCOL,SCOL
          MOVE      CVERT,SVERT
          CALL      ITAGS000
          MOVE      SCOL,CCOL
          MOVE      SVERT,CVERT
          GOTO      PTFLD090
.
. Print Screen
.--------------
PTFLD750  MOVE      CCOL,SCOL
          MOVE      CVERT,SVERT
          CALL      PRSCR000
          MOVE      SCOL,CCOL
          MOVE      SVERT,CVERT
          GOTO      PTFLD090
.
. Functions
.-----------
PTFLD800  MOVE      CCOL,SCOL
          MOVE      CVERT,SVERT
          CALL      EFUNC000
          MOVE      SCOL,CCOL
          MOVE      SVERT,CVERT
          GOTO      PTFLD090
.
. Selections
.-----------
PTFLD850  MOVE      CCOL,SCOL
          MOVE      CVERT,SVERT
          CALL      SEDIT000
          MOVE      SCOL,CCOL
          MOVE      SVERT,CVERT
          GOTO      PTFLD090
.
PTFLD950  CALL      UNIXS000     * Unix Shell
          GOTO      PTFLD090
.
PTFLD900  RETURN
.----------------------------------
. Selection Edit 
.----------------------------------
SEDIT000  MOVE      "13",HTOP
          MOVE      "1",HLEF
          MOVE      "24",HBOT
          MOVE      "80",HRIG
          CALL      GETSCR00
          MOVE      ZERO,HTOP
          MOVE      ZERO,HLEF
          MOVE      ZERO,HBOT
          MOVE      ZERO,HRIG
SEDIT001  DISPLAY   *P1:14,*EF
          HLINE     *G37,14,1,80
          DISPLAY   *P4:15,*V2LON,*ULON," Selection Maintenance ",*HOFF:
                    *P1:17,"    Selection           :":
                    *P1:19,*V2LON," 1.",*HOFF," Item                :":
                    *P1:20,*V2LON," 2.",*HOFF," Description         :":
                    *P1:21,*V2LON," 3.",*HOFF," Security Level      :":
                    *P1:22,*V2LON," 4.",*HOFF," Position Row/Column :"
          MOVE      "27",CCOL
          MOVE      "17",CVERT
          MOVE      TWO,CKEYTYP
          MOVE      SCPRPID,SCSLPID
          MOVE      SCMASID,SCSLSID
          CALL      KSCSLA00
          BRANCH    EXIT,SEDIT900,SEDIT900
          PACK      KEY13,SCPRPID,SCMASID,SCSLSEL
          CALL      RDSCSL1
          IF        OVRCD=0
            MOVE      ZERO,ACCEPT
            PACK      KEY15,SCPRPID,SCMASID,SCSLITM
            CALL      RDSCFL1
            MOVE      SCSLSEC,F2
            MOVE      F2,F1
            DISPLAY   *P27:19,*V2LON,SCSLITM,SP1,*HOFF,SCFLDES:
                      *P27:20,*V2LON,SCSLDES:
                      *P27:21,*V2LON,F1
            IF        SCFLTYP=0|SCFLTYP=1|SCFLTYP=5
              DISPLAY   *P27:22,*V2LON,SCSLROW,*HOFF,"/",*V2LON,SCSLCOL
            ELSE
              DISPLAY   *P27:22,*V2LON,"N/A"
            ENDIF
          ELSE
            MOVE      ONE,ACCEPT
            MOVE      SCPRPID,SCSLPID
            MOVE      SCMASID,SCSLSID
            MOVE      SP70,SCSLITM
            MOVE      SP70,SCSLDES
            MOVE      SP70,SCSLROW
            MOVE      SP70,SCSLCOL
            MOVE      " 0",SCSLSEC
          ENDIF
          MOVE      ZERO,CCITEM
.
SEDIT010  ADD       ONE,CCITEM
          BRANCH    ACCEPT,SEDIT020
.
          CALL      MDELQST
          COMPARE   ZERO,CCITEM
          GOTO      SEDIT800 IF EQUAL
.
          COMPARE   SEQ,CCITEM
          GOTO      SEDIT001 IF EQUAL
.
          COMPARE   "-2",CCITEM
          GOTO      SEDIT850 IF EQUAL
.
SEDIT020  BRANCH    CCITEM,SEDIT110,SEDIT120,SEDIT130,SEDIT140
          BRANCH    ACCEPT,SEDIT030
          BEEP
SEDIT030  MOVE      ZERO,ACCEPT
          GOTO      SEDIT010

.
. Option    1
.
SEDIT110  MOVE      "27",CCOL
          MOVE      "19",CVERT
          MOVE      ZERO,CKEYTYP
          MOVE      SP8,SCFLFNO
          MOVE      SP70,SCFLDES
          MOVE      SCPRPID,SCFLPID
          MOVE      SCMASID,SCFLSID
          DISPLAY   *PCCOL:CVERT,*V2LON,SCFLFNO,SP1,*HOFF,SCFLDES
          CALL      KSCFLA00
          BRANCH    EXIT,SEDIT110,SEDIT001
.
. Invalid if field is a normal key field
. Invalid if field is a multi item and is not the key field
.
          IF        SCFLTYP=0
            IF        SCFLMUL=0
              DISPLAY   *P1:24,*B,*EL,"Key Field Item. - ";
              CALL      HITENTER
              GOTO      SEDIT110
            ENDIF
          ELSE
            IF       SCFLMUL=1
              DISPLAY   *P1:24,*B,*EL:
                        "You may only select the multiple key field. - ";
              CALL      HITENTER
              GOTO      SEDIT110
            ENDIF
          ENDIF
.
. Invalid for display or prompt type fields
.
          IF        SCFLTYP=2|SCFLTYP=6
            DISPLAY   *P1:24,*B,*EL,"Display Only Item. - ";
            CALL      HITENTER
            GOTO      SEDIT110
          ENDIF
.
          PACK      KEY20,SCPRPID,SCMASID,SCFLFNO,SP70
          CALL      RSSCPS2
          CALL      RKSCPS2
          BRANCH    OVRCD,SEDIT116
          MATCH     SCPRPID,SCPSPID
          GOTO      SEDIT116 IF NOT EQUAL
          MATCH     SCMASID,SCPSSID
          GOTO      SEDIT116 IF NOT EQUAL
          MATCH     SCFLFNO,SCPSITM
          GOTO      SEDIT116 IF NOT EQUAL
          MOVE      SCPSROW,SCSLROW
          MOVE      SCPSCOL,SCSLCOL
          DISPLAY   *P27:22,*V2LON,SCSLROW,*HOFF,"/",*V2LON,SCSLCOL
          GOTO      SEDIT117

SEDIT116  IF        SCFLTYP=3|SCFLTYP=4|SCFLTYP=5|SCFLTYP=7
            DISPLAY   *P27:22,*EL,*V2LON,"N/A"
          ELSE 
            DISPLAY   *P1:24,*EL,*B,"Item Not on Screen - ";
            CALL      HITENTER
            GOTO      SEDIT110
          ENDIF
.
SEDIT117  MOVE      SCFLFNO,SCSLITM
          DISPLAY   *PCCOL:CVERT,*V2LON,SCFLFNO,SP1,*HOFF,SCFLDES
          IF        ACCEPT=1
            MOVE      SCFLDES,SCSLDES
          ENDIF
          GOTO      SEDIT010
.
. Option    2
.
SEDIT120  MOVE      "27",CCOL
          MOVE      "20",CVERT
          KEYIN     *PCCOL:CVERT,*RV,*V2LON,SCSLDES:
                    *PCCOL:CVERT,*DV,*V2LON,SCSLDES
          GOTO      SEDIT010
.
.
. Option    3
.
SEDIT130  MOVE      "27",CCOL
          MOVE      "21",CVERT
          MATCH     SP70,SCSLSEC
          IF        @EQUAL
            MOVE      " 0",SCSLSEC
          ENDIF
          MOVE      SCSLSEC,F2
          MOVE      F2,F1
          KEYIN     *PCCOL:CVERT,*RV,*V2LON,F1:
                    *PCCOL:CVERT,*DV,*V2LON,F1
          MOVE      F1,F2
          MOVE      F2,SCSLSEC
          GOTO      SEDIT010
.
. Option    4
.
SEDIT140  MOVE      "27",CCOL
          MOVE      "22",CVERT
          BRANCH    ACCEPT,SEDIT010
          IF        SCFLTYP=3|SCFLTYP=4|SCFLTYP=7
            DISPLAY   *P27:22,*V2LON,"N/A"
            GOTO      SEDIT010
          ENDIF
          CALL      RKSCPS2
          BRANCH    OVRCD,SEDIT145
          MATCH     SCPRPID,SCPSPID
          GOTO      SEDIT145 IF NOT EQUAL
          MATCH     SCMASID,SCPSSID
          GOTO      SEDIT145 IF NOT EQUAL
          MATCH     SCSLITM,SCPSITM
          GOTO      SEDIT145 IF NOT EQUAL
          MOVE      SCPSROW,SCSLROW
          MOVE      SCPSCOL,SCSLCOL
          DISPLAY   *P27:22,*V2LON,SCSLROW,*HOFF,"/",*V2LON,SCSLCOL
          GOTO      SEDIT010
.
SEDIT145  PACK      KEY20,SCPRPID,SCMASID,SCSLITM,SP70
          CALL      RSSCPS2
          CALL      RKSCPS2
          BRANCH    OVRCD,SEDIT148
          MATCH     SCPRPID,SCPSPID
          GOTO      SEDIT148 IF NOT EQUAL
          MATCH     SCMASID,SCPSSID
          GOTO      SEDIT148 IF NOT EQUAL
          MATCH     SCSLITM,SCPSITM
          GOTO      SEDIT148 IF NOT EQUAL
          MOVE      SCPSROW,SCSLROW
          MOVE      SCPSCOL,SCSLCOL
          DISPLAY   *P27:22,*V2LON,SCSLROW,*HOFF,"/",*V2LON,SCSLCOL
          GOTO      SEDIT010

SEDIT148  IF        SCFLTYP=3|SCFLTYP=4|SCFLTYP=5|SCFLTYP=7
            DISPLAY   *P27:22,*EL,*V2LON,"N/A"
          ENDIF
          GOTO      SEDIT010
.
SEDIT800  
          PACK      KEY13,SCPRPID,SCMASID,SCSLSEL
          UNPACK    KEY13,SCSLPID,SCSLSID,SCSLSEL
          CALL      RASCSL1
          IF        OVRCD=1
            CALL      WRSCSL1
          ELSE
            CALL      UPSCSL1
          ENDIF
          GOTO      SEDIT001
.
SEDIT850
          PACK      KEY13,SCPRPID,SCMASID,SCSLSEL
          CALL      RASCSL1
          IF        OVRCD=0
            CALL      DESCSL1
          ENDIF
          GOTO      SEDIT001
.
SEDIT900 
          CALL      PUTSCR00
          RETURN
.----------------------------------------------
. Field Edit
.----------------------------------------------
FEDIT000  
          PACK      SELKEY13,SP70
          PACK      KEY15,SCPRPID,SCMASID,CVERT,CCOL
          CALL      RDSCPS1
          IF        OVRCD=1
            MOVE      ONE,ACCEPT
            GETVAR    CDATA,SCPSATT,1,1
            UNPACK    KEY15,SCPSPID,SCPSSID,SCPSROW,SCPSCOL
            MOVE      ZERO,SCPSLEN
            MOVE      SP70,SCPSMTY
            MOVE      SP70,SCPSFMT
            MOVE      SP70,SCPSITM
            MOVE      ZERO,SCPSMAN
            MOVE      ZERO,SCPSNOR
          ELSE
            MOVE      ZERO,ACCEPT
            CALL      UDIS0000                 * Undisplay Screen Item
          ENDIF
.
          CALL      SCRF0000                 * Edit Screen Display
          CALL      SELF0000                 * Modify Field Details
          BRANCH    EXIT,FEDIT900,FEDIT600,FEDIT500
.
. Save
.
          IF        SCFLTYP=3|SCFLTYP=4|SCFLTYP=7
            GOTO      FEDIT900
          ELSE
            PACK      KEY15,SCPRPID,SCMASID,SCPSROW,SCPSCOL
            UNPACK    KEY15,SCPSPID,SCPSSID,SCPSROW,SCPSCOL
            CALL      RASCPS1
            IF        OVRCD=0
              CALL      UPSCPS1
            ELSE
              CALL      WRSCPS1
            ENDIF
          ENDIF
.        
          MATCH     SP70,SELKEY13   * Delete Any Previous Selection
          IF        !@EQUAL
            MOVE      SELKEY13,KEY13
            CALL      RASCSL1
            IF        OVRCD=0
              CALL      DESCSL1
            ENDIF
          ENDIF
.
          IF        !(SCFLTYP=1|SCFLTYP=5)
            GOTO      FEDIT900
          ENDIF
          MATCH     SP70,SCSLSEL
          GOTO      FEDIT900 IF EQUAL   * No Selection for Field
.
          PACK      KEY20,SCPRPID,SCMASID,SCPSROW,SCPSCOL,SCPSITM
          UNPACK    KEY20,SCSLPID,SCSLSID,SCSLROW,SCSLCOL,SCSLITM
          MOVE      SCFLDES,SCSLDES
          PACK      KEY13,SCSLPID,SCSLSID,SCSLSEL
          CALL      RASCSL1
          IF        OVRCD=0
            CALL      UPSCSL1
          ELSE
            CALL      WRSCSL1
          ENDIF
          GOTO      FEDIT900 
.
. Repeat
.
FEDIT500
          IF        SCFLTYP=3|SCFLTYP=4|SCFLTYP=7
            GOTO      FEDIT900
          ELSE
            PACK      KEY15,SCPRPID,SCMASID,SCPSROW,SCPSCOL
            UNPACK    KEY15,SCPSPID,SCPSSID,SCPSROW,SCPSCOL
            CALL      RASCPS1
            IF        OVRCD=0
              CALL      UPSCPS1
            ELSE
              CALL      WRSCPS1
            ENDIF
          ENDIF
          CALL      PUTSCR00
          PACK      KEY15,SCPRPID,SCMASID,SCPSROW,SCPSCOL
          CALL      RDSCPS1
          IF        OVRCD=0
            CALL      DPITM000
          ENDIF
          MOVE      SCPSROW,CVERT
.
FEDIT550  KEYIN     *P1:1,*EL,"Number of Line for Repeat : ",*V2LON,F2
          IF        F2+CVERT>24
            DISPLAY   *P1:1,*B,*EL,"That Many would not Fit on the Screen - ";
            CALL      HITENT01
            GOTO      FEDIT550
          ENDIF
FEDIT560  IF        F2=0
            GOTO      FEDIT999
          ENDIF
          SUB       ONE,F2
          ADD       ONE,CVERT
          PACK      KEY15,SCPRPID,SCMASID,CVERT,SCPSCOL
          UNPACK    KEY15,SCPSPID,SCPSSID,SCPSROW,SCPSCOL
          CALL      RASCPS1
          IF        OVRCD=0
            CALL      UPSCPS1
          ELSE
            CALL      WRSCPS1
          ENDIF
          CALL      DPITM000
          GOTO      FEDIT560
.
. Delete
.
FEDIT600  PACK      KEY15,SCPRPID,SCMASID,SCPSROW,SCPSCOL
          CALL      RASCPS1
          IF        OVRCD=0
            CALL      DESCPS1
          ENDIF
          PACK      KEY18,SCPRPID,SCMASID,SCPSITM,SP70
          CALL      RSSCSL2
FEDIT610  CALL      RKSCSL2
          BRANCH    OVRCD,FEDIT699
          MATCH     SCPRPID,SCSLPID
          GOTO      FEDIT699 IF NOT EQUAL
          MATCH     SCMASID,SCSLSID
          GOTO      FEDIT699 IF NOT EQUAL
          MATCH     SCPSITM,SCSLITM
          GOTO      FEDIT699 IF NOT EQUAL
          MATCH     SCPSROW,SCSLROW
          GOTO      FEDIT610 IF NOT EQUAL
          MATCH     SCPSCOL,SCSLCOL
          GOTO      FEDIT610 IF NOT EQUAL
          PACK      KEY13,SCSLPID,SCSLSID,SCSLSEL
          CALL      DESCSL1
          GOTO      FEDIT610
.
FEDIT699  CALL      PUTSCR00
          GOTO      FEDIT999
.
FEDIT900  CALL      PUTSCR00
          PACK      KEY15,SCPRPID,SCMASID,SCPSROW,SCPSCOL
          CALL      RDSCPS1
          IF        OVRCD=0
            CALL      DPITM000
          ENDIF
.
FEDIT999  RETURN
.-----------------------------------------
. Item Screen Display
.-----------------------------------------
SCRF0000  MOVE      "1",HLEF
          MOVE      "80",HRIG
          MOVE      "24",HBOT
          MOVE      "1",HTOP
          CALL      GETSCR00
          MOVE      ZERO,HLEF
          MOVE      ZERO,HRIG
          MOVE      ZERO,HBOT
          MOVE      ZERO,HTOP
.
          DISPLAY   *P1:13,*EF
          HLINE     *G37,13,1,80
          DISPLAY   *P4:14,*V2LON,*ULON," Screen Position - ":
                    CCOL,"/",CVERT,SP1,*HOFF:
                    *P2:16,*V2LON,"1. ",*HOFF,"Item Number     : ":
                    *P2:17,*V2LON,"   ",*HOFF,"Field Type      : ":
                    *P2:18,*V2LON,"2. ",*HOFF,"Display Length  : ":
                    *P2:19,*V2LON,"3. ",*HOFF,"Mandatory (Y/N) : "
.
          BRANCH    ACCEPT,SCRF9999
          PACK      KEY15,SCPRPID,SCMASID,SCPSITM
          CALL      RDSCFL1
          CALL      GTYPE000
          DISPLAY   *P23:16,*V2LON,SCPSITM,*HOFF,SP1,SCFLDES
          DISPLAY   *P23:17,*V2LON,KTYPDES
          IF        SCFLTYP=0|SCFLTYP=1|SCFLTYP=2|SCFLTYP=5
            DISPLAY   *P45:17,"Min/Max=",*V2LON,SCFLMIN,*HOFF,"/",*V2LON,SCFLMAX
          ENDIF
          DISPLAY   *P23:18,*V2LON,SCPSLEN
          MOVE      NO,YESNO
          LOAD      YESNO,SCPSMAN,YES
          DISPLAY   *P23:19,*V2LON,YESNO  
.
          IF        SCFLTYP=2|SCFLTYP=6
            MOVE      SCFLMAN,SCPSMAN
            DISPLAY   *P23:19,*V2LON,"N/A"
          ENDIF
          IF        SCFLTYP=5
            DISPLAY   *P2:20,*V2LON,"4. ",*HOFF,"Number of Lines : "
            DISPLAY   *P23:20,*V2LON,SCPSNOR
          ENDIF
          IF        SCFLTYP=0|SCFLTYP=1|SCFLTYP=2
            DISPLAY   *P2:20,*V2LON,"4. ",*HOFF,"Format String   : "
            IF        SCFLFTY=1
              DISPLAY   *P23:20,*V2LON,SCPSFMT
            ELSE
              DISPLAY   *P23:20,*V2LON,"N/A"
            ENDIF
          ENDIF
          IF        SCFLTYP=1|SCFLTYP=5
            CALL      SCRFSL00
          ENDIF
.
SCRF9999  RETURN
.-----------------------------------------------------------------------------
. Get ans Display Selection Data for field types 1 (selection) & 5 (WP) only
.-----------------------------------------------------------------------------
SCRFSL00  DISPLAY   *P2:21,*V2LON,"5. ",*HOFF,"Selection       : "
          DISPLAY   *P2:22,*V2LON,"6. ",*HOFF,"Security Level  : "
          PACK      SELKEY13,SP70
          PACK      KEY18,SCPSPID,SCPSSID,SCPSITM,SP70
          CALL      RSSCSL2
SCRFSL10  CALL      RKSCSL2
          BRANCH    OVRCD,SCRFSL99
          PACK      KEY15,SCSLPID,SCSLSID,SCSLITM,SP70
          MATCH     KEY15,KEY18
          GOTO      SCRFSL99 IF NOT EQUAL
.
          DISPLAY   *P23:21,*V2LON,SCSLSEL
          MOVE      SCSLSEC,F2
          MOVE      F2,F1
          DISPLAY   *P23:22,*V2LON,F1
          PACK      SELKEY13,SCSLPID,SCSLSID,SCSLSEL
.
SCRFSL99  RETURN
.----------------------------------------
. FVIDE Edit
.----------------------------------------
FVIDE000  
          PACK      KEY15,SCPRPID,SCMASID,CVERT,CCOL
          CALL      RDSCPS1
          BRANCH    OVRCD,FVIDE900
          PACK      KEY15,SCPRPID,SCMASID,SCPSITM
          CALL      RDSCFL1
          BRANCH    OVRCD,FVIDE900
          IF        SCFLTYP=5
            DISPLAY   *P1:1,*B,*EL,"Function Not Available for WP Field - ";
            CALL      HITENT01
            GOTO      FVIDE999
          ENDIF  
          PACK      KEY15,SCPRPID,SCMASID,CVERT,CCOL
.
          DISPLAY   *P1:1,*EL
          DISPLAY   *P1:1,"e",*V2LON,"X",*HOFF,"it, ":
                    *V2LON,"H",*HOFF,"ighlight, ":
                    *V2LON,"R",*HOFF,"everse, ":
                    *V2LON,"B",*HOFF,"link, ":
                    *V2LON,"U",*HOFF,"nderline "
          MOVE      ZERO,FBLINK
          MOVE      ZERO,FV2LON
          MOVE      ZERO,FHON
          MOVE      ZERO,FULON
          GETVAR    CDATA,CATTR,CCOL,CVERT

FVIDE100  
          PACK      KEY15,SCPRPID,SCMASID,CVERT,CCOL
          CALL      RDSCPS1
          IF        OVRCD=0
            PACK      KEY15,SCPRPID,SCMASID,SCPSITM
            CALL      RDSCFL1
            IF        OVRCD=0
              IF        !(SCFLTYP=5)
                CALL      PUTCH000
                GETVAR    CDATA,CATTR,CCOL,CVERT
                MOVE      CATTR,SCPSATT
                CALL      UPSCPS1
                CALL      DPITM000
              ENDIF
            ENDIF
          ENDIF
.
FVIDE110  KEYIN     *PCCOL:CVERT,*EOFF,*NOEDIT,*+,*CURSON,ANS;
          CALL      KMOVE000
          BRANCH    EXIT,FVIDE100
          REP       UPPLOW,ANS
          MATCH     ANSX,ANS
          GOTO      FVIDE999 IF EQUAL
          REP       "0z1z2z3z4z5z6z7z8z9z",ANS
          REP       "B1U2H3R4",ANS
          TYPE      ANS
          GOTO      FVIDE110 IF NOT EQUAL
          MOVE      ANS,F1
          LOAD      FLAG,F1,FBLINK,FULON,FV2LON,FHON
          BRANCH    FLAG,FVIDE200
          STORE     ONE,F1,FBLINK,FULON,FV2LON,FHON
          GOTO      FVIDE100
FVIDE200  STORE     ZERO,F1,FBLINK,FULON,FV2LON,FHON
          GOTO      FVIDE100
.
FVIDE900  DISPLAY   *P1:1,*B,*EL,"Not on a Field - ";
          CALL      HITENT01
          GOTO      FVIDE999
FVIDE999  RETURN
.-------------------------------------------
. Routine to display blanks for an item
. ie undisplay it
.-------------------------------------------
UDIS0000  
          MOVE      CVERT,SVERT
          MOVE      CCOL,SCOL
          PACK      KEY15,SCPRPID,SCMASID,SCPSITM
          CALL      RDSCFL1
          IF        SCFLTYP=5
            GOTO      UDIS0100
          ENDIF
.
          MOVE      SCPSROW,CVERT
          GETVAR    CDATA,CATTR,1,1
          MOVE      ONE,LLCNT
          WHILE     LLCNT<=SCPSLEN
            MOVE      SCPSCOL,CCOL
            ADD       LLCNT,CCOL
            SUB       ONE,CCOL
            PUTVAR    SP1,CATTR,CCOL,CVERT
            ADD       ONE,LLCNT
          DO
          GOTO      UDIS9999
.
UDIS0100  MOVE      SCPSROW,CTOP
          MOVE      SCPSCOL,CLEF 
          MOVE      SCPSLEN,LLCNT
          MOVE      SCPSNOR,CVERT
          ASSIGN    CLEF+LLCNT+1,CRIG
          ASSIGN    CTOP+CVERT+1,CBOT
          MOVE      SCPSCOL,CCOL 
          BOX       0,CLEF,CTOP,CRIG,CBOT
UDIS9999  
          MOVE      SVERT,CVERT
          MOVE      SCOL,CCOL
          RETURN
.
.-------------------------------------------------
. SELF - Select Field
.-------------------------------------------------
SELF0000  MOVE      ZERO,CCITEM
          MOVE      CCOL,SCOL
          MOVE      CVERT,SVERT
.
.---- determine option to execute ----
.
SELF0100  ADD       ONE,CCITEM
          BRANCH    ACCEPT,SELF0500
          CALL      IDELQST
.
          COMPARE   ZERO,CCITEM
          GOTO      SELF9000 IF EQUAL
.
          COMPARE   SEQ,CCITEM
          GOTO      SELF9500 IF EQUAL
.
          COMPARE   "-2",CCITEM
          GOTO      SELF9600 IF EQUAL
          COMPARE   "-3",CCITEM
          GOTO      SELF9700 IF EQUAL
.
SELF0500  BRANCH    CCITEM,SELF1100,SELF1200,SELF1300,SELF1400,SELF1500:
                           SELF1600
.
          BRANCH    ACCEPT,SELF0900
          BEEP
.
SELF0900  MOVE      ZERO,ACCEPT
          GOTO      SELF0100
.
. Option    1
.
SELF1100
          BRANCH    ACCEPT,SELF1110
          PACK      KEY15,SCPRPID,SCMASID,SCPSITM
          CALL      RDSCFL1
          BRANCH    OVRCD,SELF1110
          COMPARE   ZERO,SCFLMAN
          GOTO      SELF1110 IF EQUAL
          DISPLAY   *P1:24,*EL,*B,"Mandatory Field - ";
          CALL      HITENTER
          GOTO      SELF0100
.  
SELF1110  MOVE      "023",CCOL
          MOVE      "16",CVERT
          MOVE      SCPRPID,SCFLPID
          MOVE      SCMASID,SCFLSID
          MOVE      SCFLFNO,SSCFLFNO
          MOVE      "40",HLEF
          MOVE      "80",HRIG
          MOVE      "1",HTOP
          MOVE      "21",HBOT
          MOVE      ZERO,CKEYTYP
.
          CALL      KSCFLA00
          BRANCH    EXIT,SELF9999,SELF9999
          IF        SCFLTYP=3|SCFLTYP=4|SCFLTYP=7
            DISPLAY   *P1:24,*B,*EL,"Invalid Field Type for Display - ";
            CALL      HITENTER
            GOTO      SELF1110
          ENDIF
.
          
          CALL      SPST0000     * Save Position Variables
          BRANCH    SCFLMUL,SELF1120
.
          PACK      KEY20,SCPRPID,SCMASID,SCFLFNO,SP70
          CALL      RSSCPS2
          CALL      RKSCPS2
          BRANCH    OVRCD,SELF1190
          MATCH     SCPRPID,SCPSPID
          GOTO      SELF1190 IF NOT EQUAL
          MATCH     SCMASID,SCPSSID
          GOTO      SELF1190 IF NOT EQUAL
          MATCH     SCFLFNO,SCPSITM
          GOTO      SELF1190 IF NOT EQUAL
          DISPLAY   *P1:24,*EL,"Field Already On Screen - ";
          CALL      HITENTER
          CALL      RPST0000     * Restore Position Variables
          GOTO      SELF1110
.
. Multiple Item and not key field must be preceded by the key field
. for its Group
.
SELF1120  IF        SCFLTYP=0
            GOTO      SELF1190
          ENDIF
          PACK      KEY15,SCPRPID,SCMASID,SCPSROW,SCPSCOL
          CALL      RSSCPS1
SELF1130  CALL      RPSCPS1
          BRANCH    OVRCD,SELF1180
          MATCH     SCPRPID,SCPSPID
          GOTO      SELF1180 IF NOT EQUAL
          MATCH     SCMASID,SCPSSID
          GOTO      SELF1180 IF NOT EQUAL
          MATCH     SSCPSROW,SCPSROW
          GOTO      SELF1180 IF NOT EQUAL
          CALL      ISAVE000
          PACK      KEY15,SCPRPID,SCMASID,SCPSITM
          CALL      RDSCFL1
          BRANCH    OVRCD,SELF1140
          COMPARE   ZERO,SCFLTYP
          GOTO      SELF1140 IF NOT EQUAL
          MATCH     SCFLMTY,SSCFLMTY
          GOTO      SELF1150 IF EQUAL
SELF1140  CALL      IREST000
          GOTO      SELF1130
SELF1150  CALL      IREST000
          GOTO      SELF1190
.
SELF1180  DISPLAY   *P1:24,*EL:
                    "Multiple Field must be preceded by its Key Field - ";
          CALL      HITENTER
          CALL      RPST0000     * Restore Position Variables
          GOTO      SELF1110
.
SELF1190  CALL      RPST0000     * Restore Position Variables
          MOVE      SCFLFNO,SCPSITM
          MOVE      SCFLMTY,SCPSMTY
          DISPLAY   *PCCOL:CVERT,*V2LON,SCPSITM,*HOFF,SP1,SCFLDES
.
          CALL      GTYPE000
          DISPLAY   *P23:17,*V2LON,KTYPDES
          IF        SCFLTYP=0|SCFLTYP=1|SCFLTYP=2|SCFLTYP=5
            DISPLAY   *P45:17,"Min/Max=",*V2LON,SCFLMIN,*HOFF,"/",*V2LON,SCFLMAX
          ENDIF
          IF        SCFLMAX=SCFLMIN
            MOVE      SCFLMAX,SCPSLEN
            DISPLAY   *P23:18,*V2LON,SCPSLEN
            ADD       ONE,CCITEM
            IF        SCFLMAN=1
              ADD       ONE,CCITEM
            ENDIF
          ENDIF
          IF        SCFLMAN=1
            MOVE      SCFLMAN,SCPSMAN
            DISPLAY   *P23:19,*V2LON,YES
          ENDIF
          IF        SCFLTYP=2|SCFLTYP=6
            MOVE      SCFLMAN,SCPSMAN
            DISPLAY   *P23:20,*V2LON,"N/A"
          ENDIF
          MOVE      SCFLFNO,SCPSITM
          MOVE      SCFLMTY,SCPSMTY
          IF        SCFLTYP=5
            DISPLAY   *P2:20,*V2LON,"4. ",*HOFF,"Number of Lines : "
          ENDIF
          IF        SCFLTYP=0|SCFLTYP=1|SCFLTYP=2
            DISPLAY   *P2:20,*V2LON,"4. ",*HOFF,"Format String   : "
            IF        !(SCFLFTY=1)
              DISPLAY   *P23:20,*V2LON,"N/A"
            ENDIF
          ENDIF
.
          IF        SCFLTYP=1|SCFLTYP=5
            CALL      SCRFSL00
          ENDIF
          GOTO      SELF0100
.
. Option    2
.
SELF1200  MOVE      "023",CCOL
          MOVE      "18",CVERT
          IF        SCFLMAX=SCFLMIN
            MOVE      SCFLMAX,SCPSLEN
            DISPLAY   *P1:24,*B,*EL,"Length Fixed - ";
            CALL      HITENTER
            GOTO      SELF0100
          ENDIF
.
          KEYIN     *PCCOL:CVERT,*V2LON,SCPSLEN:
                    *PCCOL:CVERT,*DV,*V2LON,SCPSLEN:
                    *PCCOL:CVERT
.
          IF        SCPSLEN>SCFLMAX
            DISPLAY   *P1:24,"Maximum Length = ",SCFLMAX," - ";
            CALL      HITENTER
            GOTO      SELF1200
          ENDIF
          IF        SCPSLEN<SCFLMIN
            DISPLAY   *P1:24,"Minmum Length = ",SCFLMIN," - ";
            CALL      HITENTER
            GOTO      SELF1200
          ENDIF
          MOVE      SCPSCOL,CCOL 
          ADD       SCPSLEN,CCOL 
          IF        CCOL-1>80
            DISPLAY   *P1:24,"This would not fit on the Screen - ";
            CALL      HITENTER
            GOTO      SELF1200
          ENDIF
.
          GOTO      SELF0100
.
. Option    3
.
SELF1300  MOVE      "023",CCOL
          MOVE      "19",CVERT
          IF        SCFLTYP=2
            MOVE      SCFLMAN,SCPSMAN
            BEEP
            GOTO      SELF0100
          ENDIF
          IF        SCFLMAN=1
            MOVE      SCFLMAN,SCPSMAN
            DISPLAY   *P1:24,*B,*EL,"Field Must be Mandatory - ";
            CALL      HITENTER
            GOTO      SELF0100
          ENDIF
          MOVE      ANSN,DEFYESNO   * Default Y
          CALL      YORN0000
          MOVE      FYESNO,SCPSMAN
          DISPLAY   *PCCOL:CVERT,*V2LON,YESNO
          GOTO      SELF0100
.
. Option    4
.
SELF1400  MOVE      "023",CCOL
          MOVE      "20",CVERT
          IF        SCFLTYP=5
            KEYIN     *PCCOL:CVERT,*V2LON,SCPSNOR:
                      *PCCOL:CVERT,*DV,*V2LON,SCPSNOR:
                      *PCCOL:CVERT
            MOVE      SCPSROW,CVERT
            ADD       SCPSNOR,CVERT
            IF        CVERT+1>24
              DISPLAY   *P1:24,"This would not fit on the Screen - ";
              CALL      HITENTER
              GOTO      SELF1400
            ENDIF
            MOVE      SP70,SCPSFMT
            GOTO      SELF0100
          ENDIF
          IF        SCFLTYP=0|SCFLTYP=1|SCFLTYP=2
            MOVE      ZERO,SCPSNOR
            IF        SCFLFTY=1
              KEYIN     *PCCOL:CVERT,*V2LON,SCPSFMT:
                        *PCCOL:CVERT,*DV,*V2LON,SCPSFMT:
                        *PCCOL:CVERT
              GOTO      SELF0100
            ENDIF
          ENDIF
          MOVE      SP70,SCPSFMT
          MOVE      ZERO,SCPSNOR
          GOTO      SELF0100
.
. 
. Option 5 ( Selection )
.
SELF1500  IF        !(SCFLTYP=1|SCFLTYP=5)
            IF        ACCEPT=0
              BEEP
            ENDIF
            GOTO      SELF0100
          ENDIF
.
          MOVE      "023",CCOL
          MOVE      "21",CVERT
          MOVE      SP70,SCSLSEL
          PACK      KEY13,SCPRPID,SCMASID,SCSLSEL
          KEYIN     *PCCOL:CVERT,*V2LON,*JR,*RV,SCSLSEL:
                    *PCCOL:CVERT,*DV,SCSLSEL
          ENDSET    SCSLSEL
          APPEND    SP70,SCSLSEL
          RESET     SCSLSEL
          MATCH     SP70,SCSLSEL
          IF        !@EQUAL
            CALL      VALSEL00
            BRANCH    EXIT,SELF1500,SELF9500
          ENDIF
          GOTO      SELF0100
.
. Option 6 ( Security Level )
.
SELF1600  IF        SCFLTYP=1|SCFLTYP=5
            MOVE      "023",CCOL
            MOVE      "22",CVERT
            MATCH     SP70,SCSLSEL
            IF        !@EQUAL
              MOVE      SCSLSEC,F2
              MOVE      F2,F1
              KEYIN     *PCCOL:CVERT,*V2LON,*RV,F1:
                        *PCCOL:CVERT,*DV,F1
              MOVE      F1,F2
              MOVE      F2,SCSLSEC
            ENDIF
          ELSE
            IF        ACCEPT=0
              BEEP
            ENDIF
          ENDIF
          GOTO      SELF0100
.
.
.---- exit points ----
.
SELF9000  MOVE      ZERO,EXIT
          GOTO      SELF9999
.
SELF9500  MOVE      ONE,EXIT
          GOTO      SELF9999
.
SELF9600
          MOVE      TWO,EXIT
          COMPARE   ZERO,SCFLMAN
          GOTO      SELF9999 IF EQUAL
          COMPARE   ONE,SCFLMUL
          GOTO      SELF9999 IF EQUAL
          DISPLAY   *P1:24,*EL,*B,"IBA Mandatory Field. Deletion Denied. - ";
          CALL      HITENTER
          GOTO      SELF0100
SELF9700  
          MOVE      THREE,EXIT
          COMPARE   ONE,SCFLMUL
          GOTO      SELF9999 IF EQUAL
          COMPARE   TWO,SCFLTYP
          GOTO      SELF9999 IF EQUAL
          DISPLAY   *P1:24,*EL,*B,"Field Not Repeatable. - ";
          CALL      HITENTER
          GOTO      SELF0100
.
SELF9999  MOVE      SCOL,CCOL
          MOVE      SVERT,CVERT
          RETURN
.------------------------------------------------------------
. Validate Selection for Field 
.------------------------------------------------------------
VALSEL00  ENDSET    SCSLSEL 
          CMATCH    EXITCHAR,SCSLSEL 
          IF        @EQUAL
            MOVE      TWO,EXIT
            GOTO      VALSEL99
          ENDIF
.
          CMATCH    QUEST,SCSLSEL 
          IF        @EQUAL
            CALL      SPST0000    * Save Position Details
            MOVE      CCITEM,SCCITEM
            CALL      HSCSLA00
            MOVE      SCCITEM,CCITEM
            CALL      RPST0000    * Restore Position Details
.
            ENDSET    SCSLSEL 
            APPEND    SP70,SCSLSEL 
            RESET     SCSLSEL 
.
            MATCH     SP70,SCSLSEL 
            IF        @EQUAL
              MOVE      ONE,EXIT
              GOTO      VALSEL99
            ENDIF
            DISPLAY   *PCCOL:CVERT,*V2LON,SCSLSEL    
          ENDIF
          RESET     SCSLSEL 
.
          MOVE      ZERO,EXIT
          PACK      KEY13,SCPRPID,SCMASID,SCSLSEL
          CALL      RDSCSL1
          BRANCH    OVRCD,VALSEL99
          MATCH     SCSLITM,SCPSITM
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Selection Exists For Another Item. - ";
            CALL      HITENTER
            MOVE      ONE,EXIT
          ENDIF
.           
VALSEL99  RETURN
.--------------------------------
. Save Position Variables
.--------------------------------
SPST0000  MOVE      SCPSPID,SSCPSPID
          MOVE      SCPSSID,SSCPSSID
          MOVE      SCPSROW,SSCPSROW
          MOVE      SCPSCOL,SSCPSCOL
          MOVE      SCPSITM,SSCPSITM
          MOVE      SCPSMAN,SSCPSMAN
          MOVE      SCPSLEN,SSCPSLEN
          MOVE      SCPSATT,SSCPSATT
          MOVE      SCPSNOR,SSCPSNOR
          MOVE      SCPSFMT,SSCPSFMT
          MOVE      SCPSMTY,SSCPSMTY
          RETURN
.--------------------------------
. Restore Position Variables
.--------------------------------
RPST0000  MOVE      SSCPSPID,SCPSPID
          MOVE      SSCPSSID,SCPSSID
          MOVE      SSCPSROW,SCPSROW
          MOVE      SSCPSCOL,SCPSCOL
          MOVE      SSCPSITM,SCPSITM
          MOVE      SSCPSMAN,SCPSMAN
          MOVE      SSCPSLEN,SCPSLEN
          MOVE      SSCPSATT,SCPSATT
          MOVE      SSCPSNOR,SCPSNOR
          MOVE      SSCPSFMT,SCPSFMT
          MOVE      SSCPSMTY,SCPSMTY
          RETURN
.
.          PACK      KEY18,SCPSPID,SCPSSID,SCPSSEL,SP70
.-------------------------------------------------------
. FMOV Item
.-------------------------------------------------------
FMOV0000  DISPLAY   *P1:1,*EL,"e",*V2LON,"X",*HOFF,"it"
          MOVE      ONE,MOVEFLAG
          MOVE      CVERT,DIMCVERT
          MOVE      CCOL,DIMCCOL
          PACK      KEY15,SCPRPID,SCMASID,CVERT,CCOL,SP70
          CALL      RDSCPS1
          BRANCH    OVRCD,FMOV9000
          PACK      KEY15,SCPRPID,SCMASID,CVERT,CCOL
          CALL      DESCPS1
.
          CALL      UDIS0000
.
          DISPLAY   *PCCOL:CVERT,*HON,ANSX
          MOVE      SCPSATT,SSCPSATT
          GETVAR    CDATA,SCPSATT,CCOL,CVERT
          DISPLAY   *PCCOL:CVERT,SP1
          MOVE      MINCOL,HLEF
          MOVE      MAXCOL,HRIG
          MOVE      MINLINE,HTOP
          MOVE      MAXLINE,HBOT
          GETVAR    CDATA80,CATTR80,1,CVERT
.
FMOV1000  CALL      DPITM000
          KEYIN     *PCCOL:CVERT,*HOFF,*EOFF,*NOEDIT,*+,ANS
          PUTVAR    CDATA80,CATTR80,1,CVERT
          CALL      KMOVE000
          COMPARE   ZERO,EXIT
          GOTO      FMOV1100 IF EQUAL
          GETVAR    CDATA80,CATTR80,1,CVERT
          MOVE      CCOL,SCPSCOL
          MOVE      CVERT,SCPSROW
          GOTO      FMOV1000
.
FMOV1100  REP       UPPLOW,ANS
          MATCH     ANSX,ANS
          GOTO      FMOV1000 IF NOT EQUAL
.
          PACK      KEY15,SCPRPID,SCMASID,CVERT,CCOL
          CALL      RASCPS1
          BRANCH    OVRCD,FMOV2000
          DISPLAY   *P1:24,*EL,"Item At This Position - ";
          CALL      HITENTER
          GOTO      FMOV1000
.
FMOV2000  MOVE      SSCPSATT,SCPSATT
          PACK      KEY15,SCPRPID,SCMASID,CVERT,CCOL
          UNPACK    KEY15,SCPSPID,SCPSSID,SCPSROW,SCPSCOL
          CALL      WRSCPS1
          PACK      KEY18,SCPRPID,SCMASID,SCPSITM,SP70
          CALL      RSSCSL2
FMOV2010  CALL      RKSCSL2
          BRANCH    OVRCD,FMOV2100
          MATCH     SCSLPID,SCPRPID
          GOTO      FMOV2100 IF NOT EQUAL
          MATCH     SCSLSID,SCMASID
          GOTO      FMOV2100 IF NOT EQUAL
          MATCH     SCSLITM,SCPSITM
          GOTO      FMOV2100 IF NOT EQUAL
          MATCH     SCSLROW,DIMCVERT
          GOTO      FMOV2010 IF NOT EQUAL
          MATCH     SCSLCOL,DIMCCOL 
          GOTO      FMOV2010 IF NOT EQUAL
          PACK      KEY13,SCSLPID,SCSLSID,SCSLSEL
          CALL      RDSCSL1
          IF        OVRCD=0
            MOVE      SCPSROW,SCSLROW
            MOVE      SCPSCOL,SCSLCOL
            CALL      UPSCSL1
          ENDIF
          GOTO      FMOV2010
.
FMOV2100  
          MOVE      ZERO,MOVEFLAG
          CALL      DPITM000
          GOTO      FMOV9999
.
FMOV9000  DISPLAY   *P1:1,*B,*EL,"Not on a Field - ";
          CALL      HITENT01
          GOTO      FMOV9999
.
FMOV9999 
          MOVE      ZERO,MOVEFLAG
          RETURN
.---------------------------------------------------
. Load Items from a File
.---------------------------------------------------
ILOAD000  MOVE      "15",HTOP
          MOVE      "1",HLEF
          MOVE      "24",HBOT
          MOVE      "80",HRIG
          CALL      GETSCR00
          MOVE      ZERO,HTOP
          MOVE      ZERO,HLEF
          MOVE      ZERO,HBOT
          MOVE      ZERO,HRIG
.
ILOAD100  DISPLAY   *P1:15,*EF
          HLINE     *G37,15,1,80
          DISPLAY   *P4:16,*EF,*V2LON,*ULON," Item Load ",*HOFF:
                    *P005:17,*EF,*HOFF,"System         :",*HOFF:
                    *P005:18,*EF,*HOFF,"File           :",*HOFF
.
          MOVE      "022",CCOL
          MOVE      "17",CVERT
          MOVE      ZERO,CKEYTYP
          CALL      KSYSCA00
          BRANCH    EXIT,ILOAD999,ILOAD999
.
          DISPLAY   *P22:17,*V2LON,SYSCSYS,SP1,*HOFF,SYSCDES
          MOVE      SYSCSYS,SYFISYS
          MOVE      "022",CCOL
          MOVE      "18",CVERT
          MOVE      ZERO,CKEYTYP
          CALL      KSYFIA00
          BRANCH    EXIT,ILOAD100,ILOAD999
          DISPLAY   *P22:18,*V2LON,SYFIFIL,SP1,*HOFF,SYFIDES
.
          DISPLAY   *P1:24,*EL,"Ok to Continue (Y/N) ? "
          MOVE      "24",CCOL
          MOVE      "24",CVERT
          MOVE      ANSY,DEFYESNO   * Default Y
          CALL      YORN0000
          BRANCH    FYESNO,ILOAD400
          GOTO      ILOAD100
.
ILOAD400  PACK      KEY8,SYFISYS,SYFIFIL,SP70
          CALL      RSSYFL1
ILOAD500  CALL      RKSYFL1
          BRANCH    OVRCD,ILOAD100
          MATCH     SYFISYS,SYFLSYS
          GOTO      ILOAD100 IF NOT EQUAL
          MATCH     SYFIFIL,SYFLFIL
          GOTO      ILOAD100 IF NOT EQUAL
.
          CALL      LWRTA000       * Write Next Item Number
          GOTO      ILOAD500       
.
ILOAD999  CALL      PUTSCR00
          RETURN
.
LWRTA000  
          DISPLAY   *P005:19,*EF,*HOFF,"Field          :",*HOFF:
                    *V2LON,SP1,SYFLFLD,SP1,*HOFF,SYFLDES:
                    *P005:20,*HOFF,"Insert   (N)   :",*HOFF:
                    *P005:21,*HOFF,"Type           :",*HOFF:
                    *P005:22,*HOFF,"Key/Dis Type   :",*HOFF:
                    *P005:23,*HOFF,"Keyin Routine  :",*HOFF
          KEYIN     *P22:20,*V2LON,ANS
          REP       UPPLOW,ANS
          MATCH     "N",ANS
          GOTO      LWRTA999 IF EQUAL
LWRTA005
          DISPLAY  *P1:24,*EL,"Type : ",*V2LON,"0.",*HOFF,"Key, ":
                                        *V2LON,"1.",*HOFF,"Sel., ":
                                        *V2LON,"2.",*HOFF,"Dis., "
          KEYIN    *P22:21,*V2LON,SCFLTYP:
                   *P22:21,*DV,SCFLTYP
          ADD      ONE,SCFLTYP
          BRANCH   SCFLTYP,LWRTA010,LWRTA010,LWRTA010
          BEEP
          GOTO     LWRTA005
.
LWRTA010  SUB      ONE,SCFLTYP
LWRTA015
          KEYIN     *P1:24,*EL,*V2LON,"Type : ":
                    *V2LON,"0.",*HOFF,"Norm, ":
                    *V2LON,"1.",*HOFF,"*JR, ":
                    *V2LON,"2.",*HOFF,"*JR *ZF, ":
                    *V2LON,"3.",*HOFF,"0=No, ":
                    *V2LON,"4.",*HOFF,"0=Yes, ":
                    *V2LON,"5.",*HOFF,"Date, ":
                    *V2LON,"6.",*HOFF,"Null":
                    *P22:22,*V2LON,SCFLKTY:
                    *P1:24,*EL
          ADD       ONE,SCFLKTY
          BRANCH    SCFLKTY,LWRTA020,LWRTA020,LWRTA020,LWRTA020:
                            LWRTA020,LWRTA020,LWRTA020
          BEEP
          GOTO      LWRTA015
LWRTA020  SUB       ONE,SCFLKTY
LWRTA025
          MOVE      "022",CCOL
          MOVE      "23",CVERT 
          MOVE      TWO,CKEYTYP
          MOVE      SP8,SCFLCAL
          MOVE      SP70,SCFMDES
          DISPLAY   *PCCOL:CVERT,*V2LON,SCFLCAL,SP1,*HOFF,SCFMDES
          MOVE      SCPRPID,SCFMPID
          CALL      KSCFMA00
          BRANCH    EXIT,LWRTA050,LWRTA050
          MOVE      SCFMFID,SCFLCAL
          PACK      KEY16,SCFMFID,SCFMPID
          CALL      RDSCFM1
          BRANCH    OVRCD,LWRTA030
          DISPLAY   *PCCOL:CVERT,*V2LON,SCFLCAL,SP1,*HOFF,SCFMDES
          GOTO      LWRTA050
LWRTA030  DISPLAY   *P1:24,*EL,"Function Not on File. Insert (":
                    *V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ";
          MOVE      "38",CCOL
          MOVE      "24",CVERT
          MOVE      ANSY,DEFYESNO   * Default Y
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      LWRTA025 IF EQUAL
          CALL      IFUNC000
          BRANCH    EXIT,LWRTA025
          MOVE      "022",CCOL
          MOVE      "23",CVERT 
          DISPLAY   *PCCOL:CVERT,*V2LON,SCFLCAL,SP1,*HOFF,SCFMDES
LWRTA050
          MOVE      SCMAPID,SCFLPID
          MOVE      SCMASID,SCFLSID
          CALL      ISAVE000
          PACK      KEY15,SCFLPID,SCFLSID,Z70
          CALL      RSSCFL1          * Get Last Item for this screen
          CALL      RPSCFL1
          BRANCH    OVRCD,LWRTA060
          MATCH     SCMAPID,SCFLPID
          GOTO      LWRTA060 IF NOT EQUAL
          MATCH     SCMASID,SCFLSID
          GOTO      LWRTA060 IF NOT EQUAL
          MOVE      SCFLFNO,FIELDNO 
          GOTO      LWRTA100
LWRTA060  MOVE      ZERO,FIELDNO
          MOVE      SCMAPID,SCFLPID
          MOVE      SCMASID,SCFLSID
.
LWRTA100  ADD       ONE,FIELDNO      * Next Item Number
          CALL      IREST000
          MOVE      FIELDNO,SCFLFNO  
          PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO,SP70
          CALL      RASCFL1
          COMPARE   ZERO,OVRCD
          GOTO      LWRTA100 IF EQUAL
.
          MOVE      FIELDNO,SCFLFNO
          MOVE      SYFLDES,SCFLDES

          PACK      SCFLFLD,SYFLSYS,SYFLFIL,SYFLFLD
          IF        SYFITIO=2
            MOVE      SYFLV4N,SCFLFLD
          ENDIF
          MOVE      SP8,SCFLWPF
          MOVE      SP8,SCFLFSC
          MOVE      ZERO,SCFLDEC
          MOVE      ONE,SCFLMIN
          MOVE      SYFLLEN,SCFLMAX
          IF        SYFLTYP=1
            ASSIGN    ((SYFLLEN-SCFLMAX)*10)+SCFLMAX+10,SCFLMAX
          ENDIF
.
          IF        SCFLKTY=3|SCFLKTY=4
            MOVE      "3",SCFLMAX
          ENDIF
.
          IF        SCFLKTY=5
            MOVE      "10",SCFLMIN
            MOVE      "10",SCFLMAX
          ENDIF
.
          MOVE      SYFLLEN,SCFLFLN
          MOVE      SYFLTYP,SCFLFTY
          MOVE      ZERO,SCFLMAN
          MOVE      ZERO,SCFLFEX
          MOVE      SP70,SCFLDAF
          MOVE      ZERO,SCFLMUL
          MOVE      ZERO,SCFLKEY
          MOVE      SP70,SCFLMTY
.
          CALL      WRSCFL1
.
LWRTA999  RETURN
.---------------------------------------------------
. Maitain Items/Functions Associated with Screen
.---------------------------------------------------
IEDIT000  MOVE      "3",HTOP
          MOVE      "1",HLEF
          MOVE      "24",HBOT
          MOVE      "80",HRIG
          CALL      GETSCR00
          MOVE      ZERO,HTOP
          MOVE      ZERO,HLEF
          MOVE      ZERO,HBOT
          MOVE      ZERO,HRIG
.
IEDIT020  CALL      IPROC000
          BRANCH    EXIT,IEDIT999,IEDIT999
.
          CALL      IDISA000                * modify screen A
IEDIT030  CALL      ISELA000                * modify screen A
          BRANCH    EXIT,IEDIT020,IEDIT100
.
          CALL      IWRTA000       * post screen A data
          GOTO      IEDIT020       * get next entry
.
IEDIT100  CALL      DELQST       * ok to delete (y/n/c) ?
          BRANCH    CEXIT,IEDIT310,IEDIT030,IEDIT020
.
IEDIT310  CALL      IDELA000       * delete screen A data
          GOTO      IEDIT020       * get next entry
.
IEDIT999  CALL      PUTSCR00
          RETURN
.------------------------
. Display Item Screen
.------------------------
ISCRA000  DISPLAY   *P1:6,*EF
          HLINE     *G37,06,1,80
          DISPLAY   *P4:07,*EF,*V2LON,*ULON," Item Maintenance ",*HOFF:
                    *P005:09,*EF,*HOFF,"Field Number   :",*HOFF:
                    *P001:11,*V2LON," 1.",*HOFF:
                    *P005:11,*HOFF,"Description    :",*HOFF:
                    *P001:12,*V2LON," 2.",*HOFF:
                    *P005:12,*HOFF,"Type           :",*HOFF
          RETURN

ISCRB000  BRANCH    SCFLTYP,ISCRB100,ISCRB200,ISCRB300,ISCRB400,ISCRB500:
                            ISCRB600,ISCRB300
.
. Key or Selection Field
.------------------------
ISCRB100  DISPLAY   *P001:13,*V2LON," 3.",*HOFF:
                    *P005:13,*HOFF,"Field ID       :",*HOFF:
                    *P001:14,*V2LON," 4.",*HOFF:
                    *P005:14,*HOFF,"Dim/Form       :",*HOFF:
                    *P001:15,*V2LON," 5.",*HOFF:
                    *P005:15,*HOFF,"Field Length   :",*HOFF:
                    *P001:16,*V2LON," 6.",*HOFF:
                    *P005:16,*HOFF,"Keyin Routine  :",*HOFF:
                    *P001:17,*V2LON," 7.",*HOFF:
                    *P005:17,*HOFF,"Keyin Type     :",*HOFF:
                    *P001:18,*V2LON," 8.",*HOFF:
                    *P005:18,*HOFF,"Minimum Length :",*HOFF:
                    *P001:19,*V2LON," 9.",*HOFF:
                    *P005:19,*HOFF,"Maximum Length :",*HOFF:
                    *P001:20,*V2LON,"10.",*HOFF:
                    *P005:20,*HOFF,"Mandatory (Y/N):",*HOFF:
                    *P001:21,*V2LON,"11.",*HOFF:
                    *P005:21,*HOFF,"Multiples (Y/N):",*HOFF:
                    *P001:22,*V2LON,"12.",*HOFF:
                    *P005:22,*HOFF,"Key Type 0,1,2 :",*HOFF:
                    *P1:24;
          GOTO      ISCRB999
.
. Display Only Field
.-------------------
ISCRB200  DISPLAY   *P001:13,*V2LON," 3.",*HOFF:
                    *P005:13,*HOFF,"Field ID       :",*HOFF:
                    *P001:14,*V2LON," 4.",*HOFF:
                    *P005:14,*HOFF,"Dim/Form       :",*HOFF:
                    *P001:15,*V2LON," 5.",*HOFF:
                    *P005:15,*HOFF,"Field Length   :",*HOFF:
                    *P001:16,*V2LON," 6.",*HOFF:
                    *P005:16,*HOFF,"Display After  :",*HOFF:
                    *P001:17,*V2LON," 7.",*HOFF:
                    *P005:17,*HOFF,"Display Type   :",*HOFF:
                    *P001:18,*V2LON," 8.",*HOFF:
                    *P005:18,*HOFF,"Minimum Length :",*HOFF:
                    *P001:19,*V2LON," 9.",*HOFF:
                    *P005:19,*HOFF,"Maximum Length :",*HOFF:
                    *P001:20,*V2LON,"10.",*HOFF:
                    *P005:20,*HOFF,"Mandatory (Y/N):",*HOFF:
                    *P001:21,*V2LON,"11.",*HOFF:
                    *P005:21,*HOFF,"Multiples (Y/N):",*HOFF:
                    *P1:24;
          GOTO      ISCRB999
.
. Function Type Item
.--------------------
ISCRB300
          DISPLAY   *P001:13,*V2LON," 3.",*HOFF:
                    *P005:13,*HOFF,"Call Routine   :",*HOFF:
                    *P001:14,*V2LON," 4.",*HOFF:
                    *P005:14,*HOFF,"Function Exit  :",*HOFF
          GOTO      ISCRB999
.
. Screen Type Item
.--------------------
ISCRB400  
          DISPLAY   *P001:13,*V2LON," 3.",*HOFF:
                    *P005:13,*HOFF,"Screen ID      :",*HOFF:
                    *P001:14,*V2LON," 4.",*HOFF:
                    *P005:14,*HOFF,"Screen Exit    :",*HOFF
          GOTO      ISCRB999
.
. Word Processor Type Item
.-------------------------
ISCRB500  
          DISPLAY   *P001:13,*V2LON," 3.",*HOFF:
                    *P005:13,*HOFF,"Sys/File/Idx   :",*HOFF:
                    *P001:14,*V2LON," 4.",*HOFF:
                    *P005:14,*HOFF,"Minimum Width  :",*HOFF:
                    *P001:15,*V2LON," 5.",*HOFF:
                    *P005:15,*HOFF,"Maximum Width  :",*HOFF:
                    *P001:16,*V2LON," 6.",*HOFF:
                    *P005:16,*HOFF,"Load Field     :",*HOFF:
                    *P001:17,*V2LON," 7.",*HOFF:
                    *P005:17,*HOFF,"PACK       KEYxx,",*HOFF:
                    *P001:18,*V2LON," 8.",*HOFF:
                    *P005:18,*HOFF,"Match Length   :",*HOFF:
                    *P001:19,*V2LON," 9.",*HOFF:
                    *P005:19,*HOFF,"Confirm   (Y/N):",*HOFF:
                    *P001:20,*V2LON,"10.",*HOFF:
                    *P005:20,*HOFF,"Redraw    (Y/N):",*HOFF:
                    *P001:21,*V2LON,"11.",*HOFF:
                    *P005:21,*HOFF,"Read Only (Y/N):",*HOFF:
                    *P001:22,*V2LON,"12.",*HOFF:
                    *P005:22,*HOFF,"Show More (Y/N):",*HOFF:
                    *P041:20,*V2LON,"13.",*HOFF:
                    *P045:20,*HOFF,"Default Row/Col:",*HOFF:
                    *P041:21,*V2LON,"14.",*HOFF:
                    *P045:21,*HOFF,"Default Width  :",*HOFF:
                    *P041:22,*V2LON,"15.",*HOFF:
                    *P045:22,*HOFF,"Default Lines  :",*HOFF
          GOTO      ISCRB999
.
. Prompt
.-------
ISCRB600  
          GOTO      ISCRB999

ISCRB999  RETURN
.-------------------------------------------------
. IPROC - Enter Key Fields
.        Returns : EXIT  0=continue
.                        1=nothing entered
.                        2=EXITCHAR entered
.-------------------------------------------------
IPROC000  CALL      ICLRA000
          CALL      ISCRA000
          MOVE      SCPRPID,SCFLPID
          MOVE      SCMASID,SCFLSID
          MOVE      "40",HLEF
          MOVE      "80",HRIG
          MOVE      "1",HTOP
          MOVE      "21",HBOT
.
          MOVE      "022",CCOL
          MOVE      "09",CVERT
          MOVE      TWO,CKEYTYP
          CALL      KSCFLA00
          BRANCH    EXIT,IPROC999,IPROC999
          PACK      KEY15,SCPRPID,SCMASID,SCFLFNO
          CALL      RDSCFL1
          MOVE      OVRCD,ACCEPT
.
IPROC999  MOVE      ZERO,CKEYTYP
          RETURN
.
.-------------------------------------------------
. DISA - Display Screen A
.-------------------------------------------------
IDISA000  BRANCH    ACCEPT,IDISA999
          DISPLAY   *P022:09,*V2LON,SCFLFNO
          DISPLAY   *P022:11,*V2LON,SCFLDES
          DISPLAY   *P022:12,*V2LON,SCFLTYP
          CALL      GTYPE000
          DISPLAY   *P026:12,*HOFF,KTYPDES
.
          CALL      ISCRB000
          BRANCH    SCFLTYP,IDISA100,IDISA200,IDISA300,IDISA400,IDISA500:
                            IDISA600,IDISA300
.
. Key or Selection Field
.------------------------
IDISA100  
          MOVE      SCFLFLD,KEY8
          MOVE      SP70,SYFLDES
          CALL      RDSYFL1
          MOVE      DTYPE0,DTYPE
          LOAD      DTYPE,SCFLFTY,DTYPE1
          ADD       ONE,SCFLKTY
          LOAD      KTYPNAM,SCFLKTY,KTYPNAM0,KTYPNAM1,KTYPNAM2,KTYPNAM3:
                    KTYPNAM4,KTYPNAM5,KTYPNAM6
          SUB       ONE,SCFLKTY
          MOVE      NO,YESNO
          LOAD      YESNO,SCFLMAN,YES
          PACK      KEY16,SCFLCAL,SCPRPID
          CALL      RDSCFM1
          IF        OVRCD=1
            PACK      KEY16,SCFLCAL,SP70
            CALL      RDSCFM1
            IF        OVRCD=1
              MOVE      SP70,SCFMDES
            ENDIF
          ENDIF
.
          DISPLAY   *P022:13,*V2LON,SCFLFLD,*HOFF,SP1,SYFLDES:
                    *P022:14,*V2LON,DTYPE:
                    *P022:15,*V2LON,SCFLFLN:
                    *P022:16,*V2LON,SCFLCAL,SP1,*HOFF,SCFMDES:
                    *P022:17,*V2LON,KTYPNAM:
                    *P022:18,*V2LON,SCFLMIN:
                    *P022:19,*V2LON,SCFLMAX:
                    *P022:20,*V2LON,YESNO
          MOVE      NO,YESNO
          BRANCH    SCFLMUL,IDISA110
          DISPLAY   *P022:21,*V2LON,YESNO
          GOTO      IDISA120
.
IDISA110  MOVE      YES,YESNO
          DISPLAY   *P022:21,*V2LON,YESNO
          MOVE      SCFLMTY,KEY4
          CALL      RDSYFI1
          IF        OVRCD=1
            MOVE      SP70,SYFIDES
          ENDIF
          IF        SCFLTYP=0
            PACK      KEY15,SCPRPID,SCMASID,SCFLFNO
            CALL      RDSCWP1
            CALL      GBTYP000
            CALL      GBSEQ000
            DISPLAY   *P30:18,"Batch Seq.   : ",*V2LON,SCWPBSQ,*HOFF,SP1,BCHSEQ
            DISPLAY   *P30:19,"Batch Type   : ",*V2LON,SCWPBTY,*HOFF,SP1,BCHTYP
            DISPLAY   *P30:20,"Pack KeyXX,",*V2LON,SCWPPAK
          ENDIF
          DISPLAY   *P30:21,"Sys/File/Idx : ",*V2LON,SCFLMTY:
                    *HOFF,SP1,SYFIDES
          IF        SCFLTYP=0
            DISPLAY   *P30:22,"Match Length : ",*V2LON,SCWPMLN
          ENDIF
.
IDISA120
          CALL      GKTYP000
          DISPLAY   *P022:22,*V2LON,KEYTYPE
          GOTO      IDISA999
.
. Display Only Field
.-------------------
IDISA200  
          MOVE      SCFLFLD,KEY8
          MOVE      SP70,SYFLDES
          CALL      RDSYFL1
          MOVE      DTYPE0,DTYPE
          LOAD      DTYPE,SCFLFTY,DTYPE1
          ADD       ONE,SCFLKTY
          LOAD      KTYPNAM,SCFLKTY,KTYPNAM0,KTYPNAM1,KTYPNAM2,KTYPNAM3:
                    KTYPNAM4,KTYPNAM5,KTYPNAM6
          SUB       ONE,SCFLKTY
          MOVE      NO,YESNO
          LOAD      YESNO,SCFLMAN,YES
.
          DISPLAY   *P022:13,*V2LON,SCFLFLD,*HOFF,SP1,SYFLDES:
                    *P022:14,*V2LON,DTYPE:
                    *P022:15,*V2LON,SCFLFLN
          CALL      ISAVE000
          PACK      KEY15,SCFLPID,SCFLSID,SCFLDAF
          MOVE      SP70,SCFLDES
          CALL      RDSCFL1
          DISPLAY   *P022:16,*V2LON,SSCFLDAF,*HOFF,SP1,SCFLDES
          CALL      IREST000
          DISPLAY   *P022:17,*V2LON,KTYPNAM:
                    *P022:18,*V2LON,SCFLMIN:
                    *P022:19,*V2LON,SCFLMAX:
                    *P022:20,*V2LON,YESNO
          MOVE      NO,YESNO
          BRANCH    SCFLMUL,IDISA210
          DISPLAY   *P022:21,*V2LON,YESNO
          GOTO      IDISA220
.
IDISA210  MOVE      YES,YESNO
          DISPLAY   *P022:21,*V2LON,YESNO
          MOVE      SCFLMTY,KEY4
          CALL      RDSYFI1
          IF        OVRCD=1
            MOVE      SP70,SYFIDES
          ENDIF
          IF        SCFLTYP=0
            PACK      KEY15,SCPRPID,SCMASID,SCFLFNO
            CALL      RDSCWP1
            CALL      GBTYP000
            CALL      GBSEQ000
            DISPLAY   *P30:18,"Batch Seq.   : ",*V2LON,SCWPBSQ,*HOFF,SP1,BCHSEQ
            DISPLAY   *P30:19,"Batch Type   : ",*V2LON,SCWPBTY,*HOFF,SP1,BCHTYP
            DISPLAY   *P30:20,"Pack KeyXX,",*V2LON,SCWPPAK
          ENDIF
          DISPLAY   *P30:21,"Sys/File/Idx : ",*V2LON,SCFLMTY:
                    *HOFF,SP1,SYFIDES
          IF        SCFLTYP=0
            DISPLAY   *P30:22,"Match Length : ",*V2LON,SCWPMLN
          ENDIF

IDISA220
          GOTO      IDISA999
.
. Function Type Item
.--------------------
IDISA300
          CALL      GEXIT000
          PACK      KEY16,SCFLCAL,SCPRPID
          CALL      RDSCFM1
          IF        OVRCD=1
            PACK      KEY16,SCFLCAL,SP70
            CALL      RDSCFM1
            IF        OVRCD=1
              MOVE      SP70,SCFMDES
            ENDIF
          ENDIF
.
          DISPLAY   *P022:13,*V2LON,SCFLCAL,SP1,*HOFF,SCFMDES:
                    *P022:14,*V2LON,SCFLFEX:
                    *P026:14,*HOFF,EXITDES
          GOTO      IDISA999
.
. Screen Type Item
.--------------------
IDISA400  
          CALL      GEXIT000
          DISPLAY   *P022:13,*V2LON,SCFLFSC:
                    *P022:14,*V2LON,SCFLFEX:
                    *P026:14,*HOFF,EXITDES
          GOTO      IDISA999
.
. Word Processor Type Item
.-------------------------
IDISA500  
          MOVE      SCFLWPF,KEY4
          MOVE      SCFLWPF,KEY5
          CALL      RDSYFI1
          PACK      KEY15,SCPRPID,SCMASID,SCFLFNO
          CALL      RDSCWP1
          DISPLAY   *P022:13,*V2LON,KEY5,*HOFF,SP1,SYFIDES:
                    *P022:14,*V2LON,SCFLMIN:
                    *P022:15,*V2LON,SCFLMAX:
                    *P022:16,*V2LON,SCWPFLD:
                    *P022:17,*V2LON,SCWPPAK:
                    *P022:18,*V2LON,SCWPMLN
.
          MOVE      NO,YESNO
          LOAD      YESNO,SCWPCON,YES
          DISPLAY   *P022:19,*V2LON,YESNO
          MOVE      NO,YESNO
          LOAD      YESNO,SCWPRDS,YES
          DISPLAY   *P022:20,*V2LON,YESNO
          MOVE      NO,YESNO
          LOAD      YESNO,SCWPRDO,YES
          DISPLAY   *P022:21,*V2LON,YESNO
          MOVE      NO,YESNO
          LOAD      YESNO,SCWPSHM,YES
          DISPLAY   *P022:22,*V2LON,YESNO
          DISPLAY   *P062:20,*V2LON,SCWPDFR,*HOFF,"/",*V2LON,SCWPDFC:
                    *P062:21,*V2LON,SCWPLEN:
                    *P062:22,*V2LON,SCWPNOR
.
          GOTO      IDISA999
.
. Prompt
.-------
IDISA600  

IDISA999  RETURN
.-------------------------------------------------
. CLRA - Clear Fields A
.-------------------------------------------------
ICLRA000  
          MOVE      SP70,SCFLPID
          MOVE      SP70,SCFLSID
          MOVE      SP70,SCFLFNO
          MOVE      SP70,SCFLDES
          MOVE      ZERO,SCFLTYP 
          MOVE      SP70,SCFLFLD
          MOVE      SP70,SCFLCAL
          MOVE      SP70,SCFLWPF
          MOVE      SP70,SCFLFSC
          MOVE      ZERO,SCFLDEC  
          MOVE      ZERO,SCFLMIN   
          MOVE      ZERO,SCFLMAX
          MOVE      ZERO,SCFLFLN 
          MOVE      ZERO,SCFLFTY  
          MOVE      ZERO,SCFLKTY   
          MOVE      ZERO,SCFLMAN
          MOVE      ZERO,SCFLFEX 
          MOVE      SP70,SCFLDAF
          MOVE      ZERO,SCFLMUL  
          MOVE      ZERO,SCFLKEY   
          MOVE      SP70,SCFLMTY
          MOVE      SP70,SCFLSPA
.
          RETURN
.
.-------------------------------------------------
. ISELA - Select Field
.-------------------------------------------------
ISELA000  MOVE      ZERO,CCITEM
.
.---- determine option to execute ----
.
ISELA010  ADD       ONE,CCITEM
          BRANCH    ACCEPT,ISELA050
          CALL      MDELQST
.
          COMPARE   ZERO,CCITEM
          GOTO      ISELA900 IF EQUAL
.
          COMPARE   SEQ,CCITEM
          GOTO      ISELA950 IF EQUAL
.
          COMPARE   "-2",CCITEM
          GOTO      ISELA960 IF EQUAL
.
ISELA050  BRANCH    CCITEM,ISELA110,ISELA120
          BRANCH    SCFLTYP,ISELA060,ISELA065,ISELA070,ISELA075,ISELA080:
                            ISELA085,ISELA070

ISELA060  BRANCH    CCITEM,ISELA110,ISELA120,ISELA130,ISELA140:
                    ISELA150,ISELA160,ISELA170,ISELA180,ISELA190,ISELA200:
                    ISELA320,ISELA330
          BRANCH    ACCEPT,ISELA090
          BEEP
          GOTO      ISELA090
.
ISELA065  BRANCH    CCITEM,ISELA110,ISELA120,ISELA130,ISELA140:
                    ISELA150,ISELA210,ISELA170,ISELA180,ISELA190,ISELA200:
                    ISELA320
          BRANCH    ACCEPT,ISELA090
          BEEP
          GOTO      ISELA090
.
ISELA070  BRANCH    CCITEM,ISELA110,ISELA120,ISELA220,ISELA230
          BRANCH    ACCEPT,ISELA090
          BEEP
          GOTO      ISELA090
.
ISELA075  BRANCH    CCITEM,ISELA110,ISELA120,ISELA240,ISELA230
          BRANCH    ACCEPT,ISELA090
          BEEP
          GOTO      ISELA090
.
ISELA080  BRANCH    CCITEM,ISELA110,ISELA120,ISELA250,ISELA260:
                    ISELA270,ISELA340,ISELA350,ISELA360,ISELA370,ISELA380:
                    ISELA390,ISELA400,ISELA410,ISELA420,ISELA430
          BRANCH    ACCEPT,ISELA090
          BEEP
          GOTO      ISELA090
.
ISELA085  
          BRANCH    ACCEPT,ISELA090
          BEEP
          GOTO      ISELA090
.
ISELA090  MOVE      ZERO,ACCEPT
          GOTO      ISELA010
.
. Option    1
.
ISELA110  MOVE      "022",CCOL
          MOVE      "11",CVERT
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,SCFLDES:
                    *PCCOL:CVERT,*DV,SCFLDES:
                    *PCCOL:CVERT
          GOTO      ISELA010
.
. Option    2
.
ISELA120  MOVE      "022",CCOL
          MOVE      "12",CVERT
          CALL      KTYPE000
          CALL      GTYPE000
          DISPLAY   *P026:12,*HOFF,KTYPDES
          IF        SCFLTYP=6
            MOVE      ONE,SCFLMAN
            MOVE      THREE,SCFLMAX
            MOVE      THREE,SCFLMIN
          ENDIF
          CALL      ISCRB000
          GOTO      ISELA010
.
. Option    3
.
ISELA130  MOVE      "022",CCOL
          MOVE      "13",CVERT
.
          MOVE      TWO,CKEYTYP
          CALL      KSYFLB00
          BRANCH    EXIT,ISELA130,ISELA130 
          MOVE      ZERO,CKEYTYP
          PACK      SCFLFLD,KEY8,SP70
          PACK      KEY8,KEY8,SP70
          MOVE      ZERO,FLDFLAG
          MOVE      SP70,SYFLDES
          CALL      RDSYFL2
          BRANCH    OVRCD,ISELA135
          MOVE      ONE,FLDFLAG
          MOVE      SYFLTYP,SCFLFTY
          MOVE      SYFLLEN,SCFLFLN
.
ISELA135  DISPLAY   *PCCOL:CVERT,*V2LON,KEY8,*HOFF,SP1,SYFLDES
          MOVE      ZERO,SCFLDEC
          IF        FLDFLAG=0
            DISPLAY   *P32:13,"Declare Field (Y/N) : ";
            MOVE      "55",CCOL
            MOVE      ANSY,DEFYESNO   * Default Y
            CALL      YORN0000
            MOVE      FYESNO,SCFLDEC
          ENDIF
          GOTO      ISELA010
.
. Option    4
.
ISELA140  MOVE      "022",CCOL
          MOVE      "14",CVERT
          BRANCH    FLDFLAG,ISELA145
          MOVE      "D",ANS
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,ANS
          REP       UPPLOW,ANS
          MOVE      ZERO,SCFLFTY
          MATCH     "D",ANS
          GOTO      ISELA146 IF EQUAL
          MATCH     "F",ANS
          GOTO      ISELA140 IF NOT EQUAL
          MOVE      ONE,SCFLFTY
          GOTO      ISELA146
ISELA145  MOVE      SYFLTYP,SCFLFTY
ISELA146  BRANCH    SCFLFTY,ISELA149
          DISPLAY   *PCCOL:CVERT,*V2LON,"Dim "
          GOTO      ISELA010
ISELA149  DISPLAY   *PCCOL:CVERT,*V2LON,"Form"
          GOTO      ISELA010
.
. Option    5
.
ISELA150  MOVE      "022",CCOL
          MOVE      "15",CVERT 
          BRANCH    FLDFLAG,ISELA155
          KEYIN     *PCCOL:CVERT,*V2LON,SCFLFLN
ISELA155  DISPLAY   *PCCOL:CVERT,*V2LON,SCFLFLN
          GOTO      ISELA010
.
. Option    6
.
ISELA160  MOVE      "022",CCOL
          MOVE      "16",CVERT 
          MOVE      TWO,CKEYTYP
          MOVE      SP8,SCFLCAL
          MOVE      SP70,SCFMDES
          DISPLAY   *PCCOL:CVERT,*V2LON,SCFLCAL,SP1,*HOFF,SCFMDES
          MOVE      SCPRPID,SCFMPID
          CALL      KSCFMA00
          BRANCH    EXIT,ISELA010,ISELA010
          MOVE      SCFMFID,SCFLCAL
          PACK      KEY16,SCFMFID,SCFMPID
          CALL      RDSCFM1
          BRANCH    OVRCD,ISELA165
          DISPLAY   *PCCOL:CVERT,*V2LON,SCFLCAL,SP1,*HOFF,SCFMDES
          GOTO      ISELA010
ISELA165  DISPLAY   *P1:24,*EL,"Function Not on File. Insert (":
                    *V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ";
          MOVE      "38",CCOL
          MOVE      "24",CVERT
          MOVE      ANSY,DEFYESNO   * Default Y
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      ISELA160 IF EQUAL
          CALL      IFUNC000
          BRANCH    EXIT,ISELA160
          MOVE      "022",CCOL
          MOVE      "16",CVERT 
          DISPLAY   *PCCOL:CVERT,*V2LON,SCFLCAL,SP1,*HOFF,SCFMDES
          GOTO      ISELA010
.
. Option    7
.
ISELA170  MOVE      "022",CCOL
          MOVE      "17",CVERT
          KEYIN     *P1:24,*EL,*V2LON,"Type : ":
                    *V2LON,"0.",*HOFF,"Norm, ":
                    *V2LON,"1.",*HOFF,"*JR, ":
                    *V2LON,"2.",*HOFF,"*JR *ZF, ":
                    *V2LON,"3.",*HOFF,"0=No, ":
                    *V2LON,"4.",*HOFF,"0=Yes, ":
                    *V2LON,"5.",*HOFF,"Date, ":
                    *V2LON,"6.",*HOFF,"Null":
                    *PCCOL:CVERT,*V2LON,SCFLKTY:
                    *P1:24,*EL
          ADD       ONE,SCFLKTY
          BRANCH    SCFLKTY,ISELA175,ISELA175,ISELA175,ISELA175:
                            ISELA175,ISELA175,ISELA175
          BEEP
          GOTO      ISELA170
ISELA175  
          LOAD      KTYPNAM,SCFLKTY,KTYPNAM0,KTYPNAM1,KTYPNAM2,KTYPNAM3:
                    KTYPNAM4,KTYPNAM5,KTYPNAM6
          SUB       ONE,SCFLKTY
          DISPLAY   *PCCOL:CVERT,*V2LON,SCFLKTY,*HOFF,SP1,KTYPNAM
          GOTO      ISELA010
.
. Option    8
.
ISELA180  MOVE      "022",CCOL
          MOVE      "18",CVERT
          KEYIN     *PCCOL:CVERT,*V2LON,SCFLMIN:
                    *PCCOL:CVERT,*DV,*V2LON,SCFLMIN:
                    *PCCOL:CVERT
          GOTO      ISELA010
.
. Option    9
.
ISELA190  MOVE      "022",CCOL
          MOVE      "19",CVERT
          KEYIN     *PCCOL:CVERT,*V2LON,SCFLMAX:
                    *PCCOL:CVERT,*DV,*V2LON,SCFLMAX:
                    *PCCOL:CVERT
          GOTO      ISELA010
.
. Option    10
.
ISELA200  MOVE      "022",CCOL
          MOVE      "20",CVERT
          MOVE      ANSN,DEFYESNO   * Default Y
          CALL      YORN0000
          MOVE      FYESNO,SCFLMAN
          GOTO      ISELA010
.
. Option    11 - Display After Item Number
.
ISELA210  
          MOVE      "022",CCOL
          MOVE      "16",CVERT
          CALL      ISAVE000
ISELA211  CALL      KSCFLA00
          BRANCH    EXIT,ISELA215,ISELA211
          MOVE      SCFLFNO,SSCFLDAF
          DISPLAY   *PCCOL:CVERT,*V2LON,SSCFLDAF,SP1,SCFLDES
          CALL      IREST000
          GOTO      ISELA010
ISELA215  MOVE      SP5,SSCFLDAF     * Display after Optional
          CALL      IREST000
          GOTO      ISELA010
.
. Option    12 - Call Routine
.
ISELA220  
          MOVE      "022",CCOL
          MOVE      "13",CVERT
          MOVE      TWO,CKEYTYP
          MOVE      SP8,SCFLCAL
          MOVE      SP70,SCFMDES
          DISPLAY   *PCCOL:CVERT,*V2LON,SCFLCAL,SP1,*HOFF,SCFMDES
          MOVE      SCPRPID,SCFMPID
          CALL      KSCFMA00
          BRANCH    EXIT,ISELA010,ISELA010
          MOVE      SCFMFID,SCFLCAL
          PACK      KEY16,SCFMFID,SCFMPID
          CALL      RDSCFM1
          BRANCH    OVRCD,ISELA225
          DISPLAY   *PCCOL:CVERT,*V2LON,SCFLCAL,SP1,*HOFF,SCFMDES
          GOTO      ISELA010
ISELA225  COMPARE   SEVEN,SCFLTYP
          GOTO      ISELA010 IF EQUAL
          DISPLAY   *P1:24,*EL,"Function Not on File. Insert (":
                    *V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ";
          MOVE      "38",CCOL
          MOVE      "24",CVERT
          MOVE      ANSY,DEFYESNO   * Default Y
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      ISELA220 IF EQUAL
          CALL      IFUNC000
          BRANCH    EXIT,ISELA220
          MOVE      "3",CCITEM
          MOVE      "022",CCOL
          MOVE      "13",CVERT
          DISPLAY   *PCCOL:CVERT,*V2LON,SCFLCAL,SP1,*HOFF,SCFMDES
          GOTO      ISELA010
.
. Option    13 - Function Exit
.
ISELA230  
          MOVE      "022",CCOL
          MOVE      "14",CVERT
          CALL      KEXIT000
          CALL      GEXIT000
          DISPLAY   *P026:14,*HOFF,EXITDES
          GOTO      ISELA010
.
. Option    14 - Screen ID
.
ISELA240  
          MOVE      "022",CCOL
          MOVE      "13",CVERT
          KEYIN     *PCCOL:CVERT,*V2LON,SCFLFSC:
                    *PCCOL:CVERT,*DV,SCFLFSC
          GOTO      ISELA010
        
.
. Option    15 - System/File/Index
.
ISELA250  
          MOVE      "022",CCOL
          MOVE      "13",CVERT
          MOVE      ZERO,CKEYTYP
          CALL      KSYIDB00
          BRANCH    EXIT,ISELA250,ISELA250
          DISPLAY   *PCCOL:CVERT,*V2LON,KEY5,*HOFF,SP1,SYFIDES
          MOVE      KEY5,SCFLWPF
          GOTO      ISELA010
.
. Option    16 - Min Width
.
ISELA260  
          MOVE      "022",CCOL
          MOVE      "14",CVERT
          KEYIN     *PCCOL:CVERT,*V2LON,SCFLMIN:
                    *PCCOL:CVERT,*DV,SCFLMIN
          GOTO      ISELA010
.
. Option    17 - Max Width
.
ISELA270  
          MOVE      "022",CCOL
          MOVE      "15",CVERT
          KEYIN     *PCCOL:CVERT,*V2LON,SCFLMAX:
                    *PCCOL:CVERT,*DV,SCFLMAX
          GOTO      ISELA010
.
. Option    18 - Field
.
ISELA280  
          MOVE      "022",CCOL
          MOVE      "14",CVERT
          UNPACK    SCFLWPF,SYFLSYS,SYFLFIL
          MOVE      ZERO,CKEYTYP
          CALL      KSYFLA00
          BRANCH    EXIT,ISELA280,ISELA280
          PACK      SCFLFLD,SYFLSYS,SYFLFIL,SYFLFLD
          GOTO      ISELA010
.
. Option    19 - Min Width
.
ISELA290  
          MOVE      "022",CCOL
          MOVE      "15",CVERT
          KEYIN     *PCCOL:CVERT,*V2LON,SCFLMIN:
                    *PCCOL:CVERT,*DV,SCFLMIN
          GOTO      ISELA010
.
. Option    20 - Max Width
.
ISELA300  
          MOVE      "022",CCOL
          MOVE      "16",CVERT
          KEYIN     *PCCOL:CVERT,*V2LON,SCFLMAX:
                    *PCCOL:CVERT,*DV,SCFLMAX
          GOTO      ISELA010
.
. Option    21 - Mandatory
.
ISELA310  MOVE      "022",CCOL
          MOVE      "17",CVERT
          MOVE      ANSN,DEFYESNO   * Default Y
          CALL      YORN0000
          MOVE      FYESNO,SCFLMAN
          GOTO      ISELA010
.
. Option    10 Multiples
.
ISELA320  MOVE      "022",CCOL
          MOVE      "21",CVERT
          MOVE      ANSN,DEFYESNO   * Default Y
          CALL      YORN0000
          MOVE      FYESNO,SCFLMUL
          IF        SCFLMUL=0
            MOVE      SP70,SCFLMTY
          ELSE
            IF        SCFLTYP=0
              DISPLAY   *P30:18,"Batch Seq.   : "
              DISPLAY   *P30:19,"Batch Type   : "
              DISPLAY   *P30:20,"Pack KeyXX,"
              MOVE      "045",CCOL
              MOVE      "18",CVERT
              CALL      KBSEQ000    * Keyin Batch Type
              DISPLAY   *PCCOL:CVERT,*V2LON,SCWPBSQ,SP1,*HOFF,BCHSEQ
              MOVE      "045",CCOL
              MOVE      "19",CVERT
              CALL      KBTYP000    * Keyin Batch Type
              DISPLAY   *PCCOL:CVERT,*V2LON,SCWPBTY,SP1,*HOFF,BCHTYP
              MOVE      "041",CCOL
              MOVE      "20",CVERT
              KEYIN     *PCCOL:CVERT,*V2LON,*RV,SCWPPAK:
                        *PCCOL:CVERT,*V2LON,*DV,SCWPPAK
            ENDIF
            DISPLAY   *P30:21,"Sys/File/Idx : "
            MOVE      "045",CCOL
            MOVE      "21",CVERT
            MOVE      ZERO,CKEYTYP
            CALL      KSYIDB00
            BRANCH    EXIT,ISELA320,ISELA320
            MOVE      KEY5,SCFLMTY
            MOVE      SCFLMTY,KEY4
            CALL      RDSYFI1
            IF        OVRCD=1
              MOVE      SP70,SYFIDES
            ENDIF
            DISPLAY   *P30:21,"Sys/File/Idx : ",*V2LON,SCFLMTY:
                    *HOFF,SP1,SYFIDES
            IF        SCFLTYP=0
              DISPLAY   *P30:22,"Match Length : "
              MOVE      "045",CCOL
              MOVE      "22",CVERT
              KEYIN     *PCCOL:CVERT,*V2LON,*RV,SCWPMLN:
                        *PCCOL:CVERT,*V2LON,*DV,SCWPMLN
            ENDIF
          ENDIF
          GOTO      ISELA010
.
. Option    11 Key Type (CKEYTYP)
.
ISELA330  MOVE      "022",CCOL
          MOVE      "22",CVERT
          DISPLAY   *P1:24,*EL,*V2LON,"0.",*HOFF," Modify, ":
                               *V2LON,"1.",*HOFF," Insert, ":
                               *V2LON,"2.",*HOFF,"Either"
          KEYIN     *PCCOL:CVERT,*V2LON,SCFLKEY
          IF        SCFLKEY>2
             BEEP
             GOTO     ISELA330
          ENDIF
          CALL      GKTYP000
          DISPLAY   *PCCOL:CVERT,*V2LON,KEYTYPE
          GOTO      ISELA010
.
. Option  6.  WP Field
.
ISELA340  
          MOVE      "022",CCOL
          MOVE      "16",CVERT
          KEYIN     *PCCOL:CVERT,*V2LON,SCWPFLD:
                    *PCCOL:CVERT,*DV,SCWPFLD
          GOTO      ISELA010
.
. Option  7.  WP Pack
.
ISELA350  
          MOVE      "022",CCOL
          MOVE      "17",CVERT
          KEYIN     *PCCOL:CVERT,*V2LON,SCWPPAK:
                    *PCCOL:CVERT,*DV,SCWPPAK
          GOTO      ISELA010
.
. Option  8.  WP Setlength
.
ISELA360  
          MOVE      "022",CCOL
          MOVE      "18",CVERT
          KEYIN     *PCCOL:CVERT,*V2LON,SCWPMLN:
                    *PCCOL:CVERT,*DV,SCWPMLN
          GOTO      ISELA010
.
. Option  9. Confirm
.
ISELA370  MOVE      "022",CCOL
          MOVE      "19",CVERT
          MOVE      ANSN,DEFYESNO   * Default Y
          CALL      YORN0000
          MOVE      FYESNO,SCWPCON
          GOTO      ISELA010
.
.
. Option 10. Redraw 
.
ISELA380  MOVE      "022",CCOL
          MOVE      "20",CVERT
          MOVE      ANSN,DEFYESNO   * Default Y
          CALL      YORN0000
          MOVE      FYESNO,SCWPRDS
          GOTO      ISELA010
.
.
. Option 11. Read Only
.
ISELA390  MOVE      "022",CCOL
          MOVE      "21",CVERT
          MOVE      ANSN,DEFYESNO   * Default Y
          CALL      YORN0000
          MOVE      FYESNO,SCWPRDO
          GOTO      ISELA010
.
.
. Option 12. Show More
.
ISELA400  MOVE      "022",CCOL
          MOVE      "22",CVERT
          MOVE      ANSY,DEFYESNO   * Default Y
          CALL      YORN0000
          MOVE      FYESNO,SCWPSHM
          GOTO      ISELA010
.
. Option 13 - Default Row/Col
.
ISELA410  
          MOVE      "062",CCOL
          MOVE      "20",CVERT
          KEYIN     *PCCOL:CVERT,*V2LON,SCWPDFR:
                    *PCCOL:CVERT,*DV,SCWPDFR,*HOFF,"/",*V2LON,SCWPDFC:
                    *PCCOL:CVERT,*DV,SCWPDFR,*HOFF,"/",*V2LON,*DV,SCWPDFC
          GOTO      ISELA010
.
. Option  14 - Default Width
.
ISELA420  
          MOVE      "062",CCOL
          MOVE      "21",CVERT
          KEYIN     *PCCOL:CVERT,*V2LON,SCWPLEN:
                    *PCCOL:CVERT,*DV,SCWPLEN
          GOTO      ISELA010
.
. Option  15 - Default Number of Lines
.
ISELA430  
          MOVE      "062",CCOL
          MOVE      "22",CVERT
          KEYIN     *PCCOL:CVERT,*V2LON,SCWPNOR:
                    *PCCOL:CVERT,*DV,SCWPNOR
          GOTO      ISELA010
.
.
.---- exit points ----
.
ISELA900  MOVE      ZERO,EXIT
          GOTO      ISELA9999
.
ISELA950  MOVE      ONE,EXIT
          GOTO      ISELA9999
ISELA960  MOVE      TWO,EXIT
          GOTO      ISELA9999
.
ISELA999  RETURN
.
.-------------------------------------------------
. WRTA - Write to Files
.-------------------------------------------------
IWRTA000  PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO,SP70
          CALL      RASCFL1
          IF        OVRCD=1
            CALL      WRSCFL1
            IF        SCFLMUL=1
              IF        SCFLTYP=0
                CALL      IGENA000
              ENDIF
            ENDIF
          ELSE
            CALL      UPSCFL1
          ENDIF
.
          IF        SCFLTYP=5
            PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO,SP70
            UNPACK    KEY15,SCWPPID,SCWPSID,SCWPITM
            CALL      RASCWP1
            IF        OVRCD=1
              CALL      WRSCWP1
            ELSE
              CALL      UPSCWP1
            ENDIF
          ENDIF
.
          IF        SCFLTYP=0
            IF        SCFLMUL=1
              PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO,SP70
              UNPACK    KEY15,SCWPPID,SCWPSID,SCWPITM
              CALL      RASCWP1
              IF        OVRCD=1
                CALL      WRSCWP1
              ELSE
                CALL      UPSCWP1
              ENDIF
            ENDIF
          ENDIF
.
IWRTA999  RETURN
.
IGENA000  DISPLAY   *P1:24,*EL,"Creating Next, Previous, First, Last":
                               ", Add, Delete Options"
          CALL      ISAVE000
          PACK      KEY15,SCFLPID,SCFLSID,Z70
          CALL      RSSCFL1          * Get Last Item for this screen
          CALL      RPSCFL1
          MOVE      SCFLFNO,FIELDNO 
.
IGENA100  ADD       ONE,FIELDNO      * Next Item Number
          MOVE      FIELDNO,SCFLFNO  
          PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO,SP70
          CALL      RASCFL1
          COMPARE   ZERO,OVRCD
          GOTO      IGENA100 IF EQUAL
.
          MOVE      SSCFLDES,SCFLDES
          STRIP     SCFLDES
          ENDSET    SCFLDES
          APPEND    " - Next Page",SCFLDES
          APPEND    SP70,SCFLDES
          RESET     SCFLDES
          PACK      SCFLCAL,LABELNP,SCMASID,ANSL,ZERO,ZERO,ZERO
          MOVE      SEVEN,SCFLTYP 
          MOVE      ONE,SCFLFEX 
          MOVE      SSCFLMTY,SCFLMTY
          MOVE      SSCFLFNO,SCFLDAF
.
          MOVE      SP70,SCFLFLD
          MOVE      SP70,SCFLWPF
          MOVE      SP70,SCFLFSC
          MOVE      ZERO,SCFLDEC  
          MOVE      ZERO,SCFLMIN   
          MOVE      ZERO,SCFLMAX
          MOVE      ZERO,SCFLFLN 
          MOVE      ZERO,SCFLFTY  
          MOVE      ZERO,SCFLKTY   
          MOVE      ZERO,SCFLMAN
          MOVE      ZERO,SCFLMUL  
          MOVE      ZERO,SCFLKEY   
          MOVE      SP70,SCFLSPA
.
          CALL      WRSCFL1
.
IGENA200  ADD       ONE,FIELDNO      * Next Item Number
          MOVE      FIELDNO,SCFLFNO  
          PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO,SP70
          CALL      RASCFL1
          COMPARE   ZERO,OVRCD
          GOTO      IGENA200 IF EQUAL
.
          MOVE      SSCFLDES,SCFLDES
          STRIP     SCFLDES
          ENDSET    SCFLDES
          APPEND    " - Previous Page",SCFLDES
          APPEND    SP70,SCFLDES
          RESET     SCFLDES
          PACK      SCFLCAL,LABELPP,SCMASID,ANSL,ZERO,ZERO,ZERO
          MOVE      SEVEN,SCFLTYP 
          MOVE      ONE,SCFLFEX 
          MOVE      SSCFLMTY,SCFLMTY
          MOVE      SSCFLFNO,SCFLDAF
.
          CALL      WRSCFL1 
.
          COMPARE   ONE,SCWPBTY       * Enquiry Only No Add or Delete
          GOTO      IGENA500 IF EQUAL
.
IGENA300  ADD       ONE,FIELDNO      * Next Item Number
          MOVE      FIELDNO,SCFLFNO  
          PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO,SP70
          CALL      RASCFL1
          COMPARE   ZERO,OVRCD
          GOTO      IGENA300 IF EQUAL
.
          MOVE      SSCFLDES,SCFLDES
          STRIP     SCFLDES
          ENDSET    SCFLDES
          APPEND    " - Add More",SCFLDES
          APPEND    SP70,SCFLDES
          RESET     SCFLDES
          PACK      SCFLCAL,LABELAD,SCMASID,ANSL,ZERO,ZERO,ZERO
          MOVE      SEVEN,SCFLTYP 
          MOVE      ONE,SCFLFEX 
          MOVE      SSCFLMTY,SCFLMTY
          MOVE      SSCFLFNO,SCFLDAF
.
          CALL      WRSCFL1
.
.
IGENA400  ADD       ONE,FIELDNO       * delete
          MOVE      FIELDNO,SCFLFNO  
          PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO,SP70
          CALL      RASCFL1
          COMPARE   ZERO,OVRCD
          GOTO      IGENA400 IF EQUAL
.
          MOVE      SSCFLDES,SCFLDES
          STRIP     SCFLDES
          ENDSET    SCFLDES
          APPEND    " - Delete ",SCFLDES
          APPEND    SP70,SCFLDES
          RESET     SCFLDES
          PACK      SCFLCAL,LABELDL,SCMASID,ANSL,ZERO,ZERO,ZERO
          MOVE      SEVEN,SCFLTYP 
          MOVE      ONE,SCFLFEX 
          MOVE      SSCFLMTY,SCFLMTY
          MOVE      SSCFLFNO,SCFLDAF
.
          CALL      WRSCFL1
.
IGENA500  ADD       ONE,FIELDNO      
          MOVE      FIELDNO,SCFLFNO  
          PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO,SP70
          CALL      RASCFL1
          COMPARE   ZERO,OVRCD
          GOTO      IGENA500 IF EQUAL
.
          MOVE      SSCFLDES,SCFLDES
          STRIP     SCFLDES
          ENDSET    SCFLDES
          APPEND    " - First Page ",SCFLDES
          APPEND    SP70,SCFLDES
          RESET     SCFLDES
          PACK      SCFLCAL,LABELFP,SCMASID,ANSL,ZERO,ZERO,ZERO
          MOVE      SEVEN,SCFLTYP 
          MOVE      ONE,SCFLFEX 
          MOVE      SSCFLMTY,SCFLMTY
          MOVE      SSCFLFNO,SCFLDAF
.
          CALL      WRSCFL1
.
IGENA600  ADD       ONE,FIELDNO      * Next Item Number
          MOVE      FIELDNO,SCFLFNO  
          PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO,SP70
          CALL      RASCFL1
          COMPARE   ZERO,OVRCD
          GOTO      IGENA600 IF EQUAL
.
          MOVE      SSCFLDES,SCFLDES
          STRIP     SCFLDES
          ENDSET    SCFLDES
          APPEND    " - Last Page ",SCFLDES
          APPEND    SP70,SCFLDES
          RESET     SCFLDES
          PACK      SCFLCAL,LABELLP,SCMASID,ANSL,ZERO,ZERO,ZERO
          MOVE      SEVEN,SCFLTYP 
          MOVE      ONE,SCFLFEX 
          MOVE      SSCFLMTY,SCFLMTY
          MOVE      SSCFLFNO,SCFLDAF
.
          CALL      WRSCFL1
.
IGENA999  CALL      IREST000
          RETURN
.
.-------------------------------------------------
. DELA - Delete Record
.-------------------------------------------------
IDELA000  PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO,SP70
          CALL      RASCFL1
          IF        OVRCD=0
            CALL      DESCFL1
          ENDIF
          PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO,SP70
          CALL      RASCWP1
          IF        OVRCD=0
            CALL      DESCWP1
          ENDIF
IDELA999  RETURN
.----------------------------------
. Tag Call Routines Against Items
.----------------------------------
ITAGS000  MOVE      "13",HTOP
          MOVE      "1",HLEF
          MOVE      "24",HBOT
          MOVE      "80",HRIG
          CALL      GETSCR00
          MOVE      ZERO,HTOP
          MOVE      ZERO,HLEF
          MOVE      ZERO,HBOT
          MOVE      ZERO,HRIG
ITAGS001  DISPLAY   *P1:14,*EF
          HLINE     *G37,14,1,80
          DISPLAY   *P4:15,*V2LON,*ULON," Tag Maintenance ",*HOFF:
                    *P1:17,"    Item Number         :":
                    *P1:19,*V2LON," 1.",*HOFF," Call Before Display :":
                    *P1:20,*V2LON," 2.",*HOFF," Call After  Display :":
                    *P1:21,*V2LON," 3.",*HOFF," Call Before Keyin   :":
                    *P1:22,*V2LON," 4.",*HOFF," Call After  Keyin   :"
          MOVE      "27",CCOL
          MOVE      "17",CVERT
          MOVE      ZERO,CKEYTYP
          MOVE      SCPRPID,SCFLPID
          MOVE      SCMASID,SCFLSID
          CALL      KSCFLA00
          BRANCH    EXIT,ITAGS900,ITAGS900
          DISPLAY   *PCCOL:CVERT,*V2LON,SCFLFNO,*HOFF,SP1,SCFLDES
          PACK      KEY15,SCPRPID,SCMASID,SCFLFNO
          CALL      RDSCTA1
          IF        OVRCD=1
            MOVE      SP70,SCTACBD
            MOVE      SP70,SCTACAD
            MOVE      SP70,SCTACBK
            MOVE      SP70,SCTACAK
          ENDIF
          DISPLAY   *P27:19,*V2LON,SCTACBD:
                    *P27:20,*V2LON,SCTACAD:
                    *P27:21,*V2LON,SCTACBK:
                    *P27:22,*V2LON,SCTACAK
ITAGS010  CALL      MAINQST
          COMPARE   ZERO,CCITEM
          GOTO      ITAGS800 IF EQUAL
.
          COMPARE   SEQ,CCITEM
          GOTO      ITAGS001 IF EQUAL
.
          BRANCH    CCITEM,ITAGS110,ITAGS120,ITAGS130,ITAGS140
          BEEP
          GOTO      ITAGS010
.
. Option    1
.
ITAGS110  MOVE      "27",CCOL
          MOVE      "19",CVERT
          MOVE      TWO,CKEYTYP
          MOVE      SP8,SCTACBD
          MOVE      SP70,SCFMDES
          DISPLAY   *PCCOL:CVERT,*V2LON,SCTACBD,SP1,*HOFF,SCFMDES
          MOVE      SCPRPID,SCFMPID
          CALL      KSCFMA00
          BRANCH    EXIT,ITAGS010,ITAGS010
          MOVE      SCFMFID,SCTACBD
          PACK      KEY16,SCFMFID,SCFMPID
          CALL      RDSCFM1
          BRANCH    OVRCD,ITAGS115
          DISPLAY   *PCCOL:CVERT,*V2LON,SCTACBD,SP1,*HOFF,SCFMDES
          GOTO      ITAGS010
ITAGS115  DISPLAY   *P1:24,*EL,"Function Not on File. Insert (":
                    *V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ";
          MOVE      "38",CCOL
          MOVE      "24",CVERT
          MOVE      ANSY,DEFYESNO   * Default Y
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      ITAGS110 IF EQUAL
          CALL      IFUNC000
          BRANCH    EXIT,ITAGS110
          MOVE      "27",CCOL
          MOVE      "19",CVERT
          DISPLAY   *PCCOL:CVERT,*V2LON,SCTACBD,SP1,*HOFF,SCFMDES
          GOTO      ITAGS010
.
. Option    2
.
ITAGS120  MOVE      "27",CCOL
          MOVE      "20",CVERT
          MOVE      TWO,CKEYTYP
          MOVE      SP8,SCTACAD
          MOVE      SP70,SCFMDES
          DISPLAY   *PCCOL:CVERT,*V2LON,SCTACAD,SP1,*HOFF,SCFMDES
          MOVE      SCPRPID,SCFMPID
          CALL      KSCFMA00
          BRANCH    EXIT,ITAGS010,ITAGS010
          MOVE      SCFMFID,SCTACAD
          PACK      KEY16,SCFMFID,SCFMPID
          CALL      RDSCFM1
          BRANCH    OVRCD,ITAGS125
          DISPLAY   *PCCOL:CVERT,*V2LON,SCTACAD,SP1,*HOFF,SCFMDES
          GOTO      ITAGS010
ITAGS125  DISPLAY   *P1:24,*EL,"Function Not on File. Insert (":
                    *V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ";
          MOVE      "38",CCOL
          MOVE      "24",CVERT
          MOVE      ANSY,DEFYESNO   * Default Y
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      ITAGS120 IF EQUAL
          CALL      IFUNC000
          BRANCH    EXIT,ITAGS120
          MOVE      "27",CCOL
          MOVE      "20",CVERT
          DISPLAY   *PCCOL:CVERT,*V2LON,SCTACAD,SP1,*HOFF,SCFMDES
          GOTO      ITAGS010
.
. Option    3
.
ITAGS130  MOVE      "27",CCOL
          MOVE      "21",CVERT
          MOVE      TWO,CKEYTYP
          MOVE      SP8,SCTACBK
          MOVE      SP70,SCFMDES
          DISPLAY   *PCCOL:CVERT,*V2LON,SCTACBK,SP1,*HOFF,SCFMDES
          MOVE      SCPRPID,SCFMPID
          CALL      KSCFMA00
          BRANCH    EXIT,ITAGS010,ITAGS010
          MOVE      SCFMFID,SCTACBK
          PACK      KEY16,SCFMFID,SCFMPID
          CALL      RDSCFM1
          BRANCH    OVRCD,ITAGS135
          DISPLAY   *PCCOL:CVERT,*V2LON,SCTACBK,SP1,*HOFF,SCFMDES
          GOTO      ITAGS010
ITAGS135  DISPLAY   *P1:24,*EL,"Function Not on File. Insert (":
                    *V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ";
          MOVE      "38",CCOL
          MOVE      "24",CVERT
          MOVE      ANSY,DEFYESNO   * Default Y
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      ITAGS130 IF EQUAL
          CALL      IFUNC000
          BRANCH    EXIT,ITAGS130
          MOVE      "27",CCOL
          MOVE      "21",CVERT
          DISPLAY   *PCCOL:CVERT,*V2LON,SCTACBK,SP1,*HOFF,SCFMDES
          GOTO      ITAGS010
.
. Option    4
.
ITAGS140  MOVE      "27",CCOL
          MOVE      "22",CVERT
          MOVE      TWO,CKEYTYP
          MOVE      SP8,SCTACAK
          MOVE      SP70,SCFMDES
          DISPLAY   *PCCOL:CVERT,*V2LON,SCTACAK,SP1,*HOFF,SCFMDES
          MOVE      SCPRPID,SCFMPID
          CALL      KSCFMA00
          BRANCH    EXIT,ITAGS010,ITAGS010
          MOVE      SCFMFID,SCTACAK
          PACK      KEY16,SCFMFID,SCFMPID
          CALL      RDSCFM1
          BRANCH    OVRCD,ITAGS145
          DISPLAY   *PCCOL:CVERT,*V2LON,SCTACAK,SP1,*HOFF,SCFMDES
          GOTO      ITAGS010
ITAGS145  DISPLAY   *P1:24,*EL,"Function Not on File. Insert (":
                    *V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ";
          MOVE      "38",CCOL
          MOVE      "24",CVERT
          MOVE      ANSY,DEFYESNO   * Default Y
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      ITAGS140 IF EQUAL
          CALL      IFUNC000
          BRANCH    EXIT,ITAGS140
          MOVE      "22",CCOL
          MOVE      "21",CVERT
          DISPLAY   *PCCOL:CVERT,*V2LON,SCTACAK,SP1,*HOFF,SCFMDES
          GOTO      ITAGS010
.
ITAGS800  MATCH     SP70,SCTACBD
          GOTO      ITAGS810 IF NOT EQUAL
          MATCH     SP70,SCTACAD
          GOTO      ITAGS810 IF NOT EQUAL
          MATCH     SP70,SCTACBK
          GOTO      ITAGS810 IF NOT EQUAL
          MATCH     SP70,SCTACAK
          GOTO      ITAGS810 IF NOT EQUAL
          PACK      KEY15,SCPRPID,SCMASID,SCFLFNO
          CALL      DESCTA1
          GOTO      ITAGS001
ITAGS810
          PACK      KEY15,SCPRPID,SCMASID,SCFLFNO
          CALL      RASCTA1
          IF        OVRCD=1
            UNPACK    KEY15,SCTAPID,SCTASID,SCTAFNO
            CALL      WRSCTA1
          ELSE
            CALL      UPSCTA1
          ENDIF
          GOTO      ITAGS001
.
ITAGS900 
          CALL      PUTSCR00
          RETURN
.******************************************************************************
.         Subroutine to SELECT ITEM, POST, DELETE or CANCEL
.------------------------------------------------------------------------------
MDELQST   MOVE      ZERO,CCITEM
          MOVE      SP10,CCITEMD
          KEYIN     *P1:24,*EL,"Select Item, (",*V2LON,"P",*HOFF,")ost, (":
                    *V2LON,"C",*HOFF,")ancel, (":
                    *V2LON,"D",*HOFF,")elete ? ",*V2LON,*JR,CCITEMD;
.
          RESET     CCITEMD
          GOTO      MDELQST IF EOS
.
          REP       UPPLOW,CCITEMD
.
          MATCH     "  C",CCITEMD
          GOTO      MDELQST1 IF EQUAL
.
          MATCH     "  P",CCITEMD
          GOTO      MDELQST2 IF EQUAL
.
          MATCH     "  D",CCITEMD
          GOTO      MDELQST3 IF EQUAL
.
          TYPE      CCITEMD
          GOTO      MDELQSTE IF NOT EQUAL
.
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM
          GOTO      MDELQSTE IF LESS
.
          RETURN
.
MDELQSTE  BEEP
          GOTO      MDELQST
.
MDELQST1  MOVE      "-1",CCITEM
          RETURN
.
MDELQST2  MOVE      "0",CCITEM
          RETURN
.
MDELQST3  MOVE      "-2",CCITEM
          RETURN
.
.******************************************************************************
.         Subroutine to SELECT ITEM, POST, DELETE or CANCEL
.------------------------------------------------------------------------------
IDELQST   MOVE      ZERO,CCITEM
          MOVE      SP10,CCITEMD
          KEYIN     *P1:24,*EL,"Select Item, (",*V2LON,"P",*HOFF,")ost, (":
                    *V2LON,"C",*HOFF,")ancel, (":
                    *V2LON,"R",*HOFF,")epeat, (":
                    *V2LON,"D",*HOFF,")elete ? ",*V2LON,*JR,CCITEMD;
.
          RESET     CCITEMD
          GOTO      IDELQST IF EOS
.
          REP       UPPLOW,CCITEMD
.
          MATCH     "  C",CCITEMD
          GOTO      IDELQST1 IF EQUAL
.
          MATCH     "  P",CCITEMD
          GOTO      IDELQST2 IF EQUAL
.
          MATCH     "  D",CCITEMD
          GOTO      IDELQST3 IF EQUAL
.
          MATCH     "  R",CCITEMD
          GOTO      IDELQST4 IF EQUAL
.
          TYPE      CCITEMD
          GOTO      IDELQSTE IF NOT EQUAL
.
          MOVE      CCITEMD,CCITEM
          COMPARE   ONE,CCITEM
          GOTO      IDELQSTE IF LESS
.
          RETURN
.
IDELQSTE  BEEP
          GOTO      IDELQST
.
IDELQST1  MOVE      "-1",CCITEM
          RETURN
.
IDELQST2  MOVE      "0",CCITEM
          RETURN
.
IDELQST3  MOVE      "-2",CCITEM
          RETURN
.
IDELQST4  MOVE      "-3",CCITEM
          RETURN
.
.
.
.
.
MVPID000  MOVE     SCPRPID,SCPRPID
          RETURN
.
.
GKTYP000  MOVE     KEYTYPE0,KEYTYPE
          LOAD     KEYTYPE,SCFLKEY,KEYTYPE1,KEYTYPE2
          RETURN  
.----------------------------------------------------------------------
. Keyin Batch Screen Type
.----------------------------------------------------------------------
KBTYP000  DISPLAY  *P1:24,*EL,"Type : ",*V2LON,"0. ",*HOFF,BCHTYP0:
                                        *V2LON,"1. ",*HOFF,BCHTYP1:
                                        *V2LON,"2. ",*HOFF,BCHTYP2:
                                        *V2LON,"3. ",*HOFF,BCHTYP3
          KEYIN    *PCCOL:CVERT,*V2LON,SCWPBTY:
                   *PCCOL:CVERT,*DV,SCWPBTY
          ADD      ONE,SCWPBTY
          BRANCH   SCWPBTY,KBTYP900,KBTYP900,KBTYP900,KBTYP900
          BEEP
          GOTO     KBTYP000
.
KBTYP900  SUB      ONE,SCWPBTY
          CALL     GBTYP000
          RETURN
.
GBTYP000  ADD      ONE,SCWPBTY
          LOAD     BCHTYP,SCWPBTY,BCHTYP0,BCHTYP1,BCHTYP2,BCHTYP3
          SUB      ONE,SCWPBTY
          RETURN
.----------------------------------------------------------------------
. Keyin Batch Screen Seq
.----------------------------------------------------------------------
KBSEQ000  DISPLAY  *P1:24,*EL,"Sequence : ",*V2LON,"0. ",*HOFF,BCHSEQ0:
                                        *V2LON,"1. ",*HOFF,BCHSEQ1
          KEYIN    *PCCOL:CVERT,*V2LON,SCWPBSQ:
                   *PCCOL:CVERT,*DV,SCWPBSQ
          ADD      ONE,SCWPBSQ
          BRANCH   SCWPBSQ,KBSEQ900,KBSEQ900
          BEEP
          GOTO     KBSEQ000
.
KBSEQ900  SUB      ONE,SCWPBSQ
          CALL     GBSEQ000
          RETURN
.
GBSEQ000  ADD      ONE,SCWPBSQ
          LOAD     BCHSEQ,SCWPBSQ,BCHSEQ0,BCHSEQ1
          SUB      ONE,SCWPBSQ
          RETURN
.----------------------------------------------------------------------
. Keyin Item Type
.----------------------------------------------------------------------
KTYPE000  DISPLAY  *P1:24,*EL,"Type : ",*V2LON,"0.",*HOFF,"Key, ":
                                        *V2LON,"1.",*HOFF,"Sel., ":
                                        *V2LON,"2.",*HOFF,"Dis., ":
                                        *V2LON,"3.",*HOFF,"Fun., ":
                                        *V2LON,"4.",*HOFF,"Scr., ":
                                        *V2LON,"5.",*HOFF,"WP, ":
                                        *V2LON,"6.",*HOFF,"Prompt, ":
                                        *V2LON,"7.",*HOFF,"Gen.Fun.";
          KEYIN    *PCCOL:CVERT,*V2LON,SCFLTYP:
                   *PCCOL:CVERT,*DV,SCFLTYP
          ADD      ONE,SCFLTYP
          BRANCH   SCFLTYP,KTYPE900,KTYPE900,KTYPE900,KTYPE900,KTYPE900:
                           KTYPE900,KTYPE900,KTYPE900
          BEEP
          GOTO     KTYPE000
.
KTYPE900  SUB      ONE,SCFLTYP
          RETURN

GTYPE000  BRANCH   SCFLTYP,GTYPE100,GTYPE200,GTYPE300,GTYPE400,GTYPE500:
                           GTYPE600,GTYPE700
          MOVE     "Key            ",KTYPDES
          GOTO     GTYPE999
GTYPE100  MOVE     "Selection      ",KTYPDES
          GOTO     GTYPE999
GTYPE200  MOVE     "Display        ",KTYPDES
          GOTO     GTYPE999
GTYPE300  MOVE     "Function       ",KTYPDES
          GOTO     GTYPE999
GTYPE400  MOVE     "Screen         ",KTYPDES
          GOTO     GTYPE999
GTYPE500  MOVE     "Word Processor ",KTYPDES
          GOTO     GTYPE999
GTYPE600  MOVE     "Prompt         ",KTYPDES
          GOTO     GTYPE999
GTYPE700  MOVE     "Generated Funct",KTYPDES
          GOTO     GTYPE999
GTYPE999  RETURN

GEXIT000  BRANCH   SCFLFEX,GEXIT100,GEXIT200,GEXIT300,GEXIT400,GEXIT500
          MOVE     "Exit Screen    ",EXITDES
          GOTO     GEXIT999
GEXIT100  MOVE     "Return Prompt  ",EXITDES
          GOTO     GEXIT999
GEXIT200  MOVE     "Restart Screen ",EXITDES
          GOTO     GEXIT999
GEXIT300  MOVE     "Restore Screen ",EXITDES
          GOTO     GEXIT999
GEXIT400  MOVE     "Restore&Display",EXITDES
          GOTO     GEXIT999
GEXIT500  MOVE     "Branch on EXIT ",EXITDES
          GOTO     GEXIT999
GEXIT999  RETURN
.
KEXIT000  DISPLAY  *P1:24,*EL,"Type : ",*V2LON,"0.",*HOFF," Exit, ":
                                        *V2LON,"1.",*HOFF," Prompt, ":
                                        *V2LON,"2.",*HOFF," Restart, ":
                                        *V2LON,"3.",*HOFF," Restore, ":
                                        *V2LON,"4.",*HOFF," Restore&Display, ":
                                        *V2LON,"5.",*HOFF," Branch on EXIT";
          KEYIN    *PCCOL:CVERT,*V2LON,SCFLFEX:
                   *PCCOL:CVERT,*DV,SCFLFEX
          ADD      ONE,SCFLFEX
          BRANCH   SCFLFEX,KEXIT900,KEXIT900,KEXIT900,KEXIT900,KEXIT900,KEXIT900
          BEEP
          GOTO     KEXIT000
KEXIT900  SUB      ONE,SCFLFEX
          RETURN
.
HITENT01  KEYIN     "Hit <",*V2LON,"ENTER",*HOFF,"> to continue ":
                    *EOFF,ANS,*P1:01,*EL;
          RETURN
ISAVE000  MOVE      SCFLPID,SSCFLPID
          MOVE      SCFLSID,SSCFLSID
          MOVE      SCFLFNO,SSCFLFNO
          MOVE      SCFLDES,SSCFLDES
          MOVE      SCFLTYP,SSCFLTYP
          MOVE      SCFLFLD,SSCFLFLD
          MOVE      SCFLCAL,SSCFLCAL
          MOVE      SCFLWPF,SSCFLWPF
          MOVE      SCFLFSC,SSCFLFSC
          MOVE      SCFLDEC,SSCFLDEC
          MOVE      SCFLMIN,SSCFLMIN
          MOVE      SCFLMAX,SSCFLMAX
          MOVE      SCFLFLN,SSCFLFLN
          MOVE      SCFLFTY,SSCFLFTY
          MOVE      SCFLKTY,SSCFLKTY
          MOVE      SCFLMAN,SSCFLMAN
          MOVE      SCFLFEX,SSCFLFEX
          MOVE      SCFLDAF,SSCFLDAF
          MOVE      SCFLSPA,SSCFLSPA
          MOVE      SCFLMUL,SSCFLMUL
          MOVE      SCFLMTY,SSCFLMTY
          MOVE      SCFLKEY,SSCFLKEY
          RETURN
          
IREST000  MOVE      SSCFLPID,SCFLPID
          MOVE      SSCFLSID,SCFLSID
          MOVE      SSCFLFNO,SCFLFNO
          MOVE      SSCFLDES,SCFLDES
          MOVE      SSCFLTYP,SCFLTYP
          MOVE      SSCFLFLD,SCFLFLD
          MOVE      SSCFLCAL,SCFLCAL
          MOVE      SSCFLWPF,SCFLWPF
          MOVE      SSCFLFSC,SCFLFSC
          MOVE      SSCFLDEC,SCFLDEC
          MOVE      SSCFLMIN,SCFLMIN
          MOVE      SSCFLMAX,SCFLMAX
          MOVE      SSCFLFLN,SCFLFLN
          MOVE      SSCFLFTY,SCFLFTY
          MOVE      SSCFLKTY,SCFLKTY
          MOVE      SSCFLMAN,SCFLMAN
          MOVE      SSCFLFEX,SCFLFEX
          MOVE      SSCFLDAF,SCFLDAF
          MOVE      SSCFLSPA,SCFLSPA
          MOVE      SSCFLMUL,SCFLMUL
          MOVE      SSCFLMTY,SCFLMTY
          MOVE      SSCFLKEY,SCFLKEY
          RETURN
.--------------------------------------------------------
. Generate Program Includes - Clear Generated Includes
.                           - Generate New Includes
.--------------------------------------------------------
GPINC000  PACK      KEY21,SCPRPID,SP70
          CALL      RSSCIN1
GPINC100  CALL      RKSCIN1
          BRANCH    OVRCD,GPINC199
          MATCH     SCPRPID,SCINPID
          GOTO      GPINC199 IF NOT EQUAL
          IF        SCINGEN=1
            PACK      KEY21,SCINPID,SCINTYP,SCININC
            CALL      DESCIN1
            CALL      RSSCIN1
          ENDIF
          GOTO      GPINC100
.
GPINC199  PACK      KEY15,SCPRPID,SP70
          CALL      RSSCFL1
GPINC200  CALL      RKSCFL1
          BRANCH    OVRCD,GPINC400
          MATCH     SCPRPID,SCFLPID
          GOTO      GPINC400 IF NOT EQUAL
.
          BRANCH    SCFLTYP,GPINC220,GPINC220,GPINC200,GPINC200,GPINC220:
                            GPINC200,GPINC200
.
GPINC220  MOVE      SCFLFLD,KEY4
          CALL      RDSYFI1
          BRANCH    OVRCD,GPINC230
          MOVE      SCFLFLD,KEY2
          CALL      RDSYSC1
          BRANCH    OVRCD,GPINC230
          CALL      ADDFD000             * Add FD Include
          CALL      ADDIO000             * Add IO Include
GPINC230  COMPARE   TWO,SCFLTYP          * Display Only Field
          GOTO      GPINC200 IF EQUAL
          CALL      ADDKY000             * Add KY Include
.
          IF        SCFLTYP=5
            MOVE      SCFLWPF,KEY4
            CALL      RDSYFI1
            BRANCH    OVRCD,GPINC200
            MOVE      SCFLWPF,KEY2
            CALL      RDSYSC1
            BRANCH    OVRCD,GPINC200
            CALL      ADDFD000             * Add FD Include
            CALL      ADDIO000             * Add IO Include
          ENDIF
          GOTO      GPINC200
.
GPINC400  
.
GPINC999  CALL      GPOPN000
          RETURN
.-----------------------------------------
. Generate File Opens
.-----------------------------------------
GPOPN000  PACK      KEY16,SCPRPID,SP70
          CALL      RSSCOP1
GPOPN100  CALL      RKSCOP1
          BRANCH    OVRCD,GPOPN200
          MATCH     SCOPPID,SCPRPID
          GOTO      GPOPN200 IF NOT EQUAL
          BRANCH    SCOPMOD,GPOPN100,GPOPN100
          PACK      KEY16,SCOPPID,SCOPFIL
          CALL      DESCOP1
          CALL      RSSCOP1
          GOTO      GPOPN100
.
GPOPN200  PACK      KEY21,SCPRPID,SP70
          CALL      RSSCIN1
GPOPN300  CALL      RKSCIN1
          BRANCH    OVRCD,GPOPN999
          MATCH     SCINPID,SCPRPID
          GOTO      GPOPN999 IF NOT EQUAL
          MATCH     "0",SCINTYP
          GOTO      GPOPN999 IF NOT EQUAL
          UNPACK    SCININC,KEY3,SYFIID3
          CALL      RDSYSC2
          BRANCH    OVRCD,GPOPN300
          PACK      KEY5,SYSCSYS,SYFIID3
          CALL      RDSYFI2
          BRANCH    OVRCD,GPOPN300
.
          IF        SYFIAUD=1
            PACK      SCOPFIL,SYSCID3,AUD,SYFIFIL
            PACK      SCOPPHY,SYSCID3,AUD,SYFIFIL
            REP       LOWUP,SCOPPHY
            PACK      KEY16,SCPRPID,SCOPFIL
            UNPACK    KEY16,SCOPPID,SCOPFIL
            CALL      RASCOP1
            IF        OVRCD=1
              MOVE      THREE,SCOPMOD
              MOVE      SP70,SCOPOPT
              CALL      WRSCOP1
            ENDIF
          ENDIF
.
          PACK      KEY5,SYSCSYS,SYFIFIL,SP70
          CALL      RSSYID1
GPOPN400  CALL      RKSYID1
          BRANCH    OVRCD,GPOPN300
          MATCH     SYSCSYS,SYIDSYS
          GOTO      GPOPN300 IF NOT EQUAL
          MATCH     SYFIFIL,SYIDFIL
          GOTO      GPOPN300 IF NOT EQUAL
.
          PACK      SCOPFIL,SYSCID3,SYFIID3,SYFIID4,SYIDIDX
          PACK      SCOPPHY,SYSCID3,SYFIID3,SYFIID4,ANSF
          REP       LOWUP,SCOPPHY
          PACK      KEY16,SCPRPID,SCOPFIL
          UNPACK    KEY16,SCOPPID,SCOPFIL
          CALL      RASCOP1
          IF        OVRCD=1
            MOVE      ZERO,SCOPMOD
            MOVE      SP70,SCOPOPT
            CALL      WRSCOP1
          ENDIF
          GOTO      GPOPN400
.
GPOPN999  RETURN
.
.--------------------------------------------------
. Add FD to Includes for Program
.--------------------------------------------------
ADDFD000  MOVE      ZERO,SCINTYP                * Definition Include
          PACK      SCININC,SYSCID3,SYFIID3,FDINC
          MOVE      SCPRPID,SCINPID
          MOVE      ONE,SCINGEN
          PACK      KEY21,SCINPID,SCINTYP,SCININC
          CALL      RASCIN1
          IF        OVRCD=1
             CALL      WRSCIN1
          ELSE
             CALL      UPSCIN1
          ENDIF
          RETURN
.--------------------------------------------------
. Add IO to Includes for Program
.--------------------------------------------------
ADDIO000  MOVE      ONE,SCINTYP                  * Code Include
          PACK      SCININC,SYSCID3,SYFIID3,IOINC
          MOVE      SCPRPID,SCINPID 
          MOVE      ONE,SCINGEN
          PACK      KEY21,SCINPID,SCINTYP,SCININC
          CALL      RASCIN1
          IF        OVRCD=1
             CALL      WRSCIN1
          ELSE
             CALL      UPSCIN1
          ENDIF
          RETURN
.--------------------------------------------------
. Add KY to Includes for Program
.--------------------------------------------------
ADDKY000  MATCH     SP70,SCFLCAL
          GOTO      ADDKY999 IF EQUAL
.
          UNPACK    SCFLCAL,DIM1,KEY5
          CALL      RDSYKV1
          BRANCH    OVRCD,ADDKY999
          PACK      KEY4,SYKVSYS,SYKVFIL
          CALL      RDSYFI1
          BRANCH    OVRCD,ADDKY999
          PACK      KEY2,SYKVSYS
          CALL      RDSYSC1
          BRANCH    OVRCD,ADDKY999
.
          MOVE      ONE,SCINTYP                  * Code Include
          PACK      SCININC,SYSCID3,SYFIID3,KYINC
          MOVE      SCPRPID,SCINPID 
          MOVE      ONE,SCINGEN
          PACK      KEY21,SCINPID,SCINTYP,SCININC
          CALL      RASCIN1
          IF        OVRCD=1
             CALL      WRSCIN1
          ELSE
             CALL      UPSCIN1
          ENDIF
.
          MOVE      ZERO,SCINTYP                  * Data Include
          PACK      SCININC,SYSCID3,SYFIID3,FDINC
          MOVE      SCPRPID,SCINPID 
          MOVE      ONE,SCINGEN
          PACK      KEY21,SCINPID,SCINTYP,SCININC
          CALL      RASCIN1
          IF        OVRCD=1
             CALL      WRSCIN1
          ELSE
             CALL      UPSCIN1
          ENDIF
.
          MOVE      ONE,SCINTYP                  * Code Include
          PACK      SCININC,SYSCID3,SYFIID3,IOINC
          MOVE      SCPRPID,SCINPID 
          MOVE      ONE,SCINGEN
          PACK      KEY21,SCINPID,SCINTYP,SCININC
          CALL      RASCIN1
          IF        OVRCD=1
             CALL      WRSCIN1
          ELSE
             CALL      UPSCIN1
          ENDIF
.
ADDKY999  RETURN
.-----------------------------
. Edit Functions
.-----------------------------
EFUNC000  MOVE      "10",HTOP
          MOVE      "1",HLEF
          MOVE      "24",HBOT
          MOVE      "80",HRIG
          CALL      GETSCR00
          MOVE      ZERO,HTOP
          MOVE      ZERO,HLEF
          MOVE      ZERO,HBOT
          MOVE      ZERO,HRIG
.
EFUNC020  CALL      EPROC000
          BRANCH    EXIT,EFUNC999,EFUNC999
.
          IF        ACCEPT=1
            CALL      ECLRA000
          ENDIF
          CALL      EDISA000                * modify screen A
EFUNC030  CALL      ESELA000                * modify screen A
          BRANCH    EXIT,EFUNC020,EFUNC100  * don't save data/Delete
.
          CALL      EWRTA000       * post screen A data
          GOTO      EFUNC020       * get next entry
.
EFUNC100  CALL      DELQST       * ok to delete (y/n/c) ?
          BRANCH    CEXIT,EFUNC310,EFUNC030,EFUNC020
.
EFUNC310  CALL      EDELA000       * delete screen A data
          GOTO      EFUNC020       * get next entry
.
EFUNC999  CALL      PUTSCR00
          RETURN
.-----------------------------
. Insert or Modify a Function
.-----------------------------
IFUNC000  MOVE      "10",HTOP
          MOVE      "1",HLEF
          MOVE      "24",HBOT
          MOVE      "80",HRIG
          CALL      GETSCR00
          MOVE      ZERO,HTOP
          MOVE      ZERO,HLEF
          MOVE      ZERO,HBOT
          MOVE      ZERO,HRIG
          MOVE      ACCEPT,SAVEACC
          MOVE      CCITEM,SAVEITM
.
          MOVE      ONE,ACCEPT
          CALL      ECLRA000
          CALL      ESCRA000
          CALL      EDISA000                * modify screen A
          MOVE      "022",CCOL
          MOVE      "14",CVERT
          MOVE      ANSY,DEFYESNO   * Default Y
          CALL      YORN0000
          IF        FYESNO=1
            MOVE      SCPRPID,SCFMPID
          ELSE
            MOVE      SP70,SCFMPID
          ENDIF
.       
          PACK      KEY16,SCFMFID,SCFMPID
          CALL      RDSCFM1
          MOVE      OVRCD,ACCEPT
.
          CALL      ESELA000                * modify screen A
          BRANCH    EXIT,IFUNC100,IFUNC100  * don't save data/Delete
          CALL      EWRTA000       * post screen A data
          GOTO      IFUNC999       * get next entry
.
IFUNC100  MOVE      ONE,EXIT
          MOVE      SP70,SCFMFID
.
IFUNC999  CALL      PUTSCR00
          MOVE      SAVEACC,ACCEPT
          MOVE      SAVEITM,CCITEM
          RETURN
.-------------------------------------------------
. EPROC - Enter Key Field
.        Returns : EXIT  0=continue
.                        1=nothing entered
.                        2=EXITCHAR entered
.-------------------------------------------------
EPROC000  CALL      ECLRA000
          CALL      ESCRA000
          MOVE      "40",HLEF
          MOVE      "80",HRIG
          MOVE      "1",HTOP
          MOVE      "21",HBOT
          MOVE      "022",CCOL
          MOVE      "13",CVERT
          MOVE      TWO,CKEYTYP
          MOVE      SCPRPID,SCFMPID
          CALL      KSCFMA00
          BRANCH    EXIT,EPROC9999,EPROC9999
          MOVE      "022",CCOL
          MOVE      "14",CVERT
          MOVE      ANSY,DEFYESNO   * Default Y
          CALL      YORN0000
          IF        FYESNO=1
            MOVE      SCPRPID,SCFMPID
          ELSE
            MOVE      SP70,SCFMPID
          ENDIF
.       
          PACK      KEY16,SCFMFID,SCFMPID
          CALL      RDSCFM1
          MOVE      OVRCD,ACCEPT
.
EPROC999  MOVE      ZERO,CKEYTYP
          RETURN
.---------------------------
. Display FUnction Screen
.---------------------------
ESCRA000  DISPLAY   *P1:10,*EF
          HLINE     *G37,10,1,80
          DISPLAY   *P4:11,*EF,*V2LON,*ULON," Function Maintenance ",*HOFF:
                    *P005:13,*EF,*HOFF,"Function       :",*HOFF:
                    *P005:14,*EF,*HOFF,"Local (Y/N)    :",*HOFF:
                    *P001:16,*V2LON," 1.",*HOFF:
                    *P005:16,*HOFF,"Description    :",*HOFF:
                    *P001:17,*V2LON," 2.",*HOFF:
                    *P005:17,*HOFF,"Type           :",*HOFF:
                    *P001:18,*V2LON," 3.",*HOFF:
                    *P005:18,*HOFF,"Vi Function",*HOFF
          RETURN
.------------------------------
. Clear Fields
.------------------------------
ECLRA000  MOVE     SP70,SCFMDES 
          MOVE     ZERO,SCFMTYP 
          MOVE     SP70,SCFMSFI 
          MOVE     SP70,SCFMSPA
          RETURN
.-------------------------------------------------
. DISA - Display Screen A
.-------------------------------------------------
EDISA000  BRANCH    ACCEPT,EDISA999
          MOVE      SCFMSFI,KEY4
          CALL      RDSYFI1
          IF        OVRCD=1
            MOVE      SP70,SYFIDES
          ENDIF
          CALL      GFTYP000
          CALL      LSCFD100
          DISPLAY   *P022:16,*V2LON,SCFMDES
          DISPLAY   *P022:17,*V2LON,FUNTYPE
....          DISPLAY   *P022:18,*V2LON,SCFMSFI,SP1,*HOFF,SYFIDES
.
EDISA999  DISPLAY   *P022:13,*V2LON,SCFMFID
          RETURN
.-------------------------------------------------
. ESELA - Select Field
.-------------------------------------------------
ESELA000  MOVE      ZERO,CCITEM
.
.---- determine option to execute ----
.
ESELA010  ADD       ONE,CCITEM
          BRANCH    ACCEPT,ESELA050
          CALL      MDELQST
.
          COMPARE   ZERO,CCITEM
          GOTO      ESELA900 IF EQUAL
.
          COMPARE   SEQ,CCITEM
          GOTO      ESELA950 IF EQUAL
.
          COMPARE   "-2",CCITEM
          GOTO      ESELA960 IF EQUAL
.
ESELA050  BRANCH    CCITEM,ESELA110,ESELA120,ESELA140
          BRANCH    ACCEPT,ESELA090
          BEEP
          GOTO      ESELA090
.
ESELA090  MOVE      ZERO,ACCEPT
          GOTO      ESELA010
.
. Option    1
.
ESELA110  MOVE      "022",CCOL
          MOVE      "16",CVERT
          IF        SCFMTYP>2
            DISPLAY   *P1:24,*EL,*B,"Generated Routines May Not be Changed - ";
            CALL      HITENTER
            GOTO      ESELA010
          ENDIF
          KEYIN     *PCCOL:CVERT,*RV,*V2LON,SCFMDES:
                    *PCCOL:CVERT,*DV,*V2LON,SCFMDES
          GOTO      ESELA010

.
. Option    2
.
ESELA120  MOVE      "022",CCOL
          MOVE      "17",CVERT
.
          IF        SCFMTYP>2
            DISPLAY   *P1:24,*EL,*B,"Generated Routines May Not be":
                      " Changed - ";
            CALL      HITENTER
            GOTO      ESELA010
          ENDIF
.
          DISPLAY   *P1:24,*EL,*V2LON,"0.",*HOFF," Manual, ":
                               *V2LON,"1.",*HOFF," Include Call, ":
                               *V2LON,"2.",*HOFF," Include Call, ":
                               *V2LON,"3.",*HOFF," Generated"
          KEYIN     *PCCOL:CVERT,*EL,*V2LON,SCFMTYP:
                    *PCCOL:CVERT,*DV,*V2LON,SCFMTYP
          ADD       ONE,SCFMTYP
          BRANCH    SCFMTYP,ESELA125,ESELA125,ESELA125,ESELA125
          BEEP
          GOTO      ESELA120
.
ESELA125  SUB       ONE,SCFMTYP
          CALL      GFTYP000
          DISPLAY   *P022:17,*V2LON,FUNTYPE
          IF        SCFMTYP=0
            DISPLAY   *P22:18,*V2LON,"N/A"
            ADD       ONE,CCITEM
          ENDIF
          GOTO      ESELA010
.
. Option    3
.
.ESELA130  IF        SCFMTYP=0
.            DISPLAY   *P22:18,*V2LON,"N/A"
.            BEEP
.            GOTO      ESELA010
.          ENDIF
.          IF        SCFMTYP>2
.            DISPLAY   *P1:24,*EL,*B,"Generated Routines May Not be Changed - ";
.            CALL      HITENTER
.            GOTO      ESELA010
.          ENDIF
.          MOVE      "022",CCOL
.          MOVE      "18",CVERT
.          MOVE      ZERO,CKEYTYP
.          CALL      KSYIDB00
.          BRANCH    EXIT,ESELA130,ESELA950
.          MOVE      KEY5,SCFMSFI
.          DISPLAY   *PCCOL:CVERT,*V2LON,SCFMSFI,SP1,*HOFF,SYFIDES
.          ADD       ONE,CCITEM
.          GOTO      ESELA010
.
. Option    4
.
ESELA140  IF        SCFMTYP=0
            MOVE      "0",HLEF
            CALL      GETSCR00
.
            CLEAR     NAMEFILE
            APPEND    "tscfd1",NAMEFILE
            APPEND    PORT,NAMEFILE
            RESET     NAMEFILE
            REP       " 0",NAMEFILE
.
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      SCFDTMP1,NAMEFILE
            TRAPCLR   IO
            IF        OVRCD=1
              PREP      SCFDTMP1,NAMEFILE
              WRITE     SCFDTMP1,SEQ;SP1
            ENDIF
            CLOSE     SCFDTMP1
.
            PACK      SCRCMD80,VI,NAMEFILE,TXT
            EXECUTE   SCRCMD80,TASKID
.
            CALL      PUTSCR00
          ELSE
            DISPLAY   *P1:24,*B,*EL,"Generated/Included Routine - ";
            CALL      HITENTER
          ENDIF
          GOTO      ESELA010
.
.---- exit points ----
.
ESELA900  MOVE      ZERO,EXIT
          GOTO      ESELA9999
.
ESELA950  MOVE      ONE,EXIT
          GOTO      ESELA9999
ESELA960  MOVE      TWO,EXIT
          GOTO      ESELA9999
.
ESELA999  RETURN
.
GFTYP000  ADD       ONE,SCFMTYP
          LOAD      FUNTYPE,SCFMTYP,FUNTYPE1,FUNTYPE2,FUNTYPE3,FUNTYPE4
          SUB       ONE,SCFMTYP
          RETURN
.-------------------------------------------------
. WRTA - Write to Files
.-------------------------------------------------
EWRTA000  PACK      KEY16,SCFMFID,SCFMPID
          CALL      RASCFM1
          IF        OVRCD=1
            CALL      WRSCFM1
          ELSE
            CALL      UPSCFM1
          ENDIF
          CALL      DSCFD100
          IF        SCFMTYP=0
            CALL      WSCFD100
          ENDIF
.
EWRTA999  RETURN
.
.-------------------------------------------------
. DELA - Delete Record
.-------------------------------------------------
EDELA000  PACK      KEY16,SCFMFID,SCFMPID
          CALL      RASCFM1
          IF        OVRCD=0
            CALL      DESCFM1
          ENDIF
          CALL      DSCFD100
.
EDELA999  RETURN
.----------------------------
. Delete Routine Details
.----------------------------
DSCFD100  PACK      KEY21,SCFMFID,SCFMPID,SP70
          CALL      RSSCFD1
          CALL      RKSCFD1
          BRANCH    OVRCD,DSCFD199
          MATCH     SCFMFID,SCFDFID
          GOTO      DSCFD199 IF NOT EQUAL
          MATCH     SCFMPID,SCFDPID
          GOTO      DSCFD199 IF NOT EQUAL
          PACK      KEY21,SCFDFID,SCFDPID,SCFDLIN
          CALL      DESCFD1
          GOTO      DSCFD100
.
DSCFD199  RETURN
.----------------------------
. Load Routine Details
.----------------------------
LSCFD100  CLOSE     SCFDTMP1
          CLEAR     NAMEFILE
          APPEND    "tscfd1",NAMEFILE
          APPEND    PORT,NAMEFILE
          RESET     NAMEFILE
          REP       " 0",NAMEFILE
          PREP      SCFDTMP1,NAMEFILE
          PACK      KEY21,SCFMFID,SCFMPID,SP70
          CALL      RSSCFD1
LSCFD110  CALL      RKSCFD1
          BRANCH    OVRCD,LSCFD199
          MATCH     SCFMFID,SCFDFID
          GOTO      LSCFD199 IF NOT EQUAL
          MATCH     SCFMPID,SCFDPID
          GOTO      LSCFD199 IF NOT EQUAL
.
          PACK      VAR127,SCFDCOD,SP70,SP70
          STRIP     VAR127
          MOVELPTR  VAR127,F3
          SFORMAT   VAR127,F3
          MOVE      SCFDCOD,VAR127
          WRITE     SCFDTMP1,SEQ;VAR127
          SFORMAT   VAR127,127
          GOTO      LSCFD110
.
LSCFD199  CLOSE     SCFDTMP1
          RETURN
.----------------------------
. Write Routine Details
.----------------------------
WSCFD100  CLOSE     SCFDTMP1
          CLEAR     NAMEFILE
          APPEND    "tscfd1",NAMEFILE
          APPEND    PORT,NAMEFILE
          RESET     NAMEFILE
          REP       " 0",NAMEFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      SCFDTMP1,NAMEFILE
          TRAPCLR   IO
          BRANCH    OVRCD,WSCFD199  
          MOVE      ZERO,SECTOR
WSCFD110  READ      SCFDTMP1,SEQ;SCFDCOD 
          GOTO      WSCFD199 IF OVER
          MOVE      SCFMFID,SCFDFID
          MOVE      SCFMPID,SCFDPID
          ADD       ONE,SECTOR
          MOVE      SECTOR,SCFDLIN
          PACK      KEY21,SCFDFID,SCFDPID,SCFDLIN
          CALL      WRSCFD1
          GOTO      WSCFD110
.
WSCFD199  CLOSE     SCFDTMP1
          RETURN
.
RDSCDT1   MOVE      ZERO,OVRCD
          READ      SCRTDCA1,KEY8;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
WRSCDT1   
          WRITE     SCRTDCA1,KEY8;KEY8
          RETURN
.
.------------------------------------------------------------
. Generate Options
.------------------------------------------------------------
GENER000  
.
GENER010  DISPLAY   *P1:1,*EL,"e",*V2LON,"X",*HOFF,"it, ":
                    *V2LON,"G",*HOFF,"en, ":
                    *V2LON,"Q",*HOFF,"uick, ":
                    *V2LON,"D",*HOFF,"ata, ":
                    *V2LON,"C",*HOFF,"ode, ":
                    *V2LON,"O",*HOFF,"pens, ":
                    *V2LON,"A",*HOFF,"lt Cmp, ":
                    *V2LON,"R",*HOFF,"ange, ":
                    *V2LON,"F",*HOFF,"un, ":
                    *V2LON,"J",*HOFF,"ust Cmp, ":
                    *V2LON,"U",*HOFF,"x, ":
                    *V2LON,"V",*HOFF,"i, ":
                    *V2LON,"E",*HOFF,"x"
          HLINE     *G37,2,1,80
          STRIP     COMPILER
          ENDSET    COMPILER
          APPEND    SP1,COMPILER
          RESET     COMPILER
          DISPLAY   *P25:2," Current Compiler : ",*+,COMPILER
GENER100  KEYIN     *P1:1,*EOFF,*NOEDIT,*+,ANS
          REP       UPPLOW,ANS
          MATCH     ANSX,ANS
          GOTO      GENER999 IF EQUAL
          MATCH     ANSG,ANS
          GOTO      GENER110 IF EQUAL
          MATCH     ANSD,ANS
          GOTO      GENER120 IF EQUAL
          MATCH     ANSC,ANS
          GOTO      GENER130 IF EQUAL
          MATCH     ANSO,ANS
          GOTO      GENER135 IF EQUAL
          MATCH     ANSF,ANS
          GOTO      GENER140 IF EQUAL
          MATCH     ANSA,ANS
          GOTO      GENER150 IF EQUAL
          MATCH     ANSR,ANS
          GOTO      GENER160 IF EQUAL
          MATCH     ANSU,ANS
          GOTO      GENER170 IF EQUAL
          MATCH     ANSE,ANS
          GOTO      GENER180 IF EQUAL
          MATCH     ANSJ,ANS
          GOTO      GENER190 IF EQUAL
          MATCH     ANSQ,ANS
          GOTO      GENER200 IF EQUAL
          MATCH     ANSV,ANS
          GOTO      GENER210 IF EQUAL
          BEEP
          GOTO      GENER100
.
. Generate Program
.-----------------
GENER110  MOVE      ZERO,HLEF
          CALL      GETSCR00
          CALL      GMAIN000
          DISPLAY   *P1:24,*EF,"Completed - ";
          CALL      HITENTER
          CALL      PUTSCR00
          GOTO      GENER010
.
. Data Include Maintenance
.--------------------------
GENER120  CALL      GPMOD000           * Regenerate Inculdes for Program
          MOVE      ZERO,SCINTYP
          CALL      MINC0000
          GOTO      GENER010
.
. Code Include Maintenance
.--------------------------
GENER130  CALL      GPMOD000           * Regenerate Inculdes for Program
          MOVE      ONE,SCINTYP
          CALL      MINC0000
          GOTO      GENER010
.
. File Open Maintenance
.--------------------------
GENER135  CALL      GPMOD000           * Regenerate Inculdes for Program
          MOVE      ONE,SCINTYP
          CALL      MOPN0000
          GOTO      GENER010
.
. Edit Functions
.----------------
GENER140  CALL      EFUNC000
          GOTO      GENER010
.
. Change Compiler
.----------------
GENER150  KEYIN     *P1:1,*EL,"Compiler to Use : ",COMPILER
          GOTO      GENER010
.
. Generate a Range of Programs
.-----------------------------
GENER160  MOVE      ZERO,HLEF
          CALL      GETSCR00
          CALL      RGEN0000
          CALL      PUTSCR00
          GOTO      GENER010
.
. Unix Shell
.-----------------
GENER170  CALL      UNIXS000
          GOTO      GENER010
.
. Execute Program
.-----------------
GENER180  MOVE      ZERO,HLEF
          CALL      GETSCR00
          FORK      SCPRPID,KEY50
          CALL      PUTSCR00
          GOTO      GENER010
.
. Compile Only
.-------------
GENER190  MOVE      ZERO,HLEF
          CALL      GETSCR00
.
          KEYIN     *P1:1,*EL,"Enter Compiler Options : ",COMPOPT
          DISPLAY   *P1:15,*EF,"Compiling Program  ",*P1:16;
          CLEAR     SCRCMD80
          APPEND    COMPILER,SCRCMD80
          APPEND    SCPRPID,SCRCMD80
          APPEND    SP1,SCRCMD80
          APPEND    COMPOPT,SCRCMD80
          RESET     SCRCMD80
          MOVE      ZERO,TASKID
          EXECUTE   SCRCMD80,TASKID
          CALL      HITENTER
          CALL      PUTSCR00
          GOTO      GENER010
.
. Generate Program Quick Functions Only
.---------------------------------------
GENER200  MOVE      ZERO,HLEF
          CALL      GETSCR00
          CALL      QGENE000
          DISPLAY   *P1:24,*EF,"Completed - ";
          CALL      HITENTER
          CALL      PUTSCR00
          GOTO      GENER010
.
. Vi Program
.-----------------
GENER210  CLEAR     SCRCMD80
          APPEND    "vi $WORKDIR/",SCRCMD80
          APPEND    SCPRPID,SCRCMD80
          APPEND    ".PBL",SCRCMD80
          RESET     SCRCMD80
          MOVE      ZERO,HLEF
          CALL      GETSCR00
          EXECUTE   SCRCMD80,TASKID
          CALL      PUTSCR00
          GOTO      GENER010
.
.
GENER999  RETURN
.----------------------------------------
. Generate Opens/Includes ? Y/N
.----------------------------------------
GPMOD000  DISPLAY   *P1:1,*EL,"Regenerate (":
                    *V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? "
          MOVE      "20",CCOL
          MOVE      "1",CVERT
          MOVE      ANSN,DEFYESNO   * Default Y
          CALL      YORN0000
          DISPLAY   *P1:1,*EL
          IF        FYESNO=1
            DISPLAY   *P1:1,*EL,"Generating Includes/Opens"
            CALL      GPINC000
          ENDIF
          RETURN
          
.----------------------------------------
. Generate a Range of Programs
.----------------------------------------
RGEN0000  HLINE     *G37,17,1,80
          DISPLAY   *P1:18,*EF:
                    *P1:19,*ULON,*V2LON,"Generate a Range of Programs ":
                    *P1:21,*HOFF,*EL,"First Program   : ":
                    *P1:22,*EL,"Last  Program   : "
          MOVE      SCPRPID,SAVPID
          MOVE      "19",CCOL
          MOVE      "21",CVERT
          CALL      KSCPRA00
          BRANCH    EXIT,RGEN9000,RGEN9000
          MOVE      SCPRPID,FSTPID
          DISPLAY   *PCCOL:CVERT,*V2LON,SCPRPID,SP1,*HOFF,SCPRNAM
.
          MOVE      "19",CCOL
          MOVE      "22",CVERT
          CALL      KSCPRA00
          BRANCH    EXIT,RGEN9000,RGEN9000
          MOVE      SCPRPID,LSTPID
          DISPLAY   *PCCOL:CVERT,*V2LON,SCPRPID,SP1,*HOFF,SCPRNAM
.
          DISPLAY   *P1:24,*EL,"Process (":
                    *V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? "
          MOVE      "17",CCOL
          MOVE      "24",CVERT
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      RGEN9000 IF EQUAL
.
          MOVE      FSTPID,KEY8
          CALL      RDSCPR1
          COMPARE   ZERO,OVRCD
          GOTO      RGEN1100 IF EQUAL
RGEN1000  CALL      RKSCPR1
          BRANCH    OVRCD,RGEN9000
          MATCH     SCPRPID,LSTPID
          GOTO      RGEN9000 IF LESS
RGEN1100
          DISPLAY   *P1:1,*ES,"Generating : ",*V2LON,SCPRPID,*HOFF,SP1,SCPRNAM
          CALL      GMAIN000
          GOTO      RGEN1000
.
RGEN9000  MOVE      SAVPID,KEY8
          CALL      RDSCPR1
RGEN9999  RETURN
.-----------------------------------
. Modify Includes for Program
.-----------------------------------
MINC0000  MOVE      "20",HTOP
          MOVE      "1",HLEF
          MOVE      "24",HBOT
          MOVE      "80",HRIG
          CALL      GETSCR00
          MOVE      ZERO,HTOP
          MOVE      ZERO,HLEF
          MOVE      ZERO,HBOT
          MOVE      ZERO,HRIG
MINC0100  DISPLAY   *P1:20,*EF
          HLINE     *G37,20,1,80
          DISPLAY   *P1:22,"    Include         : "
          MOVE      SCPRPID,SCINPID
          MOVE      "23",CCOL
          MOVE      "22",CVERT
          MOVE      TWO,CKEYTYP
          CALL      KSCINA00
          BRANCH    EXIT,MINC9000,MINC9000
.
          PACK      KEY21,SCINPID,SCINTYP,SCININC
          CALL      RDSCIN1
          BRANCH    OVRCD,MINC0500
          CALL      DELQST
          BRANCH    CEXIT,MINC0200,MINC0100,MINC9000
.
MINC0200  IF        SCINGEN=1
            DISPLAY   *P1:24,"Generated Include Delete Invalid - ";
            CALL      HITENTER
          ELSE
            PACK      KEY21,SCINPID,SCINTYP,SCININC
            CALL      DESCIN1
          ENDIF
          GOTO        MINC0100
MINC0500
          CALL      MAINQST
          COMPARE   ZERO,CCITEM
          GOTO      MINC1000 IF EQUAL
          COMPARE   SEQ,CCITEM
          GOTO      MINC0100 IF EQUAL
          BEEP
          GOTO      MINC0500
.
MINC1000  PACK      KEY21,SCINPID,SCINTYP,SCININC
          MOVE      ZERO,SCINGEN
          CALL      WRSCIN1
          GOTO      MINC0100
.         
MINC9000  
          CALL      PUTSCR00
          RETURN
.
.------------------------------
. Generate Code
.------------------------------
GMAIN000  PACK      PRNAME,SCPRPID,SP70
          SPLOPEN   PRNAME
.
          CALL      CPOLD000           * Copy Version Control Section
          BRANCH    EXIT,GMAIN999
.
          DISPLAY   *P1:10,*EF
          DISPLAY   *P1:11,"Generating Header Section"
          CALL      GPINC000           * Generate Inculdes/Opens Program
          CALL      GHED0000    
          DISPLAY   *P1:12,"Generating Initialization"
          CALL      GMML0000    
.
          CALL      GMIN0000    
.
          CALL      GPRTS000           * Generate Routine for SCRPRINT 
.
          CALL      GSMAN000    
.
          DISPLAY   *P1:14,"Generating Functions Required"
          CALL      GFUNC000    
.
GMAIN900  CALL      GEND0000    
          SPLCLOSE
          CLEAR     SCRCMD80
          APPEND    "mv $TBSPOOL/",SCRCMD80
          APPEND    SCPRPID,SCRCMD80
          APPEND    ".prt $WORKDIR/",SCRCMD80
          APPEND    SCPRPID,SCRCMD80
          APPEND    ".PBL",SCRCMD80
          RESET     SCRCMD80
          MOVE      ZERO,TASKID
          EXECUTE   SCRCMD80,TASKID
.
          DISPLAY   *P1:15,*EF,"Compiling Program  ",*P1:16;
          CLEAR     SCRCMD80
          APPEND    COMPILER,SCRCMD80
          APPEND    SCPRPID,SCRCMD80
          RESET     SCRCMD80
          MOVE      ZERO,TASKID
          EXECUTE   SCRCMD80,TASKID
.
          MOVE      ZERO,EXIT
.
GMAIN999  RETURN
.----------------------------------------------------------------------
. GHED0000 - Output File Heading Details
.----------------------------------------------------------------------
GHED0000  
          IF        NEWPROG=1
            PRINT     ".-------------------------------------------------------"
            PRINT     ".                           "
            PRINT     "          INC       STDGENDF     * Required Include"
            PRINT     "VERSION   INIT      #"","V6.00.00","#""
          ENDIF
.
          PRINT     ".@@@@@ Start of Generated Code @@@@@"
          PRINT     ". NB - Code & Comments Included Before the above line "
          PRINT     ".      will not be overwritten by the generation of a "
          PRINT     ".      program. The STDGENDF file and VERSION must appear"
          PRINT     ".      before the line. "
          PRINT     ".-----------------------------------------"
          PRINT     ".   Program       :   ",SCPRPID
          PRINT     ".   Function      :   ",SCPRNAM
          PRINT     ".   Generated  On :   ",CDATE
          PRINT     ".-----------------------------------------"
          PRINT     ".========================="
          PRINT     ".File Description Includes"
          PRINT     ".-------------------------"
.
. Loop through to determine FD includes
.-----------------------------------------
          PACK      KEY21,SCPRPID,SP70
          CALL      RSSCIN1
GHED1000  CALL      RKSCIN1
          BRANCH    OVRCD,GHED2000
          MATCH     SCPRPID,SCINPID
          GOTO      GHED2000 IF NOT EQUAL
          MATCH     "0",SCINTYP
          GOTO      GHED2000 IF NOT EQUAL
.
          PRINT     "          INC       ",SCININC
.
          GOTO      GHED1000
.
. Loop through to determine local variable & WP definitions
.------------------------------------------------------------
GHED2000  
          CLOSE    SCRTDCA1,DELETE
          EXECUTE  KILLDEC,TASKID
          EXECUTE  MAKEDEC,TASKID
          OPEN     SCRTDCA1,DECFNAME
          PRINT    ".========================="
          PRINT    ".Local Variable Definition"
          PRINT    ".-------------------------"
.
          PACK      KEY15,SCPRPID,SP70
          CALL      RSSCFL1
GHED3000  CALL      RKSCFL1
          BRANCH    OVRCD,GHED4000
          MATCH     SCPRPID,SCFLPID
          GOTO      GHED4000 IF NOT EQUAL
          BRANCH    SCFLTYP,GHED3100,GHED3100,GHED3000,GHED3000,GHED3400:
                            GHED3000,GHED3000
          COMPARE   ZERO,SCFLMUL
          GOTO      GHED3100 IF EQUAL
          MOVE      SCFLMTY,KEY8
          CALL      RDSCDT1
          COMPARE   ZERO,OVRCD
          GOTO      GHED3000 IF EQUAL
          CALL      WRSCDT1
          PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO
          CALL      RDSCWP1
          BRANCH    OVRCD,GHED3000
          UNPACK    SCFLMTY,KEY4
          CALL      RDSYFI1
          BRANCH    OVRCD,GHED3000
.--------------------------
. Calculate Record Length
.--------------------------
          PACK      KEY8,KEY4,SP70
          MOVE      ONE,RECLEN
          CALL      RSSYFL1
GHED3010
          CALL      RKSYFL1
          BRANCH    OVRCD,GHED3020
          MATCH     SYFLSYS,SYFISYS
          GOTO      GHED3020 IF NOT EQUAL
          MATCH     SYFLFIL,SYFIFIL
          GOTO      GHED3020 IF NOT EQUAL
          ADD       SYFLPHY,RECLEN
          GOTO      GHED3010
.--------------------------
. Calculate Key Length
.--------------------------
GHED3020  MOVE      ZERO,COUNT
          MOVE      ZERO,KEYLEN
          MOVE      SCFLMTY,KEY5
          CALL      RDSYID1
GHED3030  ADD       ONE,COUNT
          LOAD      SEGMENT,COUNT,SYIDFL1,SYIDFL2,SYIDFL3,SYIDFL4:
                                  SYIDFL5,SYIDFL6,SYIDFL7,SYIDFL8
          MATCH     SP70,SEGMENT
          GOTO      GHED3040 IF EQUAL
.
          PACK      KEY8,SYIDSYS,SYIDFIL,SEGMENT
          CALL      RDSYFL2
          ADD       SYFLPHY,KEYLEN
          COMPARE   EIGHT,COUNT
          GOTO      GHED3030 IF NOT EQUAL
.
GHED3040             
          ASSIGN    RECLEN+KEYLEN-SCWPMLN+5,RECLEN
          MOVE      RECLEN,KEY5
          SQUEEZE   KEY5
          ASSIGN    KEYLEN-SCWPMLN+5,KEYLEN
          MOVE      KEYLEN,KEY4
          SQUEEZE   KEY4
.
          COMPARE   ZERO,SCWPBTY
          GOTO      GHED3050 IF NOT EQUAL
.
          PRINT     "."
          PRINT     ".    Multi Item Key Fields Scr ",SCFLSID," Fld ",SCFLFNO
          PRINT     ".-------------------------------------------------------"
          PRINT     SCFLMTY,"NAM  INIT      #"",SCFLMTY,"#""
          PRINT     SCFLMTY,"LEN  FORM      #"",*+,KEY5,"#""
          PRINT     SCFLMTY,"IDX  INIT      #"DC1-5 UC6-",*+,KEY4,"#""
          PRINT     SCFLMTY,"FNM  DIM       8  * Filename"
          PRINT     SCFLMTY,"AFL  FORM      1  * End Accept Mode"
          PRINT     SCFLMTY,"END  FORM      1  * End Display"
          PRINT     SCFLMTY,"SNO  FORM      5  * Number of Items on the Screen"
          PRINT     SCFLMTY,"NXT  DIM       ",KEYLEN
          PRINT     SCFLMTY,"FL1  IFILE     SQL, FIXED=",*+,KEY5:
                     ",  KEY=#"D1-5#""
          PRINT     SCFLMTY,"FL2  IFILE     SQL, FIXED=",*+,KEY5:
                     ", KEY=#"U6-",KEY4,"#""
          PRINT     SCFLMTY,"CNT  FORM      3  * Number of Items on Screen"
.
          GOTO      GHED3100  
GHED3050  
          PRINT     "."
          PRINT     ".    Multi Item Key Fields Scr ",SCFLSID," Fld ",SCFLFNO
          PRINT     ".-------------------------------------------------------"
          PRINT     SCFLMTY,"NAM  INIT      #"",SCFLMTY,"#""
          PRINT     SCFLMTY,"END  FORM      1   * End Display"
          PRINT     SCFLMTY,"SNO  FORM      5   * Number of Items on the Screen"
          PRINT     SCFLMTY,"MKY  DIM       127 * Match Key "
          IF        !(SCWPMLN=0)
            PRINT     SCFLMTY,"EKY  DIM       127 * End Key"
            PRINT     SCFLMTY,"SKY  DIM       127 * Start Key"
          ENDIF
          PRINT     SCFLMTY,"IDX  INIT      #" 132 UC1-5#""
          PRINT     SCFLMTY,"FL1  IFILE     SQL, FIXED=132, KEY=#"U1-5#""
          PRINT     SCFLMTY,"FNM  DIM       8  * Filename"
          PRINT     SCFLMTY,"CNT  FORM      3  * Number of Items on Screen"
.
GHED3100  COMPARE   ZERO,SCFLDEC
          GOTO      GHED3000 IF EQUAL
. 
          UNPACK    SP70,SYFLSYS,SYFLFIL
          MOVE      SCFLFLD,KEY8
          CALL      RDSCDT1
          COMPARE   ZERO,OVRCD
          GOTO      GHED3000 IF EQUAL
          CALL      WRSCDT1
.
          CALL      RDSYFL2
          COMPARE   ZERO,OVRCD
          GOTO      GHED3000 IF EQUAL

          BRANCH    SCFLFTY,GHED3200
          MOVE      SCFLFLN,F3
          PRINT     KEY8,"  DIM     ",F3," * Scr ",SCFLSID," Fld ",SCFLFNO
          GOTO      GHED3000
GHED3200 
          MOVE      SCFLFLN,DIM5
          UNPACK    DIM5,DFP1,DIM1,DFP2
          MOVE      DFP1,F3
          MOVE      DFP2,FORM1
          COMPARE   ZERO,FORM1
          GOTO      GHED3300 IF EQUAL
          PRINT     KEY8,"  FORM    ",SCFLFLN," * Scr ",SCFLSID," Fld ",SCFLFNO
          GOTO      GHED3000
.
GHED3300  PRINT     KEY8,"  FORM    ",F3," * Scr ",SCFLSID," Fld ",SCFLFNO
          GOTO      GHED3000
.
. Word Processor Declarations
.
GHED3400
          MOVE      SCFLWPF,KEY8
          CALL      RDSCDT1
          COMPARE   ZERO,OVRCD
          GOTO      GHED3000 IF EQUAL
          CALL      WRSCDT1
          PRINT     "."
          PRINT     ".Word Processor File"," * Scr ",SCFLSID," Fld ",SCFLFNO
          PRINT     "."
          MOVE      SCFLWPF,KEY5
          PRINT     "NAM",KEY5,"  INIT      #"";
          REP       LOWUP,KEY5
          PRINT     ANSW,KEY5,"#""
          REP       UPPLOW,KEY5
          PRINT     "FIL",KEY5,"  DIM       8"
          PRINT     "."
          GOTO      GHED3000
.
. Print Standard Variables
.-------------------------
GHED4000  PRINT     PBLANK
          PRINT    "ACCEPT    FORM      1"
          PRINT    "SACCEPT   FORM      1"
          PRINT     PBLANK
          PRINT    "PRGID     INIT      #"",SCPRPID,"#""
          PRINT    "PRGNAM    INIT      #"",SCPRNAM,"#""
          PRINT     PBLANK
.
          CLOSE    SCRTDCA1,DELETE
GHED9999  RETURN
.---------------------------------------------
. Loop through to determine IO & KY includes
.---------------------------------------------
GEND0000  
          PRINT     ".-------------------------------"
          PRINT     ". Includes for I/O and Keyins"
          PRINT     ".-------------------------------"
          PACK      KEY21,SCPRPID,ONE,SP70
          CALL      RSSCIN1
GEND1000  CALL      RKSCIN1
          BRANCH    OVRCD,GEND2000
          MATCH     SCPRPID,SCINPID
          GOTO      GEND2000 IF NOT EQUAL
          PRINT     "          INC       ",SCININC
          GOTO      GEND1000
.
GEND2000  PRINT     PBLANK
          PRINT     "          INC       STDGENCD"
          PRINT     PBLANK
GEND9999  RETURN
.------------------------------------------------------------
. Generate Mainline (Not Much in Here)
.------------------------------------------------------------
GMML0000
.
.         Clear Array of Multiple Keys
.
          MOVE       ZERO,F2
          WHILE      F2<20
            ADD        ONE,F2
            MOVE       ZERO,MULTIMLN[F2]
            MOVE       ZERO,MULTIBSQ[F2]
            MOVE       ZERO,MULTIBTY[F2]
            MOVE       SP70,MULTIMTY[F2]
            MOVE       SP70,MULTITIO[F2]
            MOVE       SP70,MULTIFNO[F2]
          DO
          MOVE       ZERO,MULTIIDX
          MOVE       "11",INDENT
.
          PACK       KEY8,LABELSC,SCPRISC,ANSL,ZERO,ZERO,ZERO
          REP        " 0",KEY8
          PRINT      ".--------------------------------"
          PRINT      ". MAINLINE - Controlling Logic"
          PRINT      ".--------------------------------"
          PRINT      *INDENT,"TOPIC     PRGID"
          PRINT      *INDENT,"MOVE      PORT,PARENTID"
          PRINT      *INDENT,"CLOCK     PORT,DIM2"
          PRINT      *INDENT,"MOVE      DIM2,PORT"
          PRINT      "ML0000"
          PRINT      *INDENT,"CALL      INIT0000"
.
          MATCH     SP70,SCPRCBF
          GOTO      GMML1000 IF EQUAL
          PRINT     *INDENT,"CALL      ",SCPRCBF
.
GMML1000  PRINT     *INDENT,"CALL      ",KEY8
.
          PACK      KEY15,SCPRPID,SP70
          MOVE      ZERO,EXIT
          CALL      RSSCFL1
GMML1100  CALL      RKSCFL1
          BRANCH    OVRCD,GMML1900
          MATCH     SCPRPID,SCFLPID
          GOTO      GMML1900 IF NOT EQUAL
          BRANCH    SCFLTYP,GMML1100,GMML1100,GMML1100,GMML1100,GMML1200:
                            GMML1100,GMML1100
          COMPARE   ZERO,SCFLMUL
          GOTO      GMML1100 IF EQUAL
.
          MOVE      ZERO,F2
          MOVE      ZERO,EXIT
          WHILE     F2<MULTIIDX
            ADD     ONE,F2
            MATCH   SCFLMTY,MULTIMTY[F2]
            IF      @EQUAL
              MOVE    ONE,EXIT
            ENDIF
          DO
          BRANCH    EXIT,GMML1100
          ADD       ONE,MULTIIDX
          PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO
          CALL      RDSCWP1
          MOVE      SCWPMLN,MULTIMLN[MULTIIDX]
          MOVE      SCWPBSQ,MULTIBSQ[MULTIIDX]
          MOVE      SCWPBTY,MULTIBTY[MULTIIDX]
          MOVE      SCFLMTY,MULTIMTY[MULTIIDX]
          UNPACK    SCFLMTY,KEY4,KEY1
          CALL      RDSYFI1
          IF        OVRCD=0
            IF        SYFITIO=0
              MOVE      SCFLMTY,MULTITIO[MULTIIDX]
            ELSE
              PACK      MULTITIO[MULTIIDX],SYFISYS,SYFIID3,KEY1
            ENDIF
          ELSE
            MOVE      SCFLMTY,MULTITIO[MULTIIDX]
          ENDIF
.
          MOVE      SCFLFNO,MULTIFNO[MULTIIDX]
.
          IF        SCWPBTY=0
            PRINT     *INDENT,"CLOSE     ",SCFLMTY,"FL2"
            PRINT     *INDENT,"CLOSE     ",SCFLMTY,"FL1,DELETE"
            PRINT     "."
          ENDIF
          IF        SCWPBTY=2|SCWPBTY=3
            PRINT     *INDENT,"CLOSE     ",SCFLMTY,"FL1,DELETE"
            PRINT     "."
          ENDIF
          GOTO      GMML1100
GMML1200
          MOVE      SCFLWPF,KEY5
          PRINT     *INDENT,"MOVE      ZERO,OVRCD"
          PRINT     *INDENT,"TRAP      OVERCOND IF IO"
          PRINT     *INDENT,"OPEN      TEMPWORD,FIL",KEY5
          PRINT     *INDENT,"TRAPCLR   IO"
          PRINT     *INDENT,"IF        OVRCD=0"
          PRINT     *INDENT,"  CLOSE     TEMPWORD,DELETE"
          PRINT     *INDENT,"ENDIF"
          GOTO      GMML1100
.
GMML1900  MATCH     SP70,SCPRCAF
          GOTO      GMML2000 IF EQUAL
          PRINT     *INDENT,"CALL      ",SCPRCAF
.
GMML2000  
.          PRINT     *INDENT,"CLOCK      FORK,KEY2"
.          PRINT     *INDENT,"MATCH      #" 0#",KEY2"
.          PRINT     *INDENT,"IF         @EQUAL"
          PRINT     *INDENT,"CHAIN     PGM"
.          PRINT     *INDENT,"ELSE"
.          PRINT     *INDENT,"  STOP"
.          PRINT     *INDENT,"ENDIF"
.
          RETURN
.----------------------------------------------------------------------
. Generate Initialization Routine
.----------------------------------------------------------------------
GMIN0000  
          PRINT     ".---------------------------------------"
          PRINT     ". INIT - Open Files & Display Heading"
          PRINT     ".---------------------------------------"
          PRINT     "INIT0000  CALL      DISPHEAD"
          PRINT     "          MOVE      ONE,CCENTRY"
          PRINT     "          MOVE      ONE,CCANLDTE"
          PRINT     "          MOVE      ONE,CDEFDTE"
          PRINT     "          MOVE      ZERO,CHIGHLT"
          PRINT     "          DISPLAY   *P56:24,#"Opening controlf#";"
          PRINT     "          OPEN      CONTROLF,#"controlf#""
          PRINT     "          DISPLAY   *P56:24,#"Opening scrsbga1#";"
          PRINT     "          OPEN      SCRSBGA1,#"scrsbgaf#""
          PRINT     "          DISPLAY   *P56:24,#"Opening scrpsta1#";"
          PRINT     "          OPEN      SCRPSTA1,#"scrpstaf#""
          PRINT     "          DISPLAY   *P56:24,#"Opening scrpsta1#";"
          PRINT     "          OPEN      SCRPSTA2,#"scrpstaf#""
          PRINT     "          DISPLAY   *P56:24,#"Opening scrslta1#";"
          PRINT     "          OPEN      SCRSLTA1,#"scrsltaf#""
.
          PACK      KEY16,SCPRPID,SP70
          CALL      RSSCOP1
GMIN1000  CALL      RKSCOP1
          BRANCH    OVRCD,GMIN3000
          MATCH     SCOPPID,SCPRPID
          GOTO      GMIN3000 IF NOT EQUAL
          BRANCH    SCOPMOD,GMIN1200,GMIN1000,GMIN1300
GMIN1100  
          PRINT     "          DISPLAY   *P56:24,#"Opening ",SCOPPHY,"#";"
          PRINT     "          OPEN      ",SCOPFIL,",#"",SCOPPHY,"#""
          GOTO      GMIN1000
.
GMIN1200  MOVE      SCOPOPT,KEY20
          REP       "#" ",KEY20
          PRINT     "          DISPLAY   *P56:24,#"Opening ",KEY20,"#";"
          PRINT     "          OPEN      ",SCOPFIL,",",SCOPOPT
          GOTO      GMIN1000
.
GMIN1300  
          UNPACK    SCOPFIL,KEY3,DIM3,SYFIFIL
          CALL      RDSYSC2
          BRANCH    OVRCD,GMIN1000
          PACK      KEY4,SYSCSYS,SYFIFIL
          CALL      RDSYFI1
          BRANCH    OVRCD,GMIN1000
          PRINT     "          MOVE      #"",SYFIASEC,"#",AUDTSECT"
          PRINT     "          MOVE      #"",SYFIAPOS,"#",AUDTPOST"
          PRINT     "          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG"
          PRINT     "          IF        AUDTFLAG=1"
          PRINT     "            DISPLAY   *P56:24,#"Opening ",SCOPPHY,"#";"
          PRINT     "            OPEN      ",SCOPFIL,",#"",SCOPPHY,"#""
          PRINT     "          ENDIF"
          GOTO      GMIN1000
.
GMIN3000  MOVE      SP8,KEY8 * Clear out tempory function file
          CALL      RSSCTF1
          CALL      RKSCTF1
          BRANCH    OVRCD,GMIN3010
          PACK      KEY8,SCTFFUN
          CALL      DESCTF1
          GOTO      GMIN3000
.
GMIN3010  PACK      KEY15,SCPRPID,SP70
          MOVE      ZERO,EXIT
          CALL      RSSCFL1
GMIN3100  CALL      RKSCFL1
          BRANCH    OVRCD,GMIN9900
          MATCH     SCPRPID,SCFLPID
          GOTO      GMIN9900 IF NOT EQUAL
          COMPARE   FIVE,SCFLTYP
          GOTO      GMIN3200 IF EQUAL
          COMPARE   ZERO,SCFLTYP
          GOTO      GMIN3100 IF NOT EQUAL
          COMPARE   ONE,SCFLMUL
          GOTO      GMIN3100 IF NOT EQUAL
.
          CALL      BINIT000    * Initialise Batch Routine
          GOTO      GMIN3100
.
GMIN3200  MOVE      SCFLWPF,KEY5
          PACK      KEY8,KEY5,ANSW,ANSP,ANSI
          CALL      RDSCTF1
          COMPARE   ZERO,OVRCD
          GOTO      GMIN3100 IF EQUAL
          MOVE      KEY8,SCTFFUN
          CALL      WRSCTF1
          PRINT     ".--------------------------------------------------------"
          PRINT     ". Initialise Wp Filename for ",SCFLDES
          PRINT     ".--------------------------------------------------------"
          PRINT     "          PACK      FIL",KEY5,",NAM",KEY5,",PORT"
          PRINT     "          REP       #" 0#",FIL",KEY5
          PRINT     "          DISPLAY   *P56:24,#"Create & Open #",FIL":
                    KEY5,";"
          PRINT     "          PREP      TEMPWORD,FIL",KEY5
          PRINT     "."
          GOTO      GMIN3100
.
GMIN9900  PRINT     "INIT9999  DISPLAY   *P1:24,*EL;"
          PRINT     "          RETURN"
          PRINT     PBLANK
          RETURN
.--------------------------------------------------------------------------
. Generate DISPVARS routine for Print Screen Function
.--------------------------------------------------------------------------
GPRTS000  DISPLAY   *P1:12,"Generating Print Screen Call for Screen : ";
          PRINT     ".------------------------------------"
          PRINT     ". Called for Print Screen Routine "
          PRINT     ".------------------------------------"
          PRINT     "PRTSVARS"
          MOVE      "11",INDENT
          PACK      KEY10,SCPRPID,SP70
          CALL      RSSCMA1
GPRTS100  CALL      RKSCMA1
          BRANCH    OVRCD,GPRTS999
          MATCH     SCPRPID,SCMAPID
          GOTO      GPRTS999 IF NOT EQUAL
          PACK      PSLAB,LABELPS,SCMASID  * Display Screen Fields
          PRINT     *INDENT,"MATCH     #"",SCMASID,"#",SCRID"
          PRINT     *INDENT,"IF         @EQUAL"
          PRINT     *INDENT,"  CALL       ",PSLAB,"L000   * ",SCMADES
          PRINT     *INDENT,"ENDIF"
          GOTO      GPRTS100
.
GPRTS999  PRINT     *INDENT,"RETURN"
          RETURN
.----------------------------------------------------------------------
. Initialise Number of Items of Multi Item Screens
.----------------------------------------------------------------------
BINIT000  
          PACK     KEY8,SCFLMTY,ANSB,ANSC,ANSI
          CALL     RDSCTF1
          COMPARE  ZERO,OVRCD
          GOTO     BINIT999 IF EQUAL
          MOVE     KEY8,SCTFFUN
          CALL     WRSCTF1
.
          PACK     KEY15,SCFLPID,SCFLSID,SCFLFNO
          CALL     RDSCWP1
          BRANCH   OVRCD,BINIT999
          PRINT     ".--------------------------------------------------------"
          PRINT     ". Initialise Batch Screen ",SCFLDES
          PRINT     ".--------------------------------------------------------"
          PRINT    *INDENT,"MOVE     ZERO,",SCFLMTY,"SNO"
          PRINT    *INDENT,"MOVE     #"",SCFLSID,SCFLFNO,"#",KEY7"
          PRINT    *INDENT,"PACK     KEY15,PRGID,KEY7,SP70"
          PRINT    *INDENT,"PACK     KEY20,PRGID,KEY7,SP70"
          PRINT    *INDENT,"CALL     RSSCPS2"
          PRINT    *INDENT,"CALL     RKSCPS2"
          PRINT    *INDENT,"IF       OVRCD=0"
          PRINT    *INDENT,"  PACK     KEY20,SCPSPID,SCPSSID,SCPSITM"
          PRINT    *INDENT,"  MATCH    KEY15,KEY20"
          PRINT    *INDENT,"  IF       @EQUAL"
          PRINT    *INDENT,"    MOVE     SCPSNOR,",SCFLMTY,"SNO"
          PRINT    *INDENT,"  ENDIF"
          PRINT    *INDENT,"ENDIF"
.
          PERFORM  SCWPBTY,BINIT999,BINIT100,BINIT100
          GOTO     BINIT999 
.
BINIT100  PRINT    *INDENT,"PACK      ",SCFLMTY,"FNM,ANST,",SCFLMTY,"NAM,PORT"
          PRINT    *INDENT,"REP       #" 0#",",SCFLMTY,"FNM"
          PRINT    *INDENT,"MOVE      ZERO,OVRCD"
          PRINT    *INDENT,"TRAP      OVERCOND IF IO"
          PRINT    *INDENT,"OPEN      ",SCFLMTY,"FL1,",SCFLMTY,"FNM"
          PRINT    *INDENT,"TRAPCLR   IO"
          PRINT    *INDENT,"IF        OVRCD=0"
          PRINT    *INDENT,"  CLOSE     ",SCFLMTY,"FL1,DELETE"
          PRINT    *INDENT,"ENDIF"
          PRINT    *INDENT,"PACK      KEY80,SGENISB,",SCFLMTY,"FNM,":
                            SCFLMTY,"IDX"
          PRINT    *INDENT,"DISPLAY   *P1:3;"
          PRINT    *INDENT,"DISPLAY   *P56:24,#"Create & Open #",":
                   SCFLMTY,"FNM;"
          PRINT    *INDENT,"EXECUTE   KEY80,TASKID"
          PRINT    *INDENT,"OPEN      ",SCFLMTY,"FL1,",SCFLMTY,"FNM"
.
BINIT999  RETURN
.------------------------------------------
. Generate Screen Main lines
.------------------------------------------
GSMAN000  PACK      KEY10,SCPRPID
          DISPLAY   *P1:13,"Generating Screen : ";
          CLOSE     SCRTDCA1,DELETE
          EXECUTE   KILLDEC,TASKID
          EXECUTE   MAKEDEC,TASKID
          OPEN      SCRTDCA1,DECFNAME
          CALL      RSSCMA1
GSMAN100  CALL      RKSCMA1
          BRANCH    OVRCD,GSMAN999
          MATCH     SCPRPID,SCMAPID
          GOTO      GSMAN999 IF NOT EQUAL
.
          DISPLAY   *P21:13,*EL,*V2LON,SCMASID,*HOFF,SP1,SCMADES
          PACK      SCLAB,LABELSC,SCMASID  * Screen Mainline
          PACK      KYLAB,LABELKY,SCMASID  * Key Field Entry
          PACK      DFLAB,LABELDF,SCMASID  * Display Screen Fields
          PACK      PSLAB,LABELPS,SCMASID  * Display Screen Fields
          PACK      SFLAB,LABELSF,SCMASID  * Select Fields
          PACK      WPLAB,LABELWP,SCMASID  * WP Initialization
          PACK      CFLAB,LABELCF,SCMASID  * Clear Fields
.
.         Multiples (Batch Screen) Labels
.
          PACK      LMLAB,LABELLM,SCMASID  * Load Details
          PACK      DPLAB,LABELDP,SCMASID  * Display Page
          PACK      NPLAB,LABELNP,SCMASID  * Next Page
          PACK      PPLAB,LABELPP,SCMASID  * Previous Page
          PACK      LPLAB,LABELLP,SCMASID  * Last Page
          PACK      FPLAB,LABELFP,SCMASID  * First Page
          PACK      CPLAB,LABELCP,SCMASID  * Clear Page
          PACK      CTLAB,LABELCT,SCMASID  * Clear Temp Row/Col
          PACK      ADLAB,LABELAD,SCMASID  * Add 
          PACK      DLLAB,LABELDL,SCMASID  * Delete a Line
          PACK      SMLAB,LABELSM,SCMASID  * Add/Change a Line
.
          MOVE      "11",INDENT
          PRINT     ".--------------------------------"
          PRINT     ". Screen - ",SCMADES
          PRINT     ".--------------------------------"
          PRINT     SCLAB,"L000"
.
          PRINT     SCLAB,"L100"
          PRINT     *INDENT,"MOVE      #"",SCMASID,"#",SCRID"
          PRINT     *INDENT,"MOVE      ZERO,PRCOL"
          PRINT     *INDENT,"MOVE      ZERO,PRVERT"
.
          PACK      KEY15,SCPRPID,SCMASID,SP70
          MOVE      "XXXXX",SAVEPROM
          CALL      RDSCFL1
GSMAN200  CALL      RKSCFL1
          BRANCH    OVRCD,GSMAN220
          MATCH     SCPRPID,SCFLPID
          GOTO      GSMAN220 IF NOT EQUAL
          MATCH     SCMASID,SCFLSID
          GOTO      GSMAN220 IF NOT EQUAL
          COMPARE   SIX,SCFLTYP           * Find Prompt Field
          GOTO      GSMAN200 IF NOT EQUAL
.
          MOVE      SCFLFNO,SAVEPROM
          PRINT     *INDENT,"MOVE      #"",SCFLFNO,"#",FLDID"
          PRINT     *INDENT,"CALL      GETPOSIT"
          PRINT     *INDENT,"IF        EXIT=0"
          PRINT     *INDENT,"  MOVE     SCPSCOL,PRCOL"
          PRINT     *INDENT,"  MOVE     SCPSROW,PRVERT"
          PRINT     *INDENT,"ENDIF"
.
GSMAN220  
          IF        SCMATYP=1
            PRINT     *INDENT,"MOVE      #"",SCMALEF,"#",CLEF"
            PRINT     *INDENT,"MOVE      #"",SCMARIG,"#",CRIG"
            PRINT     *INDENT,"MOVE      #"",SCMATOP,"#",CTOP"
            PRINT     *INDENT,"MOVE      #"",SCMABOT,"#",CBOT"
            PRINT     *INDENT,"CALL      VBACK000 * Display Background"
            PRINT     *INDENT,"MOVE      ZERO,CLEF"
            PRINT     *INDENT,"MOVE      ZERO,CTOP"
            PRINT     *INDENT,"MOVE      ZERO,CRIG"
            PRINT     *INDENT,"MOVE      ZERO,CBOT"
          ELSE
            PRINT     *INDENT,"CALL      SBACK000 * Display Background"
          ENDIF
.
          PRINT     "."
.          MATCH     SP70,SCMACBF
.          IF        !@EQUAL 
.            PRINT     *INDENT,"CALL      ",SCMACBF
.          ENDIF
.
          PRINT     SCLAB,"L200"
          PRINT     *INDENT,"CALL      ",CFLAB,"L000 * Clear Fields"
.
          MATCH     SP70,SCMACBF
          IF        !@EQUAL 
            PRINT     *INDENT,"CALL      ",SCMACBF
          ENDIF
.
.          MATCH     SP70,SCMACBK
.          IF        !@EQUAL 
.            PRINT     *INDENT,"CALL      ",SCMACBK
.          ENDIF
.
          PRINT     SCLAB,"L300"
          PRINT     *INDENT,"CALL      ",KYLAB,"L000 * Enter Key Fields"
          PRINT     *INDENT,"BRANCH    EXIT,",SCLAB,"L999,",SCLAB,"L999"
.
.          MATCH     SP70,SCMACAK
.          IF        !@EQUAL 
.            PRINT     *INDENT,"CALL      ",SCMACAK
.          ENDIF
.
          PRINT     SCLAB,"L400"
          PRINT     *INDENT,"CALL      ",WPLAB,"L000 * Load any WP Details"
.
          PRINT     SCLAB,"L500"
          PRINT     *INDENT,"CALL      ",LMLAB,"L000 * Load any Batch Details"
.
          PRINT     SCLAB,"L600"
.          MATCH     SP70,SCMACBD
.          IF        !@EQUAL 
.            PRINT     *INDENT,"CALL      ",SCMACBD
.          ENDIF
          PRINT     *INDENT,"CALL      ",DFLAB,"L000 * Display Fields"
.
          PRINT     SCLAB,"L700"
.          MATCH     SP70,SCMACBD
.          IF        !@EQUAL 
.            PRINT     *INDENT,"CALL      ",SCMACBS
.          ENDIF
          PRINT     *INDENT,"CALL      ",SFLAB,"L000 * Select Fields"
          PRINT     *INDENT,"BRANCH    EXIT,",SCLAB,"L100,",SCLAB,"L100,":
                                               SCLAB,"L200"
          MATCH     "1",SCMASEX
          IF        @EQUAL
            PRINT     *INDENT,"IF        EXIT=4"
            PRINT     *INDENT,"  MOVE      ONE,EXIT"
            PRINT     *INDENT,"ENDIF"
          ENDIF
.
          PRINT     SCLAB,"L800"
          MATCH     SP70,SCMACAF
          IF        !@EQUAL 
            PRINT     *INDENT,"CALL      ",SCMACAF
          ENDIF
.
          PRINT     SCLAB,"L900"
          PRINT     SCLAB,"L999  RETURN"
.
          CALL      GSCLR000        * Clear Fields Routine
          CALL      GSKEY000        * Key Field Entry
          CALL      GSWPL000        * Word Processor Load
          CALL      GSLML000        * Multiple Batch Field Load
          CALL      GSDIS000        * Display Fields
          CALL      GSSEL000        * Select Function
.
          GOTO      GSMAN100               * Next Screen
.
GSMAN999  
          DISPLAY   *P21:13,*EL,"Completed"
          CLOSE     SCRTDCA1,DELETE
          RETURN
.--------------------------------------------
. Generate Key Field Entry
.--------------------------------------------
GSKEY000  PRINT     ".--------------------------------------------------------"
          PRINT     ". Enter Key Fields for ",SCMADES
          PRINT     ".--------------------------------------------------------"
          PRINT     KYLAB,"L000"
.
          MOVE       ZERO,F2
          WHILE      F2<20
            ADD        ONE,F2
            MOVE       ZERO,MULTIMLN[F2]
            MOVE       ZERO,MULTIBSQ[F2]
            MOVE       ZERO,MULTIBTY[F2]
            MOVE       SP70,MULTITIO[F2]
            MOVE       SP70,MULTIMTY[F2]
            MOVE       SP70,MULTIFNO[F2]
          DO
          MOVE       ZERO,MULTIIDX
.
          CLEAR     ENDLABEL
          APPEND    KYLAB,ENDLABEL
          APPEND    "L900",ENDLABEL
          RESET     ENDLABEL
          PACK      SAVKEY15,SCPRPID,SCMASID,SP70
          MOVE      "100",LABELNO3
.
GSKEY090  MOVE      SAVKEY15,KEY15
          CALL      RDSCFL1
GSKEY100  CALL      RKSCFL1
          BRANCH    OVRCD,GSKEY900
          MATCH     SCPRPID,SCFLPID
          GOTO      GSKEY900 IF NOT EQUAL
          MATCH     SCMASID,SCFLSID
          GOTO      GSKEY900 IF NOT EQUAL
.
          COMPARE   ZERO,SCFLTYP
          GOTO      GSKEY100 IF NOT EQUAL
          PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO
          CALL      RDSCWP1
          IF        SCFLMUL=1
            MOVE      ZERO,IDXMUL
            MOVE      ZERO,EXIT
            WHILE     IDXMUL<MULTIIDX
              ADD     ONE,IDXMUL
              MATCH   SCFLMTY,MULTIMTY[IDXMUL]
              IF      @EQUAL
                MOVE    ONE,EXIT
              ENDIF
            DO
            IF        EXIT=0
              ADD       ONE,MULTIIDX
              MOVE      SCWPMLN,MULTIMLN[MULTIIDX]
              MOVE      SCWPBSQ,MULTIBSQ[MULTIIDX]
              MOVE      SCWPBTY,MULTIBTY[MULTIIDX]
              MOVE      SCFLMTY,MULTIMTY[MULTIIDX]
              UNPACK    SCFLMTY,KEY4,KEY1
              CALL      RDSYFI1
              IF        OVRCD=0
                IF        SYFITIO=0
                  MOVE      SCFLMTY,MULTITIO[MULTIIDX]
                ELSE
                  PACK      MULTITIO[MULTIIDX],SYFISYS,SYFIID3,KEY1
                ENDIF
              ELSE
                MOVE      SCFLMTY,MULTITIO[MULTIIDX]
              ENDIF
              MOVE      SCFLFNO,MULTIFNO[MULTIIDX]
            ENDIF
.
          ELSE
            PACK      SAVKEY15,SCFLPID,SCFLSID,SCFLFNO
.
            ADD       TEN,LABELNO3
            PRINT     "."
            PRINT     KYLAB,ANSL,LABELNO3
            SUB       TEN,LABELNO3
.
            CALL      DBEF0000  * Display After Field Display before with Blank
            PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO
            CALL      RDSCTA1                 * Read in Tags
            IF        OVRCD=1
              MOVE      SP70,SCTACBK
              MOVE      SP70,SCTACAK
              MOVE      SP70,SCTACBD
              MOVE      SP70,SCTACAD
            ENDIF
.
            CALL      PBEFK000     * Call Before Keyin
.
            IF        LABELNO3=100
              MOVE      "900",LABELNO3
              PACK      DEFLABEL,KYLAB,ANSL,LABELNO3
              CALL      PKEY0000     * Keyin 
              MOVE      "100",LABELNO3
            ELSE
              PACK      DEFLABEL,KYLAB,ANSL,LABELNO3
              CALL      PKEY0000     * Keyin 
            ENDIF
.
            CALL      PAFTK000     * Call After Keyin
.
            CALL      PBEFD000     * Call Before Display
            MOVE      "11",INDENT
            CALL      PDIS0000     * Display
            CALL      PAFTD000     * Call After Display
.
            CALL      DCHK0000     * Display After Field
            ADD       TEN,LABELNO3
            GOTO      GSKEY090     * Next Key Field
         ENDIF
         GOTO      GSKEY100     * Next Key Field
.
GSKEY900  MOVE      "11",INDENT
          PRINT     *INDENT,"MOVE      ZERO,EXIT"
          PRINT     *INDENT,"GOTO      ",KYLAB,"L999"
          PRINT     "."
          PRINT     KYLAB,"L900  MOVE      ONE,EXIT"
          PRINT     KYLAB,"L999  RETURN"
          RETURN
.--------------------------------------------
. Generate Display
.--------------------------------------------
GSDIS000  
          MOVE      ZERO,EXIT
          MOVE      "11",INDENT
          PRINT     ".---------------------------------------------------------"
          PRINT     ". Display Fields for : ",SCMADES
          PRINT     ".---------------------------------------------------------"
          PRINT     DFLAB,"L000"
.
          PRINT     *INDENT,"BRANCH   ACCEPT,",DFLAB,"L999"
          PRINT     *INDENT,"PACK     KEY15,PRGID,SCRID,SP70"
          PRINT     *INDENT,"CALL     RSSCPS1"
          PRINT     DFLAB,"L010"
          PRINT     *INDENT,"CALL     RKSCPS1"
          PRINT     *INDENT,"BRANCH   OVRCD,",DFLAB,"L900"
          PRINT     *INDENT,"MATCH    PRGID,SCPSPID"
          PRINT     *INDENT,"GOTO     ",DFLAB,"L900 IF NOT EQUAL"
          PRINT     *INDENT,"MATCH    SCRID,SCPSSID"
          PRINT     *INDENT,"GOTO     ",DFLAB,"L900 IF NOT EQUAL"
          PRINT     *INDENT,"MATCH    SP70,SCPSMTY"
          PRINT     *INDENT,"GOTO     ",DFLAB,"L010 IF NOT EQUAL"
          PRINT     "."
          PRINT     *INDENT,"CALL     ",PSLAB,"L000 * Display Field"
          PRINT     *INDENT,"GOTO     ",DFLAB,"L010"
.
          PRINT     DFLAB,"L900"
          CALL      GRDIS000    * Display First Page of Multiples
          PRINT     DFLAB,"L999"
          MOVE      "11",INDENT
          PRINT     *INDENT,"RETURN"
.
          PRINT     ".---------------------------------------------------------"
          PRINT     ". Display/Print Fields for : ",SCMADES
          PRINT     ".---------------------------------------------------------"
          PRINT     PSLAB,"L000   PACK      VAR,SP70,SP70"
          PRINT     *INDENT,"PACK     PRINTVAR,SP70,SP70"
          PRINT     *INDENT,"MOVE     SCPSITM,FIELDNO"
.
          PACK      DEFLABEL,PSLAB,INITL999
          PACK      BRALABEL,PSLAB,ANSL
          MOVE      ZERO,BRATYPE
          CALL      GBRA0000    * Generate Branch
.
          PRINT     *INDENT,"GOTO     ",PSLAB,"L999"
.
          MOVE      "100",LABELNO3
          PACK      KEY15,SCPRPID,SCMASID,SP70
          CALL      RSSCFL1
GSDIS300  CALL      RKSCFL1
          BRANCH    OVRCD,GSDIS400
          MATCH     SCPRPID,SCFLPID
          GOTO      GSDIS400 IF NOT EQUAL
          MATCH     SCMASID,SCFLSID
          GOTO      GSDIS400 IF NOT EQUAL
.
          COMPARE   ONE,SCFLMUL
          GOTO      GSDIS300 IF EQUAL
.         
          PACK      SAVKEY15,SCFLPID,SCFLSID,SCFLFNO
          PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO
          CALL      RDSCTA1                 * Read in Tags
          IF        OVRCD=1
            MOVE      SP70,SCTACBK
            MOVE      SP70,SCTACAK
            MOVE      SP70,SCTACBD
            MOVE      SP70,SCTACAD
          ENDIF
.
          IF        SCFLTYP=1|SCFLTYP=2|SCFLTYP=5
            ADD       "1",LABELNO3
            PRINT     "."
            PRINT     PSLAB,ANSL,LABELNO3
.
            CALL      PBEFD000  * Before Display
.
            MOVE      "11",INDENT
            CALL      PDIS0000  * Display
.
            CALL      PAFTD000  * After Display
            MOVE      "11",INDENT
            PRINT     *INDENT,"GOTO     ",PSLAB,"L999"
            MOVE      SAVKEY15,KEY15
            CALL      RDSCFL1
          ENDIF
          GOTO      GSDIS300
.
GSDIS400  PRINT     PSLAB,"L999"
.
          MOVE      "11",INDENT
          PRINT     *INDENT,"RETURN"
          RETURN
.--------------------------------------------
. Generate WP load routine
.--------------------------------------------
GSWPL000  MOVE      "11",INDENT
          PRINT     ".---------------------------------------------------------"
          PRINT     ". Load WP files for : ",SCMADES
          PRINT     ".---------------------------------------------------------"
          PRINT     WPLAB,"L000"
          MOVE      "100",LABELNO3
.
          PACK      KEY15,SCPRPID,SCMASID,SP70
          CALL      RDSCFL1
GSWPL100  CALL      RKSCFL1
          BRANCH    OVRCD,GSWPL900
          MATCH     SCPRPID,SCFLPID
          GOTO      GSWPL900 IF NOT EQUAL
          MATCH     SCMASID,SCFLSID
          GOTO      GSWPL900 IF NOT EQUAL
          COMPARE   FIVE,SCFLTYP           * Wp References
          GOTO      GSWPL100 IF NOT EQUAL
.
          MOVE      SCFLWPF,KEY5
          CALL      RDSYID1
          BRANCH    OVRCD,GSWPL100
.
          MOVE      SCFLWPF,KEY4
          CALL      RDSYFI1
          BRANCH    OVRCD,GSWPL100
          MOVE      SCFLWPF,KEY2
          CALL      RDSYSC1
          BRANCH    OVRCD,GSWPL100
          UNPACK    SCFLWPF,KEY4,KEY1
          BRANCH    SYFITIO,GSWPL110,GSWPL120
.
          PACK      RSCALLID,RS,SYSCSYS,SYFIFIL,KEY1
          PACK      RKCALLID,RK,SYSCSYS,SYFIFIL,KEY1
          PACK      RDCALLID,RD,SYSCSYS,SYFIFIL,KEY1
          PACK      RPCALLID,RP,SYSCSYS,SYFIFIL,KEY1
          GOTO      GSWPL130
.
GSWPL110
          PACK      RSCALLID,RS,SYSCSYS,SYFIID3,KEY1
          PACK      RKCALLID,RK,SYSCSYS,SYFIID3,KEY1
          PACK      RDCALLID,RD,SYSCSYS,SYFIID3,KEY1
          PACK      RPCALLID,RP,SYSCSYS,SYFIID3,KEY1
          GOTO      GSWPL130
.
GSWPL120
          PACK      RSCALLID,RDS,SYFIID3,SYFIID4,KEY1
          PACK      RKCALLID,RDK,SYFIID3,SYFIID4,KEY1
          PACK      RDCALLID,RD,SYFIID3,SYFIID4,KEY1
          PACK      RPCALLID,RDP,SYFIID3,SYFIID4,KEY1
.
GSWPL130
.
          PACK      KEY15,SCPRPID,SCMASID,SCFLFNO
          CALL      RDSCWP1
          BRANCH    OVRCD,GSWPL100
.
          MOVE      ZERO,COUNT
          MOVE      ZERO,KEYLEN
          PACK      PACKKEY,SP70,SP70
          CLEAR     PACKKEY
GSWPL200  ADD       ONE,COUNT
          LOAD      SEGMENT,COUNT,SYIDFL1,SYIDFL2,SYIDFL3,SYIDFL4:
                                  SYIDFL5,SYIDFL6,SYIDFL7,SYIDFL8
          MATCH     SP70,SEGMENT
          GOTO      GSWPL300 IF EQUAL
.
          PACK      KEY8,SYIDSYS,SYIDFIL,SEGMENT
          CALL      RDSYFL2
          ADD       SYFLPHY,KEYLEN
          APPEND    COMMA,PACKKEY
          IF        SYFITIO=2
            APPEND    SYFLV4N,PACKKEY
          ELSE
            APPEND    KEY8,PACKKEY
          ENDIF
          COMPARE   EIGHT,COUNT
          GOTO      GSWPL200 IF NOT EQUAL
.
GSWPL300  CLEAR     KEY8
          APPEND    "KEY",KEY8
          APPEND    KEYLEN,KEY8
          RESET     KEY8
          SQUEEZE   KEY8
          RESET     PACKKEY
          SQUEEZE   PACKKEY
.
          MOVE     "11",INDENT
          PRINT    *INDENT,"PREP     TEMPWORD,FIL",KEY5
          PACK     DIM80,SP70,SP70
          PACK     DIM80,KEY8,COMMA,SCWPPAK
          SQUEEZE  DIM80
          PRINT    *INDENT,"PACK     ",*+,DIM80
          PACK     DIM80,SP70,SP70
          CLEAR    DIM80
          APPEND   KEY8,DIM80
          APPEND   COMMA,DIM80
          APPEND   "SAVKEY80",DIM80
          RESET    DIM80
          SQUEEZE  DIM80
          PRINT    *INDENT,"MOVE     ",*+,DIM80
          IF       SCWPMLN=99
            PRINT    *INDENT,"STRIP    SAVKEY80"
          ELSE
            MOVE     SCWPMLN,KEY2
            SQUEEZE  KEY2
            PRINT    *INDENT,"SETLPTR  SAVKEY80,",KEY2
          ENDIF
          PRINT    *INDENT,"CALL      ",RDCALLID
          PRINT    *INDENT,"IF        OVRCD=0"
          PRINT    *INDENT,"  CALL      ",RPCALLID
          PRINT    *INDENT,"ENDIF"
.
          PRINT    WPLAB,ANSL,LABELNO3
          PRINT    *INDENT,"CALL     ",RKCALLID
.
          ADD      "5",LABELNO3
          PRINT    *INDENT,"BRANCH   OVRCD,",WPLAB,ANSL,LABELNO3
.
          PACK     DIM80,SP70,SP70
          PACK     DIM80,KEY8,PACKKEY
          SQUEEZE  DIM80
          PRINT    *INDENT,"PACK     ",*+,DIM80
          IF       SCWPMLN<>0 
            PRINT    *INDENT,"MATCH    SAVKEY80,",KEY8 
            PRINT    *INDENT,"GOTO     ",WPLAB,ANSL,LABELNO3," IF NOT EQUAL"
          ENDIF
          SUB      "5",LABELNO3
.
          SQUEEZE  SCWPFLD
          PRINT    *INDENT,"PACK     VAR,",*+,SCWPFLD,",SP70,SP70"
          PRINT    *INDENT,"STRIP    VAR"
          PRINT    *INDENT,"MOVELPTR VAR,F3"
          PRINT    *INDENT,"SFORMAT  VAR,F3"
          PRINT    *INDENT,"MOVE     ",*+,SCWPFLD,",VAR"
          PRINT    *INDENT,"IF       F3=0"
          PRINT    *INDENT,"  WRITE    TEMPWORD,SEQ;"
          PRINT    *INDENT,"ELSE"
          PRINT    *INDENT,"  WRITE    TEMPWORD,SEQ;VAR"
          PRINT    *INDENT,"ENDIF"
          PRINT    *INDENT,"SFORMAT  VAR,127"
          PRINT    *INDENT,"GOTO     ",WPLAB,ANSL,LABELNO3
          ADD      "5",LABELNO3
          PRINT    WPLAB,ANSL,LABELNO3,"  CLOSE    TEMPWORD"
          ADD      "5",LABELNO3
          GOTO     GSWPL100
GSWPL900  PRINT    *INDENT,"RETURN"
          RETURN
.--------------------------------------------
. Generate Selection
.--------------------------------------------
GSSEL000
          PRINT    ".---------------------------------------------------------"
          PRINT    ". Selections for : ",SCMADES
          PRINT    ".---------------------------------------------------------"
          PRINT    SFLAB,"L000  PACK     KEY13,PRGID,SCRID,SP70"
          PRINT    "          CALL     RSSCSL1"
          PRINT    SFLAB,"L001  BRANCH   ACCEPT,",SFLAB,"L020"
          PRINT    "."
          PRINT    SFLAB,"L005  CALL     MTSTQ000"
          PRINT    "          MOVE     SCSLITM,FIELDNO"
.
          PACK     DEFLABEL,SFLAB,INITL006
          PACK     BRALABEL,SFLAB,ANSL
          MOVE     ONE,BRATYPE
          CALL     GBRA0000    * Generate Branch
.
          PRINT    SFLAB,"L006  BEEP"
          PRINT    "          GOTO     ",SFLAB,"L005"
.
          PRINT    SFLAB,"L020  CALL     RKSCSL1"
          PRINT    "          BRANCH   OVRCD,",SFLAB,"L090"
          PRINT    "          MATCH    PRGID,SCSLPID"
          PRINT    "          GOTO     ",SFLAB,"L090 IF NOT EQUAL"
          PRINT    "          MATCH    SCRID,SCSLSID"
          PRINT    "          GOTO     ",SFLAB,"L090 IF NOT EQUAL"
          PRINT    "          MOVE     SCSLITM,FIELDNO"
.
          PACK     DEFLABEL,SFLAB,INITL020
          PACK     BRALABEL,SFLAB,ANSL
          MOVE     TWO,BRATYPE
.
          CALL     GBRA0000    * Generate Branch
.
          PRINT    "          GOTO     ",SFLAB,"L020"
.
          PRINT    SFLAB,"L090  MOVE     ZERO,ACCEPT"
.
          CALL     GRDIS000
.
          PRINT    "          GOTO     ",SFLAB,"L001"
.
          MOVE      "100",LABELNO3
          PACK      KEY15,SCPRPID,SCMASID,SP70
          CALL      RSSCFL1
GSSEL300  CALL      RKSCFL1
          BRANCH    OVRCD,GSSEL900
          MATCH     SCPRPID,SCFLPID
          GOTO      GSSEL900 IF NOT EQUAL
          MATCH     SCMASID,SCFLSID
          GOTO      GSSEL900 IF NOT EQUAL
          IF        SCFLTYP=6|SCFLTYP=2
            GOTO      GSSEL300
          ENDIF
          IF        SCFLMUL=1
            IF        !(SCFLTYP=0)
              GOTO      GSSEL300
            ELSE    
              CALL      SGETM000
              MATCH     MULTIFNO[IDXMUL],SCFLFNO
              GOTO      GSSEL300 IF NOT EQUAL
              COMPARE   ONE,MULTIBTY[IDXMUL]
              GOTO      GSSEL300 IF EQUAL
            ENDIF
          ELSE
            IF        SCFLTYP=0
              GOTO      GSSEL300
            ENDIF
          ENDIF
.
          ADD       "1",LABELNO3
          PRINT     "."
          PRINT     SFLAB,ANSL,LABELNO3
          PACK      SAVKEY15,SCFLPID,SCFLSID,SCFLFNO
.
          IF        SCFLMUL=0
            CALL      DBEF0000  * Display After Field Display before with Blank
          ENDIF
.
          PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO
          CALL      RDSCTA1                 * Read in Tags
          IF        OVRCD=1
            MOVE      SP70,SCTACBK
            MOVE      SP70,SCTACAK
            MOVE      SP70,SCTACBD
            MOVE      SP70,SCTACAD
          ENDIF
.
          IF        SCFLMUL=0
            CALL      PBEFK000  * Before Display
          ENDIF
.
          MOVE      "11",INDENT
.
          PACK      ENDLABEL,SFLAB,ANSL,NINE,NINE,ZERO
          PACK      BRALABEL,SFLAB,ANSL
          PACK      DEFLABEL,SFLAB,ANSL,ZERO,ZERO,ONE
          CALL      SKEY0000  * Keyin
.
          IF        SCFLMUL=0
            CALL      PAFTK000  * After Display
          ENDIF
.
          IF        SCFLTYP=0|SCFLTYP=1|SCFLTYP=2
            IF        SCFLMUL=0
              CALL      PBEFD000  * Before Display
              MOVE      "11",INDENT
              CALL      PDIS0000     * Display
              CALL      PAFTD000  * Before Display
            ENDIF
          ENDIF
.
          IF        SCFLMUL=0
            CALL      DCHK0000  * Display After
          ENDIF
.
          IF        SCFLTYP=3|SCFLTYP=4
            CALL      PEXIT000
            GOTO      GSSEL300
          ELSE
            MOVE      "11",INDENT
            PRINT     *INDENT,"GOTO     ",SFLAB,"L001"
          ENDIF
          GOTO      GSSEL300
.
GSSEL900  
          MATCH     "1",SCMASEX
          IF        @EQUAL
            PRINT     SFLAB,"L990  MOVE      FOUR,EXIT * Exit Char Exit"
          ELSE
            PRINT     SFLAB,"L990  MOVE      ONE,EXIT * Exit Char Restart"
          ENDIF
.
          PRINT     SFLAB,"L999  RETURN"
          RETURN
.--------------------------------------------
. Generate Clear Fields
.--------------------------------------------
GSCLR000  MOVE      "11",INDENT
          PRINT     ".--------------------------------------------------------"
          PRINT     ". Clear Fields for Screen : ",SCMADES
          PRINT     ".-------------------------------------------------------"
          MATCH     "0",SCMACLR
          IF        @EQUAL
            PRINT     CFLAB,"L000  COMPARE   ZERO,ACCEPT"
            PRINT     *INDENT,"    GOTO      ",CFLAB,"L999 IF EQUAL"
          ELSE
            PRINT     CFLAB,"L000"
          ENDIF
          MATCH     "2",SCMACLR
          GOTO      GSCLR900 IF EQUAL 
.
          PACK      KEY15,SCPRPID,SCMASID,SP70
          MOVE      ZERO,EXIT
          CALL      RSSCFL1
GSCLR100  CALL      RKSCFL1
          BRANCH    OVRCD,GSCLR900
          MATCH     SCPRPID,SCFLPID
          GOTO      GSCLR900 IF NOT EQUAL
          MATCH     SCMASID,SCFLSID
          GOTO      GSCLR900 IF NOT EQUAL
.
          MATCH     "1",SCMACLR
          GOTO      GSCLR110 IF NOT EQUAL 
.
          IF        SCFLTYP>1
            GOTO      GSCLR100
          ENDIF
          GOTO      GSCLR120
.
GSCLR110  IF        SCFLTYP>2
            GOTO      GSCLR100
          ENDIF
GSCLR120
          MOVE      SCFLFLD,KEY8
          PACK      KEY4,KEY8
          CALL      RDSYFI1
          IF        OVRCD=0
            IF        SYFITIO=2
              CALL      RDSYFL2
              IF        OVRCD=0
                MOVE      SYFLV4N,KEY8
              ENDIF
            ENDIF
          ENDIF
.
          IF        SCFLFTY=0
            PRINT     *INDENT,"MOVE      SP70,",KEY8
          ELSE
            PRINT     *INDENT,"MOVE      ZERO,",KEY8
          ENDIF
          GOTO      GSCLR100
.
GSCLR900  PRINT     CFLAB,"L999  RETURN"
          MOVE      ZERO,EXIT
          RETURN
.------------------------------------------------------------
. Print Call Before Display
.------------------------------------------------------------
PBEFD000  MATCH     SP70,SCTACBD
          GOTO      PBEFD999 IF EQUAL
          PRINT     "          CALL      ",SCTACBD
PBEFD999  RETURN
.------------------------------------------------------------
. Print Call After Display
.------------------------------------------------------------
PAFTD000  MATCH     SP70,SCTACAD
          GOTO      PAFTD999 IF EQUAL
          PRINT     "          CALL      ",SCTACAD
PAFTD999  RETURN
.------------------------------------------------------------
. Print Call Before Keyin
.------------------------------------------------------------
PBEFK000  MATCH     SP70,SCTACBK
          GOTO      PBEFK999 IF EQUAL
          PRINT     "          CALL      ",SCTACBK
PBEFK999  RETURN
.------------------------------------------------------------
. Print Call After Keyin
.------------------------------------------------------------
PAFTK000  MATCH     SP70,SCTACAK
          GOTO      PAFTK999 IF EQUAL
          PRINT     "          CALL      ",SCTACAK
PAFTK999  RETURN
.
.------------------------------------------------------------
. Print Call Keyin
.------------------------------------------------------------
PKEY0000  
          MATCH     KYLAB,DEFLABEL
          IF        @EQUAL
            PRINT     "          MOVE      #"",SCFLFNO,"#",FLDID"
            PRINT     "          CALL      GETPOSIT"
            PRINT     "          IF        EXIT=1"
            PRINT     "            MOVE      #"Mandatory Field Missing.":
                       " Fatal - #",DISPMSG"
            PRINT     "            BEEP"
            PRINT     "            CALL      MESSAGE1"
            PRINT     "            GOTO      FATALERR"
            PRINT     "          ENDIF"
            PRINT     "          MOVE      #"",SCFLKEY,"#",CKEYTYP"
          ENDIF
          MATCH     SP70,SCFLCAL
          GOTO      PKEY1000 IF EQUAL
.
          PRINT     "          CALL      ",SCFLCAL
.
          UNPACK    SCFLCAL,DIM1,KEY5,DIM2
          CALL      RDSYKV1
          BRANCH    OVRCD,PKEY8000
.
          PACK      KEY8,SYKVSYS,SYKVFIL,SYKVKFLD
          MOVE      SCFLFLD,DIM8
          PACK      KEY4,DIM8
          CALL      RDSYFI1
          BRANCH    OVRCD,PKEY0400
.
          COMPARE   TWO,SYFITIO
          GOTO      PKEY0400 IF NOT EQUAL
          PACK      KEY8,DIM8,SP70
          CALL      RDSYFL2
          BRANCH    OVRCD,PKEY0400
          MOVE      SYFLV4N,DIM8
          PACK      KEY8,SYKVSYS,SYKVFIL,SYKVKFLD
.
PKEY0400  COMPARE   THREE,SYKVKTYP
          GOTO      PKEY0600 IF EQUAL
.
          PACK      KEY4,KEY8
          CALL      RDSYFI1
          BRANCH    OVRCD,PKEY8000
          COMPARE   TWO,SYFITIO
          GOTO      PKEY0500 IF EQUAL
.
          MATCH     KEY8,DIM8
          GOTO      PKEY8000 IF EQUAL
          GOTO      PKEY0700
.
PKEY0500  CALL      RDSYFL2
          BRANCH    OVRCD,PKEY8000
          MATCH     SYFLV4N,DIM8
          GOTO      PKEY8000 IF EQUAL
          MOVE      SYFLV4N,KEY8
          GOTO      PKEY0700
.
. Full Key Keyin Routine so MOVE    KEYxx,<Field>
.-------------------------------------------------
PKEY0600  PACK      KEY5,SYKVSYS,SYKVFIL,SYKVIDX
          CALL      RDSYID1
          BRANCH    OVRCD,PKEY8000
          MOVE      ZERO,COUNT
          MOVE      ZERO,KEYLEN
PKEY0610  ADD       ONE,COUNT
          LOAD      SEGMENT,COUNT,SYIDFL1,SYIDFL2,SYIDFL3,SYIDFL4:
                                  SYIDFL5,SYIDFL6,SYIDFL7,SYIDFL8
          MATCH     SP70,SEGMENT
          GOTO      PKEY0620 IF EQUAL
.
          PACK      KEY8,SYIDSYS,SYIDFIL,SEGMENT
          CALL      RDSYFL2
          ADD       SYFLPHY,KEYLEN
          COMPARE   EIGHT,COUNT
          GOTO      PKEY0610 IF NOT EQUAL
.
PKEY0620  CLEAR     KEY8
          APPEND    "KEY",KEY8
          APPEND    KEYLEN,KEY8
          RESET     KEY8
          SQUEEZE   KEY8
.
PKEY0700  PACK      DIM80,SP70,SP70
          CLEAR     DIM80
          APPEND    "          MOVE      ",DIM80
          PACK      KEY17,KEY8,COMMA,DIM8
          SQUEEZE   KEY17
          APPEND    KEY17,DIM80
          RESET     DIM80
          STRIP     DIM80
          PRINT     *+,DIM80
          GOTO      PKEY8000
.
PKEY1000  
          PACK      DIM80,SP70,SP70
          CLEAR     DIM80
          MOVE      SCFLFLD,KEY8
          PACK      KEY4,KEY8
          CALL      RDSYFI1
          BRANCH    OVRCD,PKEY1010
          COMPARE   TWO,SYFITIO
          GOTO      PKEY1010 IF NOT EQUAL
          CALL      RDSYFL2
          BRANCH    OVRCD,PKEY1010
          MOVE      SYFLV4N,KEY8
.
PKEY1010  MOVE      KEY8,KEY9
          RESET     KEY9
          STRIP     KEY9
          ENDSET    KEY9
          APPEND    ":",KEY9
          RESET     KEY9 
          STRIP     KEY8
          COMPARE   ZERO,SCFLKTY
          GOTO      PKEY1100 IF EQUAL
          BRANCH    SCFLKTY,PKEY2000,PKEY3000,PKEY4000,PKEY5000,PKEY6000
          MATCH     SMLAB,DEFLABEL
          IF        @EQUAL
            PRINT     *INDENT,"MOVE     Z70,KEY",MULTIKLN[IDXMUL]
            PRINT     *INDENT,"CALL     TS",MULTIMTY[IDXMUL],"2"
            PRINT     *INDENT,"CALL     TP",MULTIMTY[IDXMUL],"2"
            PRINT     *INDENT,"IF       OVRCD=1"                   
            IF        SCFLFTY=1
              PRINT     *INDENT,"  MOVE     ONE,",KEY8
            ELSE
              MOVE      SYFLLEN,F3
              MOVE      F3,KEY3
              SQUEEZE   KEY3
              PRINT     *INDENT,"  MOVE      #"",*+,KEY3,"#",SECTOR"
              PRINT     *INDENT,"  NFORMAT   FORM21,SECTOR,ZERO"
              PRINT     *INDENT,"  MOVE     ONE,FORM21"
              PRINT     *INDENT,"  MOVE     FORM21,",KEY8
            ENDIF
            PRINT     *INDENT,"ELSE"                   
            IF        SCFLFTY=1
              PRINT     *INDENT,"  ADD      ONE,",KEY8
            ELSE
              MOVE      SYFLLEN,F3
              MOVE      F3,KEY3
              SQUEEZE   KEY3
              PRINT     *INDENT,"  MOVE      #"",*+,KEY3,"#",SECTOR"
              PRINT     *INDENT,"  NFORMAT   FORM21,SECTOR,ZERO"
              PRINT     *INDENT,"  MOVE     ",*+,KEY8,",FORM21"
              PRINT     *INDENT,"  ADD      ONE,FORM21"
              PRINT     *INDENT,"  MOVE     FORM21,",KEY8
            ENDIF
            PRINT     *INDENT,"ENDIF"                   
          ENDIF
          GOTO      PKEY9000
.
PKEY1100  
           IF        SCFLFTY=1
            PRINT    "          MOVE      SP70,VAR"
            PRINT    "          CALL      DISPITEM"
            PRINT    "          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,",KEY8
          ELSE
            STRIP    KEY8
            PRINT    "          STRIP     ",KEY8
            PRINT    "          SFORMAT   VAR,SCPSLEN"
            PRINT    "          MOVE      ",*+,KEY8,",VAR"
            PRINT    "          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR"
            PRINT    "          MOVE      VAR,",KEY8
            PRINT    "          SFORMAT   VAR,127"
            PRINT    "          ENDSET    ",KEY8
            PRINT    "          APPEND    SP70,",KEY8
            PRINT    "          RESET     ",KEY8
            PRINT    "          MATCH     SP70,",KEY8
            PRINT    "          GOTO      ",DEFLABEL," IF EQUAL"
            PRINT    "          CMATCH    EXITCHAR,",KEY8
            PRINT    "          GOTO      ",ENDLABEL," IF EQUAL"
          ENDIF
          GOTO      PKEY9000
.
PKEY2000  
          PRINT   "          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,*JR,",KEY9
          PRINT   "                    *PCCOL:CVERT"
          IF        SCFLFTY=0
            PRINT     "          MATCH     SP70,",KEY8
            PRINT     "          GOTO      ",DEFLABEL," IF EQUAL"
            PRINT     "          ENDSET    ",KEY8
            PRINT     "          CMATCH    EXITCHAR,",KEY8
            PRINT     "          GOTO      ",ENDLABEL," IF EQUAL"
            PRINT     "          RESET     ",KEY8
          ENDIF
          GOTO      PKEY9000
.
PKEY3000  
          PRINT     "          KEYIN     *PCCOL:CVERT,*V2LON":
                    ",*MASK,*RV,*JR,*ZF,",KEY9
          PRINT     "                    *PCCOL:CVERT"
          IF        SCFLFTY=0
            PRINT     "          MATCH     #"0000000000000000000#",",KEY8
            PRINT     "          GOTO      ",DEFLABEL," IF EQUAL"
            PRINT     "          ENDSET    ",KEY8
            PRINT     "          CMATCH    EXITCHAR,",KEY8
            PRINT     "          GOTO      ",ENDLABEL," IF EQUAL"
            PRINT     "          RESET     ",KEY8
          ENDIF
          GOTO      PKEY9000
. 
PKEY4000  
          PRINT     "          CALL      YORN0000"
          PRINT     "          MOVE       FYESNO,",KEY8
          GOTO      PKEY9000
. 
PKEY5000  
          PRINT     "          CALL      YORN0000"
          PRINT     "          MOVE       FYESNO,ANS"
          PRINT     "          REP        #"0A1B#",ANS"
          PRINT     "          REP        #"A1B0#",ANS"
          PRINT     "          MOVE       ANS,",KEY8
          GOTO      PKEY9000
.
PKEY6000  
          PRINT     "          CALL      KEYDATE"
          PRINT     "          BRANCH    OVRCD,",ENDLABEL
          PACK      DIM80,SP70,SP70
          CLEAR     DIM80
          APPEND    "          PACK      ",DIM80
          CLEAR     KEY40
          APPEND    KEY8,KEY40
          APPEND    ",CCENT,CYEAR,CMON,CDAY",KEY40
          RESET     KEY40 
          SQUEEZE   KEY40
          APPEND    KEY40,DIM80
          RESET     DIM80
          STRIP     DIM80
          PRINT     *+,DIM80
          GOTO      PKEY9000
.
PKEY8000  
          PRINT     "          BRANCH    EXIT,":
                    DEFLABEL,COMMA,ENDLABEL
.
PKEY9000  MATCH     KYLAB,DEFLABEL
          IF        @EQUAL
            IF        SCFLKEY=0
              PRINT     "          MOVE      ZERO,ACCEPT"
            ELSE
              IF        SCFLKEY=1
                PRINT     "          MOVE      ONE,ACCEPT"
              ELSE
                PRINT     "          MOVE      OVRCD,ACCEPT"
              ENDIF
            ENDIF
          ENDIF
          RETURN
.
.----------------------------------------------------
. Check for Display After Fields
.----------------------------------------------------
DCHK0000  MOVE      SCFLFNO,KEY5
          CALL      ISAVE000
          PACK      KEY20,SCPRPID,SCMASID,KEY5,SP70
          CALL      RSSCFL2
DCHK1000  CALL      RKSCFL2
          BRANCH    OVRCD,DCHK9999
          MATCH     SCPRPID,SCFLPID
          GOTO      DCHK9999 IF NOT EQUAL
          MATCH     SCMASID,SCFLSID
          GOTO      DCHK9999 IF NOT EQUAL
          MATCH     SCFLDAF,KEY5
          GOTO      DCHK9999 IF NOT EQUAL
          IF        SCFLTYP=7|SCFLTYP=4|SCFLTYP=3|SCFLTYP=6
            GOTO      DCHK1000
          ENDIF
          IF        BATCHFLG=1
            IF        SCFLMUL=1
              GOTO      DCHK1000
            ENDIF
          ENDIF
          IF        BATCHFLG=2
            IF        SCFLMUL=0
              GOTO      DCHK1000
            ENDIF
          ENDIF
          PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO
          CALL      RDSCTA1                 * Read in Tags
          IF        OVRCD=1
            MOVE      SP70,SCTACBK
            MOVE      SP70,SCTACAK
            MOVE      SP70,SCTACBD
            MOVE      SP70,SCTACAD
          ENDIF
.
          CALL      PBEFD000  * Call Before Display
          PRINT     "."
          CALL      GDISF000  * Generate Display Field
.
          CALL      PAFTD000  * Call After Display
          GOTO      DCHK1000
DCHK9999  
          CALL      IREST000
          RETURN
.----------------------------------------------------
. Check for Display After Fields
.----------------------------------------------------
DBEF0000  MOVE      SCFLFNO,KEY5
          CALL      ISAVE000
          PACK      KEY20,SCPRPID,SCMASID,KEY5,SP70
          CALL      RSSCFL2
DBEF1000  CALL      RKSCFL2
          BRANCH    OVRCD,DBEF9999
          MATCH     SCPRPID,SCFLPID
          GOTO      DBEF9999 IF NOT EQUAL
          MATCH     SCMASID,SCFLSID
          GOTO      DBEF9999 IF NOT EQUAL
          MATCH     SCFLDAF,KEY5
          GOTO      DBEF9999 IF NOT EQUAL
          IF        SCFLTYP=7|SCFLTYP=4|SCFLTYP=3|SCFLTYP=6
            GOTO      DBEF1000
          ENDIF
          PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO
          CALL      RDSCTA1                 * Read in Tags
          IF        OVRCD=1
            MOVE      SP70,SCTACBK
            MOVE      SP70,SCTACAK
            MOVE      SP70,SCTACBD
            MOVE      SP70,SCTACAD
          ENDIF
.
          CALL      PBEFD000  * Call Before Display
          PRINT     "."
          MOVE      ONE,FLAGSP70  * Flag for blank display before
          CALL      GDISF000  * Generate Display Field
          MOVE      ZERO,FLAGSP70
.
          CALL      PAFTD000  * Call After Display
          GOTO      DBEF1000
.
DBEF9999  
          CALL      IREST000
          RETURN
.
.-----------------------------------------
. Generate Display Field
.-----------------------------------------
GDISF000  
          PRINT     "."
          MOVE      "11",INDENT
          PRINT     *INDENT,"MOVE      #"",SCFLFNO,"#",FLDID"
          IF        SCFLMUL=1
            PRINT     *INDENT,"CALL      GETMLPOS"
          ELSE
            PRINT     *INDENT,"CALL      GETPOSIT"
          ENDIF
          PRINT     *INDENT,"IF        EXIT=0"
.
          MOVE      "13",INDENT
          CALL      PDIS0000  * Display
.
          MOVE      "11",INDENT
          PRINT     *INDENT,"ENDIF"
          RETURN
.
.------------------------------------------------------
. Generate Display Field
.------------------------------------------------------
PDIS0000  COMPARE   FIVE,SCFLTYP
          GOTO      PDIS1500 IF EQUAL
          MOVE      SCFLFLD,KEY8
          MOVE      SCFLFLD,FIELDNAM
          PACK      KEY4,KEY8
          CALL      RDSYFI1
          BRANCH    OVRCD,PDIS1000
          COMPARE   TWO,SYFITIO
          GOTO      PDIS1000 IF NOT EQUAL
          CALL      RDSYFL2
          BRANCH    OVRCD,PDIS1000
          MOVE      SYFLV4N,FIELDNAM
.
PDIS1000  
          SQUEEZE   FIELDNAM
          IF        FLAGSP70=1
            PRINT     *INDENT,"MOVE     SP70,",FIELDNAM
            PRINT     *INDENT,"PACK      VAR,SP70,SP70"
            PRINT     *INDENT,"CALL      DISPITEM"
            GOTO      PDIS9999
          ENDIF
          BRANCH    SCFLKTY,PDIS1450,PDIS1450,PDIS1460,PDIS1470,PDIS1480
.
PDIS1450  PACK      KEY17,FIELDNAM,COMMA,INITVAR
          SQUEEZE   KEY17
          PRINT     *INDENT,"MOVE      ",KEY17
          PRINT     *INDENT,"CALL      DISPITEM"
          GOTO      PDIS9999
.
PDIS1460  PRINT     *INDENT,"MOVE      NO,YESNO"
          PRINT     *INDENT,"MOVE      ZERO,FORM2"
          PACK      KEY17,FIELDNAM,COMMA,INITFOR2
          SQUEEZE   KEY17
          PRINT     *INDENT,"MOVE      ",KEY17
          PRINT     *INDENT,"LOAD      YESNO,FORM2,YES"
          PRINT     *INDENT,"MOVE      YESNO,VAR"
          PRINT     *INDENT,"CALL      DISPITEM"
          GOTO      PDIS9999
.
PDIS1470  
          PRINT     *INDENT,"MOVE      YES,YESNO"
          PRINT     *INDENT,"MOVE      ZERO,FORM2"
          PACK      KEY17,FIELDNAM,COMMA,INITFOR2
          SQUEEZE   KEY17
          PRINT     *INDENT,"MOVE      ",KEY17
          PRINT     *INDENT,"LOAD      YESNO,FORM2,NO"
          PRINT     *INDENT,"MOVE      YESNO,VAR"
          PRINT     *INDENT,"CALL      DISPITEM"
          GOTO      PDIS9999
.
PDIS1480  
          PACK      DIM80,SP70,SP70
          CLEAR     DIM80
          CLEAR     KEY40
          APPEND    FIELDNAM,KEY40
          APPEND    ",CCENT,CYEAR,CMON,CDAY",KEY40
          RESET     KEY40
          SQUEEZE   KEY40
          PRINT     *INDENT,"UNPACK    ",KEY40
          PRINT     *INDENT,"CALL      PACDATE"
          PRINT     *INDENT,"MOVE      CPCDATE,VAR"
          PRINT     *INDENT,"CALL      DISPITEM"
          GOTO      PDIS9999
.
PDIS1500  MOVE     SCFLWPF,KEY5
          PRINT    *INDENT,"MOVE     FIL",KEY5,",WORDNAME"
          PRINT    *INDENT,"CALL     DISPWORD"
.
PDIS9999  RETURN
.
.------------------------------------------------------------
. GBRA - Calculate Branch on Item
.------------------------------------------------------------
GBRA0000  
          MOVE      ONE,FIRST
          MOVE      "100",LABELNO3
          PACK      DIM80,SP70,SP70
          CLEAR     DIM80
          APPEND    "          BRANCH    FIELDNO,",DIM80
          MOVE      ZERO,FORM5
          PACK      KEY15,SCPRPID,SCMASID,SP70
          CALL      RDSCFL1
GBRA1000  CALL      RKSCFL1
          BRANCH    OVRCD,GBRA2000
          MATCH     SCPRPID,SCFLPID
          GOTO      GBRA2000 IF NOT EQUAL
          MATCH     SCMASID,SCFLSID
          GOTO      GBRA2000 IF NOT EQUAL
.
          MOVE      SCFLFNO,FIELDNO
          ADD       ONE,FORM5
GBRA1110  COMPARE   FIELDNO,FORM5
          GOTO      GBRA1050 IF EQUAL
.
          BRANCH    FIRST,GBRA1120
          APPEND    COMMA,DIM80
GBRA1120  APPEND    DEFLABEL,DIM80
          ADD       ONE,FIRST
          COMPARE   FIVE,FIRST
          GOTO      GBRA1130 IF EQUAL
          ADD       ONE,FORM5
          GOTO      GBRA1110

GBRA1130  APPEND    ":",DIM80
          RESET     DIM80
          STRIP     DIM80
          ENDSET    DIM80
          PRINT     *+,DIM80
          PACK      DIM80,SP70,SP70
          MOVE      ONE,FIRST
          CLEAR     DIM80
          APPEND    "                           ",DIM80
          ADD       ONE,FORM5
          GOTO      GBRA1110
.
GBRA1050
          BRANCH    FIRST,GBRA1100
          APPEND    COMMA,DIM80
GBRA1100  BRANCH    BRATYPE,GBRA1200,GBRA1200,GBRA1300,GBRA1400,GBRA1500:
                            GBRA1600,GBRA1700
.
. Display Fields
.----------------
.          IF        SCFLTYP=2
.            MATCH     SP70,SCFLDAF
.            IF        !@EQUAL
.              APPEND    DEFLABEL,DIM80
.              GOTO      GBRA1900
.            ENDIF
.          ENDIF  
          IF        SCFLMUL=1
.            IF        SCFLTYP=0|SCFLTYP=1|SCFLTYP=2
.              ADD       "1",LABELNO3
.              APPEND    BRALABEL,DIM80
.              APPEND    LABELNO3,DIM80
              APPEND    DEFLABEL,DIM80
              GOTO      GBRA1900
.            ENDIF
          ENDIF
          IF        SCFLTYP=1|SCFLTYP=2|SCFLTYP=5
            ADD       "1",LABELNO3
            APPEND    BRALABEL,DIM80
            APPEND    LABELNO3,DIM80
          ELSE
            APPEND    DEFLABEL,DIM80
          ENDIF
          GOTO      GBRA1900
.
. 1 = Select Item, 2 = Accept Fields
.-----------------------------------
GBRA1200  
          IF        SCFLTYP=2|SCFLTYP=6
            APPEND    DEFLABEL,DIM80
            GOTO      GBRA1900
          ENDIF
          IF        SCFLMUL=1
            IF        !(SCFLTYP=0)
              APPEND    DEFLABEL,DIM80
              GOTO      GBRA1900
            ELSE
              CALL      SGETM000
              MATCH     MULTIFNO[IDXMUL],SCFLFNO
              IF        !(@EQUAL)
                APPEND    DEFLABEL,DIM80
                GOTO      GBRA1900
              ENDIF
              COMPARE   ONE,MULTIBTY[IDXMUL]
              IF        @EQUAL
                APPEND    DEFLABEL,DIM80
                GOTO      GBRA1900
              ENDIF
            ENDIF
          ELSE
            IF        SCFLTYP=0
              APPEND    DEFLABEL,DIM80
              GOTO      GBRA1900
            ENDIF
          ENDIF
          ADD       "1",LABELNO3
          IF        BRATYPE=1
            APPEND    BRALABEL,DIM80
            APPEND    LABELNO3,DIM80
            GOTO      GBRA1900
          ENDIF
          IF        SCFLTYP=0|SCFLTYP=1|SCFLTYP=5
            APPEND    BRALABEL,DIM80
            APPEND    LABELNO3,DIM80
          ELSE
            APPEND    DEFLABEL,DIM80
          ENDIF
          GOTO      GBRA1900
.
. Next Page Multi Item Fields
.-----------------------------
GBRA1300  
          IF        SCFLTYP>2
            APPEND    DEFLABEL,DIM80
            GOTO      GBRA1900
          ENDIF
          IF        SCFLMUL=0
            APPEND    DEFLABEL,DIM80
            GOTO      GBRA1900
          ENDIF
          ADD       "1",LABELNO3
          APPEND    BRALABEL,DIM80
          APPEND    LABELNO3,DIM80
          GOTO      GBRA1900
.
. Select Multi Item Fields
.-----------------------------
GBRA1400  
          IF        SCFLMUL=0
            APPEND    DEFLABEL,DIM80
            GOTO      GBRA1900
          ENDIF
          IF        SCFLTYP=0
            ADD       "1",LABELNO3
            APPEND    DEFLABEL,DIM80
            GOTO      GBRA1900
          ENDIF
          IF        SCFLTYP>1
            APPEND    DEFLABEL,DIM80
            GOTO      GBRA1900
          ENDIF
          ADD       "1",LABELNO3
          APPEND    BRALABEL,DIM80
          APPEND    LABELNO3,DIM80
          GOTO      GBRA1900
.
. Accept Multi Item Fields
.-----------------------------
GBRA1500  
          IF        SCFLMUL=0
            APPEND    DEFLABEL,DIM80
            GOTO      GBRA1900
          ENDIF
          IF        SCFLTYP=1
            ADD       "1",LABELNO3
            APPEND    DEFLABEL,DIM80
            GOTO      GBRA1900
          ENDIF
          IF        !(SCFLTYP=0)
            APPEND    DEFLABEL,DIM80
            GOTO      GBRA1900
          ENDIF
          ADD       "1",LABELNO3
          APPEND    BRALABEL,DIM80
          APPEND    LABELNO3,DIM80
          GOTO      GBRA1900
.
.
. Display Multi Item Fields
.-----------------------------
GBRA1600  
          IF        SCFLMUL=0
            APPEND    DEFLABEL,DIM80
            GOTO      GBRA1900
          ENDIF
          IF        SCFLTYP<=2
            ADD       "1",LABELNO3
            APPEND    BRALABEL,DIM80
            APPEND    LABELNO3,DIM80
            GOTO      GBRA1900
          ENDIF
          APPEND    DEFLABEL,DIM80 
          GOTO      GBRA1900
.
. Clear Page Multi Item Fields
.-----------------------------
GBRA1700  
          IF        SCFLTYP>2
            APPEND    DEFLABEL,DIM80
            GOTO      GBRA1900
          ENDIF
          IF        SCFLMUL=0
            APPEND    DEFLABEL,DIM80
            GOTO      GBRA1900
          ENDIF
          APPEND    BRALABEL,DIM80
          APPEND    LABELNO3,DIM80
          GOTO      GBRA1900
.
GBRA1900  ADD       ONE,FIRST
          COMPARE   "5",FIRST
          GOTO      GBRA1000 IF NOT EQUAL
.
          CALL      RKSCFL1
          BRANCH    OVRCD,GBRA2000
          MATCH     SCPRPID,SCFLPID
          GOTO      GBRA2000 IF NOT EQUAL
          MATCH     SCMASID,SCFLSID
          GOTO      GBRA2000 IF NOT EQUAL
          CALL      RPSCFL1
.
          APPEND    ":",DIM80
          RESET     DIM80
          STRIP     DIM80
          ENDSET    DIM80
          PRINT     *+,DIM80
          PACK      DIM80,SP70,SP70
          MOVE      ONE,FIRST
          CLEAR     DIM80
          APPEND    "                            ",DIM80
          GOTO      GBRA1000
.
GBRA2000  MATCH     SP70,DIM80
          GOTO      GBRA9999 IF EQUAL
          RESET     DIM80
          STRIP     DIM80
          ENDSET    DIM80
          PRINT     *+,DIM80
          PACK      DIM80,SP70,SP70
GBRA9999  RETURN
.
SGETM000  MOVE      ZERO,IDXMUL
SGETM100  COMPARE   MULTIIDX,IDXMUL
          GOTO      SGETM999 IF EQUAL
          ADD       ONE,IDXMUL
          MATCH     MULTIMTY[IDXMUL],SCFLMTY
          GOTO      SGETM100 IF NOT EQUAL
.
SGETM999  RETURN
.------------------------------------------------------------
. Print Call Keyin
.------------------------------------------------------------
SKEY0000  MOVE      "11",INDENT
          IF        SCFLTYP=3|SCFLTYP=4
            IF        SCFLFEX=3|SCFLFEX=4|SCFLFEX=5
              PRINT     *INDENT,"  MOVE      ZERO,HLEF"
              PRINT     *INDENT,"  CALL      GETSCR00"
            ENDIF
          ENDIF
          IF        SCFLTYP=3|SCFLTYP=4|SCFLTYP=7
            IF        SCFLTYP=3|SCFLTYP=7
              IF        SCFLTYP=7
                PRINT     *INDENT,"MOVE      #"",SCFLMTY,"#",NAMSSFFI"
                PRINT     *INDENT,"MOVE      #"",SCFLDAF,"#",ITMSSFFI"
              ENDIF
.
              MATCH     SP70,SCFLCAL
              IF        !@EQUAL
                PRINT     *INDENT,"CALL      ",SCFLCAL
              ENDIF
.
            ELSE
              PRINT     *INDENT,"CALL      SC",SCFLFSC,"L000"
            ENDIF
            GOTO      SKEY9999
          ENDIF
.
          IF        SCFLTYP=5
            PACK      KEY15,SCPRPID,SCMASID,SCFLFNO
            CALL      RDSCWP1
            ASSIGN    (SCWPCON*1)+(SCWPRDS*2)+(SCWPRDO*4)+(SCWPSHM*8),WORDTYPE
            MOVE      SCFLWPF,KEY5
            PRINT     "          CALL     SELECTED"
            PRINT     "          IF       EXIT=1"
            PRINT     "            IF       ACCEPT=0"
            PRINT     "              MOVE     #"",SCWPDFR,"#",SCPSROW"
            PRINT     "              MOVE     #"",SCWPDFC,"#",SCPSCOL"
            PRINT     "              MOVE     #"",SCWPLEN,"#",SCPSLEN"
            PRINT     "              MOVE     #"",SCWPNOR,"#",SCPSNOR"
            PRINT     "              MOVE     SCPSROW,CVERT"
            PRINT     "              MOVE     SCPSCOL,CCOL"
            PRINT     "              MOVE     ZERO,HLEF"
            PRINT     "              CALL     GETSCR00"
            PRINT     "              MOVE     FIL",KEY5,",WORDNAME"
            PRINT     "              MOVE     #"",WORDTYPE,"#",WORDTYPE"
            PRINT     "              CALL     EDITWORD"
            PRINT     "              CALL     PUTSCR00"
            PRINT     "            ENDIF"
            PRINT     "          ELSE"
            PRINT     "            MOVE     FIL",KEY5,",WORDNAME"
            PRINT     "            MOVE     #"",WORDTYPE,"#",WORDTYPE"
            IF        SCWPRDO=1
              PRINT     "            IF       ACCEPT=0"
              PRINT     "               CALL     EDITWORD"
              PRINT     "            ENDIF"
            ELSE
              PRINT     "            CALL     EDITWORD"
            ENDIF
            PRINT     "          ENDIF"
            GOTO      SKEY9999
          ENDIF
.
          IF        SCFLTYP=0
            IF        SCFLMUL=1
              PRINT     *INDENT,"CALL      SELECTED"
              PRINT     *INDENT,"BRANCH    EXIT,",DEFLABEL
              IF        MULTIBTY[IDXMUL]=0
                PRINT     *INDENT,"MOVE      #"",SCFLMTY,"#",NAMSSFFI"
                PRINT     *INDENT,"MOVE      SCPSITM,ITMSSFFI"
                PRINT     *INDENT,"IF        ACCEPT=0"
                PRINT     *INDENT,"  PACK      KEY5,SCPSROW,SCPSCOL"
                PRINT     *INDENT,"  CALL      TR",SCFLMTY,"1"
                PRINT     *INDENT,"  BRANCH    OVRCD,",DEFLABEL
                PRINT     *INDENT,"  MATCH     SCTMROW,SCSLROW"
                PRINT     *INDENT,"  GOTO      ",DEFLABEL," IF NOT EQUAL"
                PRINT     *INDENT,"  MATCH     SCTMCOL,SCSLCOL"
                PRINT     *INDENT,"  GOTO      ",DEFLABEL," IF NOT EQUAL"
                PRINT     *INDENT,"  CALL      ",SMLAB,"L000 * Change Line"
                PRINT     *INDENT,"ELSE"
                PRINT     *INDENT,"  IF        ",SCFLMTY,"AFL=0"
                PRINT     *INDENT,"    MOVE      #"",SCFLMTY,"#",NAMSSFFI"
                PRINT     *INDENT,"    MOVE     #"",SCFLFNO,"#",ITMSSFFI"
                PRINT     *INDENT,"    CALL      ",ADLAB,"L000 * Add Line"
                PRINT     *INDENT,"  ENDIF"
                PRINT     *INDENT,"ENDIF"
                GOTO      SKEY9999
              ELSE
                PRINT     *INDENT,"COMPARE   ONE,ACCEPT"
                PRINT     *INDENT,"GOTO      ",SFLAB,"L001 IF EQUAL"
                PRINT     *INDENT,"CALL      RDT",SCFLMTY
                PRINT     *INDENT,"IF        OVRCD=1"
                PRINT     *INDENT,"  BEEP"
                PRINT     *INDENT,"  GOTO      ",SFLAB,"L001"
                PRINT     *INDENT,"ENDIF"
                PRINT     *INDENT,"MATCH     SP70,",SCFLMTY,"MKY"
                PRINT     *INDENT,"IF        @EQUAL"
                PRINT     *INDENT,"  BEEP"
                PRINT     *INDENT,"  GOTO      ",SFLAB,"L001"
                PRINT     *INDENT,"ENDIF"
                PRINT     *INDENT,"MOVE      ",SCFLMTY,"MKY,",MULTIKEY[IDXMUL]
                PRINT     *INDENT,"MOVE      ZERO,HLEF"
                PRINT     *INDENT,"CALL      GETSCR00"
                CALL      PBEFK000
                MATCH     SP70,SCFLCAL
                IF        !@EQUAL
                  PRINT     *INDENT,"CALL      ",SCFLCAL
                ENDIF
                CALL      PAFTK000
                PRINT     *INDENT,"MOVE      #"",SCMASID,"#",SCRID"
                PRINT     *INDENT,"MOVE      ZERO,PRCOL"
                PRINT     *INDENT,"MOVE      ZERO,PRVERT"
                MATCH     "XXXXX",SAVEPROM
                IF        !(@EQUAL)
                  PRINT     *INDENT,"MOVE      #"",SAVEPROM,"#",FLDID"
                  PRINT     *INDENT,"CALL      GETPOSIT"
                  PRINT     *INDENT,"IF        EXIT=0"
                  PRINT     *INDENT,"  MOVE     SCPSCOL,PRCOL"
                  PRINT     *INDENT,"  MOVE     SCPSROW,PRVERT"
                  PRINT     *INDENT,"ENDIF"
                ENDIF
.
                PRINT     *INDENT,"CALL      PUTSCR00"
.
                PRINT     *INDENT,"CALL      RFT",SCFLMTY
                PRINT     *INDENT,"IF        OVRCD=1"
                PRINT     *INDENT,"  CALL      ",FPLAB,"L000"
                PRINT     *INDENT,"ELSE"
                PRINT     *INDENT,"  MOVE      ",SCFLMTY,"MKY,",MULTIKEY[IDXMUL]
                PRINT     *INDENT,"  CALL      ",RSCALLID
                IF        MULTIBSQ[IDXMUL]=0
                  PRINT     *INDENT,"  CALL      ",RPCALLID
                ELSE
                  PRINT     *INDENT,"  CALL      ",RKCALLID
                ENDIF
                PRINT     *INDENT,"  CALL      ",DPLAB,"L000"
                PRINT     *INDENT,"ENDIF"
                GOTO      SKEY9999
              ENDIF
            ENDIF
          ENDIF
.
          IF        SCFLMUL=0
            PRINT     "          CALL     SELECTED"
          ENDIF
          MATCH     SP70,SCFLCAL
          GOTO      SKEY1000 IF EQUAL
          PRINT     "          MOVE      #"",SCFLKEY,"#",CKEYTYP"
          PRINT     "          CALL      ",SCFLCAL
.
          UNPACK    SCFLCAL,DIM1,KEY5,DIM2
          CALL      RDSYKV1
          BRANCH    OVRCD,SKEY8000
.
          PACK      KEY8,SYKVSYS,SYKVFIL,SYKVKFLD
          MOVE      SCFLFLD,DIM8
          PACK      KEY4,DIM8
          CALL      RDSYFI1
          BRANCH    OVRCD,SKEY0400
.
          COMPARE   TWO,SYFITIO
          GOTO      SKEY0400 IF NOT EQUAL
          PACK      KEY8,DIM8,SP70
          CALL      RDSYFL2
          BRANCH    OVRCD,SKEY0400
          MOVE      SYFLV4N,DIM8
          PACK      KEY8,SYKVSYS,SYKVFIL,SYKVKFLD
.
SKEY0400  COMPARE   THREE,SYKVKTYP
          GOTO      SKEY0600 IF EQUAL
.
          PACK      KEY4,KEY8
          CALL      RDSYFI1
          BRANCH    OVRCD,SKEY8000
          COMPARE   TWO,SYFITIO
          GOTO      SKEY0500 IF EQUAL
.
          MATCH     KEY8,DIM8
          GOTO      SKEY8000 IF EQUAL
          GOTO      SKEY0700
.
SKEY0500  CALL      RDSYFL2
          BRANCH    OVRCD,SKEY8000
          MATCH     SYFLV4N,DIM8
          GOTO      SKEY8000 IF EQUAL
          MOVE      SYFLV4N,KEY8
          GOTO      SKEY0700
.
. Full Key Keyin Routine so MOVE    KEYxx,<Field>
.-------------------------------------------------
SKEY0600  PACK      KEY5,SYKVSYS,SYKVFIL,SYKVIDX
          CALL      RDSYID1
          BRANCH    OVRCD,SKEY8000
          MOVE      ZERO,COUNT
          MOVE      ZERO,KEYLEN
SKEY0610  ADD       ONE,COUNT
          LOAD      SEGMENT,COUNT,SYIDFL1,SYIDFL2,SYIDFL3,SYIDFL4:
                                  SYIDFL5,SYIDFL6,SYIDFL7,SYIDFL8
          MATCH     SP70,SEGMENT
          GOTO      SKEY0620 IF EQUAL
.
          PACK      KEY8,SYIDSYS,SYIDFIL,SEGMENT
          CALL      RDSYFL2
          ADD       SYFLPHY,KEYLEN
          COMPARE   EIGHT,COUNT
          GOTO      SKEY0610 IF NOT EQUAL
.
SKEY0620  CLEAR     KEY8
          APPEND    "KEY",KEY8
          APPEND    KEYLEN,KEY8
          RESET     KEY8
          SQUEEZE   KEY8
.
SKEY0700  PACK      DIM80,SP70,SP70
          CLEAR     DIM80
          APPEND    "          MOVE      ",DIM80
          PACK      KEY17,KEY8,COMMA,DIM8
          SQUEEZE   KEY17
          APPEND    KEY17,DIM80
          RESET     DIM80
          STRIP     DIM80
          PRINT     *+,DIM80
          GOTO      SKEY8000
.
SKEY1000  
          PACK      DIM80,SP70,SP70
          CLEAR     DIM80
.
          MOVE      SCFLFLD,KEY8
          PACK      KEY4,KEY8
          CALL      RDSYFI1
          BRANCH    OVRCD,SKEY1010
          COMPARE   TWO,SYFITIO
          GOTO      SKEY1010 IF NOT EQUAL
          CALL      RDSYFL2
          BRANCH    OVRCD,SKEY1010
          MOVE      SYFLV4N,KEY8
.
SKEY1010 
          MOVE      KEY8,KEY9
          RESET     KEY9
          STRIP     KEY9
          ENDSET    KEY9
          APPEND    ":",KEY9
          RESET     KEY9 
          BRANCH    SCFLKTY,SKEY2000,SKEY3000,SKEY4000,SKEY5000,SKEY6000
.
SKEY1100  
          IF        SCFLFTY=1
            PRINT    "          MOVE      SP70,VAR"
            PRINT    "          CALL      DISPITEM"
            PRINT    "          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,",KEY8
          ELSE
            STRIP    KEY8
            PRINT    "          STRIP     ",KEY8
            PRINT    "          SFORMAT   VAR,SCPSLEN"
            PRINT    "          MOVE      ",*+,KEY8,",VAR"
            PRINT    "          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR"
            PRINT    "          MOVE      VAR,",KEY8
            PRINT    "          SFORMAT   VAR,127"
            PRINT    "          ENDSET    ",KEY8
            PRINT    "          APPEND    SP70,",KEY8
            PRINT    "          RESET     ",KEY8
            PRINT    "          CMATCH    EXITCHAR,",KEY8
            PRINT    "          GOTO      ",ENDLABEL," IF EQUAL"
          ENDIF
          GOTO      SKEY7000
.
SKEY2000  
          PRINT     "          KEYIN     *PCCOL:CVERT,*V2LON":
                    ",*MASK,*RV,*JR,",KEY9
          PRINT     "                    *PCCOL:CVERT"
          IF        SCFLFTY=0
            PRINT     "          ENDSET    ",KEY8
            PRINT     "          CMATCH    EXITCHAR,",KEY8
            PRINT     "          GOTO      ",ENDLABEL," IF EQUAL"
            PRINT     "          RESET     ",KEY8
          ENDIF
          GOTO      SKEY7000
.
SKEY3000  
          PRINT     "          KEYIN     *PCCOL:CVERT,*V2LON":
                    ",*MASK,*RV,*JR,*ZF,",KEY9
          PRINT     "                    *PCCOL:CVERT"
          IF        SCFLFTY=0
            PRINT     "          ENDSET    ",KEY8
            PRINT     "          CMATCH    EXITCHAR,",KEY8
            PRINT     "          GOTO      ",ENDLABEL," IF EQUAL"
            PRINT     "          RESET     ",KEY8
          ENDIF
          GOTO      SKEY7000
. 
SKEY4000  
          PRINT     "          CALL      YORN0000"
          PRINT     "          MOVE       FYESNO,",KEY8
          GOTO      SKEY9000
. 
SKEY5000  
          PRINT     "          CALL      YORN0000"
          PRINT     "          MOVE       FYESNO,ANS"
          PRINT     "          REP        #"0A1B#",ANS"
          PRINT     "          REP        #"A1B0#",ANS"
          PRINT     "          MOVE       ANS,",KEY8
          GOTO      SKEY9000
.
SKEY6000  
          PRINT     "          CALL      KEYDATE"
          MATCH     SMLAB,ENDLABEL
          IF        @EQUAL
            PRINT     "          BRANCH    OVRCD,",ENDLABEL
          ENDIF
          CLEAR     KEY40
          APPEND    KEY8,KEY40
          APPEND    ",CCENT,CYEAR,CMON,CDAY",KEY40
          RESET     KEY40 
          SQUEEZE   KEY40
          PRINT     "          PACK      ",KEY40
          GOTO      SKEY9000
.
SKEY7000
          PRINT     "          IF        SCPSMAN=1"
          IF        SCFLFTY=0
            PRINT     "            MATCH     SP70,",KEY8
          ELSE
            PRINT     "            COMPARE   ZERO,",KEY8
          ENDIF
          PRINT     "            IF        @EQUAL"
          PRINT     "              MOVE      #"Mandatory Field - #",DISPMSG"
          PRINT     "              BEEP"
          PRINT     "              CALL      MESSAGE1"
          PRINT     "              GOTO      ",BRALABEL,LABELNO3
          PRINT     "            ENDIF"
          PRINT     "          ENDIF"
          GOTO      SKEY9000
.
SKEY8000  
          PRINT     "          IF        SCPSMAN=1"
          PRINT     "            IF        EXIT=1"
          PRINT     "              MOVE      #"Mandatory Field - #",DISPMSG"
          PRINT     "              BEEP"
          PRINT     "              CALL      MESSAGE1"
          PRINT     "              GOTO      ",BRALABEL,LABELNO3
          PRINT     "            ENDIF"
          PRINT     "            BRANCH    EXIT,":
                    BRALABEL,LABELNO3,COMMA,ENDLABEL
          PRINT     "          ELSE"
          PRINT     "            COMPARE   TWO,EXIT"
          PRINT     "            GOTO      ",ENDLABEL," IF EQUAL"
          PRINT     "          ENDIF"
.
SKEY9000  
.         
SKEY9999  RETURN
.---------------------------------------
. Generate Exit Function
.---------------------------------------
PEXIT000  BRANCH    SCFLFEX,PEXIT100,PEXIT200,PEXIT300,PEXIT400,PEXIT500
.
          PRINT     *INDENT,"MOVE      ZERO,EXIT"
          PRINT     *INDENT,"GOTO      ",SFLAB,"L999"
          GOTO      PEXIT999
.
PEXIT100 
          IF        SCFLTYP=4
            PRINT     *INDENT,"MOVE      #"",SCMASID,"#",SCRID"
            PRINT     *INDENT,"MOVE      ZERO,PRCOL"
            PRINT     *INDENT,"MOVE      ZERO,PRVERT"
            MATCH     "XXXXX",SAVEPROM
            IF        !(@EQUAL)
              PRINT     *INDENT,"MOVE      #"",SAVEPROM,"#",FLDID"
              PRINT     *INDENT,"CALL      GETPOSIT"
              PRINT     *INDENT,"IF        EXIT=0"
              PRINT     *INDENT,"  MOVE     SCPSCOL,PRCOL"
              PRINT     *INDENT,"  MOVE     SCPSROW,PRVERT"
              PRINT     *INDENT,"ENDIF"
            ENDIF
          ENDIF
          PRINT     *INDENT,"GOTO      ",SFLAB,"L001"
          GOTO      PEXIT999
.
PEXIT200  
          PRINT     *INDENT,"MOVE      ONE,EXIT"
          PRINT     *INDENT,"GOTO      ",SFLAB,"L999"
          GOTO      PEXIT999
.
PEXIT300  
          PRINT     *INDENT,"MOVE      #"",SCMASID,"#",SCRID"
          PRINT     *INDENT,"MOVE      ZERO,PRCOL"
          PRINT     *INDENT,"MOVE      ZERO,PRVERT"
          MATCH     "XXXXX",SAVEPROM
          IF        !(@EQUAL)
            PRINT     *INDENT,"MOVE      #"",SAVEPROM,"#",FLDID"
            PRINT     *INDENT,"CALL      GETPOSIT"
            PRINT     *INDENT,"IF        EXIT=0"
            PRINT     *INDENT,"  MOVE     SCPSCOL,PRCOL"
            PRINT     *INDENT,"  MOVE     SCPSROW,PRVERT"
            PRINT     *INDENT,"ENDIF"
          ENDIF
.
          PRINT     *INDENT,"CALL      PUTSCR00"
          PRINT     *INDENT,"GOTO      ",SFLAB,"L001"
          GOTO      PEXIT999
.
PEXIT400  
          PRINT     *INDENT,"MOVE      #"",SCMASID,"#",SCRID"
          PRINT     *INDENT,"MOVE      ZERO,PRCOL"
          PRINT     *INDENT,"MOVE      ZERO,PRVERT"
          MATCH     "XXXXX",SAVEPROM
          IF        !(@EQUAL)
            PRINT     *INDENT,"MOVE      #"",SAVEPROM,"#",FLDID"
            PRINT     *INDENT,"CALL      GETPOSIT"
            PRINT     *INDENT,"IF        EXIT=0"
            PRINT     *INDENT,"  MOVE     SCPSCOL,PRCOL"
            PRINT     *INDENT,"  MOVE     SCPSROW,PRVERT"
            PRINT     *INDENT,"ENDIF"
          ENDIF
.
          PRINT     *INDENT,"CALL      PUTSCR00"
          PRINT     *INDENT,"CALL      ",DFLAB,"L000"
          PRINT     *INDENT,"GOTO      ",SFLAB,"L001"
          GOTO      PEXIT999
.
PEXIT500  PRINT     *INDENT,"MOVE      EXIT,SECTOR"
          PRINT     *INDENT,"IF        SECTOR=0"
          PRINT     *INDENT,"  CALL      FRESCR00"
          PRINT     *INDENT,"  GOTO      ",SFLAB,"L999"
          PRINT     *INDENT,"ENDIF"
          PRINT     *INDENT,"IF        SECTOR=1"
          PRINT     *INDENT,"  CALL      FRESCR00"
          PRINT     *INDENT,"  MOVE      ZERO,EXIT"        
          PRINT     *INDENT,"  GOTO      ",SFLAB,"L001"
          PRINT     *INDENT,"ENDIF"
          PRINT     *INDENT,"IF        SECTOR=2"
          PRINT     *INDENT,"  CALL      FRESCR00"
          PRINT     *INDENT,"  MOVE      ONE,EXIT"        
          PRINT     *INDENT,"  GOTO      ",SFLAB,"L999"
          PRINT     *INDENT,"ENDIF"
          PRINT     *INDENT,"MOVE      #"",SCMASID,"#",SCRID"
          PRINT     *INDENT,"MOVE      ZERO,PRCOL"
          PRINT     *INDENT,"MOVE      ZERO,PRVERT"
          MATCH     "XXXXX",SAVEPROM
          IF        !(@EQUAL)
            PRINT     *INDENT,"MOVE      #"",SAVEPROM,"#",FLDID"
            PRINT     *INDENT,"CALL      GETPOSIT"
            PRINT     *INDENT,"IF        EXIT=0"
            PRINT     *INDENT,"  MOVE     SCPSCOL,PRCOL"
            PRINT     *INDENT,"  MOVE     SCPSROW,PRVERT"
            PRINT     *INDENT,"ENDIF"
          ENDIF
.
          PRINT     *INDENT,"CALL      PUTSCR00"
          PRINT     *INDENT,"IF        SECTOR=4"
          PRINT     *INDENT,"  CALL      ",DFLAB,"L000"
          PRINT     *INDENT,"ENDIF"
.
          PRINT     *INDENT,"GOTO      ",SFLAB,"L001"
          GOTO      PEXIT999
.
PEXIT999  RETURN
.--------------------------------------------------------
. Generate Code for Functions
.--------------------------------------------------------
GFUNC000  PRINT     ".@@@@@ Function Restart Point @@@@@"
.
GFUNC010  MOVE      SP8,KEY8 * Clear out tempory function file
          CALL      RSSCTF1
          CALL      RKSCTF1
          BRANCH    OVRCD,GFUNC020
          PACK      KEY8,SCTFFUN
          CALL      DESCTF1
          GOTO      GFUNC010
.
GFUNC020  
          MOVE      SCPRCBF,KEY8
          CALL      PFUNC000
          MOVE      SCPRCAF,KEY8
          CALL      PFUNC000
.
          PACK      KEY10,SCPRPID,SP70
          CALL      RSSCMA1
GFUNC100  CALL      RKSCMA1
          BRANCH    OVRCD,GFUNC999
          MATCH     SCPRPID,SCMAPID
          GOTO      GFUNC999 IF NOT EQUAL
.
          MOVE      SCMACBF,KEY8
          CALL      PFUNC000
          MOVE      SCMACAF,KEY8
          CALL      PFUNC000
          PACK      KEY15,SCPRPID,SCMASID,SP70
          CALL      RSSCTA1
GFUNC200  CALL      RKSCTA1
          BRANCH    OVRCD,GFUNC300
          MATCH     SCPRPID,SCTAPID
          GOTO      GFUNC300 IF NOT EQUAL
          MATCH     SCMASID,SCTASID
          GOTO      GFUNC300 IF NOT EQUAL
          MOVE      SCTACBK,KEY8
          CALL      PFUNC000
          MOVE      SCTACAK,KEY8
          CALL      PFUNC000
          MOVE      SCTACBD,KEY8
          CALL      PFUNC000
          MOVE      SCTACAD,KEY8
          CALL      PFUNC000
          GOTO      GFUNC200
.
GFUNC300  PACK      KEY15,SCPRPID,SCMASID,SP70
          CALL      RSSCFL1
GFUNC400  CALL      RKSCFL1
          BRANCH    OVRCD,GFUNC100
          MATCH     SCPRPID,SCFLPID
          GOTO      GFUNC100 IF NOT EQUAL
          MATCH     SCMASID,SCFLSID
          GOTO      GFUNC100 IF NOT EQUAL
          MOVE      SCFLCAL,KEY8
          CALL      PFUNC000
          GOTO      GFUNC400
GFUNC999  RETURN
.----------------------------------------------------
. Print Functions into Program
.----------------------------------------------------
PFUNC000  MATCH     SP70,KEY8
          GOTO      PFUNC999 IF EQUAL
.
          CALL      RDSCTF1
          COMPARE   ZERO,OVRCD
          GOTO      PFUNC999 IF EQUAL
          MOVE      KEY8,SCTFFUN
          CALL      WRSCTF1
.
          PACK      KEY16,KEY8,SCPRPID   * Local Function Priority
          CALL      RDSCFM1
          IF        OVRCD=1
            PACK      KEY16,KEY8,SP70    * Global Function if No Function
            CALL      RDSCFM1
            BRANCH    OVRCD,PFUNC999     * Not on Function Master
          ENDIF                          * (Hope its in some include)
.
          PACK      KEY21,SCFMFID,SCFMPID,SP70
          CALL      RSSCFD1
PFUNC100  CALL      RKSCFD1
          BRANCH    OVRCD,PFUNC999
          MATCH     SCFMFID,SCFDFID
          GOTO      PFUNC999 IF NOT EQUAL
          MATCH     SCFMPID,SCFDPID
          GOTO      PFUNC999 IF NOT EQUAL
          STRIP     SCFDCOD
          PRINT     *+,SCFDCOD
          GOTO      PFUNC100
.
PFUNC999  RETURN
.------------------------------------------------------------
. Generate Key Multi Item Next Field
.------------------------------------------------------------
GKNXT000
          PRINT     *INDENT,"Key Multi Item Next Field"
          RETURN
.--------------------------------------------------------------
. Generate Initialisation for multi item display
.--------------------------------------------------------------
GRDIS000  MOVE      "11",INDENT
          
          MOVE      ZERO,IDXMUL
GRDIS100  COMPARE   IDXMUL,MULTIIDX
          GOTO      GRDIS900 IF EQUAL
          ADD       ONE,IDXMUL
          PRINT     *INDENT,"MOVE      #"",MULTIMTY[IDXMUL],"#",NAMSSFFI"
          PRINT     *INDENT,"MOVE      #"",MULTIFNO[IDXMUL],"#",ITMSSFFI"
          PRINT     *INDENT,"CALL      ",FPLAB,"L000"
          GOTO      GRDIS100
.
GRDIS900  RETURN
.----------------------------------------------------------------------
. Generate Add and Delete Items Routines
.----------------------------------------------------------------------
GSADI000  
          MOVE      ZERO,IDXMUL
GSADI010  COMPARE   IDXMUL,MULTIIDX
          GOTO      GSADI999 IF EQUAL
          ADD       ONE,IDXMUL
          COMPARE   ZERO,MULTIBTY[IDXMUL]
          GOTO      GSADI010 IF NOT EQUAL
.
          PRINT     ".----------------------------------"
          PRINT     ". Clear Pages of Multi Items "
          PRINT     ".----------------------------------"
          PRINT     CPLAB,"L000"
          PRINT     *INDENT,"CALL     ",CTLAB,"L000"
          PRINT     *INDENT,"PACK     KEY15,PRGID,SCRID,SP70"
          PRINT     *INDENT,"CALL     RSSCPS1"
          PRINT     CPLAB,"L010"
          PRINT     *INDENT,"CALL     RKSCPS1"
          PRINT     *INDENT,"BRANCH   OVRCD,",CPLAB,"L999"
          PRINT     *INDENT,"MATCH    PRGID,SCPSPID"
          PRINT     *INDENT,"GOTO     ",CPLAB,"L999 IF NOT EQUAL"
          PRINT     *INDENT,"MATCH    SCRID,SCPSSID"
          PRINT     *INDENT,"GOTO     ",CPLAB,"L999 IF NOT EQUAL"
          PRINT     *INDENT,"MATCH    NAMSSFFI,SCPSMTY"
          PRINT     *INDENT,"GOTO     ",CPLAB,"L010 IF NOT EQUAL"
          PRINT     *INDENT,"MOVE     SCPSITM,FIELDNO"
.
          PACK     DEFLABEL,CPLAB,INITL010
          PACK     BRALABEL,CPLAB,ANSL
          MOVE     SEVEN,BRATYPE
.
          CALL     GBRA0000    * Generate Branch
.
          MOVE      "100",LABELNO3
          PRINT     "."
          PRINT     CPLAB,ANSL,LABELNO3
          PRINT     *INDENT,"PACK     VAR,SP70,SP70"
          PRINT     *INDENT,"CALL     DISPITEM  * Display Blank Item"
          PRINT     *INDENT,"GOTO     ",CPLAB,"L010"
.
GSADI400
          PRINT     CPLAB,"L999  RETURN"
.
          PRINT     ".---------------------------------------------------------"
          PRINT     ". Add Items"
          PRINT     ".---------------------------------------------------------"
          PRINT     ADLAB,"L000"
          PRINT     *INDENT,"CALL      ",CPLAB,"L000 * Clear Screen of Items"
          PRINT     *INDENT,"PACK      KEY20,PRGID,SCRID,ITMSSFFI,SP70"
          PRINT     *INDENT,"CALL      RSSCPS2"
          PRINT     ADLAB,"L010  CALL      RKSCPS2"
          PRINT     *INDENT,"BRANCH    OVRCD,",ADLAB,"L000"
          PRINT     *INDENT,"MATCH     PRGID,SCPSPID"
          PRINT     *INDENT,"GOTO      ",ADLAB,"L000 IF NOT EQUAL"
          PRINT     *INDENT,"MATCH     SCRID,SCPSSID"
          PRINT     *INDENT,"GOTO      ",ADLAB,"L000 IF NOT EQUAL"
          PRINT     *INDENT,"MATCH     ITMSSFFI,SCPSITM"
          PRINT     *INDENT,"GOTO      ",ADLAB,"L000 IF NOT EQUAL"
          PRINT     *INDENT,"PACK      SKSCPS20,SCPSPID,SCPSSID,SCPSITM":
                                       ",SCPSROW,SCPSCOL"
          PRINT     *INDENT,"MOVE      ACCEPT,SACCEPT"
          PRINT     *INDENT,"MOVE      ONE,ACCEPT"
.
          PRINT     *INDENT,"CALL      ",SMLAB,"L000"
          PRINT     *INDENT,"MOVE      SACCEPT,ACCEPT"
          PRINT     *INDENT,"MOVE      SKSCPS20,KEY20"
          PRINT     *INDENT,"CALL      RDSCPS2"

          MOVE      ZERO,IDXMUL
GSADI500  COMPARE   IDXMUL,MULTIIDX
          GOTO      GSADI600 IF EQUAL
          ADD       ONE,IDXMUL
          PRINT     *INDENT,"MATCH     #"",MULTIMTY[IDXMUL],"#",NAMSSFFI"
          PRINT     *INDENT,"IF        @EQUAL"
          PRINT     *INDENT,"  COMPARE   ZERO,",MULTIMTY[IDXMUL],"AFL"
          PRINT     *INDENT,"  GOTO      ",ADLAB,"L010 IF EQUAL"
          PRINT     *INDENT,"  CALL      ",FPLAB,"L000"
          PRINT     *INDENT,"  GOTO      ",ADLAB,"L999"
          PRINT     *INDENT,"ENDIF"
          GOTO      GSADI500
GSADI600  
          PRINT     ADLAB,"L999"
          PRINT     *INDENT,"RETURN"
.
          PRINT     ".---------------------------------------------------------"
          PRINT     ". Delete Items"
          PRINT     ".---------------------------------------------------------"
          PRINT     DLLAB,"L000  "
          PRINT     *INDENT,"MOVE      SCSLDES,DISPMSG"
          PRINT     *INDENT,"CALL      MESSAGE2"
          PRINT     DLLAB,"L005  "
          PRINT     *INDENT,"CALL      MDELQ000"
          PRINT     *INDENT,"BRANCH    EXIT,",DLLAB,"L900,",DLLAB,"L900"
          PRINT     *INDENT,"MOVE      SCSLITM,FIELDNO"
          PRINT     *INDENT,"MATCH     ITMSSFFI,SCSLITM"
          PRINT     *INDENT,"GOTO      ",DLLAB,"L100 IF NOT EQUAL"
.
          PRINT     *INDENT,"CALL      SELECTED"
          MOVE      ZERO,IDXMUL
GSADI700  COMPARE   IDXMUL,MULTIIDX
          GOTO      GSADI800 IF EQUAL
          ADD       ONE,IDXMUL
          COMPARE   ZERO,MULTIBTY[IDXMUL]
          GOTO      GSADI700 IF NOT EQUAL
          PRINT     *INDENT,"MATCH     #"",MULTIMTY[IDXMUL],"#",SCPSMTY"
          PRINT     *INDENT,"IF        @EQUAL"
          PRINT     *INDENT,"  PACK      KEY5,SCSLROW,SCSLCOL"
          PRINT     *INDENT,"  CALL      TR",MULTIMTY[IDXMUL],"1"
          PRINT     *INDENT,"  IF        OVRCD=0"
          PRINT     *INDENT,"    CALL      TD",MULTIMTY[IDXMUL],"2"
          PRINT     *INDENT,"  ELSE"
          PRINT     *INDENT,"    BEEP"
          PRINT     *INDENT,"    GOTO      ",DLLAB,"L005"
          PRINT     *INDENT,"  ENDIF"
          PRINT     *INDENT,"  PACK      KEY5,SP1,ONE,SP70"
          PRINT     *INDENT,"  CALL      TS",MULTIMTY[IDXMUL],"1"
          PRINT     *INDENT,"  CALL      TK",MULTIMTY[IDXMUL],"1"
          PRINT     *INDENT,"  MOVE     KEY",*+,MULTIKLN[IDXMUL],",":
                               MULTIMTY[IDXMUL],"NXT"
          PRINT     *INDENT,"  CALL      ",CTLAB,"L000"
          PRINT     *INDENT,"  MOVE      ",MULTIMTY[IDXMUL],"NXT,KEY":
                                           MULTIKLN[IDXMUL]
          PRINT     *INDENT,"  CALL      TS",MULTIMTY[IDXMUL],"2"
          IF        MULTIBSQ[IDXMUL]=0
            PRINT     *INDENT,"  CALL      TP",MULTIMTY[IDXMUL],"2"
          ELSE
            PRINT     *INDENT,"  CALL      TK",MULTIMTY[IDXMUL],"2"
          ENDIF
          PRINT     *INDENT,"  CALL      ",DPLAB,"L000"
          PRINT     *INDENT,"  GOTO      ",DLLAB,"L005"
          PRINT     *INDENT,"ENDIF"
          GOTO      GSADI700
GSADI800  
          PRINT     DLLAB,"L100  MOVE      #"Invalid Selection. - #",DISPMSG"
          PRINT     *INDENT,"CALL      MESSAGE1"
          PRINT     *INDENT,"GOTO      ",DLLAB,"L005"

          PRINT     DLLAB,"L900  CALL      MESSAGE3"
          PRINT     *INDENT,"RETURN"
.
GSADI999  RETURN
.----------------------------------------------------------------------
. Unix Shell
.----------------------------------------------------------------------
UNIXS000  MOVE      ZERO,HLEF
          CALL      GETSCR00
          EXECUTE   SHELL,TASKID
          CALL      PUTSCR00
          RETURN

.--------------------------------------------
. Generate Batch load routine
.--------------------------------------------
GSLML000  MOVE      "11",INDENT
          PRINT     ".---------------------------------------------------------"
          PRINT     ". Load Batch Screen for : ",SCMADES
          PRINT     ".---------------------------------------------------------"
          PRINT     LMLAB,"L000"
          MOVE      "100",LABELNO3
.
          MOVE      ZERO,IDXMUL
GSLML100  COMPARE   IDXMUL,MULTIIDX
          GOTO      GSLML900 IF EQUAL
          ADD       ONE,IDXMUL
          PACK      KEY15,SCMAPID,SCMASID,MULTIFNO[IDXMUL]
          CALL      RDSCFL1
          BRANCH    OVRCD,GSLML100
          PRINT     ".---------------------------------------------------------"
          PRINT     ". Load for : ",SCFLFNO,SP1,SCFLDES
          PRINT     ".---------------------------------------------------------"
.
          MOVE      SCFLMTY,KEY5
          CALL      RDSYID1
          BRANCH    OVRCD,GSLML100
.
          MOVE      SCFLMTY,KEY4
          CALL      RDSYFI1
          BRANCH    OVRCD,GSLML100
          MOVE      SCFLMTY,KEY2
          CALL      RDSYSC1
          BRANCH    OVRCD,GSLML100
          UNPACK    SCFLMTY,KEY4,KEY1
          BRANCH    SYFITIO,GSLML110,GSLML120
.
          PACK      RSCALLID,RS,SYSCSYS,SYFIFIL,KEY1
          PACK      RKCALLID,RK,SYSCSYS,SYFIFIL,KEY1
          PACK      RDCALLID,RD,SYSCSYS,SYFIFIL,KEY1
          PACK      RPCALLID,RP,SYSCSYS,SYFIFIL,KEY1
          GOTO      GSLML130
GSLML110
          PACK      RSCALLID,RS,SYSCSYS,SYFIID3,KEY1
          PACK      RKCALLID,RK,SYSCSYS,SYFIID3,KEY1
          PACK      RDCALLID,RD,SYSCSYS,SYFIID3,KEY1
          PACK      RPCALLID,RP,SYSCSYS,SYFIID3,KEY1
          GOTO      GSLML130
GSLML120
          PACK      RSCALLID,RDS,SYFIID3,SYFIID4,KEY1
          PACK      RKCALLID,RDK,SYFIID3,SYFIID4,KEY1
          PACK      RDCALLID,RD,SYFIID3,SYFIID4,KEY1
          PACK      RPCALLID,RDP,SYFIID3,SYFIID4,KEY1
GSLML130
          PACK      KEY15,SCPRPID,SCMASID,SCFLFNO
          CALL      RDSCWP1
          BRANCH    OVRCD,GSLML100
.
          MOVE      ZERO,COUNT
          MOVE      ZERO,KEYLEN
          PACK      PACKKEY,SP70,SP70
          CLEAR     PACKKEY
GSLML200  ADD       ONE,COUNT
          LOAD      SEGMENT,COUNT,SYIDFL1,SYIDFL2,SYIDFL3,SYIDFL4:
                                  SYIDFL5,SYIDFL6,SYIDFL7,SYIDFL8
          MATCH     SP70,SEGMENT
          GOTO      GSLML300 IF EQUAL
.
          PACK      KEY8,SYIDSYS,SYIDFIL,SEGMENT
          CALL      RDSYFL2
          ADD       SYFLPHY,KEYLEN
          APPEND    COMMA,PACKKEY
          IF        SYFITIO=2
            IF        SYFLRED=1
              PACK      KEY8,ANSD,SYFLV4N
              APPEND    KEY8,PACKKEY
            ELSE
              APPEND    SYFLV4N,PACKKEY
            ENDIF
          ELSE
            IF        SYFLRED=1
              PACK      KEY8,ANSD,SYIDSYS,SYIDFIL,SEGMENT
              APPEND    KEY8,PACKKEY
            ELSE
              APPEND    KEY8,PACKKEY
            ENDIF
          ENDIF
          COMPARE   EIGHT,COUNT
          GOTO      GSLML200 IF NOT EQUAL
.
GSLML300  CLEAR     KEY8
          APPEND    "KEY",KEY8
          APPEND    KEYLEN,KEY8
          RESET     KEY8
          SQUEEZE   KEY8
          RESET     PACKKEY
          SQUEEZE   PACKKEY
.
          COMPARE  ZERO,SCWPBTY
          GOTO     GSLML400 IF NOT EQUAL
          PRINT    *INDENT,"UNPACK    SP70",*+,PACKKEY
          CALL     BTY0L000
          GOTO     GSLML100
.
GSLML400  PRINT    *INDENT,"UNPACK    SP70",*+,PACKKEY
          PERFORM  SCWPBTY,BTY1L000,BTY2L000,BTY2L000
          GOTO     GSLML100
.
GSLML900  PRINT    *INDENT,"RETURN"
          COMPARE   ZERO,MULTIIDX
          GOTO      GSLML999 IF EQUAL
.
          CALL      GSSML000   * Generate Add/Change Line
          CALL      GSBDP000   * Generate Display Page
          CALL      GSBFP000   * Generate First Page
          CALL      GSBLP000   * Generate Last Page
          CALL      GSBPP000   * Generate Previous Page
          CALL      GSBNP000   * Generate Next Page
          CALL      GSBCT000   * Generate Clear Items
          CALL      GSADI000   * Generate Clear Page
          CALL      GSBIO000   * Generate Batch Screen IO Routines
.
GSLML999  RETURN
.------------------------------------------------------------
. Maintenance Type Batch Load
.------------------------------------------------------------
BTY0L000  MOVE     "11",INDENT
          PRINT    *INDENT,"PACK      ",SCFLMTY,"FNM,ANST,",SCFLMTY,"NAM,PORT"
          PRINT    *INDENT,"REP       #" 0#",",SCFLMTY,"FNM"
          PRINT    *INDENT,"MOVE      ZERO,",SCFLMTY,"AFL"
          PRINT    *INDENT,"CLOSE     ",SCFLMTY,"FL2"
          PRINT    *INDENT,"MOVE      ZERO,OVRCD"
          PRINT    *INDENT,"TRAP      OVERCOND IF IO"
          PRINT    *INDENT,"OPEN      ",SCFLMTY,"FL1,",SCFLMTY,"FNM"
          PRINT    *INDENT,"TRAPCLR   IO"
          PRINT    *INDENT,"IF        OVRCD=0"
          PRINT    *INDENT,"  CLOSE     ",SCFLMTY,"FL1,DELETE"
          PRINT    *INDENT,"ENDIF"
          PRINT    *INDENT,"PACK      KEY80,SGENISB,",SCFLMTY,"FNM,SP1":
                           ",",SCFLMTY,"LEN,SP1,",SCFLMTY,"IDX"
          PRINT    *INDENT,"DISPLAY   *P1:3;"
          PRINT    *INDENT,"EXECUTE   KEY80,TASKID"
          PRINT    *INDENT,"OPEN      ",SCFLMTY,"FL1,",SCFLMTY,"FNM"
          PRINT    *INDENT,"OPEN      ",SCFLMTY,"FL2,",SCFLMTY,"FNM"
          
.
          PACK     DIM80,SP70,SP70
          PACK     DIM80,KEY8,COMMA,SCWPPAK
          SQUEEZE  DIM80
          PRINT    *INDENT,"PACK      ",*+,DIM80
          PACK     DIM80,SP70,SP70
          CLEAR    DIM80
          APPEND   KEY8,DIM80
          APPEND   COMMA,DIM80
          APPEND   "SAVKEY80",DIM80
          RESET    DIM80
          SQUEEZE  DIM80
          PRINT    *INDENT,"MOVE      ",*+,DIM80
          IF       SCWPMLN=99
            PRINT    *INDENT,"STRIP     SAVKEY80"
          ELSE
            MOVE     SCWPMLN,KEY2
            SQUEEZE  KEY2
            PRINT    *INDENT,"SETLPTR   SAVKEY80,",KEY2
          ENDIF
          PRINT    *INDENT,"CALL      ",RDCALLID
          PRINT    *INDENT,"IF        OVRCD=0"
          PRINT    *INDENT,"  CALL      ",RPCALLID
          PRINT    *INDENT,"ENDIF"
.
          PRINT    LMLAB,ANSL,LABELNO3
          PRINT    *INDENT,"CALL      ",RKCALLID
.
          ADD      "5",LABELNO3
          PRINT    *INDENT,"BRANCH    OVRCD,",LMLAB,ANSL,LABELNO3
.
          PACK     DIM80,SP70,SP70
          PACK     DIM80,KEY8,PACKKEY
          SQUEEZE  DIM80
          MOVE     DIM80,MULTIPAK[IDXMUL]  
          PRINT    *INDENT,"PACK      ",*+,DIM80
          IF       SCWPMLN<>0 
            PRINT    *INDENT,"MATCH     SAVKEY80,",KEY8 
            PRINT    *INDENT,"GOTO      ",LMLAB,ANSL,LABELNO3," IF NOT EQUAL"
          ENDIF
          SUB      "5",LABELNO3
.
          ASSIGN   SCWPMLN+1,F4
          MOVE     F4,KEY4
          SQUEEZE  KEY4
          MOVE     KEY4,MULTISLN[IDXMUL]  
          MOVE     KEY8,MULTIKEY[IDXMUL]  
          PRINT    *INDENT,"RESET     ",*+,KEY8,",",KEY4
.
          ASSIGN   KEYLEN-SCWPMLN,F4
          MOVE     F4,KEY4
          SQUEEZE  KEY4
          MOVE     KEY4,MULTIKLN[IDXMUL]  
.
          PRINT    *INDENT,"MOVE      ",*+,KEY8,",KEY",KEY4
          PRINT    *INDENT,"MOVE      SP70,SCTMROW"
          PRINT    *INDENT,"MOVE      SP70,SCTMCOL"
          PRINT    *INDENT,"CALL      TA",SCFLMTY,"2"
          PRINT    *INDENT,"IF        OVRCD=0"
          PRINT    *INDENT,"  CALL      TU",SCFLMTY,"2"
          PRINT    *INDENT,"ELSE"
          PRINT    *INDENT,"  CALL      TW",SCFLMTY,"2"
          PRINT    *INDENT,"ENDIF"
.
          PRINT    *INDENT,"GOTO     ",LMLAB,ANSL,LABELNO3
          ADD      "5",LABELNO3
          PRINT    LMLAB,ANSL,LABELNO3
.
          PRINT    *INDENT,"MOVE     SP70,KEY",KEY4
          PRINT    *INDENT,"CALL     TS",SCFLMTY,"2"
.
          ADD      "5",LABELNO3
          RETURN
.------------------------------------------------------------
. Enquiries Only Load Routine
.------------------------------------------------------------
BTY1L000  MOVE     "11",INDENT
.
          PACK     DIM80,SP70,SP70
          PACK     DIM80,PACKKEY
          SQUEEZE  DIM80
          MOVE     DIM80,MULTIPAK[IDXMUL]  
.
          ASSIGN   SCWPMLN+1,F4
          MOVE     F4,KEY4
          SQUEEZE  KEY4
          MOVE     KEY4,MULTISLN[IDXMUL]  
          MOVE     KEY8,MULTIKEY[IDXMUL]  
.
          ASSIGN   KEYLEN-SCWPMLN,F4
          MOVE     F4,KEY4
          SQUEEZE  KEY4
          MOVE     KEY4,MULTIKLN[IDXMUL]  
.
          PACK     DIM80,SP70,SP70
          PACK     DIM80,KEY8,COMMA,SCWPPAK
          SQUEEZE  DIM80
          PRINT    *INDENT,"PACK      ",*+,DIM80
          IF        !(SCWPMLN=0)
            PACK     DIM80,SP70,SP70
            CLEAR    DIM80
            APPEND   KEY8,DIM80
            APPEND   COMMA,DIM80
            APPEND   SCFLMTY,DIM80
            APPEND   "EKY",DIM80
            RESET    DIM80
            SQUEEZE  DIM80
            PRINT    *INDENT,"MOVE      ",*+,DIM80
.
..          CLEAR    DIM80
..          APPEND   SCFLMTY,DIM80
..          APPEND   "EKY",DIM80
..          APPEND   COMMA,DIM80
..          APPEND   SCFLMTY,DIM80
..          APPEND   "SKY",DIM80
..          RESET    DIM80
..          PRINT    *INDENT,"MOVE      ",*+,DIM80
.
            PRINT    *INDENT,"STRIP     ",SCFLMTY,"SKY"
            IF       SCWPMLN=99
              PRINT    *INDENT,"STRIP     ",SCFLMTY,"EKY"
            ELSE
              MOVE     SCWPMLN,KEY2
              SQUEEZE  KEY2
              PRINT    *INDENT,"SETLPTR   ",SCFLMTY,"EKY,",*+,KEY2
            ENDIF
            CLEAR    DIM80
            APPEND   SCFLMTY,DIM80
            APPEND   "EKY",DIM80
            APPEND   COMMA,DIM80
            APPEND   SCFLMTY,DIM80
            APPEND   "SKY",DIM80
            RESET    DIM80
            PRINT    *INDENT,"MOVE      ",*+,DIM80
          ENDIF
          PRINT    *INDENT,"CALL      ",RDCALLID
          PRINT    *INDENT,"IF        OVRCD=0"
          PRINT    *INDENT,"  CALL      ",RPCALLID
          PRINT    *INDENT,"ENDIF"
          ADD      "5",LABELNO3
.
          RETURN
.------------------------------------------------------------
. Selection Batch Load Routine
.------------------------------------------------------------
BTY2L000  MOVE     "11",INDENT
.
          PACK     DIM80,SP70,SP70
          PACK     DIM80,PACKKEY
          SQUEEZE  DIM80
          MOVE     DIM80,MULTIPAK[IDXMUL]  
.
          ASSIGN   SCWPMLN+1,F4
          MOVE     F4,KEY4
          SQUEEZE  KEY4
          MOVE     KEY4,MULTISLN[IDXMUL]  
          MOVE     KEY8,MULTIKEY[IDXMUL]  
.
          ASSIGN   KEYLEN-SCWPMLN,F4
          MOVE     F4,KEY4
          SQUEEZE  KEY4
          MOVE     KEY4,MULTIKLN[IDXMUL]  
.
          PACK     DIM80,SP70,SP70
          PACK     DIM80,KEY8,COMMA,SCWPPAK
          SQUEEZE  DIM80
.
          PRINT    *INDENT,"PACK      ",*+,DIM80
          IF        !(SCWPMLN=0)
            PACK     DIM80,SP70,SP70
            CLEAR    DIM80
            APPEND   KEY8,DIM80
            APPEND   COMMA,DIM80
            APPEND   SCFLMTY,DIM80
            APPEND   "EKY",DIM80
            RESET    DIM80
            SQUEEZE  DIM80
            PRINT    *INDENT,"MOVE      ",*+,DIM80
.
..          CLEAR    DIM80
..          APPEND   SCFLMTY,DIM80
..          APPEND   "EKY",DIM80
..          APPEND   COMMA,DIM80
..          APPEND   SCFLMTY,DIM80
..          APPEND   "SKY",DIM80
..          RESET    DIM80
..          PRINT    *INDENT,"MOVE      ",*+,DIM80
            PRINT    *INDENT,"STRIP     ",SCFLMTY,"SKY"
            IF       SCWPMLN=99
              PRINT    *INDENT,"STRIP     ",SCFLMTY,"EKY"
            ELSE
              MOVE     SCWPMLN,KEY2
              SQUEEZE  KEY2
              PRINT    *INDENT,"SETLPTR   ",SCFLMTY,"EKY,",*+,KEY2
            ENDIF
            CLEAR    DIM80
            APPEND   SCFLMTY,DIM80
            APPEND   "EKY",DIM80
            APPEND   COMMA,DIM80
            APPEND   SCFLMTY,DIM80
            APPEND   "SKY",DIM80
            RESET    DIM80
            PRINT    *INDENT,"MOVE      ",*+,DIM80
          ENDIF
.
          PRINT    *INDENT,"CALL      ",RDCALLID
          PRINT    *INDENT,"IF        OVRCD=0"
          PRINT    *INDENT,"  CALL      ",RPCALLID
          PRINT    *INDENT,"ENDIF"
          ADD      "5",LABELNO3
          RETURN
.
.--------------------------------------------
. Generate Batch Screen IO
.--------------------------------------------
GSBIO000  MOVE      "11",INDENT
          PRINT     ".---------------------------------------------------------"
          PRINT     ". Batch IO for Screen : ",SCMADES
          PRINT     ".---------------------------------------------------------"
.
          MOVE      ZERO,IDXMUL
GSBIO100  COMPARE   IDXMUL,MULTIIDX
          GOTO      GSBIO900 IF EQUAL
          ADD       ONE,IDXMUL
          PACK      KEY15,SCMAPID,SCMASID,MULTIFNO[IDXMUL]
          CALL      RDSCFL1
          BRANCH    OVRCD,GSBIO100
.
          PACK      KEY8,SCFLMTY,BIO
          CALL      RDSCDT1
          COMPARE   ZERO,OVRCD
          GOTO      GSBIO100 IF EQUAL
          CALL      WRSCDT1
.
          MOVE      SCFLMTY,KEY5
          CALL      RDSYID1
          BRANCH    OVRCD,GSBIO100
.
          MOVE      SCFLMTY,KEY4
          CALL      RDSYFI1
          BRANCH    OVRCD,GSBIO100
.
          MOVE      SCFLMTY,KEY2
          CALL      RDSYSC1
          BRANCH    OVRCD,GSBIO100
.
          PACK      KEY15,SCPRPID,SCMASID,SCFLFNO
          CALL      RDSCWP1
          BRANCH    OVRCD,GSBIO100
          COMPARE   ONE,SCWPBTY
          GOTO      GSBIO100 IF EQUAL
          COMPARE   ZERO,SCWPBTY      
          GOTO      GSBIO150 IF EQUAL
.
. Selection Type IO routines
.------------------------------
          PRINT     ".---------------------------------------------------------"
          PRINT     ". Batch IO for : ",SCFLFNO,SP1,SCFLDES
          PRINT     ".---------------------------------------------------------"
          PRINT     "UPT",SCFLMTY
          PRINT     *INDENT,"PACK      KEY5,SCPSROW,SCPSCOL"
          PRINT     *INDENT,"READ      ",SCFLMTY,"FL1,KEY5;ANS"
          PRINT     *INDENT,"IF        @OVER"
          PRINT     *INDENT,"  WRITE     ",SCFLMTY,"FL1,KEY5;SCPSROW,SCPSCOL,":
                    SCFLMTY,"MKY"
          PRINT     *INDENT,"ELSE"
          PRINT     *INDENT,"  UPDATE    ",SCFLMTY,"FL1;SCPSROW,SCPSCOL,":
                    SCFLMTY,"MKY"
          PRINT     *INDENT,"ENDIF"
          PRINT     *INDENT,"RETURN"
.
          PRINT     "RDT",SCFLMTY
          PRINT     *INDENT,"MOVE      ZERO,OVRCD"
          PRINT     *INDENT,"PACK      KEY5,SCPSROW,SCPSCOL"
          PRINT     *INDENT,"READ      ",SCFLMTY,"FL1,KEY5;SCPSROW,SCPSCOL,":
                    SCFLMTY,"MKY"
          PRINT     *INDENT,"GOTO      OVERCOND IF OVER"
          PRINT     *INDENT,"RETURN"
.
          PRINT     "RFT",SCFLMTY
          PRINT     *INDENT,"MOVE      ZERO,OVRCD"
          PRINT     *INDENT,"PACK      KEY5,SP70"
          PRINT     *INDENT,"READ      ",SCFLMTY,"FL1,KEY5;;"
          PRINT     *INDENT,"READKS    ",SCFLMTY,"FL1;SCPSROW,SCPSCOL,":
                    SCFLMTY,"MKY"
          PRINT     *INDENT,"GOTO      OVERCOND IF OVER"
          PRINT     *INDENT,"MATCH     SP70,",SCFLMTY,"MKY"
          PRINT     *INDENT,"GOTO      OVERCOND IF EQUAL"
          PRINT     *INDENT,"RETURN"
.
          GOTO      GSBIO100
.
GSBIO150  MOVE      ZERO,COUNT
          MOVE      ZERO,KEYLEN
.
GSBIO200  ADD       ONE,COUNT
          LOAD      SEGMENT,COUNT,SYIDFL1,SYIDFL2,SYIDFL3,SYIDFL4:
                                  SYIDFL5,SYIDFL6,SYIDFL7,SYIDFL8
          MATCH     SP70,SEGMENT
          GOTO      GSBIO300 IF EQUAL
.
          PACK      KEY8,SYIDSYS,SYIDFIL,SEGMENT
          CALL      RDSYFL2
          ADD       SYFLPHY,KEYLEN
          COMPARE   EIGHT,COUNT
          GOTO      GSBIO200 IF NOT EQUAL
GSBIO300  
          ASSIGN   KEYLEN-SCWPMLN,F4
          MOVE     F4,PKEYLEN
          SQUEEZE  PKEYLEN
.
          PRINT     ".---------------------------------------------------------"
          PRINT     ". Batch IO for : ",SCFLFNO,SP1,SCFLDES
          PRINT     ".---------------------------------------------------------"
.
          PRINT     "TS",SCFLMTY,"1  RESET     KEY5"
          PRINT     *INDENT,"READ      ",SCFLMTY,"FL1,KEY5;;"
          PRINT     *INDENT,"RETURN"
          PRINT     "."
.
          PRINT     "TS",SCFLMTY,"2  RESET     KEY",PKEYLEN
          PRINT     *INDENT,"READ      ",SCFLMTY,"FL2,KEY",*+,PKEYLEN,";;"
          PRINT     *INDENT,"RETURN"
          PRINT     "."
.
          PRINT     "TA",SCFLMTY,"2  RESET     KEY",PKEYLEN
          PRINT     *INDENT,"MOVE      ZERO,OVRCD"
          PRINT     *INDENT,"READ      ",SCFLMTY,"FL2,KEY",*+,PKEYLEN,";ANS"
          PRINT     *INDENT,"GOTO      OVERCOND IF OVER"
          PRINT     *INDENT,"RETURN"
          PRINT     "."
.
          PRINT     "TD",SCFLMTY,"1  RESET     KEY5"
          PRINT     *INDENT,"DELETE    ",SCFLMTY,"FL1,KEY5"
          PRINT     *INDENT,"RETURN"
          PRINT     "."
.
          PRINT     "TD",SCFLMTY,"2  RESET     KEY",*+,PKEYLEN
          PRINT     *INDENT,"DELETE    ",SCFLMTY,"FL2,KEY",*+,PKEYLEN
          PRINT     *INDENT,"RETURN"
          PRINT     "."
.
          PRINT     "TK",SCFLMTY,"1  MOVE      ZERO,OVRCD"
          PRINT     *INDENT,"READKS    ",SCFLMTY,"FL1;":
                    "SCTMROW,SCTMCOL,KEY",*+,PKEYLEN,":"
          CALL      PFLD0000
          PRINT     *INDENT,"GOTO      OVERCOND IF OVER"
          PRINT     *INDENT,"RETURN"
          PRINT     "."
.
          PRINT     "TK",SCFLMTY,"2  MOVE      ZERO,OVRCD"
          PRINT     *INDENT,"READKS    ",SCFLMTY,"FL2;":
                    "SCTMROW,SCTMCOL,KEY",*+,PKEYLEN,":"
          CALL      PFLD0000
          PRINT     *INDENT,"GOTO      OVERCOND IF OVER"
          PRINT     *INDENT,"RETURN"
          PRINT     "."
.
          PRINT     "TP",SCFLMTY,"1  MOVE      ZERO,OVRCD"
          PRINT     *INDENT,"READKP    ",SCFLMTY,"FL1;":
                    "SCTMROW,SCTMCOL,KEY",*+,PKEYLEN,":"
          CALL      PFLD0000
          PRINT     *INDENT,"GOTO      OVERCOND IF OVER"
          PRINT     *INDENT,"RETURN"
          PRINT     "."
.
          PRINT     "TP",SCFLMTY,"2  MOVE      ZERO,OVRCD"
          PRINT     *INDENT,"READKP    ",SCFLMTY,"FL2;":
                    "SCTMROW,SCTMCOL,KEY",*+,PKEYLEN,":"
          CALL      PFLD0000
          PRINT     *INDENT,"GOTO      OVERCOND IF OVER"
          PRINT     *INDENT,"RETURN"
          PRINT     "."
.
          PRINT     "TR",SCFLMTY,"1  RESET     KEY5"
          PRINT     *INDENT,"MOVE      ZERO,OVRCD"
          PRINT     *INDENT,"READ      ",SCFLMTY,"FL1,KEY5;":
                    "SCTMROW,SCTMCOL,KEY",*+,PKEYLEN,":"
          CALL      PFLD0000
          PRINT     *INDENT,"GOTO      OVERCOND IF OVER"
          PRINT     *INDENT,"RETURN"
          PRINT     "."
.
          PRINT     "TR",SCFLMTY,"2  RESET     KEY",PKEYLEN
          PRINT     *INDENT,"MOVE      ZERO,OVRCD"
          PRINT     *INDENT,"READ      ",SCFLMTY,"FL2,KEY",*+,PKEYLEN,";":
                    "SCTMROW,SCTMCOL,KEY",*+,PKEYLEN,":"
          CALL      PFLD0000
          PRINT     *INDENT,"GOTO      OVERCOND IF OVER"
          PRINT     *INDENT,"RETURN"
          PRINT     "."
.
          PRINT     "TU",SCFLMTY,"1  UPDATE    ",SCFLMTY,"FL1;":
                    "SCTMROW,SCTMCOL,KEY",*+,PKEYLEN,":"
          CALL      PFLD0000
          PRINT     *INDENT,"RETURN"
          PRINT     "."
.
          PRINT     "TU",SCFLMTY,"2"
          PRINT     *INDENT,"UPDATE    ",SCFLMTY,"FL2;":
                    "SCTMROW,SCTMCOL,KEY",*+,PKEYLEN,":"
          CALL      PFLD0000
          PRINT     *INDENT,"RETURN"
          PRINT     "."
.
          PRINT     "TW",SCFLMTY,"2  RESET     KEY",PKEYLEN
          PRINT     *INDENT,"WRITE     ",SCFLMTY,"FL2,KEY",*+,PKEYLEN,";":
                    "SCTMROW,SCTMCOL,KEY",*+,PKEYLEN,":"
          CALL      PFLD0000
          PRINT     *INDENT,"RETURN"
          GOTO      GSBIO100
.
GSBIO900  RETURN
.----------------------------------------------------------------------
.PFLD0000 - Print Field List
.----------------------------------------------------------------------
PFLD0000  PACK      KEY8,SYFISYS,SYFIFIL,SP70
          PACK      DIM80,SP70,SP70
          CLEAR     DIM80
          APPEND    "                        ",DIM80
          MOVE      ZERO,COUNT
          MOVE      ONE,FIRST
          CALL      RSSYFL1
PFLD1000  CALL      RKSYFL1
          BRANCH    OVRCD,PFLD9000
          MATCH     SYFISYS,SYFLSYS
          GOTO      PFLD9000 IF NOT EQUAL
          MATCH     SYFIFIL,SYFLFIL
          GOTO      PFLD9000 IF NOT EQUAL
          COMPARE   TWO,SYFITIO
          GOTO      PFLD1050 IF NOT EQUAL
.
          PACK      DIM8,SYFLV4N
          COMPARE   ONE,SYFLRED
          GOTO      PFLD1100 IF NOT EQUAL
          PACK      DIM8,ANSD,SYFLV4N
          GOTO      PFLD1100
.
PFLD1050  PACK      DIM8,SYFLSYS,SYFLFIL,SYFLFLD
          COMPARE   ONE,SYFLRED
          GOTO      PFLD1100 IF NOT EQUAL
          PACK      DIM8,ANSD,SYFLSYS,SYFLFIL,SYFLFLD
.
PFLD1100  ADD       ONE,COUNT
          COMPARE   SIX,COUNT
          GOTO      PFLD2000 IF EQUAL
.
          BRANCH    FIRST,PFLD1500
          APPEND    ",",DIM80
          APPEND    DIM8,DIM80
          CALL      SEND0000
          GOTO      PFLD1000
.
PFLD1500  MOVE      ZERO,FIRST
          APPEND    DIM8,DIM80
          CALL      SEND0000
          GOTO      PFLD1000
.
PFLD2000  APPEND    COLON,DIM80
          RESET     DIM80
          PRINT     *+,DIM80
.
          PACK      DIM80,SP70,SP70
          CLEAR     DIM80
          APPEND    "                        ",DIM80
          APPEND    DIM8,DIM80
          CALL      SEND0000
          MOVE      ZERO,COUNT
          GOTO      PFLD1000
         
PFLD9000  RESET     DIM80
          PRINT     *+,DIM80
          RETURN
.
SEND0000  RESET     DIM80,80
SEND1000  
          CMATCH    SP1,DIM80
          GOTO      SEND2000 IF NOT EQUAL
.
          BUMP      DIM80,-1
          GOTO      SEND1000 IF NOT EOS
.
          CLEAR     DIM80
          GOTO      SEND9999
SEND2000  
SEND9999  RETURN
.
.---------------------------------------------------------
. Generate Multi Item On Screen Change Routine
.---------------------------------------------------------
GSSML000 
          MOVE      ZERO,IDXMUL
GSSML010  COMPARE   IDXMUL,MULTIIDX
          GOTO      GSSML999 IF EQUAL
          ADD       ONE,IDXMUL
          COMPARE   ZERO,MULTIBTY[IDXMUL]
          GOTO      GSSML010 IF NOT EQUAL
.
          PRINT     ".---------------------------------------------------------"
          PRINT     ". Batch Item Selected Screen : ",SCMADES
          PRINT     ".---------------------------------------------------------"
          PRINT     SMLAB,"L000"
          PRINT     *INDENT,"MOVE      ZERO,STDGSFLG"
          PRINT     *INDENT,"MOVE      SCPSITM,FIRSTITM"
          PRINT     *INDENT,"MOVE      SCPSROW,SCTMROW"
          PRINT     *INDENT,"MOVE      SCPSCOL,SCTMCOL"
          PRINT     *INDENT,"PACK      KEY15,PRGID,SCRID,SCPSROW,SCPSCOL"
          PRINT     *INDENT,"MOVE      KEY15,SKSCPS15"
          PRINT     *INDENT,"CALL      RDSCPS1"
          PRINT     *INDENT,"COMPARE   ZERO,ACCEPT"
          PRINT     *INDENT,"GOTO      ",SMLAB,"L010 IF EQUAL"
.
          PRINT     SMLAB,"L005"
          PRINT     *INDENT,"MOVE      SCPSROW,CVERT"
          PRINT     *INDENT,"MOVE      SCPSCOL,CCOL"
          PRINT     *INDENT,"MOVE      SCPSITM,FIELDNO"
          PRINT     *INDENT,"MOVE      ONE,STDGSFLG"
.
          PACK      DEFLABEL,SMLAB,INITL010
          PACK      BRALABEL,SMLAB,ANSL
          MOVE      FIVE,BRATYPE
          CALL      GBRA0000    * Generate Branch
.
          PRINT     SMLAB,"L006"
.
          PRINT     *INDENT,"CALL      RKSCPS1"
          PRINT     *INDENT,"BRANCH    OVRCD,",SMLAB,"L007"
          PRINT     *INDENT,"MATCH     PRGID,SCPSPID"
          PRINT     *INDENT,"GOTO      ",SMLAB,"L007 IF NOT EQUAL"
          PRINT     *INDENT,"MATCH     SCRID,SCPSSID"
          PRINT     *INDENT,"GOTO      ",SMLAB,"L007 IF NOT EQUAL"
          PRINT     *INDENT,"MATCH     FIRSTITM,SCPSITM"
          PRINT     *INDENT,"GOTO      ",SMLAB,"L007 IF EQUAL"
          PRINT     *INDENT,"MATCH     NAMSSFFI,SCPSMTY"
          PRINT     *INDENT,"GOTO      ",SMLAB,"L006 IF NOT EQUAL"
          PRINT     *INDENT,"GOTO      ",SMLAB,"L005"
.
          PRINT     SMLAB,"L007"
          PRINT     *INDENT,"MOVE      ZERO,STDGSFLG"
          PRINT     *INDENT,"MOVE      SKSCPS15,KEY15"
          PRINT     *INDENT,"CALL      RDSCPS1"
.
          PRINT     SMLAB,"L010"
          PRINT     *INDENT,"BRANCH    STDGSFLG,",SMLAB,"L006"
          PRINT     *INDENT,"CALL      RKSCPS1"
          PRINT     *INDENT,"BRANCH    OVRCD,",SMLAB,"L900"
          PRINT     *INDENT,"MATCH     PRGID,SCPSPID"
          PRINT     *INDENT,"GOTO      ",SMLAB,"L900 IF NOT EQUAL"
          PRINT     *INDENT,"MATCH     SCRID,SCPSSID"
          PRINT     *INDENT,"GOTO      ",SMLAB,"L900 IF NOT EQUAL"
          PRINT     *INDENT,"MATCH     FIRSTITM,SCPSITM"
          PRINT     *INDENT,"GOTO      ",SMLAB,"L900 IF EQUAL"
          PRINT     *INDENT,"MATCH     NAMSSFFI,SCPSMTY"
          PRINT     *INDENT,"GOTO      ",SMLAB,"L010 IF NOT EQUAL"
.
          PRINT     *INDENT,"MOVE      SCPSROW,CVERT"
          PRINT     *INDENT,"MOVE      SCPSCOL,CCOL"
          PRINT     *INDENT,"MOVE      SCPSITM,FIELDNO"
.
          PACK      DEFLABEL,SMLAB,INITL010
          PACK      BRALABEL,SMLAB,ANSL
          MOVE      FOUR,BRATYPE
          CALL      GBRA0000    * Generate Branch
.
          PRINT     *INDENT,"GOTO      ",SMLAB,"L010"
.
          MOVE      "100",LABELNO3
          PACK      KEY15,SCPRPID,SCMASID,SP70
          CALL      RSSCFL1
GSSML300  CALL      RKSCFL1
          BRANCH    OVRCD,GSSML400
          MATCH     SCPRPID,SCFLPID
          GOTO      GSSML400 IF NOT EQUAL
          MATCH     SCMASID,SCFLSID
          GOTO      GSSML400 IF NOT EQUAL
          COMPARE   ZERO,SCFLMUL
          GOTO      GSSML300 IF EQUAL
.
          IF        SCFLTYP>1
            GOTO      GSSML300
          ENDIF
.
          ADD       "1",LABELNO3
          PRINT     "."
          PRINT     SMLAB,ANSL,LABELNO3
.
          MOVE      ZERO,F2
GSSML310  ADD       ONE,F2
          MATCH     SCFLMTY,MULTIMTY[F2]
          GOTO      GSSML315 IF EQUAL
          COMPARE   MULTIIDX,F2
          GOTO      GSSML310 IF NOT EQUAL
.
          MOVE      "11",INDENT
          PRINT     *INDENT,"GOTO     ",SMLAB,"L010"
          GOTO      GSSML300
          
.
GSSML315  IF        MULTIBTY[F2]>0
            MOVE      "11",INDENT
            PRINT     *INDENT,"GOTO     ",SMLAB,"L010"
            GOTO      GSSML300
          ENDIF
.
          PACK      SAVKEY15,SCFLPID,SCFLSID,SCFLFNO
....
.... Display Before with Blanks Destroys the Keyin Position ??????????
....          CALL      DBEF0000  * Before Keyin Display Afters with Blank
....
          PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO
          CALL      RDSCTA1                 * Read in Tags
          IF        OVRCD=1
            MOVE      SP70,SCTACBK
            MOVE      SP70,SCTACAK
            MOVE      SP70,SCTACBD
            MOVE      SP70,SCTACAD
          ENDIF
.
          CALL      PBEFK000  * Before Keyin
.
          MOVE      "11",INDENT
.
          MOVE      ZERO,IDXMUL
          MOVE      ZERO,EXIT
GSSML330  COMPARE   MULTIIDX,IDXMUL
          GOTO      GSSML340 IF EQUAL
          ADD       ONE,IDXMUL
          MATCH     MULTIFNO[IDXMUL],SCFLFNO
          GOTO      GSSML330 IF NOT EQUAL
          MOVE      ONE,EXIT
GSSML340  
          PACK      ENDLABEL,SMLAB,INITL990
          IF        SCFLTYP=0
            IF        EXIT=0
              PACK      DEFLABEL,SMLAB,ANSL,LABELNO3
            ELSE
              PRINT     *INDENT,"MOVE     ZERO,",MULTIMTY[IDXMUL],"AFL"
              MOVE      ENDLABEL,DEFLABEL
            ENDIF
            CALL      PKEY0000     * Keyin
          ELSE
            CALL      SKEY0000
          ENDIF
.
          COMPARE   ZERO,SCFLTYP
          GOTO      GSSML390 IF NOT EQUAL
.
          MOVE      SAVKEY15,KEY15
          CALL      RDSCFL1
          CALL      RKSCFL1
          BRANCH    OVRCD,GSSML360
          MATCH     SCMAPID,SCFLPID
          GOTO      GSSML360 IF NOT EQUAL
          MATCH     SCMASID,SCFLSID
          GOTO      GSSML360 IF NOT EQUAL
          COMPARE   ONE,SCFLMUL
          GOTO      GSSML360 IF NOT EQUAL
          COMPARE   ZERO,SCFLTYP
          GOTO      GSSML390 IF EQUAL            * There are more Multiples
.
. If Last Key Field Then Pack key and check if on file.
.
GSSML360  
          MOVE      SAVKEY15,KEY15
          CALL      RDSCFL1
          MOVE      ZERO,F2
GSSML370  ADD       ONE,F2
          MATCH     SCFLMTY,MULTIMTY[F2]
          GOTO      GSSML380 IF EQUAL
          COMPARE   MULTIIDX,F2
          GOTO      GSSML370 IF NOT EQUAL
          GOTO      GSSML390
.
GSSML380 
          SQUEEZE   MULTIPAK[F2]   
          SQUEEZE   MULTISLN[F2]  
          SQUEEZE   MULTIKEY[F2]  
          SQUEEZE   MULTIKLN[F2]  
          PRINT     *INDENT,"PACK     ",MULTIPAK[F2]   
          PRINT     *INDENT,"RESET    ",*+,MULTIKEY[F2],",",MULTISLN[F2]  
          PRINT     *INDENT,"MOVE     ",*+,MULTIKEY[F2],",KEY",MULTIKLN[F2]
          PRINT     *INDENT,"CALL      TA",SCFLMTY,"2"
          PRINT     *INDENT,"IF        OVRCD=0"
          PRINT     *INDENT,"  MOVE      #"Record Already On File - #",DISPMSG"
          PRINT     *INDENT,"  CALL      MESSAGE1"
          PRINT     *INDENT,"  GOTO      ",SMLAB,ANSL,LABELNO3
          PRINT     *INDENT,"ENDIF"
.
GSSML390 
          MOVE      SAVKEY15,KEY15
          CALL      RDSCFL1
          CALL      PAFTK000  * After Keyin
          CALL      PBEFD000  * Before Display
          CALL      PDIS0000  * Display
          CALL      PAFTD000  * After Display
          MOVE      TWO,BATCHFLG
          CALL      DCHK0000  * Display After Fields
          MOVE      ZERO,BATCHFLG
.
          MOVE      SAVKEY15,KEY15
          CALL      RDSCFL1
          MOVE      "11",INDENT
          PRINT     *INDENT,"GOTO     ",SMLAB,"L010"
          GOTO      GSSML300
.
GSSML400 
          PRINT     SMLAB,"L900"
          MOVE      ZERO,F2
GSSML410  ADD       ONE,F2
          SQUEEZE   MULTIPAK[F2]   
          SQUEEZE   MULTISLN[F2]  
          SQUEEZE   MULTIKEY[F2]  
          SQUEEZE   MULTIKLN[F2]  
          PRINT     *INDENT,"MATCH    #"",MULTIMTY[F2],"#",NAMSSFFI"
          PRINT     *INDENT,"IF       @EQUAL"
          PRINT     *INDENT,"  PACK     ",*+,MULTIPAK[F2]   
          PRINT     *INDENT,"  RESET    ",*+,MULTIKEY[F2],",",MULTISLN[F2]  
          PRINT     *INDENT,"  MOVE     ",*+,MULTIKEY[F2],",KEY",MULTIKLN[F2]
          PRINT     *INDENT,"  CALL      TA",MULTIMTY[F2],"2"
          PRINT     *INDENT,"  IF        OVRCD=0"
          PRINT     *INDENT,"    CALL      TU",MULTIMTY[F2],"2"
          PRINT     *INDENT,"  ELSE"
          PRINT     *INDENT,"    CALL      TW",MULTIMTY[F2],"2"
          PRINT     *INDENT,"  ENDIF"
          PRINT     *INDENT,"  GOTO      ",SMLAB,"L999"
          PRINT     *INDENT,"ENDIF"
          COMPARE   MULTIIDX,F2
          GOTO      GSSML410 IF NOT EQUAL
.
          PRINT     *INDENT,"GOTO      ",SMLAB,"L999"
          PRINT     SMLAB,"L990"
          MOVE      ZERO,F2
GSSML510  ADD       ONE,F2
          PRINT     *INDENT,"MATCH    #"",MULTIMTY[F2],"#",NAMSSFFI"
          PRINT     *INDENT,"IF       @EQUAL"
          PRINT     *INDENT,"  MOVE     ONE,",MULTIMTY[F2],"AFL"
          PRINT     *INDENT,"ENDIF"
          COMPARE   MULTIIDX,F2
          GOTO      GSSML510 IF NOT EQUAL
          PRINT     SMLAB,"L999"
          PRINT     *INDENT,"RETURN"
GSSML999 
          RETURN
.------------------------------------------------------------
. Generate Display Page for Batch Screen
.------------------------------------------------------------
GSBDP000
          PRINT     ".--------------------------------------------------------"
          PRINT     ". Display Current Page of Multi Items"
          PRINT     ".--------------------------------------------------------"
          PRINT    DPLAB,"L000"
.
          MOVE      ZERO,IDXMUL
GSBDP010  COMPARE   MULTIIDX,IDXMUL
          GOTO      GSBDP020 IF EQUAL
          ADD       ONE,IDXMUL
          PRINT    *INDENT,"MOVE     ZERO,",MULTIMTY[IDXMUL],"CNT"
          PRINT    *INDENT,"MOVE     ZERO,",MULTIMTY[IDXMUL],"END"
          GOTO      GSBDP010
GSBDP020
          PRINT    *INDENT,"PACK     KEY15,PRGID,SCRID,SP70"
          PRINT    *INDENT,"CALL     RSSCPS1"
.
          PRINT    DPLAB,"L010"
          PRINT    *INDENT,"CALL     RKSCPS1"
          PRINT    *INDENT,"BRANCH   OVRCD,",DPLAB,"L600"
          PRINT    *INDENT,"MATCH    PRGID,SCPSPID"
          PRINT    *INDENT,"GOTO     ",DPLAB,"L600 IF NOT EQUAL"
          PRINT    *INDENT,"MATCH    SCRID,SCPSSID"
          PRINT    *INDENT,"GOTO     ",DPLAB,"L600 IF NOT EQUAL"
          PRINT    *INDENT,"MATCH    NAMSSFFI,SCPSMTY"
          PRINT    *INDENT,"GOTO     ",DPLAB,"L010 IF NOT EQUAL"
          PRINT    *INDENT,"MOVE     SCPSITM,FIELDNO"
.
          PACK     DEFLABEL,DPLAB,INITL010
          PACK     BRALABEL,DPLAB,ANSL
          MOVE     SIX,BRATYPE
          CALL     GBRA0000    * Generate Branch
.
          PRINT    *INDENT,"GOTO      ",DPLAB,"L010"
.
          MOVE      "100",LABELNO3
          PACK      KEY15,SCMAPID,SCMASID,SP70
          CALL      RSSCFL1
GSBDP100
          CALL      RKSCFL1
          BRANCH    OVRCD,GSBDP300
          MATCH     SCMAPID,SCFLPID
          GOTO      GSBDP300 IF NOT EQUAL 
          MATCH     SCMASID,SCFLSID
          GOTO      GSBDP300 IF NOT EQUAL 
          COMPARE   ONE,SCFLMUL
          GOTO      GSBDP100 IF NOT EQUAL
          IF        SCFLTYP>2
            GOTO      GSBDP100
          ENDIF
          ADD       "1",LABELNO3
          PRINT     "."
          PRINT     DPLAB,ANSL,LABELNO3
.
          MOVE      ZERO,IDXMUL
GSBDP110  COMPARE   MULTIIDX,IDXMUL
          GOTO      GSBDP200 IF EQUAL
          ADD       ONE,IDXMUL
          MATCH     MULTIFNO[IDXMUL],SCFLFNO
          GOTO      GSBDP110 IF NOT EQUAL
.
.         Matches a Key Control Field for Batch Screen
.
          BRANCH    MULTIBTY[IDXMUL],GSBDP120,GSBDP120,GSBDP120
          CALL      GDP0L000 * Maintenance Type Batch 
          GOTO      GSBDP100
GSBDP120  
          CALL      GDP1L000 * Enquiries/Selection Type Batch
          GOTO      GSBDP100
.
.  Normal Item Display
.---------------------
GSBDP200   
          MOVE      "11",INDENT
          PRINT     *INDENT,"IF        ",SCFLMTY,"END=0"
          MOVE      "13",INDENT
.
          CALL      DPBDP000      * Display Fields, Call Before Etc
.
          MOVE      "11",INDENT
          PRINT     *INDENT,"ELSE"
          PRINT     *INDENT,"  PACK      VAR,SP70,SP70"
          PRINT     *INDENT,"  CALL      DISPITEM"
          PRINT     *INDENT,"ENDIF"
          PRINT     *INDENT,"GOTO      ",DPLAB,"L010"
          GOTO      GSBDP100
.
GSBDP300 
          MOVE      "11",INDENT
          CALL      GDABT000
          PRINT     DPLAB,"L999"
          PRINT     *INDENT,"RETURN"
.
          RETURN
.----------------------------------------
. Mantenance Batch Key Field
.----------------------------------------
GDP0L000  MOVE      "11",INDENT
          PRINT     *INDENT,"IF        ",SCFLMTY,"END=0"
          IF        MULTIBSQ[IDXMUL]=0
             PRINT     *INDENT,"  CALL      TK",MULTIMTY[IDXMUL],"2"
          ELSE
             PRINT     *INDENT,"  CALL      TP",MULTIMTY[IDXMUL],"2"
          ENDIF
          PRINT     *INDENT,"  IF        OVRCD=1"
          PRINT     *INDENT,"    MOVE      ONE,",SCFLMTY,"END"
          PRINT     *INDENT,"  ELSE"
          PRINT     *INDENT,"    MOVE      ZERO,",SCFLMTY,"END"
          PRINT     *INDENT,"    MOVE      SCPSROW,SCTMROW"
          PRINT     *INDENT,"    MOVE      SCPSCOL,SCTMCOL"
          PRINT     *INDENT,"    CALL      TU",MULTIMTY[IDXMUL],"2"
          MOVE      "15",INDENT
.
          CALL      DPBDP000      * Display Fields, Call Before Etc
.
          MOVE      "11",INDENT
          PRINT     *INDENT,"  ENDIF"
          PRINT     *INDENT,"ENDIF"
          PRINT     *INDENT,"IF        ",SCFLMTY,"END=1"
          PRINT     *INDENT,"  PACK      VAR,SP70,SP70"
          PRINT     *INDENT,"  CALL      DISPITEM"
          PRINT     *INDENT,"ENDIF"
          PRINT     *INDENT,"GOTO      ",DPLAB,"L010"
          RETURN
.----------------------------------------
. Enquiries/Selection Batch Key Field
.----------------------------------------
GDP1L000  MOVE      "11",INDENT
          IF        MULTIBTY[IDXMUL]=2|MULTIBTY[IDXMUL]=3
            PRINT     *INDENT,"PACK      ",SCFLMTY,"MKY,SP70,SP70"
            PRINT     *INDENT,"CALL      UPT",SCFLMTY
          ENDIF
          PRINT     *INDENT,"IF        ",SCFLMTY,"END=0"
          IF        MULTIBSQ[IDXMUL]=0
             PRINT     *INDENT,"  CALL      RK",MULTITIO[IDXMUL]
          ELSE
             PRINT     *INDENT,"  CALL      RP",MULTITIO[IDXMUL]
          ENDIF
          PRINT     *INDENT,"  IF        OVRCD=0"
          SQUEEZE   MULTIPAK[IDXMUL]
          PRINT     *INDENT,"    PACK      ",SCFLMTY,"MKY",MULTIPAK[IDXMUL]
          IF        !(MULTIMLN[IDXMUL]=0)
            PRINT     *INDENT,"    MATCH     ",SCFLMTY,"EKY,",SCFLMTY,"MKY"
            PRINT     *INDENT,"    IF        @EQUAL"
          ENDIF
          PRINT     *INDENT,"      MOVE      ZERO,",SCFLMTY,"END"
          PRINT     *INDENT,"      ADD       ONE,",SCFLMTY,"CNT"
          IF        MULTIBTY[IDXMUL]=2|MULTIBTY[IDXMUL]=3
            PRINT     *INDENT,"      CALL      UPT",MULTIMTY[IDXMUL]
          ENDIF
          MOVE      "17",INDENT
.
          CALL      DPBDP000      * Display Fields, Call Before Etc
.
          MOVE      "11",INDENT
          IF        !(SCWPMLN=0)
            PRINT     *INDENT,"    ELSE"
            PRINT     *INDENT,"      MOVE      ONE,",SCFLMTY,"END"
            PRINT     *INDENT,"    ENDIF"
          ENDIF
          PRINT     *INDENT,"  ELSE"
          PRINT     *INDENT,"    MOVE      ONE,",SCFLMTY,"END"
          PRINT     *INDENT,"  ENDIF"
          PRINT     *INDENT,"ENDIF"
          PRINT     *INDENT,"IF        ",SCFLMTY,"END=1"
          PRINT     *INDENT,"  PACK      VAR,SP70,SP70"
          PRINT     *INDENT,"  CALL      DISPITEM"
          PRINT     *INDENT,"ENDIF"
          PRINT     *INDENT,"GOTO      ",DPLAB,"L010"
          RETURN
.------------------------------------------------------------
. Diaplay a Multi line Item. Call By GSBDP000
.------------------------------------------------------------
DPBDP000  PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO
          CALL      RDSCTA1                 * Read in Tags
          IF        OVRCD=1
            MOVE      SP70,SCTACBK
            MOVE      SP70,SCTACAK
            MOVE      SP70,SCTACBD
            MOVE      SP70,SCTACAD
          ENDIF
          CALL      PBEFD000  * Call Before Display
          CALL      PDIS0000  * Display Field
          CALL      PAFTD000  * Call After Display
          PACK      KEY15,SCFLPID,SCFLSID,SCFLFNO
          CALL      RDSCFL1                 * Read in Tags
          RETURN
.
.------------------------------------------------------------ 
. Generate First Batch Page 
.------------------------------------------------------------ 
GSBFP000  PRINT     ".--------------------------------------------------------"
          PRINT     ". Display First Page of Multi Items"
          PRINT     ".--------------------------------------------------------"
          PRINT     FPLAB,"L000"
.
          MOVE      "100",LABELNO3
          MOVE      ZERO,IDXMUL
GSBFP100  COMPARE   IDXMUL,MULTIIDX
          GOTO      GSBFP900 IF EQUAL
          ADD       ONE,IDXMUL
.
          ADD       "5",LABELNO3
          IF       MULTIBTY[IDXMUL]=0
            PRINT     "."
            PRINT     *INDENT,"CALL     ",CTLAB,"L000"
            PRINT     *INDENT,"MATCH    #"",MULTIMTY[IDXMUL],"#",NAMSSFFI"
            PRINT     *INDENT,"GOTO     ",FPLAB,ANSL,LABELNO3," IF NOT EQUAL"
            IF        MULTIBSQ[IDXMUL]=0
              PRINT     *INDENT,"MOVE     SP70,KEY",MULTIKLN[IDXMUL]
            ELSE
              PRINT     *INDENT,"MOVE     Z70,KEY",MULTIKLN[IDXMUL]
            ENDIF
            PRINT     *INDENT,"CALL     TS",MULTIMTY[IDXMUL],"2 * Start"
            PRINT     *INDENT,"CALL     ",DPLAB,"L000"
            PRINT     *INDENT,"GOTO     ",FPLAB,"L999"
          ELSE
            PRINT     "."
            PRINT     *INDENT,"MATCH    #"",MULTIMTY[IDXMUL],"#",NAMSSFFI"
            PRINT     *INDENT,"GOTO     ",FPLAB,ANSL,LABELNO3," IF NOT EQUAL"
            IF        MULTIBSQ[IDXMUL]=0
              IF        MULTIMLN[IDXMUL]=0
                  PRINT     *INDENT,"PACK     ",*+,MULTIKEY[IDXMUL],",SP70"
              ELSE
                  PRINT     *INDENT,"PACK     ",*+,MULTIKEY[IDXMUL],",":
                            MULTIMTY[IDXMUL],"SKY,SP70"
              ENDIF
            ELSE
              IF        MULTIMLN[IDXMUL]=0
                PRINT     *INDENT,"PACK     ",*+,MULTIKEY[IDXMUL],",Z70"
              ELSE
                PRINT     *INDENT,"PACK     ",*+,MULTIKEY[IDXMUL],",":
                          MULTIMTY[IDXMUL],"SKY,Z70"
              ENDIF
            ENDIF
            PRINT     *INDENT,"CALL     RD",MULTITIO[IDXMUL]," * Start"
            PRINT     *INDENT,"IF       OVRCD=0"
            PRINT     *INDENT,"  CALL     RP",MULTITIO[IDXMUL]," * Start"
            PRINT     *INDENT,"ENDIF"
            PRINT     *INDENT,"CALL     ",DPLAB,"L000"
            PRINT     *INDENT,"GOTO     ",FPLAB,"L999"
          ENDIF
          PRINT     FPLAB,ANSL,LABELNO3
          GOTO      GSBFP100
GSBFP900 
          PRINT     FPLAB,"L999  RETURN"
.
GSBFP999  RETURN
.
.------------------------------------------------------------
. Generate Next Batch Page
.------------------------------------------------------------
GSBLP000
          PRINT     ".--------------------------------------------------------"
          PRINT     ". Display Last Page of Multi Items"
          PRINT     ".--------------------------------------------------------"
          PRINT     LPLAB,"L000"
          MOVE      "100",LABELNO3
          MOVE      ZERO,IDXMUL
GSBLP100  COMPARE   IDXMUL,MULTIIDX
          GOTO      GSBLP900 IF EQUAL
          ADD       ONE,IDXMUL
          ADD       "5",LABELNO3
          PRINT     "."
          IF        MULTIBTY[IDXMUL]=0
            PRINT     *INDENT,"CALL     ",CTLAB,"L000"
          ENDIF
          PRINT     *INDENT,"MATCH    #"",MULTIMTY[IDXMUL],"#",NAMSSFFI"
          PRINT     *INDENT,"GOTO     ",LPLAB,ANSL,LABELNO3," IF NOT EQUAL"
          IF        MULTIBTY[IDXMUL]=0
            IF        MULTIBSQ[IDXMUL]=0
              PRINT     *INDENT,"PACK     KEY",*+,MULTIKLN[IDXMUL],",Z70"
              PRINT     *INDENT,"CALL     TS",MULTIMTY[IDXMUL],"2"
              PRINT     *INDENT,"IF       OVRCD=1"
              PRINT     *INDENT,"  CALL     TP",MULTIMTY[IDXMUL],"2 * End"
              PRINT     *INDENT,"ENDIF"
            ELSE
              PRINT     *INDENT,"PACK     KEY",*+,MULTIKLN[IDXMUL],",SP70"
              PRINT     *INDENT,"CALL     TS",MULTIMTY[IDXMUL],"2"
              PRINT     *INDENT,"IF       OVRCD=1"
              PRINT     *INDENT,"  CALL     TK",MULTIMTY[IDXMUL],"2 * End"
              PRINT     *INDENT,"ENDIF"
            ENDIF
            PRINT     *INDENT,"MOVE     ZERO,SECTOR"
            PRINT     *INDENT,"WHILE    SECTOR<",MULTIMTY[IDXMUL],"SNO"
            IF        MULTIBSQ[IDXMUL]=0
              PRINT     *INDENT,"  CALL     TP",MULTIMTY[IDXMUL],"2"
            ELSE
              PRINT     *INDENT,"  CALL     TK",MULTIMTY[IDXMUL],"2"
            ENDIF
          ELSE
            IF        MULTIBSQ[IDXMUL]=0
              IF        MULTIMLN[IDXMUL]=0
                PRINT     *INDENT,"PACK     ",*+,MULTIKEY[IDXMUL],",Z70"
              ELSE
                PRINT     *INDENT,"PACK     ",*+,MULTIKEY[IDXMUL],",":
                          MULTIMTY[IDXMUL],"SKY,Z70"
              ENDIF
              PRINT     *INDENT,"CALL     RS",MULTITIO[IDXMUL]," * End"
              PRINT     *INDENT,"IF       OVRCD=1"
              PRINT     *INDENT,"  CALL     RP",MULTITIO[IDXMUL]
              PRINT     *INDENT,"ENDIF"
            ELSE
              IF        MULTIMLN[IDXMUL]=0
                PRINT     *INDENT,"PACK     ",*+,MULTIKEY[IDXMUL],",SP70"
              ELSE
                PRINT     *INDENT,"PACK     ",*+,MULTIKEY[IDXMUL],",":
                          MULTIMTY[IDXMUL],"SKY,SP70"
              ENDIF
              PRINT     *INDENT,"CALL     RS",MULTITIO[IDXMUL]," * End"
              PRINT     *INDENT,"IF       OVRCD=1"
              PRINT     *INDENT,"  CALL     RK",MULTITIO[IDXMUL]
              PRINT     *INDENT,"ENDIF"
            ENDIF
            PRINT     *INDENT,"MOVE     ZERO,SECTOR"
            PRINT     *INDENT,"WHILE    SECTOR<",MULTIMTY[IDXMUL],"SNO"
            IF        MULTIBSQ[IDXMUL]=0
              PRINT     *INDENT,"  CALL     RP",MULTITIO[IDXMUL]
            ELSE
              PRINT     *INDENT,"  CALL     RK",MULTITIO[IDXMUL]
            ENDIF
            PRINT     *INDENT,"  IF       OVRCD=1"
            PRINT     *INDENT,"    MOVE     ",MULTIMTY[IDXMUL],"SNO,SECTOR"
            PRINT     *INDENT,"  ENDIF"
            IF        !(MULTIMLN[IDXMUL]=0)
              PRINT     *INDENT,"  PACK     ",MULTIMTY[IDXMUL],"MKY":
                                              MULTIPAK[IDXMUL]
              PRINT     *INDENT,"  MATCH    ",MULTIMTY[IDXMUL],"EKY,":
                                              MULTIMTY[IDXMUL],"MKY"
              PRINT     *INDENT,"  IF       !@EQUAL"
              PRINT     *INDENT,"    MOVE     ",MULTIMTY[IDXMUL],"SNO,SECTOR"
              PRINT     *INDENT,"  ENDIF"
            ENDIF
          ENDIF
          PRINT     *INDENT,"  ADD      ONE,SECTOR"
          PRINT     *INDENT,"DO"
          PRINT     *INDENT,"CALL     ",DPLAB,"L000"
          PRINT     *INDENT,"GOTO     ",LPLAB,"L999"
          PRINT     LPLAB,ANSL,LABELNO3
          GOTO      GSBLP100
GSBLP900 
          PRINT     LPLAB,"L999  RETURN"
GSBLP999  RETURN
.------------------------------------------------------------
. Generate Next Batch Page
.------------------------------------------------------------
GSBNP000
          PRINT     ".--------------------------------------------------------"
          PRINT     ". Display Next Page of Multi Items"
          PRINT     ".--------------------------------------------------------"
          PRINT     NPLAB,"L000"
.
          MOVE      "100",LABELNO3
          MOVE      ZERO,IDXMUL
GSBNP100  COMPARE   IDXMUL,MULTIIDX
          GOTO      GSBNP900 IF EQUAL
          ADD       ONE,IDXMUL
.
          ADD       "5",LABELNO3
          PRINT     *INDENT,"MATCH    #"",MULTIMTY[IDXMUL],"#",NAMSSFFI"
          ADD       "10",LABELNO3
          PRINT     *INDENT,"GOTO     ",NPLAB,ANSL,LABELNO3," IF NOT EQUAL"
          SUB       "10",LABELNO3
          PRINT     NPLAB,ANSL,LABELNO3
.
          COMPARE   ZERO,MULTIBTY[IDXMUL]
          GOTO      GSBNP200 IF NOT EQUAL
.
. Maintenance Type Next Page
.
          PRINT     *INDENT,"MOVE     SP70,",MULTIMTY[IDXMUL],"NXT"
          PRINT     *INDENT,"PACK     KEY5,Z70"
          PRINT     *INDENT,"CALL     TS",MULTIMTY[IDXMUL],"1"
          PRINT     *INDENT,"CALL     TP",MULTIMTY[IDXMUL],"1"
          PRINT     *INDENT,"MOVE     KEY",*+,MULTIKLN[IDXMUL],",":
                             MULTIMTY[IDXMUL],"NXT"
          PRINT     *INDENT,"CALL     TS",MULTIMTY[IDXMUL],"2"
          IF        MULTIBSQ[IDXMUL]=0
            PRINT     *INDENT,"CALL     TK",MULTIMTY[IDXMUL],"2"
          ELSE
            PRINT     *INDENT,"CALL     TP",MULTIMTY[IDXMUL],"2"
          ENDIF
          PRINT     *INDENT,"IF       OVRCD=1"
          PRINT     *INDENT,"  BEEP"
          PRINT     *INDENT,"  GOTO      ",NPLAB,"L999"
          PRINT     *INDENT,"ENDIF"
          PRINT     "."
          PRINT     *INDENT,"CALL     ",CTLAB,"L000"
          PRINT     "."
          PRINT     ". Position and Display Page"
          PRINT     ".--------------------------"
          ADD       "5",LABELNO3
          PRINT     NPLAB,ANSL,LABELNO3
          PRINT     *INDENT,"MOVE     ",MULTIMTY[IDXMUL],"NXT,KEY":
                             MULTIKLN[IDXMUL]
          PRINT     *INDENT,"CALL     TS",MULTIMTY[IDXMUL],"2"
          PRINT     *INDENT,"CALL     ",DPLAB,"L000"
          PRINT     *INDENT,"GOTO     ",NPLAB,"L999"
          ADD       "5",LABELNO3
          PRINT     NPLAB,ANSL,LABELNO3
          GOTO      GSBNP100
GSBNP200
          ADD       "5",LABELNO3
          IF        MULTIBSQ[IDXMUL]=0
            PRINT    *INDENT,"CALL     RK",MULTITIO[IDXMUL]
          ELSE
            PRINT    *INDENT,"CALL     RP",MULTITIO[IDXMUL]
          ENDIF
          PRINT    *INDENT,"BRANCH   OVRCD,",NPLAB,ANSL,LABELNO3
          IF        !(MULTIMLN[IDXMUL]=0)
            PRINT    *INDENT,"PACK     ",MULTIMTY[IDXMUL],"MKY",MULTIPAK[IDXMUL]
            PRINT    *INDENT,"MATCH    ",MULTIMTY[IDXMUL],"EKY,":
                                         MULTIMTY[IDXMUL],"MKY"
            PRINT    *INDENT,"GOTO     ",NPLAB,ANSL,LABELNO3," IF NOT EQUAL"
          ENDIF
          IF        MULTIBSQ[IDXMUL]=0
            PRINT    *INDENT,"CALL     RP",MULTITIO[IDXMUL]
          ELSE
            PRINT    *INDENT,"CALL     RK",MULTITIO[IDXMUL]
          ENDIF
          PRINT    *INDENT,"CALL     ",DPLAB,"L000"
          PRINT    *INDENT,"GOTO     ",NPLAB,"L999"
          PRINT     NPLAB,ANSL,LABELNO3
          IF        MULTIBSQ[IDXMUL]=0
            PRINT    *INDENT,"CALL     RP",MULTITIO[IDXMUL]
          ELSE
            PRINT    *INDENT,"CALL     RK",MULTITIO[IDXMUL]
          ENDIF
          PRINT    *INDENT,"BEEP"
          PRINT    *INDENT,"GOTO     ",NPLAB,"L999"
          ADD       "5",LABELNO3
          PRINT     NPLAB,ANSL,LABELNO3
          GOTO      GSBNP100
GSBNP900 
.
          PRINT     NPLAB,"L999  RETURN"
.
GSBNP999  RETURN
.
.------------------------------------------------------------
. Generate Previous Page
.------------------------------------------------------------
GSBPP000
          PRINT     ".--------------------------------------------------------"
          PRINT     ". Display Previous Page  "
          PRINT     ".--------------------------------------------------------"
          PRINT     PPLAB,"L000"
.
          MOVE      "100",LABELNO3
          MOVE      ZERO,IDXMUL
GSBPP100  COMPARE   IDXMUL,MULTIIDX
          GOTO      GSBPP900 IF EQUAL
          ADD       ONE,IDXMUL
.
          COMPARE   ZERO,MULTIBTY[IDXMUL]
          GOTO      GSBPP200 IF NOT EQUAL
.
          PRINT     "."
          PRINT     PPLAB,ANSL,LABELNO3
          ADD       "5",LABELNO3
          PRINT     *INDENT,"MATCH    #"",MULTIMTY[IDXMUL],"#",NAMSSFFI"
          ADD       "10",LABELNO3
          PRINT     *INDENT,"GOTO     ",PPLAB,ANSL,LABELNO3," IF NOT EQUAL"
          SUB       "10",LABELNO3
          PRINT     PPLAB,ANSL,LABELNO3
.
          PRINT     *INDENT,"MOVE     SP70,",MULTIMTY[IDXMUL],"NXT"
          PRINT     *INDENT,"PACK     KEY5,SP1,ONE,SP70"
          PRINT     *INDENT,"CALL     TS",MULTIMTY[IDXMUL],"1"
          PRINT     *INDENT,"CALL     TK",MULTIMTY[IDXMUL],"1 * First on Page"
          PRINT     *INDENT,"MOVE     KEY",*+,MULTIKLN[IDXMUL],",":
                             MULTIMTY[IDXMUL],"NXT"
          PRINT     *INDENT,"CALL     TS",MULTIMTY[IDXMUL],"2"
          IF        MULTIBSQ[IDXMUL]=0
            PRINT     *INDENT,"CALL     TP",MULTIMTY[IDXMUL],"2 * Get Key"
          ELSE
            PRINT     *INDENT,"CALL     TK",MULTIMTY[IDXMUL],"2 * Get Key"
          ENDIF
          PRINT     *INDENT,"IF       OVRCD=1"
          PRINT     *INDENT,"  BEEP"
          PRINT     *INDENT,"  GOTO      ",PPLAB,"L999"
          PRINT     *INDENT,"ENDIF"
          PRINT     "."
          PRINT     *INDENT,"CALL     ",CTLAB,"L000"
          PRINT     "."
          PRINT     ". Position and Display Page"
          PRINT     ".--------------------------"
          ADD       "5",LABELNO3
          PRINT     PPLAB,ANSL,LABELNO3
          PRINT     *INDENT,"MOVE     ",MULTIMTY[IDXMUL],"NXT,KEY":
                             MULTIKLN[IDXMUL]
          PRINT     *INDENT,"CALL     TS",MULTIMTY[IDXMUL],"2"
          PRINT     *INDENT,"MOVE     ZERO,SECTOR"
          PRINT     *INDENT,"WHILE    SECTOR<=",MULTIMTY[IDXMUL],"SNO"
          IF        MULTIBSQ[IDXMUL]=0
            PRINT     *INDENT,"  CALL     TP",MULTIMTY[IDXMUL],"2"
          ELSE
            PRINT     *INDENT,"  CALL     TK",MULTIMTY[IDXMUL],"2"
          ENDIF
          PRINT     *INDENT,"  ADD      ONE,SECTOR"
          PRINT     *INDENT,"DO"
          PRINT     *INDENT,"CALL     ",DPLAB,"L000"
          PRINT     *INDENT,"GOTO     ",PPLAB,"L999"
          ADD       "5",LABELNO3
          PRINT     PPLAB,ANSL,LABELNO3
          GOTO      GSBPP100
.
GSBPP200 
          PRINT     "."
          PRINT     *INDENT,"MATCH    #"",MULTIMTY[IDXMUL],"#",NAMSSFFI"
          ADD       "20",LABELNO3
          PRINT     *INDENT,"GOTO     ",PPLAB,ANSL,LABELNO3," IF NOT EQUAL"
          SUB       "20",LABELNO3
          PRINT     *INDENT,"MOVE     ZERO,SECTOR"
          ADD       "5",LABELNO3
          PRINT     PPLAB,ANSL,LABELNO3
.
          COMPARE   ONE,MULTIBTY[IDXMUL]
          GOTO      GSBPP300 IF NOT EQUAL
. Batch Type - Enquiries Only
          PRINT     *INDENT,"COMPARE  SECTOR,",MULTIMTY[IDXMUL],"SNO"
          ADD       "5",LABELNO3
          PRINT     *INDENT,"GOTO     ",PPLAB,ANSL,LABELNO3," IF EQUAL"
          ADD       "5",LABELNO3
          IF        MULTIBSQ[IDXMUL]=0
            PRINT     *INDENT,"CALL     RP",MULTITIO[IDXMUL]
          ELSE
            PRINT     *INDENT,"CALL     RK",MULTITIO[IDXMUL]
          ENDIF
          PRINT    *INDENT,"BRANCH   OVRCD,",PPLAB,ANSL,LABELNO3
          IF        !(MULTIMLN[IDXMUL]=0)
            PRINT    *INDENT,"PACK     ",MULTIMTY[IDXMUL],"MKY",MULTIPAK[IDXMUL]
            PRINT    *INDENT,"MATCH    ",MULTIMTY[IDXMUL],"EKY,":
                                         MULTIMTY[IDXMUL],"MKY"
            PRINT    *INDENT,"GOTO     ",PPLAB,ANSL,LABELNO3," IF NOT EQUAL"
          ENDIF
          PRINT     *INDENT,"ADD      ONE,SECTOR"
          SUB       "10",LABELNO3
          PRINT     *INDENT,"GOTO     ",PPLAB,ANSL,LABELNO3
          GOTO      GSBPP400 
. Batch Type - Selection Enquiries/Maintenance
GSBPP300  PRINT     *INDENT,"CALL      RFT",SCFLMTY
          ADD       "10",LABELNO3
          PRINT     *INDENT,"BRANCH   OVRCD,",PPLAB,ANSL,LABELNO3
          SUB       "10",LABELNO3
          PRINT     *INDENT,"MOVE      ",SCFLMTY,"MKY,",MULTIKEY[IDXMUL]
          PRINT     *INDENT,"CALL      ",RSCALLID
.
GSBPP400  ADD       "5",LABELNO3
          PRINT     PPLAB,ANSL,LABELNO3
          PRINT     *INDENT,"MOVE     ZERO,SECTOR"
          COMPARE   ONE,MULTIBTY[IDXMUL]
          IF        @EQUAL
            PRINT     *INDENT,"IF       ",MULTIMTY[IDXMUL],"CNT=":
                      MULTIMTY[IDXMUL],"SNO"
            PRINT     *INDENT,"  SUB      ONE,",MULTIMTY[IDXMUL],"CNT"
            PRINT     *INDENT,"ENDIF"

            PRINT     *INDENT,"WHILE    SECTOR<=",MULTIMTY[IDXMUL],"CNT"
          ELSE
            PRINT     *INDENT,"WHILE    SECTOR<=",MULTIMTY[IDXMUL],"SNO"
          ENDIF
          IF        MULTIBSQ[IDXMUL]=0
            PRINT     *INDENT,"  CALL     RP",MULTITIO[IDXMUL]
          ELSE
            PRINT     *INDENT,"  CALL     RK",MULTITIO[IDXMUL]
          ENDIF
          PRINT     *INDENT,"  IF       OVRCD=1"
          PRINT     *INDENT,"    MOVE     ",MULTIMTY[IDXMUL],"SNO,SECTOR"
          PRINT     *INDENT,"  ENDIF"
          IF        !(MULTIMLN[IDXMUL]=0)
            PRINT     *INDENT,"  PACK     ",MULTIMTY[IDXMUL],"MKY":
                                            MULTIPAK[IDXMUL]
            PRINT     *INDENT,"  MATCH    ",MULTIMTY[IDXMUL],"EKY,":
                                            MULTIMTY[IDXMUL],"MKY"
            PRINT     *INDENT,"  IF       !@EQUAL"
            PRINT     *INDENT,"    MOVE     ",MULTIMTY[IDXMUL],"SNO,SECTOR"
            PRINT     *INDENT,"  ENDIF"
          ENDIF
          PRINT     *INDENT,"  ADD      ONE,SECTOR"
          PRINT     *INDENT,"DO"
          PRINT     *INDENT,"CALL     ",DPLAB,"L000"
          PRINT     *INDENT,"GOTO     ",PPLAB,"L999"
.
          ADD       "5",LABELNO3
          PRINT     PPLAB,ANSL,LABELNO3
          PRINT     *INDENT,"BEEP"
          PRINT     *INDENT,"MOVE     ZERO,SECTOR"
          PRINT     *INDENT,"WHILE    SECTOR<",MULTIMTY[IDXMUL],"SNO"
          IF        MULTIBSQ[IDXMUL]=0
            PRINT     *INDENT,"  CALL     RK",MULTITIO[IDXMUL]
          ELSE
            PRINT     *INDENT,"  CALL     RP",MULTITIO[IDXMUL]
          ENDIF
          PRINT     *INDENT,"  IF       OVRCD=1"
          PRINT     *INDENT,"    MOVE     ",MULTIMTY[IDXMUL],"SNO,SECTOR"
          PRINT     *INDENT,"  ENDIF"
          IF        !(MULTIMLN[IDXMUL]=0)
            PRINT     *INDENT,"  PACK     ",MULTIMTY[IDXMUL],"MKY":
                                            MULTIPAK[IDXMUL]
            PRINT     *INDENT,"  MATCH    ",MULTIMTY[IDXMUL],"EKY,":
                                            MULTIMTY[IDXMUL],"MKY"
            PRINT     *INDENT,"  IF       !@EQUAL"
            PRINT     *INDENT,"    MOVE     ",MULTIMTY[IDXMUL],"SNO,SECTOR"
            PRINT     *INDENT,"  ENDIF"
          ENDIF
          PRINT     *INDENT,"  ADD      ONE,SECTOR"
          PRINT     *INDENT,"DO"
          PRINT     *INDENT,"GOTO     ",PPLAB,"L999"
          ADD       "5",LABELNO3
          PRINT     PPLAB,ANSL,LABELNO3
.
          GOTO      GSBPP100
GSBPP900 
          PRINT     PPLAB,"L999  RETURN"
GSBPP999  RETURN
.
.------------------------------------------------------------
. Generate Clear Page from Temp
.------------------------------------------------------------
GSBCT000
          PRINT     ".--------------------------------------------------------"
          PRINT     ". Clear Page of Multi Items from Temp File"
          PRINT     ".--------------------------------------------------------"
          PRINT     CTLAB,"L000"
.
          MOVE      "100",LABELNO3
          MOVE      ZERO,IDXMUL
GSBCT100  COMPARE   IDXMUL,MULTIIDX
          GOTO      GSBCT900 IF EQUAL
          ADD       ONE,IDXMUL
          COMPARE   ZERO,MULTIBTY[IDXMUL]
          GOTO      GSBCT100 IF NOT EQUAL
.
          ADD       "5",LABELNO3
          PRINT     *INDENT,"MATCH    #"",MULTIMTY[IDXMUL],"#",NAMSSFFI"
          ADD       "10",LABELNO3
          PRINT     *INDENT,"GOTO     ",CTLAB,ANSL,LABELNO3," IF NOT EQUAL"
          SUB       "10",LABELNO3
          PRINT     CTLAB,ANSL,LABELNO3
          PRINT     *INDENT,"PACK     KEY5,SP1,ONE,SP70"
          PRINT     *INDENT,"CALL     TS",MULTIMTY[IDXMUL],"1"
          PRINT     *INDENT,"CALL     TK",MULTIMTY[IDXMUL],"1"
          ADD       "5",LABELNO3
          PRINT     *INDENT,"BRANCH   OVRCD,",CTLAB,ANSL,LABELNO3
          SUB       "5",LABELNO3
          PRINT     *INDENT,"CALL     TR",MULTIMTY[IDXMUL],"2"
          PRINT     *INDENT,"MOVE     SP70,SCTMROW"
          PRINT     *INDENT,"MOVE     SP70,SCTMCOL"
          PRINT     *INDENT,"CALL     TU",MULTIMTY[IDXMUL],"2"
          PRINT     *INDENT,"GOTO     ",CTLAB,ANSL,LABELNO3
          ADD       "5",LABELNO3
          PRINT     CTLAB,ANSL,LABELNO3
          PRINT     *INDENT,"GOTO     ",CTLAB,"L999"
          GOTO      GSBCT100
GSBCT900 
          ADD       "5",LABELNO3
          PRINT     CTLAB,ANSL,LABELNO3
          PRINT     CTLAB,"L999  RETURN"
.
GSBCT999  RETURN
.
.
.------------------------------------------------------------ 
. Generate Display After Batch Screen
.------------------------------------------------------------ 
GDABT000  MOVE      "11",INDENT
          MOVE      "600",LABELNO3
          MOVE      ZERO,IDXMUL
GDABT100  COMPARE   IDXMUL,MULTIIDX
          GOTO      GDABT900 IF EQUAL
          ADD       ONE,IDXMUL
.
          PRINT     DPLAB,ANSL,LABELNO3
          PACK      KEY15,SCMAPID,SCMASID,MULTIFNO[IDXMUL]
          CALL      RDSCFL1
.
          ADD       "5",LABELNO3
          PRINT     *INDENT,"MATCH    #"",MULTIMTY[IDXMUL],"#",NAMSSFFI"
          PRINT     *INDENT,"GOTO     ",DPLAB,ANSL,LABELNO3," IF NOT EQUAL"
.
          MOVE     ONE,BATCHFLG
          CALL     DCHK0000
          MOVE     ZERO,BATCHFLG
.
          PRINT     *INDENT,"GOTO     ",DPLAB,"L999"
          GOTO      GDABT100
GDABT900 
          PRINT     DPLAB,ANSL,LABELNO3
.
GDABT999  RETURN
.-----------------------------------
. Modify File Opens for Program
.-----------------------------------
MOPN0000  MOVE      "18",HTOP
          MOVE      "1",HLEF
          MOVE      "24",HBOT
          MOVE      "80",HRIG
          CALL      GETSCR00
          MOVE      ZERO,HTOP
          MOVE      ZERO,HLEF
          MOVE      ZERO,HBOT
          MOVE      ZERO,HRIG
.
MOPN0100  DISPLAY   *P1:18,*EF
          HLINE     *G37,18,1,80
          DISPLAY   *P1:19,"    File            : "
          DISPLAY   *P1:21,*V2LON," 1.",*HOFF," Status          : "
          DISPLAY   *P1:22,*V2LON," 2.",*HOFF," Open to File    : "
          MOVE      SCPRPID,SCOPPID
          MOVE      "23",CCOL
          MOVE      "19",CVERT
          MOVE      TWO,CKEYTYP
          CALL      KSCOPA00
          BRANCH    EXIT,MOPN9000,MOPN9000
.
          PACK      KEY16,SCOPPID,SCOPFIL
          CALL      RDSCOP1
          BRANCH    OVRCD,MOPN0220
.         
          MOVE      OPENNORM,OPENSTAT
          LOAD      OPENSTAT,SCOPMOD,OPENADD,OPENDEL,OPENAUD
          DISPLAY   *P23:21,*V2LON,SCOPMOD,SP1,*HOFF,OPENSTAT
          IF        SCOPMOD=1
            DISPLAY   *P23:22,*V2LON,SCOPOPT
          ELSE
            DISPLAY   *P23:22,*V2LON,SCOPPHY
          ENDIF
.
MOPN0200  CALL      MAINQST
          COMPARE   ZERO,CCITEM
          GOTO      MOPN1000 IF EQUAL  * Post
          COMPARE   SEQ,CCITEM
          GOTO      MOPN0100 IF EQUAL  * Cancel
          BRANCH    CCITEM,MOPN0210,MOPN0220
          BEEP
          GOTO      MOPN0200
MOPN0210
          DISPLAY   *P1:24,*V2LON,"0=",*HOFF,OPENNORM:
                           *V2LON,"1=",*HOFF,OPENADD:
                           *V2LON,"2=",*HOFF,OPENDEL:
                           *V2LON,"3=",*HOFF,OPENAUD
          KEYIN     *P23:21,*EL,*V2LON,SCOPMOD:
                    *P23:21,*DV,SCOPMOD
          COMPARE   ZERO,SCOPMOD
          GOTO      MOPN0215 IF EQUAL
          BRANCH    SCOPMOD,MOPN0215,MOPN0215,MOPN0215
          BEEP
          GOTO      MOPN0210 
MOPN0215 
          MOVE      OPENNORM,OPENSTAT
          LOAD      OPENSTAT,SCOPMOD,OPENADD,OPENDEL,OPENAUD
          DISPLAY   *P23:21,*V2LON,SCOPMOD,SP1,*HOFF,OPENSTAT
          IF        SCOPMOD=1
            DISPLAY   *P23:22,*V2LON,SCOPOPT
          ELSE
            DISPLAY   *P23:22,*V2LON,SCOPPHY
          ENDIF
          GOTO      MOPN0200
MOPN0220  
          MOVE      "1",SCOPMOD
          MOVE      OPENNORM,OPENSTAT
          LOAD      OPENSTAT,SCOPMOD,OPENADD,OPENDEL,OPENAUD
          DISPLAY   *P23:21,*V2LON,SCOPMOD,SP1,*HOFF,OPENSTAT
          KEYIN     *P23:22,*V2LON,SCOPOPT
          GOTO      MOPN0200
.
MOPN1000  PACK      KEY16,SCOPPID,SCOPFIL
          CALL      RASCOP1
          IF        OVRCD=0
            CALL      UPSCOP1
          ELSE
            CALL      WRSCOP1
          ENDIF
          GOTO      MOPN0100
.         
MOPN9000  
          CALL      PUTSCR00
          RETURN
.
.--------------------------------------------------
. Print Program
.--------------------------------------------------
PPRG0000  MOVE      ZERO,HLEF
          MOVE      ZERO,HTOP
          CALL      GETSCR00
          OPEN      IBACODE1,"ibacodef"
          OPEN      IBAHLPA1,"ibahlpaf"
          CALL      OPNPRINT
.
          PRINT     *F
          CALL      UND80
          PRINT     "Program     : ",SCPRPID,SP1,SCPRNAM
          PRINT     *N,*31,"Program Help"
          CALL      UND80
          PACK      KEY11,SCPRPID,SP70
          CALL      RSIBHLP1
PPRG0010
          CALL      RKIBHLP1
          BRANCH    OVRCD,PPRG0099
          MATCH     IBHPNAME,SCPRPID
          GOTO      PPRG0099 IF NOT EQUAL
          PRINT     *2,IBHPTEXT
          GOTO      PPRG0010

PPRG0099
          CALL      UND80
          PRINT     *N,*31,"Summary of Screens"
          PACK      KEY10,SCPRPID,SP70
          CALL      RSSCMA1
PPRG0100
          CALL      RKSCMA1
          BRANCH    OVRCD,PPRG0200
          MATCH     SCPRPID,SCMAPID
          GOTO      PPRG0200 IF NOT EQUAL
          PRINT     *20,SCMASID,SP2,SCMADES
          GOTO      PPRG0100
.
PPRG0200  PACK      KEY10,SCPRPID,SP70
          CALL      UND80
          CALL      RSSCMA1
PPRG1000
          CALL      RKSCMA1
          BRANCH    OVRCD,PPRG2000
          MATCH     SCPRPID,SCMAPID
          GOTO      PPRG2000 IF NOT EQUAL

          CALL      PMAS0000   * Print Screen Details
          GOTO      PPRG1000
.
PPRG2000  CALL      SELPRINT
          CALL      CLSPRINT
          CLOSE     IBACODE1
          CLOSE     IBAHLPA1
          CALL      PUTSCR00
          RETURN
.--------------------------------------------------
. Print a single Screen
.--------------------------------------------------
PRSCR000  MOVE      ZERO,HLEF
          MOVE      ZERO,HTOP
          CALL      GETSCR00
          OPEN      IBACODE1,"ibacodef"
          CALL      OPNPRINT
.
          CALL      PMAS0000   * Print Screen Details
.
          CALL      SELPRINT
          CALL      CLSPRINT
          CLOSE     IBACODE1
          CALL      PUTSCR00
          RETURN
.
.--------------------------------------------------
. Print Screen Details
.--------------------------------------------------
PMAS0000  PRINT     *F
          CALL      UND80
          PRINT        "Program     : ",SCPRPID,SP1,SCPRNAM:
                    *N,"Screen      : ",SCMASID,SP1,SCMADES:
                    *N,*31,"Screen Background"
          CALL      UND80
          PACK      KEY10,SCPRPID,SCMASID,SP70
          PACK      KEY12,SCPRPID,SCMASID,SP70
          MOVE      TWO,F3
          CALL      RSSCSB1
PMAS0010  
          CALL      RKSCSB1
          BRANCH    OVRCD,PMAS0019
          PACK      KEY12,SCSBPID,SCSBSID,SP70
          MATCH     KEY10,KEY12
          GOTO      PMAS0019 IF NOT EQUAL
          MOVE      SCSBLIN,F2
          ADD       ONE,F3
          WHILE     F2>F3
            ADD       ONE,F3
            PRINT     SP1
          DO
          PRINT     SCSBDAT
          GOTO      PMAS0010
PMAS0019
          WHILE     F2<24
            ADD       ONE,F2
            PRINT     SP1
          DO
          CALL      UND80
          PRINT     *31,"Screen Selections"
          PRINT     *31,"-----------------"
          PRINT     "  Selection    Description                  ":
                    "Field  Row/Column   Security"
          CALL      UND80
          PACK      KEY10,SCPRPID,SCMASID,SP70
          PACK      KEY13,SCPRPID,SCMASID,SP70
          CALL      RSSCSL1
PMAS0020
          CALL      RKSCSL1
          BRANCH    OVRCD,PMAS0029
          PACK      KEY12,SCSLPID,SCSLSID,SP70
          MATCH     KEY10,KEY12
          GOTO      PMAS0029 IF NOT EQUAL
          PRINT     *6,SCSLSEL,*16,SCSLDES,*45,SCSLITM:
                    *53,SCSLROW,"/",SCSLCOL,*68,SCSLSEC
          GOTO      PMAS0020
PMAS0029
          CALL      UND80
          PRINT     *31,"Screen Fields"
          PRINT     *31,"-------------"
          PRINT     "Fld No. Description                         Type":
                    "  Field    Routine   Keyin Type"
          CALL      UND80
          PACK      KEY10,SCPRPID,SCMASID,SP70
          PACK      KEY15,SCPRPID,SCMASID,SP70
          CALL      RSSCFL1
PMAS0030
          CALL      RKSCFL1
          BRANCH    OVRCD,PMAS0039
          PACK      KEY12,SCFLPID,SCFLSID,SP70
          MATCH     KEY10,KEY12
          GOTO      PMAS0039 IF NOT EQUAL
          PRINT     SCFLFNO,*9,SCFLDES,*47,SCFLTYP,*51,SCFLFLD:
                    *60,SCFLCAL,*74,SCFLKTY
          GOTO      PMAS0030
PMAS0039
          CALL      UND80
          PRINT     *31,"Screen Tags"
          PRINT     *31,"-------------"
          PRINT     "    Fld No.   Pre Display  Post Display":
                    "    Pre Keyin      Post Keyin"
          CALL      UND80
          PACK      KEY10,SCPRPID,SCMASID,SP70
          PACK      KEY15,SCPRPID,SCMASID,SP70
          CALL      RSSCTA1
PMAS0040
          CALL      RKSCTA1
          BRANCH    OVRCD,PMAS0049
          PACK      KEY12,SCTAPID,SCTASID,SP70
          MATCH     KEY10,KEY12
          GOTO      PMAS0049 IF NOT EQUAL
          PRINT     *5,SCTAFNO,*15,SCTACBD,*28,SCTACAD,*42,SCTACBK,*57,SCTACAK
          GOTO      PMAS0040
PMAS0049
          CALL      UND80
          RETURN
.------------------------------
. Generate Code
.------------------------------
QGENE000  PACK      PRNAME,SCPRPID,SP70
          SPLOPEN   PRNAME
          DISPLAY   *P1:10,*EF
          DISPLAY   *P1:11,"Copying Old Program"
          CLEAR     SCRCMD80
          APPEND    "mv $WORKDIR/",SCRCMD80
          APPEND    SCPRPID,SCRCMD80
          APPEND    ".PBL $TBSPOOL/",SCRCMD80
          APPEND    SCPRPID,SCRCMD80
          APPEND    ".txt",SCRCMD80
          RESET     SCRCMD80
          EXECUTE   SCRCMD80,TASKID
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PBLFILE,SCPRPID
          TRAPCLR   IO
          BRANCH    OVRCD,QGENE910
.
QGENE100  READ      PBLFILE,SEQ;SCRCMD80
          GOTO      QGENE920 IF OVER
          ENDSET    SCRCMD80
          APPEND    SP70,SCRCMD80
          RESET     SCRCMD80
          MATCH     ".@@@@@ Function Restart Point @@@@@",SCRCMD80
          GOTO      QGENE200 IF EQUAL

          STRIP     SCRCMD80
          PRINT     *+,SCRCMD80
          GOTO      QGENE100

QGENE200  DISPLAY   *P1:12,"Re-generating Functions"
          CLOSE     PBLFILE
          CALL      GPINC000           * Generate Inculdes/Opens Program
          CALL      GFUNC000    
.
QGENE900  CALL      GEND0000    
          SPLCLOSE
          CLEAR     SCRCMD80
          APPEND    "rm $TBSPOOL/",SCRCMD80
          APPEND    SCPRPID,SCRCMD80
          APPEND    ".txt",SCRCMD80
          RESET     SCRCMD80
          EXECUTE   SCRCMD80,TASKID
.
          CLEAR     SCRCMD80
          APPEND    "mv $TBSPOOL/",SCRCMD80
          APPEND    SCPRPID,SCRCMD80
          APPEND    ".prt $WORKDIR/",SCRCMD80
          APPEND    SCPRPID,SCRCMD80
          APPEND    ".PBL",SCRCMD80
          RESET     SCRCMD80
          EXECUTE   SCRCMD80,TASKID
.
          DISPLAY   *P1:15,*EF,"Compiling Program  ",*P1:16;
          CLEAR     SCRCMD80
          APPEND    COMPILER,SCRCMD80
          APPEND    SCPRPID,SCRCMD80
          RESET     SCRCMD80
          EXECUTE   SCRCMD80,TASKID
          GOTO      QGENE999
.
QGENE910  DISPLAY   *P1:24,*EL,".PBL Not Found - ";
          CALL      HITENTER
          GOTO      QGENE990
.
QGENE920  DISPLAY   *P1:24,*EL,"Function Restart Point Not Found - ";
          CALL      HITENTER
          GOTO      QGENE990
.
QGENE990  SPLCLOSE
          CLEAR     SCRCMD80
          APPEND    "rm $TBSPOOL/",SCRCMD80
          APPEND    SCPRPID,SCRCMD80
          APPEND    ".prt ",SCRCMD80
          RESET     SCRCMD80
          EXECUTE   SCRCMD80,TASKID
          CLEAR     SCRCMD80
          APPEND    "mv $TBSPOOL/",SCRCMD80
          APPEND    SCPRPID,SCRCMD80
          APPEND    ".txt $WORKDIR/",SCRCMD80
          APPEND    SCPRPID,SCRCMD80
          APPEND    ".PBL",SCRCMD80
          RESET     SCRCMD80
          EXECUTE   SCRCMD80,TASKID
          GOTO      QGENE999
.
QGENE999  RETURN
.
.------------------------------------------------------------
. BSCAN - Scan Screen for Multiple Line Fields and Update
.         Number of lines on screen to the key field.
.------------------------------------------------------------
BSCAN000   PACK     KEY15,SCPRPID,SCMASID,SP70
           PACK     KEY10,SCPRPID,SCMASID,SP70
           CALL     RSSCFL1
BSCAN100
           CALL     RKSCFL1              * Scan for Multiple(Batch) Key Fields
           BRANCH   OVRCD,BSCAN999
           PACK     KEY15,SCFLPID,SCFLSID,SP70
           MATCH    KEY10,KEY15          * Check for Change in Screen
           GOTO     BSCAN999 IF NOT EQUAL
           COMPARE  ZERO,SCFLTYP         * Check for Key Field
           GOTO     BSCAN100 IF NOT EQUAL
           COMPARE  ONE,SCFLMUL          * Check Multiple
           GOTO     BSCAN100 IF NOT EQUAL
.
. Scan for First Item on the Screen
.
           PACK     KEY15,SCFLPID,SCFLSID,SCFLFNO,SP70
           PACK     KEY20,SCFLPID,SCFLSID,SCFLFNO,SP70
           CALL     RSSCPS2
           CALL     RKSCPS2
           BRANCH   OVRCD,BSCAN100    * No Items On Screen Continue Scan
           PACK     KEY20,SCPSPID,SCPSSID,SCPSITM,SP70
           MATCH    KEY15,KEY20       * No Items On Screen Continue Scan
           GOTO     BSCAN100 IF NOT EQUAL
.
. Save Key to First Item
.
           PACK     SAVKEY20,SCPSPID,SCPSSID,SCPSITM,SCPSROW,SCPSCOL
.
. Count Number of Key Items On Screen
.
           PACK     KEY15,SCFLPID,SCFLSID,SCFLFNO,SP70
           PACK     KEY20,SCFLPID,SCFLSID,SCFLFNO,SP70
           MOVE     ZERO,SECTOR
           CALL     RSSCPS2
BSCAN200
           CALL     RKSCPS2
           BRANCH   OVRCD,BSCAN300    * No Items On Screen Continue Scan
           PACK     KEY20,SCPSPID,SCPSSID,SCPSITM,SP70
           MATCH    KEY15,KEY20       * No Items On Screen Continue Scan
           GOTO     BSCAN300 IF NOT EQUAL
           ADD      ONE,SECTOR
           GOTO     BSCAN200
.
. Update First Item With Number Counted on Screen
.
BSCAN300  MOVE      SAVKEY20,KEY20
          CALL      RDSCPS2
          IF        OVRCD=0
            MOVE      SECTOR,SCPSNOR
            CALL      UPSCPS2
          ENDIF
          GOTO     BSCAN100
.
BSCAN999  RETURN
. 
          INC       IBAPRINT
          INC       IBAPRNIO/INC
          INC       IBAHLPIO/INC
.
          INC       SCRPRGIO/INC  * Program Master File
          INC       SCRMASIO/INC  * Screen Master File
          INC       SCRSBGIO/INC  * Screen Background
          INC       SCRFLDIO/INC  * Screen Fields
          INC       SCRSLTIO/INC  * Screen Selections
          INC       SCRPSTIO/INC  * Screen Positions
          INC       SCRINCIO/INC  * Program Includes
          INC       SCRTAGIO/INC  * Item Tags
          INC       SCRFMAIO/INC  * Function Master
          INC       SCRFDTIO/INC  * Function Details
          INC       SCRLOCIO/INC  * Lock File
          INC       SCROPNIO/INC  * File Opens
          INC       SCRFMAKY
          INC       SCRPRGKY     
          INC       SCRMASKY    
          INC       SCRFLDKY    
          INC       SCRINCKY    
          INC       SCROPNKY    
          INC       SCRSLTKY    
.
          INC       SYSSCFIO/INC
          INC       SYSFILIO/INC
          INC       SYSIDXIO/INC
          INC       SYSFLDIO/INC
          INC       SYSKVRIO/INC
          INC       SCRWPDIO/INC 
          INC       SCRTFCIO/INC 
.
          INC       SYSSCFKY    
          INC       SYSFILKY    
          INC       SYSIDXKY    
          INC       SYSFLDKY    
          INC       SYSKVRKY    
.
          INC       PAINTDCD
          INC       SYSSTDCD
.----------------------
. Copy a Program
.---------------------
PCOPY000  DISPLAY   *P1:1,*EL,"Copy from Program ID  : "
          MOVE      ONE,CVERT
          MOVE      "25",CCOL
          MOVE      SCPRPID,COPYTPID
          CALL      KSCPRA00
          BRANCH    EXIT,PCOPY900,PCOPY900
.
. Copy All
.--------------
PCOPY100  DISPLAY   *P1:1,*EL,"Copy from Program : ":
                    *V2LON,SCPRPID,SP1,*HOFF,SCPRNAM
          DISPLAY   *P59:1,"Continue (Y/N) ? "
          MOVE      ONE,CVERT
          MOVE      "76",CCOL
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      PCOPY900 IF EQUAL
.
          CALL      CPFUN000 * Copy Local Function
          CALL      CPOPN000 * Copy Opens
          CALL      CPINC000 * Copy Includes
.
          PACK      KEY10,SCPRPID,SP10
          CALL      RSSCMA1
PCOPY200  CALL      RKSCMA1
          BRANCH    OVRCD,PCOPY900
.
          MATCH     SCMAPID,SCPRPID
          GOTO      PCOPY900 IF NOT EQUAL
.
          MOVE      SCMASID,COPYTSID
          CALL      CPFLD000 * Copy Fields
          CALL      CPPST000 * Copy Edit Positions
          CALL      CPSBG000 * Copy Background
          CALL      CPSLT000 * Copy Selections
          CALL      CPTAG000 * Copy Tags
.
          PACK      SAVKEY10,SCMAPID,SCMASID
          PACK      KEY10,COPYTPID,SCMASID
          UNPACK    KEY10,SCMAPID,SCMASID
          CALL      RASCMA1
          IF        OVRCD=0
            CALL      UPSCMA1
          ELSE
            CALL      WRSCMA1
          ENDIF
.
          MOVE      SAVKEY10,KEY10
          CALL      RDSCMA1
          GOTO      PCOPY200
.
PCOPY900  MOVE      COPYTPID,KEY8
          CALL      RDSCPR1
.
PCOPY999  RETURN
.
. Copy Opens
.------------------
CPOPN000  PACK      KEY16,SCPRPID,SP70
          CALL      RSSCOP1
CPOPN100  CALL      RKSCOP1
          BRANCH    OVRCD,CPOPN999
          MATCH     SCPRPID,SCOPPID
          GOTO      CPOPN999 IF NOT EQUAL
          PACK      SAVKEY16,SCOPPID,SCOPFIL
          PACK      KEY16,COPYTPID,SCOPFIL
          UNPACK    KEY16,SCOPPID,SCOPFIL
          CALL      RASCOP1
          IF        OVRCD=0
            CALL      UPSCOP1
          ELSE
            CALL      WRSCOP1
          ENDIF
          MOVE      SAVKEY16,KEY16
          CALL      RDSCOP1
          GOTO      CPOPN100
CPOPN999  RETURN
.
. Copy Includes
.------------------
CPINC000  PACK      KEY21,SCPRPID,SP70
          CALL      RSSCIN1
CPINC100  CALL      RKSCIN1
          BRANCH    OVRCD,CPINC999
          MATCH     SCPRPID,SCINPID
          GOTO      CPINC999 IF NOT EQUAL
          PACK      SAVKEY21,SCINPID,SCINTYP,SCININC
          PACK      KEY21,COPYTPID,SCINTYP,SCININC
          UNPACK    KEY21,SCINPID,SCINTYP,SCININC
          CALL      RASCIN1
          IF        OVRCD=0
            CALL      UPSCIN1
          ELSE
            CALL      WRSCIN1
          ENDIF
          MOVE      SAVKEY21,KEY21
          CALL      RDSCIN1
          GOTO      CPINC100
CPINC999  RETURN
.----------------------------------------------------------------
. Copy Version Control up to Start of Generation
.----------------------------------------------------------------
CPOLD000  DISPLAY   *P1:10,*EF
          CLEAR     SCRCMD80
          APPEND    "mv $WORKDIR/",SCRCMD80
          APPEND    SCPRPID,SCRCMD80
          APPEND    ".PBL $TBSPOOL/",SCRCMD80
          APPEND    SCPRPID,SCRCMD80
          APPEND    ".txt",SCRCMD80
          RESET     SCRCMD80
          EXECUTE   SCRCMD80,TASKID
.
          MOVE      ZERO,OVRCD
          MOVE      ZERO,NEWPROG
          TRAP      OVERCOND IF IO
          OPEN      PBLFILE,SCPRPID
          TRAPCLR   IO
          BRANCH    OVRCD,CPOLD900
.
CPOLD100  READ      PBLFILE,SEQ;SCRCMD80
          GOTO      CPOLD950 IF OVER
          ENDSET    SCRCMD80
          APPEND    SP70,SCRCMD80
          RESET     SCRCMD80
          MATCH     ".@@@@@ Start of Generated Code @@@@@",SCRCMD80
          GOTO      CPOLD200 IF EQUAL

          STRIP     SCRCMD80
          PRINT     *+,SCRCMD80
          GOTO      CPOLD100
CPOLD200  MOVE      ZERO,NEWPROG
          GOTO      CPOLD990
.
CPOLD900  
          REPEAT
            KEYIN     *P1:1,*EL,*B,"Program Not Found - ",*V2LON:
                      "F",*HOFF,"romlive or ",*V2LON:
                      "C",*HOFF,"reate, ",*V2LON:
                      "E",*HOFF,"xit : ",*V2LON:
                      ANS;
            PACK      ANS,ANS,SP70
            REP       "0x1x2xc0C0f1F1e2E2",ANS
            MOVE      NINE,EXIT
            MOVE      ANS,EXIT
            IF        EXIT=2
              GOTO      CPOLD995
            ENDIF
            IF        EXIT=1
              MOVE      ZERO,HLEF
              CALL      GETSCR00
              KEYIN     *P1:1,*EF,"Enter Fromlive Command : ",*V2LON,KEY50;
              EXECUTE   KEY50,TASKID
              CALL      PUTSCR00
              GOTO      CPOLD000
            ENDIF
          UNTIL     EXIT=0
          MOVE      ONE,NEWPROG
          GOTO      CPOLD990
.
CPOLD950  DISPLAY   *P1:1,*EL,*B,"Program Restart Point Not Found. ";
          CALL      HITENTER
          MOVE      ONE,NEWPROG
          SPLCLOSE
          PACK      PRNAME,SCPRPID,SP70
          SPLOPEN   PRNAME
          GOTO      CPOLD990
.
CPOLD990  MOVE      ZERO,EXIT
          GOTO      CPOLD999
.
CPOLD995  MOVE      ONE,EXIT
.
CPOLD999  CLOSE     PBLFILE,DELETE
          RETURN
.
