.*****************************************************************************
.* System    :   Patient Management System                                   *
.* Program   :   ECLIMPRT                                                    *
.* Desc      :   Eclipse Data Import (into V9 from V6)                       *
.*****************************************************************************
.* Date      :   12/06/2009                                                  *
.* Author    :   Davin Sloan                                                 *
.* Function  :   This program will import data into the V9 eclipse tables    *
.*               from V6 when sites cut over from charPAS to webPAS.         *
.*               Assumes import text file is in appropriate record type      *
.*               order. (Each 'CT' is followed by any related record types). *
.* Mods      :                                                               *
.* V10.01.01     10/03/2011 Jill Parkinson CAR 233088                        *
.*               Added pmsvx1af                                              *
.*        V9.12.00 12/06/2009  Davin            CAR 197713                   *
.*                 Program created.                                          *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       PATINVFD/INC
          INC       PATMI1FD/INC
          INC       PMSVX1FD/INC
          INC       PMSEADFD/INC
          INC       PMSEAHFD/INC
          INC       PMSEBHFD/INC
          INC       PMSECAFD/INC
          INC       PMSECTFD/INC
          INC       PMSESDFD/INC
          INC       PMSESHFD/INC
.
.
. Import Text File definitions
. ----------------------------
BATFILE1  FILE      ASCII, FIXED=165        * batch data (as per PMSEBHFD)
CLMFILE1  FILE      ASCII, FIXED=300        * claim data
.
.
. pmsectaf record type "CT"
. -------------------------
.CT       DIM       2          1
.DIM2     DIM       2          3
.PMECHFND DIM       6          5
.PMECADMN DIM       8          11
.PMECINVN DIM       8          19
.PMECBATN DIM       8          27
.PMECURNO DIM       8          35
.PMECPBAT DIM       8          43
.PMECNBAT DIM       8          51
.PMECCCFL DIM       1          59
.PMECTRID DIM       24         60
.DIM1     DIM       1          84
.DIM15A   DIM       15         85
DIM15B    DIM       15         100
.PMECPDAT DIM       8          115
.PMECSTAT DIM       2          123
.PMECFTID DIM       24         125
.PMECSPAR DIM       17         149
.
.End of Record                 166
.
.
. pmseahaf record type "AH"
. -------------------------
.AH        DIM       2         1
.PMAHFBID  DIM       3         3
.PMAHARID  DIM       20        6
.PMAHFRID  DIM       12        26
.PMAHRPTC  DIM       3         38
.PMAHFSCD  DIM       4         41
.PMAHFCID  DIM       8         45
.PMAHCFAC  DIM       1         53
.PMAHTCAM  DIM       9         54
.PMAHTBAM  DIM       9         63
.PMAHEXAM  DIM       9         72
.PMAHCPAM  DIM       9         81
.PMAHFTID  DIM       24        90
.PMAHUDTE  DIM       8         114
.PMAHUTIM  DIM       8         122
.PMAHSPAR  DIM       30        130
.
.End of Record                 160
.
.
. pmseadaf record type "AD"
. -------------------------
.AD       DIM       2          1
.PMADFBID DIM       3          3
.PMADARID DIM       20         6
.PMADFRID DIM       12         26
.PMADRPTC DIM       3          38
.PMADCFEC DIM       4          41
.PMADEXPC DIM       3          45
.PMADCFET DIM       80         48
.PMADELNM DIM       127        128
.PMADMPID DIM       8          255
.PMADSPAR DIM       30         263
.
.End of Record                 293
.
.
. pmsebhaf record
. ---------------
.PMEBBTHN DIM       8          1
.PMEBHFND DIM       6          9
DIM15A    DIM       15         15
DIM6      DIM       6          30
.PMEBDTBC DIM       8          36
.PMEBTMBC DIM       8          44
DIM4      DIM       4          52
.DIM1     DIM       1          56
.PMEBEFNM DIM       18         57
.PMEBLOCN DIM       8          75
.PMEBSNID DIM       60         83
.PMEBSPAR DIM       20         143
.
.End of Record                 163
.
.
. pmsecaaf record type "CA"
. -------------------------
.CA        DIM       2         1
.PMEAINVN  DIM       8         3
.PMEADATE  DIM       8         11
.PMEATIME  DIM       8         19
.PMEABATN  DIM       8         27
.DIM2      DIM       2         35
.PMEATYPE  DIM       2         37
.DIM4      DIM       4         39
.PMEATRID  DIM       24        43
.PMEAEROR  DIM       4         67
.PMEASPAR  DIM       24        71
.
.End of Record                 95
.
.
. pmsesdaf record type "SD"
. -------------------------
.SD        DIM       2         1
.PMSDFBID  DIM       3         3
.PMSDARID  DIM       20        6
.PMSDFRID  DIM       12        26
.PMSDRPTC  DIM       3         38
.PMSDSCOD  DIM       11        41
.PMSDSRVC  DIM       3         52
.PMSDSFEC  DIM       4         55
.PMSDSEXC  DIM       3         59
.PMSDSFET  DIM       80        62
.PMSDSPAR  DIM       30        142
.
.End of Record                 172
.
.
. pmseshaf record type "SH"
. -------------------------
.SH        DIM       2         1
.PMSHFBID  DIM       3         3
.PMSHARID  DIM       20        6
.PMSHFRID  DIM       12        26
.PMSHRPTC  DIM       3         38
.PMSHSCOD  DIM       11        41
.PMSHSRVC  DIM       3         52
.PMSHSDSC  DIM       80        55
.PMSHNOSV  DIM       2         135
.PMSHCAMT  DIM       9         137
.PMSHFBAM  DIM       9         146
.PMSHFDTE  DIM       8         155
.PMSHTDTE  DIM       8         163
.PMSHSDTE  DIM       8         171
.PMSHSPAR  DIM       30        179
.
.End of Record                 209
.
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
BATCNT    FORM      12                      * total batch input record counter
BATCOUNT  FORM      12                      * imported batches counter
ECTCNT    FORM      12                      * total claim input record counter
ECTCOUNT  FORM      12                      * imported claims counter
ERRCT     FORM      12                      * Error counter
ERRMSG    DIM       80                      * Error message
ERRMINVN  DIM       8
ERRMADMN  DIM       8
ERRMURNO  DIM       8
ERRMBATN  DIM       8
IMPRTDAT  DIM       300                     * Import data record
VALIDFLG  FORM      1                       * valid claim written (0=yes/1=no)
.
.
. PROGRAM CONSTANTS
. -----------------
BATFNAME  INIT      "eclbatch"
CLMFNAME  INIT      "eclclaim"
PIPE      INIT      "|"
.
.
PRGID     INIT      "ECLIMPRT"
PRGNAM    INIT      "Eclipse V9 Data Import"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
MAIN0000  CALL      INIT0000               * initialisation and open files
          BRANCH    EXIT,MAIN9999          * input file(s) missing
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000       * proceed with import
.
MAIN1000  CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN2000  CALL      PROC0000               * process
          CALL      TAIL0000               * Print report tail
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000                                   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"pmseadaf";
          OPEN      PMSEADA1,"pmseadaf"
.
          DISPLAY   *P64:24,"pmseahaf";
          OPEN      PMSEAHA1,"pmseahaf"
.
          DISPLAY   *P64:24,"pmsebhaf";
          OPEN      PMSEBHA1,"pmsebhaf"
.
          DISPLAY   *P64:24,"pmsecaaf";
          OPEN      PMSECAA1,"pmsecaaf"
.
          DISPLAY   *P64:24,"pmsectaf";
          OPEN      PMSECTA1,"pmsectaf"
          OPEN      PMSECTA3,"pmsectaf"
.
          DISPLAY   *P64:24,"pmsesdaf";
          OPEN      PMSESDA1,"pmsesdaf"
.
          DISPLAY   *P64:24,"pmseshaf";
          OPEN      PMSESHA1,"pmseshaf"
.
          DISPLAY   *P64:24,"patinvrf";
          OPEN      PATINVR1,"patinvrf"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PMSVX1A1,"pmsvx1af"
.
.         Open the import files
.
          MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      BATFILE1,BATFNAME            * open batch file
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Input batch file eclbatch not found.  ";
            CALL      HITENTER
            MOVE      ONE,EXIT
          ENDIF
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      CLMFILE1,CLMFNAME            * open claims file
          TRAPCLR   IO
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Input claims file eclclaim not found.  ";
            CALL      HITENTER
            MOVE      ONE,EXIT
          ENDIF
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000                                   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run import                              *
.*                        TRUE  (1)  Exit option selected                    *
.*****************************************************************************
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Import"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run import
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               PROC0000                                    *
.*        Loop through eclclaim and eclbatch to import claims                *
.*****************************************************************************
PROC0000  MOVE      ZERO,ERRCT                   * errors
          MOVE      ZERO,ECTCNT                  * total claim input records
          MOVE      ZERO,BATCNT                  * total batch input records
.
          CALL      HEAD0000                     * Print report header
.
          MOVE      ZERO,ECTCOUNT                * initialise claim counter
.
          DISPLAY   *P1:24,*EL,"Processing eclclaim: ";
.
PROC0500  READ      CLMFILE1,SEQ;KEY2,IMPRTDAT
          GOTO      PROC6000 IF OVER             * eof
.
          PACK      KEY18,KEY2,IMPRTDAT
          DISPLAY   *P22:24,*EL,*V2LON,KEY18
.
.         Write this record's data to the relevant table
.
          MATCH     "CT",KEY2
          IF        @EQUAL
            ADD       ONE,ECTCNT                 * increment input claim count
            CALL      WECT0000                   * pmsectaf
          ENDIF
.
          COMPARE   ONE,VALIDFLG                 * valid claim on pmsect? (1=no)
          GOTO      PROC0500 IF EQUAL
.
          MATCH     "CA",KEY2
          IF        @EQUAL
            CALL      WECA0000                   * pmsecaaf
          ENDIF
.
          MATCH     "AH",KEY2
          IF        @EQUAL
            CALL      WEAH0000                   * pmseahaf
          ENDIF
.
          MATCH     "AD",KEY2
          IF        @EQUAL
            CALL      WEAD0000                   * pmseadaf
          ENDIF
.
          MATCH     "SH",KEY2
          IF        @EQUAL
            CALL      WESH0000                   * pmseshaf
          ENDIF
.
          MATCH     "SD",KEY2
          IF        @EQUAL
            CALL      WESD0000                   * pmsesdaf
          ENDIF
.
          GOTO      PROC0500                     * get next record
.
.         Import of claim related data has been completed, so now
.         get the batch data from eclbatch.
.
PROC6000  MOVE      ZERO,BATCOUNT                * initialise batch counter
.
          DISPLAY   *P1:24,*EL,"Processing eclbatch: ";
.
PROC6500  READ      BATFILE1,SEQ;IMPRTDAT
          GOTO      PROC9000 IF OVER             * eof
.
          MOVE      IMPRTDAT,KEY14
          DISPLAY   *P22:24,*EL,*V2LON,KEY14
.
          ADD       ONE,BATCNT                   * increment record count
.
.         Write record to batch file
.
          CALL      WEBH0000                     * pmsebhaf
.
          GOTO      PROC6500                     * get next record
.
PROC9000  CLOSE     BATFILE1                     * close export files
          CLOSE     CLMFILE1
.
          DISPLAY   *P1:23,*EL,*V2LON,ECTCOUNT,*HOFF," claims imported.  ";
          DISPLAY   *P1:24,*EL,*V2LON,BATCOUNT,*HOFF," batches imported.  ";
          CALL      HITENTER
.
PROC9999  RETURN
+
.*****************************************************************************
.*                              WECT0000                                     *
.*                      Write a pmsectaf record                              *
.*****************************************************************************
WECT0000  UNPACK    IMPRTDAT,DIM2,PMECHFND,PMECADMN,PMECINVN:
                             PMECBATN,PMECURNO,PMECPBAT,PMECNBAT,PMECCCFL:
                             PMECTRID,DIM1,DIM15A,DIM15B,PMECPDAT,PMECSTAT:
                             PMECFTID,PMECSPAR
          MOVE      DIM2,PMECFLAG
          MOVE      DIM1,PMECEETP
          MOVE      DIM15A,PMECAMTC
          MOVE      DIM15B,PMECAMTP
          PACK      PMECHOSP,SP70
          PACK      PMECSPAR,SP70
.
          PACK      KEY8,PMECINVN
          CALL      RDINV1                  * check invoice number exists in v9
          BRANCH    OVRCD,WECT9200
.
          PACK      KEY8,PMECADMN
          CALL      RDMISS1                 * get claim code/hfund from admiss
          BRANCH    OVRCD,WECT9500
.
          IF        PMECEETP=1
            PACK      PMECHFND,ACLAIM,SP70  * claim code
          ELSE
            PACK      PMECHFND,AFUNDH,SP70  * health fund
          ENDIF
.
          PACK      KEY35,PMECHOSP,PMECFLAG,PMECHFND,PMECADMN,PMECINVN,PMECBATN
          CALL      RAPMECT1
          IF        OVRCD=1
            CALL      WRPMECT1
            ADD       ONE,ECTCOUNT               * increment counter
          ENDIF
.
WECT9000  MOVE      ZERO,VALIDFLG                * valid record written
          GOTO      WECT9999
.
WECT9200  MOVE      ONE,VALIDFLG                 * error: no record written
          MOVE      "Invoice number does not exist in v9",ERRMSG
          MOVE      PMECINVN,ERRMINVN
          MOVE      PMECADMN,ERRMADMN
          MOVE      PMECURNO,ERRMURNO
          MOVE      PMECBATN,ERRMBATN
          CALL      PERR0000
          GOTO      WECT9999
.
WECT9500  MOVE      ONE,VALIDFLG                 * error: no record written
          MOVE      "Admission number does not exist in v9",ERRMSG
          MOVE      PMECINVN,ERRMINVN
          MOVE      PMECADMN,ERRMADMN
          MOVE      PMECURNO,ERRMURNO
          MOVE      PMECBATN,ERRMBATN
          CALL      PERR0000
WECT9999  RETURN
+
.*****************************************************************************
.*                              WECA0000                                     *
.*                      Write a pmsecaaf record                              *
.*****************************************************************************
WECA0000  UNPACK    IMPRTDAT,PMEAINVN,PMEADATE,PMEATIME:
                             PMEABATN,DIM2,PMEATYPE,DIM4,PMEATRID:
                             PMEAEROR,PMEASPAR
          MOVE      DIM2,PMEASTAT
          PACK      PMEAOPER,SP70
          PACK      PMEAEROT,SP70,SP70
          PACK      PMEASPAR,SP70
.
          PACK      KEY26,PMEAINVN,PMEADATE,PMEATIME,PMEATYPE
          CALL      RAPMECA1
          IF        OVRCD=1
            CALL      WRPMECA1
          ENDIF
.
WECA9999  RETURN
+
.*****************************************************************************
.*                              WEAH0000                                     *
.*                      Write a pmseahaf record                              *
.*****************************************************************************
WEAH0000  UNPACK    IMPRTDAT,PMAHFBID,PMAHARID,PMAHFRID:
                             PMAHRPTC,PMAHFSCD,PMAHFCID,PMAHCFAC,PMAHTCAM:
                             PMAHTBAM,PMAHEXAM,PMAHCPAM,PMAHFTID,PMAHUDTE:
                             PMAHUTIM,PMAHSPAR
          PACK      PMAHSPAR,SP70
.
          PACK      KEY38,PMAHFBID,PMAHARID,PMAHFRID,PMAHRPTC
          CALL      RAPMEAH1
          IF        OVRCD=1
            CALL      WRPMEAH1
          ENDIF
.
WEAH9999  RETURN
+
.*****************************************************************************
.*                              WEAD0000                                     *
.*                      Write a pmseadaf record                              *
.*****************************************************************************
WEAD0000  UNPACK    IMPRTDAT,PMADFBID,PMADARID,PMADFRID:
                             PMADRPTC,PMADCFEC,PMADEXPC,PMADCFET,PMADELNM:
                             PMADMPID,PMADSPAR
          PACK      PMADSPAR,SP70
.
          PACK      KEY45,PMADFBID,PMADARID,PMADFRID,PMADRPTC,PMADCFEC,PMADEXPC
          CALL      RAPMEAD1
          IF        OVRCD=1
            CALL      WRPMEAD1
          ENDIF
.
WEAD9999  RETURN
+
.*****************************************************************************
.*                              WESH0000                                     *
.*                      Write a pmseshaf record                              *
.*****************************************************************************
WESH0000  UNPACK    IMPRTDAT,PMSHFBID,PMSHARID,PMSHFRID:
                             PMSHRPTC,PMSHSCOD,PMSHSRVC,PMSHSDSC,PMSHNOSV:
                             PMSHCAMT,PMSHFBAM,PMSHFDTE,PMSHTDTE,PMSHSDTE:
                             PMSHSPAR
          PACK      PMSHSPAR,SP70
.
          PACK      KEY52,PMSHFBID,PMSHARID,PMSHFRID,PMSHRPTC,PMSHSCOD,PMSHSRVC
          CALL      RAPMESH1
          IF        OVRCD=1
            CALL      WRPMESH1
          ENDIF
.
WESH9999  RETURN
+
.*****************************************************************************
.*                              WESD0000                                     *
.*                      Write a pmsesdaf record                              *
.*****************************************************************************
WESD0000  UNPACK    IMPRTDAT,PMSDFBID,PMSDARID,PMSDFRID:
                             PMSDRPTC,PMSDSCOD,PMSDSRVC,PMSDSFEC,PMSDSEXC:
                             PMSDSFET,PMSDSPAR
          PACK      PMSDSPAR,SP70
.
          PACK      KEY59,PMSDFBID,PMSDARID,PMSDFRID,PMSDRPTC,PMSDSCOD,PMSDSRVC,PMSDSFEC,PMSDSEXC
          CALL      RAPMESD1
          IF        OVRCD=1
            CALL      WRPMESD1
          ENDIF
.
WESD9999  RETURN
+
.*****************************************************************************
.*                              WEBH0000                                     *
.*                      Write a pmsebhaf record                              *
.*****************************************************************************
WEBH0000  UNPACK    IMPRTDAT,PMEBBTHN,PMEBHFND,DIM15A,DIM6:
                             PMEBDTBC,PMEBTMBC,DIM4,DIM1,PMEBEFNM:
                             PMEBLOCN,PMEBSNID,PMEBSPAR
          MOVE      DIM15A,PMEBBHTL
          MOVE      DIM6,PMEBTRIB
          MOVE      DIM1,PMEBEETP
          PACK      PMEBOPER,SP70
          PACK      PMEBSPAR,SP70
.
          PACK      KEY24,PMEBBTHN,SP70
          CALL      RSPMECT3
          CALL      RKPMECT3
          BRANCH    OVRCD,WEBH9000
.
          MATCH     PMEBBTHN,PMECBATN
          GOTO      WEBH9000 IF NOT EQUAL   * same batch?
.
          COMPARE   PMEBEETP,PMECEETP
          GOTO      WEBH9100 IF NOT EQUAL   * same extract type?
.
          MOVE      PMECHFND,PMEBHFND       * get claim code/hfund from pmsect
.
          PACK      KEY8,PMEBBTHN
          CALL      RAPMEBH1
          IF        OVRCD=1
            CALL      WRPMEBH1
            ADD       ONE,BATCOUNT               * increment batch counter
          ENDIF
          GOTO      WEBH9999
.
WEBH9000  MOVE      "Batch does not exist on pmsectaf in v9",ERRMSG
          MOVE      SP70,ERRMINVN
          MOVE      SP70,ERRMADMN
          MOVE      SP70,ERRMURNO
          MOVE      PMEBBTHN,ERRMBATN
          CALL      PERR0000
          GOTO      WEBH9999
.
WEBH9100  MOVE      "Batch extract type does not match pmsectaf in v9",ERRMSG
          MOVE      SP70,ERRMINVN
          MOVE      SP70,ERRMADMN
          MOVE      SP70,ERRMURNO
          MOVE      PMEBBTHN,ERRMBATN
          CALL      PERR0000
          GOTO      WEBH9999
.
WEBH9999  RETURN
+
.******************************************************************************
.*                                  HEAD0000                                  *
.*                             Print Report Header                            *
.******************************************************************************
HEAD0000  CALL      HEAD132
.
          PRINT     *N,*1,"Error Report"
.
          CALL      UND132
          PRINT     *1,PIPE,*3,"Invoice",*12,PIPE,*14,"Admission",*24,PIPE:
                    *26,"U/R Number",*37,PIPE,*39,"Batch",*48,PIPE:
                    *50,"Error",*132,PIPE
          CALL      UND132
          MOVE      EIGHT,CLNO
.
HEAD9000  MOVE      ZERO,EXIT
.
HEAD9999  RETURN
+
.*****************************************************************************
.*                                  PERR0000                                 *
.*                             Print Error Message                           *
.* Requires: ERRMSG - error description                                      *
.*           ERRMINVN - invoice number                                       *
.*           ERRMADMN - admission number                                     *
.*           ERRMURNO - U/R number                                           *
.*           ERRMBATN - Batch number                                         *
.*****************************************************************************
PERR0000  COMPARE   "55",CLNO                    * page full ?
          CALL      HEAD0000 IF NOT LESS         * yes
.
          PACK      ERRMSG,ERRMSG,SP30,SP30
          PRINT     *1,PIPE,*3,ERRMINVN,*12,PIPE,*14,ERRMADMN,*24,PIPE:
                    *27,ERRMURNO,*37,PIPE,*39,ERRMBATN,*48,PIPE:
                    *50,ERRMSG,*132,PIPE
          ADD       ONE,CLNO
.
          ADD       ONE,ERRCT             * Increment the error counter
.
PERR9999  RETURN
+
.******************************************************************************
.*                                  TAIL0000                                  *
.*                              Print Report Tail                             *
.******************************************************************************
TAIL0000  CALL      UND132
.
          PRINT     *N,*1,"Total Claims  Read      : ",ECTCNT:
                    *N,*1,"Total Batches Read      : ",BATCNT:
                    *N,*1,"Total Number of Errors  : ",ERRCT:
                    *N,*N,*1,"Total Claims Imported   : ",ECTCOUNT:
                    *N,*1,"Total Batches Imported  : ",BATCOUNT
.
          PRINT     *N,*N,"*** End of Report ***"
.
TAIL9000  MOVE      ZERO,EXIT
.
TAIL9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       PATINVIO/INC
          INC       PATMI1IO/INC
          INC       PMSVX1IO/INC
          INC       PMSEADIO/INC
          INC       PMSEAHIO/INC
          INC       PMSEBHIO/INC
          INC       PMSECAIO/INC
          INC       PMSECTIO/INC
          INC       PMSESDIO/INC
          INC       PMSESHIO/INC
