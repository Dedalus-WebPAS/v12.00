.******************************************************************************
.* System         : Patient Management                                        *
.* Include        : WEBGROUP.PBL                                              *
.* Name           : DRG Grouper and Codefinder Interfaces                     *
.******************************************************************************
.* Date           : 12/10/1999                                                *
.* Author         : Davin Sloan                                               *
.* Function       : Send & Receive Patient Disease & Operation Codes to the   *
.*                  various Coding & Grouping products - 3M Codefinder, Unix  *
.*                  Grouper, PC Grouper (CME) and TurboGrouper.               *
.* Modifications  :                                                           *
.*----------------------------------------------------------------------------*
.*        V12.00.03 10/09/2025  Ebon Clements    TSK 0961623                  *
.*                  Format visit number when returned form codefinder to      *
.*                  remove the leading zero - LODEPID                         *
.*        V12.00.02 29/05/2025  Ebon Clements    TSK 0950532                  *
.*                  Validate cluster id values when loaded from Codefinder    *
.*                  and Turbogrouper - VLDCID00                               *
.*        V12.00.01 22/05/2025  J.Tan          TSK 0955096                    *
.*                  Added Alphanumeric visit number changes                   *
.*        V11.05.06 30/04/2025  Ebon Clements    TSK 0950532                  *
.*                  Fixed NWAU diagnosis cluster id expor to CGS unix grouper *
.*                  WRUNIX1                                                   *
.*        V11.05.08 17/04/2025  Ebon Clements    TSK 0950532                  *
.*                  Added diagnosis cluster id to CGS unix grouper            *
.*        V11.05.07 17/04/2025  Ebon Clements    TSK 0950532                  *
.*                  Added diagnosis cluster id to TurboGrouper                *
.*                  and CodeFinder                                            *
.*        V11.05.06 08/04/2025  Ebon Clements    TSK 0950532                  *
.*                  Added diagnosis cluster id functionality                  *
.*                  08/04/2025  Davin            TSK 0951723                  *
.*                  Send procedure codes with prefix I to grouping products   *
.*                  (based on parameter mrcnpigp)                             *
.*                  Enable procedure code prefixes to be sent to and received *
.*                  from Codefinder (RLTAGS55/ENCDT604)                       *
.*        V11.05.05 27/03/2025  Davin            TSK 0956210                  *
.*                  Added PTCNE120 and PTCN120C for DRG Ver 12.0              *
.*        V11.05.04 07/03/2025  Ebon Clements    TSK 0944729                  *
.*                  Restored complication prefix default for QLD when loading *
.*                  codefinder diseases and the condition arose during        *
.*        V11.05.03 06/02/2025  Ebon Clements    TSK 0956930                  *
.*                  Corrected clear grouper procedures - CLR41000             *
.*        V11.05.02 03/02/2025  Ebon Clements    TSK 0951861                  *
.*                  Added default clinician from theatre case functionality   *
.*                  to load Codefinder - GOCLN000 CLTC0000                    *
.*        V11.05.01 15/11/2024  Davin            TSK 0950787                  *
.*                  Send CTYPE Tag to Codefinder based on MRCNSCTC (WRENC050) *
.*        V11.04.05 12/09/2024  Davin            TSK 0922271                  *
.*                  Mods to cater for 100 Diag/Op codes for grouper (3mcgs)   *
.*        V11.04.04 04/07/2024  Ebon Clements    TSK 0948817                  *
.*        V11.05.06 08/04/2025  Ebon Clements    TSK 0950532                  *
.*                  Added diagnosis cluster id functionality                  *
.*                  08/04/2025  Davin            TSK 0951723                  *
.*                  Send procedure codes with prefix I to grouping products   *
.*                  (based on parameter mrcnpigp)                             *
.*                  Enable procedure code prefixes to be sent to and received *
.*                  from Codefinder (RLTAGS55/ENCDT604)                       *
.*        V11.05.05 27/03/2025  Davin            TSK 0956210                  *
.*                  Added PTCNE120 and PTCN120C for DRG Ver 12.0              *
.*        V11.05.04 07/03/2025  Ebon Clements    TSK 0944729                  *
.*                  Restored complication prefix default for QLD when loading *
.*                  codefinder diseases and the condition arose during        *
.*        V11.05.03 06/02/2025  Ebon Clements    TSK 0956930                  *
.*                  Corrected clear grouper procedures - CLR41000             *
.*        V11.05.02 03/02/2025  Ebon Clements    TSK 0951861                  *
.*                  Added default clinician from theatre case functionality   *
.*                  to load Codefinder - GOCLN000 CLTC0000                    *
.*        V11.05.01 15/11/2024  Davin            TSK 0950787                  *
.*                  Send CTYPE Tag to Codefinder based on MRCNSCTC (WRENC050) *
.*        V11.04.05 12/09/2024  Davin            TSK 0922271                  *
.*                  Mods to cater for 100 Diag/Op codes for grouper (3mcgs)   *
.*        V11.04.04 04/07/2024  Ebon Clements    TSK 0948817                  *
.*                  Added parameter to determine which separation mode field  *
.*                  is reported to CGS and codefinder EXT41000 GETDSP00       *
.*        V11.04.03 14/06/2024  Davin            TSK 0937495                  *
.*                  Populate DCL values from new positions when grouping with *
.*                  CGS Unix Grouper v11 (added DRGCCL30/XDRGCF01 - XDRGCF40) *
.*        V11.04.02 22/02/2024  Ebon Clements    TSK 0943354                  *
.*                  Added PTCNDRSM using cat D or DD test to TG export        *
.*                  separation mode - POPTB0000 XTRB0042                      *
.*        V11.04.01 23/01/2024  Davin            TSK 0928468                  *
.*                  Added routines for AMHCC Grouper functionality:           *
.*                  SETGRP80/CLRAM000/POPAM000/WAMGRP00/LODAM000/FAMHC000     *
.*        V11.03.08 26/09/2023  Ebon Clements  TSK 0934837                    * 
.*                  Added defult of clincian to load Codefinder - GOCLN000    *
.*        V11.03.07 26/09/2023  PJ Le Febour     TSK 0937679                  *
.*                  change AGE field Patients Birth Date space Admit Date     *
.*                  functionality - WRENC020                                  *
.*        V11.03.06 04/09/2023  Ebon Clements    TSK 0936661                  *
.*                  Added TurboGrouper load QLD condition onset flag          *
.*                  functionality -  WRTDG000                                 *
.*        V11.03.05 21/08/2023  Davin            TSK 0935074                  *
.*                  Always match procedure date when loading operation codes  *
.*                  back from codefinder (COPRS310)                           *
.*        V11.03.04 14/07/2023  Bella Turco      TSK 0901388                  *
.*                  Changed MATCH conditions for MRCNEACA in SETGRP25 and     *
.*                  SETGRP30                                                  * 
.*        V11.03.03 26/06/2023  Ebon Clements    TSK 0932535                  *
.*                  Report 3M separation mode from cat D/DD user defined      *
.*                  field 3 post DRG 11                                       *
.*        V11.03.02 23/12/2022  Davin            TSK 0926029                  *
.*                  Use pateco code/desc for non-hosp operations (GNHOP000)   *
.*        V11.03.01 29/11/2022  Jacob Jackson    TSK 0918314                  *
.*                  Replace RAPTECO1 and RAPTECD1 with RDPTECO1 and RDPTECD1  *
.*                  to stop the I*P error                                     *
.*        V11.02.07 12/07/2022  Ebon Clements    TSK 0920004                  *
.*                  Added wahpdate test to load codefinder procedures to stop *
.*                  the auto default of the precedure date - COPRS000         *
.*        V11.02.06 14/06/2022  Ebon Clements    TSK 0906596                  *
.*                  Added TurboGrouper vars XTRB0120 to XTRB0147              *
.*                  Charlson score. Added upates of paticuaf Charlson score.  *
.*                  Changed CLRICU00 to a common clear CLPATICU               *
.*        V11.02.05 02/06/2022  Ebon Clements    TSK 0920519                  *
.*                  Change Aboriginality for all grouping products to use     *
.*                  cat VA indicator 4 instead of indicator 3                 *
.*        V11.02.04 20/04/2022  Davin            TSK 0917793                  *
.*                  Added PTCNE110 and PTCN110C for DRG Ver 11.0              *
.*        V11.02.03 24/03/2022  Thanh T          TSK 0901057                  *
.*                  Changed SETGRP20/SETGRP30 to call CLRACC00 for clearing   *
.*                  the coding date                                           *
.*        V11.02.02 09/02/2022  Ebon Clements    TSK 0915238                  *
.*                  Added export and import of operation start/end times      *
.*                  to TG interface - XTRB51XX and XTRB104X                   *
.*        V11.02.01 08/02/2022  Ebon Clements    TSK 0915238                  *
.*                  Fixed TG load of operation times for the same procedure   *
.*                  code on different dates - LODOD600                        *
.*----------------------------------------------------------------------------*
.*        V11.01.23 22/12/2021  Ebon Clements    TSK 0914724                  *
.*                  Added OVRCD call in RDUNIX1 for UNIXNWAU                  *
.*        V11.01.22 19/11/2021  Ebon Clements    TSK 0911383                  *
.*                  Added CGS Condition onset flag for NWAU - GTCOD000        *
.*                  WRUNIX1                                                   *
.*        V11.01.21 17/11/2021  Ebon Clements    TSK 0911414                  *
.*                  Add NICU hrs to ICU hrs for Codefinder/CGS - EXT41000 -   *
.*                  XDRGICUH                                                  *
.*        V11.01.21 17/11/2021  Ebon Clements    TSK 0911414                  *
.*                  Populate XTRB0022 - TG post code for NWAU - POPTB000      *
.*                  Add NICU hrs to ICU hrs XTRB0037 for NWAU - POPTB000      *
.*                  Populate XTRB0034 - TG Psychiatric Care Days - POPT0000   *
.*                  Populate XTRB0035 - TG Qualified Days Newborns - POPT0000 *
.*        V11.01.20 10.11.2021  DA Sarkies       TSK 0898433                  *
.*                  Added line to convert double quotes to single quotes when *
.*                  loading from the encoder                                  *
.*        V11.01.19 05/10/2021  Ebon Clements    TSK 0909694                  *
.*                  Fixed blank XDRGCCTY test - Care Type - Codefinder input  *
.*                  Tag "CTYPE: WRENC020                                      *
.*        V11.01.18 15/09/2021  Ebon Clements    TSK 0902389                  *
.*                  Changed 3M Codefinder and 3M Unix grouper to report       *
.*                  urgency of admission from cat P ind 16 instead of ind 12  *
.*                  EXT41500 - XDRGURGA                                       *
.*        V11.01.17 14/09/2021  Ebon Clements    TSK 0897701                  *
.*                  Populate gender value with cat G ind 4 for codefinder,    *
.*                  TG and unix grouper if populated - EXT41000 & POPTB000    *
.*        V11.01.16 20/08/2021  Ebon Clements    TSK 0909624                  *
.*                  Removed age and departure status rule around reporting    *
.*                  the LOS to 3M unix grouper - XDRGALS2 - EXT41500          *
.*        V11.01.15 05/08/2021  Ebon Clements    TSK 0909694                  *
.*                  Added XDRGCCTY - Care Type - Codefinder input             *
.*                  Tag "CTYPE: WRENC020                                      *
.*        V11.01.14 04/08/2021  Ebon Clements    TSK 0909442                  *
.*                  Added XDRGATYP - Admit Type - NZ - Codefinder input       *
.*                  Tag ADTTYP: WRENC020                                      *
.*        V11.01.13 13/07/2021  Ebon Clements    TSK 0902615                  *
.*                  Fixed not using NWAU test - MRCNUNWA                      * 
.*        V11.01.12 07/07/2021  Ebon Clements    TSK 0908708                  *
.*                  Fixed send of codefinder ICU hours - XDRGICUH             *
.*        V11.01.11 06/07/2021  Ebon Clements    TSK 0908709                  *
.*                  Send cat S (ASRCE) ind 17 for the admission mode in       *
.*                  TG, codefinded and unix grouper                           *
.*        V11.01.10 30/06/2021  Ebon Clements    TSK 0902615                  *
.*                  Fixed sending of care type to TG - POPTB000               *
.*        V11.01.09 30/06/2021  Ebon Clements    TSK 0902615                  *
.*                  Don't restrict codes send to the unix grouper if          *
.*                  we are using NWAU - RSTRD000                              *
.*        V11.01.08 29/06/2021  Ebon Clements    TSK 0902615                  *
.*                  SQUEEZE NWAU total in RDUNIX1 - XDRGNWAU                  *
.*        V11.01.07 24/06/2021  Ebon Clements    TSK 0902615                  *
.*                  Clear XDRGTOTN in CLR41000                                *
.*        V11.01.06 22/06/2021  Ebon Clements    TSK 0907810                  *
.*                  Retain contract care flag for diagnosis - CDISS000        *
.*        V11.01.05 18/06/2021  Ebon Clements    TSK 0902615                  *
.*                  Added UNIXNWAU - Unix grouper export and import NWAU      *
.*                  fields                                                    *
.*        V11.01.04 05/05/2021  Ebon Clements  TSK 0902615                    *
.*                  Added read of NWAU parameters MRCNUNWA and MRCNENWA       *
.*                  Added export and import NWAU values                       *
.*        V11.01.01 22/02/2021  J.Tan          TSK 0888639                    *
.*                  Changed patmmbs counter record to DIM3                    *
.*        V11.00.11 09/02/2021  Ebon Clements    TSK 0895992                  *
.*                  Set clear of coding complete date flag  when loading TG   *
.*                  data if parameter set - SETGRP60  - SETCLACC              *
.*                  Don't set coding complete when loading TG data - WRPGR500 *
.*                  Use long ICD diagnosis description - WRTDG000              *
.*        V11.00.10 08/10/2020  Ebon Clements    TSK 0892694                  *
.*                  Export 6.2 DRG as 6.0x to TurboGrouper - POPTB000         *
.*        V11.00.09 16/11/2020  Ebon Clements    TSK 0892694                  *
.*                  Export health fund ID, Name and AR DRG to TurboGrouper    *
.*                  XTRB0115 to XTRB0119                                      *
.*        V11.00.08 26/10/2020  Ebon Clements    TSK 0895778                  *
.*                  Fixed load encoder DRG grouper V10 write to patpgraf      *
.*                  should be 100 not 010 - ENCLIN00                          *
.*        V11.00.07 09/07/2020  Ebon Clements    TSK 0894249                  *
.*                  Fixed TurboGrouper DRG 10 write to patpgraf should be     *
.*                  100 not 010                                               *
.*        V11.00.06 08/07/2020  Ebon Clements    TSK 0894249                  *
.*                  Only load TurboGrouper DRG versions according to          *
.*                  the DRG go live dates - TBLDRG00                          *
.*        V11.00.05 30/06/2020  J.Tan            TSK 0886178                  *
.*                  Added GETCHSCR - automate calculate Charlson score        *
.*        V11.00.04 20/05/2020  Davin            TSK 0890603                  *
.*                  If MRCNRDSG=2, only restrict diagnosis codes sent to      *
.*                  grouper for public patients (RSTRD000)                    *
.*        V11.00.03 15/05/2020  Ebon Clements    TSK 0891590                  *
.*                  Load TurboGrouper XTRB0053 DRG version 6.2 from 6.0x      *
.*                  WRPGR000                                                  *
.*        V11.00.02 30/04/2020  Jill Parkinson Task 0891317                   *
.*                  Modified UNXGRP00 to work for DRG 10.0                    *
.*        V11.00.01 31/03/2020  Ebon Clements    TSK 0889596                  *
.*                  Call mrtweb02.us7 for TG import if not MRTWEB02 - SETGRP70*
.*        V10.15.04 17/02/2020  Davin            TSK 0881493                  *
.*                  Removed WIES eligibility check when restricting diagnosis *
.*                  codes sent to grouper (RSTRD000)                          *
.*        V10.15.03 11/02/2020  Ebon Clements    TSK 0888205                  *
.*                  Added trap IO around load TurboGrouper writes             *
.*                  WRTDG000, WRTOP000, WRPGR000 & WRECM000                   *
.*        V10.15.02 06/11/2019  Nicole Torrisi   TSK 0881409                  *
.*                  Added HMV for NZ                                          *
.*        V10.15.01 09/10/2019  Ebon Clements    TSK 0877429                  *
.*                  Added channel and job to TurbGrouper import/export file   *
.*                  names                                                     *
.*        V10.14.13 30/09/2019  Ebon Clements    TSK 0877430                  *
.*                  Added TurboGrouper fields XTRB0106 to XTRB114X            *
.*        V10.14.12 30/09/2019  Ebon Clements    TSK 0877428                  *
.*                  Populate TurboGrouper campus code - XTRB114X - XTRB0007   *
.*        V10.14.11 04/06/2019  Ebon Clements    TSK 0875790                  *
.*                  Added TurboGrouper operation prefix - XTRB105X            *
.*                  05/06/2019  Nicole Torrisi   TSK 0875762                  *
.*                  Added check for PTCNHDPS = 7 (TAS)  to GDSPX300           *
.*        V10.14.10 31/05/2019  Ebon Clements    TSK 0875696                  *
.*                  Added TurboGrouper retain original primary diagnosis      *
.*                  coder id - XTRB45CI                                       *
.*        V10.14.09 21/05/2019  Davin            TSK 0870480                  *
.*                  Changed codefinder tag format for ECCSRAW (ENCLIN50)      *
.*        V10.14.08 14/05/2019  Ebon Clements    TSK 0874778                  *
.*                  Fixed 3 character TurboGrouper diagnosis code import      *
.*                  WRTDG000                                                  *
.*        V10.14.07 13/05/2019  Jill Parkinson Task 0871398                   *
.*                  Added check for OVER in RLTAGS00 to stop possibility of   *
.*                  a loop                                                    *
.*        V10.14.06 02/05/2019  Ebon Clements    TSK 0874135                  *
.*                  Added TurboGrouper theatre date/time defaults             *
.*        V10.14.05 30/04/2019  Ebon Clements    TSK 0873995                  *
.*                  Added TURBOSAV to retain previous operation date/times    *
.*        V10.14.04 27/03/2019  Ebon Clements    TSK 0872200                  *
.*                  Added remote user id to TurboGrouper batch grouping       *
.*                  SETGRP70 - MRCNTUSR                                       *
.*        V10.14.03 27/03/2019  Ebon Clements    TSK 0872200                  *
.*                  Export TurboGrouper XTRB0030 leave days                   *
.*        V10.14.02 04/03/2019  Ebon Clements    TSK 0870711                  *
.*                  Added TurboGrouper retain operation time vars             *
.*                  27/02/2019  Richa Phogat     TSK 0870439                  *
.*                  Added PTCNE100 and PTCN100C for DRG Ver 10.0              *
.*        V10.14.01 26/02/2019  Ebon Clements    TSK 0870711                  *
.*                  Changed TurboGrouper to accept 200 diagnosis/procedure    *
.*                  codes                                                     *
.*        V10.13.05 24/01/2019  Ebon Clements    TSK 0869592                  *
.*                  Remove trailing spaces from TurboGrouper export file      *
.*                  WTBGRP00                                                  *
.*        V10.13.04 20/12/2018  Don Nguyen       TSK 0837732                  *
.*                  Modified GODTM000 to get the first matching MBS Item      *
.*                  time values (if operation date exists).                   *
.*        V10.13.03 01/11/2018  Davin            TSK 0852820                  *
.*                  Use "TOTWT:" tag instead of "BWIES: + copayments" as the  *
.*                  NZ WIES value to save from codefinder (LODENC00)          *
.*        V10.13.02 12/10/2018  Ebon Clements    TSK 0863023                  *
.*                  Added SQUEEZE KEY5 to fix HNIV: tag in LODENC00           *
.*        V10.13.01 06/09/2018  Richa Phogat     TSK 0862786                  *
.*                  Commented condition bypassing Morphology in ENCDT000      *
.*        V10.12.04 05/06/2018  Ebon Clements    TSK 0845772                  *
.*                  Fixed TurboGrouper diagnosis input/output                 *
.*        V10.12.03 04/05/2018  Ebon Clements    TSK 0845772                  *
.*                  Added TurboGrouper functionality                          *
.*        V10.12.02 23/03/2018  Tracey Nguyen    TSK 0852793                  *
.*                  Added PTCNED90 and PTCNC90C for DRG Ver 9.0               *
.*        V10.12.01 29/01/2018  Ania P           TSK 0851398                  *
.*                  Fixed I * D error                                         *
.*        V10.11.04 15/12/2017  Peter Vela       TSK 0847747                  *
.*                  Added direct read of discharge table POSTC000 POSTE000    *
.*        V10.11.03 11/12/2017  Don Nguyen       TSK 0848767                  *
.*                  Modified GDSPX300 to include ACT State Code (PTCNHDPS=9)  *
.*        V10.11.02 27/09/2017  Davin            TSK 0845070                  *
.*                  Added SQUEEZE KEY10 to fix codefinder BWIES tag for NZ    *
.*        V10.11.01 08/08/2017  Davin            TSK 0842626                  *
.*                  Added routine to Restrict Diagnosis Codes sent to Grouper *
.*                  for WIES eligible patients (RSTRD000)                     *
.*        V10.10.05 22/06/2017  Davin            TSK 0836775                  *
.*                  Mods to source mental health legal status from mehdlsaf   *
.*                  (determined by Cat.CC indicator 5 ='P') (EXT41110)        *
.*        V10.10.04 01/06/2017  Don Nguyen       TSK 0838360                  *
.*                  Fixed RLTAGS00 to break out of processing 'COD:' related  *
.*                  tags when the next 'COD:' tag is read; whilst still       *
.*                  ignoring unrecognised 'COD:' related tags.                *
.*        V10.10.03 30/05/2017  Don Nguyen       TSK 0838196                  *
.*                  Modified SETGRP15 to skip execution of 'mrtweb02.us1' &   *
.*                  'mrtweb02.us2' if PTCNOENC is set to use Web Codefinder.  *
.*                  Used WCFINPFN & WCFOUTFN instead of FILENAM2 & ENCOUTFN.  *
.*        V10.10.02 26/05/2017  Don Nguyen       TSK 0838196                  *
.*                  Modified SETGRP10 to validate if PTCNOENC is set to use   *
.*                  Web Codefinder interface and change input filename format *
.*                  to use UR + Admission Number; to remove any ambiguity     *
.*                  for concurrent processing of different patients.          *
.*        V10.10.01 28/04/2017  Davin            TSK 0836380                  *
.*                  Modified GDSPX300 to include NT in if statement           *
.*                  Morphology codes were getting incorrect prefix for NT     *
.*        V10.09.01 18/01/2016  Jill Parkinson   TSK 0831665                  *
.*                  Removed setting of PTEDOSET to spaces for morphology codes*
.*                  for qld sites                                             *
.*        V10.08.09 06/01/2016  Jill Parkinson   TSK 0831665                  *
.*                  Modified GDSPX300 to include QLD in if statement          *
.*                  Morphology codes were getting incorrect prefix for QLD    *
.*        V10.08.08 08/11/2016  Don Nguyen       TSK 0828544                  *
.*                  Modified RLTAGS00 to process all tags; skip unknown ones. *
.*        V10.08.07 05/10/2016  Davin            TSK 0826104                  *
.*                  Added check for 'UNITS:' codefinder tag (RLTAGS00)        *
.*                  Moved check for PT0ODTMN to COPRS500                      *
.*        V10.08.06 14/09/2016  Davin            TSK 0307316                  *
.*                  Mods for web Interface to 3M Codefinder (ptcnoenc=2)      *
.*        V10.08.05 30/08/2016  Don Nguyen       TSK 0814947                  *
.*                  Modified COPRS000 to check PT0ODTMN when PROCDATE is blank*
.*        V10.08.04 26/08/2016  Don Nguyen       TSK 0312570                  *
.*                  Added check for PTCNDGED=1; use CFPAYCOD if set           *
.*        V10.08.03 27/04/2016  Don Nguyen       TSK 0815007                  *
.*                  Modified RDUNIX1 and RDCME1 - read in XDRGECRW value      *
.*        V10.08.02 13/04/2016  Don Nguyen       TSK 0321353                  *
.*                  Modified WRENC000 - use GETDRG to get the Grouper Version *
.*                  from the Health Fund/Claim Code instead of PTCNDGPV.      *
.*        V10.08.01 12/04/2016  Don Nguyen       TSK 0815007                  *
.*                  Modified ENCLIN00 - added processing for "I10ECCSRAW:"    *
.*                  Modified WRENC000 - added output of "HNIV:"               *
.******************************************************************************
.*        V10.06.06 30/07/2015  Don Nguyen       CAR 318792                   *
.*                  Modified RLTAGS00 - use KEY200 instead of KEY69 for TEXT  *
.*        V10.06.05 18/06/2015  Don Nguyen       CAR 314792                   *
.*                  Modified ENCDT000; output Accident Date (PTEDACDT)        *
.*        V10.06.04 11/06/2015  Patrick Adair    CAR 313223                   *
.*                  Modidifed EXT41000 to use ABWGHT in place of DIM4 for     *
.*                  Admission weight check.                                   *
.*        V10.06.03 29/05/2015  Ebon Clements    CAR 317097                   *
.*                  Added PTCNED80 and PTCNC80C for DRG Ver 7.0               *
.*        V10.06.02 10/04/2015  J.Tan           CAR 304813                    *
.*                  Mods to use patwieaf to calculate WIES value              *
.*        V10.06.01 24/03/2015  Don Nguyen       CAR 314100                   *
.*                  Modidifed output for "mrtweb02.us1" and "mrtweb02.us2"    *
.*                  in SETGRP00; added WBSELOGN to parameters.                *
.*        V10.05.01 09/09/2014  Davin            CAR 296980                   *
.*                  Add WIES21 (2014/2015 changes)                            *
.*                  Changed unix grouper running order from oldest version to *
.*                  latest version (unxgrp00)                                 *
.*        V10.04.02 03/07/2014  Ebon Clements    CAR 302036                   *
.*                  Added XDRGURGA - DRG Urgency of Admission to codefinder   *
.*        V10.04.01 13/03/2014  Don Nguyen       CAR 294888                   *
.*                  Modified WRENC000 to write "SYS" tag value                *
.*        V10.03.20 03/12/2013  Don Nguyen       CAR 284205                   *
.*                  Added another test condition to WRTDIS00 for blank prefix *
.*                  Complication value (use Associated instead).              *
.*        V10.03.19 02/12/2013  Don Nguyen       CAR 284205                   *
.*                  Modified WRTDIS00 to address spec update (inverse logic)  *
.*        V10.03.18 29/11/2013  Don Nguyen       CAR 284205                   *
.*                  Modified WRTDIS00 to utilise DISCOUNT in the logic        *
.*        V10.03.17 25/11/2013  Don Nguyen       CAR 284205                   *
.*                  Modified WRTDIS00 to process "PRFX" value for QLD & other *
.*        V10.03.16 14/10/2013  Don Nguyen       CAR 282453                   *
.*                  Added DACCDATE for PTEDACDT in WRTDIS00                   *
.*        V10.03.15 09/10/2013  Peter Vela       CAR 292070                   *
.*                  Modified to execute mrtweb02.ed8 script only once         *
.*                  And loop through all output files (depeneding on which    *
.*                  grouper version parameters are switched on) and write to  *
.*                  patpgraf.                                                 *
.*        V10.03.14 02/10/2013  Ania P           CAR 292081                   *
.*                  Added AUTH and VENDORAUTH tags.                           *
.*        V10.03.13 25/09/2013  Ania P           CAR 290324                   *
.*                  Adjustment to previous code based on further spec         *
.*        V10.03.12 29/08/2013  Ania P           CAR 290324                   *
.*                  Added functionality for readin in new "COD:" file         *
.*                  format in ENCLIN00                                        *
.*        V10.03.11 07/08/2013  Davin            CAR 284960                   *
.*                  Add WIES20 (2013/2014 changes)                            *
.*        V10.03.10 03/05/2013  Davin            CAR 284669 HDP 2013 DRG 7.0  *
.*                  Added PTCNED70 and PTCNC70C for DRG Ver 7.0               *
.*                  Added effective dates for previous grouper versions       *
.*                  Add WIES selections for DRG070                            *
.*                  Changed mrtweb02.ed5 to mrtweb02.ed8                      *
.*                  Removed check for default grouper (chkpr000/dfltvflg)     *
.*        V10.03.09 25/02/2013  Ania P           CAR 281021                   *
.*                  Removed unnecessary modification of constants.            *
.*        V10.03.08 27/07/2012  Mike Laming      CAR 271756                   *
.*                  Mods October 2012 Codefinder changes - see LODENC00,      *
.*                  WRENC000, STDRG000 (replaces SGVUN000 & SGV41000) & new   *
.*                  routines POSTE000/STEDG000                                *
.*        V10.03.07 23/08/2012  Davin            CAR 271916                   *
.*                  Added check for DRG62 in WIES19 (sgvun400)                *
.*        V10.03.06 07/08/2011  Davin            CAR 270114                   *
.*                  Add WIES19 (2012/2013 changes)                            *
.*        V10.03.05 31/07/2012  Mike Laming      CAR 269695                   *
.*                  Added "drg62o" into SETPTH00 (missed it first time)       *
.*        V10.03.04 26/06/2012  Mike Laming      CAR 267797 HDP 2012 DRG 6.2  *
.*                  Added PTCNU62G and PTCNC62C for DRG Ver 6.2 (Sect.10 152) *
.*                  Add WIES selections for DRG062 in SGV41000 & SETPTH00     *
.*        V10.03.03 18/06/2012  Don Nguyen       CAR 261697                   *
.*                  Corrected the default value of end date (EPENDDAT) for    *
.*                  DAYSEP calculations in CPDATS00.                          *
.*        V10.03.02 05/06/2012  Mike Laming      CAR 266421                   *
.*                  Moved CPDATS00 to WEBGROUP, add GRPSWICH to allow Dates   *
.*                  to be set for MRTWEB02 Report 7                           *
.*        V10.03.01 19/12/2011  Mike Laming      CAR 257260                   *
.*                  Change OPERDATE to also have "No default Date" (Option 2)"*
.*        V10.02.11 12/10/2011  Mike Laming      CAR 249210 & 249284          *
.*                  Fix ENCLIN00 for "PCCL." and RLTAGS00 for "ARE:" & "ARCL:"*
.*        V10.02.10 11/08/2011  Davin            CAR 238236                   *
.*                  Add WIES18 (2011/2012 changes)                            *
.*        V10.02.09 29/09/2011  Mike Laming      CAR 249011                   *
.*                  Added WAHEALTH to bypass Date processing for Operations   *
.*        V10.02.08 26/09/2011  Mike Laming      CAR 248747                   *
.*                  Mods to GDSPX000 to correct WA Disease Code Prefix        *
.*        V10.02.07 07/09/2011  Mike Laming      CAR 241939                   *
.*                  Mods to use ENCSTDAT & ENCENDAT to replace ADATE & DDATE  *
.*                  when creating Codefinder Tags "ADT:" & "DDT:"             *
.*        V10.02.06 01/09/2011  Steve Armstrong  CAR 248500                   *
.*                  Added DGCLICAC message triggers for disease coding.       *
.*        V10.02.05 31/08/2011  Mike Laming      CAR 241939                   *
.*                  Mods to SETGRP03, MEDCOD15 and WEBGROUP to Group Episodes *
.*        V10.02.04 23/08/2011  Mike Laming   CAR 249284 & 249210             *
.*                  Added output for "ARE:" into PTEDDRGD & PTEODRGD          *
.*                  Added output for "ARCL:" into PTEDCCCL                    *
.*        V10.02.03 23/06/2011  Mike Laming   CAR 240103                      *
.*                  Added output for "PHYS:" at ENCDT603                      *
.*        V10.02.02 11/04/2011  Mike Laming   CAR 240103                      *
.*                  Added validate Clinician Code from Codefinder in WRTPRO00 *
.*        V10.02.01 24/03/2011  Mike Laming   CAR 240107                      *
.*                  Change length of Indexes for PATECDaf and PATECOaf -      *
.*                  Alter KEYs                                                *
.*        V10.01.01 11/02/2011  Mike Laming      CAR 231176                   *
.*                  Add Cat."LS" to MH Legal Status at EXT41100               *
.*        V10.00.07 26/08/2010  Mike Laming      CAR 224176                   *
.*                  Mod to fix DISTYPE in GDSPX000, correct "P-C-A-M-" in PRFX:
.*        V10.00.06 09/08/2010  Mike Laming      CAR 227073                   *
.*                  Added "default Oper.Date" MRCNOPDT to GODTM000            *
.*        V10.00.05 02/08/2010  Mike Laming      CAR 227522                   *
.*                  Mods to UNXGRP00, UNXGXX00 & LODGRP00 to correct reading  *
.*                  of Unix & PC Grouper files                                *
.*        V10.00.04 09/07/2010  Mike Laming      CAR 224838                   *
.*                  Fix XDRGHMV where PTICUMEC from FORM4 to FORM5 (EXT41500) *
.*        V10.00.03 28/05/2010  Mike Laming      CAR 212604                   *
.*                  Mods to GDSPX000 for handling of incoming "PRFX:" -       *
.*                  VIC uses "PRFX:" for Disease Code Prefix                  *
.*                  Others use "PRFX:" for Onset Indicator                    *
.*        V10.00.02 05/05/2010  Mike Laming      CAR 212604                   *
.*                  Add "PRFX:" for Victorian Disease Code Prefix             *
.*        V10.00.01 24/03/2010  Davin            CAR 216505                   *
.*                  Add WIES17 (2010/2011 changes)                            *
.*        V9.12.06  18/11/2009  Mike Laming      CAR 210010                   *
.*                  Add NSW & WA to Morphology Prefix routine at GDSPX300     *
.*        V9.12.05  15/07/2009  Mike Laming      CAR 210379                   *
.*                  Correct "I*M" error on temp LODFILxx                      *
.*        V9.12.04  01/07/2009  Davin            CAR 199724                   *
.*                  Add WIES16 (2009/2010 changes)                            *
.*        V9.12.03  10/07/2009  Mike Laming      CAR 199900                   *
.*                  correct Procedure Date/Time in GODTM000 routine           *
.*        V9.12.02  29/06/2009  Mike Laming      CAR 199900                   *
.*                  Re-instate call to GODTM000 at COPRS500 (was comm'd out)  *
.*        V9.12.01  19/06/2009  Mike Laming      CAR 197814 HDP 2009 DRG 6.0  *
.*                  Added PTCNU60G and PTCNC60C for DRG Ver 6.0 (Sect.10 132) *
.*        V9.11.01  03/03/2009  Mike Laming      CAR 190768 plus              *
.*                  Major overhaul - New module ex PAT41GRP - see CARs        *
.*                  190768, 190853, 170698, 153475, 157428 & 157430           *
.******************************************************************************
.*        V9.10.02  03/10/2008  Davin            CAR 180172                   *
.*                  Fixed test for mrcngrup when returning grouper version in *
.*                  G51GP000 and G52GP000                                     *
.*        V9.10.01  17/07/2008  Davin            CAR 163993                   *
.*                  Add WIES15 (2008/2009 changes)                            *
.*        V9.09.03  27/08/2007  Steve Armstrong  CAR 148718                   *
.*                  Add WIES14 (2007/2008 changes) in SGVUN000.               *
.*        V9.09.02  01/08/2007  Steve Armstrong   CAR 145161                  *
.*                  Removed all reference to WIES 7, 8, 9 and 10 - no longer  *
.*                  supported.                                                *
.*        V9.09.01  17/07/2007  Steve Armstrong  CAR 145161                   *
.*                  Add WIES14 (2007/2008 changes)                            *
.******************************************************************************
.*        V9.08.02  12/04/2007  Mike Laming      CAR 137125 HDP 2007 DRG 5.2  *
.*                  Added PTCNU52G and PTCNC52C for DRG Ver 5.2 (Sect.10 144) *
.*        V9.08.01  25/10/2006  Davin S          CAR 121542                   *
.*                  Changed diagnostic onset type default (ptedoset)          *
.******************************************************************************
.*        V9.07.03  11/07/2006  Davin S          CAR 111764                   *
.*                  Add WIES13 (2006/2007 changes)                            *
.*        V9.07.02  10/07/2006 Peter Vela      CAR 111913                     *
.*                  Fixed mrtweb02.edx assignment in EXECUT00                 *
.*        V9.07.01  10/07/2006 Peter Vela      CAR 111913                     *
.*                  Added functionality for 5.1 Grouper in LODGRP00           *
.*        V9.06.03  25/05/2006 Davin S         CAR 104165                     *
.*                  Added diagnostic onset type (ptedoset)                    *
.*        V9.06.02  19/05/2006  Mike Laming   CAR 61562                       *
.*                  Correct a GOTO at GRP41300 for 5.1 Grouper                *
.*        V9.06.01  15/05/2006  Mike Laming     CAR 105244                    *
.*                  Added 2006 ICD10 Ed5 - go-live Date PTCNGDV5              *
.*        V9.05.B01 03/02/2006  Peter Vela    CAR 92244                       *
.*                  Commented out call to WEBERR00 following                  *
.*                  "Grouping is complete for this Patient" alert PC grouper  *
.*                  load                                                      *
.*        V9.04.04  23/05/2005  Mike Laming   CAR 61562                       *
.*                  July 2005 mods for DRG 5.1 - Add PTCNU51G & PTCNC51C      *
.*        V9.04.03  08/09/2005  Jill Habasque    CAR 58848                    *
.*                  Added updttype of V for automatic coding                  *
.*        V9.04.02  13/12/2004  Henry Son        CAR 55406                    *
.*                  Change CME to read new output format.                     *
.*        V9.04.01  30/11/2004  Henry Son        CAR 54882                    *
.*                  Populate operation times from patmmbsf.                   *
.******************************************************************************
.*        V9.03.08  26/07/2004  Henry Son        CAR 51504                    *
.*                  Add WIES12 (2004/2005 changes)                            *
.*        V9.03.07  27/05/2004  Henry Son        CAR 50344                    *
.*                  Group using 3M CME Changes for Ed 5.0 batch PC group.     *
.*        V9.03.06  03/03/2004  Jill Habasque CAR 47761                       *
.*                  Mods to allow encoder for current inpatients              *
.*        V9.03.05  21/01/2004  Henry Son  CAR 46856                          *
.*                  Further mapping changs to Nasopharyngeal Intubation.      *
.*                  Map 9017902 and 9017905 to 9203500 for grouper.           *
.*        V9.03.04  02/12/2003  Sylvek Litewka  CAR 20222                     *
.*                  Modified reads of ICD files to use Discharge Date and     *
.*                  common IO routines.                                       *
.*        V9.03.03  31/10/2003  Sylvek Litewka  CAR 44328                     *
.*                  Modified procedures CDISS000, COPRS000, WRTDIS00 and      *
.*                  WRTPRO00 to populate Free Format Description fields on    *
.*                  patecdaf and patecoaf files based on value of CFFMORB     *
.*                  flag (Allow Description change in Morbidity).             *
.*        V9.03.02  14/10/2003  CAR 41584   Guomin Fu                         *
.*                  Mods to check MRCNSOMV  to send hours of MV to grouper or *
.*                  not                                                       *
.*        V9.03.01  08/08/2003  CAR 42039   Henry Son                         *
.*                  Mods for WIES11 (2003/2004 changes)                       *
.*        V9.02.15  12/12/2002  Pat Dirito       SRF 34063                    *
.*                  Added routine PRODRG00                                    *
.*        V9.02.14  Pat Dirito                   SRF 33644                    *
.*                  Removed dummy label                                       *
.*        V9.02.13  Pat Dirito                   SRF 22205                    *
.*                  Modifed Grouping now complete message to include DRG ver  *
.*        V9.02.12  Jill Habasque  SRF 17573                                  *
.*                  Changed to use RTIODAYS instead of NHOSPDAY               *
.*        V9.02.11  29/08/2002  Pat Dirito       SRF 21608                    *
.*                  Routine GTCOD000 had param PTCNGDV2 edited out,           *
.*                  now put back in.                                          *
.*        V9.02.10  20/08/2002  Pat Dirito       SRF 21159                    *
.*                  Added execution of multible DRG versions for WEB UNIX     *
.*                  Grouper execution.                                        *
.*        V9.02.09  05/08/2002  Pat Dirito       SRF 19847                    *
.*                  Wrapped IO write WRPTPGR1 with trap overcond.             *
.*        V9.02.08  25/07/2002  Davin                                         *
.*                  Mods for WIES10 (2002/2003 changes)                       *
.*        V9.02.07  13/06/2002  Pat Dirito                                    *
.*                  Changes for ICD10 V3                                      *
.*        V9.02.06  26/04/2002  Pat Dirito                                    *
.*                  Wrapped IO write WRPTPGR1 in RA read.                     *
.*        V9.02.05  02/04/2002  Pat Dirito                                    *
.*                  Made change to routine LODENC00 for PID line change.      *
.*        V9.02.04  28/03/2002  Pat Dirito                                    *
.*                  Added U/R to free format field (PID) passed to Encoder.   *
.*        V9.02.03  12/03/2002  Pat Dirito                                    *
.*                  Added routines from MRTWEB02.PBL for WEB based Grouper    *
.*                  and Encoder                                               *
.*        V9.02.02  08/11/2001  Pat Dirito                                    *
.*                  Modifications Made for Unix Grouper.                      *
.*                  07/11/2001  Davin                                         *
.*                  Mods for 4.2 grouper & WIES9 (2001/2002)                  *
.*        V9.02.01  01/11/2001  Greg Horvat                                   *
.*                  Recompiled for PATGILOS - Added xtra option to the        *
.*                  parameter PTCNDSCI & recompiled for PATWIES7 & PATWIES8 - *
.*                  Added xtra option to the parameter PNSWRACE               *
.*        V5.10.B01 26/03/2001  Steve Downing  SRF 9018                       *
.*                  Mods to delete doutXX and drginpXX files                  *
.*        V5.09.B01 26/02/2001  Jill Habasque                                 *
.*                  Mods for ABWGHT - changed to DIM 6                        *
.*        V5.08.06  24/08/2000  Davin                                         *
.*                  Mods for WIES8 (2000/2001 changes)                        *
.*        V5.08.05  31/07/2000  Steve Downing  SRF 4299                       *
.*                  Mods for PTCNCSTA=6                                       *
.*        V5.08.04  12/07/2000  Greg Horvat                                   *
.*                  Fixed I*C on PATTRAN2                                     *
.*        V5.08.03  27/06/2000  Greg Horvat                                   *
.*                  Changed for ICD10 version 2 codes                         *
.*        V5.08.02  29/05/2000  Greg Horvat                                   *
.*                  Recompiled for PATWIES7                                   *
.*        V5.08.01  01/05/2000  Greg Horvat                                   *
.*                  Fixed a bug extracting ICD9 operation codes               *
.*        V5.08.B02 14/03/2000  Greg Horvat                                   *
.*                  Changed to get the coding from the episode coding files   *
.*        V5.08.B01 18/01/2000  Greg Horvat                                   *
.*                  - Changed to write the 3.1 ICD9 procedure codes as 4 chars*
.*                  - Changed to receive a flag from the 4.1 grouper to see   *
.*                    whether the DRG files were sent or not                  *
.*                  - Removed the question to overwrite existing DRG files    *
.*                  - Format the 3.1 DRG to be zero filled                    *
.*                  - Changed to send & receive port based DRG files          *
.*        V5.07.01  14/12/1999  Greg Horvat                                   *
.*                  - Recompiled for PATM10T9 - Fixed obstetric & tendon      *
.*                    injury complex mapping bugs                             *
.*                  - Fixed a bug displaying operation codes                  *
.*                                                                            *
.******************************************************************************
.******************************************************************************
.                     Run Grouper & Process Returned Files
.******************************************************************************
SETGRP00  MOVE      ZERO,WEBCODER
          MATCH     "C",UPDTTYPE        * Clear Codefinder Directory
          GOTO      SETGRP40 IF EQUAL
.
          PACK      KEY8,URNUMBER,SP70  * Read Master File
          CALL      RDMAST1
          BRANCH    OVRCD,SETGRP91
.
          CALL      RDPMPX21            * Read PMI Extension File 2
          BRANCH    OVRCD,SETGRP91
.
          PACK      KEY8,ADMISSNO,SP70  * Read Admission File
          CALL      RDMISS1
          BRANCH    OVRCD,SETGRP92
.
          PACK      KEY8,ADMISSNO,SP70  * Read Admission extension File
          CALL      RDPMVX11
          BRANCH    OVRCD,SETGRP92
.
SETGRP03  PACK      KEY8,ADMISSNO,SP70      * Read for Discharge Date
          CALL      RDDSCH1
          IF        OVRCD = 1
            BRANCH    MRCNEPSC,SETGRP04     * it's Episode Coding ?   *I-241939
            MOVE      UPDTTYPE,KEY1
            REP       "E-I-",KEY1           * see if Export OR Import Codefinder
            MATCH     "-",KEY1 
            GOTO      SETGRP93 IF NOT EQUAL * if not a Codefinder process
.                           
SETGRP04    CALL      CLPATDSC              * use current date for Codefinder
            PACK      DDATE,CCC,CYY,CMM,CDD     * default to current date
            REP       " 0",DDATE
          ENDIF
.
SETGRP05  MOVE      DDATE,ICDRDDTE      * Use Discharge Date to read ICD files.
          MOVE      DDATE,ENCENDAT      * Initialise end date         *I-284669
.
          IF        MRCNEPSC=0
            MOVE      ONE,EPSCD001      * Episode Coding not used - default = 1
          ENDIF
          IF        EPSCD001=0
            MOVE      ONE,EPSCD001      * Episode Coding not used - default = 1
          ENDIF
.
          MATCH     "Y",GRPSWICH        * set Dates for Grouping ?
          IF        @EQUAL
            CALL      CPDATS00          * set dates for Grouping for Report 7
            MOVE      SP1,GRPSWICH
          ENDIF
.
          READ      CONTROLF,TEN;*105,PTCNU50G,*132,PTCNU60G:         *I-197814
                                 *140,PTCNU51G,*144,PTCNU52G:
                                 *152,PTCNU62G                        *I-267797
          READ      CONTROLF,SIXTY;*133,MRCNEPSC
          READ      CONTROLF,SIXTY1;*249,MRCNPIGP
          READ      CONTROLF,EIGHTY8;*59,PTCNI10D,*241,PTCNCSTA
          READ      CONTROLF,NINTY7;*244,MRCNRDSG
          READ      CONTROLF,HUND05;*158,PTCNDGPV,PTCNU31G,PTCNU41G,PTCNU42G:
                                    *185,PTCNELPS
          READ      CONTROLF,HUND19;*183,PTCNED41,*191,PTCNED42,*199,PTCNED50:
                                    *207,PTCNED51,*215,PTCNED52,*223,PTCNED60:
                                    *231,PTCNED62,*239,PTCNED70       *I-284669
          READ      CONTROLF,HUND20;*232,PTCNED80
          READ      CONTROLF,HUND23;*232,PTCNED90
          READ      CONTROLF,HUND24;*224,PTCNE100
          READ      CONTROLF,HUND28;*239,PTCNE110
          READ      CONTROLF,HUND30;*94,PTCNE120
.
.  * Grouper date - Now set to current date so as to always force use of ICD10
.
          PACK      GRPDTE,CCC,CYY,CMM,CDD
          REP       " 0",GRPDTE             * Grouper date - current date
.
          MATCH     "G",UPDTTYPE            * Export PC Grouper (CME)
          GOTO      SETGRP10 IF EQUAL
.
          MATCH     "V",UPDTTYPE            * Auto coding Export/Import Grouper
          GOTO      SETGRP10 IF EQUAL
.
          MATCH     "E",UPDTTYPE            * Export Codefinder
          GOTO      SETGRP10 IF EQUAL
.
          MATCH     "I",UPDTTYPE            * Import PC Grouper or Codefinder
          GOTO      SETGRP20 IF EQUAL
.
          MATCH     "U",UPDTTYPE            * Run Unix Grouper
          GOTO      SETGRP30 IF EQUAL
.
          MATCH     "M",UPDTTYPE            * Export TurboGrouper
          GOTO      SETGRP50 IF EQUAL
.
          MATCH     "N",UPDTTYPE            * Import TurboGrouper
          GOTO      SETGRP60 IF EQUAL
.
          MATCH     "O",UPDTTYPE            * Run TurboGrouper 
          GOTO      SETGRP70 IF EQUAL
.
          MATCH     "P",UPDTTYPE            * Run AMHCC Unix Grouper
          GOTO      SETGRP80 IF EQUAL
.
          GOTO      SETGRP90
.
.
.  ***************** Export PC GROUPER (CME) or CODEFINDER data ***************
.
.                                           * create files for REMOTE02
SETGRP10  PACK      FILENAM1,DRGINP,PORT,SP70
          REP       " 0",FILENAM1
          PREP      INPFIL41,FILENAM1       * Create Input file "drginpXX.txt"
.
          IF        PTCNOENC = 2
            PACK      WCFINPFN,ENCINP,URNUMBER,ADMISSNO,SP70
            REP       " 0",WCFINPFN
            PREP      ENCFILEF,WCFINPFN     * Create Input file "encinpXXXX.txt"
          ELSE
            PACK      FILENAM2,ENCINP,PORT,SP70
            REP       " 0",FILENAM2
            PREP      ENCFILEF,FILENAM2     * Create Input file "encinpXX.txt"
          ENDIF
.
          CALL      CLR41000                * Clear grouper variables
          CALL      EXT41000                * Extract grouper info
          CALL      GTCOD000                * Get grouper codes
          CALL      GETCHSCR                * Automate calculate Charlson score
.
          MATCH     "G",UPDTTYPE            * Export PC Grouper (CME)
          CALL      WRCME1 IF EQUAL         * Write grouper codes
.
          MATCH     "V",UPDTTYPE            * Automatic coding Export Grouper
          CALL      WRCME1 IF EQUAL         * Write grouper codes
.
          MATCH     "E",UPDTTYPE            * Export Codefinder
          CALL      WRENC000 IF EQUAL       * Write Codefinder codes
.
SETGRP15  CLOSE     ENCFILEF
          CLOSE     INPFIL41
          IF        PTCNOENC = 2
            MOVE      ONE,WEBCODER          * Initiate Web Codefinder
.
            MOVE      ZERO,ENCODERF
            MOVE      ZERO,EXIT
            GOTO      SETGRP99    * Don't execute mrtweb02.us1 & mrtweb02.us2
          ENDIF
.
.    The following will execute mrtweb02.us1 unix script which will
.    FTP the client PC.
.    Parameters passed in are : FILENAM1, FILENAM2, USERID, KEY3(ICD10 version)
.    Parameters passed in are : Grouper File, Encoder File, Web User ID &
.                               ICD10 Version
.
.    Set the ICD10 Version to use in script mrtweb02.us1
.
          MOVE      " v3",KEY3         * Discharge date > ICD10v3 golive date
          MATCH     PTCNGDV3,DDATE
          IF        @LESS
            MOVE      " v2",KEY3       * Discharge date < ICD10v3 golive date
          ENDIF
.
.    set up Command Line as - "mrtweb02.us1 drginp**.txt encinp**.txt userid v3"
.
          CLEAR     CMDLINE
          APPEND    "mrtweb02.us1 ",CMDLINE
          APPEND    FILENAM1,CMDLINE
          APPEND    ".txt ",CMDLINE
          APPEND    FILENAM2,CMDLINE
          APPEND    ".txt ",CMDLINE
          APPEND    USERID,CMDLINE
          APPEND    KEY3,CMDLINE            * ICD10 version
          APPEND    SP1,CMDLINE
          APPEND    WBSELOGN,CMDLINE        * Long Login Name
          APPEND    SP1,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          MOVE      ZERO,ENCODERF
          MOVE      ZERO,EXIT
.
          MATCH     "V",UPDTTYPE            * Auto coding Export/Import Grouper
          GOTO      SETGRP99 IF NOT EQUAL   * end of codes "E" and "G"
.
.                                           * get ready for Import Grouper phase
          DISPLAY   *W2                     * wait 2 seconds for returned file
          GOTO      SETGRP20
.
.
.  ******************** Import GROUPER or CODEFINDER data *******************
.
.    The following will execute mrtweb02.us2 unix script which will
.    FTP the drg & encoder output files from the client PC.
.    Parameters passed in are : Userid & PORT
.
SETGRP20  COMPARE   TWO,PTCNOENC
          GOTO      SETGRP25 IF EQUAL       * execute if not using web interface
.
          CLEAR     CMDLINE
          APPEND    "mrtweb02.us2 ",CMDLINE
          APPEND    USERID,CMDLINE
          APPEND    SP1,CMDLINE
          MOVE      PORT,KEY2
          REP       " 0",KEY2
          APPEND    KEY2,CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    WBSELOGN,CMDLINE        * Long Login Name
          APPEND    SP1,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
SETGRP25  CALL      SETPTH00                * Set up output File Names
          MATCH     "1",ENCODERF
          IF        @EQUAL
            CALL      LODENC00              * read in Codefinder data
          ELSE
            CALL      LODGRP00              * read in Grouper (Unix or PC) data
          ENDIF
.
          MATCH     "1",MRCNRCDT            * is "Reset Coding Date" set ?
          IF        @EQUAL
            MATCH     "0",MRCNEACA          * Enable Attestation Coding Audit
            IF        !@EQUAL
              MOVE      ONE,SETCLACC        * set indicator to call CLRACC00
            ENDIF
          ENDIF
.
          GOTO      SETGRP99
.
.
.  ************************* Export UNIX Grouper ************************
.
SETGRP30  PACK      FILENAM1,DRGINP,PORT,SP70
          REP       " 0",FILENAM1
          PREP      INPFIL41,FILENAM1  * Create Input file "drginpXX.txt"
.
          CALL      CLR41000       * Clear grouper variables
          CALL      EXT41000       * Extract grouper info
          CALL      GTCOD000       * Get grouper codes
          CALL      WRUNIX1        * Write UNIX grouper codes
          CALL      GETCHSCR       * Automate calculate Charlson score
.
          CLOSE     INPFIL41
.
.davvy    CALL      CHKPR000       * Check the grouper parameters
.davvy    BRANCH    EXIT,SETGRP99  * --- removed this check for 284669
.
.         CALL      UNXGRP00
          CALL      UNXGXX00       * Run Unix Grouper for each DRG Version
.
          MATCH     "1",MRCNRCDT            * is "Reset Coding Date" set ?
          IF        @EQUAL
            MATCH     "0",MRCNEACA          * Enable Attestation Coding Audit
            IF        !@EQUAL 
              MOVE      ONE,SETCLACC        * set indicator to call CLRACC00
            ENDIF 
          ENDIF
.
.         Trigger a visit update message after getting the last transfer record
.
          PACK      KEY30,AADMNO,ZED30
          CALL      RDSTRAN2                * position on admission number
          CALL      RDPTRAN2                * read previous transfer record
          BRANCH    OVRCD,SETGRP39          * eof - shouldn't happen
.
          MATCH     AADMNO,TADMN            * same admission still ?
          GOTO      SETGRP39 IF NOT EQUAL   * no - should happen
.
          CALL      PMIGTNID                * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      TWO,HL7TRGID
          MOVE      "WEBGROUP",HL7INCLD
          PROC      DGCLICAC                * trigger I/P visit update message
.
SETGRP39  GOTO      SETGRP99
.
.
.  ******************** Clear Codefinder Directory *********************
.
SETGRP40  CLEAR     CMDLINE
          APPEND    "rm encinp*.txt encout*.txt",CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID

          MOVE      ZERO,EXIT
          GOTO      SETGRP99
.
.
.  ***************** Export TurboGrouper data ***************
.
SETGRP50  PACK      FILENAM3,ANST,ANSU,ANSR,ANSE,ANSX,ANSP,PORT,SP70
          REP       " 0",FILENAM3
          PREP      TURBOFL1,FILENAM3       * Create file "TUREXPXX.txt"
.
          MOVE      ZERO,TURBOSAV      * Don't save previous details
          CALL      CLRTB000           * Clear TurboGrouper variables
.
          MOVE      ZERO,TURBOCMD      * TurboGrouper Command (Not auto send)
          MOVE      ZERO,TURBOCMD      * PAS Command (Not auto import)
.
          CALL      POPTB000           * Populate TurboGrouper vars
.
          CALL      WTBGRP00           * Write TurboGrouper codes
.
          CLOSE     TURBOFL1
.
.    set up Command Line as - "mrtweb02.us5 file user login_name"
.
          MOVE      ZERO,TURBOCMD      * TurboGrouper Command (Not auto send)
          MOVE      ZERO,TURBOCMD      * PAS Command (Not auto import)
          MOVE      "0",TURBFTIM       * TurboGrouper file time = 0 - Not used
          SQUEEZE   TURBFTIM
.
          CLEAR     CMDLINE
          APPEND    "mrtweb02.us5 ",CMDLINE
          APPEND    FILENAM3,CMDLINE
          APPEND    ".txt ",CMDLINE
          APPEND    USERID,CMDLINE          * User id
          APPEND    SP1,CMDLINE
          APPEND    WBSELOGN,CMDLINE        * Long Login Name
          APPEND    SP1,CMDLINE
          APPEND    TURBOCMD,CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    TURBFTIM,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          MOVE      ZERO,EXIT
          GOTO      SETGRP99
.
.
.  ***************** Import TurboGrouper data ***************
.
SETGRP60  MOVE      ZERO,TURBOCMD       * TurboGrouper Command (not auto send)
          MOVE      ZERO,TURBOCMD       * PAS Command (not auto import)
          MOVE      "0",TURBFTIM        * TurboGrouper file time = 0 - Not used
          SQUEEZE   TURBFTIM           
.
          CLEAR     CMDLINE
          APPEND    "mrtweb02.us6 ",CMDLINE
          APPEND    USERID,CMDLINE
          APPEND    SP1,CMDLINE
          MOVE      PORT,KEY2
          REP       " 0",KEY2
          APPEND    KEY2,CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    WBSELOGN,CMDLINE        * Long Login Name
          APPEND    SP1,CMDLINE
          APPEND    TURBOCMD,CMDLINE
          APPEND    TURBFTIM,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CALL      LODTB000           * Load TurboGrouper variables
          BRANCH    EXIT,SETGRP99
.
          MATCH     "1",MRCNRCDT            * is "Reset Coding Date" set ?
          IF        @EQUAL
            MOVE      ONE,SETCLACC          * set indicator to call CLRACC00
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      SETGRP99
.
.  ***************** Run Automatic TurboGrouper ***************
.
SETGRP70  MATCH     "MRTWEB02",PRGID
          IF        !@EQUAL
            READ      CONTROLF,SIXTY1;*230,MRCNTUSR
.
            MOVE      MRCNTUSR,USERID
            PACK      KEY10,USERID,SP70
            CALL      RDWBSE1               * TurboGrouper Remote User ID
            BRANCH    OVRCD,SETGRP94
.
          ELSE
            PACK      KEY10,USERID,SP70
            CALL      RDWBSE1               * TurboGrouper Remote User ID
            BRANCH    OVRCD,SETGRP94
          ENDIF
.
          PACK      FILENAM3,ANST,ANSU,ANSR,ANSE,ANSX,ANSP,PORT,SP70
          REP       " 0",FILENAM3
          PREP      TURBOFL1,FILENAM3       * Create file "TUREXPXX.txt"
.
          MOVE      ZERO,TURBOSAV      * Don't save previous details
          CALL      CLRTB000           * Clear TurboGrouper variables
.
          MOVE      ONE,TURBOCMD       * TurboGrouper Command (auto send)
          MOVE      ONE,TURBOCMD       * PAS Command (auto import)
.
          CALL      POPTB000           * Populate TurboGrouper vars
.
          CALL      WTBGRP00           * Write TurboGrouper codes
          CALL      GETCHSCR           * Automate calculate Charlson score
.
          CLOSE     TURBOFL1
.
.    set up Command Line as - "mrtweb02.us5 file user login_name"
.
          MOVE      ONE,TURBOCMD       * TurboGrouper Command (auto send)
          MOVE      ONE,TURBOCMD       * PAS Command (auto import)
.
          CLOCK     FULLTIME,TURBFTIM  * TurboGrouper file time  hhmmssuu
          REP       ": ",TURBFTIM
          REP       ". ",TURBFTIM
          SQUEEZE   TURBFTIM
.
          CLEAR     CMDLINE
          APPEND    "mrtweb02.us5 ",CMDLINE
          APPEND    FILENAM3,CMDLINE
          APPEND    ".txt ",CMDLINE
          APPEND    WBSEUID,CMDLINE          * User id
          APPEND    SP1,CMDLINE
          APPEND    WBSELOGN,CMDLINE        * Long Login Name
          APPEND    SP1,CMDLINE
          APPEND    TURBOCMD,CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    TURBFTIM,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.        
          CLEAR     CMDLINE
          MATCH     "MRTWEB02",PRGID
          IF        !@EQUAL
            APPEND    "mrtweb02.us7 ",CMDLINE
          ELSE
            APPEND    "mrtweb02.us6 ",CMDLINE
          ENDIF
          APPEND    WBSEUID,CMDLINE
          APPEND    SP1,CMDLINE
          MOVE      PORT,KEY2
          REP       " 0",KEY2
          APPEND    KEY2,CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    WBSELOGN,CMDLINE        * Long Login Name
          APPEND    SP1,CMDLINE
          APPEND    TURBOCMD,CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    TURBFTIM,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CALL      LODTB000           * Load TurboGrouper variables
          BRANCH    EXIT,SETGRP99
          MOVE      ZERO,EXIT
          GOTO      SETGRP99
.
.
.  ************************* Export AMHCC UNIX Grouper *********************
.
SETGRP80  MOVE      "amhcci",FILENAM4
          ENDSET    FILENAM4
          APPEND    PORT,FILENAM4
          REP       " 0",FILENAM4
          RESET     FILENAM4
          PREP      AMHCCFL1,FILENAM4  * Create Input file "amhcciXX.txt"
.
          CALL      CLRAM000           * Clear AMHCC Grouper variables
.
          CALL      POPAM000           * Populate AMHCC Grouper vars
.
          CALL      WAMGRP00           * Write AMHCC Grouper vars
.
          CLOSE     AMHCCFL1
.
          CLEAR     CMDLINE
          APPEND    "mrtweb02.amhcc ",CMDLINE
          APPEND    FILENAM4,CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    "> /dev/null 2>&1 ",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID     * Execute AMHCC Grouper
.
          CALL      LODAM000           * Load AMHCC Grouper results
          BRANCH    EXIT,SETGRP99
.
          MOVE      ZERO,EXIT
          GOTO      SETGRP99
.
.
.  ************************ Error Messages **************************
.
SETGRP90  SCAN      "WEB",PRGID
          IF        @EQUAL
            MOVE      "Invalid Form Action.",WEBTITLE
            CALL      WEBERR00
            MOVE      ONE,EXIT
          ELSE
            MATCH     "IBAMRT53",PRGID
            IF        @EQUAL
              PRINT     *23,"Invalid Form Action."
            ENDIF
          ENDIF
          RESET     PRGID
          GOTO      SETGRP99
.
SETGRP91  SCAN      "WEB",PRGID
          IF        @EQUAL
            MOVE      "Master Details Not Found .",WEBTITLE
            CALL      WEBERR00
            MOVE      ONE,EXIT
          ELSE
            MATCH     "IBAMRT53",PRGID
            IF        @EQUAL
              PRINT     *23,"Master Details Not Found."
            ENDIF
          ENDIF
          RESET     PRGID
          GOTO      SETGRP99
.
SETGRP92  SCAN      "WEB",PRGID
          IF        @EQUAL
            MOVE      "Admission Record Not Found .",WEBTITLE
            CALL      WEBERR00
            MOVE      ONE,EXIT
          ELSE
            MATCH     "IBAMRT53",PRGID
            IF        @EQUAL
              PRINT     *23,"Admission Record Not Found ."
            ENDIF
          ENDIF
          RESET     PRGID
          GOTO      SETGRP99
.
SETGRP93  SCAN      "WEB",PRGID
          IF        @EQUAL
            MOVE      "Discharge Record Not Found .",WEBTITLE
            CALL      WEBERR00
            MOVE      ONE,EXIT
          ELSE
            MATCH     "IBAMRT53",PRGID
            IF        @EQUAL
              PRINT     *23,"Discharge Record Not Found ."
            ENDIF
          ENDIF
          RESET     PRGID
          GOTO      SETGRP99
.
SETGRP94  MATCH     "MRTWEB02",PRGID
          IF        @EQUAL
            MOVE      "Invalid TurboGrouper Remote User ID.",WEBTITLE
            CALL      WEBERR00
            MOVE      ONE,EXIT
          ELSE
            PRINT     *23,"Invalid TurboGrouper Remote User ID."
            DISPLAY   *R,"Invalid TurboGrouper Remote User ID."
          ENDIF
          RESET     PRGID
          GOTO      SETGRP99
.
SETGRP99  RETURN
.
.****************************************************************************** 
.         Set Coding Period Dates for either Episode Coding or Admission Coding
.                                 (Moved from MRTWEB02)               *I-266421
.****************************************************************************** 
CPDATS00  IF        MRCNEPSC <> 1
            PACK      EPENDDAT,CURRDATE,SP10     * set default end-date
            IF        ASTAT = 3
              PACK      EPENDDAT,DDATE,SP10
            ENDIF
            DAYSEP    ADATE,EPENDDAT,ADNODAYS    * set LOS
.           
            MOVE      ACARE,CARETYPE
.                                           * format StartDate and EndDate
            UNPACK    ADATE,CCENT,CYEAR,CMON,CDAY
            MOVE      CMON,F2
            LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
            PACK      ADATEDIS,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR,SP10
.
            MOVE      SP20,DDATEDIS
            IF        ASTAT = 3
              UNPACK    DDATE,CCENT,CYEAR,CMON,CDAY
              MOVE      CMON,F2
              LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP:
                               OCT,NOV,DEC
              PACK      DDATEDIS,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR,SP10
            ENDIF
.
            MOVE      ADATE,ENCSTDAT      * Dates & Times for Codefinder(Encoder
            MOVE      ATIME,ENCSTTIM
.
            MOVE      SP70,ENCENDAT
            MOVE      SP70,ENCENTIM
            IF        ASTAT = 3
              MOVE      DDATE,ENCENDAT
              MOVE      DTIME,ENCENTIM
            ENDIF
.                                         * copy ADATE & DDATE to Episode fields
            MOVE      ADATE,EPSTTDAT
            MOVE      SP70,EPENDDAT
            IF        ASTAT = 3
              MOVE      DDATE,EPENDDAT
            ENDIF
.
            GOTO      CPDAT500
          ENDIF
.
.                                       * Read Patient Change table to get start
.                                       * & end dates for Episodic coding
          IF        ASTAT = 3
            DAYSEP    ADATE,DDATE,ADNODAYS
          ELSE
            DAYSEP    ADATE,CURRDATE,ADNODAYS
          ENDIF
          UNPACK    KEY10,DIM8,DIM2
          PACK      EPENDDAT,ADATE,SP10
          PACK      EPENDTIM,ATIME,SP10
          PACK      KEY26,ADMISSNO,SP20
          CALL      RDSCHCO2
CPDAT100  CALL      RDKCHCO2
          IF        OVRCD = 1
            MOVE      "99999999",DCHADMN
          ENDIF
          MATCH     ADMISSNO,DCHADMN
          IF        !@EQUAL
            IF        ASTAT = 3
              MOVE      "CC",CHCATG                 * build phantom patchcof
              MOVE      ACARE,CHCODE
              MOVE      ADMISSNO,DCHADMN
              MOVE      DDATE,CHDATE
              MOVE      DTIME,CHTIME
              UNPACK    SP70,CHCRDATE,CHCRTIME,CHCRUSID
              UNPACK    SP70,CHUPDATE,CHUPTIME,CHUPUSID
              MOVE      EPSCD001,CHEPISNO
              MOVE      ACODDTE,CHCODCMP
            ELSE
              CALL      CLPATCHC
              GOTO      CPDAT999
            ENDIF
          ENDIF

          MOVE      EPENDDAT,EPSTTDAT       * move previous date down
          MOVE      EPENDTIM,EPSTTTIM
          PACK      EPENDDAT,CHDATE,SP10    * save this end date
          PACK      EPENDTIM,CHTIME,SP10
.
          MOVE      EPSCD001,DIM2
          MATCH     DIM2,CHEPISNO           * is this the required Episode No. ?
          GOTO      CPDAT100 IF LESS        * no - read next Episode
.
.                                           * format data fields
          MOVE      CHCODE,CARETYPE
          MOVE      EPSTTDAT,ENCSTDAT       * Dates and Times for Codefinder
          MOVE      EPSTTTIM,ENCSTTIM
          MOVE      EPENDDAT,ENCENDAT
          MOVE      EPENDTIM,ENCENTIM
.
CPDAT500  MOVE      ZERO,EPSNOLOS           * calculate Length of Stay
          DAYSEP    EPSTTDAT,EPENDDAT,EPSNOLOS
          MOVE      " Days",KEY5
          PACK      EPNODAYS,ADNODAYS,KEY5
          DAYSEP    EPSTTDAT,EPENDDAT,EPSNOLOS
          IF        MRCNEPSC = 1
            MOVE      "of",KEY2
            PACK      EPNODAYS,EPSNOLOS,KEY5,SP1,OBB,KEY2,ADNODAYS,CBB,SP20
          ENDIF
.                                           * format StartDate and EndDate
          MOVE      SP2,KEY2
          MATCH     EPSTTDAT,ADATE
          IF        !@EQUAL
            MOVE      " *",KEY2
          ENDIF
          UNPACK    EPSTTDAT,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          PACK      EPSTTDIS,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR,KEY2,SP10
.
          IF        MRCNEPSC<>1
            IF       ASTAT<>3
              MOVE     SP70,EPENDDIS
              GOTO     CPDAT999
            ENDIF
          ENDIF
.
          MOVE      SP2,KEY2
          MATCH     EPENDDAT,DDATE
          IF        !@EQUAL
            MOVE      " *",KEY2
          ENDIF
          UNPACK    EPENDDAT,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MTHNAM3,F2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          PACK      EPENDDIS,CDAY,SP1,MTHNAM3,SP1,CCENT,CYEAR,KEY2,SP10
.
CPDAT999  RETURN
+
.******************************************************************************
.*                                  CLR41000                                  *
.*                      Clear Data for PC & Unix Grouper                      *
.******************************************************************************
CLR41000  UNPACK    SP70,XDRGADMN,XDRGADAT,XDRGATIM,XDRGDDAT,XDRGDTIM:
                         XDRGBDAT,XDRGAGEY,XDRGAGED,XDRGSEX,XDRGSEP:
                         XDRGAWHT,XDRGILOS,XDRGSDAY,XDRGMHLS,XDRGHMV:
                         XDRGALOS,XDRGALS2
.
          UNPACK    SP70,XDRGDS01,XDRGDS02,XDRGDS03,XDRGDS04,XDRGDS05:
                         XDRGDS06,XDRGDS07,XDRGDS08,XDRGDS09,XDRGDS10
          UNPACK    SP70,XDRGDS11,XDRGDS12,XDRGDS13,XDRGDS14,XDRGDS15:
                         XDRGDS16,XDRGDS17,XDRGDS18,XDRGDS19,XDRGDS20
          UNPACK    SP70,XDRGDS21,XDRGDS22,XDRGDS23,XDRGDS24,XDRGDS25:
                         XDRGDS26,XDRGDS27,XDRGDS28,XDRGDS29,XDRGDS30
          UNPACK    SP70,XDRGDS31,XDRGDS32,XDRGDS33,XDRGDS34,XDRGDS35:
                         XDRGDS36,XDRGDS37,XDRGDS38,XDRGDS39,XDRGDS40
          UNPACK    SP70,XDRGDS41,XDRGDS42,XDRGDS43,XDRGDS44,XDRGDS45:
                         XDRGDS46,XDRGDS47,XDRGDS48,XDRGDS49,XDRGDS50
          UNPACK    SP70,XDRGDS51,XDRGDS52,XDRGDS53,XDRGDS54,XDRGDS55:
                         XDRGDS56,XDRGDS57,XDRGDS58,XDRGDS59,XDRGDS60
          UNPACK    SP70,XDRGDS61,XDRGDS62,XDRGDS63,XDRGDS64,XDRGDS65:
                         XDRGDS66,XDRGDS67,XDRGDS68,XDRGDS69,XDRGDS70
          UNPACK    SP70,XDRGDS71,XDRGDS72,XDRGDS73,XDRGDS74,XDRGDS75:
                         XDRGDS76,XDRGDS77,XDRGDS78,XDRGDS79,XDRGDS80
          UNPACK    SP70,XDRGDS81,XDRGDS82,XDRGDS83,XDRGDS84,XDRGDS85:
                         XDRGDS86,XDRGDS87,XDRGDS88,XDRGDS89,XDRGDS90
          UNPACK    SP70,XDRGDS91,XDRGDS92,XDRGDS93,XDRGDS94,XDRGDS95:
                         XDRGDS96,XDRGDS97,XDRGDS98,XDRGDS99,XDRDS100
          UNPACK    SP70,XDRGDI01,XDRGDI02,XDRGDI03,XDRGDI04,XDRGDI05:
                         XDRGDI06,XDRGDI07,XDRGDI08,XDRGDI09,XDRGDI10:
                         XDRGDI11,XDRGDI12,XDRGDI13,XDRGDI14,XDRGDI15:
                         XDRGDI16,XDRGDI17,XDRGDI18,XDRGDI19,XDRGDI20
          UNPACK    SP70,XDRGDI21,XDRGDI22,XDRGDI23,XDRGDI24,XDRGDI25:
                         XDRGDI26,XDRGDI27,XDRGDI28,XDRGDI29,XDRGDI30:
                         XDRGDI31,XDRGDI32,XDRGDI33,XDRGDI34,XDRGDI35:
                         XDRGDI36,XDRGDI37,XDRGDI38,XDRGDI39,XDRGDI40
          UNPACK    SP70,XDRGDI41,XDRGDI42,XDRGDI43,XDRGDI44,XDRGDI45:
                         XDRGDI46,XDRGDI47,XDRGDI48,XDRGDI49,XDRGDI50:
                         XDRGDI51,XDRGDI52,XDRGDI53,XDRGDI54,XDRGDI55:
                         XDRGDI56,XDRGDI57,XDRGDI58,XDRGDI59,XDRGDI60
          UNPACK    SP70,XDRGDI61,XDRGDI62,XDRGDI63,XDRGDI64,XDRGDI65:
                         XDRGDI66,XDRGDI67,XDRGDI68,XDRGDI69,XDRGDI70:
                         XDRGDI71,XDRGDI72,XDRGDI73,XDRGDI74,XDRGDI75:
                         XDRGDI76,XDRGDI77,XDRGDI78,XDRGDI79,XDRGDI80
          UNPACK    SP70,XDRGDI81,XDRGDI82,XDRGDI83,XDRGDI84,XDRGDI85:
                         XDRGDI86,XDRGDI87,XDRGDI88,XDRGDI89,XDRGDI90:
                         XDRGDI91,XDRGDI92,XDRGDI93,XDRGDI94,XDRGDI95:
                         XDRGDI96,XDRGDI97,XDRGDI98,XDRGDI99,XDRDI100
          UNPACK    SP70,XDRGDC01,XDRGDC02,XDRGDC03,XDRGDC04,XDRGDC05:
                         XDRGDC06,XDRGDC07,XDRGDC08,XDRGDC09,XDRGDC10
          UNPACK    SP70,XDRGDC11,XDRGDC12,XDRGDC13,XDRGDC14,XDRGDC15:
                         XDRGDC16,XDRGDC17,XDRGDC18,XDRGDC19,XDRGDC20
          UNPACK    SP70,XDRGDC21,XDRGDC22,XDRGDC23,XDRGDC24,XDRGDC25:
                         XDRGDC26,XDRGDC27,XDRGDC28,XDRGDC29,XDRGDC30
          UNPACK    SP70,XDRGDC31,XDRGDC32,XDRGDC33,XDRGDC34,XDRGDC35:
                         XDRGDC36,XDRGDC37,XDRGDC38,XDRGDC39,XDRGDC40
          UNPACK    SP70,XDRGDC41,XDRGDC42,XDRGDC43,XDRGDC44,XDRGDC45:
                         XDRGDC46,XDRGDC47,XDRGDC48,XDRGDC49,XDRGDC50
          UNPACK    SP70,XDRGDC51,XDRGDC52,XDRGDC53,XDRGDC54,XDRGDC55:
                         XDRGDC56,XDRGDC57,XDRGDC58,XDRGDC59,XDRGDC60
          UNPACK    SP70,XDRGDC61,XDRGDC62,XDRGDC63,XDRGDC64,XDRGDC65:
                         XDRGDC66,XDRGDC67,XDRGDC68,XDRGDC69,XDRGDC70
          UNPACK    SP70,XDRGDC71,XDRGDC72,XDRGDC73,XDRGDC74,XDRGDC75:
                         XDRGDC76,XDRGDC77,XDRGDC78,XDRGDC79,XDRGDC80
          UNPACK    SP70,XDRGDC81,XDRGDC82,XDRGDC83,XDRGDC84,XDRGDC85:
                         XDRGDC86,XDRGDC87,XDRGDC88,XDRGDC89,XDRGDC90
          UNPACK    SP70,XDRGDC91,XDRGDC92,XDRGDC93,XDRGDC94,XDRGDC95:
                         XDRGDC96,XDRGDC97,XDRGDC98,XDRGDC99,XDRDC100
.
          UNPACK    SP70,XDRGOP01,XDRGOP02,XDRGOP03,XDRGOP04,XDRGOP05:
                         XDRGOP06,XDRGOP07,XDRGOP08,XDRGOP09,XDRGOP10
          UNPACK    SP70,XDRGOP11,XDRGOP12,XDRGOP13,XDRGOP14,XDRGOP15:
                         XDRGOP16,XDRGOP17,XDRGOP18,XDRGOP19,XDRGOP20
          UNPACK    SP70,XDRGOP21,XDRGOP22,XDRGOP23,XDRGOP24,XDRGOP25:
                         XDRGOP26,XDRGOP27,XDRGOP28,XDRGOP29,XDRGOP30
          UNPACK    SP70,XDRGOP31,XDRGOP32,XDRGOP33,XDRGOP34,XDRGOP35:
                         XDRGOP36,XDRGOP37,XDRGOP38,XDRGOP39,XDRGOP40
          UNPACK    SP70,XDRGOP41,XDRGOP42,XDRGOP43,XDRGOP44,XDRGOP45:
                         XDRGOP46,XDRGOP47,XDRGOP48,XDRGOP49,XDRGOP50
          UNPACK    SP70,XDRGOP51,XDRGOP52,XDRGOP53,XDRGOP54,XDRGOP55:
                         XDRGOP56,XDRGOP57,XDRGOP58,XDRGOP59,XDRGOP60
          UNPACK    SP70,XDRGOP61,XDRGOP62,XDRGOP63,XDRGOP64,XDRGOP65:
                         XDRGOP66,XDRGOP67,XDRGOP68,XDRGOP69,XDRGOP70
          UNPACK    SP70,XDRGOP71,XDRGOP72,XDRGOP73,XDRGOP74,XDRGOP75:
                         XDRGOP76,XDRGOP77,XDRGOP78,XDRGOP79,XDRGOP80
          UNPACK    SP70,XDRGOP81,XDRGOP82,XDRGOP83,XDRGOP84,XDRGOP85:
                         XDRGOP86,XDRGOP87,XDRGOP88,XDRGOP89,XDRGOP90
          UNPACK    SP70,XDRGOP91,XDRGOP92,XDRGOP93,XDRGOP94,XDRGOP95:
                         XDRGOP96,XDRGOP97,XDRGOP98,XDRGOP99,XDROP100
.
          UNPACK    SP70,XDRGSTAT,XDRGHOSP,XDRGMEDN,XDRGHTYP,XDRGNLOS:
                         XDRGTOTL
          UNPACK    SP70,XDRGURGA,XDRGATYP,XDRGCCTY
          UNPACK    SP70,XDRGAMOD,XDRGATSI,XDRGCTYP,XDRGFNDS,XDRGICUH:
                         XDRGPCDY
          UNPACK    SP70,XDRGPCOD,XDRGUROR,XDRGQDAY,XDRGPDAY,XDRGNWAU
          UNPACK    SP70,XDRGCHSC
          MOVE      "0.0000",XDRGTOTN       * Total NWAU
          MOVE      ZERO,UNIXNWAU
.
          MATCH     PTCNGDV2,GRPDTE
          GOTO      CLR41900 IF NOT LESS    * Grouper date >= ICD10v2 golive dte
.
          UNPACK    SP70,XDRGD901,XDRGD902,XDRGD903,XDRGD904,XDRGD905:
                         XDRGD906,XDRGD907,XDRGD908,XDRGD909,XDRGD910
          UNPACK    SP70,XDRGD911,XDRGD912,XDRGD913,XDRGD914,XDRGD915:
                         XDRGD916,XDRGD917,XDRGD918,XDRGD919,XDRGD920
          MOVE      SP5,XDRGD921
          UNPACK    SP70,XDRGO901,XDRGO902,XDRGO903,XDRGO904,XDRGO905:
                         XDRGO906,XDRGO907,XDRGO908,XDRGO909,XDRGO910
          UNPACK    SP70,XDRGO911,XDRGO912,XDRGO913,XDRGO914,XDRGO915:
                         XDRGO916,XDRGO917,XDRGO918,XDRGO919,XDRGO920
          MOVE      SP4,XDRGO921
.
CLR41900  MOVE      ZERO,EXIT
CLR41999  RETURN
+
.******************************************************************************
.*                                  UNXGRP00                                  *
.*                     Run Unix Grouper for each DRG Version                  *
.******************************************************************************
UNXGRP00  MOVE      ZERO,EXIT
.
UNXGRP41  MATCH     PTCNED41,ENCENDAT       * disc.date > DRG 4.1 effect.date?
          IF        !@LESS
            MOVE      DRG041,DRGVERS        * Using 4.1 DRG version
            CALL      UNIXGP00
          ENDIF
.
UNXGRP42  MATCH     PTCNED42,ENCENDAT       * disc.date > DRG 4.2 effect.date?
          IF        !@LESS
            MOVE      DRG042,DRGVERS        * Using 4.2 DRG version
            CALL      UNIXGP00
          ENDIF
.
UNXGRP50  MATCH     PTCNED50,ENCENDAT       * disc.date > DRG 5.0 effect.date?
          IF        !@LESS
            MOVE      DRG050,DRGVERS        * Using 5.0 DRG version
            CALL      UNIXGP00
          ENDIF
.
UNXGRP51  MATCH     PTCNED51,ENCENDAT       * disc.date > DRG 5.1 effect.date?
          IF        !@LESS
            MOVE      DRG051,DRGVERS        * Using 5.1 DRG version
            CALL      UNIXGP00
          ENDIF
.
UNXGRP52  MATCH     PTCNED52,ENCENDAT       * disc.date > DRG 5.2 effect.date?
          IF        !@LESS
            MOVE      DRG052,DRGVERS        * Using 5.2 DRG version
            CALL      UNIXGP00
          ENDIF
.
UNXGRP60  MATCH     PTCNED60,ENCENDAT       * disc.date > DRG 6.0 effect.date?
          IF        !@LESS
            MOVE      DRG060,DRGVERS        * Using 6.0 DRG version   *I-197814
            CALL      UNIXGP00
          ENDIF
.
UNXGRP62  MATCH     PTCNED62,ENCENDAT       * disc.date > DRG 6.2 effect.date?
          IF        !@LESS
            MOVE      DRG062,DRGVERS        * Using 6.2 DRG version   *I-267797
            CALL      UNIXGP00
          ENDIF
.
UNXGRP70  MATCH     PTCNED70,ENCENDAT       * disc.date > DRG 7.0 effect.date?
          IF        !@LESS
            MOVE      DRG070,DRGVERS        * Using 7.0 DRG version   *I-284669
            CALL      UNIXGP00
          ENDIF
.
UNXGRP80  MATCH     PTCNED80,ENCENDAT       * disc.date > DRG 8.0 effect.date?
          IF        !@LESS
            MOVE      DRG080,DRGVERS        * Using 8.0 DRG version 
            CALL      UNIXGP00
          ENDIF
.
UNXGRP90  MATCH     PTCNED90,ENCENDAT       * disc.date > DRG 9.0 effect.date?
          IF        !@LESS
            MOVE      DRG090,DRGVERS        * Using 9.0 DRG version
            CALL      UNIXGP00
          ENDIF
.
UNXGR100  MATCH     PTCNE100,ENCENDAT       * disc.date > DRG 10.0 effect.date?
          IF        !@LESS
            MOVE      DRG100,DRGVERS        * Using 10.0 DRG version
            CALL      UNIXGP00
          ENDIF
.
UNXGR110  MATCH     PTCNE110,ENCENDAT       * disc.date > DRG 11.0 effect.date?
          IF        !@LESS
            MOVE      DRG110,DRGVERS        * Using 11.0 DRG version
            CALL      UNIXGP00
          ENDIF
.
UNXGR120  MATCH     PTCNE120,ENCENDAT       * disc.date > DRG 12.0 effect.date?
          IF        !@LESS
            MOVE      DRG120,DRGVERS        * Using 12.0 DRG version
            CALL      UNIXGP00
          ENDIF
.
UNXGRP99  RETURN
.
.******************************************************************************
.*                                  UNXGXX00                                  *
.*                     Common code for UNXGRP00 "run Unix Grouper"            *
.******************************************************************************
.
UNXGXX00  MOVE      ZERO,EXIT
.         UNPACK    DRGVERS,KEY1,KEY2       * break up into "0" & "52"
.         PACK      XDRGGRP,SP1,KEY2,SP3    * Set DRG Version as " 52"
.
.         MOVE      "dout",KEY4             * setup file name
.         PACK      FILENAM2,KEY4,KEY2,PORT,SP30
.         REP       " 0",FILENAM2
.
          CALL      EXECUT00                * Execute the UNIX Grouper
.
.         REP       " 0",XDRGGRP            * Set from " NN" to "0NN"
.
.         MOVE      ZERO,DFLTVFLG
.         MATCH     XDRGGRP,PTCNDGPV        * Is this the Default DRG Version?
.         IF        @EQUAL
.           MOVE      ONE,DFLTVFLG          * This version is the default
.         ENDIF
.
          CALL      UNXGRP00                * Load UNIX Grouper Results
.
UNXGXX99  RETURN
+
.******************************************************************************
.*                                  EXT41000                                  *
.*                     Extract Info for Unix & PC Grouper                     *
.******************************************************************************
EXT41000  MOVE      AADMNO,XDRGADMN         * Admission number
          MOVE      AADMNO,XDRGMEDN         * Medical Record No/Admission No
.
          UNPACK    ENCSTDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,XDRGADAT        * Admission date (or Episode Date)
          MOVE      ENCSTTIM,XDRGATIM       * Hour of admission time
.
          UNPACK    ENCENDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,XDRGDDAT        * Discharge date (or Epis. End Date)
          MOVE      ENCENTIM,XDRGDTIM       * Hour of discharge time
.
          UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,XDRGBDAT        * Date of birth
.
          PACK      AGEDATE,ADATE
          CALL      CALCAGE                 * Calculate patients age
          IF        PSAGEDAY>364
            MOVE      PSAGEYRS,XDRGAGEY     * Age in years
          ELSE
            MOVE      PSAGEDAY,FORM3
            MOVE      FORM3,XDRGAGED        * Age in days
          ENDIF
.  
          MOVE      PSEX,XDRGSEX            * Sex
.
          MATCH     SP70,PSEX
          IF        !@EQUAL
            PACK      KEY5,ANSG,SP1,PSEX,SP70         * Use cat G ind 4
            CALL      RDCODE1                         * if populated
            IF        OVRCD<>1
              MATCH     SP70,TCINDC4
              IF        !@EQUAL
                MOVE      TCINDC4,XDRGSEX   * Sex
              ENDIF
            ENDIF
          ENDIF
.
          IF        PTCNDRSM=1
            PACK      KEY5,CODED,DSTAT,SP70
          ELSE
            PACK      KEY5,CODEDD,DDEST,SP70
          ENDIF
          CALL      RDCODE1                 * Read a codes file record
          BRANCH    OVRCD,EXT41050
.
          MATCH     "1",MRCN3MCG            * Ind 5 only
          IF        @EQUAL
            PACK      XDRGSEP,ZERO,TCINDC5    * Separation mode from ind 5
            GOTO      EXT41050
          ELSE
            PACK      XDRGSEP,ZERO,TCINDC5    * Separation mode from ind 5
          ENDIF
.
          MATCH     SP70,PTCDUDF3           * User def 3 if populated
          IF        !@EQUAL
            PACK      XDRGSEP,PTCDUDF3      
          ENDIF
.
EXT41050  IF        PSAGEDAY<=364
            MOVE      ZERO,FORM4
            UNPACK    ABWGHT,DIM2,DIM4
            MOVE      DIM4,FORM4
            MOVE      FORM4,XDRGAWHT        * Admission weight
            MOVE      ABWGHT,F6
            IF        F6>9000
              MOVE      "9000",XDRGAWHT     * Admission weight
            ENDIF
          ENDIF
.
          CALL      PATGILOS                * Get intended LOS
          MOVE      KEY1,XDRGILOS
.
          MATCH     ADATE,DDATE
          IF        @EQUAL
            MOVE      "1",XDRGSDAY          * Same-day separation
          ELSE
            MOVE      "0",XDRGSDAY          * Not same-day
          ENDIF
.
.                                           * read in Mental Health Legal Status
EXT41100  UNPACK    SP20,KEY3,XDRGMHLS,THCSCOD
          LOAD      KEY3,PTCNCSTA,DUSD1,DUSD2,DUSD3,DUSD4,DUSD5,ACARE,PMVXMHLS
.
          COMPARE   "6",PTCNCSTA    
          GOTO      EXT41110 IF EQUAL       * equal 6, use Cat."CC" Care class
          GOTO      EXT41120 IF LESS        * less than 6, use Discharge UDF
. 
          PACK      KEY5,ANSL,ANSS,KEY3     * use Cat."LS" MH Legal Status
          CALL      RDCODE1
          IF        OVRCD <> 1
            MOVE      TCINDC5,XDRGMHLS      * Mental health legal status indicat
          ENDIF     
          GOTO      EXT41500
.
EXT41110  MATCH     SP70,KEY3
          GOTO      EXT41500 IF EQUAL
.
          PACK      KEY5,ANSC,ANSC,KEY3     * use Cat."CC" Care Class
          CALL      RDCODE1
          BRANCH    OVRCD,EXT41500
.
          MOVE      TCINDC5,XDRGMHLS        * Mental health legal status ind.
.
          MATCH     ANSP,TCINDC5
          GOTO      EXT41500 IF NOT EQUAL
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      MEHDLSA1,"mehdlsaf"
          TRAPCLR   IO
          BRANCH    OVRCD,EXT41500
.
          PACK      KEY32,AURNO,SP70
          CALL      RSMHDLS1
EXT41115  CALL      RKMHDLS1                * get from mehdlsaf if tcindc5=P
          BRANCH    OVRCD,EXT41500
.
          MATCH     AURNO,MHDLURNO
          GOTO      EXT41500 IF NOT EQUAL   * check UR
.
          MATCH     "0",MHDLACTV
          GOTO      EXT41115 IF NOT EQUAL   * check active
.
          MATCH     MHDLSDAT,ADATE
          IF        @LESS
            MATCH     MHDLSDAT,DDATE
            GOTO      EXT41115 IF LESS      * legal status in visit date range?
          ENDIF
.
EXT41117  MATCH     SP70,MHDLSCOD
          GOTO      EXT41115 IF EQUAL
          GOTO      EXT41115 IF EOS
.
          PACK      KEY5,ANSL,ANSS,MHDLSCOD,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,EXT41115
.
          MOVE      TCINDC5,XDRGMHLS
          MATCH     "1",TCINDC5
          GOTO      EXT41115 IF NOT EQUAL   * stop if involuntary status exists
.
          GOTO      EXT41500
.
EXT41120  PACK      KEY5,ANSD,PTCNCSTA,KEY3 * use Cat."D*" Discharge UDF 1-5
          CALL      RDCODE1
          IF        OVRCD <> 1
            MOVE      THCSCOD,XDRGMHLS      * Mental health legal status
          ENDIF
          GOTO      EXT41500
.                                           * check MRCNSOMV ("Send hours of MV
.                                             grouper" parameter) - 0-Yes, 1-No
EXT41500  PACK      KEY8,AADMNO
          CALL      RDPTICU1                * Read the patient ICU file
          IF        OVRCD<>1
            COMPARE   ZERO,MRCNSOMV
            IF        @EQUAL
              MOVE      PTICUMEC,FORM4      * FORM5 => FORM4          *I-224838
              MOVE      FORM4,XDRGHMV       * Hours on mechanical ventilation
            ENDIF
          ENDIF
.
          MOVE      XDRGSEP,FORM2
          PACK      CDYSFDTE,ADATE
          REP       " 0",CDYSFDTE
          PACK      CDYSTDTE,DDATE
          REP       " 0",CDYSTDTE
          CALL      CALCDAYS                * Calculate number of hospital days
          MOVE      CDYSDAYS,FORM4
          IF        FORM4>0
            SUB       ONE,FORM4
          ENDIF
          MOVE      FORM4,XDRGALOS          * Acute LOS 4 digits
          MOVE      FORM4,F5
          MOVE      F5,XDRGALS2             * Acute LOS 5 digits
.
          CALL      TOTLEV00                * Get Total Leave Days
          MOVE      DAYCOUNT,FORM4          * Total Leave is 4 digits
          MOVE      FORM4,XDRGTOTL          * Total Leave Days
.
.                                           * Urgency of admission
.
          PACK     KEY5,ANSP,SP1,ACLSS,SP70         * Admission class
          CALL     RDCODE1                          * Cat P ind 16
          IF       OVRCD<>1
            MOVE     TCINDC16,XDRGURGA              * Urgency of admission
          ENDIF
.
          IF        PTCNELPS=12                      
            PACK     KEY5,ANSC,ANSC,ACARE,SP70      * Care class
            CALL     RDCODE1                        * Cat CC ind 13
            IF       OVRCD<>1
              MOVE     TCINDC13,XDRGURGA            * Urgency of admission
            ENDIF
          ENDIF
.
          IF        PTCNELPS=14                       
            PACK     KEY5,ANSV,ANSB,PMVXCADM,SP70   * Criteria for admission
            CALL     RDCODE1                        * Cat VB ind 3
            IF       OVRCD<>1
              MOVE     TCINDC3,XDRGURGA             * Urgency of admission
            ENDIF
          ENDIF
.
          IF        PTCNHDPS=1
            MATCH     SP70,ACARE
            IF        !@EQUAL
              PACK      KEY5,ANSC,ANSC,ACARE,SP70   * Care class
              CALL      RDCODE1                     * Cat CC User defined 6
              IF        OVRCD<>1
                MOVE      THCSCOD,XDRGATYP          * Admit Type (NZ Codefinder)
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,ACARE
          IF        !@EQUAL
            PACK      KEY5,ANSC,ANSC,ACARE,SP70     * Care class
            CALL      RDCODE1                       * Cat CC User defined 6
            IF        OVRCD<>1
              MOVE      PTCDUDF6,XDRGCTYP           * Care Type
              MOVE      THCSCOD,XDRGCCTY            * Care Type - Codefinder
            ENDIF
          ENDIF
.
. Populate NWAU fields if required
.
          MOVE      ZERO,UNIXNWAU      * No export and import of NWAU fields
.
          MATCH     "1",MRCNUNWA       * Grouping Products to return NWAU
          IF        @EQUAL
            MATCH     MRCNENWA,DDATE   * Use NWAU for discharges after date
            GOTO      EXT41900 IF LESS
          ELSE
            GOTO      EXT41900
          ENDIF
.                                      * Unix grouper 
          MOVE      ONE,UNIXNWAU       * Yes export and import NWAU fields
. 
          MATCH     SP70,ASRCE
          IF        !@EQUAL
            PACK      KEY5,ANSS,SP1,ASRCE,SP70      * Admission source
            CALL      RDCODE1
            IF        OVRCD<>1
              MOVE      TCINDC17,XDRGAMOD           * Admission source ind 17
            ENDIF
          ENDIF
.
          MATCH     SP70,PMVXABRG
          IF        !@EQUAL
            PACK      KEY5,ANSV,ANSA,PMVXABRG,SP70  * Aboriginal Torres Straight
            CALL      RDCODE1                       * Islander. Cat VA Ind 4
            IF        OVRCD<>1
              MOVE      TCINDC4,XDRGATSI            * ATSI
            ENDIF
          ENDIF
.
          MATCH     SP70,ACLAIM
          IF        !@EQUAL
            PACK      KEY5,ANSC,ANSL,ACLAIM,SP70    * Claim code
            CALL      RDCODE1                       * Cat CL User defined 4
            IF        OVRCD<>1
              MOVE      PTCDUDF4,XDRGFNDS           * Funding Source
            ENDIF
          ENDIF
.
          PACK      KEY8,AADMNO,SP70
          CALL      RDPTICU1                        * Read the patient ICU file
          IF        OVRCD<>1
            IF        PTICUINT <> 0 | PTICHNCU <> 0
              ASSIGN    PTICHNCU+PTICUINT,F10
              IF        F10>9999
                MOVE      "9999",XDRGICUH
              ELSE
                MOVE      F10,F4
                MOVE      F4,XDRGICUH               * ICU  + NICU Hours
              ENDIF
            ENDIF
          ENDIF
.
          MOVE      XDRGCTYP,D2                     * Care Type 5 
          SQUEEZE   D2                              * Psychogeriatric care
          MATCH     "5",D2
          IF        @EQUAL
            PACK      CDYSFDTE,ADATE                * get length of stay
            REP       " 0",CDYSFDTE
            PACK      CDYSTDTE,DDATE
            REP       " 0",CDYSTDTE
            CALL      CALCDAYS                      * Calculate LOS days
            MOVE      CDYSDAYS,FORM4
            MOVE      FORM4,XDRGPCDY                * PC Days
          ENDIF
.
          MOVE      PPOST,XDRGPCOD                  * Post Code
.
          MATCH     SP70,PMVXUVTH
          IF        !@EQUAL
            PACK      KEY5,ANSK,ANSB,PMVXUVTH,SP70  * Unplanned return
            CALL      RDCODE1                       * to theatre
            IF        OVRCD<>1
              MOVE      TCINDC1,XDRGUROR            * Cat KB Ind 1
            ENDIF
          ENDIF
.
          MOVE      "1",F1                          * Cat A HCP
          MOVE      "Q",D1                          * HCP value Q
          MOVE      DDATE,TODATE                    * To discharge date
          PROC      PATADTDY
          IF        NBRDAYS > 999
            MOVE      "999",F3
          ELSE
            MOVE      NBRDAYS,F3               
          ENDIF
          MOVE      F3,XDRGQDAY                     * Total qualified baby days
.
          MOVE      "2",F1                          * Cat A Ind 3
          MOVE      "P",D1                          * Ind 3 value P
          MOVE      DDATE,TODATE                    * To discharge date
          PROC      PATADTDY
          MOVE      NBRDAYS,XDRGPDAY               * Total psyciatric care days
.
EXT41900  MOVE      ZERO,EXIT
EXT41999  RETURN
.******************************************************************************
.*                                  TOTLEV00                                  *
.*                Get Total Leave Days for this Patient                       *
.*   RETURNS: DAYCOUNT                                                        *
.******************************************************************************
TOTLEV00  MOVE     SP70,FROMDATE
          MOVE     ZERO,COUNT
          MOVE     ZERO,DAYCOUNT           * Total Days on Leave
.
          PACK     KEY30,ADMISSNO,SP70
          CALL     RDSTRAN2
TOTLEV10  CALL     RDKTRAN2
          BRANCH   OVRCD,TOTLEV90
.
          MATCH    ADMISSNO,DTADMN
          GOTO     TOTLEV90 IF NOT EQUAL
.
          MATCH    "L",TMOVE
          IF       @EQUAL
            MATCH    SP70,FROMDATE
            IF       @EQUAL
              MOVE     TDATE,FROMDATE
            ENDIF
          ENDIF
.
          MATCH    "R",TMOVE
          IF       @EQUAL
            MATCH    SP70,FROMDATE
            IF       !@EQUAL
              DAYSEP   FROMDATE,TDATE,COUNT 
              ADD      COUNT,DAYCOUNT     * Increment Total Days on Leave
              MOVE     SP70,FROMDATE      * Reset fromdate
            ENDIF
          ENDIF
.
          GOTO     TOTLEV10
.
TOTLEV90  MATCH    SP70,FROMDATE        * Leave Date with no Return Date?
          IF       !@EQUAL 
            DAYSEP   FROMDATE,CURRDATE,COUNT 
            ADD      COUNT,DAYCOUNT     * Increment Total Days on Leave
          ENDIF
.
TOTLEV99  RETURN
+
.******************************************************************************
.*                                 CHKPR000                                   *
.*                        Check the grouper parameters                        *
.******************************************************************************
CHKPR000  MATCH     SP3,PTCNDGPV
          GOTO      CHKPR950 IF EQUAL       * default grouper not set
.
.         * These checks are not required for Batch grouping used in IBAPMS99
.         * and IBAMRT53.
.  
          MATCH     "IBAPMS99",PRGID
          GOTO      CHKPR900 IF EQUAL
.
          MATCH     DRG120,PTCNDGPV         * DRG 12.0
          IF        @EQUAL
            MATCH     PTCNE120,ENCENDAT     * disc.date > DRG 12.0 effect.date?
            GOTO      CHKPR950 IF LESS      * must run 12.0 grouper
          ENDIF
.
          MATCH     DRG110,PTCNDGPV         * DRG 11.0
          IF        @EQUAL
            MATCH     PTCNE110,ENCENDAT     * disc.date > DRG 11.0 effect.date?
            GOTO      CHKPR950 IF LESS      * must run 11.0 grouper
          ENDIF
.
          MATCH     DRG100,PTCNDGPV         * DRG 10.0
          IF        @EQUAL
            MATCH     PTCNE100,ENCENDAT     * disc.date > DRG 10.0 effect.date?
            GOTO      CHKPR950 IF LESS      * must run 10.0 grouper
          ENDIF
.
          MATCH     DRG090,PTCNDGPV         * DRG 9.0
          IF        @EQUAL
            MATCH     PTCNED90,ENCENDAT     * disc.date > DRG 9.0 effect.date?
            GOTO      CHKPR950 IF LESS      * must run 9.0 grouper
          ENDIF
.
          MATCH     DRG080,PTCNDGPV         * DRG 8.0
          IF        @EQUAL
            MATCH     PTCNED80,ENCENDAT     * disc.date > DRG 8.0 effect.date?
            GOTO      CHKPR950 IF LESS      * must run 8.0 grouper
          ENDIF
.                                                                     *I-284669
          MATCH     DRG070,PTCNDGPV         * DRG 7.0
          IF        @EQUAL
            MATCH     PTCNED70,ENCENDAT     * disc.date > DRG 7.0 effect.date?
            GOTO      CHKPR950 IF LESS      * must run 7.0 grouper
          ENDIF
.                                                                     *I-267797
          MATCH     DRG062,PTCNDGPV         * DRG 6.2
          IF        @EQUAL
            MATCH     PTCNED62,ENCENDAT     * disc.date > DRG 6.2 effect.date?
            GOTO      CHKPR950 IF LESS      * must run 6.2 grouper
          ENDIF
.                                                                     *I-197814
          MATCH     DRG060,PTCNDGPV         * DRG 6.0
          IF        @EQUAL
            MATCH     PTCNED60,ENCENDAT     * disc.date > DRG 6.0 effect.date?
            GOTO      CHKPR950 IF LESS      * must run 6.0 grouper
          ENDIF
.
          MATCH     DRG052,PTCNDGPV         * DRG 5.2
          IF        @EQUAL
            MATCH     PTCNED52,ENCENDAT     * disc.date > DRG 5.2 effect.date?
            GOTO      CHKPR950 IF LESS      * must run 5.2 grouper
          ENDIF
.
          MATCH     DRG051,PTCNDGPV         * DRG 5.1
          IF        @EQUAL
            MATCH     PTCNED51,ENCENDAT     * disc.date > DRG 5.1 effect.date?
            GOTO      CHKPR950 IF LESS      * must run 5.1 grouper
          ENDIF
.
          MATCH     DRG050,PTCNDGPV         * DRG 5.0
          IF        @EQUAL
            MATCH     PTCNED50,ENCENDAT     * disc.date > DRG 5.0 effect.date?
            GOTO      CHKPR950 IF LESS      * must run 5.0 grouper
          ENDIF
.
          MATCH     DRG042,PTCNDGPV
          IF        @EQUAL
            MATCH     PTCNED42,ENCENDAT     * disc.date > DRG 4.2 effect.date?
            GOTO      CHKPR950 IF LESS      * must run 4.2 grouper
          ENDIF
.
          MATCH     DRG041,PTCNDGPV
          IF        @EQUAL
            MATCH     PTCNED41,ENCENDAT     * disc.date > DRG 4.1 effect.date?
            GOTO      CHKPR950 IF LESS      * must run 4.1 grouper
          ENDIF
.
...       MATCH     "031",PTCNDGPV
...       IF        @EQUAL
...         COMPARE   ONE,PTCNU31G
...         GOTO      CHKPR950 IF NOT EQUAL      * must run 3.1 grouper
...       ENDIF
.
CHKPR900  MOVE      ZERO,EXIT
          GOTO      CHKPR999
.
CHKPR950  SCAN      "WEB",PRGID
          IF        @EQUAL
            MOVE      "DRG grouper parameters not set correctly.",WEBTITLE
            CALL      WEBERR00
            MOVE      ONE,EXIT
          ELSE
            MATCH     "IBAMRT53",PRGID
            IF        @EQUAL
              PRINT     *23,"DRG grouper parameters not set correctly."
            ELSE
              MOVE      ONE,EXIT
              DISPLAY   *P1:24,*EL,*B,"DRG grouper parameters not set ":
                                      "correctly.  ";
              CALL      HITENTER
            ENDIF
          ENDIF
          RESET     PRGID
.
CHKPR999  RETURN
+
.******************************************************************************
.*                                  STDRG000                       * C-263691 *
.*                       ( was SGV4100 and/or SGVUN000 )                      *
.*        Setup Grouper Variables - UNIX Grouper, PC Grouper, CodeFinder      *
.******************************************************************************
STDRG000  MATCH     "031",XDRGGRP
          IF        @EQUAL
            UNPACK    XDRGDRG,KEY1,KEY3
            REP       " 0",KEY3
            PACK      XDRGDRG,KEY3,SP1
          ENDIF
.
          SQUEEZE   XDRGDRG
          PACK      XDRGDRG,XDRGDRG,SP4
          SQUEEZE   XDRGMDC
          PACK      XDRGMDC,XDRGMDC,SP4
.
          CALL      CLRPTPRG                * clear PATPRGaf data fields
.
          PACK      PTPGNDRG,XDRGDRG,SP4    * National data
          PACK      PTPGNMDC,XDRGMDC,SP4
          COMPARE   ONE,MRCNGRUP            * set "PC Grouper" extra fields
          IF        @EQUAL
            PACK      KEY11,SP2,XDRGNWT
            MOVE      KEY11,PTPGNWGT
            MOVE      XDRGNALS,PTPGNALS
          ENDIF
.
          PACK      PTPGSDRG,XDRGDRG,SP4    * State data
          PACK      PTPGSMDC,XDRGMDC,SP4
          COMPARE   ONE,MRCNGRUP            * set "PC Grouper" extra fields
          IF        @EQUAL
            PACK      KEY11,SP2,XDRGSWT
            MOVE      KEY11,PTPGSWGT
            MOVE      XDRGSALS,PTPGSALS
          ENDIF
.
          PACK      PTPGLDRG,XDRGDRG,SP4    * Local data
          PACK      PTPGLMDC,XDRGMDC,SP4
          COMPARE   ONE,MRCNGRUP            * set "PC Grouper" extra fields
          IF        @EQUAL
            PACK      KEY11,SP2,XDRGLWT
            MOVE      KEY11,PTPGLWGT
            MOVE      XDRGLALS,PTPGLALS
          ENDIF
.
          MOVE      XDRGCCL,PTPGPCCL
.
          MOVE      ADATE,FROMDATE
          MOVE      DDATE,TODATE
          CALL      RTIODAYS                * Get LOS
          CALL      RHIHDAYS                * Get HIH Days
.
          CALL      WIESCALC                * Calculate WIES values
.
          MATCH     "1",MRCNUNWA       * Grouping Products to return NWAU
          IF        @EQUAL
            MATCH     MRCNENWA,DDATE   * Use NWAU for discharges after date
            IF        !@LESS
              MOVE      XDRGTOTN,PTPGWTOL    * Total NWAU
            ENDIF
          ENDIF
.
          MOVE      XDRGECRW,PTPGECRW       * ECCS RAW Format
.
          MOVE      ZERO,EXIT
STDRG999  RETURN
+
.******************************************************************************
.*                                  STEDG000                                  *
.*                Setup Codefinder Patient Grouper Variables                  *
.******************************************************************************
.
STEDG000  SQUEEZE   XDRGDRG                 * overkill ??
          PACK      XDRGDRG,XDRGDRG,SP4
          SQUEEZE   XDRGMDC
          PACK      XDRGMDC,XDRGMDC,SP4
.
          CALL      CLRPTPRG                * clear data fields
.
          PACK      PTPGNDRG,XDRGDRG,SP4    * National data
          PACK      PTPGNMDC,XDRGMDC,SP4
          PACK      KEY11,SP2,XDRGNWT
          MOVE      KEY11,PTPGNWGT
          MOVE      ZERO,PTPGNALS
          MOVE      XDRGNALS,PTPGNALS
.
          PACK      PTPGSDRG,XDRGDRG,SP4    * State data
          PACK      PTPGSMDC,XDRGMDC,SP4
...       PACK      KEY11,SP2,XDRGSWT
...       MOVE      KEY11,PTPGSWGT
...       MOVE      XDRGSALS,PTPGSALS
.
          PACK      PTPGLDRG,XDRGDRG,SP4    * Local data
          PACK      PTPGLMDC,XDRGMDC,SP4
...       PACK      KEY11,SP2,XDRGLWT
...       MOVE      KEY11,PTPGLWGT
...       MOVE      XDRGLALS,PTPGLALS
.
          MOVE      XDRGCCL,PTPGPCCL        * PCCL & WIES values
.
          MOVE      TOTWISCF,PTPGWTOL       * Codefinder WIES Total
.
          MOVE      ADATE,FROMDATE
          MOVE      DDATE,TODATE
          CALL      RTIODAYS                * Get LOS
          CALL      RHIHDAYS                * Get HIH Days
.
          MOVE      XDRGECRW,PTPGECRW       * ECCS RAW Format
.
STEDG900  MOVE      ZERO,EXIT
STEDG999  RETURN
.
.******************************************************************************
.*                Clear PATPGRaf record - data variables only                  *
.******************************************************************************
CLRPTPRG  PACK      PTPGNDRG,SP10
          PACK      PTPGNMDC,SP10
          MOVE      ZERO,PTPGNWGT
          MOVE      ZERO,PTPGNALS
          PACK      PTPGSDRG,SP10
          PACK      PTPGSMDC,SP10
          MOVE      ZERO,PTPGSWGT
          MOVE      ZERO,PTPGSALS
          PACK      PTPGLDRG,SP10
          PACK      PTPGLMDC,SP10
          MOVE      ZERO,PTPGLWGT
          MOVE      ZERO,PTPGLALS
          PACK      PTPGPCCL,SP10
          MOVE      ZERO,PTPGWFIX
          MOVE      ZERO,PTPGWVAR
          MOVE      ZERO,PTPGWTOL
          MOVE      ZERO,PTPGWWTU
          PACK      PTPGWWTD,SP20
          PACK      PTPGECRW,SP70
          PACK      PTPGSPAR,SP70
CLRPT999  RETURN
.
.******************************************************************************
.*                I/O Routines for the UNIX Grouper tempfile                   *
.******************************************************************************
RDUNIX1   MOVE      ZERO,OVRCD
.
.         Unix grouper export and import NWAU fields
.
          IF       UNIXNWAU=1
            READ      OUTFILE2,SEQ;XDRGSTAT,XDRGHOSP,XDRGMEDN,XDRGHTYP,XDRGADAT:
                                   XDRGDDAT,XDRGSEP,XDRGBDAT,XDRGAWHT,XDRGAGEY:
                                   XDRGAGED,XDRGSEX,XDRGHMV:
                                   XDRGDS01,XDRGDI01,XDRGDS02:
                                   XDRGDS03,XDRGDS04,XDRGDS05,XDRGDS06,XDRGDS07:
                                   XDRGDS08,XDRGDS09,XDRGDS10,XDRGDS11,XDRGDS12:
                                   XDRGDS13,XDRGDS14,XDRGDS15,XDRGDS16,XDRGDS17:
                                   XDRGDS18,XDRGDS19,XDRGDS20,XDRGDS21,XDRGDS22:
                                   XDRGDS23,XDRGDS24,XDRGDS25,XDRGDS26,XDRGDS27:
                                   XDRGDS28,XDRGDS29,XDRGDS30,XDRGDS31,XDRGDS32:
                                   XDRGDS33,XDRGDS34,XDRGDS35,XDRGDS36,XDRGDS37:
                                   XDRGDS38,XDRGDS39,XDRGDS40,XDRGDS41,XDRGDS42:
                                   XDRGDS43,XDRGDS44,XDRGDS45,XDRGDS46,XDRGDS47:
                                   XDRGDS48,XDRGDS49,XDRGDS50,XDRGDS51,XDRGDS52:
                                   XDRGDS53,XDRGDS54,XDRGDS55,XDRGDS56,XDRGDS57:
                                   XDRGDS58,XDRGDS59,XDRGDS60,XDRGDS61,XDRGDS62:
                                   XDRGDS63,XDRGDS64,XDRGDS65,XDRGDS66,XDRGDS67:
                                   XDRGDS68,XDRGDS69,XDRGDS70,XDRGDS71,XDRGDS72:
                                   XDRGDS73,XDRGDS74,XDRGDS75,XDRGDS76,XDRGDS77:
                                   XDRGDS78,XDRGDS79,XDRGDS80,XDRGDS81,XDRGDS82:
                                   XDRGDS83,XDRGDS84,XDRGDS85,XDRGDS86,XDRGDS87:
                                   XDRGDS88,XDRGDS89,XDRGDS90,XDRGDS91,XDRGDS92:
                                   XDRGDS93,XDRGDS94,XDRGDS95,XDRGDS96,XDRGDS97:
                                   XDRGDS98,XDRGDS99,XDRDS100:
                                   XDRGDI02,XDRGDI03,XDRGDI04,XDRGDI05:
                                   XDRGDI06,XDRGDI07,XDRGDI08,XDRGDI09,XDRGDI10:
                                   XDRGDI11,XDRGDI12,XDRGDI13,XDRGDI14,XDRGDI15:
                                   XDRGDI16,XDRGDI17,XDRGDI18,XDRGDI19,XDRGDI20:
                                   XDRGDI21,XDRGDI22,XDRGDI23,XDRGDI24,XDRGDI25:
                                   XDRGDI26,XDRGDI27,XDRGDI28,XDRGDI29,XDRGDI30:
                                   XDRGDI31,XDRGDI32,XDRGDI33,XDRGDI34,XDRGDI35:
                                   XDRGDI36,XDRGDI37,XDRGDI38,XDRGDI39,XDRGDI40:
                                   XDRGDI41,XDRGDI42,XDRGDI43,XDRGDI44,XDRGDI45:
                                   XDRGDI46,XDRGDI47,XDRGDI48,XDRGDI49,XDRGDI50:
                                   XDRGDI51,XDRGDI52,XDRGDI53,XDRGDI54,XDRGDI55:
                                   XDRGDI56,XDRGDI57,XDRGDI58,XDRGDI59,XDRGDI60:
                                   XDRGDI61,XDRGDI62,XDRGDI63,XDRGDI64,XDRGDI65:
                                   XDRGDI66,XDRGDI67,XDRGDI68,XDRGDI69,XDRGDI70:
                                   XDRGDI71,XDRGDI72,XDRGDI73,XDRGDI74,XDRGDI75:
                                   XDRGDI76,XDRGDI77,XDRGDI78,XDRGDI79,XDRGDI80:
                                   XDRGDI81,XDRGDI82,XDRGDI83,XDRGDI84,XDRGDI85:
                                   XDRGDI86,XDRGDI87,XDRGDI88,XDRGDI89,XDRGDI90:
                                   XDRGDI91,XDRGDI92,XDRGDI93,XDRGDI94,XDRGDI95:
                                   XDRGDI96,XDRGDI97,XDRGDI98,XDRGDI99,XDRDI100:
                                   XDRGOP01,XDRGOP02:
                                   XDRGOP03,XDRGOP04,XDRGOP05,XDRGOP06,XDRGOP07:
                                   XDRGOP08,XDRGOP09,XDRGOP10,XDRGOP11,XDRGOP12:
                                   XDRGOP13,XDRGOP14,XDRGOP15,XDRGOP16,XDRGOP17:
                                   XDRGOP18,XDRGOP19,XDRGOP20,XDRGOP21,XDRGOP22:
                                   XDRGOP23,XDRGOP24,XDRGOP25,XDRGOP26,XDRGOP27:
                                   XDRGOP28,XDRGOP29,XDRGOP30,XDRGOP31,XDRGOP32:
                                   XDRGOP33,XDRGOP34,XDRGOP35,XDRGOP36,XDRGOP37:
                                   XDRGOP38,XDRGOP39,XDRGOP40,XDRGOP41,XDRGOP42:
                                   XDRGOP43,XDRGOP44,XDRGOP45,XDRGOP46,XDRGOP47:
                                   XDRGOP48,XDRGOP49,XDRGOP50,XDRGOP51,XDRGOP52:
                                   XDRGOP53,XDRGOP54,XDRGOP55,XDRGOP56,XDRGOP57:
                                   XDRGOP58,XDRGOP59,XDRGOP60,XDRGOP61,XDRGOP62:
                                   XDRGOP63,XDRGOP64,XDRGOP65,XDRGOP66,XDRGOP67:
                                   XDRGOP68,XDRGOP69,XDRGOP70,XDRGOP71,XDRGOP72:
                                   XDRGOP73,XDRGOP74,XDRGOP75,XDRGOP76,XDRGOP77:
                                   XDRGOP78,XDRGOP79,XDRGOP80,XDRGOP81,XDRGOP82:
                                   XDRGOP83,XDRGOP84,XDRGOP85,XDRGOP86,XDRGOP87:
                                   XDRGOP88,XDRGOP89,XDRGOP90,XDRGOP91,XDRGOP92:
                                   XDRGOP93,XDRGOP94,XDRGOP95,XDRGOP96,XDRGOP97:
                                   XDRGOP98,XDRGOP99,XDROP100,XDRGALS2,XDRGNLOS:
                                   XDRGTOTL,XDRGSDAY,XDRGMHLS,XDRGDRG,XDRGMDC:
                                   XDRGGAGE,XDRGGSEX,XDRGGLOS,XDRGGSDF,XDRGGSEP:
                                   XDRGADMW,XDRGGHMV,XDRGGMHL,XDRGGPDX,XDRGDX01:
                                   XDRGDX02,XDRGDX03,XDRGDX04,XDRGDX05,XDRGDX06:
                                   XDRGDX07,XDRGDX08,XDRGDX09,XDRGDX10,XDRGDX11:
                                   XDRGDX12,XDRGDX13,XDRGDX14,XDRGDX15,XDRGDX16:
                                   XDRGDX17,XDRGDX18,XDRGDX19,XDRGDX20,XDRGDX21:
                                   XDRGDX22,XDRGDX23,XDRGDX24,XDRGDX25,XDRGDX26:
                                   XDRGDX27,XDRGDX28,XDRGDX29,XDRGDX30,XDRGDX31:
                                   XDRGDX32,XDRGDX33,XDRGDX34,XDRGDX35,XDRGDX36:
                                   XDRGDX37,XDRGDX38,XDRGDX39,XDRGDX40,XDRGDX41:
                                   XDRGDX42,XDRGDX43,XDRGDX44,XDRGDX45,XDRGDX46:
                                   XDRGDX47,XDRGDX48,XDRGDX49,XDRGDX50,XDRGDX51:
                                   XDRGDX52,XDRGDX53,XDRGDX54,XDRGDX55,XDRGDX56:
                                   XDRGDX57,XDRGDX58,XDRGDX59,XDRGDX60,XDRGDX61:
                                   XDRGDX62,XDRGDX63,XDRGDX64,XDRGDX65,XDRGDX66:
                                   XDRGDX67,XDRGDX68,XDRGDX69,XDRGDX70,XDRGDX71:
                                   XDRGDX72,XDRGDX73,XDRGDX74,XDRGDX75,XDRGDX76:
                                   XDRGDX77,XDRGDX78,XDRGDX79,XDRGDX80,XDRGDX81:
                                   XDRGDX82,XDRGDX83,XDRGDX84,XDRGDX85,XDRGDX86:
                                   XDRGDX87,XDRGDX88,XDRGDX89,XDRGDX90,XDRGDX91:
                                   XDRGDX92,XDRGDX93,XDRGDX94,XDRGDX95,XDRGDX96:
                                   XDRGDX97,XDRGDX98,XDRGDX99,XDRDX100,XDRGSR01:
                                   XDRGSR02,XDRGSR03,XDRGSR04,XDRGSR05,XDRGSR06:
                                   XDRGSR07,XDRGSR08,XDRGSR09,XDRGSR10,XDRGSR11:
                                   XDRGSR12,XDRGSR13,XDRGSR14,XDRGSR15,XDRGSR16:
                                   XDRGSR17,XDRGSR18,XDRGSR19,XDRGSR20,XDRGSR21:
                                   XDRGSR22,XDRGSR23,XDRGSR24,XDRGSR25,XDRGSR26:
                                   XDRGSR27,XDRGSR28,XDRGSR29,XDRGSR30,XDRGSR31:
                                   XDRGSR32,XDRGSR33,XDRGSR34,XDRGSR35,XDRGSR36:
                                   XDRGSR37,XDRGSR38,XDRGSR39,XDRGSR40,XDRGSR41:
                                   XDRGSR42,XDRGSR43,XDRGSR44,XDRGSR45,XDRGSR46:
                                   XDRGSR47,XDRGSR48,XDRGSR49,XDRGSR50,XDRGSR51:
                                   XDRGSR52,XDRGSR53,XDRGSR54,XDRGSR55,XDRGSR56:
                                   XDRGSR57,XDRGSR58,XDRGSR59,XDRGSR60,XDRGSR61:
                                   XDRGSR62,XDRGSR63,XDRGSR64,XDRGSR65,XDRGSR66:
                                   XDRGSR67,XDRGSR68,XDRGSR69,XDRGSR70,XDRGSR71:
                                   XDRGSR72,XDRGSR73,XDRGSR74,XDRGSR75,XDRGSR76:
                                   XDRGSR77,XDRGSR78,XDRGSR79,XDRGSR80,XDRGSR81:
                                   XDRGSR82,XDRGSR83,XDRGSR84,XDRGSR85,XDRGSR86:
                                   XDRGSR87,XDRGSR88,XDRGSR89,XDRGSR90,XDRGSR91:
                                   XDRGSR92,XDRGSR93,XDRGSR94,XDRGSR95,XDRGSR96:
                                   XDRGSR97,XDRGSR98,XDRGSR99,XDRGS100:
                                   XDRGGSC,XDRGCCL,XDRGCLOS,XDRGCAGD,XDRGCAGY:
                                   XDRGCBWT,XDRGCSDF,XDRGCMHL,XDRGULOS,XDRGUAGD:
                                   XDRGUAGY,XDRGUBWT,XDRGUSDF,XDRGUMHL,XDRGECRW:
                                   XDRGNWAU,XDRGCHSC:
                                   XDRGCF01,XDRGCF02,XDRGCF03,XDRGCF04,XDRGCF05:
                                   XDRGCF06,XDRGCF07,XDRGCF08,XDRGCF09,XDRGCF10:
                                   XDRGCF11,XDRGCF12,XDRGCF13,XDRGCF14,XDRGCF15:
                                   XDRGCF16,XDRGCF17,XDRGCF18,XDRGCF19,XDRGCF20:
                                   XDRGCF21,XDRGCF22,XDRGCF23,XDRGCF24,XDRGCF25:
                                   XDRGCF26,XDRGCF27,XDRGCF28,XDRGCF29,XDRGCF30:
                                   XDRGCF31,XDRGCF32,XDRGCF33,XDRGCF34,XDRGCF35:
                                   XDRGCF36,XDRGCF37,XDRGCF38,XDRGCF39,XDRGCF40:
                                   XDRGCF41,XDRGCF42,XDRGCF43,XDRGCF44,XDRGCF45:
                                   XDRGCF46,XDRGCF47,XDRGCF48,XDRGCF49,XDRGCF50:
                                   XDRGCF51,XDRGCF52,XDRGCF53,XDRGCF54,XDRGCF55:
                                   XDRGCF56,XDRGCF57,XDRGCF58,XDRGCF59,XDRGCF60:
                                   XDRGCF61,XDRGCF62,XDRGCF63,XDRGCF64,XDRGCF65:
                                   XDRGCF66,XDRGCF67,XDRGCF68,XDRGCF69,XDRGCF70:
                                   XDRGCF71,XDRGCF72,XDRGCF73,XDRGCF74,XDRGCF75:
                                   XDRGCF76,XDRGCF77,XDRGCF78,XDRGCF79,XDRGCF80:
                                   XDRGCF81,XDRGCF82,XDRGCF83,XDRGCF84,XDRGCF85:
                                   XDRGCF86,XDRGCF87,XDRGCF88,XDRGCF89,XDRGCF90:
                                   XDRGCF91,XDRGCF92,XDRGCF93,XDRGCF94,XDRGCF95:
                                   XDRGCF96,XDRGCF97,XDRGCF98,XDRGCF99,XDRGC100
            GOTO      OVERCOND IF OVER
          ELSE
            READ      OUTFILE2,SEQ;XDRGSTAT,XDRGHOSP,XDRGMEDN,XDRGHTYP,XDRGADAT:
                                   XDRGDDAT,XDRGSEP,XDRGBDAT,XDRGAWHT,XDRGAGEY:
                                   XDRGAGED,XDRGSEX,XDRGHMV:
                                   XDRGDS01,XDRGDI01,XDRGDS02:
                                   XDRGDS03,XDRGDS04,XDRGDS05,XDRGDS06,XDRGDS07:
                                   XDRGDS08,XDRGDS09,XDRGDS10,XDRGDS11,XDRGDS12:
                                   XDRGDS13,XDRGDS14,XDRGDS15,XDRGDS16,XDRGDS17:
                                   XDRGDS18,XDRGDS19,XDRGDS20,XDRGDS21,XDRGDS22:
                                   XDRGDS23,XDRGDS24,XDRGDS25,XDRGDS26,XDRGDS27:
                                   XDRGDS28,XDRGDS29,XDRGDS30,XDRGDS31,XDRGDS32:
                                   XDRGDS33,XDRGDS34,XDRGDS35,XDRGDS36,XDRGDS37:
                                   XDRGDS38,XDRGDS39,XDRGDS40,XDRGDS41,XDRGDS42:
                                   XDRGDS43,XDRGDS44,XDRGDS45,XDRGDS46,XDRGDS47:
                                   XDRGDS48,XDRGDS49,XDRGDS50,XDRGDS51,XDRGDS52:
                                   XDRGDS53,XDRGDS54,XDRGDS55,XDRGDS56,XDRGDS57:
                                   XDRGDS58,XDRGDS59,XDRGDS60,XDRGDS61,XDRGDS62:
                                   XDRGDS63,XDRGDS64,XDRGDS65,XDRGDS66,XDRGDS67:
                                   XDRGDS68,XDRGDS69,XDRGDS70,XDRGDS71,XDRGDS72:
                                   XDRGDS73,XDRGDS74,XDRGDS75,XDRGDS76,XDRGDS77:
                                   XDRGDS78,XDRGDS79,XDRGDS80,XDRGDS81,XDRGDS82:
                                   XDRGDS83,XDRGDS84,XDRGDS85,XDRGDS86,XDRGDS87:
                                   XDRGDS88,XDRGDS89,XDRGDS90,XDRGDS91,XDRGDS92:
                                   XDRGDS93,XDRGDS94,XDRGDS95,XDRGDS96,XDRGDS97:
                                   XDRGDS98,XDRGDS99,XDRDS100:
                                   XDRGDI02,XDRGDI03,XDRGDI04,XDRGDI05:
                                   XDRGDI06,XDRGDI07,XDRGDI08,XDRGDI09,XDRGDI10:
                                   XDRGDI11,XDRGDI12,XDRGDI13,XDRGDI14,XDRGDI15:
                                   XDRGDI16,XDRGDI17,XDRGDI18,XDRGDI19,XDRGDI20:
                                   XDRGDI21,XDRGDI22,XDRGDI23,XDRGDI24,XDRGDI25:
                                   XDRGDI26,XDRGDI27,XDRGDI28,XDRGDI29,XDRGDI30:
                                   XDRGDI31,XDRGDI32,XDRGDI33,XDRGDI34,XDRGDI35:
                                   XDRGDI36,XDRGDI37,XDRGDI38,XDRGDI39,XDRGDI40:
                                   XDRGDI41,XDRGDI42,XDRGDI43,XDRGDI44,XDRGDI45:
                                   XDRGDI46,XDRGDI47,XDRGDI48,XDRGDI49,XDRGDI50:
                                   XDRGDI51,XDRGDI52,XDRGDI53,XDRGDI54,XDRGDI55:
                                   XDRGDI56,XDRGDI57,XDRGDI58,XDRGDI59,XDRGDI60:
                                   XDRGDI61,XDRGDI62,XDRGDI63,XDRGDI64,XDRGDI65:
                                   XDRGDI66,XDRGDI67,XDRGDI68,XDRGDI69,XDRGDI70:
                                   XDRGDI71,XDRGDI72,XDRGDI73,XDRGDI74,XDRGDI75:
                                   XDRGDI76,XDRGDI77,XDRGDI78,XDRGDI79,XDRGDI80:
                                   XDRGDI81,XDRGDI82,XDRGDI83,XDRGDI84,XDRGDI85:
                                   XDRGDI86,XDRGDI87,XDRGDI88,XDRGDI89,XDRGDI90:
                                   XDRGDI91,XDRGDI92,XDRGDI93,XDRGDI94,XDRGDI95:
                                   XDRGDI96,XDRGDI97,XDRGDI98,XDRGDI99,XDRDI100:
                                   XDRGOP01,XDRGOP02:
                                   XDRGOP03,XDRGOP04,XDRGOP05,XDRGOP06,XDRGOP07:
                                   XDRGOP08,XDRGOP09,XDRGOP10,XDRGOP11,XDRGOP12:
                                   XDRGOP13,XDRGOP14,XDRGOP15,XDRGOP16,XDRGOP17:
                                   XDRGOP18,XDRGOP19,XDRGOP20,XDRGOP21,XDRGOP22:
                                   XDRGOP23,XDRGOP24,XDRGOP25,XDRGOP26,XDRGOP27:
                                   XDRGOP28,XDRGOP29,XDRGOP30,XDRGOP31,XDRGOP32:
                                   XDRGOP33,XDRGOP34,XDRGOP35,XDRGOP36,XDRGOP37:
                                   XDRGOP38,XDRGOP39,XDRGOP40,XDRGOP41,XDRGOP42:
                                   XDRGOP43,XDRGOP44,XDRGOP45,XDRGOP46,XDRGOP47:
                                   XDRGOP48,XDRGOP49,XDRGOP50,XDRGOP51,XDRGOP52:
                                   XDRGOP53,XDRGOP54,XDRGOP55,XDRGOP56,XDRGOP57:
                                   XDRGOP58,XDRGOP59,XDRGOP60,XDRGOP61,XDRGOP62:
                                   XDRGOP63,XDRGOP64,XDRGOP65,XDRGOP66,XDRGOP67:
                                   XDRGOP68,XDRGOP69,XDRGOP70,XDRGOP71,XDRGOP72:
                                   XDRGOP73,XDRGOP74,XDRGOP75,XDRGOP76,XDRGOP77:
                                   XDRGOP78,XDRGOP79,XDRGOP80,XDRGOP81,XDRGOP82:
                                   XDRGOP83,XDRGOP84,XDRGOP85,XDRGOP86,XDRGOP87:
                                   XDRGOP88,XDRGOP89,XDRGOP90,XDRGOP91,XDRGOP92:
                                   XDRGOP93,XDRGOP94,XDRGOP95,XDRGOP96,XDRGOP97:
                                   XDRGOP98,XDRGOP99,XDROP100,XDRGALS2,XDRGNLOS:
                                   XDRGTOTL,XDRGSDAY,XDRGMHLS,XDRGDRG,XDRGMDC:
                                   XDRGGAGE,XDRGGSEX,XDRGGLOS,XDRGGSDF,XDRGGSEP:
                                   XDRGADMW,XDRGGHMV,XDRGGMHL,XDRGGPDX,XDRGDX01:
                                   XDRGDX02,XDRGDX03,XDRGDX04,XDRGDX05,XDRGDX06:
                                   XDRGDX07,XDRGDX08,XDRGDX09,XDRGDX10,XDRGDX11:
                                   XDRGDX12,XDRGDX13,XDRGDX14,XDRGDX15,XDRGDX16:
                                   XDRGDX17,XDRGDX18,XDRGDX19,XDRGDX20,XDRGDX21:
                                   XDRGDX22,XDRGDX23,XDRGDX24,XDRGDX25,XDRGDX26:
                                   XDRGDX27,XDRGDX28,XDRGDX29,XDRGDX30,XDRGDX31:
                                   XDRGDX32,XDRGDX33,XDRGDX34,XDRGDX35,XDRGDX36:
                                   XDRGDX37,XDRGDX38,XDRGDX39,XDRGDX40,XDRGDX41:
                                   XDRGDX42,XDRGDX43,XDRGDX44,XDRGDX45,XDRGDX46:
                                   XDRGDX47,XDRGDX48,XDRGDX49,XDRGDX50,XDRGDX51:
                                   XDRGDX52,XDRGDX53,XDRGDX54,XDRGDX55,XDRGDX56:
                                   XDRGDX57,XDRGDX58,XDRGDX59,XDRGDX60,XDRGDX61:
                                   XDRGDX62,XDRGDX63,XDRGDX64,XDRGDX65,XDRGDX66:
                                   XDRGDX67,XDRGDX68,XDRGDX69,XDRGDX70,XDRGDX71:
                                   XDRGDX72,XDRGDX73,XDRGDX74,XDRGDX75,XDRGDX76:
                                   XDRGDX77,XDRGDX78,XDRGDX79,XDRGDX80,XDRGDX81:
                                   XDRGDX82,XDRGDX83,XDRGDX84,XDRGDX85,XDRGDX86:
                                   XDRGDX87,XDRGDX88,XDRGDX89,XDRGDX90,XDRGDX91:
                                   XDRGDX92,XDRGDX93,XDRGDX94,XDRGDX95,XDRGDX96:
                                   XDRGDX97,XDRGDX98,XDRGDX99,XDRDX100,XDRGSR01:
                                   XDRGSR02,XDRGSR03,XDRGSR04,XDRGSR05,XDRGSR06:
                                   XDRGSR07,XDRGSR08,XDRGSR09,XDRGSR10,XDRGSR11:
                                   XDRGSR12,XDRGSR13,XDRGSR14,XDRGSR15,XDRGSR16:
                                   XDRGSR17,XDRGSR18,XDRGSR19,XDRGSR20,XDRGSR21:
                                   XDRGSR22,XDRGSR23,XDRGSR24,XDRGSR25,XDRGSR26:
                                   XDRGSR27,XDRGSR28,XDRGSR29,XDRGSR30,XDRGSR31:
                                   XDRGSR32,XDRGSR33,XDRGSR34,XDRGSR35,XDRGSR36:
                                   XDRGSR37,XDRGSR38,XDRGSR39,XDRGSR40,XDRGSR41:
                                   XDRGSR42,XDRGSR43,XDRGSR44,XDRGSR45,XDRGSR46:
                                   XDRGSR47,XDRGSR48,XDRGSR49,XDRGSR50,XDRGSR51:
                                   XDRGSR52,XDRGSR53,XDRGSR54,XDRGSR55,XDRGSR56:
                                   XDRGSR57,XDRGSR58,XDRGSR59,XDRGSR60,XDRGSR61:
                                   XDRGSR62,XDRGSR63,XDRGSR64,XDRGSR65,XDRGSR66:
                                   XDRGSR67,XDRGSR68,XDRGSR69,XDRGSR70,XDRGSR71:
                                   XDRGSR72,XDRGSR73,XDRGSR74,XDRGSR75,XDRGSR76:
                                   XDRGSR77,XDRGSR78,XDRGSR79,XDRGSR80,XDRGSR81:
                                   XDRGSR82,XDRGSR83,XDRGSR84,XDRGSR85,XDRGSR86:
                                   XDRGSR87,XDRGSR88,XDRGSR89,XDRGSR90,XDRGSR91:
                                   XDRGSR92,XDRGSR93,XDRGSR94,XDRGSR95,XDRGSR96:
                                   XDRGSR97,XDRGSR98,XDRGSR99,XDRGS100:
                                   XDRGGSC,XDRGCCL,XDRGCLOS,XDRGCAGD,XDRGCAGY:
                                   XDRGCBWT,XDRGCSDF,XDRGCMHL,XDRGULOS,XDRGUAGD:
                                   XDRGUAGY,XDRGUBWT,XDRGUSDF,XDRGUMHL,XDRGECRW:
                                   XDRGCHSC:
                                   XDRGCF01,XDRGCF02,XDRGCF03,XDRGCF04,XDRGCF05:
                                   XDRGCF06,XDRGCF07,XDRGCF08,XDRGCF09,XDRGCF10:
                                   XDRGCF11,XDRGCF12,XDRGCF13,XDRGCF14,XDRGCF15:
                                   XDRGCF16,XDRGCF17,XDRGCF18,XDRGCF19,XDRGCF20:
                                   XDRGCF21,XDRGCF22,XDRGCF23,XDRGCF24,XDRGCF25:
                                   XDRGCF26,XDRGCF27,XDRGCF28,XDRGCF29,XDRGCF30:
                                   XDRGCF31,XDRGCF32,XDRGCF33,XDRGCF34,XDRGCF35:
                                   XDRGCF36,XDRGCF37,XDRGCF38,XDRGCF39,XDRGCF40:
                                   XDRGCF41,XDRGCF42,XDRGCF43,XDRGCF44,XDRGCF45:
                                   XDRGCF46,XDRGCF47,XDRGCF48,XDRGCF49,XDRGCF50:
                                   XDRGCF51,XDRGCF52,XDRGCF53,XDRGCF54,XDRGCF55:
                                   XDRGCF56,XDRGCF57,XDRGCF58,XDRGCF59,XDRGCF60:
                                   XDRGCF61,XDRGCF62,XDRGCF63,XDRGCF64,XDRGCF65:
                                   XDRGCF66,XDRGCF67,XDRGCF68,XDRGCF69,XDRGCF70:
                                   XDRGCF71,XDRGCF72,XDRGCF73,XDRGCF74,XDRGCF75:
                                   XDRGCF76,XDRGCF77,XDRGCF78,XDRGCF79,XDRGCF80:
                                   XDRGCF81,XDRGCF82,XDRGCF83,XDRGCF84,XDRGCF85:
                                   XDRGCF86,XDRGCF87,XDRGCF88,XDRGCF89,XDRGCF90:
                                   XDRGCF91,XDRGCF92,XDRGCF93,XDRGCF94,XDRGCF95:
                                   XDRGCF96,XDRGCF97,XDRGCF98,XDRGCF99,XDRGC100
            GOTO      OVERCOND IF OVER
          ENDIF
          IF       UNIXNWAU=1
            SQUEEZE  XDRGNWAU
            MOVE     XDRGNWAU,XDRGTOTN      * Total NWAU to unix grouper
          ENDIF
          RETURN
.
WRUNIX1  
.
.         Unix grouper export and import NWAU fields
.
          IF       UNIXNWAU=1
            WRITE     INPFIL41,SEQ;XDRGSTAT,XDRGHOSP,XDRGMEDN,XDRGHTYP,XDRGADAT:
                                   XDRGDDAT,XDRGSEP,XDRGBDAT,XDRGAWHT,XDRGAGEY:
                                   XDRGAGED,XDRGSEX,XDRGHMV:
                                   XDRGDS01,XDRGDC01,XDRGDI01:
                                   XDRGDS02,XDRGDS03,XDRGDS04,XDRGDS05:
                                   XDRGDS06,XDRGDS07,XDRGDS08,XDRGDS09,XDRGDS10:
                                   XDRGDS11,XDRGDS12,XDRGDS13,XDRGDS14,XDRGDS15:
                                   XDRGDS16,XDRGDS17,XDRGDS18,XDRGDS19,XDRGDS20:
                                   XDRGDS21,XDRGDS22,XDRGDS23,XDRGDS24,XDRGDS25:
                                   XDRGDS26,XDRGDS27,XDRGDS28,XDRGDS29,XDRGDS30:
                                   XDRGDS31,XDRGDS32,XDRGDS33,XDRGDS34,XDRGDS35:
                                   XDRGDS36,XDRGDS37,XDRGDS38,XDRGDS39,XDRGDS40:
                                   XDRGDS41,XDRGDS42,XDRGDS43,XDRGDS44,XDRGDS45:
                                   XDRGDS46,XDRGDS47,XDRGDS48,XDRGDS49,XDRGDS50:
                                   XDRGDS51,XDRGDS52,XDRGDS53,XDRGDS54,XDRGDS55:
                                   XDRGDS56,XDRGDS57,XDRGDS58,XDRGDS59,XDRGDS60:
                                   XDRGDS61,XDRGDS62,XDRGDS63,XDRGDS64,XDRGDS65:
                                   XDRGDS66,XDRGDS67,XDRGDS68,XDRGDS69,XDRGDS70:
                                   XDRGDS71,XDRGDS72,XDRGDS73,XDRGDS74,XDRGDS75:
                                   XDRGDS76,XDRGDS77,XDRGDS78,XDRGDS79,XDRGDS80:
                                   XDRGDS81,XDRGDS82,XDRGDS83,XDRGDS84,XDRGDS85:
                                   XDRGDS86,XDRGDS87,XDRGDS88,XDRGDS89,XDRGDS90:
                                   XDRGDS91,XDRGDS92,XDRGDS93,XDRGDS94,XDRGDS95:
                                   XDRGDS96,XDRGDS97,XDRGDS98,XDRGDS99,XDRDS100:
                                   XDRGDC02,XDRGDC03,XDRGDC04,XDRGDC05:
                                   XDRGDC06,XDRGDC07,XDRGDC08,XDRGDC09,XDRGDC10:
                                   XDRGDC11,XDRGDC12,XDRGDC13,XDRGDC14,XDRGDC15:
                                   XDRGDC16,XDRGDC17,XDRGDC18,XDRGDC19,XDRGDC20:
                                   XDRGDC21,XDRGDC22,XDRGDC23,XDRGDC24,XDRGDC25:
                                   XDRGDC26,XDRGDC27,XDRGDC28,XDRGDC29,XDRGDC30:
                                   XDRGDC31,XDRGDC32,XDRGDC33,XDRGDC34,XDRGDC35:
                                   XDRGDC36,XDRGDC37,XDRGDC38,XDRGDC39,XDRGDC40:
                                   XDRGDC41,XDRGDC42,XDRGDC43,XDRGDC44,XDRGDC45:
                                   XDRGDC46,XDRGDC47,XDRGDC48,XDRGDC49,XDRGDC50:
                                   XDRGDC51,XDRGDC52,XDRGDC53,XDRGDC54,XDRGDC55:
                                   XDRGDC56,XDRGDC57,XDRGDC58,XDRGDC59,XDRGDC60:
                                   XDRGDC61,XDRGDC62,XDRGDC63,XDRGDC64,XDRGDC65:
                                   XDRGDC66,XDRGDC67,XDRGDC68,XDRGDC69,XDRGDC70:
                                   XDRGDC71,XDRGDC72,XDRGDC73,XDRGDC74,XDRGDC75:
                                   XDRGDC76,XDRGDC77,XDRGDC78,XDRGDC79,XDRGDC80:
                                   XDRGDC81,XDRGDC82,XDRGDC83,XDRGDC84,XDRGDC85:
                                   XDRGDC86,XDRGDC87,XDRGDC88,XDRGDC89,XDRGDC90:
                                   XDRGDC91,XDRGDC92,XDRGDC93,XDRGDC94,XDRGDC95:
                                   XDRGDC96,XDRGDC97,XDRGDC98,XDRGDC99,XDRDC100:
                                   XDRGDI02,XDRGDI03,XDRGDI04,XDRGDI05:
                                   XDRGDI06,XDRGDI07,XDRGDI08,XDRGDI09,XDRGDI10:
                                   XDRGDI11,XDRGDI12,XDRGDI13,XDRGDI14,XDRGDI15:
                                   XDRGDI16,XDRGDI17,XDRGDI18,XDRGDI19,XDRGDI20:
                                   XDRGDI21,XDRGDI22,XDRGDI23,XDRGDI24,XDRGDI25:
                                   XDRGDI26,XDRGDI27,XDRGDI28,XDRGDI29,XDRGDI30:
                                   XDRGDI31,XDRGDI32,XDRGDI33,XDRGDI34,XDRGDI35:
                                   XDRGDI36,XDRGDI37,XDRGDI38,XDRGDI39,XDRGDI40:
                                   XDRGDI41,XDRGDI42,XDRGDI43,XDRGDI44,XDRGDI45:
                                   XDRGDI46,XDRGDI47,XDRGDI48,XDRGDI49,XDRGDI50:
                                   XDRGDI51,XDRGDI52,XDRGDI53,XDRGDI54,XDRGDI55:
                                   XDRGDI56,XDRGDI57,XDRGDI58,XDRGDI59,XDRGDI60:
                                   XDRGDI61,XDRGDI62,XDRGDI63,XDRGDI64,XDRGDI65:
                                   XDRGDI66,XDRGDI67,XDRGDI68,XDRGDI69,XDRGDI70:
                                   XDRGDI71,XDRGDI72,XDRGDI73,XDRGDI74,XDRGDI75:
                                   XDRGDI76,XDRGDI77,XDRGDI78,XDRGDI79,XDRGDI80:
                                   XDRGDI81,XDRGDI82,XDRGDI83,XDRGDI84,XDRGDI85:
                                   XDRGDI86,XDRGDI87,XDRGDI88,XDRGDI89,XDRGDI90:
                                   XDRGDI91,XDRGDI92,XDRGDI93,XDRGDI94,XDRGDI95:
                                   XDRGDI96,XDRGDI97,XDRGDI98,XDRGDI99,XDRDI100:
                                   XDRGOP01,XDRGOP02,XDRGOP03,XDRGOP04,XDRGOP05:
                                   XDRGOP06,XDRGOP07,XDRGOP08,XDRGOP09,XDRGOP10:
                                   XDRGOP11,XDRGOP12,XDRGOP13,XDRGOP14,XDRGOP15:
                                   XDRGOP16,XDRGOP17,XDRGOP18,XDRGOP19,XDRGOP20:
                                   XDRGOP21,XDRGOP22,XDRGOP23,XDRGOP24,XDRGOP25:
                                   XDRGOP26,XDRGOP27,XDRGOP28,XDRGOP29,XDRGOP30:
                                   XDRGOP31,XDRGOP32,XDRGOP33,XDRGOP34,XDRGOP35:
                                   XDRGOP36,XDRGOP37,XDRGOP38,XDRGOP39,XDRGOP40:
                                   XDRGOP41,XDRGOP42,XDRGOP43,XDRGOP44,XDRGOP45:
                                   XDRGOP46,XDRGOP47,XDRGOP48,XDRGOP49,XDRGOP50:
                                   XDRGOP51,XDRGOP52,XDRGOP53,XDRGOP54,XDRGOP55:
                                   XDRGOP56,XDRGOP57,XDRGOP58,XDRGOP59,XDRGOP60:
                                   XDRGOP61,XDRGOP62,XDRGOP63,XDRGOP64,XDRGOP65:
                                   XDRGOP66,XDRGOP67,XDRGOP68,XDRGOP69,XDRGOP70:
                                   XDRGOP71,XDRGOP72,XDRGOP73,XDRGOP74,XDRGOP75:
                                   XDRGOP76,XDRGOP77,XDRGOP78,XDRGOP79,XDRGOP80:
                                   XDRGOP81,XDRGOP82,XDRGOP83,XDRGOP84,XDRGOP85:
                                   XDRGOP86,XDRGOP87,XDRGOP88,XDRGOP89,XDRGOP90:
                                   XDRGOP91,XDRGOP92,XDRGOP93,XDRGOP94,XDRGOP95:
                                   XDRGOP96,XDRGOP97,XDRGOP98,XDRGOP99,XDROP100:
                                   XDRGALS2,XDRGNLOS:
                                   XDRGTOTL,XDRGSDAY,XDRGMHLS:
                                   XDRGAMOD,XDRGCTYP,XDRGFNDS,XDRGICUH,XDRGATSI:
                                   XDRGPCOD,XDRGQDAY,XDRGPDAY,XDRGUROR,XDRGURGA
          ELSE
            WRITE     INPFIL41,SEQ;XDRGSTAT,XDRGHOSP,XDRGMEDN,XDRGHTYP,XDRGADAT:
                                   XDRGDDAT,XDRGSEP,XDRGBDAT,XDRGAWHT,XDRGAGEY:
                                   XDRGAGED,XDRGSEX,XDRGHMV:
                                   XDRGDS01,XDRGDI01:
                                   XDRGDS02,XDRGDS03,XDRGDS04,XDRGDS05:
                                   XDRGDS06,XDRGDS07,XDRGDS08,XDRGDS09,XDRGDS10:
                                   XDRGDS11,XDRGDS12,XDRGDS13,XDRGDS14,XDRGDS15:
                                   XDRGDS16,XDRGDS17,XDRGDS18,XDRGDS19,XDRGDS20:
                                   XDRGDS21,XDRGDS22,XDRGDS23,XDRGDS24,XDRGDS25:
                                   XDRGDS26,XDRGDS27,XDRGDS28,XDRGDS29,XDRGDS30:
                                   XDRGDS31,XDRGDS32,XDRGDS33,XDRGDS34,XDRGDS35:
                                   XDRGDS36,XDRGDS37,XDRGDS38,XDRGDS39,XDRGDS40:
                                   XDRGDS41,XDRGDS42,XDRGDS43,XDRGDS44,XDRGDS45:
                                   XDRGDS46,XDRGDS47,XDRGDS48,XDRGDS49,XDRGDS50:
                                   XDRGDS51,XDRGDS52,XDRGDS53,XDRGDS54,XDRGDS55:
                                   XDRGDS56,XDRGDS57,XDRGDS58,XDRGDS59,XDRGDS60:
                                   XDRGDS61,XDRGDS62,XDRGDS63,XDRGDS64,XDRGDS65:
                                   XDRGDS66,XDRGDS67,XDRGDS68,XDRGDS69,XDRGDS70:
                                   XDRGDS71,XDRGDS72,XDRGDS73,XDRGDS74,XDRGDS75:
                                   XDRGDS76,XDRGDS77,XDRGDS78,XDRGDS79,XDRGDS80:
                                   XDRGDS81,XDRGDS82,XDRGDS83,XDRGDS84,XDRGDS85:
                                   XDRGDS86,XDRGDS87,XDRGDS88,XDRGDS89,XDRGDS90:
                                   XDRGDS91,XDRGDS92,XDRGDS93,XDRGDS94,XDRGDS95:
                                   XDRGDS96,XDRGDS97,XDRGDS98,XDRGDS99,XDRDS100:
                                   XDRGDI02,XDRGDI03,XDRGDI04,XDRGDI05:
                                   XDRGDI06,XDRGDI07,XDRGDI08,XDRGDI09,XDRGDI10:
                                   XDRGDI11,XDRGDI12,XDRGDI13,XDRGDI14,XDRGDI15:
                                   XDRGDI16,XDRGDI17,XDRGDI18,XDRGDI19,XDRGDI20:
                                   XDRGDI21,XDRGDI22,XDRGDI23,XDRGDI24,XDRGDI25:
                                   XDRGDI26,XDRGDI27,XDRGDI28,XDRGDI29,XDRGDI30:
                                   XDRGDI31,XDRGDI32,XDRGDI33,XDRGDI34,XDRGDI35:
                                   XDRGDI36,XDRGDI37,XDRGDI38,XDRGDI39,XDRGDI40:
                                   XDRGDI41,XDRGDI42,XDRGDI43,XDRGDI44,XDRGDI45:
                                   XDRGDI46,XDRGDI47,XDRGDI48,XDRGDI49,XDRGDI50:
                                   XDRGDI51,XDRGDI52,XDRGDI53,XDRGDI54,XDRGDI55:
                                   XDRGDI56,XDRGDI57,XDRGDI58,XDRGDI59,XDRGDI60:
                                   XDRGDI61,XDRGDI62,XDRGDI63,XDRGDI64,XDRGDI65:
                                   XDRGDI66,XDRGDI67,XDRGDI68,XDRGDI69,XDRGDI70:
                                   XDRGDI71,XDRGDI72,XDRGDI73,XDRGDI74,XDRGDI75:
                                   XDRGDI76,XDRGDI77,XDRGDI78,XDRGDI79,XDRGDI80:
                                   XDRGDI81,XDRGDI82,XDRGDI83,XDRGDI84,XDRGDI85:
                                   XDRGDI86,XDRGDI87,XDRGDI88,XDRGDI89,XDRGDI90:
                                   XDRGDI91,XDRGDI92,XDRGDI93,XDRGDI94,XDRGDI95:
                                   XDRGDI96,XDRGDI97,XDRGDI98,XDRGDI99,XDRDI100:
                                   XDRGOP01,XDRGOP02,XDRGOP03,XDRGOP04,XDRGOP05:
                                   XDRGOP06,XDRGOP07,XDRGOP08,XDRGOP09,XDRGOP10:
                                   XDRGOP11,XDRGOP12,XDRGOP13,XDRGOP14,XDRGOP15:
                                   XDRGOP16,XDRGOP17,XDRGOP18,XDRGOP19,XDRGOP20:
                                   XDRGOP21,XDRGOP22,XDRGOP23,XDRGOP24,XDRGOP25:
                                   XDRGOP26,XDRGOP27,XDRGOP28,XDRGOP29,XDRGOP30:
                                   XDRGOP31,XDRGOP32,XDRGOP33,XDRGOP34,XDRGOP35:
                                   XDRGOP36,XDRGOP37,XDRGOP38,XDRGOP39,XDRGOP40:
                                   XDRGOP41,XDRGOP42,XDRGOP43,XDRGOP44,XDRGOP45:
                                   XDRGOP46,XDRGOP47,XDRGOP48,XDRGOP49,XDRGOP50:
                                   XDRGOP51,XDRGOP52,XDRGOP53,XDRGOP54,XDRGOP55:
                                   XDRGOP56,XDRGOP57,XDRGOP58,XDRGOP59,XDRGOP60:
                                   XDRGOP61,XDRGOP62,XDRGOP63,XDRGOP64,XDRGOP65:
                                   XDRGOP66,XDRGOP67,XDRGOP68,XDRGOP69,XDRGOP70:
                                   XDRGOP71,XDRGOP72,XDRGOP73,XDRGOP74,XDRGOP75:
                                   XDRGOP76,XDRGOP77,XDRGOP78,XDRGOP79,XDRGOP80:
                                   XDRGOP81,XDRGOP82,XDRGOP83,XDRGOP84,XDRGOP85:
                                   XDRGOP86,XDRGOP87,XDRGOP88,XDRGOP89,XDRGOP90:
                                   XDRGOP91,XDRGOP92,XDRGOP93,XDRGOP94,XDRGOP95:
                                   XDRGOP96,XDRGOP97,XDRGOP98,XDRGOP99,XDROP100:
                                   XDRGALS2,XDRGNLOS:
                                   XDRGTOTL,XDRGSDAY,XDRGMHLS
          ENDIF
.
          RETURN    
.******************************************************************************
.*                        I/O Routines For PC Grouper (CME) tempfile          *
.******************************************************************************
RDCME1    MOVE      ZERO,OVRCD
          READ      OUTFILE2,SEQ;XDRGADMN,XDRGDRG,XDRGDRGD,XDRGMDC,XDRGMDCD:
                                 XDRGCCL,XDRGGSC,XDRGNWT,XDRGNALS,XDRGSWT:
                                 XDRGSALS,XDRGLWT,XDRGLALS,XDRGCTRV,XDRGECRW
          GOTO      OVERCOND IF OVER
.
.                   * Check to see if we are using the old Grouper.
.                   * If we are then the DRG version would be in the
.                   * format VVV and
.                   * XDRGCTRV would then be VVVBB - B being blanks.
.                   * The New 3M CME comes in the format XXVVV
.                   * XX being country code of 04 - Australia.
.
          UNPACK    XDRGCTRV,PLACE3,XDRGGRP                            *C-50344
          SETLPTR   XDRGGRP
          RESET     XDRGGRP
          MATCH     SP3,XDRGGRP
          IF        @EQUAL
            MOVE     PLACE3,XDRGGRP          * old Grouper
          ELSE
            UNPACK   XDRGCTRV,PLACE2,XDRGGRP * New CME
          ENDIF
.
          RETURN
.
WRCME1    WRITE     INPFIL41,SEQ;XDRGADMN,XDRGADAT,XDRGATIM,XDRGDDAT,XDRGDTIM:
                                 XDRGBDAT,XDRGAGEY,XDRGAGED,XDRGSEX,XDRGSEP:
                                 XDRGAWHT,XDRGILOS,XDRGSDAY,XDRGMHLS,XDRGHMV:
                                 XDRGALOS,XDRGDS01,XDRGDS02,XDRGDS03,XDRGDS04:
                                 XDRGDS05,XDRGDS06,XDRGDS07,XDRGDS08,XDRGDS09:
                                 XDRGDS10,XDRGDS11,XDRGDS12,XDRGDS13,XDRGDS14:
                                 XDRGDS15,XDRGDS16,XDRGDS17,XDRGDS18,XDRGDS19:
                                 XDRGDS20,XDRGDS21,XDRGOP01,XDRGOP02,XDRGOP03:
                                 XDRGOP04,XDRGOP05,XDRGOP06,XDRGOP07,XDRGOP08:
                                 XDRGOP09,XDRGOP10,XDRGOP11,XDRGOP12,XDRGOP13:
                                 XDRGOP14,XDRGOP15,XDRGOP16,XDRGOP17,XDRGOP18:
                                 XDRGOP19,XDRGOP20,XDRGOP21
          MATCH     PTCNGDV2,GRPDTE
          RETURN    IF NOT LESS             * Grouper date >= ICD10v2 golive dte
.
          WRITE     INPFIL9,SEQ;XDRGADMN,XDRGADAT,XDRGATIM,XDRGDDAT,XDRGDTIM:
                                XDRGBDAT,XDRGAGEY,XDRGAGED,XDRGSEX,XDRGSEP:
                                XDRGAWHT,XDRGILOS,XDRGSDAY,XDRGMHLS,XDRGHMV:
                                XDRGALOS,XDRGD901,XDRGD902,XDRGD903,XDRGD904:
                                XDRGD905,XDRGD906,XDRGD907,XDRGD908,XDRGD909:
                                XDRGD910,XDRGD911,XDRGD912,XDRGD913,XDRGD914:
                                XDRGD915,XDRGD916,XDRGD917,XDRGD918,XDRGD919:
                                XDRGD920,XDRGD921,XDRGO901,XDRGO902,XDRGO903:
                                XDRGO904,XDRGO905,XDRGO906,XDRGO907,XDRGO908:
                                XDRGO909,XDRGO910,XDRGO911,XDRGO912,XDRGO913:
                                XDRGO914,XDRGO915,XDRGO916,XDRGO917,XDRGO918:
                                XDRGO919,XDRGO920,XDRGO921
          RETURN
+
.-----------------------------------------------------------------------------
.  ***************** Execute Unix Grouper Via Command Line ******************
.-----------------------------------------------------------------------------
.  The following will execute the Unix Grouper via the command line. 
.  Whereby passing in the input file and returning the output file.
.  The Comand line is set in following format: XX=port NN=grouper vesrion
.  "ardrg -i drginpXX.txt -itl -o drgoutXX.txt -g NN -cs i10v3 -fl >"
.  The command line can be found in the unix script /opt/iba/bin/mrtweb02.ed3
.  Alternatively /opt/iba/bin/mrtweb02.ed4 depending on the patients discharge
.  date.
.  Where mrtweb02.ed3 is set to ICD10-v3 and mrtweb02.ed4 is set to ICD10-v4 
.-----------------------------------------------------------------------------
EXECUT00  MOVE      ZERO,EXIT
.
.          MATCH     PTCNGDV4,DDATE           * Run ICD10 Ed. 3 or 4    *C-50344
.          IF        @LESS    
....         MOVE      "mrtweb02.us3 ",KEY13  * Disch date < ICD10v4 golive date
.            MOVE      "mrtweb02.ed3 ",KEY13  * Disch date < ICD10v4 golive date
.                                            * So use ICD10 Ed. 3
.          ELSE   
....         MOVE      "mrtweb02.us4 ",KEY13  * Disch date > ICD10v4 golive date
.            MOVE      "mrtweb02.ed4 ",KEY13  * Disch date > ICD10v4 golive date
.                                            * So use ICD10 Ed. 4
.          ENDIF
.
.         MATCH     " 41",XDRGGRP
.         IF        @EQUAL
.           MOVE      "mrtweb02.ed2 ",KEY13
.           GOTO      EXECUT20
.         ENDIF
.
.         MATCH     " 42",XDRGGRP
.         IF        @EQUAL
.           MOVE      "mrtweb02.ed3 ",KEY13
.           GOTO      EXECUT20
.         ENDIF
.
.         MATCH     " 50",XDRGGRP
.         IF        @EQUAL
.           MOVE      "mrtweb02.ed4 ",KEY13
.           GOTO      EXECUT20
.         ELSE
.           MOVE      "mrtweb02.ed8 ",KEY13      * as per PTCNGDV5 ?
.           GOTO      EXECUT20
.         ENDIF
.
.
.         Unix grouper export and import NWAU fields
.
          IF       UNIXNWAU=1        
            MOVE      "mrtweb02.nwau ",KEY14
          ELSE
            MOVE      "mrtweb02.ed8 ",KEY13
          ENDIF
.
EXECUT20  CLEAR     CMDLINE
.
          IF       UNIXNWAU=1
            APPEND    KEY14,CMDLINE
          ELSE
            APPEND    KEY13,CMDLINE
          ENDIF
.
          APPEND    FILENAM1,CMDLINE
          APPEND    SP1,CMDLINE
.         APPEND    FILENAM2,CMDLINE
.         APPEND    SP1,CMDLINE
.         APPEND    XDRGGRP,CMDLINE
          APPEND    "> /dev/null 2>&1 ",CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
EXECUT99  RETURN
+
.------------------------------------------------------------
. Load DRG UNIX Grouper Results
.------------------------------------------------------------
UNIXGP00  MOVE      ZERO,EXIT
          UNPACK    DRGVERS,KEY1,KEY2       * break up into "0" & "52"
          MATCH     "1",KEY1
          IF        @EQUAL
            UNPACK    DRGVERS,KEY2       * break up into "10" not "00"
            PACK      XDRGGRP,DRGVERS         * Set DRG Version as "100"
          ELSE
            PACK      XDRGGRP,SP1,KEY2,SP3    * Set DRG Version as " 52"
          ENDIF
.
          MOVE      "dout",KEY4             * setup file name
          PACK      FILENAM2,KEY4,KEY2,PORT,SP30
          REP       " 0",FILENAM2
          REP       " 0",XDRGGRP
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OUTFILE2,FILENAM2
          TRAPCLR   IO
          BRANCH    OVRCD,UNIXGP30
.
          CALL      RDUNIX1                 * Read UNIX Grouper output file
          BRANCH    OVRCD,UNIXGP40
.
          MOVE      XDRGMEDN,KEY8
          MATCH     AADMNO,KEY8
          GOTO      UNIXGP91 IF NOT EQUAL
.
          CALL      POSTC000                * Post DRG/MDC codes from UNIX Group
.
          CALL      DRGCCL00  * Update PATECDFD with DRG Drivers & CCL values  
          CALL      PRODRG00  * Update PATECOFD with DRG Drivers 
          CALL      DRGICU00  * Update PATICUFD with Charlson score
.
          GOTO      UNIXGP90
.
UNIXGP30  SCAN      "WEB",PRGID
          IF        @EQUAL
            CLEAR     WEBTITLE
            APPEND    "UNIX GROUPER ERROR: DRG ",WEBTITLE
            APPEND    XDRGGRP,WEBTITLE
            APPEND    " output file not found.",WEBTITLE
            CALL      WEBERR00
            MOVE      ONE,EXIT
          ELSE
            MATCH     "IBAMRT53",PRGID
            IF        @EQUAL
              PRINT     *23,"UNIX GROUPER ERROR: DRG ":
                             XDRGGRP," output file not found."
            ENDIF
          ENDIF
          RESET     PRGID 
          GOTO      UNIXGP99
.
UNIXGP40  SCAN      "WEB",PRGID
          IF        @EQUAL
            CLEAR     WEBTITLE
            APPEND    "UNIX GROUPER ERROR: DRG ",WEBTITLE
            APPEND    XDRGGRP,WEBTITLE
            APPEND    " output invalid.  ",WEBTITLE
            CALL      WEBERR00
            MOVE      ONE,EXIT
          ELSE
            MATCH     "IBAMRT53",PRGID
            IF        @EQUAL
              PRINT     *23,"UNIX GROUPER ERROR: DRG ":
                             XDRGGRP," output invalid."
            ENDIF
          ENDIF     
          RESET     PRGID 
          GOTO      UNIXGP99
.
UNIXGP90  CALL      DELGP000    * Delete grouper output files 
          SCAN      "WEB",PRGID
          IF        @EQUAL
            CLEAR     WEBTITLE
            MOVE      "DRG ",WEBTITLE
            ENDSET    WEBTITLE
            APPEND    XDRGGRP,WEBTITLE 
            ENDSET    WEBTITLE
            APPEND    " Grouping is now complete for this patient.",WEBTITLE
...          CALL      WEBERR00
            MOVE      ZERO,EXIT
          ELSE
            MATCH     "IBAMRT53",PRGID
            IF        @EQUAL
              MOVE      "DRG ",WEBTITLE
              ENDSET    WEBTITLE
              APPEND    XDRGGRP,WEBTITLE 
              ENDSET    WEBTITLE
              APPEND    " Grouping is now complete for this patient.",WEBTITLE
              PRINT     *23,WEBTITLE
            ENDIF
          ENDIF     
          RESET     PRGID
          GOTO      UNIXGP99
.
UNIXGP91  CALL      DELGP000    * Delete grouper output files 
          SCAN      "WEB",PRGID
          IF        @EQUAL
            MOVE      "UNIX GROUPER ERROR: Patient Admission Mismatch.",WEBTITLE
            CALL      WEBERR00
            MOVE      ONE,EXIT
          ELSE
            MATCH     "IBAMRT53",PRGID
            IF        @EQUAL
              PRINT     *23,"UNIX GROUPER ERROR: Patient Admission Mismatch."
            ENDIF
          ENDIF
          RESET     PRGID
          GOTO      UNIXGP99
.
UNIXGP99  RETURN
+
.******************************************************************************
.*                                  RSTRD000                                  *
.*      Restrict Diagnosis Codes sent to Grouper for all eligible patients    *
.******************************************************************************
RSTRD000  BRANCH    UNIXNWAU,RSTRD900       * Don't restrict codes if using NWAU
.
          MATCH     "1",MRCNRDSG
          GOTO      RSTRD500 IF EQUAL            * always restricting codes
.
          MATCH     "2",MRCNRDSG
          IF        @EQUAL
.0890603    Only Restrict if Cat CL indc1=P (public)
            PACK      KEY5,ANSC,ANSL,ACLAIM,SP70
            CALL      RDCODE1
            BRANCH    OVRCD,RSTRD900             * allow code to grouper
            MATCH     "P",TCINDC1
            GOTO      RSTRD900 IF NOT EQUAL      * not public, so allow codes
          ELSE
            GOTO      RSTRD900                   * not restricting codes
          ENDIF
.
RSTRD500  MATCH     "20170701",ICDRDDTE
          GOTO      RSTRD900 IF LESS             * 17/18 Fin year (for WIES 24)
.
          MOVE      ONE,WIS24RDC                 * don't allow code to grouper
          GOTO      RSTRD999
.
RSTRD900  MOVE      ZERO,WIS24RDC                * allow code to grouper
RSTRD999  RETURN
+
.******************************************************************************
.*                                  GTCOD000              Called by: SETGRP00 *
.*                              Get Grouper Codes                             *
.******************************************************************************
GTCOD000  CALL      RSTRD000                * check Restricting Diagnosis Codes
          MOVE      ZERO,COD9CNT
          MOVE      ZERO,COD1CNT
          PACK      KEY13,AADMNO,EPSCD001,SP20
          CALL      RSPTECD1                * Position on & read a patient
GTCOD100  CALL      RKPTECD1                  episode disease file record
          BRANCH    OVRCD,GTCOD400
.
          MATCH     AADMNO,PTEDADMN
          GOTO      GTCOD400 IF NOT EQUAL   * Different admin no
.
          COMPARE   EPSCD001,PTEDEPNO
          GOTO      GTCOD400 IF NOT EQUAL   * Different episode no
.
. ----- Get ICD10 disease codes -----
.
          MOVE      PTEDCODE,DPCODE
          PACK      KEY9,DPCODE
          CALL      RDPTICD1                * Read ICD disease file
          BRANCH    OVRCD,GTCOD100
.
          COMPARE   TEN,ICDRDVER
          GOTO      GTCOD150 IF LESS        * only restrict ICD10v10 and later
.
          MATCH     "1",WIS24RDC
          IF        @EQUAL
            IF        COD1CNT > ZERO
              PACK      KEY11,DPCODE,ICDRDVER,SP70
              CALL      RDPTRDC1
              COMPARE   ZERO,OVRCD
              GOTO      GTCOD100 IF EQUAL   * restricted code
            ENDIF
          ENDIF
.
GTCOD150  COMPARE   ONE,ICDRDVER            * ICD9?
          IF        @EQUAL
            MOVE      DICD10CD,DPCODE       * Mapped ICD10 disease code
            PACK      KEY9,DPCODE           
            CALL      RDPT10D1              * Read an ICD10 disease file record
            BRANCH    OVRCD,GTCOD100
          ENDIF
.
          MATCH     "4",PT0DACRQ
          GOTO      GTCOD100 IF EQUAL       * Ignore morphology codes
.
          MOVE      DPCODE,KEY9
          REP       ". / - ",KEY9
          SQUEEZE   KEY9
          PACK      KEY9,KEY9,SP10
          ADD       ONE,COD1CNT             * 100 codes
          STORE     KEY9,COD1CNT,XDRGDS01,XDRGDS02,XDRGDS03,XDRGDS04,XDRGDS05:
                                 XDRGDS06,XDRGDS07,XDRGDS08,XDRGDS09,XDRGDS10:
                                 XDRGDS11,XDRGDS12,XDRGDS13,XDRGDS14,XDRGDS15:
                                 XDRGDS16,XDRGDS17,XDRGDS18,XDRGDS19,XDRGDS20:
                                 XDRGDS21,XDRGDS22,XDRGDS23,XDRGDS24,XDRGDS25:
                                 XDRGDS26,XDRGDS27,XDRGDS28,XDRGDS29,XDRGDS30:
                                 XDRGDS31,XDRGDS32,XDRGDS33,XDRGDS34,XDRGDS35:
                                 XDRGDS36,XDRGDS37,XDRGDS38,XDRGDS39,XDRGDS40:
                                 XDRGDS41,XDRGDS42,XDRGDS43,XDRGDS44,XDRGDS45:
                                 XDRGDS46,XDRGDS47,XDRGDS48,XDRGDS49,XDRGDS50:
                                 XDRGDS51,XDRGDS52,XDRGDS53,XDRGDS54,XDRGDS55:
                                 XDRGDS56,XDRGDS57,XDRGDS58,XDRGDS59,XDRGDS60:
                                 XDRGDS61,XDRGDS62,XDRGDS63,XDRGDS64,XDRGDS65:
                                 XDRGDS66,XDRGDS67,XDRGDS68,XDRGDS69,XDRGDS70:
                                 XDRGDS71,XDRGDS72,XDRGDS73,XDRGDS74,XDRGDS75:
                                 XDRGDS76,XDRGDS77,XDRGDS78,XDRGDS79,XDRGDS80:
                                 XDRGDS81,XDRGDS82,XDRGDS83,XDRGDS84,XDRGDS85:
                                 XDRGDS86,XDRGDS87,XDRGDS88,XDRGDS89,XDRGDS90:
                                 XDRGDS91,XDRGDS92,XDRGDS93,XDRGDS94,XDRGDS95:
                                 XDRGDS96,XDRGDS97,XDRGDS98,XDRGDS99,XDRDS100
.
. 100 condition onset codes
.
.
          MATCH     "1",MRCNDCID
          IF        @EQUAL
            PACK      KEY2,PTEDOSET,SP70
            MATCH     SP70,KEY2             * Default to 8
            IF        @EQUAL
              PACK      KEY2,EIGHT,SP70
            ENDIF
            STORE     KEY2,COD1CNT,XDRGDC01,XDRGDC02,XDRGDC03,XDRGDC04,XDRGDC05:
                                   XDRGDC06,XDRGDC07,XDRGDC08,XDRGDC09,XDRGDC10:
                                   XDRGDC11,XDRGDC12,XDRGDC13,XDRGDC14,XDRGDC15:
                                   XDRGDC16,XDRGDC17,XDRGDC18,XDRGDC19,XDRGDC20:
                                   XDRGDC21,XDRGDC22,XDRGDC23,XDRGDC24,XDRGDC25:
                                   XDRGDC26,XDRGDC27,XDRGDC28,XDRGDC29,XDRGDC30:
                                   XDRGDC31,XDRGDC32,XDRGDC33,XDRGDC34,XDRGDC35:
                                   XDRGDC36,XDRGDC37,XDRGDC38,XDRGDC39,XDRGDC40:
                                   XDRGDC41,XDRGDC42,XDRGDC43,XDRGDC44,XDRGDC45:
                                   XDRGDC46,XDRGDC47,XDRGDC48,XDRGDC49,XDRGDC50:
                                   XDRGDC51,XDRGDC52,XDRGDC53,XDRGDC54,XDRGDC55:
                                   XDRGDC56,XDRGDC57,XDRGDC58,XDRGDC59,XDRGDC60:
                                   XDRGDC61,XDRGDC62,XDRGDC63,XDRGDC64,XDRGDC65:
                                   XDRGDC66,XDRGDC67,XDRGDC68,XDRGDC69,XDRGDC70:
                                   XDRGDC71,XDRGDC72,XDRGDC73,XDRGDC74,XDRGDC75:
                                   XDRGDC76,XDRGDC77,XDRGDC78,XDRGDC79,XDRGDC80:
                                   XDRGDC81,XDRGDC82,XDRGDC83,XDRGDC84,XDRGDC85:
                                   XDRGDC86,XDRGDC87,XDRGDC88,XDRGDC89,XDRGDC90:
                                   XDRGDC91,XDRGDC92,XDRGDC93,XDRGDC94,XDRGDC95:
                                   XDRGDC96,XDRGDC97,XDRGDC98,XDRGDC99,XDRDC100
          ENDIF
.
. 100 diagnosis cluster id values
.
          PACK      KEY2,PTEDDCID,SP70
          STORE     KEY2,COD1CNT,XDRGDI01,XDRGDI02,XDRGDI03,XDRGDI04,XDRGDI05:
                                 XDRGDI06,XDRGDI07,XDRGDI08,XDRGDI09,XDRGDI10:
                                 XDRGDI11,XDRGDI12,XDRGDI13,XDRGDI14,XDRGDI15:
                                 XDRGDI16,XDRGDI17,XDRGDI18,XDRGDI19,XDRGDI20:
                                 XDRGDI21,XDRGDI22,XDRGDI23,XDRGDI24,XDRGDI25:
                                 XDRGDI26,XDRGDI27,XDRGDI28,XDRGDI29,XDRGDI30:
                                 XDRGDI31,XDRGDI32,XDRGDI33,XDRGDI34,XDRGDI35:
                                 XDRGDI36,XDRGDI37,XDRGDI38,XDRGDI39,XDRGDI40:
                                 XDRGDI41,XDRGDI42,XDRGDI43,XDRGDI44,XDRGDI45:
                                 XDRGDI46,XDRGDI47,XDRGDI48,XDRGDI49,XDRGDI50:
                                 XDRGDI51,XDRGDI52,XDRGDI53,XDRGDI54,XDRGDI55:
                                 XDRGDI56,XDRGDI57,XDRGDI58,XDRGDI59,XDRGDI60:
                                 XDRGDI61,XDRGDI62,XDRGDI63,XDRGDI64,XDRGDI65:
                                 XDRGDI66,XDRGDI67,XDRGDI68,XDRGDI69,XDRGDI70:
                                 XDRGDI71,XDRGDI72,XDRGDI73,XDRGDI74,XDRGDI75:
                                 XDRGDI76,XDRGDI77,XDRGDI78,XDRGDI79,XDRGDI80:
                                 XDRGDI81,XDRGDI82,XDRGDI83,XDRGDI84,XDRGDI85:
                                 XDRGDI86,XDRGDI87,XDRGDI88,XDRGDI89,XDRGDI90:
                                 XDRGDI91,XDRGDI92,XDRGDI93,XDRGDI94,XDRGDI95:
                                 XDRGDI96,XDRGDI97,XDRGDI98,XDRGDI99,XDRDI100
.
          COMPARE   "101",COD1CNT                                       *C-50344
          GOTO      GTCOD400 IF NOT LESS    * ICD10 counter >= 101
.
          MATCH     PTCNGDV2,GRPDTE
          GOTO      GTCOD100 IF NOT LESS   * Grouper date >= ICD10v2 golive dte
.
          COMPARE   "21",COD9CNT
          GOTO      GTCOD100 IF NOT LESS    * ICD9 counter >= 21
.
. ----- Get ICD9 disease codes -----
.
          MOVE      ZERO,CMPCNT             * Complex map counter - no
          MOVE      PTEDCODE,DPCODE
          MATCH     PTCNI10D,DDATE
          IF        !@LESS
            MOVE      DPCODE,PTCPCOD
            CALL      PATM10T9              * Map ICD10 to ICD9 codes
            MOVE      PTCP1MCD,DPCODE
            MOVE      ONE,CMPCNT            * Complex map counter - yes
          ENDIF
.
GTCOD200  PACK      KEY9,DPCODE
          CALL      RD10T9D1                * Read an ICD9 disease file record
          BRANCH    OVRCD,GTCOD300
.
          MATCH     ANSM,DPCODE
          GOTO      GTCOD300 IF EQUAL       * Ignore morphology codes
.
          MOVE      DPCODE,KEY9             * ICD9 disease code
          REP       ". / - ",KEY9
          SQUEEZE   KEY9
          PACK      KEY9,KEY9,SP10
          ADD       ONE,COD9CNT
          STORE     KEY9,COD9CNT,XDRGD901,XDRGD902,XDRGD903,XDRGD904,XDRGD905:
                                 XDRGD906,XDRGD907,XDRGD908,XDRGD909,XDRGD910:
                                 XDRGD911,XDRGD912,XDRGD913,XDRGD914,XDRGD915:
                                 XDRGD916,XDRGD917,XDRGD918,XDRGD919,XDRGD920:
                                 XDRGD921
          COMPARE   "21",COD9CNT
          GOTO      GTCOD100 IF NOT LESS    * ICD9 counter >= 21
.
GTCOD300  COMPARE   ZERO,CMPCNT
          GOTO      GTCOD100 IF EQUAL       * Not using complex mapping
.
          ADD       ONE,CMPCNT
          COMPARE   FOUR,CMPCNT
          GOTO      GTCOD100 IF NOT LESS    * Complex map counter >=4
.
          MOVE      SP9,DPCODE
          LOAD      DPCODE,CMPCNT,PTCP1MCD,PTCP2MCD,PTCP3MCD
          MATCH     SP9,DPCODE
          GOTO      GTCOD100 IF EQUAL       * Blank code
          GOTO      GTCOD200
.
. ----- Get operation codes -----
.
GTCOD400  MOVE      ZERO,COD9CNT
          MOVE      ZERO,COD1CNT
          PACK      KEY13,AADMNO,EPSCD001,SP20
          CALL      RSPTECO1                * Position on & read a patient
GTCOD500  CALL      RKPTECO1                  episode operation file record
          BRANCH    OVRCD,GTCOD900
.
          MATCH     AADMNO,PTEOADMN
          GOTO      GTCOD900 IF NOT EQUAL   * Different admin no
.
          COMPARE   EPSCD001,PTEOEPNO
          GOTO      GTCOD900 IF NOT EQUAL   * Different episode no
.
          MATCH     "1",MRCNPIGP
          IF        @EQUAL
            MATCH     "I",PTEOTYPE
            GOTO      GTCOD550 IF EQUAL     * include prefixes of 'I'
          ENDIF
.
          MATCH     CMOPRT,PTEOTYPE
          GOTO      GTCOD500 IF NOT EQUAL   * Not an in hospital operation
.
GTCOD550  MATCH     PTCNEDRG,PTEOCODE
          GOTO      GTCOD500 IF EQUAL       * Exclude dummy code
.
. ----- Get ICD10 operation codes -----
.
          MOVE      PTEOCODE,OPCODE
          PACK      KEY9,OPCODE
          CALL      RDPTICO1                * Read ICD operation file
          BRANCH    OVRCD,GTCOD500
.
          COMPARE   ONE,ICDRDVER            * ICD9?
          IF        @EQUAL
            MOVE      OICD10CD,OPCODE       * Mapped ICD10 operation code
            PACK      KEY9,OPCODE
            CALL      RDPT10O1              * Read an ICD10 operation rec
            BRANCH    OVRCD,GTCOD500
          ENDIF
.
          MOVE      OPCODE,KEY9
          REP       ". / - ",KEY9
          SQUEEZE   KEY9
.
          MATCH     "9017902",KEY9          * is this 9017902 ?
          IF        @EQUAL
            MOVE      "9203500",KEY9        *  yes, map to 9203500
          ENDIF
.
          MATCH     "9017905",KEY9          *  or is this 9017905 ?
          IF        @EQUAL
            MOVE      "9203500",KEY9        *  yes, map to 9203500
          ENDIF 
.
          PACK      KEY9,KEY9,SP10
          ADD       ONE,COD1CNT             * 100 codes
          STORE     KEY9,COD1CNT,XDRGOP01,XDRGOP02,XDRGOP03,XDRGOP04,XDRGOP05:
                                 XDRGOP06,XDRGOP07,XDRGOP08,XDRGOP09,XDRGOP10:
                                 XDRGOP11,XDRGOP12,XDRGOP13,XDRGOP14,XDRGOP15:
                                 XDRGOP16,XDRGOP17,XDRGOP18,XDRGOP19,XDRGOP20:
                                 XDRGOP21,XDRGOP22,XDRGOP23,XDRGOP24,XDRGOP25:
                                 XDRGOP26,XDRGOP27,XDRGOP28,XDRGOP29,XDRGOP30:
                                 XDRGOP31,XDRGOP32,XDRGOP33,XDRGOP34,XDRGOP35:
                                 XDRGOP36,XDRGOP37,XDRGOP38,XDRGOP39,XDRGOP40:
                                 XDRGOP41,XDRGOP42,XDRGOP43,XDRGOP44,XDRGOP45:
                                 XDRGOP46,XDRGOP47,XDRGOP48,XDRGOP49,XDRGOP50:
                                 XDRGOP51,XDRGOP52,XDRGOP53,XDRGOP54,XDRGOP55:
                                 XDRGOP56,XDRGOP57,XDRGOP58,XDRGOP59,XDRGOP60:
                                 XDRGOP61,XDRGOP62,XDRGOP63,XDRGOP64,XDRGOP65:
                                 XDRGOP66,XDRGOP67,XDRGOP68,XDRGOP69,XDRGOP70:
                                 XDRGOP71,XDRGOP72,XDRGOP73,XDRGOP74,XDRGOP75:
                                 XDRGOP76,XDRGOP77,XDRGOP78,XDRGOP79,XDRGOP80:
                                 XDRGOP81,XDRGOP82,XDRGOP83,XDRGOP84,XDRGOP85:
                                 XDRGOP86,XDRGOP87,XDRGOP88,XDRGOP89,XDRGOP90:
                                 XDRGOP91,XDRGOP92,XDRGOP93,XDRGOP94,XDRGOP95:
                                 XDRGOP96,XDRGOP97,XDRGOP98,XDRGOP99,XDROP100
.
          COMPARE   "101",COD1CNT
          GOTO      GTCOD900 IF NOT LESS    * ICD10 counter >= 101
.
          MATCH     PTCNGDV2,GRPDTE
          GOTO      GTCOD500 IF NOT LESS   * Grouper date >= ICD10v2 golive dte
.
          COMPARE   "21",COD9CNT
          GOTO      GTCOD500 IF NOT LESS    * ICD9 counter >= 21
.
. ----- Get ICD9 operation codes -----
.
          MOVE      ZERO,CMPCNT             * Complex map counter - no
          MOVE      PTEOCODE,OPCODE
          MATCH     PTCNI10D,DDATE
          IF        !@LESS
            MOVE      OPCODE,PTCPCOD
            CALL      PATM10T9              * Map ICD10 to ICD9 codes
            MOVE      PTCP1MCD,OPCODE
            MOVE      ONE,CMPCNT            * Complex map counter - yes
          ENDIF
.
GTCOD600  PACK      KEY9,OPCODE
          CALL      RD10T9O1                * Read an ICD9 operation file record
          BRANCH    OVRCD,GTCOD700
.
          MOVE      OPCODE,KEY9             * ICD9 operation code
          REP       ". / - ",KEY9
          SQUEEZE   KEY9
          PACK      KEY9,KEY9,SP10
          ADD       ONE,COD9CNT
          STORE     KEY9,COD9CNT,XDRGO901,XDRGO902,XDRGO903,XDRGO904,XDRGO905:
                                 XDRGO906,XDRGO907,XDRGO908,XDRGO909,XDRGO910:
                                 XDRGO911,XDRGO912,XDRGO913,XDRGO914,XDRGO915:
                                 XDRGO916,XDRGO917,XDRGO918,XDRGO919,XDRGO920:
                                 XDRGO921
          COMPARE   "21",COD9CNT
          GOTO      GTCOD500 IF NOT LESS    * ICD9 counter >= 21
.
GTCOD700  COMPARE   ZERO,CMPCNT
          GOTO      GTCOD500 IF EQUAL       * Not using complex mapping
.
          ADD       ONE,CMPCNT
          COMPARE   FOUR,CMPCNT
          GOTO      GTCOD500 IF NOT LESS    * Complex map counter >=4
.
          MOVE      SP9,OPCODE
          LOAD      OPCODE,CMPCNT,PTCP1MCD,PTCP2MCD,PTCP3MCD
          MATCH     SP9,OPCODE
          GOTO      GTCOD500 IF EQUAL       * Blank code
          GOTO      GTCOD600
.
GTCOD900  MOVE      ZERO,EXIT
GTCOD999  RETURN
.------------------------------------------------------------------------------
.                                  POSTC000              Called by: SETGRP00 
.                        Post DRG & MDC Codes (to patpgraf)
.------------------------------------------------------------------------------
POSTC000  IF        MRCNEPSC <> 1 & ASTAT <> 3
            GOTO      POSTC900
          ENDIF
.
POSTC100  PACK      KEY13,AADMNO,EPSCD001,XDRGGRP,SP70
          CALL      RDPTPGR1                * Read  patient grouper file record
          IF        OVRCD <> 1
            CALL      STDRG000              * Setup Patient Grouper Variables
            CALL      UPPTPGR1              * Update a patient grouper file rec
            GOTO      POSTC200
          ENDIF
.
          MOVE      AADMNO,PTPGADMN         * Admission No
          MOVE      EPSCD001,PTPGEPNO       * Episode No 
          MOVE      XDRGGRP,PTPGGPVR        * Grouper Version
.
          PACK      KEY13,PTPGADMN,PTPGEPNO,PTPGGPVR,SP70
          CALL      RAPTPGR1                * Read patient grouper file record
          IF        OVRCD = 1
            CALL      STDRG000              * Setup Patient Grouper Variables
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            CALL      WRPTPGR1              * Write a patient grouper file rec
            TRAPCLR   IO
            BRANCH    OVRCD,POSTC999
          ENDIF
.
.
.davvy    COMPARE   ONE,DFLTVFLG            * is this the Default DRG ?
.davvy    GOTO      POSTC900 IF NOT EQUAL   * No - not writing this DRG version
.
POSTC200  PACK      KEY8,AADMNO,SP70
          CALL      RDDSCH1
          IF        OVRCD=0
            PACK      PTDSDMDC,XDRGMDC,SP4    * MDC code
            PACK      PTDSDDRG,XDRGDRG,SP4    * DRG code
            MOVE      XDRGCCL,PTDSSIDX        * DRG severity index
            MOVE      XDRGGRP,PTDSVOGU        * Version of the grouper used
.
            IF        ASTAT = 3
              CALL      UPDSCH1               * Update a discharge file record
            ENDIF
          ENDIF
.
          MATCH     "031",PTCNDGPV
          GOTO      POSTC900 IF NOT EQUAL   * Not writing the 3.1 DRG's
.
          COMPARE   ZERO,AINVPRT
          CALL      PATGNFEE IF EQUAL       * Update rates if no invoice printed
.
POSTC900  MOVE      ZERO,EXIT
POSTC999  RETURN
.
.------------------------------------------------------------------------------
.                                  POSTE000              Called by: UPDENC00
.                Post Codefinder DRG & MDC Codes (to patpgraf)
.------------------------------------------------------------------------------
POSTE000  IF        ASTAT<>3
            GOTO      POSTE900
          ENDIF
.
POSTE100  PACK      KEY13,AADMNO,EPSCD001,XDRGGRP,SP70
          CALL      RDPTPGR1                * Read patient grouper file record
          IF        OVRCD <> 1
            CALL      STEDG000              * Setup Codefinder Pat.Grouper Vars
            CALL      UPPTPGR1              * Update a patient grouper file rec
            GOTO      POSTE200
          ENDIF
.
          MOVE      AADMNO,PTPGADMN         * Admission No
          MOVE      EPSCD001,PTPGEPNO       * Episode No
          MOVE      XDRGGRP,PTPGGPVR        * Grouper Version
.
          PACK      KEY13,PTPGADMN,PTPGEPNO,PTPGGPVR,SP70
          CALL      RAPTPGR1                * Read a patient grouper file record
          IF        OVRCD = 1
            CALL      STEDG000              * Setup Codefinder Pat.Grouper Vars
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            CALL      WRPTPGR1              * Write a patient grouper file rec
            TRAPCLR   IO
            BRANCH    OVRCD,POSTE999
          ENDIF
.
.
.davvy    COMPARE   ONE,DFLTVFLG            * is this the Default DRG ?
.davvy    GOTO      POSTE900 IF NOT EQUAL   * No - not writing this DRG version
.
POSTE200  PACK      KEY8,AADMNO,SP70
          CALL      RDDSCH1
          IF        OVRCD=0
            PACK      PTDSDMDC,XDRGMDC,SP4    * MDC code
            PACK      PTDSDDRG,XDRGDRG,SP4    * DRG code
            MOVE      XDRGCCL,PTDSSIDX        * DRG severity index
            MOVE      XDRGGRP,PTDSVOGU        * Version of the grouper used
.
            CALL      UPDSCH1                 * Update a discharge file record
          ENDIF
.
          MATCH     "031",PTCNDGPV
          GOTO      POSTE900 IF NOT EQUAL   * Not writing the 3.1 DRG's
.
          COMPARE   ZERO,AINVPRT
          CALL      PATGNFEE IF EQUAL       * Update rates if no invoice printed
.
POSTE900  MOVE      ZERO,EXIT
POSTE999  RETURN
.
.------------------------------------------------------------
. Write Codefinder codes 
.------------------------------------------------------------
WRENC000  READ      CONTROLF,TEN;*106,PTCNC50C:
                                 *109,PTCNC42C,*112,PTCNC41C:
                                 *133,PTCNC60C:                       *C-197814
                                 *141,PTCNC51C,*145,PTCNC52C:         *C-137125
                                 *153,PTCNC62C:                       *I-267797
                                 *157,PTCNC70C                        *I-284669
          READ      CONTROLF,TWENTY1;*45,PTCNDRSM,*212,PTCNLTYP,*217,CMDISL
          READ      CONTROLF,EIGHTY8;*59,PTCNI10D,*224,PTCNEGLD,*232,PTCNDEBW
          READ      CONTROLF,NINTY7;*179,MRCNWIES                     *I-263691
          READ      CONTROLF,NINTY7;*181,MRCNCFST
          READ      CONTROLF,HUND20;*240,PTCNC80C
          READ      CONTROLF,HUND23;*240,PTCNC90C
          READ      CONTROLF,HUND24;*121,PTCNDGED,*232,PTCN100C
          READ      CONTROLF,HUND28;*247,PTCN110C
          READ      CONTROLF,HUND30;*102,PTCN120C
.
          WRITE     ENCFILEF,SEQ;"CMD:004"       * "CMD:"
.
          PACK      SYSTGVAL,ZERO,SP10
          IF        IBCNMHOS=1
            PACK      KEY3,PMVXMHOS,SP70
            CALL      RDPTHSP1
            IF        OVRCD=0
              MATCH     SP10,PTHSCFST
              IF        !@EQUAL
                MOVE      PTHSCFST,SYSTGVAL
              ENDIF
            ENDIF
          ELSE
            MATCH     SP10,MRCNCFST
            IF        !@EQUAL
              MOVE      MRCNCFST,SYSTGVAL
            ENDIF
          ENDIF
          WRITE     ENCFILEF,SEQ;"SYS:",SYSTGVAL
.
          MOVE      URNUMBER,DIM8 
          REP       " 0",DIM8     
          REP       " 0",XDRGADMN
          CALL      PATNAA00
.
          WRITE     ENCFILEF,SEQ;"AUTH:",AUTHCODE
.
.                                                * "PID:"
          WRITE     ENCFILEF,SEQ;"PID:U/R=",DIM8:
                                 "  Visit=",XDRGADMN,"  Name=",PATFNAME
.
          CALL      GETDSP00                     * "DSP:"
          MATCH     SP70,ENCDSP
          IF        !@EQUAL
            SQUEEZE   ENCDSP
            WRITE     ENCFILEF,SEQ;*+,"DSP:",ENCDSP
          ENDIF
.  
WRENC010  MOVE      SP3,KEY3                     * "PAY:"
          CALL      GETDRG             * Get DRG version from Health Fund/Claim
.
          MATCH     "1",PTCNDGED
          GOTO      WRENC012 IF EQUAL
.
          MOVE      KEY3,DIM3
.
          MOVE      PTCN120C,KEY3                * PAY code for DRG 12.0
          MATCH     DRG120,DIM3                  * DRG Ver 12.0?
          GOTO      WRENC020 IF EQUAL
.                                                                     *I-284669
          MOVE      PTCN110C,KEY3                * PAY code for DRG 11.0
          MATCH     DRG110,DIM3                  * DRG Ver 11.0?
          GOTO      WRENC020 IF EQUAL
.                                                                     *I-284669
          MOVE      PTCN100C,KEY3                * PAY code for DRG 10.0
          MATCH     DRG100,DIM3                  * DRG Ver 10.0?
          GOTO      WRENC020 IF EQUAL
.                                                                     *I-284669
          MOVE      PTCNC90C,KEY3                * PAY code for DRG 9.0
          MATCH     DRG090,DIM3                  * DRG Ver 9.0?
          GOTO      WRENC020 IF EQUAL
.                                                                     *I-284669
          MOVE      PTCNC80C,KEY3                * PAY code for DRG 8.0
          MATCH     DRG080,DIM3                  * DRG Ver 8.0?
          GOTO      WRENC020 IF EQUAL
. 
          MOVE      PTCNC70C,KEY3                * PAY code for DRG 7.0
          MATCH     DRG070,DIM3                  * DRG Ver 7.0?
          GOTO      WRENC020 IF EQUAL
.                                                                     *I-267797
          MOVE      PTCNC62C,KEY3                * PAY code for DRG 6.2
          MATCH     DRG062,DIM3                  * DRG Ver 6.2?
          GOTO      WRENC020 IF EQUAL
.                                                                     *I-197814
          MOVE      PTCNC60C,KEY3
          MATCH     DRG060,DIM3
          GOTO      WRENC020 IF EQUAL
.
          MOVE      PTCNC52C,KEY3
          MATCH     DRG052,DIM3
          GOTO      WRENC020 IF EQUAL
.
          MOVE      PTCNC51C,KEY3
          MATCH     DRG051,DIM3
          GOTO      WRENC020 IF EQUAL
.
          MOVE      PTCNC50C,KEY3
          MATCH     DRG050,DIM3
          GOTO      WRENC020 IF EQUAL
.
          MOVE      PTCNC42C,KEY3
          MATCH     DRG042,DIM3
          GOTO      WRENC020 IF EQUAL
.
          MOVE      PTCNC41C,KEY3
          MATCH     DRG041,DIM3
          GOTO      WRENC020 IF EQUAL
.
          MOVE      SP3,KEY3
          GOTO      WRENC020
.
WRENC012  MOVE      CFPAYCOD,KEY3   * Codefinder PAY Code from GETDRG (GTEDRG00)
          GOTO      WRENC020
.
WRENC020  WRITE     ENCFILEF,SEQ;"PAY:",KEY3
.
          WRITE     ENCFILEF,SEQ;"TXT:7"         * "TXT:"
          WRITE     ENCFILEF,SEQ;"TXI:7"         * "TXI:"
          WRITE     ENCFILEF,SEQ;"MRP:1"         * "MRP:"
          WRITE     ENCFILEF,SEQ;"DTX:1"         * "DTX:"
          WRITE     ENCFILEF,SEQ;"MDC:3"         * "MDC:"     use 3 characters
.
.                                                * "DDT:" & "ADT:"
          WRITE     ENCFILEF,SEQ;"DDT:",XDRGDDAT 
          WRITE     ENCFILEF,SEQ;"ADT:",XDRGADAT
.
          WRITE     ENCFILEF,SEQ;"AGE:",XDRGBDAT," ",XDRGADAT
.
.                                                * "URGADM:" - Send if not blank
          MATCH     SP70,XDRGURGA                
          IF        !@EQUAL
            WRITE     ENCFILEF,SEQ;"URGADM:",XDRGURGA
          ENDIF
.0937679 start
.                                                * "AGE:"
...       UNPACK    PBDATE,CDAY,CMON,CYEAR,CCENT
...       PACK      AGEDATE,ADATE                * Use Admission date
...       REP       " 0",AGEDATE
...       CALL      CALCAGE                      * Calculate patients age
...       IF        PSAGEYRS<1
...         MOVE      SP6,KEY6
...         MOVE      PSAGEDAY,KEY5
...         SQUEEZE   KEY5
...         MOVE      "d",KEY1
...         PACK      KEY6,KEY5,KEY1
...         WRITE     ENCFILEF,SEQ;"AGE:",KEY6
...       ELSE
...         MOVE      PSAGEYRS,KEY3
...         SQUEEZE   KEY3
...         WRITE     ENCFILEF,SEQ;"AGE:",KEY3
...       ENDIF
.
.0937679 end   
          WRITE     ENCFILEF,SEQ;"SEX:",XDRGSEX  * "SEX:"
          WRITE     ENCFILEF,SEQ;"INT:ON"        * "INT:"
.
....      SQUEEZE   XDRGHMV                      * "HMV:" Hours of Mech.Vent
....      WRITE     ENCFILEF,SEQ;"HMV:",XDRGHMV     (See "HMV" below)
.
          SQUEEZE   XDRGMHLS                     * "MLS:" M/H Legal status
          WRITE     ENCFILEF,SEQ;"MLS:",XDRGMHLS
.
          MATCH     "1",MRCNWIES        * NZ WIES data for CodeFinder *I-263691
          IF        @EQUAL
            PACK      CDYSFDTE,ADATE             * "LOS:" Length of Stay
            REP       " 0",CDYSFDTE
            PACK      CDYSTDTE,DDATE
            REP       " 0",CDYSTDTE
            CALL      CALCDAYS                   * Calculate no.of hospital days
            MOVE      CDYSDAYS,FORM4
            MOVE      FORM4,XDRGALOS             * Acute LOS 4 digits
          ENDIF

          SQUEEZE   XDRGALOS                     * "LOS:"
          WRITE     ENCFILEF,SEQ;"LOS:",XDRGALOS
.
          SQUEEZE   XDRGILOS                     * "LSD:" Intended LOS
          WRITE     ENCFILEF,SEQ;"LSD:",XDRGILOS
.
                                                 * "WGT:"
          IF        PTCNDEBW <> 1
.                                       * not "don't display C'finder Birth Wt"
            UNPACK    ABWGHT,DIM2,KEY4
            MOVE      ZERO,FORM4
            MOVE      KEY4,FORM4
            IF        FORM4<>0
              SQUEEZE   KEY4
              WRITE     ENCFILEF,SEQ;"WGT:",KEY4
            ENDIF
          ENDIF
.
. ************************************************ start              *D-190768
....      MOVE      ONE,PASSNUM                  * count Codes only
....      CALL      ENCDT000                     * read Codes on Encounter
....
....      MOVE      NOOFCODE,KEY2
....      SQUEEZE   KEY2                         * "COD:"
....      WRITE     ENCFILEF,SEQ;"COD:",KEY2
. ************************************************ end                *D-190768
.
          MOVE      TWO,PASSNUM                   * output the Codes
          CALL      ENCDT000
.
.
          MATCH     "1",MRCNWIES        * NZ WIES data for CodeFinder *I-263691
          IF        @EQUAL
            WRITE     ENCFILEF,SEQ;"RCS:1"       * is it "YES", "1" "ON" ???
          ENDIF
.
          MOVE      ZERO,FORM4                   * "LEV:" Total Leave Days
          MOVE      XDRGTOTL,FORM4
          IF        FORM4 <> 0
            SQUEEZE   XDRGTOTL
            WRITE     ENCFILEF,SEQ;"LEV:",XDRGTOTL
          ENDIF
.
          COMPARE   ZERO,MRCNSOMV                * "HMV:" Mech.Ventilation Hrs
          IF        @EQUAL
            SQUEEZE   XDRGHMV
            WRITE     ENCFILEF,SEQ;"HMV:",XDRGHMV
          ENDIF
.
          IF        PTCNHDPS = 1
            MOVE      ZERO,FORM5
            MOVE      PTICCPAP,KEY5
            MOVE      KEY5,FORM5
            IF        FORM5 <> 0
              SQUEEZE   KEY5
              WRITE     ENCFILEF,SEQ;"HNIV:",KEY5
            ENDIF
          ENDIF
.
          IF        PTCNHDPS = 1
            SQUEEZE   XDRGATYP
            WRITE     ENCFILEF,SEQ;"ADTTYP:",XDRGATYP
          ENDIF
.
. Care Type category CC HDP (populate for non-NWAU)       * TSK 0950787
.
WRENC050  MATCH     "1",MRCNSCTC
          GOTO      WRENC100 IF NOT EQUAL        * populate based on parameter
.
          MATCH     SP70,XDRGCCTY
          IF        !@EQUAL
            SQUEEZE   XDRGCCTY
            WRITE     ENCFILEF,SEQ;"CTYPE:",XDRGCCTY
          ENDIF
.
. Populate NWAU fields if required
.
WRENC100  MATCH     "1",MRCNUNWA       * Grouping Products to return NWAU
          IF        @EQUAL
            MATCH     MRCNENWA,DDATE   * Use NWAU for discharges after date
            GOTO      WRENC900 IF LESS
          ELSE
            GOTO      WRENC900
          ENDIF
.
. Admission source category S indicator 17
.
          MATCH     SP70,XDRGAMOD
          IF        !@EQUAL
            SQUEEZE   XDRGAMOD
            WRITE     ENCFILEF,SEQ;"ADMITMODE:",XDRGAMOD
          ENDIF
.
. Aboriginal Torres Straight Islander Cat VA Ind 3
.
          MATCH     SP70,XDRGATSI
          IF        !@EQUAL
            SQUEEZE   XDRGATSI
            WRITE     ENCFILEF,SEQ;"ATSI:",XDRGATSI
          ENDIF
.
. Care Type category CC HDP (populate for NWAU)
.
          MATCH     "1",MRCNSCTC
          GOTO      WRENC200 IF EQUAL            * already populated
.
          MATCH     SP70,XDRGCCTY
          IF        !@EQUAL
            SQUEEZE   XDRGCCTY
            WRITE     ENCFILEF,SEQ;"CTYPE:",XDRGCCTY
          ENDIF
.
. Funding Source category CL user defined field 4
.
WRENC200  MATCH     SP70,XDRGFNDS
          IF        !@EQUAL
            SQUEEZE   XDRGFNDS
            WRITE     ENCFILEF,SEQ;"FUNDSRC:",XDRGFNDS
          ENDIF
.
. NICU + ICU Hours PTICUINT PTICHNCU
.
          MATCH     SP70,XDRGICUH
          IF        !@EQUAL
            SQUEEZE   XDRGICUH
            WRITE     ENCFILEF,SEQ;"ICUHRS:",XDRGICUH
          ENDIF
.
. PC Days
.
          MATCH     SP70,XDRGPCDY
          IF        !@EQUAL
            SQUEEZE   XDRGPCDY
            WRITE     ENCFILEF,SEQ;"PCDAYS:",XDRGPCDY
          ENDIF
.
. Post Code
.
          MATCH     SP70,XDRGPCOD
          IF        !@EQUAL
            SQUEEZE   XDRGPCOD
            WRITE     ENCFILEF,SEQ;"POSTCOD:",XDRGPCOD
          ENDIF
.
. Unplanned return to theatre
.
          MATCH     SP70,XDRGUROR
          IF        !@EQUAL
            SQUEEZE   XDRGUROR
            WRITE     ENCFILEF,SEQ;"UROR:",XDRGUROR
          ENDIF
.
WRENC900  WRITE     ENCFILEF,SEQ;"VSN:1"         * "VSN:" (Grouper version used)
          WRITE     ENCFILEF,SEQ;"EOR:"          * "EOR:"
.
WRENC999  RETURN
.----------------------------------------------------------------------------
.  Set Output filenames 
.----------------------------------------------------------------------------
SETPTH00  MOVE      "drgout",KEY6
          MOVE      ".txt",KEY4
          PACK      DRGOUTFN,KEY6,PORT,KEY4,SP70
          REP       " 0",DRGOUTFN 
.
.                                      * file names for multiple Grouper calls
          MOVE      "drg41o",KEY6
          MOVE      ".txt",KEY4
          PACK      DRGO41FN,KEY6,PORT,KEY4,SP70
          REP       " 0",DRGO41FN
          MOVE      "drg42o",KEY6
          MOVE      ".txt",KEY4
          PACK      DRGO42FN,KEY6,PORT,KEY4,SP70
          REP       " 0",DRGO42FN
          MOVE      "drg50o",KEY6
          MOVE      ".txt",KEY4
          PACK      DRGO50FN,KEY6,PORT,KEY4,SP70
          REP       " 0",DRGO50FN
          MOVE      "drg51o",KEY6
          MOVE      ".txt",KEY4
          PACK      DRGO51FN,KEY6,PORT,KEY4,SP70
          REP       " 0",DRGO51FN
          MOVE      "drg52o",KEY6                                     *I-137125
          MOVE      ".txt",KEY4                                       *I-137125
          PACK      DRGO52FN,KEY6,PORT,KEY4,SP70                      *I-137125
          REP       " 0",DRGO52FN                                     *I-137125
.                                      * DRG 6.0                      *I-197814
          MOVE      "drg60o",KEY6
          MOVE      ".txt",KEY4
          PACK      DRGO60FN,KEY6,PORT,KEY4,SP70
          REP       " 0",DRGO60FN
.                                      * DRG 6.2                      *I-267797
          MOVE      "drg62o",KEY6
          MOVE      ".txt",KEY4
          PACK      DRGO62FN,KEY6,PORT,KEY4,SP70
          REP       " 0",DRGO62FN
.                                      * DRG 7.0                      *I-284669
          MOVE      "drg70o",KEY6
          MOVE      ".txt",KEY4
          PACK      DRGO70FN,KEY6,PORT,KEY4,SP70
          REP       " 0",DRGO70FN
.
.                                      * CodeFinder return file name
          MOVE      "encout",KEY6
          MOVE      ".txt",KEY4
          IF        PTCNOENC = 2
            PACK      WCFOUTFN,KEY6,URNUMBER,ADMISSNO,KEY4,SP70
            REP       " 0",WCFOUTFN
          ELSE
            PACK      ENCOUTFN,KEY6,PORT,KEY4,SP70
            REP       " 0",ENCOUTFN
          ENDIF
.
SETPTH99  RETURN
.----------------------------------------------------------------------------
.  Delete old grouper output files  
.----------------------------------------------------------------------------
DELFL000  COMPARE   ZERO,PTCNDGET           *  Delete Grouper files 1=Yes 0=No 
          GOTO      DELFL999 IF EQUAL
.
          MOVE      ZERO,OVRCD              * Delete file drgout"PORT".txt
          TRAP      OVERCOND IF IO
          OPEN      OUTFILE2,DRGOUTFN                   
          TRAPCLR   IO
          BRANCH    OVRCD,DELFL100
          CLOSE     OUTFILE2,DELETE
.
DELFL100  MOVE      ZERO,OVRCD              * Delete file encout"PORT".txt
          TRAP      OVERCOND IF IO
          OPEN      ENCOUTAF,ENCOUTFN                   
          TRAPCLR   IO
          BRANCH    OVRCD,DELFL999
...ML..   CLOSE     ENCOUTAF,DELETE
.
DELFL999  RETURN
.----------------------------------------------------------------------------
.  Delete grouper input and output files  
.----------------------------------------------------------------------------
DELGP000  COMPARE   ZERO,PTCNDGET           * Delete Grouper files 1=Yes 0=No 
          GOTO      DELGP999 IF EQUAL
.
          MOVE      ZERO,OVRCD              * Delete file drginp"PORT".txt
          TRAP      OVERCOND IF IO
          OPEN      INPFIL41,FILENAM1                   
          TRAPCLR   IO
          BRANCH    OVRCD,DELGP100
          CLOSE     INPFIL41,DELETE
.
DELGP100  MOVE      ZERO,OVRCD              * Delete file drgout"PORT".txt
          TRAP      OVERCOND IF IO
          OPEN      OUTFILE2,FILENAM2                   
          TRAPCLR   IO
          BRANCH    OVRCD,DELGP999
          CLOSE     OUTFILE2,DELETE
.
DELGP999  RETURN
.-------------------------------------------------------------------------
.   Update Episode Disease Codes with DRG Drivers & CCL values returned 
.   from the Unix Grouper.            
.   Note this Routine excludes Morphology Codes as they are not written 
.   to the grouper in routine GTCOD000
.-------------------------------------------------------------------------
DRGCCL00  MOVE      ONE,LASTDIAG            * Initialise to 1
.
          PACK      KEY13,ADMISSNO,EPSCD001,SP70
          CALL      RSPTECD1                * Position on & read a patient
DRGCCL10  CALL      RKPTECD1                * episode disease file record
          BRANCH    OVRCD,DRGCCL99
.
          MATCH     ADMISSNO,DPTEDADM
          GOTO      DRGCCL99 IF NOT EQUAL   * Different admin no
.
          COMPARE   EPSCD001,PTEDEPNO
          GOTO      DRGCCL99 IF NOT EQUAL   * Different admin no
.
          IF        LASTDIAG > 100
            GOTO      DRGCCL99              * 100 Codes sent to the Grouper
          ENDIF            
.
. ----- Check to see if we have a Morphology code! if so exclude.
.
          MOVE      PTEDCODE,DPCODE
          PACK      KEY9,DPCODE
          CALL      RDPTICD1                * Read ICD disease file
          BRANCH    OVRCD,DRGCCL10
.
          COMPARE   ONE,ICDRDVER            * ICD9?
          IF        @EQUAL
            MOVE      DICD10CD,DPCODE       * Mapped ICD10 disease code
            PACK      KEY9,DPCODE
            CALL      RDPT10D1              * Read an ICD10 disease file rec
            BRANCH    OVRCD,DRGCCL10
          ENDIF
.
          MATCH     "4",PT0DACRQ
          GOTO      DRGCCL10 IF EQUAL       * Ignore morphology codes
.
          MOVE      DPCODE,KEY9
          REP       ". / ",KEY9             * Get Rid of decimal point
          SQUEEZE   KEY9
          UNPACK    KEY9,DISECODE 
.
          MOVE      LASTDIAG,COUNTER
DRGCCL20  IF        COUNTER > 100
            GOTO      DRGCCL10
          ENDIF 
.
.                          * Check to see if we are working with the same code?
.          
          LOAD      KEY5,COUNTER,XDRGDS01,XDRGDS02,XDRGDS03,XDRGDS04,XDRGDS05:
                                 XDRGDS06,XDRGDS07,XDRGDS08,XDRGDS09,XDRGDS10:
                                 XDRGDS11,XDRGDS12,XDRGDS13,XDRGDS14,XDRGDS15:
                                 XDRGDS16,XDRGDS17,XDRGDS18,XDRGDS19,XDRGDS20:
                                 XDRGDS21,XDRGDS22,XDRGDS23,XDRGDS24,XDRGDS25:
                                 XDRGDS26,XDRGDS27,XDRGDS28,XDRGDS29,XDRGDS30:
                                 XDRGDS31,XDRGDS32,XDRGDS33,XDRGDS34,XDRGDS35:
                                 XDRGDS36,XDRGDS37,XDRGDS38,XDRGDS39,XDRGDS40:
                                 XDRGDS41,XDRGDS42,XDRGDS43,XDRGDS44,XDRGDS45:
                                 XDRGDS46,XDRGDS47,XDRGDS48,XDRGDS49,XDRGDS50:
                                 XDRGDS51,XDRGDS52,XDRGDS53,XDRGDS54,XDRGDS55:
                                 XDRGDS56,XDRGDS57,XDRGDS58,XDRGDS59,XDRGDS60:
                                 XDRGDS61,XDRGDS62,XDRGDS63,XDRGDS64,XDRGDS65:
                                 XDRGDS66,XDRGDS67,XDRGDS68,XDRGDS69,XDRGDS70:
                                 XDRGDS71,XDRGDS72,XDRGDS73,XDRGDS74,XDRGDS75:
                                 XDRGDS76,XDRGDS77,XDRGDS78,XDRGDS79,XDRGDS80:
                                 XDRGDS81,XDRGDS82,XDRGDS83,XDRGDS84,XDRGDS85:
                                 XDRGDS86,XDRGDS87,XDRGDS88,XDRGDS89,XDRGDS90:
                                 XDRGDS91,XDRGDS92,XDRGDS93,XDRGDS94,XDRGDS95:
                                 XDRGDS96,XDRGDS97,XDRGDS98,XDRGDS99,XDRDS100
.
          MATCH     KEY5,DISECODE
          IF        !@EQUAL
            ADD       ONE,COUNTER
            GOTO      DRGCCL20
          ENDIF
.
DRGCCL30  MOVE      XDRGGRP,F3
          IF        F3 > 100
.                          * Get the CCL value for each code if grouper >= v11
            LOAD      D1,COUNTER,XDRGCF01,XDRGCF02,XDRGCF03,XDRGCF04,XDRGCF05:
                                   XDRGCF06,XDRGCF07,XDRGCF08,XDRGCF09,XDRGCF10:
                                   XDRGCF11,XDRGCF12,XDRGCF13,XDRGCF14,XDRGCF15:
                                   XDRGCF16,XDRGCF17,XDRGCF18,XDRGCF19,XDRGCF20:
                                   XDRGCF21,XDRGCF22,XDRGCF23,XDRGCF24,XDRGCF25:
                                   XDRGCF26,XDRGCF27,XDRGCF28,XDRGCF29,XDRGCF30:
                                   XDRGCF31,XDRGCF32,XDRGCF33,XDRGCF34,XDRGCF35:
                                   XDRGCF36,XDRGCF37,XDRGCF38,XDRGCF39,XDRGCF40:
                                   XDRGCF41,XDRGCF42,XDRGCF43,XDRGCF44,XDRGCF45:
                                   XDRGCF46,XDRGCF47,XDRGCF48,XDRGCF49,XDRGCF50:
                                   XDRGCF51,XDRGCF52,XDRGCF53,XDRGCF54,XDRGCF55:
                                   XDRGCF56,XDRGCF57,XDRGCF58,XDRGCF59,XDRGCF60:
                                   XDRGCF61,XDRGCF62,XDRGCF63,XDRGCF64,XDRGCF65:
                                   XDRGCF66,XDRGCF67,XDRGCF68,XDRGCF69,XDRGCF70:
                                   XDRGCF71,XDRGCF72,XDRGCF73,XDRGCF74,XDRGCF75:
                                   XDRGCF76,XDRGCF77,XDRGCF78,XDRGCF79,XDRGCF80:
                                   XDRGCF81,XDRGCF82,XDRGCF83,XDRGCF84,XDRGCF85:
                                   XDRGCF86,XDRGCF87,XDRGCF88,XDRGCF89,XDRGCF90:
                                   XDRGCF91,XDRGCF92,XDRGCF93,XDRGCF94,XDRGCF95:
                                   XDRGCF96,XDRGCF97,XDRGCF98,XDRGCF99,XDRGC100
            MOVE      D1,PTEDCCCL
          ELSE
.                          * Now get the DRG Driver and CCL value for each code
            LOAD      KEY3,COUNTER,XDRGDX01,XDRGDX02,XDRGDX03,XDRGDX04,XDRGDX05:
                                   XDRGDX06,XDRGDX07,XDRGDX08,XDRGDX09,XDRGDX10:
                                   XDRGDX11,XDRGDX12,XDRGDX13,XDRGDX14,XDRGDX15:
                                   XDRGDX16,XDRGDX17,XDRGDX18,XDRGDX19,XDRGDX20:
                                   XDRGDX21,XDRGDX22,XDRGDX23,XDRGDX24,XDRGDX25:
                                   XDRGDX26,XDRGDX27,XDRGDX28,XDRGDX29,XDRGDX30:
                                   XDRGDX31,XDRGDX32,XDRGDX33,XDRGDX34,XDRGDX35:
                                   XDRGDX36,XDRGDX37,XDRGDX38,XDRGDX39,XDRGDX40:
                                   XDRGDX41,XDRGDX42,XDRGDX43,XDRGDX44,XDRGDX05:
                                   XDRGDX46,XDRGDX47,XDRGDX48,XDRGDX49,XDRGDX50:
                                   XDRGDX51,XDRGDX52,XDRGDX53,XDRGDX54,XDRGDX55:
                                   XDRGDX56,XDRGDX57,XDRGDX58,XDRGDX59,XDRGDX60:
                                   XDRGDX61,XDRGDX62,XDRGDX63,XDRGDX64,XDRGDX65:
                                   XDRGDX66,XDRGDX67,XDRGDX68,XDRGDX69,XDRGDX70:
                                   XDRGDX71,XDRGDX72,XDRGDX73,XDRGDX74,XDRGDX75:
                                   XDRGDX76,XDRGDX77,XDRGDX78,XDRGDX79,XDRGDX80:
                                   XDRGDX81,XDRGDX82,XDRGDX83,XDRGDX84,XDRGDX85:
                                   XDRGDX86,XDRGDX87,XDRGDX88,XDRGDX89,XDRGDX90:
                                   XDRGDX91,XDRGDX92,XDRGDX93,XDRGDX94,XDRGDX95:
                                   XDRGDX96,XDRGDX97,XDRGDX98,XDRGDX99,XDRDX100
.
            UNPACK    KEY3,PTEDDRGD,KEY1,PTEDCCCL
          ENDIF
.
          CALL      UPPTECD1                * Update Record 
.
          ADD       ONE,COUNTER
          MOVE      COUNTER,LASTDIAG * Locator so as to not check already used
.                                    * codes. Just in case there's a duplicate
.
          GOTO      DRGCCL10                * Read Next 
.
DRGCCL99  RETURN
.-------------------------------------------------------------------------
.   Update Episode Procedure Codes with DRG Drivers from the Unix Grouper.      
.   Note this Routine excludes Codes as that are not written 
.   to the grouper in routine GTCOD000
.-------------------------------------------------------------------------
PRODRG00  MOVE      ONE,LASTPROC            * Initialise to 1
.
          PACK      KEY13,ADMISSNO,EPSCD001,SP70
          CALL      RSPTECO1                * Position on & read a patient
PRODRG10  CALL      RKPTECO1                * episode disease file record
          BRANCH    OVRCD,PRODRG99
.
          MATCH     ADMISSNO,DPTEOADM
          GOTO      PRODRG99 IF NOT EQUAL   * Different admin no
.
          COMPARE   EPSCD001,PTEOEPNO
          GOTO      PRODRG99 IF NOT EQUAL   * Different admin no
.
          IF        LASTPROC > 100
            GOTO      PRODRG99              * 100 Codes sent to GRPR
          ENDIF            
.
          MATCH     "1",MRCNPIGP
          IF        @EQUAL
            MATCH     "I",PTEOTYPE
            GOTO      PRODRG15 IF EQUAL     * include prefixes of 'I'
          ENDIF
.
          MATCH     CMOPRT,PTEOTYPE
          GOTO      PRODRG10 IF NOT EQUAL   * Not an in hospital operation
.
PRODRG15  MATCH     PTCNEDRG,PTEOCODE
          GOTO      PRODRG10 IF EQUAL       * Exclude dummy code
.
. ----- Read ICD10 operation codes -----
.
          MOVE      PTEOCODE,OPCODE
          PACK      KEY9,OPCODE
          CALL      RDPTICO1                * Read ICD operation file
          BRANCH    OVRCD,PRODRG10
.
          COMPARE   ONE,ICDRDVER            * ICD9?
          IF        @EQUAL
            MOVE      OICD10CD,OPCODE       * Mapped ICD10 operation code
            PACK      KEY9,OPCODE
            CALL      RDPT10O1              * Read an ICD10 operation rec
            BRANCH    OVRCD,PRODRG10
          ENDIF
.
          MOVE      OPCODE,KEY9
          REP       ". / - ",KEY9
          SQUEEZE   KEY9
.
          MATCH     "9017902",KEY9          * is this 9017902 ?        *I-46856
          IF        @EQUAL
            MOVE      "9203500",KEY9        *  yes, map to 9203500     *I-46856
          ENDIF                                                        *I-46856
.                                                                      *I-46856
          MATCH     "9017905",KEY9          * or is this 9017905 ?     *I-46856
          IF        @EQUAL
            MOVE      "9203500",KEY9        *  yes, map to 9203500     *I-46856
          ENDIF                                                        *I-46856
.
          UNPACK    KEY9,PROCCODE 
.
          MOVE      LASTPROC,COUNTER
PRODRG20  IF        COUNTER > 100
            GOTO      PRODRG10    
          ENDIF 
.
. Check to see if we are working with the same code?                   *C-50344
.          
          LOAD      KEY7,COUNTER,XDRGOP01,XDRGOP02,XDRGOP03,XDRGOP04,XDRGOP05:
                                 XDRGOP06,XDRGOP07,XDRGOP08,XDRGOP09,XDRGOP10:
                                 XDRGOP11,XDRGOP12,XDRGOP13,XDRGOP14,XDRGOP15:
                                 XDRGOP16,XDRGOP17,XDRGOP18,XDRGOP19,XDRGOP20:
                                 XDRGOP21,XDRGOP22,XDRGOP23,XDRGOP24,XDRGOP25:
                                 XDRGOP26,XDRGOP27,XDRGOP28,XDRGOP29,XDRGOP30:
                                 XDRGOP31,XDRGOP32,XDRGOP33,XDRGOP34,XDRGOP35:
                                 XDRGOP36,XDRGOP37,XDRGOP38,XDRGOP39,XDRGOP40:
                                 XDRGOP41,XDRGOP42,XDRGOP43,XDRGOP44,XDRGOP45:
                                 XDRGOP46,XDRGOP47,XDRGOP48,XDRGOP49,XDRGOP50:
                                 XDRGOP51,XDRGOP52,XDRGOP53,XDRGOP54,XDRGOP55:
                                 XDRGOP56,XDRGOP57,XDRGOP58,XDRGOP59,XDRGOP60:
                                 XDRGOP61,XDRGOP62,XDRGOP63,XDRGOP64,XDRGOP65:
                                 XDRGOP66,XDRGOP67,XDRGOP68,XDRGOP69,XDRGOP70:
                                 XDRGOP71,XDRGOP72,XDRGOP73,XDRGOP74,XDRGOP75:
                                 XDRGOP76,XDRGOP77,XDRGOP78,XDRGOP79,XDRGOP80:
                                 XDRGOP81,XDRGOP82,XDRGOP83,XDRGOP84,XDRGOP85:
                                 XDRGOP86,XDRGOP87,XDRGOP88,XDRGOP89,XDRGOP90:
                                 XDRGOP91,XDRGOP92,XDRGOP93,XDRGOP94,XDRGOP95:
                                 XDRGOP96,XDRGOP97,XDRGOP98,XDRGOP99,XDROP100
.
          MATCH     KEY7,PROCCODE
          IF        !@EQUAL
            ADD       ONE,COUNTER
            GOTO      PRODRG20
          ENDIF
.
. Now get the DRG Driver                                               *C-50344
.
          LOAD      KEY3,COUNTER,XDRGSR01,XDRGSR02,XDRGSR03,XDRGSR04,XDRGSR05:
                                 XDRGSR06,XDRGSR07,XDRGSR08,XDRGSR09,XDRGSR10:
                                 XDRGSR11,XDRGSR12,XDRGSR13,XDRGSR14,XDRGSR15:
                                 XDRGSR16,XDRGSR17,XDRGSR18,XDRGSR19,XDRGSR20:
                                 XDRGSR21,XDRGSR22,XDRGSR23,XDRGSR24,XDRGSR25:
                                 XDRGSR26,XDRGSR27,XDRGSR28,XDRGSR29,XDRGSR30:
                                 XDRGSR31,XDRGSR32,XDRGSR33,XDRGSR34,XDRGSR35:
                                 XDRGSR36,XDRGSR37,XDRGSR38,XDRGSR39,XDRGSR40:
                                 XDRGSR41,XDRGSR42,XDRGSR43,XDRGSR44,XDRGSR45:
                                 XDRGSR46,XDRGSR47,XDRGSR48,XDRGSR49,XDRGSR50:
                                 XDRGSR51,XDRGSR52,XDRGSR53,XDRGSR54,XDRGSR55:
                                 XDRGSR56,XDRGSR57,XDRGSR58,XDRGSR59,XDRGSR60:
                                 XDRGSR61,XDRGSR62,XDRGSR63,XDRGSR64,XDRGSR65:
                                 XDRGSR66,XDRGSR67,XDRGSR68,XDRGSR69,XDRGSR70:
                                 XDRGSR71,XDRGSR72,XDRGSR73,XDRGSR74,XDRGSR75:
                                 XDRGSR76,XDRGSR77,XDRGSR78,XDRGSR79,XDRGSR80:
                                 XDRGSR81,XDRGSR82,XDRGSR83,XDRGSR84,XDRGSR85:
                                 XDRGSR86,XDRGSR87,XDRGSR88,XDRGSR89,XDRGSR90:
                                 XDRGSR91,XDRGSR92,XDRGSR93,XDRGSR94,XDRGSR95:
                                 XDRGSR96,XDRGSR97,XDRGSR98,XDRGSR99,XDRGS100
.
          UNPACK    KEY3,PTEODRGD,KEY2
          CALL      UPPTECO1                * Update Record 
.
          ADD       ONE,COUNTER
          MOVE      COUNTER,LASTPROC * Locator so as to not check already used
.                                    * codes. Just in case theres a duplicate
.
          GOTO      PRODRG10                * Read Next 
.
PRODRG99  RETURN
.-------------------------------------------------------------------------
. Update PATICUFD with the Charlson score received from the unix grouper   
.-------------------------------------------------------------------------
DRGICU00  PACK      XDRGCHSC,XDRGCHSC,SP70
          MATCH     SP70,XDRGCHSC           * Exit if Charlson score is blank
          GOTO      DRGICU99 IF EQUAL
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDPTICU1                * Read paticuaf
          BRANCH    OVRCD,DRGICU50,DRGICU99
.
          PACK      PTICCHSC,XDRGCHSC,SP70  *  Charlson score
          CALL      UPPTICU1
.
          GOTO      DRGICU99
.
DRGICU50  CALL      CLPATICU                * Clear paticuaf fields
          MOVE      ADMISSNO,PTICUADM
.
          PACK      PTICCHSC,XDRGCHSC,SP70  *  Charlson score
.
          PACK      KEY8,PTICUADM,SP70
          CALL      RAPTICU1
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            CALL      WRPTICU1              * Write Record
            TRAPCLR   IO
            BRANCH    OVRCD,DRGICU99
          ENDIF
.
DRGICU99  RETURN
.
.------------------------------------------------------------
.                          Load PC DRG Grouper Results
.------------------------------------------------------------
LODGRP00
.         --------------------------------- * removed -        start  *D-227522
....      MOVE      "1",DFLTVFLG
....      MOVE      DRGOUTFN,DRGFLNAM       * Set Default Version (in PTCNDGPV)
....      CALL      LODGXX00                * read Grouper file
.
          MATCH     PTCNED41,ENCENDAT       * disc.date > DRG 4.1 effect.date?
          IF        !@LESS
            MOVE      DRGO41FN,DRGFLNAM     * Grouper version - 4.1
            CALL      LODGXX00              * read Grouper file
          ENDIF
.
          MATCH     PTCNED42,ENCENDAT       * disc.date > DRG 4.2 effect.date?
          IF        !@LESS
            MOVE      DRGO42FN,DRGFLNAM     * Grouper version - 4.2
            CALL      LODGXX00              * read Grouper file
          ENDIF
.
          MATCH     PTCNED50,ENCENDAT       * disc.date > DRG 5.0 effect.date?
          IF        !@LESS
            MOVE      DRGO50FN,DRGFLNAM     * Grouper version - 5.0
            CALL      LODGXX00              * read Grouper file
          ENDIF
.
          MATCH     PTCNED51,ENCENDAT       * disc.date > DRG 5.1 effect.date?
          IF        !@LESS
            MOVE      DRGO51FN,DRGFLNAM     * Grouper version - 5.1
            CALL      LODGXX00              * read Grouper file
          ENDIF
.
          MATCH     PTCNED52,ENCENDAT       * disc.date > DRG 5.2 effect.date?
          IF        !@LESS
            MOVE      DRGO52FN,DRGFLNAM     * Grouper version - 5.2
            CALL      LODGXX00              * read Grouper file
          ENDIF
.
          MATCH     PTCNED60,ENCENDAT       * disc.date > DRG 6.0 effect.date?
          IF        !@LESS
            MOVE      DRGO60FN,DRGFLNAM     * Grouper version - 6.0   *I-197814
            CALL      LODGXX00              * read Grouper file
          ENDIF
.
          MATCH     PTCNED62,ENCENDAT       * disc.date > DRG 6.2 effect.date?
          IF        !@LESS
            MOVE      DRGO62FN,DRGFLNAM     * Grouper version - 6.2   *I-267797
            CALL      LODGXX00              * read Grouper file
          ENDIF
.
          MATCH     PTCNED70,ENCENDAT       * disc.date > DRG 7.0 effect.date?
          IF        !@LESS
            MOVE      DRGO70FN,DRGFLNAM     * Grouper version - 7.0   *I-284669
            CALL      LODGXX00              * read Grouper file
          ENDIF
.
          MATCH     PTCNED80,ENCENDAT       * disc.date > DRG 8.0 effect.date?
          IF        !@LESS
            MOVE      DRGO80FN,DRGFLNAM     * Grouper version - 8.0
            CALL      LODGXX00              * read Grouper file
          ENDIF
.
          MATCH     PTCNED90,ENCENDAT       * disc.date > DRG 9.0 effect.date?
          IF        !@LESS
            MOVE      DRGO90FN,DRGFLNAM     * Grouper version - 9.0
            CALL      LODGXX00              * read Grouper file
          ENDIF
.
          MATCH     PTCNE100,ENCENDAT       * disc.date > DRG 10.0 effect.date?
          IF        !@LESS
            MOVE      DRG100FN,DRGFLNAM     * Grouper version - 10.0
            CALL      LODGXX00              * read Grouper file
          ENDIF
.
          MATCH     PTCNE110,ENCENDAT       * disc.date > DRG 11.0 effect.date?
          IF        !@LESS
            MOVE      DRG110FN,DRGFLNAM     * Grouper version - 11.0
            CALL      LODGXX00              * read Grouper file
          ENDIF
.
          MATCH     PTCNE120,ENCENDAT       * disc.date > DRG 12.0 effect.date?
          IF        !@LESS
            MOVE      DRG120FN,DRGFLNAM     * Grouper version - 12.0
            CALL      LODGXX00              * read Grouper file
          ENDIF
.
          SCAN      "WEB",PRGID
          IF        @EQUAL
...         MOVE      "Grouping is now complete for this patient.",WEBTITLE
...         CALL      WEBERR00
            MOVE      ZERO,EXIT
          ELSE
            MATCH     "IBAMRT53",PRGID
            IF        @EQUAL
              PRINT     *23,"Grouping is now complete for this patient."
            ENDIF
          ENDIF
          RESET     PRGID
.
.         Trigger a visit update message after getting the last transfer record
.
          PACK      KEY30,AADMNO,ZED30
          CALL      RDSTRAN2                * position on admission number
          CALL      RDPTRAN2                * read previous transfer record
          BRANCH    OVRCD,LODGRP99          * eof - shouldn't happen
.
          MATCH     AADMNO,TADMN            * same admission still ?
          GOTO      LODGRP99 IF NOT EQUAL   * no - should happen
.
          CALL      PMIGTNID                * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI 
          MOVE      THREE,HL7TRGID   
          MOVE      "WEBGROUP",HL7INCLD
          PROC      DGCLICAC                * trigger I/P visit update message
.
LODGRP99  RETURN
.
.------------------------------------------------------------
.*                                    LODGXX00
.*                            standard code for LODGRP00
.------------------------------------------------------------
LODGXX00  MOVE      ZERO,OVRCD
.
          UNPACK    DRGFLNAM,KEY3,KEY2      * check for Default DRG
          PACK      KEY3,SP1,KEY2,SP3
          REP       " 0",KEY3
          MATCH     KEY3,PTCNDGPV
          IF        @EQUAL
            MOVE      "1",DFLTVFLG          * found Default DRG - set flag
          ENDIF                                               * end   *I-227522
.
          TRAP      OVERCOND IF IO
          OPEN      OUTFILE2,DRGFLNAM
          TRAPCLR   IO
          BRANCH    OVRCD,LODGXX90
.
          CALL      RDCME1                  * Read grouper output file
          BRANCH    OVRCD,LODGXX91
.
          MATCH     AADMNO,XDRGADMN
          GOTO      LODGXX92 IF NOT EQUAL
.
          CALL      POSTC000                * Post DRG/MDC codes from PC Grouper
          CLOSE     OUTFILE2
          MOVE      "0",DFLTVFLG
          GOTO      LODGXX99
.
.                                           * **** Errors
LODGXX90  SCAN      "WEB",PRGID
          IF        @EQUAL
            CLEAR     WEBTITLE
            APPEND    "PC GROUPER ERROR: DRG output file not found. ",WEBTITLE
            APPEND    DRGFLNAM,WEBTITLE
            CALL      WEBERR00
            MOVE      ONE,EXIT
          ELSE
            MATCH     "IBAMRT53",PRGID
            IF        @EQUAL
              PRINT     *23,"PC GROUPER ERROR: DRG output file not found."
            ENDIF
          ENDIF
          RESET     PRGID
          GOTO      LODGXX99
.
LODGXX91  SCAN      "WEB",PRGID
          IF        @EQUAL
            CLEAR     WEBTITLE
            APPEND    "PC GROUPER ERROR: DRG output invalid.  ",WEBTITLE
            CALL      WEBERR00
            MOVE      ONE,EXIT
          ELSE
            MATCH     "IBAMRT53",PRGID
            IF        @EQUAL
              PRINT     *23,"PC GROUPER ERROR: DRG output invalid."
            ENDIF
          ENDIF
          RESET     PRGID
          GOTO      LODGXX99
.
LODGXX92  CALL      DELFL000                * Delete grouper output files
          SCAN      "WEB",PRGID
          IF        @EQUAL
            MOVE      "PC GROUPER ERROR: Patient Admission Mismatch.",WEBTITLE
            CALL      WEBERR00
            MOVE      ONE,EXIT
          ELSE
            MATCH     "IBAMRT53",PRGID
            IF        @EQUAL
              PRINT     *23,"PC GROUPER ERROR: Patient Admission Mismatch."
            ENDIF
          ENDIF
          RESET     PRGID
          GOTO      LODGXX99
.
LODGXX99  RETURN
.
.------------------------------------------------------------
. Load Results Codefinder codes
.------------------------------------------------------------
LODENC00  MOVE      ZERO,DISCOUNT           * Intialise Disease Code Counter
          MOVE      ZERO,CODECNT            * reset Code count
          MOVE      ZERO,LOADCNT            * returned Disease & Oper codes
.
          CALL      CLRENC00                * clear CodeFinder output fields
.
          MOVE      "1",DFLTVFLG            * set Default Grouper version flag
.
          IF        PTCNOENC = 2
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      ENCOUTAF,WCFOUTFN     * open the Web Codefinder file
            TRAPCLR   IO
            BRANCH    OVRCD,LODENC91
          ELSE
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      ENCOUTAF,ENCOUTFN     * open the CodeFinder file
            TRAPCLR   IO
            BRANCH    OVRCD,LODENC91
          ENDIF
.                                           * create tempfile for Disease &
.                                           * Oper codes from Codefinder
          MOVE      "LODFIL",KEY6           * create temp "lodfilxx"
          PACK      LOADNAME,KEY6,PORT
          REP       " 0",LOADNAME
          PREP      LOADFILE,LOADNAME       * open the temp file
.
.
          MOVE      ZERO,BYPASSRD           * force first read
.
LODENC10  BRANCH    BYPASSRD,LODENC20
          READ      ENCOUTAF,SEQ;CODELINE   * Read a record from Codefinder
          GOTO      LODENC50 IF OVER
.
LODENC20  MOVE      ZERO,BYPASSRD           * now find the 3M Tags
          MATCH     "EOR:",CODELINE         * "EOR:"   - End of record
          GOTO      LODENC50 IF EQUAL
.
          MATCH     "COD:",CODELINE         * "COD:"   - Codes
          GOTO      LODECOD IF EQUAL
.
          MATCH     "ERR:",CODELINE         * "ERR:"   - No. of Errors
          GOTO      LODEERR IF EQUAL
.
          MATCH     "ETX:",CODELINE         * "ETX:"   - Error Text
          GOTO      LODENC10 IF EQUAL       * not in use
.
          MATCH     "PID:",CODELINE         * "PID:"   - Patient Id.
          GOTO      LODEPID IF EQUAL
.
          MATCH     "PAY:",CODELINE         * "PAY:"   - 3M Payor Codes
          GOTO      LODEPAY IF EQUAL
.
.          MATCH     "HMV:",CODELINE         * "HMV:"   - Hrs.of Mech.Ventilat'n
.          GOTO      LODEHMV IF EQUAL        * Added for 0881409 - see below
.
          MATCH     "LOS:",CODELINE         * "LOS:"   - Length of Stay
          GOTO      LODENC10 IF EQUAL       * not in use
.
          MATCH     "DWGT:",CODELINE        * "DWGT:" - Weight
          GOTO      LODEDWGT IF EQUAL
.
          MATCH     "ALOS:",CODELINE        * "ALOS:" - Acute Length of Stay
          GOTO      LODEALOS IF EQUAL
.
          MATCH     "AUTH:",CODELINE        * "AUTH:" - Authorization code   
          GOTO      LODEAUTH IF EQUAL
.          
          MATCH     "TNWAU:",CODELINE       * "TNWAU:" - Total NWAU 
          GOTO      LODTNWAU IF EQUAL
.          
.
.                   ----------------------- * NZ WIES tags (start)    *I-263691
          MATCH     "RCS:",CODELINE         * Reimbursement Flag for NZ Wies
          IF        @EQUAL
            MATCH     "1",MRCNWIES          * Using NZ WIES from CodeFinder
            GOTO      LODENC10 IF NOT EQUAL
            MOVE      ONE,USENZWIS          * read all NZ WIES tags
            GOTO      LODENC10
          ENDIF
.                                           .............................
.                                           * NZ WIES tags from CodeFinder
          IF        USENZWIS = 1
            MATCH     "NZDRG:",CODELINE     * "NZDRG:" - NZ DRG eg "F19Z"
            IF        @EQUAL
              UNPACK    CODELINE,KEY6,KEY4
              PACK      XDRGDRG,KEY4,SP4
              GOTO      LODENC10
            ENDIF
.
            MATCH     "STN:",CODELINE       * "STN:"   - NZ LOS Status
.                                           * 1=Inlier, 2=High-Outl 3=Low-Outl
            GOTO      LODENC10 IF EQUAL     * not in use
.
            MATCH     "STX:",CODELINE       * "STX:"   - NZ Desc of LOS Status
            GOTO      LODENC10 IF EQUAL     * not in use
.
            MATCH     "DRGWT:",CODELINE     * "DRGWT:" - NZ DRG Cost weight
            GOTO      LODENC10 IF EQUAL     * not in use
.
            MATCH     "TOTWT:",CODELINE     * "TOTWT:" - NZ Total Weight
            IF        @EQUAL
              MOVE      ZERO,FORM64
              UNPACK    CODELINE,KEY6,KEY10
              SQUEEZE   KEY10
              MOVE      KEY10,FORM64        * Total WIES (inc co-payments)
              ADD       FORM64,TOTWISCF
              GOTO      LODENC10
            ENDIF
.
            MATCH     "BWIES:",CODELINE     * "BWIES:" - NZ Base WIES (ex co-p
            IF        @EQUAL
.0852820      MOVE      ZERO,FORM64
.0852820      UNPACK    CODELINE,KEY6,KEY10 *
.0852820      SQUEEZE   KEY10
.0852820      MOVE      KEY10,FORM64        * Base WIES (excluding co-payments
.0852820      ADD       FORM64,TOTWISCF
              GOTO      LODENC10
            ENDIF
.
            MATCH     "MVCP:",CODELINE      * "MVCP:"  - NZ Mech Vent co-paymnt
            IF        @EQUAL
.0852820      MOVE      ZERO,FORM64
.0852820      UNPACK    CODELINE,KEY5,KEY10
.0852820      SQUEEZE   KEY10
.0852820      MOVE      KEY10,FORM64        * NZ Mech Vent co-payment
.0852820      ADD       FORM64,TOTWISCF
              GOTO      LODENC10
            ENDIF
.
            MATCH     "AAACP:",CODELINE     * "AAACP:" - NZ AAA Co-payment
            IF        @EQUAL
.0852820      MOVE      ZERO,FORM64
.0852820      UNPACK    CODELINE,KEY6,KEY10
.0852820      SQUEEZE   KEY10
.0852820      MOVE      KEY10,FORM64
.0852820      ADD       FORM64,TOTWISCF
              GOTO      LODENC10
            ENDIF
.
            MATCH     "ASDCP:",CODELINE     * "ASDCP:" - NZ ASD Co-payment
            IF        @EQUAL
.0852820      MOVE      ZERO,FORM64
.0852820      UNPACK    CODELINE,KEY6,KEY10
.0852820      SQUEEZE   KEY10
.0852820      MOVE      KEY10,FORM64
.0852820      ADD       FORM64,TOTWISCF
              GOTO      LODENC10
            ENDIF
.
            MATCH     "SCOLCP:",CODELINE    * "SCOLCP:" - NZ SCOL Co-payment
            IF        @EQUAL
.0852820      MOVE      ZERO,FORM64
.0852820      UNPACK    CODELINE,KEY7,KEY10
.0852820      SQUEEZE   KEY10
.0852820      MOVE      KEY10,FORM64
.0852820      ADD       FORM64,TOTWISCF
              GOTO      LODENC10
            ENDIF
.
            MATCH     "LOSCAT:",CODELINE    * "LOSCAT:" - NZ LOS Category
            GOTO      LODENC10 IF EQUAL     * not in use
.
          ENDIF       *-------------------- *              ( end NZ ) *I-263691
.
          
          IF        PTCNHDPS = 1
            MATCH     "HNIV:",CODELINE
            IF        @EQUAL
              UNPACK    CODELINE,DIM5,KEY5
              MATCH     SP5,KEY5
              IF        !@EQUAL
                MOVE      ZERO,FORM5
                SQUEEZE   KEY5
                MOVE      KEY5,FORM5
                COMPARE   FORM5,PTICCPAP
                IF        !@EQUAL
                  PACK      KEY8,AADMNO
                  CALL      RDPTICU1
                  IF        OVRCD=0
                    COMPARE   FORM5,PTICCPAP
                    IF        !@EQUAL
                      MOVE      FORM5,PTICCPAP
                      CALL      UPPTICU1
                    ENDIF
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
            MATCH     "HMV:",CODELINE
            IF        @EQUAL
              UNPACK    CODELINE,DIM4,KEY10
              MATCH     KEY10,SP70
              IF        !@EQUAL
                MOVE      ZERO,FORM4
                SQUEEZE   KEY10
                MOVE      KEY10,FORM4
                PACK      KEY8,AADMNO
                CALL      RDPTICU1                * Read the patient ICU file
                IF        OVRCD=0
                  COMPARE   FORM4,PTICUMEC
                  IF        !@EQUAL
                    MOVE      FORM4,PTICUMEC      * Hours on mechanical ventilation
                    CALL      UPPTICU1
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     "CHARLSON:",CODELINE         * Charlson Score
          IF        @EQUAL
            UNPACK    CODELINE,KEY9,KEY2
          ENDIF
.
          MATCH     "CHARLSON:",CODELINE         * Charlson Score
          IF        @EQUAL
            UNPACK    CODELINE,KEY9,KEY2
            PACK      KEY2,KEY2,SP70
            MATCH     SP70,KEY2                  * Blank Charlson score
            IF        !@EQUAL
              PACK      KEY8,AADMNO,SP70
              CALL      RDPTICU1                 * Read the patient ICU file
              IF        OVRCD=0
                PACK      PTICCHSC,KEY2,SP70      
                CALL      UPPTICU1
              ELSE
                CALL      CLPATICU                * Clear paticuaf fields
                MOVE      AADMNO,PTICUADM
                PACK      PTICCHSC,KEY2,SP70      
                MOVE      ZERO,OVRCD
                TRAP      OVERCOND IF IO
                PACK      KEY8,PTICUADM,SP70
                CALL      WRPTICU1              * Write Record
                TRAPCLR   IO
                BRANCH    OVRCD,LODENC10
              ENDIF
            ENDIF
          ENDIF
.
          GOTO      LODENC10                * no more Tags to test
.
.
. -------------------------------------------------------------------------
...                                    * the following 6 Tags will usually be
...                                    * processed within the "COD:" process -
...                                    * if they get to here they are not
...                                    * needed.  *** see CDISS000 & COPRS000
...
...       MATCH     "MOD:",CODELINE         * "MOD:"   - Modifier
...       MATCH     "TEXT:",CODELINE        * "TEXT:"  - Code Text
...       MATCH     "DATE:",CODELINE        * "DATE:"  - Code, Procedure Date
...       MATCH     "PHYS:",CODELINE        * "PHYS:"  - Code, Proced. Physician
...
. -------------------------------------------------------------------------
.
LODEERR   MOVE      ZERO,F2                 * ERR:
          UNPACK    CODELINE,KEY4,KEY2,DATA150B
          MOVE      KEY2,F2
          COMPARE   ZERO,F2
          GOTO      LODENC92 IF NOT EQUAL
          GOTO      LODENC10
.
LODEPID   UNPACK    CODELINE,KEY4,KEY20,KEY8     * PID:
.
          TYPE      KEY8
          IF        @EQUAL
            MOVE      ZERO,FORM8              * Admis.No in pos.21
            MOVE      KEY8,FORM8              * remove leading zero
            MOVE      FORM8,KEY8
          ENDIF
.
          MATCH     AADMNO,KEY8
          GOTO      LODENC93 IF NOT EQUAL
          GOTO      LODENC10
.
LODEPAY   UNPACK    SP9,DRGCODE,MDCCODE     * PAY:
          UNPACK    CODELINE,KEY4,KEY3      * ?where's it go? (was 6.16 DRGVER)
          GOTO      LODENC10
.
LODECOD   ADD       ONE,CODECNT             * COD:
          CALL      ENCLIN00                * process the returned "COD:"
          GOTO      LODENC10
.
LODEALOS  MOVE      "0.00",ENCRNLOS         * ALOS: - Acute LOS
          UNPACK    CODELINE,KEY5,KEY4
          SQUEEZE   KEY4
          MOVE      KEY4,FORM42
          MOVE      FORM42,XDRGNALS         * DRG National Average LOS
          GOTO      LODENC10
.
LODEDWGT  MOVE      "0.0000",ENCRNWGT       * DWGT: - Encoder weight
          UNPACK    CODELINE,KEY5,KEY8
          SQUEEZE   KEY8
          MOVE      KEY8,FORM64
          MOVE      FORM42,XDRGNWT          * DRG National Weight
          GOTO      LODENC10
.
LODEAUTH  SCAN      CODELINE,AUTHCODE
.          IF        !@EQUAL
.            Changes for 2014
.          ENDIF
.
          GOTO      LODENC10
.
LODTNWAU  MOVE      "0.0000",XDRGTOTN       * Encoder Total NWAU
          UNPACK    CODELINE,KEY6,KEY17
          SQUEEZE   KEY17
          MOVE      KEY17,FORM124
          MOVE      FORM124,XDRGTOTN        * Total NWAU 
          GOTO      LODENC10
.
. --------------------------------------------------------------
.
LODENC50  CALL      GNHOP000                * Get non hospital operations
          IF        PTCNOENC = 2
            CLOSE     ENCOUTAF,DELETE       * delete if using Web Codefinder
          ELSE
            CLOSE     ENCOUTAF
          ENDIF
.
          COMPARE   ZERO,LOADCNT
          GOTO      LODENC94 IF EQUAL
.
          CALL      UPDENC00                * Update Details to Tables
.
          MOVE      ZERO,SETCLACC
          MATCH     "1",MRCNRCDT            * is "Reset Coding Date" set ?
          IF        @EQUAL
            MOVE      ONE,SETCLACC          * set indicator to call CLRACC00
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      LODENC99
.
. -------------------------------------------------------------------------
.
LODENC91  MOVE      "Error: Output from Codefinder does not exist.",WEBTITLE
          CALL      WINRLD00
          MOVE      ONE,EXIT
          GOTO      LODENC99
.
LODENC92  CALL      GETERR00
          CALL      WINRLD00
          MOVE      ONE,EXIT
          GOTO      LODENC99
.
LODENC93  MOVE      "Error: Patient returned from C'finder different.",WEBTITLE
          CALL      WINRLD00
          MOVE      ONE,EXIT
          GOTO      LODENC99
.
LODENC94  MOVE      "Error: No Coding returned from Codefinder.",WEBTITLE
          CALL      WINRLD00
          MOVE      ONE,EXIT
          GOTO      LODENC99
.
.
LODENC99  CLOSE     LOADFILE,DELETE         * delete temp file
          RETURN
+
.------------------------------------------------------------
. Clear Codefinder output fields
.------------------------------------------------------------
CLRENC00  MOVE      SP20,XDRGGRP            * Grouper version used
          MOVE      SP20,XDRGDRG            * Diagnostic Related Group (DRG)
          MOVE      SP20,XDRGDRGD           * DRG Description
          MOVE      SP20,XDRGMDC            * Major Diagnostic Category (MDC)
          MOVE      SP20,XDRGMDCD           * MDC Description
          MOVE      SP20,XDRGCCL            * CC Class Level
          MOVE      SP20,XDRGGSC            * Grouper status code
          MOVE      SP20,XDRGNWT            * DRG National Weight
          MOVE      SP20,XDRGNALS           * DRG National Average LOS
          MOVE      SP20,XDRGSWT            * DRG State Weight
          MOVE      SP20,XDRGSALS           * DRG State Average LOS
          MOVE      SP20,XDRGLWT            * DRG local weight
          MOVE      SP20,XDRGLALS           * DRG local average LOS
          MOVE      SP20,XDRGECRW           * DRG ECCS Raw
.                                           * other variables for LODENC00
          MOVE      ZERO,USENZWIS           * Use NZ WIES data flag
          MOVE      ZERO,TOTWISCF           * NZ Total WIES (including co-paymnt
          MOVE      "0.0000",XDRGTOTN       * Total NWAU
.
CLRENC99  RETURN
.
.------------------------------------------------------------------------------
. Load Error Message Based on Error Number Received
.------------------------------------------------------------------------------
GETERR00  CLEAR      WEBTITLE
          APPEND     "Codefinder Error No:",WEBTITLE
          APPEND     F2,WEBTITLE
          RESET      WEBTITLE
          LOAD       WEBTITLE,F2,ENCERR01,ENCERR02,ENCERR03,ENCERR04,ENCERR05:
                                 ENCERR06,ENCERR07,ENCERR08,ENCERR09,ENCERR10:
                                 WEBTITLE,ENCERR12,WEBTITLE,WEBTITLE,WEBTITLE:
                                 WEBTITLE,WEBTITLE,WEBTITLE,WEBTITLE,WEBTITLE:
                                 WEBTITLE,WEBTITLE,WEBTITLE,WEBTITLE,WEBTITLE:
                                 WEBTITLE,WEBTITLE,WEBTITLE,WEBTITLE,WEBTITLE:
                                 WEBTITLE,WEBTITLE,WEBTITLE,ENCERR34,WEBTITLE:
                                 WEBTITLE,ENCERR37,ENCERR38,ENCERR39,ENCERR40:
                                 ENCERR41,ENCERR42
          RETURN
+
.*****************************************************************************
. Update Details Loaded from Codefinder
. Note will only LOAD PATECOFD & PATECDFD with ICD10 Codes others will be 
. Ignored!!!
.*****************************************************************************
UPDENC00  CLOSE     LOADFILE
          OPEN      LOADFILE,LOADNAME
.
          MATCH     SP3,XDRGGRP
          IF        @EQUAL
            MOVE      PTCNDGPV,XDRGGRP      * use default Grouper Version
          ENDIF
.
.                                           * use POSTE000 for NZ Codefinder
          IF        PTCNHDPS = 1 & USENZWIS = 1
            CALL      POSTE000              * Post Codefinder data with DRG Info
          ELSE
            CALL      POSTC000              * Post Codefinder data with VIC Wies
          ENDIF
.
          CALL      DELECD00  * Delete all records from Diagnosis Coding file
          CALL      DELECO00  * Delete all records from Procedure Coding file
.
          MOVE      ZERO,DISCOUNT
UPDENC10  READ      LOADFILE,SEQ;CODETYPE,ICDCODE,ICDCDESC,DISTYPE,OPERTYPE:
                                 OPERDATE,OPERSTME,OPERETME,ONSETIND,PHYSTEXT:
                                 DRGIND,CCCLASS,DACCDATE,CONTCARF,DIAGDCID
          GOTO      UPDENC90 IF OVER
.
UPDENC20  MATCH     "O",CODETYPE
          IF        @EQUAL
            PACK      KEY9,ICDCODE,SP70     * must be an ICD10 Code
            CALL      RDPTICO1
            COMPARE   ONE,ICDRDVER          * is it ICD9?
            GOTO      UPDENC10 IF EQUAL     * yes, skip this record
            IF        OVRCD=0 
              CALL      WRTPRO00
            ENDIF
          ELSE
            PACK      KEY9,ICDCODE,SP70     * must be an ICD10 Code
            CALL      RDPTICD1
            COMPARE   ONE,ICDRDVER          * is it ICD9?
            GOTO      UPDENC10 IF EQUAL     * yes, skip this record
            IF        OVRCD=0 
              ADD       ONE,DISCOUNT
              CALL      WRTDIS00
            ENDIF
          ENDIF
          GOTO      UPDENC10
.
UPDENC90  CLOSE     LOADFILE,DELETE
....      CALL      DISSQE00           * Resequence Disease Codes & MDS Data
....      CALL      PROSQE00           * Resequence Proceure Codes & MDS Data
.
.         Trigger a visit update message after getting the last transfer record
.
          PACK      KEY30,AADMNO,ZED30
          CALL      RDSTRAN2                * position on admission number
          CALL      RDPTRAN2                * read previous transfer record
          BRANCH    OVRCD,UPDENC99          * eof - shouldn't happen
.
          MATCH     AADMNO,TADMN            * same admission still ?
          GOTO      UPDENC99 IF NOT EQUAL   * no - should happen
.
          CALL      PMIGTNID                * get national id for dgate write
          MOVE      NMPNUMB,PTNINMPI
          MOVE      ONE,HL7TRGID
          MOVE      "WEBGROUP",HL7INCLD
          PROC      DGCLICAC                * trigger I/P visit update message
.
UPDENC99  RETURN
.-------------------------------------------------------------------------------
. Save to the medical records Diagnosis file
.-------------------------------------------------------------------------------
WRTDIS00  IF        MRCNEPSC=0
            MOVE      ONE,EPSCD001     * Episode Coding not used - default to 1
          ENDIF 
.
          PACK      KEY13,ADMISSNO,EPSCD001,Z70
          CALL      RSPTECD1                * Position on & read a patient
          CALL      RPPTECD1                * episode disease file record
          BRANCH    OVRCD,WRTDIS10
.
          MATCH     ADMISSNO,DPTEDADM
          GOTO      WRTDIS10 IF NOT EQUAL   * Different admin no
.
          COMPARE   EPSCD001,PTEDEPNO
          GOTO      WRTDIS20 IF EQUAL       * Same episode no
.
WRTDIS10  MOVE      ZERO,PTEDCNT            * Reset the episode unique counter
.
WRTDIS20  MOVE      ADMISSNO,PTEDADMN       * Admin no
          MOVE      EPSCD001,PTEDEPNO       * Epsiode no
          ADD       ONE,PTEDCNT             * Increment the episode unique cnt
          MOVE      ICDCODE,PTEDCODE        * Diagnosis code
          MOVE      DISTYPE,PTEDTYPE        * Diagnosis type (Prefix)
          MOVE      ZERO,PTEDUNQN           * Unique no
          PACK      PTEDDTCD,CCC,CYY,CMM,CDD
          REP       " 0",PTEDDTCD           * Date of coding
          MOVE      CTIMEIS,PTEDTIME        * Time of coding
          MOVE      PASSCODE,PTEDOPER       * Operator
          MOVE      USERID,PTEDUSID         * Web User ID
          MOVE      DACCDATE,PTEDACDT       * Diagnosis accident date
          MOVE      CCCLASS,PTEDCCCL        * CC Class Level
          MOVE      DRGIND,PTEDDRGD         * DRG Driver 0=Not Used 1=Used
          MOVE      ICDCDESC,PTEDDESC       * Free Format Description
          MOVE      ONSETIND,PTEDOSET       * Diagnosis onset type   *I-190768
          MOVE      CONTCARF,PTEDCCFL       * Contract care flag
.
          MOVE      SP70,PTEDDCID           * Clear diagnosis cluster id
.
          MATCH     "1",MRCNDCID            * Using Diagnosis Cluster Id
          GOTO      WRTDIS40 IF NOT EQUAL
.
          MATCH     PTCNGDX3,DDATE   * disc.date > ICD10 ED 13 Go live?
          GOTO      WRTDIS40 IF LESS
.
          MOVE      DIAGDCID,VALDDCID
          CALL      VLDCID00                * Validate cluster id format
          MOVE      VALDDCID,DIAGDCID
.
          MOVE      DIAGDCID,PTEDDCID       * Set diagnosis cluster id
.
          MATCH     SP70,PTEDDCID              * Cluster id populated
          GOTO      WRTDIS40 IF NOT EQUAL
.
          MATCH     ANSU,PTEDCODE              * U prefix
          IF        @EQUAL
            UNPACK    PTEDCODE,D1,D2
            MOVE      ZERO,F2
            SQUEEZE   D2
            MOVE      D2,F2                   * U78 to U88 range
            IF        F2 >= 78 & F2 <=88
              MOVE      "0 ",PTEDDCID         * Assign chronic
              GOTO      WRTDIS40
            ENDIF
          ENDIF
.
          MOVE      "8 ",PTEDDCID             * Assign unclusterd
.
WRTDIS40  MATCH     SP1,ONSETIND            * Blank Prefix/Onset Indicator?
          IF        @EQUAL
.           * Onset Code not returned from CodeFinder
.           * - now uses logic from MRTWEB02/CODDIS20
            IF        PTCNHDPS > 1
              MOVE      TWO,PTEDOSET        * Diagnosis onset type
              MATCH     CMDISC,PTEDTYPE
              IF        @EQUAL
                MOVE      ONE,PTEDOSET      * Diagnosis onset type (compl)
              ENDIF
            ENDIF
.
.           Queensland processing...
.
            IF        PTCNHDPS = 4
              MOVE      ONE,PTEDOSET        * Diagnosis onset type
              MATCH     CMDISC,PTEDTYPE
              IF        @EQUAL
                MOVE      TWO,PTEDOSET      * Diagnosis onset type (compl)
              ENDIF
            ENDIF
          ELSE
.
.           Process Prefix/Onset Indicator value ("PRFX:") for QLD and other
.           states...
.
            IF        DISCOUNT > 1
              MOVE      ZERO,F1
              MOVE      ONSETIND,F1
.
              IF        PTCNHDPS = 4
                IF        F1 = 2
                  MOVE      CMDISC,PTEDTYPE    * Prefix for a Complication
                  MATCH     SP1,CMDISC         * Blank prefix?
                  IF        @EQUAL
                    MOVE      CMDISA,PTEDTYPE  * yes; use Associated
                  ENDIF
                ENDIF
              ELSE
                IF        F1 = 1
                  MOVE      CMDISC,PTEDTYPE    * Prefix for a Complication
                  MATCH     SP1,CMDISC         * Blank prefix?
                  IF        @EQUAL
                    MOVE      CMDISA,PTEDTYPE  * yes; use Associated
                  ENDIF
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
          MOVE      SP70,PTEDSPAR
.
          PACK      KEY13,PTEDADMN,PTEDEPNO,PTEDCNT,SP20
          CALL      RAPTECD1
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO        * Trap to stop I * D
            CALL      WRPTECD1              * Write an eps dis coding file rec
            TRAPCLR   IO 
          ENDIF
.
WRTDIS99  RETURN
.-------------------------------------------------------------------------------
. Save record to the medical records Procedure file
.-------------------------------------------------------------------------------
WRTPRO00  MOVE      SP10,OPERCLIN
.
          IF        MRCNEPSC=0
            MOVE      ONE,EPSCD001   * Episode Coding not used so default to 1
          ENDIF 
.
          MATCH     "0",MRCNCLIN            * edit returned PHYSTEXT (Clinician
          GOTO      WRTPRO10 IF EQUAL
.                                           * validate Clinician code
          UNPACK    PHYSTEXT,OPERCLIN,KEY25 * retrieve the Clinician code
          MATCH     SP10,OPERCLIN
          IF        !@EQUAL
            PACK      KEY10,OPERCLIN,SP70
            CALL      RDPMHCP1              * check for valid Clinician code
            COMPARE   ZERO,OVRCD
            GOTO      WRTPRO10 IF EQUAL
          ENDIF
.
          MOVE      SVEOCLIN,OPERCLIN       * restore Clinician to before CodeFi
.
WRTPRO10  PACK      KEY13,ADMISSNO,EPSCD001,Z70
          CALL      RSPTECO1                * Position on & read a patient
          CALL      RPPTECO1                * episode Procedure file record
          BRANCH    OVRCD,WRTPRO20
.
          MATCH     ADMISSNO,DPTEOADM
          GOTO      WRTPRO20 IF NOT EQUAL   * Different admin no
.
          COMPARE   EPSCD001,PTEOEPNO
          GOTO      WRTPRO30 IF EQUAL       * Same episode no
.
WRTPRO20  MOVE      ZERO,PTEOCNT            * Reset the episode unique counter
.
WRTPRO30  MOVE      ADMISSNO,PTEOADMN       * Admin no
          MOVE      EPSCD001,PTEOEPNO       * Epsiode no
          ADD       ONE,PTEOCNT             * Increment the episode unique cnt
          MOVE      ICDCODE,PTEOCODE        * Procedure code
          MOVE      OPERTYPE,PTEOTYPE       * Procedure type
          MOVE      ZERO,PTEOUNQN           * Unique no
          PACK      PTEODTCD,CCC,CYY,CMM,CDD
          REP       " 0",PTEODTCD           * Date of coding
          MOVE      CTIMEIS,PTEOTIME        * Time of coding
          MOVE      PASSCODE,PTEOOPER       * Operator
          MOVE      USERID,PTEOUSID         * Web User ID
          MOVE      OPERDATE,PTEODATE       * Procedure Date
          MOVE      OPERSTME,PTEOSTTM       * Procedure Start Time
          MOVE      OPERETME,PTEOEDTM       * Procedure End Time
...       MOVE      SP70,PTEODRGD           * DRG Driver 0=Not Used 1=Used
          MOVE      DRGIND,PTEODRGD         * DRG Driver 0=Not Used 1=Used
          MOVE      ICDCDESC,PTEODESC       * Free Format Description
          MOVE      CONTCARF,PTEOCCFL       * Contract care flag
.
          MOVE      OPERCLIN,PTEOCLIN       * Procedure Clinician code *I-240103
          MOVE      SP70,PTEOSPAR
.
          PACK      KEY13,PTEOADMN,PTEOEPNO,PTEOCNT
          CALL      RAPTECO1
          IF        OVRCD=1
            CALL      WRPTECO1              * Write an eps coding file rec
          ENDIF
.
WRTPRO99  RETURN
.------------------------------------------------------------
. Get Non Hospital Operations
.------------------------------------------------------------
GNHOP000  PACK      KEY16,AADMNO,SP20
          CALL      RSPTECO2                * Position on & read a patient
GNHOP100  CALL      RKPTECO2                  episode operation file record
          BRANCH    OVRCD,GNHOP900
          MATCH     AADMNO,PTEOADMN
          GOTO      GNHOP900 IF NOT EQUAL   * Different admission number
.
. check if codes prefixed with 'I' have already been sent to Codefinder
          MATCH     "1",MRCNPIGP
          IF        @EQUAL
            MATCH     "I",PTEOTYPE
            GOTO      GNHOP100 IF EQUAL     * don't include prefixes of 'I'
          ENDIF
.
          MATCH     CMOPRT,PTEOTYPE
          GOTO      GNHOP100 IF EQUAL       * Only want non-hopsital operations
.
GNHOP200  MATCH     PTCNEDRG,PTEOCODE
          GOTO      GNHOP100 IF EQUAL       * Ignore this code
.
          PACK      KEY9,PTEOCODE           * 0926029
          CALL      RDPTICO1                * Read an ICD operation file rec
          BRANCH    OVRCD,GNHOP100
          COMPARE   ONE,ICDRDVER            * ICD9?
          GOTO      GNHOP100 IF EQUAL       * Yes, skip this record
.
          MOVE      ANSO,CODETYPE
          MOVE      PTEOCODE,ICDCODE
          MOVE      PTEODESC,ICDCDESC       * 0926029
          MOVE      SP1,DISTYPE
          MOVE      PTEOTYPE,OPERTYPE
          MOVE      PTEODATE,OPERDATE
          MOVE      PTEOSTTM,OPERSTME
          MOVE      PTEOEDTM,OPERETME
          PACK      PHYSTEXT,PTEOCLIN,SP70                            *I-240103
          MOVE      PTEOCCFL,CONTCARF       * Contract care flag
          MOVE      SP70,DIAGDCID           * Diagnosis cluster id
.
          WRITE     LOADFILE,SEQ;CODETYPE,ICDCODE,ICDCDESC,DISTYPE,OPERTYPE:
                                 OPERDATE,OPERSTME,OPERETME,ONSETIND,PHYSTEXT:
                                 DRGIND,CCCLASS,DACCDATE,CONTCARF,DIAGDCID
          GOTO      GNHOP100
.
GNHOP900  MOVE      ZERO,EXIT
GNHOP999  RETURN
.------------------------------------------------------------
. Codefinder Detail Line Processing
.------------------------------------------------------------
ENCLIN00  MOVE      ZERO,EXIT               * "COD:"
          UNPACK    CODELINE,KEY4,DATA150B  * remove Tag from data
          MOVE      DATA150B,CODELINE
          SQUEEZE   CODELINE
.
.                                       ******* "COD:" sub-codes
.
ENCLIN10  RESET     CODELINE
          SCAN      "AI.",CODELINE          * "AI."
          GOTO      ENCLIN99 IF EQUAL
.                                           * ----- Check for a DRG code -----
          RESET     CODELINE
          SCAN      "R.",CODELINE           * "R."
          IF        @EQUAL
            UNPACK    CODELINE,KEY2,ICDCODE
            PACK      XDRGDRG,ICDCODE,SP4
            GOTO      ENCLIN99
          ENDIF
.                                           * ----- DRG code (new format) -----
          RESET     CODELINE
          SCAN      "I10R",CODELINE           * "I10R"
          IF        @EQUAL
            SCAN      ".",CODELINE
            UNPACK    CODELINE,DIM1,ICDCODE
            PACK      XDRGDRG,ICDCODE,SP4
            PACK      CODELINE,XDRGDRG,SP70
            GOTO      ENCLIN99
          ENDIF
.
.                                           * ----- Check for MDC code -----
          RESET     CODELINE
          SCAN      "MDC.",CODELINE         * "MDC."
          IF        @EQUAL
            UNPACK    CODELINE,KEY4,KEY3
            MOVE      KEY3,MDCCODE          * now returns "xxx" only
            UNPACK    KEY3,ANS,KEY2
            MOVE      KEY2,XDRGMDC
            REP       " 0",XDRGMDC
            GOTO      ENCLIN99
          ENDIF
.                                           * ----- MDC code (new format) -----
          RESET     CODELINE
          SCAN      "I10MDC",CODELINE       * "I10MDC"
          IF        @EQUAL
            SCAN      ".",CODELINE
            UNPACK    CODELINE,DIM1,KEY3
            MOVE      KEY3,MDCCODE          * now returns "xxx" only
            UNPACK    KEY3,ANS,KEY2
            MOVE      KEY2,XDRGMDC
            REP       " 0",XDRGMDC
            PACK      CODELINE,XDRGMDC,SP70
            GOTO      ENCLIN99
          ENDIF
.
.                                           * ----- Check for DRG & ICD10 Ver.
          RESET     CODELINE
          SCAN      "VSN.",CODELINE         * "VSN."
          IF        @EQUAL
            UNPACK    CODELINE,KEY4,KEY6
            MATCH     "I10E",KEY6           * ICD10 Ed.
            GOTO      ENCLIN99 IF EQUAL
.
            MATCH     "AR",KEY6             * DRG Vers. eg. "AR51" to "051"
            IF        @EQUAL
              UNPACK    KEY6,DIM2,KEY2,KEY3
              MATCH     "1",KEY2                  * DRG 10 or above
              IF        @EQUAL
                PACK      XDRGGRP,KEY2,SP4        * DRG Version  10 is "100"
              ELSE
                PACK      XDRGGRP,SP1,KEY2,SP4    * DRG Version            
              ENDIF
              REP       " 0",XDRGGRP
            ENDIF
            GOTO      ENCLIN99
          ENDIF
.                                           * ----- Check for DRG & ICD10 Ver.
          RESET     CODELINE
          SCAN      "I10VSN",CODELINE       * "I10VSN"
          IF        @EQUAL
            SCAN      ".",CODELINE
            UNPACK    CODELINE,DIM1,KEY6
            MATCH     "I10E",KEY6           * ICD10 Ed.
            GOTO      ENCLIN99 IF EQUAL
.
            MATCH     "AR",KEY6             * DRG Vers. eg. "AR51" to "051"
            IF        @EQUAL
              UNPACK    KEY6,DIM2,KEY2,KEY3
              MATCH     "1",KEY2                  * DRG 10 or above
              IF        @EQUAL
                PACK      XDRGGRP,KEY2,SP4        * DRG Version  10 is "100"
              ELSE
                PACK      XDRGGRP,SP1,KEY2,SP4    * DRG Version
              ENDIF
              REP       " 0",XDRGGRP
              PACK      CODELINE,XDRGGRP,SP70
            ENDIF
            GOTO      ENCLIN99
          ENDIF
.                                           * ----- Check for a PCCL code -----
          RESET     CODELINE
          SCAN      "PCCL.",CODELINE        * "PCCL."
          IF        @EQUAL
            SCAN      ".",CODELINE
            UNPACK    CODELINE,KEY1
            MOVE      KEY1,XDRGCCL          * DRG Patient CC class level
            GOTO      ENCLIN99
          ENDIF
.                                           * ----- PCCL code (new format) -----
          RESET     CODELINE
          SCAN      "I10PCCL",CODELINE      * "I10PCCL"
          IF        @EQUAL
            SCAN      ".",CODELINE
            UNPACK    CODELINE,DIM1,KEY1
            MOVE      KEY1,XDRGCCL          * DRG Patient CC class level
            PACK      CODELINE,XDRGCCL,SP70
            GOTO      ENCLIN99
          ENDIF
.
.                           * ----- Check for a disease or operation code -----
.
ENCLIN20  RESET     CODELINE
          SCAN      "T.",CODELINE           * "T." - Disease Code
          IF        @EQUAL
            UNPACK    CODELINE,KEY2,ICDCODE
            MOVE      "T ",TYPOFCOD
            CALL      CDISS000              * Convert ICD10 disease stuff
            BRANCH    EXIT,ENCLIN90         * ICD code not found    
            GOTO      ENCLIN99
          ENDIF
.
ENCLIN30  RESET     CODELINE
          SCAN      "TM.",CODELINE          * "TM." - Morphology Code
          IF        @EQUAL
            UNPACK    CODELINE,KEY3,ICDCODE
            MOVE      "TM",TYPOFCOD
            CALL      CDISS000              * Convert ICD10 disease stuff
            BRANCH    EXIT,ENCLIN90         * ICD code not found    
            GOTO      ENCLIN99
          ENDIF
.
ENCLIN40  RESET     CODELINE
          SCAN      "ACHI.",CODELINE        * "ACHI." - Procedure Code
          IF        @EQUAL
            UNPACK    CODELINE,KEY5,ICDCODE
            MOVE      "PR",TYPOFCOD
            CALL      COPRS000              * Convert ICD10 operation stuff
            BRANCH    EXIT,ENCLIN90         * ICD code not found    
            GOTO      ENCLIN99
          ENDIF
.
ENCLIN50  RESET     CODELINE
          SCAN      "I10ECCSRAW",CODELINE   * ECCS RAW Format
          IF        @EQUAL
            SCAN      ".",CODELINE
            UNPACK    CODELINE,KEY1,KEY11   * 0870480 (COD:I10ECCSRAW###.nnnnn)
            MATCH     SP70,KEY11
            IF        !@EQUAL
              MOVE      KEY11,XDRGECRW
              GOTO      ENCLIN99
            ENDIF
          ENDIF
.
ENCLIN90  MOVE      ONE,EXIT
.
ENCLIN99  RETURN
.******************************************************************************
.*                                 CDISS000               Called by: WCODT000 *
.*                           Convert Disease Stuff                            *
.******************************************************************************
CDISS000  MOVE      ZERO,EXIT
          UNPACK    SP70,PROCDATE,PHYSTEXT
          UNPACK    SP70,ONSETIND,DISTYPE,ENCDTYPE
          UNPACK    SP70,DRGIND,CCCLASS,DACCDATE
          UNPACK    SP70,CONTCARF,DIAGDCID
.
          ADD       ONE,DISCOUNT            * Increment Code Counter
.
          MOVE      SP70,OPERTYPE
          CALL      RLTAGS00                * Get Related Tags - TEXT: ARE: etc
          CALL      GDSPX000                * Get disease prefix      *M-212604
.
          MOVE      SP9,DSSCODE
          PACK      ICDCODE,ICDCODE,SP10
          RESET     ICDCODE
.
. ----- ICD10 codes -----
.
          UNPACK    ICDCODE,KEY3,KEY6
          MATCH     SP6,KEY6
          IF        @EQUAL
            PACK      DSSCODE,KEY3
          ELSE
            PACK      DSSCODE,KEY3,DOT,KEY6
          ENDIF
.
          MATCH     "TM",TYPOFCOD
          IF        @EQUAL
            UNPACK    ICDCODE,KEY5,KEY3
            MATCH     SP3,KEY3
            IF        @EQUAL
              PACK      DSSCODE,KEY5,SP9
            ELSE
              PACK      DSSCODE,KEY5,SLASH,KEY3
            ENDIF
          ENDIF
.
          PACK      DSSCODE,DSSCODE,SP9
          PACK      KEY9,DSSCODE
          CALL      RDPTICD1                * Read disease file record
          BRANCH    OVRCD,CDISS900
          COMPARE   ONE,ICDRDVER            * ICD9?
          GOTO      CDISS900 IF EQUAL       * Yes skip this record
.
          COMPARE   ONE,CFFMORB             * Allow Desc change in Morbidity?
          IF        !@EQUAL
            PACK      ICDCDESC,DDESC,SP30   * No, use ICD10 file description
          ELSE
            MATCH     SP70,ICDCDESC         * Yes, is desc from encoder blank?
            IF        @EQUAL
              PACK      ICDCDESC,DDESC,SP30 * Yes, use ICD10 file description
            ENDIF
          ENDIF
.
          MOVE      PROCDATE,DACCDATE       * Save Accident Date
.
          MOVE      DSSCODE,KEY9
          PACK      KEY25,KEY9,AADMNO,SP30
          CALL      RSPTECD3                * Position on & read a patient
          CALL      RKPTECD3                * episode diagnosis file record
          BRANCH    OVRCD,CDISS800
          MATCH     KEY9,PTEDCODE
          GOTO      CDISS800 IF NOT EQUAL   * Different diagnosis code
          MATCH     AADMNO,PTEDADMN
          GOTO      CDISS800 IF NOT EQUAL   * Different admin no
.
.                                           * ICD Code found for this Admission
          MOVE      PTEDCCFL,CONTCARF       * Contract care flag
.
CDISS800  CALL      WDISC000                * Write disease codes
.
CDISS900  MOVE      ZERO,EXIT
.
CDISS999  RETURN
+
.******************************************************************************
.*                                 COPRS000               Called by: WCODT000 *
.*                          Convert Operation Stuff                           *
.******************************************************************************
COPRS000  UNPACK    SP70,PROCDATE,PHYSTEXT
          UNPACK    SP70,ONSETIND,DISTYPE,ENCDTYPE
          UNPACK    SP70,DRGIND,CCCLASS,DACCDATE
          UNPACK    SP70,CONTCARF,DIAGDCID
.
          MOVE      CMOPRT,OPERTYPE
          MOVE      SP9,OPRCODE
          PACK      ICDCODE,ICDCODE,SP10
          RESET     ICDCODE
.
          CALL      RLTAGS00                * Get Related Tags
.
. ----- ICD10 codes -----
.
          UNPACK    ICDCODE,KEY5,KEY4
          MOVE      "-",KEY1
          PACK      OPRCODE,KEY5,KEY1,KEY4
.
          PACK      OPRCODE,OPRCODE,SP9
          PACK      KEY9,OPRCODE
          CALL      RDPTICO1                * Read an ICD operation file rec
          BRANCH    OVRCD,COPRS900
          COMPARE   ONE,ICDRDVER            * ICD9?
          GOTO      COPRS900 IF EQUAL       * Yes, skip this record
.
          MOVE      PT0OMI9C,CKYIDEF9
.
          COMPARE   ONE,CFFMORB             * Allow Desc change in Morbidity?
          IF        !@EQUAL
            PACK      ICDCDESC,ODESC,SP30   * No, use ICD10 file description
          ELSE
            MATCH     SP70,ICDCDESC         * Yes, is desc from encoder blank?
            IF        @EQUAL
              PACK      ICDCDESC,ODESC,SP30 * Yes, use ICD10 file description
            ENDIF
          ENDIF
.
          UNPACK    SP70,OPERDATE,OPERSTME,OPERETME,OPERCLIN
.
          MOVE      ZERO,FORM1
          MOVE      OPRCODE,KEY9
COPRS300  PACK      KEY25,KEY9,AADMNO,SP30
          CALL      RSPTECO3                * Position on & read a patient
COPRS310  CALL      RKPTECO3                * episode operation file record
          BRANCH    OVRCD,COPRS400
.
          MATCH     KEY9,PTEOCODE
          GOTO      COPRS400 IF NOT EQUAL   * Different operation code
.
          MATCH     AADMNO,PTEOADMN
          GOTO      COPRS400 IF NOT EQUAL   * Different admin no
.
.                                           * ICD Code found for this Admission
.0935074  IF        WAHPDATE=1
            MATCH     PTEODATE,PROCDATE     * Procedure not for same date
            GOTO      COPRS310 IF NOT EQUAL * try next procedure
.0935074  ENDIF
.
          MOVE      PTEODATE,OPERDATE
          MOVE      PTEOSTTM,OPERSTME
          MOVE      PTEOEDTM,OPERETME
          PACK      PHYSTEXT,PTEOCLIN,SP70                            *I-240103
          MOVE      PTEOCCFL,CONTCARF       * Contract care flag
          MOVE      SP70,DIAGDCID           * Diagnosis cluster id
.
.
.                                                     * start ----    *I-153475
          MATCH     SP8,PROCDATE
          GOTO      COPRS600 IF EQUAL       * nothing from 3M - only special
.
          MATCH     PROCDATE,PTEODATE
          GOTO      COPRS600 IF EQUAL       * no change
.
          MOVE      PROCDATE,OPERDATE       * Procedure date has changed
          GOTO      COPRS500
.
.                                           * set date for new Procedure
COPRS400  MATCH     SP8,PROCDATE            * returned from Codefinder ?
          IF        !@EQUAL
            MOVE      PROCDATE,OPERDATE
          ENDIF
.
....S500  BRANCH    WAHEALTH,COPRS600       * WA Health bypass Dates  *D-257260
.
COPRS500  MATCH     "1",PT0ODTMN            * Date/Time of Proc Non-Mandatory?
          IF        !@EQUAL
            CALL      GODTM000              * mandatory so Get Op. Dt and tm.
            CALL      GOCLN000              * Get default clinician
          ENDIF
.
COPRS600  CALL      WOPRC000                * Write operation codes
.
COPRS900  MOVE      ZERO,EXIT
COPRS999  RETURN
.******************************************************************************
.*                                 GDSPX000               Called by: CDISS000 *
.*                            Get Disease Prefix                              *
.******************************************************************************
GDSPX000  MOVE      ZERO,EXIT
.                                           * ENCDTYPE is only populated for VIC
          MATCH     SP1,ENCDTYPE            * is PREFIX from CodeFinder ?
          IF        !@EQUAL
            IF        PTCNHDPS = 3 & PTCNOENC > 0 & PTCNAAPE = 1
              MOVE      ENCDTYPE,DISTYPE    * VIC only + "change Disease Prefix"
            ENDIF
          ENDIF                                            * end      *I-212604
.
          MATCH     SP1,ENCDTYPE
          IF        @EQUAL
            MOVE      CMDISP,DISTYPE        * Principal disease prefix
            IF        PTCNEAPD <> 1 & DISCOUNT > 1
              MOVE      CMDISA,DISTYPE      * Associated disease prefix
            ENDIF
          ENDIF
.
GDSPX200  SCAN      "-LOS",ICDCODE
          IF        @EQUAL & PTCNLTYP = 1
            MATCH     SP1,ENCDTYPE
            IF        @EQUAL
              MOVE      CMDISL,DISTYPE      * Length of Stay (Disease) Prefix
            ENDIF
            BUMP      ICDCODE,-1
            LENSET    ICDCODE
            RESET     ICDCODE
            PACK      ICDCODE,ICDCODE,SP9   * Get rid of -LOS from disease code
          ENDIF
.                                                            * start  *C-210010
          MATCH     "TM",TYPOFCOD
          GOTO      GDSPX999 IF NOT EQUAL   * Not a morphology code
.
.                                    * Morphology Code for NSW, VIC, QLD, WA, NT, TAS, ACT
GDSPX300  IF        PTCNHDPS = 2 | PTCNHDPS = 3 | PTCNHDPS=4 | PTCNHDPS = 6 | PTCNHDPS = 7 | PTCNHDPS = 8 | PTCNHDPS = 9
            MATCH     SP1,ENCDTYPE
            IF        @EQUAL
              MOVE      CMDISM,DISTYPE      * Morphology disease prefix
            ENDIF
          ENDIF
.
GDSPX999  RETURN
+
.******************************************************************************
.*                                 RLTAGS00               Called by: CDISS000 *
.*                 Get Related Tags (Tags related to "COD:" Tag)   & COPRS000 *
.******************************************************************************
RLTAGS00  MOVE      ZERO,EXIT
          PACK      ICDCDESC,SP70,SP70
          UNPACK    SP70,ENCDTYPE                                     *I-248747
.
RLTAGS10  BRANCH    BYPASSRD,RLTAGS99
          READ      ENCOUTAF,SEQ;CODELINE
          GOTO      RLTAGS99 IF OVER
.
          MATCH     "COD:",CODELINE         * "COD:"
          IF        @EQUAL
            MOVE      ONE,BYPASSRD          * found next "COD:" - finish off
            GOTO      RLTAGS99
          ENDIF
.
          MATCH     "MOD:",CODELINE         * "MOD:"   - Morphology code   
          GOTO      RLTAGS10 IF EQUAL       * Ignore Morphoplogy cancer tag
.
          MATCH     "UNITS:",CODELINE       * "UNITS:"
          GOTO      RLTAGS10 IF EQUAL       * Ignore
.
          MATCH     "TEXT:",CODELINE        * "TEXT:"
          IF        @EQUAL
            UNPACK    CODELINE,KEY5,ICDCDESC
            CMATCH    "~",ICDCDESC
            IF        @EQUAL
              UNPACK    ICDCDESC,KEY1,KEY200   * Remove tilde from description
              REP       "#"'",KEY200
              PACK      ICDCDESC,KEY200,SP70,SP70,SP70
            ENDIF
            PACK      ICDCDESC,ICDCDESC,SP70
            GOTO      RLTAGS10
          ENDIF
.
          MATCH     "ARE:",CODELINE         * "ARE:"    - DRG Driver indicator
          IF        @EQUAL
            UNPACK    CODELINE,KEY4,DRGIND    
            GOTO      RLTAGS10
          ENDIF
.
          MATCH     "ARCL:",CODELINE        * "ARCL:"   - DRG info
          IF        @EQUAL
            UNPACK    CODELINE,KEY5,CCCLASS   *           - CC Class Level
            GOTO      RLTAGS10
          ENDIF
.
RLTAGS50  MATCH     "PRFX:",CODELINE        * "PRFX:"  - Prefix/Onset Indicator
          IF        @EQUAL
            UNPACK    CODELINE,KEY5,KEY1
            MATCH     SP70,OPERTYPE
            GOTO      RLTAGS55 IF NOT EQUAL      * procedure code prefix ?
.
.                                           * VIC only + "change Disease Prefix"
            IF        PTCNHDPS = 3 & PTCNOENC > 0 & PTCNAAPE = 1
              REP       "P-C-A-M-",KEY1
              MATCH     "-",KEY1
              GOTO      RLTAGS10 IF NOT EQUAL 
              UNPACK    CODELINE,KEY5,ENCDTYPE  * set DISTYPE for VIC only
              GOTO      RLTAGS10
            ENDIF
.                                           * all other States - Onset Indicator
            TYPE      KEY1
            GOTO      RLTAGS10 IF NOT EQUAL
            MOVE      KEY1,ONSETIND
            GOTO      RLTAGS10
.
RLTAGS55    UNPACK    CODELINE,KEY5,KEY1
            REP       "O-I-N-X-",KEY1            * valid procedure prefix ?
            MATCH     "-",KEY1
            GOTO      RLTAGS10 IF NOT EQUAL 
            UNPACK    CODELINE,KEY5,OPERTYPE     * save prefix
          ENDIF
.
RLTAGS60  MATCH     "DATE:",CODELINE        * "DATE:"   - Procedure date
          IF        @EQUAL
            UNPACK    CODELINE,KEY5,KEY10
            PACK      KEY10,KEY10,SP10
            MATCH     SP10,KEY10
            GOTO      RLTAGS10 IF EQUAL
            UNPACK    KEY10,CDAY,KEY1,CMON,KEY1,KEY4
            PACK      PROCDATE,KEY4,CMON,CDAY,SP8
            REP       " 0",PROCDATE
            GOTO      RLTAGS10
          ENDIF
.
          MATCH     "PHYS:",CODELINE        * "PHYS:"   - Procedure Physician
          IF        @EQUAL
            UNPACK    CODELINE,KEY5,KEY35
            PACK      PHYSTEXT,KEY35,SP30
            UNPACK    PHYSTEXT,OPERCLIN       * Clinician code        *I-240103
            GOTO      RLTAGS10
          ENDIF
.
          MATCH     "DXC:",CODELINE        * "DXC:" - Diagnosis Cluster Id
          IF        @EQUAL
            UNPACK    CODELINE,KEY4,KEY2
            PACK      DIAGDCID,KEY2,SP70
            GOTO      RLTAGS10
          ENDIF
.
          GOTO        RLTAGS10              * found an unknown Tag - get next
.
.
RLTAGS99  RETURN
+
.******************************************************************************
.*                                 GODTM000               Called by: COPRS000 *
.*                   Get operation Date and Time from patmmbsf                *
.******************************************************************************
GODTM000  MOVE      ZERO,EXIT
.
          PACK      KEY11,AADMNO,SP70
          CALL      RDSMMBS1                * Position at start of file
GODTM400  CALL      RDKMMBS1                * Get the earliest
          BRANCH    OVRCD,GODTM900
.
          MATCH     AADMNO,MMADMN
          GOTO      GODTM900 IF NOT EQUAL
.
          MATCH     SP8,OPERDATE
          IF        @EQUAL
            MOVE      MMDATE,OPERDATE
            MOVE      MMSTIM,OPERSTME       * Op. Start time
            MOVE      MMETIM,OPERETME       * Op. End Time
            GOTO      GODTM999
          ENDIF
.
.                                           * set times for this Oper Code
          MOVE      OPRCODE,DIM5            * MBS items have no dash
          MATCH     DIM5,MMCODE
          GOTO      GODTM400 IF NOT EQUAL
.
          MATCH     MMDATE,OPERDATE         * MMBS Date vs Codefinder Date
          IF        @EQUAL
.                                           * set times for this date *I-199900
            MOVE      MMSTIM,OPERSTME       * Op. Start time
            MOVE      MMETIM,OPERETME       * Op. End Time
            GOTO      GODTM999
          ENDIF
.
          GOTO      GODTM400
.
.                                           * last chance - set default times
GODTM900  MATCH     SP8,OPERDATE
          IF        @EQUAL
            MOVE      DDATE,OPERDATE
            MATCH     "1",MRCNOPDT          * change default to Admiss.Date ?
            IF        @EQUAL
              MOVE      ADATE,OPERDATE                                *I-227073
            ENDIF
            MATCH     "2",MRCNOPDT          * change default to "No def Date"
            IF        @EQUAL
              MOVE      SP8,OPERDATE
            ENDIF
          ENDIF                             
.
          MATCH     SP5,OPERSTME
          IF        @EQUAL
            MOVE      "00:00",OPERSTME      * Op. Start Time
          ENDIF
          MATCH     SP5,OPERETME
          IF        @EQUAL
            MOVE      "00:00",OPERETME      * Op. End Time
          ENDIF
.
GODTM999  RETURN
+
.******************************************************************************
.*                                 GOCLN000               Called by: COPRS000 *
.*                   Get operation clinician from patmmbsf if required        *
.******************************************************************************
GOCLN000  REP       " 0",MRCNCLIN            * 0=NotUsed 1=Displayed 2=Mandatory
.
          MATCH     "0",MRCNCLIN             * Exit no clinician used
          GOTO      GOCLN999 IF EQUAL
.
          MATCH     SP70,PHYSTEXT            * Clincian already populated
          GOTO      GOCLN999 IF NOT EQUAL
.
          MATCH     "3",MRCNDFPR             * Clinician from Theatre Case
          IF        @EQUAL
            CALL      CLTC0000
            GOTO      GOCLN999
          ENDIF
.
          PACK      KEY11,AADMNO,SP70
          CALL      RDSMMBS1                * Check if MBS item exits
          CALL      RDKMMBS1               
          BRANCH    OVRCD,GOCLN999
.
          MATCH     AADMNO,MMADMN           * Correct admission
          GOTO      GOCLN999 IF NOT EQUAL
.
          PACK      KEY31,ADMISSNO,SP70
          CALL      RSOPDEA2
GOCLN200  CALL      RKOPDEA2                * Read fist theatre record
          BRANCH    OVRCD,GOCLN999          * for this admission
.
          MATCH     OPDAADMN,ADMISSNO       * correct admission
          GOTO      GOCLN999 IF NOT EQUAL
.
          COMPARE   FOUR,OPDASTAT           * Skip cancelled
          GOTO      GOCLN200 IF NOT EQUAL
.
          PACK      KEY22,OPDAHOSP,OPDADATE,OPDATIME,OPDACLIN,SP70
          CALL      RDOPSES1                 * Read theatre session
          BRANCH    OVRCD,GOCLN999
.
          MATCH     "1",MRCNDFPR      * Clinician from Theatre Session
          IF        @EQUAL
            MATCH     SP70,OPSECLIN           * Skip blank
            GOTO      GOCLN999 IF EQUAL
.
            PACK      KEY10,OPSECLIN,SP70     * Valid HCP
            CALL      RDPMHCP1
            BRANCH    OVRCD,GOCLN999
.
            PACK      PHYSTEXT,OPSECLIN,SP70  * Populate clinician
            GOTO      GOCLN999
          ENDIF
.
          MATCH     "2",MRCNDFPR      * Clinician from Default Team
          IF        @EQUAL
            MATCH     SP70,OPSEDCC1           * Skip blank
            GOTO      GOCLN999 IF EQUAL
.
            PACK      KEY10,OPSEDCC1,SP70     * Valid HCP
            CALL      RDPMHCP1
            BRANCH    OVRCD,GOCLN999
.
            PACK      PHYSTEXT,OPSEDCC1,SP70  * Populate clinician
            GOTO      GOCLN999
          ENDIF
.
GOCLN999  RETURN
+
.******************************************************************************
. Get operating clinician for a theatre case
.******************************************************************************
CLTC0000  MOVE      ONE,MMRECN
          PACK      KEY11,ADMISSNO,MMRECN,SP70
          CALL      RDMMBS1
          BRANCH    OVRCD,CLTC9999
.
          PACK      KEY10,PTMMOPID,SP70
          CALL      RDOPDEA3
          BRANCH    OVRCD,CLTC9999
.
          MOVE      " 0",DIM2
          PACK      KEY35,PTMMOPID,PTMMTMNO,DIM2,Z70
          CALL      RSOPTSM1
CLTC1000  CALL      RPOPTSM1
          BRANCH    OVRCD,CLTC9999
.
          MATCH     PTMMOPID,OPTSUNID
          GOTO      CLTC9999 IF NOT EQUAL
.
          MATCH     PTMMTMNO,OPTSTMNO
          GOTO      CLTC9999 IF NOT EQUAL
.
          MATCH     DIM2,DOPTSSIN
          GOTO      CLTC1000 IF NOT EQUAL
.
          MATCH     OPDADATE,OPTSSDAT
          GOTO      CLTC1000 IF NOT EQUAL
.
          MOVE      OPTSSTIM,DIM4                * Match hour/min only
          MATCH     OPDAEXPS,DIM4
          GOTO      CLTC1000 IF NOT EQUAL
.
          MATCH     SP70,OPTSSCDE
          GOTO      CLTC9999 IF EQUAL
          GOTO      CLTC9999 IF EOS
.
          PACK      KEY10,OPTSSCDE,SP70     * Valid HCP
          CALL      RDPMHCP1
          BRANCH    OVRCD,CLTC9999

          PACK      PHYSTEXT,OPTSSCDE,SP70  * Populate clinician
.
CLTC9999  RETURN
+
.******************************************************************************
.*                                 WDISC000               Called by: CDISS000 *
.*                            Write Disease Codes                             *
.******************************************************************************
WDISC000  MOVE      ANSD,CODETYPE
          MOVE      DSSCODE,ICDCODE
          MOVE      SP70,PHYSTEXT                                     *I-240103
          UNPACK    SP70,OPERTYPE,OPERDATE,OPERSTME,OPERETME
          WRITE     LOADFILE,SEQ;CODETYPE,ICDCODE,ICDCDESC,DISTYPE,OPERTYPE:
                                 OPERDATE,OPERSTME,OPERETME,ONSETIND,PHYSTEXT:
                                 DRGIND,CCCLASS,DACCDATE,CONTCARF,DIAGDCID
          ADD       ONE,LOADCNT
          RETURN
.
.******************************************************************************
.*                                 WOPRC000               Called by: COPRS000 *
.*                           Write Operation Codes                            *
.******************************************************************************
WOPRC000  MOVE      ANSO,CODETYPE
          MOVE      OPRCODE,ICDCODE
          MOVE      SP1,DISTYPE
          WRITE     LOADFILE,SEQ;CODETYPE,ICDCODE,ICDCDESC,DISTYPE,OPERTYPE:
                                 OPERDATE,OPERSTME,OPERETME,ONSETIND,PHYSTEXT:
                                 DRGIND,CCCLASS,DACCDATE,CONTCARF,DIAGDCID
          ADD       ONE,LOADCNT
          RETURN
.
.------------------------------------------------------------
. Get Discharge Status/Destination
.------------------------------------------------------------
GETDSP00  MOVE      SP70,ENCDSP
          IF        MRCNEPSC =1 | ASTAT=3
            UNPACK    DDATE,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE               * Format discharge date
            IF        PTCNDRSM=1
              PACK      KEY5,ANSD,SP1,DSTAT
            ELSE
              PACK      KEY5,ANSD,ANSD,DDEST
            ENDIF
            CALL      RDCODE1               * Read the codes file for the
            IF        OVRCD<>1
              MATCH     "1",MRCN3MCD             * Indicator 5 only
              IF        @EQUAL
                MATCH     SP1,TCINDC5
                IF        !@EQUAL
                  PACK      ENCDSP,TCINDC5,SP70
                ENDIF
              ELSE
                MATCH     SP1,TCINDC5
                IF        !@EQUAL
                  PACK      ENCDSP,TCINDC5,SP70
                ENDIF
.
                MATCH     SP70,PTCDUDF3          * User def 3
                IF        !@EQUAL
                  PACK      ENCDSP,PTCDUDF3,SP70 * Separation mode
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
GETDSP99  RETURN
.------------------------------------------------------------
. Output Codefinder Coding Details
.------------------------------------------------------------
ENCDT000  MOVE      ZERO,NOOFCODE
.
.         Get the Episode Disease codes
.
          PACK      KEY13,AADMNO,EPSCD001,SP20
          CALL      RSPTECD1                * Position on & read a patient
ENCDT100  CALL      RKPTECD1                * episode disease file record
          BRANCH    OVRCD,ENCDT190
          MATCH     AADMNO,PTEDADMN
          GOTO      ENCDT190 IF NOT EQUAL   * Different admin no
          COMPARE   EPSCD001,PTEDEPNO
          GOTO      ENCDT190 IF NOT EQUAL   * Different Episode
.
          PACK      KEY9,PTEDCODE
          CALL      RDPTICD1                * Read disease file record
          BRANCH    OVRCD,ENCDT100
          COMPARE   ONE,ICDRDVER            * ICD9?
          GOTO      ENCDT100 IF EQUAL       * Yes, skip this record
.
          MOVE      "T ",KEY2               * Default to a disease code prefix
          MATCH     "4",PT0DACRQ
          IF        @EQUAL
            MOVE      "TM",KEY2             * Morphology code prefix  *C-190768
          ENDIF
.
          ADD       ONE,CVERT               * Add one to line counter
          REP       ". - / ",PTEDCODE
          SQUEEZE   PTEDCODE
          PACK      PTEDCODE,PTEDCODE,SP9
          PACK      ICDCODE,KEY2,DOT,PTEDCODE,SP10      * setup T. or TM.
          SQUEEZE   ICDCODE
          IF        PASSNUM = 2
            STRIP     ICDCODE
            MOVELPTR  ICDCODE,LENGTH
            SFORMAT   VAR,LENGTH
            MOVE      ICDCODE,VAR
            WRITE     ENCFILEF,SEQ;"COD:",VAR           * "T.code" or "TM.code"
.
.                                                          * start    *I-212604
            IF        PTCNHDPS = 3 & PTCNOENC > 0 & PTCNAAPE = 1
.                                           * VIC Only - Disease Code Prefix
              MATCH     SP1,PTEDTYPE
              GOTO      ENCDT150 IF EQUAL               * bypass blank Prefix
              WRITE     ENCFILEF,SEQ;"PRFX:",PTEDTYPE   * write Prefix Code
              GOTO      ENCDT150                        * bypass Onset Indicator
            ENDIF                                          * end      *I-212604
.
.           MATCH     "T ",KEY2
.           GOTO      ENCDT150 IF NOT EQUAL             * bypass Morphology
            MATCH     SP1,PTEDOSET
            GOTO      ENCDT150 IF EQUAL                 * bypass blank Onset
            WRITE     ENCFILEF,SEQ;"PRFX:",PTEDOSET     * write Onset Indicator
.
ENCDT150    MATCH     "1",MRCNDCID            * Using Diagnosis Cluster Id
            IF        @EQUAL
              MATCH     SP70,PTEDDCID         * Send 8 - unclustered if blank
              IF        @EQUAL
                WRITE     ENCFILEF,SEQ;"DXC:",EIGHT     
              ELSE
                WRITE     ENCFILEF,SEQ;"DXC:",PTEDDCID
              ENDIF
            ENDIF
.
            MATCH     SP30,PTEDDESC                                   *I-170698
            IF        !@EQUAL
              STRIP     PTEDDESC
              WRITE     ENCFILEF,SEQ;"TEXT:",PTEDDESC
            ENDIF
.
            MATCH     SP30,PTEDACDT
            IF        !@EQUAL
              UNPACK    PTEDACDT,CCENT,CYEAR,CMON,CDAY
              WRITE     ENCFILEF,SEQ;"DATE:",CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
            ENDIF
          ENDIF
.
          ADD       ONE,NOOFCODE
          GOTO      ENCDT100
.
. ----- Get the operation codes -----
.
ENCDT190  PACK      KEY13,AADMNO,EPSCD001,SP20
          CALL      RSPTECO1                * Position on & read a patient
ENCDT200  CALL      RKPTECO1                  episode operation file record
          BRANCH    OVRCD,ENCDT999
.
          MATCH     AADMNO,PTEOADMN
          GOTO      ENCDT999 IF NOT EQUAL   * Different admin no
.
          COMPARE   EPSCD001,PTEOEPNO
          GOTO      ENCDT999 IF NOT EQUAL   * Different Episode
.
          MATCH     "1",MRCNPIGP
          IF        @EQUAL
            MATCH     "I",PTEOTYPE
            GOTO      ENCDT300 IF EQUAL     * include prefixes of 'I'
          ENDIF
.
          MATCH     CMOPRT,PTEOTYPE
          GOTO      ENCDT200 IF NOT EQUAL   * Only want operations within hosp
.
ENCDT300  MATCH     PTCNEDRG,PTEOCODE
          GOTO      ENCDT200 IF EQUAL       * Ignore this code
.
. ----- ICD10 codes -----
.
ENCDT500  PACK      KEY9,PTEOCODE
          CALL      RDPTICO1                * Read an ICD operation file rec
          BRANCH    OVRCD,ENCDT200
          COMPARE   ONE,ICDRDVER            * ICD9?
          GOTO      ENCDT200 IF EQUAL       * Yes, skip this record
.
.                                           * "P." becomes "ACHI."    *C-190767
          MOVE      "ACHI",KEY4             * Default to a operation code prefix
          REP       ". - / ",PTEOCODE
          SQUEEZE   PTEOCODE
          PACK      PTEOCODE,PTEOCODE,SP9
          PACK      DIM20A,KEY4,DOT,PTEOCODE,SP10
ENCDT600  IF        PASSNUM = 2
            STRIP     DIM20A 
            MOVELPTR  DIM20A,LENGTH
            SFORMAT   VAR,LENGTH
            MOVE      DIM20A,VAR
            WRITE     ENCFILEF,SEQ;"COD:",VAR            * "ACHI.code"
.
ENCDT601    MATCH     SP30,PTEODESC                                   *I-170698
            IF        !@EQUAL
              STRIP     PTEODESC
              WRITE     ENCFILEF,SEQ;*+,"TEXT:",PTEODESC  * send modified Text
            ENDIF
ENCDT602    MATCH     SP8,PTEODATE                                    *I-170698
            IF        !@EQUAL
              UNPACK    PTEODATE,CCENT,CYEAR,CMON,CDAY
              PACK      KEY10,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
              REP       " 0",KEY10
              WRITE     ENCFILEF,SEQ;"DATE:",KEY10       * send Procedure Date
            ENDIF
ENCDT603    MATCH     SP10,PTEOCLIN
            IF        !@EQUAL
              STRIP     PTEOCLIN
              WRITE     ENCFILEF,SEQ;*+,"PHYS:",PTEOCLIN  * send Clinician    
            ENDIF
ENCDT604    MATCH     SP10,PTEOTYPE
            IF        !@EQUAL
              STRIP     PTEOTYPE
              WRITE     ENCFILEF,SEQ;*+,"PRFX:",PTEOTYPE  * send Operation type
            ENDIF
          ENDIF
.
          ADD       ONE,NOOFCODE
          GOTO      ENCDT200 
.
ENCDT999  RETURN
.
.------------------------------------------------------------
. Display Alert & Refresh Parent
.------------------------------------------------------------
WINRLD00  CALL      OPENHTML
          BRANCH    EXIT,WINRLD99
          WRITE     HTMLFILE;"<script type=#"text/javascript#"> {":
                             " alert(#"",WEBTITLE,"#");":
                             " self.close();":
                             " parent.location.reload()":
                             "}":
                             "</script>"
          CALL      CLOSHTML     * End of Document
WINRLD99  RETURN
.
.------------------------------------------------------------
. Write TurboGrouper codes  - trailing spaces removed
.------------------------------------------------------------
WTBGRP00  STRIP     XTRB0001  * Interface ID
          STRIP     XTRB0002  * Interface Version
          STRIP     XTRB0003  * PAS Version
          STRIP     XTRB0004  * Episode ID
          STRIP     XTRB0005  * TurboGrouper Command
          STRIP     XTRB0006  * PAS Command
          STRIP     XTRB0007  * Hospital Campus Code
          STRIP     XTRB0008  * State Identifier
          STRIP     XTRB0009  * Establishment Identifier
          STRIP     XTRB0010  * SA2  of Hospital
          STRIP     XTRB0011  * SLA  of Hospital
          STRIP     XTRB0012  * Postcode of Hospital
          STRIP     XTRB0013  * Remoteness of Hospital
          STRIP     XTRB0014  * Patient ID
          STRIP     XTRB0015  * Family Name
          STRIP     XTRB0016  * Given Names
          STRIP     XTRB0017  * Date of Birth
          STRIP     XTRB0018  * Sex
          STRIP     XTRB0019  * Indigenous Status
          STRIP     XTRB0020  * SA2  of Patient's Usual Residence
          STRIP     XTRB0021  * SLA  of Patient's Usual Residence
          STRIP     XTRB0022  * Postcode of Patient's Usual Residence
          STRIP     XTRB0023  * Remoteness of Patient's Usual Residence
          STRIP     XTRB0024  * Care Type
          STRIP     XTRB0025  * Age in Years
          STRIP     XTRB0026  * Age in Days
          STRIP     XTRB0027  * Admission Weight
          STRIP     XTRB0028  * Admission Date
          STRIP     XTRB0029  * Separation Date
          STRIP     XTRB0030  * Leave Days
          STRIP     XTRB0031  * Length of Stay
          STRIP     XTRB0032  * Non-acceptable Length of Stay
          STRIP     XTRB0033  * HITH  Days
          STRIP     XTRB0034  * Psychiatric Care Days
          STRIP     XTRB0035  * Qualified Days for Newborns
          STRIP     XTRB0036  * Mechanical Ventilation Hours
          STRIP     XTRB0037  * Intensive Care Unit Hours
          STRIP     XTRB0038  * Mental Health Legal Status
          STRIP     XTRB0039  * Urgency of Admission
          STRIP     XTRB0040  * Same Day Status
          STRIP     XTRB0041  * Short Stay Status
          STRIP     XTRB0042  * Separation Mode
          STRIP     XTRB0043  * Funding Source
          STRIP     XTRB0044  * ICD-10-AM Edition
          STRIP     XTRB0045  * ICD-10-AM principal diagnosis
.
          STRIP     XTRB0049  * ACHI Edition
.
          STRIP     XTRB0052  * TurboGrouper Version
          STRIP     XTRB0053  * AR-DRG Version
          STRIP     XTRB0054  * AR-DRG
          STRIP     XTRB0055  * VIC-DRG Version
          STRIP     XTRB0056  * VIC-DRG
          STRIP     XTRB0057  * MDC
          STRIP     XTRB0058  * GAGE
          STRIP     XTRB0059  * GSEX
          STRIP     XTRB0060  * GLOS
          STRIP     XTRB0061  * GSDF
          STRIP     XTRB0062  * GSEP
          STRIP     XTRB0063  * GADMW
          STRIP     XTRB0064  * GHMV
          STRIP     XTRB0065  * GMHLS
          STRIP     XTRB0066  * GURGADM
          STRIP     XTRB0067  * GPDX
.
          STRIP     XTRB0070  * GST
          STRIP     XTRB0071  * PCCL
          STRIP     XTRB0072  * CLOS
          STRIP     XTRB0073  * CAGED
          STRIP     XTRB0074  * CAGEY
          STRIP     XTRB0075  * CADMW
          STRIP     XTRB0076  * CSDF
          STRIP     XTRB0077  * CMHLS
          STRIP     XTRB0078  * CURGADM
          STRIP     XTRB0079  * ULOS
          STRIP     XTRB0080  * UAGED
          STRIP     XTRB0081  * UAGEY
          STRIP     XTRB0082  * UADMW
          STRIP     XTRB0083  * USDF
          STRIP     XTRB0084  * UMHLS
          STRIP     XTRB0085  * UURGADM
          STRIP     XTRB0086  * ECCS_RAW
          STRIP     XTRB0087  * ECCS_RND
          STRIP     XTRB0088  * NWAU Version
          STRIP     XTRB0089  * NWAU Status
          STRIP     XTRB0090  * NWAU Total
          STRIP     XTRB0091  * NWAU Price
          STRIP     XTRB0092  * NWAU Funding
          STRIP     XTRB0093  * WIES Version
          STRIP     XTRB0094  * WIES Status
          STRIP     XTRB0095  * WIES Total
          STRIP     XTRB0096  * WIES Price
          STRIP     XTRB0097  * WIES Funding
          STRIP     XTRB0098  * Non-invasive Ventilation Hours
          STRIP     XTRB0099  * Coronary Care Unit Hours
          STRIP     XTRB0100  * Admission Mode
          STRIP     XTRB0101  * Unplanned Theatre
          STRIP     XTRB0102  * Unplanned Intensive Care Unit
          STRIP     XTRB0103  * Diagnosis finish dates 1 to 200
          STRIP     XTRB0106  * PAS Export Date/Time
          STRIP     XTRB0107  * PAS User ID
          STRIP     XTRB0108  * PAS User Name
          STRIP     XTRB0115  * 
          STRIP     XTRB0116  * 
          STRIP     XTRB0117  * Health Fund ID
          STRIP     XTRB0118  * Health Fund Name
          STRIP     XTRB0119  * Health Fund AR-DRG Version
          STRIP     XTRB0120  * Contract Days
          STRIP     XTRB0121  * NWAU Base
          STRIP     XTRB0122  * Admission COunt
          STRIP     XTRB0123  * AHR Index Episode ID
          STRIP     XTRB0124  * NWAU AHR Category
          STRIP     XTRB0125  * NWAU AHR Complexity
          STRIP     XTRB0126  * Reasmission Episode ID List
          STRIP     XTRB0127  * Readmission NWAU Base List
          STRIP     XTRB0128  * Readmission NWAU AHR Category List
          STRIP     XTRB0129  * Readmission NWAU AHR Complexity List
          STRIP     XTRB0130  * HAC Version
          STRIP     XTRB0131  * AHR Version
          STRIP     XTRB0132  * ABF Type
          STRIP     XTRB0133  * CCHI Version
          STRIP     XTRB0134  * CCHI Tier
          STRIP     XTRB0135  * CCHI Status
          STRIP     XTRB0136  * CCHI Total
          STRIP     XTRB0137  * CCHI Price
          STRIP     XTRB0138  * CCHI Funding
          STRIP     XTRB0139  * Gender
          STRIP     XTRB0140  * NWAU Length of Stay (Average)
          STRIP     XTRB0141  * NWAU Length of Stay (Low)
          STRIP     XTRB0142  * NWAU Length of Stay (High)
          STRIP     XTRB0143  * NWAU Length of Stay (Adjusted)
          STRIP     XTRB0144  * WIES Length of Stay(Average)
          STRIP     XTRB0145  * WIES Length of Stay(Low)
          STRIP     XTRB0146  * WIES Length of Stay(High)
          STRIP     XTRB0147  * Charlson Score
          STRIP     XTRB0148  * Diagnosis Alert X 200
          STRIP     XTRB0149  * Intervention Alert X 200
          STRIP     XTRB0150  * Alert List
          STRIP     XTRB0151  * Alert Severity
          STRIP     XTRB0152  * Alert Score
          STRIP     XTRB0153  * Alert Reference
          STRIP     XTRB0155  * Intervention Cluster X 200
.
          MOVE      ONE,FORM3
          WHILE     FORM3 <= 200
            STRIP     XTRB46XX[FORM3]
            STRIP     XTRB47XX[FORM3]
            STRIP     XTRB48XX[FORM3]
            STRIP     XTRB48AD[FORM3]
            STRIP     XTRB50XX[FORM3]
            STRIP     XTRB51XX[FORM3]
            STRIP     XTRB51CL[FORM3]
            STRIP     XTRB68XX[FORM3]
            STRIP     XTRB69XX[FORM3]
            STRIP     XTRB104X[FORM3]
            STRIP     XTRB105X[FORM3]
            STRIP     XTRB109X[FORM3]
            STRIP     XTRB110X[FORM3]
            STRIP     XTRB111X[FORM3]
            STRIP     XTRB112X[FORM3]
            STRIP     XTRB113X[FORM3]
            STRIP     XTRB114X[FORM3]
            STRIP     XTRB154X[FORM3]
            ADD       ONE,FORM3
          DO
.
          WRITE     TURBOFL1,SEQ;*+,XTRB0001,TABDELIM,XTRB0002,TABDELIM:
                                 XTRB0003,TABDELIM,XTRB0005,TABDELIM:
                                 XTRB0006,TABDELIM,XTRB0004,TABDELIM:
                                 XTRB0007,TABDELIM,XTRB0008,TABDELIM:
                                 XTRB0009,TABDELIM,XTRB0010,TABDELIM:
                                 XTRB0011,TABDELIM,XTRB0012,TABDELIM:
                                 XTRB0013,TABDELIM,XTRB0014,TABDELIM:
                                 XTRB0015,TABDELIM,XTRB0016,TABDELIM:
                                 XTRB0017,TABDELIM,XTRB0018,TABDELIM:
                                 XTRB0019,TABDELIM,XTRB0020,TABDELIM:
                                 XTRB0021,TABDELIM,XTRB0022,TABDELIM:
                                 XTRB0023,TABDELIM,XTRB0024,TABDELIM:
                                 XTRB0025,TABDELIM,XTRB0026,TABDELIM:
                                 XTRB0027,TABDELIM,XTRB0028,TABDELIM:
                                 XTRB0029,TABDELIM,XTRB0030,TABDELIM:
                                 XTRB0031,TABDELIM,XTRB0032,TABDELIM:
                                 XTRB0033,TABDELIM,XTRB0034,TABDELIM:
                                 XTRB0035,TABDELIM,XTRB0036,TABDELIM:
                                 XTRB0037,TABDELIM,XTRB0038,TABDELIM:
                                 XTRB0039,TABDELIM,XTRB0040,TABDELIM:
                                 XTRB0041,TABDELIM,XTRB0042,TABDELIM:
                                 XTRB0043,TABDELIM,XTRB0044,TABDELIM:
                                 XTRB0045,TABDELIM;
.
          MOVE      TWO,FORM3
          WHILE     FORM3 <= 200
            WRITE     TURBOFL1,SEQ;*+,XTRB46XX[FORM3],COMMA;
            ADD       ONE,FORM3
          DO
          WRITE     TURBOFL1,SEQ;*+,TABDELIM;
.
          MOVE      ONE,FORM3
          WHILE     FORM3 <= 200
            WRITE     TURBOFL1,SEQ;*+,XTRB47XX[FORM3],COMMA;
            ADD       ONE,FORM3
          DO
          WRITE     TURBOFL1,SEQ;*+,TABDELIM;
.
          MOVE      ONE,FORM3
          WHILE     FORM3 <= 200
            WRITE     TURBOFL1,SEQ;*+,XTRB48XX[FORM3],COMMA;
            ADD       ONE,FORM3
          DO
          WRITE     TURBOFL1,SEQ;*+,TABDELIM;
.
          WRITE     TURBOFL1,SEQ;*+,XTRB0049,TABDELIM;
.
          MOVE      ONE,FORM3
          WHILE     FORM3 <= 200
            WRITE     TURBOFL1,SEQ;*+,XTRB50XX[FORM3],COMMA;
            ADD       ONE,FORM3
          DO
          WRITE     TURBOFL1,SEQ;*+,TABDELIM;
.
          MOVE      ONE,FORM3
          WHILE     FORM3 <= 200
            WRITE     TURBOFL1,SEQ;*+,XTRB51XX[FORM3],COMMA;
            ADD       ONE,FORM3
          DO
          WRITE     TURBOFL1,SEQ;*+,TABDELIM;
.
          WRITE     TURBOFL1,SEQ;*+,XTRB0052,TABDELIM:
                                 XTRB0053,TABDELIM,XTRB0054,TABDELIM:
                                 XTRB0055,TABDELIM,XTRB0056,TABDELIM:
                                 XTRB0057,TABDELIM,XTRB0058,TABDELIM:
                                 XTRB0059,TABDELIM,XTRB0060,TABDELIM:
                                 XTRB0061,TABDELIM,XTRB0062,TABDELIM:
                                 XTRB0063,TABDELIM,XTRB0064,TABDELIM:
                                 XTRB0065,TABDELIM,XTRB0066,TABDELIM:
                                 XTRB0067,TABDELIM;
.
          MOVE      ONE,FORM3
          WHILE     FORM3 <= 200
            WRITE     TURBOFL1,SEQ;*+,XTRB68XX[FORM3],COMMA;
            ADD       ONE,FORM3
          DO
          WRITE     TURBOFL1,SEQ;*+,TABDELIM;
.
          MOVE      ONE,FORM3
          WHILE     FORM3 <= 200
            WRITE     TURBOFL1,SEQ;*+,XTRB69XX[FORM3],COMMA;
            ADD       ONE,FORM3
          DO
          WRITE     TURBOFL1,SEQ;*+,TABDELIM;
.
          WRITE     TURBOFL1,SEQ;*+,XTRB0070,TABDELIM:
                                 XTRB0071,TABDELIM,XTRB0072,TABDELIM:
                                 XTRB0073,TABDELIM,XTRB0074,TABDELIM:
                                 XTRB0075,TABDELIM,XTRB0076,TABDELIM:
                                 XTRB0077,TABDELIM,XTRB0078,TABDELIM:
                                 XTRB0079,TABDELIM,XTRB0080,TABDELIM:
                                 XTRB0081,TABDELIM,XTRB0082,TABDELIM:
                                 XTRB0083,TABDELIM,XTRB0084,TABDELIM:
                                 XTRB0085,TABDELIM,XTRB0086,TABDELIM:
                                 XTRB0087,TABDELIM,XTRB0088,TABDELIM:
                                 XTRB0089,TABDELIM,XTRB0090,TABDELIM:
                                 XTRB0091,TABDELIM,XTRB0092,TABDELIM:
                                 XTRB0093,TABDELIM,XTRB0094,TABDELIM:
                                 XTRB0095,TABDELIM,XTRB0096,TABDELIM:
                                 XTRB0097,TABDELIM,XTRB0098,TABDELIM:
                                 XTRB0099,TABDELIM,XTRB0100,TABDELIM:
                                 XTRB0101,TABDELIM,XTRB0102,TABDELIM:
                                 XTRB0103,TABDELIM;

.
          MOVE      ONE,FORM3
          WHILE     FORM3 <= 200
            WRITE     TURBOFL1,SEQ;*+,XTRB104X[FORM3],COMMA;
            ADD       ONE,FORM3
          DO
.
          WRITE     TURBOFL1,SEQ;*+,TABDELIM;
.
          MOVE      ONE,FORM3
          WHILE     FORM3 <= 200
            WRITE     TURBOFL1,SEQ;*+,XTRB105X[FORM3],COMMA;
            ADD       ONE,FORM3
          DO
          WRITE     TURBOFL1,SEQ;*+,TABDELIM,XTRB0106,TABDELIM:
                                 XTRB0107,TABDELIM,XTRB0108,TABDELIM;
.
          MOVE      ONE,FORM3
          WHILE     FORM3 <= 200
            WRITE     TURBOFL1,SEQ;*+,XTRB109X[FORM3],COMMA;
            ADD       ONE,FORM3
          DO
          WRITE     TURBOFL1,SEQ;*+,TABDELIM;
.
          MOVE      ONE,FORM3
          WHILE     FORM3 <= 200
            WRITE     TURBOFL1,SEQ;*+,XTRB110X[FORM3],COMMA;
            ADD       ONE,FORM3
          DO
          WRITE     TURBOFL1,SEQ;*+,TABDELIM;
.
          MOVE      ONE,FORM3
          WHILE     FORM3 <= 200
            WRITE     TURBOFL1,SEQ;*+,XTRB111X[FORM3],COMMA;
            ADD       ONE,FORM3
          DO
          WRITE     TURBOFL1,SEQ;*+,TABDELIM;
.
          MOVE      ONE,FORM3
          WHILE     FORM3 <= 200
            WRITE     TURBOFL1,SEQ;*+,XTRB112X[FORM3],COMMA;
            ADD       ONE,FORM3
          DO
          WRITE     TURBOFL1,SEQ;*+,TABDELIM;
.
          MOVE      ONE,FORM3
          WHILE     FORM3 <= 200
            WRITE     TURBOFL1,SEQ;*+,XTRB113X[FORM3],COMMA;
            ADD       ONE,FORM3
          DO
          WRITE     TURBOFL1,SEQ;*+,TABDELIM;
.
          MOVE      ONE,FORM3
          WHILE     FORM3 <= 200
            WRITE     TURBOFL1,SEQ;*+,XTRB114X[FORM3],COMMA;
            ADD       ONE,FORM3
          DO
          WRITE     TURBOFL1,SEQ;*+,TABDELIM,XTRB0115:
                                    TABDELIM,XTRB0116:
                                    TABDELIM,XTRB0117:
                                    TABDELIM,XTRB0118:
                                    TABDELIM,XTRB0119:
                                    TABDELIM,XTRB0120:
                                    TABDELIM,XTRB0121:
                                    TABDELIM,XTRB0122:
                                    TABDELIM,XTRB0123:
                                    TABDELIM,XTRB0124:
                                    TABDELIM,XTRB0125:
                                    TABDELIM,XTRB0126:
                                    TABDELIM,XTRB0127:
                                    TABDELIM,XTRB0128:
                                    TABDELIM,XTRB0129:
                                    TABDELIM,XTRB0130:
                                    TABDELIM,XTRB0131:
                                    TABDELIM,XTRB0132:
                                    TABDELIM,XTRB0133:
                                    TABDELIM,XTRB0134:
                                    TABDELIM,XTRB0135:
                                    TABDELIM,XTRB0136:
                                    TABDELIM,XTRB0137:
                                    TABDELIM,XTRB0138:
                                    TABDELIM,XTRB0139:
                                    TABDELIM,XTRB0140:
                                    TABDELIM,XTRB0141:
                                    TABDELIM,XTRB0142:
                                    TABDELIM,XTRB0143:
                                    TABDELIM,XTRB0144:
                                    TABDELIM,XTRB0145:
                                    TABDELIM,XTRB0146:
                                    TABDELIM,XTRB0147:
                                    TABDELIM,XTRB0148:
                                    TABDELIM,XTRB0149:
                                    TABDELIM,XTRB0150:
                                    TABDELIM,XTRB0151:
                                    TABDELIM,XTRB0152:
                                    TABDELIM,XTRB0153;
.
          MOVE      ONE,FORM3
          WHILE     FORM3 <= 200
            WRITE     TURBOFL1,SEQ;*+,XTRB154X[FORM3],COMMA;
            ADD       ONE,FORM3
          DO
.
          WRITE     TURBOFL1,SEQ;*+,TABDELIM,XTRB0155:
                                    TABDELIM
.
WTBGRP99  RETURN
.
.------------------------------------------------------------
. Clear TurboGrouper variables
.------------------------------------------------------------
CLRTB000  PACK      XTRB0001,SP70
          PACK      XTRB0002,SP70
          PACK      XTRB0003,SP70
          PACK      XTRB0004,SP70
          PACK      XTRB0005,SP70
          PACK      XTRB0006,SP70
.
          PACK      XTRB0007,SP70
          PACK      XTRB0008,SP70
          PACK      XTRB0009,SP70
          PACK      XTRB0010,SP70
          PACK      XTRB0011,SP70
          PACK      XTRB0012,SP70
          PACK      XTRB0013,SP70
          PACK      XTRB0014,SP70
          PACK      XTRB0015,SP70
          PACK      XTRB0016,SP70
          PACK      XTRB0017,SP70
          PACK      XTRB0018,SP70
          PACK      XTRB0019,SP70
          PACK      XTRB0020,SP70
          PACK      XTRB0021,SP70
          PACK      XTRB0022,SP70
          PACK      XTRB0023,SP70
          PACK      XTRB0024,SP70
          PACK      XTRB0025,SP70
          PACK      XTRB0026,SP70
          PACK      XTRB0027,SP70
          PACK      XTRB0028,SP70
          PACK      XTRB0029,SP70
          PACK      XTRB0030,SP70
          PACK      XTRB0031,SP70
          PACK      XTRB0032,SP70
          PACK      XTRB0033,SP70
          PACK      XTRB0034,SP70
          PACK      XTRB0035,SP70
          PACK      XTRB0036,SP70
          PACK      XTRB0037,SP70
          PACK      XTRB0038,SP70
          PACK      XTRB0039,SP70
          PACK      XTRB0040,SP70
          PACK      XTRB0041,SP70
          PACK      XTRB0042,SP70
          PACK      XTRB0043,SP70
          PACK      XTRB0044,SP70
          PACK      XTRB0045,SP70
.
          PACK      XTRB46AA,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70
.
          PACK      XTRB47AA,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70
.
          PACK      XTRB48AA,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70
.
          PACK      XTRB0049,SP70
.
          PACK      XTRB50AA,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70
.
          PACK      XTRB51AA,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70
.
          PACK      XTRB0052,SP70
          PACK      XTRB0053,SP70
          PACK      XTRB0054,SP70
          PACK      XTRB0055,SP70
          PACK      XTRB0056,SP70
          PACK      XTRB0057,SP70
          PACK      XTRB0058,SP70
          PACK      XTRB0059,SP70
          PACK      XTRB0060,SP70
          PACK      XTRB0061,SP70
          PACK      XTRB0062,SP70
          PACK      XTRB0063,SP70
          PACK      XTRB0064,SP70
          PACK      XTRB0065,SP70
          PACK      XTRB0066,SP70
          PACK      XTRB0067,SP70
.
          PACK      XTRB68AA,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70
.
          PACK      XTRB69AA,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70
.
          PACK      XTRB0070,SP70
          PACK      XTRB0071,SP70
          PACK      XTRB0072,SP70
          PACK      XTRB0073,SP70
          PACK      XTRB0074,SP70
          PACK      XTRB0075,SP70
          PACK      XTRB0076,SP70
          PACK      XTRB0077,SP70
          PACK      XTRB0078,SP70
          PACK      XTRB0079,SP70
          PACK      XTRB0080,SP70
          PACK      XTRB0081,SP70
          PACK      XTRB0082,SP70
          PACK      XTRB0083,SP70
          PACK      XTRB0084,SP70
          PACK      XTRB0085,SP70
          PACK      XTRB0086,SP70
          PACK      XTRB0087,SP70
          PACK      XTRB0088,SP70
          PACK      XTRB0089,SP70
          PACK      XTRB0090,SP70
          PACK      XTRB0091,SP70
          PACK      XTRB0092,SP70
          PACK      XTRB0093,SP70
          PACK      XTRB0094,SP70
          PACK      XTRB0095,SP70
          PACK      XTRB0096,SP70
          PACK      XTRB0097,SP70
          PACK      XTRB0098,SP70
          PACK      XTRB0099,SP70
          PACK      XTRB0100,SP70
          PACK      XTRB0101,SP70
          PACK      XTRB0102,SP70
          PACK      XTRB0103,SP70
          PACK      XTRB104A,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70
          PACK      XTRB105A,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70
          PACK      XTRB0106,SP70
          PACK      XTRB0107,SP70
          PACK      XTRB0108,SP70,SP70
          PACK      XTRB109A,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70
          PACK      XTRB110A,SP70
          PACK      XTRB111A,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70
          PACK      XTRB112A,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70
          PACK      XTRB113A,SP70
          PACK      XTRB114A,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70:
                             SP70,SP70,SP70
.
          MOVE      ONE,FORM3
          WHILE     FORM3 <= 200
            MOVE      SP70,XTRB46XX[FORM3]
            MOVE      SP70,XTRB47XX[FORM3]
            MOVE      SP70,XTRB48XX[FORM3]
            MOVE      SP70,XTRB50XX[FORM3]
            MOVE      SP70,XTRB68XX[FORM3]
            MOVE      SP70,XTRB69XX[FORM3]
            MOVE      SP70,XTRB105X[FORM3]
            MOVE      SP70,XTRB109X[FORM3]
            MOVE      SP70,XTRB110X[FORM3]
            MOVE      SP70,XTRB111X[FORM3]
            MOVE      SP70,XTRB112X[FORM3]
            MOVE      SP70,XTRB113X[FORM3]
            MOVE      SP70,XTRB114X[FORM3]
            MOVE      SP70,XTRB154X[FORM3]
.
            IF        TURBOSAV=0
              MOVE      SP70,XTRB48AD[FORM3]     * Retain Previous details
              MOVE      SP70,XTRB51XX[FORM3]
              MOVE      SP70,XTRB51CL[FORM3]
              MOVE      SP70,XTRB104X[FORM3]
            ENDIF
.
            ADD       ONE,FORM3
          DO
.
          PACK      XTRB0115,SP70
          PACK      XTRB0116,SP70
          PACK      XTRB0117,SP70
          PACK      XTRB0118,SP70
          PACK      XTRB0119,SP70
          PACK      XTRB0120,SP70
          PACK      XTRB0121,SP70
          PACK      XTRB0122,SP70
          PACK      XTRB0123,SP70
          PACK      XTRB0124,SP70
          PACK      XTRB0125,SP70
          PACK      XTRB0126,SP70
          PACK      XTRB0127,SP70
          PACK      XTRB0128,SP70
          PACK      XTRB0129,SP70
          PACK      XTRB0130,SP70
          PACK      XTRB0131,SP70
          PACK      XTRB0132,SP70
          PACK      XTRB0133,SP70
          PACK      XTRB0134,SP70
          PACK      XTRB0135,SP70
          PACK      XTRB0136,SP70
          PACK      XTRB0137,SP70
          PACK      XTRB0138,SP70
          PACK      XTRB0139,SP70
          PACK      XTRB0140,SP70
          PACK      XTRB0141,SP70
          PACK      XTRB0142,SP70
          PACK      XTRB0143,SP70
          PACK      XTRB0144,SP70
          PACK      XTRB0145,SP70
          PACK      XTRB0146,SP70
          PACK      XTRB0147,SP70
          PACK      XTRB0148,SP70
          PACK      XTRB0149,SP70
          PACK      XTRB0150,SP70
          PACK      XTRB0151,SP70
          PACK      XTRB0152,SP70
          PACK      XTRB0153,SP70
          PACK      XTRB154A,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70,SP70
          PACK      XTRB0155,SP70
.
CLRTB999  RETURN
.
.------------------------------------------------------------
. Populate TurboGrouper variables
.------------------------------------------------------------
POPTB000  READ      CONTROLF,ZERO;*43,IBCNMHOS
          READ      CONTROLF,TEN;*54,CFILENO
          READ      CONTROLF,TEN3;*125,CHPPOST
          READ      CONTROLF,NINTY7;*244,MRCNRDSG
.
          MOVE      "dxc.webPAS",XTRB0001   * Interface ID
          MOVE      "1.6",XTRB0002          * Interface Version
          MOVE      VERSION,XTRB0003        * Pas Version
          MOVE      AADMNO,XTRB0004         * Episode ID
          MOVE      TURBOCMD,XTRB0005       * TurboGrouper Command
          MOVE      TURBOCMD,XTRB0006       * PAS Command
.
          IF        IBCNMHOS=1
            PACK      KEY3,PMVXMHOS,SP70
            CALL      RDPTHSP1
            IF        OVRCD<>1
              MOVE      PTHSHDPC,XTRB0007   * Hospital Campus Code
            ENDIF
          ELSE
            MOVE      CFILENO,XTRB0007      * Hospital Campus Code
          ENDIF
.
          MOVE      CHPPOST,XTRB0012        * Postcode of Hospital
          MOVE      AURNO,XTRB0014          * Patient ID
          MOVE      PSNAME,XTRB0015         * Family Name
          MOVE      PGNAME,XTRB0016         * Given Names
.
          UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,XTRB0017        * Date of Birth
.
          MOVE      PSEX,DSEXCHAR
          CALL      SEXDSC00                * get sex description (in IBACOMN)
          MOVE      DSEXNO,XTRB0018         * Sex
.
          MATCH     SP70,PSEX
          IF        !@EQUAL
            PACK      KEY5,ANSG,SP1,PSEX,SP70         * Use cat G ind 4
            CALL      RDCODE1                         * if populated
            IF        OVRCD<>1
              MATCH     SP70,TCINDC4
              IF        !@EQUAL
                MOVE      TCINDC4,XTRB0018  * Sex
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,PMVXABRG
          IF        !@EQUAL
            PACK      KEY5,ANSV,ANSA,PMVXABRG,SP70
            CALL      RDCODE1
            IF        OVRCD<>1
              MOVE      TCINDC4,XTRB0019    * Indigenous Status
            ENDIF
          ENDIF
. 
          MOVE      ABWGHT,XTRB0027         * Admission Weight
.
          UNPACK    ADATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,XTRB0028        * Admission Date
.
          UNPACK    DDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,XTRB0029        * Separation Date
.
          CALL      TOTLEV00                * Get Total Leave Days
          MOVE      DAYCOUNT,FORM4          * Total Leave is 4 digits
          MOVE      FORM4,XTRB0030          * Total Leave Days
.
          PACK      KEY8,AADMNO,SP70
          CALL      RDPTICU1                * Read the patient ICU file
          IF        OVRCD<>1
            MOVE      PTICUMEC,XTRB0036     * Mechanical Ventilation Hours
            MOVE      PTICUINT,XTRB0037     * Intensive Care Unit Hours
          ENDIF
.
          MATCH     SP70,PMVXMHLS
          IF        !@EQUAL
            PACK      KEY5,ANSL,ANSS,PMVXMHLS,SP70
            CALL      RDCODE1
            IF        OVRCD<>1
              MOVE      TCINDC11,XTRB0038   * Mental Health Legal Status
            ENDIF
          ENDIF
.
          MATCH     SP70,ACLSS
          IF        !@EQUAL
            PACK      KEY5,ANSP,SP1,ACLSS,SP70
            CALL      RDCODE1
            IF        OVRCD<>1
              MOVE      TCINDC14,XTRB0039   * Urgency of Admission
            ENDIF
          ENDIF
.
          MATCH     SP70,PMVXIDUS
          IF        !@EQUAL
            PACK      KEY5,ANSV,ANSI,PMVXIDUS,SP70
            CALL      RDCODE1
            IF        OVRCD<>1
              MOVE      TCINDC2,XTRB0040    * Same Day Status    
            ENDIF
          ENDIF
.
          IF        PTCNDRSM=1
            MATCH     SP70,DSTAT
            IF        !@EQUAL
              PACK      KEY5,ANSD,SP1,DSTAT,SP70
              CALL      RDCODE1
              IF        OVRCD<>1
                MOVE      TCINDC5,XTRB0042    * Separation Mode
              ENDIF
            ENDIF
          ELSE
            MATCH     SP70,DDEST
            IF        !@EQUAL
              PACK      KEY5,ANSD,ANSD,DDEST,SP70
              CALL      RDCODE1
              IF        OVRCD<>1
                MOVE      TCINDC5,XTRB0042    * Separation Mode
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,ACLAIM
          IF        !@EQUAL
            PACK      KEY5,ANSC,ANSL,ACLAIM,SP70
            CALL      RDCODE1
            IF        OVRCD<>1
              MOVE      PTCDUDF3,XTRB0043   * Funding Source
            ENDIF
          ENDIF
.
          CALL      TBDG0000                * Diagnosis
          CALL      TBOP0000                * Procedures
.
          PACK      KEY10,USERID,SP70
          CALL      RDWBSE1                 * Restore original user
          IF        OVRCD=1
            MOVE      USERID,WBSEUID
            MOVE      USERID,WBSELOGN
          ENDIF
.
          MOVE      SP70,XTRB0053           * AR-DRG Version
          MOVE      SP70,XTRB0054           * AR-DRG
          MOVE      SP70,XTRB0055           * VIC-DRG Version
          MOVE      SP70,XTRB0056           * VIC-DRG
          MOVE      SP70,XTRB0057           * MDC
          MOVE      SP70,XTRB0071           * PCCL
          MOVE      SP70,XTRB0086           * ECCS_RAW
.
          CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          CLOCK     TIME,CTIMEIS
          UNPACK    CURRDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PACK      XTRB0106,CPCDATE,SP1,CTIMEIS,SP70    * PAS Export Date/Time

          MOVE      WBSEUID,XTRB0107        * PAS User ID
          MOVE      WBSELOGN,XTRB0108       * PAS User Name
.
          MATCH     SP6,AFUNDH              * Admission Health Fund
          GOTO      POPTB100 IF EQUAL
.
          PACK      KEY14,AFUNDH,ZERO,ZERO,ZERO,ZERO,SP20
          CALL      RDFUND1                 * Read a health fund file record
          BRANCH    OVRCD,POPTB100
.
          MOVE      HCODE,XTRB0117          * Health Fund ID
          MOVE      HFNAME,XTRB0118         * Health Fund Name
.
          MATCH     "1",PTCNDGED       * Using DRG Effective Dates
          IF        !@EQUAL
            MOVE      PTHFGRPV,KEY3    * Health Fund Grouper Version
          ELSE
            CALL      GHFDRG00         * Get Health Fund Effectiv date DRG
            BRANCH    EXIT,POPTB100    * version. Returns KEY3
          ENDIF
.
          MATCH     "062",KEY3      
          IF        @EQUAL
            MOVE      "6.0x",XTRB0119   * DRG 6.2
            GOTO      POPTB100
          ENDIF
.
          MATCH     "1",KEY3                   * DRG 10 or higher
          IF        @EQUAL
            UNPACK    KEY3,KEY2,KEY1           * eg 100 become 10.0
            PACK      XTRB0119,KEY2,DOT,KEY1   * Health Fund AR-DRG Version
          ELSE
            UNPACK    KEY3,D1,DIM1,KEY1        * eg 042 become 4.2
            PACK      XTRB0119,DIM1,DOT,KEY1   * Health Fund AR-DRG Version
          ENDIF
.
. Populate NWAU fields if required
.
POPTB100  MATCH     "1",MRCNUNWA       * Grouping Products to return NWAU
          IF        @EQUAL
            MATCH     MRCNENWA,DDATE   * Use NWAU for discharges after date
            GOTO      POPTB999 IF LESS
          ELSE
            GOTO      POPTB999
          ENDIF
.
          MOVE      PPOST,XTRB0022           * Postcode of Usual Residence
.
          MATCH     SP70,ACARE
          IF        !@EQUAL
            PACK      KEY5,ANSC,ANSC,ACARE,SP70
            CALL      RDCODE1
            IF        OVRCD<>1
              MOVE      PTCDASC2,XTRB0024    * Care Type
            ENDIF
          ENDIF
.
          PACK      KEY8,AADMNO,SP70
          CALL      RDPTICU1                * Read the patient ICU file
          IF        OVRCD<>1
            MOVE      PTICUMEC,XTRB0036     * Mechanical Ventilation Hours
            ASSIGN    PTICHNCU+PTICUINT,F5
            MOVE      F5,XTRB0037           * ICU + NICU Hours
          ENDIF
.
          MATCH     SP70,ASRCE
          IF        !@EQUAL
            PACK      KEY5,ANSS,SP1,ASRCE,SP70
            CALL      RDCODE1
            IF        OVRCD<>1
              MOVE      TCINDC17,XTRB0100    * Admission Mode
            ENDIF
          ENDIF
.
          MATCH     SP70,PMVXUVTH
          IF        !@EQUAL
            PACK      KEY5,ANSK,ANSB,PMVXUVTH,SP70
            CALL      RDCODE1
            IF        OVRCD<>1
              MOVE      TCINDC1,XTRB0101    * Unplanned Theatre
            ENDIF
          ENDIF
.
          MOVE      "2",F1                         * Cat A Ind 3
          MOVE      "P",D1                         * Ind 3 value P
          MOVE      DDATE,TODATE                   * To discharge date
          PROC      PATADTDY
          MOVE      NBRDAYS,XTRB0034               * Psychiatric Care Days
.
          MOVE      "1",F1                         * Cat A HCP
          MOVE      "Q",D1                         * HCP value Q
          MOVE      DDATE,TODATE                   * To discharge date
          PROC      PATADTDY
          MOVE      NBRDAYS,XTRB0035               * Qualified Days for Newborns
.
POPTB999  RETURN
.
.------------------------------------------------------------
. Populate TurboGrouper diagnosis variables
.------------------------------------------------------------
TBDG0000  MOVE      ZERO,FORM3
          PACK      KEY13,AADMNO,EPSCD001,SP20
          CALL      RSPTECD1                * Position on & read a patient
TBDG1000  CALL      RKPTECD1                  episode disease file record
          BRANCH    OVRCD,TBDG9999
.
          MATCH     AADMNO,PTEDADMN
          GOTO      TBDG9999 IF NOT EQUAL   * Different admin no
.
          COMPARE   EPSCD001,PTEDEPNO
          GOTO      TBDG9999 IF NOT EQUAL   * Different episode no
.
. ----- Get ICD10 disease codes -----
.
          MOVE      PTEDCODE,DPCODE
          PACK      KEY9,DPCODE,SP70
          CALL      RDPTICD1                * Read ICD disease file
          BRANCH    OVRCD,TBDG1000
.
          MOVE      DPCODE,KEY9
.
          MATCH     "4",PT0DACRQ
          IF        @EQUAL
            REP       "M ",KEY9             * Remove M prefix from morphology
          ENDIF                             * codes
.
          REP       ". / - ",KEY9
          SQUEEZE   KEY9
          PACK      KEY9,KEY9,SP10
.
          ADD       ONE,FORM3
.
          IF        FORM3=1
            MOVE      KEY9,XTRB0045                   * Primary Diagnosis
          ELSE
            MOVE      KEY9,XTRB46XX[FORM3]            * Extra Diagnosis
          ENDIF
.
          MOVE      PTEDOSET,XTRB47XX[FORM3]          * COF
.
          PACK      XTRB68XX[FORM3],PTEDDRGD,SP1,PTEDCCCL  * GDX
.
          PACK      KEY10,PTEDUSID,SP70
          CALL      RDWBSE1                           * Read coded by user
          IF        OVRCD=1
            MOVE      PTEDUSID,WBSEUID
            MOVE      PTEDUSID,WBSELOGN
          ENDIF
.         
          PACK      XTRB109X[FORM3],WBSEUID,SP70      * Diagnosis Coder ID
          PACK      XTRB110X[FORM3],WBSELOGN,SP70     * Diagnosis Coder Name
          UNPACK    PTEDDTCD,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PACK      XTRB111X[FORM3],CPCDATE,SP1:
                    PTEDTIME,SP70                     * Diagnosis Coder Date
.
          MATCH     "1",MRCNDCID  * Using Diagnosis Cluster Id
          IF        @EQUAL
            PACK      XTRB154X[FORM3],PTEDDCID,SP70     * Diagnosis Cluster
          ENDIF
.
          IF        FORM3<200
            GOTO      TBDG1000
          ENDIF
.
TBDG9999  RETURN
.
.------------------------------------------------------------
. Populate TurboGrouper operation variables
.------------------------------------------------------------
TBOP0000  MOVE      ZERO,FORM3
          PACK      KEY13,AADMNO,EPSCD001,SP20
          CALL      RSPTECO1                * Position on & read a patient
TBOP1000  CALL      RKPTECO1                  episode operation file record
          BRANCH    OVRCD,TBOP9999
.
          MATCH     AADMNO,PTEOADMN
          GOTO      TBOP9999 IF NOT EQUAL   * Different admin no
.
          COMPARE   EPSCD001,PTEOEPNO
          GOTO      TBOP9999 IF NOT EQUAL   * Different episode no
.
          MATCH     PTCNEDRG,PTEOCODE
          GOTO      TBOP1000 IF EQUAL       * Exclude dummy cod
.
. ----- Get ICD10 operation codes -----
.
          MOVE      PTEOCODE,OPCODE
          PACK      KEY9,OPCODE
          CALL      RDPTICO1                * Read ICD operation file
          BRANCH    OVRCD,TBOP1000
.
          MOVE      OPCODE,KEY9
          REP       ". / - ",KEY9
          SQUEEZE   KEY9
.
          MATCH     "9017902",KEY9          * is this 9017902 ?
          IF        @EQUAL
            MOVE      "9203500",KEY9        *  yes, map to 9203500
          ENDIF
.
          MATCH     "9017905",KEY9          *  or is this 9017905 ?
          IF        @EQUAL
            MOVE      "9203500",KEY9        *  yes, map to 9203500
          ENDIF
.
          PACK      KEY9,KEY9,SP10
          ADD       ONE,FORM3
.
          MOVE      KEY9,XTRB50XX[FORM3]              * ACHI intervention codes 
.
          UNPACK    PTEODATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
.        * Intervention start dates and times
.
          PACK      XTRB51XX[FORM3],CPCDATE,SP1,PTEOSTTM,SP70
.
.        * Intervention end dates and time
.
          PACK      XTRB104X[FORM3],CPCDATE,SP1,PTEOEDTM,SP70
.
          MOVE      PTEODRGD,XTRB69XX[FORM3]          * GSRG
          MOVE      PTEOTYPE,XTRB105X[FORM3]          * Intervention flags
.
          PACK      KEY10,PTEOUSID,SP70
          CALL      RDWBSE1                           * Read coded by user
          IF        OVRCD=1
            MOVE      PTEOUSID,WBSEUID
            MOVE      PTEOUSID,WBSELOGN
          ENDIF
.
          PACK      XTRB112X[FORM3],WBSEUID,SP70      * Diagnosis Coder ID
          PACK      XTRB113X[FORM3],WBSELOGN,SP70     * Diagnosis Coder Name
          UNPACK    PTEODTCD,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PACK      XTRB114X[FORM3],CPCDATE,SP1:
                    PTEOTIME,SP70                     * Diagnosis Coder Date
.
          IF        FORM3<200
            GOTO      TBOP1000
          ENDIF
.
TBOP9999  RETURN
.
.------------------------------------------------------------
. Load TurboGrouper output variables
.------------------------------------------------------------
LODTB000  MOVE      ZERO,TURBOSAV           * Don't save previous details
          CALL      CLRTB000                * Clear TurboGrouper variables
.
          PACK      FILENAM3,ANST,ANSU,ANSR,ANSI,ANSM,ANSP,PORT,SP70
          REP       " 0",FILENAM3
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TURBOFL2,FILENAM3       * open the TurboGrouper file
          TRAPCLR   IO
          BRANCH    OVRCD,LODTB900
.
          MOVE      ZERO,LOADCNT            * returned lines from TurboGrouper
.
LODTB100  MOVE      ONE,TURBOSAV            * Retain saved previous details
          CALL      CLRTB000                * Clear TurboGrouper variables
.
          READ      TURBOFL2,SEQ;XTRB0001,XTRB0002,XTRB0003,XTRB0005:
                                 XTRB0006,XTRB0004,XTRB0007,XTRB0008:
                                 XTRB0009,XTRB0010,XTRB0011,XTRB0012:
                                 XTRB0013,XTRB0014,XTRB0015,XTRB0016:
                                 XTRB0017,XTRB0018,XTRB0019,XTRB0020:
                                 XTRB0021,XTRB0022,XTRB0023,XTRB0024:
                                 XTRB0025,XTRB0026,XTRB0027,XTRB0028:
                                 XTRB0029,XTRB0030,XTRB0031,XTRB0032:
                                 XTRB0033,XTRB0034,XTRB0035,XTRB0036:
                                 XTRB0037,XTRB0038,XTRB0039,XTRB0040:
                                 XTRB0041,XTRB0042,XTRB0043,XTRB0044:
                                 XTRB0045,XTRB46AA,XTRB47AA,XTRB48AA:
                                 XTRB0049,XTRB50AA,XTRB51AA,XTRB0052:
                                 XTRB0053,XTRB0054,XTRB0055,XTRB0056:
                                 XTRB0057,XTRB0058,XTRB0059,XTRB0060:
                                 XTRB0061,XTRB0062,XTRB0063,XTRB0064:
                                 XTRB0065,XTRB0066,XTRB0067,XTRB68AA:
                                 XTRB69AA,XTRB0070,XTRB0071,XTRB0072:
                                 XTRB0073,XTRB0074,XTRB0075,XTRB0076:
                                 XTRB0077,XTRB0078,XTRB0079,XTRB0080:
                                 XTRB0081,XTRB0082,XTRB0083,XTRB0084:
                                 XTRB0085,XTRB0086,XTRB0087,XTRB0088:
                                 XTRB0089,XTRB0090,XTRB0091,XTRB0092:
                                 XTRB0093,XTRB0094,XTRB0095,XTRB0096:
                                 XTRB0097,XTRB0098,XTRB0099,XTRB0100:
                                 XTRB0101,XTRB0102,XTRB0103,XTRB104A:
                                 XTRB105A,XTRB0106,XTRB0107,XTRB0108:
                                 XTRB109A,XTRB110A,XTRB111A,XTRB112A:
                                 XTRB113A,XTRB114A,XTRB0115,XTRB0116:
                                 XTRB0117,XTRB0118,XTRB0119,XTRB0120:
                                 XTRB0121,XTRB0122,XTRB0123,XTRB0124:
                                 XTRB0125,XTRB0126,XTRB0127,XTRB0128:
                                 XTRB0129,XTRB0130,XTRB0131,XTRB0132:
                                 XTRB0133,XTRB0134,XTRB0135,XTRB0136:
                                 XTRB0137,XTRB0138,XTRB0139,XTRB0140:
                                 XTRB0141,XTRB0142,XTRB0143,XTRB0144:
                                 XTRB0145,XTRB0146,XTRB0147,XTRB0148:
                                 XTRB0149,XTRB0150,XTRB0151,XTRB0152:
                                 XTRB0153,XTRB154A,XTRB0155
          GOTO      LODTB930 IF OVER
.
          ADD       ONE,LOADCNT             * returned codes exist
.
          RJUSTIFY  XTRB0004
          MATCH     DAADMNO,XTRB0004        * Episode ID
          GOTO      LODTB910 IF NOT EQUAL
.
          MATCH     ADMISSNO,XTRB0004       * Episode ID
          GOTO      LODTB910 IF NOT EQUAL
.
          RJUSTIFY  XTRB0014
          MATCH     AURNO,XTRB0014          * Patient ID
          GOTO      LODTB920 IF NOT EQUAL
.
          MATCH     TURBOCMD,XTRB0005      * TurboGrouper Command
          GOTO      LODTB940 IF NOT EQUAL
.
          MATCH     TURBOCMD,XTRB0006      * PAS Command
          GOTO      LODTB945 IF NOT EQUAL
.
          CALL      LODDG000                * diags/morph codes (X 199)
          CALL      LODCF000                * COF (X 200)
          CALL      LODDD000                * Diagnosis dates (X 200)
          CALL      LODGX000                * GDX (X 200)
          CALL      LODDC000                * diagnosis coded by (X 200)
          CALL      LODDA000                * diagnosis coded date (X 200)
          CALL      LODCL000                * diagnosis cluster id (X 200)
.
          CALL      LODIC000                * ACHI Intervention Codes (X 200)
          CALL      LODID000                * Intervention dates (X 200)
          CALL      LODGS000                * GSRG (X 200)
          CALL      LODIP000                * Intervention flags (X 200)
          CALL      LODIE000                * Intervention end dates (X 200)
          CALL      LODIU000                * Intervention coded by (X 200)
          CALL      LODIA000                * Intervention coded date (X 200)
.
          IF        LOADCNT=1
            CALL      LODOD000              * Load current diagnosis/operations
            CALL      DELTB000              * Delete exisiting coding
          ENDIF
.
          CALL      TBLDRG00                * Load TurboGrouper DRG version ?
          BRANCH    EXIT,LODTB100
.
          CALL      WRTDG000                * Write patecdaf
          CALL      WRTOP000                * Write patecoaf 
          CALL      WRPGR000                * Write patpgraf/patmi1af/patdschf
          CALL      WRECM000                * Write to patecmaf
          CALL      WRTIC000                * Write to paticuaf
.
          GOTO      LODTB100
.
LODTB900  MOVE      "Error: Output from TurboGrouper does not exist.",WEBTITLE
          SCAN      "WEB",PRGID
          IF        @EQUAL
            CALL      WINRLD00
          ELSE
            PRINT     *23,WEBTITLE
          ENDIF
          MOVE      ONE,EXIT
          RESET     PRGID
          GOTO      LODTB990
.
LODTB910  CLEAR     WEBTITLE
          APPEND    "Error: Patient Episode returned from ",WEBTITLE
          APPEND    "TurboGrouper different.",WEBTITLE
          RESET     WEBTITLE
          SCAN      "WEB",PRGID
          IF        @EQUAL
            CALL      WINRLD00
          ELSE
            PRINT     *23,WEBTITLE
          ENDIF
          MOVE      ONE,EXIT
          RESET     PRGID
          GOTO      LODTB990
.
LODTB920  CLEAR     WEBTITLE
          APPEND    "Error: Patient U/R returned from ",WEBTITLE
          APPEND    "TurboGrouper different.",WEBTITLE
          RESET     WEBTITLE
          SCAN      "WEB",PRGID
          IF        @EQUAL
            CALL      WINRLD00
          ELSE
            PRINT     *23,WEBTITLE
          ENDIF
          MOVE      ONE,EXIT
          RESET     PRGID
          GOTO      LODTB990
.
LODTB930  COMPARE   ZERO,LOADCNT            *  Any codes returned
          GOTO      LODTB980 IF NOT EQUAL
.
          MOVE      "Error: No Coding returned from TurboGrouper.",WEBTITLE
          SCAN      "WEB",PRGID
          IF        @EQUAL
            CALL      WINRLD00
          ELSE
            PRINT     *23,WEBTITLE
          ENDIF
          MOVE      ONE,EXIT
          RESET     PRGID
          GOTO      LODTB990
.
LODTB940  MOVE     "TurboGrouper command mismatch.",WEBTITLE
          SCAN      "WEB",PRGID
          IF        @EQUAL
            CALL      WINRLD00
          ELSE
            PRINT     *23,WEBTITLE
          ENDIF
          MOVE      ONE,EXIT
          RESET     PRGID
          GOTO      LODTB990
.
LODTB945  MOVE     "TurboGrouper PAS command mismatch.",WEBTITLE
          SCAN      "WEB",PRGID
          IF        @EQUAL
            CALL      WINRLD00
          ELSE
            PRINT     *23,WEBTITLE
          ENDIF
          MOVE      ONE,EXIT
          RESET     PRGID
          GOTO      LODTB990
.
LODTB980  MOVE      ZERO,EXIT
          GOTO      LODTB990
.
LODTB990  CLOSE     TURBOFL2,DELETE
.
LODTB999  RETURN
.
.------------------------------------------------------------
. Load exisiting operation and diagnosis date/times
.------------------------------------------------------------
LODOD000  MOVE      ZERO,FORM3
.
LODOD100  ADD       ONE,FORM3
          IF        FORM3 > 200
             GOTO     LODOD500              * Now check operations
          ENDIF
.
          IF        FORM3=1
            MOVE      XTRB0045,ICDCODE         * Principal diagnosis
          ELSE
            MOVE      XTRB46XX[FORM3],ICDCODE  * Secondary diags/morph
          ENDIF
.
          MATCH     SP70,ICDCODE
          GOTO      LODOD100 IF EQUAL
          GOTO      LODOD100 IF EOS
.
          TYPE      ICDCODE
          IF        @EQUAL
            UNPACK    ICDCODE,KEY4,KEY5          * Morphology
            PACK      KEY9,ANSM,KEY4,SLASH,KEY5
          ELSE
            UNPACK    ICDCODE,KEY3,KEY6          * Diagnosis
            MATCH     SP6,KEY6
            IF        @EQUAL
              PACK      KEY9,KEY3,SP70
            ELSE
              PACK      KEY9,KEY3,DOT,KEY6
            ENDIF
          ENDIF
.
          PACK      KEY22,ADMISSNO,KEY9,SP70
          CALL      RSPTECD5
          CALL      RKPTECD5
          BRANCH    OVRCD,LODOD100
.
          MATCH     ADMISSNO,DPTEDADM
          GOTO      LODOD100 IF NOT EQUAL
.
          MATCH     PTEDCODE,KEY9                * Diagnosis
          GOTO      LODOD100 IF NOT EQUAL
.
          MOVE      PTEDACDT,XTRB48AD[FORM3]     * Accident date
          GOTO      LODOD100
.
LODOD500  MOVE      ZERO,FORM3
.
LODOD600  ADD       ONE,FORM3
          IF        FORM3 > 200
             GOTO     LODOD999
          ENDIF
.
          MOVE      XTRB50XX[FORM3],ICDCODE      * ACHI intervention code
.
          MATCH     SP70,ICDCODE
          GOTO      LODOD600 IF EQUAL
          GOTO      LODOD600 IF EOS
.
          UNPACK    ICDCODE,KEY5,KEY4
          MOVE      "-",KEY1
          PACK      KEY9,KEY5,KEY1,KEY4,SP70
.
          PACK      KEY25,KEY9,ADMISSNO,SP70
          CALL      RSPTECO3
LODOD650  CALL      RKPTECO3
          BRANCH    OVRCD,LODOD700
.
          MATCH     KEY9,PTEOCODE
          GOTO      LODOD700 IF NOT EQUAL
.
          MATCH     ADMISSNO,DPTEOADM
          GOTO      LODOD700 IF NOT EQUAL
.
          MATCH     SP70,XTRB51XX[FORM3]
          IF        @EQUAL|@EOS
            UNPACK    PTEODATE,D4,DIM2,D2      * Intervention dates 1 to 200
            PACK      XTRB51XX[FORM3],D2,SLASH,DIM2,SLASH,D4,SP1,PTEOSTTM,SP70
            PACK      XTRB104X[FORM3],D2,SLASH,DIM2,SLASH,D4,SP1,PTEOEDTM,SP70
.
            MOVE      PTEOCLIN,XTRB51CL[FORM3]   * Intervention Clinician
            GOTO      LODOD600
          ENDIF
.
          MOVE      PTEOCLIN,XTRB51CL[FORM3]   * Intervention Clinician
.
          MATCH     SP70,PTEODATE                * Check same operation date
          IF        !@EQUAL
            UNPACK    PTEODATE,D4,DIM2,D2      * Intervention dates 1 to 200
            PACK      KEY16,D2,SLASH,DIM2,SLASH,D4,SP1,PTEOSTTM,SP70 dd/mm/ccyy
.
            MATCH     KEY16,XTRB51XX[FORM3]
            IF        @EQUAL
              MOVE      PTEOCLIN,XTRB51CL[FORM3]   * Intervention Clinician
              GOTO      LODOD600
            ENDIF
          ENDIF
.
          GOTO      LODOD650
.
LODOD700  PACK      KEY11,ADMISSNO,SP70
          CALL      RDSMMBS1                * Position at start of file
LODOD750  CALL      RDKMMBS1                * Get the earliest
          BRANCH    OVRCD,LODOD800
.
          MATCH     ADMISSNO,DMMADMN         * Same admission
          GOTO      LODOD800 IF NOT EQUAL
.
          MATCH     SP70,XTRB51XX[FORM3]
          IF        @EQUAL|@EOS
            UNPACK    MMDATE,D4,DIM2,D2        * Intervention dates 1 to 200
            PACK      XTRB51XX[FORM3],D2,SLASH,DIM2,SLASH,D4,SP1,MMSTIM,SP70
            PACK      XTRB104X[FORM3],D2,SLASH,DIM2,SLASH,D4,SP1,MMETIM,SP70
            GOTO      LODOD600
          ENDIF
.
          MATCH     KEY5,MMCODE             * MBS items have no dash
          GOTO      LODOD750 IF NOT EQUAL
.
          UNPACK    XTRB51XX[FORM3],KEY11,KEY5        * Intervention dates
.
          MATCH     SP70,KEY5                         * Blank start time
          GOTO      LODOD600 IF NOT EQUAL
.
          UNPACK    KEY11,D2,D1,DIM2,D1,D4
          PACK      KEY8,D4,DIM2,D2,SP70

          MATCH     MMDATE,KEY8
          IF        @EQUAL
            UNPACK    MMDATE,D4,DIM2,D2        * Intervention dates 1 to 200
            PACK      XTRB51XX[FORM3],D2,SLASH,DIM2,SLASH,D4,SP1,MMSTIM,SP70
            PACK      XTRB104X[FORM3],D2,SLASH,DIM2,SLASH,D4,SP1,MMETIM,SP70
            GOTO      LODOD600
          ENDIF
.
          GOTO      LODOD750                * Loop until end of admission
.
LODOD800  MATCH     SP70,XTRB51XX[FORM3]
          IF        @EQUAL|@EOS
            MOVE      DDATE,KEY8
            MATCH     "1",MRCNOPDT          * change default to Admiss.Date ?
            IF        @EQUAL
              MOVE      ADATE,KEY8
            ENDIF
            MATCH     "2",MRCNOPDT          * change default to "No def Date"
            IF        @EQUAL
              MOVE      SP8,KEY8
            ENDIF
            MATCH     SP70,KEY8
            IF        !@EQUAL
              MOVE      "00:00:00",D8
              UNPACK    KEY8,D4,DIM2,D2        * Intervention dates 1 to 200
              PACK      XTRB51XX[FORM3],D2,SLASH,DIM2,SLASH,D4,SP1,D8,SP70
              PACK      XTRB104X[FORM3],D2,SLASH,DIM2,SLASH,D4,SP1,D8,SP70
            ENDIF
          ENDIF
.
          GOTO      LODOD600
.
LODOD999  RETURN
.
.------------------------------------------------------------
. Load TurboGrouper diagnosis variables X 199 comma delimited
.------------------------------------------------------------
LODDG000  MOVE      TWO,F3
          PACK      XTRB46AA,XTRB46AA,COMMA,SP70 * diags/morph codes (X 199)
          PACK      VAR,SP70,SP70
.
LODDG100  SCAN      COMMA,XTRB46AA
          GOTO      LODDG999 IF NOT EQUAL
.
          MOVEFPTR  XTRB46AA,LENGTH
          SUB       ONE,LENGTH
          IF        LENGTH>0
            RESET     XTRB46AA
            SFORMAT   VAR,LENGTH
            MOVE      XTRB46AA,VAR
.
            MOVE      VAR,XTRB46XX[F3] 
.
            SFORMAT   VAR,127
            ADD       ONE,LENGTH
            RESET     XTRB46AA,LENGTH
            SUB       ONE,LENGTH
          ENDIF
          UNPACK    XTRB46AA,KEY1,XTRB46AA
          ADD       ONE,F3
          IF        F3<=200
            GOTO      LODDG100
          ENDIF
.
LODDG9999 RETURN
.
.------------------------------------------------------------
. Load TurboGrouper COF variables X 200 comma delimited
.------------------------------------------------------------
LODCF000  MOVE      ONE,F3
          PACK      XTRB47AA,XTRB47AA,COMMA,SP70 * COF (X 200)
          PACK      VAR,SP70,SP70
.
LODCF100  SCAN      COMMA,XTRB47AA
          GOTO      LODCF999 IF NOT EQUAL
.
          MOVEFPTR  XTRB47AA,LENGTH
          SUB       ONE,LENGTH
          IF        LENGTH>0
            RESET     XTRB47AA
            SFORMAT   VAR,LENGTH
            MOVE      XTRB47AA,VAR
.
            MOVE      VAR,XTRB47XX[F3] 
.
            SFORMAT   VAR,127
            ADD       ONE,LENGTH
            RESET     XTRB47AA,LENGTH
            SUB       ONE,LENGTH
          ENDIF
          UNPACK    XTRB47AA,KEY1,XTRB47AA
          ADD       ONE,F3
          IF        F3<=200
            GOTO      LODCF100
          ENDIF
.
LODCF9999 RETURN
.
.------------------------------------------------------------
. Load TurboGrouper Diagnosis date variables X 200 comma delimited
.------------------------------------------------------------
LODDD000  MOVE      ONE,F3
          PACK      XTRB48AA,XTRB48AA,COMMA,SP70 * Diagnosis dates (X 200)
          PACK      VAR,SP70,SP70
.
LODDD100  SCAN      COMMA,XTRB48AA
          GOTO      LODDD999 IF NOT EQUAL
.
          MOVEFPTR  XTRB48AA,LENGTH
          SUB       ONE,LENGTH
          IF        LENGTH>0
            RESET     XTRB48AA
            SFORMAT   VAR,LENGTH
            MOVE      XTRB48AA,VAR
.
            MOVE      VAR,XTRB48XX[F3]
.
            SFORMAT   VAR,127
            ADD       ONE,LENGTH
            RESET     XTRB48AA,LENGTH
            SUB       ONE,LENGTH
          ENDIF
          UNPACK    XTRB48AA,KEY1,XTRB48AA
          ADD       ONE,F3
          IF        F3<=200
            GOTO      LODDD100
          ENDIF
.
LODDD999  RETURN
.
.-------------------------------------------------------------------------
. Load TurboGrouper ACHI Intervention Codes variables X 200 comma delimited
.-------------------------------------------------------------------------
LODIC000  MOVE      ONE,F3
          PACK      XTRB50AA,XTRB50AA,COMMA,SP70 * ACHI Intervention Codes(X200)
          PACK      VAR,SP70,SP70
.
LODIC100  SCAN      COMMA,XTRB50AA
          GOTO      LODIC999 IF NOT EQUAL
.
          MOVEFPTR  XTRB50AA,LENGTH
          SUB       ONE,LENGTH
          IF        LENGTH>0
            RESET     XTRB50AA
            SFORMAT   VAR,LENGTH
            MOVE      XTRB50AA,VAR
.
            MOVE      VAR,XTRB50XX[F3]
.
            SFORMAT   VAR,127
            ADD       ONE,LENGTH
            RESET     XTRB50AA,LENGTH
            SUB       ONE,LENGTH
          ENDIF
          UNPACK    XTRB50AA,KEY1,XTRB50AA
          ADD       ONE,F3
          IF        F3<=200
            GOTO      LODIC100
          ENDIF
.
LODIC999  RETURN
.
.-------------------------------------------------------------------------
. Load TurboGrouper Intervention Dates variables X 200 comma delimited
.-------------------------------------------------------------------------
LODID000  MOVE      ONE,F3
          PACK      XTRB51AA,XTRB51AA,COMMA,SP70 * Intervention Dates (X 200)
          PACK      VAR,SP70,SP70
.
LODID100  SCAN      COMMA,XTRB51AA
          GOTO      LODID999 IF NOT EQUAL
.
          MOVEFPTR  XTRB51AA,LENGTH
          SUB       ONE,LENGTH
          IF        LENGTH>0
            RESET     XTRB51AA
            SFORMAT   VAR,LENGTH
            MOVE      XTRB51AA,VAR
.
            MOVE      VAR,XTRB51XX[F3]
.
            SFORMAT   VAR,127
            ADD       ONE,LENGTH
            RESET     XTRB51AA,LENGTH
            SUB       ONE,LENGTH
          ENDIF
          UNPACK    XTRB51AA,KEY1,XTRB51AA
          ADD       ONE,F3
          IF        F3<=200
            GOTO      LODID100
          ENDIF
.
LODID999  RETURN
.
.
.-------------------------------------------------------------------------
. Load TurboGrouper Intervention End Dates variables X 200 comma delimited
.-------------------------------------------------------------------------
LODIE000  MOVE      ONE,F3
          PACK      XTRB104A,XTRB104A,COMMA,SP70 * Intervention Dates (X 200)
          PACK      VAR,SP70,SP70
.
LODIE100  SCAN      COMMA,XTRB104A
          GOTO      LODIE999 IF NOT EQUAL
.
          MOVEFPTR  XTRB104A,LENGTH
          SUB       ONE,LENGTH
          IF        LENGTH>0
            RESET     XTRB104A
            SFORMAT   VAR,LENGTH
            MOVE      XTRB104A,VAR
.
            MOVE      VAR,XTRB104X[F3]
.
            SFORMAT   VAR,127
            ADD       ONE,LENGTH
            RESET     XTRB104A,LENGTH
            SUB       ONE,LENGTH
          ENDIF
          UNPACK    XTRB104A,KEY1,XTRB104A
          ADD       ONE,F3
          IF        F3<=200
            GOTO      LODIE100
          ENDIF
.
LODIE999  RETURN
.
.-------------------------------------------------------------------------
. Load TurboGrouper Intervention flags X 200 comma delimited
.-------------------------------------------------------------------------
LODIP000  MOVE      ONE,F3
          PACK      XTRB105A,XTRB105A,COMMA,SP70 * Intervention flags (X 200)
          PACK      VAR,SP70,SP70
.
LODIP100  SCAN      COMMA,XTRB105A
          GOTO      LODIP999 IF NOT EQUAL
.
          MOVEFPTR  XTRB105A,LENGTH
          SUB       ONE,LENGTH
          IF        LENGTH>0
            RESET     XTRB105A
            SFORMAT   VAR,LENGTH
            MOVE      XTRB105A,VAR
.
            MOVE      VAR,XTRB105X[F3]
.
            SFORMAT   VAR,127
            ADD       ONE,LENGTH
            RESET     XTRB105A,LENGTH
            SUB       ONE,LENGTH
          ENDIF
          UNPACK    XTRB105A,KEY1,XTRB105A
          ADD       ONE,F3
          IF        F3<=200
            GOTO      LODIP100
          ENDIF
.
LODIP999  RETURN
.
.-------------------------------------------------------------------------
. Load TurboGrouper GDX variables X 200 comma delimited
.-------------------------------------------------------------------------
LODGX000  MOVE      ONE,F3
          PACK      XTRB68AA,XTRB68AA,COMMA,SP70 * GDX (X 200)
          PACK      VAR,SP70,SP70
.
LODGX100  SCAN      COMMA,XTRB68AA
          GOTO      LODGX999 IF NOT EQUAL
.
          MOVEFPTR  XTRB68AA,LENGTH
          SUB       ONE,LENGTH
          IF        LENGTH>0
            RESET     XTRB68AA
            SFORMAT   VAR,LENGTH
            MOVE      XTRB68AA,VAR
.
            MOVE      VAR,XTRB68XX[F3]
.
            SFORMAT   VAR,127
            ADD       ONE,LENGTH
            RESET     XTRB68AA,LENGTH
            SUB       ONE,LENGTH
          ENDIF
          UNPACK    XTRB68AA,KEY1,XTRB68AA
          ADD       ONE,F3
          IF        F3<=200
            GOTO      LODGX100
          ENDIF
.
LODGX999  RETURN
.
.-------------------------------------------------------------------------
. Load TurboGrouper diagnosis coded by variables X 200 comma delimited
.-------------------------------------------------------------------------
LODDC000  MOVE      ONE,F3
          PACK      XTRB109A,XTRB109A,COMMA,SP70 * Diag coded by (X 200)
          PACK      VAR,SP70,SP70
.
LODDC100  SCAN      COMMA,XTRB109A
          GOTO      LODDC999 IF NOT EQUAL
.
          MOVEFPTR  XTRB109A,LENGTH
          SUB       ONE,LENGTH
          IF        LENGTH>0
            RESET     XTRB109A
            SFORMAT   VAR,LENGTH
            MOVE      XTRB109A,VAR
.
            MOVE      VAR,XTRB109X[F3]
.
            SFORMAT   VAR,127
            ADD       ONE,LENGTH
            RESET     XTRB109A,LENGTH
            SUB       ONE,LENGTH
          ENDIF
          UNPACK    XTRB109A,KEY1,XTRB109A
          ADD       ONE,F3
          IF        F3<=200
            GOTO      LODDC100
          ENDIF
.
LODDC999  RETURN
.
.-------------------------------------------------------------------------
. Load TurboGrouper diagnosis coded date variables X 200 comma delimited
.-------------------------------------------------------------------------
LODDA000  MOVE      ONE,F3
          PACK      XTRB111A,XTRB111A,COMMA,SP70 * Diag coded date (X 200)
          PACK      VAR,SP70,SP70
.
LODDA100  SCAN      COMMA,XTRB111A
          GOTO      LODDA999 IF NOT EQUAL
.
          MOVEFPTR  XTRB111A,LENGTH
          SUB       ONE,LENGTH
          IF        LENGTH>0
            RESET     XTRB111A
            SFORMAT   VAR,LENGTH
            MOVE      XTRB111A,VAR
.
            MOVE      VAR,XTRB111X[F3]
.
            SFORMAT   VAR,127
            ADD       ONE,LENGTH
            RESET     XTRB111A,LENGTH
            SUB       ONE,LENGTH
          ENDIF
          UNPACK    XTRB111A,KEY1,XTRB111A
          ADD       ONE,F3
          IF        F3<=200
            GOTO      LODDA100
          ENDIF
.
LODDA999  RETURN
.
.-------------------------------------------------------------------------
. Load TurboGrouper cluster id variables X 200 comma delimited
.-------------------------------------------------------------------------
LODCL000  MOVE      ONE,F3
          PACK      XTRB154A,XTRB154A,COMMA,SP70 * Diag cluster id (X 200)
          PACK      VAR,SP70,SP70
.
LODCL100  SCAN      COMMA,XTRB154A
          GOTO      LODCL999 IF NOT EQUAL
.
          MOVEFPTR  XTRB154A,LENGTH
          SUB       ONE,LENGTH
          IF        LENGTH>0
            RESET     XTRB154A
            SFORMAT   VAR,LENGTH
            MOVE      XTRB154A,VAR
.
            MOVE      VAR,XTRB154X[F3]
.
            SFORMAT   VAR,127
            ADD       ONE,LENGTH
            RESET     XTRB154A,LENGTH
            SUB       ONE,LENGTH
          ENDIF
          UNPACK    XTRB154A,KEY1,XTRB154A
          ADD       ONE,F3
          IF        F3<=200
            GOTO      LODCL100
          ENDIF
.
LODCL999  RETURN

.
.-------------------------------------------------------------------------
. Load TurboGrouper GSRG variables X 200 comma delimited
.-------------------------------------------------------------------------
LODGS000  MOVE      ONE,F3
          PACK      XTRB69AA,XTRB69AA,COMMA,SP70 * GSRG (X 200)
          PACK      VAR,SP70,SP70
.
LODGS100  SCAN      COMMA,XTRB69AA
          GOTO      LODGS999 IF NOT EQUAL
.
          MOVEFPTR  XTRB69AA,LENGTH
          SUB       ONE,LENGTH
          IF        LENGTH>0
            RESET     XTRB69AA
            SFORMAT   VAR,LENGTH
            MOVE      XTRB69AA,VAR
.
            MOVE      VAR,XTRB69XX[F3]
.
            SFORMAT   VAR,127
            ADD       ONE,LENGTH
            RESET     XTRB69AA,LENGTH
            SUB       ONE,LENGTH
          ENDIF
          UNPACK    XTRB69AA,KEY1,XTRB69AA
          ADD       ONE,F3
          IF        F3<=200
            GOTO      LODGS100
          ENDIF
.
LODGS999  RETURN
.
.-------------------------------------------------------------------------
. Load TurboGrouper intervention coded by variables X 200 comma delimited
.-------------------------------------------------------------------------
LODIU000  MOVE      ONE,F3
          PACK      XTRB112A,XTRB112A,COMMA,SP70 * Inter. coded by (X 200)
          PACK      VAR,SP70,SP70
.
LODIU100  SCAN      COMMA,XTRB112A
          GOTO      LODIU999 IF NOT EQUAL
.
          MOVEFPTR  XTRB112A,LENGTH
          SUB       ONE,LENGTH
          IF        LENGTH>0
            RESET     XTRB112A
            SFORMAT   VAR,LENGTH
            MOVE      XTRB112A,VAR
.
            MOVE      VAR,XTRB112X[F3]
.
            SFORMAT   VAR,127
            ADD       ONE,LENGTH
            RESET     XTRB112A,LENGTH
            SUB       ONE,LENGTH
          ENDIF
          UNPACK    XTRB112A,KEY1,XTRB112A
          ADD       ONE,F3
          IF        F3<=200
            GOTO      LODIU100
          ENDIF
.
LODIU999  RETURN
.
.-------------------------------------------------------------------------
. Load TurboGrouper intervention coded date variables X 200 comma delimited
.-------------------------------------------------------------------------
LODIA000  MOVE      ONE,F3
          PACK      XTRB114A,XTRB114A,COMMA,SP70 * Inter. coded date (X 200)
          PACK      VAR,SP70,SP70
.
LODIA100  SCAN      COMMA,XTRB114A
          GOTO      LODIA999 IF NOT EQUAL
.
          MOVEFPTR  XTRB114A,LENGTH
          SUB       ONE,LENGTH
          IF        LENGTH>0
            RESET     XTRB114A
            SFORMAT   VAR,LENGTH
            MOVE      XTRB114A,VAR
.
            MOVE      VAR,XTRB114X[F3]
.
            SFORMAT   VAR,127
            ADD       ONE,LENGTH
            RESET     XTRB114A,LENGTH
            SUB       ONE,LENGTH
          ENDIF
          UNPACK    XTRB114A,KEY1,XTRB114A
          ADD       ONE,F3
          IF        F3<=200
            GOTO      LODIA100
          ENDIF
.
LODIA999  RETURN
.
.-------------------------------------------------------------------------
. Delete existing coding from patedcaf, patecoaf and patpgraf
. prior to loading TurboGrouper data
.-------------------------------------------------------------------------
DELTB000  PACK      KEY13,ADMISSNO,SP70
          CALL      RSPTECD1
          CALL      RKPTECD1
          BRANCH    OVRCD,DELTB200
.
          MATCH     ADMISSNO,DPTEDADM
          GOTO      DELTB200 IF NOT EQUAL
.
          PACK      KEY13,PTEDADMN,PTEDEPNO,PTEDCNT,SP70
          CALL      DEPTECD1
          GOTO      DELTB000   
.
DELTB200  PACK      KEY13,ADMISSNO,SP70
          CALL      RSPTECO1
          CALL      RKPTECO1
          BRANCH    OVRCD,DELTB400
.
          MATCH     ADMISSNO,DPTEOADM
          GOTO      DELTB400 IF NOT EQUAL
.
          PACK      KEY13,PTEOADMN,PTEOEPNO,PTEOCNT,SP70
          CALL      DEPTECO1
          GOTO      DELTB200 
.
DELTB400  PACK      KEY13,ADMISSNO,SP70
          CALL      RSPTPGR1
          CALL      RKPTPGR1
          BRANCH    OVRCD,DELTB999
.
          MATCH     ADMISSNO,DPTPGADM
          GOTO      DELTB999 IF NOT EQUAL
.
          PACK      KEY13,PTPGADMN,PTPGEPNO,PTPGGPVR,SP70
          CALL      DEPTPGR1
          GOTO      DELTB400
.
DELTB999  RETURN
.
.-------------------------------------------------------------------------
. Write TurboGrouper diagnosis details to patecdaf
.-------------------------------------------------------------------------
WRTDG000  MOVE      ADMISSNO,PTEDADMN
          MOVE      ONE,PTEDEPNO
          MOVE      SP70,PTEDOPER
          MOVE      SP70,PTEDACDT
          MOVE      SP70,PTEDDCID
          MOVE      SP70,PTEDSPAR
.
          MOVE      ZERO,FORM3
WRTDG100  ADD       ONE,FORM3
.
          IF        FORM3 > 200
            GOTO      WRTDG999
          ENDIF
.          
          IF        FORM3=1
            MOVE      XTRB0045,ICDCODE           * Diagnosis
          ELSE
            MOVE      XTRB46XX[FORM3],ICDCODE    * Diagnosis
          ENDIF
.
          MATCH     SP70,ICDCODE
          GOTO      WRTDG100 IF EQUAL
          GOTO      WRTDG100 IF EOS
.
          TYPE      ICDCODE
          IF        @EQUAL
            UNPACK    ICDCODE,KEY4,KEY5          * Morphology
            PACK      PTEDCODE,ANSM,KEY4,SLASH,KEY5
          ELSE
            UNPACK    ICDCODE,KEY3,KEY6          * Diagnosis
            MATCH     SP6,KEY6
            IF        @EQUAL | @EOS
              PACK      PTEDCODE,KEY3,SP70
            ELSE
              PACK      PTEDCODE,KEY3,DOT,KEY6
            ENDIF
          ENDIF
.
          MOVE      XTRB47XX[FORM3],PTEDOSET     * COF
.
          MOVE      SP70,DIM3
          MOVE      XTRB68XX[FORM3],DIM3         * GDX
.
          UNPACK    DIM3,PTEDDRGD,D1,PTEDCCCL
.
          PACK      KEY9,PTEDCODE,SP70
          CALL      RDPTICD1
          BRANCH    OVRCD,WRTDG100
.
          MOVE      PT0DDSC2,PTEDDESC      * Description
.
          MOVE      CMDISP,PTEDTYPE        * Primary Disease
.
          IF        PTCNHDPS<>THREE & FORM3 <> ONE
            MOVE      CMDISA,PTEDTYPE        * Associated Disease - NOT VIC
          ENDIF
.
          IF        PTCNHDPS = 4
            MATCH     "2",PTEDOSET               * QLD
            IF        @EQUAL
              MOVE      CMDISC,PTEDTYPE          * complication
            ENDIF
          ELSE
            MATCH     "1",PTEDOSET
            IF        @EQUAL
              MOVE      CMDISC,PTEDTYPE          * complication
            ENDIF
          ENDIF
.
          MATCH     "4",PT0DACRQ
          IF        @EQUAL
            MOVE      CMDISM,PTEDTYPE        * Morphology
          ENDIF
.
          MOVE      XTRB48AD[FORM3],PTEDACDT   * Accident Date
.
          MOVE      FORM3,PTEDCNT
          MOVE      FORM3,PTEDUNQN
.
          MOVE      XTRB109X[FORM3],PTEDUSID     * Diagnosis Coder ID
.
          UNPACK    XTRB111X[FORM3],KEY11,PTEDTIME   * Diagnosis Coder Date   
          UNPACK    KEY11,D2,D1,DIM2,D1,D4
          PACK      PTEDDTCD,D4,DIM2,D2,SP70
.
          MOVE      SP70,PTEDDCID          * Diagnosis cluster
.
          MATCH     "1",MRCNDCID  * Using Diagnosis Cluster Id
          GOTO      WRTDG500 IF NOT EQUAL
.
          MATCH     PTCNGDX3,DDATE   * disc.date > ICD10 ED 13 Go live?
          GOTO      WRTDG500 IF LESS
.
          MOVE      XTRB154X[FORM3],VALDDCID
          CALL      VLDCID00                * Validate cluster id format
          MOVE      VALDDCID,XTRB154X[FORM3]
.
          MOVE      XTRB154X[FORM3],PTEDDCID          * Cluster id
.
          MATCH     SP70,PTEDDCID              * Cluster id populated
          GOTO      WRTDG500 IF NOT EQUAL
.
          MATCH     ANSU,PTEDCODE              * U prefix
          IF        @EQUAL
            UNPACK    PTEDCODE,D1,D2
            MOVE      ZERO,F2
            SQUEEZE   D2
            MOVE      D2,F2                   * U78 to U88 range
            IF        F2 >= 78 & F2 <=88
              MOVE      "0 ",PTEDDCID         * Assign chronic
              GOTO      WRTDG500
            ENDIF
          ENDIF
.
          MOVE      "8 ",PTEDDCID             * Assign unclusterd
.
WRTDG500  PACK      KEY13,PTEDADMN,PTEDEPNO,PTEDCNT,SP70
          CALL      RDPTECD1
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO        * Trap to stop I * D
            CALL      WRPTECD1
            TRAPCLR   IO
          ELSE
            CALL      UPPTECD1
          ENDIF
.
          GOTO      WRTDG100
.          
WRTDG999  RETURN
.
.-------------------------------------------------------------------------
. Write TurboGrouper operation details to patecoaf
.-------------------------------------------------------------------------
WRTOP000  MOVE      ADMISSNO,PTEOADMN
          MOVE      ONE,PTEOEPNO
          MOVE      SP70,PTEOOPER
          MOVE      SP70,PTEOCLIN
          MOVE      SP70,PTEOSTTM
          MOVE      SP70,PTEOEDTM
          MOVE      USERID,PTEOUSID
          MOVE      SP70,PTEOSPAR
.
          MOVE      ZERO,FORM3
WRTOP100  ADD       ONE,FORM3
.
          IF        FORM3 > 200
            GOTO      WRTOP999
          ENDIF
.
          MOVE      XTRB50XX[FORM3],ICDCODE       * ACHI interventio code
.
          MATCH     SP70,ICDCODE
          GOTO      WRTOP100 IF EQUAL
          GOTO      WRTOP100 IF EOS
.
          UNPACK    ICDCODE,KEY5,KEY4
          MOVE      "-",KEY1
          PACK      PTEOCODE,KEY5,KEY1,KEY4,SP70
.
          MOVE      XTRB51XX[FORM3],KEY16      * Intervention dates start times
          UNPACK    KEY16,D2,D1,DIM2,D1,D4,D1,PTEOSTTM
          PACK      PTEODATE,D4,DIM2,D2,SP70
.
          MOVE      XTRB104X[FORM3],KEY16      * Intervention end date times
          UNPACK    KEY16,KEY11,PTEOEDTM
.
          MOVE      SP70,DIM3
          MOVE      XTRB69XX[FORM3],DIM3              * GSRG
.
          UNPACK    DIM3,PTEODRGD
.
          PACK      KEY9,PTEOCODE,SP70
          CALL      RDPTICO1
          BRANCH    OVRCD,WRTOP100
.
          MOVE      PT0ODSC2,PTEODESC            * Description
          MOVE      FORM3,PTEOCNT
          MOVE      FORM3,PTEOUNQN
.
          MOVE      XTRB105X[FORM3],PTEOTYPE     * Operation prefix
          MATCH     SP70,PTEOTYPE
          IF        @EQUAL
            MOVE      CMOPRT,PTEOTYPE
          ENDIF
.
          MATCH     "X",PTEODRGD
          IF        @EQUAL
            MOVE      "X",PTEOTYPE                  * exclusion
          ENDIF
.
          MATCH     SP70,PTEODATE
          IF        @EQUAL
            MOVE      SP70,PTEOSTTM                * Intervention start time
            MOVE      SP70,PTEOEDTM                * Intervention end time
          ENDIF
.
          MOVE      XTRB51CL[FORM3],PTEOCLIN     * Intervention clinician
.
          MOVE      XTRB112X[FORM3],PTEOUSID     * Intervention Coder ID
.
          UNPACK    XTRB114X[FORM3],KEY11,PTEOTIME   * Intervention Coder Date
          UNPACK    KEY11,D2,D1,DIM2,D1,D4
          PACK      PTEODTCD,D4,DIM2,D2,SP70
.
          PACK      KEY13,PTEOADMN,PTEOEPNO,PTEOCNT,SP70
          CALL      RDPTECO1
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO        * Trap to stop I * D
            CALL      WRPTECO1
            TRAPCLR   IO
          ELSE
            CALL      UPPTECO1
          ENDIF
.
          GOTO      WRTOP100
.
WRTOP999  RETURN
.
.-------------------------------------------------------------------------
. Write TurboGrouper DRG data to patpgraf/patmi1af/patdschf
.-------------------------------------------------------------------------
WRPGR000  CALL      CLRPTPRG                * clear PATPRGaf data fields
.
          MOVE      ADMISSNO,PTPGADMN
          MOVE      ONE,PTPGEPNO
.
          PACK      XTRB0053,XTRB0053,SP70
.
          MATCH     "6.0x",XTRB0053         * eg convert 6.0x to 062
          IF        @EQUAL
            PACK      XTRB0053,SIX,TWO,SP70
            SQUEEZE   XTRB0053
            GOTO      WRPGR100
          ENDIF
.                                        
          REP       ". ",XTRB0053          * eg Convert 8.0 to 080
          SQUEEZE   XTRB0053
.
WRPGR100  MATCH     "1",XTRB0053
          IF        @EQUAL
            PACK      PTPGGPVR,XTRB0053,SP70      * DRG 10 or greater
          ELSE
            PACK      PTPGGPVR,ZERO,XTRB0053,SP70
          ENDIF
.
WRPGR110  MATCH     SP70,PTPGGPVR
          GOTO      WRPGR500 IF EQUAL
.
          MOVE      XTRB0054,PTPGNDRG
          MOVE      XTRB0057,PTPGNMDC
.
          MOVE      XTRB0056,PTPGSDRG
          MOVE      XTRB0057,PTPGSMDC
.
          MOVE      XTRB0054,PTPGLDRG
          MOVE      XTRB0057,PTPGLMDC
.
          MOVE      XTRB0071,PTPGPCCL
          MOVE      XTRB0086,PTPGECRW
.
          MOVE      ADATE,FROMDATE
          MOVE      DDATE,TODATE
          CALL      RTIODAYS                * Get LOS
          CALL      RHIHDAYS                * Get HIH Days
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDDSCH1
          BRANCH    OVRCD,WRPGR999
.
          CALL      WIESCALC                * Calculate WIES values
.
          MATCH     "1",MRCNUNWA            * Grouping Products to return NWAU
          IF        @EQUAL
            MATCH     MRCNENWA,DDATE        * Use NWAU for discharges after date
            IF        !@LESS
              MOVE      XTRB0090,PTPGWTOL   * NWAU total
            ENDIF
          ENDIF
.
          PACK      KEY13,PTPGADMN,PTPGEPNO,PTPGGPVR,SP70
          CALL      RAPTPGR1
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO        * Trap to stop I * D
            CALL      WRPTPGR1
            TRAPCLR   IO
          ELSE
            CALL      UPPTPGR1
          ENDIF
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDDSCH1
          BRANCH    OVRCD,WRPGR999
.
          MOVE      PTPGSDRG,PTDSDDRG        * discharge DRG
          MOVE      PTPGSMDC,PTDSDMDC        * discharge MDC
          MOVE      PTPGGPVR,PTDSVOGU        * discharge DRG version
          MOVE      PTPGPCCL,PTDSSIDX        * discharge DRG severity index
          CALL      UPDSCH1

WRPGR500  PACK      KEY8,ADMISSNO,SP70
          CALL      RDMISS1
          BRANCH    OVRCD,WRPGR999
.
...       PACK      ACODDTE,CCC,CYY,CMM,CDD
...       REP       " 0",ACODDTE             * Date of coding
.
...       CALL      UPMISS1
.
WRPGR999  RETURN
.
.-------------------------------------------------------------------------
. Check DRG go live date to see if we want to load the TurboGrouper
. details for this DRG
.-------------------------------------------------------------------------
TBLDRG00  PACK      D4,XTRB0053,SP70
          MOVE      SP70,TURBODRG
.
          MATCH     "6.0x",D4         * eg convert 6.0x to 062
          IF        @EQUAL
            PACK      TURBODRG,ZERO,SIX,TWO,SP70
            GOTO      TBLDRG10
          ENDIF
.
          REP       ". ",D4           * eg Convert 8.0 to 080
          SQUEEZE   D4                * Remove . and add leading 0
.
          MATCH     "1",D4
          IF        @EQUAL
            PACK      TURBODRG,D4,SP70       * DRG 10 or greater
          ELSE
            PACK      TURBODRG,ZERO,D4,SP70 
          ENDIF
.
TBLDRG10  MATCH     DRG041,TURBODRG          *  4.1 DRG
          IF        @EQUAL
            MATCH     PTCNED41,ENCENDAT      * disc.date > DRG 4.1 effect.date?
            GOTO      TBLDRG90 IF NOT LESS   * If so load DRG
.
            GOTO      TBLDRG91               * Skip DRG version
          ENDIF
.
          MATCH     DRG042,TURBODRG          *  4.2 DRG
          IF        @EQUAL
            MATCH     PTCNED42,ENCENDAT      * disc.date > DRG 4.2 effect.date?
            GOTO      TBLDRG90 IF NOT LESS   * If so load DRG
.
            GOTO      TBLDRG91               * Skip DRG version
          ENDIF
.
          MATCH     DRG050,TURBODRG          *  5.0 DRG
          IF        @EQUAL
            MATCH     PTCNED50,ENCENDAT      * disc.date > DRG 5.0 effect.date?
            GOTO      TBLDRG90 IF NOT LESS   * If so load DRG
.
            GOTO      TBLDRG91               * Skip DRG version
          ENDIF
.
          MATCH     DRG051,TURBODRG          *  5.1 DRG
          IF        @EQUAL
            MATCH     PTCNED51,ENCENDAT      * disc.date > DRG 5.1 effect.date?
            GOTO      TBLDRG90 IF NOT LESS   * If so load DRG
.
            GOTO      TBLDRG91               * Skip DRG version
          ENDIF
.
          MATCH     DRG052,TURBODRG          *  5.2 DRG
          IF        @EQUAL
            MATCH     PTCNED52,ENCENDAT      * disc.date > DRG 5.2 effect.date?
            GOTO      TBLDRG90 IF NOT LESS   * If so load DRG
.
            GOTO      TBLDRG91               * Skip DRG version
          ENDIF
.
          MATCH     DRG060,TURBODRG          *  6.0 DRG
          IF        @EQUAL
            MATCH     PTCNED60,ENCENDAT      * disc.date > DRG 6.0 effect.date?
            GOTO      TBLDRG90 IF NOT LESS   * If so load DRG
.
            GOTO      TBLDRG91               * Skip DRG version
          ENDIF
.
          MATCH     DRG062,TURBODRG          *  6.2 DRG
          IF        @EQUAL
            MATCH     PTCNED62,ENCENDAT      * disc.date > DRG 6.2 effect.date?
            GOTO      TBLDRG90 IF NOT LESS   * If so load DRG
.
            GOTO      TBLDRG91               * Skip DRG version
          ENDIF
.
          MATCH     DRG070,TURBODRG          *  7.0 DRG
          IF        @EQUAL
            MATCH     PTCNED70,ENCENDAT      * disc.date > DRG 7.0 effect.date?
            GOTO      TBLDRG90 IF NOT LESS   * If so load DRG
.
            GOTO      TBLDRG91               * Skip DRG version
          ENDIF
.
          MATCH     DRG080,TURBODRG          *  8.0 DRG
          IF        @EQUAL
            MATCH     PTCNED80,ENCENDAT      * disc.date > DRG 8.0 effect.date?
            GOTO      TBLDRG90 IF NOT LESS   * If so load DRG
.
            GOTO      TBLDRG91               * Skip DRG version
          ENDIF
.
          MATCH     DRG090,TURBODRG          *  9.0 DRG
          IF        @EQUAL
            MATCH     PTCNED90,ENCENDAT      * disc.date > DRG 9.0 effect.date?
            GOTO      TBLDRG90 IF NOT LESS   * If so load DRG
.
            GOTO      TBLDRG91               * Skip DRG version
          ENDIF
.
          MATCH     DRG100,TURBODRG          *  10.0 DRG
          IF        @EQUAL
            MATCH     PTCNE100,ENCENDAT      * disc.date > DRG 10.0 effect.date?
            GOTO      TBLDRG90 IF NOT LESS   * If so load DRG
.
            GOTO      TBLDRG91               * Skip DRG version
          ENDIF
.
          MATCH     DRG110,TURBODRG          *  11.0 DRG
          IF        @EQUAL
            MATCH     PTCNE110,ENCENDAT      * disc.date > DRG 11.0 effect.date?
            GOTO      TBLDRG90 IF NOT LESS   * If so load DRG
.
            GOTO      TBLDRG91               * Skip DRG version
          ENDIF
.
          MATCH     DRG120,TURBODRG          *  12.0 DRG
          IF        @EQUAL
            MATCH     PTCNE120,ENCENDAT      * disc.date > DRG 12.0 effect.date?
            GOTO      TBLDRG90 IF NOT LESS   * If so load DRG
.
            GOTO      TBLDRG91               * Skip DRG version
          ENDIF
.
          GOTO      TBLDRG91
.
TBLDRG90  MOVE      ZERO,EXIT               * Yes load this DRG
          GOTO      TBLDRG99
.   
TBLDRG91  MOVE      ONE,EXIT                * No Don't load this DRG
          GOTO      TBLDRG99
    
TBLDRG99  RETURN
.
.-------------------------------------------------------------------------
. Write TurboGrouper Episode Morbidity Changes details to patecmaf
.-------------------------------------------------------------------------
WRECM000  COMPARE   THREE,PTCNHDPS          * Vistoria
          GOTO      WRECM100 IF EQUAL       * So Using Morbidity Changes File
.
          COMPARE   SIX,PTCNHDPS            * Western Australia
          GOTO      WRECM100 IF NOT EQUAL   * So Using Morbidity Changes File
.
          GOTO      WRECM999
.
WRECM100  MOVE      ADMISSNO,PTEMADMN
          MOVE      ONE,PTEMEPNO
          PACK      PTEMCDTE,CCC,CYY,CMM,CDD
          REP       " 0",PTEMCDTE
          MOVE      SP70,PTEMNEWF
          MOVE      SP70,PTEMSPAR
.
          PACK      KEY18,PTEMADMN,PTEMEPNO,PTEMCDTE,SP70
          CALL      RAPTECM1                * Read An Eps Morb Change File Rec
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO        * Trap to stop I * D
            CALL      WRPTECM1              * Write an eps morb change file rec
            TRAPCLR   IO
          ELSE
            CALL      UPPTECM1
          ENDIF
.
WRECM999  RETURN
.-------------------------------------------------------------------------
. Write TurboGrouper Associated Coding Charlson Score
.-------------------------------------------------------------------------
WRTIC000  PACK      XTRB0147,XTRB0147,SP70
          MATCH     SP70,XTRB0147           * Exit if Charlson score is blank
          GOTO      WRTIC999 IF EQUAL
.
          PACK      KEY8,ADMISSNO,SP70
          CALL      RDPTICU1                * Read paticuaf
          BRANCH    OVRCD,WRTIC500,WRTIC999
.
          PACK      PTICCHSC,XTRB0147,SP70  *  Charlson score 
          CALL      UPPTICU1
.
          GOTO      WRTIC999
.
WRTIC500  CALL      CLPATICU                * Clear paticuaf fields
          MOVE      ADMISSNO,PTICUADM
.
          PACK      PTICCHSC,XTRB0147,SP70  *  Charlson score 
.
          PACK      KEY8,PTICUADM,SP70
          CALL      RAPTICU1  
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            CALL      WRPTICU1              * Write Record
            TRAPCLR   IO
            BRANCH    OVRCD,WRTIC999
          ENDIF
.
WRTIC999  RETURN
+
.------------------------------------------------------------
. Clear AMHCC Grouper variables
.------------------------------------------------------------
CLRAM000  PACK      XAMH0001,SP70
          PACK      XAMH0002,SP70
          PACK      XAMH0003,SP70
          PACK      XAMH0004,SP70
          PACK      XAMH0005,SP70
          PACK      XAMH0006,SP70
          PACK      XAMH0007,SP70
          PACK      XAMH0008,SP70
          PACK      XAMH0009,SP70
          PACK      XAMH0010,SP70
          PACK      XAMH0011,SP70
          PACK      XAMH0012,SP70
          PACK      XAMH0013,SP70
          PACK      XAMH0014,SP70
          PACK      XAMH0015,SP70
          PACK      XAMH0016,SP70
          PACK      XAMH0017,SP70
          PACK      XAMH0018,SP70
          PACK      XAMH0019,SP70
          PACK      XAMH0020,SP70
          PACK      XAMH0021,SP70
          PACK      XAMH0022,SP70
          PACK      XAMH0023,SP70
          PACK      XAMH0024,SP70
          PACK      XAMH0025,SP70
          PACK      XAMH0026,SP70
          PACK      XAMH0027,SP70
          PACK      XAMH0028,SP70
          PACK      XAMH0029,SP70
          PACK      XAMH0030,SP70
          PACK      XAMH0031,SP70
          PACK      XAMH0032,SP70
          PACK      XAMH0033,SP70
          PACK      XAMH0034,SP70
          PACK      XAMH0035,SP70
          PACK      XAMH0036,SP70
          PACK      XAMH0037,SP70
CLRAM999  RETURN
+
.------------------------------------------------------------
. Populate AMHCC Grouper variables
.------------------------------------------------------------
POPAM000  MOVE      DAADMNO,XAMH0001        * Admission number
.
          UNPACK    ADATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,XAMH0002        * Admission Date
.
          UNPACK    DDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,XAMH0003        * Discharge Date
.
          UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,XAMH0004        * Date of Birth
.
.         Currently age is calculated by the grouper as per 3M guidelines
.0928468  PACK      AGEDATE,ADATE
.0928468  CALL      CALCAGE                 * Calculate patients age
.0928468  IF        PSAGEDAY>364
.0928468    MOVE      PSAGEYRS,XAMH0005     * Age in years
.0928468  ELSE
.0928468    MOVE      PSAGEDAY,FORM3
.0928468    MOVE      FORM3,XDRGAGED        * Age in days
.0928468  ENDIF
.
          MATCH     SP70,ACARE
          IF        !@EQUAL
            PACK      KEY5,ANSC,ANSC,ACARE,SP70     * Care Type
            CALL      RDCODE1
            IF        OVRCD<>1
              MOVE      PTCDUDF6,XAMH0007           * Cat CC User defined 6
            ENDIF
          ENDIF
.
          MOVE      "1",XAMH0008                    * Admitted Indicator (1=Yes)
.
          MATCH     SP70,PMVXMHLS
          IF        !@EQUAL
            PACK      KEY5,ANSL,ANSS,PMVXMHLS,SP70  * Mental Health Legal Status
            CALL      RDCODE1
            IF        OVRCD<>1
              MOVE      TCINDC5,XAMH0010            * Cat LS Indc5
            ENDIF
          ENDIF
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      MEHHONA3,"mehhonaf"
          TRAPCLR   IO
          BRANCH    OVRCD,POPAM200
.
          PACK      KEY24,DAADMNO,Z70
          CALL      RSMHHON3
POPAM100  CALL      RPMHHON3                * read most recent Honos
          BRANCH    OVRCD,POPAM200
.
          MATCH     DAADMNO,MHHNVISN
          GOTO      POPAM200 IF NOT EQUAL
.
          MATCH     "1",MHHNACTV            * is this Active (1=Active) ?
          GOTO      POPAM100 IF NOT EQUAL
.
          MATCH     SP70,MHHNHOTY
          IF        !@EQUAL
            MOVE      "hs",D2
            PACK      KEY5,D2,MHHNHOTY,SP70
            CALL      RDCODE1
            IF        OVRCD<>1
              MATCH     "C",TCINDC1
              IF        @EQUAL
                MOVE      "1",XAMH0006      * Age Group (1 = Child)
              ENDIF
              MATCH     "A",TCINDC1
              IF        @EQUAL
                MOVE      "2",XAMH0006      * Age Group (2 = Adult)
              ENDIF
              MATCH     "O",TCINDC1
              IF        @EQUAL
                MOVE      "3",XAMH0006      * Age Group (3 = Elderly)
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     SP70,MHHNFOCU
          IF        !@EQUAL
            MOVE      "hf",D2
            PACK      KEY5,D2,MHHNFOCU,SP70         * Phase/Focus of Care
            CALL      RDCODE1
            IF        OVRCD<>1
              MOVE      THCSCOD,XAMH0009            * Cat hf HDP Equivalent
            ENDIF
          ENDIF
.
          MOVE      MHHNCYQ1,XAMH0011     * Disruptive behaviour (child)
          MOVE      MHHNCYQ8,XAMH0012     * Non-organic somatic symp (child)
          MOVE      MHHNCQ10,XAMH0013     * Peer relationships (child)
          MOVE      MHHNCYQ2,XAMH0014     * Overactivity (child)
          MOVE      MHHNADQ1,XAMH0015     * Overactivity (Adult)
          MOVE      MHHNCYQ3,XAMH0016     * NonAccidentalSelfInjury (Child)
          MOVE      MHHNADQ2,XAMH0017     * NonAccidentalSelfInjury (Adult)
          MOVE      MHHNCYQ4,XAMH0018     * AlcoSubstanceSolventMisuse (Child)
          MOVE      MHHNADQ3,XAMH0019     * ProblemDrinkingDrugTaking (Adult)
.
          CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
.0928468  MATCH     SP70,MHHNxxxx
.0928468  IF        !@EQUAL
.0928468    UNPACK    MHHNxxxx,CCENT,CYEAR,CMON,CDAY       * HONOS Date ?
.0928468  ENDIF
          MATCH     SP70,DDATE
          IF        !@EQUAL
            UNPACK    DDATE,CCENT,CYEAR,CMON,CDAY          * Discharge Date
          ELSE
            UNPACK    CURRDATE,CCENT,CYEAR,CMON,CDAY       * Current Date
          ENDIF
          CALL      PACDATE
          MOVE      CPCDATE,XAMH0020      * Phase End Date
.
          MOVE      MHHNCYQ5,XAMH0021     * ScholasticOrLanguageSkills (Child)
          MOVE      MHHNADQ4,XAMH0022     * CognitiveProblems (Adult)
          MOVE      MHHNCYQ6,XAMH0023     * PhysicalIllnessOrDisability (Child)
          MOVE      MHHNADQ5,XAMH0024     * PhysicalIllnessOrDisability (Adult)
          MOVE      MHHNCYQ7,XAMH0025     * HallucinationsDelusions (Child)
          MOVE      MHHNADQ6,XAMH0026     * HallucinationsDelusions (Adult)
          MOVE      MHHNCYQ9,XAMH0027     * EmotionalAndRelatedSymptoms (Child)
          MOVE      MHHNADQ7,XAMH0028     * ProblemsWithDepressedMood (Adult)
          MOVE      MHHNADQ8,XAMH0029     * OtherMentalAndBehavioural (Adult)
          MOVE      MHHNCQ12,XAMH0030     * FamilyLifeAndRelationships (Child)
          MOVE      MHHNADQ9,XAMH0031     * ProblemsWithRelationships (Adult)
          MOVE      MHHNCQ11,XAMH0032     * SelfCareAndIndependence (Child)
          MOVE      MHHNAQ10,XAMH0033     * ProblemsWithActivitiesOfDayL (Adult)
          MOVE      MHHNAQ11,XAMH0034     * ProblemsWithLivingConditions (Adult)
          MOVE      MHHNCQ13,XAMH0035     * PoorSchoolAttendance (Child)
          MOVE      MHHNAQ12,XAMH0036     * ProblemsWithOccupAndActivit (Adult)
.
          MATCH     SP70,MHHNHDAT
          IF        !@EQUAL
            UNPACK    MHHNHDAT,CCENT,CYEAR,CMON,CDAY       * HONOS Date
          ELSE
            UNPACK    CURRDATE,CCENT,CYEAR,CMON,CDAY       * Current Date
          ENDIF
          CALL      PACDATE
          MOVE      CPCDATE,XAMH0037      * Phase Start Date
.
.
POPAM200
.
.
POPAM999  RETURN
+
.------------------------------------------------------------
. Write AMHCC Grouper export variables
.------------------------------------------------------------
WAMGRP00  WRITE     AMHCCFL1,SEQ;XAMH0001,XAMH0002,XAMH0003,XAMH0004,XAMH0005:
                                 XAMH0006,XAMH0007,XAMH0008,XAMH0009,XAMH0010:
                                 XAMH0011,XAMH0012,XAMH0013,XAMH0014,XAMH0015:
                                 XAMH0016,XAMH0017,XAMH0018,XAMH0019,XAMH0020:
                                 XAMH0021,XAMH0022,XAMH0023,XAMH0024,XAMH0025:
                                 XAMH0026,XAMH0027,XAMH0028,XAMH0029,XAMH0030:
                                 XAMH0031,XAMH0032,XAMH0033,XAMH0034,XAMH0035:
                                 XAMH0036,XAMH0037
WAMGRP99  RETURN
+
.-----------------------------------------------------------------
. Load AMHCC Grouper results and write AMHCC end class to visxdcaf
.-----------------------------------------------------------------
LODAM000  MOVE      "amhcco",FILENAM4
          ENDSET    FILENAM4
          APPEND    PORT,FILENAM4
          REP       " 0",FILENAM4
          RESET     FILENAM4                * AMHCC Output file "amhccoXX.txt"
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      AMHCCFL2,FILENAM4       * Open AMHCC Grouper output file
          TRAPCLR   IO
          BRANCH    OVRCD,LODAM900
.
          MOVE      SP70,XAMHC001
          MOVE      SP70,XAMHC002
          READ      AMHCCFL2,SEQ;XAMHC001,XAMHC002    * get AMHCC results
          GOTO      LODAM910 IF OVER
.
          RJUSTIFY  XAMHC001
          MATCH     DAADMNO,XAMHC001        * Visit Number
          GOTO      LODAM920 IF NOT EQUAL
.
          MATCH     ADMISSNO,XAMHC001       * Visit Number
          GOTO      LODAM920 IF NOT EQUAL
.
          CALL      FAMHC000                * format AMHCC code
.
LODAM100  CALL      CLVISXDC
.
          MOVE      "004",VSXDTYDA               * 004 = AMHCC End code
          PACK      KEY11,XAMHC001,VSXDTYDA,SP70
          CALL      RDVSXDC1
          IF        OVRCD=0
            PACK      VSXDVAL1,XAMHC002,SP70     * AHMCC End code
            MOVE      CURRDATE,VSXDDAT1          * Coded date
            MOVE      "3M CGS Grouper",VSXDTXT1  * Coding Method
            MOVE      "0",VSXDDELT               * Not deleted (always set?)
            MATCH     "1",VSXDDELT
            IF        @EQUAL
              MOVE      USERID,VSXDUCID          * record data completed
              PACK      VSXDUCDT,CCC,CYY,CMM,CDD
              REP       " 0",VSXDUCDT
              MOVE      CTIMEIS,VSXDUCTM
            ELSE
              UNPACK    SP70,VSXDUCID,VSXDUCDT,VSXDUCTM
            ENDIF
.
            MOVE      USERID,VSXDUUSR            * updated record
            PACK      VSXDUDAT,CCC,CYY,CMM,CDD
            REP       " 0",VSXDUDAT
            MOVE      CTIMEIS,VSXDUTIM
            CALL      UPVSXDC1
          ELSE
            MOVE      XAMHC001,VSXDVISN          * Admission number
            MOVE      "004",VSXDTYDA             * 004 = AMHCC End code
            MOVE      XAMHC002,VSXDVAL1          * AHMCC End code
            MOVE      CURRDATE,VSXDDAT1          * Coded date
            MOVE      "3M CGS Grouper",VSXDTXT1  * Coding Method
            MOVE      "0",VSXDDELT               * Not deleted (always set?)
            MATCH     "1",VSXDDELT
            IF        @EQUAL
              MOVE      USERID,VSXDUCID          * record data completed
              PACK      VSXDUCDT,CCC,CYY,CMM,CDD
              REP       " 0",VSXDUCDT
              MOVE      CTIMEIS,VSXDUCTM
            ENDIF
.
            PACK      VSXDCDAT,CCC,CYY,CMM,CDD   * created record
            REP       " 0",VSXDCDAT
            MOVE      CTIMEIS,VSXDCTIM
            MOVE      USERID,VSXDCUSR
            CALL      WRVSXDC1
          ENDIF
.
          GOTO      LODAM980
.
LODAM900  MOVE      "Error: AMHCC Output File Not Found.",WEBTITLE
          SCAN      "WEB",PRGID
          IF        @EQUAL
            CALL      WINRLD00
          ELSE
            PRINT     *23,WEBTITLE
          ENDIF
          MOVE      ONE,EXIT
          RESET     PRGID
          GOTO      LODAM990
.
LODAM910  MOVE      "Error: No Records returned from AMHCC Grouper.",WEBTITLE
          SCAN      "WEB",PRGID
          IF        @EQUAL
            CALL      WINRLD00
          ELSE
            PRINT     *23,WEBTITLE
          ENDIF
          MOVE      ONE,EXIT
          RESET     PRGID
          GOTO      LODAM990
.
LODAM920  MOVE      "Error: AMHCC Visit Number Mismatch.",WEBTITLE
          SCAN      "WEB",PRGID
          IF        @EQUAL
            CALL      WINRLD00
          ELSE
            PRINT     *23,WEBTITLE
          ENDIF
          MOVE      ONE,EXIT
          RESET     PRGID
          GOTO      LODAM990
.
LODAM980  MOVE      ZERO,EXIT
          GOTO      LODAM990
.
LODAM990  CLOSE     AMHCCFL2
.0928468  CLOSE     AMHCCFL2,DELETE
.
LODAM999  RETURN
+
.******************************************************************************
.*                           FAMHC000                                         *
.*      Format the AMHCC code by removing leading zeroes and left justifying  *
.******************************************************************************
FAMHC000  MATCH     SP70,XAMHC002                * blank code ?
          GOTO      FAMHC999 IF EQUAL            * yes
.
FAMHC100  RESET     XAMHC002
          MOVE      SP1,D1
.
          MOVE      ZERO,COUNTER
          WHILE     COUNTER < 10
            ADD       ONE,COUNTER
            CMOVE     XAMHC002,D1
            MATCH     "0",D1
            IF        @EQUAL
              CMOVE     SP1,XAMHC002             * change zero to blank
            ELSE
              GOTO      FAMHC900                 * no more leading zeros
            ENDIF
            BUMP      XAMHC002
          DO
.
FAMHC900  RESET     XAMHC002
          LJUSTIFY  XAMHC002
.
FAMHC999  RETURN
+
.-----------------------------------------------------------------------
. Validate DCID received from Codefinder/Turbogrouper is a valid format
. Requires : VALDDCID - DCID value to validate
. Returns  : VALDDCID - Valid DCID value or blank if invalid
. Valid values : 0, 8, A to Z, AA to ZZ
.-----------------------------------------------------------------------
VLDCID00  PACK      VALDDCID,VALDDCID,SP70  * Space fill
.
          MATCH     SP70,VALDDCID           * Blank DCID
          GOTO      VLDCID99 IF EQUAL
.
          MATCH     "0 ",VALDDCID           * Chronic Condition?
          GOTO      VLDCID99 IF EQUAL
.
          MATCH     "8 ",VALDDCID           * UnClustered?
          GOTO      VLDCID99 IF EQUAL
.
          UNPACK    VALDDCID,D1,KEY1        * 1st and 2nd character
.
          RESET     DCIDVALS
          SCAN      D1,DCIDVALS             * Valid 1st character
          GOTO      VLDCID90 IF NOT EQUAL
.
          MATCH     SP70,KEY1               * Blank 2nd character
          GOTO      VLDCID99 IF EQUAL

          RESET     DCIDVALS
          SCAN      KEY1,DCIDVALS           * Valid 2nd character
          GOTO      VLDCID90 IF NOT EQUAL

          GOTO      VLDCID99
.
VLDCID90  MOVE      SP70,VALDDCID           * Set to spaces
          GOTO      VLDCID99
.
VLDCID99  RETURN
