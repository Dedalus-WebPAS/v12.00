+
.**********************************************************************
.* System   :  MEDICAL RECORDS TRACKING SYSTEM                        *
.* Program  :  IBAMRT37                                               *
.* Desc     :  OVERDUE RECORDS REPORT                                 *
.**********************************************************************
.* Date     :  15/06/89                                               *
.* Author   :  D.Di.Paola                                             *
.* Comment  :  Copied from IBATRA37 and modified for the new Medical  *
.*          :  Records Tracking system for H.R.H.                     *
.* Mods     :                                                         *
.*        V10.04.01 14/07/2014  Ebon Clements  CAR 261630             *
.*                  Removed port number from temp file name           *
.*        V10.02.01 04/07/2011  Ebon Clements  CAR 240724             *
.*                  Mods for MRT hospital/location - Added hospital   *
.*                  to location key                                   *
.*        V9.08.01  31/01/2007  Peter Vela    CAR 127930              *
.*                  Recompled for MRTCONFD                            *
.*        V9.04.01  29/04/2005  Peter Vela       CAR 55214            *
.*                  Recompiled for MRTCONFD                           *
.*        V9.03.01  18/12/2003 Peter Vela CAR 43134                   *
.*                  Recompiled for MRTCONFD                           *
.*        V9.00.01  13/08/2001 Dean Cramer                            *
.*                  Increase BORTIME from 5 characters to 8.          *
.*                  Adjust for connected variables.                   *
.*                  Adjust print routines.                            * 
.*        V5.09.B04 14/02/2001 J.Tan                                  *
.*                  Mods for WEB Medical Record Report                *
.*        V5.09.03  19.01.2001 Bronko Sosic                           *
.*                  Recompiled for MRTHISFD                           *
.*        V5.09.02 19/01/2001 J.Tan                                   *
.*                  Fixed the heading                                 *
.*        V5.09.00  20.12.2000 Bronko Sosic                           *
.*                  Recompiled for MRTHISFD                           *
.*        V5.08.01  25.10.2000 J.Tan                                  *
.*                  Recompiled for WEB Report Scheduler               *
.*        V5.07.01  11/03/1999  Jim Stathopoulos                      *
.*                  Increased DATFORM1 and DATFORM2                   *
.*        V5.07.B03 15/12/1999  Nicole Harrington 507 rebounds 067    *
.*                  Mods to use HEAD132                               *
.         V5.07.B02 09/12/1998  Glenn Berry      5.07 Changes      
.                   Fix Printing of Century
.**********************************************************************
.*             V5.01.02 12/03/93 DWJ                                  *
.*             Recompile for MRCNSTFF                                 *
.*             V5.01.03  17/05/1993  Robert Sumsion                   *
.*             Converted vars and includes to mrt in standard form.   *
.*             V5.01.04  16/03/1994  Rob Leonard  SRF 127698          *
.*             Display processing of dates                            *
.*        V5.03.01  05/02/1996  Greg Horvat                           *
.*                  Delete the tempfiles when exiting the program, &  *
.*                  changed to check the bypass staff parameter       *
.*                  before getting the receiver name                  *
.*                                                                    *
.**********************************************************************
.
.$$$$$
. Overdue Records Report (IBAMRT37)
.__________________________________________
.
. - Initialization
.        - Display Header
.        - Open Files 
.               MRTMASA1
.               MRTMASA2
.               MRTLOCA1
.               MRTSTFA1
.               MRTRESA1
.               MRTRESA2
.               MRTMOVA1
.               MRTHISA2
.               CONTROLF
.
.        - Clear Variables
.
.        - Input Home Location
.              - Read CONTROLF sector 60, position *105
.                     - if "?" entered, Read MRTLOCA1
.                     - extract & display summary screen of Location Codes only
.                         with a Home Location Type (stored in controlf *105).
.                     - if spaces or e.o.s. entered, default to "All"
.                         Home Locations.
.
. - Processing Options
.        - 0. Exit
.        - 1. By Location 
.        - 2. By Receiver
.
.        - Determine Report Headers By Option  1 = By Location
.                                              2 = By Receiver 
.
.        - Create TEMP file for report details (tempovXX.txt)
.        - Create TEMP file for report totals  (temptlXX.txt)
.
. - Processing Loop  - By Location
.                    - By Receiver
.
.        - Input Date Options
.              - 0. Exit
.              - 1. As At A Date
.              - 2. Range Of Dates
.
.        - Input Date Range(s) Depending On Option Chosen For Date 
.
.
.        - Extraction Loop
.              - Read MRTHISA2
.                     - check if record exists within date ranges
.                     - check if record is outstanding
.                     - if OK, extract relevant history details
.                
.              - Read MRTLOCA1
.                     - check if record exists
.                     - if OK,extract location description
.
.              - Read MRTSTFA1
.                     - check if record exists
.                     - if OK, extract staff details
.
.              - Branch On Option to determine totals to write (temptlXX.txt)
.                     - Option 1 = By Location
.                     - Option 2 = By Receiver
.
.              - Read MRTMASA2
.                     - check if record exists
.                     - if OK, extract tracking master details
.
.              - Call Write Module For TEMP files
.                     - Branch On Option to Write To TEMP files
.                     - Option 1 = By Location
.                     - Option 2 = By Receiver
.
.              - Write Data details to TEMP file (tempovXX.txt)
.              - Write Totals to TEMPtotl file (temptlXX.txt)
.           
.              - Increment Record Counter By 1.
.
.              - Clear Variables
.
.        - END
.
.        - Print Loop
.              - Read TEMP file sequentially (tempovXX.txt)
.              - Call Print Routine
.                     - Print Overdue Records Report
.              - Print Reservation Report
.        - END
.        
.        - Read TEMPtotl file sequentially (temptlXX.txt)
.              - Print Subtotals for each - Location
.                                         - Receiver
.        - Print Total No. Of Records
. - END
.$$$$$      
.
           INC        STD001FD
           INC        IBASEQFD/INC
           INC        MRTCONFD/INC
           INC        MRTMASFD/INC
           INC        MRTLOCFD/INC
           INC        MRTSTFFD/INC
           INC        MRTRESFD/INC
           INC        MRTHISFD/INC
           INC        MRTMOVFD/INC
           INC        TFILEVAR/INC
           INC        WEBERRFD/INC
.
SORT1      INIT       "u1-30,31-40,41-48,49-58"
SORT2      INIT       "u86-115,31-40,41-48,49-58"
SORTKEY    DIM        25
TEMPFILE   IFILE      SQL, FIXED=119, KEY=SORTKEY
TEMPTOTL   IFILE      SQL, FIXED=36, KEY="u1-30"
+
.
.--------- temporary file definition for report details -------
.
COUNT     FORM      2
DISPARRY  DIM       4[36]
DSTFARRY  DIM       6[36]
LOCATION  DIM        30           1-30
BORDATE   DIM        10          31-40
BORTIME   DIM        8           41-48
.MRHIKEY    DIM        10          49-58
DUEDATE   DIM        10          59-68
RECORDID  DIM        20          69-88
RECEIVER  DIM        30          89-118
.                          e-o-r = 119 
.
.--------- temporary file definition for report subtotals ------
.
DEPTYPE   DIM        30           1-30
TOTCNT    FORM       5            31-35
.                          e-o-r = 36
.
.**********************************************************************
.*                         CONSTANTS                                  *
.**********************************************************************
.
HEADER1    INIT       "By Current Location"
HEADER2    INIT       "By Current Receiver"
OUTSTAT    INIT       "1"                       * Status =1, "out of home locn"
DFLTCODE   INIT       "All "
.
.**********************************************************************
.*                         GLOBAL VARIABLES                           *
.**********************************************************************
.
BEGINCNT   FORM       1
.
CMDLINE    DIM        60
CLOSDATE   DIM        10
CODEDES1   DIM        6 
CODEDES2   DIM        6 
.
DATFORM1   FORM       8
DATFORM2   FORM       8
DESCRPT1   DIM        30
DESCRPT2   DIM        30
DIM20      DIM        20
DIM31      DIM        31
DIM30      DIM        30
DIM55      DIM        55
.
ENDLOCN    DIM        7
ENDRECV    DIM        6
.
FROMDATE   DIM        8 
FNAMEA     DIM        8
FNAMEB     DIM        8
.
HOMEDESC   DIM        30
HOMELOCN   DIM        7
HOMEONLY   FORM       "0"
ITEM       FORM       1
.
.
LINE       DIM        55
LINECNT    FORM       2
LOCATNS    FORM       1
LOCNTEST   DIM        7
.
OPENDATE   DIM        10
.
PAGENO     FORM       8
PRTCODE    DIM        7
.
RDAY       DIM        2
RMON       DIM        2
RYEAR      DIM        2
RCENT      DIM        2
RECOUNT    FORM       1
RECDCNT    FORM       5
.
SEQTYPE    DIM        19
STRTLOCN   DIM        7 
STRTRECV   DIM        6 
SKIPCNT    FORM       1
.
TEMP55     DIM        55
TODATE     DIM        8  
.
VDAY       DIM        2
VMON       DIM        2
VYEAR      DIM        2
VCENT      DIM        2
.
PRGNAM    INIT      "Overdue Record Report"
PRGID     INIT       "IBAMRT37"
VERSION   INIT      "V12.00.00"
+
.**********************************************************************
.*                           MAINLINE                                 *
.*                      controlling logic                             *
.**********************************************************************
ML0000     CALL       INIT0000                      * intialization
ML0200     CALL       CLR0000                       * clear input variables
           CALL       HOME0000                      * input home location
.
.--------- process - By Location Sequence        
.                  - By Requestor Sequence        
.
           CALL       OPTN0000                     * option screen
           BRANCH     EXIT,ML9000
           BRANCH     OPTION,ML1000,ML1100
           GOTO       ML0200
.
.-------- by location ----
.
ML1000     CALL       CREA0000                     * set up port dependancy
.                                                  * and build tempfile
           CALL       LOCN0000                     * input code ranges
           GOTO       ML1150                       * continue processing 
.
.-------- by receiver -----
.
ML1100     CALL       CREA0000                     * set up port dependancy
.                                                  * and build tempfile
           CALL       RECV0000                     * input code ranges
.
ML1150     CALL       PARA0000                     * date parameters
.
ML1200     BRANCH     ITEM,ML1300,ML1400           * 1=As At Date, 2=Date Range
ML1300     CALL       ASAT0000                     * accept as at a date
           BRANCH     EXIT,ML1150                  * exit main option screen
           GOTO       ML1450                       * continue......
.
ML1400     CALL       DATE0000                     * accept date range
.
ML1450     CALL       CONT0000                     * ok to continue...
           BRANCH     EXIT,ML9000,ML0200           * exit 1=menu, 2=date option
           CALL       EXTR0000                     * extraction routine 
.
ML1500     CALL       TEMP0000                     * read tempfile and print
           GOTO       ML0200
.
ML9000      CALL      KILL0000              * Delete the tempfiles
ML9999      CHAIN     PGM
+
.**********************************************************************
.*                           INIT0000                                 *
.*                   call header routine and open files               *
.**********************************************************************
INIT0000    CALL      DISPHEAD                        * display header
            DISPLAY   *P64:24,"Opening mrtmasaf";
            OPEN      MRTMASA1,"mrtmasaf"             * open files
            DISPLAY   *P64:24,"Opening mrtmasaf";
            OPEN      MRTMASA2,"mrtmasaf"
            DISPLAY   *P64:24,"Opening mrtlocaf";
            OPEN      MRTLOCA1,"mrtlocaf"             
            DISPLAY   *P64:24,"Opening mrtlocaf";
            OPEN      MRTLOCA2,"mrtlocaf"             
            DISPLAY   *P64:24,"Opening mrtstfaf";
            OPEN      MRTSTFA1,"mrtstfaf"
            DISPLAY   *P64:24,"Opening mrtstfaf";
            OPEN      MRTSTFA3,"mrtstfaf"
            DISPLAY   *P64:24,"Opening mrtresaf";
            OPEN      MRTRESA1,"mrtresaf"
            DISPLAY   *P64:24,"Opening mrtresaf";
            OPEN      MRTRESA2,"mrtresaf"
            DISPLAY   *P64:24,"Opening mrtmovaf";
            OPEN      MRTMOVA1,"mrtmovaf"
            DISPLAY   *P64:24,"Opening mrthisaf";
            OPEN      MRTHISA2,"mrthisaf"
            DISPLAY   *P64:24,"Opening controlf";
            OPEN      CONTROLF,"controlf"
          READ      CONTROLF,SIXTY;*128,MRCNSTFF
.
. ---- setup temporary file ----
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,FNAMEA
.
.--------- set up tempfile for subtotals for location and receiver ------
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,FNAMEB
.
INIT9999  RETURN
+
.***********************************************************************
.*                             CREA0000                                *
.*                    create tempfile for details                      *
.***********************************************************************
CREA0000
            DISPLAY   *P40:23,*EL,*V2LON,"Creating Temporary File - ":
                                        "Please Wait",*HOFF;
.
            CALL      KILL0000              * Delete the tempfiles
.
            CLEAR     CMDLINE
            APPEND    "isbuild ",CMDLINE                 * build tempfile
            APPEND    FNAMEA,CMDLINE
            APPEND    " 119 ",CMDLINE
            APPEND    SORTKEY,CMDLINE
            RESET     CMDLINE
.
            EXECUTE   CMDLINE,TASKID
            OPEN      TEMPFILE,FNAMEA
.
            CLEAR     CMDLINE
            APPEND    "isbuild ",CMDLINE                 * build tempfile
            APPEND    FNAMEB,CMDLINE
            APPEND    " 36 u1-30",CMDLINE
            RESET     CMDLINE
.
            EXECUTE   CMDLINE,TASKID
            OPEN      TEMPTOTL,FNAMEB                * open temptotl for totals
.
CREA9999    RETURN
+
.***********************************************************************
.*                             KILL0000                                *
.*                       Delete The Tempfiles                          *
.***********************************************************************
KILL0000  CLEAR     CMDLINE                 * erase filename
          CLOSE     TEMPFILE 
          APPEND    "iserase ",CMDLINE      * ie. tempov
          APPEND    FNAMEA,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE                 * erase filename
          CLOSE     TEMPTOTL 
          APPEND    "iserase ",CMDLINE      * ie. temptl
          APPEND    FNAMEB,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
KILL9999  RETURN
+
.**********************************************************************
.*                           CLR0000                                  *
.*                       clear input variables                        *
.**********************************************************************
CLR0000     MOVE       ZERO,PAGENO
            MOVE       SP10,BORDATE
            MOVE       SP10,MRRSKEY
            MOVE       SP30,RECORDID
            MOVE       SP30,RECEIVER
            MOVE       SP10,DUEDATE
            MOVE       SP8,BORTIME
            MOVE       SP30,LOCATION
            UNPACK     SP20,SEQTYPE
            UNPACK     SP30,VDAY,VMON,VYEAR,VCENT,RDAY,RMON,RYEAR,RCENT
            MOVE       ZERO,BEGINCNT
            MOVE       SP30,DEPTYPE
            MOVE       SP30,HOMEDESC
            MOVE       SP7,HOMELOCN
            MOVE       SP7,PRTCODE
            MOVE       ZERO,TOTCNT
            MOVE       SP7,STRTLOCN
            MOVE       SP7,ENDLOCN
            MOVE       SP6,STRTRECV
            MOVE       SP6,ENDRECV
            MOVE       SP6,CODEDES1
            MOVE       SP6,CODEDES2
            MOVE       SP30,DESCRPT1
            MOVE       SP30,DESCRPT2 
.
CLR9999     RETURN
.**********************************************************************
.*                           OPTN0000                                 * 
.*                select option screen                                *
.**********************************************************************
OPTN0000    MOVE       FALSE,EXIT
            MOVE       "80",LINECNT
.
            HLINE      *G37,2,51,80
            DISPLAY    *P1:6,*V2LON,"0 ",*HOFF,"= Exit":
                       *P1:7,*V2LON,"1 ",*HOFF,"=":
                       *P1:8,*V2LON,"2 ",*HOFF,"=":
                       *P5:7,"By Current Location":
                       *P5:8,"By Current Receiver":
                       *P1:10,"Please Select : ";
.
OPTN1000    KEYIN      *P17:10,*V2LON,OPTION,*HOFF
            COMPARE    ZERO,OPTION
            GOTO       OPTN9000 IF EQUAL
            COMPARE    "3",OPTION   
            GOTO       OPTN0000 IF NOT LESS
.
.-------- determine header -----
.
            UNPACK     SP20,SEQTYPE
            LOAD       SEQTYPE,OPTION,HEADER1,HEADER2
            DISPLAY    *P51:2,*V2LON,"- ",*+,SEQTYPE,SP1;
.
.-------- determine by option, which key is to be used for temp file ----
.
            LOAD       SORTKEY,OPTION,SORT1,SORT2
            GOTO       OPTN9999
. 
OPTN9000    MOVE       TRUE,EXIT
.
OPTN9999    RETURN
.
.***************************************************************************
.*                               ASAT0000                                  *
.*                          accept as at a date                            *
.***************************************************************************
.
.---------- keyin Specific date  -------
.
ASAT0000
            MOVE       FALSE,EXIT
            PACK       TODATE,SP8                    * move sp date range
            PACK       FROMDATE,SP8 
            PACK       OPENDATE,SP10                   * move sp date range
            PACK       CLOSDATE,SP10
            MOVE       "17",CCOL                       * set up keyin date
            MOVE       CCC,CCENT                      * parameters
            MOVE       "20",CVERT
            MOVE       "3",CDEFDTE
            MOVE       "45",ECOL
            MOVE       "20",EVERT
.
            DISPLAY    *P1:20,*EF,"As At Date    :";
            MOVE       SP2,CDAY                        
            MOVE       SP2,CMON
            MOVE       SP2,CYEAR
.
            CALL       KEYDATE                        * call keyin date routine
            MATCH      SP2,CDAY
            GOTO       ASAT8000 IF EQUAL
.
            PACK       OPENDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR    
            PACK       FROMDATE,SP20
            PACK       TODATE,CCENT,CYEAR,CMON,CDAY
            GOTO       ASAT9999
.
ASAT8000    MOVE       TRUE,EXIT
.
ASAT9999    RETURN
.
.***************************************************************************
.*                               DATE0000                                  *
.*                          accept date range                              *
.***************************************************************************
.
.---------- keyin first date range -------
.
DATE0000    PACK       OPENDATE,SP10                   * move sp date range
            PACK       CLOSDATE,SP10
            MOVE       "17",CCOL                       * set up keyin date
            MOVE       CCC,CCENT                      * parameters
            MOVE       "20",CVERT
            MOVE       "3",CDEFDTE
            MOVE       "45",ECOL
            MOVE       "20",EVERT
.
            DISPLAY    *P1:20,*EF,"Date Range    :":
                       *P27:20," TO ";
            MOVE       SP2,CDAY                        
            MOVE       SP2,CMON
            MOVE       SP2,CYEAR
.
            CALL       KEYDATE                        * call keyin date routine
            MATCH      SP2,CDAY
            GOTO       DATE5000 IF EQUAL
.
            PACK       OPENDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR    
            PACK       FROMDATE,CCENT,CYEAR,CMON,CDAY      * move to form field
            MOVE       FROMDATE,DATFORM1                   * used for comparison
.
.---------- keyin second date range -------
.
DATE1000    MOVE       "32",CCOL                       * set up keyin date 
            MOVE       "20",CVERT                      * paramaters
            MOVE       CCC,CCENT
            MOVE       "3",CDEFDTE
            MOVE       "20",EVERT
            MOVE       "45",ECOL
.
            MOVE       SP2,CDAY
            MOVE       SP2,CMON
            MOVE       SP2,CYEAR
.
            CALL       KEYDATE                         * call keyin date routine
            MATCH      SP2,CDAY
            GOTO       DATE1000 IF EQUAL
.
            PACK       CLOSDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
            PACK       TODATE,CCENT,CYEAR,CMON,CDAY    * move to form field
            MOVE       TODATE,DATFORM2                 * for comparison  
.
            COMPARE    DATFORM1,DATFORM2               * compare 1st range to
            GOTO       DATE8000 IF LESS                * 2nd range. 1st date
            GOTO       DATE9999                        * must be less than 2nd 
.
DATE5000    DISPLAY    *P17:20,*V2LON,"Start",*HOFF," TO ",*V2LON,"Finish";
            MOVE       SP8,FROMDATE
            MOVE       "9999999999",TODATE
            MOVE       "     Start",OPENDATE
            MOVE       "Finish    ",CLOSDATE
            GOTO       DATE9999
.
DATE8000  DISPLAY   *P1:24,*B,*EL,"Invalid entry for date range.  ";
          CALL      HITENTER
            GOTO       DATE0000
.
DATE9999    RETURN
+
.************************************************************************
.*                           PARA0000                                   *
.*                       input date parameters                          *
.************************************************************************
PARA0000    DISPLAY    *P1:15,*EF,*V2LON,"1 ",*HOFF,"=":
                       *P1:16,*V2LON,"2 ",*HOFF,"=":
                       *P5:15,"As At A Date":
                       *P5:16,"Range Of Dates":
                       *P1:18,"Please Select : ";
.
PARA1000    KEYIN      *P17:18,*V2LON,ITEM,*HOFF
            COMPARE    ZERO,ITEM   
            GOTO       PARA2000 IF EQUAL
            COMPARE    "3",ITEM
            GOTO       PARA0000 IF NOT LESS
            GOTO       PARA9999
. 
PARA2000    BEEP
            GOTO       PARA0000                     * re-enter
PARA9999    RETURN
.
.************************************************************************
.*                           CONT0000                                   *
.*                       check if ok to continue                        *
.************************************************************************
CONT0000    MOVE       FALSE,EXIT
.
            CALL       CONTQST
            MATCH      "1",ANS                       * 1 = yes 
            GOTO       CONT9999 IF EQUAL
            MATCH      "2",ANS                       * 2 = no
            GOTO       CONT8000 IF EQUAL
            MATCH      "3",ANS                       * 3 = cancel
            GOTO       CONT9000 IF EQUAL
            GOTO       CONT0000
.
CONT8000    MOVE       TWO,EXIT                      * no
            GOTO       CONT9999
.
CONT9000    MOVE       TRUE,EXIT                     * cancel
CONT9999    RETURN
+
.**************************************************************************
.*                            HOME0000                                    *
.*                      keyin home location                               *
.**************************************************************************
HOME0000 MOVE      FALSE,EXIT
         MOVE      SP30,DIM30
         MOVE      SP30,MRLODESC
         READ      CONTROLF,SIXTY;*105,MRCNHMTY
         DISPLAY   *P1:4,*EF,"Home Location : ",UNDLN7,*P35:4,*EL;
         KEYIN     *P17:4,*V2LON,HOMELOCN,*HOFF;
         DISPLAY   *P17:4,*V2LON,HOMELOCN,*HOFF;
.
         RESET     HOMELOCN
         GOTO      HOME0500 IF EOS
.               
         ENDSET    HOMELOCN
         APPEND    SP7,HOMELOCN
         RESET     HOMELOCN
.
         MATCH     SP7,HOMELOCN
         GOTO      HOME0500 IF EQUAL 
.
         MATCH     "?",HOMELOCN
         GOTO      HOME3000 IF EQUAL
         GOTO      HOME0600
.
.------- if e.o.s. or spaces entered, default to all codes -----
.
HOME0500 MOVE      SP7,HOMELOCN              * clear input variable 
         MOVE      SP30,HOMEDESC             * clear description variable 
         MOVE      DFLTCODE,PRTCODE          * move default var to print var.
         DISPLAY   *P17:4,*V2LON,DFLTCODE,*HOFF;
         GOTO      HOME9999
.
.------- valid Location Code entered, however check to see if exists -----
.
HOME0600 PACK      KEY7,HOMELOCN
         CALL      RDMRLOC1
         BRANCH    OVRCD,HOME1000
         MATCH     MRCNHMTY,MRLOTYPE
         GOTO      HOME2000 IF NOT EQUAL
         MOVE      MRLODESC,HOMEDESC
         DISPLAY   *P35:4,HOMEDESC;
         MOVE      HOMELOCN,PRTCODE             * move variable to print var.
         GOTO      HOME9999
.
.------ home location code not on file -----
.
HOME1000 DISPLAY   *P1:24,*B,*EL,"Home Location Code Not On File.  ";
         CALL      HITENTER
         GOTO      HOME0000
.
.------- home location code not a home location ------
.
HOME2000 DISPLAY   *P1:24,*B,*EL,"Home Location Code Not A Home Location.  ";
         CALL      HITENTER
         GOTO      HOME0000
.
.--------- Question mark option entered, display valid home locations only ---
.
HOME3000  MOVE      SP7,KEY7
          CALL      RSMRLOC1
HOME3500  CALL      RKMRLOC1
          BRANCH    OVRCD,HOME5000
.
          MATCH     MRCNHMTY,MRLOTYPE               * check if a home location
          GOTO      HOME3500 IF NOT EQUAL
.
.------ Display Category Heading, and then loop over entries ------
.
          DISPLAY   *P1:4,*EF,*P30:4,*V2LON,*ULON,"HOME LOCATIONS"
          MOVE      FIVE,CVERT
          MOVE      ONE,CCOL
.
.>>>>>>>  TRAP      HOME6000 IF F1
.
          MOVE      SP7,KEY7
          CALL      RSMRLOC1
.
HOME4000  CALL      RKMRLOC1
          BRANCH    OVRCD,HOME7000
.
.-------- CHECK HOME LOCN IN SYS PAR MAINT-----
.
          MATCH     MRCNHMTY,MRLOTYPE                 * display only home locns
          GOTO      HOME4000 IF NOT EQUAL           * with a type equal to home
.
          MOVE      MRLODESC,DIM30
          DISPLAY   *PCCOL:CVERT,*V2LON,MRLOHOSP," - ",MRLOCODE,SP2,*HOFF,DIM30;
          ADD       ONE,CVERT
          COMPARE   TWENTY3,CVERT
          GOTO      HOME4000 IF LESS
.
          MOVE      FIVE,CVERT
          ADD       "40",CCOL
          COMPARE   "70",CCOL
          GOTO      HOME4000 IF LESS
.
.>>>>>>>  TRAPCLR   F1
.
          KEYIN     *P1:24,*EL," (",*V2LON,"E",*HOFF,")xit, (":
                    *V2LON,"N",*HOFF,")ext Screen : ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          CMATCH    ANSE,ANS
          GOTO      HOME8000 IF EQUAL
.
          MOVE      FIVE,CVERT
          MOVE      ONE,CCOL
          DISPLAY   *P1:5,*EF
.
.>>>>>>>  TRAP      HOME6000 IF F1
.
          GOTO      HOME4000
.
.------ If missing category show code missing ------
.
HOME5000  DISPLAY   *P1:4,*EF,*P30:4,*V2LON,*BLINKON:
                    "No Locations on file";
          GOTO      HOME7000
.
HOME6000  NORETURN
.>>>>>>>  TRAPCLR   F1
.
.------ End of codes ------
.
HOME7000  DISPLAY   *P1:24,*EL;
          CALL      HITENTER
HOME8000  MOVE      ZERO,OVRCD
          GOTO      HOME0000
.
HOME9999  RETURN
+
.********************************************************************** 
.*                             LOCN0000                               *
.*                    keyin the range for location  codes             *
.**********************************************************************
LOCN0000  
          DISPLAY   *P1:11,*EF:
                    *P1:12,"Current Location From : ":
                    *P1:13,"Current Location To   : ";
.
. -----  Keyin the first code range ----
.
LOCN0500  MOVE      SP30,DESCRPT1
          DISPLAY   *P25:12,*EL,UNDLN7;
          KEYIN     *P25:12,*V2LON,STRTLOCN;             * keyin 1st code 
          DISPLAY   *P25:12,*V2LON,STRTLOCN;             * keyin 1st code 
.
          MATCH     QUEST,STRTLOCN
          GOTO      LOCN8000 IF EQUAL               * display locations routine
.
          ENDSET    STRTLOCN
          APPEND    SP7,STRTLOCN
          RESET     STRTLOCN
.
          MATCH     SP7,STRTLOCN                      * check for spaces
          GOTO      LOCN0900 IF NOT EQUAL           
.
          DISPLAY   *P25:12,*V2LON,"Start ";   
          MOVE      "Start ",CODEDES1
          GOTO      LOCN1000
.
.-------- check input to see if exists ----
.
LOCN0900  PACK      KEY7,STRTLOCN
          CALL      RDMRLOC1                          * read locations file 
          BRANCH    OVRCD,LOCN0950
          MOVE      STRTLOCN,CODEDES1
          MOVE      MRLODESC,DESCRPT1                  * get description
          DISPLAY   *P35:12,DESCRPT1;                * display description
          GOTO      LOCN1000
.
.------- invalid code entered ----
.
LOCN0950  DISPLAY   *P1:24,*B,*EL,"Code Does Not Exist.  ";
          CALL      HITENTER
          GOTO      LOCN0500 
.
. -----  Keyin the 2nd range code -----
.
LOCN1000  MOVE      SP30,DESCRPT2
          DISPLAY   *P25:13,*EL,UNDLN7;
          KEYIN     *P25:13,*V2LON,ENDLOCN;
          DISPLAY   *P25:13,*V2LON,ENDLOCN;
.
          MATCH     QUEST,ENDLOCN
          GOTO      LOCN8500 IF EQUAL               * display locations routine
.
          ENDSET     ENDLOCN
          APPEND     SP7,ENDLOCN
          RESET      ENDLOCN
.
          MATCH      SP7,ENDLOCN
          GOTO       LOCN9000 IF NOT EQUAL
.
          DISPLAY    *P25:13,*V2LON,"Finish";
          MOVE       "Finish",CODEDES2
          MOVE       "ZZZZZZZ",ENDLOCN
          GOTO       LOCN9999
.
.-------- "?" option, call location codes screen ----
.
LOCN8000  MOVE       ZERO,LOCATNS
          CALL       MRTLOCDS                        * locations summary screen
          CALL       DISP0000                        * redisplay screen
          BRANCH     EXIT,LOCN0500                   * re keyin
          MOVE       LOCATION,STRTLOCN
          DISPLAY    *P25:12,*V2LON,LOCATION
          GOTO       LOCN0900 
.
.-------- "?" option, call location codes screen ---
.
LOCN8500  MOVE       ZERO,LOCATNS
          CALL       MRTLOCDS                        * locations summary screen
          CALL       DISP0000                        * redisplay screen
          BRANCH     EXIT,LOCN1000                   * re keyin
          MOVE       LOCATION,ENDLOCN
          DISPLAY    *P25:13,*V2LON,LOCATION
.
LOCN9000  PACK      KEY7,ENDLOCN
          CALL      RDMRLOC1                          * read locations file 
          BRANCH    OVRCD,LOCN9500
          MOVE      ENDLOCN,CODEDES2                 * code exists continue..
          MOVE      MRLODESC,DESCRPT2                  * get description
          DISPLAY   *P35:13,DESCRPT2;                * display description
          MATCH     STRTLOCN,ENDLOCN                 * check ranges are valid
          GOTO      LOCN7000 IF LESS
          GOTO      LOCN9999
.
.-------- invalid code ranges ------
.
LOCN7000  DISPLAY   *P1:24,*B,*EL,"2nd Range Must Be Greater Than 1st Range.  ";
          CALL      HITENTER
          GOTO      LOCN1000                        * re enter
.
.------- invalid code entered ----
.
LOCN9500  DISPLAY   *P1:24,*B,*EL,"Code Does Not Exist.  ";
          CALL      HITENTER
          GOTO      LOCN1000 
.
LOCN9999  RETURN
+
.********************************************************************** 
.*                             RECV0000                               *
.*                    keyin the range for Receiver codes              *
.**********************************************************************
RECV0000  
          DISPLAY   *P1:11,*EF:
                    *P1:12,"Current Receiver From : ":
                    *P1:13,"Current Receiver To   : ";
.
. -----  Keyin the first code range ----
.
RECV0500  MOVE      SP30,DESCRPT1
          DISPLAY   *P25:12,*EL,UNDLN6;
          KEYIN     *P25:12,*V2LON,STRTRECV;             * keyin 1st code 
          DISPLAY   *P25:12,*V2LON,STRTRECV;             * keyin 1st code 
.
          MATCH     QUEST,STRTRECV
          GOTO      RECV8000 IF EQUAL               * display Receiver routine
.
          ENDSET    STRTRECV
          APPEND    SP6,STRTRECV
          RESET     STRTRECV
.
          MATCH     SP6,STRTRECV                      * check for spaces
          GOTO      RECV0900 IF NOT EQUAL           
.
          DISPLAY   *P25:12,*V2LON,"Start ";  
          MOVE      "Start ",CODEDES1
          GOTO      RECV1000
.
.-------- check input to see if exists ----
.
RECV0900  MOVE      SP30,DESCRPT1
          PACK      KEY6,STRTRECV
          CALL      RDMRSTF1                          * read staff reg file 
          BRANCH    OVRCD,RECV0950
          MOVE      STRTRECV,CODEDES1
          MOVE      MRSTSNAM,DESCRPT1                 * get description
          ENDSET    DESCRPT1                         * reset pointers
.
RECV0920  CMATCH    " ",DESCRPT1                     * match for spaces
          GOTO      RECV0930 IF NOT EQUAL            * if no spaces get 1st name
          BUMP      DESCRPT1,-1                      * bump back by -1
          GOTO      RECV0920
.
RECV0930  APPEND    ", ",DESCRPT1                    * if no more spaces append
          APPEND    MRSTGNAM,DESCRPT1                 * given name to field
          RESET     DESCRPT1
          DISPLAY   *P35:12,DESCRPT1;
          GOTO      RECV1000
.
.------- invalid code entered ----
.
RECV0950  DISPLAY   *P1:24,*B,*EL,"Code Does Not Exist.  ";
          CALL      HITENTER
          GOTO      RECV0500 
.
. -----  Keyin the 2nd range code -----
.
RECV1000  MOVE      SP30,DESCRPT2
          DISPLAY   *P25:13,*EL,UNDLN6;
          KEYIN     *P25:13,*V2LON,ENDRECV;
          DISPLAY   *P25:13,*V2LON,ENDRECV;
.
          MATCH     QUEST,ENDRECV
          GOTO      RECV8500 IF EQUAL               * display staff codes
.
          ENDSET     ENDRECV
          APPEND     SP6,ENDRECV
          RESET      ENDRECV
.
          MATCH      SP6,ENDRECV
          GOTO       RECV9000 IF NOT EQUAL
.
          DISPLAY    *P25:13,*V2LON,"Finish";
          MOVE       "Finish",CODEDES2
          MOVE       "ZZZZZZ",ENDRECV
          GOTO       RECV9999
.
.-------- "?" option, call Staff codes screen ----
.
RECV8000  CALL       MRTSTFDS                      * staff codes summary screen
          CALL       DISP0000                      * redisplay screen
          BRANCH     EXIT,RECV0500                   * re keyin
          MOVE       KEY6,STRTRECV
          DISPLAY    *P25:12,*V2LON,KEY6
          GOTO       RECV0900
.
.-------- "?" option, call staff codes screen ---
.
RECV8500  CALL       MRTSTFDS                      * staff codes summary screen
          CALL       DISP0000                      * redisplay screen
          BRANCH     EXIT,RECV1000                   * re keyin
          MOVE       KEY6,ENDRECV
          DISPLAY    *P25:13,*V2LON,KEY6
.
RECV9000  MOVE      SP30,DESCRPT2
          PACK      KEY6,ENDRECV
          CALL      RDMRSTF1                          * read staff reg file 
          BRANCH    OVRCD,RECV9500
          MOVE      ENDRECV,CODEDES2
          MOVE      MRSTSNAM,DESCRPT2                 * get description
          ENDSET    DESCRPT2                         * reset pointers
.
RECV9200  CMATCH    " ",DESCRPT2                     * match for spaces
          GOTO      RECV9300 IF NOT EQUAL            * if no spaces get 1st name
          BUMP      DESCRPT2,-1                      * bump back by -1
          GOTO      RECV9200
.
RECV9300  APPEND    ", ",DESCRPT2                    * if no more spaces append
          APPEND    MRSTGNAM,DESCRPT2                 * given name to field
          RESET     DESCRPT2
          DISPLAY   *P35:13,DESCRPT2;
          MATCH     STRTRECV,ENDRECV              * check if valid code ranges
          GOTO      RECV9400 IF LESS
          GOTO      RECV9999
.
.------- invalid code ranges -----
.
RECV9400  DISPLAY   *P1:24,*B,*EL,"2nd Range Must Be Greater Than 1st Range.  ";
          CALL      HITENTER
          GOTO      RECV1000                        * re enter
.
.------- invalid code entered ----
.
RECV9500  DISPLAY   *P1:24,*B,*EL,"Code Does Not Exist.  ";
          CALL      HITENTER
          GOTO      RECV1000 
.
RECV9999  RETURN
+
.************************************************************************
.*                           DISP0000                                   *
.*                        redisplay screen after "?" option             *
.************************************************************************
DISP0000  DISPLAY   *P1:3,*EF:
                    *P1:4,"Home Location : ",*V2LON,HOMELOCN,*HOFF:
                    *P35:4,HOMEDESC:
                    *P1:6,*V2LON,"0 ",*HOFF,"= Exit":
                    *P1:7,*V2LON,"1 ",*HOFF,"= By Current Location":
                    *P1:8,*V2LON,"2 ",*HOFF,"= By Current Receiver":
                    *P1:10,"Please Select : ",*V2LON,OPTION,*HOFF;
.
.-------- redisplay location code ranges -----
.-------- branch on option to determine which sequence is used ----
.
          BRANCH    OPTION,DISP1000,DISP7000
DISP1000  DISPLAY   *P1:12,"Current Location From : ":    * 1 = By Location
                    *P1:13,"Current Location To   : ";
.
          MATCH     SP7,STRTLOCN                     * if spaces entered 
          GOTO      DISP4000 IF NOT EQUAL            * default to 'start'
          DISPLAY   *P25:12,*V2LON,CODEDES1;
          GOTO      DISP5000   
DISP4000  DISPLAY   *P25:12,*V2LON,STRTLOCN,*HOFF:   * if code entered, display
                    *P35:12,DESCRPT1;
.
DISP5000  MATCH     SP7,ENDLOCN                      * if spaces entered
          GOTO      DISP6000 IF NOT EQUAL            * default to 'finish'
          DISPLAY   *P25:13,*V2LON,CODEDES2;
          GOTO      DISP9999
DISP6000  DISPLAY   *P25:13,*V2LON,ENDLOCN,*HOFF:    * if code entered, display
                    *P35:13,DESCRPT2;
          GOTO      DISP9999
.
.-------- by receiver sequence option = 2 -------
.
DISP7000  DISPLAY   *P1:12,"Current Receiver From : ":    * 2 = By Receiver
                    *P1:13,"Current Receiver To   : ";
          MATCH     SP6,STRTRECV                     * if spaces entered 
          GOTO      DISP7200 IF NOT EQUAL            * default to 'start'
          DISPLAY   *P25:12,*V2LON,CODEDES1;
          GOTO      DISP7300   
DISP7200  DISPLAY   *P25:12,*V2LON,STRTRECV,*HOFF:   * if code entered, display
                    *P35:12,DESCRPT1;
.
DISP7300  MATCH     SP6,ENDRECV                      * if spaces entered
          GOTO      DISP7400 IF NOT EQUAL            * default to 'finish'
          DISPLAY   *P25:13,*V2LON,CODEDES2;
          GOTO      DISP9999
DISP7400  DISPLAY   *P25:13,*V2LON,ENDRECV,*HOFF:    * if code entered, display
                    *P35:13,DESCRPT2;
.
DISP9999  RETURN
+
.************************************************************************
.*                           EXTR0000                                   *
.*            Read necessary files and extract relevant information     * 
.************************************************************************
EXTR0000    MOVE       FALSE,EXIT 
            MOVE       ONE,RECOUNT 
            MOVE       ZERO,RECDCNT 
            MOVE       ZERO,TOTCNT
            MATCH      "IBARSH99",PGM
            IF         @EQUAL
              MATCH      SP7,ENDLOCN
              IF         @EQUAL
                MOVE       "zzzzzzz",ENDLOCN
              ENDIF
              MATCH      SP6,ENDRECV
              IF         @EQUAL
                MOVE       "zzzzzz",ENDRECV
              ENDIF
            ENDIF
.
.-------- perform a positioning read on history file ------
.
EXTR2000    PACK       KEY35,OUTSTAT,FROMDATE,SP30
            CALL       RSMRHIS2                    * position on history file
.
            DISPLAY    *P1:24,*EL,"Movement : ";
.
.--------- Read Tracking History File -----
.
EXTR3000    CALL       RKMRHIS2                     * read key sequential
            BRANCH     OVRCD,EXTR9000
.
            UNPACK     MRHIDATE,CCENT,CYEAR,CMON,CDAY
            CALL       PACDATE
            DISPLAY    *P12:24,*V2LON,CPCDATE
.
.---------- validate date ranges ------------
.
EXTR3500    MATCH      SP8,MRHIDDUE                  * check date for spaces
            GOTO       EXTR3000 IF EQUAL
.
            MATCH      OUTSTAT,MRHISTAT              * check for status 1=Out
            GOTO       EXTR3000 IF NOT EQUAL                            2=In
.
            MATCH      FROMDATE,MRHIDDUE             * test if 1st date 
            GOTO       EXTR3000 IF LESS              * is within range 
.
            MATCH      MRHIDDUE,TODATE               * check if 2nd date    
            GOTO       EXTR9000 IF LESS              * is within range 
.
.---------- unpack dates and retrieve relevant data ------
.
            UNPACK     MRHIDDUE,VCENT,VYEAR,VMON,VDAY
            PACK       DUEDATE,VDAY,SLASH,VMON,SLASH,VCENT,VYEAR
.
            UNPACK     MRHIDATE,RCENT,RYEAR,RMON,RDAY
            PACK       BORDATE,RDAY,SLASH,RMON,SLASH,RCENT,RYEAR
.
            PACK       BORTIME,MRHITIME
            DISPLAY    *P24:24,*EL,*P25:24,"Date : ",*V2LON,BORDATE,*HOFF;
.
.--------- Extract other relevant details  -----
.
            PACK       KEY7,MRHIDHOS,MRHILOC,SP70 * read location file to get 
            CALL       RDMRLOC1                  * description
            BRANCH     OVRCD,EXTR7000
            MOVE       MRLODESC,LOCATION          * move to temp variable 
.
.--------- extract description from staff register file -----
.
EXTR4000    PACK       RECEIVER,SP30
            PACK       KEY6,MRHIRECV
            CALL       RDMRSTF1             * read staff register file
            IF         OVRCD=1
              IF         MRCNSTFF=1
                GOTO       EXTR6000         * Continue with no receiver
              ELSE
                GOTO       EXTR7000         * Get next patient
              ENDIF
            ENDIF
            MOVE       MRSTSNAM,RECEIVER    * move surname to temp var.
            ENDSET     RECEIVER             * reset pointers
.
EXTR4100    CMATCH     " ",RECEIVER
            GOTO       EXTR4200 IF NOT EQUAL
.
            BUMP       RECEIVER,-1          * bump back by 1
            GOTO       EXTR4100
.
EXTR4200    APPEND     ", ",RECEIVER        * if no more spaces
            APPEND     MRSTGNAM,RECEIVER    * append given name to field
            RESET      RECEIVER
.
.--------- extract details from tracking master file ------
.
EXTR6000    PACK       KEY10,MRHIKEY
            CALL       RDMRMAS2                  * read tracking master file
            BRANCH     OVRCD,EXTR7000
.
.---------- check for which HOME location is used ----
.     
            MATCH      SP7,HOMELOCN                 * if spaces then all  
            GOTO       EXTR6500 IF EQUAL            * locations are required
.
            PACK       LOCNTEST,MRMAHHOS,MRMAHLOC,SP70
.
            MATCH      PRTCODE,LOCNTEST            * match home location to 
            GOTO       EXTR7000 IF NOT EQUAL        * home location in mrtmast.
.
.--------- branch on option to determine sequence ----
.
EXTR6500    BRANCH     OPTION,EXTR6600,EXTR6700 
.
EXTR6600    MOVE       LOCATION,DEPTYPE          * option=1, by location
.
            PACK       LOCNTEST,MRHIDHOS,MRHILOC,SP70
            MATCH      STRTLOCN,LOCNTEST         * test if location code
            GOTO       EXTR7000 IF LESS          * is within range
.
            MATCH      LOCNTEST,ENDLOCN        
            GOTO       EXTR7000 IF LESS 
.
            GOTO       EXTR6800                  * ok... continue
.
.------- By Receiver -----
.
EXTR6700    MOVE       RECEIVER,DEPTYPE          * option=2, by receiver
            MATCH      STRTRECV,MRHIRECV         * test if receiver code
            GOTO       EXTR7000 IF LESS          * is within range
            MATCH      MRHIRECV,ENDRECV    
            GOTO       EXTR7000 IF LESS
.
.--------- check to see if data is within code ranges -----
.
EXTR6800    PACK       RECORDID,MRMAURNO,MRMAHHOS,MRMAHLOC,MRMADOTY:
                                MRMAVOLN
            DISPLAY    *P45:24,*EL,"Record Id : ",*V2LON,RECORDID,*HOFF;
.
            MOVE       TWO,RECOUNT               * 1st record read sucessful 
.
.--------- call write module, to write to temporary file ----
.
            CALL       WRTP0000                 * write details
            ADD        ONE,RECDCNT              * add 1 to record counter
.
.--------- clear variables -----
.
EXTR7000    UNPACK     SP20,DUEDATE,MRHIKEY
            MOVE       SP30,RECORDID
            MOVE       SP30,RECEIVER
            MOVE       SP10,BORDATE
            MOVE       SP8,BORTIME
            MOVE       SP30,LOCATION
            MOVE       SP30,DEPTYPE
.
.-------- read next record ----
.
            GOTO       EXTR3000                          * loop 
.
EXTR9000    COMPARE    ONE,RECOUNT
            GOTO       EXTR9999 IF NOT EQUAL
          DISPLAY   *P1:24,*EL,*B,"Details Not On File.  ";
          CALL      HITENTER
            CALL       PRT8100
            CALL       EXPR0000                      * print final line
.
EXTR9999    RETURN
+
.*************************************************************************
.*                             WRTP0000                                  *
.*                   write details to temp file                          *
.*                                                                       *
.*   Temporary file is used for ALL "2" Sequences.......                 *
.*************************************************************************
WRTP0000  
.
.---------- write to temp file according to which option was chosen -----
.---------- option 1 = By Location Sequence
.---------- option 2 = By Receiver Sequence
.
            BRANCH     OPTION,WRTP1000,WRTP2000
            GOTO       WRTP0000
.
WRTP1000    PACK       KEY55,LOCATION,BORDATE,BORTIME,MRHIKEY
            WRITE      TEMPFILE,KEY55;LOCATION,BORDATE,BORTIME,MRHIKEY:
                                      DUEDATE,RECORDID,RECEIVER
            GOTO       WRTP5000
. 
WRTP2000    PACK       KEY55,RECEIVER,BORDATE,BORTIME,MRHIKEY
            WRITE      TEMPFILE,KEY55;LOCATION,BORDATE,BORTIME,MRHIKEY:
                                      DUEDATE,RECORDID,RECEIVER
.
.--------- write totals details to temptotl file for report totals
.
WRTP5000    PACK       KEY30,DEPTYPE 
            MOVE       ZERO,OVRCD
            RESET      KEY30
            READ       TEMPTOTL,KEY30;DEPTYPE,TOTCNT     * read temptotl file
            GOTO       WRTP6000 IF OVER
.
.---------  if record already exists increment counter by 1 and update -----
.
            ADD        ONE,TOTCNT
            UPDATE     TEMPTOTL;DEPTYPE,TOTCNT
            GOTO       WRTP9999
.
.---------- if record doesn't exist write new record with total counter of 1 --
.
WRTP6000    MOVE       ONE,TOTCNT
            PACK       KEY30,DEPTYPE,TOTCNT 
            MOVE       ZERO,OVRCD
            RESET      KEY30
            WRITE      TEMPTOTL,KEY30;DEPTYPE,TOTCNT     * write temptotl file
WRTP9999    RETURN
.
.*************************************************************************
.*                             TEMP0000                                  *
.*                   close and open temp file then read sequentially     *
.*************************************************************************
TEMP0000    MOVE       FALSE,EXIT
            MOVE       ONE,BEGINCNT
            READ       TEMPFILE,SP30;;
TEMP1000    READKS     TEMPFILE;LOCATION,BORDATE,BORTIME,MRHIKEY,DUEDATE:
                                RECORDID,RECEIVER
            GOTO       TEMP1500 IF OVER             * if over print totals
.
.-------- print report details -----
.
            CALL       PRT0000                   * print details
            GOTO       TEMP1000                  * read next record
.
.---------- print subtotals and grand total -----
.
TEMP1500    CALL       LNPR0000                  * print line
            READ       TEMPTOTL,SP30;;
TEMP2000    READKS     TEMPTOTL;DEPTYPE,TOTCNT
            GOTO       TEMP9000 IF OVER
.
            COMPARE    "50",LINECNT              * test for paging
            CALL       TEMP8000 IF NOT LESS
.
            PRINT      *N,DEPTYPE,SP2,COLON,SP1,TOTCNT;
            ADD        ONE,LINECNT
            GOTO       TEMP2000                  * read next record
.
TEMP8000    ADD        ONE,PAGENO
            MOVE       ONE,CNOUNDLN
            MOVE       SEQTYPE,CPHDROPT
            CALL       IBACLOCK
            CALL       HEAD132
            BRANCH     ITEM,TEMP8300,TEMP8400
TEMP8300    PRINT      *N,*40,"HOME LOCATION   : ",PRTCODE,SP5,HOMEDESC:
                       *N,*N,*40,"AS AT DATE      : ",OPENDATE:
                       *N,*N,*40,"CODE RANGE FROM : ",CODEDES1,SP5,DESCRPT1:
                       *N,*51,"TO   : ",CODEDES2,SP5,DESCRPT2;
            GOTO       TEMP8600
TEMP8400    PRINT      *N,*40,"HOME LOCATION   : ",PRTCODE,SP5,HOMEDESC:
                       *N,*N,*40,"DATE RANGE FROM : ",OPENDATE," TO ",CLOSDATE:
                       *N,*N,*40,"CODE RANGE FROM : ",CODEDES1,SP5,DESCRPT1:
                       *N,*51,"TO   : ",CODEDES2,SP5,DESCRPT2;
TEMP8600    PRINT      *N;
            MOVE       "6",LINECNT
            RETURN
TEMP9000    PRINT      *N,*N,"TOTAL RECORDS OVERDUE           : ",RECDCNT,*N;
            CALL       EXPR0000                  * Print final line 
TEMP9999    RETURN
+
.*************************************************************************
.*                             PRT0000                                   *
.*                  print code/name sequence hardcopy                    *
.*************************************************************************
PRT0000     DISPLAY    *P1:24,*EL,*P40:24,*V2LON,"**** GENERATING REPORT ****":
                       *HOFF; 
            CLOCK      TIME,CTIMEIS
            COMPARE    "50",LINECNT
            CALL       PRT8000 IF NOT LESS
.
            PRINT      *N,"|",*3,DUEDATE,*14,"|",*16,BORDATE,*28,BORTIME:
                          *38,"|",*40,RECORDID,*62,"|",*64,RECEIVER,*98,"|":
                          *100,LOCATION,*134,"|";
            ADD        "1",LINECNT
            RETURN
.
PRT8000     BRANCH     BEGINCNT,PRT8100
            CALL       LNPR0000                      * print line
PRT8100     ADD        ONE,PAGENO 
            MOVE       ONE,CNOUNDLN
            MOVE       SEQTYPE,CPHDROPT
            CALL       IBACLOCK
            CALL       HEAD132
            BRANCH     ITEM,PRT8300,PRT8400
PRT8300     PRINT      *N,*40,"HOME LOCATION   : ",PRTCODE,SP5,HOMEDESC:
                       *N,*N,*40,"AS AT DATE      : ",OPENDATE:
                       *N,*N,*40,"CODE RANGE FROM : ",CODEDES1,SP5,DESCRPT1:
                       *N,*51,"TO   : ",CODEDES2,SP5,DESCRPT2;
            GOTO       PRT8600
PRT8400     PRINT      *N,*40,"HOME LOCATION   : ",PRTCODE,SP5,HOMEDESC:
                       *N,*N,*40,"DATE RANGE FROM : ",OPENDATE," TO ",CLOSDATE:
                       *N,*N,*40,"CODE RANGE FROM : ",CODEDES1,SP5,DESCRPT1:
                       *N,*51,"TO   : ",CODEDES2,SP5,DESCRPT2;
PRT8600     PRINT      *N,*N,"*----------------------------":
                             "----------------------------------------":
                             "----------------------------------------":
                             "---------------------*":
                       *N,"|",*3,"Due Date",*14,"|",*16,"Date/Time Borrowed":
                       *38,"|",*40,"Record Identification",*62,"|":
                       *64,"Receiver",*98,"|",*100,"Location",*134,"|":
                       *N,"*----------------------------------------":
                          "---------------------------------------":
                          "---------------------------------------":
                          "-----------*";
            MOVE       "6",LINECNT
            MOVE       TWO,BEGINCNT
.
PRT9999     RETURN
.
EXPR0000    PRINT      *N,"**** END OF REPORT ****";
            RETURN
.
LNPR0000    PRINT      *N,"*----------------------------------------":
                          "---------------------------------------":
                          "--------------------------------------":
                          "------------*";
            RETURN
.
            INC        STD001IO
            INC        MRTLOCDS
            INC        MRTSTFDS
            INC        TFILENAM
.
            INC        IBASEQIO/INC
            INC        MRTMASIO/INC
            INC        MRTLOCIO/INC
            INC        MRTSTFIO/INC
            INC        MRTHISIO/INC
            INC        WEBERRIO/INC
            INC        MRTRESIO/INC
            INC        MRTMOVIO/INC
.
