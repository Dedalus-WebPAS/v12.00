. ******************************************************************************
. *              P R O G R A M  S U M M A R Y                                  *
. *              -------------  -------------                                  *
. *                                                                            *
. *     PROGRAM NAME:     IBAPAT68                                             *
. *                                                                            *
. *     FUNCTION:   Expected Patients By Doctor Report                         *
. *                                                                            *
. *     DATE WRITTEN:     04/10/07                                             *
. *                                                                            *
. *     AUTHOR:           PETER VELA                                           *
. *                                                                            *
. *     MODS:                                                                  *
. *                                                                            *
. *     V10.13.01 05/12/2018  Don Nguyen    TSK 0838558                        *
. *               Deleted temp file (PATROL) after processing                  *
. *     V10.08.01 25/11/2016 Ania P         CAR 261630                         *
. *               Port CAR changes                                             *
. *     V10.05.01 22/01/2015 Ebon Clements  CAR 306803                         *
. *               Do not print booking that are admitted as they have already  *
. *               been printed                                                 *
. *     V10.01.01 03/02/2011 Jill Parkinson CAR 233088                         *
. *               Added pmsvx1af                                               *
. *     V9.10.02  15/08/2008 Ebon Clements  CAR 176136                         *
. *               Added ward/doctor range to report header                     *
. *               Fixed ward range filter                                      *
. *     V9.10.01  14/08/2008 Ebon Clements  CAR 176136                         *
. *               Don't print pre admitted bookings                            *
. *     V9.09.02  13/03/2008 Ebon Clements  CAR 163415                         *
. *               Changed name to expected patients by doctor report.          *
. *               Fixed booking status test                                    *
. *     V9.09.01  04/10/2007 Peter Vela     CAR 148954                         *
. *               Created program                                              *
. ******************************************************************************
.
          INC       STD001FD   
.
          INC       PATCONFD/INC
          INC       PATDHEAD/INC
          INC       PATCALAG/INC
          INC       BOKRC1FD/INC
          INC       PATCODFD/INC
          INC       PATMI1FD/INC
          INC       PMSVX1FD/INC
          INC       PATMA1FD/INC
          INC       PATDO1FD/INC
          INC       PATWR1FD/INC
          INC       PMSHCPFD/INC
          INC       PATRGMFD/INC
          INC       IBASEQFD/INC 
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
+
.
.               WORK AREA
.
.
PATROL    FILE      ASCII, FIXED=256
PATTMP    IFILE     SQL, FIXED=89, KEY="UC1-34"
.
. ----- Tempfile consists of following vars -----
.
. Name          Type      Length     Physical     Start   Description
. ----          ----      ------     --------     -----   -----------
TMPDCNUM        DIM        10         10            1
TMPADATE        DIM        8          8            11
TMPATIME        DIM        8          8            19
TMPDUNIQ        DIM        8          8            27
TMPAWARD        DIM        3          3            35
TMPWABED        DIM        3          3            38
TMPAURNO        DIM        8          8            41
TMPAADMN        DIM        8          8            49
TMPRGM01        DIM        10         10           59
TMPRGM02        DIM        10         10           69
TMPRGM03        DIM        10         10           79
.
. End of Record                                    89
.
BJDAY     FORM      3
CJDAY     FORM      3
.
FNAMER    DIM       8
FNAMET    DIM       8
.
.      EXTRA VARIABLES
.
CMDLINE   DIM       50
.
SKIP      FORM      1
SDOCNUM   DIM       10
DOCNUM    DIM       6
.
DALPHA    DIM       10
DIM6      DIM       6
DIM8      DIM       8
DIM10     DIM       10
DIM10A    DIM       10
DIM10C    DIM       10
DIM10D    DIM       10
DIAG1     DIM       38
DNAME     DIM       14
DOCCODE   DIM       10
DOCTNAM   DIM       26
DESCDOC1  DIM       26
DESCDOC2  DIM       26
DESCCOD1  DIM       20
DESCCOD2  DIM       20
.
ENDDATE   DIM       8
.
FINISH    DIM       6
FROMDATE  DIM       8
.
PNAME     DIM       30
.
RANGCOD1  DIM       3
RANGCOD2  DIM       3
RANGDOC1  DIM       6
RANGDOC2  DIM       6
REPTYPE   FORM      1
.
START     DIM       6
.
UNIQUE    FORM      8
................................................................................
PRGID     INIT      "IBAPAT68"
PRGNAM    INIT      "EXPECTED PATIENTS BY DOCTOR REPORT"
VERSION   INIT      "V12.00.00"
................................................................................
+
.         START OF PROGRAM
.
          DISPLAY   *ES;
          CALL      DISPHEAD
.
          DISPLAY   *P56:24,*EL,"Opening patmi1af";
          OPEN      PATMI1A2,"patmi1af"
          OPEN      PMSVX1A1,"pmsvx1af"
.
          OPEN      PATMI1A3,"patmi1af"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P64:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P64:24,"patwr1af";
          OPEN      PATWR1A1,"patwr1af"
          OPEN      PATWR1A2,"patwr1af"
          OPEN      PATWR1A3,"patwr1af"
          OPEN      PATWR1A4,"patwr1af"
.
          DISPLAY   *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
          OPEN      PMSHCPA2,"pmshcpaf"
          OPEN      PMSHCPA3,"pmshcpaf"
.
          DISPLAY   *P64:24,"patrgmaf";
          OPEN      PATRGMA1,"patrgmaf"
.
          DISPLAY   *P64:24,"bokrc1af";
          OPEN      BOKRC1A4,"bokrc1af"
.
          CALL      TFILENAM
          MOVE      TFILNAME,FNAMET
          CALL      TFILENAM
          MOVE      TFILNAME,FNAMER
+
................................................................................
.        START OF PROGRAM
.
.             SELECT OPTION
.
START     MOVE      ONE,OPTION
.
BRNCH     DISPLAY   *P1:6,"From Date : ":
                    *P1:7,"To   Date : ";
.
          CALL      KSTR0000                 * Keyin the start date
          BRANCH    EXIT,ENDIT               * Nothing input
.
          CALL      KEND0000                 * Keyin the ending date
          BRANCH    EXIT,BRNCH               * Nothing input
.
          CALL      RANC0000                 * Enter Doctor Range
          CALL      RAND0000                 * Enter Ward Range
.
          GOTO      PSKIP
.
NOADMN    DISPLAY   *P20:24,*B,*EL,*V2LON:
                    "** No Current Admissions by Doctor **",*W3;
          GOTO      ENDIT
.
PSKIP     KEYIN     *P1:18,"Do you want a new page for each Doctor (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ",*EL,*V2LON,ANS;
.
          CMATCH    "Y",ANS
          GOTO      PSKIPY IF EQUAL
.
          CMATCH    "N",ANS
          GOTO      PSKIPN IF EQUAL
.
          BEEP
          GOTO      PSKIP
.
PSKIPY    MOVE      ZERO,SKIP
          GOTO      ADMNNO
.
PSKIPN    MOVE      ONE,SKIP
.
.          GET ONLY PRE ADM AND CURRENT ADMISSIONS..IE ASTAT=1,2
.
ADMNNO    CALL      KILLIDX
          CALL      CREAIDX
.
          PREP      PATTMP,FNAMET
          MOVE      ONE TO UNIQUE
.
          CALL      IBACLOCK 
          PACK      DIM8,CCC,CYY,CMM,CDD 
          REP       " 0",DIM8           
.
          PACK      KEY16 WITH FROMDATE,SP70
          CALL      RDSMISS3
          MOVE      "60",CLNO
          DISPLAY   *P1:24,*EL,*P20:24,*V2LON:
                    "** Scanning ADMISSIONS **",*W2;
.
          DISPLAY   *P20:24,*EL,"Admission :";
.
NEXTA     CALL      RDKMISS3
          BRANCH    OVRCD OF BOOKNG
.
          CALL      CLRTMP00
.
          MATCH     ADATE,ENDDATE
          GOTO      BOOKNG IF LESS
.
          MATCH     SP70,ADOCTA
          GOTO      NEXTA IF EQUAL
          GOTO      NEXTA IF EOS
.
          MATCH     RANGDOC1,ADOCTA
          GOTO      NEXTA IF LESS
.
          MATCH     ADOCTA,RANGDOC2
          GOTO      NEXTA IF LESS
.
          MOVE      AADMNO,TMPAADMN
          MOVE      ADATE,TMPADATE
          MOVE      ATIME,TMPATIME
          MOVE      AURNO,TMPAURNO
          MOVE      ADOCTA,TMPDCNUM
.
          COMPARE   ONE,ASTAT
          IF        @EQUAL
            MOVE      PTMIXWRD,TMPAWARD
            MOVE      PTMIEBED,TMPWABED
.
            MATCH     RANGCOD1,TMPAWARD
            GOTO      NEXTA IF LESS
.
            MATCH     TMPAWARD,RANGCOD2
            GOTO      NEXTA IF LESS
.
            GOTO      GETRGM
          ENDIF
.
          COMPARE   TWO,ASTAT
          IF        @EQUAL
            MOVE      AWARD,TMPAWARD
            MOVE      ABED,TMPWABED
.
            MATCH     RANGCOD1,TMPAWARD
            GOTO      NEXTA IF LESS
.
            MATCH     TMPAWARD,RANGCOD2
            GOTO      NEXTA IF LESS
.
            GOTO      GETRGM
          ENDIF
.
          GOTO      NEXTA
.
GETRGM    PACK      KEY10,AADMNO,SP1,ONE,SP70
          CALL      RDPTRGM1
          IF        OVRCD=0
             MOVE     PTRGREGM,TMPRGM01
          ENDIF
.
          PACK      KEY10,AADMNO,SP1,TWO,SP70
          CALL      RDPTRGM1
          IF        OVRCD=0
             MOVE     PTRGREGM,TMPRGM02
          ENDIF
.
          PACK      KEY10,AADMNO,SP1,THREE,SP70
          CALL      RDPTRGM1
          IF        OVRCD=0
             MOVE     PTRGREGM,TMPRGM03
          ENDIF
.
          DISPLAY   *P32:24,*V2LON,AADMNO;
.
          MOVE      UNIQUE,TMPDUNIQ
          PACK      KEY34 WITH TMPDCNUM,TMPADATE,TMPATIME,TMPDUNIQ,SP70
          CALL      WRTEMPD
          ADD       ONE,UNIQUE
          GOTO      NEXTA
+
.------------------------------------------------------------------------------
. Bookings
.
BOOKNG    PACK      KEY16 WITH FROMDATE,SP70
          CALL      RSBKREC4
          MOVE      "60",CLNO
          DISPLAY   *P1:24,*EL,*P20:24,*V2LON:
                    "** Scanning BOOKINGS **",*W2;
.
          DISPLAY   *P20:24,*EL,"Booking :";
.
NEXTB     CALL      RKBKREC4
          BRANCH    OVRCD OF SORTF
.
          CALL      CLRTMP00
.
          MATCH     BKREEDAT,ENDDATE
          GOTO      SORTF IF LESS
.
          MATCH     SP70,BKREADOC
          GOTO      NEXTB IF EQUAL
          GOTO      NEXTB IF EOS
.
          MATCH     RANGDOC1,BKREADOC
          GOTO      NEXTB IF LESS
.
          MATCH     BKREADOC,RANGDOC2
          GOTO      NEXTB IF LESS
.
          COMPARE   ONE,BKRESTAT            * Skip if pre admitted
          GOTO      NEXTB IF EQUAL
.
          COMPARE   TWO,BKRESTAT            * Skip if cancelled
          GOTO      NEXTB IF EQUAL
.
          COMPARE   THREE,BKRESTAT          * Skip if admitted
          GOTO      NEXTB IF EQUAL
.
          COMPARE   FOUR,BKRESTAT           * Skip if discharged
          GOTO      NEXTB IF EQUAL
.
          MOVE      BKREBOOK,TMPAADMN
          MOVE      BKREEDAT,TMPADATE
          MOVE      BKREATIM,TMPATIME
          MOVE      BKREURNO,TMPAURNO
          MOVE      BKREADOC,TMPDCNUM
.
          MOVE      BKREWARD,TMPAWARD
          MOVE      BKREEBED,TMPWABED
.
          MATCH     RANGCOD1,TMPAWARD
          GOTO      NEXTB IF LESS
.
          MATCH     TMPAWARD,RANGCOD2
          GOTO      NEXTB IF LESS
.
          PACK      KEY10,BKREBOOK,SP1,ONE,SP70
          CALL      RDPTRGM1
          IF        OVRCD=0
             MOVE     PTRGREGM,TMPRGM01
          ENDIF
.
          PACK      KEY10,BKREBOOK,SP1,TWO,SP70
          CALL      RDPTRGM1
          IF        OVRCD=0
             MOVE     PTRGREGM,TMPRGM02
          ENDIF
.
          PACK      KEY10,BKREBOOK,SP1,THREE,SP70
          CALL      RDPTRGM1
          IF        OVRCD=0
             MOVE     PTRGREGM,TMPRGM03
          ENDIF
.
          DISPLAY   *P32:24,*V2LON,AADMNO;
.
          MOVE      UNIQUE,TMPDUNIQ
          PACK      KEY34 WITH TMPDCNUM,TMPADATE,TMPATIME,TMPDUNIQ,SP70
          CALL      WRTEMPD
          ADD       ONE,UNIQUE
          GOTO      NEXTB
+
.
SORTF     DISPLAY   *P1:14,*EF
.
          MOVE      ZERO,CPAGENO
          MOVE      "60",CLNO
          DISPLAY   *P1:24,*EL,*P20:24,"Doctor Number :";
.
          MOVE      SP70,KEY34
          CALL      RDSSORTD
NEXTS     CALL      RDKSORTD
          BRANCH    OVRCD OF ENDP
.
          MOVE      SP70,DNAME
          MOVE      TMPDCNUM,KEY10
          CALL      RDPMHCP1
.
          MOVE      PMHCGNAM,ANS
          PACK      DNAME WITH ANS,DOT,PMHCSNAM
          MOVE      PMHCSNAM,DALPHA
.
          MOVE      TMPAURNO,KEY8
          CALL      RDMAST1
.
          MOVE      PSNAME,PACSNAME
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      ONE,PACFRMT
          CALL      PACNAME                 * Format the patient name
          MOVE      PACFNAME,PNAME
.
          UNPACK    TMPADATE INTO XCENT,XYEAR,XMON,XDAY
          UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
          PACK      AGEDATE,CCC,CYY,CMM,CDD
          CALL      CALCAGE
.
          UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
          PACK      DIM10C,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
.
          UNPACK    TMPADATE,CCENT,CYEAR,CMON,CDAY
          PACK      DIM10D,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
.
          CALL      DISPDA
.
          DISPLAY   *P37:24,*V2LON,TMPDCNUM;
          GOTO      NEXTS
+
.
.           OVER CONDITION FOUND..PRINT LAST LINE OF -- AND DISPLAY MESSAGE
.
ENDP      COMPARE   ZERO,CPAGENO
          GOTO      NOADMN IF EQUAL
.
          CALL      PAGEND
          PRINT     *N,"  ***  END OF REPORT  ***"
.
          CALL      KILLIDX
.
          DISPLAY   *P20:24,*EL,*V2LON:
                    "** Report Generation Completed **",*W3;
          GOTO      ENDIT
+
.
.     PRINT ACTUAL DATA
.
DISPDA    MATCH     TMPDCNUM,SDOCNUM
          GOTO      CNTPRT2 IF EQUAL
.
          BRANCH    SKIP OF PRTD0
.
          MOVE      "60",CLNO
.
PRTD0     COMPARE   "55",CLNO
          CALL      HEAD IF NOT LESS
.
          MOVE      TMPDCNUM,DIM6
.
          PRINT     *1,"|",DIM6,*8,"|",DNAME:
                    *23,"|",TMPAURNO,*32,"|",PNAME:
                    *63,"|",PSAGEYRS,*67,"|",DIM10C,*78,"|",DIM10D," ",TMPATIME:
                    *98,"|",TMPRGM01:
                    *109,"|",TMPRGM02:
                    *120,"|",TMPRGM03,*132,"|":
.
                    *N,"|",*8,"|",*23,"|",*32,"|",*63,"|",*67,"|",*78,"|":
                    *98,"|",*109,"|",*120,"|",*132,"|"
.
          MOVE      TMPDCNUM,SDOCNUM
          ADD       TWO,CLNO
          RETURN
.
CNTPRT2   COMPARE   "55",CLNO
          CALL      HEAD IF NOT LESS
.
          PRINT     *1,"|",*8,"|":
                    *23,"|",TMPAURNO,*32,"|",PNAME:
                    *63,"|",PSAGEYRS,*67,"|",DIM10C,*78,"|",DIM10D," ",TMPATIME:
                    *98,"|",TMPRGM01:
                    *109,"|",TMPRGM02:
                    *120,"|",TMPRGM03,*132,"|":
.
                    *N,"|",*8,"|",*23,"|",*32,"|",*63,"|":
                    *98,"|",*109,"|",*120,"|",*132,"|"
.
          ADD       TWO,CLNO
          RETURN
+
.
.          LAST LINE ON THE PAGE
.
PAGEND    PRINT     "*---------------------------------------------------":
                    "--------------------------------------------------------":
                    "-----------------------*"
          ADD       ONE,CLNO
          RETURN
+
.
.                 HEADINGS FOR OUTPUT
.
HEAD      MOVE      "",CPHDROPT
.
          CLOCK     TIME,CTIMEIS
          CALL      HEAD132
.
          UNPACK    FROMDATE,CCENT,CYEAR,CMON,CDAY
          PACK      DIM10,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          UNPACK    ENDDATE,CCENT,CYEAR,CMON,CDAY
          PACK      DIM10A,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          PRINT     *40,"Date Range: ",DIM10," - ",DIM10A,*N;
          ADD       ONE,CLNO
.
          PRINT     *40,*+,"Doctor Range: ",DESCDOC1," - ",DESCDOC2,*N;
          ADD       ONE,CLNO
.
          PRINT     *40,*+,"Ward Range: ",DESCCOD1," - ",DESCCOD2,*N;
          ADD       ONE,CLNO
.
          CALL      PAGEND
.
          PRINT     *1,"|Doctor",*8,"|":
               *23,"|   U/R ",*32,"|",*63,"|   |          | Admiss Date/Time":
                    *98,"|",*109,"|":
                    *120,"|",*132,"|":
                    *N,*1,"|Number",*8,"|Doctors Name":
                    *23,"| Number",*32,"| Patients Name":
                    *63,"|Age|  D.O.B.  |":
                    *98,"| Regime 1",*109,"| Regime 2":
                    *120,"| Regime 3",*132,"|"
.
          CALL      PAGEND
.
.    *** CAUSES DOCNUM TO BE PRINTED ON A NEW PAGE NO MATTER WHAT
.
          MOVE      SP6,SDOCNUM
          MOVE      EIGHT,CLNO
          RETURN
+
.       Deleting  AN INDEXED FILE BASED ON PORT
.
KILLIDX   CLOSE     PATTMP
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FNAMET,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          DISPLAY   *P1:9,*EF;
          RETURN
.
CREAIDX   PREP      PATROL,FNAMER
          WRITE     PATROL,SEQ;"isbuild ",FNAMET," 89 UC1-34"
          WEOF      PATROL,SEQ
.
          DISPLAY   *P1:13,*EF,*P1:14;
.
          CLEAR     CMDLINE
          APPEND    "sh ",CMDLINE
          APPEND    FNAMER,CMDLINE
          APPEND    ".txt",CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
          CLOSE     PATROL,DELETE
          DISPLAY   *P1:13,*EF,*P1:14
          RETURN
.
+
WRTEMPD   WRITE     PATTMP,KEY34;TMPDCNUM,TMPADATE,TMPATIME,TMPDUNIQ,TMPAWARD:
                                 TMPWABED,TMPAURNO,TMPAADMN,TMPRGM01,TMPRGM02:
                                 TMPRGM03
          RETURN
.
RDSSORTD  READ      PATTMP,KEY34;;
          RETURN
.
RDKSORTD  MOVE      ZERO,OVRCD
          READKS    PATTMP;TMPDCNUM,TMPADATE,TMPATIME,TMPDUNIQ,TMPAWARD:
                           TMPWABED,TMPAURNO,TMPAADMN,TMPRGM01,TMPRGM02:
                           TMPRGM03
          GOTO      OVERCOND IF OVER
          MOVE      TMPDUNIQ,UNIQUE
          RETURN
.
CLRTMP00  MOVE      SP70,TMPDCNUM
          MOVE      SP70,TMPADATE
          MOVE      SP70,TMPATIME
          MOVE      SP70,TMPDUNIQ
          MOVE      SP70,TMPAWARD
          MOVE      SP70,TMPWABED
          MOVE      SP70,TMPAURNO
          MOVE      SP70,TMPAADMN
          MOVE      SP70,TMPRGM01
          MOVE      SP70,TMPRGM02
          MOVE      SP70,TMPRGM03
.
CLRTMP99  RETURN
.
. *****************************************************************************
. * KSTR0000 : Keyin the start date                                           *
. * Returns  : EXIT = 0   if date was input                                   *
. *                 = 1   if a nothing was input                              *
. *            FROMDATE   starting date (CCYYMMDD)                            *
. *****************************************************************************
.
KSTR0000  MOVE      ZERO,EXIT
          DISPLAY   *P13:6,*EL:
                    *P13:7,*EF;
.
          MOVE      SIX,CVERT                * Line for keyin of date
          MOVE      TEN3,CCOL                * Column for keyin of date
          MOVE      CVERT,EVERT              * Column for error message
          MOVE      "40",ECOL                * Column for error message
          MOVE      ZERO,CHIGHLT             * No highlight
          MOVE      ONE,CDEFDTE
.
          UNPACK    SP6,CDAY,CMON,CYEAR      * Initialise date
          MOVE      SP8,FROMDATE
          MOVE      CCC,CCENT                * Initialise century
.
          CALL      KEYDATE                  * Key in the date
          BRANCH    OVRCD,KSTR9000
.
          PACK      FROMDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",FROMDATE
          GOTO      KSTR9999
.
KSTR9000  MOVE      ONE,EXIT
.
KSTR9999  RETURN
.
. *****************************************************************************
. * KEND0000 : Keyin the end date                      Called by : ML0000     *
. * Returns  : EXIT = 0   if date was input                                   *
. *                 = 1   if a nothing was input                              *
. *            ENDDATE    Endding date (CCYYMMDD)                             *
. *****************************************************************************
.
KEND0000  MOVE      ZERO,EXIT
.
          MOVE      SEVEN,CVERT               * Line for keyin of date
          MOVE      TEN3,CCOL                * Column for keyin of date
          MOVE      CVERT,EVERT              * Column for error message
          MOVE      "40",ECOL                * Column for error message
          MOVE      ZERO,CHIGHLT             * No highlight
          MOVE      ONE,CDEFDTE
.
          MOVE      SP8,ENDDATE
.
          CALL      KEYDATE                  * Key in the date
          BRANCH    OVRCD,KEND9000
.
          PACK      ENDDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",ENDDATE
.
KEND2000  MATCH     FROMDATE,ENDDATE
          GOTO      KEND9999 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B,"To Date May Not be Less than From ":
                    "Date.  ";
          CALL      HITENTER
          GOTO      KEND0000
.
KEND9000  MOVE      ONE,EXIT
.
KEND9999  RETURN
.
.**********************************************************************
.*                              RANC0000                              *
.**********************************************************************
RANC0000  MOVE      SP70,RANGDOC1
          MOVE      "Start",DESCDOC1
          MOVE      "Start  ",START
.
.------ Keyin Doctor From ------
.
          DISPLAY   *P1:12,*EF,"Doctor From : ",UNDLN10:
                    *P1:13,"Doctor To   : "
          MOVE      SP10,RANGDOC1
          MOVE      "15",ECOL
          MOVE      "12",EVERT
          MOVE      ZERO,CKYIMAND
          MOVE      SP6,CKYIDEF6
          CALL      PMSHCPKY
          BRANCH    EXIT,RANC1000,RANC0000
.
          MOVE      PMHCHCPC,RANGDOC1
.
.       Doctor From has been entered
.
RANC0500  MOVE      RANGDOC1,KEY10
          MOVE      SP70,DESCDOC1
.
RANC0600  MOVE      RANGDOC1,START
          CALL      FDOC0000                * format the doctor's name
          MOVE      DOCTNAM,DESCDOC1
.
.       display relevant details on screen
.
RANC1000  DISPLAY   *P15:12,*V2LON,START,*P30:12,*HOFF,DESCDOC1;
.
.------ keyin Doctor To ------
.
RANC2000  MOVE      SP70,RANGDOC2
          MOVE      "Finish",DESCDOC2
          MOVE      "Finish",FINISH
.
          MOVE      SP70,RANGDOC2
          MOVE      "15",ECOL
          MOVE      "13",EVERT
          MOVE      ZERO,CKYIMAND
          MOVE      SP70,CKYIDEF6
          CALL      PMSHCPKY
          BRANCH    EXIT,RANC2040,RANC2000
.
          MOVE      PMHCHCPC,RANGDOC2
          GOTO      RANC2500
.
RANC2040  MOVE      "ZZZZZZZZZZ",RANGDOC2
          GOTO      RANC3000
.
.       Doctor To has been entered
.
RANC2500  MOVE      RANGDOC2,KEY6
          MOVE      SP70,DESCDOC2
.
.       doctor on file, so set up display variables
.
RANC2800  MOVE      RANGDOC2,FINISH
          CALL      FDOC0000                * format the doctor's name
          MOVE      DOCTNAM,DESCDOC2
.
.       display relevant details on screen
.
RANC3000  DISPLAY   *P15:13,*V2LON,FINISH,*P30:13,*HOFF,DESCDOC2;
.
          MATCH     RANGDOC1,RANGDOC2       * a valid range entered ?
          GOTO      RANC9000 IF LESS        * no
          MOVE      FALSE,EXIT              * yes
          GOTO      RANC9999
.
.------ invalid doctor range entered ------
.
RANC9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Doctor To must be greater than or = Doctor From **  ";
          CALL      HITENTER
          GOTO      RANC2000
.
RANC9999  RETURN
+
.**************************************************************************
.*                              FDOC0000                                  *
.*             Format doctors name into the variable DOCTNAM              *
.*             Requires the relevant doctor record read in                *
.**************************************************************************
FDOC0000  CLEAR     DOCTNAM
.
          MATCH     SP70,PMHCTITL              * test doctors title for spaces
          GOTO      FDOC2050 IF EQUAL
          MOVE      PMHCTITL,DOCTNAM           * move doctors title to DOCTNAM
          ENDSET    DOCTNAM
.
.------ skip over extra blanks at the end of the doctors title ------
.
FDOC1000  CMATCH    SP1,DOCTNAM             * test if current character
          GOTO      FDOC2000 IF NOT EQUAL     is a space
          BUMP      DOCTNAM,-1
          GOTO      FDOC1000
.
.------ Append a space and then the doctors given name to DOCTNAM ------
.
FDOC2000  APPEND    SP1,DOCTNAM
.
.------ just append the doctors given name if no title exists ------
.
FDOC2050  MATCH     SP70,PMHCGNAM             * see if given name is spaces
          GOTO      FDOC3050 IF EQUAL
.
          MOVE      PMHCGNAM,ANS
          APPEND    ANS,DOCTNAM
          ENDSET    DOCTNAM
          APPEND    DOT,DOCTNAM
          APPEND    SP1,DOCTNAM
.
.------ just append the doctors surname if no given name exists ------
.
FDOC3050  APPEND    PMHCSNAM,DOCTNAM
          ENDSET    DOCTNAM
.
.------ Move to the end of doctors surname ------
.
FDOC3200  CMATCH    SP1,DOCTNAM             * test if current character is
          GOTO      FDOC9000 IF NOT EQUAL     a space
          BUMP      DOCTNAM,-1
          GOTO      FDOC3200 IF NOT EOS
.
.------ Reset the formatted doctors name ------
.
FDOC9000  RESET     DOCTNAM
.
FDOC9999  RETURN
+
.**********************************************************************
.*                              raND0000                              *
.*                 Enter range of Wards for option 8                  *
.**********************************************************************
RAND0000  MOVE      SP70,RANGCOD1
          MOVE      "Start",DESCCOD1
          MOVE      "Start ",START
.
.------ Keyin Ward From ------
.
          DISPLAY   *P1:15,*EF,"Ward From : ",UNDLN3:
                    *P1:16,"Ward To   : ";
          KEYIN     *P13:15,*RV,*V2LON,RANGCOD1;
          DISPLAY   *P13:15,*V2LON,RANGCOD1;
.
          ENDSET    RANGCOD1
          APPEND    SP3,RANGCOD1
          RESET     RANGCOD1
.
          MATCH     SP3,RANGCOD1            * test for spaces
          GOTO      RAND1000 IF EQUAL       * yes, spaces
.
          CMATCH    QUEST,RANGCOD1          * test for "?"
          GOTO      RAND0500 IF NOT EQUAL   * no, not "?"
.
.       "?" option on Wards
.
RAND0200  CALL      PATWRDDS                * display all Wards
          BRANCH    OVRCD,RAND9900
.
.       keyin Ward after "?" option
.
RAND0250  MOVE      SP3,RANGCOD1
          MOVE      SP30,DESCCOD1
          DISPLAY   *P1:24,*EL,"Ward From : ",UNDLN3;
          KEYIN     *P13:24,*V2LON,*RV,RANGCOD1;
          DISPLAY   *P13:24,*V2LON,RANGCOD1;
.
          ENDSET    RANGCOD1
          APPEND    SP3,RANGCOD1
          RESET     RANGCOD1
.
          CMATCH    QUEST,RANGCOD1          * test for "?"
          GOTO      RAND0200 IF EQUAL       * yes, "?" requested
.
          MATCH     SP3,RANGCOD1            * test for spaces
          GOTO      RAND0400 IF NOT EQUAL   * not spaces
          CALL      SCR0000                 * spaces - redisplay screen
.
.         DISPLAY   *P1:10,"Select Option : ",*V2LON,REPTYPE,*HOFF:
.                   *P1:12,"Ward From : ",*P1:13,"Ward To   : ";
          GOTO      RAND1000
.
.       Ward has been entered
.
RAND0400  PACK      KEY6,RANGCOD1,SP3
          MOVE      SP30,DESCCOD1
.
          CALL      RDWARD1                 * read Ward file
          COMPARE   ZERO,OVRCD              * Ward on file ?
          GOTO      RAND0450 IF EQUAL       * yes
.
          DISPLAY   *P1:24,*EL,*B,*V2LON,"** Ward is not on file **    ";
          CALL      HITENTER
          GOTO      RAND0250
.
.       Ward on file after "?" option keyin
.
RAND0450  MOVE      WBDESC,DESCCOD1
          PACK      START,RANGCOD1,SP6
.
          CALL      SCR0000                 * redisplay screen
.
.         DISPLAY   *P1:10,"Select Option : ",*V2LON,REPTYPE,*HOFF:
.                   *P1:12,"Ward From : ",*P1:13,"Ward To   : ";
          GOTO      RAND1000
.
.       Ward To has been entered
.
RAND0500  PACK      KEY6,RANGCOD1,SP3
          MOVE      SP30,DESCCOD1
.
          CALL      RDWARD1                 * read Ward file
          COMPARE   ZERO,OVRCD              * Ward on file ?
          GOTO      RAND0600 IF EQUAL       * yes
.
          DISPLAY   *P1:24,*EL,*B,*V2LON,"** Ward is not on file **    ";
          CALL      HITENTER
          GOTO      RAND0000
.
.       Ward on file, so set up display variables
.
RAND0600  PACK      START,RANGCOD1,SP6
          MOVE      WBDESC,DESCCOD1
.
.       display relevant details on screen
.
RAND1000  DISPLAY   *P13:15,*V2LON,START,*P20:15,*HOFF,DESCCOD1;
.
.------ keyin Ward To ------
.
RAND2000  MOVE      SP3,RANGCOD2
          MOVE      "Finish",DESCCOD2
          MOVE      "Finish",FINISH
.
          DISPLAY   *P13:16,*EL,UNDLN3;
          KEYIN     *P13:16,*RV,*V2LON,RANGCOD2;
          DISPLAY   *P13:16,*V2LON,RANGCOD2;
.
          ENDSET    RANGCOD2
          APPEND    SP3,RANGCOD2
          RESET     RANGCOD2
.
          MATCH     SP3,RANGCOD2            * test for spaces
          GOTO      RAND2050 IF NOT EQUAL   * no, not spaces
          MOVE      "ZZZ",RANGCOD2          * yes, spaces
          GOTO      RAND3000
.
RAND2050  CMATCH    QUEST,RANGCOD2          * test for "?"
          GOTO      RAND2500 IF NOT EQUAL   * no, not "?"
.
.       "?" option on Wards
.
RAND2100  CALL      PATWRDDS                * display all Wards
          BRANCH    OVRCD,RAND9900
.
.       keyin Ward To after "?" option
.
RAND2300  MOVE      SP30 TO DESCCOD2
          MOVE      SP3,RANGCOD2
          DISPLAY   *P1:24,*EL,"Ward To : ",UNDLN3;
          KEYIN     *P11:24,*V2LON,*RV,RANGCOD2;
          DISPLAY   *P11:24,*V2LON,RANGCOD2 ;
.
          ENDSET    RANGCOD2
          APPEND    SP3,RANGCOD2
          RESET     RANGCOD2
.
          CMATCH    QUEST,RANGCOD2          * test for "?"
          GOTO      RAND2100 IF EQUAL       * yes
.
          MATCH     SP3,RANGCOD2            * test for spaces
          GOTO      RAND2400 IF NOT EQUAL   * not spaces
          CALL      SCR0000                 * spaces - redisplay screen
.
.         DISPLAY   *P1:10,"Select Option : ",*V2LON,REPTYPE,*HOFF:
.                   *P1:12,"Ward From : ",*V2LON,START,*P20:12,*HOFF,DESCCOD1:
.                   *P1:13,"Ward To   : ";
.
          MOVE      "ZZZ",RANGCOD2
          GOTO      RAND3000
.
.       ward has been entered
.
RAND2400  PACK      KEY6,RANGCOD2,SP3
          MOVE      SP30 TO DESCCOD2
.
          CALL      RDWARD1                 * read Ward file
          COMPARE   ZERO,OVRCD              * Ward on file ?
          GOTO      RAND2410 IF EQUAL       * yes
.
          DISPLAY   *P1:24,*EL,*B,*V2LON,"** Ward is not on file **    ";
          CALL      HITENTER
          GOTO      RAND2300
.
.       Ward is on file so redisplay screen after "?" option
.
RAND2410  CALL      SCR0000
.
.         DISPLAY   *P1:10,"Select Option : ",*V2LON,REPTYPE,*HOFF:
.                   *P1:12,"Ward From : ",*V2LON,START,*P20:12,*HOFF,DESCCOD1:
.                   *P1:13,"Ward To   : ";
          GOTO      RAND2800
.
.       Ward To has been entered
.
RAND2500  PACK      KEY6,RANGCOD2,SP3
          MOVE      SP30 TO DESCCOD2
.
          CALL      RDWARD1                 * read Ward file
          COMPARE   ZERO,OVRCD              * Ward on file ?
          GOTO      RAND2800 IF EQUAL       * yes
.
          DISPLAY   *P1:24,*EL,*B,*V2LON,"** Ward is not on file **    ";
          CALL      HITENTER
          GOTO      RAND2000
.
.       Ward on file, so set up display variables
.
RAND2800  PACK      FINISH,RANGCOD2,SP6
          MOVE      WBDESC,DESCCOD2
.
.       display relevant details on screen
.
RAND3000  DISPLAY   *P13:16,*V2LON,FINISH,*P20:16,*HOFF,DESCCOD2;
.
          MATCH     RANGCOD1,RANGCOD2       * a valid range entered ?
          GOTO      RAND9000 IF LESS        * no
          MOVE      FALSE,EXIT              * yes
          GOTO      RAND9999
.
.------ invalid Ward range entered ------
.
RAND9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Ward To must be greater than or equal Ward From **  ";
          CALL      HITENTER
          GOTO      RAND2000
.
.------ No Wards on file for a "?" option ------
.
RAND9900  MOVE      TRUE,EXIT
.
RAND9999  RETURN
+
.**********************************************************************
.*                              SCR0000                               *
.*          Display screen format for choice of report types          *
.**********************************************************************
SCR0000   DISPLAY   *P1:4,*EF;
SCR9999   RETURN
.
          INC       PMSHCPKY
          INC       PATWRDDS
          INC       CALCAGE
          INC       TFILENAM 
.
          INC       IBASEQIO/INC 
          INC       WEBERRIO/INC
          INC       BOKRC1IO/INC
          INC       PATCODIO/INC
          INC       PATDO1IO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PMSVX1IO/INC
          INC       PATWR1IO/INC
          INC       PMSHCPIO/INC
          INC       PATRGMIO/INC
.
          INC       STD001IO     
.
ENDIT     CHAIN     PGM
          STOP
