.---------------------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B01 27.11.2000 Charles Handaya
.           Modification of Warehouse Security
.-------------------------------------------------------
. VF.00.02  29.12.1999 Charles Handaya
.           Recompiled for Fixing Audit Date (CCYYMMDD)
. VF.00.01  03.11.1999 Sandra Barcham
.           Change locked message to use X
.---------------------------------------------------------------------
. Specification : Pass 1 Extract Catalogs and Calculate Value and
.                        write to temp file. Accumulate Total Value.
.                        Calculate ABC break points.
.
.                 Pass 2 Print/Update from temp file.
.---------------------------------------------------------------------
.
SUB39TM1  IFILE     SQL, FIXED=78, KEY="U1-7"
SUB39TM2  IFILE     SQL, FIXED=78, KEY="U8-22,1-7"
SUB39TM3  IFILE     SQL, FIXED=78, KEY="U23-37,1-7"
.
SI39CAT   DIM       7      7     1    Catalog Code
SI39VAL   DIM       15     15    8    Value
SI39QTY   DIM       15     15    23   Quantity
SI39COM   DIM       30     30    38   Comment
SI39SPA   DIM       10     10    68   Spare
.
.End of Record                   78
.
SUB39KEY  INIT      " 78 UC1-7 UC8-22,1-7 UC23-37,1-7"
.
DAT6      DIM       6
SKEY1     DIM       1
SKEY6     DIM       6
SKEY13    DIM       13
SEQTYPE   DIM       1
VALUE     FORM      12.2
QUANTITY  FORM      12.2
PRTQTY    FORM      12
TOTAL     FORM      12.2
TOTALVAL  FORM      12.2
TOTALQTY  FORM      12.2
ABCLEV1   FORM      12.2
ABCLEV2   FORM      12.2
TOTALNUM  FORM      12
LEVANUM   FORM      12
LEVBNUM   FORM      12
LEVCNUM   FORM      12
LEVAQTY   FORM      12
LEVBQTY   FORM      12
LEVCQTY   FORM      12
LEVAVAL   FORM      12.2
LEVBVAL   FORM      12.2
LEVCVAL   FORM      12.2
LEVAPER   FORM      12.2
LEVBPER   FORM      12.2
LEVCPER   FORM      12.2
.
REPSEQ    FORM      1
COMMAND   DIM       80
FILENAME  DIM       8
ISBUILD   INIT      "isbuild "
ISERASE   INIT      "iserase "
.---------------------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASUB39
.   Function      :   ABC Generation                          
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       SINCIAFD/INC
          INC       SINCICFD/INC
          INC       SINCIEFD/INC
          INC       SINCIHFD/INC
          INC       SINCONFD/INC
          INC       SINFACFD/INC
          INC       SINITMFD/INC
          INC       SINNATFD/INC
          INC       SINPERFD/INC
          INC       SINWARFD/INC
          INC       SINWSEFD/INC
.=========================
.Local Variable Definition
.-------------------------
DREPSEQ   DIM       1 * Scr 00 Fld     3
REPSEQD   DIM      30 * Scr 00 Fld     4
WARECODE  DIM       5 * Scr 00 Fld     5
WAREDESC  DIM      40 * Scr 00 Fld     6
REPORD    FORM      1 * Scr 00 Fld     8
REPORDD   DIM      30 * Scr 00 Fld     9
BASEDON   FORM      1 * Scr 00 Fld    12
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASUB39"
PRGNAM    INIT      "ABC Generation                          "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      ONAT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   24",AUDTSECT
          MOVE      "203",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudia";
            OPEN      SINAUDIA,"sinaudia"
          ENDIF
          MOVE      "   24",AUDTSECT
          MOVE      "208",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudie";
            OPEN      SINAUDIE,"sinaudie"
          ENDIF
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA1,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA2,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA3,"sinciaaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA1,"sincicaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA2,"sincicaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA3,"sincicaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA1,"sincieaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA2,"sincieaf"
          DISPLAY   *P56:24,"Opening sincihaf";
          OPEN      SINCIHA1,"sincihaf"
          DISPLAY   *P56:24,"Opening sincihaf";
          OPEN      SINCIHA2,"sincihaf"
          DISPLAY   *P56:24,"Opening sinfacaf";
          OPEN      SINFACA1,"sinfacaf"
          DISPLAY   *P56:24,"Opening sinfacaf";
          OPEN      SINFACA2,"sinfacaf"
          DISPLAY   *P56:24,"Opening sinitmaf";
          OPEN      SINITMA1,"sinitmaf"
          DISPLAY   *P56:24,"Opening sinitmaf";
          OPEN      SINITMA2,"sinitmaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA1,"sinperaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA1,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA2,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA1,"sinwseaf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA2,"sinwseaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Screen                        
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Screen                        
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      SETACCEP
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Screen                        
.-------------------------------------------------------
CF00L000
          MOVE      SP70,DREPSEQ 
          MOVE      SP70,WARECODE
          MOVE      ZERO,REPORD  
          MOVE      ZERO,HABCLEV1
          MOVE      ZERO,HABCLEV2
          MOVE      ZERO,BASEDON 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Screen                        
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Screen                        
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Screen                        
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Screen                        
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Screen                        
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L101,PS00L102:
                            PS00L103,PS00L104,PS00L999,PS00L105:
                            PS00L106,PS00L107,PS00L108,PS00L109
          GOTO     PS00L999
.
PS00L101
          MOVE      DREPSEQ,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      REPSEQD,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      WARECODE,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      WAREDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      REPORD,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      REPORDD,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          MOVE      HABCLEV1,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      HABCLEV2,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      BASEDON,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Screen                        
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L006:
                            SF00L103,SF00L006,SF00L104,SF00L105:
                            SF00L006,SF00L106,SF00L107,SF00L108
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L102,SF00L020:
                            SF00L103,SF00L020,SF00L020,SF00L105:
                            SF00L020,SF00L106,SF00L107,SF00L108
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
.
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,REPSEQD 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KREPS000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L102
            ENDIF
            BRANCH    EXIT,SF00L102,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      DREPSEQ,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      REPSEQD,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L103
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,WAREDESC
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KSIWA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      WARECODE,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    6",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      WAREDESC,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L104
          CALL      PRNA0000
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L105
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,REPORDD 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KORDS000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      REPORD,VAR       
          CALL      DISPITEM
.
.
          MOVE      "    9",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      REPORDD,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L106
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KABC1000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L106
            ENDIF
            BRANCH    EXIT,SF00L106,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      HABCLEV1,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L107
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KABC2000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L107
            ENDIF
            BRANCH    EXIT,SF00L107,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      HABCLEV2,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L108
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KBAS0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L108
            ENDIF
            BRANCH    EXIT,SF00L108,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      BASEDON,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.------------------------------------------------------------------------
. Open Nato X-Ref File if required
.------------------------------------------------------------------------
ONAT0000  OPEN      CONTROLF,"controlf"
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*143,HNONUSAG
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ONE,HNONUSAG
            WRITAB    CONTROLF,SIXTY3;*143,HNONUSAG
          ENDIF
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*141,INCNNATO
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,INCNNATO
            WRITAB    CONTROLF,SIXTY3;*141,INCNNATO
          ENDIF
.
          IF        INCNNATO=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      SINNATA1,"sinnataf"
            TRAPCLR   IO
            IF        OVRCD=1
              DISPLAY   *P1:24,*EL,*B,"Nato file does not exist. Run fixit.  ";
              CALL      HITENTER
              CHAIN     PGM
            ENDIF
.
            OPEN      SINNATA2,"sinnataf"
          ENDIF
.
ONAT9999  RETURN
.********************************************************************
. Set accept mode
.********************************************************************
SETACCEP  MOVE      ONE,ACCEPT
          RETURN
.----------------------------------------------------------------------
. Keyin REPS
.----------------------------------------------------------------------
KREPS000
          PACK      DISPMSG,DISPMSG,SP70
          CALL      MESSAGE2
          DISPLAY   *P1:24,*EF,*V2LON:
                    "0",*HOFF," = ABCs Suppression Report, ",*V2LON:
                    "1",*HOFF," = Reset ABC Report, ":
                    "2",*HOFF," = Full Report (NO RESET)";
.
KREPS100  KEYIN     *PCCOL:CVERT,*V2LON,DREPSEQ
.
          MATCH     EXITCHAR,DREPSEQ
          GOTO      KREPS990 IF EQUAL
.
          TYPE      DREPSEQ
          GOTO      KREPS100 IF NOT EQUAL
.
          MOVE      DREPSEQ,REPSEQ
.
          COMPARE   ZERO,REPSEQ
          GOTO      KREPS100 IF LESS
.
          COMPARE   REPSEQ,TWO
          GOTO      KREPS100 IF LESS
.
          CALL      MESSAGE3
.
          IF        REPSEQ=0
            MOVE      "ABCs Supression Report        ",REPSEQD
          ENDIF
          IF        REPSEQ=1
            MOVE      "Reset ABC Report              ",REPSEQD
          ENDIF
          IF        REPSEQ=2
            MOVE      "Full Report (NO RESET)        ",REPSEQD
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      KREPS999
.
KREPS990  MOVE      TWO,EXIT
          GOTO      KREPS999
.
KREPS999  RETURN
.----------------------------------------------------------------------
. Keyin SIWA
.----------------------------------------------------------------------
KSIWA000
          CALL      KSIWSA00                     * keyin SIWA with security
          BRANCH    EXIT,KSIWA910,KSIWA950
.
.
KSIWA900  MOVE      ZERO,EXIT
          PACK      WARECODE,SIWAWAR,SP70
          PACK      WAREDESC,SIWADES,SP70
          GOTO      KSIWA999
.
KSIWA910  MOVE      ONE,EXIT
          PACK      WARECODE,SP70
          MOVE      "All Warehouses                          ",WAREDESC
          GOTO      KSIWA999
.
KSIWA950  MOVE      TWO,EXIT
.
KSIWA999  RETURN
.********************************************************************
. PRNA - print report for SIIA                      Called by ML
.         Returns  : EXIT            (1=illegal range entered)
.********************************************************************
PRNA0000  PACK      DISPMSG,SP70,SP70            * save line 24
          CALL      MESSAGE2
.
          PACK      SIPEDATE,CCC,CYY,CMM,CDD,SP70
          REP       " 0",SIPEDATE
          CALL      RSIPE000
          IF        OVRCD=1
            DISPLAY   *P1:24,*B,*EF,"ERROR - Cant find current period - ";
            CALL      HITENTER
            GOTO      PRNA9500
          ENDIF
.
          PACK      KEY6,SIPEYEAR,SIPEPER,SP70
          CALL      RSSIPE1
          CALL      RPSIPE1
          IF        OVRCD=1
            DISPLAY   *P1:24,*B,*EF,"ERROR - Cant find previous period - ";
            CALL      HITENTER
            GOTO      PRNA9500
          ENDIF
.
          PACK      DAT6,SIPEYEAR,SIPEPER,SP70
          MOVE      "01",KEY2
          PACK      SKEY6,SIPEYEAR,KEY2,SP70
.
          CALL      MAKE0000   * Create Temp File
.
          CALL      EXTR0000   * Extract Catalog Details
.
          CALL      PDAT0000   * Print data
.
          CALL      KILL0000   * Delete Temp File
.
PRNA9000  MOVE      ZERO,EXIT                    * exit screen
          GOTO      PRNA9999
.
PRNA9500  MOVE      ONE,EXIT                     * continue
.
PRNA9999  CALL      MESSAGE3                     * restore line 24
.
          RETURN
.********************************************************************
. HEAA - print report                               Called by PRNA
.********************************************************************
HEAA0000  CALL      HEAD132                      * print heading
.
          STRIP     REPSEQD
          STRIP     WAREDESC
          ADD       "2",CLNO
          PRINT     *+,*40,"Print ",REPSEQD," for ",WAREDESC
          UNPACK    SKEY6,CCENT,CYEAR,CMON
          PRINT     *40,"Usage Period from  : ",CMON,SLASH,CCENT,CYEAR;
          UNPACK    DAT6,CCENT,CYEAR,CMON
          PRINT     " to ",CMON,SLASH,CCENT,CYEAR
          CALL      UND132                       * print line
          IF        BASEDON=1
            MOVE      "   Value",KEY8
          ELSE
            MOVE      "Quantity",KEY8
          ENDIF
          IF      REPSEQ=0
            PRINT   "  Catalog                                          ":
                  "YTD Value     YTD Usage    Accumulated Current Comment":
                  *N,"                                                   ":
                  "                              ",KEY8,"   ABC "
          ELSE
            PRINT   "  Catalog                                          ":
                  "YTD Value     YTD Usage    Accumulated Current  Suggested":
                  *N,"                                                   ":
                  "                              ",KEY8,"   ABC       ABC     "
          ENDIF
          ADD       "2",CLNO
          CALL      UND132                       * print line
.
HEAA9999  RETURN
.********************************************************************
. PDAT - Print Data
.********************************************************************
PDAT0000  MOVE      ZERO,CPAGENO                 * reset page no.
          CLOCK     TIME,CTIMEIS                 * get current time
          MOVE      "99",CLNO                    * init last line number
.
          IF        BASEDON=1
            PACK      KEY22,Z70
            CALL      RSSI392         * by Value
            ASSIGN    HABCLEV1*TOTALVAL/100,ABCLEV1
            ASSIGN    (HABCLEV1+HABCLEV2)*TOTALVAL/100,ABCLEV2
          ELSE
            PACK      KEY22,Z70
            CALL      RSSI393         * by Quantity
            ASSIGN    HABCLEV1*TOTALQTY/100,ABCLEV1
            ASSIGN    (HABCLEV1+HABCLEV2)*TOTALQTY/100,ABCLEV2
          ENDIF
          DISPLAY   *P1:24,"Printing : ",*EL;
          MOVE      ZERO,SECTOR
          MOVE      ZERO,TOTAL
          MOVE      ZERO,TOTALNUM
.
PDAT1000  IF        BASEDON=1
            CALL      RPSI392         * By Value
            BRANCH    OVRCD,PDAT9000
            MOVE      SI39VAL,VALUE
            MOVE      SI39QTY,QUANTITY
          ELSE
            CALL      RPSI393         * By Quantity
            BRANCH    OVRCD,PDAT9000
            MOVE      SI39VAL,VALUE
            MOVE      SI39QTY,QUANTITY
          ENDIF
.
          IF        REPSEQ=0
            MATCH     SP70,SI39COM
            GOTO      PDAT1000 IF EQUAL
          ELSE
            MATCH     SP70,SI39COM
            GOTO      PDAT1000 IF NOT EQUAL
          ENDIF
.
          IF        BASEDON=1
            ADD       VALUE,TOTAL
          ELSE
            ADD       QUANTITY,TOTAL
          ENDIF
.
          MOVE      SI39CAT,KEY7
          CALL      RDSIIA1
.
          ADD       ONE,SECTOR
          IF        (SECTOR%100=0)
            DISPLAY   *P12:24,*V2LON,SECTOR,"/",SIIACAT,*EL;
          ENDIF
.
          MATCH     SP70,SI39COM
          IF        !@EQUAL
            ADD       ONE,TOTALNUM
            MOVE      SP70,SEQTYPE
          ELSE
            ADD       ONE,TOTALNUM
            IF        TOTAL<ABCLEV1
              ADD       VALUE,LEVAVAL
              ADD       QUANTITY,LEVAQTY
              ADD       ONE,LEVANUM
              MOVE      "A",SEQTYPE
            ELSE
              IF        TOTAL<ABCLEV2
                ADD       VALUE,LEVBVAL
                ADD       QUANTITY,LEVBQTY
                ADD       ONE,LEVBNUM
                MOVE      "B",SEQTYPE
              ELSE
                ADD       VALUE,LEVCVAL
                ADD       QUANTITY,LEVCQTY
                ADD       ONE,LEVCNUM
                MOVE      "C",SEQTYPE
              ENDIF
            ENDIF
          ENDIF
.
          COMPARE   "55",CLNO                    * end of page ?
          CALL      HEAA0000 IF NOT LESS         * start new page
.
          PACK      KEY60,SIIADES,SP70
          CALL      BKLIN000
          PACK      KEY55,KEY60,SP70
          MOVE      QUANTITY,PRTQTY
          IF        REPSEQ=0
            PRINT     SKEY1,SP1,SIIACAT,SP2,KEY30,SP4,VALUE:
                      SP2,PRTQTY,TOTAL,SP5,SIIAABC,SP3,SI39COM:
                      *N,SP2,SP7,SP2,KEY55
          ELSE
            PRINT     SKEY1,SP1,SIIACAT,SP2,KEY30,SP4,VALUE:
                      SP2,PRTQTY,TOTAL,SP5,SIIAABC,SP9,SEQTYPE:
                      *N,SP2,SP7,SP2,KEY55,*90,SI39COM
          ENDIF
          ADD       "2",CLNO           * add 2 to line number
.
          MATCH     SP70,SI39COM
          GOTO      PDAT1000 IF NOT EQUAL
          MATCH     SEQTYPE,SIIEABC
          GOTO      PDAT1000 IF EQUAL
          COMPARE   ONE,REPSEQ
          GOTO      PDAT1000 IF NOT EQUAL
.
          CALL      UPDT0000           * Update ABC Flag
.
          GOTO      PDAT1000
.
PDAT9000  COMPARE   "52",CLNO                    * end of page ?
          CALL      HEAA0000 IF NOT LESS         * start new page
.
          COMPARE   ZERO,CPAGENO
          CALL      HEAA0000 IF EQUAL            * print head if nothing printed
          CALL      UND132                       * print line
          PRINT     "****   End of Report   ****",*N
.
          ASSIGN    LEVANUM*100/TOTALNUM,LEVAPER
          ASSIGN    LEVBNUM*100/TOTALNUM,LEVBPER
          ASSIGN    LEVCNUM*100/TOTALNUM,LEVCPER
          MOVE      TOTALQTY,PRTQTY
.
          PRINT     "    Flag             Count        Percentage":
                    "             Value       Quantity",*N:
                    "------------  ------------   ---------------":
                    "   ---------------   ------------",*N:
                    "      A       ",LEVANUM,SP3,LEVAPER,SP3:
                    LEVAVAL,SP3,LEVAQTY,*N:
                    "      B       ",LEVBNUM,SP3,LEVBPER,SP3:
                    LEVBVAL,SP3,LEVBQTY,*N:
                    "      C       ",LEVCNUM,SP3,LEVCPER,SP3:
                    LEVCVAL,SP3,LEVCQTY,*N:
                    "------------  ------------   ---------------":
                    "   ---------------   ------------",*N:
                    "Grand Total   ",TOTALNUM,SP3,"         100.00":
                    SP3,TOTALVAL,SP3,PRTQTY,*N:
                    "------------  ------------   ---------------":
                    "   ---------------   ------------"
.
PDAT9999  RETURN
.----------------------------------------------------------------------
. Update ABC Indicators
.----------------------------------------------------------------------
UPDT0000  MATCH     SP70,WARECODE
          GOTO      UPDT1000 IF NOT EQUAL
.
. Overall ABC Flag
.
          PACK      KEY7,SIIACAT,SP70
          REPEAT
            CALL      RLSIIA1
            BRANCH    OVRCD,PDAT9999
            IF        OVRCD=2
              DISPLAY   *P1:24,*EL,*V2LON,SIIACAT,*HOFF," Locked",*W2;
            ENDIF
          UNTIL     OVRCD=0
          MOVE      "2",AUDTTYPE
          CALL      WASIIA00
          MOVE      SEQTYPE,SIIAABC
          CALL      UPSIIA1
          CALL      UUSIIA1
          MOVE      "3",AUDTTYPE
          CALL      WASIIA00
          GOTO      UPDT9999
.
. Warehouse ABC Flag
.
UPDT1000  PACK      KEY12,SIIACAT,WARECODE,SP70
          REPEAT
            CALL      RLSIIE1
            BRANCH    OVRCD,PDAT9999
            IF        OVRCD=2
              DISPLAY   *P1:24,*EL,*V2LON,SIIACAT,SLASH,WARECODE:
                            *HOFF," Locked",*W2;
            ENDIF
          UNTIL     OVRCD=0
          MOVE      "2",AUDTTYPE
          CALL      WASIIE00
          MOVE      SEQTYPE,SIIEABC
          CALL      UPSIIE1
          CALL      UUSIIE1
          MOVE      "3",AUDTTYPE
          CALL      WASIIE00
.
UPDT9999  RETURN
.********************************************************************
. BKLIN - Break up KEY60 into two neat halves        Called by lots
.         Requires - KEY60   (original line)
.         Returns  - KEY30   (line 1)
.                    KEY60   (line 2)
.********************************************************************
BKLIN000  RESET     KEY60,31           * reset to length(line1)+1
          CMATCH    SP70,KEY60
          WHILE     !@EQUAL&!@EOS
            BUMP      KEY60,-1
            IF        !@EOS
              CMATCH    SP70,KEY60
            ENDIF
          DO
.
          IF        @EOS
            SETLPTR   KEY60
            RESET     KEY60
            UNPACK    KEY60,KEY30,KEY60
          ELSE
            LENSET    KEY60
            RESET     KEY60
            MOVE      KEY60,KEY30
            PACK      KEY30,KEY30,SP70
.
            ENDSET    KEY60
            SETLPTR   KEY60
            BUMP      KEY60
            PACK      KEY60,KEY60,SP70
          ENDIF
.
BKLIN999  RETURN
.------------------------------------------------------------
. Create and Open Temp File
.------------------------------------------------------------
MAKE0000  CLEAR     FILENAME
          APPEND    "sub39t",FILENAME
          APPEND    PORT,FILENAME
          RESET     FILENAME
          REP       " 0",FILENAME
          PACK      COMMAND,ISERASE,FILENAME
          EXECUTE   COMMAND,TASKID
          PACK      COMMAND,ISBUILD,FILENAME,SUB39KEY
          EXECUTE   COMMAND,TASKID
.
          OPEN      SUB39TM1,FILENAME
          OPEN      SUB39TM2,FILENAME
          OPEN      SUB39TM3,FILENAME
.
          RETURN
.------------------------------------------------------------
. Delete Temp File
.------------------------------------------------------------
KILL0000  CLOSE     SUB39TM1
          CLOSE     SUB39TM2
          CLOSE     SUB39TM3
          CLEAR     FILENAME
          APPEND    "sub39t",FILENAME
          APPEND    PORT,FILENAME
          RESET     FILENAME
          REP       " 0",FILENAME
          PACK      COMMAND,ISERASE,FILENAME
          EXECUTE   COMMAND,TASKID
.
          RETURN
.------------------------------------------------------------
. Extract Catalog Details
.------------------------------------------------------------
EXTR0000  DISPLAY   *P1:24,"Extracting :   ";
          MOVE      ZERO,SECTOR
          MOVE      ZERO,TOTALVAL
          MOVE      ZERO,TOTALQTY
          PACK      KEY7,SP70
          CALL      RSSIIA1
          CALL      RPSIIA1
.
EXTR1000  CALL      RKSIIA1
          BRANCH    OVRCD,EXTR9000
          COMPARE   ONE,SIIANON
          GOTO      EXTR1000 IF EQUAL            * non-stock ?
.
          MATCH     SP70,WARECODE                * All Warehouses
          GOTO      EXTR1100 IF EQUAL            * Yes
          PACK      KEY12,SIIACAT,WARECODE,SP70  * check if at warehouse
          CALL      RDSIIE1
          BRANCH    OVRCD,EXTR1000               * No
          MOVE      SIIEABC,SIIAABC
          MOVE      SIIESAB,SIIASAB
.
EXTR1100
          ADD       ONE,SECTOR                   * Display every 100 records
          IF        (SECTOR%100=0)
            DISPLAY   *P12:24,*V2LON,SECTOR,"/",SIIACAT,*EL;
          ENDIF
.
          CALL      CALC0000                     * Calculate Usage
.
          GOTO      EXTR1000                     * get next record
.
EXTR9000
EXTR9999  RETURN
.********************************************************************
. CALC - Calculate Usage Value & Quantity
.********************************************************************
CALC0000  MOVE      ZERO,QUANTITY
          MOVE      ZERO,VALUE
          MOVE      SP70,SI39COM
          MOVE      SP70,SI39SPA
          PACK      SKEY13,SIIACAT,DAT6,SP70
          PACK      KEY18,SIIACAT,SKEY6,WARECODE,SP70
          CALL      RSSIIH2
          CALL      RPSIIH2
CALC1000  CALL      RKSIIH2
          BRANCH    OVRCD,CALC2000
          PACK      KEY13,SIIHCAT,SIIHDAT,SP70
          MATCH     KEY13,SKEY13
          GOTO      CALC2000 IF LESS
.
          MATCH     SP70,WARECODE
          IF        !@EQUAL
            MATCH     SIIHWAR,WARECODE
            GOTO      CALC1000 IF NOT EQUAL
          ELSE
            MATCH     SP70,SIIHWAR            * check warehouse security
            IF        !@EQUAL
              PACK      KEY9,PASSCODE,SIIHWAR,SP70
              CALL      RDSIWS1
              BRANCH    OVRCD,CALC1000
            ENDIF
          ENDIF
.
          UNPACK    SIIHDAT,KEY4,KEY2  * ignore discrepancy
          MATCH     "9999",KEY4
          GOTO      CALC1000 IF EQUAL
.
          ADD       SIIHUAM,VALUE
          ADD       SIIHUQT,QUANTITY
          GOTO      CALC1000
.
.---- no positive usage ? ----
.
CALC2000  MOVE      SIIACAT,SI39CAT
          MOVE      VALUE,SI39VAL
          MOVE      QUANTITY,SI39QTY
          IF        QUANTITY<0
            MOVE      ZERO,VALUE
            MOVE      ZERO,QUANTITY
            MOVE      VALUE,SI39VAL
            MOVE      QUANTITY,SI39QTY
            MOVE      "Negative Usage - ABC Not Calculated",SI39COM
          ENDIF
          IF        QUANTITY=0
            MOVE      ZERO,VALUE
            MOVE      ZERO,QUANTITY
            MOVE      VALUE,SI39VAL
            MOVE      QUANTITY,SI39QTY
            MOVE      "Insufficient History",SI39COM
          ENDIF
          IF        SIIASAB=1
            MOVE      "Suspended from ABC Analysis",SI39COM
          ELSE
            ADD       VALUE,TOTALVAL
            ADD       QUANTITY,TOTALQTY
          ENDIF
.
          MOVE      SI39CAT,KEY7
          CALL      RDSI391
          IF        OVRCD=1
            CALL      WRSI391
          ENDIF
.
CALC9999  RETURN
.------------------------------------------------------------
. Temp file IO Reoutines
.------------------------------------------------------------
RSSI391   RESET     KEY7
          READ      SUB39TM1,KEY7;;
          RETURN
.
RASI391   RESET     KEY7
          MOVE      ZERO,OVRCD
          READ      SUB39TM1,KEY7;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDSI391   RESET     KEY7
          MOVE      ZERO,OVRCD
          READ      SUB39TM1,KEY7;SI39CAT,SI39VAL,SI39QTY,SI39COM,SI39SPA
          GOTO      OVERCOND IF OVER
          RETURN
.
RKSI391   MOVE      ZERO,OVRCD
          READKS    SUB39TM1;SI39CAT,SI39VAL,SI39QTY,SI39COM,SI39SPA
          GOTO      OVERCOND IF OVER
          RETURN
.
RPSI391   MOVE      ZERO,OVRCD
          READKP    SUB39TM1;SI39CAT,SI39VAL,SI39QTY,SI39COM,SI39SPA
          GOTO      OVERCOND IF OVER
          RETURN
.
UPSI391   UPDATE    SUB39TM1;SI39CAT,SI39VAL,SI39QTY,SI39COM,SI39SPA
          RETURN
.
WRSI391   RESET     KEY7
          WRITE     SUB39TM1,KEY7;SI39CAT,SI39VAL,SI39QTY,SI39COM,SI39SPA
          RETURN
.
DESI391   RESET     KEY7
          DELETE    SUB39TM1,KEY7
          RETURN
.
RSSI392   RESET     KEY22
          READ      SUB39TM2,KEY22;;
          RETURN
.
RASI392   RESET     KEY22
          MOVE      ZERO,OVRCD
          READ      SUB39TM2,KEY22;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDSI392   RESET     KEY22
          MOVE      ZERO,OVRCD
          READ      SUB39TM2,KEY22;SI39CAT,SI39VAL,SI39QTY,SI39COM,SI39SPA
          GOTO      OVERCOND IF OVER
          RETURN
.
RKSI392   MOVE      ZERO,OVRCD
          READKS    SUB39TM2;SI39CAT,SI39VAL,SI39QTY,SI39COM,SI39SPA
          GOTO      OVERCOND IF OVER
          RETURN
.
RPSI392   MOVE      ZERO,OVRCD
          READKP    SUB39TM2;SI39CAT,SI39VAL,SI39QTY,SI39COM,SI39SPA
          GOTO      OVERCOND IF OVER
          RETURN
.
UPSI392   UPDATE    SUB39TM2;SI39CAT,SI39VAL,SI39QTY,SI39COM,SI39SPA
          RETURN
.
WRSI392   RESET     KEY22
          WRITE     SUB39TM2,KEY22;SI39CAT,SI39VAL,SI39QTY,SI39COM,SI39SPA
          RETURN
.
DESI392   RESET     KEY22
          DELETE    SUB39TM2,KEY22
          RETURN
.
RSSI393   RESET     KEY22
          READ      SUB39TM3,KEY22;;
          RETURN
.
RASI393   RESET     KEY22
          MOVE      ZERO,OVRCD
          READ      SUB39TM3,KEY22;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDSI393   RESET     KEY22
          MOVE      ZERO,OVRCD
          READ      SUB39TM3,KEY22;SI39CAT,SI39VAL,SI39QTY,SI39COM,SI39SPA
          GOTO      OVERCOND IF OVER
          RETURN
.
RKSI393   MOVE      ZERO,OVRCD
          READKS    SUB39TM3;SI39CAT,SI39VAL,SI39QTY,SI39COM,SI39SPA
          GOTO      OVERCOND IF OVER
          RETURN
.
RPSI393   MOVE      ZERO,OVRCD
          READKP    SUB39TM3;SI39CAT,SI39VAL,SI39QTY,SI39COM,SI39SPA
          GOTO      OVERCOND IF OVER
          RETURN
.
UPSI393   UPDATE    SUB39TM3;SI39CAT,SI39VAL,SI39QTY,SI39COM,SI39SPA
          RETURN
.
WRSI393   RESET     KEY22
          WRITE     SUB39TM3,KEY22;SI39CAT,SI39VAL,SI39QTY,SI39COM,SI39SPA
          RETURN
.
DESI393   RESET     KEY22
          DELETE    SUB39TM3,KEY22
          RETURN
.
.----------------------------------------------------------------------
. Keyin ORDS
.----------------------------------------------------------------------
KORDS000
          PACK      DISPMSG,DISPMSG,SP70
          CALL      MESSAGE2
          DISPLAY   *P1:24,*EF,*V2LON:
                    "0",*HOFF," = ABC Sequence ",*V2LON:
                    "1",*HOFF," = Catalog Sequence";
.
          REPEAT
            KEYIN     *PCCOL:CVERT,*V2LON,*RV,REPORD
          UNTIL     REPORD=0 | REPORD=1
.
          CALL      MESSAGE3
.
          IF        REPORD=0
            MOVE      "ABC Sequence                  ",REPORDD
          ENDIF
          IF        REPORD=1
            MOVE      "Catalog Sequence              ",REPORDD
          ENDIF
.
          MOVE      ZERO,EXIT
.
KORDS999  RETURN
.------------------------------------------------------------
. Enter A Percentage of Total
.------------------------------------------------------------
KABC1000  IF        ACCEPT=1
            READ      CONTROLF,TWENTY4;*160,HABCLEV1
          ENDIF
.
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,HABCLEV1
.
          RETURN
.
.------------------------------------------------------------
. Enter A Percentage of Total
.------------------------------------------------------------
KABC2000  IF        ACCEPT=1
            READ      CONTROLF,TWENTY4;*162,HABCLEV2
          ENDIF
.
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,HABCLEV2
.
          RETURN
.
.------------------------------------------------------------
. Based on 1 = Value, 2 = Quantity
.------------------------------------------------------------
KBAS0000  MOVE      "1",BASEDON
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,BASEDON
.
          COMPARE   "1",BASEDON
          GOTO      KBAS9999 IF EQUAL
          COMPARE   "2",BASEDON
          GOTO      KBAS9999 IF EQUAL
          BEEP
          GOTO      KBAS0000
.
KBAS9999  RETURN
.
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       SINCIAIO/INC
          INC       SINCICIO/INC
          INC       SINCIEIO/INC
          INC       SINCIHIO/INC
          INC       SINFACIO/INC
          INC       SINITMIO/INC
          INC       SINNATIO/INC
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINWARIO/INC
          INC       SINWSEIO/INC
          INC       SINWSEKY    
.
          INC       STDGENCD
.
