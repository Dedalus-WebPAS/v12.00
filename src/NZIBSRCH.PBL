.*****************************************************************************
.*    Program      : NZIBSRCH                                                *
.*    Description  : Surname search on the NZ National database              *
.*    Author       : ROD    10/06/93                                         *
.*                                                                           *
.*    Routines     : NZCLR000  -  Clear search parameters                    *
.*                   NZMTH000  -  keyin search method                        *
.*                   NZIBSRCH  -  Keyin search parameters and do search      *
.*                                                                           *
.*    Returns      : EXIT      :  0=NMPI selected                            *
.*                                1=No NMPI selected or Error                *
.*                   NZIBNMPI  :  NMPI No. selected  (if EXIT=0)             *
.*                                                                           *
.*    Modifications:                                                         *
.*       V10.02.01 11/07/2011  Steve Armstrong  CAR 240722                   *
.*                 Mods to cater for change to PATGSRFD variables            *
.*       V9.03.01  11/06/2004  Mike Laming   CAR 49016  July 2004 PRS/2      *
.*                 - Add Sex Description routine SEXDSC00 with Code "R" -    *
.*                 "Intersex" added                                          *
.*       V5.10.B01  5/04/2001  Glenn Saunders                                *
.*                 Remove access to PTCNSNDX and associated processing.      *
.*       V5.08.01  01/09/2000  Tonii                                         *
.*                 Mods to accept Unknown and Indeterminate as valid patient *
.*                 sex description                                           *
.*****************************************************************************
.*                   31/08/99  Davin (& Brian)  SRF 645831                   *
.*                             Fixed bug in calculating age from DOB         *
.*                   17/12/93  Paul Howells                                  *
.*                             Moved NZDSP000 & NZFRM000 to a PROC in        *
.*                             NZHISIIO.PBL as HOS31 needs data space        *
.*                   10/05/95  ROD       SRF 135721                          *
.*                             Use century to calc age when input DOB        *
.*****************************************************************************
NZIBSRCH  MOVE      ZERO,OVRCD
          MATCH     "IBANHI01",PRGID
          CALL      CONNECT IF NOT EQUAL
          BRANCH    OVRCD,NZSRC900                * connection failed
          READ      CONTROLF,TEN;*248,CSRCHYRG
.
NZSRC100  CALL      NZMTH000                      * keyin search parameters
          BRANCH    EXIT,NZSRC900                 * nothing input
          MOVE      SP7,NZIBNMPI                  * clear NMPI Number
          CALL      NZKSP000                      * keyin search parameters
          BRANCH    EXIT,NZSRC900                 * nothing input
          CALL      NZSET000                      * set up vars for FIFO
          CALL      NZDSP000                      * display records
          BRANCH    EXIT,NZSRC100,NZSRC900        * Next, Exit
          MOVE      ONE,SRCHFLAG
          GOTO      NZSRC999                      * valid item selected
.
NZSRC800  DISPLAY   *P1:24,*EL,*B,"No records found.  ";
          CALL      HITENTER
          GOTO      NZIBSRCH
.
NZSRC900  MOVE      ONE,EXIT                      * NMPI NOT selected
          MOVE      ZERO,SRCHFLAG
          GOTO      NZSRC999
.
NZSRC999  MATCH     "IBANHI01",PRGID
          IF        !@EQUAL
            MATCH     "IBANHI02",PRGID
            CALL      DISCNNCT IF NOT EQUAL
          ENDIF
          RETURN
.
.*****************************************************************************
.*  NZCLR000  :  Clear search parameters                                     *
.*****************************************************************************
NZCLR000  MOVE      SP70,SRCHSUR
          MOVE      SP70,SRCHGIV
          MOVE      SP30,SRCHSEX
          MOVE      SP30,SRCHDOB
          MOVE      SP30,SRCHAGE
          MOVE      SP30,SRCHCITY
.
NZCLR999  RETURN
+
.*****************************************************************************
.*  NZMTH000  :  Keyin Search Method                                         *
.*               Returns: NZOPTION - Search method, EXIT=1=Exit, EXIT=0=Ok   *
.*****************************************************************************
NZMTH000  DISPLAY  *P1:3,*EF:
                   *P20:3,*HON," NZHIS - National System Patient Search ",*HOFF:
                   *P1:4,*V2LON," 0",*HOFF," = Exit":
                   *P1:5,*V2LON," 1",*HOFF," = Strict Surname Search":
                   *P1:6,*V2LON," 2",*HOFF," = Sound-ex Search":
                   *P1:7,*V2LON," 3",*HOFF," = Direct Match":
                   *P1:8,*V2LON," 4",*HOFF," = Fast Search":
                   *P1:9,*V2LON," 5",*HOFF," = Normal Search":
                  *P1:10,*V2LON," 6",*HOFF," = Wide Search":
                  *P1:12,"Select option ? ";
.
NZMTH100  KEYIN    *P17:12,*V2LON,NZOPTION:
                   *P17:12,*DV,NZOPTION;
.
          MOVE      ZERO,EXIT
          BRANCH    NZOPTION,NZMTH999,NZMTH999,NZMTH999,NZMTH999,NZMTH999:
                             NZMTH999
.
          MOVE      ONE,EXIT
          COMPARE   ZERO,NZOPTION
          GOTO      NZMTH999 IF EQUAL
.
          BEEP
          GOTO      NZMTH100
.
NZMTH999  RETURN
.*********************************************************************
.*  NZKSP000  :  Keyin Search Parameters                             *
.*               Returns:  EXIT  0=Ok ,  1=Nothing input for search  *
.*********************************************************************
NZKSP000  CALL      NZKSU000                      * keyin surname
          BRANCH    EXIT,NZKSP999                 * nothing input
.
          CALL      NZKGV000                      * keyin given name
          BRANCH    EXIT,NZKSP000                 * nothing input
.
          CALL      NZKSX000                      * keyin sex
.
NZKSP300  CALL      NZKDB000                      * keyin date of birth
          BRANCH    EXIT,NZKSP400                 * a date was input
.
          CALL      NZKAG000                      * keyin age
          BRANCH    EXIT,NZKSP300                 * nothing input
.
NZKSP400  CALL      NZKRN000                      * Keyin Range for Age
          GOTO      NZKSP800
.
. Ok. we have valid search criteria
.
NZKSP800  MOVE      ZERO,EXIT                     * everything Ok.
          GOTO      NZKSP999
.
NZKSP900  MOVE      ONE,EXIT                      * EXITCHAR
          IF        NZHISNEW<>0
            MOVE      ZERO,EXIT                   * We must be in IBANHI01
          ENDIF
.
NZKSP999  RETURN
.***************************************************************
.*  NZSET000  :  Set up vars for FIFO                          *
.***************************************************************
NZSET000  COMPARE   ZERO,SRCHRAN
          GOTO      NZSET100 IF EQUAL
          MOVE      "6",NZIBSTYP                * search type Range of Ages
          MOVE      SP30,NZIBMDOB 
          MOVE      SRCHAGE,NZIBMAGE
          REP       " 0",NZIBMAGE
          MOVE      SRCHRAN,NZIBMPAG
          REP       " 0",NZIBMPAG
          GOTO      NZSET200
.
NZSET100  MATCH     SRCHDOB,SP8                * Search with DOB Match
          GOTO      NZSET150 IF EQUAL          * Must have DOB
          MOVE      SRCHDOB,NZIBMDOB 
          MOVE      SP30,NZIBMAGE
          MOVE      "00",NZIBMPAG
          MOVE      "5",NZIBSTYP                * search type Range of Ages
          GOTO      NZSET200
.        
NZSET150  MOVE      SP30,NZIBMDOB 
          MOVE      SRCHAGE,NZIBMAGE
          REP       " 0",NZIBMAGE
          MOVE      ONE,SRCHRAN
          MOVE      SRCHRAN,NZIBMPAG
          REP       " 0",NZIBMPAG
.
NZSET200  BRANCH    NZOPTION,NZSET300,NZSET300,NZSET300,NZSET210,NZSET220:
                             NZSET230
NZSET210  MOVE      "7",NZIBSTYP                * search type Fast
          GOTO      NZSET300
NZSET220  MOVE      "8",NZIBSTYP                * search type Normal
          GOTO      NZSET300
NZSET230  MOVE      "9",NZIBSTYP                * search type Wide
.
NZSET300  MOVE      PTCNMPTR,NZIBRLIM                  * reply limit
          REP       " 0",NZIBRLIM
.
          MOVE      SRCHSEX,NZIBMGEN
          LOAD      NZIBNSTY,NZOPTION,ANSW,ANSS,ANSM,ANSF,ANSN,ANSD * Name Type
          PACK      NZIBADD1,SP30,SP5
          MOVE      SP30,NZIBADD2
          MOVE      SP30,NZIBSUBR
          MOVE      SP30,NZIBCITY
          MOVE      SP30,NZIBCTRY
          MOVE      SP1,NZIBASTY
          MOVE      "1",NZIBPRNM
.
          MOVE      SRCHSUR,NZIBSURN              * set up Name variables
          MOVE      SRCHGIV,NZIBGIV1
          MOVE      SP30,NZIBGIV2
          MOVE      SP30,NZIBGIV3
          CALL      FIXGIV00                      * Set up Given Name Variables
.
NZSET999  RETURN
.-------------------------------------------------
. Format Given Names
.-------------------------------------------------
FIXGIV00  MOVE      SP20,NZIBGIV1
          MOVE      SP20,NZIBGIV2
          MOVE      SP20,NZIBGIV3
          MOVE      SRCHGIV,NZTMPD25
          MOVE      ONE,EXIT                 * handy form field
.
.         Eliminate leading blanks
.
FIXGIV10  CMATCH    SP1,NZTMPD25
          IF        @EQUAL
            BUMP      NZTMPD25
            GOTO      FIXGIV10 IF NOT EOS
            GOTO      FIXGIV90               * entire name if blank
          ENDIF
          PACK      KEY25,NZTMPD25,SP30        * reset form pointer
          MOVE      KEY25,NZTMPD25
.
          SCAN      SP1,NZTMPD25               * Locate the first blank
          GOTO      FIXGIV20 IF NOT EQUAL
          BUMP      NZTMPD25,-1              * go back 1 to end of name
          MOVEFPTR  NZTMPD25,CCITEM          * another handly form field
          RESET     NZTMPD25                 * reset the form pointer
          SETLPTR   NZTMPD25,CCITEM          * set logical length to end of name
.
.         Save this name
.
          STORE     NZTMPD25,EXIT,NZIBGIV1,NZIBGIV2,NZIBGIV3
.
.         Check for any more names
.
          SETLPTR   NZTMPD25,TWENTY5         * reset logical length
          ADD       ONE,CCITEM             * position of 1st blank
          RESET     NZTMPD25,CCITEM          * reset to this point
          PACK      KEY25,NZTMPD25,SP30      * reset form pointer
          MOVE      KEY25,NZTMPD25
.
          ADD       ONE,EXIT                 * look for next word
          BRANCH    EXIT,FIXGIV10,FIXGIV10,FIXGIV10
          GOTO      FIXGIV90
.
.         Rest of the string is one name
.
FIXGIV20  STORE     NZTMPD25,EXIT,NZIBGIV1,NZIBGIV2,NZIBGIV3
.
.         Pad names out with blanks
.
FIXGIV90  PACK      NZIBGIV1,NZIBGIV1,SP30
          PACK      NZIBGIV2,NZIBGIV2,SP30
          PACK      NZIBGIV3,NZIBGIV3,SP30
.
FIXGIV99  RETURN
.***************************************************************
.*  NZKRN000  :  Keyin Range for Age                           *
.***************************************************************
NZKRN000  MOVE      CSRCHYRG,SRCHRAN
          KEYIN     *P60:5,*EL,"Age +/-  :":
                    *V2LON,*RV,SRCHRAN,*P60:5,*EL
          MATCH     SP10,SRCHDOB            * If no DOB entered then just
          GOTO      NZKRN900 IF EQUAL       * display & exit
          COMPARE   ZERO,SRCHRAN            * If No Range then we are matching
          GOTO      NZKRN999 IF EQUAL       * on the DOB exactly
.
. Now we need to calculate the age from the date of birth so that the range
. option may be used in the national search.
.
          UNPACK    SRCHDOB,CCENT,CYEAR,CMON,CDAY
          PACK      KEY4,CCENT,CYEAR
          MOVE      KEY4,FORM4AA
.
          PACK      KEY4,CCC,CYY
          REP       " 0",KEY4
          MOVE      KEY4,FORM4CUR
          ASSIGN    FORM4CUR-FORM4AA,JHOLD
          IF        CMM<IMON
            SUB       ONE,JHOLD
          ENDIF
.
          MOVE      JHOLD,SRCHAGE
          DISPLAY   *P66:4,*EL,"Age:",*V2LON,SRCHAGE;
.
NZKRN900  DISPLAY   *P74:4,"+/- ",*V2LON,SRCHRAN
.
NZKRN999  RETURN
.
.***************************************************************
.*  NZKSU000  :  Keyin Surname search field                    *
.***************************************************************
NZKSU000  
 
.        Check if we have a pre-existing surname or not
.
          MATCH     SRCHSUR,SP70                 * Do we have a surname ?
          GOTO      NZKSU100 IF NOT EQUAL        * We have a surname already
.
          MATCH     PTMASNAM,SP70
          IF        !@EQUAL
            MOVE      PTMASNAM,SRCHSUR
            GOTO      NZKSU100
          ENDIF
.
.        No existing surname. Just key in a new surname
.
          KEYIN     *P1:4,*EF,"Surn.:":
                    *V2LON,SRCHSUR;
.
.        Check if anything was entered
.
          RESET     SRCHSUR
          GOTO      NZKSU900 IF EOS
.
          CMATCH    SP1,SRCHSUR
          GOTO      NZKSU900 IF EQUAL
          GOTO      NZKSU200
.
.        We have an existing surname. Do the keyin with an *RV.
.
NZKSU100  KEYIN     *P1:4,*EF,"Surn.:":
                    *NOSTRIP,*V2LON,*RV,SRCHSUR;
.
.         Check if anything was entered
.
          RESET     SRCHSUR
.
          CMATCH    SP1,SRCHSUR
          GOTO      NZKSU900 IF EQUAL
.
.        We have a surname.
.
NZKSU200  MOVE      ZERO,EXIT
.
.        other surname file - double soundex
.
NZKSU300  PACK      GSRSNAM,SRCHSUR,SP70
          DISPLAY   *P7:4,*V2LON,GSRSNAM;
          MOVE      SP70,GSRGNAM
          GOTO      NZKSU999
.
NZKSU900  MOVE      ONE,EXIT                      * nothing input
.
NZKSU999  RETURN
+
.***************************************************************
.*  NZKGV000  :  Keyin Given Name search field                 *
.***************************************************************
NZKGV000  MATCH     SRCHGIV,SP70                  * given name from last srch?
          GOTO      NZKGV100 IF NOT EQUAL
.
          MATCH     PMPXFNAM,SP70
          IF        !@EQUAL
            MOVE      PMPXFNAM,SRCHGIV
            GOTO      NZKGV100
          ENDIF
.
          KEYIN     *P28:4,*EL,"Given:",*V2LON,SRCHGIV;
.
.        This code is necessary because of a problem in TBL where if a 
.        string is keyed in and backspaced, EOS is set but the 1st char
.        remains.
.
          RESET     SRCHGIV
          GOTO      NZKGV200 IF NOT EOS
          CLEAR     SRCHGIV                  * Reset SRCHGIV to zero
          APPEND    SP70,SRCHGIV             * Wipe out string
          RESET     SRCHGIV                  * Set form pointer to 1
          LENSET    SRCHGIV,1                * Set logical length to 1 i.e.EOS
          GOTO      NZKGV200
.
.        We have an existing given name. Key in a new given name, using *RV.
.
NZKGV100  KEYIN     *P28:4,*EL,"Given:":
                    *NOSTRIP,*RV,*V2LON,SRCHGIV;
.
NZKGV200  PACK      GSRGNAM,SRCHGIV,SP70
          DISPLAY   *P34:4,*V2LON,GSRGNAM;
          UNPACK    SP30,GSRGKEY1,GSRGKEY2 * if so, clear given name keys
          CALL      SOUNDX2                * get soundex keys for given names
          MOVE      GSRGKEY1,SRCHGSX1      * save soundexs for test in search
          SCAN      "0",SRCHGSX1
          BUMP      SRCHGSX1,-1
          LENSET    SRCHGSX1
          RESET     SRCHGSX1
          MOVE      GSRGKEY2,SRCHGSX2    
          SCAN      "0",SRCHGSX2
          BUMP      SRCHGSX2,-1
          LENSET    SRCHGSX2
          RESET     SRCHGSX2
.
          MOVE      ZERO,EXIT
          MATCH     GSRGNAM,SP70           * no given name entered 
          GOTO      NZKGV999 IF NOT EQUAL
          UNPACK    SP30,GSRGKEY1,GSRGKEY2 * if so, clear given name keys
NZKGV900  MOVE      ONE,EXIT               * nothing input
.
NZKGV999  RETURN
+
.***************************************************************
.*  NZKSX000  :  Keyin Sex search field                        *
.***************************************************************
NZKSX000  MATCH     SP1,SRCHSEX                   * have sex from last search?
          GOTO      NZKSX100 IF NOT EQUAL
.
          MATCH     SP1,PSEX
          IF        !@EQUAL
            MOVE      PSEX,SRCHSEX
            GOTO      NZKSX100
          ENDIF
.
          KEYIN     *P60:4,*EL,"Sex:",*V2LON,SRCHSEX
.
          RESET     SRCHSEX
          GOTO      NZKSX900 IF EOS
          GOTO      NZKSX200
.
.        Using the last sex as the default
.
NZKSX100  KEYIN     *P60:4,*EL,"Sex:",*NOSTRIP,*V2LON,*RV,SRCHSEX
.
NZKSX200  CMATCH    SP1,SRCHSEX
          IF        @EQUAL
            BEEP
            GOTO      NZKSX100
          ENDIF
.
.* ****************************************** Start of Changes         *C-49016
          REP       UPPLOW,SRCHSEX
          RESET     DSEXCODE
          SCAN      SRCHSEX,DSEXCODE        * check for valid sex (in IBACOMM)
          GOTO      NZKSX999 IF EQUAL
.* ******************************************   End of Changes         *C-49016
.
          BEEP
          GOTO      NZKSX100
.
NZKSX900  BEEP
          GOTO      NZKSX000
NZKSX999  RETURN
+
.***************************************************************
.*  NZKDB000  :  Keyin Birth Date search field                 *
.***************************************************************
NZKDB000  DISPLAY   *P66:4,*EL,"DOB:"
          MOVE      "70",CCOL
          MOVE      "4",CVERT
          MOVE      ZERO,CHIGHLT
          UNPACK    SRCHDOB,CCENT,CYEAR,CMON,CDAY
          MATCH     SP2,CCENT
          GOTO      NZKDB100 IF NOT EQUAL
          MOVE      CCC,CCENT
NZKDB100  MOVE      ZERO,ECOL            * Use the default error position
          MOVE      ONE,CCANLDTE         * Allow a blank to cancel default date
          CALL      KEYDATE
          MOVE      ZERO,CCANLDTE        * Reset to normal
          BRANCH    CQUEST,NZKDB000
          BRANCH    OVRCD,NZKDB900       * No D.O.B. entered. Ask for Age
.
          PACK      SRCHDOB,CCENT,CYEAR,CMON,CDAY
          REP       " 0",SRCHDOB
.
          MOVE      SP3,SRCHAGE          * Make sure we don't have an age
.
          CALL      DBRNG000             * Work out date ranges
.
          MOVE      ONE,EXIT             * a date was entered
          GOTO      NZKDB999
.
NZKDB900  MOVE      ZERO,EXIT            * no date entered
.
NZKDB999  RETURN
+
.***************************************************************
.*  NZKAG000  :  Keyin Age search field                        *
.***************************************************************
NZKAG000  MOVE      SP8,SRCHDOB          * Make sure we don't have a D.O.B.
          MOVE      SP8,NZIBDOB
.
          MATCH     SP3,SRCHAGE          * existing age search field?
          GOTO      NZKAG100 IF NOT EQUAL
.
          KEYIN     *P66:4,*EL,"Age:",*V2LON,*JR,*DE,SRCHAGE;
          RESET     SRCHAGE
          GOTO      NZKAG700 IF EOS
          GOTO      NZKAG200
.
.        Using a default age
.
NZKAG100  KEYIN     *P66:4,*EL,"Age:",*NOSTRIP,*V2LON,*JR,*RV,SRCHAGE;
.
          MATCH     SP3,SRCHAGE
          GOTO      NZKAG700 IF EQUAL
.
          TYPE      SRCHAGE
          GOTO      NZKAG200 IF EQUAL
.
          MOVE      SP3,SRCHAGE                   * non numeric input
          GOTO      NZKAG000
.
NZKAG200  DISPLAY   *P70:4,*V2LON,SRCHAGE;
.
.        We have an Age, now work out the range of dates this corresponds to.
.        The day/month range will be from tomorrows date to todays date.
.        Eg. If today is 23/04/1968, and an age of zero was selected, then
.            we want a birth date from 24/04/1967 to 23/04/1968.
.
          PACK      SRCHTDAT,CMM,CDD
          REP       " 0",SRCHTDAT
.
          MOVE      CCC,CC
          MOVE      CYY,YY
          MOVE      CMM,MM
          MOVE      CDD,DD
          CALL      DMYCON               * Convert to a julian date
          ADD       ONE,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
.
          PACK      SRCHFDAT,MM,DD
          REP       " 0",SRCHFDAT
.
.        We have the from and to dates. Now work out the from and to years.
.        The from ending year = current year - age - year range
.        The to ending year   = current year - age + year range
.
.        The starting year range will be the same if the from date is less than
.        the end year, otherwise it will be one less than the ending year range
.
          PACK      SRCHWORK,CCC,CYY
          REP       " 0",SRCHWORK
.
          MOVE      SRCHAGE,PSAGE       * Convert age to a form field
.
          MOVE      SRCHWORK,SRCHYEAR
          SUB       PSAGE,SRCHYEAR
          SUB       SRCHYRNG,SRCHYEAR
          MOVE      SRCHYEAR,SRCHFEYR
          MOVE      SRCHYEAR,SRCHFSYR
.
          MOVE      SRCHWORK,SRCHYEAR
          SUB       PSAGE,SRCHYEAR
          ADD       SRCHYRNG,SRCHYEAR
          MOVE      SRCHYEAR,SRCHTEYR
          MOVE      SRCHYEAR,SRCHTSYR
          MOVE      ZERO,EXIT                     * an age was input
.
          MATCH     SRCHFDAT,SRCHTDAT
          GOTO      NZKAG999 IF NOT LESS
.
.         Subtract one from the starting year range
.
          MOVE      SRCHFSYR,SRCHYEAR
          SUB       ONE,SRCHYEAR
          MOVE      SRCHYEAR,SRCHFSYR
.
          MOVE      SRCHTSYR,SRCHYEAR
          SUB       ONE,SRCHYEAR
          MOVE      SRCHYEAR,SRCHTSYR
          GOTO      NZKAG999
.
.        Nothing entered for date of birth or age
.
NZKAG700  DISPLAY   *P70:4,*EL;
          MOVE      SP4,SRCHFDAT
          MOVE      ONE,EXIT
.
NZKAG999  RETURN
+
.***************************************************************
.*  NZKCT000  :  Keyin City/Town                               *
.***************************************************************
NZKCT000  MATCH     SRCHCITY,SP30                 * have city from last search?
          GOTO      NZKCT100 IF NOT EQUAL
.
          KEYIN     *P60:4,*EL,"City:",*V2LON,SRCHCITY
.
          RESET     SRCHCITY
          GOTO      NZKCT900 IF EOS
          GOTO      NZKCT200
.
.        Using the last city as the default
.
NZKCT100  KEYIN     *P60:4,*EL,"City:",*NOSTRIP,*V2LON,*RV,SRCHCITY
.
NZKCT200  PACK      SRCHCITY,SRCHCITY,SP30
.
          MOVE      ZERO,EXIT
          MATCH     SRCHCITY,SP30
          GOTO      NZKCT999 IF NOT EQUAL
.
NZKCT900  MOVE      ONE,EXIT
.
NZKCT999  RETURN
+
.*************************************************************************
.*  SNEXT000  :  Ask Options on line 23                                  *
.*************************************************************************
SNEXT000  STRIP     NZIBNMFN
          MOVE      NZIBNMFN,FORM3
          ASSIGN    (FORM3-NZRECDSP),FORM3
          DISPLAY   *P58:23,"Records Remaining: ",*V2LON,FORM3
.
          COMPARE   ZERO,FORM3                    * any Matches remaining?
          GOTO      SNEXT050 IF EQUAL             * no
.
. display appropriate line 23 options
.
          MOVE      "46",CCOL
          DISPLAY   *P1:24,*EL:
                    "Select Item, (";
          BRANCH    NZIBNMAS,SNEXT020             * dont give register option
          DISPLAY   *V2LON,"R",*HOFF,")egister, (";
          ADD       "12",CCOL
SNEXT020  DISPLAY   *V2LON,"S",*HOFF,")earch more, (":
                    *V2LON,"N",*HOFF,")ext, (":
                    *V2LON,"E",*HOFF,")xit ? "
          GOTO      SNEXT100                      * get keyin
.
. don't ask Search more
.
SNEXT050  MOVE      "31",CCOL
          DISPLAY   *P1:24,*EL:
                    "Select Item, (";
          BRANCH    NZIBNMAS,SNEXT070             * dont give register option
          DISPLAY   *V2LON,"R",*HOFF,")egister, (";
          ADD       "12",CCOL
SNEXT070  DISPLAY   *V2LON,"N",*HOFF,")ext, (":
                    *V2LON,"E",*HOFF,")xit ? "
.
. now get keyin
.
SNEXT100  KEYIN     *PCCOL:24,*DV,UNDLN1:
                    *PCCOL:24,*V2LON,ANS:
                    *PCCOL:24,*DV,ANS
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          TYPE      ANS
          GOTO      SNEXT170 IF EQUAL
.
          REP       UPPLOW,ANS                   * Change to lower case
          REP       "S1N2R3E4",ANS
.
          TYPE      ANS                          * valid letter entered?
          GOTO      SNEXT150 IF NOT EQUAL        * No.
.
          MOVE      ANS,FORM1
          BRANCH    FORM1,SNEXT200,SNEXT300,SNEXT400,SNEXT500
.
SNEXT150  BEEP 
          GOTO      SNEXT100
.
. a numeric was input
.
SNEXT170  MOVE      ANS,NZFORM2A
          IF        (NZFORM2A>=SCRNCNT) | (NZFORM2A<1)
            BEEP
            GOTO      SNEXT100
          ENDIF
. check if we are on the 2nd screen of a current batch (8 is not arbituary DICK)
          IF        (TOTALCNT>9)
            ADD       EIGHT,NZFORM2A
          ENDIF
.
          MOVE      FOUR,EXIT                     * valid item selected
          GOTO      SNEXT999
.
SNEXT200  STRIP     NZIBNMFN
          MOVE      NZIBNMFN,FORM3
          ASSIGN    (FORM3-NZRECDSP),FORM3
          COMPARE   ZERO,FORM3                    * option not on screen?
          GOTO      SNEXT150 IF EQUAL
.         
          MOVE      ONE,EXIT                      * Search more selected
          GOTO      SNEXT999
.
SNEXT300  MOVE      TWO,EXIT                      * Next selected
          GOTO      SNEXT999
.
SNEXT400  BRANCH    NZIBNMAS,SNEXT150             * option wasn't asked
          MOVE      THREE,EXIT                    * Register selected
          GOTO      SNEXT999
.
SNEXT500  MOVE      ZERO,EXIT                     * Exit
          GOTO      SNEXT999
.
SNEXT999  RETURN
+
.***************************************************************************
.*  NZERR000  :  Display error message                                     *
.***************************************************************************
NZERR000  MOVE      NZIBERRD,NZIBDM40
          STRIP     NZIBDM40
          DISPLAY   *P1:24,*EL,*B,*V2LON,"Error: ",*HOFF,NZIBERRN:
                    SP2,*+,NZIBDM40,".  ";
          CALL      HITENTER
.
NZERR999  RETURN
