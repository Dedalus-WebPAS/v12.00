.*****************************************************************************
.* System    :   Patient Management                                          *
.* Program   :   FX214548                                                    *
.* Desc      :   Report that loops through pattranf looking for incorrect    *
.*               stepdowns                                                   *
.*****************************************************************************
.* Date      :   04/02/2010                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program will loop through pattranf evaluating          *
.*               stepdowns and reporting the details of admissions for       *
.*               any invalid stepdowns that are found.                       *
.* Mods      :                                                               *
.*                                                                           *
.*   V12.00.01   21/05/2025  Bella Turco                 TSK 0955096         *
.*               Alphanumeric changes                                        *
.*   V10.05.01   01/01/2015  Ania P                      CAR 261630          *
.*               Removed use of PORT for temp file naming                    *
.*                                                                           *
.*****************************************************************************
.  Example 1: Visit: 91234560
.
.Transfer Date Movement trbend pttrepsd
.------------- -------- ------ --------
.18/10/2009       A       18      2
.22/10/2009       C       18      2
.05/11/2009       C       28      0
.13/11/2009       C       35      0
.13/11/2009       C       35      0
.22/11/2009       D       18      0
.
.Start Date  End Date   trbend day diff trbend diff
.---------- ----------  ------ -------- -----------
.18/10/2009 05/11/2009    18      18        18
.05/11/2009 13/11/2009    28       8        10
.13/11/2009 22/11/2009    35       9         7
.-----------------------------------------------------------------------------
.
.  Example 2: Visit: 91234564
.
.Transfer Date Movement trbend pttrepsd
.------------- -------- ------ --------
.01/06/2009       A       14      0
.05/06/2009       C       14      0
.15/06/2009       C       21      0
.22/06/2009       C       42      0
.22/06/2009       C       21      1
.25/06/2009       C       21      0
.26/06/2009       C       42      2
.16/07/2009       D       42      0
.
.Start Date  End Date   trbend day diff trbend diff
.---------- ----------  ------ -------- -----------
.01/06/2009 15/06/2009    14      14        14
.15/06/2009 26/06/2009    21      11         7
.26/06/2009 16/07/2009    42      20        21
.-----------------------------------------------------------------------------
.
.  Example 3: Visit: 91234565
.
.Transfer Date Movement trbend pttrepsd
.------------- -------- ------ --------
.01/06/2009       A       14      0
.15/06/2009       C       21      2
.22/06/2009       C       42      0
.22/06/2009       C       21      1
.25/06/2009       C       21      0
.25/06/2009       C       42      1
.15/07/2009       D       42      0
.
.Start Date  End Date   trbend day diff trbend diff
.---------- ----------  ------ -------- -----------
.01/06/2009 15/06/2009    14      14        14
.15/06/2009 25/06/2009    21      10         7
.25/06/2009 15/07/2009    42      20        21
.-----------------------------------------------------------------------------
.
.  Example 4: Visit: 91234566
.
.Transfer Date Movement trbend pttrepsd
.------------- -------- ------ --------
.25/10/2009       A       18      2
.12/11/2009       C       28      2
.13/11/2009       C       21      0
.13/11/2009       C       21      0
.14/11/2009       L       14      0
.15/11/2009       R       28      0
.02/12/2009       C      999      0
.06/12/2009       C       35      0
.08/12/2009       D      999      0
.
.Start Date  End Date   trbend day diff trbend diff
.---------- ----------  ------ -------- -----------
.25/10/2009 12/11/2009    18      18        18
.12/11/2009 13/11/2009    28       1        10
.13/11/2009 14/11/2009    21       1        -7
.14/11/2009 15/11/2009    14       1        -7
.15/11/2009 02/12/2009    28      17        14
.02/12/2009 06/12/2009   999       4       971
.06/12/2009 08/12/2009    35       2      -964
.-----------------------------------------------------------------------------
.
.  Example 5: Visit: 91234567
.
.Transfer Date Movement trbend pttrepsd
.------------- -------- ------ --------
.04/11/2009       A       18      2
.22/11/2009       C       21      2
.01/12/2009       C      999      2
.01/12/2009       C      999      2
.17/12/2009       D      999      0
.
.Start Date  End Date   trbend day diff trbend diff
.---------- ----------  ------ -------- -----------
.04/11/2009 22/11/2009    18      18        18
.22/11/2009 01/12/2009    21       9         3
.01/12/2009 17/12/2009   999      16       978
.-----------------------------------------------------------------------------
.
.  Example 6: Visit: 91234568
.
.Transfer Date Movement trbend pttrepsd
.------------- -------- ------ --------
.16/12/2009       A       14      2
.29/12/2009       C       21      2
.01/01/2010       C       21      0
.13/01/2010       D       21      0
.
.Start Date  End Date   trbend day diff trbend diff
.---------- ----------  ------ -------- -----------
.16/12/2009 29/12/2009    14      13        14
.29/12/2009 13/01/2010    21      15         7
.-----------------------------------------------------------------------------
.
.  Example 7: Visit: 91234569
.
.Transfer Date Movement trbend pttrepsd
.------------- -------- ------ --------
.14/11/2009       A       14      2
.17/11/2009       C       14      2
.28/11/2009       C       21      2
.01/12/2009       C       21      0
.08/12/2009       C       42      0
.19/12/2009       D       42      0
.
.Start Date  End Date   trbend day diff trbend diff
.---------- ----------  ------ -------- -----------
.14/11/2009 28/11/2009    14      14        14
.28/11/2009 08/12/2009    21      10         7
.08/12/2009 19/12/2009    42      11        21
.-----------------------------------------------------------------------------
.
.  Example 8: Visit: 12345678
.
.Transfer Date Movement trbend pttrepsd
.------------- -------- ------ --------
.01/03/2002       A      999      2
.01/03/2002       C      999      0
.01/03/2002       C        0      0
.01/03/2002       D        0      0
.
.Start Date  End Date   trbend day diff trbend diff
.---------- ----------  ------ -------- -----------
.01/03/2002 01/03/2002   999       0         0
.-----------------------------------------------------------------------------
.
          INC       STD001FD
          INC       IBASEQFD/INC  
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       PATTRNFD/INC
.
.         Temporary File Definition
.         -------------------------
.
.         Filename : trntmpxx.dat          (xx = port id)
.
TRNTEMP1  IFILE SQL, FIXED=28, KEY="U1-8"
.
.NAME     TYPE    LENGTH     PHYSICAL     START  DESCRIPTION
.----     ----    ------     --------     -----  -----------
STRTDATE  DIM       8           8           1    Current Transfer Date
ENDTDATE  DIM       8           8           9    Last Transfer Date
SAVENDAY  FORM      3           3          17    End day for rate
DATEDIFF  FORM      3           3          20    Date Difference
TRBDDIFF  FORM      4           3          23    TRBEND Difference
MSTPDOWN  FORM      1           2          26    Manual Stepdown Flag
.                                                  0 = No manual stepdown
.                                                  1 = Manual stepdown in period
.End of Record                             28
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ADMNUMBR  DIM       8
.
CDYSDAYS  FORM      6
CDYSFDTE  DIM       8
CDYSTDTE  DIM       8
CDYSYEAR  FORM      2
CMDLINE   DIM       80
COUNTER   FORM      8
.
DIM3      DIM       3
DIM8      DIM       8
DIM10     DIM       10
.
ENDADMN   DIM       8
.
FORM8     FORM      8
FOUNDFLG  FORM      1             * found flag
.                                    0 = pattranf records with pttrepsd = "2"
.                                    1 = no pattranf records with pttrepsd = "2"
.
LASTDATE  DIM       8             * last pattranf record tdate
.
RECCOUNT  FORM      3
.
SAVNDAY1  FORM      3             * save last pattranf.trbend values
SAVKEY30  DIM       30
STRTADMN  DIM       8
.
TEMPADMN  DIM       8
TEMPFILE  DIM       8
.
.
. PROGRAM CONTANTS
. ----------------
.
ERASE     INIT      "iserase "
FNAME     INIT      "trntmp"
ISBUILD   INIT      "isbuild "
PIPE      INIT      "|"
TILDA30   INIT      "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
UKEY      INIT      " 28 U1-8"
.
.
PRGID     INIT      "FX214548"
PRGNAM    INIT      "Stepdown Evaluation Report"
VERSION   INIT      "V12.00.01"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
          CALL      CREA0000
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9000          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN0500:      * single admissions
                            MAIN2000       * all
.
MAIN0500  CALL      GADM0000               * get admission number
          BRANCH    EXIT,MAIN0100          * nothing entered
          GOTO      MAIN5000
.
MAIN2000  CALL      SADM0000               * get start admission no.
          BRANCH    EXIT,MAIN0100          * nothing entered
.
MAIN3000  CALL      EADM0000               * get end admission no.
          BRANCH    EXIT,MAIN2000          * nothing entered
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:        * yes
                          MAIN2000:        * no
                          MAIN0100         * cancel
.
MAIN5000  CALL      PROC0000               * process
          BRANCH    COPTION,MAIN0500       * get next admission
.
MAIN9000  CALL      KILL0000               * erase temp file
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"pattranf";
          OPEN      PATTRAN2,"pattranf"
.
          CALL      TFILENAM
          PACK      TEMPFILE,TFILNAME
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run Report                              *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - Option selected                                    *
.*                        0 = Single Admission                               *
.*                        1 = All Admissions                                 *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Single Admission (Display)":
                    *P1:6,*V2LON,TWO,*HOFF,". Admission Range  (Report)"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * single admissions
                            OPTN9000             * all admission
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                                GADM0000             Called by: MAIN0000   *
.*                        Get the admission number                           *
.* Returns:  EXIT   0 = Valid Admission # entered                            *
.*                  1 = nothing entered                                      *
.*           ADMNUMBR - admission number                                     *
.*****************************************************************************
.
GADM0000  KEYIN     *P1:10,*EL,"Admission Number :":
                    *P20:10,*V2LON,ADMNUMBR
.
          MATCH     ZEROVISN,ADMNUMBR            * anything entered ?
          GOTO      GADM9100 IF EQUAL            * no - finished
.
.         Check that the number entered is a valid admission record (has
.         pattranf records).  We read pattranf so that we can set up pattranf
.         records without having to have an admission, for testing purposes
.         when running single admission.
.
          PACK      KEY30,ADMNUMBR,SP30
          CALL      RDSTRAN2                     * position at end of file
          CALL      RDKTRAN2                     * read next record
          BRANCH    OVRCD,GADM8000               * eof - error
.
          MATCH     ADMNUMBR,TADMN               * admission # still the same ?
          GOTO      GADM8000 IF NOT EQUAL        * no - error
.
          GOTO      GADM9000                     * valid admission #
.
GADM8000  DISPLAY   *P1:24,*EL,*B,"Admission not on file.  ";
          CALL      HITENTER
          GOTO      GADM0000
.
GADM9000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
          MOVE      ZERO,EXIT
          GOTO      GADM9999
.
GADM9100  MOVE      ONE,EXIT
.
GADM9999  RETURN
+
.*****************************************************************************
.*                               SADM0000              Called by: MAIN0000   *
.*        Get the starting admission number                                  *
.* Returns:  STRTADMN - starting admission number                            *
.*****************************************************************************
.
SADM0000  KEYIN     *P1:10,*EF,"Starting Admission Number :":
                    *P29:10,*V2LON,STRTADMN
.
          MATCH     ZEROVISN,STRTADMN              * anything entered ?
          IF        @EQUAL
            DISPLAY   *P29:10,*EL,*V2LON,"Start"   * no
          ENDIF
.
SADM9999  RETURN
+
.*****************************************************************************
.*                               EADM0000              Called by: MAIN0000   *
.*          Get the ending admission number                                  *
.* Returns:  ENDADMN  - starting admission number                            *
.*****************************************************************************
.
EADM0000  KEYIN     *P1:12,*EL,"Ending   Admission Number :":
                    *P29:12,*V2LON,ENDADMN
.
          MATCH     ZEROVISN,ENDADMN               * anything entered ?
          IF        @EQUAL
            DISPLAY   *P29:12,*EL,*V2LON,"Finish"  * no
            MOVE      "99999999",ENDADMN
          ELSE
            MATCH     STRTADMN,ENDADMN             * valid admission range ?
            IF        @LESS
              DISPLAY   *P1:24,*EL,*B,"End Admission No. less than ":
                        "Start Admission No.  ";
              CALL      HITENTER
              GOTO      EADM0000
            ENDIF
          ENDIF
.
EADM9999  RETURN
+
.*****************************************************************************
.*                               PROC0000              Called by: MAIN0000   *
.*        Loop through pattranf and for each admission, load all the         *
.*        related records into a tempfile, only loading those records        *
.*        that are required to determine stepdown validity.                  *
.*        Once all the records for an admission are loaded into the temp     *
.*        file, proceed to validate the stepdown days against the actual     *
.*        days difference between pattranf records.                          *
.*        Any irregularities in stepdowns are printed to a report.           *
.*****************************************************************************
.
PROC0000  BRANCH    COPTION,PROC0100             * single admission display
.
          DISPLAY   *P1:24,*EL,"Processing:":
                    *P40:24,"Checking:";
.
          MOVE      ZERO,CPAGENO                 * initialise print variables
          MOVE      ONE,CNOUNDLN
          CALL      IBACLOCK
.
PROC0100  CALL      CLER0000                     * clear all temp file records
          MOVE      ONE,FOUNDFLG                 * initialise work variables
          MOVE      ZEROVISN,TEMPADMN
          MOVE      ZERO,COUNTER
          MOVE      ZERO,RECCOUNT
          MOVE      ZERO,MSTPDOWN
.
          BRANCH    COPTION,PROC0200             * single admission display
.
          CALL      HEAD0000                     * print report header
.
.         Loop backwards through pattranf and for each admission where there is
.         at least one record where the manual stepdown flag is set to "2"
.         (Bed Fee Update), load all the related pattranf records for that
.         admission into the temp file.
.
PROC0200  IF        COPTION = 1
            PACK      KEY30,ADMNUMBR,TILDA30
          ELSE
            PACK      KEY30,ENDADMN,TILDA30
          ENDIF
          CALL      RDSTRAN2                     * position at end of file
PROC0500  CALL      RDPTRAN2                     * read previous record
          BRANCH    OVRCD,PROC9000               * eof - finished
.
.         For single admission, we know there is at least one pattranf
.         record for the admission #, so we don't need to check that we
.         still have the same admission
.
          BRANCH    COPTION,PROC0510             * single admission
          DISPLAY   *P13:24,*V2LON,TADMN;
.
          MATCH     STRTADMN,TADMN               * outside range ?
          GOTO      PROC9000 IF LESS             * yes - finished
.
PROC0510  ADD       ONE,RECCOUNT                 * increment adm. record count
.
.         Check if this is the last pattranf record for the admission (which
.         is the first one we are processing, given that we are reading
.         backwards through the file).  The only thing we need from the last
.         pattranf record for the admission, is the transfer date, which
.         will become the end date of the last billing period.
.
          COMPARE   ONE,RECCOUNT                 * first record  ?
          GOTO      PROC0550 IF NOT EQUAL        * no
.
          MATCH     ANSA,TMOVE                   * "A" record ?
          IF        @EQUAL
            PACK      SAVKEY30,TADMN,TDATE,TTIME,TWARD,TBED   * yes - finish adm
            GOTO      PROC8000
          ENDIF
.
.         We have found the first record for a new admission #, which is not
.         an "A" record, so initialise the relevant variables
.
PROC0520  MOVE      TADMN,TEMPADMN               * save current admission no.
          MOVE      TDATE,ENDTDATE               * save end date
          GOTO      PROC0600
.
.         This is the second or subsequent pattranf record 
.
PROC0550  MATCH     TADMN,TEMPADMN               * same admission still ?
          GOTO      PROC1000 IF NOT EQUAL        * no - validate admission
.
.         We need to check each pattranf record for the admission to
.         see if any one of them is a bed fee update record.  If one or
.         more records are bed fee update records, then we need to validate
.         the billing days
.
PROC0600  COMPARE   TWO,PTTREPSD                 * bed fee update record ?
          IF        @EQUAL
            MOVE      ZERO,FOUNDFLG              * yes - set flag
          ENDIF
.
          BRANCH    RECCOUNT,PROC0800            * first record
.
          COMPARE   TWO,RECCOUNT                 * second record
          GOTO      PROC0630 IF NOT EQUAL        * no
.
          MATCH     ANSA,TMOVE                   * admission record ?
          GOTO      PROC0800 IF NOT EQUAL        * no
.
.         If the second pattranf record for the admission is an "A" record,
.         then only one record will need to be written to the temp file
.         for this admission #.
.
          MOVE      TDATE,STRTDATE               * yes
          MOVE      TRBEND,TRBDDIFF
          CALL      WRTEMP1                      * write record to temp file
          GOTO      PROC1000
.
.         If this is the admission record, then if the trbend has changed
.
PROC0630  MATCH     ANSA,TMOVE                   * admission ?
          GOTO      PROC0650 IF NOT EQUAL        * no
.
          COMPARE   TRBEND,SAVENDAY              * same trbend still ?
          IF        @EQUAL
            MOVE      TDATE,STRTDATE             * yes
            ASSIGN    TRBEND,TRBDDIFF
            CALL      WRTEMP1                    * write record to temp file
            GOTO      PROC0640
          ENDIF
.
.         The "A" record has a different trbend to the previous record,
.         so write a temp file record if the previous record had a different
.         date
.
          MATCH     LASTDATE,TDATE
          IF        !@EQUAL
            MOVE      LASTDATE,STRTDATE
            ASSIGN    (SAVENDAY-TRBEND),TRBDDIFF
            CALL      WRTEMP1                    * write record to temp file
          ENDIF
.
.         Now write a temp file record based on the "A" pattranf record
.
          MOVE      STRTDATE,ENDTDATE
          MOVE      TDATE,STRTDATE
          MOVE      TRBEND,TRBDDIFF
          MOVE      TRBEND,SAVENDAY
          CALL      WRTEMP1                      * write record to temp file
PROC0640  PACK      SAVKEY30,TADMN,TDATE,TTIME,TWARD,TBED
          GOTO      PROC1000
.
.         We only need to process the last pattranf record for any given day
.
PROC0650  MATCH     TDATE,LASTDATE               * same date ?
          GOTO      PROC0900 IF EQUAL            * yes - ignore record
.
.         We only need to process the last pattranf record for any sequential
.         tran records where the trbend value is the same, so only write the
.         last record for trbend (reading backwards, this is the first record
.         for the trbend).
.
          COMPARE   TRBEND,SAVENDAY
          GOTO      PROC0900 IF EQUAL
.
          MOVE      LASTDATE,STRTDATE
          ASSIGN    (SAVENDAY-TRBEND),TRBDDIFF
          CALL      WRTEMP1                      * write record to temp file
          MOVE      STRTDATE,ENDTDATE            * load end date
.
.         Save the current record key so that we can reposition after
.         validating this admission #
.
PROC0800  MOVE      TRBEND,SAVENDAY
.
PROC0900  PACK      SAVKEY30,TADMN,TDATE,TTIME,TWARD,TBED
          MOVE      TDATE,LASTDATE
.
          COMPARE   ONE,PTTREPSD                 * manual stepdown ?
          IF        @EQUAL
            MOVE      ONE,MSTPDOWN               * yes - set flag
          ENDIF
          GOTO      PROC0500                     * get next record
.
.         All pattranf records for a single admission have been loaded
.         into the temp file
.         Check if there were any bed fee update records (pttrepsd = "2")
.
PROC1000  BRANCH    FOUNDFLG,PROC8000            * no bed fee update records
.
          BRANCH    COPTION,PROC3000             * single admission
.
.         Running admission range.
.         There were bed fee update records for this admission, so
.         loop through the temp file records to see if there are any
.         stepdown errors
.
          MOVE      SP8,KEY8
          CALL      RSTEMP1                      * position at start of file
PROC2000  CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,PROC8000               * eof - finished
.
          DISPLAY   *P50:24,*V2LON,TEMPADMN;
.
          MOVE      STRTDATE,CDYSFDTE            * calculate date difference
          MOVE      ENDTDATE,CDYSTDTE
          CALL      CALCDAYS
          SUB       ONE,CDYSDAYS 
.
          IF        RECCOUNT = 1
            MOVE      SAVENDAY,FORM4
          ELSE
            ASSIGN    (SAVENDAY-SAVNDAY1),FORM4
          ENDIF
          MOVE      SAVENDAY,SAVNDAY1
.
          COMPARE   CDYSDAYS,FORM4               * trbend diff < date diff ?
          GOTO      PROC2000 IF NOT LESS         * no - get next record
.
          ADD       ONE,COUNTER                  * increment error count
.
          IF        COUNTER > 1
            COMPARE   SIXTY,CLNO                 * page full ?
            IF        !@LESS
              CALL      LINE0000                 * draw line under previous adm.
              CALL      HEAD0000
            ENDIF
          ENDIF
.
PROC3000  CALL      DISP0000                     * display data to screen
.
.         Finished checking an admission, so re-position for next admission
.
PROC8000  BRANCH    COPTION,PROC9000             * single admission #
.
          MOVE      ONE,FOUNDFLG                 * re-initialise work variables
          MOVE      ZEROVISN,TEMPADMN
          MOVE      ZERO,RECCOUNT
          MOVE      ZERO,MSTPDOWN
          CALL      CLER0000                     * clear all temp file records
.
          MOVE      SAVKEY30,KEY30
          CALL      RDSTRAN2                     * position for next admission
          GOTO      PROC0500                     * get next record
.
.         Finished report or display
.
PROC9000  IF        COPTION = 1
            IF        FOUNDFLG = 1
              DISPLAY   *P1:24,*EL,"No Stepdown errors found. ";
            ELSE
              DISPLAY   *P1:24,*EL;
            ENDIF
          ELSE
            CALL      LINE0000
            PRINT     *N,*1,"*** End of Report ***"
.
            DISPLAY   *P1:23,*EF,"Records found: ",*V2LON,COUNTER,*HOFF:
                      *P1:24,"Report Complete.  ";
          ENDIF
          CALL      HITENTER
.
          IF        COPTION = 1
            CALL      PUTSCR00
          ENDIF
.
PROC9999  RETURN
+
.****************************************************************************
.*                            HEAD0000                 Called by: PROC0000  *
.*                       Print page heading                                 *
.****************************************************************************
.
HEAD0000  CALL      HEAD132                      * display page header
.
          PRINT     *40,"From Admission: ",STRTADMN,SP2,"To Admission: ":
                    ENDADMN
.
          CALL      LINE0000                     * draw line across page
.
          PRINT     *1,PIPE,*3,"Adm. No.",*12,PIPE,*14,"Start Date",*25,PIPE:
                    *27," End Date ",*38,PIPE,*40,"End Day (trbend)",*57,PIPE:
                    *59,"Date Difference",*75,PIPE,*77,"TRBEND Difference":
                    *95,PIPE,*97,"Manual Stepdown",*113,PIPE,*115,"Error":
                    *132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      SEVEN,CLNO                   * increment line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: HEAD0000  *
.*                      Draw line across page                     PROC0000  *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
.*****************************************************************************
.*                              CREA0000               Called by: MAIN0000   *
.*             Create a new temporary file                                   *
.*****************************************************************************
.
CREA0000  CALL      KILL0000                     * remove existing file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,TEMPFILE,UKEY
          EXECUTE   CMDLINE,TASKID               * create temporary index file
.
          OPEN      TRNTEMP1,TEMPFILE            * open temp index file
.
CREA9999  RETURN
+
.****************************************************************************
.*                              KILL0000               Called by: MAIN0000  *
.*               Close and erase the temporary file                         *
.****************************************************************************
.
KILL0000  CLOSE     TRNTEMP1                     * close file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
KILL9999  RETURN
+
.****************************************************************************
.*                              CLER0000               Called by: MAIN0000  *
.*               Close and erase the temporary file                         *
.****************************************************************************
.
CLER0000  MOVE      SP8,KEY8
          CALL      RSTEMP1                      * position at start of file
          CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,CLER9999               * eof - finished
.
          MOVE      STRTDATE,KEY8
          CALL      DETEMP1                      * delete current record
          GOTO      CLER0000                     * get next record
.
CLER9999  RETURN
+
.****************************************************************************
.*                              DISP0000               Called by: MAIN0000  *
.*      Display all the relevant temp file records for the admission        *
.****************************************************************************
.
DISP0000  IF        COPTION = 1
            DISPLAY   *P1:4,*EF,"Admission Number: ",*V2LON,TEMPADMN
.
            MOVE      FIVE,CVERT                 * initialise display line
            DISPLAY   *P34:CVERT,*V2LON,"Date",*P44:CVERT,"TRBEND",*P54:CVERT:
                      "Manual"
            ADD       ONE,CVERT
            DISPLAY   *P1:CVERT,*EF,*V2LON,*ULON,"Start Date":
                      *P12:CVERT," End Date ":
                      *P23:CVERT,"End Day":
                      *P31:CVERT,"Difference":
                      *P42:CVERT,"Difference":
                      *P53:CVERT,"Stepdown":
                      *P62:CVERT,"Error    "
          ENDIF
.
          MOVE      TEMPADMN,DIM8
.
          MOVE      SP8,KEY8
          CALL      RSTEMP1                      * position at start of file
DISP0500  CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,DISP9999               * eof - finished
.
          ADD       ONE,CVERT
          UNPACK    STRTDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,DIM10
          UNPACK    ENDTDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      SP3,DIM3
          IF        MSTPDOWN = 1
            MOVE      DYES,DIM3
          ENDIF
          IF        COPTION = 1
            DISPLAY   *P1:CVERT,DIM10,*P12:CVERT,CPCDATE,*P25:CVERT,SAVENDAY:
                      *P34:CVERT,DATEDIFF,*P44:CVERT,TRBDDIFF,*P55:CVERT,DIM3
          ELSE
            COMPARE   SIXTY,CLNO                 * page full ?
            IF        !@LESS
              CALL      LINE0000                 * yes
              CALL      HEAD0000
              MOVE      TEMPADMN,DIM8
            ENDIF
.
            PRINT     *1,PIPE,*3,DIM8,*12,PIPE,*14,DIM10,*25,PIPE:
                      *27,CPCDATE,*38,PIPE,*47,SAVENDAY,*57,PIPE:
                      *66,DATEDIFF,*75,PIPE,*84,TRBDDIFF:
                      *95,PIPE,*97,DIM3,*113,PIPE;
            ADD       ONE,CLNO
          ENDIF
.
.         Clear admission number as we only want to print this for the first
.         record.
.
          MOVE      SP8,DIM8
.
          COMPARE   DATEDIFF,TRBDDIFF
          IF        @LESS
            IF        COPTION = 1
              DISPLAY   *P62:CVERT,"<--------"
            ELSE
              PRINT     *115,"<--------",*132,PIPE
            ENDIF
          ELSE
            IF       COPTION = 2
              PRINT  *132,PIPE
            ENDIF
          ENDIF
.
          GOTO      DISP0500                     * get next record
.
DISP9999  RETURN
+
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                    *
.****************************************************************************
.
RSTEMP1   READ      TRNTEMP1,KEY8;;
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          READ      TRNTEMP1,KEY8;STRTDATE,ENDTDATE,SAVENDAY,DATEDIFF,TRBDDIFF:
                                  MSTPDOWN
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    TRNTEMP1;STRTDATE,ENDTDATE,SAVENDAY,DATEDIFF,TRBDDIFF:
                             MSTPDOWN
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTEMP1   MOVE      ZERO,OVRCD
          READKP    TRNTEMP1;STRTDATE,ENDTDATE,SAVENDAY,DATEDIFF,TRBDDIFF:
                             MSTPDOWN
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMP1   MOVE      STRTDATE,CDYSFDTE            * calculate date difference
          MOVE      ENDTDATE,CDYSTDTE
          CALL      CALCDAYS
          SUB       ONE,CDYSDAYS
          MOVE      CDYSDAYS,DATEDIFF
          WRITE     TRNTEMP1,KEY8;STRTDATE,ENDTDATE,SAVENDAY,DATEDIFF,TRBDDIFF:
                                  MSTPDOWN
          MOVE      ZERO,MSTPDOWN                * reset manual stepdown flag
          RETURN
.
UPTEMP1   UPDATE    TRNTEMP1;STRTDATE,ENDTDATE,SAVENDAY,DATEDIFF,TRBDDIFF:
                             MSTPDOWN
          RETURN
.
DETEMP1   DELETE    TRNTEMP1,KEY8
          RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       CALCDAYS
.
          INC       PATTRNIO/INC
          INC       TFILENAM 
          INC       IBASEQIO/INC 
          INC       WEBERRIO/INC
