.******************************************************************************
.* System   : INPATIENT                                                       *
.* Program  : IBAHMS89                                                        *
.* Desc     : Period Range Maintenance Program for PRS2                       *
.******************************************************************************
.* Date     : 07/05/93                                                        *
.* Author   : Jeni Tan   (A copy of IBAPMS40)                                 *
.* Mods.    :                                                                 *
.*           V9.02.00   20/11/2001  Steve Armstrong                           *
.*                      Ported from r5.09                                     *
.******************************************************************************
.*           V5.07.B01  16/11/1998  Jim Stathopoulos                          *
.*                      507 Changes                                           *
.******************************************************************************
.*            V5.01.01  22/03/94  Ian Rutt                                    *
.*                      Added single user program locking, new keyin for date *
.*                      range and standardised error messages                 * 
.*                                                                            *
.******************************************************************************
.
          INC       STD001FD
          INC       PATCOMM/INC
          INC       PATCONFD/INC
          INC       PATDRGFD/INC
+
.
.         Variables Declaration
.
.
.
SDRGFDTE  DIM       8
SDRGTDTE  DIM       8
SDRGYR    DIM       4
SDRGNUM   DIM       2
SDRGCYR   DIM       4
SDRGCNUM  DIM       2
SDRGSDSC  DIM       3
SDRGMDSC  DIM       9
SDRGLDSC  DIM       20
SIXZ      INIT      "ZZZZZZ"
.
TODAY     FORM      3
WORK4     FORM      4
YRINC     FORM      1
.
.         Constants Declaration
.
JAN       FORM      "31"
FEB       FORM      "28"
MAR       FORM      "31"
APR       FORM      "30"
MAY       FORM      "31"
JUN       FORM      "30"
JUL       FORM      "31"
AUG       FORM      "31"
SEP       FORM      "30"
OCT       FORM      "31"
NOV       FORM      "30"
DEC       FORM      "31"
.
CPYOPT    INIT      "Copy  "
.
PRGNAM    INIT      "Period Range Maintenance For PRS2"
PRGID     INIT      "IBAHMS89"
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              MAINLINE                                  *
.*                            Controlling Logic                           *
.**************************************************************************
          CALL      INIT0000              * initialization and open files
          BRANCH    EXIT,ML9999 
.
ML0100    CALL      OPTN0000              * select options
          BRANCH    EXIT,ML9000           * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,ML1000,ML2000,ML3000,ML4000
.
. ---- add a date range ----
.
ML1000    CALL      SCR0000               * display screen format
          CALL      PROC0000              * input date range
          BRANCH    EXIT,ML0100 
          CALL      ACPT0000              * accept initial values
          BRANCH    EXIT,ML1000           * Nothing input
.
          CALL      SEL0000               * select field to modify or ok to post
          BRANCH    EXIT,ML1000
          CALL      WRT0000               * write to file
          GOTO      ML1000
.
. ---- modify a date range ----
.
ML2000    CALL      SCR0000               * display screen format 
          CALL      ENTR0000              * enter date range
          BRANCH    EXIT,ML0100
          CALL      DISP0000              * display details
.
          CALL      SEL0000               * select field to modify or ok to post
          BRANCH    EXIT,ML2000
          CALL      UPD0000               * update record
          GOTO      ML2000
.
. ---- delete a date range ----
.
ML3000    CALL      SCR0000               * display screen format 
          CALL      ENTR0000              * enter date range
          BRANCH    EXIT,ML0100
          CALL      DISP0000              * display detail 
.
          CALL      DELQST
          BRANCH    CEXIT,ML3500,ML3000,ML0100
.
ML3500    CALL      DEL0000               * delete this record
          GOTO      ML3000
.
. ---- Copy a date range ----
.
ML4000    CALL      SCR4000               * display screen format
          CALL      KYER0000              * enter years to be copied
          BRANCH    EXIT,ML0100
          CALL      COPY0000              * Copy the years data
          GOTO      ML4000
.
ML9000    PACK      PTCNDRG2,ZERO,ZERO
          WRITAB    CONTROLF,SEVENTY9;*31,PTCNDRG2
ML9999    CHAIN     PGM                   * chain back to program
+
.****************************************************************************
.*                                INIT0000                                  *
.*                             initialization                               *
.*  The initialization routine is used to display headings and open files.  *
.****************************************************************************
INIT0000   CALL      DISPHEAD                  * display heading
.
           DISPLAY   *P60:24,"patdprsf";
           OPEN      PATDRGA1,"patdprsf"
           OPEN      PATDRGA2,"patdprsf"
           OPEN      PATDRGA3,"patdprsf"
           OPEN      CONTROLF,"controlf"
.
INIT1000   MOVE      ZERO,EXIT
           READ      CONTROLF,SEVENTY9;*31,PTCNDRG2
.
           PACK      DIM2,ZERO,ZERO
           MATCH     DIM2,PTCNDRG2
           GOTO      INIT2000 IF EQUAL
.
           MATCH     PORT,PTCNDRG2
           GOTO      INIT2000 IF EQUAL
.
           CALL      PRGLOCK
           MOVE      ONE,EXIT
           GOTO      INIT9999
.
INIT2000   MOVE      PORT,PTCNDRG2
           WRITAB    CONTROLF,SEVENTY9;*31,PTCNDRG2   
.
           MOVE      ONE,CNEWDS
           MOVE      SP2,CKYIDEF2 
INIT9999   RETURN
+
.****************************************************************************
.*                                OPTN0000                                  *
.*                        get user options or exit                          *
.*                                                                          *
.*    valid options     --->  (0) Exit                                      *
.*                            (1) Add                                       *
.*                            (2) Modify                                    *
.*                            (3) Delete                                    *
.*                            (4) Copy Financial Years                      *
.****************************************************************************
.
. ---- display option screen ----
.
OPTN0000  MOVE      FALSE,EXIT
          HLINE     *G37,2,57,80
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Insert":
                    *P1:6,*V2LON,TWO,*HOFF," = Change":
                    *P1:7,*V2LON,THREE,*HOFF," = Delete":
                    *P1:8,*V2LON,FOUR,*HOFF," = Copying Financial Years":
                    *P1:10,"Select Option :";
.
OPTN1000  KEYIN     *P17:10,*EL,*DV,UNDLN1,*P17:10,*V2LON,COPTION;
          COMPARE   ZERO TO COPTION
          GOTO      OPTN9000 IF EQUAL
.
          BRANCH    COPTION OF OPTN2000,OPTN2000,OPTN2000,OPTN2000
          BEEP
          GOTO      OPTN1000
.
OPTN2000  LOAD      DISPOPT WITH COPTION OF ADDOPT,CHGOPT,DELOPT,CPYOPT
          DISPLAY   *P57:2,*V2LON,"- ",DISPOPT,SP1;
          GOTO      OPTN9999
.
OPTN9000  MOVE      TRUE,EXIT                   * set EXIT = 1 
.
OPTN9999  RETURN
+
.**************************************************************************
.*                                  CLR0000                               *
.*                            clear global variables                      *
.**************************************************************************
.
CLR0000   PACK      DRGTDTE,CCC,SP6               * Period to date
          PACK      DRGFDTE,CCC,SP6               * Period from date
          PACK      DRGYR,CCC,SP2                 * Finanicial year
          MOVE      SP2,DRGNUM                    * Financial period code
          PACK      DRGCYR,CCC,SP2                * Calendar year
          MOVE      SP2,DRGCNUM                   * Calendar period code
          MOVE      SP20,DRGSDSC                  * Short description
          MOVE      SP20,DRGMDSC                  * Medium description
          MOVE      SP20,DRGLDSC                  * Long description
          MOVE      SP10,DRGSPAR                  * Spare variable
CLR9999   RETURN
+
.**************************************************************************
.*                               PROC0000                                 *
.*                       input indentification code                       *
.**************************************************************************
PROC0000  CALL      CLR0000                       * Clear the variables
          MOVE      TEN8,CCOL                     * Point of keyin for date
          MOVE      FOUR,CVERT                    * Line of keyin for date
          UNPACK    SP4,CYEAR,CMON                * Initialise report date
          MOVE      CCC,CCENT                     * Initialise century
          MOVE      SP2,CKYIDEF2
          MOVE      ONE,CKYIMODE
.
          CALL      PATDRGKY
          BRANCH    EXIT,PROC9000  
.
          MOVE      IMON,DRGNUM                   * Financial Period Code
          PACK      DRGYR,ICENT,IYEAR             * Pack up Period Year
          REP       " 0",DRGYR                    * Zero fill
          REP       " 0",DRGNUM                   * Zero fill
.
.         Report date valid
.
PROC1000  MOVE      ZERO,EXIT
          GOTO      PROC9999
.
.         They want to exit option (they hit <ENTER> for date)
.
PROC9000  MOVE      ONE,EXIT
.
PROC9999  RETURN
+
.**************************************************************************
.*                               ENTR0000                                 *
.*                       enter identification code                        *
.**************************************************************************
ENTR0000  CALL      CLR0000                       * Clear the variables
          MOVE      TEN8,CCOL                     * Point of keyin for date
          MOVE      FOUR,CVERT                    * Line of keyin for date
          UNPACK    SP4,CYEAR,CMON                * Initialise period date
          MOVE      CCC,CCENT                     * Initialise century
          MOVE      ZERO,CKYIMODE
.
          CALL      PATDRGKY                      * Keyin the period
          BRANCH    EXIT,ENTR9000                 * Nothing input
.
          MOVE      IMON,DRGNUM                   * Financial Period Code
          PACK      DRGYR,ICENT,IYEAR             * Pack up Period Year
          REP       " 0",DRGYR                    * Zero fill
          REP       " 0",DRGNUM                   * Zero fill
.
.         Period valid
.
          MOVE      ZERO,EXIT
          GOTO      ENTR9999
.
ENTR9000  MOVE      ONE,EXIT
.
ENTR9999 RETURN
+
.**************************************************************************
.*                                  SCR0000                               *
.*                         display screen format                          *
.**************************************************************************
SCR0000   DISPLAY   *P1:4,*EF:
                    *P1:4,"   Period      : ":
                    *P1:6,*V2LON,"1",*HOFF,". From Date   : ":
                    *P1:7,*V2LON,"2",*HOFF,". To   Date   : ":
                    *P1:8,*V2LON,"3",*HOFF,". Cal. Date   : ":
                    *P1:9,*V2LON,"4",*HOFF,". Long Desc   : ":
                    *P1:10,*V2LON,"5",*HOFF,". Medium Desc : ":
                    *P1:11,*V2LON,"6",*HOFF,". Short Desc  : "
          GOTO      SCR9999
.
.         Screen display for option 4
.
SCR4000   DISPLAY   *P1:4,*EF:
                    *P1:4,"  Copying Year : ":
                    *P1:6,"  Increment    : "
.
SCR9999   RETURN
+
.*************************************************************************
.*                                  ACPT0000                             *
.*   INPUT mode only :      accept initial values                        *
.*************************************************************************
ACPT0000  CALL      KFDTE000                      * Key in the from date
          BRANCH    EXIT,ACPT9999                 * Nothing entered
ACPT1000  CALL      KTDTE000                      * Key in the to date
          BRANCH    EXIT,ACPT0000                 * Nothing entered
ACPT2000  CALL      KCDTE000                      * Key in the calendar date
          BRANCH    EXIT,ACPT1000                 * Nothing entered
          CALL      KLDSC000                      * Key in the long description
          BRANCH    EXIT,ACPT2000                 * Nothing entered
          CALL      KMDSC000                      * Key in the med. description
          CALL      KSDSC000                      * Key in the short desc.
.
ACPT9999  RETURN
.*************************************************************************
.*                                  KFDTE000                             *
.*                          Keyin the from date                          *
.*************************************************************************
KFDTE000  MOVE      TEN8,CCOL                     * Point of keyin for date
          MOVE      SIX,CVERT                     * Line of keyin for date
          UNPACK    DRGFDTE,CCENT,CYEAR,CMON,CDAY * Initialise date
.
          CALL      KEYDATE                       * Keyin the date
          BRANCH    OVRCD,KFDTE900                * Nothing input
.
          PACK      DRGFDTE,ICENT,IYEAR,IMON,IDAY * Pack up date
          REP       " 0",DRGFDTE                  * Zero fill date
.
          MOVE      ZERO,EXIT
          GOTO      KFDTE999
.
KFDTE900  MOVE      ONE,EXIT
.
KFDTE999  RETURN
.*************************************************************************
.*                                  KTDTE000                             *
.*                          Keyin the to date                            *
.*************************************************************************
KTDTE000  MOVE      TEN8,CCOL                     * Point of keyin for date
          MOVE      SEVEN,CVERT                   * Line of keyin for date
          UNPACK    DRGTDTE,CCENT,CYEAR,CMON,CDAY * Initialise date
.
          CALL      KEYDATE                       * Keyin the date
          BRANCH    OVRCD,KTDTE900                * Nothing input
.
          PACK      DRGTDTE,ICENT,IYEAR,IMON,IDAY * Pack up date
          REP       " 0",DRGTDTE                  * Zero fill date
.
          MOVE      ZERO,EXIT
          GOTO      KTDTE999
.
KTDTE900  MOVE      ONE,EXIT
.
KTDTE999  RETURN
.*************************************************************************
.*                                  KCDTE000                             *
.*                          Keyin the calendar date                      *
.*************************************************************************
KCDTE000  MOVE      TEN8,CCOL                     * Point of keyin for date
          MOVE      EIGHT,CVERT                   * Line of keyin for date
          UNPACK    DRGCYR,CCENT,CYEAR            * Initialise date
          MOVE      DRGCNUM,CMON                  * Initialise date
.
          CALL      KEYPER                        * Keyin the date
          BRANCH    OVRCD,KCDTE900                * Nothing input
.
.         Validate the date entered
.
          PACK      XDATE,DRGCYR,DRGCNUM          * Old key
          PACK      KEY6,ICENT,IYEAR,IMON         * New key
          REP       " 0",KEY6                     * Zero fill date
.
          MATCH     XDATE,KEY6                    * Was anything changed ?
          GOTO      KCDTE800 IF EQUAL             * No. Just exit.
.
          CALL      RDADRGA3                      * Check if date already in
          BRANCH    OVRCD,KCDTE400                * Not found -> Okay to post
.
          DISPLAY   *P1:24,*EL,*V2LON,*B,"Date already on file. ";
          CALL      HITENTER
          GOTO      KCDTE000
.
KCDTE400  UNPACK    KEY6,DRGCYR,DRGCNUM
.
KCDTE800  MOVE      ZERO,EXIT
          GOTO      KCDTE999
.
KCDTE900  MOVE      ONE,EXIT
.
KCDTE999  RETURN
+
.*************************************************************************
.*                                  KLDSC000                             *
.*                          Keyin the long description                   *
.*************************************************************************
KLDSC000  KEYIN     *P18:9,*EL,*DV,UNDLN20:
                    *P18:9,*V2LON,DRGLDSC;
.
          ENDSET    DRGLDSC
          APPEND    SP20,DRGLDSC
          RESET     DRGLDSC
.
          DISPLAY   *P18:9,*V2LON,DRGLDSC;
.
          MATCH     SP20,DRGLDSC                 * Was anything entered ?
          GOTO      KLDSC900 IF EQUAL            * No.
          MOVE      ZERO,EXIT
          GOTO      KLDSC999
.
KLDSC900  MOVE      ONE,EXIT
.
KLDSC999  RETURN
+
.*************************************************************************
.*                                  KMDSC000                             *
.*                          Keyin the medium description                 *
.*************************************************************************
KMDSC000  KEYIN     *P18:10,*EL,*DV,UNDLN9:
                    *P18:10,*V2LON,DRGMDSC;
.
          ENDSET    DRGMDSC
          APPEND    SP20,DRGMDSC
          RESET     DRGMDSC
.
          DISPLAY   *P18:10,*V2LON,DRGMDSC;
.
          MATCH     SP9,DRGMDSC                  * Was anything entered ?
          GOTO      KMDSC900 IF EQUAL            * No.
          GOTO      KMDSC999
.
KMDSC900  MOVE      DRGLDSC,DRGMDSC
          DISPLAY   *P18:10,*V2LON,DRGMDSC;
.
KMDSC999  RETURN
+
.*************************************************************************
.*                                  KSDSC000                             *
.*                          Keyin the short description                  *
.*************************************************************************
KSDSC000  KEYIN     *P18:11,*EL,*DV,UNDLN3:
                    *P18:11,*V2LON,*JR,DRGSDSC;  * Justify right looks better
.
          ENDSET    DRGSDSC
          APPEND    SP20,DRGSDSC
          RESET     DRGSDSC
.
          DISPLAY   *P18:11,*V2LON,DRGSDSC;
.
          MATCH     SP3,DRGSDSC                  * Was anything entered ?
          GOTO      KSDSC900 IF EQUAL            * No.
          GOTO      KSDSC999
.
KSDSC900  MOVE      DRGMDSC,DRGSDSC
          DISPLAY   *P18:11,*V2LON,DRGSDSC;
.
KSDSC999  RETURN
+
.**************************************************************************
.*                                   SEL0000                              *
.*                         select field to modify or post                 *
.**************************************************************************
SEL0000   CALL      MAINQST                       * Select field, Post, Cancel
          COMPARE   ZERO,CCITEM
          GOTO      SEL8000 IF EQUAL              * Post data
          GOTO      SEL9000 IF LESS               * Cancel data
.
          BRANCH    CCITEM,SEL1000,SEL2000,SEL3000,SEL4000,SEL5000,SEL6000
          BEEP
          GOTO      SEL0000
.
.         Key in the from date
.
SEL1000   CALL      KFDTE000
          GOTO      SEL0000
.
.         Key in the to date
.
SEL2000   CALL      KTDTE000
          GOTO      SEL0000
.
.         Key in the calendar date
.
SEL3000   CALL      KCDTE000
          GOTO      SEL0000
.
.         Key in the long description
.
SEL4000   CALL      KLDSC000
          GOTO      SEL0000
.
.         Key in the long description
.
SEL5000   CALL      KMDSC000
          GOTO      SEL0000
.
.         Key in the long description
.
SEL6000   CALL      KSDSC000
          GOTO      SEL0000
.
.         We want to post the item. Validate the date ranges
.
SEL8000   MATCH     DRGFDTE,DRGTDTE
          GOTO      SEL8100 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B:
                    "To Date to be Greater or Equal to From Date. ";
          CALL      HITENTER
          GOTO      SEL0000
.
.         Check that this range does not overlap any other ranges
.
SEL8100   CALL      SAV0000                       * Save the current data
.
.         We want a record that doesn't overlap any other range.
.
          PACK      KEY14,SDRGFDTE,SP6            * Check the from date
          CALL      RDSDRGA2
          CALL      RDKDRGA2
          BRANCH    OVRCD,SEL8900                 * Valid date range
.
.         We have a record whose to date >= the from date. Check that we
.         don't have an overlap
.
          MATCH     DRGFDTE,SDRGTDTE
          GOTO      SEL8900 IF LESS              * To date before record found
.
          MATCH     DRGYR,SDRGYR                 * Check if we found the orig.
          GOTO      SEL8150 IF NOT EQUAL
.
          MATCH     DRGNUM,SDRGNUM               * Check if we found the orig.
          GOTO      SEL8200 IF EQUAL
.
SEL8150   DISPLAY   *P1:24,*EL,*B,"ERROR",*HOFF:
                    "Date range overlaps with Period ":
                    *V2LON,DRGNUM,*HOFF,"/",*V2LON,DRGYR,*HOFF,". ";
          CALL      HITENTER
          CALL      RES0000                       * Restore the saved data
          GOTO      SEL0000
.
.         Check the to date against the report file
.
SEL8200   PACK      KEY14,SDRGTDTE,SP6            * Check the to date
          CALL      RDSDRGA2
          CALL      RDKDRGA2
          BRANCH    OVRCD,SEL8900                 * Valid date range
.
.         We have a record whose to date >= the from date. Check that we
.         don't have an overlap
.
          MATCH     DRGFDTE,SDRGTDTE
          GOTO      SEL8900 IF LESS              * From date before rec found
.
          MATCH     DRGYR,SDRGYR                 * Check if we found the orig.
          GOTO      SEL8150 IF NOT EQUAL
.
          MATCH     DRGNUM,SDRGNUM               * Check if we found the orig.
          GOTO      SEL8900 IF EQUAL
          GOTO      SEL8150
.
SEL8900   CALL      RES0000                      * Restore the saved data
          CALL      SPRA0000                     * Test for shortened Period
          CALL      RES0000                      * Restore the saved data
          MOVE      ZERO,EXIT
          GOTO      SEL9999
.
SEL9000   MOVE      ONE,EXIT
.
SEL9999   RETURN
+
.**************************************************************************
.*                              SAV0000                                   *
.*                          Save the current data                         *
.**************************************************************************
SAV0000   MOVE      DRGFDTE,SDRGFDTE              * Save the from date
          MOVE      DRGTDTE,SDRGTDTE              * Save the to date
          MOVE      DRGYR,SDRGYR                  * Save the financial year
          MOVE      DRGNUM,SDRGNUM                * Save the financial code
          MOVE      DRGCYR,SDRGCYR                * Save the calendar year
          MOVE      DRGCNUM,SDRGCNUM              * Save the calendar code
          MOVE      DRGLDSC,SDRGLDSC              * Save the long desc.
          MOVE      DRGMDSC,SDRGMDSC              * Save the medium desc.
          MOVE      DRGSDSC,SDRGSDSC              * Save the short desc.
.
SAV9999   RETURN
+
.**************************************************************************
.*                              RES0000                                   *
.*                          restore saved data                            *
.**************************************************************************
RES0000   MOVE      SDRGFDTE,DRGFDTE              * Restore the from date
          MOVE      SDRGTDTE,DRGTDTE              * Restore the to date
          MOVE      SDRGYR,DRGYR                  * Restore the financial year
          MOVE      SDRGNUM,DRGNUM                * Restore the financial code
          MOVE      SDRGCYR,DRGCYR                * Restore the calendar year
          MOVE      SDRGCNUM,DRGCNUM              * Restore the calendar code
          MOVE      SDRGLDSC,DRGLDSC              * Restore the long desc.
          MOVE      SDRGMDSC,DRGMDSC              * Restore the medium desc.
          MOVE      SDRGSDSC,DRGSDSC              * Restore the short desc.

RES9999   RETURN
+
.**************************************************************************
.*                              SPRA0000                                  *
.*                     Test for shortened period                          *
.**************************************************************************
SPRA0000  MOVE      ONE,EXIT
          UNPACK    SDRGFDTE,XDATE,CDAY
          MATCH     "01",CDAY
          GOTO      SPRA1000 IF EQUAL
          CALL      SPRB0000
          BRANCH    EXIT,SPRA9999
.
SPRA1000  UNPACK    SDRGTDTE,CCENT,CYEAR,CMON,CDAY
          MOVE      CDAY,DD
          MOVE      CMON,MM
          MOVE      CYEAR,YY
          MOVE      CCENT,CC
          CALL      DMYCON
.
          MATCH     "13",SDRGNUM
          GOTO      SPRA1100 IF NOT LESS
          MOVE      SDRGNUM,FORM2
          ADD       ONE,FORM2
          MOVE      FORM2,XMON
          REP       " 0",XMON
          PACK      KEY6,SDRGYR,XMON
          CALL      RDDRGA1
          COMPARE   ZERO,OVRCD
          GOTO      SPRA1200 IF EQUAL
          MATCH     "13",XMON
          GOTO      SPRA3000 IF NOT EQUAL
.
SPRA1100  MOVE      SDRGYR,FORM4
          ADD       ONE,FORM4
          MOVE      FORM4,C4YEAR
          REP       " 0",C4YEAR
          MOVE      "01",XMON
          PACK      KEY6,C4YEAR,XMON
          CALL      RDDRGA1
          BRANCH    OVRCD,SPRA3000
.
SPRA1200  MOVE      JULDAY,TODAY
          MOVE      LEAPYR,FORM1
.
          UNPACK    DRGFDTE,CCENT,CYEAR,CMON,CDAY
          MOVE      CDAY,DD
          MOVE      CMON,MM
          MOVE      CYEAR,YY
          MOVE      CCENT,CC
          CALL      DMYCON
.
          COMPARE   TODAY,JULDAY
          GOTO      SPRA2000 IF NOT LESS
          ADD       "365",JULDAY
          ADD       FORM1,JULDAY
.
SPRA2000  SUB       TODAY,JULDAY
          COMPARE   TWO,JULDAY
          GOTO      SPRA2100 IF NOT LESS  
          BRANCH    EXIT,SPRA9999,SPRA6000
          GOTO      SPRA9999
.
SPRA2100  DISPLAY   *P1:24,*EL,*B,*V2LON,"WARNING",*HOFF:
                    ": Missing days between this Period and next. ";
          CALL      HITENTER
          GOTO      SPRA9999
.
SPRA3000  BRANCH    EXIT,SPRA4000,SPRA6000
          GOTO      SPRA9999
.
SPRA4000  MOVE      SDRGCNUM,FORM2
          LOAD      TODAY,FORM2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          MATCH     "02",SDRGCNUM
          GOTO      SPRA5000 IF NOT EQUAL
          ADD       LEAPYR,TODAY
.
SPRA5000  UNPACK    SDRGTDTE,XDATE,XDAY
          MOVE      XDAY,IDAY
          SUB       IDAY,TODAY
          COMPARE   ZERO,TODAY
          GOTO      SPRA9999 IF EQUAL         
.
SPRA6000  DISPLAY   *P1:24,*EL,*B,*V2LON,"WARNING",*HOFF:
                    "This will be a Shortened Period. ";
          CALL      HITENTER
.
SPRA9999  RETURN
+
.**************************************************************************
.*                              SPRB0000                                  *
.**************************************************************************
SPRB0000  UNPACK    SDRGFDTE,CCENT,CYEAR,CMON,CDAY
          MOVE      CDAY,DD
          MOVE      CMON,MM
          MOVE      CYEAR,YY
          MOVE      CCENT,CC
          CALL      DMYCON
          MOVE      JULDAY,TODAY
.
          UNPACK    SDRGTDTE,CCENT,CYEAR,CMON,CDAY
          MOVE      CDAY,DD
          MOVE      CMON,MM
          MOVE      CYEAR,YY
          MOVE      CCENT,CC
          CALL      DMYCON
          SUB       TODAY,JULDAY
          ADD       ONE,JULDAY
.
          MOVE      SDRGCNUM,FORM2
          LOAD      JDAY,FORM2,JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
          MATCH     "02",SDRGCNUM
          GOTO      SPRB1000 IF NOT EQUAL
          ADD       LEAPYR,JDAY
.
SPRB1000  COMPARE   JDAY,JULDAY
          GOTO      SPRB8000 IF NOT LESS         
.
          MOVE      SDRGNUM,FORM2
          COMPARE   TWO,COPTION
          GOTO      SPRB1200 IF EQUAL
          SUB       ONE,FORM2
          COMPARE   ZERO,FORM2
          GOTO      SPRB1100 IF NOT EQUAL
          MOVE      SDRGNUM,FORM2
          PACK      KEY6,SDRGYR,SDRGNUM
          CALL      RDSDRGA1
          GOTO      SPRB1300
.
SPRB1100  MOVE      FORM2,XMON
          REP       " 0",XMON
          PACK      KEY6,SDRGYR,XMON
          CALL      RDDRGA1
          BRANCH    OVRCD,SPRB9000
          GOTO      SPRB1500
.
SPRB1200  PACK      KEY6,SDRGYR,SDRGNUM
          CALL      RDDRGA1
.
SPRB1300  CALL      RDPDRGA1
          BRANCH    OVRCD,SPRB9000
          MOVE      SDRGYR,FORM4
          MOVE      DRGYR,WORK4
          SUB       WORK4,FORM4
          COMPARE   TWO,FORM4
          GOTO      SPRB9000 IF NOT LESS
.
          MOVE      DRGNUM,IMON
          COMPARE   ZERO,FORM4
          GOTO      SPRB1400 IF EQUAL
          MATCH     "13",DRGNUM
          GOTO      SPRB1350 IF NOT EQUAL
          ADD       "13",FORM2
          GOTO      SPRB1400
.
SPRB1350  ADD       "12",FORM2
.
SPRB1400  SUB       IMON,FORM2
          COMPARE   TWO,FORM2
          GOTO      SPRB9000 IF NOT LESS
.
SPRB1500  UNPACK    DRGTDTE,CCENT,CYEAR,CMON,CDAY
          MOVE      CDAY,DD
          MOVE      CMON,MM
          MOVE      CYEAR,YY
          MOVE      CCENT,CC
          CALL      DMYCON
          COMPARE   JULDAY,TODAY
          GOTO      SPRB2000 IF NOT LESS
          ADD       "365",TODAY
          ADD       LEAPYR,TODAY
.
SPRB2000  SUB       JULDAY,TODAY
          COMPARE   TWO,TODAY
          GOTO      SPRB9000 IF LESS
.
          DISPLAY   *P1:24,*EL,*B,*V2LON,"WARNING",*HOFF:
                    ": Missing Days Between this Period & Previous.  ";
          CALL      HITENTER
          MOVE      ZERO,EXIT
          GOTO      SPRB9999
.
SPRB8000  MOVE      ONE,EXIT
          GOTO      SPRB9999
.
SPRB9000  MOVE      TWO,EXIT
.
SPRB9999  RETURN
+
.**************************************************************************
.*                              WRT0000                                   *
.*                          write a new record                            *
.**************************************************************************
WRT0000   PACK      KEY6,DRGYR,DRGNUM             * Key to be written
          CALL      WRDRGA1                       * Write the record
.
WRT9999   RETURN
+
.*************************************************************************
.*                                DISP0000                               *
.*                   display details corresponse to procedure code.      *
.*                   and save values read from file                      *
.*************************************************************************
DISP0000  UNPACK    DRGFDTE,CCENT,CYEAR,CMON,CDAY
          MOVE      TEN8,CCOL                     * Column for from date
          MOVE      SIX,CVERT                     * Line for from date
          MOVE      ZERO,CHIGHLT
          CALL      DSPDATE
.
          UNPACK    DRGTDTE,CCENT,CYEAR,CMON,CDAY
          MOVE      SEVEN,CVERT                   * Line for to dates
          CALL      DSPDATE
.
          DISPLAY   *P18:8,*V2LON,DRGCNUM,SLASH,DRGCYR:
                    *P18:9,DRGLDSC:
                    *P18:10,DRGMDSC:
                    *P18:11,DRGSDSC;
.
DISP9999 RETURN
+
.***************************************************************************
.*                               CONT0000                                  *
.*                          O.K. To Delete ?                               *
.***************************************************************************
CONT0000  KEYIN     *P1:24,*EL,"Ok to Delete (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          MATCH     ANS,ANSY
          GOTO      CONT1000 IF EQUAL
.
          MATCH     ANS,ANSN
          GOTO      CONT2000 IF EQUAL
          BEEP
          GOTO      CONT0000
.
CONT1000  MOVE      ZERO,EXIT
          GOTO      CONT9999
.
CONT2000  MOVE      ONE,EXIT
.
CONT9999 RETURN
+
.***************************************************************************
.*                               UPD0000                                   *
.*                      update record and insert key if part of            *
.*                      key has been modified.                             *
.***************************************************************************
UPD0000   PACK      KEY6,DRGYR,DRGNUM             * Key for record to update
          CALL      RDADRGA1                      * Read in the record
          CALL      UPDRGA1                       * Update the current record
.
UPD9999   RETURN
+
.****************************************************************************
.*                              DEL0000                                     *
.*                         delete an existing record                        *
.****************************************************************************
DEL0000   PACK      KEY6,DRGYR,DRGNUM             * Key to be deleted
          CALL      DEDRGA1                       * Delete the current record
.
DEL9999  RETURN
+
.***************************************************************************
.*                               KYER0000                                  *
.*                          Enter the years for copying                    *
.***************************************************************************
KYER0000  DISPLAY   *P18:4,UNDLN4;
.
          MOVE      TEN8,CCOL1          * Column for keyin of year
          MOVE      FOUR,CVERT          * Line for keyin of year
          MOVE      CCC,CCENT           * Default Century
          MOVE      SP2,CYEAR           * Default Year
.
          MOVE      ZERO,CHIGHLT        * Use highlighting
.
          CALL      KEYYEAR             * Key in the year
          BRANCH    OVRCD,KYER9000      * Nothing Entered
.
.         Validate that the year exists on file
.
          PACK      SDRGYR,ICENT,IYEAR  * Pack up the keyed in year
          REP       " 0",SDRGYR         * Zero fill the year
.
          PACK      KEY6,SDRGYR,SP2     * Check for a valid year
          CALL      RDSDRGA1
          CALL      RDKDRGA1
          BRANCH    OVRCD,KYER7000      * Invalid year.
.
          MATCH     SDRGYR,DRGYR        * Found the correct year ?
          GOTO      KYER7000 IF NOT EQUAL
.
.         We have the year, now get the increment
.
KYER1000  KEYIN     *P18:6,*DV,UNDLN1:
                    *P18:6,*V2LON,YRINC;
.
          COMPARE   ZERO,YRINC          * Was anything entered
          GOTO      KYER0000 IF EQUAL   * No.
.
.         Check if there is any data for this new year
.
          UNPACK    SDRGYR,CCENT,CYEAR
          CALL      ADDY0000            * Add YRINC to CCENT,CYEAR
          PACK      SDRGCYR,CCENT,CYEAR * Use this just to save new year
          PACK      KEY6,SDRGCYR,SP2
          CALL      RDSDRGA1
          CALL      RDKDRGA1
          BRANCH    OVRCD,KYER8000      * Not found, increment is valid
.
          MATCH     DRGYR,SDRGCYR       * Did we find a record for new year
          GOTO      KYER8000 IF NOT EQUAL
.
          DISPLAY   *P1:24,*EL,*B:
                    "There is already data for ",SDRGCYR,". ";
          CALL      HITENTER
          GOTO      KYER1000
.
.         No data for specified year
.
KYER7000  DISPLAY   *P1:24,*EL,*B,"No Periods for this Year. ";
          CALL      HITENTER
          GOTO      KYER0000
.
.         Valid year and increment
.
KYER8000  DISPLAY   *P1:10,"Copying periods from financial year ":
                    *V2LON,SDRGYR,*HOFF," to ",*V2LON,SDRGCYR;
.
          CALL      CONTQST
          MOVE      ZERO,EXIT
          MOVE      ANS,FORM1
          BRANCH    FORM1,KYER9999,KYER1000,KYER9000
.
.         Exit option selected
.
KYER9000  MOVE      ONE,EXIT
.
KYER9999  RETURN
+
.***************************************************************************
.*                               ADDY0000                                  *
.*                          Add YRINC to CCENT,CYEAR                       *
.***************************************************************************
ADDY0000  MOVE      CYEAR,IYEAR
          ADD       YRINC,IYEAR
          MOVE      IYEAR,XYEAR
          REP       " 0",XYEAR
.
.         Check if we have moved into a new century
.
          MATCH     XYEAR,CYEAR
          GOTO      ADDY8000 IF LESS
.
.         A New Century
.
          MOVE      CCENT,ICENT
          ADD       ONE,ICENT
          MOVE      ICENT,CCENT
          REP       " 0",CCENT
.
.         Finished
.
ADDY8000  MOVE      XYEAR,CYEAR
ADDY9999  RETURN
+
.***************************************************************************
.*                               COPY0000                                  *
.*                          Copy data for Year SDRGYR                      *
.***************************************************************************
COPY0000  DISPLAY   *P1:24,*EL,*P10:24,"Copying Period : ";
.
          PACK      KEY6,SDRGYR,SP2
          CALL      RDSDRGA1
.
COPY1000  CALL      RDKDRGA1
          BRANCH    OVRCD,COPY8000
.
          MATCH     DRGYR,SDRGYR
          GOTO      COPY8000 IF NOT EQUAL
.
          DISPLAY   *P27:24,*V2LON,DRGNUM,SLASH,DRGYR;
.
.         Increment all the dates
.
          UNPACK    DRGFDTE,CCENT,CYEAR,CMON,CDAY
          CALL      ADDY0000
          PACK      DRGFDTE,CCENT,CYEAR,CMON,CDAY
.
          UNPACK    DRGTDTE,CCENT,CYEAR,CMON,CDAY
          CALL      ADDY0000
          PACK      DRGTDTE,CCENT,CYEAR,CMON,CDAY
.
          UNPACK    DRGYR,CCENT,CYEAR
          CALL      ADDY0000
          PACK      DRGYR,CCENT,CYEAR
.
          UNPACK    DRGCYR,CCENT,CYEAR
          CALL      ADDY0000
          PACK      DRGCYR,CCENT,CYEAR
.
          DISPLAY   *P34:24," to ",*V2LON,DRGNUM,SLASH,DRGYR;
.
          PACK      KEY6,DRGYR,DRGNUM
          CALL      WRDRGA1
.
          PACK      KEY6,SDRGYR,DRGNUM  * Reposition back on original record
          CALL      RDDRGA1
          GOTO      COPY1000
.
COPY8000
.
COPY9999  RETURN
+
.==============================================================================
.
          INC       STD001IO
          INC       PATCOMN3
.
          INC       PATDRGIO/INC
          INC       PATDRGKY
