.*****************************************************************************
.* System    :   Patient Management System                                   *
.* Program   :   CONVWAIT                                                    *
.* Desc      :   Data Migration Program to upload W/L data from              *
.*               a third party legacy system into the W/L webPAS module.     *
.*****************************************************************************
.* Date      :   25/02/2011                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program will loop through the convwait.txt file and    *
.*               it will write new waiting list, suspension, ACC and History *
.*               records according to the record type of each valid upload   *
.*               record.                                                     *
.* Mods      :                                                               *
.*****************************************************************************
.*        V12.00.01  04.06.2025  Ebon Clements     TSK 0955096               *
.*                   Include GENANVIS                                        *
.*        V11.02.01  24.02.2022  DA Sarkies        TSK 0889899               *
.*                   Added lines to move contents of WMDESC2 and WMDESC3 to  *
.*                   BKRXUFF2 and BKRXUFF3                                   *
.*****************************************************************************
.*        V10.12.01  27/02/2018  Steve Armstrong   TSK 0852814               *
.*                   Mods to write a bokdiaaf record for W/L records         *
.*****************************************************************************
.*        V10.11.01  19/12/2017  Steve Armstrong   TSK 0850290               *
.*                   Mods to the logic for loading WTWMBSCD                  *
.*****************************************************************************
.*        V10.08.04  14/11/2016  Steve Armstrong   TSK 0828807               *
.*                   Mods to handle interpreter details (WINT0000)           *
.*        V10.08.03  21/10/2016  Steve Armstrong   TSK 0819758               *
.*                   Added new fields ACCDTYP1, ACCDDAT1, ACCDTYP2, ACCDDAT2,*
.*                   ACCDTYP3 & ACCDDAT3.                                    *
.*        V10.08.02  07/09/2016  Steve Armstrong   CAR 0825749               *
.*                   Moved the CALL to CLWATHIS for Type 3 (History) records *
.*                   so that it's after the CALL to GHIS0000 instead of      *
.*                   before it.                                              *
.*        V10.08.01  06/09/2016  Steve Armstrong   CAR 0825609               *
.*                   Recompiled for changes to UPACCDAT.                     *
.*****************************************************************************
.*        V10.07.05  09/02/2016  Steve Armstrong   CAR 0323625               *
.*                   Added new date keyed field (WMKEYDT)                    *
.*        V10.07.04  07/12/2015  Ebon Clements     CAR 324560                *
.*                   Fixed unscheduled test for setting WTWMBSCD             *
.*        V10.07.03  18/11/2015  Steve Armstrong   CAR 323971                *
.*                   Modified GUNI0000 to remove generation of unique id     *
.*                   using WTCNHCTU (not used) and to only generate a new    *
.*                   unique id from WTCNECNT where WAITECNT (wtwmecnt) is    *
.*                   blank.                                                  *
.*        V10.07.02  13/10/2015  Steve Armstrong   CAR 319164                *
.*                   Added new fields to the W/L detail record (WAITANAE     *
.*                   through to WAITLSTR).                                   *
.*                   Also added code to write comments to watmesaf or to     *
.*                   watmtxaf according to PTCNHDPS.                         *
.*        V10.07.01  06/10/2015  Steve Armstrong   CAR 322233                *
.*                   Mods to fix setting of HISCOUNT to use WTHIUCNT instead *
.*                   of WTHIPCNT.  Also changed GHIS0000 to use a passed     *
.*                   date field (EFFECDAT) so that it can be called when     *
.*                   writing history records as well as detail records.      *
.*****************************************************************************
.*        V10.06.04  05/08/2015  Steve Armstrong   CAR 320365                *
.*                   Mods to replace zero's with spaces for WAITAASC.        *
.*        V10.06.03  03/08/2015  Steve Armstrong   CAR 320247                *
.*                   Mods to WAITMAUT to only accept blank, 0 or 1.          *
.*        V10.06.02  22/07/2015  Steve Armstrong   CAR 318590                *
.*                   Recompiled for changes to UPACCDAT.                     *
.*                   Mods to allow any date for NBRSDBFT.
.*        V10.06.01  13/04/2015  Steve Armstrong   CAR 313849                *
.*                   Added functionality to handle ACC and History record    *
.*                   types (CRISP).                                          *
.*                   Also made changes to use a single temporary table for   *
.*                   category-codes mapping.                                 *
.*                   Also added WAITPHSP and WAITACPR fields to the W/L      *
.*                   details record (CRISP).                                 *
.*****************************************************************************
.*        V10.05.03  23/12/2014  Steve Armstrong   CAR 305263                *
.*                   Added mapping functionality                             *
.*        V10.05.02  12/02/2015  Ania P            CAR 312242                *
.*                   Added replace to var WAITMAUT                           *
.*                   Database stores 0/1 but VCOD requires Y/N               *
.*        V10.05.01  26/09/2014  Steve Armstrong   CAR 306586                *
.*                   Recompiled for changes to CLWATTR1                      *
.*****************************************************************************
.*        V10.04.03  04/06/2014  Steve Armstrong   CAR 301985                *
.*                   Reduced length of W/L comments to 3600 bytes to fit     *
.*                   record length below 4096 bytes.                         *
.*                   Also uncommented error logging for duplicate patatraf   *
.*                   record and fixed potential infinite loop for same.      *
.*        V10.04.02  09/05/2014  Peter Vela        CAR 279020                *
.*                   Added new upload fields:                                *
.*                   WAITEABR - Early Booking Reason (CAT b1)                *
.*                   WAITAUBY - Authorised By (CAT b2)                       *
.*                   WAITADAT - Procedure Date                               *
.*                   WAITPRPB - Procedure Can Be Performed By (CAT yh)       *
.*                   WAITAASC - Airway Assessment Score                      *
.*                   WAITVAL1 - Weight (kg)                                  *
.*                   WAITVAL2 - Height (cm)                                  *
.*                   WAITVAL3 - Calculated BMI                               *
.*        V10.04.01  17/03/2014  Steve Armstrong   CAR 296128                *
.*                   Added display of warning message if error records found.*
.*****************************************************************************
.*        V10.03.13  30/10/2013 Sandra Barcham     CAR 293106                *
.*                   For scheduled patients write wttxadmw to bkrxadwd       *
.*        V10.03.12  11/10/2012  Steve Armstrong   CAR 274144                *
.*                   Mods to key in default suspension codes for deferred    *
.*                   and staged (Cat VL) and populate wtsulsts accordingly.  *
.*                   Also changed to set wtsuauto to "1" for all suspension  *
.*                   records.                                                *
.*        V10.03.11  05/11/2012  Steve Armstrong   CAR 275794                *
.*                   Mods to fix I*D on ibaalvaf (due to spare variable      *
.*                   being null and table definition being not null).        *
.*        V10.03.10  23/05/2012  Steve Armstrong   CAR 265783                *
.*                   Mods to use the new standard validation for date/time.  *
.*        V10.03.09  23/05/2012  Steve Armstrong   CAR 265783                *
.*                   Mods to allow scheduled admit time to be any time.      *
.*        V10.03.08  24/04/2012  Steve Armstrong   CAR 264077                *
.*                   Mods to SETV0000 so that WAITDESC is loaded into WMDESC *
.*                   and WMDESC is only overwritten with the procedure       *
.*                   description (WPDESC) in VCOD0800 if WMDESC is blank.    *
.*        V10.03.07  23/04/2012  Steve Armstrong   CAR 264091                *
.*                   Mods to only write bokrc1af and bokrx1af records for    *
.*                   scheduled bookings.                                     *
.*        V10.03.06  22/03/2012  Steve Armstrong   CAR 262066                *
.*                   Added new upload field (WAITADMW).                      *
.*        V10.03.05  16/03/2012  Steve Armstrong   CAR 262015                *
.*                   Added new upload field (WAITREAS).                      *
.*        V10.03.04  14/03/2012  Ebon Clements     CAR 261658                *
.*                   Allow any date for scheduled admission date             *
.*        V10.03.03  24/02/2012  Steve Armstrong   CAR 260819                *
.*                   Mods to set suspension U/R in VURN0000 when processing  *
.*                   the W/L entry.                                          *
.*                   Also changed RAWTSUS1 to use WTSU variables.            *
.*        V10.03.02  22/02/2012  Steve Armstrong   CAR 260334                *
.*                   Fixed loading of procedure code and procedure count for *
.*                   suspension records so that they weren't loaded using    *
.*                   the parent W/L record values (which were not being set  *
.*                   if the parent record had an error).                     *
.*        V10.03.01  02/02/2012  Steve Armstrong   CAR 259396                *
.*                   Added WMPCAT to upload file format.                     *
.*****************************************************************************
.*        V10.02.03  11/10/2011  Steve Armstrong   CAR 251771                *
.*                   Mods to always generate a booking number regardless of  *
.*                   the record status (WAITSTAT).                           *
.*        V10.02.02  11/08/2011  Steve Armstrong   CAR 248383                *
.*                   Mods to not process valid suspension records which      *
.*                   follow an invalid W/L record.                           *
.*        V10.02.01  01/07/2011  Steve Armstrong   CAR 240723                *
.*                   Mods following removal of hospital code from PMSTEMFD.  *
.*        V10.02.00  25/02/2011  Steve Armstrong   CAR 240688                *
.*                   Created program                                         *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       ACCCMTFD/INC
          INC       ACCMAPFL/INC
          INC       BOKDIAFD/INC
          INC       BOKRC1FD/INC
          INC       BOKRX1FD/INC
          INC       DISMASFD/INC
          INC       IBAALVFD/INC
          INC       PATATRFD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATDO1FD/INC
          INC       PATHSPFD/INC
          INC       PATMA1FD/INC
          INC       PATVISFD/INC
          INC       PATWC1FD/INC
          INC       PATWR1FD/INC
          INC       PMSHCGFD/INC
          INC       PMSHCLFD/INC
          INC       PMSHCPFD/INC
          INC       PMSPX2FD/INC
          INC       PMSTEMFD/INC
          INC       PMSWX1FD/INC
          INC       VISIAUFD/INC
          INC       VISINTFD/INC
          INC       WATCATFD/INC
          INC       WATCONFD/INC
          INC       WATHISFD/INC
          INC       WATMESFD/INC
          INC       WATMHDFD/INC
          INC       WATMTXFD/INC
          INC       WATPROFD/INC
          INC       WATSUSFD/INC
          INC       WATTR1FD/INC
          INC       WATTX1FD/INC
.
.         Temporary Mapping Files
.
.TEMP1  Category-Codes (patcodes)  --
.TEMP2  Insurer (patin1af)          |  These definitions are in ACCMAPFL.INC
.TEMP3  Employer (pateoraf)         |
.TEMP4  HCP (pmshcpaf)              |
.TEMP5  Title (pmstleaf)            |
.TEMP6  Relation (pmsrelaf)        __
.
.
.         Disaster File - disaster.dat
.
DISASTER  FORM      1                       * disaster file flag
TEMP7     IFILE     SQL, FIXED=19, KEY="U1-9"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDISTR  DIM        9        9         1       Old Disaster code
NEWDISTR  DIM        9        9         10      New Disaster code
.End of Record                          19
.
.
.         Team File - teamfile.dat
.
TEAMFLAG  FORM      1                       * team file flag
TEMP8     IFILE     SQL, FIXED=11, KEY="U1-5"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDTEAMC  DIM        5        5         1       Old Practice code
NEWTEAMC  DIM        5        5         6       New Practice code
.End of Record                          11
.
.
.         Doctor Code File - doctor.dat (patdo1af)
.
DCODEFLG  FORM      1                            * Doctor Code mapping flag
TEMP9     IFILE     SQL, FIXED=13, KEY="U1-6"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDCODE  DIM       6        6          1       Old doctor type code
NEWDCODE  DIM       6        6          7       New doctor type code
.End of Record                         13
.
.
.         Hospital File - hospital.dat (pathspaf)
.
HOSPLFLG  FORM      1                            * Hospital mapping flag
TEMP10     IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDHOSPL  DIM       3        3          1       Old hospital code
NEWHOSPL  DIM       3        3          4       New hospital code
.End of Record                          7
.
.
.         GP Practice File - practice.dat
.
PRACTICE  FORM      1                       * practice file flag
TEMP11    IFILE     SQL, FIXED=21, KEY="U1-10"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDPRAC   DIM       10       10         1       Old Practice code
NEWPRAC   DIM       10       10         11      New Practice code
.End of Record                          21
.
.
.         Ward/Bed File - wardbed.dat (patwr1af)
.
WRDBDFLG  FORM      1                            * Ward/Bed Code mapping flag
TEMP12    IFILE     SQL, FIXED=13, KEY="U1-3,4-6"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDWARD   DIM       3        3          1       Old ward code
OLDBED    DIM       3        3          4       Old bed code
NEWWARD   DIM       3        3          7       New ward code
NEWBED    DIM       3        3         10       New bed code
.End of Record                         13
.
.
.         Waiting List upload file layout - convwait.txt
.         W/L Record Layout
.
WLISTUPL  FILE      HL7, FIXED=4082         * Pipe delimited upload file
.                                             4096 is maximum
.
.         Fields must be pipe delimited and in the following sequence.
.         Field lengths are irrelevant other than the fact that where
.         a field is longer than allowed, the extra data will be ignored.
.
WAITTYPE  DIM       1     1       * W/L record type
.                                     0 = W/L 
.PIPE     DIM       1     2       * Pipe Delimiter
WAITURNO  DIM       8     3       * U/R Number                          (wmurno)
.PIPE     DIM       1     11      * Pipe Delimiter
WAITCODE  DIM       9     12      * Procedure Code 1 (watproaf)         (wmcode)
.PIPE     DIM       1     21      * Pipe Delimiter
WAITCOD2  DIM       9     22      * Procedure Code 2 (watproaf)       (wtwmpro2)
.PIPE     DIM       1     31      * Pipe Delimiter
WAITCOD3  DIM       9     32      * Procedure Code 3 (watproaf)       (wtwmpro3)
.PIPE     DIM       1     41      * Pipe Delimiter
WAITDESC  DIM       80    42      * Procedure Description               (wmdesc)
.PIPE     DIM       1     122     * Pipe Delimiter
WAITDATL  DIM       8     123     * Date on List (ccyymmdd)            (wmdate1)
.PIPE     DIM       1     131     * Pipe Delimiter
WAITSTAT  DIM       1     132     * Procedure Status                    (wmstat)
.                                       1 = Unscheduled
.                                       2 = Scheduled
.PIPE     DIM       1     133     * Pipe Delimiter
WAITUNIT  DIM       3     134     * Unit/Clinic (Cat WU)                (wmunit)
.PIPE     DIM       1     137     * Pipe Delimiter
WAITDOCT  DIM       6     138     * Attending Doctor (patdo1af)       (wmdoctor)
.PIPE     DIM       1     144     * Pipe Delimiter
WAITCTYP  DIM       3     145     * Claim Code (Cat CL)               (wttxctyp)
.PIPE     DIM       1     148     * Pipe Delimiter
WAITPRTY  DIM       3     149     * Priority (Cat TP)                    (wmpty)
.PIPE     DIM       1     152     * Pipe Delimiter
WAITIHSP  DIM       3     153     * Intended Hospital (pathspaf)      (wtwmihsp)
.PIPE     DIM       1     156     * Pipe Delimiter
WAITSRCR  DIM       3     157     * Source of Referral                          
.                                      Category WTCNBRSR dependent
.                                        0 = S                        (wtwmsrcr)
.                                        1 = W1                        (wmudef1)
.                                        2 = W2                        (wmudef2)
.                                        3 = W3                        (wmudef3)
.                                        4 = W4                        (wmudef4)
.                                        5 = X5                        (wmudef5)
.                                        6 = X6                        (wmudef6)
.                                        7 = X7                        (wmudef7)
.                                        8 = X8                        (wmudef8)
.PIPE     DIM       1     160     * Pipe Delimiter
WAITPLST  DIM       3     161     * List Status (PRS/2) (Cat VL)      (wttxplst)
.PIPE     DIM       1     164     * Pipe Delimiter
WAITDATS  DIM       8     165     * Scheduled Admit Date (ccyymmdd)    (wmdate3)
.PIPE     DIM       1     173     * Pipe Delimiter
WAITTIMS  DIM       8     174     * Scheduled Admit Time (hh:mm:ss)   (wttxpatm)
.PIPE     DIM       1     182     * Pipe Delimiter
WAITSTAY  DIM       5     183     * Estimated Stay                      (wmstay)
.PIPE     DIM       1     188     * Pipe Delimiter
WAITNICE  DIM       3     189     * Short Notice (Cat WS)             (wmnotice)
.PIPE     DIM       1     192     * Pipe Delimiter
WAITCLSS  DIM       3     193     * Patient Cat/Adm Class (Cat P)     (wtwmclss)
.PIPE     DIM       1     196     * Pipe Delimiter
WAITEATY  DIM       3     197     * Elective Admission Type (Cat CC)  (wtwmeaty)
.PIPE     DIM       1     200     * Pipe Delimiter
WAITRFGP  DIM       10    201     * Referring GP (pmshcpaf)           (wtwmrfgp)
.PIPE     DIM       1     211     * Pipe Delimiter
WAITGPPC  DIM       10    212     * GP Practice (pmshcgaf)            (wtwmgppc)
.PIPE     DIM       1     222     * Pipe Delimiter
WAITBOTY  DIM       3     223     * Booking Type (Cat BK)             (wttxboty)
.PIPE     DIM       1     226     * Pipe Delimiter
WAITTEAM  DIM       5     227     * Team                              (wttxteam)
.PIPE     DIM       1     232     * Pipe Delimiter
WAITFUND  DIM       3     233     * Funding Source (Cat cx)           (wttxfund)
.PIPE     DIM       1     236     * Pipe Delimiter
WAITWARD  DIM       3     237     * Ward (patwr1af)                   (wttxward)
.PIPE     DIM       1     240     * Pipe Delimiter
WAITPREF  DIM       3     241     * Preferred Accommodation (Cat BP)  (wttxpref)
.PIPE     DIM       1     244     * Pipe Delimiter
WAITNWHC  DIM       3     245     * No WA Hospital Contact (Cat cw)   (wttxnwhc)
.PIPE     DIM       1     248     * Pipe Delimiter
WAITINTD  DIM       3     249     * Intended Stay (Cat VI)            (wttxintd)
.PIPE     DIM       1     252     * Pipe Delimiter
WAITMAUT  DIM       1     253     * Medical Authorisation Approved    (wttxmaut)
.                                         Blank = Blank
.                                         0 = No
.                                         1 = Yes
.PIPE     DIM       1     254     * Pipe Delimiter
WAITEXPD  DIM       8     255     * Expected Delivery Date (ccyymmdd) (wttxexpd)
.PIPE     DIM       1     263     * Pipe Delimiter
WAITTCRS  DIM       3     264     * Tertiary Care Reason (Cat WH)     (wttxtcrs)
.PIPE     DIM       1     267     * Pipe Delimiter
WAITDISC  DIM       9     268     * Disaster Code (dismasaf)          (wttxdisc)
.PIPE     DIM       1     277     * Pipe Delimiter
WAITRCLI  DIM       10    278     * Referring Clinician               (wttxrcli)
.PIPE     DIM       1     288     * Pipe Delimiter
WAITRCLP  DIM       10    289     * Referring Clinician Practice      (wttxrclp)
.PIPE     DIM       1     299     * Pipe Delimiter
WAITCDTE  DIM       8     300     * Date Record Created (ccyymmdd)    (wttxcdte)
.PIPE     DIM       1     308     * Pipe Delimiter
WAITCTIM  DIM       8     309     * Time Record Created (hh:mm:ss)    (wttxctim)
.PIPE     DIM       1     317     * Pipe Delimiter
WAITWEBC  DIM       10    318     * Web User ID Created               (wttxwebc)
.PIPE     DIM       1     328     * Pipe Delimiter
WAITLUPD  DIM       8     329     * Date Record Updated (ccyymmdd)    (wttxlupd)
.PIPE     DIM       1     337     * Pipe Delimiter
WAITLUPT  DIM       8     338     * Time Record Updated (hh:mm:ss)    (wttxlupt)
.PIPE     DIM       1     346     * Pipe Delimiter
WAITWEBU  DIM       10    347     * Web User ID Updated               (wttxwebu)
.PIPE     DIM       1     357     * Pipe Delimiter
WAITAVIS  DIM       20    358     * Alternate Visit Number            (ibavavis)
.PIPE     DIM       1     378     * Pipe Delimiter
WAITCOMM  DIM       3500  379     * Comments  (35 x 100)              (wtmtcmnt)
.PIPE     DIM       1     3879    * Pipe Delimiter
WAITPCAT  DIM       3     3880    * Admission Type (Cat A)            (wmpcat)
.PIPE     DIM       1     3883    * Pipe Delimiter
WAITREAS  DIM       40    3884    * Reason/Diagnosis for procedure    (wmreason)
.PIPE     DIM       1     3924    * Pipe Delimiter
WAITADMW  DIM       3     3925    * Admitting Ward (Cat ap)           (wttxadmw)
.PIPE     DIM       1     3928    * Pipe Delimiter
WAITEABR  DIM       3     3929    * Early Booking Reason (Cat b1)     (bkrxeabr)
.PIPE     DIM       1     3932    * Pipe Delimiter
WAITAUBY  DIM       3     3933    * Authorised By (Cat b2)            (bkrxauby)
.PIPE     DIM       1     3936    * Pipe Delimiter
WAITADAT  DIM       8     3937    * Procedure Date (ccyymmdd)         (bkreadat)
.PIPE     DIM       1     3945    * Pipe Delimiter
WAITPRPB  DIM       3     3946    * Proc. Can Be Performed By (Cat yh)(wttxprpb)
.PIPE     DIM       1     3949    * Pipe Delimiter
WAITAASC  DIM       4     3950    * Airway Assessment Score (ASA)     (wttxaasc)
.PIPE     DIM       1     3954    * Pipe Delimiter
WAITVAL1  DIM       6     3955    * Weight (kg)                       (ptarval1)
.PIPE     DIM       1     3961    * Pipe Delimiter
WAITVAL2  DIM       6     3962    * Height (cm)                       (ptarval2)
.PIPE     DIM       1     3968    * Pipe Delimiter
WAITVAL3  DIM       5     3969    * Calculated BMI                    (ptarval3)
.PIPE     DIM       1     3974    * Pipe Delimiter
WAITPHSP  DIM       3     3975    * Principal Health Service          (wtwmphsp)
.                                      Purchaser (Cat HP)
.PIPE     DIM       1     3978    * Pipe Delimiter
WAITACPR  DIM       8     3979    * Actual Procedure Event Number     (wtwmacpr)
.PIPE     DIM       1     3987    * Pipe Delimiter
WAITANAE  DIM       3     3988    * Anaesthetic Type (Cat OA)         (wttxanae)
.PIPE     DIM       1     3991    * Pipe Delimiter
WAITECNT  DIM       9     3992    * ESIS unique count                 (wtwmecnt)
.                                   *NZ - Local Booking Identifier for NBRS
.PIPE     DIM       1     4001    * Pipe Delimiter
WAITDABD  DIM       8     4002    * Do Not Admit Before Date/Proposed (wtwmdabd)
.                                   Operation Date
.                                   *NZ - Proposed Procedure Date
.                                   - Staged Due date NBRS (ccyymmdd)
.PIPE     DIM       1     4010    * Pipe Delimiter
WAITPOTM  DIM       8     4011    * Proposed Operation Time           (wttxpotm)
.                                   (hh:mm:ss)
.PIPE     DIM       1     4019    * Pipe Delimiter
WAITRANK  DIM       6     4020    * Patient Rank (Score)              (wtwmrank)
.PIPE     DIM       1     4026    * Pipe Delimiter
WAITDRSA  DIM       8     4027    * Date of ref for 1st spec.         (wtwmdrsa)
.                                   assessment (ccyymmdd)
.                                   *NZ - Date of Referral for FSA
.PIPE     DIM       1     4035    * Pipe Delimiter
WAITDOSA  DIM       8     4036    * Date of 1st specialised           (wtwmdosa)
.                                   assessment (ccyymmdd)
.                                   *NZ - Date of FSA
.PIPE     DIM       1     4044    * Pipe Delimiter
WAITASSR  DIM       10    4045    * Assessor Code (pmshcpaf)          (wtwmassr)
.PIPE     DIM       1     4055    * Pipe Delimiter
WAITDTAD  DIM       8     4056    * Decision to Admit Date            (wtwmdtad)
.                                   (ccyymmdd)
.                                   *NZ - Date of Certainty
.PIPE     DIM       1     4064    * Pipe Delimiter
WAITDAT2  DIM       8     4065    * Date of Last Review (ccyymmdd) /  (wmdate2)
.                                   Final Outcome of Offer
.PIPE     DIM       1     4073    * Pipe Delimiter
WAITKEYD  DIM       8     4074    * Keyin Date for Procedure (ccyymmdd)(wmkeydt)
.
. End of Record           4082
.
.
.         Suspension Record Layout
.
.         Fields must be pipe delimited and in the following sequence.
.         Field lengths are irrelevant other than the fact that where
.         a field is longer than allowed, the extra data will be ignored.
.
.WAITTYPE DIM       1     1      * W/L record type
.                                     1 = W/L Suspension
.PIPE     DIM       1     2      * Pipe Delimiter
.WAITURNO DIM       8     3      * U/R Number                        (wtsuurno)
.PIPE     DIM       1     11     * Pipe Delimiter
.WAITCODE DIM       9     12     * Procedure Code                    (wtsucode)
.PIPE     DIM       1     21     * Pipe Delimiter
SUSPFDAT  DIM       8     22     * From Date (ccyymmdd)              (wtsufdat)
.PIPE     DIM       1     30     * Pipe Delimiter
SUSPTDAT  DIM       8     31     * To Date (ccyymmdd)                (wtsutdat)
.PIPE     DIM       1     39     * Pipe Delimiter
SUSPREAS  DIM       3     40     * Suspension Reason (Cat WN)        (wtsureas)
.PIPE     DIM       1     43     * Pipe Delimiter
.WAITCOMM DIM       3500  44     * Comments  (35 x 100)              (wtmtcmnt)
.
. End of Record          3544
.
.
.         ACC Data Records
.
.         Fields must be pipe delimited and in the following sequence.
.         Field lengths are irrelevant other than the fact that where
.         a field is longer than allowed, the extra data will be ignored.
.
.WAITTYPE DIM       1      1      * W/L record type
.                                     2 = ACC Data
.PIPE     DIM       1      2      * Pipe Delimiter
.WAITURNO DIM       8      3      * U/R Number                        (ptwcurno)
.PIPE     DIM       1      11     * Pipe Delimiter
.WAITCODE DIM       9      12     * Procedure Code
.PIPE     DIM       1      21     * Pipe Delimiter
ACCDNAME  DIM       30     22     * Employer Name                     (wcename)
.PIPE     DIM       1      52     * Pipe Delimiter
ACCDADD1  DIM       35     53     * Employer Address Line 1           (wceadd1)
.PIPE     DIM       1      88     * Pipe Delimiter
ACCDADD2  DIM       35     89     * Employer Address Line 2           (wceadd2)
.PIPE     DIM       1      124    * Pipe Delimiter
ACCDADD3  DIM       35     125    * Employer Address Line 3           (wceadd3)
.PIPE     DIM       1      160    * Pipe Delimiter
ACCDADD4  DIM       35     161    * Employer Address Line 4           (wceadd4)
.PIPE     DIM       1      196    * Pipe Delimiter
ACCDPOST  DIM       8      197    * Employer Postcode                 (wcepost)
.PIPE     DIM       1      205    * Pipe Delimiter
ACCDTELP  DIM       20     206    * Employer Telephone                (wcetele)
.PIPE     DIM       1      226    * Pipe Delimiter
ACCDACDT  DIM       8      227    * Date of Accident (ccyymmdd)       (wcacdat)
.PIPE     DIM       1      235    * Pipe Delimiter
ACCDACPT  DIM       1      236    * Accepted by Ins. Co. (Y/N)        (wcaccpt)
.PIPE     DIM       1      237    * Pipe Delimiter
ACCDINSR  DIM       6      238    * Insurance Company Code            (wcicode)
.PIPE     DIM       1      244    * Pipe Delimiter
ACCDCLNO  DIM       20     245    * Insurance Claim Number            (wcclmno)
.PIPE     DIM       1      265    * Pipe Delimiter
ACCDCOM1  DIM       40     266    * Comments 1                        (wccomn1)
.PIPE     DIM       1      306    * Pipe Delimiter
ACCDCOM2  DIM       40     307    * Comments 2                        (wccomn2)
.PIPE     DIM       1      347    * Pipe Delimiter
ACCDALOC  DIM       50     348    * Accident Location                 (pmwxaloc)
.PIPE     DIM       1      398    * Pipe Delimiter
ACCDCINJ  DIM       3      399    * Cause of Injury (Cat IK)          (pmwxcinj)
.PIPE     DIM       1      402    * Pipe Delimiter
ACCDICOD  DIM       3      403    * Injury Code (Cat IJ)              (pmwxicod)
.PIPE     DIM       1      406    * Pipe Delimiter
ACCDCNAM  DIM       40     407    * Contact Name                      (pmwxcnam)
.PIPE     DIM       1      447    * Pipe Delimiter
ACCDCDTE  DIM       8      448    * Date Record Created (ccyymmdd)    (pmwxcdte)
.PIPE     DIM       1      456    * Pipe Delimiter
ACCDCTIM  DIM       8      457    * Time Record Created (hh:mm:ss)    (pmwxctim)
.PIPE     DIM       1      465    * Pipe Delimiter
ACCDWEBC  DIM       10     466    * WEB User ID Record Creator        (pmwxwebc)
.PIPE     DIM       1      476    * Pipe Delimiter
ACCDLUPD  DIM       8      477    * Last Update Date (ccyymmdd)       (pmwxlupd)
.PIPE     DIM       1      485    * Pipe Delimiter
ACCDLUPT  DIM       8      486    * Last Update Time (hh:mm:ss)       (pmwxlupt)
.PIPE     DIM       1      494    * Pipe Delimiter
ACCDWEBU  DIM       10     495    * WEB User ID Record Updator        (pmwxwebu)
.PIPE     DIM       1      505    * Pipe Delimiter
ACCDACCF  DIM       3      506    * Work Related (Cat IQ)             (pmwxaccf)
.PIPE     DIM       1      509    * Pipe Delimiter
ACCDPLIN  DIM       3      510    * Place Injury Occurred (Cat IP)    (pmwxplin)
.PIPE     DIM       1      513    * Pipe Delimiter
ACCDACTI  DIM       3      514    * Activity When Injured (Cat IO)    (pmwxacti)
.PIPE     DIM       1      517    * Pipe Delimiter
ACCDADTE  DIM       8      518    * ACC Decline Date (ccyymmdd)       (pmwxadte)
.PIPE     DIM       1      526    * Pipe Delimiter
ACCDATME  DIM       8      527    * Accident Time (hh:mm:ss)          (pmwxatme)
.PIPE     DIM       1      535    * Pipe Delimiter
ACCDACLC  DIM       3      536    * Accident Location (Cat IM)        (pmwxaclc)
.PIPE     DIM       1      539    * Pipe Delimiter
ACCDAINZ  DIM       1      540    * Accident in NZ (Y/N)              (pmwxainz)
.PIPE     DIM       1      541    * Pipe Delimiter
ACCDMOVV  DIM       1      542    * Involves Moving Vehicle           (pmwxmovv)
.                                    on Public Road (Y/N)
.PIPE     DIM       1      543    * Pipe Delimiter
ACCDSPTI  DIM       1      544    * Sporting Injury (Y/N)             (pmwxspti)
.PIPE     DIM       1      545    * Pipe Delimiter
ACCDSPRT  DIM       3      546    * Sport Name (Cat IB)               (pmwxsprt)
.PIPE     DIM       1      549    * Pipe Delimiter
ACCDRECI  DIM       1      550    * Recurring Injury Indicator (Y/N)  (pmwxreci)
.PIPE     DIM       1      551    * Pipe Delimiter
ACCDTRIC  DIM       1      552    * Treatment Injury Claim (Y/N)      (pmwxtric)
.PIPE     DIM       1      553    * Pipe Delimiter
ACCDESTA  DIM       3      554    * Employment Status (Cat IF)        (pmwxesta)
.PIPE     DIM       1      557    * Pipe Delimiter
ACCDPDDT  DIM       8      558    * Patient Declaration Date          (pmwxpddt)
.                                     (ccyymmdd)
.PIPE     DIM       1      566    * Pipe Delimiter
ACCDARG1  DIM       20     567    * Authorised Representative         (pmwxarg1)
.                                     Given Name 1
.PIPE     DIM       1      587    * Pipe Delimiter
ACCDARG2  DIM       20     588    * Authorised Representative         (pmwxarg2)
.                                     Given Name 2
.PIPE     DIM       1      608    * Pipe Delimiter
ACCDARSN  DIM       25     609    * Authorised Representative         (pmwxasrn)
.                                     Surname
.PIPE     DIM       1      634    * Pipe Delimiter
ACCDARTL  DIM       4      635    * Authorised Representative         (pmwxartl)
.                                     Title (pmstleaf)
.PIPE     DIM       1      639    * Pipe Delimiter
ACCDARRP  DIM       10     640    * Authorised Representative         (pmwxarrp)
.                                     Relation
.PIPE     DIM       1      650    * Pipe Delimiter
ACCDASST  DIM       1      651    * Assistance is Required (Y/N)      (pmwxasst)
.PIPE     DIM       1      652    * Pipe Delimiter
ACCDNEED  DIM       1      653    * Need to Call HP (Y/N)             (pmwxneed)
.PIPE     DIM       1      654    * Pipe Delimiter
ACCDCONT  DIM       1      655    * Continue Normal Hours of          (pmwxcont)
.                                     Work (Y/N)
.PIPE     DIM       1      656    * Pipe Delimiter
ACCDALTW  DIM       1      657    * Alternative Work Indicator (Y/N)  (pmwxaltw)
.PIPE     DIM       1      658    * Pipe Delimiter
ACCDTYPA  DIM       3      659    * Type of Alternative Work (Cat IH) (pmwxtypa)
.PIPE     DIM       1      662    * Pipe Delimiter
ACCDSALT  DIM       8      663    * Start Date of Alternative         (pmwxsalt)
.                                     Work (ccyymmdd)
.PIPE     DIM       1      671    * Pipe Delimiter
ACCDHPDA  DIM       2      672    * Hours per Day of Alternative      (pmwxhpda)
.                                     Work
.PIPE     DIM       1      674    * Pipe Delimiter
ACCDUNFD  DIM       3      675    * Unfit for Work for Duration       (pmwxunfd)
.PIPE     DIM       1      678    * Pipe Delimiter
ACCDUNFT  DIM       3      679    * Unfit for Work for Type (Cat UI)  (pmwxunft)
.PIPE     DIM       1      682    * Pipe Delimiter
ACCDFISD  DIM       8      683    * Full Incapacity Start Date        (pmwxfisd)
.                                     (ccyymmdd)
.PIPE     DIM       1      691    * Pipe Delimiter
ACCDRNWD  DIM       8      692    * Return to Normal Work Date        (pmwxrnwd)
.                                     (ccyymmdd)
.PIPE     DIM       1      700    * Pipe Delimiter
ACCDCSTA  DIM       1      701    * Claim Status                      (pmwxcsta)
.                                     0 = Existing
.                                     1 = Parked
.                                     2 = Completed
.PIPE     DIM       1      702    * Pipe Delimiter
ACCDTWRK  DIM       3      703    * Type of Work (Cat IX)             (pmwxtwrk)
.PIPE     DIM       1      706    * Pipe Delimiter
ACCDOEST  DIM       50     707    * Other Employment Status           (pmwxoest)
.PIPE     DIM       1      757    * Pipe Delimiter
ACCDTPRO  DIM       10     758    * HCP Treatment Provider            (pmwxtpro)
.PIPE     DIM       1      768    * Pipe Delimiter
ACCDECOD  DIM       6      769    * Employer Code (pateoraf)          (pmwxecod)
.PIPE     DIM       1      775    * Pipe Delimiter
ACCDTYP1  DIM       3      776    * Hard-coded Comment Type           (accmtype)
.                                     001 = Cause of Injury
.PIPE     DIM       1      779    * Pipe Delimiter
ACCDDAT1  DIM       500    780    * Cause of Injury Comments          (accmdata)
.PIPE     DIM       1     1280    * Pipe Delimiter
ACCDTYP2  DIM       3     1281    * Hard-coded Comment Type           (accmtype)
.                                     002 = Injury Comments
.PIPE     DIM       1     1284    * Pipe Delimiter
ACCDDAT2  DIM       500   1285    * Injury Comments                   (accmdata)
.PIPE     DIM       1     1785    * Pipe Delimiter
ACCDTYP3  DIM       3     1786    * Hard-coded Comment Type           (accmtype)
.                                     003 = Alternative Work Restrictions
.PIPE     DIM       1     1789    * Pipe Delimiter
ACCDDAT3  DIM       500   1790    * Alternative Work Restrictions Comments
.                                                                     (accmdata)
.
. End of Record           2290
.
.
.         W/L History Records
.
.         Fields must be pipe delimited and in the following sequence.
.         Field lengths are irrelevant other than the fact that where
.         a field is longer than allowed, the extra data will be ignored.
.
.WAITTYPE DIM       1      1      * W/L record type
.                                     3 = W/L History
.PIPE     DIM       1      2      * Pipe Delimiter
.WAITURNO DIM       8      3      * U/R Number                        (wthiurno)
.PIPE     DIM       1      11     * Pipe Delimiter
.WAITCODE DIM       9      12     * Procedure Code                    (wthiproc)
.PIPE     DIM       1      21     * Pipe Delimiter
NBRSEDAT  DIM       8      22     * Effective from date (ccyymmdd)    (wthiedat)
.PIPE     DIM       1      30     * Pipe Delimiter
NBRSUCNT  DIM       4      31     * Unique Count                      (wthiucnt)
.PIPE     DIM       1      35     * Pipe Delimiter
NBRSPRIO  DIM       3      36     * Priority (Cat TP)                 (wthiprio)
.PIPE     DIM       1      39     * Pipe Delimiter
NBRSRANK  DIM       6      40     * Patient Rank                      (wthirank)
.PIPE     DIM       1      46     * Pipe Delimiter
NBRSBSCD  DIM       2      47     * Booking status code               (wthibscd)
.                                           01 - Booked (NBRS)
.                                           02 - Given Certainty (Scheduled and
.                                                Date Scheduled for Admission
.                                                Entered) (NBRS)
.                                           03 - Wait Listed (NBRS)
.                                           04 - Care and Review (NBRS)
.                                           05 - Cancelled Booking (NBRS)
.                                           06 - Rebooked (NBRS)
.                                           07 - Rank Change (NBRS)
.                                           20 - Exited
.                                           21 - Status Changed (WEB)
.                                           22 - Unit Changed (WEB)
.                                           30 - Take Up Booking (WEB)
.                                           31 - Doctor Change   (WEB)
.                                           32 - Unremove        (WEB)
.                                           33 - Admitted        (WEB)
.                                           34 - Changed Procedure code(WEB)
.                                           35 - Changed Consent Status(WEB)
.PIPE     DIM       1      49     * Pipe Delimiter
NBRSDCGV  DIM       8      50     * Date certainty given (ccyymmdd)   (wthidcgv)
.PIPE     DIM       1      58     * Pipe Delimiter
NBRSDBFT  DIM       8      59     * Date booked for treatment         (wthidbft)
.                                     (ccyymmdd)
.PIPE     DIM       1      67     * Pipe Delimiter
NBRSRECS  DIM       1      68     * Record Sent Flag                  (wthirecs)
.                                         "N" for No, "Y" for Yes
.PIPE     DIM       1      69     * Pipe Delimiter
NBRSRTYP  DIM       1      70     * Record Type                       (wthirtyp)
.                                         A=add, C=Change D=Delete
.                                         E=Erase sp=don't include in NBR
.PIPE     DIM       1      71     * Pipe Delimiter
NBRSRCDT  DIM       8      72     * Rank change date (ccyymmdd)       (wthircdt)
.PIPE     DIM       1      80     * Pipe Delimiter
NBRSBMDT  DIM       8      81     * Date booking made (ccyymmdd)      (wthibmdt)
.PIPE     DIM       1      89     * Pipe Delimiter
NBRSETIM  DIM       8      90     * Effective time (hh:mm:ss)         (wthietim)
.PIPE     DIM       1      98     * Pipe Delimiter
NBRSBCAN  DIM       3      99     * Booking cancellation reason       (wthibcan)
.                                     (Cat BC)
.PIPE     DIM       1      102    * Pipe Delimiter
NBRSDRSA  DIM       8      103    * Date of referral for FSA          (wthidrsa)
.                                     (ccyymmdd)
.PIPE     DIM       1      111    * Pipe Delimiter
NBRSDOSA  DIM       8      112    * Date of FSA (ccyymmdd)            (wthidosa)
.PIPE     DIM       1      120    * Pipe Delimiter
NBRSPHSP  DIM       3      121    * Purchaser (Cat HP)                (wthiphsp)
.PIPE     DIM       1      124    * Pipe Delimiter
NBRSPCHS  DIM       3      125    * Health Specialty (Cat A)          (wthipchs)
.PIPE     DIM       1      128    * Pipe Delimiter
NBRSBRSR  DIM       3      129    * Booking referral source           (wthibrsr)
.                                     (Category parameter dependent)
.                                     (Category W1-4 or X5-8)
.PIPE     DIM       1      132    * Pipe Delimiter
NBRSASSR  DIM       10     133    * Assessor code (pmshcpaf)          (wthiassr)
.
. End of Record            143
.
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ACCCMTYP  DIM       3
ACCCOMNT  DIM       500
ACCCOUNT  FORM      1
ADDCOUNT  FORM      8             * added record count
.
CODCOUNT  FORM      8             * code error record count
CODE      DIM       2
COMCOUNT  FORM      8             * comment error record count
COMMTLEN  FORM      4
CURRCENT  FORM      2             * current century
CURRDATE  DIM       8             * current date
.
DATEFLG1  FORM      1             * Date Type flag
.                                     0 = full date (ccyymmdd)
.                                     1 = partial date (ccyymm)
DATEFLG2  FORM      1             * Dates Allowed flag
.                                     0 = any date allowed
.                                     1 = future dates not allowed
.                                     2 = past dates not allowed
.
DIM1A     DIM       1
DIM1B     DIM       1
DIM17     DIM       17
DIM2C     DIM       2
DIM2D     DIM       2
DIM2H     DIM       2
DIM2M     DIM       2
DIM2S     DIM       2
DIM2Y     DIM       2
DIM3      DIM       3
DIM4      DIM       4
DIM44     DIM       44
DIM70     DIM       70
DIM100    DIM       100
DTECOUNT  FORM      8             * date error record count
DUPCOUNT  FORM      8             * duplicate record count
.
EFFECDAT  DIM       8
ERORDESC  DIM       70
ERORFLAG  FORM      1             * Field Validation Error Flag
.                                     0 = No Errors on Field Validations
.                                     1 = Errors on Field Validations
.
FORM3     FORM      3
FORM5     FORM      5
FORM6     FORM      6
FORM10    FORM      10
.
HISCOUNT  FORM      2
.
LINENUMA  FORM      2
LINENUMB  FORM      3
LISTCOD1  DIM       3
LISTCOD2  DIM       3
.
MANCOUNT  FORM      8             * mandatory field error record count
.
NBRCOUNT  FORM      4             * NBRS record (type 3) count
NOTCOUNT  FORM      6             * note count
NXTCOUNT  FORM      2             * next patient/procedure count
NUMCOUNT  FORM      8             * numeric error record count
.
PARCOUNT  FORM      8             * susp/acc record count where parent has error
.
RECCOUNT  FORM      8             * record read counter
.
SAVECODE  DIM       9             * saved procedure code
SAVEURNO  DIM       8             * saved U/R number
SEQCOUNT  FORM      8             * sequence error record count
SOREFCAT  DIM       2             * source of referral category
SUSCOUNT  FORM      2             * suspension count
.
TEMPCATG  DIM       10            * Category (or HF for HF Table validation)
TEMPCODE  DIM       10            * Coded field (length = max code field length)
TEMPDATE  DIM       8
TEMPTIME  DIM       8
TEMPTYPE  FORM      2             * Type of coded field
TIMCOUNT  FORM      8             * time error record count
TIMEFLAG  FORM      1             * time flag
.                                     0 = any time allowed
.                                     1 = future times not allowed
.                                     2 = past times not allowed
TMPFIELD  DIM       8             * Field name
TMPSTRNG  DIM       40            * Temporary string (max field length)
TYPEFORM  FORM      1             * W/L record type
.                                       0 = W/L record
.                                       1 = Suspension record
.                                       2 = ACC record
.                                       3 = NBRS history record
.
UNKCOUNT  FORM      8             * unknown U/R counter
.
VALPARNT  FORM      1             * Valid parent record flag
.                                       0 = valid parent record
.                                       1 = invalid parent record
VCHKFLAG  FORM      1             * Validation flag
.                                     0 = writing data to database
.                                     1 = only validating import data file
.
.
.
. PROGRAM CONSTANTS
. -----------------
CATAP     INIT      "ap"
CATB1     INIT      "b1"
CATB2     INIT      "b2"
CATCX     INIT      "cx"
CATCW     INIT      "cw"
CATS      INIT      "S "
CATW1     INIT      "W1"
CATW2     INIT      "W2"
CATW3     INIT      "W3"
CATW4     INIT      "W4"
CATX5     INIT      "X5"
CATX6     INIT      "X6"
CATX7     INIT      "X7"
CATX8     INIT      "X8"
CATYH     INIT      "yh"
PIPE      INIT      "|"
TILDA20   INIT      "~~~~~~~~~~~~~~~~~~~~"
.
.
.
PRGID     INIT      "CONVWAIT"
PRGNAM    INIT      "Upload W/L Procedures"
VERSION   INIT      "V12.00.01"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000       * proceed with upload
.
MAIN1000  CALL      OPEN0000               * open upload file
          BRANCH    EXIT,MAIN0100          * file not found
.
          CALL      DMAP0000               * display mapping files
          CALL      ASKQ0000               * validation run only ?
.
          CALL      GDEF0000               * get default listing code
          BRANCH    EXIT,MAIN0100          * nothing entered/exitchar entered
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN2000  CALL      UPLD0000               * process upload
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"acccmtaf";
          OPEN      ACCCMTA1,"acccmtaf"
.
          DISPLAY   *P64:24,"bokdiaaf";
          OPEN      BOKDIAA1,"bokdiaaf"
.
          DISPLAY   *P64:24,"bokrc1af";
          OPEN      BOKRC1A1,"bokrc1af"
.
          DISPLAY   *P64:24,"bokrx1af";
          OPEN      BOKRX1A1,"bokrx1af"
.
          DISPLAY   *P64:24,"dismasaf";
          OPEN      DISMASA1,"dismasaf"
.
          DISPLAY   *P64:24,"ibaalvaf";
          OPEN      IBAALVA1,"ibaalvaf"
          OPEN      IBAALVA2,"ibaalvaf"
.
          DISPLAY   *P64:24,"patatraf";
          OPEN      PATATRA1,"patatraf"
.
          DISPLAY   *P64:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P64:24,"pateoraf";
          OPEN      PATEORA1,"pateoraf"
.
          DISPLAY   *P64:24,"pathspaf";
          OPEN      PATHSPA1,"pathspaf"
.
          DISPLAY   *P64:24,"patin1af";
          OPEN      PATIN1A1,"patin1af"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA1,"patvisaf"
.
          DISPLAY   *P64:24,"patwc1af";
          OPEN      PATWC1A1,"patwc1af"
.
          DISPLAY   *P64:24,"patwr1af";
          OPEN      PATWR1A1,"patwr1af"
.
          DISPLAY   *P64:24,"pmswx1af";
          OPEN      PMSWX1A1,"pmswx1af"
.
          DISPLAY   *P64:24,"pmshcgaf";
          OPEN      PMSHCGA1,"pmshcgaf"
.
          DISPLAY   *P64:24,"pmshclaf";
          OPEN      PMSHCLA1,"pmshclaf"
.
          DISPLAY   *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"pmsrelaf";
          OPEN      PMSRELA1,"pmsrelaf"
.
          DISPLAY   *P64:24,"pmstemaf";
          OPEN      PMSTEMA1,"pmstemaf"
.
          DISPLAY   *P64:24,"pmstleaf";
          OPEN      PMSTLEA1,"pmstleaf"
.
          DISPLAY   *P64:24,"visiauaf";
          OPEN      VISIAUA1,"visiauaf"
.
          DISPLAY   *P64:24,"visintaf";
          OPEN      VISINTA1,"visintaf"
.
          DISPLAY   *P64:24,"watcataf";
          OPEN      WATCATA1,"watcataf"
.
          DISPLAY   *P64:24,"wathisaf";
          OPEN      WATHISA1,"wathisaf"
.
          DISPLAY   *P64:24,"watmhdaf";
          OPEN      WATMHDA1,"watmhdaf"
.
          DISPLAY   *P64:24,"watmtxaf";
          OPEN      WATMTXA1,"watmtxaf"
.
          DISPLAY   *P64:24,"watproaf";
          OPEN      WATPROA1,"watproaf"
.
          DISPLAY   *P64:24,"watsusaf";
          OPEN      WATSUSA1,"watsusaf"
.
          DISPLAY   *P64:24,"wattr1af";
          OPEN      WATTR1A1,"wattr1af"
.
          DISPLAY   *P64:24,"wattx1af";
          OPEN      WATTX1A1,"wattx1af"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,THIRTY7;*236,WTCNBRSR
          READ      CONTROLF,EIGHTY;*250,PTCNHDPS
.
          IF        PTCNHDPS = 1
            DISPLAY   *P64:24,"watmesaf";
            OPEN      WATMESA1,"watmesaf"
          ENDIF
.
          MOVE      CATS,SOREFCAT
          LOAD      SOREFCAT,WTCNBRSR,CATW1,CATW2,CATW3,CATW4,CATX5,CATX6:
                                      CATX7,CATX8
.
.         If NZ, open files for ACC data
.
          PERFORM   PTCNHDPS,OPNACC00
.
          MOVE      ONE,CNOUNDLN
          MOVE      ONE,CNEWDS
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run data upload                         *
.*                        TRUE  (1)  Exit selected                           *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Data Upload"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run data upload
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               OPEN0000              Called by: MAIN0000   *
.*                  Open upload file (convwait.txt)                          *
.*****************************************************************************
.
OPEN0000  MOVE      ZERO,OVRCD
.
          TRAP      OVERCOND IF IO
          OPEN      WLISTUPL,"convwait"
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN9100
.
.         Open all mapping files.
.
.         Category-Codes mapping file (patcodes)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP1,"catcodes"             * Cat-Code file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,CATCDFLG              * no
          ELSE
            MOVE      ONE,CATCDFLG               * yes
          ENDIF
.
.         Insurance mapping file
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP2,"insuranc"             * insurance file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,INSRFLAG              * no
          ELSE
            MOVE      ONE,INSRFLAG               * yes
          ENDIF
.
.         Employer mapping file
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP3,"employer"             * employer file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,EMPLFLAG              * no
          ELSE
            MOVE      ONE,EMPLFLAG               * yes
          ENDIF
.
.         HCP Code mapping file (pmshcpaf)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP4,"hcpcode"              * hcp code file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,HCPCDFLG              * no
          ELSE
            MOVE      ONE,HCPCDFLG               * yes
          ENDIF
.
.         Title (pmstleaf)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP5,"titlecod"        * Check for title code file
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,TITLECOD         * file doesnt exist
          ELSE
            MOVE      ONE,TITLECOD          * file does exist
          ENDIF
.
.         Relationship (pmsrelaf)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP6,"relation"       * Check for NOK relationship file
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,RELATION         * file doesnt exist
          ELSE
            MOVE      ONE,RELATION          * file does exist
          ENDIF
.
.         Disaster mapping file
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP7,"disaster"              * disaster file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DISASTER              * no
          ELSE
            MOVE      ONE,DISASTER               * yes
          ENDIF
.
.         Team mapping file
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP8,"teamfile"             * team file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,TEAMFLAG              * no
          ELSE
            MOVE      ONE,TEAMFLAG               * yes
          ENDIF
.
.         Doctor Code mapping file (patdo1af)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP9,"doctor"               * doctor code file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DCODEFLG              * no
          ELSE
            MOVE      ONE,DCODEFLG               * yes
          ENDIF
.
.         Hospital mapping file (pathspaf)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP10,"hospital"             * Hospital file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,HOSPLFLG              * no
          ELSE
            MOVE      ONE,HOSPLFLG               * yes
          ENDIF
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP11,"practice"            * practice file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,PRACTICE              * no
          ELSE
            MOVE      ONE,PRACTICE               * yes
          ENDIF
.
.         Ward/Bed mapping file
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP12,"wardbed"             * ward/bed file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,WRDBDFLG              * no
          ELSE
            MOVE      ONE,WRDBDFLG               * yes
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      OPEN9999
.
OPEN9100  DISPLAY   *P1:24,*EL,*B,"Upload file - convwait.txt - not found.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
OPEN9999  RETURN
+
.******************************************************************************
.*                                  DMAP0000              Called by: MAIN0000 *
.*                       Display File Name & Mapping files                    *
.* Requires: Mapping Flags                                                    *
.******************************************************************************
.
DMAP0000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save current screen
.
          DISPLAY   *P1:4,*EF,*V2LON,SP9,*ULON,"Mapping Tables"
.
          MOVE      DNO,DIM3
          LOAD      DIM3,CATCDFLG,DYES
.
          DISPLAY   *P1:6,*EL,"Mapping Category/Codes (patcodes)      ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,INSRFLAG,DYES
.
          DISPLAY   *P1:7,*EL,"Mapping Insurer (patin1af)             ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,EMPLFLAG,DYES
.
          DISPLAY   *P1:8,*EL,"Mapping Employer (pateoraf)            ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,HCPCDFLG,DYES
.
          DISPLAY   *P1:9,*EL,"Mapping HCP (pmshcpaf)                 ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,TITLECOD,DYES
.
          DISPLAY   *P1:10,*EL,"Mapping Title (pmstleaf)               ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,RELATION,DYES
.
          DISPLAY   *P1:11,*EL,"Mapping Relation (pmsrelaf)            ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,HOSPLFLG,DYES
.
          DISPLAY   *P1:12,*EL,"Mapping Hospital (pathspaf)            ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,DCODEFLG,DYES
.
          DISPLAY   *P1:13,*EL,"Mapping Doctor (patdo1af)              ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,WRDBDFLG,DYES
.
          DISPLAY   *P1:14,*EL,"Mapping Ward/Bed (patwr1af)            ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,DISASTER,DYES
.
          DISPLAY   *P1:15,*EL,"Mapping Disaster (dismasaf)            ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,TEAMFLAG,DYES
.
          DISPLAY   *P1:16,*EL,"Mapping Team (pmstemaf)                ":
                    *V2LON,DIM3
.
          DISPLAY   *P1:24;
          CALL      HITENTER
          CALL      PUTSCR00                     * restore previous screen
.
DMAP9999  RETURN
+
.*****************************************************************************
.*                               ASKQ0000              Called by: MAIN0000   *
.*                  Ask if running validation only                           *
.* Returns: VCHKFLAG  - validation flag                                      *
.*                       0 = normal mode                                     *
.*                       1 = validation only mode                            *
.*****************************************************************************
.
ASKQ0000  MOVE      ANSY,ANS
          KEYIN     *P1:9,*EL,"Validation only (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") ?":
                    *P25:9,*V2LON,*RV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS                     * Y input ?
          IF        @EQUAL
            DISPLAY   *P25:9,*V2LON,DYES,*HOFF:
                      *P35:9,"(No data will be uploaded)"
            MOVE      ONE,VCHKFLAG               * yes
            GOTO      ASKQ9999
          ENDIF
.
          MATCH     ANSN,ANS                     * N input ?
          IF        @EQUAL
            DISPLAY   *P25:9,*V2LON,DNO,*HOFF:
                      *P35:9,"(Data will be uploaded)"
            MOVE      ZERO,VCHKFLAG              * yes
            GOTO      ASKQ9999
          ENDIF
.
          GOTO      ASKQ0000                     * invalid input
.
ASKQ9999  RETURN
+
.*****************************************************************************
.*                               GDEF0000              Called by: MAIN0000   *
.*             Get the default listing code for suspensions and stages       *
.* Returns: LISTCOD1  - listing code for suspensions (Cat VL)                *
.*          LISTCOD2  - listing code for stages (Cat VL)                     *
.*          EXIT   0 = valid code entered                                    *
.*                 1 = nothing entered                                       *
.*****************************************************************************
.
.         First get the default code for suspension (deferrals)
.
GDEF0000  DISPLAY   *P1:11,*EF,"Default listing status codes for":
                    *P8:12,"- Deferred suspensions (Cat VL):"
.
          MOVE      FORTY1,ECOL
          MOVE      TEN2,EVERT
          PACK      CODE,ANSV,ANSL
          MOVE      SP3,CKYIDEF3
          MOVE      ONE,CKYIMAND
          CALL      KEYINCOD
          BRANCH    EXIT,GDEF9100:               * nothing input
                         GDEF9100                * exitchar input
.
.         A valid Cat VL code has been selected, so make sure that Indicator 1
.         is set to "D" (for deferred)
.
          MATCH     ANSD,TCINDC1                 * deferred type code ?
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Status not for deferral.  ";
            CALL      HITENTER
            GOTO      GDEF0000
          ENDIF
.
          DISPLAY   *P50:12,TDESC
          MOVE      ACODE,LISTCOD1
.
.         Now get the default code for stages
.
GDEF5000  DISPLAY   *P8:13,"- Staged suspensions (Cat VL)  :"
.
          MOVE      FORTY1,ECOL
          MOVE      TEN3,EVERT
          PACK      CODE,ANSV,ANSL
          MOVE      SP3,CKYIDEF3
          MOVE      ONE,CKYIMAND
          CALL      KEYINCOD
          BRANCH    EXIT,GDEF9100:               * nothing input
                         GDEF9100                * exitchar input
.
.         A valid Cat VL code has been selected, so make sure that Indicator 1
.         is set to "S" (for staged)
.
          MATCH     ANSS,TCINDC1                 * staged type code ?
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Status not for staged.  ";
            CALL      HITENTER
            GOTO      GDEF5000
          ENDIF
.
          DISPLAY   *P50:13,TDESC
          MOVE      ACODE,LISTCOD2
.
GDEF9000  MOVE      ZERO,EXIT
          GOTO      GDEF9999
.
GDEF9100  MOVE      ONE,EXIT
.
GDEF9999  RETURN
+
.******************************************************************************
.*                                  UPLD0000              Called by: MAIN0000 *
.*                  Process the W/L upload file records                       *
.******************************************************************************
.
UPLD0000  CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          MOVE      CCC,CURRCENT
.
          DISPLAY   *P1:14,"Processing ",*V2LON,"convwait.txt",*HOFF:
                    *P1:16,"Started    : ",*V2LON,CTIMEIS,*HOFF:
                    *P1:18,"U/R Number : ":
                    *P1:19,"Procedure  : ":
                    *P1:20,"Records    : "
.
          MOVE      ZERO,RECCOUNT                * initialise records read
          MOVE      ZERO,ADDCOUNT                * initialise added record count
          MOVE      ZERO,CODCOUNT                * init. code error record count
          MOVE      ZERO,COMCOUNT                * init. comm error record count
          MOVE      ZERO,DUPCOUNT                * initialise dup. record count
          MOVE      ZERO,DTECOUNT                * init. date error record count
          MOVE      ZERO,TIMCOUNT                * init. time error record count
          MOVE      ZERO,MANCOUNT                * init. mand error record count
          MOVE      ZERO,NUMCOUNT                * init. num error record count
          MOVE      ZERO,UNKCOUNT                * init. unknown pt record count
          MOVE      ZERO,SEQCOUNT                * init. seq. error record count
          MOVE      ZERO,PARCOUNT                * init. parent error rec. count
          MOVE      SP8,SAVEURNO                 * initialise saved U/R
          MOVE      ZERO,NBRCOUNT                * initialise history count
.
          CALL      HEAD0000                     * Print the report header
.
.         Loop through upload file records.
.         Load in the first three fields as they are common to
.         W/L, Suspension, ACC and W/L History records.
.
UPLD1000  READ      WLISTUPL,SEQ;WAITTYPE,WAITURNO,WAITCODE;
          GOTO      UPLD9000 IF OVER
.
          ADD       ONE,RECCOUNT                 * increment records read
          IF        (RECCOUNT%1000) = 0 | RECCOUNT = 1
            DISPLAY   *P14:18,*V2LON,WAITURNO:
                      *P14:19,WAITCODE:
                      *P14:20,*V2LON,RECCOUNT;
          ENDIF
.
          PACK      WAITTYPE,WAITTYPE,SP1
          MATCH     SP1,WAITTYPE
          IF        @EQUAL
            MOVE      SP70,DIM44
            MOVE      SP8,SAVEURNO
            MOVE      SP9,SAVECODE
            MOVE      "W/L record type is blank ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,MANCOUNT               * increment mand. record count
            READ      WLISTUPL,SEQ;ANS
            GOTO      UPLD1000
          ENDIF
.
          TYPE      WAITTYPE
          IF        !@EQUAL
            MOVE      SP70,DIM44
            MOVE      SP8,SAVEURNO
            MOVE      SP9,SAVECODE
            MOVE      "W/L record type is not numeric ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,NUMCOUNT               * incr. numeric erorr rec count
            READ      WLISTUPL,SEQ;ANS
            GOTO      UPLD1000
          ENDIF
.
          MOVE      ZERO,TYPEFORM
          MOVE      WAITTYPE,TYPEFORM
          COMPARE   TYPEFORM,THREE               * w/l record type 0,1,2 or 3 ?
          IF        @LESS
            MOVE      SP70,DIM44
            MOVE      SP8,SAVEURNO
            MOVE      SP9,SAVECODE
            MOVE      "W/L record type is not valid ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,NUMCOUNT               * incr. numeric error rec count
            READ      WLISTUPL,SEQ;ANS
            GOTO      UPLD1000
          ENDIF
.
          BRANCH   TYPEFORM,UPLD1100:            * suspension record
                            UPLD1200:            * acc record
                            UPLD1300             * history record
.
.         W/L detail record.
.         First check if there were any NBRS records for the previous W/L
.         detail record and if not, then write the relevant wathisaf records
.         before processing this W/L detail record.
.
          IF        RECCOUNT <> 1 & NBRCOUNT = 0
            CALL      WHIS0000                   * write wathisaf record
          ENDIF
.
          READ      WLISTUPL,SEQ;WAITCOD2,WAITCOD3,WAITDESC,WAITDATL,WAITSTAT:
                                 WAITUNIT,WAITDOCT,WAITCTYP,WAITPRTY,WAITIHSP:
                                 WAITSRCR,WAITPLST,WAITDATS,WAITTIMS,WAITSTAY:
                                 WAITNICE,WAITCLSS,WAITEATY,WAITRFGP,WAITGPPC:
                                 WAITBOTY,WAITTEAM,WAITFUND,WAITWARD,WAITPREF:
                                 WAITNWHC,WAITINTD,WAITMAUT,WAITEXPD,WAITTCRS:
                                 WAITDISC,WAITRCLI,WAITRCLP,WAITCDTE,WAITCTIM:
                                 WAITWEBC,WAITLUPD,WAITLUPT,WAITWEBU,WAITAVIS:
                                 WAITCOMM,WAITPCAT,WAITREAS,WAITADMW,WAITEABR:
                                 WAITAUBY,WAITADAT,WAITPRPB,WAITAASC,WAITVAL1:
                                 WAITVAL2,WAITVAL3,WAITPHSP,WAITACPR,WAITANAE:
                                 WAITECNT,WAITDABD,WAITPOTM,WAITRANK,WAITDRSA:
                                 WAITDOSA,WAITASSR,WAITDTAD,WAITDAT2,WAITKEYD
.
          MOVE      ZERO,NBRCOUNT                * reset NBR record count
          GOTO      UPLD1500
.
UPLD1100  READ      WLISTUPL,SEQ;SUSPFDAT,SUSPTDAT,SUSPREAS,WAITCOMM
          GOTO      UPLD1500
.
UPLD1200  READ      WLISTUPL,SEQ;ACCDNAME,ACCDADD1,ACCDADD2,ACCDADD3,ACCDADD4:
                                 ACCDPOST,ACCDTELP,ACCDACDT,ACCDACPT,ACCDINSR:
                                 ACCDCLNO,ACCDCOM1,ACCDCOM2,ACCDALOC,ACCDCINJ:
                                 ACCDICOD,ACCDCNAM,ACCDCDTE,ACCDCTIM,ACCDWEBC:
                                 ACCDLUPD,ACCDLUPT,ACCDWEBU,ACCDACCF,ACCDPLIN:
                                 ACCDACTI,ACCDADTE,ACCDATME,ACCDACLC,ACCDAINZ:
                                 ACCDMOVV,ACCDSPTI,ACCDSPRT,ACCDRECI,ACCDTRIC:
                                 ACCDESTA,ACCDPDDT,ACCDARG1,ACCDARG2,ACCDARSN:
                                 ACCDARTL,ACCDARRP,ACCDASST,ACCDNEED,ACCDCONT:
                                 ACCDALTW,ACCDTYPA,ACCDSALT,ACCDHPDA,ACCDUNFD:
                                 ACCDUNFT,ACCDFISD,ACCDRNWD,ACCDCSTA,ACCDTWRK:
                                 ACCDOEST,ACCDTPRO,ACCDECOD,ACCDTYP1,ACCDDAT1:
                                 ACCDTYP2,ACCDDAT2,ACCDTYP3,ACCDDAT3
.
          COMPARE   ONE,PTCNHDPS                 * nz ?
          GOTO      UPLD1000 IF NOT EQUAL        * no - ignore record
.
          GOTO      UPLD1500
.
UPLD1300  READ      WLISTUPL,SEQ;NBRSEDAT,NBRSUCNT,NBRSPRIO,NBRSRANK,NBRSBSCD:
                                 NBRSDCGV,NBRSDBFT,NBRSRECS,NBRSRTYP,NBRSRCDT:
                                 NBRSBMDT,NBRSETIM,NBRSBCAN,NBRSDRSA,NBRSDOSA:
                                 NBRSPHSP,NBRSPCHS,NBRSBRSR,NBRSASSR
.
UPLD1500  CALL      POUT0000                     * pad out fields with spaces
.
          BRANCH    TYPEFORM,UPLD2100:           * suspension record
                             UPLD2200:           * acc record
                             UPLD2300            * history record
.
.         This is a W/L entry record, so clear the relevant database
.         variables and initialise counts
.
          CALL      GCNT0000                     * get next pt./procedure count
          CALL      CLBOKRC1                     * clear database variables
          CALL      CLBOKRX1
          CALL      CLWATTR1
          CALL      CLWATTX1
          CALL      CLPATMAS
          CALL      CLPATATR
          MOVE      ONE,VALPARNT                 * set for invalid parent
          MOVE      ZERO,SUSCOUNT                * initialise suspension count
          MOVE      ZERO,NOTCOUNT                * initialise note count
.
.         Only need to validate U/R for W/L entries as the suspension records
.         that may follow, should always have the same U/R (and this is
.         validated for suspension records).
.
          CALL      VURN0000                     * validate U/R
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          MOVE      WAITURNO,SAVEURNO            * save U/R number
          MOVE      WAITCODE,SAVECODE            * save procedure code
          GOTO      UPLD3000
.
.         This is a suspension record, so clear the watsusaf database
.         variables and make sure that the patient and procedure haven't
.         changed from the last W/L entry record.
.
UPLD2100  CALL      CLER0000
          ADD       ONE,SUSCOUNT                 * increment suspension count
.
          MATCH     WAITURNO,SAVEURNO            * same U/R as W/L entry record?
          IF        !@EQUAL
            MOVE      SP70,DIM44
            MOVE      "Suspension record out of sequence ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,SEQCOUNT               * increment seq. record count
            GOTO      UPLD1000                   * get next record
          ENDIF
.
          MATCH     WAITCODE,SAVECODE            * same code as W/L entry rec. ?
          IF        !@EQUAL
            MOVE      "Suspension record out of sequence ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,SEQCOUNT               * increment seq. record count
            GOTO      UPLD1000                   * get next record
          ENDIF
          GOTO      UPLD3000
.
.         This is an acc record, so clear the watwc1af & pmswc1af database
.         variables and make sure that the patient and procedure haven't
.         changed from the last W/L entry record.
.
UPLD2200  CALL      CLPATWC1                     * clear patwc1af variables
          CALL      CLPMSWX1                     * clear pmswx1af variables
.
          MATCH     WAITURNO,SAVEURNO            * same U/R as W/L entry record?
          IF        !@EQUAL
            MOVE      SP70,DIM44
            MOVE      "ACC record out of sequence ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,SEQCOUNT               * increment seq. record count
            GOTO      UPLD1000                   * get next record
          ENDIF
.
          MATCH     WAITCODE,SAVECODE            * same code as W/L entry rec. ?
          IF        !@EQUAL
            MOVE      "ACC record out of sequence ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,SEQCOUNT               * increment seq. record count
            GOTO      UPLD1000                   * get next record
          ENDIF
          GOTO      UPLD3000
.
.         This is a history record, so make sure that the patient and
.         procedure haven't changed from the last W/L entry record.
.
UPLD2300  MATCH     WAITURNO,SAVEURNO            * same U/R as W/L entry record?
          IF        !@EQUAL
            MOVE      SP70,DIM44
            MOVE      "History record out of sequence ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,SEQCOUNT               * increment seq. record count
            GOTO      UPLD1000                   * get next record
          ENDIF
.
          MATCH     WAITCODE,SAVECODE            * same code as W/L entry rec. ?
          IF        !@EQUAL
            MOVE      "History record out of sequence ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,SEQCOUNT               * increment seq. record count
            GOTO      UPLD1000                   * get next record
          ENDIF
.
UPLD3000  CALL      MAND0000                     * check for Mandatory fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      DVAL0000                     * date validation
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      TVAL0000                     * time validation
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      VNUM0000                     * validate numeric fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      CVIS0000                     * check for alt. visit id.
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          IF        TYPEFORM = 3
            MOVE      NBRSEDAT,EFFECDAT
            CALL      GHIS0000
            CALL      CLWATHIS                   * clear wathisaf variables
          ENDIF
          CALL      SETV0000                     * set up file variables
.
          CALL      CVAL0000                     * validate coded fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
.         Write the record details to file
.
          BRANCH    TYPEFORM,UPLD4100:           * suspension record
                             UPLD4200:           * acc record
                             UPLD4300            * history record
.
.         W/L entry type record.
.         Check that a record doesn't already exist.
.
          PACK      KEY19,WMURNO,WMCODE,WMCNT
          CALL      RDATREA1                     * procedure already on file ?
          IF        OVRCD = 0
            MOVE      "Procedure record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
            GOTO      UPLD1000                   * get next record
          ENDIF
.
          PACK      KEY19,WMURNO,WMCODE,WMCNT
          CALL      RAWTTX11
          BRANCH    OVRCD,UPLD4000               * no - ok to write records
.
          MOVE      "Procedure extension record already exists ",ERORDESC
          CALL      PERR0000                     * print error line
          ADD       ONE,DUPCOUNT                 * increment dupl. record count
          GOTO      UPLD1000                     * get next record
.
UPLD4000  MOVE      ZERO,VALPARNT                * set flag for valid parent
          BRANCH    VCHKFLAG,UPLD1000            * error checking only
.
          CALL      GENBOKNO                     * generate booking number
          CALL      GUNI0000                     * generate unique id's
.
          CALL      WRTREA1                      * write new wattr1af record
          CALL      WRWTTX11                     * write new wattx1af record
.
          ADD       ONE,ADDCOUNT                 * increment added record count
          CALL      WCAT0000                     * write watcataf record
          CALL      WBOK0000                     * write bokrc1af & bokrx1af
          CALL      WDIA0000                     * write bokdiaaf record
          CALL      WINT0000                     * write interpreter visit dets.
          CALL      PCOM0000                     * write comments
          CALL      AVIS0000                     * write alternate visit record
          CALL      WATR0000                     * write patatraf record
.
          GOTO      UPLD1000                     * get next record
.
.         Suspension record type
.
UPLD4100  PACK      KEY21,WTSUURNO,WTSUCODE,WTSUCNT,WTSUSCNT
          CALL      RAWTSUS1                     * procedure already on file ?
          IF        OVRCD = 0
            MOVE      "Suspension record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
            GOTO      UPLD1000
          ENDIF
.
          IF        VALPARNT = 1
            MOVE      "Parent W/L record not valid ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,PARCOUNT               * increment error count
            GOTO      UPLD1000
          ENDIF
.
          BRANCH    VCHKFLAG,UPLD1000            * error checking only
.
          CALL      WRWTSUS1                     * write watsusaf record
          CALL      PCOM0000                     * write comments
.
          ADD       ONE,ADDCOUNT                 * increment added record count
          GOTO      UPLD1000                     * get next record
.
.         ACC record type
.
UPLD4200  BRANCH    VCHKFLAG,UPLD1000            * error checking only
.
          MOVE      WMBOOK,KEY8
          CALL      WRTACC00                     * common routine from UPACCDAT
          CALL      ACCCOM00                     * process ACC comments
          GOTO      UPLD1000                     * get next record
.
.         We have a valid history record to write
.
UPLD4300  IF        VALPARNT = 1
            MOVE      "Parent W/L record not valid ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,PARCOUNT               * increment error count
            GOTO      UPLD1000
          ENDIF
.
          BRANCH    VCHKFLAG,UPLD1000            * error checking only
.
          CALL      WRWTHIS1                     * write wathisaf record
.
          ADD       ONE,ADDCOUNT                 * increment added record count
          ADD       ONE,NBRCOUNT                 * increment added history count
          GOTO      UPLD1000                     * get next record
.
.         Upload completed
.
.         First check if there were any NBRS records for the last W/L
.         detail record and if not, then write the relevant wathisaf records
.         before finishing.
.
UPLD9000  IF        RECCOUNT <> 0 & NBRCOUNT = 0
            CALL      WHIS0000                   * no - write wathisaf record
          ENDIF
.
          ASSIGN    (CODCOUNT+COMCOUNT+DUPCOUNT+DTECOUNT+TIMCOUNT+MANCOUNT+NUMCOUNT+UNKCOUNT+SEQCOUNT+PARCOUNT),FORM10
          IF        FORM10 > 0
            CALL      LINE0000                   * print bottom line if errors
          ENDIF
.
          COMPARE   CLNO,FIFTY                   * room for stats ?
          CALL      HEAD0000 IF LESS             * no - new page req'd.
.
          CLOCK     TIME,CTIMEIS
          DISPLAY   *P14:20,*V2LON,RECCOUNT,*HOFF:
                    *P1:22,"Finished   : ",*V2LON,CTIMEIS
.
.         Warn the user if there were any records with errors
.
          IF        FORM10 > 0
            DISPLAY   *P1:23,*V2LON,*BLINKON,"Warning:  Records found with ":
                      "errors.  Refer to error report."
          ENDIF
.
          DISPLAY   *P1:24,*EL,*B,"Upload complete.  ";
          CALL      HITENTER
.
          PRINT     *N:
                    *1,"Total records read                    - ",RECCOUNT,*N:
                    *1,"Records added                         - ",ADDCOUNT,*N:
                    *1,"Duplicate Records detected            - ",DUPCOUNT,*N:
                    *1,"Records with invalid codes detected   - ",CODCOUNT,*N:
                    *1,"Records where comments didn't load    - ",COMCOUNT,*N:
                    *1,"Records with invalid dates detected   - ",DTECOUNT,*N:
                    *1,"Records with invalid times detected   - ",TIMCOUNT,*N:
                    *1,"Records with blank mandatory fields   - ",MANCOUNT,*N:
                    *1,"Records with invalid numbers detected - ",NUMCOUNT,*N:
                    *1,"Records with unknown U/R numbers      - ",UNKCOUNT,*N:
                    *1,"Records out of sequence               - ",SEQCOUNT,*N:
                    *1,"Other records with parent errors      - ",PARCOUNT:
                    *N,*N,*1,"*** End of Report ***"
.
UPLD9999  RETURN
+
.****************************************************************************
.*                             MAND0000                Called by: UPLD0000  *
.*                 Check for standard Mandatory fields                      *
.* Returns: EXIT   0 = all mandatory fields are populated                   *
.*                 1 = one or more mandatory fields are blank               *
.*          MANCOUNT - updated count of records with mandatory fields       *
.*                     missing                                              *
.****************************************************************************
.
MAND0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,MAND1000:           * suspension record type
                             MAND2000:           * acc record type
                             MAND3000            * history record type
.
.         Standard W/L entry type records only
.
          MOVE      WAITCODE,TMPSTRNG
          MOVE      "WAITCODE",TMPFIELD          * Procedure Code
          CALL      CHKM0000
.
          MOVE      WAITDATL,TMPSTRNG
          MOVE      "WAITDATL",TMPFIELD          * Date on List
          CALL      CHKM0000
.
          MOVE      WAITSTAT,TMPSTRNG
          MOVE      "WAITSTAT",TMPFIELD          * Status
          CALL      CHKM0000
.
          MOVE      WAITUNIT,TMPSTRNG
          MOVE      "WAITUNIT",TMPFIELD          * Unit/Clinic
          CALL      CHKM0000
.
          MOVE      WAITDOCT,TMPSTRNG
          MOVE      "WAITDOCT",TMPFIELD          * Attending Doctor
          CALL      CHKM0000
.
          MOVE      WAITPRTY,TMPSTRNG
          MOVE      "WAITPRTY",TMPFIELD          * Priority
          CALL      CHKM0000
.
          MOVE      WAITIHSP,TMPSTRNG
          MOVE      "WAITIHSP",TMPFIELD          * Intended Hospital
          CALL      CHKM0000
.
          MOVE      WAITPLST,TMPSTRNG
          MOVE      "WAITPLST",TMPFIELD          * List Status
          CALL      CHKM0000
.
          MATCH     "1",WAITSTAT                 * unscheduled ?
          GOTO      MAND9000 IF EQUAL            * yes
.
.         For scheduled listings
.
          MOVE      WAITDATS,TMPSTRNG
          MOVE      "WAITDATS",TMPFIELD          * Scheduled Admit Date
          CALL      CHKM0000
.
          MOVE      WAITTIMS,TMPSTRNG
          MOVE      "WAITTIMS",TMPFIELD          * Scheduled Admit Time
          CALL      CHKM0000
.
          MOVE      WAITBOTY,TMPSTRNG
          MOVE      "WAITBOTY",TMPFIELD          * Booking Type
          CALL      CHKM0000
.
          MOVE      WAITWARD,TMPSTRNG
          MOVE      "WAITWARD",TMPFIELD          * Ward
          CALL      CHKM0000
.
          GOTO      MAND9000
.
.         Suspension type records only
.
MAND1000  MOVE      WAITCODE,TMPSTRNG
          MOVE      "WAITCODE",TMPFIELD          * procedure code
          CALL      CHKM0000
.
          MOVE      SUSPFDAT,TMPSTRNG
          MOVE      "SUSPFDAT",TMPFIELD          * from date
          CALL      CHKM0000
.
          MOVE      SUSPTDAT,TMPSTRNG
          MOVE      "SUSPTDAT",TMPFIELD          * to date
          CALL      CHKM0000
.
          MOVE      SUSPREAS,TMPSTRNG
          MOVE      "SUSPREAS",TMPFIELD          * reason
          CALL      CHKM0000
.
          GOTO      MAND9000
.
.         ACC type records only
.
MAND2000  CALL      MANACC00                     * common routine from UPACCDAT
          GOTO      MAND9000
.
.         History type records only
.
MAND3000  MOVE      NBRSEDAT,TMPSTRNG
          MOVE      "NBRSEDAT",TMPFIELD          * effective date
          CALL      CHKM0000
.
MAND9000  BRANCH    ERORFLAG,MAND9100            * errors on mand. fields
.
          MOVE      ZERO,EXIT                    * no errors on mand. fields
          GOTO      MAND9999
.
MAND9100  ADD       ONE,MANCOUNT                 * incr. mand error record count
          MOVE      ONE,EXIT
.
MAND9999  RETURN
+
.*****************************************************************************
.*                            CHKM0000             Called by: MAND0000       *
.*                    Check if a mandatory field is blank                    *
.* Requires: TMPSTRNG - field to be checked                                  *
.*           TMPFIELD - 8 character field name                               *
.* Returns:  ERORFLAG = 1   field is blank (error)                           *
.*****************************************************************************
.
CHKM0000  MATCH     TMPSTRNG,SP9                 * blank field ?
          GOTO      CHKM9999 IF NOT EQUAL        * no - finished
.
          MOVE      "Mandatory Field blank ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set error flag
.
CHKM9999  RETURN
+
.******************************************************************************
.*                                  CLER0000              Called by: UPLD0000 *
.*                    Clear all the database fields for watsusaf              *
.******************************************************************************
.
CLER0000  MOVE      SP9,WTSUCODE
          MOVE      ZERO,WTSUCNT
          MOVE      ZERO,WTSUSCNT
          MOVE      SP8,WTSUFDAT
          MOVE      SP8,WTSUTDAT
          MOVE      SP3,WTSUREAS
          MOVE      LISTCOD1,WTSULSTS            * load default (deferred) code
          MOVE      SP10,WTSUUSER
          MOVE      ONE,WTSUAUTO
          MOVE      SP5,WTSUSPAR
.
CLER9999  RETURN
+
.******************************************************************************
.*                                  HEAD0000              Called by: UPLD0000 *
.*                           Print The Report Header                 PERR0000 *
.******************************************************************************
.
HEAD0000  MOVE      "- Error Report",CPHDROPT
          CALL      HEAD132                 * Print the report header
.
          PRINT     *1,"< convwait.txt >"
.
          CALL      LINE0000                     * draw line across page
.
          PRINT     *1,PIPE,*3,"Record",*12,PIPE,*14,"Type",*19,PIPE:
                    *21,"U/R No.",*30,PIPE,*32,"Patient Name":
                    *71,PIPE,*73,"Error Description",*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      SEVEN,CLNO                   * initialise line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: HEAD0000  *
.*                      Draw line across page                               *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
.******************************************************************************
.*                                  SETV0000              Called by: UPLD0000 *
.*                       Load the record variables                            *
.******************************************************************************
.
SETV0000  BRANCH    TYPEFORM,SETV1000:           * suspension type record
                             SETV2000:           * acc type record
                             SETV3000            * history type record
.
.         Standard W/L entry records only.
.         Load wattr1af variables first.
.
          MOVE      WAITCODE,WMCODE
          MOVE      NXTCOUNT,WMCNT
          MOVE      WAITCOD2,WTWMPRO2
          MOVE      WAITCOD3,WTWMPRO3
          MOVE      WAITDESC,WMDESC
          MOVE      WAITDATL,WMDATE1
          MOVE      WAITSTAT,WMSTAT
.
          MOVE      WAITUNIT,WMUNIT
          IF        CATCDFLG = 1
            PACK      KEY5,ANSW,ANSU,WAITUNIT
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WMUNIT          * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITDOCT,WMDOCTOR
          IF        DCODEFLG = 1
            MOVE      WAITDOCT,KEY6
            CALL      RDTEMP9                    * doctor code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDCODE,WMDOCTOR        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITPRTY,WMPTY
          IF        CATCDFLG = 1
            PACK      KEY5,ANST,ANSP,WAITPRTY
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WMPTY           * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITPCAT,WMPCAT
          IF        CATCDFLG = 1
            PACK      KEY5,ANSA,SP1,WAITPCAT
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WMPCAT          * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITREAS,WMREASON
.
          MOVE      WAITIHSP,WTWMIHSP
          IF        HOSPLFLG = 1
            MOVE      WAITIHSP,KEY3
            CALL      RDTEMP10                   * hospital on map file ?
            IF        OVRCD = 0
              MOVE      NEWHOSPL,WTWMIHSP        * yes - load mapped code
            ENDIF
          ENDIF
.
          IF        WTCNBRSR = 0
            MOVE      WAITSRCR,WTWMSRCR
          ELSE
            STORE     WAITSRCR,WTCNBRSR,WMUDEF1,WMUDEF2,WMUDEF3,WMUDEF4,WMUDEF5:
                                        WMUDEF6,WMUDEF7,WMUDEF8
          ENDIF
          IF        CATCDFLG = 1
            PACK      KEY5,SOREFCAT,WAITSRCR
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              IF        WTCNBRSR = 0
                MOVE      NEWCTCOD,WTWMSRCR      * yes - load mapped code
              ELSE
                STORE     NEWCTCOD,WTCNBRSR,WMUDEF1,WMUDEF2,WMUDEF3,WMUDEF4:
                                            WMUDEF5,WMUDEF6,WMUDEF7,WMUDEF8
              ENDIF
            ENDIF
          ENDIF
.
          MOVE      WAITDATS,WMDATE3
          MOVE      WAITSTAY,WMSTAY
.
          MOVE      WAITNICE,WMNOTICE
          IF        CATCDFLG = 1
            PACK      KEY5,ANSW,ANSS,WAITNICE
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WMNOTICE        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITCLSS,WTWMCLSS
          IF        CATCDFLG = 1
            PACK      KEY5,ANSP,SP1,WAITCLSS
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WTWMCLSS        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITEATY,WTWMEATY
          IF        CATCDFLG = 1
            PACK      KEY5,ANSC,ANSC,WAITEATY
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WTWMEATY        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITRFGP,WTWMRFGP
          IF        HCPCDFLG = 1
            MOVE      WAITRFGP,KEY10
            CALL      RDTEMP4                    * hcp code on map file ?
            IF        OVRCD = 0
              MOVE      NEWHCPCD,WTWMRFGP        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITGPPC,WTWMGPPC
          IF        PRACTICE = 1
            MOVE      WAITGPPC,KEY10
            CALL      RDTEMP11                   * practice code on map file ?
            IF        OVRCD = 0
              MOVE      NEWPRAC,WTWMGPPC         * yes - load mapped file
            ENDIF
          ENDIF
.
          IF        WMSTAT = 1
            MATCH     SP8,WTWMDTAD
            IF        @EQUAL
              MOVE      "04",WTWMBSCD            * unscheduled
            ELSE
              MOVE      "02",WTWMBSCD            * scheduled with date
            ENDIF
          ELSE
            MOVE      "01",WTWMBSCD              * booked
          ENDIF
.
.         Load wattx1af variables.
.
          MOVE      WMURNO,WTTXURNO
          MOVE      WMCODE,WTTXPCOD
          MOVE      WMCNT,WTTXPCNT
.
          MOVE      WAITPLST,WTTXPLST
          IF        CATCDFLG = 1
            PACK      KEY5,ANSV,ANSL,WAITPLST
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WTTXPLST        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITADMW,WTTXADMW
          IF        CATCDFLG = 1
            PACK      KEY5,CATAP,WAITADMW
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WTTXADMW        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITTIMS,WTTXPATM
          MOVE      WAITCDTE,WTTXCDTE
          MOVE      WAITCTIM,WTTXCTIM
          MOVE      WAITWEBC,WTTXWEBC
          MOVE      WAITLUPD,WTTXLUPD
          MOVE      WAITLUPT,WTTXLUPT
          MOVE      WAITWEBU,WTTXWEBU
.
          MOVE      WAITCTYP,WTTXCTYP
          IF        CATCDFLG = 1
            PACK      KEY5,ANSC,ANSL,WAITCTYP
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WTTXCTYP        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITBOTY,WTTXBOTY
          IF        CATCDFLG = 1
            PACK      KEY5,ANSB,ANSK,WAITBOTY
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WTTXBOTY        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITTEAM,WTTXTEAM
          IF        TEAMFLAG = 1
            MOVE      WAITTEAM,KEY5
            CALL      RDTEMP8                    * team on map file ?
            IF        OVRCD = 0
              MOVE      NEWTEAMC,WTTXTEAM        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITFUND,WTTXFUND
          IF        CATCDFLG = 1
            PACK      KEY5,CATCX,WAITFUND
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WTTXFUND        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITWARD,WTTXWARD
          IF        WRDBDFLG = 1
            PACK      KEY6,WAITWARD,SP3
            CALL      RDTEMP12                   * ward/bed code on map file ?
            IF        OVRCD = 0
              MOVE      NEWWARD,WTTXWARD         * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITPREF,WTTXPREF
          IF        CATCDFLG = 1
            PACK      KEY5,ANSB,ANSP,WAITPREF
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WTTXPREF        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITNWHC,WTTXNWHC
          IF        CATCDFLG = 1
            PACK      KEY5,CATCW,WAITNWHC
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WTTXNWHC        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITINTD,WTTXINTD
          IF        CATCDFLG = 1
            PACK      KEY5,ANSV,ANSI,WAITINTD
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WTTXINTD        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITMAUT,WTTXMAUT
          MOVE      WAITEXPD,WTTXEXPD
.
          MOVE      WAITTCRS,WTTXTCRS
          IF        CATCDFLG = 1
            PACK      KEY5,ANSW,ANSH,WAITTCRS
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WTTXTCRS        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITDISC,WTTXDISC
          IF        DISASTER = 1
            MOVE      WAITDISC,KEY9
            CALL      RDTEMP7                    * disaster on map file ?
            IF        OVRCD = 0
              MOVE      NEWDISTR,WTTXDISC        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITRCLI,WTTXRCLI
          IF        HCPCDFLG = 1
            MOVE      WAITRCLI,KEY10
            CALL      RDTEMP4                    * hcp code on map file ?
            IF        OVRCD = 0
              MOVE      NEWHCPCD,WTTXRCLI        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITRCLP,WTTXRCLP
          IF        PRACTICE = 1
            MOVE      WAITRCLP,KEY10
            CALL      RDTEMP11                   * practice code on map file ?
            IF        OVRCD = 0
              MOVE      NEWPRAC,WTTXRCLP         * yes - load mapped file
            ENDIF
          ENDIF
.
          MOVE      WAITPRPB,WTTXPRPB
          IF        CATCDFLG = 1
            PACK      KEY5,CATYH,WAITPRPB
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WTTXPRPB        * yes - load mapped code
            ENDIF
          ENDIF
.
          MATCH     SP70,WAITAASC
          IF        !@EQUAL
            SQUEEZE   WAITAASC                   * left justify
          ENDIF
          PACK      WTTXAASC,WAITAASC,SP70
.
          MOVE      WAITPHSP,WTWMPHSP
          IF        CATCDFLG = 1
            PACK      KEY5,ANSH,ANSP,WAITPHSP
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WTWMPHSP        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITACPR,WTWMACPR
.
          MOVE      WAITANAE,WTTXANAE
          IF        CATCDFLG = 1
            PACK      KEY5,ANSO,ANSA,WAITANAE
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WTTXANAE        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITECNT,WTWMECNT
          MOVE      WAITDABD,WTWMDABD
          MOVE      WAITPOTM,WTTXPOTM
          MOVE      WAITRANK,WTWMRANK
          MOVE      WAITDRSA,WTWMDRSA
          MOVE      WAITDOSA,WTWMDOSA
          MOVE      WAITASSR,WTWMASSR
          MOVE      WAITDTAD,WTWMDTAD
          MOVE      WAITDAT2,WMDATE2
          MOVE      WAITKEYD,WMKEYDT
.
.         If there is no user id for creation of the record, then
.         default to program name and date/time of upload.
.
          MATCH     SP10,WTTXWEBC
          IF        @EQUAL
            MOVE      "CONVWAIT  ",WTTXWEBC
            MOVE      CURRDATE,WTTXCDTE
            MOVE      CTIMEIS,WTTXCTIM
          ENDIF
          GOTO      SETV9999
.
.         Suspension type records only
.
SETV1000  MOVE      WAITCODE,WTSUCODE
          MOVE      NXTCOUNT,WTSUCNT
          MOVE      SUSCOUNT,WTSUSCNT
          MOVE      SUSPFDAT,WTSUFDAT
          MOVE      SUSPTDAT,WTSUTDAT
.
          MOVE      SUSPREAS,WTSUREAS
          IF        CATCDFLG = 1
            PACK      KEY5,ANSW,ANSN,SUSPREAS
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WTSUREAS        * yes - load mapped code
            ENDIF
          ENDIF
.
          MATCH     "STA",WTSUREAS
          IF        @EQUAL
            MOVE      LISTCOD2,WTSULSTS
          ENDIF
          GOTO      SETV9999
.
.         ACC type records only
.
SETV2000  MOVE      WMURNO,PTWCURNO
          MOVE      WAITDATS,PTWCVDAT
          CALL      SETACC00                     * common routine from UPACCDAT
          GOTO      SETV9999
.
.         History type records only
.
SETV3000  MOVE      WAITURNO,WTHIURNO
          MOVE      WAITCODE,WTHIPROC
          MOVE      NXTCOUNT,WTHIPCNT
          MOVE      NBRSEDAT,WTHIEDAT
          MOVE      HISCOUNT,WTHIUCNT
.
          MOVE      NBRSPRIO,WTHIPRIO
          IF        CATCDFLG = 1
            PACK      KEY5,ANST,ANSP,NBRSPRIO
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WTHIPRIO        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      NBRSRANK,WTHIRANK
          MOVE      NBRSBSCD,WTHIBSCD
          MOVE      NBRSDCGV,WTHIDCGV
          MOVE      NBRSDBFT,WTHIDBFT
          MOVE      NBRSRECS,WTHIRECS
          MOVE      NBRSRTYP,WTHIRTYP
          MOVE      NBRSRCDT,WTHIRCDT
          MOVE      NBRSBMDT,WTHIBMDT
          MOVE      NBRSETIM,WTHIETIM
.
          MOVE      NBRSBCAN,WTHIBCAN
          IF        CATCDFLG = 1
            PACK      KEY5,ANSB,ANSC,NBRSBCAN
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WTHIBCAN        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      NBRSDRSA,WTHIDRSA
          MOVE      NBRSDOSA,WTHIDOSA
.
          MOVE      NBRSPHSP,WTHIPHSP
          IF        CATCDFLG = 1
            PACK      KEY5,ANSH,ANSP,NBRSPHSP
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WTHIPHSP        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      NBRSPCHS,WTHIPCHS
          IF        CATCDFLG = 1
            PACK      KEY5,ANSA,SP1,NBRSPCHS
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WTHIPCHS        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      NBRSBRSR,WTHIBRSR
          IF        CATCDFLG = 1
            PACK      KEY5,SOREFCAT,NBRSBRSR
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,WTHIBRSR        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      NBRSASSR,WTHIASSR
.
SETV9999  RETURN
+
.*****************************************************************************
.*                            POUT0000             Called by: UPLD0000       *
.*            Pad out all the record fields with spaces given that we        *
.*            are dealing with pipe delimited records                        *
.*****************************************************************************
.
POUT0000  PACK      WAITURNO,WAITURNO,SP8
          RJUSTIFY  WAITURNO
          PACK      WAITCODE,WAITCODE,SP9
.
          BRANCH    TYPEFORM,POUT1000:           * suspension type record
                             POUT2000:           * acc type record
                             POUT3000            * history type record
.
.         Normal W/L entry type records only
.
          PACK      WAITCOD2,WAITCOD2,SP9
          PACK      WAITCOD3,WAITCOD3,SP9
          PACK      WAITDESC,WAITDESC,SP70,SP10
          PACK      WAITDATL,WAITDATL,SP8
          PACK      WAITSTAT,WAITSTAT,SP1
          PACK      WAITUNIT,WAITUNIT,SP3
          PACK      WAITDOCT,WAITDOCT,SP6
          PACK      WAITCTYP,WAITCTYP,SP3
          PACK      WAITPRTY,WAITPRTY,SP3
          PACK      WAITPCAT,WAITPCAT,SP3
          PACK      WAITREAS,WAITREAS,SP70
          PACK      WAITADMW,WAITADMW,SP3
          PACK      WAITIHSP,WAITIHSP,SP3
          PACK      WAITSRCR,WAITSRCR,SP3
          PACK      WAITPLST,WAITPLST,SP3
          PACK      WAITDATS,WAITDATS,SP8
          PACK      WAITTIMS,WAITTIMS,SP8
          PACK      WAITSTAY,WAITSTAY,SP5
          RJUSTIFY  WAITSTAY
          REP       " 0",WAITSTAY
          PACK      WAITNICE,WAITNICE,SP3
          PACK      WAITCLSS,WAITCLSS,SP3
          PACK      WAITEATY,WAITEATY,SP3
          PACK      WAITRFGP,WAITRFGP,SP10
          PACK      WAITGPPC,WAITGPPC,SP10
          PACK      WAITBOTY,WAITBOTY,SP3 
          PACK      WAITTEAM,WAITTEAM,SP5 
          PACK      WAITFUND,WAITFUND,SP3 
          PACK      WAITWARD,WAITWARD,SP3 
          PACK      WAITPREF,WAITPREF,SP3 
          PACK      WAITNWHC,WAITNWHC,SP3 
          PACK      WAITINTD,WAITINTD,SP3 
          PACK      WAITMAUT,WAITMAUT,SP1 
          REP       "n0N0y1Y1",WAITMAUT
          PACK      WAITEXPD,WAITEXPD,SP8 
          PACK      WAITTCRS,WAITTCRS,SP3 
          PACK      WAITDISC,WAITDISC,SP9 
          PACK      WAITRCLI,WAITRCLI,SP10
          PACK      WAITRCLP,WAITRCLP,SP10
          PACK      WAITCDTE,WAITCDTE,SP8
          PACK      WAITCTIM,WAITCTIM,SP8
          PACK      WAITWEBC,WAITWEBC,SP10
          PACK      WAITLUPD,WAITLUPD,SP8
          PACK      WAITLUPT,WAITLUPT,SP8
          PACK      WAITWEBU,WAITWEBU,SP10
          PACK      WAITAVIS,WAITAVIS,SP20
          PACK      WAITEABR,WAITEABR,SP70
          PACK      WAITAUBY,WAITAUBY,SP70
          PACK      WAITADAT,WAITADAT,SP70
          PACK      WAITPRPB,WAITPRPB,SP70
.
          PACK      WAITAASC,WAITAASC,SP70
          MATCH     SP70,WAITAASC
          IF        !@EQUAL
            REP       "0 ",WAITAASC
            RJUSTIFY  WAITAASC
          ENDIF
.
          PACK      WAITVAL1,WAITVAL1,SP70
          MATCH     SP70,WAITVAL1
          IF        !@EQUAL
            RJUSTIFY  WAITVAL1
          ENDIF
.
          PACK      WAITVAL2,WAITVAL2,SP70
          MATCH     SP70,WAITVAL2
          IF        !@EQUAL
            RJUSTIFY  WAITVAL2
          ENDIF

          PACK      WAITVAL3,WAITVAL3,SP70
          MATCH     SP70,WAITVAL3
          IF        !@EQUAL
            RJUSTIFY  WAITVAL3
          ENDIF
          PACK      WAITPHSP,WAITPHSP,SP70
          PACK      WAITACPR,WAITACPR,SP70
          PACK      WAITANAE,WAITANAE,SP3
          PACK      WAITECNT,WAITECNT,SP9
          RJUSTIFY  WAITECNT
          PACK      WAITDABD,WAITDABD,SP8
          PACK      WAITPOTM,WAITPOTM,SP8
          PACK      WAITRANK,WAITRANK,SP6
          RJUSTIFY  WAITRANK
          PACK      WAITDRSA,WAITDRSA,SP8
          PACK      WAITDOSA,WAITDOSA,SP8
          PACK      WAITASSR,WAITASSR,SP10
          PACK      WAITDTAD,WAITDTAD,SP8
          PACK      WAITDAT2,WAITDAT2,SP8
          PACK      WAITKEYD,WAITKEYD,SP8
          GOTO      POUT9999
.
.         Suspension type records only
.
POUT1000  PACK      SUSPFDAT,SUSPFDAT,SP8
          PACK      SUSPTDAT,SUSPTDAT,SP8
          PACK      SUSPREAS,SUSPREAS,SP3
          GOTO      POUT9999
.
.         ACC type records only
.
POUT2000  CALL      PADACC00                     * common routine from UPACCDAT
          GOTO      POUT9999
.
.         History type records only
.
POUT3000  PACK      NBRSEDAT,NBRSEDAT,SP70
          PACK      NBRSUCNT,NBRSUCNT,SP70
          RJUSTIFY  NBRSUCNT
          PACK      NBRSPRIO,NBRSPRIO,SP70
          PACK      NBRSRANK,NBRSRANK,SP70
          RJUSTIFY  NBRSRANK
          PACK      NBRSBSCD,NBRSBSCD,SP70
          PACK      NBRSDCGV,NBRSDCGV,SP70
          PACK      NBRSDBFT,NBRSDBFT,SP70
          PACK      NBRSRECS,NBRSRECS,SP70
          REP       " NnNyY",NBRSRECS
          PACK      NBRSRTYP,NBRSRTYP,SP70
          REP       "aAcCdDeE",NBRSRTYP
          PACK      NBRSRCDT,NBRSRCDT,SP70
          PACK      NBRSBMDT,NBRSBMDT,SP70
          PACK      NBRSETIM,NBRSETIM,SP70
          PACK      NBRSBCAN,NBRSBCAN,SP70
          PACK      NBRSDRSA,NBRSDRSA,SP70
          PACK      NBRSDOSA,NBRSDOSA,SP70
          PACK      NBRSPHSP,NBRSPHSP,SP70
          PACK      NBRSPCHS,NBRSPCHS,SP70
          PACK      NBRSBRSR,NBRSBRSR,SP70
          PACK      NBRSASSR,NBRSASSR,SP70
.
POUT9999  RETURN
+
.*****************************************************************************
.*                              DVAL0000           Called by: UPLD0000       *
.*                  Validate all date fields                                 *
.* Returns:  EXIT - 0 = No date validation errors                            *
.*                  1 = Date validation errors                               *
.*          DTECOUNT - updated count of records with date field errors       *
.*****************************************************************************
.
DVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,DVAL1000:           * suspension type only
                             DVAL2000:           * acc type only
                             DVAL3000            * history type only
.
.         Normal W/L entry type records only
.
          MOVE      WAITDATL,TEMPDATE            * date on list
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "WAITDATL",TMPFIELD
          CALL      VDAT0000
.
          MOVE      WAITDATS,TEMPDATE            * scheduled admit date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "WAITDATS",TMPFIELD
          CALL      VDAT0000
.
          MOVE      WAITEXPD,TEMPDATE            * expected delivery date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      TWO,DATEFLG2                 * past date not allowed
          MOVE      "WAITEXPD",TMPFIELD
          CALL      VDAT0000
.
          MOVE      WAITCDTE,TEMPDATE            * date record created
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "WAITCDTE",TMPFIELD
          CALL      VDAT0000
.
          MOVE      WAITLUPD,TEMPDATE            * last update date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "WAITLUPD",TMPFIELD
          CALL      VDAT0000
.
          MOVE      WAITADAT,TEMPDATE            * procedure date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "WAITADAT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      WAITDABD,TEMPDATE            * proposed operation date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "WAITDABD",TMPFIELD
          CALL      VDAT0000
.
          MOVE      WAITDRSA,TEMPDATE            * date of ref for 1st assess.
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "WAITDRSA",TMPFIELD
          CALL      VDAT0000
.
          MOVE      WAITDOSA,TEMPDATE            * date of 1st spec. assessment
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "WAITDOSA",TMPFIELD
          CALL      VDAT0000
.
          MOVE      WAITDTAD,TEMPDATE            * decision to admit date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "WAITDTAD",TMPFIELD
          CALL      VDAT0000
.
          MOVE      WAITDAT2,TEMPDATE            * date of last review
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "WAITDAT2",TMPFIELD
          CALL      VDAT0000
.
          MOVE      WAITKEYD,TEMPDATE            * keyin date of procedure
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "WAITKEYD",TMPFIELD
          CALL      VDAT0000
.
          GOTO      DVAL9000
.
.         Suspension type records only
.
DVAL1000  MOVE      SUSPFDAT,TEMPDATE            * suspension from date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "SUSPFDAT",TMPFIELD
          CALL      VDAT0000
.         
          MOVE      SUSPTDAT,TEMPDATE            * suspension to date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "SUSPTDAT",TMPFIELD
          CALL      VDAT0000
.
          MATCH     SUSPFDAT,SUSPTDAT
          IF        @LESS
            MOVE      "To Date less than From Date ",ERORDESC
            CALL      PERR0000                   * print error line
            MOVE      ONE,ERORFLAG               * set error flag
            GOTO      DVAL9000
          ENDIF
.
          MATCH     WAITDATL,SUSPFDAT
          IF        @LESS
            MOVE      "From Date less than Date on list ",ERORDESC
            CALL      PERR0000                   * print error line
            MOVE      ONE,ERORFLAG               * set error flag
          ENDIF
.
          GOTO      DVAL9000
.
.         ACC type records only
.
DVAL2000  CALL      DTEACC00                     * common routine from UPACCDAT
          GOTO      DVAL9000
.
.         History type records only
.
DVAL3000  MOVE      NBRSEDAT,TEMPDATE            * effective from date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "NBRSEDAT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      NBRSDCGV,TEMPDATE            * date certainty given
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "NBRSDCGV",TMPFIELD
          CALL      VDAT0000
.
          MOVE      NBRSDBFT,TEMPDATE            * date booked for treatment
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "NBRSDBFT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      NBRSRCDT,TEMPDATE            * rank change date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "NBRSRCDT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      NBRSBMDT,TEMPDATE            * date booking made
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "NBRSBMDT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      NBRSDRSA,TEMPDATE            * date of referral for FSA
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "NBRSDRSA",TMPFIELD
          CALL      VDAT0000
.
          MOVE      NBRSDOSA,TEMPDATE            * date of FSA
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "NBRSDOSA",TMPFIELD
          CALL      VDAT0000
.
DVAL9000  BRANCH    ERORFLAG,DVAL9100            * errors on date validation
.
          MOVE      ZERO,EXIT                    * no errors on date validation
          GOTO      DVAL9999
.
DVAL9100  ADD       ONE,DTECOUNT                 * incr. date error record count
          MOVE      ONE,EXIT
.
DVAL9999  RETURN
+
.*****************************************************************************
.*                              VDAT0000           Called by: DVAL0000       *
.*                  Validate a date field                                    *
.* Requires:  TEMPDATE - Date in format ccyymmdd                             *
.*            DATEFLG1 - Date Type flag                                      *
.*                          0 = full date (ccyymmdd)                         *
.*                          1 = partial date (ccyymm)                        *
.*            DATEFLG2 - Dates Allowed flag                                  *
.*                          0 = any date allowed                             *
.*                          1 = future dates not allowed                     *
.*                          2 = past dates not allowed                       *
.*            TMPFIELD - Date field name                                     *
.* Returns:   ERORFLAG = 1 if an error in date validation occurs.            *
.*****************************************************************************
.
VDAT0000  MATCH     SP8,TEMPDATE                 * blank date ?
          GOTO      VDAT9999 IF EQUAL            * yes
.
.         Validate that the date has been fully populated
.
          SQUEEZE   TEMPDATE
          MOVELPTR  TEMPDATE,FORM1
          IF        DATEFLG1 = 0 & FORM1 <> 8 | DATEFLG1 = 1 & FORM1 <> 6
            MOVE      "Insufficient digits ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
.         Validate that the date is numeric
.
VDAT0100  TYPE      TEMPDATE
          IF        !@EQUAL
            MOVE      "Not numeric ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
          UNPACK    TEMPDATE,DIM2C,DIM2Y,DIM2M,DIM2D
.
.         Validate the century is >= 18 and <= current century
.
          MOVE      DIM2C,FORM2
          IF        FORM2 < 18 | FORM2 > CURRCENT
            MOVE      "Century not valid ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
.         Validate the month
.
          MOVE      DIM2M,FORM2
          IF        FORM2 < 1 | FORM2 > 12
            MOVE      "Month not valid ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
          COMPARE   ONE,DATEFLG1                 * short date (ccyymm) ?
          GOTO      VDAT9999 IF EQUAL            * yes - finished
.
.         Validate the day is:
.              < 32 for January, March, May, July, August, October & December
.              < 31 for April, June, September & November
.              < 29 for February, except in a leap year where it is < 30
.
          BRANCH    FORM2,VDAT1000:              * Jan
                          VDAT3000:              * Feb
                          VDAT1000:              * Mar
                          VDAT2000:              * Apr
                          VDAT1000:              * May
                          VDAT2000:              * Jun
                          VDAT1000:              * Jul
                          VDAT1000:              * Aug
                          VDAT2000:              * Sep
                          VDAT1000:              * Oct
                          VDAT2000:              * Nov
                          VDAT1000               * Dec
.
.         Validate days for month of 31 days
.
VDAT1000  MOVE      DIM2D,FORM2
          IF        FORM2 < 1 | FORM2 > 31
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Validate days for month of 30 days
.
VDAT2000  MOVE      DIM2D,FORM2
          IF        FORM2 < 1 | FORM2 > 30
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Validate days for February
.         A leap year is one where:
.           1. Every year divisible by 4 is a leap year.
.           2. But every year divisible by 100 is NOT a leap year
.           3. Unless the year is also divisible by 400, then it is still a
.              leap year.
.
VDAT3000  MOVE      DIM2D,FORM2
          PACK      DIM4,DIM2C,DIM2Y
          MOVE      DIM4,FORM4
          IF        (FORM4%4) = 0
            IF        (FORM4%100) = 0
              IF        (FORM4%400) = 0
                GOTO      VDAT3200
              ENDIF
            ELSE
              GOTO      VDAT3200
            ENDIF
          ENDIF
.
.         Check for normal Feb days
.
VDAT3100  IF        FORM2 < 1 | FORM2 > 28
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Check for leap year Feb days
.
VDAT3200  IF        FORM2 < 1 | FORM2 > 29
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
VDAT3900  MOVE      "Day not valid ",ERORDESC
          CALL      DERR0000
          GOTO      VDAT9999
.
VDAT4000  COMPARE   ZERO,DATEFLG2                * any date allowed ?
          GOTO      VDAT9999 IF EQUAL            * yes
.
          BRANCH    DATEFLG2,VDAT5000:           * future dates not allowed
                             VDAT6000            * past dates not allowed
.
.         Make sure the date is not in the future
.
VDAT5000  MATCH     TEMPDATE,CURRDATE
          IF        @LESS
            MOVE      "Date cannot be in the future ",ERORDESC
            CALL      DERR0000
          ENDIF
          GOTO      VDAT9999
.
.         Make sure the date is not in the past
.
VDAT6000  MATCH     CURRDATE,TEMPDATE
          IF        @LESS
            MOVE      "Date cannot be in the past ",ERORDESC
            CALL      DERR0000
          ENDIF
.
VDAT9999  RETURN
+
.*****************************************************************************
.*                            DERR0000             Called by: VDAT0000       *
.*                    Process date error                                     *
.* Requires: TMPFIELD - field name                                           *
.*           ERORDESC - error description                                    *
.* Returns:  ERORFLAG = 1 if an error in date validation occurs.             *
.*****************************************************************************
.
DERR0000  ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set date error flag
.
DERR9999  RETURN
+
.*****************************************************************************
.*                              TVAL0000           Called by: UPLD0000       *
.*                  Validate all time fields                                 *
.* Returns:  EXIT - 0 = No time validation errors                            *
.*                  1 = Time validation errors                               *
.*          TIMCOUNT - updated count of records with time field errors       *
.*****************************************************************************
.
TVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,TVAL9999:           * suspension record only
                             TVAL1000:           * acc record only
                             TVAL2000            * history record only
.
          MOVE      WAITDATS,TEMPDATE
          MOVE      WAITTIMS,TEMPTIME            * scheduled admit time
          MOVE      "WAITTIMS",TMPFIELD
          MOVE      ZERO,TIMEFLAG                * any time allowed
          CALL      VTIM0000
.
          MOVE      WAITCDTE,TEMPDATE
          MOVE      WAITCTIM,TEMPTIME            * procedure create time
          MOVE      "WAITCTIM",TMPFIELD
          MOVE      ONE,TIMEFLAG                 * future time not allowed
          CALL      VTIM0000
.
          MOVE      WAITLUPD,TEMPDATE
          MOVE      WAITLUPT,TEMPTIME            * procedure update time
          MOVE      "WAITLUPT",TMPFIELD
          MOVE      ONE,TIMEFLAG                 * future time not allowed
          CALL      VTIM0000
.
          MOVE      WAITDABD,TEMPDATE
          MOVE      WAITPOTM,TEMPTIME            * proposed operation time
          MOVE      "WAITPOTM",TMPFIELD
          MOVE      ZERO,TIMEFLAG                * any time allowed
          CALL      VTIM0000
.
          GOTO      TVAL9000
.
.         ACC record type
.
TVAL1000  CALL      TIMACC00                     * common routine from UPACCDAT
          GOTO      TVAL9000
.
.         History record type
.
TVAL2000  MOVE      NBRSEDAT,TEMPDATE
          MOVE      NBRSETIM,TEMPTIME            * effective from time
          MOVE      "NBRSETIM",TMPFIELD
          MOVE      ONE,TIMEFLAG                 * future time not allowed
          CALL      VTIM0000
.
TVAL9000  BRANCH    ERORFLAG,TVAL9100            * errors on time validation
.
          MOVE      ZERO,EXIT                    * no errors on time validation
          GOTO      TVAL9999
.
TVAL9100  ADD       ONE,TIMCOUNT                 * incr. time error record count
          MOVE      ONE,EXIT
.
TVAL9999  RETURN
+
.*****************************************************************************
.*                            VTIM0000             Called by: TVAL0000       *
.*                    Validate time fields                                   *
.* Requires:  TEMPTIME - Time in format hh:mm:ss                             *
.*            TEMPDATE - Date in format ccyymmdd                             *
.*            TMPFIELD - Time field name                                     *
.*            TIMEFLAG - Times Allowed flag                                  *
.*                          0 = any time allowed                             *
.*                          1 = no future times allowed                      *
.*                          2 = no past times allowed                        *
.* Returns:   ERORFLAG = 1 if an error in time validation occurs.            *
.*****************************************************************************
.
VTIM0000  MATCH     SP8,TEMPTIME                 * blank time ?
          GOTO      VTIM9999 IF EQUAL            * yes
.
          MATCH     SP8,TEMPDATE                 * blank date ?
          IF        @EQUAL
            MOVE      "Time without corresponding date ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
          UNPACK    TEMPTIME,DIM2H,DIM1A,DIM2M,DIM1B,DIM2S    * (hh:mm:ss)
.
.         Make sure colon's separate the hours, minutes and seconds
.
          MATCH     DIM1A,DIM1B
          GOTO      VTIM1000 IF NOT EQUAL
.
          MATCH     COLON,DIM1A
          GOTO      VTIM1000 IF NOT EQUAL
.
          GOTO      VTIM2000
.
VTIM1000  MOVE      "Format not valid ",ERORDESC
          CALL      TERR0000
          GOTO      VTIM9999
.
.         Validate the hour
.
VTIM2000  MOVE      DIM2H,FORM2
          IF        FORM2 < 0 | FORM2 > 23
            MOVE      "Hour not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
.         Validate the minute
.
          MOVE      DIM2M,FORM2
          IF        FORM2 < 0 | FORM2 > 59
            MOVE      "Minutes not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
.         Validate the second
.
          MOVE      DIM2S,FORM2
          IF        FORM2 < 0 | FORM2 > 59
            MOVE      "Seconds not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
          COMPARE   ZERO,TIMEFLAG                * any time allowed ?
          GOTO      VTIM9999 IF EQUAL            * yes
.
          MATCH     SP8,TEMPDATE                 * date blank ?
          GOTO      VTIM9999 IF EQUAL            * yes
.
          MATCH     TEMPDATE,CURRDATE            * current date ?
          GOTO      VTIM9999 IF NOT EQUAL        * no
.
          BRANCH    TIMEFLAG,VTIM5000:           * no future time allowed
                             VTIM6000            * no past time allowed
.
.         Make sure the time is not in the future
.
VTIM5000  MATCH     TEMPTIME,CTIMEIS
          IF        @LESS
            MOVE      "Time cannot be in the future ",ERORDESC
            CALL      TERR0000
          ENDIF
          GOTO      VTIM9999
.
.         Make sure the time is not in the past
.
VTIM6000  MATCH     CTIMEIS,TEMPTIME
          IF        @LESS
            MOVE      "Time cannot be in the past ",ERORDESC
            CALL      TERR0000
          ENDIF
.
VTIM9999  RETURN
+
.*****************************************************************************
.*                            TERR0000             Called by: VTIM0000       *
.*                    Process time error                                     *
.* Requires: TMPFIELD - field name                                           *
.*           ERORDESC - error description                                    *
.* Returns:  ERORFLAG = 1 if an error in time validation occurs.             *
.*****************************************************************************
.
TERR0000  ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set time error flag
.
TERR9999  RETURN
+
.*****************************************************************************
.*                            VNUM0000             Called by: UPLD0000       *
.*                    Validate numeric fields                                *
.* Returns:  EXIT - 0 = No numeric validation errors                         *
.*                  1 = Numeric validation errors                            *
.*          NUMCOUNT - updated count of records with numeric field errors    *
.*****************************************************************************
.
VNUM0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,VNUM9999:           * suspension record only
                             VNUM1000:           * acc record only
                             VNUM2000            * history record only
.
.         Procedure Status numeric field (valid values 1 and 2)
.
          TYPE      WAITSTAT                     * procedure status numeric ?
          GOTO      VNUM0050 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      WAITSTAT,FORM1
          IF        FORM1 <> 1 & FORM1 <> 2
            GOTO      VNUM0050
          ENDIF
          GOTO      VNUM0100                     * yes - valid value
.
VNUM0050  MOVE      "WAITSTAT",TMPFIELD
          CALL      NERR0000
.
.         Estimated Stay numeric field
.
VNUM0100  TYPE      WAITSTAY                     * estimated stay numeric ?
          GOTO      VNUM0150 IF NOT EQUAL        * yes - valid value
          GOTO      VNUM0200
.
VNUM0150  MOVE      "WAITSTAY",TMPFIELD
          CALL      NERR0000
.
.         Airway Assessment Score (ASA)
.
VNUM0200  MATCH     WAITAASC,SP70
          GOTO      VNUM0300 IF EQUAL
.
          TYPE      WAITAASC
          GOTO      VNUM0250 IF NOT EQUAL
.
          MOVE      ZERO,FORM4
          MOVE      WAITAASC,FORM4
          IF        FORM4 < 1 | FORM4 > 4
            GOTO      VNUM0250
          ENDIF
.
          GOTO      VNUM0300
.
VNUM0250  MOVE      "WAITAASC",TMPFIELD
          CALL      NERR0000          
.
.         Weight (kg)
.
VNUM0300  MATCH     WAITVAL1,SP70
          GOTO      VNUM0400 IF EQUAL
.
          TYPE      WAITVAL1
          GOTO      VNUM0350 IF NOT EQUAL
          GOTO      VNUM0400
.
VNUM0350  MOVE      "WAITVAL1",TMPFIELD
          CALL      NERR0000
.
.         Height (cm)
.
VNUM0400  MATCH     WAITVAL2,SP70
          GOTO      VNUM0500 IF EQUAL
.
          TYPE      WAITVAL2
          GOTO      VNUM0450 IF NOT EQUAL
          GOTO      VNUM0500
.
VNUM0450  MOVE      "WAITVAL2",TMPFIELD
          CALL      NERR0000
.
.         Calculated BMI
.
VNUM0500  MATCH     WAITVAL3,SP70
          GOTO      VNUM0600 IF EQUAL
.
          TYPE      WAITVAL3
          GOTO      VNUM0550 IF NOT EQUAL
          GOTO      VNUM0600
.
VNUM0550  MOVE      "WAITVAL3",TMPFIELD
          CALL      NERR0000
.
.         Medical Authorisation numeric field (valid values blank, 0 and 1)
.
VNUM0600  MATCH     SP1,WAITMAUT                 * blank field ?
          GOTO      VNUM0700 IF EQUAL            * yes - valid
.
          TYPE      WAITMAUT                     * no - numeric field ?
          GOTO      VNUM0650 IF NOT EQUAL        * no - error
.
          MOVE      WAITMAUT,FORM1
          IF        FORM1 <> 0 & FORM1 <> 1
            GOTO      VNUM0650
          ENDIF
          GOTO      VNUM0700                     * yes - valid value
.
VNUM0650  MOVE      "WAITMAUT",TMPFIELD
          CALL      NERR0000
.
.         ESIS Unique Count (NZ - Local Booking Identifier for NBRS)
.
VNUM0700  MATCH     WAITECNT,SP70
          GOTO      VNUM0800 IF EQUAL
.
          TYPE      WAITECNT
          GOTO      VNUM0750 IF NOT EQUAL
          GOTO      VNUM0800
.
VNUM0750  MOVE      "WAITECNT",TMPFIELD
          CALL      NERR0000
.
.         Rank
.
VNUM0800  MATCH     WAITRANK,SP70
          IF        @EQUAL
            MOVE      "     0",WAITRANK
            GOTO      VNUM9000
          ENDIF
.
          TYPE      WAITRANK
          GOTO      VNUM0850 IF NOT EQUAL
          GOTO      VNUM9000
.
VNUM0850  MOVE      "WAITRANK",TMPFIELD
          CALL      NERR0000
          GOTO      VNUM9000
.
.         ACC record type
.
VNUM1000  CALL      NUMACC00                     * common routine from UPACCDAT
          GOTO      VNUM9000
.
.         History record type
.         Booking Status code field (valid values 1-7, 20-22, 30-35)
.
VNUM2000  TYPE      NBRSBSCD                     * booking status numeric ?
          GOTO      VNUM2050 IF NOT EQUAL        * no - error
.
          MOVE      NBRSBSCD,FORM2
          IF        (FORM1 > 0 & FORM1 < 8) | (FORM1 > 19 & FORM1 < 23) | (FORM1 > 29 & FORM1 < 36)
            GOTO      VNUM2050
          ENDIF
          GOTO      VNUM9000                     * yes - valid value
.
VNUM2050  MOVE      "NBRSBSCD",TMPFIELD
          CALL      NERR0000
.
VNUM9000  BRANCH    ERORFLAG,VNUM9100            * errors on number validation
.
          MOVE      ZERO,EXIT                    * no errors on no. validation
          GOTO      VNUM9999
.
VNUM9100  ADD       ONE,NUMCOUNT                 * incr. num. error record count
          MOVE      ONE,EXIT
.
VNUM9999  RETURN
+
.*****************************************************************************
.*                            NERR0000             Called by: VNUM0000       *
.*                    Process number error                                   *
.* Requires: TMPFIELD - field name                                           *
.*****************************************************************************
.
NERR0000  MOVE      "Invalid numeric field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set number error flag
.
NERR9999  RETURN
+
.*****************************************************************************
.*                           CVAL0000              Called by: UPLD0000       *
.*                 Validate all the relevant coded fields.                   *
.*        This validation is performed on the database fields just prior     *
.*        to writing the data and after any mappings have been performed.    *
.* Returns:  EXIT - 0 = No code validation errors                            *
.*                  1 = Code validation errors                               *
.*          CODCOUNT - updated count of records with coded field errors      *
.*****************************************************************************
.
CVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          BRANCH    TYPEFORM,CVAL4000:           * suspension type record
                             CVAL5000:           * acc type record
                             CVAL8000            * history type record
.
.         Normal W/L entry type records only
.
          MATCH     SP3,WAITUNIT                 * blank unit ?
          GOTO      CVAL0100 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSW,ANSU
          PACK      TEMPCODE,WMUNIT,SP10
          MOVE      "WAITUNIT",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (unit)
          CALL      VCOD0000
.
CVAL0100  MATCH     SP3,WAITPRTY                 * blank priority ?
          GOTO      CVAL0150 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANST,ANSP
          PACK      TEMPCODE,WMPTY,SP10
          MOVE      "WAITPRTY",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (priority)
          CALL      VCOD0000
.
CVAL0150  MATCH     SP3,WAITPCAT                 * blank admission type ?
          GOTO      CVAL0200 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSA,SP1
          PACK      TEMPCODE,WMPCAT,SP10
          MOVE      "WAITPCAT",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (admission type)
          CALL      VCOD0000
.
CVAL0200  MATCH     SP3,WAITSRCR                 * blank source of ref.  code ?
          GOTO      CVAL0300 IF EQUAL            * yes - no validation req'd
.
          MOVE      SOREFCAT,TEMPCATG
          MOVE      WTWMSRCR,TEMPCODE
          LOAD      TEMPCODE,WTCNBRSR,WMUDEF1,WMUDEF2,WMUDEF3,WMUDEF4:
                                      WMUDEF5,WMUDEF6,WMUDEF7,WMUDEF8
          PACK      TEMPCODE,TEMPCODE,SP10
          MOVE      "WAITSRCR",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (source of referral)
          CALL      VCOD0000
.
CVAL0300  MATCH     SP3,WAITPLST                 * blank list status code ?
          GOTO      CVAL0400 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSV,ANSL
          PACK      TEMPCODE,WTTXPLST,SP10
          MOVE      "WAITPLST",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (list status)
          CALL      VCOD0000
.
CVAL0400  MATCH     SP3,WAITCTYP                 * blank claim code ?
          GOTO      CVAL0500 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSC,ANSL
          PACK      TEMPCODE,WTTXCTYP,SP10
          MOVE      "WAITCTYP",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (claim code)
          CALL      VCOD0000
.
CVAL0500  MATCH     SP3,WAITNICE                 * blank short notice code ?
          GOTO      CVAL0600 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSW,ANSS
          PACK      TEMPCODE,WMNOTICE,SP10
          MOVE      "WAITNICE",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (short notice)
          CALL      VCOD0000
.
CVAL0600  MATCH     SP3,WAITBOTY                 * blank booking type ?
          GOTO      CVAL0700 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSB,ANSK
          PACK      TEMPCODE,WTTXBOTY,SP10
          MOVE      "WAITBOTY",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (booking type)
          CALL      VCOD0000
.
CVAL0700  MATCH     SP3,WAITFUND                 * blank funding source ?
          GOTO      CVAL0800 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,CATCX
          PACK      TEMPCODE,WTTXFUND,SP10
          MOVE      "WAITFUND",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (funding source)
          CALL      VCOD0000
.
CVAL0800  MATCH     SP3,WAITPREF                 * blank preferred accomm. ?
          GOTO      CVAL0900 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSB,ANSP
          PACK      TEMPCODE,WTTXPREF,SP10
          MOVE      "WAITPREF",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (pref. accomm.)
          CALL      VCOD0000
.
CVAL0900  MATCH     SP3,WAITNWHC                 * blank WA Hosp. contact ?
          GOTO      CVAL1000 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,CATCW
          PACK      TEMPCODE,WTTXNWHC,SP10
          MOVE      "WAITNWHC",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (WA Hosp. contact)
          CALL      VCOD0000
.
CVAL1000  MATCH     SP3,WAITCLSS                 * blank adm. class ?
          GOTO      CVAL1100 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSP,SP1
          PACK      TEMPCODE,WTWMCLSS,SP10
          MOVE      "WAITCLSS",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (adm. class)
          CALL      VCOD0000
.
CVAL1100  MATCH     SP3,WAITEATY                 * blank adm. type ?
          GOTO      CVAL1200 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSC,ANSC
          PACK      TEMPCODE,WTWMEATY,SP10
          MOVE      "WAITEATY",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (adm. type)
          CALL      VCOD0000
.
CVAL1200  MATCH     SP3,WAITINTD                 * blank intended stay ?
          GOTO      CVAL1300 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSV,ANSI
          PACK      TEMPCODE,WTTXINTD,SP10
          MOVE      "WAITINTD",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (intended stay)
          CALL      VCOD0000
.
CVAL1300  MATCH     SP3,WAITTCRS                 * blank tertiary care reason ?
          GOTO      CVAL1400 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSW,ANSH
          PACK      TEMPCODE,WTTXTCRS,SP10
          MOVE      "WAITTCRS",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (tert. care reason)
          CALL      VCOD0000
.
CVAL1400  MATCH     SP5,WAITTEAM                 * blank team ?
          GOTO      CVAL1500 IF EQUAL            * yes - no validation req'd
.
.         Intended hospital is a mandatory field and is required for team
.         validation.  If not present, then the mandatory error will appear
.         on the report, so don't worry about printing an error here.
.
          MATCH     SP3,WAITIHSP                 * blank hospital ?
          GOTO      CVAL1500 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,WTTXTEAM,SP10
          MOVE      "WAITTEAM",TMPFIELD
          MOVE      TEN,TEMPTYPE                 * pmstemaf (team)
          CALL      VCOD0000
.
CVAL1500  MATCH     SP3,WAITWARD                 * blank ward ?
          GOTO      CVAL1700 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,WTTXWARD,SP10
          MOVE      "WAITWARD",TMPFIELD
          MOVE      SEVEN,TEMPTYPE               * patwr1af (ward)
          CALL      VCOD0000
.
CVAL1700  MATCH     SP9,WAITDISC                 * blank disaster code ?
          GOTO      CVAL1800 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,WTTXDISC,SP10
          MOVE      "WAITDISC",TMPFIELD
          MOVE      NINE,TEMPTYPE                * dismasaf (disaster code)
          CALL      VCOD0000
.
CVAL1800  MATCH     SP3,WAITIHSP                 * blank intended hospital ?
          GOTO      CVAL1900 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,WTWMIHSP,SP10
          MOVE      "WAITIHSP",TMPFIELD
          MOVE      TEN1,TEMPTYPE                * pathspaf (hospital)
          CALL      VCOD0000
.
CVAL1900  MATCH     SP6,WAITDOCT                 * blank doctor ?
          GOTO      CVAL2000 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,WMDOCTOR,SP10
          MOVE      "WAITDOCT",TMPFIELD
          MOVE      TEN2,TEMPTYPE                * patdo1af (doctor)
          CALL      VCOD0000
.
CVAL2000  MATCH     SP10,WAITGPPC                * blank gp practice code ?
          GOTO      CVAL2100 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,WTWMGPPC,SP10
          MOVE      "WAITGPPC",TMPFIELD
          MOVE      TEN3,TEMPTYPE                * pmshcgaf (Referring Practice)
          CALL      VCOD0000
.
CVAL2100  MATCH     SP10,WAITRFGP                * blank referring gp code ?
          GOTO      CVAL2200 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,WTWMGPPC,SP4
          PACK      TEMPCODE,WTWMRFGP,SP10
          MOVE      "WAITRFGP",TMPFIELD
          MOVE      FOUR,TEMPTYPE                * pmshcpaf (Referring GP)
          CALL      VCOD0000
.
CVAL2200  MATCH     SP10,WAITRCLP                * blank ref. clin. practice ?
          GOTO      CVAL2300 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,WTTXRCLP,SP10
          MOVE      "WAITRCLP",TMPFIELD
          MOVE      TEN3,TEMPTYPE                * pmshcgaf (Ref. Clin. Prac.)
          CALL      VCOD0000
.
CVAL2300  MATCH     SP10,WAITRCLI                * blank referring clinician ?
          GOTO      CVAL2400 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,WTTXRCLP,SP10
          PACK      TEMPCODE,WTTXRCLI,SP10
          MOVE      "WAITRCLI",TMPFIELD
          MOVE      FOUR,TEMPTYPE                * pmshcpaf (Ref. clinician)
          CALL      VCOD0000
.
CVAL2400  MATCH     SP9,WAITCODE                 * blank procedure code 1 ?
          GOTO      CVAL2500 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,WMCODE,SP10
          MOVE      "WAITCODE",TMPFIELD
          MOVE      EIGHT,TEMPTYPE               * watproaf (procedure)
          CALL      VCOD0000
.
CVAL2500  MATCH     SP9,WAITCOD2                 * blank procedure code 2 ?
          GOTO      CVAL2600 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,WTWMPRO2,SP10
          MOVE      "WAITCOD2",TMPFIELD
          MOVE      EIGHT,TEMPTYPE               * watproaf (procedure)
          CALL      VCOD0000
.
CVAL2600  MATCH     SP9,WAITCOD3                 * blank procedure code 3 ?
          GOTO      CVAL2700 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,WTWMPRO3,SP10
          MOVE      "WAITCOD3",TMPFIELD
          MOVE      EIGHT,TEMPTYPE               * watproaf (procedure)
          CALL      VCOD0000
.
CVAL2700  MATCH     SP3,WAITADMW                 * admitting ward ?
          GOTO      CVAL2800 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,CATAP
          PACK      TEMPCODE,WTTXADMW,SP10
          MOVE      "WAITADMW",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (admitting ward)
          CALL      VCOD0000
.
CVAL2800  MATCH     SP3,WAITEABR                 * early booking reason
          GOTO      CVAL2900 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,CATB1
          PACK      TEMPCODE,BKRXEABR,SP10
          MOVE      "WAITEABR",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (early booking 
          CALL      VCOD0000                     * reason)
.
CVAL2900  MATCH     SP3,WAITAUBY                 * authorised by
          GOTO      CVAL3000 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,CATB2
          PACK      TEMPCODE,BKRXAUBY,SP10
          MOVE      "WAITAUBY",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (authorised by)
          CALL      VCOD0000
.
CVAL3000  MATCH     SP3,WAITPRPB                 * procedure can be performed by
          GOTO      CVAL3100 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,CATYH
          PACK      TEMPCODE,WTTXPRPB,SP10
          MOVE      "WAITPRPB",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (procedure can be 
          CALL      VCOD0000                     * performed by)
.
CVAL3100  MATCH     SP3,WAITPHSP                 * health service purchser
          GOTO      CVAL3200 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSH,ANSP
          PACK      TEMPCODE,WTWMPHSP,SP10
          MOVE      "WAITPHSP",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (health purchaser)
          CALL      VCOD0000
.
CVAL3200  MATCH     SP3,WAITANAE                 * blank anaesthetic type ?
          GOTO      CVAL3300 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSO,ANSA
          PACK      TEMPCODE,WTTXANAE,SP10
          MOVE      "WAITANAE",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (anaes. type)
          CALL      VCOD0000
.
CVAL3300  MATCH     SP10,WTWMASSR                * blank assessor code ?
          GOTO      CVAL9000 IF EQUAL            * yes - no validation req'd
.
          MOVE      SP10,TEMPCATG
          PACK      TEMPCODE,WTWMASSR,SP10
          MOVE      "WAITASSR",TMPFIELD
          MOVE      FOUR,TEMPTYPE                * pmshcpaf (hcp)
          CALL      VCOD0000
.
          GOTO      CVAL9000
.
.         Suspension type records only
.         
CVAL4000  PACK      TEMPCATG,ANSW,ANSN
          PACK      TEMPCODE,WTSUREAS,SP10
          MOVE      "SUSPREAS",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (reason)
          CALL      VCOD0000
.         
          PACK      TEMPCODE,WTSUCODE,SP10
          MOVE      "WAITCODE",TMPFIELD
          MOVE      EIGHT,TEMPTYPE               * watproaf (procedure)
          CALL      VCOD0000
.
          GOTO      CVAL9000
.
.         ACC type records only
.         
CVAL5000  CALL      CODACC00                     * common routine from UPACCDAT
          GOTO      CVAL9000
.
.         History type records only
.
CVAL8000  MATCH     SP3,WTHIPRIO                 * blank priority code ?
          GOTO      CVAL8100 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANST,ANSP
          PACK      TEMPCODE,WTHIPRIO,SP10
          MOVE      "NBRSPRIO",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (type of work)
          CALL      VCOD0000
.
CVAL8100  MATCH     SP3,WTHIBCAN                 * blank cancellation reason ?
          GOTO      CVAL8200 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSB,ANSC
          PACK      TEMPCODE,WTHIBCAN,SP10
          MOVE      "NBRSBCAN",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (type of work)
          CALL      VCOD0000
.
CVAL8200  MATCH     SP3,WTHIPHSP                 * blank purchaser ?
          GOTO      CVAL8300 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSH,ANSP
          PACK      TEMPCODE,WTHIPHSP,SP10
          MOVE      "NBRSPHSP",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (type of work)
          CALL      VCOD0000
.
CVAL8300  MATCH     SP3,WTHIPCHS                 * blank specialty ?
          GOTO      CVAL8400 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSA,SP1
          PACK      TEMPCODE,WTHIPCHS,SP10
          MOVE      "NBRSPCHS",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (type of work)
          CALL      VCOD0000
.
CVAL8400  MATCH     SP3,WTHIBRSR                 * blank specialty ?
          GOTO      CVAL8500 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,SOREFCAT
          PACK      TEMPCODE,WTHIBRSR,SP10
          MOVE      "NBRSBRSR",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (type of work)
          CALL      VCOD0000
.
CVAL8500  MATCH     SP10,WTHIASSR                * blank assessor code ?
          GOTO      CVAL9000 IF EQUAL            * yes - no validation req'd
.
          MOVE      SP10,TEMPCATG
          PACK      TEMPCODE,WTHIASSR,SP10
          MOVE      "NBRSASSR",TMPFIELD
          MOVE      FOUR,TEMPTYPE                * pmshcpaf (hcp)
          CALL      VCOD0000
.
CVAL9000  BRANCH    ERORFLAG,CVAL9100            * errors on code validation
.
          MOVE      ZERO,EXIT                    * no errors on code validation
          GOTO      CVAL9999
.
CVAL9100  ADD       ONE,CODCOUNT                 * incr. code error record count
          MOVE      ONE,EXIT
.
CVAL9999  RETURN
+
.*****************************************************************************
.*                           VCOD0000              Called by: CVAL0000       *
.*                   Validate a coded field                                  *
.* Requires: TEMPCATG - temporary category variable                          *
.*           TEMPCODE - temporary code variable                              *
.*           TEMPTYPE - temporary code type                                  *
.*           TMPFIELD - temporary field name                                 *
.* Returns:  ERORFLAG = 1 if an error in code validation occurs.             *
.*****************************************************************************
.
.         Note: The first 6 branches below must remain in their current
.               sequence as they are called from UPACCDAT for validating
.               ACC coded fields for this program as well as CONVWAIT, CONVBOOK
.               and CONVPADM.
.
VCOD0000  BRANCH    TEMPTYPE,VCOD0100:           * patcodes (category-codes)
                             VCOD0200:           * patin1af (insurer)
                             VCOD0300:           * pateoraf (employer)
                             VCOD0400:           * pmshcpaf (referring gp)
                             VCOD0500:           * pmstleaf (title)
                             VCOD0600:           * pmsrelaf (relation)
                             VCOD0700:           * patwr1af (ward)
                             VCOD0800:           * watproaf (procedures)
                             VCOD0900:           * dismasaf (disaster)
                             VCOD1000:           * pmstemaf (team)
                             VCOD1100:           * pathspaf (hospital)
                             VCOD1200:           * patdo1af (doctor)
                             VCOD1300            * pmshcgaf (referring practice)
.
.         Validate a category-coded field (patcodes)
.
VCOD0100  PACK      KEY5,TEMPCATG,TEMPCODE
          CALL      RDCODE1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate an insurer code (patin1af)
.
VCOD0200  MOVE      TEMPCODE,KEY6
          CALL      RDINSR1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error 
          GOTO      VCOD9999                     * yes
.
.         Validate an employer code (pateoraf)
.
VCOD0300  PACK      KEY7,ANSE,TEMPCODE,SP10
          CALL      RDPTEOR1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error 
          GOTO      VCOD9999                     * yes
.
.         Validate a referring gp field (pmshcpaf)
.
VCOD0400  MOVE      TEMPCODE,KEY10
          CALL      RDPMHCP1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error 
.
          MATCH     SP10,TEMPCATG                * blank practice ?
          GOTO      VCOD9999 IF EQUAL            * yes
.
          PACK      KEY20,TEMPCODE,TEMPCATG
          CALL      RDPMHCL1                     * gp/practice linked ?
          IF        OVRCD = 1
            MOVE      "GP not linked to Practice ",ERORDESC
            CALL      PERR0000
            MOVE      ONE,ERORFLAG               * set code error flag
          ENDIF
          GOTO      VCOD9999
.
.         Validate a title code (pmstleaf)
.
VCOD0500  MOVE      TEMPCODE,KEY4
          CALL      RDPMTLE1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error 
          GOTO      VCOD9999                     * yes
.
.         Validate a relation code (pmsrelaf)
.
VCOD0600  MOVE      TEMPCODE,KEY10
          CALL      RDPMREL1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error 
          GOTO      VCOD9999                     * yes
.
.         Validate a ward code (patwr1af)
.
VCOD0700  MOVE      TEMPCODE,KEY3
          PACK      KEY6,KEY3,SP3
          CALL      RDWARD1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error 
          GOTO      VCOD9999                     * yes
.
.         Validate a procedure field (watproaf)
.
VCOD0800  MOVE      TEMPCODE,KEY9
          CALL      RDPROA1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error 
.
          MATCH     SP70,WMDESC                  * procedure description blank ?
          IF        @EQUAL
            MOVE      WPDESC,WMDESC              * yes - default watproaf desc
          ENDIF
          GOTO      VCOD9999
.
.         Validate a disaster code (dismasaf)
.
VCOD0900  MOVE      TEMPCODE,KEY9
          CALL      RDDSMAS1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error 
          GOTO      VCOD9999                     * yes
.
.         Validate a team code (pmstemaf)
.
VCOD1000  MOVE      TEMPCODE,KEY5
          CALL      RDPMTEM1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error 
          GOTO      VCOD9999                     * yes
.
.         Validate a hospital field (pathspaf)
.
VCOD1100  MOVE      TEMPCODE,KEY3
          CALL      RDPTHSP1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error 
          GOTO      VCOD9999                     * yes
.
.         Validate a doctor field (patdo1af)
.
VCOD1200  MOVE      TEMPCODE,KEY6
          CALL      RDDOCT1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error 
          GOTO      VCOD9999                     * yes
.
.         Validate a referring practice field (pmshcgaf)
.
VCOD1300  MOVE      TEMPCODE,KEY10
          PACK      KEY12,KEY10,SP1,ONE
          CALL      RDPMHCG1                     * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error 
          GOTO      VCOD9999                     * yes
.
VCOD9100  MOVE      "Invalid coded field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error
.
          MOVE      ONE,ERORFLAG                 * set code error flag
.
VCOD9999  RETURN
+
.*****************************************************************************
.*                              PERR0000           Called by: UPLD0000       *
.*                   Print an error detail line               CHKM0000       *
.* Requires: Valid read on PMI records (for name fields)      DERR0000       *
.*           ERORDESC - error description                     TERR0000       *
.*           CLNO - current page line count                   VURN0000       *
.* Returns:  CLNO - updated page line count                   NERR0000       *
.*                                                            VCOD0000       *
.*****************************************************************************
.
PERR0000  COMPARE   CLNO,SIXTY3                  * page full ?
          IF        @LESS
            CALL      LINE0000                   * yes - print bottom line
            CALL      HEAD0000                   * print header
          ENDIF
.
.         MATCH     "0",WAITTYPE                 * standard w/l entry record ?
.         GOTO      PERR1000 IF NOT EQUAL        * no
.
          MOVE      PSNAME,PACSNAME              * format patient name
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,DIM44
.
PERR1000  PRINT     *1,PIPE,*3,RECCOUNT,*12,PIPE,*15,WAITTYPE,*19,PIPE:
                    *21,WAITURNO,*30,PIPE,*32,DIM44,*71,PIPE:
                    *73,ERORDESC,*132,PIPE
          ADD       ONE,CLNO                     * increment page line count
.
PERR9999  RETURN
+
.*****************************************************************************
.*                              VURN0000           Called by: UPLD0000       *
.*                        Validate U/R Number                                *
.* Requires: WAITURNO - U/R number (right justified)                         *
.* Returns:  Valid read on PMI data                                          *
.*           EXIT  0 = PMI record found - ok to continue                     *
.*                 1 = PMI record not found - ignore record                  *
.*          UNKCOUNT - updated count of unknown U/R numbers                  *
.*          WMURNO - U/R number right justified (for normal W/L records)     *
.*          WTSUURNO - U/R number right justified (for suspension records)   *
.*****************************************************************************
.
VURN0000  MATCH     SP8,WAITURNO                 * blank U/R ?
          IF        @EQUAL
            MOVE      "U/R missing ",ERORDESC    * yes
            GOTO      VURN9150
          ENDIF
.
          MOVE      WAITURNO,KEY8
          CALL      RDMAST1                      * U/R on file ?
          BRANCH    OVRCD,VURN9100               * no - error
.
          COMPARE   ONE,PSTAT                    * merged U/R ?
          GOTO      VURN1000 IF EQUAL            * yes
.
          COMPARE   ONE,PCEASE
          IF        @EQUAL
            MOVE      "Patient deceased ",ERORDESC
            GOTO      VURN9150
          ENDIF
.
          MOVE      PURNO,KEY8
          CALL      RDPMPX21                     * PMI Extension rec. on file ?
          BRANCH    OVRCD,VURN9100               * no - error
.
          GOTO      VURN9000
.
.         We have a merged U/R record, so get the new U/R
.
VURN1000  MATCH     PPSNAME,SP20                 * blank previous name field ?
          GOTO      VURN9100 IF EQUAL            * yes - error
.
          MOVE      PPSNAME,WAITURNO             * no - load new U/R
          GOTO      VURN0000                     * get new pmi record
.
VURN9000  MOVE      WAITURNO,WMURNO              * load U/R number
          MOVE      WAITURNO,WTSUURNO
.
          MOVE      ZERO,EXIT
          GOTO      VURN9999
.
VURN9100  MOVE      "PMI Record not found ",ERORDESC
VURN9150  CALL      PERR0000                     * print error line
          ADD       ONE,UNKCOUNT                 * increment unknown U/R count
          MOVE      ONE,EXIT
.
VURN9999  RETURN
+
.*****************************************************************************
.*                              CVIS0000           Called by: UPLD0000       *
.*        Check if an alternate visit number record already exists on        *
.*        ibaalvaf.                                                          *
.* Requires: WAITAVIS - Alternate Visit Number (left justified)              *
.* Returns:  EXIT  0 = No errors found                                       *
.*                 1 = Errors found                                          *
.*****************************************************************************
.
CVIS0000  BRANCH    TYPEFORM,CVIS9999:           * suspension record
                             CVIS9999:           * acc record
                             CVIS9999            * history record
.
          MATCH     SP20,WAITAVIS                * blank alternate visit no. ?
          GOTO      CVIS9000 IF EQUAL            * yes - finished
.
          PACK      KEY28,WAITAVIS,SP30
          CALL      RSIBALV2                     * position on alt. visit no.
          CALL      RKIBALV2                     * read next record
          BRANCH    OVRCD,CVIS9000               * eof
.
          MATCH     WAITAVIS,IBAVAVIS            * same alt. visit no. ?
          GOTO      CVIS9000 IF NOT EQUAL        * yes
.
          MOVE      "Alternate visit id already exists in ibaalvaf",ERORDESC
          CALL      PERR0000                     * print error line
          ADD       ONE,DUPCOUNT                 * increment dupl. record count
          MOVE      ONE,EXIT
          GOTO      CVIS9999
.
CVIS9000  MOVE      ZERO,EXIT
.
CVIS9999  RETURN
+
.*****************************************************************************
.*                              AVIS0000           Called by: UPLD0000       *
.*        Check if we need to create an alternate visit number record        *
.*        in ibaalvaf.                                                       *
.* Requires: WAITAVIS - Alternate Visit Number (left justified)              *
.*           WMBOOK   - webPAS Visit Number (right justified)                *
.*****************************************************************************
.
AVIS0000  MOVE      SP20,IBAVAVIS
.
          MATCH     SP20,WAITAVIS                * blank alternate visit no. ?
          GOTO      AVIS9999 IF EQUAL            * yes - finished
.
          MOVE      WMBOOK,KEY8
          CALL      RAIBALV1                     * webPAS visit already on file?
          IF        OVRCD = 0
            MOVE      "webPAS visit no. already exists on ibaalvaf",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ELSE
            MOVE      WMBOOK,IBAVVISN            * load field data
            MOVE      WAITAVIS,IBAVAVIS
            MOVE      SP20,IBAVSPAR              * CAR 275794
            CALL      WRIBALV1                   * write alt. visit no. record
          ENDIF
.
AVIS9999  RETURN
+
.*****************************************************************************
.*                              GUNI0000           Called by: UPLD0000       *
.*      Get unique identifier add one and write it back to control file.     *
.*****************************************************************************
.
GUNI0000  MATCH     SP9,WAITECNT                 * unique id populated ?
          GOTO      GUNI9999 IF NOT EQUAL        * no
.
          MOVE      "111",PRXCODE                * yes - generate unique id
          CALL      GETSLK00
          READ      CONTROLF,HUND11;*1,WTCNECNT
          MOVE      WTCNECNT,WTWMECNT
          ADD       ONE,WTCNECNT
          WRITAB    CONTROLF,HUND11;*1,WTCNECNT
          CALL      RELSLK00
.
GUNI9999  RETURN
+
.*****************************************************************************
.*                               GCNT0000          Called by: UPLD0000       *
.*                 Get the next procedure count                              *
.* Requires: valid read on W/L entry upload record                           *
.* Returns:  NXTCOUNT - the next count value for this patient/procedure      *
.*****************************************************************************
.
GCNT0000  PACK      KEY19,WAITURNO,WAITCODE,TILDA20
          CALL      RDSTREA1                     * position after U/R/procedure
          CALL      RDPTREA1                     * read previous record
          BRANCH    OVRCD,GCNT9000               * no - ok to write records
.
          MATCH     WMURNO,WAITURNO              * same U/R still ?
          GOTO      GCNT9000 IF NOT EQUAL        * no
.
          MATCH     WMCODE,WAITCODE              * same procedure code still ?
          GOTO      GCNT9000 IF NOT EQUAL        * no
.
.         This patient has had this procedure added to the W/L before,
.         so increment the count.
.
          ASSIGN    (WMCNT+1),NXTCOUNT           * increment procedure count
          GOTO      GCNT9999
.
.         This patient has not had the procedure added to the W/L before,
.         so as this is the first time, set the count to "1".
.
GCNT9000  MOVE      ONE,NXTCOUNT
.
GCNT9999  RETURN
+
.*****************************************************************************
.*                               WCAT0000          Called by: UPLD0000       *
.*                 Write a category change record to watcataf                *
.* Requires: valid load of wattr1af variables                                *
.*****************************************************************************
.
WCAT0000  MOVE      WMDATE1,WTCAEDAT             * Effective Date (ccyymmdd)
          MOVE      WMURNO,WTCAURNO              * U/R Number (patma1af)
          MOVE      WMCODE,WTCAPROC              * Procedure Code ( watproaf)
          MOVE      WMCNT,WTCAPCNT               * Procedure Count
          MOVE      "TP",WTCACATF                * Change Category
          MOVE      SP3,WTCACODF                 * Change Code From
          MOVE      WMPTY,WTCACODT               * Change Code To
          MOVE      CURRDATE,WTCAADTE            * Alteration Date (ccyymmdd)
          MOVE      CTIMEIS,WTCAATIM             * Alteration Time (hh:mm)
          MOVE      "CONVWAIT  ",WTCAWEBI        * WEB User ID (websecaf)
          MOVE      SP1,WTCASPAR                 * Spare Variable
.
          PACK      KEY29,WTCAEDAT,WTCACATF,WTCAURNO,WTCAPROC,WTCAPCNT
          CALL      RAWTCAT1
          IF        OVRCD = 1
            CALL      WRWTCAT1
          ELSE
            MOVE      "Category change record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ENDIF
.
WCAT9999  RETURN
+
.*****************************************************************************
.*                               WBOK0000          Called by: UPLD0000       *
.*    Write the bokrc1af and bokrx1af records for scheduled bookings only    *
.* Requires: valid load of wattr1af & wattx1af variables                     *
.*****************************************************************************
.
WBOK0000  BRANCH    WMSTAT,WBOK9999              * unscheduled - finished
.
.         Load bokrc1af variables
.
          MOVE      WMBOOK,BKREBOOK              * booking number
          MOVE      WMURNO,BKREURNO              * U/R number
          MOVE      PSNAME,BKRESNAM              * surname
          MOVE      WMDOCTOR,BKREADOC            * attending doctor
          MOVE      WMDATE3,BKREEDAT             * expected due date (ccyymmdd)
          MOVE      WTTXPATM,BKREATIM
          MOVE      WTTXBOTY,BKRETYPE            * booking type (Cat BK)
          MOVE      WTTXPREF,BKREACCM            * pref. accomm. (Cat BP)
          MOVE      WMCODE,BKREPROC              * procedure code
          MOVE      WMCNT,BKRECNT                * procedure count
          MOVE      WTTXWARD,BKREWARD            * expected ward
          MOVE      WTWMCLSS,BKRECLSS            * admission class (Cat P)
          MOVE      WTTXCTYP,BKRECLMT            * claim type (Cat CL)
          MOVE      WTWMRFGP,BKRERFGP            * referring gp
          MOVE      WTWMGPPC,BKREGPPC            * gp practice
          MOVE      WTWMEATY,BKREEATY            * elective adm. type (Cat CC)
          MOVE      WMSTAY,BKREELOS              * expected LOS
          MOVE      ZERO,BKRESTAT                * booking status
          MOVE      CURRDATE,BKREBKDT            * date booking was made
          MOVE      WAITADAT,BKREADAT
.
.         Write bokrc1af record
.
          MOVE      BKREBOOK,KEY8
          CALL      RABKREC1
          IF        OVRCD = 1
            CALL      WRBKREC1
          ELSE
            MOVE      "Booking record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ENDIF
.
.         Load bokrx1af variables
.
          MOVE      WMBOOK,BKRXBNUM              * booking number
          MOVE      WMDESC,BKRXUFF1              * procedure descriptions 
          MOVE      WMDESC2,BKRXUFF2
          MOVE      WMDESC3,BKRXUFF3
          MOVE      WTWMSRCR,BKRXASRC            * source of referral (Cat S)
          MOVE      "CONVWAIT  ",BKRXWEBC        * user who created record
          MOVE      CURRDATE,BKRXCRDT            * date record created
          MOVE      CTIMEIS,BKRXCRTM             * time record created
          MOVE      WTTXADMW,BKRXADWD
.
          MOVE      WAITEABR,BKRXEABR            * early booking reason
          IF        CATCDFLG = 1
            PACK      KEY5,CATB1,WAITEABR
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,BKRXEABR        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      WAITAUBY,BKRXAUBY            * authorised by
          IF        CATCDFLG = 1
            PACK      KEY5,CATB2,WAITAUBY
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,BKRXAUBY        * yes - load mapped code
            ENDIF
          ENDIF
.
.         Write bokrx1af record
.
          MOVE      BKRXBNUM,KEY8
          CALL      RABKRX11
          IF        OVRCD = 1
            CALL      WRBKRX11
          ELSE
            MOVE      "Booking extension record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ENDIF
.
WBOK9999  RETURN
+
.*****************************************************************************
.*                               WHIS0000          Called by: UPLD0000       *
.*               Write a W/L history record (wathisaf)                       *
.* Requires: valid load of wattr1af & wattx1af variables                     *
.*****************************************************************************
.
.         First, write a record for an unscheduled w/l entry
.
WHIS0000  BRANCH    VCHKFLAG,WHIS9999            * error checking only
.
          MOVE      WMDATE1,EFFECDAT
          CALL      GHIS0000                     * get last history record
.
          CALL      CLWATHIS                     * clear database variables
.
          MOVE      WMURNO,WTHIURNO              * U/R number
          MOVE      WMCODE,WTHIPROC              * procedure code
          MOVE      WMCNT,WTHIPCNT               * procedure count
          MOVE      WMDATE1,WTHIEDAT             * effective from date
          MOVE      HISCOUNT,WTHIUCNT            * unique count
          MOVE      WMPTY,WTHIPRIO               * priority
          MOVE      ANSY,WTHIRECS                * record sent
          MOVE      ANSA,WTHIRTYP                * record type (Add)
          MOVE      "04",WTHIBSCD                * booking status code
          MOVE      CTIMEIS,WTHIETIM             * effective time
          MOVE      WMBOOK,WTHIBOOK              * booking number
          MOVE      WMDOCTOR,WTHIDOCT            * attending doctor
          MOVE      WMUNIT,WTHIUNIT              * unit/clinic
          MOVE      WTTXPLST,WTHIPLST            * list status
          MOVE      ONE,WTHISTAT                 * procedure status
          MOVE      WMDATE1,WTHIDAT1             * date on list
.
.         Write wathisaf record
.
          PACK      KEY31,WTHIURNO,WTHIPROC,WTHIPCNT,WTHIUCNT
          CALL      RAWTHIS1
          IF        OVRCD = 1
            CALL      WRWTHIS1
          ELSE
            MOVE      "Unscheduled History record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ENDIF
.
          BRANCH    WMSTAT,WHIS9999              * unscheduled record
.
.         This is a scheduled w/l record, so write a second history record
.         for the booking.  Use the default values from the previous record
.         changing some fields and populating additional fields.
.
          ADD       ONE,HISCOUNT                 * increment history counter
          MOVE      HISCOUNT,WTHIUCNT            * unique count
          MOVE      WMDATE3,WTHIDAT3             * scheduled adm. date
          MOVE      "01",WTHIBSCD                * booking status code
          MOVE      WMDATE1,WTHIDBFT             * date booked for treatment
          MOVE      CTIMEIS,WTHIBMDT             * date booking made
          MOVE      CTIMEIS,WTHIETIM             * effective time
          MOVE      TWO,WTHISTAT                 * procedure status
.
.         Write wathisaf record
.
          PACK      KEY31,WTHIURNO,WTHIPROC,WTHIPCNT,WTHIUCNT
          CALL      RAWTHIS1
          IF        OVRCD = 1
            CALL      WRWTHIS1
          ELSE
            MOVE      "Scheduled History record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ENDIF
.
WHIS9999  RETURN
+
.*****************************************************************************
.*                               GHIS0000          Called by: UPLD0000       *
.*                 Get the next history record count                         *
.* Requires: valid read on W/L entry upload record                           *
.*           EFFECDAT - Effective Date                                       *
.* Returns:  HISCOUNT - the next count value for this patient/procedure/date *
.* Note:     The unique count for wathisaf records is date based, so the     *
.*           counter is reset to 1 for the first record for a day and        *
.*           incremented for each subsequent record for that same day.       *
.*****************************************************************************
.
GHIS0000  PACK      KEY31,WMURNO,WMCODE,WMCNT,EFFECDAT,TILDA20
          CALL      RSWTHIS1                     * position after U/R/procedure
          CALL      RPWTHIS1                     * read previous record
          BRANCH    OVRCD,GHIS9000               * no - ok to write records
.
          MATCH     WMURNO,WTHIURNO              * same U/R still ?
          GOTO      GHIS9000 IF NOT EQUAL        * no
.
          MATCH     WMCODE,WTHIPROC              * same procedure code still ?
          GOTO      GHIS9000 IF NOT EQUAL        * no
.
          COMPARE   WMCNT,WTHIPCNT               * same procedure count still ?
          GOTO      GHIS9000 IF NOT EQUAL        * no
.
          MATCH     EFFECDAT,WTHIEDAT            * same date still ?
          GOTO      GHIS9000 IF NOT EQUAL        * no
.
.         A previous W/L history record has been found for this
.         procedure/count/date, so increment the count.
.
          ASSIGN    (WTHIUCNT+1),HISCOUNT        * increment history count
          GOTO      GHIS9999
.
.         This patient has not had the procedure added to the W/L before
.         on this day, so as this is the first time, set the count to "1".
.
GHIS9000  MOVE      ONE,HISCOUNT
.
GHIS9999  RETURN
+
.*****************************************************************************
.*                              PCOM0000           Called by: UPLD0000       *
.*                Process any record related comments                        *
.* Requires: WAITCOMM - comments field                                       *
.*           TYPEFORM - Record Type                                          *
.*****************************************************************************
.
PCOM0000  STRIP     WAITCOMM                     * remove trailing spaces
          MOVELPTR  WAITCOMM,COMMTLEN            * get comment field length
.
          COMPARE   ZERO,COMMTLEN                * any comments ?
          GOTO      PCOM9999 IF EQUAL            * no - finished
.
          COMPARE   THREE,TYPEFORM               * suspension record ?
          GOTO      PCOM0100 IF EQUAL            * yes - always use watmtxaf
.
          BRANCH    PTCNHDPS,PCOM5000            * using watmesaf
.
.         We are using watmhdaf/watmtxaf to store comments
.         First we need to write a comment header record in watmhdaf
.
PCOM0100  MOVE      WMURNO,WTMHURNO
          MOVE      WMCODE,WTMHPROC
          MOVE      WMCNT,WTMHPCNT
          MOVE      "001",WTMHTYPE
          ADD       ONE,NOTCOUNT
          MOVE      NOTCOUNT,WTMHNOTE
          MOVE      CURRDATE,WTMHDATE
          MOVE      CTIMEIS,WTMHTIME
          MOVE      "CONVWAIT",WTMHUSER
          MOVE      SP3,WTMHOCCG
          MOVE      ZERO,WTMHDELT
          MOVE      SP8,WTMHDDAT
          MOVE      SP8,WTMHDTIM
          MOVE      SP10,WTMHDUSE
          MOVE      SP3,WTMHDOCC
          MOVE      SP70,WTMHSPAR
.
          PACK      KEY28,WTMHURNO,WTMHPROC,WTMHPCNT,WTMHTYPE,WTMHNOTE
          CALL      RAWTMHD1                     * record on file already ?
          IF        OVRCD = 1 & VCHKFLAG = 0
            CALL      WRWTMHD1                   * no - write new record
          ELSE
            IF        OVRCD = 0
              MOVE      "Error writing comment header record ",ERORDESC
              CALL      PERR0000                 * print error line
              ADD       ONE,COMCOUNT             * increment comment error count
              GOTO      PCOM9999
            ENDIF
          ENDIF
.
          MOVE      ZERO,LINENUMB                * yes - initialise line number
.
PCOM0500  MOVE      WAITCOMM,DIM100
          PACK      DIM100,DIM100,SP70,SP30      * load comment line
.
          MOVE      WMURNO,WTMTURNO              * load record variables
          MOVE      WMCODE,WTMTPROC
          MOVE      WMCNT,WTMTPCNT
          MOVE      "001",WTMTTYPE
          MOVE      WTMHNOTE,WTMTNOTE
          ADD       ONE,LINENUMB                 * increment line number
          MOVE      LINENUMB,WTMTUNIQ
          MOVE      DIM100,WTMTCMNT
          MOVE      SP70,WTMTSPAR
.
          PACK      KEY31,WTMTURNO,WTMTPROC,WTMTPCNT,WTMTTYPE,WTMTNOTE,WTMTUNIQ
          CALL      RAWTMTX1                     * record on file already ?
          IF        OVRCD = 1 & VCHKFLAG = 0
            CALL      WRWTMTX1                   * no - write new record
          ELSE
            IF        OVRCD = 0
              MOVE      "Error writing comment detail records ",ERORDESC
              CALL      PERR0000                 * print error line
              ADD       ONE,COMCOUNT             * increment comment error count
              GOTO      PCOM9999
            ENDIF
          ENDIF
.
          COMPARE   COMMTLEN,HUNDRED             * any comments remaining ?
          GOTO      PCOM9999 IF NOT LESS         * no - finished
.
.         There is at least one more line of comments to load
.
          BUMP      WAITCOMM,100                 * move forward 100 characters
          SUB       HUNDRED,COMMTLEN             * reduce string length by 100
          GOTO      PCOM0500                     * process next line
.
.         We are using watmesaf to store comments
.
PCOM5000  MOVE      ZERO,LINENUMA                * initialise line number
.
PCOM5500  MOVE      WAITCOMM,DIM70
          PACK      DIM70,DIM70,SP70             * load comment line
.
          MOVE      WMURNO,WAURNO                * load record variables
          MOVE      WMCODE,WAPROC
          MOVE      WMCNT,WACNT
          ADD       ONE,LINENUMA                 * increment line number
          MOVE      LINENUMA,WACNT2
          MOVE      DIM70,WATEXT
          MOVE      SP70,WASPARE
.
          PACK      KEY21,WAURNO,WAPROC,WACNT,WACNT2
          CALL      RDAMESA1                     * record on file already ?
          IF        OVRCD = 1 & VCHKFLAG = 0
            CALL      WRMESA1                    * no - write new record
          ELSE
            IF        OVRCD = 0
              MOVE      "Error writing comment detail records ",ERORDESC
              CALL      PERR0000                 * print error line
              ADD       ONE,COMCOUNT             * increment comment error count
              GOTO      PCOM9999
            ENDIF
          ENDIF
.
          COMPARE   COMMTLEN,SEVENTY             * any comments remaining ?
          GOTO      PCOM9999 IF NOT LESS         * no - finished
.
.         There is at least one more line of comments to load
.
          BUMP      WAITCOMM,70                  * move forward 70 characters
          SUB       SEVENTY,COMMTLEN             * reduce string length by 70
          GOTO      PCOM5500                     * process next line
.
PCOM9999  RETURN
+
.*****************************************************************************
.*                               WATR0000          Called by: UPLD0000       *
.*                    Write the patatraf records                             *
.*****************************************************************************
.
WATR0000  PACK      DIM17,WAITVAL1,WAITVAL2,WAITVAL3,SP70
          MATCH     SP70,DIM17
          GOTO      WATR9999 IF EQUAL
.
.         Load patatraf variables
.
          MOVE      WMURNO,PTARURNO              * U/R number
          MOVE      WMBOOK,PTARVISN              * visit number
          MOVE      WTTXCDTE,PTARDATE            * current date
          MOVE      WTTXCTIM,PTARTIME            * current time
          MOVE      "001",PTARTYPE               * type pf attribute
.
          MATCH     SP70,WAITVAL1
          IF        !@EQUAL
            MOVE      ZERO,FORM6
            MOVE      WAITVAL1,FORM6
            MOVE      FORM6,PTARVAL2               * value 1
            SQUEEZE   PTARVAL2
          ENDIF
          PACK      PTARVAL2,PTARVAL2,SP70
.
          MATCH     SP70,WAITVAL2
          IF        !@EQUAL
            MOVE      ZERO,FORM6
            MOVE      WAITVAL2,FORM6
            MOVE      FORM6,PTARVAL1               * value 2
            SQUEEZE   PTARVAL1
          ENDIF
          PACK      PTARVAL1,PTARVAL1,SP70
.
          MATCH     SP70,WAITVAL3
          IF        !@EQUAL
            MOVE      ZERO,FORM5 
            MOVE      WAITVAL3,FORM5
            MOVE      FORM5,PTARVAL3               * value 3
            SQUEEZE   PTARVAL3
          ENDIF
          PACK      PTARVAL3,PTARVAL3,SP70
.
          MOVE      SP70,PTARVAL4                * value 4
          MOVE      SP70,PTARCOD1                * coded field 1
          MOVE      SP70,PTARCOD2                * coded field 2
          MOVE      SP70,PTARCOD3                * coded field 3
          MOVE      SP70,PTARCOD4                * coded field 4
          PACK      PTARTXT1,PRGID,SP70          * text 1
          PACK      PTARTXT2,SP70,SP70           * text 2
          PACK      PTARTXT3,SP70,SP70           * text 3
          PACK      PTARTXT4,SP70,SP70           * text 4
          MOVE      "0",PTARDELR                 * deleted rec
          MOVE      "CONVWAIT  ",PTARCUSR        * user who created record
          MOVE      WTTXCDTE,PTARCDTE            * date record created
          MOVE      WTTXCTIM,PTARCTME            * time record created
          MOVE      SP70,PTARUUSR                * user who updated record
          MOVE      SP70,PTARUDTE                * date record updated
          MOVE      SP70,PTARUTME                * time record updated
          PACK      PTARSPAR,SP70,SP70           * spare
.
.         Write patatraf record
.
          PACK      KEY35,PTARURNO,PTARDATE,PTARTIME,PTARVISN,SP70
          CALL      RAPTATR1
          IF        OVRCD = 1
            CALL      WRPTATR1
          ELSE
            MOVE      "Patient attributes record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ENDIF
.
WATR9999  RETURN
+
.*****************************************************************************
.*                              WINT0000       Called by: UPLD0000           *
.*              Write interpreter visit details                              *
.* Requires: valid bokrc1af record data                                      *
.*****************************************************************************
.
WINT0000  BRANCH    WMSTAT,WINT9999              * unscheduled record
.
.         Scheduled record, so check if interpreter required
          
          MATCH     "1",PMPXINTR                 * interpreter req'd flag set ?
          GOTO      WINT9999 IF NOT EQUAL        * no - finished
.
          CALL      CLVISINT
          MOVE      BKREBOOK,VSINVISN
          MOVE      BKREEDAT,VSINDATE
          MOVE      BKREATIM,VSINTIME
          MOVE      THREE,VSINTYPE
          MOVE      SP70,VSINSUBK
          MOVE      "CONVWAIT  ",VSINWUID
.
          PACK      KEY8,BKREBOOK,SP70
          CALL      RAVSINT1
          IF        OVRCD = 0
            MOVE      "visintaf record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            GOTO      WINT9999
          ELSE
            CALL      WRVSINT1
          ENDIF
.
          PACK      VSIACDAT,CCC,CYY,CMM,CDD
          REP       " 0",VSIACDAT
          MOVE      CTIMEIS,VSIACTIM
          MOVE      ANSA,VSIARTYP
          MOVE      VSINVISN,VSIAVISN
          MOVE      VSINDATE,VSIADATE
          MOVE      VSINTIME,VSIATIME
          MOVE      VSINTYPE,VSIATYPE
          MOVE      VSINSUBK,VSIASUBK
          MOVE      VSINWUID,VSIAWUID
          MOVE      PMPXLNG1,VSIALNG1
          MOVE      PMPXLNG2,VSIALNG2
          MOVE      PMPXLNG3,VSIALNG3
          MOVE      VSINNOTF,VSIANOTF
          MOVE      VSINCONF,VSIACONF
.
          PACK      KEY25,VSIACDAT,VSIACTIM,VSIARTYP,VSIAVISN
          CALL      RAVSIAU1
          IF        OVRCD = 0
            MOVE      "visiauaf record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
          ELSE
            CALL      WRVSIAU1
          ENDIF
.
WINT9999  RETURN
+
.*****************************************************************************
.*                              WDIA0000           Called by: UPLD0000       *
.*                    Write a booking diagnosis record                       *
.*****************************************************************************
.
WDIA0000  MOVE      WMBOOK,BKDIBOOK
          MOVE      SP9,BKDICODE
          PACK      BKDIDES1,WMDESC,SP70
          MOVE      WMREASON,BKDIDES2
          PACK      BKDICOMM,SP70,SP70
          MOVE      "         1",BKDIUNIQ
          PACK      BKDIDES3,SP70,SP70
          PACK      BKDIDES4,SP70,SP70
          PACK      BKDIDES5,SP70,SP70
          PACK      BKDIDES6,SP70,SP70
          MOVE      SP70,BKDISPAR
.
          PACK      KEY18,BKDIBOOK,BKDIUNIQ
          CALL      RABKDIA1
          IF        OVRCD = 1
            CALL      WRBKDIA1
          ENDIF
.
WDIA9999  RETURN
+
.*****************************************************************************
.*        Temp File I/O Routines                                             *
.*****************************************************************************
.
.RDTEMP1  Category-Codes (patcodes)  --
.RDTEMP2  Insurer (patin1af)          |  These routines are in ACCMAPIO.INC
.RDTEMP3  Employer (pateoraf)         |
.RDTEMP4  HCP Code (pathspaf)         |
.RDTEMP5  Title (pmstleaf)            |
.RDTEMP6  Relation (pmsrelaf)        __
.
.         Disaster (dismasaf)
.
RDTEMP7   MOVE      ZERO,OVRCD
          RESET     KEY9
          READ      TEMP7,KEY9;OLDDISTR,NEWDISTR
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Team (pmstemaf)
.
RDTEMP8   MOVE      ZERO,OVRCD
          RESET     KEY5
          READ      TEMP8,KEY5;OLDTEAMC,NEWTEAMC
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Doctor Code (patdo1af)
.
RDTEMP9   MOVE      ZERO,OVRCD
          RESET     KEY6
          READ      TEMP9,KEY6;OLDDCODE,NEWDCODE
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Hospital (pathspaf)
.
RDTEMP10  MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP10,KEY3;OLDHOSPL,NEWHOSPL
          GOTO      OVERCOND IF OVER
          RETURN
.
.         GP Practice (pmshcgaf)
.
RDTEMP11  MOVE      ZERO,OVRCD
          RESET     KEY10
          READ      TEMP11,KEY10;OLDPRAC,NEWPRAC
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Ward/Bed (patwr1af)
.
RDTEMP12  MOVE      ZERO,OVRCD
          RESET     KEY6
          READ      TEMP12,KEY6;OLDWARD,OLDBED,NEWWARD,NEWBED
          GOTO      OVERCOND IF OVER
          RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       CLBOKRC1
          INC       CLBOKRX1
          INC       CLPATMAS
          INC       CLPATATR
          INC       CLPATWC1
          INC       CLPMSWX1
          INC       CLVISINT
          INC       CLWATHIS
          INC       CLWATTR1
          INC       CLWATTX1
          INC       GENANVIS
          INC       KEYINCOD
          INC       GENBOKNO
          INC       PATDSCOD
          INC       UPACCDAT
.
          INC       ACCCMTIO/INC
          INC       ACCMAPIO/INC
          INC       BOKDIAIO/INC
          INC       BOKRC1IO/INC
          INC       BOKRX1IO/INC
          INC       DISMASIO/INC
          INC       IBAALVIO/INC
          INC       PATATRIO/INC
          INC       PATCODIO/INC
          INC       PATDO1IO/INC
          INC       PATEORIO/INC
          INC       PATHSPIO/INC
          INC       PATIN1IO/INC
          INC       PATMA1IO/INC
          INC       PATVISIO/INC
          INC       PATWC1IO/INC
          INC       PATWR1IO/INC
          INC       PMSHCGIO/INC
          INC       PMSHCLIO/INC
          INC       PMSHCPIO/INC
          INC       PMSPX2IO/INC
          INC       PMSRELIO/INC
          INC       PMSTEMIO/INC
          INC       PMSTLEIO/INC
          INC       PMSWX1IO/INC
          INC       VISIAUIO/INC
          INC       VISINTIO/INC
          INC       WATCATIO/INC
          INC       WATHISIO/INC
          INC       WATMESIO/INC
          INC       WATMHDIO/INC
          INC       WATMTXIO/INC
          INC       WATPROIO/INC
          INC       WATSUSIO/INC
          INC       WATTR1IO/INC
          INC       WATTX1IO/INC
