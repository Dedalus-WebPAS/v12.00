.******************************************************************************
.* System    :   CASH RECEIPTING                                              *
.* Program   :   IBARCP41                                                     *
.* Desc      :   Input Bulk Billing                                           *
.******************************************************************************
.* Date      :   30/8/88                                                      *
.* Author    :   Eric Phan                                                    *
.* Comments  :                                                                *
.* Mods      :                                                                *
.*        V10.11.01 22/11/2017  Ania P         TSK 0261630                    *
.*                  Moved TFILNAME to CFNAMEDP in INIT0000                    *
.*        V10.04.01 15/04/2014  J.Tan          CAR 261630                     *
.*                  Removed port number from temp file name                   *
.*        V10.00.01 23/08/2010  Steve Armstrong   CAR 228847                  *
.*                  Recompiled for changes to PATIN1IO                        *
.******************************************************************************
.*        V9.03.01  03/03/2004  Lina Vo       CAR 47921                       *
.*                  Removed use of PRIDBTFD & IO.                             *
.******************************************************************************
.*        V5.08.04  25/10/2000  Dean Cramer   SRF 6710                        *
.*                  Recomplied for PATFNDDS                                   *
.*                  Changed for health fund table code size increase to       *
.*                  8 characters                                              *
.*        V5.08.03  18/08/2000  Jill Habasque                                 *
.*                  Fixed date display                                        *
.*        V5.08.02  16/08/2000  Caleb Sharman                                 *
.*                  Changed Health Fund variables to be 8 chars               *
.*        V5.08.01  06/06/2000  Tonii                                         *
.*                  Changed from KEY10 to KEY14 for the health fund file      *
.******************************************************************************
.*        V5.07.02  09/06/1999  Greg Horvat                                   *
.*                  Recompiled for PRIINVIO - Fixed problem with direct read  *
.*        V5.07.01  15/04/1999  Steve Armstrong                               *
.*                  Fixed tempfile key for Oracle                             *
.*       V5.07.B01  29/10/1998  Davin                                         *
.*                  Mods for 507                                              *
.*        V5.05.01  19/04/1998  Steve Armstrong   STH                         *
.*                  Recompiled for KYRCPHOS                                   *
.******************************************************************************
.*               V5.01.00  20/01/92  DIG                                      *
.*                         Ported from release 5                              *
.*               V5.01.01  13/05/94  ROD                                      *
.*                         Access files across databases                      *
.*               V5.01.02  07/07/94  ROD                                      *
.*                         allow for 93 & 97 as patient registers             *
.*        V5.02.01  21/04/1995  Greg Horvat      SRF 135896                   *
.*                  Fixed '?' when modifying the claim number & standardized  *
.*                  keyins                                                    *
.*        V5.02.02  15/05/1995  Greg Horvat      SRF 135896  (rebound)        *
.*                  Fixed '?' when inputing the cashier                       *
.*        V5.04.01  15/07/1997  Go Blues                                      *
.*                  Removed PPP shit                                          *
.*                                                                            *
.******************************************************************************
.
          INC       STD001FD
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
          INC       PATHOSFD/INC
          INC       PATDPTHV/INC
          INC       RCPCIDFD/INC
          INC       RCPREGFD/INC
          INC       RCPCONFD/INC
          INC       RCPBULFD/INC
          INC       PATFN1FD/INC
          INC       PATIN1FD/INC
          INC       PATINVFD/INC
          INC       PATGO1FD/INC
          INC       PATMA1FD/INC
          INC       PATVISFD/INC
          INC       PRIINVFD/INC
.
AFUNDH    DIM       6         * For PATDSFND.PBL
CFEETYP   FORM      1
CMDLINE   DIM       50        * For EXECUTEs
.
DHBBDISC  DIM       11
DHBBDSC0  INIT      " % Discount"
DHBBDSC1  INIT      "   Discount"
.
DIM4      DIM       4         * For MMAXPAGE calculation
DIM5      DIM       5         * Unique identifier for temp file records
DIM6      DIM       6         * Entry for claim number
DIM10     DIM       10        * Register desc
DIM15     DIM       15        * Name from invoice
DIM11Z    DIM       11        * HF/Ins/Gov desc
DIM20     DIM       20        * Cashier id formatted name
DIM20Z    DIM       20        * HF/Ins/Gov name
DIM30     DIM       30        * Invoice name displayed at bottom of screen
FORM4B    FORM      3
FORM6     FORM      6
FORM0P4   FORM      0.4
FORM10P4  FORM      10.4
HOSPCNT   FORM      2
HOSPNAME  DIM       30
.
MCURPAGE  FORM      3         * Current screen page
MMAXPAGE  FORM      3         * Maximum no. of screen pages
MMAXTRAN  FORM      4         * Maximum no. of transactions
MODE      DIM       1
MRCNNOHS  FORM      2
MREQPAGE  FORM      3         * Required screen page
MSKIPASK  FORM      1
MUNIQUE   FORM      5
PHLEF     FORM      2
PHTOP     FORM      2
RCPCHG    FORM      1
RBPERDSC  FORM      3.2
RBOUTNDG  FORM      8.2
RCPTMP    DIM       8
RCPTMPXX  IFILE     SQL, FIXED=73, KEY="U1-5,6-23"
RCPTM2XX  IFILE     SQL, FIXED=73, KEY="U6-23"
.Name     Type    Length   Physical  Position
.DIM5     DIM       5         5         1         * Unique element in key
.RBTYPE   FORM      1         1         6         * Claim type
.RBCODE   DIM       6         6         7         * Code
.RBREG    DIM       3         3         13        * Register number
.RBINV    DIM       8         8         16        * Invoice number
.RBAMT    FORM      8.2       6         24        * Claimed amount
.RBPERDSC FORM      3.2       4         30        * Discount percentage
.RBDISC   FORM      8.2       6         34        * Discount amount
.RBOUTNDG FORM      8.2       6         40        * Outstanding amount of inv
.DIM10    DIM       10        10        46        * Desc for register
.DIM15    DIM       15        15        56        * Name from invoice
.RBHOSP   DIM       2         2         71        * Hospital
.End of Record                          73
.
SAVCVERT  FORM      2
VAMOUNT   FORM      8.2
VCLAIM    FORM      6
VDATE     DIM       8         * Original claim date
VDIM10    DIM       10
VDIM15    DIM       15
VDISCAMT  FORM      8.2
VINVOICE  DIM       8
VNETAMT   FORM      8.2
VKEY23    DIM       23
VPASSWD   DIM       8
VPERDISC  FORM      3.2
VREGISTR  DIM       3
VSTAT1    FORM      1         * Original claim status
VSTAT2    FORM      1         * Original transaction status
VSTATUS   DIM       7
XXDPATH   DIM       120
.
PRGNAM    INIT      "Input Bulk Billing"
PRGID     INIT      "IBARCP41"
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              MAINLINE                                  *
.*                            Controlling Logic                           *
.**************************************************************************
.
ML0000    CALL      INIT0000                 * Initialization
ML0100    CALL      OPTN0000                 * Get options
          BRANCH    EXIT,ML9999              * Exit
          BRANCH    OPTION,ML1000,ML2000     * 1=Input  2=Modify
.
.         Input mode
.
ML1000    MOVE      ZERO,VCLAIM              * Initialise claim no. for LOAD
          CALL      GETI0000                 * Get & display cashier id
          BRANCH    EXIT,ML0100              * Go back to options screen
          CALL      GETD1000                 * Get & verify HF details
          BRANCH    EXIT,ML1000              * Go back to keyin cashier id
          MOVE      ANSI,MODE
          GOTO      ML3000                   * Input items
.
.         Modify mode
.
ML2000    CALL      GETC0000                 * Get & display claim number
          BRANCH    EXIT,ML0100              * Go back to options screen
          MOVE      ANSC,MODE
.
ML3000    CALL      MODB0000                 * Modify records
          BRANCH    EXIT,ML0100              * Cancelled changes
.
.         Post records to bulk billing file
.
ML4000    BRANCH    OPTION,ML5000,ML6000     * 1=Input  2=Modify
.
ML5000    CALL      GENC0000                 * Generate new claim number
.
ML6000    CALL      POST0000                 * Post temp records into b.b. file
          GOTO      ML0100                   * Get next option
.
.         The End ...
.
ML9999    CALL      KILL0000                 * Remove temp file
          CHAIN     PGM                      * Chain back to menu
.
+
.**************************************************************************
.*                              INIT0000                                  *
.*                            Initialization                              *
.**************************************************************************
.
INIT0000  CALL      TFILENAM
          MOVE      TFILNAME,RCPTMP
          CALL      TFILENAM
          MOVE      TFILNAME,CFNAMEDP       * Must preceed CALL PATDPATH
.
          CALL      PATDPATH
          CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"      * Control file
          READ      CONTROLF,THIRTY6;*87,HSYS2,HSYS3,*150,HBBDISC
          READ      CONTROLF,SIXTY;*129,MRCNNOHS
.
          MOVE      DHBBDSC0,DHBBDISC
          LOAD      DHBBDISC,HBBDISC,DHBBDSC1
.
          DISPLAY   *P64:24,"pathospf";
          OPEN      PATHOSP1,"pathospf"      * Cashier ID file
          DISPLAY   *P64:24,"rcpcidaf";
          OPEN      RCPCIDA1,"rcpcidaf"      * Cashier ID file
          DISPLAY   *P64:24,"rcpregaf";
          OPEN      RCPREGA1,"rcpregaf"      * Register file
          DISPLAY   *P64:24,"rcpbulaf";
          OPEN      RCPBULA1,"rcpbulaf"      * Bulk billing file
.
          COMPARE   ONE,HSYS2                * Patient system used ?
          GOTO      INIT1000 IF NOT EQUAL    * No - don't open files
.
          DISPLAY   *P64:24,"patin1af";
          OPEN      PATIN1A1,"patin1af"       * Insurance file
          DISPLAY   *P64:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"
          DISPLAY   *P64:24,"patinvrf";
          OPEN      PATINVR1,"patinvrf"      * Invoice file
          DISPLAY   *P64:24,"patgo1af";
          OPEN      PATGO1A1,"patgo1af"       * Government file
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"      * PMI file
          DISPLAY   *P64:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"      * PMI file
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA1,"patvisaf"      * Visit file
.
INIT1000  COMPARE   ONE,HSYS3                * Private practice system used ?
          GOTO      INIT9999 IF NOT EQUAL    * No - don't open files
.
          DISPLAY   *P64:24,"priinvof";
          OPEN      PRIINVO1,"priinvof"      * Invoice file
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.**************************************************************************
.*                             GETI0000                                   *
.*                        Input Cashier Identification                    *
.**************************************************************************
.
GETI0000  MOVE      ONE,EXIT                 * Set exit flag
          MOVE      "4",EVERT
GETI0500  KEYIN     *P1:EVERT,*EF,"Cashier  : ______":
                    *P12:EVERT,*V2LON,RCPCASH:
                    *P12:EVERT,*DV,RCPCASH;
.
          ENDSET    RCPCASH
          APPEND    SP6,RCPCASH
          RESET     RCPCASH
.
          MATCH     SP6,RCPCASH              * <ENTER> hit ?
          GOTO      GETI9999 IF EQUAL        * Yes - exit
.
          CMATCH    QUEST,RCPCASH            * "?" option ?
          GOTO      GETI1000 IF NOT EQUAL    * No - check code
.
.         ? option
.
          MOVE      "24",EVERT
          CALL      RCPCIDDS                 * Display all cashier ids
          GOTO      GETI0500                 * Reenter cashier id
.
GETI1000  PACK      KEY6,RCPCASH
          CALL      RDCIDA1                  * Read cashier id master
          BRANCH    OVRCD,GETI4000           * Cashier record does not exist
.
          DISPLAY   *P1:4,*EF,"Cashier  : ",*V2LON,RCPCASH
.
          PACK      DIM20,SP20               * Clear variable
          MATCH     SP20,RCPGIVEN            * Is given name blank ?
          GOTO      ID0030 IF EQUAL          * Yes - don't loop
          MOVE      RCPGIVEN,DIM20           * Use convenient large variable
          RESET     DIM20,20                 * to display name
ID0020    CMATCH    SP1,DIM20                * Is this a space ?
          GOTO      ID0030 IF NOT EQUAL      * No - found end of given name
          BUMP      DIM20,-1                 * Go back 1 character
          GOTO      ID0020                   * Check character
ID0030    MATCH     SP20,RCPSUR              * Is surname blank ?
          GOTO      ID0040 IF EQUAL          * Yes - do not append
          APPEND    SP1,DIM20                * Space between given & surname
          APPEND    RCPSUR,DIM20             * Surname
ID0040    RESET     DIM20
          DISPLAY   *P18:4,*V2LON,DIM20      * Display formatted name
.
GETI2000  MATCH     SP6,RCPPASS              * Is there a password ?
          GOTO      GETI9000 IF EQUAL        * No - unset exit flag
.
GETI3000  KEYIN     *P1:5,*EL,"Password : ",*V2LON,*ESON,VPASSWD,*ESOFF:
                    *P1:5,*EL;
          ENDSET    VPASSWD
          APPEND    SP6,VPASSWD
          RESET     VPASSWD
          MATCH     SP6,VPASSWD              * <ENTER> hit ?
          GOTO      GETI0000 IF EQUAL        * Yes - reenter cashier id
          MATCH     VPASSWD,RCPPASS          * Correct password ?
          GOTO      GETI9000 IF EQUAL        * Yes - unset exit flag
.
          DISPLAY   *P1:24,*EL,*B,"Invalid Password. ";
          CALL      HITENTER
          GOTO      GETI3000                 * Reenter password
.
GETI4000  DISPLAY   *P1:24,*EL,*B,"Invalid Cashier ID. ";
          CALL      HITENTER
          GOTO      GETI0500                 * Reenter cashier id
.
GETI9000  MOVE      ZERO,EXIT                * Unset exit flag
          MOVE      ZERO,VSTAT1              * Set up claim parameters
          MOVE      ZERO,VSTAT2
          PACK      VDATE,CCC,CYY,CMM,CDD
GETI9999  RETURN
.
+
.**************************************************************************
.*                             GETD0000                                   *
.*                        Input HF/INS/GOV details                        *
.**************************************************************************
.         Keyin Claim Type
.------------------------------------------------------------------------------
.
GETD1000  MOVE      ONE,EXIT                 * Set exit flag
          KEYIN     *P1:6,*EL,"Claim Type       : _",*P1:24:
                    *V2LON,*DV,ONE,*HOFF,"=Health Fund  ":
                    *V2LON,*DV,TWO,*HOFF,"=Insurance  ":
                    *V2LON,*DV,THREE,*HOFF,"=Government":
                    *P20:6,*V2LON,*DE,ANS,*P1:24,*EL;
          RESET     ANS
          GOTO      GETD1999 IF EOS          * Finished add
          MOVE      ANS,RBTYPE                * Claim type
GETD1050  BRANCH    RBTYPE,GETD1051,GETD1052,GETD1053
          BEEP
          GOTO      GETD1000
.
GETD1051  MOVE      "Health Fund",DIM11Z
          DISPLAY   *P30:6,*V2LON,DIM11Z
          GOTO      GETD1090
.
GETD1052  MOVE      "Insurance  ",DIM11Z
          DISPLAY   *P30:6,*V2LON,DIM11Z
          GOTO      GETD1090
.
GETD1053  MOVE      "Government ",DIM11Z
          DISPLAY   *P30:6,*V2LON,DIM11Z
          GOTO      GETD1090
.
.------------------------------------------------------------------------------
.         Keyin Code
.------------------------------------------------------------------------------
.
GETD1090  KEYIN     *P1:8,*DV,DIM11Z," Code : ______":
                    *P20:8,*V2LON,RBCODE,*P20:8,*DV,RBCODE
          ENDSET    RBCODE
          APPEND    SP6,RBCODE
          RESET     RBCODE
          MATCH     SP6,RBCODE                * <ENTER> hit ?
          GOTO      GETD1000 IF EQUAL        * Yes - go back to keyin type
          CMATCH    QUEST,RBCODE
          GOTO      GETD1500 IF NOT EQUAL
.
          BRANCH    RBTYPE,GETD1100,GETD1200,GETD1300
GETD1100  CALL      PATDSFN1                 * Display Health Fund file
          GOTO      GETD1400
GETD1200  CALL      PATINSDS                 * Display Insurance file
          GOTO      GETD1400
GETD1300  CALL      PATGOVDS                 * Display Government file
.
GETD1400  DISPLAY   *P1:4,*EF,"Cashier : ",*V2LON,RCPCASH,*P18:4,DIM20,*HOFF:
                    *P1:6,"Claim Type       : ",*V2LON,RBTYPE,*P30:6,DIM11Z
          GOTO      GETD1090
.
GETD1500  BRANCH    RBTYPE,GETD1600,GETD1700,GETD1800
.
.         Health Fund
.
GETD1600  PACK      KEY14,RBCODE,ZERO,ZERO,ZERO,ZERO,SP10 *Health fund,not table
          CALL      RDFUND1
          BRANCH    OVRCD,GETD1610
          MOVE      HFNAME,DIM20Z
          DISPLAY   *P30:8,*V2LON,HFNAME
          GOTO      GETD1900
GETD1610  DISPLAY   *P1:24,*EL,*B,"Invalid Health Fund. ";
          CALL      HITENTER
          GOTO      GETD1090
.
.         Insurance
.
GETD1700  PACK      KEY6,RBCODE
          CALL      RDINSR1
          BRANCH    OVRCD,GETD1710
          MOVE      INAME,DIM20Z
          DISPLAY   *P30:8,*V2LON,INAME
          GOTO      GETD1900
GETD1710  DISPLAY   *P1:24,*EL,*B,"Invalid Insurance. ";
          CALL      HITENTER
          GOTO      GETD1090
.
.         Government
.
GETD1800  PACK      KEY6,RBCODE
          CALL      RDGOVR1
          BRANCH    OVRCD,GETD1810
          MOVE      GNAME,DIM20Z
          DISPLAY   *P30:8,*V2LON,GNAME
          GOTO      GETD1900
GETD1810  DISPLAY   *P1:24,*EL,*B,"Invalid Government. ";
          CALL      HITENTER
          GOTO      GETD1090
.
GETD1900  MOVE      ZERO,EXIT
GETD1999  RETURN
.
+
.**************************************************************************
.*                             GETC0000                                   *
.*                        Input Claim Number                              *
.**************************************************************************
.
GETC0000  MOVE      ONE,EXIT                 * Set exit flag
          MOVE      SP6,DIM6
          MOVE      "4",EVERT
          KEYIN     *P1:EVERT,*EF,"Claim Number : ______":
                    *P16:EVERT,*V2LON,*JR,DIM6
          RESET     DIM6                     * <ENTER> hit ?
          GOTO      GETC9999 IF EOS          * Yes - exit
.
          MATCH     "     ?",DIM6            * "?" option ?
          GOTO      GETC1000 IF NOT EQUAL    * No - check code
.
.         ? option
.
          MOVE      "24",EVERT
          CALL      RCPBULDS                 * Display all claim numbers
GETC0500  KEYIN     *P1:EVERT,*EF,"Claim Number : ______":
                    *P16:EVERT,*V2LON,*JR,DIM6
          RESET     DIM6                     * <ENTER> hit ?
          GOTO      GETC9999 IF EOS          * Yes - exit
.
          MATCH     "     ?",DIM6            * "?" option ?
          GOTO      GETC0500 IF EQUAL        * No - check code
.
GETC1000  TYPE      DIM6                     * Is this a numeric ?
          GOTO      GETC8000 IF NOT EQUAL    * No - error
.
          MOVE      DIM6,VCLAIM              * Move DIM6 to FORM6
          DISPLAY   *P16:EVERT,*V2LON,VCLAIM
          PACK      KEY15,VCLAIM,SP20
          CALL      RDSBULA1                 * Positioning read of b.b. file
          CALL      RDKBULA1                 * Data read of b.b. file
          BRANCH    OVRCD,GETC8000           * Claim record does not exist
.
          COMPARE   VCLAIM,RBCLAIM           * Same claim number ?
          GOTO      GETC8000 IF NOT EQUAL    * No 
.
          BRANCH    RBSTAT1,GETC1100,GETC8100
.
          MOVE      "Input  ",VSTATUS
          GOTO      GETC1200
GETC1100  MOVE      "Printed",VSTATUS
.
GETC1200  IF        EVERT=24
           DISPLAY    *P1:4,*EF,"Claim Number : ",*V2LON,VCLAIM
          ENDIF
          UNPACK    RBDATE,XCENT,XYEAR,XMON,XDAY
          DISPLAY   *P31:4,"Claim Date : ",*P59:4,"Claim Status : ":
                    *P44:4,*V2LON,XDAY,SLASH,XMON,SLASH,XCENT,XYEAR:
                    *P74:4,VSTATUS
          GOTO      GETC9000
.
GETC8000  DISPLAY   *P1:24,*EL,*B,"Invalid Claim Number. ";
          CALL      HITENTER
          GOTO      GETC8200
.
GETC8100  DISPLAY   *P1:24,*EL,*B,"Claim Is Already Receipted. ";
          CALL      HITENTER
GETC8200  IF        EVERT=24
            GOTO      GETC0500               * Reenter claim number
          ENDIF
          GOTO      GETC0000                 * Reenter claim number
.
GETC9000  MOVE      ZERO,EXIT                * Unset exit flag
          MOVE      RBSTAT1,VSTAT1           * Save original claim parameters
          MOVE      RBSTAT2,VSTAT2
          MOVE      RBDATE,VDATE
.
GETC9999  RETURN
.
+
.**************************************************************************
.*                             GENC0000                                   *
.*                      Generate a new Claim Number                       *
.**************************************************************************
.
GENC0000  READ      CONTROLF,THIRTY6;*107,HCLAIM  * Read new claim number
          MOVE      HCLAIM,VCLAIM                 * Save new claim number
          ADD       ONE,HCLAIM                    * Generate next claim number
          WRITAB    CONTROLF,THIRTY6;*107,HCLAIM  * Update into control file
          DISPLAY   *P1:24,*EL,"Claim Number for this batch is [":
                    *V2LON,VCLAIM,*HOFF,"]. Hit <",*V2LON,"ENTER",*HOFF:
                    "> to post ";
          KEYIN     ANS;
          RETURN
.
+
.**************************************************************************
.*                              OPTN0000                                  *
.*                        Get user's options                              *
.**************************************************************************
.
OPTN0000  MOVE      ONE,EXIT                 * Set exit flag
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Input":
                    *P1:6,*V2LON,TWO,*HOFF," = Modify"
          KEYIN     *P1:8,"Please Select : ",*V2LON,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      OPTN9999 IF EQUAL
          BRANCH    OPTION,OPTN9000,OPTN9000
          BEEP
          GOTO      OPTN0000
.
OPTN9000  MOVE      ZERO,EXIT                * Unset exit flag
OPTN9999  RETURN
+
.******************************************************************************
.
.         Keyin Codes entries Screen - Control Block
.
.------------------------------------------------------------------------------
.
MODB0000  DISPLAY   *P1:24,*EL,*P20:24,*V2LON,"*** Setting up ":
                    *BLINKON,"bulk billing",*HOFF,*V2LON," screen *** ";
          MOVE      ZERO,RCPCHG             * No changes made as yet
          CALL      CREA0000                * Create temp file
          CMATCH    ANSC,MODE               * Change mode ?
          GOTO      MODB0010 IF NOT EQUAL   * No - skip load
          CALL      LOAD0000                * Load temp file from b.b. file
MODB0010  CALL      MAXP0000                * Get MMAXPAGE & MMAXTRAN
          MOVE      ZERO,MSKIPASK           * Stop display at every screen
          CALL      DISB0000                * Display contents of temp file
          COMPARE   ZERO,MMAXTRAN           * No records as yet ?
          GOTO      MODB1000 IF EQUAL       * Yes - go straight into add mode
.
MODB0100  MOVE      ONE,EXIT                * Set exit flag
          MOVE      SP1,ANS
          KEYIN     *P1:24,*EL,"(",*V2LON,*DV,ANSA,*HOFF,")dd":
                    ", (",*V2LON,*DV,ANSC,*HOFF,")hange":
                    ", (",*V2LON,*DV,ANSD,*HOFF,")elete":
                    ", (",*V2LON,*DV,ANSR,*HOFF,")edisplay":
                    ", (",*V2LON,*DV,ANSE,*HOFF,")xit":
                    ", (",*V2LON,*DV,ANSP,*HOFF,")ost : ",*V2LON,ANS
          REP       UPPLOW,ANS
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
          REP       "A1C2D3R4E5P6 0102030405060",ANS   * Cannot enter numbers
          MOVE      ANS,IMIN                 * Move to a convenient form2
          BRANCH    IMIN,MODB1000,MODB2000,MODB3000,MODB4000,MODB5000,MODB6000
          BEEP
          GOTO      MODB0100
.
.         Add items
.
MODB1000  CALL      MADD0000
          GOTO      MODB0100
.
.         Change items
.
MODB2000  CALL      MCHG0000
          GOTO      MODB0100
.
.         Delete items
.
MODB3000  CALL      MDEL0000
          GOTO      MODB0100
.
.         Redisplay screen
.
MODB4000  MOVE      ZERO,MSKIPASK            * Stop display at every screen
          CALL      DISB0000
          GOTO      MODB0100
.
.         Exit without posting
.
MODB5000  COMPARE   ZERO,RCPCHG
          GOTO      MODB9999 IF EQUAL        * No changes made
MODB5500  KEYIN     *P1:24,*EL,"Exit without posting changes. Ok to proceed (":
                    *V2LON,*DV,ANSY,*HOFF,*DV,SLASH,*V2LON,*DV,ANSN,*HOFF:
                    ") ? ",*B,*V2LON,ANS
          REP       UPPLOW,ANS
.
          CMATCH    ANSY,ANS
          GOTO      MODB9999 IF EQUAL
.
          CMATCH    ANSN,ANS
          GOTO      MODB0100 IF EQUAL
.
          BEEP
          GOTO      MODB5500
.
.         Exit ...
.
MODB6000  MOVE      ZERO,EXIT                * Unset exit flag - update files
.
MODB9999  RETURN
+
.******************************************************************************
.         Add codes to temp file
.------------------------------------------------------------------------------
.
MADD0000  MOVE      ANSI,MODE                * Insert mode
.
MADD0100  ADD       ONE,MMAXTRAN             * One more transaction added
          CALL      MAXP2000                 * Calculate new screen page
.
          COMPARE   MCURPAGE,MMAXPAGE        * Is curr scrn page the end ?
          GOTO      MADD1000 IF EQUAL        * Yes - calculate screen pos
          MOVE      MMAXPAGE,MREQPAGE        * else display last screen
          MOVE      ONE,MSKIPASK             * Stop display at last screen
          CALL      DISB0000                 * because MMAXPAGE=last screen page
.
.         Calculate screen position
.
MADD1000  MOVE      MCURPAGE,FORM4
          SUB       ONE,FORM4
          MULT      TEN6,FORM4
          MOVE      MMAXTRAN,FORM4B
          SUB       FORM4,FORM4B
          ADD       SIX,FORM4B
          MOVE      FORM4B,CVERT             * Position down the screen
.
MADD1100  MOVE      MMAXTRAN,FORM4           * Transaction number
          DISPLAY   *P1:CVERT,*EL,*V2LON,FORM4,DOT;
.
          MOVE      ZERO,RBAMT               * Clear record variables
          MOVE      ZERO,RBPERDSC
          MOVE      ZERO,RBDISC
          UNPACK    SP30,RBREG,RBINV
          UNPACK    SP30,DIM10,DIM15
.
MADD3000  CALL      CHGF2000                 * Keyin register
          BRANCH    EXIT,MADD9000            * Finished add
.
MADD4000  CALL      CHGF3000                 * Keyin invoice
          BRANCH    EXIT,MADD3000            * Goto previous field
.
          CALL      CHGF4000                 * Keyin amount
          BRANCH    EXIT,MADD4000            * Goto previous field
.
          CALL      CHGF5000                 * Keyin percentage
.
.------------------------------------------------------------------------------
.         Write new record
.------------------------------------------------------------------------------
.
MADD8000  MOVE      FORM4,MUNIQUE            * Transaction number to FORM5
          MOVE      MUNIQUE,DIM5             * FORM5 to DIM5
.
          MOVE      RBTYPE,ANS
          PACK      KEY23,DIM5,ANS,RBCODE,RBREG,RBINV
          CALL      WRTMPR1
          ADD       ONE,MUNIQUE              * Next unique record #
          MOVE      ONE,RCPCHG               * A change has been made
.
          GOTO      MADD0100                 * Add another record
.
MADD9000  SUB       ONE,MMAXTRAN             * Finished add - reduce by 1
          DISPLAY   *P1:CVERT,*EL
          RETURN
+
.******************************************************************************
.         Change codes in temp file
.------------------------------------------------------------------------------
.
MCHG0000  MOVE      ANSC,MODE                * Change mode
          KEYIN     *P1:24,*EL,"Change item : ",*V2LON,FORM4A;
          COMPARE   ZERO,FORM4A
          GOTO      MCHG9000 IF EQUAL
          COMPARE   MMAXTRAN,FORM4A
          GOTO      MCHG1000 IF EQUAL
          GOTO      MCHG1000 IF LESS
MCHG0100  DISPLAY   *P1:24,*B,*EL,"Item out of range. ";
          CALL      HITENTER
          GOTO      MCHG0000
.
.         Calculate screen page transaction is on & transaction # down page
.
MCHG1000  MOVE      MMAXTRAN,FORM4           * Save MMAXTRAN
          MOVE      MMAXPAGE,FORM4B          * Save MMAXPAGE
          MOVE      FORM4A,MMAXTRAN          * Use trx num to calculate MMAXPAGE
          CALL      MAXP2000                 * Calculate MMAXPAGE
          MOVE      MMAXPAGE,MREQPAGE        * MMAXPAGE is the page req
          MOVE      FORM4,MMAXTRAN           * Restore MMAXTRAN
          MOVE      FORM4B,MMAXPAGE          * Restore MMAXPAGE
.
          COMPARE   MCURPAGE,MREQPAGE
          GOTO      MCHG1500 IF EQUAL
          MOVE      ONE,MSKIPASK             * Display till required screen
          CALL      DISB0000
.
MCHG1500  MOVE      MCURPAGE,FORM4
          SUB       ONE,FORM4
          MULT      TEN6,FORM4
          MOVE      FORM4A,FORM4B
          SUB       FORM4,FORM4B
          ADD       SIX,FORM4B
          MOVE      FORM4B,CVERT             * Position down the screen
.
          MOVE      ZERO,FORM4               * Counter for no.of records read
          PACK      KEY23,SP30
          CALL      RDSTMPR1
MCHG2000  CALL      RDKTMPR1
          BRANCH    OVRCD,MCHG0100           * Record not found
          ADD       ONE,FORM4
          COMPARE   FORM4,FORM4A             * Same as transaction # ?
          GOTO      MCHG2900 IF EQUAL        * Yes - exit from read loop
          GOTO      MCHG2000                 * Otherwise keep on reading
.
.         Save current record's key for positioning read before update
.
MCHG2900  PACK      VKEY23,DIM5,RBTYPE,RBCODE,RBREG,RBINV
          MOVE      RBREG,VREGISTR
          MOVE      RBINV,VINVOICE
          MOVE      RBAMT,VAMOUNT
          MOVE      RBPERDSC,VPERDISC
          MOVE      RBDISC,VDISCAMT
.
          CALL      CHGF4000                 * Change AMOUNT
          CALL      CHGF5000                 * Change DISCOUNT PERCENTAGE
.
.         Post changes if necessary
.
MCHG4000  COMPARE   ZERO,RCPCHG              * Any changes made ?
          GOTO      MCHG0000 IF EQUAL        * No - get next record to change
.
.         We assume that key field values have changed
.
          MOVE      VKEY23,KEY23             * Use saved key value to
          CALL      DETMPR1                  * delete old record
.
          MOVE      FORM4A,MUNIQUE           * Use line number for unique id
          MOVE      MUNIQUE,DIM5             * FORM5 to DIM5 for Key
          PACK      KEY23,DIM5,RBTYPE,RBCODE,RBREG,RBINV
          CALL      WRTMPR1                  * Write new record
          GOTO      MCHG0000                 * Get next record to change
.
.         Exit from change mode
.
MCHG9000  RETURN
.
+
.******************************************************************************
.
.         Routines for input/alteration of fields
.
.------------------------------------------------------------------------------
.         Keyin Register (VREGISTR DIM 3)
.------------------------------------------------------------------------------
.
CHGF2000  MOVE      ONE,EXIT                 * Set exit flag
          MOVE      RBREG,VREGISTR
          KEYIN     *P7:CVERT,*DV,SP10,*DV,SP4:
                    *P7:CVERT,VREGISTR:
                    *P7:CVERT,*DV,VREGISTR
          ENDSET    VREGISTR
          APPEND    SP3,VREGISTR
          RESET     VREGISTR
          MATCH     SP3,VREGISTR             * <ENTER> hit ?
          GOTO      CHGF2999 IF EQUAL        * Yes - nothing changed
          CMATCH    QUEST,VREGISTR           * "?" option ?
          GOTO      CHGF2100 IF NOT EQUAL    * No - validate register code
.
.         Save current record's values
.
          MOVE      CVERT,CCOL3              * Vertical position
          MOVE      FORM4,FORM4A             * Transaction number
          MOVE      RBREG,VREGISTR           * Register
          MOVE      RBINV,VINVOICE           * Invoice
          MOVE      RBAMT,VAMOUNT            * Bulk billed amount
          MOVE      RBPERDSC,VPERDISC        * Percentage discount
          MOVE      RBDISC,VDISCAMT          * Discount amount
          MOVE      DIM10,VDIM10             * Register description
          MOVE      DIM15,VDIM15             * Name from invoice
.
          CALL      RCPREGDS                 * "?" display
          MOVE      MCURPAGE,MREQPAGE
          MOVE      ONE,MSKIPASK             * Stop display at required screen
          CALL      DISB0000                 * Redisplay screen
          MOVE      CCOL3,CVERT              * Restore vertical position
          MOVE      FORM4A,FORM4             * Restore transaction number
          CMATCH    ANSC,MODE                * Change mode ?
          GOTO      CHGF2010 IF EQUAL        * Display whole line
          DISPLAY   *P1:CVERT,*EL,*V2LON,FORM4,DOT;
          GOTO      CHGF2000
.
.         Restore current record's values
.
CHGF2010  MOVE      VREGISTR,RBREG           * Register
          MOVE      VINVOICE,RBINV           * Invoice
          MOVE      VAMOUNT,RBAMT            * Bulk billed amount
          MOVE      VPERDISC,RBPERDSC        * Percentage discount
          MOVE      VDISCAMT,RBDISC          * Discount amount
          MOVE      VDIM10,DIM10             * Register description
          MOVE      VDIM15,DIM15             * Name from invoice
.
          DISPLAY   *P1:CVERT,*V2LON,FORM4,DOT,*HOFF:
                    *P7:CVERT,RBREG,SP1,DIM10:
                    *P22:CVERT,RBINV,*P31:CVERT,DIM15:
                    *P46:CVERT,RBAMT,*P70:CVERT,VNETAMT
          BRANCH    HBBDISC,CHGF2015
          DISPLAY   *P63:CVERT,RBPERDSC
          GOTO      CHGF2000
CHGF2015  DISPLAY   *P58:CVERT,RBDISC
          GOTO      CHGF2000
.
CHGF2100  PACK      KEY3,VREGISTR
          CALL      RDREGA1
          BRANCH    OVRCD,CHGF2200
.
.         Only Inpatients & Private Practice registers available
.
          BRANCH    REGIBACD,CHGF2900,CHGF2900
.
CHGF2200  DISPLAY   *P1:24,*EL,*B,"Invalid Register. ";
          CALL      HITENTER
          GOTO      CHGF2000
.
.         If change mode, check key integrity
.
CHGF2900  CMATCH    ANSC,MODE                * Change mode ?
          GOTO      CHGF2910 IF NOT EQUAL    * No - skip check
          PACK      KEY18,RBTYPE,RBCODE,VREGISTR,RBINV
          CALL      RDATM2R1
          BRANCH    OVRCD,CHGF2910
          DISPLAY   *P1:24,*EL,*B,"Duplicate Register/Invoice Combination. ";
          CALL      HITENTER
          GOTO      CHGF2000
.
CHGF2910  MOVE      REGDESC,DIM10
          DISPLAY   *P11:CVERT,DIM10
          MOVE      VREGISTR,RBREG           * Register changed
          MOVE      ZERO,EXIT
          MOVE      ONE,RCPCHG               * Altered something
.
. must be a patient register
.
          IF       !(REGIBACD=1 | REGIBACD=93 | REGIBACD=97)
            GOTO     CHGF2990                * not a patient register
          ENDIF
.
          MOVE      CVERT,SAVCVERT           * save vertical position
          MOVE      TEN2,HLEF
          MOVE      CVERT,HTOP
          CALL      KYRCPHOS                 * Keyin Hospital
          MOVE      SAVCVERT,CVERT           * restore vertical position
          BRANCH    EXIT,CHGF2000,CHGF2990   * no hospital selected,no multi 
          MOVE      FORM1,DIM1               * move hosp selected to dim field
          PACK      RBHOSP,SP1,DIM1          * set up hospital
.
          LOAD      XXDPATH,FORM1,HDPATH1,HDPATH2,HDPATH3,HDPATH4,HDPATH5
.
. now open visit related files in appropriate databases (ie. across hospitals)
.
          IF        HSYS2=1
            MOVE      "patvisaf",OPFILE
            MOVE      TWENTY,FILENUM
            CALL      OMDFN000
            IF        EXIT=1
              OPEN      PATVISA1,"patvisaf"      * Visit file
            ENDIF
.
            MOVE      "patinvrf",OPFILE
            MOVE      FIFTY1,FILENUM
            CALL      OMDFN000
            IF        EXIT=1
              OPEN      PATINVR1,"patinvrf"      * Invoice file
            ENDIF
          ENDIF
.
CHGF2990  MOVE      ZERO,EXIT
.
CHGF2999  RETURN
.
.------------------------------------------------------------------------------
.         Keyin invoice number (VINVOICE DIM 8)
.------------------------------------------------------------------------------
.
CHGF3000  MOVE      ONE,EXIT                 * Set exit flag
          MOVE      RBINV,VINVOICE
          KEYIN     *P22:CVERT,*JR,*DE,VINVOICE
          RESET     VINVOICE                 * <ENTER> hit ?
          GOTO      CHGF3999 IF EOS          * Yes - nothing changed
.
          DISPLAY   *P22:CVERT,VINVOICE
          PACK      KEY8,VINVOICE
          BRANCH    REGIBACD,CHGF3100,CHGF3200
.
CHGF3100  CALL      RDINV1                   * Patient Billing
          GOTO      CHGF3300
CHGF3200  CALL      RDPRIN1                  * Private Practice
.
CHGF3300  COMPARE   ZERO,OVRCD               * Got record ?
          GOTO      CHGF3400 IF EQUAL        * Yes
          DISPLAY   *P1:24,*EL,*B,"Invalid Invoice Number.  ";
          CALL      HITENTER
          GOTO      CHGF3000
.
.         Display invoice details at bottom of screen
.
CHGF3400  BRANCH    REGIBACD,CHGF3500,CHGF3700
.
CHGF3500  MOVE      PINVAMT,RBAMT            * Invoice amount
          ADD       PINVPATA,RBAMT           * Add patient cash payments
          ADD       PINVHFDA,RBAMT           * Add H.F. cash payments
          ADD       PINVOTHA,RBAMT           * Add other cash payments
          ADD       PINVJOUR,RBAMT           * Add journals
.
          UNPACK    PINVDTE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      PINVADM,PVIBILL
          DISPLAY   *P1:24,*EL,"Invoice Date : ":
                    *V2LON,CPCDATE,*HOFF:
                    "  Adm : ",*V2LON,PVIBILL;
.
          MOVE      PVIBILL,KEY8
          CALL      RDVISA1
.
          MOVE      PVIURNO,PURNO
          PACK      KEY8,PURNO
CHGF3600  MOVE      SP30,PSNAME              * Clear variable
          CALL      RDMAST1
          MOVE      PSNAME,DIM15            * Name from invoice
          CALL      FNME1000                 * Format name into DIM30
          DISPLAY   "  Name : ",*V2LON,DIM30,*HOFF:
                    *P31:CVERT,DIM15
          GOTO      CHGF3900
.
CHGF3700  MOVE      PRINITOT,RBAMT            * Invoice amount
          ADD       PRINPAMT,RBAMT           * Add patient cash payments
          ADD       PRINHAMT,RBAMT           * Add H.F. cash payments
          ADD       PRINIAMT,RBAMT           * Add other cash payments
          ADD       PRINMAMT,RBAMT           * Add other cash payments
          ADD       PRINVAMT,RBAMT           * Add other cash payments
          ADD       PRINOTHA,RBAMT           * Add other cash payments
          ADD       PRINJAMT,RBAMT           * Add journals
.
          UNPACK    PRINDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P1:24,*EL,"Invoice Date: ":
                    *V2LON,CPCDATE;
          BRANCH    PRINSCAN,CHGF3800
.
.         Debtor ...
.
...          PACK      KEY8,PRINDEBT
...          MOVE      SP30,PRDBSNAM            * Clear variable
...          CALL      RDPRDB1
...          MOVE      PRDBSNAM,DIM15          * Debtor name from invoice
...          CALL      FNME0000                 * Format debtor name into DIM30
          MOVE      "Unknown Debtor",DIM15
          MOVE      "Unknown Debtor",DIM30
          DISPLAY   "  Name : ",*V2LON,DIM30,*HOFF:
                    *P31:CVERT,DIM15
          GOTO      CHGF3900
.
.         U/R ...
.
CHGF3800  MOVE      PRINDEBT,PURNO   
          PACK      KEY8,PURNO
          GOTO      CHGF3600
.
.         Check key integrity
.
CHGF3900  MOVE      RBTYPE,ANS
          PACK      KEY18,ANS,RBCODE,RBREG,VINVOICE
          CALL      RDATM2R1
          BRANCH    OVRCD,CHGF3910
          DISPLAY   *P1:24,*EL,*B,"Duplicate Register/Invoice Combination. ";
          CALL      HITENTER
          GOTO      CHGF3000
.
CHGF3910  MOVE      ZERO,EXIT
          MOVE      VINVOICE,RBINV           * Invoice number changed
          MOVE      ONE,RCPCHG               * Altered something
          MOVE      RBAMT,RBOUTNDG           * Save the amount outstanding
.
CHGF3999  RETURN
.
.         Format Debtor name into DIM30
.
...FNME0000  MOVE      SP30,DIM30
...          CLEAR     DIM30
...          MATCH     SP30,PRDBGNAM
...          GOTO      FNME0020 IF EQUAL
...          APPEND    PRDBGNAM,DIM30
...          RESET     DIM30,30
...FNME0010  CMATCH    SP1,DIM30
...          GOTO      FNME0015 IF NOT EQUAL
...          BUMP      DIM30,-1
...          GOTO      FNME0010 IF NOT EOS
...          GOTO      FNME0020
...FNME0015  APPEND    SP1,DIM30
...FNME0020  APPEND    PRDBSNAM,DIM30
...          RESET     DIM30
...          RETURN
.
.         Format PMI name into DIM30
.
FNME1000  MOVE      SP30,DIM30
          CLEAR     DIM30
          MATCH     SP4,PTITL
          GOTO      FNME1020 IF EQUAL
          APPEND    PTITL,DIM30
          RESET     DIM30,30
FNME1010  BUMP      DIM30,-1
          CMATCH    SP1,DIM30
          GOTO      FNME1010 IF EQUAL
          APPEND    SP1,DIM30
FNME1020  MATCH     SP30,PGNAME
          GOTO      FNME1040 IF EQUAL
          APPEND    PGNAME,DIM30
          RESET     DIM30,30
FNME1030  BUMP      DIM30,-1
          CMATCH    SP1,DIM30
          GOTO      FNME1030 IF EQUAL
          APPEND    SP1,DIM30
FNME1040  APPEND    PSNAME,DIM30
          RESET     DIM30
          RETURN
.
.------------------------------------------------------------------------------
.         Keyin amount (VAMOUNT FORM 8.2)
.------------------------------------------------------------------------------
.
CHGF4000  MOVE      ONE,EXIT                 * Set exit flag
          MOVE      RBAMT,VAMOUNT
          KEYIN     *P46:CVERT,*DV,VAMOUNT:
                    *P46:CVERT,*RV,VAMOUNT
          COMPARE   ZERO,VAMOUNT
          GOTO      CHGF4999 IF EQUAL        * No change
          GOTO      CHGF4100 IF LESS         * Amount is negative
.
          COMPARE   VAMOUNT,RBOUTNDG         * Is amount more than outstanding
          GOTO      CHGF4150 IF LESS         * Yes. Display warning message
          GOTO      CHGF4200
.
CHGF4100  DISPLAY   *P1:24,*EL,*B,"Invalid Amount. ";
          CALL      HITENTER
          GOTO      CHGF4000
.
CHGF4150  DISPLAY   *P1:24,*EL,*B,"Warning: This would put the account in ":
                    "credit. ";
          CALL      HITENTER
.
CHGF4200  DISPLAY   *P46:CVERT,VAMOUNT
          MOVE      ONE,RCPCHG               * Altered something
          MOVE      VAMOUNT,RBAMT            * Amount changed
          MOVE      ZERO,EXIT                * Unset exit flag
          CMATCH    ANSC,MODE                * Change mode ?
          GOTO      CHGF5200 IF EQUAL        * Yes - recalculate discount
.
CHGF4999  RETURN                             * Go back to previous field
.
.------------------------------------------------------------------------------
.         Keyin discount percentage (VPERDISC FORM 3.2)
.------------------------------------------------------------------------------
.
CHGF5000  MOVE      ONE,EXIT                 * Set exit flag
          BRANCH    HBBDISC,CHGF5300         * Check if we are inputing amount
.
.         Input Discount percentage
.
          KEYIN     *P63:CVERT,VPERDISC
          COMPARE   ZERO,VPERDISC
          GOTO      CHGF5999 IF EQUAL        * Unchanged
          GOTO      CHGF5100 IF LESS         * Percentage is negative
          COMPARE   "100.01",VPERDISC
          GOTO      CHGF5200 IF LESS         * Get discount amount
.
CHGF5100  DISPLAY   *P1:24,*EL,*B,"Invalid Percentage. ";
          CALL      HITENTER
          GOTO      CHGF5000
.
.------------------------------------------------------------------------------
.         Calculate discount amount (VDISCAMT FORM 8.2)
.------------------------------------------------------------------------------
.
CHGF5200  MOVE      VAMOUNT,FORM10P4
          MULT      VPERDISC,FORM10P4
          DIV       "100",FORM10P4
          MOVE      FORM10P4,VDISCAMT
.
          MOVE      VAMOUNT,VNETAMT
          SUB       VDISCAMT,VNETAMT
.
          DISPLAY   *P63:CVERT,VPERDISC,*P70:CVERT,VNETAMT
          MOVE      ONE,RCPCHG               * Something was changed
          MOVE      VPERDISC,RBPERDSC        * Changed discount percentage
          MOVE      VDISCAMT,RBDISC          * Changed discount amount
          MOVE      ZERO,EXIT                * Unset exit flag
          RETURN
.
.------------------------------------------------------------------------------
.         Input discount amount (VDISCAMT FORM 8.2)
.------------------------------------------------------------------------------
.
CHGF5300  KEYIN     *P58:CVERT,VDISCAMT
          COMPARE   ZERO,VPERDISC
.          GOTO      CHGF5999 IF EQUAL        * Unchanged
          GOTO      CHGF5400 IF LESS         * amount is negative
.
          COMPARE   VDISCAMT,RBAMT
          GOTO      CHGF5500 IF NOT LESS
.
CHGF5400  DISPLAY   *P1:24,*EL,*B,"Invalid Amount. ";
          CALL      HITENTER
          GOTO      CHGF5000
.
.------------------------------------------------------------------------------
.         Calculate discount percentage (VPERDISC FORM 3.2)
.------------------------------------------------------------------------------
.
CHGF5500  MOVE      VDISCAMT,FORM10P4
          MULT      "100",FORM10P4
          DIV       VAMOUNT,FORM10P4
          MOVE      FORM10P4,VPERDISC
.
          MOVE      VAMOUNT,VNETAMT
          SUB       VDISCAMT,VNETAMT
.
          DISPLAY   *P58:CVERT,VDISCAMT,*P70:CVERT,VNETAMT
          MOVE      ONE,RCPCHG               * Something was changed
          MOVE      VPERDISC,RBPERDSC        * Changed discount percentage
          MOVE      VDISCAMT,RBDISC          * Changed discount amount
          MOVE      ZERO,EXIT                * Unset exit flag
          RETURN
.
CHGF5999  CMATCH    ANSC,MODE                * Change mode ?
          RETURN    IF EQUAL                 * Yes - no alterations
.
          BRANCH    HBBDISC,CHGF5500         * Calculate discount percentage
          GOTO      CHGF5200                 * Otherwise calculate discount
.
+
.******************************************************************************
.         Delete codes from temp file
.------------------------------------------------------------------------------
.
MDEL0000  KEYIN     *P1:24,*EL,"Delete item : ",*V2LON,FORM4A;
          COMPARE   ZERO,FORM4A
          GOTO      MDEL9000 IF EQUAL
          COMPARE   MMAXTRAN,FORM4A
          GOTO      MDEL1000 IF EQUAL
          GOTO      MDEL1000 IF LESS
          DISPLAY   *P1:24,*EL,*B,"Item out of range. ";
          CALL      HITENTER
          GOTO      MDEL0000
.
.         Calculate screen page transaction is on & transaction # down page
.
MDEL1000  MOVE      FORM4A,MREQPAGE
          DIV       TEN6,MREQPAGE
          MULT      TEN6,MREQPAGE
          MOVE      FORM4A,FORM4B       
          SUB       MREQPAGE,FORM4B          * Transaction # down page
          DIV       TEN6,MREQPAGE
          ADD       ONE,MREQPAGE             * Required screen #
.
          COMPARE   MCURPAGE,MREQPAGE
          GOTO      MDEL1500 IF EQUAL
          MOVE      ONE,MSKIPASK             * Display till required screen
          CALL      DISB0000
.
MDEL1500  MOVE      SIX,CVERT
          ADD       FORM4B,CVERT             * Get screen position
.
          MOVE      ZERO,FORM4               * Counter for no.of records read
          PACK      KEY23,SP30
          CALL      RDSTMPR1
MDEL2000  CALL      RDKTMPR1
          BRANCH    OVRCD,MDEL9100
          ADD       ONE,FORM4
          COMPARE   FORM4,FORM4A             * Same as transaction # ?
          GOTO      MDEL3000 IF EQUAL        * Yes - exit from read loop
          GOTO      MDEL2000                 * Otherwise keep on reading
.
.         Found record
.
MDEL3000  DISPLAY   *P7:CVERT,*V2LON,*BLINKON,RBREG,SP1,DIM10
MDEL3100  KEYIN     *P1:24,*EL,"Are you sure you want to delete this item (":
                    *V2LON,*DV,ANSY,*HOFF,*DV,SLASH,*V2LON,*DV,ANSN,*HOFF:
                    ") ? ",*V2LON,ANS
          REP       UPPLOW,ANS
.
          CMATCH    ANSY,ANS
          GOTO      MDEL4000 IF EQUAL
.
          CMATCH    ANSN,ANS
          GOTO      MDEL3200 IF EQUAL
.
          BEEP
          GOTO      MDEL3100
.
MDEL3200  DISPLAY   *P7:CVERT,RBREG,SP1,DIM10
          GOTO      MDEL0000
.
.         Delete record
.
MDEL4000  PACK      KEY23,DIM5,RBTYPE,RBCODE,RBREG,RBINV
          CALL      DETMPR1
          CALL      MAXP0000                 * Recalculate MMAXPAGE & MMAXTRAN
          MOVE      ONE,MSKIPASK             * Display till required screen
          CALL      DISB0000
          GOTO      MDEL0000
.
MDEL9000  RETURN
.
MDEL9100  DISPLAY   *P1:24,*EL,*B,"SERIOUS ERROR. Field required is past end ":
                    "of range. ";
          CALL      HITENTER
          GOTO      MDEL9000
.
.------------------------------------------------------------------------------
.         Create temp file for bulk billing records
.------------------------------------------------------------------------------
.
CREA0000  CALL      KILL0000                 * Remove temp file
.
          PACK      CMDLINE,SP30,SP30
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    RCPTMP,CMDLINE
          APPEND    " 73 u1-5,6-23 u6-23",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          OPEN      RCPTMPXX,RCPTMP
          OPEN      RCPTM2XX,RCPTMP         * 2nd temp file for key check
          RETURN
.
.------------------------------------------------------------------------------
.         Remove temp file
.------------------------------------------------------------------------------
.
KILL0000  CLOSE     RCPTMPXX
          CLOSE     RCPTM2XX
          PACK      CMDLINE,SP30,SP30
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    RCPTMP,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          RETURN
.
.------------------------------------------------------------------------------
.         Load temp file with bulk billing records
.         Pass 1 : Load up temp file     ; key=ID, Category, Code, Count
.         Pass 2 : Insert unique element ; key=Unique, ID, Category, Code, Count
.------------------------------------------------------------------------------
.
LOAD0000  MOVE      ZERO,MUNIQUE
          MOVE      MUNIQUE,DIM5
          PACK      KEY15,VCLAIM,SP20
          CALL      RDSBULA1
.
LOAD1000  CALL      RDKBULA1
          BRANCH    OVRCD,LOAD3000         * No more records - goto Pass 2
          COMPARE   VCLAIM,RBCLAIM
          GOTO      LOAD3000 IF NOT EQUAL  * Different claim code - exit
.
          BRANCH    RBTYPE,LOAD1010,LOAD1020,LOAD1030
.
LOAD1010  MOVE      SP30,HFNAME            * Health Fund
          PACK      KEY14,RBCODE,ZERO,ZERO,ZERO,ZERO,SP10
          CALL      RDFUND1
          GOTO      LOAD1040
.
LOAD1020  MOVE      SP30,INAME             * Insurance
          PACK      KEY6,RBCODE
          CALL      RDFUND1
          GOTO      LOAD1040
.
LOAD1030  MOVE      SP30,GNAME             * Government
          PACK      KEY6,RBCODE
          CALL      RDGOVR1
.
LOAD1040  MOVE      SP30,REGDESC           * Clear register description
          PACK      KEY3,RBREG
          CALL      RDREGA1                * Register file
          MOVE      REGDESC,DIM10          * Move description to temp file var
.
          PACK      KEY8,RBINV
          BRANCH    REGIBACD,LOAD2100,LOAD2200
.
LOAD2100  CALL      RDINV1
.
          MOVE      PINVADM,PVIBILL
          MOVE      PVIBILL,KEY8
          CALL      RDVISA1
          MOVE      PVIURNO,PURNO
LOAD2150  PACK      KEY8,PURNO
          MOVE      SP30,PSNAME
          CALL      RDMAST1
          MOVE      PSNAME,DIM15            * Name from invoice
          GOTO      LOAD2250
.
.         Private practice
.
LOAD2200  CALL      RDPRIN1
          MOVE      PRINDEBT,PURNO
          BRANCH    PRINSCAN,LOAD2150        * Not debtor number
...          MOVE      SP30,PRDBSNAM
...          PACK      KEY8,PRINDEBT
...          CALL      RDPRDB1
...          MOVE      PRDBSNAM,DIM15          * Name from invoice
.
LOAD2250  MOVE      RBDISC,FORM10P4        * Calculate percentage discount
          MULT      "100",FORM10P4
          DIV       RBAMT,FORM10P4
          MOVE      FORM10P4,RBPERDSC      * Percentage Discount
.
          MOVE      RBTYPE,ANS
          PACK      KEY23,DIM5,ANS,RBCODE,RBREG,RBINV
          CALL      WRTMPR1
          GOTO      LOAD1000               * Read next record
.
.         Pass 2 - Insert unique element
.
LOAD3000  MOVE      ONE,MUNIQUE
LOAD4000  PACK      KEY23,SP30
          CALL      RDSTMPR1
          CALL      RDKTMPR1
          BRANCH    OVRCD,LOAD9000
          MATCH     "    0",DIM5
          GOTO      LOAD9000 IF NOT EQUAL
          MOVE      MUNIQUE,DIM5
          CALL      UPTMPR1
          ADD       ONE,MUNIQUE
          GOTO      LOAD4000
.
LOAD9000  RETURN
.
.------------------------------------------------------------------------------
.         Update mammography codes file from temp file
.------------------------------------------------------------------------------
.
POST0000  DISPLAY   *P65:24,*EL,*V2LON,*BLINKON,"** Posting ** ";
.
.         Pass 1 - delete current records from bulk billing file
.
POST1000  PACK      KEY15,VCLAIM,SP20
          CALL      RDSBULA1
POST1100  CALL      RDKBULA1
          BRANCH    OVRCD,POST5000           * No more records - commence update
          COMPARE   VCLAIM,RBCLAIM
          GOTO      POST5000 IF NOT EQUAL    * Different ID - commence update
.
          PACK      KEY15,RBCLAIM,RBCODE,RBCNT
          CALL      DEBULA1                  * Delete record
          GOTO      POST1000      * Read from top as DELETE stuffs up index pos.
.
.         Pass 2 - Write records from temp file into codes file
.
POST5000  MOVE      VCLAIM,RBCLAIM
          MOVE      ZERO,RBCNT
          PACK      KEY23,SP30
          CALL      RDSTMPR1
.
POST6000  CALL      RDKTMPR1
          BRANCH    OVRCD,POST9000
          ADD       ONE,RBCNT
.
          MOVE      VSTAT1,RBSTAT1      * Restore original claim parameters
          MOVE      VSTAT2,RBSTAT2
          MOVE      VDATE,RBDATE
          REPLACE   " 0",RBDATE
          UNPACK    SP30,RBRDATE
.
          PACK      KEY15,RBCLAIM,RBCODE,RBCNT
          CALL      WRBULA1
          GOTO      POST6000
.
POST9000  RETURN
+
.------------------------------------------------------------------------------
.         Redisplay bulk billing keyin screen
.         Requires : MSKIPASK - 0=Accept/More asked  1=disp till MREQPAGE
.         Returns  : MCURPAGE - Current displayed screen page
.------------------------------------------------------------------------------
.
DISB0000  BRANCH    OPTION,DISB0100,DISB0200
.
DISB0100  DISPLAY   *P1:3,*EF,*P1:4,"Cashier : ",*V2LON,RCPCASH,SP1,DIM20,*HOFF:
                    *P40:4,DIM11Z," : ",*V2LON,RBCODE,SP1,DIM20Z
          GOTO      DISB0300
.
DISB0200  MOVE      XDAY,CDAY
          MOVE      XMON,CMON
          MOVE      XYEAR,CYEAR
          MOVE      XCENT,CCENT
          CALL      PACDATE
          DISPLAY   *P1:3,*EF,*P1:4,"Claim Number : ":
                    *P31:4,"Claim Date : ":
                    *P59:4,"Claim Status : ":
                    *P16:4,*V2LON,VCLAIM:
                    *P44:4,CPCDATE:
                    *P74:4,VSTATUS
.
DISB0300  DISPLAY   *P1:6,*V2LON,*ULON,"No.  ":
                    *P7:6,"   Register   ":
                    *P22:6," Invoice":
                    *P31:6,"Name          ":
                    *P46:6," Claimed   ":
                    *P58:6,DHBBDISC:
                    *P70:6,"  less Disc",*HOFF,*V2LON:
                    *P70:5," Clm Amount"
.
          MOVE      ONE,MCURPAGE                * Current screen page is 1st
          MOVE      SEVEN,CVERT
          MOVE      ONE,FORM4
.
          PACK      KEY23,SP30
          CALL      RDSTMPR1
DISB1000  CALL      RDKTMPR1
          BRANCH    OVRCD,DISB3200
.
          COMPARE   ZERO,MSKIPASK
          GOTO      DISB2000 IF EQUAL
          COMPARE   MREQPAGE,MCURPAGE
          GOTO      DISB2100 IF NOT EQUAL
.
DISB2000  MOVE      RBAMT,VNETAMT
          SUB       RBDISC,VNETAMT
          BRANCH    HBBDISC,DISB2050
.
          DISPLAY   *P1:CVERT,*V2LON,FORM4,DOT,*HOFF,*P7:CVERT,RBREG,SP1,DIM10:
                    *P22:CVERT,RBINV,*P31:CVERT,DIM15:
                    *P46:CVERT,RBAMT,*P63:CVERT,RBPERDSC,*P70:CVERT,VNETAMT
          GOTO      DISB2100
.
DISB2050  DISPLAY   *P1:CVERT,*V2LON,FORM4,DOT,*HOFF,*P7:CVERT,RBREG,SP1,DIM10:
                    *P22:CVERT,RBINV,*P31:CVERT,DIM15:
                    *P46:CVERT,RBAMT,*P58:CVERT,RBDISC,*P70:CVERT,VNETAMT
.
DISB2100  ADD       ONE,FORM4
          ADD       ONE,CVERT
          COMPARE   CVERT,TWENTY2
          GOTO      DISB3000 IF LESS
          GOTO      DISB1000
.
DISB3000  BRANCH    MSKIPASK,DISB3050
          KEYIN     *P1:24,*EL,"(",*V2LON,*DV,ANSM,*HOFF,")ore, ":
                    "(",*V2LON,*DV,ANSA,*HOFF,")ccept this screen ? ":
                    *V2LON,ANS
          REP       UPPLOW,ANS
.
          RESET     ANS
          GOTO      DISB3200 IF EOS
.
          CMATCH    ANSA,ANS
          GOTO      DISB3200 IF EQUAL
.
          CMATCH    ANSM,ANS
          GOTO      DISB3100 IF EQUAL
.
          BEEP
          GOTO      DISB3000
.
.         Skipped question - keep on displaying if not page required
.
DISB3050  COMPARE   MCURPAGE,MREQPAGE
          GOTO      DISB3200 IF EQUAL
DISB3100  MOVE      SEVEN,CVERT
          ADD       ONE,MCURPAGE
          DISPLAY   *P1:CVERT,*EF;
          GOTO      DISB1000
.
DISB3200  RETURN
.
.------------------------------------------------------------------------------
.         Routine to find MMAXPAGE & MMAXTRAN
.------------------------------------------------------------------------------
.
MAXP0000  MOVE      ZERO,MMAXTRAN
          PACK      KEY23,SP30
          CALL      RDSTMPR1
MAXP1000  CALL      RDKTMPR1
          BRANCH    OVRCD,MAXP2000
          ADD       ONE,MMAXTRAN
          GOTO      MAXP1000
.
MAXP2000  MOVE      MMAXTRAN,FORM10P4        * Big number so no roundoff errors
          DIV       TEN6,FORM10P4            * 16 transactions per page
          MOVE      FORM10P4,KEY15           * Exact DIM copy so no roundup
          MOVE      KEY15,KEY10              * Only mantissa required
          UNPACK    KEY10,DIM6,DIM4          * DIM6 dummy variable
          REP       " 0",DIM4                * In case DIM4=SP4
          MOVE      DIM4,MMAXPAGE            * DIM4 to FORM4 - exact copy
          MOVE      FORM10P4,FORM0P4         * Remove mantissa
          MOVE      FORM0P4,FORM10P4         * Use only fractions
          MULT      "10000",FORM10P4         * Remove fractions
          COMPARE   ZERO,FORM10P4            * Right on page boundary ?
          RETURN    IF EQUAL                 * Yes - exit
          ADD       ONE,MMAXPAGE
          RETURN
.
.
.------------------------------------------------------------------------------
.         I/O routines for temp file
.------------------------------------------------------------------------------
.
RDATMPR1  MOVE      ZERO,OVRCD
          RESET     KEY23
          READ      RCPTMPXX,KEY23;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDSTMPR1  MOVE      ZERO,OVRCD
          RESET     KEY23
          READ      RCPTMPXX,KEY23;;
          RETURN
.
RDTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY23
          READ      RCPTMPXX,KEY23;DIM5,ANS,RBCODE,RBREG,RBINV,RBAMT:
                                   RBPERDSC,RBDISC,RBOUTNDG,DIM10,DIM15,RBHOSP
          GOTO      OVERCOND IF OVER
          MOVE      ANS,RBTYPE
          RETURN
.
RDKTMPR1  MOVE      ZERO,OVRCD
          RESET     KEY23
          READKS    RCPTMPXX;DIM5,ANS,RBCODE,RBREG,RBINV,RBAMT:
                             RBPERDSC,RBDISC,RBOUTNDG,DIM10,DIM15,RBHOSP
          GOTO      OVERCOND IF OVER
          MOVE      ANS,RBTYPE
          RETURN
.
WRTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY23
          MOVE      RBTYPE,ANS
          WRITE     RCPTMPXX,KEY23;DIM5,ANS,RBCODE,RBREG,RBINV,RBAMT:
                                   RBPERDSC,RBDISC,RBOUTNDG,DIM10,DIM15,RBHOSP
          RETURN
.
UPTMPR1   MOVE      RBTYPE,ANS
          UPDATE    RCPTMPXX;DIM5,ANS,RBCODE,RBREG,RBINV,RBAMT:
                             RBPERDSC,RBDISC,RBOUTNDG,DIM10,DIM15,RBHOSP
          RETURN
.
DETMPR1   RESET     KEY23
          DELETE    RCPTMPXX,KEY23
          RETURN
.
RDATM2R1  MOVE      ZERO,OVRCD
          RESET     KEY18
          READ      RCPTM2XX,KEY18;ANS
          GOTO      OVERCOND IF OVER
          RETURN
+
.***************************************************************************
.*  OTRF0000  :  Open all required visit based files                       *
.***************************************************************************
OTRF0000  IF        FILENUM = 20
            CLOSE     PATVISA1
            OPEN      PATVISA1,PATH
          ENDIF
          IF        FILENUM = 51
            CLOSE     PATINVR1
            OPEN      PATINVR1,PATH
          ENDIF
.
OTRF9999  RETURN
.
+
          INC       TFILENAM                * Generate Temp File Name
          INC       IBASEQIO/INC            * Sequential Numbers File
          INC       WEBERRIO/INC            * Web Server Error Logging
.
          INC       RCPCIDDS
          INC       RCPCIDIO/INC
          INC       RCPREGDS
          INC       RCPREGIO/INC
          INC       RCPBULDS
          INC       RCPBULIO/INC
          INC       PATFNDDS
          INC       PATFN1IO/INC
          INC       PATINSDS
          INC       PATIN1IO/INC
          INC       PATINVIO/INC
          INC       PATGOVDS
          INC       PATGO1IO/INC
          INC       PATMA1IO/INC
          INC       PATVISIO/INC
          INC       PRIINVIO/INC
          INC       PATHOSIO/INC
          INC       KYRCPHOS                      * keyin Hospital
          INC       PATDPATH
          INC       STD001IO
.
