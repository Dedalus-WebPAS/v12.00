.******************************************************************************
.* System         : Accident and Emergency                                    *
.* Program        : IBAAAE75.PBL                                              *
.* Name           : Analysis of Attendance by Age and Sex                     *
.******************************************************************************
.* Date           : 24/09/1993                                                *
.* Author         : Justin 'The Pom' Coates                                   *
.* Function       : To report all attendances for a particular coded field    *
.*                  by age and sex                                            *
.* Modifications  :                                                           *
.*                                                                            *
.*       V10.04.01  07/03/2014  Ania P                CAR 261630              *
.*                  Remove the use of PORT for temp file names                *
.*        V5.08.01  23/08/2000  Caleb Sharman                                 *
.*                  Changed Health Fund variables to be 8 chars               *
.*        V5.01.02  12/11/93  ROD                                             *
.*                  Fixed bug not printing age 75+ data correctly             *
.*        V5.01.03  30/11/93  ROD                                             *
.*                  Allow "?" on Category                                     *
.*        V5.01.04  10/01/94  ROD                                             *
.*                  Allow fields 4 digits and grand totals 5 digits           *
.*        V5.01.05  20/01/94  ROD                                             *
.*                  Change CCITEM to FORM4 since needed 4 digits              *
.******************************************************************************
.
          INC       STD001FD
          INC       AAEDE1FD/INC
          INC       PATCODFD/INC
          INC       PATMA1FD/INC
.
          INC       IBASEQFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.         temp file
.
TEMPA     IFILE     SQL, FIXED=124, KEY="U1-2,3-5"
KEYA      INIT      " 124 U1-2,3-5"
.Name     Type      Length  Phys.  Start  Description
.-------  -----     ------  -----  -----  ----------------------------------
XCATG     DIM       2          2       1  Category
XCODE     DIM       3          3       3  Code
.
DXNAM     DIM       4          4       6  New attendance - Age 0-4 - Males
DXNAF     DIM       4          4      10  New attendance - Age 0-4 - Females
DXRAM     DIM       4          4      14  Re-attenders   - Age 0-4 - Males
DXRAF     DIM       4          4      18  Re-attenders   - Age 0-4 - Females
.
DXNBM     DIM       4          4      22  New attendance - Age 5-14 - Males
DXNBF     DIM       4          4      26  New attendance - Age 5-14 - Females
DXRBM     DIM       4          4      30  Re-attenders   - Age 5-14 - Males
DXRBF     DIM       4          4      34  Re-attenders   - Age 5-14 - Females
.
DXNCM     DIM       4          4      38  New attendance - Age 15-44 - Males
DXNCF     DIM       4          4      42  New attendance - Age 15-44 - Females
DXRCM     DIM       4          4      46  Re-attenders   - Age 15-44 - Males
DXRCF     DIM       4          4      50  Re-attenders   - Age 15-44 - Females
.
DXNDM     DIM       4          4      54  New attendance - Age 45-64 - Males
DXNDF     DIM       4          4      58  New attendance - Age 45-64 - Females
DXRDM     DIM       4          4      62  Re-attenders   - Age 45-64 - Males
DXRDF     DIM       4          4      66  Re-attenders   - Age 45-64 - Females
.
DXNEM     DIM       4          4      70  New attendance - Age 65-74 - Males
DXNEF     DIM       4          4      74  New attendance - Age 65-74 - Females
DXREM     DIM       4          4      78  Re-attenders   - Age 65-74 - Males
DXREF     DIM       4          4      82  Re-attenders   - Age 65-74 - Females
.
DXNFM     DIM       4          4      86  New attendance - Age 75+ - Males
DXNFF     DIM       4          4      92  New attendance - Age 75+ - Females
DXRFM     DIM       4          4      96  Re-attenders   - Age 75+ - Males
DXRFF     DIM       4          4     100  Re-attenders   - Age 75+ - Females
.
DXNTM     DIM       5          5     104  New attendance - Total   - Males
DXNTF     DIM       5          5     109  New attendance - Total   - Females
DXRTM     DIM       5          5     114  Re-attenders   - Total   - Males
DXRTF     DIM       5          5     119  Re-attenders   - Total   - Females
.End of Record                       124
.
XNAM      FORM      4
XNAF      FORM      4
XRAM      FORM      4
XRAF      FORM      4
XNBM      FORM      4
XNBF      FORM      4
XRBM      FORM      4
XRBF      FORM      4
XNCM      FORM      4
XNCF      FORM      4
XRCM      FORM      4
XRCF      FORM      4
XNDM      FORM      4
XNDF      FORM      4
XRDM      FORM      4
XRDF      FORM      4
XNEM      FORM      4
XNEF      FORM      4
XREM      FORM      4
XREF      FORM      4
XNFM      FORM      4
XNFF      FORM      4
XRFM      FORM      4
XRFF      FORM      4
XNTM      FORM      5
XNTF      FORM      5
XRTM      FORM      5
XRTF      FORM      5
.
.         program variables
.
CDFRDATE  DIM       8
CDFRCATG  DIM       2
CDTODATE  DIM       8
CDTOCATG  DIM       2
CFNAMEA   DIM       8
CHCKCNT   FORM      2
CHCKCATG  DIM       2
CHCKCODE  DIM       3
CMDLINE   DIM       80
COUNT     FORM      2
CURRCATG  DIM       2
DESC16    DIM       16
FORM5     FORM      5
LINETL    FORM      4         * line total
NEWATT    FORM      1         * 1=new attender
PDESC1    DIM       16
PDESC2    DIM       16
PRBLANK   FORM      1         * 1 = print a blank line first
PRFRDATE  DIM       10
PRFRCATG  DIM       6
PRTODATE  DIM       10
PRTOCATG  DIM       6
TODAY     DIM       8
TOVRCD    FORM      1
UPDREC    FORM      2         * which record to update
.
.         list of valid categories 
.
CATA      INIT      "A "
CATA1     INIT      "A1" 
CATA2     INIT      "A2" 
CATA3     INIT      "A3" 
CATA4     INIT      "A4" 
CATA5     INIT      "A5" 
CATAE     INIT      "AE" 
CATAI     INIT      "AI" 
CATAP     INIT      "AP" 
CATAR     INIT      "AR" 
CATCL     INIT      "CL"
CATEA     INIT      "EA"
CATEP     INIT      "EP" 
CATES     INIT      "ES"
CATEW     INIT      "EW" 
CATU1     INIT      "U1"
.
.         program constants
.
COLUMN    FORM      "17"
FINISH    INIT      "Finish"
ISBUILD   INIT      "isbuild "
ISERASE   INIT      "iserase "
PRFIXA    INIT      "AAE75A"
START     INIT      "Start "
Z2        INIT      "zz"
Z3        INIT      "zzz"
.
PRGID     INIT      "IBAAAE75"
PRGNAM    INIT      "Analysis Of Attendance By Age And Sex"
VERSION   INIT      "V12.00.00"
.
.*********************************************************************
.         mainline code
.*********************************************************************
ML0000    CALL      INIT0000
.
ML1000    CALL      OPTN0000                * run report ??
          BRANCH    EXIT,ML9995             * exit
.
ML2000    CALL      KDAT0000                * enter date range
          BRANCH    EXIT,ML1000             * nothing entered
.
          CALL      CATG0000                * enter doctor range
.
          CALL      CONTQST
          BRANCH    CEXIT,ML4000,ML2000,ML1000
.
ML4000    CALL      GDAT0000                * get the data
          CALL      REPT0000                * produce report
          GOTO      ML1000
.
ML9995    CALL      DTPA0000
ML9999    CHAIN     PGM
+
.*********************************************************************
.         initilisation
.*********************************************************************
INIT0000  CALL      DISPHEAD
          DISPLAY   *P58:24,"aaede1af"
          OPEN      AAEDE1A3,"aaede1af"
          DISPLAY   *P58:24,"patcodes"
          OPEN      PATCODE1,"patcodes"
          DISPLAY   *P58:24,"patma1af"
          OPEN      PATMA1A1,"patma1af"
          DISPLAY   *P58:24,"patmx1af"
          OPEN      PATMX1A1,"patmx1af"
.
          CALL      TFILENAM
          PACK      CFNAMEA,TFILNAME,SP70
.
INIT9999  RETURN
+
.*********************************************************************
.         run the option ??
.*********************************************************************
OPTN0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = Run report":
                    *P1:7,"Select option : ";
OPTN1000  KEYIN     *P17:7,*V2LON,MOPTION
          MOVE      ONE,EXIT
          COMPARE   ZERO,MOPTION
          GOTO      OPTN9999 IF EQUAL
          MOVE      ZERO,EXIT
          BRANCH    MOPTION,OPTN9999
          BEEP
          GOTO      OPTN1000
OPTN9999  RETURN
+
.*********************************************************************
.*        Enter the date ranges                                      *
.*        Returns : EXIT = 1      exit chosen                        * 
.*                  CDFRDATE      starting date  ccyymmdd            *
.*                  CDTODATE      ending date    ccyymmdd            *
.*                  PRFRDATE      starting date  dd/mm/ccyy          *
.*                  PRTODATE      ending date    dd/mm/ccyy          *
.*********************************************************************
KDAT0000  DISPLAY   *P1:08,*EF:
                    *P1:09,"From date     : ",*EL:
                    *P1:10,"To   date     : ",*EL;
          MOVE      ONE,CCANLDTE            * blank cancel default
          MOVE      ONE,CDEFDTE             * enter once for default
          MOVE      ZERO,CHIGHLT            * use highlight
.
.         enter starting date
.
KDAT1000  MOVE      "09",CVERT              * row
          MOVE      COLUMN,CCOL             * column
          UNPACK    SP6,CYEAR,CMON,CDAY     * no defaults
          MOVE      CCC,CCENT
.
          CALL      KEYDATE
          BRANCH    OVRCD,KDAT9000          * nothing entered
          BRANCH    CQUEST,KDAT1000
.
          PACK      CDFRDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",CDFRDATE           * set up start date
          CALL      PACDATE
          MOVE      CPCDATE,PRFRDATE         * formatted start date
.
          MATCH     CDFRDATE,TODAY
          GOTO      KDAT2000 IF NOT LESS    * date is <= current date
.
          DISPLAY   *P1:24,*B,"Date must not be after current date.  ",*EL;
          CALL      HITENTER 
          GOTO      KDAT1000
.
.         enter ending date (default to starting date)
.
KDAT2000  MOVE      "10",CVERT              * row
          MOVE      COLUMN,CCOL             * column
          UNPACK    CDFRDATE,CCENT,CYEAR,CMON,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,KDAT1000          * nothing entered
          BRANCH    CQUEST,KDAT2000
.
          PACK      CDTODATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",CDTODATE           * set up end date
          CALL      PACDATE
          MOVE      CPCDATE,PRTODATE         * formatted end date
.
          MATCH     CDFRDATE,CDTODATE
          GOTO      KDAT3000 IF NOT LESS    * date is <= start date
.
          DISPLAY   *P1:24,*B,"Ending date must be after Starting date.  ",*EL;
          CALL      HITENTER 
          GOTO      KDAT2000
.
.         check end date is before current date
.
KDAT3000  MATCH     CDTODATE,TODAY
          GOTO      KDAT8000 IF NOT LESS    * date is <= current date
.
          DISPLAY   *P1:24,*B,"Date must not be after current date.  ",*EL;
          CALL      HITENTER 
          GOTO      KDAT2000
.
KDAT8000  MOVE      ZERO,EXIT               * valid dates
          GOTO      KDAT9999
.
KDAT9000  MOVE      ONE,EXIT                * exit selected
.
KDAT9999  RETURN
+
.*********************************************************************
.         keyin category ranges
.*********************************************************************
CATG0000  DISPLAY   *P1:11,*EF:
                    *P1:12,"From Category : ",*EL:
                    *P1:13,"To   Category : ",*EL;
.
.         enter the from code
.
          MOVE      "12",EVERT
          MOVE      COLUMN,ECOL
          MOVE      SP2,CKYIDEF2
          CALL      KCATG000
          COMPARE   TWO,EXIT
          GOTO      CATG9100 IF EQUAL       * exitchar entered
.
          PACK      TCODE,TCODE,SP6
          MOVE      TCODE,CDFRCATG        * from code
          MOVE      TCODE,PRFRCATG        * from print code
          MATCH     SP2,TCODE
          IF        @EQUAL
            DISPLAY   *PCOLUMN:EVERT,*V2LON,START
            MOVE      START,PRFRCATG
          ELSE
            DISPLAY   *PCOLUMN:EVERT,*V2LON,TCODE,*HOFF,SP3,TDESC
          ENDIF
.
.         enter the to code
.
CATG2000  MOVE      "13",EVERT
          MOVE      COLUMN,ECOL
          MOVE      CDFRCATG,CKYIDEF2
          CALL      KCATG000
          COMPARE   TWO,EXIT
          GOTO      CATG9100 IF EQUAL       * exitchar entered
.
          PACK      TCODE,TCODE,SP6
          MOVE      TCODE,CDTOCATG        * set the value
          MOVE      TCODE,PRTOCATG        * to print code
          MATCH     SP6,TCODE
          IF        @EQUAL
            DISPLAY   *PCOLUMN:EVERT,*V2LON,FINISH
            MOVE      Z2,CDTOCATG
            MOVE      FINISH,PRTOCATG
          ELSE
            DISPLAY   *PCOLUMN:EVERT,*V2LON,TCODE,*HOFF,SP3,TDESC
          ENDIF
.
          MOVE      ZERO,EXIT
          MATCH     CDFRCATG,CDTOCATG
          GOTO      CATG9999 IF NOT LESS    * end >= start so OK
.
          DISPLAY   *P1:24,*B,"Invalid range.  ",*EL;
          CALL      HITENTER
          GOTO      CATG0000
.
CATG9100  MOVE      ONE,EXIT
CATG9999  RETURN
+
.*********************************************************************
.         get the data for the report
.*********************************************************************
GDAT0000  DISPLAY   *P1:24,*EL,"Obtaining details..."
          CLOCK     TIME,CTIMEIS
          CALL      CTPA0000                * create temp file
          PACK      KEY21,CDFRDATE,SP20
          CALL      RDSDETA3
.
GDAT1000  CALL      RDKDETA3
          BRANCH    OVRCD,GDAT9999          * end of file
          MATCH     ADADATE,CDTODATE
          GOTO      GDAT9999 IF LESS        * after end date
.
          DISPLAY   *P41:24,ADADATE,ADANUMB
          MOVE      ADAURNO,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,GDAT1000          * invalid patient
.
. -----------------------------------------------------------------
. ------- now check each category available to see if valie -------
. -----------------------------------------------------------------
.
          MOVE      ZERO,CHCKCNT            * initiliase search category
GDAT2000  ADD       ONE,CHCKCNT
          COMPARE   TEN7,CHCKCNT
          GOTO      GDAT4000 IF NOT LESS    * finished 
.
          LOAD      CHCKCATG,CHCKCNT,CATA,CATA1,CATA2,CATA3,CATA4:
                                     CATA5,CATAE,CATAI,CATAP,CATAR:
                                     CATCL,CATEA,CATEP,CATES,CATEW,CATU1
.
          PACK      KEY5,CHCKCATG,SP3
          CALL      RDCODE1
          BRANCH    OVRCD,GDAT2000          * category not set up
          MATCH     SP20,TDESC
          GOTO      GDAT2000 IF EQUAL       * category not set up
.
          LOAD      CHCKCODE,CHCKCNT,ADACLASS,ADAUSR1,ADAUSR2,ADAUSR3,ADAUSR4:
                                    ADAUSR5,AEDATESI,AEDAINIT,AEDAPLIN,AEDARTAS:
                                     ADACOMP,ADAMODE,ADAPREV,ADASIT,ADAWAIT:
                                     ADAINSUR
.
          MATCH     CDFRCATG,TCODE
          GOTO      GDAT2000 IF LESS        * before FROM category
          MATCH     TCODE,CDTOCATG
          GOTO      GDAT2000 IF LESS        * after  TO   category
.
. ------- see if a new or re-attender -------
.
          MOVE      SP1,TCINDC1
          PACK      KEY5,CATEP,ADAPREV
          CALL      RDCODE1
          MATCH     "1",TCINDC1
          IF        @EQUAL
            MOVE      ONE,NEWATT              * new attendance
          ELSE
            MOVE      ZERO,NEWATT             * re-attendance
          ENDIF
.
. ------- post to temp file -------
.
GDAT3000  PACK      KEY5,CHCKCATG,CHCKCODE     * normal line
          CALL      PTMP0000
          PACK      KEY5,CHCKCATG,Z3           * category total
          CALL      PTMP0000
          GOTO      GDAT2000
.
GDAT4000  PACK      KEY5,Z2,Z3                 * grand total
          CALL      PTMP0000
          GOTO      GDAT1000
.
GDAT9999  RETURN
+
.*********************************************************************
.         post to the temp file
.*********************************************************************
PTMP0000  CALL      CLRV0000 
          UNPACK    KEY5,XCATG,XCODE
          CALL      RDTEMPA
          MOVE      OVRCD,TOVRCD
.
. ------- work out the age range -------
.
          IF        PSAGE <= 4
            MOVE      ZERO,UPDREC             * first age range
            GOTO      PTMP1000
          ENDIF
          IF        PSAGE <= 14
            MOVE      FOUR,UPDREC             * second age range
            GOTO      PTMP1000
          ENDIF
          IF        PSAGE <= 44
            MOVE      EIGHT,UPDREC            * third age range
            GOTO      PTMP1000
          ENDIF
          IF        PSAGE <= 64
            MOVE      TEN2,UPDREC             * fourth age range
            GOTO      PTMP1000
          ENDIF
          IF        PSAGE <= 74
            MOVE      TEN6,UPDREC             * fifth age range
            GOTO      PTMP1000
          ENDIF
          MOVE      TWENTY,UPDREC             * sixth age range
.
PTMP1000  IF        NEWATT = ONE
            MATCH     ANSM,PSEX
            IF        @EQUAL
              ADD       ONE,UPDREC              * New attender - Male
              ADD       ONE,XNTM                * add to total
            ELSE
              ADD       TWO,UPDREC              * New attender - Female
              ADD       ONE,XNTF                * add to total
            ENDIF
          ELSE
            MATCH     ANSM,PSEX
            IF        @EQUAL
              ADD       THREE,UPDREC            * Re-attender - Male
              ADD       ONE,XRTM                * add to total
            ELSE
              ADD       FOUR,UPDREC             * Re-attender - Female
              ADD       ONE,XRTF                * add to total
            ENDIF
          ENDIF
.
          LOAD      FORM4A,UPDREC,XNAM,XNAF,XRAM,XRAF,XNBM,XNBF,XRBM,XRBF:
                                  XNCM,XNCF,XRCM,XRCF,XNDM,XNDF,XRDM,XRDF:
                                  XNEM,XNEF,XREM,XREF,XNFM,XNFF,XRFM,XRFF
          ADD       ONE,FORM4A
          STORE     FORM4A,UPDREC,XNAM,XNAF,XRAM,XRAF,XNBM,XNBF,XRBM,XRBF:
                                  XNCM,XNCF,XRCM,XRCF,XNDM,XNDF,XRDM,XRDF:
                                  XNEM,XNEF,XREM,XREF,XNFM,XNFF,XRFM,XRFF
.
PTMP5000  IF        TOVRCD = ONE
            CALL      WRTEMPA
          ELSE
            CALL      UPTEMPA
          ENDIF
.
PTMP9999  RETURN
+
.*********************************************************************
.         print the report
.*********************************************************************
REPT0000  DISPLAY   *P1:24,*EL,"Printing report..."
          MOVE      "**",CURRCATG
          MOVE      "70",CLNO
          MOVE      ZERO,CPAGENO
          MOVE      SP20,KEY5
          CALL      RSTEMPA
.
REPT1000  CALL      RKTEMPA
          BRANCH    OVRCD,REPT9000 
.
          CALL      PLIN0000
          GOTO      REPT1000
.
REPT9000  IF        CPAGENO <> ZERO
            CALL      UND132
          ELSE
            CALL      HEAD0000
          ENDIF
          PRINT     *N,"*** End of Report ***",*N
.
REPT9999  RETURN
+
.*********************************************************************
.         print a new page
.*********************************************************************
HEAD0000  CALL      HEAD132
          PRINT     *40,"Date     range : ",PRFRDATE," to ",PRTODATE
          PRINT     *40,"Category range : ",PRFRCATG," to ",PRTOCATG,*N
. 
          PACK      KEY5,XCATG,SP3
          CALL      RDCODE1
          MOVE      TDESC,DESC16
          CALL      UND132
          PRINT     *2,"(",XCATG,")",*26,"0- 4            5-14   ":
                       "        15-44           45-64           65-74":
                       "            75 +             Total":
                    *N,*2,DESC16,*22,"M    F    T     M    F    T     M    F":
                    "    T     ":
                    "M    F    T     M    F    T     M    F    T      M     F":
                    "     T"
          CALL      UND132
          MOVE      "11",CLNO
          MOVE      ZERO,PRBLANK            * dont print a blank line
.
HEAD9999  RETURN
+
.*********************************************************************
.         print a line of the report
.*********************************************************************
PLIN0000  DISPLAY   *P41:24,XCATG,XCODE
          MOVE      ZERO,FORM1              * dont print extra blank line
          MATCH     Z2,XCATG
          GOTO      PLIN5000 IF EQUAL       * grand total
.
          MATCH     Z3,XCODE
          GOTO      PLIN4000 IF EQUAL       * category total
.
          MATCH     CURRCATG,XCATG
          IF        !@EQUAL
            MOVE      "70",CLNO               * set for new page
          ENDIF
.
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
.
          MOVE      "Unknown Code",TDESC
          MATCH     SP3,XCODE
          IF        !@EQUAL
            MOVE      "Invalid Code",TDESC
            PACK      KEY5,XCATG,XCODE
            CALL      RDCODE1
          ENDIF
          MOVE      XCODE,PDESC1
          MOVE      TDESC,PDESC2
          MOVE      ONE,FORM1               * print extra blank line
          GOTO      PLIN8000
.
. ------- category total -------
.
PLIN4000  MOVE      "Sub   1st Attend",PDESC1
          MOVE      "Total  Re-Attend",PDESC2
          CALL      UND132
          MOVE      ZERO,PRBLANK
          GOTO      PLIN8000
.
. ------- grand total -------
.
PLIN5000  MOVE      "Grand 1st Attend",PDESC1
          MOVE      "Total  Re-Attend",PDESC2
          MOVE      ZERO,PRBLANK
          CALL      UND132
.
. ------- print the line -------
.
PLIN8000  IF        PRBLANK=ONE
            PRINT    *N;
            ADD       ONE,CLNO
          ENDIF
.
          ASSIGN    (XNAM+XNAF),LINETL
          PRINT     *2,PDESC1,*19,XNAM,SP1,XNAF,SP1,LINETL,SP2;
          ASSIGN    (XNBM+XNBF),LINETL
          PRINT     XNBM,SP1,XNBF,SP1,LINETL,SP2;
          ASSIGN    (XNCM+XNCF),LINETL
          PRINT     XNCM,SP1,XNCF,SP1,LINETL,SP2;
          ASSIGN    (XNDM+XNDF),LINETL
          PRINT     XNDM,SP1,XNDF,SP1,LINETL,SP2;
          ASSIGN    (XNEM+XNEF),LINETL
          PRINT     XNEM,SP1,XNEF,SP1,LINETL,SP2;
          ASSIGN    (XNFM+XNFF),LINETL
          PRINT     XNFM,SP1,XNFF,SP1,LINETL,SP2;
          ASSIGN    (XNTM+XNTF),FORM5
          PRINT     XNTM,SP1,XNTF,SP1,FORM5
.
          ASSIGN    (XRAM+XRAF),LINETL
          PRINT     *2,PDESC2,*19,XRAM,SP1,XRAF,SP1,LINETL,SP2;
          ASSIGN    (XRBM+XRBF),LINETL
          PRINT     XRBM,SP1,XRBF,SP1,LINETL,SP2;
          ASSIGN    (XRCM+XRCF),LINETL
          PRINT     XRCM,SP1,XRCF,SP1,LINETL,SP2;
          ASSIGN    (XRDM+XRDF),LINETL
          PRINT     XRDM,SP1,XRDF,SP1,LINETL,SP2;
          ASSIGN    (XREM+XREF),LINETL
          PRINT     XREM,SP1,XREF,SP1,LINETL,SP2;
          ASSIGN    (XRFM+XRFF),LINETL
          PRINT     XRFM,SP1,XRFF,SP1,LINETL,SP2;
          ASSIGN    (XRTM+XRTF),FORM5
          PRINT     XRTM,SP1,XRTF,SP1,FORM5
.
          ADD       TWO,CLNO
          MOVE      ONE,PRBLANK             * print a blank line
          MOVE      XCATG,CURRCATG
.
PLIN9999  RETURN
+
.*********************************************************************
.         clear the temp file variables
.*********************************************************************
CLRV0000  MOVE      ZERO,XNAM
          MOVE      ZERO,XNAF
          MOVE      ZERO,XRAM
          MOVE      ZERO,XRAF
          MOVE      ZERO,XNBM
          MOVE      ZERO,XNBF
          MOVE      ZERO,XRBM
          MOVE      ZERO,XRBF
          MOVE      ZERO,XNCM
          MOVE      ZERO,XNCF
          MOVE      ZERO,XRCM
          MOVE      ZERO,XRCF
          MOVE      ZERO,XNDM
          MOVE      ZERO,XNDF
          MOVE      ZERO,XRDM
          MOVE      ZERO,XRDF
          MOVE      ZERO,XNEM
          MOVE      ZERO,XNEF
          MOVE      ZERO,XREM
          MOVE      ZERO,XREF
          MOVE      ZERO,XNFM
          MOVE      ZERO,XNFF
          MOVE      ZERO,XRFM
          MOVE      ZERO,XRFF
          MOVE      ZERO,XNTM
          MOVE      ZERO,XNTF
          MOVE      ZERO,XRTM
          MOVE      ZERO,XRTF
CLRV9999  RETURN
+
.*********************************************************************
.         Create a temp file
.*********************************************************************
CTPA0000  CALL      DTPA0000                * delete temp file
          CLEAR     CMDLINE                 * clear command line
          PACK      CMDLINE,ISBUILD,CFNAMEA,KEYA,SP30      * set command
          RESET     CMDLINE                 * reset FP
          EXECUTE   CMDLINE,TASKID          * build the temp file
          OPEN      TEMPA,CFNAMEA           * open the temp file
.
CTPA9999  RETURN
+
.*********************************************************************
.         Delete temp file A
.*********************************************************************
DTPA0000  CLOSE     TEMPA,DELETE            * close temp file
          CLEAR     CMDLINE                 * clear command line
          PACK      CMDLINE,ISERASE,CFNAMEA * set command line for erase
          RESET     CMDLINE                 * reset FP
          EXECUTE   CMDLINE,TASKID          * delete the temp file
.
DTPA9999  RETURN
+
.*********************************************************************
.         temp file I/O
.*********************************************************************
RSTEMPA   READ      TEMPA,KEY5;;
          RETURN
.
RDTEMPA   MOVE      ZERO,OVRCD
          READ      TEMPA,KEY5;XCATG,XCODE:
                               DXNAM,DXNAF,DXRAM,DXRAF:
                               DXNBM,DXNBF,DXRBM,DXRBF:
                               DXNCM,DXNCF,DXRCM,DXRCF:
                               DXNDM,DXNDF,DXRDM,DXRDF:
                               DXNEM,DXNEF,DXREM,DXREF:
                               DXNFM,DXNFF,DXRFM,DXRFF:
                               DXNTM,DXNTF,DXRTM,DXRTF
          GOTO      OVERCOND IF OVER
          MOVE      DXNAM,XNAM
          MOVE      DXNAF,XNAF
          MOVE      DXRAM,XRAM
          MOVE      DXRAF,XRAF
          MOVE      DXNBM,XNBM
          MOVE      DXNBF,XNBF
          MOVE      DXRBM,XRBM
          MOVE      DXRBF,XRBF
          MOVE      DXNCM,XNCM
          MOVE      DXNCF,XNCF
          MOVE      DXRCM,XRCM
          MOVE      DXRCF,XRCF
          MOVE      DXNDM,XNDM
          MOVE      DXNDF,XNDF
          MOVE      DXRDM,XRDM
          MOVE      DXRDF,XRDF
          MOVE      DXNEM,XNEM
          MOVE      DXNEF,XNEF
          MOVE      DXREM,XREM
          MOVE      DXREF,XREF
          MOVE      DXNFM,XNFM
          MOVE      DXNFF,XNFF
          MOVE      DXRFM,XRFM
          MOVE      DXRFF,XRFF
          MOVE      DXNTM,XNTM
          MOVE      DXNTF,XNTF
          MOVE      DXRTM,XRTM
          MOVE      DXRTF,XRTF
          RETURN
.
RKTEMPA   MOVE      ZERO,OVRCD
          READKS    TEMPA;XCATG,XCODE:
                          DXNAM,DXNAF,DXRAM,DXRAF:
                          DXNBM,DXNBF,DXRBM,DXRBF:
                          DXNCM,DXNCF,DXRCM,DXRCF:
                          DXNDM,DXNDF,DXRDM,DXRDF:
                          DXNEM,DXNEF,DXREM,DXREF:
                          DXNFM,DXNFF,DXRFM,DXRFF:
                          DXNTM,DXNTF,DXRTM,DXRTF
          GOTO      OVERCOND IF OVER
          MOVE      DXNAM,XNAM
          MOVE      DXNAF,XNAF
          MOVE      DXRAM,XRAM
          MOVE      DXRAF,XRAF
          MOVE      DXNBM,XNBM
          MOVE      DXNBF,XNBF
          MOVE      DXRBM,XRBM
          MOVE      DXRBF,XRBF
          MOVE      DXNCM,XNCM
          MOVE      DXNCF,XNCF
          MOVE      DXRCM,XRCM
          MOVE      DXRCF,XRCF
          MOVE      DXNDM,XNDM
          MOVE      DXNDF,XNDF
          MOVE      DXRDM,XRDM
          MOVE      DXRDF,XRDF
          MOVE      DXNEM,XNEM
          MOVE      DXNEF,XNEF
          MOVE      DXREM,XREM
          MOVE      DXREF,XREF
          MOVE      DXNFM,XNFM
          MOVE      DXNFF,XNFF
          MOVE      DXRFM,XRFM
          MOVE      DXRFF,XRFF
          MOVE      DXNTM,XNTM
          MOVE      DXNTF,XNTF
          MOVE      DXRTM,XRTM
          MOVE      DXRTF,XRTF
          RETURN
.
WRTEMPA   MOVE      XNAM,DXNAM
          MOVE      XNAF,DXNAF
          MOVE      XRAM,DXRAM
          MOVE      XRAF,DXRAF
          MOVE      XNBM,DXNBM
          MOVE      XNBF,DXNBF
          MOVE      XRBM,DXRBM
          MOVE      XRBF,DXRBF
          MOVE      XNCM,DXNCM
          MOVE      XNCF,DXNCF
          MOVE      XRCM,DXRCM
          MOVE      XRCF,DXRCF
          MOVE      XNDM,DXNDM
          MOVE      XNDF,DXNDF
          MOVE      XRDM,DXRDM
          MOVE      XRDF,DXRDF
          MOVE      XNEM,DXNEM
          MOVE      XNEF,DXNEF
          MOVE      XREM,DXREM
          MOVE      XREF,DXREF
          MOVE      XNFM,DXNFM
          MOVE      XNFF,DXNFF
          MOVE      XRFM,DXRFM
          MOVE      XRFF,DXRFF
          MOVE      XNTM,DXNTM
          MOVE      XNTF,DXNTF
          MOVE      XRTM,DXRTM
          MOVE      XRTF,DXRTF
          WRITE     TEMPA,KEY5;XCATG,XCODE:
                               DXNAM,DXNAF,DXRAM,DXRAF:
                               DXNBM,DXNBF,DXRBM,DXRBF:
                               DXNCM,DXNCF,DXRCM,DXRCF:
                               DXNDM,DXNDF,DXRDM,DXRDF:
                               DXNEM,DXNEF,DXREM,DXREF:
                               DXNFM,DXNFF,DXRFM,DXRFF:
                               DXNTM,DXNTF,DXRTM,DXRTF
          RETURN
.
UPTEMPA   MOVE      XNAM,DXNAM
          MOVE      XNAF,DXNAF
          MOVE      XRAM,DXRAM
          MOVE      XRAF,DXRAF
          MOVE      XNBM,DXNBM
          MOVE      XNBF,DXNBF
          MOVE      XRBM,DXRBM
          MOVE      XRBF,DXRBF
          MOVE      XNCM,DXNCM
          MOVE      XNCF,DXNCF
          MOVE      XRCM,DXRCM
          MOVE      XRCF,DXRCF
          MOVE      XNDM,DXNDM
          MOVE      XNDF,DXNDF
          MOVE      XRDM,DXRDM
          MOVE      XRDF,DXRDF
          MOVE      XNEM,DXNEM
          MOVE      XNEF,DXNEF
          MOVE      XREM,DXREM
          MOVE      XREF,DXREF
          MOVE      XNFM,DXNFM
          MOVE      XNFF,DXNFF
          MOVE      XRFM,DXRFM
          MOVE      XRFF,DXRFF
          MOVE      XNTM,DXNTM
          MOVE      XNTF,DXNTF
          MOVE      XRTM,DXRTM
          MOVE      XRTF,DXRTF
          UPDATE    TEMPA;XCATG,XCODE:
                          DXNAM,DXNAF,DXRAM,DXRAF:
                          DXNBM,DXNBF,DXRBM,DXRBF:
                          DXNCM,DXNCF,DXRCM,DXRCF:
                          DXNDM,DXNDF,DXRDM,DXRDF:
                          DXNEM,DXNEF,DXREM,DXREF:
                          DXNFM,DXNFF,DXRFM,DXRFF:
                          DXNTM,DXNTF,DXRTM,DXRTF
          RETURN
+
.*********************************************************************
.         keyin a category
.*********************************************************************
KCATG000  MOVE      CKYIDEF2,TCODE
          KEYIN     *PECOL:EVERT,*V2LON,*RV,TCODE:
                    *PECOL:EVERT,*DV,TCODE
          PACK      TCODE,TCODE,SP2
.
KCATG050  MOVE      ONE,EXIT
          MATCH     SP2,TCODE
          GOTO      KCATG999 IF EQUAL       * nothing entered
.
          MATCH     QUEST,TCODE             * "?" input?
          GOTO      KCATG100 IF NOT EQUAL
.
          MOVE      ZERO,HLEF               * save whole screen
          CALL      GETSCR00
          CALL      DCTQ0000                * display valid categorys after "?"
          CALL      KCTQ0000                * keyin category code after "?"
          CALL      PUTSCR00
          GOTO      KCATG050
.
KCATG100  MOVE      ZERO,EXIT
          PACK      KEY5,TCODE,SP3
          CALL      RDCODE1
          COMPARE   ZERO,OVRCD
          GOTO      KCATG390 IF EQUAL       * valid code
.
          DISPLAY   *P1:24,*B,"Invalid category.  ",*EL;
          CALL      HITENTER
          GOTO      KCATG000
.
. make sure category is a valid aae (hard coded in this program)
.
KCATG390  MOVE      ZERO,COUNT
KCATG400  ADD       ONE,COUNT
          COMPARE   TEN7,COUNT
          GOTO      KCATG500 IF NOT LESS
          LOAD      KEY2,COUNT,CATA,CATA1,CATA2,CATA3,CATA4:
                               CATA5,CATAE,CATAI,CATAP,CATAR:
                               CATCL,CATEA,CATEP,CATES,CATEW,CATU1
          MATCH     KEY2,TCODE
          GOTO      KCATG400 IF NOT EQUAL
          GOTO      KCATG999
.
KCATG500  DISPLAY   *P1:24,*EL,*B,"Invalid Category.  ";
          CALL      HITENTER
          GOTO      KCATG000
.
KCATG999  RETURN
+
.***********************************************************************
.*  DCTQ0000  :  display valid category's to choose from after "?"     *
.***********************************************************************
DCTQ0000  DISPLAY   *P1:4,*EF,*P5:4,*V2LON,*ULON," Valid Categories "
.
          MOVE      ONE,COUNT
          MOVE      FIVE,CVERT
          WHILE     COUNT<17
.
DCTQ1000    LOAD      KEY2,COUNT,CATA,CATA1,CATA2,CATA3,CATA4:
                                 CATA5,CATAE,CATAI,CATAP,CATAR:
                                 CATCL,CATEA,CATEP,CATES,CATEW,CATU1
.
            MOVE      "<Missing Cat.>",TDESC
            PACK      KEY5,KEY2,SP3
            CALL      RDCODE1
            BRANCH    OVRCD,DCTQ2000          * category not set up
            MATCH     SP20,TDESC
            IF        @EQUAL
              MOVE      "<Missing Desc.>",TDESC
            ENDIF
.
DCTQ2000    DISPLAY   *P1:CVERT,*V2LON,COUNT,*HOFF,". ",KEY2,SP2,TDESC
            ADD       ONE,CVERT
            ADD       ONE,COUNT
          DO
.
DCTQ9999  RETURN
+
.***********************************************************************
.*  KCTQ0000  :  keyin a category after "?"                            *
.***********************************************************************
KCTQ0000  DISPLAY   *P1:24,*EL,"Keyin Category (1-16) : "
          KEYIN     *P25:24,*V2LON,COUNT:
                    *P25:24,*DV,COUNT
.
          IF        (COUNT<0) | (COUNT>16)
            BEEP
            GOTO      KCTQ0000
          ENDIF
.
          IF        COUNT=0
            MOVE      SP2,TCODE                   * nothing input
            GOTO      KCTQ9999
          ENDIF
.
          LOAD      TCODE,COUNT,CATA,CATA1,CATA2,CATA3,CATA4:
                                CATA5,CATAE,CATAI,CATAP,CATAR:
                                CATCL,CATEA,CATEP,CATES,CATEW,CATU1
.
          PACK      KEY5,TCODE,SP3
          CALL      RDCODE1
          BRANCH    OVRCD,KCTQ9000          * category not set up
          GOTO      KCTQ9999
.
KCTQ9000  DISPLAY   *P1:24,*EL,*B,"Category not on file.  ";
          CALL      HITENTER
          GOTO      KCTQ0000
.
KCTQ9999  RETURN
+
.............................................................................
          INC       STD001IO
          INC       AAEDE1IO/INC
          INC       PATCODIO/INC
          INC       PATMA1IO/INC
.
          INC       TFILENAM
          INC       IBASEQIO/INC
          INC       WEBERRIO/INC

