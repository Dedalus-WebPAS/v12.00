.*****************************************************************************
.* System    :   Patient Management System                                   *
.* Program   :   CONVWPRO                                                    *
.* Desc      :   Data Migration Program to upload W/L Procedure data from    *
.*               a third party legacy system into the W/L webPAS module.     *
.*****************************************************************************
.* Date      :   13/08/2015                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program will loop through the convwpro.txt file and    *
.*               for each valid record found, it will write or update a      *
.*               watproaf record for the patient.                            *
.* Mods      :                                                               *
.*        V10.06.01  28/08/2015  Steve Armstrong   CAR 320679                *
.*                   Fixed setting of Y/N fields for WAITACTV.               *
.*        V10.06.00  14/08/2015  Steve Armstrong   CAR 320679                *
.*                   Created program                                         *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       WATPROFD/INC
.
.         W/L Procedure file layout - convwpro.txt
.
WTPROUPL  FILE      HL7, FIXED=4000         * Pipe delimited upload file
.                                             4096 is maximum
.
.         Fields must be pipe delimited and in the following sequence.
.         Field lengths are irrelevant other than the fact that where
.         a field is longer than allowed, the extra data will be ignored.
.
WAITPCOD  DIM       9     1    Procedure Code                (watproaf.wpcode)
.PIPE     DIM       1     10   Field Delimeter
WAITDESC  DIM       80    11   Description                   (watproaf.wpdesc)
.PIPE     DIM       1     91   Field Delimeter
WAITTIME  DIM       5     92   Procedure Time                (watproaf.wptime)
.PIPE     DIM       1     97   Field Delimeter
WAITELOS  DIM       3     98   Estimated LOS in Hospital     (watproaf.wpestls)
.PIPE     DIM       1     101  Field Delimeter
WAITPGRP  DIM       3     102  Procedure Group (Cat WG)      (watproaf.wpgrp)
.PIPE     DIM       1     105  Field Delimeter
WAITRHAT  DIM       6     106  RHA Threshold Level           (watproaf.wprhat)
.PIPE     DIM       1     112  Field Delimeter
WAITCHET  DIM       6     113  CHE Threshold Level           (watproaf.wpchet)
.PIPE     DIM       1     119  Field Delimeter
WAITHDPE  DIM       9     120  Procedure code HDP Equivalent (watproaf.wtwphdpe)
.PIPE     DIM       1     129  Field Delimeter
WAITDRGC  DIM       6     130  DRG Code                      (watproaf.wtwpdrgc)
.PIPE     DIM       1     136  Field Delimeter
WAITACTV  DIM       1     137  Status (0=Active, 1=Inactive) (watproaf.wtwpactv)
.
. End of Record           138
.
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ADDCOUNT  FORM      8             * added record count
.
CODCOUNT  FORM      8             * code error record count
.
PROFOUND  FORM      1             * procedure found flag
.                                    0 = procedure found
.                                    1 = procedure not found
DUPCOUNT  FORM      8             * duplicate record count
.
ERORDESC  DIM       70
ERORFLAG  FORM      1             * Field Validation Error Flag
.                                     0 = No Errors on Field Validations
.                                     1 = Errors on Field Validations
.
FORM10    FORM      10
.
MANCOUNT  FORM      8             * mandatory field error record count
.
NUMCOUNT  FORM      8             * numeric error record count
.
RECCOUNT  FORM      8             * record read counter
.
TEMPCATG  DIM       6             * Category (or HF for HF Table validation)
TEMPCODE  DIM       10            * Coded field (length = max code field length)
TEMPTYPE  FORM      1             * Type of coded field
.                                     1 = patcodes
TMPFIELD  DIM       8             * Field name
TMPSTRNG  DIM       40            * Temporary string (max field length)
.
UPDCOUNT  FORM      8             * updated record count
UPDTFLAG  FORM      1             * Update Flag
.                                   0 = Updates not allowed
.                                   1 = Updates allowed
.
VCHKFLAG  FORM      1             * Validation flag
.                                     0 = writing data to database
.                                     1 = only validating import data file
.
.
.
. PROGRAM CONSTANTS
. -----------------
PIPE      INIT      "|"
.
.
.
PRGID     INIT      "CONVWPRO"
PRGNAM    INIT      "Upload Waiting List Procedures"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000       * proceed with upload
.
MAIN1000  CALL      OPEN0000               * open upload file
          BRANCH    EXIT,MAIN0100          * file not found
.
          CALL      ASKQ0000               * validation run only ?
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN2000  CALL      UPLD0000               * process upload
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"watproaf";
          OPEN      WATPROA1,"watproaf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,EIGHTY;*250,PTCNHDPS
.
          MOVE      ONE,CNOUNDLN
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run data upload                         *
.*                        TRUE  (1)  Exit selected                           *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Data Upload"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run data upload
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               OPEN0000              Called by: MAIN0000   *
.*                  Open upload file (convwpro.txt)                          *
.*****************************************************************************
.
OPEN0000  MOVE      ZERO,OVRCD
.
          TRAP      OVERCOND IF IO
          OPEN      WTPROUPL,"convwpro"
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN9100
.
          MOVE      ZERO,EXIT
          GOTO      OPEN9999
.
OPEN9100  DISPLAY   *P1:24,*EL,*B,"Upload file - convwpro.txt - not found.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
OPEN9999  RETURN
+
.*****************************************************************************
.*                               ASKQ0000              Called by: MAIN0000   *
.*                  Ask if running validation only                           *
.* Returns: VCHKFLAG  - validation flag                                      *
.*                       0 = normal mode                                     *
.*                       1 = validation only mode                            *
.*****************************************************************************
.
ASKQ0000  MOVE      ANSY,ANS
          KEYIN     *P1:10,*EL,"Validation only (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") ?":
                    *P25:10,*V2LON,*RV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS                     * Y input ?
          IF        @EQUAL
            DISPLAY   *P25:10,*V2LON,DYES,*HOFF:
                      *P35:10,"(No data will be uploaded)"
            MOVE      ONE,VCHKFLAG               * yes
            GOTO      ASKQ5000
          ENDIF
.
          MATCH     ANSN,ANS                     * N input ?
          IF        @EQUAL
            DISPLAY   *P25:10,*V2LON,DNO,*HOFF:
                      *P35:10,"(Data will be uploaded)"
            MOVE      ZERO,VCHKFLAG              * yes
            GOTO      ASKQ5000
          ENDIF
.
          GOTO      ASKQ0000                     * invalid input
.
ASKQ5000  MOVE      ANSN,ANS
          KEYIN     *P1:11,*EL,"Allow updates   (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") ?":
                    *P25:11,*V2LON,*RV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS                     * Y input ?
          IF        @EQUAL
            DISPLAY   *P25:11,*V2LON,DYES,*HOFF
            MOVE      ONE,UPDTFLAG               * yes
            GOTO      ASKQ9999
          ENDIF
.
          MATCH     ANSN,ANS                     * N input ?
          IF        @EQUAL
           DISPLAY   *P25:11,*V2LON,DNO,*HOFF
            MOVE      ZERO,UPDTFLAG              * no
            GOTO      ASKQ9999
          ENDIF
.
          GOTO      ASKQ5000
.
ASKQ9999  RETURN
+
.******************************************************************************
.*                                  UPLD0000              Called by: MAIN0000 *
.*                  Process the W/L Procedure records                         *
.******************************************************************************
.
UPLD0000  CALL      IBACLOCK
.
          DISPLAY   *P1:13,"Processing ",*V2LON,"convwpro.txt",*HOFF:
                    *P1:15,"Started    : ",*V2LON,CTIMEIS,*HOFF:
                    *P1:17,"Procedure  : ":
                    *P1:18,"Records    : "
.
          MOVE      ZERO,RECCOUNT                * initialise records read
          MOVE      ZERO,ADDCOUNT                * initialise added record count
          MOVE      ZERO,CODCOUNT                * init. code error record count
          MOVE      ZERO,DUPCOUNT                * initialise dup. record count
          MOVE      ZERO,MANCOUNT                * init. mand error record count
          MOVE      ZERO,NUMCOUNT                * init. num error record count
          MOVE      ZERO,UPDCOUNT                * init. updated record count
.
          CALL      HEAD0000                     * Print the report header
.
.         Loop through upload file records
.
UPLD1000  READ      WTPROUPL,SEQ;WAITPCOD,WAITDESC,WAITTIME,WAITELOS,WAITPGRP:
                                 WAITRHAT,WAITCHET,WAITHDPE,WAITDRGC,WAITACTV
          GOTO      UPLD9000 IF OVER
.
          ADD       ONE,RECCOUNT                 * increment records read
          IF        (RECCOUNT%1000) = 0 | RECCOUNT = 1
            DISPLAY   *P14:17,*V2LON,WAITPCOD:
                      *P14:18,RECCOUNT;
          ENDIF
.
          CALL      POUT0000                     * pad out fields with spaces
.
          CALL      CLER0000                     * clear database variables
.
          CALL      MAND0000                     * check for Mandatory fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      VNUM0000                     * validate numeric fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      SETV0000                     * set up file variables
.
          CALL      CVAL0000                     * validate coded fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          BRANCH    PROFOUND,UPLD5000            * procedure not on file
.
          IF        UPDTFLAG = 0
            MOVE      "Procedure record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dup. record count
          ELSE
            BRANCH    VCHKFLAG,UPLD1000          * error checking only
            CALL      UPPROA1                    * write new record
            PROC      WATPKIUP                   * Update keyword index
            ADD       ONE,UPDCOUNT               * increment update record count
          ENDIF
.
          GOTO      UPLD1000                     * get next record
.
.         Add new procedure record
.
UPLD5000  BRANCH    VCHKFLAG,UPLD1000            * error checking only
          CALL      WRPROA1                      * write new record
          PROC      WATPKIUP                     * Update keyword index
          ADD       ONE,ADDCOUNT                 * increment added record count
.
          GOTO      UPLD1000                     * get next record
.
.         Upload completed
.
UPLD9000  ASSIGN    (CODCOUNT+DUPCOUNT+MANCOUNT+NUMCOUNT),FORM10
          IF        FORM10 > 0
            CALL      LINE0000                   * print bottom line if errors
          ENDIF
.
          COMPARE   CLNO,FIFTY5                  * room for stats ?
          CALL      HEAD0000 IF LESS             * no - new page req'd.
.
          CLOCK     TIME,CTIMEIS
          DISPLAY   *P14:18,*V2LON,RECCOUNT,*HOFF:
                    *P1:21,"Finished   : ",*V2LON,CTIMEIS
.
.         Warn the user if there were any records with errors
.
          IF        FORM10 > 0
            DISPLAY   *P1:22,*V2LON,*BLINKON,"Warning:  Records found with ":
                      "errors.  Refer to error report."
          ENDIF
.
          DISPLAY   *P1:24,*EL,*B,"Upload complete.  ";
          CALL      HITENTER
.
          PRINT     *N:
                    *1,"Total records read                    - ",RECCOUNT,*N:
                    *1,"Records added                         - ",ADDCOUNT,*N:
                    *1,"Records updated                       - ",UPDCOUNT,*N:
                    *1,"Duplicate Records detected            - ",DUPCOUNT,*N:
                    *1,"Records with invalid codes detected   - ",CODCOUNT,*N:
                    *1,"Records with blank mandatory fields   - ",MANCOUNT,*N:
                    *1,"Records with invalid numbers detected - ",NUMCOUNT:
                    *N,*N,*1,"*** End of Report ***"
.
UPLD9999  RETURN
+
.****************************************************************************
.*                             MAND0000                Called by: UPLD0000  *
.*                 Check for standard Mandatory fields                      *
.* Returns: EXIT   0 = all mandatory fields are populated                   *
.*                 1 = one or more mandatory fields are blank               *
.*          MANCOUNT - updated count of records with mandatory fields       *
.*                     missing                                              *
.****************************************************************************
.
MAND0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          MOVE      WAITPCOD,TMPSTRNG
          MOVE      "WAITPCOD",TMPFIELD          * Procedure code
          CALL      CHKM0000
.
          MOVE      WAITDESC,TMPSTRNG
          MOVE      "WAITDESC",TMPFIELD          * Description code
          CALL      CHKM0000
.
          IF        PTCNHDPS = 1
            MOVE      WAITHDPE,TMPSTRNG
            MOVE      "WAITHDPE",TMPFIELD        * HDP Equiv Procedure Code
            CALL      CHKM0000
          ENDIF
.
          MOVE      WAITACTV,TMPSTRNG
          MOVE      "WAITACTV",TMPFIELD          * Active Flag
          CALL      CHKM0000
.
          BRANCH    ERORFLAG,MAND9100            * errors on mand. fields
.
          MOVE      ZERO,EXIT                    * no errors on mand. fields
          GOTO      MAND9999
.
MAND9100  ADD       ONE,MANCOUNT                 * incr. mand error record count
          MOVE      ONE,EXIT
.
MAND9999  RETURN
+
.*****************************************************************************
.*                            CHKM0000             Called by: MAND0000       *
.*                    Check if a mandatory field is blank                    *
.* Requires: TMPSTRNG - field to be checked                                  *
.*           TMPFIELD - 8 character field name                               *
.* Returns:  ERORFLAG = 1   field is blank (error)                           *
.*****************************************************************************
.
CHKM0000  MATCH     TMPSTRNG,SP70                * blank field ?
          GOTO      CHKM9999 IF NOT EQUAL        * no - finished
.
          MOVE      "Mandatory Field blank ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set error flag
.
CHKM9999  RETURN
+
.******************************************************************************
.*                                  CLER0000              Called by: UPLD0000 *
.*                    Clear all the database fields                           *
.******************************************************************************
.
CLER0000  MOVE      SP70,WPCODE
          PACK      WPDESC,SP70,SP70
          MOVE      ZERO,WPTIME
          MOVE      ZERO,WPESTLS
          MOVE      SP70,WPGRP
          MOVE      SP70,WPRHAT
          MOVE      SP70,WPCHET
          MOVE      SP70,WTWPHDPE
          MOVE      SP70,WTWPDRGC
          MOVE      ZERO,WTWPACTV
          MOVE      SP70,WPTMASPAR
.
CLER9999  RETURN
+
.******************************************************************************
.*                                  HEAD0000              Called by: UPLD0000 *
.*                           Print The Report Header                 PERR0000 *
.******************************************************************************
.
HEAD0000  MOVE      "- Error Report",CPHDROPT
          CALL      HEAD132                 * Print the report header
.
          PRINT     *1,"< convwpro.txt >"
.
          CALL      LINE0000                     * draw line across page
.
          PRINT     *1,PIPE,*3,"Procedure",*13,PIPE:
                    *15,"Error Description",*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      SEVEN,CLNO                   * initialise line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: HEAD0000  *
.*                      Draw line across page                               *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
.******************************************************************************
.*                                  SETV0000              Called by: UPLD0000 *
.*                       Load the record variables                            *
.******************************************************************************
.
SETV0000  MOVE      WAITPCOD,WPCODE
.
          MOVE      WPCODE,KEY9
          CALL      RDAPROA1
          IF        OVRCD = 1
            MOVE      ONE,PROFOUND
          ELSE
            CALL      RDPROA1
            MOVE      ZERO,PROFOUND
          ENDIF
.
          MOVE      WAITDESC,WPDESC
          MOVE      WAITTIME,WPTIME
          MOVE      WAITELOS,WPESTLS
          MOVE      WAITPGRP,WPGRP
          MOVE      WAITRHAT,WPRHAT
          MOVE      WAITCHET,WPCHET
          MOVE      WAITHDPE,WTWPHDPE
          MOVE      WAITDRGC,WTWPDRGC
          MOVE      WAITACTV,WTWPACTV
.
SETV9999  RETURN
+
.*****************************************************************************
.*                            POUT0000             Called by: UPLD0000       *
.*            Pad out all the record fields with spaces given that we        *
.*            are dealing with pipe delimited records                        *
.*****************************************************************************
.
POUT0000  PACK      WAITPCOD,WAITPCOD,SP70
          PACK      WAITDESC,WAITDESC,SP70,SP70
          PACK      WAITTIME,WAITTIME,SP70
          RJUSTIFY  WAITTIME
          MATCH     SP5,WAITTIME
          IF        @EQUAL
            MOVE    "    0",WAITTIME
          ENDIF
          PACK      WAITELOS,WAITELOS,SP70
          RJUSTIFY  WAITELOS
          MATCH     SP3,WAITELOS
          IF        @EQUAL
            MOVE    "  0",WAITELOS
          ENDIF
          PACK      WAITPGRP,WAITPGRP,SP70
          PACK      WAITRHAT,WAITRHAT,SP70
          PACK      WAITCHET,WAITCHET,SP70
          PACK      WAITHDPE,WAITHDPE,SP70
          PACK      WAITDRGC,WAITDRGC,SP70
          PACK      WAITACTV,WAITACTV,SP70
          REP       " 0n1N1y0Y0",WAITACTV
.
POUT9999  RETURN
+
.*****************************************************************************
.*                            VNUM0000             Called by: UPLD0000       *
.*                    Validate numeric fields                                *
.* Returns:  EXIT - 0 = No numeric validation errors                         *
.*                  1 = Numeric validation errors                            *
.*          NUMCOUNT - updated count of records with numeric field errors    *
.*****************************************************************************
.
VNUM0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
.         Procedure Time numeric field
.
          TYPE      WAITTIME                     * procedure time numeric ?
          GOTO      VNUM0100 IF EQUAL            * yes - valid
.
          MOVE      "WAITTIME",TMPFIELD
          CALL      NERR0000
.
.         Estimated LOS numeric field
.
VNUM0100  TYPE      WAITELOS                     * estimated los numeric ?
          GOTO      VNUM0200 IF EQUAL            * yes - valid
.
          MOVE      "WAITELOS",TMPFIELD
          CALL      NERR0000
.
.         Active numeric field (valid values 0 and 1)
.
VNUM0200  TYPE      WAITACTV                     * active numeric ?
          GOTO      VNUM0250 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      WAITACTV,FORM1
          COMPARE   FORM1,ONE                    * active 0 or 1 ?
          GOTO      VNUM0250 IF LESS             * no - error
          GOTO      VNUM9000                     * yes - valid value
.
VNUM0250  MOVE      "WAITACTV",TMPFIELD
          CALL      NERR0000
.
VNUM9000  BRANCH    ERORFLAG,VNUM9100            * errors on number validation
.
          MOVE      ZERO,EXIT                    * no errors on no. validation
          GOTO      VNUM9999
.
VNUM9100  ADD       ONE,NUMCOUNT                 * incr. num. error record count
          MOVE      ONE,EXIT
.
VNUM9999  RETURN
+
.*****************************************************************************
.*                            NERR0000             Called by: VNUM0000       *
.*                    Process number error                                   *
.* Requires: TMPFIELD - field name                                           *
.*****************************************************************************
.
NERR0000  MOVE      "Invalid numeric field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set number error flag
.
NERR9999  RETURN
+
.*****************************************************************************
.*                           CVAL0000              Called by: UPLD0000       *
.*                 Validate all the relevant coded fields.                   *
.*        This validation is performed on the database fields just prior     *
.*        to writing the data and after any mappings have been performed.    *
.* Returns:  EXIT - 0 = No code validation errors                            *
.*                  1 = Code validation errors                               *
.*          CODCOUNT - updated count of records with coded field errors      *
.*****************************************************************************
.
CVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          MATCH     SP3,WPGRP                    * blank code ?
          GOTO      CVAL9000 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSW,ANSG
          PACK      TEMPCODE,WPGRP,SP10
          MOVE      "WAITPGRP",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (procedure group)
          CALL      VCOD0000
.
CVAL9000  BRANCH    ERORFLAG,CVAL9100            * errors on code validation
.
          MOVE      ZERO,EXIT                    * no errors on code validation
          GOTO      CVAL9999
.
CVAL9100  ADD       ONE,CODCOUNT                 * incr. code error record count
          MOVE      ONE,EXIT
.
CVAL9999  RETURN
+
.*****************************************************************************
.*                           VCOD0000              Called by: CVAL0000       *
.*                   Validate a coded field                                  *
.* Requires: TEMPCATG - temporary category variable                          *
.*           TEMPCODE - temporary code variable                              *
.*           TEMPTYPE - temporary code type                                  *
.*           TMPFIELD - temporary field name                                 *
.*****************************************************************************
.
VCOD0000  BRANCH    TEMPTYPE,VCOD1000            * patcodes (category-codes)
.
.         Validate a category-coded field (patcodes)
.
VCOD1000  PACK      KEY5,TEMPCATG,TEMPCODE
          CALL      RDCODE1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
VCOD9100  MOVE      "Invalid coded field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error
.
          MOVE      ONE,ERORFLAG                 * set code error flag
.
VCOD9999  RETURN
+
.*****************************************************************************
.*                              PERR0000           Called by: UPLD0000       *
.*                   Print an error detail line               CHKM0000       *
.* Requires: Valid read on PMI records (for name fields)      DERR0000       *
.*           ERORDESC - error description                     TERR0000       *
.*           CLNO - current page line count                                  *
.* Returns:  CLNO - updated page line count                   NERR0000       *
.*                                                            VCOD0000       *
.*****************************************************************************
.
PERR0000  COMPARE   CLNO,SIXTY3                  * page full ?
          IF        @LESS
            CALL      LINE0000                   * yes - print bottom line
            CALL      HEAD0000                   * print header
          ENDIF
.
          PRINT     *1,PIPE,*3,WAITPCOD,*15,PIPE,*17,ERORDESC,*132,PIPE
          ADD       ONE,CLNO                     * increment page line count
.
PERR9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       WATPKIPR
.
          INC       PATCODIO/INC
          INC       WATPROIO/INC
