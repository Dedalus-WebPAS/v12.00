.******************************************************************************
.*  system   : theatre                                                        *
.*  program  : IBAOPR92                                                       *
.*  desc.    : PERIODIC STATISTICAL UPDATE                                    *
.******************************************************************************
.*  author   : Paul D  (BEWARE: Floater code follows.....      Oh no!)        *
.*  date     : 31-1-90                                                        *
.*  mods     :                                                                *
.*                                                                            *
.******************************************************************************
.* V12.00.01 22/05/2025  Bella Turco    TSK 0955096                           *
.*           Alphanumeric changes                                             *
.* V11.03.03 21/04/2023  Thanh T        TSK 0909393                           *
.*           Changed RDDA0000 to setup KEY22 without OPDAHOSP                 *
.* V11.03.02 19/04/2023  Thanh T        TSK 0909393                           *
.*           Changed GEN0000 to use RSOPSES7 instead of RSOPSES1.             *
.*           Changed RDDA0000 to setup KEY22 with OPDAHOSP                    *
.* V11.03.01 20/03/2023  PJ Le Febour   TSK 0909393a                          *
.*           Amended KEY19 to KEY22 for theatre index changes                 *
.* V11.01.02 27/04/2021  Thanh T        TSK 0895165                           *
.*           Recompiled for OPRARDFD changes                                  *
.* V11.01.01 16/02/2021  Tracey Nguyen  TSK 0888639                           *
.*           FD changes                                                       *
.*           - oprpmbaf.OPRPMBA1 from KEY13 to KEY14                          *
.*           - SAVKEY13 to SAVKEY14                                           *
.*           - XPMPCNT from DIM 2 to DIM 3                                    *
.******************************************************************************
.* V11.00.01 11/03/2020  J.Tan          TSK 0838262                           *
.*           Added Effective from and to date to MBS Item file                *
.* V10.11.02 23/11/2017  Davin          TSK 0846231                           *
.*           Recompiled for OPRPMBFD - added oppmrefn                         *
.* V10.11.01 16/08/2016  J.Tan     TSK 0843629                                *
.*           Added RAOPCOS prior Update (I*P)                                 *
.* V10.08.05 12/09/2016  J.Tan     TSK 0813090                                *
.*           Fixed selecting first three highest Banding of operations        *
.* V10.08.04 01/09/2016  J.Tan     TSK 0813090                                *
.*           Mods to break up Banding in order of the number and alpha        *
.* V10.08.03 30/08/2016  J.Tan     TSK 0813090                                *
.*           Mods to order Banding in DIM field                               *
.* V10.08.02 26/08/2016  J.Tan     TSK 0813090                                *
.*           Changed FORM fields to DIM in tempfile                           *
.* V10.08.01 11/08/2016 J.Tan          TSK 0813090                            *
.*           Added parameter to calculate Theatre Average using Theatre Band  *
.* V10.03.04 05/07/2013 J.Tan          CAR 288043                             *
.*           Fixed Min duration to have zero minute duration                  *
.* V10.03.03 03/05/2011 Jill Parkinson CAR 284585                             *
.*           Changed RSOPSRG1 to RDOPSRG1 in CTCT9500                         *
.* V10.03.02  18/10/2012  Jill Parkinson CAR 273375                           *
.*            Recompiled for DATECONV - first day of year calculation         *
.* V10.03.01  03/02/2012 Peter McMullen CAR 259587                            *
.*            Removed all reference to redundant file patyears                *
.* V10.01.01  03/02/2011 Jill Parkinson CAR 233088                            *
.*            Added pmsvx1af                                                  *
.* V10.01.01  05/01/2011  Ebon Clements  CAR 236160  LanDesk 500140           *
.*            Fixed stats if surgeon differs from session id - RTSM0000       *
.*            Fixed calculation of extra session procedures  - UORU2000       *
.*                                                                            *
.*    V9.12.03  10/03/2010  Jill Parkinson CAR 216716                         *
.*              Mods to compare 1 to OPTSSIND in UNAE0000                     *
.*    V9.12.02  05/11/2009  Ebon Clements CAR 207604                          *
.*             Added call to RCVT0000 - determine time in recovery            *
.*    V9.12.01 22/09/2009  Mike Laming   CAR 166433                           *
.*             Correct code for Extra Operations (OPOUEOPR) at UORU2000       *
.*    V9.07.01 13/09/2006  Peter Vela    CAR 118228                           *
.*             Added functionality to calculate reallocated theatre time      *
.*             (oprralaf) and write it to the Clinic Session Usage Table      *
.*             (oprcsuaf)                                                     *
.*    V9.06.01 14/06/2006  Ramaprasad    CAR 102448                           *
.*             Added check for IBARSH in CHCK0000                             *
.*    V9.04.01 01/09/2005  Ebon Clements CAR 73209                            *
.*             Removed OPCNFTYP,OPCNFTTM and changed to use OPCNFTIM          *
.*             in CTCT0000                                                    *
.*    V9.03.01 03/08/2004  Peter Vela CAR 51685                               *
.*             Recompiled for OPRSOSFD                                        *
.*    V9.02.03 21/03/2003  Tonii   CAR 37264 (rebound)                        *
.*             Mods to MOVE number of operations to appropriate variable      *
.*             instead of ADD - was causing ridiculous figures                *
.*             Fixed calculation of No. of Cases and Duration time            *
.*    V9.02.02 13/03/2003  Tonii   CAR 37264                                  *
.*             OPRARDAF table not being read properly in RDDA1000, repacked   *
.*             key before read                                                *
.*    V9.02.01 11/02/2003  Tonii   SRS No: 36667                              *
.*             Mods to use new tables if a record exists in oprsrgaf          *
.*             Program to use OPCNFTIM and OPCNTTIM to determine which        *
.*             operation times to calculate the duration                      *
.******************************************************************************
.*             V5.08.02 13/08/2000  Jill Habasque SRF 2458                    *
.*                      Fixed OPSPLTIM - minimum duration                     *
.*             V5.07.01 22/09/1999  Andrew Peel  SRF  634279                  *
.*                      Fixed to clear OPCCDURA and OPCCBRKT                  *
.*             V5.07.00 29/10/1998 Jim Stathopoulos                           *
.*                      507 Changes                                           *
.******************************************************************************
.*             V5.04.01 19/06/96 Howellsy    SRF 641626                       *
.*                      Fixed I*D on oprdepaf (I believe)                     *
.*             V5.03.01 08/05/1996 Howellsy        5.04                       *
.*                      Added 2 more nurse codes & types.                     *
.*             01/11/90 J. Ceniza. Changed according to new file layouts      *
.*             V5.01.02. Also fixed a few bugs.                               *
.*             V5.00    18/12/90  Rod Knowles                                 *
.*                      Converted to Version 5                                *
.*             V5.01    02/01/91  Graeme Williams                             *
.*                      Converted to use the new OPRORUFD file                *
.*             V5.02    04/01/91  Graeme Williams                             *
.*                      Correct clinic/surgeon code for OPRCOUFD              *
.*             V5.03    04/01/91  Graeme Williams                             *
.*                      Correct clinic/surgeon code for OPRCOUFD              *
.*             V5.04    08/01/91  Peter Eddey                                 *
.*                      fixed bug so that it writes a current booking         *
.*                      to OPRORUFD if the theatre code is blank or           *
.*                      equal to sesssion theatre code                        *
.*                                                                            *
.*        V5.01.03  21/01/91  Justin Coates                                   *
.*                  Converted back to Release 5.01                            *
.*                  06/02/91  ROD                                             *
.*                  Don't allow update on current period                      *
.*                  Change calculation of Extra sessions booked for           *
.*                  new requirements                                          *
.*                  Changed get ward code routine so that it works.           *
.*                  11/02/91  ROD                                             *
.*                  Fixed lowest range (OPSPLTIM) bug                         *
.*                  14/02/91  ROD                                             *
.*                  Changed summary breakdown calcs to use actual start       *
.*                  times not expected start times                            *
.*        V5.01.04  21/02/91  ROD & GKW                                       *
.*                  Fixed codes which updated oprotsaf                        *
.*        V5.01.05  02/07/1991    Justin Coates  SRF 109236                   *
.*                  Search all Eight doctor codes.                            *
.*                  if no team details, use OPSEANAE and OPSECLIN.            *
.*                  use OPCNFTTM and OPCNFTYP for actual start time of booking*
.*                  Post blank wards. (PWAR0000)                              *
.*        V5.01.06  25/07/91 ROD                                              *
.*                  Recompiled for OPRSESFD                                   *
.*        V5.01.07  22/10/1991    Justin Coates                               *
.*                  Made GTAD0000 check booking file for attending doct also  *
.*        V5.01.08  27/12/1991    Justin Coates  (Modbury Changes)            *
.*                  changes to processing of cou,csc,csu,ots,sou files        *
.*        V5.01.09  04/02/92      J.Tan     SRF 112355                        *
.*                  Added Operating room Department statistic file            *
.*        V5.01.10  12/02/91      J.Tan       SRF 112960                      *
.*                  Fixed the calculation of overtime                         * 
.*        V5.01.11  08/05/92      D.Jones                                     *
.*                  Call PCTS0000 as necessary                                * 
.*        V5.01.12  10/06/92      ROD                                         *
.*                  Changed write to Anaesthetic Usage file for > 1 teams     *
.*        V5.01.13  11/08/92      ROD                                         *
.*                  Fixed D.Jones code to update time on oprctsaf             *
.*        V5.01.14  07/10/1992    Lofty                                       *
.*                  in POTS, made opdatdur add to opottime, not move          *
.*        V5.01.15  08/10/1992    Graeme Williams                             *
.*                  Don't use OPSEANAE as default anaesthetist                *
.*        V5.01.16  14/10/1992    Graeme Williams                             *
.*                  Allow current period to be selected                       *
.*        V5.01.17  11/12/1992    Graeme Williams          SRF 119094         *
.*                  Ignore cancelled bookings from stats.                     *
.*        V5.01.18  29/12/1992    Graeme Williams          SRF 119688         *
.*                  Cancelled sessions are mapped to type "B"                 *
.******************************************************************************
.$$$$$$

.   Periodic Statistical Update
.   ---------------------------
.   -initialization(INIT0000)
.       - Display Header
.       - Open files
.           - controlf (CONTROLF)
.           - oprdetaf (OPRDETA1)
.           - oprdetbf (OPRDETB1)
.           - oprdetcf (OPRDETC1)
.           - opranaef (OPRANAE1)
.           - oprardaf (OPRARDA1)          * new table
.           - oprattaf (OPRATTA1)
.           - oprcosaf (OPRCOSA1)
.           - oprcouaf (OPRCOUA1)
.           - oprcscaf (OPRCSCA1)
.           - oprcsuaf (OPRCSUA1)
.           - oproruaf (OPRORUA1)
.           - oprotsaf (OPROTSA1)
.           - oprpmbaf (OPRPMBA1)          * new table
.           - oprsesaf (OPRSESA1)
.           - oprsosaf (OPRSOSA1)
.           - oprsouaf (OPRSOUA1)
.           - oprsrgaf (OPRSRGA1)          * new table
.           - oprtsmaf (OPRTSMA1)          * new table
.           - oprwaraf (OPRWARA1)
.           - oprdepaf (OPRDEPA1)
.           - pattranf (PATTRAN1)
.       - Read control file 
.   -Main Options(SLCT0000)
.       - 0 = exit
.       - 1 = Update Theatre Statistics
.           -Get REQPER(GTPD0000)     - call KEYPER.
.                                     - validate REQPER.
.                                     - get start and end dates.
.                                     - display dates.
.                                     - OK to continue?
.           -Check REQPER(CHCK0000) 
.               - see if REQPER already updated.
.                   - if has(DELT0000)
.                       - wish to regenerate stats?
.                       - if not, go back to main menu
.                       - if yes, loop thru all stats
.                         files, deleting all data for 
.                         selected REQPER.
.           -Generate stats for range(GEN0000)
.               - loop thru OPRSESA1, for each record
.                 that has a session date in the requested
.                 range call PCSC00,PCSU0000,PORU0000 and RDDA0000. 
.                   - update OPRCSCA1 file(PCSC0000).
.                                     - write to OPRCSCA1 with updated details 
.                   - update OPRCSUA1 file(PCSU0000)
.                                     - write to OPRCSUA1 with updated details.
.                   - update OPRORUA1 file(PORU0000)
.                                     - write to OPRORUA1 with updated details.
.                   - Read OPRDETA1 file(RDDA0000)
.                                     - loop thru file getting the booking 
.                                       details for the session previously
.                                       read from OPRSESA1. For each booking
.                                       call RDDC0000 .
.                       -Read OPRDETC1 file(RDDC0000)
.                                     - loop thru file to determine the team no.
.                                       for booking previously read from the
.                                       OPRDETA1 file.Call PANE0000 and
.                                       PATT0000 for each record read. Then
.                                       call RDDB0000 to get operating team det.
.                          -Update OPRANAE1 file(PANE0000)
.                                     - Update or create the Anaethetist Usage
.                                       File for the requested REQPER.
.                          -Update OPRATTA1 file(PATT0000)
.                                     - Update or create Doctor Attendence 
.                                       Usage File for the requested REQPER
.                          -Read OPRDETB1 file and OPRSESA1(RDDB0000)
.                                     - read operating team detail file but
.                                       1st check if any default team exist
.                                       in OPRSESFD file. Then the operating
.                                       team file OPRDEBFD is read to see
.                                       if any other team exists.  If there
.                                       is a team 1 in the DEB file it will
.                                       just overwrite the default team in SES.
.                                     - call PCOU0000,PCOS0000,PSOU0000,PSOS0000
.                                       POTS0000 and PWAR0000 and PDEP0000 for
.                                       each operation
.                                     - go back for next booking if there is
.                                       another.
.                                     - if not, get next session if there is 
.                                       another.
.                                     - if not go back to main menu
.                             - Update OPRCOUA1 file(PCOU0000)
.                                     - Update or create Clinic operation usage
.                                       file for requested REQPER.
.                             - Update OPRCOSA1 file(PCOS0000)
.                                     - Update or create Clinic operation
.                                       summary file for requeste REQPER
.                             - Update OPRSOUA1 file(PSOU0000)
.                                     - Update or create Surgeon operation usage
.                                       file for requested REQPER.
.                             - Update OPRSOSA1 file(PSOS0000)
.                                     - Update or create Surgeon operation 
.                                       summary File for requested REQPER.
.                             - Update OPROTSA1 file(POTS0000)
.                                     - Update or create Operation Summary File
.                                       for requested REQPER.
.                             - Update OPRWARA1 file(PWAR0000)
.                                     - Update or create Operating room ward
.                                       Statistics File for requested REQPER
.                             - Update OPRDEPA1 file(PDEP0000)
.                                     - Update or create Operating room dept.
.                                       Statistics File for requested REQPER
.   - end.
.$$$$$$                                          
.
.************************************************************************
.*                           INCLUDES                                   *
.************************************************************************
          INC       STD001FD   
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       BOKRC1FD/INC
          INC       OPRCLIFD/INC
          INC       OPRRALFD/INC
          INC       OPRCONFD/INC
          INC       OPRDEAFD/INC
          INC       OPRDEBFD/INC
          INC       OPRDECFD/INC
          INC       OPRSESFD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATDRGFD/INC
          INC       PATMI1FD/INC
          INC       PMSVX1FD/INC
          INC       PATTRNFD/INC
          INC       PATITMFD/INC
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
.********** Statistics files **********
.
          INC       OPRANEFD/INC
          INC       OPRARDFD/INC
          INC       OPRATTFD/INC
          INC       OPRCOSFD/INC
          INC       OPRCOUFD/INC
          INC       OPRCSCFD/INC
          INC       OPRCSUFD/INC
          INC       OPROPRFD/INC
          INC       OPRORAFD/INC
          INC       OPRORUFD/INC
          INC       OPRCTSFD/INC
          INC       OPROTSFD/INC
          INC       OPRPMBFD/INC
          INC       OPRSOSFD/INC
          INC       OPRSOUFD/INC
          INC       OPRSRGFD/INC
          INC       OPRTSMFD/INC
          INC       OPRWARFD/INC
          INC       OPRDEPFD/INC
.
.************************************************************************
.*                           CONSTANTS                                  *
.************************************************************************
A         INIT      "A "
.
.
OP        INIT      "OP"
.
NINETY9   FORM      "99"
.
Z20       INIT      "ZZZZZZZZZZZZZZZZZZZZ"
ZERO0     FORM      "01"
.
.************************************************************************
.*                           VARIABLES                                  *
.************************************************************************
ADTYPE    FORM      1
BRKTEMP   DIM       5
.
CNOPRFLG  FORM      1
CMDLINE   DIM       100
CHCKTIME  DIM       5         * time to check in GTSB
CMBSITEM  DIM       9
CODE      DIM       9
CODENO    FORM      1
COUNT     FORM      2
COUNTER   FORM      2
CPTDATE   DIM       8
DIM1A     DIM       1
DIM1B     DIM       1
DIM4      DIM       4
DIM36     DIM       36
DIM42     DIM       42
DOCTCODE  DIM       6
DOFW      FORM      1
DURATION  FORM      4         * calculated duration of operation
ENDMIN    FORM      4         * used to calculate duration
FNAME1    DIM       8
FIELD     FORM      2
FIRST     FORM      1
FNDANAE   FORM      1
FORM3     FORM      3
FORM4B    FORM      4         * time work variable
.
FRSTHIGH  FORM      3        * % Op.time for 1st highest
SCNDHIGH  FORM      3        * % Op.time for 2nd highest
FRITMDUR  FORM      5        * Op.Duration for 1st item
SCITMDUR  FORM      5        * Op.Duration for 2nd item
SAVUNQID  DIM       10
OPERNUMB  FORM      5        * Save no of operations
OPERDURN  FORM      5       * Save Duration
.
KEY10A    DIM       10
IND       FORM      2
NOOPER    FORM      6
ONCEFLAG  FORM      1         * Perform functions once flag
OPERCODE  DIM       9
OPSRGFLG  FORM      1
OWN       FORM      1
PREVOPER  DIM       9
PRTFDTE   DIM       10
PRTTDTE   DIM       10
REQPER    DIM       6
SAVKEY11  DIM       11
SAVKEY14  DIM       14
SP36      DIM       36
STARTMIN  FORM      4         * used to calculate duration
SUPRVLVL  DIM       3
TEAMNO    DIM       1
TIMEAVAL  FORM      7
TIMESTOP  DIM       5
TIMESTRT  DIM       5
TOTMINS   FORM      5
TYPE      DIM       3
UPORWR    FORM      1
UNIQID    DIM       10
WARD      DIM       3
WRKDATE   DIM       8
WRKTIME   FORM      4
.
.**************************************************************************+
.*                          TEMPORARY FILE                                 *
.**************************************************************************+
TMPMBSA1  IFILE     SQL, FIXED=56, KEY="u1-10,11-13,14-16,17-18"
.
.NAME     TYPE    PHYSICAL   LENGTH   START    DESCRIPTION
.-----    -----   --------   ------   -----    -----------
XPMUNID   DIM       10         10      1       * Unique key
XPMBAND   DIM       3          3       11      * Banding in Numeric
XPMBALP   DIM       3          3       14      * Banding in Alpha
XPMCNTR   DIM       2          2       17      * Counter 
.                                                Header record - Zero
XPMCMBS   DIM       9          9       19      * CMBS code
XPMTEAM   DIM       1          1       28      * Team number from oprpmbaf
XPMPCNT   DIM       3          3       29      * Counter from oprpmbaf
XPMNOPR   DIM       5          5       32      * No of operations
.                                                (Header record only)
XPMODUR   DIM       5          5       37      * Surgical duration
.                                                Header- total duration Op.time
.                                                Detail record - % Op.time
XPMSPAR   DIM      14         14       42      * Spare
.End of position                       56
.
FPMNOPR   FORM      5                          * No of operations
FPMODUR   FORM      5                          * Surgical duration
.
.************************************************************************
.*                         HEADER DETAILS                               *
.************************************************************************
PRGNAM    INIT      "Periodic Statistical Update"
PRGID     INIT      "IBAOPR92"
VERSION   INIT      "V12.00.01"
.
.************************************************************************
.*                           MAINLINE                                   *
.************************************************************************
ML0000    CALL      INIT0000                * open files,read control file
.                                             and display header
ML1000    CALL      SLCT0000                * exit or update?
          BRANCH    EXIT,ML9999            
.
ML20000   CALL      GTPD0000                * get REQPER
          BRANCH    EXIT,ML1000             * no REQPER entered or no sessions
.                                             booked in that REQPER.
.
          CALL      CHCK0000                * REQPER already updated?
          BRANCH    EXIT,ML1000
.
          MATCH     "1",OPCNOPAV            * Using Theatre banding for Op.Ave.
          IF        @EQUAL
            CALL      CTMP0000              * Create Tempfile
            CALL      LTMP0000              * Load tempfile with CMBS items
            CALL      ALTM0000              * Allocate Op.Time
          ENDIF
.
          CALL      GEN0000                 * generate stats
          GOTO      ML1000           
.
ML9999    CHAIN     PGM       
.
.************************************************************************
.*                           INIT0000                                   *
.*          Display header, open files and read control file            *
.*                      called by : ML0000                              *
.************************************************************************
INIT0000  CALL      DISPHEAD
.
INIT2000  DISPLAY   *P32:24,"Opening";
.
          DISPLAY   *P40:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P40:24,"bokrc1af";
          OPEN      BOKRC1A1,"bokrc1af"
.
          DISPLAY   *P40:24,"oprdetaf";
          OPEN      OPRDETA1,"oprdetaf"
          OPEN      OPRDETA6,"oprdetaf"
.
          DISPLAY   *P40:24,"oprralaf";
          OPEN      OPRRALA1,"oprralaf"
.
          DISPLAY   *P40:24,"oprdetbf";
          OPEN      OPRDETB1,"oprdetbf"
.
          DISPLAY   *P40:24,"oprdetcf";
          OPEN      OPRDETC1,"oprdetcf"
.
          DISPLAY   *P40:24,"opranaef";
          OPEN      OPRANAE1,"opranaef"
.
          DISPLAY   *P40:24,"oprardaf";
          OPEN      OPRARDA1,"oprardaf"
.
          DISPLAY   *P40:24,"oprattaf";
          OPEN      OPRATTA1,"oprattaf"
.
          DISPLAY   *P40:24,"oprcosaf";
          OPEN      OPRCOSA1,"oprcosaf"
.
          DISPLAY   *P40:24,"oprcouaf";
          OPEN      OPRCOUA1,"oprcouaf"
.
          DISPLAY   *P40:24,"oprcscaf";
          OPEN      OPRCSCA1,"oprcscaf"
.
          DISPLAY   *P40:24,"oprcsuaf";
          OPEN      OPRCSUA1,"oprcsuaf"
.
          DISPLAY   *P40:24,"oprctsaf";
          OPEN      OPRCTSA1,"oprctsaf"
.
          DISPLAY   *P40:24,"opropraf";
          OPEN      OPROPRA1,"opropraf"
.
          DISPLAY   *P40:24,"oproraaf";
          OPEN      OPRORAA1,"oproraaf"
.
          DISPLAY   *P40:24,"oproruaf";
          OPEN      OPRORUA1,"oproruaf"
.
          DISPLAY   *P40:24,"oprotsaf";
          OPEN      OPROTSA1,"oprotsaf"
.
          DISPLAY   *P40:24,"oprpmbaf";
          OPEN      OPRPMBA1,"oprpmbaf"
.
          DISPLAY   *P40:24,"oprsesaf";
          OPEN      OPRSESA1,"oprsesaf"
          OPEN      OPRSESA7,"oprsesaf"
.
          DISPLAY   *P40:24,"oprsosaf";
          OPEN      OPRSOSA1,"oprsosaf"
.
          DISPLAY   *P40:24,"oprsouaf";
          OPEN      OPRSOUA1,"oprsouaf"
.
          DISPLAY   *P40:24,"oprsrgaf";
          OPEN      OPRSRGA1,"oprsrgaf"
.
          DISPLAY   *P40:24,"oprtsmaf";
          OPEN      OPRTSMA1,"oprtsmaf"
.
          DISPLAY   *P40:24,"oprwaraf";
          OPEN      OPRWARA1,"oprwaraf"
.
          DISPLAY   *P40:24,"oprdepaf";
          OPEN      OPRDEPA1,"oprdepaf"
.
          DISPLAY   *P40:24,"pattranf";
          OPEN      PATTRAN2,"pattranf"
.
          DISPLAY   *P40:24,"patcodes"
          OPEN      PATCODE1,"patcodes"
.  
          DISPLAY   *P40:24,"patdrgaf";
          OPEN      PATDRGA3,"patdrgaf"
.
          DISPLAY   *P40:24,"patitemn";
          OPEN      PATITEM1,"patitemn"
.
          DISPLAY   *P40:24,"patmi1af"
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P40:24,"oprcliaf"
          OPEN      OPRCLIA1,"oprcliaf"
.
.********** read control file **********
.
          READ      CONTROLF,FORTY;*111,OPCNCLSU:
                                   *115,OPCNNOOP:
                                   *143,OPCNBRKA:
                                   *148,OPCNBRKB:
                                   *153,OPCNBRKC:
                                   *158,OPCNBRKD:
                                   *163,OPCNBRKE:
                                   *168,OPCNBRKF:
                                   *173,OPCNBRKG:
                                   *178,OPCNBRKH:
                                   *183,OPCNBRKI:
                                   *188,OPCNBRKJ:
                                   *193,OPCNBRKK:
                                   *198,OPCNBRKL
.
          READ      CONTROLF,FORTY2;*107,OPCNOTSU,OPCNCTSU,*121,OPCNPAMT:
                                    *235,OPCNFTIM,*237,OPCNTTIM
          READ      CONTROLF,FIFTY9;*27,CPERMTH
          READ      CONTROLF,HUND13;*11,OPCNSMFT,*13,OPCNSMTT:
                                    *41,OPCNOPAV,*42,OPCNP1ST,*45,OPCNP2ND

          PACK      SP36,SP30,SP6
.
          MATCH     "1",OPCNOPAV       * Using Theatre banding for Op.Ave.
          IF        @EQUAL
            CALL      TFILENAM         * Get temp file name
            MOVE      TFILNAME,FNAME1
          ENDIF
.
INIT9999  RETURN
+
.************************************************************************
.*                           SLCT0000                                   *
.*                       Main menu screen                               *
.*                   called by : ML1000                                 *
.************************************************************************
SLCT0000  CALL      SCRN0000
. 
SLCT1000  KEYIN     *P17:7,*DV,UNDLN1,*P17:7,*V2LON,OPTION
.
          COMPARE   ZERO,OPTION 
          GOTO      SLCT9000 IF EQUAL
.
          BRANCH    OPTION,SLCT8000
.
          BEEP
          GOTO      SLCT1000
.
SLCT8000  MOVE      FALSE,EXIT
          GOTO      SLCT9999
.
SLCT9000  MOVE      TRUE,EXIT
.
SLCT9999  RETURN
.         
.************************************************************************
.*                           SCRN0000                                   *
.*                    Display main options screen                       *
.*                   called by : SLCT0000                               *
.************************************************************************
SCRN0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Update Theatre Statistics":
                    *P1:7,"Select Option : "
.
SCRN9999  RETURN
.
.************************************************************************
.*                           GTPD0000                                   *
.*                 Get requested REQPER from user                       *
.*                   called by : ML2000                                 *
.************************************************************************
GTPD0000  DISPLAY   *P1:9,"Enter the update ",CPERMTH," :"
.
.*** Set up KEYPER parametres and default period
.
GTPD0050  DISPLAY   *P27:9,*EF
          MOVE      NINE,CVERT
          MOVE      TWENTY7,CCOL
          MOVE      TWENTY4,EVERT
          MOVE      ONE,ECOL 
          MOVE      ZERO,CHIGHLT   
          PACK      CPTDATE,CCC,CYY,CMM,CDD
          REP       " 0",CPTDATE
          CALL      GPERD
          BRANCH    EXIT,GTPD0100
.
          PACK      KEY6,DRGCYR,DRGCNUM
          CALL      RDSDRGA3
          CALL      RDPDRGA3
          BRANCH    OVRCD,GTPD0100
.
          PACK      REQPER,DRGCYR,DRGCNUM
          UNPACK    REQPER,CCENT,CYEAR,CMON
          CALL      KEYPER
          BRANCH    CQUEST,GTPD0050
.
          GOTO      GTPD1000
.
.*** period not on file error
.
GTPD0100  DISPLAY   *P1:24,*B,"Fatal error - period not on file.  ";
          CALL      HITENTER
          MOVE      TRUE,EXIT
          GOTO      GTPD9999
.
GTPD1000  PACK      KEY6,CCENT,CYEAR,CMON
          CALL      RDDRGA3                      * valid REQPER?
          BRANCH    OVRCD,GTPD3000
          PACK      REQPER,DRGYR,DRGNUM
.
. check if period keyed in is less than current period
.
          REP       " 0",DRGTDTE
          MATCH     CPTDATE,DRGTDTE
          GOTO      GTPD1500 IF LESS            * Ok.
.
.         Check if the period selected is the current period
.
          MATCH     DRGFDTE,CPTDATE
          GOTO      GTPD8000 IF LESS            * error
          GOTO      GTPD8100 IF EQUAL           * error
.
.         Current period selected. Extract up to the day before the current
.         date.
.
          MOVE      CPTDATE,WRKDATE          * current date
          CALL      SUBD0000                 * subtract one from the date
          MOVE      WRKDATE,DRGTDTE          * use yesterday as to-date
.
.*** set up to and from dates to print
.
GTPD1500  UNPACK    DRGFDTE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",DRGFDTE
          CALL      PACDATE
          PACK      PRTFDTE,CPCDATE
.
          UNPACK    DRGTDTE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",DRGTDTE
          CALL      PACDATE
          PACK      PRTTDTE,CPCDATE
.
.*** display long desciption and from and to dates
.
          DISPLAY   *P38:9,*V2LON,DRGLDSC:
                    *P38:10,PRTFDTE," to ",PRTTDTE
.
          CALL      CONTQST                      * OK to continue?
          BRANCH    CEXIT,GTPD2000,GTPD0050,GTPD9000
.          
GTPD2000  MOVE      FALSE,EXIT
          GOTO      GTPD9999
.
GTPD3000  DISPLAY   *P1:24,*B,"Invalid ",CPERMTH,".  ";
          CALL      HITENTER
          GOTO      GTPD0050
.
. date keyed in was > current period
.
GTPD8000  DISPLAY   *P1:24,*EL,*B,"This period is in the future. ";
          CALL      HITENTER
          GOTO      GTPD0050
.
GTPD8100  DISPLAY   *P1:24,*EL,*B,"Cannot do update for 1st day of period. ";
          CALL      HITENTER
          GOTO      GTPD0050
.
.*** no REQPER entered or cancel so exit = true
.
GTPD9000  MOVE      TRUE,EXIT
.
GTPD9999  RETURN          
.************************************************************************
.* SUBD0000 : Subtract one from WRKDATE                    (GTPD0000)   *
.************************************************************************
SUBD0000  UNPACK    WRKDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CDAY,DD                  * Parameter to DMYCON
          MOVE      CMON,MM                  * Parameter to DMYCON
          MOVE      CYEAR,YY                 * Parameter to DMYCON
          MOVE      CCENT,CC                 * Parameter to DMYCON
          CALL      DMYCON                   * Convert to julian
.
          SUB       ONE,JULDAY               * Sub one from the julian date
.
          MOVE      JULDAY,JWKDAY            * Parameter to JULCON
          MOVE      JULYR,JWKYER             * Parameter to JULCON
          MOVE      JULCC,JWKCC              * Parameter to JULCON
          CALL      JULCON                   * Convert back to normal date
.
          PACK      WRKDATE,CC,YY,MM,DD
          REP       " 0",WRKDATE
.
SUBD9999  RETURN
.
.************************************************************************
.*                           CHCK0000                                   *
.*      Check if the REQPER chosen has already been updated             *
.*                   called by : ML2000                                 *
.************************************************************************
CHCK0000  PACK      KEY16,REQPER,SP10
          CALL      RSOPCSU1                     * read the csu file to 
.                                                  see if period already
.                                                  updated
.
          CALL      RKOPCSU1
          BRANCH    OVRCD,CHCK9000
.
          MATCH     REQPER,OPCSDATE
          GOTO      CHCK9000 IF NOT EQUAL
.
.*** verify if requested periods stats should be regenerated
.
          MATCH     "IBARSH",PGM
          GOTO      CHCK2000 IF EQUAL
.
          DISPLAY   *P1:24,"This update has already been run":
                           ". Do you want to re-do the statistics ( / ) ? _":
                           *P72:24,*V2LON,"Y",*P74:24,"N"
.
CHCK1000  KEYIN     *P79:24,*DV,UNDLN1,*P79:24,*V2LON,ANS
.
          REP       UPPLOW,ANS
          MATCH     ANS,ANSY
          GOTO      CHCK2000 IF EQUAL
.
          MATCH     ANS,ANSN
          GOTO      CHCK8000 IF EQUAL
.
          BEEP
          GOTO      CHCK1000 
.
CHCK2000  CALL      DELT0000                     * delete previous update
          GOTO      CHCK9000
.
CHCK8000  MOVE      TRUE,EXIT
          GOTO      CHCK9999
.
CHCK9000  MOVE      FALSE,EXIT
.
CHCK9999  RETURN
.
.*********************************************************************
.*                  DELT0000                    Called By : CHCK2000 *
.*        Delete all existing statistical files for requested period *
.*********************************************************************
DELT0000  DISPLAY   *P1:24,*EL,*P25:24,*V2LON,"** Deleting Previous Update **"
.
.         delete opranaef file
.
DELT0500  MOVE      REQPER,OPANDATE
          PACK      KEY15,OPANDATE,SP10
          CALL      RSOPANE1 
          CALL      RKOPANE1
          BRANCH    OVRCD,DELT1000
.
          MATCH     REQPER,OPANDATE
          GOTO      DELT1000 IF NOT EQUAL
.
          PACK      KEY15,OPANDATE,OPANDOCT,OPANTYPE
          CALL      DEOPANE1
          GOTO      DELT0500
.
.         delete oprattaf file 
.
DELT1000  MOVE      REQPER,OPATDATE
          PACK      KEY12,OPATDATE,SP6
          CALL      RSOPATT1 
          CALL      RKOPATT1
          BRANCH    OVRCD,DELT2000
.
          MATCH     REQPER,OPATDATE
          GOTO      DELT2000 IF NOT EQUAL
.
          PACK      KEY12,OPATDATE,OPATDOCT,OPATOPER
          CALL      DEOPATT1
          GOTO      DELT1000
.
.         delete oprcsuaf file
.
DELT2000  MOVE      REQPER,OPCSDATE
          PACK      KEY16,OPCSDATE,SP10
          CALL      RSOPCSU1 
          CALL      RKOPCSU1
          BRANCH    OVRCD,DELT3000
.
          MATCH     REQPER,OPCSDATE
          GOTO      DELT3000 IF NOT EQUAL
.
          PACK      KEY16,OPCSDATE,OPCSDOCT,OPCSTYPE,OPCSTIME
          CALL      DEOPCSU1
          GOTO      DELT2000
.
.         delete oprcouaf file
.
DELT3000  MOVE      REQPER,OPCODATE
          PACK      KEY21,OPCODATE,SP15
          CALL      RSOPCOU1 
          CALL      RKOPCOU1
          BRANCH    OVRCD,DELT4000
.
          MATCH     REQPER,OPCODATE
          GOTO      DELT4000 IF NOT EQUAL
.
          PACK      KEY21,OPCODATE,OPCODOCT,OPCOTYPE,OPCOOTYP,OPCOTPER,OPCOATYP:
                          OPCOOWN
          CALL      DEOPCOU1
          GOTO      DELT3000
.
.         delete oprcscaf file
.
DELT4000  MOVE      REQPER,OPCCDATE
          PACK      KEY20,OPCCDATE,SP15
          CALL      RSOPCSC1 
          CALL      RKOPCSC1
          BRANCH    OVRCD,DELT5000
.
          MATCH     REQPER,OPCCDATE
          GOTO      DELT5000 IF NOT EQUAL
.
          PACK      KEY20,OPCCDATE,OPCCDOCT,OPCCTYPE,OPCCTIME,OPCCCTYP,OPCCCODE
          CALL      DEOPCSC1
          GOTO      DELT4000
.
.         delete oprcosaf file
.
DELT5000  MOVE      REQPER,OPCPDATE
          PACK      KEY21,OPCPDATE,SP15
          CALL      RSOPCOS1 
          CALL      RKOPCOS1
          BRANCH    OVRCD,DELT6000
.
          MATCH     REQPER,OPCPDATE
          GOTO      DELT6000 IF NOT EQUAL
.
          PACK      KEY21,OPCPDATE,OPCPDOCT,OPCPOPER
          CALL      DEOPCOS1
          GOTO      DELT5000
.
.         delete oproruaf file
.
DELT6000  MOVE      REQPER,OPOUDATE
          PACK      KEY12,OPOUDATE,SP6 
          CALL      RSOPORU1 
          CALL      RKOPORU1
          BRANCH    OVRCD,DELT7000
.
          MATCH     REQPER,OPOUDATE
          GOTO      DELT7000 IF NOT EQUAL
.
          PACK      KEY12,OPOUDATE,OPOUROOM
          CALL      DEOPORU1
          GOTO      DELT6000
.
.         deleting oprsouaf file
.
DELT7000  MOVE      REQPER,OPSODATE
          PACK      KEY19,OPSODATE,SP20
          CALL      RSOPSOU1 
          CALL      RKOPSOU1
          BRANCH    OVRCD,DELT8000
.
          MATCH     REQPER,OPSODATE
          GOTO      DELT8000 IF NOT EQUAL
.
          PACK      KEY19,OPSODATE,OPSODOCT,OPSOTYPE,OPSOOTYP,OPSOATYP:
                          OPSOOWN,OPSOTRNE
          CALL      DEOPSOU1
          GOTO      DELT7000
.
.         delete oprsosaf file
.
DELT8000  MOVE      REQPER,OPSPDATE
          PACK      KEY21,OPSPDATE,SP20
          CALL      RSOPSOS1 
          CALL      RKOPSOS1
          BRANCH    OVRCD,DELT9000
.
          MATCH     REQPER,OPSPDATE
          GOTO      DELT9000 IF NOT EQUAL
.
          PACK      KEY21,OPSPDATE,OPSPDOCT,OPSPOPER
          CALL      DEOPSOS1
          GOTO      DELT8000
.
.         delete oprotsaf
.
DELT9000  PACK      KEY15,DRGFDTE,SP4 
          CALL      RSOPOTS1 
          CALL      RKOPOTS1
          BRANCH    OVRCD,DELT9500
.
          MATCH     OPOTDATE,DRGTDTE
          GOTO      DELT9500 IF LESS        * after end date
.
          PACK      KEY15,OPOTDATE,OPOTTYPE,OPOTPERD,OPOTUSER
          CALL      DEOPOTS1
          GOTO      DELT9000
.
.         deleting oprwaraf file
.
DELT9500  MOVE      REQPER,OPWADATE
          PACK      KEY9,OPWADATE,SP4 
          CALL      RSOPWAR1 
          CALL      RKOPWAR1
          BRANCH    OVRCD,DELT9600 
.
          MATCH     REQPER,OPWADATE
          GOTO      DELT9600 IF NOT EQUAL
.
          PACK      KEY9,OPWADATE,OPWAWARD
          CALL      DEOPWAR1
          GOTO      DELT9500
.
.         deleting oprdepaf file
.
DELT9600  MOVE      REQPER,OPDEDATE
          PACK      KEY9,OPDEDATE,SP4 
          CALL      RSOPDEP1 
          CALL      RKOPDEP1
          BRANCH    OVRCD,DELT9800 
.
          MATCH     REQPER,OPDEDATE
          GOTO      DELT9800 IF NOT EQUAL
.
          PACK      KEY9,OPDEDATE,OPDEDEPT
          CALL      DEOPDEP1
          GOTO      DELT9600
.
.         delete oprctsaf
.
DELT9800  PACK      KEY18,DRGFDTE,SP4 
          CALL      RSOPCTS1 
          CALL      RKOPCTS1
          BRANCH    OVRCD,DELT9999
.
          MATCH     OPCTDATE,DRGTDTE
          GOTO      DELT9999 IF LESS        * date after range
.
          PACK      KEY18,OPCTDATE,OPCTCLIN,OPCTPERD,OPCTUSER
          CALL      DEOPCTS1
          GOTO      DELT9800
.
DELT9999  RETURN
+        
.************************************************************************
.*                           GEN0000                                    *
.*           Generate statistics for the requetsed period               *
.*                   called by : ML2000                                 *
.************************************************************************
GEN0000   DISPLAY   *P1:24,*EL,*V2LON,"UPDATING : ";
          MOVE      ZERO,FIELD
          MOVE      ZERO,FIRST
          PACK      KEY22,DRGFDTE,SP15
          CALL      RSOPSES7
.
GEN1000   CALL      RKOPSES7
          BRANCH    OVRCD,GEN9000
.
          MATCH     OPSEDATE,DRGTDTE
          GOTO      GEN9000 IF LESS
.
          UNPACK    OPSEDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          DISPLAY   *P12:24,*V2LON,CPCDATE,*HOFF,SP1,OPSECLIN;
.
          MOVE      ONE,FIRST
          ADD       ONE,FIELD 
          CALL      RDDA0000                     * read dec file
          CALL      PCSC0000                     * update csc file
          CALL      PCSU0000                     * update csu file
          GOTO      GEN1000
.
GEN9000   CALL      CTAV0000                     * Calculate time available
.
          BRANCH    FIRST,GEN9999
          DISPLAY   *P1:24,*B,"No sessions in that period.  ",*EL;
          CALL      HITENTER
.
GEN9999   DISPLAY   *P1:24,*EL
          RETURN
.
.************************************************************************
.*                           RDDA0000                                   *
.*           Read the operation detail file for session                 *
.*                   called by : GEN1000                                *
.************************************************************************
RDDA0000  MOVE      OPSEDATE,OPDADATE
          MOVE      OPSETIME,OPDATIME
          MOVE      OPSECLIN,OPDACLIN
          PACK      KEY26,OPDADATE,OPDATIME,OPDACLIN,SP70
          CALL      RSOPDEA6
.
RDDA1000  CALL      RKOPDEA6                     * read dea
          BRANCH    OVRCD,RDDA9999
.
          MATCH     OPSEDATE,OPDADATE            * right date?
          GOTO      RDDA9999 IF NOT EQUAL
.
          MATCH     OPSETIME,OPDATIME            * right time?
          GOTO      RDDA9999 IF NOT EQUAL
.
          MATCH     OPSECLIN,OPDACLIN            * right time?
          GOTO      RDDA9999 IF NOT EQUAL
.
          COMPARE   THREE,OPDASTAT               * cancelled ?
          GOTO      RDDA1000 IF EQUAL            * yes, ignore.
.
. get details in Theatre system Operating Arrival & recovery for Operation time
.
          PACK      KEY10,OPDAUNIQ               *** CAR 37264
          CALL      RDOPARD1
          IF        OVRCD=0
            MOVE      ONE,OPSRGFLG
          ELSE
            MOVE      ZERO,OPSRGFLG
            GOTO      RDDA2000
          ENDIF
.       
          CALL      RDSG0000                     * read Surgical file
          GOTO      RDDA1000
.
RDDA2000  CALL      RDDC0000
          GOTO      RDDA1000
.
RDDA9999  RETURN

.************************************************************************
.*                           PCSU0000                                   *
.*           Update the clinic session usage file                       *
.*                   called by : GEN9500                                *
.************************************************************************
PCSU0000  MOVE      REQPER,OPCSDATE              * set up key variables
          MOVE      OPSECLIN,OPCSDOCT
.
          BRANCH    OPSESTAT,PCSU0500,PCSU0500
          GOTO      PCSU9999
.
PCSU0500  MOVE      OPSESTAT,OPCSTYPE
          REP       "0B1B2E",OPCSTYPE
          MOVE      OPSETPER,OPCSTIME 
.
          PACK      KEY16,OPCSDATE,OPCSDOCT,OPCSTYPE,OPCSTIME
          CALL      RDOPCSU1                * read previous values
          BRANCH    OVRCD,PCSU1000          * no previous values
.
          MOVE      ZERO,UPORWR             * set flag to update
          GOTO      PCSU1500
.
PCSU1000  CALL      CLVR0000                * clear variables
          MOVE      ONE,UPORWR              * set flag to write
.
PCSU1500  ADD       OPSEDURA,OPCSBTIM       * add booked duration to booked time
          SUB       OPSEBRKT,OPCSBTIM       * take off time for breaks
          ADD       OPSEBRKT,OPCSBRKS       * total time alloc. for breaks
          ADD       ONE,OPCSBSES            * add one to booked sessions
.
          CALL      CSHR0000                * calculate shared session time
.         
          COMPARE   ZERO,OPSEACTD           * session used?
          GOTO      PCSU2000 IF EQUAL       * no duration
          GOTO      PCSU2000 IF LESS        * negative duration

          ADD       OPSEACTD,OPCSUTIM       * add actual duration to used time
          ADD       ONE,OPCSUSES            * add one to sessions used
PCSU2000  BRANCH    UPORWR,PCSU3000
          
          CALL      UPOPCSU1
          GOTO      PCSU9999
.
PCSU3000  CALL      WROPCSU1
.
PCSU9999  RETURN
.
.************************************************************************
.*                           PORU0000                                   *
.*           Update the Operating room usage file                       *
.*                   called by : RDDC0000                               *
.************************************************************************
PORU0000  MOVE      REQPER,OPOUDATE              * set up key variables
          MOVE      OPDATHET,OPOUROOM            * try the theatre for booking
          MATCH     SP6,OPOUROOM                 * is it blank ?
          GOTO      PORU0020 IF NOT EQUAL        * no. we have a theatre code
          MOVE      OPSETHET,OPOUROOM            * yes. use the session default
.
PORU0020  PACK      KEY12,OPOUDATE,OPOUROOM 
          CALL      RDOPORU1
          BRANCH    OVRCD,PORU1000
.
          MOVE      ZERO,UPORWR
          GOTO      PORU2000
.
PORU1000  CALL      CLVR1000                     * clear variables
          MOVE      ONE,UPORWR                   * set flag to write
.
          MOVE      ZERO,OPOUAVAL                * Will be set up later
.
.         Check if this is an extra session
.
PORU2000  COMPARE   TWO,OPSESTAT                 * Extra session ?
          GOTO      PORU3000 IF NOT EQUAL        * No.
.
.         We have an extra session
.
          ADD       OPDCNOOP,OPOUEOPR            * Number of operations
          MATCH     "1",OPDCTEAM                 * Is this the 1st team
          GOTO      PORU8000 IF NOT EQUAL        * No. Finished stats
.
          ADD       ONE,OPOUECAS                 * Number of cases
          ADD       OPDATDUR,OPOUETIM            * Time used in theatre
          GOTO      PORU8000
.
.         Check if this booking was done in the sessions theatre
.
PORU3000  MATCH     SP6,OPDATHET
          GOTO      PORU3500 IF EQUAL
.
          MATCH     OPDATHET,OPSETHET
          GOTO      PORU4000 IF NOT EQUAL        * Booking has been transferred
.
.         We have a booking for the current theatre
.
PORU3500  ADD       OPDCNOOP,OPOUBOPR            * Number of operations
          MATCH     "1",OPDCTEAM                 * Is this the 1st team
          GOTO      PORU8000 IF NOT EQUAL        * No. Finished stats
.
          ADD       ONE,OPOUBCAS                 * Number of cases
          ADD       OPDATDUR,OPOUBTIM            * Time used in theatre
          GOTO      PORU8000
.
.         We have a booking transferred from another theatre
.
PORU4000  ADD       OPDCNOOP,OPOUTOPR            * Number of operations
          MATCH     "1",OPDCTEAM                 * Is this the 1st team
          GOTO      PORU8000 IF NOT EQUAL        * No. Finished stats
.
          ADD       ONE,OPOUTCAS                 * Number of cases
          ADD       OPDATDUR,OPOUTTIM            * Time used in theatre
.
.         Post the statistics
.
PORU8000  BRANCH    UPORWR,PORU9000
          CALL      UPOPORU1
          GOTO      PORU9999
.
PORU9000  CALL      WROPORU1
.
PORU9999  RETURN
.
.*********************************************************************
.*                  PCSC0000                    Called by : GEN1000  *
.*        Update the Clinic Session Cancellation file - OPRCSCFD     *
.*********************************************************************
PCSC0000  MOVE      REQPER,OPCCDATE         * set up key variables
          MOVE      OPSECLIN,OPCCDOCT
          MOVE      OPSESTAT,OPCCTYPE
          REP       "0B1B2E",OPCCTYPE
          MOVE      OPSETPER,OPCCTIME
.
          MOVE      ONE,OPCCCTYP
          MOVE      OPSECANC,OPCCCODE
          CALL      UDCC0000                * update for cancellation code
.
          MOVE      TWO,OPCCCTYP
          MOVE      OPSEDELA,OPCCCODE
          CALL      UDCC0000                * update for delay code
.
          MOVE      THREE,OPCCCTYP
          MOVE      OPSEOVER,OPCCCODE
          CALL      UDCC0000                * update for overtime code
.
PCSC9999  RETURN
.           
.************************************************************************
.*                           UDCC0000                                   *
.*           Update the clinic session cancellation file                *
.*                   called by : PCSC1000                               *
.************************************************************************
UDCC0000  MATCH     SP3,OPCCCODE
          GOTO      UDCC9999 IF EQUAL
.
          PACK      KEY20,OPCCDATE,OPCCDOCT,OPCCTYPE,OPCCTIME,OPCCCTYP:
                          OPCCCODE
          
          CALL      RDOPCSC1                * read previous values
          BRANCH    OVRCD,UDCC1000
          MOVE      ZERO,UPORWR
          GOTO      UDCC1500
.
UDCC1000  CALL      CLVR2000                * clear variables
          MOVE      ONE,UPORWR              * set write flag 
.
UDCC1500  ADD       ONE,OPCCNUMB            * add one to number of times
          CALL      NEWA0000                * update new values
.
UDCC2000  BRANCH    UPORWR,UDCC3000
          
          CALL      UPOPCSC1
          GOTO      UDCC9999
.
UDCC3000  CALL      WROPCSC1
.
UDCC9999  RETURN
.           
.************************************************************************
.*                           RDDB0000                                   *
.*          Read the Operating Room Team file to update                 *
.*                   called by : RDDC0000                               *
.************************************************************************
RDDB0000  MOVE      OPDCUNIQ,OPDBUNIQ
          MOVE      OPDCTEAM,OPDBTEAM
.
          PACK      KEY11,OPDBUNIQ,OPDBTEAM
          CALL      RDOPDEB1
          COMPARE   ZERO,OVRCD
          GOTO      RDDB9000 IF EQUAL       * has a DEB record
.
          MATCH     "1",OPDCTEAM
          GOTO      RDDB9100 IF NOT EQUAL   * not first team so invalid
.
. -- operating team = 1 get details of default team from OPRSESFD  (if any)
.
          CALL      DFLT0000                * get default team
.
RDDB9000  MOVE      FALSE,EXIT              * has a DEB record
          GOTO      RDDB9999
.
RDDB9100  MOVE      TRUE,EXIT               * no DEB record
.
RDDB9999  RETURN
.
.*********************************************************************
.*                  DFLT0000                Called by : RDDB0000     *
.*        get default team from OPRSESFD file ( if any )             *
.*********************************************************************
DFLT0000  PACK      DIM42,OPSETYD1,OPSETYD2,OPSETYD3,OPSETYD4,OPSETYD5:
                          OPSETYD6,OPSETYD7,OPSETYD8,OPSETYN1,OPSETYN2:
                          OPSETYN3,OPSETYN4,OPSETYN5,OPSETYN6
.
          MOVE      OPDCUNIQ,OPDBUNIQ
          MOVE      ONE,OPDBTEAM            * set default team as team no. 1
.
          UNPACK    DIM42,OPDBTYD1,OPDBTYD2,OPDBTYD3,OPDBTYD4,OPDBTYD5:
                          OPDBTYD6,OPDBTYD7,OPDBTYD8,OPDBTYN1,OPDBTYN2:
                          OPDBTYN3,OPDBTYN4,OPSETYN5,OPSETYN6
.
          MOVE      OPSEDCC1,OPDBDCC1
          MOVE      OPSEDCC2,OPDBDCC2
          MOVE      OPSEDCC3,OPDBDCC3
          MOVE      OPSEDCC4,OPDBDCC4
          MOVE      OPSEDCC5,OPDBDCC5
          MOVE      OPSEDCC6,OPDBDCC6
          MOVE      OPSEDCC7,OPDBDCC7
          MOVE      OPSEDCC8,OPDBDCC8
.
          MOVE      OPSELVD1,OPDBLVD1
          MOVE      OPSELVD2,OPDBLVD2
          MOVE      OPSELVD3,OPDBLVD3
          MOVE      OPSELVD4,OPDBLVD4
          MOVE      OPSELVD5,OPDBLVD5
          MOVE      OPSELVD6,OPDBLVD6
          MOVE      OPSELVD7,OPDBLVD7
          MOVE      OPSELVD8,OPDBLVD8
.
          MOVE      OPSENUC1,OPDBNUC1
          MOVE      OPSENUC2,OPDBNUC2
          MOVE      OPSENUC3,OPDBNUC3
          MOVE      OPSENUC4,OPDBNUC4
          MOVE      OPSENUC5,OPDBNUC5
          MOVE      OPSENUC6,OPDBNUC6
.
DFLT9999  RETURN
+
.************************************************************************
.*                           PANE0000                                   *
.*             Update Anaesthetist Usage File                           *
.*                   called by : RDDC0000                               *
.************************************************************************
PANE0000  MOVE      REQPER,OPANDATE              * set up key variables
          MOVE      SP6,OPANDOCT                 * clear the anaesthetist
          CALL      GTDC0000                     * get anaesthetist code
          BRANCH    FNDANAE,PANE9999             * ignore if no anaesthetist
.
.
. if Par. set and team > 1 and we have an anaesth, dont count anaesthetic again
.
          MATCH     "1",OPDCTEAM                 * 1st team ?
          GOTO      PANE0500 IF EQUAL
.
          COMPARE   ZERO,OPCNPAMT
          GOTO      PANE9999 IF EQUAL            * ignore 
.
PANE0500  MOVE      OPDAANAE,OPANTYPE            * set up anaesthetic
.
          PACK      KEY15,OPANDATE,OPANDOCT,OPANTYPE
          CALL      RDOPANE1                     * read previous values
          BRANCH    OVRCD,PANE1000
.
          MOVE      ONE,UPORWR
          GOTO      PANE2000
.
PANE1000  CALL      CLVR2500
          MOVE      ZERO,OPANNUMB
          MOVE      ZERO,UPORWR
.
PANE2000  ADD       ONE,OPANNUMB                 * add one to number of times 
.                                                  used
          BRANCH    UPORWR,PANE3000
.
          CALL      WROPANE1
          GOTO      PANE9999
.
PANE3000  CALL      UPOPANE1
.
PANE9999  RETURN
.
.************************************************************************
.*                           GTDC0000                                   *
.*            Get required aniethetist code                             *
.*                   called by :                                        *
.************************************************************************
GTDC0000  MOVE      ONE,IND
          MOVE      ONE,FNDANAE                  * assume no anaesthetist found
.
GTDC1000  MOVE      SP3,TYPE
          LOAD      TYPE,IND,OPDBTYD1,OPDBTYD2,OPDBTYD3,OPDBTYD4,OPDBTYD5:
                             OPDBTYD6,OPDBTYD7,OPDBTYD8
.
          PACK      KEY5,OP,TYPE
          CALL      RDCODE1
          BRANCH    OVRCD,GTDC2000          * invalid code
.
          MATCH     "N",TCINDC1
          GOTO      GTDC2000 IF NOT EQUAL
.
.*** load doctor code of anae.
.
          LOAD      OPANDOCT,IND,OPDBDCC1,OPDBDCC2,OPDBDCC3,OPDBDCC4:
                                 OPDBDCC5,OPDBDCC6,OPDBDCC7,OPDBDCC8
.
          MOVE      ZERO,FNDANAE                   * we have found an Anaesthtst
          GOTO      GTDC9999
.
GTDC2000  ADD       ONE,IND
          COMPARE   NINE,IND
          GOTO      GTDC1000 IF LESS
.
          MOVE      SP6,OPANDOCT             * default to no anaesthetist
.
GTDC9999  RETURN 
.
.************************************************************************
.*                           PATT0000                                   *
.*            Update the Doctor Attendence Usage File                   *
.*                   called by : RDDC1000                               *
.************************************************************************
PATT0000  MOVE      REQPER,OPATDATE
          MOVE      ONE,IND
.
PATT0500  LOAD      DOCTCODE,IND,OPDBDCC1,OPDBDCC2,OPDBDCC3,OPDBDCC4:
                                 OPDBDCC5,OPDBDCC6,OPDBDCC7,OPDBDCC8
          LOAD      TYPE,IND,OPDBTYD1,OPDBTYD2,OPDBTYD3,OPDBTYD4:
                                 OPDBTYD5,OPDBTYD6,OPDBTYD7,OPDBTYD8
.         
          RESET     TYPE                         * no type?
          GOTO      PATT9000 IF EOS
.
          MATCH     SP3,TYPE                     * no type?
          GOTO      PATT9000 IF EQUAL
.
          MOVE      DOCTCODE,OPATDOCT
          PACK      KEY12,OPATDATE,OPATDOCT
          CALL      RDOPATT1                     * read previous values
          BRANCH    OVRCD,PATT1000
.
          MOVE      ONE,UPORWR
          GOTO      PATT2000
.
PATT1000  CALL      CLVR3000
          MOVE      ZERO,UPORWR
.
PATT2000  CALL      GTTP0000                * update values for current doct
.
          BRANCH    UPORWR,PATT3000
          CALL      WROPATT1
          GOTO      PATT9000
.
PATT3000  CALL      UPOPATT1
.
PATT9000  ADD       ONE,IND
          COMPARE   NINE,IND
          GOTO      PATT0500 IF LESS
.
PATT9999  RETURN
+
.************************************************************************
.*                           GTTP0000                                   *
.*    Update Operating Surgeon, Secondary Surgeon, Assistant            *
.*            and Aneasthetist counts                                   *
.*                   called by : PATT2000, UATT2000                     *
.************************************************************************
GTTP0000  MATCH     OPATDOCT,DOCTCODE
          
          GOTO      GTTP9999 IF NOT EQUAL
.
          PACK      KEY5,OP,TYPE
          CALL      RDCODE1
.
          MATCH     "S",TCINDC1                  * is current doc operating
.                                                  surgeon?
          GOTO      GTTP1000 IF NOT EQUAL
.
          ADD       ONE,OPATOPER                 * if so add one to no. of times
.                                                  as operating surgeon 
          GOTO      GTTP9999
.
GTTP1000  MATCH     "A",TCINDC1                  * is current doc assistant?
          GOTO      GTTP2000 IF NOT EQUAL
.
          ADD       ONE,OPATASST                 * if so, add one to no. of
.                                                  times as assistant
          GOTO      GTTP9999
.
GTTP2000  MATCH     "N",TCINDC1                  * is current doc aneasthetist?
          GOTO      GTTP9999 IF NOT EQUAL
.
          ADD       ONE,OPATANAE                 * if so,add one to no. of 
.                                                  times as aneasthetist?
.
GTTP9999  RETURN
+
.************************************************************************
.*                           RDSG0000                                   *
.*                Read the Patient Surgical Details File                *
.*                   called by : RDDA0000                               *
.************************************************************************
RDSG0000  MOVE      SP70,SAVKEY11
          MOVE      ZERO,EXIT
          MOVE      OPDAUNIQ,OPSGUNID
          PACK      KEY11,OPSGUNID,SP1
          CALL      RSOPSRG1
RDSG1000  CALL      RKOPSRG1
          BRANCH    OVRCD,RDSG9999
.
          MATCH     OPDAUNIQ,OPSGUNID
          GOTO      RDSG9999 IF NOT EQUAL   * different unique number
.
          CALL      LDTM0000              * get values to use for duration time
.
          CALL      DURN0000              * get duration time
.
          PACK      SAVKEY11,OPSGUNID,OPSGTMNO          
          CALL      RTSM0000                * Read Staff Member Table
.
          GOTO      RDSG1000
.
RDSG9999  RETURN
+
.************************************************************************
.*                           RTSM0000                                   *
.*               Read Theatre Staff Member Table                        *
.*                   called by : RDSG0000                               *
.************************************************************************
RTSM0000  MOVE      OPSGUNID,OPTSUNID
          MOVE      OPSGTMNO,OPTSTMNO
.
          MOVE      ZERO,ONCEFLAG           * Perform once flag set to not done
.
          PACK      KEY35,OPTSUNID,OPTSTMNO,SP70
          CALL      RSOPTSM1
RTSM1000  CALL      RKOPTSM1
          BRANCH    OVRCD,RTSM9000
.
          MATCH     OPSGUNID,OPTSUNID        
          GOTO      RTSM9000 IF NOT EQUAL   * different unique number
.
          MATCH     OPSGTMNO,OPTSTMNO
          GOTO      RTSM9000 IF NOT EQUAL   * Different team number
.
RTSM1500  CALL      UANE0000                * update ane file
          CALL      UATT0000                * update att file
          CALL      USOU0000                * update sou file
          CALL      USOS0000                * update sos file
          CALL      UOTS0000                * update ots file
          CALL      UCTS0000                * update cts file
.
          BRANCH    ONCEFLAG,RTSM1000       * Only call below lables once
.
          CALL      UDEP0000                * update dep file
          CALL      UWAR0000                * update war file
          CALL      UORU0000                * update oru file
          CALL      UCOS0000                * update cos file
          CALL      UCOU0000                * update cou file
.
          MOVE      ONE,ONCEFLAG            * Set perform once flag to done 
          GOTO      RTSM1000
.
RTSM9000
.
RTSM9999  RETURN
+
.************************************************************************
.*                           USOU0000                                   *
.*           Update the Clinic Operation Usage File                     *
.*                   called by : RTSM2000                               *
.************************************************************************
USOU0000  MOVE      REQPER,OPSODATE              * set up key variables
          MOVE      TWO,OPSOTRNE
          MOVE      SP6,DOCTCODE
.
          COMPARE   ZERO,OPTSSIND                * is this surgeon record?
          GOTO      USOU9999 IF NOT EQUAL
.
          MOVE      OPTSSLEV,SUPRVLVL
          MOVE      OPTSSCDE,DOCTCODE
.
..          IF        @EQUAL
..            MOVE      OPTSSLEV,SUPRVLVL
..            MOVE      OPTSSCDE,DOCTCODE
..          ELSE
..            COMPARE   ZERO,OPCNCLSU
..            IF        !@EQUAL
..              MOVE      OPSECLIN,DOCTCODE
..              MOVE      SP3,SUPRVLVL
..            ENDIF
..          ENDIF
.
          MOVE      DOCTCODE,OPSODOCT
          MOVE      OPSESTAT,OPSOTYPE
          REP       "0B1B2E",OPSOTYPE
          MOVE      OPDATYPE,OPSOOTYP
.
          MOVE      OPTSSCDE,DOCTCODE
.
..          IF        OPTSSIND = 0
..            MOVE      OPTSSCDE,DOCTCODE
..          ELSE
..            MOVE      OPSODOCT,DOCTCODE
..          ENDIF
          CALL      GTAT0000                     * get admission type indicator
          MOVE      ADTYPE,OPSOATYP
          CALL      GTAD0000                     * get attending doctor flag
          MOVE      OWN,OPSOOWN
.
          MATCH     SP3,SUPRVLVL               * supervisor needed for surgeon?
          GOTO      USOU1500 IF NOT EQUAL          * no
.
.  -- operating surgeon is a trainee
.
          MOVE      ONE,OPSOTRNE
          GOTO      USOU1700
.
USOU1500  MOVE      TWO,OPSOTRNE
.
USOU1700  PACK      KEY19,OPSODATE,OPSODOCT,OPSOTYPE,OPSOOTYP,OPSOATYP:
                          OPSOOWN,OPSOTRNE
          CALL      RDOPSOU1                     * read previous values 
          BRANCH    OVRCD,USOU1900
.
          MOVE      ONE,UPORWR
          GOTO      USOU2000
.
USOU1900  CALL      CLVR5500                     * clear variables
          MOVE      ZERO,UPORWR
.
USOU2000  MOVE      OPSONOPR,NOOPER
          CALL      NOOP0000                     * update no. of operations
          MOVE      NOOPER,OPSONOPR
.
          MATCH     "1",OPSGTMNO                 * team no = 1 ?
          GOTO      USOU2250 IF NOT EQUAL        * no
.
          ADD       ONE,OPSONCAS                 * add one to number of cases
.
USOU2250  ADD       DURATION,OPSOTIME            * add duration to time used
          BRANCH    UPORWR,USOU3000
          CALL      WROPSOU1
          GOTO      USOU9999
.
USOU3000  CALL      UPOPSOU1
.
USOU9999  RETURN
+
.************************************************************************
.*                           UANE0000                                   *
.*             Update Anaesthetist Usage File                           *
.*                   called by : RTSM0000                               *
.************************************************************************
UANE0000  MOVE      REQPER,OPANDATE              * set up key variables
          COMPARE   ONE,OPTSSIND
          GOTO      UANE9999 IF NOT EQUAL
          MOVE      SP6,OPANDOCT                 * clear the anaesthetist
.
          PACK      KEY5,OP,OPTSSTYP
          CALL      RDCODE1
.
          MATCH     "N",TCINDC1                  * check if anaesthetist
          GOTO      UANE9999 IF NOT EQUAL        * no
.
          MOVE      OPTSSCDE,OPANDOCT
.
. if Par. set and team > 1 and we have an anaesth, dont count anaesthetic again
.
          MATCH     "1",OPSGTMNO                 * 1st team ?
          GOTO      UANE0500 IF EQUAL
.
          COMPARE   ZERO,OPCNPAMT
          GOTO      UANE9999 IF EQUAL            * ignore 
.
UANE0500  MOVE      OPDAANAE,OPANTYPE            * set up anaesthetic
.
          PACK      KEY15,OPANDATE,OPANDOCT,OPANTYPE
          CALL      RDOPANE1                     * read previous values
          BRANCH    OVRCD,UANE1000
.
          MOVE      ONE,UPORWR
          GOTO      UANE2000
.
UANE1000  CALL      CLVR2500
          MOVE      ZERO,OPANNUMB
          MOVE      ZERO,UPORWR
.
UANE2000  ADD       ONE,OPANNUMB                 * add one to number of times 
.                                                  used
          BRANCH    UPORWR,UANE3000
.
          CALL      WROPANE1
          GOTO      UANE9999
.
UANE3000  CALL      UPOPANE1
.
UANE9999  RETURN
+
.************************************************************************
.*                           UATT0000                                   *
.*            Update the Doctor Attendence Usage File                   *
.*                   called by : RTSM0000                               *
.************************************************************************
UATT0000  COMPARE   TWO,OPTSSIND
          GOTO      UATT9999 IF EQUAL
.
          COMPARE   THREE,OPTSSIND
          GOTO      UATT9999 IF EQUAL
.
          MOVE      REQPER,OPATDATE
.
          MOVE      OPTSSCDE,DOCTCODE
          MOVE      OPTSSTYP,TYPE
.
          RESET     TYPE                         * no type?
          GOTO      UATT9999 IF EOS
.
          MATCH     SP3,TYPE                     * no type?
          GOTO      UATT9999 IF EQUAL
.
          MOVE      DOCTCODE,OPATDOCT
          PACK      KEY12,OPATDATE,OPATDOCT
          CALL      RDOPATT1                     * read previous values
          BRANCH    OVRCD,UATT1000
.
          MOVE      ONE,UPORWR
          GOTO      UATT2000
.
UATT1000  CALL      CLVR3000
          MOVE      ZERO,UPORWR
.
UATT2000  COMPARE   ZERO,OPTSSIND
          IF        @EQUAL
            ADD       ONE,OPATOPER
            GOTO      UATT2500
          ENDIF
.
          COMPARE   ONE,OPTSSIND
          IF        @EQUAL
            PACK      KEY5,OP,TYPE
            CALL      RDCODE1
            MATCH     "A",TCINDC1
            IF        @EQUAL
              ADD       ONE,OPATASST
            ENDIF
.
            MATCH     "N",TCINDC1
            IF        @EQUAL
              ADD       ONE,OPATANAE
            ENDIF
          ENDIF
.
UATT2500  BRANCH    UPORWR,UATT3000
          CALL      WROPATT1
          GOTO      UATT9999
.
UATT3000  CALL      UPOPATT1
.
UATT9999  RETURN
+
.************************************************************************
.*                           UCOU0000                                   *
.*           Update the Clinic Operation Usage File                     *
.*                   called by : RTSM0000                               *
.************************************************************************
UCOU0000  MOVE      REQPER,OPCODATE              * set up key variables
.
          MOVE      OPDACLIN,OPCODOCT
.
          COMPARE   ZERO,OPSESTAT
          GOTO      UCOU9999 IF EQUAL
.
          MOVE      OPSESTAT,OPCOTYPE
          REP       "0B1B2E",OPCOTYPE
.
          MOVE      OPDATYPE,OPCOOTYP
          MOVE      OPSETPER,OPCOTPER
.
          IF        OPTSSIND=0
            MOVE      OPTSSCDE,DOCTCODE
          ELSE
            MOVE      OPCODOCT,DOCTCODE
          ENDIF
.
          CALL      GTAT0000                     * get admission type flag
          MOVE      ADTYPE,OPCOATYP
.
          CALL      GTAD0000                     * get attending doctor flag
          MOVE      OWN,OPCOOWN
.
          PACK      KEY21,OPCODATE,OPCODOCT,OPCOTYPE,OPCOOTYP,OPCOTPER,OPCOATYP:
                          OPCOOWN
.
          CALL      RDOPCOU1
          BRANCH    OVRCD,UCOU1000
.
          MOVE      ONE,UPORWR
          GOTO      UCOU2000
.
UCOU1000  CALL      CLVR4000
          MOVE      ZERO,UPORWR
.
UCOU2000  MOVE      OPCONOPR,NOOPER              
          CALL      NOOP0000                     * update no. of operations
          MOVE      NOOPER,OPCONOPR 
.
          MATCH     "1",OPSGTMNO                 * operating team = 1 ?
          GOTO      UCOU2200 IF NOT EQUAL        * no
.
.  -- operating team = 1
.
          ADD       ONE,OPCONCAS                 * add one to number of cases
.
UCOU2200  ADD       DURATION,OPCOTIME            * add duration to time used
.
          BRANCH    UPORWR,UCOU3000
          CALL      WROPCOU1
          GOTO      UCOU9999
.
UCOU3000  CALL      UPOPCOU1
.
UCOU9999  RETURN
.
.************************************************************************
.*                           UCOS0000                                   *
.*             Update the Clinic Operation Summary File                 *
.*                   called by : RTSM0000                               *
.************************************************************************
UCOS0000  MOVE      REQPER,OPCPDATE              * set up key variables
.
          MOVE      OPDACLIN,OPCPDOCT
.
          PACK      KEY14,OPSGUNID,OPSGTMNO,SP10
          CALL      RSOPPMB1
UCOS1000  CALL      RKOPPMB1
          BRANCH    OVRCD,UCOS9999
. 
          MATCH     OPSGUNID,OPPMUNID
          GOTO      UCOS9999 IF NOT EQUAL
.
          MATCH     OPSGTMNO,OPPMTMNO
          GOTO      UCOS9999 IF NOT EQUAL
.
          MOVE      OPPMCMBS,OPCPOPER
.
          MATCH     SP9,OPCPOPER
          GOTO      UCOS1000 IF EQUAL
.
          MOVE      OPCPOPER,OPERCODE
.
          PACK      KEY21,OPCPDATE,OPCPDOCT,OPCPOPER
          CALL      RDOPCOS1                     * read previous values
          BRANCH    OVRCD,UCOS2000
.
          MOVE      ONE,UPORWR
          GOTO      UCOS3000
.
UCOS2000  CALL      CLVR5000 
          MOVE      ZERO,UPORWR
.
UCOS3000  PACK      SAVKEY14,OPPMUNID,OPPMTMNO,OPPMCNTR
          CALL      CKOP0000            * operation code already exists
          BRANCH    EXIT,UCOS5000       * yes
.
          MATCH     "1",OPSGTMNO                 * team no = 1 ?
          GOTO      UCOS3400 IF NOT EQUAL        * no
.
          ADD       ONE,OPCPNCAS                 * increment number of cases
.
UCOS3400  ADD       DURATION,OPCPTTIM            * add duration to total time
.
.
          COMPARE   DURATION,OPCPHTIM            * longest operation?
          GOTO      UCOS4000 IF NOT LESS
.
          MOVE      DURATION,OPCPHTIM
.
UCOS4000  
.         IF        OPCPLTIM=0
.           MOVE      DURATION,OPCPLTIM
.         ENDIF
          IF        UPORWR=0
            MOVE      DURATION,OPCPLTIM
          ENDIF
.
          COMPARE   DURATION,OPCPLTIM            * shortest operation?
          GOTO      UCOS5000 IF LESS
.
          MOVE      DURATION,OPCPLTIM
.
UCOS5000  IF        OPCNNOOP=1
            ADD       OPSGNOOP,OPCPNOPR
          ELSE
            ADD       ONE,OPCPNOPR          * increment number of operations
          ENDIF
          PACK      KEY21,OPCPDATE,OPCPDOCT,OPCPOPER,SP70
.
          BRANCH    UPORWR,UCOS6000
          CALL      WROPCOS1
          GOTO      UCOS1000
.
UCOS6000  CALL      RAOPCOS1                     * read previous values
          IF        OVRCD=0
            CALL      UPOPCOS1
          ENDIF
          GOTO      UCOS1000
.
UCOS9999  RETURN
+
.************************************************************************
.*                           USOS0000                                   *
.*            Update Surgeon Operation Summary File                     *
.*                   called by : RTSM0000                               *
.************************************************************************
USOS0000  MOVE      REQPER,OPSPDATE               * set up key variables
.
          COMPARE   ZERO,OPTSSIND                * is this surgeon record?
          GOTO      USOS9999 IF NOT EQUAL        * no, exit
.
          MOVE      "999999",OPSPLTIM
          MOVE      ZERO,OPSPHTIM
          MOVE      ZERO,OPSPTTIM
          MOVE      SP6,DOCTCODE
.
          MOVE      OPTSSCDE,DOCTCODE
          MOVE      DOCTCODE,OPSPDOCT
.
          MOVE      ZERO,COUNTER
          PACK      KEY14,OPSGUNID,OPSGTMNO,SP10
          CALL      RSOPPMB1
USOS0500  CALL      RKOPPMB1
          BRANCH    OVRCD,USOS9999
.
          MATCH     OPSGUNID,OPPMUNID
          GOTO      USOS9999 IF NOT EQUAL
.
          MATCH     OPSGTMNO,OPPMTMNO
          GOTO      USOS9999 IF NOT EQUAL
.
          ADD       ONE,COUNTER
          MOVE      OPPMCMBS,OPSPOPER
          MOVE      OPSPOPER,OPERCODE
.
          PACK      KEY21,OPSPDATE,OPSPDOCT,OPSPOPER
          CALL      RDOPSOS1                      * get previous values
          BRANCH    OVRCD,USOS1000
.
          MOVE      ONE,UPORWR
          GOTO      USOS2000
.
USOS1000  CALL      CLVR6000
          MOVE      ZERO,UPORWR
.
USOS2000  PACK      SAVKEY14,OPPMUNID,OPPMTMNO,OPPMCNTR,SP70
.
.         If Using Theatre Banding for Op.Average, no need checking for 
.         same MBS Code.
.
          MATCH     "1",OPCNOPAV
          IF        !@EQUAL
            CALL      CKOP0000                * operation code already read
            BRANCH    EXIT,USOS4000           * yes
          ENDIF
.
          MATCH     "1",OPSGTMNO                 * team no = 1 ?
          GOTO      USOS2500 IF NOT EQUAL        * no
.
          ADD       ONE,OPSPNCAS               * increment number of cases
.
USOS2500  MOVE      ZERO,CNOPRFLG           * Count Operation number flag
          MATCH     "1",OPCNOPAV
          IF        @EQUAL
            CALL      GDUR0000              * Get Op.time duration from tmp file
          ENDIF
          ADD       DURATION,OPSPTTIM          * add duration to total time
.
          COMPARE   DURATION,OPSPHTIM          * longest operation?
          GOTO      USOS3000 IF NOT LESS
.
          MOVE      DURATION,OPSPHTIM
.
USOS3000  
.         IF        OPSPLTIM=0
.           MOVE      DURATION,OPSPLTIM
.         ENDIF
          IF        UPORWR=0
            MOVE      DURATION,OPSPLTIM
          ENDIF
.
          COMPARE   DURATION,OPSPLTIM          * shortest op.?
          GOTO      USOS4000 IF LESS
.
          MOVE      DURATION,OPSPLTIM
.
USOS4000  IF        OPCNNOOP = 1
            ADD       OPSGNOOP,OPSPNOPR
          ELSE
            MATCH     "1",OPCNOPAV
            IF        @EQUAL
              ADD       CNOPRFLG,OPSPNOPR        * only include first three MBS
            ELSE
              ADD       ONE,OPSPNOPR             * increment no. of operations
            ENDIF
          ENDIF
.
          BRANCH    UPORWR,USOS5000
          CALL      WROPSOS1
          GOTO      USOS0500 
.
USOS5000  CALL      UPOPSOS1
          GOTO      USOS0500 
.
USOS9999  RETURN          
+         
.************************************************************************
.*                           GDUR0000                                   *
.*              Get Op.time duration from temp file                     *
.************************************************************************
GDUR0000  MOVE      ZERO,F1
          MOVE      ZERO,DURATION
          PACK      KEY18,OPPMUNID,SP70
          CALL      RSTMMBS1
GDUR1000  CALL      RKTMMBS1
          BRANCH    OVRCD,GDUR9999
.
          MATCH     OPPMUNID,XPMUNID
          GOTO      GDUR9999 IF NOT EQUAL
.
          MATCH     " 0",XPMCNTR            * Header record
          GOTO      GDUR1000 IF EQUAL
.
          ADD       ONE,F1
.
          MATCH     OPPMTMNO,XPMTEAM
          GOTO      GDUR1000 IF NOT EQUAL   * different Team
          MATCH     DOPPMCNT,XPMPCNT
          GOTO      GDUR1000 IF NOT EQUAL   * different counter
          MATCH     OPPMCMBS,XPMCMBS        * Same CMBS Item ?
          GOTO      GDUR1000 IF NOT EQUAL
.
          COMPARE   FOUR,F1
          GOTO      GDUR9999 IF NOT LESS    * Only take first three highest MBS
.
          MOVE      FPMODUR,DURATION        * % Op. time
          MOVE      ONE,CNOPRFLG 
.
GDUR9999  RETURN
+
.************************************************************************
.*                           UOTS0000                                   *
.*            Update Operation Type Summary File                        *
.*                   called by : RDDC1000                               *
.************************************************************************
UOTS0000  MOVE      OPDADATE,OPOTDATE       * set up key variables
          MOVE      OPDATYPE,OPOTTYPE
          CALL      GTSB0000                * get summary breakdown OPOTPERD
.
          PACK      KEY15,OPOTDATE,OPOTTYPE,OPOTPERD,OPOTUSER
          CALL      RDOPOTS1                    * get previous values
          BRANCH    OVRCD,UOTS1000
.
          MOVE      ONE,UPORWR
          GOTO      UOTS2000
.
UOTS1000  CALL      CLVR7000
          MOVE      ZERO,UPORWR
.
UOTS2000  MOVE      OPOTNOPR,NOOPER
          CALL      NOOP0000                    * get no. of operations?[
          MOVE      NOOPER,OPOTNOPR
.
          MATCH     "1",OPSGTMNO
          GOTO      UOTS2500 IF NOT EQUAL
.
          ADD       ONE,OPOTNCAS                * add one to no. of cases
          ADD       OPDATDUR,OPOTTIME           * theatre duration
.
UOTS2500  MOVE      OPSEDAY,OPOTDOFW            * set up day of week
.
          BRANCH    UPORWR,UOTS3000
          CALL      WROPOTS1
.
          GOTO      UOTS9999
.
UOTS3000  CALL      UPOPOTS1
.
UOTS9999  RETURN
+          
.************************************************************************
.*                           UWAR0000                                   *
.*            Update Operating Room Ward Statistics File                *
.*                   called by : RTSM0000                               *
.************************************************************************
UWAR0000  MOVE     REQPER,OPWADATE
.
          MOVE     SP3,OPWAWARD
          CALL     GTWA0000                      * get ward/department code
.
          PACK     KEY9,OPWADATE,OPWAWARD
          CALL     RDOPWAR1                      * get previous values
          BRANCH   OVRCD,UWAR1000
.
          MOVE     ONE,UPORWR
          GOTO     UWAR2000
.
UWAR1000  CALL     CLVR8000
          MOVE     ZERO,UPORWR
.
UWAR2000  MOVE     OPWANOPR,NOOPER
          CALL     NOOP0000                      * update no. of operations 
          MOVE     NOOPER,OPWANOPR
. 
          MATCH     "1",OPSGTMNO                 * team no = 1 ?
          GOTO      UWAR2500 IF NOT EQUAL        * no
.
          ADD      ONE,OPWANCAS                  * add one to number of
.                                                  operations
UWAR2500  BRANCH   UPORWR,UWAR3000
.
          CALL     WROPWAR1
          GOTO     UWAR9999
.
UWAR3000  CALL     UPOPWAR1
.
UWAR9999  RETURN
.
.************************************************************************
.*                           UDEP0000                                   *
.*            Update Operating Room Department Statistics File          *
.*                   called by : RTSM0000                               *
.************************************************************************
UDEP0000  MOVE     REQPER,OPDEDATE
.
          MOVE     SP3,OPDEDEPT
          CALL     GTWA0000                      * get ward/department code
.
          PACK     KEY9,OPDEDATE,OPDEDEPT,SP10
          CALL     RDOPDEP1                      * get previous values
          BRANCH   OVRCD,UDEP1000
.
          MOVE     ONE,UPORWR
          GOTO     UDEP2000
.
UDEP1000  CALL     CLVR8100
          MOVE     ZERO,UPORWR
.
UDEP2000  MOVE     OPDENOPR,NOOPER
          CALL     NOOP0000                      * update no. of operations 
          MOVE     NOOPER,OPDENOPR
. 
          MATCH     "1",OPSGTMNO                 * team no = 1 ?
          GOTO      UDEP2500 IF NOT EQUAL        * no
.
          ADD      ONE,OPDENCAS                  * add one to number of
.                                                  operations
UDEP2500  BRANCH   UPORWR,UDEP3000
.
          CALL     WROPDEP1 
          GOTO     UDEP9999
.
UDEP3000  CALL     UPOPDEP1
.
UDEP9999  RETURN
+
.*********************************************************************
.*                  UCTS0000                    Called by : RDDC1000 *
.*        Update Clinic Type Summary File                            *
.*********************************************************************
UCTS0000  MOVE      OPDADATE,OPCTDATE       * set up key variables
          MOVE      OPDACLIN,OPCTCLIN       * clinic
          CALL      GTSB0000                * get summary breakdown OPOTPERD
          MOVE      OPOTPERD,OPCTPERD       * get the breakdown
. 
          PACK      KEY18,OPCTDATE,OPCTCLIN,OPCTPERD,OPCTUSER
          CALL      RDOPCTS1                    * get previous values
          BRANCH    OVRCD,UCTS1000
.
          MOVE      ONE,UPORWR
          GOTO      UCTS2000
.
UCTS1000  CALL      CLVR9000
          MOVE      ZERO,UPORWR
.
UCTS2000  MOVE      OPCTNOPR,NOOPER
          CALL      NOOP0000                    * get no. of operations
          MOVE      NOOPER,OPCTNOPR
.
          MATCH     "1",OPSGTMNO
          GOTO      UCTS2500 IF NOT EQUAL
.
          ADD       ONE,OPCTNCAS                * add one to no. of cases
          ADD       OPDATDUR,OPCTTIME           * add duration to time used
.
UCTS2500  MOVE      OPSEDAY,OPCTDOFW            * set up day of week
.
          BRANCH    UPORWR,UCTS3000
          CALL      WROPCTS1
          GOTO      UCTS9999
.
UCTS3000  CALL      UPOPCTS1
.
UCTS9999  RETURN
+
.************************************************************************
.*                           UORU0000                                   *
.*           Update the Operating room usage file                       *
.*                   called by : RTSM0000                               *
.************************************************************************
UORU0000  MOVE      REQPER,OPOUDATE              * set up key variables
.
          MOVE      OPDATHET,OPOUROOM            * try the theatre for booking
          MATCH     SP6,OPOUROOM                 * is it blank ?
          GOTO      UORU0020 IF NOT EQUAL        * no. we have a theatre code
          MOVE      OPSETHET,OPOUROOM            * yes. use the session default
.
UORU0020  PACK      KEY12,OPOUDATE,OPOUROOM 
          CALL      RDOPORU1
          BRANCH    OVRCD,UORU1000
.
          MOVE      ZERO,UPORWR
          GOTO      UORU2000
.
UORU1000  CALL      CLVR1000                     * clear variables
          MOVE      ONE,UPORWR                   * set flag to write
.
          MOVE      ZERO,OPOUAVAL                * Will be set up later
.
.         Check if this is an extra session
.
UORU2000  COMPARE   TWO,OPSESTAT                 * Extra session ?
          GOTO      UORU3000 IF NOT EQUAL        * No.
.
.         We have an extra session
.
          MOVE      OPOUEOPR,NOOPER
          CALL      NOOP0000
...       MOVE      NOOPER,OPOUBOPR                                   *D-166433
          MOVE      NOOPER,OPOUEOPR                                   *I-166433
          MATCH     "1",OPSGTMNO                 * Is this the 1st team
          GOTO      UORU8000 IF NOT EQUAL        * No. Finished stats
.
          ADD       ONE,OPOUECAS                 * Number of cases
          ADD       OPDATDUR,OPOUETIM            * Time used in theatre
          GOTO      UORU8000
.
.         Check if this booking was done in the sessions theatre
.
UORU3000  MATCH     SP6,OPDATHET
          GOTO      UORU3500 IF EQUAL
.
          MATCH     OPDATHET,OPSETHET
          GOTO      UORU4000 IF NOT EQUAL        * Booking has been transferred
.
.         We have a booking for the current theatre
.
UORU3500  MOVE      OPOUBOPR,NOOPER
          CALL      NOOP0000
          MOVE      NOOPER,OPOUBOPR            * Number of operations
          MATCH     "1",OPSGTMNO                 * Is this the 1st team
          GOTO      UORU8000 IF NOT EQUAL        * No. Finished stats
.
          ADD       ONE,OPOUBCAS                 * Number of cases
          ADD       OPDATDUR,OPOUBTIM            * Time used in theatre
          GOTO      UORU8000
.
.         We have a booking transferred from another theatre
.
UORU4000  MOVE      OPOUTOPR,NOOPER
          CALL      NOOP0000
          MOVE      NOOPER,OPOUTOPR            * Number of operations
          MATCH     "1",OPSGTMNO                 * Is this the 1st team
          GOTO      UORU8000 IF NOT EQUAL        * No. Finished stats
.
          ADD       ONE,OPOUTCAS                 * Number of cases
          ADD       OPDATDUR,OPOUTTIM            * Time used in theatre
.
.         Post the statistics
.
UORU8000  BRANCH    UPORWR,UORU9000
          CALL      UPOPORU1
          GOTO      UORU9999
.
UORU9000  CALL      WROPORU1
.
UORU9999  RETURN
+
.**********************************************************************
.*                      CKOP0000                Called by : PSOS0000  *
.*                Check operation code                      PCOS0000  *
.*         PARAMETER passed OPERCODE - current operation code         *
.*                          OPPMCNTR - field no. of operation code    *
.**********************************************************************
CKOP0000  BRANCH    OPPMCNTR,CKOP8000
          UNPACK    SAVKEY14,UNIQID,TEAMNO,D3
.
CKOP1000  CALL      RPOPPMB1               * read back one record
          BRANCH    OVRCD,CKOP8000
.
          MATCH     UNIQID,OPPMUNID
          GOTO      CKOP8000 IF NOT EQUAL
.
          MATCH     TEAMNO,OPPMTMNO
          GOTO      CKOP8000 IF NOT EQUAL
.
          MATCH     OPPMCMBS,OPERCODE   
          GOTO      CKOP9000 IF EQUAL      * operation code exists
.
          GOTO      CKOP1000               * keep reading til eof
.
CKOP8000  MOVE      FALSE,EXIT             * operation code doesn't exist yet
          GOTO      CKOP9500
.
CKOP9000  MOVE      TRUE,EXIT
.
CKOP9500  MOVE      SAVKEY14,KEY14
          CALL      RDOPPMB1               * resposition on current record
CKOP9999  RETURN
+
.*************************************************************************
.*                           NOOP0000                                    *
.*                 Get number of operations                              *
.*    called by : USOU0000 , UCOS0000, UOTS0000, UWAR0000, UCTS0000,     *
.*                UDEP0000                                               *
.*************************************************************************
NOOP0000  BRANCH    OPCNNOOP,NOOP3000            * using 'no. of oper.'?
.
          PACK      KEY14,OPSGUNID,OPSGTMNO,SP10
          CALL      RSOPPMB1
NOOP1000  CALL      RKOPPMB1
          BRANCH    OVRCD,NOOP9999
.
          MATCH     OPSGUNID,OPPMUNID
          GOTO      NOOP9999 IF NOT EQUAL
.
          MATCH     OPSGTMNO,OPPMTMNO
          GOTO      NOOP9999 IF NOT EQUAL
.
          ADD       ONE,NOOPER      * increment no. of operations
          GOTO      NOOP1000
.
NOOP3000  ADD       OPSGNOOP,NOOPER
.        
NOOP9999  RETURN
.
.************************************************************************
.*                           RDDC0000                                   *
.*                Read the Operation Usage File                         *
.*                   called by : RDDA0000                               *
.************************************************************************
RDDC0000  MOVE      SP70,SAVKEY11
          MOVE      OPDAUNIQ,OPDCUNIQ
          PACK      KEY11,OPDCUNIQ,SP1
          CALL      RSOPDEC1                * position pointer
.
RDDC1000  CALL      RKOPDEC1                * read file
          BRANCH    OVRCD,RDDC9999          * end of file
.
          MATCH     OPDAUNIQ,OPDCUNIQ
          GOTO      RDDC9999 IF NOT EQUAL   * different unique number
.
          PACK      SAVKEY11,OPDCUNIQ,OPDCTEAM
          LOAD      OPOTUSER,OPCNOTSU,OPDCUSR1,OPDCUSR2,OPDCUSR3,OPDCUSR4:
                                      OPDCUSR5,OPDCUSR6,OPDCUSR7,OPDCUSR8:
                                      OPDAUSR1,OPDAUSR2,OPDAUSR3,OPDAUSR4
.
          LOAD      OPCTUSER,OPCNCTSU,OPDCUSR1,OPDCUSR2,OPDCUSR3,OPDCUSR4:
                                      OPDCUSR5,OPDCUSR6,OPDCUSR7,OPDCUSR8:
                                      OPDAUSR1,OPDAUSR2,OPDAUSR3,OPDAUSR4
.
          CALL      RDDB0000                * get team details
          BRANCH    EXIT,RDDC1000           * no DEB record
.
          CALL      PANE0000                * update ane file
          CALL      PATT0000                * update att file
          CALL      PCOU0000                * update cou file
          CALL      PSOU0000                * update sou file
          CALL      PSOS0000                * update sos file
          CALL      PCOS0000                * update cos file
          CALL      POTS0000                * update ots file
          CALL      PORU0000                * update oru file
          CALL      PWAR0000                * update war file
          CALL      PCTS0000                * update cts file
          CALL      PDEP0000                * update dep file
          GOTO      RDDC1000
.
RDDC9999  RETURN
.
.************************************************************************
.*                           PCOU0000                                   *
.*           Update the Clinic Operation Usage File                     *
.*                   called by : RDDB0000                               *
.************************************************************************
PCOU0000  MOVE      REQPER,OPCODATE              * set up key variables
          MOVE      OPDACLIN,OPCODOCT
.
          COMPARE   ZERO,OPSESTAT
          GOTO      PCOU9999 IF EQUAL
.
          MOVE      OPSESTAT,OPCOTYPE
          REP       "0B1B2E",OPCOTYPE
.
          MOVE      OPDATYPE,OPCOOTYP
          MOVE      OPSETPER,OPCOTPER
.
          MOVE      OPCODOCT,DOCTCODE
          CALL      GTAT0000                     * get admission type flag
          MOVE      ADTYPE,OPCOATYP
.
          CALL      GTAD0000                     * get attending doctor flag
          MOVE      OWN,OPCOOWN
.
          PACK      KEY21,OPCODATE,OPCODOCT,OPCOTYPE,OPCOOTYP,OPCOTPER,OPCOATYP:
                          OPCOOWN
.
          CALL      RDOPCOU1
          BRANCH    OVRCD,PCOU1000
.
          MOVE      ONE,UPORWR
          GOTO      PCOU2000
.
PCOU1000  CALL      CLVR4000
          MOVE      ZERO,UPORWR
.
PCOU2000  MOVE      OPCONOPR,NOOPER              
          CALL      NOPR0000                     * update no. of operations
          MOVE      NOOPER,OPCONOPR 
.
          MATCH     "1",OPDCTEAM                 * operating team = 1 ?
          GOTO      PCOU2200 IF NOT EQUAL        * no
.
.  -- operating team = 1
.
          ADD       ONE,OPCONCAS                 * add one to number of cases
.
PCOU2200  ADD       OPDCDURA,OPCOTIME            * add duration to time used
.
          BRANCH    UPORWR,PCOU3000
          CALL      WROPCOU1
          GOTO      PCOU9999
.
PCOU3000  CALL      UPOPCOU1
.
PCOU9999  RETURN
.
.************************************************************************
.*                           PCOS0000                                   *
.*             Update the Clinic Operation Summary File                 *
.*                   called by : RDDB0000                                *
.************************************************************************
PCOS0000  BRANCH    OPCNNOOP,PCOS9999
          MOVE      REQPER,OPCPDATE              * set up key variables
          MOVE      OPDACLIN,OPCPDOCT
          MOVE      ZERO,IND
.
PCOS1000  ADD       ONE,IND
          LOAD      OPCPOPER,IND,OPDCICD1,OPDCICD2,OPDCICD3,OPDCICD4:
                                 OPDCICD5,OPDCICD6
.
          COMPARE   SEVEN,IND
          GOTO      PCOS9999 IF EQUAL
.
          MATCH     SP9,OPCPOPER
          GOTO      PCOS1000 IF EQUAL
.
          MOVE      OPCPOPER,OPERCODE
.
          PACK      KEY21,OPCPDATE,OPCPDOCT,OPCPOPER
          CALL      RDOPCOS1                     * read previous values
          BRANCH    OVRCD,PCOS2000
.
          MOVE      ONE,UPORWR
          GOTO      PCOS3000
.
PCOS2000  CALL      CLVR5000 
          MOVE      ZERO,UPORWR
.
PCOS3000  CALL      MOPC0000            * operation code already exists
.
          BRANCH    EXIT,PCOS5000       * yes
.
          MATCH     "1",OPDCTEAM                 * team no = 1 ?
          GOTO      PCOS3400 IF NOT EQUAL        * no
.
          ADD       ONE,OPCPNCAS                 * increment number of cases
.
PCOS3400  ADD       OPDCDURA,OPCPTTIM            * add duration to total time
.
          COMPARE   OPDCDURA,OPCPHTIM            * longest operation?
          GOTO      PCOS4000 IF NOT LESS
.
          MOVE      OPDCDURA,OPCPHTIM
.
PCOS4000  IF        OPCPLTIM=0
            MOVE      OPDCDURA,OPCPLTIM
          ENDIF
.
          COMPARE   OPDCDURA,OPCPLTIM            * shortest operation?
          GOTO      PCOS5000 IF LESS
.
          MOVE      OPDCDURA,OPCPLTIM
.
PCOS5000  ADD       ONE,OPCPNOPR          * increment number of operations
          PACK      KEY21,OPCPDATE,OPCPDOCT,OPCPOPER
.
          BRANCH    UPORWR,PCOS6000
          CALL      WROPCOS1
          GOTO      PCOS1000
.
PCOS6000  CALL      RAOPCOS1                     * read previous values
          IF        OVRCD=0
            CALL      UPOPCOS1
          ENDIF
          GOTO      PCOS1000
.
PCOS9999  RETURN
.
.**********************************************************************
.*                      MOPC0000                Called by : PSOS0000  *
.*                match operation code                      PCOS0000  *
.*         PARAMETER passed OPERCODE - current operation code         *
.*                           IND     - field no. of operation code    *
.**********************************************************************
MOPC0000  BRANCH    IND,MOPC8000
.
          MOVE      ONE,COUNT
MOPC1000  MOVE      SP9,PREVOPER
.
          LOAD      PREVOPER,COUNT,OPDCICD1,OPDCICD2,OPDCICD3,OPDCICD4:
                                   OPDCICD5,OPDCICD6
.
MOPC2000  MATCH     PREVOPER,OPERCODE      * operation code already read ?
          GOTO      MOPC9000 IF EQUAL      * yes  
.
          ADD       ONE,COUNT

          COMPARE   IND,COUNT 
          GOTO      MOPC1000 IF LESS


MOPC8000  MOVE      FALSE,EXIT             * operation code doesn't exist yet
          GOTO      MOPC9999
.
MOPC9000  MOVE      TRUE,EXIT
MOPC9999  RETURN
.************************************************************************
.*                           PSOU0000                                   *
.*           Update the Clinic Operation Usage File                     *
.*                   called by : RDDB0000                               *
.************************************************************************
PSOU0000  MOVE      REQPER,OPSODATE              * set up key variables
          MOVE      TWO,OPSOTRNE
          MOVE      SP6,DOCTCODE
          CALL      GTOS0000                    * get operating surgeon code
.
          MOVE      DOCTCODE,OPSODOCT
          MOVE      OPSESTAT,OPSOTYPE
          REP       "0B1B2E",OPSOTYPE
          MOVE      OPDATYPE,OPSOOTYP
          MOVE      OPSODOCT,DOCTCODE
          CALL      GTAT0000                     * get admission type indicator
          MOVE      ADTYPE,OPSOATYP
          CALL      GTAD0000                     * get attending doctor flag
          MOVE      OWN,OPSOOWN
.
          MATCH     SP3,SUPRVLVL               * supervisor needed for surgeon?
          GOTO      PSOU1500 IF EQUAL          * no
.
.  -- operating surgeon is a trainee
.
          MOVE      ONE,OPSOTRNE
          GOTO      PSOU1700
.
PSOU1500  MOVE      TWO,OPSOTRNE
.
PSOU1700  PACK      KEY19,OPSODATE,OPSODOCT,OPSOTYPE,OPSOOTYP,OPSOATYP:
                          OPSOOWN,OPSOTRNE
          CALL      RDOPSOU1                     * read previous values 
          BRANCH    OVRCD,PSOU1900
.
          MOVE      ONE,UPORWR
          GOTO      PSOU2000
.
PSOU1900  CALL      CLVR5500                     * clear variables
          MOVE      ZERO,UPORWR
.
PSOU2000  MOVE      OPSONOPR,NOOPER
          CALL      NOPR0000                     * update no. of operations
          MOVE      NOOPER,OPSONOPR
.
          MATCH     "1",OPDCTEAM                 * team no = 1 ?
          GOTO      PSOU2250 IF NOT EQUAL        * no
.
          ADD       ONE,OPSONCAS                 * add one to number of cases
.
PSOU2250  ADD       OPDCDURA,OPSOTIME            * add duration to time used
          BRANCH    UPORWR,PSOU3000
          CALL      WROPSOU1
          GOTO      PSOU9999
.
PSOU3000  CALL      UPOPSOU1
.
PSOU9999  RETURN
.*************************************************************************
.*                           NOPR0000                                    *
.*                 Get number of operations                              *
.*            called by : PSOU0000 , PCOS0000                            *
.*************************************************************************
NOPR0000  BRANCH    OPCNNOOP,NOPR3000            * using 'no. of oper.'?
          MOVE      ZERO,IND
.
NOPR1000  ADD       ONE,IND
          LOAD      CODE,IND,OPDCICD1,OPDCICD2,OPDCICD3,OPDCICD4:
                                OPDCICD5,OPDCICD6
.
          COMPARE   SEVEN,IND                 * finished?
          GOTO      NOPR9999 IF EQUAL
.
          MATCH     SP9,CODE                     * no code?
          GOTO      NOPR1000 IF EQUAL
.
.
NOPR2000  ADD       ONE,NOOPER      * increment no. of operations
          GOTO      NOPR1000
.
NOPR3000  ADD       OPDCNOOP,NOOPER
.        
NOPR9999  RETURN
.
.************************************************************************
.*                           PSOS0000                                   *
.*            Update Surgeon Operation Summary File                     *
.*                   called by : RDDC1000                               *
.************************************************************************
PSOS0000  MOVE      REQPER,OPSPDATE               * set up key variables
          MOVE      "999999",OPSPLTIM
          MOVE      ZERO,OPSPHTIM
          MOVE      ZERO,OPSPTTIM
          MOVE      SP6,DOCTCODE
          CALL      GTOS0000                      * get operating surgeon
.
          MOVE      DOCTCODE,OPSPDOCT
          MOVE      ZERO,IND
.
PSOS0500  ADD       ONE,IND
          LOAD      OPSPOPER,IND,OPDCICD1,OPDCICD2,OPDCICD3,OPDCICD4,OPDCICD5:
                                 OPDCICD6
.
          COMPARE   SEVEN,IND                     * finished?
          GOTO      PSOS9999 IF EQUAL
.
          MATCH     SP9,OPSPOPER                  * no operation code?
          GOTO      PSOS0500 IF EQUAL
.
          MOVE      OPSPOPER,OPERCODE
.
          PACK      KEY21,OPSPDATE,OPSPDOCT,OPSPOPER
          CALL      RDOPSOS1                      * get previous values
          BRANCH    OVRCD,PSOS1000
.
          MOVE      ONE,UPORWR
          GOTO      PSOS2000
.
PSOS1000  CALL      CLVR6000
          MOVE      ZERO,UPORWR
.
PSOS2000  CALL      MOPC0000                * operation code already read
          BRANCH    EXIT,PSOS4000           * yes
.
          MATCH     "1",OPDCTEAM                 * team no = 1 ?
          GOTO      PSOS2500 IF NOT EQUAL        * no
.
          ADD       ONE,OPSPNCAS               * increment number of cases
.
PSOS2500  ADD       OPDCDURA,OPSPTTIM          * add duration to total time
.
          COMPARE   OPDCDURA,OPSPHTIM          * longest operation?
          GOTO      PSOS3000 IF NOT LESS
.
          MOVE      OPDCDURA,OPSPHTIM
.
PSOS3000  IF        OPSPLTIM=0
            MOVE      OPDCDURA,OPSPLTIM
          ENDIF
          COMPARE   OPDCDURA,OPSPLTIM          * shortest op.?
          GOTO      PSOS4000 IF LESS
.
          MOVE      OPDCDURA,OPSPLTIM
.
PSOS4000  ADD       ONE,OPSPNOPR               * increment no. of operations
.
          BRANCH    UPORWR,PSOS5000
.
          CALL      WROPSOS1
          GOTO      PSOS0500 
.
PSOS5000  CALL      UPOPSOS1
          GOTO      PSOS0500 
.
PSOS9999  RETURN          
+         
.************************************************************************
.*                           POTS0000                                   *
.*            Update Operation Type Summary File                        *
.*                   called by : RDDC1000                               *
.************************************************************************
POTS0000  MOVE      OPDADATE,OPOTDATE       * set up key variables
          MOVE      OPDATYPE,OPOTTYPE
          CALL      GTSB0000                * get summary breakdown OPOTPERD
.
          PACK      KEY15,OPOTDATE,OPOTTYPE,OPOTPERD,OPOTUSER
          CALL      RDOPOTS1                    * get previous values
          BRANCH    OVRCD,POTS1000
.
          MOVE      ONE,UPORWR
          GOTO      POTS2000
.
POTS1000  CALL      CLVR7000
          MOVE      ZERO,UPORWR
.
POTS2000  MOVE      OPOTNOPR,NOOPER
          CALL      NOPR0000                    * get no. of operations?[
          MOVE      NOOPER,OPOTNOPR
.
          MATCH     "1",OPDCTEAM
          GOTO      POTS2500 IF NOT EQUAL
.
          ADD       ONE,OPOTNCAS                * add one to no. of cases
          ADD       OPDATDUR,OPOTTIME           * theatre duration
.
POTS2500  MOVE      OPSEDAY,OPOTDOFW            * set up day of week
.
          BRANCH    UPORWR,POTS3000
          CALL      WROPOTS1
.
          GOTO      POTS9999
.
POTS3000  CALL      UPOPOTS1
.
POTS9999  RETURN
+          
.************************************************************************
.*                           GTSB0000                                   *
.*             Get the summary breakdown for current session            *
.************************************************************************
GTSB0000  CALL      CTCT0000                * calculate check time CHCKTIME
          MOVE      ZERO,COUNTER            * init counter
.
GTSB0100  ADD       ONE,COUNTER
.
          COMPARE   TEN3,COUNTER                  * gone over BRKM?
          GOTO      GTSB0150 IF NOT LESS
.
          LOAD      BRKTEMP,COUNTER,OPCNBRKA,OPCNBRKB,OPCNBRKC,OPCNBRKD:
                    OPCNBRKE,OPCNBRKF,OPCNBRKG,OPCNBRKH,OPCNBRKI,OPCNBRKJ:
                    OPCNBRKK,OPCNBRKL
.
          MATCH     "00:00",BRKTEMP
          GOTO      GTSB0150 IF EQUAL
.
          MATCH     BRKTEMP,CHCKTIME
          GOTO      GTSB0100 IF NOT LESS
.
GTSB0150  MOVE      ANSM,OPOTPERD
          LOAD      OPOTPERD,COUNTER,ANSA,ANSB,ANSC,ANSD,ANSE,ANSF,ANSG,ANSH:
                    ANSI,ANSJ,ANSK,ANSL,ANSM
          GOTO      GTSB9999
.
GTSB9999  RETURN
.
.************************************************************************
.*                           GTOS0000                                   *
.*                  Get operating surgeon code                          *
.*                   called by : PSOU1000                               *
.************************************************************************
GTOS0000  MOVE      ONE,IND
.
GTOS1000  LOAD      TYPE,IND,OPDBTYD1,OPDBTYD2,OPDBTYD3,OPDBTYD4:
                             OPDBTYD5,OPDBTYD6,OPDBTYD7,OPDBTYD8
.
          RESET     TYPE                         * no type?
          GOTO      GTOS2000 IF EOS
.
          MATCH     SP3,TYPE                     * no type?
          GOTO      GTOS2000 IF EQUAL
.
          PACK      KEY5,OP,TYPE
          CALL      RDCODE1                      * read codes file
.
          MATCH     "S",TCINDC1                  * operating surgeon
          GOTO      GTOS2000 IF NOT EQUAL
.
          LOAD      DOCTCODE,IND,OPDBDCC1,OPDBDCC2,OPDBDCC3,OPDBDCC4:
                                 OPDBDCC5,OPDBDCC6,OPDBDCC7,OPDBDCC8
.
          LOAD      SUPRVLVL,IND,OPDBLVD1,OPDBLVD2,OPDBLVD3,OPDBLVD4:
                                 OPDBLVD5,OPDBLVD6,OPDBLVD7,OPDBLVD8
          GOTO      GTOS9999
.
GTOS2000  ADD       ONE,IND
.
          COMPARE   NINE,IND
          GOTO      GTOS1000 IF LESS
.
.         no doctor code found in team details so set up default
.
          COMPARE   ZERO,OPCNCLSU
          GOTO      GTOS9999 IF EQUAL       * using clinics
.
          MOVE      OPSECLIN,DOCTCODE       * default to session surgeon
          MOVE      SP3,SUPRVLVL            * clear level
.
GTOS9999  RETURN
.
.************************************************************************
.*                           PWAR0000                                   *
.*            Update Operating Room Ward Statistics File                *
.*                   called by : RDDC0000                               *
.************************************************************************
PWAR0000  MOVE     REQPER,OPWADATE
          MOVE     SP3,OPWAWARD
          CALL     GTWA0000                      * get ward/department code
.
          PACK     KEY9,OPWADATE,OPWAWARD
          CALL     RDOPWAR1                      * get previous values
          BRANCH   OVRCD,PWAR1000
.
          MOVE     ONE,UPORWR
          GOTO     PWAR2000
.
PWAR1000  CALL     CLVR8000
          MOVE     ZERO,UPORWR
.
PWAR2000  MOVE     OPWANOPR,NOOPER
          CALL     NOPR0000                      * update no. of operations 
          MOVE     NOOPER,OPWANOPR
. 
          MATCH     "1",OPDCTEAM                 * team no = 1 ?
          GOTO      PWAR2500 IF NOT EQUAL        * no
.
          ADD      ONE,OPWANCAS                  * add one to number of
.                                                  operations
PWAR2500  BRANCH   UPORWR,PWAR3000
.
          CALL     WROPWAR1
          GOTO     PWAR9999
.
PWAR3000  CALL     UPOPWAR1
.
PWAR9999  RETURN
.
.************************************************************************
.*                           PDEP0000                                   *
.*            Update Operating Room Department Statistics File          *
.*                   called by : RDDC0000                               *
.************************************************************************
PDEP0000  MOVE     REQPER,OPDEDATE
          MOVE     SP3,OPDEDEPT
          CALL     GTWA0000                      * get ward/department code
.
          PACK     KEY9,OPDEDATE,OPDEDEPT,SP10
          CALL     RDOPDEP1                      * get previous values
          BRANCH   OVRCD,PDEP1000
.
          MOVE     ONE,UPORWR
          GOTO     PDEP2000
.
PDEP1000  CALL     CLVR8100
          MOVE     ZERO,UPORWR
.
PDEP2000  MOVE     OPDENOPR,NOOPER
          CALL     NOPR0000                      * update no. of operations 
          MOVE     NOOPER,OPDENOPR
. 
          MATCH     "1",OPDCTEAM                 * team no = 1 ?
          GOTO      PDEP2500 IF NOT EQUAL        * no
.
          ADD      ONE,OPDENCAS                  * add one to number of
.                                                  operations
PDEP2500  BRANCH   UPORWR,PDEP3000
.
          CALL     WROPDEP1 
          GOTO     PDEP9999
.
PDEP3000  CALL     UPOPDEP1
.
PDEP9999  RETURN
.
.************************************************************************
.*                           GTWA0000                                   *
.*           Get ward/department code from transfer file                *
.*                   called by : PWAR0000                               *
.************************************************************************
GTWA0000  PACK      KEY30,OPDAADMN,OPDADATE,OPDATIME,Z20 
          CALL      RDSTRAN2
.
          MOVE      SP3,OPWAWARD
          MOVE      SP3,OPDEDEPT
.
          CALL      RDPTRAN2                     * get last ward code
          BRANCH    OVRCD,GTWA8000
.
          MATCH     OPDAADMN,TADMN               * same patient ?
          GOTO      GTWA8000 IF NOT EQUAL        * no
.
          MOVE      TWARD,OPWAWARD               * we have a ward
          MOVE      TDEPT,OPDEDEPT               * we have a department
          GOTO      GTWA9999
.
GTWA8000  CALL      RDKTRAN2                     * now try reading forward
          BRANCH    OVRCD,GTWA9999
.
          MATCH     OPDAADMN,TADMN               * same patient ?
          GOTO      GTWA9999 IF NOT EQUAL        * no
.
          MOVE      TWARD,OPWAWARD               * we have a ward
          MOVE      TDEPT,OPDEDEPT               * we have a department
.
GTWA9999  RETURN
.
.************************************************************************
.*                           GTAT0000                                   *
.*                 Get the admission type                               *
.*                   called by : PCOU0000                               *
.************************************************************************
GTAT0000  PACK      KEY30,OPDAADMN,Z70 
          MOVE      ONE,ADTYPE
          CALL      RDSTRAN2
.
GTAT1000  CALL      RDPTRAN2                     * get last admission type
          BRANCH    OVRCD,GTAT9999
.
          MATCH     OPDAADMN,DTADMN              * same patient ?
          GOTO      GTAT9999 IF NOT EQUAL        * no
.
          PACK      KEY5,A,TATYPE
          CALL      RDCODE1
          BRANCH    OVRCD,GTAT9999
.
          MOVE      TCINDC1,ADTYPE
.
GTAT9999  RETURN
+
.*********************************************************************
.*                  GTAD0000                    Called by : PCOU0000 *
.*        Check if Attending Doctor = Oper. Surgeon         PSOU0000 *
.*        Changed so if using clinics, will check if the clinic has a*
.*        doctor code and then check against this.                   *
.*********************************************************************
GTAD0000  MOVE      OPDAADMN,KEY8           * r5
          UNPACK    KEY8,KEY2,KEY6          * r5
          CALL      RDMISS1
          MOVE      DOCTCODE,KEY6           * save the doctor code
          COMPARE   ZERO,OVRCD 
          GOTO      GTAD0500 IF EQUAL       * valid record
.
          MOVE      "******",BKREADOC       * default value
          OPEN      BOKRC1A1,"bokrc1af"
          CALL      RDBKREC1
          CLOSE     BOKRC1A1
          MOVE      BKREADOC,ADOCTA         * set attending doctor
.
GTAD0500  BRANCH    OPCNCLSU,GTAD1000       * using doctor codes
.
.         are using clinics so see if there is a doctor for the clinic
.
          CALL      RDOPCLI1
          BRANCH    OVRCD,GTAD1000          * invalid code
.
          MATCH     SP6,OPCLDOCT 
          GOTO      GTAD1000 IF EQUAL       * no doctor code
.
          MOVE      OPCLDOCT,KEY6           * set the oper. surg code
.
.         see if the doctors match
.
GTAD1000  MATCH     KEY6,ADOCTA
          GOTO      GTAD8000 IF EQUAL       * attending doct = oper. surg
.
          MOVE      TWO,OWN                 * att. doct <> oper. surg
          GOTO      GTAD9999
.
GTAD8000  MOVE      ONE,OWN                 * att. doct = oper. surg
.
GTAD9999  RETURN          
+
.************************************************************************
.*                           CLVR0000                                   *
.*                      Clear Variables                                 *
.*       called by : PCSU1000,OPOU1000,UDCC1000,PANE1000,PATT1000       *
.*                   PCOU1000,PCOS2000,PSOU1500,PSOS1000,POTS1000       *
.*                   PWAR1000,PDEP1000                                  *
.************************************************************************
CLVR0000  SUB       OPCSBSES,OPCSBSES
          SUB       OPCSBTIM,OPCSBTIM
          SUB       OPCSBRKS,OPCSBRKS
          SUB       OPCSUSES,OPCSUSES
          SUB       OPCSUTIM,OPCSUTIM
          SUB       OPCSSTIM,OPCSSTIM
          GOTO      CLVR9999
.
CLVR1000  SUB       OPOUBCAS,OPOUBCAS
          SUB       OPOUBOPR,OPOUBOPR
          SUB       OPOUBTIM,OPOUBTIM
          SUB       OPOUTCAS,OPOUTCAS
          SUB       OPOUTOPR,OPOUTOPR
          SUB       OPOUTTIM,OPOUTTIM
          SUB       OPOUECAS,OPOUECAS
          SUB       OPOUEOPR,OPOUEOPR
          SUB       OPOUETIM,OPOUETIM
          SUB       OPOUAVAL,OPOUAVAL
          GOTO      CLVR9999
.
CLVR2000  MOVE      ZERO,OPCCNUMB
          MOVE      ZERO,OPCCDURA
          MOVE      ZERO,OPCCBRKT
          GOTO      CLVR9999
.
CLVR2500  SUB       OPANNUMB,OPANNUMB
          GOTO      CLVR9999
.
CLVR3000  SUB       OPATOPER,OPATOPER
          SUB       OPATASST,OPATASST
          SUB       OPATANAE,OPATANAE
          GOTO      CLVR9999
.
CLVR4000  SUB       OPCONCAS,OPCONCAS
          SUB       OPCONOPR,OPCONOPR
          SUB       OPCOTIME,OPCOTIME
          GOTO      CLVR9999
.
CLVR5000  SUB       OPCPTTIM,OPCPTTIM
          SUB       OPCPLTIM,OPCPLTIM
          SUB       OPCPHTIM,OPCPHTIM
          SUB       OPCPNCAS,OPCPNCAS
          SUB       OPCPNOPR,OPCPNOPR
          GOTO      CLVR9999
.
CLVR5500  SUB       OPSONCAS,OPSONCAS
          SUB       OPSONOPR,OPSONOPR
          SUB       OPSOTIME,OPSOTIME
          GOTO      CLVR9999
.
CLVR6000  SUB       OPSPTTIM,OPSPTTIM
          SUB       OPSPHTIM,OPSPHTIM
          SUB       OPSPLTIM,OPSPLTIM
          SUB       OPSPNCAS,OPSPNCAS
          SUB       OPSPNOPR,OPSPNOPR
          GOTO      CLVR9999
.
CLVR7000  SUB       OPOTNCAS,OPOTNCAS
          SUB       OPOTNOPR,OPOTNOPR
          SUB       OPOTTIME,OPOTTIME
          GOTO      CLVR9999  
.
CLVR8000  SUB       OPWANCAS,OPWANCAS
          SUB       OPWANOPR,OPWANOPR
          GOTO      CLVR9999
.
CLVR8100  MOVE      ZERO,OPDENCAS
          MOVE      ZERO,OPDENOPR
          GOTO      CLVR9999
.
CLVR9000  MOVE      ZERO,OPCTNCAS
          MOVE      ZERO,OPCTNOPR
          MOVE      ZERO,OPCTTIME
.
CLVR9999  RETURN
+
.************************************************************************
.* CTAV0000 : Calculate the time available in each theatre (GEN9000)    *
.************************************************************************
CTAV0000  UNPACK    DRGFDTE,CCENT,CYEAR,CMON,CDAY
          CALL      DATECONV                 * Calculate day of week
.
.         Loop over every theatre
.
          DISPLAY   *P1:24,*EL,"Calculating time available : ";
.
          MOVE      SP6,KEY6
          CALL      RSOPOPR1                 * Position at start of Op. rooms
CTAV0100  CALL      RKOPOPR1                 * Get the next theatre
          BRANCH    OVRCD,CTAV9999           * No more. Finished
.
          DISPLAY   *P30:24,*V2LON,OPRMROOM; * Current operating room
.
          MOVE      DRGFDTE,WRKDATE          * set date (start of period)
          MOVE      WEEKDAY,DOFW             * set day of week (from DATECONV)
.
          MOVE      ZERO,TIMEAVAL            * Initialise time available
.
.         Loop through every date for the period
.
CTAV1000  PACK      KEY14,WRKDATE,OPRMROOM   * Key for exceptions file
          CALL      RDOPORA1                 * Is there an exception ?
          BRANCH    OVRCD,CTAV2000           * No use default.
.
          ADD       OPRAVAIL,TIMEAVAL        * Use the time for this date
          GOTO      CTAV3000                 * Get the next date
.
CTAV2000  LOAD      WRKTIME,DOFW,OPRMMON,OPRMTUE,OPRMWED,OPRMTHU:
                                 OPRMFRI,OPRMSAT,OPRMSUN
.
          ADD       WRKTIME,TIMEAVAL         * Add the appropriate time
.
.         Check to see if we have reached the end of the period
.
CTAV3000  MATCH     DRGTDTE,WRKDATE          * Have we reached end of period ?
          GOTO      CTAV5000 IF NOT LESS     * Yes. Update stats file.
.
.         Go to the next date
.
          CALL      INCD0000                 * Increment WRKDATE
          ADD       ONE,DOFW                 * Increment the day of the week
          LOAD      DOFW,DOFW,ONE,TWO,THREE,FOUR,FIVE,SIX,SEVEN,ONE,TWO
          GOTO      CTAV1000                 * Check the new date
.
.         Update the statistics file with the time available
.
CTAV5000  PACK      KEY12,REQPER,OPRMROOM    * Key for this theatre/period
          CALL      RDOPORU1                 * Get the usage record
          BRANCH    OVRCD,CTAV6000           * No record found. Write one.
.
          MOVE      TIMEAVAL,OPOUAVAL        * Update time available
          CALL      UPOPORU1
          GOTO      CTAV0100                 * Get the next operating room
.
CTAV6000  CALL      CLVR1000                 * Initialise vars to zero
          UNPACK    KEY12,OPOUDATE,OPOUROOM
          MOVE      TIMEAVAL,OPOUAVAL        * Update time available
          CALL      WROPORU1
          GOTO      CTAV0100                 * Get the next operating room
.
CTAV9999  RETURN
.************************************************************************
.* INCD0000 : Add one to WRKDATE                           (CTAV0000)   *
.************************************************************************
INCD0000  UNPACK    WRKDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CDAY,DD                  * Parameter to DMYCON
          MOVE      CMON,MM                  * Parameter to DMYCON
          MOVE      CYEAR,YY                 * Parameter to DMYCON
          MOVE      CCENT,CC                 * Parameter to DMYCON
          CALL      DMYCON                   * Convert to julian
.
          ADD       ONE,JULDAY               * Add one to the julian date
.
          MOVE      JULDAY,JWKDAY            * Parameter to JULCON
          MOVE      JULYR,JWKYER             * Parameter to JULCON
          MOVE      JULCC,JWKCC              * Parameter to JULCON
          CALL      JULCON                   * Convert back to normal date
.
INCD9000  PACK      WRKDATE,CC,YY,MM,DD
          REP       " 0",WRKDATE
.
INCD9999  RETURN
+
.*********************************************************************
.*                  CTCT0000                    Called by : GTSB0000 *
.*        Calculate the actual start time of the booking to use in   *
.*        determining the time breakup                               *
.*        Returns : CHCKTIME      the time to use                    *
.*********************************************************************
CTCT0000  MOVE      "24:00",CHCKTIME        * default time
.
. Branch to correct file.If using oprsrgaf check all team numbers
.
          BRANCH    OPCNFTIM,CTCT1000,CTCT1000,CTCT1000,CTCT1000:
                             CTCT2000,CTCT2000,CTCT2000,CTCT1000:
                             CTCT2000,CTCT1000,CTCT1000,CTCT1000:
                             CTCT1000,CTCT1000
.
          GOTO      CTCT9999
.
. Load from oprardaf
.
CTCT1000  LOAD      CHCKTIME,OPCNFTIM,OPARTCAL,OPARATIM,OPARANAP,OPARANAS:
                                      OPSGTIPS,OPSGTISS,OPSGTISE,OPARANAE:
                                      OPSGTIDR,OPARTIRF,OPARTIRB,OPARTIRD:
                                      OPARTIDP,OPARTETC
.
          GOTO      CTCT9999
.
. Load from oprsrgaf
.
CTCT2000  PACK      KEY11,OPDAUNIQ,SP1
          CALL      RSOPSRG1
CTCT2500  CALL      RKOPSRG1
          BRANCH    OVRCD,CTCT9500
.
          MATCH     OPDAUNIQ,OPSGUNID
          GOTO      CTCT9500 IF NOT EQUAL
.
          LOAD      KEY5,OPCNFTIM,OPARTCAL,OPARATIM,OPARANAP,OPARANAS:
                                  OPSGTIPS,OPSGTISS,OPSGTISE,OPARANAE:
                                  OPSGTIDR,OPARTIRF,OPARTIRB,OPARTIRD:
                                  OPARTIDP,OPARTETC
.
          MATCH     KEY5,CHCKTIME
          GOTO      CTCT2500 IF LESS
.
          MOVE      KEY5,CHCKTIME
          GOTO      CTCT2500
.
CTCT9500  MOVE      SAVKEY11,KEY11
          CALL      RDOPSRG1
.
CTCT9999  RETURN
+
.**************************************************************************
.*                      LTMP0000                   Called by : ML0000     *
.*               Load temp.file with CMBS items                           *
.**************************************************************************
LTMP0000  PACK      KEY22,DRGFDTE,SP15
          CALL      RSOPSES7
LTMP1000  CALL      RKOPSES7
          BRANCH    OVRCD,LTMP9999
.
          MATCH     OPSEDATE,DRGTDTE
          GOTO      LTMP9999 IF LESS
.
          MOVE      OPSEHOSP,OPDAHOSP
          MOVE      OPSEDATE,OPDADATE
          MOVE      OPSETIME,OPDATIME
          MOVE      OPSECLIN,OPDACLIN
          PACK      KEY26,OPDADATE,OPDATIME,OPDACLIN,SP70
          CALL      RSOPDEA6
LTMP2000  CALL      RKOPDEA6                     * read dea
          BRANCH    OVRCD,LTMP1000
.
          MATCH     OPSEDATE,OPDADATE            * right date?
          GOTO      LTMP1000 IF NOT EQUAL
.
          MATCH     OPSETIME,OPDATIME            * right time?
          GOTO      LTMP1000 IF NOT EQUAL
.
          MATCH     OPSECLIN,OPDACLIN            * right time?
          GOTO      LTMP1000 IF NOT EQUAL
.
          COMPARE   THREE,OPDASTAT               * cancelled ?
          GOTO      LTMP2000 IF EQUAL            * yes, ignore.

          PACK      KEY10,OPDAUNIQ
          CALL      RDOPARD1
          BRANCH    OVRCD,LTMP2000
.
          CALL      SETR0000                 * Find first time in recovery
.
          MOVE      OPDAUNIQ,OPSGUNID
          PACK      KEY11,OPSGUNID,SP1
          CALL      RSOPSRG1
LTMP3000  CALL      RKOPSRG1
          BRANCH    OVRCD,LTMP2000
.
          MATCH     OPDAUNIQ,OPSGUNID
          GOTO      LTMP2000 IF NOT EQUAL    * different unique number
.
          CALL      SURG0000                 * Calculate Surgical Minutes
.
          MOVE      ZERO,COUNTER
          PACK      KEY14,OPSGUNID,OPSGTMNO,SP10
          CALL      RSOPPMB1
LTMP4000  CALL      RKOPPMB1
          BRANCH    OVRCD,LTMP5000
.
          MATCH     OPSGUNID,OPPMUNID
          GOTO      LTMP5000 IF NOT EQUAL
.
          MATCH     OPSGTMNO,OPPMTMNO
          GOTO      LTMP5000 IF NOT EQUAL
.
          MATCH     SP70,OPPMCMBS
          GOTO      LTMP4000 IF EQUAL     * Blank item code
.
          MOVE      OPPMCMBS,KEY9
          PACK      KEY17,KEY9,OPDADATE,SP70
          CALL      PATITMRD
          BRANCH    OVRCD,LTMP4000
.
          MATCH     SP70,PTITTACB
          GOTO      LTMP4000 IF EQUAL
.
          MOVE      PTITTACB,KEY3
          CALL      SBAND0000             * set up banding
.
          MOVE      OPPMUNID,XPMUNID
          MOVE      OPPMTMNO,XPMTEAM
          MOVE      DOPPMCNT,XPMPCNT
.
          ADD       ONE,COUNTER
          MOVE      COUNTER,XPMCNTR       * Counter
          MOVE      OPPMCMBS,XPMCMBS      * CMBS code
          MOVE      ZERO,FPMODUR          * Zero duration
          MOVE      SP70,XPMSPAR
.
          PACK      KEY18,XPMUNID,XPMBAND,XPMBALP,XPMCNTR
          CALL      WRTMMBS1
          GOTO      LTMP4000
.
.         Write a header record
.
LTMP5000  COMPARE   ZERO,COUNTER
          GOTO      LTMP3000 IF EQUAL
.
          UNPACK    SP70,XPMBAND,XPMBALP
          MOVE      COUNTER,FPMNOPR        * Total no of operations
          MOVE      ZERO,COUNTER
          MOVE      COUNTER,XPMCNTR        * header record
          MOVE      SP70,XPMCMBS           * CMBS code
          MOVE      DURATION,FPMODUR       * Total Surgical Minutes
          MOVE      SP70,XPMSPAR
.
          UNPACK    KEY18,XPMUNID
          PACK      KEY18,XPMUNID,XPMBAND,XPMBALP,XPMCNTR
          CALL      WRTMMBS1
          GOTO      LTMP3000
.
LTMP9999  RETURN
+
.***************************************************************************
.         Setup theatre banding to sort by number then alpha               *
.***************************************************************************
SBAND0000 UNPACK    KEY3,DIM1,DIM1A,DIM1B
          UNPACK    SP70,XPMBAND,XPMBALP
          CLEAR     XPMBAND
          CLEAR     XPMBALP
.
          MOVE      ZERO,F1
SBAND1000 ADD       ONE,F1
          COMPARE   FOUR,F1
          GOTO      SBAND8000 IF NOT LESS   * Banding only has DIM3
.
          LOAD      KEY1,F1,DIM1,DIM1A,DIM1B
          MATCH     SP1,KEY1
          GOTO      SBAND8000 IF EQUAL
.
          TYPE      KEY1
          IF        @EQUAL
            APPEND    KEY1,XPMBAND          * numeric
          ELSE
            APPEND    KEY1,XPMBALP          * alpha
          ENDIF
          GOTO      SBAND1000
.
SBAND8000 APPEND    SP70,XPMBAND
          RESET     XPMBAND
          SQUEEZE   XPMBAND
          MOVE      XPMBAND,F3
          MOVE      "999",FORM3             * in decending order
          SUB       F3,FORM3
          MOVE      FORM3,XPMBAND           * Right justified banding
.
          APPEND    SP70,XPMBALP
          RESET     XPMBALP
.
SBAND9999 RETURN
+
.***************************************************************************
.         Allocate Operation time                                          *
.***************************************************************************
ALTM0000  SQUEEZE   OPCNP1ST
          MOVE      OPCNP1ST,FRSTHIGH          * 1st highest
          SQUEEZE   OPCNP2ND
          MOVE      OPCNP2ND,SCNDHIGH          * 2nd highest
          MOVE      ZERO,FRITMDUR              * Op.Duration for 1st item
          MOVE      ZERO,SCITMDUR              * Op.Duration for 2nd item
          MOVE      SP70,SAVUNQID
          MOVE      ZERO,COUNTER
.
          MOVE      SP70,KEY18
          CALL      RSTMMBS1
ALTM1000  CALL      RKTMMBS1
          BRANCH    OVRCD,ALTM9999
.
          MATCH     SP70,SAVUNQID
          IF        @EQUAL
            MOVE      XPMUNID,SAVUNQID
          ELSE
            MATCH     SAVUNQID,XPMUNID     * Checking for same Uniq.number
            GOTO      ALTM2000 IF EQUAL
          ENDIF
.
          MOVE      ZERO,COUNTER
          MOVE      FPMNOPR,OPERNUMB       * Save no of operations
          MOVE      FPMODUR,OPERDURN       * Save Duration
          MOVE      XPMUNID,SAVUNQID
          GOTO      ALTM1000
.
.         Detail records
.
ALTM2000  COMPARE   ZERO,OPERDURN
          GOTO      ALTM1000 IF EQUAL    * No duration time to allocate
.
.         Only take the first three MBS items
.
          ADD       ONE,COUNTER          * counter
          BRANCH    COUNTER,ALTM2100,ALTM2200,ALTM2300
.
          PACK      KEY18,SAVUNQID,Z70   * postion on next Uniq id
          GOTO      ALTM1000
.
ALTM2100  IF        OPERNUMB=1
            MOVE      OPERDURN,FPMODUR     * full 100%
          ELSE
            MOVE      OPERDURN,FRITMDUR
            MULT      FRSTHIGH,FRITMDUR
            DIV       "100",FRITMDUR
            MOVE      FRITMDUR,FPMODUR     * 1st highest banding
          ENDIF
          GOTO      ALTM6000
.
ALTM2200  IF        OPERNUMB=2
            MOVE      OPERDURN,FPMODUR
            SUB       FRITMDUR,FPMODUR    * Reminder of duration goes to 2nd itm
          ELSE
            MOVE      OPERDURN,SCITMDUR
            MULT      SCNDHIGH,SCITMDUR
            DIV       "100",SCITMDUR
            MOVE      SCITMDUR,FPMODUR        * 1st highest banding
          ENDIF
          GOTO      ALTM6000
.
ALTM2300  IF        OPERNUMB>=3
            MOVE      OPERDURN,FPMODUR         * Total Duration
            SUB       FRITMDUR,FPMODUR
            SUB       SCITMDUR,FPMODUR
            IF        FPMODUR<0
              MOVE      ZERO,FPMODUR
            ENDIF
          ENDIF
.
ALTM6000  CALL      UPTMMBS1
          GOTO      ALTM1000
.
ALTM9999  RETURN
+
.***************************************************************************
.*                            SETR0000                                     *
.*  Populate all recovery variables with the first time in recovery        *
.*  First check recovery front, then back, then day, then ICU, then        *
.*  time patient died.                                                     *
.***************************************************************************
SETR0000  MATCH     SP70,OPARTIRF                * Recovery front
          IF        @EQUAL
            MOVE      OPARTIRB,OPARTIRF
          ENDIF
          MATCH     SP70,OPARTIRF
          IF        @EQUAL
            MOVE      OPARTIRD,OPARTIRF
          ENDIF
          MATCH     SP70,OPARTIRF
          IF        @EQUAL
            MOVE      OPARTICU,OPARTIRF
          ENDIF
          MATCH     SP70,OPARTIRF
          IF        @EQUAL
            MOVE      OPARTEXP,OPARTIRF
          ENDIF
.
          MATCH     SP70,OPARTIRB                * Recovery back
          IF        @EQUAL
            MOVE      OPARTIRD,OPARTIRB
          ENDIF
          MATCH     SP70,OPARTIRB
          IF        @EQUAL
            MOVE      OPARTICU,OPARTIRB
          ENDIF
          MATCH     SP70,OPARTIRB
          IF        @EQUAL
            MOVE      OPARTEXP,OPARTIRB
          ENDIF
.
          MATCH     SP70,OPARTIRD                * Recovery Day
          IF        @EQUAL
            MOVE      OPARTICU,OPARTIRD
          ENDIF
          MATCH     SP70,OPARTIRD
          IF        @EQUAL
            MOVE      OPARTEXP,OPARTIRD
          ENDIF
.
          MATCH     SP70,OPARTICU                * ICU
          IF        @EQUAL
            MOVE      OPARTEXP,OPARTIRD
          ENDIF
.
SETR9999  RETURN
+
.***************************************************************************
.*                            SURG0000                                     *
.*                   Calculate the Surgical Minutes                        *
.***************************************************************************
SURG0000  MOVE      ZERO,F2
          MOVE      OPCNSMFT,F2
          MOVE      SP70,TIMESTRT
.
          LOAD      TIMESTRT,F2,OPARTCAL,OPARATIM,OPARANAP,OPARANAS:
                             OPSGTIPS,OPSGTISS,OPSGTISE,OPARANAE:
                             OPSGTIDR,OPARTIRF,OPARTIRB,OPARTIRD:
                             OPARTIDP,OPARTETC
.                                           * load End time from selected
          MOVE      ZERO,F2
          MOVE      OPCNSMTT,F2
          MOVE      SP70,TIMESTOP
.
          LOAD      TIMESTOP,F2,OPARTCAL,OPARATIM,OPARANAP,OPARANAS:
                             OPSGTIPS,OPSGTISS,OPSGTISE,OPARANAE:
                             OPSGTIDR,OPARTIRF,OPARTIRB,OPARTIRD:
                             OPARTIDP,OPARTETC
.
          MATCH     SP70,TIMESTRT              * Blank from time
          GOTO      SURG9999 IF EQUAL
.
          MATCH     SP70,TIMESTOP              * Blank to time
          GOTO      SURG9999 IF EQUAL
.
          CALL      DURN0000                   * get duration time
.
SURG9999  RETURN
+
.**************************************************************************
.*                      CTMP0000                   Called by : ML0000     *
.*               create temp. index file                                  *
.**************************************************************************
CTMP0000  CALL      DELI0000                   * delete temp. file incase
          CLEAR     CMDLINE                    * existing
          APPEND    "isbuild ",CMDLINE
          APPEND    FNAME1,CMDLINE
          APPEND    " 56 U1-10,11-13,14-16,17-18",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          OPEN      TMPMBSA1,FNAME1
CTMP9999  RETURN
+
.***************************************************************************
.*                   DELI0000                       Called by : ML0000     *
.*            delete temp. file incase existing               : CRET0000   *
.***************************************************************************
DELI0000  CLOSE     TMPMBSA1
.
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FNAME1,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
DELI9999  RETURN
+
.******************************************************************************
.*                        I/O Routines For The Tempfile                       *
.******************************************************************************
RSTMMBS1  MOVE      ZERO,OVRCD
          RESET     KEY18
          READ      TMPMBSA1,KEY18;;
          RETURN
.
RPTMMBS1  MOVE      ZERO,OVRCD
          READKP    TMPMBSA1;XPMUNID,XPMBAND,XPMBALP,XPMCNTR,XPMCMBS:
                             XPMTEAM,XPMPCNT,XPMNOPR,XPMODUR,XPMSPAR
          GOTO      OVERCOND IF OVER
          MOVE      XPMNOPR,FPMNOPR
          MOVE      XPMODUR,FPMODUR
          RETURN
.
DETMMBS1  MOVE      ZERO,OVRCD
          RESET     KEY18
          DELETE    TMPMBSA1,KEY18
          RETURN
.
RKTMMBS1  MOVE      ZERO,OVRCD
          RESET     KEY18
          READKS    TMPMBSA1;XPMUNID,XPMBAND,XPMBALP,XPMCNTR,XPMCMBS:
                             XPMTEAM,XPMPCNT,XPMNOPR,XPMODUR,XPMSPAR
          GOTO      OVERCOND IF OVER
          MOVE      XPMNOPR,FPMNOPR
          MOVE      XPMODUR,FPMODUR
          RETURN
.
WRTMMBS1  MOVE      ZERO,OVRCD
          MOVE      FPMNOPR,XPMNOPR
          MOVE      FPMODUR,XPMODUR
          RESET     KEY18
          WRITE     TMPMBSA1,KEY18;XPMUNID,XPMBAND,XPMBALP,XPMCNTR,XPMCMBS:
                                  XPMTEAM,XPMPCNT,XPMNOPR,XPMODUR,XPMSPAR
          RETURN
.
UPTMMBS1  MOVE      ZERO,OVRCD
          MOVE      FPMNOPR,XPMNOPR
          MOVE      FPMODUR,XPMODUR
          UPDATE    TMPMBSA1;XPMUNID,XPMBAND,XPMBALP,XPMCNTR,XPMCMBS:
                             XPMTEAM,XPMPCNT,XPMNOPR,XPMODUR,XPMSPAR
          RETURN
+
.************************************************************************
.*                           INCLUDES                                   *
.************************************************************************
          INC       STD001IO     
          INC       TFILENAM                * Generate Temp File Name
          INC       OPRECOVT
          INC       PATITMRD
.
          INC       IBASEQIO/INC                 * Sequential Numbers File
          INC       BOKRC1IO/INC
          INC       DATECONV/PBL
          INC       OPRCLIIO/INC
          INC       OPRDEAIO/INC
          INC       OPRDEBIO/INC
          INC       OPRDECIO/INC
          INC       OPRSESIO/INC
          INC       PATCOMN3/PBL
          INC       PATDRGIO/INC
          INC       PATCODIO/INC
          INC       PATMI1IO/INC
          INC       PMSVX1IO/INC
          INC       PATTRNIO/INC
          INC       PATITMIO/INC
          INC       WEBERRIO/INC                 * Web Server Error Logging
.
.********** Statistics files **********
.
          INC       OPRANEIO/INC
          INC       OPRARDIO/INC
          INC       OPRATTIO/INC
          INC       OPRCOSIO/INC
          INC       OPRCOUIO/INC
          INC       OPRCSCIO/INC
          INC       OPRCSUIO/INC
          INC       OPROPRIO/INC
          INC       OPRORAIO/INC
          INC       OPRORUIO/INC
          INC       OPROTSIO/INC
          INC       OPRPMBIO/INC
          INC       OPRCTSIO/INC
          INC       OPRSOSIO/INC
          INC       OPRSOUIO/INC
          INC       OPRSRGIO/INC
          INC       OPRTSMIO/INC
          INC       OPRWARIO/INC
          INC       OPRRALIO/INC
          INC       OPRDEPIO/INC
................................................................................
.*********************************************************************
.*                  NEWA0000                    Called by : UDCC0000 *
.*        Calculate values for OPCCDURA & OPCCBRKT                   *
.*        duration = stop time - start time                          *
.*********************************************************************
NEWA0000  BRANCH    OPCCCTYP,NEWA1000,NEWA3000,NEWA5000
          GOTO      NEWA9999
.
.         Cancelled codes
.         time = booked duration - time for breaks
.
NEWA1000  SUB       OPSEBRKT,OPSEDURA       * booked time - break time
          ADD       OPSEDURA,OPCCDURA       * add to cancelled duration
          ADD       OPSEBRKT,OPCCBRKT       * add to cancelled break time
          GOTO      NEWA9999
.
.         Delay codes
.         time = actual start time - booked start time
.
NEWA3000  MOVE      OPSEACTS,TIMESTOP       * actual end time
          MOVE      OPSETIME,TIMESTRT       * session start time
          CALL      DURN0000                * get the time b/w them
          ADD       DURATION,OPCCDURA       * add to delayed duration
          GOTO      NEWA9999
.
.         Overtime codes
.         time = expected end time - actual end time
.
NEWA5000  MOVE      OPSEENDT,TIMESTRT       * Expected end time
          MOVE      OPSEACTE,TIMESTOP       * actual end time
          CALL      DURN0000                * get the time b/w them
          ADD       DURATION,OPCCDURA       * add to delayed duration
.
NEWA9999  RETURN
+
.*********************************************************************
.*                  LDTM0000                    Called by :          *
.*      Load values to calculate operation duration                  *
.*        Para's  : OPCNFTIM                                         *
.*                  OPCNTTIM                                         *
.*        Returns : TIMESTOP      the end time (HH:MM)               *
.*                  TIMESTRT      the start time (HH:MM)             *
.*********************************************************************
LDTM0000  UNPACK    SP70,TIMESTOP,TIMESTRT
.
          CALL      RCVT0000              * determine time in recovery
.
          LOAD      TIMESTRT,OPCNFTIM,OPARTCAL,OPARATIM,OPARANAP,OPARANAS:
                                      OPSGTIPS,OPSGTISS,OPSGTISE,OPARANAE:
                                      OPSGTIDR,OPARTIRF,OPARTIRB,OPARTIRD:
                                      OPARTIDP,OPARTETC
.
          LOAD      TIMESTOP,OPCNTTIM,OPARTCAL,OPARATIM,OPARANAP,OPARANAS:
                                      OPSGTIPS,OPSGTISS,OPSGTISE,OPARANAE:
                                      OPSGTIDR,OPARTIRF,OPARTIRB,OPARTIRD:
                                      OPARTIDP,OPARTETC
LDTM9999  RETURN
+
.*********************************************************************
.*                  DURN0000                    Called by : NEWA0000 *
.*        Calculate a duration given two times                       *
.*        Para's  : TIMESTOP      the end time   (HH:MM)             *
.*                  TIMESTRT      the start time (HH:MM)             *
.*        Returns : DURATION      the duration (minutes)             *
.*********************************************************************
DURN0000  MOVE      ZERO,DURATION
.
          MATCH     SP8,TIMESTOP
          GOTO      DURN9999 IF EQUAL
.
          MATCH     SP8,TIMESTRT
          GOTO      DURN9999 IF EQUAL
.
          MATCH     TIMESTOP,TIMESTRT
          GOTO      DURN9999 IF EQUAL       * no duration
          GOTO      DURN1000 IF LESS        * times not over midnight
.
.         operation went over midnight so make end time larger
.         eg 22:00 to 01:00 becomes 22:00 to 25:00 which gives 3 hours duration
.
          UNPACK    TIMESTOP,CHOUR,ANS,CMIN
          MOVE      CHOUR,FORM2
          ADD       "24",FORM2
          MOVE      FORM2,CHOUR
          PACK      TIMESTOP,CHOUR,ANS,CMIN
.
.         get end time as minutes
.
DURN1000  UNPACK    TIMESTOP,CHOUR,ANS,CMIN
          MOVE      CHOUR,FORM2             * hour as a form 2
          MOVE      FORM2,FORM4A            * set up work variable
          MULT      "60",FORM4A             * hours turned into minutes
          MOVE      CMIN,FORM2              * minutes as as form 2
          ADD       FORM2,FORM4A            * the total minutes of end time
.
.         get start time as minutes
.
          UNPACK    TIMESTRT,CHOUR,ANS,CMIN
          MOVE      CHOUR,FORM2             * hour as a form 2
          MOVE      FORM2,FORM4B            * set up work variable
          MULT      "60",FORM4B             * hours turned into minutes
          MOVE      CMIN,FORM2              * minutes as as form 2
          ADD       FORM2,FORM4B            * the total minutes of start time
.
.         duration = end minutes - start minutes
.
          SUB       FORM4B,FORM4A           * the duration
          MOVE      FORM4A,DURATION         * the duration
.
DURN9999  RETURN
+
.*********************************************************************
.*                  ENDT0000                    Called by : NEWA0000 *
.*        Calculate an end time given a start time and duration      *
.*        Para's  : TIMESTRT      the start time                     *
.*                  DURATION      the duration                       *
.*        Returns : TIMESTOP      the end time                       *
.*********************************************************************
ENDT0000  UNPACK    TIMESTRT,CHOUR,COLON,CMIN
          REP       " 0",CHOUR
          REP       " 0",CMIN 
          MOVE      CHOUR,CCOL1             * the hours
          MOVE      CMIN,CCOL2              * the minutes
          MOVE      DURATION,FORM4          * the duration work var 1
.
          ADD       CCOL2,FORM4             * total minutes
          MOVE      FORM4,FORM4A            * total minutes save variable
.
          DIV       "60",FORM4              * total minutes as whole hours
          ADD       FORM4,CCOL1             * set up the hours
.
          MULT      "60",FORM4              * actual whole hours added as mins
          SUB       FORM4,FORM4A            * minutes left to add
          MOVE      FORM4A,CCOL2            * the actual minutes to add
.
.         check hours aren't over 23
.
ENDT5000  COMPARE   "24",CCOL1
          GOTO      ENDT7000 IF LESS        * hours not over 24
.
          SUB       "24",CCOL1
          GOTO      ENDT5000
.
ENDT7000  MOVE      CCOL2,FORM2             * the minutes
          PACK      TIMESTOP,CCOL1,COLON,FORM2
          REP       " 0",TIMESTOP
.
ENDT9999  RETURN
+
.*********************************************************************
.*                  PCTS0000                    Called by : RDDC1000 *
.*        Update Clinic Type Summary File                            *
.*********************************************************************
PCTS0000  MOVE      OPDADATE,OPCTDATE       * set up key variables
          MOVE      OPDACLIN,OPCTCLIN       * clinic
          CALL      GTSB0000                * get summary breakdown OPOTPERD
          MOVE      OPOTPERD,OPCTPERD       * get the breakdown
. 
          PACK      KEY18,OPCTDATE,OPCTCLIN,OPCTPERD,OPCTUSER
          CALL      RDOPCTS1                    * get previous values
          BRANCH    OVRCD,PCTS1000
.
          MOVE      ONE,UPORWR
          GOTO      PCTS2000
.
PCTS1000  CALL      CLVR9000
          MOVE      ZERO,UPORWR
.
PCTS2000  MOVE      OPCTNOPR,NOOPER
          CALL      NOPR0000                    * get no. of operations
          MOVE      NOOPER,OPCTNOPR
.
          MATCH     "1",OPDCTEAM
          GOTO      PCTS2500 IF NOT EQUAL
.
          ADD       ONE,OPCTNCAS                * add one to no. of cases
          ADD       OPDATDUR,OPCTTIME           * add duration to time used
.
PCTS2500  MOVE      OPSEDAY,OPCTDOFW            * set up day of week
.
          BRANCH    UPORWR,PCTS3000
          CALL      WROPCTS1
          GOTO      PCTS9999
.
PCTS3000  CALL      UPOPCTS1
.
PCTS9999  RETURN
+          
.************************************************************************
.*  CSHR0000  :  calculate shared session time                          *
.************************************************************************
CSHR0000  PACK      KEY30,DRGFDTE,SP30
          CALL      RSOPRAL1
CSHR1000  CALL      RKOPRAL1
          BRANCH    OVRCD,CSHR9999
.         
          PACK      KEY6,DRGCYR,DRGCNUM
          MATCH     KEY6,OPRLDATE                 * same period?
          GOTO      CSHR9999 IF NOT EQUAL
.
          MATCH     OPSETIME,OPRLSTOR             * ssame session start
          GOTO      CSHR1000 IF NOT EQUAL
.
          MATCH     OPCSDOCT,OPRLSUOR             * same surgeon?
          GOTO      CSHR1000 IF NOT EQUAL
.
          MATCH     OPSEDATE,OPRLDATE
          GOTO      CSHR1000 IF NOT EQUAL
.
          MOVE      OPRLOVST,TIMESTRT             * Expected end time
          MOVE      OPRLOVEN,TIMESTOP             * actual end time
          CALL      DURN0000                      * get the time b/w them
.
          ADD       DURATION,OPCSSTIM             * increment shared time
          GOTO      CSHR1000
.
CSHR9999  RETURN
+
