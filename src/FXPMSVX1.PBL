.***************************************************************************
.* System    :   Fix to create missing pmsvx1af records                    *
.* Program   :   FXPMSVX1                                                  *
.* Desc      :   This will create pmsvx1af records for any admission       *
.*               records that do not have one                              *
.***************************************************************************
.* Date      :   13/04/2011                                                *
.* Author    :   Jill Parkinson                                            *
.*                                                                         *
.* Modifications :                                                        *
.*        V10.01.00  13/04/2011 Jill Parkinson CAR 233088                  *
.*                   Created                                               *
.***************************************************************************
.
          INC       STD001FD
          INC       PATMI1FD/INC 
          INC       PMSVX1FD/INC
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
.
RECNUM    FORM      8
.
PRGID     INIT      "FXPMSVX1"
PRGNAM    INIT      "Create missing pmsvx1af records "
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,ML1000         * proceed with clean up
.
ML1000    CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,ML2000:          * yes
                          ML0100:          * no
                          ML0100           * cancel
.
ML2000    CALL      PROC0000               * process
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          OPEN      PATMI1A1,"patmi1af"
.
          OPEN      PMSVX1A1,"pmsvx1af"
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Run clean up                           *
.*                        TRUE  (1)  Exit option selected                   *
.****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ",*DV,UNDLN1:
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run clean-up
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.**************************************************************************
.*                               PROC0000              Called by: ML0000  *
.*                                                                        *
.**************************************************************************
.
PROC0000  DISPLAY   *P1:20,*EL,"Record No. : ";
          PACK      KEY8,SP70
          CALL      RDSMISS1
PROC1000  CALL      RDKMISS1
          BRANCH    OVRCD,PROC9000
.
          ADD       ONE,RECNUM                    * update record counter
.
          IF        (RECNUM%1000) = 0
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
          PACK      KEY8,DAADMNO,SP70
          CALL      RAPMVX11
          IF        OVRCD<>1
            GOTO      PROC1000
          ENDIF
.
          PACK      PMVXVISN,DAADMNO,SP70
          PACK      KEY8,PMVXVISN,SP70
.
          CALL      IBACLOCK
          PACK      PMVXCDTE,CCC,CYY,CMM,CDD * current date
          REP       " 0",PMVXCDTE
          CLOCK     TIME,CTIMEIS
          MOVE      CTIMEIS,PMVXCTIM
          CALL      WRPMVX11
          GOTO      PROC1000
.
PROC9000  CALL      IBACLOCK
          REP       " 0",CDATE
          DISPLAY   *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS
.
PROC9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
RSPTMIS1
RDSMISS1 RESET     KEY8
         READ      PATMI1A1,KEY8;;
         RETURN
.

RKPTMIS1
RDKMISS1 MOVE      ZERO,OVRCD
         READKS    PATMI1A1;DAADMNO,AURNO,ADATE,ATIME:
                                 DASTAT,APORT,ATRANNO,AINVPRT,ALACDTE:
                                 ACANCEL,AWARD,ABED,ADOCTR,ADOCTA:
                                 ADOCTL,ASRCE,ATYPE,ACLSS,ACARE,AFUNDH:
                                 AFNDTB,AFNDMM,AELIG,AVISIT,AALERG:
                                 AILLN,ADIAG1,ADIAG2,ADISC,ADOCTT,ACLSSFT:
                                 AALLOW,AMBS,ACLAIM,ADIET,APLOCCR,ASTAY:
                                 ADYHOSP,AMEMB,AMEMBNO:
                                 ACOMM1,ACOMM2,APLUR,APURGE,AUSR1:
                                 AUSR2,AUSR3,AUSR4,AUSR5,AUSR6,AUSR7:
                                 ADSCHI,ARDRNAM,AFNDYY,AFNDCG:
                                 AOCCDTE,ACODDTE,ARETDTE,AMUMADM,DPTMIPVI:
                                 ABWGHT:
                                 PTMSRFGP,PTMSGPPC,PTMSFHAN,PTMSECRA:
                                 PTMSMGIN,DPTMIDDI,PTMIGPPT,PTMIDOFR:
                                 PTMIREFD,PTMIDFCN,PTMIPHPU,PTMIAGNC:
                                 PTMIESSF,PTMIUSR8,PTMIUSR9,PTMIUSR0:
                                 PTMIPDRG,PTMIOPER,PTMIXWRD,PTMIADOC:
                                 PTMIREGS,PTMIUYN1,PTMIUYN2,PTMIPANO:
                                 PTMIPADT,PTMIPCMX,PTMIGSTA,PTMICMXP:
                                 PTMIEBED,PTMIDMOV,PTMIDFAS,PTMICRCD:
                                 PTMIFINV,PTMICONB,PTMIDATC,PTMITIMC:
                                 PTMIWEBC,PTMIDATU,PTMITIMU,PTMIWEBU:
                                 PTMI3BDY,PTMI3BAD,PTMSSPAR
         GOTO      OVERCOND IF OVER
         MOVE      DAADMNO,AADMNO
         MOVE      DASTAT,ASTAT
         MOVE      DPTMIPVI,PTMIPVIS
         MOVE      DPTMIDDI,PTMIDDIG
         MOVE      AADMNO,SSAADMNO
         MOVE      ASTAT,SSASTAT
         MOVE      ADATE,SSADATE
.
         RETURN
+

          INC       STD001IO
          INC       PMSVX1IO/INC
