.------------------------------------------------------------
.  File          :  PMSSKIPR.PBL
.
.  Function      :  Update Keyword Index File for AN-SNAP Classification Code Table
.
.  Parameters    :  PMSNCODE - Key to AN-SNAP Classification Code Table
.
.  Modifications :  v10.03.00 07/03/2012 Patrick Adair CAR 257776
.                             Add Impairment Code keywords
.
.  Notes
.  -----
.  This Skeleton Routine is to Create a Procedure to Update
.  a Key Word Index Table that can be used for searching
.  Masterfiles. The procedure should be called from the
.  Add, Update and Delete functions in the Masterfile
.  Maintenance Function.
.
.  A Key Word Index Table is Defined in the following Manner
.
.  PTDKxxxx    DIM       xx    * Code Field Segment 1
.  PTDKyyyy    DIM       xx    * Code Field Segment n
.  PMHKKKWD    DIM       15    * Key Word
.  PTDKSPAR    DIM       10    * Spare
.
.  Index 1   PTDKxxxx, PTDKyyyy, PMHKKKWD
.  Index 2   PMHKKKWD, PTDKxxxx, PTDKyyyy
.
.  To convert this Procedure the following should be performed
.    Global Change PAT to the System ID eg :%s/PAT/PAT/g
.    Global Change CKI to the File   ID eg :%s/CKI/CKI/g
.    Global Change PTDK to the IO Call ID eg :%s/PTDK/PTDK/g
.    Modify the KEYINDEX defintion to combined Code Field Lengths eg 6
.    Global Change KEY21 to the Key for the Key Word Table eg KEY21
.    Change xxxxxxx to the Code Fields eg DCODEhh
.    Change the HCGE0000 routine to call the HCPBW000 for each
.    string of key words to be indexed for the Coded Field
.    eg MOVE    DSNAME,KEYWORDS
.       CALL    HCPBW000
.       MOVE    DGNAME,KEYWORDS
.       CALL    HCPBW000
.       MOVE    TDESC,KEYWORDS
.       CALL    HCPBW000
.------------------------------------------------------------
          DEFPROC   PMSSKIUP
.
          INC       PMSSKIFD/INC
.
KEYINDEX  DIM       5         * Code Index in Table
KEYWORDS  DIM       60        * String Containing the Key Words to be Indexed
SIXTY     FORM      "60"
KEYWRDNO  FORM      2
KEYWRD00  DIM       60
KEYWRD01  DIM       30
KEYWRD02  DIM       30
KEYWRD03  DIM       30
KEYWRD04  DIM       30
KEYWRD05  DIM       30
KEYWRD06  DIM       30
KEYWRD07  DIM       30
KEYWRD08  DIM       30
KEYWRD09  DIM       30
KEYWRD10  DIM       15
KEYSTORE  DIM       5          * AN-SNAP Classification key
.------------------------------------------------------------
. Generate Word Index
.------------------------------------------------------------
HCGE0000  MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     PMSSKIA1,"pmsskiaf"
          TRAPCLR  IO
          BRANCH   OVRCD,HCGE9999
.
          PACK     KEYINDEX,PMSNCLCD,PMSNVERS
          PACK     KEYSTORE,PMSNCLCD,PMSNVERS
          CALL     HCPCL000           * Remove Current Key Word Index
          BRANCH   EXIT,HCGE9999
.
          PACK     KEY5,PMSNCLCD,PMSNVERS  * Validate Record on File
          CALL     RDPMSNP1
          BRANCH   OVRCD,HCGE1900     * If Not then it Must be a Delete/Clear
.
          PACK     KEYINDEX,PMSNCLCD,PMSNVERS
          MOVE     PMSNDESC,KEYWORDS
          CALL     HCPBW000
.
HCGE1900  CLOSE    PMSSKIA1
.
HCGE9999  GOTO     PMSSKIEP
.------------------------------------------------------------
. Clear Current Key Words
.------------------------------------------------------------
HCPCL000  PACK     KEY35,KEYINDEX,SP70
          CALL     RSPMSKI1
          CALL     RKPMSKI1
          BRANCH   OVRCD,HCPCL999
          MATCH    KEYINDEX,KEYSTORE
          GOTO     HCPCL999 IF NOT EQUAL
.
          PACK     KEY35,PMSKCODE,PMSKKKWD,SP70
          CALL     DEPMSKI1
          GOTO     HCPCL000
.
HCPCL999  RETURN
.-------------------------------------------------
. Determine Words to Index
.-------------------------------------------------
HCPBW000  CMATCH    SP1,KEYWORDS             * Eliminate leading blanks
          IF        @EQUAL
            BUMP      KEYWORDS
            GOTO      HCPBW000 IF NOT EOS
            GOTO      HCPBW999               * entire name if blank
          ENDIF
          PACK      KEY60,KEYWORDS,SP30      * reset form pointer
          MOVE      KEY60,KEYWORDS
.
          SCAN      SP1,KEYWORDS             * Locate the first blank
          GOTO      HCPBW100 IF NOT EQUAL
          BUMP      KEYWORDS,-1              * go back 1 to end of name
          MOVEFPTR  KEYWORDS,CCITEM          * another handly form field
          RESET     KEYWORDS                 * reset the form pointer
          SETLPTR   KEYWORDS,CCITEM          * set logical length to end of name
.
.         Save this Word
.
HCPBW100  MOVE      KEYWORDS,KEY15
          PACK      KEY15,KEY15,SP70
          REP       UPPLOW,KEY15             * Always Upper Case
          PACK      KEY35,KEYINDEX,KEY15
          UNPACK    KEY35,PMSKCODE,PMSKKKWD
          CALL      RDPMSKI1
          IF        OVRCD=1
            CALL      WRPMSKI1
          ENDIF
          GOTO      HCPBW190
.
.         Check for any more words
.
HCPBW190  SETLPTR   KEYWORDS,SIXTY         * reset logical length
          ADD       ONE,CCITEM             * position of 1st blank
          RESET     KEYWORDS,CCITEM        * reset to this point
          PACK      KEY60,KEYWORDS,SP30    * reset form pointer
          MOVE      KEY60,KEYWORDS
          GOTO      HCPBW000
.
HCPBW999  RETURN
.
          INC       PMSSKIIO/INC
          INC       IBAOVRIO/INC
.
PMSSKIEP  ENDPROC                          * End of Procedure
.
