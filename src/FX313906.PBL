.*****************************************************************************
.* System    :   Patient Management System                                   *
.* Program   :   FX313906                                                    *
.* Desc      :   Default postal address to PRFA                              *
.*****************************************************************************
.* Date      :   14/09/2015                                                  *
.* Author    :   Davin Sloan                                                 *
.* Function  :   This program will loop through patre1af looking for visits  *
.*               that have a postal address record either on pmscexaf or     *
.*               patmx1af (based on parameter 'Using New Contacts Table').   *
.*               The postal address will then be copied to patre1af.         *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATMA1FD/INC
          INC       PATRE1FD/INC
          INC       PATVISFD/INC
          INC       PMSCEXFD/INC
.
. LOCAL VARIABLE DEFINITION
. -------------------------
COUNTER   FORM      8
LINENOTE  DIM       70
.
.
. PROGRAM CONSTANTS
. -----------------
PIPE      INIT      "|"
.
.
.
PRGID     INIT      "FX313906"
PRGNAM    INIT      "Default postal address to PRFA "
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000       * proceed with fixit
.
MAIN1000  CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN2000  CALL      PROC0000               * process
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000                                   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patre1af";
          OPEN      PATRE1A1,"patre1af"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA1,"patvisaf"
.
          DISPLAY   *P64:24,"pmscexaf";
          OPEN      PMSCEXA1,"pmscexaf"
.
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,HUND18;*138,PTCNNEWC
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000                                   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run fixit                               *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION  1 = Run Fixit (Report Only)                         *
.*                       2 = Run Fixit                                       *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (Report Only)":
                    *P1:6,*V2LON,TWO,*HOFF,". Run Fixit" 
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run fixit (report only)
                            OPTN9000             * run fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               PROC0000                                    *
.*              Loop through patre1af looking for records that match         *
.*          patvisaf records and if found, default postal address (pmscexaf) *
.*****************************************************************************
.
PROC0000  DISPLAY   *P1:24,*EL,"Processing:";
          MOVE      ZERO,COUNTER                 * initialise record counter
.
          MOVE      ZERO,CPAGENO                 * initialise print variables
          MOVE      ZERO,CNOUNDLN
          CALL      IBACLOCK
.
          CALL      HEAD0000                     * print report header
.
          MOVE      SP30,KEY8
PROC0500  CALL      RSPTRES1                     * position at start of file
PROC1000  CALL      RKPTRES1                     * read next record
          BRANCH    OVRCD,PROC9000               * eof - finished
.
          DISPLAY   *P13:24,*EL,*V2LON,DPKADMN
.
          MOVE      DPKADMN,KEY8
          CALL      RDPTVIS1                     * read visit record
          BRANCH    OVRCD,PROC1000               * no match found
.
          MOVE      PVIURNO,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,PROC1000               * no match found
.
.         We have found a matching record, so check if postal address
.         exists on pmscexaf or patmx1af
.
          MOVE      SP70,LINENOTE                * initialise note field
          CALL      POST0000                     * postal address exists?
          BRANCH    EXIT,PROC1000                * no
.
          CALL      DISP0000                     * print record for update
.
          GOTO      PROC1000                     * get next record
.
PROC9000  CALL      LINE0000
.
          IF        COPTION = 1
            PRINT     *N,COUNTER,*HOFF," records found.  "
          ELSE
            PRINT     *N,COUNTER,*HOFF," records updated.  "
          ENDIF
          PRINT     *N,*1,"*** End of Report ***"
.
          DISPLAY   *P1:23,*EF,"Fixit completed.";
          IF        COPTION = 1
            DISPLAY   *P1:24,*V2LON,COUNTER,*HOFF," records found.  ";
          ELSE
            DISPLAY   *P1:24,*V2LON,COUNTER,*HOFF," records updated.  ";
          ENDIF
          CALL      HITENTER
.
PROC9999  RETURN
+
.****************************************************************************
.*                            POST0000                                      *
.*                  Check for active postal address                         *
.****************************************************************************
POST0000  MATCH     "1",PTCNNEWC
          GOTO      POST5000 IF NOT EQUAL        * using new contacts table ?
.
          PACK      KEY14,PVIURNO,SP70
          CALL      RSPMCEX1
POST1000  CALL      RKPMCEX1                     * check new contacts table
          BRANCH    OVRCD,POST9500
.
          MATCH     PVIURNO,PMCEURNO
          GOTO      POST9500 IF NOT EQUAL
.
          MATCH     SP70,PMCETYPE
          GOTO      POST1000 IF EQUAL
.
          MOVE      "tc",KEY2
          PACK      KEY5,KEY2,PMCETYPE
          CALL      RDCODE1
          BRANCH    OVRCD,POST1000
.
          MATCH     "2",TCINDC1
          GOTO      POST1000 IF NOT EQUAL        * postal address ?
.
          MATCH     "1",PMCEACTV
          IF        @EQUAL
            MATCH     PMCEDINA,PVIDATE           * Check Inactive date
            GOTO      POST1000 IF NOT LESS
          ENDIF
.
          MATCH     SP70,PMCEADD1
          GOTO      POST1000 IF EQUAL            * no postal address
.
.         Now update patre1af with the postal address from pmscexaf
.
          IF        COPTION = 2
            MOVE      PMCEADD1,PKADD1
            MOVE      PMCEADD2,PKADD2
            MOVE      PMCEADD3,PKSUBR
            MOVE      PMCEADD4,PKADD4
            MOVE      PMCEPOST,PKPOST
            CALL      UPRESP1                    
          ENDIF
.
          MOVE      "Postal address found for visit (pmscexaf)",LINENOTE
          ADD       ONE,COUNTER
          MOVE      ZERO,EXIT
          GOTO      POST9999
.
POST5000  MATCH     SP70,PTMXADD1
          GOTO      POST9500 IF EQUAL            * no postal address
.
.         Now update patre1af with the postal address from patmx1af
.
          IF        COPTION = 2
            MOVE      PTMXADD1,PKADD1
            MOVE      PTMXADD2,PKADD2
            MOVE      PTMXADD3,PKSUBR
            MOVE      PTMXADD4,PKADD4
            MOVE      PTMXPOST,PKPOST
            CALL      UPRESP1                    
          ENDIF
.
          MOVE      "Postal address found for visit (patmx1af)",LINENOTE
          ADD       ONE,COUNTER
          MOVE      ZERO,EXIT
          GOTO      POST9999
.
POST9500  MOVE      SP70,LINENOTE
          MOVE      ONE,EXIT
POST9999  RETURN
+
.****************************************************************************
.*                            DISP0000                                      *
.*                  Valid record so print it                                *
.****************************************************************************
.
DISP0000  COMPARE   FIFTY5,CLNO                  * page full ?
          CALL      HEAD0000 IF NOT LESS         * yes
.
          PRINT     *1,PIPE,*5,DPKADMN,*16,PIPE,*18,LINENOTE,*132,PIPE
.
          ADD       ONE,CLNO                     * increment line count
.
DISP9999  RETURN
+
.****************************************************************************
.*                            HEAD0000                                      *
.*                       Print page heading                                 *
.****************************************************************************
.
HEAD0000  CALL      HEAD132                      * display page header
.
          CALL      LINE0000                     * draw line across page
.
          PRINT     *1,PIPE,*3,"Visit Number",*16,PIPE,*18,"Notes",*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      SIX,CLNO                     * increment line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                                      *
.*                      Draw line across page                     HEAD0000  *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       PATCODIO/INC
          INC       PATMA1IO/INC
          INC       PATRE1IO/INC
          INC       PATVISIO/INC
          INC       PMSCEXIO/INC
