.----------------------------------------------------------------------
. Program       : HL7ORUMS
.
. Function      : HL7 Results Email Web Server
.
. Modifications :
.
.         V12.00.02 05/06/2025  Don Nguyen     TSK 0960296
.                   Stop processing Clinical Document once 99 reached; LNKRES00
.         V12.00.01 15.05.2025  DA SArkies     TSK 0955096
.                   Updated for Alpha-Numeric Visit Number                    
.         V11.05.01 03.12.2024  DA Sarkies     TSK 0952965
.                   Recompiled for HL7OBXFD
.         V11.04.01 03.12.2024  DA Sarkies     TSK 0952965
.                   Recompiled for HL7OBXFD
.         V11.03.02 25/07/2023  Jacob Jackson  TSK 0924406
.                   Truncate spaces when processing segment OBX3.2 data to
.                   help stop duplicate codes from being generated
.         V11.03.01 27/02/2023  Don Nguyen     TSK 0929307
.                   Cleared read locks on "reha" (RLREHA1) to prevent errors
.         V11.02.01 01/04/2022  Jill Parkinson Task 0918603
.                   Changed reha length from 387 to 418 and rehd from 155 to 398
.         V11.01.01 02/06/2021  Jill Parkinson Task 0905947
.                   Recompiled for IBACOMN - ignore hitenter
.         V11.00.04 19/08/2020  Jill Parkinson Task 0894729
.                   Removed check added in 11.00.03 for ordered only
.         V11.00.03 10/08/2020  Jill Parkinson Task 0894729
.                   Mods to only compare filler id in PROORD00 when setting an
.                   order to completed (status ZZ)
.         V11.00.02 21/04/2020  Jill Parkinson Task 0879163
.                   Mods to read category G for sex and compare hdp or ind1
.         V11.00.01 07/04/2020  Jill Parkinson Task 0880632
.                   Mods to use time 00:00 if + or - in timezone
.         V10.11.03 08/12/2017  Richa Phogat   TSK 0822683
.                   Added parameter to decide if Referral visit should be
.                   searched or not
.         V10.11.02 18/10/2017  Peter Vela     TSK 0846153
.                   Validate for array length < 21 in HL7BRK90
.         V10.11.01 28/09/2017  Jill Parkinson TSK 0834796
.                   Mods to store first 127 characters of obx005 in redavst
.                   instead of the last 127
.         V10.08.02 15.11.2016  Jill Parkinson Task 0829170
.                   Changed to only unlock reslogaf if it was opened in init
.         V10.08.01 12.08.2016  B.G.Ackland      
.                   When Placer Application ID ORC-2-2 or ORC-4-2 is empty
.                   Determine it from the hospital provider id
.         V10.07.02 05/11/2015  Steve Armstrong  CAR 303363
.                   Recompiled for changes to RESHEAFD
.         V10.07.01 26/10/2015  Steve Armstrong  CAR 323085
.                   Removed declaration for LOWUPP (now defined in IBACOMM)
.----------------------------------------------------------------------
.         V10.06.01 31/08/2015  Davin          CAR 318850
.                   Open results tables (RESOPN00) after writing reslogaf record
.                   Update reslogaf with error if results tables don't exist
.                   instead of creating tables @ MAKRES00
.----------------------------------------------------------------------
.         V10.05.01 16/10/2014  Jill Parkinson CAR 307330
.                   Mods to upcase PID005 fields so matches to patma1af names
.----------------------------------------------------------------------
.         V10.04.01 03.06.2014  B.G.Ackland  
.                   Enhanced to receive ARGUS referral documents ie Discharge
.                   Summary/Operation Reports
.----------------------------------------------------------------------
.         V10.03.06 31.10.2013  B.G.Ackland  CAR 275970
.                   Rogue ORC segments from Sonic in Queensland
.         V10.03.05 05.09.2013  B.G.Ackland  CAR 275970
.                   Enable ~ as Line Feed in OBX TX / FT Segments
.                   Fix I * C on reslnkaf for order status change
.                   Don't process order when the placer order application
.                   is blank to avoid rogue ORC segments from Sonic in
.                   Queensland
.         V10.03.04 13.03.2013  B.G.Ackland  CAR 275970	
.                   Fixed Result Type ED for Embedded Documents inline with
.                   10.01
.         V10.03.03 06.11.2012  B.G.Ackland  CAR 275970	
.                   Pack ORC004 & ORC002 with Spaces in PROORD00
.                   Added Result Type ED for Embedded Documents inline with
.                   10.01
.                   Added Processing of Orders to Flag when Results Returned
.         V10.03.02 06.07.2012  B.G.Ackland  CAR 275970
.                   Automatic Abnormal Flag Based on Indicator in Category dg
.                   Automatic Unknown Flag Based on Indicator in Category dg
.                   "NO GROWTH" rule for results based on Indicator in Category
.                   dg
.         V10.03.01 10.05.2012  B.G.Ackland  CAR 265085
.                   Open RESLNKAF by Year in CHKLUP00
.                   Build Result Link Table
.----------------------------------------------------------------------
.         V10.02.02 13/07/2011  Steve Armstrong   CAR 240722
.                   Further mods to cater for second given name as
.                   part of PATGSRFD keys
.         V10.02.01 08/06/2011  Steve Armstrong   CAR 240722
.                   Mods to cater for changes to PATGSRFD:
.                        - GSRSNAM & GSRGNAM extended to 30 chars.
.                        - PTGSGNM2 added.
.                        - all indexes changed in length.
.----------------------------------------------------------------------
.         V10.01.04 24/03/2011  Jill Parkison CAR 240545
.                   Added 'Invalid Allied Health Visit' message
.         V10.01.03 24/03/2011  Jill Parkison CAR 240545
.                   Changed if OBR or OBX setid is blank use a counter
.         V10.01.02 16/03/2011  Jill Parkison CAR 239825
.                   Copied and modified SNAME000 from V6
.                   Changed to generate and write to respidaf if details don't
.                   match
.         V10.01.01 14/12/2010  Jill Parkison CAR 234215
.                   Added AH links
.         V10.00.04 31/08/2010  Jill Parkison CAR 228108
.                   Recompiled for HL7ORUFD and IO to allow for 2.3.1 fields
.         V10.00.03 29/07/2010  B.G.Ackland
.                   Read to End of Record for 2.3 Version Messages
.         V10.00.02 17/05/2010  Jill Parkison CAR 221924
.                   Mods to call GETVIS00 from CHKHED00 to stop incorrect links
.         V10.00.01 22/03/2010  Jill Parkison CAR 218328
.                   Mods to continue after 'Patient Status Error'
.         V9.12.04  14/12/2009  Jill Parkison CAR 211492
.                   Mods to allow status P,R and I to overwrite themselves in
.                   CHKSTA00
.         V9.12.03  15/10/2009  Jill Parkinson CAR 207724
.                   Mods to use PID003 in PRONHI00 if PID002 is blank
.         V9.12.02  11/08/2009  Jill Habasque CAR 189858
.                   Changed aae to emrvisaf fields
.         V9.12.01  05/08/2009  Jill Habasque CAR 199580 and 189858
.                   Added new link types and check if results should be reloaded
.         V9.09.01  05/02/2008  Jill Habasque CAR 153711
.                   Recompiled for HL7MSHIO
.         V9.05.B01 30/01/2006  Ebon Clements CAR 93186
.                   Mods for REDIRECT length change. Recompiled for IBAWEBDF
.         V9.04.05  03/11/2004  Jill Habasque CAR 43723
.                   Moved CHKRCI00 to be after RUN number is set correctly
.         V9.04.04  14/10/2005  Jill Habasque CAR 80178
.                   Mods to CHKLAB00 - use MSH00301 or MSH00302 if not spaces
.         V9.04.03  19/04/2005  Mike Laming   CAR 43973
.                   Re-compile for RESHEAFD/RESHEAIO and HL7OBRFD/HL7OBRIO
.                   - add REHALOC Location from OBR field 20
.         V9.04.02  25/01/2005  Mike Laming   CAR 41336
.                   Modify to retain "Mark-as-Read" flag when new/changed
.                   Results are received - IA Hawkes Bay
.         V9.04.01  14/12/2004  Jill Habasque CAR 55457
.                   Changed check for RAREPI1 to continue if record exists
.                   (instead of taking you to PRONHI15 or PROMAS15)
.         V9.03.05  15/06/2004  Jill Habasque CAR 50728
.                   Recompiled for HL7OBRFD - increased length of OBR002
.         V9.03.04  21/05/2004  Jill Habasque CAR 49733
.                   Mods to stop processing after OBR errors
.                   04/05/2004  Peter Vela     CAR 49566
.                   Write link type of "03" and "07" (ordering provider) when
.                   there is no visit type found.
.         V9.03.03  03/05/2004  Jill Habasque
.                   Fixed loop when invalid dates in OBR segments
.         V9.03.02  11/03/2004  Peter Vela    CAR 36752
.                   When no visit no is found, result is linked to type 03 and
.                   ordering provider OBR-16.
.                   13/02/2004  Peter Vela    CAR 38290
.                   Added functionality for opening yearly RESLNKFD files
.                   (reln1999, reln2000, reln2001, reln2002, etc...)
.         V9.03.01  15/05/2003  Jill Habasque  SRF 38916
.                   Added new link type (09) for emergency site
.         V9.02.04  22/04/2003  Jill Habasque SRF 38103
.                   Added branch on ovrcd in proobr00
.         V9.02.03  08/01/2003  Jill Habasque SRF 34657 
.                   Changed TX types to call OBXFT000 instead of OBXTX000     
.                   Added Attending and referring doctor link type (07 and 08)
.         V9.02.02  16/10/2002  Jill Habasque           
.                   Added move of zero to "Marked as seen" on update          
.         V9.02.01  07/10/2002  Jill Habasque           
.                   Ported from 5.09                                          
.         V5.09.16  26/09/2002  Tonii SRF 16131 rebound
.                   Made changes discovered by Katie- Changed label GETVIS10  
.                   to call GETINP00 first
.         V5.09.15  20/09/2002  Guomin SRF 16131 rebound
.                   Restored 8 missing file opens    
.         V5.09.14  11/09/2002  Tonii  SRF 16131
.                   Incorporated the code Katie wrote for Result List    
.         V5.09.13  24/06/2002  Harvinder SRF No. 18461
.                   Fixed to open the reslogaf file
.         V5.09.12  18/06/2002  Harvinder SRF No. 18461
.                   Fixed to pack in REDCTXT file for the proper population
.                   of NTE segments
.         V5.09.11  22/02/2002  Steve Armstrong
.                   Fixed setting of OBXESCFL when end of escape sequence (\)
.                   is last character of 127 character string being processed
.         V5.09.10  01.02.2002 B.G.Ackland
.                   Visit Linking Check on Dates
.         V5.09.09  07.12.2001 B.G.Ackland
.                   Ignore Crap Data from Delphic
.         V5.09.08  06/12/2001 B.G.Ackland
.                   Fixed for Multiple NTE Segments After a OBX 
.         V5.09.07  05/12/2001 Katie Nelson
.                   Modified for no value type to default to ST    
.         V5.09.06  29/11/2001  Harvinder HPS (SRF No. 10796)
.                   Modified for desc of HL7 message at UPRTSC00
.         V5.09.05  22/11/2001  Jill Habasque/Katie Nelson
.                   Changed to match the MSA segment id's at PORU0000
.         V5.09.04  21/11/2001  Greg Horvat/Katie Nelson
.                   Changed to match the segment id's after exiting the OBR
.                   routine rather than read the segment id's again
.         V5.09.03  21/11/2001  Greg Horvat/Katie Nelson
.                   1) Changed to loop thru for multiple OBR segments
.                   2) Changed to look for another PID segment without getting
.                      out of the PORU0000 routine
.                   3) Added a read for MSA segments
.         V5.09.02  17.09.2001  B.G.Ackland
.                   Fix Error Count
.         V5.09.01  14.09.2001  B.G.Ackland
.                   Fix PID Error Reporting for NHI
.         V5.08.14  23.03.2001  B.G.Ackland
.                   Release Lock of Log File at Exit
.         V5.08.13  16.03.2001  B.G.Ackland
.                   Fix PID Error Reporting
.         V5.08.12  16.11.2000  B.G.Ackland
.                   Fix Error Reporting
.         V5.08.11  15.11.2000  B.G.Ackland
.                   Added Result Errors File
.         V5.08.10  14.11.2000  B.G.Ackland
.                   Replace Balnk UR with Date & Time Unique Key
.         V5.08.09  06.11.2000  B.G.Ackland
.                   Update UR Link Table for Normal Status etc
.         V5.08.08  06.11.2000  B.G.Ackland
.                   Check for Emergency/Inpatient Visits on Same Day
.         V5.08.07  01.11.2000  B.G.Ackland
.                   Pack Save UR Variable in CHKHED00
.         V5.08.06  31/10/2000  Greg Horvat
.                   Recompiled for changes to HL7MSHFD HL7PIDFD & HL7PV1FD
.
.                 V5.08.05 15.10.2000 B.G.Ackland
.                          SQUEEZE PID002 for NZHIS.
.
.                 V5.08.04 27.07.2000 B.G.Ackland
.                          MHAC Changes
.
.                 V5.08.03 27.07.2000 B.G.Ackland
.                          Created Program
.
.                 V5.07.00 24.08.1999 K.C.Nelson 
.                          Created Program
.
.                 V5.07.01 24.08.1999 K.C.Nelson 
.                          Fix Links for Results
.
.                 V5.07.02 05.10.1999 B.G.Ackland
.                          Enable ORM Messages to be Received
.
.                 V5.07.03 07.10.1999 B.G.Ackland
.                          Fix for Merged Patient U/R         
.
.                 V5.07.04 11.10.1999 B.G.Ackland
.                          Fix Outpatient Links               
.
.                 V5.07.05 11.10.1999 B.G.Ackland
.                          Fix Visit Link Error Reporting
.
.                 V5.07.06 12.10.1999 B.G.Ackland
.                          Update GP Link for Master File Reg GP
.                 V5.07.07 20.12.1999 K.C.Nelson  
.                          Recompiled for IBAWEBDF/IBAWEBCD          
.
.                 V5.07.08 31.01.2000 B.G.Ackland 
.                          Implement Normal Status of 2
.
.                 V5.07.09 15.02.2000 B.G.Ackland 
.                          Avoid Duplicate ORM requests Updating the DB
.
.                 V5.07.10 21.02.2000 B.G.Ackland 
.                          Ignore Records with Blank Dates   
.
.                 V5.08.01 05.06.2000 B.G.Ackland
.                          Implement for Australian Hospitals
.
.                 V5.08.02 27.06.2000 B.G.Ackland
.                          Fixed Error Messages
.
.----------------------------------------------------------------------
          INC       IBAWEBDF
          INC       ALLCONFD/INC
          INC       AAEDE1FD/INC
          INC       ALLREFFD/INC
          INC       EMRVISFD/INC
          INC       HL7MSHFD/INC
          INC       HL7NTEFD/INC
          INC       HL7PIDFD/INC
          INC       HL7PV1FD/INC
          INC       HL7RF1FD/INC
          INC       HL7PRDFD/INC
          INC       HL7ORCFD/INC
          INC       HL7OBRFD/INC
          INC       HL7OBXFD/INC
          INC       HL7CODFD/INC
          INC       NHIMASFD/INC
          INC       OUTSITFD/INC
          INC       OUTBOAFD/INC
          INC       OUTBB1FD/INC
          INC       OBSPCOFD/INC
          INC       OBSPCTFD/INC
          INC       PATCONFD/INC
          INC       PATDSCFD/INC
          INC       PATGSRFD/INC
          INC       PATHSPFD/INC
          INC       PATMA1FD/INC
          INC       PATWR1FD/INC
          INC       PMSPX2FD/INC
          INC       PMSVX1FD/INC
          INC       PATMI1FD/INC
          INC       PATVISFD/INC
          INC       RESCLNFD/INC
          INC       RESDEAFD/INC
          INC       RESDEBFD/INC
          INC       RESDECFD/INC
          INC       RESERRFD/INC
          INC       RESHEAFD/INC
          INC       RESHEBFD/INC
          INC       RESHECFD/INC
          INC       RESHEDFD/INC
          INC       RESLNKFD/INC
          INC       RESLURFD/INC
          INC       RESLABFD/INC
          INC       RESLOGFD/INC
          INC       RESPIDFD/INC
          INC       RESCTAFD/INC
          INC       TMPRESFD/INC                                       *I-41336
.
RFTYPE    DIM       30
RFREAS    DIM       30
DOCTNAME  DIM       30
RPNAME    DIM       30
RPCODE    DIM       20
RTNAME    DIM       30
RTCODE    DIM       20
.
NOGROWTH  FORM      1
OBX018    DIM       20
UNIQPID   FORM      6   * Unique Record Counter for PID Records
ENDLINE   FORM      1
RESULTKY  DIM       17
OBXESCFL  FORM      1
LENGTH01  FORM      3
CHK127    DIM       127
CHAR      DIM       1
CMNDLINE  DIM       127
CFILEPRE  DIM       3
DIM9      DIM       9
DOB       DIM       8
.
CARET     INIT      "^"
CRFORM    INIT      015
.
DGATEOUT  DFILE                             * Defined for the HL7 includes
.
ERRCOUNT  FORM      6
ERRMESS   FORM      1
.
FIELDNO   FORM      2
FORM8     FORM      8
FOUNDALL  FORM      1
FOUNDINP  FORM      1
FSOBX005  DIM       127
.
GIVEN     DIM       40
.
HIGHSCOR  FORM      1
.
HL7STR    DIM       127     * Input String
HL7DLM    DIM       1       * Delimiter
HL7CMP    DIM       127[20] * Output Array
.
ISBUILD   INIT      "isbuild"                                          *I-41336
.
LINENO    FORM      3
LINKTYPE  DIM       2
LINKKEYS  DIM       10
ERRORMSG  DIM       20
LOGERROR  DIM       20
LPOBX005  FORM      3   
LOGDATE   DIM       10
LOGTIME   DIM       5 
LOGUNQID  FORM      10
.
MEDICARE  DIM       10
MESSTYPE  DIM       3
.
NEWSTATS  DIM       1
NEXTSEG   DIM       4
NOUPDATE  FORM      1
NTEFTESC  DIM       3
.
OBRNTEFL  FORM      1
OBRCOUNT  FORM      4
OBXFTESC  DIM       3
OBXCOUNT  FORM      4
OLDSTATS  DIM       1
OUT127    DIM       127
OUTSTLEN  FORM      3
.
PATHFILE  FILE      ASCII, FIXED=250
PATHNAME  DIM       60
PIDISAUR  FORM      1
PREHEA    INIT      "reha"
PREHEB    INIT      "rehb"
PREHEC    INIT      "rehc"
PREHED    INIT      "rehd"
PREDEA    INIT      "reda"
PREDEB    INIT      "redb"
PREDEC    INIT      "redc"
PRELEN    INIT      "reln"    * I CAR 38290
.
MSHCOUNT  FORM      6
RESCOUNT  FORM      6
RESULTYR  DIM       4
RESLNKFL  DIM       8         * File name var for reslnk CAR 38290
REQTIME   DIM       5
RUNNOERR  FORM      1
.
SAVBILL   DIM       8
SAVDATE   DIM       8
SAVEURNO  DIM       8
SAV127    DIM       127
SCORE     FORM      1
SAVKEY29  DIM       29                                                 *I-41336
SEGID     DIM       3
SETID     FORM      4
SEX       DIM       1
SNAMEFLG  FORM      1
SURNAME   DIM       40
SVPATPID  DIM       16              * Save patient PID

.
TEMPHRS   DIM       2
TEMPMIN   DIM       2
.
UNILABC   DIM       3
UNISEGF   DIM       5
UNIQUEID  FORM      4
UNISCHE   DIM       12
UNICODE   DIM       12
UNIDESC   DIM       50
UPDATEFL  FORM      1
URNO      DIM       8
YEAROPEN  DIM       4
ORMFLAG   FORM      1
.
CMDLINE   DIM       127       * Command line instruction
CORRESID  FORM      4
COPYFKEY  DIM       20        * Document Copied From Key
CORSFILE  DIM       30
SAVISIT   DIM       8
CATWI     INIT      "wi"
ENCODING  DIM       6
FILETYPE  DIM       5
FILEEXTN  DIM       3
DASH      INIT      "-"
TEMPFILE  FILE      ASCII, FIXED=250
CORRURNO  DIM       8
CORRADMN  DIM       8
PLACERID  DIM       6        * Placer ID
.
PRGID     INIT      "HL7ORUMS"
VERSION   INIT      "V12.00.02"
PRGNAM    INIT      "HL7 Results/Referral Email Web Server"
.------------------------------------------------------------
. Start of Program
.------------------------------------------------------------
MAIN0000  CALL      INIT0000                * initialisation
          BRANCH    EXIT,MAIN9990           * initialisation failed 
          MOVE      ZERO,MSHCOUNT
          MOVE      ZERO,RESCOUNT
          MOVE      ZERO,ERRCOUNT
.
          CALL      WRTLOG00                * Write Log Record
.
          CALL      RESOPN00                * Open result tables
          BRANCH    EXIT,MAIN9000
.
MAIN1000  READ      HL7FLFMT,SEQ;SEGID; 
          GOTO      MAIN9000 IF OVER
.
MAIN1100  MATCH     "MSH",SEGID             
          GOTO      MAIN1200 IF EQUAL
          READ      HL7FLFMT,SEQ;ANS
          GOTO      MAIN1000
.
MAIN1200  ADD       ONE,MSHCOUNT
          MOVE      SP70,ERRORMSG
          CALL      CLRMSH00                * Clear MSH fields
          CALL      CLRPID00                * Clear PID fields
          CALL      CLRPV100                * Clear PV1 fields
          CALL      CLROBR00                * Clear OBR fields
          CALL      CLROBX00                * Clear OBX fields
          CALL      CLRRF100                * Clear RF1 fields
          CALL      CLRPRD00                * Clear PRD fields
          CALL      CLRREF00                * Clear Referral
.
          CALL      RHL7MSH1              * Read message header
.
          MOVE      ZERO,ORMFLAG
          MATCH     "ORU",MSH00901 
          GOTO      MAIN1300 IF EQUAL
          MOVE      ONE,ORMFLAG
          MATCH     "ORM",MSH00901 
          GOTO      MAIN1300 IF EQUAL
.
          MATCH     "REF",MSH00901 
          GOTO      MAIN1400 IF EQUAL
.
          GOTO      MAIN1000
.
MAIN1300  CALL      CHKLAB00              * Check Sending Application
          CALL      LOGHD000              * Update the Log Record
.
          CALL      PORU0000              * Process ORU message
          BRANCH    EXIT,MAIN1100
          GOTO      MAIN9000
.
MAIN1400  CALL      CHKLAB00              * Check Sending Application
          CALL      LOGHD000              * Update the Log Record
.
          CALL      PREF0000              * Process REF message
          BRANCH    EXIT,MAIN1100
          GOTO      MAIN9000
.
MAIN9000  CALL      LOGFU000              * Update the Log Record
          GOTO      MAIN9995
.
MAIN9990  MOVE      "Cannot find file.",LOGERROR 
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          GOTO      MAIN9999
.
MAIN9995  CALL     UURELG1
MAIN9999  STOP
.
ERRLOG00  DISPLAY   *R,"Message Counter ",MSHCOUNT
          DISPLAY   *R,"U/R             ",PID00201
          DISPLAY   *R,"Name            ",PID005
          DISPLAY   *R,"Record Count    ",RESCOUNT
          DISPLAY   *R,"Error Count     ",ERRCOUNT
          DISPLAY   *R,"Error Message   ",LOGERROR
          MOVE      LOGERROR,ERRORMSG
          RETURN
.------------------------------------------------------------
.  Write Log Record
.------------------------------------------------------------
WRTLOG00  MOVE     "9999999999",KEY10
          CALL     RLRELG1
          COMPARE  ZERO,OVRCD
          GOTO     WRTLOG10 IF EQUAL
          IF       OVRCD=1
            CALL     WRTLOC00
            GOTO     WRTLOG00
          ENDIF
          IF       OVRCD=2
            CALL     WAIT0000
            GOTO     WRTLOG00
          ENDIF
.
WRTLOG10  PACK     LOGDATE,CCC,CYY,CMM,CDD
          REP      " 0",LOGDATE
          PACK     LOGTIME,CTIMEIS
          MOVE     ZERO,LOGUNQID
          MOVE     "9999999999",KEY10
          CALL     RDRELG1
          CALL     RPRELG1
          BRANCH   OVRCD,WRTLOG20
.
          MOVE     RELGUID,LOGUNQID
.
WRTLOG20  ADD      ONE,LOGUNQID
          MOVE     LOGUNQID,RELGUID
          MOVE     LOGDATE,RELGDTE
          MOVE     LOGTIME,RELGTME
          MOVE     PATHNAME,RELGINF
          MOVE     SP70,RELGPCO
          MOVE     SP70,RELGRUN
          MOVE     SP70,RELGMER
          MOVE     "N",RELGCMP
          MOVE     ZERO,RELGRPR
          MOVE     ZERO,RELGERR
          MOVE     ZERO,RELGEXP
          MOVE     ZERO,RELGMID
.
          PACK     KEY10,LOGUNQID
          CALL     RARELG1
          COMPARE  ZERO,OVRCD
          GOTO     WRTLOG20 IF EQUAL
          CALL     WRRELG1
          MOVE     ZERO,UNIQPID
.
          RETURN
.
WAIT0000  DISPLAY  *W5,"Waiting on System Lock"
          RETURN
.------------------------------------------------------------
. Write Lock Record
.------------------------------------------------------------
WRTLOC00  MOVE     "9999999999",RELGUID
          MOVE     LOGDATE,RELGDTE
          MOVE     LOGTIME,RELGTME
          MOVE     PATHNAME,RELGINF
          MOVE     SP70,RELGPCO
          MOVE     SP70,RELGRUN
          MOVE     "Lock Control Record",RELGMER
          MOVE     "N",RELGCMP
          MOVE     ZERO,RELGRPR
          MOVE     ZERO,RELGERR
          MOVE     ZERO,RELGEXP
          MOVE     ZERO,RELGMID
          CALL     WRRELG1
          RETURN
.------------------------------------------------------------
.  Check Sending Application
.------------------------------------------------------------
CHKLAB00  MOVE     MSH00301,RELBLCD      
          MOVE     MSH00301,KEY3
          CALL     RDRELB1
          COMPARE  ZERO,OVRCD
          GOTO     CHKLAB99 IF EQUAL
.
          MOVE     SP70,KEY3
          CALL     RSRELB1
CHKLAB10  CALL     RKRELB1
          BRANCH   OVRCD,CHKLAB90
          MATCH    MSH00301,RELBSAP
          GOTO     CHKLAB99 IF EQUAL
          MATCH    SP70,MSH00302
          IF       !@EQUAL
            MATCH    MSH00302,RELBSAP
            GOTO     CHKLAB99 IF EQUAL
          ENDIF
          GOTO     CHKLAB10
.
CHKLAB90  MOVE     MSH00301,RELBLCD      
CHKLAB99  RETURN
.------------------------------------------------------------
.  Log File Update
.------------------------------------------------------------
LOGHD000  MOVE     RELGUID,KEY10
          CALL     RDRELG1
          IF       OVRCD=0
            MOVE     RELBLCD,RELGPCO           * Sending Application Lab Code
            MOVE     MSH010,RELGMID             * Message control ID
            MOVE     RESCOUNT,RELGRPR
            MOVE     ERRCOUNT,RELGERR
            CALL     UPRELG1
          ENDIF
          MOVE     ZERO,F2

LOGHD100  
.          MOVE     RELBLCD,KEY3
.          CALL     RLRELB1
.          BRANCH   OVRCD,LOGHD800,LOGHD900
.
.          SQUEEZE  SREPHRRN
.          MOVE     SREPHRRN,F4
.          ADD      ONE,RELBLRN
.          IF       RELBLRN=F4
.            MOVE     ZERO,RUNNOERR
.          ELSE
.            MOVE     ONE,RUNNOERR
.            CALL     EMLRUN00
.            MOVE     SREPHRRN,RELBLRN
.          ENDIF
.          CALL     UPRELB1
.          CALL     UURELB1
.
          GOTO     LOGHD999
.
LOGHD800  DISPLAY  *R,"Error Laboratory Code Does not Exist"
          GOTO     LOGHD999
.
LOGHD900  ADD      ONE,F2
          IF       F2<50
            DISPLAY  *W2
            GOTO     LOGHD100
          ENDIF
          DISPLAY  *R,"Error Locking Laboratory Code "
          GOTO     LOGHD999
.
LOGHD999  RETURN
.------------------------------------------------------------
.  Log File Update
.------------------------------------------------------------
LOGFU000  MOVE     RELGUID,KEY10
          CALL     RDRELG1
          IF       OVRCD=0
            MOVE     "Y",RELGCMP
            MOVE     RESCOUNT,RELGRPR
            MOVE     ERRCOUNT,RELGERR
            MOVE     LOGERROR,RELGMER
            MATCH    SP70,RELGMER
            IF       @EQUAL
              IF       RUNNOERR=1
                MOVE     "Run Seq. Warning",RELGMER
              ENDIF
            ENDIF
            CALL     UPRELG1
          ENDIF
LOGFU999  RETURN
.------------------------------------------------------------
. Process Unsolicited Order Result Message (ORU)
.------------------------------------------------------------------------------
PORU0000  READ      HL7FLFMT,SEQ;SEGID;     * Get Next Segment
          GOTO      PORU9000 IF OVER        * No PID Segment Found
.
          MATCH     "MSA",SEGID
          GOTO      PORU2400 IF EQUAL
.
          MATCH     "PID",SEGID             * Must have PID Record
          GOTO      PORU9000 IF NOT EQUAL
.
PORU1000  CALL      PROPID00                * Get & Process PID Record
          BRANCH    EXIT,PORU9900           * Error
.
PORU1100  READ      HL7FLFMT,SEQ;SEGID;     * Get Next Segment
          GOTO      PORU9999 IF OVER        * No More Segments
.
PORU1200  MATCH     "PID",SEGID
          GOTO      PORU1000 IF EQUAL
          MATCH     "PV1",SEGID
          GOTO      PORU2100 IF EQUAL
          MATCH     "ORC",SEGID
          GOTO      PORU2200 IF EQUAL
          MATCH     "OBR",SEGID
          GOTO      PORU2300 IF EQUAL
          MATCH     "MSA",SEGID
          GOTO      PORU2400 IF EQUAL
          GOTO      PORU9200                * Next Message
.
PORU2100  CALL      PROPV100                * Process PV1 Segment
          BRANCH    EXIT,PORU9900
          GOTO      PORU1100                * Get Next Segment
.
PORU2200  CALL      PROORC00                * Process ORC Segment
          BRANCH    EXIT,PORU9900
          GOTO      PORU1100                * Get Next Segment
.
PORU2300  CALL      PROOBR00                * Process OBR Segment
          IF        EXIT=2
            GOTO      PORU9999
          ENDIF
          CALL      CHKNOR00                * Process Abnormal Flag Rules
          CALL      PROORD00                * Update Related Orders
          GOTO      PORU1200                * Get Next Segment
.
PORU2400  CALL      PROMSA00                * Process MSA Segment
          GOTO      PORU1100                * Get Next Segment
.
PORU9000  MOVE      "PID Seg Not Found.",LOGERROR
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          GOTO      PORU9999
.
PORU9200  MOVE      ONE,EXIT
          GOTO      PORU9999
.
PORU9900           
PORU9999  RETURN
.---------------------------------------------------------------------------
. Process Orders Related to Result Flag as Received by Setting Status to ZZ.
.
. The Order Placement Program CLIWEB06 will write the Placer Order No and
. Placer Order Application into both the Filler and Placer Fields so that 
. Index 2 can be used to find all the matching orders.  These fields must
. be equal for the record to be an order.  The Application ID is only 6 char
. and the code sent from the laboratory application may be longer, however
. the first 6 characters of the application and the order number should 
. provide a unique reference.  The order number is a 7 digit auto generated
. from the message id sent to the laboratory system.  If this causes issues
. it may be that a match on the Laboratory code will resolve this as the 
. result should be from the same lab as the order was placed against.
.---------------------------------------------------------------------------
PROORD00  PACK      ORC002,ORC002,SP70
          PACK      ORC004,ORC004,SP70
          MATCH     SP70,ORC002	    * Placer Order No
          GOTO      PROORD10 IF NOT EQUAL
          MATCH     SP70,ORC004	    * Placer Order Group
          GOTO      PROORD50 IF NOT EQUAL
          GOTO      PROORD99
.
. Order No Response so Clear Order
.
PROORD10  MATCH     SP70,ORC00202
          IF        @EQUAL
            CALL      GFAC0000
            MOVE      PLACERID,ORC00202
          ENDIF
          MATCH     SP70,ORC00202
          GOTO      PROORD99 IF EQUAL
          PACK      KEY43,ORC00202,ORC00201,SP70
          CALL      RSREHA2
PROORD20  CALL      RKREHA2
          BRANCH    OVRCD,PROORD99
          MATCH     ORC00202,REHAFAP     * Placer Order Detail in both Filler and Placer Field
          GOTO      PROORD99 IF NOT EQUAL
          MATCH     ORC00201,REHAFOR     
          GOTO      PROORD99 IF NOT EQUAL
..
          MATCH     ANSO,REHARST
          GOTO      PROORD30 IF EQUAL
.
          MATCH     ANSS,REHARST
          GOTO      PROORD20 IF NOT EQUAL
.
. * Removed 4 lines below for  0894729
..        MATCH     REHAPAP,REHAFAP      * Must be the Same for Order
..        GOTO      PROORD20 IF NOT EQUAL
..        MATCH     REHAPOR,REHAFOR      * Must be the Same for Order
..        GOTO      PROORD20 IF NOT EQUAL
PROORD30  MOVE      "ZZ",REHARST
          CALL      UPREHA2
          CALL      LNKORD00
          GOTO      PROORD20          
.
. Order Group Response so Clear All Related
.
PROORD50  MATCH     SP70,ORC00402
          IF        @EQUAL
            CALL      GFAC0000
            MOVE      PLACERID,ORC00402
          ENDIF
          MATCH     SP70,ORC00402
          GOTO      PROORD99 IF EQUAL
          PACK      KEY43,ORC00402,ORC00401,SP70
          CALL      RSREHA2
PROORD60  CALL      RKREHA2
          BRANCH    OVRCD,PROORD99
          MATCH     ORC00402,REHAFAP         * Placer Order Detail in both Filler and Placer Field
          GOTO      PROORD99 IF NOT EQUAL
.
          MOVE      REHAFOR,HL7STR
          MOVE      "-",HL7DLM           * Break Order Number on "-"
          CALL      HL7BRK00
          MOVE      CARET,HL7DLM         * Return to Default Delimited
          PACK      KEY20,HL7CMP[1],SP70
          PACK      ORC00401,ORC00401,SP70
          MATCH     ORC00401,KEY20
          GOTO      PROORD99 IF NOT EQUAL
.
          MATCH     REHAPAP,REHAFAP      * Must be the Same for Order
          GOTO      PROORD60 IF NOT EQUAL
          MATCH     REHAPOR,REHAFOR      * Must be the Same for Order
          GOTO      PROORD60 IF NOT EQUAL
          MOVE      "ZZ",REHARST
          CALL      UPREHA2
          CALL      LNKORD00
          GOTO      PROORD60          
.
PROORD99  RETURN
.---------------------------------------------------------------------------
. Update Link Tables with Result Status
.---------------------------------------------------------------------------
LNKORD00  PACK      KEY29,REHARDT,REHARTM,REHARUN,SP70
          PACK      RESLNKFL,PRELEN,KEY29    
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      RESLNKA3,RESLNKFL
          TRAPCLR   IO
.
          CALL      RSRELN3
LNKORD10  CALL      RKRELN3
          BRANCH    OVRCD,LNKORD80
          MATCH     REHARDT,RELNRDT
          GOTO      LNKORD80 IF NOT EQUAL
          MATCH     REHARTM,RELNRTM
          GOTO      LNKORD80 IF NOT EQUAL
          MATCH     REHARUN,RELNRUN
          GOTO      LNKORD80 IF NOT EQUAL   
          MOVE      "ZZ",RELNRST
          CALL      UPRELN3
          GOTO      LNKORD10
.
LNKORD80  MOVE      REHAPID,KEY8
          PACK      KEY25,KEY8,REHARDT,REHARTM,REHARUN,SP70
          CALL      RDRELU1
          IF        OVRCD=0
            MOVE      "ZZ",RELURST
            CALL      UPRELU1
          ENDIF
.
LNKORD99  RETURN
.------------------------------------------------------------
. Process PID Segment
.----------------------------------------------------------------------
PROPID00  CALL      RHL7PID1                * Read in the PID segment
          MOVE      ZERO,OBRCOUNT           * Init counter for OBR segment
.
          REP       UPPLOW,PID00501
          REP       UPPLOW,PID00502
          REP       UPPLOW,PID00503
          REP       UPPLOW,PID008
.
          IF        PTCNNHII=1
            CALL      PRONHI00
          ELSE 
            CALL      PROMAS00
          ENDIF
.
          RETURN
.------------------------------------------------------------
. Process NHI Master
.------------------------------------------------------------
PRONHI00  SQUEEZE   PID00201
          PACK      PID00201,PID00201,SP70
          MATCH     SP70,PID00201
          IF        @EQUAL
            MOVE      PID00301,PID00201
            PACK      PID00201,PID00201,SP70
          ENDIF
          PACK      KEY7,PID00201,SP70
          MATCH     SP70,KEY7
          GOTO      PRONHI94 IF EQUAL
          CALL      RDNHMAS1                * Check if NHI record exists
          BRANCH    OVRCD,PRONHI10          * No -Not a NHI number
.
          MATCH     PID00501,NHMASURN
          GOTO      PRONHI05 IF EQUAL
.
          MATCH     PID00701,NHMADOB
          GOTO      PRONHI91 IF NOT EQUAL
.
          MATCH     PID008,NHMASEX
          GOTO      PRONHI92 IF NOT EQUAL
.
PRONHI05  MOVE      NHMAURNO,KEY8
          MOVE      NHMAURNO,URNO
          CALL      RDMAST1                 * Check if UR record exists
          BRANCH    OVRCD,PRONHI93          * No - does not exist
          IF        PSTAT=1
            MOVE      PPSNAME,NHMAURNO      * Merged U/R
            MOVE      PPSNAME,KEY8
            CALL      RDNHMAS2                * Check if NHI record exists
            BRANCH    OVRCD,PRONHI10          * No -Not a NHI number
            MOVE      NHMANMPI,PID00201
            GOTO      PRONHI05
          ENDIF
          CALL      RDPMPX21
.
          MOVE      ONE,PIDISAUR            * Yes - PID is a UR number
          MOVE      ZERO,ERRMESS
          MOVE      ZERO,EXIT
          GOTO      PRONHI99
.
.  Non Hospital Patient Details
.
PRONHI10  PACK      KEY8,SP1,KEY7
          CALL      RDMAST1                 * Check if UR record exists
          BRANCH    OVRCD,PRONHI15          * No - does not exist
          IF        PSTAT=1
            MOVE      PPSNAME,NHMAURNO      * Merged U/R
            MOVE      PPSNAME,KEY8
            CALL      RDNHMAS2                * Check if NHI record exists
            BRANCH    OVRCD,PRONHI15          * No -Not a NHI number
            MOVE      NHMANMPI,PID00201
            GOTO      PRONHI00
          ENDIF
          CALL      RDPMPX21
.
PRONHI15  MOVE      ONE,ERRMESS
          PACK      PID00201,PID00201,SP70
          MATCH     SP70,PID00201
          IF        @EQUAL
            ADD        ONE,UNIQPID
            PACK       PID00201,RELGUID,UNIQPID
            REP        " 0",PID00201
          ENDIF
.
          MOVE      PID00201,REPIPID
          MOVE      PID00501,REPISNM
          MOVE      PID00502,REPIGNM
          MOVE      PID00503,REPIINT
          MOVE      PID00701,REPIDOB
          MOVE      PID008,REPISEX
          MOVE      PID01101,REPIAD1
          MOVE      PID01102,REPIAD2
          MOVE      PID01103,REPIAD3
          MOVE      PID01104,REPIAD4
          MOVE      PID01105,REPIPC
          MOVE      PID013,REPIPHH
          MOVE      PID014,REPIPHB
.
          PACK      KEY16,REPIPID
          CALL      RAREPI1
          IF        OVRCD=1
            CALL      WRREPI1
....        MOVE      SP70,PID00201
....        GOTO      PRONHI15
          ENDIF
.
          MOVE      ZERO,PIDISAUR            * No - PID is not a UR number
          MOVE      ZERO,EXIT
          GOTO      PRONHI99
.
PRONHI91  MOVE      "PID : DOB MISMATCH",LOGERROR       
          CALL      ERRLOG00
          GOTO      PRONHI15
.
PRONHI92  MOVE      "PID : SEX MISMATCH",LOGERROR       
          CALL      ERRLOG00
          GOTO      PRONHI15
.
PRONHI93  MOVE      "PID : Invalid U/R",LOGERROR       
          CALL      ERRLOG00
          GOTO      PRONHI15
.
PRONHI94  MOVE      "PID : No U/R",LOGERROR       
          CALL      ERRLOG00
          GOTO      PRONHI15
.
PRONHI99  RETURN
.------------------------------------------------------------
. Process Master
.------------------------------------------------------------
PROMAS00  MOVE      ZERO,SNAMEFLG
          PACK      PID00201,PID00201,SP70
          MATCH     SP70,PID00201
          IF        @EQUAL
            MOVE       PID00301,PID00201
          ENDIF
          MOVE      PID00201,KEY8
          STRIP     KEY8
          MOVELPTR  KEY8,F2
          IF        F2=8
            PACK      KEY8,PID00201,SP70
          ENDIF
          IF        F2=7
            PACK      KEY8,SP1,PID00201,SP70
          ENDIF
          IF        F2=6
            PACK      KEY8,SP2,PID00201,SP70
          ENDIF
          IF        F2=5
            PACK      KEY8,SP3,PID00201,SP70
          ENDIF
          IF        F2=4
            PACK      KEY8,SP4,PID00201,SP70
          ENDIF
          PACK      KEY8,KEY8,SP70
.
PROMAS01  MATCH     SP70,KEY8
          GOTO      PROMAS15 IF EQUAL
          CALL      RDMAST1                 * Check if UR record exists
          BRANCH    OVRCD,PROMAS15          * No - does not exist
          IF        PSTAT=1
            MOVE      PPSNAME,KEY8
            MOVE      PPSNAME,PID00201
            GOTO      PROMAS01
          ENDIF
          CALL      RDPMPX21
.
          MOVE      PURNO,URNO
          MATCH     PID00501,PTMASNAM
          GOTO      PROMAS05 IF EQUAL
.
          MATCH     PID00701,PBDATE
          GOTO      PROMAS91 IF NOT EQUAL
.
          PACK      KEY5,ANSG,SP1,PSEX,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,PROMAS92
.
. match either HDP or indicator 1 for sex
          MATCH     PID008,THCSCOD
          IF        !@EQUAL
            MATCH     PID008,TCINDC1
            GOTO      PROMAS92 IF NOT EQUAL
          ENDIF
.
PROMAS05  MOVE      ONE,PIDISAUR            * Yes - PID is a UR number
          MOVE      ZERO,ERRMESS
          MOVE      ZERO,EXIT
          GOTO      PROMAS99
.
.         Loop through surname file to see if there is a matching patient
.         on file.
.
PROMAS15  CALL      SNAME000                     * matching patient found ?
          BRANCH    EXIT,PROMAS20                * no - log as error
.
          MOVE      PURNO,PID00201               * yes
          MOVE      PURNO,KEY8
          GOTO      PROMAS01
.
PROMAS20  MOVE      ONE,ERRMESS             
          PACK      PID00201,PID00201,SP70
          MATCH     SP70,PID00201
          IF        @EQUAL
            ADD        ONE,UNIQPID
            PACK       PID00201,RELGUID,UNIQPID
            REP        " 0",PID00201
          ENDIF
          MOVE      PID00201,REPIPID
          MOVE      PID00501,REPISNM
          MOVE      PID00502,REPIGNM
          MOVE      PID00503,REPIINT
          MOVE      PID00701,REPIDOB
          MOVE      PID008,REPISEX
          MOVE      PID01101,REPIAD1
          MOVE      PID01102,REPIAD2
          MOVE      PID01103,REPIAD3
          MOVE      PID01104,REPIAD4
          MOVE      PID01105,REPIPC
          MOVE      PID013,REPIPHH
          MOVE      PID014,REPIPHB
.
          PACK      KEY16,REPIPID
          CALL      RAREPI1
          IF        OVRCD=1
            CALL      WRREPI1
            GOTO      PROMAS80
          ENDIF
.
          PACK      KEY16,REPIPID
          CALL      RDREPI1
          MATCH     PID00501,REPISNM
          IF        !@EQUAL
            MOVE      SP70,PID00201
            GOTO      PROMAS20
          ENDIF
.
          MATCH     PID00701,REPIDOB
          IF        !@EQUAL
            MOVE      SP70,PID00201
            GOTO      PROMAS20
          ENDIF
.
          MATCH     PID008,REPISEX
          IF        !@EQUAL
            MOVE      SP70,PID00201
            GOTO      PROMAS20
          ENDIF
.
PROMAS80  MOVE      ONE,ERRMESS
          MOVE      ZERO,PIDISAUR            * No - PID is not a UR number
          MOVE      ZERO,EXIT
          GOTO      PROMAS99
.
PROMAS91  MOVE      "PID : DOB MISMATCH",LOGERROR       
          CALL      ERRLOG00
          GOTO      PROMAS20
.
PROMAS92  MOVE      "PID : SEX MISMATCH",LOGERROR       
          CALL      ERRLOG00
          GOTO      PROMAS20
.
PROMAS93  MOVE      "PID : Invalid U/R",LOGERROR
          CALL      ERRLOG00
          GOTO      PROMAS20
.
PROMAS99  RETURN
.------------------------------------------------------------
PROPV100  READ      HL7FLFMT,SEQ;ANS      
PROPV199  RETURN 
.------------------------------------------------------------
PROMSA00  READ      HL7FLFMT,SEQ;ANS
PROMSA99  RETURN
.------------------------------------------------------------
. Process ORC Segment
.----------------------------------------------------------------------
PROORC00  CALL      RHL7ORC1                * Read In the ORC segment
.
          MOVE      ZERO,EXIT
          GOTO      PROORC99
.
PROORC90  MOVE      "Error Read ORC seg",LOGERROR
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          MOVE      ONE,EXIT
.
PROORC99  RETURN
.------------------------------------------------------------
. Process OBR Segment
.----------------------------------------------------------------------
PROOBR00  CALL      RHL7OBR1                * Read in OBR segment
          BRANCH    OVRCD,PROOBR98
.
          PACK      OBR00701,OBR00701,SP70
          PACK      OBR00702,OBR00702,SP70
          CMATCH    "+",OBR00702
          IF        @EQUAL
            PACK      OBR00702,ZERO,ZERO,ZERO,ZERO
          ENDIF
.
          CMATCH    "-",OBR00702
          IF        @EQUAL
            PACK      OBR00702,ZERO,ZERO,ZERO,ZERO
          ENDIF
.
          ADD       ONE,OBRCOUNT
          STRIP     OBR001
          MOVE      OBR001,SETID
          MATCH     SP70,OBR001
          IF        @EQUAL|@EOS
            MOVE      OBRCOUNT,SETID
          ELSE 
            COMPARE   OBRCOUNT,SETID
            GOTO      PROOBR91 IF NOT EQUAL
          ENDIF
.
          MATCH     SP70,OBR00701
          GOTO      PROOBR92 IF EQUAL
.
          UNPACK    OBR00701,RESULTYR
          MATCH     YEAROPEN,RESULTYR              * check correct year open
          IF         !@EQUAL
            CALL       RESOPN00                     * Open result tables
            BRANCH     EXIT,PROOBR99
          ENDIF
.
          BEGIN
          CALL      OPNTMP00                * Prep. Results Temp files *I-41336
          MOVE      ZERO,NOUPDATE
          CALL      CHKHED00                * Check to Write/Upd header record
          MOVE      ZERO,OBXCOUNT           * Init counter for OBX segments
          MOVE      ONE,OBRNTEFL            * Flag First NTE Segment for OBR
.
PROOBR10  READ      HL7FLFMT,SEQ;SEGID;     * Get Next Segment
          GOTO      PROOBR80 IF OVER        * No more segments found
          MATCH     "NTE",SEGID
          GOTO      PROOBR20 IF EQUAL
          MOVE      ZERO,OBRNTEFL           * Flag NTE Segment as OBX
          MATCH     "OBX",SEGID
          GOTO      PROOBR30 IF EQUAL
          GOTO      PROOBR98                * Invalid Segment Found
.
PROOBR20  CALL      NTEFT000                * Process NTE Segment
          GOTO      PROOBR10 
.
PROOBR30  CALL      PROOBX00                * Process OBX Segment
..          MOVE      ZERO,OBRNTEFL           * Flag NTE Segment as OBX
          GOTO      PROOBR10
.
PROOBR80  MOVE      ZERO,EXIT
          GOTO      PROOBR99
.
PROOBR90  MOVE      "Error read OBR seg",LOGERROR
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          MOVE      TWO,EXIT
          GOTO      PROOBR99
.
PROOBR91  MOVE      "OBR set ID error",LOGERROR
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          MOVE      TWO,EXIT
          GOTO      PROOBR99
.
PROOBR92  MOVE      "OBR Invalid Date",LOGERROR
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          MOVE      TWO,EXIT
          GOTO      PROOBR99
.
PROOBR98  MOVE      ONE,EXIT
PROOBR99  RETURN
.------------------------------------------------------------
. Process OBX Segment
.----------------------------------------------------------------------
PROOBX00  MOVE      ZERO,REDATFL
.
          CALL      SHL7OBX1                * Read in start of OBX segment
          BRANCH    OVRCD,PROOBX90
.
          ADD       ONE,OBXCOUNT
          STRIP     OBX001
          MOVE      OBX001,SETID
          MATCH     SP70,OBX001
          IF        @EQUAL|@EOS
            MOVE      OBXCOUNT,SETID
          ELSE
            COMPARE   OBXCOUNT,SETID
            GOTO      PROOBX91 IF NOT EQUAL
          ENDIF
.
          MATCH     "NM",OBX002             * value type numeric
          GOTO      PROOBX10 IF EQUAL
          MATCH     "ST",OBX002             * value type string
          GOTO      PROOBX20 IF EQUAL
          MATCH     "SN",OBX002             * value type signed numeric
          GOTO      PROOBX30 IF EQUAL
          MATCH     "TX",OBX002             * value type text
          GOTO      PROOBX30 IF EQUAL
          MATCH     "FT",OBX002             * value type formatted text
          GOTO      PROOBX40 IF EQUAL
          MATCH     "ED",OBX002             * value type embedded document
          GOTO      PROOBX50 IF EQUAL
          MOVE      "ST",OBX002                                    
          GOTO      PROOBX20            
.          GOTO      PROOBX92                * Invalid valid type
.
PROOBX10  CALL      OBXNM000
          GOTO      PROOBX80
.
PROOBX20  CALL      OBXST000
          GOTO      PROOBX80
.
PROOBX30  CALL      OBXFT000
          GOTO      PROOBX80
.
PROOBX40  CALL      OBXFT000
          GOTO      PROOBX80
.
PROOBX50  CALL      OBXED000
          GOTO      PROOBX80
.
PROOBX80  BRANCH    NOUPDATE,PROOBX99
          PACK      OBX008,OBX008,SP70
          MATCH     OBX008,SP5
          IF        !@EQUAL
            MATCH     "N",OBX008
            IF        !@EQUAL
              CALL      UPDHEA00            * Update Header file
              CALL      UPDLNK00            * Update Link File
            ENDIF
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      PROOBX99
.
PROOBX90  MOVE      "Error read OBX seg",LOGERROR
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          MOVE      ONE,EXIT
          GOTO      PROOBX99
.
PROOBX91  MOVE      "OBX set id error",LOGERROR
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          MOVE      ONE,EXIT
          GOTO      PROOBX99
.
PROOBX92  MOVE      "OBX invalid val type",LOGERROR
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          MOVE      ONE,EXIT
PROOBX99  RETURN
.------------------------------------------------------------
.  Text
.----------------------------------------------------------------------
OBXTX000  MOVE      ZERO,LINENO
.
OBXTX100  READ      HL7FLFMT,SEQ;OBX005;    * Read text
          GOTO      OBXTX910 IF OVER        * No more characters to read
          MOVELPTR  OBX005,LPOBX005
          COMPARE   ZERO,LPOBX005
          GOTO      OBXTX900 IF EQUAL
          COMPARE   ZERO,LINENO
          GOTO      OBXTX110 IF NOT EQUAL
          IF        LPOBX005<127
            GOTO      OBXTX900
          ENDIF
          PACK      REDAVST,OBX005,SP70,SP70
.
OBXTX110  ADD       ONE,LINENO
          PACK      REDBTXT,OBX005,SP70,SP70
          PACK      KEY24,REHARDT,REHARTM,REHARUN,SETID,LINENO
          UNPACK    KEY24,REDBRDT,REDBRTM,REDBRUN,REDBSID,REDBLNO
          CALL      WRREDB1
          CALL      CHKDEB00                * check Detail B changes   *I-41336
.
          IF        LPOBX005=127
            GOTO      OBXTX100
          ENDIF
.
OBXTX900  IF        LINENO>1
            MOVE      ONE,REDATFL
          ELSE
            MOVE      ZERO,REDATFL
            PACK      REDAVST,OBX005,SP70,SP70
          ENDIF
.
          CALL      EHL7OBX1                * Read in end of OBX segment
          BRANCH    OVRCD,OBXTX910
.
...          CALL      CHKDET00                * Check Write/Upd result details
          CALL      WRRES000                * Write Result Detail File
          GOTO      OBXTX999
.
OBXTX910  MOVE      "Error read OBX seg",LOGERROR
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          MOVE      ONE,EXIT
OBXTX999  RETURN
.------------------------------------------------------------
.  Read string value result
.----------------------------------------------------------------------
OBXST000  CALL      RHL7OBX1
          BRANCH    OVRCD,OBXST900
          CALL      EHL7OBX1                * Read in end of OBX segment
          BRANCH    OVRCD,OBXST900
.
...        CALL      CHKDET00                * Check Write/Upd result details
          IF        NOUPDATE=0
            CALL      WRRES000                * Write Result Detail File
          ENDIF
          GOTO      OBXST999
.
OBXST900  MOVE      "Error read OBX seg",LOGERROR
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          MOVE      ONE,EXIT
OBXST999 RETURN
.------------------------------------------------------------
.  Read Numeric value result
.----------------------------------------------------------------------
OBXNM000  CALL      RHL7OBX1
          BRANCH    OVRCD,OBXNM900
          CALL      EHL7OBX1                * Read in end of OBX segment
          BRANCH    OVRCD,OBXNM900
.
...          CALL      CHKDET00                * Check Write/Upd result details
          IF        NOUPDATE=0
            CALL      WRRES000                * Write Result Detail File
          ENDIF
          GOTO      OBXNM999
.
OBXNM900  MOVE      "Error read OBX seg",LOGERROR
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          MOVE      ONE,EXIT
OBXNM999 RETURN
.------------------------------------------------------------
. Process NTE Segment following OBX segment
.----------------------------------------------------------------------
PRNTEX00  MOVE      ZERO,LINENO
          CALL      RHL7NTE1
          BRANCH    OVRCD,PRNTEX90
.
PRNTEX10  CALL      R1TEFT00                * Read in comments as formatted text
          BRANCH    OVRCD,PRNTEX90
.
          ADD       ONE,LINENO
          MOVE      REDARDT,REDCRDT
          MOVE      REDARTM,REDCRTM
          MOVE      REDARUN,REDCRUN
          MOVE      REDASID,REDCSID
          MOVE      LINENO,REDCLNO
....      MOVE      NTE003,REDCTXT                                      D-41336
          PACK      REDCTXT,NTE003,SP70,SP70                           *I-41336
.
          PACK      KEY24,REDARDT,REDARTM,REDARUN,REDCSID,REDCLNO
          CALL      WRREDC1
          CALL      CHKDEC00                * check Detail C changes   *I-41336
          BRANCH    EXIT,PRNTEX80
          GOTO      PRNTEX10
.
PRNTEX80  MOVE      ZERO,EXIT
          GOTO      PRNTEX99
.
PRNTEX90  MOVE      "Error read NTE seg",LOGERROR
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          MOVE      ONE,EXIT
PRNTEX99  RETURN
.------------------------------------------------------------
. Open Files and Initialize Variables
.------------------------------------------------------------
INIT0000  KEYIN    PATHNAME
          STRIP    PATHNAME
          MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     HL7FLFMT,PATHNAME
          TRAPCLR  IO
          BRANCH   OVRCD,INIT9500
.
          OPEN      OUTSITA1,"outsitaf"
.
          MOVE      "out",CFILEPRE
          PACK      CFNAME,CFILEPRE,FILBB1A1
          CALL      OPOTBB11
.
          OPEN      CONTROLF,"controlf"
          OPEN      AAEDE1A1,"aaede1af"
          OPEN      EMRVISA1,"emrvisaf"
          OPEN      PATDSCH1,"patdschf"
          OPEN      PATGSRN1,"patgsrnf"
          OPEN      PATGSRN6,"patgsrnf"
          OPEN      PATHSPA1,"pathspaf"
          OPEN      PATWR1A1,"patwr1af"
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMA1A2,"patma1af"
          OPEN      PATMA1A3,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
          OPEN      PMSPX2A1,"pmspx2af"
          OPEN      PATMI1A1,"patmi1af"
          OPEN      ALLREFA1,"allrefaf"
          OPEN      HL7CODA1,"hl7codaf"
          OPEN      PATCODE1,"patcodes"
          OPEN      OBSPCTA1,"obspctaf"
          OPEN      OBSPCOA1,"obspcoaf"
.          OPEN      RESLOGA1,"reslogaf"
.
          MOVE      "21",SECTOR
          READ      CONTROLF,SECTOR;*138,PTCNNHII
          IF        PTCNNHII=1
            OPEN      NHIMASA1,"nhimasaf"
            OPEN      NHIMASA2,"nhimasaf"
          ENDIF
.
          OPEN      PATVISA1,"patvisaf"
          OPEN      PATVISA2,"patvisaf"
          OPEN      PMSVX1A1,"pmsvx1af"
. SRF 16131 rebound 
          OPEN      RESCLNA1,"resclnaf"
          OPEN      RESERRA1,"reserraf"
          OPEN      RESLABA1,"reslabaf"
          OPEN      RESLURA1,"resluraf"
..          OPEN      RESLNKA1,"reslnkaf"
..          OPEN      RESLNKA3,"reslnkaf"
          OPEN      RESLOGA1,"reslogaf"
          OPEN      RESCTAA1,"resctaaf"
          OPEN      RESPIDA1,"respidaf"
.
          READ      CONTROLF,HUND19;*249,PTCNEREF
          READ      CONTROLF,ZERO;*2,CDD,CMM,CYY,CCC,EXITCHAR
          READ      CONTROLF,TWO;*4,CONAME
          MOVE      CONAME,CNAME
          CLOCK     DEPT,CCDEPT          *  set NSM department code
          CLOCK     PORT,PORT
          MOVE      PORT,PORTNO
.
          CALL      IBACLOCK
          PACK      YEAROPEN,CCC,CYY
          REP       " 0",YEAROPEN
          MOVE      YEAROPEN,RESULTYR
.
INIT9000  MOVE      ZERO,EXIT
          GOTO      INIT9999
.
INIT9500  MOVE      ONE,EXIT
.
INIT9999  RETURN
.------------------------------------------------------------
. Open result tables
.------------------------------------------------------------
RESOPN00  CLOSE     RESHEAA1
          CLOSE     RESHEAA2
          CLOSE     RESHEBA1
          CLOSE     RESHECA1
          CLOSE     RESHEDA1
          CLOSE     RESDEAA1
          CLOSE     RESDEBA1
          CLOSE     RESDECA1
.
          PACK      FILENAME,PREHEA,RESULTYR
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      RESHEAA1,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,RESOPN90
.
          PACK      FILENAME,PREHEA,RESULTYR
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      RESHEAA2,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,RESOPN90
.
          PACK      FILENAME,PREHEB,RESULTYR
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      RESHEBA1,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,RESOPN90
.
          PACK      FILENAME,PREHEC,RESULTYR
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      RESHECA1,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,RESOPN90
.
          PACK      FILENAME,PREHED,RESULTYR
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      RESHEDA1,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,RESOPN90
.
          PACK      FILENAME,PREDEA,RESULTYR
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      RESDEAA1,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,RESOPN90
.
          PACK      FILENAME,PREDEB,RESULTYR
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      RESDEBA1,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,RESOPN90
.
          PACK      FILENAME,PREDEC,RESULTYR
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      RESDECA1,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,RESOPN90
.
          MOVE      RESULTYR,YEAROPEN
          GOTO      RESOPN99
.
RESOPN90  MOVE      ONE,EXIT
          MOVE      FILENAME,LOGERROR
          ENDSET    LOGERROR
          APPEND    " not found",LOGERROR
          RESET     LOGERROR
.
RESOPN99  RETURN
.----------------------------------------------------------------------
. Check for existing header record
.----------------------------------------------------------------------
CHKHED00  IF        PIDISAUR<>ONE
            PACK      SVPATPID,REPIPID,SP70
          ELSE
            PACK      SVPATPID,URNO,SP70
          ENDIF
. Removed Following Line 15 Feb 2000 to Avoid Duplicatation of Request Messages
...       BRANCH    ORMFLAG,CHKHED50      * Order Message so No Existing Result
.
          PACK      KEY43,OBR00302,OBR00301,Z70
          CALL      RSREHA2
CHKHED10  CALL      RPREHA2
          BRANCH    OVRCD,CHKHED50
          MATCH     OBR00302,REHAFAP
          GOTO      CHKHED50 IF NOT EQUAL
          MATCH     OBR00301,REHAFOR
          GOTO      CHKHED50 IF NOT EQUAL
.
          MATCH     OBR00701,REHARDT
          GOTO      CHKHED10 IF NOT EQUAL
          MATCH     SVPATPID,REHAPID
          GOTO      CHKHED10 IF NOT EQUAL
.
CHKHED20  PACK      KEY17,REHARDT,REHARTM,REHARUN
          CALL      RLREHA1                 * Read Lock
          BRANCH    OVRCD,CHKHED10,CHKHED30
.
          MATCH     "1",REHAFUR
          IF        @EQUAL
            CALL      CHKSTA00             * check status to overwrite or not
          ENDIF
          IF        NOUPDATE=1
            MOVE      "Result Status Error",LOGERROR
            ADD       ONE,ERRCOUNT
            CALL      ERRLOG00
            GOTO      CHKHED90              * Unlock and exit
          ENDIF
.
          MOVE      REHARUN,UNIQUEID
          CALL      GETVIS00        * Determine Visit
          CALL      HEAVAR00                * Set up header values
          MOVE      PVIBILL,REHAVIS
          CALL      UPREHA1                 * Update current header record
          CALL      UUREHA1                 * Unlock
          ADD       ONE,RESCOUNT            * count results 
          CALL      LNKUP000                * Update Link Table Field
          CALL      DELDET00                * Delete all Details        
          BRANCH    ERRMESS,CHKHED60
          GOTO      CHKHED60
.
CHKHED30  DISPLAY   *W10
          GOTO      CHKHED20
.
CHKHED50  CALL      WRHEAD00                * Write New Header Record
CHKHED60  CALL      WRLNKS00                * Write results link record
.
          MATCH     SP70,ERRORMSG
          IF        !@EQUAL
            PACK      KEY17,REHARDT,REHARTM,REHARUN
            UNPACK    KEY17,REERRDT,REERRTM,REERRUN
            CALL      RDREER1
            IF        OVRCD=1
              MOVE      ERRORMSG,REERMSG
              MOVE      SP70,REERSPA
              CALL      WRREER1
            ENDIF
          ENDIF
.
CHKHED90  CALL      UUREHA1                 * Unlock file readl in WRHEAD00
CHKHED99  RETURN
.------------------------------------------------------------
.  Check if this record can be updated
.----------------------------------------------------------------------
CHKSTA00  MATCH     ANSC,OBR025
          GOTO      CHKSTA99 IF EQUAL    * correction can overwrite any status
.
          MOVE      SP70,OLDSTATS
          MOVE      SP70,NEWSTATS
.
          MOVE      REHARST,OLDSTATS
          MOVE      OBR025,NEWSTATS
.
          MATCH     ANSF,OLDSTATS
          GOTO      CHKSTA90 IF EQUAL    * final can only be o/w by C
.
          MATCH     ANSC,OLDSTATS
          GOTO      CHKSTA90 IF EQUAL    * correction can only be o/w by C
.
          MATCH     ANSX,OLDSTATS
          IF        @EQUAL
            REP       "C1F1",NEWSTATS
            MATCH     "1",NEWSTATS
            GOTO      CHKSTA99 IF EQUAL
          ENDIF
.
          MATCH     ANSP,OLDSTATS
          IF        @EQUAL
            REP       "C1F1X1P1",NEWSTATS
          ENDIF
.
          MATCH     ANSR,OLDSTATS
          IF        @EQUAL
            REP       "C1F1X1P1R1",NEWSTATS
          ENDIF
.
          MATCH     ANSI,OLDSTATS
          IF        @EQUAL
            REP       "C1F1X1P1R1I1",NEWSTATS
          ENDIF
.
          MATCH     ANSA,OLDSTATS
          IF        @EQUAL
            REP       "C1F1X1P1R1I1",NEWSTATS
          ENDIF
.
          MATCH     ANSO,OLDSTATS
          IF        @EQUAL
            REP       "C1F1X1P1R1I1",NEWSTATS
          ENDIF
.
          MATCH     ANSS,OLDSTATS
          IF        @EQUAL
            REP       "C1F1X1P1R1I1",NEWSTATS
          ENDIF
.
          MATCH     "1",NEWSTATS
          GOTO      CHKSTA99 IF EQUAL
.
CHKSTA90  MOVE      ONE,NOUPDATE
.
CHKSTA99  RETURN
+
.------------------------------------------------------------
.  Update normal indicator in link table
.----------------------------------------------------------------------
LNKUP000  PACK      KEY29,REHARDT,REHARTM,REHARUN,SP70
          MOVE      KEY29,SAVKEY29                                     *I-41336
.
          PACK      RESLNKFL,PRELEN,KEY29             * I CAR 38290
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      RESLNKA3,RESLNKFL
          TRAPCLR   IO
.
          COMPARE   ONE,OVRCD
          GOTO      LNKUP800 IF EQUAL                 * end I CAR 38290
.
          CALL      RSRELN3
LNKUP100  CALL      RKRELN3
          BRANCH    OVRCD,LNKUP800
          MATCH     REHARDT,RELNRDT
          GOTO      LNKUP800 IF NOT EQUAL
          MATCH     REHARTM,RELNRTM
          GOTO      LNKUP800 IF NOT EQUAL
          MATCH     REHARUN,RELNRUN
          GOTO      LNKUP800 IF NOT EQUAL
.
          MOVE      ZERO,RELNNOR
.....     MOVE      ZERO,RELNMSN            * Marked as seen, 0=no.     D-41336
          MOVE      REHAFUR,RELNFUR
          MOVE      REHAPID,RELNPID
          MOVE      REHAUCS,RELNUCS         * coding scheme
          MOVE      REHAUSC,RELNUSC         * code
          MOVE      REHADSS,RELNDSS
          MOVE      REHANOR,RELNNOR
          MOVE      REHARST,RELNRST
          MOVE      REHALAB,RELNLAB
          CALL      UPRELN3
          GOTO      LNKUP100
.
LNKUP800  MOVE      REHAPID,KEY8
          PACK      KEY25,KEY8,REHARDT,REHARTM,REHARUN,SP70
          CALL      RDRELU1
          IF        OVRCD=0
            MOVE      ZERO,RELUNOR
            MOVE      ZERO,RELUMSN            * Marked as seen, 0=no.
            MOVE      REHAFUR,RELUFUR
            MOVE      REHAPID,RELUPID
            MOVE      REHAUCS,RELUUCS         * coding scheme
            MOVE      REHAUSC,RELUUSC         * code
            MOVE      REHADSS,RELUDSS
            MOVE      REHANOR,RELUNOR
            MOVE      REHARST,RELURST
            MOVE      REHALAB,RELULAB
            CALL      UPRELU1
          ENDIF
.
LNKUP999  RETURN
.------------------------------------------------------------
. Write header record
.----------------------------------------------------------------------
WRHEAD00  PACK      OBR00701,OBR00701,SP70
          PACK      OBR00702,OBR00702,SP70
          CMATCH    "+",OBR00702
          IF        @EQUAL
            PACK      OBR00702,ZERO,ZERO,ZERO,ZERO
          ENDIF
          CMATCH    "-",OBR00702
          IF        @EQUAL
            PACK      OBR00702,ZERO,ZERO,ZERO,ZERO
          ENDIF
          UNPACK    OBR00702,TEMPHRS,TEMPMIN
          PACK      TEMPHRS,TEMPHRS,SP70
          PACK      TEMPMIN,TEMPMIN,SP70
          PACK      REQTIME,TEMPHRS,COLON,TEMPMIN
          PACK      KEY17,OBR00701,REQTIME,Z70
          MOVE      ZERO,UNIQUEID
          CALL      RSREHA1
          CALL      RPREHA1
          BRANCH    OVRCD,WRHEAD10
          MATCH     REHARDT,OBR00701
          GOTO      WRHEAD10 IF NOT EQUAL
          MATCH     REHARTM,REQTIME
          GOTO      WRHEAD10 IF NOT EQUAL
          MOVE      REHARUN,UNIQUEID
.
WRHEAD10  MOVE      OBR00701,REHARDT
          MOVE      REQTIME,REHARTM
          MOVE      PIDISAUR,REHAFUR
          MOVE      SVPATPID,REHAPID
.
          CALL      GETVIS00        * Determine Visit
          MOVE      PVIBILL,REHAVIS
.
          CALL      HEAVAR00                * Set up header values
.
          PACK      UNICODE,REHAUSC,SP70
          PACK      UNISCHE,REHAUCS,SP70
          PACK      UNIDESC,OBR00402,SP70
          MOVE      "OBR04",UNISEGF
          MOVE      REHALAB,UNILABC
          CALL      UPRTSC00                * update result service codes
.
WRHEAD70  ADD       ONE,UNIQUEID
          MOVE      UNIQUEID,REHARUN
          PACK      KEY17,REHARDT,REHARTM,REHARUN
          CALL      RAREHA1
          BRANCH    OVRCD,WRHEAD80
          GOTO      WRHEAD70
.
WRHEAD80  CALL      WRREHA1
          CALL      CHKRCI00                * Check for relevant clinical info
          CALL      RLREHA1
          ADD       ONE,RESCOUNT          * count results 
.
WRHEAD99  RETURN
.------------------------------------------------------------
. Set up header variable values
.------------------------------------------------------------
HEAVAR00  MOVE      MSH00301,REHASID
          UNPACK    MSH007,REHAMDT,REHAMTM
          UNPACK    REHAMTM,TEMPHRS,TEMPMIN
          PACK      TEMPHRS,TEMPHRS,SP70
          PACK      TEMPMIN,TEMPMIN,SP70
          PACK      REHAMTM,TEMPHRS,COLON,TEMPMIN
          MOVE      MSH010,REHAMID
          MOVE      OBR00202,REHAPAP
          MOVE      OBR00201,REHAPOR
          MOVE      OBR00302,REHAFAP
          MOVE      OBR00301,REHAFOR
          MOVE      OBR00401,REHAUSC
          MOVE      OBR00403,REHAUCS
          MOVE      ONE,REHANOR             * 1=yes
          MOVE      SP8,REHACDT
          MOVE      SP5,REHACTM
          MOVE      OBR010,REHACID
          MOVE      OBR01401,REHASDT
          CMATCH    "+",OBR01402
          IF        @EQUAL
            PACK      OBR01402,ZERO,ZERO,ZERO,ZERO
          ENDIF
          CMATCH    "-",OBR01402
          IF        @EQUAL
            PACK      OBR01402,ZERO,ZERO,ZERO,ZERO
          ENDIF
          UNPACK    OBR01402,TEMPHRS,TEMPMIN
          PACK      TEMPHRS,TEMPHRS,SP70
          PACK      TEMPMIN,TEMPMIN,SP70
          PACK      REHASTM,TEMPHRS,COLON,TEMPMIN
          MOVE      OBR01601,REHAOID
          MOVE      OBR01602,REHAOSN
          MOVE      OBR01603,REHAOGN
          PACK      REHALOC,OBR020002,SP70                             *I-43973
          MOVE      OBR02201,REHARRD
          CMATCH    "+",OBR02202
          IF        @EQUAL
            PACK      OBR02202,ZERO,ZERO,ZERO,ZERO
          ENDIF
          CMATCH    "-",OBR02202
          IF        @EQUAL
            PACK      OBR02202,ZERO,ZERO,ZERO,ZERO
          ENDIF
          UNPACK    OBR02202,TEMPHRS,TEMPMIN
          PACK      TEMPHRS,TEMPHRS,SP70
          PACK      TEMPMIN,TEMPMIN,SP70
          PACK      REHARRT,TEMPHRS,COLON,TEMPMIN
          MOVE      UNIQUEID,REHARUN
          MOVE      OBR024,REHADSS
          MOVE      OBR00601,REHARED
          CMATCH    "+",OBR00602
          IF        @EQUAL
            PACK      OBR00602,ZERO,ZERO,ZERO,ZERO
          ENDIF
          CMATCH    "-",OBR00602
          IF        @EQUAL
            PACK      OBR00602,ZERO,ZERO,ZERO,ZERO
          ENDIF
          UNPACK    OBR00602,TEMPHRS,TEMPMIN
          PACK      TEMPHRS,TEMPHRS,SP70
          PACK      TEMPMIN,TEMPMIN,SP70
          PACK      REHARET,TEMPHRS,COLON,TEMPMIN
          MOVE      OBR025,REHARST
          MOVE      OBR032,REHAIBY
          MOVE      SP70,REHAADC
          MOVE      RELBLCD,REHALAB
.
HEAVAR99  RETURN
.------------------------------------------------------------
.  Update normal indicator in result header table
.----------------------------------------------------------------------
UPDHEA00  PACK      KEY17,REHARDT,REHARTM,REHARUN
          CALL      RDREHA1
          BRANCH    OVRCD,UPDHEA99
          MOVE      ZERO,REHANOR
          MATCH     "null",OBX008
          IF        @EQUAL
            MOVE      TWO,REHANOR
          ENDIF
          CALL      UPREHA1
.
UPDHEA99  RETURN
.------------------------------------------------------------
.  Delete all Details        
.------------------------------------------------------------
DELDET00  PACK      RESULTKY,REHARDT,REHARTM,REHARUN,SP70
          PACK      KEY21,RESULTKY,SP70
          CALL      RSREDA1
DELDET10  CALL      RKREDA1
          BRANCH    OVRCD,DELDET20
          PACK      KEY21,REDARDT,REDARTM,REDARUN,REDASID,SP70
          MATCH     KEY21,RESULTKY
          GOTO      DELDET20 IF NOT EQUAL
          CALL      WRTPDA1                 * write to temp file       *I-41336
          CALL      DEREDA1
          PACK      KEY21,RESULTKY,SP70
          CALL      RSREDA1
          GOTO      DELDET10
.
DELDET20  PACK      KEY24,RESULTKY,SP70
          CALL      RSREDB1
DELDET30  CALL      RKREDB1
          BRANCH    OVRCD,DELDET40
          PACK      KEY24,REDBRDT,REDBRTM,REDBRUN,REDBSID,REDBLNO,SP70
          MATCH     KEY24,RESULTKY
          GOTO      DELDET40 IF NOT EQUAL
          CALL      WRTPDB1                 * write to temp file       *I-41336
          CALL      DEREDB1
          PACK      KEY24,RESULTKY,SP70
          CALL      RSREDB1
          GOTO      DELDET30
.
DELDET40  PACK      KEY24,RESULTKY,SP70
          CALL      RSREDC1
DELDET50  CALL      RKREDC1
          BRANCH    OVRCD,DELDET60
          PACK      KEY24,REDCRDT,REDCRTM,REDCRUN,REDCSID,REDCLNO,SP70
          MATCH     KEY24,RESULTKY
          GOTO      DELDET60 IF NOT EQUAL
          CALL      WRTPDC1                 * write to temp file       *I-41336
          CALL      DEREDC1
          PACK      KEY24,RESULTKY,SP70
          CALL      RSREDC1
          GOTO      DELDET50
.
DELDET60  PACK      KEY20,RESULTKY,SP70
          CALL      RSREHB1
DELDET70  CALL      RKREHB1
          BRANCH    OVRCD,DELDET99
          PACK      KEY20,REHBRDT,REHBRTM,REHBRUN,REHBLIN,SP70
          MATCH     KEY20,RESULTKY
          GOTO      DELDET99 IF NOT EQUAL
          CALL      WRTPHB1                 * write to temp file       *I-41336
          CALL      DEREHB1
          PACK      KEY20,RESULTKY,SP70
          CALL      RSREHB1
          GOTO      DELDET70
.
DELDET99  RETURN
.------------------------------------------------------------
.  Update normal indicator in link table
.----------------------------------------------------------------------
UPDLNK00  PACK      KEY29,REHARDT,REHARTM,REHARUN,SP70
.
          PACK      RESLNKFL,PRELEN,KEY29             * I CAR 38290
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      RESLNKA3,RESLNKFL
          TRAPCLR   IO
.
          COMPARE   ONE,OVRCD
          GOTO      UPDLNK80 IF EQUAL                 * end I CAR 38290
.
          CALL      RSRELN3
UPDLNK10  CALL      RKRELN3
          BRANCH    OVRCD,UPDLNK80
          MATCH     REHARDT,RELNRDT
          GOTO      UPDLNK80 IF NOT EQUAL
          MATCH     REHARTM,RELNRTM
          GOTO      UPDLNK80 IF NOT EQUAL
          MATCH     REHARUN,RELNRUN
          GOTO      UPDLNK80 IF NOT EQUAL   
.
          MOVE      ZERO,RELNNOR 
          MATCH     "null",OBX008
          IF        @EQUAL
            MOVE      TWO,RELNNOR
          ENDIF
.
          CALL      UPRELN3
          GOTO      UPDLNK10
.
UPDLNK80  MOVE      REHAPID,KEY8
          PACK      KEY25,KEY8,REHARDT,REHARTM,REHARUN,SP70
          CALL      RDRELU1
          IF        OVRCD=0
            MOVE      ZERO,RELUNOR 
            MATCH     "null",OBX008
            IF        @EQUAL
              MOVE      TWO,RELUNOR
            ENDIF
            CALL      UPRELU1
          ENDIF
.
UPDLNK99  RETURN
.------------------------------------------------------------
. Update the result template by service code table
.----------------------------------------------------------------------
UPRTSC00  PACK      KEY32,UNILABC,UNISEGF,UNISCHE,UNICODE,SP70
          UNPACK    KEY32,RECTLAB,RECTSEG,RECTFLD,RECTSYS,RECTCOD
          CALL      RARECT1
          IF        OVRCD=1
            MOVE      UNIDESC,RECTDES
            MOVE      SP70,RECTSPA
            PACK      KEY32,RECTLAB,RECTSEG,RECTFLD,RECTSYS,RECTCOD,SP70
            CALL      WRRECT1
          ELSE
            MATCH     RECTCOD,RECTDES
            IF        @EQUAL
              MOVE      UNIDESC,RECTDES
              CALL      UPRECT1
            ENDIF
          ENDIF
.
UPRTSC99  RETURN
.------------------------------------------------------------
.  Check for relevant clinical info
.----------------------------------------------------------------------
CHKRCI00  MATCH     OBR013,SP70
          IF        @EQUAL|@EOS
            MOVE      ZERO,REHAFCI          * clear indicator - no info
          ELSE
            MOVE      REHARDT,REHDRDT
            MOVE      REHARTM,REHDRTM
            MOVE      REHARUN,REHDRUN
            MOVE      OBR013,REHDRCI
.
            PACK      KEY17,REHDRDT,REHDRTM,REHDRUN
            CALL      WRREHD1
            MOVE      ONE,REHAFCI           * set indicator - yes info
          ENDIF
.
CHKRCI99  RETURN
.------------------------------------------------------------
. Get Visit Details
.------------------------------------------------------------
GETVIS00  SQUEEZE   PID00401
          MOVE      PID00401,KEY8
          RJUSTIFY  KEY8
          CALL      RDVISA1            * Check for Visit No Passed in Message
          BRANCH    OVRCD,GETVIS10     * Not Valid
          MATCH     URNO,PVIURNO   * Check U.R
          GOTO      GETVIS99 IF EQUAL  * Matches U/R Assume the Correct Visit
.
GETVIS10  CALL      GETINP00           * Is there an INP visit?    
          BRANCH    FOUNDINP,GETVIS99 
.
.
. loop through visit file checking for same date result match on EMR or OUT 
.
          PACK      KEY24,URNO,REHARDT,Z70
          CALL      RDSVISA2
GETVIS20  CALL      RDPVISA2
          BRANCH    OVRCD,GETVIS60
          MATCH     PVIURNO,URNO
          GOTO      GETVIS60 IF NOT EQUAL
.
          BRANCH    PVITYPE,GETVIS50,GETVIS30,GETVIS20,GETVIS20,GETVIS20:
                            GETVIS30,GETVIS20,GETVIS20,GETVIS20
          GOTO      GETVIS20
.
GETVIS30  MATCH     PVIDATE,REHARDT
          GOTO      GETVIS99 IF EQUAL
          GOTO      GETVIS20
.
GETVIS50  DAYSEP    PVIDATE,REHARDT,F3
          IF        F3>1
            GOTO      GETVIS20   
          ENDIF
          GOTO      GETVIS99
.
GETVIS60  MATCH     "1",PTCNEREF
          IF        @EQUAL
            GOTO      GETVIS90
          ELSE
            CALL      GETALL00
            BRANCH    FOUNDALL,GETVIS99
          ENDIF
.
GETVIS90  MOVE      ZEROVISN,PVIBILL
.
GETVIS99  RETURN
.------------------------------------------------------------
. Loop back looking for an inpatient visit and check date range
.------------------------------------------------------------
GETINP00  MOVE      ZERO,FOUNDINP          * set flag to no inp visit found 
          PACK      KEY24,URNO,REHARDT,Z70
          CALL      RDSVISA2
GETINP10  CALL      RDPVISA2
          BRANCH    OVRCD,GETINP99
          MATCH     PVIURNO,URNO
          GOTO      GETINP99 IF NOT EQUAL
.
          COMPARE   PVITYPE,THREE         * Is visit an inpatient
          GOTO      GETINP10 IF NOT EQUAL * no - keep looking
.
          PACK      KEY8,PVIBILL
          CALL      RDMISS1
          BRANCH    OVRCD,GETINP10
.
          COMPARE   ASTAT,TWO             * Is current Patient Inpatient?
          GOTO      GETINP90 IF EQUAL     * yes - use the visit found 
.
          COMPARE   ASTAT,FOUR            * Is current Patient On-Leave?
          GOTO      GETINP90 IF EQUAL     * yes - use the visit found
.
          COMPARE   ASTAT,THREE           * Is current patient discharge?
          GOTO      GETINP10 IF NOT EQUAL * no - look for other visits
.
          PACK      KEY8,AADMNO 
          CALL      RDDSCH1
.
          MATCH     ADATE,REHARDT
          GOTO      GETINP99 IF LESS
.
          MATCH     DDATE,REHARDT
          GOTO      GETINP99 IF NOT LESS
.
          GOTO      GETINP90          * Use the inp visit found
          
.          IF        REHARDT>=ADATE
.            IF        REHARDT<=DDATE
.              GOTO      GETINP90          * Use the inp visit found
.            ENDIF
.          ENDIF
.          GOTO      GETINP99
.
GETINP90  MOVE      ONE,FOUNDINP
.
GETINP99  RETURN
.------------------------------------------------------------
. Loop back looking for an allied health referral and check date range
.------------------------------------------------------------
GETALL00  MOVE      ZERO,FOUNDALL          * set flag to no ah visit found
          PACK      KEY24,URNO,REHARDT,Z70
          CALL      RDSVISA2
GETALL10  CALL      RDPVISA2
          BRANCH    OVRCD,GETALL99
          MATCH     PVIURNO,URNO
          GOTO      GETALL99 IF NOT EQUAL
.
          MATCH     "10",PTVITYPE         * Is visit an AH
          GOTO      GETALL10 IF NOT EQUAL * no - keep looking
.
          PACK      KEY8,PVIBILL,SP70
          CALL      RDALREF1
          BRANCH    OVRCD,GETALL10
.
          MATCH     "0",ALRESTAT          * Is waiting AH Referral
          GOTO      GETALL90 IF EQUAL     * yes - use the visit found
.
          MATCH     "1",ALRESTAT          * Is active AH Referral
          GOTO      GETALL90 IF EQUAL     * yes - use the visit found
.
          MATCH     "2",ALRESTAT          * Is closed AH Referral
          GOTO      GETALL10 IF NOT EQUAL * no - look for other visits
.
          MATCH     ALRERDAT,REHARDT
          GOTO      GETINP99 IF LESS
.
          MATCH     SP70,ALREDCLO
          IF        !@EQUAL
            MATCH     ALREDCLO,REHARDT
            GOTO      GETALL10 IF NOT LESS
          ENDIF
.
          GOTO      GETALL90          * Use the AH visit found
.
GETALL90  MOVE      ONE,FOUNDALL
.
GETALL99  RETURN
+
.------------------------------------------------------------
.  Create new files
.------------------------------------------------------------------------------
MAKRES00  MOVE      ZERO,TASKID
          CLEAR     CMNDLINE
          PACK      FILENAME,PRELEN,RESULTYR
          APPEND    "isbuild ",CMNDLINE
          APPEND    FILENAME,CMNDLINE
          APPEND    " 110 U1-2,3-12,13-20,21-25,26-29 ",CMNDLINE
          APPEND    "U1-2,3-12,30-30,13-20,21-25,26-29 ",CMNDLINE
          APPEND    "U13-20,21-25,26-29,1-2,3-12 ",CMNDLINE
          APPEND    "U49-64,1-2,3-12,13-20,21-25,26-29",CMNDLINE
          RESET     CMNDLINE
          EXECUTE   CMNDLINE,TASKID
          MATCH     "0",TASKID
.
          MOVE      ZERO,TASKID
          CLEAR     CMNDLINE
          PACK      FILENAME,PREHEA,RESULTYR
          APPEND    "isbuild ",CMNDLINE
          APPEND    FILENAME,CMNDLINE
          APPEND    " 418 U1-8,9-13,14-17 ",CMNDLINE
          APPEND    "U112-117,118-137,1-8,9-13,14-17 ",CMNDLINE
          APPEND    "U19-34,150-161,138-149,1-8,9-13,14-17",CMNDLINE
          RESET     CMNDLINE
          EXECUTE   CMNDLINE,TASKID
          MATCH     "0",TASKID
          GOTO      MAKRES90 IF NOT EQUAL
.
          CLEAR     CMNDLINE
          PACK      FILENAME,PREHEB,RESULTYR
          APPEND    "isbuild ",CMNDLINE
          APPEND    FILENAME,CMNDLINE
          APPEND    " 158 U1-8,9-13,14-17,18-20",CMNDLINE
          RESET     CMNDLINE
          EXECUTE   CMNDLINE,TASKID
          MATCH     "0",TASKID
          GOTO      MAKRES90 IF NOT EQUAL
.
          CLEAR     CMNDLINE
          PACK      FILENAME,PREHEC,RESULTYR
          APPEND    "isbuild ",CMNDLINE
          APPEND    FILENAME,CMNDLINE
          APPEND    " 157 U1-8,9-13,14-17,18-19",CMNDLINE
          RESET     CMNDLINE
          EXECUTE   CMNDLINE,TASKID
          MATCH     "0",TASKID
          GOTO      MAKRES90 IF NOT EQUAL
.
          CLEAR     CMNDLINE
          PACK      FILENAME,PREDEA,RESULTYR
          APPEND    "isbuild ",CMNDLINE
          APPEND    FILENAME,CMNDLINE
          APPEND    " 365 U1-8,9-13,14-17,18-21 ",CMNDLINE
          APPEND    " U22-37,52-63,40-51,1-8,9-13,14-17,18-21",CMNDLINE
          RESET     CMNDLINE
          EXECUTE   CMNDLINE,TASKID
          MATCH     "0",TASKID
          GOTO      MAKRES90 IF NOT EQUAL
.
          CLEAR     CMNDLINE
          PACK      FILENAME,PREDEB,RESULTYR
          APPEND    "isbuild ",CMNDLINE
          APPEND    FILENAME,CMNDLINE
          APPEND    " 162 U1-8,9-13,14-17,18-21,22-24",CMNDLINE
          RESET     CMNDLINE
          EXECUTE   CMNDLINE,TASKID
          MATCH     "0",TASKID
          GOTO      MAKRES90 IF NOT EQUAL
.
          CLEAR     CMNDLINE
          PACK      FILENAME,PREDEC,RESULTYR
          APPEND    "isbuild ",CMNDLINE
          APPEND    FILENAME,CMNDLINE
          APPEND    " 162 U1-8,9-13,14-17,18-21,22-24",CMNDLINE
          RESET     CMNDLINE
          EXECUTE   CMNDLINE,TASKID
          MATCH     "0",TASKID
          GOTO      MAKRES90 IF NOT EQUAL
.
          CLEAR     CMNDLINE
          PACK      FILENAME,PREHED,RESULTYR
          APPEND    "isbuild ",CMNDLINE
          APPEND    FILENAME,CMNDLINE
          APPEND    " 398 U1-8,9-13,14-17",CMNDLINE
          RESET     CMNDLINE
          EXECUTE   CMNDLINE,TASKID
          MATCH     "0",TASKID
          GOTO      MAKRES90 IF NOT EQUAL
          GOTO      MAKRES99
.
MAKRES90  DISPLAY   *P5:6,"Unix Error - ",TASKID
          MOVE      ONE,EXIT
.
MAKRES99  RETURN
.----------------------------------------------------------------------
.  Check Write/Update result details
.----------------------------------------------------------------------
CHKDET00  BRANCH    UPDATEFL,CHKDET50
          GOTO      CHKDET90
.
CHKDET50  PACK      KEY21,REHARDT,REHARTM,REHARUN,SP70
          CALL      RSREDA1
CHKDET60  CALL      RKREDA1
          BRANCH    OVRCD,CHKDET90
          MATCH     REHARDT,REDARDT
          GOTO      CHKDET90 IF NOT EQUAL
          MATCH     REHARTM,REDARTM
          GOTO      CHKDET90 IF NOT EQUAL
          MATCH     REHARUN,REDARUN
          GOTO      CHKDET90 IF NOT EQUAL
.
          PACK      KEY21,REHARDT,REHARTM,REHARUN,SETID 
CHKDET70  CALL      RLREDA1
          BRANCH    OVRCD,CHKDET90,CHKDET80
          CALL      DETVAR00
          CALL      UPREDA1
          CALL      UUREDA1
          GOTO      CHKDET99
.
CHKDET80  DISPLAY   *W10
          GOTO      CHKDET70
.
CHKDET90  CALL      WRRES000                * Write Result Detail File
.
CHKDET99  RETURN
.----------------------------------------------------------------------
.   Write the result detail table
.----------------------------------------------------------------------
WRRES000  MOVE      REHARDT,REDARDT
          MOVE      REHARTM,REDARTM
          MOVE      REHARUN,REDARUN
          MOVE      REHAPID,REDAPID
          MOVE      SETID,REDASID
.
          CALL      DETVAR00                * set up details values  
.
          PACK      KEY21,REHARDT,REHARTM,REHARUN,REDASID
          CALL      WRREDA1                 * Write the results
          CALL      CHKDEA00                * check Detail A changes   *I-41336
.
          PACK      UNICODE,REDAOTY,SP70
          PACK      UNISCHE,REDAOCS,SP70
          PACK      UNIDESC,OBX00302,SP70
          MOVE      "OBX03",UNISEGF
          MOVE      REHALAB,UNILABC
          CALL      UPRTSC00                * update result service codes
.
WRRES999  RETURN
.------------------------------------------------------------
.   Set up Result Detail Variables          
.----------------------------------------------------------------------
DETVAR00  MOVE      OBX002,REDAVTY
          PACK      REDAVTY,OBX002,SP70
          PACK      REDAOTY,OBX00301,SP70
          PACK      REDAOCS,OBX00303,SP70
          PACK      REDAOSC,OBX00401,SP70
          PACK      REDAOSD,OBX00402,SP70
.
          MATCH     "#"#"",OBX005
          IF        @EQUAL
            MOVE      SP70,OBX005
          ENDIF
.
          PACK      REDAVST,OBX005,SP70,SP70      * value string       *C-41336
.
          MATCH     SP70,FSOBX005
          IF        !@EQUAL
            PACK      REDAVST,FSOBX005,SP70,SP70
          ENDIF
.
          MOVE      ZERO,REDAVNM          * value numeric
          SQUEEZE   OBX005
          TYPE      OBX005
          IF        @EQUAL
            MOVE      OBX005,REDAVNM          * value numeric
          ENDIF
.
          PACK      REDAUNI,OBX006,SP70
          PACK      REDARFR,OBX007,SP70
          PACK      REDAABF,OBX008,SP70
          MOVE      OBX009,REDAPRB
          PACK      REDANAT,OBX010,SP70
          PACK      REDASTA,OBX011,SP70
          PACK      REDAODT,OBX01401,SP70
          PACK      REDAOTM,OBX01402,SP70
          PACK      REDAPER,OBX015,SP70
          PACK      REDAROB,OBX016,SP70
DETVAR99  RETURN
.----------------------------------------------------------------------
.  Write results link record
.----------------------------------------------------------------------
WRLNKS00  MOVE      SP70,CORRURNO          * U/R for Attached Document
          MOVE      SP70,CORRADMN          * Admission No for Attached Document
          BRANCH    ERRMESS,WRLNKS91
.
          MATCH     "1",REHAFUR
          IF        @EQUAL
            MOVE      REHAPID,CORRURNO       * Save for Attached Document
          ENDIF
          MOVE      "01",LINKTYPE
          PACK      LINKKEYS,REHAPID,SP70
          CALL      NEWLNK00
.
          MOVE      "05",LINKTYPE
          PACK      LINKKEYS,PMPXRHC1,SP70
          CALL      NEWLNK00
.
          MATCH     ZEROVISN,PVIBILL
          GOTO      WRLNKS90 IF EQUAL
.
          MOVE      PVIBILL,CORRADMN   * Save for Attached Document
          MOVE      PVIBILL,KEY8
          CALL      RDVISA1            * Check for Visit No Passed in Message
          BRANCH    OVRCD,WRLNKS92     * Not Valid
.
          MOVE      "02",LINKTYPE
          PACK      LINKKEYS,PVIBILL,SP70
          CALL      NEWLNK00
.
          BRANCH    PVITYPE,WRLNKS10,WRLNKS20,WRLNKS30
.
          MATCH     "10",PTVITYPE
          GOTO      WRLNKS40 IF EQUAL
.
          GOTO      WRLNKS92
.
WRLNKS10  PACK      KEY8,PVIBILL
          CALL      RDDETA1
          BRANCH    OVRCD,WRLNKS96
.
          PACK      KEY8,PVIBILL,SP70
          CALL      RDEMVIS1
          BRANCH    OVRCD,WRLNKS96
.
          MOVE      "03",LINKTYPE
          PACK      LINKKEYS,EMVIDOCT,SP70
          CALL      UPDADC00
          CALL      NEWLNK00
.
          MOVE      "03",LINKTYPE
          PACK      LINKKEYS,REHAOID,SP70
          CALL      NEWLNK00
.
          MOVE      "07",LINKTYPE
          PACK      LINKKEYS,EMVIDOCT,SP70
          CALL      NEWLNK00
.
          MOVE      "07",LINKTYPE
          PACK      LINKKEYS,REHAOID,SP70
          CALL      NEWLNK00
.
          MOVE      "05",LINKTYPE
          PACK      LINKKEYS,EMVIREFG,SP70
          CALL      NEWLNK00
.
          MOVE      "03",LINKTYPE
          PACK      LINKKEYS,EMVIREFD,SP70
          CALL      NEWLNK00
.
          MOVE      "08",LINKTYPE
          PACK      LINKKEYS,EMVIREFD,SP70
          CALL      NEWLNK00
.
          MOVE      "09",LINKTYPE
          PACK      LINKKEYS,EMVISITE,SP70
          CALL      NEWLNK00
.
          GOTO      WRLNKS99
.
WRLNKS20  MOVE      PVISITE,KEY6
          CALL      RDSITA1
          BRANCH    OVRCD,WRLNKS95
.
          MOVE      OSTFILE,CFILEPRE
          PACK      CFNAME,CFILEPRE,FILBB1A1
          CALL      OPOTBB11
.
          PACK      KEY8,PVIBILL
          CALL      RDBOKB1
          BRANCH    OVRCD,WRLNKS95
.
          MOVE      "03",LINKTYPE
          PACK      LINKKEYS,OBADOCT,SP70
          CALL      UPDADC00
          CALL      NEWLNK00
.
          MOVE      "03",LINKTYPE
          PACK      LINKKEYS,REHAOID,SP70
          CALL      NEWLNK00
.
          MOVE      "03",LINKTYPE
          PACK      LINKKEYS,OTBBADCS,SP70
          CALL      NEWLNK00
.
          MOVE      "07",LINKTYPE
          PACK      LINKKEYS,OBADOCT,SP70
          CALL      NEWLNK00
.
          MOVE      "07",LINKTYPE
          PACK      LINKKEYS,OTBBADCS,SP70
          CALL      NEWLNK00
.
          MOVE      "07",LINKTYPE
          PACK      LINKKEYS,REHAOID,SP70
          CALL      NEWLNK00
.
          MOVE      "05",LINKTYPE
          PACK      LINKKEYS,OTBBRFGP,SP70
          CALL      NEWLNK00
.
          MOVE      "06",LINKTYPE
          PACK      LINKKEYS,PVIDOCT,SP70   * Clinic / doctor
          CALL      NEWLNK00
.
          GOTO      WRLNKS99
.
WRLNKS30  PACK      KEY8,PVIBILL
          CALL      RDMISS1
          BRANCH    OVRCD,WRLNKS93          * No record
.
          MOVE      "03",LINKTYPE
          PACK      LINKKEYS,REHAOID,SP70
          CALL      NEWLNK00
.
          MOVE      "04",LINKTYPE           * Ward link
          PACK      LINKKEYS,AWARD,SP70
          CALL      NEWLNK00
.
          MOVE      "03",LINKTYPE           * Attending doctor link
          PACK      LINKKEYS,ADOCTA,SP70
          CALL      UPDADC00
          CALL      NEWLNK00
.
          MOVE      "07",LINKTYPE           * Attending doctor link
          PACK      LINKKEYS,ADOCTA,SP70
          CALL      NEWLNK00
.
          MOVE      "03",LINKTYPE           * Treating doctor link
          PACK      LINKKEYS,ADOCTT,SP70
          CALL      NEWLNK00
.
          MOVE      "07",LINKTYPE           * Attending doctor link
          PACK      LINKKEYS,ADOCTT,SP70
          CALL      NEWLNK00
.
          MOVE      "03",LINKTYPE           * Referring Doctor link
          PACK      LINKKEYS,ADOCTR,SP70
          CALL      NEWLNK00
.
          MOVE      "08",LINKTYPE           * Referring Doctor link
          PACK      LINKKEYS,ADOCTR,SP70
          CALL      NEWLNK00
          GOTO      WRLNKS99
.
WRLNKS40  PACK      KEY8,PVIBILL,SP70
          CALL      RDALREF1
          BRANCH    OVRCD,WRLNKS97
.
          MOVE      "02",LINKTYPE
          PACK      LINKKEYS,ALREVISN,SP70
          CALL      NEWLNK00
.
          MOVE      "03",LINKTYPE
          PACK      LINKKEYS,ALREHCP,SP70
          CALL      NEWLNK00
.
          MOVE      "07",LINKTYPE
          PACK      LINKKEYS,ALREHCP,SP70
          CALL      NEWLNK00
.
          MOVE      "05",LINKTYPE
          PACK      LINKKEYS,ALRERHCP,SP70
          CALL      NEWLNK00
.
          MOVE      "08",LINKTYPE
          PACK      LINKKEYS,ALRERHCP,SP70
          CALL      NEWLNK00
.
          MOVE      "03",LINKTYPE
          PACK      LINKKEYS,REHAOID,SP70
          CALL      NEWLNK00
.
          MOVE      "07",LINKTYPE
          PACK      LINKKEYS,REHAOID,SP70
          CALL      NEWLNK00
.
          GOTO      WRLNKS99
.
WRLNKS90  MOVE      "03",LINKTYPE           * I CAR 36752
          PACK      LINKKEYS,REHAOID,SP70
          CALL      NEWLNK00
.
          MOVE      "07",LINKTYPE           * I CAR 49566
          PACK      LINKKEYS,REHAOID,SP70
          CALL      NEWLNK00
          GOTO      WRLNKS99                * end I CAR 36752
.
WRLNKS91  MOVE      "99",LINKTYPE           
          PACK      LINKKEYS,RELGUID,SP70
          CALL      NEWLNK00
          CLEAR     LOGERROR
          APPEND    "Patient UR Error - ",LOGERROR
          APPEND    PURNO,LOGERROR
          RESET     LOGERROR

          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          GOTO      WRLNKS99
.
WRLNKS92  MOVE      "99",LINKTYPE           
          PACK      LINKKEYS,RELGUID,SP70
          CALL      NEWLNK00
          CLEAR     LOGERROR
          APPEND    "Visit File-",LOGERROR
          APPEND    KEY8,LOGERROR
          RESET     LOGERROR
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          GOTO      WRLNKS99
.
WRLNKS93  MOVE      "99",LINKTYPE           
          PACK      LINKKEYS,RELGUID,SP70
          CALL      NEWLNK00
          CLEAR     LOGERROR
          APPEND    "Admiss File-",LOGERROR
          APPEND    KEY8,LOGERROR
          RESET     LOGERROR
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          GOTO      WRLNKS99
.
WRLNKS95  MOVE      "99",LINKTYPE           
          PACK      LINKKEYS,RELGUID,SP70
          CALL      NEWLNK00
          APPEND    "Error Link OP Visit - ",LOGERROR
          APPEND    PURNO,LOGERROR
          RESET     LOGERROR
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          GOTO      WRLNKS99
.
WRLNKS96  MOVE      "99",LINKTYPE           
          PACK      LINKKEYS,RELGUID,SP70
          CALL      NEWLNK00
          APPEND    "Error Link AE Visit - ",LOGERROR
          APPEND    PURNO,LOGERROR
          RESET     LOGERROR
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          GOTO      WRLNKS99
.
WRLNKS97  MOVE      "99",LINKTYPE           
          PACK      LINKKEYS,RELGUID,SP70
          CALL      NEWLNK00
          APPEND    "Error Link Allied Health Visit - ",LOGERROR
          APPEND    PURNO,LOGERROR
          RESET     LOGERROR
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          GOTO      WRLNKS99
.
WRLNKS99  RETURN
.------------------------------------------------------------
. Write New link Record
.----------------------------------------------------------------------
NEWLNK00  PACK      KEY29,LINKTYPE,LINKKEYS,REHARDT,REHARTM,REHARUN,SP70
          MATCH     SP70,LINKKEYS     * No point linking to a blank
          GOTO      NEWLNK99 IF EQUAL
          UNPACK    KEY29,RELNLTY,RELNLKY,RELNRDT,RELNRTM,RELNRUN
.
          PACK      RESLNKFL,PRELEN,RELNRDT           * I CAR 38290
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      RESLNKA1,RESLNKFL
          TRAPCLR   IO
.
          COMPARE   ONE,OVRCD
          GOTO      NEWLNK99 IF EQUAL                 * end I CAR 38290
.
          CALL      RDRELN1
          IF        OVRCD=1
            MOVE      ZERO,RELNMSN            * Marked as seen, 0=no.
            MOVE      SP70,RELNSDT
            MOVE      SP70,RELNSTM
            MOVE      SP70,RELNSPC
            MOVE      REHAFUR,RELNFUR
            MOVE      REHAPID,RELNPID
            MOVE      REHAUCS,RELNUCS         * coding scheme
            MOVE      REHAUSC,RELNUSC         * code
            MOVE      REHADSS,RELNDSS
            MOVE      REHANOR,RELNNOR
            MOVE      REHARST,RELNRST
            MOVE      REHALAB,RELNLAB
            MOVE      ZERO,RELNRTY            * 0=HL7
            CALL      WRRELN1
          ENDIF
.
          MATCH     "01",LINKTYPE
          GOTO      NEWLNK99 IF NOT EQUAL
.
          MOVE      LINKKEYS,KEY8
          PACK      KEY25,KEY8,REHARDT,REHARTM,REHARUN,SP70
          UNPACK    KEY25,RELUURN,RELURDT,RELURTM,RELURUN
          CALL      RDRELU1
          COMPARE   ONE,OVRCD
          GOTO      NEWLNK99 IF NOT EQUAL
          MOVE      ZERO,RELUMSN            * Marked as seen, 0=no.
          MOVE      SP70,RELUSDT
          MOVE      SP70,RELUSTM
          MOVE      SP70,RELUSPC
          MOVE      REHAFUR,RELUFUR
          MOVE      REHAPID,RELUPID
          MOVE      REHAUCS,RELUUCS         * coding scheme
          MOVE      REHAUSC,RELUUSC         * code
          MOVE      REHADSS,RELUDSS
          MOVE      REHANOR,RELUNOR
          MOVE      REHARST,RELURST
          MOVE      REHALAB,RELULAB
          MOVE      ZERO,RELURTY            * 0=HL7
          CALL      WRRELU1
          MOVE      RELUURN,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,NEWLNK99
          CALL      RDPMPX21
          MATCH     "1",PTMXSIN2
          GOTO      NEWLNK99 IF EQUAL
.
          MOVE      RELUURN,KEY8
          CALL      RLPTMAS1
          BRANCH    OVRCD,NEWLNK99,NEWLNK99
          CALL      RDPMPX21
          MOVE      "1",PTMXSIN2
          CALL      UPMAST1
          CALL      UUPTMAS1
.
NEWLNK99  RETURN
.------------------------------------------------------------
. Update Attending Doctor in Header Record
.------------------------------------------------------------
UPDADC00  PACK      KEY17,REHARDT,REHARTM,REHARUN
          CALL      RDREHA1
          BRANCH    OVRCD,UPDADC99
          MOVE      LINKKEYS,REHAADC
          CALL      UPREHA1
UPDADC99  RETURN
.----------------------------------------------------------------------
. Routine  : HL7BRK00
.
. Function : Break up HL7 String into components
.
. Example if the following varibles is passed the routine will return
. an HL7CMP of each of the components
.
. HL7STR    : 123456^SMITH^BRUCE^A^^^NZHIS
. HL7DLM    : ^
. HL7CMP[1] : 123456
. HL7CMP[2] : SMITH
. HL7CMP[3] : BRUCE
. HL7CMP[4] : A
. HL7CMP[5] :
. HL7CMP[6] :
. HL7CMP[7] : NZHIS
.
. Inputs    : HL7STR        - String to be Processed
.             HL7DLM        - Delimiter Character (Normally ^)(Optional)
. Output    : HL7CMP[1-20]  - HL7CMP of Component Strings
.
.----------------------------------------------------------------------
HL7BRK00  PACK      HL7DLM,HL7DLM,SP70
          MATCH     SP70,HL7DLM
          IF        @EQUAL
            MOVE      "^",HL7DLM
          ENDIF
.
          PACK      HL7CMP[1],SP70,SP70
          PACK      HL7CMP[2],SP70,SP70
          PACK      HL7CMP[3],SP70,SP70
          PACK      HL7CMP[4],SP70,SP70
          PACK      HL7CMP[5],SP70,SP70
          PACK      HL7CMP[6],SP70,SP70
          PACK      HL7CMP[7],SP70,SP70
          PACK      HL7CMP[8],SP70,SP70
          PACK      HL7CMP[9],SP70,SP70
          PACK      HL7CMP[10],SP70,SP70
          PACK      HL7CMP[11],SP70,SP70
          PACK      HL7CMP[12],SP70,SP70
          PACK      HL7CMP[13],SP70,SP70
          PACK      HL7CMP[14],SP70,SP70
          PACK      HL7CMP[15],SP70,SP70
          PACK      HL7CMP[16],SP70,SP70
          PACK      HL7CMP[17],SP70,SP70
          PACK      HL7CMP[18],SP70,SP70
          PACK      HL7CMP[19],SP70,SP70
          PACK      HL7CMP[20],SP70,SP70
          CLEAR     HL7CMP[1]
          CLEAR     HL7CMP[2]
          CLEAR     HL7CMP[3]
          CLEAR     HL7CMP[4]
          CLEAR     HL7CMP[5]
          CLEAR     HL7CMP[6]
          CLEAR     HL7CMP[7]
          CLEAR     HL7CMP[8]
          CLEAR     HL7CMP[9]
          CLEAR     HL7CMP[10]
          CLEAR     HL7CMP[11]
          CLEAR     HL7CMP[12]
          CLEAR     HL7CMP[13]
          CLEAR     HL7CMP[14]
          CLEAR     HL7CMP[15]
          CLEAR     HL7CMP[16]
          CLEAR     HL7CMP[17]
          CLEAR     HL7CMP[18]
          CLEAR     HL7CMP[19]
          CLEAR     HL7CMP[20]
.
          MOVE      ONE,F2
          PACK      DIM127,HL7STR,SP70
.
HL7BRK10  SCAN      HL7DLM,DIM127
          GOTO      HL7BRK90 IF NOT EQUAL
          MOVEFPTR  DIM127,LENGTH
          SUB       ONE,LENGTH
          IF        LENGTH>0
            RESET     DIM127
            SFORMAT   VAR,LENGTH
            MOVE      DIM127,VAR
            MOVE      VAR,HL7CMP[F2]
             IF        F2=1
               SCAN      " ",HL7CMP[1]
               IF        @EQUAL
                 RESET       HL7CMP[1]
                 SQUEEZE     HL7CMP[1]       
               ENDIF
             ENDIF
            SFORMAT   VAR,127
            ADD       ONE,LENGTH
            RESET     DIM127,LENGTH
            SUB       ONE,LENGTH
          ENDIF
          UNPACK    DIM127,KEY1,DIM127
          ADD       ONE,F2
          IF        F2<21
            GOTO      HL7BRK10
          ENDIF
.
HL7BRK90  IF        F2<21
            STRIP     DIM127
            MOVE      DIM127,HL7CMP[F2]
          ENDIF
.
          MOVE      ONE,F2
          WHILE     F2<21
            PACK      HL7CMP[F2],HL7CMP[F2],SP70,SP70
            ADD       ONE,F2
          DO
.
          RETURN
.------------------------------------------------------------
.  Formatted Text
.------------------------------------------------------------
OBXFT000  MOVE      ZERO,LINENO
          MOVE      ZERO,OBXESCFL
          MOVE      ZERO,OUTSTLEN
          MOVE      SP70,FSOBX005   * save first 127 of obx005 for redavst
          PACK      OUT127,SP70,SP70
          CLEAR     OUT127
.
OBXFT100  READ      HL7FLFMT,SEQ;OBX005;    * Read text
          GOTO      OBXFT910 IF OVER        * No more characters to read
          MOVELPTR  OBX005,LPOBX005
          COMPARE   ZERO,LPOBX005
          GOTO      OBXFT900 IF EQUAL
          COMPARE   ZERO,LINENO
          IF        @EQUAL
            PACK      FSOBX005,OBX005,SP70,SP70
          ENDIF
.
OBXFT110  PACK      LINE127,OBX005,SP70
          IF        NOUPDATE=0
            CALL      HL7FT000
          ENDIF
          IF        LPOBX005=127
            GOTO      OBXFT100
          ENDIF
.
OBXFT900  MOVE      ONE,REDATFL
          IF        NOUPDATE=0
            CALL      WRTDEB00
          ENDIF
.
          CALL      EHL7OBX1                  * Read in end of OBX segment
          BRANCH    OVRCD,OBXFT910
.
...          CALL      CHKDET00               * Check Write/Upd result details
          IF        NOUPDATE=0
            CALL      WRRES000                * Write Result Detail File
          ENDIF
.
          GOTO      OBXFT999
.
OBXFT910  MOVE      "Error read OBX seg",LOGERROR
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          MOVE      ONE,EXIT
OBXFT999  PACK      FSOBX005,SP70,SP70
          RETURN
.------------------------------------------------------------
. Format HL7 to HTML
.------------------------------------------------------------
HL7FT000  PACK      DIM127,LINE127,SP70
          RESET     DIM127
          BRANCH    OBXESCFL,HL7FT210    * Processing Escape Flag
.
HL7FT100  MOVE      DIM127,ANS
          MATCH     "\",ANS              * Check for Start of Esc String
          GOTO      HL7FT200 IF EQUAL
          MATCH     "~",ANS              * Check for Line Break from Tilda
          GOTO      HL7FT500 IF EQUAL
.
          APPEND    ANS,OUT127           * Build Output String
          ADD       ONE,OUTSTLEN
          COMPARE   "127",OUTSTLEN
          CALL      WRTDEB00 IF EQUAL
          MOVE      ZERO,OBXESCFL        * Escape Flag
          BUMP      DIM127
          GOTO      HL7FT999 IF EOS
          GOTO      HL7FT100
.
HL7FT200  PACK      OBXFTESC,SP70
          CLEAR     OBXFTESC
          MOVE      ONE,OBXESCFL         * Escape Flag
          BUMP      DIM127
          GOTO      HL7FT999 IF EOS
.
HL7FT210  MOVE      DIM127,ANS
          MOVE      ZERO,ENDLINE
          MATCH     "\",ANS              * Check for End of Esc String
          GOTO      HL7FT300 IF EQUAL
          APPEND    ANS,OBXFTESC         * Build Escape String
          BUMP      DIM127
          GOTO      HL7FT999 IF EOS
          GOTO      HL7FT210
.
HL7FT300  MOVE      ZERO,ENDLINE
          MOVE      ZERO,OBXESCFL         * Escape Flag
          BUMP      DIM127
          IF        @EOS
            MOVE      ONE,ENDLINE
          ENDIF
          RESET     OBXFTESC
          MATCH     ".br",OBXFTESC
          GOTO      HL7FT400 IF EQUAL
.
          MATCH     ".sp",OBXFTESC
          GOTO      HL7FT400 IF EQUAL
.
          MATCH     "H",OBXFTESC
          IF        @EQUAL
            IF        OUTSTLEN>124
              CALL      WRTDEB00
            ENDIF
            APPEND    "<b>",OUT127
            ADD       THREE,OUTSTLEN
            COMPARE   "127",OUTSTLEN
            CALL      WRTDEB00 IF EQUAL
            BRANCH    ENDLINE,HL7FT999           * added by SA 22/02/2002
            GOTO      HL7FT100 
          ENDIF
.
          MATCH     "N",OBXFTESC
          IF        @EQUAL
            IF        OUTSTLEN>123
              CALL      WRTDEB00
            ENDIF
            APPEND    "</b>",OUT127
            ADD       FOUR,OUTSTLEN
            COMPARE   "127",OUTSTLEN
            CALL      WRTDEB00 IF EQUAL
            BRANCH    ENDLINE,HL7FT999           * added by SA 22/02/2002
            GOTO      HL7FT100 
          ENDIF
.
          MATCH     "F",OBXFTESC
          IF        @EQUAL
            APPEND    "|",OUT127
            ADD       ONE,OUTSTLEN
            COMPARE   "127",OUTSTLEN
            CALL      WRTDEB00 IF EQUAL
            BRANCH    ENDLINE,HL7FT999           * added by SA 22/02/2002
            GOTO      HL7FT100 
          ENDIF
.
          MATCH     "S",OBXFTESC
          IF        @EQUAL
            APPEND    "^",OUT127
            ADD       ONE,OUTSTLEN
            COMPARE   "127",OUTSTLEN
            CALL      WRTDEB00 IF EQUAL
            BRANCH    ENDLINE,HL7FT999           * added by SA 22/02/2002
            GOTO      HL7FT100 
          ENDIF
.
          MATCH     "T",OBXFTESC
          IF        @EQUAL
            IF        OUTSTLEN>123
              CALL      WRTDEB00
            ENDIF
            APPEND    "&AMP",OUT127
            ADD       FOUR,OUTSTLEN
            COMPARE   "127",OUTSTLEN
            CALL      WRTDEB00 IF EQUAL
            BRANCH    ENDLINE,HL7FT999           * added by SA 22/02/2002
            GOTO      HL7FT100 
          ENDIF
.
          MATCH     "R",OBXFTESC
          IF        @EQUAL
            APPEND    "~",OUT127
            ADD       ONE,OUTSTLEN
            COMPARE   "127",OUTSTLEN
            CALL      WRTDEB00 IF EQUAL
            BRANCH    ENDLINE,HL7FT999           * added by SA 22/02/2002
            GOTO      HL7FT100 
          ENDIF
.
HL7FT400  CALL      WRTDEB00
          BRANCH    ENDLINE,HL7FT999
          GOTO      HL7FT100 
.
HL7FT500  CALL      WRTDEB00
          BUMP      DIM127
          IF        @EOS
            GOTO      HL7FT999 
          ENDIF
          GOTO      HL7FT100 
.
HL7FT999  RETURN
.----------------------------------------------------------------------
. Write to Text Results File
.----------------------------------------------------------------------
WRTDEB00  
          ADD       ONE,LINENO
          RESET     OUT127
          PACK      REDBTXT,OUT127,SP70,SP70
          PACK      KEY24,REHARDT,REHARTM,REHARUN,SETID,LINENO
          UNPACK    KEY24,REDBRDT,REDBRTM,REDBRUN,REDBSID,REDBLNO
          CALL      WRREDB1
          CALL      CHKDEB00                * check Detail B changes   *I-41336
.
          PACK      OUT127,SP70,SP70
          CLEAR     OUT127
          MOVE      ZERO,OUTSTLEN
.
          RETURN
.------------------------------------------------------------
. Clear MSH fields
.------------------------------------------------------------
CLRMSH00  MOVE      SP70,MSH001  
          MOVE      SP70,MSH002  
          MOVE      SP70,MSH003  
          MOVE      SP70,MSH00301
          MOVE      SP70,MSH00302
          MOVE      SP70,MSH00303
          MOVE      SP70,MSH004  
          MOVE      SP70,MSH005  
          MOVE      SP70,MSH006  
          MOVE      SP70,MSH007  
          MOVE      SP70,MSH008  
          MOVE      SP70,MSH009  
          MOVE      SP70,MSH00901
          MOVE      SP70,MSH00902
          MOVE      SP70,MSH010  
          MOVE      SP70,MSH011  
          MOVE      SP70,MSH012  
          MOVE      SP70,MSH013  
          MOVE      SP70,MSH014  
          MOVE      SP70,MSH015  
          MOVE      SP70,MSH016  
          MOVE      SP70,MSH017  
          MOVE      SP70,MSH018  
          MOVE      SP70,MSH019  
.
CLRMSH99  RETURN
.------------------------------------------------------------
. Clear PID fields
.------------------------------------------------------------
CLRPID00  MOVE      SP70,PID001  
          MOVE      SP70,PID002  
          MOVE      SP70,PID00201
          MOVE      SP70,PID003  
          MOVE      SP70,PID00301
          MOVE      SP70,PID004  
          MOVE      SP70,PID00401
          MOVE      SP70,PID005  
          MOVE      SP70,PID00501
          MOVE      SP70,PID00502
          MOVE      SP70,PID00503
          MOVE      SP70,PID006  
          MOVE      SP70,PID007  
          MOVE      SP70,PID00701
          MOVE      SP70,PID008  
          MOVE      SP70,PID009  
          MOVE      SP70,PID010  
          MOVE      SP70,PID011  
          MOVE      SP70,PID01101
          MOVE      SP70,PID01102
          MOVE      SP70,PID01103
          MOVE      SP70,PID01104
          MOVE      SP70,PID01105
          MOVE      SP70,PID012  
          MOVE      SP70,PID013  
          MOVE      SP70,PID014  
          MOVE      SP70,PID015  
          MOVE      SP70,PID016  
          MOVE      SP70,PID017  
          MOVE      SP70,PID018  
          MOVE      SP70,PID019  
          MOVE      SP70,PID020  
          MOVE      SP70,PID021  
          MOVE      SP70,PID022  
          MOVE      SP70,PID023  
          MOVE      SP70,PID024  
          MOVE      SP70,PID025  
          MOVE      SP70,PID026  
          MOVE      SP70,PID027  
          MOVE      SP70,PID028  
          MOVE      SP70,PID029  
          MOVE      SP70,PID030  
.
CLRPID99  RETURN
.------------------------------------------------------------
. Clear PV1 fields
.------------------------------------------------------------
CLRPV100  MOVE      SP70,PV1001 
          MOVE      SP70,PV1002 
          MOVE      SP70,PV1003 
          MOVE      SP70,PV1004 
          MOVE      SP70,PV1005 
          MOVE      SP70,PV1006 
          MOVE      SP70,PV1007 
          MOVE      SP70,PV1008 
          MOVE      SP70,PV1009 
          MOVE      SP70,PV1010 
          MOVE      SP70,PV1011 
          MOVE      SP70,PV1012 
          MOVE      SP70,PV1013 
          MOVE      SP70,PV1014 
          MOVE      SP70,PV1015 
          MOVE      SP70,PV1016 
          MOVE      SP70,PV1017 
          MOVE      SP70,PV1018 
          MOVE      SP70,PV1019 
          MOVE      SP70,PV1020 
          MOVE      SP70,PV1021 
          MOVE      SP70,PV1022 
          MOVE      SP70,PV1023 
          MOVE      SP70,PV1024 
          MOVE      SP70,PV1025 
          MOVE      SP70,PV1026 
          MOVE      SP70,PV1027 
          MOVE      SP70,PV1028 
          MOVE      SP70,PV1029 
          MOVE      SP70,PV1030 
          MOVE      SP70,PV1031 
          MOVE      SP70,PV1032 
          MOVE      SP70,PV1033 
          MOVE      SP70,PV1034 
          MOVE      SP70,PV1035 
          MOVE      SP70,PV1036 
          MOVE      SP70,PV1037 
          MOVE      SP70,PV1038 
          MOVE      SP70,PV1039 
          MOVE      SP70,PV1040 
          MOVE      SP70,PV1041 
          MOVE      SP70,PV1042 
          MOVE      SP70,PV1043 
          MOVE      SP70,PV1044 
          MOVE      SP70,PV1045 
          MOVE      SP70,PV1046 
          MOVE      SP70,PV1047 
          MOVE      SP70,PV1048 
          MOVE      SP70,PV1049 
          MOVE      SP70,PV1050 
          MOVE      SP70,PV1051 
          MOVE      SP70,PV1052 
.
CLRPV199  RETURN
.------------------------------------------------------------
. Clear RF1 fields
.------------------------------------------------------------
CLRRF100  MOVE      SP70,RF1001   
          MOVE      SP70,RF100101 
          MOVE      SP70,RF100102 
          MOVE      SP70,RF100103 
          MOVE      SP70,RF1002   
          MOVE      SP70,RF100201 
          MOVE      SP70,RF100202 
          MOVE      SP70,RF100203 
          MOVE      SP70,RF1003   
          MOVE      SP70,RF100301 
          MOVE      SP70,RF100302 
          MOVE      SP70,RF100303 
          MOVE      SP70,RF1004   
          MOVE      SP70,RF100401 
          MOVE      SP70,RF100402 
          MOVE      SP70,RF100403 
          MOVE      SP70,RF1005   
          MOVE      SP70,RF1006   
          MOVE      SP70,RF100601 
          MOVE      SP70,RF100602 
          MOVE      SP70,RF1007   
          MOVE      SP70,RF1008   
          MOVE      SP70,RF1009   
          MOVE      SP70,RF1010   
          MOVE      SP70,RF101001 
          MOVE      SP70,RF101002 
          MOVE      SP70,RF101003 
          MOVE      SP70,RF1011   
          RETURN
.------------------------------------------------------------
. Clear PRD fields
.------------------------------------------------------------
CLRPRD00  MOVE      SP70,PRD001   
          MOVE      SP70,PRD00101 
          MOVE      SP70,PRD00102 
          MOVE      SP70,PRD00103 
          MOVE      SP70,PRD002   
          MOVE      SP70,PRD00201 
          MOVE      SP70,PRD00202 
          MOVE      SP70,PRD00203 
          MOVE      SP70,PRD00204 
          MOVE      SP70,PRD00205 
          MOVE      SP70,PRD003   
          MOVE      SP70,PRD00301 
          MOVE      SP70,PRD00302 
          MOVE      SP70,PRD00303 
          MOVE      SP70,PRD00304 
          MOVE      SP70,PRD00305 
          MOVE      SP70,PRD00306 
          MOVE      SP70,PRD004   
          MOVE      SP70,PRD005   
          MOVE      SP70,PRD006   
          MOVE      SP70,PRD007   
          MOVE      SP70,PRD00701 
          MOVE      SP70,PRD00702 
          MOVE      SP70,PRD00703 
          MOVE      SP70,PRD008   
          MOVE      SP70,PRD009   
          RETURN
.------------------------------------------------------------
. Clear OBR fields
.------------------------------------------------------------
CLROBR00  MOVE      SP70,OBR001   
          MOVE      SP70,OBR002   
          MOVE      SP70,OBR00201 
          MOVE      SP70,OBR00202 
          MOVE      SP70,OBR003   
          MOVE      SP70,OBR00301 
          MOVE      SP70,OBR00302 
          MOVE      SP70,OBR004   
          MOVE      SP70,OBR00401 
          MOVE      SP70,OBR00402 
          MOVE      SP70,OBR00403 
          MOVE      SP70,OBR005   
          MOVE      SP70,OBR006   
          MOVE      SP70,OBR00601 
          MOVE      SP70,OBR00602 
          MOVE      SP70,OBR007   
          MOVE      SP70,OBR00701 
          MOVE      SP70,OBR00702 
          MOVE      SP70,OBR008   
          MOVE      SP70,OBR009   
          MOVE      SP70,OBR010   
          MOVE      SP70,OBR011   
          MOVE      SP70,OBR012   
          MOVE      SP70,OBR013   
          MOVE      SP70,OBR014   
          MOVE      SP70,OBR01401 
          MOVE      SP70,OBR01402 
          MOVE      SP70,OBR015   
          MOVE      SP70,OBR016   
          MOVE      SP70,OBR01601 
          MOVE      SP70,OBR01602 
          MOVE      SP70,OBR01603 
          MOVE      SP70,OBR01604 
          MOVE      SP70,OBR01605 
          MOVE      SP70,OBR017   
          MOVE      SP70,OBR018   
          MOVE      SP70,OBR019   
          MOVE      SP70,OBR020   
          MOVE      SP70,OBR02001                                      *I-43973
          MOVE      SP70,OBR02002                                      *I-43973
          MOVE      SP70,OBR021   
          MOVE      SP70,OBR022   
          MOVE      SP70,OBR02201 
          MOVE      SP70,OBR02202 
          MOVE      SP70,OBR023   
          MOVE      SP70,OBR024   
          MOVE      SP70,OBR025   
          MOVE      SP70,OBR026   
          MOVE      SP70,OBR027   
          MOVE      SP70,OBR028   
          MOVE      SP70,OBR029   
          MOVE      SP70,OBR030   
          MOVE      SP70,OBR031   
          MOVE      SP70,OBR032   
          MOVE      SP70,OBR033   
          MOVE      SP70,OBR034   
          MOVE      SP70,OBR035   
          MOVE      SP70,OBR036   
          MOVE      SP70,OBR037   
          MOVE      SP70,OBR038   
          MOVE      SP70,OBR039   
          MOVE      SP70,OBR040   
          MOVE      SP70,OBR041   
          MOVE      SP70,OBR042   
          MOVE      SP70,OBR043   
.
CLROBR99  RETURN
.------------------------------------------------------------
. Clear OBX fields
.------------------------------------------------------------
CLROBX00  MOVE      SP70,OBX001   
          MOVE      SP70,OBX002   
          MOVE      SP70,OBX003   
          MOVE      SP70,OBX00301 
          MOVE      SP70,OBX00302 
          MOVE      SP70,OBX00303 
          MOVE      SP70,OBX004   
          MOVE      SP70,OBX00401 
          MOVE      SP70,OBX00402 
          MOVE      SP70,OBX005   
          MOVE      SP70,FSOBX005
          MOVE      SP70,OBX006   
          MOVE      SP70,OBX007   
          MOVE      SP70,OBX008   
          MOVE      SP70,OBX009   
          MOVE      SP70,OBX010   
          MOVE      SP70,OBX011   
          MOVE      SP70,OBX012   
          MOVE      SP70,OBX013   
          MOVE      SP70,OBX014   
          MOVE      SP70,OBX01401 
          MOVE      SP70,OBX01402 
          MOVE      SP70,OBX015   
          MOVE      SP70,OBX016   
          MOVE      SP70,OBX017   
.
CLROBX99  RETURN
.------------------------------------------------------------
. Dummy Labels for WEB includes
.------------------------------------------------------------
CLRPAR00  RETURN
SETPAR00  RETURN
PROFLD00  RETURN
.------------------------------------------------------------
.------------------------------------------------------------
. Process NTE Segments with Formatted Text
.----------------------------------------------------------------------
NTEFT000  CALL      RHL7NTE1
          BRANCH    OVRCD,NTEFT910
.
          MOVE      ZERO,LINENO
          MOVE      ZERO,OBXESCFL
          MOVE      ZERO,OUTSTLEN
          PACK      OUT127,SP70,SP70
          CLEAR     OUT127
.
NTEFT100  READ      HL7FLFMT,SEQ;OBX005;    * Read text
          GOTO      NTEFT910 IF OVER        * No more characters to read
          MOVELPTR  OBX005,LPOBX005
          COMPARE   ZERO,LPOBX005
          GOTO      NTEFT900 IF EQUAL
.
NTEFT110  PACK      LINE127,OBX005,SP70
          IF        NOUPDATE=0
            CALL      FMTNO000
          ENDIF
          IF        LPOBX005=127
            GOTO      NTEFT100
          ENDIF
.
NTEFT900  MOVE      ONE,REDATFL
          IF        NOUPDATE=0
            CALL      WRTNTE00 
          ENDIF
          READ      HL7FLFMT,SEQ;ANS         * Read text
          GOTO      NTEFT999
.
NTEFT910  MOVE      "Error read NTE seg",LOGERROR
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          MOVE      ONE,EXIT
.
NTEFT999  RETURN
.------------------------------------------------------------
. Format NTE to HTML
.------------------------------------------------------------
FMTNO000  PACK      DIM127,LINE127,SP70
          RESET     DIM127
          BRANCH    OBXESCFL,FMTNO210    * Processing Escape Flag
.
FMTNO100  MOVE      DIM127,ANS
          MATCH     "\",ANS              * Check for Start of Esc String
          GOTO      FMTNO200 IF EQUAL
.
          APPEND    ANS,OUT127           * Build Output String
          ADD       ONE,OUTSTLEN
          COMPARE   "127",OUTSTLEN
          CALL      WRTNTE00 IF EQUAL
.
          MOVE      ZERO,OBXESCFL        * Escape Flag
          BUMP      DIM127
          GOTO      FMTNO999 IF EOS
          GOTO      FMTNO100
.
FMTNO200  PACK      OBXFTESC,SP70
          CLEAR     OBXFTESC
          MOVE      ONE,OBXESCFL         * Escape Flag
          BUMP      DIM127
          GOTO      FMTNO999 IF EOS
.
FMTNO210  MOVE      DIM127,ANS
          MOVE      ZERO,ENDLINE
          MATCH     "\",ANS              * Check for End of Esc String
          GOTO      FMTNO300 IF EQUAL
          APPEND    ANS,OBXFTESC         * Build Escape String
          BUMP      DIM127
          GOTO      FMTNO999 IF EOS
          GOTO      FMTNO210
.
FMTNO300  MOVE      ZERO,ENDLINE
          MOVE      ZERO,OBXESCFL         * Escape Flag
          BUMP      DIM127
          IF        @EOS
            MOVE      ONE,ENDLINE
          ENDIF
          RESET     OBXFTESC
          MATCH     ".br",OBXFTESC
          GOTO      FMTNO400 IF EQUAL
.
          MATCH     ".sp",OBXFTESC
          GOTO      FMTNO400 IF EQUAL
.
          MATCH     "H",OBXFTESC
          IF        @EQUAL
            IF        OUTSTLEN>124
              CALL      WRTNTE00
            ENDIF
            APPEND    "<b>",OUT127
            ADD       THREE,OUTSTLEN
            COMPARE   "127",OUTSTLEN
            CALL      WRTNTE00 IF EQUAL
            GOTO      FMTNO100 
          ENDIF
.
          MATCH     "N",OBXFTESC
          IF        @EQUAL
            IF        OUTSTLEN>123
              CALL      WRTNTE00
            ENDIF
            APPEND    "</b>",OUT127
            ADD       FOUR,OUTSTLEN
            COMPARE   "127",OUTSTLEN
            CALL      WRTNTE00 IF EQUAL
            GOTO      FMTNO100 
          ENDIF
.
          MATCH     "F",OBXFTESC
          IF        @EQUAL
            APPEND    "|",OUT127
            ADD       ONE,OUTSTLEN
            COMPARE   "127",OUTSTLEN
            CALL      WRTNTE00 IF EQUAL
            GOTO      FMTNO100 
          ENDIF
.
          MATCH     "S",OBXFTESC
          IF        @EQUAL
            APPEND    "^",OUT127
            ADD       ONE,OUTSTLEN
            COMPARE   "127",OUTSTLEN
            CALL      WRTNTE00 IF EQUAL
            GOTO      FMTNO100 
          ENDIF
.
          MATCH     "T",OBXFTESC
          IF        @EQUAL
            IF        OUTSTLEN>123
              CALL      WRTNTE00
            ENDIF
            APPEND    "&AMP",OUT127
            ADD       FOUR,OUTSTLEN
            COMPARE   "127",OUTSTLEN
            CALL      WRTNTE00 IF EQUAL
            GOTO      FMTNO100 
          ENDIF
.
          MATCH     "R",OBXFTESC
          IF        @EQUAL
            APPEND    "~",OUT127
            ADD       ONE,OUTSTLEN
            COMPARE   "127",OUTSTLEN
            CALL      WRTNTE00 IF EQUAL
            GOTO      FMTNO100 
          ENDIF
.
FMTNO400  CALL      WRTNTE00
          BRANCH    ENDLINE,FMTNO999
          GOTO      FMTNO100 
.
FMTNO999  RETURN
.----------------------------------------------------------------------
. Write to Text Results File
.----------------------------------------------------------------------
WRTNTE00  BRANCH    OBRNTEFL,WRTNTE10
.
WRTNTE05  ADD       ONE,LINENO
          RESET     OUT127
          PACK      REDCTXT,OUT127,SP70,SP70
          PACK      KEY24,REHARDT,REHARTM,REHARUN,SETID,LINENO
          UNPACK    KEY24,REDCRDT,REDCRTM,REDCRUN,REDCSID,REDCLNO
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          CALL      WRREDC1
          TRAPCLR   IO
          BRANCH    OVRCD,WRTNTE05
          CALL      CHKDEC00                * check Detail A changes   *I-41336
          GOTO      WRTNTE90
.
WRTNTE10  ADD       ONE,LINENO
          RESET     OUT127
          PACK      REHBTXT,OUT127,SP70,SP70
          PACK      KEY20,REHARDT,REHARTM,REHARUN,LINENO
          UNPACK    KEY20,REHBRDT,REHBRTM,REHBRUN,REHBLIN
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          CALL      WRREHB1
          TRAPCLR   IO
          BRANCH    OVRCD,WRTNTE10
          CALL      CHKHEB00                * check header data change *I-41336
.
WRTNTE90  PACK      OUT127,SP70,SP70
          CLEAR     OUT127
          MOVE      ZERO,OUTSTLEN
.
WRTNTE99  RETURN
.
.
.******************************************** Start of Addition        *I-41336
.*****************************************************************************
.*                                  OPNTMP00
.*                   Initialise, or Clear-out Temp Files & Open
.*****************************************************************************
OPNTMP00  MOVE      ZERO,OVRCD
          CLOSE     TMPHEBA1
          CLOSE     TMPDEAA1
          CLOSE     TMPDEBA1
          CLOSE     TMPDECA1
.
          TRAP      OVERCOND IF IO
          OPEN      TMPHEBA1,"tmphebaf"
          TRAPCLR   IO
          PERFORM   OVRCD,OPNT5000          * build new table "tmphebaf"
          TRAP      OVERCOND IF IO
          OPEN      TMPDEAA1,"tmpdeaaf"
          TRAPCLR   IO
          PERFORM   OVRCD,OPNT6000          * build new tables "tmpdeaaf"
          TRAP      OVERCOND IF IO
          OPEN      TMPDEBA1,"tmpdebaf"
          TRAPCLR   IO
          PERFORM   OVRCD,OPNT7000          * build new tables "tmpdebaf"
          TRAP      OVERCOND IF IO
          OPEN      TMPDECA1,"tmpdecaf"
          TRAPCLR   IO
          PERFORM   OVRCD,OPNT8000          * build new tables "tmpdecaf"
.
OPNT2000  CALL      CLRTMP00
          GOTO      OPNT9999
.
.
.
OPNT5000  PACK      CMNDLINE,ISBUILD,SP1,BLDHEBA1,SP30
          RESET     CMNDLINE
          EXECUTE   CMNDLINE,TASKID
          MOVE      ZERO,OVRCD
          OPEN      TMPHEBA1,"tmphebaf"
          RETURN
.
OPNT6000  PACK      CMNDLINE,ISBUILD,SP1,BLDDEAA1,SP30
          RESET     CMNDLINE
          EXECUTE   CMNDLINE,TASKID
          MOVE      ZERO,OVRCD
          OPEN      TMPDEAA1,"tmpdeaaf"
          RETURN
.
OPNT7000  PACK      CMNDLINE,ISBUILD,SP1,BLDDEBA1,SP30
          RESET     CMNDLINE
          EXECUTE   CMNDLINE,TASKID
          MOVE      ZERO,OVRCD
          OPEN      TMPDEBA1,"tmpdebaf"
          RETURN
.
OPNT8000  PACK      CMNDLINE,ISBUILD,SP1,BLDDECA1,SP30
          RESET     CMNDLINE
          EXECUTE   CMNDLINE,TASKID
          MOVE      ZERO,OVRCD
          OPEN      TMPDECA1,"tmpdecaf"
          RETURN
.
.
.
OPNT9999  RETURN
+
.*****************************************************************************
.*                                  CLRTMP00
.*                      Delete all records in temp file
.*****************************************************************************
CLRTMP00  MOVE      ZERO,OVRCD
.
CLRT1000  PACK      KEY20,SP20              * delete all records in file
          CALL      RSTPHB1
          CALL      RKTPHB1
          BRANCH    OVRCD,CLRT2000
          PACK      KEY20,TPHBRDT,TPHBRTM,TPHBRUN,TPHBLIN
          CALL      DETPHB1
          GOTO      CLRT1000
.
CLRT2000  PACK      KEY21,SP20,SP1          * delete all records in file
          CALL      RSTPDA1
          CALL      RKTPDA1
          BRANCH    OVRCD,CLRT3000
          PACK      KEY21,TPDARDT,TPDARTM,TPDARUN,TPDASID
          CALL      DETPDA1
          GOTO      CLRT2000
.
CLRT3000  PACK      KEY24,SP20,SP10         * delete all records in file
          CALL      RSTPDB1
          CALL      RKTPDB1
          BRANCH    OVRCD,CLRT4000
          PACK      KEY24,TPDBRDT,TPDBRTM,TPDBRUN,TPDBSID,TPDBLNO
          CALL      DETPDB1
          GOTO      CLRT3000
.
CLRT4000  PACK      KEY24,SP20,SP10         * delete all records in file
          CALL      RSTPDC1
          CALL      RKTPDC1
          BRANCH    OVRCD,CLRT9999
          PACK      KEY24,TPDCRDT,TPDCRTM,TPDCRUN,TPDCSID,TPDCLNO
          CALL      DETPDC1
          GOTO      CLRT4000
.
CLRT9999  RETURN
+
.*****************************************************************************
.*                                  CHKHEB00
.*               Check if header data has changed for "mark-as-read"
.*****************************************************************************
CHKHEB00  MATCH     "0",RELNMSN
          GOTO      CHKH9999 IF EQUAL       * already off, bypass processing
.
CHKH1000  PACK      KEY20,REHBRDT,REHBRTM,REHBRUN,REHBLIN
          CALL      RDTPHB1                 * read Temp using Header key
          BRANCH    OVRCD,CHKH9000          * recd not found
.
CHKH2000  MATCH     TPHBTXT,REHBTXT         * match the text
          GOTO      CHKH9999 IF EQUAL
.
CHKH9000  MOVE      ZERO,RELNMSN            * set "mark-as-read" off (not read)
          CALL      CHKLUP00                * update the link record
.
CHKH9999  RETURN
.*****************************************************************************
.*                                  CHKDEA00
.*             Check if Results Details has changed for "mark-as-read"
.*****************************************************************************
CHKDEA00  MATCH     "0",RELNMSN
          GOTO      CHKA9999 IF EQUAL       * already off, bypass processing
.
CHKA1000  PACK      KEY21,REDARDT,REDARTM,REDARUN,REDASID
          CALL      RDTPDA1                 * read Temp using Detail A key
          BRANCH    OVRCD,CHKA9000          * recd not found
.
CHKA2000  MOVE      REDASTA,ANS             * get Results Status
          REP       "C-I-X-W-D=U=",ANS
          MATCH     "=",ANS
          GOTO      CHKA9999 IF EQUAL       * leave "read" if D or U
          MATCH     "-",ANS
          GOTO      CHKA9000 IF EQUAL       * turn off "read" if C,I,X or W
.
          PACK      CHK127,REDAPID,REDAVTY,REDAOTY,REDAOCS,REDAOSC,REDAOSD,SP70
          PACK      SAV127,TPDAPID,TPDAVTY,TPDAOTY,TPDAOCS,TPDAOSC,TPDAOSD,SP70
          MATCH     CHK127,SAV127           *
          GOTO      CHKA9000 IF NOT EQUAL
.
          PACK      CHK127,REDAVST,SP70,SP70
          PACK      SAV127,TPDAVST,SP70,SP70
          MATCH     CHK127,SAV127           *
          GOTO      CHKA9000 IF NOT EQUAL
.
          PACK      CHK127,REDAUNI,REDARFR,REDANAT,REDATFL,REDAPER,REDAROB,SP70
          PACK      SAV127,TPDAUNI,TPDARFR,TPDANAT,TPDATFL,TPDAPER,TPDAROB,SP70
          MATCH     CHK127,SAV127           *
          GOTO      CHKA9000 IF NOT EQUAL
.
          PACK      CHK127,REDAVNM,SP20
          PACK      SAV127,TPDAVNM,SP20
          COMPARE   TPDAVNM,REDAVNM         *
          GOTO      CHKA9000 IF NOT EQUAL
.
          PACK      CHK127,REDAPRB,SP20
          PACK      SAV127,TPDAPRB,SP20
          COMPARE   TPDAPRB,REDAPRB         *
          GOTO      CHKA9000 IF NOT EQUAL
.
          GOTO      CHKA9999
.
.
.
CHKA9000  MOVE      ZERO,OVRCD
          CALL      CHKLUP00                * update the link record
.
CHKA9999  RETURN
.*****************************************************************************
.*                                  CHKDEB00
.*               Check if Results Notes has changed for "mark-as-read"
.*****************************************************************************
CHKDEB00  MATCH     "0",RELNMSN
          GOTO      CHKB9999 IF EQUAL       * already off, bypass processing
.
CHKB1000  PACK      KEY24,REDBRDT,REDBRTM,REDBRUN,REDBSID,REDBLNO
          CALL      RDTPDB1                 * read Temp using Det.B key
          BRANCH    OVRCD,CHKB9000          * recd not found
.
CHKB2000  MATCH     TPDBTXT,REDBTXT         * match the text
          GOTO      CHKB9999 IF EQUAL
.
CHKB9000  MOVE      ZERO,OVRCD
          CALL      CHKLUP00                * update the link record
.
CHKB9999  RETURN
.*****************************************************************************
.*                                  CHKDEC00
.*          Check if Results Notes (NTE) has changed for "mark-as-read"
.*****************************************************************************
CHKDEC00  MATCH     "0",RELNMSN
          GOTO      CHKC9999 IF EQUAL       * already off, bypass processing
.
CHKC1000  PACK      KEY24,REDCRDT,REDCRTM,REDCRUN,REDCSID,REDCLNO
          CALL      RDTPDC1                 * read Temp using Det.C key
          BRANCH    OVRCD,CHKC9000          * recd not found
.
CHKC2000  MATCH     TPDCTXT,REDCTXT         * match the text
          GOTO      CHKC9999 IF EQUAL
.
CHKC9000  MOVE      ZERO,OVRCD
          CALL      CHKLUP00                * update the link record
.
CHKC9999  RETURN
.*****************************************************************************
.*                                  CHKLUP00
.*           Update the Link file after "Mark-as-read" check
.*****************************************************************************
CHKLUP00  PACK      KEY29,SAVKEY29,SP70
          PACK      RESLNKFL,PRELEN,KEY29             * I CAR 38290
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      RESLNKA3,RESLNKFL
          TRAPCLR   IO
.
          COMPARE   ONE,OVRCD
          GOTO      CHKLUP99 IF EQUAL                 * end I CAR 38290
.
          CALL      RSRELN3
CHKLUP10  CALL      RKRELN3
          BRANCH    OVRCD,CHKLUP99
.
          PACK      KEY29,RELNRDT,RELNRTM,RELNRUN,SP70
          MATCH     SAVKEY29,KEY29
          GOTO      CHKLUP99 IF NOT EQUAL
.
          MOVE      ZERO,RELNMSN            * Marked as seen, 0=no.
          CALL      UPRELN3
          GOTO      CHKLUP10
.
CHKLUP99  RETURN
.********************************************   End of Addition        *I-41336
+
.----------------------------------------------------------------------
. SNAME000 - Search for Strict Surname Match
. Returns:    EXIT   0 = Patient found - Ok to continue
.                    1 = No matching patient found
.----------------------------------------------------------------------
.
SNAME000   IF        SNAMEFLG=1
            MOVE      ONE,EXIT
            GOTO      SNAME999
          ENDIF
          MOVE      ONE,SNAMEFLG
          MOVE      ZERO,HIGHSCOR                * initialise high score
          MOVE      SP8,SAVEURNO                 * initialise saved U/R number
.
.         Load matching variables (sex, medicare #, dob, surname & given name)
.
          PACK      SEX,PID008,SP70              *  DIM       1
          PACK      MEDICARE,PID019,SP70         *  DIM       10
          PACK      DOB,PID00701,SP70            *  DIM       8
          PACK      SURNAME,PID00501,SP70        *  DIM       40
          PACK      GIVEN,PID00502,SP70          *  DIM       40
.
.         Read through the master file using the medicare number if available
.         from the message
.
          MATCH     SP70,MEDICARE
          GOTO      SNAME200 IF EQUAL
.
          PACK      DIM9,MEDICARE,SP70
.
          PACK      KEY18,DIM9,SP70
          CALL      RDSMAST3                      * position in the master file
SNAME100  CALL      RDKMAST3                      * read the next record
          BRANCH    OVRCD,SNAME200                * end of surname search
.
          MATCH     MEDICARE,PMEDI
          GOTO      SNAME200 IF NOT EQUAL
.
          MOVE      PURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,SNAME100
.
.         Get the match score for the record
.
          CALL      CHKMCH00
.
.         See if the score returned for the match is the highest so far.
.         If so, save the score and the record key.
.
          COMPARE   SCORE,HIGHSCOR
          IF        @LESS
            MOVE      SCORE,HIGHSCOR             * save match score
            MOVE      PURNO,SAVEURNO             * save U/R number
          ENDIF
          GOTO      SNAME100                     * get the next record
.
.         Read through the master file using the dob if available
.         from the message
.
SNAME200  COMPARE   NINE,HIGHSCOR
          GOTO      SNAME500 IF EQUAL            * exact match found
.
          MATCH     SP70,DOB
          GOTO      SNAME500 IF EQUAL
.
          PACK      KEY98,DOB,SP70,SP70
          CALL      RSPTGSR6                      * position in the surname file
SNAME250  CALL      RKPTGSR6                      * read the next record
          BRANCH    OVRCD,SNAME500                * end of surname search
.
          MATCH     DOB,GSRDOB
          GOTO      SNAME500 IF NOT EQUAL
.
          PACK      KEY8,GSRURNO,SP70
          CALL      RDMAST1
          BRANCH    OVRCD,SNAME250
.
          PACK      KEY8,GSRURNO,SP70
          CALL      RDPMPX21
          BRANCH    OVRCD,SNAME250
.
.         Get the match score for the record
.
          CALL      CHKMCH00
.
.         See if the score returned for the match is the highest so far.
.         If so, save the score and the record key.
.
          COMPARE   SCORE,HIGHSCOR
          IF        @LESS
            MOVE      SCORE,HIGHSCOR             * save match score
            MOVE      PURNO,SAVEURNO             * save U/R number
          ENDIF
          GOTO      SNAME250                     * get the next record
.
.         We have finished checking through patma1af for matching records,
.         so now see if the highest match score was 5 or more.
.
SNAME500  COMPARE   SEVEN,HIGHSCOR                * valid score ?
          GOTO      SNAME910 IF LESS             * no - no valid match found
.
.         A matching record has been found, so re-read the patient details
.
          MOVE      SAVEURNO,KEY8
          CALL      RDMAST1                      * U/R record found ?
          BRANCH    OVRCD,SNAME910               * no - shouldn't happen
.
          MOVE      ZERO,EXIT
          GOTO      SNAME999
.
SNAME910  MOVE      ONE,EXIT
.
SNAME999  RETURN
+
.----------------------------------------------------------------------
. CHKMCH00 - Check for Matching Patient
.
.  Field       Score
. ------------ -----
.  Surname       2
.  Given Name    2
.  Initial       1
.  Medicare No   2
.  Date of Birth 2
.  Sex           1
.
.  Full match gives matching score maximum of "9"
.
.  Returns:    SCORE - Matching Score
.----------------------------------------------------------------------
.
CHKMCH00  MOVE      ZERO,SCORE
.
.         Check if surname matches
.
          STRIP     PTMASNAM
          STRIP     SURNAME
          MATCH     PTMASNAM,SURNAME             * matching surname ?
          IF        @EQUAL
            ADD       TWO,SCORE                  * yes - increment score
          ENDIF
          PACK      SURNAME,SURNAME,SP70
.
.         Check if given name matches
.
          STRIP     PMPXFNAM
          STRIP     GIVEN
          MATCH     PMPXFNAM,GIVEN               * matching given name ?
          IF        @EQUAL
            ADD       TWO,SCORE                  * yes - increment score
          ELSE
            MOVE      PMPXFNAM,KEY1              * no
            MOVE      GIVEN,ANS
            MATCH     ANS,KEY1                   * mathcing first intial ?
            IF        @EQUAL
              ADD       ONE,SCORE                * yes - increment score
            ENDIF
          ENDIF
          PACK      GIVEN,GIVEN,SP70
.
.         Check if medicare number matches
.
          MATCH     SP70,PMEDI
          IF        !@EQUAL
            STRIP     PMEDI
            STRIP     MEDICARE
            MATCH     PMEDI,MEDICARE             * matching medicare number ?
            IF        @EQUAL
              ADD       TWO,SCORE                * yes - increment score
            ENDIF
            PACK      MEDICARE,MEDICARE,SP70
          ENDIF
.
.         Check if DOB matches
.
          MATCH     PBDATE,DOB                   * matching DOB ?
          IF        @EQUAL
            ADD       TWO,SCORE                  * yes - increment score
          ENDIF
.
.         Check if sex matches
.
          MATCH     PSEX,SEX                     * matching sex ?
          IF        @EQUAL
            ADD       ONE,SCORE                  * yes - increment score
          ENDIF
.
CHKMCH99  RETURN
+
.-----------------------------------------------
. Normal Flag Processing
.-----------------------------------------------
CHKNOR00  PACK      KEY17,REHARDT,REHARTM,REHARUN,SP70
          CALL      RDREHA1
          BRANCH    OVRCD,CHKNOR99
.
          MATCH     "1",REHANOR
          GOTO      CHKNOR99 IF NOT EQUAL
.
          MOVE      "0074",KEY4
          MOVE      REHADSS,HLCODES
          PACK      KEY14,KEY4,REHADSS,SP70
          CALL      RDHLCO1
          BRANCH    OVRCD,CHKNOR99
.
          MOVE      "dg",CATEGORY
          PACK      KEY5,CATEGORY,HLCOICD,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,CHKNOR99
.
          MOVE      "A",OBX008
          MATCH     "1",TCINDC2         * Flag All as Abnormal Status 0
          GOTO      CHKNOR90 IF EQUAL
.
          MOVE      "null",OBX008
          MATCH     "2",TCINDC2         * Flag All to Unknown Status 2
          GOTO      CHKNOR90 IF EQUAL
.
          MOVE      "A",OBX008
          MATCH     "3",TCINDC2         * Check for No Growth
          GOTO      CHKNOR10 IF EQUAL
.
          MOVE      "null",OBX008
          MATCH     "4",TCINDC2         * Check for No Growth
          GOTO      CHKNOR10 IF EQUAL
          MOVE      SP70,OBX008
          GOTO      CHKNOR99 
.
CHKNOR10  CALL      CHKNG000            * Exit = 1 if No Growth found in result text
          BRANCH    NOGROWTH,CHKNOR99
          GOTO      CHKNOR90
   
CHKNOR90  CALL      UPDHEA00            * Update Header file
          CALL      UPDLNK00            * Update Link File
CHKNOR99  MOVE      SP70,OBX008
          RETURN
.------------------------------------------------------------
. Check for No Growth in Result Text
.------------------------------------------------------------
CHKNG000  PACK      RESULTKY,REHARDT,REHARTM,REHARUN,SP70
          PACK      KEY21,RESULTKY,SP70
          CALL      RSREDA1
CHKNG100  CALL      RKREDA1
          BRANCH    OVRCD,CHKNG900
          PACK      KEY17,REDARDT,REDARTM,REDARUN,SP70
          MATCH     KEY17,RESULTKY
          GOTO      CHKNG900 IF NOT EQUAL
          MOVE      REDAVST,KEY9
          REP       UPPLOW,KEY9
          MATCH     "NO GROWTH",KEY9
          GOTO      CHKNG100 IF NOT EQUAL
.
          MOVE      ONE,NOGROWTH
          GOTO      CHKNG999
.
CHKNG900  MOVE      ZERO,NOGROWTH
CHKNG999  RETURN
.------------------------------------------------------------
.  Embedded Document Processing
.------------------------------------------------------------
OBXED000  MOVE      ZERO,LINENO
          MOVE      ZERO,OBXESCFL
          MOVE      ZERO,OUTSTLEN
          PACK      OUT127,SP70,SP70
          CLEAR     OUT127
.
          READ      HL7FLFMT,SEQ;HL7STR;    * First part of Document to get Type
          GOTO      OBXED910 IF OVER        * No more characters to read
          MOVE      CARET,HL7DLM
          CALL      HL7BRK00
          MOVE      HL7CMP[2],FILETYPE      * PDF or RTF
          MOVE      HL7CMP[3],FILEEXTN      * pdf or rtf
          MOVE      HL7CMP[4],ENCODING      * BASE64
          REP       UPPLOW,ENCODING
          MATCH     "BASE64",ENCODING
          GOTO      OBXED920 IF NOT EQUAL        * No more characters to read
.
          IF        NOUPDATE=0
            CALL      OPNDOC00
          ENDIF
.
          IF        NOUPDATE=0
            WRITE     TEMPFILE,SEQ;*+,HL7CMP[5];
          ENDIF
.
OBXED100  READ      HL7FLFMT,SEQ;OBX005;    * Read text
          GOTO      OBXED910 IF OVER        * No more characters to read
          MOVELPTR  OBX005,LPOBX005
          COMPARE   ZERO,LPOBX005
          GOTO      OBXED900 IF EQUAL
          IF        NOUPDATE=0
            WRITE     TEMPFILE,SEQ;*+,OBX005;
          ENDIF
          IF        LPOBX005=127
            GOTO      OBXED100
          ENDIF
.
OBXED900  MOVE      ONE,REDATFL
          CALL      EHL7OBX1                * Read in end of OBX segment
          BRANCH    OVRCD,OBXED910
.
          IF        NOUPDATE=0
            CALL      CLSDOC00
          ENDIF
.
          IF        NOUPDATE=0
            STRIP     OBPTSDIR
            PACK      OBX005,OBPTSDIR,CORSFILE,SP70
            CALL      WRRES000                * Write Result Detail File
            CALL      WRREF000                * Save Referral Details into RESDEBFD for Error
          ENDIF
          GOTO      OBXED999
.
OBXED910  MOVE      "Error read OBX seg",LOGERROR
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          MOVE      ONE,EXIT
          GOTO      OBXED999
.
OBXED920  MOVE      "Error read OBX seg invalid encoding",LOGERROR
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          MOVE      ONE,EXIT
          GOTO      OBXED999
.
OBXED999  RETURN
.------------------------------------------------------------
. Create Clinical Document
.------------------------------------------------------------
OPNDOC00  CALL      NEWCOR00
          STRIP     OBPTSDIR
          PACK      CMDLINE,OBPTSDIR,CORSFILE
          PREP      TEMPFILE,CMDLINE
OPNDOC99  RETURN
.------------------------------------------------------------
. Process and Close Clinical Document
.  hl7orums.us1 Decode base64 file 
.------------------------------------------------------------
CLSDOC00  CLOSE     TEMPFILE
          MOVE      "hl7orums.us1 ",KEY13
          STRIP     OBPTSDIR
          PACK      CMDLINE,KEY13,OBPTSDIR,CORSFILE
          EXECUTE   CMDLINE,TASKID
          CALL      LNKRES00
CLSDOC99  RETURN
.------------------------------------------------------------
. Process and Close Clinical Document
.------------------------------------------------------------
LNKRES00  MOVE      ZERO,F2
          PACK      RESULTKY,REHARDT,REHARTM,REHARUN,SP70
          PACK      KEY20,RESULTKY,Z70
          CALL      RSRECL1
          CALL      RPRECL1
          BRANCH    OVRCD,LNKRES10
.
          PACK      KEY17,RECLRDT,RECLRTM,RECLRUN,SP70
          MATCH     KEY17,RESULTKY
          GOTO      LNKRES10 IF NOT EQUAL
.
          RJUSTIFY  RECLLNO
          MOVE      RECLLNO,F2
.
LNKRES10  COMPARE   "99",F2
          GOTO      LNKRES99 IF NOT LESS
.
          ADD       ONE,F2
          MOVE      F2,KEY2
          REP       " 0",KEY2
          PACK      KEY20,RESULTKY,KEY2
          CALL      RDRECL1
          COMPARE   ZERO,OVRCD
          GOTO      LNKRES10 IF EQUAL
.
          UNPACK    KEY20,RECLRDT,RECLRTM,RECLRUN,RECLLNO
          MOVE      OBPCURNO,RECLURN
          MOVE      OBPCCVIS,RECLVIS
          MOVE      OBPCCPID,RECLCID
          MOVE      SP70,RECLSPA
          CALL      WRRECL1
.
LNKRES99  RETURN

.------------------------------------------------------------
. New Correspondenance Item
.------------------------------------------------------------
NEWCOR00  READ      CONTROLF,NINTY1;*219,CWEBCLOC
          PACK      KEY4,CWEBCLOC
          CALL      RDOBPT1
          BRANCH    OVRCD,NEWCOR91
.
          PACK      KEY8,CORRADMN           * validate admissno
          MOVE      CORRADMN,SAVISIT
          MATCH     SP70,CORRADMN
          IF        @EQUAL|@EOS
            MOVE      "00000000",SAVISIT
          ENDIF
.
. If no valid patient U/R then use Unique Key for Result Header
.
          MATCH     SP70,CORRURNO
          IF        @EQUAL
            PACK      OBPCFEXT,DOT,FILEEXTN,SP70
            REP       LOWUPP,OBPCFEXT             * Make Lowercase Extension
            PACK      CORSFILE,REHARDT,REHARTM,REHARUN,SETID,OBPCFEXT,SP70
            STRIP     CORSFILE
            REP       " 0",CORSFILE
            GOTO      NEWCOR99
          ENDIF
.
          MOVE      ONE,CORRESID
          PACK      KEY20,CORRURNO,SAVISIT,Z70       
          CALL      RSOBPC1
          CALL      RPOBPC1              * Positions on last value
          BRANCH    OVRCD,NEWCOR10
          MATCH     CORRURNO,OBPCURNO
          GOTO      NEWCOR10 IF NOT EQUAL
          MATCH     SAVISIT,OBPCCVIS
          GOTO      NEWCOR10 IF NOT EQUAL
          MOVE      OBPCCPID,CORRESID    
          ADD       ONE,CORRESID            
.
NEWCOR10  MOVE      CORRESID,OBPCCPID          * Correspondance ID
          MOVE      SAVISIT,OBPCCVIS
          MOVE      CORRURNO,OBPCURNO
.
          CALL      IBACLOCK
          PACK      OBPCDTLU,CCC,CYY,CMM,CDD   * Last update date 
          REP       " 0",OBPCDTLU
          MOVE      CTIMEIS,OBPCTMLU           * Last Update time
.
          MOVE      "HL7ORUMS",OBPCINUS        * Web User ID
          MOVE      "HL7ORUMS",OBPCLUID        * Last Web User ID
          MOVE      ZERO,OBPCMDEL              * Delete indicator not set
.
          PACK      OBPCFEXT,DOT,FILEEXTN,SP70
          REP       LOWUPP,OBPCFEXT             * Make Lowercase Extension
.
          MOVE      OBPTSLID,OBPCSLID       * Storage Location ID
          MOVE      REHARDT,OBPCINDT    * Input date 
          MOVE      REHARTM,OBPCINTM    * Input time 
          MOVE      REHALAB,OBPCCTYP    * Type of Correspondance (Lab Code By Default)
          MATCH     SP70,REHADSS
          IF        !@EQUAL
            MOVE      REHADSS,KEY3        * Type of Correspondance
            PACK      KEY5,CATWI,KEY3
            CALL      RDCODE1
            IF        OVRCD=0
              MOVE      REHADSS,OBPCCTYP    * Type of Correspondance Use DSS if Valid in CATwi
            ENDIF
          ENDIF
          MOVE      SP70,OBPCSLEV       * Security Level
          MOVE      "Diagnoistic Result Attachment",OBPCCOM1       * Comment 1
          MOVE      UNIDESC,OBPCCOM2    * Result Name
          MOVE      RELBDES,OBPCCFRM    * From Laboratory Name
          PACK      OBPCCTOO,REHAOSN,COMMA,SP1,REHAOGN,SP70   * To Ordering Provider
          MATCH     SP70,RFTYPE
          IF        !@EQUAL
            MOVE      RFTYPE,OBPCCOM1      * Referral Type
          ENDIF
.
          MATCH     SP70,RFREAS
          IF        !@EQUAL
            MOVE      RFREAS,OBPCCOM2      * Referral Reason
          ENDIF
.
          MATCH     SP70,RTNAME
          IF        !@EQUAL
            MOVE      RTNAME,OBPCCTOO      * Referred Too Provider from PRD Seg
          ENDIF
.
          MATCH     SP70,RPNAME
          IF        !@EQUAL
            MOVE      RPNAME,OBPCCFRM      * Referring Provider from PRD Seg
          ENDIF
.
          MOVE      SP70,OBPCUDF1       * User Def Code 1
          MOVE      SP70,OBPCUDF2       * User Def Code 2
          MOVE      SP70,OBPCUYN1       * User Def Y/N 1
          MOVE      SP70,OBPCUYN2       * User Def Y/N 2
          MOVE      SP70,OBPCUDD1       * User Def Date 1
          MOVE      SP70,OBPCUDD2       * User Def Date 2
          MOVE      SP70,OBPCACAT       * Alert Category
          MOVE      SP70,OBPCACOD       * Alert Code          
.
          MOVE      SAVISIT,OBPCCVIS
.
NEWCOR80  PACK      KEY12,OBPCCVIS,OBPCCPID
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          CALL      WROBPC1
          TRAPCLR   IO
          IF        OVRCD=1
            ADD       ONE,CORRESID
            MOVE      CORRESID,OBPCCPID     * Correspondance ID
            GOTO      NEWCOR80
          ENDIF
.
          MATCH     "00000000",OBPCCVIS
          IF        @EQUAL
            MOVE      "UR",KEY2
            PACK      CORSFILE,KEY2,OBPCURNO,DASH,OBPCCPID,OBPCFEXT 
          ELSE
            PACK      CORSFILE,OBPCCVIS,DASH,OBPCCPID,OBPCFEXT 
          ENDIF
          STRIP     CORSFILE
          REP       " 0",CORSFILE
.
          MOVE      ZERO,EXIT               * To go to next page
.
          PACK      KEY8,CORRURNO,SP70           * validate UR
          CALL      RDMAST1
          BRANCH    OVRCD,NEWCOR99
          MATCH     "1",PTMXSIN4
          IF        !@EQUAL
            PACK      KEY8,CORRURNO,SP70         * validate UR
            CALL      RLPTMAS1
            BRANCH    OVRCD,NEWCOR99,NEWCOR99
            MOVE      "1",PTMXSIN4
            CALL      UPMAST1
            CALL      UUPTMAS1
          ENDIF
          GOTO      NEWCOR99
.
NEWCOR90  CLEAR     WEBTITLE
          APPEND    "Invalid U/r Number - ",WEBTITLE
          APPEND    KEY8,WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      NEWCOR99
.
NEWCOR91  CLEAR     WEBTITLE
          APPEND    "Invalid Storage Location ID From Control File - ",WEBTITLE
          APPEND    KEY4,WEBTITLE
          RESET     WEBTITLE
          CALL      WEBERR00
          MOVE      ONE,EXIT
          GOTO      NEWCOR99
.
NEWCOR99  RETURN
.--------------------------------------------------------------------------------
. Write Referral Detail into RESDEBFD for error correction processing
.--------------------------------------------------------------------------------
WRREF000  MOVE      ONE,LINENO
          PACK      REDBTXT,RFTYPE,SP70,SP70
          PACK      KEY24,REHARDT,REHARTM,REHARUN,SETID,LINENO
          UNPACK    KEY24,REDBRDT,REDBRTM,REDBRUN,REDBSID,REDBLNO
          CALL      WRREDB1
.
          MOVE      TWO,LINENO
          PACK      REDBTXT,RFREAS,SP70,SP70
          PACK      KEY24,REHARDT,REHARTM,REHARUN,SETID,LINENO
          UNPACK    KEY24,REDBRDT,REDBRTM,REDBRUN,REDBSID,REDBLNO
          CALL      WRREDB1
.
          MOVE      THREE,LINENO
          PACK      REDBTXT,RTNAME,SP70,SP70
          PACK      KEY24,REHARDT,REHARTM,REHARUN,SETID,LINENO
          UNPACK    KEY24,REDBRDT,REDBRTM,REDBRUN,REDBSID,REDBLNO
          CALL      WRREDB1
.
          MOVE      FOUR,LINENO
          PACK      REDBTXT,RPNAME,SP70,SP70
          PACK      KEY24,REHARDT,REHARTM,REHARUN,SETID,LINENO
          UNPACK    KEY24,REDBRDT,REDBRTM,REDBRUN,REDBSID,REDBLNO
          CALL      WRREDB1
.
          MOVE      FIVE,LINENO
          PACK      REDBTXT,FILEEXTN,SP70,SP70
          PACK      KEY24,REHARDT,REHARTM,REHARUN,SETID,LINENO
          UNPACK    KEY24,REDBRDT,REDBRTM,REDBRUN,REDBSID,REDBLNO
          CALL      WRREDB1
.
          MOVE      SIX,LINENO
          PACK      REDBTXT,FILETYPE,SP70,SP70
          PACK      KEY24,REHARDT,REHARTM,REHARUN,SETID,LINENO
          UNPACK    KEY24,REDBRDT,REDBRTM,REDBRUN,REDBSID,REDBLNO
          CALL      WRREDB1
.
          MOVE      SEVEN,LINENO                  * Storage Location
          PACK      REDBTXT,CWEBCLOC,SP70,SP70
          PACK      KEY24,REHARDT,REHARTM,REHARUN,SETID,LINENO
          UNPACK    KEY24,REDBRDT,REDBRTM,REDBRUN,REDBSID,REDBLNO
          CALL      WRREDB1
.
          MOVE      EIGHT,LINENO                  * Correspondance File Name
          PACK      REDBTXT,CORSFILE,SP70,SP70
          PACK      KEY24,REHARDT,REHARTM,REHARUN,SETID,LINENO
          UNPACK    KEY24,REDBRDT,REDBRTM,REDBRUN,REDBSID,REDBLNO
          CALL      WRREDB1
.
          RETURN
.------------------------------------------------------------
. Process Unsolicited Order Result Message (ORU)
.------------------------------------------------------------------------------
PREF0000  CALL      CLRREF00
.
PREF0100  READ      HL7FLFMT,SEQ;SEGID;     * Get Next Segment
          GOTO      PREF9000 IF OVER        * No PID Segment Found
.
          MATCH     "MSA",SEGID
          GOTO      PREF2400 IF EQUAL
.
          MATCH     "RF1",SEGID             * Must have RF1 Record
          GOTO      PREF2500 IF EQUAL
.
          MATCH     "PRD",SEGID             * Must have RF1 Record
          GOTO      PREF2600 IF EQUAL
.
          MATCH     "PID",SEGID             * Must have PID Record
          GOTO      PREF9000 IF NOT EQUAL
.
PREF1000  CALL      PROPID00                * Get & Process PID Record
          BRANCH    EXIT,PREF9900           * Error
.
PREF1100  READ      HL7FLFMT,SEQ;SEGID;     * Get Next Segment
          GOTO      PREF9999 IF OVER        * No More Segments
.
PREF1200  MATCH     "PID",SEGID
          GOTO      PREF1000 IF EQUAL
          MATCH     "PV1",SEGID
          GOTO      PREF2100 IF EQUAL
          MATCH     "ORC",SEGID
          GOTO      PREF2200 IF EQUAL
          MATCH     "OBR",SEGID
          GOTO      PREF2300 IF EQUAL
          MATCH     "MSA",SEGID
          GOTO      PREF2400 IF EQUAL
          GOTO      PREF9200                * Next Message
.
PREF2100  CALL      PROPV100                * Process PV1 Segment
          BRANCH    EXIT,PREF9900
          GOTO      PREF1100                * Get Next Segment
.
PREF2200  CALL      PROORC00                * Process ORC Segment
          BRANCH    EXIT,PREF9900
          GOTO      PREF1100                * Get Next Segment
.
PREF2300  CALL      PROOBR00                * Process OBR Segment
          IF        EXIT=2
            GOTO      PREF9999
          ENDIF
          CALL      CHKNOR00                * Process Abnormal Flag Rules
          CALL      PROORD00                * Update Related Orders
          GOTO      PREF1200                * Get Next Segment
.
PREF2400  CALL      PROMSA00                * Process MSA Segment
          GOTO      PREF1100                * Get Next Segment
.
PREF2500  CALL      PRORF100                * Process RF1 Segment
          GOTO      PREF0100                * Get Next Segment
.
PREF2600  CALL      PROPRD00                * Process PRD Segment
          GOTO      PREF0100                * Get Next Segment
.
PREF9000  MOVE      "PID Seg Not Found.",LOGERROR
          ADD       ONE,ERRCOUNT
          CALL      ERRLOG00
          GOTO      PREF9999
.
PREF9200  MOVE      ONE,EXIT
          GOTO      PREF9999
.
PREF9900           
PREF9999  RETURN
.
CLRREF00  MOVE      SP70,RPCODE
          MOVE      SP70,RPNAME
          MOVE      SP70,RTCODE
          MOVE      SP70,RTNAME
          MOVE      SP70,RFREAS
          MOVE      SP70,RFTYPE
CLRREF99  RETURN

.------------------------------------------------------------
. Process RF1 Segment
.----------------------------------------------------------------------
PRORF100  CALL      RHL7RF11                * Read in RF1 segment
          BRANCH    OVRCD,PRORF198
.
          MOVE      RF101002,RFREAS
          MOVE      RF100302,RFTYPE
.
          MOVE      ZERO,EXIT
          GOTO      PRORF199
.
PRORF198  MOVE      ONE,EXIT
PRORF199  RETURN
.------------------------------------------------------------
. Process PRD Segment
. Role Types
.  RP Referring Provider
.  PP Primary Care Provider
.  CP Consulting Provider
.  RT Referred to Provider
.----------------------------------------------------------------------
PROPRD00  CALL      RHL7PRD1                * Read in PRD segment
          BRANCH    OVRCD,PROPRD98
.
          STRIP     PRD00201
          STRIP     PRD00202
          STRIP     PRD00205
.
          CLEAR     DOCTNAME                 * Formatted Provider Name
          APPEND    PRD00201,DOCTNAME
          APPEND    COMMA,DOCTNAME
          APPEND    SP1,DOCTNAME
          APPEND    PRD00205,DOCTNAME
          APPEND    SP1,DOCTNAME
          APPEND    PRD00202,DOCTNAME
          RESET     DOCTNAME

          MATCH     "RP",PRD00101
          IF        @EQUAL
            MOVE      DOCTNAME,RPNAME
            MOVE      PRD00701,RPCODE
          ENDIF
          MATCH     "RT",PRD00101
          IF        @EQUAL
            MOVE      DOCTNAME,RTNAME
            MOVE      PRD00701,RTCODE
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      PROPRD99
.
PROPRD98  MOVE      ONE,EXIT
PROPRD99  RETURN
.*****************************************************************************
.*                           GFAC0000              Called by: PROORD00       *
.*      Get the sending facility for a multi hospital environment            *
.*****************************************************************************
GFAC0000  READ      CONTROLF,TEN;*79,CAPPRVNO
          MOVE      CAPPRVNO,PLACERID            * set sending facility
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          COMPARE   ONE,IBCNMHOS                 * using multi-hospital ?
          GOTO      GFAC9999 IF NOT EQUAL        * no
.
          MOVE      REHAVIS,KEY8
          CALL      RDVISA1            * Check for Visit No 
          BRANCH    OVRCD,GFAC9999     * Not Valid
          BRANCH    PVITYPE,GFAC1000,GFAC1000,GFAC1000
. Visit 
.-----------
GFAC1000  MOVE      REHAVIS,KEY8                * load visit number
          CALL      RDPMVX11                     * visit on file ?
          BRANCH    OVRCD,GFAC9999               * no - use default parameter
          MATCH     SP3,PMVXMHOS                 * blank hospital id ?
          GOTO      GFAC9999 IF EQUAL            * yes - use default parameter
          MOVE      PMVXMHOS,KEY3                * load hospital key
          GOTO      GFAC9000
. Inpatient
.-----------
GFAC2000  MOVE      REHAVIS,KEY8
          CALL      RDMISS1
          BRANCH    OVRCD,GFAC9999
          PACK      KEY6,AWARD,ABED
          CALL      RDWARD1                      * ward on file ?
          BRANCH    OVRCD,GFAC9999               * no - use default parameter
          MATCH     SP3,PTWDHOSN                 * hospital code blank ?
          GOTO      GFAC9999 IF EQUAL            * yes - use default parameter
          MOVE      PTWDHOSN,KEY3                * set hospital key
.                            
GFAC9000  CALL      RDPTHSP1                     * hospital code on file ?
          BRANCH    OVRCD,GFAC9999               * no - use default parameter
.
          MOVE      PTHSAPPR,PLACERID            * set sending facility
.
GFAC9999  RETURN
.
          INC       IBAWEBCD
          INC       AAEDE1IO/INC
          INC       ALLREFIO/INC
          INC       EMRVISIO/INC
          INC       HL7MSHIO/INC
          INC       HL7NTEIO/INC
          INC       HL7PIDIO/INC
          INC       HL7PV1IO/INC
          INC       HL7ORCIO/INC
          INC       HL7OBRIO/INC
          INC       HL7OBXIO/INC
          INC       HL7PRDIO/INC
          INC       HL7RF1IO/INC
          INC       HL7CODIO/INC
          INC       NHIMASIO/INC
          INC       OUTSITIO/INC
          INC       OUTBOAIO/INC
          INC       OUTBB1IO/INC
          INC       OBSPCOIO/INC
          INC       OBSPCTIO/INC
          INC       PATDSCIO/INC
          INC       PATGSRIO/INC
          INC       PATHSPIO/INC
          INC       PATMA1IO/INC
          INC       PATWR1IO/INC
          INC       PMSPX2IO/INC
          INC       PMSVX1IO/INC
          INC       PATMI1IO/INC
          INC       PATVISIO/INC
          INC       RESCLNIO/INC
          INC       RESDEAIO/INC
          INC       RESDEBIO/INC
          INC       RESDECIO/INC
          INC       RESERRIO/INC
          INC       RESPIDIO/INC
          INC       RESHEAIO/INC
          INC       RESHEBIO/INC
          INC       RESHECIO/INC
          INC       RESHEDIO/INC
          INC       RESLABIO/INC
          INC       RESLNKIO/INC
          INC       RESLURIO/INC
          INC       RESLOGIO/INC
          INC       RESCTAIO/INC
          INC       TMPRESIO/INC                                       *I-41336
.
