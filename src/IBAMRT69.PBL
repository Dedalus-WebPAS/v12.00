.*****************************************************************************
.*    Program      : IBAMRT69                                                *
.*    Description  : Incomplete Discharge Summary Statistics Report          *
.*                                                                           *
.*    Author       : ROD      (14/09/92)                                     *
.*                                                                           *
.*    Modifications:                                                         * 
.*****************************************************************************
.* V10.12.01 05/04/2018  Ken Bell       TSK 0854570                          *
.*           Fixed Current Location not using a hospital code lookup         *
.*****************************************************************************
.* V10.09.01 22/02/2017  Thanh Tieu     TSK 0322870                          *
.*           Added Discharge Date Range                                      *
.* V10.05.01 24/02/2015  Ebon Clements  CAR 308024                           *
.*           Removed re defined form field from temp file for oracle         *
.* V10.04.01 14/07/2014  Ebon Clements  CAR 261630                           *
.*           Removed port number from temp file name                         *
.* V10.01.01 10/02/2011  Jill Parkinson CAR 233088                           *
.*           Added pmsvx1af                                                  *
.*  V9.08.01 25/01/2007  Peter Vela CAR 127930                               *
.*           Recompiled for MRTMASFD                                         *
.*****************************************************************************
.* V9.05.01  16/03/2006 Sandra Barcham                                       *
.*           Fixed IBAMRT69 0x001C7B F * I                                   *
.*****************************************************************************
.*        V5.09.B02 19/01/2001 J.Tan                                         *
.*                  Mods to use ACLSS for Unit                               *
.*        V5.09.00  20.12.2000 Bronko Sosic                                  *
.*                  Recompiled for MRTHISFD                                  *
.*        V5.08.02  25.10.2000 J.Tan                                         *
.*                  Recompiled for WEB Report Scheduler                      *
.*        V5.08.01  28/08/2000  Caleb Sharman                                *
.*                  Changed Health Fund variables to be 8 chars              *
.*                  V5.07.02   22/09/1999  Steve Downing                     *
.*                             Fixed display of Doctor code when "?" entered *
.*                  V5.07.01   12/08/1999  Steve Downing                     *
.*                             Mods to use DAYSEP                            *
.*                  V5.07.B02  19/01/1999  Nicole Harrington 507 rebounds    *
.*                             Mods to print century                         *
.*                  22/10/1998  Glenn Berry      5.07 changes                *
.*****************************************************************************
.*                   V5.01.02  07/12/92  DIG                                 *
.*                             Added status code range and the ability to    *
.*                             print the report by Doctor or Unit.           *
.*                   V5.01.03  06/04/93 J.Tan     SRF 120556                 *
.*                             Mods to iserase temp file at end of program   *
.*                   V5.01.04  17/05/1993  Robert Sumsion                    *
.*                             Converted vars and includes to mrt in         *
.*                             standard form.                                *
.*****************************************************************************
.
          INC       STD001FD
          INC       IBASEQFD/INC
          INC       MRTMASFD/INC
          INC       MRTPDSFD/INC
          INC       MRTHISFD/INC
          INC       MRTLOCFD/INC
          INC       PATMA1FD/INC
          INC       PATMI1FD/INC
          INC       PMSVX1FD/INC
          INC       PATDSCFD/INC
          INC       PATDO1FD/INC
          INC       PATCODFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
DATESTRT  DIM       8         * from date
DATESTOP  DIM       8         * to   date
DAYS      FORM      5         * number of days b/w dates
ENDDAY    FORM      3         * ending   date days
ENDYR     FORM      3         * ending   date year
ENDLEAP   FORM      1         * ending   date leap year
ENDCENT   FORM      2         * ending   date century
STRTDAY   FORM      3         * starting date days
STRTYR    FORM      3         * starting date year
STRTLEAP  FORM      1         * starting date leap year
STRTCENT  FORM      2         * starting date century
.
CMDLINE   DIM       80
CODE      DIM       2
CURRLOC   DIM       21
DIM3      DIM       3
DAYSOUT   FORM      5
DISDATE   DIM       10
DOCCODE   DIM       6
DOCNAME   DIM       40
DOCTOR    INIT      " - By Doctor"
ENDCODE   DIM       6
ENDDTE    DIM       8
ENDDTED   DIM       10                      * Display end date (dd/mm/ccyy)
ENDESCOD  DIM       6
ENDESUNI  DIM       6
ENDESSTA  DIM       6
ENDSTAT   DIM       3
ENDUNIT   DIM       3
FLAGHEAD  FORM      1
FNAME     DIM       8
FSTREC    FORM      1
NOPATS    FORM      5
PATNAME   DIM       41
PTCNDCQS  FORM      1
SAVDCODE  DIM       6
SAVUNIT   DIM       3
STATDESC  DIM       20
STDCODE   DIM       6
STDESCOD  DIM       6
STDESUNI  DIM       6
STDESSTA  DIM       6
STRTDTE   DIM       8
STRTDTED  DIM       10                      * Display start date (dd/mm/ccyy)
STSTAT    DIM       3
STUNIT    DIM       3
SUMMONLY  FORM      1
SUMMOUT   FORM      5
TODAY     DIM       8
TOTOUT    FORM      5
TOTPATS   FORM      5
UND50     INIT      "*------------------------------------------------*"
UND67     INIT      "*-------------------------------------------------":
                    "----------------*"
UNIT      INIT      " - By Admission Type"
UNITDSC1  DIM       20
UNITDSC2  DIM       20
UNITLIN1  DIM       8 
UNITLIN2  DIM       8 
ZED20     INIT      "zzzzzzzzzzzzzzzzzzzz"
.
. temp file vars
.
TRKTMP1   IFILE     SQL, FIXED=29, KEY="U1-3,4-9,10-17"
TRKTMP2   IFILE     SQL, FIXED=29, KEY="U4-9,1-3,10-17"
XUNIT     DIM       3       1
XDCODE    DIM       6       4
XADMN     DIM       8      10
XSTATUS   DIM       3      18
XODATE    DIM       8      21
.                          29
PRGID     INIT      "IBAMRT69"
PRGNAM    INIT      "Incomplete Discharge Summary Statistics"
VERSION   INIT      "V12.00.00"
+
.****************************************************************************
.*  ML0000  :  Mainline code                                                *
.****************************************************************************
ML0000    CALL      INIT0000                      * initialisation
.
ML0500    CALL      CRET0000                      * create/erase temp file
.
ML1000    CALL      MENU0000                      * get menu options
          BRANCH    EXIT,ML6000                   * Exit
.
ML2000    CALL      KUNI0000                      * Keyin Unit range
          BRANCH    EXIT,ML0500                   * EXITCHAR
.
ML2100    CALL      KDOC0000                      * Keyin Doctor code range
          BRANCH    EXIT,ML2000                   * EXITCHAR
.
          CALL      KSTA0000                      * Keyin Status Code range
          BRANCH    EXIT,ML2100                   * EXITCHAR
.
          CALL      DATE0000                      * Keyin Discharge Date range
          BRANCH    EXIT,ML2100                   * EXITCHAR
.
          CALL      CONTQST                       * Ok to Continue?
          BRANCH    CEXIT,ML5000,ML2000,ML1000
.
ML5000    CALL      QSUM0000                      * ask 'Summary only?'
          CALL      LOAD0000                      * load data into temp file
.
          CALL      RPRT0000                      * Print report
          GOTO      ML0500
.
ML6000    CALL      KILL0000                      * Remove tempfiles
.
ML9999    CHAIN     PGM
+
.****************************************************************************
.*  INIT0000  :  Initialisation                                             *
.****************************************************************************
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P55:24,"mrtpdsaf"
          OPEN      MRTPDSA1,"mrtpdsaf"
          DISPLAY   *P55:24,"mrtmasaf"
          OPEN      MRTMASA1,"mrtmasaf"
          DISPLAY   *P55:24,"mrthisaf"
          OPEN      MRTHISA1,"mrthisaf"
          DISPLAY   *P55:24,"mrtlocaf"
          OPEN      MRTLOCA1,"mrtlocaf"
          DISPLAY   *P55:24,"patma1af"
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
          DISPLAY   *P55:24,"patmi1af"
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PMSVX1A1,"pmsvx1af"
          DISPLAY   *P55:24,"patdo1af"
          OPEN      PATDO1A1,"patdo1af"
          OPEN      PATDO1A2,"patdo1af"
          DISPLAY   *P55:24,"patdschf"
          OPEN      PATDSCH1,"patdschf"
          DISPLAY   *P55:24,"patcodes"
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P55:24,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,TWENTY1;*247,PTCNDCQS
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,FNAME
.
          PACK      TODAY,CCC,CYY,CMM,CDD
          REP       " 0",TODAY
.
          MOVE      ONE,CNEWDS
.
INIT9999  RETURN
+
.****************************************************************************
.*  MENU0000  :  Main Menu                                                  *
.****************************************************************************
MENU0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = Print by Doctor":
                    *P1:6,*V2LON,"2",*HOFF," = Print by Admission Type":
                    *P1:8,"Select Option : "
.
MENU1000  KEYIN     *P17:8,*DV,UNDLN1:
                    *P17:8,*V2LON,MOPTION;
.
          COMPARE   ZERO,MOPTION
          GOTO      MENU9000 IF EQUAL
.
          BRANCH    MOPTION,MENU8000,MENU8000
.
          BEEP
          GOTO      MENU1000
.
MENU8000  MOVE      ZERO,EXIT
          GOTO      MENU9999
.
MENU9000  MOVE      ONE,EXIT
.
MENU9999  RETURN
+
.****************************************************************************
.*  KUNI0000  :  Keyin range of Doctor Units                                *
.****************************************************************************
KUNI0000  DISPLAY   *P1:10,*EF,"Start Admiss type : ":
                    *P1:11,"End   Admiss Type : "
.
          MOVE      "21",ECOL                     * set up parameters
          MOVE      "10",EVERT
          MOVE      "P ",CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
.
          CALL      PATCODKY
          BRANCH    EXIT,KUNI2000,KUNI9000        * nothing, EXITCHAR input
.
          MOVE      ACODE,STDESUNI                * start unit
          MOVE      ACODE,STUNIT                  * start unit (print)
          DISPLAY   *P29:10,TDESC                 * display description
          MOVE      ACODE,UNITLIN1
          MOVE      TDESC,UNITDSC1
          GOTO      KUNI5000
.
. nothing input for start unit
.
KUNI2000  MOVE      SP3,STUNIT                    * start unit
          MOVE      "Start",STDESUNI              * print var
          MOVE      "Start",UNITLIN1
          MOVE      SP20,UNITDSC1
          DISPLAY   *P21:10,*V2LON,"Start"
.
. Keyin Ending Unit
.
KUNI5000  MOVE      "21",ECOL                     * set up parameters
          MOVE      "11",EVERT
          MOVE      "P ",CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
.
          CALL      PATCODKY
          BRANCH    EXIT,KUNI7000,KUNI9000        * nothing, EXITCHAR input
.
          MOVE      ACODE,ENDUNIT                 * end unit
.
          MATCH     STUNIT,ENDUNIT                * valid range?
          GOTO      KUNI6000 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B,"Invalid range.  ";
          CALL      HITENTER
          GOTO      KUNI0000
.
KUNI6000  MOVE      ACODE,ENDESUNI                * end unit (print)
          DISPLAY   *P29:11,TDESC                 * display description
          MOVE      ACODE,UNITLIN2
          MOVE      TDESC,UNITDSC2
          MOVE      ZERO,EXIT
          GOTO      KUNI9999
.
. nothing input for end unit
.
KUNI7000  MOVE      "zzz",ENDUNIT                 * end unit
          MOVE      "Finish",ENDESUNI             * print var
          MOVE      "Finish",UNITLIN2             
          MOVE      SP20,UNITDSC2
          DISPLAY   *P21:11,*V2LON,"Finish"
          MOVE      ZERO,EXIT
          GOTO      KUNI9999
.
KUNI9000  MOVE      ONE,EXIT                      * EXITCHAR
.
KUNI9999  RETURN
+
.****************************************************************************
.*  KDOC0000  :  Keyin range of Doctor codes                                *
.****************************************************************************
KDOC0000  DISPLAY   *P1:13,*EF,"Start Doctor Code : ":
                    *P1:14,"End   Doctor Code : "
.
          MOVE      "21",ECOL                     * set up parameters
          MOVE      "13",EVERT
          MOVE      SP6,CKYIDEF6
          MOVE      ZERO,CKYIMAND
.
          CALL      PATDOCKY
          BRANCH    EXIT,KDOC2000,KDOC9000        * nothing, EXITCHAR input
.
          MOVE      DOCCODE,STDCODE               * start doctor code
          MOVE      DOCCODE,STDESCOD              * start doctor code (print)
          MOVE      DOCCODE,KEY6
          DISPLAY   *P21:13,*V2LON,DOCCODE        * display Doctor code
          CALL      FDNM0000                      * format doctor name
          DISPLAY   *P29:13,PACFNAME              * display Doctor name
          GOTO      KDOC5000
.
. nothing input for start doctor code
.
KDOC2000  MOVE      SP6,STDCODE                   * start doctor code
          MOVE      "Start",STDESCOD              * print var
          DISPLAY   *P21:13,*V2LON,"Start"
.
. Keyin Ending Doctor code
.
KDOC5000  MOVE      "21",ECOL                     * set up parameters
          MOVE      "14",EVERT
          MOVE      SP6,CKYIDEF3
          MOVE      ZERO,CKYIMAND
.
          CALL      PATDOCKY
          BRANCH    EXIT,KDOC7000,KDOC9000        * nothing, EXITCHAR input
.
          MOVE      DOCCODE,ENDCODE               * end doctor code
.
          MATCH     STDCODE,ENDCODE               * valid range?
          GOTO      KDOC6000 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B,"Invalid range.  ";
          CALL      HITENTER
          GOTO      KDOC0000
.
KDOC6000  MOVE      DOCCODE,ENDESCOD              * end doctor code (print)
          MOVE      DOCCODE,KEY6
          DISPLAY   *P21:14,*V2LON,DOCCODE        * display Doctor code
          CALL      FDNM0000                      * format doctor name
          DISPLAY   *P29:14,PACFNAME              * display Doctor name
          MOVE      ZERO,EXIT
          GOTO      KDOC9999
.
. nothing input for end doctor code
.
KDOC7000  MOVE      "zzzzzz",ENDCODE              * end doctor code
          MOVE      "Finish",ENDESCOD             * print var
          DISPLAY   *P21:14,*V2LON,"Finish"
          MOVE      ZERO,EXIT
          GOTO      KDOC9999
.
KDOC9000  MOVE      ONE,EXIT                      * EXITCHAR
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = Print by Doctor":
                    *P1:6,*V2LON,"2",*HOFF," = Print by Admission Type":
                    *P1:8,"Select Option : ",*V2LON,MOPTION
.
KDOC9999  RETURN
+
.****************************************************************************
.*  KSTA0000  :  Keyin range of Status codes                                *
.****************************************************************************
KSTA0000  DISPLAY   *P1:16,*EF,"Start Status Code : ":
                    *P1:17,"End   Status Code : "
.
          MOVE      "21",ECOL                     * set up parameters
          MOVE      "16",EVERT
          MOVE      "CP",CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
.
          CALL      PATCODKY
          BRANCH    EXIT,KSTA2000,KSTA9000        * nothing, EXITCHAR input
.
          MOVE      ACODE,STDESSTA                * start status code
          MOVE      ACODE,STSTAT                  * start status code (print)
          DISPLAY   *P29:16,TDESC                 * display description
          GOTO      KSTA5000
.
. nothing input for start status code
.
KSTA2000  MOVE      SP3,STSTAT                    * start status code
          MOVE      "Start",STDESSTA              * print var
          DISPLAY   *P21:16,*V2LON,"Start"
.
KSTA5000  MOVE      "21",ECOL                     * set up parameters
          MOVE      "17",EVERT
          MOVE      "CP",CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
.
          CALL      PATCODKY
          BRANCH    EXIT,KSTA7000,KSTA9000        * nothing, EXITCHAR input
.
          MOVE      ACODE,ENDSTAT                 * end status code
.
          MATCH     STSTAT,ENDSTAT                * valid range?
          GOTO      KSTA6000 IF NOT LESS
.
          DISPLAY   *P1:24,*EL,*B,"Invalid range.  ";
          CALL      HITENTER
          GOTO      KSTA0000
.
KSTA6000  MOVE      ACODE,ENDESSTA                * end status code (print)
          DISPLAY   *P29:17,TDESC                 * display description
          MOVE      ZERO,EXIT
          GOTO      KSTA9999
.
. nothing input for end doctor type
.
KSTA7000  MOVE      "zzz",ENDSTAT                 * end doctor type
          MOVE      "Finish",ENDESSTA             * print var
          DISPLAY   *P21:17,*V2LON,"Finish"
          MOVE      ZERO,EXIT
          GOTO      KSTA9999
.
KSTA9000  MOVE      ONE,EXIT                      * EXITCHAR
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = Print by Doctor":
                    *P1:6,*V2LON,"2",*HOFF," = Print by Admission Type":
                    *P1:8,"Select Option : ",*V2LON,MOPTION:
                    *P1:10,*HOFF,"Start Admiss Type :":
                    *P21:10,*V2LON,UNITLIN1:
                    *P29:10,*HOFF,UNITDSC1:
                    *P1:11,"End   Admiss Type :",*P21:11,*V2LON,UNITLIN2:
                    *P29:11,*HOFF,UNITDSC2;
.
KSTA9999  RETURN
.
.******************************************************************************
.*                            DATE0000                                        *
.*                        Keyin The Discharge Date Range                      * 
.******************************************************************************
.
DATE0000  MOVE      "21",CCOL
          DISPLAY   *P1:19,*EF,"Start Date        : ":
                    *P1:20,"End   Date        : ";
.
. ----- Keyin start date -----
.
DATE1000  MOVE      "19",CVERT
          MOVE      CCC,CCENT
          UNPACK    SP6,CYEAR,CMON,CDAY
          CALL      KEYDATE                 * Keyin date
          BRANCH    CQUEST,DATE1000
          BRANCH    OVRCD,DATE1500          * Nothing entered
.
          PACK      STRTDTE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",STRTDTE
.
          CALL      PACDATE                 * Format the start date
          MOVE      CPCDATE,STRTDTED
          DISPLAY   *PCCOL:CVERT,*EL,*V2LON,STRTDTED;
          GOTO      DATE2000
.
. nothing input for start date
.
DATE1500  MOVE      "Start",STRTDTED
          MOVE      SP70,STRTDTE  
          DISPLAY   *PCCOL:CVERT,*V2LON,"Start"
.
. ----- Keyin end date -----
.
DATE2000  MOVE      "20",CVERT
          MOVE      CCC,CCENT
          UNPACK    SP6,CYEAR,CMON,CDAY
          CALL      KEYDATE                 * Keyin date
          BRANCH    OVRCD,DATE2500          * Nothing entered
          BRANCH    CQUEST,DATE2000
.
          PACK      ENDDTE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",ENDDTE
.
          CALL      PACDATE                 * Format the end date
          MOVE      CPCDATE,ENDDTED
          DISPLAY   *PCCOL:CVERT,*EL,*V2LON,ENDDTED;
          GOTO      DATE7000
.
. nothing input for start status code
.
DATE2500  MOVE      "Finish",ENDDTED
          MOVE      Z70,ENDDTE     
          DISPLAY   *PCCOL:CVERT,*V2LON,"Finish"
          GOTO      DATE9999
.
DATE7000  MATCH     STRTDTE,ENDDTE
          IF        @LESS
            DISPLAY   *P1:24,*B,*EL,"End date must equal or ":
                      "after the start date.  ";
            CALL      HITENTER
            GOTO      DATE2000
          ENDIF
.
DATE9999  RETURN

+
.****************************************************************************
.*  QSUM0000  :  ask 'Summary only?'                                        *
.****************************************************************************
QSUM0000  MOVE      ZERO,SUMMONLY                 * assume "N" input
          DISPLAY   *P1:24,*EL,"Print Summary only (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ";
.
QSUM1000  MOVE      "N",ANS
          KEYIN     *P28:24,*DV,ANS:
                    *P28:24,*RV,*V2LON,ANS
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      QSUM5000 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      QSUM9999 IF EQUAL
          BEEP
          GOTO      QSUM1000
.
QSUM5000  MOVE      ONE,SUMMONLY                  * print summary only
.
QSUM9999  RETURN
+
.****************************************************************************
.*  LOAD0000  :  Load data into temp file                                   *
.****************************************************************************
LOAD0000  DISPLAY   *P1:24,*EL,*P30:24,"Loading... [        ]";
.
          MOVE      SP8,KEY8
          CALL      RSMRPDS1
LOAD1000  CALL      RKMRPDS1
          BRANCH    OVRCD,LOAD9999
.
          DISPLAY   *P42:24,MRPDADMN;
.
. make sure on admission file
.
          PACK      KEY8,MRPDADMN
          CALL      RDMISS1
          BRANCH    OVRCD,LOAD1000
.
. check for an incomplete status
.
          PACK      KEY5,ANSC,ANSP,MRPDSTAT
          CALL      RDCODE1
          BRANCH    OVRCD,LOAD1000                * ignore
.
          MATCH     "C",TCINDC1                   * complete?
          GOTO      LOAD1000 IF EQUAL             * yes
.
. check doctor CODE in range
.
          MATCH     STDCODE,MRPDDOCT
          GOTO      LOAD1000 IF LESS
.
          MATCH     MRPDDOCT,ENDCODE
          GOTO      LOAD1000 IF LESS
.
. get unit
.
          MOVE      ADOCTA,KEY6
          CALL      RDDOCT1
          BRANCH    OVRCD,LOAD1000                * ignore
.
. check unit in range
.
.         MATCH     "IBARSH99",PGM
.         IF        @EQUAL
            MATCH     STUNIT,ACLSS
            GOTO      LOAD1000 IF LESS
.
            MATCH     ACLSS,ENDUNIT
            GOTO      LOAD1000 IF LESS
.         ELSE
.           MATCH     STUNIT,DRTYPE
.           GOTO      LOAD1000 IF LESS
.
.           MATCH     DRTYPE,ENDUNIT
.           GOTO      LOAD1000 IF LESS
.         ENDIF
.
. check status in range
.
          MATCH     STSTAT,MRPDSTAT
          GOTO      LOAD1000 IF LESS
.
          MATCH     MRPDSTAT,ENDSTAT
          GOTO      LOAD1000 IF LESS
.
. get discharge date
.
          PACK      KEY8,AADMNO
          CALL      RDDSCH1
          BRANCH    OVRCD,LOAD1000
.
          MATCH     STRTDTE,DDATE                 * check discharge date range
          GOTO      LOAD1000 IF LESS
.
          MATCH     DDATE,ENDDTE
          GOTO      LOAD1000 IF LESS
.
          PACK      XODATE,DDATE
          REP       " 0",XODATE                   * discharge date
.
. write this record to the temp file
.
          DISPLAY   *P42:24,*V2LON,MRPDADMN;
.
          MOVE      MRPDADMN,XADMN
          MOVE      MRPDDOCT,XDCODE
.
.         MATCH     "IBARSH99",PGM
.         IF        @EQUAL
            MOVE      ACLSS,XUNIT
.         ELSE
.           MOVE      DRTYPE,XUNIT
.         ENDIF
          MOVE      MRPDSTAT,XSTATUS
.
          PACK      KEY17,XUNIT,XDCODE,XADMN
          CALL      WRTMP1
          GOTO      LOAD1000
.
LOAD9999  RETURN
+
.****************************************************************************
.*  RPRT0000  :  Print report from temp file                                *
.****************************************************************************
RPRT0000  DISPLAY   *P1:24,*EL,*P35:24,"Printing...";
.
          CALL      IBACLOCK
          MOVE      ZERO,FSTREC
          MOVE      ZERO,CPAGENO
          MOVE      ONE,CNOUNDLN
          MOVE      "60",CLNO                     * force new page
          MOVE      FALSE,FLAGHEAD
.
          BRANCH    SUMMONLY,RPRT9500             * print summury only?
.
          MOVE      ZERO,NOPATS
          MOVE      ZERO,SUMMOUT
.
          MOVE      "zzz",SAVUNIT                 * init to dummy string
          MOVE      "zzzzzz",SAVDCODE             * init to dummy string
.
          PACK      KEY17,SP20
.
.------ position on the temp file depending on which option we are running ----
.
          IF        MOPTION = 1
            CALL      RSTMP2
          ELSE
            CALL      RSTMP1
          ENDIF
.
.------ read through the temp file depending on which option we are running ---
.
RPRT0500  IF        MOPTION = 1
            CALL      RKTMP2
          ELSE
            CALL      RKTMP1
          ENDIF
          BRANCH    OVRCD,RPRT9000                * no more records
.
. check if we need a new page
.
          COMPARE   "45",CLNO
          GOTO      RPRT1000 IF LESS
.
. we need a new page
.
          LOAD      CPHDROPT,MOPTION,DOCTOR,UNIT
          CALL      HEAD132
          PRINT     *40,"Admiss Type range : ",STDESUNI,"     to  ",ENDESUNI:
                    *N,*40,"Doctor Code range : ",STDESCOD,"     to  ",ENDESCOD:
                    *N,*40,"Status Code range : ",STDESSTA,"     to  ",ENDESSTA:
                    *N,*40,"Discharge Date    : ",STRTDTED," to  ",ENDDTED
.
.------ see if we have the first record ------
.
          IF        FSTREC = 0
            CALL      PHED0000                      * print headings
.
            MOVE      TEN2,CLNO
            GOTO      RPRT5000
          ELSE
            MOVE      TRUE,FLAGHEAD
            MOVE      EIGHT,CLNO
          ENDIF
.
. check if we need to print a new unit or doctor
.
RPRT1000  IF        MOPTION = 1
            MATCH     XDCODE,SAVDCODE
            GOTO      RPRT4000 IF EQUAL
          ELSE
            MATCH     XUNIT,SAVUNIT
            GOTO      RPRT4000 IF EQUAL
          ENDIF
.
. print a new unit or new doctor
.
          CALL      UND132                        * print underlines
          PRINT     *1,"Sub Totals:",*1,"Sub Totals:   No. of patients  : ":
                    NOPATS,*N,*15,"Days Outstanding : ",SUMMOUT,*N
          CALL      PHED0000
.
          IF        MOPTION = 1
            MOVE      XDCODE,SAVDCODE               * save doctor code
            MOVE      "zzz",SAVUNIT                 * init unit
          ELSE
            MOVE      XUNIT,SAVUNIT                 * save unit
            MOVE      "zzzzzz",SAVDCODE             * init doctor code
          ENDIF
.
          MOVE      ZERO,NOPATS
          MOVE      ZERO,SUMMOUT
          ADD       SEVEN,CLNO
          MOVE      FALSE,FLAGHEAD
          GOTO      RPRT5000
.
. check if we need to print a new doctor code or unit
.
RPRT4000  IF        FLAGHEAD = TRUE
            CALL      PHED0000                      * print headings
            MOVE      FALSE,FLAGHEAD
            ADD       FOUR,CLNO
          ENDIF
          IF        MOPTION = 1
            MATCH     XUNIT,SAVUNIT
            GOTO      RPRT5000 IF EQUAL
          ELSE
            MATCH     XDCODE,SAVDCODE
            GOTO      RPRT5000 IF EQUAL
          ENDIF
.
. print a new doctor code or unit
.
          CALL      UND132                        * print underlines
          CALL      PTAB0000
          MOVE      "zzzzzz",SAVDCODE             * init doctor code
          MOVE      "zzz",SAVUNIT                 * init unit
          ADD       FOUR,CLNO
.
RPRT5000  CALL      GDAT0000                      * get data for printing
.
. print a line of data
.
          PRINT     *1,"| ",AURNO,*12,"| ",PATNAME,*56,"| ",XSTATUS,SP2:
                    STATDESC,*84,"|",DISDATE,*96,"|   ",DAYSOUT,*108,"| ":
                    CURRLOC,*132,"|"
.
          ADD       ONE,CLNO                      * increment line counter
          MOVE      XDCODE,SAVDCODE               * save doc code just printed
          MOVE      XUNIT,SAVUNIT                 * save unit just printed
          MOVE      ONE,FSTREC
.
. update for sub-totals
.
          MOVE      XODATE,DATESTRT               * set up from date
          MOVE      TODAY,DATESTOP                * set up to date
          CALL      CDAY0000                      * calc. days outstanding
          ADD       DAYS,SUMMOUT
          ADD       ONE,NOPATS
          GOTO      RPRT0500
.
RPRT9000  CALL      UND132                        * print underlines
          PRINT     *1,"Sub Totals:",*1,"Sub Totals:   No. of patients  : ":
                    NOPATS,*N,*15,"Days Outstanding : ",SUMMOUT,*N
          ADD       FOUR,CLNO
.
RPRT9500  CALL      SUMM0000                      * print summary
          PRINT     *N,*1,"*** End of report ***" 
.
RPRT9999  RETURN
+
.****************************************************************************
.*  GDAT0000  :  Get data for printing                                      *
.****************************************************************************
GDAT0000  MOVE      ZEROUR,AURNO                  * get U/R Number
          PACK      KEY8,XADMN
          CALL      RDMISS1
.
          PACK      KEY8,AURNO                    * get patient name
          CALL      RDMAST1
.
          MOVE      PTITL,PACTITLE 
          MOVE      PGNAME,PACGNAME
          MOVE      PSNAME,PACSNAME
          MOVE      TWO,PACFRMT
.
          CALL      PACNAME
          MOVE      PACFNAME,PATNAME
.
          MOVE      SP20,TDESC                    * get status description
          PACK      KEY5,ANSC,ANSP,XSTATUS
          CALL      RDCODE1
          MOVE      TDESC,STATDESC
.
          MOVE      SP8,DDATE
          PACK      KEY8,XADMN
          CALL      RDDSCH1
.
          UNPACK    DDATE,CCENT,CYEAR,CMON,CDAY         * get discharge date
          CALL      PACDATE
          MOVE      CPCDATE,DISDATE
.
          MOVE      XODATE,DATESTRT               * set up from date
          MOVE      TODAY,DATESTOP                * set up to date
          CALL      CDAY0000                      * calc. days outstanding
          MOVE      DAYS,DAYSOUT
.
. get current location
.
          MOVE      SP20,CURRLOC
          PACK      KEY20,AURNO,PMVXMHOS,ZED20
          CALL      RSMRMAS1
          CALL      RPMRMAS1
          BRANCH    OVRCD,GDAT9999
.
          MATCH     AURNO,MRMAURNO
          GOTO      GDAT9999 IF NOT EQUAL
.
          MATCH     PMVXMHOS,MRMAHHOS
          GOTO      GDAT9999 IF NOT EQUAL
.
          PACK      KEY26,MRMAKEY,ZED20
          CALL      RSMRHIS1
          CALL      RPMRHIS1
          IF        OVRCD=1
            MOVE      MRMAHLOC,MRHILOC      * moves home loc into file
            MOVE      MRMAHHOS,MRHIDHOS     * moves home hospital into file
.
            MATCH     SP70,MRMACLOC
            IF        !@EQUAL
              MOVE      MRMACLOC,MRHILOC    * use master record Current Location
              MOVE      MRMACHOS,MRHIDHOS   * use master record Current Hospital
            ENDIF
          ELSE
            MATCH     MRMAKEY,MRHIKEY
            IF        !@EQUAL
              MOVE      MRMAHLOC,MRHILOC    * moves home loc into file
              MOVE      MRMAHHOS,MRHIDHOS   * moves home hospital into file
.
              MATCH     SP70,MRMACLOC
              IF        !@EQUAL
                MOVE      MRMACLOC,MRHILOC  * use master record Current Location
                MOVE      MRMACHOS,MRHIDHOS * use master record Current Hospital
              ENDIF
            ENDIF
          ENDIF
.
          MOVE      SP30,MRLODESC
          PACK      KEY7,MRHIDHOS,MRHILOC,SP10
          CALL      RDMRLOC1
          MOVE      MRLODESC,CURRLOC
.         
GDAT9999  RETURN
+
.****************************************************************************
.*  SUMM0000  :  Print Summary                                              *
.****************************************************************************
SUMM0000  COMPARE   "35",CLNO                     * need a new page?
          GOTO      SUMM0500 IF LESS
.
          LOAD      CPHDROPT,MOPTION,DOCTOR,UNIT
          CALL      HEAD132
          PRINT     *40,"Admiss Type range : ",STDESUNI,"     to  ",ENDESUNI:
                    *N,*40,"Doctor Code range : ",STDESCOD,"     to  ",ENDESCOD:
                    *N,*40,"Status Code range : ",STDESSTA,"     to  ",ENDESSTA:
                    *N,*40,"Discharge Date    : ",STRTDTED," to  ",ENDDTED
.
.------ print the report heading details depending on which option ------
.------ we are running ------
.
SUMM0500  PRINT     *N,*N,*1,"SUMMARY",*1,"SUMMARY"
          IF        MOPTION = 1
            PRINT     UND67
            PRINT     *1,"| Doctor",*44,"| No. Pats.| Days Out. |"
            PRINT     UND67
          ELSE
            PRINT     UND50
            PRINT     *1,"| Admission Type",*28,"| No. Pats.| Days Out.|"
            PRINT     UND50
          ENDIF
.
          MOVE      ZERO,NOPATS
          MOVE      ZERO,TOTPATS
          MOVE      ZERO,SUMMOUT
          MOVE      ZERO,TOTOUT
          MOVE      ZERO,FSTREC
          MOVE      "zzz",SAVUNIT
          MOVE      "zzzzzz",SAVDCODE
          PACK      KEY17,SP20
.
.------ position on the temp file depending on which option we are running ----
.
          IF        MOPTION = 1
            CALL      RSTMP2
          ELSE
            CALL      RSTMP1
          ENDIF
.
.------ read through the temp file depending on which option we are running ---
.
SUMM1000  IF        MOPTION = 1
            CALL      RKTMP2
          ELSE
            CALL      RKTMP1
          ENDIF
          BRANCH    OVRCD,SUMM9000
.
.------ see if we have the first record ------
.
          IF        FSTREC = 0
            GOTO      SUMM2000
          ENDIF
.
.------ see if we have the same unit or doctor depending on which option ------
.------ we are running ------
.
          IF        MOPTION = 1
            MATCH     XDCODE,SAVDCODE             * same doctor?
          ELSE
            MATCH     XUNIT,SAVUNIT               * same unit?
          ENDIF
          IF        @EQUAL
SUMM2000    ADD       ONE,NOPATS                  * increment no. pats
            MOVE      XODATE,DATESTRT             * set up from date
            MOVE      TODAY,DATESTOP              * set up to date
            CALL      CDAY0000                    * calc. days outstanding
            ADD       DAYS,SUMMOUT
            ADD       ONE,TOTPATS                 * increment for GRAND totals
            ADD       DAYS,TOTOUT                 * increment for GRAND totals
            MOVE      XUNIT,SAVUNIT
            MOVE      XDCODE,SAVDCODE
            MOVE      ONE,FSTREC
            GOTO      SUMM1000
          ELSE
.
.------ print the relevant details depending on which option we are running ---
.
            IF        MOPTION = 1
              MOVE      "<< Missing >>",DOCNAME
              MOVE      SAVDCODE,KEY6
              CALL      RDDOCT1
              IF        OVRCD = 0
                MOVE      DTITL,PACTITLE
                MOVE      DGNAME,PACGNAME
                MOVE      DSNAME,PACSNAME
                MOVE      TWO,PACFRMT
                CALL      PACNAME
                MOVE      PACFNAME,DOCNAME
              ENDIF
              PRINT     *1,"| ",DOCNAME,*44,"|   ",NOPATS,*56,"|   ":
                        SUMMOUT,*67,"|"
            ELSE
              MOVE      "<< Missing >>",TDESC
              PACK      KEY5,ANSP,SP1,SAVUNIT
              CALL      RDCODE1
              PRINT     *1,"| ",SAVUNIT,SP1,TDESC,*28,"|   ",NOPATS,*39,"|   ":
                        SUMMOUT,*50,"|"
            ENDIF
.
            MOVE      ONE,NOPATS
            MOVE      XODATE,DATESTRT             * set up from date
            MOVE      TODAY,DATESTOP              * set up to date
            CALL      CDAY0000                    * calc. days outstanding
            MOVE      DAYS,SUMMOUT
            ADD       ONE,TOTPATS                 * increment for GRAND totals
            ADD       DAYS,TOTOUT                 * increment for GRAND totals
            MOVE      XUNIT,SAVUNIT
            MOVE      XDCODE,SAVDCODE
            GOTO      SUMM1000
          ENDIF
.
.------ there are no more records left so print the last lot of details ------
.------ depending on which option we are running ------
.
SUMM9000  IF        MOPTION = 1
            MOVE      "<< Missing >>",DOCNAME
            MOVE      SAVDCODE,KEY6
            CALL      RDDOCT1
            IF        OVRCD = 0
              MOVE      DTITL,PACTITLE
              MOVE      DGNAME,PACGNAME
              MOVE      DSNAME,PACSNAME
              MOVE      TWO,PACFRMT
              CALL      PACNAME
              MOVE      PACFNAME,DOCNAME
            ENDIF
            PRINT     *1,"| ",DOCNAME,*44,"|   ",NOPATS,*56,"|   ":
                      SUMMOUT,*67,"|"
            PRINT     UND67
            PRINT     *1,"| Totals",*44,"|   ",TOTPATS,*56,"|   ",TOTOUT,*67,"|"
            PRINT     UND67
          ELSE
            MOVE      "<< Missing >>",TDESC
            PACK      KEY5,ANSP,SP1,SAVUNIT
            CALL      RDCODE1
            PRINT     *1,"| ",SAVUNIT,SP1,TDESC,*28,"|   ",NOPATS,*39,"|   ":
                      SUMMOUT,*50,"|"
            PRINT     UND50
            PRINT     *1,"| Totals",*28,"|   ",TOTPATS,*39,"|   ",TOTOUT,*50,"|"
            PRINT     UND50
.
SUMM9999  RETURN
+
.****************************************************************************
.*  PHED0000  :  Print Headings depending on which option we are running    *
.****************************************************************************
PHED0000  IF        MOPTION = 1
            MOVE      "<< Missing >>",DOCNAME
            MOVE      XDCODE,KEY6
            CALL      RDDOCT1
            IF        OVRCD = 0
              MOVE      DTITL,PACTITLE
              MOVE      DGNAME,PACGNAME
              MOVE      DSNAME,PACSNAME
              MOVE      TWO,PACFRMT
              CALL      PACNAME
              MOVE      PACFNAME,DOCNAME
            ENDIF
.
            PRINT     *N,*1,"Doctor : ",DOCNAME:
                      *1,"Doctor : ",DOCNAME
          ELSE
            MOVE      "<< Missing >>",TDESC
            PACK      KEY5,ANSP,SP1,XUNIT
            CALL      RDCODE1
.
            PRINT     *N,*1,"Admission Type : ",XUNIT,SP3,TDESC:
                      *1,"Admission Type : ",XUNIT,SP3,TDESC
          ENDIF
.
            CALL      PTAB0000                      * print table headings
          ENDIF
.
PHED9999  RETURN
+
.****************************************************************************
.*  PTAB0000  :  Print Table Heading                                        *
.****************************************************************************
PTAB0000  IF        MOPTION = 1
            MOVE      "<< Missing >>",TDESC
            PACK      KEY5,ANSP,SP1,XUNIT
            CALL      RDCODE1
.
            PRINT     *N,"Admission Type : ",XUNIT,SP3,TDESC
          ELSE
            MOVE      "<< Missing >>",PACFNAME
            MOVE      XDCODE,KEY6
            CALL      FDNM0000                      * format doctor name
.
            PRINT     *N,"Doctor : ",PACFNAME
          ENDIF
.
          CALL      UND132
          PRINT     *1,"|   U/R    | Patient Name",*56,"| Status",*84,"| ":
                    "Dis. Date | Days Out. | Current Location",*132,"|"
          CALL      UND132
.
PTAB9999  RETURN
+
.****************************************************************************
.*  FDNM0000  :  Format doctor name            Requires :  KEY6             *
.****************************************************************************
FDNM0000  CALL      RDDOCT1
          BRANCH    OVRCD,FDNM9999
.
          MOVE      DTITL,PACTITLE 
          MOVE      DGNAME,PACGNAME
          MOVE      DSNAME,PACSNAME
          MOVE      TWO,PACFRMT
.
          CALL      PACNAME
.
FDNM9999  RETURN
+
.********************************************************************
.*                  CDAY0000                   Called by : DATE0000 *
.*        Get the number of days between two dates                  *
.*        Returns : DAYS          days between two dates            *
.********************************************************************
.
.         turn the starting date into julian date
.
CDAY0000  DAYSEP    DATESTRT,DATESTOP,DAYS
.
CDAY9999  RETURN
+
.*************************************************************************
.*  KILL0000  :  erase temp flie                                         *
.*************************************************************************
KILL0000  CLOSE     TRKTMP1
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FNAME,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
KILL9999  RETURN
+
.*************************************************************************
.*  CRET0000  :  create temp file                                        *
.*************************************************************************
CRET0000  CALL      KILL0000 
          CLEAR     CMDLINE 
          APPEND    "isbuild ",CMDLINE
          APPEND    FNAME,CMDLINE
          APPEND    " 29 U1-3,4-9,10-17 U4-9,1-3,10-17",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          OPEN      TRKTMP1,FNAME
          OPEN      TRKTMP2,FNAME
.
CRET9999  RETURN
+
.*************************************************************************
.*  Temp IO's                                                            *
.*************************************************************************
RSTMP1    RESET     KEY17
          READ      TRKTMP1,KEY17;;
          RETURN
.
RKTMP1    MOVE      ZERO,OVRCD
          READKS    TRKTMP1;XUNIT,XDCODE,XADMN,XSTATUS,XODATE
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMP1    RESET     KEY17
          WRITE     TRKTMP1,KEY17;XUNIT,XDCODE,XADMN,XSTATUS,XODATE
          RETURN
.
RSTMP2    RESET     KEY17
          READ      TRKTMP2,KEY17;;
          RETURN
.
RKTMP2    MOVE      ZERO,OVRCD
          READKS    TRKTMP2;XUNIT,XDCODE,XADMN,XSTATUS,XODATE
          GOTO      OVERCOND IF OVER
          RETURN
.
          INC       STD001IO
          INC       PATCODKY
          INC       PATDOCKY
          INC       TFILENAM
.
          INC       IBASEQIO/INC
          INC       MRTMASIO/INC
          INC       MRTPDSIO/INC
          INC       MRTHISIO/INC
          INC       MRTLOCIO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PMSVX1IO/INC
          INC       PATDO1IO/INC
          INC       PATDSCIO/INC
          INC       PATCODIO/INC
          INC       WEBERRIO/INC
