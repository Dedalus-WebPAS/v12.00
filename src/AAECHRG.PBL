.
.AAECHRG.PBL
.-----------
.         This include controls the charging of Accident & Emergency Patients.
.         Has four main parts :
.            PRTCHG   - Print Person Responsible for Account details
.                       if the patient is chargable.
.                       Called by IBAAAE11
.            INPCHG   - Determine if the Person Responsible for Account details
.                       should be input.
.                       Called by IBAAAE01
.            CNGCHG   - Determine if Compensation Code changed, and update
.                       charge if appropriate. This will only do something
.                       when changing details, not when posting new visits.
.                       Called by IBAAAE01
.            UPDCHG   - Determine if patient has already been charged, and post
.                       a new charge if not.
.                       Called by IBAAAE02, IBAAAE03, IBAAAE05
.            ACHRG000 - Determine if a patient is chargable, and what the
.                       charge is.
.                       Called by this include and IBAAAE01, IBAAAE11
.
.         The parameter AECNFTYP determines which charging file is to be used.
.         AECNFTYP : 0 = PATNIPFD
.                    1 = AAEBCHFD
.
.         The indicator HESYST handles the branching to the appropriate charging
.         HESYST : 0 = No Fee
.                  1 = Facility Fee
.                  2 = NZ Facility Fee
.                  3 = Triage Fee
.
.         Used in        : IBAAAE01, IBAAAE02, IBAAAE05, IBAAAE11
.
.         Files Required : AAEDE1FD/INC       AAEDE1IO/INC
.                          AAEDETFD/INC   AAEIODET/INC
.
.                          PATCODFD/INC       PATCODIO/INC
.                          PATIPEFD/INC       PATIPEIO/INC
.                          PATMA1FD/INC       PATMA1IO/INC
.                          PATRE1FD/INC       PATRE1IO/INC
.                          PATVISFD/INC       PATVISIO/INC
.
.         Author         : Karin Peak
.
.         Date Written   : 30/06/89
.
.******************************************************************************
.         V12.00.01 15.05.2025  DA Sarkies     TSK 0955096
.                   Updated for Alpha-Numeric Visit Number
.----------------------------------------------------------------------------
.         V11.05.01 29/11/2024  Thanh T        TSK 0939466
.                   Added Distance in kms field
.----------------------------------------------------------------------------
.         V11.02.02 02/06/2022 J.Tan           TSK 0915626
.                   Mod to check if ABF Invoice has been raised
.         V11.02.01 17/08/2021 J.Tan           TSK 0902652
.                   Mod to set pmmiserv to 1 instead of zero
.         V11.01.02 08/11/2021 J.Tan           TSK 0880410
.                   Added PENDHOSP and PENDSYST for PATIPERH
.         V11.01.02  31/08/2021  J.Tan           TSK 0905305
.                   Mod for AECC Class (2021/2022 changes)
.         V11.01.01 18/02/2021  J.Tan           TSK 0888639
.                   Added PMMITMNO - Theatre Team no
.         V10.14.01 28/06/2019  J.Tan           TSK 0857392
.                   Mod for ABF invoice
.         V10.13.03 23/10/2018  Tracey Nguyen    TSK 0859743                   
.                   Added PMMIHOSI - Hopsital Indicator on PMSMTIFD           
.         V10.13.02 19/09/2018  J.Tan        TSK 0863727
.                   Added Restrictive Override code
.         V10.13.01 21/08/2017  J.Tan        TSK 0859742
.                   Added ECLIPSE new fields from pmsmtiaf
.         V10.11.01 31/08/2017  J.Tan        TSK 0837479
.                   Added PMMICTYP - Consumption Type
.         V10.05.01 04/08/2014  Peter Vela   CAR 302164
.                   Added PMMIRBRS - Rebate Reason CAT Rr
.         V10.04.01 17/01/2014  J.Tan        CAR 295008
.                   Mods to set PMMIDTCR,PMMITMCR,PMMIIDCR
.                   20/01/2014  J.Tan        CAR 249828
.                   Added PMMIPMBS - Patient MBS Team and Counter
.         V10.03.01 15/05/2012 J.Tan               CAR 255708
.                   Mods checking for Hold Invoices From Date
.         V10.01.01 06/12/2010  Ebon Clements     CAR 233927
.                   Added reason for hold update to invoice pending
.         V10.00.01 18/08/2010 J.Tan          CAR 222031
.                   Mods to set PMMIDUPD and PMMITUPD
.         V9.12.01  08/01/2010 J.Tan          CAR 206736
.                   Mods only checking for facility fee if HESYST<>0
.         V9.10.02  04/08/2008 J.Tan          CAR 175246
.                   Put back routine for checking if facility had been charged
.                   for Cabrini
.         V9.10.01  02/05/2008 J.Tan          CAR 167579
.                   Removed checking if facility had been charged for SVHM
.         V9.09.02  14/12/2007 Jill Habasque  CAR 158207
.                   Removed open of patipenf
.         V9.09.01  31/10/2007 J.Tan       CAR 151863
.                   Mods for Triage fee
.         V9.08.01  07/05/2007 Peter Vela CAR SJOG ED Billing
.                   Initialised new pmsmtiaf variables
.         V9.03.04  18/06/2004 Ebon Clements CAR 50825              
.                   Added read before write to invoice pending file in CHGAE000
.         V9.03.03  11/06/2004 J.Tan  CAR 50035              
.                   Mods to set mechanical vent var from pmsmtiaf
.         V9.03.02  26/05/2004 J.Tan  CAR 50123
.                   Mods to check zero transaction number              
.         V9.03.01  20/10/2003 J.Tan  CAR 44172
.                   Mods to use Misc.theatre item file pmsmtiaf 
.         V9.02.02  06/06/2001 J.Tan
.                   Mods to check if record exists in aaedtr before writes
.         V9.02.01  08/11/2001 J.Tan
.                   Changed patnip file
.******************************************************************************
.* Mods:  V5.07.B02 13/01/1999  Nicole Harrington  507 rebounds - Error 47    *
.*                  Fixed ADADATE being written over by ATDDATE               *
.*        V5.07     06/10/98  Jim Stathopoulos                                *
.*                  507 Changes                                               *
.******************************************************************************
.         V5.00 30/06/89 K.Peak
.                   Include written to incorporate N.Z's charging
.         V5.01 21/07/89 K.Peak
.                   Changed the HESYST indicator
.         V5.01.01  12/09/89      M.Ohleiter
.                   Fixed return to IBAAAE05 (Admit patient ? not working)
.         V5.01.02  21/09/89      Graeme Williams
.                   Fixed up NZ billing. Was not what they really wanted.
.                   They basically want Modbury biling, but using PVIRESI 
.                   instead of PTYPE whenever this is possible.
.         V5.01.03  15/05/1991    Justin Coates       Quote 6943 SRF 108605
.                   Added setting the value of NBINDC according to AECNCHRS
.         V5.01.04  09/01/1992    Graeme Williams
.                   Added AECNFTYP for New Zealand charging. In the process,
.                   I have removed a lot of useless code, and cleaned up some
.                   of the routines. I have also added comments to the sections
.                   that I could work out what they were trying to do.
.         V5.01.05  05/11/1992    Graeme Williams
.                   Initialise ATSERVS when posting miscellaneous charges
.
.         PRTCHG
.         ------
.         This part of the include is responsible for the printing of person 
.         responsible for account details
.
PRTCHG    CALL      ACHRG000                 * check if chargable
          BRANCH    EXIT,PRTCHG99            * no chargable
.
.         Person Resposible for Account Data to Print
.
          MOVE      ADAURNO,PURNO
          MOVE      ADANUMB,PKADMN
.
          MOVE      PKADMN,KEY8
          CALL      RDRESP1
.
          PRINT     *1,"------- Person Responsible for Account -------":
          *N,"Name              : ",PKNAME:
          *N,"Address Line 1    : ",PKADD1:
          *N,"Address Line 2    : ",PKADD2:
          *N,"Address Line 3    : ",PKSUBR:
          *N,"Postcode          : ",PKPOST:
          *N,"Telephone (P)     : ",PKTELEP:
          *N,"Telephone (B)     : ",PKTELEB:
          *N,"Relationship      : ",PKRELP
.
          ADD       NINE,CLNO
.
          PRINT     *1,"------- Insurance Details   -------":
          *N,"Name              : ",ADAEMPL:
          *N,"Address Line 1    : ",ADAADD1:
          *N,"Address Line 2    : ",ADAADD2:
          *N,"Address Line 2    : ",ADASUBR:
          *N,"Postcode          : ",ADAPOST:
          *N,"Telephone (P)     : ",ADATELE:
          *N,"Contact           : ",ADACONT
.
          ADD       NINE,CLNO
.
          CALL      PRTAAECM     * Print comments 
PRTCHG99  RETURN
.
. *****************************************************************************
. * CHGAE000   : Change the charging for one A & E patient                    *
. *****************************************************************************
.         
CHGAE000  CALL      ABFX0000               * Check for ABF funding
          BRANCH    EXIT,CHGAE600          * ABF Funding
.
          CALL      CFAC0000               * Check if Fee facility been charged
          BRANCH    EXIT,CHGAE999          * facility fees already been charged
.
.....     OPEN      PATIPEN1,"patipenf"
.         
.         Loop through the debtor transactions and try to locate the standard
.         charge.    
.          
          PACK      KEY14,ADANUMB,SP20       * loop through all recs for pat.
          CALL      RSPMMTI1
CHGAE050  CALL      RKPMMTI1                 * get the next record
          BRANCH    OVRCD,CHGAE500           * not found
.
          MOVE      ADANUMB,DADANUMB
          MATCH     DADANUMB,PMMIVISN        * correct patient
          GOTO      CHGAE500 IF NOT EQUAL    * no, no charge found
.
          MATCH     SP4,PMMIITEM             * standard charge item ?
          GOTO      CHGAE050 IF NOT EQUAL    * no, ignore record
.
.         We have found the standard charge for this patient.
.         Now determine the new charge, and update as appropriate
.
          CALL      ACHRG000                 * get the standard charge
          BRANCH    EXIT,CHGAE200,CHGAE200   * no standard charge
.
          PACK      PMMIDUPD,CCC,CYY,CMM,CDD
          REP       " 0",PMMIDUPD
          CALL      IBACLOCK
          MOVE      CTIMEIS,PMMITUPD
          MOVE      PASSCODE,PMMIWUSR
          CALL      UPPMMTI1                 * update with the new charge
          GOTO      CHGAE999
.
.         Patient was chargeable, but there is no longer a charge for them.
.         Therefore, delete the charges that was there
.
CHGAE200  PACK      KEY14,ADANUMB,SP70       * loop through uninvoiced data
CHGAE210  CALL      RSPMMTI1
CHGAE220  CALL      RKPMMTI1                 * get the next record
          BRANCH    OVRCD,CHGAE290           * no more records, finish
.
          MOVE      ADANUMB,DADANUMB
          MATCH     DADANUMB,PMMIVISN        * correct patient
          GOTO      CHGAE290 IF NOT EQUAL    * no, finished
.
          MATCH     SP4,PMMIITEM             * standard charge item ?
          GOTO      CHGAE220 IF NOT EQUAL    * no, ignore record
.
          PACK      KEY14,PMMIVISN,PMMITRAN
          CALL      DEPMMTI1
          GOTO      CHGAE210
.
.         Finally, remove this patient from the list of invoices pending
.
CHGAE290  IF        PTCNIPEN=0
            MOVE      ADANUMB,KEY8
            CALL      DEIPEN1
          ENDIF
.
          GOTO      CHGAE999
.
.         No standard charge found for this patient. Check to see if they
.         have changed from non-chargeable to chargable
.
CHGAE500
.           MATCH     SP5,ADASEEN              * has the patient been seen yet
.           GOTO      CHGAE999 IF EQUAL        * no, don't charge them yet
.
          CALL      ACHRG000                 * get the standard charge
          BRANCH    EXIT,CHGAE999,CHGAE999   * no standard charge
.
CHGAE510  MOVE      ADANUMB,KEY8
          CALL      TRVISA1                  * get the next transaction no.
          COMPARE   ZERO,PVITRAN
          GOTO      CHGAE510 IF EQUAL
.
          MOVE      ADANUMB,PMMIVISN
          MOVE      PVITRAN,PMMITRAN         * set transaction number
.
          PACK      KEY14,PMMIVISN,PMMITRAN
          CALL      RAPMMTI1
          COMPARE   ZERO,OVRCD
          GOTO      CHGAE510 IF EQUAL
.
          MOVE      "0",PMMIMVBR
          MOVE      SP70,PMMICNTR
          MOVE      SP70,PMMISUNQ
          MOVE      SP70,PMMIINCT
          MOVE      SP70,PMMISUBN
          MOVE      ADADOCT,PMMIEDAD
          MOVE      SP70,PMMISVTM
          MOVE      SP70,PMMICCON
          MOVE      ZERO,PMMISCHF
          MOVE      SP70,PMMIITYP
          MOVE      SP70,PMMIDUPD
          MOVE      SP70,PMMITUPD
          MOVE      SP70,PMMIWUSR
          PACK      PMMIDTCR,CCC,CYY,CMM,CDD
          REP       " 0",PMMIDTCR
          CALL      IBACLOCK
          MOVE      CTIMEIS,PMMITMCR
          MOVE      PASSCODE,PMMIIDCR
          MOVE      SP70,PMMITMNO
          MOVE      SP70,PMMIPMBS
          MOVE      SP70,PMMIRBRS
          MOVE      SP70,PMMICTYP
.
          PACK      PMMIACOI,SP70       * After Care Override Indicator
          PACK      PMMIDSOV,SP70       * Duplicate Service Override
          PACK      PMMISTXT,SP70       * Service Text
          PACK      PMMILSPN,SP70       * Location Specific Practice No(LSPN)
          PACK      PMMIMPOV,SP70       * Multi Procedure Override
          PACK      PMMINMPT,SP70       * Number of Patients Seen
          PACK      PMMISDCD,SP70       * Self Deem Code (Cat Sd)
          PACK      PMMITDUR,SP70       * Time Duration (Mins)
          PACK      PMMIROVR,SP70       * Restricted Override Code (Cat Ro)
          PACK      PMMIHOSI,SP70       * Hospital Indicator         *T0859743
          MOVE      SP70,PMMIDKSM       * Distance in kms
.
          PACK      PMMISPAR,SP70,SP70
          CALL      WRPMMTI1                 * post to pmsmtiaf file
          GOTO      CHGAE800
.
CHGAE600  MOVE      ZERO,GROSSTOT
          MOVE      ONE,PROGFLAG
          CALL      CABF0000                 * Check if ABF inv.raised/pending
.
          COMPARE   ZERO,GROSSTOT
          GOTO      CHGAE290 IF EQUAL        * no charge, delete from patipen
.
.         Make sure this patient is on the invoice pending list
.
. If Using the Invoice Pending File
.
CHGAE800
          IF        PTCNIPEN = 0
            READ      CONTROLF,ZERO;*43,IBCNMHOS
            MOVE      ONE,IPSYSTM              * system - A & E
            MOVE      SP6,IPSITE               * no site
            MOVE      ADANUMB,IPADMNO          * visit number
            MOVE      SP70,PENDHOSP
            IF        IBCNMHOS=1
              OPEN      PMSVX1A1,"pmsvx1af"
              MOVE      IPADMNO,KEY8
              CALL      RDPMVX11
              IF        OVRCD=0
                MOVE      PMVXMHOS,PENDHOSP    * Hospital ID
              ENDIF
            ENDIF
            MOVE      " 1",PENDSYST            * Emergency
.
            MOVE      EMVIDATE,PENDSDAT        * as at date
            MOVE      EMVIDATE,PENDADAT        * visit date
            MOVE      SP70,PENDDDAT
            IF        EMVISTAT=2 | EMVISTAT=3
              MOVE      EMVIDDAT,PENDDDAT      * discharged date
            ENDIF
            MOVE      EMVIFUND,PENDFUND
            MOVE      EMVICOMP,PENDCLAM
            CALL      IPRH0000
            MOVE      ONE,PTIPRSTA
            MOVE      SP70,PTIPSVAR
.
            PACK      KEY8,IPADMNO,SP70        * key to invoice pending file
            CALL      RAIPEN1
            IF        OVRCD=1
              CALL      WRIPEN1
            ELSE
              CALL      UPIPEN1
            ENDIF
          ENDIF
.
CHGAE999  RETURN
+
.*******************************************************************************
.        Check for ABF Invoice raised
.*******************************************************************************
CABF0000  OPEN      PATINVR3,"patinvrf"
          PACK      KEY16,ADANUMB,SP70
          CALL      RSPTINV3
CABF1000  CALL      RKPTINV3
          BRANCH    OVRCD,CABF2000
.
          MATCH     PINVADM,ADANUMB
          GOTO      CABF2000 IF NOT EQUAL  * invoice not raised yet
.
          REP       " 0",PTINCRST
          MATCH     "0",PTINCRST
          GOTO      CABF1000 IF NOT EQUAL  * Credit note
.
          COMPARE   THREE,PTINCMIX
          GOTO      CABF4000 IF EQUAL      * found an ABF Invoice
.
          GOTO      CABF1000
.
.         ABF invoice has not been raised, calculate the charges
.
CABF2000  PROC      ABFAECCL               * Emergency ABF Care Class
          PROC      ABFAEINV               * Emergency ABF Price weight
.
          COMPARE   ZERO,GROSSTOT
          GOTO      CABF9999 IF NOT EQUAL
.
CABF4000  CALL      CHIP0000               * check pending items
.
CABF9999  RETURN
+
. *****************************************************************************
.         check if there is still item to be invoiced
. *****************************************************************************
CHIP0000  PACK      KEY14,ADANUMB,SP70       * loop through uninvoiced data
          CALL      RSPMMTI1
CHIP1000  CALL      RKPMMTI1                 * get the next record
          BRANCH    OVRCD,CHIP9999           * no more records, finish
.
          MOVE      ADANUMB,DADANUMB
          MATCH     DADANUMB,PMMIVISN        * correct patient
          GOTO      CHIP9999 IF NOT EQUAL    * no, finished
.
          COMPARE   ZERO,PMMIAMTT
          GOTO      CHIP1000 IF EQUAL
.
          ADD       PMMIAMTT,GROSSTOT        * found item with amount
.
CHIP9999  RETURN
+
. *****************************************************************************
. * ACHRG000   : Determines whether or not the current patient is chargeable  *
. * Parameters : HESYST   - Type of non-inpatient charging                    *
. *              AECNCHRS - Charging using discharge status ?                 *
. *              AECNFTYP - Charging file to be used                          *
. *              PVIRESI  - Resident status (if HESYST = 2)                   *
. *              PTYPE    - Resident status (if HESYST <> 2)                  *
. *              ADACOMP  - Claim code                                        *
. *              AEDAFUND - Health fund (board)     (if AECNFTYP = 1)         *
. *              AEDAPVIS - Previous visits charged (if AECNFTYP = 1)         *
. * Returns    : EXIT     - 0 means chargable with a standard charge          *
. *                       - 1 means not chargable                             *
. *                       - 2 means chargable, but no standard charge         *
. *              AAEDTRFD record (except for ATTRANS) if EXIT = 0             *
. *****************************************************************************
.
.         Check if the patient has been discharged to admission
.
ACHRG000  MATCH     SP3,EMVIDSTA             * patient discharged ?
          GOTO      ACHRG200 IF EQUAL        * no, assume they may be chargable
.
          PACK      KEY5,ANSE,ANSD,EMVIDSTA,SP3
          CALL      RDCODE1                  * get the code file record
          BRANCH    OVRCD,ACHRG200
.
          CMATCH    ANSA,TCINDC1             * admitted ?
          GOTO      ACHRG990 IF EQUAL        * yes, not chargable
.
.         Now check what type of charging is to be used
.
ACHRG200  BRANCH    AECNFTYP,ACHRG700        * using AAEBCHFD file for charging
.
.         Using the PATNIPFD file for charging. Check what exactly we are
.         doing.
.
          PROC      NIPCH000
          BRANCH    EXIT,ACHRG990,ACHRG985
          GOTO      ACHRG980                 * we have a record -> chargable
.
.         Using AAEBCHFD file for charging
.
ACHRG700  PROC      BRDCH000                 * do board charging
          BRANCH    EXIT,ACHRG990
.
.         Patient is chargable
.
ACHRG980  MOVE      ZERO,EXIT
          GOTO      ACHRG999
.
.         Patient is chargable, but there is not standard charge
.
ACHRG985  MOVE      TWO,EXIT
          GOTO      ACHRG999
.
.         Patient is not chargable
.
ACHRG990  MOVE      ONE,EXIT
          GOTO      ACHRG999
.
ACHRG999  RETURN
+
. *****************************************************************************
.         Updating facility fees
. *****************************************************************************
UPDCH000  PACK      KEY14,ADANUMB,SP20       * loop through all recs for pat.
          CALL      RSPMMTI1
UPDCH050  CALL      RKPMMTI1                 * get the next record
          BRANCH    OVRCD,UPDCH999           * not found
.
          MOVE      ADANUMB,DADANUMB
          MATCH     DADANUMB,PMMIVISN        * correct patient
          GOTO      UPDCH999 IF NOT EQUAL    * no, no charge found
.
          MATCH     SP4,PMMIITEM             * standard charge item ?
          GOTO      UPDCH050 IF NOT EQUAL    * no, ignore record
.
.         We have found the standard charge for this patient.
.         Now determine the new charge, and update as appropriate
.
          CALL      ACHRG000                 * get the standard charge
          COMPARE   ZERO,EXIT
          GOTO      UPDCH100 IF EQUAL        * found a new charge
.
          MOVE      ZERO,PMMIAMTT
          MOVE      ZERO,PMMIAMTP
          MOVE      ZERO,PMMIRBAT
          MOVE      ZERO,PMMIAMTG
          MOVE      PMMIAMTT,PMMIAMTH
.
UPDCH100  PACK      PMMIDUPD,CCC,CYY,CMM,CDD
          REP       " 0",PMMIDUPD
          CALL      IBACLOCK
          MOVE      CTIMEIS,PMMITUPD
          MOVE      PASSCODE,PMMIWUSR
          CALL      UPPMMTI1                 * update with the new charge
          GOTO      UPDCH999
.
UPDCH999  RETURN
+
. *****************************************************************************
.         ABFX0000 - Check for ABF Funding
. *****************************************************************************
ABFX0000  READ      CONTROLF,HUND28;*105,PTCNUABF
          MATCH     "1",PTCNUABF
          GOTO      ABFX9000 IF NOT EQUAL
.
          PACK      KEY5,ANSC,ANSL,EMVICOMP
          CALL      RDCODE1
          BRANCH    OVRCD,ABFX9000
.
          MATCH     "A",TCINDC2              * ABF Funding ?
          GOTO      ABFX9000 IF NOT EQUAL
.
          MOVE      ONE,EXIT
          GOTO      ABFX9999
.
ABFX9000  MOVE      ZERO,EXIT
          GOTO      ABFX9999
.
ABFX9999  RETURN
+
. *****************************************************************************
.         CFAC0000 - Check if facility fees had been charged
. *****************************************************************************
CFAC0000  MOVE      ZERO,EXIT
          COMPARE   ZERO,HESYST
          GOTO      CFAC9000 IF EQUAL          * No facility fee
.
          OPEN      AAEDTRE1,"aaedtref"
          PACK      KEY22,ADANUMB,SP20
          CALL      RDSDTRE1
CFAC1000  CALL      RDKDTRE1
          BRANCH    OVRCD,CFAC9999
          MATCH     ADANUMB,ATNUMB
          GOTO      CFAC9999 IF NOT EQUAL
.
          MATCH     SP70,ATITEMNO
          GOTO      CFAC1000 IF NOT EQUAL      * Not a facility fee
          MATCH     "1",ATDTCRST
          GOTO      CFAC1000 IF EQUAL          * fully credited
CFAC9000  MOVE      ONE,EXIT                   * Found a facility fee record
CFAC9999  RETURN
+
. *****************************************************************************
. * BRDCH000 : Find charge when charging using the AAEBCHFD file              *
. *****************************************************************************
.
          DEFPROC   BRDCH000
.
          INC       AAEBCHFD/INC             * A & E board charging
          INC       PATCALAG/INC             * data variables for CALCAGE
.
BJDAY     FORM      3
CJDAY     FORM      3
ENDAGE    FORM      3
.
.         Calculate the rate for this outpatient
.
BRDCH000  PACK      AGEDATE,ADADATE          * date for age
          CALL      CALCAGE                  * calculate age
.
          OPEN      AAEBCHA1,"aaebchaf"
          PACK      KEY15,ADACOMP,AEDAFUND,PSAGEYRS,SP20
          CALL      RSAEBCH1
          CALL      RKAEBCH1
          BRANCH    OVRCD,BRDCH900           * no record -> no rate
.
          MATCH     AEBCCLM,ADACOMP          * correct code ?
          GOTO      BRDCH900 IF NOT EQUAL    * no -> no rate
.
          MATCH     AEBCBRD,AEDAFUND         * correct code ?
          GOTO      BRDCH900 IF NOT EQUAL    * no -> no rate
.
          MOVE      AEBCAGEG,ENDAGE          * save the ending age in age group
.
.         Get the rate for the number of visits
.
          PACK      KEY15,ADACOMP,AEDAFUND,ENDAGE,AEDAPVIS
          CALL      RSAEBCH1
          CALL      RKAEBCH1
          BRANCH    OVRCD,BRDCH900           * no record -> no rate
.
          MATCH     AEBCCLM,ADACOMP          * correct code ?
          GOTO      BRDCH900 IF NOT EQUAL    * no -> no rate
.
          MATCH     AEBCBRD,AEDAFUND         * correct code ?
          GOTO      BRDCH900 IF NOT EQUAL    * no -> no rate
.
          COMPARE   AEBCAGEG,ENDAGE          * correct age group ?
          GOTO      BRDCH900 IF NOT EQUAL    * no -> no rate
.
          IF        (AEBCBPOR+AEBCPPOR) = 0.00
            GOTO      BRDCH900               * no charge
          ENDIF
.
.         We have the rate. Now setup the pmsmtiaf record
.
          MOVE      ADANUMB,PMMIVISN         * Outpatient Number
          MOVE      ATTRANS,PMMITRAN
          MOVE      ADAURNO,PMMIURNO
          MOVE      " 1",PMMISYST
          MOVE      ADADATE,PMMITDAT     
          MOVE      SP30,PMMIITEM
.
          MOVE      AEBCDESC,PMMIDESC
          PACK      PMMIDES2,SP70
.
          ASSIGN    (AEBCPPOR+AEBCBPOR),PMMIAMTT
          MOVE      AEBCPPOR,PMMIAMTP
          MOVE      AEBCBPOR,PMMIRBAT
          MOVE      ZERO,PMMIAMTG
          MOVE      PMMIAMTT,PMMIAMTH
.
          MOVE      SP70,PMMIREFN
          MOVE      "3",PMMIRTYP
          MOVE      AEBCITEM,PMMIMGRP
          UNPACK    SP30,PMMIBTCH
          MOVE      AEBCNINV,PMMIINVN
          MOVE      ONE,PMMISERV
.
          MOVE      ZERO,PMMIGSTA
          MOVE      SP10,PMMIGSTC
          MOVE      ZERO,PMMIGSTM
          UNPACK    SP70,PMMITDOC,PMMIODOC,PMMISESS
          PACK      PMMIDUPD,CCC,CYY,CMM,CDD
          REP       " 0",PMMIDUPD
          CALL      IBACLOCK
          MOVE      CTIMEIS,PMMITUPD
          MOVE      PASSCODE,PMMIWUSR
          MOVE      SP70,PMMIDKSM       * Distance in kms
          UNPACK    SP70,PMMISPAR
          MOVE      ZERO,EXIT                * we have a charge
          GOTO      BRDCH990
.
.         No rate on file
.
BRDCH900  MOVE      ONE,EXIT                 * charge
.
BRDCH990  CLOSE     AAEBCHA1
.
BRDCH999  GOTO      ENDBRDCH
.
          INC       CALCAGE
          INC       AAEBCHIO/INC
          INC       IBAOVRIO/INC
.
ENDBRDCH  ENDPROC
.
. *****************************************************************************
. * NIPCH000 : Find charge when charging using the PATNIPFD file              *
. *****************************************************************************
.
          DEFPROC   NIPCH000
.
          INC       PATNIPFD/INC             * outpatient charging
          INC       EMRTRFFD/INC             * triage fee
.
.
.         Calculate the rate for this outpatient
.
NIPCH000  BRANCH    HESYST,NIPCH200,NIPCH100,NIPCH400
          GOTO      NIPCH800                 * Always chargeable
.
.         New Zealand charging version. Use PVIRESI instead of PTYPE for
.         resident status
.
NIPCH100  MOVE      PVIRESI,PTYPE            * use the correct resident status
.
.         Normal PATNIPFD charging.
.
NIPCH200  MATCH     SP3,ADACOMP              * do we have a claim code ?
          GOTO      NIPCH900 IF EQUAL        * no -> not chargable
.
          MOVE      ONE,NBSYST               * System - A&E
          MOVE      PTYPE,NBRESD             * Resident status
          MOVE      ADACOMP,NBCOMP           * Claim code
          MOVE      SP3,NBINDV               * Initialise indicator field
          LOAD      NBINDV,AECNCHRS,EMVIDSTA * Use discharge status if wanted
          IF        AECNCHRS=1
            MATCH     SP3,NBINDV
            GOTO      NIPCH900 IF EQUAL      * no charge yet
          ENDIF
          MOVE      SP10,NBINDC
.
.         Get the PATNIPFD record
.
          PACK      KEY13,NBSYST,NBINDC,NBRESD,NBCOMP,NBINDV
          OPEN      PATNIPB1,"patnipbf"
          CALL      RDNIPB1                  * get the charge if possible
          CLOSE     PATNIPB1
          BRANCH    OVRCD,NIPCH900           * no record -> not chargable
          GOTO      NIPCH700
.
.         Triage fee
.         
NIPCH400  PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          PACK      D6,EMVITRIG,EMVIUC13,SP70
          MATCH     SP70,D6
          GOTO      NIPCH9000 IF EQUAL
.
          OPEN      EMRTRFA1,"emrtrfaf"
          PACK      KEY14,EMVITRIG,EMVIUC13,KEY8,SP70
          CALL      RDEMTRF1
          COMPARE   ZERO,OVRCD
          GOTO      NIPCH600 IF EQUAL        * Found a triage fee
.
NIPCH500  CALL      RPEMTRF1
          BRANCH    OVRCD,NIPCH900
          PACK      KEY6,EMTFTRIG,EMTFATTD,SP70
          MATCH     KEY6,D6
          GOTO      NIPCH900 IF NOT EQUAL
.
NIPCH600  COMPARE   ONE,EMTFACTV
          GOTO      NIPCH500 IF NOT EQUAL    * Not active
.
          MOVE      EMTFDESC,NBDESC
          MOVE      EMTFAMNT,NBAMNT
          MOVE      EMTFSCOD,NBITEM
.
. ------- Charge applicable - setup pmsmtiaf variables -------
.
NIPCH700  MOVE      ADANUMB,PMMIVISN         * Outpatient Number
          MOVE      ADAURNO,PMMIURNO
          MOVE      " 1",PMMISYST
          MOVE      ADADATE,PMMITDAT     
          MOVE      SP30,PMMIITEM
.
          MOVE      NBDESC,PMMIDESC
          PACK      PMMIDES2,SP70
.
          MOVE      NBAMNT,PMMIAMTT
          MOVE      NBAMNT,PMMIAMTP
          MOVE      ZERO,PMMIRBAT
          MOVE      ZERO,PMMIAMTG
          MOVE      PMMIAMTT,PMMIAMTH
.
          MOVE      SP70,PMMIREFN
          MOVE      "3",PMMIRTYP
          MOVE      NBITEM,PMMIMGRP
          UNPACK    SP30,PMMIBTCH
.
          MOVE      ONE,PMMIINVN
          MOVE      ONE,PMMISERV
.
          MOVE      ZERO,PMMIGSTA
          MOVE      SP10,PMMIGSTC
          MOVE      ZERO,PMMIGSTM
          UNPACK    SP70,PMMITDOC,PMMIODOC,PMMISESS
          PACK      PMMIDUPD,CCC,CYY,CMM,CDD
          REP       " 0",PMMIDUPD
          CALL      IBACLOCK
          MOVE      CTIMEIS,PMMITUPD
          MOVE      PASSCODE,PMMIWUSR
          MOVE      SP70,PMMIDKSM       * Distance in kms
          UNPACK    SP70,PMMISPAR
          MOVE      ZERO,EXIT
          GOTO      NIPCH999
.
.         Patient is chargable, but there is no standard charge
.
NIPCH800  MOVE      TWO,EXIT
          GOTO      NIPCH999
.
.         No charge found
.
NIPCH900  MOVE      ONE,EXIT
.
NIPCH999  GOTO      ENDNIPCH
.
          INC       PATNIPIO/INC
          INC       EMRTRFIO/INC             * outpatient charging
          INC       IBAOVRIO/INC
.
ENDNIPCH  ENDPROC
