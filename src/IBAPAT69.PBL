.******************************************************************************
.* System    :   Inpatient                                                    *
.* Program   :   IBAPAT69                                                     *
.* Desc      :   SMS Pre-admission / Discharged Visits                        *
.******************************************************************************
.* Date      :   14/11/2018                                                   *
.* Author    :   Don Nguyen                                                   *
.* Function  :   This program sends an SMS message for earch pre-admission /  *
.*               discharged visit within the Date Range specified.            *
.*                                                                            *
.*               It also filters on other (optional) search criteria such as: *
.*                 - Admission Type                                           *
.*                 - Care Type                                                *
.*                 - Claim Type                                               *
.*                                                                            *
.*               Only visits whose UR has NOT been recorded in the 'Opt-out   *
.*               of SMS' file will receive the SMS message (Patient Letter).  *
.*                                                                            *
.* Modifications  :                                                           *
.*                                                                            *
.******************************************************************************
.* V12.00.01 05/09/2025  Thanh T          TSK 0949457                         *
.*           Recompiled for INPLVLET changes                                  *
.******************************************************************************
.* V11.05.03 27/02/2025  J.Tan            TSK 0957529                         *
.*           Fixed getting deposit payment                                    *
.* V11.05.02 31/01/2025  Don Nguyen       TSK 0896463                         *
.*           Skipped validation of 'Minimum Balance Owing' (MINBALOW) if no   *
.*           value has been entered (i.e. blank/zero).                        *
.*           Renamed 'Total O/S Balance' to 'Total Out Of Pocket' (FILTTOOP)  *
.*           and reworked the input logic to reset the variable on subsequent *
.*           retries.                                                         *
.* V11.05.01 26/11/2024  Alina Bhari      TSK 0947770                         *
.*           Correctly excluded sending sms for record with recorded value    *
.*           equal or less than minimum outstanding balance                   *
.*           - FORM12P2,EXTPRE25,EXTPRE20                                     *
.* V11.04.10 06/11/2024  Alina Bhari      TSK 0947770                         *
.*           Recompiled for INPPLTCD - COMDEPFD,COMDEPIO,RCPDTEIO,RCPDTEFD    *
.*           Added filter Minimum outstanding balance to exclude sending sms  *
.*           for the recorded value and below the recorded value              *
.*           - MINBALOW,EXTPRE25,EXTPRE20                                     *
.* V11.04.09 30/10/2024  J.Tan            TSK 0951331                         *
.*           Fixed key for reading the Eligibility Check                      *
.* V11.04.08 11/10/2024  J.Tan            TSK 0951331                         *
.*           Added Eligibility Check Complete field                           *
.* V11.04.07 16.09.2024  DA Sarkies       TSK 0951461                         *
.*           Don't select visits with a blank value when the filter is not    *
.*           all - ADCT1000                                                   *
.* V11.04.06 17/07/2024  Thanh T          TSK 0939648                         *
.*           Recompiled for INPLVLET, INPPLTCD changes                        *
.* V11.04.05 20/05/2024  Thanh T          TSK 0941543                         *
.*           Recompiled for INPPLTCD                                          *
.* V11.04.04 07/05/2024  Nikitha B        TSK 0945225                         *
.*           Recomplied for INPPLTDF.INC - Modified COUNT length from 2 to 3  *
.* V11.04.03 21/12/2023  Don Nguyen       TSK 0893290                         *
.*           Fixed issue where "All" hospital filter wasn't picking up visits;*
.*           Check all hospital access after User Id keyin - ALHSPA00         *
.* V11.04.02 07/12/2023  Don Nguyen       TSK 0893290                         *
.*           Recompiled for INPPLTCD - Added OCONTSMS                         *
.* V11.04.01 28/11/2023  Peter Vela       TSK 0935874                         *
.*           Recompiled for INPPLTCD - Added validation for PTCNUNET = 3      *
.* V11.03.04 17/10/2023  Ebon Clements    TSK 0939142                         *
.*           Don't select visits with a blank value when the filter is not    *
.*           all - ADMT1000, CARE1000,CLAM1000,ADPT1000 and INST1000          *
.* V11.03.03 17/10/2023  Peter Vela       TSK 0935874                         *
.*           Added parameter check for pmsihiaf                               *
.* V11.03.02 15/08/2023  Don Nguyen       TSK 0935736                         *
.*           Recompiled for SMSPRXML - Skip inactive extra contacts for SMS   *
.* V11.03.01 20/07/2023  Nikitha B        TSK 0934383                         *
.*           Recomplied for INPPLTCD.PBL                                      *
.* V11.02.01 26/04/2022  Thanh T          TSK 0903453                         *
.*           Changed EXTPRE10 to read pmspx2af so data to be avaliable for    *
.*           printing                                                         *
.* V11.01.04 20/08/2021  Ebon Clements    TSK 0910423                         *
.*           Recompiled for INPLVLET/INPPLTCD - Last ward/bed variables       *
.* V11.01.03 01/07/2021  Ebon Clements    TSK 0900650                         *
.*           Added LEAVPSMS - Don't send overdue leave SMS to patient         *
.* V11.01.02 01/07/2021  Ebon Clements    TSK 0900650                         *
.*           Added overdue leave register variables 189 to 193                *
.* V11.01.01 27/05/2021  Ebon Clements    TSK 0900650                         *
.*           Added overdue leave register variables 189 to 193                *
.* V11.01.01 17/02/2021  Ebon Clements    TSK 0893103                         *
.*           Added include/exclude with milti select selection criteria       *
.* V11.00.03 26/10/2020  Sunny            TSK 0897245                         *
.*           Changed INPT1000 to allow current date for Pre-admission Visits  *
.* V11.00.02 06/08/2020  Sunny            TSK 0893062                         *
.*           Added check for patient deceased indicator in EXTDIS00           *
.* V11.00.01 16/07/2020  Tracey Nguyen    TSK 0893621                         *
.*           Recompiled for INPLVLET/INPPLTCD                                 *
.*            - Added %smsusrnm (LCCSMSUN/LXXSMSUN)                           *
.* V10.15.02 29/11/2019  Thanh T          TSK 0885262                         *
.*           Recompiled for INPPLTCD                                          *
.* V10.15.01 17/10/2019  Thanh T          TSK 0877294                         *
.*           Recompiled for INPPLTCD                                          *
.*----------------------------------------------------------------------------*
.* V10.14.03 28/08/2019  Thanh T          TSK 0877294                         *
.*           Add Working variables as INPPLTCD/INPLVLET changes               *
.* V10.14.02 02/08/2019  Thanh T.         TSK 0867186                         *
.*           Changed EXTPRE00 and EXTDIS00 to process only rows which         *
.*           the user has hospital access in multi hospital mode              *
.* V10.14.01 09/07/2019  Thanh T.         TSK 0867186                         *
.*           Added hospital filter for multi hospital mode                    *
.*----------------------------------------------------------------------------*
.*      V10.13.01   27/11/2018  Ken Bell         TSK 0866588                  *
.*                  Recompiled for INPPLTCD, INPLVLET Updates                 *
.*      V10.13.00   14/11/2018  Don Nguyen       TSK 0863187                  *
.*                  Created new                                               *
.******************************************************************************
.
          INC       STD001FD
          INC       PATCONFD/INC       * Control File
          INC       PATCODFD/INC       * Codes File
.
          INC       OPRDEAFD/INC       * Operation Details File
          INC       PATMA1FD/INC       * Patient Master File
          INC       PATDO1FD/INC       * Doctors File
          INC       PATDSCFD/INC       * Discharge File
          INC       PATELGFD/INC       * Eligibility File
          INC       PATGSRFD/INC       * Given Name/Surname Index File
          INC       PATFN1FD/INC       * Health Fund File
          INC       PATHSPFD/INC       * Hospital Details File
          INC       PATINVFD/INC       * Patient Invoices
          INC       PATMI1FD/INC       * Admission File
          INC       PATTRNFD/INC       * Transfer Details File
          INC       PATVISFD/INC       * Visit Details File
          INC       PMSCCDFD/INC       * Concession Card Details File
          INC       PMSHCPFD/INC       * HCP Details File
          INC       PMSIHIFD/INC       * IHI Details File
          INC       PMSLRDFD/INC       * Leave Register
          INC       PMSPX2FD/INC       * PMI Extension File
          INC       PMSVX1FD/INC       * Visit Extension File
          INC       WEBSECFD/INC       * Web Security File
          INC       MLTSECFD/INC
.
.         Patient Letter includes
.
          INC       ALLCASFD/INC       * HCP Case Team
          INC       INPLVLET/INC       * Patient Letter Variables 
          INC       INPPLTDF/INC       * Patient Letter Data Def
          INC       PATILTFD/INC       * Patient Letters
          INC       PATWR1FD/INC       * Ward/Bed
          INC       PMSLHIFD/INC       * Patient Letter History
          INC       VARGBCRN/INC       * Variables for BPAY crn (PATGBCRN)
.
          INC       COMDEPFD/INC
          INC       RCPBNKFD/INC
          INC       RCPDTEFD/INC
.
.
.         SMS includes
.
          INC       PMSCEXFD/INC       * Extra Contact Details
          INC       PMSOOSFD/INC       * Opt Out of SMS
.
.
.         Temp filename includes
.
          INC       IBASEQFD/INC       * Sequential Numbers File
          INC       TFILEVAR/INC       * Temp Filename variables
          INC       WEBERRFD/INC       * Web Server Error Logging
.
. =========================================================================
.         Program Variables
. =========================================================================
ADMTYARR  DIM       3[99]    * Admission Type filter array (max 99)
ADMTYKEY  DIM       2        * Admission Type filter array size (keyin)
ADMTYSIZ  FORM      2        * Admission Type filter array size
ADMTYCNT  FORM      2        * Admission Type array counter
.
CARTYARR  DIM       3[99]    * Care Type filter array (max 99)
CARTYKEY  DIM       2        * Care Type filter array size (keyin)
CARTYSIZ  FORM      2        * Care Type filter array size
CARTYCNT  FORM      2        * Care Type array counter
.
CLAMCARR  DIM       3[99]    * Claim Code filter array (max 99)
CLAMCKEY  DIM       2        * Claim Code filter array size (keyin)
CLAMCSIZ  FORM      2        * Claim Code filter array size
CLAMCCNT  FORM      2        * Claim Code array counter
.
ADMPTARR  DIM       3[99]    * Admitting Point filter array (max 99)
ADMPTKEY  DIM       2        * Admitting Point filter array size (keyin)
ADMPTSIZ  FORM      2        * Admitting Point filter array size
ADMPTCNT  FORM      2        * Admitting Point array counter
.
INTSTARR  DIM       3[99]    * Intended Stay filter array (max 99)
INTSTKEY  DIM       2        * Intended Stay filter array size (keyin)
INTSTSIZ  FORM      2        * Intended Stay filter array size
INTSTCNT  FORM      2        * Intended Stay array counter
.
ADMCTARR  DIM       3[99]    * Admission Category filter array (max 99)
ADMCTKEY  DIM       2        * Admission Category filter array size (keyin)
ADMCTSIZ  FORM      2        * Admission Category filter array size
ADMCTCNT  FORM      2        * Admission Category array counter
.
CFNAMEA   DIM       8        * Temp filename
CMDLINE   DIM       100      * Command Line
CODE      DIM       3        * Category Code
CURRDATE  DIM       8        * Current Date
DISPTDTE  DIM       10       * Display Date
DIM4      DIM       4
DIM4A     DIM       4
DIM4B     DIM       4
DIM4C     DIM       4
FORM12P2  FORM      12.2
FROMDATE  DIM       8        * From Date
FILTHOSP  DIM       3        * Filter Hospital
FILTADWR  DIM       3        * Filter Ward
FILTTOOP  DIM       1        * Filter Total Out Of Pocket
.                              "" or " " - Blank
.                              "0" - Zero Balance
.                              "1" - Outstanding Balance   
FILTELGC  DIM       1        * Eligibility Check Complete
.                              "Y" - Yes "N" - No
CNTRSENT  FORM      5        * Counter for SMS messages sent
CNTRNOTS  FORM      5        * Counter for SMS messages NOT sent (opted-out)
.
INCXADMC  DIM       1        * Include/Exclude Admission Category
INCXADMP  DIM       1        * Include/Exclude Admitting Point
INCXADMT  DIM       1        * Include/Exclude Admission Type
INCXCART  DIM       1        * Include/Exclude Care Type
INCXCLAM  DIM       1        * Include/Exclude Claim Code
INCXINTS  DIM       1        * Include/Exclude Intended Stay
.
LEAVESMS  FORM      1        * Is this an overdue leave SMS
LEAVPSMS  FORM      1        * Don't send overdue leave SMS to patient
LEAVFSMS  DIM       20       * First SMS number of not sending to patient
OCONTSMS  FORM      1        * Send SMS to other contacts only
SMSLETTR  DIM       3        * Letter Number (SMS)
PASTDATE  FORM      1        * Flag for Past Date
TODATE    DIM       8        * To Date
USERID    DIM       10       * User ID
ALLHSPAC  FORM      1        * User has all hospital access flag
MINBALOW  FORM      12.2     * Minimum Balance Owing               
.
XDAY1     DIM       2        * Day display
XDAY2     DIM       2        * Day display
XMON1     DIM       2        * Month display
XMON2     DIM       2        * Month display
XYEAR1    DIM       2        * Year display
XYEAR2    DIM       2        * Year display
XCENT1    DIM       2        * Century display
XCENT2    DIM       2        * Century display
.
.-------------------------------< CONSTANTS >---------------------------------
.
MONDAY    INIT      "Monday"
TUESDAY   INIT      "Tuesday"
WEDNSDAY  INIT      "Wednesday"
THURSDAY  INIT      "Thursday"
FRIDAY    INIT      "Friday"
SATURDAY  INIT      "Saturday"
SUNDAY    INIT      "Sunday"
.
AM        INIT      "am"
PM        INIT      "pm"
.
.
. SMS variables (SMSPRXML) for Patient Letter Printing
.
CONTPNMS  DIM       200      * Pipe-delimited list of phone numbers
CONTMSGI  DIM       200      * Pipe-delimited list of msg id's
CONTTYPS  DIM       200      * Pipe-delimited list of contact types
MAXCOUNT  INIT      "10"     * Max count for SMS phone numbers
.
.
. Temp File Definition
.
TEMP1     IFILE     SQL, FIXED=17, KEY="U1-8,9-16"
.
.NAME     TYPE      LENGTH  PHYSICAL  START  DESCRIPTION
.----     ----      ------  --------  -----  -----------
TEMPURNO  DIM       8       8         1      UR Number
TEMPADMN  DIM       8       8         9      Admission Number
.
.End of Record                        17
.
.
.-------------------------------------------------------------------------
PRGID     INIT      "IBAPAT69"
PRGNAM    INIT      "SMS for Pre-admission/Discharged Visits"
VERSION   INIT      "V12.00.01"
.-------------------------------------------------------------------------
+
.******************************************************************************
.*                           MAIN0000                                         *
.*                  Main program loop                                         *
.******************************************************************************
.
MAIN0000  CALL      INIT0000           * Initialisation and open files
          BRANCH    EXIT,MAIN9999      * Failed
.
          MATCH     "1",PTCNSMSN       * Using SMS Notifications?
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,*V2LON,"** 'Using SMS Notifications' ":
                      "parameter is not enabled ** ";
            CALL      HITENTER
            GOTO      MAIN9999
          ENDIF
.
MAIN0100  CALL      OPTN0000           * Select options
          BRANCH    COPTION,MAIN1000,MAIN2000
          GOTO      MAIN9999
.
MAIN1000  CALL      INPT0000           * Input search criteria
          BRANCH    EXIT,MAIN0100
.
          CALL      CONTQST            * Ok to Continue ?
          BRANCH    CEXIT,MAIN8100:    * Yes
                          MAIN1000:    * No
                          MAIN0100     * Cancel
          GOTO      MAIN9999
.
MAIN2000  CALL      INPT0000           * Input search criteria
          BRANCH    EXIT,MAIN0100
.
          CALL      CONTQST            * Ok to Continue ?
          BRANCH    CEXIT,MAIN8200:    * Yes
                          MAIN2000:    * No
                          MAIN0100     * Cancel
          GOTO      MAIN9999
.
MAIN8100  CALL      PROPRE00           * Process pre-admission visits (send SMS)
          GOTO      MAIN9999
.
MAIN8200  CALL      PRODIS00           * Process discharged visits (send SMS)
          GOTO      MAIN9999
.
MAIN9999  CALL      KTMP0000
          CHAIN     PGM                * chain back to program
+
.******************************************************************************
.*                           INIT0000                 Called by: MAIN0000     *
.*        Initialisation and open files                                       *
.******************************************************************************
INIT0000  CALL      DISPHEAD                * Display screen heading
.
          OPEN      CONTROLF,"controlf"     * Inpatient CONTROL File

          DISPLAY   *P56:24,"Opening ":
                    *P64:24,"patcodes";     * Codes file
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"oprdetaf"      * Operation Details 
          OPEN      OPRDETA2,"oprdetaf"
.
          DISPLAY   *P64:24,"patdo1af"      * Doctor Details
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P64:24,"Tpatelgaf"      * Eligibility Details
          OPEN      PATELGA1,"patelgaf"
.
          DISPLAY   *P64:24,"patwr1af"      * Ward/Bed Details
          OPEN      PATWR1A1,"patwr1af"
          OPEN      PATWR1A3,"patwr1af"
.
          DISPLAY   *P64:24,"pathspaf"      * Hospital Details
          OPEN      PATHSPA1,"pathspaf"
.
          DISPLAY   *P64:24,"patdschf"      * Discharge Details
          OPEN      PATDSCH1,"patdschf"
          OPEN      PATDSCH2,"patdschf"
.
          DISPLAY   *P64:24,"pmscexaf"      * Extra Contact Details
          OPEN      PMSCEXA1,"pmscexaf"
.
          DISPLAY   *P64:24,"pmshcpaf"      * HCP Details
          OPEN      PMSHCPA1,"pmshcpaf"
          OPEN      PMSHCPA2,"pmshcpaf"
.
          DISPLAY   *P64:24,"patfn1af"      * Health Fund Details
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"patinvrf"      * Patient Invoices
          OPEN      PATINVR3,"patinvrf"
.
          DISPLAY   *P64:24,"patletrf";     * Patient Letters
          OPEN      PATLETR1,"patletrf"
          OPEN      PATLETR2,"patletrf"
.
          DISPLAY   *P64:24,"pmslhiaf"      * Patient Letter History
          OPEN      PMSLHIA1,"pmslhiaf"
.
          DISPLAY   *P64:24,"patma1af"      * Patient Master Details
          OPEN      PATMA1A1,"patma1af"
          DISPLAY   *P64:24,"patmx1af"
          OPEN      PATMX1A1,"patmx1af"
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"patmi1af";     * Admissions file
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PATMI1A2,"patmi1af"
          OPEN      PATMI1A3,"patmi1af"
.
          DISPLAY   *P64:24,"patvisaf"      * Visit Details file
          OPEN      PATVISA1,"patvisaf"
          OPEN      PATVISA2,"patvisaf"
.
          DISPLAY   *P64:24,"pmsvx1af";     * Visit Extension file
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"pattranf"      * Transfer Details
          OPEN      PATTRAN1,"pattranf"
          OPEN      PATTRAN2,"pattranf"
.
          DISPLAY   *P64:24,"pmsccdaf";     * Concession Card Details
          OPEN      PMSCCDA1,"pmsccdaf"
.
          DISPLAY   *P64:24,"patgsrnf"      * Given Name/Surname Index
          OPEN      PATGSRN1,"patgsrnf"
          OPEN      PATGSRN2,"patgsrnf"
          OPEN      PATGSRN3,"patgsrnf"
          OPEN      PATGSRN4,"patgsrnf"
.
          DISPLAY   *P64:24,"allcasaf"      * HCP Case Team
          OPEN      ALLCASA1,"allcasaf"
.
          DISPLAY   *P64:24,"websecaf"      * Web Security
          OPEN      WEBSECA3,"websecaf"
.
          DISPLAY   *P64:24,"mltsecaf" 
          OPEN      MLTSECA1,"mltsecaf"
.
          DISPLAY   *P72:24,"pmslrdaf"
          OPEN      PMSLRDA1,"pmslrdaf"
.
.         Read Control File
.
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          READ      CONTROLF,TEN3;*216,CUSR1,CUSRDS1:
                                       CUSR2,CUSRDS2
          READ      CONTROLF,TEN5;*191,CMUSR1,CMUSDS1:
                                  *204,CMUSR2,CMUSDS2:
                                  *217,CMUSR3,CMUSDS3:
                                  *233,CUSR3,CUSRDS3,*249,CRDRTYP
          READ      CONTROLF,TEN8;*17,CUSR4,CUSRDS4:
                                  *31,CUSR5,CUSRDS5:
                                  *45,CUSR6,CUSRDS6
          READ      CONTROLF,HUND18;*138,PTCNNEWC
.
          READ      CONTROLF,HUND20;*158,PTCNUNET,*160,PTCNIFCL,*243,PTCNSMSN
          MATCH     "1",PTCNSMSN            * Using SMS Notifications?
          IF        @EQUAL
            OPEN      PMSOOSA1,"pmsoosaf"
          ENDIF
.
          MATCH     "0",PTCNUNET
          IF        !@EQUAL
            DISPLAY   *P64:24,"pmsihiaf"      * IHI Details
            OPEN      PMSIHIA1,"pmsihiaf"
          ENDIF
.
.
          CALL      TFILENAM                * Get temp filename
          MOVE      TFILNAME,CFNAMEA
.
          CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
          MOVE      SP1,LETRCOMM
          PACK      CONTPNMS,SP70,SP70,SP70
          PACK      CONTMSGI,SP70,SP70,SP70
          MOVE      ZERO,LEAVESMS            * Not an overdue leave SMS
          MOVE      ZERO,LEAVPSMS      * Don't send overdue leave SMS to patient
          MOVE      ZERO,OCONTSMS            * Send SMS to other contacts only
.
          OPEN      COMDEPA2,"comdepaf"
          OPEN      RCPBNKA1,"rcpbnkaf"
          OPEN      RCPDTEA6,"rcpdteaf"
.
          CALL      CLPMLD00
.
INIT9999  RETURN
+
.******************************************************************************
.*                           OPTN0000                 Called by: MAIN0000     *
.*        Get user options or exit                                            *
.*                                                                            *
.*        Returns:  EXIT = (0)  Valid option selected                         *
.*                         (1)  Exit option selected                          *
.******************************************************************************
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". SMS Pre-admission Visits":
                    *P1:6,*V2LON,TWO,*HOFF,". SMS Discharged Visits"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION            * Exit selected ?
          GOTO      OPTN9100 IF EQUAL       * Yes
.
          BRANCH    COPTION,OPTN1000,OPTN2000
.
          BEEP
          GOTO      OPTN0500
.
OPTN1000  MOVE      ZERO,PASTDATE
          MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN2000  MOVE      ONE,PASTDATE
          MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9100  MOVE      ONE,EXIT
OPTN9999  RETURN
+
.******************************************************************************
.*                           INPT0000                 Called by: MAIN0000     *
.*        Input search criteria                                               *
.******************************************************************************
INPT0000  MOVE      SP70,FILTHOSP
          MOVE      SP70,FILTADWR
          MOVE      SP70,FILTTOOP
          MOVE      SP70,FILTELGC
          MOVE      ZERO,MINBALOW
.
          MOVE      SP3,SMSLETTR
          DISPLAY   *P1:10,*EF,"SMS Message to Send : "
          KEYIN     *P23:10,*DV,UNDLN3,*P23:10,*V2LON,*JR,SMSLETTR;
.
          RESET     SMSLETTR
          MATCH     SP70,SMSLETTR
          GOTO      INPT9100 IF EQUAL
.
          PACK      KEY6,SMSLETTR,SP70
          CALL      RSPTLET1
          CALL      RKPTLET1
          BRANCH    OVRCD,INPT9200
.
          MATCH     DPTLELNO,SMSLETTR
          GOTO      INPT9200 IF NOT EQUAL
.
          MOVE      DPTLELNO,LETTFORM
          MOVE      PTLECOMM,LETRCOMM       * Store our Communication Method
.
          MATCH     "1",LETRCOMM            * SMS Notification?
          GOTO      INPT9300 IF NOT EQUAL
.
          DISPLAY   *P35:10,*V2LON,PTLETEXT
.
.
.         Keyin From Date...
.
INPT1000  DISPLAY   *P1:11,*EF,"Keyin From Date     : ";
          MOVE      "11",CVERT
          MOVE      "23",CCOL
          DISPLAY   *P23:11,*EL;
.
          UNPACK    SP8,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
          CALL      KEYDATE
          BRANCH    OVRCD,INPT0000     * nothing entered; go back to start
.
          PACK      FROMDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",FROMDATE
          UNPACK    FROMDATE,XCENT1,XYEAR1,XMON1,XDAY1
          PACK      DISPTDTE,XDAY1,SLASH,XMON1,SLASH,XCENT1,XYEAR1
.
          COMPARE   ONE,PASTDATE
          GOTO      INPT1100 IF EQUAL
.
          MATCH     FROMDATE,CURRDATE    * allow current date 
          GOTO      INPT2000 IF EQUAL 
.
          MATCH     FROMDATE,CURRDATE
          IF        !@LESS
            DISPLAY   *P1:24,*EL,*B,*V2LON,"** From Date must be in the Future ** ";
            CALL      HITENTER
            GOTO      INPT1000
          ENDIF
          GOTO      INPT2000
.
INPT1100  MATCH     CURRDATE,FROMDATE
          IF        !@LESS
            DISPLAY   *P1:24,*EL,*B,*V2LON,"** From Date must be in the Past ** ";
            CALL      HITENTER
            GOTO      INPT1000
          ENDIF
          GOTO      INPT2000
.
.
.         Keyin To Date
.
INPT2000  DISPLAY   *P1:12,"Keyin To Date       : ";
          MOVE      "12",CVERT
          MOVE      "23",CCOL
          DISPLAY   *P23:12,*EL;
.
          UNPACK    FROMDATE,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          PACK      TODATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",TODATE
          UNPACK    TODATE,XCENT2,XYEAR2,XMON2,XDAY2
.
          COMPARE   ONE,PASTDATE
          GOTO      INPT2100 IF EQUAL
.
INPT2050  MATCH     FROMDATE,TODATE         * To Date must be  >= From Date
          IF        @LESS
            DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** To Date must be greater than or equal to From Date ** ";
            CALL      HITENTER
            GOTO      INPT2000
          ENDIF
          GOTO      INPT3000


INPT2100  MATCH     CURRDATE,TODATE
          IF        !@LESS
            DISPLAY   *P1:24,*EL,*B,*V2LON,"** To Date must be in the Past ** ";
            CALL      HITENTER
            GOTO      INPT2000
          ENDIF
          GOTO      INPT2050                * Validate From/To range
.
.         Hospital
.
INPT3000  IF        IBCNMHOS = 1
            DISPLAY   *P1:13,*EL,"Hospital Id         : ";
            MOVE      "23",ECOL
            MOVE      "13",EVERT
            MOVE      SP3,CKYIDEF3
            MOVE      ZERO,CKYIMAND
            CALL      PATHSPKY
            IF        EXIT = ONE
              MOVE      SP70,FILTHOSP
              MOVE      "All Hospitals",PTHSNAME
              MOVE      SP70,PTHSHOSP
              DISPLAY   *P23:13,*EL,PTHSNAME;
            ELSE
              IF        EXIT = 2
                MOVE      SP3,FILTHOSP
                GOTO      INPT9400
              ELSE
                MOVE      KEY3,FILTHOSP
                DISPLAY   *P23:13,*EL,PTHSNAME;
              ENDIF
            ENDIF
          ENDIF
.
.         Ward
.
INPT3100  DISPLAY   *P1:14,*EL,"Admitting Ward      : ";
          MOVE      "23",ECOL
          MOVE      "14",EVERT
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      ZERO,CKYIMODE
.
          CALL      PATWRDKY                     * keyin ward code
          IF        EXIT = ONE
            MOVE      SP70,FILTADWR
            MOVE      "All Wards",WBDESC
            DISPLAY   *P23:14,*EL,WBDESC;
          ELSE
            IF        EXIT = 2
              MOVE      SP3,FILTADWR
              GOTO      INPT9410
            ELSE
              MOVE      WWARD,FILTADWR
              DISPLAY   *P23:14,*EL,WBDESC;
            ENDIF
          ENDIF
.
.         Keyin Admission Type
.
INPT3500  DISPLAY   *P1:15,*EF,"Admission Type      : "
.
          KEYIN     *P23:15,*EF,"I(N)clude or (E)xclude : ",INCXADMT
          PACK      INCXADMT,INCXADMT,SP70
          MATCH     ANSN,INCXADMT           * Include
          IF        !@EQUAL
            MATCH     ANSE,INCXADMT         * Exclude
            IF        !@EQUAL
              DISPLAY   *P1:24,*EL,*B,*V2LON,"* Invalid I(N)clude (E)xclude":
                                             " value **";
              CALL      HITENTER
              GOTO      INPT3500
            ENDIF
          ENDIF
.
          MOVE      ZERO,ADMTYCNT      * Admission Type array counter
          MOVE      ZERO,ADMTYSIZ      * Admission Type array size
          MOVE      SP10,ADMTYKEY      * Admission Type array size keyin
.
          MOVE      ONE,F3
          WHILE     F3 <= 99
            PACK      ADMTYARR[F3],SP70 * Clear Admission Type array
            ADD       ONE,F3
          DO
.
          KEYIN     *P23:15,*EL,"Number of Admission Types : ",ADMTYKEY
          MATCH     SP70,ADMTYKEY
          IF        @EOS | @EQUAL
.
.           Blank input; i.e. ALL selected
.
            DISPLAY   *P23:15,*EL,*V2LON,"All",*HOFF;
            GOTO      INPT3700
          ENDIF
.
          MOVE      ADMTYKEY,ADMTYSIZ       * Zero Keyins
          IF        ADMTYSIZ < 1
            GOTO      INPT3700
          ENDIF
.
          MOVE      ONE,ADMTYCNT
          DISPLAY   *P23:15,*EL;
.
INPT3600  MOVE      "A ",CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      "15",EVERT
          MOVE      "23",ECOL
          CALL      PATCODKY
.
          IF        EXIT=1
            MOVE      "All",TDESC
          ELSE
            IF        EXIT = 2
              MOVE      ONE,EXIT         * \ Entered so abort
              GOTO      INPT9999
            ENDIF
          ENDIF
          PACK      ADMTYARR[ADMTYCNT],ACODE,SP70
.
          DISPLAY   *P26:15,*EL," Added ",*P33:15,*V2LON,TDESC,*HOFF;
          ADD       ONE,ADMTYCNT
.
          COMPARE   ADMTYSIZ,ADMTYCNT
          GOTO      INPT3600 IF LESS
          GOTO      INPT3600 IF EQUAL
.
.         Keyin Care Type
.
INPT3700  DISPLAY   *P1:16,*EF,"Care Type           : "
.
          KEYIN     *P23:16,*EF,"I(N)clude or (E)xclude : ",INCXCART
          PACK      INCXCART,INCXCART,SP70
          MATCH     ANSN,INCXCART           * Include
          IF        !@EQUAL
            MATCH     ANSE,INCXCART         * Exclude
            IF        !@EQUAL
              DISPLAY   *P1:24,*EL,*B,*V2LON,"* Invalid I(N)clude (E)xclude":
                                             " value **";
              CALL      HITENTER
              GOTO      INPT3700
            ENDIF
          ENDIF
.
          MOVE      ZERO,CARTYCNT      * Care Type array counter
          MOVE      ZERO,CARTYSIZ      * Care Type array size
          MOVE      SP10,CARTYKEY      * Care Type array size keyin
.
          MOVE      ONE,F3
          WHILE     F3 <= 99
            PACK      CARTYARR[F3],SP70 * Clear Care Type array
            ADD       ONE,F3
          DO
.
          KEYIN     *P23:16,*EL,"Number of Care Types      : ",CARTYKEY
          MATCH     SP70,CARTYKEY
          IF        @EOS | @EQUAL
.
.           Blank input; i.e. ALL selected
.
            DISPLAY   *P23:16,*EL,*V2LON,"All",*HOFF;
            GOTO      INPT4000
          ENDIF
.
          MOVE      CARTYKEY,CARTYSIZ       * Zero Keyins
          IF        CARTYSIZ < 1
            GOTO      INPT4000
          ENDIF
.
          MOVE      ONE,CARTYCNT
          DISPLAY   *P23:16,*EL;
.
INPT3750  MOVE      "CC",CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      "16",EVERT
          MOVE      "23",ECOL
          CALL      PATCODKY
.
          IF        EXIT=1
            MOVE      "All",TDESC
          ELSE
            IF        EXIT = 2
              MOVE      ONE,EXIT         * \ Entered so abort
              GOTO      INPT9999
            ENDIF
          ENDIF
          PACK      CARTYARR[CARTYCNT],ACODE,SP70
.
          DISPLAY   *P26:16,*EL," Added ",*P33:16,*V2LON,TDESC,*HOFF;
          ADD       ONE,CARTYCNT
.
          COMPARE   CARTYSIZ,CARTYCNT
          GOTO      INPT3750 IF LESS
          GOTO      INPT3750 IF EQUAL
.
.         Keyin Claim Type
.
INPT4000  DISPLAY   *P1:17,*EF,"Claim Type          : "
.
          KEYIN     *P23:17,*EF,"I(N)clude or (E)xclude : ",INCXCLAM
          PACK      INCXCLAM,INCXCLAM,SP70
          MATCH     ANSN,INCXCLAM           * Include
          IF        !@EQUAL
            MATCH     ANSE,INCXCLAM         * Exclude
            IF        !@EQUAL
              DISPLAY   *P1:24,*EL,*B,*V2LON,"* Invalid I(N)clude (E)xclude":
                                             " value **";
              CALL      HITENTER
              GOTO      INPT4000
            ENDIF
          ENDIF
.
          MOVE      ZERO,CLAMCCNT      * Claim Code array counter
          MOVE      ZERO,CLAMCSIZ      * Claim Code array size
          MOVE      SP10,CLAMCKEY      * Claim Code array size keyin
.
          MOVE      ONE,F3
          WHILE     F3 <= 99
            PACK      CLAMCARR[F3],SP70 * Clear Claim Code array
            ADD       ONE,F3
          DO
.
          KEYIN     *P23:17,*EL,"Number of Claim Types     : ",CLAMCKEY
          MATCH     SP70,CLAMCKEY
          IF        @EOS | @EQUAL
.
.           Blank input; i.e. ALL selected
.
            DISPLAY   *P23:17,*EL,*V2LON,"All",*HOFF;
            GOTO      INPT4500
          ENDIF
.
          MOVE      CLAMCKEY,CLAMCSIZ       * Zero Keyins
          IF        CLAMCSIZ < 1
            GOTO      INPT4500
          ENDIF
.
          MOVE      ONE,CLAMCCNT
          DISPLAY   *P23:17,*EL;

.
INPT4050  MOVE      "CL",CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      "17",EVERT
          MOVE      "23",ECOL
          CALL      PATCODKY
.
          IF        EXIT=1
            MOVE      "All",TDESC
          ELSE
            IF        EXIT = 2
              MOVE      ONE,EXIT         * \ Entered so abort
              GOTO      INPT9999
            ENDIF
          ENDIF
          PACK      CLAMCARR[CLAMCCNT],ACODE,SP70
.
          DISPLAY   *P26:17,*EL," Added ",*P33:17,*V2LON,TDESC,*HOFF;
          ADD       ONE,CLAMCCNT
.
          COMPARE   CLAMCSIZ,CLAMCCNT
          GOTO      INPT4050 IF LESS
          GOTO      INPT4050 IF EQUAL
.
.         Admitting Point
.
INPT4500  DISPLAY   *P1:18,*EF,"Admitting Point     : "
.
          KEYIN     *P23:18,*EF,"I(N)clude or (E)xclude : ",INCXADMP
          PACK      INCXADMP,INCXADMP,SP70
          MATCH     ANSN,INCXADMP           * Include
          IF        !@EQUAL
            MATCH     ANSE,INCXADMP         * Exclude
            IF        !@EQUAL
              DISPLAY   *P1:24,*EL,*B,*V2LON,"* Invalid I(N)clude (E)xclude":
                                             " value **";
              CALL      HITENTER
              GOTO      INPT4500
            ENDIF
          ENDIF
.
          MOVE      ZERO,ADMPTCNT      * Admitting Point array counter
          MOVE      ZERO,ADMPTSIZ      * Admitting Point array size
          MOVE      SP10,ADMPTKEY      * Admitting Point array size keyin
.
          MOVE      ONE,F3
          WHILE     F3 <= 99
            PACK      ADMPTARR[F3],SP70 * Clear Admitting Point array
            ADD       ONE,F3
          DO
.
          KEYIN     *P23:18,*EL,"Number of Admitting Points: ",ADMPTKEY
          MATCH     SP70,ADMPTKEY
          IF        @EOS | @EQUAL
.
.           Blank input; i.e. ALL selected
.
            DISPLAY   *P23:18,*EL,*V2LON,"All",*HOFF;
            GOTO      INPT5000
          ENDIF
.
          MOVE      ADMPTKEY,ADMPTSIZ       * Zero Keyins
          IF        ADMPTSIZ < 1
            GOTO      INPT5000
          ENDIF
.
          MOVE      ONE,ADMPTCNT
          DISPLAY   *P23:18,*EL;

.
INPT4550  MOVE      "ap",CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      "18",EVERT
          MOVE      "23",ECOL
          CALL      PATCODKY
.
          IF        EXIT=1
            MOVE      "All",TDESC
          ELSE
            IF        EXIT = 2
              MOVE      ONE,EXIT         * \ Entered so abort
              GOTO      INPT9999
            ENDIF
          ENDIF
          PACK      ADMPTARR[ADMPTCNT],ACODE,SP70
.
          DISPLAY   *P26:18,*EL," Added ",*P33:18,*V2LON,TDESC,*HOFF;
          ADD       ONE,ADMPTCNT
.
          COMPARE   ADMPTSIZ,ADMPTCNT
          GOTO      INPT4550 IF LESS
          GOTO      INPT4550 IF EQUAL
.
.         Intended Stay
.
INPT5000  DISPLAY   *P1:19,*EF,"Intended Stay       : "
.
          KEYIN     *P23:19,*EF,"I(N)clude or (E)xclude : ",INCXINTS
          PACK      INCXINTS,INCXINTS,SP70
          MATCH     ANSN,INCXINTS           * Include
          IF        !@EQUAL
            MATCH     ANSE,INCXINTS         * Exclude
            IF        !@EQUAL
              DISPLAY   *P1:24,*EL,*B,*V2LON,"* Invalid I(N)clude (E)xclude":
                                             " value **";
              CALL      HITENTER
              GOTO      INPT5000
            ENDIF
          ENDIF
.
          MOVE      ZERO,INTSTCNT      * Intended Stay array counter
          MOVE      ZERO,INTSTSIZ      * Intended Stay array size
          MOVE      SP10,INTSTKEY      * Intended Stay array size keyin
.
          MOVE      ONE,F3
          WHILE     F3 <= 99
            PACK      INTSTARR[F3],SP70 * Clear Indended Stay array
            ADD       ONE,F3
          DO
.
          KEYIN     *P23:19,*EL,"Number of Intended Stays  : ",INTSTKEY
          MATCH     SP70,INTSTKEY
          IF        @EOS | @EQUAL
.
.           Blank input; i.e. ALL selected
.
            DISPLAY   *P23:19,*EL,*V2LON,"All",*HOFF;
            GOTO      INPT6000
          ENDIF
.
          MOVE      INTSTKEY,INTSTSIZ       * Zero Keyins
          IF        INTSTSIZ < 1
            GOTO      INPT6000
          ENDIF
.
          MOVE      ONE,INTSTCNT
          DISPLAY   *P23:19,*EL;

.
INPT5550  MOVE      "VI",CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      "19",EVERT
          MOVE      "23",ECOL
          CALL      PATCODKY
.
          IF        EXIT=1
            MOVE      "All",TDESC
          ELSE
            IF        EXIT = 2
              MOVE      ONE,EXIT         * \ Entered so abort
              GOTO      INPT9999
            ENDIF
          ENDIF
          PACK      INTSTARR[INTSTCNT],ACODE,SP70
.
          DISPLAY   *P26:19,*EL," Added ",*P33:19,*V2LON,TDESC,*HOFF;
          ADD       ONE,INTSTCNT
.
          COMPARE   INTSTSIZ,INTSTCNT
          GOTO      INPT5550 IF LESS
          GOTO      INPT5550 IF EQUAL
.
.        Admission Category 
.
INPT6000  DISPLAY   *P1:20,*EF,"Admission Category  : "
.
          KEYIN     *P23:20,*EF,"I(N)clude or (E)xclude : ",INCXADMC
          PACK      INCXADMC,INCXADMC,SP70
          MATCH     ANSN,INCXADMC           * Include
          IF        !@EQUAL
            MATCH     ANSE,INCXADMC         * Exclude
            IF        !@EQUAL
              DISPLAY   *P1:24,*EL,*B,*V2LON,"* Invalid I(N)clude (E)xclude":
                                             " value **";
              CALL      HITENTER
              GOTO      INPT6000
            ENDIF
          ENDIF
.
          MOVE      ZERO,ADMCTCNT      * Admission Category array counter
          MOVE      ZERO,ADMCTSIZ      * Admission Category array size
          MOVE      SP10,ADMCTKEY      * Admission Category array size keyin
.
          MOVE      ONE,F3
          WHILE     F3 <= 99
            PACK      ADMCTARR[F3],SP70 * Clear Admission Category array
            ADD       ONE,F3
          DO
.
          KEYIN     *P23:20,*EL,"Number of Admission Cats. : ",ADMCTKEY
          MATCH     SP70,ADMCTKEY
          IF        @EOS | @EQUAL
.
.           Blank input; i.e. ALL selected
.
            DISPLAY   *P23:20,*EL,*V2LON,"All",*HOFF;
            GOTO      INPT6080
          ENDIF
.
          MOVE      ADMCTKEY,ADMCTSIZ       * Zero Keyins
          IF        ADMTYSIZ < 1
            GOTO      INPT6080
          ENDIF
.
          MOVE      ONE,ADMCTCNT
          DISPLAY   *P23:20,*EL;
.
INPT6050  MOVE      "P ",CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      "20",EVERT
          MOVE      "23",ECOL
          CALL      PATCODKY
.
          IF        EXIT=1
            MOVE      "All",TDESC
          ELSE
            IF        EXIT = 2
              MOVE      ONE,EXIT         * \ Entered so abort
              GOTO      INPT9999
            ENDIF
          ENDIF
          PACK      ADMCTARR[ADMCTCNT],ACODE,SP70
.
          DISPLAY   *P26:20,*EL," Added ",*P33:20,*V2LON,TDESC,*HOFF;
          ADD       ONE,ADMCTCNT
.
          COMPARE   ADMCTSIZ,ADMCTCNT
          GOTO      INPT6050 IF LESS
          GOTO      INPT6050 IF EQUAL
.
INPT6080  MOVE      ZERO,EXIT
          IF        COPTION = 2
            GOTO      INPT8000
          ENDIF
.         
.         Minimum Balance Owing
          MOVE      ZERO,MINBALOW
          DISPLAY   *P1:21,*EF,"Minimum Balance Owing : "
          KEYIN     *P25:21,*DV,UNDLN1,*P25:21,*V2LON,*JR,MINBALOW;
.
.         Total Outstanding Balance
.
INPT7000  MOVE      ZERO,EXIT
          IF        COPTION = 2
            GOTO      INPT8000
          ENDIF
.
          MOVE      SP70,FILTTOOP
          DISPLAY   *P1:22,*EF,"Total Out Of Pocket (blank/0/1) : "
          KEYIN     *P35:22,*DV,UNDLN1,*P35:22,*V2LON,*JR,FILTTOOP;
.
          RESET     FILTTOOP 
          MATCH     SP70,FILTTOOP
          GOTO      INPT8000 IF EQUAL
.
          MATCH     "0",FILTTOOP 
          GOTO      INPT7100 IF EQUAL
.
          MATCH     "1",FILTTOOP 
          GOTO      INPT7200 IF EQUAL
. 
          GOTO      INPT9420
.
INPT7100  DISPLAY   *P35:22,*EL,*V2LON,"0 - Zero Balance",*HOFF;
          GOTO      INPT8000
.
INPT7200  DISPLAY   *P35:22,*EL,*V2LON,"1 - Outstanding Balance",*HOFF;
          GOTO      INPT8000
.
INPT8000  MATCH     "1",PTCNIFCL
          GOTO      INPT8400 IF NOT EQUAL  * Not using HEA IFC
.
          DISPLAY   *P1:22,*EF,"Eligibility Check Complete : "
          KEYIN     *P29:22,*V2LON,FILTELGC;
.
          PACK      FILTELGC,FILTELGC,SP70
          REP       "yYnN",FILTELGC
          MATCH     SP70,FILTELGC
          GOTO      INPT8400 IF EQUAL
.
          MATCH     "Y",FILTELGC
          GOTO      INPT8400 IF EQUAL
.
          MATCH     "N",FILTELGC
          GOTO      INPT8400 IF EQUAL
.
          GOTO      INPT9430
.
INPT8400  CALL      USID0000                * keyin the User Id
          MOVE      ZERO,EXIT 
          GOTO      INPT9999
.
INPT9100  MOVE      ONE,EXIT
          GOTO      INPT9999
.
INPT9200  DISPLAY   *P1:24,*EL,*B,*V2LON,"** Letter Code not found ** ";
          CALL      HITENTER
          GOTO      INPT0000
.
INPT9300  DISPLAY   *P1:24,*EL,*B,*V2LON,"** Invalid SMS Letter Type ** ";
          CALL      HITENTER
          GOTO      INPT0000
.
INPT9400  DISPLAY   *P1:24,*EL,*B,*V2LON,"** Invalid Hospital ID ** ";
          CALL      HITENTER
          GOTO      INPT3000
.
INPT9410  DISPLAY   *P1:24,*EL,*B,*V2LON,"** Invalid Ward ** ";
          CALL      HITENTER
          GOTO      INPT3100
.
INPT9420  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Invalid Total Outstanding Balance ** ";
          CALL      HITENTER
          GOTO      INPT7000
.
INPT9430  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Yes or No** ";
          CALL      HITENTER
          GOTO      INPT8000
.
INPT9999  RETURN
.
.****************************************************************************
.         Keyin user id
.****************************************************************************
USID0000  KEYIN     *P1:23,*EL,"User Id             : ",USERID;
          PACK      USERID,USERID,SP70
.
          MATCH     SP70,USERID
          GOTO      USID0000 IF EQUAL
.
          CALL      ALHSPA00
.
USID9999  RETURN
+
.******************************************************************************
.*                           PROPRE00                 Called by: MAIN0000     *
.*        Send an SMS message for each pre-admission visit within the         *
.*        Date Range specified.                                               *
.******************************************************************************
PROPRE00  MOVE      ZERO,EXIT
.
          CALL      EXTPRE00      * Extract relevant pre-admission visits
          CALL      SEND0000      * Send an SMS for each extracted record
.
PROPRE99  RETURN
+
.******************************************************************************
.*                           EXTPRE00                 Called by: PROPRE00     *
.*        Extracts all pre-admission records within the Date Range.           *
.*                                                                            *
.*        Pre-admissions whose UR is NOT in the 'Opt-out of SMS' file will be *
.*        written to our temp file for processing.                            *
.*                                                                            *
.*        Other (optional) search criteria (Admission Type, Care Type, etc)   *
.*        will also be used as filters.                                       *
.******************************************************************************
EXTPRE00  MOVE      ZERO,EXIT
          MOVE      ZERO,CNTRNOTS           * reset counter (messages NOT sent)
.
          CALL      CTMP0000                * create the tempfile
.
.         Loop admission file by date
.
          PACK      KEY16,FROMDATE,SP70
          CALL      RDSMISS3
EXTPRE10  CALL      RDKMISS3
          BRANCH    OVRCD,EXTPRE99
.
          MATCH     FROMDATE,ADATE          * Admission Date < From Date Range?
          GOTO      EXTPRE99 IF LESS
.
          MATCH     ADATE,TODATE            * Admission Date > To Date Range?
          GOTO      EXTPRE99 IF LESS
.
          COMPARE   ONE,ASTAT               * Pre-admission?
          GOTO      EXTPRE10 IF NOT EQUAL
.
          CALL      ADMT0000                * Filter Admission Type?
          BRANCH    EXIT,EXTPRE10
.
          CALL      CARE0000                * Filter Care Type?
          BRANCH    EXIT,EXTPRE10
.
          CALL      CLAM0000                * Filter Claim Type
          BRANCH    EXIT,EXTPRE10
.
          MATCH     SP70,FILTADWR           * Filter Admitting Ward
          IF        !@EQUAL
            MATCH     PTMIXWRD,FILTADWR
            GOTO      EXTPRE10 IF NOT EQUAL
          ENDIF
.
          CALL      ADCT0000                * Filter Admission Category
          BRANCH    EXIT,EXTPRE10
.
          MOVE      DAADMNO,KEY8
          CALL      RDPMVX11
          BRANCH    OVRCD,EXTPRE10
.
          MOVE      AURNO,KEY8
          CALL      RDPMPX21
          BRANCH    OVRCD,EXTPRE10
.
          IF        IBCNMHOS = 1
            MATCH     SP70,FILTHOSP         * Hospital Filter
            IF        !@EQUAL
              MATCH     PMVXMHOS,FILTHOSP
              GOTO      EXTPRE10 IF NOT EQUAL
            ELSE
              IF        ALLHSPAC = ZERO
                PACK      KEY13,USERID,PMVXMHOS,SP70  * This hospital access
                CALL      RDMLSEC1
                BRANCH    OVRCD,EXTPRE10      * no access to hospital
              ENDIF
            ENDIF
          ENDIF
.
          CALL      ADPT0000                 * Filter Admitting Point
          BRANCH    EXIT,EXTPRE10
.
          CALL      INST0000                 * Filter Intended Stay
          BRANCH    EXIT,EXTPRE10
.
          MOVE      DAADMNO,KEY8
          MATCH     SP70,FILTTOOP            * Filter Total outstanding Bal
          IF        @EQUAL
            CALL      RDPTELG1
            IF        OVRCD=1
              CALL      CLPATELG             * Clear eligibility fields
            ENDIF
          ELSE
            CALL      RDPTELG1
            IF        OVRCD=1
              CALL      CLPATELG             * Clear eligibility fields
              GOTO      EXTPRE10
            ENDIF

            MATCH     "0",FILTTOOP
            IF        @EQUAL
              COMPARE   ZERO,PTELTOOP
              GOTO      EXTPRE10 IF NOT EQUAL
            ELSE
              COMPARE   ZERO,PTELTOOP
              GOTO      EXTPRE10 IF EQUAL
            ENDIF
          ENDIF
.
          COMPARE   ZERO,MINBALOW      * 'Minimum Balance Owing' not specified
          GOTO      EXTPRE30 IF EQUAL  * skip validation
.
.         check for deposit payment
.
          MOVE      PTELTOOP,FORM12P2     * Total Out of pocket
          PACK      KEY25,DAADMNO,SP70
          CALL      RSRCDTE6
EXTPRE20  CALL      RKRCDTE6
          BRANCH    OVRCD,EXTPRE22
.
          MATCH     DAADMNO,RCDTVIST
          GOTO      EXTPRE22 IF NOT EQUAL
.
          MATCH     SP70,RCDTINVN          * Invoice number must be blank
          GOTO      EXTPRE20 IF NOT EQUAL
.
          PACK      KEY12,RCDTRECN
          CALL      RDRCBNK1
          BRANCH    OVRCD,EXTPRE20
          MATCH     "1",RCBNSTAT            * check if cancelled
          GOTO      EXTPRE20 IF EQUAL
.
          SUB       RCDTAMNT,FORM12P2
          GOTO      EXTPRE20
.
.         Check if Total out of pocket is equal / less than min bal owing
.
EXTPRE22  COMPARE   FORM12P2,MINBALOW
          GOTO      EXTPRE10 IF NOT LESS    * Min Balance owing is greater
.
EXTPRE30  MATCH     "1",PTCNIFCL
          GOTO      EXTPRE40 IF NOT EQUAL   * Not using HEA IFC
.
          MATCH     "Y",FILTELGC
          IF        @EQUAL
            MATCH     "1",PTELCMPL
            GOTO      EXTPRE10 IF NOT EQUAL      * skip, Check not completed
          ELSE
            MATCH     "N",FILTELGC
            IF        @EQUAL
              MATCH     "1",PTELCMPL
              GOTO      EXTPRE10 IF EQUAL        * skip, Check Completed
            ENDIF
          ENDIF
.
.         Check if UR in opt-out file
.
EXTPRE40  PACK      KEY8,AURNO,SP70
          CALL      RDPMOOS1           * record exists in 'Opt-out of SMS' file?
          IF        OVRCD=0
            ADD       ONE,CNTRNOTS     * increment NOT sent counter
            GOTO      EXTPRE10
          ENDIF
.
          MOVE      AURNO,TEMPURNO         
          MOVE      AADMNO,TEMPADMN         
.
          CALL      WRTEMP1
.
          GOTO      EXTPRE10
.
EXTPRE99  RETURN
.
.------------------------------------------------------------------------------
. Get user has access to all hospital flag
.------------------------------------------------------------------------------
ALHSPA00  MOVE     ZERO,ALLHSPAC
.
          PACK      KEY13,USERID,SP70
          CALL      RDMLSEC1
          IF        OVRCD=0
            MOVE     ONE,ALLHSPAC           * user has All hospital access
          ENDIF
.
ALHSPA99  RETURN
+
.******************************************************************************
.*                           PRODIS00                 Called by: MAIN0000     *
.*        Send an SMS message for each discharged visit within the            *
.*        Date Range specified.                                               *
.******************************************************************************
PRODIS00  MOVE      ZERO,EXIT
.
          CALL      EXTDIS00      * Extract relevant discharged visits
          CALL      SEND0000      * Send an SMS for each extracted record
.
PRODIS99  RETURN
+
.******************************************************************************
.*                           EXTDIS00                 Called by: PRODIS00     *
.*        Extracts all discharged visits within the Date Range.               *
.*                                                                            *
.*        Discharges whose UR is NOT in the 'Opt-out of SMS' file will be     *
.*        written to our temp file for processing.                            *
.*                                                                            *
.*        Other (optional) search criteria (Admission Type, Care Type, etc)   *
.*        will also be used as filters.                                       *
.******************************************************************************
EXTDIS00  MOVE      ZERO,EXIT
          MOVE      ZERO,CNTRNOTS      * reset counter for messages NOT sent
.
          CALL      CTMP0000           * create the tempfile
.
.         Loop Discharge file by date
.
          PACK      KEY16,FROMDATE,SP70
          CALL      RDSDSCH2
EXTDIS10  CALL      RDKDSCH2
          BRANCH    OVRCD,EXTDIS99
.
          MATCH     FROMDATE,DDATE          * Discharge Date < From Date Range?
          GOTO      EXTDIS99 IF LESS
.
          MATCH     DDATE,TODATE            * Discharge Date > To Date Range?
          GOTO      EXTDIS99 IF LESS
.
.         Get admission record...
.
          PACK      KEY8,DDADMNO,SP70
          CALL      RDMISS1
          BRANCH    OVRCD,EXTDIS10
.
.         Check patient deceased indicator
.
          PACK      KEY8,AURNO,SP70
          CALL      RDMAST1           
          BRANCH    OVRCD,EXTDIS10
.
          COMPARE   ONE,PCEASE            
          GOTO      EXTDIS10 IF EQUAL           
.
          CALL      ADMT0000                * Filter Admission Type?
          BRANCH    EXIT,EXTDIS10
.
          CALL      CARE0000                * Filter Care Type?
          BRANCH    EXIT,EXTDIS10
.
          CALL      CLAM0000                * Filter Claim Type
          BRANCH    EXIT,EXTDIS10
.
EXTDIS50  MATCH     SP70,FILTADWR           * Filter Admitting Ward
          IF        !@EQUAL
            MATCH     PTMIXWRD,FILTADWR
            GOTO      EXTDIS10 IF NOT EQUAL
          ENDIF
.
          CALL      ADCT0000                * Filter Admission Category
          BRANCH    EXIT,EXTDIS10
.
          MOVE      DAADMNO,KEY8
          CALL      RDPMVX11
          BRANCH    OVRCD,EXTDIS10
.
          IF        IBCNMHOS = 1
            MATCH     SP70,FILTHOSP         * Hospital Filter
            IF        !@EQUAL
              MATCH     PMVXMHOS,FILTHOSP
              GOTO      EXTDIS10 IF NOT EQUAL
            ELSE
              IF        ALLHSPAC = ZERO
                PACK      KEY13,USERID,PMVXMHOS,SP70  * This hospital access
                CALL      RDMLSEC1
                BRANCH    OVRCD,EXTDIS10      * no access to hospital
              ENDIF
            ENDIF
          ENDIF
.
          CALL      ADPT0000                 * Filter Admitting Point
          BRANCH    EXIT,EXTDIS10
.
          CALL      INST0000                 * Filter Intended Stay
          BRANCH    EXIT,EXTDIS10
.
          MOVE      DAADMNO,KEY8
          MATCH     SP70,FILTTOOP            * Filter Total outstanding Bal
          IF        @EQUAL
            CALL      RDPTELG1
            IF        OVRCD=1
              CALL      CLPATELG             * Clear eligibility fields
            ENDIF
          ELSE
            CALL      RDPTELG1
            IF        OVRCD=1
              CALL      CLPATELG             * Clear eligibility fields
              GOTO      EXTDIS10
            ENDIF

            MATCH     "0",FILTTOOP
            IF        @EQUAL
              COMPARE   ZERO,PTELTOOP
              GOTO      EXTDIS10 IF NOT EQUAL
            ELSE
              COMPARE   ZERO,PTELTOOP
              GOTO      EXTDIS10 IF EQUAL
            ENDIF
          ENDIF
.
.         Check if UR in opt-out file
.
          PACK      KEY8,AURNO,SP70
          CALL      RDPMOOS1           * record exists in 'Opt-out of SMS' file?
          IF        OVRCD=0
            ADD       ONE,CNTRNOTS     * increment NOT sent counter
            GOTO      EXTDIS10
          ENDIF
.
          MOVE      DURNO,TEMPURNO         
          MOVE      DDADMNO,TEMPADMN         
.
          CALL      WRTEMP1
.
          GOTO      EXTDIS10
.
EXTDIS99  RETURN
+
.******************************************************************************
.*                           SEND0000                                         *
.*        Loops our temp file and formulates an SMS (Patient Letter Type)     *
.*        for each record (visit).                                            *
.******************************************************************************
SEND0000  MOVE      ZERO,CNTRSENT      * Reset counter for messages sent
.
          PACK      LETTDATE,CDD,SLASH,CMM,SLASH,CCC,CYY
          CALL      CONS0000           * Set up the Constant % Variables
.
          CALL      PRMSGH00           * Print SMS letter header (<messages>)
.
          PACK      KEY16,SP70
          CALL      RSTEMP1
SEND1000  CALL      RKTEMP1
          BRANCH    OVRCD,SEND9000
.
          MOVE      TEMPADMN,AADMNO
          CALL      PLET0000           * Print Letter (SMS message)
.
          GOTO      SEND1000
.
SEND9000  CALL      PRMSGF00           * Print SMS letter footer (</messages>)
SEND9999  RETURN
+
.******************************************************************************
.*                            PLET0000                                        *
.*                  Print letter (SMS message) for each visit                 *
.******************************************************************************
PLET0000  MOVE      ZERO,EXIT
.
          CALL      SET0000                 * Set the % Variables
          BRANCH    EXIT,PLET9100
.
          CALL      PRLT0000                * Print the actual letter
.
          MOVE      AADMNO,PMLHVISN         * Visit Number
          MOVE      CURRDATE,PMLHDATE       * Date Letter Sent (ccyymmdd)
          MOVE      LETTFORM,PMLHLETN       * Letter Number
          MOVE      SP70,PMLHSPAR
.
          PACK      KEY19,PMLHVISN,PMLHDATE,PMLHLETN,SP70
          CALL      RAPMLHI1
          IF        OVRCD=1
            CALL      WRPMLHI1              * Write letter sent history record
          ENDIF
.
          ADD       ONE,CNTRSENT            * Increment sent counter
.
PLET9000  MOVE      ZERO,EXIT
          GOTO      PLET9999
.
PLET9100  MOVE      ONE,EXIT
PLET9999  RETURN
+
.******************************************************************************
.* ADMT0000 Check Admission Type (code) exists in filter array                *
.*                                                                            *
.*        Parameter:                                                          *
.*          ADMTYARR - Admission Type(s)                                      *
.*                                                                            *
.*        Return:                                                             *
.*              EXIT : 0 - Exists                                             *
.*                     1 - Does NOT exist                                     *
.******************************************************************************
ADMT0000  IF        ADMTYCNT = 0
            GOTO      ADMT9000           * ALL Admission Types selected
          ENDIF
.
          IF        ADMTYCNT = 2
            MATCH     ADMTYARR[ONE],SP70 * ALL Admission Types selected
            GOTO      ADMT9000 IF EQUAL
          ENDIF
.
          MOVE      ZERO,F3
ADMT1000  ADD       ONE,F3
.
          MATCH     SP70,ADMTYARR[F3]
          IF        !@EQUAL
            MATCH     ADMTYARR[F3],ATYPE    * Do not select blank
            GOTO      ADMT9000 IF EQUAL     * when all is not selected
          ENDIF
.
          COMPARE   ADMTYCNT,F3
          GOTO      ADMT1000 IF LESS
.
          GOTO      ADMT9100
.
ADMT9000  MATCH     ANSE,INCXADMT   * Exclude
          IF        @EQUAL
            MOVE      ONE,EXIT      * Admission Type exists exclude
          ELSE
            MOVE      ZERO,EXIT     * Admission Type exists include
          ENDIF
          GOTO      ADMT9999
.
ADMT9100  MATCH     ANSE,INCXADMT    * Exclude
          IF        @EQUAL
            MOVE      ZERO,EXIT      * Admission Type does NOT exists include
          ELSE
            MOVE      ONE,EXIT       * Admission Type does NOT exist exclude
          ENDIF
          GOTO      ADMT9999
.
ADMT9999  RETURN
+
.******************************************************************************
.* CARE0000 Check Care Type (code) exists in filter array                     *
.*                                                                            *
.*        Parameter:                                                          *
.*          CARTYARR - Care Type(s)                                           *
.*                                                                            *
.*        Return:                                                             *
.*              EXIT : 0 - Exists                                             *
.*                     1 - Does NOT exist                                     *
.******************************************************************************
CARE0000  IF        CARTYCNT = 0
            GOTO      CARE9000           * ALL Care Types selected; bypass check
          ENDIF
.
          IF        CARTYCNT = 2
            MATCH     CARTYARR[ONE],SP70 * ALL Care Types selected
            GOTO      CARE9000 IF EQUAL
          ENDIF
.
          MOVE      ZERO,F3
CARE1000  ADD       ONE,F3
.
          MATCH     SP70,CARTYARR[F3]
          IF        !@EQUAL
            MATCH     CARTYARR[F3],ACARE    * Do not select blank
            GOTO      CARE9000 IF EQUAL     * when all is not selected
          ENDIF
.
          COMPARE   CARTYCNT,F3
          GOTO      CARE1000 IF LESS
.
          GOTO      CARE9100
.
CARE9000  MATCH     ANSE,INCXCART   * Exclude
          IF        @EQUAL
            MOVE      ONE,EXIT      * Care Type exists exclude
          ELSE
            MOVE      ZERO,EXIT     * Care Type exists include
          ENDIF
          GOTO      CARE9999
.
CARE9100  MATCH     ANSE,INCXCART   * Exclude
          IF        @EQUAL
            MOVE      ZERO,EXIT     * Care Type does NOT exist Include
          ELSE 
            MOVE      ONE,EXIT      * Care Type does NOT exist exclude
          ENDIF
          GOTO      CARE9999
.
CARE9999  RETURN
+
.******************************************************************************
.* CLAM0000 Check Claim Type (code) exists in filter array                    *
.*                                                                            *
.*        Parameter:                                                          *
.*          CLAMCARR - Care Type(s)                                           *
.*                                                                            *
.*        Return:                                                             *
.*              EXIT : 0 - Exists                                             *
.*                     1 - Does NOT exist                                     *
.******************************************************************************
CLAM0000  IF        CLAMCCNT = 0
            GOTO      CLAM9000           * ALL Claim Types selected
          ENDIF
.
          IF        CLAMCCNT = 2
            MATCH     CLAMCARR[ONE],SP70 * ALL Claim Types selected
            GOTO      CLAM9000 IF EQUAL
          ENDIF
.
          MOVE      ZERO,F3
CLAM1000  ADD       ONE,F3
.
          MATCH     SP70,CLAMCARR[F3]
          IF        !@EQUAL
            MATCH     CLAMCARR[F3],ACLAIM   * Do not select blank
            GOTO      CLAM9000 IF EQUAL     * when all is not selected
          ENDIF
.
          COMPARE   CLAMCCNT,F3
          GOTO      CLAM1000 IF LESS
.
          GOTO      CLAM9100
.
CLAM9000  MATCH     ANSE,INCXCLAM    * Exclude
          IF        @EQUAL
            MOVE      ONE,EXIT       * Claim Type exists exclude
          ELSE
            MOVE      ZERO,EXIT      * Claim Type exists include
          ENDIF
          GOTO      CLAM9999
.
CLAM9100  MATCH     ANSE,INCXCLAM    * Exclude
          IF        @EQUAL 
            MOVE      ZERO,EXIT      * Claim Type does NOT exist include
          ELSE
            MOVE      ONE,EXIT       * Claim Type does NOT exist exclude
          ENDIF
          GOTO      CLAM9999
.
CLAM9999  RETURN
+
.******************************************************************************
.* ADPT0000 Check Admitting Point (code) exists in filter array               *
.*                                                                            *
.*        Parameter:                                                          *
.*          ADMPTARR - Care Type(s)                                           *
.*                                                                            *
.*        Return:                                                             *
.*              EXIT : 0 - Exists                                             *
.*                     1 - Does NOT exist                                     *
.******************************************************************************
ADPT0000  IF        ADMPTCNT = 0
            GOTO      ADPT9000           * ALL Admitting Points selected
          ENDIF
.
          IF        ADMPTCNT = 2
            MATCH     ADMPTARR[ONE],SP70 * ALL Admitting Points selected
            GOTO      ADPT9000 IF EQUAL
          ENDIF
.
          MOVE      ZERO,F3
ADPT1000  ADD       ONE,F3
.
          MATCH     SP70,ADMPTARR[F3]
          IF        !@EQUAL
            MATCH     ADMPTARR[F3],PMVXAPWD      * Do not select blank
            GOTO      ADPT9000 IF EQUAL          * when all is not selected
          ENDIF 
.
          COMPARE   ADMPTCNT,F3
          GOTO      ADPT1000 IF LESS
.
          GOTO      ADPT9100
.
ADPT9000  MATCH     ANSE,INCXADMP    * Exclude
          IF        @EQUAL 
            MOVE      ONE,EXIT       * Admitting Point exists exclude
          ELSE
            MOVE      ZERO,EXIT      * Admitting Point exists include
          ENDIF
          GOTO      ADPT9999
.
ADPT9100  MATCH     ANSE,INCXADMP    * Exclude
          IF        @EQUAL
            MOVE      ZERO,EXIT      * Admitting Point does NOT exist include
          ELSE
            MOVE      ONE,EXIT       * Admitting Point does NOT exist exclude
          ENDIF
          GOTO      ADPT9999
.
ADPT9999  RETURN
+
.******************************************************************************
.* INST0000 Check Intended Stay (code) exists in filter array                 *
.*                                                                            *
.*        Parameter:                                                          *
.*          INTSTARR - Care Type(s)                                           *
.*                                                                            *
.*        Return:                                                             *
.*              EXIT : 0 - Exists                                             *
.*                     1 - Does NOT exist                                     *
.******************************************************************************
INST0000  IF        INTSTCNT = 0
            GOTO      INST9000           * ALL Intended Stay selected
          ENDIF
.
          IF        INTSTCNT = 2
            MATCH     INTSTARR[ONE],SP70 * ALL Intended stay selected
            GOTO      INST9000 IF EQUAL
          ENDIF
.
          MOVE      ZERO,F3
INST1000  ADD       ONE,F3
.
          MATCH     SP70,INTSTARR[F3]
          IF        !@EQUAL   
            MATCH     INTSTARR[F3],PMVXIDUS      * Do not select blank
            GOTO      INST9000 IF EQUAL          * when all is not selected
          ENDIF 
.
          COMPARE   INTSTCNT,F3
          GOTO      INST1000 IF LESS
.
          GOTO      INST9100
.
INST9000  MATCH     ANSE,INCXINTS   * Exclude
          IF        @EQUAL
            MOVE      ONE,EXIT      * Intended Stay exists exclude
          ELSE
            MOVE      ZERO,EXIT     * Intended Stay exists include
          ENDIF
          GOTO      INST9999
.
INST9100  MATCH     ANSE,INCXINTS   * Exclude
          IF        @EQUAL
            MOVE      ZERO,EXIT     * Intended Stay does NOT exist include
          ELSE
            MOVE      ONE,EXIT      * Intended Stay does NOT exist exclude
          ENDIF
          GOTO      INST9999
.
INST9999  RETURN
+
.******************************************************************************
.* ADCT0000 Check Admission Category (code) exists in filter array            *
.*                                                                            *
.*        Parameter:                                                          *
.*          ADMCTARR - Care Type(s)                                           *
.*                                                                            *
.*        Return:                                                             *
.*              EXIT : 0 - Exists                                             *
.*                     1 - Does NOT exist                                     *
.******************************************************************************
ADCT0000  IF        ADMCTCNT = 0
            GOTO      ADCT9000           * ALL Admission Cat selected
          ENDIF
.
          IF        ADMCTCNT = 2
            MATCH     ADMCTARR[ONE],SP70 * ALL Admission Cat selected
            GOTO      ADCT9000 IF EQUAL
          ENDIF
.
          MOVE      ZERO,F3
ADCT1000  ADD       ONE,F3
.
          MATCH     SP70,ADMCTARR[F3]
          IF        !@EQUAL
            MATCH     ADMCTARR[F3],ACLSS  * Do not select blank
            GOTO      ADCT9000 IF EQUAL   * when all is not selected
          ENDIF
.
          COMPARE   ADMCTCNT,F3
          GOTO      ADCT1000 IF LESS
.
          GOTO      ADCT9100
.
ADCT9000  MATCH     ANSE,INCXADMC   * Exclude
          IF        @EQUAL
            MOVE      ONE,EXIT      * Admission Category exists exclude
          ELSE
            MOVE      ZERO,EXIT     * Admission Category exists include
          ENDIF
          GOTO      ADCT9999
.
ADCT9100  MATCH     ANSE,INCXADMC   * Exclude
          IF        @EQUAL
            MOVE      ZERO,EXIT     * Admission Category NOT exist include
          ELSE
            MOVE      ONE,EXIT      * Admission Category NOT exist exclude
          ENDIF
          GOTO      ADCT9999
.
ADCT9999  RETURN
+
.******************************************************************************
.*                           CTMP0000                                         *
.*                  Create the temp file                                      *
.******************************************************************************
CTMP0000  CALL      KTMP0000
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    CFNAMEA,CMDLINE
          APPEND    " 17 U1-8,9-16",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      TEMP1,CFNAMEA
CTMP9999  RETURN
+
.******************************************************************************
.*                           KTMP0000                                         *
.*                  Delete the temp file                                      *
.******************************************************************************
KTMP0000  CLOSE     TEMP1
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    CFNAMEA,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
KTMP9999  RETURN
+
.******************************************************************************
.*                  I/O for temp file                                         *
.******************************************************************************
.
RATEMP1   RESET     KEY16
          MOVE      ZERO,OVRCD
          READ      TEMP1,KEY16;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTEMP1   RESET     KEY16
          READ      TEMP1,KEY16;;
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    TEMP1;TEMPURNO,TEMPADMN
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTEMP1   RESET     KEY16
          MOVE      ZERO,OVRCD
          READ      TEMP1,KEY16;TEMPURNO,TEMPADMN
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMP1   RESET     KEY16
          WRITE     TEMP1,KEY16;TEMPURNO,TEMPADMN
          RETURN
+
.
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
          INC       PATHSPKY
          INC       PATWRDKY
.
          INC       CLPATELG           * Clear Patient Eligibility file vars
          INC       CLPMSCEX           * Clear Extra Contact file vars
          INC       PATCODKY
          INC       PATGBCRN           * Generate BPAY cust ref.no.
          INC       PMSCEXCD           * Get Extra Contact details for UR
          INC       GTIHINUM           * Get IHI Number
          INC       GCCARD00           * Get Concession Card details
          INC       CLPMSLRD
.
          INC       PATCODIO/INC       * Codes file
.
          INC       OPRDEAIO/INC       * Operation Details File
          INC       PATMA1IO/INC       * Patient Master File
          INC       PATDO1IO/INC       * Doctors File
          INC       PATDSCIO/INC       * Discharge File
          INC       PATELGIO/INC       * Eligibility File
          INC       PATFN1IO/INC       * Health Fund File
          INC       PATGSRIO/INC       * Given Name/Surname Index File
          INC       PATHSPIO/INC       * Hospital Details File
          INC       PATINVIO/INC       * Patient Invoices
          INC       PATMI1IO/INC       * Admission file
          INC       PATTRNIO/INC       * Transfer Details File
          INC       PATVISIO/INC       * Visit Details File
          INC       PMSCCDIO/INC       * Concession Card Details File
          INC       PMSHCPIO/INC       * HCP Details File
          INC       PMSIHIIO/INC       * IHI Details File
          INC       PMSPX2IO/INC       * PMI Extension File
          INC       PMSVX1IO/INC       * Visit Extension file
          INC       WEBSECIO/INC       * Web Security File
          INC       MLTSECIO/INC
.
.
.         Patient Letter includes
.
          INC       INPPLTCD           * Patient Letter Printing Routines
          INC       ALLCASIO/INC       * HCP Case Team
          INC       PATILTIO/INC       * Patient Letters
          INC       PATWR1IO/INC       * Ward/Bed
          INC       PMSLHIIO/INC       * Patient Letter History
          INC       PMSLRDIO/INC       * Leave register
.
          INC       COMDEPIO/INC
          INC       RCPBNKIO/INC
          INC       RCPDTEIO/INC
.
.         SMS includes
.
          INC       DATECONV 
          INC       SMSMESID
          INC       SMSPRXML           * Print XML metatags for SMS
          INC       PMSCEXIO/INC       * Extra Contact Details
          INC       PMSOOSIO/INC       * Opt Out of SMS
.
.
.         Temp filename includes
.
          INC       TFILENAM
          INC       IBASEQIO/INC       * Sequential Numbers File
          INC       WEBERRIO/INC       * Web Server Error Logging
