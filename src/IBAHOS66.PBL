. *****************************************************************************
. *                                                                           *
. *              P R O G R A M  S U M M A R Y                                 *
. *              -------------  -------------                                 *
. *                                                                           *
. *     PROGRAM NAME:     IBAHOS66                                            *
. *                                                                           *
. *     FUNCTION:         CATCHMENT CODE & LGA MAINTENANCE                    *
. *                                                                           *
. *     DATE WRITTEN:     27/07/88                                            *
. *                                                                           *
. *     AUTHOR:           GRAEME WILLIAMS (I.B.A)                             *
. *                                                                           *
. *     MODIFICATIONS:                                                        *
. *                       V9.04.00 10/11/05 J.Tan                             *
. *                       Ported from r6.13                                   *
. *                                                                           *
. *****************************************************************************
.
          INC       STD001FD
.
          INC           PATLGAFD/INC
          INC           PATCT1FD/INC
          INC     PATCODFD/INC
.
.        EXTRA   VARIABLES
.
ACTION          DIM     1
ADD             DIM     2
AMM             DIM     2
AYY             DIM     2
ACC             DIM     2
.
CATCDE          DIM     3
CHG             FORM    1
CODE            DIM     2
CODECH          INIT    "CH"
.
FIELD           FORM    2
.
.
LGACDE          DIM     4
.
MODE            DIM     1
MODE1           DIM     1
.
OPERCODE        DIM     4
OPTION1         FORM    1
.
PC1             DIM     8
PC2             DIM     8
PSTCODE         FORM    8
.
SEC1            FORM    "00001" 
.
TIMEIS          DIM     8
.
PRGID     INIT      "IBAHOS66"
PRGNAM    INIT      "CATCHMENT AND LGA CODE MAINTENANCE"
VERSION   INIT      "V12.00.00"
+
.         START OF PROGRAM
.
          DISPLAY       *ES,"IBAHOS66"
.
          DISPLAY       *P56:24,"Opening patct1cf";
          OPEN          PATCT1C1,"patct1cf"
.
          DISPLAY       *P64:24,"patct1cf";
          OPEN          PATCT1C2,"patct1cf"
.
          DISPLAY       *P64:24,"patct1cf";
          OPEN          PATCT1C3,"patct1cf"
.
          DISPLAY       *P64:24,"patcodes";
          OPEN          PATCODE1,"patcodes"
.
          DISPLAY       *P64:24,"patlgaaf";
          OPEN          PATLGAA1,"patlgaaf"
.
          DISPLAY       *P64:24,"controlf";
          OPEN          CONTROLF,"controlf"
.
.         SELECT OPTION
.
START    CALL       DISPHEAD
         DISPLAY    *P1:3,*EF:
                    *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Clear Postcode Allocation":
                    *P1:6,*V2LON,TWO,*HOFF," = Catchment Code Allocation":
                    *P1:7,*V2LON,THREE,*HOFF," = LGA Code Allocation"
.
REKEY    KEYIN      *P1:9,*EL,"Option : ",*V2LON,OPTION;
.
         COMPARE    ZERO,OPTION
         GOTO       ENDIT IF EQUAL
.
REPEAT   BRANCH     OPTION OF CRTEMPTY,CATCHG,LGACHG
.
         DISPLAY    *P40:9,*EL,*B,*V2LON,"** Invalid Selection **",*W2;
         GOTO       REKEY
.
.-----------------------------------------------------------------------------
.        Create an empty postcode allocation file
.-----------------------------------------------------------------------------
.
CRTEMPTY DISPLAY    *P57:2,*V2LON,"- Clearing Allocations",*HOFF:
                    *P1:24,*EL,"Are sure you want clear ALL the allocations (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ";
.
         MOVE       ZERO,FIELD
         MOVE       "53",CCOL
MTRKEY   MOVE       "24",CVERT
         CALL       KEYYNC
         MOVE       ANS,FIELD
.
         BRANCH     FIELD OF DOEMPTY,START
         BEEP
         GOTO       MTRKEY
.
.        Loop over all valid postcodes and clear them - starting with the
.        blank postcode (legitimate)
.
DOEMPTY  DISPLAY    *P1:24,*EL,*P20:24,"Postcode :";
         MOVE       SP20,KEY8
         CALL       RDCATC1
         BRANCH     OVRCD OF CTRLPX
         MOVE       SP3,CTCCODE
         MOVE       SP4,CTCLGA
         CALL       UPCATC1
.
.        Zero N.T. postcodes (0800 to 0899)
.
CTRLPX   MOVE       "800",PSTCODE
         MOVE       PSTCODE,KEY8
         SQUEEZE    KEY8
CTRLP0   PACK       KEY8,KEY8,SP70
         CALL       EMPTY
.
         DISPLAY    *P31:24,*V2LON,PSTCODE;
.
         ADD        ONE,PSTCODE
         MOVE       PSTCODE,KEY8
         SQUEEZE    KEY8
.
         COMPARE    "900",PSTCODE
         GOTO       CTRLP0 IF LESS
.
.        Do the rest of the states
.
         MOVE       "2000",PSTCODE
         MOVE       PSTCODE,KEY8
         SQUEEZE    KEY8
CTRLP    PACK       KEY8,KEY8,SP70
         CALL       EMPTY
.
         DISPLAY    *P31:24,*V2LON,PSTCODE;
.
         ADD        ONE,PSTCODE
         MOVE       PSTCODE,KEY8
         SQUEEZE    KEY8
         PACK       KEY8,KEY8,SP70
.
         COMPARE    "8000",PSTCODE
         GOTO       CTRLP IF LESS
.
         DISPLAY    *P1:24,*EL,*P40:24,*V2LON:
                    "** Postcode Allocation File Cleared **";
         GOTO       ENDIT
.
.        Subroutine to empty a postcode - creating it if necessary
.
EMPTY    CALL       RDCATC1
         BRANCH     OVRCD OF WRNEWPC
.
         MOVE       SP3,CTCCODE
         MOVE       SP4,CTCLGA
         CALL       UPCATC1
         RETURN
.
WRNEWPC  MOVE       SP3,CTCCODE
         MOVE       SP4,CTCLGA
         MOVE       SP20,CTCSPAR
         MOVE       KEY8,CTCPOST
         CALL       WRCATC1
         RETURN
.
.-----------------------------------------------------------------------------
.        Catchment Codes
.-----------------------------------------------------------------------------
.
CATCHG   DISPLAY    *P57:2,*V2LON,"- Catchment Codes",*HOFF,*P1:3,*EF:
                    *P1:4,"   Catchment Code : "
.
.        Key in and validate a catchment code
.
         KEYIN      *P21:4,*EL,*V2LON,CATCDE
.
         RESET      CATCDE
         GOTO       START IF EOS
.
         ENDSET     CATCDE
         APPEND     SP3,CATCDE
         RESET      CATCDE
.
         MATCH      SP3,CATCDE
         GOTO       CNOCODE IF EQUAL
.
         CMATCH     QUEST,CATCDE
         GOTO       CHOPTS IF EQUAL
.
         PACK       KEY5 WITH CODECH,CATCDE
         CALL       RDCODE1
         BRANCH     OVRCD OF CINVCDE
.
         DISPLAY    *P40:4,*V2LON,TDESC
         GOTO       SHOWPCS
.
CNOCODE  DISPLAY    *P40:4,*V2LON,"NOT ALLOCATED"
         GOTO       SHOWPCS
.
CINVCDE  DISPLAY    *P40:4,*EL,*V2LON,*B:
                    "** Invalid Catchment Code **",*W2;
         GOTO       REPEAT
.
.        Display catchment codes
.
CHOPTS   MOVE       CODECH,CODE
         CALL       PATCODDS
         GOTO       REPEAT
.
.-----------------------------------------------------------------------------
.        LGA Codes
.-----------------------------------------------------------------------------
.
LGACHG   DISPLAY    *P57:2,*V2LON,"- LGA Codes",*HOFF,*P1:3,*EF:
                    *P1:4,"         LGA Code : "
.
.        Key in and validate a LGA code
.
KEYLGA   KEYIN      *P21:4,*EL,*V2LON,LGACDE
.
         RESET      LGACDE
         GOTO       START IF EOS
.
         ENDSET     LGACDE
         APPEND     SP4,LGACDE
         RESET      LGACDE
.
         MATCH      SP3,LGACDE
         GOTO       LNOCODE IF EQUAL
.
         CMATCH     QUEST,LGACDE
         GOTO       LGOPTS IF EQUAL
.
         MOVE       LGACDE,KEY4
         CALL       RDLGAA1
         BRANCH     OVRCD OF LINVCDE
.
         DISPLAY    *P40:4,*V2LON,LGADESC
         GOTO       SHOWPCS
.
LNOCODE  DISPLAY    *P40:4,*V2LON,"NOT ALLOCATED"
         GOTO       SHOWPCS
.
LINVCDE  DISPLAY    *P40:4,*V2LON,*B,*EL:
                    "** Invalid LGA code **",*W2;
         GOTO       REPEAT
.
.        Display valid LGA codes
.
LGOPTS   CALL       PATLGADS
         GOTO       REPEAT
.
.        Show the current allocations
.
SHOWPCS  
.        MATCH     "PATWEB77",PRGID
.        IF         !@EQUAL
.          CALL       DATA1
.        ENDIF
.
         DISPLAY    *P1:24,*EL,"Correct Data (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,"/":
                    *V2LON,"C",*HOFF,") ? ";
.
         MOVE       "24",CVERT
         MOVE       "24",CCOL
OKKEY    MOVE       ZERO,FIELD
         CALL       KEYYNC
         MOVE       ANS,FIELD
.
         BRANCH     FIELD OF KEYATYP,REPEAT,START
.
.        Ask for what type of allocation this will be
.
KEYATYP  DISPLAY    *P1:5,*EF:
                    *P1:6,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:7,*V2LON,ONE,*HOFF," = Normal Allocation":
                    *P1:8,*V2LON,TWO,*HOFF," = Unallocated Postcodes Only"
.
KATYP    KEYIN      *P1:10,*EF,"Option : ",*V2LON,OPTION1
.
         COMPARE    ZERO,OPTION1
         GOTO       REPEAT IF EQUAL
.
         BRANCH     OPTION1 OF KEYRNG,KEYRNG
.
         DISPLAY    *P35:10,*EL,*B,*V2LON,"** Invalid Selection **",*W2;
         GOTO       KATYP
.
.        Key in a range of postcodes
.
KEYRNG   KEYIN      *P1:12,*EF,"Starting Postcode : ",*V2LON,PC1
         ENDSET     PC1
         APPEND     SP70,PC1
         RESET      PC1
.
         PACK       KEY8,PC1,SP20
         CALL       RDCATC1
         BRANCH     OVRCD OF INVPC1
.
         DISPLAY    *P21:12,*V2LON,PC1
.
KEYPC2   MOVE       PC1,PC2
         KEYIN      *P1:14,*EL,"  Ending Postcode : ":
                    *DV,PC2,*P21:14,*V2LON,*RV,PC2
         ENDSET     PC2
         APPEND     SP70,PC2
         RESET      PC2
.
         MOVE       PC2,KEY8
         CALL       RDCATC1
         BRANCH     OVRCD OF INVPC2
.
DSPPC2   DISPLAY    *P21:14,*V2LON,PC2
         GOTO       CHKRNG
.
.        Invalid postcodes
.
INVPC1   DISPLAY    *P40:12,*V2LON,*EL,*B:
                    "** Postcode not on file **",*W2;
         GOTO       KEYRNG
.
INVPC2   DISPLAY    *P40:14,*V2LON,*EL,*B:
                    "** Postcode not on file **",*W2;
         GOTO       KEYPC2
.
INVRNG   DISPLAY    *P40:14,*V2LON,*EL,*B:
                    "** Invalid Postcode Range **",*W2;
         GOTO       KEYRNG
.
.        Check for a valid range
.
CHKRNG   MATCH      PC1,PC2
         GOTO       INVRNG IF LESS
.
.        Make sure they want to post this range
.
POST     DISPLAY    *P1:24,*EL,"Ok to Post (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,"/":
                    *V2LON,"C",*HOFF,") ? ";
.
         MOVE       "24",CVERT
         MOVE       "22",CCOL
KPOST    MOVE       ZERO,FIELD
         CALL       KEYYNC
         MOVE       ANS,FIELD
.
         BRANCH     FIELD OF POSTRNG,KEYRNG,START
.
         BEEP
         GOTO       KPOST
.
.        Post this range of postcodes
.
POSTRNG  MOVE       PC1,KEY8
         CALL       RDCATC1
         BRANCH     OVRCD OF NODATA
.
CPSTLP   BRANCH     OPTION OF START,PSTCAT,PSTLGA
.
.        Posting Catchment codes
.
PSTCAT   BRANCH     OPTION1 OF CNRMUP,CCHKU
.
.        Check that this postcode is currently unallocated
.
CCHKU    MATCH      SP3,CTCCODE
         GOTO       NEXTC IF NOT EQUAL
.
CNRMUP   MOVE       CATCDE,CTCCODE
         CALL       UPCATC1
         GOTO       NEXTC
.
.        Posting LGA codes
.
PSTLGA   BRANCH     OPTION1 OF LNRMUP,LCHKU
.
.        Check that this postcode is currently unallocated
.
LCHKU    MATCH      SP4,CTCLGA
         GOTO       NEXTC IF NOT EQUAL
.
LNRMUP   MOVE       LGACDE,CTCLGA
         CALL       UPCATC1
.
.        Check to see if we have finished
.
NEXTC    MATCH      PC2,CTCPOST
         GOTO       ENDIT IF NOT LESS
.
         DISPLAY    *P70:24,CTCPOST;
.
         CALL       RDKCATC1
         BRANCH     OVRCD OF ENDIT
         GOTO       CPSTLP
.
.        No data in file
.
NODATA   MATCH     "PATWEB77",PRGID
         IF        !@EQUAL
           DISPLAY    *P1:24,*EL,*V2LON,*B:
                      "** No data in file. Run option 1 to create file **",*W4;
         ENDIF
         GOTO       START
.
.-----------------------------------------------------------------------------
.        Display the Current fields
.-----------------------------------------------------------------------------
.
DATA1    DISPLAY    *P1:6,*ULON," P/C",*P7:6,"Allocation               ":
                    *P40:6," P/C",*P46:6,"Allocation               "
.
         MOVE       SEVEN,CVERT
         MOVE       ONE,CCOL
.
         BRANCH     OPTION OF ENDDATA,DATA1C,DATA1L
.
DATA1C   PACK       KEY11 WITH CATCDE,SP4
         CALL       RDCATC2
         BRANCH     OVRCD OF NEXTPC
         GOTO       DATAC
.
DATA1L   PACK       KEY12 WITH LGACDE,SP4
         CALL       RDCATC3
         BRANCH     OVRCD OF NEXTPC
         GOTO       DATAL
.
.        Catchment codes
.
DATAC    MATCH      CATCDE,CTCCODE
         GOTO       ENDDATA IF NOT EQUAL
.
         MOVE       SP20,TDESC
.
         MATCH      SP3,CTCCODE
         GOTO       DSPC IF EQUAL
.
         MOVE       "UNKNOWN CODE",TDESC
         PACK       KEY5 WITH CODECH,CTCCODE
         CALL       RDCODE1
.
DSPC     DISPLAY    *PCCOL:CVERT,*V2LON,CTCPOST,SP2,CTCCODE,SP1,TDESC
.
         GOTO       NEXTDAT
.
.        LGA Codes
.
DATAL    MATCH      LGACDE,CTCLGA
         GOTO       ENDDATA IF NOT EQUAL
.
         MOVE       SP20,LGADESC
.
         MATCH      SP4,CTCLGA
         GOTO       DSPL IF EQUAL
.
         MOVE       "UNKNOWN CODE",LGADESC
         MOVE       CTCLGA,KEY4
         CALL       RDLGAA1
.
DSPL     DISPLAY    *PCCOL:CVERT,*V2LON,CTCPOST,SP2,CTCLGA,SP1,LGADESC
.
.        Check if we have filled the screen and/or column
.
NEXTDAT  ADD        ONE,CVERT
         COMPARE    TWENTY4,CVERT
         GOTO       NEXTPC IF LESS
.
         MOVE       SEVEN,CVERT
         ADD        "39",CCOL
.
         COMPARE    "70",CCOL
         GOTO       NEXTPC IF LESS
.
.        We have filled the screen
.
         KEYIN      *P1:24,*EL,"(",*V2LON,"E",*HOFF,")xit, (":
                    *V2LON,"N",*HOFF,")ext Screen ? ",*V2LON,ANS;
.
         CMATCH     ANSE,ANS
         RETURN     IF EQUAL
.
         MOVE       ONE,CCOL
         DISPLAY    *PCCOL:CVERT,*EF;
.
.        Read in the next record
.
NEXTPC   BRANCH     OPTION OF ENDDATA,DNXTC,DNXTL
.
DNXTC    CALL       RDKCATC2
         BRANCH     OVRCD OF ENDDATA
         GOTO       DATAC
.
DNXTL    CALL       RDKCATC3
         BRANCH     OVRCD OF ENDDATA
         GOTO       DATAL
.
ENDDATA  
.        KEYIN      *P1:24,*EL,"Hit ",*V2LON,"<ENTER>",*HOFF:
.                   " to continue ... ",*EOFF,ANS;
.
         RETURN
+
.-----------------------------------------------------------------------------
.        This routine asks for a Y, N or C and returns a 1, 2 or 3.
.        If an invalid answer is given, then 0 is returned
.-----------------------------------------------------------------------------
KEYYNC   MOVE      SP1,ANS
         KEYIN     *PCCOL:CVERT,*DV,SP3,*PCCOL:CVERT,*V2LON,ANS;
.
         TYPE      ANS
         GOTO      KEYYNC99 IF EQUAL
.
.        Convert to number
.
         REP       "Y1N2C3y1n2c3",ANS
.
.        Check for valid input
.
         TYPE      ANS
         RETURN    IF EQUAL
.
.        Invalid input
.
KEYYNC99 MOVE      ZERO,ANS
         RETURN
.
         INCLUDE    PATLGADS
         INCLUDE    PATCODDS
         INC       PATCODIO/INC
         INC       PATCT1IO/INC
         INC       PATLGAIO/INC
         INC       STD001IO
ENDIT    CHAIN      PGM
         STOP
