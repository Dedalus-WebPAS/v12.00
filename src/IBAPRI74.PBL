.***************************************************************************
.* System    :   Private Practice                                          *
.* Program   :   IBAPRI74                                                  *
.* Desc      :   Maintenance Program for Special Pathology Test File       *
.***************************************************************************
.* Date      :   17/03/1995                                                *
.* Author    :   Gabrielle                                                 *
.* Function  :   This program provides a maintenance program for the       *
.*               Special Pathology Test file (prisptaf)                    *
.* Mods      :                                                             *
.*        V5.07.01  15/10/1999  D.Di Paola                                 *
.*                  Recompiled for PRISPTFD and PRIITMFD                   *
.*        V5.05.01  08/10/1997  Steve Armstrong         WWH Mods           *
.*                  Mods for change from GETITEM to KYPRIITM               *
.***************************************************************************
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       STD001FD
          INC       PRICONFD/INC             * Private Practice Control File
          INC       PRIITMFD/INC             * Private Practice Item File
          INC       PRISPTFD/INC             * Exception Charges Test File
.
. LOCAL VARIABLE DEFINITION
. -------------------------
AMA       INIT      "AMA"
.
DESCFLAG  DIM       3                        * Item Type Flag Description
DIM8      DIM       8
.
IFLAG     FORM      2                        * needed for PRIITMDS
ITDESC1   DIM       30                       * item 1 description
ITDESC2   DIM       30                       * item 2 description
ITDESCN   DIM       30                       * new item description
ITEMNUMB  DIM       9                        * Item Number
ITMDESC   DIM       30                       * needed for PRIITMDS
ITMFLAG   FORM      1                        * needed for PRIITMDS
.
MBS       INIT      "MBS"
.
NINE8     FORM      "99999999"               * needed for PRIITMDS
.
PATHFLAG  FORM      1                        * needed for PRIITMDS
.
RTYPE     DIM       1                        * Audit Record Type
.
SAVEEDAT  DIM       8                        * Save Effective Date (CCYYMMDD)
SAVEFLAG  DIM       2                        * Save Item Type 0 = MBS, 1 = AMA
SAVEITM1  DIM       9                        * Save 1st Item Number
SAVEITM2  DIM       9                        * Save 2nd Item Number
SAVEITMN  DIM       9                        * Save New Item Number
SAVESPAR  DIM       20                       * Save Spare Variables
SAVESUB1  DIM       3                        * Save 1st Subitem Number
SAVESUB2  DIM       3                        * Save 2nd Subitem Number
SAVESUBN  DIM       3                        * Save New Subitem Number
SERDATE   DIM       8                        * needed for PRIITMDS
SHTDESC   DIM       23                       * needed for PRIITMDS
SP12      INIT      "            "
SUBITEM   DIM       3                        * Sub Item Number
.
Z30       INIT      "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
.
PRGID     INIT      "IBAPRI74"
PRGNAM    INIT      "Special Pathology Test File Maintenance"
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
ML0000    CALL      INIT0000               * initialization and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,ML1000,ML2000,ML3000
.
. ---- add a procedure code ----
.
ML1000    CALL      SCR0000                * display screen format
          CALL      PROC0000               * input procedure code
          BRANCH    EXIT,ML0100            * nothing input, get next option
          CALL      ACPT0000               * accept initial values
          BRANCH    EXIT,ML1000            * nothing input
          CALL      SEL0000                * select field to modify
          BRANCH    EXIT,ML1000            * (C)ancel selected
          CALL      WRT0000                * write to file
          GOTO      ML1000
.
. ---- modify a procedure code ----
.
ML2000    CALL      SCR0000                * display screen format
          CALL      PROC0000               * input procedure code
          BRANCH    EXIT,ML0100            * nothing input, get next option
          CALL      DISP0000               * display details
          CALL      SEL0000                * select field to modify
          BRANCH    EXIT,ML2000            * (C)ancel selected
          CALL      UPD0000                * update record
          GOTO      ML2000
.
. ---- delete a procedure code ----
.
ML3000    CALL      SCR0000                * display screen format
          CALL      PROC0000               * input procedure code
          BRANCH    EXIT,ML0100            * nothing input, get next option
          CALL      DISP0000               * display detail
          CALL      DELQST                 * ok to delete ?
          BRANCH    CEXIT,ML3100:          * Yes
                          ML3000:          * No
                          ML0100           * Cancel
ML3100    CALL      DEL0000                * delete this record
          GOTO      ML3000
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialization                               *
.*  The initialization routine is used to display headings and open files.  *
.*  Any other general initialization can also be performed here.            *
.****************************************************************************
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,"Opening controlf"
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"prisptaf"
          OPEN      PRISPTA1,"prisptaf"
.
          DISPLAY   *P64:24,"priitemf"
          OPEN      PRIITEM1,"priitemf"
          OPEN      PRIITEM2,"priitemf"
.
          READ      CONTROLF,THIRTY3;*57,PRCNAUDG
          IF        PRCNAUDG <> 1
            DISPLAY   *P64:24,"priaudsp"
            OPEN      PRIAUDSP,"priaudsp"
          ENDIF
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Valid option selected                  *
.*                        TRUE  (1)  Exit option selected                   *
.*              COPTION = 1  Insert option selected                         *
.*                        2  Change option selected                         *
.*                        3  Delete option selected                         *
.****************************************************************************
.
. ---- display option screen ----
.
OPTN0000  CALL      SELOPTN                       * select option
          COMPARE   ZERO,COPTION
          GOTO      OPTN9000 IF EQUAL                 * exit
          MOVE      FALSE,EXIT
          GOTO      OPTN9999
.
OPTN9000  MOVE      TRUE,EXIT                   * set EXIT = 1
OPTN9999  RETURN
+
.**************************************************************************
.*                                  CLR0000            Called by: PROC0000*
.*                            clear global variables                      *
.**************************************************************************
.
CLR0000   MOVE      ZERO,PRSPFLAG            * Item Type
          MOVE      SP9,PRSPITM1             * 1st Item Number
          MOVE      SP3,PRSPSUB1             * 1st Sub-Item Number
          MOVE      SP8,PRSPEDAT             * Effective Date
          MOVE      SP9,PRSPITM2             * 2nd Item Number
          MOVE      SP3,PRSPSUB2             * 2nd Sub-Item Number
          MOVE      SP9,PRSPITMN             * New Item Number
          MOVE      SP3,PRSPSUBN             * New Sub-Item Number
          MOVE      SP30,ITDESC1             * clear item 1 description
          MOVE      SP30,ITDESC2             * clear item 2 description
          MOVE      SP30,ITDESCN             * clear new item description
.
CLR9999   RETURN
+
.**************************************************************************
.*                               PROC0000              Called by: ML0000  *
.*                       input indentification code                       *
.**************************************************************************
PROC0000  CALL      CLR0000                  * Clear the record variables
          CALL      FLAG0000                 * Keyin Item Type
          BRANCH    EXIT,PROC9999
.
PROC1000  CALL      ITM10000                 * Keyin Item Number 1
          BRANCH    EXIT,PROC0000
.
PROC2000  CALL      ITM20000                 * Keyin Item Number 2
          BRANCH    EXIT,PROC1000
.
          CALL      EDAT0000                 * Keyin Effective Date
          BRANCH    EXIT,PROC2000
.
          IF        COPTION = 2
            CALL      SSAV0000               * save original details for audit
          ENDIF
.
PROC9999  RETURN
+
.**************************************************************************
.*                                  SCR0000            Called by: ML0000  *
.*                         display screen format                          *
.**************************************************************************
SCR0000   DISPLAY   *P1:3,*EF:
                    *P5:4,"MBS or AMA (M/A)      :":
                    *P5:5,"1st Item Number       :":
                    *P5:6,"2nd Item Number       :":
                    *P5:7,"Effective Date        :":
                    *P1:9,*V2LON," 1",*HOFF,". New Item Number       :"
.
SCR9999   RETURN
+
.*************************************************************************
.*                                  ACPT0000           Called by: ML0000 *
.*   INPUT mode only :      accept initial values                        *
.*************************************************************************
ACPT0000  CALL      ITMN0000                 * Keyin New Item Number
.
ACPT9999  RETURN
+
.****************************************************************************
.*                                   SEL0000           Called by: ML0000    *
.*                         select field to modify or post                   *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Post was selected.                     *
.*                        TRUE  (1)  Cancel was selected.                   *
.****************************************************************************
SEL0000   CALL      MAINQST                  * Ask for an item, post or cancel
.
          COMPARE   ZERO,CCITEM              * What was entered ?
          GOTO      SEL8000 IF EQUAL         * Post was selected
          GOTO      SEL9000 IF LESS          * Cancel was selected
          BRANCH    CCITEM,SEL1000
          BEEP
          GOTO      SEL0000
.
SEL1000   CALL      ITMN0000                 * Keyin New Item Number
          BRANCH    EXIT,SEL9000             * nothing or exitchar input
          GOTO      SEL0000
.
.         Post was selected. Set the exit flag to tell the calling routine.
.
SEL8000   MOVE      FALSE,EXIT               * Post was selected
          GOTO      SEL9999
.
.         Cancel was selected. Set the exit flag to tell the calling routine.
.
SEL9000   MOVE      TRUE,EXIT                * Cancel was selected
.
SEL9999   RETURN
+
.**************************************************************************
.*                              FLAG0000               Called by: PROC0000*
.*              Keyin Item Type   0 = MBS, 1 = AMA                        *
.**************************************************************************
FLAG0000  KEYIN        *P29:4,*EL,*DV,DIM1,*P29:4,*V2LON,DIM1
.
          ENDSET       DIM1
          APPEND       SP1,DIM1
          RESET        DIM1
          REP          UPPLOW,DIM1
.
          MATCH        SP1,DIM1              * anything entered ?
          GOTO         FLAG9500 IF EQUAL     * no
.
          MATCH        ANSM,DIM1             * MBS Item ?
          IF           @EQUAL
            MOVE         MBS,DESCFLAG        * Yes
            MOVE         ZERO,PRSPFLAG
          ELSE
            MATCH        ANSA,DIM1           * AMA Item ?
            IF           @EQUAL
              MOVE         AMA,DESCFLAG      * Yes
              MOVE         ONE,PRSPFLAG
            ELSE
              DISPLAY      *P1:24,*EL,*B,"Type not valid. ";
              CALL         HITENTER
              GOTO         FLAG0000
            ENDIF
          ENDIF
.
FLAG9000  DISPLAY      *P29:4,*V2LON,DESCFLAG
          MOVE         ZERO,EXIT
          GOTO         FLAG9999
.
FLAG9500  MOVE         ONE,EXIT
.
FLAG9999  RETURN
+
.**************************************************************************
.*                              ITM10000               Called by: PROC0000*
.*                       Keyin 1st Item Number                            *
.**************************************************************************
ITM10000  MOVE      TWENTY9,CCOL             * set up variables    
          MOVE      FIVE,CVERT                 for KYPRIITM routine
          MOVE      SP30,ITDESC1             * clear item description
.
ITM11000  MOVE      PRSPFLAG,IFLAG
          CALL      KYPRIITM                 * get an item #
          BRANCH    EXIT,ITM19000:           * exitchar entered
                         ITM12000:           * ? entered
                         ITM19000            * nothing entered
.
.-------- Item Entered
          MOVE      ITEMNUMB,PRSPITM1        * save 1st Item Number
          MOVE      SUBITEM,PRSPSUB1         * save 1st Sub-Item Number
.
          CALL      CHKI0000                 * Item on file ?
          MOVE      PRITDESC,ITDESC1         * save description
          CALL      SCR0000                  * Re-Display Screen
          CALL      DISP0000                 * Re-Display Data
          BRANCH    EXIT,ITM10000            * No, Re-Key Item Number
.--------  Valid Entry
          MOVE      ZERO,EXIT
          GOTO      ITM19999
.
.--------  ? Entered
ITM12000  MOVE      ZERO,HLEF
          MOVE      ONE,ITMFLAG              * Display all codes regardless date
          MOVE      ONE,PATHFLAG             * Display only Pathology Codes
          CALL      PRIITMDS                 * list codes on file
.
          DISPLAY   *P1:24,*EL,"Item Number: "
          MOVE      TEN4,CCOL
          MOVE      TWENTY4,CVERT
          GOTO      ITM11000                 * Re-Key Item Number
.
.-------- Exit Char Entered
ITM19000  UNPACK    SP12,PRSPITM1,PRSPSUB1   * Move spaces to data
          CALL      SCR0000                  * Re-Display Screen
          CALL      DISP0000                 * Re-Display Screen
          MOVE      ONE,EXIT
.
ITM19999  RETURN
+
.***************************************************************************
.*                             CHKI0000               Called by: PROC0000  *
.*                    CHecK if Item on priitemf file                       *
.***************************************************************************
CHKI0000  PACK      KEY22,PRSPFLAG,ITEMNUMB,SUBITEM,Z30
          CALL      RSPRIT1                      * position in file
          CALL      RPPRIT1                      * read next record
          BRANCH    OVRCD,CHKI5000               * end of file
.
          COMPARE   PRITFLAG,PRSPFLAG            * Same item type ?
          GOTO      CHKI5000 IF NOT EQUAL        * No
.
          MATCH     ITEMNUMB,PRITITMN            * Same item number ?
          GOTO      CHKI5000 IF NOT EQUAL        * No
.
          MATCH     SUBITEM,PRITSUBN             * Same subitem number ?
          GOTO      CHKI5000 IF NOT EQUAL        * No
.
          MOVE      ZERO,EXIT
          GOTO      CHKI9999                     * Valid Item number. 
.
CHKI5000  DISPLAY   *P1:24,*EL,*B,"Item not on file.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
CHKI9999  RETURN
+
.**************************************************************************
.*                              ITM20000               Called by: PROC0000*
.*                        Keyin 2nd Item Number                           *
.**************************************************************************
ITM20000  MOVE      TWENTY9,CCOL             * set up variables    
          MOVE      SIX,CVERT                 for KYPRIITM routine
          MOVE      SP30,ITDESC2             * clear item description
.
ITM21000  MOVE      PRSPFLAG,IFLAG
          CALL      KYPRIITM                 * get an item #
          BRANCH    EXIT,ITM29000:           * exitchar entered
                         ITM22000:           * ? entered
                         ITM29000            * nothing entered
.
.-------- Item Entered
          MOVE      ITEMNUMB,PRSPITM2        * save 2nd Item Number
          MOVE      SUBITEM,PRSPSUB2         * save 2nd Sub-Item Number
.
          CALL      CHKI0000                 * Item on file ?
          MOVE      PRITDESC,ITDESC2         * save description
          CALL      SCR0000                  * Re-Display Screen
          CALL      DISP0000                 * Re-Display Data
          BRANCH    EXIT,ITM20000            * No, Re-Key Item Number
.--------  Valid Entry
          MOVE      ZERO,EXIT
          GOTO      ITM29999
.
.--------  ? Entered
ITM22000  MOVE      ZERO,HLEF
          MOVE      ONE,ITMFLAG              * Display all codes regardless date
          MOVE      ONE,PATHFLAG             * Display only Pathology Codes
          CALL      PRIITMDS                 * list codes on file
.
          DISPLAY   *P1:24,*EL,"Item Number: "
          MOVE      TEN4,CCOL
          MOVE      TWENTY4,CVERT
          GOTO      ITM21000                 * Re-Key Item Number
.
.-------- Exit Char Entered
ITM29000  UNPACK    SP12,PRSPITM2,PRSPSUB2   * Move spaces to data
          CALL      SCR0000                  * Re-Display Screen
          CALL      DISP0000                 * Re-Display Screen
          MOVE      ONE,EXIT
.
ITM29999  RETURN
+
.**************************************************************************
.*                              EDAT0000               Called by: PROC0000*
.*                       Keyin Effective Date (CCYYMMDD)                  *
.**************************************************************************
EDAT0000  MOVE      TWENTY9,CCOL
          MOVE      SEVEN,CVERT
          UNPACK    SP6,CDAY,CMON,CYEAR
          MOVE      CCC,CCENT
EDAT1000  CALL      KEYDATE                      * get date
          BRANCH    CQUEST,EDAT5000
          BRANCH    OVRCD,EDAT9400               * invalid date input
.
          CALL      VALD0000                     * validate test & date
          BRANCH    EXIT,EDAT0000                * not valid
.
          CALL      SCR0000                  * Re-Display Screen
          CALL      DISP0000                 * Re-Display Data
          MOVE      ZERO,EXIT
          GOTO      EDAT9999                     * valid
.
.-------- ? Entered
EDAT5000  CALL      DDAT0000                     * display effective dates
          MOVE      TWENTY9,CCOL
          MOVE      SEVEN,CVERT
          UNPACK    SP6,CDAY,CMON,CYEAR
          MOVE      CCC,CCENT
          GOTO      EDAT1000                 * Re-Key Date
          
EDAT9400  CALL      SCR0000                  * Re-Display Screen
          CALL      DISP0000                 * Re-Display Data
          MOVE      ONE,EXIT
.
EDAT9999  RETURN
+
.***************************************************************************
.*                               DDAT0000              Called by: EDAT0000 *
.*                  Display effective DATes for item number                *
.***************************************************************************
DDAT0000  DISPLAY   *P1:8,*EF,*V2LON,*ULON,"Effective Dates for ",PRSPITM1;
.
          MATCH     SP3,PRSPSUB1                 * subitem ?
          GOTO      DDAT0500 IF EQUAL            * no
.
          DISPLAY   *V2LON,*ULON," (",PRSPSUB1,")";
.
DDAT0500  DISPLAY   *V2LON,*ULON," and ",PRSPITM2;
.
          MATCH     SP3,PRSPSUB2                 * subitem ?
          GOTO      DDAT0600 IF EQUAL            * no
.
          DISPLAY   *V2LON,*ULON," (",PRSPSUB2,")";
.
DDAT0600  MOVE      EIGHT,CVERT
          MOVE      PRSPFLAG,IFLAG           * Item Type
          MOVE      PRSPITM1,SAVEITM1        * 1st Item Number
          MOVE      PRSPSUB1,SAVESUB1        * 1st Sub-Item Number
          MOVE      PRSPITM2,SAVEITM2        * 2nd Item Number
          MOVE      PRSPSUB2,SAVESUB2        * 2nd Sub-Item Number
.
          PACK      KEY34,IFLAG,SAVEITM1,SAVESUB1,SP30
          CALL      RSPRSP1                      * position in file
DDAT0700  CALL      RKPRSP1                      * read next record
          BRANCH    OVRCD,DDAT8000
.
          COMPARE   IFLAG,PRSPFLAG               * same item type ?
          GOTO      DDAT8000 IF NOT EQUAL        * no
.
          MATCH     SAVEITM1,PRSPITM1            * same item number ?
          GOTO      DDAT8000 IF NOT EQUAL        * no
.
          MATCH     SAVESUB1,PRSPSUB1            * same sub item number ?
          GOTO      DDAT8000 IF NOT EQUAL        * no
.
          MATCH     SAVEITM2,PRSPITM2            * same item number ?
          GOTO      DDAT0700 IF NOT EQUAL        * no
.
          MATCH     SAVESUB2,PRSPSUB2            * same sub item number ?
          GOTO      DDAT0700 IF NOT EQUAL        * no
.
          GOTO      DDAT2000
.
DDAT1000  CALL      RKPRSP1                      * read next record
          BRANCH    OVRCD,DDAT9999               * no records on file
.
          COMPARE   IFLAG,PRSPFLAG               * same item type ?
          GOTO      DDAT9999 IF NOT EQUAL        * no
.
          MATCH     SAVEITM1,PRSPITM1            * same item number ?
          GOTO      DDAT9999 IF NOT EQUAL        * no
.
          MATCH     SAVESUB1,PRSPSUB1            * same sub item number ?
          GOTO      DDAT9999 IF NOT EQUAL        * no
.
          MATCH     SAVEITM2,PRSPITM2            * same item number ?
          GOTO      DDAT1000 IF NOT EQUAL        * no
.
          MATCH     SAVESUB2,PRSPSUB2            * same sub item number ?
          GOTO      DDAT1000 IF NOT EQUAL        * no
.
.         We have a record to be displayed
.
DDAT2000  COMPARE   TWENTY2,CVERT                * page full ?
          GOTO      DDAT5000 IF NOT LESS         * yes
.
          ADD       ONE,CVERT                    * increment line count
          UNPACK    PRSPEDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          DISPLAY   *P1:CVERT,CPCDATE            * display date
.
          GOTO      DDAT1000                     * get next record
.
DDAT5000  KEYIN     *P1:24,*EL,"(",*V2LON,*DV,ANSC,*HOFF,")ontinue, (":
                    *V2LON,*DV,ANSN,*HOFF,")ext page, (",*V2LON,*DV,ANSF,*HOFF:
                    ")irst page ? ":
                    *P41:24,*V2LON,ANS
.
          RESET     ANS
          REP       UPPLOW,ANS
.
          CMATCH    ANSC,ANS                     * continue ?
          GOTO      DDAT9999 IF EQUAL            * yes
.
          CMATCH    ANSN,ANS                     * next ?
          GOTO      DDAT7000 IF EQUAL            * yes
.
          CMATCH    ANSF,ANS                     * first
          GOTO      DDAT0000 IF EQUAL            * yes
.
          BEEP
          GOTO      DDAT5000
.
DDAT7000  DISPLAY   *P1:9,*EF                    * clear page for next screen
          MOVE      EIGHT,CVERT
          GOTO      DDAT2000
.
DDAT8000  DISPLAY   *P1:24,*EL,*B,"No dates for this item on file.  ";
          CALL      HITENTER
.
DDAT9999  RETURN
+
.****************************************************************************
.*                                VALD0000             Called by: DATE0000  *
.*                validate the item and date input                          *
.*   RETURNS:      EXIT   0 = invalid item and date                         *
.*                        1 = valid item and date                           *
.****************************************************************************
.
VALD0000  PACK      DIM8,CCENT,CYEAR,CMON,CDAY * save date
          REP       " 0",DIM8
.
          PACK      KEY34,PRSPFLAG,PRSPITM1,PRSPSUB1,DIM8,PRSPITM2,PRSPSUB2
          CALL      RDPRSP1
          BRANCH    COPTION,VALD1000:            * insert mode
                            VALD2000:            * change mode
                            VALD2000             * delete mode
.
.         Insert mode
.
VALD1000  BRANCH    OVRCD,VALD9000               * not on file - ok
.
          DISPLAY   *P1:24,*EL,*B,"Item and date already on file.  ";
          CALL      HITENTER
          MOVE      SP9,PRSPITMN             * Clear New Item Number
          MOVE      SP3,PRSPSUBN             * Clear New Sub-Item Number
          MOVE      SP8,PRSPEDAT             * Clear Effective Date
          GOTO      VALD9500
.
.         Change / Delete mode
.
VALD2000  BRANCH    OVRCD,VALD3000               * not on file
.
.         Record on file - now get new item description
.
          PACK      KEY22,PRSPFLAG,PRSPITMN,PRSPSUBN,Z30
          CALL      RSPRIT1                      * position in file
          CALL      RPPRIT1                      * read next record
          BRANCH    OVRCD,VALD9000               * end of file
.
          COMPARE   PRITFLAG,PRSPFLAG            * Same item type ?
          GOTO      VALD9000 IF NOT EQUAL        * No
.
          MATCH     PRSPITMN,PRITITMN            * Same item number ?
          GOTO      VALD9000 IF NOT EQUAL        * No
.
          MATCH     PRSPSUBN,PRITSUBN            * Same subitem number ?
          GOTO      VALD9000 IF NOT EQUAL        * No
.
          MOVE      PRITDESC,ITDESCN             * save description
          GOTO      VALD9000
.
VALD3000  DISPLAY   *P1:24,*EL,*B,"Item not on file for this date.  ";
          CALL      HITENTER
          GOTO      VALD9500
.
VALD9000  MOVE      ZERO,EXIT
          PACK      PRSPEDAT,CCENT,CYEAR,CMON,CDAY * save date
          REP       " 0",PRSPEDAT
          GOTO      VALD9999
.
VALD9500  MOVE      ONE,EXIT
.
VALD9999  RETURN
.**************************************************************************
.*                              ITMN0000               Called by: ACPT000 *
.*                       Keyin New Item Number                            *
.**************************************************************************
ITMN0000  MOVE      TWENTY9,CCOL             * set up variables    
          MOVE      NINE,CVERT                 for KYPRIITM routine
          MOVE      SP30,ITDESCN             * clear item description
.
ITMN1000  MOVE      PRSPFLAG,IFLAG
          CALL      KYPRIITM                 * get an item #
          BRANCH    EXIT,ITMN9000:           * exitchar entered
                         ITMN2000:           * ? entered
                         ITMN9000            * nothing entered
.
.-------- Item Entered
          MOVE      ITEMNUMB,PRSPITMN        * save Item Number
          MOVE      SUBITEM,PRSPSUBN         * save Sub-Item Number
.
          CALL      CHKI0000                 * Item on file ?
          MOVE      PRITDESC,ITDESCN         * save description
          CALL      SCR0000                  * Re-Display Screen
          CALL      DISP0000                 * Re-Display Data
          BRANCH    EXIT,ITMN0000            * No, Re-Key Item Number
.--------  Valid Entry
          MOVE      ZERO,EXIT
          GOTO      ITMN9999
.
.--------  ? Entered
ITMN2000  MOVE      ZERO,HLEF
          MOVE      ONE,ITMFLAG              * Display all codes regardless date
          MOVE      ONE,PATHFLAG             * Display only Pathology Codes
          CALL      PRIITMDS                 * list codes on file
.
          DISPLAY   *P1:24,*EL,"Item Number: "
          MOVE      TEN4,CCOL
          MOVE      TWENTY4,CVERT
          GOTO      ITMN1000                 * Re-Key Item Number
.
.-------- Exit Char Entered
ITMN9000  UNPACK    SP12,PRSPITMN,PRSPSUBN   * Move spaces to data
          CALL      SCR0000                  * Re-Display Screen
          CALL      DISP0000                 * Re-Display Screen
          MOVE      ONE,EXIT
.
ITMN9999  RETURN
+
.**************************************************************************
.*                              WRT0000                Called by: ML0000  *
.*                          write a new record                            *
.**************************************************************************
.
WRT0000   DISPLAY   *P56:24,*EL,"Record Inserted";
.
          PACK      KEY34,PRSPFLAG,PRSPITM1,PRSPSUB1,PRSPEDAT,PRSPITM2,PRSPSUB2
          CALL      WRPRSP1
.
          MOVE      ANSA,RTYPE               * adding a record
          CALL      WAUD0000                 * write an audit file record
.
WRT9999   RETURN
+
.*************************************************************************
.*                                DISP0000             Called by: ML0000 *
.*                   display details corresponse to procedure code.      *
.*                   and save values read from file                      *
.*************************************************************************
DISP0000  DISPLAY   *P29:4,*V2LON,DESCFLAG:
                    *P29:5,*V2LON,PRSPITM1;
.
          MATCH     SP3,PRSPSUB1
          IF        !@EQUAL
            DISPLAY   *P38:5,*V2LON,"(",PRSPSUB1,")";
          ENDIF
          DISPLAY   *P45:5,ITDESC1
.
          DISPLAY   *P29:6,*V2LON,PRSPITM2;
.
          MATCH     SP3,PRSPSUB2
          IF        !@EQUAL
            DISPLAY   *P38:6,*V2LON,"(",PRSPSUB2,")";
          ENDIF
          DISPLAY   *P45:6,ITDESC2
.
          UNPACK    PRSPEDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P29:7,*V2LON,CPCDATE:
                    *P29:9,*V2LON,PRSPITMN;
.
          MATCH     SP3,PRSPSUBN
          IF        !@EQUAL
            DISPLAY   *P38:9,*V2LON,"(",PRSPSUBN,")";
          ENDIF
          DISPLAY   *P45:9,ITDESCN
.
DISP9999  RETURN
+
.***************************************************************************
.*                               UPD0000               Called by: ML0000   *
.*                      update record and insert key if part of            *
.*                      key has been modified.                             *
.***************************************************************************
UPD0000   DISPLAY   *P56:24,*EL,"Record Updated";
          CALL      UPPRSP1
.
          MOVE      ANSC,RTYPE               * changing a record
          CALL      WAUD0000                 * write an audit file record
.
UPD9999   RETURN
+
.****************************************************************************
.*                              DEL0000                Called by: ML0000    *
.*                         delete an existing record                        *
.****************************************************************************
DEL0000   DISPLAY   *P56:24,*EL,"Record Deleted";
.
          PACK      KEY34,PRSPFLAG,PRSPITM1,PRSPSUB1,PRSPEDAT,PRSPITM2,PRSPSUB2
          CALL      DEPRSP1
.
          MOVE      ANSD,RTYPE               * deleting a record
          CALL      WAUD0000                 * write an audit file record
.
DEL9999   RETURN
+
.***************************************************************************
.*                           LSAV0000                  Called by :         *
.*                   Load SAVe variables to original                       *
.***************************************************************************
LSAV0000  MOVE      SAVEFLAG,PRSPFLAG        * Item Type
          MOVE      SAVEITM1,PRSPITM1        * 1st Item Number
          MOVE      SAVESUB1,PRSPSUB1        * 1st Sub-Item Number
          MOVE      SAVEEDAT,PRSPEDAT        * Effective Date
          MOVE      SAVEITM2,PRSPITM2        * 2nd Item Number
          MOVE      SAVESUB2,PRSPSUB2        * 2nd Sub-Item Number
          MOVE      SAVEITMN,PRSPITMN        * New Item Number
          MOVE      SAVESUBN,PRSPSUBN        * New Sub-Item Number
LSAV9999  RETURN
+
.***************************************************************************
.*                           SSAV0000                  Called by :         *
.*                   Store into SAVe variables                             *
.***************************************************************************
SSAV0000  MOVE      PRSPFLAG,SAVEFLAG        * Item Type
          MOVE      PRSPITM1,SAVEITM1        * 1st Item Number
          MOVE      PRSPSUB1,SAVESUB1        * 1st Sub-Item Number
          MOVE      PRSPEDAT,SAVEEDAT        * Effective Date
          MOVE      PRSPITM2,SAVEITM2        * 2nd Item Number
          MOVE      PRSPSUB2,SAVESUB2        * 2nd Sub-Item Number
          MOVE      PRSPITMN,SAVEITMN        * New Item Number
          MOVE      PRSPSUBN,SAVESUBN        * New Sub-Item Number
.
SSAV9999  RETURN
.
+
.***************************************************************************
.*                           WAUD0000                  Called by : INS0000 *
.*                   Write record to Audit File                    DEL0000 *
.* Parameters: RTYPE - audit record type                                   *
.*                     A=Add                                               *
.*                     C=Change                                            *
.*                     D=Delete                                            *
.***************************************************************************
WAUD0000  BRANCH    PRCNAUDG,WAUD9999         * auditing off?
          CALL      IBACLOCK
          PACK      PRSPAUDD,CCC,CYY,CMM,CDD  * Date of audit
          REP       " 0",PRSPAUDD
          MOVE      CTIMEIS,PRSPAUDT          * Time of change
          MOVE      PORT,PRSPAUDP             * PORT id
          MOVE      RTYPE,PRSPAUDR            * Record Type
          MOVE      ONE,PRSPAUDS              * Record Status (1=not printed)
          MOVE      PASSCODE,PRSPAUDO         * Operator ID
          PACK      KEY19,PRSPAUDD,PRSPAUDT,PRSPAUDP,PRSPAUDR
          CALL      AWPRSP                    * Write audit record
          MATCH     PRSPAUDR,ANSC             * "after" change?
          IF        @EQUAL
            MOVE      ANSB,PRSPAUDR           * set up for "before" change 
            CALL      LSAV0000                * Load saved variables back
            PACK      KEY19,PRSPAUDD,PRSPAUDT,PRSPAUDP,PRSPAUDR
            CALL      AWPRSP                  * Write audit record
          ENDIF
.                        
WAUD9999  RETURN
+
.
. =========================================================================
. Includes for all file I/O would be included here.
. Includes for all procedural routines would be included here.
. =========================================================================
.
          INC       STD001IO
          INC       KYPRIITM                 * Get Item Number
          INC       PRIITMDS                 * item listing
.
          INC       PRIITMIO/INC             * Private Practice Item File
          INC       PRISPTIO/INC             * Exception Charges Test File
