.******************************************************************************
.*                                                                            *
.*                        P R O G R A M   S U M M A R Y                       *
.*                        -------------   -------------                       *
.*                                                                            *
.*     PROGRAM NAME:     IBAPMS22                                             *
.*                                                                            *
.*     FUNCTION:         WEEKLY OCCUPANCY REPORT                              *
.*                                                                            *
.*     DATE WRITTEN:     12/04/90                                             *
.*                                                                            *
.*     AUTHOR:           DIG (Adapted from IBABIL63)                          *
.*                                                                            *
.*     MODIFICATIONS:                                                         *
.******************************************************************************
.* V12.00.01 22/05/2025 Thanh T         TSK 0955096                           *
.*           Changed for alphanumeric visit number                            *
.******************************************************************************
.*        V10.04.01 10/07/2014  J.Tan          CAR 261630                     *
.*                  Removed port number from temp file name                   *
.*        V10.03.03 23/08/2013  Peter Vela     CAR 290453                     *
.*                  Added save date variables befroe call to FINDAY           *
.*        V10.03.02 18/10/2012  Jill Parkinson CAR 273375                     *
.*                  Recompiled for DATECONV - first day of year calculation   *
.*        V10.03.01 27/02/2012 Peter McMullen CAR 259857                      *
.*                  Remove reference to file patyear1                         *
.*        V10.01.01 03/02/2011 Jill Parkinson CAR 233088                      *
.*                  Added pmsvx1af                                            *
.*        V9.02.01  01/11/2001  Dean Cramer                                   *
.*                  Fix bad start load that causes infinite loop.             *
.*        V5.08.01  28/08/2000  Caleb Sharman                                 *
.*                  Changed Health Fund variables to be 8 chars               *
.*        V5.08.B03 19/01/2000  J Habasque                                    *
.*                  Removed CCC when packing KEY4                             *
.*        V5.08.B02 06/01/2000  Steve Armstrong   SRF 636881                  *
.*                  Fixed packing of year to use century as well as year      *
.*                  before calling YEARCHK.                                   *
.*        V5.08.B01 05/01/2000  Tonii Tang                                    *
.*                  Replaced missing line of code needed for calculations     *
.******************************************************************************
.*        V5.07.02  30/07/1999  Steve Downing                                 *
.*                  Removed unnecessary code in date calculations             *
.*        V5.07.01  10/02/1999  Jim Stathopoulos                              *
.*                  Works like a charm !!!                                    *
.*        V5.07.B02 25/01/1999  Nicole Harrington 507 rebound 145             *
.*                  Mods to fix I*D on PATWOCP1/2                             *
.                   09/11/1998  Glenn Berry      5.07 changes
.******************************************************************************
.*        V5.01.125 23.02.92 Neeriem "I Hate Support" Dye (I.B.A.)            *
.*                  Modify to use standard routine KEYDATE                    *
.*        V5.01.126 16.03.92 Neeriem "I Hate Support" Dye (I.B.A.)            *
.*                  Fixed to display dates nicely                             *
.*        V5.01.127 19/04/93 DIG                                              *
.*                  Made sure the TEXTRA variable is now used for additional  *
.*                  charging.                                                 *
.*        V5.01.128 04/06/93 J.Tan    SRF 121660                              *
.*                  Added ward/bed history file                               *
.*        V5.01.129 30/12/93 I.Rutt   Mt Alvernia                             *
.*                  Added new include PATACDAY                                *
.*        V5.02.001 02/03/95 Paul Howells     SRF 135026                      *
.*                  Fixed the use of PATWBHFD file.                           *
.*        V5.03.02  08/02/96  Steve Armstrong    SRF 613398                   *
.*                  Fixed the use of PATWBHFD file.                           *
.*                  Added use of PTCNH82W.                                    *
.*                                                                            *
.******************************************************************************
.
          INC       STD001FD
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
          INC       PATCODFD/INC
          INC       PATDAYFD/INC
          INC       PATDSCFD/INC
          INC       PATMA1FD/INC
.
          INC       PATMI1FD/INC
          INC       PMSVX1FD/INC
          INC       PATTRNFD/INC
          INC       PATWR1FD/INC
          INC       PATWBHFD/INC
          INC       WDACTVVR/INC
+
.
.         Temporary index files for report
.
PATFNAME  DIM       8
.
PSTROL    FILE      ASCII, FIXED=256
PATMP1XX  IFILE     SQL, FIXED=9, KEY="u1-8"
PATWOCP1  IFILE     SQL, FIXED=47, KEY="U1-3,4-11"
PATWOCP2  IFILE     SQL, FIXED=47, KEY="U1-3,37-46"
.
.NAME     TYPE   LENGTH   PHYSICAL   START LOC.   DESCRIPTION
.----     ----   ------   --------   ----------   -----------
WOWARD    DIM       3          3           1      OCCUPANCY WARD NUMBER
WODATE    DIM       8          8           4      OCCUPANCY DATE
.
WODAYA    FORM      7          5          12      OCCUPANCY BED DAYS - ADULT
WODAYC    FORM      7          5          17      OCCUPANCY BED DAYS - CHILD
WODAYD    FORM      7          5          22      OCCUPANCY BED DAYS - DAY CSES
WODAYT    FORM      7          5          27      OCCUPANCY BED DAYS - TOTAL
WOAVAIL   FORM      7          5          32      OCCUPANCY BED DAYS AVAILABLE
.
WODWEEK   DIM       10        10          37      DAY OF THE WEEK
.
.End of Record                            47
+
.
.         Variables Definitions
.
ACTVFLAG  FORM      1
ADTOT     FORM      7
ASDATE    DIM       8
AVBED     FORM      7
AVBED1    FORM      7
AVBED2    FORM      7
AVBED3    FORM      7
AVBED4    FORM      7
AVBED5    FORM      7
AVBED6    FORM      7
AVBED7    FORM      7
.
BOAMT     FORM      7.2
BOBED     FORM      5
.
CADAYS    FORM      4
CAGECOFF  FORM      2
CHG       FORM      1
CHTOT     FORM      7
CMDLINE   DIM       50
CODE      DIM       2
COL1      FORM      7
COL2      FORM      7
COL3      FORM      7
COL4      FORM      7
COL5      FORM      7
COL6      FORM      7
COL7      FORM      7
COUNT     FORM      1
CRDAY     FORM      3
CRYEAR    FORM      3
CUDATE    DIM       8
CURDAY    FORM      3
.
DATEFLG   FORM      2
DATE1     DIM       10
DATE2     DIM       10
DATE3     DIM       10
DATE4     DIM       10
DATE5     DIM       10
DATE6     DIM       10
DATE7     DIM       10
DAYA1     FORM      7
DAYA2     FORM      7
DAYA3     FORM      7
DAYA4     FORM      7
DAYA5     FORM      7
DAYA6     FORM      7
DAYA7     FORM      7
DAYFLG    FORM      1
DAYPERD   FORM      3.2
DAYPERI   FORM      3.2
DAYWRK1   FORM      9.4     **** working variables
DAYWRK2   FORM      9.4
DAYC1     FORM      7    * temporary variables for bed days - CHILD
DAYC2     FORM      7
DAYC3     FORM      7
DAYC4     FORM      7
DAYC5     FORM      7
DAYC6     FORM      7
DAYC7     FORM      7
DAYS      DIM       10
DAY1      DIM       10
DAY2      DIM       10
DAY3      DIM       10
DAY4      DIM       10
DAY5      DIM       10
DAY6      DIM       10
DAY7      DIM       10
DESCWARD  DIM       19
DDROOM    DIM       23
DDTYPE    DIM       16
DIM4      DIM       4
DIM8      DIM       8
DIM17     DIM       17
DNAME     DIM       30
.
ENDDTE    DIM       8
ENDFLG    FORM      1
.
FDATE     DIM       8
FEAMT     FORM      6.2
FEDAYS    FORM      4
FINISH    FORM      1
FIRST     FORM      1
FNAMEI    DIM       8
FNAMEU    DIM       8
FNAMER    DIM       8
FORM71    FORM      7.1
FROMDATE  DIM       8
.
GATOTAL   FORM      7.2
GBTOTAL   FORM      5
GRCOL1    FORM      7
GRCOL2    FORM      7
GRCOL3    FORM      7
GRCOL4    FORM      7
GRCOL5    FORM      7
GRCOL6    FORM      7
GRCOL7    FORM      7
GRDBED    FORM      7
GRDBEDS   FORM      7
GRDBED1   FORM      7 
GRDBED2   FORM      7 
GRDBED3   FORM      7 
GRDBED4   FORM      7 
GRDBED5   FORM      7 
GRDBED6   FORM      7 
GRDBED7   FORM      7 
GRTOT     FORM      7
.
JDAYS     FORM      3
JDAYT     FORM      3
JYEAR     FORM      2
.
KDATE     DIM       10
KDAY      FORM      3
.
LNO       FORM      2
LOOP      FORM      1
LPDATE1   FORM      8
LPDATE2   FORM      8
LYR       FORM      1
.
MAAMT     FORM      6.2
MADAYS    FORM      4
MORE1WK   FORM      1
.
NEWDATE   DIM       8
NODAYS    FORM      3
.
OPCND     FORM      1
ORDATE    DIM       8
.
PAGENO    FORM      3
PASSDATE  DIM       8
PCENT1    FORM      3.1
PCENT2    FORM      3.1
PCENT3    FORM      3.1
PCENT4    FORM      3.1
PCENT5    FORM      3.1
PCENT6    FORM      3.1
PCENT7    FORM      3.1
PCENT8    FORM      3.1
PTCNH82W  FORM      1
.
READFLG   FORM      1
.
SAVAMT    FORM      6.2
SAVWARD   DIM       3
SAVWODTE  DIM       8
SAVWODWK  DIM       10
SAVDAY    FORM      3
SAVYR     DIM       4
SAVDD     DIM       2
SAVMM     DIM       2
SAVCC     DIM       2
SAVYY     DIM       2
SBED      DIM       3
SDATEFLG  FORM      2
SDAYMON   DIM       4
SEC       FORM      2
SRBDAY    DIM       4
SRYEAR    FORM      4
STARTDTE  DIM       8
STATUS    FORM      1
SVHNOCC   FORM      3
SYEAR     DIM       4
.
TYEAR     DIM       4
TDAY      FORM      3
TDAYMON   DIM       4
TIMEIS    DIM       8
TMPADMN   DIM       8
TODATE    DIM       8
TOJULCC   FORM      2
TOJULDD   FORM      3
TOJULYY   FORM      2
TOTAMT    FORM      9.2
TOTDAY    FORM      8
TWODAYA   FORM      7    * Bed Type total bed days - ADULT
TWODAYC   FORM      7    * Bed Type total bed days - CHILD
.
VARDAT    DIM       8
VERT      FORM      2
.
WARBEDAC  FORM      8.2 
WARTOTBD  FORM      6
WDATE     DIM       8
WDATE1    DIM       8
WDATE2    DIM       8
WDT1      DIM       8
WDT2      DIM       8
WDT3      DIM       8
WDT4      DIM       8
WDT5      DIM       8
WDT6      DIM       8
WDT7      DIM       8
WKDATE    DIM       8
WRDAV     FORM      7
WRDAVS    FORM      7
WRDTOT    FORM      7
WSTAT     FORM      1
.
XAXIS     FORM      3
XAXIS1    FORM      3
XAXIS2    FORM      3
XDAY1     DIM       2
XDAY2     DIM       2
XMON1     DIM       2
XMON2     DIM       2
XYEAR1    DIM       2
XCENT1    DIM       2
XYEAR2    DIM       2
XCENT2    DIM       2
.
YEARFLG   FORM      1
.
.
. PROGRAM CONSTANTS
. -----------------
.
CODEA     INIT      "A "
CODEBT    INIT      "BT"
CODEC     INIT      "C "
CODECC    INIT      "CC"
CODECL    INIT      "CL"
CODEDC    INIT      "DC"
CODEM     INIT      "M "
CODEP     INIT      "P "
CODER     INIT      "R "
CODERT    INIT      "RT"
CODES     INIT      "S "
CODET     INIT      "T "
CODEUNK   INIT      "UNK"
DUMMY     FORM      "0"
HPCENT    FORM      "100.00"
LYEAR     FORM      "366"
ONEHD     INIT      "100"
OYEAR     FORM      "365"
PCENT     INIT      "%"
ZEIGHT    INIT      "ZZZZZZZZ"
ZZZ       INIT      "~~~"
.
.
PRGID     INIT      "IBAPMS22"
PRGNAM    INIT      "Hospital Weekly Occupancy Report"
VERSION   INIT      "V12.00.01"
+
.         Start of Program
.
          CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patdschf";
          OPEN      PATDSCH1,"patdschf"
          OPEN      PATDSCH2,"patdschf"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          DISPLAY   *P64:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PATMI1A2,"patmi1af"
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"pattranf";
          OPEN      PATTRAN2,"pattranf"
.
          DISPLAY   *P64:24,"patwr1af";
          OPEN      PATWR1A1,"patwr1af"
          OPEN      PATWR1A3,"patwr1af"
.
          DISPLAY   *P64:24,"patwbhaf";
          OPEN      PATWBHA1,"patwbhaf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          READ      CONTROLF,TEN;*94,CAGECOFF
          READ      CONTROLF,TWENTY;*250,PTCNH82W
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,PATFNAME
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,FNAMEI
.
          PACK      CUDATE,CCC,CYY,CMM,CDD
          REP       " 0",CUDATE
+
.         Start of Program
.
START     
+
.         Keyin From Date
.
KADAT1    
          DISPLAY   *P1:4,*EF,"Keyin From Date : ":
                        *P1:6,"Keyin To   Date :"
.
          MOVE      FOUR,VERT
          MOVE      ZERO,IDAY
          CALL      KEYINDTE
.
          COMPARE   ZERO,IDAY
          GOTO      ENDIT IF EQUAL
.
          PACK      STARTDTE,ICENT,IYEAR,IMON,IDAY
          PACK      FROMDATE,ICENT,IYEAR,IMON,IDAY
          REP       " 0",STARTDTE
          REP       " 0",FROMDATE
.
          MATCH     STARTDTE,CUDATE
          GOTO      INVDTE1 IF LESS
.
          UNPACK    STARTDTE,XCENT1,XYEAR1,XMON1,XDAY1
.
.         Keyin To Date
.
KADAT2    MOVE      SIX,VERT
          MOVE      ZERO,IDAY
          CALL      KEYINDTE
.
          COMPARE   ZERO,IDAY
          GOTO      KADAT1 IF EQUAL
.
          PACK      ENDDTE,ICENT,IYEAR,IMON,IDAY
          PACK      TODATE,ICENT,IYEAR,IMON,IDAY
          REP       " 0",TODATE
          REP       " 0",ENDDTE
.
          MATCH     ENDDTE,CUDATE
          GOTO      INVDTE2 IF LESS
.
          MATCH     STARTDTE,ENDDTE
          GOTO      INVDATG IF LESS
.
          UNPACK    ENDDTE,XCENT2,XYEAR2,XMON2,XDAY2
          PACK      ACTVFDTE,STARTDTE
          PACK      ACTVTDTE,ENDDTE
          PACK      ORDATE,XCENT2,XYEAR2,XMON2,XDAY2
.
.         Add one to the ENDDTE. This is because initially the program did not
.         include the end date, so it looks at all the data upto but including
.         the ENDDTE.
.
          MOVE      IDAY,DD
          MOVE      IMON,MM
          MOVE      IYEAR,YY
          MOVE      ICENT,CC
          CALL      DMYCON
.
          ADD       ONE,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
.
          PACK      ENDDTE,CC,YY,MM,DD
          REP       " 0",ENDDTE
.
.         Calculate the Date Heading
.
          MOVE      SP10,DATE1
          MOVE      SP10,DATE2
          MOVE      SP10,DATE3
          MOVE      SP10,DATE4
          MOVE      SP10,DATE5
          MOVE      SP10,DATE6
          MOVE      SP10,DATE7
.
          MOVE      SP10,DAY1
          MOVE      SP10,DAY2
          MOVE      SP10,DAY3
          MOVE      SP10,DAY4
          MOVE      SP10,DAY5
          MOVE      SP10,DAY6
          MOVE      SP10,DAY7
.
          MOVE      ZERO,DATEFLG            * Number of columns
          MOVE      ZERO,YEARFLG
.
          UNPACK    STARTDTE,XCENT,XYEAR,XMON,XDAY
          MOVE      XCENT,CC
          MOVE      XYEAR,YY
          MOVE      XMON,MM
          MOVE      XDAY,DD
          PACK      DATE1,DD,SLASH,MM,SLASH,CC,YY
          REP       " 0",DATE1
          MOVE      CC,SAVCC
          MOVE      YY,SAVYY
          MOVE      MM,SAVMM
          MOVE      DD,SAVDD
          MOVE      DATE1,KDATE
          CALL      FINDAY
          BRANCH    YEARFLG OF START
          MOVE      SAVCC,CC
          MOVE      SAVYY,YY
          MOVE      SAVMM,MM
          MOVE      SAVDD,DD
          MOVE      DAYS,DAY1
.
DT10      PACK      FDATE,CC,YY,MM,DD
          REP       " 0",FDATE
          REP       " 0",ORDATE
.
          MATCH     ORDATE,FDATE
          GOTO      CALDAY IF NOT LESS
.
          CALL      DMYCON
          ADD       ONE,DATEFLG
.
          ADD       ONE,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
.
          BRANCH    DATEFLG,DT40,DT50,DT60,DT70,DT80,DT90
          GOTO      INVDTE3
.
.         Set up the heading for each column ( STARTDTE to ENDDTE )
.
DT40      PACK      DATE2,DD,SLASH,MM,SLASH,CC,YY
          REP       " 0",DATE2
          MOVE      CC,SAVCC
          MOVE      YY,SAVYY
          MOVE      MM,SAVMM
          MOVE      DD,SAVDD
          MOVE      DATE2,KDATE
          CALL      FINDAY
          BRANCH    YEARFLG OF START
          MOVE      SAVCC,CC
          MOVE      SAVYY,YY
          MOVE      SAVMM,MM
          MOVE      SAVDD,DD
          MOVE      DAYS,DAY2
          GOTO      DT10
.
DT50      PACK      DATE3,DD,SLASH,MM,SLASH,CC,YY
          REP       " 0",DATE3
          MOVE      CC,SAVCC
          MOVE      YY,SAVYY
          MOVE      MM,SAVMM
          MOVE      DD,SAVDD
          MOVE      DATE3,KDATE
          CALL      FINDAY
          BRANCH    YEARFLG OF START
          MOVE      SAVCC,CC
          MOVE      SAVYY,YY
          MOVE      SAVMM,MM
          MOVE      SAVDD,DD
          MOVE      DAYS,DAY3
          GOTO      DT10
.
DT60      PACK      DATE4,DD,SLASH,MM,SLASH,CC,YY
          REP       " 0",DATE4
          MOVE      CC,SAVCC
          MOVE      YY,SAVYY
          MOVE      MM,SAVMM
          MOVE      DD,SAVDD
          MOVE      DATE4,KDATE
          CALL      FINDAY
          BRANCH    YEARFLG OF START
          MOVE      SAVCC,CC
          MOVE      SAVYY,YY
          MOVE      SAVMM,MM
          MOVE      SAVDD,DD
          MOVE      DAYS,DAY4
          GOTO      DT10
.
DT70      PACK      DATE5,DD,SLASH,MM,SLASH,CC,YY
          REP       " 0",DATE5
          MOVE      CC,SAVCC
          MOVE      YY,SAVYY
          MOVE      MM,SAVMM
          MOVE      DD,SAVDD
          MOVE      DATE5,KDATE
          CALL      FINDAY
          BRANCH    YEARFLG OF START
          MOVE      SAVCC,CC
          MOVE      SAVYY,YY
          MOVE      SAVMM,MM
          MOVE      SAVDD,DD
          MOVE      DAYS,DAY5
          GOTO      DT10
.
DT80      PACK      DATE6,DD,SLASH,MM,SLASH,CC,YY
          REP       " 0",DATE6
          MOVE      CC,SAVCC
          MOVE      YY,SAVYY
          MOVE      MM,SAVMM
          MOVE      DD,SAVDD
          MOVE      DATE6,KDATE
          CALL      FINDAY
          BRANCH    YEARFLG OF START
          MOVE      SAVCC,CC
          MOVE      SAVYY,YY
          MOVE      SAVMM,MM
          MOVE      SAVDD,DD
          MOVE      DAYS,DAY6
          GOTO      DT10
.
DT90      PACK      DATE7,DD,SLASH,MM,SLASH,CC,YY
          REP       " 0",DATE7
          MOVE      CC,SAVCC
          MOVE      YY,SAVYY
          MOVE      MM,SAVMM
          MOVE      DD,SAVDD
          MOVE      DATE7,KDATE
          CALL      FINDAY
          BRANCH    YEARFLG OF START
          MOVE      SAVCC,CC
          MOVE      SAVYY,YY
          MOVE      SAVMM,MM
          MOVE      SAVDD,DD
          MOVE      DAYS,DAY7
.
.         Calculate NODAYS for Percentage calculation on bed occupancy
.
CALDAY    DAYSEP    STARTDTE,ENDDTE,TOTDAY
          MOVE      TOTDAY,NODAYS       *** number days covered
          MOVE      NODAYS,DATEFLG
.
.          DISPLAY   *P1:20," NODAYS COVERED IS : ",NODAYS;
.
          COMPARE   "8",NODAYS
          IF        !@LESS
            MOVE      TRUE,MORE1WK
          ELSE
            MOVE      FALSE,MORE1WK
          ENDIF
          GOTO      REKEY
.
INVDATG   DISPLAY   *P1:24,*B,*EL,*V2LON,"From Date must be less than or ":
                    "equal to To Date.  ";
          CALL      HITENTER
          GOTO      KADAT1
.
INVDTE1   DISPLAY   *P1:24,*B,*EL,*V2LON,"From Date must be less than or ":
                    "equal to today's date.  ";
          CALL      HITENTER
          GOTO      KADAT1
.
INVDTE2   DISPLAY   *P1:24,*B,*EL,*V2LON,"To Date must be less than or ":
                    "equal to today's date.  ";
          CALL      HITENTER
          GOTO      KADAT2
.
INVDTE3   DISPLAY   *P1:24,*B,*EL,*V2LON,"** No. of Days covered should be":
                    " less than or equal to 7 (ie days in a week) **",*W4:
                    *P1:24,*EL,*P20:6,*EL;
          GOTO      KADAT1
.
.         Check if dates are OK or not
.
REKEY     KEYIN     *P1:24,*EL," Dates ok (":
                    *V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
.
          MATCH     "N",ANS
          GOTO      START IF EQUAL
.
          MATCH     "Y",ANS
          GOTO      CNTCHK IF EQUAL
          BEEP
          GOTO      REKEY
.
.         Process start
.
CNTCHK    CALL      INITV
          CALL      INITC
.
.-------- Create the Indexed Temp File --------
.
          DISPLAY   *P1:24,*EL,*P19:24,*V2LON,*BLINKON,"Creating the Indexed ":
                    "Temp File",*HOFF," - Please wait";
.
.-------- Kill the Tempfile if it already exists --------
.
          CALL      KILLIDF
.
.-------- Build new indexed temp file --------
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    PATFNAME,CMDLINE
          APPEND    " 9 u1-8",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      PATMP1XX,PATFNAME
.
          CALL      DAYA0000        * load the temp file from the patdayaf file
.
          DISPLAY   *P1:24,*EL,*P24:24,*V2LON:
                    "** Processing Admission Numbers **",*W2,*HOFF:
                    *P1:24,*EL,*P15:24,"Admission No :",*P46:24,"Scanning :";
.
.-------- position on the temp file --------
.
          MOVE      SP8,KEY8
          CALL      RSTMPR1
.
.-------- read through the indexed temp file and process each admission --------
.
NEXTADM   CALL      RKTMPR1
          BRANCH    OVRCD,GETB0000
.
          MOVE      TMPADMN,KEY8
          CALL      RDMISS1              * read the admissions file
          BRANCH    OVRCD,NEXTADM
.
          MATCH     ENDDTE,ADATE         * make sure admission is in date range
          GOTO      NEXTADM IF NOT LESS
.
          DISPLAY   *P57:24,AADMNO;
          MOVE      SP8,DDATE
.
          BRANCH    ASTAT,NEXTADM,CONTADM,CONTDIS,CONTADM,NEXTADM
.
CONTDIS   MOVE      AADMNO,KEY8
          CALL      RDDSCH1              * read discharge file
          BRANCH    OVRCD,NEXTADM
.
          MATCH     STARTDTE,DDATE       * make sure admission is in date range
          GOTO      NEXTADM IF LESS        
.
.-------- we have a valid admission so extract details --------
.-------- and write to summary file --------
.
CONTADM   DISPLAY   *P30:24,*V2LON,AADMNO;
          CALL      TRANS
          GOTO      NEXTADM
+
.**********************************************************************
.*                            DAYA0000                                *
.*     Process patdayaf Data writing to temp indexed file patmp1xx    *
.**********************************************************************
DAYA0000  UNPACK    ENDDTE,CCENT,CYEAR,TDAYMON
          PACK      TYEAR,CCENT,CYEAR
          REP       " 0",TYEAR
.
          UNPACK    STARTDTE,CCENT,CYEAR,SDAYMON
          PACK      SYEAR,CCENT,CYEAR
          REP       " 0",SYEAR
.
          DISPLAY   *P1:24,*EL,*P16:24,*V2LON,*BLINKON,"Initializing the Temp":
                    " Indexed File",*HOFF," - Please wait";
.
.-------- close previous day file and set up the name of the next one --------
.
DAYA1000  CLOSE     PATDAYA1
          PACK      CFNAME,FILDAYA1,SYEAR
.
          TRAP      DAYA4900 IF IO        * trap if file does not exist
          OPEN      PATDAYA1,CFNAME
          TRAPCLR   IO
.
          PACK      KEY12,SDAYMON,SP10    * position on daily patient list file
          CALL      RSPTDAY1
.
.-------- read through the patient daily list file --------
.
DAYA2000  CALL      RKPTDAY1
          BRANCH    OVRCD,DAYA5000
.
          MATCH     TYEAR,SYEAR            * see if the current file is the one
          GOTO      DAYA3000 IF NOT EQUAL    for the last year in the date range
.
          MATCH     PTDYDATE,TDAYMON       * if so, make sure the month and day
          GOTO      DAYA9999 IF LESS         are still in range
.
DAYA3000
.-------- Only need to write to the temporary file if the admission number -----
.-------- is not already there ------
.
          MOVE      PTDYADMN,KEY8
          CALL      RDTMPR1                * read the temp file
          BRANCH    OVRCD,DAYA4000
          GOTO      DAYA2000
.
.-------- write a new record to the temp file --------
.
DAYA4000  CALL      WRTMPR1
          GOTO      DAYA2000
.
.-------- need to pop the return address off the stack if I/O error trapped ----
.
DAYA4900  NORETURN
.
.-------- either file does not exist or we have reached the end of the --------
.-------- current file --------
.
DAYA5000  MATCH     TYEAR,SYEAR             * test if we have reached the end 
          GOTO      DAYA9999 IF NOT LESS      year in the date range
.
          MOVE      SYEAR,FORM4             * if not, increment the start year
          ADD       ONE,FORM4                 to the next year and process
          MOVE      FORM4,SYEAR               the file for this year
          REP       " 0",SYEAR
          MOVE      "0101",SDAYMON
.
          GOTO      DAYA1000
.
DAYA9999  RETURN
+
.****************************************************************************
.*                            GETB0000                                      *
.*        Calculate the number of beds available for each ward              *
.****************************************************************************
.
GETB0000  DISPLAY   *P1:24,*EL,*P27:24,*V2LON:
                    "** Processing No. of Beds **",*W2,*HOFF:
                    *P1:24,*EL,*P23:24,"Ward :",*P40:24,"Date: ";
.
.         Loop through the ward file for all ward header records
.
          MOVE      SP6,KEY6
          CALL      RDSWARD1                     * position at start of file
GETB0500  CALL      RDKWARD1                     * read next record
          BRANCH    OVRCD,GETB9999               * end of file
.
          MATCH     SP3,WBED                     * ward header record ?
          GOTO      GETB1000 IF NOT EQUAL        * no - ignore
.
          DISPLAY   *P31:24,*V2LON,WWARD,*HOFF,SP3,WBDESC;
.
.         See if the ward was active for each day in the range.
.
          MOVE      ACTVFDTE,PASSDATE            * load start date
          MOVE      ACTVFDTE,LPDATE1             * move start date to form field
          MOVE      ACTVTDTE,LPDATE2             * move end date to form field
.
          WHILE     LPDATE1 <= LPDATE2
            CALL      ACTV0000                   * ward active on date ?
            IF        ACTVFLAG = 0
              CALL      WRIT0000                 * write/update oc. days
            ENDIF
.
            UNPACK    PASSDATE,CCENT,CYEAR,CMON,CDAY
            MOVE      CCENT,CC
            MOVE      CYEAR,YY
            MOVE      CMON,MM
            MOVE      CDAY,DD
            CALL      DMYCON
            ADD       ONE,JULDAY
.
            MOVE      JULDAY,JWKDAY
            MOVE      JULYR,JWKYER
            MOVE      JULCC,JWKCC
            CALL      JULCON
            PACK      PASSDATE,CC,YY,MM,DD
            REP       " 0",PASSDATE
            MOVE      PASSDATE,LPDATE1
          DO
.
.         Finished checking this ward for each date in the range, so position
.         for the next ward header record.
.
GETB1000  PACK      KEY6,WWARD,ZZZ
          CALL      RDSWARD1
          GOTO      GETB0500                     * get next ward record
.
GETB9999  GOTO      REPORT
+
.****************************************************************************
.*                        ACTV0000                                          *
.****************************************************************************
.
ACTV0000  MOVE      ONE,ACTVFLAG                 * initialise active flag
          MOVE      ZERO,TOTBED                  * initialise bed count
.
          PACK      KEY14,WWARD,WBED,PASSDATE
          CALL      RDPTWBH1                     * rec. on file for actual day ?
          IF        OVRCD = 1
            CALL      RKPTWBH1                   * no - get next record
            BRANCH    OVRCD,ACTV8000             * eof - no records on file
.
            MATCH     WWARD,WBHWARD              * same ward still ?
            GOTO      ACTV8000 IF NOT EQUAL      * no - no records on file
.
            MATCH     WBED,WBHBED                * still ward only record ?
            GOTO      ACTV8000 IF NOT EQUAL      * no - no records on file
          ENDIF
.
          COMPARE   ZERO,WBHACTV                 * ward active ?
          IF        @EQUAL
            MOVE      ZERO,ACTVFLAG              * yes
            MOVE      WBHNOCC,TOTBED
          ENDIF
          GOTO      ACTV9999
.
ACTV8000  COMPARE   ZERO,WACTIVE                 * ward active ?
          IF        @EQUAL
            MOVE      WOCCBED,TOTBED
            MOVE      ZERO,ACTVFLAG              * set active flag
          ENDIF
.
ACTV9999  RETURN
+
.****************************************************************************
.*                             WRIT0000                                     *
.****************************************************************************
.
WRIT0000  UNPACK    PASSDATE,XCENT,XYEAR,XMON,XDAY
          MOVE      XDAY,DD
          MOVE      XMON,MM
          MOVE      XYEAR,YY
          MOVE      XCENT,CC
          PACK      WODATE,CC,YY,MM,DD
          REP       " 0",WODATE
          MOVE      WWARD,WOWARD
.
          CALL      DAYW0000                 * Calculate Day of week
          MOVE      WODWEEK,SAVWODWK         * save day of week
          MOVE      WODATE,SAVWODTE          * save date
.
          PACK      KEY13,WOWARD,WODWEEK
.
          CALL      RDWOCP2
          COMPARE   ZERO,OVRCD
          IF        !@EQUAL
            IF        PTCNH82W = 1
              CALL      NEWREC
            ELSE
              PACK      KEY13,WOWARD,SP20        * ward/day not on file
              CALL      RDSWOCP2                 * position for ward
              CALL      RDKWOCP2                 * any day for ward on file ?
              BRANCH    OVRCD,WRIT9999           * eof - ignore
.
              MATCH     WOWARD,WWARD             * same ward ?
              IF        !@EQUAL
                GOTO      WRIT9999               * no - ignore
              ELSE
                MOVE      SAVWODTE,WODATE
                PACK      KEY13,WOWARD,SAVWODWK
                CALL      NEWREC                 * write new record
              ENDIF
            ENDIF
          ENDIF
.
          ADD       TOTBED,WOAVAIL
          CALL      UPWOCP2
.
WRIT9999  RETURN
+
.
.         Create a new record
.
NEWREC    CALL      ZEROBED
          UNPACK    KEY13,WOWARD,WODWEEK
          CALL      WRWOCP2
          PACK      KEY13,WOWARD,WODWEEK
          CALL      RDWOCP2
          RETURN
.
.         Initialize working variables
.
INITV     MOVE      ZERO,CADAYS
          MOVE      ZERO,SAVAMT
          MOVE      ZERO,ENDFLG
          MOVE      SP8,STDATE
          CLOCK     TIME,TIMEIS
          RETURN
+
.
.         Create an indexed file based on port
.
INDZD     MOVE      ZERO,STATUS
.
.         Check if previously exists..if so deleted it
.
          CALL      KILLIDZ
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FNAMEI,CMDLINE
          APPEND    " 47 U1-3,4-11",CMDLINE
          APPEND    " U1-3,37-46",CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
          MOVE      ZERO,OPCND
          TRAP      NOINDZ IF IO
          OPEN      PATWOCP1,FNAMEI
          OPEN      PATWOCP2,FNAMEI
          TRAPCLR   IO
          RETURN
.
NOINDZ    MOVE      ONE,OPCND
          TRAPCLR   IO
          DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "Temporary Index File ":
                    FNAMEI," not found.  ";
          CALL      HITENTER
          RETURN
+
.
.         Deleting an indexed tempfile
.
KILLIDF   CLEAR     CMDLINE
          CLOSE     PATMP1XX
          APPEND    "iserase ",CMDLINE
          APPEND    PATFNAME,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          RETURN
.
.
KILLIDZ   MOVE      ZERO,STATUS
.
          CLOSE     PATWOCP1
.
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FNAMEI,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
          RETURN
+
.
.         Initialize Occupancy File
.
INITC     DISPLAY   *P1:24,*EL,*P21:24,*V2LON:
                    "** Initializing Weekly Occupancy File **";
          CALL      INDZD
          BRANCH    OPCND OF ENDIT
          RETURN
+
.
.         Read Transfer File
.
TRANS     MOVE      SP8,STDATE
          MOVE      ZERO,SAVAMT
          MOVE      SP6,STMOVE
          MOVE      ZERO,STDISC
          MOVE      ZERO,STALLW
.
          PACK      KEY30,AADMNO,SP20,SP20
          CALL      RDSTRAN2
NEXTT     CALL      RDKTRAN2
          BRANCH    OVRCD OF XXXX
.
          MATCH     TADMN,AADMNO
          GOTO      XXXX IF NOT EQUAL
.
          MOVE      TMOVE,STMOVE
          RESET     TDATE
          REP       " 0",TDATE
          RESET     TDATE
.
          CMATCH    "A",TMOVE
          GOTO      ARITYPE IF EQUAL
.
          CMATCH    "R",TMOVE
          GOTO      ARITYPE IF EQUAL
.
          CMATCH    "C",TMOVE
          GOTO      LOTYPE IF EQUAL
.
          CMATCH    "L",TMOVE
          GOTO      LOTYPE IF EQUAL
.
          MATCH     ADATE,DDATE
          GOTO      NOSAME IF NOT EQUAL
.
          SUB       STALLW,SAVAMT
          SUB       STDISC,SAVAMT
.
          MOVE      ONE,TOTDAY
.
          MOVE      SP6,WOWARD      * occupancy ward
          MOVE      SP3,SBED
.
          PACK      KEY6,TWARD,TBED
          CALL      RDWARD1
          BRANCH    OVRCD OF ENDSAM
.
          MOVE      WWARD,WOWARD      * occupancy ward
          MOVE      WBED,SBED
          UNPACK    ADATE,XCENT,XYEAR,XMON,XDAY
          PACK      WODATE,XCENT,XYEAR,XMON,XDAY
          REP       " 0",WODATE
.
.         include DAY CASES in figures
.
ENDSAM    MOVE      ONE,DAYFLG
          CALL      NEXTDX
          RETURN
.
NOSAME    MATCH     STARTDTE,TDATE
          RETURN    IF LESS
          MATCH     ENDDTE,TDATE
          GOTO      XXXX IF LESS
          MOVE      ENDDTE,TDATE
          GOTO      XXXX
.
.         End of period - calculate stats
.
LOTYPE    MATCH     STARTDTE,TDATE
          GOTO      ARITYPE IF LESS
.
          MATCH     ENDDTE,TDATE
          GOTO      CONT8 IF LESS
.
          MOVE      ENDDTE,WDATE1
          MOVE      STDATE,WDATE2
.
          CALL      CALC
          RETURN
+
.
CONT8     MOVE      TDATE,WDATE1
          MOVE      STDATE,WDATE2
          CALL      CALC
.
.         Start of period - save variables
.
ARITYPE   MATCH     ENDDTE,TDATE
          RETURN    IF NOT LESS
          MATCH     STARTDTE,TDATE
          GOTO      CONT2 IF NOT LESS
          MOVE      STARTDTE,STDATE
          GOTO      CONT30
.
CONT2     MOVE      TDATE,STDATE
.
CONT30    MOVE      TDISC,STDISC
          MOVE      TALLW,STALLW
          MOVE      TRATEF,SAVAMT
          ADD       TRATEH,SAVAMT
          ADD       TEXTRA,SAVAMT
.
          MOVE      SP6,WOWARD      * occupancy ward
          MOVE      SP3,SBED
.
          PACK      KEY6,TWARD,TBED
          CALL      RDWARD1
          BRANCH    OVRCD OF NEXTT
.
          MOVE      WWARD,WOWARD      * occupancy ward
          MOVE      WBED,SBED
          GOTO      NEXTT
.
.         End of Transfer File records
.
XXXX      MATCH     "L",STMOVE
          RETURN    IF EQUAL
.
          MATCH     " ",STMOVE
          RETURN    IF EQUAL
.
          MATCH     "D",STMOVE
          GOTO      CONT9 IF NOT EQUAL
          MOVE      TDATE,WDATE1
          MOVE      STDATE,WDATE2
          GOTO      CONT10
.
CONT9     MOVE      ENDDTE,WDATE1
          MOVE      STDATE,WDATE2
CONT10    CALL      CALC
          RETURN
.
.****************************************************************************
.*                            DAYW0000                                      
.*        The type of day (ie Sunday, Monday etc) according to the date     *
.* Parameters : WODATE                                                      *
.* Returns    : WODWEEK                                                     *
.****************************************************************************
.
DAYW0000  UNPACK    WODATE,CCENT,CYEAR,CMON,CDAY
          CALL      DATECONV                     * convert to day of the week
.
          LOAD      WODWEEK,WEEKDAY,DMON,DTUE,DWED,DTHU,DFRI,DSAT,DSUN
          PACK      WODWEEK,WODWEEK,SP10
.
DAYW9999  RETURN
+
.         Calculate dates difference
.
CALC      DAYSEP    WDATE2,WDATE1,TOTDAY
.
          MOVE      ZERO,DAYFLG
.
          MOVE      WDATE2,WDT2
          REP       " 0",WDT2
          MOVE      WDATE1,WDT1
          REP       " 0",WDT1
.
          UNPACK    WDT2,XCENT,XYEAR,XMON,XDAY
          MOVE      XYEAR,YY
          MOVE      XMON,MM
          MOVE      XDAY,DD
          MOVE      XCENT,CC
.
          MOVE      WDT2,FDATE
.
CALC15    UNPACK    FDATE,XCENT,XYEAR,XMON,XDAY
          MOVE      XCENT,CC
          MOVE      XYEAR,YY
          MOVE      XMON,MM
          MOVE      XDAY,DD
          
.
          MATCH     WDT1,FDATE
          RETURN    IF NOT LESS
.
          MOVE      FDATE,WODATE
.
          CALL      DMYCON
.
          ADD       ONE,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
.
          PACK      FDATE,CC,YY,MM,DD
          REP       " 0",FDATE
.
          MOVE      ONE,TOTDAY
.
          SUB       STALLW,SAVAMT
          SUB       STDISC,SAVAMT
          MULT      TOTDAY BY SAVAMT
.
.       PRINT           *1,"WDATE1 = ",WDATE1,*20,"WDATE2 = ",WDATE2:
.                       *40,"TOT DAY  = ",TOTDAY,*60,"SAVAMTR = ",SAVAMT:
.                       *80,"ADMNO = ",AADMNO," WODATE = ",WODATE
.
.         Read Patient Master file
.
NEXTDX    MOVE      AURNO,KEY8
          CALL      RDMAST1
          COMPARE   ONE,OVRCD
          RETURN    IF EQUAL
.
          MOVE      WOWARD,SAVWARD
.
.         Check if the ward was active during the period
.
          MOVE      ONE,ACTVWFLG             * don't require weekend days
          PROC      WDACTVDY                 * get days ward was active
          COMPARE   ZERO,ACTVDAYS            * ward active during period ?
          RETURN    IF EQUAL                 * no - ignore
.
          CALL      DAYW0000
          PACK      KEY13,WOWARD,WODWEEK
          CALL      RDWOCP2
.
          COMPARE   ZERO,OVRCD
          CALL      NEWREC IF NOT EQUAL
.
          MATCH     "D",STMOVE
          GOTO      NODAYCC IF NOT EQUAL
.
          MATCH     ADATE,DDATE
          GOTO      NODAYCC IF NOT EQUAL
.
.         Day Cases not included in other Stats
.
          MOVE      ONE,WODAYD
          MOVE      ONE,TOTDAY
.          GOTO      ENDOCCP
.
.         Check the age
.
NODAYCC   PACK      ASDATE,ADATE
          CALL      PATAGED                 * calculate age using admission date
.
          COMPARE   CAGECOFF,PSAGE
          GOTO      CHILD IF LESS
.
.         An adult
.
          ADD       TOTDAY,WODAYA
          GOTO      ENDOCCP
.
.         A child
.
CHILD     ADD       TOTDAY,WODAYC
.
.         Add up adult and child bed days
.
ENDOCCP   MOVE      WODAYA,WODAYT
          ADD       WODAYC,WODAYT
.          ADD       WODAYD,WODAYT
.
          CALL      UPWOCP2
.
          MOVE      WOWARD,SAVWARD
.
          COMPARE   ONE,DAYFLG
          RETURN    IF EQUAL
.
          GOTO      CALC15
.
.         Set up bed values
.
ZEROBED   MOVE      ZERO,WODAYA
          MOVE      ZERO,WODAYC
          MOVE      ZERO,WODAYD
          MOVE      ZERO,WODAYT
          MOVE      ZERO,WOAVAIL
          RETURN
+
.         Print Report
.
REPORT    DISPLAY   *P1:24,*EL,*P29:24,*V2LON:
                    "** Generating Report **",*W2,*HOFF:
                    *P1:24,*EL,*P15:24,"Generating Ward :";
          GOTO      PRNT0000
.
ENDP      PRINT     *N,*N,"***  End of Report  ***"
.
          DISPLAY   *P1:24,*EL,*P24:24,*V2LON:
                    "** Report Generation Completed **",*W2;
.
          CALL      KILLIDF
          CALL      KILLIDZ
          GOTO      START
+
.*******************************************************************************
.*        Headings for output
.*******************************************************************************
HEAD0000  ADD       ONE,PAGENO
          MOVE      "7",LNO
          PRINT     *F,*1,PRGID,*43,CNAME,*110,"DATE : ",CDATE:
                    *N,*1,VERSION,*43,PRGNAM,*110,"TIME :   ",TIMEIS:
                    *N,*110,"PAGE : ",*124,PAGENO:
                    *N,*43,"From : ",XDAY1,"/",XMON1,"/",XCENT1,XYEAR1:
                    *62,"To : ",XDAY2,"/",XMON2,"/",XCENT2,XYEAR2,*N
.
          CALL      PRLINE
          CALL      PLIN0000
          PRINT     *N,"Ward ";
          BRANCH    DATEFLG OF HEAD1000,HEAD2000,HEAD3000:
                               HEAD4000,HEAD5000,HEAD6000
          GOTO      HEAD7000
.
HEAD1000  PRINT     *33,DAY1,*45,"TOTAL"
          GOTO      HEAD9000
.
HEAD2000  PRINT     *33,DAY1,*45,DAY2,*57,"TOTAL"
          GOTO      HEAD9000
.
HEAD3000  PRINT     *33,DAY1,*45,DAY2,*57,DAY3,*69,"TOTAL"
          GOTO      HEAD9000
.
HEAD4000  PRINT     *33,DAY1,*45,DAY2,*57,DAY3,*69,DAY4:
                    *81,"TOTAL"
          GOTO      HEAD9000
.
HEAD5000  PRINT     *33,DAY1,*45,DAY2,*57,DAY3,*69,DAY4:
                    *81,DAY5,*93,"TOTAL"
          GOTO      HEAD9000
.
HEAD6000  PRINT     *33,DAY1,*45,DAY2,*57,DAY3,*69,DAY4:
                    *81,DAY5,*93,DAY6,*105,"TOTAL"
          GOTO      HEAD9000
.
HEAD7000  PRINT     *33,DAY1,*45,DAY2,*57,DAY3,*69,DAY4:
                    *81,DAY5,*93,DAY6,*105,DAY7,*117,"TOTAL"
.
HEAD9000  CALL      PRLINE
          CALL      PLIN0000
HEAD9999  RETURN
+
.         Print Occupancy File
.
PRNT0000  MOVE      ZERO,FINISH
          MOVE      SP3,WOWARD
          MOVE      SP3,SAVWARD
          MOVE      SP10,WODWEEK
          MOVE      ZERO,PAGENO
          MOVE      "60",LNO
.
          CALL      INITGRD
.
PRNT0100  MOVE      ZERO,FIRST
          PACK      KEY13,WOWARD,WODWEEK
          CALL      RDSWOCP2
.
PRNT0200  CALL      RDKWOCP2
          IF        OVRCD = ONE
            MOVE    ONE,FINISH
            GOTO    PRNT0500
          ENDIF
.
          MATCH     SP3,WOWARD
          GOTO      PRNT0200 IF EQUAL   * Don't allow blank wards to be printed
.
          CALL      DAYW0000
.
          COMPARE   ZERO,FIRST
          GOTO      PRNT0300 IF NOT EQUAL
.
          MOVE      WOWARD,SAVWARD
          MOVE      ONE,FIRST
.
          CALL      INITCOL
          MOVE      WOWARD,WWARD
          MOVE      SP6,WBED
          PACK      KEY6,WWARD,WBED
          CALL      RDWARD1
.
          DISPLAY   *P34:24,*V2LON,WOWARD,*HOFF,"  ",WBDESC;
.
          MOVE      ZERO,ADTOT
.
          COMPARE   "50",LNO
          CALL      HEAD0000 IF NOT LESS
.
PRNT0300  MATCH     WOWARD,SAVWARD
          GOTO      PRNT0500 IF NOT EQUAL
.
          DISPLAY   *P34:24,*V2LON,WOWARD,*HOFF,"  ",WBDESC;
.
          ADD       WODAYA,ADTOT
          ADD       WODAYC,CHTOT
          REP       " 0",WODATE
.
          ADD       WOAVAIL,GRDBED
          CALL      SETD0000                 * Setup details
.
          GOTO      PRNT0200                 * Read next record
.
PRNT0500  COMPARE   ZERO,FIRST
          GOTO      PRNT1100 IF EQUAL
.
          CALL      PACA0000                 * Print Adult/Child Bed days
.
          PRINT     *N;
          ADD       ONE,LNO
          CALL      PLIN0000
.
PRNT0600  MOVE      WOWARD,SAVWARD
          PRINT     *25,"TOTAL";
          ADD       ONE,LNO
.
          CALL      CPCNT000                 * Calculate Percent
.
          BRANCH    ENDFLG,PRNT0900
.
          MOVE      ADTOT,WRDTOT
          ADD       CHTOT,WRDTOT
.
          ADD       AVBED1,WRDAV
          ADD       AVBED2,WRDAV
          ADD       AVBED3,WRDAV
          ADD       AVBED4,WRDAV
          ADD       AVBED5,WRDAV
          ADD       AVBED6,WRDAV
          ADD       AVBED7,WRDAV
.
          MOVE      WRDAV,WRDAVS
.
          COMPARE   ZERO,WRDAVS
          GOTO      PRNT0800 IF EQUAL
.
          ASSIGN    ((WRDTOT*100)/WRDAVS),PCENT8
.
PRNT0800  ADD       WRDTOT,GRTOT
PRNT0900  CALL      PBDP0000                 * Print Total Bed days & Percentage
.
          CALL      PAVL0000
.
          BRANCH    ENDFLG OF PRNT1000
          MOVE      SAVWARD,WOWARD
          MOVE      ZERO,FIRST
          MOVE      SP8,WDATE
          MOVE      SP10,WODWEEK
          CALL      PLIN0000
          PRINT     *N;
          ADD       ONE,LNO
          BRANCH    FINISH OF PRNT1100
          CALL      INITCOL
          GOTO      PRNT0100
.
PRNT1000  CALL      PRLINE
          CALL      PLIN0000
          GOTO      ENDP
.
.         Print the Grand Total
.
PRNT1100  CALL      PRLINE
          CALL      PLIN0000
          CALL      INITCOL
.
          MOVE      ONE,ENDFLG
.
          CALL      MGRT0000                 * Move Grand total values
.
          MOVE      GRTOT,WRDTOT
          MOVE      GRDBED,GRDBEDS
          MOVE      GRDBED,WRDAV
.
          ASSIGN    ((GRTOT*100)/GRDBEDS),PCENT8
.
          GOTO      PRNT0600
+
.*******************************************************************************
.*                SETD0000
.*                Setup the Details
.*******************************************************************************
SETD0000  MATCH     WODWEEK,DAY1             * Day 1
          IF        @EQUAL
            ADD       WOAVAIL,AVBED1         * Available Beds
            ADD       WOAVAIL,GRDBED1        * Grand Total Available Beds
            ADD       WODAYA,DAYA1           * No of Adult Bed days
            ADD       WODAYC,DAYC1           * No of Child Bed days
            ADD       WODAYT,COL1            * Total Bed days
            ADD       WODAYT,GRCOL1          * Grand Total Bed days
          ENDIF
.
          MATCH     WODWEEK,DAY2             * Day 2
          IF        @EQUAL
            ADD       WOAVAIL,AVBED2         * Available Beds
            ADD       WOAVAIL,GRDBED2        * Grand Total Available Beds
            ADD       WODAYA,DAYA2           * No of Adult Bed days
            ADD       WODAYC,DAYC2           * No of Child Bed days
            ADD       WODAYT,COL2            * Total Bed days
            ADD       WODAYT,GRCOL2          * Grand Total Bed days
          ENDIF
.
          MATCH     WODWEEK,DAY3             * Day 3
          IF        @EQUAL
            ADD       WOAVAIL,AVBED3         * Available Beds
            ADD       WOAVAIL,GRDBED3        * Grand Total Available Beds
            ADD       WODAYA,DAYA3           * No of Adult Bed days
            ADD       WODAYC,DAYC3           * No of Child Bed days
            ADD       WODAYT,COL3            * Total Bed days
            ADD       WODAYT,GRCOL3          * Grand Total Bed days
          ENDIF
.
          MATCH     WODWEEK,DAY4             * Day 4
          IF        @EQUAL
            ADD       WOAVAIL,AVBED4         * Available Beds
            ADD       WOAVAIL,GRDBED4        * Grand Total Available Beds
            ADD       WODAYA,DAYA4           * No of Adult Bed days
            ADD       WODAYC,DAYC4           * No of Child Bed days
            ADD       WODAYT,COL4            * Total Bed days
            ADD       WODAYT,GRCOL4          * Grand Total Bed days
          ENDIF
.
          MATCH     WODWEEK,DAY5             * Day 5
          IF        @EQUAL
            ADD       WOAVAIL,AVBED5         * Available Beds
            ADD       WOAVAIL,GRDBED5        * Grand Total Available Beds
            ADD       WODAYA,DAYA5           * No of Adult Bed days
            ADD       WODAYC,DAYC5           * No of Child Bed days
            ADD       WODAYT,COL5            * Total Bed days
            ADD       WODAYT,GRCOL5          * Grand Total Bed days
          ENDIF
.
          MATCH     WODWEEK,DAY6             * Day 6
          IF        @EQUAL
            ADD       WOAVAIL,AVBED6         * Available Beds
            ADD       WOAVAIL,GRDBED6        * Grand Total Available Beds
            ADD       WODAYA,DAYA6           * No of Adult Bed days
            ADD       WODAYC,DAYC6           * No of Child Bed days
            ADD       WODAYT,COL6            * Total Bed days
            ADD       WODAYT,GRCOL6          * Grand Total Bed days
          ENDIF
.
          MATCH     WODWEEK,DAY7             * Day 7
          IF        @EQUAL
            ADD       WOAVAIL,AVBED7         * Available Beds
            ADD       WOAVAIL,GRDBED7        * Grand Total Available Beds
            ADD       WODAYA,DAYA7           * No of Adult Bed days
            ADD       WODAYC,DAYC7           * No of Child Bed days
            ADD       WODAYT,COL7            * Total Bed days
            ADD       WODAYT,GRCOL7          * Grand Total Bed days
          ENDIF
.
SETD9999  RETURN
+
.*******************************************************************************
.*                PRLINE
.*******************************************************************************
PRLINE    PRINT     *1,"-------------------------------";
          RETURN
+
.*******************************************************************************
.*                PLIN0000
.*******************************************************************************
PLIN0000  ADD       ONE,LNO
          BRANCH    DATEFLG,PLIN1000,PLIN2000,PLIN3000:
                            PLIN4000,PLIN5000,PLIN6000
          GOTO      PLIN7000
.
PLIN1000  PRINT     *32,"----------------------"
          GOTO      PLIN9999
.
PLIN2000  PRINT     *32,"----------------------------------"
          GOTO      PLIN9999
.
PLIN3000  PRINT     *32,"-----------------------------------------------"
          GOTO      PLIN9999
.
PLIN4000  PRINT     *32,"-----------------------------------------------":
                    *79,"------------"
          GOTO      PLIN9999
.
PLIN5000  PRINT     *32,"-----------------------------------------------":
                    *79,"------------------------"
          GOTO      PLIN9999
.
PLIN6000  PRINT     *32,"-----------------------------------------------":
                    *79,"------------------------------------"
          GOTO      PLIN9999
.
PLIN7000  PRINT     *32,"-----------------------------------------------":
                    *79,"------------------------------------":
                    *115,"------------"
.
PLIN9999    RETURN
+
.*******************************************************************************
.*                                  PACA0000
.*                     Print Adult/Child Bed days
.*******************************************************************************
PACA0000  MOVE      WBDESC,DESCWARD
          PRINT     *N,*1,WWARD,*5,DESCWARD,*25,"ADULT";
.
          BRANCH    DATEFLG,PACA1000,PACA2000,PACA3000:
                            PACA4000,PACA5000,PACA6000
          GOTO      PACA7000
.
PACA1000  PRINT     *30,DAYA1,*42,ADTOT                      * Print 1 day
          PRINT     *25,"CHILD":
                    *30,DAYC1,*42,CHTOT
          GOTO      PACA9000 
.
PACA2000  PRINT     *30,DAYA1,*42,DAYA2,*54,ADTOT            * Print 2 days
          PRINT     *25,"CHILD":
                    *30,DAYC1,*42,DAYC2,*54,CHTOT
          GOTO      PACA9000 
.
PACA3000  PRINT     *30,DAYA1,*42,DAYA2,*54,DAYA3,*66,ADTOT  * Print 3 days
          PRINT     *25,"CHILD":
                    *30,DAYC1,*42,DAYC2,*54,DAYC3,*66,CHTOT
          GOTO      PACA9000 
.
PACA4000  PRINT     *30,DAYA1,*42,DAYA2,*54,DAYA3,*66,DAYA4: * Print 4 days
                    *78,ADTOT 
          PRINT     *25,"CHILD":
                    *30,DAYC1,*42,DAYC2,*54,DAYC3,*66,DAYC4:
                    *78,CHTOT
          GOTO      PACA9000 
.
PACA5000  PRINT     *30,DAYA1,*42,DAYA2,*54,DAYA3,*66,DAYA4: * Print 5 days
                    *78,DAYA5,*90,ADTOT
          PRINT     *25,"CHILD":
                    *30,DAYC1,*42,DAYC2,*54,DAYC3,*66,DAYC4:
                    *78,DAYC5,*90,CHTOT
          GOTO      PACA9000 
.
PACA6000  PRINT     *30,DAYA1,*42,DAYA2,*54,DAYA3,*66,DAYA4: * Print 6 days
                    *78,DAYA5,*90,DAYA6,*102,ADTOT
          PRINT     *25,"CHILD":
                    *30,DAYC1,*42,DAYC2,*54,DAYC3,*66,DAYC4:
                    *78,DAYC5,*90,DAYC6,*102,CHTOT
          GOTO      PACA9000 
.
PACA7000  PRINT     *30,DAYA1,*42,DAYA2,*54,DAYA3,*66,DAYA4: * Print 7 days
                    *78,DAYA5,*90,DAYA6,*102,DAYA7,*114,ADTOT
          PRINT     *25,"CHILD":
                    *30,DAYC1,*42,DAYC2,*54,DAYC3,*66,DAYC4:
                    *78,DAYC5,*90,DAYC6,*102,DAYC7,*114,CHTOT
.
PACA9000  ADD       TWO,LNO
PACA9999  RETURN
+
.*******************************************************************************
.*        CPCNT000
.*        Calculate Percentages
.*******************************************************************************
CPCNT000  IF        AVBED1 <> ZERO
            ASSIGN    ((COL1*100)/AVBED1),PCENT1    * % for Day 1
          ENDIF
.
          IF        AVBED2 <> ZERO
            ASSIGN    ((COL2*100)/AVBED2),PCENT2    * % for Day 2
          ENDIF
.
          IF        AVBED3 <> ZERO
            ASSIGN    ((COL3*100)/AVBED3),PCENT3    * % for Day 3
          ENDIF
.
          IF        AVBED4 <> ZERO
            ASSIGN    ((COL4*100)/AVBED4),PCENT4    * % for Day 4
          ENDIF
.
          IF        AVBED5 <> ZERO
            ASSIGN    ((COL5*100)/AVBED5),PCENT5    * % for Day 5
          ENDIF
.
          IF        AVBED6 <> ZERO
            ASSIGN    ((COL6*100)/AVBED6),PCENT6    * % for Day 6
          ENDIF
.
          IF        AVBED7 <> ZERO
            ASSIGN    ((COL7*100)/AVBED7),PCENT7    * % for Day 7
          ENDIF
.
CPCNT999  RETURN
+
.*******************************************************************************
.*        PBDP0000
.*        Print Bed Day totals and Percentages
.*******************************************************************************
PBDP0000  BRANCH    DATEFLG,PBDP1000,PBDP2000,PBDP3000:
                            PBDP4000,PBDP5000,PBDP6000
          GOTO      PBDP7000
.
PBDP1000  PRINT     *30,COL1,*38,PCENT1,"%",*42,WRDTOT,*50,PCENT8,"%"
          GOTO      PBDP9000
.
PBDP2000  PRINT     *30,COL1,*38,PCENT1,"%":
                    *42,COL2,*50,PCENT2,"%",*54,WRDTOT,*62,PCENT8,"%"
          GOTO      PBDP9000
.
PBDP3000  PRINT     *30,COL1,*38,PCENT1,"%":
                    *42,COL2,*50,PCENT2,"%":
                    *54,COL3,*62,PCENT3,"%",*66,WRDTOT,*74,PCENT8,"%"
          GOTO      PBDP9000
.
PBDP4000  PRINT     *30,COL1,*38,PCENT1,"%":
                    *42,COL2,*50,PCENT2,"%":
                    *54,COL3,*62,PCENT3,"%":
                    *66,COL4,*74,PCENT4,"%",*78,WRDTOT,*86,PCENT8,"%"
          GOTO      PBDP9000
.
PBDP5000  PRINT     *30,COL1,*38,PCENT1,"%":
                    *42,COL2,*50,PCENT2,"%":
                    *54,COL3,*62,PCENT3,"%":
                    *66,COL4,*74,PCENT4,"%":
                    *78,COL5,*86,PCENT5,"%",*90,WRDTOT,*98,PCENT8,"%"
          GOTO      PBDP9000
.
PBDP6000  PRINT     *30,COL1,*38,PCENT1,"%":
                    *42,COL2,*50,PCENT2,"%":
                    *54,COL3,*62,PCENT3,"%":
                    *66,COL4,*74,PCENT4,"%":
                    *78,COL5,*86,PCENT5,"%":
                    *90,COL6,*98,PCENT6,"%",*102,WRDTOT,*110,PCENT8,"%"
          GOTO      PBDP9000
.
PBDP7000  PRINT     *30,COL1,*38,PCENT1,"%":
                    *42,COL2,*50,PCENT2,"%":
                    *54,COL3,*62,PCENT3,"%":
                    *66,COL4,*74,PCENT4,"%":
                    *78,COL5,*86,PCENT5,"%":
                    *90,COL6,*98,PCENT6,"%":
                    *102,COL7,*110,PCENT7,"%",*114,WRDTOT,*122,PCENT8,"%"
.
PBDP9000  ADD       ONE,LNO
PBDP9999  RETURN
+
.*******************************************************************************
.*        Print the number of beds available
.*******************************************************************************
PAVL0000  PRINT     *25,"AVAIL";
.
          BRANCH    DATEFLG OF PAVL1000,PAVL2000,PAVL3000:
                               PAVL4000,PAVL5000,PAVL6000
          GOTO      PAVL7000
.
PAVL1000  PRINT     *30,AVBED1,*42,WRDAV
          GOTO      PAVL9000
.
PAVL2000  PRINT     *30,AVBED1,*42,AVBED2,*54,WRDAV
          GOTO      PAVL9000
.
PAVL3000  PRINT     *30,AVBED1,*42,AVBED2,*54,AVBED3,*66,WRDAV
          GOTO      PAVL9000
.
PAVL4000  PRINT     *30,AVBED1,*42,AVBED2,*54,AVBED3:
                    *66,AVBED4,*78,WRDAV
          GOTO      PAVL9000
.
PAVL5000  PRINT     *30,AVBED1,*42,AVBED2,*54,AVBED3:
                    *66,AVBED4,*78,AVBED5,*90,WRDAV
          GOTO      PAVL9000
.
PAVL6000  PRINT     *30,AVBED1,*42,AVBED2,*54,AVBED3:
                    *66,AVBED4,*78,AVBED5,*90,AVBED6,*102,WRDAV
          GOTO      PAVL9000
.
PAVL7000  PRINT     *30,AVBED1,*42,AVBED2,*54,AVBED3:
                    *66,AVBED4,*78,AVBED5,*90,AVBED6,*102,AVBED7:
                    *114,WRDAV
.
PAVL9000  ADD       ONE,LNO
PAVL9999  RETURN
+
.*******************************************************************************
.*        MGRT0000
.*        Move grand total values
.*******************************************************************************
MGRT0000
          MOVE      GRDBED1,AVBED1
          MOVE      GRDBED2,AVBED2
          MOVE      GRDBED3,AVBED3
          MOVE      GRDBED4,AVBED4
          MOVE      GRDBED5,AVBED5
          MOVE      GRDBED6,AVBED6
          MOVE      GRDBED7,AVBED7
          MOVE      GRCOL1,COL1
          MOVE      GRCOL2,COL2
          MOVE      GRCOL3,COL3
          MOVE      GRCOL4,COL4
          MOVE      GRCOL5,COL5
          MOVE      GRCOL6,COL6
          MOVE      GRCOL7,COL7
.
MGRT9999  RETURN
+
.*******************************************************************************
.*        INITCOL
.*        Initialize all the variables
.*******************************************************************************
INITCOL   MOVE      ZERO,COL1
          MOVE      ZERO,COL2
          MOVE      ZERO,COL3
          MOVE      ZERO,COL4
          MOVE      ZERO,COL5
          MOVE      ZERO,COL6
          MOVE      ZERO,COL7
.
          MOVE      ZERO,PCENT1
          MOVE      ZERO,PCENT2
          MOVE      ZERO,PCENT3
          MOVE      ZERO,PCENT4
          MOVE      ZERO,PCENT5
          MOVE      ZERO,PCENT6
          MOVE      ZERO,PCENT7
          MOVE      ZERO,PCENT8
.
          MOVE      ZERO,AVBED1
          MOVE      ZERO,AVBED2
          MOVE      ZERO,AVBED3
          MOVE      ZERO,AVBED4
          MOVE      ZERO,AVBED5
          MOVE      ZERO,AVBED6
          MOVE      ZERO,AVBED7
.
          MOVE      ZERO,DAYA1
          MOVE      ZERO,DAYA2
          MOVE      ZERO,DAYA3
          MOVE      ZERO,DAYA4
          MOVE      ZERO,DAYA5
          MOVE      ZERO,DAYA6
          MOVE      ZERO,DAYA7
.
          MOVE      ZERO,DAYC1
          MOVE      ZERO,DAYC2
          MOVE      ZERO,DAYC3
          MOVE      ZERO,DAYC4
          MOVE      ZERO,DAYC5
          MOVE      ZERO,DAYC6
          MOVE      ZERO,DAYC7
.
          MOVE      ZERO,ADTOT
          MOVE      ZERO,CHTOT
          MOVE      ZERO,WRDTOT
          MOVE      ZERO,WRDAV
          RETURN
.*******************************************************************************
.*                           INITGRD
.*        Initialize the grand total variables
.*******************************************************************************
INITGRD   MOVE      ZERO,GRCOL1
          MOVE      ZERO,GRCOL2
          MOVE      ZERO,GRCOL3
          MOVE      ZERO,GRCOL4
          MOVE      ZERO,GRCOL5
          MOVE      ZERO,GRCOL6
          MOVE      ZERO,GRCOL7
          MOVE      ZERO,GRDBED1
          MOVE      ZERO,GRDBED2
          MOVE      ZERO,GRDBED3
          MOVE      ZERO,GRDBED4
          MOVE      ZERO,GRDBED5
          MOVE      ZERO,GRDBED6
          MOVE      ZERO,GRDBED7
          MOVE      ZERO,GRTOT
          MOVE      ZERO,GRDBED
          RETURN
.
.         Subroutine to key in a valid date
.
KEYINDTE  
          IF        IDAY=0
            MOVE      SP10,CDAY        * no default day/mon
            MOVE      SP10,CMON
            MOVE      SP10,CYEAR
          ELSE
            MOVE      IDAY,CDAY        * set up day/mon
            MOVE      IMON,CMON
            MOVE      IYEAR,CYEAR
            MOVE      ICENT,CCENT
          ENDIF
.
          MOVE      VERT,CVERT         * set up position
          MOVE      "20",CCOL
.
          MOVE      "0",CCANLDTE       * 0=cannot cancel default date, 1=can
          MOVE      "1",CDEFDTE        * 0=3 C/R's to accept date, 1=1 C/R
          REPEAT
            CALL      KEYDATE          * nez modified to use standard routine
          UNTIL     CQUEST=0
.
          MOVE      ZERO,IDAY
          MOVE      CDAY,IDAY
.
          RETURN
.
.         Routine to calculate day of a given date
.
FINDAY    UNPACK    KDATE,XDAY,DIM1,XMON,DIM1,XCENT,XYEAR
          MOVE      XDAY,DD
          MOVE      XMON,MM
          MOVE      XYEAR,YY
          MOVE      XCENT,CC
          CALL      DMYCON
.
          PACK      SAVYR,XCENT,XYEAR       * srf 636881
          CALL      YEARCHK
.
          COMPARE   ONE,YEARFLG
          RETURN    IF EQUAL
.
          MOVE      JULDAY,SAVDAY
          MOVE      JULDAY,KDAY
          DIV       "7",KDAY
          MULT      "7",KDAY
          ADD       ONE,KDAY
.
          SUB       KDAY,SAVDAY
          ADD       FSTDAY,SAVDAY
          MOVE      SP10,DAYS
.
          COMPARE   "7",SAVDAY
          GOTO      CRDAYBR IF EQUAL
          GOTO      CRDAYBR IF LESS
.
          SUB       "7",SAVDAY
.
CRDAYBR   MOVE      DSUN,DAYS
          COMPARE   ZERO,SAVDAY
          GOTO      EDAYBR IF EQUAL
.
          LOAD      DAYS USING SAVDAY OF DMON,DTUE,DWED,DTHU,DFRI,DSAT,DSUN
          BRANCH    SAVDAY OF EDAYBR,EDAYBR,EDAYBR,EDAYBR,EDAYBR,EDAYBR,EDAYBR
.
          DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Invalid Days.  Please contact I.B.A. **",*W3;
          MOVE      ONE,YEARFLG
EDAYBR    RETURN
+
.
.         Get year check to base date
.
YEARCHK   PACK      KEY4,SAVYR
          CALL      DOFYR000 
          BRANCH    EXIT,NOYEAR
          RETURN
.
NOYEAR    DISPLAY   *B,*P1:24,*V2LON,*EL:
                    "** No details on file for this year.  ":
                    "Please re-enter !! **",*W4;
          MOVE      ONE,YEARFLG
          RETURN
+
.-------- I/O Routines for Weekly Occupancy file --------
.
RDWOCP1   MOVE      ZERO,OVRCD
          RESET     KEY11
          READ      PATWOCP1,KEY11;WOWARD,WODATE:
                    WODAYA,WODAYC,WODAYD,WODAYT:
                    WOAVAIL,WODWEEK
          GOTO      OVERCOND IF OVER
          RETURN
.
RDKWOCP1  MOVE      ZERO,OVRCD
          READKS    PATWOCP1;WOWARD,WODATE:
                    WODAYA,WODAYC,WODAYD,WODAYT:
                    WOAVAIL,WODWEEK
          GOTO      OVERCOND IF OVER
          RETURN
.
UPWOCP1   UPDATE    PATWOCP1;WOWARD,WODATE:
                    WODAYA,WODAYC,WODAYD,WODAYT:
                    WOAVAIL,WODWEEK
          RETURN
.
RDKWOCP2  MOVE      ZERO,OVRCD
          READKS    PATWOCP2;WOWARD,WODATE:
                    WODAYA,WODAYC,WODAYD,WODAYT:
                    WOAVAIL,WODWEEK
          GOTO      OVERCOND IF OVER
          RETURN
.
RDSWOCP2  MOVE      ZERO,OVRCD
          RESET     KEY13
          READ      PATWOCP2,KEY13;;
          GOTO      OVERCOND IF OVER
          RETURN
.
RDWOCP2   MOVE      ZERO,OVRCD
          RESET     KEY13
          READ      PATWOCP2,KEY13;WOWARD,WODATE:
                    WODAYA,WODAYC,WODAYD,WODAYT:
                    WOAVAIL,WODWEEK
          GOTO      OVERCOND IF OVER
          RETURN
.
UPWOCP2   UPDATE    PATWOCP2;WOWARD,WODATE:
                    WODAYA,WODAYC,WODAYD,WODAYT:
                    WOAVAIL,WODWEEK
          RETURN
.
WRWOCP2   RESET     KEY13
          WRITE     PATWOCP2,KEY13;WOWARD,WODATE:
                    WODAYA,WODAYC,WODAYD,WODAYT:
                    WOAVAIL,WODWEEK
          RETURN
.
.-------- I/O Routines for temp file --------
.
RATMPR1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      PATMP1XX,KEY8;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      PATMP1XX,KEY8;;
          RETURN
.
RDTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      PATMP1XX,KEY8;TMPADMN
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READKS    PATMP1XX;TMPADMN
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READKP    PATMP1XX;TMPADMN
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY8
          WRITE     PATMP1XX,KEY8;KEY8
          RETURN
.
UPTMPR1   UPDATE    PATMP1XX;TMPADMN
          RETURN
.
DETMPR1   RESET     KEY8
          DELETE    PATMP1XX,KEY8
          RETURN
+
.
ENDIT     CHAIN     PGM
          STOP
.
.==============================================================================
.
          INCLUDE   STD001IO
          INC       TFILENAM                * Generate Temp File Name
          INC       IBASEQIO/INC            * Sequential Numbers File
          INC       WEBERRIO/INC            * Web Server Error Logging
.
          INC       CALCDAYS
          INCLUDE   PATAGED
          INC       DATECONV
          INC       WDACTVDY
.
          INCLUDE   PATDAYIO/INC
          INC       PATCODIO/INC
          INC       PATDSCIO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PMSVX1IO/INC
          INC       PATTRNIO/INC
          INC       PATWR1IO/INC
          INCLUDE   PATWBHIO/INC
