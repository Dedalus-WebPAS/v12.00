.******************************************************************************
.* System         : Common                                                    *
.* Program        : IBASYS70.PBL                                              *
.* Name           : Postcode File Maintenance                                 *
.******************************************************************************
.* Date           : 27/03/1997                                                *
.* Author         : An IBA programmer                                         *
.* Function       : Maintain ibapostf                                         *
.* Modifications  :                                                           *
.*                                                                            *
.*       V10.14.01  25/03/2019  Peter Vela                  Task 0871630      *
.*                  Added IBPORRAV - Regional and Remote Areas Value          *
.*       V10.05.01  01/01/2015  Ania P                      CAR 261630        *
.*                  Removed use of PORT for temp file naming                  *
.*       V10.03.01  17/11/2011  Mike Laming     CAR 240184                    *
.*                  Changes to IBAPOSTF Post Code table - added State to Keys *
.*        V9.03.01  22/05/2003  Lina Vo    CAR 37504                          *
.*                  Added new field IBPOASGC                                  *
.******************************************************************************
.*        C2.00.01  01/12/1999  J Habasque SRF 635409                         *
.*                  Added check for zero screen number in DISP0000            *
.*        C1.00.04  30/10/98 J.Tan   SRF 628881                               *
.*                  Allow more than 100 item number                           *
.*        C1.00.03  05/10/98 J.Tan   SRF 627841                               *
.*                  Fixed deleting when it's only one suburb for a postcode   *
.*        C1.00.02  13/08/1998  Greg Horvat                                   *
.*                  Fixed a bug when changing the suburb & the keyed in suburb*
.*                  gets removed                                              *
.*        C1.00.01  J.Tan  SRF 623677                                         *
.*                  Fixed deleting options                                    *
.*                                                                            *
.******************************************************************************
+
          INC       STD001FD
          INC       IBAPOSFD/INC            * Postcode file
          INC       IBASEQFD/INC  
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.
. ----- Tempfile definitions -----
.
TEMP1     IFILE     SQL, FIXED=74, KEY="U1-3"
TEMP2     IFILE     SQL, FIXED=74, KEY="U4-11,12-56,57-59"
FILELIN1  INIT      " 74 U1-3 U4-11,12-56,57-59"
.
.Name     Type   Length   Physical   Start   Description
.----     ----   ------   --------   -----   -----------
DTMPITMN  DIM       3         3        1     Item no
TMPPOST   DIM       8         8        4     Postcode
TMPSUBR   DIM       45        45       12    Suburb
TMPSTATE  DIM       3         3        57    State
TMPASGC   DIM       9         9        60    ABS ASGC
TMPRRAV   DIM       5         5        69    Regional and Remote Areas Value
.
.End of Record                         74
.
. ----- Program Variables -----
.
CEXIT2    FORM      2
CMDLINE   DIM       127
.
DELCNT    FORM      2                       * Delete counter
DELETE    FORM      1                       * Delete flag
.
FORM3     FORM      3
.
MAXITMNO  FORM      3                       * Maximum item no
MAXSCRNO  FORM      2                       * Maximum screen no
MINITMNO  FORM      3                       * Minimum item no
MODE      FORM      1                       * Mode type
.
NEXT      FORM      1                       * Next flag
.
POST      FORM      1                       * Post flag
POSTCODE  DIM       4                       * Postcode
PREVIOUS  FORM      1                       * Previous flag
.
SCRARY    DIM       3[10]                   * Screen array
SCRNO     FORM      2                       * Screen no
.
TMPITMNO  FORM      3                       * Item no
.
. ----- Program Constants -----
.
SP50      INIT      "                                                  "
.
PRGID     INIT      "IBASYS70"
PRGNAM    INIT      "Postcode File Maintenance"
VERSION   INIT      "V12.00.00"
+
.******************************************************************************
.*                                   ML0000                                   *
.*                                 Main Module                                *
.******************************************************************************
ML0000    CALL      INIT0000                * Initialise variables & open files
          BRANCH    EXIT,ML9000
.
ML1000    CALL      OPTN0000                * Select option
          BRANCH    EXIT,ML9000
.
          CALL      LOAD0000                * Load the tempfile
          CALL      BACK0000                * Display the background screen
          MOVE      ONE,SCRNO               * Display the 1st screen
          CALL      DISP0000                * Display screen
.
ML2000    CALL      QUES0000                * Main question
          COMPARE   ZERO,CEXIT2
          GOTO      ML3000 IF EQUAL         * Post
          GOTO      ML1000 IF LESS          * Cancel
.
          PERFORM   CEXIT2,CHAN0000:        * Change
                           ADDP0000:        * Add
                           DELE0000:        * Delete
                           DALL0000:        * dElete all
                           NEXT0000:        * Next
                           PREV0000         * pRevious
.
          BRANCH    EXIT,ML1000
          GOTO      ML2000
.
ML3000    CALL      POST0000                * Write the postcodes to file
          GOTO      ML1000
.
ML9000    CALL      KILL0000                * Delete the tempfile
ML9999    CHAIN     PGM
+
.******************************************************************************
.*                                  INIT0000              Called by: ML0000   *
.*                      Initialise Variables & Open Files                     *
.******************************************************************************
INIT0000  CALL      DISPHEAD                * Display screen header
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      IBAPOST1,"ibapostf"
          TRAPCLR   IO
          IF        OVRCD=1
            DISPLAY   *P1:24,*EL,*B,"Postcode file ibapostf not found.  ";
            CALL      HITENTER
            GOTO      INIT9500
          ENDIF
.
          CLOSE     IBAPOST1
          DISPLAY   *P56:24,"Opening ibapostf";
          OPEN      IBAPOST1,"ibapostf"
          OPEN      IBAPOST2,"ibapostf"
.
          CALL      TFILENAM
.
INIT9000  MOVE      ZERO,EXIT
          GOTO      INIT9999
.
INIT9500  MOVE      ONE,EXIT
INIT9999  RETURN
+
.******************************************************************************
.*                                  OPTN0000              Called by: ML0000   *
.*                                Select Option                               *
.******************************************************************************
OPTN0000  MOVE      "4",CVERT
          MOVE      ZERO,CQUEST             * ? flag - no
          MOVE      SP4,POSTCODE
.
OPTN1000  KEYIN     *P1:CVERT,*EF,"Postcode : ",*V2LON,*DV,UNDLN4:
                    *P12:CVERT,POSTCODE;
.
          ENDSET    POSTCODE
          APPEND    SP4,POSTCODE
          RESET     POSTCODE
.
          MATCH     SP4,POSTCODE
          GOTO      OPTN9500 IF EQUAL       * Return entered
.
          CMATCH    EXITCHAR,POSTCODE
          GOTO      OPTN9500 IF EQUAL       * Exitchar entered
.
          CMATCH    QUEST,POSTCODE
          GOTO      OPTN2000 IF EQUAL       * ? entered
.
          PACK      KEY56,POSTCODE,SP50                               *C-240184
          CALL      RSIBPOS1                * Position on & read a postcode
          CALL      RKIBPOS1                  file record
.
          PERFORM   CQUEST,PUTSCR00         * Restore the previous screen
.
          DISPLAY   *P1:4,*EF,"Postcode : ",*V2LON,POSTCODE;
          GOTO      OPTN9000
.
OPTN2000  IF        CQUEST<>1
            MOVE      ONE,CQUEST            * ? flag - yes
            MOVE      ZERO,HLEF
            CALL      GETSCR00              * Save the current screen
          ENDIF
.
          CALL      IBAPOSDS                * Display the postcodes
          PERFORM   EXIT,FRESCR00           * Free the previous screen
          BRANCH    EXIT,OPTN0000
.
          MOVE      "24",CVERT
          GOTO      OPTN1000
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  PERFORM   CQUEST,FRESCR00         * Free the previous screen
          MOVE      ONE,EXIT
OPTN9999  RETURN
+
.******************************************************************************
.*                                  LOAD0000              Called by: ML0000   *
.*                              Load The Tempfile                             *
.******************************************************************************
LOAD0000  CALL      OPEN0000                * Open the tempfile
          MOVE      ZERO,MAXSCRNO           * Clear the maximum screen no
          MOVE      ZERO,MODE               * Insert mode
          MOVE      ZERO,SCRNO              * Clear the screen no
          MOVE      ZERO,TMPITMNO           * Clear the item no
          DISPLAY   *P1:24,*EL,*V2LON,"Loading the Tempfile ... ",*W;
.
          PACK      KEY56,POSTCODE,SP50                               *C-240184
          CALL      RSIBPOS1                * Position on & read a postcode
LOAD1000  CALL      RKIBPOS1                  file record
          BRANCH    OVRCD,LOAD9000
.
          MATCH     POSTCODE,IBPOPCOD
          GOTO      LOAD9000 IF NOT EQUAL   * Different postcode, exit
.
          ADD       ONE,TMPITMNO            * Increment the item no
          MOVE      IBPOPCOD,TMPPOST        * Postcode
          MOVE      IBPOSUBR,TMPSUBR        * Suburb
          MOVE      IBPOSTAT,TMPSTATE       * State
          MOVE      IBPOASGC,TMPASGC        * ABS ASGC
          MOVE      IBPORRAV,TMPRRAV        * Remote Area Postcode Value
.
          CALL      WRTP0000                * Write a tempfile record
          GOTO      LOAD1000
.
LOAD9000  MOVE      ZERO,EXIT
LOAD9999  RETURN
+
.******************************************************************************
.*                                  WRTP0000              Called by: LOAD0000 *
.*                           Write A Tempfile Record               & ADDP0000 *
.******************************************************************************
WRTP0000  MOVE      POSTCODE,TMPPOST
          PACK      KEY56,TMPPOST,TMPSUBR,TMPSTATE,SP70               *C-240184
          CALL      RDTEMP2                 * Read a 2nd tempfile record
          IF        OVRCD=1
            CALL      WRTEMP2               * Write a 2nd tempfile record
.
            ASSIGN    TMPITMNO%17,FORM3
            IF        FORM3=1
              ADD       ONE,MAXSCRNO        * Increment the maximum screen no
              PACK      SCRARY[MAXSCRNO],TMPITMNO * 1st record on each screen
              ADD       ONE,SCRNO           * Increment the screen no
            ENDIF
            MOVE      ONE,MODE              * Change mode
          ENDIF
.
WRTP9000  MOVE      ZERO,EXIT
WRTP9999  RETURN
+
.******************************************************************************
.*                                  BACK0000              Called by: ML0000   *
.*                        Display The Background Screen                       *
.******************************************************************************
.o. Suburb                                         State
BACK0000  DISPLAY   *P1:6,*EF,*V2LON,*ULON," No.",*P6:6,"Suburb",SP30,SP9:
                    *P53:6,"State",*P60:6,"ABS ASGC ",*P70:6,"RRAV ";

BACK9000  MOVE      ZERO,EXIT
BACK9999  RETURN
+
.******************************************************************************
.*                                  DISP0000              Called by: Most     *
.*                               Display Screen                      Routines *
.******************************************************************************
DISP0000  DISPLAY   *P1:7,*EF;
          MOVE      "6",CVERT               * Clear the row counter
          MOVE      ZERO,TMPITMNO           * Clear the item no
.
          COMPARE   ONE,MODE
          GOTO      DISP9000 IF NOT EQUAL   * Insert mode, dont display
.
          IF        SCRNO=0
            GOTO      DISP9999
          ENDIF
.
          UNPACK    SCRARY[SCRNO],KEY3
          CALL      RDTEMP1                 * Read a 1st tempfile record
          BRANCH    OVRCD,DISP9000
.
DISP1000  ADD       ONE,CVERT               * Increment the row counter
          CALL      LINE0000                * Display a line
          CALL      RKTEMP1                 * Read a 1st tempfile record
          BRANCH    OVRCD,DISP9000
.
          COMPARE   "23",CVERT
          GOTO      DISP1000 IF LESS        * Screen not full, display next item
.
DISP9000  MOVE      ZERO,EXIT
DISP9999  RETURN
+
.******************************************************************************
.*                                  LINE0000              Called by: DISP0000 *
.*                               Display A Line           ADDP0000 & DELE0000 *
.******************************************************************************
.1. 123456789012345678901234567890123456789012345  123
LINE0000  DISPLAY   *P1:CVERT,*V2LON,TMPITMNO,".",*P6:CVERT,*HOFF,TMPSUBR:
                    *P53:CVERT,TMPSTATE,*P60:CVERT,TMPASGC,*P70:CVERT,TMPRRAV;
LINE9000  MOVE      ZERO,EXIT
LINE9999  RETURN
+
.******************************************************************************
.*                                  QUES0000              Called by: ML0000   *
.*                                Main Question                               *
.******************************************************************************
.elect Item, Add, Delete, dElete all, Next, pRevious, Post, Cancel ?
QUES0000  MOVE      ZERO,EXIT
          MOVE      ONE,DELETE              * Delete flag - no
          MOVE      ONE,NEXT                * Next flag - no
          MOVE      ONE,POST                * Post flag - no
          MOVE      ONE,PREVIOUS            * Previous flag - no
.
          MOVE      ZERO,MAXITMNO           * Clear the maximum item no
          MOVE      ZERO,MINITMNO           * Clear the minimum item no
          IF        SCRNO=0
            GOTO      QUES0500
          ENDIF
.
          IF        MODE=1
            MOVE      ONE,FORM3
            UNPACK    SCRARY[SCRNO],KEY3
            MOVE      KEY3,MINITMNO         * Minimum item no
            CALL      RDTEMP1               * Read a 1st tempfile record
            WHILE     OVRCD<>1 & FORM3<17
              ADD       ONE,FORM3
              CALL      RKTEMP1             * Read a 1st tempfile record
            DO
            MOVE      TMPITMNO,MAXITMNO     * Maximum item no
          ENDIF
.
QUES0500  DISPLAY   *P1:24,*EL;
          MOVE      "1",CCOL
.
          IF        MODE=1
            DISPLAY   *HOFF,"Select Item, ";
            ADD       "13",CCOL
          ENDIF
.
          DISPLAY   *V2LON,"A",*HOFF,"dd, ";
          ADD       "5",CCOL
.
          IF        MODE=1
            DISPLAY   *V2LON,"D",*HOFF,"elete, d",*V2LON,"E",*HOFF,"lete All, ";
            ADD       "20",CCOL
            MOVE      ZERO,DELETE           * Delete flag - yes
          ENDIF
.
          IF        SCRNO<MAXSCRNO
            DISPLAY   *V2LON,"N",*HOFF,"ext, ";
            ADD       "6",CCOL
            MOVE      ZERO,NEXT             * Next flag - yes
          ENDIF
.
          IF        SCRNO>1
            DISPLAY   *HOFF,"p",*V2LON,"R",*HOFF,"evious, ";
            ADD       "10",CCOL
            MOVE      ZERO,PREVIOUS         * Previous flag - yes
          ENDIF
.
          IF        MODE=1
            DISPLAY   *V2LON,"P",*HOFF,"ost, ";
            ADD       "6",CCOL
            MOVE      ZERO,POST             * Post flag - yes
          ENDIF
.
          DISPLAY   *V2LON,"C",*HOFF,"ancel ? ";
          ADD       "9",CCOL
.
QUES1000  MOVE      SP3,KEY3
          KEYIN     *PCCOL:24,*EL,*JR,*V2LON,KEY3;
.
          TYPE      KEY3
          GOTO      QUES3000 IF EQUAL       * Numeric
.
          REP       UPPLOW,KEY3
          REP       "A1D2E3N4R5P6C7",KEY3
          MOVE      ZERO,CCITEM
          MOVE      KEY3,CCITEM
          BRANCH    CCITEM,QUES9200,QUES9300,QUES9400,QUES9500,QUES9600:
.                          Add      Delete   dElete A Next     pRevious
                           QUES9000,QUES9900
.                          Post     Cancel
.
QUES2000  BEEP
          GOTO      QUES1000
.
QUES3000  COMPARE   ONE,MODE
          GOTO      QUES2000 IF NOT EQUAL   * Not in change mode, error
.
          MOVE      ZERO,CCITEM
          MOVE      KEY3,CCITEM
          IF        CCITEM<MINITMNO | CCITEM>MAXITMNO
            GOTO      QUES2000
          ENDIF
          GOTO      QUES9100
.
QUES9000  BRANCH    POST,QUES2000
          MOVE      "0",CEXIT2              * Post
          GOTO      QUES9999
.
QUES9100  MOVE      "1",CEXIT2              * Change
          GOTO      QUES9999
.
QUES9200  MOVE      "2",CEXIT2              * Add
          GOTO      QUES9999
.
QUES9300  BRANCH    DELETE,QUES2000
          MOVE      "3",CEXIT2              * Delete
          GOTO      QUES9999
.
QUES9400  BRANCH    DELETE,QUES2000
          MOVE      "4",CEXIT2              * dElete all
          GOTO      QUES9999
.
QUES9500  BRANCH    NEXT,QUES2000
          MOVE      "5",CEXIT2              * Next
          GOTO      QUES9999
.
QUES9600  BRANCH    PREVIOUS,QUES2000
          MOVE      "6",CEXIT2              * pRevious
          GOTO      QUES9999
.
QUES9900  MOVE      "-1",CEXIT2             * Cancel
QUES9999  RETURN
+
.******************************************************************************
.*                                  CHAN0000              Called by: ML0000   *
.*                                   Change                                   *
.******************************************************************************
CHAN0000  MOVE      CCITEM,TMPITMNO
          ASSIGN    (TMPITMNO-MINITMNO)+7,CVERT
          DISPLAY   *P1:CVERT,*V2LON,TMPITMNO,".",*P1:24,*EL;
.
CHAN1000  CALL      KSUB0000                * Keyin the suburb
          BRANCH    EXIT,CHAN4000,CHAN9500
.                        EOS      Exitchar
.
CHAN2000  CALL      KSTA0000                * Keyin the state
          BRANCH    EXIT,CHAN1000,CHAN2500,CHAN9500
.                        EOS      Spaces   Exitchar
.
CHAN2500  CALL      KSLA0000                * Keyin the ABS ASGC
          BRANCH    EXIT,CHAN2000,CHAN2700,CHAN9500
.                        EOS      Spaces   Exitchar
.
CHAN2700  CALL      KRAV0000                * Keyin the RRAV
          BRANCH    EXIT,CHAN2000,CHAN3000,CHAN9500
.                        EOS      Spaces   Exitchar
.
CHAN3000  CALL      UPTEMP1                 * Update a 1st tempfile record
CHAN4000  CALL      DISP0000                * Display screen
.
CHAN9000  MOVE      ZERO,EXIT
          GOTO      CHAN9999
.
CHAN9500  MOVE      ONE,EXIT
CHAN9999  RETURN
+
.******************************************************************************
.*                                  ADDP0000              Called by: ML0000   *
.*                                    Add                                     *
.******************************************************************************
ADDP0000  MOVE      MAXSCRNO,SCRNO          * Set to display the last screen
          CALL      DISP0000                * Display screen
.
ADDP1000  IF        CVERT>=23
            DISPLAY   *P1:7,*EF;
            MOVE      "6",CVERT             * Clear the row counter
          ENDIF
          ADD       ONE,CVERT               * Increment the row counter
          ADD       ONE,TMPITMNO            * Increment the item no
          DISPLAY   *P1:CVERT,*V2LON,TMPITMNO,".";
.
ADDP2000  UNPACK    SP50,TMPSUBR,TMPSTATE
          CALL      KSUB0000                * Keyin the suburb
          BRANCH    EXIT,ADDP5000,ADDP9500
.                        EOS      Exitchar
.
ADDP3000  CALL      KSTA0000                * Keyin the state
          BRANCH    EXIT,ADDP2000,ADDP3500,ADDP9500
.                        EOS      Spaces   Exitchar
.
ADDP3500  CALL      KSLA0000                * Keyin the ABS ASGC
          BRANCH    EXIT,ADDP3000,ADDP4000,ADDP9500
.                        EOS      Spaces   Exitchar
.
ADDP4000  CALL      WRTP0000                * Write a tempfile record
          CALL      LINE0000                * Display a line
          GOTO      ADDP1000
.
ADDP5000  CALL      DISP0000                * Display screen
.
ADDP9000  MOVE      ZERO,EXIT
          GOTO      ADDP9999
.
ADDP9500  MOVE      ONE,EXIT
ADDP9999  RETURN
+
.******************************************************************************
.*                                  KSUB0000              Called by: CHAN0000 *
.*                              Keyin The Suburb                   & ADDP0000 *
.******************************************************************************
KSUB0000  PACK      TMPSUBR,SP50
          PACK      KEY3,TMPITMNO
          CALL      RATEMP1                 * Read a 1st tempfile record
          IF        OVRCD=1
            KEYIN     *P6:CVERT,*DV,UNDLN30,*DV,UNDLN15:
                      *P6:CVERT,*V2LON,TMPSUBR:
                      *P6:CVERT,*DV,TMPSUBR;
          ELSE
            KEYIN     *P6:CVERT,*DV,TMPSUBR:
                      *P6:CVERT,*V2LON,*RV,TMPSUBR:
                      *P6:CVERT,*DV,TMPSUBR;
          ENDIF
.
          RESET     TMPSUBR
          GOTO      KSUB9100 IF EOS         * Nothing entered
.
          ENDSET    TMPSUBR
          APPEND    SP50,TMPSUBR
          RESET     TMPSUBR
.
          MATCH     SP50,TMPSUBR
          GOTO      KSUB1000 IF EQUAL       * Spaces entered
.
          CMATCH    EXITCHAR,TMPSUBR
          GOTO      KSUB9200 IF EQUAL       * Exitchar entered
.
          MOVE      TMPITMNO,FORM3
          PACK      KEY56,TMPPOST,TMPSUBR,TMPSTATE,SP70               *C-240184
          CALL      RDTEMP2                 * Read a 2nd tempfile record
          BRANCH    OVRCD,KSUB9000
.
          COMPARE   FORM3,TMPITMNO
          GOTO      KSUB9000 IF EQUAL       * Same item no
.
          DISPLAY   *P1:24,*EL,*B,"Suburb already exists for postcode.  ";
          CALL      HITENTER
.
          MOVE      FORM3,TMPITMNO
          GOTO      KSUB0000
.
KSUB1000  DISPLAY   *P1:24,*EL,*B,"Blank suburb's are invalid.  ";
          CALL      HITENTER
          GOTO      KSUB0000
.
KSUB9000  MOVE      ZERO,EXIT
          GOTO      KSUB9999
.
KSUB9100  MOVE      ONE,EXIT
          GOTO      KSUB9999
.
KSUB9200  MOVE      TWO,EXIT
KSUB9999  RETURN
+
.******************************************************************************
.*                                  KSTA0000              Called by: CHAN0000 *
.*                               Keyin The State                   & ADDP0000 *
.******************************************************************************
KSTA0000  PACK      TMPSTATE,SP3
          PACK      KEY3,TMPITMNO
          CALL      RATEMP1                 * Read a 1st tempfile record
          IF        OVRCD=1
            KEYIN     *P53:CVERT,*DV,UNDLN3:
                      *P53:CVERT,*V2LON,TMPSTATE:
                      *P53:CVERT,*DV,TMPSTATE;
          ELSE
            KEYIN     *P53:CVERT,*DV,TMPSTATE:
                      *P53:CVERT,*V2LON,*RV,TMPSTATE:
                      *P53:CVERT,*DV,TMPSTATE;
          ENDIF
.
          RESET     TMPSTATE
          GOTO      KSTA9100 IF EOS         * Nothing entered
.
          ENDSET    TMPSTATE
          APPEND    SP3,TMPSTATE
          RESET     TMPSTATE
.
          MATCH     SP3,TMPSTATE
          GOTO      KSTA9200 IF EQUAL       * Spaces entered
.
          CMATCH    EXITCHAR,TMPSTATE
          GOTO      KSTA9300 IF EQUAL       * Exitchar entered
.
KSTA9000  MOVE      ZERO,EXIT
          GOTO      KSTA9999
.
KSTA9100  MOVE      ONE,EXIT
          GOTO      KSTA9999
.
KSTA9200  MOVE      TWO,EXIT
          GOTO      KSTA9999
.
KSTA9300  MOVE      THREE,EXIT
KSTA9999  RETURN
+
.******************************************************************************
.*                                  KSLA0000              Called by: CHAN0000 *
.*                               Keyin The ABS ASGC                & ADDP0000 *
.******************************************************************************
KSLA0000  PACK      TMPASGC,SP3
          PACK      KEY3,TMPITMNO
          CALL      RATEMP1                 * Read a 1st tempfile record
          IF        OVRCD=1
            KEYIN     *P60:CVERT,*DV,UNDLN3:
                      *P60:CVERT,*V2LON,TMPASGC:
                      *P60:CVERT,*DV,TMPASGC;
          ELSE
            KEYIN     *P60:CVERT,*DV,TMPASGC:
                      *P60:CVERT,*V2LON,*RV,TMPASGC:
                      *P60:CVERT,*DV,TMPASGC;
          ENDIF
.
          RESET     TMPASGC
          GOTO      KSLA9100 IF EOS         * Nothing entered
.
          ENDSET    TMPASGC
          APPEND    SP10,TMPASGC
          RESET     TMPASGC
.
          MATCH     SP10,TMPASGC
          GOTO      KSLA9200 IF EQUAL       * Spaces entered
.
          CMATCH    EXITCHAR,TMPASGC
          GOTO      KSLA9300 IF EQUAL       * Exitchar entered
.
KSLA9000  MOVE      ZERO,EXIT
          GOTO      KSLA9999
.
KSLA9100  MOVE      ONE,EXIT
          GOTO      KSLA9999
.
KSLA9200  MOVE      TWO,EXIT
          GOTO      KSLA9999
.
KSLA9300  MOVE      THREE,EXIT
KSLA9999  RETURN
+
.******************************************************************************
.*                                  KRAV0000              Called by: CHAN0000 *
.*                               Keyin The RRAV                    & ADDP0000 *
.******************************************************************************
KRAV0000  PACK      TMPRRAV,SP3
          PACK      KEY3,TMPITMNO
          CALL      RATEMP1                 * Read a 1st tempfile record
          IF        OVRCD=1
            KEYIN     *P70:CVERT,*DV,UNDLN3:
                      *P70:CVERT,*V2LON,TMPRRAV:
                      *P70:CVERT,*DV,TMPRRAV;
          ELSE
            KEYIN     *P70:CVERT,*DV,TMPRRAV:
                      *P70:CVERT,*V2LON,*RV,TMPRRAV:
                      *P70:CVERT,*DV,TMPRRAV;
          ENDIF
.
          RESET     TMPRRAV
          GOTO      KRAV9100 IF EOS         * Nothing entered
.
          ENDSET    TMPRRAV
          APPEND    SP10,TMPRRAV
          RESET     TMPRRAV
.
          MATCH     SP10,TMPRRAV
          GOTO      KRAV9200 IF EQUAL       * Spaces entered
.
          CMATCH    EXITCHAR,TMPRRAV
          GOTO      KRAV9300 IF EQUAL       * Exitchar entered
.
KRAV9000  MOVE      ZERO,EXIT
          GOTO      KRAV9999
.
KRAV9100  MOVE      ONE,EXIT
          GOTO      KRAV9999
.
KRAV9200  MOVE      TWO,EXIT
          GOTO      KRAV9999
.
KRAV9300  MOVE      THREE,EXIT
KRAV9999  RETURN
+
.******************************************************************************
.*                                  DELE0000              Called by: ML0000   *
.*                                   Delete                                   *
.******************************************************************************
DELE0000  MOVE      ONE,DELETE              * Delete flag - no
DELE1000  MOVE      ZERO,FORM3
          KEYIN     *P1:24,*EL,"Select Item to Delete : ",*V2LON,FORM3;
.
          COMPARE   ZERO,FORM3
          GOTO      DELE5000 IF EQUAL       * Clear the tempfile
.
          IF        FORM3<MINITMNO | FORM3>MAXITMNO
            BEEP
            GOTO      DELE1000
          ENDIF
.
          PACK      KEY3,FORM3
          CALL      RDTEMP1                 * Read a 1st tempfile record
          IF        OVRCD=1
            DISPLAY   *P1:24,*EL,*B,"Item has been deleted.  ";
            CALL      HITENTER
            GOTO      DELE1000
          ENDIF
.
          ASSIGN    (FORM3-MINITMNO)+7,CVERT
          DISPLAY   *P1:CVERT,*V2LON,TMPITMNO,".",*BLINKON,*P6:CVERT,TMPSUBR:
                    *P53:CVERT,TMPSTATE,*P60:CVERT,TMPASGC,*P70:CVERT,TMPRRAV;
.
          DISPLAY   *P1:24,*EL,"Ok to delete this Item (",*V2LON,"Y",*HOFF:
                    "/",*V2LON,"N",*HOFF,") ? ";
.
DELE2000  KEYIN     *P32:24,*V2LON,ANS;
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS
          GOTO      DELE3000 IF EQUAL       * Delete the record
.
          MATCH     ANSN,ANS
          GOTO      DELE4000 IF EQUAL       * Dont delete the record
.
          BEEP
          GOTO      DELE2000
.
DELE3000  PACK      KEY3,FORM3
          CALL      DETEMP1                 * Delete a 1st tempfile record
.
          DISPLAY   *P6:CVERT,*EL,"<< Item Deleted >>"
          MOVE      ZERO,DELETE             * Delete flag - yes
          GOTO      DELE1000
.
DELE4000  CALL      LINE0000                * Display a line
          GOTO      DELE1000
.
. ----- Clear the tempfile due to deleted items -----
.
DELE5000  BRANCH    DELETE,DELE9000         * Nothing deleted
.
.         MOVE      ZERO,MODE               * Insert mode
          MOVE      ZERO,MAXSCRNO           * Clear the maximum screen no
          MOVE      ZERO,DELCNT             * Reset the delete counter
.
          PACK      KEY3,SP3
          CALL      RSTEMP1                 * Position on & read a 1st tempfile
DELE6000  CALL      RKTEMP1                   record
          BRANCH    OVRCD,DELE8000
.
          ADD       ONE,DELCNT              * Increment the delete counter
          COMPARE   DELCNT,TMPITMNO
          GOTO      DELE7000 IF EQUAL       * Same item nos, get next
.
          PACK      KEY3,TMPITMNO
          CALL      DETEMP1                 * Delete a 1st tempfile record
.
          MOVE      DELCNT,TMPITMNO
          PACK      KEY3,TMPITMNO
          CALL      WRTEMP1                 * Write a 1st tempfile record
.
DELE7000  ASSIGN    TMPITMNO%17,FORM3
          IF        FORM3=1
            ADD       ONE,MAXSCRNO          * Increment the maximum screen no
            PACK      SCRARY[MAXSCRNO],TMPITMNO * 1st record on each screen
          ENDIF
          MOVE      ONE,MODE                * Change mode
          GOTO      DELE6000
.
DELE8000  IF        SCRNO>MAXSCRNO & MAXSCRNO<>0
            MOVE      MAXSCRNO,SCRNO        * Screen no
          ENDIF
          CALL      DISP0000                * Display screen
.
DELE9000  MOVE      ZERO,EXIT
DELE9999  RETURN
+
.******************************************************************************
.*                                  DALL0000              Called by: ML0000   *
.*                                 Delete All                                 *
.******************************************************************************
DALL0000  CALL      DELQST                  * Ok to Delete (Y/N/C) ?
          BRANCH    CEXIT,DALL1000,DALL9000,DALL9500
.
DALL1000  CALL      DRFP0000                * Delete records for postcode
          GOTO      DALL9500
.
DALL9000  MOVE      ZERO,EXIT
          GOTO      DALL9999
.
DALL9500  MOVE      ONE,EXIT
DALL9999  RETURN
+
.******************************************************************************
.*                                  DRFP0000              Called by: DALL0000 *
.*                         Delete Records For Postcode             & POST0000 *
.******************************************************************************
DRFP0000  PACK      KEY56,POSTCODE,SP50                               *C-240184
          CALL      RSIBPOS1                * Position on & read a postcode
          CALL      RKIBPOS1                  file record
          BRANCH    OVRCD,DRFP9000
.
          MATCH     POSTCODE,IBPOPCOD
          GOTO      DRFP9000 IF NOT EQUAL   * Different postcode, exit
.
          PACK      KEY56,IBPOPCOD,IBPOSUBR,IBPOSTAT,SP70             *C-240184
          CALL      DEIBPOS1                * Delete a postcode file record
          GOTO      DRFP0000
.
DRFP9000  MOVE      ZERO,EXIT
DRFP9999  RETURN
+
.******************************************************************************
.*                                  NEXT0000              Called by: ML0000   *
.*                                 Next Screen                                *
.******************************************************************************
NEXT0000  ADD       ONE,SCRNO               * Increment the screen no
          CALL      DISP0000                * Display screen
.
NEXT9000  MOVE      ZERO,EXIT
NEXT9999  RETURN
+
.******************************************************************************
.*                                  PREV0000              Called by: ML0000   *
.*                               Previous Screen                              *
.******************************************************************************
PREV0000  SUB       ONE,SCRNO               * Sub 1 from the screen no
          CALL      DISP0000                * Display screen
.
PREV9000  MOVE      ZERO,EXIT
PREV9999  RETURN
+
.******************************************************************************
.*                                  POST0000              Called by: ML0000   *
.*                                    Post                                    *
.******************************************************************************
POST0000  DISPLAY   *P1:24,*EL,*V2LON,"Posting ... ",*W;
.
          CALL      DRFP0000                * Delete records for postcode
          PACK      IBPOSPAR,SP50
.
          PACK      KEY56,SP50                                        *C-240184
          CALL      RSTEMP2                 * Position on & read 2nd tempfile
POST1000  CALL      RKTEMP2                   record
          BRANCH    OVRCD,POST9000
.
          MOVE      TMPPOST,IBPOPCOD
          MOVE      TMPSUBR,IBPOSUBR
          MOVE      TMPSTATE,IBPOSTAT
          MOVE      TMPASGC,IBPOASGC
          MOVE      TMPRRAV,IBPORRAV
.
          PACK      KEY56,IBPOPCOD,IBPOSUBR,IBPOSTAT,SP70             *C-240184
          CALL      WRIBPOS1                * Write postcode file record
          GOTO      POST1000
.
POST9000  MOVE      ZERO,EXIT
POST9999  RETURN
+
.******************************************************************************
.*                                  OPEN0000              Called by: LOAD0000 *
.*                              Open The Tempfile                             *
.******************************************************************************
OPEN0000  CALL      KILL0000                * Delete the tempfile
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TFILNAME,CMDLINE
          APPEND    FILELIN1,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      TEMP1,TFILNAME
          OPEN      TEMP2,TFILNAME
OPEN9999  RETURN
+
.******************************************************************************
.*                                  KILL0000              Called by: ML0000   *
.*                             Delete The Tempfile                 & OPEN0000 *
.******************************************************************************
KILL0000  CLOSE     TEMP1
          CLOSE     TEMP2
.
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    TFILNAME,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
KILL9999  RETURN
+
.******************************************************************************
.*                        I/O Routines For The Tempfile                       *
.******************************************************************************
RATEMP1   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP1,KEY3;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTEMP1   RESET     KEY3
          READ      TEMP1,KEY3;;
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP1,KEY3;DTMPITMN,TMPPOST,TMPSUBR,TMPSTATE,TMPASGC:
                               TMPRRAV
          GOTO      OVERCOND IF OVER
          MOVE      DTMPITMN,TMPITMNO
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    TEMP1;DTMPITMN,TMPPOST,TMPSUBR,TMPSTATE,TMPASGC,TMPRRAV
          GOTO      OVERCOND IF OVER
          MOVE      DTMPITMN,TMPITMNO
          RETURN
.
WRTEMP1   MOVE      TMPITMNO,DTMPITMN
          RESET     KEY3
          WRITE     TEMP1,KEY3;DTMPITMN,TMPPOST,TMPSUBR,TMPSTATE,TMPASGC:
                               TMPRRAV
          RETURN
.
UPTEMP1   MOVE      TMPITMNO,DTMPITMN
          UPDATE    TEMP1;DTMPITMN,TMPPOST,TMPSUBR,TMPSTATE,TMPASGC,TMPRRAV
          RETURN
.
DETEMP1   RESET     KEY3
          DELETE    TEMP1,KEY3
          RETURN
.
RSTEMP2   RESET     KEY56
          READ      TEMP2,KEY56;;
          RETURN
.
RDTEMP2   MOVE      ZERO,OVRCD
          RESET     KEY56
          READ      TEMP2,KEY56;DTMPITMN,TMPPOST,TMPSUBR,TMPSTATE,TMPASGC:
                                TMPRRAV
          GOTO      OVERCOND IF OVER
          MOVE      DTMPITMN,TMPITMNO
          RETURN
.
RKTEMP2   MOVE      ZERO,OVRCD
          READKS    TEMP2;DTMPITMN,TMPPOST,TMPSUBR,TMPSTATE,TMPASGC,TMPRRAV
          GOTO      OVERCOND IF OVER
          MOVE      DTMPITMN,TMPITMNO
          RETURN
.
WRTEMP2   MOVE      TMPITMNO,DTMPITMN
          RESET     KEY56
          WRITE     TEMP2,KEY56;DTMPITMN,TMPPOST,TMPSUBR,TMPSTATE,TMPASGC:
                                TMPRRAV
          GOTO      OVERCOND IF OVER
          RETURN
+
.==============================================================================
.
          INC       STD001IO
          INC       IBAPOSDS                * Display the postcodes
          INC       IBAPOSIO/INC            * Postcode file
          INC       TFILENAM 
          INC       IBASEQIO/INC 
          INC       WEBERRIO/INC
+
.

