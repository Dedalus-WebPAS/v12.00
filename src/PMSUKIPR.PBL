.------------------------------------------------------------
.  File          :  PMSUKIPR.PBL
.
.  Function      :  Update Keyword Index File for 
.                   Clinical Coding Value Set Codes
.
.  Parameters    :  PMVCVSID - Value Set ID
.                   PMVCCODE - Code
.                   PMVCPTRM - Preferred Term
.                   PMVCFNAM - Fully Specified Name
.
.  Modifications :
.       V10.11.00  23/10/2017  Don Nguyen   TSK 0816814
.                  Created new
.
.  Notes
.  -----
.  This Skeleton Routine is to Create a Procedure to Update
.  a Key Word Index Table that can be used for searching 
.  Masterfiles. The procedure should be called from the 
.  Add, Update and Delete functions in the Masterfile 
.  Maintenance Function.
.  
.  A Key Word Index Table is Defined in the following Manner
.                              
.  PTDKxxxx    DIM       xx    * Code Field Segment 1
.  PTDKyyyy    DIM       xx    * Code Field Segment n
.  PTDKKWD     DIM       50    * Key Word
.  PTDKSPA     DIM       10    * Spare
.
.  Index 1   PTDKxxxx, PTDKyyyy, PTDKKWD
.  Index 2   PTDKKWD, PTDKxxxx, PTDKyyyy
.
.  To convert this Procedure the following should be performed
.    Global Change PAT to the System ID eg :%s/PAT/PAT/g
.    Global Change CKI to the File   ID eg :%s/CKI/CKI/g
.    Global Change PTDK to the IO Call ID eg :%s/PTDK/PTDK/g
.    Modify the KEYINDEX defintion to combined Code Field Lengths eg 6
.    Global Change KEY21 to the Key for the Key Word Table eg KEY21
.    Change xxxxxxx to the Code Fields eg DCODEhh
.    Change the GENR0000 routine to call the BWORD000 for each
.    string of key words to be indexed for the Coded Field
.    eg MOVE    DSNAME,KEYWORDS
.       CALL    BWORD000
.       MOVE    DGNAME,KEYWORDS
.       CALL    BWORD000
.       MOVE    TDESC,KEYWORDS
.       CALL    BWORD000
.------------------------------------------------------------
          DEFPROC   PMSUKIUP
.
          INC       PMSUKIFD/INC
.
KEYINDX1  DIM       3         * Value Set ID
KEYINDX2  DIM       30        * Code
KEYWORDS  DIM       256       * String Containing the Key Words to be Indexed
SIXTY     FORM      "60"
KEYWRDNO  FORM      2
KEYWRD00  DIM       60
KEYWRD01  DIM       50
KEYWRD02  DIM       50
KEYWRD03  DIM       50
KEYWRD04  DIM       50
KEYWRD05  DIM       50
KEYWRD06  DIM       50
KEYWRD07  DIM       50
KEYWRD08  DIM       50
KEYWRD09  DIM       50
KEYWRD10  DIM       50
.------------------------------------------------------------
. Generate Word Index
.------------------------------------------------------------
GENR0000  MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     PMSUKIA1,"pmsukiaf"
          TRAPCLR  IO
          BRANCH   OVRCD,GENR9999
.
          MOVE     PMVCVSID,KEYINDX1
          MOVE     PMVCCODE,KEYINDX2
          CALL     CLEAR000           * Remove Current Key Word Index
          BRANCH   EXIT,GENR9999
.
          PACK     KEY33,PMVCVSID,PMVCCODE,SP70 * Valuidate Record on File
          CALL     RDPMVSC1
          BRANCH   OVRCD,GENR1900     * If Not then it Must be a Delete/Clear
.
          MOVE     PMVCVSID,KEYINDX1
          MOVE     PMVCCODE,KEYINDX2
.
          MOVE     PMVCCODE,KEYWORDS
          CALL     BWORD000           * Determine words to index
.
          MOVE     PMVCPTRM,KEYWORDS
          CALL     BWORD000           * Determine words to index
.
          MOVE     PMVCFNAM,KEYWORDS
          CALL     BWORD000           * Determine words to index
.
GENR1900  CLOSE    PMSUKIA1
.
GENR9999  GOTO     PMSUKI99
+
.------------------------------------------------------------
. Clear Current Key Words
.------------------------------------------------------------
CLEAR000  PACK     KEY83,KEYINDX1,KEYINDX2,SP70
          CALL     RSPMUKI1
          CALL     RKPMUKI1
          BRANCH   OVRCD,CLEAR999
.
          MATCH    KEYINDX1,PMUKVSID
          GOTO     CLEAR999 IF NOT EQUAL
.
          MATCH    KEYINDX2,PMUKCODE
          GOTO     CLEAR999 IF NOT EQUAL
.
          PACK     KEY83,PMUKVSID,PMUKCODE,PMUKKKWD,SP70
          CALL     DEPMUKI1
.
          GOTO     CLEAR000
.
CLEAR999  RETURN
+
.-------------------------------------------------
. Determine Words to Index
.-------------------------------------------------
BWORD000  CMATCH    SP1,KEYWORDS             * Eliminate leading blanks
          IF        @EQUAL
            BUMP      KEYWORDS
            GOTO      BWORD000 IF NOT EOS
            GOTO      BWORD999               * entire name if blank
          ENDIF
          PACK      KEY60,KEYWORDS,SP30      * reset form pointer
          MOVE      KEY60,KEYWORDS
.
          SCAN      SP1,KEYWORDS             * Locate the first blank
          GOTO      BWORD100 IF NOT EQUAL
          BUMP      KEYWORDS,-1              * go back 1 to end of name
          MOVEFPTR  KEYWORDS,CCITEM          * another handly form field
          RESET     KEYWORDS                 * reset the form pointer
          SETLPTR   KEYWORDS,CCITEM          * set logical length to end of name
.
.         Save this Word
.
BWORD100  MOVE      KEYWORDS,KEY50
          PACK      KEY50,KEY50,SP70
          REP       UPPLOW,KEY50             * Always Upper Case
          PACK      KEY83,KEYINDX1,KEYINDX2,KEY50
          UNPACK    KEY83,PMUKVSID,PMUKCODE,PMUKKKWD
          MOVE      SP70,PMUKSPAR
          CALL      RDPMUKI1
          IF        OVRCD=1
            CALL      WRPMUKI1
          ENDIF
          GOTO      BWORD190
.
.         Check for any more words
.
BWORD190  SETLPTR   KEYWORDS,SIXTY         * reset logical length
          ADD       ONE,CCITEM             * position of 1st blank
          RESET     KEYWORDS,CCITEM        * reset to this point
          PACK      KEY60,KEYWORDS,SP30    * reset form pointer
          MOVE      KEY60,KEYWORDS
          GOTO      BWORD000
.
BWORD999  RETURN
+
          INC       PMSUKIIO/INC
          INC       IBAOVRIO/INC
.
PMSUKI99  ENDPROC                          * End of Procedure
.
