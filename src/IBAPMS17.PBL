.******************************************************************************
.* System   : PATIENT                                                         *
.* Program  : IBAPMS17                                                        *
.* Desc     : SIX MONTHLY STATISTICAL REPORT                                  *
.******************************************************************************
.* Date     : 09/05/90                                                        *
.* Author   : DIG                                                             *
.* Comment  :                                                                 * 
.* V12.00.01  16/05/2025  J.Tan          TSK 0955096                          *
.*            Added alpanumeric visit number generation                       *
.******************************************************************************
.* V12.00.01  16/05/2025  J.Tan          TSK 0955096                          *
.*            Added alpanumeric visit number generatio                        *
.******************************************************************************
.* V10.03.01  31/12/2012 Patrick Adair                             CAR 261630 *
.*            Removed port number from temp file name                         *
.*        V10.01.01 03/02/2011 Jill Parkinson CAR 233088                      *
.*                  Added pmsvx1af                                            *
.*        V9.04.03  10/10/2005  Mike Laming   CAR 71590                       *
.*                  Change all "Quarter"s to "Period"                         *
.*        V9.04.02  04/02/2005  Guomin Fu  CAR 56462                          *
.*                  Added the Private, Dept. of Veterans Affairs and Compen-  * 
.*                  sable summary section                                     *
.*        V9.04.01  25/11/2004  Lina Vo   CAR 54828                           *
.*                  Changed CURRROW to be DIM 7. Was causing the report       *
.*                  on the web spool file to go over more one lines.          *
.*        V5.09.B01 30/01/2001  Tonii                                         *
.*                  Mods to include Unknown and Indeterminate as valid gender *
.******************************************************************************
.*                  09/11/1998  Glenn Berry      5.07 changes                 *
.******************************************************************************
.*            V5.01.01 27/03/91 J.Tan     SRF 108179                          *
.*                     Allow to change the ending date                        *
.*            V5.01.02 25/07/91 J.Tan     SRF 109623                          *
.*                     Fixed negative no. of admission during period          *
.*            V5.01.03 16/10/91 J.Tan     SRF 111165                          *
.*                     Fixed the no of admissions during period again         *
.******************************************************************************
          INC       STD001FD
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATDASFD/INC
          INC       PATDRGFD/INC
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
+
.**********************************************************************
.*                        TEMPORARY FILES                             *
.**********************************************************************
PATTM1XX  IFILE     SQL, FIXED=40, KEY="U1-3,4-4"
.
.NAME     TYPE      LENGTH    PHYSICAL    START    DESCRIPTION
.----     ----      ------    --------    -----    -----------
TMPCODE   DIM         3          3          1      Admission Type
.                                                    (ZZZ for day cases
.                                                     zzz for grand totals)
TMPTYPE   DIM         1          1          4      Age break up
.                                                     A = Adult
.                                                     C = Child
TMPSTRTP  FORM        8          5          5      Patients at start of period
TMPSTRTB  FORM        8          5         10      Bed Days at start of period
TMPADMNS  FORM        8          5         15      Admissions during the period
TMPDSCHG  FORM        8          5         20      Discharges during the period
TMPENDP   FORM        8          5         25      Patients at end of period
TMPENDB   FORM        8          5         30      Bed Days at end of period
TMPBEDDP  FORM        8          5         35      Bed Days during the period
.
.         End of Record                    40
.
.
PATTM2XX  IFILE     SQL, FIXED=9, KEY="U1-3"
.
.NAME     TYPE      LENGTH    PHYSICAL    START    DESCRIPTION
.----     ----      ------    --------    -----    -----------
TMPDCODE  DIM         3          3          1      Discharge Status
TMPDSNUM  FORM        8          5          4      Number of Discharges
.
.         End of Record                     9
.
+
.**********************************************************************
.*                             CONSTANTS                              *
.**********************************************************************
ADULT     INIT      "- ADULT"
.
BIGZ      INIT      "ZZZ"
.
CHILD     INIT      "- CHILD"
CODEA     INIT      "A "
CODED     INIT      "D "
.
LITTLEZ   INIT      "zzz"
.
PTOTAL    INIT      "- TOTAL"
.
UNDLNN1   INIT      "*-----------------------------------------------":
                    "--------------"
UNDLNN2   INIT      "----------------------------------------------":
                    "-------------*"
UNDLNN3   INIT      "*-----------------------------------*"
UNDLNN4   INIT      "*----------------------------------------------------":
                    "---------------*"
+
.**********************************************************************
.*                       GLOBAL VARIABLES                             *
.**********************************************************************
CMDLINE   DIM       50
CODE      DIM       2
COUNT     FORM      1
CPTDATE   DIM       8
CURRDESC  DIM       20
CURRREC   DIM       7
.
DIM6      DIM       6
DIM8      DIM       8
.
ENDDATE   DIM       8
ENDATE8   DIM       8                                 
.
FEMTOT1   FORM      8
FEMTOT2   FORM      8
FEMTOT3   FORM      8
FEMTOT4   FORM      8
FLAGDATA  FORM      1
FLAGTMP2  FORM      1
FNAME1    DIM       8
FNAME2    DIM       8
FORM8     FORM      8
FPERIOD   DIM       6
FROMDATE  DIM       8
.
GNDTOTL   FORM      8
.
INDTTOT1  FORM      8
INDTTOT2  FORM      8
INDTTOT3  FORM      8
INDTTOT4  FORM      8
.
MALETOT1  FORM      8
MALETOT2  FORM      8
MALETOT3  FORM      8
MALETOT4  FORM      8
.
NODAYS    FORM      8
.
PERCOCC   FORM      8.2
.
REFERENCE DIM       2
.
SAVKEY11  DIM       11
STRTDATE  DIM       8
STDATE8   DIM       8                     
.
TEMPDATE  DIM       8
TEMPF8    FORM      8
TODATE    DIM       8
TODAY     DIM       8
TOTAL1    FORM      8
TOTAL2    FORM      8
TOTAL3    FORM      8
TOTAL4    FORM      8
TOTAL5    FORM      8
TOTAL6    FORM      8
TOTAL7    FORM      8
TOTBEDAY  FORM      8
TOTLBEDS  FORM      8
TTODATE   DIM       8
.
UNKNTOT1  FORM      8
UNKNTOT2  FORM      8
UNKNTOT3  FORM      8
UNKNTOT4  FORM      8
.
VARNUM    FORM      1
.
PRGID     INIT      "IBAPMS17"
PRGNAM    INIT      "Six Monthly Statistical Report"
VERSION   INIT      "V12.00.01"
+
.**********************************************************************
.*                           MAINLINE                                 *
.*                       Controlling Logic                            *
.**********************************************************************
ML0000    CALL      INIT0000            * initialization
.                                          - open files
.                                          - display header
ML1000    CALL      OPTN0000            * main option screen
          BRANCH    EXIT,ML9999
.
ML2000    CALL      MNTH0000            * enter the starting month
          BRANCH    EXIT,ML1000
.
          CALL      CONT0000            * O.K. To Continue ?
          BRANCH    EXIT,ML3000,ML2000,ML1000
.
ML3000    CALL      CREA0000            * Create the indexed temp files
          CALL      LODA0000            * Load the first temp file
          CALL      PRNA0000            * Print the first section of the report
          CALL      LODB0000            * Load the second temp file
          CALL      PRNB0000            * Print the second section of the report
          CALL      KILL0000            * Delete the indexed temp files
          PROC      PARTC000            * I-56462
.
          COMPARE   ONE,CMATRN          * We have finished if we are not
          GOTO      ML1000 IF NOT EQUAL * running the maternity system
.
          CALL      PRND0000            * Print the fourth section of the report
          GOTO      ML1000
.
ML9999    CHAIN     PGM
+
.**********************************************************************
.*                           INIT0000                                 *
.*               Open files and display header                        *
.**********************************************************************
INIT0000  CALL      DISPHEAD                * Display the screen header
.
          DISPLAY   *P50:24,"Opening ":
                    *P60:24,"patdasaf";
          OPEN      PATDASA1,"patdasaf"
.
          DISPLAY   *P60:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P60:24,"patdrgaf";
          OPEN      PATDRGA1,"patdrgaf"
          OPEN      PATDRGA3,"patdrgaf"
.
          DISPLAY   *P60:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
.------ read the patient control file ------
.
          READ      CONTROLF,TEN5;*188,CMATRN
.
INIT9999  RETURN
+
.**********************************************************************
.*                              CREA0000                              *
.*                   Create the Indexed Temp File                     *
.**********************************************************************
CREA0000  DISPLAY   *P1:24,*EL,*V2LON,*BLINKON,"Creating the Indexed Temp":
                               " Files",*HOFF," - Please Wait";
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FNAME1
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FNAME2
.
          CALL      KILL0000                       * kill existing temp files
.
.------ Build new indexed temp files ------
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FNAME1,CMDLINE
          APPEND    " 40 u1-3,4-4",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      PATTM1XX,FNAME1
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FNAME2,CMDLINE
          APPEND    " 9 u1-3",CMDLINE
          APPEND    SP30,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      PATTM2XX,FNAME2
          DISPLAY   *P1:24,*EL;
.
CREA9999  RETURN
+
.**********************************************************************
.*                              KILL0000                              *
.*               Kill the Tempfiles if they Already Exist             *
.**********************************************************************
KILL0000  CLEAR     CMDLINE
          CLOSE     PATTM1XX
          CLOSE     PATTM2XX
          APPEND    "iserase ",CMDLINE
          APPEND    FNAME1,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FNAME2,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
KILL9999  RETURN
+
.**********************************************************************
.*                           OPTN0000                                 *
.*                   Display the main option screen                   *
.**********************************************************************
OPTN0000  MOVE      FALSE,EXIT
          DISPLAY   *P1:4,*EF,*V2LON,ZERO:
                    *P1:5,ONE:
                    *P2:4,*HOFF," = Exit":
                    *P2:5," = Produce Six Monthly Report":
                    *P1:7,"Select Option : ";
.
.------ keyin option ------
.
OPTN1000  DISPLAY   *P17:7,*EL;
          MOVE      ZERO,OPTION;
          KEYIN     *P17:7,*V2LON,*RV,OPTION;
.
          COMPARE   ZERO,OPTION                 * compare to zero
          GOTO      OPTN9000 IF EQUAL
.
          BRANCH    OPTION,OPTN9999
.
          BEEP                                  * invalid option entered
          GOTO      OPTN1000
.
.------ Exit option chosen ------
.
OPTN9000  MOVE      TRUE,EXIT
.
OPTN9999  RETURN
+
.**********************************************************************
.*                           MNTH0000                                 *
.*           Enter the starting month for the report                  *
.**********************************************************************
MNTH0000  DISPLAY   *P1:9,*EF,"Enter the Starting Month : ":
                    *P1:11,"          Ending Month   : ";
          MOVE      TWENTY8,CCOL
          MOVE      NINE,CVERT
          MOVE      ZERO,CHIGHLT
          MOVE      CCC,CCENT
          REP       " 0",CCENT
          MOVE      SP2,CYEAR
          MOVE      SP2,CMON
.
          CALL      KEYPER                  * keyin the period code
          BRANCH    OVRCD,MNTH9000
.
          PACK      KEY6,ICENT,IYEAR,IMON
          REP       " 0",KEY6
.
          CALL      RDDRGA3                 * read the period file
          BRANCH    OVRCD,MNTH8000
.
          DISPLAY   *P40:9,DRGLDSC;
          PACK      FROMDATE,DRGCNUM,SLASH,DRGCYR
          PACK      STRTDATE,DRGYR,DRGNUM
          MOVE      DRGFDTE,STDATE8         * I-56462       
          MOVE      ZERO,COUNT
.
.------ get the ending month for the report ------
.
MNTH1000  ADD       ONE,COUNT
.
          COMPARE   SIX,COUNT               * We want the sixth month as the
          GOTO      MNTH2000 IF EQUAL         ending month
.
          CALL      RDKDRGA3                * Read through the period date 
          BRANCH    OVRCD,MNTH8000            range file
.
          GOTO      MNTH1000
.
.------ default to next six month from the starting date ------
.
MNTH2000  DISPLAY   *P28:11,*EL,*V2LON,DRGCNUM,*HOFF,SLASH,*V2LON,DRGCYR:
                    *P40:11,*HOFF,DRGLDSC;
.
          MOVE      TWENTY8,CCOL
          MOVE      TEN1,CVERT
          MOVE      ZERO,CHIGHLT
.
          UNPACK    DRGCYR,CCENT,CYEAR      * set up default date
          REP       " 0",DRGYR
          UNPACK    DRGCNUM,CMON
          CALL      KEYPER                  * keyin the period code
          BRANCH    OVRCD,MNTH2100
.
          PACK      KEY6,ICENT,IYEAR,IMON
          REP       " 0",KEY6
.
          CALL      RDDRGA3                 * read the period file
          BRANCH    OVRCD,MNTH6000
.
          DISPLAY   *P28:11,*EL,*V2LON,DRGCNUM,*HOFF,SLASH,*V2LON,DRGCYR:
                    *P40:11,*HOFF,DRGLDSC;
.
.------ we have the ending month so validate and display it ------
.
MNTH2100  PACK      TODATE,DRGCNUM,SLASH,DRGCYR
          PACK      ENDDATE,DRGYR,DRGNUM
.
          MATCH     STRTDATE,ENDDATE        * Make sure the todate is not 
          GOTO      MNTH5000 IF LESS        * before the fromdate
.
          PACK      TODAY,CCC,CYY,CMM,CDD
          REP       " 0",TODAY
.
          MOVE      DRGTDTE,DIM6            * I-56462
.
          MATCH     DRGTDTE,TODAY           * Make sure range does not go into
          GOTO      MNTH7000 IF LESS        * the future
.
.... I-56462
          MATCH     DRGTDTE,TODAY
          GOTO      MNTH4000 IF NOT EQUAL
.
.         If current period subtract one from the ending date
.
          MOVE      CCC,CC
          MOVE      CYY,YY
          MOVE      CMM,MM
          MOVE      CDD,DD
          CALL      DMYCON
.
          SUB       ONE,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
          PACK      DRGTDTE,CC,YY,MM,DD
          REP       " 0",DRGTDTE
.
MNTH4000  MOVE      DRGTDTE,ENDATE8         * set end date
.
.... End I-56462
          MOVE      FALSE,EXIT
          GOTO      MNTH9999
.
.------ the date range will go into the future ------
.
MNTH5000  DISPLAY   *P1:24,*EL,*B,"The To Date cannot be less than the ":
                    "From date - Hit <",*V2LON,"ENTER",*HOFF,"> to continue";
          KEYIN     ANS;
          DISPLAY   *P1:24,*EL;
          GOTO      MNTH0000
.
.------ invalid period entered ------
.
MNTH6000  DISPLAY   *P1:24,*EL,*B,"Invalid Ending Month - Hit <":
                           *V2LON,"ENTER",*HOFF,"> to continue";
          KEYIN     ANS;
          DISPLAY   *P1:24,*EL;
.
          PACK      STRTDATE,DRGYR,DRGNUM   * Reposition to the starting date
          CALL      RDDRGA3                 * read the period file
          MOVE      ZERO,COUNT              * recalcule the default ending date
          GOTO      MNTH1000
.
.------ the date range will go into the future ------
.
MNTH7000  DISPLAY   *P1:24,*EL,*B,"The Date Range cannot go into the future ":
                           "- Hit <",*V2LON,"ENTER",*HOFF,"> to continue";
          KEYIN     ANS;
          DISPLAY   *P1:24,*EL;
          GOTO      MNTH0000
.
.------ invalid period entered ------
.
MNTH8000  DISPLAY   *P1:24,*EL,*B,"Invalid Starting Month - Hit <":
                           *V2LON,"ENTER",*HOFF,"> to continue";
          KEYIN     ANS;
          DISPLAY   *P1:24,*EL;
          GOTO      MNTH0000
.
.------ no period entered ------
.
MNTH9000  MOVE      TRUE,EXIT
.
MNTH9999  RETURN
+
.**************************************************************************
.*                              CONT0000                                  *
.*                         check if OK to Continue                        *
.*         1 = Yes                                                        *
.*         2 = No                                                         *
.*         3 = Cancel                                                     *
.**************************************************************************
CONT0000  MOVE      FALSE,EXIT
          CALL      CONTQST                    * see if O.K. to continue
          MOVE      ANS,EXIT
.
CONT9999  RETURN
+
.**************************************************************************
.*                               LODA0000                                 *
.*             Routine to load the first temp file with data              *
.*             for the first section of the report                        *
.**************************************************************************
LODA0000  MOVE      FALSE,FLAGTMP2     * Initialise the using temp file 2 flag
.
          CALL      PBOP0000           * Load patients at beginning of period
.
          CALL      BSOP0000           * Load bed days at start of the period
.
          CALL      ADDP0000           * Load admissions during period
.
          CALL      DSDP0000           * Load discharges during period
.
          CALL      DTDP0000           * Load deaths during period
.
          CALL      PEOP0000           * Load patients in at end of the period
.
          CALL      BEOP0000           * Load bed days at end of the period
.
          CALL      BEDP0000           * Load bed days during the period
.
          CALL      SADP0000           * Load same day patients
.
LODA9999  RETURN
+
.**************************************************************************
.*                               PRNA0000                                 *
.*             Routine to print the first section of the report           *
.**************************************************************************
PRNA0000  CLOCK     TIME,CTIMEIS
          MOVE      ZERO,CPAGENO
          MOVE      ZERO,CLNO
          MOVE      ONE,CNOUNDLN
          MOVE      SP20,CPHDROPT
          DISPLAY   *P1:24,*EL,*V2LON,*BLINKON,"Printing":
                           *HOFF," - Please Wait";
.
          CALL      HEDA0000           * Print the report header
.
          CALL      CLRT5000           * Clear the totals
.
          MOVE      SP4,KEY4
          MOVE      SP20,CURRDESC
          MOVE      FALSE,FLAGDATA
          CALL      RSTMPR1            * Position on the temp file
.
.------ read through the temp file ------
.
PRNA1000  CALL      RKTMPR1
          BRANCH    OVRCD,PRNA9000
.
          MOVE      ZERO,COUNT
.
.------ We don't want to print the current record if it is all zeros ------
.
PRNA1100  ADD       ONE,COUNT
.
          COMPARE   EIGHT,COUNT             * if count = 8 then the record has
          GOTO      PRNA1150 IF NOT EQUAL     zero as every field
.
          BRANCH    FLAGDATA,PRNA1450       * We still want to print the totals
.                                             if the previous record for this
.                                             category did have data in it
          GOTO      PRNA1000
.
.------ test each field of the current record for zero ------
.
PRNA1150  LOAD      FORM8,COUNT,TMPSTRTP,TMPSTRTB,TMPADMNS,TMPDSCHG,TMPENDP:
                                TMPENDB,TMPBEDDP
.
          COMPARE   ZERO,FORM8              * If field is zero, try next field
          GOTO      PRNA1100 IF EQUAL
.
          MATCH     SP20,CURRDESC           * If we have a new category then
          GOTO      PRNA1200 IF NOT EQUAL     we need to get the description
.
          MATCH     LITTLEZ,TMPCODE         * Test to see if we have the grand
          GOTO      PRNA1160 IF NOT EQUAL     totals record
.
          PRINT     *N,UNDLNN1,UNDLNN2;
          ADD       ONE,CLNO
          MOVE      "GRAND TOTALS",CURRDESC
.
          GOTO      PRNA1180
.
PRNA1160  MATCH     BIGZ,TMPCODE            * Test to see if we have the day 
          GOTO      PRNA1170 IF NOT EQUAL     case record
.
          MOVE      "DAY CASE PROCEDURES",CURRDESC
.
          GOTO      PRNA1180
.
.------ get the current category ------
.
PRNA1170  MOVE      "UNKNOWN CODE : ",CURRDESC
          ENDSET    CURRDESC
          APPEND    TMPCODE,CURRDESC
          RESET     CURRDESC
.
          MATCH     SP3,TMPCODE             * test code for spaces
          GOTO      PRNA1180 IF EQUAL
.
          PACK      KEY5,CODEA,TMPCODE
          CALL      RDCODE1                 * Read the patient codes file
          BRANCH    OVRCD,PRNA1180
.
          MOVE      TDESC,CURRDESC
.
.------ paginate if required ------
.
PRNA1180  COMPARE   "55",CLNO
          GOTO      PRNA1190 IF LESS
.
          PRINT     *N,UNDLNN1,UNDLNN2;
.
          CALL      HEDA0000                * Pagination required
.
.------ print the current description ------
.
PRNA1190  CALL      PDSC0000                * Print the description line
.
.------ print the current record ------
.
PRNA1200  REP       "A1C2",TMPTYPE
          MOVE      TMPTYPE,FORM1
          LOAD      CURRREC,FORM1,ADULT,CHILD
          PRINT     *N,*1,"|",*16,CURRREC,*24,"|",*29,TMPSTRTP,*38,"|":
                       *43,TMPSTRTB,*52,"|",*57,TMPADMNS,*66,"|",*71,TMPDSCHG:
                       *80,"|",*85,TMPENDP,*94,"|",*99,TMPENDB,*108,"|":
                       *112,TMPBEDDP,*122,"|";
          ADD       ONE,CLNO
.
          BRANCH    FORM1,PRNA1300,PRNA1400
.
.------ We have just printed an "Adult" record ------
.
PRNA1300  CALL      ADDT0000                * Add to the grand totals
.
          MOVE      TRUE,FLAGDATA      
          GOTO      PRNA1000
.
.------ We have just printed a "Child" record ------
.
PRNA1400  CALL      ADDT0000                * Add to the grand totals
.
.------ Print the totals for the current category ------
.
PRNA1450  MOVE      PTOTAL,CURRREC
          PRINT     *N,*1,"|",*16,CURRREC,*24,"|",*29,TOTAL1,*38,"|":
                       *43,TOTAL2,*52,"|",*57,TOTAL3,*66,"|",*71,TOTAL4:
                       *80,"|",*85,TOTAL5,*94,"|",*99,TOTAL6,*108,"|":
                       *112,TOTAL7,*122,"|":
                    *N,*1,"|",*24,"|",*38,"|",*52,"|",*66,"|",*80,"|":
                       *94,"|",*108,"|",*122,"|";
          ADD       TWO,CLNO
.
          MOVE      SP20,CURRDESC
          MOVE      FALSE,FLAGDATA
.
          CALL      CLRT5000                * Clear the totals
.
          GOTO      PRNA1000
.
.------ End of the first section of the report ------
.
PRNA9000  PRINT     *N,UNDLNN1,UNDLNN2:
                    *N;
          ADD       TWO,CLNO
.
PRNA9999  RETURN
+
.**************************************************************************
.*                               ADDT0000                                 *
.*              Add current record values to the grand totals             *
.**************************************************************************
ADDT0000  ADD       TMPSTRTP,TOTAL1
          ADD       TMPSTRTB,TOTAL2
          ADD       TMPADMNS,TOTAL3
          ADD       TMPDSCHG,TOTAL4
          ADD       TMPENDP,TOTAL5
          ADD       TMPENDB,TOTAL6
          ADD       TMPBEDDP,TOTAL7
.
ADDT9999  RETURN
+
.**************************************************************************
.*                               HEDA0000                                 *
.*                   Routine to print the report header                   *
.**************************************************************************
HEDA0000  CALL      HEAD132                 * Print the first 3 lines
.
          PRINT     *N,*40,"From Date : ",FROMDATE,*65,"To Date : ",TODATE:
                    *N,*N,UNDLNN1,UNDLNN2:
                    *N,*1,"|",*3,"Patient Category",*24,"|",*26,"In Patients":
                       *38,"|",*41,"In Patient",*52,"|",*55,"Admissions":
                       *66,"|",*69,"Discharges",*80,"|",*82,"In Patients":
                       *94,"|",*97,"In Patient",*108,"|",*111,"In Patient":
                       *122,"|":
                    *N,*1,"|",*24,"|",*26,"at Start of",*38,"|":
                       *40,"Bed Days at",*52,"|",*59,"During",*66,"|":
                       *73,"During",*80,"|",*84,"at End of",*94,"|":
                       *99,"Bed Days",*108,"|",*113,"Bed Days",*122,"|":
                    *N,*1,"|",*24,"|",*31,"Period",*38,"|":
                       *43,"Start of",*52,"|",*59,"Period",*66,"|":
                       *73,"Period",*80,"|",*87,"Period",*94,"|":
                       *98,"at End of",*108,"|",*115,"During",*122,"|":
                    *N,*1,"|",*24,"|",*38,"|",*45,"Period",*52,"|",*66,"|":
                       *80,"|",*94,"|",*101,"Period",*108,"|",*115,"Period":
                       *122,"|":
                    *N,UNDLNN1,UNDLNN2;
.
          MOVE      TEN1,CLNO
.
HEDA9999  RETURN
+
.**************************************************************************
.*                                CLRT0000                                *
.*                        Clear the total variables                       *
.**************************************************************************
CLRT0000  MOVE      ZERO,TMPSTRTP
          MOVE      ZERO,TMPSTRTB
          MOVE      ZERO,TMPADMNS
          MOVE      ZERO,TMPDSCHG
          MOVE      ZERO,TMPENDP
          MOVE      ZERO,TMPENDB
          MOVE      ZERO,TMPBEDDP
.
          GOTO      CLRT9999
.
CLRT5000  MOVE      ZERO,TOTAL1
          MOVE      ZERO,TOTAL2
          MOVE      ZERO,TOTAL3
          MOVE      ZERO,TOTAL4
          MOVE      ZERO,TOTAL5
          MOVE      ZERO,TOTAL6
          MOVE      ZERO,TOTAL7
          MOVE      ZERO,MALETOT1
          MOVE      ZERO,MALETOT2
          MOVE      ZERO,MALETOT3
          MOVE      ZERO,MALETOT4
          MOVE      ZERO,FEMTOT1
          MOVE      ZERO,FEMTOT2
          MOVE      ZERO,FEMTOT3
          MOVE      ZERO,FEMTOT4
          MOVE      ZERO,INDTTOT1
          MOVE      ZERO,INDTTOT2
          MOVE      ZERO,INDTTOT3
          MOVE      ZERO,INDTTOT4
          MOVE      ZERO,UNKNTOT1
          MOVE      ZERO,UNKNTOT2
          MOVE      ZERO,UNKNTOT3
          MOVE      ZERO,UNKNTOT4
.
CLRT9999  RETURN
+
.**************************************************************************
.*                                PDSC0000                                *
.*                 Print the description line of the report               *
.**************************************************************************
PDSC0000  PRINT     *N,*1,"|",*3,CURRDESC,*24,"|",*38,"|",*52,"|",*66,"|":
                       *80,"|",*94,"|",*108,"|",*122,"|";
          ADD       ONE,CLNO
.
PDSC9999  RETURN
+
.**************************************************************************
.*                                READ0000                                *
.*       read the patient discharge and admission statistics file         *
.*       and write to the relevant temp file                              *
.**************************************************************************
.
.------ position on patient discharge and admission statistics file ------
.
READ0000  PACK      KEY11,REFERENCE,STRTDATE,SP3
          CALL      RSPTDAS1
.
.------ read through the patient discharge and admission statistics file ------
.
READ1000  CALL      RKPTDAS1
          BRANCH    OVRCD,READ9999
.
          MATCH     PTDADATE,ENDDATE        * match periods
          GOTO      READ9999 IF LESS
.
          MATCH     REFERENCE,DPTDAREF      * match references
          GOTO      READ9999 IF NOT EQUAL
.
          MATCH     "13",REFERENCE          * check if doing same day patients
          GOTO      READ2000 IF EQUAL
.
          CALL      WRIT0000                * write to the temp file
.
          GOTO      READ1000
.
.------ we are doing same day patients ------
.
READ2000  CALL      WRDY0000                * write to the temp file for 
.                                             day cases
          GOTO      READ1000
.
READ9999  RETURN
+
.**************************************************************************
.*                                 WRIT0000                               *
.*              Routine to write to the first or second temp file         *
.**************************************************************************
WRIT0000  BRANCH    FLAGTMP2,WRIT5000       * branch if we are writing to the
.                                             second temp file
          PACK      KEY4,PTDACODE,ANSA
          CALL      RDTMPR1                 * read the first temp file
          BRANCH    OVRCD,WRIT1000
.
          LOAD      FORM8,VARNUM,TMPSTRTP,TMPSTRTB,TMPADMNS,TMPDSCHG,TMPENDP:
                                 TMPENDB,TMPBEDDP
          ADD       PTDAADLT,FORM8
          STORE     FORM8,VARNUM,TMPSTRTP,TMPSTRTB,TMPADMNS,TMPDSCHG,TMPENDP:
                                 TMPENDB,TMPBEDDP
.
          CALL      UPTMPR1                 * update the first temp file
.
          MOVE      ANSA,ANS
          MOVE      PTDAADLT,TEMPF8
.
          CALL      WRGN0000                * write to the grand total record
.
          GOTO      WRIT2000
.
.------ write a new record to the first temp file ------
.
WRIT1000  CALL      CLRT0000                * clear total variables
.
          MOVE      PTDAADLT,FORM8
          STORE     FORM8,VARNUM,TMPSTRTP,TMPSTRTB,TMPADMNS,TMPDSCHG,TMPENDP:
                                 TMPENDB,TMPBEDDP
.
          CALL      WRTMPR1                 * write to the first temp file
.
          MOVE      ANSA,ANS
          MOVE      PTDAADLT,TEMPF8
.
          CALL      WRGN0000                * write to the grand total record
.
.------ write the child record to the first temp file ------
.
WRIT2000  PACK      KEY4,PTDACODE,ANSC
          CALL      RDTMPR1                 * read the first temp file
          BRANCH    OVRCD,WRIT3000
.
          LOAD      FORM8,VARNUM,TMPSTRTP,TMPSTRTB,TMPADMNS,TMPDSCHG,TMPENDP:
                                 TMPENDB,TMPBEDDP
          ADD       PTDACHLD,FORM8
          STORE     FORM8,VARNUM,TMPSTRTP,TMPSTRTB,TMPADMNS,TMPDSCHG,TMPENDP:
                                 TMPENDB,TMPBEDDP
.
          CALL      UPTMPR1                 * update the first temp file
.
          MOVE      ANSC,ANS
          MOVE      PTDACHLD,TEMPF8
.
          CALL      WRGN0000                * write to the grand total record
.
          GOTO      WRIT9999
.
.------ write a new record to the temp file ------
.
WRIT3000  CALL      CLRT0000                * clear total variables
.
          MOVE      PTDACHLD,FORM8
          STORE     FORM8,VARNUM,TMPSTRTP,TMPSTRTB,TMPADMNS,TMPDSCHG,TMPENDP:
                                 TMPENDB,TMPBEDDP
.
          CALL      WRTMPR1                 * write to the first temp file
.
          MOVE      ANSC,ANS
          MOVE      PTDACHLD,TEMPF8
.
          CALL      WRGN0000                * write to the grand total record
.
          GOTO      WRIT9999
.
.------ write to the second temp file ------
.
WRIT5000  MOVE      PTDACODE,KEY3
.
          CALL      RDTMPR2                 * read the second temp file
          BRANCH    OVRCD,WRIT6000
.
          ADD       PTDAADLT,TMPDSNUM
          ADD       PTDACHLD,TMPDSNUM
.
          CALL      UPTMPR2                 * update the second temp file
.
          GOTO      WRIT9999
.
.------ write a new record to the second temp file ------
.
WRIT6000  MOVE      PTDAADLT,TMPDSNUM
          ADD       PTDACHLD,TMPDSNUM
.
          CALL      WRTMPR2                 * write to the second temp file
.
WRIT9999  RETURN
+
.**************************************************************************
.*                                WRGN0000                                *
.*                   Write to the grand total record                      *
.**************************************************************************
WRGN0000  PACK      KEY4,LITTLEZ,ANS
.
          CALL      RDTMPR1                 * read the first temp file
          BRANCH    OVRCD,WRGN1000
.
          LOAD      FORM8,VARNUM,TMPSTRTP,TMPSTRTB,TMPADMNS,TMPDSCHG,TMPENDP:
                                 TMPENDB,TMPBEDDP
          ADD       TEMPF8,FORM8
          STORE     FORM8,VARNUM,TMPSTRTP,TMPSTRTB,TMPADMNS,TMPDSCHG,TMPENDP:
                                 TMPENDB,TMPBEDDP
.
          CALL      UPTMPR1                 * update the first temp file
.
          GOTO      WRGN9999
.
.------ write a new record to the first temp file ------
.
WRGN1000  CALL      CLRT0000                * clear total variables
.
          STORE     TEMPF8,VARNUM,TMPSTRTP,TMPSTRTB,TMPADMNS,TMPDSCHG,TMPENDP:
                                 TMPENDB,TMPBEDDP
.
          CALL      WRTMPR1                 * Write to the first temp file
.
WRGN9999  RETURN
+
.**************************************************************************
.*                                 WRDY0000                               *
.*              Routine to write to the first temp file                   *
.*              for same day patients                                     *
.**************************************************************************
WRDY0000  PACK      KEY4,PTDACODE,ANSA
.
          CALL      RDTMPR1                 * read the first temp file
          BRANCH    OVRCD,WRDY2000
.
          COMPARE   TMPADMNS,PTDAADLT       * Check the number of admissons
          GOTO      WRDY0100 IF LESS        * to avoid -ve figure
          MOVE      ZERO,TMPADMNS
          GOTO      WRDY0200
.
WRDY0100  SUB       PTDAADLT,TMPADMNS
.
WRDY0200  COMPARE   TMPDSCHG,PTDAADLT       * Check the number of discharges
          GOTO      WRDY0300 IF LESS
          MOVE      ZERO,TMPDSCHG
          GOTO      WRDY0400
.
WRDY0300  SUB       PTDAADLT,TMPDSCHG
.
WRDY0400  COMPARE   TMPBEDDP,PTDAADLT       * Check the number of bed days
          GOTO      WRDY0500 IF LESS
          MOVE      ZERO,TMPBEDDP
          GOTO      WRDY0600
.
WRDY0500  SUB       PTDAADLT,TMPBEDDP
.
WRDY0600  CALL      UPTMPR1                 * update the first temp file
.
          MOVE      ANSA,ANS
          MOVE      PTDAADLT,FORM8
.
          CALL      GNDY0000                * write to the grand total record
.                                             for day cases
.------ process the child record for day cases ------
.
WRDY2000  PACK      KEY4,PTDACODE,ANSC
          CALL      RDTMPR1                 * read the first temp file
          BRANCH    OVRCD,WRDY9999
.
          COMPARE   TMPADMNS,PTDACHLD       * Check the number of admissons
          GOTO      WRDY2100 IF LESS
          MOVE      ZERO,TMPADMNS
          GOTO      WRDY2200
.
WRDY2100  SUB       PTDACHLD,TMPADMNS
.
WRDY2200  COMPARE   TMPDSCHG,PTDACHLD       * Check the number of discharges
          GOTO      WRDY2300 IF LESS
          MOVE      ZERO,TMPDSCHG
          GOTO      WRDY2400
.
WRDY2300  SUB       PTDACHLD,TMPDSCHG
.
WRDY2400  COMPARE   TMPBEDDP,PTDACHLD       * Check the number of bed days
          GOTO      WRDY2500 IF LESS
          MOVE      ZERO,TMPBEDDP
          GOTO      WRDY2600
.
WRDY2500  SUB       PTDACHLD,TMPBEDDP
.
WRDY2600  CALL      UPTMPR1                 * update the first temp file
.
          MOVE      ANSC,ANS
          MOVE      PTDACHLD,FORM8
.
          CALL      GNDY0000                * write to the grand total record
.                                             for day cases
WRDY9999  RETURN
+
.**************************************************************************
.*                                GNDY0000                                *
.*                   Write to the grand total record                      *
.*                   for day cases                                        *
.**************************************************************************
GNDY0000  PACK      KEY4,BIGZ,ANS
.
          CALL      RDTMPR1                 * read the first temp file
          BRANCH    OVRCD,GNDY1000
.
          ADD       FORM8,TMPADMNS
          ADD       FORM8,TMPDSCHG
          ADD       FORM8,TMPBEDDP
.
          CALL      UPTMPR1                 * update the first temp file
.
          GOTO      GNDY9999
.
.------ write a new record to the first temp file ------
.
GNDY1000  CALL      CLRT0000                * clear total variables
.
          MOVE      FORM8,TMPADMNS
          MOVE      FORM8,TMPDSCHG
          MOVE      FORM8,TMPBEDDP
.
          CALL      WRTMPR1                 * Write to the first temp file
.
GNDY9999  RETURN
+
.**************************************************************************
.*                                 PBOP0000                               *
.*              Load patients at the beginning of the period              *
.**************************************************************************
PBOP0000  MOVE      " 1",REFERENCE
          MOVE      ONE,VARNUM
          MOVE      ENDDATE,TEMPDATE
          MOVE      STRTDATE,ENDDATE
.
          CALL      READ0000                * read the patient discharge and 
.                                             admission statistics file
          MOVE      TEMPDATE,ENDDATE
.
PBOP9999  RETURN
+
.**************************************************************************
.*                                 BSOP0000                               *
.*                    Load bed days at the start of the period            *
.**************************************************************************
BSOP0000  MOVE      " 2",REFERENCE
          MOVE      TWO,VARNUM
          MOVE      ENDDATE,TEMPDATE
          MOVE      STRTDATE,ENDDATE
.
          CALL      READ0000                * read the patient discharge and 
.                                             admission statistics file
          MOVE      TEMPDATE,ENDDATE
.
BSOP9999  RETURN
+
.**************************************************************************
.*                                 ADDP0000                               *
.*                    Load admissions during the period                   *
.**************************************************************************
ADDP0000  MOVE      " 3",REFERENCE
          MOVE      THREE,VARNUM
.
          CALL      READ0000                * read the patient discharge and 
.                                             admission statistics file
ADDP9999  RETURN
+
.**************************************************************************
.*                                 DSDP0000                               *
.*                    Load discharges during the period                   *
.**************************************************************************
DSDP0000  MOVE      " 7",REFERENCE
          MOVE      FOUR,VARNUM
.
          CALL      READ0000                * read the patient discharge and 
.                                             admission statistics file
DSDP9999  RETURN
+
.**************************************************************************
.*                                 DTDP0000                               *
.*                    Load deaths during the period                       *
.**************************************************************************
DTDP0000  MOVE      " 8",REFERENCE
          MOVE      FOUR,VARNUM
.
          CALL      READ0000                * read the patient discharge and 
.                                             admission statistics file
.
DTDP9999  RETURN
+
.**************************************************************************
.*                                 PEOP0000                               *
.*         Load patients in hospital at the end of the period             *
.**************************************************************************
PEOP0000  MOVE      " 9",REFERENCE
          MOVE      FIVE,VARNUM
          MOVE      STRTDATE,TEMPDATE
          MOVE      ENDDATE,STRTDATE
.
          CALL      READ0000                * read the patient discharge and 
.                                             admission statistics file
          MOVE      TEMPDATE,STRTDATE
.
PEOP9999  RETURN
+
.**************************************************************************
.*                                 BEOP0000                               *
.*            Load the number of bed days at the end of the period        *
.**************************************************************************
BEOP0000  MOVE      "10",REFERENCE
          MOVE      SIX,VARNUM
          MOVE      STRTDATE,TEMPDATE
          MOVE      ENDDATE,STRTDATE
.
          CALL      READ0000                * read the patient discharge and 
.                                             admission statistics file
          MOVE      TEMPDATE,STRTDATE
.
BEOP9999  RETURN
+
.**************************************************************************
.*                                 BEDP0000                               *
.*              Load the number of bed days during the period             *
.**************************************************************************
BEDP0000  MOVE      "11",REFERENCE
          MOVE      SEVEN,VARNUM
.
          CALL      READ0000                * read the patient discharge and 
.                                             admission statistics file
BEDP9999  RETURN
+
.**************************************************************************
.*                                 SADP0000                               *
.*                       Load the same day patients                       *
.**************************************************************************
SADP0000  MOVE      "13",REFERENCE
.
          CALL      READ0000                * read the patient discharge and 
.                                             admission statistics file
SADP9999  RETURN
+
.**************************************************************************
.*                               LODB0000                                 *
.*             Routine to load the second temp file with data             *
.**************************************************************************
LODB0000  MOVE      TRUE,FLAGTMP2
.
          CALL      PDIS0000           * Load discharged patients
.
          CALL      PDED0000           * Load patient deaths
.
LODB9999  RETURN
+
.**************************************************************************
.*                                 PDIS0000                               *
.*                       Load the discharged patients                     *
.**************************************************************************
PDIS0000  MOVE      " 5",REFERENCE
.
          CALL      READ0000                * read the patient discharge and 
.                                             admission statistics file
PDIS9999  RETURN
+
.**************************************************************************
.*                                 PDED0000                               *
.*                       Load the deceased patients                       *
.**************************************************************************
PDED0000  MOVE      " 6",REFERENCE
.
          CALL      READ0000                * read the patient discharge and 
.                                             admission statistics file
PDED9999  RETURN
+
.**************************************************************************
.*                               PRNB0000                                 *
.*             Routine to print the second section of the report          *
.**************************************************************************
PRNB0000  COMPARE   "55",CLNO               * Test if paginating is required
          GOTO      PRNB0100 IF LESS
.
          CALL      HEDB0000                * Print page header
.
          GOTO      PRNB0200
.
PRNB0100  PRINT     *N,*N,UNDLNN3:
                    *N,*1,"|",*3,"Discharge Status",*25,"|",*30,"Total":
                       *37,"|":
                    *N,UNDLNN3;
          ADD       FOUR,CLNO
.
PRNB0200  MOVE      SP3,KEY3
.
          CALL      RSTMPR2                 * position on the second temp file
.
.------ read throught the second temp file ------
.
PRNB1000  CALL      RKTMPR2
          BRANCH    OVRCD,PRNB9000
.
          COMPARE   "60",CLNO               * paginate if required
          GOTO      PRNB1100 IF LESS
.
          PRINT     *N,UNDLNN3;
.
          CALL      HEDB0000                * Print the page header
.
.------ print the current record ------
.
PRNB1100  MOVE      SP20,TDESC
          PACK      KEY5,CODED,TMPDCODE
          CALL      RDCODE1                 * read the patient codes file
.
          PRINT     *N,*1,"|",*3,TDESC,*25,"|",*27,TMPDSNUM:
                       *37,"|";
          ADD       ONE,CLNO
.
          GOTO      PRNB1000
.
.------ we have reached the end of the second section of the report ------
.
PRNB9000  PRINT     *N,UNDLNN3;
          ADD       ONE,CLNO
.
          COMPARE   ONE,CMATRN          * We have finished if we are not
          GOTO      PRNB9999 IF EQUAL     running the maternity system
.
          PRINT     *N,*N,"*** End of Report ***";
.
PRNB9999  RETURN
+
.**************************************************************************
.*                                HEDB0000                                *
.*       Print the page header for the second section of the report       *
.**************************************************************************
HEDB0000  CALL      HEAD132                 * Print the first 3 lines
.
          PRINT     *N,*40,"From Date : ",FROMDATE,*65,"To Date :",TODATE:
                    *N,*N,UNDLNN3:
                    *N,*1,"|",*3,"Discharge Status",*25,"|",*30,"Total":
                       *37,"|":
                    *N,UNDLNN3;
          ADD       FIVE,CLNO
.
HEDB9999  RETURN
+
.**************************************************************************
.*                               PRND0000                                 *
.*             Routine to print the fourth section of the report          *
.**************************************************************************
PRND0000  COMPARE   "55",CLNO
          GOTO      PRND1000 IF LESS
.
          CALL      HEAD132                 * Print a new page header
.
          PRINT     *N,*40,"From Date : ",FROMDATE,*65,"To Date : ",TODATE;
          ADD       ONE,CLNO
.
PRND1000  CALL      CLRT5000                * Clear the total variables
.
          PRINT     *N,*N,*N,*1,"NEWBORN DETAILS":
                    *N,UNDLNN4:
                    *N,*1,"|",*3,"Sex",*12,"|",*14,"Number At",*25,"|":
                       *30,"Born",*38,"|",*40,"Discharged",*51,"|":
                       *54,"Number In",*69,"|":
                    *N,*1,"|",*12,"|",*15,"Start Of",*25,"|",*38,"|",*51,"|":
                       *53,"Hospital At End",*69,"|":
                    *N,*1,"|",*12,"|",*15,"Period",*25,"|",*38,"|",*51,"|":
                       *54,"Of Period",*69,"|":
                    *N,UNDLNN4:
                    *N,*1,"|",*12,"|",*25,"|",*38,"|",*51,"|",*69,"|";
.
          MOVE      "18",REFERENCE
          MOVE      ONE,VARNUM
.
          CALL      RMAT0000                * read the patient discharge and 
.                                             admission statistics file for
.                                             maternity 
          MOVE      "19",REFERENCE
          MOVE      TWO,VARNUM
.
          CALL      RMAT0000                * read the patient discharge and 
.                                             admission statistics file for
.                                             maternity 
          MOVE      "20",REFERENCE
          MOVE      THREE,VARNUM
.
          CALL      RMAT0000                * read the patient discharge and 
.                                             admission statistics file for
.                                             maternity 
          MOVE      "21",REFERENCE
          MOVE      FOUR,VARNUM
.
          CALL      RMAT0000                * read the patient discharge and 
.                                             admission statistics file for
.                                             maternity 
          MOVE      MALETOT1,TOTAL1         
          MOVE      MALETOT2,TOTAL2         
          MOVE      MALETOT3,TOTAL3         
          MOVE      MALETOT4,TOTAL4         
          ADD       FEMTOT1,TOTAL1         
          ADD       FEMTOT2,TOTAL2         
          ADD       FEMTOT3,TOTAL3         
          ADD       FEMTOT4,TOTAL4         
          ADD       INDTTOT1,TOTAL1
          ADD       INDTTOT2,TOTAL2
          ADD       INDTTOT3,TOTAL3
          ADD       INDTTOT4,TOTAL4
          ADD       UNKNTOT1,TOTAL1
          ADD       UNKNTOT2,TOTAL2
          ADD       UNKNTOT3,TOTAL3
          ADD       UNKNTOT4,TOTAL4
.
          PRINT     *N,*1,"|",*3,"MALE",*12,"|",*14,MALETOT1,*25,"|":
                       *28,MALETOT2,*38,"|",*41,MALETOT3,*51,"|",*56,MALETOT4:
                       *69,"|":
                    *N,*1,"|",*3,"FEMALE",*12,"|",*14,FEMTOT1,*25,"|":
                       *28,FEMTOT2,*38,"|",*41,FEMTOT3,*51,"|",*56,FEMTOT4:
                       *69,"|":
                    *N,*1,"|",*3,"INDETER",*12,"|",*14,INDTTOT1,*25,"|":
                       *28,INDTTOT2,*38,"|",*41,INDTTOT3,*51,"|",*56,INDTTOT4:
                       *69,"|":
                    *N,*1,"|",*3,"UNKNOWN",*12,"|",*14,UNKNTOT1,*25,"|":
                       *28,UNKNTOT2,*38,"|",*41,UNKNTOT3,*51,"|",*56,UNKNTOT4:
                       *69,"|":
                    *N,UNDLNN4:
                    *N,*1,"|",*12,"|",*25,"|",*38,"|",*51,"|",*69,"|":
                    *N,*1,"|",*3,"TOTAL",*12,"|",*14,TOTAL1,*25,"|":
                       *28,TOTAL2,*38,"|",*41,TOTAL3,*51,"|",*56,TOTAL4:
                       *69,"|":
                    *N,UNDLNN4:
                    *N,*N,"*** End of Report ***";
.
PRND9999  RETURN
+
.**************************************************************************
.*                                RMAT0000                                *
.*       read the patient discharge and admission statistics file         *
.*       for the maternity system                                         *
.**************************************************************************
.
.------ position on patient discharge and admission statistics file ------
.
RMAT0000  PACK      KEY11,REFERENCE,STRTDATE,SP3
          CALL      RSPTDAS1
.
.------ read through the patient discharge and admission statistics file ------
.
RMAT1000  CALL      RKPTDAS1
          BRANCH    OVRCD,RMAT9999
.
          MATCH     PTDADATE,ENDDATE        * match periods
          GOTO      RMAT9999 IF LESS
.
          MATCH     REFERENCE,DPTDAREF      * match references
          GOTO      RMAT9999 IF NOT EQUAL
.
          MATCH     "M  ",PTDACODE          * test if we have the "Male" record
          GOTO      RMAT1300 IF NOT EQUAL
.
          LOAD      FORM8,VARNUM,MALETOT1,MALETOT2,MALETOT3,MALETOT4
          ADD       PTDAMALE,FORM8
          STORE     FORM8,VARNUM,MALETOT1,MALETOT2,MALETOT3,MALETOT4
          GOTO      RMAT1000
.
.------ processing an "Female" record ? ------
.
RMAT1300  MATCH     "F  ",PTDACODE
          GOTO      RMAT1400 IF NOT EQUAL
. 
          LOAD      FORM8,VARNUM,FEMTOT1,FEMTOT2,FEMTOT3,FEMTOT4
          ADD       PTDAFEML,FORM8
          STORE     FORM8,VARNUM,FEMTOT1,FEMTOT2,FEMTOT3,FEMTOT4
          GOTO      RMAT1000
.
.------ processing an "Indeterminate" record ? ------
.
RMAT1400  MATCH     "I  ",PTDACODE
          GOTO      RMAT1500 IF NOT EQUAL
. 
          LOAD      FORM8,VARNUM,INDTTOT1,INDTTOT2,INDTTOT3,INDTTOT4
          ADD       PTDAINDT,FORM8
          STORE     FORM8,VARNUM,INDTTOT1,INDTTOT2,INDTTOT3,INDTTOT4
          GOTO      RMAT1000
.
.------ processing an "Unknown" record ------
.
RMAT1500  LOAD      FORM8,VARNUM,UNKNTOT1,UNKNTOT2,UNKNTOT3,UNKNTOT4
          ADD       PTDAUNKN,FORM8
          STORE     FORM8,VARNUM,UNKNTOT1,UNKNTOT2,UNKNTOT3,UNKNTOT4
          GOTO      RMAT1000
.
RMAT9999  RETURN
+
.
.------ I/O Routines for temp files ------
.
RATMPR1   MOVE      ZERO,OVRCD
          RESET     KEY4
          READ      PATTM1XX,KEY4;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY4
          READ      PATTM1XX,KEY4;;
          RETURN
.
RDTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY4
          READ      PATTM1XX,KEY4;TMPCODE,TMPTYPE,TMPSTRTP,TMPSTRTB,TMPADMNS:
                                  TMPDSCHG,TMPENDP,TMPENDB,TMPBEDDP
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY4
          READKS    PATTM1XX;TMPCODE,TMPTYPE,TMPSTRTP,TMPSTRTB,TMPADMNS:
                             TMPDSCHG,TMPENDP,TMPENDB,TMPBEDDP
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY4
          READKP    PATTM1XX;TMPCODE,TMPTYPE,TMPSTRTP,TMPSTRTB,TMPADMNS:
                             TMPDSCHG,TMPENDP,TMPENDB,TMPBEDDP
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY4
          WRITE     PATTM1XX,KEY4;KEY4,TMPSTRTP,TMPSTRTB,TMPADMNS:
                                  TMPDSCHG,TMPENDP,TMPENDB,TMPBEDDP
          RETURN
.
UPTMPR1   UPDATE    PATTM1XX;TMPCODE,TMPTYPE,TMPSTRTP,TMPSTRTB,TMPADMNS:
                             TMPDSCHG,TMPENDP,TMPENDB,TMPBEDDP
          RETURN
.
DETMPR1   RESET     KEY4
          DELETE    PATTM1XX,KEY4
          RETURN
.
RATMPR2   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      PATTM2XX,KEY3;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      PATTM2XX,KEY3;;
          RETURN
.
RDTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      PATTM2XX,KEY3;TMPDCODE,TMPDSNUM
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY3
          READKS    PATTM2XX;TMPDCODE,TMPDSNUM
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY3
          READKP    PATTM2XX;TMPDCODE,TMPDSNUM
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY3
          WRITE     PATTM2XX,KEY3;KEY3,TMPDSNUM
          RETURN
.
UPTMPR2   UPDATE    PATTM2XX;TMPDCODE,TMPDSNUM
          RETURN
.
DETMPR2   RESET     KEY3
          DELETE    PATTM2XX,KEY3
          RETURN
....
.******************************************************************************
.                   PARTC000
.         Procedure to produce part C of the report
.         Inpatient Throughput by Patient Category
.******************************************************************************
          DEFPROC   PARTC000
.
          INC       IBAKEYS/INC             * keys
          INC       PATCODFD/INC            * codes file
          INC       PATDAYFD/INC            * day file
          INC       PATDSCFD/INC            * discharge file
          INC       PATMI1FD/INC            * admission file
          INC       PMSVX1FD/INC            * admission file
          INC       PATTRNFD/INC            * transfer file
          INC       HL7BMTFD/INC
.
.         temp file definition
.
TEMPC     IFILE    SQL, FIXED=48, KEY="U1-1"
KEYC      INIT     " 48 U1-1"
.Name     Type     Length  Phys.  Start  Description
.-------  ----     ------  -----  -----  ------------------------------------
TCROWTYP  DIM      1          1       1  Report Line Type
.                                          1 = Inpatients at start of qtr.
.                                          2 = Admissions during qtr.
.                                          3 = Reclassifications during qtr.
.                                          4 = Disc/Tran/Died during qtr.
.                                          5 = Inpatients at end of qtr.
.                                          6 = Total IP Bed Days in qtr.
TCPRVDO   FORM      8         5       2  Private               - Day Only
TCPRVOA   FORM      8         5       7                        - Other Acute
TCPRVNHT  FORM      8         5      12                        - NHT
TCDVADO   FORM      8         5      17  Dept. Veteran Affairs - Day only
TCDVAOA   FORM      8         5      22                        - Other Acute
TCDVANHT  FORM      8         5      27                        - NHT
TCCMPDO   FORM      8         5      32  Compensable           - Day only
TCCMPOA   FORM      8         5      37                        - Other Acute
TCTOTAL   FORM      10        6      42  Total for Row
.End of Record                       48
.
TEMPD     IFILE    SQL, FIXED=9, KEY="U1-8"
KEYD      INIT     " 9 U1-8"
.Name     Type     Length  Phys.  Start  Description
.-------  ----     ------  -----  -----  ------------------------------------
TDADMN    DIM      8          8       1  Admission Number
.End of Record                        9
.
.         procedure variables
.
ADDAMNT   FORM      5         * amount to add to current temp. file value
CALCDTFR  DIM       8         * from date for calculation
CALCDTTO  DIM       8         * to   date for calculation
CFNAMEC   DIM       8         * temp file C name
CFNAMED   DIM       8         * temp file D name
INVALID   FORM      1         * 1=day case patient
DAYS      FORM      4         * days b/w two dates
.ENDATE8   DIM       8         * end   date ccyymmdd
ENDCENT   FORM      2         * ending   date century
ENDDAY    FORM      3         * ending   date days
ENDLEAP   FORM      1         * ending   date leap year
ENDYR     FORM      3         * ending   date year
MNTHSTOP  DIM       4         * ending   month of quarter mmdd
MNTHSTRT  DIM       4         * starting month of quarter mmdd
NHTIN     FORM      2         * 1 if transferred to : -1 if transferred from
OAIN      FORM      2         * 1 if transferred to : -1 if transferred from
PRLINA    DIM       21        * line heading to print
PRLINB    DIM       21        * line heading to print
REPCOLA   FORM      2         * initial report column 0=priv 3=DVA
REPCOLB   FORM      2         * report column to update
SAVOVRCD  FORM      1         * save overcond value
.STDATE8   DIM       8         * start date yymmdd
STRTCENT  FORM      2         * starting date century
STRTDAY   FORM      3         * starting date days
STRTLEAP  FORM      1         * starting date leap year
STRTYR    FORM      3         * starting date year
YEARSTOP  DIM       4         * ending   year  of quarter ccyy
YEARSTRT  DIM       4         * starting year  of quarter ccyy
.
.         procedure constants
.
CATA      INIT      "A "
CATCL     INIT      "CL"
ISBUILD   INIT      "isbuild "
ISERASE   INIT      "iserase "
LNTLEA1   INIT      "Inpatients at        "
LNTLEA2   INIT      "Start of Period      "
LNTLEB1   INIT      "Admissions during    "
LNTLEB2   INIT      "Period               "
LNTLEC1   INIT      "Reclassifications    "
LNTLEC2   INIT      "during Period        "
LNTLED1   INIT      "Inpatients Discharged"
LNTLED2   INIT      "during Period        "
LNTLEE1   INIT      "Inpatients at end of "
LNTLEE2   INIT      "Period               "
LNTLEF1   INIT      "Total inpatient bed  "
LNTLEF2   INIT      "days in Period       "
PRFIXC    INIT      "pms17c"
PRFIXD    INIT      "pms17d"
Z30       INIT      "zzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
.
.*********************************************************************
.         Loop over required files and Produce the Report
.*********************************************************************
PRNC0000  CALL      CTPC0000                * create temp file, open other files
          CALL      PDAY0000                * processing the day file
          CALL      PROC0000                * loop through the tempfile
.
          CALL      REPC0000                * produce the report
          CALL      DTPC0000                * delete temp files
          GOTO      PRNC9999
+
.
.*********************************************************************
.                   PDAY0000                                         *
.         Process PATDAYFD data                                      *
.*********************************************************************
PDAY0000  DISPLAY   *P1:24,*EL,*P20:24,"Admission No :",*P50:24,"Scanning : ";
          UNPACK    STDATE8,YEARSTRT,MNTHSTRT    * get start month and year
          UNPACK    ENDATE8,YEARSTOP,MNTHSTOP    * set end date values
.
PDAY1000  CLOSE     PATDAYA1
          PACK      CFNAME,FILDAYA1,YEARSTRT
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PATDAYA1,CFNAME         * open file
          TRAPCLR   IO                      * clear the trap
          BRANCH    OVRCD,CLNA9999          * no file so exit
.
          PACK      KEY12,MNTHSTRT,SP8
          CALL      RSPTDAY1
PDAY2000  CALL      RKPTDAY1
          BRANCH    OVRCD,PDAY5000
.
.         Display day and month that is being processed
.
          UNPACK    PTDYDATE,XMON,XDAY
          DISPLAY   *P1:24,XDAY,SLASH,XMON
          DISPLAY   *P61:24,*EL,PTDYADMN
.
          MATCH     YEARSTOP,YEARSTRT
          GOTO      PDAY3000 IF NOT EQUAL
.
          MATCH     PTDYDATE,MNTHSTOP
          GOTO      PDAY9999 IF LESS
.
.         Only need to write to the temporary file if the admission
.         number is not already there
.
PDAY3000  MOVE      PTDYADMN,KEY8
          READ      TEMPD,KEY8;TDADMN
          GOTO      PDAY2000 IF NOT OVER    * already on file
.
          DISPLAY   *P35:24,*V2LON,PTDYADMN
.
          MOVE      PTDYADMN,TDADMN
          WRITE     TEMPD,KEY8;TDADMN
.
          GOTO      PDAY2000
.
PDAY5000  MATCH     YEARSTOP,YEARSTRT
          GOTO      PDAY9999 IF NOT LESS
.
          MOVE      YEARSTRT,FORM4
          ADD       ONE,FORM4
          MOVE      FORM4,YEARSTRT
          REP       " 0",YEARSTRT
          MOVE      "0101",MNTHSTRT
          GOTO      PDAY1000
.
PDAY9999  RETURN
.
.*********************************************************************
.                PROC0000
.         Processing each admissions
.*********************************************************************
.
PROC0000  DISPLAY   *P1:24,*EL,"Processing Admission No.:";
.
          UNPACK    STDATE8,STDATE8
          CALL      CALT000                 * Calculate Endate + 1
          MOVE      SP10,KEY8
          CALL      RSTEMPD
PROC1000  CALL      RKTEMPD
          BRANCH    OVRCD,PROC9999
.
          MOVE      TDADMN,AADMNO
          MOVE      AADMNO,KEY8
          CALL      RDMISS1
          BRANCH    OVRCD,PROC1000
.
          COMPARE   THREE,ASTAT           * Check if patient discharged
          GOTO      PROC2000 IF NOT EQUAL
.
.         Check if patient on the discharge file
.
          MOVE      AADMNO,KEY8
          CALL      RDDSCH1
          BRANCH    OVRCD,PROC1000
.
PROC2000  CALL      CLNA0000      * Calculate the statistics
          GOTO      PROC1000
.
PROC9999  RETURN
.
.*********************************************************************
.                   CALT000
.         End date plus one
.*********************************************************************
.
CALT000   MOVE      SP10,TTODATE
          UNPACK    ENDATE8,XCENT,XYEAR,XMON,XDAY
          MATCH     DIM6,TODAY
.
.         If current period, do not add one to ttodate
.
          IF        @EQUAL
            PACK      TTODATE,XCENT,XYEAR,XMON,XDAY
          ELSE
            MOVE      XCENT,CC
            MOVE      XYEAR,YY
            MOVE      XMON,MM
            MOVE      XDAY,DD
            CALL      DMYCON
.
            ADD       ONE,JULDAY
            MOVE      JULDAY,JWKDAY
            MOVE      JULYR,JWKYER
            MOVE      JULCC,JWKCC
            CALL      JULCON
            PACK      TTODATE,CC,YY,MM,DD
          ENDIF
          REP       " 0",TTODATE
CALT999   RETURN
+
.*********************************************************************
.                   CLNA0000                    Called by : PRNC0000
.         Calculate Number of Inpatients at START of Period 
.         Calculate Number of Admissions during Period 
.         Calculate Number of Discharges during Period 
.*********************************************************************
.
CLNA0000  DISPLAY   *P30:24,*EL,*V2LON,TDADMN
.
.         Calculate Number of Discharges during Period 
.
          COMPARE   THREE,ASTAT
          GOTO      CLNA0300 IF NOT EQUAL
.
          MATCH     STDATE8,DDATE
          GOTO      CLNA9999 IF LESS
.
          MATCH     DDATE,ENDATE8
          GOTO      CLNA0300 IF LESS
.
.         get the admission type when discharged
.
          PACK      KEY30,AADMNO,Z30
          CALL      RDSTRAN2
          CALL      RDPTRAN2
          BRANCH    OVRCD,CLNA0300          * end of file
          MATCH     AADMNO,TADMN
          GOTO      CLNA0300 IF NOT EQUAL   * different patient
          MATCH     ANSD,TMOVE
          GOTO      CLNA0300 IF NOT EQUAL   * invalid transfer file
          MOVE      TATYPE,ATYPE            * set admission type
.
          MOVE      DADMNO,AADMNO           * set admission number
          CALL      GCLC0000                * get column
          MOVE      FOUR,TCROWTYP           * set line type
          MOVE      ONE,ADDAMNT             * set add amount
          CALL      MTPC0000                * modify temp file C
.
.         Calculate Number of Inpatients at START of Period 
.
CLNA0300  MATCH     ADATE,STDATE8
          GOTO      CLNA2000 IF LESS
.
          PACK      KEY30,AADMNO,STDATE8,Z30
          CALL      RDSTRAN2
          CALL      RDPTRAN2
          BRANCH    OVRCD,CLNA2000
.
          MATCH     AADMNO,TADMN
          GOTO      CLNA2000 IF NOT EQUAL
.
          MATCH     TDATE,STDATE8
          GOTO      CLNA0500 IF EQUAL
          GOTO      CLNA1000
.
CLNA0500  PACK      KEY30,AADMNO,STDATE8,SP20
          CALL      RDSTRAN2
          CALL      RDKTRAN2
          BRANCH    OVRCD,CLNA2000
.
          MATCH     TADMN,AADMNO
          GOTO      CLNA2000 IF NOT EQUAL
.
          MATCH     ANSA,TMOVE
          GOTO      CLNA2000 IF EQUAL       * Current admission record
.
CLNA1000  MOVE      TATYPE,ATYPE            * set admission type
          CALL      GCLC0000                * get the column
          MOVE      ONE,TCROWTYP            * set line type
          MOVE      ONE,ADDAMNT             * set add amount
.
          CALL      MTPC0000                * modify temp file C
          CALL      PTRN0000                * loop over transfer file
          GOTO      CLNA3000
.
.         Calculate Number of Admissions during Period 
.
CLNA2000  MATCH     ADATE,ENDATE8
          GOTO      CLNA3000 IF LESS
.
.         get the admission type on admission
.
          MATCH     ADATE,DDATE             * daycase patients ?
          GOTO      CLNA2100 IF NOT EQUAL
.
          PACK      KEY30,AADMNO,Z30
          CALL      RDSTRAN2
          CALL      RDPTRAN2
          GOTO      CLNA2200
.
CLNA2100  PACK      KEY30,AADMNO,SP20
          CALL      RDSTRAN2
          CALL      RDKTRAN2
CLNA2200  BRANCH    OVRCD,CLNA9999
.
          MATCH     TADMN,AADMNO
          GOTO      CLNA9999 IF NOT EQUAL
.
          MOVE      TATYPE,ATYPE            * set admission type
.
          CALL      GCLC0000                * get the column
          MOVE      TWO,TCROWTYP            * set line type
          MOVE      ONE,ADDAMNT             * set add amount
          CALL      MTPC0000                * modify temp file C
          CALL      PTRN0000                * loop over transfer file
.
.         Calculate Number of Inpatients at END of Period 
.
CLNA3000  COMPARE   THREE,ASTAT
          GOTO      CLNA3300 IF NOT EQUAL
.
          MATCH     TTODATE,DDATE
          GOTO      CLNA9999 IF LESS
.
CLNA3300  PACK      KEY30,AADMNO,ENDATE8,Z30
          CALL      RDSTRAN2
          CALL      RDPTRAN2
          BRANCH    OVRCD,CLNA9999
.
          MATCH     TADMN,AADMNO
          GOTO      CLNA9999 IF NOT EQUAL
.
          MOVE      TATYPE,ATYPE
          CALL      GCLC0000                * get column
          MOVE      FIVE,TCROWTYP           * set line type
          MOVE      ONE,ADDAMNT             * set add amount
          CALL      MTPC0000                * modify temp file C
.
CLNA9999  RETURN
+
.*********************************************************************
.                   REPC0000                    Called by : PRNC0000
.         produce the report from temp file C
.*********************************************************************
REPC0000  CALL      IBACLOCK
          MOVE      "70",CLNO
          MOVE      SP1,KEY1
          CALL      RSTEMPC
.
REPC1000  CALL      RKTEMPC
          BRANCH    OVRCD,REPC9999          * end of temp file
.
          CALL      PLNC0000                * print line of report
          GOTO      REPC1000
.
REPC9999  RETURN
+
.*********************************************************************
.                   MTPC0000                    Called by : CLNx0000
.         maintain temp file C
.         Para's  : TCROWTYP      the row type
.                   ADDAMNT       the amount to add to the current value
.                   REPCOLB       which column to update
.*********************************************************************
MTPC0000  CALL      CLTC0000                * clear temp file C values
          MOVE      TCROWTYP,KEY1           * set line type
          CALL      RDTEMPC
          MOVE      OVRCD,SAVOVRCD          * save ovrcd value
.
          LOAD      FORM8,REPCOLB,TCPRVDO,TCPRVOA,TCPRVNHT,TCDVADO,TCDVAOA:
                                  TCDVANHT,TCCMPDO,TCCMPOA
          ADD       ADDAMNT,FORM8           * add to desired column
          STORE     FORM8,REPCOLB,TCPRVDO,TCPRVOA,TCPRVNHT,TCDVADO,TCDVAOA:
                                  TCDVANHT,TCCMPDO,TCCMPOA
          ADD       ADDAMNT,TCTOTAL         * add to total
.
          BRANCH    SAVOVRCD,MTPC1000       * write value
.
          CALL      UPTEMPC
          GOTO      MTPC9999
.
MTPC1000  CALL      WRTEMPC
.
MTPC9999  RETURN
+
.*********************************************************************
.                   PTRN0000                    Called by : xxxx0000
.         process the transfer file for a given patient
.         (assumes patient is admitted before end date of quarter)
.         Para's  : AADMNO        admission number
.*********************************************************************
PTRN0000  MOVE      ONE,INVALID             * set as no tran records
          MOVE      STDATE8,CALCDTFR        * set calc from date
          MOVE      ENDATE8,CALCDTTO        * set calc to   date
          PACK      KEY30,AADMNO,SP30
          CALL      RDSTRAN2
.
PTRN1000  CALL      RDKTRAN2
          BRANCH    OVRCD,PTRN9000          * end of file
.
          MATCH     AADMNO,TADMN
          GOTO      PTRN9000 IF NOT EQUAL   * different patient
.
          MATCH     TDATE,ENDATE8
          GOTO      PTRN9000 IF LESS        * transfer date is too late
.
          MOVE      TADMN,STADMN            * save admission number
          MOVE      TMOVE,STMOVE            * save movement type
          MOVE      ZERO,INVALID            * set as valid patient
.
.         determine the type of movement record
.
          MATCH     ANSA,TMOVE
          GOTO      PTRN2000 IF EQUAL       * admission record
          MATCH     ANSC,TMOVE
          GOTO      PTRN3000 IF EQUAL       * change record
          MATCH     ANSL,TMOVE
          GOTO      PTRN4000 IF EQUAL       * leave record
          MATCH     ANSR,TMOVE
          GOTO      PTRN5000 IF EQUAL       * return record
          MATCH     ANSD,TMOVE
          GOTO      PTRN6000 IF EQUAL       * discharge record
          GOTO      PTRN1000
.
.         (A)dmission record
.
PTRN2000  MOVE      TATYPE,STATYPE          * save admission type
          MATCH     TDATE,STDATE8
          GOTO      PTRN1000 IF NOT LESS    * admission date is before start dte
.
          MOVE      TDATE,CALCDTFR          * set from date for calculation
          GOTO      PTRN1000
.
.         (C)hange record
.
PTRN3000  MATCH     TDATE,STDATE8
          GOTO      PTRN3100 IF NOT LESS    * date is before start date
.
          CALL      RECL0000                * see if a reclassification
.
PTRN3100  MOVE      TATYPE,STATYPE          * set actual admission type
          GOTO      PTRN1000
.
.         (L)eave record
.
PTRN4000  MATCH     TDATE,STDATE8
          GOTO      PTRN4100 IF NOT LESS    * date is before start date
.
          CALL      ROSD0000                * see if left/returned on same day
          BRANCH    EXIT,PTRN1000           * returned on same day
.
          MOVE      TDATE,CALCDTTO          * set end date
          CALL      CDAY0000                * get number of days
          MOVE      TADMN,AADMNO            * set admission number
          CALL      GCLC0000                * get the column
          MOVE      SIX,TCROWTYP            * set the row type
          MOVE      DAYS,ADDAMNT            * set add amount
          CALL      MTPC0000                * update temp file
.
.         patient is on leave before start date so actually not
.         accruing bed days
.
PTRN4100  MOVE      ENDATE8,CALCDTFR        * set FROM & TO dates the same
          MOVE      ENDATE8,CALCDTTO        * incase not returned from leave
          MOVE      ONE,INVALID             * set as invalid from now
          GOTO      PTRN1000
.
.         (R)eturn record
.
PTRN5000  MATCH     TDATE,STDATE8
          GOTO      PTRN5100 IF NOT LESS    * date is before start date
.
          CALL      LOSD0000                * see if left/returned on same day
          BRANCH    EXIT,PTRN1000           * on leave the same day
.
          MOVE      TDATE,CALCDTFR          * set from date
          CALL      RECL0000                * see if also reclassified
          MOVE      TATYPE,STATYPE          * set admission type
          MOVE      TDATE,CALCDTFR          * set FROM date
          MOVE      ENDATE8,CALCDTTO        * set TO   date
          GOTO      PTRN1000
.
.         returned before start date so reset the dates
.
PTRN5100  MOVE      STDATE8,CALCDTFR        * set start date
          MOVE      ENDATE8,CALCDTTO        * set end   date
          MOVE      ZERO,INVALID            * set as valid
          GOTO      PTRN1000
.
.         (D)ischarge record
.
PTRN6000  MATCH     TDATE,STDATE8
          GOTO      PTRN7000 IF EQUAL
          GOTO      PTRN9999 IF NOT LESS    * date is before start date
          GOTO      PTRN8000
.
.         Make sure we've got day case patients at the start of the period
.
PTRN7000  MATCH     ADATE,DDATE             * Day case patient ?
          GOTO      PTRN9999 IF NOT EQUAL   * No.
.
PTRN8000  MOVE      ZERO,INVALID            * set as valid patient
          MOVE      TDATE,CALCDTTO          * set end date
.
.         Finished for the patient
.
PTRN9000  BRANCH    INVALID,PTRN9999        * no days to add for patient
.
          CALL      CDAY0000                * calculate the number of days
          MOVE      STADMN,AADMNO           * set admission number
          MOVE      STATYPE,ATYPE           * set admission type
          CALL      GCLC0000                * get the column for report
          MOVE      SIX,TCROWTYP            * set the row type
          MOVE      DAYS,ADDAMNT            * set days
          CALL      MTPC0000                * update temp file
.
PTRN9999  RETURN
+
.*********************************************************************
.                   GCLC0000                    Called by : MTPC0000
.         get the column for OPTION C
.         Para's  : AADMNO        admission number
.                   ACLAIM        claim code
.                   ATYPE         admission type
.         Returns : REPCOLB       which column to update for report
.*********************************************************************
GCLC0000  MOVE      SP8,DDATE
          MOVE      AADMNO,KEY8
          CALL      RDDSCH1
.
          PACK      KEY5,CATCL,ACLAIM
          CALL      RDCODE1
          BRANCH    OVRCD,GCLC9900          * invalid claim code
.
. ******* determine which patient category *******
.
          MATCH     "V",TCINDC1
          GOTO      GCLC2000 IF EQUAL       * veteran affairs
.
          MATCH     "W",TCINDC1
          GOTO      GCLC3000 IF EQUAL       * compensable (workcare)
.
          MATCH     "M",TCINDC1
          GOTO      GCLC3000 IF EQUAL       * compensable (TAC)
.
          MOVE      ZERO,REPCOLA            * PRIVATE PATIENT
          MOVE      ZERO,REPCOLB            * PRIVATE PATIENT
          GOTO      GCLC5000
.
GCLC2000  MOVE      THREE,REPCOLA           * VETERANS AFFAIRS PATIENT
          MOVE      THREE,REPCOLB           * VETERANS AFFAIRS PATIENT
          GOTO      GCLC5000
.
GCLC3000  MOVE      SIX,REPCOLB             * COMPENSABLE PATIENT
.
. ******* now determine the sub-type to get the correct column *******
.
GCLC5000  MATCH     ADATE,DDATE
          GOTO      GCLC6000 IF EQUAL       * day case patient
.
          PACK      KEY5,CATA,ATYPE
          CALL      RDCODE1
          BRANCH    OVRCD,GCLC9900          * invalid admission type
.
          MATCH     ANSN,TCINDC2
          GOTO      GCLC7000 IF EQUAL       * NHT patient
.
          ADD       TWO,REPCOLB             * OTHER ACUTE PATIENT
          GOTO      GCLC9999
.
GCLC6000  ADD       ONE,REPCOLB             * DAY CASE PATIENT
          GOTO      GCLC9999
.
GCLC7000  ADD       THREE,REPCOLB           * NHT PATIENT
          GOTO      GCLC9999
.
GCLC9900  MOVE      ZERO,REPCOLA            * default to PRIVATE-Other Acute
          MOVE      TWO,REPCOLB             * default to PRIVATE-Other Acute
.
GCLC9999  RETURN
+
.*********************************************************************
.                   RECL0000                    Called by : PTRN0000
.         see if this is a re-classification
.         Para's  : TATYPE        new admission type
.                   STATYPE       old admission type
.*********************************************************************
RECL0000  MATCH     TATYPE,STATYPE
          GOTO      RECL9999 IF EQUAL       * admission type hasn't changed
.
          MOVE      ZERO,NHTIN              * clear NHT
          MOVE      ZERO,OAIN               * clear Other Acute
.
. ******* check the transferred to admission type *******
.
          PACK      KEY5,CATA,TATYPE
          CALL      RDCODE1
          BRANCH    OVRCD,RECL9999          * invalid code
.
          MATCH     ANSN,TCINDC2
          GOTO      RECL1000 IF EQUAL       * have a NHT value
          MATCH     ANSA,TCINDC2
          GOTO      RECL1500 IF EQUAL       * have an Other Acute value
....CAR 42782
          GOTO      RECL5000
....
.
RECL1000  MOVE      ONE,NHTIN               * transferred to NHT
          GOTO      RECL5000
.
RECL1500  MOVE      ONE,OAIN                * transferred to Other Acute
.
. ******* check the transferred from admission type *******
.
RECL5000  PACK      KEY5,CATA,STATYPE
          CALL      RDCODE1
          BRANCH    OVRCD,RECL9999          * invalid code
.
          MATCH     ANSN,TCINDC2
          GOTO      RECL6000 IF EQUAL       * have a NHT value
          MATCH     ANSA,TCINDC2
          GOTO      RECL6500 IF EQUAL       * have an Other Acute value
... CAR 42782
          GOTO      RECL9000
...
.
RECL6000  MOVE      "-1",NHTIN              * transferred from NHT
          GOTO      RECL9000
.
RECL6500  MOVE      "-1",OAIN               * transferred from Other Acute
.
.         now update the Temp file
.
RECL9000  MOVE      TADMN,AADMNO            * set admission number
          MOVE      TDATE,CALCDTTO          * set end date
          CALL      CDAY0000                * get number of days
          SUB       ONE,DAYS                * dont need the extra day for recl.
.
.         update the calculated days for old admission type
.
          MOVE      STATYPE,ATYPE           * set old admission type
          CALL      GCLC0000                * get the column
          MOVE      SIX,TCROWTYP            * set the row type
          MOVE      DAYS,ADDAMNT            * set add amount
          CALL      MTPC0000                * update temp file
.
.         update the reclassifications in/out for the CLAIM CODE type
.
          CALL      GCLC0000                * get the column
          MOVE      THREE,TCROWTYP          * set the row type
.
          MOVE      REPCOLA,REPCOLB         * set intermediate column
          ADD       TWO,REPCOLB             * set for Other Acute
          MOVE      OAIN,ADDAMNT            * set Other Acute add amount
          CALL      MTPC0000                * maintain temp file
.
          MOVE      REPCOLA,REPCOLB         * set intermediate column
          ADD       THREE,REPCOLB           * set for NHT
          MOVE      NHTIN,ADDAMNT           * set NHT add amount
          CALL      MTPC0000                * maintain temp file
.
          MOVE      TDATE,CALCDTFR          * set FROM date
          MOVE      ENDATE8,CALCDTTO        * set TO   date
.
RECL9999  RETURN
+
.*********************************************************************
.                   CLTC0000                    Called by : xxxx0000
.         clear temp file C variables
.*********************************************************************
CLTC0000  MOVE      ZERO,TCPRVDO
          MOVE      ZERO,TCPRVOA
          MOVE      ZERO,TCPRVNHT
          MOVE      ZERO,TCDVADO
          MOVE      ZERO,TCDVAOA
          MOVE      ZERO,TCDVANHT
          MOVE      ZERO,TCCMPDO
          MOVE      ZERO,TCCMPOA
          MOVE      ZERO,TCTOTAL
CLTC9999  RETURN
+
.********************************************************************
.*                  CDAY0000                   Called by : DATE0000 *
.*        Get the number of days between two dates                  *
.*        Para's  : CALCDTFR      start date                        *
.*                  CALCDTTO      end   date                        *
.*        Returns : DAYS          days between two dates            *
.********************************************************************
.
.         turn the starting date into julian date
.
CDAY0000  MOVE      ZERO,DAYS
          MATCH     ADATE,DDATE             * Day case patient ?
          GOTO      CDAY9990 IF EQUAL       * day case
.
          DAYSEP    CALCDTFR,CALCDTTO,DAYS
.
          MATCH     ANSD,STMOVE
          GOTO      CDAY9995 IF EQUAL       * dont add extra for discharge day
          MATCH     ANSL,STMOVE
          GOTO      CDAY9995 IF EQUAL       * dont add extra for on-leave day
.
CDAY9990  ADD       ONE,DAYS                * get inclusive days
.
CDAY9995
.>>>>>>>  PRINT     *1,"ADMISSION : ",AADMNO," DAYS : ",DAYS
CDAY9999  RETURN
+
.*********************************************************************
.                   ROSD0000                    Called by : xxxx0000
.         see if a patient is returned from leave on the same day
.         as they left.  If they were, then don't calculate the no.
.         of days now
.         Para's  : STADMN        save admission number
.         Returns : EXIT = 1      returned on same day
.*********************************************************************
ROSD0000  MOVE      ZERO,EXIT
          MOVE      TDATE,STDATE            * save the transfer file date
          CALL      RDKTRAN2
          BRANCH    OVRCD,ROSD9999          * no more records
.
          MATCH     TADMN,STADMN
          GOTO      ROSD9000 IF NOT EQUAL   * not returned
.
          MATCH     ANSR,TMOVE
          GOTO      ROSD9000 IF NOT EQUAL   * not returned yet
.
          MATCH     TDATE,STDATE
          GOTO      ROSD9000 IF NOT EQUAL   * returned on different date
.
          MOVE      ONE,EXIT                * returned on same date
.
ROSD9000  CALL      RDPTRAN2                * get back to correct record
.
ROSD9999  RETURN
+
.*********************************************************************
.                   LOSD0000                    Called by : xxxx0000
.         see if a patient left the hospital on the same day as they
.         returned. If they did, then don't calculate the no.
.         of days now
.         Para's  : STADMN        save admission number
.         Returns : EXIT = 1      returned on same day
.*********************************************************************
LOSD0000  MOVE      ZERO,EXIT
          MOVE      TDATE,STDATE            * save the transfer file date
          CALL      RDPTRAN2
          BRANCH    OVRCD,LOSD9999          * no more records
.
          MATCH     TADMN,STADMN
          GOTO      LOSD9000 IF NOT EQUAL   * not returned
.
          MATCH     ANSL,TMOVE
          GOTO      LOSD9000 IF NOT EQUAL   * not a leave record yet
.
          MATCH     TDATE,STDATE
          GOTO      LOSD9000 IF NOT EQUAL   * returned on different date
.
          MOVE      TATYPE,STATYPE          * set save admission type
          MOVE      ONE,EXIT                * returned on same date
.
LOSD9000  CALL      RDKTRAN2                * get back to correct record
.
LOSD9999  RETURN
+
.*********************************************************************
.                   HDRC0000                    Called by : xxxx0000
.         print the page header for OPTION C
.*********************************************************************
HDRC0000  CALL      HEAD132
          PRINT     *40,"From Date : ",FROMDATE,"    to ",TODATE,*N,*N:
                    *N,"*--------------------------------------------------":
                       "---------------------------------------------------":
                       "----------------------*":
                    *N,"| PATIENT              |             PRIVATE       ":
                       "     |    DEPT. OF VETERANS AFFAIRS   |     ":
                       "COMPENSABLE     |            |":
                    *N,"| CATEGORY             |---------------------------":
                       "-----|--------------------------------|------------":
                       "---------|   TOTAL    |":
                    *N,"|                      | Day only | Oth Acute|   ":
                       "NHT    | Day only | Oth Acute|   NHT    | Day only |":
                       " Oth Acute|            |":
                    *N,"*--------------------------------------------------":
                       "---------------------------------------------------":
                       "----------------------*"
          MOVE      "11",CLNO               * set line number
HDRC9999  RETURN
+
.*********************************************************************
.                   PLNC0000                    Called by : REPC1000
.         print a line for report type C
.*********************************************************************
PLNC0000  COMPARE   "55",CLNO
          CALL      HDRC0000 IF NOT LESS    * print new heading
.
          MOVE      TCROWTYP,FORM1
          LOAD      PRLINA,FORM1,LNTLEA1,LNTLEB1,LNTLEC1:
                                 LNTLED1,LNTLEE1,LNTLEF1
          LOAD      PRLINB,FORM1,LNTLEA2,LNTLEB2,LNTLEC2:
                                 LNTLED2,LNTLEE2,LNTLEF2
.
          PRINT     *1,"| ",PRLINA,"|          |          |   ":
                       "       |          |          |          |          |":
                       "          |            |":
                    *N,"| ",PRLINB,"| ",TCPRVDO," | ",TCPRVOA," | ":
                    TCPRVNHT," | ",TCDVADO," | ",TCDVAOA," | ",TCDVANHT," | ":
                    TCCMPDO," | ",TCCMPOA," | ",TCTOTAL," |":
                    *N,"*--------------------------------------------------":
                       "---------------------------------------------------":
                       "----------------------*"
          ADD       THREE,CLNO
.
PLNC9999  RETURN
+
.*********************************************************************
.                   CTPC0000                    Called by : xxxx0000
.         Create temp file C and D
.*********************************************************************
CTPC0000  CALL      DTPC0000                * delete temp file C
.
          CLEAR     CMDLINE                 * clear command line
          PACK      CMDLINE,ISBUILD,CFNAMEC,KEYC,SP30      * set command
          RESET     CMDLINE                 * reset FP
          EXECUTE   CMDLINE,TASKID          * build the temp file
          OPEN      TEMPC,CFNAMEC           * open the temp file
.
          CLEAR     CMDLINE                 * clear command line
          PACK      CMDLINE,ISBUILD,CFNAMED,KEYD,SP30      * set command
          RESET     CMDLINE                 * reset FP
          EXECUTE   CMDLINE,TASKID          * build the temp file
          OPEN      TEMPD,CFNAMED           * open the temp file
.
          MOVE      ZERO,FORM1
.
CTPC1000  ADD       ONE,FORM1
          COMPARE   SEVEN,FORM1
          GOTO      CTPC2000 IF NOT LESS    * finished
.
          CALL      CLTC0000                * clear temp file C
          MOVE      FORM1,TCROWTYP          * set row type
          CALL      WRTEMPC
          GOTO      CTPC1000
.
CTPC2000  OPEN      PATMI1A1,"patmi1af"     * admission file
          OPEN      PMSVX1A1,"pmsvx1af"     * admission file
          OPEN      PATMI1A3,"patmi1af"     * admission file
          OPEN      PATDSCH1,"patdschf"     * discharge file
          OPEN      PATDSCH2,"patdschf"     * discharge file
          OPEN      PATCODE1,"patcodes"     * codes file
          OPEN      PATTRAN2,"pattranf"     * transfer file
.
CTPC9999  RETURN
+
.*********************************************************************
.*                  DTPC0000                    Called by : CTPC0000 *
.*        Delete temp file C and D                                   *
.*********************************************************************
DTPC0000  PACK      CFNAMEC,PRFIXC,PORT   * set the port dependant file name
          REP       " 0",CFNAMEC
          CLOSE     TEMPC                   * close temp file
          CLEAR     CMDLINE                 * clear command line
          PACK      CMDLINE,ISERASE,CFNAMEC * set command line for erase
          RESET     CMDLINE                 * reset FP
          EXECUTE   CMDLINE,TASKID          * delete the temp file
.
          PACK      CFNAMED,PRFIXD,PORT   * set the port dependant file name
          REP       " 0",CFNAMED
          CLOSE     TEMPD                   * close temp file
          CLEAR     CMDLINE                 * clear command line
          PACK      CMDLINE,ISERASE,CFNAMED * set command line for erase
          RESET     CMDLINE                 * reset FP
          EXECUTE   CMDLINE,TASKID          * delete the temp file
.
DTPC9999  RETURN
+
.*********************************************************************
.         temp file C I/O routines
.*********************************************************************
RSTEMPD   READ      TEMPD,KEY8;;
          RETURN
.
RKTEMPD   MOVE      ZERO,OVRCD
          READKS    TEMPD;TDADMN
          GOTO      OVERCOND IF OVER
          RETURN
.
.*********************************************************************
.         temp file C I/O routines
.*********************************************************************
RATEMPC   MOVE      ZERO,OVRCD
          READ      TEMPC,KEY1;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTEMPC   READ      TEMPC,KEY1;;
          RETURN
.
RDTEMPC   MOVE      ZERO,OVRCD
          READ      TEMPC,KEY1;TCROWTYP,TCPRVDO,TCPRVOA,TCPRVNHT,TCDVADO:
                               TCDVAOA,TCDVANHT,TCCMPDO,TCCMPOA,TCTOTAL
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTEMPC   MOVE      ZERO,OVRCD
          READKS    TEMPC;TCROWTYP,TCPRVDO,TCPRVOA,TCPRVNHT,TCDVADO:
                          TCDVAOA,TCDVANHT,TCCMPDO,TCCMPOA,TCTOTAL
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMPC   WRITE     TEMPC,KEY1;TCROWTYP,TCPRVDO,TCPRVOA,TCPRVNHT,TCDVADO:
                               TCDVAOA,TCDVANHT,TCCMPDO,TCCMPOA,TCTOTAL
          RETURN
.
UPTEMPC   UPDATE    TEMPC;TCROWTYP,TCPRVDO,TCPRVOA,TCPRVNHT,TCDVADO:
                          TCDVAOA,TCDVANHT,TCCMPDO,TCCMPOA,TCTOTAL
          RETURN
.
          INC       IBAOVRIO/INC            * OVERCOND label
          INC       PATDAYIO/INC            * day file
          INC       PATCODIO/INC            * codes file
          INC       PATDSCIO/INC            * discharge file
          INC       PATMI1IO/INC            * admission file
          INC       PMSVX1IO/INC            * admission file
          INC       PATTRNIO/INC            * transfer file
          INC       HL7BMTIO/INC
....      INC       HL7BMTTR
.
PRNC9999  ENDPROC
.
.
.
          INC       STD001IO
.
          INC       PATCOMN3
          INC       TFILENAM                     * Generate Temp File Name
.
          INC       IBASEQIO/INC                 * Sequential Numbers File
          INC       PATCODIO/INC
          INC       PATDRGIO/INC
          INC       PATDASIO/INC
          INC       WEBERRIO/INC                 * Web Server Error Logging
.
