.***************************************************************************
.* System    :   GENERAL SKELETON PROGRAM                                  *
.* Program   :   IBASYS53                                                  *
.* Desc      :   Security Control Maintenance                              *
.***************************************************************************
.* Date      :   28/08/91                                                  *
.* Author    :   Steve O'Gorman                                            *
.* Function  :   This program provides the maintenance for the security    *
.*               control.  Adapted from IBASYS50                           *
.***************************************************************************
.*    V10.05.01  01/01/2015  Ania P                      CAR 261630        *
.*               Removed use of PORT for temp file naming                  *
.*               VC2.09.01  27/02/2000  J.Tan                              *   
.*               Modification to open correct file (I * C)                 *   
.***************************************************************************
.*               VC2.00.01  14/09/2000  J.Tan                              *   
.*               Mods to update department on WEB Security table           *   
.*                                                                         *
.*               V5.07.B03 13/01/1999  Jim Stathopoulos                    *   
.*               Fixed Global Compile Errors                               *   
.*               V5.07     06/10/98  Jim Stathopoulos                      *
.*               507 Changes                                               *
.***************************************************************************
.*               VC.00.02  28/11/1997   Nick   SRF 642822                  *
.*               Removed Med Records Tracking User Id                      *
.*               VC.00.01  11/12/96  ROD         Holy Spit                 *
.*               Added Med Records Tracking User Id                        *
.*               V6.00.02  17/09/92 Steve O'Gorman                         *
.*               Checked the IBSMAVAL Flag in the LOAD0000 ROUTINE         *
.*               V6.01.02  20/05/94   Gabrielle     SRF 128205             *
.*               Fixed code to remove the description from the mailing id  *
.*               VC1.00.00 15/09/94  Whirlpool                             *
.*               Added keyin of user id for new security                   *
.***************************************************************************
.
          INC       STDGENDF
.
.=========================
.File Description Includes
.-------------------------
.
          INC       MSGIDSFD/INC
          INC       IBAPASFD/INC
          INC       IBAMENFD/INC
          INC       IBAMSLFD/INC
          INC       IBASMAFD/INC
          INC       IBAUSEFD/INC
          INC       MRTSTFFD/INC
          INC       WEBSECFD/INC
          INC       IBASEQFD/INC  
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.=========================
.Local Variable Definition
.-------------------------
.
FILETAIL  INIT      " 36 u1-3,4-6 U4-6"
.
TEMP1     IFILE     SQL, FIXED=36, KEY="U1-3,4-6"
TEMP2     IFILE     SQL, FIXED=36, KEY="U4-6"
.
.Name      Type   Length  Physical  Start     Description
.--------  ----   ------  --------  -----     ---------------------------------
TMPUNIQ    DIM       3        3       1       Unique Key
TMPSYST    DIM       3        3       4       System
TMPDESC    DIM      20       20       7       Description
TMPLEVL    DIM       1        1      27       Security Level
TMPMENU    DIM       8        8      28       Default Menu
.
. End of Record                      36
.
.
ACCEPT    FORM      1
.
CHANGE    FORM      1
CMDLINE   DIM      50
COL       FORM      3
COUNT     FORM      3
DESCOPER  DIM       30
DIGIT1    DIM       1
DIGIT2    DIM       1
DIM20     DIM       20
DIM31     DIM       31
DIM55     DIM       55
DSTFARRY  DIM       6[36]
FORM3     FORM      3
FORM4B    FORM      4
FWORK     FORM      6
.
INSEC     DIM       6
ITEMNO    FORM      2
LINE      DIM       55
MAXCOUNT  FORM      3
MCURPAGE  FORM      3
MMAXPAGE  FORM      3
MMAXTRAN  FORM      4
MODE      DIM       1
MRCNSTFF  FORM      1
MRCNOIDM  FORM      1
MREQPAGE  FORM      3
MSKIPASK  FORM      1
.
NUM       FORM      3
OPERATOR  DIM       6
SAVKEY6   DIM       6
STOWORK   DIM       6
STRING    INIT      "1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ"
TEMP55    DIM       55
TOTAL     FORM      5
.
XX1       FORM      5
XX2       FORM      5
XX3       FORM      5
XX4       FORM      5
XX5       FORM      5
XX6       FORM      5
.
.
.
PRGID     INIT      "IBASYS53"
PRGNAM    INIT      "Security Control Maintenance"
VERSION   INIT      "V12.00.00"
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
ML0000    CALL      INIT0000
.
ML0100    CALL      SELOPTN
          COMPARE   ZERO,COPTION
          GOTO      ML9999 IF EQUAL    * exit program
.
ML0200    *         display screen A
          CALL      PROC0000
          BRANCH    EXIT,ML0100,ML0100
          LOAD      ACCEPT,COPTION,ONE,ZERO,ZERO
.
          BRANCH    COPTION,ML1000,ML2000,ML3000
.
.---- add data ----
.
ML1000    CALL      SELA0000     * modify screen A
          BRANCH    EXIT,ML0200  * don't save data
.
          CALL      WRTA0000     * post screen A data
.
          CALL      SECR0000     * Display 2 Digit Security Code
          BRANCH    EXIT,ML1000
.
          CALL      MODB0000     * Batch Screen
          BRANCH    EXIT,ML0200
.
          CALL      POST0000     * Post Batch Screen Data to the Files
.
          GOTO      ML0200       * get next entry
.
.---- modify data ----
.
ML2000    CALL      LOCK0000     * Lock Record
          BRANCH    EXIT,ML0200  * Lock Record
          CALL      DISA0000     * modify screen A
          CALL      SELA0000     * modify screen A
          BRANCH    EXIT,ML2100  * don't save data
.
          CALL      UPDA0000     * post screen A data
          CALL      UNLC0000     * Unlock Record
.
          CALL      MODB0000     * Batch Screen
          BRANCH    EXIT,ML0200
.
          CALL      POST0000     * Post Batch Screen Data to the Files
.
          GOTO      ML0200       * get next entry
ML2100    CALL      UNLC0000     * Unlock Record
          GOTO      ML0200       * get next entry
.
.---- delete data ----
.
ML3000    CALL      LOCK0000     * Lock Record
          BRANCH    EXIT,ML0200  * Lock Record
          CALL      DISA0000     * modify screen A
          CALL      DELQST       * ok to delete (y/n/c) ?
          BRANCH    CEXIT,ML3100,ML3200,ML3300
.
ML3100    CALL      DELA0000     * delete screen A data
          GOTO      ML0200       * get next entry
ML3200    CALL      UNLC0000     * Unlock Record
          GOTO      ML0200       * get next entry
ML3300    CALL      UNLC0000     * Unlock Record
          GOTO      ML0100       * get next entry
.
ML9999    CALL      KILL0000     * Remove the Temp File
          CHAIN     PGM          * chain back to menu
.
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          DISPLAY   *P64:24,"Opening";
.
          DISPLAY   *P72:24,"controlf"
          OPEN      CONTROLF,"controlf"
.
          READ      CONTROLF,SIXTY;*119,MRCNOIDM,*128,MRCNSTFF
.
          DISPLAY   *P72:24,"msgidsaf"
          OPEN      MSGIDSA1,"msgidsaf"
.
          DISPLAY   *P72:24,"ihapassf"
          OPEN      IHAPASS1,"ihapassf"
.
          DISPLAY   *P72:24,"ibamenaf"
          OPEN      IBAMENA1,"ibamenaf"
.
          DISPLAY   *P72:24,"ibamslaf"
          OPEN      IBAMSLA2,"ibamslaf"
.
          DISPLAY   *P72:24,"ibasmaaf"
          OPEN      IBASMAA1,"ibasmaaf"
.
          DISPLAY   *P72:24,"ibauseaf"
          OPEN      IBAUSEA1,"ibauseaf"
.
          DISPLAY   *P72:24,"ibacodef"
          OPEN      IBACODE1,"ibacodef"
.
          DISPLAY   *P64:24,"mrtstfaf";
          OPEN      MRTSTFA1,"mrtstfaf"
          OPEN      MRTSTFA3,"mrtstfaf"
.
          CALL      TFILENAM
.
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.-------------------------------------------------
. SCRA - Display Screen
.-------------------------------------------------
SCRA0000  DISPLAY   *P1:3,*EF
          DISPLAY   *P5:04,*HOFF,"User Code          :",*HOFF:
                    *P1:06,*V2LON," 1.",*HOFF:
                    *P5:06,*HOFF,"User Name          :",*HOFF:
                    *P2:07,*V2LON,"2.",*HOFF:
                    *P5:07,*HOFF,"Department Code    :",*HOFF:
                    *P2:08,*V2LON,"3.",*HOFF:
                    *P5:08,*HOFF,"Menu Code          :",*HOFF:
                    *P2:09,*V2LON,"4.",*HOFF:
                    *P5:09,*HOFF,"Mailing Id         :",*HOFF:
                    *P2:10,*V2LON,"5.",*HOFF:
                    *P5:10,*HOFF,"Alert Sec. Level   :",*HOFF:
                    *P2:11,*V2LON,"6.",*HOFF:
                    *P5:11,*HOFF,"Unix Login ID      :",*HOFF:
                    *P2:12,*V2LON,"7.",*HOFF:
                    *P5:12,*HOFF,"MR Tracking User Id:",*HOFF:
                    *P1:24;
          RETURN
.
.-------------------------------------------------
. PROC - Enter Key Fields
.        Returns : EXIT  0=continue
.                        1=nothing entered
.                        2=EXITCHAR entered
.-------------------------------------------------
PROC0000  CALL      CLRA0000
          CALL      SCRA0000
          MOVE      ZERO,CKEYTYP
          MOVE      "026",CCOL
          MOVE      "04",CVERT
          COMPARE   ONE,COPTION
          GOTO      PROC1000 IF NOT EQUAL
          MOVE      ONE,CKEYTYP
.
PROC1000  CALL      KIBPSA00
          BRANCH    EXIT,PROC9999,PROC9999
.
........  CALL      ALPH0000
          BRANCH    EXIT,PROC9000
.
          MOVE      FALSE,EXIT
          GOTO      PROC9999
.
PROC9000  DISPLAY   *P1:24,*EL,*B,"Invalid Digits in User Code  - Hit <":
                               *V2LON,"ENTER",*HOFF,"> to Continue ";
          KEYIN     *EOFF,ANS;
          DISPLAY   *P1:24,*EL;
.
          GOTO      PROC0000
.
PROC9999  MOVE      ZERO,CKEYTYP
          RETURN
.
.-------------------------------------------------
. DISA - Display Screen A
.-------------------------------------------------
DISA0000  MOVE      SP30,PRXDESC
          PACK      KEY5,SECDEPT,SP5
          CALL      RDICOD1
.
          MOVE      SP30,IBMNDESC
          PACK      KEY3,SECMNNUM,SP30
          CALL      RDIBMEN1
.
          MOVE      SP30,DESCOPER
          PACK      KEY6,SECTRUID
          CALL      RDMRSTF1
          IF        OVRCD=0
            CALL      FSTF0000                   * format name
          ENDIF
.
          PACK      KEY8,SECMAIL,SP8
          CALL      RDMSIDS1
.
          MOVE      MSIDSNAM,PACSNAME
          MOVE      MSIDGNAM,PACGNAME
          MOVE      SP30,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
.
          MATCH     ",",PACFNAME
          GOTO      DISA0100 IF NOT EQUAL
.
          MOVE      SP70,PACFNAME
.
DISA0100  DISPLAY   *P026:04,*V2LON,SECODE
          DISPLAY   *P026:06,*V2LON,SECUSER
          DISPLAY   *P026:07,*V2LON,SECDEPT,*HOFF,*P35:7,PRXDESC
          DISPLAY   *P026:08,*V2LON,SECMNNUM,*HOFF,*P35:8,IBMNDESC
          DISPLAY   *P026:09,*V2LON,SECMAIL,*HOFF,*P35:9,PACFNAME
          DISPLAY   *P026:10,*V2LON,SECUALEV
          DISPLAY   *P026:11,*V2LON,SECNUMB 
          DISPLAY   *P026:12,*V2LON,SECTRUID,*HOFF,*P35:12,DESCOPER
.
          RETURN
.
.-------------------------------------------------
. CLRA - Clear Fields A
.-------------------------------------------------
CLRA0000  MOVE      SP70,SECODE
          MOVE      SP70,SECUSER
          MOVE      SP70,SECDEPT
          MOVE      SP70,SECMNNUM
          MOVE      SP70,SECMAIL
          MOVE      SP20,SECNUMB
          MOVE      SP20,SECTRUID
          MOVE      SP70,PRXDESC
.
          RETURN
.
.-------------------------------------------------
. SELA - Select Field
.-------------------------------------------------
SELA0000  MOVE      ZERO,CCITEM
.
.---- determine option to execute ----
.
SELA0100  ADD       ONE,CCITEM
          BRANCH    ACCEPT,SELA0500
          CALL      MAINQST
.
          COMPARE   ZERO,CCITEM
          GOTO      SELA9000 IF EQUAL
.
          COMPARE   SEQ,CCITEM
          GOTO      SELA9500 IF EQUAL
.
SELA0500  BRANCH    CCITEM,SELA1100,SELA1200,SELA1300,SELA1400,SELA1500:
                           SELA1600,SELA1700
          BRANCH    ACCEPT,SELA0900
          BEEP
.
SELA0900  MOVE      ZERO,ACCEPT
          GOTO      SELA0100
.
. Option    1
.
SELA1100  MOVE      "026",CCOL
          MOVE      "06",CVERT
          KEYIN     *PCCOL:CVERT,*V2LON,SECUSER:
                    *PCCOL:CVERT,*DV,*V2LON,SECUSER:
                    *PCCOL:CVERT
.
          GOTO      SELA0100
.
. Option    2
.
SELA1200  MOVE      "026",CCOL
          MOVE      "07",CVERT
          MOVE      ZERO,CKEYTYP
.
SELA1210  DISPLAY   *PCCOL:CVERT,*EL;
          CALL      KIBDPA00
          BRANCH    EXIT,SELA1210,SELA9500
.
          MOVE      PRXCATA,SECDEPT
          DISPLAY   *PCCOL:CVERT,*V2LON,SECDEPT,*HOFF,*P35:CVERT,PRXDESC;
.
          GOTO      SELA0100
.
. Option    3
.
SELA1300  MOVE      "026",CCOL
          MOVE      "08",CVERT
          MOVE      ZERO,CKEYTYP
.
          DISPLAY   *PCCOL:CVERT,*EL;
          CALL      KIBMNA00
          BRANCH    EXIT,SELA1310,SELA9500
.
          DISPLAY   *PCCOL:CVERT,*V2LON,IBMNMENU,*HOFF,*P35:CVERT,IBMNDESC;
          MOVE      IBMNMENU,SECMNNUM
.
          GOTO      SELA0100
.
SELA1310  UNPACK    SP70,IBMNMENU,IBMNDESC,SECMNNUM
          GOTO      SELA0100
.
. Option    4
.
SELA1400  MOVE      "026",CCOL
          MOVE      "09",CVERT
          MOVE      ZERO,CKEYTYP
.
          DISPLAY   *PCCOL:CVERT,*EL;
          CALL      KMSIDA00
          BRANCH    EXIT,SELA1410,SELA9500
          MOVE      MSIDMLID,SECMAIL
.
          MOVE      MSIDSNAM,PACSNAME
          MOVE      MSIDGNAM,PACGNAME
          MOVE      SP30,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
.
          MATCH     ",",PACFNAME
          GOTO      SELA1405 IF NOT EQUAL
.
          MOVE      SP70,PACFNAME
.
SELA1405  DISPLAY   *PCCOL:CVERT,*V2LON,SECMAIL,*HOFF,*P35:CVERT,PACFNAME;
          GOTO      SELA0100
.
SELA1410  UNPACK    SP70,MSIDMLID,PACFNAME,SECMAIL
          GOTO      SELA0100
.
. Option    5
.
SELA1500  MOVE      "026",CCOL
          MOVE      "10",CVERT
.
          MOVE      SECUALEV,F1
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,F1
          MOVE      F1,SECUALEV
.
          GOTO      SELA0100
.
.
. Option    6
.
SELA1600  MOVE      "026",CCOL
          MOVE      "11",CVERT
          KEYIN     *PCCOL:CVERT,*V2LON,SECNUMB:
                    *PCCOL:CVERT,*DV,*V2LON,SECNUMB:
                    *PCCOL:CVERT
.
          GOTO      SELA0100
.
.
. Option    7
.
SELA1700  CALL      MOPE0000                      * keyin staff id
          GOTO      SELA0100
.
.---- exit points ----
.
SELA9000  MOVE      ZERO,EXIT
          GOTO      SELA9999
.
SELA9500  MOVE      ONE,EXIT
.
SELA9999  RETURN
.
.-------------------------------------------------
. WRTA - Write to Files
.-------------------------------------------------
WRTA0000  PACK      KEY4,SECODE,SP70
          CALL      RDAPASS1
          COMPARE   ZERO,OVRCD
          GOTO      WRTA9000 IF EQUAL
          CALL      WRPASS1
.
.  -----  Add all Available Systems to ibauseaf  -----
.
          PACK      KEY3,SP3
          CALL      RSIBSMA1
.
WRTA1000  CALL      RKIBSMA1
          BRANCH    OVRCD,WRTA9999
.
          MATCH     "0",IBSMAVAL
          GOTO      WRTA1000 IF EQUAL
.
          MOVE      SECODE,IBUSCODE
          MOVE      IBSMNUMB,IBUSSYST
          MOVE      ZERO,IBUSLEVL
          MOVE      IBSMDMPG,IBUSMPRO
.
          PACK      KEY7,IBUSCODE,IBUSSYST
          CALL      WRIBUSE1
.
          GOTO      WRTA1000
.
WRTA9000  DISPLAY   *P1:24,*B,"Record Already Exists - "
          CALL      HITENTER
.
WRTA9999  RETURN
.
.-------------------------------------------------
. SECR - Calculate & Display the 2 Digit Sec. Code
.-------------------------------------------------
.
ANEW
SECR0000  RESET     SECODE
.
.         Check if the code is numeric. If not, use a special algorithm
.
          MOVE      SECODE,INSEC         * INSEC is used by the algorithm
          TYPE      SECODE               * Check if numeric
.
          GOTO      SECR1000 IF EQUAL
.
          CALL      ALPH0000
          BRANCH    EXIT,SECR3000
.
          GOTO      SECR2000
.
.         Calculate the check digits
.
SECR1000  MOVE      SECODE,FWORK
          MULT      "2.38",FWORK
          ADD       "135",FWORK
          MOVE      FWORK,STOWORK
          RESET     STOWORK,5
          LENSET    STOWORK
          MOVE      STOWORK,DIGIT1
          RESET     STOWORK,6
          MOVE      STOWORK,DIGIT2
.
SECR2000  DISPLAY   *P6:23,*EF,"The Computer has Generated 2 Digits to go ":
                               "with the New User Code":
                    *P6:24,*EL,"The Generated Digits are ",*V2LON:
                               DIGIT1,DIGIT2,*W10,*P6:24,*EL;
          GOTO      SECR9999
.
SECR3000  DISPLAY   *P1:24,*EL,*B,"Invalid Digits in User Code  - Hit <":
                               *V2LON,"ENTER",*HOFF,"> to Continue ";
          KEYIN     *EOFF,ANS;
          DISPLAY   *P1:24,*EL;
.
SECR9999  RETURN
.
.-------------------------------------------------
. UPDA - Update to Files
.-------------------------------------------------
.
UPDA0000  PACK      KEY4,SECODE,SP70
          CALL      RDAPASS1
          BRANCH    OVRCD,UPDA9000
          CALL      UPPASS1
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      WEBSECA3,"websecaf"
          TRAPCLR   IO
          BRANCH    OVRCD,UPDA9999
.
          PACK      KEY14,SECODE,SP70
          CALL      RSWBSE3
UPDA1000  CALL      RKWBSE3
          BRANCH    OVRCD,UPDA9999
.
          MATCH     SECODE,WBSEPCD               * Same passcode ?
          GOTO      UPDA9999 IF NOT EQUAL
.
          MOVE      SECDEPT,WBSEDEPT             * Update department
          CALL      UPWBSE3
          GOTO      UPDA1000
.
UPDA9000  DISPLAY   *P1:24,*B,"Record Has Been Deleted - "
          CALL      HITENTER
.
UPDA9999  RETURN
.
.-------------------------------------------------
. DELA - Delete Record
.-------------------------------------------------
DELA0000  PACK      KEY4,SECODE,SP70
          CALL      RDAPASS1
          BRANCH    OVRCD,DELA9000
          CALL      DEPASS1
.
          PACK      KEY7,SECODE,SP30
          CALL      RSIBUSE1
.
DELA1000  CALL      RKIBUSE1
          BRANCH    OVRCD,DELA9999
.
          MATCH     SECODE,IBUSCODE
          GOTO      DELA9999 IF NOT EQUAL
.
          PACK      KEY7,IBUSCODE,IBUSSYST
          CALL      DEIBUSE1
.
          GOTO      DELA1000
.
DELA9000  DISPLAY   *P1:24,*B,"Record Has Been Deleted - "
          CALL      HITENTER
.
DELA9999  RETURN
.
.----------------------------------------
. LOCK - Lock Record to be Updated
.----------------------------------------
LOCK0000  PACK      KEY4,SECODE,SP70
          CALL      RDLPASS1
          BRANCH    OVRCD,LOCK9000,LOCK8000
          MOVE      ZERO,EXIT
          GOTO      LOCK9999
.
LOCK8000  KEYIN     *P1:24,*EL,"Record Locked - (":
                    *V2LON,"R",*HOFF,")etry or (":
                    *V2LON,"E",*HOFF,")xit ? ",ANS
          REP       UPPLOW,ANS
          MATCH     ANSR,ANS
          GOTO      LOCK0000 IF EQUAL
          MATCH     ANSE,ANS
          GOTO      LOCK0000 IF NOT EQUAL
.
LOCK9000  MOVE      ONE,EXIT
.
LOCK9999  RETURN
.----------------------------------------
. UNLC - Unlock Record to be Updated
.----------------------------------------
UNLC0000  CALL      UUPASS1
          PACK      MSIDSNAM,SP70
          PACK      MSIDGNAM,SP70
UNLC9999  RETURN
.----------------------------------------
.
.********************************************************************** 
.*                            LOAD0000                                *
.*                   Load Data into the Temp File                     *
.********************************************************************** 
.
LOAD0000  
          MOVE      ZERO,FORM3
          PACK      KEY3,SP70
          CALL      RSIBSMA1
LOAD0100  CALL      RKIBSMA1
          BRANCH    OVRCD,LOAD0200
.
          MATCH     "0",IBSMAVAL
          GOTO      LOAD0100 IF EQUAL
.
          ADD       ONE,FORM3
          MOVE      FORM3,TMPUNIQ
          MOVE      IBSMNUMB,TMPSYST
          MOVE      IBSMNATV,TMPDESC
          MOVE      ZERO,TMPLEVL
          MOVE      IBSMDMPG,TMPMENU
.
          PACK      KEY6,TMPUNIQ,TMPSYST
          CALL      WRTEMP1
          GOTO      LOAD0100
.
LOAD0200  
.
          MOVE      ZERO,FORM3
          PACK      KEY7,SECODE,SP30
          CALL      RSIBUSE1
.
LOAD1000  CALL      RKIBUSE1
          BRANCH    OVRCD,LOAD9999
.
          MATCH     IBUSCODE,SECODE
          GOTO      LOAD9999 IF NOT EQUAL
.
          PACK      KEY3,IBUSSYST
          CALL      RDIBSMA1
          BRANCH    OVRCD,LOAD1000
.
          MATCH     SP3,SECMNNUM
          GOTO      LOAD1010 IF EQUAL
.
          PACK      KEY9,SECMNNUM,IBUSSYST,SP3
          CALL      RSIBMSL2
          CALL      RKIBMSL2
          BRANCH    OVRCD,LOAD1000
.
          MATCH     IBMSNUMB,IBUSSYST
          GOTO      LOAD1000 IF NOT EQUAL
.
LOAD1010  
          PACK      KEY3,IBUSSYST,SP70
          CALL      RDTEMP2
          IF        OVRCD=0
            MOVE      IBUSSYST,TMPSYST
            MOVE      IBSMNATV,TMPDESC
            MOVE      IBUSLEVL,TMPLEVL
            MOVE      IBUSMPRO,TMPMENU
            CALL      UPTEMP2
          ENDIF
          GOTO      LOAD1000
.
LOAD9999  RETURN
.
.********************************************************************** 
.*                               MODB0000                             *
.*   Control block for Adding, Changing, Deleting test result codes   *
.********************************************************************** 
.
MODB0000  CALL      BULD0000                * Create the Temp File
          OPEN      TEMP1,TFILNAME
          OPEN      TEMP2,TFILNAME
          CALL      LOAD0000                * Load Data into the Temp File
.
          MOVE      ZERO,CHANGE
.
          CALL      MAXP0000                * Get MMAXPAGE & MMAXTRAN
.
          CALL      DISB0000                * Display the screen
          MOVE      ZERO,MSKIPASK           * Stop display at every screen
.
          COMPARE   ZERO,MMAXTRAN           * No Records as Yet ?
          GOTO      MODB1000 IF EQUAL       * Yes - Go Straight to Add Mode
.
MODB0100  MOVE      TRUE,EXIT               * Set exit flag
          MOVE      SP1,ANS
          KEYIN     *P1:24,*EL,"(",*V2LON,*DV,ANSC,*HOFF,")hange":
                    ", (",*V2LON,*DV,ANSR,*HOFF,")edisplay":
                    ", (",*V2LON,*DV,ANSE,*HOFF,")xit":
                    ", (",*V2LON,*DV,ANSP,*HOFF,")ost : ",*V2LON,ANS
.
          REP       UPPLOW,ANS
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
          REP       "C2R4E5P6c3r4e5p6 0102030405060",ANS
          MOVE      ANS,FORM2
          BRANCH    FORM2,MODB1000,MODB2000,MODB3000,MODB4000,MODB5000,MODB6000
.
          BEEP
          GOTO      MODB0100
.
MODB1000
          GOTO      MODB0100
.
.-------- Change items ------
.
MODB2000  CALL      MCHG0000
          GOTO      MODB0100
.
.-------- Delete items ------
.
MODB3000
          GOTO      MODB0100
.
.-------- Redisplay screen ------
.
MODB4000  MOVE      ZERO,MSKIPASK            * Stop display at every screen
          CALL      DISB0000
          GOTO      MODB0100
.
.-------- Exit without posting ------
.
MODB5000  MOVE      FALSE,EXIT
.
          COMPARE   ZERO,CHANGE              * see if any changes made
          GOTO      MODB9999 IF EQUAL        
.
          KEYIN     *P1:24,*EL,"Exit without posting changes. Ok to proceed (":
                    *V2LON,*DV,ANSY,*HOFF,*DV,SLASH,*V2LON,*DV,ANSN,*HOFF:
                    ") ? ",*B,*V2LON,ANS
.
          REP       UPPLOW,ANS
          CMATCH    ANSY,ANS
          GOTO      MODB9999 IF EQUAL
.
          GOTO      MODB0100
.
.-------- Post option chosen ------
.
MODB6000  MOVE      ZERO,EXIT                * Unset exit flag - update files
          RETURN
.
.------ Exit option chosen ------
.
MODB9999  MOVE      TRUE,EXIT
          RETURN
+
.************************************************************************
.*                                MCHG0000                              *
.*                      Change codes in the temp file                   *
.************************************************************************
MCHG0000  DISPLAY   *P1:24,*EL;
          MOVE      ANSC,MODE               * Change mode
          KEYIN     *P1:24,*EL,"Change item : ",*V2LON,FORM4A;
.
          COMPARE   ZERO,FORM4A             * see if an item has been selected
          GOTO      MCHG9999 IF EQUAL
.
          COMPARE   MMAXTRAN,FORM4A         * item must not be > maximum no. of
          GOTO      MCHG1000 IF EQUAL         items entered so far
.
          GOTO      MCHG1000 IF LESS
.
.------ item entered is not on file ------
.
MCHG0100  DISPLAY   *P1:24,*EL,*B,"Item out of Range - Hit <":
                               *V2LON,"ENTER",*HOFF,"> to Continue ";
          KEYIN     *EOFF,ANS;
          DISPLAY   *P1:24,*EL;
.
          GOTO      MCHG0000
.
.------ Calculate screen page transaction is on & transaction # down page -----
.
MCHG1000  MOVE      MMAXTRAN,FORM4           * Save MMAXTRAN
          MOVE      MMAXPAGE,FORM4B          * Save MMAXPAGE
          MOVE      FORM4A,MMAXTRAN          * Use trx num to calculate MMAXPAGE
.
          CALL      MAXP2000                 * Calculate MMAXPAGE
.
          MOVE      MMAXPAGE,MREQPAGE        * MMAXPAGE is the page req
          MOVE      FORM4,MMAXTRAN           * Restore MMAXTRAN
          MOVE      FORM4B,MMAXPAGE          * Restore MMAXPAGE
.
          COMPARE   MCURPAGE,MREQPAGE        * if we have the required page 
          GOTO      MCHG1500 IF EQUAL          then get the screen position
.
          MOVE      ONE,MSKIPASK             * Display till required screen
.
          CALL      DISB0000                 * display the batch screen
.
.------ calculate the screen position ------
.
MCHG1500  ASSIGN    (MCURPAGE-1)*16,FORM4
          ASSIGN    FORM4A-FORM4+6,CVERT     * Position down the screen
.
          MOVE      ZERO,FORM4               * Counter for no.of records read
          MOVE      SP6,KEY6
.
          CALL      RSTEMP1                  * position on the temp file
.
.------ read through the temp file ------
.
MCHG2000  CALL      RKTEMP1
          BRANCH    OVRCD,MCHG0100           * Record not found
.
          ADD       ONE,FORM4
.
          COMPARE   FORM4,FORM4A             * Same as transaction # ?
          GOTO      MCHG2900 IF EQUAL        * Yes - exit from read loop
.
          GOTO      MCHG2000                 * Otherwise keep on reading
.
.------ Save current record's key for positioning read before update ------
.
MCHG2900  PACK      SAVKEY6,TMPUNIQ,TMPSYST
.
          MOVE      FORM4A,FORM3
.
          MOVE      TMPLEVL,IBUSLEVL
          MOVE      TMPMENU,IBUSMPRO
.
          CALL      CODE0000                 * change report code
.
          MOVE      SAVKEY6,KEY6             * re-read current record as we
          CALL      RDTEMP1                  * lose it when re-displaying
.
          COMPARE   ZERO,EXIT                * see if a new code has been 
          GOTO      MCHG3000 IF EQUAL          entered
.
          MOVE      IBUSLEVL,TMPLEVL
          MOVE      IBUSMPRO,TMPMENU
.
          DISPLAY  *P34:CVERT,TMPLEVL:
                   *P38:CVERT,TMPMENU;
.
.------ update temp file if neccessary ------
.
MCHG3000  MOVE      SAVKEY6,KEY6
          UNPACK    SAVKEY6,TMPUNIQ,TMPSYST
          CALL      RDTEMP1                  * read the temp file
.
          COMPARE   ZERO,CHANGE              * Any changes made ?
          GOTO      MCHG0000 IF EQUAL        * No - get next record to change
.
          MOVE      IBUSLEVL,TMPLEVL
          MOVE      IBUSMPRO,TMPMENU
.
          CALL      UPTEMP1                  * update the temp file
.
          GOTO      MCHG0000                 * Get next record to change
.
MCHG9999  RETURN
+
.**********************************************************************
.*                              DISB0000                              *
.*                 Redisplay batch keyin screen                       *
.*        Requires : MSKIPASK - 0=Accept/More asked                   *
.*                              1=Disp till MREQPAGE                  *
.*        Returns  : MCURPAGE - Current displayed screen page         *
.**********************************************************************
.
DISB0000  DISPLAY   *P1:3,*EF:
                    *P1:4,"User : ",*V2LON,SECODE,*HOFF,SP2,SECUSER:
                    *V2LON,*ULON:
                    *P1:6,"Num":
                    *P6:6,"Sys":
                   *P11:6,"Description         ":
                   *P33:6,"Sec":
                   *P38:6,"Menu    ";
.
          MOVE      ONE,MCURPAGE                * Current screen page is 1st
          MOVE      SEVEN,CVERT
          MOVE      ONE,FORM3
.
.------ position on the temp file ------
.
          MOVE      SP6,KEY6
          CALL      RSTEMP1
.
.------ read through the temp file ------
.
DISB1000  CALL      RKTEMP1
          BRANCH    OVRCD,DISB9999
.
          COMPARE   ZERO,MSKIPASK               * displaying all entries
          GOTO      DISB2000 IF EQUAL
.
          COMPARE   MREQPAGE,MCURPAGE           * skip if not required page
          GOTO      DISB2100 IF NOT EQUAL
.
.------ display details ------
.
DISB2000  DISPLAY   *P1:CVERT,*EL,*V2LON,FORM3,*HOFF,DOT:
                    *P6:CVERT,TMPSYST:
                   *P11:CVERT,TMPDESC:
                   *P34:CVERT,TMPLEVL:
                   *P38:CVERT,TMPMENU;
.
.
.------ test to see if paging is required ------
.
DISB2100  ADD       ONE,FORM3
          ADD       ONE,CVERT
.
          COMPARE   CVERT,TWENTY2           * see if the screen is full
          GOTO      DISB3000 IF LESS
.
          GOTO      DISB1000
.
.------ page full see if more desired ------
.
DISB3000  BRANCH    MSKIPASK,DISB3050          * skip if not asking question
.
          KEYIN     *P1:24,*EL,"(",*V2LON,*DV,ANSM,*HOFF,")ore, ":
                    "(",*V2LON,*DV,ANSA,*HOFF,")ccept this screen ? ":
                    *V2LON,ANS
.
          RESET     ANS
          GOTO      DISB9999 IF EOS
.
          REP       UPPLOW,ANS
.
          CMATCH    ANSA,ANS
          GOTO      DISB9999 IF EQUAL
.
          CMATCH    ANSM,ANS
          GOTO      DISB3100 IF EQUAL
.
          BEEP
          GOTO      DISB3000                   * invalid option
.
.------ Skipped question - keep on displaying if not page required ------
.
DISB3050  COMPARE   MCURPAGE,MREQPAGE
          GOTO      DISB9999 IF EQUAL
.
.------ More option chosen ------
.
DISB3100  MOVE      SEVEN,CVERT
          ADD       ONE,MCURPAGE
          DISPLAY   *P1:CVERT,*EF;
.
          GOTO      DISB1000
.
DISB9999  RETURN
.
.**********************************************************************
.*                               MAXP0000                             *
.*             Routine to find MMAXPAGE & MMAXTRAN                    *
.**********************************************************************
MAXP0000  MOVE      ZERO,MMAXTRAN
          MOVE      SP6,KEY6
          CALL      RSTEMP1                  * position on temp file
.
.------ read through temp file ------
.
MAXP1000  CALL      RKTEMP1
          BRANCH    OVRCD,MAXP2000
.
          ADD       ONE,MMAXTRAN
          GOTO      MAXP1000
.
.------ calculate MMAXPAGE ------
.
MAXP2000  ASSIGN    (MMAXTRAN-1)/16+1,MMAXPAGE
          ASSIGN    (MMAXTRAN-1)%16+1,FORM3
.
MAXP9999  RETURN
+
.
.********************************************************************** 
.*                          CODE0000                                  *
.*                    Keyin the Data Fields                           *
.********************************************************************** 
.
CODE0000  CALL      LEVL0000                * Keyin Security Level
          BRANCH    EXIT,CODE9000
.
          CALL      MENU0000                * Keyin Default Menu
          BRANCH    EXIT,CODE0000
.
          MOVE      FALSE,EXIT
          GOTO      CODE9999
.
CODE9000  MOVE      TRUE,EXIT
          MOVE      TMPLEVL,IBUSLEVL
          MOVE      TMPMENU,IBUSMPRO
.
CODE9999  RETURN
.
.********************************************************************** 
.*                            LEVL0000                                *
.*                    Keyin the Security Level                        *
.********************************************************************** 
.
LEVL0000  KEYIN     *P34:CVERT,*EL,*DV,UNDLN1:
                    *P34:CVERT,ANS
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
.
          MATCH     SP1,ANS
          GOTO      LEVL9000 IF EQUAL
.
          TYPE      ANS
          GOTO      LEVL1000 IF EQUAL
.
          BEEP
          GOTO      LEVL0000
.
LEVL1000  MOVE      FALSE,EXIT
          MOVE      ANS,IBUSLEVL
.
          MOVE      ONE,CHANGE
          GOTO      LEVL9999
.
LEVL9000  MOVE      TRUE,EXIT
.
LEVL9999  RETURN
.
.********************************************************************** 
.*                            MENU0000                                *
.*                     Keyin the Default Menu                         *
.********************************************************************** 
.
MENU0000  MOVE      TMPMENU,IBUSMPRO
.
          KEYIN     *P38:CVERT,*EL,*DV,UNDLN8:
                    *P38:CVERT,*RV,IBUSMPRO
.
          ENDSET    IBUSMPRO
          APPEND    SP1,IBUSMPRO
          RESET     IBUSMPRO
.
          MATCH     SP8,IBUSMPRO
          GOTO      MENU9000 IF EQUAL
.
          MOVE      ONE,CHANGE
          MOVE      FALSE,EXIT
          GOTO      MENU9999
.
MENU9000  MOVE      TRUE,EXIT
.
MENU9999  RETURN
.
.-------------------------------------------------
. KILL0000 - Kill the Temp File
.-------------------------------------------------
.
KILL0000  CLOSE     TEMP1
          CLOSE     TEMP2
.
          CLEAR     CMDLINE                 * Remove any old file
          MOVE      "iserase ",CMDLINE
          ENDSET    CMDLINE
          APPEND    TFILNAME,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
          RETURN
.
.-------------------------------------------------
. BULD0000 - Build the Temp File
.-------------------------------------------------
.
BULD0000  CALL      KILL0000
.
          CLEAR     CMDLINE                 * Build a new file
          MOVE      "isbuild ",CMDLINE
          ENDSET    CMDLINE
          APPEND    TFILNAME,CMDLINE
          APPEND    FILETAIL,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
          RETURN
.
.********************************************************************** 
.*                            POST0000                                *
.*                      Post Temp File Data                           *
.********************************************************************** 
.
POST0000  OPEN      TEMP2,TFILNAME
          MOVE      SECODE,IBUSCODE
.
          PACK      KEY3,SP3
          CALL      RSIBSMA1
.
POST1000  CALL      RKIBSMA1
          BRANCH    OVRCD,POST9999
.
          MATCH     "0",IBSMAVAL
          GOTO      POST1000 IF EQUAL
.
          MOVE      IBSMNUMB,IBUSSYST
          MOVE      ZERO,IBUSLEVL
          MOVE      IBSMDMPG,IBUSMPRO
.
          PACK      KEY3,IBUSSYST
          CALL      RDTEMP2
          BRANCH    OVRCD,POST1500
.
          MOVE      TMPSYST,IBUSSYST
          MOVE      TMPLEVL,IBUSLEVL
          MOVE      TMPMENU,IBUSMPRO
.
POST1500  PACK      KEY7,IBUSCODE,IBUSSYST
          CALL      RAIBUSE1
          BRANCH    OVRCD,POST2000
.
          CALL      UPIBUSE1
          GOTO      POST1000
.
POST2000  PACK      KEY7,IBUSCODE,IBUSSYST
          CALL      WRIBUSE1
.
          GOTO      POST1000
.
POST9999  RETURN
.
.********************************************************************** 
.*                              ALPH0000                              *
.*                       Check an Alpha Passcode                      *
.********************************************************************** 
.
.         This include contains to the code to work out
.         the check digits for an alphanumeric code.
.
ALPH0000 MOVE      "1" TO NUM
         MOVE      " " TO DIM1
.
ALPH1000 RESET     INSEC TO NUM
         CMOVE     INSEC TO DIM1
         MOVE      ONE TO COUNT
.
ALPH2000 RESET     STRING TO COUNT
         CMATCH    DIM1 TO STRING
         GOTO      ALPH5000 IF EQUAL
.
         ADD       "1" TO COUNT
         COMPARE   "37" TO COUNT
         GOTO      ALPH2000 IF LESS
.
         MOVE      TRUE,EXIT
         GOTO      ALPH9999
.
ALPH5000 STORE     COUNT INTO NUM OF XX1,XX2,XX3,XX4
         ADD       "1" TO NUM
         COMPARE   "5" TO NUM
         GOTO      ALPH1000 IF LESS
.
         MULT      "2" BY XX2
         MULT      "3" BY XX3
         MULT      "4" BY XX4
.
         MOVE      XX1 TO TOTAL
         ADD       XX2 TO TOTAL
         ADD       XX3 TO TOTAL
         ADD       XX4 TO TOTAL
.
         MOVE      TOTAL TO FWORK
         DIV       "37" INTO FWORK
         MULT      "37" BY FWORK
         SUB       FWORK FROM TOTAL
         COMPARE   "0" TO TOTAL
         GOTO      ALPH7000 IF NOT EQUAL
         MOVE      "1" TO TOTAL
.
ALPH7000 MOVE      TOTAL TO XX5
.
         MULT      "2" BY XX4
         MULT      "3" BY XX3
         MULT      "4" BY XX2
         MULT      "5" BY XX1
.
         MOVE      XX1 TO TOTAL
         ADD       XX2 TO TOTAL
         ADD       XX3 TO TOTAL
         ADD       XX4 TO TOTAL
         ADD       XX5 TO TOTAL
.
         MOVE      TOTAL TO FWORK
         DIV       "37" INTO FWORK
         MULT      "37" BY FWORK
         SUB       FWORK FROM TOTAL
         COMPARE   "0" TO TOTAL
         GOTO      ALPH8000 IF NOT EQUAL
         MOVE      "1" TO TOTAL
.
ALPH8000
         MOVE      TOTAL TO XX6
.
         UNPACK    SP2,DIGIT1,DIGIT2
         RESET     STRING TO XX5
         CMOVE     STRING TO DIGIT1
         RESET     STRING TO XX6
         CMOVE     STRING TO DIGIT2
.
ALPH9999 RETURN
+
.**************************************************************************
.*  MOPE0000  :  Input Tracking User ID                                   *
.**************************************************************************
MOPE0000  MOVE      FALSE,EXIT                   * Space Fill Variables
          MOVE      SP30,DESCOPER
          MOVE      SP6,OPERATOR
.
          DISPLAY   *P26:12,*EL,UNDLN6;  
          KEYIN     *P26:12,*V2LON,OPERATOR;      * Display Variables
.
          ENDSET    OPERATOR
          APPEND    SP6,OPERATOR
          RESET     OPERATOR
.
          DISPLAY   *P26:12,*V2LON,OPERATOR;      * Redisplay Operator
          GOTO      MOPE9250 IF EOS              * check for end of string
.
          MATCH     SP6,OPERATOR                 * Check For Spaces
          GOTO      MOPE9250 IF EQUAL
.
MOPE0500  MATCH     EXITCHAR,OPERATOR            * Check for a "\"
          GOTO      MOPE9250 IF EQUAL
.
          MATCH     QUEST,OPERATOR               * Check for a "?"
          GOTO      MOPE1000 IF NOT EQUAL
.
          MOVE      SP6,OPERATOR
          MOVE      ZERO,HLEF
          CALL      GETSCR00
          CALL      MRTSTFDS                     * display all staff members
          CALL      PUTSCR00
.......   CALL      DISP0000                     * re-display variables
          BRANCH    EXIT,MOPE9250                * Exit
          MOVE      KEY6,OPERATOR
.
MOPE1000  MOVE      OPERATOR,KEY6                * Validate Operator on File
          CALL      RDMRSTF1
          BRANCH    OVRCD,MOPE9000
.
.------- check if Staff Code is active ----
.
          COMPARE   "0",MRSTSTAT                   * "0" = Active
          GOTO      MOPE8000 IF NOT EQUAL
.
          CALL      FSTF0000                     * format staff members name
.
          DISPLAY   *P26:12,*V2LON,OPERATOR,*HOFF:   
                    *P35:12,DESCOPER;             * Display the Description
          MOVE      OPERATOR,SECTRUID             * set up file var
          GOTO      MOPE9999
.
.------- Staff Code is non-active ---
.
MOPE8000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "Invalid Code - Staff is non-active.    ";
          CALL      HITENTER
          GOTO      MOPE0000
.
.------- Staff Code not on file -----
.
MOPE9000  DISPLAY   *P1:24,*EL,*B,*V2LON,"Staff member not on file.    ";
          CALL      HITENTER
          GOTO      MOPE0000
.
MOPE9250  MOVE      SP30,DESCOPER
          MOVE      SP6,SECTRUID
          DISPLAY   *P26:12,*V2LON,SP6
.
.          COMPARE   ONE,MRCNOIDM
.          GOTO      MOPE9999 IF NOT EQUAL
.
.          DISPLAY   *P1:24,*EL,*B,*V2LON,"Operator ID is Mandatory. ";
.          CALL      HITENTER
.          GOTO      MOPE0000
.
.MOPE9500  MOVE      TRUE,EXIT
.
MOPE9999  RETURN
.
.********************************************************************** 
.*  FSTF0000  :  Format Staff Members Name                            *
.********************************************************************** 
FSTF0000  MOVE      MRSTSNAM,PACSNAME
          MOVE      MRSTGNAM,PACGNAME
          MOVE      MRSTTITL,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,DESCOPER
.
FSTF9999  RETURN
.
.********************************************************************** 
.*                       Temp File I/O Routine                        *
.********************************************************************** 
.
RSTEMP1   RESET     KEY6
          READ      TEMP1,KEY6;;
          RETURN
.
RATEMP1   RESET     KEY6
          MOVE      ZERO,OVRCD
          READ      TEMP1,KEY6;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTEMP1   RESET     KEY6
          MOVE      ZERO,OVRCD
          READ      TEMP1,KEY6;TMPUNIQ,TMPSYST,TMPDESC,TMPLEVL,TMPMENU
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    TEMP1;TMPUNIQ,TMPSYST,TMPDESC,TMPLEVL,TMPMENU
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTEMP1   MOVE      ZERO,OVRCD
          READKP    TEMP1;TMPUNIQ,TMPSYST,TMPDESC,TMPLEVL,TMPMENU
          GOTO      OVERCOND IF OVER
          RETURN
.
UPTEMP1   UPDATE    TEMP1;TMPUNIQ,TMPSYST,TMPDESC,TMPLEVL,TMPMENU
          GOTO      UPDFLOCK IF LOCKED
          RETURN
.
WRTEMP1   RESET     KEY6
          WRITE     TEMP1,KEY6;TMPUNIQ,TMPSYST,TMPDESC,TMPLEVL,TMPMENU
          RETURN
.
DETEMP1   RESET     KEY6
          DELETE    TEMP1,KEY6
          RETURN
.
RDTEMP2   RESET     KEY3
          MOVE      ZERO,OVRCD
          READ      TEMP2,KEY3;TMPUNIQ,TMPSYST,TMPDESC,TMPLEVL,TMPMENU
          GOTO      OVERCOND IF OVER
          RETURN
.
UPTEMP2   UPDATE    TEMP2;TMPUNIQ,TMPSYST,TMPDESC,TMPLEVL,TMPMENU
          RETURN
.
. Includes for I/O and Keyins
.-------------------------------
          INC       WEBSECIO/INC
          INC       MSGIDSIO/INC
          INC       IBAMENIO/INC
          INC       IBAMSLIO/INC
          INC       IBASMAIO/INC
          INC       IBAUSEIO/INC
          INC       IBAPASIO/INC
          INC       MRTSTFIO/INC
          INC       MSGIDSKY
          INC       IBAMENKY
          INC       IBAPASKY
          INC       IBADEPKY
          INC       MRTSTFDS
          INC       STDHLPCD
          INC       STD001IO
          INC       TFILENAM 
          INC       IBASEQIO/INC 
          INC       WEBERRIO/INC
