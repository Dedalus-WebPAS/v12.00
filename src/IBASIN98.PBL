. ****************************************************************************
. *              P R O G R A M  S U M M A R Y                                *
. *              -------------  -------------                                *
. *                                                                          *
. * Program Name:     IBASIN98                                               *
. *                                                                          *
. * Function:         SYSTEM PARAMETER MAINTENANCE                           *
. *                                                                          *
. * Date Written:     28/07/87                                               *
. *                                                                          *
. * Author :          MALCOLM HAYSE (I.B.A)                                  *
. *                                                                          *
. * Modifications:                                                           *
. ****************************************************************************
. * V10.01.01 21/12/2010  Mike Laming   CAR 233046                           *
. *           Mods to Misc.Charges PATMCHFD - Key change, logic changes      *
. * V10.00.01 30/04/2010  J.Tan     CAR 220887                               *
. *           Mods checking for Active/Inactive of Misc.charge               *
. * V9.12.01  19/02/2010  Steve Armstrong   CAR 216549                       *
. *           Mods to read CHTELEB at *129 instead of *127                   *
. ****************************************************************************
. * V9.04.01  16/09/2005  Mike Laming   CAR 68672                            *
. *           Add SNCOBCPN, Barcode Printer No. to User Screen 2             *
. * V9.03.02  13/07/2004  Steve Armstrong   CAR 51708                        *
. *           Mods to use Sector 13 from PATCONFD instead of SINCONFD.       *
. *           This meant changing the position of CHTELEB from 129 to        *
. *           127 to match PATCONFD.                                         *
. * V9.03.01  17.09.2003 Lina Vo   Car 40497                                 *
. *           Changed index and read of patmchgf to include effective        *
. *           date.                                                          *
. ****************************************************************************
. * V9.02.03  16.07.2003 Henry Son CAR 40970                           *
. *           Change wording on IBA control screen1 - item 15          *
. * V9.02.02  22.05.2003 Mike Laming CAR 39306                         *
. *           Added SNCOEMAL - J&J Virtual Integration (E-mail) (Y/N)  *
. * V9.02.01  13.03.2003  Davin Sloan CAR/Quote: 15040                 *
. *           Added SNCOMDPC - Multiple Delivery Point Codes (YES/NO)  *
. * V9.02.00  03.05.2002 Glenn Saunders                                *
. *           Export to new release i.e. v9.02 from vf.09              *
. **********************************************************************
. * VF.09.02  14.02.2002 Tonii Tang SRF 12580 (Quote No: 10239-01)     *
. *           Added SNCOSFYN - Confirm START to FINISH print (Y/N)     * 
. * VF.09.01  29.05.2001 Dave Matthews                                 *
. *           Added code etc to allow for input of FMS controlf        *
. *           and FMS batch file directories. This data is now stored  *
. *           in new SIN control file sector 107 - HFMSDRCT & HFMSBTCH *
. *            - SINCONFD.INC changed accordingly                      *  
. *           SRF 10437                                                *
. * VF.09.B03 07.03.2001 Sandra Barcham                                *
. *           Change VHA to HSA                                        *
. * VF.09.B02 06.03.2001 Sandra Barcham                                *
. *           Added HSA Customer Code 6, 7, 8, 9                       *
. *           srf 9088                                                 *
. * VF.09.B01 20.11.2000 Charles Handaya                               *
. *           Added Print Catalog, & Catalog/Supplier comments flag    *
. *           in User Screen 2                                         *
. **********************************************************************
. * VF.01.03  30.10.2000 Sandra Barcham                                *
. *           Recompiled for PSNMCHFD & IO                             *
. * VF.01.02  16.08.2000 Sandra Barcham                                *
. *           Remove VHA transfer 2 & 3 as combined to use transfer1   *
. *           Added Customer Code 4 & 5                                *
. *           srf 4940                                                 *
. * VF.01.01  08.05.2000 Charles Handaya                               *
. *           Add EAN Number in Hospital Screen 2                      *
. **********************************************************************
. * VF.00.05  05.01.2000 Charles Handaya                               *
. *           Recompiled for APSMASIO change                           *
. *           22.12.1999 Charles Handaya                               *
. *           Recompiled for Fixing Audit Date (CCYYMMDD)              *
. * VF.00.04  19.08.1999 Sandra Barcham                                *
. *           Allow WGH to have six char catalog code on barcode       *
. *           Quote 9468                                               *
. * VF.00.03  10.08.1999 Sandra Barcham                                *
. *           Allow automatic backordering up to maximum quantity      *
. * VF.00.02  06.07.1999 Sandra Barcham                                *
. *           Allow barcode imprest entry to use quantity required or  *
. *           Counted                                                  *
. * VF.00.01  22.05.1999 Sandra Barcham                                *
. *           Add in Mercy Aged Care Purchase Order                    *
. **********************************************************************
+
          INC       STDGENDF
.
          INC       APSMASFD/INC
.
          INC       IBAGSTFD/INC
.   
          INC       PATCONFD/INC
          INC       SINCONFD/INC
          INC       SINCCAFD/INC
          INC       SINWARFD/INC
.
          INC       PATMCHFD/INC
.
HELPTYP   DIM       20
HPASSWD   DIM       8
WADESC20  DIM       20
.
.        EXTRA   VARIABLES
.
INTER     DIM       7
INTER1    INIT      "Cash   "
INTER2    INIT      "Accrual"
.
ACCDIR    DIM       20
AUDFLAG   FORM      1
AVDESC    DIM       13
BODESC    DIM       16
COSTDESC  DIM       16
COSTLAST  INIT      "Use Last Cost   "
COSTCURR  INIT      "Use Current Cost"
.
.
CATDISPF  FORM      1
CATDISP   INIT      "                "
CATDISP0  INIT      "Normal"
CATDISP1  INIT      "Western Hospital"
CATTYPE   DIM       26
.
CNDESC    DIM       12
CODDESCM  DIM       20
CODDESCV  DIM       20
CODDESCW  DIM       20
CODDESCX  DIM       20
CODE      DIM       3
CODEA     INIT      "A  "
CODEDC    INIT      "DC "
CODECL    INIT      "CL "
CONAME    DIM       30
CSNAME    DIM       25
CURRDATE  DIM       8
.
DANSX     DIM       3
DANS1     DIM       3
DANS2     DIM       3
DANS3     DIM       3
DANS4     DIM       3
DANS5     DIM       3
DANS6     DIM       3
DANS7     DIM       3
DANS8     DIM       3
DANS9     DIM       3
DANS10    DIM       3
DANS11    DIM       3
DANS12    DIM       3
DANS13    DIM       3
DANS14    DIM       3
DANS15    DIM       3
DANS16    DIM       3
DANS17    DIM       3
DANS18    DIM       3
DANS19    DIM       3
DATEBO    INIT      "Allocate by Date"
DHTYPE    DIM       10
DHTYPE1   INIT      "D.V.C.H  "
DHTYPE2   INIT      "A.H.R    "
DHTYPE3   INIT      "EPWORTH  "
DHTYPE4   INIT      "W.C.H.   "
DHTYPE5   INIT      "MERCY    "
DIM51     DIM       5
DIM52     DIM       5
DIM53     DIM       5
DLARGE    INIT      "Large"
DLSIZE    DIM       30
DLSIZE1   INIT      "Small (37 Char Separation)  "
DLSIZE2   INIT      "Wide  (42 Char Separation)  "
DLSIZE3   INIT      "Tiny  (30 Char Separation)  "
DMONTH    DIM       10
DMONTH1   INIT      "January   "
DMONTH2   INIT      "February  "
DMONTH3   INIT      "March     "
DMONTH4   INIT      "April     "
DMONTH5   INIT      "May       "
DMONTH6   INIT      "June      "
DMONTH7   INIT      "July      "
DMONTH8   INIT      "August    "
DMONTH9   INIT      "September "
DMONTH10  INIT      "October   "
DMONTH11  INIT      "November  "
DMONTH12  INIT      "December  "
DSMALL    INIT      "Small"
DTINY     INIT      "Tiny"
DZERO     INIT      "0  "
.
FIELD     FORM      2
FORM1A    FORM      1
FORM2A    FORM      2
FORM2B    FORM      2
FORM2C    FORM      2
FORM2D    FORM      2
FORM2E    FORM      2
FORM6A    FORM      6
FORM6B    FORM      6
FORM6C    FORM      6
FORM6D    FORM      6
FORM8     FORM      8
.
HACCTDES  DIM       30
HADEL     DIM       30     *** variable in DELEVIREY POINT descriptions
HAPERM    DIM       10     *** variable in MONTH descriptions
HNONDIM1  DIM       1      * (P)urchase or (R)eceival
HNONDESC  DIM       34
HNONRECV  INIT      "Acknowledge Usage at Receival Time"   *1-HNONUSAG
HNONPURC  INIT      "Acknowledge Usage at Purchase Time"   *2-HNONUSAG
.
INDEX     FORM      2
INVCOST   INIT      "Invoice Time "
.
KEY21A    DIM       21
KEY26A    DIM       26
.
LASTINV   INIT      "Invoice Time"
LASTPO    INIT      "P/O Time    "
MODHACC   INIT      "Modbury 4 Cost Centre,5 Subj."
.
NEW       FORM      6
NINETY    FORM      "90"
.
PASS      DIM       8
PATDIR    DIM       20
PICKDESC  DIM       11
PRTRDESC  DIM       20
PRTRDSC0  INIT      "Default Printer"
PRTRDSC1  INIT      "Datamax E-class"
.
PRDESC    DIM       23
PRDESC0   INIT      "Part Number/Cost Centre"
PRDESC1   INIT      "Cost Centre/Part Number"
.
RECCOST   INIT      "Receival Time"
REPFLAG   FORM      1
.
SAVHLAST  DIM       7
SAVHNEXT  FORM      7
SAVHNORD  FORM      6
SEC       FORM      5
SIZEBO    INIT      "Allocate by Size"
SP40      INIT      "                                        "
.
PODESC    INIT      "                    "
PPDESC    INIT      "                    "
PPDESC1   INIT      "                    "
STANDPO   INIT      "Standard            "
MODBYPO   INIT      "Modbury             "
STVMPO    INIT      "St Vincent Melbourne"
RECCOMM   INIT      "Commodity Groups    "
HRHPO     INIT      "Heidelberg Repat.   "
STHPO     INIT      "Southland           "
MERPO     INIT      "Mercy               "
SAIPO     INIT      "St Andrews Ipswich  "
HWKPO     INIT      "Hawkes Bay          "
MODPO     INIT      "Modbury             "
SARPO     INIT      "St Andrews Rocky    "
DARPO     INIT      "Darwin              "
MATPO     INIT      "Mater               "
ACCPO     INIT      "Anne Caudle Centre  "
SVLPO     INIT      "St. Vincents Lismore"
EPWPO     INIT      "Epworth Hospital    "
SABPO     INIT      "St. Andrews War Mem."
BUDPO     INIT      "Buderim             "
STGPO     INIT      "HCOA St George      "
PHSPO     INIT      "Private Health Serv."
LASPO     INIT      "Standard Laser Land."
MHGPO     INIT      "Mercy Health Group  "
.
WARHACC   INIT      "Use Warehouse issue"
.
XDAY1     DIM       2
XDAY2     DIM       2
XDAY3     DIM       2
XDAY4     DIM       2
XFORM2    FORM      2
XFORM6    FORM      6
XMON1     DIM       2
XMON2     DIM       2
XMON3     DIM       2
XMON4     DIM       2
XYEAR1    DIM       2
XYEAR2    DIM       2
XYEAR3    DIM       2
XYEAR4    DIM       2
.
ACCEPT    FORM      "0"      * accept mode (1=on)
OPTIOND   FORM      2        * screen D selection keyin var
SECENT    FORM      "0"      * has security already been entered (1=yes)
TYEAR     DIM       4
TPERD     FORM      2
LASTCHAR  INIT      "?"
FWDSLSH   INIT      "/"
.
PRGID     INIT      "IBASIN98"
PRGNAM    INIT      "System Parameter Maintenance"
VERSION   INIT      "V12.00.00"
+
.         START OF PROGRAM
.
          CALL      DISPHEAD
          CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"sinwaraf";
          OPEN      SINWARA1,"sinwaraf"
.
          DISPLAY   *P64:24,"sinccaaf";
          OPEN      SINCCAA1,"sinccaaf"
.
          DISPLAY   *P64:24,"apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
.
          DISPLAY   *P64:24,"ibagstaf";
          OPEN      IBAGSTA1,"ibagstaf"
          OPEN      IBAGSTA2,"ibagstaf"
.
          READ      CONTROLF,TWENTY;*193,PTCNDCLM
          READ      CONTROLF,TWENTY3;*95,HACCNT,*135,HPATIENT,*157,HPHARM
          READ      CONTROLF,TWENTY6;*194,INCNSOSI
          READ      CONTROLF,SIXTY7;*203,INCNBLON
.
NOPHARM   COMPARE   ONE,HPATIENT
          GOTO      START IF NOT EQUAL
.
          DISPLAY   *P64:24,"patmchgf";
          OPEN      PATMCHG1,"patmchgf"
.
START     MOVE      ZERO,OVRCD
          MOVE      ZERO TO REPFLAG
.
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON," 0.",*HOFF," Exit":
                    *P1:5,*V2LON," 1.",*HOFF," System Audits":
                    *P1:6,*V2LON," 2.",*HOFF," Delivery Points":
                    *P1:7,*V2LON," 3.",*HOFF," Period Set Up":
                    *P1:8,*V2LON," 4.",*HOFF:
                    " User Controlled   Screen 1":
                    *P1:9,*V2LON," 5.",*HOFF:
                    "                   Screen 2":
                   *P1:10,*V2LON," 6.",*HOFF:
                    " I.B.A. Controlled Screen 1":
                   *P1:11,*V2LON," 7.",*HOFF:
                    "                   Screen 2":
                   *P1:12,*V2LON," 8.",*HOFF:
                    " I.B.A. Special    Screen 1"
.
          MOVE      "9",F2
          COMPARE   ONE TO INCNSOSI
          GOTO      REKEY1 IF NOT EQUAL
          ASSIGN    F2+4,CCOL
          DISPLAY  *P1:CCOL,*V2LON,F2,".",*HOFF:
                    " SOS Interface Screen 1"
          ADD       "1",F2
          ASSIGN    F2+4,CCOL
          DISPLAY   *P1:CCOL,*V2LON,F2,".",*HOFF:
                    " SOS Interface Screen 2"
          ADD       "1",F2
.
REKEY1    COMPARE   ONE TO INCNBLON
          GOTO      REKEY2 IF NOT EQUAL
.
          ASSIGN    F2+4,CCOL
          DISPLAY  *P1:CCOL,*V2LON,F2,".",*HOFF:
                    " Barwon Linen Service Interface Screen 1"
          ADD       "1",F2
.
REKEY2    ASSIGN    F2+5,CCOL
REKEY2A   KEYIN     *P1:CCOL,*EL,"Select Option : ",*V2LON,OPTION
.
          COMPARE   ZERO,OPTION
          GOTO      ENDIT IF EQUAL
.
REPEAT    BRANCH    OPTION OF DOAUDGP,DODELV,DOPERGP,DOUSERC1,DOUSERC2:
                    DOIBAC,DOIBAC2,DOQUOT1
          IF        OPTION=9
            IF        INCNSOSI=1
              GOTO      DOSOSIS1   * VHA Parameter Screen
            ENDIF
            IF        INCNBLON=1
              GOTO      BLSP0000   * BLS Parameter Screen
            ENDIF
          ENDIF
          IF        OPTION=10
            IF        INCNSOSI=1
              GOTO      DOSOSIS2   * VHA Parameter Screen
            ENDIF
            IF        INCNBLON=1
              GOTO      BLSP0000   * BLS Parameter Screen
            ENDIF
          ENDIF
          IF        (OPTION=11)&(INCNBLON=1)
            GOTO      BLSP0000   * BLS Parameter Screen
          ENDIF
.
OPTERR    BEEP
          GOTO      REKEY2A
.
.     Do the Age Group Screen
.
DODELV    CALL      DISPDELV
          MOVE      ONE,OVRCD
          CALL      UPDELV
          BRANCH    OVRCD OF START
          CALL      WRDELV
          GOTO      START
.
.     Do the Audit Flags Screen
.
DOAUDGP   CALL      DISPAUD
          MOVE      ONE,OVRCD
          CALL      UPAUD
          BRANCH    OVRCD OF START
          CALL      WRAUD
          GOTO      START
.
.     Do the Periods Screen
.
DOPERGP   CALL      DISPPER
          MOVE      ONE,OVRCD
          CALL      UPPER
          BRANCH    OVRCD OF START
          CALL      WRPER
          GOTO      START
.
.     Do the User Controlled Screen 1
.
DOUSERC1  CALL      DISPUSR1
          MOVE      ONE,OVRCD
          CALL      UPUSR1
          BRANCH    OVRCD OF START
          CALL      WRUSR1
          GOTO      START
.
.    Do the User Controlled Screen 2
.
DOUSERC2  CALL      DISPUSR2
          MOVE      ONE,OVRCD
          CALL      UPUSR2
          BRANCH    OVRCD OF START
          CALL      WRUSR2
          GOTO      START
.
.     Do the I.B.A. Controlled Screen 1
.
DOIBAC    BRANCH    REPFLAG TO DOIBACA
.
          CALL      IBASECUR
          BRANCH    OVRCD OF START
.
DOIBACA   CALL      DISPIBA
          MOVE      ONE,OVRCD
          CALL      UPIBA
          BRANCH    OVRCD OF START
          CALL      WRIBA
          GOTO      START
.
.     Do the I.B.A. Controlled Screen 2
.
DOIBAC2   BRANCH    REPFLAG TO DOIBACA2
.
          CALL      IBASECUR
          BRANCH    OVRCD OF START
.
DOIBACA2  CALL      DISPIBA2
          MOVE      ONE,OVRCD
          CALL      UPIBA2
          BRANCH    OVRCD OF START
          CALL      WRIBA2
          GOTO      START
.
.     Do the I.B.A. Quote Screen 1
.
DOQUOT1   BRANCH    REPFLAG TO DOQUOT1A
.
          CALL      IBASECUR
          BRANCH    OVRCD OF START
.
DOQUOT1A  CALL      DISQUOT1
          MOVE      ONE,OVRCD
          CALL      UPQUOT1
          BRANCH    OVRCD OF START
          CALL      WRQUOT1
          GOTO      START
.
.         Do the SOS Interface Screen 1
. 
DOSOSIS1  CALL      DISPSOS1                 * Display SOS screen 1
          MOVE      ONE,OVRCD
          CALL      UPSOS1                   * Update the screen
          BRANCH    OVRCD OF START
          CALL      WRSOS1                   * Write any changes
          GOTO      START
.
.         Do the SOS Interface Screen 2
. 
DOSOSIS2  CALL      DISPSOS2                 * Display SOS screen 1
          MOVE      ONE,OVRCD
          CALL      UPSOS2                   * Update the screen
          BRANCH    OVRCD OF START
          CALL      WRSOS2                   * Write any changes
          GOTO      START
+
.
.         Barwon Linen Service Parameters
. 
BLSP0000  CALL      DBLS0000                 * Display SOS screen 1
          MOVE      ONE,OVRCD
          CALL      UBLS0000                 * Update the screen
          BRANCH    OVRCD OF START
          CALL      WBLS0000                 * Write any changes
          GOTO      START
+
.         Subroutine to display screens
.
DISPDELV  READ      CONTROLF,TWENTY5;HADEL1,HADEL2,HADEL3,HADEL4:
                    HADEL5,HADEL6,HADEL7,HADEL8
.
          DISPLAY   *P1:3,*EF:
                    *P1:5,*V2LON," 1.",*HOFF," Delivery Point 1 :":
                    *P1:6,*V2LON," 2.",*HOFF," Delivery Point 2 :":
                    *P1:7,*V2LON," 3.",*HOFF," Delivery Point 3 :":
                    *P1:8,*V2LON," 4.",*HOFF," Delivery Point 4 :":
                    *P1:9,*V2LON," 5.",*HOFF," Delivery Point 5 :":
                    *P1:10,*V2LON," 6.",*HOFF," Delivery Point 6 :":
                    *P1:11,*V2LON," 7.",*HOFF," Delivery Point 7 :":
                    *P1:12,*V2LON," 8.",*HOFF," Delivery Point 8 :":
                    *P24:5,*V2LON,HADEL1,*P24:6,HADEL2:
                    *P24:7,HADEL3,*P24:8,HADEL4:
                    *P24:9,HADEL5,*P24:10,HADEL6:
                    *P24:11,HADEL7,*P24:12,HADEL8
          RETURN
.
DISPAUD   READ      CONTROLF,TWENTY4;*201,HAUDA,HAUDB,HAUDC,HAUDD,HAUDE:
                                          HAUDF,HAUDG,HAUDH:
                                          *210,HAUDJ,*215,HAUDO,HAUDP:
                                          *218,HAUDR,HAUDS,*223,HAUDW
          READ      CONTROLF,SIXTY3;*158,SNCOCA1,SNCOCA2,SNCOCA3 
.
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON," 1.",*HOFF," Commodity Group    :":
                    *P1:5,*V2LON," 2.",*HOFF," Cost Centre        :":
                    *P1:6,*V2LON," 3.",*HOFF," Catalog Master     :":
                    *P1:7,*V2LON," 4.",*HOFF," Imprest            :":
                    *P1:8,*V2LON," 5.",*HOFF," Factor             :":
                    *P1:9,*V2LON," 6.",*HOFF," Backorder          :":
                    *P1:10,*V2LON," 7.",*HOFF," Catalog/Supplier   :":
                    *P1:11,*V2LON," 8.",*HOFF," Catalog/Warehouse  :":
                    *P1:12,*V2LON," 9.",*HOFF," Purchase Orders    :":
                    *P1:13,*V2LON,"10.",*HOFF," Originator         :":
                    *P1:14,*V2LON,"11.",*HOFF," Dispensing         :":
                    *P1:15,*V2LON,"12.",*HOFF," Receivals          :":
                    *P1:16,*V2LON,"13.",*HOFF," Product Group      :":
                    *P1:17,*V2LON,"14.",*HOFF," Warehouse          :":
                    *P1:18,*V2LON,"15.",*HOFF," Corp. Catalog      :":
                    *P1:19,*V2LON,"16.",*HOFF," Corp. Cred/Supp    :":
                    *P1:20,*V2LON,"17.",*HOFF," Corp. Catalog/Supp.:"
.
          MOVE      ZERO,INDEX
          MOVE      THREE,CVERT
          MOVE      "26",CCOL
.
AUDLOOP1  ADD       ONE,INDEX
          ADD       ONE,CVERT
          COMPARE   "18",INDEX
          RETURN    IF EQUAL
.
AUDPRNT1  LOAD      FIELD USING INDEX OF HAUDA,HAUDB,HAUDC,HAUDD,HAUDE:
                                         HAUDF,HAUDG,HAUDH,HAUDJ,HAUDO:
                                         HAUDP,HAUDR,HAUDS,HAUDW,SNCOCA1:
                                         SNCOCA2,SNCOCA3
          MOVE      DNO,DANSX
          LOAD      DANSX USING FIELD OF DYES
          DISPLAY   *PCCOL:CVERT,*V2LON,DANSX;
          GOTO      AUDLOOP1
.
DISPUSR1  READ      CONTROLF,TEN3;CHADD1,CHADD2,CHPOST,*129,CHTELEB
          READ      CONTROLF,TWENTY3;HNAME,HSHORT,*124,HORDDES
          READ      CONTROLF,TWENTY4;*160,HABCLEV1,HABCLEV2
          READ      CONTROLF,TWENTY6;*247,DIM1
          TYPE      DIM1
          IF        @EQUAL
            MOVE      DIM1,HPOWHDFT
            IF        HPOWHDFT<>0 & HPOWHDFT<>1
              MOVE      ZERO,HPOWHDFT
            ENDIF
          ELSE
            MOVE      ZERO,HPOWHDFT
          ENDIF
.
          READ      CONTROLF,SIXTY3;*142,SNCO40PL,*144,HALLOCBO,*153,SNCOKWD:
                                    SNCOSMX,SNCOCORP,*161,SNCOASPL,SNCOBSEQ:
                                    SNCOFAXN,*234,SNCOGSTC
.
          LOAD      BODESC USING HALLOCBO OF SIZEBO,DATEBO
.
          MOVE      DNO,DANS1
          LOAD      DANS1,HPOWHDFT,DYES
.
          MOVE      DNO,DANS2
          LOAD      DANS2,SNCO40PL,DYES
.
          MOVE      DNO,DANS3
          LOAD      DANS3,SNCOKWD,DYES
.
          MOVE      DNO,DANS4
          LOAD      DANS4,SNCOCORP,DYES
.
          MOVE      DNO,DANS5
          LOAD      DANS5,SNCOASPL,DYES
.
          MOVE      DNO,DANS6
          LOAD      DANS6,SNCOBSEQ,DYES
.
          MOVE      SP70,IBGSDESC
          PACK      KEY6,SNCOGSTC,SP70
          CALL      RDIBGS1
.
          DISPLAY   *P50:3,*EF,*V2LON,"User Screen 1",*HOFF:
                    *P1:4,*V2LON," 1.",*HOFF," Name (Long)            :":
                    *P1:5,*V2LON," 2.",*HOFF,"      (Short)           :":
                    *P1:6,*V2LON," 3.",*HOFF," Address Line 1         :":
                    *P1:7,*V2LON," 4.",*HOFF,"         Line 2         :":
                    *P1:8,*V2LON," 5.",*HOFF," Postcode               :":
                    *P1:9,*V2LON," 6.",*HOFF," Telephone Number       :":
                    *P1:10,*V2LON," 7.",*HOFF," Fax Number             :":
                    *P1:11,*V2LON," 8.",*HOFF," P/O Designator Code    :":
                    *P1:12,*V2LON," 9.",*HOFF," ABC A-B Level(Norm 80%):":
                    *P1:13,*V2LON,"10.",*HOFF," ABC B-C Level(Norm 15%):":
                    *P1:14,*V2LON,"11.",*HOFF," Allocate stock to BO's :":
                    *P1:15,*V2LON,"12.",*HOFF," Default WH in PO Maint.:":
                    *P1:16,*V2LON,"13.",*HOFF," Prt Catalog Line SIN40 :":
                    *P1:17,*V2LON,"14.",*HOFF," Keyword Catalog Search :":
                    *P1:18,*V2LON,"15.",*HOFF," SRO Max Lines per Order:":
                    *P1:19,*V2LON,"16.",*HOFF," Using Corporate Catalog:":
                    *P1:20,*V2LON,"17.",*HOFF," Auto Spool Picking List:":
                    *P1:21,*V2LON,"18.",*HOFF," Barcode in Seq. Flag   :":
                    *P1:22,*V2LON,"19.",*HOFF," Default GST Code       :":
                    *P30:4,*V2LON,HNAME,*P30:5,HSHORT:
                    *P30:6,CHADD1,*P30:7,CHADD2,*P30:8,CHPOST:
                    *P30:9,CHTELEB,*P30:10,SNCOFAXN,*P30:11,HORDDES:
                    *P30:12,HABCLEV1,*P30:13,HABCLEV2:
                    *P30:14,HALLOCBO,*HOFF,*P40:14,BODESC:
                    *P30:15,*V2LON,DANS1,*P30:16,DANS2,*P30:17,DANS3:
                    *P30:18,SNCOSMX:
                    *P30:19,DANS4:
                    *P30:20,DANS5:
                    *P30:21,DANS6:
                    *P30:22,SNCOGSTC,*HOFF,*P40:22,IBGSDESC
          RETURN
.
DISPUSR2  READ      CONTROLF,TWENTY3;*80,HFACTOR,*135,HPATIENT:
                                     *188,HLABPG,HLABPRT:
                                     *238,HCOSLAB,HCATLAB,HPHALAB
          READ      CONTROLF,TWENTY4;*121,HSTRORD,HFINORD:
                                     *155,HCONPERD,HADUPERD
          READ      CONTROLF,TWENTY6;*195,PHITEM
          READ      CONTROLF,SIXTY3;*1,SNCOHEAN,SNCOCCOM:
                                     *134,INCOMUPC,*229,SNCOPRSQ:
                                     *243,SNCOBCPN 
          READ      CONTROLF,HUND07;*81,SNCOSFYN
.
          COMPARE   ONE,HPATIENT
          GOTO      NOPAT1 IF NOT EQUAL
.
          PACK      KEY29,PTCNDCLM,SP6,SP3,PHITEM,CURRDATE            *C-233046
          CALL      PATMCHRD                * read Misc.Charges file 
          IF        EXIT = 1 
            MOVE      "Invalid Misc code",MDESC
          ENDIF
.
NOPAT1    MOVE      DSMALL,DIM51
          LOAD      DIM51 USING HCOSLAB OF DSMALL,DLARGE,DTINY
.
          MOVE      DSMALL,DIM52
          LOAD      DIM52 USING HCATLAB OF DSMALL,DLARGE,DTINY
.
          MOVE      DSMALL,DIM53
          LOAD      DIM53 USING HPHALAB OF DSMALL,DLARGE,DTINY
.
          MOVE      PRDESC0,PRDESC
          LOAD      PRDESC USING SNCOPRSQ OF PRDESC1
.
          MOVE      DNO,DANS1
          LOAD      DANS1,SNCOCCOM,DYES
.
          MOVE      DNO,DANS2
          LOAD      DANS2,SNCOSFYN,DYES
.
          MOVE      SNCOBCPN,DANS3
          MOVE      PRTRDSC0,PRTRDESC
          LOAD      PRTRDESC,SNCOBCPN,PRTRDSC1
.
          DISPLAY   *P50:3,*EF,*V2LON,"User Screen 2",*HOFF:
                    *P1:4,*V2LON," 1.",*HOFF," Miscellaneous Item Code:":
                    *P1:5,*V2LON," 2.",*HOFF," Stocktake Factor       :":
                    *P1:6,*V2LON," 3.",*HOFF," Labels Across Page     :":
                    *P1:7,*V2LON," 4.",*HOFF," Labels to Print        :":
                    *P1:8,*V2LON," 5.",*HOFF," Label Size For CCentre :":
                    *P1:9,*V2LON," 6.",*HOFF," Label Size For Catalog :":
                    *P1:10,*V2LON," 7.",*HOFF," Label Size For Pharmacy:":
                    *P1:11,*V2LON," 8.",*HOFF," Selected P/O Start No. :":
                    *P1:12,"    Selected P/O End   No. :":
                    *P1:13,*V2LON," 9.",*HOFF," Consumption Period days:":
                    *P1:14,*V2LON,"10.",*HOFF," A.D.U Period (Months)  :":
                    *P1:15,*V2LON,"11.",*HOFF," Issues Mark Up Percent :":
                    *P1:16,*V2LON,"12.",*HOFF," P/R Creation Sequence  :":
                    *P1:17,*V2LON,"13.",*HOFF," EAN or PEG Bureau ID   :":
                    *P1:18,*V2LON,"14.",*HOFF," Catalog Comments on SRO:":
                    *P1:19,*V2LON,"15.",*HOFF:
                                  " Confirm START to FINISH print (Y/N):":
                    *P1:20,*V2LON,"16.",*HOFF," Barcode Printer        :":
                    *P30:4,*V2LON,PHITEM,*HOFF,*P40:4,MDESC:
                    *P30:5,*V2LON,HFACTOR:
                    *P30:6,HLABPG,*P30:7,HLABPRT:
                    *P30:8,DIM51,*P30:9,DIM52,*P30:10,DIM53:
                    *P30:11,HSTRORD,*P30:12,HFINORD:
                    *P30:13,HCONPERD,*P30:14,HADUPERD:
                    *P30:15,INCOMUPC:
                    *P30:16,SNCOPRSQ,*P35:16,PRDESC:
                    *P30:17,SNCOHEAN:
                    *P30:18,DANS1:
                    *P42:19,DANS2:
                    *P30:20,DANS3,*P35:20,PRTRDESC
          RETURN
.
DISPIBA   READ      CONTROLF,TWENTY3;*95,HACCNT,*120,HBACK,*135,HPATIENT:
                                     *143,HDEFWH,*157,HPHARM:
                                     *194,HISSUE,HIMPREST               
          READ      CONTROLF,TWENTY4;*135,HACCDATA,*177,INCOCASH
          READ      CONTROLF,TWENTY6;*10,PHPATDAT,*248,HPURCHP
          READ      CONTROLF,SIXTY3;*67,INCOCATE,INCONCAT,*85,INCOSTYP:
                                    *143,HNONUSAG,*148,HAUTOREQ,SNCOPTYP:
                                    *231,SNCOIMPQ
          READ      CONTROLF,HUND07;*1,HFMSDRCT,*41,HFMSBTCH
.
          MOVE      DNO,DANS1
          LOAD      DANS1 USING HPHARM OF DYES,DNO
.
          MOVE      DNO,DANS2
          LOAD      DANS2 USING HACCNT OF DYES,DNO
.
          LOAD      ACCDIR USING HACCNT OF HACCDATA,SP30
.
          MOVE      SP30,PATDIR
          LOAD      PATDIR USING HPATIENT OF PHPATDAT
.
          MOVE      DNO,DANS4
          LOAD      DANS4 USING HBACK OF DYES,DNO
.
          MOVE      DNO,DANS5
          LOAD      DANS5 USING SNCOIMPQ OF DYES,DNO
.
          MOVE      HRHPO,PPDESC
          LOAD      PPDESC,HPURCHP,STVMPO,MERPO,SAIPO,HWKPO,MODPO,SARPO,DARPO:
                                   STHPO,MATPO,SVLPO,EPWPO,SABPO,ACCPO,BUDPO:
                                   STGPO,PHSPO,LASPO,MHGPO
.
          MOVE      DNO,DANS8
          LOAD      DANS8 USING HPATIENT OF DYES,DNO
.
          MOVE      SP20,WADESC20
          MOVE      HDEFWH,KEY5
          CALL      RDSIWA1
          MOVE      SIWADES,WADESC20
.
          IF        HNONUSAG<1 | HNONUSAG>2
            MOVE      ONE,HNONUSAG
          ENDIF
          LOAD      HNONDESC,HNONUSAG,HNONRECV,HNONPURC
.
          BRANCH    INCOCATE,CATE10,CATE20,CATE30
          MOVE      "Alphanumeric              ",CATTYPE
          GOTO      CATE90
CATE10    MOVE      "Numeric Only              ",CATTYPE
          GOTO      CATE90
CATE20    MOVE      "Computer Generated        ",CATTYPE
          GOTO      CATE90
CATE30    MOVE      "Generated with Check Digit",CATTYPE
CATE90
          MOVE      DNO,DANS9
          LOAD      DANS9,HAUTOREQ,DYES
          MOVE      STANDPO,PPDESC1
          LOAD      PPDESC1,SNCOPTYP,ACCPO
.
          DISPLAY   *P50:3,*EF,*V2LON,"I.B.A Screen 1",*HOFF:
                    *P1:4,*V2LON," 1.",*HOFF," Running Pharmacy Module     ":
                    "  (Y/N):":
                    *P1:5,*V2LON," 2.",*HOFF," Running Accounting System   ":
                    "  (Y/N):":
                    *P1:6,*V2LON," 3.",*HOFF," Using Backorder System     ":
                    "   (Y/N):":
                    *P1:7,*V2LON," 4.",*HOFF," Default Single Warehouse Co":
                    "de      :":
                    *P1:8,*V2LON," 5.",*HOFF," Running Patient/Billing Sys":
                    "tem(Y/N):":
                    *P1:9,*V2LON," 6.",*HOFF," Purchase Order Print Format":
                    "        :":
                    *P1:10,*V2LON," 7.",*HOFF," Take Non-Stock & Non-Catalog":
                    " Usage  ":
                    *P1:11,"    at (R)eceival or (P)urchase Time   :":
                    *P1:12,*V2LON," 8.",*HOFF," Catalog Code Type        ":
                    "          :":
                    *P1:13,*V2LON," 9.",*HOFF," Next Available Catalog Co":
                    "de        :":
                    *P1:14,*V2LON,"10.",*HOFF," Next Issue Number for Ret":
                    "urns      :":
                    *P1:15,*V2LON,"11.",*HOFF," Next Issue Number for Impr":
                    "ests     :":
                    *P1:16,*V2LON,"12.",*HOFF," System 0=INV 1=SIN (for AP":
                    "S progs) :":
                    *P1:17,*V2LON,"13.",*HOFF," Requisition Number Generat":
                    "ion      :":
                    *P1:18,*V2LON,"14.",*HOFF," Picking Sheet Layout      ":
                    "         :":
                    *P1:19,*V2LON,"15.",*HOFF," Barcode Input Quantity Req":
                    "uired    :":                                      *C-90302
                    *P1:20,*V2LON,"16.",*HOFF," FMS controlf Directory    ":
                    "         :":
                    *P1:21,*V2LON,"17.",*HOFF," FMS batch Directory       ":
                    "         :":

                    *P42:4,*V2LON,DANS1:
                    *P42:5,DANS2,*HOFF,*P60:5,ACCDIR,*P42:6,*V2LON,DANS4:
                    *P42:7,HDEFWH,*HOFF,*P50:7,WADESC20:
                    *P42:8,*V2LON,DANS8,*HOFF,*P60:8,PATDIR:
                    *P42:9,*V2LON,HPURCHP,*HOFF,*P50:9,PPDESC:
                    *P42:11,*V2LON,HNONDESC:
                    *P42:12,CATTYPE,*P42:13,INCONCAT:
                    *P42:14,HISSUE,*P42:15,HIMPREST,*P42:16,INCOSTYP:
                    *P42:17,DANS9:
                    *P42:18,SNCOPTYP,*HOFF,*P50:18,PPDESC1:
                    *P42:19,*V2LON,DANS5:
                    *P42:20,*V2LON,HFMSDRCT:
                    *P42:21,*V2LON,HFMSBTCH
.
          COMPARE   ONE,HACCNT
          RETURN    IF NOT EQUAL
          DISPLAY   *P50:6,"(C)ash or (A)ccrual : "
          MOVE      INTER1,INTER
          LOAD      INTER,INCOCASH,INTER2
          DISPLAY   *P72:6,*V2LON,INTER;
          RETURN
.
DISPIBA2  READ      CONTROLF,TWENTY3;*248,HAVGCOST
          READ      CONTROLF,TWENTY4;*164,HFIVCOLM,HLASTCIN:
                                     *198,HACCCODE:
                                     *227,HRECPRT
          READ      CONTROLF,TWENTY6;*194,INCNSOSI
          READ      CONTROLF,SIXTY3;*141,INCNNATO,*240,SNCOPURC
          READ      CONTROLF,SIXTY7;*203,INCNBLON
.
          LOAD      AVDESC USING HAVGCOST OF RECCOST,INVCOST
.
          LOAD      CNDESC USING HLASTCIN OF LASTPO,LASTINV
.
          LOAD      HACCTDES USING HACCCODE OF MODHACC,WARHACC
.
          MOVE      STANDPO TO PODESC
          LOAD      PODESC FROM HRECPRT OF STVMPO,RECCOMM
.
          MOVE      DNO,DANS11
          LOAD      DANS11 USING HFIVCOLM OF DYES,DNO
.
          MOVE      DNO,DANS12
          LOAD      DANS12 USING INCNSOSI OF DYES,DNO
.
          MOVE      DNO,DANS13
          LOAD      DANS13 USING INCNBLON OF DYES,DNO
.
          MOVE      DNO,DANS14
          LOAD      DANS14,INCNNATO,DYES
.
          MOVE      DNO,DANS15
          LOAD      DANS15,SNCOPURC,DYES
.
          DISPLAY   *P50:3,*EF,*V2LON,"I.B.A Screen 2",*HOFF:
                    *P1:4,*V2LON," 1.",*HOFF," When Is Average Cost Calcul":
                    "ated    :":
                    *P1:5,*V2LON," 2.",*HOFF," Update Last Cost           ":
                    "        :":
                    *P1:6,*V2LON," 3.",*HOFF," Breakup of A/C Codes For Tr":
                    "ansmit  :":
                    *P1:7,*V2LON," 4.",*HOFF," Receival Print Format     ":
                    "         :":
                    *P1:8,*V2LON," 5.",*HOFF," 5 Column Imprest Worksheet":
                    "s  (Y/N) :":
                    *P1:9,*V2LON," 6.",*HOFF," Using SOS Transfer        ":
                    "   (Y/N) :":
                    *P1:10,*V2LON," 7.",*HOFF," Using BLS Transfer        ":
                    "   (Y/N) :":
                    *P1:11,*V2LON," 8.",*HOFF," Using Nato Codes          ":
                    "   (Y/N) :":
                    *P1:12,*V2LON," 9.",*HOFF," Inc. GST in Purchase Analy":
                    "sis(Y/N) :":
                    *P42:4,*V2LON,HAVGCOST,*HOFF,*P50:4,AVDESC:
                    *P42:5,*V2LON,HLASTCIN,*HOFF,*P50:5,CNDESC:
                    *P42:6,*V2LON,HACCCODE,*HOFF,*P50:6,HACCTDES:
                    *P42:7,*V2LON,HRECPRT,*HOFF,*P50:7,PODESC:
                    *P42:8,*V2LON,DANS11,*P42:9,DANS12:
                    *P42:10,DANS13,*P42:11,DANS14,*P42:12,DANS15
          RETURN
.
DISQUOT1  READ      CONTROLF,SIXTY3;*132,INCOSIN7,INCOSI40:
                                    *146,INCOSTEX,HDISPBO:
                                    *150,SNCOPRS,SNCOPPR,SNCOIMS:
                                    *232,SNCOAUBM,SNCOCAT6,*241,SNCOMDPC:
                                    *242,SNCOEMAL
.
          MOVE      ZERO,F1
          MOVE      INCOSIN7,F1
          MOVE      DNO,DANS9
          LOAD      DANS9 USING F1 OF DYES,DNO
.
          MOVE      ZERO,F1 
          MOVE      INCOSI40,F1 
          MOVE      DNO,DANS10
          LOAD      DANS10 USING F1 OF DYES,DNO
.
          MOVE      DNO,DANS11
          LOAD      DANS11,HDISPBO,DYES
.
          MOVE      DNO,DANS12
          LOAD      DANS12,INCOSTEX,DYES
.
          MOVE      DNO,DANS13
          LOAD      DANS13,SNCOPRS,DYES
.
          MOVE      DNO,DANS14
          LOAD      DANS14,SNCOPPR,DYES
.
          MOVE      DNO,DANS15
          LOAD      DANS15,SNCOIMS,DYES
.
          MOVE      DNO,DANS16
          LOAD      DANS16,SNCOAUBM,DYES
.
          MOVE      DNO,DANS17
          LOAD      DANS17,SNCOCAT6,DYES
.
          MOVE      DNO,DANS18
          LOAD      DANS18,SNCOMDPC,DYES
.
          MOVE      DNO,DANS19
          LOAD      DANS19,SNCOEMAL,DYES
.
          DISPLAY   *P50:3,*EF,*V2LON,"I.B.A. Special Screen 1",*HOFF:
                 *P5:4,*V2LON,*ULON,"Quote",*HOFF,SP1,*V2LON,*ULON,"  Date  ":
                    *P1:5,*HOFF," 1.  ",*V2LON,"7648 24/06/93",*HOFF:
                    " Non-Stock in IBASIN07       (Y/N) : ":
                    *V2LON,*P56:5,DANS9:
                    *P1:6,*HOFF," 2.  ",*V2LON,"7740 02/08/93",*HOFF:
                    " Imprest - Enter Qty Required(Y/N) : ":
                    *V2LON,*P56:6,DANS10:
                    *P1:7,*HOFF," 3.  ",*V2LON,"8383 04/05/95",*HOFF:
                    " Automatic Backorder in SIN41(Y/N) : ":
                    *V2LON,*P56:7,DANS11:
                    *P1:8,*HOFF," 4.  ",*V2LON,"HSH  03/10/95",*HOFF:
                    " Barcode Stocktake Exp. SIN36(Y/N) : ":
                    *V2LON,*P56:8,DANS12:
                    *P1:9,*HOFF," 5.  ",*V2LON,"8703 21/10/95",*HOFF:
                    " Print Return of Stock. SIN34(Y/N) : ":
                    *V2LON,*P56:9,DANS13:
                    *P1:10,*HOFF," 6.  ",*V2LON,"8703 21/10/95",*HOFF:
                    " Print Proc. Receival   SIN57(Y/N) : ":
                    *V2LON,*P56:10,DANS14:
                    *P1:11,*HOFF," 7.  ",*V2LON,"8703 21/10/95",*HOFF:
                    " Min Stock Warining SIN31&41 (Y/N) : ":
                    *V2LON,*P56:11,DANS15:
                    *P1:12,*HOFF," 8.  ",*V2LON,"MHG  10/08/99",*HOFF:
                    " Auto B/O must be <= Max Qty (Y/N) : ":
                    *V2LON,*P56:12,DANS16:
                    *P1:13,*HOFF," 9.  ",*V2LON,"9468 19/08/99",*HOFF:
                    " Allow 6 Char Catalog Codes  (Y/N) : ":
                    *V2LON,*P56:13,DANS17:
                    *P1:14,*HOFF,"10. ",*V2LON,"15040 17/03/03",*HOFF:
                    " Multiple Delivery Points    (Y/N) : ":
                    *V2LON,*P56:14,DANS18:
                    *P1:15,*HOFF,"11. ",*V2LON," SOC  22/05/03",*HOFF:
                    " J&J Virtual Integration     (Y/N) : ":
                    *V2LON,*P56:15,DANS19
          RETURN
.
DISPSOS1  READ      CONTROLF,TWENTY4;*228,SNCOVHA4,SNCOVHA5
          READ      CONTROLF,TWENTY6;*1,INCNVHAD,*30,INCNVHAC,INCNVHAS,*47:
                                     INCNVHAN,INCNTRAN,INCNCVHA:
                                     INCNTVHA,INCNVHAM,INCNTRAL:
                                     INCNTRPR,INCNSOSD,*206,INCNRVHA,HVHAPART
          READ      CONTROLF,SIXTY3;*86,INCNTVH2,INCNVHA2,*140,INCNOVHA:
                                    *183,SNCOVHA3,SNCOTVH3:
                                    *230,SNCOMMOD
          PACK      HVHAPART,HVHAPART,SP70
          REP       " 0",HVHAPART
.
          DISPLAY   *P50:3,*EF,*V2LON,"SOS Interface Screen 1",*HOFF:
                  *P1:4,*V2LON," 1.",*HOFF," HSA Customer Code 1             :":
                  *P1:5,*V2LON," 2.",*HOFF," HSA Supplier Code               :":
                  *P1:6,*V2LON," 3.",*HOFF," HSA Transmission Date (DDMMCCYY):":
                  *P1:7,*V2LON," 4.",*HOFF," HSA Next Transmission Number    :":
                  *P1:8,*V2LON," 5.",*HOFF," Port Using Modem                :":
                  *P1:9,*V2LON," 6.",*HOFF," Command for HSA connection      :":
                 *P1:10,*V2LON," 7.",*HOFF," Command for HSA transfer (1)    :":
                 *P1:11,*V2LON," 8.",*HOFF," Command for HSA transfer (2)    :":
                 *P1:12,*V2LON," 9.",*HOFF," Message for HSA SOS orders      :":
                 *P1:13,*V2LON,"10.",*HOFF," Transmit all HSA orders         :":
                 *P1:14,*V2LON,"11.",*HOFF," Transmit printed orders only    :":
                 *P1:15,*V2LON,"12.",*HOFF," S.O.S. Transfer Directory       :":
                 *P1:16,*V2LON,"13.",*HOFF," Command for HSA Receive Orders  :":
                 *P1:17,*V2LON,"14.",*HOFF," HSA Code to use (0=cust, 1=vend):":
                 *P1:18,*V2LON,"15.",*HOFF," Order Method (1=Direct 2=Return):":
                 *P1:19,*V2LON,"16.",*HOFF," HSA Customer Code 3             :":
                 *P1:20,*V2LON,"17.",*HOFF," Command for HSA transfer (3)    :":
                 *P1:21,*V2LON,"18.",*HOFF," Using Multiple Modem Access(Y/N):":
                 *P1:22,*V2LON,"19.",*HOFF," HSA Customer Code 4             :":
                 *P1:23,*V2LON,"20.",*HOFF," HSA Customer Code 5             :":
                    *P40:4,*V2LON,INCNVHAC,*HOFF:
                    *P50:4,"Code 2 : ",*V2LON,INCNVHA2:
                    *P40:5,INCNVHAS
          MOVE      INCNVHAS,KEY5          * Display description
          CALL      RDAPMA1
.
          BRANCH    OVRCD,DISPSOSA
.
          DISPLAY   *P50:5,APMASN1
.
DISPSOSA  UNPACK    INCNVHAD INTO CCENT,CYEAR,CMON,CDAY
          MOVE      SIX,CVERT
          MOVE      "40",CCOL
          MOVE      ONE,CCENTRY
          CALL      DSPDATE
          DISPLAY   *P40:7,*V2LON,INCNVHAN:
                    *P40:8,INCNTRAN:
                    *P40:9,INCNCVHA:
                    *P40:10,INCNTVHA:
                    *P40:11,INCNTVH2:
                    *P40:12,INCNVHAM:
                    *P40:16,INCNRVHA:
                    *P40:17,HVHAPART:
                    *P40:18,INCNOVHA:
                    *P40:19,SNCOVHA3:
                    *P40:20,SNCOTVH3:
                    *P40:22,SNCOVHA4:
                    *P40:23,SNCOVHA5;
.
          IF        SNCOMMOD=1
            DISPLAY   *P40:21,*V2LON,"Yes";
          ELSE
            DISPLAY   *P40:21,*V2LON,"No ";
          ENDIF
.
          BRANCH    INCNTRAL,DISPSOSB
          DISPLAY   *P40:13,*V2LON,"No ";
          GOTO      DISPSOSC
.
DISPSOSB  DISPLAY   *P40:13,*V2LON,"Yes";
.
DISPSOSC  BRANCH    INCNTRPR,DISPSOSD
.
          DISPLAY   *P40:14,*V2LON,"No ";
          GOTO      DISPSOSZ
.
DISPSOSD  DISPLAY   *P40:14,*V2LON,"Yes";
.
DISPSOSZ  DISPLAY   *P40:15,*V2LON,INCNSOSD;
          RETURN
.
DISPSOS2  READ      CONTROLF,SIXTY7;*216,SNCOVHA6,SNCOVHA7,SNCOVHA8:
                                         SNCOVHA9
.
          DISPLAY   *P50:3,*EF,*V2LON,"SOS Interface Screen 2",*HOFF:
                  *P1:4,*V2LON," 1.",*HOFF," HSA Customer Code 6             :":
                  *P1:5,*V2LON," 2.",*HOFF," HSA Customer Code 7             :":
                  *P1:6,*V2LON," 3.",*HOFF," HSA Customer Code 8             :":
                  *P1:7,*V2LON," 4.",*HOFF," HSA Customer Code 9             :":
                    *P40:4,*V2LON,SNCOVHA6:
                    *P40:5,SNCOVHA7:
                    *P40:6,SNCOVHA8:
                    *P40:7,SNCOVHA9
          RETURN
+
.
.     Subroutines to update each of the screens
.
UPDELV    MOVE      ZERO,OVRCD
          CALL      MAINQST
          MOVE      CCITEM,FIELD
          COMPARE   ZERO,FIELD
          RETURN    IF EQUAL
          GOTO      OVERCOND IF LESS
          BRANCH    FIELD OF KDELEV,KDELEV,KDELEV,KDELEV:
                    KDELEV,KDELEV,KDELEV,KDELEV
          BEEP
          GOTO      UPDELV
.
KDELEV    MOVE      FIELD,CVERT
          ADD       FOUR,CVERT
          PACK      HADEL WITH UNDLN,UNDLN
          KEYIN     *P24:CVERT,*V2LON,*EL,HADEL,*P24:CVERT,*DV,HADEL
.
          ENDSET    HADEL
          APPEND    SP30,HADEL
          RESET     HADEL
.
          STORE     HADEL USING FIELD OF HADEL1,HADEL2,HADEL3,HADEL4:
                    HADEL5,HADEL6,HADEL7,HADEL8
          MOVE      ZERO,OVRCD
          GOTO      UPDELV
.
UPAUD     CALL      MAINQST
          MOVE      CCITEM,FIELD
          COMPARE   ZERO,FIELD
          RETURN IF LESS
          IF        @EQUAL
            MOVE      ZERO,OVRCD
            RETURN
          ENDIF
.
          COMPARE   "18",FIELD
          GOTO      EKAUD IF NOT LESS
.
          MOVE      THREE,CVERT
          MOVE      "26",CCOL
          ADD       FIELD,CVERT
.
KAUDUP    KEYIN     *PCCOL:CVERT,*DV,SP10,*PCCOL:CVERT,*V2LON,ANS;
          MATCH     ANSY,ANS
          GOTO      KAUDYES IF EQUAL
.
          GOTO      KAUDNO
.
EKAUD     BEEP
          GOTO      UPAUD
.
KAUDYES   MOVE      DYES,DANSX
          MOVE      ONE,AUDFLAG
          GOTO      KCHGAUD
.
KAUDNO    MOVE      DNO,DANSX
          MOVE      ZERO,AUDFLAG
.
KCHGAUD   STORE     AUDFLAG USING FIELD OF HAUDA,HAUDB,HAUDC,HAUDD,HAUDE:
                                           HAUDF,HAUDG,HAUDH,HAUDJ,HAUDO:
                                           HAUDP,HAUDR,HAUDS,HAUDW,SNCOCA1:
                                           SNCOCA2,SNCOCA3
          DISPLAY   *PCCOL:CVERT,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPAUD
.
UPUSR1    MOVE      ZERO,OVRCD
          CALL      MAINQST
          MOVE      CCITEM,FIELD
          COMPARE   ZERO,FIELD
          RETURN    IF EQUAL
          GOTO      OVERCOND IF LESS
          BRANCH    FIELD OF KUSR11,KUSR12,KUSR13,KUSR14,KUSR15,KUSR16:
                             KUSR17,KUSR18,KUSR19,KUSR110,KUSR111,KUSR112:
                             KUSR113,KUSR114,KUSR115,KUSR116,KUSR117,KUSR118:
                             KUSR119
          BEEP
          GOTO      UPUSR1
.
KUSR11    PACK      HNAME WITH UNDLN,UNDLN
          KEYIN     *P30:4,*DV,HNAME:
                    *P30:4,*V2LON,HNAME,*P30:4,*DV,HNAME
.
          ENDSET    HNAME
          APPEND    SP30,HNAME
          APPEND    SP30,HNAME
          RESET     HNAME
          MOVE      ZERO,OVRCD
          GOTO      UPUSR1
.
KUSR12    PACK      HSHORT WITH UNDLN,UNDLN
          KEYIN     *P30:5,*DV,HSHORT:
                    *P30:5,*V2LON,HSHORT,*P30:5,*DV,HSHORT
.
          ENDSET    HSHORT
          APPEND    SP30,HSHORT
          RESET     HSHORT
          MOVE      ZERO,OVRCD
          GOTO      UPUSR1
.
KUSR13    PACK      CHADD1 WITH UNDLN,UNDLN
          KEYIN     *P30:6,*DV,CHADD1:
                    *P30:6,*V2LON,CHADD1,*P30:6,*DV,CHADD1
.
          ENDSET    CHADD1
          APPEND    SP30,CHADD1
          RESET     CHADD1
          MOVE      ZERO,OVRCD
          GOTO      UPUSR1
.
KUSR14    PACK      CHADD2 WITH UNDLN,UNDLN
          KEYIN     *P30:7,*DV,CHADD2:
                    *P30:7,*V2LON,CHADD2,*P30:7,*DV,CHADD2
          ENDSET    CHADD2
          APPEND    SP30,CHADD2
          RESET     CHADD2
          MOVE      ZERO,OVRCD
          GOTO      UPUSR1
.
KUSR15    KEYIN     *P30:8,*EL,*DV,UNDLN4:
                    *P30:8,*V2LON,CHPOST,*P30:8,*DV,CHPOST
          MATCH     "2000",CHPOST
          GOTO      EKUSR15 IF LESS
          MOVE      ZERO,OVRCD
          GOTO      UPUSR1
.
EKUSR15   DISPLAY   *P40:8,*EL,*B,*V2LON:
                    "** Invalid Postcode **",*W2;
          GOTO      KUSR15
.
KUSR16    MOVE      UNDLN,CHTELEB
          KEYIN     *P30:9,*DV,CHTELEB:
                    *P30:9,*V2LON,CHTELEB,*P30:9,*DV,CHTELEB
.
          ENDSET    CHTELEB
          APPEND    SP10,CHTELEB
          RESET     CHTELEB
          MOVE      ZERO,OVRCD
          GOTO      UPUSR1
.
KUSR17    MOVE      UNDLN,SNCOFAXN
          KEYIN     *P30:10,*DV,SNCOFAXN:
                    *P30:10,*V2LON,SNCOFAXN,*P30:10,*DV,SNCOFAXN
.
          ENDSET    SNCOFAXN
          APPEND    SP10,SNCOFAXN
          RESET     SNCOFAXN
          MOVE      ZERO,OVRCD
          GOTO      UPUSR1
.
KUSR18    KEYIN     *P30:11,*DV,UNDLN1:
                    *P30:11,*V2LON,HORDDES,*P30:11,*DV,HORDDES
          MOVE      ZERO,OVRCD
          GOTO      UPUSR1
.
KUSR19    KEYIN     *P30:12,*DV,UNDLN2:
                    *P30:12,*V2LON,HABCLEV1,*P30:12,*DV,HABCLEV1
          MOVE      ZERO,OVRCD
          GOTO      UPUSR1
.
KUSR110   KEYIN     *P30:13,*DV,UNDLN2:
                    *P30:13,*V2LON,HABCLEV2,*P30:13,*DV,HABCLEV2
          MOVE      ZERO,OVRCD
          GOTO      UPUSR1
.
KUSR111   DISPLAY   *P1:24,*EL,*V2LON,ONE,*HOFF," = Allocate by Size, ":
                    *V2LON,TWO,*HOFF," = Allocate by Date"
          KEYIN     *P30:14,*EL,*V2LON,HALLOCBO
.
          BRANCH    HALLOCBO OF KUSR111A,KUSR111A
.
          BEEP
          GOTO      KUSR111
.
KUSR111A  LOAD      BODESC USING HALLOCBO OF SIZEBO,DATEBO
          DISPLAY   *P1:24,*EL,*P40:14,*V2LON,BODESC
          MOVE      ZERO,OVRCD
          GOTO      UPUSR1
.
KUSR112   KEYIN     *P30:15,*EL,*V2LON,ANS
          REP       UPPLOW,ANS
          CMATCH    ANSY,ANS
          GOTO      KUSR112N IF NOT EQUAL
.
          MOVE      ONE,HPOWHDFT
          GOTO      KUSR112D
.
KUSR112N  MOVE      ZERO,HPOWHDFT
.
KUSR112D  MOVE      DNO,DANSX
          LOAD      DANSX,HPOWHDFT,DYES
          DISPLAY   *P30:15,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPUSR1
.
KUSR113   KEYIN     *P30:16,*EL,*V2LON,ANS
          REP       UPPLOW,ANS
          CMATCH    ANSY,ANS
          GOTO      KUSR113N IF NOT EQUAL
.
          MOVE      ONE,SNCO40PL
          GOTO      KUSR113D
.
KUSR113N  MOVE      ZERO,SNCO40PL
.
KUSR113D  MOVE      DNO,DANSX
          LOAD      DANSX,SNCO40PL,DYES
          DISPLAY   *P30:16,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPUSR1
.
KUSR114   KEYIN     *P30:17,*EL,*V2LON,ANS
          REP       UPPLOW,ANS
          CMATCH    ANSY,ANS
          GOTO      KUSR114N IF NOT EQUAL
.
          MOVE      ONE,SNCOKWD 
          GOTO      KUSR114D
.
KUSR114N  MOVE      ZERO,SNCOKWD 
.
KUSR114D  MOVE      DNO,DANSX
          LOAD      DANSX,SNCOKWD,DYES
          DISPLAY   *P30:17,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPUSR1
.
KUSR115   KEYIN     *P30:18,*DV,UNDLN3:
                    *P30:18,*V2LON,SNCOSMX,*P30:18,*DV,SNCOSMX
          MOVE      ZERO,OVRCD
          GOTO      UPUSR1
.
KUSR116   KEYIN     *P30:19,*EL,*V2LON,ANS
          REP       UPPLOW,ANS
          CMATCH    ANSY,ANS
          GOTO      KUSR116N IF NOT EQUAL
.
          MOVE      ONE,SNCOCORP 
          GOTO      KUSR116D
.
KUSR116N  MOVE      ZERO,SNCOCORP 
.
KUSR116D  MOVE      DNO,DANSX
          LOAD      DANSX,SNCOCORP,DYES
          DISPLAY   *P30:19,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPUSR1
.
KUSR117   KEYIN     *P30:20,*EL,*V2LON,ANS
          REP       UPPLOW,ANS
          CMATCH    ANSY,ANS
          GOTO      KUSR117N IF NOT EQUAL
.
          MOVE      ONE,SNCOASPL 
          GOTO      KUSR117D
.
KUSR117N  MOVE      ZERO,SNCOASPL 
.
KUSR117D  MOVE      DNO,DANSX
          LOAD      DANSX,SNCOASPL,DYES
          DISPLAY   *P30:20,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPUSR1
.
KUSR118   KEYIN     *P30:21,*EL,*V2LON,ANS
          REP       UPPLOW,ANS
          CMATCH    ANSY,ANS
          GOTO      KUSR118N IF NOT EQUAL
.
          MOVE      ONE,SNCOBSEQ 
          GOTO      KUSR118D
.
KUSR118N  MOVE      ZERO,SNCOBSEQ 
.
KUSR118D  MOVE      DNO,DANSX
          LOAD      DANSX,SNCOBSEQ,DYES
          DISPLAY   *P30:21,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPUSR1
.
KUSR119   MOVE     THIRTY,CCOL
          MOVE     TWENTY2,CVERT
          CALL     KIBGSA00
          BRANCH   EXIT,KUSR119,KUSR119E
.
KUSR119D  MOVE     IBGSCODE,SNCOGSTC
          DISPLAY  *P30:22,*V2LON,SNCOGSTC,*HOFF,*P40:22,IBGSDESC
          MOVE     ZERO,OVRCD
          GOTO     UPUSR1
.
KUSR119E  MOVE     SP6,IBGSCODE
          MOVE     SP70,IBGSDESC
          GOTO     KUSR119D
.
.
UPUSR2    MOVE      ZERO,OVRCD
          CALL      MAINQST
          MOVE      CCITEM,FIELD
          COMPARE   ZERO,FIELD
          RETURN    IF EQUAL
          GOTO      OVERCOND IF LESS
          BRANCH    FIELD OF KUSR21,KUSR22,KUSR23,KUSR24,KUSR25:
                             KUSR26,KUSR27,KUSR28,KUSR29,KUSR210:
                             KUSR211,KUSR212,KUSR213,KUSR214,KUSR215:
                             KUSR216
          BEEP
          GOTO      UPUSR2
.
KUSR21    MOVE      SP9,PHITEM
          KEYIN     *P30:4,*EL,*V2LON,PHITEM
.
          ENDSET    PHITEM
          APPEND    SP9,PHITEM
          RESET     PHITEM
.
          CMATCH    EXITCHAR,PHITEM
          GOTO      ENDIT IF EQUAL
.
          COMPARE   ONE,HPATIENT
          GOTO      KUSR21D IF NOT EQUAL
.
          PACK      KEY29,PTCNDCLM,SP6,SP3,PHITEM,CURRDATE            *C-233046
          CALL      PATMCHRD                * read Misc.Charges file 
          IF        EXIT = 1 
            MOVE      "Invalid Misc code",MDESC
          ENDIF
.
          DISPLAY   *P40:4,*V2LON,MDESC
.
KUSR21D   MOVE      ZERO,OVRCD
          GOTO      UPUSR2
.
INVITEM   DISPLAY   *P1:24,*B,*EL:
                    "Invalid Code, Check Rate File - ";
          CALL      HITENTER
          GOTO      KUSR21
.
KUSR22    KEYIN     *P30:5,*EL,*DV,UNDLN4:
                    *P30:5,*V2LON,HFACTOR,*P30:5,*DV,HFACTOR
          COMPARE   ZERO,HFACTOR
          GOTO      EKUSR22 IF EQUAL
          GOTO      EKUSR22 IF LESS
.
          MOVE      ZERO,OVRCD
          GOTO      UPUSR2
.
EKUSR22   DISPLAY   *P1:24,*B,*EL:
                    "Invalid Stocktake Factor - ";
          CALL      HITENTER
          GOTO      KUSR22
.
KUSR23    KEYIN     *P30:6,*EL,*DV,UNDLN1:
                    *P30:6,*V2LON,HLABPG,*P30:6,*DV,HLABPG
          COMPARE   FOUR,HLABPG
          GOTO      EKUSR23 IF NOT LESS
          MOVE      ZERO,OVRCD
          GOTO      UPUSR2
.
EKUSR23   DISPLAY   *P1:24,*EL,*B:
                    "Invalid Number of Labels - ";
          CALL      HITENTER
          GOTO      KUSR23
.
KUSR24    KEYIN     *P30:7,*EL,*DV,UNDLN3:
                    *P30:7,*V2LON,HLABPRT,*P30:7,*DV,HLABPRT
          MOVE      ZERO,OVRCD
          GOTO      UPUSR2
.
KUSR25    MOVE      "8",CCOL
          CALL      GLAB0000
          MOVE      FORM1,HCOSLAB
          GOTO      UPUSR2
.
KUSR26    MOVE      "9",CCOL
          CALL      GLAB0000
          MOVE      FORM1,HCATLAB
          GOTO      UPUSR2
.
KUSR27    MOVE      "10",CCOL
          CALL      GLAB0000
          MOVE      FORM1,HPHALAB
          GOTO      UPUSR2
.
KUSR28    KEYIN     *P30:11,*EL,*DV,UNDLN7,*P30:11,*V2LON,HSTRORD:
                    *P30:11,*DV,HSTRORD
.
          COMPARE   ZERO,HSTRORD
          GOTO      AUSR28 IF EQUAL
.
          KEYIN     *P30:12,*EL,*DV,UNDLN7,*P30:12,*V2LON,HFINORD:
                    *P30:12,*DV,HFINORD
.
          COMPARE   ZERO,HFINORD
          GOTO      AUSR28 IF EQUAL
.
          COMPARE   HSTRORD,HFINORD
          GOTO      EKUSR28 IF LESS
          GOTO      EUSR28
.
EKUSR28   DISPLAY   *P1:24,*EL,*B:
                    "Finish Order No. > Start Order No. - ";
          CALL      HITENTER
          GOTO      KUSR28 
.
AUSR28    MOVE      ZERO,HSTRORD
          MOVE      ZERO,HFINORD
          DISPLAY   *P30:11,*V2LON,HSTRORD:
                    *P30:12,HFINORD
.
EUSR28    MOVE      ZERO,OVRCD
          GOTO      UPUSR2
.
.         STANDARD CONSUMPTION PERIOD IS NORMALLY 30 DAYS
.
KUSR29    MOVE      "30",HCONPERD
          KEYIN     *P30:13,*EL,*DV,HCONPERD:
                    *P30:13,*V2LON,*RV,HCONPERD,*P30:13,*DV,HCONPERD
.
          COMPARE   ONE,HCONPERD
          GOTO      INV29 IF LESS
.
          COMPARE   HCONPERD,NINETY
          GOTO      INV29 IF LESS
.
          MOVE      ZERO,OVRCD
          GOTO      UPUSR2
.
INV29     DISPLAY   *P1:24,*B,*EL:
                    "Valid Range is 1 - 90 Days - ";
          CALL      HITENTER
          GOTO      KUSR29
.
.        DEFAULT OF 3 MONTHS FOR CALCULATING Y.T.D USAGE FIGURES
.
KUSR210   MOVE      THREE,HADUPERD
          KEYIN     *P30:14,*EL,*DV,HADUPERD:
                    *P30:14,*V2LON,*RV,HADUPERD,*P30:14,*DV,HADUPERD
.
          COMPARE   ONE,HADUPERD
          GOTO      INV210 IF LESS
          COMPARE   "25",HADUPERD
          GOTO      INV210 IF NOT LESS
          MOVE      ZERO,OVRCD
          GOTO      UPUSR2
.
INV210    DISPLAY   *P1:24,*B,*EL:
                    " Valid Range is 1 - 24 Months - ";
          CALL      HITENTER
          GOTO      KUSR210
.
KUSR211   KEYIN     *P30:15,*V2LON,*RV,INCOMUPC:
                    *P30:15,*DV,INCOMUPC
          MOVE      ZERO,OVRCD
          GOTO      UPUSR2
.
KUSR212   DISPLAY   *P1:24,*EL,*V2LON,ZERO,*HOFF," = ",PRDESC0,", ": 
                    *V2LON,ONE,*HOFF," = ",PRDESC1
          KEYIN     *P30:16,*EL,*V2LON,SNCOPRSQ
.
          COMPARE   ZERO,SNCOPRSQ
          GOTO      KUSR212A IF EQUAL
          BRANCH    SNCOPRSQ OF KUSR212A
.
          BEEP
          GOTO      KUSR212
.
KUSR212A  MOVE      PRDESC0,PRDESC
          LOAD      PRDESC USING SNCOPRSQ OF PRDESC1
          DISPLAY   *P1:24,*EL,*P35:16,*V2LON,PRDESC
          MOVE      ZERO,OVRCD
          GOTO      UPUSR2
.
KUSR213   MOVE      UNDLN,SNCOHEAN
          KEYIN     *P30:17,*DV,SNCOHEAN:
                    *P30:17,*V2LON,SNCOHEAN,*P30:17,*DV,SNCOHEAN
.
          ENDSET    SNCOHEAN
          APPEND    SP10,SNCOHEAN
          RESET     SNCOHEAN
          MOVE      ZERO,OVRCD
          GOTO      UPUSR2
.
KUSR214   KEYIN     *P30:18,*EL,*V2LON,ANS
          REP       UPPLOW,ANS
          CMATCH    ANSY,ANS
          GOTO      KUSR214N IF NOT EQUAL
.
          MOVE      ONE,SNCOCCOM
          GOTO      KUSR214D
.
KUSR214N  MOVE      ZERO,SNCOCCOM
.
KUSR214D  MOVE      DNO,DANSX
          LOAD      DANSX,SNCOCCOM,DYES
          DISPLAY   *P30:18,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPUSR2
.
KUSR215   KEYIN     *P42:19,*EL,*V2LON,ANS
          REP       UPPLOW,ANS
          CMATCH    ANSY,ANS
          IF        @EQUAL
            MOVE      ONE,SNCOSFYN
          ELSE
            MOVE      ZERO,SNCOSFYN
          ENDIF
.
          MOVE      DNO,DANS2
          LOAD      DANS2,SNCOSFYN,DYES
          DISPLAY   *P42:19,*V2LON,DANS2
          MOVE      ZERO,OVRCD
          GOTO      UPUSR2
.
.******************************************** start of addition        *I-68672
KUSR216   KEYIN     *P30:20,*EL,*V2LON,ANS
          MOVE      ANS,DANS3
          REP       "0-1-",ANS
          MATCH     "-",ANS
          GOTO      KUSR216A IF EQUAL
.
          DISPLAY   *P1:24,*V2LON," 0",*HOFF,"=",PRTRDSC0:
                       ",",*V2LON," 1",*HOFF,"=",PRTRDSC1
          GOTO      KUSR216
.
KUSR216A
          MOVE      DANS3,SNCOBCPN
          MOVE      PRTRDSC0,PRTRDESC
          LOAD      PRTRDESC,SNCOBCPN,PRTRDSC1
          DISPLAY   *P30:20,*V2LON,DANS3,*P35:20,PRTRDESC
          MOVE      ZERO,OVRCD
          GOTO      UPUSR2
.********************************************   end of addition        *I-68672
.
.
GLAB0000  DISPLAY   *P1:21,"                    Selections ":
                    *P40:21,*V2LON,ANSS,*HOFF,". = ",DLSIZE1:
                    *P40:22,*V2LON,ANSL,*HOFF,". = ",DLSIZE2:
                    *P40:23,*V2LON,ANST,*HOFF,". = ",DLSIZE3
.
          KEYIN     *P30:CCOL,*EL,*V2LON,ANS,*P1:21,*EF
          PACK      ANS,ANS,SP70
          REP       UPPLOW,ANS
.
          MOVE      ONE,FORM1
          CMATCH    ANSL,ANS
          IF        @EQUAL
            MOVE      TWO,FORM1
          ENDIF
          CMATCH    ANST,ANS
          IF        @EQUAL
            MOVE      THREE,FORM1
          ENDIF
.
          LOAD      DIM52 USING FORM1 OF DSMALL,DLARGE,DTINY
          DISPLAY   *P30:CCOL,*V2LON,DIM52
          MOVE      ZERO,OVRCD
.
          RETURN
+
.             I.B.A SECURITY AREA
.
UPIBA     MOVE      ZERO,OVRCD
          CALL      MAINQST
          MOVE      CCITEM,FIELD
          COMPARE   ZERO,FIELD
          RETURN    IF EQUAL
          GOTO      OVERCOND IF LESS
          BRANCH    FIELD OF KIBA11,KIBA12,KIBA13,KIBA14,KIBA15,KIBA16:
                             KIBA17,KIBA18,KIBA19,KIBA110,KIBA111,KIBA112:
                             KIBA113,KIBA114,KIBA115,KIBA116,KIBA117
          BEEP
          GOTO      UPIBA
.
KIBA11    KEYIN     *P42:4,*EL,*V2LON,ANS
          CMATCH    ANSY,ANS
          GOTO      KIBA11N IF NOT EQUAL
          MOVE      ONE,HPHARM
          GOTO      KIBA11D
.
KIBA11N   MOVE      TWO,HPHARM
.
KIBA11D   LOAD      DANSX USING HPHARM OF DYES,DNO
          DISPLAY   *P42:4,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPIBA
.
KIBA12    KEYIN     *P42:5,*EL,*V2LON,ANS
          CMATCH    ANSY,ANS
          GOTO      KIBA12N IF NOT EQUAL
          MOVE      ONE,HACCNT
.
          DISPLAY   *P42:5,*V2LON,DYES
.
.       ALSO ENTER DIRECTORY OF ACCOUNTING
.
          DISPLAY   *P1:24,*EL,*V2LON:
                    "** Note : Directory must be full path & ":
                    " have a SLASH as the last character **"
.
          KEYIN     *P47:5,"Directory : ",*P60:5,*DV,UNDLN10,*DV,UNDLN10:
                    *P60:5,*V2LON,HACCDATA,*P60:5,*DV,HACCDATA
.
          ENDSET    HACCDATA
          APPEND    SP30,HACCDATA
          RESET     HACCDATA
.
. Enter Cash or Accrual
.
CASHA100  DISPLAY   *P50:6,"(C)ash or (A)ccrual : "
          KEYIN     *P72:6,*V2LON,ANS
          REP       UPPLOW,ANS
          REP       "0z1z2z3z4z5z6z7z8z9z",ANS
          REP       "C0A1",ANS
          TYPE      ANS
          GOTO      CASHA100 IF NOT EQUAL
.
          MOVE      ANS,INCOCASH
          MOVE      INTER1,INTER
          LOAD      INTER,INCOCASH,INTER2
          DISPLAY   *P72:6,*V2LON,INTER
          GOTO      KIBA12D
.
KIBA12N   MOVE      ZERO,HACCNT
          MOVE      SP30,HACCDATA
          DISPLAY   *P42:5,*V2LON,DNO
.
KIBA12D   MOVE      ZERO,OVRCD
          GOTO      UPIBA
.
KIBA13    KEYIN     *P42:6,*DV,SP3,*P42:6,*V2LON,ANS
          CMATCH    ANSY,ANS
          GOTO      KIBA13N IF NOT EQUAL
          MOVE      ONE,HBACK
          GOTO      KIBA13D
.
KIBA13N   MOVE      TWO,HBACK
.
KIBA13D   LOAD      DANSX USING HBACK OF DYES,DNO
          DISPLAY   *P42:6,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPIBA
.
KIBA14    KEYIN     *P42:7,*EL,*DV,UNDLN5:
                    *P42:7,*V2LON,HDEFWH
.
          MOVE      SP20,WADESC20
          ENDSET    HDEFWH
          APPEND    SP5,HDEFWH
          RESET     HDEFWH
.
          CMATCH    EXITCHAR,HDEFWH
          GOTO      KIBA14Y IF EQUAL
.
          MOVE      HDEFWH,KEY5
          CALL      RDSIWA1
          BRANCH    OVRCD OF NOHWARE
          MOVE      SIWADES,WADESC20
.
KIBA14O   DISPLAY   *P42:7,*V2LON,HDEFWH,*HOFF,*P50:7,WADESC20
          MOVE      ZERO,OVRCD
          GOTO      UPIBA
.
KIBA14Y   MOVE      SP5,HDEFWH
          MOVE      SP20,WADESC20
          GOTO      KIBA14O
.
NOHWARE   DISPLAY   *P1:24,*B,*EL:
                    "Invalid Warehouse - ";
          CALL      HITENTER
          GOTO      KIBA14
.
KIBA15    KEYIN     *P42:8,*EL,*V2LON,ANS
          CMATCH    ANSY,ANS
          GOTO      KIBA15N IF NOT EQUAL
          MOVE      ONE,HPATIENT
.
          DISPLAY   *P42:8,*V2LON,DYES
.
.       ALSO ENTER DIRECTORY OF PATIENT
.
          DISPLAY   *P1:24,*EL,*V2LON:
                    "** Note : Patient Directory must be full path & ":
                    " must end with a SLASH **"
.
          KEYIN     *P46:8,"Controlf Dir: ",*P60:8,*V2LON,PHPATDAT
.
          ENDSET    PHPATDAT
          APPEND    SP30,PHPATDAT
          RESET     PHPATDAT
.
          GOTO      KIBA15D
.
KIBA15N   MOVE      TWO,HPATIENT
          MOVE      SP30,PHPATDAT
          DISPLAY   *P42:8,*V2LON,DNO
.
KIBA15D   MOVE      ZERO,OVRCD
          GOTO      UPIBA
.
KIBA16    DISPLAY   *P1:23,*EF:
                    *V2LON,"0",*HOFF,"=HRH ":
                    *V2LON,"1",*HOFF,"=STV ":
                    *V2LON,"2",*HOFF,"=MER ":
                    *V2LON,"3",*HOFF,"=SAI ":
                    *V2LON,"4",*HOFF,"=HWK ":
                    *V2LON,"5",*HOFF,"=MOD ":
                    *V2LON,"6",*HOFF,"=SAR ":
                    *V2LON,"7",*HOFF,"=DAR ":
                    *V2LON,"8",*HOFF,"=STH ":
                    *V2LON,"9",*HOFF,"=MAT ":
                    *V2LON,"10",*HOFF,"=SVL ":
                    *V2LON,"11",*HOFF,"=EPW ":
                    *V2LON,"12",*HOFF,"=SAB ":
                    *P1:24:
                    *V2LON,"13",*HOFF,"=ACC ":
                    *V2LON,"14",*HOFF,"=BUD ":
                    *V2LON,"15",*HOFF,"=STG ":
                    *V2LON,"16",*HOFF,"=PHS ":
                    *V2LON,"17",*HOFF,"=LAS ":
                    *V2LON,"18",*HOFF,"=MHG ";
          KEYIN     *P42:9,*EL,*V2LON,HPURCHP;
.
          COMPARE   ZERO,HPURCHP
          GOTO      KIBA16A IF EQUAL
          BRANCH    HPURCHP,KIBA16A,KIBA16A,KIBA16A,KIBA16A,KIBA16A:
                            KIBA16A,KIBA16A,KIBA16A,KIBA16A,KIBA16A:
                            KIBA16A,KIBA16A,KIBA16A,KIBA16A,KIBA16A:
                            KIBA16A,KIBA16A,KIBA16A
.
          BEEP
          GOTO      KIBA16
.
KIBA16A   MOVE      HRHPO,PPDESC
          LOAD      PPDESC,HPURCHP,STVMPO,MERPO,SAIPO,HWKPO,MODPO,SARPO,DARPO:
                                   STHPO,MATPO,SVLPO,EPWPO,SABPO,ACCPO,BUDPO:
                                   STGPO,PHSPO,LASPO,MHGPO
.
          DISPLAY   *P1:23,*EF:
                    *P42:9,*EL,*V2LON,HPURCHP:
                    *P50:9,*HOFF,PPDESC
          MOVE      ZERO,OVRCD
          GOTO      UPIBA
.
KIBA17    IF        HNONUSAG<1 | HNONUSAG>2
            MOVE      ONE,HNONUSAG
          ENDIF
          LOAD      HNONDIM1,HNONUSAG,ANSR,ANSP
          KEYIN     *P42:10,*EL,*V2LON,*RV,HNONDIM1
          PACK      HNONDIM1,HNONDIM1,SP10
          MATCH     SP1,HNONDIM1
          IF        @EQUAL
            MOVE      ANSP,HNONDIM1          * Default to Purchasing
          ENDIF
          TYPE      HNONDIM1
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,*B,"Invalid Option.  ";
            CALL      HITENTER
            GOTO      KIBA17
          ENDIF
          MOVE      HNONDIM1,ANS
          REP       "R1r1P2rp",ANS
          TYPE      ANS
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Invalid Option.  ";
            CALL      HITENTER
            GOTO      KIBA17
          ENDIF
          MOVE      ANS,HNONUSAG
          LOAD      HNONDESC,HNONUSAG,HNONRECV,HNONPURC
          DISPLAY   *P42:11,*V2LON,*EL,HNONDESC
          MOVE      ZERO,OVRCD
          GOTO      UPIBA
.
KIBA18    DISPLAY   *P1:24,*EL,"Catalog Type : ":
                    *V2LON,"0. ",*HOFF,"Alphanumeric, ":
                    *V2LON,"1. ",*HOFF,"Numeric, ":
                    *V2LON,"2. ",*HOFF,"Generate, ":
                    *V2LON,"3. ",*HOFF,"Generate Check Digit"
          KEYIN     *P42:12,*EL,*V2LON,INCOCATE
          COMPARE   ZERO,INCOCATE
          GOTO      KIBA180 IF EQUAL
          BRANCH    INCOCATE,KIBA181,KIBA182,KIBA183
          BEEP
          GOTO      KIBA18
KIBA180   MOVE      "Alphanumeric              ",CATTYPE
          GOTO      KIBA184
KIBA181   MOVE      "Numeric Only              ",CATTYPE
          GOTO      KIBA184
KIBA182   MOVE      "Computer Generated        ",CATTYPE
          GOTO      KIBA184
KIBA183   MOVE      "Generated with Check Digit",CATTYPE
.
KIBA184   DISPLAY   *P42:12,*EL,*V2LON,CATTYPE
          GOTO      UPIBA
.
KIBA19    KEYIN     *P42:13,*EL,*DV,UNDLN7:
                    *P42:13,*V2LON,INCONCAT:
                    *P42:13,*DV,INCONCAT
          COMPARE   SAVHNEXT,INCONCAT
          GOTO      EKIBA19 IF LESS
          MOVE      ZERO,OVRCD
          GOTO      UPIBA
.
EKIBA19   DISPLAY   *P1:24,*EL,*B:
                    "Catalog Number too low - ";
          CALL      HITENTER
          GOTO      KIBA19
.
KIBA110   KEYIN     *P42:14,*EL,*DV,UNDLN7:
                    *P42:14,*V2LON,HISSUE:
                    *P42:14,*DV,HISSUE
          MOVE      ZERO,OVRCD
          GOTO      UPIBA
.
KIBA111   KEYIN     *P42:15,*EL,*DV,UNDLN7:
                    *P42:15,*V2LON,HIMPREST:
                    *P42:15,*DV,HIMPREST
          MOVE      ZERO,OVRCD
          GOTO      UPIBA
.
KIBA112   KEYIN     *P42:16,*V2LON,INCOSTYP:
                    *P42:16,*DV,INCOSTYP
          COMPARE   ZERO,INCOSTYP
          GOTO      KIBA112E IF EQUAL
          BRANCH    INCOSTYP,KIBA112E
          DISPLAY   *P1:24,*EL,*B:
                    "Invalid Inventory System - ";
          CALL      HITENTER
          GOTO      KIBA112
.
KIBA112E  MOVE      ZERO,OVRCD
          GOTO      UPIBA
.
KIBA113   KEYIN     *P42:17,*EL,*V2LON,ANS
          REP       "nNyY",ANS
          CMATCH    ANSY,ANS
          GOTO      KIBA113N IF NOT EQUAL
          MOVE      ONE,HAUTOREQ
          GOTO      KIBA113D
.
KIBA113N  MOVE      ZERO,HAUTOREQ
.
KIBA113D  MOVE      DNO,DANSX
          LOAD      DANSX,HAUTOREQ,DYES
          DISPLAY   *P42:17,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPIBA
.
KIBA114   DISPLAY   *P1:24,*EL:
                    *V2LON,"0",*HOFF," = Standard, ":
                    *V2LON,"1",*HOFF," = Anne Caudle Centre ";
          KEYIN     *P42:18,*EL,*V2LON,SNCOPTYP;
.
          COMPARE   ZERO,SNCOPTYP
          GOTO      KIBA114A IF EQUAL 
.
          BRANCH    SNCOPTYP,KIBA114A
          BEEP
          GOTO      KIBA114
.
KIBA114A  MOVE      STANDPO,PPDESC
          LOAD      PPDESC,SNCOPTYP,ACCPO
.
          DISPLAY   *P1:24,*EL:
                    *P42:18,*EL,*V2LON,SNCOPTYP:
                    *P50:18,*HOFF,PPDESC
          MOVE      ZERO,OVRCD
          GOTO      UPIBA
.
KIBA115   KEYIN     *P42:19,*EL,*V2LON,ANS
          CMATCH    ANSY,ANS
          GOTO      KIBA115N IF NOT EQUAL
          MOVE      ONE,SNCOIMPQ
          GOTO      KIBA115D
.
KIBA115N  MOVE      TWO,SNCOIMPQ
.
KIBA115D  LOAD      DANSX USING SNCOIMPQ OF DYES,DNO
          DISPLAY   *P42:19,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPIBA
.
KIBA116   DISPLAY   *P1:24,*EL,*V2LON:
                    "** Note : Directory must be full path & ":
                    " have a SLASH as the LAST character **"
          KEYIN     *P42:20,*V2LON,*RV,HFMSDRCT,*P42:20,*DV,HFMSDRCT
          ENDSET    HFMSDRCT
          APPEND    SP30,HFMSDRCT
          RESET     HFMSDRCT
          STRIP     HFMSDRCT
    
          REPEAT
            BUMP    HFMSDRCT
          UNTIL     @EOS
 
          RESET     LASTCHAR
          CMOVE     HFMSDRCT,LASTCHAR
          CMATCH    FWDSLSH,LASTCHAR
          IF        !@EQUAL
            DISPLAY *P1:24,*EL,*V2LON:
                    "** Last character of directory path must be a SLASH (/)":
                    ". ";                                                     
            CALL    HITENTER
            CLEAR   HFMSDRCT
            GOTO    KIBA116
          ENDIF

          MOVE      ZERO,OVRCD
          GOTO      UPIBA
.
KIBA117   DISPLAY   *P1:24,*EL,*V2LON:
                    "** Note : Directory must be full path & ":
                    " have a SLASH as the LAST character **"
          KEYIN     *P42:21,*V2LON,*RV,HFMSBTCH,*P42:21,*DV,HFMSBTCH
          ENDSET    HFMSBTCH
          APPEND    SP30,HFMSBTCH
          RESET     HFMSBTCH
          STRIP     HFMSBTCH
    
          REPEAT
            BUMP    HFMSBTCH
          UNTIL     @EOS
 
          RESET     LASTCHAR
          CMOVE     HFMSBTCH,LASTCHAR
          CMATCH    FWDSLSH,LASTCHAR
          IF        !@EQUAL
            DISPLAY *P1:24,*EL,*V2LON:
                    "** Last character of directory path must be a SLASH (/)":
                    ". ";                                                     
            CALL    HITENTER
            CLEAR   HFMSBTCH
            GOTO    KIBA117
          ENDIF

          MOVE      ZERO,OVRCD
          GOTO      UPIBA
.
UPIBA2    MOVE      ZERO,OVRCD
          CALL      MAINQST
          MOVE      CCITEM,FIELD
          COMPARE   ZERO,FIELD
          RETURN    IF EQUAL
          GOTO      OVERCOND IF LESS
          BRANCH    FIELD OF KIBA21,KIBA23,KIBA25,KIBA27,KIBA28:
                             KIBA29,KIBA210,KIBA211,KIBA212
          BEEP
          GOTO      UPIBA2
.
KIBA21    DISPLAY   *P1:24,*EL,*V2LON,ONE,*HOFF," = Receival Time, ":
                    *V2LON,TWO,*HOFF," = Invoice Time"
          KEYIN     *P42:4,*EL,*V2LON,HAVGCOST
.
          BRANCH    HAVGCOST OF KIBA21A,KIBA21A
.
          BEEP
          GOTO      KIBA21
.
KIBA21A   LOAD      AVDESC USING HAVGCOST OF RECCOST,INVCOST
          DISPLAY   *P1:24,*EL,*P50:4,AVDESC
          MOVE      ZERO,OVRCD
          GOTO      UPIBA2
.
KIBA23    DISPLAY   *P1:24,*EL,*V2LON,ONE,*HOFF," = Purchase Order Time, ":
                    *V2LON,TWO,*HOFF," = Invoice Time"
          KEYIN     *P42:5,*EL,*V2LON,HLASTCIN
.
          BRANCH    HLASTCIN OF KIBA23A,KIBA23A
.
          BEEP
          GOTO      KIBA23
.
KIBA23A   LOAD      CNDESC USING HLASTCIN OF LASTPO,LASTINV
          DISPLAY   *P1:24,*EL,*P50:5,CNDESC
          MOVE      ZERO,OVRCD
          GOTO      UPIBA2
.
KIBA25    DISPLAY   *P1:24,*EL,*V2LON,ONE,*HOFF," = Modbury 4 CC 5 Subj , ":
                    *V2LON,TWO,*HOFF," = Use Warehouse Issue"
          KEYIN     *P42:6,*EL,*V2LON,HACCCODE
.
          BRANCH    HACCCODE OF KIBA25A,KIBA25A
.
          BEEP
          GOTO      KIBA25
.
KIBA25A   LOAD      HACCTDES USING HACCCODE OF MODHACC,WARHACC
          DISPLAY   *P1:24,*EL,*P50:6,HACCTDES
          MOVE      ZERO,OVRCD
          GOTO      UPIBA2
.
KIBA27    DISPLAY   *P1:24,*EL:
                    *V2LON,ZERO,*HOFF," = Standard, ":
                    *V2LON,ONE,*HOFF," = St Vincents, ":
                    *V2LON,TWO,*HOFF," = HCOA"
          KEYIN     *P42:7,*EL,*V2LON,HRECPRT
.
          COMPARE   ZERO,HRECPRT
          GOTO      KIBA27A IF EQUAL
          BRANCH    HRECPRT OF KIBA27A,KIBA27A
.
          BEEP
          GOTO      KIBA27
.
KIBA27A   MOVE      STANDPO,PODESC
          LOAD      PODESC USING HRECPRT OF STVMPO,RECCOMM
          DISPLAY   *P1:24,*EL,*P50:7,PODESC
          MOVE      ZERO,OVRCD
          GOTO      UPIBA2
.
KIBA28    KEYIN     *P42:8,*EL,*V2LON,ANS
          CMATCH    ANSY,ANS
          GOTO      KIBA28N IF NOT EQUAL
          MOVE      ONE,HFIVCOLM
          GOTO      KIBA28D
.
KIBA28N   MOVE      TWO,HFIVCOLM
.
KIBA28D   LOAD      DANSX USING HFIVCOLM OF DYES,DNO
          DISPLAY   *P42:8,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPIBA2
.
KIBA29    KEYIN     *P42:9,*EL,*V2LON,ANS
          CMATCH    ANSY,ANS
          GOTO      KIBA29N IF NOT EQUAL
          MOVE      ONE,INCNSOSI
          GOTO      KIBA29D
.
KIBA29N   MOVE      TWO,INCNSOSI
.
KIBA29D   LOAD      DANSX USING INCNSOSI OF DYES,DNO
          DISPLAY   *P42:9,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPIBA2
.
KIBA210   KEYIN     *P42:10,*EL,*V2LON,ANS
          CMATCH    ANSY,ANS
          GOTO      KIBA210N IF NOT EQUAL
          MOVE      ONE,INCNBLON
          GOTO      KIBA210D
.
KIBA210N  MOVE      TWO,INCNBLON
.
KIBA210D  LOAD      DANSX USING INCNBLON OF DYES,DNO
          DISPLAY   *P42:10,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPIBA2
.
KIBA211   KEYIN     *P42:11,*EL,*V2LON,ANS
          REP       "yY",ANS
          CMATCH    ANSY,ANS
          GOTO      KIBA211N IF NOT EQUAL
          MOVE      ONE,INCNNATO
          GOTO      KIBA211D
.
KIBA211N  MOVE      ZERO,INCNNATO
.
KIBA211D  MOVE      DNO,DANSX
          LOAD      DANSX,INCNNATO,DYES
          DISPLAY   *P42:11,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPIBA2
.
KIBA212   KEYIN     *P42:12,*EL,*V2LON,ANS
          REP       "yY",ANS
          CMATCH    ANSY,ANS
          GOTO      KIBA212N IF NOT EQUAL
          MOVE      ONE,SNCOPURC
          GOTO      KIBA212D
.
KIBA212N  MOVE      ZERO,SNCOPURC
.
KIBA212D  MOVE      DNO,DANSX
          LOAD      DANSX,SNCOPURC,DYES
          DISPLAY   *P42:12,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPIBA2
.
UPQUOT1   MOVE      ZERO,OVRCD
          CALL      MAINQST
          MOVE      CCITEM,FIELD
          COMPARE   ZERO,FIELD
          RETURN    IF EQUAL
          GOTO      OVERCOND IF LESS
          BRANCH    FIELD OF KQUOT11,KQUOT12,KQUOT13,KQUOT14,KQUOT15:
                             KQUOT16,KQUOT17,KQUOT18,KQUOT19,KQUOT20:
                             KQUOT21
          BEEP
          GOTO      UPQUOT1
.
.
.       Non-stock in SIN07
.----------------------------------------
KQUOT11   KEYIN     *P56:5,*EL,*V2LON,ANS
          CMATCH    ANSY,ANS
          GOTO      KQUOT11X IF NOT EQUAL
.
          MOVE      ONE,INCOSIN7
          GOTO      KQUOT11E
.
KQUOT11X  MOVE      TWO,INCOSIN7
.
KQUOT11E  MOVE      ZERO,F1
          MOVE      INCOSIN7,F1
          LOAD      DANSX USING F1 OF DYES,DNO
          DISPLAY   *P56:5,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPQUOT1
.
.       New heading in SIN40 + 32
.----------------------------------------
KQUOT12   KEYIN     *P56:6,*EL,*V2LON,ANS
          CMATCH    ANSY,ANS
          GOTO      KQUOT12X IF NOT EQUAL
.
          MOVE      ONE,INCOSI40
          GOTO      KQUOT12E
.
KQUOT12X  MOVE      TWO,INCOSI40
.
KQUOT12E  MOVE      ZERO,F1
          MOVE      INCOSI40,F1
          LOAD      DANSX USING F1 OF DYES,DNO
          DISPLAY   *P56:6,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPQUOT1
.
.
.       Automatic Backordering (Y/N)
.----------------------------------------
KQUOT13   KEYIN     *P56:7,*EL,*V2LON,ANS
          REP       "nNyY",ANS
          CMATCH    ANSY,ANS
          GOTO      KQUOT13X IF NOT EQUAL
.
          MOVE      ONE,HDISPBO
          GOTO      KQUOT13E
.
KQUOT13X  MOVE      ZERO,HDISPBO
.
KQUOT13E  MOVE      DNO,DANSX
          LOAD      DANSX,HDISPBO,DYES
          DISPLAY   *P56:7,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPQUOT1
.
.       Stocktake Barcode Export (Y/N)
.----------------------------------------
KQUOT14   KEYIN     *P56:8,*EL,*V2LON,ANS
          REP       "nNyY",ANS
          CMATCH    ANSY,ANS
          GOTO      KQUOT14X IF NOT EQUAL
.
          MOVE      ONE,INCOSTEX
          GOTO      KQUOT14E
.
KQUOT14X  MOVE      ZERO,INCOSTEX
.
KQUOT14E  MOVE      DNO,DANSX
          LOAD      DANSX,INCOSTEX,DYES
          DISPLAY   *P56:8,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPQUOT1
.
.       Print Return of Stock Slip (Y/N)
.----------------------------------------
KQUOT15   KEYIN     *P56:9,*EL,*V2LON,ANS
          REP       "nNyY",ANS
          CMATCH    ANSY,ANS
          GOTO      KQUOT15X IF NOT EQUAL
          MOVE      ONE,SNCOPRS
          GOTO      KQUOT15E
.
KQUOT15X  MOVE      ZERO,SNCOPRS
.
KQUOT15E  MOVE      DNO,DANSX
          LOAD      DANSX,SNCOPRS,DYES
          DISPLAY   *P56:9,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPQUOT1
.
.       Print Receivals Slip     (Y/N)
.----------------------------------------
KQUOT16   KEYIN     *P56:10,*EL,*V2LON,ANS
          REP       "nNyY",ANS
          CMATCH    ANSY,ANS
          GOTO      KQUOT16X IF NOT EQUAL
          MOVE      ONE,SNCOPPR
          GOTO      KQUOT16E
.
KQUOT16X  MOVE      ZERO,SNCOPPR
.
KQUOT16E  MOVE      DNO,DANSX
          LOAD      DANSX,SNCOPPR,DYES
          DISPLAY   *P56:10,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPQUOT1
.
.       Min Stock Warning        (Y/N)
.----------------------------------------
KQUOT17   KEYIN     *P56:11,*EL,*V2LON,ANS
          REP       "nNyY",ANS
          CMATCH    ANSY,ANS
          GOTO      KQUOT17X IF NOT EQUAL
          MOVE      ONE,SNCOIMS
          GOTO      KQUOT17E
.
KQUOT17X  MOVE      ZERO,SNCOIMS
.
KQUOT17E  MOVE      DNO,DANSX
          LOAD      DANSX,SNCOIMS,DYES
          DISPLAY   *P56:11,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPQUOT1
.
.       Backorder <max quantity  (Y/N)
.----------------------------------------
KQUOT18   KEYIN     *P56:12,*EL,*V2LON,ANS
          REP       "nNyY",ANS
          CMATCH    ANSY,ANS
          GOTO      KQUOT18X IF NOT EQUAL
          MOVE      ONE,SNCOAUBM
          GOTO      KQUOT18E
.
KQUOT18X  MOVE      ZERO,SNCOAUBM
.
KQUOT18E  MOVE      DNO,DANSX
          LOAD      DANSX,SNCOAUBM,DYES
          DISPLAY   *P56:12,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPQUOT1
.
.       Allow 6 char catalog code(Y/N)
.----------------------------------------
KQUOT19   KEYIN     *P56:13,*EL,*V2LON,ANS
          REP       "nNyY",ANS
          CMATCH    ANSY,ANS
          GOTO      KQUOT19X IF NOT EQUAL
          MOVE      ONE,SNCOCAT6
          GOTO      KQUOT19E
.
KQUOT19X  MOVE      ZERO,SNCOCAT6
.
KQUOT19E  MOVE      DNO,DANSX
          LOAD      DANSX,SNCOCAT6,DYES
          DISPLAY   *P56:13,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPQUOT1
.
.       Multiple Delivery Points (Y/N)
.----------------------------------------
KQUOT20   KEYIN     *P56:14,*EL,*V2LON,ANS
          REP       "nNyY",ANS
          CMATCH    ANSY,ANS
          GOTO      KQUOT20X IF NOT EQUAL
          MOVE      ONE,SNCOMDPC
          GOTO      KQUOT20E
.
KQUOT20X  MOVE      ZERO,SNCOMDPC
.
KQUOT20E  MOVE      DNO,DANSX
          LOAD      DANSX,SNCOMDPC,DYES
          DISPLAY   *P56:14,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPQUOT1
.
.       J&J Virtual Integration (E-Mail) (Y/N)
.----------------------------------------
KQUOT21   KEYIN     *P56:15,*EL,*V2LON,ANS
          REP       "nNyY",ANS
          CMATCH    ANSY,ANS
          GOTO      KQUOT21X IF NOT EQUAL
          MOVE      ONE,SNCOEMAL
          GOTO      KQUOT21E
.
KQUOT21X  MOVE      ZERO,SNCOEMAL
.
KQUOT21E  MOVE      DNO,DANSX
          LOAD      DANSX,SNCOEMAL,DYES
          DISPLAY   *P56:15,*V2LON,DANSX
          MOVE      ZERO,OVRCD
          GOTO      UPQUOT1
.
.----------------------------------------
.
.         Keyin on SOS interface screen 1
.
UPSOS1    MOVE      ZERO,OVRCD
          CALL      MAINQST
          MOVE      CCITEM,FIELD
          COMPARE   ZERO,FIELD
          RETURN    IF EQUAL
          GOTO      OVERCOND IF LESS
          BRANCH    FIELD OF KSOS11,KSOS12,KSOS13,KSOS14,KSOS15,KSOS16:
                             KSOS17A,KSOS17B,KSOS18,KSOS19,KSOS110,KSOS111:
                             KSOS20,KSOS21,KSOS22,KSOS23,KSOS24,KSOS25:
                             KSOS26,KSOS27
          BEEP
          GOTO      UPSOS1
.
UPSOS1A   CALL      POSTQST
.
          BRANCH    CEXIT,UPSOS1B,UPSOS1C,UPSOS1D
.
UPSOS1B   RETURN                             * Yes
.
UPSOS1C   GOTO      UPSOS1                   * No
.
UPSOS1D   MOVE      ONE,OVRCD                * Cancel
          RETURN
.
.         VHA Customer Code
.
KSOS11    
          KEYIN     *P40:4,*V2LON,*RV,INCNVHAC,*EL
          ENDSET    INCNVHAC
          APPEND    SP6,INCNVHAC
          RESET     INCNVHAC
.
          KEYIN     *P50:4,"Code 2 : ",*V2LON,*RV,INCNVHA2,*EL
          ENDSET    INCNVHA2
          APPEND    SP6,INCNVHA2
          RESET     INCNVHA2
.
          MOVE      ZERO,OVRCD               * Set write flag
.
          GOTO      UPSOS1
.
.         VHA Supplier Code
.
KSOS12    DISPLAY   *P40:5,*EL,UNDLN5
          KEYIN     *P40:5,*V2LON,*JR,*ZF,INCNVHAS:
                    *P40:5,*V2LON,*DV,INCNVHAS
.
          ENDSET    INCNVHAS
          APPEND    SP5,INCNVHAS
          RESET     INCNVHAS
.
          MATCH     SP5 TO INCNVHAS
          GOTO      KSOS12EX IF EQUAL
.
.         Check for valid entry and if valid display description
.
          MOVE      INCNVHAS,KEY5
          CALL      RDAPMA1
.
          BRANCH    OVRCD,KSOS12A
.
          DISPLAY   *P50:5,APMASN1
.
KSOS12EX  MOVE      ZERO,OVRCD               * Set write flag
.
          GOTO      UPSOS1
.
KSOS12A   DISPLAY   *P1:24,*EL,*B,"Supplier Code is not on file.  ";
          CALL      HITENTER
          GOTO      KSOS12
.
.         VHA Transmission Date
.
KSOS13    MOVE      SIX,CVERT
          MOVE      "40",CCOL
          MOVE      ONE,CCENTRY             * No centuries
          CALL      KEYDATE
.
          CALL      PACDATE                  * Format date
          UNPACK    CPCDATE,CDAY,ANS,CMON,ANS,CCENT,CYEAR
          PACK      INCNVHAD,CCENT,CYEAR,CMON,CDAY
          REP       " 0",INCNVHAD
          MOVE      ZERO,OVRCD               * Set write flag
          GOTO      UPSOS1
.
.         VHA Next Transmission Number
.
KSOS14    DISPLAY   *P40:7,*EL,UNDLN3
          KEYIN     *P40:7,*V2LON,INCNVHAN,*EL
.
          MOVE      ZERO,OVRCD               * Set write flag
.
          GOTO      UPSOS1
.
.         VHA Port of person using VHA interface
.
KSOS15    DISPLAY   *P40:8,*EL,UNDLN2
          KEYIN     *P40:8,*V2LON,INCNTRAN,*EL
.
          ENDSET    INCNTRAN
          APPEND    SP2,INCNTRAN
          RESET     INCNTRAN
.
          MOVE      ZERO,OVRCD               * Set write flag
.
          GOTO      UPSOS1
.
.         Command to execute for VHA connect only
.
KSOS16    DISPLAY   *P40:9,*EL,UNDLN,UNDLN5
          KEYIN     *P40:9,*V2LON,INCNCVHA,*EL
.
          ENDSET    INCNCVHA
          APPEND    SP30,INCNCVHA
          APPEND    SP30,INCNCVHA
          RESET     INCNCVHA
.
          MOVE      ZERO,OVRCD               * Set write flag
. 
          GOTO      UPSOS1
.
.         Command to execute for VHA Transfer 1
.
KSOS17A   DISPLAY   *P40:10,*EL,UNDLN,UNDLN5
          KEYIN     *P40:10,*V2LON,INCNTVHA,*EL
.
          ENDSET    INCNTVHA
          APPEND    SP30,INCNTVHA
          APPEND    SP30,INCNTVHA
          RESET     INCNTVHA
.
          MOVE      ZERO,OVRCD               * Set write flag
.
          GOTO      UPSOS1
.
.
.         Command to execute for VHA Transfer 2
.
KSOS17B   DISPLAY   *P40:11,*EL,UNDLN,UNDLN5
          KEYIN     *P40:11,*V2LON,INCNTVH2,*EL
.
          ENDSET    INCNTVH2
          APPEND    SP30,INCNTVH2
          APPEND    SP30,INCNTVH2
          RESET     INCNTVH2
.
          MOVE      ZERO,OVRCD               * Set write flag
.
          GOTO      UPSOS1
.
.         Message for VHA SOS Orders
.
KSOS18    DISPLAY   *P40:12,*EL,UNDLN,UNDLN5
          KEYIN     *P40:12,*V2LON,INCNVHAM,*EL
.
          ENDSET    INCNVHAM
          APPEND    SP30,INCNVHAM
          APPEND    SP30,INCNVHAM
          RESET     INCNVHAM
.
          MOVE      ZERO,OVRCD               * Set write flag
.
          GOTO      UPSOS1
.
.         Transmit all VHA Orders
.
KSOS19    KEYIN     *P40:13,*EL,*V2LON,ANS
.
          MOVE      ZERO,OVRCD               * Set write flag
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      KSOS1900 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      KSOS1910 IF EQUAL
.
          BEEP
          GOTO      KSOS19
.
.         Command to execute for VHA receive only
.
KSOS20    DISPLAY   *P40:16,*EL,UNDLN,UNDLN5
          KEYIN     *P40:16,*V2LON,INCNRVHA,*EL
.
          ENDSET    INCNRVHA
          APPEND    SP30,INCNRVHA
          APPEND    SP30,INCNRVHA
          RESET     INCNRVHA
.
          MOVE      ZERO,OVRCD               * Set write flag
. 
          GOTO      UPSOS1
.
.         0=Use VHA Customer Code, 1=Use VHA Vendor Code
.
KSOS21    
          REPEAT
            MOVE      HVHAPART,F1
            KEYIN     *P40:17,*V2LON,*RV,F1,*EL;
          UNTIL     F1=0 | F1=1
          MOVE      F1,HVHAPART
          DISPLAY   *P40:17,*V2LON,HVHAPART,*EL;
.
          MOVE      ZERO,OVRCD               * Set write flag
. 
          GOTO      UPSOS1
.
. Order Method  1=Direct  2=Return
.---------------------------------
KSOS22    REPEAT
            MOVE      INCNOVHA,F1
            KEYIN     *P40:18,*V2LON,*RV,F1,*EL;
          UNTIL     F1=1 | F1=2
          MOVE      F1,INCNOVHA
          DISPLAY   *P40:18,*V2LON,INCNOVHA,*EL;
          MOVE      ZERO,OVRCD               * Set write flag
          GOTO      UPSOS1   
.
KSOS1900  MOVE      ONE,INCNTRAL
          DISPLAY   *P40:13,*V2LON,"Yes"; 
          GOTO      UPSOS1        
.
KSOS1910  MOVE      ZERO,INCNTRAL
          DISPLAY   *P40:13,*V2LON,"No ";
          GOTO      UPSOS1        
.
.         Transmit printed orders only
.
KSOS110   KEYIN     *P40:14,*EL,*V2LON,ANS
.
          MOVE      ZERO,OVRCD               * Set write flag
.
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS
          GOTO      KSOS1105 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      KSOS1108 IF EQUAL
.
          BEEP
          GOTO      KSOS110
.
KSOS1105  MOVE      ONE,INCNTRPR
          DISPLAY   *P40:14,*V2LON,"Yes";
          GOTO      UPSOS1
.
KSOS1108  MOVE      ZERO,INCNTRPR
          DISPLAY   *P40:14,*V2LON,"No ";
          GOTO      UPSOS1        
.
.         Transfer Directory
.
KSOS111   DISPLAY   *P40:15,*EL,UNDLN20
          KEYIN     *P40:15,*V2LON,INCNSOSD,*EL
.
          ENDSET    INCNSOSD
          APPEND    SP6,INCNSOSD
          RESET     INCNSOSD
.
          MOVE      ZERO,OVRCD               * Set write flag
.
          GOTO      UPSOS1
.
KSOS23    KEYIN     *P40:19,*V2LON,*RV,SNCOVHA3,*EL
          ENDSET    SNCOVHA3
          APPEND    SP6,SNCOVHA3
          RESET     SNCOVHA3
.
          MOVE      ZERO,OVRCD               * Set write flag
          GOTO      UPSOS1
.
.         Command to execute for VHA Transfer 3
.
KSOS24    DISPLAY   *P40:20,*EL,UNDLN,UNDLN5
          KEYIN     *P40:20,*V2LON,SNCOTVH3,*EL
.
          ENDSET    SNCOTVH3
          APPEND    SP30,SNCOTVH3
          APPEND    SP30,SNCOTVH3
          RESET     SNCOTVH3
.
          MOVE      ZERO,OVRCD               * Set write flag
          GOTO      UPSOS1
.
KSOS25    KEYIN     *P40:21,*EL,*V2LON,ANS
          REP       UPPLOW,ANS
          MOVE      ONE,SNCOMMOD
          MATCH     ANSY,ANS
          GOTO      UPSOS1 IF EQUAL
          MOVE      ZERO,SNCOMMOD
          MATCH     ANSN,ANS
          GOTO      UPSOS1 IF EQUAL
          BEEP
          GOTO      KSOS25
.
KSOS26    KEYIN     *P40:22,*V2LON,*RV,SNCOVHA4,*EL
          ENDSET    SNCOVHA4
          APPEND    SP6,SNCOVHA4
          RESET     SNCOVHA4
.
          MOVE      ZERO,OVRCD               * Set write flag
          GOTO      UPSOS1
.
KSOS27    KEYIN     *P40:23,*V2LON,*RV,SNCOVHA5,*EL
          ENDSET    SNCOVHA5
          APPEND    SP6,SNCOVHA5
          RESET     SNCOVHA5
.
          MOVE      ZERO,OVRCD               * Set write flag
          GOTO      UPSOS1
.
.         Keyin on SOS interface screen 2
.
UPSOS2    MOVE      ZERO,OVRCD
          CALL      MAINQST
          MOVE      CCITEM,FIELD
          COMPARE   ZERO,FIELD
          RETURN    IF EQUAL
          GOTO      OVERCOND IF LESS
          BRANCH    FIELD OF KSOS201,KSOS202,KSOS203,KSOS204
          BEEP
          GOTO      UPSOS2
.
UPSOS2A   CALL      POSTQST
.
          BRANCH    CEXIT,UPSOS2B,UPSOS2C,UPSOS2D
.
UPSOS2B   RETURN                             * Yes
.
UPSOS2C   GOTO      UPSOS2                   * No
.
UPSOS2D   MOVE      ONE,OVRCD                * Cancel
          RETURN
.
.         VHA Customer Code
.
KSOS201   KEYIN     *P40:4,*V2LON,*RV,SNCOVHA6,*EL
          ENDSET    SNCOVHA6
          APPEND    SP6,SNCOVHA6
          RESET     SNCOVHA6
.
          MOVE      ZERO,OVRCD               * Set write flag
          GOTO      UPSOS2
.
.         VHA Customer Code
.
KSOS202   KEYIN     *P40:5,*V2LON,*RV,SNCOVHA7,*EL
          ENDSET    SNCOVHA7
          APPEND    SP6,SNCOVHA7
          RESET     SNCOVHA7
.
          MOVE      ZERO,OVRCD               * Set write flag
          GOTO      UPSOS2
.
.         VHA Customer Code
.
KSOS203   KEYIN     *P40:6,*V2LON,*RV,SNCOVHA8,*EL
          ENDSET    SNCOVHA8
          APPEND    SP6,SNCOVHA8
          RESET     SNCOVHA8
.
          MOVE      ZERO,OVRCD               * Set write flag
          GOTO      UPSOS2
.
.         VHA Customer Code
.
KSOS204   KEYIN     *P40:7,*V2LON,*RV,SNCOVHA9,*EL
          ENDSET    SNCOVHA9
          APPEND    SP6,SNCOVHA9
          RESET     SNCOVHA9
.
          MOVE      ZERO,OVRCD               * Set write flag
          GOTO      UPSOS2
.
POST      KEYIN     *P1:24,*EL,"Ok to Post (":
                    *V2LON,*DV,ANSY,*HOFF,*DV,SLASH:
                    *V2LON,*DV,ANSN,*HOFF,*DV,SLASH:
                    *V2LON,*DV,ANSC,*HOFF:
                    ") ? ",*V2LON,ANS;
          MOVE      ZERO,OVRCD
.
          CMATCH    ANSC TO ANS
          GOTO      OVERCOND IF EQUAL
.
          CMATCH    ANSY TO ANS
          RETURN    IF EQUAL
.
          CMATCH    ANSN TO ANS
          GOTO      NOPOST IF EQUAL
.
          BEEP
          GOTO      POST
.
NOPOST    NORETURN
          MOVE      ONE TO REPFLAG
          GOTO      REPEAT
+
.
.         Subroutines to update the control file with the new values
.
WRDELV    WRITAB    CONTROLF,TWENTY5;HADEL1,HADEL2,HADEL3,HADEL4:
                    HADEL5,HADEL6,HADEL7,HADEL8
          DISPLAY   *P60:24,*EL,*V2LON,"*** POSTED ***",*W2;
          RETURN
.
WRAUD     WRITAB    CONTROLF,TWENTY4;*201,HAUDA,HAUDB,HAUDC,HAUDD,HAUDE:
                                          HAUDF,HAUDG,HAUDH:
                                          *210,HAUDJ,*215,HAUDO,HAUDP:
                                          *218,HAUDR,HAUDS,*223,HAUDW
          WRITAB    CONTROLF,SIXTY3;*158,SNCOCA1,SNCOCA2,SNCOCA3 
          DISPLAY   *P60:24,*EL,*V2LON,"*** POSTED ***",*W2;
          RETURN
.
WRUSR1    WRITAB    CONTROLF,TEN3;CHADD1,CHADD2,CHPOST,*129,CHTELEB
          WRITAB    CONTROLF,TWENTY3;HNAME,HSHORT,*124,HORDDES
          WRITAB    CONTROLF,TWENTY4;*160,HABCLEV1,HABCLEV2
          WRITAB    CONTROLF,TWENTY6;*247,HPOWHDFT
          WRITAB    CONTROLF,SIXTY3;*142,SNCO40PL,*144,HALLOCBO,*153,SNCOKWD:
                                    SNCOSMX,SNCOCORP,*161,SNCOASPL,SNCOBSEQ:
                                    SNCOFAXN,*234,SNCOGSTC
          RETURN
.
WRUSR2    WRITAB    CONTROLF,TWENTY3;*80,HFACTOR:
                                     *188,HLABPG,HLABPRT:
                                     *238,HCOSLAB,HCATLAB,HPHALAB
          WRITAB    CONTROLF,TWENTY4;*121,HSTRORD,HFINORD:
                                     *155,HCONPERD,HADUPERD
          WRITAB    CONTROLF,TWENTY6;*195,PHITEM
          WRITAB    CONTROLF,SIXTY3;*1,SNCOHEAN,SNCOCCOM:
                                    *134,INCOMUPC,*229,SNCOPRSQ:
                                    *243,SNCOBCPN
          WRITAB    CONTROLF,HUND07;*81,SNCOSFYN
          RETURN
.
WRIBA     WRITAB    CONTROLF,TWENTY3;*95,HACCNT,*120,HBACK,*135,HPATIENT:
                                     *143,HDEFWH,*157,HPHARM:
                                     *194,HISSUE,HIMPREST                
          WRITAB    CONTROLF,TWENTY4;*135,HACCDATA,*177,INCOCASH
          WRITAB    CONTROLF,TWENTY6;*10,PHPATDAT,*248,HPURCHP
          WRITAB    CONTROLF,SIXTY3;*67,INCOCATE,INCONCAT,*85,INCOSTYP:
                                    *143,HNONUSAG,*148,HAUTOREQ,SNCOPTYP:
                                    *231,SNCOIMPQ
          WRITAB    CONTROLF,HUND07;*1,HFMSDRCT,*41,HFMSBTCH
          RETURN
.
WRIBA2    WRITAB    CONTROLF,TWENTY3;*248,HAVGCOST
          WRITAB    CONTROLF,TWENTY4;*164,HFIVCOLM,HLASTCIN:
                                     *198,HACCCODE:
                                     *227,HRECPRT
          WRITAB    CONTROLF,TWENTY6;*194,INCNSOSI
          WRITAB    CONTROLF,SIXTY3;*141,INCNNATO,*240,SNCOPURC
          WRITAB    CONTROLF,SIXTY7;*203,INCNBLON
          RETURN
.
.         Write the Quote screen one
.
WRQUOT1   WRITAB    CONTROLF,SIXTY3;*132,INCOSIN7,INCOSI40:
                                    *146,INCOSTEX,HDISPBO:
                                    *150,SNCOPRS,SNCOPPR,SNCOIMS:
                                    *232,SNCOAUBM,SNCOCAT6,*241,SNCOMDPC:
                                    *242,SNCOEMAL
          RETURN
.
.         Write the SOS screen one
.
WRSOS1    WRITAB    CONTROLF,TWENTY4;*228,SNCOVHA4,SNCOVHA5
          WRITAB    CONTROLF,TWENTY6;*1,INCNVHAD,*30,INCNVHAC,INCNVHAS,*47:
                                     INCNVHAN,INCNTRAN,INCNCVHA:
                                     INCNTVHA,INCNVHAM,INCNTRAL:
                                     INCNTRPR,INCNSOSD,*206,INCNRVHA,HVHAPART
          WRITAB    CONTROLF,SIXTY3;*86,INCNTVH2,INCNVHA2,*140,INCNOVHA:
                                    *183,SNCOVHA3,SNCOTVH3:
                                    *230,SNCOMMOD
.
          DISPLAY   *P60:24,*EL,*V2LON,"*** POSTED ***",*W2;
          RETURN
.
.         Write the SOS screen two
.
WRSOS2    WRITAB    CONTROLF,SIXTY7;*216,SNCOVHA6,SNCOVHA7,SNCOVHA8:
                                         SNCOVHA9
.
          DISPLAY   *P60:24,*EL,*V2LON,"*** POSTED ***",*W2;
          RETURN
+
.
.         Subroutine to check the password for the I.B.A. controlled menu
.
IBASECUR  BRANCH    SECENT,IBAS9000              * security already entered ?
.
          READ      CONTROLF,TWO;*233,HPASSWD
          KEYIN     *P1:24,*EL,*P20:24,"Enter Password : ",*EOFF,PASS;
          MATCH     PASS,HPASSWD
          GOTO      OVERCOND IF NOT EQUAL
.
          MOVE      ZERO,FORM8
          KEYIN     *EOFF,PASS;
          MOVE      PASS,FORM8
.
          SUB       CDD,FORM8
          SUB       CMM,FORM8
          SUB       CYY,FORM8
.
          COMPARE   ZERO,FORM8
          GOTO      OVERCOND IF NOT EQUAL
.
IBAS9000  MOVE      ZERO,OVRCD
          MOVE      ONE,SECENT
.
IBAS9999  RETURN
.
ENDIT     CHAIN     PGM
.
DISPPER   READ      CONTROLF,SIXTY3;*75,HAPER13
          READ      CONTROLF,TWENTY4;HAPER1,HAPER2,HAPER3,HAPER4,HAPER5:
                                     HAPER6,HAPER7,HAPER8,HAPER9,HAPER10:
                                     HAPER11,HAPER12
          READ      CONTROLF,TWENTY3;*129,SNCODFYR,SNCONOPR
.
          MOVE      SNCODFYR,TYEAR
          MOVE      SNCONOPR,TPERD
.
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON," 1.",*HOFF," Period 1      : ",*V2LON,HAPER1:
                    *P1:5,*V2LON," 2.",*HOFF," Period 2      : ",*V2LON,HAPER2:
                    *P1:6,*V2LON," 3.",*HOFF," Period 3      : ",*V2LON,HAPER3:
                    *P1:7,*V2LON," 4.",*HOFF," Period 4      : ",*V2LON,HAPER4:
                    *P1:8,*V2LON," 5.",*HOFF," Period 5      : ",*V2LON,HAPER5:
                    *P1:9,*V2LON," 6.",*HOFF," Period 6      : ",*V2LON,HAPER6:
                   *P1:10,*V2LON," 7.",*HOFF," Period 7      : ",*V2LON,HAPER7:
                   *P1:11,*V2LON," 8.",*HOFF," Period 8      : ",*V2LON,HAPER8:
                   *P1:12,*V2LON," 9.",*HOFF," Period 9      : ",*V2LON,HAPER9:
                   *P1:13,*V2LON,"10.",*HOFF," Period 10     : ",*V2LON,HAPER10:
                   *P1:14,*V2LON,"11.",*HOFF," Period 11     : ",*V2LON,HAPER11:
                   *P1:15,*V2LON,"12.",*HOFF," Period 12     : ",*V2LON,HAPER12:
                   *P1:16,*V2LON,"13.",*HOFF," Period 13     : ",*V2LON,HAPER13:
                   *P1:17,*V2LON,"14.",*HOFF," Current Year  : ",*V2LON,TYEAR:
                   *P1:18,*V2LON,"15.",*HOFF," No. of Periods: ",*V2LON,TPERD
.
          RETURN
.
UPPER     MOVE      ZERO,OVRCD
          CALL      MAINQST
          MOVE      CCITEM,FIELD
          COMPARE   ZERO,FIELD
          RETURN    IF EQUAL
          GOTO      OVERCOND IF LESS
.
          MOVE      "21",CCOL
          MOVE      "3",CVERT
          ADD       FIELD,CVERT
.
          IF        FIELD=14
            MOVE      "21",CCOL3
            UNPACK    TYEAR,CCENT,CYEAR
            MOVE      ONE,CCENTRY
            CALL      KEYYEAR
            PACK      TYEAR,CCENT,CYEAR
            GOTO      UPPER
          ENDIF
.
          IF        FIELD=15
            REPEAT    
              KEYIN     *PCCOL:CVERT,*V2LON,*JR,*DE,*RV,TPERD
              IF        !(TPERD=12 | TPERD=13)
                BEEP
                CLEAR     DISPMSG
                APPEND    "Must be 12 or 13 - ",DISPMSG
                RESET     DISPMSG
                CALL      MESSAGE1
              ENDIF
            UNTIL     TPERD=12 | TPERD=13
            GOTO      UPPER
          ENDIF
.
          IF        FIELD<1|FIELD>13
            BEEP
            GOTO      UPPER
          ENDIF
.
          LOAD      KEY10,FIELD,HAPER1,HAPER2,HAPER3,HAPER4,HAPER5,HAPER6:
                    HAPER7,HAPER8,HAPER9,HAPER10,HAPER11,HAPER12,HAPER13
          STRIP     KEY10
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,*MASK,KEY10:
                    *PCCOL:CVERT,*V2LON,*DV,KEY10
          STORE     KEY10,FIELD,HAPER1,HAPER2,HAPER3,HAPER4,HAPER5,HAPER6:
                    HAPER7,HAPER8,HAPER9,HAPER10,HAPER11,HAPER12,HAPER13
          GOTO      UPPER
.
WRPER     WRITAB    CONTROLF,SIXTY3;*75,HAPER13
          WRITAB    CONTROLF,TWENTY4;HAPER1,HAPER2,HAPER3,HAPER4,HAPER5:
                    HAPER6,HAPER7,HAPER8,HAPER9,HAPER10:
                    HAPER11,HAPER12
          MOVE      TYEAR,SNCODFYR
          MOVE      TPERD,SNCONOPR
          REP       " 0",SNCODFYR
          WRITAB    CONTROLF,TWENTY3;*129,SNCODFYR,SNCONOPR
          DISPLAY   *P60:24,*EL,*V2LON,"*** POSTED ***",*W;
          RETURN
.------------------------------------------------------------
. Write Parameters for Barwon Linen Service
.------------------------------------------------------------
WBLS0000  WRITAB    CONTROLF,SIXTY7;INCNBLSC,INCNBLSS,*18,INCNBLSN:
                                    INCNCBLS,INCNTBLS,INCNRBLS,INCNBLSM:
                                    INCNBLAL,INCNBLPR,INCNBLTD,INCNBLON:
                                    INCNBLPT,INCNOBLS,INCNBTRN,INCNBLSD
          RETURN
.------------------------------------------------------------
. Display Parameters for Barwon Linen Service
.------------------------------------------------------------
DBLS0000  READ      CONTROLF,SIXTY7;INCNBLSC,INCNBLSS,*18,INCNBLSN:
                                    INCNCBLS,INCNTBLS,INCNRBLS,INCNBLSM:
                                    INCNBLAL,INCNBLPR,INCNBLTD,INCNBLON:
                                    INCNBLPT,INCNOBLS,INCNBTRN,INCNBLSD
.
          DISPLAY   *P50:3,*EF,*V2LON,"Barwon Linen Service Interface ",*HOFF:
                  *P1:4,*V2LON," 1.",*HOFF," BLS Customer Code               :":
                  *P1:5,*V2LON," 2.",*HOFF," BLS Supplier Code               :":
                  *P1:6,*V2LON," 3.",*HOFF," BLS Transmission Date (DDMMCCYY):":
                  *P1:7,*V2LON," 4.",*HOFF," BLS Next Transmission Number    :":
                  *P1:8,*V2LON," 5.",*HOFF," Port Using Modem                :":
                  *P1:9,*V2LON," 6.",*HOFF," Command for BLS Connection      :":
                 *P1:10,*V2LON," 7.",*HOFF," Command for BLS Transfer        :":
                 *P1:11,*V2LON," 8.",*HOFF," Command for BLS Receive Orders  :":
                 *P1:12,*V2LON," 9.",*HOFF," Message for BLS Orders          :":
                 *P1:13,*V2LON,"10.",*HOFF," Transmit all BLS orders      Y/N:":
                 *P1:14,*V2LON,"11.",*HOFF," Transmit printed orders only Y/N:":
                 *P1:15,*V2LON,"12.",*HOFF," BLS Transfer Directory          :":
                 *P1:16,*V2LON,"13.",*HOFF," BLS Code to use (0=cust, 1=vend):":
                 *P1:17,*V2LON,"14.",*HOFF," Order Method (1=Direct 2=Return):":
                    *P40:4,*V2LON,INCNBLSC:
                    *P40:5,INCNBLSS
          MOVE      INCNBLSS,KEY5          * Display description
          CALL      RDAPMA1
          BRANCH    OVRCD,DBLS1000
          DISPLAY   *P50:5,APMASN1
DBLS1000  UNPACK    INCNBLSD INTO CCENT,CYEAR,CMON,CDAY
          MOVE      SIX,CVERT
          MOVE      "40",CCOL
          MOVE      ONE,CCENTRY
          CALL      DSPDATE
          DISPLAY   *P40:7,*V2LON,INCNBLSN:
                    *P40:8,INCNBTRN:
                    *P40:9,INCNCBLS:
                    *P40:10,INCNTBLS:
                    *P40:11,INCNRBLS:
                    *P40:12,INCNBLSM:
                    *P40:15,INCNBLTD:
                    *P40:16,INCNBLPT:
                    *P40:17,INCNOBLS;
.
          IF        INCNBLAL=1
            DISPLAY   *P40:13,*V2LON,"Yes";
          ELSE
            DISPLAY   *P40:13,*V2LON,"No ";
          ENDIF
.
          IF        INCNBLPR=1
            DISPLAY   *P40:14,*V2LON,"Yes";
          ELSE
            DISPLAY   *P40:14,*V2LON,"No ";
          ENDIF
.
          RETURN
+
.---------------------------------------------------------------------------
. Update Barwon Linen Service Interface Details
.---------------------------------------------------------------------------
UBLS0000  CALL      MAINQST
          COMPARE   ZERO,CCITEM
          IF        @EQUAL
            MOVE      ZERO,OVRCD
            GOTO      UBLS9999
          ENDIF
          IF        @LESS
            MOVE      ONE,OVRCD
            GOTO      UBLS9999
          ENDIF
          BRANCH    CCITEM OF UBLS1100,UBLS1200,UBLS1300,UBLS1400,UBLS1500:
                             UBLS1600,UBLS1700,UBLS1800,UBLS1900,UBLS2000:
                             UBLS2100,UBLS2200,UBLS2300,UBLS2400
          BEEP
          GOTO      UBLS0000
.
. BLS Customer Code
.------------------
UBLS1100  KEYIN     *P40:4,*V2LON,*RV,INCNBLSC,*EL
          ENDSET    INCNBLSC
          APPEND    SP6,INCNBLSC
          RESET     INCNBLSC
          MOVE      ZERO,OVRCD               * Set write flag
          GOTO      UBLS0000
.
. BLS Supplier Code
.--------------------
UBLS1200  DISPLAY   *P40:5,*EL,UNDLN5
          KEYIN     *P40:5,*V2LON,*JR,*ZF,INCNBLSS:
                    *P40:5,*V2LON,*DV,INCNBLSS
.
          ENDSET    INCNBLSS
          APPEND    SP5,INCNBLSS
          RESET     INCNBLSS
          MATCH     SP5 TO INCNBLSS
          GOTO      UBLS1290 IF EQUAL
          MOVE      INCNBLSS,KEY5
          CALL      RDAPMA1
          IF        OVRCD=1
            DISPLAY   *P1:24,*EL,*B,"Supplier Code is not on file.  ";
            CALL      HITENTER
            GOTO      UBLS1200
          ENDIF
.
          DISPLAY   *P50:5,APMASN1
UBLS1290  MOVE      ZERO,OVRCD               * Set write flag
          GOTO      UBLS0000
.
.
. BLS Transmission Date
.------------------------
UBLS1300  MOVE      SIX,CVERT
          MOVE      "40",CCOL
          MOVE      ONE,CCENTRY             * No centuries
          CALL      KEYDATE
.
          CALL      PACDATE                  * Format date
          UNPACK    CPCDATE,CDAY,ANS,CMON,ANS,CCENT,CYEAR
          PACK      INCNBLSD,CCENT,CYEAR,CMON,CDAY
          REP       " 0",INCNBLSD
          MOVE      ZERO,OVRCD               * Set write flag
          GOTO      UBLS0000
.
. BLS Next Transmission Number
.-------------------------------
UBLS1400  DISPLAY   *P40:7,*EL,UNDLN3
          KEYIN     *P40:7,*V2LON,INCNBLSN,*EL
          MOVE      ZERO,OVRCD               * Set write flag
          GOTO      UBLS0000
.
. VHA Port of person using Modem
.----------------------------------------
UBLS1500  DISPLAY   *P40:8,*EL,UNDLN2
          KEYIN     *P40:8,*V2LON,INCNBTRN,*EL
          ENDSET    INCNBTRN
          APPEND    SP2,INCNBTRN
          RESET     INCNBTRN
          MOVE      ZERO,OVRCD               * Set write flag
          GOTO      UBLS0000
.
. Command to execute for BLS connect only
.-----------------------------------------
UBLS1600  DISPLAY   *P40:9,*EL,UNDLN,UNDLN5
          KEYIN     *P40:9,*V2LON,INCNCBLS,*EL
          ENDSET    INCNCBLS
          APPEND    SP30,INCNCBLS
          APPEND    SP30,INCNCBLS
          RESET     INCNCBLS
          MOVE      ZERO,OVRCD               * Set write flag
          GOTO      UBLS0000
.
. Command to execute for BLS Transfer
.------------------------------------
UBLS1700  DISPLAY   *P40:10,*EL,UNDLN,UNDLN5
          KEYIN     *P40:10,*V2LON,INCNTBLS,*EL
          ENDSET    INCNTBLS
          APPEND    SP30,INCNTBLS
          APPEND    SP30,INCNTBLS
          RESET     INCNTBLS
          MOVE      ZERO,OVRCD               * Set write flag
          GOTO      UBLS0000
.
. Command to execute for VHA receive only
.--------------------------------------------
UBLS1800  DISPLAY   *P40:11,*EL,UNDLN,UNDLN5
          KEYIN     *P40:11,*V2LON,INCNRBLS,*EL
          ENDSET    INCNRBLS
          APPEND    SP30,INCNRBLS
          APPEND    SP30,INCNRBLS
          RESET     INCNRBLS
          MOVE      ZERO,OVRCD               * Set write flag
          GOTO      UBLS0000
.
. Message for BLS Orders
.----------------------------
UBLS1900  DISPLAY   *P40:12,*EL,UNDLN,UNDLN5
          KEYIN     *P40:12,*V2LON,INCNBLSM,*EL
          ENDSET    INCNBLSM
          APPEND    SP30,INCNBLSM
          APPEND    SP30,INCNBLSM
          RESET     INCNBLSM
          MOVE      ZERO,OVRCD               * Set write flag
          GOTO      UBLS0000
.
. Transmit all BLS Orders
.-------------------------
UBLS2000  KEYIN     *P40:13,*EL,*V2LON,ANS
          MOVE      ZERO,OVRCD               * Set write flag
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          IF        @EQUAL
            MOVE      ONE,INCNBLAL
            DISPLAY   *P40:13,*V2LON,"Yes"; 
            GOTO      UBLS0000        
          ENDIF
          MATCH     ANSN,ANS
          IF        @EQUAL
            MOVE      ZERO,INCNBLAL
            DISPLAY   *P40:13,*V2LON,"No ";
            GOTO      UBLS0000        
          ENDIF
          BEEP
          GOTO      UBLS2000
.
. Transmit printed orders only
.-----------------------------------------------
UBLS2100  KEYIN     *P40:14,*EL,*V2LON,ANS
          MOVE      ZERO,OVRCD               * Set write flag
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          IF        @EQUAL
            MOVE      ONE,INCNBLPR
            DISPLAY   *P40:14,*V2LON,"Yes";
            GOTO      UBLS0000        
          ENDIF
          MATCH     ANSN,ANS
          IF        @EQUAL
            MOVE      ZERO,INCNBLPR
            DISPLAY   *P40:14,*V2LON,"No ";
            GOTO      UBLS0000        
          ENDIF
.
          BEEP
          GOTO      UBLS2100
.
. Transfer Directory
.-------------------------------------
UBLS2200  DISPLAY   *P40:15,*EL,UNDLN20
          KEYIN     *P40:15,*V2LON,INCNBLTD,*EL
          ENDSET    INCNBLTD
          APPEND    SP6,INCNBLTD
          RESET     INCNBLTD
          MOVE      ZERO,OVRCD               * Set write flag
          GOTO      UBLS0000
.
. 0=Use BLS Customer Code, 1=Use BLS Vendor Code
.-----------------------------------------------
UBLS2300  REPEAT
            MOVE      INCNBLPT,F1
            KEYIN     *P40:16,*V2LON,*RV,F1,*EL;
          UNTIL     F1=0 | F1=1
          MOVE      F1,INCNBLPT
          DISPLAY   *P40:16,*V2LON,INCNBLPT,*EL;
          MOVE      ZERO,OVRCD               * Set write flag
          GOTO      UBLS0000
.
. Order Method  1=Direct  2=Return
.---------------------------------
UBLS2400  REPEAT
            MOVE      INCNOBLS,F1
            KEYIN     *P40:17,*V2LON,*RV,F1,*EL;
          UNTIL     F1=1 | F1=2
          MOVE      F1,INCNOBLS
          DISPLAY   *P40:17,*V2LON,INCNOBLS,*EL;
          MOVE      ZERO,OVRCD               * Set write flag
          GOTO      UBLS0000
.
UBLS9999  RETURN
+
.------------------------------------------------------------------
          INC       APSMASIO/INC
          INC       IBAGSTIO/INC
          INC       IBAGKIKY
          INC       IBAGSTKY
          INC       PATMCHIO/INC
          INC       SINCCAIO/INC
          INC       SINWARIO/INC
          INC       SINWARKY
          INC       PATMCHRD                * Miscellaneous Charges read routine
.
          INC       STDGENCD
.
