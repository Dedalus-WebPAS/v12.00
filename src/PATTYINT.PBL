.*****************************************************************************
.* System    :   Patient Managaement                                         *
.* Program   :   PATTYINT                                                    *
.* Desc      :   Pharmacy Interface (Patient Transfer To You)                *
.*****************************************************************************
.* Date      :   05/05/2010                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program will load all the current inpatients and       *
.*               patients who have been discharged on the day the program    *
.*               is run, and write the relevant data to an ASCII file ready  *
.*               for PaTTY to pick up.                                       *
.* Mods      :                                                               *
.* V11.04.01 05.02.2024 DA Sarkies     TSK 0936282                           *
.*           Fixed code to allow for 19 digit heath fund number              *
.* V10.10.01 22/03/2017 Richa Phogat   TSK 0832066                           *
.*           Changed DVA Card Number and DVA Card colour to be collected     *
.*           from PMCDCNUM.PMSCCDFD and PMCDDVAC.PMSPX2FD instead of         *
.*           PREPAT.PMIMA1FD and PMPXDVAC.PMIMA1FD                           *
.* V10.01.01 10/03/2011 Jill Parkinson CAR 233088                            *
.*           Added pmsvx1af                                                  *
.* V10.00.04 18/10/2010  Steve Armstrong   CAR 500161 (LANDesk)              *
.*           Mods to check for standard concession card & safety net         *
.*           card - previously only getting one card, even where multiple    *
.*           cards existed.                                                  *
.* V10.00.03 29/09/2010  Steve Armstrong   CAR 500126 (LANDesk)              *
.*           Mods for DVA & Concession card to assume that a blank expiry    *
.*           date equates to a current card.                                 *
.* V10.00.02 27/07/2010  Steve Armstrong   CAR 500012 (LANDesk)              *
.*           Fixed setting of Concession Card to load into PTTYCNUM instead  *
.*           of PTTYDVAN.                                                    *
.*           Mods to reduce "Medicare Valid To Date" from 10 characters in   *
.*           length to 5.                                                    *
.*           Mods to setting of "Repatriation Card Colour" to use            *
.*           pmsccdaf.pmcddvac, or if blank, then use pmspx2af.pmpxdvac.     *
.* V10.00.01 29/06/2010 Sandra Barcham 224954                                *
.*           Change medicare expiry date from DD/MM/CCYY to MM/YY            *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       PATCODFD/INC
          INC       PATDSCFD/INC
          INC       PATMA1FD/INC
          INC       PATMI1FD/INC
          INC       PMSVX1FD/INC
          INC       PATMRGFD/INC
          INC       PMSCCDFD/INC
          INC       PMSPX2FD/INC
.
PTTYFILE  FILE      ASCII, FIXED=500
.
. Field   Type    Length  Start     Description
.------   ----    ------  -----     -----------------------------------
.PIPE     DIM       1       1       Pipe delimiter
PTTYSNAM  DIM       20      2       Surname
.PIPE     DIM       1      22       Pipe delimiter
PTTYGNAM  DIM       25     23       Given Name
.PIPE     DIM       1      48       Pipe delimiter
PTTYTITL  DIM       6      49       Title
.PIPE     DIM       1      55       Pipe delimiter
PTTYADDR  DIM       71     56       Address
.PIPE     DIM       1     127       Pipe delimiter
PTTYSUBR  DIM       35    128       Suburb
.PIPE     DIM       1     163       Pipe delimiter
PTTYPOST  DIM       8     164       Postcode
.PIPE     DIM       1     172       Pipe delimiter
PTTYPHON  DIM       20    173       Phone Number
.PIPE     DIM       1     193       Pipe delimiter
PTTYEMAL  DIM       80    194       Email Address
.PIPE     DIM       1     274       Pipe delimiter
PTTYSTAT  DIM       1     275       Status
.                                        A = Active (current admission)
.                                        P = Popular (not used )
.                                        U = Unpopular (not used)
.                                        D = Deceased
.                                        I = Discharged
.PIPE     DIM       1     276       Pipe delimiter
PTTYCNUM  DIM       11    277       Concession Number
.PIPE     DIM       1     288       Pipe delimiter
PTTYCDAT  DIM       10    289       Concession Valid To Date (dd/mm/ccyy)
.PIPE     DIM       1     299       Pipe delimiter
PTTYDVAN  DIM       10    300       Repatriation Number
.PIPE     DIM       1     310       Pipe delimiter
PTTYDVAC  DIM       1     311       Repatriation Card Colour
.                                        G = Gold
.                                        W = White
.                                        O = Orange
.PIPE     DIM       1     312       Pipe delimiter
PTTYSNNO  DIM       11    313       Safety Net Ent. Number
.PIPE     DIM       1     324       Pipe delimiter
PTTYBDAT  DIM       10    325       Birth Date (dd/mm/ccyy)
.PIPE     DIM       1     335       Pipe delimiter
PTTYMEDC  DIM       11    336       Medicare Number (including reference no.)
.PIPE     DIM       1     347       Pipe delimiter
PTTYMCDT  DIM       5     348       Medicare Valid To Date (mm/yy)
.PIPE     DIM       1     353       Pipe delimiter
PTTYALGY  DIM       25    354       Allergy Codes
.PIPE     DIM       1     379       Pipe delimiter
PTTYHOSP  DIM       4     380       Hospital Code
.PIPE     DIM       1     384       Pipe delimiter
PTTYROOM  DIM       4     385       Room Number
.PIPE     DIM       1     389       Pipe delimiter
PTTYBEDN  DIM       3     390       Bed Number
.PIPE     DIM       1     393       Pipe delimiter
PTTYURNO  DIM       8     394       U/R Number
.PIPE     DIM       1     402       Pipe delimiter
PTTYWARD  DIM       4     403       Ward Number
.PIPE     DIM       1     407       Pipe delimiter
PTTYADMN  DIM       8     408       Admission Number
.PIPE     DIM       1     416       Pipe delimiter
PTTYATYP  DIM       1     417       Account Type
.PIPE     DIM       1     418       Pipe delimiter
PTTYMAIL  DIM       4     419       Mail Category
.PIPE     DIM       1     423       Pipe delimiter
PTTYFUND  DIM       6     424       Health Fund Id
.PIPE     DIM       1     430       Pipe delimiter
PTTYTABL  DIM       8     431       Health Fund Table
.PIPE     DIM       1     439       Pipe delimiter
PTTYFMEM  DIM       10    440       Health Fund Membership No.
.PIPE     DIM       1     450       Pipe delimiter
PTTYIDAT  DIM       10    451       Insurance Valid to Date (dd/mm/ccyy)
.PIPE     DIM       1     461       Pipe delimiter
PTTYOURN  DIM       8     462       Old U/R Number
.PIPE     DIM       1     470       Pipe delimiter
PTTYOADM  DIM       8     471       Old Admission Number
.PIPE     DIM       1     479       Pipe delimiter
PTTYNOTE  DIM       1               Additional Patient Notes (not sent)
.PIPE     DIM       1     480       Pipe delimiter
.
. End of record           481
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ADMCOUNT  FORM      3
DISCOUNT  FORM      3
CMDLINE   DIM       80
CURRDATE  DIM       8             * current date (ccyymmdd)
FILENAME  DIM       8             * interface file name
PTCNPATY  DIM       60
.
.
. PROGRAM CONSTANTS
. -----------------
CATCT     INIT      "ct"
CRETURN   INIT      015
PIPE      INIT      "|"
SP11      INIT      "           "
TILDA20   INIT      "~~~~~~~~~~~~~~~~~~~~"
.
.
PRGID     INIT      "PATTYINT"
PRGNAM    INIT      "Pharmacy Interface"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000       * proceed with data extract
.
MAIN1000  CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0100:        * no
                          MAIN0100         * cancel
.
MAIN2000  CALL      CREA0000               * create and open interface file
          CALL      GCUR0000               * get current admissions
          CALL      GDIS0000               * get today's discharges
.
MAIN3000  CALL      MVEXT000               * Move Extract file to sub-directory
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"pmsccdaf";
          OPEN      PMSCCDA1,"pmsccdaf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PATMI1A2,"patmi1af"
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"patdschf";
          OPEN      PATDSCH2,"patdschf"
.
          DISPLAY   *P64:24,"patmrgaf";
          OPEN      PATMRGG2,"patmrgaf"
.         
          DISPLAY   *P58:24,"controlf"
          OPEN      CONTROLF,"controlf"
.
.         Save the current date
.
          CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
          READ      CONTROLF,HUND18;*1,PTCNPATY  * Pharmacy Interface Parameter
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run data extract                        *
.*                        TRUE  (1)  Exit option selected                    *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Pharmacy Data Extract"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run data extract
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               CREA0000              Called by: MAIN0000   *
.*                Create and open the interface file                         *
.*****************************************************************************
.
.         PaTTY renames the interface file prior to processing it, so
.         if the file doesn't exist, then we need to create it.  Otherwise,
.         the file just needs to be opened.
.
CREA0000  MOVE      "pattyfil",FILENAME
          PREP      PTTYFILE,FILENAME
.
CREA9999  RETURN
+
.*****************************************************************************
.*                               GCUR0000              Called by: MAIN0000   *
.*        Loop through the admission table looking for current admissions    *
.*        and write any found to the interface file.                         *
.*****************************************************************************
.
GCUR0000  DISPLAY   *P1:24,*EL,"Processing admission:";
.
          MOVE      ZERO,ADMCOUNT                * initialise count
.
          PACK      KEY9,TWO,SP10
          CALL      RDSMISS2                     * pos'n on current inpatients
GCUR0500  CALL      RDKMISS2                     * read next record
          BRANCH    OVRCD,GCUR9999               * eof - finished
.
          COMPARE   TWO,ASTAT                    * same status still ?
          GOTO      GCUR9999 IF NOT EQUAL        * no - finished
.
          DISPLAY   *P23:24,*EL,*V2LON,AADMNO;
.
          CALL      GPMI0000                     * get all PMI details
          BRANCH    EXIT,GCUR0500                * error - ignore record
.
          CALL      CMRG0000                     * check for U/R merge today
.
          ADD       ONE,ADMCOUNT                 * increment count
          CALL      LREC0000                     * load variables and write rec.
.
          GOTO      GCUR0500                     * get next admission
.
GCUR9999  RETURN
+
.*****************************************************************************
.*                               GDIS0000              Called by: MAIN0000   *
.*        Loop through the discharge table looking for any discharges for    *
.*        today and write any found to the interface file.                   *
.*****************************************************************************
.
GDIS0000  DISPLAY   *P12:24,*EL,"discharges:";
.
          MOVE      ZERO,DISCOUNT                * initialise count
.
          PACK      KEY16,CURRDATE,SP20
          CALL      RDSDSCH2                     * position on today's records
GDIS0500  CALL      RDKDSCH2                     * read next record
          BRANCH    OVRCD,GDIS9000               * eof - finished
.
          MATCH     CURRDATE,DDATE               * same date still ?
          GOTO      GDIS9000 IF NOT EQUAL        * no - finished
.
.         A discharge record for today has been found
.
          DISPLAY   *P23:24,*EL,*V2LON,DADMNO;
.
          MOVE      DURNO,KEY8
          CALL      RDPTMIS1                     * admission record found ?
          BRANCH    OVRCD,GDIS0500               * no - ignore record
.
          CALL      GPMI0000                     * get all PMI details
          BRANCH    EXIT,GDIS0500                * error - ignore record
.
          CALL      CMRG0000                     * check for U/R merge today
.
          ADD       ONE,DISCOUNT                 * increment count
          CALL      LREC0000                     * load variables and write rec.
.
          GOTO      GDIS0500                     * get next record
.
GDIS9000  DISPLAY   *P1:21,*EF,"Current admissions processed: ":
                    *V2LON,ADMCOUNT,*HOFF:
                    *P1:22,"Today's discharges processed: ":
                    *V2LON,DISCOUNT,*HOFF:
                    *P1:24,"Data extract completed.  ";
          CALL      HITENTER
.
GDIS9999  RETURN
+
.*****************************************************************************
.*                               LREC0000              Called by: GCUR0000   *
.*        Load the record variables and write to the interface    GDIS0000   *
.*        file                                                               *
.*****************************************************************************
.
LREC0000  MOVE      PSNAME,PTTYSNAM              * load surname
          MOVE      PGNAME,PTTYGNAM              * load given name
          PACK      PTTYTITL,PTITL,SP10          * load title
.
          MOVE      PADD1,PTTYADDR               * load address (line 1 & 2)
          STRIP     PTTYADDR
          ENDSET    PTTYADDR
          APPEND    SP1,PTTYADDR
          APPEND    PADD2,PTTYADDR
          APPEND    SP70,PTTYADDR
          RESET     PTTYADDR
.
          MOVE      PSUBRB,PTTYSUBR              * load suburb
          MOVE      PPOST,PTTYPOST               * load postcode
.
          MATCH     SP20,PTELEP                  * load phone number
          IF        @EQUAL
            MOVE      SP20,PTTYPHON
          ELSE
            MOVE      PTELEP,PTTYPHON
          ENDIF
.
          MATCH     SP70,PMPXPEML                * load email address
          IF        @EQUAL
            PACK      PTTYEMAL,SP70,SP10
          ELSE
            MOVE      PMPXPEML,PTTYEMAL
          ENDIF
.
          MOVE      ANSA,PTTYSTAT                * load status
          IF        ASTAT = 3
            MOVE      ANSI,PTTYSTAT
          ENDIF
          IF        PCEASE = 1
            MOVE      ANSD,PTTYSTAT
          ENDIF
.
          CALL      GCON0000                     * get concession card details
          CALL      DVAN0000                     * get DVA number
.
          UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY   * load date of birth
          CALL      PACDATE
          MOVE      CPCDATE,PTTYBDAT
.
          MATCH     SP10,PMEDI                   * blank medicare number ?
          IF        @EQUAL
            MOVE      SP20,PTTYMEDC              * yes
            GOTO      LREC1000
          ENDIF
.
          PACK      PTTYMEDC,PMEDI,SP20          * load medicare number
          MATCH     SP2,PTMXMCCD                 * medicare ref. no. blank ?
          GOTO      LREC1000 IF EQUAL            * yes
.
          STRIP     PTTYMEDC
          ENDSET    PTTYMEDC
          MOVE      PTMXMCCD,DIM2
          SQUEEZE   DIM2                         * remove blanks
          MATCH     "0",DIM2                     * leading zero ?
          IF        @EQUAL
            UNPACK    DIM2,ANS,ANS               * yes - take second char.
            APPEND    ANS,PTTYMEDC
          ELSE
            APPEND    DIM2,PTTYMEDC
          ENDIF
          RESET     PTTYMEDC
          PACK      PTTYMEDC,PTTYMEDC,SP20
.
LREC1000  MATCH     SP8,PMPXMEDC                 * load medicare expiry date
          IF        @EQUAL
            MOVE      SP5,PTTYMCDT
          ELSE
            UNPACK    PMPXMEDC,CCENT,CYEAR,CMON,CDAY
            PACK      PTTYMCDT,CMON,SLASH,CYEAR,SP5
          ENDIF
.
          MOVE      SP30,PTTYALGY                * load allergy codes
          MOVE      SP4,PTTYHOSP                 * load hosptial code
          MOVE      SP4,PTTYROOM
          MOVE      ABED,PTTYBEDN                * load bed number
          MOVE      PURNO,PTTYURNO               * load U/R number
          PACK      PTTYWARD,AWARD,SP10          * load ward
          MOVE      AADMNO,PTTYADMN              * load admission number
          MOVE      SP1,PTTYATYP                 * load account type
          MOVE      SP4,PTTYMAIL                 * load mail category
.
          MATCH     SP6,AFUNDH                   * health fund blank ?
          IF        @EQUAL
            MOVE      SP6,PTTYFUND               * yes
          ELSE
            MOVE      AFUNDH,PTTYFUND            * no - load hf
          ENDIF
.
          MATCH     SP8,AFNDTB                   * health fund table blank ?
          IF        @EQUAL
            MOVE      SP8,PTTYTABL               * yes
          ELSE
            MOVE      AFNDTB,PTTYTABL            * no - load hf table
          ENDIF
.
          MATCH     SP70,AFNDMM                  * hf membership no. blank ?
          IF        @EQUAL
            MOVE      SP9,PTTYFMEM               * yes
          ELSE
            MOVE      AFNDMM,PTTYFMEM            * no - load hf memb. no.
          ENDIF
.
          MOVE      SP10,PTTYIDAT                * load ins. expiry date
          MOVE      SP8,PTTYOADM                 * load old admission number
.
.         Note: PTTYNOTE (additional patient notes) is not sent
.
          WRITE     PTTYFILE,SEQ;PIPE,PTTYSNAM,PIPE,PTTYGNAM,PIPE,PTTYTITL,PIPE:
                                 PTTYADDR,PIPE,PTTYSUBR,PIPE,PTTYPOST,PIPE:
                                 PTTYPHON,PIPE,PTTYEMAL,PIPE,PTTYSTAT,PIPE:
                                 PTTYCNUM,PIPE,PTTYCDAT,PIPE,PTTYDVAN,PIPE:
                                 PTTYDVAC,PIPE,PTTYSNNO,PIPE,PTTYBDAT,PIPE:
                                 PTTYMEDC,PIPE,PTTYMCDT,PIPE,PTTYALGY,PIPE:
                                 PTTYHOSP,PIPE,PTTYROOM,PIPE,PTTYBEDN,PIPE:
                                 PTTYURNO,PIPE,PTTYWARD,PIPE,PTTYADMN,PIPE:
                                 PTTYATYP,PIPE,PTTYMAIL,PIPE,PTTYFUND,PIPE:
                                 PTTYTABL,PIPE,PTTYFMEM,PIPE,PTTYIDAT,PIPE:
                                 PTTYOURN,PIPE,PTTYOADM,PIPE,PIPE,CRETURN
.
LREC9999  RETURN
+
.*****************************************************************************
.*                              DVAN0000           Called by: WPAT0000       *
.*     Get the patient DVA number from the concession card file              *
.* Requires: PURNO - U/R number                                              *
.*           PMCDDVAC - DVA card colour coded field                          *
.* Returns:  PTTYDVAN - Concession Card Number                               *
.*           PTTYDVAC - DVA card colour                                      *
.*                         W = White card                                    *
.*                         G = Gold card                                     *
.*                         Blank = Unknown or not entered                    *
.*****************************************************************************
.
DVAN0000  MOVE      SP10,PTTYDVAN                * initialise DVA number
          MOVE      SP1,PTTYDVAC                 * initialise DVA card colour
.
          PACK      KEY19,PURNO,TILDA20
          CALL      RSPMCCD1                     * position on U/R
DVAN0500  CALL      RPPMCCD1                     * read previous record
          BRANCH    OVRCD,DVAN9100               * eof - nothing found
.
          MATCH     PURNO,PMCDURNO               * same U/R still ?
          GOTO      DVAN9100 IF NOT EQUAL        * no - nothing found
.
.         Check if the card type is DVA (Cat ct, Indicator 1 = 3)
.
          PACK      KEY5,CATCT,PMCDCTYP
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,DVAN0500               * no - ignore record
.
          MATCH     SP1,TCINDC1                  * blank indicator 1 ?
          GOTO      DVAN0500 IF EQUAL            * yes - ignore record
.
          TYPE      TCINDC1                      * numeric indicator 1
          GOTO      DVAN0500 IF NOT EQUAL        * no - ignore record
.
          MATCH     "3",TCINDC1                  * DVA card type ?
          GOTO      DVAN0500 IF NOT EQUAL        * no - ignore record
.
.         A DVA concession card has been found, so check
.         if there is an expiry date
.
          MATCH     SP8,PMCDEXDT                 * expiry date blank ?
          GOTO      DVAN1000 IF EQUAL            * yes - valid card (500126)
.
.         There is an expiry date for the card, so check that the
.         card is current
.
          MATCH     CURRDATE,PMCDEXDT            * card valid for date ?
          GOTO      DVAN9100 IF LESS             * no - finished
.
.         DVA concession card is current
.
DVAN1000  MATCH     SP20,PMCDCNUM                * card number blank ?
          GOTO      DVAN9100 IF EQUAL            * yes - finished
.
          MOVE      PMCDCNUM,PTTYDVAN            * load concession card number
.
DVAN9100  MATCH     SP3,PMCDDVAC                 * blank card colour ?
          GOTO      DVAN9999 IF EQUAL            * yes - finished
.
          PACK      KEY5,ANSD,ANSX,PMCDDVAC
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,DVAN9999               * no - finished
.
          MATCH     ANSW,THCSCOD                 * white card ?
          IF        @EQUAL
            MOVE      ANSW,PTTYDVAC              * yes
            GOTO      DVAN9999
          ENDIF
.
          MATCH     ANSG,THCSCOD                 * gold card ?
          IF        @EQUAL
            MOVE      ANSG,PTTYDVAC              * yes
            GOTO      DVAN9999
          ENDIF
.
DVAN9999  RETURN
+
.*****************************************************************************
.*                              GCON0000           Called by: WPAT0000       *
.*          See if the patient has a current concession card                 *
.* Requires: PURNO - U/R number                                              *
.* Returns:  PTTYCNUM - Concession Card Number                               *
.*           PTTYCDAT - Concession Valid To Date                             *
.*           PTTYSNNO - Safety Net Entitlement Number                        *
.*****************************************************************************
.
GCON0000  MOVE      SP20,PTTYCNUM                * initialise conc. card vars.
          MOVE      SP10,PTTYCDAT
          MOVE      SP20,PTTYSNNO
.
.         Get the most recent concession card that is currently valid
.
          PACK      KEY19,PURNO,TILDA20
          CALL      RSPMCCD1                     * position on U/R
GCON0500  CALL      RPPMCCD1                     * read previous record
          BRANCH    OVRCD,GCON9999               * eof - nothing found
.
          MATCH     PURNO,PMCDURNO               * same U/R still ?
          GOTO      GCON9999 IF NOT EQUAL        * no - nothing found
.
.         Check if the card type is DVA (Cat ct, Indicator 1 = 3) and
.         ignore the record if it is.
.
          PACK      KEY5,CATCT,PMCDCTYP
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,GCON0500               * no - ignore record
.
          MATCH     SP1,TCINDC1                  * blank indicator 1 ?
          GOTO      GCON0500 IF EQUAL            * yes - ignore record
.
          TYPE      TCINDC1                      * numeric indicator 1
          GOTO      GCON0500 IF NOT EQUAL        * no - ignore record
.
          MATCH     "3",TCINDC1                  * DVA card type ?
          GOTO      GCON0500 IF EQUAL            * yes - ignore record
.
.         A concession card has been found, so check if there is an expiry date
.
          MATCH     SP8,PMCDEXDT                 * expiry date blank ?
          GOTO      GCON1000 IF EQUAL            * yes - finished
.
.         There is an expiry date for the card, so check that the
.         card is current
.
          MATCH     CURRDATE,PMCDEXDT            * card valid for date ?
          GOTO      GCON0500 IF LESS             * no - finished
.
.         Concession card is current
.
GCON1000  MATCH     SP20,PMCDCNUM                * card number blank ?
          GOTO      GCON0500 IF EQUAL            * yes - finished
.
.         An SN number represents a Safety Net Entitlement card (which may
.         be issued in addition to a Safety Net Concession Card).  The SN..
.         number should only be stored in the Safety Net Entitlement Number
.         field.  The third character of the number represents the year, so for
.         a 2010 card, the number would be SN0..., for a 2011 card, the
.         number would be SN1...and so on.  It is assumed that if the card is
.         current (date wise), then it should be valid SN number for the year.
.         Not really sure that sites are actually capturing this or whether
.         we should be sending it in this extract.
.
          MATCH     "SN",PMCDCNUM
          IF        @EQUAL
            MATCH     SP11,PTTYSNNO              * safety net ent. no. blank ?
            GOTO      GCON0500 IF NOT EQUAL      * no - ignore record
.
            MOVE      PMCDCNUM,PTTYSNNO          * load safety net ent. number
            GOTO      GCON0500                   * get next record
          ENDIF
.
.         The card is a standard concession card
.
          MOVE      PMCDCNUM,PTTYCNUM            * load concession card number
          MATCH     SP8,PMCDEXDT              
          IF        !@EQUAL
            UNPACK    PMCDEXDT,CCENT,CYEAR,CMON,CDAY  * load expiry date
            CALL      PACDATE
            MOVE      CPCDATE,PTTYCDAT
          ENDIF
.
          GOTO      GCON0500
.
GCON9999  RETURN
+
.*****************************************************************************
.*                               GPMI0000              Called by: GCUR0000   *
.*                  Get all the PMI details for the patient       GDIS0000   *
.* Requries:  AURNO - u/r number                                             *
.* Returns:   EXIT  0 = Ok to continue                                       *
.*                  1 = Error occurred                                       *
.*****************************************************************************
.
GPMI0000  MOVE      AURNO,KEY8
          CALL      RDMAST1                      * PMI record found ?
          BRANCH    OVRCD,GPMI9100               * no - ignore record
.
          MOVE      AURNO,KEY8
          CALL      RDPMPX21                     * PMI extension record found ?
          BRANCH    OVRCD,GPMI9100               * no - ignore record
.
          MOVE      ZERO,EXIT
          GOTO      GPMI9999
.
GPMI9100  MOVE      ONE,EXIT
.
GPMI9999  RETURN
+
.*****************************************************************************
.*                               CMRG0000              Called by: GCUR0000   *
.*                Check if the patient was merged today           GDIS0000   *
.* Requries:  AURNO - u/r number                                             *
.* Returns:   PTTYOURN - old u/r number                                      *
.*****************************************************************************
.
CMRG0000  MOVE      SP8,PTTYOURN                 * initialise old U/R
.
.         Check if the patient has been merged today
.
          PACK      KEY17,THREE,AURNO,TILDA20
          CALL      RSPTMRG2                     * position on u/r
          CALL      RPPTMRG2                     * read previous record
          BRANCH    OVRCD,CMRG9999               * eof - no merge for U/R
.
          COMPARE   THREE,PTMRSTAT               * same status ?
          GOTO      CMRG9999 IF NOT EQUAL        * no - no merge for U/R
.
          MATCH     AURNO,PTMRNWUR               * same U/R still ?
          GOTO      CMRG9999 IF NOT EQUAL        * no - no merge for U/R
.
          MATCH     CURRDATE,PTMRRDTE            * merged today ?
          GOTO      CMRG9999 IF NOT EQUAL        * no - no merge for U/R
.
.         The U/R was merged today, so load the old U/R variable
.
          MOVE      PTMROLUR,PTTYOURN
.
CMRG9999  RETURN
+
.*****************************************************************************
.*                               MVEXT000              Called by:            *
.*                                                                           *
.*****************************************************************************
MVEXT000  MOVE      ZERO,EXIT
          STRIP     PTCNPATY
          CLEAR     CMDLINE
          APPEND    "mv ",CMDLINE
          APPEND    FILENAME,CMDLINE
          APPEND    ".txt ",CMDLINE              
          APPEND    PTCNPATY,CMDLINE
          APPEND    FILENAME,CMDLINE
          APPEND    ".txt ",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
NVEXT999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       PATCODIO/INC
          INC       PATDSCIO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PMSVX1IO/INC
          INC       PATMRGIO/INC
          INC       PMSCCDIO/INC
          INC       PMSPX2IO/INC
+
