.******************************************************************************
.*  System        :  Allied Health                                            *
.*  Program       :  IBAALL73                                                 *
.*  Description   :  Allied Health AIMS Form Generation                       *
.******************************************************************************
.*  Date          :  26/07/2007                                               *
.*  Author        :  Jill Habasque                                            *
.*  Modifications :                                                           *
.*        V10.04.01 12/06/2014  Steve Armstrong CAR 301639                    *
.*                  Moved call to TFILENAM into INIT0000 and added call to    *
.*                  KILL0000 on exit of program.                              *
.******************************************************************************
.*        V10.03.01 10/12/2012  Ebon Clements   CAR 261630                    *
.*                  Removed port number from temp file name                   *
.******************************************************************************
.*        V9.09.00  26/07/2007  Jill Habasque   CAR 140983                    *
.*                  Created program                                           *
.******************************************************************************
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       ALLCONFD/INC
          INC       IBASEQFD/INC
          INC       PATCODFD/INC
          INC       TFILEVAR/INC
          INC       ALLENCFD/INC
          INC       ALLREFFD/INC
          INC       ALLSERFD/INC
          INC       WEBERRFD/INC
.
. LOCAL VARIABLE DEFINITION
. -------------------------
.
TEMPFIL1  IFILE     SQL, FIXED=11, KEY="U1-1,2-9,10-10"
.
.NAME     TYPE     LENGTH  PHYSICAL   START     DESCRIPTION
.----     ----     ------  --------   -----     -----------
XXGROUP   DIM           1         1       1     Group
XXURNO    DIM           8         8       2     UR Number
XXCLAIM   DIM           1         1      10     0=DVA 1=Public 
.
ERASE     INIT      "iserase "
ISBUILD   INIT      "isbuild "
TEMPFILE  DIM       8
UKEY      INIT      " 11 U1-1,2-9,10-10"    * set up for record length & key
.
CMDLINE   DIM       80                       * Command line
DVA       FORM      1
DVAIND    FORM      5
ENDDATE   DIM       8
FILENAME  INIT      "all73a"
PUBLIC    FORM      1
PUBIND    FORM      5
SPECIALT  DIM       1
STRTDATE  DIM       8
TMPFNAME  DIM       8                        * Temporary filename
TODAY     DIM       8
.
XPALOFFC  FORM      5
XPALOTHR  FORM      5
XSBREHSS  FORM      5
XSBREHNS  FORM      5
XHBREHSS  FORM      5
XCONTCLI  FORM      5
XCOGNDEM  FORM      5
XFALLMOB  FORM      5
XPAINMAN  FORM      5
XWOUNMAN  FORM      5
XMOVEDIS  FORM      5
XYOUADIS  FORM      5
.
VPALOFFC  FORM      5
VPALOTHR  FORM      5
VSBREHSS  FORM      5
VSBREHNS  FORM      5
VHBREHSS  FORM      5
VCONTCLI  FORM      5
VCOGNDEM  FORM      5
VFALLMOB  FORM      5
VPAINMAN  FORM      5
VWOUNMAN  FORM      5
VMOVEDIS  FORM      5
VYOUADIS  FORM      5
.
HPALOFFC  INIT      "Off Campus"
HPALOTHR  INIT      "Other"
HSBREHSS  INIT      "Sessional"
HSBREHNS  INIT      "Number of Group Sessions"
HHBREHSS  INIT      "Sessional"
HCONTCLI  INIT      "Continence Clinic"
HCOGNDEM  INIT      "Cognitive Dementia and Memory"
HFALLMOB  INIT      "Falls and Mobility Clinic"
HPAINMAN  INIT      "Pain Management Clinic"
HWOUNMAN  INIT      "Wound Management Clinic"
HMOVEDIS  INIT      "Movement Disorder Clinic"
HYOUADIS  INIT      "Young Adult Disability"
LOWCASES  INIT      "s "
.
.
HCHRONRD  INIT      "Chronic Respiratory Disease"
HCHRONHF  INIT      "Chronic Heart Failure"
HDIABETI  INIT      "Diabetes"
HPCOMNED  INIT      "People with Complex Needs"
HPCOMPND  INIT      "People with Complex Psycholsocial Needs"
HOTHER    INIT      "Other"
.
MONTH     DIM       9                        * Printing the month
MONTH1    INIT      "January"
MONTH2    INIT      "Feburary"
MONTH3    INIT      "March"
MONTH4    INIT      "April"
MONTH5    INIT      "May"
MONTH6    INIT      "June"
MONTH7    INIT      "July"
MONTH8    INIT      "August"
MONTH9    INIT      "September"
MONTH10   INIT      "October"
MONTH11   INIT      "November"
MONTH12   INIT      "December"
.
PRGID     INIT      "IBAALL73"
PRGNAM    INIT      "Allied Health AIMS report    "
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,ML1000         * proceed with clean up
          CALL      KDTE0000               * Key in to date
          BRANCH    EXIT,ML9999
.
ML1000    CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,ML2000:          * yes
                          ML0100:          * no
                          ML0100           * cancel
.
ML2000    CALL      CLRVAR00
          CALL      CREA0000               * create temp file
          CALL      PROC0000               * process
          CALL      PRIN0000               * print  
          CALL      KILL0000               * delete temp file
.
ML9999    CALL      KILL0000               * delete temp file
          CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          OPEN      PATCODE1,"patcodes"
          OPEN      ALLENCA4,"allencaf"
          OPEN      ALLREFA1,"allrefaf"
          OPEN      ALLSERA1,"allseraf"
.
          CALL      TFILENAM                     * Get temp file name
          MOVE      TFILNAME,TEMPFILE
.
INIT9999  RETURN
+
.******************************************************************************
.*                                  OPTN0000                                  *
.*        get user's option selection                    called by : MAINLINE *
.*                                                                            *
.*        valid options     --->  (0) Exit                                    *
.*                                (1) Run                                     *
.******************************************************************************
OPTN0000  HLINE     *G37,2,57,80
          DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*P1:5,ONE,*HOFF:
                    *P2:4," = Exit":
                    *P2:5," = Generate AIMS Form":
                    *P1:7,"Select Option :";
.
OPTN1000  KEYIN     *P17:7,*EL,*DV,UNDLN1,*P17:7,*V2LON,OPTION;
          COMPARE   ZERO,OPTION               * exit ?
          GOTO      OPTN9999 IF EQUAL         * yes
.
          BRANCH    OPTION,OPTN9999
          BEEP
          GOTO      OPTN1000
.
OPTN9999  RETURN
+
.*******************************************************************************
.*                              IDAT0000                  CALLED BY : KDAT0000 *
.*                        Initialize date variables                            *
.*******************************************************************************
IDAT0000
          MOVE      ZERO,CCANLDTE
          MOVE      CCC,CCENT
          MOVE      SP2,CYEAR
          MOVE      SP2,CMON
          MOVE      SP2,CDAY
.
IDAT9999  RETURN
+
.*******************************************************************************
.*                              KDTE0000                  CALLED BY : ML0100   *
.*                Keyin the date that will end the period                      *
.*******************************************************************************
KDTE0000  CALL      IDAT0000                 * Clear date variables
          DISPLAY   *P1:9,*EF,"Period End Date : "
          MOVE      "19",CCOL
          MOVE      NINE,CVERT
          CALL      KEYDATE                  * Keyin date
          BRANCH    OVRCD,KDTE9000
.
          PACK      ENDDATE,CCENT,CYEAR,CMON,CDAY * End of period/current month
.
          CALL      VDTE0000                 * Validate date
          BRANCH    EXIT,KDTE0000            * Error. Re-enter a new date
.
          CALL      CSCM0000
          UNPACK    STRTDATE,CCENT,CYEAR,CMON,CDAY
          UNPACK    ENDDATE,XCENT,XYEAR,XMON,XDAY
.
          DISPLAY   *P1:15,*EL,"Date range for this run will be : ",*V2LON:
                           CDAY,SLASH,CMON,SLASH,CCENT,CYEAR,*HOFF," to ":
                           *V2LON,XDAY,SLASH,XMON,SLASH,XCENT,XYEAR;
.
.         Date entered do not exit
.
          MOVE      FALSE,EXIT               * Do not exit
          GOTO      KDTE9999                 * Exit Routine
.
.         No date entered exit.
.
KDTE9000  MOVE      TRUE,EXIT                * Exit
.
KDTE9999  RETURN
+
.*******************************************************************************
.*                              VDTE0000                  CALLED BY : KDTE0000 *
.*                Validate the date so it is not in the future                 *
.*                or before the date the report was last ran                   *
.*******************************************************************************
VDTE0000  MOVE      ZERO,EXIT
.         Ensure date is not in the future.
.
          CALL      IBACLOCK                 * obtain today's date
          PACK      TODAY,CCC,CYY,CMM,CDD    * pack today' date
          REP       " 0",TODAY               * replaces spaces with zeros
.
          MATCH     ENDDATE,TODAY             * Date in future ?
          GOTO      VDTE8000 IF NOT LESS     * No. Date is valid
.
          DISPLAY   *P1:24,*EL,*B,"Date must not be in the future. ";
          CALL      HITENTER
          GOTO      VDTE9000                 * Error. Re-Key date.
.
VDTE8000  MOVE      ZERO,EXIT                * No Error.
          GOTO      VDTE9999
.
VDTE9000  MOVE      ONE,EXIT                 * Error. Re-Key date.
.
VDTE9999  RETURN
+
.*******************************************************************************
.*                              CSCM0000                  CALLED BY : ML2000   *
.*                Calculate the Start of the Current Month                     *
.*******************************************************************************
CSCM0000  UNPACK    ENDDATE,CCENT,CYEAR,CMON,CDAY  * End of period/current month
.
          PACK      STRTDATE,CCENT,CYEAR,CMON,ZERO,ONE * With Century
.
.
CSCM9999  RETURN
+
.**************************************************************************
.*                               PROC0000              Called by: ML0000  *
.*                                                                        *
.**************************************************************************
.
PROC0000  PACK      KEY24,STRTDATE,SP70
          CALL      RSALENC4
PROC0500  CALL      RKALENC4
          BRANCH    OVRCD,PROC9999
.
          MATCH     ALENSDAT,ENDDATE
          GOTO      PROC9999 IF LESS
.
          MOVE      SP70,SPECIALT
          MOVE      ZERO,PUBLIC
          MOVE      ZERO,DVA
.
          MATCH     "1",ALENRSTA           * ignore cancelled encounters
          GOTO      PROC0500 IF EQUAL
.
          MATCH     SP70,ALENSERV
          GOTO      PROC1000 IF EQUAL
.
          PACK      KEY8,ALENVISN,SP70
          CALL      RDALREF1                * Reading allref table
          BRANCH    OVRCD,PROC0500
.
          PACK      KEY9,ALREDEPT,ALENSERV,SP70
          CALL      RDALSER1                *  Reading allseraf table
          BRANCH    OVRCD,PROC1000
.
          MATCH     "1",ALSRVACS           * dont send VACS chargeable
          GOTO      PROC0500 IF EQUAL
.
          MATCH     SP70,ALSRSPEC          * use speciality if available
          GOTO      PROC1000 IF EQUAL
.
          PACK      KEY5,LOWCASES,ALSRSPEC,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,PROC1000
.
          MATCH     SP70,TCINDC1
          IF        !@EQUAL
            PACK      SPECIALT,TCINDC1
            GOTO      PROC2000
          ENDIF
.
PROC1000  PACK      KEY5,ANSC,ANSG,ALREDEPT,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,PROC0500
.
          MATCH     SP70,TCINDC5
          IF        !@EQUAL
            PACK      SPECIALT,TCINDC5
            GOTO      PROC2000
          ENDIF
          GOTO      PROC0500
.
PROC2000  MATCH     SP70,ALENCOMP
          IF        !@EQUAL
            PACK      KEY5,ANSC,ANSL,ALENCOMP,SP70
          ELSE
            PACK      KEY5,ANSC,ANSL,ALRECOMP,SP70
          ENDIF
          CALL      RDCODE1                 * Read a codes file record
          BRANCH    OVRCD,PROC0500
.
          MATCH     ANSM,THCSCOD
          IF        @EQUAL
            MOVE      ONE,PUBLIC
            GOTO      PROC4000
          ENDIF
.
          MOVE      ZERO,FORM2
PROC3000  ADD       ONE,FORM2
          COMPARE   SIX,FORM2
          GOTO      PROC0500 IF NOT LESS    * Counter >= 6
.
          LOAD      ANS,FORM2,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
          CMATCH    "V",ANS
          IF        @EQUAL
            MOVE      ONE,DVA
            GOTO      PROC4000
          ENDIF
. 
          GOTO      PROC4000
.
PROC4000  COMPARE   ONE,PUBLIC
          IF        !@EQUAL
            COMPARE   ONE,DVA
            GOTO      PROC0500 IF NOT EQUAL
          ENDIF
.
          MATCH     "8",SPECIALT
          IF        @EQUAL
            COMPARE   "1",DVA
            IF        @EQUAL
              ADD       ONE,VPALOFFC
            ELSE
              ADD       ONE,XPALOFFC
            ENDIF
          ENDIF
          MATCH     "9",SPECIALT
          IF        @EQUAL
            COMPARE   "1",DVA
            IF        @EQUAL
              ADD       ONE,VPALOTHR
            ELSE
              ADD       ONE,XPALOTHR
            ENDIF
          ENDIF
          MATCH     "A",SPECIALT
          IF        @EQUAL
            COMPARE   "1",DVA
            IF        @EQUAL
              ADD       ONE,VSBREHSS
            ELSE
              ADD       ONE,XSBREHSS
            ENDIF
          ENDIF
          MATCH     "B",SPECIALT
          IF        @EQUAL
            COMPARE   "1",DVA
            IF        @EQUAL
              ADD       ONE,VSBREHNS
            ELSE
              ADD       ONE,XSBREHNS
            ENDIF
          ENDIF
          MATCH     "C",SPECIALT
          IF        @EQUAL
            COMPARE   "1",DVA
            IF        @EQUAL
              ADD       ONE,VHBREHSS
            ELSE
              ADD       ONE,XHBREHSS
            ENDIF
          ENDIF
          MATCH     "1",SPECIALT
          IF        @EQUAL
            COMPARE   "1",DVA
            IF        @EQUAL
              ADD       ONE,VCONTCLI
            ELSE
              ADD       ONE,XCONTCLI
            ENDIF
          ENDIF
          MATCH     "2",SPECIALT
          IF        @EQUAL
            COMPARE   "1",DVA
            IF        @EQUAL
              ADD       ONE,VCOGNDEM
            ELSE
              ADD       ONE,XCOGNDEM
            ENDIF
          ENDIF
          MATCH     "3",SPECIALT
          IF        @EQUAL
            COMPARE   "1",DVA
            IF        @EQUAL
              ADD       ONE,VFALLMOB
            ELSE
              ADD       ONE,XFALLMOB
            ENDIF
          ENDIF
          MATCH     "4",SPECIALT
          IF        @EQUAL
            COMPARE   "1",DVA
            IF        @EQUAL
              ADD       ONE,VPAINMAN
            ELSE
              ADD       ONE,XPAINMAN
            ENDIF
          ENDIF
          MATCH     "5",SPECIALT
          IF        @EQUAL
            COMPARE   "1",DVA
            IF        @EQUAL
              ADD       ONE,VWOUNMAN
            ELSE
              ADD       ONE,XWOUNMAN
            ENDIF
          ENDIF
          MATCH     "6",SPECIALT
          IF        @EQUAL
            COMPARE   "1",DVA
            IF        @EQUAL
              ADD       ONE,VMOVEDIS
            ELSE
              ADD       ONE,XMOVEDIS
            ENDIF
          ENDIF
          MATCH     "7",SPECIALT
          IF        @EQUAL
            COMPARE   "1",DVA
            IF        @EQUAL
              ADD       ONE,VYOUADIS
            ELSE
              ADD       ONE,XYOUADIS
            ENDIF
          ENDIF
          PACK      KEY10,SPECIALT,ALREURNO,PUBLIC,SP70
          CALL      RDTEMP1
          IF        OVRCD=1
            PACK      XXGROUP,SPECIALT,SP70
            PACK      XXURNO,ALREURNO,SP70
            PACK      XXCLAIM,PUBLIC,SP70
            CALL      WRTEMP1
          ENDIF
          GOTO      PROC0500
.
PROC9999  RETURN
+
.**************************************************************************
.*                               PRIN0000              Called by: ML0000  *
.*                             Print report                               *
.**************************************************************************
.
PRIN0000  DISPLAY   *P1:24,*EL,"Generating Report" 
          UNPACK    ENDDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      CMON,F2
          LOAD      MONTH,F2,MONTH1,MONTH2,MONTH3,MONTH4,MONTH5,MONTH6:
                             MONTH7,MONTH8,MONTH9,MONTH10,MONTH11,MONTH12
          PRINT     *F
          CALL      UND80
          PRINT     *1,"|",*4,"Palliative Community Care, Sub Acute ":
                    "Ambulatory Care and HARP ",*80,"|",*N:
                    *1,"|",*70,"S2 305",*80,"|",*N:
                    *1,"|",*4,"2006-2007",*80,"|",*N;
          CALL      UND80
          PRINT     *1,"|",*4,"Agency: ",CNAME,*80,"|",*N:
                    *1,"|",*4,"Output: ":
                    *35,"Period: ",MONTH,*67,"Year: ",CCENT,CYEAR,*80,"|",*N:
                    *1,"|",*80,"|",*N;
          CALL      UND80
.
          PRINT     *1,"|",*40,"|Client ",*49,"|Number of",*60,"|":
                    "Client ",*68,"|Number of",*80,"|",*N:
                    *1,"|",*40,"|Service",*49,"|Individual",*60,"|":
                    "Service ",*68,"|Individual",*80,"|",*N:
                    *1,"|",*40,"|Event",*49,"|",*60,"|":
                    "Event ",*68,"|",*80,"|",*N:
                    *1,"|",*40,"|Public",*49,"|Public",*60,"|":
                    "DVA ",*68,"|DVA",*80,"|",*N;
          CALL      UND80
.
          PRINT     *1,"|Palliative Care",*40,"|",*49,"|",*60,"|":
                    *68,"|",*80,"|",*N;
.
          MOVE      "8",SPECIALT
          CALL      CALIND00
.
          PRINT     *1,"|Off Campus",*40,"|",XPALOFFC,*49,"|",PUBIND,*60,"|":
                    VPALOFFC,*68,"|",DVAIND,*80,"|",*N;
.
          MOVE      "9",SPECIALT
          CALL      CALIND00
.
          PRINT     *1,"|Other",*40,"|",XPALOTHR,*49,"|",PUBIND,*60,"|":
                    VPALOTHR,*68,"|",DVAIND,*80,"|",*N;
          CALL      UND80
.
          PRINT     *1,"|Sub-acute ambulatory services and HARP data ":
                    "must be submitted by hospitals",*80,"|",*N:
                    "|/health services until services until approved to ":
                    "submit data via the ",*80,"|",*N:
                    "|Victorian Integrated Non-Admitted Health(VINAH) dataset.":
                    *80,"|",*N;
          CALL      UND80
.
          PRINT     *1,"|Sub-Acute Ambulatory Care",*40,"|",*49,"|",*60,"|":
                    *68,"|",*80,"|",*N:
                    *1,"|Centre-based Rehabilitation",*40,"|",*49,"|",*60,"|":
                    *68,"|",*80,"|",*N;
.
          MOVE      "A",SPECIALT
          CALL      CALIND00
.
          PRINT     *1,"|Sessional",*40,"|",XSBREHSS,*49,"|",PUBIND,*60,"|":
                    VSBREHSS,*68,"|",DVAIND,*80,"|",*N;
.
          MOVE      "B",SPECIALT
          CALL      CALIND00
.
          PRINT     *1,"|Number of Group Sessions",*40,"|",XSBREHNS:
                    *49,"|",PUBIND,*60,"|",VSBREHNS:
                    *68,"|",DVAIND,*80,"|",*N;
          CALL      UND80
.
          PRINT     *1,"|Home-based Rehabilitation",*40,"|",*49,"|",*60,"|":
                    *68,"|",*80,"|",*N;
.
          MOVE      "C",SPECIALT
          CALL      CALIND00
.
          PRINT     *1,"|Sessional",*40,"|",XHBREHSS,*49,"|",PUBIND,*60,"|":
                    VHBREHSS,*68,"|",DVAIND,*80,"|",*N:
                    *1,"|Specialist Assessment and",*40,"|",*49,"|",*60,"|":
                    *68,"|",*80,"|",*N:
                    *1,"|Investigation",*40,"|",*49,"|",*60,"|":
                    *68,"|",*80,"|",*N;
.
          MOVE      "1",SPECIALT
          CALL      CALIND00
.
          PRINT     *1,"|Continence Clinic",*40,"|",XCONTCLI,*49,"|",PUBIND:
                    *60,"|",VCONTCLI,*68,"|",DVAIND,*80,"|",*N;
.
          MOVE      "2",SPECIALT
          CALL      CALIND00
.
          PRINT     *1,"|Cognitive Dementia and Memory",*40,"|",XCOGNDEM:
                    *49,"|",PUBIND,*60,"|",VCOGNDEM,*68,"|",DVAIND,*80,"|",*N;
.
          MOVE      "3",SPECIALT
          CALL      CALIND00
.
          PRINT     *1,"|Falls and Mobility Clinic",*40,"|",XFALLMOB:
                    *49,"|",PUBIND,*60,"|",VFALLMOB,*68,"|",DVAIND,*80,"|",*N;
.
          MOVE      "4",SPECIALT
          CALL      CALIND00
.
          PRINT     *1,"|Pain Management Clinic",*40,"|",XPAINMAN:
                    *49,"|",PUBIND,*60,"|",VPAINMAN,*68,"|",DVAIND,*80,"|",*N;
.
          MOVE      "5",SPECIALT
          CALL      CALIND00
.
          PRINT     *1,"|Wound Management Clinic",*40,"|",XWOUNMAN:
                    *49,"|",PUBIND,*60,"|",VWOUNMAN,*68,"|",DVAIND,*80,"|",*N;
.
          MOVE      "6",SPECIALT
          CALL      CALIND00
.
          PRINT     *1,"|Movement Disorder Clinic",*40,"|",XMOVEDIS:
                    *49,"|",PUBIND,*60,"|",VMOVEDIS,*68,"|",DVAIND,*80,"|",*N;
.
          MOVE      "7",SPECIALT
          CALL      CALIND00
.
          PRINT     *1,"|Young Adult Disability",*40,"|",XYOUADIS:
                    *49,"|",PUBIND,*60,"|",VYOUADIS,*68,"|",DVAIND,*80,"|",*N;
          CALL      UND80
.
          PRINT     *1,"|HARP Chronic Disease Management",*40,"|New":
                    *49,"|Currently",*60,"|",*68,"|",*80,"|",*N:
                    *1,"|",*40,"|Registered":
                    *49,"|Active",*60,"|",*68,"|",*80,"|",*N:
                    *1,"|",*40,"|Clients":
                    *49,"|Clients",*60,"|",*68,"|",*80,"|",*N:
                    *1,"|Chronic Respiratory Disease",*40,"|":
                    *49,"|",*60,"|",*68,"|",*80,"|",*N:
                    *1,"|Chronic Heart Failure",*40,"|":
                    *49,"|",*60,"|",*68,"|",*80,"|",*N:
                    *1,"|Diabetes",*40,"|":
                    *49,"|",*60,"|",*68,"|",*80,"|",*N:
                    *1,"|People with Complex Needs",*40,"|":
                    *49,"|",*60,"|",*68,"|",*80,"|",*N:
                    *1,"|People with Complex Psychosocial Needs",*40,"|":
                    *49,"|",*60,"|",*68,"|",*80,"|",*N:
                    *1,"|Other",*40,"|":
                    *49,"|",*60,"|",*68,"|",*80,"|",*N;
          CALL      UND80
.
PRIN9999  RETURN
+
.**************************************************************************
.*                               CALIND00              Called by: ML0000  *
.*                   Calculate number of individuals                      *
.**************************************************************************
CALIND00  MOVE      ZERO,PUBIND
          MOVE      ZERO,DVAIND
.
          PACK      KEY10,SPECIALT,SP70
          CALL      RDSTEMP1
CALIND10  CALL      RDKTEMP1
          BRANCH    OVRCD,CALIND99
.
          MATCH     SPECIALT,XXGROUP
          GOTO      CALIND99 IF NOT EQUAL
.
          MATCH     "1",XXCLAIM
          IF        @EQUAL
            ADD       ONE,PUBIND
          ELSE
            ADD       ONE,DVAIND
          ENDIF
          GOTO      CALIND10
.
CALIND99  RETURN
+
.**************************************************************************
.*                               CLRVAR00              Called by: ML0000  *
.*                   Clear all calculated variables                       *
.**************************************************************************
CLRVAR00  MOVE      ZERO,XPALOFFC
          MOVE      ZERO,XPALOTHR
          MOVE      ZERO,XSBREHSS
          MOVE      ZERO,XSBREHNS
          MOVE      ZERO,XHBREHSS
          MOVE      ZERO,XCONTCLI
          MOVE      ZERO,XCOGNDEM
          MOVE      ZERO,XFALLMOB
          MOVE      ZERO,XPAINMAN
          MOVE      ZERO,XWOUNMAN
          MOVE      ZERO,XMOVEDIS
          MOVE      ZERO,XYOUADIS
.
          MOVE      ZERO,VPALOFFC
          MOVE      ZERO,VPALOTHR
          MOVE      ZERO,VSBREHSS
          MOVE      ZERO,VSBREHNS
          MOVE      ZERO,VHBREHSS
          MOVE      ZERO,VCONTCLI
          MOVE      ZERO,VCOGNDEM
          MOVE      ZERO,VFALLMOB
          MOVE      ZERO,VPAINMAN
          MOVE      ZERO,VWOUNMAN
          MOVE      ZERO,VMOVEDIS
          MOVE      ZERO,VYOUADIS
.
          RETURN
+
.**************************************************************************
.*                              CREA0000               Called by:         *
.*             create a new temporary file                                *
.**************************************************************************
.
CREA0000  CALL      KILL0000                     * remove existing file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,TEMPFILE,UKEY
          EXECUTE   CMDLINE,TASKID               * create temporary index file
.
          OPEN      TEMPFIL1,TEMPFILE            * open temp index file
.
CREA9999  RETURN
+
.****************************************************************************
.*                              KILL0000               Called by:           *
.*               close and erase the temporary file                         *
.****************************************************************************
.
KILL0000  CLOSE     TEMPFIL1                     * close file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
KILL9999 RETURN
+
RDSTEMP1  MOVE      ZERO,OVRCD
          RESET     KEY10
          READ      TEMPFIL1,KEY10;;
          GOTO      OVERCOND IF OVER
          RETURN
.
RDKTEMP1  MOVE      ZERO,OVRCD
          READKS    TEMPFIL1;XXGROUP,XXURNO,XXCLAIM
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMP1   RESET     KEY10
          WRITE     TEMPFIL1,KEY10;XXGROUP,XXURNO,XXCLAIM
          RETURN
.
RDTEMP1   RESET     KEY10
          MOVE      ZERO,OVRCD
          READ      TEMPFIL1,KEY10;XXGROUP,XXURNO,XXCLAIM
          GOTO      OVERCOND IF OVER
          RETURN
.
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
          INC       TFILENAM
          INC       PATCODIO/INC
          INC       ALLENCIO/INC
          INC       ALLREFIO/INC
          INC       IBASEQIO/INC
          INC       ALLSERIO/INC
          INC       WEBERRIO/INC
