.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.04.01  11.04.2005 Peter Vela CAR 59696
.           Changed commodity group from DIM 5 to DIM 6
. V9.03.01  10.09.2003 Steve Downing (VF.11.01 CAR 9375)
.           Recompiled for SINREBFD & SINREBIO
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B02 29.05.2001 Dave Matthews
.           Change to use FMS controlf and FMS batch file
.           directories stored in SIN controlf sector 107
.           as HFMSDRCT and HFMSBTCH
.           SRF - 10437
. VF.09.B01 27.11.2000 Charles Handaya
.           Modification of Warehouse Security
.           Changes for BAS Code
.-------------------------------------------------------
. VF.01.01  18.07.2000 Charles Handaya
.           Recompiled for SINIPSIO SINBPSIO change
.           Related to Quote 9817
.-------------------------------------------------------
. VF.00.02  29.12.1999 Charles Handaya
.           Recompiled for Fixing Audit Date (CCYYMMDD)
. VF.00.01  03.11.1999 Sandra Barcham
.           Change locked message to use X
.-------------------------------------------------------
IGNORDEL  FORM      1            * ignore deleted catalogs (1=yes)
MRKUPAMT  FORM      12.2         * Mark Up Issue Amount
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASUB27
.   Function      :   Transmit Ledger Data                    
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSBMFFD/INC
          INC       FMSAMAFD/INC
          INC       FMSBCFFD/INC
          INC       FMSCONFD/INC
          INC       FMSCSAFD/INC
          INC       FMSJPDFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCDF    
          INC       FMSLMCFD/INC
          INC       IBABATFD/INC
          INC       SINBPSFD/INC
          INC       SINCCAFD/INC
          INC       SINCIAFD/INC
          INC       SINCIEFD/INC
          INC       SINCONFD/INC
          INC       SINIPSFD/INC
          INC       SINLTTFD/INC
          INC       SINNATFD/INC
          INC       SINPERFD/INC
          INC       SINPRQFD/INC
          INC       SINREAFD/INC
          INC       SINREBFD/INC
          INC       SINSUAFD/INC
          INC       SINTRAFD/INC
          INC       SINTRBFD/INC
          INC       SINWARFD/INC
          INC       SINWSEFD/INC
          INC       SUB27DF     
.=========================
.Local Variable Definition
.-------------------------
BATDATE   DIM       8 * Scr 00 Fld     4
DATDESC   DIM      35 * Scr 00 Fld     5
FROMPERD  DIM       2 * Scr 00 Fld     7
FROMDATE  DIM       8 * Scr 00 Fld     8
TOPERD    DIM       2 * Scr 00 Fld     9
TODATE    DIM       8 * Scr 00 Fld    10
WAREHOUS  DIM       5 * Scr 00 Fld    12
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASUB27"
PRGNAM    INIT      "Transmit Ledger Data                    "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      OPEN0000
          CALL      SC00L000
          CALL      CLOS0000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA1,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA2,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA3,"apsbmfaf"
          DISPLAY   *P56:24,"Opening apsbmfaf";
          OPEN      APSBMFA4,"apsbmfaf"
          DISPLAY   *P56:24,"Opening sinbpsaf";
          OPEN      SINBPSA1,"sinbpsaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA1,"sinccaaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA2,"sinccaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA1,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA2,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA3,"sinciaaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA1,"sincieaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA2,"sincieaf"
          DISPLAY   *P56:24,"Opening  sinipsaf           ";
          OPEN      SINIPSA1,"sinipsaf"          
          DISPLAY   *P56:24,"Opening sinipsaf";
          OPEN      SINIPSA2,"sinipsaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA1,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA2,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA3,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA1,"sinperaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
          DISPLAY   *P56:24,"Opening sinprqaf";
          OPEN      SINPRQA1,"sinprqaf"
          DISPLAY   *P56:24,"Opening sinprqaf";
          OPEN      SINPRQA2,"sinprqaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA1,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA2,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA3,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA4,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA1,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA2,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA3,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA1,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA2,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA3,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sintraaf";
          OPEN      SINTRAA1,"sintraaf"
          DISPLAY   *P56:24,"Opening sintrbaf";
          OPEN      SINTRBA1,"sintrbaf"
          DISPLAY   *P56:24,"Opening sintrbaf";
          OPEN      SINTRBA2,"sintrbaf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA1,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA2,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA1,"sinwseaf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA2,"sinwseaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Screen                        
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Screen                        
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      SETSCR00
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Screen                        
.-------------------------------------------------------
CF00L000
          MOVE      SP70,BATDATE 
          MOVE      SP70,DATDESC 
          MOVE      SP70,SIPEYEAR
          MOVE      SP70,FROMPERD
          MOVE      SP70,FROMDATE
          MOVE      SP70,TOPERD  
          MOVE      SP70,TODATE  
          MOVE      SP70,WAREHOUS
          MOVE      SP70,SIWADES 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Screen                        
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Screen                        
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Screen                        
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Screen                        
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Screen                        
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L101:
                            PS00L102,PS00L103,PS00L104,PS00L105:
                            PS00L106,PS00L107,PS00L999,PS00L108:
                            PS00L109
          GOTO     PS00L999
.
PS00L101
          UNPACK    BATDATE,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      DATDESC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      SIPEYEAR,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      FROMPERD,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          UNPACK    FROMDATE,CCENT,CYEAR,CMON,CDAY          
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      TOPERD,VAR       
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          UNPACK    TODATE,CCENT,CYEAR,CMON,CDAY            
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          MOVE      WAREHOUS,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          MOVE      SIWADES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Screen                        
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L006,SF00L104,SF00L105,SF00L006:
                            SF00L106,SF00L006,SF00L107,SF00L108:
                            SF00L006
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L103:
                            SF00L020,SF00L104,SF00L105,SF00L020:
                            SF00L106,SF00L020,SF00L020,SF00L108:
                            SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      POST0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,DATDESC 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KDATE000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          UNPACK    BATDATE,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      DATDESC,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L104
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EYEAR000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SIPEYEAR,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L105
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,FROMDATE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCODF000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L105
            ENDIF
            BRANCH    EXIT,SF00L105,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      FROMPERD,VAR     
          CALL      DISPITEM
.
.
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            UNPACK    FROMDATE,CCENT,CYEAR,CMON,CDAY          
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L106
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TODATE  
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KCODT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L106
            ENDIF
            BRANCH    EXIT,SF00L106,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      TOPERD,VAR       
          CALL      DISPITEM
.
.
          MOVE      "   10",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            UNPACK    TODATE,CCENT,CYEAR,CMON,CDAY            
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L107
          CALL      RINPECON
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L108
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIWADES 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KSIWA000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L108
            ENDIF
            BRANCH    EXIT,SF00L108,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      WAREHOUS,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIWADES,VAR      
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------------------------------------
. Open Files
.----------------------------------------------------------------------
OPEN0000  READ      CONTROLF,TWENTY3;*95,HACCNT
          READ      CONTROLF,TWENTY4;*198,HACCCODE
          READ      CONTROLF,HUND07;*1,HFMSDRCT,*41,HFMSBTCH
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*134,INCOMUPC
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,INCOMUPC
            WRITAB    CONTROLF,SIXTY3;*134,INCOMUPC
          ENDIF
.
          IF        HACCNT<>1
            BEEP
            CLEAR     DISPMSG
            APPEND    "ERROR - GL Interface Not Active - ",DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
.
          CLOSE     CONTROLF
          PACK      TMPFILE,INVTM,ONE,PORT
          REP       " 0",TMPFILE
          PACK      MAKETMP,MAKE,TMPFILE,INDEX1
          PACK      KILLTMP,KILL,TMPFILE
          EXECUTE   KILLTMP,TASKID
          EXECUTE   MAKETMP,TASKID
          DISPLAY   *P30:24,"Opening ",TMPFILE
          OPEN      INVTMPA1,TMPFILE
.
          PACK      TMPFILE,INVTM,TWO,PORT
          REP       " 0",TMPFILE
          PACK      MAKETMP,MAKE,TMPFILE,INDEX2
          PACK      KILLTMP,KILL,TMPFILE
          EXECUTE   KILLTMP,TASKID
          EXECUTE   MAKETMP,TASKID
          DISPLAY   *P30:24,"Opening ",TMPFILE
          OPEN      INVTMPA2,TMPFILE
.
          PACK      TMPFILE,INVTM,THREE,PORT
          REP       " 0",TMPFILE
          PACK      MAKETMP,MAKE,TMPFILE,INDEX3
          PACK      KILLTMP,KILL,TMPFILE
          EXECUTE   KILLTMP,TASKID
          EXECUTE   MAKETMP,TASKID
          DISPLAY   *P30:24,"Opening ",TMPFILE
          OPEN      INVTMPA3,TMPFILE
.
          STRIP     HFMSDRCT
.
          CLOSE     CONTROLF       * get fms control file ****
          MOVE      "controlf.txt",KEY12
          PACK      KEY80,HFMSDRCT,KEY12
          SQUEEZE   KEY80
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      CONTROLF,KEY80
          TRAPCLR   IO
          IF        OVRCD=1
            OPEN      CONTROLF,"controlf"
          ENDIF
.
          CALL      RDFMCO50
          CALL      RDFMCO51
          CALL      RDFMCO52
.
          OPEN      CONTROLF,"controlf"
.
          CLEAR     FNAME
          APPEND    "fmslmaaf",FNAME
          RESET     FNAME
          DISPLAY   *P38:24,*EL,FNAME;
          OPEN      FMSLMAA1,FNAME
.
          CLEAR     FNAME
          APPEND    "fmslmcaf",FNAME
          RESET     FNAME
          DISPLAY   *P38:24,*EL,FNAME;
          OPEN      FMSLMCA1,FNAME
.
          CLEAR     FNAME
          APPEND    "fmsamaaf",FNAME
          RESET     FNAME
          DISPLAY   *P38:24,*EL,FNAME;
          OPEN      FMSAMAA1,FNAME
.
          CLEAR     FNAME
          APPEND    "fmsbcfaf",FNAME
          RESET     FNAME
          DISPLAY   *P38:24,*EL,FNAME;
          OPEN      FMSBCFA1,FNAME
.
          CLEAR     FNAME
          APPEND    "apsbmfaf",FNAME
          RESET     FNAME
          DISPLAY   *P38:24,*EL,FNAME;
          OPEN      APSBMFA1,FNAME
.
          CLEAR     FNAME
          APPEND    "fmsjpdaf",FNAME
          RESET     FNAME
          DISPLAY   *P38:24,*EL,FNAME;
          OPEN      FMSJPDA1,FNAME
.
          READ      CONTROLF,TWENTY4;*177,INCOCASH
.
OPEN9999  CALL      ONAT0000
          RETURN
.------------------------------------------------------------------------
. Open Nato X-Ref File if required
.------------------------------------------------------------------------
ONAT0000  OPEN      CONTROLF,"controlf"
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*141,INCNNATO
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,INCNNATO
            WRITAB    CONTROLF,SIXTY3;*141,INCNNATO
          ENDIF
.
          IF        INCNNATO=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      SINNATA1,"sinnataf"
            TRAPCLR   IO
            IF        OVRCD=1
              DISPLAY   *P1:24,*EL,*B,"Nato file does not exist. Run fixit.  ";
              CALL      HITENTER
              CHAIN     PGM
            ENDIF
.
            OPEN      SINNATA2,"sinnataf"
          ENDIF
.
ONAT9999  RETURN
.----------------------------------------------------------------------
. Close Files
.----------------------------------------------------------------------
CLOS0000  CLOSE     INVTMPA1
          CLOSE     INVTMPA2
          CLOSE     INVTMPA3
          PACK      TMPFILE,INVTM,ONE,PORT
          REP       " 0",TMPFILE
          PACK      KILLTMP,KILL,TMPFILE
          EXECUTE   KILLTMP,TASKID
.
          PACK      TMPFILE,INVTM,TWO,PORT
          REP       " 0",TMPFILE
          PACK      KILLTMP,KILL,TMPFILE
          EXECUTE   KILLTMP,TASKID
.
          PACK      TMPFILE,INVTM,THREE,PORT
          REP       " 0",TMPFILE
          PACK      KILLTMP,KILL,TMPFILE
          EXECUTE   KILLTMP,TASKID
.
CLOS9999  RETURN
.----------------------------------------------------------------------
. Set up for screen 00
.----------------------------------------------------------------------
SETSCR00  MOVE      "1",ACCEPT
          PACK      BATDATE,CCC,CYY,CMM,CDD,SP70
          REP       " 0",BATDATE
          UNPACK    BATDATE,CCENT,CYEAR,CMON,CDAY
          RETURN
.----------------------------------------------------------------------
. Transfer Data
.----------------------------------------------------------------------
POST0000
          DISPLAY   *P1:24,*EL
          MATCH     FROMDATE,TODATE
          IF        @LESS
            CLEAR     DISPMSG
            APPEND    "Illegal Period Range - ",DISPMSG
            CALL      MESSAGE1
            GOTO      POST9950
          ENDIF
.
          CALL      CBAT0000        * check if transfer may be  in progress
          BRANCH    EXIT,POST9900
.
          CALL      EXTR0000        * Extract Data
          CALL      EXTB0000
          BRANCH    ERRORFLG,POST8000
          BRANCH    FOUNDFLG,POST9000
.
          MOVE      "No Journal Entries Found - No Batch Created - ",DISPMSG
          CALL      MESSAGE1
          GOTO      POST9950
.
POST8000  MOVE      "Errors Found - Report Has Been Created - ",DISPMSG
          CALL      MESSAGE1
          CALL      RDAT0000           * clear marked data
          GOTO      POST9900
.
POST9000  CALL      MBAT0000           * make batch
          CALL      WRBT0000           * add data to batch
          CALL      SBAT0000           * save batch number to SINREBAF
          CALL      PBAT0000           * print audit listing
.
          CLEAR     DISPMSG
          APPEND    "General Ledger Batch ",DISPMSG
          APPEND    FMBCBAT,DISPMSG
          APPEND    " Created - ",DISPMSG
          CALL      MESSAGE1
          GOTO      POST9900
.
POST9900  MOVE      ZERO,EXIT
          GOTO      POST9999
.
POST9950  MOVE      FOUR,EXIT
.
POST9999  RETURN
.--------------------------------------------------
. Write Batch Details
.--------------------------------------------------
WRBT0000  MOVE      SP70,KEY30
          CALL      RSINTM1
.
WRBT1000  CALL      RKINTM1
          BRANCH    OVRCD,WRBT3000
          DISPLAY   *P55:24,*EL,*V2LON,INT1ACC," ",INT1AMT
          COMPARE   ZERO,INT1AMT
          GOTO      WRBT1000 IF EQUAL
.
          MOVE      "JA",BCTRAN
          COMPARE   ZERO,INT1AMT       * negative amount ?
          GOTO      WRBT1500 IF NOT LESS
.
          MOVE      "JC",BCTRAN        * if so - make it a debit
          MULT      SEQ,INT1AMT
          GOTO      WRBT2000
.
WRBT1500  ADD       INT1AMT,BC1KEYT
          ADD       INT1AMT,BC1ACCT
          ADD       INT1AMT,BC2ACCT
.
.
WRBT2000  MOVE      INT1LED,BCLEDG
          MOVE      INT1ACC,BCACCT
          MOVE      INT1AMT,BCAMT
          MOVE      "Stock Usage",BCREFER
          MOVE      INT1CAT,KEY7
          CALL      RDSIIA1
          MOVE      SIIADES,DIM15
          MOVE      INT1QTY,F6
          CLEAR     BCTRAND
          APPEND    KEY7,BCTRAND
          APPEND    SP1,BCTRAND
          APPEND    DIM15,BCTRAND
          APPEND    ":",BCTRAND
          APPEND    F6,BCTRAND
          APPEND    SP70,BCTRAND
          RESET     BCTRAND
.
          MOVE      INT1RES,BCRESP
          MOVE      INT1DIS,BCDISS
.
          CALL      RDBATS0
          ADD       ONE,BC0NXTSC
          CALL      WRBATS0
          SUB       ONE FROM BC0NXTSC
.
          MOVE      ZERO,BCSTAT
          MOVE      SP2,BCPAYT
          MOVE      "00000",BCRED
          MOVE      SP8,BCORD
          PACK      BCDATEE,CDD,CMM,CCC,CYY
          REP       " 0",BCDATEE
          UNPACK    BATDATE,CCENT,CYEAR,CMON,CDAY
          PACK      BCDATED,CDAY,CMON,CCENT,CYEAR
          REP       " 0",BCDATED
          MOVE      "00000000",BCDATCX
          MOVE      BCACCT,BCACCTP
          MOVE      SP10,BCCHEQ
          MOVE      ZERO,BCINVT
          MOVE      ZERO,BCDISC
          MOVE      "0",BCCOMX
          MOVE      ZERO,BCCOMXA
          MOVE      SP70,BCCONT
          MOVE      SP70,BCDISCC
          MOVE      SP70,BCBASC
.
          CALL      WRBATC
.
          ADD       ONE,BC0NXTSC
          ADD       ONE,BC1NOTR
          WEOF      BATFILE,BC0NXTSC
          GOTO      WRBT1000
.
WRBT3000  MOVE      SP70,KEY23
          CALL      RSINTM2
.
WRBT4000  CALL      RKINTM2
          BRANCH    OVRCD OF WRBT5000
.
          COMPARE   ZERO,INT2AMT
          GOTO      WRBT4000 IF EQUAL
.
          MOVE      "JC",BCTRAN
          COMPARE   ZERO,INT2AMT       * negative amount ?
          GOTO      WRBT4500 IF NOT LESS
.
          MOVE      "JA",BCTRAN        * if so - make it a debit
          MULT      SEQ,INT2AMT
          ADD       INT2AMT,BC1KEYT
          ADD       INT2AMT,BC1ACCT
          ADD       INT2AMT,BC2ACCT
.
WRBT4500
          MOVE      INT2AMT,BC1KEYT
.
          CALL      RDBATS0
          ADD       ONE,BC0NXTSC
          CALL      WRBATS0
          SUB       ONE FROM BC0NXTSC
.
          MOVE      INT2LED,BCLEDG
          MOVE      INT2ACC,BCACCT
          MOVE      BCLEDG,KEY2
          CALL      RDFMLA1
.
          MOVE      INT2RES,BCRESP
          MOVE      INT2DIS,BCDISS
.
          MOVE      ZERO,BCSTAT
          MOVE      SP2,BCPAYT
          MOVE      "00000",BCRED
          MOVE      "Stock Usage    ",BCREFER
          MOVE      BC1KEYT,BCAMT
          MOVE      SP8,BCORD
.
          PACK      BCDATEE,CDD,CMM,CCC,CYY
          REP       " 0",BCDATEE
          UNPACK    BATDATE,CCENT,CYEAR,CMON,CDAY
          PACK      BCDATED,CDAY,CMON,CCENT,CYEAR
          REP       " 0",BCDATED
          MOVE      "00000000",BCDATCX
          MOVE      BCACCT,BCACCTP
          MOVE      SP10,BCCHEQ
          MOVE      BC1BATCH,BCBATCH
          MOVE      ZERO,BCINVT
          MOVE      ZERO,BCDISC
          MOVE      "0",BCCOMX
          MOVE      ZERO,BCCOMXA
          MOVE      SP70,BCCONT
          MOVE      SP70,BCDISCC
          MOVE      SP70,BCBASC
.
          PACK      KEY14,BCLEDG,BCACCT,SP70
          MOVE      SP70,FMAMDESC
          CALL      RDFMAM1
          MOVE      FMAMDESC,BCTRAND
.
          CALL      WRBATC
          ADD       ONE,BC1NOTR
          GOTO      WRBT4000
.
WRBT5000  ADD       ONE,BC0NXTSC
          WEOF      BATFILE,BC0NXTSC
          MOVE      BC2ACCT,BC1ACCT
          MOVE      BC2ACCT,BC1KEYT
          CALL      WRBAT1
.
          PACK      KEY5,BC1BATCH,SP70      * write batch control file record
          UNPACK    KEY5,FMBCBAT
          MOVE      "2",FMBCSTA
          MOVE      BC0NXTSC,FMBCSEC
          MOVE      BC2ACCT,FMBCTOT
          MOVE      ZERO,FMBCDIS
          MOVE      PASSCODE,FMBCUID
          PACK      FMBCDAT,CCC,CYY,CMM,CDD,SP70
          REP       " 0",FMBCDAT
          PACK      FMBCPDAT,BATDATE,SP70
          REP       " 0",FMBCPDAT
          MOVE      FMBCPDAT,FMBCCDAT
          MOVE      BC1LEDG,FMBCLED
          MOVE      "JA",FMBCTRT
          COMPARE   ONE,INCOCASH
          GOTO      WRBT5300 IF EQUAL
          MOVE      "CJ",FMBCTRT
.
WRBT5300  MOVE      ONE,FMBCINV
          CALL      DEFMBC1
          CALL      WRFMBC1
.
WRBT9999  RETURN
.------------------------------------------------------------------------------
. Check if a transfer may be in progress
. Returns : EXIT=1 if quit
.------------------------------------------------------------------------------
CBAT0000
          MOVE      ZERO,EXIT
          PACK      KEY39,SP70
          CALL      RSSIRB3
.
CBAT1000  CALL      RKSIRB3
          BRANCH    OVRCD,CBAT5000
.
          MATCH     SP70,SIRBBCH       * Ignore Data Already Transferred
          GOTO      CBAT5000 IF NOT EQUAL
.
          MATCH     "T",SIRBTYP        * ignore stock trans (done in CBAT5000)
          GOTO      CBAT1000 IF EQUAL
.
          MATCH     SP70,SIRBLED       * Check if transferred to current batch
          GOTO      CBAT1000 IF EQUAL
.
          IF        EXIT=0
            KEYIN     *P1:24,"Is someone else is running this program ? ":
                      *V2LON,ANS,*EL;
            PACK      ANS,ANS,SP70
            REP       UPPLOW,ANS
            MATCH     "N",ANS
            GOTO      CBAT9500 IF NOT EQUAL
          ENDIF
          MOVE      ONE,EXIT
.
          PACK      KEY39,SIRBBCH,SIRBLED,SIRBACC,SIRBTYP,SIRBREQ:
                          SIRBWAR,SIRBCAT,SP70
          DISPLAY   *P1:24,"Processing : ",*V2LON,KEY39,*EL;
          UNPACK    SP70,SIRBBCH,SIRBLED,SIRBACC
          CALL      UPSIRB3                      * update and
          CALL      RSSIRB3                      * reposition on original key
.
          GOTO      CBAT1000
.
.---- stock transfer ----
.
CBAT5000
          PACK      KEY30,SP70
          CALL      RSSITB2
.
CBAT6000  CALL      RKSITB2
          BRANCH    OVRCD,CBAT9000
.
          MATCH     SP70,SITBLED       * Ignore Data Already Transferred
          GOTO      CBAT9000 IF NOT EQUAL
.
          MATCH     SP70,SITBBCH       * Check if transferred to current batch
          GOTO      CBAT6000 IF EQUAL
.
          IF        EXIT=0
            KEYIN     *P1:24,"Is someone else is running this program ? ":
                      *V2LON,ANS,*EL;
            PACK      ANS,ANS,SP70
            REP       UPPLOW,ANS
            MATCH     "N",ANS
            GOTO      CBAT9500 IF NOT EQUAL
          ENDIF
          MOVE      ONE,EXIT
.
          PACK      KEY30,SITBLED,SITBACC,SITBBCH,SITBNUM,SITBUNI,SP70
          DISPLAY   *P1:24,"Processing : ",*V2LON,KEY30,*EL;
          UNPACK    SP70,SITBBCH,SITBLED,SITBACC
          CALL      UPSITB2            * update and
          CALL      RSSITB2            * reposition on original key
.
          MOVE      "T",SIRBTYP        * check if on requisitions file
          MOVE      SITANUM,F8
          MOVE      F8,F7
          MOVE      F7,SIRBREQ
          PACK      KEY20,SIRBTYP,SIRBREQ,SITBWAR,SITBCAT,SP70
          CALL      RDSIRB1
          IF        OVRCD=0
            UNPACK    SP70,SIRBBCH,SIRBLED,SIRBACC
            CALL      UPSIRB1
          ENDIF
.
          GOTO      CBAT6000
.
CBAT9000  MOVE      ZERO,EXIT
          GOTO      CBAT9999
.
CBAT9500  MOVE      ONE,EXIT
.
CBAT9999  RETURN
.------------------------------------------------------------------------------
. Save batch number
.------------------------------------------------------------------------------
SBAT0000
          PACK      KEY39,SP70
          CALL      RSSIRB3
.
SBAT1000  CALL      RKSIRB3
          BRANCH    OVRCD,SBAT5000
.
          MATCH     SP70,SIRBBCH       * Ignore Data Already Transferred
          GOTO      SBAT5000 IF NOT EQUAL
.
          MATCH     "T",SIRBTYP        * ignore stock trans (done in SBAT5000)
          GOTO      SBAT1000 IF EQUAL
.
          MATCH     SP70,SIRBLED       * Check if transferred to current batch
          GOTO      SBAT1000 IF EQUAL
.
          PACK      KEY39,SIRBBCH,SIRBLED,SIRBACC,SIRBTYP,SIRBREQ:
                          SIRBWAR,SIRBCAT,SP70
          PACK      SIRBBCH,FMBCBAT,SP70
          CALL      UPSIRB3                      * update and
          CALL      RSSIRB3                      * reposition on original key
.
          MOVE      ZERO,MRKUPAMT
          IF        !(INCOMUPC=0)
            ASSIGN    (SIRBAMT*INCOMUPC)/100.0,MRKUPAMT
          ENDIF
.
          PACK      KEY42,SIRBLED,SIRBACC,SIRBTYP,SIRBREQ,SIRBWAR:
                          SIRBCAT,SIRBDAT,SP70
          UNPACK    KEY42,INT3LED,INT3ACC,INT3REQ,INT3WAR,INT3CAT,INT3DAT
          CALL      RDINTM3
          IF        OVRCD=1
            MOVE      SIRBAMT,INT3AMT
            ADD       MRKUPAMT,INT3AMT
            CALL      WRINTM3
          ELSE
            ADD       SIRBAMT,INT3AMT
            ADD       MRKUPAMT,INT3AMT
            CALL      UPINTM3
          ENDIF
          GOTO      SBAT1000
.
.---- stock transfer ----
.
SBAT5000
          PACK      KEY30,SP70
          CALL      RSSITB2
.
SBAT6000  CALL      RKSITB2
          BRANCH    OVRCD,SBAT9000
.
          MATCH     SP70,SITBLED       * Ignore Data Already Transferred
          GOTO      SBAT9000 IF NOT EQUAL
.
          MATCH     SP70,SITBBCH       * Check if transferred to current batch
          GOTO      SBAT6000 IF EQUAL
.
          PACK      KEY30,SITBLED,SITBACC,SITBBCH,SITBNUM,SITBUNI,SP70
          UNPACK    SITBBCH,LEDGER
          PACK      SITBLED,LEDGER,SP70
          PACK      SITBBCH,FMBCBAT,SP70
          CALL      UPSITB2            * update and
          CALL      RSSITB2            * reposition on original key
.
          MOVE      "T",SIRBTYP        * check if on requisitions file
          MOVE      SITANUM,F8
          MOVE      F8,F7
          MOVE      F7,SIRBREQ
          PACK      KEY20,SIRBTYP,SIRBREQ,SITBWAR,SITBCAT,SP70
          CALL      RDSIRB1
          IF        OVRCD=0
            MOVE      SITBLED,SIRBLED  * update data if on requisition file
            MOVE      SITBACC,SIRBACC
            MOVE      SITBBCH,SIRBBCH
            CALL      UPSIRB1
          ENDIF
.
          MATCH     "0",SITBTYP        * from or to type ?
          IF        @EQUAL
            ASSIGN    SITBCST*SEQ,SITBCST
          ENDIF
.
          PACK      KEY8,SITBNUM,SP70
          CALL      RDSITA1          * read header record
.
          PACK      KEY42,SITBLED,SITBACC,SITBNUM,SITBWAR:
                          SITBCAT,SITADAT,SP70
          UNPACK    KEY42,INT3LED,INT3ACC,INT3REQ,INT3WAR,INT3CAT,INT3DAT
          CALL      RDINTM3
          IF        OVRCD=1
            MOVE      SITBCST,INT3AMT
            CALL      WRINTM3
          ELSE
            ADD       SITBCST,INT3AMT
            CALL      UPINTM3
          ENDIF
          GOTO      SBAT6000
.
SBAT9000
.
SBAT9999  RETURN
.------------------------------------------------------------------------------
. Print audit report
.------------------------------------------------------------------------------
PBAT0000
          MOVE      ZERO,CPAGENO                 * reset page no.
          CLOCK     TIME,CTIMEIS                 * get current time
          MOVE      "999",CLNO                   * init last line number
          MOVE      SP70,FMLALEDG
          MOVE      SP70,SKEY14
          MOVE      ZERO,ATOTAL00
          MOVE      ZERO,ATOTAL01
          MOVE      ZERO,ATOTAL02
          PACK      KEY42,SP70
          CALL      RSINTM3
.
PBAT1000  CALL      RKINTM3
          BRANCH    OVRCD,PBAT5000
.
          PACK      KEY14,INT3LED,INT3ACC,SP70
          MATCH     KEY14,SKEY14
          IF        !@EQUAL
            MATCH     SP70,SKEY14
            IF        !@EQUAL
              MOVE      SP70,FMAMDESC
              PACK      KEY14,SKEY14
              UNPACK    KEY14,FMAMLEDG,FMAMACCT
              CALL      RDFMAM1
              ADD       TWO,CLNO
              MOVE      ATOTAL00,F12P2
              CALL      FEDT0000
              PRINT     *48,"------------------",*N:
                        FMAMLEDG,SLASH,FMAMACCT,SP2,FMAMDESC:
                        *48,KEY18,*N
              MATCH     INT3LED,FMLALEDG
              IF        !@EQUAL
                MOVE      SP70,FMLADESC
                MOVE      FMLALEDG,KEY2
                CALL      RDFMLA1
                MOVE      ATOTAL01,F12P2
                CALL      FEDT0000
                PRINT     *48,"------------------",*N:
                          FMLALEDG,SP2,FMLADESC:
                          *48,KEY18,*N
                CALL      HEAA0000
                MOVE      ZERO,ATOTAL01
              ENDIF
            ENDIF
            PACK      FMLALEDG,INT3LED
            PACK      SKEY14,INT3LED,INT3ACC,SP70
            MOVE      ZERO,ATOTAL00
          ENDIF
.
          ADD       INT3AMT,ATOTAL00
          ADD       INT3AMT,ATOTAL01
          ADD       INT3AMT,ATOTAL02
          COMPARE   "55",CLNO
          CALL      HEAA0000 IF NOT LESS
          ADD       ONE,CLNO
          UNPACK    INT3DAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      INT3AMT,F12P2
          CALL      FEDT0000
          PRINT     *18,INT3REQ:
                    *32,INT3WAR,*40,INT3CAT,*48,KEY18,*70,CPCDATE
          GOTO      PBAT1000
.
.
.---- finish report ----
.
PBAT5000
          COMPARE   ZERO,CPAGENO
          CALL      HEAA0000 IF EQUAL
.
          MATCH     SP70,SKEY14
          IF        !@EQUAL
            MOVE      SP70,FMAMDESC
            PACK      KEY14,SKEY14
            UNPACK    KEY14,FMAMLEDG,FMAMACCT
            CALL      RDFMAM1
            ADD       THREE,CLNO
            MOVE      ATOTAL00,F12P2
            CALL      FEDT0000
            PRINT     *48,"------------------",*N:
                      FMAMLEDG,SLASH,FMAMACCT,SP2,FMAMDESC:
                      *48,KEY18,*N
            MOVE      SP70,FMLADESC
            MOVE      FMLALEDG,KEY2
            CALL      RDFMLA1
            MOVE      ATOTAL01,F12P2
            CALL      FEDT0000
            PRINT     *48,"------------------",*N:
                      FMLALEDG,SP2,FMLADESC:
                      *48,KEY18,*N
          ENDIF
.
          CALL      LINA0000
          MOVE      ATOTAL02,F12P2
          CALL      FEDT0000
          PRINT     "Grand Total : ",*48,KEY18
          CALL      LINA0000
.
PBAT9999  RETURN
.------------------------------------------------------------------------------
. FEDT - FEDIT number
.------------------------------------------------------------------------------
FEDT0000
          MOVE      "999,999,999,999.99",KEY18
          FEDIT     F12P2,KEY18
.
FEDT9999  RETURN
.------------------------------------------------------------------------------
. Extract Data from Supplied Stock File
.
. If HACCCODE = 1  then the option is Modbury's where the cost centre
.                  is 4 characters and subjective is 5.
.
.             = 2  then we are using the warehouse issue option and number of
.                  characters for subjective and cost centre are unknown.
.------------------------------------------------------------------------------
EXTR0000  PACK      KEY39,SP70
          MOVE      ZERO,IGNORDEL
          MOVE      ZERO,FOUNDFLG
          MOVE      ZERO,CPAGENO                 * reset page no.
          CLOCK     TIME,CTIMEIS                 * get current time
          MOVE      "999",CLNO                   * init last line number
          CALL      RSSIRB3
.
EXTR1000  CALL      RKSIRB3
          BRANCH    OVRCD,EXTR9000
.
          MATCH     SP70,SIRBBCH       * ignore data already transferred
          GOTO      EXTR9000 IF NOT EQUAL
.
          MATCH     SP70,SIRBLED       * ignore current batch data
          GOTO      EXTR9000 IF NOT EQUAL
.
          MATCH     "T",SIRBTYP        * ignore stock transfers (done in EXTB)
          GOTO      EXTR1000 IF EQUAL
.
          COMPARE   ZERO,SIRBAMT       * ignore zero values
          GOTO      EXTR1000 IF EQUAL
.
          CALL      PICK0000           * Check for Picking Sheet
          BRANCH    EXIT,EXTR1000
.
          MATCH     WAREHOUS,SP70
          IF        !@EQUAL
            MATCH     SIRBWAR,WAREHOUS
            GOTO      EXTR1000 IF NOT EQUAL
          ELSE
            MATCH     SP70,SIRBWAR            * check warehouse security
            IF        !@EQUAL
              PACK      KEY9,PASSCODE,SIRBWAR,SP70
              CALL      RDSIWS1
              BRANCH    OVRCD,EXTR1000
            ENDIF
          ENDIF
.
          PACK      KEY8,SIRBTYP,SIRBREQ
          CALL      RDSIRA1
          BRANCH    OVRCD,EXTR1000
.
          MATCH     FROMDATE,SIRADAT   * check if in date range
          GOTO      EXTR1000 IF LESS
          MATCH     SIRADAT,TODATE
          GOTO      EXTR1000 IF LESS
.
          MATCH     SP70,SIRACST       * ignore blank cost centres
          GOTO      EXTR1000 IF EQUAL
.
          MOVE      SP70,SIIASUB
          MOVE      SIRBCAT,KEY7
          CALL      RDSIIA1
          IF        OVRCD=1
            IF        IGNORDEL=0
              BEEP
              PACK      DISPMSG,SP70,SP70
              CALL      MESSAGE2
              KEYIN     *P1:24,*EL,*B,"Invalid Catalog Found - Ignore (",*V2LON:
                        "Y",*HOFF,"/",*V2LON:
                        "N",*HOFF,") ?";
              MOVE      "24",CVERT
              MOVE      "39",CCOL
              CALL      YORN0000
              CALL      MESSAGE3
              IF        FYESNO=1
                MOVE      ONE,IGNORDEL
              ELSE
                MOVE      TWO,IGNORDEL
              ENDIF
            ENDIF
            IF        IGNORDEL=1
              PACK      KEY39,SIRBBCH,SIRBLED,SIRBACC,SIRBTYP,SIRBREQ:
                              SIRBWAR,SIRBCAT,SP70
              MOVE      "DELET",SIRBBCH
              CALL      UPSIRB3
              CALL      RSSIRB3
              GOTO      EXTR1000
            ENDIF
            IF        IGNORDEL=2
              GOTO      EXTR8500
            ENDIF
          ENDIF
.
          BRANCH    SIIANON,EXTR1000   * ignore non-stock
.
          DISPLAY   *P55:24,*EL,*V2LON,SIRACST,*HOFF,"/",*V2LON,SIRBCAT
.
XXXXXXXX  MOVE      SIRACST,KEY5
          CALL      RDSICA1
          BRANCH    OVRCD,EXTR8300
.
          UNPACK    SICAGL,LEDGER,ACCOUNT
.
          PACK      KEY5,SIRBWAR,SP70
          CALL      RDSIWA1
          BRANCH    OVRCD,EXTR8200
          PACK      LEDGER2,SIWALED,SP70
.
          MATCH     SP70,SIWAIACC
          GOTO      EXTR1050 IF NOT EQUAL
.
          MOVE      SIWAPACC,SIWAIACC
.
EXTR1050  MOVE      SIIASUB,KEY5
          CALL      RDSISA1
          BRANCH    OVRCD OF EXTR8600
.
          MATCH     SP70,ACCOUNT       * use posting acc if no CC
          GOTO      EXTR2250 IF EQUAL
          BRANCH    HACCCODE OF EXTR2100,EXTR2200
.
EXTR2100  MOVE      ACCOUNT,DIMX4
          MATCH     SP4,DIMX4
          GOTO      EXTR2110 IF EQUAL
.
          PACK      BCACCT,DIMX4,SIIASUB,SP3
          GOTO      EXTR3000
.
EXTR2110  PACK      BCACCT,SIIASUB,SP7
          GOTO      EXTR3000
.
EXTR2200  MOVE      ACCOUNT,COSTCODE
          BRANCH    SIWATYP,EXTR2300,EXTR2250
          MOVE      SIIASUB,SUBJCODE
          GOTO      EXTR2400
.
EXTR2250  MOVE      SICAPACC,BCACCT
          GOTO      EXTR3000
.
EXTR2300  MOVE      SISACOMM,SUBJCODE
.
EXTR2400  PACK      SILTSUB,SUBJCODE,SP70
          PACK      KEY8,LEDGER,SUBJCODE,SP70                          *C-59696
          CALL      RDSILT1
          MOVE      SILTSUB,SUBJCODE
          CALL      BCOD0000
.
EXTR3000  PACK      KEY14,LEDGER,BCACCT,SP70
          CALL      RDFMAM1
          COMPARE   ZERO,OVRCD
          GOTO      EXTR3010 IF EQUAL
          CALL      SQUEZ000
          BRANCH    OVRCD,EXTR8700
.
EXTR3010  MATCH     "6",FMAMTYPE
          GOTO      EXTR8700 IF NOT LESS
.
          COMPARE   TWO,FMAMSTAT
          GOTO      EXTR8750 IF EQUAL
.
          PACK      KEY20,SIRBTYP,SIRBREQ,SIRBWAR,SIRBCAT,SP70
          CALL      RDSIRB1                      * update and
          BRANCH    OVRCD,EXTR1000
          PACK      SIRBLED,LEDGER,SP70          * save ledger/account
          PACK      SIRBACC,BCACCT,SP70
          CALL      UPSIRB1                      * update and
.
          MOVE      ZERO,MRKUPAMT
          IF        !(INCOMUPC=0)
            ASSIGN    (SIRBAMT*INCOMUPC)/100.0,MRKUPAMT
          ENDIF
.
          PACK      KEY30,LEDGER,BCACCT,SIRBCAT,SIWADISS,SIWARESP
          CALL      RDINTM1
          IF        OVRCD=0
            ADD       SIRBIQT,INT1QTY
            ADD       SIRBAMT,INT1AMT
            ADD       MRKUPAMT,INT1AMT
            CALL      UPINTM1
          ELSE
            UNPACK    KEY30,INT1LED,INT1ACC,INT1CAT,INT1DIS,INT1RES
            MOVE      SIRBIQT,INT1QTY
            MOVE      SIRBAMT,INT1AMT
            ADD       MRKUPAMT,INT1AMT
            CALL      WRINTM1
          ENDIF
.
          IF        !(MRKUPAMT=0)
            PACK      KEY14,LEDGER2,SIWAMUAC
            CALL      RDFMAM1
            BRANCH    OVRCD,EXTR8900
            PACK      KEY23,LEDGER2,SIWAMUAC,SIWADISS,SIWARESP
            CALL      RDINTM2
            IF        OVRCD=0
              ADD       MRKUPAMT,INT2AMT
              CALL      UPINTM2
            ELSE
              UNPACK    KEY23,INT2LED,INT2ACC,INT2DIS,INT2RES
              MOVE      MRKUPAMT,INT2AMT
              CALL      WRINTM2
            ENDIF
          ENDIF
.
EXTR4000  BRANCH    SIWACTY,EXTR4100,EXTR4200
          PACK      KEY14,LEDGER2,SIWAIACC
          GOTO      EXTR4500
.
EXTR4100  MOVE      SIIASUB,SISACOMM
.
EXTR4200  MOVE      SISACOMM,SUBJCODE
          MOVE      SIWAIACC,COSTCODE
.
          PACK      SILTSUB,SUBJCODE,SP70
          PACK      KEY8,LEDGER2,SUBJCODE,SP70                         *C-59696
          CALL      RDSILT1
          MOVE      SILTSUB,SUBJCODE
          CALL      BCOD0000
          PACK      KEY14,LEDGER2,BCACCT
.
EXTR4500  CALL      RDFMAM1
          COMPARE   ZERO,OVRCD
          GOTO      EXTR4510 IF EQUAL
          CALL      SQUEZ000
          BRANCH    OVRCD,EXTR8800
.
EXTR4510  MATCH     "6",FMAMTYPE
          GOTO      EXTR8700 IF NOT LESS
.
          COMPARE   TWO,FMAMSTAT
          GOTO      EXTR8750 IF EQUAL
.
          PACK      KEY23,KEY14,SIWADISS,SIWARESP
          CALL      RDINTM2
          IF        OVRCD=0
            ADD       SIRBAMT,INT2AMT
            CALL      UPINTM2
          ELSE
            UNPACK    KEY23,INT2LED,INT2ACC,INT2DIS,INT2RES
            MOVE      SIRBAMT,INT2AMT
            CALL      WRINTM2
          ENDIF
.
EXTR4700  MATCH     LEDGER,LEDGER2
          CALL      INTER000 IF NOT EQUAL
          MOVE      ONE,FOUNDFLG
          GOTO      EXTR1000
.
EXTR8100
          COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     "No Warehouses for Catalog ",SIRBCAT:
                    *55,SIRBCAT,*70,SIRACST,*85,SIIASUB,*100,SIRBWAR
          MOVE      ONE,ERRORFLG
          GOTO      EXTR1000
.
EXTR8200
          COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     "Invalid Warehouse ",KEY2:
                    *55,SIRBCAT,*70,SIRACST,*85,SIIASUB,*100,SIRBWAR
          MOVE      ONE,ERRORFLG
          GOTO      EXTR1000
.
EXTR8300
          COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     "Invalid Cost Centre ",SIRACST:
                    *55,SIRBCAT,*70,SIRACST,*85,SIIASUB,*100,SIRBWAR
          MOVE      ONE,ERRORFLG
          GOTO      EXTR1000
.
EXTR8500
          COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     "Invalid Catalog Code ",SIRBCAT:
                    *55,SIRBCAT,*70,SIRACST,SIRBWAR,SP1,SIRATYP,SIRAREQ
          MOVE      ONE,ERRORFLG
          GOTO      EXTR1000
.
EXTR8600
          COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     "Invalid Product Group Code ",SIIASUB:
                    *55,SIRBCAT,*70,SIRACST,*85,SIIASUB,*100,SIRBWAR
          MOVE      ONE,ERRORFLG
          GOTO      EXTR1000
.
EXTR8700  COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          UNPACK    KEY14,KEY2,KEY12
          PRINT     "Invalid Ledger/Account ",KEY2,"/",KEY12:
                    *55,SIRBCAT,*70,SIRACST,*85,SIIASUB,*100,SIRBWAR
          MOVE      ONE,ERRORFLG
          GOTO      EXTR1000
.
EXTR8750  COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          UNPACK    KEY14,KEY2,KEY12
          PRINT     "Closed Ledger/Account ",KEY2,"/",KEY12:
                    *55,SIRBCAT,*70,SIRACST,*85,SIIASUB,*100,SIRBWAR
          MOVE      ONE,ERRORFLG
          GOTO      EXTR1000
.
EXTR8800
          COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          UNPACK    KEY14,KEY2,KEY12
          PRINT     "Invalid Credit Account ",KEY2,SLASH,KEY12:
                    *55,SIRBCAT,*70,SIRACST,*85,SIIASUB,*100,SIRBWAR
          MOVE      ONE,ERRORFLG
          GOTO      EXTR1000
.
EXTR8900
          COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          UNPACK    KEY14,KEY2,KEY12
          PRINT     "Invalid Mark Up Percentage Account ",KEY2,SLASH,KEY12:
                    *55,SIRBCAT,*70,SIRACST,*85,SIIASUB,*100,SIRBWAR
          MOVE      ONE,ERRORFLG
          GOTO      EXTR1000
.
.
.
EXTR9000
.
EXTR9999  RETURN
.------------------------------------------------------------
. If Req on Picking List then NO Transfer
.------------------------------------------------------------
PICK0000  PACK      KEY12,SIRBCAT,SIRBWAR
          CALL      RDSIIE1
          BRANCH    OVRCD,PICK9000
          PACK      KEY7,SIRBTYP,SIRBREQ
          CALL      RDSIRA1
          BRANCH    OVRCD,PICK9000
.
       PACK KEY83,SIRBWAR,SIRACST,SIRADEL,SIIERAS,SIRBCAT,SIRBTYP,SIRBREQ,SP70
          MATCH     "I",SIRBTYP
          IF        @EQUAL
            CALL      RDSIIP1       * Imprest
          ELSE
            MATCH     "B",SIRBTYP
            IF        @EQUAL
              CALL      RDSIBP1     * Back Order
            ELSE
              CALL      RDSIPR1     * Requisition
            ENDIF
          ENDIF
          BRANCH    OVRCD,PICK9000
.
          GOTO      PICK9900
.
PICK1000
PICK9000  MOVE      ZERO,EXIT
          GOTO      PICK9999
PICK9900  MOVE      ONE,EXIT
PICK9999  RETURN
.------------------------------------------------------------------------------
. Check if transfer data balances
. Returns : ADDFLAG (0=ok, 1=unbalanced, 2=require inter fund transfers)
.------------------------------------------------------------------------------
CKTR0000  MOVE      ZERO,ADDFLAG
          MOVE      ZERO,F12P2
          MOVE      SP70,LEDGER
          PACK      KEY30,SITBLED,SITBACC,SITBBCH,SITBNUM,SITBUNI,SP70 *key save
          PACK      KEY11,SITANUM,SP70
          CALL      RSSITB1
.
CKTR1000  CALL      RKSITB1
          BRANCH    OVRCD,CKTR9000
          MATCH     SITANUM,SITBNUM
          GOTO      CKTR9000 IF NOT EQUAL
.
          COMPARE   ZERO,SITBCST                 * skip zero values
          GOTO      CKTR1000 IF EQUAL
.
          MATCH     "0",SITBTYP                  * from or to type ?
          IF        @EQUAL
            ASSIGN    SITBCST*SEQ,SITBCST
          ENDIF
.
          SUB       SITBCST,F12P2
.
          PACK      KEY5,SITBWAR,SP70
          CALL      RDSIWA1
          BRANCH    OVRCD,CKTR1000
.
          MATCH     SIWALED,LEDGER     * check if more than 1 ledger referenced
          IF        !@EQUAL
            MATCH     SP70,LEDGER
            IF        @EQUAL
              PACK      LEDGER,SIWALED,SP70
            ELSE
              MOVE      "2",ADDFLAG
            ENDIF
          ENDIF
.
          GOTO      CKTR1000
.
CKTR9000                               * check if balance equals P/L amount
          IF        !(F12P2=SITAPL)
            MOVE      "1",ADDFLAG
          ENDIF
.
          CALL      RDSITB2            * restore original record
          PACK      KEY5,SITBWAR,SP70
          CALL      RDSIWA1
.
CKTR9999  RETURN
.
.------------------------------------------------------------------------------
. Extract Stock Transfer Data
.------------------------------------------------------------------------------
EXTB0000  PACK      SITANUM,SP70
          PACK      KEY30,SP70
          CALL      RSSITB2
.
EXTB1000  CALL      RKSITB2
          BRANCH    OVRCD,EXTB9000
.
          MATCH     SP70,SITBBCH                 * ignore data already transfer
          GOTO      EXTB9000 IF NOT EQUAL
.
          MATCH     SP70,SITBLED                 * ignore current batch data
          GOTO      EXTB9000 IF NOT EQUAL
.
          COMPARE   ZERO,SITBCST                 * ignore zero values
          GOTO      EXTB1000 IF EQUAL
.
          MATCH     WAREHOUS,SP70
          IF        !@EQUAL
            MATCH     SITBWAR,WAREHOUS
            GOTO      EXTB1000 IF NOT EQUAL
          ELSE
            MATCH     SP70,SITBWAR               * check warehouse security
            IF        !@EQUAL
              PACK      KEY9,PASSCODE,SITBWAR,SP70
              CALL      RDSIWS1
              BRANCH    OVRCD,EXTB1000
            ENDIF
          ENDIF
.
          PACK      KEY6,SIPEYEAR,FROMPERD,SP70
          MATCH     KEY6,SITBPER                 * check if in date range
          GOTO      EXTB1000 IF LESS
          PACK      KEY6,SIPEYEAR,TOPERD,SP70
          MATCH     SITBPER,KEY6
          GOTO      EXTB1000 IF LESS
.
          DISPLAY   *P55:24,*EL,*V2LON,SITBNUM,*HOFF,"/",*V2LON,SITBCAT
.
.---- read catalog data ----
.
          MOVE      SP70,SIIASUB
          MOVE      SITBCAT,KEY7
          CALL      RDSIIA1
          BRANCH    OVRCD,EXTB8500
.
.---- read warehouse data ----
.
          PACK      KEY5,SITBWAR,SP70
          CALL      RDSIWA1
          BRANCH    OVRCD,EXTB8200
.
.---- if up to next transfer id, check entire transfer out ----
.
          MATCH     SITANUM,SITBNUM
          IF        !@EQUAL
            MOVE      ZERO,SITAPL
            MOVE      SITBNUM,SITANUM
            PACK      KEY8,SITBNUM,SP70
            CALL      RDSITA1          * read header record
            BRANCH    OVRCD,EXTB8800
.
            CALL      CKTR0000         * check if transfer id balances
            BRANCH    ADDFLAG,EXTB8950 * 0=ok, 1=unbalanced, 2=req inter fund
.
.                                      * profit/loss amount exists ?
            IF        !(SITAPL=0)
              PACK      KEY14,SITAACC,SP70
              CALL      RDFMAM1        * if so, check out p/l account
              BRANCH    OVRCD,EXTB8900
              MATCH     "6",FMAMTYPE
              GOTO      EXTB8900 IF NOT LESS
              COMPARE   TWO,FMAMSTAT
              GOTO      EXTB8910 IF EQUAL
.
              PACK      KEY23,KEY14,SIWADISS,SIWARESP
              CALL      RDINTM2        * write p/l record
              IF        OVRCD=0
                SUB       SITAPL,INT2AMT
                CALL      UPINTM2
              ELSE
                UNPACK    KEY23,INT2LED,INT2ACC,INT2DIS,INT2RES
                MOVE      ZERO,INT2AMT
                SUB       SITAPL,INT2AMT
                CALL      WRINTM2
              ENDIF
.
              UNPACK    SITAACC,LEDGER
              MOVE      SITAPL,F12P2
              COMPARE   "2",ADDFLAG    * create inter fund trans if required
              CALL      INTBB000 IF EQUAL
            ENDIF
          ENDIF
.
.---- set up transfer account codes ----
.
          MATCH     SP70,SIWAIACC
          GOTO      EXTB1050 IF NOT EQUAL
.
          MOVE      SIWAPACC,SIWAIACC
.
EXTB1050
          BRANCH    SIWACTY,EXTB2100,EXTB2200
          PACK      KEY14,SIWALED,SIWAIACC
          GOTO      EXTB2500
.
EXTB2100  MOVE      SIIASUB,SISACOMM
.
EXTB2200  MOVE      SISACOMM,SUBJCODE
          MOVE      SIWAIACC,COSTCODE
.
          PACK      SILTSUB,SUBJCODE,SP70
          PACK      KEY8,SIWALED,SUBJCODE,SP70                         *C-59696
          CALL      RDSILT1
          MOVE      SILTSUB,SUBJCODE
          CALL      BCOD0000
          PACK      KEY14,SIWALED,BCACCT
.
EXTB2500  UNPACK    KEY14,KEY2,BCACCT
          CALL      RDFMAM1
          COMPARE   ZERO,OVRCD
          GOTO      EXTB3010 IF EQUAL
          CALL      SQUEZ000
          BRANCH    OVRCD,EXTB8700
.
EXTB3010  MATCH     "6",FMAMTYPE
          GOTO      EXTB8700 IF NOT LESS
          COMPARE   TWO,FMAMSTAT
          GOTO      EXTB8750 IF EQUAL
.
          PACK      KEY11,SITBNUM,SITBUNI,SP70
          CALL      RDSITB1                      * update and
          BRANCH    OVRCD,EXTB1000
          PACK      SITBBCH,SIWALED,SP70          * save ledger/account
          PACK      SITBACC,BCACCT,SP70
          CALL      UPSITB1
          PACK      SITBLED,SIWALED,SP70
          PACK      SITBBCH,SP70
.
          MATCH     "0",SITBTYP                  * from or to type ?
          IF        @EQUAL
            ASSIGN    SITBCST*SEQ,SITBCST
          ENDIF
.
          PACK      KEY30,SITBLED,BCACCT,SITBCAT,SIWADISS,SIWARESP
          CALL      RDINTM1
          BRANCH    OVRCD,EXTB3100
          ADD       SITBQTY,INT1QTY
          ADD       SITBCST,INT1AMT
          CALL      UPINTM1
          GOTO      EXTB4000
.
EXTB3100  UNPACK    KEY30,INT1LED,INT1ACC,INT1CAT,INT1DIS,INT1RES
          MOVE      SITBQTY,INT1QTY
          MOVE      SITBCST,INT1AMT
          CALL      WRINTM1
.
.
EXTB4000
          MOVE      SIWALED,LEDGER
          ASSIGN    SITBCST*SEQ,F12P2
          COMPARE   "2",ADDFLAG        * create inter fund trans if required
          CALL      INTBB000 IF EQUAL
.
          MOVE      ONE,FOUNDFLG
          GOTO      EXTB1000
.
.---- error messages ----
.
EXTB8200
          COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     "Invalid Warehouse ",KEY2:
                    *55,SITBCAT,*85,SIIASUB,*100,SITBWAR,*115,SITBNUM
          MOVE      ONE,ERRORFLG
          GOTO      EXTB1000
.
EXTB8300  COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     "Ledger Does Not Exist ",KEY2:
                    *55,SITBCAT,*85,SIIASUB,*100,SITBWAR,*115,SITBNUM
          MOVE      ONE,ERRORFLG
          GOTO      EXTB1000
.
EXTB8400  COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          UNPACK    KEY14,KEY2,KEY12
          PRINT     "Invalid Inter Fund Acct ",KEY2,SLASH,KEY12:
                    *55,SITBCAT,*85,SIIASUB,*100,SITBWAR,*115,SITBNUM
          MOVE      ONE,ERRORFLG
          GOTO      EXTB1000
.
EXTB8500
          COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     "Invalid Catalog Code ",SITBCAT:
                    *55,SITBCAT,*100,SITBWAR,*115,SITBNUM
          MOVE      ONE,ERRORFLG
          GOTO      EXTB1000
.
EXTB8600
          COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     "Invalid Product Group Code ",SIIASUB:
                    *55,SITBCAT,*85,SIIASUB,*100,SITBWAR,*115,SITBNUM
          MOVE      ONE,ERRORFLG
          GOTO      EXTB1000
.
EXTB8700  COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          UNPACK    KEY14,KEY2,KEY12
          PRINT     "Invalid Ledger/Account ",KEY2,"/",KEY12:
                    *55,SITBCAT,*85,SIIASUB,*100,SITBWAR,*115,SITBNUM
          MOVE      ONE,ERRORFLG
          GOTO      EXTB1000
.
EXTB8750  COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          UNPACK    KEY14,KEY2,KEY12
          PRINT     "Closed Ledger/Account ",KEY2,"/",KEY12:
                    *55,SITBCAT,*85,SIIASUB,*100,SITBWAR,*115,SITBNUM
          MOVE      ONE,ERRORFLG
          GOTO      EXTB1000
.
EXTB8800  COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     "Header Record Missing For Transfer Number ",SITBNUM:
                    *55,SITBCAT,*85,SIIASUB,*100,SITBWAR,*115,SITBNUM
          MOVE      ONE,ERRORFLG
.
          PACK      KEY30,SP10,SP9,SITBNUM,Z70   * skip to next transfer no.
          CALL      RSSITB2
          GOTO      EXTB1000
.
EXTB8900  COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          UNPACK    KEY14,KEY2,KEY12
          PRINT     "Invalid Profit/Loss Acct ",KEY2,SLASH,KEY12:
                    *55,SITBCAT,*85,SIIASUB,*100,SITBWAR,*115,SITBNUM
          MOVE      ONE,ERRORFLG
          GOTO      EXTB8940
.
EXTB8910  COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          UNPACK    KEY14,KEY2,KEY12
          PRINT     "Closed Profit/Loss Acct ",KEY2,SLASH,KEY12:
                    *55,SITBCAT,*85,SIIASUB,*100,SITBWAR,*115,SITBNUM
          MOVE      ONE,ERRORFLG
          GOTO      EXTB8940
.
EXTB8940  PACK      KEY30,SP10,SP9,SITBNUM,Z70   * skip to next transfer no.
          CALL      RSSITB2
          GOTO      EXTB1000
.
EXTB8950  COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          UNPACK    KEY14,KEY2,KEY12
          PRINT     "Transfer Number ",SITBNUM," Unbalanced":
                    *55,SITBCAT,*85,SIIASUB,*100,SITBWAR,*115,SITBNUM
          MOVE      ONE,ERRORFLG
.
          PACK      KEY30,SP10,SP9,SITBNUM,Z70   * skip to next transfer no.
          CALL      RSSITB2
          GOTO      EXTB1000
.
.
EXTB9000
          COMPARE   ONE,ERRORFLG       * clear data if errors found
          GOTO      EXTB9999 IF NOT EQUAL
.
          CALL      LINE0000
.
          PACK      KEY30,SP70
.
EXTB9100  CALL      RSSITB2
          CALL      RKSITB2
          BRANCH    OVRCD,EXTB9999
          MATCH     SP70,SITBLED
          GOTO      EXTB9999 IF NOT EQUAL
.
          PACK      KEY30,SITBLED,SITBACC,SITBBCH,SITBNUM,SITBUNI,SP70
          UNPACK    SP70,SITBACC,SITBBCH
          CALL      UPSITB2
          GOTO      EXTB9100
.
EXTB9999  RETURN
.********************************************************************
. HEAE - print errors                               Called by PRNT
.********************************************************************
HEAE0000  MOVE      ONE,CNOUNDLN
          COMPARE   ZERO,CPAGENO
          CALL      LINE0000 IF NOT EQUAL
          CALL      HEAD132                      * print heading
.
          ADD       "1",CLNO
          PRINT     *40,"Error Report"
          CALL      LINE0000                     * print line
          PRINT     "Error",*55,"Catalog",*70,"Cost Cent":
                    *85,"Prod Grp",*100,"Warehouse",*115,"Stock Trans No"
          ADD       "1",CLNO
          CALL      LINE0000                     * print line
.
HEAE9999  RETURN
.
LINE0000  PRINT     "--------------------------------------------":
                    "--------------------------------------------":
                    "--------------------------------------------"
LINE9999  RETURN
.
.********************************************************************
. HEAA - print audit                                Called by PRNT
.********************************************************************
HEAA0000  MOVE      ONE,CNOUNDLN
          COMPARE   ZERO,CPAGENO
          CALL      LINA0000 IF NOT EQUAL
          CALL      HEAD80                       * print heading
.
          ADD       "1",CLNO
          PRINT     *20,"Audit Report for Batch ",FMBCBAT
          CALL      LINA0000                     * print line
          PRINT     "Ledger/Account",*18,"Req. No./",*32,"W/H":
                    *40,"Catalog",*48,"            Amount",*70,"Date",*N:
                    *18,"Transfer ID"
          ADD       "2",CLNO
          CALL      LINA0000                     * print line
.
HEAA9999  RETURN
.
LINA0000  PRINT     "----------------------------------------":
                    "----------------------------------------"
LINA9999  RETURN
.
.------------------------------------------------------------------------
. Tempory Fix for Mater Hospital
.------------------------------------------------------------------------
SQUEZ000  UNPACK    KEY14,KEY2,KEY12
          SQUEEZE   BCACCT
          PACK      KEY14,KEY2,BCACCT,SP70
          CALL      RDFMAM1
.
          IF        OVRCD=1
            MOVE      KEY12,BCACCT
            PACK      KEY14,KEY2,BCACCT,SP70
          ENDIF
.
          PACK      BCACCT,BCACCT,SP70
.
SQUEZ999  RETURN
.**********************************************************************
.  MBAT - Make batch                                   Called By lots
.**********************************************************************
MBAT0000  CALL      RDFMCOCO           * get next batch number
          MATCH     "00000",FMBCOBAT
          GOTO      MBAT0000 IF EQUAL    * cannot equal zero
.
. **** check if batch already exists on fmsbcfaf, apsbmfaf & fmsjpdaf
.
          PACK      KEY5,FMBCOBAT,SP70
          CALL      RDFMBC1
          COMPARE   ONE,OVRCD
          GOTO      MBAT0000 IF NOT EQUAL
.
          PACK      KEY5,FMBCOBAT,SP70
          CALL      RDAPBM1
          COMPARE   ONE,OVRCD
          GOTO      MBAT0000 IF NOT EQUAL

          PACK      KEY5,FMBCOBAT,SP70
          CALL      RDFMJP1
          COMPARE   ONE,OVRCD
          GOTO      MBAT0000 IF NOT EQUAL
.
MBAT0001  MOVE      FMBCOBAT,BC1BATCH
.
          MOVE      ZERO,BC0BTCHT
          MOVE      SP2,BC0DIM2
          MOVE      TWO,BC0NXTSC
          MOVE      ZERO,BC0NXTSW
          MOVE      ONE,BC0SUPBC
          MOVE      SP6,BC0DIM6
          MOVE      ZERO,BC0SPLTK
          MOVE      ZERO,BC0SPLTP
          MOVE      ONE,BC0ONE
          MOVE      ZERO,BC0SPSEC
          MOVE      ZERO,BC0DISC
.
MBAT0002  CLEAR     FNAME
          STRIP     HFMSBTCH
          APPEND    HFMSBTCH,FNAME     * batch file directory **
          APPEND    "bch",FNAME
          APPEND    BC1BATCH,FNAME
          APPEND    ".txt",FNAME
          RESET     FNAME
.
          MOVE      ZERO,ERRORFLG
          PREP      BATFILE,FNAME
          CALL      WRBAT0
.
          MOVE      FIVE,BC1STAT
          MOVE      "HD",BC1HEAD
          MOVE      BC1BATCH,BCBATCH
          MOVE      ZERO,BC1KEYT
          MOVE      ZERO,BC1ACCT
          MOVE      ZERO,BC2ACCT
          MOVE      ZERO,BC1NOTR
.
          PACK      BC1DATE,CDAY,CMON,CCENT,CYEAR
          REP       " 0",BC1DATE
          MOVE      PASSCODE,BC1OPER
          MOVE      FMLALEDG,BC1LEDG
          MOVE      BC1LEDG,BCLEDG
          MOVE      "JA",BC1TRAN
          UNPACK    BATDATE,CCENT,CYEAR,CMON,CDAY
          PACK      BC1BDATE,CDAY,CMON,CCENT,CYEAR
          REP       " 0",BC1BDATE
          MOVE      ZERO,BC1REORG
          MOVE      SIWADISS,BC1DISS
          MOVE      BC1DISS,BCDISS
          MOVE      SP2,BC1PAYT
          MOVE      SIWARESP,BC1RESP
          MOVE      BC1RESP,BCRESP
          MOVE      ZERO,BC1REST
          MOVE      ZERO,BC1UTYPE
.
          CALL      WRBAT1
.
MBAT9999  RETURN
.****************************************************************************
.  BCOD - get account code from subjective and cost codes    Called by lots
.        Requires - SUBJCODE  (subjective code)
.                   COSTCODE  (cost centre code)
.                   FMSUUD2A  (separate CC/Subj 1=yes)
.                   FMSUUD2B  (separater char)
.                   FMSUUD4A  (cost centre code length)
.        Returns  - BCACCT    (account code)
.****************************************************************************
BCOD0000  MATCH     SP30,COSTCODE
          GOTO      BCOD2000 IF EQUAL
.
          MATCH     SP30,SUBJCODE
          GOTO      BCOD3000 IF EQUAL
.
          STORE     COSTCODE,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                      KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          LOAD      BCACCT,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          COMPARE   FMSUUD2A,ONE
          GOTO      BCOD1000 IF NOT EQUAL         * separator char in use ?
.
          PACK      BCACCT,BCACCT,FMSUUD2B      * include sep. char
.
BCOD1000  PACK      BCACCT,BCACCT,SUBJCODE,SP30 * add subj code
          GOTO      BCOD9999
.
BCOD2000  PACK      BCACCT,SUBJCODE,SP30 * subj code
          GOTO      BCOD9999
.
BCOD3000  PACK      BCACCT,COSTCODE,SP30 * cc code
          GOTO      BCOD9999
.
BCOD9999  RETURN
.
.**********************************************************************
. Temp file IO routines
.**********************************************************************
RSINTM1   RESET     KEY30
          READ      INVTMPA1,KEY30;;
          RETURN
.
RAINTM1   RESET     KEY30
          MOVE      ZERO,OVRCD
          READ      INVTMPA1,KEY30;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDINTM1   RESET     KEY30
          MOVE      ZERO,OVRCD
          READ      INVTMPA1,KEY30;INT1LED,INT1ACC,INT1CAT,INT1DIS,INT1RES:
                                   INT1AMT,INT1QTY
          GOTO      OVERCOND IF OVER
          RETURN
.
RKINTM1   MOVE      ZERO,OVRCD
          READKS    INVTMPA1;INT1LED,INT1ACC,INT1CAT,INT1DIS,INT1RES:
                                  INT1AMT,INT1QTY
          GOTO      OVERCOND IF OVER
          RETURN
.
UPINTM1   UPDATE    INVTMPA1;INT1LED,INT1ACC,INT1CAT,INT1DIS,INT1RES:
                                   INT1AMT,INT1QTY
          RETURN
.
WRINTM1   RESET     KEY30
          WRITE     INVTMPA1,KEY30;INT1LED,INT1ACC,INT1CAT,INT1DIS,INT1RES:
                                   INT1AMT,INT1QTY
          RETURN
.
.**********************************************************************
. Temp file IO routines
.**********************************************************************
RSINTM2   RESET     KEY23
          READ      INVTMPA2,KEY23;;
          RETURN
.
RAINTM2   RESET     KEY23
          MOVE      ZERO,OVRCD
          READ      INVTMPA2,KEY23;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDINTM2   RESET     KEY23
          MOVE      ZERO,OVRCD
          READ      INVTMPA2,KEY23;INT2LED,INT2ACC,INT2DIS,INT2RES,INT2AMT
          GOTO      OVERCOND IF OVER
          RETURN
.
RKINTM2   MOVE      ZERO,OVRCD
          READKS    INVTMPA2;INT2LED,INT2ACC,INT2DIS,INT2RES,INT2AMT
          GOTO      OVERCOND IF OVER
          RETURN
.
UPINTM2   UPDATE    INVTMPA2;INT2LED,INT2ACC,INT2DIS,INT2RES,INT2AMT
          RETURN
.
WRINTM2   RESET     KEY23
          WRITE     INVTMPA2,KEY23;INT2LED,INT2ACC,INT2DIS,INT2RES,INT2AMT
          RETURN
.**********************************************************************
. Temp file IO routines
.**********************************************************************
RSINTM3   RESET     KEY42
          READ      INVTMPA3,KEY42;;
          RETURN
.
RAINTM3   RESET     KEY42
          MOVE      ZERO,OVRCD
          READ      INVTMPA3,KEY42;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDINTM3   RESET     KEY42
          MOVE      ZERO,OVRCD
          READ      INVTMPA3,KEY42;INT3LED,INT3ACC,INT3REQ,INT3WAR:
                                   INT3CAT,INT3DAT,INT3AMT
          GOTO      OVERCOND IF OVER
          RETURN
.
RKINTM3   MOVE      ZERO,OVRCD
          READKS    INVTMPA3;INT3LED,INT3ACC,INT3REQ,INT3WAR:
                                   INT3CAT,INT3DAT,INT3AMT
          GOTO      OVERCOND IF OVER
          RETURN
.
UPINTM3   UPDATE    INVTMPA3;INT3LED,INT3ACC,INT3REQ,INT3WAR:
                                   INT3CAT,INT3DAT,INT3AMT
          RETURN
.
WRINTM3   RESET     KEY42
          WRITE     INVTMPA3,KEY42;INT3LED,INT3ACC,INT3REQ,INT3WAR:
                                   INT3CAT,INT3DAT,INT3AMT
          RETURN
.------------------------------------------------------------
. Interfund Transfers
.------------------------------------------------------------
INTER000  MOVE      LEDGER2,KEY2
          CALL      RDFMLA1
          BRANCH    OVRCD,INTER910
.
          PACK      KEY14,LEDGER2,FMLAIFT,SP70
          CALL      RDFMAM1
          IF        OVRCD=1
            CALL      SQUEZ000
            BRANCH    OVRCD,INTER920
          ENDIF
.
          MATCH     "6",FMAMTYPE
          GOTO      INTER920 IF NOT LESS
.
          COMPARE   TWO,FMAMSTAT
          GOTO      INTER930 IF EQUAL
.
          PACK      KEY23,KEY14,SIWADISS,SIWARESP
          CALL      RDINTM2
          IF        OVRCD=0
            SUB       SIRBAMT,INT2AMT
            SUB       MRKUPAMT,INT2AMT
            CALL      UPINTM2
          ELSE
            UNPACK    KEY23,INT2LED,INT2ACC,INT2DIS,INT2RES
            MOVE      ZERO,INT2AMT
            SUB       SIRBAMT,INT2AMT
            SUB       MRKUPAMT,INT2AMT
            CALL      WRINTM2
          ENDIF
.
INTER800  MOVE      LEDGER,KEY2
          CALL      RDFMLA1
          BRANCH    OVRCD,INTER910
.
          PACK      KEY14,LEDGER,FMLAIFT,SP70
          CALL      RDFMAM1
          IF        OVRCD=1
            CALL      SQUEZ000
            BRANCH    OVRCD,INTER920
          ENDIF
.
          MATCH     "6",FMAMTYPE
          GOTO      INTER920 IF NOT LESS
.
          COMPARE   TWO,FMAMSTAT
          GOTO      INTER930 IF EQUAL
.
          PACK      KEY23,KEY14,SIWADISS,SIWARESP
          CALL      RDINTM2
          IF        OVRCD=0
            ADD       SIRBAMT,INT2AMT
            ADD       MRKUPAMT,INT2AMT
            CALL      UPINTM2
          ELSE
            UNPACK    KEY23,INT2LED,INT2ACC,INT2DIS,INT2RES
            MOVE      SIRBAMT,INT2AMT
            ADD       MRKUPAMT,INT2AMT
            CALL      WRINTM2
          ENDIF
.
          GOTO      INTER999
.
INTER910  COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     "Ledger Master Record Missing for = ",KEY2:
                    *55,SIRBCAT,*70,SIRACST,*85,SIIASUB,*100,SIRBWAR
          MOVE      ONE,ERRORFLG
          GOTO      INTER999
.
INTER920  COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          UNPACK    KEY14,KEY2,KEY12
          PRINT     "Invalid Inter Fund Account = ",KEY2,SLASH,KEY12:
                    *55,SIRBCAT,*70,SIRACST,*85,SIIASUB,*100,SIRBWAR
          MOVE      ONE,ERRORFLG
          GOTO      INTER999
.
INTER930  COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          UNPACK    KEY14,KEY2,KEY12
          PRINT     "Closed Inter Fund Account = ",KEY2,SLASH,KEY12:
                    *55,SIRBCAT,*70,SIRACST,*85,SIIASUB,*100,SIRBWAR
          MOVE      ONE,ERRORFLG
          GOTO      INTER999
.
INTER999  RETURN
.------------------------------------------------------------
. Create interfund transfer
.  Requires : LEDGER (Ledger)
.             F12P2  (Amount)
.------------------------------------------------------------
.
INTBB000  MOVE      LEDGER,KEY2
          CALL      RDFMLA1
          BRANCH    OVRCD,INTBB910
.
          PACK      KEY14,LEDGER,FMLAIFT,SP70
          CALL      RDFMAM1
          IF        OVRCD=1
            CALL      SQUEZ000
            BRANCH    OVRCD,INTBB920
          ENDIF
.
          MATCH     "6",FMAMTYPE
          GOTO      INTBB920 IF NOT LESS
.
          COMPARE   TWO,FMAMSTAT
          GOTO      INTBB930 IF EQUAL
.
          PACK      KEY23,KEY14,SIWADISS,SIWARESP
          CALL      RDINTM2
          BRANCH    OVRCD,INTBB410
          SUB       F12P2,INT2AMT
          CALL      UPINTM2
          GOTO      INTBB420
.
INTBB410  UNPACK    KEY23,INT2LED,INT2ACC,INT2DIS,INT2RES
          MOVE      ZERO,INT2AMT
          SUB       F12P2,INT2AMT
          CALL      WRINTM2
.
INTBB420
          GOTO      INTBB999
.
INTBB910  COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          PRINT     "Ledger Does Not Exist ",KEY2:
                    *55,SITBCAT,*85,SIIASUB,*100,SIRBWAR,*115,SITBNUM
          MOVE      ONE,ERRORFLG
          GOTO      INTBB999
.
INTBB920  COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          UNPACK    KEY14,KEY2,KEY12
          PRINT     "Invalid Inter Fund Acct ",KEY2,SLASH,KEY12:
                    *55,SITBCAT,*85,SIIASUB,*100,SIRBWAR,*115,SITBNUM
          MOVE      ONE,ERRORFLG
          GOTO      INTBB999
.
INTBB930  COMPARE   "55",CLNO
          CALL      HEAE0000 IF NOT LESS
          ADD       ONE,CLNO
          UNPACK    KEY14,KEY2,KEY12
          PRINT     "Closed Inter Fund Acct ",KEY2,SLASH,KEY12:
                    *55,SITBCAT,*85,SIIASUB,*100,SIRBWAR,*115,SITBNUM
          MOVE      ONE,ERRORFLG
          GOTO      INTBB999
.
INTBB999  RETURN
.
.------------------------------------------------------------------------------
. Delete accounts on any non-transferred records
.------------------------------------------------------------------------------
RDAT0000
          PACK      KEY39,SP70
          CALL      RSSIRB3
.
RDAT1000  CALL      RKSIRB3
          BRANCH    OVRCD,RDAT5000
.
          MATCH     SP70,SIRBBCH       * Ignore Data Already Transferred
          GOTO      RDAT5000 IF NOT EQUAL
.
          MATCH     "T",SIRBTYP        * ignore stock trans (done in RDAT5000)
          GOTO      RDAT1000 IF EQUAL
.
          MATCH     SP70,SIRBLED       * Check if transferred to current batch
          GOTO      RDAT1000 IF EQUAL
.
          PACK      KEY39,SIRBBCH,SIRBLED,SIRBACC,SIRBTYP,SIRBREQ:
                          SIRBWAR,SIRBCAT,SP70
          DISPLAY   *P1:24,"Clearing : ",*V2LON,KEY39,*EL;
          UNPACK    SP70,SIRBBCH,SIRBLED,SIRBACC
          CALL      UPSIRB3                      * update and
          CALL      RSSIRB3                      * reposition on original key
.
          GOTO      RDAT1000
.
.---- stock transfer ----
.
RDAT5000
          PACK      KEY30,SP70
          CALL      RSSITB2
.
RDAT6000  CALL      RKSITB2
          BRANCH    OVRCD,RDAT9000
.
          MATCH     SP70,SITBLED       * Ignore Data Already Transferred
          GOTO      RDAT9000 IF NOT EQUAL
.
          MATCH     SP70,SITBBCH       * Check if transferred to current batch
          GOTO      RDAT6000 IF EQUAL
.
          PACK      KEY30,SITBLED,SITBACC,SITBBCH,SITBNUM,SITBUNI,SP70
          DISPLAY   *P1:24,"Clearing : ",*V2LON,KEY30,*EL;
          UNPACK    SP70,SITBBCH,SITBLED,SITBACC
          CALL      UPSITB2            * update and
          CALL      RSSITB2            * reposition on original key
.
          MOVE      "T",SIRBTYP        * check if on requisitions file
          MOVE      SITANUM,F8
          MOVE      F8,F7
          MOVE      F7,SIRBREQ
          PACK      KEY20,SIRBTYP,SIRBREQ,SITBWAR,SITBCAT,SP70
          CALL      RDSIRB1
          IF        OVRCD=0
            UNPACK    SP70,SIRBBCH,SIRBLED,SIRBACC
            CALL      UPSIRB1
          ENDIF
.
          GOTO      RDAT6000
.
RDAT9000
.
RDAT9999  RETURN
.----------------------------------------------------------------------
. Keyin Date
.----------------------------------------------------------------------
KDATE000
          PACK      BATDATE,CCC,CYY,CMM,CDD,SP70
          REP       " 0",BATDATE
          UNPACK    BATDATE,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE
          BRANCH    OVRCD,KDATE000
          PACK      BATDATE,CCENT,CYEAR,CMON,CDAY
.
          PACK      KEY2,SP70
          CALL      RSFMLA1
          CALL      RKFMLA1
          PACK      WORKDATE,BATDATE,SP70
          CALL      CFYR0000
.
          IF        EXIT=1
            CLEAR     DISPMSG
            APPEND    "Invalid Date in General Ledger - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KDATE000
          ENDIF
.
          IF        PERLOCK=1
            CLEAR     DISPMSG
            APPEND    "Period Locked - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KDATE000
          ENDIF
.
          UNPACK    PEREDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      "  Ending  ",KEY10
          PACK      DATDESC,PERDESC,KEY10,CPCDATE,SP70
.
KDATE999  RETURN
EYEAR000  CALL      RINPECON
          MOVE      SIPECYR,SIPEYEAR
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,*JR,SIPEYEAR
          PACK      SIPEYEAR,SIPEYEAR,SP70
.
          MATCH     SP70,SIPEYEAR
          GOTO      EYEAR990 IF EQUAL
          PACK      KEY4,SP3,EXITCHAR
          MATCH     KEY4,SIPEYEAR
          GOTO      EYEAR990 IF EQUAL
.
          TYPE      SIPEYEAR
          GOTO      EYEAR000 IF NOT EQUAL
.
          MOVE      SIPEYEAR,SIPEYF4
          IF        SIPEYF4<100
            SQUEEZE   SIPEYEAR
            MOVE      SIPEYEAR,FORM2
            PACK      SIPEYEAR,CCC,FORM2,SP70
          ENDIF
.
          REP       " 0",SIPEYEAR
          MOVE      ZERO,EXIT
          MOVE      ONE,ACCEPT
          GOTO      EYEAR999
.
EYEAR990  MOVE      TWO,EXIT
.
EYEAR999  RETURN
KCODF000  KEYIN     *PCCOL:CVERT,*V2LON,*RV,F2
          COMPARE   ZERO,F2
          GOTO      KCODF990 IF EQUAL
          IF        F2>SIPENUM
            BEEP
            MOVE      "Invalid Period - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KCODF000
          ENDIF
          MOVE      F2,SIPEPER
          REP       " 0",SIPEPER
          PACK      KEY6,SIPEYEAR,SIPEPER,SP70
          REP       " 0",KEY6
          CALL      RDSIPE1
          IF        OVRCD=1
            BEEP
            MOVE      "Period NOT Created - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KCODF000
          ENDIF
.
          PACK      FROMPERD,SIPEPER,SP70
          PACK      FROMDATE,SIPESDT,SP70
          MOVE      ZERO,EXIT
          GOTO      KCODF999
.
KCODF990  MOVE      TWO,EXIT
.
KCODF999  RETURN
KCODT000  KEYIN     *PCCOL:CVERT,*V2LON,*RV,F2
          COMPARE   ZERO,F2
          GOTO      KCODT990 IF EQUAL
          IF        F2>SIPENUM
            BEEP
            MOVE      "Invalid Period - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KCODT000
          ENDIF
.
          MOVE      F2,SIPEPER
          REP       " 0",SIPEPER
          PACK      KEY6,SIPEYEAR,SIPEPER,SP70
          REP       " 0",KEY6
          CALL      RDSIPE1
.
          IF        OVRCD=1
            BEEP
            MOVE      "Period NOT Created - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KCODT000
          ENDIF
.
          PACK      TOPERD,SIPEPER,SP70
          PACK      TODATE,SIPEEDT,SP70
          MOVE      ZERO,EXIT
          GOTO      KCODT999
.
KCODT990  MOVE      TWO,EXIT
.
KCODT999  RETURN
.--------------------------------------------------------------------------
. Entry Handler for Warehouse Keyin
.--------------------------------------------------------------------------
KSIWA000
          MOVE      SP70,WAREHOUS
          CALL      KSIWSA00               * Keyin Warehouse Code with security
          IF        EXIT=1
            MOVE      SP70,SIWAWAR
            MOVE      "All Warehouses",SIWADES
            MOVE      ZERO,EXIT
          ENDIF
          MOVE      SIWAWAR,WAREHOUS
.
KSIWA999  RETURN

.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSBMFIO/INC
          INC       FMSAMAIO/INC
          INC       FMSBCFIO/INC
          INC       FMSCONIO/INC
          INC       FMSCSAIO/INC
          INC       FMSJPDIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMCIO/INC
          INC       FMSLMCKY    
          INC       IBABATIO/INC
          INC       SINBPSIO/INC
          INC       SINCCAIO/INC
          INC       SINCIAIO/INC
          INC       SINCIEIO/INC
          INC       SINIPSIO/INC
          INC       SINLTTIO/INC
          INC       SINNATIO/INC
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINPRQIO/INC
          INC       SINREAIO/INC
          INC       SINREBIO/INC
          INC       SINSUAIO/INC
          INC       SINTRAIO/INC
          INC       SINTRBIO/INC
          INC       SINWARIO/INC
          INC       SINWSEIO/INC
          INC       SINWSEKY    
.
          INC       STDGENCD
.
