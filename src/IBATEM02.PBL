.**********************************************************************
.*                                                                    *
.* Program       : IBATEM02                                           *
.*                                                                    *
.* Description   : Maintenance program for IBA variable definition    *
.*                 file for user defined stationery                   *
.*                                                                    *
.* Date          : 21/03/90                                           *
.*                                                                    *
.* Author        : Neeriem Dye                                        *
.*                                                                    *
.**********************************************************************
.* Mods     :                                                         *
.*       V10.11.01   12/10/2017  Ania P                  CAR 261630   *
.*                   Removed use of PORT and IBCNVARM                 *
.*       V10.03.01   25/10/2012  Patrick Adair           CAR 273181   *
.*                   Recompiled for IBADSTYP                          *
.*        V9.12.01   30/09/2009  Peter Vela  CAR 205008               *
.*                   Recompiled for IBADSTYP                          *
.*        V9.10.01   29/07/2008  Peter Vela  CAR 151951               *
.*                   Recompiled for IBADSTYP                          *
.*        V9.08.01   23/03/2007  Peter Vela  CAR 128233               *
.*                   Recompiled for IBADSTYP                          *
.*        V9.05.01   22/03/2006  Peter Vela  CAR 61299                *
.*                   Increased field no size from DIM3 to DIM5        *
.*        V9.04.01   17/03/2004  Lina Vo     CAR 56405                *
.*                   Added IBASTP18 - Theatre Form Stationary Type    *
.**********************************************************************
.*        V9.03.01   01/03/2004  Pat Dirito                           *
.*                   Added IBASTP17 - Allied Health Stationary Type   *
.**********************************************************************
.*        C2.00.02  27/06/2000  Charles Handaya                       *
.*                  Added new Stationery Types (15 & 16) for Receipt  *
.*        C2.00.01  05/04/2000  Charles Handaya                       *
.*                  Added new Stationery Types (13 & 14) for Debtor   *
.*        C2.00.00  25/02/2000  Davin                                 *
.*                  Combined release 5 & 6 (all stationery types)     *
.**********************************************************************
.*        V5.07.02  09/07/1999  Nicole Harrington                     *
.*                  Added IBASTYP7 (Emergency Form)                   *
.*        V5.07.01  01/04/1999  Davin                                 *
.*                  Added IBASTYP6 (Health Fund Claim Form)           *
.*        V5.07     06/10/98  Jim Stathopoulos                        *
.*                  507 Changes                                       *
.**********************************************************************
.*        V5.04.01  21/10/1996    Howellsy    EOC & ACC               *
.*                  Added ACC Form. Stationery Type=5                 *
.**********************************************************************
.*                 V5.01.02 30/05/90 Graeme Williams                  *
.*                          Added stationery types 31 and 32          *
.*                                                                    *
.*                 04/07/90 Peter Eddey                               *
.*                          Added includes to handle stationery       *
.*                          code & associated ? option                *
.*                                                                    *
.*        V5.01.03  19/03/1991    Justin Coates                       *
.*                  Re-compiled for extra order types                 *
.*        V5.01.04  22/05/1991    Steve O'Gorman                      *
.*                  Fixed Errors found by the New Compiler            *
.*        V5.01.06  09/03/93  Mystery Man                             *
.*                  Dunno what the change was                         *
.*        V5.01.07  16/02/94  Matt Surridge                           *
.*                  General Standards Upgrade                         *
.*        V5.01.08  16/03/94  Matt Surridge                           *
.*                  Added Progam Level Locking (via Port Number.)     *
.*        V5.02.01  12/04/1995  Greg Horvat                           *
.*                  Removed the option for ibavr1af                   *
.*        V5.02.02  02/05/1995  Steve Armstrong                       *
.*                  Recompiled for IBASTPDS                           *
.*        V5.03.01  27/06/1995    Justin Coates                       *
.*                  removed use of stcntvar                           *
.*                                                                    *
.**********************************************************************
.
.$$$$$
.    IBA Variable Definition Maintenance ( IBATEM02 )
.    ------------------------------------------------
.
.    - Initialisation
.
.            - Display Header
.            - Open Files
.               IBAVARD1
.               IBAVARD2
.
.    - Processing Options
.
.            - 0 = Exit
.            - 1 = Add 
.
.                  - Clear Input Variables
.                  - Display Screen Format
.                  - Input Key
.                      - Read IVAVARD1, Check if Already Exists
.                      - If Not then Continue
.                  - Select Item, Post, or Cancel
.                  - If Post, then write Data to IBAVAR1 
.
.            - 2 = Modify
.
.                  - Clear Input Variables
.                  - Display Screen Format
.                  - Input Key
.                      - Read IVAVARD1, Check if Already Exists
.                      - If Exists then Continue
.                      - Display Current Details
.                  - Select Item, Post, or Cancel
.                  - If Post, then write Data to IBAVAR1 
.
.            - 3 = Modify
.
.                  - Clear Input Variables
.                  - Display Screen Format
.                  - Input Key
.                      - Read IVAVARD1, Check if Already Exists
.                      - If Exists then Continue
.                      - Display Current Details
.                  - Select Item, Post, or Cancel
.                  - If Post, then write Data to IBAVAR1 
.
.    - END
.$$$$$
.
          INC       STD001FD
          INC       IBAVARFD/INC
          INC       IBADSTYP/INC
          INC       IBACONFD/INC
.
PRGID     INIT      "IBATEM02"
PRGNAM    INIT      "Template Variable Maintenance"
VERSION   INIT      "V12.00.00"
+
.**********************************************************************
.*                       GLOBAL VARIABLES                             *
.**********************************************************************
.
CROW      FORM      2
.
DUMYFDES  DIM       30
DUMYFLEN  FORM      3
MNUOPT    FORM      1
ORIGDESC  DIM       30
ROW       FORM      2
SAVEFLEN  FORM      3
SAVEDESC  DIM       30
TEMPTYPE  FORM      3
TMPTYPE2  FORM      3 
TEMPDESC  DIM       30
TYPENAME  DIM       30
TYPENUM   FORM      3
TWOHUND1  FORM      "201"
WRITEFLG  FORM      1
.
.**********************************************************************
.*                           MAINLINE                                 *
.**********************************************************************
.
ML0000    CALL      INIT0000               * initialization and open files
          BRANCH    EXIT,ML9999
.
ML0100    CALL      OPTN0000               * select option
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          BRANCH    MNUOPT,ML1000,ML2000,ML3000,ML4000
.
.---- add a record ----
.
ML1000    CALL      CLR0000                * clear input variables
          CALL      SCR0000                * display screen format
          MOVE      FOUR,ROW
          CALL      STYP0000               * input stationery type
          BRANCH    EXIT,ML0100            * go back to main menu
ML1100    CALL      FNUM0000               * input field number
          BRANCH    EXIT,ML1000            * go back to stationery type
          CALL      ACPT0000               * accept initial values
          CALL      SEL0000                * select, post, cancel
          BRANCH    EXIT,ML1100
          CALL      WRT0000                * write to file
          GOTO      ML1100
.
.---- modify a record ----
.
ML2000    CALL      CLR0000                * clear input variables
          CALL      SCR0000                * display screen format
          MOVE      FOUR,ROW
          CALL      STYP0000               * input stationery type
          BRANCH    EXIT,ML0100            * go back to main menu
ML2100    CALL      FNUM0000               * input field number
          BRANCH    EXIT,ML2000            * go back to stationery type
          CALL      DISP0000               * display details
          CALL      SEL0000                * select, post, cancel
          BRANCH    EXIT,ML2100
          CALL      UPD0000                * write to file
          GOTO      ML2100
.
.---- delete a record ----
.
ML3000    CALL      CLR0000                * clear input variables
          CALL      SCR0000                * display screen format
          MOVE      FOUR,ROW
          CALL      STYP0000               * input stationery type
          BRANCH    EXIT,ML0100            * go back to main menu
ML3100    CALL      FNUM0000               * input field number
          BRANCH    EXIT,ML3000            * go back to stationery type
          CALL      DISP0000               * display details
          CALL      DELQST                 * ok to delete ?
          BRANCH    CEXIT,ML3200,ML3100,ML0100
ML3200    CALL      DEL0000                * delete record
          GOTO      ML3100
.
.
.-----  copies the first 200 records of one stationery type ----
.-----  to another stationery type.                         ----
. 
ML4000   
          CALL      DCSC0000               * display copy screen
.
          MOVE      SIX,ROW
          MOVE      ZERO,CROW
          CALL      STYP0000               * input stationery type
          BRANCH    EXIT,ML0100  
.
          CALL      SSTP0000               * input 2nd stationery type
          BRANCH    EXIT,ML4000            
.
          CALL      CONTQST
          BRANCH    CEXIT,ML4500,ML4000,ML0100
.
ML4500    CALL      COPY0000
          GOTO      ML0100
.
ML9999    CHAIN     PGM                    * chain back to program
.**********************************************************************
.*        INIT0000                               Called by ML0000     *
.*        Initialization  Routine                                     *
.**********************************************************************
INIT0000  CALL      DISPHEAD                     * display heading
.
          MOVE      FALSE,EXIT
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P57:24,"Opening ibavaraf";  * open variable file
          OPEN      IBAVARD1,"ibavaraf"
          OPEN      IBAVARD2,"ibavaraf"
.
          MOVE      ONE,CNOUNDLN                 * dont print line at eop
          ADD       FORTY,NSORTNUM
.
INIT9999  RETURN
.**********************************************************************
.*         CLR0000                               Called by ML0000     *
.*        Clear variables                                             *
.**********************************************************************
CLR0000   MOVE      ZERO,DUMYFLEN
          MOVE      ZERO,IBVRSTYP
          MOVE      ZERO,IBVRFNUM
          MOVE      ZERO,IBVRFLEN
          MOVE      SP5,DIBVRFNM
          MOVE      SP3,DIBVRTYP
.
CLR9999   RETURN
.****************************************************************************
.*        OPTN0000                                Called by : ML0000        *
.*        get user options or exit                                          *
.*                                                                          *
.*    valid options     --->  (0) Exit                                      *
.*                            (1) Add                                       *
.*                            (2) Modify                                    *
.*                            (3) Delete                                    *
.****************************************************************************
.
.
. ---- display option screen ----
.
OPTN0000  
.
          DISPLAY   *P55:2,*EF
          HLINE     *G37,2,55,80
          DISPLAY   *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = Insert":
                    *P1:6,*V2LON,"2",*HOFF," = Change": 
                    *P1:7,*V2LON,"3",*HOFF," = Delete":
                    *P1:8,*V2LON,"4",*HOFF," = Copy":
                    *P1:10,"Select Option : "
.
OPTN1000 
          KEYIN     *P17:10,*DV,UNDLN1:
                    *P17:10,*V2LON,MNUOPT:
                    *P17:10,*DV,MNUOPT
.
          COMPARE   ZERO,MNUOPT
          GOTO      OPTN9000 IF EQUAL             * exit
.
          BRANCH    MNUOPT,OPTN2100,OPTN2200,OPTN2300,OPTN2400
.
          BEEP
          GOTO      OPTN1000                      * invalid option, re-enter
.
OPTN2100
          DISPLAY   *P55:2,*EL,*V2LON,"- Insert"
          HLINE     *G37,2,64,80
          GOTO      OPTN8000
OPTN2200
          DISPLAY   *P55:2,*EL,*V2LON,"- Change"
          HLINE     *G37,2,64,80
          GOTO      OPTN8000
OPTN2300
          DISPLAY   *P55:2,*EL,*V2LON,"- Delete"
          HLINE     *G37,2,64,80
          GOTO      OPTN8000
OPTN2400
          DISPLAY   *P55:2,*EL,*V2LON,"- Copy"
          HLINE     *G37,2,62,80
          GOTO      OPTN8000
.
.
OPTN8000  
          MOVE      FALSE,EXIT
          GOTO      OPTN9999
.
.------ exit option chosen ------
.
OPTN9000  MOVE      TRUE,EXIT                     * set EXIT = 1
.
OPTN9999  RETURN
.
.**************************************************************************
.*        SCR0000             Called by :   ML000, STYP0000, RDIS0000     *
.*        Main Data Screen Display                                        *
.**************************************************************************
SCR0000   DISPLAY   *P1:4,*EF,"Stationery Type         : ":
                    *P1:5,"Field Number            : ":
                    *P1:7,*V2LON,ONE,*HOFF,". Variable Description : ":
                    *P1:8,*V2LON,TWO,*HOFF,". Field Length         : "
.
SCR9999   RETURN
.
.**************************************************************************
.*        DCSC0000            Called by :   ML000, STYP0000, RDIS0000     *
.*        Copy Data Screen Display                                        *
.**************************************************************************
DCSC0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"Copy from :",*HOFF:
                    *P1:6,"Stationery Type         : ":
                    *P1:8,*V2LON,"To :",*HOFF:
                    *P1:10,"Stationery Type         : "
.
DCSC9999  RETURN
.**************************************************************************
.*        STYP0000                     Called by :   ML000                *
.*        Read Variable File for Record                                   *
.*                  Returns : EXIT (0=nothing entered, 1=valid entry)     *
.**************************************************************************
STYP0000 
.
STYP0100  MOVE      SP3,DIBVRTYP                 * clear key variables
          MOVE      ZERO,IBVRSTYP
          MOVE      SP5,DIBVRFNM
          MOVE      ZERO,IBVRFNUM
          COMPARE   TWENTY4,ROW                  * in help mode ?
          GOTO      STYP0110 IF NOT EQUAL
          DISPLAY   *P1:24,"Stationery Type         : ",*EL;
.
STYP0110  DISPLAY   *P27:ROW,UNDLN3,*EL;
          KEYIN     *P27:ROW,*V2LON,DIBVRTYP,*EL * read type
          MOVE      DIBVRTYP,IBVRSTYP            * convert to number
          PACK      DIBVRTYP,DIBVRTYP,SP3        * pad out with blanks
.
          MATCH     SP3,DIBVRTYP
          GOTO      STYP9500 IF EQUAL            * exit if blank
.
          MATCH     "?",DIBVRTYP
          GOTO      STYP5000 IF EQUAL            * user needs help
.
          MOVE      IBVRSTYP,DIBVRTYP            * make right justified number
          MOVE      IBVRSTYP,TYPENUM             * set TYPENUM for TYPE0000
          CALL      TYPE0000                     * get TYPENAME
          BRANCH    OVRCD,STYP8000               * illegal type entered ?
.
          COMPARE   FOUR,MNUOPT
          GOTO      STYP9400 IF NOT EQUAL
.
.-----  validation for the copy facility  -----
.
          COMPARE   FORTY,IBVRSTYP
          GOTO      STYP9000 IF LESS
.
          COMPARE   TEN,CROW
          GOTO      STYP9400 IF NOT EQUAL
.
          COMPARE   IBVRSTYP,TEMPTYPE
          GOTO      STYP9200 IF EQUAL
          GOTO      STYP9400                     * valid type entered
.
.--- user help for stationery type ----
.
STYP5000  CALL      TYPEDS
          MOVE      TWENTY4,ROW
          GOTO      STYP0100
.
.
.--- illegal type entered ----
.
STYP8000  DISPLAY   *P1:24,*B,"Type Does Not Exist. ";
          CALL      HITENTER
          GOTO      STYP0100
.
.----  errors for the copy facility ----
.
STYP9000  DISPLAY   *P1:24,*B,"You cannot copy this stationery. ";
          CALL      HITENTER
          GOTO      STYP0100
.
STYP9200  DISPLAY   *P1:24,*B,"You cannot copy to the same stationery type. ";
          CALL      HITENTER
          GOTO      STYP0100
.
.
STYP9400  MOVE      ZERO,EXIT                    * valid key entered
          GOTO      STYP9999
.
STYP9500  MOVE      ONE,EXIT                     * nothing entered
.
STYP9999  RETURN
.
.***********************************************************************
.*                           SSTP0000                                  *
.*                                                                     *
.*                 Input 2nd stationery code (copy screen)             *
.*                                                                     *
.***********************************************************************
.
SSTP0000
           MOVE     ZERO,EXIT
           MOVE     IBVRSTYP,TEMPTYPE
           MOVE     TYPENAME,TEMPDESC
.
           COMPARE  TWENTY4,ROW
           GOTO     SSTP0500 IF NOT EQUAL
           CALL     DCSC0000
.
SSTP0500   MOVE     SIX,ROW
           DISPLAY  *P27:ROW,*V2LON,TEMPTYPE,*HOFF:
                    *P34:ROW,TEMPDESC
.
.
SSTP1000
           MOVE     TEN,CROW
           MOVE     TEN,ROW
           CALL     STYP0000
           BRANCH   EXIT,SSTP9999
.
           COMPARE  TWENTY4,ROW
           GOTO     SSTP2000 IF NOT EQUAL
           CALL     DCSC0000
           DISPLAY  *P27:6,*V2LON,TEMPTYPE,*HOFF:
                    *P34:6,TEMPDESC
.
SSTP2000   MOVE     TEN,ROW
           DISPLAY  *P27:ROW,*V2LON,IBVRSTYP,*HOFF:
                    *P34:ROW,TYPENAME
.    
           COMPARE  FORTY,IBVRSTYP
           GOTO     SSTP8000 IF LESS
           GOTO     SSTP9999
.
SSTP8000  
           DISPLAY  *P1:24,*EL,*B,"You cannot copy this stationery's variables. ";
           CALL     HITENTER
           MOVE     ONE,EXIT
           DISPLAY  *P1:24,*EL   
           GOTO     SSTP1000
.
SSTP9999   RETURN
.**************************************************************************
.*        FNUM0000                     Called by :   ML000                *
.*        Read Variable File for Record                                   *
.*                  Returns : EXIT (0=nothing entered, 1=valid entry)     *
.**************************************************************************
FNUM0000  MOVE      TWENTY4,ROW
          CALL      RDIS0000                     * redisplay screen
          MOVE      FIVE,ROW
.
FNUM1000  MOVE      SP5,DIBVRFNM                 * clear variables
          MOVE      ZERO,IBVRFNUM
.
          DISPLAY   *P27:ROW,UNDLN3,*EL;
          KEYIN     *P27:ROW,*V2LON,DIBVRFNM,*EL * read field number
          MOVE      DIBVRFNM,IBVRFNUM            * convert to number
          PACK      DIBVRFNM,DIBVRFNM,SP5        * pad out with blanks
.
          MATCH     SP5,DIBVRFNM
          CALL      SCR0000 IF EQUAL             * redisplay if necessary
          MATCH     SP5,DIBVRFNM
          GOTO      FNUM9500 IF EQUAL            * exit if blank
.
          COMPARE   IBVRFNUM,ZERO
          GOTO      FNUM6000 IF NOT LESS         * number less than 0 entered
.
          DISPLAY   *P27:ROW,*V2LON,IBVRFNUM,*EL * display field number
          MOVE      IBVRFNUM,DIBVRFNM            * make right justified number
          PACK      KEY8,DIBVRTYP,DIBVRFNM,SP3
          CALL      RDIBVAR2
.
          BRANCH    OVRCD,FNUM9000               * record exists ?
          MOVE      IBVRDESC,ORIGDESC            * save original description
          GOTO      FNUM8000                     * record does exist
.
.--- illegal field number entered ----
.
FNUM6000  DISPLAY   *P1:24,*B:
                    "Field Number Must Be A Number Greater Than Zero. ";
          CALL      HITENTER
          GOTO      FNUM1000
.
.--- check if record key already on file ----
.
FNUM8000  COMPARE   ONE,MNUOPT
          GOTO      FNUM9400 IF NOT EQUAL        * in input mode ?
          DISPLAY   *P1:24,*B,"Record Already Exists. ";
          CALL      HITENTER
          MOVE      SP30,IBVRDESC
          CALL      RDIS0000                     * refresh screen if necessary
          GOTO      FNUM1000
.
.--- check if record key not on file ----
.
FNUM9000  MOVE      SP30,IBVRDESC
          MOVE      ZERO,IBVRFLEN
          MOVE      SP30,IBVRDESC
          MOVE      SP30,IBVRDESC
          COMPARE   ONE,MNUOPT
          GOTO      FNUM9400 IF EQUAL            * in input mode ?
          DISPLAY   *P1:24,*B,"Record Not On File. ";
          CALL      HITENTER
          CALL      RDIS0000                     * refresh screen if necessary
          GOTO      FNUM1000
.
FNUM9400  MOVE      ZERO,EXIT                    * valid key entered
          CALL      RDIS0000                     * refresh screen if necessary
          GOTO      FNUM9999
.
FNUM9500  MOVE      ONE,EXIT                     * nothing entered
.
FNUM9999  RETURN
.**************************************************************************
.*        ACPT0000                     Called by :   ML000                *
.*        Accept initial values                                           *
.**************************************************************************
ACPT0000  CALL      FDES0000                     * keyin field description
          CALL      FLEN0000                     * keyin field length
.
ACPT9999  RETURN
.**************************************************************************
.*        SEL0000                      Called by :   ML000                *
.*        Select field, modify or post                                    *
.*                  Requires : EXIT (0=continue, 1=cancel)                *
.**************************************************************************
SEL0000   CALL      MAINQST
          COMPARE   ZERO,CCITEM                  * ok to post ?
          GOTO      SEL9000 IF EQUAL
          COMPARE   "-1",CCITEM                  * cancel ?
          GOTO      SEL9500 IF EQUAL
          BRANCH    CCITEM,SEL1000,SEL2000       * legal item selected ?
.
          BEEP    
          GOTO      SEL0000
.
SEL1000   CALL      FDES0000                     * keyin field description
          GOTO      SEL0000
.
SEL2000   CALL      FLEN0000                     * keyin field length
          GOTO      SEL0000
.
SEL9000   MOVE      ZERO,EXIT                    * post
          GOTO      SEL9999
.
SEL9500   MOVE      ONE,EXIT                     * cancel
.
SEL9999   RETURN
.**************************************************************************
.*        DISP0000                     Called by :   ML000                *
.*        Display data from the variable file                             *
.**************************************************************************
DISP0000  DISPLAY   *P27:7,*V2LON,IBVRDESC,*P27:8,IBVRFLEN;
.
DISP9999  RETURN
.**************************************************************************
.*        RDIS0000                     Called by : STYP000                *
.*        Refresh screen if necessary                                     *
.**************************************************************************
RDIS0000  COMPARE   TWENTY4,ROW                  * refresh screen ?
          CALL      SCR0000 IF EQUAL             * display screen
          DISPLAY   *P27:4,*V2LON,DIBVRTYP,*HOFF,SP2,TYPENAME
.
RDIS9999  RETURN
.**************************************************************************
.*        FDES0000                     Called by : ACPT0000, SEL0000      *
.*        Keyin Field Description                                         *
.**************************************************************************
FDES0000  MATCH     IBVRDESC,SP30                * no current description
          GOTO      FDES0200 IF NOT EQUAL
.
          DISPLAY   *P27:7,UNDLN30,*EL;
          GOTO      FDES0300
.
FDES0200  DISPLAY   *P27:7,*V2LON,IBVRDESC,*EL;
.
FDES0300  KEYIN     *P27:7,*V2LON,DUMYFDES,*EL;
          PACK      DUMYFDES,DUMYFDES,SP30
          MATCH     SP30,DUMYFDES
          GOTO      FDES8000 IF EQUAL            * nothing entered
.
          PACK      KEY33,DIBVRTYP,DUMYFDES,SP30
          CALL      RAIBVAR1                     * check if description on file
          BRANCH    OVRCD,FDES9000
.
.---- existing description entered ----
.
          DISPLAY   *P1:24,*B,"Description Already Exists - ";
          CALL      HITENTER
          GOTO      FDES0000
.
.---- no description entered ----
.
FDES8000  MATCH     SP30,IBVRDESC
          GOTO      FDES9999 IF NOT EQUAL        * in update mode ?
          DISPLAY   *P1:24,*B,"A Description Must Be Entered - ";
          CALL      HITENTER
          GOTO      FDES0000
.
FDES9000  MOVE      DUMYFDES,IBVRDESC
.
FDES9999  DISPLAY   *P27:7,*V2LON,IBVRDESC,*EL;
          RETURN
.**************************************************************************
.*        FLEN0000                     Called by : ACPT0000, SEL0000      *
.*        Keyin Field Description                                         *
.**************************************************************************
FLEN0000  COMPARE   IBVRFLEN,ZERO                * no current field number
          GOTO      FLEN0200 IF NOT EQUAL
.
          DISPLAY   *P27:8,UNDLN3,*EL;
          GOTO      FLEN0300
.
FLEN0200  DISPLAY   *P27:8,*V2LON,IBVRFLEN,*EL;
.
FLEN0300  KEYIN     *P27:8,*V2LON,DUMYFLEN,*EL;
          COMPARE   ZERO,DUMYFLEN
          GOTO      FLEN7000 IF LESS             * negative entered
          GOTO      FLEN8000 IF EQUAL            * nothing entered
          GOTO      FLEN9000                     * legal entry
.
.---- existing description entered ----
.
FLEN7000  DISPLAY   *P1:24,*B,"Field Length Must Be Greater Than Zero. ";
          CALL      HITENTER
          GOTO      FLEN0000
.
.---- no description entered ----
.
FLEN8000  COMPARE   IBVRFLEN,ZERO
          GOTO      FLEN9999 IF NOT EQUAL        * in update mode ?
          DISPLAY   *P1:24,*B,"A Field Length Must Be Entered. ";
          CALL      HITENTER
          GOTO      FLEN0000
.
FLEN9000  MOVE      DUMYFLEN,IBVRFLEN
.
FLEN9999  DISPLAY   *P27:8,*V2LON,IBVRFLEN
          RETURN
.**************************************************************************
.*        TYPE0000                     Called by : STYP0000, TYPEDS       *
.*        Display chosen type                                             *
.*                  Requirements : TYPENUM for type no. to display        *
.*                  Returns      : OVRCD (1=no such type, 0=ok)           *
.*                                 TYPENAME (stationery type name)        *
.**************************************************************************
TYPE0000  MOVE      SP30,TYPENAME
          MOVE      ZERO,OVRCD
          COMPARE   ONE,TYPENUM
          GOTO      TYPE1000 IF LESS
.
          COMPARE   TYPENUM,NSORTNUM
          GOTO      TYPE1000 IF LESS
.
          COMPARE   FORTY,TYPENUM
          GOTO      TYPE0500 IF NOT LESS
.
          MOVE      IBASTYP0,TYPENAME
          LOAD      TYPENAME,TYPENUM,IBASTYP1,IBASTYP2,IBASTYP3,IBASTYP4:
                                     IBASTYP5,IBASTYP6,IBASTYP7,IBASTYP8:
                                     IBASTYP9,IBASTP10,IBASTP11,IBASTP12:
                                     IBASTP13,IBASTP14,IBASTP15,IBASTP16:
                                     IBASTP17,IBASTP18
          GOTO      TYPE9999
.
TYPE0500  MOVE      TYPENUM,NSORTYPE
          SUB       FORTY,NSORTYPE
          CALL      NSMORDES
          BRANCH    OVRCD,TYPE9999
          MOVE      NSORDESC,TYPENAME
          GOTO      TYPE9999
.
TYPE1000  MOVE      ONE,OVRCD                    * illegal type
.
TYPE9999  RETURN
.**************************************************************************
.*        TYPEDS                       Called by : STYP0000               *
.*        User help for stationery type                                   *
.**************************************************************************
TYPEDS   
          SUB        FORTY,NSORTNUM
          CALL       IBASTPDS
          ADD        FORTY,NSORTNUM
.
TYPES999  RETURN
.**************************************************************************
.*                              WRT0000                                   *
.*                   Write Data to the Operating Room File                *
.**************************************************************************
WRT0000   DISPLAY   *P1:24,"Writing to Variable File - Please Wait";
.
          PACK      KEY33,DIBVRTYP,IBVRDESC
          CALL      WRIBVAR1
          DISPLAY   *P1:24,*EL;
.
WRT9999   RETURN
.**************************************************************************
.*                              UPD0000                                   *
.*                   Update Data in the Operating Room File               *
.**************************************************************************
UPD0000   DISPLAY   *P1:24,"Updating Variable File - Please Wait";
.
          PACK      KEY33,DIBVRTYP,ORIGDESC
          CALL      RAIBVAR1                   * go to correct record for key 1
          CALL      UPIBVAR1
          DISPLAY   *P1:24,*EL;
.
UPD9999   RETURN
.**************************************************************************
.*                              DEL0000                                   *
.*               Delete a Record from the Operating Room File             *
.**************************************************************************
DEL0000   DISPLAY   *P1:24,"Deleting Variable File Record - Please Wait";
.
          PACK      KEY33,DIBVRTYP,ORIGDESC
          CALL      RAIBVAR1                   * go to correct record for key 1
          CALL      DEIBVAR1
          DISPLAY   *P1:24,*EL;
.
DEL9999   RETURN
.**************************************************************************
.*                             COPY0000                                   *
.**************************************************************************
.
COPY0000  DISPLAY   *P1:24,*EL,*P10:24,"Field No.:";
          MOVE      IBVRSTYP,TMPTYPE2
          PACK      KEY8,TEMPTYPE,SP3
COPY1000
          CALL      RSIBVAR2
          CALL      RKIBVAR2
          BRANCH    OVRCD,COPY9999
.
          COMPARE   IBVRSTYP,TEMPTYPE
          GOTO      COPY9999 IF NOT EQUAL
.
          COMPARE   TWOHUND1,IBVRFNUM
          GOTO      COPY9999 IF NOT LESS
.
          DISPLAY   *P22:24,*V2LON,IBVRFNUM;
.
          MOVE      IBVRDESC,SAVEDESC
          MOVE      IBVRFLEN,SAVEFLEN
.
          PACK      KEY8,TMPTYPE2,IBVRFNUM
          CALL      RDIBVAR2
          BRANCH    OVRCD,COPY3000
.
.-----  update ----
.
          PACK      KEY33,IBVRSTYP,IBVRDESC
          CALL      RDIBVAR1
.
          MOVE      SAVEDESC,IBVRDESC
          MOVE      SAVEFLEN,IBVRFLEN
.
          CALL      UPIBVAR1
.
          PACK      KEY8,TEMPTYPE,IBVRFNUM
          GOTO      COPY1000
.
.-----  write  ----
.
COPY3000
          MOVE      TMPTYPE2,IBVRSTYP
.
          PACK      KEY33,IBVRSTYP,IBVRDESC
          CALL      WRIBVAR1
.
          PACK      KEY8,TEMPTYPE,IBVRFNUM
          GOTO      COPY1000
.
COPY9999  RETURN
. 
.********************************************************************** 
.*              I/O INCLUDES FOR FILES AND GENERAL ROUTINES           *
.**********************************************************************
.
          INC       IBASTPDS
          INC       NSMORTYP
          INC       STD001IO
          INC       IBAVARIO/INC
