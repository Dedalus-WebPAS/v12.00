.******************************************************************************
.*                                                                            *
.*                        P R O G R A M   S U M M A R Y                       *
.*                        -------------   -------------                       *
.*                                                                            *
.*     PROGRAM NAME:    IBAPRI33                                              *
.*                                                                            *
.*     FUNCTION:        TAKE UP OUTSTANDING DEBTS UPLOAD FROM A TXT FILE      *
.*                                                                            *
.*     DATE WRITTEN:    22/08/2014                                            *
.*                                                                            *
.*     AUTHOR:          J.Tan                                                 *
.*                                                                            *
.*     NOTE        :    For ORACLE database you will need to build Claim,     *
.*                      Doctor and Medical Practice mapping (dat/idx file)    *
.*                                                                            *
.*     MODIFICATIONS:                                                         *
.*        V10.13.01 07/08/2018  Richa Phogat    TSK 0848506                   *
.*                  1) Extended TMPSDOC,TMPOLDDC,TMPNEWDC from 6 to 10 chars  *
.*                  2) Changed KEY23 to KEY27 for RAPRHR1, WRPRHR1            *
.*                  3) Changed Keylength for MAPDOCA1 from 6 to 10            *
.*        V10.11.01 02/08/2017  J.Tan           TSK 0837619                   *
.*                  Added CLPRIDTR,CLPRIHRE - clear pridtraf,prihreaf fields  *
.*        V10.10.01 06/05/2017  J.Tan          TSK 0834205                    *
.*                  Mod to set PRINPEND                                       *
.*        V10.09.01 15/02/2017  Peter Vela     TSK 0833322                    *
.*                  Fixed pack of KEY27 of prihdbaf in WRHDB000               *
.*        V10.08.01 18/04/2016  Peter Vela     CAR 0294177                    *
.*                  Changed read to prihdb to KEY27                           *
.*        V10.07.02 21/12/2015  J.Tan          CAR 0303942                    *
.*                  Mods to set payment code                                  *
.*        V10.07.01 13/10/2015  J.Tan          CAR 310329                     *
.*                  Mods to set PRDTEFFD - Date item assigned to Fees Invoiced*
.*                                                                            *
.******************************************************************************
.
          INC       STD001FD
          INC       IBAPRNFD/INC
          INC       PATGSRFD/INC
.
          INC       PATCOMM/INC
          INC       PATCODFD/INC
          INC       PMSHCPFD/INC
          INC       PATDRGFD/INC
          INC       PATMA1FD/INC
.
          INC       PATCONFD/INC
          INC       PRICONFD/INC
          INC       PRIDTRFD/INC
          INC       PRIFIGFD/INC
          INC       PRIFINFD/INC
          INC       PRIHDBFD/INC
          INC       PRIHREFD/INC
          INC       PRIHTRFD/INC
          INC       PRIITMFD/INC
          INC       PRIINVFD/INC
          INC       PRIPRAFD/INC
.
.
.      EXTRA VARIABLES
.
BJDAY     FORM      3
CJDAY     FORM      3
CHG       FORM      1
CLCODE    INIT      "CL"
CURRDATE  DIM       8
CMDLINE   DIM       60
COUNTER   FORM      1
ERRDESC   DIM       60
ERRARRAY  DIM       60[9]
ERRFLAG   FORM      1
ERRCOUNT  FORM      1
.
FSTWORK   FORM      12.2
FSTDATE   DIM       8
FSTAMNT   FORM     12.2
FGSTFLAG  FORM      1
FNAMET    DIM       8
FORM8     FORM      8
FORM9P2   FORM      9.2
FORM12P2  FORM      12.2
.
STOFYEAR  DIM       8
FIELD     FORM      1
UNIQUEID  FORM      8
USERID    DIM       10
.
FNDFLAG   FORM      1
FRSTGNAM  DIM       40
FULLGNAM  DIM       80
CLMFLAG   FORM      1
CGIFLAG   FORM      1
DOCFLAG   FORM      1
MPRFLAG   FORM      1
.
DIM15     DIM       15
DIM8      DIM       8
FILEPATH  DIM       60
SAVEPATH  DIM       60
SCNDGNAM  DIM       40
CLMMPATH  DIM       60
DOCTPATH  DIM       60
MPRAPATH  DIM       60
CAGIPATH  DIM       60
REMOVEZ   FORM      1
. 
NINE8     FORM      "99999999"                   * for PRIITMDS
IFLAG     FORM      2                            * for KYPRIITM/PRIITMDS
ITEMNUMB  DIM       9                            * for KYPRIITM
SUBITEM   DIM       3                            * for KYPRIITM
ITMDESC   DIM       30                           * for PRIITMDS
ITMFLAG   FORM      1                            * for PRIITMDS
.
PATHFLAG  FORM      1                            * for PRIITMDS
PDOCNAM   DIM       35                           * for PRIMPDDS
SERDATE   DIM       8                            * for PRIITMDS
SHTDESC   DIM       23                           * for PRIITMDS
.
RDSCOUNT  FORM      8
ADDCOUNT  FORM      8
IURCOUNT  FORM      8
HEACOUNT  FORM      8
IHGCOUNT  FORM      8
INVCOUNT  FORM      8
CLMCOUNT  FORM      8
DOCCOUNT  FORM      8
MPRCOUNT  FORM      8
INDCOUNT  FORM      8
.
SAVCHG    DIM       9
SEC       FORM      2
SP14      INIT      "              "
SP16      INIT      "                "
SP36      INIT      "                                    "
SP40      INIT      "                                        "
SP50      INIT      "                             ":
                    "                     "
.
STADMNO   FORM      8
.
VALDFLAG  FORM      1             * Validation check flag
.                                     0 = writing data to database
.                                     1 = only validating import data file
.
OUTDFILE  FILE      ASCII, FIXED=256
.
.Name     Type   Length   Start   Description
.----     ----   ------   -----   -----------
.TMPURNO   DIM        8        1   U/R Number
TMPCLMC   DIM        3        9   Claim Code
TMPADAT   DIM        8       12   Accident Date
TMPINVN   DIM        8       20   Invoice Number
TMPINVD   DIM        8       28   Invoice Date
TMPINVM   FORM      12.2     36   Invoice Amount
TMPMPRA   DIM        6       51   Medical Practice
TMPSDOC   DIM        10      57   Service Doctor
TMPPIND   DIM        3       67   Patient Indicator (Cat GI)
.EOR                70
.
.
TMPCLMAF  FILE      ASCII, FIXED=256
MAPCLMA1  IFILE     SQL, FIXED=7, KEY="UC1-3"
.
.Name     Type   Length   Start   Description
.----     ----   ------   -----   -----------
TMPOLDCL  DIM        3        1   Old Claim code
TMPNEWCL  DIM        3        4   New Claim code
.EOR                          7
.
TMPDOCAF  FILE      ASCII, FIXED=256
MAPDOCA1  IFILE     SQL, FIXED=21, KEY="UC1-10"
.
.Name     Type   Length   Start   Description
.----     ----   ------   -----   -----------
TMPOLDDC  DIM        10       1   Old Doctor code
TMPNEWDC  DIM        10      11   New Doctor code
.EOR                         21
.
TMPMPRAF  FILE      ASCII, FIXED=256
MAPMPRA1  IFILE     SQL, FIXED=13, KEY="UC1-6"
.
.Name     Type   Length   Start   Description
.----     ----   ------   -----   -----------
TMPOLDMP  DIM        6        1   Old Medical Practice code
TMPNEWMP  DIM        6        7   New Medical Practice code
.EOR                         13

TMPCGIAF  FILE      ASCII, FIXED=256
MAPCGIA1  IFILE     SQL, FIXED=7, KEY="UC1-3"
.
.Name     Type   Length   Start   Description
.----     ----   ------   -----   -----------
TMPOLDGI  DIM        3        1   Old Patient indicator code
TMPNEWGI  DIM        3        4   New Patient indicator code
.EOR                          7
.
XDAY1     DIM       2
XMON1     DIM       2
XYEAR1    DIM       2
XCENT1    DIM       2
.
PRGID     INIT      "IBAPRI33"
PRGNAM    INIT      "Take Up Outstanding Debts"
VERSION   INIT      "V12.00.00"
+
.         START OF PROGRAM
.
MAIN0000  CALL      INIT0000                      * init and open files
          BRANCH    EXIT,MAIN9999                 * init failure
.
          CALL      SRTF0000
          BRANCH    EXIT,MAIN9999                 * init failure
.
MAIN1000  CALL      GETT0000                     * get item type
          BRANCH    EXIT,MAIN9999                * nothing input - finish
.
          CALL      GETI0000                     * get item code
          BRANCH    EXIT,MAIN1000                * nothing input
.
          CALL      ASKQ0000               * validation only?
          CALL      REMZ0000               * remove leading zero of U/R
.
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN2000,MAIN1000,MAIN9999 * Yes, no, cancel
.
MAIN2000  CALL      DSCR0000
.
          CALL      PROC0000                      * processing
.
MAIN9999  CHAIN     PGM
          STOP
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P56:24,"Opening ibacodef";
          OPEN      IBACODE1,"ibacodef"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
.
          DISPLAY   *P64:24,"pridtraf";
          OPEN      PRIDTRA1,"pridtraf"
          OPEN      PRIDTRA4,"pridtraf"
.
          DISPLAY   *P64:24,"prifinsf";
          OPEN      PRIFINS1,"prifinsf"
          OPEN      PRIFIGA1,"prifigaf"
.
          DISPLAY   *P64:24,"prihdbtf";
          OPEN      PRIHDBT1,"prihdbtf"
          OPEN      PRIHDBT2,"prihdbtf"
.
          DISPLAY   *P64:24,"prihreff";
          OPEN      PRIHREF1,"prihreff"
          OPEN      PRIHREF2,"prihreff"
.
          DISPLAY   *P64:24,"prihtraf";
          OPEN      PRIHTRA1,"prihtraf"
          OPEN      PRIHTRA4,"prihtraf"
.
          DISPLAY   *P64:24,"priinvof";
          OPEN      PRIINVO1,"priinvof"
.
          DISPLAY   *P64:24,"priitemf";
          OPEN      PRIITEM1,"priitemf"
          OPEN      PRIITEM2,"priitemf"
.
          DISPLAY   *P64:24,"pripracf";
          OPEN      PRIPRAC1,"pripracf"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P64:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          OPEN      PATDRGA1,"patdrgaf" 
          OPEN      PATDRGA2,"patdrgaf" * Open the date range file
.
          READ      CONTROLF,THIRTY3;*43,PRCNINVN
.
.         Now work out the start of the current financial year
.
          PACK      CPTDATE,CCC,CYY,CMM,CDD
          REP       " 0",CPTDATE
          CALL      GPERD
          IF        EXIT = 1
            DISPLAY   *P1:24,*EL,*B,"Current Date not on Period File. ";
            CALL      HITENTER
            GOTO      INIT9000
          ENDIF
.
          MOVE      "01",DRGNUM              * the first period of year
          PACK      KEY6,DRGYR,DRGNUM
          CALL      RDDRGA1
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Start of Year not on Period File. ";
            CALL      HITENTER
            GOTO      INIT9000
          ENDIF
.
          MOVE      DRGFDTE,STOFYEAR         * start of this financial year
          MOVE      ZERO,CPAGENO
          CLOCK     TIME,CTIMEIS             * start time for input
          MOVE      "99",CLNO
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
          PACK      USERID,PASSCODE,SP70
          MOVE      "priosdeb",FNAMET
          MOVE      ZERO,EXIT
          GOTO      INIT9999
.
INIT9000  MOVE      ONE,EXIT
INIT9999  RETURN
+
.********************************************************************
.*                  ASKQ0000                                        *
.* Returns: VALDFLAG  - validation flag                             *
.*                       0 = normal mode                            *
.*                       1 = validation only mode                   *
.********************************************************************
ASKQ0000  MOVE      ANSY,ANS
          KEYIN     *P1:17,*EF,"Validation only (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") ?":
                    *P25:17,*V2LON,*RV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS                     * Y input ?
          IF        @EQUAL
            DISPLAY   *P25:17,*V2LON,DYES,*HOFF:
                      *P40:17,"(No data will be uploaded)"
            MOVE      ONE,VALDFLAG               * yes
            GOTO      ASKQ9999
          ENDIF
.
          MATCH     ANSN,ANS                     * N input ?
          IF        @EQUAL
            DISPLAY   *P25:17,*V2LON,DNO,*HOFF:
                      *P40:17,"(Data will be uploaded)"
            MOVE      ZERO,VALDFLAG              * yes
            GOTO      ASKQ9999
          ENDIF
          GOTO      ASKQ0000                     * invalid input

ASKQ9999  RETURN
+
.********************************************************************
.*                          DSCR0000                                *
.*  Processing screen display                                       *
.********************************************************************
DSCR0000  DISPLAY   *P1:4,*EF
          IF        VALDFLAG = 1
            DISPLAY   *P1:6,"Validation mode  (No data will be uploaded)"
          ELSE
            DISPLAY   *P1:6,"Normal mode  (Data will be uploaded)"
          ENDIF
          DISPLAY   *P1:23,*EF,"Upload will commence."
.
          CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
          DISPLAY   *P1:13,*EF,"Processing ",*V2LON,FILEPATH,*HOFF:
                    *P1:15,"Started    : ",*V2LON,CTIMEIS,*HOFF:
                    *P1:17,"U/R Number : ":
                    *P1:18,"Surname    : ":
                    *P1:19,"Records    : ":
                    *P1:24,"Processing ",*V2LON,FNAMET,*HOFF;
.
          MOVE      ZERO,RDSCOUNT         * initialise records read
          MOVE      ZERO,ADDCOUNT         * initialise added records
          MOVE      ZERO,IURCOUNT         * initialise invalid U/R no count
          MOVE      ZERO,HEACOUNT         * initialise header record count
          MOVE      ZERO,IHGCOUNT         * initialise Invoice no too high count
.
          MOVE      ZERO,INVCOUNT         * initialise existing inv.record count
          MOVE      ZERO,CLMCOUNT         * initialise inv.claim code rec.count
          MOVE      ZERO,DOCCOUNT         * initialise doctor code rec.count
          MOVE      ZERO,MPRCOUNT         * initialise medical prac.rec.count
          MOVE      ZERO,INDCOUNT         * initialise patient ind. rec.count
.
DSCR9999  RETURN
+
.********************************************************************
.*                          PROC0000                                *
.*  Procesing outstanding debts from the outstanding debtors file   *
.********************************************************************
PROC0000  MOVE      ZERO,ERRFLAG
          MOVE      ZERO,UNIQUEID
          OPEN      OUTDFILE,FILEPATH
.
PROC1000  CALL      RDINFILE
          BRANCH    OVRCD,PROC9000
.
          ADD       ONE,RDSCOUNT                 * increment records read
.
          MOVE      ZERO,IDAY
          MOVE      ZERO,IMON
          MOVE      ZERO,IYEAR
          MOVE      ZERO,ICENT
.
          MOVE      ZERO,ERRFLAG
          MOVE      ZERO,ERRCOUNT
          MOVE      ONE,F1
          WHILE     F1<=8
            MOVE      SP70,ERRARRAY[F1]
            ADD       ONE,F1
          DO
.
          CALL      CMAP0000
          CALL      FMUR0000                * format U/R number
.
          MOVE      TMPURNO,KEY8
          CALL      RDMAST1
          IF        OVRCD=1
            UNPACK      SP70,PGNAME,PSNAME
            CLEAR       ERRDESC
            APPEND      "Invalid U/R No.: ",ERRDESC
            APPEND      TMPURNO,ERRDESC
            APPEND      SP70,ERRDESC
            RESET       ERRDESC
            CALL        LERR0000
            ADD         ONE,IURCOUNT
          ENDIF
.
          IF        (RDSCOUNT%1000)=0 | RDSCOUNT = 1
            DISPLAY   *P14:17,*V2LON,TMPURNO:
                      *P14:18,PSNAME:
                      *P14:19,RDSCOUNT;
          ENDIF
.
.         MOVE      TMPURNO,KEY8
.         CALL      GDET0000                 * Get patient details
.
          CALL      VLDF0000                 * validation fields
.
.         if Error found, print data with error message
.         if No Error found, print data only for Normal mode (not validating)
.
          BRANCH    ERRFLAG,PROC8200         * Found an error
.
          BRANCH    VALDFLAG,PROC1000        * Validation only - no error
.
.         Make sure the Unique id not already exists
.
PROC2000  ADD       ONE,UNIQUEID
          COMPARE   "99999999",UNIQUEID
          GOTO      PROC8200 IF NOT LESS
.
          MOVE      UNIQUEID,KEY8
          CALL      RDPRHD2
          IF        OVRCD=0
            GOTO      PROC2000
          ENDIF
.
          CALL      WRHDB000                * Write to holding
          CALL      WRHRE000                * Write to holding
          CALL      WRDTR000                * Write Debtors transaction
          CALL      WRINV000                * Write invoice record
          CALL      UPFIN000                * Update financial summary file
.
          ADD       ONE,ADDCOUNT
.
PROC8200  CALL      PRTD000
          GOTO      PROC1000
.
PROC9000  CALL      PRTT0000
PROC9999  RETURN
+
.******************************************************************************
.         Fields Validation
.******************************************************************************
VLDF0000  CALL      CMAX0000                 * Check for Max Inv.
.
.         check with Claim mapping file
.
          PACK      KEY5,ANSC,ANSL,TMPCLMC,SP70
          CALL      RDCODE1
          COMPARE   ZERO,OVRCD
          GOTO      VLDF1000 IF EQUAL     * found a valid mapping claim
.
          CLEAR     ERRDESC
          APPEND    "Invalid Claim code: ",ERRDESC
          APPEND     KEY3,ERRDESC
          APPEND    SP70,ERRDESC
          RESET     ERRDESC
          CALL      LERR0000
          ADD       ONE,CLMCOUNT
.
.         check with Medical practice mapping file
.
VLDF1000  PACK      KEY6,TMPMPRA
          CALL      RDPRPR1
          COMPARE   ZERO,OVRCD
          GOTO      VLDF2000 IF EQUAL     * found a valid mapping medical prac.
.
          CLEAR     ERRDESC
          APPEND    "Invalid Medical Practice: ",ERRDESC
          APPEND    KEY6,ERRDESC
          APPEND    SP70,ERRDESC
          RESET     ERRDESC
          CALL      LERR0000
          ADD       ONE,MPRCOUNT
.
.         check with doctor mapping file
.
VLDF2000  PACK      KEY10,TMPSDOC,SP70
          CALL      RDPMHCP1
          COMPARE   ZERO,OVRCD
          GOTO      VLDF3000 IF EQUAL     * found a valid mapping doctor
.
          CLEAR     ERRDESC
          APPEND    "Invalid Doctor code: ",ERRDESC
          APPEND    KEY10,ERRDESC
          APPEND    SP70,ERRDESC
          RESET     ERRDESC
          CALL      LERR0000
          ADD       ONE,DOCCOUNT
.
VLDF3000  MOVE      "GI",KEY2
          PACK      KEY5,KEY2,TMPPIND
          CALL      RDCODE1
          COMPARE   ZERO,OVRCD
          GOTO      VLDF9999 IF EQUAL
.
          CLEAR     ERRDESC
          APPEND    "Invalid Patient Indicator: ",ERRDESC
          APPEND    TMPPIND,ERRDESC
          APPEND    SP70,ERRDESC
          RESET     ERRDESC
          CALL      LERR0000
          ADD       ONE,INDCOUNT
.
VLDF9999  RETURN
+
.********************************************************************
.         CMAX0000                                                  *
.         Check for Maximum Invoice number                          *
.********************************************************************
CMAX0000  MOVE      ZERO,FORM8
          MOVE      TMPINVN,FORM8
          COMPARE   PRCNINVN,FORM8
          GOTO      CMAX2000 IF LESS
.
          CLEAR     ERRDESC
          APPEND    "Invoice Number Too High: ",ERRDESC
          APPEND    TMPINVN,ERRDESC
          APPEND    SP70,ERRDESC
          RESET     ERRDESC
          CALL      LERR0000
          ADD       ONE,IHGCOUNT
.
CMAX2000  MOVE      TMPINVN,KEY8
          CALL      RDPRIN1
          IF        OVRCD=0
            UNPACK      PRINDATE,CCENT,CYEAR,CMON,CDAY
            CALL        PACDATE
            CLEAR       ERRDESC
            APPEND      "Invoice No.",ERRDESC
            APPEND      PRINNUMB,ERRDESC
            APPEND      " already exists ",ERRDESC
            APPEND      "with Inv.date:",ERRDESC
            APPEND      CPCDATE,ERRDESC
            APPEND      SP70,ERRDESC
            RESET       ERRDESC
            CALL        LERR0000
            ADD         ONE,INVCOUNT
          ENDIF
.
CMAX9999  RETURN
+
.******************************************************************************
.         Get patient details
.******************************************************************************
GDET0000  MOVE      ONE,PRHDSCAN
          PACK      KEY27,TMPURNO,PRHDSCAN,TMPCLMC,TMPADAT,PFUNDH
          CALL      RDPRHD1
          IF        OVRCD=0
            CLEAR       ERRDESC
            APPEND      "Header record exists U/R: ",ERRDESC
            APPEND      TMPURNO,ERRDESC
            APPEND      " Claim: ",ERRDESC
            APPEND      TMPCLMC,ERRDESC
            APPEND      " Acc.Date: ",ERRDESC
            APPEND      TMPADAT,ERRDESC
            APPEND      SP70,ERRDESC
            RESET       ERRDESC
            CALL        LERR0000
            ADD         ONE,HEACOUNT
          ENDIF
.
GDET9999  RETURN
+
.******************************************************************************
.*                           FMUR0000                                         *
.*      Format the U/R by removing leading zeroes and right justifying        *
.******************************************************************************
FMUR0000  MATCH     SP70,TMPURNO
          GOTO      FMUR0100 IF NOT EQUAL
.
          SQUEEZE   TMPURNO
          PACK      PURNO,TMPURNO
          RJUSTIFY  PURNO
          MOVE      PURNO,TMPURNO
.
FMUR0100  MOVE      ZERO,COUNTER
          WHILE     COUNTER < 7
            ADD       ONE,COUNTER
            CMOVE     TMPURNO,ANS
            MATCH     SP1,ANS
            IF        !@EQUAL
              MATCH     "0",ANS
              IF        @EQUAL
                IF        REMOVEZ=1
                  CMOVE     SP1,TMPURNO
                ELSE  
                  GOTO    FMUR0500
                ENDIF 
              ELSE
                GOTO    FMUR0500
              ENDIF
            ENDIF
            BUMP      TMPURNO
          DO

FMUR0500  RESET     TMPURNO
          PACK      DIM8,TMPURNO,SP8
.
FMUR9999  RETURN
+
.********************************************************************
.         Checking mapping
.********************************************************************
CMAP0000 BRANCH       CLMFLAG,CMAP1000
         PACK         KEY3,TMPCLMC
         CALL         RDTMCLA1
         BRANCH       OVRCD,CMAP1000
         MOVE         TMPNEWCL,TMPCLMC
.
CMAP1000 BRANCH       DOCFLAG,CMAP2000
         PACK         KEY10,TMPSDOC
         CALL         RDTMDCA1
         BRANCH       OVRCD,CMAP2000
         MOVE         TMPNEWDC,TMPSDOC
.
CMAP2000 BRANCH       MPRFLAG,CMAP3000
         PACK         KEY6,TMPMPRA
         CALL         RDTMMPA1
         BRANCH       OVRCD,CMAP3000
         MOVE         TMPNEWMP,TMPMPRA
.
CMAP3000 BRANCH       CGIFLAG,CMAP9999
         PACK         KEY3,TMPPIND
         CALL         RDTMGIA1
         BRANCH       OVRCD,CMAP9999
         MOVE         TMPNEWGI,TMPPIND
.
CMAP9999 RETURN
+
.********************************************************************
.        Write to Header table
.********************************************************************
WRHDB000  MOVE      TMPURNO,PRHDDEBT     * Debtor or U/R number
          MOVE      ONE,PRHDSCAN         * Scan Flag
          MOVE      TMPCLMC,PRHDCLAM     * Claim Code (Category CL)
          MOVE      TMPADAT,PRHDACCD     * Accident Date
          MOVE      UNIQUEID,PRHDUNIQ    * Unique Identifier
          MOVE      PFUNDH,PRHDHFND
          MOVE      SP70,PRHDSPAR        * Spare Variable
          PACK      KEY27,PRHDDEBT,PRHDSCAN,PRHDCLAM,PRHDACCD,PRHDHFND,SP70
          CALL      RAPRHD1
          IF        OVRCD=1
            CALL      WRPRHD1
          ENDIF
WRHDB999 RETURN
+
.********************************************************************
.        Write to Holding table
.********************************************************************
WRHRE000 CALL       CLPRIHRE
.
         MOVE       UNIQUEID,PRHRUNIQ
         MOVE       TMPMPRA,PRHRPRAC
         MOVE       TMPSDOC,PRHRDOCT
         MOVE       TMPPIND,PRHRPIND
         MOVE       ONE,PRHRPINV
.
         PACK       PRHRNAME,PSNAME,SP1,PGNAME
         PACK       PRHRADD1,PADD1,SP70
         PACK       PRHRADD2,PADD2,SP70
         PACK       PRHRADD3,PSUBRB,SP70
         PACK       PRHRADD4,PADD4,SP70
         PACK       PRHRPOST,PPOST,SP70
         MOVE       PTELEP,PRHRTELP
         MOVE       PTELEB,PRHRTELB
.
         PACK       KEY27,PRHRUNIQ,PRHRPRAC,PRHRDOCT,PRHRPIND,SP70
         CALL       RAPRHR1
         IF         OVRCD=1
           CALL       WRPRHR1
         ENDIF
WRHRE999 RETURN
+
.**********************************************************************
.*                                WRDTR000                            *
.*            Routine to write to the debtors transaction file        *
.**********************************************************************
WRDTR000  CALL      CLPRIDTR
.
          MOVE      ONE,PRDTTRAN
          MOVE      UNIQUEID,PRDTUNIQ
          MOVE      TMPINVN,PRDTINVN
          MOVE      TMPURNO,PRDTDEBT
          MOVE      ONE,PRDTSCAN
          MOVE      TMPINVD,PRDTSDAT
          MOVE      ITMDESC,PRDTDESC
          MOVE      TMPMPRA,PRDTPRAC
          MOVE      TMPSDOC,PRDTDOCT
          MOVE      ONE,PRDTSERV
          MOVE      TMPCLMC,PRDTCLAM
          MOVE      TMPPIND,PRDTCODE
          MOVE      ONE,PRDTRTYP
          MOVE      IFLAG,PRDTIFLG
          MOVE      ITEMNUMB,PRDTITMN
          MOVE      SUBITEM,PRDTSUBN
.
          MOVE      "0",PRDTAPAY
          MOVE      ZERO,PRDTPFLG
          MOVE      ZERO,PRDTS4B3
.
          PACK      KEY22,IFLAG,ITEMNUMB,SUBITEM,TMPINVD
          CALL      RDPRIT1                 * read the item file
          COMPARE   ZERO,OVRCD
          GOTO      WRDTR100 IF EQUAL
.
          CALL      RPPRIT1                 * get the previous record on the
          BRANCH    OVRCD,WRDTR200            item file
.
          MATCH     PRITITMN,ITEMNUMB        * see if we have the same item
          GOTO      WRDTR200 IF NOT EQUAL
.
          MATCH     PRITSUBN,SUBITEM       * see if we have the same sub-item
          GOTO      WRDTR200 IF NOT EQUAL
.
          COMPARE   PRITFLAG,IFLAG          * see if we have the item type
          GOTO      WRDTR200 IF NOT EQUAL
.
.------ we have a set code ------
.
WRDTR100  MOVE      PRITSETC,PRDTSETC
          GOTO      WRDTR300
.
WRDTR200  MOVE      SP3,PRDTSETC
.
.------ set up the rest of the variables ------
.
WRDTR300  MOVE      ONE,PRITFIXD        * fixed charged
          MOVE      "DB",PRDTTTYP
          MOVE      ONE,PRDTINVP
          MATCH     TMPINVD,STOFYEAR
          IF        @LESS
            PACK      PRDTEFFD,TMPINVD
          ELSE
            PACK      PRDTEFFD,STOFYEAR      * start of current financial year
          ENDIF
          REP       " 0",PRDTEFFD
.
          MOVE      TMPINVM,PRDTAMNT
          MOVE      TMPINVM,PRDTIAMT
.
.------ read the debtors transaction file with the current debtor number ------
.
WRDTR400  PACK      KEY22,UNIQUEID,PRDTINVN,PRDTTRAN
          CALL      RAPRDT1                 * read the private practice debtors
          BRANCH    OVRCD,WRDTR500            transaction file
          ADD       ONE,PRDTTRAN
          GOTO      WRDTR400
.
.------ write to the private practice debtors transaction file ------
.
WRDTR500  PACK      PRDTCDAT,CCC,CYY,CMM,CDD
          REP       " 0",PRDTCDAT
          CLOCK     TIME,PRDTCTIM
          CALL      WRPRDT1
          ADD       ONE,PRDTTRAN
.
WRDTR999  RETURN
+
+
.**********************************************************************
.*                               WRINV000                             *
.*              Routine to write a new invoice record                 *
.**********************************************************************
WRINV000  MOVE      TMPINVN,PRINNUMB
          MOVE      TMPINVD,PRINDATE
          PACK      PRINNAME,PSNAME,SP70
          MOVE      TMPURNO,PRINDEBT
          MOVE      ONE,PRINSCAN
          MOVE      UNIQUEID,PRINUNIQ
          MOVE      TMPMPRA,PRINPRAC
          MOVE      TMPSDOC,PRINDOCT
          MOVE      TMPCLMC,PRINCLAM
          MOVE      TMPINVM,PRINITOT
          MOVE      ZERO,PRINCNUM
          MOVE      TMPADAT,PRINADTE
          MOVE      ZERO,PRINPAMT
          MOVE      ZERO,PRINHAMT
          MOVE      ZERO,PRINIAMT
          MOVE      ZERO,PRINMAMT
          MOVE      ZERO,PRINVAMT
          MOVE      ZERO,PRINOTHA
          MOVE      ZERO,PRINJAMT
          MOVE      TMPINVM,PRINPEND
.
          MOVE      PRDTTRAN,PRINTRAN
          PACK      PRINNAMR,PSNAME,SP1,PGNAME
          PACK      PRINPRA1,PADD1,SP70
          PACK      PRINPRA2,PADD2,SP70
          PACK      PRINPRA3,PSUBRB,SP70
          PACK      PRINPRA4,PADD4,SP70
          PACK      PRINPOST,PPOST,SP70
          MOVE      PTELEP,PRINTELP
          MOVE      PTELEB,PRINTELB
          MOVE      SP70,PRINMPHN
          MOVE      "SELF      ",PRINRELP
          MOVE      ZERO,PRINGSTA
          MOVE      ZERO,PRINGSTJ
          MOVE      "0",PRINCNST
          MOVE      ZERO,PRINCNTT
          PACK      PRINSPAR,SP20,SP3
          UNPACK    SP70,PRINUDAT,PRINUTIM,PRINUUID
.
          MOVE      TMPINVN,KEY8
          CALL      RAPRIN1
          IF        OVRCD=1
            PACK      PRINCDAT,CCC,CYY,CMM,CDD
            REP       " 0",PRINCDAT             * date created
            CLOCK     TIME,PRINCTIM             * time created
            MOVE      PASSCODE,PRINCUID         * user id
            CALL      WRPRIN1                   * write to the private practice
          ENDIF
          PROC      FLAGDEBP                  * Flag PMI Outstanding Debt
.
WRINV999  RETURN
+
.**********************************************************************
.*                                WRFIN000                            *
.*           Routine to update the financial summary file             *
.**********************************************************************
UPFIN000  MOVE      ANSA,PRFNTYPE
          PACK      PRFNCODE,ANSM,PRDTSETC,IFLAG,ITEMNUMB,SUBITEM,SP70
.
          MATCH     PRINDATE,STOFYEAR
          IF        @LESS
            PACK      FSTDATE,TMPINVD
          ELSE
            PACK      FSTDATE,STOFYEAR      * start of current financial year
          ENDIF
          REP       " 0",FSTDATE
.
          MOVE      PRDTPRAC,PRFNMPRA
          MOVE      PRDTAMNT,FSTAMNT
          MOVE      ZERO,FGSTFLAG
          CALL      PRICALFS                * calculate and write to the fins
.
UPFIN999  RETURN
+
.********************************************************************
.        Subroutine to print data
.********************************************************************
PRTD000  COMPARE    "55",CLNO
         CALL       HEAD IF NOT LESS
.
         UNPACK     TMPINVD,CCENT,CYEAR,CMON,CDAY
         CALL       PACDATE
         MOVE       TMPINVM,FORM9P2
         PRINT      *1,TMPURNO,*10,PGNAME,*36,PSNAME:
                    *57,TMPINVN,*67,CPCDATE;
.
         UNPACK     TMPADAT,CCENT,CYEAR,CMON,CDAY
         CALL       PACDATE
         PRINT      *80,FORM9P2,*94,TMPCLMC,*100,CPDATE,*109,TMPMPRA:
                    *116,TMPSDOC,*128,TMPPIND
         ADD        ONE,CLNO
.
         COMPARE    ZERO,ERRFLAG
         GOTO       PRTD999 IF EQUAL      * No error
.
         MOVE       ONE,F1
         WHILE      F1<=ERRCOUNT
           MATCH     SP70,ERRARRAY[F1]
           IF        !@EQUAL
             PRINT     *19,ERRARRAY[F1]
             ADD       ONE,CLNO            * increment page line count
           ENDIF
           ADD       ONE,F1
         DO
.
PRTD999  RETURN
+
.********************************************************************
.        Print Header 
.********************************************************************
HEAD     MOVE       ONE,CNOUNDLN
         IF         VALDFLAG=1
           MOVE       "- Error Report ",CPHDROPT
         ELSE
           MOVE       "- Upload Data",CPHDROPT
         ENDIF
         CALL       HEAD132
.
         PRINT      *N,"Item Code : ";
         IF         IFLAG=1
           PRINT      "AMA ";
         ELSE
           PRINT      "MBS ";
         ENDIF
         PRINT      ITEMNUMB,"/",SUBITEM," - ",ITMDESC
.
         PRINT      *N,*N,*2,"U/R ##",*10,"Patient Given Names":
                    *36,"Patient Surname",*57,"Invoice ##":
                    *67,"Invoice Date",*80,"Invoice Amt":
                    *94,"Clm",*100,"Acc.Date",*109,"MPrac":
                    *116,"Doc.",*128,"Ind":
                    *N,"--------",*10,"--------------------":
                    "-----",*36,"--------------------",*57,"---------":
                    *67,"------------",*80,"------------":
                    *94,"-------------------------------------"
         MOVE       SIX,CLNO
         RETURN
.
.********************************************************************
.        Printing end of report
.********************************************************************
PRTT0000  COMPARE   ZERO,CPAGENO
          GOTO      PRTT1000 IF EQUAL
.
          DISPLAY   *P1:24,*EL,*V2LON,*P20:24:
                    "** Report Generation Completed **",*W;
.
PRTT1000  CLOCK     TIME,CTIMEIS
          DISPLAY   *P14:19,*V2LON,RDSCOUNT,*HOFF:
                    *P1:21,"Finished   : ",*V2LON,CTIMEIS
.
.         Warn the user if there were any records with errors
.
          MOVE      IURCOUNT,FORM8
          ADD       IHGCOUNT,FORM8
          ADD       CLMCOUNT,FORM8
          ADD       MPRCOUNT,FORM8
          ADD       DOCCOUNT,FORM8
          ADD       INDCOUNT,FORM8
          ADD       INVCOUNT,FORM8
          ADD       HEACOUNT,FORM8
.
          IF        FORM8 >0
            DISPLAY   *P1:22,*V2LON,*BLINKON,"Warning:  Records found with ":
                      "errors.  Refer to error report."
          ENDIF
.
          PRINT     *N:
                    *1,"Total records read                    - ",RDSCOUNT,*N:
                    *1,"Records added                         - ",ADDCOUNT,*N:
.
                    *1,"Invoice number too High detected      - ",IHGCOUNT,*N:
                    *1,"Records with invalid U/R number       - ",IURCOUNT,*N:
                    *1,"Records with invalid Claim code       - ",CLMCOUNT,*N:
                    *1,"Records with invalid Medical Practice - ",MPRCOUNT,*N:
                    *1,"Records with invalid Doctor code      - ",DOCCOUNT,*N:
                    *1,"Records with Invalid Patient Indicator- ",INDCOUNT,*N:
                    *1,"Existing Invoice number detected      - ",INVCOUNT,*N:
                    *1,"Existing Header record detected       - ",HEACOUNT,*N
.
          PRINT     *N,"**** End of Report ****";
.
          IF        VALDFLAG=0
            DISPLAY   *P1:24,*EL,*B,"Upload complete.  ";
          ENDIF
          CALL      HITENTER
.
PRTT9999  RETURN
+
.*****************************************************************************
.*                              LERR0000           Called by: VCOD0000       *
.*                   Load  an error detail line                              *
.*****************************************************************************
LERR0000  ADD       ONE,ERRCOUNT
          PACK      ERRARRAY[ERRCOUNT],ERRDESC,SP70
          MOVE      ONE,ERRFLAG
.
LERR9999  RETURN
+
.********************************************************************
.                SRTF0000                                           *
.********************************************************************
SRTF0000  CALL      KPTH0000            * Get the path
          BRANCH    EXIT,SRTF9100
.
          MOVE      ZERO,MPRFLAG
          MOVE      ZERO,DOCFLAG
          MOVE      ZERO,CLMFLAG
          MOVE      ZERO,CGIFLAG
.
          TRAP      SRTF9000 IF IO
          OPEN      OUTDFILE,FILEPATH
          TRAPCLR   IO
.
.         Open Claim mapping text file
.
          TRAP      SRTF2000 IF IO
          OPEN      TMPCLMAF,CLMMPATH
          TRAPCLR   IO
.
          PACK      CMDLINE,SP70,SP70
          CLEAR     CMDLINE
          APPEND    "iserase mapclmaf",CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.         Create Claim mapping index file
.
          PACK      CMDLINE,SP70,SP70
          CLEAR     CMDLINE
          APPEND    "isbuild mapclmaf",CMDLINE
          APPEND    " 7 UC1-3",CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      MAPCLMA1,"mapclmaf"
SRTF1000  MOVE      SP70,KEY3
          CALL      RSTMCLA1
          CALL      RKTMCLA1
          BRANCH    OVRCD,SRTF1200
          PACK      KEY3,TMPOLDCL,SP70
          CALL      DETMCLA1
          GOTO      SRTF1000
.
.         Copy from Claim mapping text file to index file
.
SRTF1200  CALL      RDCLFILE
          BRANCH    OVRCD,SRTF3000
.
          MOVE      TMPOLDCL,KEY3
          CALL      RATMCLA1
          COMPARE   ZERO,OVRCD
          GOTO      SRTF1200 IF EQUAL
.
          CALL      WRTMCLA1
          GOTO      SRTF1200
.
SRTF2000  BEEP
          DISPLAY   *P1:23,*EL,"** WARNING NO CLAIM CODE MAPPING FILE ** ":
                    CLMMPATH;
          NORETURN
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,SRTF2200,SRTF0000       * Yes, no, cancel
          GOTO      SRTF9100 
.
SRTF2200  MOVE      ONE,CLMFLAG
.
.         Open Doctor mapping text file
.
SRTF3000  TRAP      SRTF5000 IF IO
          OPEN      TMPDOCAF,DOCTPATH
          TRAPCLR   IO
.
          PACK      CMDLINE,SP70,SP70
          CLEAR     CMDLINE
          APPEND    "iserase mapdocaf",CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.         Create Doctor mapping index file
.
          PACK      CMDLINE,SP70,SP70
          CLEAR     CMDLINE
          APPEND    "isbuild mapdocaf",CMDLINE
          APPEND    " 21 UC1-10",CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      MAPDOCA1,"mapdocaf"
SRTF4000  MOVE      SP70,KEY10
          CALL      RSTMDCA1
          CALL      RKTMDCA1
          BRANCH    OVRCD,SRTF4200
          PACK      KEY10,TMPOLDDC,SP70
          CALL      DETMDCA1
          GOTO      SRTF4000
.
.         Copy from Doctor mapping text file to index file
.
SRTF4200  CALL      RDDCFILE
          BRANCH    OVRCD,SRTF6000
.
          MOVE      TMPOLDDC,KEY10
          CALL      RATMDCA1
          COMPARE   ZERO,OVRCD
          GOTO      SRTF4200 IF EQUAL
.
          CALL      WRTMDCA1
          GOTO      SRTF4200
.
SRTF5000  BEEP
          DISPLAY   *P1:23,*EL,"** WARNING NO DOCTOR CODE MAPPING FILE ** ":
                    DOCTPATH;
          NORETURN
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,SRTF5100,SRTF0000       * Yes, no, cancel
          GOTO      SRTF9100
.
SRTF5100  MOVE      ONE,DOCFLAG
.
.         Open Medical Practice mapping text file
.
SRTF6000  TRAP      SRTF7000 IF IO
          OPEN      TMPMPRAF,MPRAPATH
          TRAPCLR   IO
.
          PACK      CMDLINE,SP70,SP70
          CLEAR     CMDLINE
          APPEND    "iserase mapmpraf",CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.         Create medical practice mapping index file
.
          PACK      CMDLINE,SP70,SP70
          CLEAR     CMDLINE
          APPEND    "isbuild mapmpraf",CMDLINE
          APPEND    " 13 UC1-6",CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      MAPMPRA1,"mapmpraf"
SRTF6200  MOVE      SP70,KEY6
          CALL      RSTMMPA1
          CALL      RKTMMPA1
          BRANCH    OVRCD,SRTF6400
          PACK      KEY6,TMPOLDMP,SP70
          CALL      DETMMPA1
          GOTO      SRTF6200
.
.         Copy from Medical Practice mapping text file to index file
.
SRTF6400  CALL      RDMPFILE
          BRANCH    OVRCD,SRTF8000
.
          MOVE      TMPOLDMP,KEY6
          CALL      RATMMPA1
          COMPARE   ZERO,OVRCD
          GOTO      SRTF6400 IF EQUAL
.
          CALL      WRTMMPA1
          GOTO      SRTF6400
.
SRTF7000  BEEP
          DISPLAY  *P1:23,*EL,"** WARNING NO MEDICAL PRACTICE MAPPING FILE ** ":
                    MPRAPATH;
          NORETURN
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,SRTF7100,SRTF0000       * Yes, no, cancel
          GOTO      SRTF9100
.
SRTF7100  MOVE      ONE,MPRFLAG
.
.         Open Patient indicator mapping text file
.
SRTF8000  TRAP      SRTF8400 IF IO
          OPEN      TMPCGIAF,CAGIPATH
          TRAPCLR   IO
.
          PACK      CMDLINE,SP70,SP70
          CLEAR     CMDLINE
          APPEND    "iserase mapcgiaf",CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.         Create Patient indicator mapping index file
.
          PACK      CMDLINE,SP70,SP70
          CLEAR     CMDLINE
          APPEND    "isbuild mapcgiaf",CMDLINE
          APPEND    " 7 UC1-3",CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      MAPCGIA1,"mapcgiaf"
SRTF8100  MOVE      SP70,KEY3
          CALL      RSTMGIA1
          CALL      RKTMGIA1
          BRANCH    OVRCD,SRTF8200
          PACK      KEY3,TMPOLDGI,SP70
          CALL      DETMGIA1
          GOTO      SRTF8100
.
.         Copy from Patient indicator mapping text file to index file
.
SRTF8200  CALL      RDGIFILE
          BRANCH    OVRCD,SRTF9200
.
          MOVE      TMPOLDGI,KEY3
          CALL      RATMGIA1
          COMPARE   ZERO,OVRCD
          GOTO      SRTF8200 IF EQUAL
.
          CALL      WRTMGIA1
          GOTO      SRTF8200
.
SRTF8400  BEEP
          DISPLAY *P1:23,*EL,"** WARNING NO PATIENT INDICATOR MAPPING FILE ** ":
                    CAGIPATH;
          NORETURN
          CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,SRTF8600,SRTF0000       * Yes, no, cancel
          GOTO      SRTF9100
.
SRTF8600  MOVE      ONE,CGIFLAG
          GOTO      SRTF9200
.
SRTF9000  BEEP
          DISPLAY   *P1:23,*EL,"** O/S DEBTORS FILE ":
                    " NOT FOUND **",FILEPATH;
          CALL      HITENTER
          DISPLAY   *P1:23,*EL;
          NORETURN
          GOTO      SRTF0000
.
SRTF9100  MOVE      ONE,EXIT
          GOTO      SRTF9999
.
SRTF9200  MOVE      ZERO,EXIT
          GOTO      SRTF9999
.
SRTF9999  RETURN
+
.**********************************************************************
.         Get File and path name
.**********************************************************************
KPTH0000  MOVE      SP70,FILEPATH
          DISPLAY   *P1:4,"Enter Path Name               :";
          KEYIN     *P33:4,*EL,FILEPATH
          RESET     FILEPATH
          GOTO      KPTH9000 IF EOS
.
          ENDSET    FILEPATH
.
          CMATCH    "/",FILEPATH
          GOTO      KPTH2200 IF NOT EQUAL
.
          LENSET    FILEPATH
          RESET     FILEPATH
.
          PACK      FILEPATH,FILEPATH,SP30,SP30,SP30,SP30
          STRIP     FILEPATH
          MOVE      FILEPATH,SAVEPATH
          STRIP     SAVEPATH
.
          ENDSET    FILEPATH
          APPEND    FNAMET,FILEPATH
          APPEND    ".txt",FILEPATH
          RESET     FILEPATH
.
          CLEAR     CLMMPATH
          APPEND    SAVEPATH,CLMMPATH
          APPEND    "tmpclmaf.txt",CLMMPATH
          APPEND    SP70,CLMMPATH
          RESET     CLMMPATH
.
          CLEAR     DOCTPATH
          APPEND    SAVEPATH,DOCTPATH
          APPEND    "tmpdocaf.txt",DOCTPATH
          APPEND    SP70,DOCTPATH
          RESET     DOCTPATH
.
          CLEAR     MPRAPATH
          APPEND    SAVEPATH,MPRAPATH
          APPEND    "tmpmpraf.txt",MPRAPATH
          APPEND    SP70,MPRAPATH
          RESET     MPRAPATH
.
          CLEAR     CAGIPATH
          APPEND    SAVEPATH,CAGIPATH
          APPEND    "tmpcgiaf.txt",CAGIPATH
          APPEND    SP70,CAGIPATH
          RESET     CAGIPATH
.
          MOVE      ZERO,EXIT
          GOTO      KPTH9999
.
KPTH2200  DISPLAY   *P1:24,*EL,*B,"Path must end with a slash (/)";
          CALL      HITENTER
          GOTO      KPTH0000
.
KPTH9000  MOVE      ONE,EXIT
KPTH9999  RETURN
+
.****************************************************************************
.*                                GETT0000           Called by: PROC0000    *
.*                      get the item type (MBS or AMA)                      *
.* Returns:       IFLAG    0 = MBS                                          *
.*                         1 = AMA                                          *
.*                EXIT     0 = valid input                                  *
.*                         1 = nothing input                                *
.****************************************************************************
.
GETT0000  KEYIN     *P1:4,*EF,*P8:4,*EF,"(",*V2LON,*DV,ANSM,*HOFF,")BS or (":
                    *V2LON,*DV,ANSA,*HOFF,")MA : ",*DV,UNDLN1:
                    *P25:4,*V2LON,ANS;
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     SP3,ANS                      * anything input ?
          GOTO      GETT9500 IF EQUAL            * no
.
          MATCH     ANSM,ANS                     * ? MBS
          IF        @EQUAL
             DISPLAY   *P25:4,*EL,*V2LON,"MBS"
             MOVE      ZERO,IFLAG
          ELSE
             MATCH     ANSA,ANS                  * ? AMA
             IF        @EQUAL
                DISPLAY   *P25:4,*EL,*V2LON,"AMA"
                MOVE      ONE,IFLAG
             ELSE
                GOTO      GETT0000               * invalid
             ENDIF
          ENDIF
.
GETT9000  MOVE      ZERO,EXIT
          GOTO      GETT9999
.
GETT9500  MOVE      ONE,EXIT
.
GETT9999  RETURN
+
.****************************************************************************
.*                                GETI0000           Called by: PROC0000    *
.*                      get the item code for outstanding debts             *
.* Returns:     EXIT   0 = valid item                                       *
.*                     1 = nothing or spaces                                *
.****************************************************************************
.
GETI0000  DISPLAY   *P8:5,"Item Number    :"
          MOVE      SP70,ITEMNUMB
          MOVE      SP70,SUBITEM
          MOVE      SP70,ITMDESC
.
          MOVE      TWENTY5,CCOL                 * set screen position
          MOVE      FIVE,CVERT
          CALL      KYPRIITM                     * get an item #
          BRANCH    EXIT,GETI9000:               * exitchar entered
                         GETI4000:               * ? entered
                         GETI9000                * nothing entered
.
          CALL      CHKI0000                     * item on file ?
          BRANCH    EXIT,GETI0000                * no
          GOTO      GETI8000                     * yes
.
GETI4000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
GETI4200  MOVE      ONE,ITMFLAG
          MOVE      ONE,PATHFLAG
          CALL      PRIITMDS                     * list codes on file
.
GETI4500  DISPLAY   *P1:24,*EL,"Item Number: "
          MOVE      TEN4,CCOL
          MOVE      TWENTY4,CVERT
          CALL      KYPRIITM                     * get item number
          BRANCH    EXIT,GETI9000:               * exitchar entered
                         GETI4200:               * ? entered
                         GETI5000                * nothing entered
.
          CALL      CHKI0000                     * item on file ?
          BRANCH    EXIT,GETI4500                * no
          GOTO      GETI7900                     * yes
.
GETI5000  CALL      PUTSCR00                     * restore screen
          DISPLAY   *P25:5,*EL
          GOTO      GETI9000
.
GETI7900  CALL      PUTSCR00                     * restore screen
          DISPLAY   *P25:5,*V2LON,ITEMNUMB
.
          MATCH     SP3,SUBITEM                  * subitem number ?
          GOTO      GETI8000 IF EQUAL            * no
.
          DISPLAY   *P34:5,"(",*V2LON,SUBITEM,*HOFF,")"
GETI8000  MOVE      ZERO,EXIT
          DISPLAY   *P40:5,PRITDESC
.
          MOVE      PRITDESC,ITMDESC
          GOTO      GETI9999
.
GETI9000  MOVE      ONE,EXIT
.
GETI9999  RETURN
+
.***************************************************************************
.*                             CHKI0000               Called by: GETI0000  *
.*                    check if item on file                                *
.***************************************************************************
.
CHKI0000  PACK      KEY22,IFLAG,ITEMNUMB,SUBITEM,SP8
          CALL      RSPRIT1                      * position in file
          CALL      RKPRIT1                      * read next record
          BRANCH    OVRCD,CHKI5000               * end of file
.
          COMPARE   PRITFLAG,IFLAG               * same item type ?
          GOTO      CHKI5000 IF NOT EQUAL        * no
.
          MATCH     ITEMNUMB,PRITITMN            * same item number ?
          GOTO      CHKI5000 IF NOT EQUAL        * no
.
          MATCH     SUBITEM,PRITSUBN             * same subitem number ?
          GOTO      CHKI5000 IF NOT EQUAL        * no
.
          GOTO      CHKI9000                     * item number on file
.
CHKI5000  DISPLAY   *P1:24,*EL,*B,"Item not on file.  ";
          CALL      HITENTER
          GOTO      CHKI9500
.
CHKI9000  MOVE      ZERO,EXIT
          GOTO      CHKI9999
.
CHKI9500  MOVE      ONE,EXIT
.
CHKI9999  RETURN
+
+
.********************************************************************
.         Remove leading zero from U/R
.********************************************************************
REMZ0000  MOVE      ZERO,REMOVEZ
          KEYIN     *P1:22,*EL,"Do you want to remove leading zero's from UR":
                    " (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          IF        @EQUAL
            MOVE      ONE,REMOVEZ
          ENDIF
.
          MATCH     ANSN,ANS
          IF        @EQUAL
            MOVE      ZERO,REMOVEZ
          ENDIF
.
REMZ9999  RETURN
+
. *****************************************************************************
. * GPERD      : Get the period for a date                                    *
. *                                                                           *
. * Parameters : CPTDATE  Date to determine period for (CCYYMMDD)             *
. * Returns    : EXIT     0 = Period found                                    *
. *                       1 = Date not found in date range file               *
. *              DRGYR    Period year for Date (CCYY)                         *
. *              DRGNUM   Period code for Date (MM)                           *
. *                                                                           *
. *****************************************************************************
.
GPERD     
          PACK      KEY14,CPTDATE,SP6   * Key for to find this date in file
          CALL      RDSDRGA2            * Position in Date range file
          CALL      RDKDRGA2            * Get the first record from given date
          BRANCH    OVRCD,GPERD900      * No record found in file
.
          MATCH     DRGFDTE,CPTDATE     * Is the given date before this period
          GOTO      GPERD900 IF LESS    * Yes. Date not in file
.
          MOVE      ZERO,EXIT           * Period found
          GOTO      GPERD999            * Return with the period
.
.         The requested date wasn't in the file
.
GPERD900  UNPACK    SP6,DRGYR,DRGNUM    * Blank out period code
          MOVE      ONE,EXIT            * Period record not found
.
GPERD999  CLOSE     PATDRGA2            * Close the date range file
          RETURN
.
.********************************************************************
.*                          I/O for tempfile                        *
.********************************************************************
RDINFILE  MOVE      ZERO,OVRCD
          READ      OUTDFILE,SEQ;TMPURNO,TMPCLMC,TMPADAT,TMPINVN,TMPINVD:
                                 TMPINVM,TMPMPRA,TMPSDOC,TMPPIND
          GOTO      OVERCOND IF OVER
          RETURN
.
RDCLFILE  MOVE      ZERO,OVRCD
          READ      TMPCLMAF,SEQ;TMPOLDCL,TMPNEWCL
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTMCLA1  MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      MAPCLMA1,KEY3;TMPOLDCL,TMPNEWCL
          GOTO      OVERCOND IF OVER
          RETURN
.
RATMCLA1  MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      MAPCLMA1,KEY3;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMCLA1  RESET     KEY3
          READ      MAPCLMA1,KEY3;;
          RETURN
.
RKTMCLA1  MOVE      ZERO,OVRCD
          READKS    MAPCLMA1;TMPOLDCL,TMPNEWCL
          GOTO      OVERCOND IF OVER
          RETURN
.
DETMCLA1  RESET     KEY3
          DELETE    MAPCLMA1,KEY3
          RETURN
.
WRTMCLA1  RESET     KEY3
          WRITE     MAPCLMA1,KEY3;TMPOLDCL,TMPNEWCL
          RETURN
.
.********************************************************************
RDDCFILE  MOVE      ZERO,OVRCD
          READ      TMPDOCAF,SEQ;TMPOLDDC,TMPNEWDC
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTMDCA1  MOVE      ZERO,OVRCD
          RESET     KEY10
          READ      MAPDOCA1,KEY10;TMPOLDDC,TMPNEWDC
          GOTO      OVERCOND IF OVER
          RETURN
.
RATMDCA1  MOVE      ZERO,OVRCD
          RESET     KEY10
          READ      MAPDOCA1,KEY10;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMDCA1  RESET     KEY10
          READ      MAPDOCA1,KEY10;;
          RETURN
.
RKTMDCA1  MOVE      ZERO,OVRCD
          READKS    MAPDOCA1;TMPOLDDC,TMPNEWDC
          GOTO      OVERCOND IF OVER
          RETURN
.
DETMDCA1  RESET     KEY10
          DELETE    MAPDOCA1,KEY10
          RETURN
.
WRTMDCA1  RESET     KEY10
          WRITE     MAPDOCA1,KEY10;TMPOLDDC,TMPNEWDC
          RETURN
.
.********************************************************************
RDMPFILE  MOVE      ZERO,OVRCD
          READ      TMPMPRAF,SEQ;TMPOLDMP,TMPNEWMP
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTMMPA1  MOVE      ZERO,OVRCD
          RESET     KEY6
          READ      MAPMPRA1,KEY6;TMPOLDMP,TMPNEWMP
          GOTO      OVERCOND IF OVER
          RETURN
.
RATMMPA1  MOVE      ZERO,OVRCD
          RESET     KEY6
          READ      MAPMPRA1,KEY6;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMMPA1  RESET     KEY6
          READ      MAPMPRA1,KEY6;;
          RETURN
.
RKTMMPA1  MOVE      ZERO,OVRCD
          READKS    MAPMPRA1;TMPOLDMP,TMPNEWMP
          GOTO      OVERCOND IF OVER
          RETURN
.
DETMMPA1  RESET     KEY6
          DELETE    MAPMPRA1,KEY6
          RETURN
.
WRTMMPA1  RESET     KEY6
          WRITE     MAPMPRA1,KEY6;TMPOLDMP,TMPNEWMP
          RETURN
.
.==============================================================================
RDGIFILE  MOVE      ZERO,OVRCD
          READ      TMPCGIAF,SEQ;TMPOLDGI,TMPNEWGI
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTMGIA1  MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      MAPCGIA1,KEY3;TMPOLDGI,TMPNEWGI
          GOTO      OVERCOND IF OVER
          RETURN
.
RATMGIA1  MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      MAPCGIA1,KEY3;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMGIA1  RESET     KEY3
          READ      MAPCGIA1,KEY3;;
          RETURN
.
RKTMGIA1  MOVE      ZERO,OVRCD
          READKS    MAPCGIA1;TMPOLDGI,TMPNEWGI
          GOTO      OVERCOND IF OVER
          RETURN
.
DETMGIA1  RESET     KEY3
          DELETE    MAPCGIA1,KEY3
          RETURN
.
WRTMGIA1  RESET     KEY3
          WRITE     MAPCGIA1,KEY3;TMPOLDGI,TMPNEWGI
          RETURN
.
.==============================================================================
.
          INC       STD001IO
          INC       IBAPRINT
          INC       PRICALFS
          INC       PRIITMDS
          INC       PMSOSPTM
          INC       KYPRIITM
          INC       CLPRIDTR
          INC       CLPRIHRE
.
          INC       IBAPRNIO/INC
          INC       PATCODIO/INC
          INC       PATDRGIO/INC
          INC       PMSHCPIO/INC
          INC       PATMA1IO/INC
.
          INC       PRIDTRIO/INC
          INC       PRIFIGIO/INC
          INC       PRIFINIO/INC
          INC       PRIHDBIO/INC
          INC       PRIHREIO/INC
          INC       PRIHTRIO/INC
          INC       PRIITMIO/INC
          INC       PRIINVIO/INC
          INC       PRIPRAIO/INC
.
