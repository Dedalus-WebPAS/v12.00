.*******************************************************************************
.* System         : Patient System                                             *
.* Program        : IBANHI13                                                   *
.* Description    : Load NBRS Acknowledgement                                  *
.*******************************************************************************
.* Date           : 11/06/2015                                                 *
.* Author         : Don Nguyen                                                 *
.* Function       : Loads the NBRS Acknowledgement (comma delimited files      *
.*                  with either ".NBK" or ".ERR" extensions).                  *
.*                  The corresponding records are written/updated in 'watnbhaf'*
.*                  & 'watnbdaf'.                                              *
.*                                                                             *
.*                  N.B. It uses the user script 'ibanhi12.us1' to convert the *
.*                  input file (comma separated) to a pipe delimited file      *
.*                  before any records are read from it.                       *
.*                  This user script uses 'csv2pipe.awk' for the conversion.   *
.*                                                                             *
.*******************************************************************************
.* Modifications  :                                                            *
.*                                                                             *
.*      V10.08.02   14/04/2016  Don Nguyen       TSK 0303887                   *
.*                  Modified PROC0000 - use index 1 to read record             *
.*      V10.08.01   23/03/2016  Don Nguyen       TSK 0303887                   *
.*                  Modified PROC0000 for changes to WATNBDFD                  *
.*      V10.07.03   08/03/2016  Don Nguyen       TSK 0303887                   *
.*                  Modified PROC0000 to use ACAHNUMP for num records compare. *
.*                  Fixed update in PROC0000 to use corresponding read index.  *
.*                  Changed the way we process "BE" and subsequent records     *
.*                  using RECFNDFL to avoid erroneous updates.                 *
.*      V10.07.02   02/03/2016  Don Nguyen       TSK 0303887                   *
.*                  Modified PROC0000 to check for header record ('BH'), and   *
.*                  changed the way we locate our record in watnbdaf.          *
.*                  Used PTCNNBED instead for default load file path.          *
.*      V10.07.01   19/02/2016  Don Nguyen       TSK 0303887                   *
.*                  Modified CHKFIL00 to look for file extn ".NBK" or ".ERR"   *
.*      V10.06.00   11/06/2015  Don Nguyen       CAR 303887                    *
.*                  Created program                                            *
.*******************************************************************************
.
          INC       STD001FD           * Standard Include
.
          INC       PATCONFD/INC       * Patient Control File
          INC       WATNBDFD/INC       * NBRS Extract Records
          INC       WATNBHFD/INC       * NBRS Transmission File Batches
.
.*******************************************************************************
.*                  NBRS Acknowledgement Files                                 *
.*******************************************************************************
.
INPTFILE  FILE      HL7, FIXED=4065    * Pipe delimited input source file
.
.          Acknowledgement (Header) file fields
.
.Name     Type    Size      Start Loc   Description
.----     ----    ----      ---------   -----------
ACAHRTYP  DIM        2              1   Record Type (AA) e.g. 'BH'
ACAHACOD  DIM        4              3   Agency Code (XXXX)
ACAHFILE  DIM       12              7   Input file name (AAANNNNN.AAA)
.                                          acronym (AAA)
.                                          batch number (NNNNN)
.                                          extension (.AAA) e.g. '.ndm'
.
ACAHNREC  DIM        5             19   Number of records (NNNNN)
ACAHSDAT  DIM        8             24   Date sent (CCYYMMDD)
ACAHFDAT  DIM        8             32   File preparation date (CCYYMMDD)
ACAHFTIM  DIM        4             40   File preparation time (HHMM)
ACAHENVT  DIM        4             44   MOH Processing Environment (AAAA)
.                                          'PROD' or 'COMP'
.
ACAHLVER  DIM        6             48   File layout version
ACAHNUMP  DIM        5             54   Number of transactions processed
ACAHNUMD  DIM        5             59   Number of transactions deleted
ACAHNUMI  DIM        5             64   Number of transactions inserted
ACAHNUME  DIM        5             69   Number of transactions in error
ACAHNUMW  DIM        5             74   Number of transactions with warnings
ACAHLDAT  DIM        8             79   Date file loaded to NBRS (CCYYMMDD)
.
.End of record                      88
.
.
.          Acknowledgement (BE) fields
.
.Name     Type    Size     Start Loc   Description
.----     ----    ----     ---------   -----------
BERTYPE   DIM       2      30          Record type
BEACODE   DIM       1      32          Action A=add C=change D=delete E=erase
BEBOOKF   DIM       4      33          Booking facility
BELBEID   DIM      14      37          Local booking entry ID
BEBSCOD   DIM       2      51          Booking status code
BEBSDAT   DIM       8      53          Booking status date
BEHCUID   DIM       7      61          HCU identifier
BEDRFSA   DIM       8      68          Date of ref for FSA
BEBRSRC   DIM       1      76          Booking referral source
BEDOFSA   DIM       8      77          Date of FSA
BECADAT   DIM       8      85          CPAC assessment date
BECSCOR   DIM       5      93          CPAC score
BECSSID   DIM       4      98          CPAC scoring system ID
BEDCGIV   DIM       8     102          Date certainty given
BEDBMAD   DIM       8     110          Date booking made
BEDBTRE   DIM       8     118          Date booked for treatment
BEPHSVP   DIM       2     126          Principal health service purchaser
BETRTAG   DIM       4     128          Treatment agency
BETRFAC   DIM       4     132          Treatment facility
BELHEID   DIM      14     136          Local Health event identifier
BEHSPEC   DIM       3     150          Health specialty
BEBPROC   DIM       2     153          Booked procedure
BECLCOD   DIM       8     155          Clinical code
BECLCTT   DIM       1     163          Clinical code table type
BECLSYS   DIM       2     164          Clinical code system
BEDEFBY   DIM       1     166          Deferred by
BEDECAT   DIM       8     167          Date of exit category
BEEXCAT   DIM       2     175          Exit category
BESPPFL   DIM       1     177          Staged/Planned procedure flag
BESEQNC   DIM       2     178          Booking Entry Sequence
BECLGRP   DIM       2     180          Responsible Clinician Group
BECLRES   DIM       10    182          Clinical Responsibility Code
BEDOMCL   DIM       4     192          Domicile code * after 01/07/2008
BEASSCD   DIM       10    196          Assessor code * after 01/07/2008
BEASSGR   DIM       4     206          Assessor Group code * after 01/07/2008
.
.
.          Acknowledgement / Rejected (AC / RJ) data fields
.
ACRJRTYP   DIM      2       1     Record Type (AA) e.g. 'AC' or 'RJ'
ACRJLINE   DIM      5       3     Original input file line number (2-99999)
ACRJMSGN   DIM      7       8     NBRS message number, e.g. "NBR4004"
ACRJMSGT   DIM    255      15     NBRS message text: "Data record accepted"
.
.
.          Error / Warning (ER / WN) data fields
.
ERWNRTYP   DIM      2       1     Record Type (AA) e.g. 'ER' or 'WN'
ERWNMSGN   DIM      7       3     NBRS message number, e.g. "NBR4005"
ERWNMSGT   DIM    255      10     NBRS message text: "Cannot change, delete..."
.
.
.
.          Error (Header) file fields
.
.Name      Type    Size      Start Loc   Description
.----      ----    ----      ---------   -----------
ACEHRTYP   DIM        2              1   Record Type (AA) e.g. 'ER'
ACEHACOD   DIM        4              3   Agency Code (XXXX)
ACEHFILE   DIM       12              7   Input file name (AAANNNNN.AAA)
.                                          acronym (AAA)
.                                          batch number (NNNNN)
.                                          extension (.AAA) e.g. '.ndm'
.
ACEHNUMR   DIM        5             19   Number of records (NNNNN)
ACEHSDAT   DIM        8             24   Date sent (CCYYMMDD)
ACEHPENV   DIM        4             32   MOH processing environment (AAAA)
.                                          "PROD" or "COMP"
.
.End of record                      37
.
.
.          Error (Failure) file fields
.
.Name      Type    Size      Start Loc   Description
.----      ----    ----      ---------   -----------
ACERRTYP   DIM        2              1   Record Type (AA) e.g. 'ER'
ACERENUM   DIM        8              3   Error Number (AAANNNNA)
ACERETXT   DIM       70             11   Error Text (message returned by NBRS)
.
.End of record                      82
.
.
.
.*******************************************************************************
.*                  Program Variables                                          *
.*******************************************************************************
ACKCOUNT  FORM      5                  * Ack record count (including header)
BATCHNUM  DIM       5                  * Batch Number
CMDLINE   DIM       200                * Command Line
CURRDATE  DIM       8
DHBCODEV  DIM       3                  * DHB Code
WLBOOKID  DIM       9                  * WL Booking ID
DIM14     DIM       14                 * For PMS unique identifier
DIM70     DIM       70
ERRCOUNT  FORM      5                  * Error record count (including header)
ERRINDEX  FORM      2                  * Error count index
ERRMESSG  DIM       100                * Error message
FILENAME  DIM       12                 * Input filename (with extension)
FILEPATH  DIM       60                 * Input file path
FILETYPE  FORM      1                  * Acknowledgement file type
.                                          1 - ".ERR"
.                                          2 - ".NBK"
FULLFPTH  DIM       100                * Input file path (full)
INFILNAM  DIM       8                  * Input filename (without extension)
NUMBRECS  FORM      5                  * Error record count (including header)
.
TEMPLBID  DIM       9                  * Waiting List Booking ID (wattr1af)
TEMPPNHI  DIM       8                  * Patient NHI number
TEMPBSCD  DIM       2                  * NBRS Booking Status Code
TEMPBSDT  DIM       8                  * Booking Status Date 
TEMPFACI  DIM       4                  * Event Facility Code
TEMPXDAT  DIM       8                  * Extract Sent Date 
TEMPBTCH  DIM       5                  * Batch Number
TEMPSTAT  DIM       1                  * Processing Status
TEMPLINE  DIM       5                  * Original Input File Line No.
TEMPRDET  DIM       200                * Extract record BE details text
.
USERID    DIM       10
RECFNDFL  FORM      1                  * record ('watnbdaf') found
.
.
.*******************************************************************************
.*                  Program Constants                                          *
.*******************************************************************************
ENDOFRPT  INIT      "***  END OF REPORT  ***"
.
.*******************************************************************************
.*                  Program Version Information                                *
.*******************************************************************************
SP100     INIT      "                                                  ":
                    "                                                  "
PRGID     INIT      "IBANHI13"
PRGNAM    INIT      "Load NBRS Acknowledgement                         "
VERSION   INIT      "V12.00.00"
+
.******************************************************************************
.*                                  MAIN0000                                  *
.*                               Main Procedure                               *
.******************************************************************************
MAIN0000  CALL      INIT0000           * Initialise variables & files
          BRANCH    EXIT,MAIN9999
.
MAIN1000  CALL      OPTN0000           * Get run option
          BRANCH    COPTION,MAIN1100
          GOTO      MAIN9999
.   
MAIN1100  CALL      KEYDIR00           * Keyin input file path
          BRANCH    EXIT,MAIN9100
.
          MOVE      "DHBXXXXX",INFILNAM
MAIN1200  CALL      KEYFIL00           * Keyin input filename
          BRANCH    EXIT,MAIN9200
.
          CALL      CHKFIL00           * Check input file exists (.ERR / .NBK)
          BRANCH    EXIT,MAIN9300
.
          CALL      KEYUID00           * Keyin user ID
          BRANCH    EXIT,MAIN1000
.
          CALL      CONTQST            * Ok to continue ?
          BRANCH    CEXIT,MAIN3000:    * yes
                          MAIN1000:    * no
                          MAIN1000     * cancel
.
MAIN3000  CALL      REFRMF00           * Reformat input file to pipe delimited
          BRANCH    OVRCD,MAIN9400
.
          CALL      OPNFIL00           * Open input file
          BRANCH    EXIT,MAIN9500
.
          CALL      PROC0000           * Process ack / error records
          BRANCH    EXIT,MAIN9600
.
          CALL      PRREP000           * Print Report
          CALL      KILL0000           * Close and delete temp input file
          GOTO      MAIN9999
.
MAIN9100  CALL      PRHEAD00
          PRINT     *N,"Invalid input file path - ",ERRMESSG
          PRINT     *N,*N,ENDOFRPT          * Print End of Report
          GOTO      MAIN9999
.
MAIN9200  CALL      PRHEAD00
          PRINT     *N,"Invalid input file name - ",ERRMESSG
          PRINT     *N,*N,ENDOFRPT          * Print End of Report
          GOTO      MAIN9999
.
MAIN9300  CALL      PRHEAD00
          PRINT     *N,"No matching files found!"
          PRINT     *N,*N,ENDOFRPT          * Print End of Report
          GOTO      MAIN9999
.
MAIN9400  CALL      PRHEAD00
          PRINT     *N,"Error converting comma separated file - ",FILENAME
          PRINT     *N,*N,ENDOFRPT          * Print End of Report
          GOTO      MAIN9999
.
MAIN9500  CALL      PRHEAD00
          PRINT     *N,"Failed to open input file - ",FILENAME
          PRINT     *N,*N,ENDOFRPT          * Print End of Report
          GOTO      MAIN9999
.
MAIN9600  CALL      PRHEAD00
          PRINT     *N,"Error reading input file - ",ERRMESSG
          PRINT     *N,*N,ENDOFRPT          * Print End of Report
          GOTO      MAIN9999
.
MAIN9999  CHAIN     PGM
+
.******************************************************************************
.*                                 INIT0000                                   *
.*                  Initialize Variables & Open Files                         *
.******************************************************************************
INIT0000  CALL      DISPHEAD                * Display screen heading
.
          OPEN      CONTROLF,"controlf"     * Inpatient CONTROL File
.
          DISPLAY   *P64:24,"watnbhaf";
          OPEN      WATNBHA1,"watnbhaf"     * NBRS Transmission File Batches
.
          DISPLAY   *P64:24,"watnbdaf";
          OPEN      WATNBDA1,"watnbdaf"     * NBRS Extract Records
.
          DISPLAY   *P64:24,"watnbdaf";
          OPEN      WATNBDA4,"watnbdaf"     * NBRS Extract Records
.
          MOVE      ZERO,ACKCOUNT
          MOVE      ZERO,ERRCOUNT
          MOVE      SP70,FILEPATH
          MOVE      SP70,FILENAME
          MOVE      SP70,INFILNAM
          MOVE      ZERO,NUMBRECS
.
          MOVE      SP100,ERRMESSG
          MOVE      ZERO,CPAGENO            * Init Page Count
.
INIT9999  RETURN
+
.******************************************************************************
.*                                 KILL0000                                   *
.*                  Close HL7 input file and remove it from the filesystem    *
.******************************************************************************
KILL0000  MOVE      ZERO,EXIT
          CLOSE     INPTFILE                * close HL7 input file
.
          CLEAR     CMDLINE
          APPEND    "rm -f ",CMDLINE        * remove it (forcefully)
          APPEND    FULLFPTH,CMDLINE
          APPEND    " ",CMDLINE
          APPEND    FILEPATH,CMDLINE
          APPEND    INFILNAM,CMDLINE
          APPEND    ".hl7",CMDLINE
          APPEND    " 2> /dev/null",CMDLINE * log output, hide errors
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID          * execute conversion script
.
          CMATCH    "0",TASKID
          GOTO      KILL9100 IF NOT EQUAL
.
          GOTO      KILL9999
.
KILL9100  MOVE      ONE,EXIT
KILL9999  RETURN
+
.******************************************************************************
.*                           OPTN0000                     Called by: MAIN0000 *
.*                  Get user options or exit                                  *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                            *
.*                        TRUE  (1)  Exit option selected                     *
.*              COPTION - option selected                                     *
.******************************************************************************
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Load NBRS Acknowledgement files"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * Exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.******************************************************************************
.*                           KEYDIR00                     Called by: MAIN0000 *
.*                  Keyin directory paths to save original file               *
.******************************************************************************
KEYDIR00  READ      CONTROLF,HUND24;*51,PTCNNBED
          PACK      FILEPATH,PTCNNBED,SP70
          MOVE      SP100,ERRMESSG
.
KEYDIR10  KEYIN     *P1:10,*EF,"Keyin input source path: ":
                    *P10:11,*EL,*DV,*RV,FILEPATH:
                    *P10:11,*V2LON,FILEPATH;
.
          ENDSET    FILEPATH  
          APPEND    SP70,FILEPATH
          RESET     FILEPATH
.
          MATCH     SP70,FILEPATH
          GOTO      KEYDIR20 IF NOT EQUAL
          MOVE      "Empty file path",ERRMESSG
          DISPLAY   *P1:24,*EL,*B,"Empty file path. ";
          CALL      HITENTER
          GOTO      KEYDIR91                * exit on empty input
.
KEYDIR20  SQUEEZE   FILEPATH
          CMATCH    EXITCHAR,FILEPATH       * exit on slash (\) input
          GOTO      KEYDIR30 IF NOT EQUAL
          MOVE      "\ character detected",ERRMESSG
          DISPLAY   *P1:24,*EL,*B,"\ character detected. ";
          CALL      HITENTER
          GOTO      KEYDIR91                * exit on empty input
.
KEYDIR30  PACK      DIM70,FILEPATH,SP70
          CALL      VALD0000                * check if it's a valid directory
          BRANCH    EXIT,KEYDIR91
.
          MOVE      ZERO,EXIT
          GOTO      KEYDIR9999
.
KEYDIR91  MOVE      ONE,EXIT
.
KEYDIR99  DISPLAY   *P1:24,*EL;
          RETURN
+
.******************************************************************************
.*                           VALD0000                     Called by: KEYDIR00 *
.*                  Check if it's a valid directory                           *
.******************************************************************************
VALD0000  MOVE      ZERO,EXIT
          MOVE      SP100,ERRMESSG
.
          SQUEEZE   DIM70
          ENDSET    DIM70
          CMATCH    SLASH,DIM70
          IF        !@EQUAL
            MOVE      "Path must end with a slash (/) ",ERRMESSG
            DISPLAY   *P1:24,*EL,*B,"Path must end with a slash (/) ";
            CALL      HITENTER
            GOTO      VALD9100
          ENDIF
          RESET     DIM70
.
          PACK      CMDLINE,SP70,SP70
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM70,CMDLINE
          APPEND    " 2> /dev/null",CMDLINE      * log output, hide errors
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID               * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Path does not exist ",ERRMESSG
            DISPLAY   *P1:24,*EL,*B,"Path does not exist. ";
            CALL      HITENTER
            GOTO      VALD9100
          ENDIF
          GOTO      VALD9999
.
VALD9100  MOVE      ONE,EXIT            * Not valid
          GOTO      VALD9999
.
VALD9999  RETURN
+
.******************************************************************************
.*                               KEYFIL00                 Called by: MAIN0000 *
.*                  Key in input source filename                              *
.******************************************************************************
KEYFIL00  MOVE      ZERO,EXIT
          MOVE      SP100,ERRMESSG
.
KEYFIL10  KEYIN     *P1:13,*EL,"Keyin input filename: ":
                    *P23:13,*EL,*DV,*RV,INFILNAM:
                    *P23:13,INFILNAM;
.
          MOVE      ZERO,F2
          MOVELPTR  INFILNAM,F2
          COMPARE   ZERO,F2            * empty input?
          GOTO      KEYFIL91 IF EQUAL
.
          ENDSET    INFILNAM
          APPEND    SP70,INFILNAM
          RESET     INFILNAM
          STRIP     INFILNAM
.
KEYFIL90  MOVE      ZERO,EXIT
          GOTO      KEYFIL99
.
KEYFIL91  MOVE      "Empty filename",ERRMESSG
          DISPLAY   *P1:24,*EL,*B,"Empty filename. ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
KEYFIL99  RETURN
+
.******************************************************************************
.*                               KEYUID00                 Called by: MAIN0000 *
.*                  Key in user ID                                            *
.******************************************************************************
KEYUID00  MOVE      ZERO,EXIT
          MOVE      SP70,USERID
          KEYIN     *P1:15,*EL,"Keyin user ID: ":
                    *P16:15,*EL,*DV,*RV,USERID:
                    *P16:15,USERID;
.
          MATCH     SP70,USERID
          GOTO      KEYUID91 IF EQUAL
.
          GOTO      KEYUID99
.
KEYUID91  MOVE      ONE,EXIT
KEYUID99  RETURN
+
.******************************************************************************
.*                               CHKFIL00                 Called by: MAIN0000 *
.*                  Checks input source filename exists (as ".ERR" or ".NBK") *
.******************************************************************************
CHKFIL00  MOVE      ZERO,OVRCD
.
.         Error file type?
.
          CLEAR     FILENAME
          APPEND    INFILNAM,FILENAME
          APPEND    ".ERR",FILENAME
          RESET     FILENAME
.
          CLEAR     FULLFPTH
          APPEND    FILEPATH,FULLFPTH
          APPEND    FILENAME,FULLFPTH
          RESET     FULLFPTH
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      INPTFILE,FULLFPTH
          TRAPCLR   IO
          BRANCH    OVRCD,CHKFIL10
.
          MOVE      ONE,FILETYPE       * Error file type
          GOTO      CHKFIL90         
.
.         Acknowledgement file type?
.
CHKFIL10  CLEAR     FILENAME
          APPEND    INFILNAM,FILENAME
          APPEND    ".NBK",FILENAME
          RESET     FILENAME
.
          CLEAR     FULLFPTH
          APPEND    FILEPATH,FULLFPTH
          APPEND    FILENAME,FULLFPTH
          RESET     FULLFPTH
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      INPTFILE,FULLFPTH
          TRAPCLR   IO
          BRANCH    OVRCD,CHKFIL91
.
          MOVE      TWO,FILETYPE       * Acknowledgement file type
          GOTO      CHKFIL90
.
CHKFIL90  CLOSE     INPTFILE
          MOVE      ZERO,EXIT
          GOTO      CHKFIL99
.
CHKFIL91  DISPLAY   *P1:24,*EL,*B,"Input file(s) - '",*+,INFILNAM,*-,"'":
                    " not found.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
CHKFIL99  RETURN
+
.******************************************************************************
.*                               OPNFIL00                 Called by: MAIN0000 *
.*                  Open input source file (HL7)                              *
.******************************************************************************
OPNFIL00  MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      INPTFILE,FULLFPTH
          TRAPCLR   IO
          BRANCH    OVRCD,OPNFIL91
.
          GOTO      OPNFIL99
.
OPNFIL91  MOVE      ONE,EXIT
OPNFIL99  RETURN
+
.******************************************************************************
.*                           REFRMF00                     Called by: GFIL0000 *
.*        Reformat comma delimited input file to HL7 (pipe delimited)         *
.******************************************************************************
REFRMF00  MOVE      ZERO,EXIT
          CLEAR     CMDLINE
          APPEND    "ibanhi12.us1 ",CMDLINE
          APPEND    FULLFPTH,CMDLINE
          APPEND    " ",CMDLINE
          APPEND    FILEPATH,CMDLINE
          APPEND    INFILNAM,CMDLINE
          APPEND    ".hl7",CMDLINE
          APPEND    " 2> /dev/null",CMDLINE * log output, hide errors
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID          * execute conversion script
.
          DISPLAY   *P1:24,*EL,"Converting comma separated file..."
          DISPLAY   *W2                     * Wait 2 seconds
.
          CMATCH    "0",TASKID
          GOTO      REFRMF91 IF NOT EQUAL
.
          CLEAR     FULLFPTH
          APPEND    FILEPATH,FULLFPTH
          APPEND    INFILNAM,FULLFPTH
          APPEND    ".hl7",FULLFPTH
.
          GOTO      REFRMF99
.
REFRMF91  MOVE      ONE,EXIT
.
REFRMF99  RETURN
+
.******************************************************************************
.*                                  PROC0000             Called by : MAIN0000 *
.*        Process error / acknowledgement records in the input source file    *
.*                                                                            *
.******************************************************************************
PROC0000  MOVE      ZERO,ACKCOUNT
          MOVE      ZERO,ERRCOUNT
          DISPLAY   *P1:24,*EL,"Processing input source file..."
          CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          CLOCK     TIME,CTIMEIS
.
          BRANCH    FILETYPE,PROC1000,PROC2000
          GOTO      PROC9000
.
.         Process Error File (".ERR")...
.
PROC1000  READ      INPTFILE,SEQ;ACEHRTYP,ACEHACOD,ACEHFILE,ACEHNUMR,ACEHSDAT:
                                 ACEHPENV
          GOTO      PROC9000 IF OVER
.
.         Read NBRS Transmission header record for a 'Sent' batch
.
          UNPACK    ACEHFILE,DHBCODEV,BATCHNUM
          PACK      KEY17,ACEHSDAT,DHBCODEV,BATCHNUM,ONE,SP70
          CALL      RDWTNBH1                * read watnbhaf record
          BRANCH    OVRCD,PROC9300
.
          MOVE      FIVE,WTNHSTAT           * File Failure
          MOVE      USERID,WTNHUSRS         * User ID
          MOVE      CURRDATE,WTNHUDAT       * Current date
          MOVE      CTIMEIS,WTNHUTIM        * Current time
.
          CALL      UPWTNBH1
          MOVE      ONE,ERRCOUNT            * include header in count
.
PROC1100  READ      INPTFILE,SEQ;ACERRTYP,ACERENUM,ACERETXT
          GOTO      PROC9000 IF OVER
.
.         Update the status of all matching (batch no.) 'watnbdaf' records 
.         to 'File Failure'.
.
          PACK      KEY32,BATCHNUM,SP70
          CALL      RSWTNBD4
PROC1200  CALL      RKWTNBD4
          BRANCH    OVRCD,PROC9000
.
          MATCH     BATCHNUM,WTNDBTCH       * we still on the same batch?
          GOTO      PROC9000 IF NOT EQUAL
.
          MOVE      FIVE,WTNDSTAT           * File Failure
          MOVE      ACERENUM,WTNDMSGN       * Error Number
          MOVE      ACERETXT,WTNDMSGT       * Error Text
          MOVE      USERID,WTNDUSRS         * User ID
          MOVE      CURRDATE,WTNDUDAT       * Current date
          MOVE      CTIMEIS,WTNDUTIM        * Current time
.
          CALL      UPWTNBD4
          ADD       ONE,ERRCOUNT
.
          GOTO      PROC1200
.
.
.         Process Acknowledgement File (".NBK")...
.
PROC2000  READ      INPTFILE,SEQ;ACAHRTYP,ACAHACOD,ACAHFILE,ACAHNREC,ACAHSDAT:
                                 ACAHFDAT,ACAHFTIM,ACAHENVT,ACAHLVER,ACAHNUMP:
                                 ACAHNUMD,ACAHNUMI,ACAHNUME,ACAHNUMW,ACAHLDAT
          GOTO      PROC9000 IF OVER
.
          MATCH     "BH",ACAHRTYP           * header record ('BH')?
          GOTO      PROC9400 IF NOT EQUAL
.
.         Read NBRS Transmission header record
.
          UNPACK    ACAHFILE,DHBCODEV,BATCHNUM
          PACK      KEY17,ACAHSDAT,DHBCODEV,BATCHNUM,ONE,SP70
          CALL      RDWTNBH1                * read watnbhaf record
          BRANCH    OVRCD,PROC9300
.
          MOVE      ZERO,NUMBRECS
          MOVE      WTNHRECS,NUMBRECS
.
          MOVE      ZERO,F5
          MOVE      ACAHNUMP,F5
          COMPARE   F5,NUMBRECS             * number of records sent match?
          GOTO      PROC9200 IF NOT EQUAL         
. 
          MOVE      TWO,WTNHSTAT            * Ack File Loaded
          MOVE      ACAHLDAT,WTNHLDAT       * Date file loaded at MOH
.
          MOVE      ACAHNUMP,WTNHPROC       * no. records processed
          RJUSTIFY  WTNHPROC
          REP       " 0",WTNHPROC
.
          MOVE      ACAHNUMD,WTNHRDEL       * no. records deleted
          RJUSTIFY  WTNHRDEL
          REP       " 0",WTNHRDEL
.
          MOVE      ACAHNUMI,WTNHRINS       * no. records inserted
          RJUSTIFY  WTNHRINS
          REP       " 0",WTNHRINS
.
          MOVE      ACAHNUME,WTNHRERR       * no. records in error
          RJUSTIFY  WTNHRERR
          REP       " 0",WTNHRERR
.
          MOVE      ACAHNUMW,WTNHRWRN       * no. records with warnings
          RJUSTIFY  WTNHRWRN
          REP       " 0",WTNHRWRN
.
          MOVE      USERID,WTNHUSRS         * User ID
          MOVE      CURRDATE,WTNHUDAT       * Current date
          MOVE      CTIMEIS,WTNHUTIM        * Current time
.
          CALL      UPWTNBH1
          MOVE      ONE,ACKCOUNT            * include header in count
.
.         Read NBRS Acknowledgement (BE / RJ) records...
.
PROC2100  READ      INPTFILE,SEQ;ACRJRTYP;
          MOVE      ZERO,F1
          MOVELPTR  ACRJRTYP,F1
          COMPARE   ZERO,F1
          GOTO      PROC9000 IF EQUAL
.
          MATCH     "BE",ACRJRTYP
          GOTO      PROC2104 IF NOT EQUAL
.
          MOVE      ZERO,RECFNDFL
.
.         Read the rest of the BE fields...
.
          READ      INPTFILE,SEQ;BEACODE,BEBOOKF,BELBEID,BEBSCOD:
                                 BEBSDAT,BEHCUID,BEDRFSA,BEBRSRC,BEDOFSA:
                                 BECADAT,BECSCOR,BECSSID,BEDCGIV,BEDBMAD:
                                 BEDBTRE,BEPHSVP,BETRTAG,BETRFAC,BELHEID:
                                 BEHSPEC,BEBPROC,BECLCOD,BECLCTT,BECLSYS:
                                 BEDEFBY,BEDECAT,BEEXCAT,BESPPFL,BESEQNC:
                                 BECLGRP,BECLRES,BEDOMCL,BEASSCD,BEASSGR
          GOTO      PROC9000 IF OVER
.
          MOVE      ZERO,F1
          MOVELPTR  BEBSCOD,F1
          IF        F1=0
            MOVE      SP70,BEBSCOD          * Blank Booking Status Code
          ENDIF
.
          MOVE      ZERO,F1
          MOVELPTR  BEBSDAT,F1
          IF        F1=0
            MOVE      SP70,BEBSDAT          * Blank Booking Status Date
          ENDIF
.
          MOVE      SP70,WLBOOKID
          MOVE      SP70,DIM14
          MOVE      BELBEID,DIM14           * BELBEID will be zero-padded (LTR)
.
PROC2101  CMATCH    "0",DIM14
          GOTO      PROC2102 IF NOT EQUAL
          BUMP      DIM14
          GOTO      PROC2103 IF EOS
          GOTO      PROC2101
.
PROC2102  MOVE      DIM14,WLBOOKID
          RJUSTIFY  WLBOOKID
.
PROC2103  READ      INPTFILE,SEQ;ACRJRTYP;  * Position after next 'AC' or 'RJ'
.
.         Read the rest of the 'AC' or 'RJ' fields if applicable; otherwise
.         proceed to read in the rest of 'WN' or 'ER' fields...
. 
PROC2104  MATCH     "WN",ACRJRTYP
          GOTO      PROC2120 IF EQUAL
.
          MATCH     "ER",ACRJRTYP
          GOTO      PROC2130 IF EQUAL
.
          READ      INPTFILE,SEQ;ACRJLINE,ACRJMSGN,ACRJMSGT
          GOTO      PROC9000 IF OVER
.
          RJUSTIFY  ACRJLINE                * Original Input File Line No.
.
.         Loop through our batch in watnbdaf until we find our matching record
.
          MOVE      "00",WTNDERRC
          PACK      KEY31,WLBOOKID,BEBSCOD,BEBSDAT,ACRJLINE,BATCHNUM,WTNDERRC,SP70
          CALL      RDWTNBD1
          BRANCH    OVRCD,PROC2100
.
          ADD       ONE,ACKCOUNT
          MOVE      ONE,RECFNDFL
          MOVE      WTNDERRC,ERRINDEX       * Error Count Index
.
          MATCH     "AC",ACRJRTYP           * 'Accepted' ack type?
          GOTO      PROC2110 IF NOT EQUAL   * could be 'Rejected' or 'Warning'
.
          MOVE      ACRJRTYP,WTNDAKRT       * Ack Record Type ("AC")
          MOVE      "3",WTNDSTAT            * Accepted
.
          MOVE      ACRJMSGN,WTNDMSGN       * Message Number
          MOVE      ACRJMSGT,WTNDMSGT       * Message Text
          MOVE      USERID,WTNDUSRS         * User ID
          MOVE      CURRDATE,WTNDUDAT       * Current date
          MOVE      CTIMEIS,WTNDUTIM        * Current time
.
          IF        RECFNDFL=1
            CALL      UPWTNBD1
            CALL      SAVTMP00
          ENDIF
          GOTO      PROC2100
.
PROC2110  MATCH     "RJ",ACRJRTYP
          GOTO      PROC2100 IF NOT EQUAL
.
          MOVE      ACRJRTYP,WTNDAKRT       * Ack Record Type ("RJ")
          MOVE      "2",WTNDSTAT            * Error
.
          MOVE      ACRJMSGN,WTNDMSGN       * Message Number
          MOVE      ACRJMSGT,WTNDMSGT       * Message Text
          MOVE      USERID,WTNDUSRS         * User ID
          MOVE      CURRDATE,WTNDUDAT       * Current date
          MOVE      CTIMEIS,WTNDUTIM        * Current time
.
          IF        RECFNDFL=1
            CALL      UPWTNBD1
            CALL      SAVTMP00
          ENDIF
          GOTO      PROC2100
.
PROC2120  MATCH     "WN",ACRJRTYP
          GOTO      PROC2130 IF NOT EQUAL
.
          MOVE      "6",WTNDSTAT            * Accepted with Warning
          GOTO      PROC2140
.
PROC2130  MATCH     "ER",ACRJRTYP
          GOTO      PROC2100 IF NOT EQUAL
.
          MOVE      "2",WTNDSTAT            * Error
.
PROC2140  READ      INPTFILE,SEQ;ERWNMSGN,ERWNMSGT
          GOTO      PROC9000 IF OVER
.
          COMPARE   ONE,RECFNDFL
          GOTO      PROC2100 IF NOT EQUAL
.
          CALL      CLWATNBD
          CALL      MOVTMP00
.
          ADD       ONE,ERRINDEX
          MOVE      ERRINDEX,DIM2
          REP       " 0",DIM2
.
          PACK      KEY31,WTNDLBID,WTNDBSCD,WTNDBSDT,WTNDLINE,WTNDBTCH,DIM2,SP70
          CALL      RDWTNBD1
          IF        OVRCD=1
            CALL      MOVWTD00
            TRAP      OVERCOND IF IO
            CALL      WRWTNBD1
            TRAPCLR   IO
            BRANCH    OVRCD,PROC2100
          ELSE
            CALL      MOVWTD00
            CALL      UPWTNBD1
          ENDIF
.
          GOTO      PROC2100
.
PROC9000  DISPLAY   *P1:24,*EL,"Processing complete!"
          MOVE      ZERO,EXIT
          GOTO      PROC9999
.
PROC9100  MOVE      ONE,EXIT
          GOTO      PROC9999
.
PROC9200  MOVE      "Number of records returned mismatch",ERRMESSG
          MOVE      ONE,EXIT
          GOTO      PROC9999
.
PROC9300  MOVE      "No matching NBRS Transmission Header ('watnbhaf') record found with a status of 'Sent'.",ERRMESSG
          MOVE      ONE,EXIT
          GOTO      PROC9999
.
PROC9400  MOVE      "No header record ('BH') found!",ERRMESSG
          MOVE      ONE,EXIT
          GOTO      PROC9999
.
PROC9999  RETURN
+
.******************************************************************************
.*                  MOVWTD00                             Called by : PROC0000 *
.*                                                                            *
.*        Move values into file vars (watnbdaf) for write/update              *
.******************************************************************************
MOVWTD00  MOVE      ACRJRTYP,WTNDAKRT       * Ack  Record Type
.
          MATCH     "WN",ACRJRTYP
          IF        @EQUAL
            MOVE      "6",WTNDSTAT
          ENDIF
.
          MATCH     "ER",ACRJRTYP
          IF        @EQUAL
            MOVE      "2",WTNDSTAT
          ENDIF
.
          MOVE      DIM2,WTNDERRC
          MOVE      ERWNMSGN,WTNDMSGN
          MOVE      ERWNMSGT,WTNDMSGT
          MOVE      USERID,WTNDUSRS         * User ID
          MOVE      CURRDATE,WTNDUDAT       * Current date
          MOVE      CTIMEIS,WTNDUTIM        * Current time
.
MOVWTD99  RETURN
+
.******************************************************************************
.*                                  SAVTMP00             Called by : PROC0000 *
.*                                                                            *
.*        Save watnbdaf record values to temp vars                            *
.******************************************************************************
SAVTMP00  MOVE      WTNDLBID,TEMPLBID
          MOVE      WTNDPNHI,TEMPPNHI
          MOVE      WTNDBSCD,TEMPBSCD
          MOVE      WTNDBSDT,TEMPBSDT
          MOVE      WTNDFACI,TEMPFACI
          MOVE      WTNDXDAT,TEMPXDAT
          MOVE      WTNDBTCH,TEMPBTCH
          MOVE      WTNDSTAT,TEMPSTAT
          MOVE      WTNDLINE,TEMPLINE
          MOVE      WTNDRDET,TEMPRDET
.
SAVTMP99  RETURN
+
.******************************************************************************
.*                                  MOVTMP00             Called by : PRERR000 *
.*                                                                            *
.*        Move temp vars to watnbdaf file fields                              *
.******************************************************************************
MOVTMP00  MOVE      TEMPLBID,WTNDLBID
          MOVE      TEMPPNHI,WTNDPNHI
          MOVE      TEMPBSCD,WTNDBSCD
          MOVE      TEMPBSDT,WTNDBSDT
          MOVE      TEMPFACI,WTNDFACI
          MOVE      TEMPXDAT,WTNDXDAT
          MOVE      TEMPBTCH,WTNDBTCH
          MOVE      TEMPSTAT,WTNDSTAT
          MOVE      TEMPLINE,WTNDLINE
          MOVE      TEMPRDET,WTNDRDET
.
MOVTMP99  RETURN
+
.******************************************************************************
.*                                  PRHEAD00             Called by : MAIN0000 *
.*                                                                   PRREP000 *
.*        Print report header lines                                           *
.******************************************************************************
PRHEAD00  CALL      HEAD132                      * Print New Page Header
.
          PRINT     *N,"File path entered: ",FILEPATH
          PRINT     *N,"File name entered: ",INFILNAM,*N
.
PRHEAD99  RETURN
+
.******************************************************************************
.*                                  PRREP000             Called by : MAIN0000 *
.*        Print report totals (acknowledgement / error)                       *
.******************************************************************************
PRREP000  CALL      PRHEAD00           * Print report header
.
          PRINT     *N,"File found: ",FILENAME,*N
          COMPARE   ONE,FILETYPE       * Error input file? (".ERR")
          GOTO      PRREP200 IF EQUAL
.
PRREP100  PRINT     *N,"NBRS header record status set to '2' - ":
                    "Acknowledgement File Loaded.",*N
          PRINT     *N,"Number of NBRS records (including header) updated: ":
                    ACKCOUNT,*N
.
          GOTO      PRREP900
          
PRREP200  PRINT     *N,"NBRS header record status set to '5' - File Failure.",*N
          PRINT     *N,"Number of NBRS records (including header) updated: ":
                    ERRCOUNT,*N
.
PRREP900  PRINT     *N,*N,ENDOFRPT          * Print End of Report
.
PRREP999  RETURN
+
*******************************************************************************
          INC       STD001IO           * Standard Include
          INC       CLWATNBH           * Clear file vars for watnbhaf
          INC       CLWATNBD           * Clear file vars for watnbdaf
.
          INC       WATNBDIO/INC       * NBRS Extract Records
          INC       WATNBHIO/INC       * NBRS Transmission File Batches
