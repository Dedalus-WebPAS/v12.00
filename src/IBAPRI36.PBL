.******************************************************************************
.* System   : PRIVATE PRACTICE SYSTEM                                         *
.* Program  : IBAPRI36                                                        *
.* Desc     : RECREATE FINANCIAL SUMMARY                                      *
.******************************************************************************
.* Date     : 06/12/91                                                        *
.* Author   : DIG                                                             *
.* Comment  :                                                                 *
.* Mods     :                                                                 *
.*        V11.04.01 11/04/2024  J.Tan         TSK 0941662                     *
.*                  Mod PRDTGSTM - GST of Total amount(Item amount x Quantity)*
.*        V10.13.01 06/08/2018  Richa Phogat  TSJ 0848506                     *
.*                  Extended keylength for PRFNCODE from 24 to 28             *
.*                  Extended file length for PRITM1XX,PRITM2XX from 160 to 164*
.*                  Extended keylength for RDTMPR2 from KEY35 to KEY39
.*        V10.07.01 13/10/2015  J.Tan         CAR 310329                      *
.*                  Mods to use PRDTEFFD-Date item assigned to Fees Invoiced  *
.*        V10.04.01 15/04/2014  J.Tan          CAR 261630                     *
.*                  Removed port number from temp file name                   *
.*        V9.12.01  19/06/09 J.Tan    CAR 198811                              *
.*                  Fixed Credit Notes GST                                    *
.*        V9.11.01  07/01/09 J.Tan    CAR 178415                              *
.*                  Added Medical Practice to prifinaf file                   *
.*        V9.04.01  03/08/05 J.Tan    CAR 62750                               *
.*                  Removed redefined amount variables                        *
.*        V9.03.01  01/04/2003  J Tan                                         *
.*                  Mods for credit note                                      *
.*        V9.02.00  02/10/2002  J Tan                                         *
.*                  Ported from 5.10                                          *
.*        V5.08.02  28/06/2000  J Tan                                         *
.*                  Rename index file name for prifigaf                       *
.*        V5.08.B01 12/04/2000 J.Tan                                          *
.*                  Mods for GST                                              *
.*        V5.07.02  15/10/1999  D.Di Paola                                    *
.*                  Recompiled for PRIITMFD                                   *
.*        V5.07.01  09/06/1999  Greg Horvat                                   *
.*                  Recompiled for PRIINVIO - Fixed problem with direct read  *
.*                                                                            *
.*            V6.00.01 07/10/92  Steve Armstrong                              *
.*                     Modified for alphanumeric debtor number                *
.*            V6.00.02 01/07/93  DIG                   SRF : 123572           *
.*                     Fixed incorrect read on temp file when going to write  *
.*                     to PRIFINFD                                            *
.*            V6.00.03 01/07/93  DIG                   SRF : 123572           *
.*                     Changed to write set code rather than MBS item group   *
.*                     when setting up item group for PATFINS. Also commented *
.*                     out code to put previous financial years figures for   *
.*                     receipts & journals into the last year field of the    *
.*                     current financial year.                                *
.*            V6.00.04 03/08/93  DIG                   SRF : 124254           *
.*                     Changed to write cash receipts figure as a +.          *
.*            V6.00.05 01/12/1993  Graeme Williams                            *
.*                     Post journals with the opposite sign to the            *
.*                     patient system (as per SRF 124385)                     *
.*        V5.03.01  14/08/1995  Steve Armstrong                               *
.*                  Recompiled for PRIITMFD                                   *
.******************************************************************************
          INC       STD001FD
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
          INC       PATDRGFD/INC
          INC       PRICONFD/INC
          INC       PRIDTRFD/INC
          INC       PRIFCIFD/INC
          INC       PRIFINFD/INC
          INC       PRIFIGFD/INC
          INC       PRIINVFD/INC
          INC       PRIITMFD/INC
+
.**********************************************************************
.*                            TEMP FILES                              *
.**********************************************************************
PRITM1XX  IFILE     SQL, FIXED=164, KEY="U1-4,5-5,6-33,154-159"
PRITM2XX  IFILE     SQL, FIXED=164, KEY="U1-4,5-5,6-33,154-159"
.
. NAME     TYPE   LENGTH   PHYSICAL  START LOC.   DESCRIPTION
. ----     ----   ------   --------  ----------   -----------
.PRFNYEAR   DIM       4        4          1     Financial Year
.PRFNTYPE   DIM       1        1          5     Financial Type
.                                               A = Fees Generated
.                                               B = Cash Received
.                                               C = Journals
.                                               D = Merchant Cards (Claimed)
.                                               E = Merchant Cards (Paid)
.                                               F = Merchant Cards (Commission)
.                                               G = Merchant Cards (Journals)
.PRFNCODE   DIM       28       28         6     Finance Code
.                                               For Fees
.                                                   MWWWXXYYYYYYYYYZZZ
.                                                      (WWW - Item Group)
.                                                      (XX - Item flag)
.                                                      (YYYYYYYYY - Item Code)
.                                                      (ZZZ - Subitem code)
.                                               For Receipts
.                                                   A    = From Patient
.                                                   BXXXXXX = From Health Fund
.                                                   IXXXXXX = From Insurance Co
.                                                   C    = From Govt. Dept.
.                                               For Journals
.                                                   BD = Bad Debts
.                                                   CR = Credits
.                                                   RF = Refunds
.                                                   WCXXX = Merchant Commission
.                                                          (XXX- Merchant Code)
.                                                   WJXXX = Merchant Journal
.                                                          (XXX- Merchant Code)
.                                                   WO = Write Off
.                                               For Merchant Cards
.                                                   XXX = Merchant Code
.PRFNPERA   FORM     12.2    8        34      Period Amount
.PRFNPR01   FORM     12.2    8        42      Amount for Period 1
.PRFNPR02   FORM     12.2    8        50      Amount for Period 2
.PRFNPR03   FORM     12.2    8        58      Amount for Period 3
.PRFNPR04   FORM     12.2    8        66      Amount for Period 4
.PRFNPR05   FORM     12.2    8        74      Amount for Period 5
.PRFNPR06   FORM     12.2    8        82      Amount for Period 6
.PRFNPR07   FORM     12.2    8        90      Amount for Period 7
.PRFNPR08   FORM     12.2    8        98      Amount for Period 8
.PRFNPR09   FORM     12.2    8       106      Amount for Period 9
.PRFNPR10   FORM     12.2    8       114      Amount for Period 10
.PRFNPR11   FORM     12.2    8       122      Amount for Period 11
.PRFNPR12   FORM     12.2    8       130      Amount for Period 12
.PRFNPR13   FORM     12.2    8       138      Amount for Period 13
.PRFNLAST   FORM     12.2    8       146      Last Year Amount
.PRFNMPRA   DIM       6      6       154      Medical Practice
.PRFNSPAR   DIM       4      4       160      Spare
.
.End of Record                       164 
+
.**********************************************************************
.*                           CONSTANTS                                *
.**********************************************************************
.**********************************************************************
.*                       GLOBAL VARIABLES                             *
.**********************************************************************
CMDLINE   DIM       50
.
DIM6      DIM       6
.
TOTFIN    FORM      12.2
TOTGST    FORM      12.2
FSTAMNT   FORM      12.2
FSTDATE   DIM       8
FSTWORK   FORM      12.2
.
GROUP     DIM       3
GSTFLAG   FORM      1
IBCNUGST  FORM      1
.
PRITEMP1  DIM       8
PRITEMP2  DIM       8
.
SAVLAST   FORM      9.2
SAVPERA   FORM      12.2
SAVPR01   FORM      12.2
SAVPR02   FORM      12.2
SAVPR03   FORM      12.2
SAVPR04   FORM      12.2
SAVPR05   FORM      12.2
SAVPR06   FORM      12.2
SAVPR07   FORM      12.2
SAVPR08   FORM      12.2
SAVPR09   FORM      12.2
SAVPR10   FORM      12.2
SAVPR11   FORM      12.2
SAVPR12   FORM      12.2
SAVPR13   FORM      12.2
.
PRGID     INIT      "IBAPRI36"
PRGNAM    INIT      "Recreate Financial Summary"
VERSION   INIT      "V12.00.00"
+
.**********************************************************************
.*                           MAINLINE                                 *
.*                       Controlling Logic                            *
.**********************************************************************
ML0000    CALL      INIT0000                * initialization
.                                             open files
.                                             display header
.
ML1000    CALL      OPTN0000                * main option screen
          BRANCH    EXIT,ML9999
.
          CALL      CREA0000                * create the indexed temp file
.
          CALL      READ0000                * read the data required to write
          BRANCH    EXIT,ML9000               to the temp file
.
          CALL      GCRD0000                * Generate credit note
          CALL      WRIT0000                * write the temp file data to the
.                                             financial summary file
          IF        IBCNUGST=2
            CALL      WGST0000              * write GST tempfile to summary file
          ENDIF
          CALL      KILL0000                * kill existing temp file
          GOTO      ML9999
.
ML9000    CALL      KILL0000                * kill existing temp file
          GOTO      ML1000
.
ML9999    CHAIN     PGM
+
.**********************************************************************
.*                           INIT0000                                 *
.*               Open files and display header                        *
.**********************************************************************
INIT0000  CALL      DISPHEAD                * display screen header
.
          DISPLAY   *P50:24,"Opening ":
                    *P60:24,"patdrgaf";
          OPEN      PATDRGA2,"patdrgaf"
.
          DISPLAY   *P60:24,"pridtraf";
          OPEN      PRIDTRA1,"pridtraf"
.
          DISPLAY   *P60:24,"prifinsf";
          OPEN      PRIFINS1,"prifinsf"
          OPEN      PRIFIGA1,"prifigaf"
.
          DISPLAY   *P60:24,"prifciaf";
          OPEN      PRIFCIA1,"prifciaf"
.
          DISPLAY   *P60:24,"priinvof";
          OPEN      PRIINVO1,"priinvof"
.
          DISPLAY   *P60:24,"priitemf";
          OPEN      PRIITEM1,"priitemf"
.
          DISPLAY   *P60:24,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*85,IBCNUGST
          READ      CONTROLF,THIRTY4;*199,PRCNAFEE
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,PRITEMP1
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,PRITEMP2
.
INIT9999  RETURN
+
.**********************************************************************
.*                           OPTN0000                                 *
.*                   Display the main option screen                   *
.**********************************************************************
OPTN0000  MOVE      FALSE,EXIT
          DISPLAY   *P1:4,*EF,*V2LON,*BLINKON,"*** THERE MUST BE NO ONE ELSE":
                          " ON THE SYSTEM ***";
.
.------ keyin the option ------
.
OPTN1000  DISPLAY   *P1:24,*EL,"Do you want to Recreate the Financial ":
                           "Statistics (",*V2LON,ANSY,*HOFF,SLASH,*V2LON,ANSN:
                           *HOFF,") ? ";
          KEYIN     *V2LON,ANS;
.
          MATCH     ANSN,ANS                * see if No was entered
          GOTO      OPTN9000 IF EQUAL
.
          MATCH     ANSY,ANS                * see if Yes was entered
          GOTO      OPTN9999 IF EQUAL
.
          BEEP                              * invalid option chosen
          GOTO      OPTN1000
.
.------ Exit option chosen ------
.
OPTN9000  MOVE      TRUE,EXIT
.
OPTN9999  RETURN
+
.**********************************************************************
.*                              CREA0000                              *
.*                   Create the Indexed Temp File                     *
.**********************************************************************
CREA0000  CALL      KILL0000                       * kill existing temp file
.
.------ Build new indexed temp file ------
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    PRITEMP1,CMDLINE
          APPEND    " 164 u1-4,5-5,6-33,154-159",CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      PRITM1XX,PRITEMP1
.
.         Build GST tempfile
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    PRITEMP2,CMDLINE
          APPEND    " 164 u1-4,5-5,6-33,154-159",CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      PRITM2XX,PRITEMP2
.
CREA9999  RETURN
+
.**********************************************************************
.*                              KILL0000                              *
.*                  Kill the Tempfile if it Already Exists            *
.**********************************************************************
KILL0000  CLEAR     CMDLINE
          CLOSE     PRITM1XX
          APPEND    "iserase ",CMDLINE
          APPEND    PRITEMP1,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CLEAR     CMDLINE
          CLOSE     PRITM2XX
          APPEND    "iserase ",CMDLINE
          APPEND    PRITEMP2,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
KILL9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*              Loop through the Debtors Transaction file             *
.**********************************************************************
READ0000  MOVE      ZERO,GSTFLAG
          MOVE      FALSE,EXIT
          MOVE      ZERO,TOTFIN
          MOVE      ZERO,TOTGST
          DISPLAY   *P1:24,*EL,"Debtor Number : ";
          PACK      KEY22,SP20,SP2
          CALL      RSPRDT1                 * position on the debtors 
.                                             transaction file
.------ read through the debtors transaction file ------
.
READ1000  CALL      RKPRDT1
          BRANCH    OVRCD,READ9000
.
          DISPLAY   *P17:24,*V2LON,PRDTDEBT;
.
          BRANCH    PRDTRTYP,READ2200,READ2400,READ2600   * branch on 
.                                                           transaction type
.------ transaction is an item ------
.
READ2200  COMPARE   ZERO,PRDTINVP           * skip if the invoice has not been
          GOTO      READ1000 IF EQUAL         printed
.
          MOVE      PRDTINVN,KEY8
          CALL      RDPRIN1                 * read the invoice file
          BRANCH    OVRCD,READ1000
.
          MOVE      PRINDATE,FSTDATE
          MOVE      ANSA,PRFNTYPE
          MOVE      PRDTAMNT,FSTAMNT
          MOVE      SP3,GROUP
          PACK      KEY22,PRDTIFLG,PRDTITMN,PRDTSUBN,PRDTSDAT
          CALL      RDPRIT1                 * read the item file
          COMPARE   ZERO,OVRCD
          GOTO      READ2250 IF EQUAL
.
          CALL      RPPRIT1                 * get the previous record on the 
          BRANCH    OVRCD,READ2270            item file
.
          COMPARE   PRDTIFLG,PRITFLAG       * compare item flags
          GOTO      READ2270 IF NOT EQUAL
.
          MATCH     PRDTITMN,PRITITMN       * match items
          GOTO      READ2270 IF NOT EQUAL
.
          MATCH     PRDTSUBN,PRITSUBN       * match sub-items
          GOTO      READ2270 IF NOT EQUAL
.
.------ set up the item group code ------
.
READ2250  MOVE      PRDTSETC,GROUP
.
.------ pack up the finance code ------
.
READ2270  IF        PRCNAFEE=1
            PACK    PRFNCODE,ANSM,PRDTDOCT,GROUP,PRDTIFLG,PRDTITMN,PRDTSUBN,SP70
          ELSE
            PACK      PRFNCODE,ANSM,GROUP,PRDTIFLG,PRDTITMN,PRDTSUBN,SP70
          ENDIF
.
          MOVE      PRDTPRAC,PRFNMPRA       * medical practice
          CALL      CALF0000                * calculate the financial summary
          BRANCH    EXIT,READ1000             details and write to the temp 
.                                             file
          IF        IBCNUGST=2 & PRDTGSTM<>0
            MOVE      ONE,GSTFLAG
            MOVE      PRDTGSTM,FSTAMNT
            MOVE      PRDTPRAC,PRFNMPRA     * medical practice
            CALL      CALF0000              * calculate the financial summary
            MOVE      ZERO,GSTFLAG
          ENDIF
.
          GOTO      READ1000
.
.------ transaction is a cash receipt ------
.
READ2400  MOVE      ANSD,PRFNTYPE
          PACK      PRFNCODE,PRDTMISG,SP70
.
.         COMPARE   FOUR,PRDTMETH           * skip if we have a merchant code
.         GOTO      READ2500 IF EQUAL
.
          MOVE      ANSB,PRFNTYPE
          LOAD      ANS,PRDTIFLG,ANSA,ANSB,ANSI,ANSC
          MOVE      SP6,DIM6
.
          BRANCH    PRDTIFLG,READ2470,READ2450,READ2450,READ2470 * branch on 
.                                                                  receipt type
.------ we have a cash receipt from a health fund or insurance company ------
.
READ2450  MOVE      PRDTITMN,DIM6
.
.------ we have a cash receipt from the patient or govt. department ------
.
READ2470  PACK      PRFNCODE,ANS,DIM6,SP70
.
.------ set up the rest of the details ------
. 
READ2500  MOVE      PRDTAMNT,FSTAMNT
          MULT      SEQ,FSTAMNT
          MOVE      PRDTSDAT,FSTDATE
          MATCH     SP70,PRDTEFFD
          IF        !@EQUAL
            MOVE      PRDTEFFD,FSTDATE
          ENDIF
.
          MOVE      PRDTPRAC,PRFNMPRA       * medical practice
          CALL      CALF0000                * calculate the financial summary
          BRANCH    EXIT,READ1000             details and write to the temp 
.                                             file
          GOTO      READ1000
.
.------ transaction is a journal ------
.
READ2600  MOVE      ANSC,PRFNTYPE
          MOVE      PRDTSDAT,FSTDATE
          MATCH     SP70,PRDTEFFD
          IF        !@EQUAL
            MOVE      PRDTEFFD,FSTDATE
          ENDIF
          MOVE      PRDTAMNT,FSTAMNT
          MULT      SEQ,FSTAMNT
          MOVE      SP10,KEY3
          UNPACK    PRDTTTYP,KEY3
          PACK      PRFNCODE,SP70
          IF        PRCNAFEE=1
            PACK      PRFNCODE,PRDTDOCT,KEY3,SP70
          ELSE
            PACK      PRFNCODE,KEY3,SP70
          ENDIF
.
          MOVE      PRDTPRAC,PRFNMPRA       * medical practice
          CALL      CALF0000              * calculate the financial summary
          BRANCH    EXIT,READ1000           details and write to the temp 
.
          IF        IBCNUGST=2 & PRDTGSTM<>0
            MOVE      ONE,GSTFLAG
            MOVE      PRDTGSTM,FSTAMNT
            MULT      SEQ,FSTAMNT
            MOVE      PRDTPRAC,PRFNMPRA       * medical practice
            CALL      CALF0000            * calculate the financial summary
            MOVE      ZERO,GSTFLAG
            BRANCH    EXIT,READ1000         details and write to the temp 
          ENDIF
.
          GOTO      READ1000
.
READ9000  PRINT     *1,"************  TOTAL:  ",TOTFIN," GST ",TOTGST
READ9999  RETURN
+
.**********************************************************************
.*                               GCRD0000                             *
.*              Loop through the Credit note transaction file         *
.**********************************************************************
GCRD0000  MOVE      ZERO,GSTFLAG
          MOVE      ZERO,TOTFIN
          MOVE      ZERO,TOTGST
          MOVE      FALSE,EXIT
          DISPLAY   *P1:24,*EL,"Debtor Number : ";
          PACK      KEY32,SP70
          CALL      RSPRFCI1                * position on the credit note file
.
.------ read through the transaction file ------
.
GCRD1000  CALL      RKPRFCI1
          BRANCH    OVRCD,GCRD9000
.
          DISPLAY   *P17:24,*V2LON,PRFCDEBT;
.
.------ pack up the finance code ------
.
GCRD2270  IF        PRCNAFEE=1
           PACK  PRFNCODE,ANSN,PRFCSDOC,PRFCMSCG,PRFCIFLG,PRFCINUM,PRFCSUBI,SP70
          ELSE
            PACK      PRFNCODE,ANSN,PRFCMSCG,PRFCIFLG,PRFCINUM,PRFCSUBI,SP70
          ENDIF
.
          MOVE      ANSA,PRFNTYPE
          MOVE      PRFCCAMT,FSTAMNT
          MULT      "-1",FSTAMNT
          MOVE      PRFCCRDT,FSTDATE
          MOVE      PRFCMPRA,PRFNMPRA       * medical practice
          CALL      CALF0000                * calculate the financial summary
          BRANCH    EXIT,GCRD1000             details and write to the temp 
.                                             file
          IF        IBCNUGST=2 & PRFCCGST<>0
            MOVE      ONE,GSTFLAG
            MOVE      PRFCCGST,FSTAMNT
            MULT      "-1",FSTAMNT
            MOVE      PRFCMPRA,PRFNMPRA       * medical practice
            CALL      CALF0000              * calculate the financial summary
            MOVE      ZERO,GSTFLAG
          ENDIF
.
          GOTO      GCRD1000
.
GCRD9000  PRINT     *1,"****CR.NOTE*  TOTAL:  ",TOTFIN," GST ",TOTGST
GCRD9999  RETURN
+
.**********************************************************************
.*                               CALF0000                             *
.*       Calculate the financial summary details and write them       *
.*       to the temp file                                             *
.**********************************************************************
CALF0000  MOVE      FALSE,EXIT
          OPEN      PATDRGA2,"patdrgaf"     * Open the date range file
.
          PACK      KEY14,FSTDATE,SP6       * Position to this date
          CALL      RDSDRGA2                * Get the first record on the date
          CALL      RDKDRGA2                  range file on or after this date
          BRANCH    OVRCD,CALF9000          
.
          MATCH     DRGFDTE,FSTDATE         * Is date before the from date ?
          GOTO      CALF9000 IF LESS        * Yes. Date not found in file.
.
          MOVE      DRGYR,PRFNYEAR          
          MOVE      DRGNUM,FORM2
.
.*********  N. B. ****************************************************
.  This code may be required by some clients or it may not. I'm really
.  not sure what anyone wants so I will leave it commented out for the
.  moment.
.*********************************************************************
.       MATCH     ANSA,PRFNTYPE           * invoice date must be current year
.       GOTO      CALF3000 IF EQUAL         so bypass next code
.
.------ Check if this is in a prior financial year ------
.
        PACK      FSTDATE,CCC,CYY,CMM,CDD
        REP       " 0",FSTDATE   
.
        PACK      KEY14,FSTDATE,SP6       * Position to this date
        CALL      RDSDRGA2                * Get the first record on the date
        CALL      RDKDRGA2                  range file on or after this date
        BRANCH    OVRCD,CALF9000          
.
        MATCH     DRGFDTE,FSTDATE         * Is date before the from date ?
        GOTO      CALF9000 IF LESS        * Yes. Date not found in file.
.
        MATCH     DRGYR,PRFNYEAR          * see if the years are the same
        GOTO      CALF3000 IF EQUAL       * Yes. Continue Processing
.
.------ figures need to go into the last year amount field on the ------
.------ financial summary file, for the current financial year ------
.
        MOVE      TEN4,FORM2      
        MOVE      DRGYR,PRFNYEAR 
.
.------ write the data to the financial summary file ------
.
CALF3000  PACK      KEY39,PRFNYEAR,PRFNTYPE,PRFNCODE,PRFNMPRA,SP70
.
.------ see if the record exists on the financial summary file ------
.
CALF4000  IF        GSTFLAG=1
            CALL      RDTMPR2               * Read financial summary file
          ELSE
            CALL      RDTMPR1               * Read financial summary file
          ENDIF
          BRANCH    OVRCD,CALF5000          
.
          LOAD      FSTWORK,FORM2,PRFNPR01,PRFNPR02,PRFNPR03:
                                  PRFNPR04,PRFNPR05,PRFNPR06:
                                  PRFNPR07,PRFNPR08,PRFNPR09:
                                  PRFNPR10,PRFNPR11,PRFNPR12:
                                  PRFNPR13,PRFNLAST
.
          ADD       FSTAMNT,FSTWORK        
.
          STORE     FSTWORK,FORM2,PRFNPR01,PRFNPR02,PRFNPR03:
                                  PRFNPR04,PRFNPR05,PRFNPR06:
                                  PRFNPR07,PRFNPR08,PRFNPR09:
                                  PRFNPR10,PRFNPR11,PRFNPR12:
                                  PRFNPR13,PRFNLAST
.
          ADD       FSTAMNT,PRFNPERA      
.
          IF        GSTFLAG=1
            CALL      UPTMPR2                 * Update the record
          ELSE
            CALL      UPTMPR1                 * Update the record
          ENDIF
.
          GOTO      CALF9200            
.
.------ Write a new record with zero amounts and then update the record ------
.
CALF5000  MOVE      ZERO,PRFNPERA
          MOVE      ZERO,PRFNPR01
          MOVE      ZERO,PRFNPR02
          MOVE      ZERO,PRFNPR03
          MOVE      ZERO,PRFNPR04
          MOVE      ZERO,PRFNPR05
          MOVE      ZERO,PRFNPR06
          MOVE      ZERO,PRFNPR07
          MOVE      ZERO,PRFNPR08
          MOVE      ZERO,PRFNPR09
          MOVE      ZERO,PRFNPR10
          MOVE      ZERO,PRFNPR11
          MOVE      ZERO,PRFNPR12
          MOVE      ZERO,PRFNPR13
          MOVE      ZERO,PRFNLAST
          MOVE      SP5,PRFNSPAR
          MOVE      SP70,PRFNSPAR
          UNPACK    KEY39,PRFNYEAR,PRFNTYPE,PRFNCODE,PRFNMPRA
.
          IF        GSTFLAG=1
            CALL      WRTMPR2            * write to the financial summary file
          ELSE
            CALL      WRTMPR1            * write to the financial summary file
          ENDIF
          GOTO      CALF4000
.
.------ The requested date does not exist in the date range file OR ------
.------ the current date does not exist in the date range file ------
.
CALF9000  UNPACK    FSTDATE,CCENT,CYEAR,CMON,CDAY
.
          CALL      PACDATE                 * pack the date
.
          DISPLAY   *P1:24,*EL,*B,"** Date ",*V2LON,CPCDATE,*HOFF," not found":
                    " in Period Range file. Hit <",*V2LON,"ENTER",*HOFF:
                    "> to continue ";
          KEYIN     ANS;
          DISPLAY   *P1:24,*EL;
          MOVE      TRUE,EXIT
          GOTO      CALF9999
.
.------ Finished update of financial summary file ------
.
CALF9200
          IF        GSTFLAG=1
            ADD       FSTAMNT,TOTGST
            PRINT     *1,"   GST.";
          ELSE
            ADD       FSTAMNT,TOTFIN
            PRINT     *1,"INV....";
          ENDIF
          PRINT     PRDTINVN," CODE ",PRFNCODE," MED PRAC ",PRFNMPRA:
                    " AMT ",FSTAMNT," TOT ",TOTFIN
CALF9999  RETURN
+
.**********************************************************************
.*                               WRIT0000                             *
.*       Routine to write the data to the financial summary file      *
.**********************************************************************
WRIT0000  DISPLAY    *P1:24,*EL,"Preparing : ";
.
          PACK       KEY39,SP70
          CALL       RSPRFN1                * position on the financial summary
.                                             file
.------ read through the financial summary file ------
.
WRIT1000  CALL       RKPRFN1
          BRANCH     OVRCD,WRIT5000
.
.         CMATCH     "C",PRFNTYPE
.         GOTO       WRIT1000 IF NOT EQUAL  * not journal
.
          DISPLAY    *P13:24,*EL,*V2LON,PRFNYEAR,SP1,PRFNTYPE,SP1,PRFNCODE;
.
          PACK       KEY39,PRFNYEAR,PRFNTYPE,PRFNCODE,PRFNMPRA,SP70
          CALL       DEPRFN1                * delete from the financial summary
.                                             file
          CALL       RSPRFN1                * re-position on the financial 
.                                             summary file
          GOTO       WRIT1000
.
.------ we have reached the end of the financial summary file so read ------
.------ through the temp file and replace the financial summary data ------
.
WRIT5000  DISPLAY    *P1:24,"Restoring : ",*EL;
          PACK       KEY39,SP70
          CALL       RSTMPR1                * position on the temp file
.
.------ read through the temp file ------
.
WRIT5100  CALL       RKTMPR1
          BRANCH     OVRCD,WRIT9999
.
.         CMATCH     "C",PRFNTYPE
.         GOTO       WRIT5100 IF NOT EQUAL  * not journal
.
          DISPLAY    *P13:24,*EL,*V2LON,PRFNYEAR,SP1,PRFNTYPE,SP1,PRFNCODE;
.
          CALL       SAVE0000               * save the data
.
.     PRINT  *1,"YR ",PRFNYEAR," TYP ",PRFNTYPE," COD ",PRFNCODE:
.    " PR1- ",PRFNPR01," PR2- ",PRFNPR02," PR3- ",PRFNPR03," LST ",PRFNLAST
.
          PACK       KEY39,PRFNYEAR,PRFNTYPE,PRFNCODE,PRFNMPRA,SP70
          CALL       RDPRFN1                * read the financial summary file
          BRANCH     OVRCD,WRIT6000
.
          CALL       ADDT0000               * add the data
.
          CALL       UPPRFN1                * update the financial summary file
.
          GOTO       WRIT5100
.
.------ we want to write a new record to the financial summary file ------
.
WRIT6000  MOVE       ZERO,PRFNPERA
.
          CALL       REST0000               * restore the data
.
          CALL       WRPRFN1                * write to the financial summary
.                                             file
          GOTO       WRIT5100
.
WRIT9999  RETURN
+
.**********************************************************************
.*                               WGST0000                             *
.*       Routine to write GST data to the financial summary file      *
.**********************************************************************
WGST0000  DISPLAY    *P1:24,*EL,"Preparing GST : ";
          CLOSE      PRIFINS1
.
          OPEN       PRIFIGA1,"prifigaf"
          PACK       KEY39,SP70
          CALL       RSPRFG1                * position on the financial summary
.                                             file
.------ read through the financial summary file ------
.
WGST1000  CALL       RKPRFG1
          BRANCH     OVRCD,WGST5000
.
          DISPLAY    *P17:24,*EL,*V2LON,PRFNYEAR,SP1,PRFNTYPE,SP1,PRFNCODE;
.
          PACK       KEY39,PRFNYEAR,PRFNTYPE,PRFNCODE,PRFNMPRA,SP70
          CALL       DEPRFG1                * delete from the financial summary
.                                             file
          CALL       RSPRFG1                * re-position on the financial 
.                                             summary file
          GOTO       WGST1000
.
.------ we have reached the end of the financial summary file so read ------
.------ through the temp file and replace the financial summary data ------
.
WGST5000  DISPLAY    *P1:24,"Restoring GST : ",*EL;
          PACK       KEY39,SP70
          CALL       RSTMPR2                * position on the temp file
.
.------ read through the temp file ------
.
WGST5100  CALL       RKTMPR2
          BRANCH     OVRCD,WGST9999
.
          DISPLAY    *P17:24,*EL,*V2LON,PRFNYEAR,SP1,PRFNTYPE,SP1,PRFNCODE;
.
          CALL       SAVE0000               * save the data
.
          PACK       KEY39,PRFNYEAR,PRFNTYPE,PRFNCODE,PRFNMPRA,SP70
          CALL       RDPRFG1                * read the financial summary file
          BRANCH     OVRCD,WGST6000
.
          CALL       ADDT0000               * add the data
.
          CALL       UPPRFG1                * update the financial summary file
.
          GOTO       WGST5100
.
.------ we want to write a new record to the financial summary file ------
.
WGST6000  MOVE       ZERO,PRFNPERA
.
          CALL       REST0000               * restore the data
.
          CALL       WRPRFG1                * write to the financial summary
.                                             file
          GOTO       WGST5100
.
WGST9999  RETURN
+
.**********************************************************************
.*                               SAVE0000                             *
.*  Routine to save the financial variables read from the temp file   *
.**********************************************************************
SAVE0000  MOVE      PRFNPERA,SAVPERA
          MOVE      PRFNPR01,SAVPR01
          MOVE      PRFNPR02,SAVPR02
          MOVE      PRFNPR03,SAVPR03
          MOVE      PRFNPR04,SAVPR04
          MOVE      PRFNPR05,SAVPR05
          MOVE      PRFNPR06,SAVPR06
          MOVE      PRFNPR07,SAVPR07
          MOVE      PRFNPR08,SAVPR08
          MOVE      PRFNPR09,SAVPR09
          MOVE      PRFNPR10,SAVPR10
          MOVE      PRFNPR11,SAVPR11
          MOVE      PRFNPR12,SAVPR12
          MOVE      PRFNPR13,SAVPR13
          MOVE      PRFNLAST,SAVLAST
.
SAVE9999  RETURN
+
.**********************************************************************
.*                               REST0000                             *
.* Routine to restore the financial variables from the save variables *
.**********************************************************************
REST0000  MOVE      SAVPERA,PRFNPERA
          MOVE      SAVPR01,PRFNPR01
          MOVE      SAVPR02,PRFNPR02
          MOVE      SAVPR03,PRFNPR03
          MOVE      SAVPR04,PRFNPR04
          MOVE      SAVPR05,PRFNPR05
          MOVE      SAVPR06,PRFNPR06
          MOVE      SAVPR07,PRFNPR07
          MOVE      SAVPR08,PRFNPR08
          MOVE      SAVPR09,PRFNPR09
          MOVE      SAVPR10,PRFNPR10
          MOVE      SAVPR11,PRFNPR11
          MOVE      SAVPR12,PRFNPR12
          MOVE      SAVPR13,PRFNPR13
          MOVE      SAVLAST,PRFNLAST
.
REST9999  RETURN
+
.**********************************************************************
.*                               ADDT0000                             *
.* Routine to restore the financial variables from the save variables *
.**********************************************************************
ADDT0000  ADD       SAVPERA,PRFNPERA
          ADD       SAVPR01,PRFNPR01
          ADD       SAVPR02,PRFNPR02
          ADD       SAVPR03,PRFNPR03
          ADD       SAVPR04,PRFNPR04
          ADD       SAVPR05,PRFNPR05
          ADD       SAVPR06,PRFNPR06
          ADD       SAVPR07,PRFNPR07
          ADD       SAVPR08,PRFNPR08
          ADD       SAVPR09,PRFNPR09
          ADD       SAVPR10,PRFNPR10
          ADD       SAVPR11,PRFNPR11
          ADD       SAVPR12,PRFNPR12
          ADD       SAVPR13,PRFNPR13
          ADD       SAVLAST,PRFNLAST
.
ADDT9999  RETURN
+
.
.------ I/O Routines for temp file ------
.
RATMPR1   MOVE      ZERO,OVRCD
          RESET     KEY39
          READ      PRITM1XX,KEY39;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY39
          READ      PRITM1XX,KEY39;;
          RETURN
.
RDTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY39
          READ      PRITM1XX,KEY39;PRFNYEAR,PRFNTYPE,PRFNCODE,PRFNPERA:
                                 PRFNPR01,PRFNPR02,PRFNPR03,PRFNPR04,PRFNPR05:
                                 PRFNPR06,PRFNPR07,PRFNPR08,PRFNPR09,PRFNPR10:
                                 PRFNPR11,PRFNPR12,PRFNPR13,PRFNLAST,PRFNMPRA:
                                 PRFNSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY39
          READKS    PRITM1XX;PRFNYEAR,PRFNTYPE,PRFNCODE,PRFNPERA:
                             PRFNPR01,PRFNPR02,PRFNPR03,PRFNPR04,PRFNPR05:
                             PRFNPR06,PRFNPR07,PRFNPR08,PRFNPR09,PRFNPR10:
                             PRFNPR11,PRFNPR12,PRFNPR13,PRFNLAST,PRFNMPRA:
                             PRFNSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY39
          READKP    PRITM1XX;PRFNYEAR,PRFNTYPE,PRFNCODE,PRFNPERA:
                             PRFNPR01,PRFNPR02,PRFNPR03,PRFNPR04,PRFNPR05:
                             PRFNPR06,PRFNPR07,PRFNPR08,PRFNPR09,PRFNPR10:
                             PRFNPR11,PRFNPR12,PRFNPR13,PRFNLAST,PRFNMPRA:
                             PRFNSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMPR1   MOVE      ZERO,OVRCD
          RESET     KEY39
          UNPACK    KEY39,PRFNYEAR,PRFNTYPE,PRFNCODE,PRFNMPRA
          WRITE     PRITM1XX,KEY39;PRFNYEAR,PRFNTYPE,PRFNCODE:
                                   PRFNPERA,PRFNPR01,PRFNPR02,PRFNPR03:
                                   PRFNPR04,PRFNPR05,PRFNPR06,PRFNPR07:
                                   PRFNPR08,PRFNPR09,PRFNPR10,PRFNPR11:
                                   PRFNPR12,PRFNPR13,PRFNLAST,PRFNMPRA:
                                   PRFNSPAR
          RETURN
.
UPTMPR1   UPDATE    PRITM1XX;PRFNYEAR,PRFNTYPE,PRFNCODE,PRFNPERA:
                             PRFNPR01,PRFNPR02,PRFNPR03,PRFNPR04,PRFNPR05:
                             PRFNPR06,PRFNPR07,PRFNPR08,PRFNPR09,PRFNPR10:
                             PRFNPR11,PRFNPR12,PRFNPR13,PRFNLAST,PRFNMPRA:
                             PRFNSPAR
          RETURN
.
DETMPR1   RESET     KEY39
          DELETE    PRITM1XX,KEY39
          RETURN
+
.         GST tempfile
.
RATMPR2   MOVE      ZERO,OVRCD
          RESET     KEY39
          READ      PRITM2XX,KEY39;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY39
          READ      PRITM2XX,KEY39;;
          RETURN
.
RDTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY39
          READ      PRITM2XX,KEY39;PRFNYEAR,PRFNTYPE,PRFNCODE,PRFNPERA:
                                 PRFNPR01,PRFNPR02,PRFNPR03,PRFNPR04,PRFNPR05:
                                 PRFNPR06,PRFNPR07,PRFNPR08,PRFNPR09,PRFNPR10:
                                 PRFNPR11,PRFNPR12,PRFNPR13,PRFNLAST,PRFNMPRA:
                                 PRFNSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY39
          READKS    PRITM2XX;PRFNYEAR,PRFNTYPE,PRFNCODE,PRFNPERA:
                             PRFNPR01,PRFNPR02,PRFNPR03,PRFNPR04,PRFNPR05:
                             PRFNPR06,PRFNPR07,PRFNPR08,PRFNPR09,PRFNPR10:
                             PRFNPR11,PRFNPR12,PRFNPR13,PRFNLAST,PRFNMPRA:
                             PRFNSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY39
          READKP    PRITM2XX;PRFNYEAR,PRFNTYPE,PRFNCODE,PRFNPERA:
                             PRFNPR01,PRFNPR02,PRFNPR03,PRFNPR04,PRFNPR05:
                             PRFNPR06,PRFNPR07,PRFNPR08,PRFNPR09,PRFNPR10:
                             PRFNPR11,PRFNPR12,PRFNPR13,PRFNLAST,PRFNMPRA:
                             PRFNSPAR
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMPR2   MOVE      ZERO,OVRCD
          RESET     KEY39
          UNPACK    KEY39,PRFNYEAR,PRFNTYPE,PRFNCODE,PRFNMPRA
          WRITE     PRITM2XX,KEY39;PRFNYEAR,PRFNTYPE,PRFNCODE:
                                   PRFNPERA,PRFNPR01,PRFNPR02,PRFNPR03:
                                   PRFNPR04,PRFNPR05,PRFNPR06,PRFNPR07:
                                   PRFNPR08,PRFNPR09,PRFNPR10,PRFNPR11:
                                   PRFNPR12,PRFNPR13,PRFNLAST,PRFNMPRA:
                                   PRFNSPAR
          RETURN
.
UPTMPR2   UPDATE    PRITM2XX;PRFNYEAR,PRFNTYPE,PRFNCODE,PRFNPERA:
                             PRFNPR01,PRFNPR02,PRFNPR03,PRFNPR04,PRFNPR05:
                             PRFNPR06,PRFNPR07,PRFNPR08,PRFNPR09,PRFNPR10:
                             PRFNPR11,PRFNPR12,PRFNPR13,PRFNLAST,PRFNMPRA:
                             PRFNSPAR
          RETURN
.
DETMPR2   RESET     KEY39
          DELETE    PRITM2XX,KEY39
          RETURN
+
          INC       STD001IO
          INC       TFILENAM                * Generate Temp File Name
          INC       IBASEQIO/INC            * Sequential Numbers File
          INC       WEBERRIO/INC            * Web Server Error Logging
.
          INC       PATDRGIO/INC
          INC       PRIDTRIO/INC
          INC       PRIFCIIO/INC
          INC       PRIFINIO/INC
          INC       PRIFIGIO/INC
          INC       PRIINVIO/INC
          INC       PRIITMIO/INC
