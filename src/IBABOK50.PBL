+
.******************************************************************************
.* System   :  BOOKINGS                                                       *
.* Program  :  IBABOK50                                                       *
.* Desc     :  SET-UP LETTERS                                                 *
.******************************************************************************
.* Date     :  10/05/89                                                       *
.* Author   :  Steve O'Gorman                                                 *
.* Comment  :                                                                 *
.* Mods     :                                                                 *
.*                                                                            *
.*         V10.13.01  05/12/2018  Don Nguyen     TSK 0838558                  *
.*                    Deleted temp file (TEMP1) on program exit.              *
.*         V10.04.01  07/07/2014   J.Tan           CAR 261630                 *
.*                    Removed port number from temp file name                 *
.*          V9.03.00  02/07/2003  Tonii  CAR 40346 (THC60)                    *
.*                    Ported from R5.10                                       *
.******************************************************************************
.*          V5.04.02  11/04/1997  Steve Armstrong    SRF 642798               *
.*                    Fixed UK bug (not padding out work variable)            *
.*          V5.04.01  18/02/97 Howellsy     WHT                               *
.*                    Added Cell Phone, Postal Add1-4, Postal Post Code       *
.******************************************************************************
.*             V5.01.01 M.Ohleiter 29/06/89                                   *
.*                      Updates for release 5.01                              *
.*                      Removed Preferred Accomodation - SRF 101630           *
.*                                                                            *
.*                      14/08/89  S. O'Gorman                                 *
.*                      Fix Modify Routine for > 80 Chars                     *
.*                                                                            *
.*                      15/08/89  S. O'Gorman                                 *
.*                      Fix wp Heading for 8 Digit Version                    *
.*                                                                            *
.*             V5.01.02 03/12/91 J.Tan      SRF 111890                        *
.*                      Extend field line number in letter file               *
.*        V5.01.03  12/05/1992  Graeme Williams        SRF 114249             *
.*                  Fixed verify option if top margin = 15.                   *
.*        V5.01.04  25/02/1994  Matt Surridge                                 *
.*                  Added new WORD PROCESSOR and generaly standardised.       *
.*                                                                            *
.*                                                                            *
.******************************************************************************
.
         INC       STD001FD
         INC       IBASEQFD/INC            * Sequential Numbers File
         INC       TFILEVAR/INC            * Generate Temp File Name
         INC       WEBERRFD/INC            * Web Server Error Logging
.
         INC       BOKLETFD/INC
+
.**********************************************************************
.*                           CONSTANTS                                *
.**********************************************************************
.                                              * List of variables which the 
.                                              * Word Processor understands 
.
LCADDA   INIT      "%adda"             * Address Line 1
LCADDB   INIT      "%addb"             * Address Line 2
LCADDC   INIT      "%addc"             * Address Line 3
LCDOB    INIT      "%bdob"             * Date of Birth
LCBDOC   INIT      "%bdoc"             * Attending Doctor's Name
LCEXDATE INIT      "%bedt"             * Expected Booking Date
LCGNAME  INIT      "%bgiv"             * Patient Given Name
LCBNO    INIT      "%bno"              * Booking Number
LCSNAME  INIT      "%bsur"             * Patient Surname
LCBLTYPE INIT      "%btype"            * Booking Type
LCPHONE  INIT      "%btele"            * Patient Phone Number
LCDATE   INIT      "%date"             * Today's Date
LCFNAME  INIT      "%fname"            * Patient Full Name
LCPAGE   INIT      "%page"             * Page Break Variable
LCPCODE  INIT      "%post"             * Patient Post Code
LCCTELE  INIT      "%ctele"            * Cellular Phone Number
LCPADDA  INIT      "%padda"            * Postal address line 1
LCPADDB  INIT      "%paddb"            * Postal address line 2
LCPADDC  INIT      "%paddc"            * Postal address line 3
LCPADDD  INIT      "%paddd"            * Postal address line 4
LCPPOST  INIT      "%ppost"            * Postal Post Code       
.
.
. ----- Maximum Field Lengths for the Variables Above -----
.
LXADDA   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXADDB   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXADDC   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXDOB    INIT      "99/99/1999"
LXDOCT   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXEXDATE INIT      "99th XXXXXXXXX 1999"
LXGNAME  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXBNO    INIT      "99999999"
LXSNAME  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXBKTYPE INIT      "XXXXXXXXXXXXXXXXXXXX"
LXPHONE  INIT      "999999999999"
LXDATE   INIT      "19th XXXXXXXXX 1999"
LXFNAME  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPAGE   INIT      "X       ------          page ":
                   "break       ------        X"
LXCODE  INIT      "9999"
LXCELL    INIT      "XXXXXXXXXXXXXXXXXXXX"
LXPADDA   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPADDB   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPADDC   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPADDD   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPPOST   INIT      "XXXXXXXX"
.
REPSTR   INIT      "a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0"
SPECCHAR INIT      "%"
TEMP1    FILE      ASCII,FIXED=79
.
PRGID    INIT      "IBABOK50"
PRGNAM    INIT      "Set-Up Letters"
VERSION   INIT      "V12.00.00"
.
+
.**********************************************************************
.*                        GLOBAL  VARIABLES                           *
.**********************************************************************
.  
BOTMARG  FORM      2
CMDLINE  DIM       50
COUNT    FORM      3 
DIM30    DIM       30
DIM70    DIM       70
DISPSTRN DIM       70
FORM3    FORM      3
FORM3A   FORM      3
ENDSTR   FORM      2
FNAMER   DIM       8
FPPOS    FORM      2
LEFTMARG FORM      2
LETDESC  DIM       20
LETTNAME DIM       20
LINE     FORM      2
LINENO   FORM      3
LLPOS    FORM      2
LSTPRINT FORM      3
MAXLINES FORM      3
OPTN     DIM       6
PERCPOS  FORM      2
PHYSPAGE FORM      3
POS      FORM      2
PRTSTRNG DIM       70
SRCHNUM  FORM      2
SRCHVAR  DIM       8
STARTSTR FORM      2
TEMP2    FORM      2
TEMP3    FORM      2
TEMP70   DIM       70
TMPLETT  DIM       3
TMPLETNO FORM      3
TOPMARG  FORM      2
VERTPOS  FORM      2
.
WPSTAT   FORM      2
+
.********************************************************************** 
.*                             MAINLINE                               *
.**********************************************************************
.
ML0000   CALL      INIT0000                      * Initialize
.
ML1000
         CALL      CLR0000                       * Clear Variables
         CALL      SCR0000                       * Call Option Screen
         BRANCH    EXIT,ML9999
         BRANCH    OPTION,ML2000,ML3000,ML4000:
                          ML5000,ML6000,ML7000
.
ML2000
.        -----  add a letter  -----
.
         MOVE      "Add   ",OPTN
.
         CALL      INLT0000                      * Input the Letter Number
         BRANCH    EXIT,ML1000
.
         CALL      NWCK0000                      * Check if Letter is New
         BRANCH    EXIT,ML2000
.
         CALL      LDET0000                      * Display Parameter Fields
         BRANCH    EXIT,ML2000
.
         CALL      INDT0000                      * Input Letter Details
.
         CALL      SEL0000                       * Select Field to Update
         BRANCH    EXIT,ML2000
.
         CALL      HEAD0000                      * Write the header record to
.                                                  Letter Record
.
         CALL      WP0000                        * Call the word processor
.
         CALL      ADDL0000                      * Add a Letter to the File
.
         GOTO      ML1000
.
ML3000
.        -----  view a letter  -----
.
         MOVE      "View  ",OPTN
.
         CALL      INLT0000                      * Input the Letter Number
         BRANCH    EXIT,ML1000
.
         CALL      OLCK0000                      * Check if Letter Exists
         BRANCH    EXIT,ML3000
.
         CALL      PARA0000                      * Display the Letter Param's.
         BRANCH    EXIT,ML3000
.
         CALL      DISP0000                      * Display the Letter Text
         BRANCH    EXIT,ML3000
.
         GOTO      ML1000
.
ML4000
.        -----  verify a letter  -----
.
         MOVE      "Verify",OPTN
.
         CALL      INLT0000                      * Input the Letter Number
         BRANCH    EXIT,ML1000
.
         CALL      OLCK0000                      * Check if Letter Exists
         BRANCH    EXIT,ML4000
.
         CALL      VERF0000                      * Modify the line to show
         BRANCH    EXIT,ML4000                   * Maximum Variable Length
.
         GOTO      ML1000
.
ML5000
.        -----  change a letter  -----
.
         MOVE      "Change",OPTN
.
         CALL      INLT0000                      * Input the Letter Number
         BRANCH    EXIT,ML1000
.
         CALL      OLCK0000                      * Check if Letter Exists
         BRANCH    EXIT,ML5000
.
         CALL      DETL0000                      * Display the Letters Details
.
         CALL      SEL0000                       * Select Item to Modify
         BRANCH    EXIT,ML5000
.
         CALL      UPDT0000                      * Update Letter in w.p.
         BRANCH    EXIT,ML5000
.
         GOTO      ML1000
.
ML6000
.        ----- delete a letter  -----
.
         MOVE      "Delete",OPTN
.
         CALL      INLT0000                      * Input the Letter to Delete
         BRANCH    EXIT,ML1000
.
         CALL      OLCK0000                      * Check if Record Exists
         BRANCH    EXIT,ML6000
.
         CALL      DETL0000                      * Display the Letter Param's
         BRANCH    EXIT,ML6000
.
         CALL      DISP0000                      * Display Letter 
.
         CALL      DEL0000                        * Delete Record Procedure
         BRANCH    EXIT,ML6000
.
         GOTO      ML1000
.
ML7000
.        ----- print a letter  -----
.
         MOVE      "Print ",OPTN
.
         CALL      INLT0000                      * Input the Letter to Print
         BRANCH    EXIT,ML1000
.
         CALL      OLCK0000                      * Check if Letter Exists
         BRANCH    EXIT,ML7000
.
         CALL      PRT0000                       * Print the Extended Letter
         BRANCH    EXIT,ML7000
.
         GOTO      ML1000
.
ML9999   PREP      TEMP1,FNAMER
         CLOSE     TEMP1,DELETE
         CHAIN     PGM
.
+
.********************************************************************** 
.*                  INIT0000 - Initialization                         *
.**********************************************************************
.
INIT0000
         CALL      DISPHEAD
         DISPLAY   *P57:24,"Opening bokletrf"
         OPEN      BOKLETR1,"bokletrf"
         DISPLAY   *P65:24,"bokletrf"
         OPEN      BOKLETR2,"bokletrf"
.
.---------- set up temp file -------
.
         CALL      TFILENAM                * Get temp file name
         MOVE      TFILNAME,FNAMER
.
         CLEAR     CMDLINE                       * Execute the Word Processor
         APPEND    FNAMER,CMDLINE                * File Name
         APPEND    ".txt",CMDLINE
         RESET     CMDLINE
.
         RETURN
.
+
.********************************************************************** 
.*                   CLR0000 - Clear Variables                        *
.**********************************************************************
.
CLR0000  HLINE     *G37,2,47,80
.
         PACK      DIM70,SP30,SP30,SP10
         MOVE      ZERO,BLETPBOT
         MOVE      ZERO,BLETPTOP
         MOVE      ZERO,BLETPPAG
         MOVE      ZERO,BLETPTAB
         MOVE      ZERO,LINE
         MOVE      SP20,LETTNAME
         MOVE      ZERO,TOPMARG
         MOVE      ZERO,LEFTMARG
         MOVE      ZERO,FORM3
.
         RETURN
+
.********************************************************************** 
.*                   SCR0000 - Main Option Screen                     *
.**********************************************************************
.
SCR0000
         MOVE      FALSE,EXIT
         DISPLAY   *P1:3,*EF:
                   *P1:4,*V2LON,"0",*HOFF," = Exit":
                   *P1:5,*V2LON,"1",*HOFF," = Add a Letter":
                   *P1:6,*V2LON,"2",*HOFF," = View a Letter":
                   *P1:7,*V2LON,"3",*HOFF," = Verify a Letter":
                   *P1:8,*V2LON,"4",*HOFF," = Change a Letter":
                   *P1:9,*V2LON,"5",*HOFF," = Delete a Letter":
                   *P1:10,*V2LON,"6",*HOFF," = Print a Letter":
                   *P1:12,"Please Select :";
.
         KEYIN     *P17:12,*V2LON,OPTION;
         DISPLAY   *P17:12,*V2LON,OPTION;
         COMPARE   SEVEN,OPTION                  * No. Options + 1 = 7
         GOTO      SCR0000 IF NOT LESS
.
         COMPARE   ZERO,OPTION
         GOTO      SCR0900 IF NOT EQUAL
         MOVE      TRUE,EXIT
SCR0900
         RETURN
.
+
.****************************************************************************
.*                    INLT0000 - Input the Letter Number                    *
.****************************************************************************
.
INLT0000
.
         MOVE      FALSE,EXIT
.
         STRIP     OPTN
         DISPLAY   *P47:2,*V2LON,"- ",*+,OPTN,SP1;
.
         DISPLAY   *P1:3,*EF:
                   *P4:4,"Letter No.          :";
         KEYIN     *P26:4,*V2LON,TMPLETT;
         DISPLAY   *P26:4,*V2LON,TMPLETT;
.
         RESET     TMPLETT                       * Check for a Return
         GOTO      INLT9000 IF EOS
.
         MATCH     SP1,TMPLETT                   * Check for Spaces
         GOTO      INLT9000 IF EQUAL
.
         MATCH     "?",TMPLETT                   * Check for a "?" 
         GOTO      INLT7000 IF NOT EQUAL
         CALL      QEST0000 
         GOTO      INLT0000
.
INLT7000
         TYPE      TMPLETT                       * Force a Numeric
         GOTO      INLT8000 IF EQUAL
.
         DISPLAY   *P1:24,"Invalid Letter Number. ";
         CALL      HITENTER
.
         GOTO      INLT0000
INLT8000
         MOVE      TMPLETT,TMPLETNO
         COMPARE   ZERO,TMPLETNO                 * Check for Zero
         GOTO      INLT9000 IF EQUAL
         GOTO      INLT9999
INLT9000
         MOVE      TRUE,EXIT
.
INLT9999
         RETURN
.
.********************************************************************** 
.*             LLET0000 - DISPLAY ALL LETTERS ON A "?" OPTION         *
.********************************************************************** 
.
LLET0000    MOVE      FIVE,VERTPOS               * Start Printing on Line 5
            PACK      KEY6,SP10                  * Position at Top of File
            CALL      RDSLET2
            CALL      RDKLET2
            BRANCH    OVRCD,LLET9000
            DISPLAY   *P1:3,*EF:                 * Print Heading
                      *P31:4,*V2LON,*ULON,"AVAILABLE LETTERS",*HOFF;
.
LLET1000    COMPARE   TWENTY1,VERTPOS                      * Set up a 2nd column
            GOTO      LLET2000 IF LESS                     * after line no. 21
            DISPLAY   *P40:VERTPOS,*V2LON,BLETNO,*HOFF;
            MOVE      BLTEXT,LETDESC
            DISPLAY   *P45:VERTPOS,LETDESC;                * Display in col 2
            GOTO      LLET3000
.
LLET2000    DISPLAY   *P1:VERTPOS,*V2LON,DBLETNO,*HOFF;
            MOVE      BLTEXT,LETDESC
            DISPLAY   *P5:VERTPOS,LETDESC;                 * Display in col 1
.
LLET3000    CALL      RDKLET2                              * End of records if
            BRANCH    OVRCD,LLET9000                       * LETTER NO. > 0  
            COMPARE   ZERO,BLINNO
            GOTO      LLET9999 IF NOT EQUAL
            ADD       ONE,VERTPOS                          * Increment vert pos
            GOTO      LLET1000
.
.------ end of allocation fields display ------
.
LLET9000    KEYIN     *P1:24,*EL,"Records Must be Added to Letter File First. ";
            CALL      HITENTER
.
            MOVE      TRUE,EXIT
            RETURN
.
LLET9999
         DISPLAY   *P1:24;
         CALL      HITENTER
         RETURN
.
.********************************************************************** 
.*                              QEST0000                              *
.*               Display all Codes on Report File for "?"             *
.********************************************************************** 
.
QEST0000  MOVE      SP10,KEY6
          CALL      RDSLET2
.
.         Display Category Heading, and then loop over entries
.
          DISPLAY   *P1:4,*EF,*P30:4,*V2LON,*ULON,"EXISTING LETTERS"
          MOVE      FIVE,CVERT
          MOVE      ONE,CCOL
.
.>>>>>>>  TRAP      QEST3000 IF F1
.
          CALL      RDSLET2
.
QEST1000  CALL      RDKLET2
          BRANCH    OVRCD,QEST2000
.
          COMPARE   ZERO,BLINNO
          GOTO      QEST4000 IF NOT EQUAL
.
          MOVE      BLTEXT,DIM30
          DISPLAY   *PCCOL:CVERT,*V2LON,BLETNO,SP2,*HOFF,DIM30;
          ADD       ONE,CVERT
          COMPARE   TWENTY3,CVERT
          GOTO      QEST1000 IF LESS
.
          MOVE      FIVE,CVERT
          ADD       "40",CCOL
          COMPARE   "70",CCOL
          GOTO      QEST1000 IF LESS
.
.>>>>>>>  TRAPCLR   F1
.
          KEYIN     *P1:24,*EL," (",*V2LON,"E",*HOFF,")xit, (":
                    *V2LON,"N",*HOFF,")ext Screen : ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          CMATCH    ANSE,ANS
          GOTO      QEST5000 IF EQUAL
.
          MOVE      FIVE,CVERT
          MOVE      ONE,CCOL
          DISPLAY   *P1:5,*EF
.
.>>>>>>>  TRAP      QEST3000 IF F1
.
          GOTO      QEST1000
.
.
QEST2000  DISPLAY   *P1:24,*EF,"No Records Entered in Report File. ";
          CALL      HITENTER
.
          GOTO      QEST5000
.
QEST3000  NORETURN
.>>>>>>>  TRAPCLR   F1
.
.      End of codes
.
QEST4000  KEYIN     *P1:24,*EL,"Hit ",*V2LON,"<RETURN>",*HOFF:
                               " to continue ",*EOFF,ANS;
QEST5000  MOVE      ZERO,OVRCD
.
          RETURN
+
.****************************************************************************
.*            NWCK0000 - Check if Letter is not on File (New for Add)       *
.****************************************************************************
.
NWCK0000
         MOVE      FALSE,EXIT
         MOVE      ZERO,FORM3
         PACK      KEY6,TMPLETNO,FORM3
         CALL      RDLET1
         BRANCH    OVRCD,NWCK9999
.
         DISPLAY   *P1:24,*B,"Letter Already Exists On File. ";
         CALL      HITENTER 
.
         MOVE      TRUE,EXIT
.
NWCK9999
         RETURN
+
.****************************************************************************
.*            OLCK0000 - Check that letter exists on file                   *
.*                       For : view , verify , change , delete , print      *
.****************************************************************************
.
OLCK0000
         MOVE      FALSE,EXIT
         MOVE      ZERO,FORM3
         PACK      KEY6,TMPLETNO,FORM3
         CALL      RDLET1
         BRANCH    OVRCD,OLCK9000
         MOVE      BLTEXT,LETTNAME
         MOVE      BLETPTOP,TOPMARG
         MOVE      BLETPTAB,LEFTMARG
         MOVE      BLETPPAG,PHYSPAGE
         GOTO      OLCK9999
.
OLCK9000
         DISPLAY   *P1:24,*B,"Letter Not Found On File. ";
         CALL      HITENTER
.
         MOVE      TRUE,EXIT
OLCK9999
         RETURN
.
+
.****************************************************************************
.*            LDET0000 - Input the Details of the new Letter                *
.****************************************************************************
.
LDET0000
         DISPLAY   *P1:5,*EF:
                   *P1:5,"   Name                :":
                   *P1:6,*V2LON,"1",*HOFF,". Paper Page Length   :":
                   *P1:7,*V2LON,"2",*HOFF,". Top Margin Size     :":
                   *P1:8,*V2LON,"3",*HOFF,". Bottom Margin Size  :":
                   *P1:9,*V2LON,"4",*HOFF,". Left Margin Size    :";
.
LDET9999
         RETURN
+
.****************************************************************************
.*              INDT0000 - Input the Letter Details                         *
.****************************************************************************
.
INDT0000
         CALL      NAME0000            * Input the Letter Name
         CALL      PAPL0000            * Input the Paper Page Length
         CALL      TMAR0000            * Input the Top Margin Size
         CALL      BMAR0000            * Input the Bottom Margin Size
         CALL      LMAR0000            * Input the Left Margin Size
INDT9999
         RETURN
+
.****************************************************************************
.*    SEL0000 - Select Field to Update on the Input Letter Detail Screen    *
.****************************************************************************
.
SEL0000
         MOVE      FALSE,EXIT
         CALL      MAINQST
         COMPARE   ZERO,CCITEM
         GOTO      SEL0999 IF EQUAL
         COMPARE   "-1",CCITEM
         GOTO      SEL0900 IF EQUAL
         COMPARE   EIGHT,CCITEM
         GOTO      SEL0000 IF NOT LESS
.
SEL0100  BRANCH    CCITEM,SEL0200,SEL0300,SEL0400,SEL0500
.
         GOTO      SEL0000
.
SEL0200  CALL      PAPL0000            * Input the Paper Page Length
         GOTO      SEL0000
.
SEL0300  CALL      TMAR0000            * Input the Top Magin Size
         GOTO      SEL0000
.
SEL0400  CALL      BMAR0000            * Input the Bottom Margin Size
         GOTO      SEL0000
.
SEL0500  CALL      LMAR0000            * Input the Left Margin Size
         GOTO      SEL0000
.
SEL0900  MOVE      TRUE,EXIT
.
SEL0999  RETURN
+
.****************************************************************************
.*              NAME0000 - Input the Letter Name                            *
.****************************************************************************
.
NAME0000
         DISPLAY   *P26:5,UNDLN20;
         KEYIN     *P26:5,*V2LON,LETTNAME;
         DISPLAY   *P26:5,*V2LON,LETTNAME;
         RETURN
+
.****************************************************************************
.*             PAPL0000 - Input the Physical Paper Length                   *
.****************************************************************************
.
PAPL0000
         DISPLAY   *P26:6,UNDLN3;
         KEYIN     *P26:6,*V2LON,BLETPPAG;
         DISPLAY   *P26:6,*V2LON,BLETPPAG;
         COMPARE   ZERO,BLETPPAG
         GOTO      PAPL0000 IF EQUAL
.
         COMPARE   BLETPPAG,BLETPBOT
         GOTO      PAPL9000 IF LESS
         DISPLAY   *P1:24,*B,"Page Length Must Be Greater than the ":
                          "Bottom Margin. ";
         CALL      HITENTER 
         GOTO      PAPL0000
PAPL9000
         CALL      MARG0000
         BRANCH    OVRCD,PAPL0000
PAPL9999
         RETURN
+
.****************************************************************************
.*             TMAR0000 - Input the top Margin Size                         *
.****************************************************************************
.
TMAR0000
         DISPLAY   *P27:7,UNDLN2;
         KEYIN     *P27:7,*V2LON,BLETPTOP;
         DISPLAY   *P27:7,*V2LON,BLETPTOP;
         COMPARE   ZERO,BLETPTOP
         GOTO      TMAR0000 IF EQUAL
         COMPARE   BLETPPAG,BLETPTOP
         GOTO      TMAR9000 IF LESS
         DISPLAY   *P1:24,"Top Margin Must Be Less Than Page length. ";
         GOTO      TMAR0000
TMAR9000
         MOVE      BLETPPAG,FORM3
         SUB       TWO,FORM3
         COMPARE   FORM3,BLETPTOP
         GOTO      TMAR9900 IF LESS
         DISPLAY   *P1:24,"Top Margin Too Big. "; 
         CALL      HITENTER
.
         GOTO      TMAR0000
TMAR9900
         CALL      MARG0000
         BRANCH    OVRCD,TMAR0000
TMAR9999
         RETURN
+
.****************************************************************************
.*              BMAR0000 - Input the Bottom Margin                          *
.****************************************************************************
.
BMAR0000
         DISPLAY   *P27:8,UNDLN2;
         KEYIN     *P27:8,*V2LON,BLETPBOT;
         DISPLAY   *P27:8,*V2LON,BLETPBOT;
         COMPARE   ZERO,BLETPBOT
         GOTO      BMAR0000 IF EQUAL
         COMPARE   BLETPPAG,BLETPBOT
         GOTO      BMAR9000 IF LESS
         DISPLAY   *P1:24,"Bottom Margin Must Be Less than Page length. ";
         CALL      HITENTER
.
         GOTO      BMAR0000
BMAR9000
         MOVE      BLETPPAG,FORM3
         SUB       TWO,FORM3
         COMPARE   FORM3,BLETPBOT
         GOTO      BMAR9900 IF LESS
         DISPLAY   *P1:24,"Bottom Margin Too Big. "; 
         CALL      HITENTER
         GOTO      BMAR0000
BMAR9900
         CALL      MARG0000
         BRANCH    OVRCD,BMAR0000
BMAR9999
         RETURN
+
.****************************************************************************
.*             LMAR0000 - Input the Left Margin                             *
.****************************************************************************
.
LMAR0000
         DISPLAY   *P27:9,UNDLN2;
         KEYIN     *P27:9,*V2LON,BLETPTAB;
         DISPLAY   *P27:9,*V2LON,BLETPTAB;
         COMPARE   ZERO,BLETPTAB
         GOTO      LMAR0000 IF EQUAL
         COMPARE   TWENTY1,BLETPTAB
         GOTO      LMAR9999 IF LESS
.
         DISPLAY   *P1:24,"Left Margin May Not Exceed 20. "; 
         CALL      HITENTER
         GOTO      LMAR0000
LMAR9999
         RETURN
+
.****************************************************************************
.*              MARG0000 - Verify if Top + Bottom < Page Length             *
.****************************************************************************
.
MARG0000
         MOVE      ZERO,OVRCD
         MOVE      BLETPTOP,FORM3
         ADD       BLETPBOT,FORM3
         COMPARE   BLETPPAG,FORM3
         GOTO      MARG9999 IF LESS
.
         MOVE      ONE,OVRCD
         DISPLAY   *P1:24,*EL,"Invalid Top & Bottom Margin Combination. ";
         CALL      HITENTER
MARG9999
         RETURN
+
.****************************************************************************
.*              HEAD0000 - Write the Header Record to the Letter File       *
.****************************************************************************
.
HEAD0000
         MOVE      ZERO,FORM3
         MOVE      LETTNAME,BLTEXT
         PACK      KEY6,TMPLETNO,FORM3
         CALL      WRLET1
         RETURN
+
.****************************************************************************
.*              SET UP THE TEMP FILE AND CALL THE WORD PROCESSOR            *
.****************************************************************************
.
WP0000   
.        DISPLAY   *P1:4,*EF:
.                   *P1:24,"Initializing The Wordprocessor. ":
.                   *BLINKON,*V2LON,"Please Wait";
.
         PREP      TEMP1,FNAMER
.
.************************************************************ 
.*              execute the word processor                  *
.************************************************************
.
.------- set up command to execute word processor -------
.
.         EXECUTE   CMDLINE,TASKID
.
         CLOSE     TEMP1
         MOVE      TEN,WPSTAT
         WORD      CMDLINE,999,4,12,75,22,WPSTAT
.
.
         RETURN
+
.************************************************************ 
.*       ADDL0000 - Add a Letter to the Letter File         *
.************************************************************ 
.
ADDL0000
.
         DISPLAY   *P1:24,"O.K to Post Letter Changes (",*V2LON,"Y",*HOFF:
                          "/",*V2LON,"N",*HOFF,") ";
         KEYIN     *V2LON,ANS;
         RESET     ANS
         REPLACE   UPPLOW,ANS
         GOTO      ADDL00000 IF EOS
         MATCH     SP1,ANS
         GOTO      ADDL0000 IF EQUAL
         MATCH     "N",ANS
         GOTO      ADDL9999 IF EQUAL
         MATCH     "Y",ANS
         GOTO      ADDL0500 IF EQUAL
         GOTO      ADDL0000
ADDL0500
.
.         DISPLAY   *P1:24,*EL,"Posting Changes to the Letter",*BLINKON,*V2LON:
.                          " - Please Wait";
ADDL1000
.        CLOSE     TEMP1                         * Reset the File to Top for
         OPEN      TEMP1,FNAMER                  * Reading
         MOVE      ZERO,COUNT
ADDL2000
         MOVE      ZERO,BLVAR                    * Reset the "%" Sign Marker
         PACK      DIM70,SP30,SP30,SP10
         PACK      BLTEXT,SP30,SP30,SP10
         READ      TEMP1,SEQ;DIM70               * Read next line in temp file
         GOTO      ADDL9999 IF OVER
         ADD       ONE,COUNT                     * Increment count for the key
         MOVE      DIM70,BLTEXT
         SCAN      SPECCHAR,BLTEXT               * Set the Marker in the Letter
         GOTO      ADDL2100 IF NOT EQUAL         * File if the line of text
         MOVE      ONE,BLVAR                     * contains a "%"
ADDL2100
         PACK      KEY6,TMPLETNO,COUNT           * Set up the key with Letter
         CALL      WRLET1                        * Number & Line Number
         GOTO      ADDL2000
.
ADDL9999 RETURN
.
+
.********************************************************************** 
.*              PARA0000 - Display the Letter Parameters              *
.**********************************************************************
.
PARA0000
         DISPLAY   *P1:5,*EL:
                   *P4:5,"Name                :":
                   *P4:6,"Paper Page Length   :":
                   *P4:7,"Top Margin Size     :":
                   *P4:8,"Bottom Margin Size  :":
                   *P4:9,"Left Margin Size    :";
.
         DISPLAY   *P26:5,*V2LON:
                   *P26:5,LETTNAME:
                   *P26:6,BLETPPAG:
                   *P27:7,BLETPTOP:
                   *P27:8,BLETPBOT:
                   *P27:9,BLETPTAB;
.
PARA9999
         RETURN
.
+
.********************************************************************** 
.*                DISP0000 - Display the Letter Text                  *
.**********************************************************************
.
DISP0000
         MOVE      FALSE,EXIT
.
         PREP      TEMP1,FNAMER
.
         MOVE      ONE,FORM3
         PACK      KEY6,TMPLETNO,FORM3
         CALL      RDLET1
         BRANCH    OVRCD,DISP9000
.
         MOVE      ZERO,FORM2
         PACK      DIM70,SP30,SP30,SP30
.
DISP0100 COMPARE   TOPMARG,FORM2
         GOTO      DISP0500 IF NOT LESS
         WRITE     TEMP1,SEQ;DIM70
         ADD       ONE,FORM2
         GOTO      DISP0100
.
.
DISP0500 MOVE      ZERO,FORM2
         CLEAR     DIM70
. 
DISP1000 COMPARE   LEFTMARG,FORM2
         GOTO      DISP1100 IF NOT LESS
         APPEND    SP1,DIM70
         ADD       ONE,FORM2
         GOTO      DISP1000
.
DISP1100 APPEND    BLTEXT,DIM70
         RESET     DIM70
         WRITE     TEMP1,SEQ;DIM70
         CALL      RDKLET1
         BRANCH    OVRCD,DISP9500
         COMPARE   BLETNO,TMPLETNO
         GOTO      DISP9500 IF NOT EQUAL
         GOTO      DISP0500
.
DISP9000
         MOVE      TRUE,EXIT
         DISPLAY   *P1:24,"No Text Entered for This Letter. "; 
.
         CALL      HITENTER
         GOTO      DISP9999
.
DISP9500 CLOSE     TEMP1
         MOVE      FOUR,WPSTAT
         WORD      CMDLINE,999,5,12,76,23,WPSTAT
.
DISP9999 RETURN
+
.********************************************************************** 
.*                VERF0000 - Display the Full Coded Text              *
.**********************************************************************
.
VERF0000
         MOVE      FALSE,EXIT
.
.                   *P4:4,"Letter No.          :":
         DISPLAY   *P4:5,"Letter Name         : ",*V2LON,LETTNAME;
.
         MOVE      ONE,FORM3
         PACK      KEY6,TMPLETNO,FORM3
         CALL      RDLET1
         BRANCH    OVRCD,VERF9000
         BOXCLR    1,12,80,22
         BOX       1,5,12,76,22
.
         ADD       "6",LEFTMARG
         MOVE      "13",LINE
         PACK      DIM70,SP30,SP30,SP30
         MOVE      ZERO,FORM2
.
VERF0500 COMPARE   TOPMARG,FORM2
         GOTO      VERF1000 IF NOT LESS
         DISPLAY   *P6:LINE,DIM70
         ADD       ONE,LINE
         ADD       ONE,FORM2
         COMPARE   TWENTY3,LINE
         CALL      PAGE0000 IF NOT LESS
         BRANCH    EXIT,VERF9500
         GOTO      VERF0500
.
VERF1000
         MOVE      BLTEXT,DIM70
         CALL      MOD0000
         RESET     PRTSTRNG
         STRIP     PRTSTRNG
.
         DISPLAY   *PLEFTMARG:LINE,*+,PRTSTRNG
         CALL      RDKLET1
         BRANCH    OVRCD,VERF9999
         COMPARE   BLETNO,TMPLETNO
         GOTO      VERF9999 IF NOT EQUAL
         ADD       ONE,LINE
         COMPARE   TWENTY2,LINE
         CALL      PAGE0000 IF NOT LESS
         BRANCH    EXIT,VERF9500
         GOTO      VERF1000
.
VERF9000
         MOVE      TRUE,EXIT
         DISPLAY   *P1:24,"No Text Entered for This Letter. ";
         CALL      HITENTER
VERF9500
         RETURN
VERF9999
         DISPLAY   *P1:24,"End Of Letter. ";
         CALL      HITENTER
.
         RETURN
+
.********************************************************************** 
.*    PAGE0000 - message at the end of a page of text                 *
.**********************************************************************
.
PAGE0000
         MOVE      FALSE,EXIT
         DISPLAY   *P1:24,"(",*V2LON,"N",*HOFF,")ext Page ":
                          "(",*V2LON,"E",*HOFF,")xit ? ";
         KEYIN     *V2LON,ANS;
         REP       UPPLOW,ANS
         DISPLAY   *P22:24,*V2LON,ANS;
.
         MATCH     "N",ANS
         GOTO      PAGE9999 IF EQUAL
         MATCH     "E",ANS
         GOTO      PAGE2000 IF EQUAL
.
         BEEP
         GOTO      PAGE0000
.
PAGE2000
         MOVE      TRUE,EXIT
PAGE9999
         BOXCLR    1,12,80,22
         BOX       1,5,12,76,22
.                                                * of lines printed
         MOVE      TEN3,LINE                    * Reset line to top of print
.
         RETURN
+
.********************************************************************** 
.*              CONT0000 - HIT RETURN TO CONTINUE                     *
.**********************************************************************
.
+
.********************************************************************** 
.*    MOD0000 - MODIFY A LINE TO SHOW MAXIMUM VARIABLE LENGTH         *
.**********************************************************************
.
MOD0000
.
         PACK      PRTSTRNG,SP30,SP30,SP10       * Initialize the PRTSTRNG
         RESET     PRTSTRNG,0                    * and pointer positions
         MOVE      ONE,STARTSTR
         MOVE      ONE,ENDSTR
.
MOD2000
         SCAN      SPECCHAR,DIM70                * Scan the Input Line for
         GOTO      MOD8000 IF NOT EQUAL          * a "%" sign
.
MOD3000
         MOVEFPTR  DIM70,PERCPOS
         BUMP      DIM70,-1                      * Go to the character before
.                                                * the "%" sign
         GOTO      MOD3100 IF NOT EOS            * Test if the % sign is the
         RESET     DIM70,0                       * first character on the line
.                                                * set f.p. to 0 if it is
MOD3100 
         MOVEFPTR  DIM70,ENDSTR                  * Store endstr at position
.                                                * 1 char before the "%" sign
.
         COMPARE   STARTSTR,ENDSTR               * Ensure that end and start
         GOTO      MOD3200 IF NOT LESS           * positions don't overlap
.
         RESET     DIM70,STARTSTR                * Set pointer to start i.e
         GOTO      MOD9000 IF EOS                * to "%" if end < start
         GOTO      MOD3300
.
MOD3200  RESET     DIM70,STARTSTR                * Reset the pointers to 
         SETLPTR   DIM70,ENDSTR                  * extract text preceeding
.                                                * the "%" sign
.
         APPEND    DIM70,PRTSTRNG                * Append preceeding text to
.                                                * the print string
.
MOD3300
.
         SETLPTR   DIM70,70                      * Set the pointers to start at
         RESET     DIM70,PERCPOS                 * "%" and go to position 70
.
.        SRF 642798
.
         MOVE       DIM70,TEMP70                 * Delete preceeding text
         PACK       DIM70,TEMP70,SP30,SP30,SP30  * from the dim70 string
MOD4000
         CALL      GETV0000                      * Call the extraction routine
.                                                * to get the % variable
         MOVEFPTR  DIM70,STARTSTR                * Store finish pos of var.
         BRANCH    EXIT,MOD5000
         RESET     SRCHVAR
         SEARCH    SRCHVAR,LCADDA,TWENTY1,SRCHNUM    * Search the list of const.
         COMPARE   ZERO,SRCHNUM                   * Exit if not a % variable
         GOTO      MOD5000 IF EQUAL
         COMPARE   SIX,OPTION
         GOTO      MOD4100 IF NOT EQUAL
.
         COMPARE   SRCHNUM,TEN4
         GOTO      MOD7000 IF EQUAL
.
MOD4100
.
.  -----  Load the maximum length of the variable into the print string -----
.
         LOAD      DISPSTRN,SRCHNUM,LXADDA,LXADDB,LXADDB,LXDOB,LXDOCT:
                                    LXEXDATE,LXGNAME,LXBNO,LXSNAME,LXBKTYPE:
                                    LXPHONE,LXDATE,LXFNAME,LXCODE,LXPAGE:
                                    LXCELL,LXPADDA,LXPADDB,LXPADDC,LXPADDD:
                                    LXPPOST
.
         APPEND    DISPSTRN,PRTSTRNG             * Add the full description 
         GOTO      MOD2000                       * to the print string
.
MOD5000 
         RESET     SRCHVAR                       * Add the string starting with
         APPEND    SRCHVAR,PRTSTRNG              * a % if not found in the 
         GOTO      MOD8000 IF EOS                * variable list 
         GOTO      MOD2000       
.
MOD7000
         PRINT     *N;
         COMPARE   COUNT,PHYSPAGE
         GOTO      MOD7100 IF EQUAL
         ADD       ONE,COUNT
         GOTO      MOD7000
MOD7100
         MOVE      ZERO,COUNT
MOD7400
         ADD       ONE,COUNT
         COMPARE   COUNT,TOPMARG
         GOTO      MOD7500 IF EQUAL
         GOTO      MOD7500 IF LESS
         PRINT     *N;
         GOTO      MOD7400
MOD7500
         GOTO      MOD9999
MOD8000
         APPEND    DIM70,PRTSTRNG                * Add remaining text to print
                                                 * string if no "%" signs left
MOD9000        
         MOVE      FALSE,EXIT
MOD9999
         RETURN
.
+
.********************************************************************** 
.*    GETV0000 - GETS A LETTER VARIABLE FROM TEXT AFTER THE SCAN      *
.**********************************************************************
.
GETV0000
         MOVE      FALSE,EXIT
         PACK      SRCHVAR,SP30,SP30,SP10
         RESET     SRCHVAR,0
         MOVE      DIM70,ANS
         APPEND    ANS,SRCHVAR
         RESET     SRCHVAR,0
         BUMP      DIM70
         MOVE      DIM70,ANS
         REPLACE   REPSTR,ANS
         MATCH     "0",ANS
         GOTO      GETV9000 IF NOT EQUAL
         BUMP      DIM70,-1
         PACK      SRCHVAR,SP30,SP30,SP10
         RESET     SRCHVAR,0
GETV1000
         MOVE      DIM70,ANS
         APPEND    ANS,SRCHVAR
.
         BUMP      DIM70
         GOTO      GETV9999 IF EOS
         MOVE      DIM70,ANS
         REPLACE   REPSTR,ANS
         MATCH     "0",ANS
         GOTO      GETV9999 IF NOT EQUAL
         GOTO      GETV1000
.
GETV9000
         MOVE      TRUE,EXIT
.
GETV9999
         RETURN
.
+
.****************************************************************************
.*              DISPLAY AND UPDATE THE PARAMETERS OF THE LETTER             *
.****************************************************************************
.
DETL0000
         DISPLAY   *P1:5,*EF:
                   *P1:5,"   Name                :":
                   *P1:6,*V2LON,"1",*HOFF,". Paper Page Length   :":
                   *P1:7,*V2LON,"2",*HOFF,". Top Margin Size     :":
                   *P1:8,*V2LON,"3",*HOFF,". Bottom Margin Size  :":
                   *P1:9,*V2LON,"4",*HOFF,". Left Margin Size    :";
.
         DISPLAY   *P26:5,*V2LON:
                   *P26:5,LETTNAME:
                   *P26:6,BLETPPAG:
                   *P27:7,BLETPTOP:
                   *P27:8,BLETPBOT:
                   *P27:9,BLETPTAB;
.
         RETURN
+
.****************************************************************************
.*              SET UP THE TEMP FILE AND CALL THE WORD PROCESSOR            *
.****************************************************************************
.
UPDT0000 
         MOVE      TMPLETNO,BLETNO
         MOVE      ZERO,BLINNO
         MOVE      LETTNAME,BLTEXT
.
         CALL      RDALET1
.
         CALL      UPLET1
.
. ------  Set up the Header for the Word Processor -----
.
.         DISPLAY   *P1:4,*EF:
.                   *P1:24,"Initializing the Wordprocessor - ":
.                   *BLINKON,*V2LON,"Please Wait";
         PREP      TEMP1,FNAMER
.
.************************************************************ 
.*  read in the old call details from BOKLETR to tempsoln   *
.************************************************************
.
UPDT1000 MOVE      ONE,LINENO               * Reads in the previous letter
         MOVE      ZERO,MAXLINES            * details from the BOKLETR file
         PACK      KEY6,TMPLETNO,LINENO     * based on the Letter No. entered.
         CALL      RDLET1                   * The MAXLINES variable is used
         COMPARE   ONE,OVRCD                * keep a count of the no. of lines
         GOTO      UPDT2999 IF EQUAL        * of text read from the BOKLETR
UPDT2000 WRITE     TEMP1,SEQ;BLTEXT         * file.
         ADD       ONE,MAXLINES             * The data is loaded into the 
         PACK      BLTEXT,SP30,SP30,SP10    * temp file for use by the word
         CALL      RDKLET1                  * processor.
         COMPARE   ONE,OVRCD
         GOTO      UPDT2999 IF EQUAL
         COMPARE   TMPLETNO,BLETNO
         GOTO      UPDT2999 IF NOT EQUAL
         GOTO      UPDT2000
UPDT2999
+
.************************************************************ 
.*              execute the word processor                  *
.************************************************************
.
.        EXECUTE   CMDLINE,TASKID
         CLOSE     TEMP1
.
         MOVE      TEN,WPSTAT
         WORD      CMDLINE,999,5,12,76,22,WPSTAT
+
UPDT3000
.
         DISPLAY   *P1:24,"O.K to Post Letter Changes (",*V2LON,"Y",*HOFF:
                          "/",*V2LON,"N",*HOFF,") ";
         KEYIN     *V2LON,ANS;
         RESET     ANS
         REP       UPPLOW,ANS
         GOTO      UPDT30000 IF EOS
         MATCH     SP1,ANS
         GOTO      UPDT3000 IF EQUAL
         MATCH     "N",ANS
         GOTO      UPDT3999 IF EQUAL
         MATCH     "Y",ANS
         GOTO      UPDT3050 IF EQUAL
         GOTO      UPDT3000
UPDT3050
.
.  DISPLAY   *P1:24,*EL,"Posting Changes to the Letter",*BLINKON,*V2LON:
.                          " - Please Wait";
.        CLOSE     TEMP1                    * Reads the new call details out
         OPEN      TEMP1,FNAMER             * of the temp file and puts them
         MOVE      ZERO,LINENO              * back into the MABLETR file.
         MOVE      TMPLETNO,BLETNO          * Records are updated if the key
UPDT3100                                    * exists or are written if the 
         PACK      DIM70,SP30,SP30,SP10     * key dosen't exist.
         PACK      BLTEXT,SP30,SP30,SP10
         MOVE      ZERO,BLVAR
         READ      TEMP1,SEQ;DIM70          
         GOTO      UPDT3700 IF OVER 
.
         ADD       ONE,LINENO
         SCAN      SPECCHAR,DIM70
         GOTO      UPDT3150 IF NOT EQUAL
         MOVE      ONE,BLVAR
UPDT3150 
         SETLPTR   DIM70,70                
         RESET     DIM70                  
         MOVE      LINENO,BLINNO
         PACK      KEY6,BLETNO,BLINNO    
         CALL      RDALET1              
         COMPARE   ZERO,OVRCD
         GOTO      UPDT3200 IF EQUAL
         MOVE      DIM70,BLTEXT
         CALL      WRLET1
         GOTO      UPDT3100
UPDT3200 
         MOVE      DIM70,BLTEXT
         CALL      UPLET1
         GOTO      UPDT3100
UPDT3700 
         COMPARE   MAXLINES,LINENO          * This loop acts to delete any
         GOTO      UPDT3999 IF NOT LESS     * lines of text which are 
         PACK      KEY6,BLETNO,MAXLINES     * extra information left from
         DELETE    BOKLETR1,KEY6            * the previous call details.
         SUB       ONE,MAXLINES
         GOTO      UPDT3700                 * This is only performed if
UPDT3999 
         RETURN                             * LINENO < MAXLINES
.
+
.**********************************************************************
.*          DEL0000 - Delete a Letter from the Letter File            *
.**********************************************************************
.
DEL0000
         MOVE      FALSE,EXIT
.
         DISPLAY   *P1:24,*EL,"(",*V2LON,"D",*HOFF,")elete  ":
                              "(",*V2LON,"E",*HOFF,")xit : ";
         KEYIN     *V2LON,ANS;
         REP       UPPLOW,ANS
         DISPLAY   *P20:24,*V2LON,ANS;
.
         MATCH     "D",ANS
         GOTO      DEL1000 IF EQUAL
         MATCH     "E",ANS
         GOTO      DEL9000 IF EQUAL
         GOTO      DEL0000
.
DEL1000
         REPLACE   "D0",ANS
         MATCH     "0",ANS
         GOTO      DEL0000 IF NOT EQUAL
.
         MOVE      ZERO,FORM3
         PACK      KEY6,TMPLETNO,FORM3
         CALL      DELLET1
DEL2000
         ADD       ONE,FORM3
         PACK      KEY6,TMPLETNO,FORM3
         CALL      RDLET1
         BRANCH    OVRCD,DEL9999
         CALL      DELLET1
         GOTO      DEL2000
DEL9000
         MOVE      TRUE,EXIT
DEL9999
         RETURN
+
.**********************************************************************
.*          PRT0000 - Print the Verified Version of the Letter        *
.**********************************************************************
.
PRT0000
.
PRT0200
.         DISPLAY   *P1:24,"Printing Letter : ",*V2LON,LETTNAME,*HOFF:
.                          SP1,*V2LON,*BLINKON,"- Please Wait";

.
         MOVE      FALSE,EXIT
         MOVE      ZERO,FORM3
         MOVE      ZERO,COUNT
         PACK      KEY6,TMPLETNO,FORM3
         CALL      RDLET1
         MOVE      BLETPPAG,PHYSPAGE
         MOVE      BLETPBOT,BOTMARG
         MOVE      BLETPTOP,TOPMARG
         SUB       BLETPBOT,BLETPPAG
         MOVE      BLETPPAG,LSTPRINT
PRT0050
         ADD       ONE,COUNT
         COMPARE   COUNT,TOPMARG
         GOTO      PRT1000 IF LESS
         PRINT     *N;
         GOTO      PRT0050
PRT1000
         CALL      RDKLET1
         BRANCH    OVRCD,PRT9000
         COMPARE   BLETNO,TMPLETNO
         GOTO      PRT9000 IF NOT EQUAL
.
         BRANCH    BLVAR,PRT2000
         PRINT     *N,*LEFTMARG,BLTEXT;
         GOTO      PRT3000
PRT2000
         MOVE      BLTEXT,DIM70
         CALL      MOD0000
         PRINT     *N,*LEFTMARG,PRTSTRNG;
PRT3000
         ADD       ONE,COUNT
         COMPARE   COUNT,LSTPRINT
         CALL      PGE0000 IF LESS
         GOTO      PRT1000
PRT9000
         PRINT     *N;
         COMPARE   PHYSPAGE,COUNT
         GOTO      PRT9999 IF EQUAL
         GOTO      PRT9999 IF NOT LESS
         ADD       ONE,COUNT
         GOTO      PRT9000
PRT9999
         DISPLAY   *P1:24,*EL;
.
         RETURN
+
.**********************************************************************
.*                              PGE0000                              *
.*        Routine to paginate if a new page is required               *
.**********************************************************************
PGE0000     MOVE       BLETNO,FORM3
            MOVE       BLINNO,FORM3A
            CALL       RDKLET1
            BRANCH     OVRCD,PGE8000
            COMPARE    TMPLETNO,BLETNO
            GOTO       PGE8000 IF NOT EQUAL
            MOVE       TOPMARG,TEMP2
            ADD        BOTMARG,TOPMARG
            MOVE       ONE,COUNT
.
PGE1000     PRINT      *N;
            COMPARE    COUNT,TOPMARG
            GOTO       PGE9000 IF EQUAL
            ADD        ONE,COUNT
            GOTO       PGE1000
.
PGE8000     PACK       KEY6,FORM3,FORM3A 
            CALL       RDLET1
            GOTO       PGE9999
.
PGE9000     MOVE       TEMP2,COUNT
            ADD        ONE,COUNT
            MOVE       TEMP2,TOPMARG
            PACK       KEY6,FORM3,FORM3A
            CALL       RDLET1
.
PGE9999    RETURN
+
+
.**********************************************************************
.*          I/O INCLUDES FOR THE EXTERNAL ROUTINES                    *
.**********************************************************************
.
         INC       BOKLETIO/INC
         INC       STD001IO
         INC       TFILENAM                * Generate Temp File Name
         INC       IBASEQIO/INC            * Sequential Numbers File
         INC       WEBERRIO/INC            * Web Server Error Logging
.

.
.
