. *----------------------------------------------------------------------
. * Include Name  :   EXPPAYCD.PBL
. *
. * Function      :   Expected payor common functions
. *----------------------------------------------------------------------
.  Modifications Done :
.
.  V9.07.00   11/07/2006  Ebon Clements CAR 103365
.             Created include
. *----------------------------------------------------------------------
.
.
.******************************************************************************
.*  Write patient expected payor details                                      *
.******************************************************************************
WEXP0000  MATCH     "1",PTCNEPAY                 * Using expected payors
          GOTO      WEXP9999 IF NOT EQUAL
.
          MATCH     SP70,PFUNDH                  * Is there a health fund
          GOTO      WEXP9999 IF EQUAL
.
          CALL      CLPMSPAY
          MOVE      PURNO,PMPAURNO
          MOVE      PFUNDH,PMPAPAYC
          MOVE      " 1",PMPASEQN
          MOVE      "0",PMPAACTV
.
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          MOVE      KEY8,PMPACDAT                * System date
          CLOCK     TIME,PMPACTIM                * System time
          MOVE      USERID,PMPACUID              * web user id
.
          PACK      KEY14,PMPAURNO,PMPAPAYC,SP70
          CALL      RAPMPAY1
          IF        OVRCD=1
            CALL      WRPMPAY1
          ENDIF
.
WEXP9999  RETURN
.
.******************************************************************************
.*  Update patient expected payor details                                      *
.******************************************************************************
UEXP0000  MATCH     "1",PTCNEPAY                 * Using expected payors
          GOTO      UEXP9999 IF NOT EQUAL
.
          MATCH     SAVPFUND,PFUNDH              * Exit if hfund has not changed
          GOTO      UEXP9999 IF EQUAL
.
          PACK      KEY14,PURNO,SAVPFUND,SP70
          CALL      RDPMPAY1
          BRANCH    OVRCD,UEXP2000
.
          MOVE      ONE,PMPAACTV                 * Set old payor to inactive
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          MOVE      KEY8,PMPAUDAT                * System date
          CLOCK     TIME,PMPAUTIM                * System time
          MOVE      USERID,PMPAUUID              * web user id
          CALL      UPPMPAY1
.
UEXP2000  PACK      KEY14,PURNO,PFUNDH,SP70
          CALL      RDPMPAY1
          BRANCH    OVRCD,UEXP3000
.
          MOVE      ZERO,PMPAACTV                * Activate expected payor
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          MOVE      KEY8,PMPAUDAT                * System date
          CLOCK     TIME,PMPAUTIM                * System time
          MOVE      USERID,PMPAUUID              * web user id
.
          CALL      UPPMPAY1
          GOTO      UEXP9999
.
UEXP3000  MOVE      ONE,F2
          PACK      KEY10,PURNO,Z70
          CALL      RSPMPAY2                     * Generate sequence number
          CALL      RPPMPAY2
          BRANCH    OVRCD,UEXP3500
.
          MATCH     PURNO,PMPAURNO
          GOTO      UEXP3500 IF NOT EQUAL
.
          MOVE      PMPASEQN,F2
          ADD       ONE,F2
.
UEXP3500  CALL      CLPMSPAY                     * Clear file vars
          MOVE      PURNO,PMPAURNO
          MOVE      PFUNDH,PMPAPAYC
          MOVE      F2,PMPASEQN
.
          MOVE      ZERO,PMPAACTV                * Activate expected payor
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          MOVE      KEY8,PMPACDAT                * System date
          CLOCK     TIME,PMPACTIM                * System time
          MOVE      USERID,PMPACUID              * web user id
.
          PACK      KEY14,PMPAURNO,PMPAPAYC,SP70
          CALL      RAPMPAY1
          IF        OVRCD=1
            CALL      WRPMPAY1                   * Writes the data
          ENDIF
.
UEXP9999  RETURN
.
.******************************************************************************
.*  Write admission based expected payors                                     *
.******************************************************************************
AEXP0000  MATCH     "1",PTCNEPAY                 * Using expected payors
          GOTO      AEXP9999 IF NOT EQUAL
.
          PACK      KEY14,PVIBILL,SP70
          CALL      RSVSPAY1
AEXP1000  CALL      RKVSPAY1
          BRANCH    OVRCD,AEXP1500
.
          MATCH     VSPAVISN,DPVIBILL            * exit if admission expected
          GOTO      AEXP9999 IF EQUAL            * payor records exist
.
AEXP1500  PACK      KEY14,PVIURNO,SP70
          CALL      RSPMPAY1
AEXP2000  CALL      RKPMPAY1
          BRANCH    OVRCD,AEXP9999
. 
          MATCH     PMPAURNO,PVIURNO            * Write u/r expected payors
          GOTO      AEXP9999 IF NOT EQUAL        * to admission expected payors
.
          MATCH     "0",PMPAACTV
          GOTO      AEXP2000 IF NOT EQUAL
.
AEXP3000  MOVE      ONE,F2
          PACK      KEY10,PVIBILL,Z70
          CALL      RSVSPAY2                     * Generate sequence number
          CALL      RPVSPAY2
          BRANCH    OVRCD,AEXP3500
.
          MATCH     DPVIBILL,VSPAVISN
          GOTO      AEXP3500 IF NOT EQUAL
.
          MOVE      VSPASEQN,F2
          ADD       ONE,F2
.
AEXP3500  CALL      CLVISPAY                     * Clear file vars
          MOVE      PVIBILL,VSPAVISN
          MOVE      PMPAPAYC,VSPAPAYC
          MOVE      F2,VSPASEQN
.
          MOVE      ZERO,VSPAACTV                * Activate expected payor
          PACK      KEY8,CCC,CYY,CMM,CDD
          REP       " 0",KEY8
          MOVE      KEY8,VSPACDAT                * System date
          CLOCK     TIME,VSPACTIM                * System time
          MOVE      USERID,VSPACUID              * web user id
.
          PACK      KEY14,VSPAVISN,VSPAPAYC,SP70
          CALL      RAVSPAY1
          IF        OVRCD=1
            CALL      WRVSPAY1                   * Writes the data
          ENDIF
.
          GOTO      AEXP2000
.
AEXP9999  RETURN
