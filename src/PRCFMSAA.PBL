.******************************************************************************
.* System    :   Accounting System                                            *
.* Procedure :   PRCFMSAA                                                     *
.* Desc      :   Total Account Update for a single total account              *
.*               for all budgets and all financial years                      *
.* Used by   :   Account Maintenance Programs that modify the TCF file        *
.*               and Data Maintenance Programs that modify Budgets or Actuals *
.******************************************************************************
.* Date      :   03.12.90                                                     *
.* Author    :   B.G.Ackland (IBA)                                            *
.* Mods      :   14.01.91  Neeriem Dye (IBA)                                  *
.*                         Fixed to only ask question if any FMTU records for *
.*                         the current port exist                             *
.*               03.06.91  Neeriem Dye (IBA)                                  *
.*                         Modified for Budget Linking                        *
.*               12.07.91  Neeriem Dye (IBA)                                  *
.*                         Modified to default to "N" in update question      *
.*               26.08.91  Neeriem Dye (IBA)                                  *
.*                         Modified to move zero to a var divided by zero     *
.*                                                                            *
.*                     19.09.91 Neeriem Dye (who else !!)                     *
.*                     Modified to write level to new FMSTUPAF layout         *
.*                     Modified to delete fmstupaf recs as read and re pos    *
.*                     to start of data for each loop                         *
.*                     srf 110636                                             *
.*                                                                            *
.*                     12.12.91 Neeriem Dye (who else !!)                     *
.*                     Modified to handle if identical budgets and years exist*
.*                     Fixed to handle first year/budget on file              *
.*                     srf 111803                                             *
.*                                                                            *
.*                     21.02.92 Neeriem Dye (who else !!)                     *
.*                     Use new budget force update parameter                  *
.*                     srf 113225                                             *
.*                                                                            *
.*                     14.01.92 Neeriem Dye (who else !!)                     *
.*                     Take out enquiry parameters                            *
.*                     srf 114492                                             *
.*                                                                            *
.*                     21.10.93 Neeriem "I Hate Support" Dye (I.B.A.)         *
.*                     Modified for new committed expenditure field           *
.*                     srf HWK                                                *
.*                                                                            *
.*                     13.04.94 Neeriem Dye - Contractor !!                   *
.*                     Allow update of budgets only (when forced)             *
.*                     srf 128113                                             *
.*                                                                            *
.*                     21.04.94 Robert Sumsion                                *
.*                     Added code to update the Budget files when written to  *
.*                     or updated. Files affected are: fmsbudaf, fmsbpfaf and *
.*                     fmsstraf. (Therefore 3 new audit files: fmsaudbu,      *
.*                     fmsaudbp, fmsaudsr).                                   *
.*                     srf 127778                                             *
.*                                                                            *
.*                     11.02.96 B.G.Ackland                                   *
.*                     Restructure Code                                       *
.*                                                                            *
.*                                                                            *
.******************************************************************************
.$$$$$$
.    1. Open Files Required 
.          OPEN     FMSTUPA1,"fmstcfaf"
.          OPEN     FMSTUPA2,"fmstcfaf"
.          OPEN     FMSTUPA3,"fmstcfaf"
.
.    2. Global Variables Used - PORTCODE
.
.    3. For the PORTCODE Passed to this procedure the program will
.       Read Through the TUP file and perform updates of all actuals
.       and budgets.
.
.FILE DESCRIPTION INCLUDES REQUIRED
.----------------------------------
.          INC       FMSUDADF    
.
.          INC       FMSAMAFD/INC
.          INC       FMSBUDFD/INC
.          INC       FMSBTYFD/INC
.          INC       FMSCONFD/INC
.          INC       FMSLMAFD/INC
.          INC       FMSLMCFD/INC
.          INC       FMSTCFFD/INC
.          INC       FMSFPSFD/INC
.          INC       FMSLBUFD/INC
.          INC       FMSSMAFD/INC
.          INC       FMSSBUFD/INC
.          INC       FMSTUPFD/INC
.          INC       FMSBPFFD/INC
.
.==============================================================================
.VARIABLE DEFINITIONS REQUIRED
.-----------------------------
.BUDNAME   DIM       8
.BUDTYPE   DIM       4
.LBUNAME   DIM       8
.STANAME   DIM       8
.SAVELEDG  DIM       2
.LEDGER    DIM       2
.ACCOUNT   DIM       12
.FMSB      INIT      "fmsb"
.FMSC      INIT      "fmsc"
.FMSL      INIT      "fmsl"
.FMSP      INIT      "fmsp"
.FMSS      INIT      "fmss"
.
.==============================================================================
.IO INCLUDES REQUIRED                                      
.-----------------------------
.          INC       PRCFMSUA    
.          INC       FMSUDACD    
.
.          INC       FMSAMAIO/INC
.          INC       FMSBUDIO/INC
.          INC       FMSBTYIO/INC
.          INC       FMSCONIO/INC
.          INC       FMSLMAIO/INC
.          INC       FMSLMCIO/INC
.          INC       FMSTCFIO/INC
.          INC       FMSFPSIO/INC
.          INC       FMSLBUIO/INC
.          INC       FMSSMAIO/INC
.          INC       FMSSBUIO/INC
.          INC       FMSTUPIO/INC
.          INC       FMSBPFIO/INC
.$$$$$$
.**********************************************************************
. Open Masterfiles Required
.**********************************************************************
CTUP0000  OPEN      CONTROLF,"controlf"
          CALL      RDFMCO50
          CALL      RDFMCO51
          CALL      RDFMCO52
          MOVE      "   51",AUDTSECT
          MOVE      "49",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,FMSAUDG
          CLOSE     CONTROLF
          MATCH     SP2,PORTCODE            * update for all ports ?
          GOTO      CTUP0100 IF EQUAL
.
          COMPARE   ONE,FMCOCALC            * auto calculation on ?
          GOTO      CTUP9999 IF NOT EQUAL
.
.---- check if anything to update ----
.
          PACK      KEY20,PORTCODE,SP70
          CALL      RSFMTU1
          CALL      RKFMTU1
          BRANCH    OVRCD,CTUP9999
          MATCH     PORTCODE,FMTUPORT
          GOTO      CTUP9999 IF NOT EQUAL
.
.---- check whether a budget program ----
.
          PACK      FMCOFUPD,FMCOFUPD,SP70
          REP       " 0",FMCOFUPD
          MATCH     "0",FMCOFUPD
          GOTO      CTUP0020 IF EQUAL       * Force update ? (do we ask quest ?)
.
          MATCH     "IBAFMS82",PRGID
          GOTO      CTUP0010 IF EQUAL       * Budget program ?
          MATCH     "IBAFMS83",PRGID
          GOTO      CTUP0010 IF EQUAL       * Budget program ?
          MATCH     "IBAFMS84",PRGID
          GOTO      CTUP0010 IF EQUAL       * Budget program ?
          MATCH     "IBAFMS86",PRGID
          GOTO      CTUP0010 IF EQUAL       * Budget program ?
          GOTO      CTUP0020                * Not a budget program !!
.
.---- budget program, so check what to update ----
.
CTUP0010  MATCH     "1",FMCOFUPD
          GOTO      CTUP0100 IF EQUAL       * Perform actual and budget updates
          MATCH     "2",FMCOFUPD
          GOTO      CTUP3000 IF EQUAL       * Perform budget updates
.
.---- ask whether to update ----
.
CTUP0020  DISPLAY   *P1:24,*EL,"Update All Total Records Now (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ";
          MOVE      "38",CCOL
          MOVE      "24",CVERT
          MOVE      "N",DEFYESNO
          CALL      YORN0000
          COMPARE   ZERO,FYESNO
          GOTO      CTUP9999 IF EQUAL
.
.**********************************************************************
. Update all Actuals Files
.**********************************************************************
CTUP0100  MOVE      ZERO,UIND1                   * clear valid records flag
.
.---- year loop ----
.
CTUP1000  MOVE      SP70,KEY2
          CALL      RSFMLA1
          CALL      RKFMLA1
          PACK      KEY6,FMLALEDG,SP70           * loop through years
          CALL      RSFMLC1
.
CTUP1100  CALL      RKFMLC1                      * get next year
          BRANCH    OVRCD,CTUP3000
          MATCH     FMLCLEDG,FMLALEDG            * no more years ?
          GOTO      CTUP3000 IF NOT EQUAL
.
          CALL      CLRACI00                     * Set Indicators on TUP
          COMPARE   ONE,UIND1
          GOTO      CTUP3000 IF NOT EQUAL        * no recs to update ?
.
          UNPACK    SP70,BUDNAME,STANAME         * mark files as closed
.
          CALL      ACTUP000                     * Update Actuals
.
          GOTO      CTUP1100
.
.---- budget type loop ----
.
CTUP3000  MOVE      ZERO,UIND1                   * clear valid records flag
          PACK      KEY4,SP70                    * loop through budget types
          CALL      RSFMBT1
CTUP4000  CALL      RKFMBT1                      * get next budget type
          BRANCH    OVRCD,CTUP8000
.
          CALL      CLRBDI00                     * Set Indicators
          COMPARE   ONE,UIND1
          GOTO      CTUP8000 IF NOT EQUAL        * no recs to update ?
.
          UNPACK    SP70,BUDNAME,STANAME,LBUNAME * mark files as closed
.
          CALL      BUDUP000                     * Update Totals 
.
          GOTO      CTUP4000
.
CTUP8000  CALL      DELTUP00                     * Delete Records
.
CTUP9999  RETURN
.------------------------------------------------------------
. Clear Indicators and Check for Records to Update
. Returns UIND1 = 1 Records to Update for This Year
. Returns UIND1 = 0 No Records to Update for This Year
.------------------------------------------------------------
CLRACI00  PACK      KEY20,PORTCODE,SP70          * clear update indicators
CLRACI10  CALL      RSFMTU1
          CALL      RKFMTU1
          BRANCH    OVRCD,CLRACI99               * no more records ?
.
          PACK      KEY20,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC,SP70
          MATCH     PORTCODE,SP70                * All Ports if Blank
          IF        !@EQUAL
            MATCH     PORTCODE,FMTUPORT          * Just one Port
            GOTO      CLRACI99 IF NOT EQUAL       * no more for this port ?
          ENDIF
.
          MOVE      ZERO,FMTUACT                 * clear indicator
          MATCH     FMTUSPEC,SP70
          GOTO      CLRACI80 IF EQUAL            * specific year ?
          MATCH     FMTUSPEC,FMLCYEAR
          GOTO      CLRACI80 IF EQUAL            * correct year ?
          MOVE      ONE,FMTUACT                  * set for skip update
          BRANCH    UIND1,CLRACI90               * valid records indic set ?
.
          PACK      KEY10,FMLCLEDG,FMLCYEAR,SP70 * save old key
          PACK      KEY6,FMLCLEDG,FMTUSPEC,SP70
          CALL      RDFMLC1                      * check if valid year
          MOVE      OVRCD,F1
          PACK      KEY6,KEY10
          CALL      RDFMLC1                      * restore old record
          BRANCH    F1,CLRACI90                  * was the year valid ? NO
.
CLRACI80  MOVE      ONE,UIND1                    * Found Record to Update
.
CLRACI90  CALL      UPFMTU1
          GOTO      CLRACI10
CLRACI99  RETURN
.------------------------------------------------------------
. Total Account Actuals Update Loop 
.------------------------------------------------------------
ACTUP000  PACK      KEY24,PORTCODE,SP70          * loop through records to updat
          CALL      RSFMTU2
          CALL      RKFMTU2
          BRANCH    OVRCD,ACTUP999               * no more records ?
          MATCH     "1",FMTUACT                  * record already updated
          GOTO      ACTUP999 IF EQUAL
.
          MATCH     SP2,PORTCODE                 * Update All Ports if Blank
          IF        !@EQUAL
            MATCH     FMTUPORT,PORTCODE
            GOTO      ACTUP999 IF NOT EQUAL      * update this port only
          ENDIF
.
          MOVE      ZERO,OVRCD
          MATCH     SP70,BUDNAME                 * Open if Blank Filename
          CALL      OPACT000 IF EQUAL            * Opens Files 
          BRANCH    OVRCD,ACTUP999
.
          MOVE      "1",FMTUACT                  * mark record as updated
          CALL      UPFMTU2
.
          DISPLAY   *P1:24,"Updating Actuals for ",FMLCYEAR:
                    " Ledger/Account : ",*V2LON,FMTUTLED,"/",FMTUTACC,*EL;
          MOVE      FMTUTLED,LEDGER              * set up parameters
          MOVE      FMTUTACC,ACCOUNT
          MOVE      FMTUSPEC,UTYPE
          IF        FMSAUDG=1
            CALL      OUDA0000                   * Open budget audit files
          ENDIF
.
          PACK      KEY14,LEDGER,ACCOUNT
          CALL      RDFMAM1
          IF        OVRCD=1
            DISPLAY   *P1:24,*EL,"ERROR Account Missing fmsama ",KEY14," - ";
            CALL      HITENTER
            GOTO      ACTUP000
          ENDIF
          MOVE      FMAMTYPE,F1
          BRANCH    F1,ACTUP200,ACTUP200,ACTUP200,ACTUP200,ACTUP200:
                       ACTUP100,ACTUP200,ACTUP200,ACTUP100
.
ACTUP100  PROC      FMSAB000                     * Total A/c Update
.
ACTUP200  PROC      FMSUA000                     * Add "Add-to" to tup File
          GOTO      ACTUP000
.
ACTUP999  RETURN
.------------------------------------------------------------
. Clear update indicators loop 
.------------------------------------------------------------
CLRBDI00  PACK      KEY20,PORTCODE,SP70          * clear update indicators
CLRBDI10  CALL      RSFMTU1
          CALL      RKFMTU1
          BRANCH    OVRCD,CLRBDI99               * no more records ?
.
          PACK      KEY20,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC,SP70
          MATCH     PORTCODE,SP70                * do all records ?
          IF        !@EQUAL
            MATCH     PORTCODE,FMTUPORT
            GOTO      CLRBDI99 IF NOT EQUAL        * no more for this port ?
          ENDIF
.
          MOVE      ZERO,FMTUBUD                 * clear indicator
          MATCH     FMTUSPEC,SP70
          GOTO      CLRBDI80 IF EQUAL            * specific budget type ?
          MATCH     FMTUSPEC,FMBTCODE
          GOTO      CLRBDI80 IF EQUAL            * correct budget type ?
          MOVE      ONE,FMTUBUD                  * set for skip update
          BRANCH    UIND1,CLRBDI90               * valid records indic set ?
.
          PACK      KEY10,FMBTCODE,SP70          * save old key
          PACK      KEY4,FMTUSPEC,SP70
          CALL      RDFMBT1                      * check if valid budget
          MOVE      OVRCD,F1
          PACK      KEY4,KEY10
          CALL      RDFMBT1                      * restore old record
          BRANCH    F1,CLRBDI90                  * was the type valid ?
.
CLRBDI80  MOVE      ONE,UIND1                    * all budgets
.
CLRBDI90  CALL      UPFMTU1
          GOTO      CLRBDI10
.
CLRBDI99  RETURN
.------------------------------------------------------------
. Total account budget update loop
.------------------------------------------------------------
BUDUP000  PACK      KEY24,PORTCODE,SP70          * loop through records to updat
          CALL      RSFMTU3
          CALL      RKFMTU3
          BRANCH    OVRCD,BUDUP999               * no more records ?
          MATCH     "1",FMTUBUD                  * record already updated
          GOTO      BUDUP999 IF EQUAL
.
          MATCH     SP2,PORTCODE                 * update for all budget types ?
          IF        !@EQUAL
            MATCH     FMTUPORT,PORTCODE
            GOTO      BUDUP999 IF NOT EQUAL      * not to update on this port ?
          ENDIF
.
          MOVE      ZERO,OVRCD
          MATCH     SP70,BUDNAME
          CALL      OPBUD000 IF EQUAL           * files open for this budget ?
          BRANCH    OVRCD,BUDUP999              * Can't Open
.
.          ---- update data ----
.
          MOVE      "1",FMTUBUD                  * mark record as updated
          CALL      UPFMTU3
          DISPLAY   *P1:24,"Updating Budgets for ",FMBTCODE:
                    " Ledger/Account : ",*V2LON,FMTUTLED,"/",FMTUTACC,*EL;
          MOVE      FMTUTLED,LEDGER              * set up parameters
          MOVE      FMTUTACC,ACCOUNT
          MOVE      FMTUSPEC,UTYPE
.
          PACK      KEY14,LEDGER,ACCOUNT
          CALL      RDFMAM1
          IF        OVRCD=1
            DISPLAY   *P1:24,*EL,"ERROR Account Missing fmsama ",KEY14," - ";
            CALL      HITENTER
            GOTO      BUDUP000
          ENDIF
          MOVE      FMAMTYPE,F1
          BRANCH    F1,BUDUP200,BUDUP200,BUDUP200,BUDUP200,BUDUP200:
                       BUDUP100,BUDUP200,BUDUP200,BUDUP100
.
BUDUP100  PROC      FMSAC000                     * calc total from below
.
BUDUP200  PROC      FMSUA000                     * calc totals up through tree
          GOTO      BUDUP000
.
BUDUP999  RETURN
.----------------------------------------
. Open Files Actual & Stats
.----------------------------------------
OPACT000  PACK      BUDNAME,FMSP,FMLCYEAR
          REP       " 0",BUDNAME
          PACK      STANAME,FMSS,FMLCYEAR
          REP       " 0",STANAME
.         
          MOVE      ZERO,OVRCD                   * open period summary file
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,BUDNAME
          TRAPCLR   IO
          BRANCH    OVRCD,OPACT999
.
          MOVE      ZERO,OVRCD                   * open stat period summary file
          TRAP      OVERCOND IF IO
          OPEN      FMSSMAA1,STANAME
          TRAPCLR   IO
          BRANCH    OVRCD,OPACT999
OPACT999  RETURN
.------------------------------------------------------------
. Open Budget Files
.------------------------------------------------------------
OPBUD000  PACK      BUDTYPE,FMBTCODE,SP70
          PACK      BUDNAME,FMSB,FMBTCODE,SP70
          REP       " 0",BUDNAME
          PACK      STANAME,FMSC,FMBTCODE,SP70
          REP       " 0",STANAME
          PACK      LBUNAME,FMSL,FMBTCODE,SP70
          REP       " 0",LBUNAME
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSBUDA1,BUDNAME
          TRAPCLR   IO
          BRANCH    OVRCD,OPBUD999
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSSBUA1,STANAME
          TRAPCLR   IO
          BRANCH    OVRCD,OPBUD999
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSLBUA2,LBUNAME
          TRAPCLR   IO
          LOAD      LBUNAME,OVRCD,SP70
          MOVE      ZERO,OVRCD
OPBUD999  RETURN
.------------------------------------------------------------
. Delete tup Record for Port
.------------------------------------------------------------
DELTUP00  PACK      KEY20,PORTCODE,SP70
          CALL      RDFMTU1
          IF        OVRCD=0
            CALL      RPFMTU1
          ENDIF
          DISPLAY   *P1:24,"Clearing Indicators : ",*EL;
.
DELTUP10  CALL      RKFMTU1
          BRANCH    OVRCD,DELTUP99
          MATCH     SP2,PORTCODE
          IF        !@EQUAL
            MATCH     FMTUPORT,PORTCODE
            GOTO      DELTUP99 IF NOT EQUAL
          ENDIF
.
          PACK      KEY20,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC,SP70
          CALL      DEFMTU1
          CALL      RSFMTU1
          DISPLAY   *P39:24,*V2LON,FMTUTLED,"/",FMTUTACC,*EL;
          GOTO      DELTUP10
.
DELTUP99  RETURN
.******************************************************************************
.* System    :   Accounting System                                            *
.* Procedure :   PRCFMSAB                                                     *
.* Desc      :   Recalculate a Total Account Value from its Related Sub A/c's *
.*                                                                            *
.* Used by   :   PRCFMSAA                                                     *
.*                                                                            *
.******************************************************************************
.* Date      :   11.10.90                                                     *
.* Author    :   B.G.Ackland (IBA)                                            *
.* Mods      :                                                                *
.*                                                                            *
.******************************************************************************
.
          DEFPROC   FMSAB000
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
F12P6     FORM      12.6
.
SAV01A    FORM      12.6
SAV02A    FORM      12.6
SAV03A    FORM      12.6
SAV04A    FORM      12.6
SAV05A    FORM      12.6
SAV06A    FORM      12.6
SAV07A    FORM      12.6
SAV08A    FORM      12.6
SAV09A    FORM      12.6
SAV10A    FORM      12.6
SAV11A    FORM      12.6
SAV12A    FORM      12.6
SAV13A    FORM      12.6
.
SAV01C    FORM      12.6
SAV02C    FORM      12.6
SAV03C    FORM      12.6
SAV04C    FORM      12.6
SAV05C    FORM      12.6
SAV06C    FORM      12.6
SAV07C    FORM      12.6
SAV08C    FORM      12.6
SAV09C    FORM      12.6
SAV10C    FORM      12.6
SAV11C    FORM      12.6
SAV12C    FORM      12.6
SAV13C    FORM      12.6
.
SAVCBF    FORM      12.2
SAVC01    FORM      12.2
SAVC02    FORM      12.2
SAVC03    FORM      12.2
SAVC04    FORM      12.2
SAVC05    FORM      12.2
SAVC06    FORM      12.2
SAVC07    FORM      12.2
SAVC08    FORM      12.2
SAVC09    FORM      12.2
SAVC10    FORM      12.2
SAVC11    FORM      12.2
SAVC12    FORM      12.2
SAVC13    FORM      12.2
.
SAVCBFD   FORM      12
SAVC01D   FORM      12
SAVC02D   FORM      12
SAVC03D   FORM      12
SAVC04D   FORM      12
SAVC05D   FORM      12
SAVC06D   FORM      12
SAVC07D   FORM      12
SAVC08D   FORM      12
SAVC09D   FORM      12
SAVC10D   FORM      12
SAVC11D   FORM      12
SAVC12D   FORM      12
SAVC13D   FORM      12
.
SAVCBFT   FORM      9
SAVC01T   FORM      9
SAVC02T   FORM      9
SAVC03T   FORM      9
SAVC04T   FORM      9
SAVC05T   FORM      9
SAVC06T   FORM      9
SAVC07T   FORM      9
SAVC08T   FORM      9
SAVC09T   FORM      9
SAVC10T   FORM      9
SAVC11T   FORM      9
SAVC12T   FORM      9
SAVC13T   FORM      9
.
SAVABF    FORM      12.2
SAVA01    FORM      12.2
SAVA02    FORM      12.2
SAVA03    FORM      12.2
SAVA04    FORM      12.2
SAVA05    FORM      12.2
SAVA06    FORM      12.2
SAVA07    FORM      12.2
SAVA08    FORM      12.2
SAVA09    FORM      12.2
SAVA10    FORM      12.2
SAVA11    FORM      12.2
SAVA12    FORM      12.2
SAVA13    FORM      12.2
.
SAVABFD   FORM      12
SAVA01D   FORM      12
SAVA02D   FORM      12
SAVA03D   FORM      12
SAVA04D   FORM      12
SAVA05D   FORM      12
SAVA06D   FORM      12
SAVA07D   FORM      12
SAVA08D   FORM      12
SAVA09D   FORM      12
SAVA10D   FORM      12
SAVA11D   FORM      12
SAVA12D   FORM      12
SAVA13D   FORM      12
.
SAVABFT   FORM      9
SAVA01T   FORM      9
SAVA02T   FORM      9
SAVA03T   FORM      9
SAVA04T   FORM      9
SAVA05T   FORM      9
SAVA06T   FORM      9
SAVA07T   FORM      9
SAVA08T   FORM      9
SAVA09T   FORM      9
SAVA10T   FORM      9
SAVA11T   FORM      9
SAVA12T   FORM      9
SAVA13T   FORM      9
.
SAVCOM    FORM      12.2
SAVCOM2   FORM      12.2
SAVCOMD   FORM      12
SAVCOMT   FORM      9
SAVKEY18  DIM       18
SAVKEY14  DIM       14
.
.******************************************************************************
.* CALC - Calculate totals                       Called by ML0000             *
.******************************************************************************
CALC0000  MATCH     "6",FMAMTYPE
          GOTO      CALC2000 IF NOT EQUAL
.
          CALL      MZTS0000       * Move Zero to Save Variables
          CALL      CALF0000       * Calculate Financial Total
.
          PACK      KEY14,FMAMLEDG,FMAMACCT
          CALL      RDFMFP1
          BRANCH    OVRCD,CALC1200
.
          CALL      MSTA0000       * Move Save to File Variables
          CALL      UPFMFP1
          GOTO      CALC9999
.
CALC1200  MOVE      FMAMLEDG,FMFPCULD
          MOVE      FMAMACCT,FMFPCUAC
          MOVE      SP70,FMFPSPAR
          CALL      MSTA0000       * Move Save to File Variables
          MOVE      ONE,AUDTTYPE
          CALL      WAFMST00       * Write to audit file
          CALL      WRFMFP1
          GOTO      CALC9999
.
. Statistical Calculations
.
CALC2000  MATCH     "9",FMAMTYPE
          GOTO      CALC9999 IF NOT EQUAL
.
          PACK      SAVKEY18,FMAMTYPE,FMAMCLEV,FMAMLEDG,FMAMACCT
.
          CALL      MZSS0000       * Move Zeros to Saved Amounts
          CALL      CALS0000       * Calculate Statistical Totals
.
          PACK      KEY14,FMAMLEDG,FMAMACCT
          CALL      RDFMSS1
          BRANCH    OVRCD,CALC3200
          CALL      MSTF0000       * Move Saved Amounts to FIle Totals
          CALL      UPFMSS1
          GOTO      CALC4000
.
CALC3200  MOVE      FMAMLEDG,FMSSLEDG
          MOVE      FMAMACCT,FMSSACCT
          CALL      MSTF0000       * Move Saved Amounts to FIle Totals
          CALL      WRFMSS1
.
CALC4000  
.
CALC9999  GOTO      FMSAB999
.**********************************************************************
.* Calculate Financial Total Account
.**********************************************************************
CALF0000  PACK      KEY33,FMAMLEDG,FMAMACCT
          PACK      SAVKEY14,FMAMLEDG,FMAMACCT
          CALL      RSFMTC1
CALF1000  CALL      RKFMTC1
          BRANCH    OVRCD,CALF9000
.
          UNPACK    SAVKEY14,FMAMLEDG,FMAMACCT
          MATCH     FMAMLEDG,FMTCTLED
          GOTO      CALF9000 IF NOT EQUAL
.
          MATCH     FMAMACCT,FMTCTACC
          GOTO      CALF9000 IF NOT EQUAL
.
          PACK      KEY14,FMTCSLED,FMTCSACC
          CALL      RDFMAM1            * Get Summary Details
          BRANCH    OVRCD,CALF1000
          CALL      RDFMFP1            * Get Summary Details
          BRANCH    OVRCD,CALF1000
.
          CALL      ADDF0000           * Add Sub total to Saved Totals
.
          GOTO      CALF1000
.
CALF9000  MOVE      SAVKEY14,KEY14     * Read back masterfile record and 
          CALL      RDFMAM1            * mult/div by constants
.
CALF9999  RETURN
.**********************************************************************
.* Calculate Statistical Total Account
.**********************************************************************
CALS0000  PACK      KEY33,FMAMLEDG,FMAMACCT
          PACK      SAVKEY14,FMAMLEDG,FMAMACCT
          CALL      RSFMTC1
CALS1000  CALL      RKFMTC1
          BRANCH    OVRCD,CALS9000
.
          UNPACK    SAVKEY14,FMAMLEDG,FMAMACCT
.
          MATCH     FMAMLEDG,FMTCTLED
          GOTO      CALS9000 IF NOT EQUAL
.
          MATCH     FMAMACCT,FMTCTACC
          GOTO      CALS9000 IF NOT EQUAL
.
          PACK      KEY14,FMTCSLED,FMTCSACC
          CALL      RDFMAM1
          BRANCH    OVRCD,CALS1000
.
          MATCH     "7",FMAMTYPE
          GOTO      CALS2000 IF NOT LESS   * stat record
.
          CALL      RDFMFP1
          BRANCH    OVRCD,CALS1000     * get data from nornal sub-account
          MOVE      FMFPABF,FMSSA1
          MOVE      FMFPCBF,FMSSC1
          ADD       FMFPA01,FMSSA1
          ADD       FMFPC01,FMSSC1
          MOVE      FMFPA02,FMSSA2
          MOVE      FMFPC02,FMSSC2
          MOVE      FMFPA03,FMSSA3
          MOVE      FMFPC03,FMSSC3
          MOVE      FMFPA04,FMSSA4
          MOVE      FMFPC04,FMSSC4
          MOVE      FMFPA05,FMSSA5
          MOVE      FMFPC05,FMSSC5
          MOVE      FMFPA06,FMSSA6
          MOVE      FMFPC06,FMSSC6
          MOVE      FMFPA07,FMSSA7
          MOVE      FMFPC07,FMSSC7
          MOVE      FMFPA08,FMSSA8
          MOVE      FMFPC08,FMSSC8
          MOVE      FMFPA09,FMSSA9
          MOVE      FMFPC09,FMSSC9
          MOVE      FMFPA10,FMSSA10
          MOVE      FMFPC10,FMSSC10
          MOVE      FMFPA11,FMSSA11
          MOVE      FMFPC11,FMSSC11
          MOVE      FMFPA12,FMSSA12
          MOVE      FMFPC12,FMSSC12
          MOVE      FMFPA13,FMSSA13
          MOVE      FMFPC13,FMSSC13
          GOTO      CALS3000
.
CALS2000  CALL      RDFMSS1
          BRANCH    OVRCD,CALS1000     * get data from stat sub-account
.
CALS3000  CALL      ADDS0000           * Add Sub total to Saved Totals (stats)
.
          GOTO      CALS1000
.
CALS9000  MOVE      SAVKEY14,KEY14     * Read back masterfile record and 
          CALL      RDFMAM1            * mult/div by constants
          BRANCH    OVRCD,CALS9999
          CALL      MAMT0000
.
CALS9999  RETURN
.**********************************************************************
.* Mult Amounts by Constant                                           *
.**********************************************************************
MAMT0000  MOVE      FMAMMULT,F12P6     * get constant
          MOVE      FMAMDIV,CDIV1
          MOVE      F12P6,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,F12P6
.
.
          MULT      F12P6,SAV01A
          MULT      F12P6,SAV02A
          MULT      F12P6,SAV03A
          MULT      F12P6,SAV04A
          MULT      F12P6,SAV05A
          MULT      F12P6,SAV06A
          MULT      F12P6,SAV07A
          MULT      F12P6,SAV08A
          MULT      F12P6,SAV09A
          MULT      F12P6,SAV10A
          MULT      F12P6,SAV11A
          MULT      F12P6,SAV12A
          MULT      F12P6,SAV13A
.
          MULT      F12P6,SAV01C
          MULT      F12P6,SAV02C
          MULT      F12P6,SAV03C
          MULT      F12P6,SAV04C
          MULT      F12P6,SAV05C
          MULT      F12P6,SAV06C
          MULT      F12P6,SAV07C
          MULT      F12P6,SAV08C
          MULT      F12P6,SAV09C
          MULT      F12P6,SAV10C
          MULT      F12P6,SAV11C
          MULT      F12P6,SAV12C
          MULT      F12P6,SAV13C
.
MAMT9999  RETURN
.**********************************************************************
.* Add stats records to temps
.**********************************************************************
ADDS0000  MOVE      FMTCADDT,F1
          BRANCH    F1,ADDS2000,ADDS3000,ADDS4000 * 0=add,1=sub,2=div,3=mult
.
. add
.
ADDS1000  
          ADD       FMSSA1,SAV01A
          ADD       FMSSA2,SAV02A
          ADD       FMSSA3,SAV03A
          ADD       FMSSA4,SAV04A
          ADD       FMSSA5,SAV05A
          ADD       FMSSA6,SAV06A
          ADD       FMSSA7,SAV07A
          ADD       FMSSA8,SAV08A
          ADD       FMSSA9,SAV09A
          ADD       FMSSA10,SAV10A
          ADD       FMSSA11,SAV11A
          ADD       FMSSA12,SAV12A
          ADD       FMSSA13,SAV13A
.
          ADD       FMSSC1,SAV01C
          ADD       FMSSC2,SAV02C
          ADD       FMSSC3,SAV03C
          ADD       FMSSC4,SAV04C
          ADD       FMSSC5,SAV05C
          ADD       FMSSC6,SAV06C
          ADD       FMSSC7,SAV07C
          ADD       FMSSC8,SAV08C
          ADD       FMSSC9,SAV09C
          ADD       FMSSC10,SAV10C
          ADD       FMSSC11,SAV11C
          ADD       FMSSC12,SAV12C
          ADD       FMSSC13,SAV13C
.
          GOTO      ADDS9999
.
. sub
.
ADDS2000  
          SUB       FMSSA1,SAV01A
          SUB       FMSSA2,SAV02A
          SUB       FMSSA3,SAV03A
          SUB       FMSSA4,SAV04A
          SUB       FMSSA5,SAV05A
          SUB       FMSSA6,SAV06A
          SUB       FMSSA7,SAV07A
          SUB       FMSSA8,SAV08A
          SUB       FMSSA9,SAV09A
          SUB       FMSSA10,SAV10A
          SUB       FMSSA11,SAV11A
          SUB       FMSSA12,SAV12A
          SUB       FMSSA13,SAV13A
.
          SUB       FMSSC1,SAV01C
          SUB       FMSSC2,SAV02C
          SUB       FMSSC3,SAV03C
          SUB       FMSSC4,SAV04C
          SUB       FMSSC5,SAV05C
          SUB       FMSSC6,SAV06C
          SUB       FMSSC7,SAV07C
          SUB       FMSSC8,SAV08C
          SUB       FMSSC9,SAV09C
          SUB       FMSSC10,SAV10C
          SUB       FMSSC11,SAV11C
          SUB       FMSSC12,SAV12C
          SUB       FMSSC13,SAV13C
.
          GOTO      ADDS9999
.
. div
.
ADDS3000  
          MOVE      FMSSA1,CDIV1
          MOVE      SAV01A,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV01A
.
          MOVE      FMSSA2,CDIV1
          MOVE      SAV02A,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV02A
.
          MOVE      FMSSA3,CDIV1
          MOVE      SAV03A,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV03A
.
          MOVE      FMSSA4,CDIV1
          MOVE      SAV04A,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV04A
.
          MOVE      FMSSA5,CDIV1
          MOVE      SAV05A,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV05A
.
          MOVE      FMSSA6,CDIV1
          MOVE      SAV06A,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV06A
.
          MOVE      FMSSA7,CDIV1
          MOVE      SAV07A,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV07A
.
          MOVE      FMSSA8,CDIV1
          MOVE      SAV08A,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV08A
.
          MOVE      FMSSA9,CDIV1
          MOVE      SAV09A,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV09A
.
          MOVE      FMSSA10,CDIV1
          MOVE      SAV10A,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV10A
.
          MOVE      FMSSA11,CDIV1
          MOVE      SAV11A,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV11A
.
          MOVE      FMSSA12,CDIV1
          MOVE      SAV12A,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV12A
.
          MOVE      FMSSA13,CDIV1
          MOVE      SAV13A,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV13A
.
.
          MOVE      FMSSC1,CDIV1
          MOVE      SAV01C,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV01C
.
          MOVE      FMSSC2,CDIV1
          MOVE      SAV02C,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV02C
.
          MOVE      FMSSC3,CDIV1
          MOVE      SAV03C,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV03C
.
          MOVE      FMSSC4,CDIV1
          MOVE      SAV04C,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV04C
.
          MOVE      FMSSC5,CDIV1
          MOVE      SAV05C,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV05C
.
          MOVE      FMSSC6,CDIV1
          MOVE      SAV06C,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV06C
.
          MOVE      FMSSC7,CDIV1
          MOVE      SAV07C,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV07C
.
          MOVE      FMSSC8,CDIV1
          MOVE      SAV08C,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV08C
.
          MOVE      FMSSC9,CDIV1
          MOVE      SAV09C,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV09C
.
          MOVE      FMSSC10,CDIV1
          MOVE      SAV10C,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV10C
.
          MOVE      FMSSC11,CDIV1
          MOVE      SAV11C,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV11C
.
          MOVE      FMSSC12,CDIV1
          MOVE      SAV12C,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV12C
.
          MOVE      FMSSC13,CDIV1
          MOVE      SAV13C,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV13C
.
.
          GOTO      ADDS9999
.
. mult
.
ADDS4000  
          MULT      FMSSA1,SAV01A
          MULT      FMSSA2,SAV02A
          MULT      FMSSA3,SAV03A
          MULT      FMSSA4,SAV04A
          MULT      FMSSA5,SAV05A
          MULT      FMSSA6,SAV06A
          MULT      FMSSA7,SAV07A
          MULT      FMSSA8,SAV08A
          MULT      FMSSA9,SAV09A
          MULT      FMSSA10,SAV10A
          MULT      FMSSA11,SAV11A
          MULT      FMSSA12,SAV12A
          MULT      FMSSA13,SAV13A
.
          MULT      FMSSC1,SAV01C
          MULT      FMSSC2,SAV02C
          MULT      FMSSC3,SAV03C
          MULT      FMSSC4,SAV04C
          MULT      FMSSC5,SAV05C
          MULT      FMSSC6,SAV06C
          MULT      FMSSC7,SAV07C
          MULT      FMSSC8,SAV08C
          MULT      FMSSC9,SAV09C
          MULT      FMSSC10,SAV10C
          MULT      FMSSC11,SAV11C
          MULT      FMSSC12,SAV12C
          MULT      FMSSC13,SAV13C
.
          GOTO      ADDS9999
.
ADDS9999  RETURN
.**********************************************************************
. Move Zero to all stats Saved Amounts
.**********************************************************************
MZSS0000  
          MOVE      ZERO,SAV01A
          MOVE      ZERO,SAV02A
          MOVE      ZERO,SAV03A
          MOVE      ZERO,SAV04A
          MOVE      ZERO,SAV05A
          MOVE      ZERO,SAV06A
          MOVE      ZERO,SAV07A
          MOVE      ZERO,SAV08A
          MOVE      ZERO,SAV09A
          MOVE      ZERO,SAV10A
          MOVE      ZERO,SAV11A
          MOVE      ZERO,SAV12A
          MOVE      ZERO,SAV13A
.
          MOVE      ZERO,SAV01C
          MOVE      ZERO,SAV02C
          MOVE      ZERO,SAV03C
          MOVE      ZERO,SAV04C
          MOVE      ZERO,SAV05C
          MOVE      ZERO,SAV06C
          MOVE      ZERO,SAV07C
          MOVE      ZERO,SAV08C
          MOVE      ZERO,SAV09C
          MOVE      ZERO,SAV10C
          MOVE      ZERO,SAV11C
          MOVE      ZERO,SAV12C
          MOVE      ZERO,SAV13C
.
          RETURN
.**********************************************************************
. Move Save Stats to File
.**********************************************************************
MSTF0000  MOVE      SP70,FMSSSPAR
          MOVE      SAV01A,FMSSA1
          MOVE      SAV02A,FMSSA2
          MOVE      SAV03A,FMSSA3
          MOVE      SAV04A,FMSSA4
          MOVE      SAV05A,FMSSA5
          MOVE      SAV06A,FMSSA6
          MOVE      SAV07A,FMSSA7
          MOVE      SAV08A,FMSSA8
          MOVE      SAV09A,FMSSA9
          MOVE      SAV10A,FMSSA10
          MOVE      SAV11A,FMSSA11
          MOVE      SAV12A,FMSSA12
          MOVE      SAV13A,FMSSA13
.
          MOVE      SAV01C,FMSSC1
          MOVE      SAV02C,FMSSC2
          MOVE      SAV03C,FMSSC3
          MOVE      SAV04C,FMSSC4
          MOVE      SAV05C,FMSSC5
          MOVE      SAV06C,FMSSC6
          MOVE      SAV07C,FMSSC7
          MOVE      SAV08C,FMSSC8
          MOVE      SAV09C,FMSSC9
          MOVE      SAV10C,FMSSC10
          MOVE      SAV11C,FMSSC11
          MOVE      SAV12C,FMSSC12
          MOVE      SAV13C,FMSSC13
.
          RETURN
.**********************************************************************
. Move Zero to sav variables for calculation
.**********************************************************************
MZTS0000  MOVE      ZERO,SAVCBF
          MOVE      ZERO,SAVC01
          MOVE      ZERO,SAVC02
          MOVE      ZERO,SAVC03
          MOVE      ZERO,SAVC04
          MOVE      ZERO,SAVC05
          MOVE      ZERO,SAVC06
          MOVE      ZERO,SAVC07
          MOVE      ZERO,SAVC08
          MOVE      ZERO,SAVC09
          MOVE      ZERO,SAVC10
          MOVE      ZERO,SAVC11
          MOVE      ZERO,SAVC12
          MOVE      ZERO,SAVC13
          MOVE      ZERO,SAVABF
          MOVE      ZERO,SAVA01
          MOVE      ZERO,SAVA02
          MOVE      ZERO,SAVA03
          MOVE      ZERO,SAVA04
          MOVE      ZERO,SAVA05
          MOVE      ZERO,SAVA06
          MOVE      ZERO,SAVA07
          MOVE      ZERO,SAVA08
          MOVE      ZERO,SAVA09
          MOVE      ZERO,SAVA10
          MOVE      ZERO,SAVA11
          MOVE      ZERO,SAVA12
          MOVE      ZERO,SAVA13
          MOVE      ZERO,SAVCOM
          MOVE      ZERO,SAVCOM2
.
          MOVE      ZERO,SAVCBFD
          MOVE      ZERO,SAVC01D
          MOVE      ZERO,SAVC02D
          MOVE      ZERO,SAVC03D
          MOVE      ZERO,SAVC04D
          MOVE      ZERO,SAVC05D
          MOVE      ZERO,SAVC06D
          MOVE      ZERO,SAVC07D
          MOVE      ZERO,SAVC08D
          MOVE      ZERO,SAVC09D
          MOVE      ZERO,SAVC10D
          MOVE      ZERO,SAVC11D
          MOVE      ZERO,SAVC12D
          MOVE      ZERO,SAVC13D
          MOVE      ZERO,SAVABFD
          MOVE      ZERO,SAVA01D
          MOVE      ZERO,SAVA02D
          MOVE      ZERO,SAVA03D
          MOVE      ZERO,SAVA04D
          MOVE      ZERO,SAVA05D
          MOVE      ZERO,SAVA06D
          MOVE      ZERO,SAVA07D
          MOVE      ZERO,SAVA08D
          MOVE      ZERO,SAVA09D
          MOVE      ZERO,SAVA10D
          MOVE      ZERO,SAVA11D
          MOVE      ZERO,SAVA12D
          MOVE      ZERO,SAVA13D
          MOVE      ZERO,SAVCOMD
.
          MOVE      ZERO,SAVCBFT
          MOVE      ZERO,SAVC01T
          MOVE      ZERO,SAVC02T
          MOVE      ZERO,SAVC03T
          MOVE      ZERO,SAVC04T
          MOVE      ZERO,SAVC05T
          MOVE      ZERO,SAVC06T
          MOVE      ZERO,SAVC07T
          MOVE      ZERO,SAVC08T
          MOVE      ZERO,SAVC09T
          MOVE      ZERO,SAVC10T
          MOVE      ZERO,SAVC11T
          MOVE      ZERO,SAVC12T
          MOVE      ZERO,SAVC13T
          MOVE      ZERO,SAVABFT
          MOVE      ZERO,SAVA01T
          MOVE      ZERO,SAVA02T
          MOVE      ZERO,SAVA03T
          MOVE      ZERO,SAVA04T
          MOVE      ZERO,SAVA05T
          MOVE      ZERO,SAVA06T
          MOVE      ZERO,SAVA07T
          MOVE      ZERO,SAVA08T
          MOVE      ZERO,SAVA09T
          MOVE      ZERO,SAVA10T
          MOVE      ZERO,SAVA11T
          MOVE      ZERO,SAVA12T
          MOVE      ZERO,SAVA13T
          MOVE      ZERO,SAVCOMT
.
          RETURN
.
.**********************************************************************
. Move Save Totals to File Totals for Update
.**********************************************************************
MSTA0000  MOVE      SAVCBF,FMFPCBF
          MOVE      SAVC01,FMFPC01
          MOVE      SAVC02,FMFPC02
          MOVE      SAVC03,FMFPC03
          MOVE      SAVC04,FMFPC04
          MOVE      SAVC05,FMFPC05
          MOVE      SAVC06,FMFPC06
          MOVE      SAVC07,FMFPC07
          MOVE      SAVC08,FMFPC08
          MOVE      SAVC09,FMFPC09
          MOVE      SAVC10,FMFPC10
          MOVE      SAVC11,FMFPC11
          MOVE      SAVC12,FMFPC12
          MOVE      SAVC13,FMFPC13
          MOVE      SAVABF,FMFPABF
          MOVE      SAVA01,FMFPA01
          MOVE      SAVA02,FMFPA02
          MOVE      SAVA03,FMFPA03
          MOVE      SAVA04,FMFPA04
          MOVE      SAVA05,FMFPA05
          MOVE      SAVA06,FMFPA06
          MOVE      SAVA07,FMFPA07
          MOVE      SAVA08,FMFPA08
          MOVE      SAVA09,FMFPA09
          MOVE      SAVA10,FMFPA10
          MOVE      SAVA11,FMFPA11
          MOVE      SAVA12,FMFPA12
          MOVE      SAVA13,FMFPA13
          MOVE      SAVCOM,FMFPCOM
          MOVE      SAVCOM2,FMFPCOM2
.
          MOVE      SAVCBFD,FMFPCBFD
          MOVE      SAVC01D,FMFPC01D
          MOVE      SAVC02D,FMFPC02D
          MOVE      SAVC03D,FMFPC03D
          MOVE      SAVC04D,FMFPC04D
          MOVE      SAVC05D,FMFPC05D
          MOVE      SAVC06D,FMFPC06D
          MOVE      SAVC07D,FMFPC07D
          MOVE      SAVC08D,FMFPC08D
          MOVE      SAVC09D,FMFPC09D
          MOVE      SAVC10D,FMFPC10D
          MOVE      SAVC11D,FMFPC11D
          MOVE      SAVC12D,FMFPC12D
          MOVE      SAVC13D,FMFPC13D
          MOVE      SAVABFD,FMFPABFD
          MOVE      SAVA01D,FMFPA01D
          MOVE      SAVA02D,FMFPA02D
          MOVE      SAVA03D,FMFPA03D
          MOVE      SAVA04D,FMFPA04D
          MOVE      SAVA05D,FMFPA05D
          MOVE      SAVA06D,FMFPA06D
          MOVE      SAVA07D,FMFPA07D
          MOVE      SAVA08D,FMFPA08D
          MOVE      SAVA09D,FMFPA09D
          MOVE      SAVA10D,FMFPA10D
          MOVE      SAVA11D,FMFPA11D
          MOVE      SAVA12D,FMFPA12D
          MOVE      SAVA13D,FMFPA13D
          MOVE      SAVCOMD,FMFPCOMD
.
          MOVE      SAVCBFT,FMFPCBFT
          MOVE      SAVC01T,FMFPC01T
          MOVE      SAVC02T,FMFPC02T
          MOVE      SAVC03T,FMFPC03T
          MOVE      SAVC04T,FMFPC04T
          MOVE      SAVC05T,FMFPC05T
          MOVE      SAVC06T,FMFPC06T
          MOVE      SAVC07T,FMFPC07T
          MOVE      SAVC08T,FMFPC08T
          MOVE      SAVC09T,FMFPC09T
          MOVE      SAVC10T,FMFPC10T
          MOVE      SAVC11T,FMFPC11T
          MOVE      SAVC12T,FMFPC12T
          MOVE      SAVC13T,FMFPC13T
          MOVE      SAVABFT,FMFPABFT
          MOVE      SAVA01T,FMFPA01T
          MOVE      SAVA02T,FMFPA02T
          MOVE      SAVA03T,FMFPA03T
          MOVE      SAVA04T,FMFPA04T
          MOVE      SAVA05T,FMFPA05T
          MOVE      SAVA06T,FMFPA06T
          MOVE      SAVA07T,FMFPA07T
          MOVE      SAVA08T,FMFPA08T
          MOVE      SAVA09T,FMFPA09T
          MOVE      SAVA10T,FMFPA10T
          MOVE      SAVA11T,FMFPA11T
          MOVE      SAVA12T,FMFPA12T
          MOVE      SAVA13T,FMFPA13T
          MOVE      SAVCOMT,FMFPCOMT
          RETURN
.**********************************************************************
. Add Totals to Save Totals for Update
.**********************************************************************
ADDF0000  ADD       FMFPCBF,SAVCBF
          ADD       FMFPC01,SAVC01
          ADD       FMFPC02,SAVC02
          ADD       FMFPC03,SAVC03
          ADD       FMFPC04,SAVC04
          ADD       FMFPC05,SAVC05
          ADD       FMFPC06,SAVC06
          ADD       FMFPC07,SAVC07
          ADD       FMFPC08,SAVC08
          ADD       FMFPC09,SAVC09
          ADD       FMFPC10,SAVC10
          ADD       FMFPC11,SAVC11
          ADD       FMFPC12,SAVC12
          ADD       FMFPC13,SAVC13
          ADD       FMFPABF,SAVABF
          ADD       FMFPA01,SAVA01
          ADD       FMFPA02,SAVA02
          ADD       FMFPA03,SAVA03
          ADD       FMFPA04,SAVA04
          ADD       FMFPA05,SAVA05
          ADD       FMFPA06,SAVA06
          ADD       FMFPA07,SAVA07
          ADD       FMFPA08,SAVA08
          ADD       FMFPA09,SAVA09
          ADD       FMFPA10,SAVA10
          ADD       FMFPA11,SAVA11
          ADD       FMFPA12,SAVA12
          ADD       FMFPA13,SAVA13
          ADD       FMFPCOM,SAVCOM
          ADD       FMFPCOM2,SAVCOM2
.
          MOVE      FMAMTYPE,F2
          BRANCH    F2,ADDF0500,ADDF0500,ADDF0500,ADDF0500,ADDF0500
          GOTO      ADDF1000 
.
. Move Dollar & Cents fields to dollar and thousand 
.
ADDF0500  
          MOVE      FMFPCBF,FMFPCBFD
          MOVE      FMFPC01,FMFPC01D
          MOVE      FMFPC02,FMFPC02D
          MOVE      FMFPC03,FMFPC03D
          MOVE      FMFPC04,FMFPC04D
          MOVE      FMFPC05,FMFPC05D
          MOVE      FMFPC06,FMFPC06D
          MOVE      FMFPC07,FMFPC07D
          MOVE      FMFPC08,FMFPC08D
          MOVE      FMFPC09,FMFPC09D
          MOVE      FMFPC10,FMFPC10D
          MOVE      FMFPC11,FMFPC11D
          MOVE      FMFPC12,FMFPC12D
          MOVE      FMFPC13,FMFPC13D
          MOVE      FMFPABF,FMFPABFD
          MOVE      FMFPA01,FMFPA01D
          MOVE      FMFPA02,FMFPA02D
          MOVE      FMFPA03,FMFPA03D
          MOVE      FMFPA04,FMFPA04D
          MOVE      FMFPA05,FMFPA05D
          MOVE      FMFPA06,FMFPA06D
          MOVE      FMFPA07,FMFPA07D
          MOVE      FMFPA08,FMFPA08D
          MOVE      FMFPA09,FMFPA09D
          MOVE      FMFPA10,FMFPA10D
          MOVE      FMFPA11,FMFPA11D
          MOVE      FMFPA12,FMFPA12D
          MOVE      FMFPA13,FMFPA13D
          MOVE      FMFPCOM,FMFPCOMD
.
          MOVE      FMFPCBF,FMFPCBFT
          MOVE      FMFPC01,FMFPC01T
          MOVE      FMFPC02,FMFPC02T
          MOVE      FMFPC03,FMFPC03T
          MOVE      FMFPC04,FMFPC04T
          MOVE      FMFPC05,FMFPC05T
          MOVE      FMFPC06,FMFPC06T
          MOVE      FMFPC07,FMFPC07T
          MOVE      FMFPC08,FMFPC08T
          MOVE      FMFPC09,FMFPC09T
          MOVE      FMFPC10,FMFPC10T
          MOVE      FMFPC11,FMFPC11T
          MOVE      FMFPC12,FMFPC12T
          MOVE      FMFPC13,FMFPC13T
          MOVE      FMFPABF,FMFPABFT
          MOVE      FMFPA01,FMFPA01T
          MOVE      FMFPA02,FMFPA02T
          MOVE      FMFPA03,FMFPA03T
          MOVE      FMFPA04,FMFPA04T
          MOVE      FMFPA05,FMFPA05T
          MOVE      FMFPA06,FMFPA06T
          MOVE      FMFPA07,FMFPA07T
          MOVE      FMFPA08,FMFPA08T
          MOVE      FMFPA09,FMFPA09T
          MOVE      FMFPA10,FMFPA10T
          MOVE      FMFPA11,FMFPA11T
          MOVE      FMFPA12,FMFPA12T
          MOVE      FMFPA13,FMFPA13T
          MOVE      FMFPCOM,FMFPCOMT
.
          DIV       "1000",FMFPCBFT
          DIV       "1000",FMFPC01T
          DIV       "1000",FMFPC02T
          DIV       "1000",FMFPC03T
          DIV       "1000",FMFPC04T
          DIV       "1000",FMFPC05T
          DIV       "1000",FMFPC06T
          DIV       "1000",FMFPC07T
          DIV       "1000",FMFPC08T
          DIV       "1000",FMFPC09T
          DIV       "1000",FMFPC10T
          DIV       "1000",FMFPC11T
          DIV       "1000",FMFPC12T
          DIV       "1000",FMFPC13T
          DIV       "1000",FMFPABFT
          DIV       "1000",FMFPA01T
          DIV       "1000",FMFPA02T
          DIV       "1000",FMFPA03T
          DIV       "1000",FMFPA04T
          DIV       "1000",FMFPA05T
          DIV       "1000",FMFPA06T
          DIV       "1000",FMFPA07T
          DIV       "1000",FMFPA08T
          DIV       "1000",FMFPA09T
          DIV       "1000",FMFPA10T
          DIV       "1000",FMFPA11T
          DIV       "1000",FMFPA12T
          DIV       "1000",FMFPA13T
          DIV       "1000",FMFPCOMT
          CALL      UPFMFP1
.
ADDF1000  ADD       FMFPCBFD,SAVCBFD
          ADD       FMFPC01D,SAVC01D
          ADD       FMFPC02D,SAVC02D
          ADD       FMFPC03D,SAVC03D
          ADD       FMFPC04D,SAVC04D
          ADD       FMFPC05D,SAVC05D
          ADD       FMFPC06D,SAVC06D
          ADD       FMFPC07D,SAVC07D
          ADD       FMFPC08D,SAVC08D
          ADD       FMFPC09D,SAVC09D
          ADD       FMFPC10D,SAVC10D
          ADD       FMFPC11D,SAVC11D
          ADD       FMFPC12D,SAVC12D
          ADD       FMFPC13D,SAVC13D
          ADD       FMFPABFD,SAVABFD
          ADD       FMFPA01D,SAVA01D
          ADD       FMFPA02D,SAVA02D
          ADD       FMFPA03D,SAVA03D
          ADD       FMFPA04D,SAVA04D
          ADD       FMFPA05D,SAVA05D
          ADD       FMFPA06D,SAVA06D
          ADD       FMFPA07D,SAVA07D
          ADD       FMFPA08D,SAVA08D
          ADD       FMFPA09D,SAVA09D
          ADD       FMFPA10D,SAVA10D
          ADD       FMFPA11D,SAVA11D
          ADD       FMFPA12D,SAVA12D
          ADD       FMFPA13D,SAVA13D
          ADD       FMFPCOMD,SAVCOMD
.
          ADD       FMFPCBFT,SAVCBFT
          ADD       FMFPC01T,SAVC01T
          ADD       FMFPC02T,SAVC02T
          ADD       FMFPC03T,SAVC03T
          ADD       FMFPC04T,SAVC04T
          ADD       FMFPC05T,SAVC05T
          ADD       FMFPC06T,SAVC06T
          ADD       FMFPC07T,SAVC07T
          ADD       FMFPC08T,SAVC08T
          ADD       FMFPC09T,SAVC09T
          ADD       FMFPC10T,SAVC10T
          ADD       FMFPC11T,SAVC11T
          ADD       FMFPC12T,SAVC12T
          ADD       FMFPC13T,SAVC13T
          ADD       FMFPABFT,SAVABFT
          ADD       FMFPA01T,SAVA01T
          ADD       FMFPA02T,SAVA02T
          ADD       FMFPA03T,SAVA03T
          ADD       FMFPA04T,SAVA04T
          ADD       FMFPA05T,SAVA05T
          ADD       FMFPA06T,SAVA06T
          ADD       FMFPA07T,SAVA07T
          ADD       FMFPA08T,SAVA08T
          ADD       FMFPA09T,SAVA09T
          ADD       FMFPA10T,SAVA10T
          ADD       FMFPA11T,SAVA11T
          ADD       FMFPA12T,SAVA12T
          ADD       FMFPA13T,SAVA13T
          ADD       FMFPCOMT,SAVCOMT
.
          RETURN
.******************************************************************************
.* INCLUDES                                                                   *
.******************************************************************************
FMSAB999  ENDPROC
.
.******************************************************************************
.* System    :   Accounting System                                            *
.* Procedure :   PRCFMSAC                                                     *
.* Desc      :   Budget Total Account Update                                  *
.******************************************************************************
.* Date      :   11.10.90                                                     *
.* Author    :   B.G.Ackland (IBA)                                            *
.* Mods      :                                                                *
.*                                                                            *
.******************************************************************************
.
          DEFPROC   FMSAC000
.
.==============================================================================
.LOCAL VARIABLE DEFINITION
.-------------------------
F12P6     FORM      12.6
.
SAV01     FORM      12.6
SAV02     FORM      12.6
SAV03     FORM      12.6
SAV04     FORM      12.6
SAV05     FORM      12.6
SAV06     FORM      12.6
SAV07     FORM      12.6
SAV08     FORM      12.6
SAV09     FORM      12.6
SAV10     FORM      12.6
SAV11     FORM      12.6
SAV12     FORM      12.6
SAV13     FORM      12.6
.
SAVC01    FORM      12.2
SAVC02    FORM      12.2
SAVC03    FORM      12.2
SAVC04    FORM      12.2
SAVC05    FORM      12.2
SAVC06    FORM      12.2
SAVC07    FORM      12.2
SAVC08    FORM      12.2
SAVC09    FORM      12.2
SAVC10    FORM      12.2
SAVC11    FORM      12.2
SAVC12    FORM      12.2
SAVC13    FORM      12.2
.
SAVC01D   FORM      12
SAVC02D   FORM      12
SAVC03D   FORM      12
SAVC04D   FORM      12
SAVC05D   FORM      12
SAVC06D   FORM      12
SAVC07D   FORM      12
SAVC08D   FORM      12
SAVC09D   FORM      12
SAVC10D   FORM      12
SAVC11D   FORM      12
SAVC12D   FORM      12
SAVC13D   FORM      12
.
SAVC01T   FORM      9
SAVC02T   FORM      9
SAVC03T   FORM      9
SAVC04T   FORM      9
SAVC05T   FORM      9
SAVC06T   FORM      9
SAVC07T   FORM      9
SAVC08T   FORM      9
SAVC09T   FORM      9
SAVC10T   FORM      9
SAVC11T   FORM      9
SAVC12T   FORM      9
SAVC13T   FORM      9
.
SAVKEY18  DIM       18
SAVKEY14  DIM       14
.
.******************************************************************************
.* CALC - Calculate totals                       Called by ML0000             *
.******************************************************************************
CALC0000  MATCH     "6",FMAMTYPE
          GOTO      CALC2000 IF NOT EQUAL
.
          CALL      MZTS0000       * Move Zero to Save Variables
          CALL      CALF0000       * Calculate Financial Total
.
          PACK      KEY14,FMAMLEDG,FMAMACCT
          CALL      RDFMBU1
          BRANCH    OVRCD,CALC1200
.
          CALL      MSTA0000       * Move Save to File Variables
          CALL      UPBUD000       * update and write to audit file
          GOTO      CALC9999
.
CALC1200  MOVE      FMAMLEDG,FMBUCULD
          MOVE      FMAMACCT,FMBUCUAC
          MOVE      SP70,FMBUCUSP
          CALL      MSTA0000       * Move Save to File Variables
          MOVE      ONE,AUDTTYPE
          CALL      WAFMBU00
          CALL      WRFMBU1
          GOTO      CALC9999
.
. Statistical Calculations
.
CALC2000  MATCH     "9",FMAMTYPE
          GOTO      CALC9999 IF NOT EQUAL
.
          CALL      MZSS0000       * Move Zeros to Saved Amounts
          CALL      CALS0000       * Calculate Statistical Totals
.
          PACK      KEY14,FMAMLEDG,FMAMACCT
          CALL      RDFMST1
          BRANCH    OVRCD,CALC3200
          CALL      MSTF0000       * Move Saved Amounts to FIle Totals
          CALL      UPFMST1
          GOTO      CALC4000
.
CALC3200  MOVE      FMAMLEDG,FMSTCULD
          MOVE      FMAMACCT,FMSTCUAC
          CALL      MSTF0000       * Move Saved Amounts to FIle Totals
          MOVE      ONE,AUDTTYPE
          CALL      WAFMST00       * Write to audit file
          CALL      WRFMST1
.
.---- check for budget link ----
.
CALC4000  PACK      KEY28,FMAMLEDG,FMAMACCT,SP70
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          CALL      RSFMBL2       * go to start of budget link file (if open)
          TRAPCLR   IO
          BRANCH    OVRCD,CALC9999
.
CALC4100  CALL      RKFMBL2
          BRANCH    OVRCD,CALC9999
          PACK      KEY14,FMBLFLED,FMBLFACC,SP70
          MATCH     KEY14,KEY28
          GOTO      CALC9999 IF NOT EQUAL
.
          PACK      KEY14,FMBLTLED,FMBLTACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,CALC4100
.
          CALL      WRTU0000
          MATCH     "8",FMAMTYPE
          GOTO      CALC4200 IF NOT EQUAL   * stat posting ?
          UNPACK    KEY14,FMSTCULD,FMSTCUAC
          UNPACK    SP70,FMSTCUPR
          CALL      RAFMST1
          IF        OVRCD=1
            MOVE      ONE,AUDTTYPE
            CALL      WAFMST00              * Write to audit file
            CALL      WRFMST1
          ELSE
            CALL      UPSBU000              * Update File & write to audit
          ENDIF
          GOTO      CALC4100
.
CALC4200  MATCH     "6",FMAMTYPE
          GOTO      CALC4100 IF NOT LESS    * normal posting ?
          UNPACK    KEY14,FMBUCULD,FMBUCUAC
          UNPACK    SP70,FMBUCUPR
          CALL      GETS0000
          CALL      RAFMBU1
          IF        OVRCD=1
            MOVE      ONE,AUDTTYPE
            CALL      WAFMBU00
            CALL      WRFMBU1
          ELSE
            CALL      UPBUD000       * update and write to audit file
          ENDIF
          GOTO      CALC4100
.
CALC9999  GOTO      FMSAC999
.**********************************************************************
.  WRTU - write total update for budget link           Called By CALC
.**********************************************************************
WRTU0000  COMPARE   ONE,FMCOCALC
          GOTO      WRTU9999 IF NOT EQUAL
.
          PACK      KEY14,FMBLTLED,FMBLTACC,SP70
          CALL      RDFMAM1            * account exists ?
          BRANCH    OVRCD,WRTU9999
.
          PACK      KEY30,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC,SP70
          PACK      KEY20,FMTUPORT,BUDTYPE,FMBLTLED,FMBLTACC,SP70
          CALL      RDFMTU1            * record exists ?
          COMPARE   ZERO,OVRCD
          GOTO      WRTU9000 IF EQUAL
.
          UNPACK    KEY20,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC
          MOVE      FMAMCLEV,FMTUSPAR
          MOVE      ZERO,FMTUACT
          MOVE      ZERO,FMTUBUD
          MOVE      SP70,FMTUSPAR
          CALL      WRFMTU1            * Flag For Total Account Update
.
WRTU9000  UNPACK    KEY30,KEY20
          CALL      RDFMTU1            * get current record
.
WRTU9999  RETURN
.**********************************************************************
.  GETS - move stat values to actuals                  Called By CALC
.**********************************************************************
GETS0000  
          MOVE      FMSTCA01,FMBUCA01
          MOVE      FMSTCA02,FMBUCA02
          MOVE      FMSTCA03,FMBUCA03
          MOVE      FMSTCA04,FMBUCA04
          MOVE      FMSTCA05,FMBUCA05
          MOVE      FMSTCA06,FMBUCA06
          MOVE      FMSTCA07,FMBUCA07
          MOVE      FMSTCA08,FMBUCA08
          MOVE      FMSTCA09,FMBUCA09
          MOVE      FMSTCA10,FMBUCA10
          MOVE      FMSTCA11,FMBUCA11
          MOVE      FMSTCA12,FMBUCA12
          MOVE      FMSTCA13,FMBUCA13
.
          MOVE      FMSTCA01,FMBUCB01
          MOVE      FMSTCA02,FMBUCB02
          MOVE      FMSTCA03,FMBUCB03
          MOVE      FMSTCA04,FMBUCB04
          MOVE      FMSTCA05,FMBUCB05
          MOVE      FMSTCA06,FMBUCB06
          MOVE      FMSTCA07,FMBUCB07
          MOVE      FMSTCA08,FMBUCB08
          MOVE      FMSTCA09,FMBUCB09
          MOVE      FMSTCA10,FMBUCB10
          MOVE      FMSTCA11,FMBUCB11
          MOVE      FMSTCA12,FMBUCB12
          MOVE      FMSTCA13,FMBUCB13
.
          MOVE      FMSTCA01,FMBUCC01
          MOVE      FMSTCA02,FMBUCC02
          MOVE      FMSTCA03,FMBUCC03
          MOVE      FMSTCA04,FMBUCC04
          MOVE      FMSTCA05,FMBUCC05
          MOVE      FMSTCA06,FMBUCC06
          MOVE      FMSTCA07,FMBUCC07
          MOVE      FMSTCA08,FMBUCC08
          MOVE      FMSTCA09,FMBUCC09
          MOVE      FMSTCA10,FMBUCC10
          MOVE      FMSTCA11,FMBUCC11
          MOVE      FMSTCA12,FMBUCC12
          MOVE      FMSTCA13,FMBUCC13
          DIV       "1000",FMBUCC01
          DIV       "1000",FMBUCC02
          DIV       "1000",FMBUCC03
          DIV       "1000",FMBUCC04
          DIV       "1000",FMBUCC05
          DIV       "1000",FMBUCC06
          DIV       "1000",FMBUCC07
          DIV       "1000",FMBUCC08
          DIV       "1000",FMBUCC09
          DIV       "1000",FMBUCC10
          DIV       "1000",FMBUCC11
          DIV       "1000",FMBUCC12
          DIV       "1000",FMBUCC13
.
GETS9999  RETURN
.**********************************************************************
.* Calculate Financial Total Account
.**********************************************************************
CALF0000  PACK      KEY33,FMAMLEDG,FMAMACCT
          PACK      SAVKEY14,FMAMLEDG,FMAMACCT
          CALL      RSFMTC1
CALF1000  CALL      RKFMTC1
          BRANCH    OVRCD,CALF9000
.
          UNPACK    SAVKEY14,FMAMLEDG,FMAMACCT
          MATCH     FMAMLEDG,FMTCTLED
          GOTO      CALF9000 IF NOT EQUAL
.
          MATCH     FMAMACCT,FMTCTACC
          GOTO      CALF9000 IF NOT EQUAL
.
          PACK      KEY14,FMTCSLED,FMTCSACC
          CALL      RDFMAM1            * Get Summary Details
          BRANCH    OVRCD,CALF1000
          CALL      RDFMBU1            * Get Summary Details
          BRANCH    OVRCD,CALF1000
.
          CALL      ADDF0000           * Add Sub total to Saved Totals
.
          GOTO      CALF1000
.
CALF9000  MOVE      SAVKEY14,KEY14     * Read back masterfile record and 
          CALL      RDFMAM1            * mult/div by constants
.
CALF9999  RETURN
.**********************************************************************
.* Calculate Statistical Total Account
.**********************************************************************
CALS0000  PACK      KEY33,FMAMLEDG,FMAMACCT
          PACK      SAVKEY14,FMAMLEDG,FMAMACCT
          CALL      RSFMTC1
CALS1000  CALL      RKFMTC1
          BRANCH    OVRCD,CALS9000
.
          UNPACK    SAVKEY14,FMAMLEDG,FMAMACCT
.
          MATCH     FMAMLEDG,FMTCTLED
          GOTO      CALS9000 IF NOT EQUAL
.
          MATCH     FMAMACCT,FMTCTACC
          GOTO      CALS9000 IF NOT EQUAL
.
          PACK      KEY14,FMTCSLED,FMTCSACC
          CALL      RDFMAM1
          BRANCH    OVRCD,CALS1000
.
          MATCH     "7",FMAMTYPE
          GOTO      CALS2000 IF NOT LESS   * stat record
.
          CALL      RDFMBU1
          BRANCH    OVRCD,CALS1000     * get data from nornal sub-account
.
          MOVE      FMBUCA01,FMSTCA01
          MOVE      FMBUCA02,FMSTCA02
          MOVE      FMBUCA03,FMSTCA03
          MOVE      FMBUCA04,FMSTCA04
          MOVE      FMBUCA05,FMSTCA05
          MOVE      FMBUCA06,FMSTCA06
          MOVE      FMBUCA07,FMSTCA07
          MOVE      FMBUCA08,FMSTCA08
          MOVE      FMBUCA09,FMSTCA09
          MOVE      FMBUCA10,FMSTCA10
          MOVE      FMBUCA11,FMSTCA11
          MOVE      FMBUCA12,FMSTCA12
          MOVE      FMBUCA13,FMSTCA13
.
          GOTO      CALS3000
.
CALS2000  CALL      RDFMST1
          BRANCH    OVRCD,CALS1000     * get data from stat sub-account
.
CALS3000  CALL      ADDS0000           * Add Sub total to Saved Totals (stats)
.
          GOTO      CALS1000
.
CALS9000  MOVE      SAVKEY14,KEY14     * Read back masterfile record and 
          CALL      RDFMAM1            * mult/div by constants
          BRANCH    OVRCD,CALS9999
          CALL      MAMT0000
.
CALS9999  RETURN
.**********************************************************************
.* Mult Amounts by Constant                                           *
.**********************************************************************
MAMT0000  MOVE      FMAMMULT,F12P6     * get constant
          MOVE      FMAMDIV,CDIV1
          MOVE      F12P6,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,F12P6
.
.
          MULT      F12P6,SAV01
          MULT      F12P6,SAV02
          MULT      F12P6,SAV03
          MULT      F12P6,SAV04
          MULT      F12P6,SAV05
          MULT      F12P6,SAV06
          MULT      F12P6,SAV07
          MULT      F12P6,SAV08
          MULT      F12P6,SAV09
          MULT      F12P6,SAV10
          MULT      F12P6,SAV11
          MULT      F12P6,SAV12
          MULT      F12P6,SAV13
.
MAMT9999  RETURN
.**********************************************************************
.* Add stats records to temps
.**********************************************************************
ADDS0000  MOVE      FMTCADDT,F1
          BRANCH    F1,ADDS2000,ADDS3000,ADDS4000 * 0=add,1=sub,2=div,3=mult
.
. add
.
ADDS1000  ADD       FMSTCA01,SAV01
          ADD       FMSTCA02,SAV02
          ADD       FMSTCA03,SAV03
          ADD       FMSTCA04,SAV04
          ADD       FMSTCA05,SAV05
          ADD       FMSTCA06,SAV06
          ADD       FMSTCA07,SAV07
          ADD       FMSTCA08,SAV08
          ADD       FMSTCA09,SAV09
          ADD       FMSTCA10,SAV10
          ADD       FMSTCA11,SAV11
          ADD       FMSTCA12,SAV12
          ADD       FMSTCA13,SAV13
          GOTO      ADDS9999
.
. sub
.
ADDS2000  SUB       FMSTCA01,SAV01
          SUB       FMSTCA02,SAV02
          SUB       FMSTCA03,SAV03
          SUB       FMSTCA04,SAV04
          SUB       FMSTCA05,SAV05
          SUB       FMSTCA06,SAV06
          SUB       FMSTCA07,SAV07
          SUB       FMSTCA08,SAV08
          SUB       FMSTCA09,SAV09
          SUB       FMSTCA10,SAV10
          SUB       FMSTCA11,SAV11
          SUB       FMSTCA12,SAV12
          SUB       FMSTCA13,SAV13
          GOTO      ADDS9999
.
. div
.
ADDS3000  MOVE      FMSTCA01,CDIV1
          MOVE      SAV01,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV01
.
          MOVE      FMSTCA02,CDIV1
          MOVE      SAV02,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV02
.
          MOVE      FMSTCA03,CDIV1
          MOVE      SAV03,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV03
.
          MOVE      FMSTCA04,CDIV1
          MOVE      SAV04,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV04
.
          MOVE      FMSTCA05,CDIV1
          MOVE      SAV05,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV05
.
          MOVE      FMSTCA06,CDIV1
          MOVE      SAV06,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV06
.
          MOVE      FMSTCA07,CDIV1
          MOVE      SAV07,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV07
.
          MOVE      FMSTCA08,CDIV1
          MOVE      SAV08,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV08
.
          MOVE      FMSTCA09,CDIV1
          MOVE      SAV09,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV09
.
          MOVE      FMSTCA10,CDIV1
          MOVE      SAV10,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV10
.
          MOVE      FMSTCA11,CDIV1
          MOVE      SAV11,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV11
.
          MOVE      FMSTCA12,CDIV1
          MOVE      SAV12,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV12
.
          MOVE      FMSTCA13,CDIV1
          MOVE      SAV13,CDIV2
          CALL      CDIV0000
          MOVE      CDIV2,SAV13
.
          GOTO      ADDS9999
.
. mult
.
ADDS4000  MULT      FMSTCA01,SAV01
          MULT      FMSTCA02,SAV02
          MULT      FMSTCA03,SAV03
          MULT      FMSTCA04,SAV04
          MULT      FMSTCA05,SAV05
          MULT      FMSTCA06,SAV06
          MULT      FMSTCA07,SAV07
          MULT      FMSTCA08,SAV08
          MULT      FMSTCA09,SAV09
          MULT      FMSTCA10,SAV10
          MULT      FMSTCA11,SAV11
          MULT      FMSTCA12,SAV12
          MULT      FMSTCA13,SAV13
          GOTO      ADDS9999
.
ADDS9999  RETURN
.**********************************************************************
. Move Zero to all stats Saved Amounts
.**********************************************************************
MZSS0000  MOVE      ZERO,SAV01
          MOVE      ZERO,SAV02
          MOVE      ZERO,SAV03
          MOVE      ZERO,SAV04
          MOVE      ZERO,SAV05
          MOVE      ZERO,SAV06
          MOVE      ZERO,SAV07
          MOVE      ZERO,SAV08
          MOVE      ZERO,SAV09
          MOVE      ZERO,SAV10
          MOVE      ZERO,SAV11
          MOVE      ZERO,SAV12
          MOVE      ZERO,SAV13
          RETURN
.**********************************************************************
. Move Save Stats to File
.**********************************************************************
MSTF0000  MOVE      SP70,FMSTCUSP
          MOVE      SAV01,FMSTCA01
          MOVE      SAV02,FMSTCA02
          MOVE      SAV03,FMSTCA03
          MOVE      SAV04,FMSTCA04
          MOVE      SAV05,FMSTCA05
          MOVE      SAV06,FMSTCA06
          MOVE      SAV07,FMSTCA07
          MOVE      SAV08,FMSTCA08
          MOVE      SAV09,FMSTCA09
          MOVE      SAV10,FMSTCA10
          MOVE      SAV11,FMSTCA11
          MOVE      SAV12,FMSTCA12
          MOVE      SAV13,FMSTCA13
          RETURN
.**********************************************************************
. Move Zero to sav variables for calculation
.**********************************************************************
MZTS0000  MOVE      ZERO,SAVC01
          MOVE      ZERO,SAVC02
          MOVE      ZERO,SAVC03
          MOVE      ZERO,SAVC04
          MOVE      ZERO,SAVC05
          MOVE      ZERO,SAVC06
          MOVE      ZERO,SAVC07
          MOVE      ZERO,SAVC08
          MOVE      ZERO,SAVC09
          MOVE      ZERO,SAVC10
          MOVE      ZERO,SAVC11
          MOVE      ZERO,SAVC12
          MOVE      ZERO,SAVC13
.
.
          MOVE      ZERO,SAVC01D
          MOVE      ZERO,SAVC02D
          MOVE      ZERO,SAVC03D
          MOVE      ZERO,SAVC04D
          MOVE      ZERO,SAVC05D
          MOVE      ZERO,SAVC06D
          MOVE      ZERO,SAVC07D
          MOVE      ZERO,SAVC08D
          MOVE      ZERO,SAVC09D
          MOVE      ZERO,SAVC10D
          MOVE      ZERO,SAVC11D
          MOVE      ZERO,SAVC12D
          MOVE      ZERO,SAVC13D
.
          MOVE      ZERO,SAVC01T
          MOVE      ZERO,SAVC02T
          MOVE      ZERO,SAVC03T
          MOVE      ZERO,SAVC04T
          MOVE      ZERO,SAVC05T
          MOVE      ZERO,SAVC06T
          MOVE      ZERO,SAVC07T
          MOVE      ZERO,SAVC08T
          MOVE      ZERO,SAVC09T
          MOVE      ZERO,SAVC10T
          MOVE      ZERO,SAVC11T
          MOVE      ZERO,SAVC12T
          MOVE      ZERO,SAVC13T
.
          RETURN
.
.**********************************************************************
. Move Save Totals to File Totals for Update
.**********************************************************************
MSTA0000  MOVE      SAVC01,FMBUCA01
          MOVE      SAVC02,FMBUCA02
          MOVE      SAVC03,FMBUCA03
          MOVE      SAVC04,FMBUCA04
          MOVE      SAVC05,FMBUCA05
          MOVE      SAVC06,FMBUCA06
          MOVE      SAVC07,FMBUCA07
          MOVE      SAVC08,FMBUCA08
          MOVE      SAVC09,FMBUCA09
          MOVE      SAVC10,FMBUCA10
          MOVE      SAVC11,FMBUCA11
          MOVE      SAVC12,FMBUCA12
          MOVE      SAVC13,FMBUCA13
.
          MOVE      SAVC01D,FMBUCB01
          MOVE      SAVC02D,FMBUCB02
          MOVE      SAVC03D,FMBUCB03
          MOVE      SAVC04D,FMBUCB04
          MOVE      SAVC05D,FMBUCB05
          MOVE      SAVC06D,FMBUCB06
          MOVE      SAVC07D,FMBUCB07
          MOVE      SAVC08D,FMBUCB08
          MOVE      SAVC09D,FMBUCB09
          MOVE      SAVC10D,FMBUCB10
          MOVE      SAVC11D,FMBUCB11
          MOVE      SAVC12D,FMBUCB12
          MOVE      SAVC13D,FMBUCB13
.
          MOVE      SAVC01T,FMBUCC01
          MOVE      SAVC02T,FMBUCC02
          MOVE      SAVC03T,FMBUCC03
          MOVE      SAVC04T,FMBUCC04
          MOVE      SAVC05T,FMBUCC05
          MOVE      SAVC06T,FMBUCC06
          MOVE      SAVC07T,FMBUCC07
          MOVE      SAVC08T,FMBUCC08
          MOVE      SAVC09T,FMBUCC09
          MOVE      SAVC10T,FMBUCC10
          MOVE      SAVC11T,FMBUCC11
          MOVE      SAVC12T,FMBUCC12
          MOVE      SAVC13T,FMBUCC13
.
          RETURN
.**********************************************************************
. Add Totals to Save Totals for Update
.**********************************************************************
ADDF0000  ADD       FMBUCA01,SAVC01
          ADD       FMBUCA02,SAVC02
          ADD       FMBUCA03,SAVC03
          ADD       FMBUCA04,SAVC04
          ADD       FMBUCA05,SAVC05
          ADD       FMBUCA06,SAVC06
          ADD       FMBUCA07,SAVC07
          ADD       FMBUCA08,SAVC08
          ADD       FMBUCA09,SAVC09
          ADD       FMBUCA10,SAVC10
          ADD       FMBUCA11,SAVC11
          ADD       FMBUCA12,SAVC12
          ADD       FMBUCA13,SAVC13
.
          MOVE      FMAMTYPE,F2
          BRANCH    F2,ADDF0500,ADDF0500,ADDF0500,ADDF0500,ADDF0500
          GOTO      ADDF1000
.
. Posting account so move Dollars & Cents to Dollars and Thousands 
.
ADDF0500  MOVE      FMBUCA01,FMBUCB01
          MOVE      FMBUCA02,FMBUCB02
          MOVE      FMBUCA03,FMBUCB03
          MOVE      FMBUCA04,FMBUCB04
          MOVE      FMBUCA05,FMBUCB05
          MOVE      FMBUCA06,FMBUCB06
          MOVE      FMBUCA07,FMBUCB07
          MOVE      FMBUCA08,FMBUCB08
          MOVE      FMBUCA09,FMBUCB09
          MOVE      FMBUCA10,FMBUCB10
          MOVE      FMBUCA11,FMBUCB11
          MOVE      FMBUCA12,FMBUCB12
          MOVE      FMBUCA13,FMBUCB13
.
          MOVE      FMBUCA01,FMBUCC01
          MOVE      FMBUCA02,FMBUCC02
          MOVE      FMBUCA03,FMBUCC03
          MOVE      FMBUCA04,FMBUCC04
          MOVE      FMBUCA05,FMBUCC05
          MOVE      FMBUCA06,FMBUCC06
          MOVE      FMBUCA07,FMBUCC07
          MOVE      FMBUCA08,FMBUCC08
          MOVE      FMBUCA09,FMBUCC09
          MOVE      FMBUCA10,FMBUCC10
          MOVE      FMBUCA11,FMBUCC11
          MOVE      FMBUCA12,FMBUCC12
          MOVE      FMBUCA13,FMBUCC13
.
          DIV       "1000",FMBUCC01
          DIV       "1000",FMBUCC02
          DIV       "1000",FMBUCC03
          DIV       "1000",FMBUCC04
          DIV       "1000",FMBUCC05
          DIV       "1000",FMBUCC06
          DIV       "1000",FMBUCC07
          DIV       "1000",FMBUCC08
          DIV       "1000",FMBUCC09
          DIV       "1000",FMBUCC10
          DIV       "1000",FMBUCC11
          DIV       "1000",FMBUCC12
          DIV       "1000",FMBUCC13
.
          CALL      UPBUD000       * update and write to audit file
.
ADDF1000  ADD       FMBUCB01,SAVC01D
          ADD       FMBUCB02,SAVC02D
          ADD       FMBUCB03,SAVC03D
          ADD       FMBUCB04,SAVC04D
          ADD       FMBUCB05,SAVC05D
          ADD       FMBUCB06,SAVC06D
          ADD       FMBUCB07,SAVC07D
          ADD       FMBUCB08,SAVC08D
          ADD       FMBUCB09,SAVC09D
          ADD       FMBUCB10,SAVC10D
          ADD       FMBUCB11,SAVC11D
          ADD       FMBUCB12,SAVC12D
          ADD       FMBUCB13,SAVC13D
.
          ADD       FMBUCC01,SAVC01T
          ADD       FMBUCC02,SAVC02T
          ADD       FMBUCC03,SAVC03T
          ADD       FMBUCC04,SAVC04T
          ADD       FMBUCC05,SAVC05T
          ADD       FMBUCC06,SAVC06T
          ADD       FMBUCC07,SAVC07T
          ADD       FMBUCC08,SAVC08T
          ADD       FMBUCC09,SAVC09T
          ADD       FMBUCC10,SAVC10T
          ADD       FMBUCC11,SAVC11T
          ADD       FMBUCC12,SAVC12T
          ADD       FMBUCC13,SAVC13T
.
          RETURN
.******************************************************************************
.* INCLUDES                                                                   *
.******************************************************************************
FMSAC999  ENDPROC
