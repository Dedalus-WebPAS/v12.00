.***************************************************************************
.* System    :   Private Practice                                          *
.* Program   :   IBAPRI56                                                  *
.* Desc      :   Item File Master Register                                 *
.***************************************************************************
.* Date      :   23/09/91                                                  *
.* Author    :   Stephen Armstrong                                         *
.* Function  :   Prints a listing of items on file in item number sequence *
.*               or item description sequence                              *
.* Mods.     :                                                             *
.*        V10.04.01 15/04/2014  J.Tan          CAR 261630                  *
.*                  Removed port number from temp file name                *
.*        V10.01.02 09/02/2011  Mike Laming   CAR 236639                   *
.*                  More mods to handle "Cease Date"                       *
.*        V10.01.01 28/01/2011  Mike Laming   CAR 236639                   *
.*                  Added "Cease Date" to report                           *
.*        V9.04.01  19.08.2005      J.Tan          CAR 62750               *
.*                  Removed redefined amount variables                     *
.*        V9.03.01  24/02/2003  Lina Vo    CAR 44153                       *
.*                  Mods DISP0000 & HEAD0000 to PRINT correct field length *
.*                  for web printing.                                      *
.*        V9.02.01  24/05/2002  Dean Cramer                                *
.*                  Mods to include AH Department selection                *
.*        V5.08.B01 03/02/2000  Caleb Sharman                              *
.*                  Mods to include GST into Private Practise              *
.*        V5.07.02  15/10/1999  D.Di Paola                                 *
.*                  Recompiled for PRIITMFD                                *
.*        V5.05.01  08/10/1997  Steve Armstrong         WWH Mods           *
.*                  Mods for change from GETITEM to KYPRIITM               *
.***************************************************************************
.*               V6.01 24/03/92 Steve Armstrong                            *
.*                     Changed heading to Register instead of Listing      *
.*               V6.00.02 12/10/92  Steve Armstrong                        *
.*                        Brought version number in line                   *
.*               V6.00.03 01/12/92 J.Tan   SRF 118240                      *
.*                        Mods to initialise the item descriptions         *
.*        V6.03.B1  25/02/1995  Graeme Williams   R6.03 Enhancements       *
.*                  Added Fixed Charged and Item to Stepdown to            *
.*        V5.02.01  10/03/1995  Graeme Williams                            *
.*                  Port release 6.03 enhancements to 5.02                 *
.*        V5.03.01  14/08/1995  Steve Armstrong                            *
.*                  Recompiled for PRIITMFD                                *
.*        V5.03.02  13/09/1995  Steve Armstrong    SRF 611692              *
.*                  Mods to include details of other items covered by      *
.*                  this item when requested.                              *
.***************************************************************************
.
.$$$$$
.         ITEM REGISTER (Program IBAPRI56)
.         --------------------------------
.
.         ML0000
.         Initialise and open files
.         priitemf
.         patcodes
.         Create temporary file
.
.         ML0100
.         Get user option
.           If nothing input, then exit program
.
.         Get effective date for item listing
.         Depending on the option selected, proceed to get the appropriate
.           range of numbers or descriptions
.
.         ML1000
.         Item number sequence
.         Get the starting item number
.           If nothing is input, defaults to "Start"
.           If exitchar is input, returns to get the next option
.           If valid code, proceed to get ending item number
.
.         Get the ending item number
.           If nothing is input, defaults to "Finish"
.           If exitchar is input, returns to get the next option
.           If valid code is input, proceed to confirm print
.
.         ML2000
.         Get the starting item description
.           If nothing is input, defaults to "Start"
.           If exitchar is input, returns to get the next option
.           If description input, proceed to get ending item description
.
.         Get the ending item description
.           If nothing is input, defaults to "Finish"
.           If exitchar is input, returns to get the next option
.           If description input, proceed to confirm print
.
.         ML5000
.         Confirm print to continue
.           If (Y)es input, proceed with printing
.           If (N)o input, return to get start code/description
.           If (C)ancel input, return to get next option
.
.         ML6000
.         Continue with print
.         Clear temporary file of all records
.         Proceed to the appropriate print routine, depending on the option
.           selected
.
.         ML7000
.         Process print in item number sequence
.         Erase temporary file
.         Get next option
.
.         ML8000
.         Process print in item description sequence
.         Erase temporary file
.         Get next option
.
.         ML9999 
.         Chain back to calling program
.
.$$$$$
.
          INC       STD001FD
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
.
.         Temporary File Definition
.         -------------------------
.
.         Filename : PRI56Axx.dat          (xx = port id)
.
ITMTEMP1  IFILE SQL, FIXED=101, KEY="U1-9,10-12,85-92"
ITMTEMP2  IFILE SQL, FIXED=101, KEY="U13-42,1-9,10-12,85-92"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
XINUM     DIM       9           9           1       Item number
XSNUM     DIM       3           3           10      Subitem number
XIDESC    DIM       30          30          13      Item description
XIKEY     FORM      1           2           43      Keyin indicator
XSFEE     FORM      12.2        8           45      Item schedule fee
XSET      DIM       3           3           53      Set code
XMAX      FORM      3           3           56      Max. No. Requests
XIDAY     FORM      3           3           59      Period of days
XSTEP     DIM       9           9           62      Item to stepdown to
XSTSB     DIM       3           3           71      Subitem to stepdown to
XFIXED    DIM       3           3           74      Fixed charge ?
XGSTA     FORM      1           2           77      GST Charge
XGSTC     DIM       6           6           79      GST Payable Code
XEFDT     DIM       8           8           85      Effective Date
XCSDT     DIM       8           8           93      Cease Date
.
.End of Record                             101
.
.
.
. FILE DESCRIPTION INCLUDES
. -------------------------
.
          INC       PRIGRPFD/INC
          INC       PRIITMFD/INC                 * item file
          INC       PATCODFD/INC                 * codes file
.
.
. PROGRAM CONSTANTS
. -----------------
.
AMA       INIT      "AMA"
CODEPG    INIT      "PG"
ERASE     INIT      "iserase "
FINISH    INIT      "Finish"
ISBUILD   INIT      "isbuild "
MBS       INIT      "MBS"
NINE8     FORM      "99999999"
PIPE      INIT      "|"
SLSH      INIT      "/"
START     INIT      "Start"
UKEY      INIT      " 101 U1-9,10-12,85-92 U13-42,1-9,10-12,85-92"
Z30       INIT      "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
.
AHDEPT    DIM       3
.
CMDLIN1   DIM       70
CMDLIN2   DIM       16
CODE      DIM       3
DIM10A    DIM       10
DIM27A    DIM       27
.
ECODE     DIM       9                            * end item code
EDESC     DIM       30                           * end item description
ASATDATE   DIM       8                            * effective date
ESUB      DIM       3                            * end subitem number
.
FNDFLAG   FORM      1                            * found flag
.                                                    0 = no covered items found
.                                                    1 = covered items found
FILEITM   DIM       12
FORM7P2   FORM      7.2
.
IBCNUGST  FORM      1
IFLAG     FORM      2                            * for KYPRIITM
ITEMNUMB  DIM       9                            * for KYPRIITM
ITMDESC   DIM       30                           * for PRIITMDS
ITMFLAG   FORM      1                            * for PRIITMDS
.
OTHRFLAG  FORM      1
.
PATHFLAG  FORM      1                            * for PRIITMDS
.
SAVDATE   DIM       8                            * saved date
SCODE     DIM       9                            * start item code
SDESC     DIM       30                           * start item description
SERDATE   DIM       8                            * for PRIITMDS
SETDESC   DIM       14                           * set description
..SETDESC   DIM       15                           * set description
SHTDESC   DIM       23                           * for PRIITMDS
SSUB      DIM       3                            * start subitem number
SUBFLAG   FORM      1                            * sub header flag
.                                                   0 = print sub header
.                                                   1 = dont print sub header
SUBITEM   DIM       3                            * for KYPRIITM
.
TEMPFILE  DIM       8
TEMPITM   DIM       12
TYPE      DIM       3                            * AMA or MBS description
.
.
PRGID     INIT      "IBAPRI56"
PRGNAM    INIT      "Item Register"
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
.
          CALL      AHDP0000               * get AH department range
.
          CALL      DATE0000               * get effective date
          BRANCH    EXIT,ML0100            * nothing input
.
ML0500    BRANCH    COPTION,ML1000:        * MBS code sequence
                            ML2000:        * MBS description sequence
                            ML1000:        * AMA code sequence
                            ML2000         * AMA description sequence
.
.         Item code sequence
.
ML1000    CALL      SCOD0000               * input start item number
          BRANCH    EXIT,ML0100            * exitchar input
.
          CALL      ECOD0000               * input end item number
          BRANCH    EXIT,ML0100            * exitchar input
          GOTO      ML5000
.
.         Item description sequence
.
ML2000    CALL      SDES0000               * input start item description 
          BRANCH    EXIT,ML0100            * exitchar input 
.  
          CALL      EDES0000               * input end item description 
          BRANCH    EXIT,ML0100            * exitchar input 
.  
ML5000    CALL      OTHR0000               * see if printing other items covered
          CALL      CONTQST                * ok to continue ? 
          BRANCH    CEXIT,ML6000:          * (Y)es 
                          ML0500:          * (N)o 
                          ML0100           * (C)ancel
.
.         Get the items to be printed by the appropriate search
.
ML6000    CALL      CREA0000               * create temp file
          CALL      CLRT0000               * clear temp file records
          CALL      PROC0000               * get the relevant items on file
          BRANCH    COPTION,ML7000:        * MBS code sequence
                            ML8000:        * MBS description sequence
                            ML7000:        * AMA code sequence
                            ML8000         * AMA description sequence
.
ML7000    CALL      CODE0000               * get items for printing by code
          CALL      KILL0000               * erase temp file
          GOTO      ML0100                 * get next option
.
ML8000    CALL      DESC0000               * get items for printing by descr.
          CALL      KILL0000               * erase temp file
          GOTO      ML0100                 * get next option
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,"Opening ":
                    *P64:24,"priitemf";
          OPEN      PRIITEM1,"priitemf"
          OPEN      PRIITEM2,"priitemf"       * item file
.
          DISPLAY   *P64:24,"prigrpaf";
          OPEN      PRIGRPA1,"prigrpaf"       * group file
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"       * codes file
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"       * control file
          READ      CONTROLF,ZERO;*85,IBCNUGST
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,TEMPFILE
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Valid option selected                  *
.*                        TRUE  (1)  Exit option selected                   *
.*              COPTION = 1  Item code sequence                             *
.*                        2  item description sequence                      *
.****************************************************************************
.
OPTN0000  DISPLAY *P1:4,*EF,*P1:4,*V2LON,ZERO,*HOFF," = Exit":
                  *P1:5,*V2LON,ONE,*HOFF," = MBS Item Number Sequence":
                  *P1:6,*V2LON,TWO,*HOFF," = MBS Description Sequence":
                  *P1:7,*V2LON,THREE,*HOFF," = AMA Item Number Sequence":
                  *P1:8,*V2LON,FOUR,*HOFF," = AMA Description Sequence"
.
OPTN1000  KEYIN     *P1:10,*EL,"Select option : ",*DV,UNDLN1:
                    *P17:10,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION
          GOTO      OPTN9500 IF EQUAL
.
          BRANCH    COPTION,OPTN8000:
                            OPTN8000:
                            OPTN8500:
                            OPTN8500
.
          BEEP                                   * invalid option
          GOTO      OPTN1000
.
OPTN8000  MOVE      MBS,TYPE
          GOTO      OPTN9000
.
OPTN8500  MOVE      AMA,TYPE
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT                     * set EXIT = 1
.
OPTN9999  RETURN
.***************************************************************************
.*                               AHDP0000              Called by: ML0000   *
.*                            AH department                                *
.***************************************************************************
AHDP0000  DISPLAY   *P1:12,*EL,*P1:12,"AH Department or hit enter for ALL"
          MOVE      TEN2,EVERT
          MOVE      FORTY,ECOL
          MOVE      CODEPG,CODE                  * load category
.
AHDP0500  CALL      PATCODKY                     * get AH Department 
          BRANCH    EXIT,AHDP1000:               * nothing entered
                         AHDP0500                * exitchar entered
.
          MOVE      ACODE,AHDEPT                 * save code
          DISPLAY   *P44:12,*V2LON,TDESC;
          GOTO      AHDP9999
.
AHDP1000  MOVE      SP3,AHDEPT                   * default start code
          DISPLAY   *P40:12,*V2LON,"ALL";
.
AHDP9999  RETURN
+
.****************************************************************************
.*                                 DATE0000            Called by: ML0000    *
.*                      get effective date for listing                      *
.****************************************************************************
.
DATE0000  MOVE      TEN4,CVERT
          MOVE      TEN8,CCOL
          DISPLAY   *P1:14,"Active At Date : "
          CALL      IBACLOCK
          MOVE      CCC,CCENT
          MOVE      CYY,CYEAR
          MOVE      CMM,CMON
          MOVE      CDD,CDAY
          MOVE      ZERO,CHIGHLT
          MOVE      ZERO,CDEFDTE
.
          CALL      KEYDATE                      * get date
          BRANCH    OVRCD,DATE9500               * nothing input
.
          PACK      ASATDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",ASATDATE
          CALL      PACDATE
          REP       " 0",CPCDATE
          MOVE      ZERO,EXIT
          GOTO      DATE9999
.
DATE9500  MOVE      ONE,EXIT
.
DATE9999  RETURN
+
.****************************************************************************
.*                                 SCOD0000            Called by: ML0000    *
.*                      get starting item code                              *
.*  RETURNS:     EXIT      0 = valid input                                  *
.*                         1 = exitchar input                               *
.****************************************************************************
.
SCOD0000  DISPLAY   *P1:16,*EF,"From Item Number : "
.
          PACK      PRITDESC,SP20,SP20
          BRANCH    COPTION,SCOD0500             * MBS item
.
          MOVE      ONE,IFLAG                    * AMA item
          GOTO      SCOD1000
.
SCOD0500  MOVE      ZERO,IFLAG
.
SCOD1000  MOVE      TWENTY,CCOL
          MOVE      TEN6,CVERT
SCOD1200  CALL      KYPRIITM
          BRANCH    EXIT,SCOD9500:               * exitchar entered
                         SCOD4000:               * ? entered
                         SCOD6000                * nothing entered
.
          CALL      CHKI0000                     * item on file ?
          BRANCH    EXIT,SCOD1200                * no
          GOTO      SCOD9000                     * yes
.
SCOD4000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
SCOD4500  MOVE      ASATDATE,SERDATE
          MOVE      ZERO,ITMFLAG
          MOVE      ONE,PATHFLAG
          CALL      PRIITMDS                     * display items on file
.
SCOD5000  DISPLAY   *P1:24,*EL,"From Item Number : "
          MOVE      TWENTY4,CVERT
          MOVE      TWENTY,CCOL
          CALL      KYPRIITM
          BRANCH    EXIT,SCOD9400:               * exitchar entered
                         SCOD4500:               * ? entered
                         SCOD5900                * nothing entered
.
          CALL      CHKI0000                     * item on file ?
          BRANCH    EXIT,SCOD5000                * no
.
          CALL      PUTSCR00                     * restore screen
          DISPLAY   *P20:16,*EL,*V2LON,ITEMNUMB  * redisplay item number
.
          MATCH     SP3,SUBITEM                  * subitem entered ?
          GOTO      SCOD9000 IF EQUAL            * no
.
          DISPLAY   *P29:16,*V2LON,"(",SUBITEM,")"
          GOTO      SCOD9000
.
SCOD5900  CALL      PUTSCR00                     * restore screen
SCOD6000  MOVE      SP9,ITEMNUMB
          MOVE      SP3,SUBITEM
          PACK      PRITDESC,SP30,SP30
          DISPLAY   *P20:16,*EL,*V2LON,START
.
SCOD9000  MOVE      ITEMNUMB,SCODE
          MOVE      SUBITEM,SSUB
          MOVE      PRITDESC,SDESC
          DISPLAY   *P35:16,PRITDESC
          MOVE      ZERO,EXIT
          GOTO      SCOD9999
.
SCOD9400  CALL      FRESCR00
SCOD9500  MOVE      ONE,EXIT
.
SCOD9999  RETURN
+
.****************************************************************************
.*                                 CHKI0000            Called by: SCOD0000  *
.*                        see if item is on file                  ECOD0000  *
.****************************************************************************
.
CHKI0000  PACK      KEY22,IFLAG,ITEMNUMB,SUBITEM,NINE8
          CALL      RSPRIT1                      * position after last record
.                                                  for this item
CHKI5000  CALL      RPPRIT1                      * read previous record
.
          BRANCH    OVRCD,CHKI8000               * end of file
.
          COMPARE   IFLAG,PRITFLAG               * same item type ?
          GOTO      CHKI8000 IF NOT EQUAL        * no
.
          MATCH     PRITITMN,ITEMNUMB            * same item number ?
          GOTO      CHKI8000 IF NOT EQUAL        * no
.
          MATCH     PRITSUBN,SUBITEM             * same subitem number ?
          GOTO      CHKI8000 IF NOT EQUAL        * no
.
          MATCH     PRITDAT1,ASATDATE             * item date > effective date ?
          GOTO      CHKI5000 IF LESS             * yes
.
          GOTO      CHKI9000                     * valid item number
.
CHKI8000  DISPLAY   *P1:24,*EL,"Item not set up for effective date. ";
          CALL      HITENTER
          GOTO      CHKI9500
.
CHKI9000  MOVE      ZERO,EXIT
          GOTO      CHKI9999
.
CHKI9500  MOVE      ONE,EXIT
.
CHKI9999  RETURN
+
.****************************************************************************
.*                                 ECOD0000            Called by: ML0000    *
.*                        get ending item code                              *
.****************************************************************************
.
ECOD0000  DISPLAY   *P1:18,*EL,"To   Item Number : "
.
          PACK      PRITDESC,SP20,SP20
          BRANCH    COPTION,ECOD0500             * MBS item
.
          MOVE      ONE,IFLAG                    * AMA item
          GOTO      ECOD1000
.
ECOD0500  MOVE      ZERO,IFLAG
.
ECOD1000  MOVE      TEN8,CVERT
          MOVE      TWENTY,CCOL  
ECOD1200  CALL      KYPRIITM
          BRANCH    EXIT,ECOD9500:               * exitchar entered
                         ECOD4000:               * ? entered
                         ECOD6000                * nothing entered
.
          CALL      CHKI0000                     * item on file ?
          BRANCH    EXIT,ECOD1200                * no
.
          MATCH     SCODE,ITEMNUMB               * start code > end code ?
          GOTO      ECOD9000 IF NOT LESS         * no
.
          MATCH     SSUB,SUBITEM                 * start code > end code ?
          GOTO      ECOD9000 IF NOT LESS         * no
.
          DISPLAY   *P1:24,*EL,*B,"Start code greater than end code.  ";
          CALL      HITENTER
          GOTO      ECOD1200
.
ECOD4000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
ECOD4500  MOVE      ASATDATE,SERDATE
          MOVE      ZERO,ITMFLAG
          MOVE      ONE,PATHFLAG
          CALL      PRIITMDS                     * display items on file
.
ECOD5000  DISPLAY   *P1:24,*EL,"To Item Number : "
          MOVE      TWENTY4,CVERT
          MOVE      TWENTY,CCOL
          CALL      KYPRIITM
          BRANCH    EXIT,ECOD9400:               * exitchar entered
                         ECOD4500:               * ? entered
                         ECOD5900                * nothing entered
.
          CALL      CHKI0000                     * item on file ?
          BRANCH    EXIT,ECOD5000                * no
.
          MATCH     SCODE,ITEMNUMB               * start code > end code ?
          GOTO      ECOD5500 IF NOT LESS         * no
.
          MATCH     SSUB,SUBITEM                 * start code > end code ?
          GOTO      ECOD5500 IF NOT LESS         * no
.
          DISPLAY   *P1:24,*EL,*B,"Start code greater than end code.  ";
          CALL      HITENTER
          GOTO      ECOD5000
.
ECOD5500  CALL      PUTSCR00                     * restore screen
          DISPLAY   *P20:18,*EL,*V2LON,ITEMNUMB
.
          MATCH     SP3,SUBITEM                  * subitem entered ?
          GOTO      ECOD9000 IF EQUAL            * no
.
          DISPLAY   *P29:18,*V2LON,"(",SUBITEM,")"
          GOTO      ECOD9000
.
ECOD5900  CALL      PUTSCR00                     * restore screen
ECOD6000  UNPACK    Z30,ITEMNUMB,SUBITEM
          PACK      PRITDESC,SP30,SP30
          DISPLAY   *P20:18,*EL,*V2LON,FINISH
.
ECOD9000  MOVE      ITEMNUMB,ECODE
          MOVE      SUBITEM,ESUB
          MOVE      PRITDESC,EDESC
          DISPLAY   *P35:18,PRITDESC
          MOVE      ZERO,EXIT
          GOTO      ECOD9999
.
ECOD9400  CALL      FRESCR00
ECOD9500  MOVE      ONE,EXIT
.
ECOD9999  RETURN
+
.****************************************************************************
.*                                 SDES0000            Called by: ML0000    *
.*                          get starting item description                   *
.****************************************************************************
.
SDES0000  KEYIN     *P1:16,*EF,"From Item Description : ",*DV,UNDLN30:
                    *P25:16,*V2LON,SDESC
.
          RESET     SDESC
          GOTO      SDES5000 IF EOS              * nothing entered
.
          CMATCH    EXITCHAR,SDESC               * exitchar input ?
          GOTO      SDES9500 IF EQUAL            * yes
.
          GOTO      SDES9000                     * description entered
.
SDES5000  MOVE      SP30,SDESC
.
          DISPLAY   *P25:16,*EL,*V2LON,START
.
SDES9000  MOVE      ZERO,EXIT
          GOTO      SDES9999
.
SDES9500  MOVE      ONE,EXIT
.
SDES9999  RETURN
+
.****************************************************************************
.*                                 EDES0000            Called by: ML0000    *
.*                         get ending item description                      *
.****************************************************************************
.
EDES0000  KEYIN     *P1:18,*EL,"To   Item Description : ",*DV,UNDLN30:
                    *P25:18,*V2LON,EDESC:
                    *P25:18,*DV,EDESC
.
          RESET     EDESC
          GOTO      EDES5000 IF EOS              * nothing entered
.
          CMATCH    EXITCHAR,EDESC               * exitchar input ?
          GOTO      EDES9500 IF EQUAL            * yes
.
          GOTO      EDES8000                     * description entered
.
EDES5000  MOVE      Z30,EDESC
.
          DISPLAY   *P25:18,*EL,*V2LON,FINISH
          GOTO      EDES9000
.
EDES8000  MATCH     SDESC,EDESC                  * start desc. > end desc. ?
          GOTO      EDES9000 IF NOT LESS         * no
.
          DISPLAY   *P1:24,*EL,*B,"Start description greater than end ":
                    "description.  ";
          CALL      HITENTER
          GOTO      EDES0000
.
EDES9000  COMPARE   COPTION,TWO
          IF        @EQUAL
             MOVE      ZERO,IFLAG
          ELSE
             MOVE      ONE,IFLAG
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      EDES9999
.
EDES9500  MOVE      ONE,EXIT
.
EDES9999  RETURN
+
.****************************************************************************
.*                                 PROC0000            Called by: ML0000    *
.*               get the records from the item file                         *
.*               and write them to the temp file                            *
.****************************************************************************
.
PROC0000  PACK      KEY22,IFLAG,Z30
          CALL      RSPRIT1                      * position at last record
PROC1000  CALL      RPPRIT1                      * read previous record
          BRANCH    OVRCD,PROC9999               * end of file
.
          COMPARE   IFLAG,PRITFLAG               * same item flag ?
          GOTO      PROC9999 IF NOT EQUAL        * no - finish
.
          MATCH     SP3,AHDEPT
          GOTO      PROC1500 IF EQUAL
.
          MATCH     PRITSETC,AHDEPT
          GOTO      PROC1000 IF NOT EQUAL
.
PROC1500  MATCH     PRITDAT1,ASATDATE             * valid effective date
          GOTO      PROC1000 IF LESS             * no
.
          MATCH     SP8,PRITDAT2                 * check "Cease Date"
          IF        !@EQUAL
            MATCH     ASATDATE,PRITDAT2           * cease date < effective date?
            GOTO      PROC1000 IF LESS           * yes
          ENDIF
.
          BRANCH    COPTION,PROC2000:
                            PROC3000:
                            PROC2000:
                            PROC3000
.
.         Check item number range
.
PROC2000  PACK      FILEITM,PRITITMN,PRITSUBN
          PACK      TEMPITM,SCODE,SSUB
          MATCH     TEMPITM,FILEITM              * < start item ?
          GOTO      PROC1000 IF LESS             * yes
.
          PACK      TEMPITM,ECODE,ESUB
          MATCH     FILEITM,TEMPITM              * > end item ?
          GOTO      PROC1000 IF LESS             * yes
          
          GOTO      PROC4000
.
.         Check item description range
.
PROC3000  MATCH     SDESC,PRITDESC               * < start desc. ?
          GOTO      PROC1000 IF LESS             * yes
.
          MATCH     PRITDESC,EDESC               * > end desc ?
          GOTO      PROC1000 IF LESS             * yes
.
.         Valid item found, so write to temp file
.
PROC4000  DISPLAY   *P50:24,*EL,*V2LON,PRITITMN,PRITSUBN;
          MOVE      PRITDESC,XIDESC
          MOVE      PRITKEYI,XIKEY
          MOVE      PRITSFEE,XSFEE
          MOVE      PRITSETC,XSET
          MOVE      PRITMAXR,XMAX
          MOVE      PRITDAYS,XIDAY
          MOVE      PRITITMN,XINUM
          MOVE      PRITSUBN,XSNUM
          MOVE      PRITSTEP,XSTEP
          MOVE      PRITSTSB,XSTSB
          IF        PRITFIXD = 1
            MOVE      "Yes",XFIXED
          ELSE
            MOVE      "No ",XFIXED
          ENDIF
          MOVE      PRITGSTA,XGSTA
          MOVE      PRITGSTC,XGSTC
          MOVE      PRITDAT1,XEFDT
          MOVE      PRITDAT2,XCSDT
.
          PACK      KEY20,PRITITMN,PRITSUBN,PRITDAT1
          CALL      WRTEMP1
.
.                                           * Item found - reset to next Item
          PACK      KEY22,IFLAG,PRITITMN,PRITSUBN,SP8
          CALL      RSPRIT1                      * reposition in file
          GOTO      PROC1000                     * get previous record
.
PROC9999  RETURN
+
.****************************************************************************
.*                                 CODE0000            Called by: ML0000    *
.*                      get items for printing by item code                 *
.****************************************************************************
.
CODE0000  MOVE      ZERO,CPAGENO
          MOVE      ZERO,CNOUNDLN
          MOVE      ZERO,CLNO
          CALL      IBACLOCK
.
          CALL      HEAD0000
.
          PACK      KEY20,SP20
          CALL      RSTEMP1                      * position at start of file
CODE1000  CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,CODE9000               * end of file
.
          COMPARE   FIFTY7,CLNO                  * page full ?
          CALL      HEAD0000 IF NOT LESS         * yes
.
          IF        FNDFLAG = 1 & OTHRFLAG = 0
            CALL      SLIN0000
            MOVE      ZERO,FNDFLAG
          ENDIF
          CALL      DISP0000                     * print record
          BRANCH    OTHRFLAG,CODE1000            * dont print covered items
          CALL      COVR0000                     * print items also covered
.
          GOTO      CODE1000
.
CODE9000  DISPLAY   *P1:24,*EL,*V2LON,"** Report Generated **";
          CALL      LINE0000
          PRINT     *N,*1,"*** End of Report ***"
.
CODE9999  RETURN
+
.****************************************************************************
.*                                 DESC0000            Called by: ML0000    *
.*                      get items for printing by item descr.               *
.****************************************************************************
.
DESC0000  MOVE      ZERO,CPAGENO
          MOVE      ZERO,CNOUNDLN
          MOVE      ZERO,CLNO
          CALL      IBACLOCK
.
          CALL      HEAD0000
.
          PACK      KEY50,SP30,SP20
          CALL      RSTEMP2                      * position in file
DESC1000  CALL      RKTEMP2                      * read next record
          BRANCH    OVRCD,DESC9000               * end of file
.
          COMPARE   FIFTY7,CLNO                  * page full ?
          CALL      HEAD0000 IF NOT LESS         * yes
.
          IF        FNDFLAG = 1 & OTHRFLAG = 0
            CALL      SLIN0000
            MOVE      ZERO,FNDFLAG
          ENDIF
          CALL      DISP0000                     * print record
          BRANCH    OTHRFLAG,DESC1000            * dont print covered items
          CALL      COVR0000                     * print items also covered
          GOTO      DESC1000                     * get next record
.
DESC9000  DISPLAY   *P1:24,*EL,*V2LON,"** Report Generated **";
          CALL      LINE0000
          PRINT     *N,*1,"*** End of Report ***"
.
DESC9999  RETURN
+
.****************************************************************************
.*                            DISP0000                 Called by: CODE0000  *
.*                valid record so display it                      DESC0000  *
.****************************************************************************
.
DISP0000  CALL      GETS0000                     * get set code description
          BRANCH    COPTION,DISP1000:
                            DISP2000:
                            DISP1000:
                            DISP2000
.
.         Item Number sequence
.
DISP1000  PRINT     *1,PIPE,*3,XINUM;
.
          MATCH     SP3,XSNUM                    * subitem on file ?
          GOTO      DISP1200 IF EQUAL            * no
.
          PRINT     *12,"(",XSNUM,")";
.
DISP1200  MOVE      XIDESC,KEY27
          PRINT     *17,PIPE,*19,XIKEY,*20,PIPE,*22,KEY27;
          GOTO      DISP3000
.
.         Item Description sequence
.
DISP2000  MOVE      XIDESC,KEY27
          PRINT     *1,PIPE,*3,KEY27,*30,PIPE,*32,XINUM;
.
          MATCH     SP3,XSNUM                    * subitem on file ?
          GOTO      DISP2200 IF EQUAL            * no
.
          PRINT     *42,"(",XSNUM,")";
.
DISP2200  PRINT     *46,PIPE,*48,XIKEY;
.
.
DISP3000  MOVE      XSTEP,KEY7
          MOVE      XSFEE,FORM7P2
          PRINT     *49,PIPE,*51,XSET,*55,SETDESC,*69,PIPE:
                    *70,FORM7P2,*80,PIPE,*82,XFIXED,*85,PIPE,*87,XMAX:
                    *91,PIPE,*93,XIDAY,*97,PIPE,*99,KEY7,*106,PIPE;
          IF        XGSTA = 0
            PRINT     *108,"Free";
          ENDIF
          IF        XGSTA = 1
            PRINT     *107,"Payable";
          ENDIF
          IF        XGSTA = 2
            PRINT     *107,"Unknown";
          ENDIF
          PRINT     *114,PIPE,*115,XGSTC;
          MATCH     SP3,XSTSB
          IF        !@EQUAL
            PRINT     SLASH,XSTSB;
          ENDIF
.
          MOVE      SP10,DIM10A
          MATCH     SP8,XCSDT
          IF        !@EQUAL
            UNPACK    XCSDT,CCENT,CYEAR,CMON,CDAY
            PACK      DIM10A,CDAY,SLSH,CMON,SLSH,CCENT,CYEAR
          ENDIF
          PRINT     *121,PIPE,DIM10A,*132,PIPE
.
          ADD       ONE,CLNO                     * increment line count
.
DISP9999  RETURN
+
.****************************************************************************
.*                             COVR0000                Called by: DISP0000  *
.*         get all other items covered by this item                         *
.****************************************************************************
.
COVR0000  MOVE      ZERO,SUBFLAG
          MOVE      SP8,SAVDATE
          PACK      KEY34,IFLAG,XINUM,XSNUM,ASATDATE,Z30
          CALL      RSPRGP1                      * position in file
COVR0500  CALL      RPPRGP1                      * read next record
          BRANCH    OVRCD,COVR9999               * eof - finished
.
          COMPARE   IFLAG,PRGPFLAG               * same item flag
          GOTO      COVR9999 IF NOT EQUAL        * no - finished
.
          MATCH     XINUM,PRGPITM1               * same item number ?
          GOTO      COVR9999 IF NOT EQUAL        * no - finished
.
          MATCH     XSNUM,PRGPSUB1               * same sub-item number ?
          GOTO      COVR9999 IF NOT EQUAL        * no - finished
.
.         When the first item covered is found, we need to save the effective
.         date as the same item(s) may also be on file for previous dates
.
          MATCH     SP8,SAVDATE                  * saved date blank ?
          IF        @EQUAL
            MOVE      PRGPDATE,SAVDATE           * yes - save effective date
          ELSE
            MATCH     PRGPDATE,SAVDATE           * no - still same date ?
            GOTO      COVR9999 IF NOT EQUAL      * no - no - finished
          ENDIF
.
.         A valid group item has been found so print it
.
          COMPARE   FIFTY7,CLNO                  * page full ?
          CALL      HEAD0000 IF NOT LESS         * yes
.
          COMPARE   ZERO,SUBFLAG                 * print header ?
          CALL      SUBH0000 IF EQUAL            * yes
.
          PRINT     *1,PIPE,*18,PIPE,*20,PRGPITM2;
.
          MATCH     SP3,PRGPSUB2                 * subitem on file ?
          GOTO      COVR1000 IF EQUAL            * no
.
          PRINT     *30,"(",PRGPSUB2,")";
.
COVR1000  MOVE      "Unknown item",PRITDESC
          PACK      KEY22,IFLAG,PRGPITM2,PRGPSUB2,PRGPDATE
          CALL      RDPRIT1                      * item on file ?
          PRINT     *36,PRITDESC,*132,PIPE
          ADD       ONE,CLNO
.
          MOVE      ONE,FNDFLAG
.
          GOTO      COVR0500                     * get next group item
.
COVR9999  RETURN
+
.****************************************************************************
.*                                GETS0000             Called by: DISP0000  *
.*             get the set code description from the codes file             *
.****************************************************************************
.
GETS0000  PACK      KEY5,CODEPG,XSET
          CALL      RDCODE1                      * read record
          BRANCH    OVRCD,GETS9000
.
          MOVE      TDESC,SETDESC                * load description
          GOTO      GETS9999
.
GETS9000  MOVE      "Unknown code",SETDESC
.
GETS9999  RETURN
+
.****************************************************************************
.*                            OTHR0000                 Called by: ML0000    *
.*               See if we need to print other items covered                *
.* Returns: OTHRFLAG   0 = print all covered items                          *
.*                     1 = dont print covered items                         *
.****************************************************************************
.
OTHR0000  KEYIN     *P1:20,*EL,"Print other items covered (",*V2LON:
                    *DV,ANSY,*HOFF,"/",*V2LON,*DV,ANSN,*HOFF,") ? ",*DV,UNDLN1:
                    *P35:20,*V2LON,ANS:
                    *P35:20,*DV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANS,ANSY                     * "Y" entered ?
          GOTO      OTHR9000 IF EQUAL            * yes
.
          MATCH     ANS,ANSN                     * "N" entered ?
          GOTO      OTHR9500 IF EQUAL            * yes
.
          BEEP
          GOTO      OTHR0000                     * invalid
.
OTHR9000  MOVE      ZERO,OTHRFLAG
          GOTO      OTHR9999
.
OTHR9500  MOVE      ONE,OTHRFLAG
.
OTHR9999  RETURN
+
.****************************************************************************
.*                            HEAD0000                 Called by: CODE0000  *
.*                       print page heading                       DESC0000  *
.****************************************************************************
.
HEAD0000  CALL      HEAD132                      * display page header
          MOVE      ZERO,SUBFLAG
          MOVE      ZERO,FNDFLAG
.
          BRANCH    COPTION,HEAD0500:
                            HEAD3000:
                            HEAD0500:
                            HEAD3000
.
.         Item Number Sequence
.
HEAD0500  PRINT     *40,TYPE," Item Number Sequence From :";
.
          MATCH     SCODE,SP9                    * start code blank ?
          GOTO      HEAD1000 IF EQUAL            * yes

          PRINT     *72,SCODE;                   * no
.
          MATCH     SSUB,SP3                     * subitem blank ?
          GOTO      HEAD1500 IF EQUAL            * yes
.
          PRINT     *81,"(",SSUB,")";
          GOTO      HEAD1500   
.
HEAD1000  PRINT     *72,START
          GOTO      HEAD1600
.
HEAD1500  PRINT     *87,SDESC
HEAD1600  PRINT     *65,"To   :";
.
          MATCH     Z30,ECODE                  * end code blank ?
          GOTO      HEAD2000 IF EQUAL            * yes
.
          PRINT     *72,ECODE;                   * no
.
          MATCH     SP3,ESUB                     * subitem blank ?
          GOTO      HEAD2500 IF EQUAL            * yes
.
          PRINT     *81,"(",ESUB,")";
          GOTO      HEAD2500
.
HEAD2000  PRINT     *72,FINISH
          GOTO      HEAD2700
.
HEAD2500  PRINT     *87,EDESC
HEAD2700  GOTO      HEAD7000
.
.         Item Description sequence
.
HEAD3000  PRINT     *40,TYPE," Description Sequence From :";
.
          MATCH     SP30,SDESC                   * start description blank ?
          GOTO      HEAD3500 IF EQUAL            * yes
.
          PRINT     *72,SDESC                    * no
          GOTO      HEAD4000
.
HEAD3500  PRINT     *72,START
.
HEAD4000  PRINT     *65,"To   :";
.
          MATCH     Z30,EDESC                  * end description blank ? 
          GOTO      HEAD4500 IF EQUAL            * yes
.
          PRINT     *72,EDESC                    * no
          GOTO      HEAD7000
.
HEAD4500  PRINT     *72,FINISH
.
HEAD7000  PRINT     *57,"Active As At :",*72,CPCDATE,*N
.
          CALL      LINE0000                     * draw line across page
.
          BRANCH    COPTION,HEAD8000:
                            HEAD9000:
                            HEAD8000:
                            HEAD9000
.
HEAD8000  PRINT     *1,PIPE,*17,PIPE,"In",*20,PIPE:
                    *49,PIPE,"Set":
                    *69,PIPE,*80,PIPE,*85,PIPE,"Max.":
                    *91,PIPE,"No.of",*97,PIPE,"Stepdown":
                    *106,PIPE," GST",*114,PIPE," GST":
                    *121,PIPE," Cease",*132,PIPE,*N:
                    *1,PIPE," Item Number",*17,PIPE,"d.",*20,PIPE:
                    " Description":
                    *49,PIPE,"Code  Description":
                    *69,PIPE," Amount $",*80,PIPE,"Fixd",*85,PIPE,"Tests":
                    *91,PIPE," Days",*97,PIPE," Item",*106,PIPE,"Charge":
                    *114,PIPE," Code",*121,PIPE," Date",*132,PIPE
          GOTO      HEAD9500
.
HEAD9000  PRINT     *1,PIPE,*30,PIPE,*46,PIPE,"In":
                    *49,PIPE,"Set":
                    *69,PIPE,*80,PIPE,*85,PIPE,"Max.":
                    *91,PIPE,"No.of",*97,PIPE,"Stepdown":
                    *106,PIPE," GST",*114,PIPE," GST":
                    *121,PIPE," Cease",*132,PIPE,*N:
                    *1,PIPE," Description",*30,PIPE," Item Number":
                    *46,PIPE,"d.",*49,PIPE,"Code  Description":
                    *69,PIPE," Amount $",*80,PIPE,"Fixd",*85,PIPE,"Tests":
                    *91,PIPE," Days",*97,PIPE," Item",*106,PIPE,"Charge":
                    *114,PIPE," Code",*121,PIPE," Date",*132,PIPE
.
HEAD9500  CALL      LINE0000                     * draw line across page
.
          MOVE      TEN,CLNO                     * increment line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                              SUBH0000               Called by: COVR0000  *
.*                 display the sub heading for covered items                *
.****************************************************************************
.
SUBH0000  CALL      SLIN0000                     * print short line
          PRINT     *1,PIPE,*18,PIPE,*20,"Items covered by item ",XINUM:
                    *132,PIPE
.
          CALL      SLIN0000                     * print short line
.
          ADD       TWO,CLNO                     * increment line count
.
          MOVE      ONE,SUBFLAG                  * set flag to "printed"
.
SUBH9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: CODE0000  *
.*                      draw line across page                     DESC0000  *
.*                                                                HEAD0000  *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
          ADD       ONE,CLNO
.
LINE9999  RETURN
+
.****************************************************************************
.*                            SLIN0000                 Called by: SUBH0000  *
.*                      draw line across page                               *
.****************************************************************************
.
SLIN0000  PRINT     *1,PIPE,*18,"*-----------------------------------":
                    "------------------------------------------------":
                    "------------------------------*"
.
          ADD       ONE,CLNO
.
SLIN9999  RETURN
+
.**************************************************************************
.*                              CREA0000               Called by:         *
.*             create a new temporary file                                *
.**************************************************************************
.
CREA0000  CALL      KILL0000                     * remove existing file
.
          PACK      CMDLIN1,SP70,SP10
          RESET     CMDLIN1
          PACK      CMDLIN1,ISBUILD,TEMPFILE,UKEY
          EXECUTE   CMDLIN1,TASKID               * create temporary index file
.
          OPEN      ITMTEMP1,TEMPFILE            * open temp index file
          OPEN      ITMTEMP2,TEMPFILE            * open temp index file
.
CREA9999  RETURN
+
.****************************************************************************
.*                              KILL0000               Called by:           *
.*               close and erase the temporary file                         *
.****************************************************************************
.
KILL0000  CLOSE     ITMTEMP1                     * close file
          CLOSE     ITMTEMP2
.
          PACK      CMDLIN2,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLIN2,TASKID               * erase temp file
.
KILL9999 RETURN
+
.****************************************************************************
.*                               CLRT0000              Called by:           *
.*                 clear the temp file of records                           *
.****************************************************************************
.
CLRT0000  PACK      KEY20,SP20
          CALL      RSTEMP1                      * position at start of file
          CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,CLRT9999               * end of file
.
          PACK      KEY20,XINUM,XSNUM,XEFDT      * load key
          CALL      DETEMP1                      * delete record
          GOTO      CLRT0000                     * get next record
.
CLRT9999  RETURN
+
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                    *
.****************************************************************************
.
RSTEMP1   READ      ITMTEMP1,KEY20;;
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    ITMTEMP1;XINUM,XSNUM,XIDESC,XIKEY,XSFEE,XSET,XMAX,XIDAY:
                             XSTEP,XSTSB,XFIXED,XGSTA,XGSTC,XEFDT,XCSDT
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMP1   WRITE     ITMTEMP1,KEY20;XINUM,XSNUM,XIDESC,XIKEY,XSFEE,XSET,XMAX:
                                   XIDAY,XSTEP,XSTSB,XFIXED,XGSTA,XGSTC,XEFDT:
                                   XCSDT
          RETURN
.
DETEMP1   DELETE    ITMTEMP1,KEY20
          RETURN
.
RSTEMP2   READ      ITMTEMP2,KEY50;;
          RETURN
.
RKTEMP2   MOVE      ZERO,OVRCD
          READKS    ITMTEMP2;XINUM,XSNUM,XIDESC,XIKEY,XSFEE,XSET,XMAX,XIDAY:
                                   XSTEP,XSTSB,XFIXED,XGSTA,XGSTC,XEFDT,XCSDT
          GOTO      OVERCOND IF OVER
          RETURN
+
. =========================================================================
. I/O Includes
. =========================================================================
.
          INC       STD001IO
          INC       TFILENAM                * Generate Temp File Name
          INC       IBASEQIO/INC            * Sequential Numbers File
          INC       WEBERRIO/INC            * Web Server Error Logging
.
          INC       KYPRIITM
          INC       PATCODKY
          INC       PRIITMDS
.
          INC       PRIGRPIO/INC
          INC       PRIITMIO/INC                 * item file
          INC       PATCODIO/INC                 * codes file
