.***************************************************************************
.* System    :   Inpatients/Outpatients                                    *
.* Program   :   IBAPMS45                                                  *
.* Desc      :   Manage Health Fund Programs Report                        *
.***************************************************************************
.* Date      :   25/10/2010                                                *
.* Author    :   Ebon Clements                                             *
.* Function  :   This program will print the manage programs report        *
.* Modifications  :                                                        *
.*        V11.04.01 10/05/2024  Nikitha B     TSK 0945137                  *
.*                  Added varibles LOOPCNTR & HTMLFILE for PMSUPGCD.       *
.*        V10.08.02 12/07/2016  Ebon Clements TSK 0318672                  *
.*                  Fixed OP extra funding required test when not          *
.*                  using OP breakdown - FLTX0000                          *
.*        V10.08.01 15/06/2016  Ebon Clements TSK 0318672                  *
.*                  Added count OP appointments by associated number       *
.*                  functionality to patient programs                       *
.*        V10.03.01 02/01/2013 Patrick Adair  CAR 261630                   *
.*                  Removed port number from temp file name                *
.*        V10.01.01 03/02/2011 Jill Parkinson CAR 233088                   *
.*                  Added pmsvx1af                                         *
.*        V10.00.02 21/07/2010  Ebon Clements CAR 207040                   *
.*                  Recompiled for PMSUPGCD - OP visit count               *
.*        V10.00.01 09/06/2010  Ebon Clements CAR 207040                   *
.*                  Recompiled for PMSUPGCD - IP visit count               *
.*        V9.12.00  25/02/2010  Ebon Clements CAR 207040                   *
.*                  Created program                                        *
.***************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
.
          INC       IBACONFD/INC 
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       OUTBOAFD/INC
          INC       OUTBB1FD/INC
          INC       OUTCONFD/INC
          INC       OUTSITFD/INC
          INC       PATCODFD/INC
          INC       PATFN1FD/INC
          INC       PATMA1FD/INC
          INC       PATMI1FD/INC
          INC       PMSVX1FD/INC
          INC       PATVISFD/INC
          INC       PMSUPGFD/INC
          INC       PMSUPOFD/INC
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
.         Temporary File Definition
.         -------------------------
.
REPTMPA1  IFILE SQL, FIXED=98, KEY="U1-8,9-11,12-14,15-20,21-23,24-31"
REPTMPA2  IFILE SQL, FIXED=98, KEY="U52-71,72-96,1-8,9-11,12-14,15-20,21-23,24-31"
.
.NAME     TYPE    LENGTH   PHYSICAL START DESCRIPTION
.----     ----    ------   -------- ----- -----------
TMPAURNO  DIM       8      8        1     U/R Number
TMPAATYP  DIM       3      3        9     Admission Type (Cat A)
TMPACLAM  DIM       3      3        12    Claim Code (Cat CL)
TMPAFUND  DIM       6      6        15    Health Fund
TMPATABT  DIM       3      3        21    Health Fund Table Type (Cat HT)
TMPAEDAT  DIM       8      8        24    Expiry Date (CCYYMMDD)
TMPAEXDT  DIM       8      8        32    Date Extension Received
TMPACURI  DIM       3      3        40    Current IP Visits
TMPAMAXI  DIM       3      3        43    Max IP Visits
TMPACURO  DIM       3      3        46    Current OP Visits
TMPAMAXO  DIM       3      3        49    Max OP Visists
TMPASNAM  DIM       20     20       52    Surname
TMPAGNAM  DIM       25     25       72    Given Name
TMPABRKO  DIM       1      1        97    Breakdown OP Visist

.
.End of Record                       98
.
REPTMPB1  IFILE SQL, FIXED=41, KEY="U1-8,9-11,12-14,15-20,21-23,24-31,32-34"
.
.NAME     TYPE    LENGTH   PHYSICAL START DESCRIPTION
.----     ----    ------   -------- ----- -----------
TMPBURNO  DIM       8      8        1     U/R Number
TMPBATYP  DIM       3      3        9     Admission Type (Cat A)
TMPBCLAM  DIM       3      3        12    Claim Code (Cat CL)
TMPBFUND  DIM       6      6        15    Health Fund
TMPBTABT  DIM       3      3        21    Health Fund Table Type (Cat HT)
TMPBEDAT  DIM       8      8        24    Expiry Date (CCYYMMDD)
TMPBVTYP  DIM       3      3        32    Visit Type (Cat CV)
TMPBCURO  DIM       3      3        35    Current OP Visits
TMPBMAXO  DIM       3      3        38    Max OP Visists
.
                                    41
.
.********************************************************************
.
.         File Variables
.
ERASE     INIT      "iserase "
HTMLFILE  FIFO      ASCII, FIXED=250
ISBUILD   INIT      "isbuild "
ISADD     INIT      "isadd "
TEMPFILA  DIM       8
TEMPFILB  DIM       8
UKEY1A    INIT      " 98 U1-8,9-11,12-14,15-20,21-23,24-31"
UKEY2A    INIT      " U52-71,72-96,1-8,9-11,12-14,15-20,21-23,24-31" 
UKEY1B    INIT      " 41 U1-8,9-11,12-14,15-20,21-23,24-31,32-34"
.
. LOCAL VARIABLE DEFINITION
. -------------------------
.
ATYPDESC  DIM       20
CFILEPRE  DIM       3
CMDLINE   DIM       227
CODE      DIM       2
CURRDATE  DIM       8
ECOL1     FORM      2
ENDDATYP  DIM       3
FRATYPED  DIM       20
FUNDXDAY  FORM      3
.
IPVCOUNT  FORM      3
IPVCMAXI  FORM      3
IPVEXTRA  FORM      3
IPVCWARN  FORM      3
LOOPCNTR  FORM      3
.
NEWVISIT  FORM      1
.
OPVCOUNT  FORM      3
OPVCMAXI  FORM      3
OPVEXTRA  FORM      3
OPVCWARN  FORM      3
.
PATFNAME  DIM       20
PASSFLAG  FORM      1
SITE      DIM       6
STRTATYP  DIM       3
TOATYPED  DIM       20
TOTALPAT  FORM      5
VALDSTYP  DIM       3
.
PRGID     INIT      "IBAPMS45"
PRGNAM    INIT      "Manage Programs Report"
VERSION   INIT      "V12.00.00"
.
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
.
          BRANCH    COPTION,ML1000         * proceed with clean up
.
ML1000    CALL      KATY0000               * Keyin the admission type
          BRANCH    EXIT,ML1000
.
          CALL      KDAY0000               * Keyin extra funding in x visits
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,ML2000:          * yes
                          ML0100:          * no
                          ML0100           * cancel
.
ML2000    CALL      CREA0000               * create temp file
.
          CALL      REPT0000               * process report
          CALL      PRNT0000               * print report
.
          CALL      KILL0000               * remove temp file
          GOTO      ML0100
.
ML9999    CHAIN     PGM                    * chain back to program
.
.****************************************************************************
.*                                INIT0000                                  *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          CALL      IBACLOCK
.
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"outsitaf";
          OPEN      OUTSITA1,"outsitaf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"pmsupgaf";
          OPEN      PMSUPGA1,"pmsupgaf"
          OPEN      PMSUPGA2,"pmsupgaf"
.
          DISPLAY   *P64:24,"pmsupoaf";
          OPEN      PMSUPOA1,"pmsupoaf"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA2,"patvisaf"
.
          DISPLAY   *P64:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          READ      CONTROLF,THIRTY2;*143,OTCNCASS
.
          MOVE      IDDD,SITE
          MOVE      IDDD,KEY6
          CALL      RDSITA1
.
          MOVE      UID,CFILEPRE          * Save Current File Prefix
          CALL      OPNOUT00                * Open Outpatient Files
.
          MOVE      SP70,VALDSTYP
.
INIT9999  RETURN
.
.******** ********************************************************************
.*                                OPTN0000                                  *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Run clean up                           *
.*                        TRUE  (1)  Exit option selected                   *
.****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Manage Programs Report"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ",*DV,UNDLN1:
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run clean-up
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
.
.****************************************************************************
.*                                KDAY0000                                  *
.*                        keyin Extra Funding Required in X Visits          *
.****************************************************************************
KDAY0000  MOVE      ZERO,FUNDXDAY
          KEYIN     *P1:12,*EL,"Extra Funding Required in X Visits : ",FUNDXDAY
.
KDAY9000  MOVE      ZERO,EXIT
          GOTO      KDAY9999
.
KDAY9999  RETURN
.
.**********************************************************************
.*                             KATY0000                               *
.*                keyin range of admission types                      *
.**********************************************************************
KATY0000  MOVE       ZERO,EXIT
          MOVE       SP70,FRATYPED
          MOVE       SP70,TOATYPED
          MOVE       SP70,STRTATYP
          MOVE       SP70,ENDDATYP
          MOVE       ZERO,CKYIMAND           *Not Mandatory
.
          DISPLAY    *P1:10,*EF,"From Admission Type :":
                     *P1:11,"To   Admission Type :";
.
          MOVE      "10",EVERT
          MOVE      "23",ECOL               * keyin position
          MOVE      "35",ECOL1              * Display description position
          MOVE      SP3,ACODE
          MOVE      "A ",CODE
          CALL      KCOD0000                * keyin code
          BRANCH    EXIT,KATY1000,KATY9000  * Nothing,exit entered
          MOVE      ACODE,STRTATYP
          MOVE      TDESC,FRATYPED
          GOTO      KATY5000
.
KATY1000  DISPLAY   *PECOL:EVERT,*V2LON,"Start",*HOFF;
          MOVE      "Start",FRATYPED
          MOVE      ZERO,EXIT
.
KATY5000  MOVE      "11",EVERT
          MOVE      SP3,ACODE
          CALL      KCOD0000                * keyin code
          BRANCH    EXIT,KATY6000,KATY9000  * Nothing,exit entered
          MOVE      ACODE,ENDDATYP
          MOVE      TDESC,TOATYPED
          GOTO      KATY9999
.
KATY6000  DISPLAY   *PECOL:EVERT,*V2LON,"End",*HOFF;
          MOVE      "End  ",TOATYPED
          MOVE      ZERO,EXIT
          GOTO      KATY9999
.
KATY9000  MOVE      ONE,EXIT
KATY9999  RETURN
.
.******************************************************************************
.*                                 KCOD0000                                   *
.*                         Keyin codes                                        *
.******************************************************************************
KCOD0000  CALL      KEYINCOD
          BRANCH    EXIT,KCOD1000:          * Nothing entered
                         KCOD2000           * Exitchar entered
.
KCOD1000  DISPLAY   *PECOL1:EVERT,*V2LON,TDESC;
KCOD2000  RETURN
.
.**************************************************************************
.*                               REPT0000                                 *
.* Select patients                                                        *
.**************************************************************************
REPT0000  CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD     * Current date
          REP       " 0",CURRDATE
.
          MOVE      ZERO,PASSFLAG                * Look for blank expiry date
.
REPT0500  IF        PASSFLAG=0
            PACK      KEY31,SP70                 * Blank expiry date
          ELSE
            PACK      KEY31,CURRDATE,SP70        * Current/Future expiry date
          ENDIF
.
          CALL      RSPMUPG2
REPT1000  CALL      RKPMUPG2
          BRANCH    OVRCD,REPT9000
.
          IF        PASSFLAG=0
            MATCH     SP70,PMUGEDAT              * Blank expiry date only
            GOTO      REPT9000 IF NOT EQUAL
          ENDIF
.
          MATCH     SP70,STRTATYP
          IF        !@EQUAL
            MATCH     STRTATYP,PMUGATYP
            GOTO      REPT1000 IF LESS  
          ENDIF
.
          MATCH     SP70,ENDDATYP
          IF        !@EQUAL
            MATCH     PMUGATYP,ENDDATYP
            GOTO      REPT1000 IF LESS  
          ENDIF
.
          PACK      KEY8,PMUGURNO,SP70
          CALL      RDMAST1
          BRANCH    OVRCD,REPT1000
.
          MOVE      PMUGURNO,TMPAURNO
          MOVE      PMUGATYP,TMPAATYP
          MOVE      PMUGCLAM,TMPACLAM
          MOVE      PMUGFUND,TMPAFUND
          MOVE      PMUGTABT,TMPATABT
          MOVE      PMUGEDAT,TMPAEDAT
          MOVE      PMUGEXTD,TMPAEXDT
.
          MOVE      PMUGMAXI,TMPAMAXI
          MOVE      ZERO,TMPACURO
          MOVE      PMUGMAXO,TMPAMAXO
.
          MOVE      PSNAME,TMPASNAM
          MOVE      PGNAME,TMPAGNAM
          MOVE      PMUGBRKO,TMPABRKO 
.
          MOVE      ZERO,NEWVISIT           * Don't include new pre adm in count
          CALL      CINP0000                * Valid program so count IP visits
          MOVE      IPVCOUNT,TMPACURI
.
          MOVE      ZERO,NEWVISIT           * Don't include new booking in count
          CALL      COUT0000                * Valid program so count OP visits
          MOVE      OPVCOUNT,TMPACURO
.
          PACK      KEY31,TMPAURNO,TMPAATYP,TMPACLAM,TMPAFUND,TMPATABT:
                          TMPAEDAT,SP70
          CALL      RATMPA1                 * write to Temp file
          IF        OVRCD=1
            CALL      WRTMPA1
          ENDIF
.
          MATCH     "1",PMUGBRKO                 * OP Breakdown
          GOTO      REPT1000 IF NOT EQUAL
.
          PACK      KEY34,TMPAURNO,TMPAATYP,TMPACLAM,TMPAFUND,TMPATABT:
                          TMPAEDAT,SP70
          CALL      RSPMUPO1
REPT2000  CALL      RKPMUPO1
          BRANCH    OVRCD,REPT1000
.
          MATCH     TMPAURNO,PMUOURNO
          GOTO      REPT1000 IF NOT EQUAL
.
          MATCH     TMPAATYP,PMUOATYP
          GOTO      REPT1000 IF NOT EQUAL
.
          MATCH     TMPACLAM,PMUOCLAM
          GOTO      REPT1000 IF NOT EQUAL
.
          MATCH     TMPAFUND,PMUOFUND
          GOTO      REPT1000 IF NOT EQUAL
.
          MATCH     TMPATABT,PMUOTABT
          GOTO      REPT1000 IF NOT EQUAL
.
          MATCH     TMPAEDAT,PMUOEDAT
          GOTO      REPT1000 IF NOT EQUAL
.
          MOVE      PMUOURNO,TMPBURNO
          MOVE      PMUOATYP,TMPBATYP
          MOVE      PMUOCLAM,TMPBCLAM
          MOVE      PMUOFUND,TMPBFUND
          MOVE      PMUOTABT,TMPBTABT
          MOVE      PMUOEDAT,TMPBEDAT
          MOVE      PMUOVTYP,TMPBVTYP 
.
          MOVE      ZERO,TMPBCURO
          MOVE      PMUOMAXO,TMPBMAXO
.
          MOVE      ZERO,NEWVISIT           * Don't include new booking in count
          CALL      COBK0000                * Valid progam so count OP
          MOVE      OPVCOUNT,TMPBCURO       * breakdown visits
.
          PACK      KEY34,TMPBURNO,TMPBATYP,TMPBCLAM,TMPBFUND,TMPBTABT:
                          TMPBEDAT,TMPBVTYP,SP70
          CALL      RATMPB1                 * write to Temp file
          IF        OVRCD=1
            CALL      WRTMPB1
          ENDIF
          GOTO      REPT2000
.
REPT9000  ADD         ONE,PASSFLAG
          BRANCH      PASSFLAG,REPT0500     * Current/Future expiry date

REPT9999  RETURN
.
.**************************************************************************
.*                               PRNT0000                                 *
.* Print report in surname and given name order                           *
.**************************************************************************
.
PRNT0000  MOVE      "99",CLNO
          MOVE      ZERO,CPAGENO
          MOVE      ZERO,TOTALPAT
.
          PACK      KEY76,SP70
          CALL      RSTMPA2 
PRNT1000  CALL      RKTMPA2  
          BRANCH    OVRCD,PRNT9000
.
          IF        FUNDXDAY<>0
            CALL      FLTX0000                   * Extra funding required in
            BRANCH    EXIT,PRNT1000              * less than x visits filter
          ENDIF
.
          COMPARE   "56",CLNO
          CALL      HEAD0000 IF NOT LESS
.
          MOVE      TMPASNAM,PACSNAME
          MOVE      TMPAGNAM,PACGNAME
          MOVE      SP4,PACTITLE
          MOVE      ONE,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,PATFNAME              * shorten name
.
          UNPACK    TMPAEXDT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          MOVE      SP70,ATYPDESC
          MATCH     SP70,TMPAATYP
          IF        !@EQUAL
            PACK      KEY5,ANSA,SP1,TMPAATYP,SP70
            CALL      RDCODE1
            IF        OVRCD<>1
              MOVE      TDESC,ATYPDESC
            ENDIF
          ENDIF
.
          MATCH     "1",TMPABRKO                  * No OP Breakdown
          IF        !@EQUAL
            MOVE      SP70,TMPBVTYP
            GOTO      PRNT3000
          ENDIF
.
          PACK      KEY34,TMPAURNO,TMPAATYP,TMPACLAM,TMPAFUND,TMPATABT:
                          TMPAEDAT,SP70
          CALL      RSTMPB1
          CALL      RKTMPB1
          BRANCH    OVRCD,PRNT2900
.
          MATCH     TMPAURNO,TMPBURNO
          GOTO      PRNT2900 IF NOT EQUAL
.
          MATCH     TMPAATYP,TMPBATYP
          GOTO      PRNT2900 IF NOT EQUAL
.
          MATCH     TMPACLAM,TMPBCLAM
          GOTO      PRNT2900 IF NOT EQUAL
.
          MATCH     TMPAFUND,TMPBFUND
          GOTO      PRNT2900 IF NOT EQUAL
.
          MATCH     TMPATABT,TMPBTABT
          GOTO      PRNT2900 IF NOT EQUAL
.
          MATCH     TMPAEDAT,TMPBEDAT
          GOTO      PRNT2900 IF NOT EQUAL
.
          MOVE      TMPBCURO,TMPACURO
          MOVE      TMPBMAXO,TMPAMAXO
          GOTO      PRNT3000
.
PRNT2900  MOVE      SP70,TMPACURO
          MOVE      SP70,TMPAMAXO
          MOVE      SP70,TMPBVTYP
.
PRNT3000  PRINT     *1,"| ",PATFNAME,*34,"| ",TMPAURNO,*45,"| ",TMPAFUND:
                    *54,"| ",TMPACURI,*63,"| ",TMPAMAXI:
                    *72,"| ",TMPACURO,*81,"| ",TMPAMAXO,*90,"| ",TMPBVTYP:
                    *96,"| ",ATYPDESC,*119,"| ",CPCDATE,*132,"|"
.
          ADD       ONE,TOTALPAT
          ADD       ONE,CLNO
.
          MATCH     "1",TMPABRKO                 * Print OP Breakdown
          GOTO      PRNT1000 IF NOT EQUAL
.
PRNT4000  CALL      RKTMPB1
          BRANCH    OVRCD,PRNT1000
. 
          MATCH     TMPAURNO,TMPBURNO
          GOTO      PRNT1000 IF NOT EQUAL
.
          MATCH     TMPAATYP,TMPBATYP
          GOTO      PRNT1000 IF NOT EQUAL
.
          MATCH     TMPACLAM,TMPBCLAM
          GOTO      PRNT1000 IF NOT EQUAL
.
          MATCH     TMPAFUND,TMPBFUND
          GOTO      PRNT1000 IF NOT EQUAL
.
          MATCH     TMPATABT,TMPBTABT
          GOTO      PRNT1000 IF NOT EQUAL
.
          MATCH     TMPAEDAT,TMPBEDAT
          GOTO      PRNT1000 IF NOT EQUAL
.
          PRINT     *1,"| ",*34,"| ",*45,"| ":
                    *54,"| ",*63,"| ":
                    *72,"| ",TMPBCURO,*81,"| ",TMPBMAXO,*90,"| ",TMPBVTYP:
                    *96,"| ",*119,"| ",*132,"|"
.
          ADD       ONE,CLNO
          GOTO      PRNT1000     
.
PRNT9000  CALL      UND132
          PRINT     *1,"| No. of Patients : ",TOTALPAT,*132,"|"
          CALL      UND132
.
PRNT9999  RETURN
.*********************************************************************
.         print a new page
.*********************************************************************
FLTX0000  MOVE      ZERO,IPVCMAXI           * Max IP Visits
          MOVE      TMPAMAXI,IPVCMAXI
.
          MOVE      ZERO,IPVCOUNT           * IP Visit Count
          MOVE      TMPACURI,IPVCOUNT       * Add current IP visits to count
.
          MOVE      ZERO,IPVEXTRA           * Extra Funding required in X Visits
.
          IF        IPVCMAXI<>ZERO      
            IF        IPVCOUNT>IPVCMAXI
              GOTO      FLTX8000            * Max IP visit exceeded so include
            ELSE
              ASSIGN    (IPVCMAXI-IPVCOUNT),IPVEXTRA  * Extra funding required  
            ENDIF                                     * in x visit
            IF       IPVEXTRA<=FUNDXDAY
              GOTO      FLTX8000            * Test extra funding days filter
            ENDIF
          ENDIF
.
          MATCH     "1",TMPABRKO            * OP Breakdown
          GOTO      FLTX0500 IF EQUAL
.
          MOVE      ZERO,OPVCMAXI           * Max OP Visits
          MOVE      TMPAMAXO,OPVCMAXI
.
          MOVE      ZERO,OPVCOUNT           * OP Visit Count
          MOVE      TMPACURO,OPVCOUNT       * Add current OP visits to count
.
          MOVE      ZERO,OPVEXTRA           * Extra Funding required in X Visits
.
          IF        OPVCMAXI<>ZERO
            IF        OPVCOUNT>OPVCMAXI
              GOTO      FLTX8000            * Max OP visit exceeded so include
            ELSE
              ASSIGN    (OPVCMAXI-OPVCOUNT),OPVEXTRA  * Extra funding required
            ENDIF                                     * in x visit
            IF       OPVEXTRA<=FUNDXDAY
              GOTO      FLTX8000            * Test extra funding days filter
            ENDIF
          ENDIF
.
          GOTO      FLTX9000
.
FLTX0500  PACK      KEY34,TMPAURNO,TMPAATYP,TMPACLAM,TMPAFUND,TMPATABT:
                          TMPAEDAT,SP70
          CALL      RSTMPB1
FLTX1000  CALL      RKTMPB1
          BRANCH    OVRCD,FLTX9000
.
          MATCH     TMPAURNO,TMPBURNO
          GOTO      FLTX9000 IF NOT EQUAL
.
          MATCH     TMPAATYP,TMPBATYP
          GOTO      FLTX9000 IF NOT EQUAL
.
          MATCH     TMPACLAM,TMPBCLAM
          GOTO      FLTX9000 IF NOT EQUAL
.
          MATCH     TMPAFUND,TMPBFUND
          GOTO      FLTX9000 IF NOT EQUAL
.
          MATCH     TMPATABT,TMPBTABT
          GOTO      FLTX9000 IF NOT EQUAL
.
          MATCH     TMPAEDAT,TMPBEDAT
          GOTO      FLTX9000 IF NOT EQUAL
.
          COMPARE   IPVEXTRA,FUNDXDAY
          GOTO      FLTX8000 IF NOT LESS
.
          MOVE      ZERO,OPVCMAXI           * Max OP Visits
          MOVE      TMPBMAXO,OPVCMAXI
.         
          MOVE      ZERO,OPVCOUNT           * OP Visit Count
          MOVE      TMPBCURO,OPVCOUNT       * Add current OP visits to count
.         
          MOVE      ZERO,OPVEXTRA           * Extra Funding required in X Visits
.
          IF        OPVCMAXI<>ZERO
            IF        OPVCOUNT>OPVCMAXI
              GOTO      FLTX8000            * Max OP visit exceeded so include
            ELSE
              ASSIGN    (OPVCMAXI-OPVCOUNT),OPVEXTRA  * Extra funding required 
            ENDIF                                     * in x visit
            IF       OPVEXTRA<=FUNDXDAY
              GOTO      FLTX8000            * Test extra funding days filter
            ENDIF
          ENDIF
.
          GOTO      FLTX1000
.
FLTX8000  MOVE      ZERO,EXIT                    * Include in report
          GOTO      FLTX9999
.
FLTX9000  MOVE      ONE,EXIT                     * Exclude from report
          GOTO      FLTX9999
.
FLTX9999  RETURN
.
.*********************************************************************
.         print a new page
.*********************************************************************
HEAD0000  CALL      HEAD132
.
          PACK      KEY5,ANSA,SP70
          CALL      RDCODE1
          IF        OVRCD=1
            MOVE      "Admission Type",TDESC
          ENDIF
.
          STRIP     TDESC
          STRIP     FRATYPED
          STRIP     TOATYPED
.
          PRINT     *30,*+,"From ",TDESC," : ",FRATYPED," to ",TOATYPED
.
          IF        FUNDXDAY=0
            PRINT     *30,"Extra Funding Required in Less Than X ":
                          "Visits : All"
          ELSE
            PRINT     *30,"Extra Funding Required in Less Than X ":
                          "Visits : ",FUNDXDAY
          ENDIF
.
          MOVE      SIX,CLNO
.
          MATCH     "1",OTCNCASS
          IF        @EQUAL
            PRINT     *30,"Count by Assoc Number : Yes"
            ADD       ONE,CLNO
          ENDIF
.
          CALL      UND132
          PRINT     *1,"| Patient Name ",*34,"| U/R",*45,"| Health":
                    *54,"|    IP Visits ",*72,"|       OP Visits ":
                    *96,"| ",TDESC,*119,"| Extension",*132,"|"
          PRINT     *1,"| ",*34,"| ",*45,"| Fund":
                    *54,"| Count  | Max",*72,"| Count  | Max    |Type":
                    *96,"|",*119,"| Received",*132,"|"
.
          ADD       TWO,CLNO
          CALL      UND132
.
HEAD9999  RETURN
.
.**************************************************************************
.*                              CREA0000               Called by:         *
.*             create a new temporary file                                *
.**************************************************************************
.
CREA0000  CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,TEMPFILA
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,TEMPFILB
.
          CALL      KILL0000                     * remove existing file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,TEMPFILA,UKEY1A,UKEY2A
          EXECUTE   CMDLINE,TASKID               * create temporary index file
.
          OPEN      REPTMPA1,TEMPFILA            * open temp index file
          OPEN      REPTMPA2,TEMPFILA            * open temp index file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,TEMPFILB,UKEY1B
          EXECUTE   CMDLINE,TASKID               * create temporary index file
.
          OPEN      REPTMPB1,TEMPFILB            * open temp index file
.
CREA9999  RETURN
+
.****************************************************************************
.*                              KILL0000               Called by:           *
.*               close and erase the temporary file                         *
.****************************************************************************
.
KILL0000  CLOSE     REPTMPA1                     * close file
          CLOSE     REPTMPA2                     * close index 1
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ERASE,TEMPFILA       * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
          CLOSE     REPTMPB1                     * close index 1
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ERASE,TEMPFILB       * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
KILL9999 RETURN
.
.------------------------------------------------------------
. Open Outpatient Files
.------------------------------------------------------------
OPNOUT00  PACK      CFNAME,CFILEPRE,FILBOKA6  * Get the name of the BOKA3 file
          CLOSE     OUTBOKA6
          OPEN      OUTBOKA6,CFNAME           * Open the file
.
          PACK      CFNAME,CFILEPRE,FILBB1A1  * Get the name of the BOKA3 file
          CLOSE     OUTBB1A1
          OPEN      OUTBB1A1,CFNAME
.
OPNOUT99  RETURN
.
.*******************************************************************************
. COTFIL00 - Check that the correct outpatient site prefix files are open
.            according to the visit files site code. If the site is invalid
.            or blank just open the default site of out.

.*******************************************************************************
COTFIL00  MATCH     SP70,PVISITE             * Does the visit have a site
          GOTO      COTFIL50 IF NOT EQUAL
.
COTFIL10  MATCH     "out",CFILEPRE           * Is out currently open
          IF        !@EQUAL
            MOVE      "out",OSTFILE          * open default prefix of out
            MOVE      OSTFILE,CFILEPRE       * Save Current File Prefix
            CALL      OPNOUT00               * Open out Outpatient Files
          ENDIF
.
          GOTO      COTFIL99
.
COTFIL50  MOVE      PVISITE,KEY6
          CALL      RDSITA1
          BRANCH    OVRCD,COTFIL10           * error invalid site code
.
          MATCH     OSTFILE,CFILEPRE         * Save Current File Prefix
          IF        !@EQUAL
            MOVE      OSTFILE,CFILEPRE       * Save Current File Prefix
            CALL      OPNOUT00               * Open prefixed Outpatient Files
          ENDIF
.
          GOTO      COTFIL99
.
COTFIL99  RETURN
+
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                    *
.****************************************************************************
.
. Temp file A
.
RATMPA1   MOVE      ZERO,OVRCD
          READ      REPTMPA1,KEY31;ANSS
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMPA1   WRITE     REPTMPA1,KEY31;TMPAURNO,TMPAATYP,TMPACLAM,TMPAFUND,TMPATABT:
                             TMPAEDAT,TMPAEXDT,TMPACURI,TMPAMAXI,TMPACURO:
                             TMPAMAXO,TMPASNAM,TMPAGNAM,TMPABRKO
          RETURN
.
RSTMPA2   READ      REPTMPA2,KEY76;;
          RETURN
.
RKTMPA2   MOVE      ZERO,OVRCD
          READKS    REPTMPA2;TMPAURNO,TMPAATYP,TMPACLAM,TMPAFUND,TMPATABT:
                             TMPAEDAT,TMPAEXDT,TMPACURI,TMPAMAXI,TMPACURO:
                             TMPAMAXO,TMPASNAM,TMPAGNAM,TMPABRKO
          GOTO      OVERCOND IF OVER
          RETURN
.
. Temp file B
.
RSTMPB1   READ      REPTMPB1,KEY34;;
          RETURN
.
RATMPB1   MOVE      ZERO,OVRCD
          READ      REPTMPB1,KEY34;ANSS
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMPB1   MOVE      ZERO,OVRCD
          READKS    REPTMPB1;TMPBURNO,TMPBATYP,TMPBCLAM,TMPBFUND,TMPBTABT:
                             TMPBEDAT,TMPBVTYP,TMPBCURO,TMPBMAXO
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTMPB1   WRITE     REPTMPB1,KEY34;TMPBURNO,TMPBATYP,TMPBCLAM,TMPBFUND,TMPBTABT:
                             TMPBEDAT,TMPBVTYP,TMPBCURO,TMPBMAXO
          RETURN
.
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       KEYINCOD
          INC       STD001IO
          INC       PATDSCOD
          INC       PMSUPGCD
          INC       TFILENAM                     * Generate Temp File Name
.
          INC       IBASEQIO/INC                 * Sequential Numbers File
          INC       OUTBOAIO/INC
          INC       OUTBB1IO/INC
          INC       OUTSITIO/INC
          INC       PATCODIO/INC
          INC       PATFN1IO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PMSVX1IO/INC
          INC       PATVISIO/INC
          INC       PMSUPGIO/INC
          INC       PMSUPOIO/INC
          INC       WEBERRIO/INC                 * Web Server Error Logging
