.------------------------------------------------------------
.  File          :  WEBPKIPR.PBL
.
.  Function      :  Update Keyword Index File for WebServices Participant Table
.
.  Parameters    :  WBPRCODE - Key to waiting list procedure 
.
.  Modifications :
.
.  Notes
.  -----
.  This Skeleton Routine is to Create a Procedure to Update
.  a Key Word Index Table that can be used for searching 
.  Masterfiles. The procedure should be called from the 
.  Add, Update and Delete functions in the Masterfile 
.  Maintenance Function.
.  
.  A Key Word Index Table is Defined in the following Manner
.                              
.  WBPKCODE    DIM       3     * Procedure Code
.  WBPKKKWD    DIM       50    * Key Word
.  WBPKSPAR    DIM       50    * Spare
.
.  Index 1   WBPKCODE, WBPKKKWD
.  Index 2   WBPKKKWD, WBPKCODE
.
.  To convert this Procedure the following should be performed
.    Global Change PAT to the System ID eg :%s/PAT/PAT/g
.    Global Change CKI to the File   ID eg :%s/CKI/CKI/g
.    Global Change PTDK to the IO Call ID eg :%s/PTDK/PTDK/g
.    Modify the KEYINDEX defintion to combined Code Field Lengths eg 6
.    Global Change KEY21 to the Key for the Key Word Table eg KEY21
.    Change xxxxxxx to the Code Fields eg DCODEhh
.    Change the WPGE0000 routine to call the HCPBW000 for each
.    string of key words to be indexed for the Coded Field
.    eg MOVE    DSNAME,KEYWORDS
.       CALL    HCPBW000
.------------------------------------------------------------
          DEFPROC   WEBPKIUP
.
          INC       WEBPKIFD/INC
.
KEYINDEX  DIM       3         * Code Index in Table
KEYWORDS  DIM       60        * String Containing the Key Words to be Indexed
SIXTY     FORM      "60"
KEYWRDNO  FORM      2
KEYWRD00  DIM       60
KEYWRD01  DIM       50
KEYWRD02  DIM       50
KEYWRD03  DIM       50
KEYWRD04  DIM       50
KEYWRD05  DIM       50
KEYWRD06  DIM       50
KEYWRD07  DIM       50
KEYWRD08  DIM       50
KEYWRD09  DIM       50
KEYWRD10  DIM       50
.------------------------------------------------------------
. Generate Word Index
.------------------------------------------------------------
WPGE0000  MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     WEBPKIA1,"webpkiaf"
          TRAPCLR  IO
          BRANCH   OVRCD,WPGE9999
.
          MOVE     WBPRCODE,KEYINDEX
          CALL     WBRCL000           * Remove Current Key Word Index
          BRANCH   EXIT,WPGE9999
.
          MOVE     WBPRCODE,KEY3          * Validate Record on File
          CALL     RDWBPAR1 
          BRANCH   OVRCD,WPGE1900     * If Not then it Must be a Delete/Clear
.
          MOVE     WBPRCODE,KEYINDEX
          MOVE     WBPRCODE,KEYWORDS
          CALL     WEBPW000
.
          MOVE     WBPRCODE,KEYINDEX
          MOVE     WBPRNAME,KEYWORDS
          CALL     WEBPW000
.
WPGE1900  CLOSE    WEBPKIA1
.
WPGE9999  GOTO     WEBPKIEP
.------------------------------------------------------------
. Clear Current Key Words
.------------------------------------------------------------
WBRCL000  PACK     KEY53,KEYINDEX,SP70
          CALL     RSWBPKI1
          CALL     RKWBPKI1
          BRANCH   OVRCD,WBRCL999
          MATCH    KEYINDEX,WBPKCODE 
          GOTO     WBRCL999 IF NOT EQUAL
.
          PACK     KEY53,WBPKCODE,WBPKKKWD,SP70
          CALL     DEWBPKI1
          GOTO     WBRCL000
.
WBRCL999  RETURN
.-------------------------------------------------
. Determine Words to Index
.-------------------------------------------------
WEBPW000  CMATCH    SP1,KEYWORDS             * Eliminate leading blanks
          IF        @EQUAL
            BUMP      KEYWORDS
            GOTO      WEBPW000 IF NOT EOS
            GOTO      WEBPW999               * entire name if blank
          ENDIF
          PACK      KEY60,KEYWORDS,SP30      * reset form pointer
          MOVE      KEY60,KEYWORDS
.
          SCAN      SP1,KEYWORDS             * Locate the first blank
          GOTO      WEBPW100 IF NOT EQUAL
          BUMP      KEYWORDS,-1              * go back 1 to end of name
          MOVEFPTR  KEYWORDS,CCITEM          * another handly form field
          RESET     KEYWORDS                 * reset the form pointer
          SETLPTR   KEYWORDS,CCITEM          * set logical length to end of name
.
.         Save this Word
.
WEBPW100  MOVE      KEYWORDS,KEY50
          PACK      KEY50,KEY50,SP70
          REP       UPPLOW,KEY50             * Always Upper Case
          PACK      KEY53,KEYINDEX,KEY50
          UNPACK    KEY53,WBPKCODE,WBPKKKWD
          CALL      RDWBPKI1
          IF        OVRCD=1
            CALL      WRWBPKI1
          ENDIF
          GOTO      WEBPW190
.
.         Check for any more words
.
WEBPW190  SETLPTR   KEYWORDS,SIXTY         * reset logical length
          ADD       ONE,CCITEM             * position of 1st blank
          RESET     KEYWORDS,CCITEM        * reset to this point
          PACK      KEY60,KEYWORDS,SP30    * reset form pointer
          MOVE      KEY60,KEYWORDS
          GOTO      WEBPW000
.
WEBPW999  RETURN
.
          INC       WEBPKIIO/INC
          INC       IBAOVRIO/INC
.
WEBPKIEP  ENDPROC                          * End of Procedure
.
