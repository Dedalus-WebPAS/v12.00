.******************************************************************************
.* System    :   Billing                                                      *
.* Program   :   IBARSH10                                                     *
.* Desc      :   Schedule program to process new file records for bed fees    *
.******************************************************************************
.* Date      :   24/03/2003                                                   *
.* Author    :   Ebon Clements                                                *
.* Function  :   This program will process various function that relate       *
.*           :   to the bed fee file as scheduled reports.                    *
.*           :                                                                *
.* Mods      :                                                                *
.*                                                                            *
.*----------------------------------------------------------------------------*
.* V11.04.02 02/04/2024  J.Tan           TSK 0919569                          *
.*           Mod to MBS Exploding charges                                     *
.* V11.04.01 21/12/2023  Thanh T         TSK 0910994                          *
.*           Changed CLVR0000 to remove PMSCMTFD field variables and          *
.*           replaced with call to CLPMSCMT function from CLPMSCMT.PBL        *
.*----------------------------------------------------------------------------*
.* V11.01.02 07/04/2021  Tracey Nguyen   TSK 0901515                          *
.*           Recompiled for PMSCMTFD - Added new fields                       *
.*           a) 1 File type for ICD procedure (PMCCIPF)                       *
.*           b) 3 new CMBS Field Type (PMCCFTS4/PMCCFT5C/PMCCFT6C)            *
.*           c) 3 new CMBS Codes From (PMCCPC4F,PMCCSC5F,PMCCTC6F)            *
.*           d) 3 new CMBS Codes To   (PMCCPC4T/PMCCSC5T,PMCCTC6T)            *
.* V11.01.01 10/03/2021  Tracey Nguyen   TSK 0901515                          *
.*           Recompiled for PMSCMTFD - Added Primary ICD Procedure 1-5        *
.*           (PMCCICP1-5)                                                     *
.*----------------------------------------------------------------------------*
.*        V11.00.01 20/03/2020  J.Tan          TSK 0838262                    *
.*                  Added Effective from and to date to MBS Item file         *
.*        V10.05.01 01/08/2015  Ania P                      CAR 261630        *
.*                  Removed use of PORT for temp file naming                  *
.*        V10.03.02 11/12/2012  J.Tan          CAR 277417                     *
.*                  Fixed I*I on jhs files for Global function MBS items      *
.*        V10.03.01 15/03/2012  J.Tan          CAR 261869                     *
.*                  Mods for Global function Matrix Claim code/HF Duplication *
.*        V10.01.10 28/03/2011  J.Tan         CAR 233054                      *
.*                  Removed global update on Multiple procedures              *
.*        V10.01.09 21/02/2011  Peter Vela    CAR 233034/233048               *
.*                  Convert Bed/Theatre Fee global functions to Johns Hopkins *
.*        V10.01.08 21/02/2011  Peter Vela    CAR 233034/233048               *
.*                  Convert Bed/Theatre Fee global functions to Johns Hopkins *
.*        V10.01.07 15/02/2011  Ebon Clements CAR 233048                      *
.*                  Removed new/old file casemix theatre fee global functions *
.*        V10.01.06 02/02/2011  Mike Laming   CAR 233046                      *
.*                  Removed new/old Misc.charges files PATMC1FD & PATMC2FD    *
.*        V10.01.05 27/01/2011  Ebon Clements CAR 233050                      *
.*                  Removed casemix fundng global functions                   *
.*        V10.01.04 21/01/2011  Mike Laming   CAR 233054                      *
.*                  Changed Keys for PMSMPRaf (Contract Id. new key)(Obsolete)*
.*        V10.01.03 21/01/2011  Ebon Clements CAR 233051                      *
.*                  Removed casemix matrix global functions                   *
.*        V10.01.02 16/12/2010  Mike Laming   CAR 233046                      *
.*                  Mods to Misc.Charges PATMCHFD - Key change, logic changes *
.*                  17/01/2011  J.Tan         CAR 233034                      *
.*                  Mods to Bed fees to use Health fund table type            *
.*                  19/01/2011  J.Tan         CAR 233048                      *
.*                  Mods to Theatre fees to use Health fund table type        *
.*        V10.01.01 09/12/2010 J.Tan   CAR 234863                             *
.*                  Recompiled for PBFEEUPD - Bed fees Update                 *
.*        V10.00.06 12/10/2010  J.Tan         CAR 231376                      *
.*                  Recompiled for PBFEEUPD - Update Bed fees                 *
.*        V10.00.05 15/09/2010  J.Tan         CAR 230164                      *
.*                  Mods to print Update Date/Time for Update Bed Fee         *
.*        V10.00.04 13/08/2010  J.Tan         CAR 227991                      *
.*                  Fixed updating New to Current Casemix Theatre Fee         *
.*        V10.00.03 22/07/2010  J.Tan         CAR 226158                      *
.*                  Fixed updating bedfee more than once for samedate         *
.*        V10.00.02 20/07/2010  J.Tan         CAR 226158                      *
.*                  Recompiled for STEPDOWN - updating old bed fees           *
.*        V10.00.01 14/07/2010  J.Tan         CAR 226158                      *
.*                  Recompiled for STEPDOWN - updating old bed fees           *
.*        V9.12.04  11/03/2010  J.Tan         CAR 216044                      *
.*                  Recompiled for STEPDOWN - TAC claim to incl.Leave         *
.*        V9.12.03  04/03/2009  J.Tan         CAR 211338                      *
.*                  Mods to include Casepayment                               *
.*        V9.12.02  19/10/2009  J.Tan         CAR 207359                      *
.*                  Recompiled for STEPDOWN for TEMPDAY>999                   *
.*        V9.12.01  09/09/2009  J.Tan      CAR 205303                         *
.*                  Added Casemix Contract ID                                 *
.*                  09/09/2009  J.Tan      CAR 204390                         *
.*                  Mods to old bed fees                                      *
.*        V9.11.01  18/03/2009  J.Tan      CAR 188110                         *
.*                  Added ICD10 Suggested Classification                      *
.*        V9.10.02  01/09/2008  J.Tan      CAR 176927                         *
.*                  Mods checking for NOFEE when updating bed fees            *
.*        V9.10.01  24/04/2008  Ebon Clements CAR 163698                      *
.*                  Added blank h/fund option to c/mix matrix                 *
.*                  global delete GMTX0000                                    *
.*        V9.09.07  18/04/2008  J.Tan      CAR 164355                         *
.*                  Fixed Bed fee update for On-leave patients                *
.*        V9.09.06  11/04/2008  Ebon Clements CAR 165417                      *
.*                  Fixed P*K on global delete c/mix matrix GMTX0000          *
.*        V9.09.05  09/01/2008  J.Tan      CAR 159021                         *
.*                  Fixed I*C if old theatre fee doesn't exist                *
.*        V9.09.04  05/09/2007  J.Tan      CAR 146067                         *
.*                  Mods for Multiple procedures global functions             *
.*        V9.09.03  02/08/2007  J.Tan      CAR                                *
.*                  Fixed not to set PTTREPSD to 2 for Disc.record            *
.*        V9.09.02  10/07/2007  Steve Armstrong   CAR 144789                  *
.*                  Recompiled for changes to PATMC1IO.                       *
.*        V9.09.01  21/06/2007  J.Tan      CAR 138887                         *
.*                  Removed Process date from Global update bed fee           *
.*        V9.08.03  14/02/2007 Ebon Clements CAR 120013                       *
.*                  Changed theatre fee session type to cat TU                *
.*        V9.08.02  02/02/2007  Ebon Clements CAR 120001                      *
.*                  Added nz private billing files                            *
.*        V9.08.01  23/10/2006 Ebon Clements CAR 120013                       *
.*                  Added NZ private theatre fee global functions             *
.***************************************************************************
.*               V9.07.04 20/09/2006 J.Tan         CAR 119336              *
.*                        Added claim code to Suggested classification file*
.*               V9.07.03 20/07/2006 J.Tan  CAR 113110                     *
.*                        Fixed Bed fee update again                       *
.*               V9.07.02 13/07/2006  Mike Laming       CAR 111521         *
.*                        Change Bed Fee & Theatre Fee work areas to FORM82*
.*               V9.07.01 10/07/2006 J.Tan  CAR 111000                     *
.*                        Fixed Bed fee update                             *
.***************************************************************************
.*               V9.04.03 06/09/2005 J.Tan  CAR 73793 & 74371              *
.*                        Mods to bed fee update                           *
.*               V9.04.02 19/07/2005 Jill Habasque  CAR 68129              *
.*                        Added goto after "Default not set up" error message*
.*               V9.04.01 11/11/2004 Lina Vo CAR 55001                     *  
.*                        Fixed I*C in UCTF0000 - Update New to Current    *
.*                        Theatre Fee File                                 *
.***************************************************************************
.*               V9.03.11 22/06/2004 Lina Vo CAR 50663                     *  
.*                        Fixed audit check, CAUDV=0 is audit is required  *
.*               V9.03.10 09/06/2004 Lina Vo CAR 50535                     *  
.*                        Mods update MBS Item to save current file to     *
.*                        old file (olditemn)                              *
.*           :   V9.03.09 15/04/2004 J.Tan   CAR 48824                     *  
.*                        Mods checking for bed fee processing flag        *
.*                        16/04/2004 Lina Vo CAR 48824                     *
.*                        Removed Locking of Web MBS Item  maintenance     *
.*                        flag (PTCNWITM).                                 * 
.*                        Removed Locking of Web Misc Charge maintenance   *
.*                        flag (PTCNWMCH).                                 * 
.*                        Removed Locking of Web Theatre Fee maintenance   *
.*                        flag (PTCNWTFE).                                 * 
.*                        PATWEB77 server now does the locking.            *
.*           :   V9.03.08 19/11/2003 Ebon Clements    CAR 36491            *  
.*                        Added Casemix Matrix global functions            *
.*           :   V9.03.07 29/09/2003 Pat Diirto       CAR 36492            *  
.*                        Modified Option 16 & 17 Create & Update Casemix  *
.*           :   V9.03.06 25/09/2003 Pat Diirto       CAR 36492            *  
.*                        Added Option 16 & 17 Create & Update Casemix     *
.*                        Theatre Fees                                     *  
.*                        04/09/2003 Lina Vo          CAR 36486            *
.*                        Added option 14 & 15 from program IBAHOS10 -     *
.*                        Create New Misc Charge file &                    *
.*                        Update Current Misc Charge file with New File.   *
.*                        The function from IBAHOS10 uses the EXECUTE      *
.*                        which is not compatible with oracle.             *
.*           :   V9.03.05 25/08/2003 Lina Vo          CAR 36528            *
.*                        Added option 12 & 13 from program IBABIL14 -     *
.*                        Create New Theatre Fee file &                    *
.*                        Update Current Theatre Fee file with New File.   *
.*                        The function from IBABIL14 uses the EXECUTE      *
.*                        which is not compatible with oracle.             *
.*           :   V9.03.04 26/06/2003 Lina Vo          CAR 36485            *
.*                        Added option 10 & 11 from program IBAPAT14 -     *
.*                        Create New MBS/Item file & Update MBS/Item file. *
.*                        The function from IBAPAT14 uses the EXECUTE      *
.*                        which is not compatible with oracle.             *
.*           :   V9.03.03 04/06/2003 Pat Dirito       CAR 36490            *
.*                        Added report 8 & 9 from program IBAADT14, these  *
.*                        were put here as in IBAADT14 the used execute    *
.*                        that don't work too well with oracle             *
.*           :   V9.03.02 15-MAY-2003 Tracey Nguyen   CAR 36500            *
.*                        Added report 7 for global copy of Health Fund    *
.*                        details for Suggested Classification Maintenance *
.*           :   V9.03.01 05-MAY-2003 Tracey Nguyen   CAR 36499            *
.*                        Added report 6 to perform global deletion of MBS * 
.*           :            Explosion Charges                                *
.***************************************************************************
.*           :   V9.02.00 26/03/2003 Ebon Clements    SRF                  *
.*           :            Created program from IBABIL56                    *
.***************************************************************************
.
          INC       STD001FD
          INC       STDHLPDF
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       IBACONFD/INC
          INC       NZPBFEFD/INC
          INC       NZPTFEFD/INC
          INC       NZPTF1FD/INC
          INC       PATBFEFD/INC
.         INC       JHSBFEFD/INC
          INC       JHSBF1FD/INC
          INC       JHSBF2FD/INC
          INC       PATCFAFD/INC
          INC       PMSCIDFD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATDINVS/INC
          INC       PATDSCFD/INC                                       *I-90208
          INC       PATECHFD/INC
          INC       PATFN1FD/INC
          INC       PATFX1FD/INC
          INC       PATHSPFD/INC
          INC       PATICDFD/INC            * ICD10 file
          INC       PATITMFD/INC            * Current MBS/Item (patitemn)
          INC       PATIKIFD/INC            * Current keyword index (patikiaf)
          INC       PATIK1FD/INC            * New keyword index (patik1af)
.
          INC       PATMCHFD/INC            * Current Misc Charge(patmchgf)
          INC       PATMA1FD/INC
          INC       PATMI1FD/INC
          iNC       PATRCAUD/INC
          INC       PATSGCFD/INC            * Suggested Class. Exceptn file
          INC       PMSSGAFD/INC            * ICD10 Suggested Class. file
          INC       PATTFEFD/INC
.         INC       JHSTFEFD/INC            * Current Theatre Fee(jhstfeaf)
          INC       JHSTF1FD/INC            * New Theatre Fee(newtfeaf)
          INC       JHSTF2FD/INC            * Old Theatre Fee(oldtfeaf)
          INC       PATTRNFD/INC
          INC       PATWR1FD/INC
          INC       PATCTFFD/INC      * Casemix Theatre Fee File
          INC       PMSCMTFD/INC      * Casemix matrix
          INC       PMSVX1FD/INC
          INC       PATCMCFD/INC
          INC       PATIPEFD/INC
          INC       WEBSECFD/INC
          INC       IBASEQFD/INC
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.
. LOCAL VARIABLE DEFINITION
. ----
ACTION    DIM       1
ADD       DIM       2
ADDFLAG   FORM      1
AMM       DIM       2
AYY       DIM       2
ACC       DIM       2
ALLFLG    FORM      1
ALLHF     FORM      1
ATYPDES   DIM       20
ATYPDES1  DIM       20
ATYPFLG   FORM      1
.
BFATYPE1  DIM       3
BFBTYPE1  DIM       3
BFCLM1    DIM       3
BFENDDY1  FORM      3
BFHFTAB1  DIM       8
BFHFUND1  DIM       6
BFHDP1    DIM       4
BFTOTAL   FORM      8.2          TOTAL RATE                           *C-111521
BTYPDES   DIM       20
BTYPDES1  DIM       20
BTYPFLG   FORM      1
.
CALDAYS   FORM      3
CHG       FORM      1
CHNGTIME  DIM       8  
CLDES     DIM       20
CLDES1    DIM       20
CLMFLG    FORM      1
CMDLINE   DIM       60
CODE      DIM       2
CODEA     INIT      "A "
CODEBT    INIT      "BT"
CODECL    INIT      "CL"
CODEHT    INIT      "HT"
.
CODEFUND  DIM       6         * health fund code entered
CODEITEM  DIM       9         * MBS item code entered
COPYCLMN  DIM       3         * the claim code to copy
COPYFUND  DIM       6         * the health fund to copy
COPYFTAB  DIM       8         * the health fund to copy
COPYCLSS  DIM       3         * the class'n code to copy
COPYITEM  DIM       9         * the item code currently copying for
CPTOFLG   FORM      1
CPTOCLAM  DIM       3
CPTOEDAT  DIM       8
CPTOHFND  DIM       6
CPTOHFTB  DIM       8
CPTOHOSP  DIM       3
CPTOSEST  DIM       3
CSMFLG    FORM      1
.
DELFLAG   FORM      1
DESCCLSS  DIM       20        * classification desc entered
DESCFUND  DIM       30        * health fund desc entered
DESCITEM  DIM       40        * MBS item desc entered
.
DESCFCLM  DIM       30        * from claim description for copy option
DESCTCLM  DIM       30        * to   claim description for copy option
DESCFFND  DIM       30        * from fund description for copy option
DESCTFND  DIM       30        * to   fund description for copy option
DESCFITE  DIM       40        * from item description for copy option
DESCTITE  DIM       40        * to   item description for copy option
.
DALL      INIT      "ALL  "
DAYCBF    FORM      "0"
DFFLAG    FORM      1
DIM18     DIM       18
DIM18A    DIM       18
DIM30     DIM       30
DUPLFLG   FORM      1
ECOL1     FORM      2
EFTDATE   DIM       8         * Effective date (ccyymmdd)
.
FMPROC    DIM       8
FNAMET    DIM       8
FCCOD     DIM       3
FCODDES   DIM       30
FCODDES1  DIM       30
FCMCD     DIM       9
FHFTY     DIM       3
FHFUN     DIM       6
FIELD     FORM      2
FINISH    INIT      "Finish   "
FNAMER    DIM       8
FNDFLG    FORM      1
FORM3A    FORM      3
FRTYP     DIM       1  
FROMCLAM  DIM       3
FROMEDAT  DIM       8
FROMHFND  DIM       6
FROMHFTB  DIM       8
FROMHOSP  DIM       3
FROMSEST  DIM       3

FTABDES   DIM       30
FTABDES1  DIM       30
.
INCR      FORM      1
INCDESC   DIM       21
INCDES1   INIT      "Fixed Dollar Increase"
INCDES2   INIT      "Percentage Increase  "
INSRMPR   DIM       8
CONTRCD   DIM       6
FRCNTR    DIM       6
TOCNTR    DIM       6
.
JYEAR     FORM      2
.
KATYPE    DIM       3
KCLTYPE   DIM       3
KMBSCODE  DIM       9
KEY30A    DIM       30                                                 *I-61103
KEY16A    DIM       16
.
LSTFLG    FORM      1
LEAVEDAT  DIM       8
LEAVETIM  DIM       8
.
.MHFUND    DIM       6 already in PATMCHFD.
MODE      DIM       1
MODE1     DIM       1
MBSFLG    FORM      1
MANUALFG  FORM      1
.
NUMPRD    FORM      1
.
OPERCODE  DIM       4
OPNFLAG   FORM      "1"          * Used in stepdown
.
RECTYPE   DIM       1
RECTDESC  DIM       10
.
SAVKEY15  DIM       15
SAVKEY34  DIM       34
SAVPAMT   FORM      12.2
SAVRAMT   FORM      12.2
SAVITMN   DIM       9
SAVCOUN   DIM       2
SAVCNTR   DIM       6
SAVFTDG   FORM      1
SAVATY2   DIM       3
SAVATY3   DIM       3
SAVATY4   DIM       3
SAVATY5   DIM       3
SAVDDRG   DIM       4
SAVFTCM   FORM      1
SAVPCMF   DIM       9
SAVPCMT   DIM       9
SAVFTSC   FORM      1
SAVSCMF   DIM       9
SAVSCMT   DIM       9
SAVFTTC   FORM      1
SAVTCMF   DIM       9
SAVTCMT   DIM       9
SAVFTDS   FORM      1
SAVDSTA   DIM       3
SAVDST2   DIM       3
SAVDST3   DIM       3
SAVDST4   DIM       3
SAVDST5   DIM       3
SAVFTDD   FORM      1
SAVDDES   DIM       3
SAVDDE2   DIM       3
SAVDDE3   DIM       3
SAVDDE4   DIM       3
SAVDDE5   DIM       3
SAVFTAS   FORM      1
SAVASRC   DIM       3
SAVASR2   DIM       3
SAVASR3   DIM       3
SAVASR4   DIM       3
SAVASR5   DIM       3
SAVFT1C   FORM      1
SAVPICD   DIM       9
SAVPIC2   DIM       9
SAVPIC3   DIM       9
SAVPIC4   DIM       9
SAVPIC5   DIM       9
SAVFTAT   FORM      1
SAVFTAU   FORM      1
SAVAUDF   DIM       3
SAVAUD2   DIM       3
SAVAUD3   DIM       3
SAVAUD4   DIM       3
SAVAUD5   DIM       3
.
SAVFTDU   FORM      1
SAVDUDF   DIM       3
SAVDUD2   DIM       3
SAVDUD3   DIM       3
SAVDUD4   DIM       3
SAVDUD5   DIM       3
.
START     INIT      "Start    "
SAVCCOD   DIM       3
SAVHFUN   DIM       6
SAVHFTY   DIM       3
SAVTYPE   DIM       1
SAVCMCD   DIM       9
SAVMPRC   DIM       8
SAVKEY22  DIM       22
SAVKEY27  DIM       27
SAVKEY28  DIM       28
SAVKEY33  DIM       33
SAVPODY   FORM      6
SAVNPDY   FORM      6
SAVHBPT   FORM      6
SAVCCDY   FORM      6
SAVMIND   FORM      6
SKEY28    DIM       28
CPTOCLMN  DIM       3         * claim copy to
CPTOFUND  DIM       6         * fund copy to
CPTOFTAB  DIM       8         * fund table copy to
CPTOITEM  DIM       9         * item copy to
CPFRCLMN  DIM       3         * claim copy from
CPFRFUND  DIM       6         * fund copy from
CPFRFTAB  DIM       8         * fund table copy from
CPFRITEM  DIM       9         * item copy from
TCMCD     DIM       9
TMPROC    DIM       8
.
TEMPFILE  IFILE     SQL, FIXED=11, KEY="u1-1,2-9"
XXMICMXP  DIM       1        1
XXPADMNO  DIM       8        2
XXMANUAL  DIM       1        10
.EOF                         11
.
 IFGE     $$VER,7
PATVAUD   SFILE    ASCII, FIXED=256
 XIF
 IFEQ     $$VER,6
PATVAUD   FILE     ASCII, FIXED=256
 XIF
PTPORT    FORM      3.2
.
RANGE     FORM      1
RECEDESC  INIT      "Either"
RECDDESC  INIT      "Daycase"
RECODESC  INIT      "Overnight"
ROLLFILE  FILE      ASCII, FIXED=256
RTPORT    FORM      3.2
.
SAVALLW   FORM      6.2
SAVBEND   FORM      3
SAVCLM    DIM       3
SAVDESC   DIM       30
SAVDISC   FORM      6.2
SAVEXTRA  FORM      6.2
SAVENDD   FORM      3
SAVFHF    FORM      8.2                                               *C-111521
SAVFPAT   FORM      8.2                                               *C-111521
SAVFUND   DIM       6
SAVKEY26  DIM       26
SAVNINV   FORM      1
SAVPORT   FORM      4.4
SAVTAB    DIM       8
SP14      INIT      "              "
.
TABFLG    FORM      1
TCCOD     DIM       3
TABFLG1   FORM      1
THFUN     DIM       6
THFTY     DIM       3
.
UPDDATE   DIM       8
UPDTIME   DIM       8
USERID    DIM       10
.
WDATE1    DIM       8
WDATE2    DIM       8
WRITENEW  FORM      1                                                  *I-61103
.
XPOST     FORM      4
.
PRGID     INIT      "IBARSH10"
PRGNAM    INIT      "Global Maintenance  "
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
.
          BRANCH    COPTION,ML1100,ML1200,ML1300,ML1400,ML1500:
                            ML1600,ML1700,ML0100,ML0100,ML2000:
                            ML2100,ML2200,ML2300,ML0100,ML0100:
                            ML0100,ML0100,ML0100,ML0100,ML0100:
                            ML3100,ML3200,ML3300,ML3400,ML3500:
                            ML0100,ML0100,ML0100,ML0100,ML4000
.
          GOTO      ML0100
.
ML1100    CALL      CNEW0000              * Create new file
          BRANCH    EXIT,ML0100
          GOTO      ML9999
.
ML1200    CALL      UPDT0000              * Update new fees to current fee file
          BRANCH    EXIT,ML0100
          GOTO      ML9999
.
ML1300    CALL      GUPC0000              * Global Update of Charges
          BRANCH    EXIT,ML0100
          GOTO      ML9999
.
ML1400    CALL      HDUP0000              * Health Fund Duplication
          BRANCH    EXIT,ML0100
          GOTO      ML9999
.
ML1500    CALL      GDEL0000              * Global Deletion
          BRANCH    EXIT,ML0100
          GOTO      ML9999
.
ML1600    CALL      GDME0000              * Global Deletion - MBS expl charges 
          BRANCH    EXIT,ML0100
          GOTO      ML9999
.
ML1700    CALL      COPY0000              * Copy Health fund Suggested 
          BRANCH    EXIT,ML0100           * Classification details
          GOTO      ML9999
.
ML2000    
          GOTO      ML9999
.
ML2100    
          GOTO      ML9999
.
ML2200    CALL      CNTF0000              * Create new file for Theatre Fee 
          BRANCH    EXIT,ML0100
          GOTO      ML9999
.
ML2300    CALL      UCTF0000              * Update new theatre fees to current
          BRANCH    EXIT,ML0100
          GOTO      ML9999
.
ML2400
          GOTO      ML9999
.
ML2500
          GOTO      ML9999
.
ML2600   
          GOTO      ML9999
.
ML2700   
          GOTO      ML9999
.
ML3100    CALL      HMTX0000              * Claim Code / HF Duplication
          BRANCH    EXIT,ML0100           * matrix file
          GOTO      ML9999
.
ML3200    CALL      CNZT0000              * Create New File NZ Private    
          BRANCH    EXIT,ML0100           * Theatre Fee
          GOTO      ML9999
.
ML3300    CALL      UNZT0000              * Update New to Current NZ Private
          BRANCH    EXIT,ML0100           * Theatre Fee
          GOTO      ML9999
.
ML3400    CALL      GNZT0000              * Global Delete new NZ Private
          BRANCH    EXIT,ML0100           * Theatre Fee
          GOTO      ML9999
.
ML3500    CALL      HNZT0000              * H/F Duplication new NZ Private
          BRANCH    EXIT,ML0100           * Theatre Fee
          GOTO      ML9999
.
ML4000    CALL      ICSG0000              * ICD10 Suggested Class.Duplication
          BRANCH    EXIT,ML0100           * Multi.Procedures file
          GOTO      ML9999
.
ML9999    CHAIN     PGM                   * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patechaf";
          OPEN      PATECHA1,"patechaf"

          DISPLAY   *P64:24,"patitemn";
          OPEN      PATITEM1,"patitemn"

          DISPLAY   *P64:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P64:24,"patmchgf";
          OPEN      PATMCHG1,"patmchgf"
          OPEN      PATMCHG2,"patmchgf"

          DISPLAY   *P64:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patwr1af";
          OPEN      PATWR1A1,"patwr1af"
.
          DISPLAY   *P64:24,"patsgcaf"
          OPEN      PATSGCA1,"patsgcaf"     * sugg. class. exceptions file
.
          DISPLAY   *P64:24,"patctfaf"
          OPEN      PATCTFA1,"patctfaf"
.
          DISPLAY   *P64:24,"pmscmtaf"
          OPEN      PMSCMTA2,"pmscmtaf"
.
          DISPLAY   *P64:24,"patcmcaf";
          OPEN      PATCMCA1,"patcmcaf"
.
          DISPLAY   *P64:24,"pmscidaf";
          OPEN      PMSCIDA1,"pmscidaf"
.
          DISPLAY   *P64:24,"nzptfeaf";
          OPEN      NZPTFEA1,"nzptfeaf"
.
          DISPLAY   *P64:24,"nzptf1af";
          OPEN      NZPTF1A1,"nzptf1af"
.
          DISPLAY   *P64:24,"pathspaf";
          OPEN      PATHSPA1,"pathspaf"
.
          DISPLAY   *P64:24,"nzpbfeaf";
          OPEN      NZPBFEA1,"nzpbfeaf"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          OPEN      PMSSGAA1,"pmssgaaf"
          OPEN      PATI10D1,"pati10df"
.
          READ      CONTROLF,SEVENTY9;*3,PTCNBFEM
          READ      CONTROLF,TEN;*217,CAUDQ,*222,CAUDV
          READ      CONTROLF,TEN5;*247,CSTDOWN
          READ      CONTROLF,TEN9;*212,CFEETYP
          READ      CONTROLF,TWENTY;*164,PTRESDAY,*193,PTCNDCLM:
                                    *199,PTCNBCUT,*211,PTCNCNDY
          READ      CONTROLF,FIFTY9;*1,CDLSTEP,*221,PTCNBFHD
          READ      CONTROLF,ZERO;*43,IBCNMHOS
.
          IF        CFEETYP=9
            DISPLAY   *P56:24,"jhsbfeaf";
            OPEN      JHSBFEA1,"jhsbfeaf"
            OPEN      JHSBF1A1,"newbfeaf"
            OPEN      JHSBF2A1,"oldbfeaf"
.
            DISPLAY   *P64:24,"jhstfeaf";
            OPEN      JHSTFEA1,"jhstfeaf"
            OPEN      JHSTF1A1,"newtfeaf"
            OPEN      JHSTF2A1,"oldtfeaf"
          ENDIF
.
.         Don't open audit files if audits are not set.
.
          IF        CAUDV=0
            DISPLAY   *P64:24,"patvaud";
            OPEN      PATVAUD,"patvaud"
          ENDIF
.
          CALL      TFILENAM
          MOVE      TFILNAME,FNAMET
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Run clean up                           *
.*                        TRUE  (1)  Exit option selected                   *
.****************************************************************************
.
OPTN0000  CALL      INTV0000
          HLINE     *G37,2,50,80
          DISPLAY   *P1:3,*EF:
                    *P2:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P2:5,*V2LON,ONE,*HOFF," = Create New Bed Fee file":
                    *P2:6,*V2LON,TWO,*HOFF," = Update Bed Fee file":
                    *P2:7,*V2LON,THREE,*HOFF," = Global Update of Charges":
                                                " (New file)":
                    *P2:8,*V2LON,FOUR,*HOFF," = Health Fund/Table Duplication":
                                               " (New file)":
                    *P2:9,*V2LON,FIVE,*HOFF," = Global Deletion (New file)":
                    *P2:10,*V2LON,SIX,*HOFF," = Global Deletion - MBS":
                                                " explosion charges":
                    *P2:11,*V2LON,SEVEN,*HOFF," = Copy MBS":
                                            " Suggested Classification":
                    *P40:11,*V2LON,THIRTY,*HOFF," = Copy ICD10":
                                            " Suggested Classification":
                    *P1:14,*V2LON,TEN,*HOFF," = not in use ":
                    *P40:14,*V2LON,TEN1,*HOFF," = not in use ":
                    *P1:15,*V2LON,TEN2,*HOFF," = Create New Theatre Fee file":
                    *P40:15,*V2LON,TEN3,*HOFF," = Update Theatre Fee file":
                    *P1:16,*V2LON,TEN4,*HOFF," = not in use ":
                    *P40:16,*V2LON,TEN5,*HOFF," = not in use ":
                    *P40:19,*V2LON,TWENTY1,*HOFF," = Contract ID duplic C/Mix":
                                              " matrix file":
                    *P1:20,*V2LON,TWENTY2,*HOFF," = Create New NZ Prv":
                                             " Theatre fee file":
                    *P40:20,*V2LON,TWENTY3,*HOFF," = Upd New to Curr NZ Prv":
                                              " Theatre Fee":
                    *P1:21,*V2LON,TWENTY4,*HOFF," = Global Delt New NZ Prv":
                                             " Theatre fee":
                    *P40:21,*V2LON,TWENTY5,*HOFF," = H/F Duplic New NZ Prv":
                                              " Theatre Fee":
                    *P40:21,*V2LON,THIRTY,*HOFF," = ICD10 Suggested Class.":
                                              "Duplication"
.
OPTN0500  KEYIN     *P1:24,*EL,"Select Option : ",*DV,UNDLN1:
                    *P17:24,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000,OPTN9000,OPTN9000,OPTN9000,OPTN9000:
                            OPTN9000,OPTN9000,OPTN0500,OPTN0500,OPTN9000:
                            OPTN9000,OPTN9000,OPTN9000,OPTN9000,OPTN9000:   
                            OPTN9000,OPTN9000,OPTN9000,OPTN9000,OPTN9000:
                            OPTN9000,OPTN9000,OPTN9000,OPTN9000,OPTN9000:
                            OPTN0600,OPTN0600,OPTN0600,OPTN0600,OPTN9000
.
OPTN0600  BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.**************************************************************************
.*                               CNEW0000              Called by: ML0000  *
.* Create new bed fee file. This will deletes all record from the new     *
.* bed fee file and load the current file records.                        *
.**************************************************************************
CNEW0000  KEYIN     *P1:24,*EL:
                    "Are You Sure You Want to Overwrite the New File (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      CNEW1000 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      CNEW9500 IF EQUAL
.
          BEEP
          GOTO      CNEW0000
.
CNEW1000  KEYIN     *P1:24,*EL,"Do You Want to Start with a Copy of the":
                    " Current Data (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      CNEW9000 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      CNEW2000 IF EQUAL
.
          BEEP
          GOTO      CNEW1000
.
CNEW2000  KEYIN     *P1:24,*EL,"You Will Lose All Current Bed Fees When":
                    " you Update.  Are You Sure (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,DIM1;
.
          REP       UPPLOW,DIM1
          MATCH     ANSY,DIM1
          GOTO      CNEW8000 IF EQUAL
.
          MATCH     ANSN,DIM1
          GOTO      CNEW9500 IF EQUAL
.
          BEEP
          GOTO      CNEW2000
.
CNEW8000  CALL      DNEW0000                * Delete all record from new file
          MOVE      ZERO,EXIT               * Do not load current file date
          GOTO      CNEW9600
.
CNEW9000  CALL      DNEW0000                * Delete all records from new file
          CALL      LNEW0000                * Load current record to new file
.
          MOVE      ZERO,EXIT
          GOTO      CNEW9600
.
CNEW9500  MOVE      ONE,EXIT
.
CNEW9600  MOVE      SP10,PTCNWBFE
          WRITAB    CONTROLF,HUND10;*11,PTCNWBFE
CNEW9999  RETURN
+
.**************************************************************************
.*                               LNEW0000              Called by: CNEW0000*
.* Load current bed fee data to the new bed fee file                      *
.**************************************************************************
LNEW0000  PACK      KEY26,SP70
          CALL      RSJHBFE1
LNEW1000  CALL      RKJHBFE1
          BRANCH    OVRCD,LNEW9999         * End of old file
.
          PACK      KEY26,BFCLM,BFHFUND,BFHFTAB,BFATYPE,BFBTYPE,DBFENDDY,SP70
.
          CALL      WRJHB1A1              * Write to new file
.
          GOTO      LNEW1000
.
LNEW9999  RETURN
+
.**************************************************************************
.*                               LFEE0000              Called by: CNEW0000*
.* Load new bed fee data to the current bed fee file                      *
.**************************************************************************
LFEE0000  PACK      KEY26,SP70
          CALL      RSJHB1A1
LFEE1000  CALL      RKJHB1A1
          BRANCH    OVRCD,LFEE9999         * End of new file
.
          PACK      KEY26,BFCLM,BFHFUND,BFHFTAB,BFATYPE,BFBTYPE,DBFENDDY
.
          CALL      WRJHBFE1                * Write to current file
.
          GOTO      LFEE1000
.
LFEE9999  RETURN
+
.**************************************************************************
.*                               LOLD0000              Called by:         *
.* Load current bed fee data to the old bed fee file                      *
.**************************************************************************
LOLD0000  PACK      KEY26,SP70
          CALL      RSJHBFE1
LOLD1000  CALL      RKJHBFE1
          BRANCH    OVRCD,LOLD9999         * End of old file
.
          PACK      KEY26,BFCLM,BFHFUND,BFHFTAB,BFATYPE,BFBTYPE,DBFENDDY,SP70
.
          CALL      WRJHB2A1               * Write to old file
.
          GOTO      LOLD1000
.
LOLD9999  RETURN
+
.**************************************************************************
.*                               DNEW0000              Called by: CNEW0000*
.* Delete all of the new bed fee file records                             *
.**************************************************************************
DNEW0000  PACK      KEY26,SP70
          CALL      RSJHB1A1
          CALL      RKJHB1A1
          BRANCH    OVRCD,DNEW9999         * End of new file
.
          PACK      KEY26,BFCLM,BFHFUND,BFHFTAB,BFATYPE,BFBTYPE,DBFENDDY,SP70
.
          CALL      DEJHB1A1               * delete record from new file
.
          GOTO      DNEW0000
.
DNEW9999  RETURN
+
.**************************************************************************
.*                               DOLD0000              Called by:         *
.* Delete all of the old bed fee file records                             *
.**************************************************************************
DOLD0000  PACK      KEY26,SP70
          CALL      RSJHB2A1
          CALL      RKJHB2A1
          BRANCH    OVRCD,DOLD9999         * End of old file
.
          PACK      KEY26,BFCLM,BFHFUND,BFHFTAB,BFATYPE,BFBTYPE,DBFENDDY,SP70
.
          CALL      DEJHB2A1               * delete old record
.
          GOTO      DOLD0000
.
DOLD9999  RETURN
+
.**************************************************************************
.*                               DFEE0000              Called by:         *
.* Delete all of the bed fee file records                                 *
.**************************************************************************
DFEE0000  PACK      KEY26,SP70
          CALL      RSJHBFE1
          CALL      RKJHBFE1
          BRANCH    OVRCD,DFEE9999         * End of current file
.
          PACK      KEY26,BFCLM,BFHFUND,BFHFTAB,BFATYPE,BFBTYPE,DBFENDDY,SP70
.
          CALL      DEJHBFE1                * delete record from current file
.
          GOTO      DFEE0000
.
DFEE9999  RETURN
+
.**************************************************************************
.*                               GDEL0000              Called by: ML1500  *
.* Global delete of bed fee records from the new file                     *
.**************************************************************************
GDEL0000  DISPLAY   *P50:2,*V2LON,"- Global Deletion (New file) ";
          CALL      SCRD0000
          CALL      KEYD0000                 * Keyin details
          BRANCH    EXIT,GDEL9500
.
          CALL      DELQST
          BRANCH    CEXIT,GDEL8000,GDEL0000,GDEL9500
.
GDEL8000  CALL      DELN0000                 * Delet new bed fee file records
          MOVE      ZERO,EXIT
          GOTO      GDEL9600
.
GDEL9500  MOVE      ONE,EXIT
.
GDEL9600  MOVE      SP10,PTCNWBFE
          WRITAB    CONTROLF,HUND10;*11,PTCNWBFE
.         
GDEL9999  RETURN
.
+
.**************************************************************************
.*                         SCRD0000                                       *
.*  Display screen layout                                                 *
.*  Called by : GDEL0000                                                  *
.**************************************************************************
SCRD0000  DISPLAY   *P1:4,*EF:
                    *P1:5,"    Claim Code         :":
                    *P1:6,"    Health Fund        :":
                    *P1:7,"    Health Fund Table  :":
                    *P1:8,"    CMBS Class         :":
                    *P1:9,"    Bed Type           :";
.
SCRD9999  RETURN
+
.**************************************************************************
.*                            KEYD0000                                    *
.*  Keyin Claim Code, Health Fund, Health Fund Table, Admission Type,     *
.*        Bed Type                                                        *
.*  Called by : GLODEL                                                    *
.**************************************************************************
.         Keyin Claim Code
.
KEYD0000  MOVE      ZERO,EXIT
          DISPLAY   *P26:5,*EL;
          MOVE      ONE,CNEWDS
          MOVE      TWENTY6,ECOL
          MOVE      FIVE,EVERT
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          PACK      CODE,ANSC,ANSL,SP70
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,KEYD1100,KEYD9000
          MOVE      ACODE,BFCLM
          GOTO      KEYD1200  
.
KEYD1100  DISPLAY   *P26:5,*V2LON,"ALL";
          GOTO      KEYD2000
.
KEYD1200  MOVE      TDESC,CLDES              * Save description
          DISPLAY   *P35:5,CLDES;
.
.         Keyin Health Fund
.
KEYD2000  MOVE      ZERO,ALLHF               * Not all health fund flag
          MOVE      SP6,BFHFUND
          MOVE      SP30,FCODDES
          DISPLAY   *P26:6,*EL,*P26:7,*EL;
          MOVE      TWENTY6,ECOL
          MOVE      SIX,EVERT
          MOVE      ZERO,CKYIMODE
          CALL      PATFNDKY
          BRANCH    EXIT,KEYD2005,KEYD9000
          MOVE      HCODE,BFHFUND
          GOTO      KEYD2010
.
.         Nothing entered
.
KEYD2005  DISPLAY   *P26:6,*EL,*V2LON,"ALL":
                    *P26:7,*EL,*V2LON,"ALL";
          MOVE      ONE,ALLHF               * All health fund
          MOVE      SP8,BFHFTAB
          PACK      FTABDES WITH SP30
          GOTO      KEYD4000
.
KEYD2010  MOVE      HFNAME,FCODDES
          DISPLAY   *P26:6,*EL,*V2LON,BFHFUND,*HOFF,*P35:6,FCODDES;
.
.
.         Keyin Health Fund Table
.
KEYD3000  MOVE      SP8,BFHFTAB
          MOVE      SP30,FTABDES
          MOVE      TWENTY6,ECOL
          MOVE      SEVEN,EVERT
          MOVE      ZERO,CKYIMODE
          MOVE      BFHFUND,MHFUND
.
          MATCH     SP6,HCODE
          GOTO      KEYD3100 IF EQUAL
.
          CALL      PATTBLKY
          BRANCH    EXIT,KEYD3010,KEYD9000
          MOVE      HFTABL,BFHFTAB
          GOTO      KEYD3100
.
KEYD3010  DISPLAY   *P26:7,*V2LON,"ALL";
          GOTO      KEYD4000                     * Go to keyin adm.type
.
KEYD3100  MOVE      HFNAME,FTABDES
          DISPLAY   *P26:7,*EL,*V2LON,BFHFTAB,*HOFF,*P35:7,FTABDES;
.
.         Keyin Admission Type
.
KEYD4000  DISPLAY   *P26:8,*EL;
.
          MOVE      ONE,CNEWDS
          MOVE      TWENTY6,ECOL
          MOVE      EIGHT,EVERT
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      CODEA,CODE
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,KEYD4100,KEYD9000
          MOVE      ACODE,BFATYPE
          GOTO      KEYD4200
.
KEYD4100  DISPLAY   *P26:8,*V2LON,"ALL";
          GOTO      KEYD5000
.
KEYD4200  DISPLAY   *P35:8,TDESC;
.
.         Keyin Bed Type
.
KEYD5000  DISPLAY   *P26:9,*EL;
.
          MOVE      ONE,CNEWDS
          MOVE      TWENTY6,ECOL
          MOVE      NINE,EVERT
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      CODEBT,CODE
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,KEYD5100,KEYD9000
          MOVE      ACODE,BFBTYPE
          GOTO      KEYD5200
.
KEYD5100  DISPLAY   *P26:9,*V2LON,"ALL";
          MOVE      ZERO,EXIT
          GOTO      KEYD9999
.
KEYD5200  MOVE      TDESC,ATYPDES
          DISPLAY   *P35:9,ATYPDES;
.
          MOVE      ZERO,EXIT
          GOTO      KEYD9999
.
KEYD9000  MOVE      ONE,EXIT
.
KEYD9999  RETURN
+
.**************************************************************************
.*                             DELN0000                                   *
.*  Globally delete bed fee record                                        *
.*  Called by : GLODEL                                                    *
.**************************************************************************
DELN0000  DISPLAY   *P1:24,*EF,*B:
                    "Commencing Global Deletion. ":
                    *P1:24,*EL,"Deleting:",*P40:24,"Scanning:";
.
          MOVE      BFCLM,BFCLM1
          MOVE      BFHFUND,BFHFUND1
          MOVE      BFHFTAB,BFHFTAB1
          MOVE      BFATYPE,BFATYPE1
          MOVE      BFBTYPE,BFBTYPE1
.
          MOVE      SP30,KEY26
          MATCH     SP3,BFCLM
          GOTO      DELN1000 IF EQUAL
.
          PACK      KEY26,BFCLM,SP20
          MATCH     SP6,BFHFUND
          GOTO      DELN1000 IF EQUAL
.
          PACK      KEY26,BFCLM,BFHFUND,SP20
          MATCH     SP8,BFHFTAB
          GOTO      DELN1000 IF EQUAL
.
          PACK      KEY26,BFCLM,BFHFUND,BFHFTAB,SP20
          MATCH     SP3,BFATYPE
          GOTO      DELN1000 IF EQUAL
.
          PACK      KEY26,BFCLM,BFHFUND,BFHFTAB,BFATYPE,SP20
          MATCH     SP3,BFBTYPE
          GOTO      DELN1000 IF EQUAL
.
          PACK      KEY26,BFCLM,BFHFUND,BFHFTAB,BFATYPE,BFBTYPE,SP20
.
DELN1000  CALL      RSJHB1A1             * new file
DELN1500  CALL      RKJHB1A1             * new file
          BRANCH    OVRCD,DELN9000
.
          DISPLAY   *P50:24,*EL,BFCLM,BFHFUND,BFHFTAB,BFATYPE,BFBTYPE,BFENDDY;
          MATCH     SP3,BFCLM1              * All ?
          GOTO      DELN2000 IF EQUAL
.
          MATCH     BFCLM,BFCLM1
          GOTO      DELN9000 IF NOT EQUAL
.
DELN2000  MATCH     SP6,BFHFUND1            * All ?
          GOTO      DELN2100 IF NOT EQUAL
.
.         Check if this is for all health fund or bed fee with no health fund
.
          BRANCH    ALLHF OF DELN3000        * All Health Fund
.
DELN2100  MATCH     BFHFUND,BFHFUND1         * same H/Fund as specified ?
          GOTO      DELN3000 IF EQUAL        * yes
          GOTO      DELN1500 IF NOT LESS     * have not reached H/Fund specified
.
          MATCH     SP3,BFCLM1              * all Claim Codes ?
          GOTO      DELN1500 IF EQUAL        * yes - read next record
          GOTO      DELN9000                 * no - finished
.
DELN3000  MATCH     SP8,BFHFTAB1             * All ?
          GOTO      DELN4000 IF EQUAL
.
          MATCH     BFHFTAB,BFHFTAB1
          GOTO      DELN1500 IF NOT EQUAL
.
DELN4000  MATCH     SP3,BFATYPE1             * All ?
          GOTO      DELN5000 IF EQUAL
.
          MATCH     BFATYPE,BFATYPE1
          GOTO      DELN1500 IF NOT EQUAL
.
DELN5000  MATCH     SP3,BFBTYPE1             * All ?
          GOTO      DELN6000 IF EQUAL
.
          MATCH     BFBTYPE,BFBTYPE1
          GOTO      DELN1500 IF NOT EQUAL
.
DELN6000  DISPLAY   *P10:24,*V2LON,BFCLM,BFHFUND,BFHFTAB,BFATYPE:
                            BFBTYPE;        * display some record details
.
          PACK      KEY26,BFCLM,BFHFUND,BFHFTAB,BFATYPE,BFBTYPE,BFENDDY
          MOVE      KEY26,SAVKEY26
          CALL      DEJHB1A1                * new file
.
          MOVE      SAVKEY26,KEY26          * Reposition the record
          GOTO      DELN1000
.
DELN9000 
.
DELN9999   RETURN
.**************************************************************************
.                    INTV0000                     Called by : OPTN0000    *
.         Initialize all the variables before start                       *
.**************************************************************************
INTV0000  MOVE      SP3,BFCLM
          MOVE      SP6,BFHFUND
          MOVE      SP8,BFHFTAB
          MOVE      SP3,BFATYPE
          MOVE      SP3,BFBTYPE
          MOVE      SP30,BFDESC
.
          MOVE      SP3,BFCLM1
          MOVE      SP6,BFHFUND1
          MOVE      SP8,BFHFTAB1
          MOVE      SP3,BFATYPE1
          MOVE      SP3,BFBTYPE1
.
          MOVE      SP3,DIM3
          MOVE      SP30,CLDES
          MOVE      SP30,FCODDES
          MOVE      SP30,FTABDES
          MOVE      SP30,ATYPDES
          MOVE      SP30,BTYPDES
.
          MOVE      SP30,CLDES1
          MOVE      SP30,FCODDES1
          MOVE      SP30,FTABDES1
          MOVE      SP30,ATYPDES1
          MOVE      SP30,BTYPDES1
.
          MOVE      SP3,KCLTYPE
          MOVE      SP3,KATYPE
          MOVE      SP9,KMBSCODE
.
          MOVE      ZERO,NUMPRD             * clear number of periods
.
          CALL      CLRV0000
.
INTV9999  RETURN
+
.*********************************************************************
.*                  CLRV0000                    Called by : ML0000   *
.*        Clear input variables                                      *
.*********************************************************************
.
CLRV0000  UNPACK    SP30,CODEFUND,CODEITEM
          MOVE      SP20,PTSGSPAR
          MOVE      SP20,PMSGSPAR
          MOVE      SP20,DESCCLSS
          PACK      DESCITEM,SP20,SP20
          PACK      DESCFUND,SP20,SP10
.
CLRV9999  RETURN
+
.
.**************************************************************************
.                    GUPC0000                     Called by : OPTN0000    *
.         Global update for bed fee charges in the new bed fee file       *
.**************************************************************************
GUPC0000  CALL      DISC0000        
.
          MOVE      SP3,SAVCLM
          MOVE      ZERO,CLMFLG
          CALL      INTV0000
          CALL      DISPCL00
.
GUPC1000  DISPLAY   *P26:5,*EL;
          MOVE      ONE,CNEWDS
          MOVE      FIVE,EVERT
          MOVE      TWENTY6,ECOL
          MOVE      CODECL,CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,GUPC1100,GUPC9500
          MOVE      ACODE,BFCLM
          MOVE      TDESC,CLDES
          MOVE      BFCLM,SAVCLM
          GOTO      GUPC1200
.
.         Nothing entered. Assume all
.
GUPC1100  PACK      CLDES,DALL,SP20
          DISPLAY   *P26:5,*V2LON,CLDES;
          MOVE      SP3,BFCLM
          MOVE      ONE,CLMFLG
          GOTO      GUPC2000
.
GUPC1200  DISPLAY   *P26:5,*V2LON,BFCLM,*HOFF,*P35:5,CLDES;
.
.         INPUT HEALTH FUND
.
GUPC2000  MOVE      SP6,BFHFUND
          MOVE      SP6,SAVFUND
          MOVE      SP8,BFHFTAB
          MOVE      SP8,SAVTAB
          MOVE      SP30,FCODDES
          MOVE      SP30,FTABDES
          MOVE      ZERO,FNDFLG
          MOVE      ZERO,TABFLG
.
          DISPLAY   *P26:6,*EL,*P26:7,*EL;
          MOVE      TWENTY6,ECOL
          MOVE      SIX,EVERT
          MOVE      ZERO,CKYIMODE
          CALL      PATFNDKY
          BRANCH    EXIT,GUPC2200,GUPC9500
          MOVE      HCODE,BFHFUND
          GOTO      GUPC2300
. 
GUPC2200  PACK      FCODDES,DALL,SP30
          DISPLAY   *P26:6,*EL,*V2LON,FCODDES;
          PACK      FTABDES,DALL,SP30
          DISPLAY   *P26:7,*EL,*V2LON,FTABDES;
.
          MOVE      SP6,BFHFUND
          MOVE      ONE,FNDFLG
          MOVE      ONE,TABFLG
          GOTO      GUPC4000
.
GUPC2300  MOVE      BFHFUND,SAVFUND
          MOVE      HFNAME,FCODDES
.
          DISPLAY   *P26:6,*EL,*V2LON,BFHFUND,*HOFF,*P35:6,FCODDES;
.
.         INPUT HEALTH FUND TABLE
.
GUPC3000  MOVE      SP8,BFHFTAB
          MOVE      SP8,SAVTAB
          MOVE      SP30,FTABDES
          MOVE      ZERO,TABFLG
          MOVE      BFHFUND,MHFUND
          MOVE      ZERO,CKYIMODE
          MOVE      TWENTY6,ECOL
          MOVE      SEVEN,EVERT
.
          MATCH     SP6,HCODE
          GOTO      GUPC3100 IF EQUAL
.
          CALL      PATTBLKY
          BRANCH    EXIT,GUPC3050,GUPC9500
          MOVE      HFTABL,BFHFTAB
          GOTO      GUPC3100
.
.         Nothing entered
.
GUPC3050  PACK      FTABDES,DALL,SP30
          DISPLAY   *P26:7,*EL,*V2LON,FTABDES;
          MOVE      SP8,BFHFTAB
          MOVE      ONE,TABFLG
          GOTO      GUPC4000
.
GUPC3100  MOVE      BFHFTAB,SAVTAB
          MOVE      HFNAME,FTABDES
          DISPLAY   *P26:7,*EL,*V2LON,BFHFTAB,*HOFF,*P35:7,FTABDES;
.
.         INPUT ADMISSION TYPE
.
GUPC4000  MOVE      SP3,BFATYPE
          MOVE      SP3,SAVATYP
          MOVE      SP20,ATYPDES
          MOVE      ZERO,ATYPFLG
          MOVE      ONE,CNEWDS
          MOVE      TWENTY6,ECOL
          MOVE      EIGHT,EVERT
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      CODEA,CODE
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,GUPC4100,GUPC9500
          MOVE      ACODE,BFATYPE
          MOVE      TDESC,ATYPDES
          GOTO      GUPC4200
.
GUPC4100  PACK      ATYPDES,DALL,SP20
          DISPLAY   *P26:8,*V2LON,ATYPDES;
          MOVE      SP3,BFATYPE
          MOVE      ONE,ATYPFLG
          GOTO      GUPC5000
.
GUPC4200  MOVE      BFATYPE,SAVATYP
.
          DISPLAY   *P26:8,*V2LON,BFATYPE,*HOFF,*P35:8,ATYPDES;

.
.         INPUT BED TYPE
.
GUPC5000  MOVE      SP3,BFBTYPE
          MOVE      SP3,SAVBTYP
          MOVE      SP20,BTYPDES
          MOVE      ZERO,BTYPFLG
.
          DISPLAY   *P26:9,*EL;
          MOVE      ONE,CNEWDS
          MOVE      TWENTY6,ECOL
          MOVE      NINE,EVERT
          MOVE      CODEBT,CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,GUPC5100,GUPC9500
          MOVE      ACODE,BFBTYPE
          GOTO      GUPC5200
.
GUPC5100  PACK      BTYPDES,DALL,SP20
          DISPLAY   *P26:9,*V2LON,BTYPDES;
          MOVE      SP3,BFBTYPE
          MOVE      ONE,BTYPFLG
          GOTO      GUPC6000
.
.         Check what was entered
.
GUPC5200  MOVE      BFBTYPE,SAVBTYP
          MOVE      TDESC,BTYPDES
.
          DISPLAY   *P26:9,*V2LON,BFBTYPE,*HOFF,*P35:9,BTYPDES;
.
.         Finished Bed Type. Check the option to determine what to do next
.
.         INPUT HIGHEST DAY IN PERIOD
.
GUPC6000  MOVE      ZERO,BFENDDY
          MOVE      ZERO,LSTFLG
          MOVE      SP3,DIM3
.
          KEYIN     *P26:10,*EL,*V2LON,*JR,DIM3;
GUPC6100  RESET     DIM3
          GOTO      GUPC6200 IF NOT EOS
.
          MOVE      "ALL",DIM3
          DISPLAY   *P26:10,*EL,*V2LON,DIM3;
          MOVE      ONE,LSTFLG
          MOVE      DIM3,BFENDDY
          MOVE      BFENDDY,SAVENDD
          GOTO      GUPC6400
.
GUPC6200  MATCH     "  ?",DIM3
          GOTO      GUPC6500 IF EQUAL
.
          TYPE      DIM3
          GOTO      GUPC6900 IF NOT EQUAL
.
          MOVE      DIM3,BFENDDY
.
          COMPARE   ONE,CLMFLG
          GOTO      GUPC6300 IF EQUAL
.
          COMPARE   ONE,FNDFLG
          GOTO      GUPC6300 IF EQUAL
.
          COMPARE   ONE,TABFLG
          GOTO      GUPC6300 IF EQUAL
.
          COMPARE   ONE,ATYPFLG
          GOTO      GUPC6300 IF EQUAL
.
          COMPARE   ONE,BTYPFLG
          GOTO      GUPC6300 IF EQUAL
.
          PACK      KEY26 WITH BFCLM,BFHFUND,BFHFTAB,BFATYPE,BFBTYPE,BFENDDY
          CALL      RDJHB1A1              * new file
          BRANCH    OVRCD OF GUPC6900
.
GUPC6300  MOVE      BFENDDY,SAVENDD
          DISPLAY   *P26:10,*EL,*V2LON,BFENDDY;
.
GUPC6400  MOVE      MODE1,MODE
          GOTO      GUPC7000
GUPC6500  MOVE      SIX,CVERT
          DISPLAY   *P1:4,*EF,*P20:4,*V2LON,*ULON:
                    "LAST DAY IN PERIOD",*HOFF;
.
          PACK      DIM23 WITH BFCLM,BFHFUND,BFHFTAB,BFATYPE,BFBTYPE
.
          PACK      KEY26,DIM23,SP3
          CALL      RSJHB1A1             * new file
GUPC6600  CALL      RKJHB1A1             * new file
          BRANCH    OVRCD OF GUPC6700
.
          PACK      DIM23A WITH BFCLM,BFHFUND,BFHFTAB,BFATYPE,BFBTYPE
.
          MATCH     DIM23,DIM23A
          GOTO      GUPC6700 IF NOT EQUAL
.
          DISPLAY   *P3:CVERT,*V2LON,BFENDDY," - ",*HOFF,BFDESC;
          ADD       ONE,CVERT
          GOTO      GUPC6600
.
GUPC6700  MOVE      SAVCLM,BFCLM
          MOVE      SAVFUND,BFHFUND
          MOVE      SAVTAB,BFHFTAB
          MOVE      SAVATYP,BFATYPE
          MOVE      SAVBTYP,BFBTYPE
          MOVE      ZERO,BFENDDY
          MOVE      ZERO,LSTFLG
          MOVE      SP3,DIM3
          KEYIN     *P1:24,*EL,"Last Day in Period : ",*V2LON,*JR,DIM3;
          CALL      RDIS0000
          GOTO      GUPC6100
.
GUPC6900  DISPLAY   *P1:24,*EL,*B,"Invalid Last Day in Period. ";
          CALL      HITENTER
          GOTO      GUPC6000
.
.         INPUT $ OR % INCREASE
.
GUPC7000  MOVE      SP1,INCR
          MOVE      SP30,INCDESC
          KEYIN     *P26:12,*EL,*V2LON,INCR;
.
          BRANCH    INCR,GUPC7100,GUPC7100
.
          DISPLAY   *P1:24,*EL,*B,"1 or 2 ONLY. ";
          CALL      HITENTER
          GOTO      GUPC7000
.
GUPC7100  LOAD      INCDESC,INCR,INCDES1,INCDES2
          DISPLAY   *P26:12,*EL,*V2LON,INCDESC,*P45:13,*EL,*P45:14,*EL;
.
.         INPUT PATIENT PORTION OF RATE
.
GUPC8000  COMPARE   ONE,INCR
          GOTO      GUPC8100 IF NOT EQUAL
.
          DISPLAY   *P26:16,*EL,*V2LON,"$";
          GOTO      GUPC8200
.
GUPC8100   DISPLAY   *P26:16,*EL,*V2LON,"%";
.
GUPC8200  MOVE      ZERO,PTPORT
          KEYIN     *P28:16,*EL,*V2LON,PTPORT,*P28:16,*DV,PTPORT;
.
.         INPUT HEALTH FUND PORTION OF RATE
.
GUPC8500  COMPARE   ONE,INCR
          GOTO      GUPC8600 IF NOT EQUAL
.
          DISPLAY   *P26:17,*EL,*V2LON,"$";
          GOTO      GUPC8700
.
GUPC8600  DISPLAY   *P26:17,*EL,*V2LON,"%";
.
GUPC8700  MOVE      ZERO,RTPORT
          KEYIN     *P28:17,*EL,*V2LON,RTPORT,*P28:17,*DV,RTPORT;
.
          CALL      CONTQST
          BRANCH    CEXIT,GUPC9000,GUPC0000,GUPC9600
          GOTO      GUPC9500
.
GUPC9000  CALL      GUPD0000                * Prorcess global update
          MOVE      ZERO,EXIT
          GOTO      GUPC9600
.
GUPC9500  MOVE      ONE,EXIT

GUPC9600  MOVE      SP10,PTCNWBFE
          WRITAB    CONTROLF,HUND10;*11,PTCNWBFE
.
GUPC9999  RETURN
.
.**************************************************************************
.                    GUPD0000                     Called by : GUPC0000    *
.        Process global update of bed fee charges in the new file         *
.**************************************************************************
GUPD0000  DISPLAY   *P1:24,*EL,*P40:24,"Claim Code : ",*P60:24,"Scanning : ";
          MOVE      SP30,KEY26
          CALL      RSJHB1A1             * new file
GUPD1000  CALL      RKJHB1A1             * new file
          BRANCH    OVRCD,GUPD9999
          DISPLAY   *P72:24,BFCLM;
.
          COMPARE   ONE,CLMFLG
          GOTO      GUPD2000 IF EQUAL
.
          MATCH     SAVCLM,BFCLM
          GOTO      GUPD1000 IF NOT EQUAL
.
GUPD2000  COMPARE   ONE,FNDFLG
          GOTO      GUPD3000 IF EQUAL
.
          MATCH     SAVFUND,BFHFUND
          GOTO      GUPD1000 IF NOT EQUAL
.
GUPD3000  COMPARE   ONE,TABFLG
          GOTO      GUPD4000 IF EQUAL
.
          MATCH     SAVTAB,BFHFTAB
          GOTO      GUPD1000 IF NOT EQUAL
.
GUPD4000  COMPARE   ONE,ATYPFLG
          GOTO      GUPD5000 IF EQUAL
.
          MATCH     SAVATYP,BFATYPE
          GOTO      GUPD1000 IF NOT EQUAL
.
GUPD5000  COMPARE   ONE,BTYPFLG
          GOTO      GUPD6000 IF EQUAL
.
          MATCH     SAVBTYP,BFBTYPE
          GOTO      GUPD1000 IF NOT EQUAL
.
GUPD6000  COMPARE   ONE,LSTFLG
          GOTO      GUPD7000 IF EQUAL
.
          COMPARE   SAVENDD,BFENDDY
          GOTO      GUPD1000 IF NOT EQUAL
.
GUPD7000  COMPARE   ONE,INCR
          GOTO      GUPD8000 IF NOT EQUAL
.
          ADD       PTPORT,BFPAT
          ADD       RTPORT,BFHF
          GOTO      GUPD9000
.
GUPD8000  MOVE      PTPORT,SAVPORT
          DIV       "100",SAVPORT
          ADD       ONE,SAVPORT
          MULT      SAVPORT,BFPAT
.
          MOVE      RTPORT,SAVPORT
          DIV       "100",SAVPORT
          ADD       ONE,SAVPORT
          MULT      SAVPORT,BFHF
.
GUPD9000  DISPLAY   *P55:24,*V2LON,BFCLM;
          CALL      UPJHB1A1             * new file
          GOTO      GUPD1000
.
GUPD9999  RETURN
.**************************************************************************
.                    DISPCL00                     Called by : GUPC0000    *
.         Clear screen details                                            *
.**************************************************************************
DISPCL00  DISPLAY   *P26:5,*EL,*P26:6,*EL,*P26:7,*EL,*P26:8,*EL,*P26:9,*EL:
                    *P26:10,*EL,*P1:11,*EL,*P26:12,*EL,*P26:13,SP20:
                    *P26:14,SP20,*P1:15,*EL,*P26:16,*EL,*P26:17,*EL,*P26:18,*EF;
.
          COMPARE   EIGHT,OPTION
          RETURN    IF LESS
          DISPLAY   *P60:23,*EL,"(Hit ",*V2LON,"\",*HOFF," to Exit)";
DISPCL99  RETURN
.
.**************************************************************************
.                    DISC0000                     Called by : GUPC0000    *
.         Display screen for global update of new bed fee file charges    *
.**************************************************************************
DISC0000  DISPLAY   *P50:2,*V2LON,"- Global Update of Charges ";
          DISPLAY   *P1:4,*EF:
                    *P1:5,"    Claim Code         :":
                    *P1:6,"    Health Fund        :":
                    *P1:7,"    Health Fund Table  :":
                    *P1:8,"    CMBS Class         :":
                    *P1:9,"    Bed Type           :":
                   *P1:10,"    Last Day in Period :":
                   *P1:12,"    ",*V2LON,"$",*HOFF," or ",*V2LON,"%",*HOFF:
                          " Increase    :":
                  *P46:13,*V2LON,"1",*HOFF," = Fixed Dollar Increase":
                  *P46:14,*V2LON,"2",*HOFF," = Percentage Increase":
                   *P1:16,"    Pat Por. Increase  :":
                   *P1:17,"    Reb Por. Increase  :";
DISC9999  RETURN
.
.**************************************************************************
.                    RDIS0000                     Called by : GUPC0000    *
.      Re-Display screen for global update of new bed fee file charges    *
.**************************************************************************
RDIS0000  CALL      DISC0000
          DISPLAY   *P26:5,*V2LON,BFCLM,*HOFF,*P35:5,CLDES:
                    *P26:6,*V2LON,BFHFUND,*HOFF,*P35:6,FCODDES:
                    *P26:7,*V2LON,BFHFTAB,*HOFF,*P35:7,FTABDES:
                    *P26:8,*V2LON,BFATYPE,*HOFF,*P35:8,ATYPDES;
.
          MATCH     SP3,BFBTYPE
          RETURN    IF EQUAL
.
          DISPLAY   *P26:9,*V2LON,BFBTYPE,*HOFF,*P35:9,BTYPDES;
RDIS9999  RETURN
.
.**************************************************************************
.                    HDUP0000                     Called by : ML1400      *
.      Health Fund Duplication                                            *
.**************************************************************************
HDUP0000  MOVE      ZERO,EXIT
          CALL      DISD0000
.
.         INPUT BED FEE CLAIM CODE
.
HDUP0200  MOVE      SP3,SAVCLM
          MOVE      ZERO,CLMFLG
          CALL      INTV0000
.
          CALL      HDIS0000
.
HDUP0600  DISPLAY   *P26:5,*EL;
          MOVE      ONE,CNEWDS
          MOVE      FIVE,EVERT
          MOVE      TWENTY6,ECOL
          MOVE      CODECL,CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,HDUP0700,HDUP9500
          MOVE      ACODE,BFCLM
          MOVE      TDESC,CLDES
          MOVE      BFCLM,SAVCLM
          GOTO      HDUP1000
.
.         Nothing entered. Assume all
.
HDUP0700  PACK      CLDES,DALL,SP20
          DISPLAY   *P26:5,*V2LON,CLDES;
          MOVE      SP3,BFCLM
          MOVE      ONE,CLMFLG
          GOTO      HDUN1100
.
HDUP1000   DISPLAY   *P26:5,*V2LON,BFCLM,*HOFF,*P35:5,CLDES;
.
.         INPUT HEALTH FUND
.
HDUN1100  MOVE      SP6,BFHFUND
          MOVE      SP6,SAVFUND
          MOVE      SP8,BFHFTAB
          MOVE      SP8,SAVTAB
          MOVE      SP30,FCODDES
          MOVE      SP30,FTABDES
          MOVE      ZERO,FNDFLG
          MOVE      ZERO,TABFLG
.
          DISPLAY   *P26:6,*EL,*P26:7,*EL;
          MOVE      TWENTY6,ECOL
          MOVE      SIX,EVERT
          MOVE      ZERO,CKYIMODE
          CALL      PATFNDKY
          BRANCH    EXIT,HDUP1110,HDUP9500
          MOVE      HCODE,BFHFUND
          GOTO      HDUP1200
.
HDUP1110  PACK      FCODDES,DALL,SP30
          DISPLAY   *P26:6,*EL,*V2LON,FCODDES;
          PACK      FTABDES,DALL,SP30
          DISPLAY   *P26:7,*EL,*V2LON,FTABDES;
.
          MOVE      SP6,BFHFUND
          MOVE      ONE,FNDFLG
          MOVE      ONE,TABFLG
          GOTO      HDUP1310
.
HDUP1200  MOVE      BFHFUND,SAVFUND
          MOVE      HFNAME,FCODDES
.
          DISPLAY   *P26:6,*EL,*V2LON,BFHFUND,*HOFF,*P35:6,FCODDES;
.
.         INPUT HEALTH FUND TABLE
.
HDUP1230  MOVE      SP8,BFHFTAB
          MOVE      SP8,SAVTAB
          MOVE      SP30,FTABDES
          MOVE      ZERO,TABFLG
          MOVE      BFHFUND,MHFUND
          MOVE      ZERO,CKYIMODE
          MOVE      TWENTY6,ECOL
          MOVE      SEVEN,EVERT
.
          MATCH     SP6,HCODE
          GOTO      HDUP1300 IF EQUAL
.
          CALL      PATTBLKY
          BRANCH    EXIT,HDUP1250,HDUP9500
          MOVE      HFTABL,BFHFTAB
          GOTO      HDUP1300
.
.         Nothing entered
.
HDUP1250  PACK      FTABDES,DALL,SP30
          DISPLAY   *P26:7,*EL,*V2LON,FTABDES;
          MOVE      SP8,BFHFTAB
          MOVE      ONE,TABFLG
          GOTO      HDUP1310
.
HDUP1300  MOVE      BFHFTAB,SAVTAB
          MOVE      HFNAME,FTABDES
          DISPLAY   *P26:7,*EL,*V2LON,BFHFTAB,*HOFF,*P35:7,FTABDES;
.
.         INPUT ADMISSION TYPE
.
HDUP1310  MOVE      SP3,BFATYPE
          MOVE      SP3,SAVATYP
          MOVE      SP20,ATYPDES
          MOVE      ZERO,ATYPFLG
          MOVE      ONE,CNEWDS
          MOVE      TWENTY6,ECOL
          MOVE      EIGHT,EVERT
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      CODEA,CODE
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,HDUP1320,HDUP9500
          MOVE      ACODE,BFATYPE
          MOVE      TDESC,ATYPDES
          GOTO      HDUP1330
.
HDUP1320  PACK      ATYPDES,DALL,SP20
          DISPLAY   *P26:8,*V2LON,ATYPDES;
          MOVE      SP3,BFATYPE
          MOVE      ONE,ATYPFLG
          GOTO      HDUP1400
.
HDUP1330   MOVE      BFATYPE,SAVATYP
.
          DISPLAY   *P26:8,*V2LON,BFATYPE,*HOFF,*P35:8,ATYPDES;
.
.         INPUT BED TYPE
.
HDUP1400  MOVE      SP3,BFBTYPE
          MOVE      SP3,SAVBTYP
          MOVE      SP20,BTYPDES
          MOVE      ZERO,BTYPFLG
.
          DISPLAY   *P26:9,*EL;
          MOVE      ONE,CNEWDS
          MOVE      TWENTY6,ECOL
          MOVE      NINE,EVERT
          MOVE      CODEBT,CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,HDUP1420,HDUP9500
          MOVE      ACODE,BFBTYPE
          GOTO      HDUP1430
.
HDUP1420  PACK      BTYPDES,DALL,SP20
          DISPLAY   *P26:9,*V2LON,BTYPDES;
          MOVE      SP3,BFBTYPE
          MOVE      ONE,BTYPFLG
          GOTO      HDUP1500
.
.         Check what was entered
.
HDUP1430  MOVE      BFBTYPE,SAVBTYP
          MOVE      TDESC,BTYPDES
.
          DISPLAY   *P26:9,*V2LON,BFBTYPE,*HOFF,*P35:9,BTYPDES;
.
.         Finished Bed Type. Check the option to determine what to do next
.
.         INPUT BED FEE CLAIM CODE 2
.
HDUP1500  MOVE      SP3,BFCLM1
          MOVE      SP20,CLDES1
          BRANCH    CLMFLG,HDUP1520
.
          DISPLAY   *P26:12,*EL;
          MOVE      ONE,CNEWDS
          MOVE      TWENTY6,ECOL
          MOVE      TEN2,EVERT
          MOVE      CODECL,CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,HDUP1520,HDUP9500
          MOVE      TDESC,CLDES1
          MOVE      ACODE,BFCLM1
          GOTO      HDUP1530
.
.         Nothing entered
.
HDUP1520  PACK      CLDES1,DALL,SP10
          DISPLAY   *P26:12,*V2LON,CLDES1;
.
          COMPARE   ONE,CLMFLG
          GOTO      HDUP1600 IF EQUAL
          DISPLAY   *P1:24,*B,*EL,"Must Not be ALL Here. ";
          CALL      HITENTER
          GOTO      HDUP1500
.
.         Validate what was entered
.
HDUP1530  DISPLAY   *P26:12,*V2LON,BFCLM1,*HOFF,*P35:12,CLDES1;
.
.         INPUT HEALTH FUND 2
.
HDUP1600  MOVE      SP6,BFHFUND1
          MOVE      SP8,BFHFTAB1
          MOVE      SP30,FCODDES1
          MOVE      SP30,FTABDES1
.
          BRANCH    FNDFLG,HDUP1620
.
          DISPLAY   *P26:13,*EL,*P26:14,*EL;
          MOVE      TWENTY6,ECOL
          MOVE      TEN3,EVERT
          MOVE      ZERO,CKYIMODE
          CALL      PATFNDKY
          BRANCH    EXIT,HDUP1620,HDUP9500
          MOVE      HCODE,BFHFUND1
          GOTO      HDUP1640
.
.         Nothing entered
.
HDUP1620  PACK      FCODDES1,DALL,SP30
          DISPLAY   *P26:13,*EL,*V2LON,FCODDES1;
          MOVE      SP6,BFHFUND1
.
          COMPARE   ONE,FNDFLG
          GOTO      HDUP1630 IF EQUAL
          DISPLAY   *P1:24,*B,*EL,"Must not be ALL here. ";
          CALL      HITENTER
          GOTO      HDUP1600
.
HDUP1630  PACK      FTABDES1,DALL,SP30
          DISPLAY   *P26:14,*EL,*V2LON,FTABDES1;
          GOTO      KHATYP
.
HDUP1640  MOVE      HFNAME,FCODDES1
          DISPLAY   *P26:13,*EL,*V2LON,BFHFUND1,*HOFF,*P35:13,FCODDES1;
.
.         INPUT HEALTH FUND TABLE 2
.
HDUP1700  MOVE      SP8,BFHFTAB1
          MOVE      SP30,FTABDES1
          MOVE      ZERO,TABFLG1
.
          MOVE      TWENTY6,ECOL
          MOVE      TEN4,EVERT
          MOVE      ZERO,CKYIMODE
          MOVE      BFHFUND1,MHFUND
.
          MATCH     SP6,HCODE
          GOTO      HDUP1740 IF EQUAL
.
          CALL      PATTBLKY
          BRANCH    EXIT,HDUP1730,HDUP9500
          MOVE      HFTABL,BFHFTAB1
          GOTO      HDUP1740
.
HDUP1730  PACK      FTABDES1,DALL,SP20
          DISPLAY   *P26:14,*EL,*V2LON,FTABDES1;
.
.         Check if the table to copy from was entered
.
          COMPARE   ZERO,TABFLG
          GOTO      HDUP1735 IF NOT EQUAL         * No
.
.         to copy the 'from health fund/table' to all tables of the 'to fund'
.
          MOVE      SP8,BFHFTAB1
          MOVE      ONE,TABFLG1
          GOTO      KHATYP
.
.       We are trying to copy all tables of a health fund to another health fund
.         ( No tables entered for the 'from health fund' )
.         therefore the 'to health fund' must be equal to the 'from health fund'
.
HDUP1735   MATCH     BFHFUND,BFHFUND1
          GOTO      KHATYP IF EQUAL
.
          DISPLAY   *P1:24,*B,*EL,"Health Fund to be the Same as ":
                    "Fund Copying From. ";
          CALL      HITENTER
          GOTO      HDUP1600
.
HDUP1740  MOVE      HFNAME,FTABDES1
.
          DISPLAY   *P26:14,*EL,*V2LON,BFHFTAB1,*HOFF,*P35:14,FTABDES1;
.
.         INPUT ADMISSION TYPE 2
.
KHATYP    MOVE      SP3,BFATYPE1
          MOVE      SP20,ATYPDES1
.
          BRANCH    ATYPFLG,HDUP1750
.
          DISPLAY   *P26:15,*EL;
          MOVE      ONE,CNEWDS
          MOVE      TEN5,EVERT
          MOVE      TWENTY6,ECOL
          MOVE      CODEA,CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,HDUP1750,HDUP9500
          MOVE      ACODE,BFATYPE1
          MOVE      TDESC,ATYPDES1
          GOTO      HDUP1760
.
.         Nothing entered
.
HDUP1750  PACK      ATYPDES1,DALL,SP20
          DISPLAY   *P26:15,*V2LON,ATYPDES1;
.
          COMPARE   ONE,ATYPFLG
          GOTO      HDUP1800 IF EQUAL
          DISPLAY   *P1:24,*B,*EL,"Must Not be ALL Here. ";
          CALL      HITENTER
          GOTO      KHATYP
.
.         Validate the input
.
HDUP1760   DISPLAY   *P26:15,*V2LON,BFATYPE1,*HOFF,*P35:15,ATYPDES1;
.
.         INPUT BED TYPE 2
.
HDUP1800  MOVE      SP3,BFBTYPE1
          MOVE      SP20,BTYPDES1
.
          BRANCH    BTYPFLG,HDUP1820
.
          DISPLAY   *P26:16,*EL;
          MOVE      ONE,CNEWDS
          MOVE      TEN6,EVERT
          MOVE      TWENTY6,ECOL
          MOVE      SP3,CKYIDEF3
          MOVE      CODEBT,CODE
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,HDUP1820,HDUP9500
          MOVE      ACODE,BFBTYPE1
          MOVE      TDESC,BTYPDES1
          GOTO      HDUP1830
.
.         Nothing entered
.
HDUP1820  PACK      BTYPDES1,DALL,SP20
          DISPLAY   *P26:16,*EL,*V2LON,BTYPDES1
.
          COMPARE   ONE,BTYPFLG
          GOTO      HDUP1850 IF EQUAL
          DISPLAY   *P1:24,*B,*EL,"Must Not be ALL Here. ";
          CALL      HITENTER
          GOTO      HDUP1800
.
.         Validate the input
.
HDUP1830  DISPLAY   *P26:16,*V2LON,BFBTYPE1,*HOFF,*P35:16,BTYPDES1;
.
HDUP1850  CALL      CONTQST
          BRANCH    CEXIT,HDUP9000,HDUP0000,HDUP9500
.
HDUP9000  CALL      PDUP0000                * Process Health Fund Duplication
          BRANCH    EXIT,HDUP0000
          GOTO      HDUP9600
.
HDUP9500  MOVE      ONE,EXIT
.
HDUP9600  MOVE      SP10,PTCNWBFE
          WRITAB    CONTROLF,HUND10;*11,PTCNWBFE
HDUP9999  RETURN
.
.**************************************************************************
.                    DISD0000                     Called by : ML1400      *
.      Health Fund Duplication                                            *
.**************************************************************************
DISD0000  DISPLAY   *P50:2,*V2LON,"- Health Fund/Table Duplication ";
          DISPLAY   *P1:3,*EF:
                    *P1:4,"    ",*V2LON,*ULON,"Copy From",*HOFF:
                    *P1:5,"    Claim Code         :":
                    *P1:6,"    Health Fund        :":
                    *P1:7,"    Health Fund Table  :":
                    *P1:8,"    CMBS Class         :":
                    *P1:9,"    Bed Type           :":
.
                   *P1:11,"    ",*V2LON,*ULON,"Copy To",*HOFF:
                   *P1:12,"    Claim Code         :":
                   *P1:13,"    Health Fund        :":
                   *P1:14,"    Health Fund Table  :":
                   *P1:15,"    CMBS Class         :":
                   *P1:16,"    Bed Type           :";
.
DISD9999  RETURN
.**************************************************************************
.                    PDUP0000                     Called by : HDUP0000    *
.     Process  Health Fund Duplication                                    *
.**************************************************************************
PDUP0000  MOVE      ZERO,EXIT
.        Scanning of Duplication Update
.
.         The various flags are all zero or one. If they are all one, then
.         this is an error. Test this by multiplying them all together, and
.         checking if the result is still one.
.
          MOVE      CLMFLG,FORM1             * Initialize check
          MULT      FNDFLG,FORM1
          MULT      TABFLG,FORM1
          MULT      ATYPFLG,FORM1
          MULT      BTYPFLG,FORM1
          BRANCH    FORM1,PDUP8000             * Check if flag still a "1"
.
.         Check if there are any changes (ie. make sure we aren't copying
.         a combination to itself).
.
          PACK      DIM23,BFCLM,BFHFUND,BFHFTAB,BFATYPE,BFBTYPE
          PACK      DIM23A,BFCLM1,BFHFUND1,BFHFTAB1,BFATYPE1,BFBTYPE1
.
          MATCH     DIM23,DIM23A
          GOTO      PDUP8100 IF EQUAL
.
          DISPLAY   *P1:24,*EL,"Duplicating",*P33:24,"Claim Code : ":
                    *P60:24,"Scanning : ";
.
.         Start from the beginning of the file
.
          MOVE      SP30,KEY26
          PACK      KEY26,SAVCLM,SP30
          CALL      RSJHB1A1             * new file
.
PDUP3000  CALL      RKJHB1A1             * new file
          BRANCH    OVRCD,PDUP9000
.
          BRANCH    CLMFLG,PDUP3300          * we are doing all claim codes
.
          MATCH     SAVCLM,BFCLM             * check the claim
          GOTO      PDUP9000 IF NOT EQUAL     * finish
.
PDUP3300  PACK      SAVKEY26 WITH BFCLM,BFHFUND,BFHFTAB,BFATYPE,BFBTYPE,BFENDDY
.
          PACK      KEY14 WITH BFHFUND1,ZERO,ZERO,ZERO,ZERO,SP10
          CALL      RDFUND1
.
          MOVE      BFPAT,SAVFPAT
          MOVE      BFHF,SAVFHF
          MOVE      BFNINV,SAVNINV
          MOVE      BFDESC,SAVDESC
.
          DISPLAY   *P71:24,BFCLM;
.
PDUP3500  COMPARE   ZERO,TABFLG1
          GOTO      PDUP3900 IF EQUAL
.
          UNPACK    SAVKEY26 WITH BFCLM,BFHFUND,BFHFTAB,BFATYPE,BFBTYPE,DIM3
          MOVE      DIM3,BFENDDY
.
          CALL      RDKFUND1
          BRANCH    OVRCD,PDUP7500
.
          MATCH     BFHFUND1,HCODE
          GOTO      PDUP7500 IF NOT EQUAL
          MOVE      HFTABL,BFHFTAB1
.
.         Are we doing all claim codes ?
.
PDUP3900  COMPARE   ONE,CLMFLG
          GOTO      PDUP4000 IF EQUAL
.
.         No. Check if this is the claim code we want to change
.
          MATCH     SAVCLM,BFCLM
          GOTO      PDUP3000 IF NOT EQUAL
.
.         Change to the new claim code
.
          MOVE      BFCLM1,BFCLM
.
.         Are we doing all funds ?
.
PDUP4000  COMPARE   ONE,FNDFLG
          GOTO      PDUP5000 IF EQUAL
.
.         No. Check if this is the fund we want to change
.
          MATCH     SAVFUND,BFHFUND
          GOTO      PDUP3000 IF NOT EQUAL
.
.         Change to the new fund
.
          MOVE      BFHFUND1,BFHFUND
.
.         Are we doing all tables ?
.
PDUP5000  COMPARE   ONE,TABFLG1
          GOTO      PDUP5900 IF EQUAL
.
.         No. Check if this is the table we want to change
.
          MATCH     SAVTAB,BFHFTAB
          GOTO      PDUP3000 IF NOT EQUAL
.
.         Change to the new table
.
          MOVE      BFHFTAB1,BFHFTAB
.
.         Are we doing all admission type ?
.
PDUP5900  COMPARE   ONE,ATYPFLG
          GOTO      PDUP5950 IF EQUAL
.
.         No. Check if this is the admission type we want to change
.
          MATCH     SAVATYP,BFATYPE
          GOTO      PDUP3000 IF NOT EQUAL
.
.         Change to the new admission type
.
          MOVE      BFATYPE1,BFATYPE
.
.         Are we doing all bed types ?
.
PDUP5950  COMPARE   ONE,BTYPFLG
          GOTO      PDUP6500 IF EQUAL
.
.         No. Check if this is the bed type we want to change
.
          MATCH     SAVBTYP,BFBTYPE
          GOTO      PDUP3000 IF NOT EQUAL
.
.         Change to the new bed type
.
          MOVE      BFBTYPE1,BFBTYPE
.
.         If we have a health fund, check that it has a valid table
.
PDUP6500  BRANCH    TABFLG1,PDUP6000
.
          MATCH     SP6,BFHFUND
          GOTO      PDUP6000 IF EQUAL
.
          PACK      KEY14 WITH BFHFUND,BFHFTAB,SP10
          CALL      RDFUND1
          BRANCH    OVRCD,PDUP3000
.
.         Post this record copy
.
PDUP6000  PACK      KEY26 WITH BFCLM,BFHFUND,BFHFTAB,BFATYPE:
                               BFBTYPE,BFENDDY
          CALL      RDJHB1A1             * new file
          BRANCH    OVRCD,UPDUPL10
.
          DISPLAY   *P46:24,*V2LON,BFCLM;
.
.         Update with the saved details
.
          MOVE      SAVFPAT,BFPAT
          MOVE      SAVFHF,BFHF
          MOVE      SAVNINV,BFNINV
          MOVE      SAVDESC,BFDESC
.
          CALL      UPJHB1A1             * new file
          GOTO      PDUP7000
.
.         Write a new record with the saved details
.
UPDUPL10  DISPLAY   *P46:24,*V2LON,BFCLM;
.
          MOVE      SAVFPAT,BFPAT
          MOVE      SAVFHF,BFHF
          MOVE      SAVNINV,BFNINV
          MOVE      SAVDESC,BFDESC
          CALL      WRJHB1A1             * write to new file
.
PDUP7000  BRANCH    TABFLG1,PDUP3500
.
.         Reposition on the original record
.
PDUP7500  MOVE      SAVKEY26,KEY26
          CALL      RDJHB1A1             * new file
          GOTO      PDUP3000
.
PDUP8000  DISPLAY   *P1:23,*EF,*P1:24,*B:
                    "At LEAST One of the Fields Must Not be ALL. ";
          CALL      HITENTER
          DISPLAY   *P26:5,*EL,*P26:6,*EL,*P26:7,*EL,*P26:8,*EL,*P26:9,*EL;
          GOTO      HDUP0200
.
PDUP8100  DISPLAY   *P1:23,*EF,*P1:24,*B,"The From and To Sections Cannot ":
                    "be Identical. ";
          CALL      HITENTER
          GOTO      PDUP9100
.
.         Duplication Update has finished
.
PDUP9000  DISPLAY   *P1:24,*EL,*B,"Duplication Update Completed. ";
.
          UNPACK    DIM23,BFCLM,BFHFUND,BFHFTAB,BFATYPE,BFBTYPE
          MOVE      ZERO,EXIT
          DISPLAY   *P26:12,*EL,*P26:13,*EL,*P26:14,*EL,*P26:15,*EL,*P26:16,*EL;
          GOTO      PDUP9999
.
PDUP9100  DISPLAY   *P26:12,*EL,*P26:13,*EL,*P26:14,*EL,*P26:15,*EL,*P26:16,*EL;
          MOVE      ONE,EXIT
.
PDUP9999  RETURN
.**************************************************************************
.                    HDIS0000                     Called by : HDUP0000    *
.**************************************************************************
HDIS0000  DISPLAY   *P26:5,*EL,*P26:6,*EL,*P26:7,*EL,*P26:8,*EL,*P26:9,*EL:
                    *P26:12,*EL,*P26:13,*EL,*P26:14,*EL,*P26:15,*EL,*P26:16,*EL;
HDIS9999  RETURN
.**************************************************************************
.                    UPDT0000                     Called by : ML1200      *
. Process update of new bed fees to the current bed fee file              *
.**************************************************************************
UPDT0000  KEYIN     *P1:24,*EL,"Do You Want to Copy the New Data ":
                               "to the Existing Bed Fee File (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      UPDT1000 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      UPDT9500 IF EQUAL
.
          BEEP
          GOTO      UPDT0000
.
UPDT1000  CALL      UPCF0000               * update jhsbfeaf with newbfeaf
.
UPDT2000  KEYIN     *P1:24,*EL:
                    "Do You Want to Recalculate Charges for Patients (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      UPDT3000 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      UPDT9500 IF EQUAL
.
          BEEP
          GOTO      UPDT2000
.
.       Get the date and time of the update
.
UPDT3000  DISPLAY   *P1:4,*EF,"Update Date :":
                    *P1:6,"Update Time :":
                    *P1:8,"Start processing patients who have been in ":
                    "hospital from this date : ";
.
UPDT3100  MOVE      FOUR,CVERT
          MOVE      TEN5,CCOL
          UNPACK    CURDATE WITH CCENT,CYEAR,CMON,CDAY
.
          CALL      KEYDATE
.
          PACK      UPDDATE WITH CCENT,CYEAR,CMON,CDAY
          REP       " 0",UPDDATE
.
          MATCH     UPDDATE,CURDATE
          GOTO      UPDT3500 IF NOT LESS
.
UPDT3200  DISPLAY   *P1:24,*EL,*B,"Cannot Post Changes into the Future. ";
          CALL      HITENTER
          GOTO      UPDT3000
.
.       Keyin the update time
.
UPDT3500  CLOCK     TIME,CTIMEIS
          UNPACK    CTIMEIS,CHOUR,ANS,CMIN,DIM3
.
          MOVE      TEN5,CCOL
          MOVE      SIX,CVERT
          MOVE      ZERO,CDEFDTE
          MOVE      ZERO,CCANLDTE
          MOVE      ZERO,CHIGHLT
          CALL      KEYTIME
          BRANCH    OVRCD,UPDT3500
          REP       " 0",UPDTIME
          MOVE      ":00",DIM3
          PACK      UPDTIME,CHOUR,COLON,CMIN,DIM3
          REP       " 0",UPDTIME
.
          MATCH     UPDDATE,CURDATE
          GOTO      UPDT5000 IF NOT EQUAL
.
          MATCH     UPDTIME,CTIMEIS
          GOTO      UPDT5000 IF NOT LESS
          GOTO      UPDT3200
.
.       Check that it is okay to continue
.
UPDT5000  CALL      CONTQST
          BRANCH    CEXIT,UPDT6000,UPDT3000,UPDT9500
.
UPDT6000  CALL      UPBF0000                * Update patients bed fees
          CALL      PRTR0000                * Print report from tempfile
          CALL      KILL0000                * Remove tempfile
          MOVE      ZERO,EXIT
          GOTO      UPDT9600
.
UPDT9500  MOVE      ONE,EXIT
.
UPDT9600  MOVE      SP10,PTCNWBFE
          WRITAB    CONTROLF,HUND10;*11,PTCNWBFE
UPDT9999  RETURN

.**************************************************************************
.                    UPCF0000                     Called by :UPDTP0000    *
.   Update the current file (jhsbfeaf) with the new file (newbfeaf)       *
.**************************************************************************
UPCF0000  CALL      DOLD0000                * Clear the old bed fee file data
          CALL      LOLD0000                * Load the old bed fee file with
.                                             the current data
          CALL      DFEE0000                * Delete current bed fee records
.
          CALL      LFEE0000                * Load new fees to current file
.
          CALL      DNEW0000                * clear new bed fee file records
.
UPCF9999  RETURN
+
.         save certain Transfer file variables - called by : NX15
.
SVETRN00   MOVE      TWARD,STWARD
          MOVE      TBED,STBED
          MOVE      TATYPE,STATYPE
          MOVE      TRBTYP,SAVBTYP
          MOVE      TADOCT,STADOCT
          MOVE      TRBEND,STRBEND
          MOVE      TDISC,STDISC
          MOVE      TALLW,STALLW
          MOVE      TEXTRA,STEXTRA
          MOVE      TDEPT,STDEPT            * department
          MOVE      PTTREPNO,STEPNO         * episode number
SVETRN99  RETURN
+
.**************************************************************************
.*                               GDME0000              Called by: ML1600  *
.* Global delete of MBS exploding charges                                 *
.**************************************************************************
.
GDME0000  DISPLAY   *P50:2,*V2LON,"- Global Deletion MBS explosion charges";
          CALL      SMEC0000
          CALL      KMEC0000                 * Keyin details
          BRANCH    EXIT,GDME9500
.
          CALL      DELQST
          BRANCH    CEXIT,GDME8000,GDME0000,GDME9500
.
GDME8000  CALL      DMEC0000                 * Delete MBS exploding charges 
          MOVE      ZERO,EXIT
          GOTO      GDME9999
.
GDME9500  MOVE      ONE,EXIT
.         
GDME9999  RETURN
+
.**************************************************************************
.*                         SMEC0000                                       *
.*  Display screen layout                                                 *
.*  Called by : GDME0000                                                  *
.**************************************************************************
.
SMEC0000  DISPLAY   *P1:4,*EF:
                    *P5:4,"Claim Type     : ":
                    *P5:5,"Admission Type : ":
                    *P5:6,"MBS Code       : " 
.
SMEC9999  RETURN
+
.**************************************************************************
.*                         KMEC0000                                       *
.*  Keyin claim type, admission type, MBS code                            *
.*  Called by : GDME0000                                                  *
.**************************************************************************
.
KMEC0000  CALL      KCLTP000                * Keyin claim type
          BRANCH    EXIT,KMEC9100,KMEC9100
.
KMEC2000  CALL      KADTP000                * Keyin admission type
          BRANCH    EXIT,KMEC0000,KMEC9100          
.
KMEC3000  CALL      KYMBS000                * Keyin MBS code
          BRANCH    EXIT,KMEC2000,KMEC9100    
.
          CALL      VALID000                * Validate the expld charge pars
          BRANCH    EXIT,KMEC3000
.
KMEC9000  MOVE      ZERO,EXIT
          GOTO      KMEC9999
.
KMEC9100  MOVE      ONE,EXIT
KMEC9999  RETURN
+
.**************************************************************************
.*                         KCLTP000                                       *
.*  Keyin claim type                                                      *
.*  Called by : KMEC0000                                                  *
.**************************************************************************
.
KCLTP000  MOVE      "22",ECOL
          MOVE      "4",EVERT
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      "CL",CODE
          MOVE      ONE,CNEWDS
.
          DISPLAY   *PECOL:EVERT,*EL;
          CALL      PATCODKY                * Keyin the claim type
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,KCLTP100,KCLTP920
.                        Spaces   Exitchar
.
          MOVE      ACODE,KCLTYPE
          DISPLAY   *P28:4,TDESC;
          MOVE      ZERO,EXIT
          GOTO      KCLTP999
.
KCLTP100  MOVE      SP3,KCLTYPE
          DISPLAY   *P28:4,*EL;
.
KCLTP910  MOVE      ONE,EXIT
          GOTO      KCLTP999
.
KCLTP920  MOVE      TWO,EXIT
KCLTP999  RETURN
+
.**************************************************************************
.*                         KADTP000                                       *
.*  Keyin admission type                                                  *
.*  Called by : KMEC0000                                                  *
.**************************************************************************
.
KADTP000  MOVE      "22",ECOL
          MOVE      "5",EVERT
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          MOVE      "A ",CODE
          MOVE      ONE,CNEWDS
.
          DISPLAY   *PECOL:EVERT,*EL;
          CALL      PATCODKY                * Keyin the admission type
          MOVE      ZERO,CNEWDS
          BRANCH    EXIT,KADTP100,KADTP920
.                        Spaces   Exitchar
.
          MOVE      ACODE,KATYPE
          DISPLAY   *P28:5,TDESC;
          MOVE      ZERO,EXIT
          GOTO      KADTP999
.
KADTP100  MOVE      SP3,KATYPE
          DISPLAY   *P28:5,*EL;
.
KADTP910  MOVE      ONE,EXIT
          GOTO      KADTP999
.
KADTP920  MOVE      TWO,EXIT
KADTP999  RETURN
+
.**************************************************************************
.*                         KYMBS000                                       *
.*  Keyin MBS code                                                        *
.*  Called by : KMEC0000                                                  *
.**************************************************************************
.
KYMBS000  MOVE      "22",ECOL
          MOVE      "6",EVERT
          MOVE      SP9,CKYIDEF9
          MOVE      ZERO,CKYIMAND
          MOVE      ZERO,RANGE
          DISPLAY   *PECOL:EVERT,*EF;
.
          CALL      PATITMKY                * Keyin the item/MBS code
          BRANCH    EXIT,KYMBS100,KYMBS920
.                        Spaces   Exitchar
.
          MOVE      ITEMNO,KMBSCODE
          DISPLAY   *P22:6,*V2LON,KMBSCODE,*HOFF,*P32:6,IDESC;
          MOVE      ZERO,EXIT
          GOTO      KYMBS999
.
KYMBS100  MOVE      SP9,KMBSCODE
          DISPLAY   *P22:6,*EL;
.
KYMBS910  MOVE      ONE,EXIT
          GOTO      KYMBS999
.
KYMBS920  MOVE      TWO,EXIT
KYMBS999  RETURN
+
.**************************************************************************
.*                         VALID000                                       *
.*  Validate keyins                                                       *
.*  Called by : GDME0000                                                  *
.**************************************************************************
.
VALID000  MATCH     ICLSS,KATYPE
          GOTO      VALID200 IF EQUAL       * Suggested class same as admin type
.
          PACK      KEY5,ANSA,SP1,KATYPE
          CALL      RDCODE1                 * Read the codes file
          BRANCH    OVRCD,VALID700
.
          MATCH     ANSX,TCINDC7
          GOTO      VALID700 IF NOT EQUAL   * Admission type excluded
.
. ----- Check if any exploding charge records -----
.
VALID200  PACK      KEY30,KCLTYPE,KATYPE,SP6,SP6,KMBSCODE,SP70
          CALL      PATECHRD
          BRANCH    EXIT,VALID800
          UNPACK    KEY30,WKECCTYP,WKECATYP,WKECHFND,WKECHGRP,WKECMBSC
.
          CALL      RSPTECH1                * Position on & read the exploding
          CALL      RKPTECH1                  charges file
          BRANCH    OVRCD,VALID800
.
          MATCH     WKECCTYP,PTECCTYP
          GOTO      VALID800 IF NOT EQUAL   * Different claim type, error
.
          MATCH     WKECATYP,PTECATYP
          GOTO      VALID800 IF NOT EQUAL   * Different admission type, error
.
          MATCH     WKECHFND,PTECHFND
          GOTO      VALID800 IF NOT EQUAL   * Different health fund
          MATCH     WKECHGRP,PTECHGRP
          GOTO      VALID800 IF NOT EQUAL   * Different health fund group
.
          MATCH     WKECMBSC,PTECMBSC
          GOTO      VALID800 IF NOT EQUAL   * Different MBS code, error
.
          GOTO      VALID900
.
VALID700  DISPLAY   *P1:24,*EL,*B,"Suggested Classification Different To ":
                    "Admission Type. ";
          CALL      HITENTER
          GOTO      VALID910
.
VALID800  DISPLAY   *P1:24,*EL,*B,"Record Does Not Exist. ";
          CALL      HITENTER
          GOTO      VALID910
.
VALID900  MOVE      ZERO,EXIT
          GOTO      VALID999
.
VALID910  MOVE      ONE,EXIT
VALID999  RETURN
+
.**************************************************************************
.*                         DMEC0000                                       *
.*  Delete batch of MBS explosion charge items                            *
.*  Called by : GDME0000                                                  *
.**************************************************************************
.
DMEC0000  DISPLAY   *P1:24,*EF,*B:
                    "Commencing Global Deletion. ":
                    *P1:24,*EL,"Deleting:",*P40:24,"Scanning:";
. 
DMEC1000  PACK      KEY30,KCLTYPE,KATYPE,KMBSCODE,SP70
          CALL      RSPTECH1                * Position on & read the exploding
          CALL      RKPTECH1                  charges file
          BRANCH    OVRCD,DMEC0000
.
          DISPLAY   *P50:24,*EL,PTECCTYP,PTECATYP,PTECMBSC,PTECUNIQ;          
.
          MATCH     KCLTYPE,PTECCTYP
          GOTO      DMEC9000 IF NOT EQUAL   * Different claim type, exit
.
          MATCH     KATYPE,PTECATYP
          GOTO      DMEC9000 IF NOT EQUAL   * Different admission type, exit
.
          MATCH     KMBSCODE,PTECMBSC
          GOTO      DMEC9000 IF NOT EQUAL   * Different MBS code, exit
.
          DISPLAY   *P10:24,*EL,PTECCTYP,PTECATYP,PTECMBSC,PTECUNIQ:
                                PTECEMCH,PTECOPPC,PTEC1MCF,PTEC2MCF,PTEC3MCF;          
          PACK      KEY30,PTECCTYP,PTECATYP,PTECMBSC,PTECUNIQ,SP70
          CALL      DEPTECH1                * Delete the exploding charge record
          GOTO      DMEC1000
.
DMEC9000  MOVE      ZERO,EXIT
DMEC9999  RETURN
+
.**************************************************************************
.*                               COPY0000              Called by: ML1700  *
.*        Copy class'n from one health fund & MBS code to another         *
.*        Copy class as follows :                                         *
.*        For each MBS item in the entered range for the FROM fund        *
.*        copy the class'n to the same MBS item for the TO fund           *
.*        (This function is from program IBAPMS35.PBL)                    *
.**************************************************************************
.
COPY0000  DISPLAY   *P50:2,*V2LON,"- Copy Health Fund Suggested Class. ";
.
          UNPACK    SP20,CPFRCLMN,CPTOCLMN  * claim codes
          UNPACK    SP20,CPFRFUND,CPTOFUND  * fund codes
          UNPACK    SP20,CPFRITEM,CPTOITEM  * item codes
          MOVE      SP30,DESCFCLM           * from claim desc
          MOVE      SP30,DESCTCLM           * to   claim desc
          MOVE      SP30,DESCFFND           * from fund desc
          MOVE      SP30,DESCTFND           * to   fund desc
          PACK      DESCFITE,SP20,SP20      * from item desc
          PACK      DESCTITE,SP20,SP20      * to   item desc
.
          MOVE      ZERO,CLMFLG
          MOVE      ZERO,FNDFLG
          MOVE      ZERO,MBSFLG
          CALL      DCPY0000                * display the screen
.
. ------- enter from claim code------
.
          MOVE      FOUR,EVERT
          MOVE      "25",ECOL
          MOVE      "CL",CODE
          MOVE      SP70,CKYIDEF3
.
          DISPLAY   *P1:24,*EL,"Type All - for All Claim code";
.
          KEYIN     *PECOL:EVERT,*DV,ACODE:     * default used
                    *PECOL:EVERT,*V2LON,*RV,ACODE:
                    *PECOL:EVERT,*DV,ACODE
          ENDSET    ACODE
          APPEND    SP70,ACODE
          RESET     ACODE
          MATCH     "All",ACODE
          GOTO      COPY1000 IF EQUAL
.
.         CALL      PATCODKY
          CALL      PCODE080                * Check what was entered
          GOTO      COPY1200
.
COPY1000  MOVE      ONE,CLMFLG              * All claim code
.
COPY1200  MOVE      ACODE,CPFRCLMN
          MOVE      TDESC,DESCFCLM
          DISPLAY   *P25:4,*V2LON,CPFRCLMN,*HOFF,*P35:4,DESCFCLM
          DISPLAY   *P1:24,*EL;
.
. ------- enter from health fund ------
.
          DISPLAY   *P1:24,*EL,"Type All - for All Health Fund";
          MOVE      SP70,CODEFUND
          MOVE      FIVE,EVERT              * row
          MOVE      "25",ECOL               * column
          KEYIN     *PECOL:EVERT,*DV,CKYIDEF6:     * default used
                    *PECOL:EVERT,*V2LON,*RV,*NOSTRIP,HCODE:
                    *PECOL:EVERT,*DV,HCODE
          ENDSET    HCODE
          APPEND    SP6,HCODE
          RESET     HCODE
          MATCH     "All",HCODE
          GOTO      COPY2000 IF EQUAL
.
.         CALL      KFND0000                * enter code
          CALL      KFUND080                * Check what's entered
          MOVE      HCODE,CODEFUND
          MOVE      HFNAME,DESCFUND         * set up description
          GOTO      COPY2200
.
COPY2000  MOVE      ONE,FNDFLG
          MOVE      "All",CODEFUND
.
COPY2200  DISPLAY   *P25:5,*V2LON,CODEFUND,*HOFF,*P35:5,DESCFUND
          DISPLAY   *P1:24,*EL;
          MOVE      CODEFUND,CPFRFUND       * starting code
          MOVE      DESCFUND,DESCFFND       * starting description
.
. ------- enter the from MBS code -------
.
          MOVE      SIX,CVERT               * row
          MOVE      "25",CCOL               * col
          CALL      KITM0000                * enter code
.
          DISPLAY   *P25:6,*V2LON,CODEITEM,*HOFF,*P35:6,DESCITEM
          MOVE      CODEITEM,CPFRITEM       * starting code
          MOVE      DESCITEM,DESCFITE       * starting description
.
          BRANCH    CLMFLG,COPY3000         * All claim code
.
. ------- enter to   claim------
.
          MOVE      EIGHT,EVERT
          MOVE      "25",ECOL
          MOVE      "CL",CODE
          MOVE      SP70,CKYIDEF3
          CALL      PATCODKY
.
          MOVE      ACODE,CPTOCLMN
          MOVE      TDESC,DESCTCLM
          DISPLAY   *P25:8,*V2LON,CPTOCLMN,*HOFF,*P35:8,DESCTCLM
.
. ------- enter to   health fund ------
.
COPY3000  BRANCH    FNDFLG,COPY4000
.
          MOVE      SP70,CODEFUND
          MOVE      NINE,CVERT               * row
          MOVE      "25",CCOL               * column
          CALL      KFND0000                * enter code
.
          DISPLAY   *P25:9,*V2LON,CODEFUND,*HOFF,*P35:9,DESCFUND
          MOVE      CODEFUND,CPTOFUND       * ending code
          MOVE      DESCFUND,DESCTFND       * ending description
.
. ------- enter the to MBS code -------
.
COPY4000  BRANCH    MBSFLG,COPY4500
.
          MOVE      TEN,CVERT               * row
          MOVE      "25",CCOL               * col
          CALL      KITM0000                * enter code
.
          MATCH     CPFRITEM,CODEITEM
          GOTO      COPY9200 IF LESS        * finish is before end
.
          DISPLAY   *P25:10,*V2LON,CODEITEM,*HOFF,*P35:10,DESCITEM
          MOVE      CODEITEM,CPTOITEM       * ending code
          MOVE      DESCITEM,DESCTITE       * ending description
.
COPY4500  CALL      CONTQST                 * OK to continue
          BRANCH    CEXIT,COPY4600,COPY0000,COPY9999
.                         Yes      No       Cancel
.
COPY4600  MOVE      CPFRITEM,PTSGMBS
.
. ------- starting at beginning of file ------
.
          PACK      KEY18,SP70
          MATCH     SP70,CPFRCLMN
          GOTO      COPY4800 IF EQUAL       * Blank claim code
          BRANCH    CLMFLG,COPY4800         * All Claim code
.
          PACK      KEY18,CPFRCLMN,SP70
          MATCH     SP70,CPFRFUND
          GOTO      COPY4800 IF EQUAL       * Blank health fund
          BRANCH    FNDFLG,COPY4800         * All health fund
.
          PACK      KEY18,CPFRCLMN,CPFRFUND,SP70
          MATCH     SP70,CPFRITEM
          GOTO      COPY4800 IF EQUAL
          BRANCH    MBSFLG,COPY4800
.
          PACK      KEY18,CPFRCLMN,CPFRFUND,CPFRITEM,SP70
          CALL      RDPTSGC1                * read sugg file for details
          BRANCH    OVRCD,COPY9999
          GOTO      COPY5050
.
COPY4800  CALL      RSPTSGC1                * positional read
COPY5000  CALL      RKPTSGC1                * next read ie first item
          BRANCH    OVRCD,COPY9000          * finished
.
. ------- validation -------
.
          BRANCH    CLMFLG,COPY5010         * All claim code
          MATCH     CPFRCLMN,PTSGCLMN
          GOTO      COPY9000 IF NOT EQUAL
.
COPY5010  BRANCH    FNDFLG,COPY5020         * All health fund
          MATCH     CPFRFUND,PTSGFUND
          GOTO      COPY5000 IF NOT EQUAL
.
COPY5020  BRANCH    MBSFLG,COPY5050         * All mbs
          MATCH     CPFRITEM,PTSGMBS 
          GOTO      COPY5000 IF NOT EQUAL
.
COPY5050  DISPLAY   *P57:24,*V2LON,PTSGFUND,*P70:24,*V2LON,PTSGMBS  *EL;
.
.
. --------------------------------------------------------------
. ------- either write a new record or update an old one -------
. ------- read the sugg. file using the TO fund and the  -------
. ------- MBS item just read in                          -------
. --------------------------------------------------------------
.
          PACK      SAVKEY18,PTSGCLMN,PTSGFUND,PTSGMBS,SP70 * key of TO fields
          MOVE      PTSGCLMN,COPYCLMN
          MOVE      PTSGFUND,COPYFUND
          MOVE      PTSGMBS,COPYITEM
          MOVE      PTSGCLSS,COPYCLSS       * save the classification to copy
.
          IF        CLMFLG=0
            MOVE      CPTOCLMN,COPYCLMN
          ENDIF
          IF        FNDFLG=0
            MOVE      CPTOFUND,COPYFUND
          ENDIF
          IF        MBSFLG=0
            MOVE      CPTOITEM,COPYITEM
          ENDIF
.
          PACK      KEY18,COPYCLMN,COPYFUND,COPYITEM,SP70
          CALL      RDPTSGC1                * read suggestions file
          BRANCH    OVRCD,COPY5300          * write a new record
.
. ------- update existing record -------
.
COPY5200  MOVE      COPYCLSS,PTSGCLSS       * set up the new classification
          CALL      UPPTSGC1                * update the record
          DISPLAY   *P78:24,*V2LON,"*";
          GOTO      COPY5500
.
. ------- write a new record -------
.
COPY5300  UNPACK    KEY18,PTSGCLMN,PTSGFUND,PTSGMBS
          MOVE      COPYCLSS,PTSGCLSS       * the classification
          MOVE      SP20,PTSGSPAR           * spare variable
          CALL      WRPTSGC1                * write new record
          DISPLAY   *P78:24,*V2LON,"**";
.
COPY5500  MOVE      SAVKEY18,KEY18
          CALL      RDPTSGC1                * read that record
          GOTO      COPY5000                * copy next record if applicable
.
. ------- finished -------
.
COPY9000  DISPLAY   *P1:24,*B,"Copying has been completed.  ",*EL;
          MOVE      ZERO,EXIT
          GOTO      COPY9999
.
. ------- ERROR : ending codes before starting codes -------
.
COPY9100  DISPLAY   *P1:24,*B,"Copying to the same code is pointless. ",*EL;
          CALL      HITENTER
          GOTO      COPY9999
.
COPY9200  DISPLAY   *P1:24,*B,"Finishing MBS code should be after Starting ":
                    "Code.  ",*EL;
          CALL      HITENTER
          GOTO      COPY9999
.
COPY9999  RETURN
+
.*********************************************************************
.*                  KFND0000                    Called by : COPY0000 *
.*        Enter the Health Fund Code                                 *
.*        Para's  : CCOL & CVERT  column and row for input           *
.*        Returns : CODEFUND      the code entered                   *
.*                  DESCFUND      the description                    *
.*********************************************************************
.
KFND0000  CALL      CLRV0000                * clear all variables
          MOVE      CCOL,ECOL               * save the col
          MOVE      CVERT,EVERT             * save the row
.
          MOVE      ONE,CNEWDS
          MOVE      SP6,CKYIDEF6
          MOVE      ZERO,CKYIMAND
          CALL      PATFNDKY
          BRANCH    EXIT,KFND9500,KFND9500
          MOVE      HCODE,CODEFUND
.
          MOVE      HFNAME,DESCFUND         * set up description
          ADD       TEN,ECOL
          DISPLAY   *PECOL:EVERT,DESCFUND   * display description
.
KFND9000  MOVE      ZERO,EXIT
          GOTO      KFND9999
.
KFND9500  MOVE      ONE,EXIT
.
KFND9999  RETURN
+
.*********************************************************************
.*                  DCPY0000                    Called by : COPY0000 *
.*        Display the screen for the copy option                     *
.*********************************************************************
.
DCPY0000  DISPLAY   *P1:3,*EF:
                    *P5:4,"From Claim Code   : ",*V2LON,CPFRCLMN,*HOFF:
                    *P35:4,DESCFCLM:
                    *P5:5,"     Health Fund  : ",*V2LON,CPFRFUND,*HOFF:
                    *P35:5,DESCFFND:
                    *P5:6,"        MBS Item  : ",*V2LON,CPFRITEM,*HOFF:
                    *P35:6,DESCFITE:
                    *P5:8,"To   Claim Code   : ",*V2LON,CPTOCLMN,*HOFF:
                    *P35:8,DESCTCLM:
                    *P5:9,"     Health Fund  : ",*V2LON,CPTOFUND,*HOFF:
                    *P35:9,DESCTFND:
                    *P5:10,"       MBS Item  : ",*V2LON,CPTOITEM,*HOFF:
                    *P35:10,DESCTITE
.
DCPY9999  RETURN
+
.*********************************************************************
.*                  KITM0000                    Called by : COPY0000 *
.*        Enter the MBS item code                                    *
.*        Para's  : CCOL & CVERT  column and row for input           *
.*        Returns : CODEITEM      the item code                      *
.*                  DESCITEM      the item description               *
.*********************************************************************
.
KITM0000  MOVE      CCOL,ECOL               * save the col
          MOVE      CVERT,EVERT             * save the row
          MOVE      ONE,CNEWDS
          MOVE      SP9,CKYIDEF9
          MOVE      ZERO,CKYIMAND
          MOVE      ZERO,RANGE
          KEYIN     *PECOL:EVERT,*DV,ITEMNO:     * default used
                    *PECOL:EVERT,*V2LON,*RV,ITEMNO:
                    *PECOL:EVERT,*DV,ITEMNO
          ENDSET    ITEMNO
          APPEND    SP9,ITEMNO
          RESET     ITEMNO
          MATCH     SP70,ITEMNO
          GOTO      KITM1000 IF EQUAL
          MATCH     "All",ITEMNO
          GOTO      KITM1000 IF EQUAL
.
.         CALL      PATITMKY
          CALL      PTITKY20
          GOTO      KITM2000
.
KITM1000  MOVE      ONE,MBSFLG              * All MBS
.
KITM2000  BRANCH    EXIT,KITM9500,KITM9500
          MOVE      ITEMNO,CODEITEM
.
          MOVE      IDESC,DESCITEM          * set up description
          ADD       TEN,ECOL
          DISPLAY   *PECOL:EVERT,DESCITEM         * display description
.
KITM9000  MOVE      ZERO,EXIT
          GOTO      KITM9999
.
KITM9500  MOVE      ONE,EXIT
.
KITM9999  RETURN
+
.**************************************************************************
.*                               CNTF0000              Called by: ML2200  *
.* Create new Theatre Fee file. This will deletes all record from the new *
.* Theatre Fee file and load with current file records.                   *
.**************************************************************************
.
CNTF0000  KEYIN     *P1:24,*EL:
                    "Are You Sure You Want to Overwrite the New File (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      CNTF1000 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      CNTF9500 IF EQUAL
.
          BEEP
          GOTO      CNTF0000
.
CNTF1000  KEYIN     *P1:24,*EL,"Do You Want to Start with a Copy of the":
                    " Current Data (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      CNTF9000 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      CNTF2000 IF EQUAL
.
          BEEP
          GOTO      CNTF1000
.
CNTF2000  KEYIN     *P1:24,*EL,"You Will Lose All New Theatre Fees When":
                    " you Update.  Are You Sure (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,DIM1;
.
          REP       UPPLOW,DIM1
          MATCH     ANSY,DIM1
          GOTO      CNTF8000 IF EQUAL
.
          MATCH     ANSN,DIM1
          GOTO      CNTF9500 IF EQUAL
.
          BEEP
          GOTO      CNTF2000
.
CNTF8000  CALL      DNTF0000                * Delete all record from new file
          MOVE      ZERO,EXIT               * Do not load current file date
          GOTO      CNTF9600
.
CNTF9000  CALL      DNTF0000                * Delete all records from new file
          CALL      LNTF0000                * Load current record to new file
.
          MOVE      ZERO,EXIT
          GOTO      CNTF9600
.
CNTF9500  MOVE      ONE,EXIT
.
CNTF9600  MOVE      SP10,PTCNWTFE
          WRITAB    CONTROLF,HUND10;*1,PTCNWTFE
.
CNTF9999  RETURN
+
.**************************************************************************
.*                               DNTF0000              Called by: CNTF0000*
.* Delete all of the new Theatre Fee file records                         *
.**************************************************************************
DNTF0000  PACK      KEY23,SP70
          CALL      RSJHT1A1
DNTF1000  CALL      RKJHT1A1
          BRANCH    OVRCD,DNTF9999         * End of new file
.
          PACK      KEY23,TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS,SP70
          CALL      DEJHT1A1                * Delete from new file
.
          GOTO      DNTF0000
.
DNTF9999  RETURN
+
.**************************************************************************
.*                               LNTF0000              Called by: CNTF0000*
.* Load current Theatre Fee data to the new Theatre Fee file              *
.**************************************************************************
LNTF0000  PACK      KEY23,SP70
          CALL      RSJHTFE1
LNTF1000  CALL      RKJHTFE1
          BRANCH    OVRCD,LNTF9999         * End of current file
.
          PACK      KEY23,TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS,SP70
          CALL      WRJHT1A1               * Write to new file
.
          GOTO      LNTF1000
.
LNTF9999  RETURN
+
.**************************************************************************
.*                               UCTF0000              Called by: ML2300  *
.*    Update New to Current Theatre Fee File.                                *
.**************************************************************************
UCTF0000  KEYIN     *P1:24,*EL,"Are you sure you want to copy the new data ":
                    "over the old (",*V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF:
                    ") ? ",*V2LON,ANS;
.
          MOVE      ZERO,EXIT
          MATCH     ANSY,ANS
          GOTO      UCTF1000 IF EQUAL
.
          MOVE      ONE,EXIT
          MATCH     ANSN,ANS
          GOTO      UCTF9500 IF EQUAL
          BEEP
          GOTO      UCTF0000
.
UCTF1000  DISPLAY   *P1:24,*EL,*V2LON:
                    "** Making copy of current file and copying new data":
                    " over old... ",*BLINKON,"Please wait",*HOFF,*V2LON," **";
.
          CALL      KOTF0000                * remove all records from oldtfeaf
.
.-------  Loop through current Theatre Fee file and write to old file ------
.
          PACK      KEY23,SP70
          CALL      RSJHTFE1
UCTF2000  CALL      RKJHTFE1
          BRANCH    OVRCD,UCTF2500         * End of current file
.
          PACK      KEY23,TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS
          CALL      WRJHT2A1               * Write to old file
.
          GOTO      UCTF2000
.
UCTF2500  CALL      KCTF0000                * remove all records from pattfeef
.
.-------  Loop through new Theatre Fee file and write to current file ------
.
          PACK      KEY23,SP70
          CALL      RSJHT1A1
UCTF3000  CALL      RKJHT1A1
          BRANCH    OVRCD,UCTF9000         * End of new file
.
          PACK      KEY23,TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS
          CALL      WRJHTFE1               * Write to current file
.
          GOTO      UCTF3000
.
UCTF9000  CALL      KNTF0000                     * Delete all new file records
.
UCTF9500  MOVE      SP10,PTCNWTFE
          WRITAB    CONTROLF,HUND10;*1,PTCNWTFE
          GOTO      UCTF9999
.
UCTF9800  MOVE      "Old file(oldtfeaf) doesn't exist. ",DISPMSG
          CALL      MESSAGE1
UCTF9999  RETURN
+
.*************************************************************************
.* KCTF0000  : remove all records from pattfeef                          *
.*************************************************************************
KCTF0000  PACK      KEY23,SP70
          CALL      RSJHTFE1
          CALL      RKJHTFE1
          BRANCH    OVRCD,KCTF9999
.
          PACK      KEY23,TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS,SP70
          CALL      DEJHTFE1
.
          GOTO      KCTF0000
.
KCTF9999  RETURN
+
.*************************************************************************
.* KOTF0000  : remove all records from oldtfeaf                          *
.*************************************************************************
KOTF0000  PACK      KEY23,SP70
          CALL      RSJHT2A1
          CALL      RKJHT2A1
          BRANCH    OVRCD,KOTF9999
.
          PACK      KEY23,TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS,SP70
          CALL      DEJHT2A1
.
          GOTO      KOTF0000
.
KOTF9999  RETURN
+
.*************************************************************************
.* KOTF0000  : remove all records from newtfeef                          *
.*************************************************************************
KNTF0000  PACK      KEY23,SP70
          CALL      RSJHT1A1
          CALL      RKJHT1A1
          BRANCH    OVRCD,KNTF9999
.
          PACK      KEY23,TFCLM,TFHFUND,TFHFTAB,TFDAYC,TFENDMBS,SP70
          CALL      DEJHT1A1
.
          GOTO      KNTF0000
.
KNTF9999  RETURN
+
.**************************************************************************
.*                               CLVR0000                                 *
.*        Clear Variables                                                 *
.**************************************************************************
CLVR0000  MOVE      ZERO,ADDFLAG
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CSMFLG
          MOVE      ZERO,CLMFLG
          MOVE      ZERO,FNDFLG
          MOVE      ZERO,DUPLFLG
.
CLVR9999  RETURN
.**************************************************************************
.*                               DISP0000              Called by: ML0000  *
.*                                                                        *
.**************************************************************************
DISP0000  DISPLAY   *P1:5,*EF:
                    *P5:5,"Claim Code            : ":
                    *P5:6,"Health Fund           : ":
                    *P5:8,"Contract ID           : ":
                    *P1:14,*V2LON,"Copy To   - ":
                    *P5:15,"Claim Code            : ":
                    *P5:16,"Health Fund           : ":
                    *P5:18,"Contract ID           : ":
                    *P60:20,*V2LON,"\  ",*HOFF,"to exit"
.
DISP9999  RETURN
+
.**************************************************************************
.*                              HMTX0000                                  *
.*        Claim code/health fund Contract ID duplication                  *
.**************************************************************************
HMTX0000  CALL      CLPMSCMT               * Clear PMSCMTFD variables
          CALL      CLVR0000               * clear variables
          DISPLAY   *P1:4,*EF,*V2LON,"Copy From - "
.
          CALL      DISP0000                * Display Duplication option screen
          CALL      KYFL0000                * Duplication option
          BRANCH    EXIT,HMTX0000,HMTX9999
.
          CALL      DUPL0000                * Claim Code/H.F. Duplication
.
          IF        DUPLFLG = ONE
            DISPLAY   *P1:24,*EL,"Record duplication completed. ";
          ELSE
            DISPLAY   *P1:24,*EL,*V2LON," ** No records updated ** ";
          ENDIF
          CALL      HITENTER
          GOTO      HMTX9999
.
HMTX9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** No new file. File must be created first ** ";
          CALL      HITENTER
          NORETURN
          GOTO      HMTX9999
.
HMTX9500  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "No record exists. ";
          CALL      HITENTER
          GOTO      HMTX0000
.
HMTX9999  RETURN
+
.******************************************************************************
.*                                 KYFL0000                                   *
.*                              Duplication option                            *
.******************************************************************************
.         Keyin fields copying from
.
KYFL0000  CALL      CLPMSCMT                * Clear PMSCMTFD variables
          CALL      CLVR0000                * Clear variables
          MOVE      ZERO,CPTOFLG            * Flag for keyin fields copying to
          MOVE      "5",EVERT
          CALL      KCLM0000                * Keyin claim code
          MOVE      PMCCCCOD,FCCOD
          BRANCH    EXIT,KYFL1000,KYFL9999
.
KYFL1000  MOVE      "6",EVERT
          DISPLAY   *PECOL:7,*EL;
          MOVE      ZERO,FNDFLG
          CALL      FNDK0000                * Keyin health fund
          MOVE      PMCCHFUN,FHFUN
          MOVE      SP10,PMCCHFTY
          MOVE      SP10,FHFTY
          IF        EXIT = 1
            MOVE      ONE,FNDFLG            * All Health fund
          ENDIF
          BRANCH    EXIT,KYFL3000,KYFL9999,KYFL3000
.
KYFL3000  MOVE      ZERO,EXIT
          MOVE      "8",EVERT
          CALL      KCNT0000                * Keyin Contract ID
          PACK      FRCNTR,CONTRCD,SP70
.
.         Keyin fields copying to
.
          MOVE      ONE,CPTOFLG
          MOVE      "15",EVERT
          CALL      KCLM0000                * Keyin claim code
          MOVE      PMCCCCOD,TCCOD
          BRANCH    EXIT,KYFL5000,KYFL9999
.
KYFL5000  MOVE      "16",EVERT
          CALL      FNDK0000                * Keyin health fund
          MOVE      PMCCHFUN,THFUN
          BRANCH    EXIT,KYFL7000,KYFL9999,KYFL7000
.
KYFL7000  MOVE      ZERO,EXIT
          MOVE      "18",EVERT
          CALL      KCNT0000                * Keyin Contract ID
          PACK      TOCNTR,CONTRCD,SP70
.
KYFL8000  
          PACK      KEY15,FCCOD,FHFUN,FRCNTR,SP20
          PACK      SAVKEY15,TCCOD,THFUN,TOCNTR,SP70
          MOVE      ZERO,EXIT
          MATCH     KEY15,SAVKEY15           * not copying to same combination
          GOTO      KYFL8400 IF EQUAL        * error..
.
          CALL      CONTQST
          MOVE      ONE,EXIT
          BRANCH    CEXIT,KYFL9000,KYFL8200,KYFL9999
.
KYFL8200  CALL      DISP0000
          MOVE      ZERO,EXIT
          GOTO      KYFL0000
.
KYFL8400  DISPLAY   *P1:24,*EL,*V2LON,"** The From and To sections can not ":
                    "be identical ** ";
          CALL      HITENTER
          MOVE      ONE,EXIT
          GOTO      KYFL9999
.
KYFL9000  MOVE      ZERO,EXIT
KYFL9999  RETURN
.
+
.******************************************************************************
.*                             DUPL0000                                       *
.*                       Processing duplication  for Lumpsum                  *
.******************************************************************************
DUPL0000  DISPLAY   *P1:24,*EL,*V2LON,"** ",*BLINKON,"Duplicating ",*HOFF:
                    *V2LON," ** ",*HOFF,*P33:24,"Claim Code : ",*P60:24:
                    "Scanning : ";
.
          PACK      KEY34,FRCNTR,SP70
          CALL      RSPMCMT2
.
DUPL1000  CALL      RKPMCMT2
          BRANCH    OVRCD,DUPL9999
.
          MATCH     PMCCCONT,FRCNTR
          GOTO      DUPL9999 IF NOT EQUAL
.
          BRANCH    CLMFLG,DUPL2000          * all claim codes
          MATCH     FCCOD,PMCCCCOD           * check the claim
          GOTO      DUPL9999 IF NOT EQUAL    * Not same claim code
.
DUPL2000  BRANCH    FNDFLG,DUPL2400
          MATCH     FHFUN,PMCCHFUN           * check the health fund
          GOTO      DUPL1000 IF NOT EQUAL    * Not same claim code
.
DUPL2400  PACK      SAVKEY34,PMCCCONT,PMCCCCOD,PMCCHFUN,PMCCHFTY:
                             PMCCTYPE,PMCCCMCD,DPMCCCNT,SP70
.
          CALL      SCMT0000                 * save casmix matix record
.
          DISPLAY   *P71:24,PMCCCCOD;
.
.         Check if we are doing a single claim code only
.
          MOVE      TOCNTR,PMCCCONT      * Contract ID
.
          IF        CLMFLG = 0
            MATCH     FCCOD,PMCCCCOD     * check if this is the claim code
            GOTO      DUPL1000 IF NOT EQUAL * no.
            MOVE      TCCOD,PMCCCCOD
          ENDIF
.
.         Check if we are doing a single health fund only
.
          IF        FNDFLG = 0
            MATCH     FHFUN,PMCCHFUN     * check if this is the health fund
            GOTO      DUPL1000 IF NOT EQUAL * No.
            MOVE      THFUN,PMCCHFUN
          ENDIF
.
          DISPLAY   *P46:24,*V2LON,PMCCCCOD;
.
          PACK      KEY34,PMCCCONT,PMCCCCOD,PMCCHFUN,PMCCHFTY:
                          PMCCTYPE,PMCCCMCD,DPMCCCNT,SP70
          CALL      RDPMCMT2
.
          MOVE      SAVPODY,PMCCPODY
          MOVE      SAVNPDY,PMCCNPDY
          MOVE      SAVHBPT,PMCCHBPT
          MOVE      SAVCCDY,PMCCCCDY
          MOVE      SAVMIND,PMCCMIND
          CALL      REST1000                * Restore from matrix save area
.
          IF        OVRCD = 1
            CALL      WRPMCMT2
          ELSE
            CALL      UPPMCMT2
          ENDIF
          MOVE      ONE,DUPLFLG
.
          MOVE      SAVKEY34,KEY34
          CALL      RDPMCMT2                 * Reposition on the original record
          GOTO      DUPL1000
.
DUPL9999  RETURN
.
.**************************************************************************
REST1000  MOVE      SAVFTDG,PMCCFTDG
          MOVE      SAVDDRG,PMCCDDRG
          MOVE      SAVFTCM,PMCCFTCM
          MOVE      SAVPCMF,PMCCPCMF
          MOVE      SAVPCMT,PMCCPCMT
          MOVE      SAVFTSC,PMCCFTSC
          MOVE      SAVSCMF,PMCCSCMF
          MOVE      SAVSCMT,PMCCSCMT
          MOVE      SAVFTTC,PMCCFTTC
          MOVE      SAVTCMF,PMCCTCMF
          MOVE      SAVTCMT,PMCCTCMT
          MOVE      SAVFTDS,PMCCFTDS
          MOVE      SAVDSTA,PMCCDSTA
          MOVE      SAVDST2,PMCCDST2
          MOVE      SAVDST3,PMCCDST3
          MOVE      SAVDST4,PMCCDST4
          MOVE      SAVDST5,PMCCDST5
          MOVE      SAVFTDD,PMCCFTDD
          MOVE      SAVDDES,PMCCDDES
          MOVE      SAVDDE2,PMCCDDE2
          MOVE      SAVDDE3,PMCCDDE3
          MOVE      SAVDDE4,PMCCDDE4
          MOVE      SAVDDE5,PMCCDDE5
          MOVE      SAVFTAS,PMCCFTAS
          MOVE      SAVASRC,PMCCASRC
          MOVE      SAVASR2,PMCCASR2
          MOVE      SAVASR3,PMCCASR3
          MOVE      SAVASR4,PMCCASR4
          MOVE      SAVASR5,PMCCASR5
.
          MOVE      SAVFT1C,PMCCFT1C
          MOVE      SAVPICD,PMCCPICD
          MOVE      SAVPIC2,PMCCPIC2
          MOVE      SAVPIC3,PMCCPIC3
          MOVE      SAVPIC4,PMCCPIC4
          MOVE      SAVPIC5,PMCCPIC5
.
          MOVE      SAVFTAT,PMCCFTAT
          MOVE      SAVATYP,PMCCATYP
          MOVE      SAVATY2,PMCCATY2
          MOVE      SAVATY3,PMCCATY3
          MOVE      SAVATY4,PMCCATY4
          MOVE      SAVATY5,PMCCATY5
.
          MOVE      SAVFTAU,PMCCFTAU
          MOVE      SAVAUDF,PMCCAUDF
          MOVE      SAVAUD2,PMCCAUD2
          MOVE      SAVAUD3,PMCCAUD3
          MOVE      SAVAUD4,PMCCAUD4
          MOVE      SAVAUD5,PMCCAUD5
.
          MOVE      SAVFTDU,PMCCFTDU
          MOVE      SAVDUDF,PMCCDUDF
          MOVE      SAVDUD2,PMCCDUD2
          MOVE      SAVDUD3,PMCCDUD3
          MOVE      SAVDUD4,PMCCDUD4
          MOVE      SAVDUD5,PMCCDUD5
.
REST9999  RETURN
+
.**************************************************************************
.*                               SCMT0000              Called by: MATR0000*
.*        Save Casemix Matrix Record                                      *
.**************************************************************************
SCMT0000  MOVE      PMCCCCOD,SAVCCOD
          MOVE      PMCCHFUN,SAVHFUN
          MOVE      PMCCHFTY,SAVHFTY
          MOVE      PMCCTYPE,SAVTYPE
          MOVE      PMCCCMCD,SAVCMCD
          MOVE      PMCCCNTR,SAVCNTR
          MOVE      PMCCPODY,SAVPODY
          MOVE      PMCCNPDY,SAVNPDY
          MOVE      PMCCHBPT,SAVHBPT
          MOVE      PMCCCCDY,SAVCCDY
          MOVE      PMCCMIND,SAVMIND
          MOVE      PMCCFTDG,SAVFTDG
          MOVE      PMCCDDRG,SAVDDRG
          MOVE      PMCCFTCM,SAVFTCM
          MOVE      PMCCPCMF,SAVPCMF
          MOVE      PMCCPCMT,SAVPCMT
          MOVE      PMCCFTSC,SAVFTSC
          MOVE      PMCCSCMF,SAVSCMF
          MOVE      PMCCSCMT,SAVSCMT
          MOVE      PMCCFTTC,SAVFTTC
          MOVE      PMCCTCMF,SAVTCMF
          MOVE      PMCCTCMT,SAVTCMT
          MOVE      PMCCFTDS,SAVFTDS
          MOVE      PMCCDSTA,SAVDSTA
          MOVE      PMCCDST2,SAVDST2
          MOVE      PMCCDST3,SAVDST3
          MOVE      PMCCDST4,SAVDST4
          MOVE      PMCCDST5,SAVDST5
          MOVE      PMCCFTDD,SAVFTDD
          MOVE      PMCCDDES,SAVDDES
          MOVE      PMCCDDE2,SAVDDE2
          MOVE      PMCCDDE3,SAVDDE3
          MOVE      PMCCDDE4,SAVDDE4
          MOVE      PMCCDDE5,SAVDDE5
          MOVE      PMCCFTAS,SAVFTAS
          MOVE      PMCCASRC,SAVASRC
          MOVE      PMCCASR2,SAVASR2
          MOVE      PMCCASR3,SAVASR3
          MOVE      PMCCASR4,SAVASR4
          MOVE      PMCCASR5,SAVASR5
.
          MOVE      PMCCFT1C,SAVFT1C
          MOVE      PMCCPICD,SAVPICD
          MOVE      PMCCPIC2,SAVPIC2
          MOVE      PMCCPIC3,SAVPIC3
          MOVE      PMCCPIC4,SAVPIC4
          MOVE      PMCCPIC5,SAVPIC5

          MOVE      PMCCFTAT,SAVFTAT
          MOVE      PMCCATYP,SAVATYP
          MOVE      PMCCATY2,SAVATY2
          MOVE      PMCCATY3,SAVATY3
          MOVE      PMCCATY4,SAVATY4
          MOVE      PMCCATY5,SAVATY5
.
          MOVE      PMCCFTAU,SAVFTAU
          MOVE      PMCCAUDF,SAVAUDF
          MOVE      PMCCAUD2,SAVAUD2
          MOVE      PMCCAUD3,SAVAUD3
          MOVE      PMCCAUD4,SAVAUD4
          MOVE      PMCCAUD5,SAVAUD5
.
          MOVE      PMCCFTDU,SAVFTDU
          MOVE      PMCCDUDF,SAVDUDF
          MOVE      PMCCDUD2,SAVDUD2
          MOVE      PMCCDUD3,SAVDUD3
          MOVE      PMCCDUD4,SAVDUD4
          MOVE      PMCCDUD5,SAVDUD5
.
SCMT9999  RETURN
+
.******************************************************************************
.*                         KCLM0000                                           *
.*                         Keyin claim code                                   *
.******************************************************************************
KCLM0000  MOVE      "29",ECOL               * keyin position
          MOVE      "36",ECOL1              * Display description position
          MOVE      ZERO,EXIT
.
          IF        CPTOFLG = 1 & CLMFLG = 1
            DISPLAY   *PECOL1:EVERT,*EL,*V2LON,"All";
            GOTO      KCLM9999
          ENDIF
.
          MOVE      SP3,ACODE
          MOVE      SP3,CKYIDEF3
          MOVE      "CL",CODE
          DISPLAY   *PECOL:EVERT,*EL;
          CALL      PATCODKY                * keyin code
          BRANCH    EXIT,KCLM1000,KCLM9999  * Nothing,exit entered
          MOVE      ACODE,PMCCCCOD
.
KCLM1000  IF        COPTION = 21 | COPTION = 20
            IF        EXIT = 1
              IF        CLMFLG = 0 & CPTOFLG = 1
                DISPLAY   *P1:24,*EL,*B,*V2LON,"** Must not be ALL here ** ";
                CALL      HITENTER
                GOTO      KCLM0000
              ELSE
                DISPLAY   *PECOL1:EVERT,*V2LON,"All";
              ENDIF
.
              IF        CPTOFLG = 0
                MOVE      ONE,CLMFLG            * Flag for all claim code
              ENDIF
              GOTO      KCLM9999
            ENDIF
          ENDIF
          DISPLAY   *PECOL1:EVERT,*EL,*V2LON,TDESC;
          GOTO      KCLM9999
.
KCLM9500  MOVE      ONE,EXIT
.
KCLM9999  RETURN
.
.******************************************************************************
.*                         FNDK0000                                           *
.*                         Keyin Health fund                                  *
.******************************************************************************
FNDK0000  MOVE      SP6,PMCCHFUN
          MOVE      SP10,PMCCHFTY
          MOVE      "29",ECOL
          MOVE      "36",ECOL1
.
          IF        CPTOFLG = 1 & FNDFLG = 1
            DISPLAY   *PECOL1:EVERT,*EL,*V2LON,"All";
            ADD       ONE,EVERT
            DISPLAY   *PECOL1:EVERT,*EL,*V2LON,"All";
            GOTO      FNDK9999
          ENDIF
.
          MOVE      ZERO,CKYIMAND
          MOVE      SP20,HFNAME
          DISPLAY   *PECOL:EVERT,*EL;
          CALL      PATFNDKY
          PACK      PMCCHFUN,HCODE
          BRANCH    EXIT,FNDK9000:          * Nothing entered
                         FNDK9999           * Exitchar entered
.
FNDK9000  IF        COPTION = 21 | COPTION =20
.
.         for duplication option, check if spaces or eos entered
.
            IF        EXIT = 1
              IF        CPTOFLG = 0
                MOVE      ONE,FNDFLG       * flag for all health fund
                DISPLAY   *PECOL1:EVERT,*V2LON,"All";
                ADD       ONE,EVERT
                DISPLAY   *PECOL1:EVERT,*V2LON,"All";
                GOTO      FNDK9999
              ENDIF
.
.         if the 'copy from' hf was not ALL, the 'copy to' hf can not be ALL
.
              IF        CPTOFLG = 1 & FNDFLG = 0
                DISPLAY   *P1:24,*EL,*B,*V2LON,"** Must not be ALL here ** ";
                CALL      HITENTER
                GOTO      FNDK0000
              ENDIF
            ENDIF
            DISPLAY   *PECOL1:EVERT,*V2LON,HFNAME;
          ENDIF
.
FNDK9200  DISPLAY   *PECOL1:EVERT,*V2LON,HFNAME;
FNDK9999  RETURN
.
.**************************************************************************
.         Keyin Contract ID
.**************************************************************************
KCNT0000
          MOVE      "29",ECOL               * keyin position
          MOVE      "36",ECOL1              * display description position
          MOVE      ZERO,EXIT
          PACK      CONTRCD,SP70
          KEYIN     *P29:EVERT,*EL,*V2LON,CONTRCD,*HOFF
          ENDSET    CONTRCD
          APPEND    SP70,CONTRCD
          RESET     CONTRCD
.
          MOVE      CONTRCD,KEY6
          CALL      RDPMCID1
          BRANCH    OVRCD,KCNT9999
.
          DISPLAY   *P29:EVERT,*V2LON,PMCICNTR,*PECOL1:EVERT,*EL,PMCIDESC;
.
KCNT9999  RETURN
+
.**************************************************************************
.*                               NZPF0000              Called by: ML3200  *
.* Create new NZ Private Theatre Fee file. This will deletes all record   *
.* from the new NZ Private Theatre Fee file and load with current         *
.* file records.                                                          *
.**************************************************************************
.
CNZT0000  KEYIN     *P1:24,*EL:
                    "Are You Sure You Want to Overwrite the New File (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      CNZT1000 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      CNZT9500 IF EQUAL
.
          BEEP
          GOTO      CNZT0000
.
CNZT1000  KEYIN     *P1:24,*EL,"Do You Want to Start with a Copy of the":
                    " Current Data (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      CNZT9000 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      CNZT2000 IF EQUAL
.
          BEEP
          GOTO      CNZT1000
.
CNZT2000  KEYIN     *P1:24,*EL,"You Will Lose All New Theatre Fees When":
                    " you Update.  Are You Sure (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,DIM1;
.
          REP       UPPLOW,DIM1
          MATCH     ANSY,DIM1
          GOTO      CNZT8000 IF EQUAL
.
          MATCH     ANSN,DIM1
          GOTO      CNZT9500 IF EQUAL
.
          BEEP
          GOTO      CNZT2000
.
CNZT8000  CALL      DNZT0000                * Delete all record from new file
          MOVE      ZERO,EXIT               * Do not load current file date
          GOTO      CNZT9600
.
CNZT9000  CALL      DNZT0000                * Delete all records from new file
          CALL      LNZT0000                * Load current record to new file
.
          MOVE      ZERO,EXIT
          GOTO      CNZT9600
.
CNZT9500  MOVE      ONE,EXIT
.
CNZT9600  MOVE      SP10,PTCNWTFE
          WRITAB    CONTROLF,HUND10;*1,PTCNWTFE
.
CNZT9999  RETURN
+
.**************************************************************************
.*                               DNZT0000              Called by: CNTF0000*
.* Delete all of the new NZ Private Theatre Fee file records              *
.**************************************************************************
DNZT0000  OPEN      NZPTF1A1,"nzptf1af"
          PACK      KEY33,SP70
          CALL      RSNZTF11
DNZT1000  CALL      RKNZTF11
          BRANCH    OVRCD,DNZT9999         * End of new file
.
          PACK      KEY33,NZTFHOSP,NZTFSEST,NZTFCLAM,NZTFFUND,NZTFFTAB:
                          NZTFEDAT,NZTFISEQ,SP70
.
          CALL      DENZTF11               * Delete from new file
.
          GOTO      DNZT0000
.
DNZT9999  RETURN
+
.**************************************************************************
.*                               LNZT0000              Called by: CNTF0000*
.* Load current NZ Private Theatre Fee data to the new NZ Private         *
.* Theatre Fee file                                                       *
.**************************************************************************
LNZT0000  OPEN      NZPTFEA1,"nzptfeaf"
          PACK      KEY33,SP70
          CALL      RSNZTFE1
LNZT1000  CALL      RKNZTFE1
          BRANCH    OVRCD,LNZT9999         * End of current file
.
          PACK      KEY33,NZTFHOSP,NZTFSEST,NZTFCLAM,NZTFFUND,NZTFFTAB:
                          NZTFEDAT,NZTFISEQ,SP70
          CALL      WRNZTF11               * Write to new file
.
          GOTO      LNZT1000
.
LNZT9999  RETURN
.
.**************************************************************************
.*                               UNZT0000              Called by: ML3300  *
.*    Update New to Current Casemix Theatre Fee File.                     *
.**************************************************************************
UNZT0000  KEYIN     *P1:24,*EL,"Are you sure you want to copy the new data ":
                    "over the old (",*V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF:
                    ") ? ",*V2LON,ANS;
.
          MOVE      ZERO,EXIT
          MATCH     ANSY,ANS
          GOTO      UNZT1000 IF EQUAL
.
          MOVE      ONE,EXIT
          MATCH     ANSN,ANS
          GOTO      UNZT9999 IF EQUAL
          BEEP
          GOTO      UNZT0000
.
UNZT1000  DISPLAY   *P1:24,*EL,*V2LON:
                    "** Copying new data over old... ",*BLINKON:
                    "Please wait",*HOFF,*V2LON," **";
.
          PACK      KEY33,SP70
          CALL      RSNZTF11
UNZT1200  CALL      RKNZTF11
          BRANCH    OVRCD,UNZT9999         * Exit if new file is empty
.
.-------  Delete all records from the current file ------
.
          PACK      KEY33,SP70
          CALL      RSNZTFE1
UNZT2000  CALL      RKNZTFE1
          BRANCH    OVRCD,UNZT3000         * End of current file
.
          PACK      KEY33,NZTFHOSP,NZTFSEST,NZTFCLAM,NZTFFUND,NZTFFTAB:
                          NZTFEDAT,NZTFISEQ,SP70
.
          CALL      DENZTFE1               * Delete from current file
.
          GOTO      UNZT2000
.
.
.-------  Loop through new file and write to current file ------
.
UNZT3000  PACK      KEY33,SP70
          CALL      RSNZTF11
UNZT4000  CALL      RKNZTF11
          BRANCH    OVRCD,UNZT5000         * End of new file
.
          PACK      KEY33,NZTFHOSP,NZTFSEST,NZTFCLAM,NZTFFUND,NZTFFTAB:
                          NZTFEDAT,NZTFISEQ,SP70
.
          CALL      WRNZTFE1               * Write to current file
.
          GOTO      UNZT4000
.
.
.-------  Delete all records from the new file ------
.
UNZT5000  PACK      KEY33,SP70
          CALL      RSNZTF11
UNZT6000  CALL      RKNZTF11
          BRANCH    OVRCD,UNZT9999         * End of new file
.
          PACK      KEY33,NZTFHOSP,NZTFSEST,NZTFCLAM,NZTFFUND,NZTFFTAB:
                          NZTFEDAT,NZTFISEQ,SP70
.
          CALL      DENZTF11               * Delete record from new file
.
          GOTO      UNZT6000
.
UNZT9999  RETURN
.
.**************************************************************************
.*                               GNZT0000              Called by: ML3400  *
.* Global delete of new NZ private theatre fee file                       *
.**************************************************************************
GNZT0000  DISPLAY   *P50:2,*V2LON,"- Global Deletion NZ Private Theatre Fee";
          CALL      SNZT0000                 * Display screen
          CALL      KNZT0000                 * Keyin details
          BRANCH    EXIT,GNZT9500
.
          CALL      DELQST
          BRANCH    CEXIT,GNZT8000,GNZT0000,GNZT9500
.
GNZT8000  CALL      PNZT0000                 * Process Delete records new file
          MOVE      ZERO,EXIT
          GOTO      GNZT9999
.
GNZT9500  MOVE      ONE,EXIT
.
GNZT9999  RETURN
.
.**************************************************************************
.*                         SNZT0000                                       *
.*  Display screen layout                                                 *
.*  Called by : GDME0000                                                  *
.**************************************************************************
.
SNZT0000  DISPLAY   *P1:4,*EF:
                    *P5:4,"Hospital       : ":
                    *P5:5,"Session Type   : ":
                    *P5:6,"Claim Code     : ":
                    *P5:7,"Health Fund    : ":
                    *P5:8,"H/Fund Table   : ":
                    *P5:9,"Effective Date : "
.
SNZT9999  RETURN
.
.**************************************************************************
.*                         BNZT0000                                       *
.*  Display screen layout                                                 *
.*  Called by : GDME0000                                                  *
.**************************************************************************
.
BNZT0000  DISPLAY   *P1:11,*EF,"Copy To":
                    *P5:13,"Hospital       : ":
                    *P5:14,"Session Type   : ":
                    *P5:15,"Claim Code     : ":
                    *P5:16,"Health Fund    : ":
                    *P5:17,"H/Fund Table   : ":
                    *P5:18,"Effective Date : "
.
BNZT9999  RETURN
+
.**************************************************************************
.*                            KNZT0000                                    *
.*  Keyin hospital, session type, claim code, health fund ,               *
.*  health fund table and effective date                                  *
.*  Called by : GNZT0000                                                  *
.**************************************************************************
KNZT0000  MOVE      ZERO,EXIT
.
          KEYIN     *P26:4,*EL,*V2LON,FROMHOSP;
          PACK      FROMHOSP,FROMHOSP,SP70
.
          MATCH     "All",FROMHOSP
          IF        @EQUAL
            DISPLAY   *P26:4,*V2LON,"All";
            GOTO      KNZT1000
          ENDIF
.
          PACK      KEY3,FROMHOSP,SP70
          CALL      RDPTHSP1
          BRANCH    OVRCD,KNZT9000
.
          DISPLAY   *P35:4,PTHSNAME;
.
.         Keyin Session Type Code
.
KNZT1000  KEYIN     *P26:5,*EL,*V2LON,FROMSEST;
          PACK      FROMSEST,FROMSEST,SP70
.
          MATCH     "All",FROMSEST
          IF        @EQUAL
            DISPLAY   *P26:5,*V2LON,"All";
            GOTO      KNZT2000
          ENDIF
.
          MATCH     SP70,FROMSEST
          IF        @EQUAL
            DISPLAY   *P26:5,*V2LON,"Blank";
            GOTO      KNZT2000
          ENDIF
.
          PACK      KEY5,ANST,ANSU,FROMSEST,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,KNZT9000
.
          DISPLAY   *P35:5,TDESC;
.
.         Keyin Claim Code
.         
KNZT2000  KEYIN     *P26:6,*EL,*V2LON,FROMCLAM;
          PACK      FROMCLAM,FROMCLAM,SP70
.
          MATCH     "All",FROMCLAM
          IF        @EQUAL
            DISPLAY   *P26:6,*V2LON,"All";
            GOTO      KNZT3000
          ENDIF
.
          MATCH     SP70,FROMCLAM
          IF        @EQUAL
            DISPLAY   *P26:6,*V2LON,"Blank";
            GOTO      KNZT3000
          ENDIF
.
          PACK      KEY5,ANSC,ANSL,FROMCLAM,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,KNZT9000
.
          DISPLAY   *P35:6,TDESC;
.
.         Keyin Health Fund
.
KNZT3000  KEYIN     *P26:7,*EL,*V2LON,FROMHFND;
          PACK      FROMHFND,FROMHFND,SP70
.
          MATCH     "All",FROMHFND
          IF        @EQUAL
            DISPLAY   *P26:7,*V2LON,"All";
            GOTO      KNZT4000
          ENDIF
.
          MATCH     SP70,FROMHFND
          IF        @EQUAL
            DISPLAY   *P26:7,*V2LON,"Blank";
            GOTO      KNZT4000
          ENDIF
.
          PACK      KEY14,FROMHFND,ZERO,ZERO,ZERO,ZERO,SP70
          CALL      RDFUND1
          BRANCH    OVRCD,KNZT9000
.
          DISPLAY   *P35:7,HFNAME;
.
.         Keyin Health Fund Table
.
KNZT4000  KEYIN     *P26:8,*EL,*V2LON,FROMHFTB;
          PACK      FROMHFTB,FROMHFTB,SP70
.
          MATCH     "All",FROMHFTB
          IF        @EQUAL
            DISPLAY   *P26:8,*V2LON,"All";
            GOTO      KNZT5000
          ENDIF
.
          MATCH     SP70,FROMHFTB
          IF        @EQUAL
            DISPLAY   *P26:8,*V2LON,"Blank";
            GOTO      KNZT5000
          ENDIF
.
          PACK      KEY14,FROMHFND,FROMHFTB,SP70
          CALL      RDFUND1
          BRANCH    OVRCD,KNZT9000
.
          DISPLAY   *P35:8,HFNAME;
.
.         Keyin Effective Date
.
KNZT5000  MOVE      "26",CCOL
          MOVE      "9",CVERT
          UNPACK    SP70,CCENT,CYEAR,CMON,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,KNZT5500
.
          PACK      FROMEDAT,CCENT,CYEAR,CMON,CDAY
          REP       " 0",FROMEDAT
.
          GOTO      KNZT8000
.
KNZT5500  DISPLAY   *P26:9,*V2LON,"All";
          MOVE      SP70,FROMEDAT
.
KNZT8000  MOVE      ZERO,EXIT
          GOTO      KNZT9999
.
KNZT9000  MOVE      ONE,EXIT
.
KNZT9999  RETURN
.
.**************************************************************************
.*                            PNZT0000                                    *
.*  Process global delete from new NZ Private Theatre Fee File            *
.*  Called by : GNZT0000                                                  *
.**************************************************************************
PNZT0000  PACK      KEY33,SP70
PNZT0500  CALL      RSNZTF11
PNZT1000  CALL      RKNZTF11
          BRANCH    OVRCD,PNZT9999         * End of new file
.
          MATCH     "All",FROMHOSP         * Hospital
          IF        !@EQUAL
            MATCH     NZTFHOSP,FROMHOSP 
            GOTO      PNZT1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMSEST         * Session Type
          IF        !@EQUAL
            MATCH     FROMSEST,NZTFSEST
            GOTO      PNZT1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMHFND         * Health Fund
          IF        !@EQUAL
            MATCH     FROMHFND,NZTFFUND
            GOTO      PNZT1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMHFTB         * Health Fund Table
          IF        !@EQUAL
            MATCH     FROMHFTB,NZTFFTAB
            GOTO      PNZT1000 IF NOT EQUAL
          ENDIF
.
          MATCH     SP70,FROMEDAT          * Effective Date
          IF        !@EQUAL
            MATCH     FROMEDAT,NZTFEDAT
            GOTO      PNZT1000 IF NOT EQUAL
          ENDIF
.
          PACK      KEY33,NZTFHOSP,NZTFSEST,NZTFCLAM,NZTFFUND,NZTFFTAB:
                          NZTFEDAT,NZTFISEQ,SP70
          MOVE      KEY33,SAVKEY33
.
          CALL      DENZTF11               * Delete record from new file
.
          MOVE      SAVKEY33,KEY33
          GOTO      PNZT0500
.
PNZT9999  RETURN
.
.
.**************************************************************************
.*                               HNZT0000              Called by: ML3400  *
.* Global delete of new NZ private theatre fee file                       *
.**************************************************************************
HNZT0000  DISPLAY   *P50:2,*V2LON,"- Global Deletion NZ Private Theatre Fee";
          CALL      SNZT0000                 * Display screen
          CALL      KNZT0000                 * Keyin details
          BRANCH    EXIT,HNZT9500
.
          CALL      BNZT0000                 * Display Copy To screen
          CALL      ENZT0000                 * Keyin Copy To details
          BRANCH    EXIT,HNZT9500
.
          MATCH     FROMHOSP,CPTOHOSP        * Check hospital
          GOTO      HNZT1000 IF NOT EQUAL
.
          MATCH     FROMSEST,CPTOSEST        * Check session type
          GOTO      HNZT1000 IF NOT EQUAL
.
          MATCH     FROMCLAM,CPTOCLAM        * Check claim code
          GOTO      HNZT1000 IF NOT EQUAL
.
          MATCH     FROMHFND,CPTOHFND        * Check health fund
          GOTO      HNZT1000 IF NOT EQUAL
.
          MATCH     FROMHFTB,CPTOHFTB        * check health fund table
          GOTO      HNZT1000 IF NOT EQUAL
.
          MATCH     FROMEDAT,CPTOEDAT        * check effective date
          GOTO      HNZT1000 IF NOT EQUAL
.
	  GOTO      HNZT9000                 * Error copy from/to identical
.
HNZT1000  CALL      DELQST
          BRANCH    CEXIT,HNZT8000,HNZT0000,HNZT9500
.
HNZT8000  CALL      WNZT0000                 * Process H/F duplication new file
          MOVE      ZERO,EXIT
          GOTO      HNZT9999
.
HNZT9000  DISPLAY   *P1:23,*EF,*P1:24,*B,"The From and To Sections Cannot ":
                    "be Identical. ";
          CALL      HITENTER
          MOVE      ONE,EXIT
          GOTO      HNZT9999
.
HNZT9500  MOVE      ONE,EXIT
.
HNZT9999  RETURN
.
.**************************************************************************
.*                            WNZT0000                                    *
.*  Process H/F duplication    new NZ Private Theatre Fee File            *
.*  Called by : GNZT0000                                                  *
.**************************************************************************
WNZT0000  PACK      KEY33,SP70
WNZT0500  CALL      RSNZTF11
WNZT1000  CALL      RKNZTF11
          BRANCH    OVRCD,WNZT9999         * End of new file
.
          MATCH     "All",FROMHOSP         * Hospital
          IF        !@EQUAL
            MATCH     NZTFHOSP,FROMHOSP
            GOTO      WNZT1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMCLAM         * Claim Code   
          IF        !@EQUAL
            MATCH     FROMCLAM,NZTFCLAM
            GOTO      WNZT1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMSEST         * Session Type
          IF        !@EQUAL
            MATCH     FROMSEST,NZTFSEST
            GOTO      WNZT1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMHFND         * Health Fund
          IF        !@EQUAL
            MATCH     FROMHFND,NZTFFUND
            GOTO      WNZT1000 IF NOT EQUAL
          ENDIF
.
          MATCH     "All",FROMHFTB         * Health Fund Table
          IF        !@EQUAL
            MATCH     FROMHFTB,NZTFFTAB
            GOTO      WNZT1000 IF NOT EQUAL
          ENDIF
.
          MATCH     SP70,FROMEDAT          * Effective Date
          IF        !@EQUAL
            MATCH     FROMEDAT,NZTFEDAT
            GOTO      WNZT1000 IF NOT EQUAL
          ENDIF
.
          PACK      SAVKEY33,NZTFHOSP,NZTFSEST,NZTFCLAM,NZTFFUND,NZTFFTAB:
                             NZTFEDAT,NZTFISEQ,SP70
.
          MATCH     "All",CPTOHOSP         * Hospital
          IF        !@EQUAL
            MOVE      CPTOHOSP,NZTFHOSP
          ENDIF
.         
          MATCH     "All",CPTOCLAM         * Session Type
          IF        !@EQUAL
            MOVE      CPTOCLAM,NZTFCLAM
          ENDIF
.         
          MATCH     "All",CPTOSEST         * Session Type
          IF        !@EQUAL
            MOVE      CPTOSEST,NZTFSEST
          ENDIF
.         
          MATCH     "All",CPTOHFND         * Health Fund
          IF        !@EQUAL
            MOVE      CPTOHFND,NZTFFUND
          ENDIF
.
          MATCH     "All",CPTOHFTB         * Health Fund Table
          IF        !@EQUAL
            MOVE      CPTOHFTB,NZTFFTAB
          ENDIF
.
          MATCH     SP70,CPTOEDAT          * Effective Date
          IF        !@EQUAL
            MOVE      CPTOEDAT,NZTFEDAT
          ENDIF
.
          PACK      KEY33,NZTFHOSP,NZTFSEST,NZTFCLAM,NZTFFUND,NZTFFTAB:
                          NZTFEDAT,NZTFISEQ,SP70
.
          CALL      RANZTF11
          IF        OVRCD=1
            CALL      WRNZTF11             * Write record to new file
          ENDIF
.
          MOVE      SAVKEY33,KEY33
          GOTO      WNZT0500
.
WNZT9999  RETURN
.
.**************************************************************************
.*                            ENZT0000                                    *
.*  Keyin Copy To hospital, session type, claim code, health fund ,       *
.*  health fund table and effective date                                  *
.*  Called by : GNZT0000                                                  *
.**************************************************************************
ENZT0000  MOVE      ZERO,EXIT
.
          KEYIN     *P26:13,*EL,*V2LON,CPTOHOSP;
          PACK      CPTOHOSP,CPTOHOSP,SP70
.
          MATCH     "All",CPTOHOSP
          IF        @EQUAL
            DISPLAY   *P26:13,*V2LON,"All";
            GOTO      ENZT1000
          ENDIF
.
          PACK      KEY3,CPTOHOSP,SP70
          CALL      RDPTHSP1
          BRANCH    OVRCD,ENZT9000
.
          DISPLAY   *P35:13,PTHSNAME;
.
.         Keyin Session Type Code
.
ENZT1000  KEYIN     *P26:14,*EL,*V2LON,CPTOSEST;
          PACK      CPTOSEST,CPTOSEST,SP70
.
          MATCH     "All",CPTOSEST
          IF        @EQUAL
            DISPLAY   *P26:14,*V2LON,"All";
            GOTO      ENZT2000
          ENDIF
.
          MATCH     SP70,CPTOSEST
          IF        @EQUAL
            DISPLAY   *P26:14,*V2LON,"Blank";
            GOTO      ENZT2000
          ENDIF
.
          PACK      KEY5,ANST,ANSU,CPTOSEST,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,ENZT9000
.
          DISPLAY   *P35:14,TDESC;
.
.         Keyin Claim Code
.
ENZT2000  KEYIN     *P26:15,*EL,*V2LON,CPTOCLAM;
          PACK      CPTOCLAM,CPTOCLAM,SP70
.
          MATCH     "All",CPTOCLAM
          IF        @EQUAL
            DISPLAY   *P26:15,*V2LON,"All";
            GOTO      ENZT3000
          ENDIF
.
          MATCH     SP70,CPTOCLAM
          IF        @EQUAL
            DISPLAY   *P26:15,*V2LON,"Blank";
            GOTO      ENZT3000
          ENDIF
.
          PACK      KEY5,ANSC,ANSL,CPTOCLAM,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,ENZT9000
.
          DISPLAY   *P35:15,TDESC;
.
.         Keyin Health Fund
.
ENZT3000  KEYIN     *P26:16,*EL,*V2LON,CPTOHFND;
          PACK      CPTOHFND,CPTOHFND,SP70
.
          MATCH     "All",CPTOHFND
          IF        @EQUAL
            DISPLAY   *P26:16,*V2LON,"All";
            GOTO      ENZT4000
          ENDIF
.
          MATCH     SP70,CPTOHFND
          IF        @EQUAL
            DISPLAY   *P26:16,*V2LON,"Blank";
            GOTO      ENZT4000
          ENDIF
.
          PACK      KEY14,CPTOHFND,ZERO,ZERO,ZERO,ZERO,SP70
          CALL      RDFUND1
          BRANCH    OVRCD,ENZT9000
.
          DISPLAY   *P35:16,HFNAME;
.
.         Keyin Health Fund Table
.
ENZT4000  KEYIN     *P26:17,*EL,*V2LON,CPTOHFTB;
          PACK      CPTOHFTB,CPTOHFTB,SP70
.
          MATCH     "All",CPTOHFTB
          IF        @EQUAL
            DISPLAY   *P26:17,*V2LON,"All";
            GOTO      ENZT5000
          ENDIF
.
          MATCH     SP70,CPTOHFTB
          IF        @EQUAL
            DISPLAY   *P26:17,*V2LON,"Blank";
            GOTO      ENZT5000
          ENDIF
.
          PACK      KEY14,CPTOHFND,CPTOHFTB,SP70
          CALL      RDFUND1
          BRANCH    OVRCD,ENZT9000
.
          DISPLAY   *P35:17,HFNAME;
.
.         Keyin Effective Date
.
ENZT5000  MOVE      "26",CCOL
          MOVE      "18",CVERT
          UNPACK    SP70,CCENT,CYEAR,CMON,CDAY
.
          CALL      KEYDATE
          BRANCH    OVRCD,ENZT5500
.
          PACK      CPTOEDAT,CCENT,CYEAR,CMON,CDAY
          REP       " 0",CPTOEDAT
.
          GOTO      ENZT8000
.
ENZT5500  DISPLAY   *P26:18,*V2LON,"All";
          MOVE      SP70,CPTOEDAT
.
ENZT8000  MOVE      ZERO,EXIT
          GOTO      ENZT9999
.
ENZT9000  MOVE      ONE,EXIT
.
ENZT9999  RETURN
.
.*******************************************************************************
.         Get the default charging claim code for multi hospital
.*******************************************************************************
DCLM0000  OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          IF        IBCNMHOS=1
            OPEN      PATHSPA1,"pathspaf"
            MOVE      PMVXMHOS,KEY3
            CALL      RDPTHSP1
            IF        OVRCD=0
              MOVE      PTHSDCLM,PTCNDCLM     * default claim code charging
            ENDIF
          ENDIF
DCLM9999  RETURN
+
.**************************************************************************
.*                               ICSG0000                                 *
.*        Copy class'n from one health fund & ICD10 code to another       *
.*        Copy class as follows :                                         *
.*        For each ICD10 Code in the entered range for the FROM fund      *
.*        copy the class'n to the same ICD10 Code for the TO fund           *
.**************************************************************************
.
ICSG0000  DISPLAY   *P50:2,*V2LON,"- Copy ICD10 Suggested Class. ";
.
          UNPACK    SP20,CPFRCLMN,CPTOCLMN  * claim codes
          UNPACK    SP20,CPFRFUND,CPTOFUND  * fund codes
          UNPACK    SP20,CPFRFTAB,CPTOFTAB  * fund table codes
          UNPACK    SP20,CPFRITEM,CPTOITEM  * item codes
          MOVE      SP30,DESCFCLM           * from claim desc
          MOVE      SP30,DESCTCLM           * to   claim desc
          MOVE      SP30,DESCFFND           * from fund desc
          MOVE      SP30,DESCTFND           * to   fund desc
          PACK      DESCFITE,SP20,SP20      * from item desc
          PACK      DESCTITE,SP20,SP20      * to   item desc
.
          MOVE      ZERO,CLMFLG
          MOVE      ZERO,FNDFLG
          MOVE      ZERO,MBSFLG
          CALL      ICDY0000                * display the screen
.
. ------- enter from claim code------
.
          MOVE      FOUR,EVERT
          MOVE      "25",ECOL
          MOVE      "CL",CODE
          MOVE      SP70,CKYIDEF3
.
          DISPLAY   *P1:24,*EL,"Type All - for All Claim code";
.
          KEYIN     *PECOL:EVERT,*DV,ACODE:     * default used
                    *PECOL:EVERT,*V2LON,*RV,ACODE:
                    *PECOL:EVERT,*DV,ACODE
          ENDSET    ACODE
          APPEND    SP70,ACODE
          RESET     ACODE
          MATCH     "All",ACODE
          GOTO      ICSG1000 IF EQUAL
.
.         CALL      PATCODKY
          CALL      PCODE080                * Check what was entered
          GOTO      ICSG1200
.
ICSG1000  MOVE      ONE,CLMFLG              * All claim code
.
ICSG1200  MOVE      ACODE,CPFRCLMN
          MOVE      TDESC,DESCFCLM
          DISPLAY   *P25:4,*V2LON,CPFRCLMN,*HOFF,*P35:4,DESCFCLM
          DISPLAY   *P1:24,*EL;
.
. ------- enter from health fund ------
.
          DISPLAY   *P1:24,*EL,"Type All - for All Health Fund";
          MOVE      SP70,CODEFUND
          MOVE      FIVE,EVERT              * row
          MOVE      "25",ECOL               * column
          KEYIN     *PECOL:EVERT,*DV,CKYIDEF6:     * default used
                    *PECOL:EVERT,*V2LON,*RV,*NOSTRIP,HCODE:
                    *PECOL:EVERT,*DV,HCODE
          ENDSET    HCODE
          APPEND    SP6,HCODE
          RESET     HCODE
          MATCH     "All",HCODE
          GOTO      ICSG2000 IF EQUAL
.
.         CALL      KFND0000                * enter code
          CALL      KFUND080                * Check what's entered
          MOVE      HCODE,CODEFUND
          MOVE      HFNAME,DESCFUND         * set up description
          GOTO      ICSG2200
.
ICSG2000  MOVE      ONE,FNDFLG
          MOVE      "All",CODEFUND
.
ICSG2200  DISPLAY   *P25:5,*V2LON,CODEFUND,*HOFF,*P35:5,DESCFUND
          DISPLAY   *P1:24,*EL;
          MOVE      CODEFUND,CPFRFUND       * starting code
          MOVE      DESCFUND,DESCFFND       * starting description
          MATCH     SP70,CODEFUND
          GOTO      ICSG2300 IF EQUAL
          BRANCH    FNDFLG,ICSG2300
.
          KEYIN     *P25:6,CPFRFTAB         * keyin HF Table
          ENDSET    CPFRFTAB
          APPEND    SP70,CPFRFTAB
          RESET     CPFRFTAB
.
. ------- enter the from ICD10 code -------
.
ICSG2300  KEYIN     *P25:7,CPFRITEM         * keyin HF Table
          ENDSET    CPFRITEM
          APPEND    SP6,CPFRITEM
          RESET     CPFRITEM
          MATCH     SP70,CPFRITEM
          GOTO      ICSG2360 IF EQUAL
          MATCH     "All",CPFRITEM
          GOTO      ICSG2380 IF NOT EQUAL
.
ICSG2360  MOVE      ONE,MBSFLG              * All
ICSG2380  PACK      KEY9,CPFRITEM,SP70
          CALL      RDPT10D1                * Get IDESC for ICD10 Code
          IF        OVRCD=0
            MOVE      DDESC,DESCFITE       * starting description
          ENDIF
          DISPLAY   *P25:7,*V2LON,CPFRITEM,*HOFF,*P35:7,DESCFITE
.
          BRANCH    CLMFLG,ICSG3000         * All claim code
.
. ------- enter to   claim------
.
          MOVE      NINE,EVERT
          MOVE      "25",ECOL
          MOVE      "CL",CODE
          MOVE      SP70,CKYIDEF3
          CALL      PATCODKY
.
          MOVE      ACODE,CPTOCLMN
          MOVE      TDESC,DESCTCLM
          DISPLAY   *P25:9,*V2LON,CPTOCLMN,*HOFF,*P35:9,DESCTCLM
.
. ------- enter to   health fund ------
.
ICSG3000  BRANCH    FNDFLG,ICSG4000
.
          MOVE      SP70,CODEFUND
          MOVE      TEN,CVERT               * row
          MOVE      "25",CCOL               * column
          CALL      KFND0000                * enter code
.
          DISPLAY   *P25:10,*V2LON,CODEFUND,*HOFF,*P35:10,DESCFUND
          MOVE      CODEFUND,CPTOFUND       * ending code
          MOVE      DESCFUND,DESCTFND       * ending description
          MATCH     SP70,CODEFUND
          GOTO      ICSG4000 IF EQUAL
.
          KEYIN     *P25:11,CPTOFTAB        * keyin HF Table
          ENDSET    CPTOFTAB
          APPEND    SP70,CPTOFTAB
          RESET     CPTOFTAB
.
. ------- enter the to   ICD10 code -------
.
ICSG4000  BRANCH    MBSFLG,ICSG4500
.
          KEYIN     *P25:12,CPTOITEM         * keyin HF Table
          ENDSET    CPTOITEM
          APPEND    SP6,CPTOITEM
          RESET     CPTOITEM
          PACK      KEY9,CPTOITEM,SP70
          CALL      RDPT10D1                * Get IDESC for ICD10 Code
          IF        OVRCD=0
            MOVE      DDESC,DESCTITE        * ending description
          ENDIF
.
          MATCH     CPFRITEM,CPTOITEM
          GOTO      ICSG9200 IF LESS        * finish is before end
.
          DISPLAY   *P25:12,*V2LON,CPTOITEM,*HOFF,*P35:12,DESCTITE
.
ICSG4500  CALL      CONTQST                 * OK to continue
          BRANCH    CEXIT,ICSG4600,ICSG0000,ICSG9999
.                         Yes      No       Cancel
.
ICSG4600  MOVE      CPFRITEM,PMSGICDC
.
. ------- starting at beginning of file ------
.
          PACK      KEY26,SP70
          MATCH     SP70,CPFRCLMN
          GOTO      ICSG4800 IF EQUAL       * Blank claim code
          BRANCH    CLMFLG,ICSG4800         * All Claim code
.
          PACK      KEY26,CPFRCLMN,SP70
          MATCH     SP70,CPFRFUND
          GOTO      ICSG4800 IF EQUAL       * Blank health fund
          BRANCH    FNDFLG,ICSG4800         * All health fund
.
          PACK      KEY26,CPFRCLMN,CPFRFUND,SP70
          MATCH     SP70,CPFRFTAB
          GOTO      ICSG4800 IF EQUAL       * Blank health fund table
.
          PACK      KEY26,CPFRCLMN,CPFRFUND,CPFRFTAB,SP70
          MATCH     SP70,CPFRITEM
          GOTO      ICSG4800 IF EQUAL
          BRANCH    MBSFLG,ICSG4800
.
          PACK      KEY26,CPFRCLMN,CPFRFUND,CPFRFTAB,CPFRITEM,SP70
          CALL      RDPMSGA1                * read sugg file for details
          BRANCH    OVRCD,ICSG9999
          GOTO      ICSG5050
.
ICSG4800  CALL      RSPMSGA1                * positional read
ICSG5000  CALL      RKPMSGA1                * next read ie first item
          BRANCH    OVRCD,ICSG9000          * finished
.
. ------- validation -------
.
          BRANCH    CLMFLG,ICSG5010         * All claim code
          MATCH     CPFRCLMN,PMSGCLMN
          GOTO      ICSG9000 IF NOT EQUAL
.
ICSG5010  BRANCH    FNDFLG,ICSG5020         * All health fund
          MATCH     CPFRFUND,PMSGHFND
          GOTO      ICSG5000 IF NOT EQUAL
          MATCH     CPFRFTAB,PMSGHFTB
          GOTO      ICSG5000 IF NOT EQUAL
.
ICSG5020  BRANCH    MBSFLG,ICSG5050         * All mbs
          MATCH     CPFRITEM,PMSGICDC
          GOTO      ICSG5000 IF NOT EQUAL
.
ICSG5050  DISPLAY   *P57:24,*V2LON,PMSGHFND,*P70:24,*V2LON,PMSGICDC  *EL;
.
.
. --------------------------------------------------------------
. ------- either write a new record or update an old one -------
. ------- read the sugg. file using the TO fund and the  -------
. ------- MBS item just read in                          -------
. --------------------------------------------------------------
.
          PACK      SAVKEY26,PMSGCLMN,PMSGHFND,PMSGHFTB,PMSGICDC,SP70
          MOVE      PMSGCLMN,COPYCLMN
          MOVE      PMSGHFND,COPYFUND
          MOVE      PMSGHFTB,COPYFTAB
          MOVE      PMSGICDC,COPYITEM
          MOVE      PMSGCLSS,COPYCLSS       * save the classification to copy
.
          IF        CLMFLG=0
            MATCH     SP70,CPTOCLMN
            IF        !@EQUAL
              MOVE      CPTOCLMN,COPYCLMN
            ENDIF
          ENDIF
          IF        FNDFLG=0
            MOVE      CPTOFUND,COPYFUND
            MOVE      CPTOFTAB,COPYFTAB
          ENDIF
          IF        MBSFLG=0
            MOVE      CPTOITEM,COPYITEM
          ENDIF
.
          PACK      KEY26,COPYCLMN,COPYFUND,COPYFTAB,COPYITEM,SP70
          CALL      RDPMSGA1                * read ICD10 suggestions file
          BRANCH    OVRCD,ICSG5300          * write a new record
.
. ------- update existing record -------
.
ICSG5200  MOVE      COPYCLSS,PMSGCLSS       * set up the new classification
          CALL      UPPMSGA1                * update the record
          DISPLAY   *P78:24,*V2LON,"*";
          GOTO      ICSG5500
.
. ------- write a new record -------
.
ICSG5300  UNPACK    KEY26,PMSGCLMN,PMSGHFND,PMSGHFTB,PMSGICDC
          MOVE      COPYCLSS,PMSGCLSS       * the classification
          MOVE      SP20,PMSGSPAR           * spare variable
          CALL      WRPMSGA1                * write new record
          DISPLAY   *P78:24,*V2LON,"**";
.
ICSG5500  MOVE      SAVKEY26,KEY26
          CALL      RDPMSGA1                * read that record
          GOTO      ICSG5000                * copy next record if applicable
.
. ------- finished -------
.
ICSG9000  DISPLAY   *P1:24,*B,"Copying has been completed.  ",*EL;
          MOVE      ZERO,EXIT
          GOTO      ICSG9999
.
ICSG9200  DISPLAY   *P1:24,*B,"Finishing ICD10 code should be after Starting ":
                    "Code.  ",*EL;
          CALL      HITENTER
          GOTO      ICSG9999
.
ICSG9999  RETURN
+
.*********************************************************************
.*                  ICDY0000                    Called by : COPY0000 *
.*        Display the screen for the copy option                     *
.*********************************************************************
.
ICDY0000  DISPLAY   *P1:3,*EF:
                    *P5:4,"From Claim Code   : ",*V2LON,CPFRCLMN,*HOFF:
                    *P35:4,DESCFCLM:
                    *P5:5,"     Health Fund  : ",*V2LON,CPFRFUND,*HOFF:
                    *P35:5,DESCFFND:
                    *P5:6,"           Table  : ",*V2LON,CPFRFUND,*HOFF:
                    *P5:7,"      ICD10 Item  : ",*V2LON,CPFRITEM,*HOFF:
                    *P35:7,DESCFITE:
                    *P5:9,"To   Claim Code   : ",*V2LON,CPTOCLMN,*HOFF:
                    *P35:9,DESCTCLM:
                    *P5:10,"     Health Fund  : ",*V2LON,CPTOFUND,*HOFF:
                    *P35:10,DESCTFND:
                    *P5:11,"           Table  : ",*V2LON,CPFRFUND,*HOFF:
                    *P5:12,"      ICD10 Item  : ",*V2LON,CPTOITEM,*HOFF:
                    *P35:12,DESCTITE
.
ICDY9999  RETURN
+
. =========================================================================
          INC       STD001IO
          INC       STDHLPCD
          INC       NHOSPDAY
          INC       PATCODKY
          INC       PATFNDKY
          INC       PATIK1PR                * Create keyword index for new
          INC       PATIKIPR                * Create keyword index for current
          INC       PATITMKY
          INC       PATTBLKY
          INC       STEPDOWN
          INC       PATCMCKY
          INC       GETCNEFF
          INC       PBFEEUPD
          INC       VALCONTR
          INC       PATITMRD
          INC       CLPMSCMT
          INC       PATECHRD
.
          INC       NZPBFEIO/INC
          INC       NZPTFEIO/INC
          INC       NZPTF1IO/INC
          INC       PATADVIO/INC
          INC       PATBFEIO/INC
.         INC       JHSBFEIO/INC
          INC       JHSBF1IO/INC
          INC       JHSBF2IO/INC
          INC       PATCFAIO/INC
          INC       PMSCIDIO/INC
          INC       PATCODIO/INC
          INC       PATDSCIO/INC
          INC       PATECHIO/INC
          INC       PATFN1IO/INC
          INC       PATFX1IO/INC
          INC       PATHSPIO/INC
          INC       PATICDIO/INC            * ICD10 file
          INC       PATITMIO/INC            * Current MBS/Item (patitemn)
          INC       PATIKIIO/INC            * Current keyword index (patikiaf)
          INC       PATIK1IO/INC            * New keyword index (patik1af)
          INC       PATMCHIO/INC            * Current Misc Charge(patmchgf)
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PATRCAIO/INC
          INC       PATSGCIO/INC            * Suggested Class. Exceptn file
          INC       PMSSGAIO/INC            * ICD10 Suggested Class. file
          INC       PATTFEIO/INC
.         INC       JHSTFEIO/INC            * Current Theatre Fee(pattfeef)
          INC       JHSTF1IO/INC            * New Theatre Fee(newtfeef)
          INC       JHSTF2IO/INC            * Old Theatre Fee(oldtfeaf)
          INC       PATTRNIO/INC
          INC       PATWR1IO/INC
          INC       PATCTFIO/INC            * Casemix Theatre Fee File
          INC       PMSCMTIO/INC            * Casemix matrix
          INC       PATCMCIO/INC
          INC       PATIPEIO/INC
          INC       PMSVX1IO/INC
          INC       TFILENAM
          INC       IBASEQIO/INC
          INC       WEBERRIO/INC

