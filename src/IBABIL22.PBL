.******************************************************************************
.* System    :  PATIENT MANAGEMENT                                            *
.* Program   :  IBABIL22                                                      *
.* Desc      :  Print Financial Letters                                       *
.******************************************************************************
.* Date      :  10/02/1992                                                    *
.* Author    :  Stephen Armstrong                                             *
.* Function  :                                                                *
.*           :  N.B. Copied from r6 and modified for r5.01                    *
.* Mods.     :                                                                *
.*----------------------------------------------------------------------------*
.* V12.00.04 23/07/2025  PJ Le Febour   TSK 0962549b                          *
.*           POST0000 remove test of expiry date for postal address           *
.* V12.00.03 15/07/2025  PJ Le Febour   TSK 0962549a                          *
.*           POST0500 replaced CLEAR with MOVE SP70 to initialize variables   *
.* V12.00.02 15/07/2025  PJ Le Febour   TSK 0962549                           *
.*           POST0500 added clear PTMXADD1 PTMXADD2 PTMXADD3 PTMXADD4 PTMXPOST*
.* V12.00.01 28/05/2025  J.Tan          TSK 0955096                           *
.*           Added Alphanumeric visit number changes                          *
.* V11.04.02 07/11/2024 Thanh T            TSK 0946085                        *
.*           Added RCCNSTRF field - Display Statement Reference               *
.* V11.04.01 18/07/2024  Thanh T           TSK 0939648                        *
.*           Added LCPXSN18/%secraddr - Secure Address                        *
.*                 LCPXSN19/%verfaddr - Verified Address                      *
.*                 LCPXSN20/%multbirt - Multiple Birth Indicator              *
.*                 LCPXSN21/%emailval - Email Validation Flag                 *
.*                 LCPXSN22/%statusbb - Status Indicator 22                   *
.*                 LCPXSN23/%statusbc - Status Indicator 23                   *
.*                 LCPXSN24/%statusbd - Status Indicator 24                   *
.*                 LCPXSN25/%statusbe - Status Indicator 25                   *
.*                 LCPXSN26/%statusbf - Status Indicator 26                   *
.*                 LCPXSN27/%statusbg - Status Indicator 27                   *
.*                 LCPXSN28/%statusbh - Status Indicator 28                   *
.*                 LCPXSN29/%statusbi - Status Indicator 29                   *
.*                 LCPXSN30/%statuscz - Status Indicator 30                   *
.*----------------------------------------------------------------------------*
.*        V11.03.08 08/11/2023  Nikitha B      TSK 0927699c                   *
.*                  Read CAPPRVNO and PTCNHABN for Hospital Approval and      *
.*                  ABN number.                                               *
.*        V11.03.07 04/10/2023  Nikitha B     TSK 0927699                     *
.*                  Recomplied for PATINVHL, PATINVTL - Stationary variables  *
.*        V11.03.06 21/09/2023  Nikitha B      TSK 0925704b                   *
.*                  Added %varible for inpatient sourcing from pattranf.tadoct*
.*        V11.03.05 22/08/2023  Ebon Clements  TSK 0925704                    *
.*                  Fixed fund code %hfundc LXHFUNDC ED visits                *
.*        V11.03.04 10/08/2023  Nikitha B      TSK 0925704                    *
.*                  Added % varibles for Service Doctor's Provider Number,    *
.*                  Visit Date, Discharge date, Medicare Expiry Date,         *
.*                  Hospital Full Address, Health Fund, Claimcode.            *
.*        V11.03.03 15/06/2023  Bella Turco    TSK 0931756                    *
.*                  Recompiled for PRTINVBD                                   * 
.*        V11.03.02 20.04.2023  DA Sarkies    TSK 0931254                     *
.*                  Blanked out Provider number if Att Dr not found           *
.*        V11.03.01 18.04.2023  DA Sarkies    TSK 0931254                     *
.*                  Added Medicare IRN, Expiry Date & Attend Dr Prov Number   *
.*        V11.02.02 18.04.2023  DA Sarkies    TSK 0931254                     *
.*                  Added Medicare IRN, Expiry Date & Attend Dr Prov Number   *
.*        V11.02.01 09/02/2022  Thanh T       TSK 0905641                     *
.*                  Recompiled as OUTMA1FD changes                            *
.*        V11.01.06 14/09/2021  Davin           TSK 0911277                   *
.*                  Recompiled for PRTINVBD                                   *
.*        V11.01.05 10/09/2021  Davin           TSK 0911277                   *
.*                  Recompiled for PATINVTL - Changed field 20 length to 12.2 *
.*        V11.01.04 31/08/2021  J.Tan           TSK 0910799                   *
.*                  Recompiled for PRTINVBD - printing Referring ADF          *
.*        V11.01.03 24/08/2021  Davin           TSK 0897318                   *
.*                  Recompiled for PATINVTL - added field 57(Adjustment Total)*
.*        V11.01.02 03/08/2021  J.Tan           TSK 0909724                   *
.*                  Recompiled for PRTINVBD - SJOG invoice                    *
.*        V11.01.01 27/04/2021  Thanh T        TSK 0895165                    *
.*                  Recompiled for OPRARDFD changes                           *
.*----------------------------------------------------------------------------*
.*        V11.00.08 19/01/2021  J.Tan          TSK 0883075                    *
.*                  Recompiled for PRTINVBD - mod to print ADF addr.on invoice*
.*        V11.00.07 14/10/2020  J.Tan          TSK 0894879                    *
.*                  Recompiled for PRTINVBD - Print 30 item desc.for RCH Inv. *
.*        V11.00.06 13/10/2020 J.Tan           TSK 0896769                    *
.*                  Mod to check for Insurance Excess Deposit type            *
.*        V11.00.05 30/06/2020 J.Tan           TSK 0891428                    *
.*                  Fixed patrea - patient portion outstanding amount         *
.*        V11.00.04 15/06/2020 J.Tan           TSK 0891428                    *
.*                  Fixed negative amount of patrea                           *
.*        V11.00.03 08/04/2020 J.Tan           TSK 0868813                    *
.*                  Recompiled for PATINVHL                                   *
.*                  15/04/2020 Thanh T         TSK 0879163                    *
.*                  Added SEXDSP00                                            *
.*----------------------------------------------------------------------------*
.*        V11.00.02 01/04/2020  J.Tan             TSK 0868813                 *
.*                  Changed PKNAME to DIM80                                   *
.*        V11.00.01 20/03/2020  J.Tan          TSK 0838262                    *
.*                  Added Effective from and to date to MBS Item file         *
.*        V10.14.02 09/09/2019  J.Tan           TSK 0857392                   *
.*                  Recompiled for ABF invoice                                *
.*        V10.14.01 20/03/2019  J.Tan            TSK 0857392                  *
.*                  Changed RCP Transaction count from DIM3 to DIM5           *
.*        V10.12.01 28/02/2018  J.Tan          TSK 0852351                    *
.*                  Recompiled for PATINVHL-fields 226 227(Program Code/Desc) *
.*        V10.09.01 19/01/2017  J.Tan          TSK 0829932                    *
.*                  Recompiled for PATANVS - PRFA add4 default from Master rec*
.*        V10.08.01 07/06/2016   J.Tan           CAR 0813396                  *
.*                  Fixed reprinting invoice for Future action                *
.*        V10.07.05 19/11/2015  Peter Vela    CAR 322669                      *
.*                  Added LXCURINV - Current Invoice Number                   *
.*        V10.07.04 18/11/2015  J.Tan         CAR 303942                      *
.*                  Added new payment types                                   *
.*        V10.07.03 13/11/2015   Davin           CAR 313906                   *
.*                  Added setup of postal address to PRFA address (post6000)  *
.*        V10.07.02 05/11/2015   Peter Vela      CAR 322669                   *
.*                  Added LXFSTINV - First invoice number                     *
.*        V10.07.01 26/10/2015  Steve Armstrong  CAR 323085                   *
.*                  Removed declaration for LOWUPP (now defined in IBACOMM)   *
.******************************************************************************
.*        V10.06.07 17/09/2015   Davin           CAR 313906                   *
.*                  Added extra contacts to setup of postal address (post0000)*
.*        V10.06.06 14/08/2015  J.Tan         CAR 320073                      *
.*                  Recompiled for PATCATAI-reprint invoice for unreleased csh*
.*        V10.06.05 07/08/2015  Davin         CAR 317002                      *
.*                  Recompiled for PRTINVBD - Print pmexname for ADF MO       *
.*        V10.06.04 14/07/2015  Peter Vela     CAR 318700                     *
.*                  Recompiled for PRBILCMN - Validate for deleted VISMDT     *
.*                  record                                                    *
.*        V10.06.03 16/06/2015  J.Tan         CAR 317864                      *
.*                  Fixed Print invoice and top/bottom margin of letter       *
.*                  Fixed I*C on patwr1af                                     *
.*        V10.06.02 25/05/2015  Ebon Clements CAR 316518                      *
.*                  Increased PRFA name from 20 to 30 LXPRANM                 *
.*        V10.06.01 15/05/2015  Davin         CAR 310155                      *
.*                  Recompiled for PATGBCRN - added MOD10V05 for BPAY         *
.*        V10.05.04 06/10/2014  Ebon Clements    CAR 268970                   *
.*                  Change to use OUTCLIFD index 1 instead of index 2         *
.*        V10.05.03 01.10.2014  Ania P           CAR 301512                   *
.*                  Fixed program to display HFUND and HFTAB                  *
.*        V10.05.02 05/09/2014  J.Tan            CAR 304632                   * 
.*                  Mods checking register type for payments                  *
.*        V10.05.01 29/08/2014  J.Tan            CAR 298984                   *
.*                  Added new var for Amount to be repaid & Freq.payment      *
.*        V10.04.03 12/06/2014  Steve Armstrong  CAR 301639                   *
.*                  Moved calls to TFILENAM into INIT0000 and added calls to  *
.*                  KILS0000, KILV0000 and KILF0000 on exit of program.       *
.*        V10.04.02 04/05/2013  J.Tan            CAR 296034                   *
.*                  Mods to include GST to %patout                            *
.*        V10.04.01 26/02/2014  J.Tan            CAR 275810                   *
.*                  Recompiled for PATCATAI - to print Defence Force details  *
.******************************************************************************
.*        V10.03.15 09/12/2013  Ania P           CAR 294765                   *
.*                  Mods month in lowercase for variable %curdat              *
.*        V10.03.14 09/12/2013  Ania P           CAR 294740                   *
.*                  Recompiled for PATINVHL                                   *
.*        V10.03.13 28/10/2013  J.Tan            CAR 276910                   *
.*                  Fixed patient reassign debts                              *
.*        V10.03.12 18/10/2013  Peter Vela       CAR 276910                   *
.*                  Fixed read to patrasaf @ SETV6500                         *
.*        V10.03.11 12/09/2013  Peter Vela       CAR 271911                   *
.*                  Recompiled for PATINVTL                                   *
.*        V10.03.10 20/06/2013  Davin            CAR 287161                   *
.*                  Recompiled for PATGBCRN - right justify ptcnhbpi          *
.*        V10.03.09 17/04/2013  Don Nguyen        CAR 282342                  *
.*                  Corrected pos read for PTCNURBP                           *
.*        V10.03.08 09/04/2013  Don Nguyen       CAR 282342                   *
.*                  Mods to use UR for BPAYINVN (if PTCNURBP=1)               *
.*        V10.03.07 05/03/2013  Patrick Adair    CAR 281898                   *
.*                  Recompiled for PRNTICDC                                   *
.*        V10.03.06 18/02/2013 Ania              CAR 281021                   *
.*                  Removed redundant modification of constants.              *
.*        V10.03.05 19/12/2012 Patrick Adair     CAR 261630                   *
.*                  Removed port number from temp file name                   *
.*        V10.03.04 20/07/2012  Don Nguyen       CAR 264561                   *
.*                  Recompiled for PATGBCRN                                   *
.*                  Also read in Hospital ID before calling GBCRN000          *
.*        V10.03.03 20/02/2012  Ebon Clements    CAR 237192                   *
.*                  Commented out letter not setup error - PRLT9500           *
.*        V10.03.02 09/01/2012  J.Tan            CAR 257430                   *
.*                  Replaced RDPTHLFA1 with RDPTHLF1                          *
.*        V10.03.01 29/11/2011 J.Tan             CAR 254776                   *
.*                  Added variables for Patient, PRA and Postal full address  *
.*        V10.02.04 21/10/2011  J.Tan            CAR 252727                   *
.*                  Recompiled for PATCATAI - printing lumpsum desc.          *
.*        V10.02.03 10/06/2011  Saroeun Soeur    CAR 237123                   *
.*                  changed LXPATOUT to look at PATRAS patient portion        *
.*                  reassigned debt. SETV6500                                 *
.*        V10.02.02 06/04/2011  Ebon Clements    CAR 233251                   *
.*                  Remove 1 character of white space after %boldon & %ulineon*
.*        V10.02.01 04/04/2011 Jill Parkinson    CAR 239574                   *
.*                  Removed open of ibaprntf                                  *
.*        V10.01.03 08/02/2011  Ebon Clements    CAR 233251                   *
.*                  Added % bold and underline variables                      *
.*        V10.01.02 03/11/2010  J.Tan            CAR 217049                   *
.*                  Mods address line 1,2,3,4 to be 35 chars                  *
.*        V10.01.01 01/11/2009  J.Tan            CAR 232412                   *
.*                  Fixed Patient portion outstanding for multiple items      *
.*        V10.00.03 09/08/2009  J.Tan            CAR 218426                   *
.*                  Mods Update option not to remove deleted record from Extrt*
.*        V10.00.02 12/04/2009  J.Tan            CAR 215864                   *
.*                  Mods to set Time letter printed,Extract ID to Letter Hist.*
.*                  08/04/2009  J.Tan            CAR 218426                   *
.*                  Added HealthFund/Misc.Item/Insurance to pmsltfaf file     *
.*        V10.00.01 31/12/2009  J.Tan            CAR 174079                   *
.*                  Mods for Action Plan                                      *
.*        V9.12.05  09/12/2009  J.Tan            CAR 208676                   *
.*                  Fixed checking health fund payments date                  *
.*        V9.12.04  27/11/2009  J.Tan            CAR 208676                   *
.*                  Mods checking health fund payments date                   *
.*        V9.12.03  20/10/2009  J.Tan            CAR 208418                   *
.*                  Mods to exclude Future action code with INDIC2=H          *
.*                  20/10/2009  J.Tan            CAR 208416                   *
.*                  Mods to include un-released payments                      *
.*        V9.12.02  07/10/2009  Davin            CAR 207046                   *
.*                  Added field for BPAY Customer Ref Number (generated and   *
.*                  based on last invoice number)                             *
.*        V9.12.01  12/08/2009  J.Tan            CAR 203011                   *
.*                  Mods for printing Letter for an admission (patient level) *
.*        V9.11.06  04/05/2009  Saroeun Soeur    CAR 192418                   *
.*                  Added LXCURDTN, current date no extension                 *
.*        V9.11.05  14/04/2009  Jill Habasque    CAR 194019                   *
.*                  Fixed extra carriage return at top of page                *
.*        V9.11.04  13/02/2009  J.Tan            CAR 190170                   *
.*                  Fixed Date of letter                                      *
.*        V9.11.03  13/02/2009  J.Tan            CAR 189749                   *
.*                  Fixed Outstanding on Summary heading (SUMHEAD)            *
.*        V9.11.02  02/01/2009  J.Tan            CAR 188745                   *
.*                  Mods not to print letter for fully credit note invoices   *
.*        V9.11.01  02/01/2009  J.Tan            CAR 188745                   *
.*                  Mods to include credit notes for Invoice Summary          *
.*        V9.10.01  12/06/2008  J.Tan            CAR 167967                   *
.*                  Mods to include credit notes for Outstanding amount       *
.*        V9.09.02  07/11/2007  Ebon Clements    CAR 151935                   *
.*                  Added write to letter sent history file - PRNT0000        *
.*        V9.09.01  17/09/2007  Ebon Clements    CAR 149934                   *
.*                  Added multi hospital functionality to hospital vars       *
.*        V9.08.04  26/03/2007  Peter Vela       CAR 122066                   *
.*                  Fixed unpacking of LETTDATE and move to LXLETDAT          *
.*        V9.08.03  14/11/2006  Peter Vela       CAR 124547                   *
.*                  Added functionality for PRFA of Deceased Patient          *
.*        V9.08.02  30/10/2006  Peter Vela       CAR 122066                   *
.*                  Fixed format of LXLETDAT                                  *
.*        V9.08.01  17/10/2006  Ebon Clements    CAR 121065                   *
.*                  Read dishcarge file at SETV2300                           *
.*        V9.05.01  10/03/2006  Mike Laming      CAR 79281                    *
.*                  Increase PATFACT2 to KEY19 & add FACODE to key string     *
.*        V9.04.01  30/08/2004  Jill Habasque    CAR 52930                    *
.*                  Added keyin of hospital ID                                *
.*        V9.03.04  16/07/2004  Lina Vo          CAR 51732                    *
.*                  Need to populate Number of Records (PMLTRCNT) Field on    *
.*                  the header table                                          *
.*        V9.03.03  02/06/2004  Lina Vo          CAR 49650                    *
.*                  Made program un-obsoleted.                                *
.*        V9.03.02  23/09/2003  Tracey Nguyen    CAR 36511                    *
.*                  Changed SETW0000 section to strip SNAME1 and SNAME2       *
.*                  for matching purposes so that all records matching the    *
.*                  selection criterias are written to the pmsllfaf file.     *
.*        V9.03.01  02/07/2003  CAR 40452   Peter Vela                        *
.*                  Added GST Journal Amounts to Total Outstanding            *
.*        V9.02.01  14/11/2001  Dean Cramer                                   *
.*                  Include web routines for rangeing and selection.          *
.*        V5.08.02  16/08/2000  Caleb Sharman                                 *
.*                  Changed Health Fund variables to be 8 chars               *
.*        V5.08.01  06/06/2000  Jill Habasque                                 *
.*                  Changed from key10 to key14 for the health fund file      *
.*             V5.08.B01  08/03/2000  Steve Armstrong      5.08 Mods          *
.*                        Mods for changes to OUTCLIFD (effective date)       *
.******************************************************************************
.*             V5.07.B03  01/01/1999  Nicole Harrington                       *
.*                        507 Rebounds                                        *
.*             V5.07.B02  17/12/1998  Jim Stathopoulos                        *
.*                        507 Rebounds                                        *
.*             V5.07.B01  10/11/1998  Jim Stathopoulos                        *
.*                        507 Changes                                         *
.******************************************************************************
.*              V5.04.02  26/06/97 Nick  SRF 620500                           *
.*                        Fixed replacing of all zeros in XDAY so that only   *
.*                        leading zero is replaced                            *
.*              V5.04.01  18/02/97 Howellsy     WHT                           *
.*                        Added Cell Phone, Postal Add1-4, Postal Post Code   *
.******************************************************************************
.*              V5.01.02  13/03/92 Steve Armstrong  SRF 113575                *
.*              V5.01.03  01/06/92 i chung          SRF 114835                *
.*                        Fixed to print Person Responsible for A/c details   *
.*                        instead of Person to Contact (N.O.K.) details       *
.*              V5.01.04  16/06/92 J.Tan   SRF 114912                         *
.*                        Mods to display admission date when scanning        *
.*              V5.01.05  01/07/92 J.Tan   SRF 115415                         *
.*                        Fixed the outstanding amounts                       *
.*              V5.01.06  03/03/93  ROD                                       *
.*                        Recompiled for OUTIOBOB    open routine             *
.*              V5.01.07  06/05/93  Glenn Berry            SRF 121107         *
.*                        Fixed to read outpatient files with site prefixes.  * 
.*              V5.01.08  08/07/93  WHIRLPOOL              SRF 600261         *
.*                        Fixed to read outpatient files with site prefixes.  * 
.*              V5.01.09  09/07/93  WHIRLPOOL              SRF 123783         *
.*                        Fixed more read outpatient files with site prefixes.* 
.*        V5.01.10  18/08/1993  Glenn Berry   Bulletin 27  SRF 117999         *
.*                  Added 'Parent of' for P.R.A.                              *
.*                                                                            *
.******************************************************************************
.
          INC       STD001FD
          INC       CHKDIGVR/INC
          INC       IBAGEDFD/INC
          INC       IBAGSTFD/INC
          INC       IBATMDFD/INC
          INC       IBATMHFD/INC
          INC       IBAPRNFD/INC
          INC       IBACONFD/INC
.
          INC       AAEDE1FD/INC            * A&E FILE
          INC       AAEDTRFD/INC            * A&E FILE
          INC       AAEDI1FD/INC
          INC       AAECONFD/INC
          INC       OUTBOAFD/INC            * outpatients file A
          INC       OUTBB1FD/INC            * outpatients file B
          INC       OUTCLIFD/INC            * sites file
          INC       OUTCTYFD/INC
          INC       OUTSITFD/INC            * outpatient sites file
          INC       OUTDTRFD/INC            * outpatient DTR file
          INC       OUTCONFD/INC
          INC       OPRARDFD/INC
          INC       OPRDEAFD/INC
.
          INC       EMRVISFD/INC            * Emergency visit file
          INC       EMRCONFD/INC
          INC       EMRHISFD/INC
.
          INC       COMDEPFD/INC
          INC       RCPREGFD/INC
          INC       RCPCRSFD/INC
          INC       RCPDTEFD/INC
          INC       RCPBNKFD/INC
          INC       RCPBDTFD/INC
          INC       PMSCIDFD/INC
          INC       PMSCEXFD/INC
          INC       PMSTLEFD/INC
          INC       PATCODFD/INC            * codes file
          INC       PATCONFD/INC            * control file
          INC       PATCMXFD/INC            * casemix funding file
          INC       PATDO1FD/INC            * doctors file
          INC       PATDSCFD/INC            * discharge file
          INC       PATDTRFD/INC            * dtr file
          INC       PATFACFD/INC            * future action file
          INC       PATFLTFD/INC            * financial letters file
          INC       PATFN1FD/INC            * health funds file
          INC       PATFX1FD/INC
          INC       PATCFAFD/INC            * Claim future actions
          INC       PATPFAFD/INC            * patient future action plan file
          INC       PATFAPFD/INC            * future action plan file
          INC       PATICDFD/INC            * ICD file
          INC       PATINVFD/INC            * invoice file
          INC       PATIN1FD/INC            * insurance
          INC       PATITMFD/INC            * item file
          INC       PATIBLFD/INC            * lumpsum invoice breakdown file
          INC       PATLHIFD/INC            * letter history file
          INC       PATLSDFD/INC            * lumpsum daycase file
          INC       PATHLFFD/INC            * lumpsum overnight file
          INC       PATMA1FD/INC            * patient master file
          INC       PATHSPFD/INC            * patient master file
          INC       PATMI1FD/INC            * patient admissions file
          INC       PATREMFD/INC            * reminder file
          INC       PATRE1FD/INC            * person responsible for a/c file
          INC       PATTRNFD/INC            * transfer file
          INC       PATVISFD/INC            * patient visits file
          INC       PMSCNOFD/INC            * credit notes file
          INC       PMSFCIFD/INC            * credit notes file
          INC       PATWC1FD/INC            * Workers Comp.
          INC       PATWR1FD/INC
          INC       PATWMAFD/INC
          INC       PATWVEFD/INC
          INC       PMSHCPFD/INC
          INC       PMSVX1FD/INC            * patient visits file
          INC       PMSPRGFD/INC
          INC       PMSLLFFD/INC
          INC       PMSLTFFD/INC
          INC       PMSEVTFD/INC
          INC       PMSPX2FD/INC
          INC       PMSMTIFD/INC
          INC       MLTCFNFD/INC
          INC       PMSPYRFD/INC
          INC       PMSEXTFD/INC
          INC       PATDETFD/INC
          INC       PATECDFD/INC
.
          INC       WEBSECFD/INC
          INC       IBAPOLFD/INC
          INC       VARGBCRN/INC            * vars for BPAY crn
          INC       PATDINVS/INC
          INC       NHIMASFD/INC
          INC       NZPIVBFD/INC
          INC       NZPRDTFD/INC
          INC       NZPSPRFD/INC
          INC       NZPMCHFD/INC
          INC       NZPMXCFD/INC
          INC       PATRASFD/INC
.
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
+
.----------------------------------------------------------------------------
.         TEMPORARY INDEXED FILE DEFINITION
.----------------------------------------------------------------------------
.         Filename : bil22axx.dat          (xx = port id)
.
VISTEMP1  IFILE SQL, FIXED=64, KEY="U1-8"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
DXVNUMB   DIM       8           8           1       Visit Number
XVTYPE    DIM       2           2           9       Visit Type
XVDATE    DIM       8           8          11       Visit Date (CCYYMMDD)
XOUTST    FORM     7.2          6          19       Outstanding Amount
XURNO     DIM       8           8          25       Patient U/R Number
XPNAME    DIM       31          31         33       Patient Name (formatted)
.
.End of Record                             64
.
.Redefine form fields from key
.-----------------------------
XVNUMB    DIM       8
+
.
.
. Temp Site file definition
.---------------------------
.
.         Filename : bil22bxx.dat          (xx = port id)
.
SITEFIL1  IFILE     SQL, FIXED=4, KEY="U1-3"
.
.Name     Type     Size    Physical   Start       Description
.----     ----     ----    --------   -----       -----------
.OSTFILE  DIM       3         3         1         Site file prefix
.                    End of Record      4
.
. Future Action file definition
.---------------------------
.
.         Filename : bil22cxx.dat          (xx = port id)
.
FACTFIL1  IFILE     SQL, FIXED=19, KEY="U1-8,9-16"
.
.Name     Type     Size    Physical   Start       Description
.----     ----     ----    --------   -----       -----------
.DXVNUMB   DIM       8           8           1       Visit Number
XINVNO    DIM       8           8           9       Invoice Number
XPRTINV   DIM       1           1          17       Print Invoice (1=Yes)
XPRTLET   DIM       1           1          18       Print Letter (1=Yes)
.                    End of Record         19
.
.----------------------------------------------------------------------------
.         LOCAL VARIABLES DEFINITION
.----------------------------------------------------------------------------
.         LOCAL VARIABLES DEFINITION
.----------------------------------------------------------------------------
ADMISSNO  DIM       8
ADTYPE1   DIM       3                       * admission type - start
ADTYPE2   DIM       3                       * admission type - finish
BOTTMARG  FORM      2                       * bottom margin
CHOICE    DIM       2                       * option variable 
CLAIM1    DIM       3                       * claim code - start
CLAIM2    DIM       3                       * claim code - end
CLINFILE  DIM       8                       * clinic file name
CMDLINE   DIM       80                      * temp file command
CODE      DIM       2                       * category for PATCODKY
.CONAME    DIM      35
.COUNT     FORM      3
COUNTER   FORM      2                       * line counter        
CURRDATE  DIM       8                       * current date
CCENT1    DIM    2
CYEAR1    DIM    2
CMON1     DIM    2
CDAY1     DIM    2
CWEBDNAM  DIM    2
CWEBDNAI  DIM    1
.
DOWNCASE  INIT      "AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz"
DOCFNAME  DIM       50
DAYSDIFF  FORM   2
DOCTCODE  DIM     6
DNAME     DIM     20
DIM4      DIM       4
DIM5A     DIM       5
.DIM3      DIM       3
DIM14     DIM       14
DIM12     DIM       12
DIM12A    DIM       12
DIM18     DIM       18
.DIM20     DIM       20
DIM30A    DIM       30
DEXTN     DIM       2                       * date extension variable
.
DIM30     DIM       30
DIM70     DIM       70
DISDAT1   DIM       8                       * discharge date - start
DISDAT2   DIM       8                       * discharge date - end
DISPNAME  DIM       31                      * patient name display field
DISPSTRN  DIM       70
DSTATUS   DIM       1                       * deceased status
DUMMY     DIM       1
ENDSTR    FORM      2
FMTGNAME  DIM       35
FMTTITLE  DIM       10
FMTSNAME  DIM       35
FACODE1   DIM       3                       * future action code - start
FACODE2   DIM       3                       * future action code - end
FDATE1    DIM       8                       * fund payment date - start
FDATE2    DIM       8                       * fund payment date - end
FIOUTST   FORM      8.2                     * fund/insurer outstanding
FIRSTCH   FORM      1
FITOTL    FORM      8.2                     * fund/insurer total
.FORM3     FORM      3
.FORM82    FORM      8.2
.FORM8     FORM      8
.FORM12    FORM      12
.FORM12P2  FORM      12.2
FORM5     FORM      5
FORM8P2   FORM      8.2
FORM10    FORM      10
FORMDATE  DIM       19                      * formatted date
FUTDAT1   DIM       8                       * start future date
FUTDAT2   DIM       8                       * end future date
FACTFNAM  DIM       8                       * Future Action file name
GRANTOTL  FORM      8.2
.
HEALTHFD  DIM       6
INSURCOD  DIM       6
MISCCODE  DIM       9
HOSPITAL  DIM       3
HFPAYFLG  FORM      1
HJNL      DIM       2
HTMLFILE  FIFO      ASCII, FIXED=250
.
IPRINTER  DIM       6
INVOICEN  DIM       12
.IBCNUGST  FORM      1
.IBCNMHOS  FORM      1
IFLAG     FORM      1                       * indicator flag
.                                                    0 = no entries in temp file
.                                                    1 = entries in temp file
IGNORE    DIM       1                       * Ignore Ins Invs variable
INVDATE   DIM       8                       * Invoice date
INVAMNT   FORM      12.2
.
.
KEYA      DIM       8                       * keys for next/prev display
KEYB      DIM       8
KEYC      DIM       8
KEYD      DIM       8
KEYE      DIM       8
KEYF      DIM       8
KEYG      DIM       8
KEYH      DIM       8
KEYI      DIM       8
KEYJ      DIM       8
KEYK      DIM       8
KEYL      DIM       8
KEYM      DIM       8
KEYN      DIM       8
KEYO      DIM       8
KEYP      DIM       8
KEYQ      DIM       8
KEYR      DIM       8
.
LCODE     DIM       3                       * letter code
LCODE1    DIM       3                       * letter code - start
LCODE2    DIM       3                       * letter code - end
LDATE1    DIM       8                       * date last letter sent - start
LDATE2    DIM       8                       * date last letter sent - end
LEFTMARG  FORM      2                       * left margin
LETTDATE  DIM       10                      * date of letter
LETTER    DIM       3                       * letter code
LETTFORM  FORM      3                       * letter number
LETTLINE  FORM      3                       * line number
LINE      DIM       65
MENUTYPE  DIM       2
MAXSEPDY  FORM      "35"
MINBAL    FORM      6.2                     * minimum balance owing
MLETPLEN  FORM      3                       * letter page length
MODE      FORM      1                       * data extraction procedure
MTHNAM3   DIM       3
MBSNUM    FORM      "0"
MBS1      DIM       9
MBS2      DIM       9
MBS3      DIM       9
MBSDT1    DIM       8
MBSDT2    DIM       8
MBSDT3    DIM       8
MBSCH1    DIM       9
MBSCH2    DIM       9
MBSCH3    DIM       9
HDUFLG    FORM      "0"
LWCHG     FORM      6.2                     * Labour Ward Fee
LWDT      DIM       8
HDUDAY1   FORM      3                       * High Dependency
HDUDAY2   FORM      3
FHDUDT1   DIM       8
FHDUDT2   DIM       8
THDUDT1   DIM       8
THDUDT2   DIM       8
THEACHG   FORM      6.2                     * Theatre Fee
THEADTE   DIM       8
OTDT1     DIM       8                       * Other Items
OTDT2     DIM       8
OTCHG1    FORM      6.2
OTCHG2    FORM      6.2
OTDESC1   DIM       15
OTDESC2   DIM       15
OTFLG     FORM      "0"
SURGFLG   FORM      "0"
XDESC     DIM       30
.
MONTH     DIM       9                       * month variable
NAME35    DIM       35
.
QUESTFLG  FORM      1
.
PAYMPLAN  DIM       1
PATOUTST  FORM      8.2                     * total outstanding for patient
DEBTAGEN  FORM      8.2
PATTOTL   FORM      8.2                     * total paid by patient
PERCPOS   FORM      2
PHYSPAGE  FORM      3                       * physical page length
PPORTOTL  FORM      8.2                     * total patient portion
PRTSTRNG  DIM       70
PRNCOUNT  FORM      5                       * number of records printed counter
.
RCCNSTRF  DIM       1        * Display Statement Reference
.
REGIST8   DIM        2
REBTOTL   FORM      8.2                     * total rebate paid by fund/ins
RECRDCNT  FORM      5                       * total of records               
SERVDOCT  DIM       10
SAVKEY12  DIM       12
SCREEN    FORM      2                       * screen number
SELECTID  DIM       4
SENTDATE  DIM       8
SHNAME    DIM       6                       * short name
SHRTPAID  FORM      8.2
SHRTTOTL  FORM      8.2
SITEFNAM  DIM       8                       * Site file name
SNAME1    DIM       20                      * start surname
SNAME2    DIM       20                      * end surname
SRCHNUM   FORM      3
SRCHVAR   DIM       15
STARTSTR  FORM      2
SYSDIM    DIM       1                       * system type
SYSTEM    DIM       1                       * system type
.
TFFSAMNT  FORM      12.2
TEMP2     FORM      2
TEMP3     FORM      3
TEMP70    DIM       70
TEMPBILL  DIM       8                       * temp. billing #
TEMPCODE  DIM       3                       * temporary code variable
TEMPINV   FORM      8.2
TEMPJOUR  FORM      8.2 
TEMPFILE  DIM       8
TEMPLETT  DIM       3
TNUMB     FORM      2                       * numeric option variable
TOPMARG   FORM      2                       * top margin
TOTLINV2  FORM      8.2
TOTLJOUR  FORM      8.2
USERID    DIM       10                      * Input User ID
VISDAT1   DIM       8                       * visit date - start
VISDAT2   DIM       8                       * visit date - end
VISIT     DIM       8                       * visit number
+
.         Web Variables (only the include files use these variables)
.
DAYFORMT  DIM       4
NJAN      INIT      "January"
NFEB      INIT      "February"
NMAR      INIT      "March"
NAPR      INIT      "April"
NMAY      INIT      "May"
NJUN      INIT      "June"
NJUL      INIT      "July"
NAUG      INIT      "August"
NSEP      INIT      "September"
NOCT      INIT      "October"
NNOV      INIT      "November"
NDEC      INIT      "December"
.
.----------------------------------------------------------------------------
.         CONSTANTS
.----------------------------------------------------------------------------
CODEA     INIT      "A "                    * admission type category
CODEBT    INIT      "BT"
CODECL    INIT      "CL"                    * claim code category
CODEFA    INIT      "FA"                    * future action category
CODEP1    INIT      "P1"                    * PMI UDF1 category
CODEP2    INIT      "P2"                    * PMI UDF2 category
CODEP3    INIT      "P3"                    * PMI UDF3 category
CODES     INIT      "S "                    * referral source category
.
DAAE      INIT      "A&E"
DALIVE    INIT      "Alive"
DECEASED  INIT      "Deceased"
DEXT1     INIT      "st"
DEXT2     INIT      "nd"
DEXT3     INIT      "rd"
DEXT4     INIT      "th"
DFINISH   INIT      "Finish"
DINPT     INIT      "Inpatient"
DOUTPT    INIT      "Outpatient"
DSTART    INIT      "Start"
.ERASE     INIT      "iserase "
.ISBUILD   INIT      "isbuild "
LWCODE    INIT      "LW"
OTCODE    INIT      "OT"
.
.            Letter Constants
.
LCPAGE    INIT      "%page"          * Page Break
LCADCFUL  INIT      "%adcful"        * Doctor full name
LCADCGIV  INIT      "%adcgiv"        * Doctor given names
LCADCINI  INIT      "%adcini"        * Doctor first initial
LCADCSUR  INIT      "%adcsur"        * Doctor surname                       *5
LCADCTTL  INIT      "%adcttl"        * Doctor title
LCADDA    INIT      "%adda"          * Patient address line 1
LCADDB    INIT      "%addb"          * Patient address line 2
LCADDC    INIT      "%addc"          * Patient address line 3
LCATYPE   INIT      "%atype"         * Admission type                       *10
LCBTELE   INIT      "%btele"         * Business telephone
LCCLMCOD  INIT      "%clmcod"        * Claim code
LCCURDAT  INIT      "%curdat"        * Current date
LCDDATE   INIT      "%ddate"         * Discharge date
LCDOB     INIT      "%dob"           * Date of birth                        *15
LCFRSTI   INIT      "%frsti"         * First initial
LCFULLN   INIT      "%fulln"         * Full name
LCGIVN    INIT      "%givn"          * Given names
LCHADDA   INIT      "%hadda"         * Hospital postal address line 1
LCHADDB   INIT      "%haddb"         * Hospital postal address line 2       *20
LCHFMEM   INIT      "%hfmem"         * Health fund membership number
LCHFTAB   INIT      "%hftab"         * Health fund table
LCHFUND   INIT      "%hfund"         * Health fund
LCHOSP    INIT      "%hosp"          * Hospital name
LCHOSTEL  INIT      "%hostel"        * Hospital telephone number            *25
LCHPOST   INIT      "%hpost"         * Hospital postal postcode
LCISUM    INIT      "%isum"          * Invoice summary
LCLETDAT  INIT      "%letdat"        * Date of letter (input at printing)
LCLLTDTE  INIT      "%lltdte"        * Date of last financial letter sent
LCLSTDTE  INIT      "%lstdte"        * Last invoice date for visit          *30
LCLSTINV  INIT      "%lstinv"        * Last invoice number for visit
LCLSTLET  INIT      "%lstlet"        * Desc. of last financial letter sent
LCMEDI    INIT      "%medi"          * Medicare number
LCPATOUT  INIT      "%patout"        * Total amount outst. for pat. for visit
LCPATPOR  INIT      "%patpor"        * Total pt. portion for inv. for visit 
LCPOST    INIT      "%post"          * Patient postcode                     *36 
LCPRAAA   INIT      "%praaa"         * P.R.A. address line 1
LCPRAAB   INIT      "%praab"         * P.R.A. address line 2
LCPRAAC   INIT      "%praac"         * P.R.A. address line 3
LCPRABT   INIT      "%prabt"         * P.R.A. business number               *40
LCPRANM   INIT      "%pranm"         * P.R.A. name
LCPRAPC   INIT      "%prapc"         * P.R.A. postcode
LCPRAPT   INIT      "%prapt"         * P.R.A. private number
LCPTELE   INIT      "%ptele"         * Private telephone
LCPUSRA   INIT      "%pusra"         * PMI user defined field 1             *45
LCPUSRB   INIT      "%pusrb"         * PMI user defined field 2
LCPUSRC   INIT      "%pusrc"         * PMI user defined field 3
LCREBOUT  INIT      "%rebout"        * Total amt. O/S for fund/ins for visit
LCREBPOR  INIT      "%rebpor"        * Total reb. portion for inv. for visit
LCREFERL  INIT      "%referl"        * Referral source                      *50
LCSURN    INIT      "%surn"          * Surname
LCTITLE   INIT      "%title"         * Title
LCTOTINV  INIT      "%totinv"        * Total amt of invoices for visit
LCTOTJNL  INIT      "%totjnl"        * Total amt journalled for visit
LCTOTOUT  INIT      "%totout"        * Total amount outstanding for visit   *55 
LCTPATPY  INIT      "%tpatpy"        * Total amount paid by patient for visit
LCTREBPY  INIT      "%trebpy"        * Total amt. paid by fund/ins for visit
LCURNO    INIT      "%urno"          * U/R number
LCVDATE   INIT      "%vdate"         * Visit date
LCVISIT   INIT      "%visit"         * Visit number                         *60
LCCTELE   INIT      "%ctele"         * Cellular Phone Number
LCPADDA   INIT      "%padda"         * Postal address line 1
LCPADDB   INIT      "%paddb"         * Postal address line 2
LCPADDC   INIT      "%paddc"         * Postal address line 3
LCPADDD   INIT      "%paddd"         * Postal address line 4                *65
LCPPOST   INIT      "%ppost"         * Postal Post Code       
LCADDD    INIT      "%addd"          * Patient address line 4
LCPRAAD   INIT      "%praad"         * P.R.A. address line 4
LCHADDC   INIT      "%haddc"         * Hospital postal address line 3
LCHADDD   INIT      "%haddd"         * Hospital postal address line 4       *70
LCHFAXN   INIT      "%hfaxn"         * Hospital fax number 
LCHOSID   INIT      "%hospid"        * Hospital id
LCCURDTN  INIT      "%curdtn"        * Current Date no extension
LCBPAYRN  INIT      "%bpaycrn"       * BPAY Number for last invoice
LCBOLDON  INIT      "%boldon"        * Bold print on                        *75
LCBOLDOF  INIT      "%boldoff"       * Bold print off
LCUNDLON  INIT      "%ulineon"       * Underline print on
LCUNDLOF  INIT      "%ulineoff"      * Underline print off
LCFPATAD  INIT      "%fpatad"        * Full Patient address
LCFPRFAD  INIT      "%fpraad"        * Full PRA address                     *80
LCFPOSAD  INIT      "%fposad"        * Full Postal address
LCDEBAGN  INIT      "%debagn"        * Pat.Reassign for Debt Collection Agent
LCPATREA  INIT      "%patrea"        * Pat.Reassign
LCAMTRPY  INIT      "%amtrpy"        * Amount to be Repaid
LCFRQPAY  INIT      "%frepay"        * Frequency of Payment                 *85
LCFSTINV  INIT      "%fstinv"        * First invoice number for visit
LCCURINV  INIT      "%curinv"        * Current invoice number for visit
LCMEDEXP  INIT      "%medexp"        * Medicare Expiry Date
LCMEDIRN  INIT      "%mxmccd"        * Medicare IRN
LCPROVNO  INIT      "%provno"        * Attending Dr Prov Number             *90
LCVDATEN  INIT      "%vdaten"        * Visit date
LCDDATEN  INIT      "%ddaten"        * Discharge date
LCHCPPRV  INIT      "%hcpprva"       * Doctor's Provider number
LCMCEXDT  INIT      "%mcexpdat"      * Medicare Expiry date
LCFHOSPD  INIT      "%fhospd"        * Hospital full address                *95
LCHFUNDC  INIT      "%hfundc"        * Health fund code
LCCLCODC  INIT      "%clmcodec"      * claim code
LCPXSN18  INIT      "%secraddr"      * Secure Address            
LCPXSN19  INIT      "%verfaddr"      * Verified Address          
LCPXSN20  INIT      "%multbirt"      * Multiple Birth Indicator             *100
LCPXSN21  INIT      "%emailval"      * Email Validation Flag     
LCPXSN22  INIT      "%statusbb"      * Status Indicator 22       
LCPXSN23  INIT      "%statusbc"      * Status Indicator 23       
LCPXSN24  INIT      "%statusbd"      * Status Indicator 24       
LCPXSN25  INIT      "%statusbe"      * Status Indicator 25                  *105
LCPXSN26  INIT      "%statusbf"      * Status Indicator 26  
LCPXSN27  INIT      "%statusbg"      * Status Indicator 27  
LCPXSN28  INIT      "%statusbh"      * Status Indicator 28  
LCPXSN29  INIT      "%statusbi"      * Status Indicator 29 
LCPXSN30  INIT      "%statuscz"      * Status Indicator 30                  *110
.
LXPAGE    INIT      "  -----              Page Break              -----  "
LXADCFUL  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXADCGIV  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXADCINI  INIT      "X"
LXADCSUR  INIT      "XXXXXXXXXXXXXXXXXXXX"                                  *5
LXADCTTL  INIT      "XXXXXXXXX"
LXADDA    INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXADDB    INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXADDC    INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXADDD    INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"                   *10 
LXATYPE   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXBTELE   INIT      "XXXXXXXXXXXX"
LXCLMCOD  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXCURDAT  INIT      "99th XXXXXXXXX 1999"                                   
LXDDATE   INIT      "99th XXXXXXXXX 1999"                                   *15
LXDOB     INIT      "99th XXXXXXXXX 1999"
LXFRSTI   INIT      "X"
LXFULLN   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXGIVN    INIT      "XXXXXXXXXXXXXXXXXXXXXXXXX"
LXHADDA   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"                        *20
LXHADDB   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXHADDC   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXHADDD   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXHFAXN   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXHOSID   INIT      "XXX"                                                   *25
LXHFMEM   INIT      "9999999999999999999"
LXHFTAB   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXHFUND   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXHOSP    INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXHOSTEL  INIT      "XXXXXXXXXXXX"                                          *30 
LXHPOST   INIT      "XXXX"
LXISUM    INIT      "  -----            Invoice Summary            -----  "
LXLETDAT  INIT      "99th XXXXXXXXX 9999"
LXLLTDTE  INIT      "99/99/1999"
LXLSTDTE  INIT      "99/99/99"                                              *35  
LXLSTINV  INIT      "99999999"
LXLSTLET  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXMEDI    INIT      "9999999999"
LXPATOUT  INIT      "99999999.99"
LXPATPOR  INIT      "99999999.99"                                           *40
LXPOST    INIT      "XXXX"
LXPRAAA   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPRAAB   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPRAAC   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPRAAD   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"                   *45 
LXPRABT   INIT      "XXXXXXXXXXXX"
LXPRANM   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPRAPC   INIT      "XXXX"
LXPRAPT   INIT      "XXXXXXXXXXXX"
LXPTELE   INIT      "XXXXXXXXXXXX"                                          *50
LXPUSRA   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXPUSRB   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXPUSRC   INIT      "XXXXXXXXXXXXXXXXXXXX"
LXREBOUT  INIT      "99999999.99"
LXREBPOR  INIT      "99999999.99"                                           *55
LXREFERL  INIT      "XXXXXXXXXXXXXXXXXXXX"
LXSURN    INIT      "XXXXXXXXXXXXXXXXXXXX"
LXTITLE   INIT      "XXXX"
LXTOTINV  INIT      "99999999.99"
LXTOTJNL  INIT      "99999999.99"                                           *60
LXTOTOUT  INIT      "99999999.99"
LXTPATPY  INIT      "99999999.99"
LXTREBPY  INIT      "99999999.99"
LXURNO    INIT      "99999999"
LXVDATE   INIT      "99th XXXXXXXXX 1999"                                   *65
LXVISIT   INIT      "99999999"
LXCELL    INIT      "XXXXXXXXXXXXXXXXXXXX"
LXPADDA   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPADDB   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPADDC   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"                   *70
LXPADDD   INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXPPOST   INIT      "XXXXXXXX"
LXCURDTN  INIT      "99 XXXXXXXXX 1999"
LXBPAYRN  INIT      "XXXXXXXXXXXXXXX"
LXBOLDON  INIT      033,"G"                                                 *75
LXBOLDOF  INIT      033,"H"
LXUNDLON  INIT      033,"-",001
LXUNDLOF  INIT      033,"-",000
LXFPATAD  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXFPRFAD  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXFPOSAD  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
LXDEBAGN  INIT      "99999999.99"
LXPATREA  INIT      "99999999.99"
LXAMTRPY  INIT      "99999999.99"
LXFRQPAY  INIT      "XXXXXXXXXXXXXXXXXXXX"           * Frequency of Payment *85
LXFSTINV  INIT      "99999999"
LXCURINV  INIT      "99999999"
LXMEDEXP  INIT      "99/99/9999"                     * Medicare Expiry Date
LXMEDIRN  INIT      "XX"                             * Medicare IRN 
LXPROVNO  INIT      "9999999999"                     * Attending Dr Prov No *90
LXVDATEN  INIT      "99/99/9999"
LXDDATEN  INIT      "99/99/9999"
LXHCPPRV  INIT      "9999999999"                     * HCP Provider No
LXMCEXDT  INIT      "99/99"                          * Medicare Exp date
LXFHOSPD  INIT      "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"                                          * Hospital Full address
LXHFUNDC  INIT      "XXXXXX"                         * Health Fund          *96
LXCLCODC  INIT      "XXX"                            * Claim Code           *97
LXPXSN18  INIT      "X"
LXPXSN19  INIT      "X"
LXPXSN20  INIT      "X"                                                     *100
LXPXSN21  INIT      "X"
LXPXSN22  INIT      "X"
LXPXSN23  INIT      "X"
LXPXSN24  INIT      "X"
LXPXSN25  INIT      "X"                                                     *105
LXPXSN26  INIT      "X"
LXPXSN27  INIT      "X"
LXPXSN28  INIT      "X"
LXPXSN29  INIT      "X"
LXPXSN30  INIT      "X"                                                     *110
.
MONTH1    INIT      "January"
MONTH2    INIT      "February"
MONTH3    INIT      "March"
MONTH4    INIT      "April"
MONTH5    INIT      "May"
MONTH6    INIT      "June"
MONTH7    INIT      "July"
MONTH8    INIT      "August"
MONTH9    INIT      "September"
MONTH10   INIT      "October"
MONTH11   INIT      "November"
MONTH12   INIT      "December"
.
SP14      INIT      "              "
NINES     INIT      "99999999"                   * finish date
REPSTR    INIT      "a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0"
SPECCHAR  INIT      "%"
STAR58    INIT      "**********************************************************"
SUMHEAD   INIT      " Invoice ##   Date     Inv Total        Paid    Journals":
                    "     Outstanding"
TYPEAE    INIT      "AE"
TYPEIP    INIT      "IP"
TYPEOP    INIT      "OP"
TKEY      INIT      " 64 U1-8"
ZEDS      INIT      "zzzzzzzzzzzzzzzzzzzz"
DZERO8    INIT      "00000000"
DZERO4    INIT      "0000"
.
PRGID     INIT      "IBABIL22"
PRGNAM    INIT      "Print Financial Letters"
VERSION   INIT      "V12.00.04"
+
.**************************************************************************
.*                              MAINLINE                                  *
.*                            Controlling Logic                           *
.**************************************************************************
ML0000    CALL      INIT0000               * initialization and open files
.
.         MATCH     "IBARSH",PGM
.         GOTO      ML5000 IF EQUAL
          GOTO      ML5000
.   
.         CALL      CRTV0000               * create visit temp file
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * exit selected - chain back
.
          CALL      SCRN0000               * display input screen
.
ML2000    CALL      CLR0000                * clear selection variables
ML3000    CALL      CTMP0000               * clear temp file records 
.
          CALL      PROC0000               * get records for printing
          BRANCH    EXIT,ML0100:           * (E)xit selected - get next option
                         ML2000:           * (C)ancel
                         ML3000            * redisplay selection screen
.
          CALL      PRIN0000               * print letters
          GOTO      ML3000                 * redisplay selection screen
.
ML5000    CALL      OPTW0000
          BRANCH    OPTION,ML6000,ML7000,ML8000,ML8200,ML8300,ML8300
          GOTO      ML9999
.
ML6000    CALL      SELW0000
          BRANCH    EXIT,ML9999
.
          CALL      DELW0000
          CALL      SETW0000
          CALL      EXTR0000
          GOTO      ML9999
.
ML7000    CALL      SELW0000
          CALL      SENW0000
          GOTO      ML9999
.
ML8000    CALL      DSEL0000
          BRANCH    EXIT,ML9999
.
          CALL      DELW0000
          GOTO      ML9999
.
ML8200    CALL      PLET0000
          GOTO      ML9999
.
ML8300    CALL      FADS0000               * Keyin range of Future Action date
          CALL      KFAC0000               * Keyin future action
          CALL      LETT0000               * Keyin Letter Number to Send
          CALL      IPRT0000               * Keyin Invoice printer
.
          CALL      GUSR0000               * keyin web user id
          BRANCH    EXIT,ML9999
          CALL      LPAT0000               * Load patients
          CALL      PRTN0000               * Print Future action letters/invoice
.
ML9999    CALL      KILS0000               * remove temp file
          CALL      KILV0000               * remove temp file
          CALL      KILF0000               * remove temp file
          CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000                                  *
.*                             initialization                               *
.*  The initialization routine is used to display headings and open files.  *
.*  Any other general initialization can also be performed here.            *
.****************************************************************************
INIT0000  CALL      DISPHEAD 
.
          DISPLAY   *P56:24,"Opening ":
                    *P64:24,"aaede1af";          * A&E file
          OPEN      AAEDE1A1,"aaede1af"
          OPEN      AAEDE1A3,"aaede1af"
.
          DISPLAY   *P64:24,"outsitaf";          * outpatient sites file A
          OPEN      OUTSITA1,"outsitaf"
.
          DISPLAY   *P64:24,"patcodes";          * codes file
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patdo1af";          * doctors file
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P64:24,"patdschf";          * discharge file
          OPEN      PATDSCH1,"patdschf"
          OPEN      PATDSCH2,"patdschf"
.
          DISPLAY   *P64:24,"patdtraf";
          OPEN      PATDTRA1,"patdtraf"
          OPEN      PMSMTIA1,"pmsmtiaf"
.
          DISPLAY   *P64:24,"patfactf";          * future action file
          OPEN      PATFACT1,"patfactf"
          OPEN      PATFACT2,"patfactf"
.
          DISPLAY   *P64:24,"patfltrf";          * financial letter file
          OPEN      PATFLET1,"patfltrf"
          OPEN      PATFLET2,"patfltrf"
.
          DISPLAY   *P64:24,"patfn1af";          * health fund file
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"patinvrf";          * invoice file
          OPEN      PATINVR1,"patinvrf"
          OPEN      PATINVR3,"patinvrf"
          OPEN      PATINVR4,"patinvrf"
.
          DISPLAY   *P64:24,"patlhisf";          * letter history file
          OPEN      PATLHIS1,"patlhisf"
          OPEN      PATLHIS2,"patlhisf"
.
          DISPLAY   *P64:24,"patma1af";          * patient master file
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"          * master extension file
          OPEN      PMSPX2A1,"pmspx2af"          * second extension file
.
          DISPLAY   *P64:24,"pathspaf";
          OPEN      PATHSPA1,"pathspaf"
.
          DISPLAY   *P64:24,"patmi1af";          * admission file
          OPEN      PATMI1A1,"patmi1af"
          OPEN      PATMI1A3,"patmi1af"
.
          DISPLAY   *P64:24,"patremdf";          * reminder file
          OPEN      PATREMD1,"patremdf"
.
          DISPLAY   *P64:24,"patre1af";          * person resp. for a/c file
          OPEN      PATRE1A1,"patre1af"
.
          DISPLAY   *P64:24,"patvisaf";          * visits file
          OPEN      PATVISA1,"patvisaf"
.
          DISPLAY   *P64:24,"pmsvx1af";          * visits file
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"aaedtref";          * A&E Debtors Transaction
          OPEN      AAEDTRE1,"aaedtref"
.
          DISPLAY   *P64:24,"pmshcpaf";          * Healthcare Professional
          OPEN      PMSHCPA1,"pmshcpaf"
.
          OPEN      RCPREGA1,"rcpregaf"
          OPEN      RCPDTEA3,"rcpdteaf"
          OPEN      RCPBNKA1,"rcpbnkaf"
          OPEN      PATPFAA1,"patpfaaf"
          OPEN      PATFAPA1,"patfapaf"
          OPEN      PATWC1A1,"patwc1af"
          OPEN      EMRVISA1,"emrvisaf"
.
          OPEN      PATRASA1,"patrasaf"
          OPEN      IBAPOLA1,"ibapolaf"
          OPEN      WEBSECA1,"websecaf"
.          
          DISPLAY   *P64:24,"controlf";          * control file
          OPEN      CONTROLF,"controlf"
.
          MOVE      ZERO,CKYIMAND
          MOVE      ZERO,CHIGHLT
          MOVE      SP3,CKYIDEF3
.
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          READ      CONTROLF,TEN;*66,CINVLAY,*79,CAPPRVNO,*94,CAGECOFF
          READ      CONTROLF,TWENTY1;*237,PTCNPAOF
          READ      CONTROLF,TEN3;CHADD1,CHADD2,CHPOST:
                                      CHPADD1,CHPADD2,CHPPOST,CHTELEB
          READ      CONTROLF,TEN4;CNOCLMS,CINMES1:
                                      CINMES2
          READ      CONTROLF,TEN9;*212,CFEETYP
          READ      CONTROLF,TWENTY1;*44,PTCNIDES:
                                     *51,PTCNINVL,*200,PTCNICRA,*237,PTCNPAOF
          READ      CONTROLF,EIGHTY;*248,PTCNPEFR
          READ      CONTROLF,HUND03;*220,PTCNDEES,*221,PTCNDDES
          READ      CONTROLF,NINTY8;*136,PTCNPAIH,*142,PTCNPAIT,*148,PTCNINVB
          READ      CONTROLF,HUND03;*220,PTCNDEES,*221,PTCNDDES
          READ      CONTROLF,HUND05;*177,PTCNTFEE:
                                    *195,PTCNLASR
          READ      CONTROLF,HUND18;*138,PTCNNEWC
          READ      CONTROLF,HUND30;*1,PTCNHABN
.
          MATCH     "1",PTCNNEWC
          IF        @EQUAL
            DISPLAY   *P64:24,"pmscexaf";
            OPEN      PMSCEXA1,"pmscexaf"
          ENDIF
.
          OPEN      PMSLTFA1,"pmsltfaf"
          OPEN      PMSLLFA1,"pmsllfaf"
          OPEN      PATDETA2,"patdetaf"
          OPEN      PATWR1A1,"patwr1af"
          OPEN      PATTRAN2,"pattranf"
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,SITEFNAM
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,TEMPFILE
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FACTFNAM
.
INIT9999  RETURN
+
.******************************************************************************
.* CRTS0000   : Create temporary file for site prefixes                       *
.* Called by  : GREC0000
.******************************************************************************
CRTS0000  CALL      KILS0000                 * make sure old file is not there
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    SITEFNAM,CMDLINE
          APPEND    " 4 U1-3",CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      SITEFIL1,SITEFNAM
.
CRTS9999  RETURN
+
.******************************************************************************
.* KILS0000   : Remove temporary file for site prefixes                       *
.* Called by  : CRTS0000,     
.******************************************************************************
KILS0000  CLOSE     SITEFIL1
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    SITEFNAM,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
KILS9999  RETURN
+
.******************************************************************************
.* SITE0000   : Load temporary file with site prefixes                        *
.* Called by  : 
.******************************************************************************
SITE0000  MOVE      SP6,KEY6
          CALL      RDSSITA1
SITE1000  CALL      RDKSITA1
          BRANCH    OVRCD,SITE9999
.
          MOVE      OSTFILE,KEY3             * file prefix for this site
          CALL      RDSITMP1                 * already on temp file ?
          IF        OVRCD = 1
            CALL      WRSITMP1               * no, add to temp file
          ENDIF
          GOTO      SITE1000
.
SITE9999  RETURN
+
.******************************************************************************
.* OPOP0000   : Open outpatient files                                         *
.* Called by  : GREC0000
.* Inputs     : OSTFILE - Outpatient site prefix.                             *
.* Returns    : OVRCD   - 0 if files openned, 1 if open failed                *
.******************************************************************************
OPOP0000  CLOSE     OUTBB1A1                 * close index
          CLOSE     OUTBB1A2                 * close index
          MOVE      ZERO,OVRCD               * initialise flag
          TRAP      OVERCOND IF IO           * set flag if IO error occurs
          PACK      CFNAME,OSTFILE,FILBB1A1  * file to be openned
          CALL      OPOTBB11
          PACK      CFNAME,OSTFILE,FILBB1A2  * file to be openned
          CALL      OPOTBB12
          TRAPCLR   IO                       * clear IO trap
          BRANCH    OVRCD,OPOP9999           * open failed, ignore prefix
.
OPOP9999  RETURN
+
.****************************************************************************
.*                                OPTN0000                                  *
.*                        get user options or exit                          *
.****************************************************************************
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Print Financial Letters":
                    *P1:7,"Select Option : ";
.
OPTN1000  KEYIN     *P17:7,*EL,*DV,UNDLN1,*P17:7,*V2LON,COPTION;
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * option 1
          BEEP                                   * invalid selection
          GOTO      OPTN1000
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.**********************************************************************
.*                            OPTW0000                                *
.*                  Main Option Screen for Web                        *
.**********************************************************************
.
OPTW0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = Select Inpatients":
                    *P1:6,*V2LON,"2",*HOFF," = Print Inpatient Letters":
                    *P1:7,*V2LON,"3",*HOFF," = Delete Selected Patients":
                *P1:8,*V2LON,"4",*HOFF," = Print Letter for a Selected Patient":
                    *P1:9,*V2LON,"5",*HOFF," = Future Action Letters":
                   *P1:10,*V2LON,"6",*HOFF," = Future Action Re-print Invoice":
                    *P1:11,"Select Option : ";
.
OPTW1000  KEYIN     *P17:11,*DV,UNDLN1,*P17:11,*V2LON,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      OPTW9000 IF EQUAL
.
          BRANCH    OPTION,OPTW2000,OPTW2000,OPTW2000,OPTW2000,OPTW2000:
                           OPTW2000
.
          BEEP
          GOTO      OPTW1000
.
OPTW2000  MOVE      FALSE,EXIT
          GOTO      OPTW9999
.
OPTW9000  MOVE      TRUE,EXIT
.
OPTW9999  RETURN
.
.***************************************************************************
.*                                SCRN0000             Called by:          *
.*                     display the input screen                            *
.***************************************************************************
SCRN0000  DISPLAY   *P1:3,*EF,*P2:4,*V2LON,ONE,*HOFF,". Visit Dates":
                    *P27:4,COLON:
                    *P2:5,*V2LON,TWO,*HOFF,". Discharge Dates":
                    *P27:5,COLON:
                    *P2:6,*V2LON,THREE,*HOFF,". Surnames":
                    *P27:6,COLON:
                    *P2:7,*V2LON,FOUR,*HOFF,". Last Letter Sent":
                    *P27:7,COLON:
                    *P2:8,*V2LON,FIVE,*HOFF,". Dates Last Letter Sent":
                    *P27:8,COLON:
                    *P2:9,*V2LON,SIX,*HOFF,". Future Action Codes":
                    *P27:9,COLON:
                    *P2:10,*V2LON,SEVEN,*HOFF,". Future Action Dates":
                    *P27:10,COLON:
                    *P2:11,*V2LON,EIGHT,*HOFF,". Claim Codes":
                    *P27:11,COLON:
                    *P2:12,*V2LON,NINE,*HOFF,". Admission Types":
                    *P27:12,COLON:
                    *P1:13,*V2LON,TEN,*HOFF,". Minimum Balance Owing":
                    *P27:13,COLON:
                    *P1:14,*V2LON,TEN1,*HOFF,". Ignore Ins. Invs (Y/N)":
                    *P27:14,COLON:
                    *P1:15,*V2LON,TEN2,*HOFF,". Fund Payment Dates":
                    *P27:15,COLON:
                    *P1:16,*V2LON,TEN3,*HOFF,". Deceased Status":
                    *P27:16,COLON:
                    *P1:17,*V2LON,TEN4,*HOFF,". System":
                    *P27:17,COLON
.
SCRN9999  RETURN
+
.**********************************************************************
.*                            SELW0000                                *
.*                      Read Web Range Parameters                     *
.**********************************************************************
.
SELW0000  DISPLAY   *P1:3,*EF:
                    *P1:9,*V2LON,"Enter Selection ID :"
.
SELW1000  KEYIN     *P22:9,*DV,UNDLN1,*P22:9,*V2LON,SELECTID;
.
          MATCH     SP70,SELECTID
          GOTO      SELW9000 IF EQUAL
.
          PACK      KEY4,SELECTID,SP70
          CALL      RDPMLTF1
          IF        OVRCD = 0
            GOTO      SELW2000
          ENDIF
.
          BEEP
          GOTO      SELW1000
.
SELW2000  MOVE      FALSE,EXIT
          GOTO      SELW9999
.
SELW9000  MOVE      TRUE,EXIT
.
SELW9999  RETURN
.
.**********************************************************************
.*                            DELW0000                                *
.*  Remove all selected patients from selection file for web          *
.**********************************************************************
DELW0000  PACK      KEY12,SELECTID,SP70
          CALL      RSPMLLF1
DELW1000  CALL      RKPMLLF1
          BRANCH    OVRCD,DELW9999
.
          MATCH     SELECTID,PMLLSEID
          GOTO      DELW9999 IF NOT EQUAL
.
          MATCH     "1",PMLLSTAT            * Skip if status is deleted
          GOTO      DELW1000 IF EQUAL
.
          PACK      KEY12,PMLLSEID,PMLLVISN,SP70
          CALL      DEPMLLF1
.
          CALL      RSPMLLF1
          GOTO      DELW1000
.
DELW9999  RETURN
.
.**********************************************************************
.*                            DSEL0000                                *
.*                                                                    *
.**********************************************************************
.
DSEL0000  DISPLAY   *P1:3,*EF:
                    *P1:9,*V2LON,"Enter Selection ID :"
.
DSEL1000  KEYIN     *P22:9,*DV,UNDLN1,*P22:9,*V2LON,SELECTID;
.
          MATCH     SP70,SELECTID
          GOTO      DSEL9000 IF EQUAL
.
DSEL2000  MOVE      FALSE,EXIT
          GOTO      DSEL9999
.
DSEL9000  MOVE      TRUE,EXIT
.
DSEL9999  RETURN
+
.**********************************************************************
.*                            SETW0000                                *
.* Set up selection variables from the selection id file for web      *
.**********************************************************************
SETW0000  PACK      VISDAT1,PMLTVDFR,SP10  
          PACK      VISDAT2,PMLTVDTO,SP10  
          PACK      DISDAT1,PMLTDDFR,SP10  
          PACK      DISDAT2,PMLTDDTO,SP10  
.
          PACK      SNAME1,PMLTSNFR,SP20
          MATCH     SP20,SNAME1
          IF        !@EQUAL
            STRIP     SNAME1                * For matching purpose
          ENDIF
.
          PACK      SNAME2,PMLTSNTO,SP20
          MATCH     SP20,SNAME2
          IF        !@EQUAL
            STRIP     SNAME2                * For matching purpose
          ENDIF
.
          PACK      LCODE1,PMLTLLFR,SP3   
          PACK      LCODE2,PMLTLLTO,SP3   
          PACK      LDATE1,PMLTLDFR,SP10  
          PACK      LDATE2,PMLTLDTO,SP10  
          PACK      FACODE1,PMLTFCFR,SP3   
          PACK      FACODE2,PMLTFCTO,SP3   
          PACK      FUTDAT1,PMLTFDFR,SP10  
          PACK      FUTDAT2,PMLTFDTO,SP10  
          PACK      CLAIM1,PMLTCCFR,SP3   
          PACK      CLAIM2,PMLTCCTO,SP3   
          PACK      ADTYPE1,PMLTATFR,SP3   
          PACK      ADTYPE2,PMLTATTO,SP3   
          MOVE      PMLTOAMT,MINBAL
          PACK      IGNORE,PMLTIIIN,SP1
          PACK      FDATE1,PMLTPDFR,SP10  
          PACK      FDATE2,PMLTPDTO,SP10  
          PACK      DSTATUS,PMLTDSTT,SP1
          PACK      SYSTEM,PMLTSYST,SP1
          PACK      HOSPITAL,PMLTMHOS,SP1
          PACK      HEALTHFD,PMLTHFUN,SP70
          PACK      INSURCOD,PMLTINSR,SP70
          PACK      MISCCODE,PMLTMISC,SP70
          PACK      PAYMPLAN,PMLTPPLN,SP70
.
SETW9999  RETURN
.
.**********************************************************************
.*                            EXTR0000                                *
.*                   Extract Patients from Files                      *
.**********************************************************************
.
EXTR0000  MOVE      ZERO,IFLAG
          MOVE      ZERO,MODE                    * initialise extraction mode
          MOVE      ZERO,RECRDCNT
          MOVE      ZERO,HFPAYFLG
          CALL      GREC0000                     * get matching records
.
          PACK      SELECTID,SELECTID,SP10       
          PACK      KEY4,SELECTID,SP70
          CALL      RDPMLTF1                     * Record exists?
          BRANCH    OVRCD,EXTR9999
.
          MOVE      RECRDCNT,PMLTRCNT            * Write number of record 
          PACK      PMLTUDAT,CCC,CYY,CMM,CDD
          REP       " 0",PMLTUDAT
          CLOCK     TIME,PMLTUTIM
          CALL      UPPMLTF1
.
EXTR9999  RETURN
.
.**********************************************************************
.*                            SENW0000                                *
.*                    Send Letter to Patients                         *
.**********************************************************************
.
SENW0000  CALL      LETT0000                * Keyin Letter Number to Send
          BRANCH    EXIT,SENW9000
.
SENW1000  CALL      DATE0000                * Keyin Letter Date
.
          CALL      PRNT0000                * Print Patient Letters
.
SENW9000  MOVE      TRUE,EXIT
          GOTO      SENW9999
.
SENW9500  MOVE      FALSE,EXIT
          GOTO      SENW9999
.
SENW9999  RETURN
.
.**********************************************************************
.*                            PLET0000                                *
.*                    Send Letter to a Patient                        *
.**********************************************************************
PLET0000  CALL      KVIS0000               * Keyin Visit number
          BRANCH    EXIT,PLET9999
          MOVE      VISIT,PMLLVISN
.
          CALL      LETT0000               * Keyin Letter No
          BRANCH    EXIT,PLET9999
.
          CALL      DATE0000               * Keyin Letter Date
.
          CALL      CONS0000                * Set Up the Constant % Variables
.
          CALL      STWP0000                * Set up the Actual % Variables
          BRANCH    EXIT,PLET9999
.
          CALL      PRLT0000                * Print the Actual Letter
.
          CALL      UPTR0000                * Update history
.
PLET9999  RETURN
+
.**********************************************************************
.                  Keyin Visit Number
.**********************************************************************
KVIS0000  MOVE      ZEROVISN,VISIT
          DISPLAY   *P1:9,*EF:
                    *P1:9,"Visit Number  : ";
.
KVIS1000  KEYIN     *P17:9,*DV,UNDLN8,*P17:9,*V2LON,*JR,VISIT;
          MATCH     ZEROVISN,VISIT
          GOTO      KVIS9000 IF EQUAL
.
          MOVE      VISIT,KEY8
          CALL      RDVISA1
          BRANCH    OVRCD,KVIS9000
.
          MOVE      ZERO,EXIT
          GOTO      KVIS9999
.
KVIS9000  MOVE      ONE,EXIT
KVIS9999  RETURN
+
.**********************************************************************
.*                            LETT0000                                *
.*                 Keyin Letter Number to be Sent                     *
.**********************************************************************
.
LETT0000  MOVE      TRUE,QUESTFLG
.
LETT0500  DISPLAY   *P1:11,*EF:
                    *P1:11,"Letter Number : ";
.
LETT1000  KEYIN     *P17:11,*DV,UNDLN3,*P17:11,*V2LON,*JR,TEMPLETT;
.
          ENDSET    TEMPLETT
          APPEND    SP3,TEMPLETT
          RESET     TEMPLETT
.
          MATCH     SP3,TEMPLETT
          GOTO      LETT9000 IF EQUAL
.
          MATCH     "  ?",TEMPLETT
          GOTO      LETT5000 IF EQUAL
.
          TYPE      TEMPLETT
          GOTO      LETT8000 IF NOT EQUAL
.
          PACK      KEY6,TEMPLETT,SP2,ZERO  * Get Header Record
          CALL      RDPTFL1
          BRANCH    OVRCD,LETT8100
.
          MOVE      TEMPLETT,LETTFORM
.
          BRANCH    QUESTFLG,LETT2000
          PUTSCR    3
.
LETT2000  DISPLAY   *P1:11,*EL,"Letter : ",*V2LON,PTFLTEXT;
.
          MOVE      FALSE,EXIT
          GOTO      LETT9999
.
LETT5000  CALL      LETQ0000                * Letter Code Question Mark Option
          GOTO      LETT0500
.
LETT8000  BEEP
          GOTO      LETT1000
.
LETT8100  DISPLAY   *P1:24,*EL,*B,"Letter Not on File - Hit <":
                               *V2LON,"ENTER",*HOFF,"> to Continue ";
          KEYIN     *EOFF,ANS;
          DISPLAY   *P1:24,*EL;
.
          GOTO      LETT0500
.
LETT9000  MOVE      TRUE,EXIT
.
LETT9999  RETURN
.
.**********************************************************************
.*                            LETT0000                                *
.**********************************************************************
IPRT0000  DISPLAY   *P1:12,*EF:
                    *P1:12,"Inv. Printer  : ";
.
          KEYIN     *P17:12,IPRINTER;
.
          ENDSET    IPRINTER
          APPEND    SP70,IPRINTER
          RESET     IPRINTER
.
IPRT9999  RETURN
+
.*******************************************************************************
.*                                  GUSR0000               Called by: MAIN0000 *
.*                               Get Web User Id                               *
.*******************************************************************************
.
GUSR0000  KEYIN     *P1:13,*EF,"Web User Id  : ",*V2LON,USERID
.
          PACK      USERID,USERID,SP70
          MATCH     SP70,USERID
          GOTO      GUSR9100 IF EQUAL
.
          PACK      KEY10,USERID,SP70
          CALL      RDWBSE1
          BRANCH    OVRCD,GUSR9100
.
          MOVE      ZERO,EXIT
          GOTO      GUSR9999
.
GUSR9100  MOVE      ONE,EXIT
.
GUSR9999  RETURN
+
.**********************************************************************
.*                            LETQ0000                                *
.*               Question Mark Option for Letter File                 *
.**********************************************************************
.
LETQ0000  COMPARE   TRUE,QUESTFLG
          GOTO      LETQ0500 IF NOT EQUAL
.
          MOVE      FALSE,QUESTFLG
.
          DISPLAY   *P17:24,UNDLN3;
          GETSCR    3,1,1,80,24
.
LETQ0500  DISPLAY   *P1:4,*EF,*P30:4,*V2LON,*ULON,"EXISTING LETTERS"
          MOVE      FIVE,CVERT
          MOVE      ONE,CCOL
.
          MOVE      SP6,KEY6
          CALL      RSPTFL2
LETQ1000  CALL      RKPTFL2
          BRANCH    OVRCD,LETQ2000
.
          COMPARE   ZERO,PTFLLINO
          GOTO      LETQ9999 IF NOT EQUAL
.
          MOVE      PTFLTEXT,DIM30
          DISPLAY   *PCCOL:CVERT,*V2LON,PTFLLTNO,SP2,*HOFF,DIM30;
          ADD       ONE,CVERT
          COMPARE   TWENTY3,CVERT
          GOTO      LETQ1000 IF LESS
.
          MOVE      FIVE,CVERT
          ADD       "40",CCOL
          COMPARE   "70",CCOL
          GOTO      LETQ1000 IF LESS
.
          KEYIN     *P1:24,*EL," (",*V2LON,"C",*HOFF,")ontinue, (":
                    *V2LON,"N",*HOFF,")ext Screen : ",*V2LON,ANS;
.
          CMATCH    ANSC,ANS
          GOTO      LETQ9999 IF EQUAL
.
          MOVE      FIVE,CVERT
          MOVE      ONE,CCOL
          DISPLAY   *P1:5,*EF
.
          GOTO      LETQ1000
.
LETQ2000  DISPLAY   *P1:24,*EF,"No Records Entered in Report File - Hit <":
                    *V2LON,"ENTER",*HOFF,"> to Continue ";
          KEYIN     ANS;
.
.      End of codes
.
LETQ9999  RETURN
.
.**********************************************************************
.*                            DATE0000                                *
.*                     Keyin the Letter's Date                        *
.**********************************************************************
.
DATE0000  DISPLAY   *P1:13,*EF:
                    *P1:13,"Enter the Date for the letter : "
.
          MOVE      CDD,CDAY
          MOVE      CMM,CMON
          MOVE      CYY,CYEAR
          MOVE      THIRTY3,CCOL
          MOVE      TEN3,CVERT
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
.
DATE1000  CALL      KEYDATE
.
          PACK      LETTDATE,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
          PACK      SENTDATE,CCC,CYY,CMM,CDD
          REP       " 0",SENTDATE
.
          BRANCH    OVRCD,DATE8000
          BRANCH    CQUEST,DATE1000
.
DATE8000  CALL      IBACLOCK
          PACK      SENTDATE,CCC,CYY,CMM,CDD
          REP       " 0",SENTDATE
.
          MATCH     SP2,CDAY
          GOTO      DATE9000 IF NOT EQUAL
.
          MOVE      TRUE,EXIT
          GOTO      DATE9999
.
DATE9000  MOVE      FALSE,EXIT
.
DATE9999  RETURN
.
.**********************************************************************
.*                            PRNT0000                                *
.*                      Print Patient Letters                         *
.**********************************************************************
.
PRNT0000  CALL      CONS0000                * Set Up the Constant % Variables
          MOVE      ZERO,COUNTER
.
          PACK      KEY12,SELECTID,SP70
          CALL      RSPMLLF1
.
PRNT1000  CALL      RKPMLLF1
          BRANCH    OVRCD,PRNT9999
.
          MATCH     SELECTID,PMLLSEID
          GOTO      PRNT9999 IF NOT EQUAL
.
          MATCH     "1",PMLLSTAT            * Skip if status is deleted
          GOTO      PRNT1000 IF EQUAL
.
          CALL      STWP0000                * Set up the Actual % Variables
          BRANCH    EXIT,PRNT1000
.
          ADD       ONE,COUNTER
          CALL      PRLT0000                * Print the Actual Letter
.
          CALL      UPTR0000                * Update history 
.
          GOTO      PRNT1000
.
PRNT9999  RETURN
.
.**********************************************************************
.*                            CONS0000                                *
.*                    Set Up Constant % Variables                     *
.**********************************************************************
.
CONS0000  OPEN      CONTROLF,"controlf"
.
          READ      CONTROLF,TWO;*4,CONAME
          READ      CONTROLF,TEN3;*65,CHPADD1,CHPADD2,CHPPOST,CHTELEB
.
          MOVE      CONAME,LXHOSP
          MOVE      CHPADD1,LXHADDA
          MOVE      CHPADD2,LXHADDB
          MOVE      CHPPOST,LXHPOST
          MOVE      CHTELEB,LXHOSTEL
.
          MOVE      ZERO,PRNCOUNT
          CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
          UNPACK    CURRDATE,XCENT,XYEAR,XMON,XDAY     * format current date
          CALL      FMTD0000
          MOVE      FORMDATE,LXCURDAT
          LJUSTIFY  LXCURDAT
.
. date with no extension 
.
          UNPACK    FORMDATE,DIM2,DIM3,DIM20
          BUMP      DIM20,1
          REP       LOWUPP,DIM20
          RESET     DIM20
          PACK      LXCURDTN,DIM2,SP1,DIM20
          LJUSTIFY  LXCURDTN
.
          MOVE      ONE,CDEFDTE
          UNPACK    LETTDATE,XDAY,DUMMY,XMON,DUMMY,XCENT,XYEAR
          CALL      FMTD0000
          MOVE      FORMDATE,LXLETDAT
          RETURN
.
.**********************************************************************
.*                            STWP0000                                *
.*                      Set the % Variables                           *
.**********************************************************************
.
STWP0000  CALL      CLRV0000                * Fill % Var's with *'s
          MOVE      ZERO,EXIT       
.
          PACK      KEY8,PMLLVISN,SP8
          CALL      RDVISA1
          BRANCH    OVRCD,STWP9000
.
          PACK      KEY8,PMLLVISN,SP8
          CALL      RDPMVX11
          BRANCH    OVRCD,STWP9000
.
          MOVE      PMLLVISN,XVNUMB
          PACK      XURNO,PVIURNO,SP8
          CALL      SETV0000 
          GOTO      STWP9999
.
STWP9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** No visits found **    ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
STWP9999   RETURN
.
.**********************************************************************
.*                  PRLT0000                    Called by : ML        *
.*             Set up and print letter one line at a time             *
.*        Returns : EXIT = 0      ask if to print more letters        *
.*                  EXIT = 1      select another letter to print      *
.*                  EXIT = 2      get next item on temp file          *
.**********************************************************************
PRLT0000  MOVE      FALSE,EXIT
          MOVE      ONE,COUNT               * line number to print
.
          MOVE      ZERO,FORM3              * read letter file header
          PACK      KEY6,LETTFORM,FORM3     *    record
          CALL      RDPTFL1
          MOVE      PTFLPPAG,PHYSPAGE       * physical paper length
          MOVE      PTFLPTOP,TOPMARG        * top margin
          MOVE      PTFLPBOT,BOTTMARG       * bottom margin
          SUB       PTFLPBOT,PTFLPPAG       * where to print to at bottom
          MOVE      PTFLPPAG,MLETPLEN       * length to print to
          MOVE      PTFLPTAB,LEFTMARG       * left margin
.
.------ print top margin ------
.
PRLT0050  PRINT     *N;                     * print blank line
          COMPARE   COUNT,TOPMARG
          GOTO      PRLT1000 IF EQUAL       * printed top margin
.
          ADD       ONE,COUNT
          GOTO      PRLT0050
.
. ------- print letter one line at a time ------
.
PRLT1000  CALL      RKPTFL1
          BRANCH    OVRCD,PRLT9000          * end of letter reached
.
          COMPARE   LETTFORM,PTFLLTNO
          GOTO      PRLT9000 IF NOT EQUAL   * different letter number
.
          BRANCH    PTFLLVAR,PRLT2000       * have a % var
.
.         printing when no % variables
.
          PRINT     *LEFTMARG,PTFLTEXT,*N;  * print text if no % vars
          ADD       ONE,COUNT
.
          COMPARE   COUNT,MLETPLEN
          CALL      PAGE0000 IF EQUAL       * print page when required
          GOTO      PRLT1000
.
.         printing when have % variables
.
PRLT2000  CALL      MOD0000                 * substitute % var value
          PRINT     *LEFTMARG,PRTSTRNG,*N;  * print text with % vars
          ADD       ONE,COUNT
.
          COMPARE   COUNT,MLETPLEN
          CALL      PAGE0000 IF EQUAL       * print page when required
          GOTO      PRLT1000
.
. ------- end of current letter reached -------
.
PRLT9000  COMPARE   TOPMARG,COUNT
          GOTO      PRLT9500 IF EQUAL       * no lines of text printed
.
          DISPLAY   *P60:24,*EL,*V2LON,COUNTER,*HOFF," Printed";
          MOVE      PHYSPAGE,TEMP3          * set up variables for
          SUBTRACT  COUNT,PHYSPAGE          *   paging
          MOVE      ONE,COUNT
.
.------ paginate at end of each letter ------
.
PRLT9100  PRINT     *N;
          COMPARE   COUNT,PHYSPAGE
          GOTO      PRLT9400 IF EQUAL       * printed bottom margin
.
          ADD       ONE,COUNT
          GOTO      PRLT9100
.
PRLT9400  MOVE      TEMP3,PHYSPAGE          * restore physical page length
          MOVE      TWO,EXIT                * indicate to continue
          GOTO      PRLT9999
.
.------ letter header is on file but nothing else ------
.
PRLT9500  
....      DISPLAY   *P1:24,*EL,*B,"Letter has not been set up yet - Tap <":
....                *V2LON,"ENTER",*HOFF,">";
....      KEYIN     ANS;
....      MOVE      TRUE,EXIT               * enter another letter code
          MOVE      TWO,EXIT                * indicate to continue
.
PRLT9999  RETURN
.

.***************************************************************************
.*                               PROC0000              Called by:          *
.*        process field inputs, then get records by visit number or        *
.*        by selection criteria
.***************************************************************************
PROC0000  CALL      QEST0000                     * get next action
          BRANCH    EXIT,PROC9300:               * exit selected
                         PROC9500:               * cancel selected
                         PROC2000:               * process selected
                         PROC1000                * selected visits
.
          COMPARE   TNUMB,ZERO                   * number > zero ?
          GOTO      PROC0200 IF NOT LESS         * no
.
          BRANCH    TNUMB,PROC0310:              * visit dates
                          PROC0320:              * discharge dates
                          PROC0330:              * surnames
                          PROC0340:              * last letter sent
                          PROC0350:              * dates last letter sent
                          PROC0360:              * future action codes
                          PROC0370:              * future action dates
                          PROC0380:              * claim codes
                          PROC0390:              * admission types
                          PROC0400:              * minimum balance owing
                          PROC0410:              * ignore ins. inv.
                          PROC0420:              * fund payment dates
                          PROC0430:              * deceased status
                          PROC0440:              * system
                          PROC0450               * hospital
.
PROC0200  BEEP
          GOTO      PROC0000
.
PROC0310  CALL      VDAT0000
          GOTO      PROC0000
.
PROC0320  CALL      DDAT0000
          GOTO      PROC0000
.
PROC0330  CALL      SNAM0000
          GOTO      PROC0000
.
PROC0340  CALL      LAST0000
          GOTO      PROC0000
.
PROC0350  CALL      LDAT0000
          GOTO      PROC0000
.
PROC0360  CALL      FACS0000
          GOTO      PROC0000
.
PROC0370  CALL      FADS0000
          GOTO      PROC0000
.
PROC0380  CALL      CLAM0000
          GOTO      PROC0000
.
PROC0390  CALL      ATYP0000
          GOTO      PROC0000
.
PROC0400  CALL      MBAL0000
          GOTO      PROC0000
.
PROC0410  CALL      IGNI0000
          GOTO      PROC0000
.
PROC0420  CALL      FDAT0000
          GOTO      PROC0000
.
PROC0430  CALL      DECS0000 
          GOTO      PROC0000
.
PROC0440  CALL      SYST0000
          GOTO      PROC0000
.
PROC0450  CALL      HOSP0000
          GOTO      PROC0000
.
.         Get selected visits only
.
PROC1000  MOVE      ZERO,IFLAG
          GETSCR    2,1,1,80,23
          CALL      GVIS0000                     * get selected visits
          BRANCH    IFLAG,PROC5000               * display records entered
          GOTO      PROC9800                     * no records entered
.
.         Get matching records from selection criteria
.
PROC2000  MOVE      ZERO,IFLAG
          MOVE      ZERO,MODE                    * initialise extraction mode 
          GETSCR    2,1,1,80,23                  * save screen for later
          CALL      GREC0000                     * get matching records
.
          BRANCH    IFLAG,PROC5000               * matching records found
.
          DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** No visits found for these criteria **    ";
          CALL      HITENTER
          DISPLAY   *P1:24,*EL;
          GOTO      PROC9900
.
PROC5000  CALL      DSPP0000                     * display temp file records
          BRANCH    EXIT,PROC9800:               * exit
                         PROC9000                * send 
          GOTO      PROC9800                     * cancel
.
PROC9000  MOVE      ZERO,EXIT                    * send selected
          GOTO      PROC9999
.
PROC9300  MOVE      ONE,EXIT                     * exit selected
          GOTO      PROC9999
.
PROC9500  MOVE      TWO,EXIT                     * cancel selected
          GOTO      PROC9999
.
PROC9800  DISPLAY   *P1:23,*EF;
          PUTSCR    2
PROC9900  MOVE      THREE,EXIT                   * redisplay criteria
.
PROC9999  RETURN
+
+
.***************************************************************************
.*                               QEST0000              Called by:          *
.*                      ask user for action required                       *
.***************************************************************************
QEST0000  KEYIN     *P1:24,*EL,"Select item, (",*V2LON,*DV,ANSP,*HOFF:
                    ")rocess, (",*V2LON,*DV,ANSC,*HOFF,")ancel, (":
                    *V2LON,*DV,ANSE,*HOFF,")xit, (",*V2LON,*DV,ANSS,*HOFF:
                    ")elected visits ? ",*DV,UNDLN2:
                    *P63:24,*V2LON,CHOICE;
.
          TYPE      CHOICE                  * Number entered ?
          GOTO      QEST2000 IF EQUAL       * yes
.
          CALL      PADC0000                * pad with blanks
.
          MATCH     ANSP,CHOICE             * Process selected ?
          GOTO      QEST7000 IF EQUAL       * yes
          MATCH     ANSC,CHOICE             * Cancel selected ?
          GOTO      QEST6000 IF EQUAL       * yes
          MATCH     ANSE,CHOICE             * Exit selected ?
          GOTO      QEST5000 IF EQUAL       * yes
          MATCH     ANSS,CHOICE             * Selected visits selected ?
          GOTO      QEST8000 IF EQUAL       * yes
          BEEP                              * Invalid entry
          GOTO      QEST0000
.
.         See if a valid number was entered
.
QEST2000  MOVE      CHOICE,TNUMB
.
          COMPARE   ZERO,TNUMB
          GOTO      QEST0000 IF LESS
          GOTO      QEST4000 IF EQUAL
.
          COMPARE   TNUMB,TEN4
          GOTO      QEST9000 IF NOT LESS
.
QEST4000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Only select a number displayed on the screen **    ";
          CALL      HITENTER
          GOTO      QEST0000
.
.         Set the EXIT flag according to the users choice
.
QEST5000  MOVE      ONE,EXIT                * Exit
          GOTO      QEST9999
.
QEST6000  MOVE      TWO,EXIT                * Cancel
          GOTO      QEST9999
.
QEST7000  MOVE      THREE,EXIT              * Process
          GOTO      QEST9999
.
QEST8000  MOVE      FOUR,EXIT               * Selected visits
          GOTO      QEST9999
.
QEST9000  MOVE      FIVE,EXIT               * Number selected
.
QEST9999  RETURN
+
.***************************************************************************
.*                                CLR0000                                  *
.*                  clear field displays and variables                     *
.***************************************************************************
CLR0000   MOVE      FOUR,TNUMB                   * initialize counters
          MOVE      TEN7,COUNTER
.
CLR1000   COMPARE   TNUMB,COUNTER                * last line ?
          GOTO      CLR2000 IF LESS              * yes
          DISPLAY   *P29:TNUMB,*EL;              * clear line
          ADD       ONE,TNUMB                    * increment line count
          GOTO      CLR1000
.
CLR2000   MOVE      SP8,VISDAT1
          MOVE      SP8,VISDAT2
.
          MOVE      SP8,DISDAT1
          MOVE      SP8,DISDAT2
.
          MOVE      SP20,SNAME1
          MOVE      SP20,SNAME2
.
          MOVE      SP3,LCODE1
          MOVE      SP3,LCODE2
.
          MOVE      SP8,LDATE1
          MOVE      SP8,LDATE2
.
          MOVE      SP3,FACODE1
          MOVE      SP3,FACODE2
.
          MOVE      SP6,FUTDAT1
          MOVE      SP6,FUTDAT2
.
          MOVE      SP3,CLAIM1
          MOVE      SP3,CLAIM2
.
          MOVE      SP3,ADTYPE1
          MOVE      SP3,ADTYPE2
.
          MOVE      ZERO,MINBAL
.
          MOVE      ANSY,IGNORE
.
          MOVE      SP8,FDATE1
          MOVE      SP8,FDATE2
.
          MOVE      SP1,DSTATUS
.
          MOVE      SP1,SYSTEM
          MOVE      SP1,SYSDIM
.
          MOVE      SP70,HEALTHFD
          MOVE      SP70,INSURCOD
          MOVE      SP70,MISCCODE
          MOVE      SP70,PAYMPLAN
.
          DISPLAY   *P29:14,*V2LON,"Yes";
.
CLR9999   RETURN
+
.***************************************************************************
.*                               VDAT0000              Called by:          *
.*                    input visit date range                               *
.***************************************************************************
VDAT0000  DISPLAY   *P29:4,*EL;
          MOVE      SP2,CDAY
          MOVE      SP2,CMON
          MOVE      SP2,CYEAR
          MOVE      TWENTY9,CCOL
          MOVE      FOUR,CVERT
.
          CALL      IBACLOCK                     * get current date
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          MOVE      CCC,CCENT
.
          CALL      KEYDATE                      * get start date
          BRANCH    OVRCD,VDAT1000               * nothing input
.
          PACK      VISDAT1,CCENT,CYEAR,CMON,CDAY
.
          MATCH     VISDAT1,CURRDATE             * date in future ?
          GOTO      VDAT9500 IF LESS             * yes
          GOTO      VDAT2000
.
VDAT1000  MOVE      DZERO8,VISDAT1                * default start
          DISPLAY   *P29:4,*EL,*V2LON,DSTART;
.
VDAT2000  DISPLAY   *P40:4,"to";
          MOVE      SP2,CDAY
          MOVE      SP2,CMON
          MOVE      SP2,CYEAR
          MOVE      FORTY3,CCOL
.
          CALL      KEYDATE                      * get start date
          BRANCH    OVRCD,VDAT3000               * nothing input
.
          PACK      VISDAT2,CCENT,CYEAR,CMON,CDAY
.
          MATCH     VISDAT1,VISDAT2              * end date < start date ?
          GOTO      VDAT9000 IF LESS             * yes
          GOTO      VDAT9999
.
VDAT3000  PACK      VISDAT2,NINES                * default end
          DISPLAY   *P43:4,*EL,*V2LON,DFINISH;
          GOTO      VDAT9999
.
VDAT9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** End date is less than start date **    ";
          CALL      HITENTER 
          GOTO      VDAT0000 
.
VDAT9500  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Start date is greater than today's date **    ";
          CALL      HITENTER 
          GOTO      VDAT0000 
.
VDAT9999  RETURN
+
.***************************************************************************
.*                               DDAT0000              Called by:          *
.*                      input discharge date range                         *
.***************************************************************************
DDAT0000  DISPLAY   *P29:5,*EL;
          MOVE      SP2,CDAY
          MOVE      SP2,CMON
          MOVE      SP2,CYEAR
          MOVE      TWENTY9,CCOL
          MOVE      FIVE,CVERT
.
          CALL      IBACLOCK                     * get current date
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          MOVE      CCC,CCENT
.
          CALL      KEYDATE                      * get start date
          BRANCH    OVRCD,DDAT1000               * nothing input
.
          PACK      DISDAT1,CCENT,CYEAR,CMON,CDAY
.
          MATCH     DISDAT1,CURRDATE             * date in future ?
          GOTO      DDAT9500 IF LESS             * yes
          GOTO      DDAT2000
.
DDAT1000  MOVE      DZERO8,DISDAT1                * default start
          DISPLAY   *P29:5,*EL,*V2LON,DSTART;
.
DDAT2000  DISPLAY   *P40:5,"to";
          MOVE      SP2,CDAY
          MOVE      SP2,CMON
          MOVE      SP2,CYEAR
          MOVE      FORTY3,CCOL
.
          CALL      KEYDATE                      * get end date
          BRANCH    OVRCD,DDAT3000               * nothing input
.
          PACK      DISDAT2,CCENT,CYEAR,CMON,CDAY
.
          MATCH     DISDAT1,DISDAT2              * end date < start date ?
          GOTO      DDAT9000 IF LESS             * yes
          GOTO      DDAT9999
.
DDAT3000  PACK      DISDAT2,NINES                * default end
          DISPLAY   *P43:5,*EL,*V2LON,DFINISH;
          GOTO      DDAT9999
.
DDAT9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** End date is less than start date **    ";
          CALL      HITENTER 
          GOTO      DDAT0000 
.
DDAT9500  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Start date is greater than today's date **    ";
          CALL      HITENTER 
          GOTO      DDAT0000 
.
DDAT9999  RETURN
+
.***************************************************************************
.*                               SNAM0000              Called by:          *
.*                         input surname range                             *
.***************************************************************************
SNAM0000  KEYIN     *P29:6,*EL,*DV,UNDLN20:      * get start surname
                    *P29:6,*V2LON,SNAME1,*P29:6,*DV,SNAME1;
.
          RESET     SNAME1
          GOTO      SNAM8000 IF EOS              * nothing input
.
SNAM1000  DISPLAY   *P50:6,"to"
.
          KEYIN     *P53:6,*DV,UNDLN20:          * get end surname
                    *P53:6,*V2LON,SNAME2,*P53:6,*DV,SNAME2;
.
          RESET     SNAME2
          GOTO      SNAM8500 IF EOS              * nothing input
.
          MATCH     SNAME1,SNAME2                * end surname < start surname ?
          GOTO      SNAM9000 IF LESS             * yes
          GOTO      SNAM9999
.
SNAM8000  DISPLAY   *P29:6,*V2LON,DSTART;        * default start
          MOVE      SP20,SNAME1
          GOTO      SNAM1000
.
SNAM8500  DISPLAY   *P53:6,*V2LON,DFINISH;       * default end
          MOVE      ZEDS,SNAME2
          GOTO      SNAM9999
.
SNAM9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** End surname less than start surname **    ";
          CALL      HITENTER
          GOTO      SNAM0000
.
SNAM9999  RETURN
+
.***************************************************************************
.*                               LAST0000              Called by:          *
.*                     input last letter sent range                        *
.***************************************************************************
LAST0000  DISPLAY   *P29:7,*EL;
          MOVE      SEVEN,EVERT
          MOVE      TWENTY9,ECOL
.
LAST0500  CALL      PATFLTKY                     * get start code
          BRANCH    EXIT,LAST1000:               * nothing entered
                         LAST9500                * exitchar entered
.
          MOVE      PTFLLTNO,LCODE1              * save code
          GOTO      LAST2000
.
LAST1000  MOVE      SP3,LCODE1                   * default start code
          DISPLAY   *P29:7,*V2LON,DSTART;
.
LAST2000  DISPLAY   *P40:7,"to";
.
LAST2500  MOVE      FORTY3,ECOL
          CALL      PATFLTKY
          BRANCH    EXIT,LAST3000:               * nothing entered 
                         LAST9500                * exitchar entered
.
          MOVE      PTFLLTNO,LCODE2              * save end code
          MATCH     LCODE1,LCODE2                * end code < start code ?
          GOTO      LAST9000 IF LESS             * yes
          GOTO      LAST9999
.
LAST3000  MOVE      ZEDS,LCODE2                  * default end code
          DISPLAY   *P43:7,*V2LON,DFINISH;
          GOTO      LAST9999
.
LAST9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** End code less than start code **    ";
          CALL      HITENTER
          GOTO      LAST0000
.
LAST9500  MOVE      SP3,LCODE1
          MOVE      SP3,LCODE2
          DISPLAY   *P29:7,*EL;
.
LAST9999  RETURN
+
.***************************************************************************
.*                               LDAT0000              Called by:          *
.*                 input last letter sent date range                       *
.***************************************************************************
LDAT0000  DISPLAY   *P29:8,*EL;
          MOVE      SP2,CDAY
          MOVE      SP2,CMON
          MOVE      SP2,CYEAR
          MOVE      TWENTY9,CCOL
          MOVE      EIGHT,CVERT
.
          CALL      IBACLOCK                     * get current date
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          MOVE      CCC,CCENT
.
          CALL      KEYDATE                      * get start date
          BRANCH    OVRCD,LDAT1000               * nothing input
.
          PACK      LDATE1,CCENT,CYEAR,CMON,CDAY
.
          MATCH     LDATE1,CURRDATE              * date in future ?
          GOTO      LDAT9500 IF LESS             * yes
          GOTO      LDAT2000
.
LDAT1000  MOVE      DZERO8,LDATE1                 * default start
          DISPLAY   *P29:8,*EL,*V2LON,DSTART;
.
LDAT2000  DISPLAY   *P40:8,"to";
          MOVE      SP2,CDAY
          MOVE      SP2,CMON
          MOVE      SP2,CYEAR
          MOVE      FORTY3,CCOL
.
          CALL      KEYDATE                      * get end date
          BRANCH    OVRCD,LDAT3000               * nothing input
.
          PACK      LDATE2,CCENT,CYEAR,CMON,CDAY
.
          MATCH     LDATE1,LDATE2                * end date < start date ?
          GOTO      LDAT9000 IF LESS             * yes
          GOTO      LDAT9999
.
LDAT3000  PACK      LDATE2,NINES                 * default end
          DISPLAY   *P43:8,*EL,*V2LON,DFINISH;
          GOTO      LDAT9999
.
LDAT9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** End date is less than start date **    ";
          CALL      HITENTER 
          GOTO      LDAT0000 
.
LDAT9500  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Start date is greater than today's date **    ";
          CALL      HITENTER 
          GOTO      LDAT0000 
.
LDAT9999  RETURN
+
.***************************************************************************
.*                               FACS0000              Called by:          *
.*                    input future action code range                       *
.***************************************************************************
FACS0000  DISPLAY   *P29:9,*EL;
          MOVE      NINE,EVERT
          MOVE      TWENTY9,ECOL
          MOVE      CODEFA,CODE                  * load category
.
FACS0500  CALL      PATCODKY                     * get start code
          BRANCH    EXIT,FACS1000:               * nothing entered
                         FACS0500                * exitchar entered
.
          MOVE      ACODE,FACODE1                * save code
          GOTO      FACS2000
.
FACS1000  MOVE      SP3,FACODE1                  * default start code
          DISPLAY   *P29:9,*V2LON,DSTART;
.
FACS2000  DISPLAY   *P40:9,"to";
.
          MOVE      FORTY3,ECOL
FACS2500  CALL      PATCODKY                     * get end code
          BRANCH    EXIT,FACS3000:               * nothing entered
                         FACS2500                * exitchar entered
.
          MOVE      ACODE,FACODE2                * save end code
          MATCH     FACODE1,FACODE2              * end code < start code ?
          GOTO      FACS9000 IF LESS             * yes
          GOTO      FACS9999
.
FACS3000  MOVE      ZEDS,FACODE2                 * default end code
          DISPLAY   *P43:9,*V2LON,DFINISH;
          GOTO      FACS9999
.
FACS9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** End code less than start code **    ";
          CALL      HITENTER
          GOTO      FACS0000
.
FACS9999  RETURN
+
.***************************************************************************
.         Keyin a future action code
.***************************************************************************
KFAC0000  DISPLAY   *P1:9,*EF,*V2LON,"Enter Future Action Code :"
.
          MOVE      NINE,EVERT
          MOVE      TWENTY9,ECOL
          MOVE      CODEFA,CODE                  * load category
.
          CALL      PATCODKY                     * get start code
          BRANCH    EXIT,KFAC9000:               * nothing entered
                         KFAC9000                * exitchar entered
.
          MOVE      ACODE,FACODE1                * save code
          MOVE      ZERO,EXIT
          GOTO      KFAC9999
.
KFAC9000  MOVE      ONE,EXIT
KFAC9999  RETURN
+
.***************************************************************************
.*                               FADS0000              Called by:          *
.*                    input future action date range                       *
.***************************************************************************
FADS0000  DISPLAY   *P1:10,*EL,*V2LON," Future Action From Date :":
                    *P40:10,"to";
          MOVE      SP2,CDAY
          MOVE      SP2,CMON
          MOVE      SP2,CYEAR
          MOVE      CCC,CCENT
          MOVE      TWENTY9,CCOL
          MOVE      TEN,CVERT
.
          CALL      KEYDATE                      * get start date
          BRANCH    OVRCD,FADS1000               * nothing input
.
          PACK      FUTDAT1,CCENT,CYEAR,CMON,CDAY
          GOTO      FADS2000
.
FADS1000  MOVE      DZERO8,FUTDAT1                * default start
          DISPLAY   *P29:10,*EL,*V2LON,DSTART;
.
FADS2000  MOVE      SP2,CDAY
          MOVE      SP2,CMON
          MOVE      SP2,CYEAR
          MOVE      CCC,CCENT
          MOVE      FORTY3,CCOL
.
          CALL      KEYDATE                      * get end date
          BRANCH    OVRCD,FADS3000               * nothing input
.
          PACK      FUTDAT2,CCENT,CYEAR,CMON,CDAY
.
          MATCH     FUTDAT1,FUTDAT2              * end date < start date ?
          GOTO      FADS9000 IF LESS             * yes
          GOTO      FADS9999
.
FADS3000  PACK      FUTDAT2,NINES                * default end
          DISPLAY   *P43:10,*EL,*V2LON,DFINISH;
          GOTO      FADS9999
.
FADS9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** End date is less than start date **    ";
          CALL      HITENTER
          GOTO      FADS0000 
.
FADS9999  RETURN
+
.***************************************************************************
.*                               CLAM0000              Called by:          *
.*                      input claim code range                             *
.***************************************************************************
CLAM0000  DISPLAY   *P29:11,*EL;
          MOVE      TEN1,EVERT
          MOVE      TWENTY9,ECOL
          MOVE      CODECL,CODE                  * load category
.
CLAM0500  CALL      PATCODKY                     * get start code
          BRANCH    EXIT,CLAM1000:               * nothing entered
                         CLAM0500                * exitchar entered
.
          MOVE      ACODE,CLAIM1                 * save code
          GOTO      CLAM2000
.
CLAM1000  MOVE      SP3,CLAIM1                   * default start code
          DISPLAY   *P29:11,*V2LON,DSTART;
.
CLAM2000  DISPLAY   *P40:11,"to";
          MOVE      FORTY3,ECOL
.
CLAM2500  CALL      PATCODKY                     * get end code
          BRANCH    EXIT,CLAM3000:               * nothing entered
                         CLAM2500                * exitchar entered
.
          MOVE      ACODE,CLAIM2                 * save end code
          MATCH     CLAIM1,CLAIM2                * end code < start code ?
          GOTO      CLAM9000 IF LESS             * yes
          GOTO      CLAM9999
.
CLAM3000  MOVE      ZEDS,CLAIM2                  * default end code
          DISPLAY   *P43:11,*V2LON,DFINISH;
          GOTO      CLAM9999
.
CLAM9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** End code less than start code **    ";
          CALL      HITENTER
          GOTO      CLAM0000
.
CLAM9999  RETURN
+
.***************************************************************************
.*                               ATYP0000              Called by:          *
.*                    input admission type range                           *
.***************************************************************************
ATYP0000  DISPLAY   *P29:12,*EL;
          MOVE      TEN2,EVERT
          MOVE      TWENTY9,ECOL
          MOVE      CODEA,CODE                   * load category
.
ATYP0500  CALL      PATCODKY                     * get start code
          BRANCH    EXIT,ATYP1000:               * nothing entered
                         ATYP0500                * exitchar entered
.
          MOVE      ACODE,ADTYPE1                * save code
          GOTO      ATYP2000
.
ATYP1000  MOVE      SP3,ADTYPE1                  * default start code
          DISPLAY   *P29:12,*V2LON,DSTART;
.
ATYP2000  DISPLAY   *P40:12,"to";
          MOVE      FORTY3,ECOL
.
ATYP2500  CALL      PATCODKY                     * get end code
          BRANCH    EXIT,ATYP3000:               * nothing entered
                         ATYP2500                * exitchar entered
.
          MOVE      ACODE,ADTYPE2                * save end code
          MATCH     ADTYPE1,ADTYPE2              * end code < start code ?
          GOTO      ATYP9000 IF LESS             * yes
          GOTO      ATYP9999
.
ATYP3000  MOVE      ZEDS,ADTYPE2                 * default end code
          DISPLAY   *P43:12,*V2LON,DFINISH;
          GOTO      ATYP9999
.
ATYP9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** End code less than start code **    ";
          CALL      HITENTER
          GOTO      ATYP0000
.
ATYP9999  RETURN
+
.***************************************************************************
.*                               MBAL0000              Called by:          *
.*                     input minimum balance owing                         *
.***************************************************************************
MBAL0000  KEYIN     *P29:13,*EL,*V2LON,"$",MINBAL: 
                    *P29:13,"$",*DV,MINBAL;
.
MBAL9999  RETURN
+
.***************************************************************************
.*                               IGNI0000              Called by:          *
.*             input if ignoring insurance invoices                        *
.***************************************************************************
IGNI0000  KEYIN     *P29:14,*EL,*DV,UNDLN1:      * get answer
                    *P29:14,*V2LON,IGNORE,*P29:14,*DV,IGNORE;
.
          ENDSET    IGNORE                       * append blanks
          APPEND    SP1,IGNORE
          RESET     IGNORE
          REP       UPPLOW,IGNORE
.
          MATCH     ANSN,IGNORE                  * no input ?
          GOTO      IGNI6000 IF EQUAL            * yes
          MATCH     ANSY,IGNORE                  * yes input ?
          GOTO      IGNI5000 IF EQUAL            * yes
          MATCH     SP1,IGNORE                   * anything input ?
          GOTO      IGNI4000 IF EQUAL            * no
          BEEP
          GOTO      IGNI0000
.
IGNI4000  MOVE      ANSY,IGNORE                  * default to "yes"
.
IGNI5000  DISPLAY   *P29:14,*V2LON,DYES;         * display description
          GOTO      IGNI9999
.
IGNI6000  DISPLAY   *P29:14,*V2LON,DNO;
.
IGNI9999  RETURN
+
.***************************************************************************
.*                               FDAT0000              Called by:          *
.*                     input fund payment date range                       *
.***************************************************************************
FDAT0000  DISPLAY   *P29:15,*EL;
          MOVE      SP2,CDAY
          MOVE      SP2,CMON
          MOVE      SP2,CYEAR
          MOVE      TWENTY9,CCOL
          MOVE      TEN5,CVERT
.
          CALL      IBACLOCK                     * get current date
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          MOVE      CCC,CCENT
.
          CALL      KEYDATE                      * get start date
          BRANCH    OVRCD,FDAT1000               * nothing input
.
          PACK      FDATE1,CCENT,CYEAR,CMON,CDAY
.
          MATCH     FDATE1,CURRDATE              * date in future ?
          GOTO      FDAT9500 IF LESS             * yes
          GOTO      FDAT2000
.
FDAT1000  MOVE      DZERO8,FDATE1                 * default start
          DISPLAY   *P29:15,*EL,*V2LON,DSTART;
.
FDAT2000  DISPLAY   *P40:15,"to";
          MOVE      SP2,CDAY
          MOVE      SP2,CMON
          MOVE      SP2,CYEAR
          MOVE      FORTY3,CCOL
.
          CALL      KEYDATE                      * get end date
          BRANCH    OVRCD,FDAT3000               * nothing input
.
          PACK      FDATE2,CCENT,CYEAR,CMON,CDAY
.
          MATCH     FDATE1,FDATE2                * end date < start date ?
          GOTO      FDAT9000 IF LESS             * yes
          GOTO      FDAT9999
.
FDAT3000  PACK      FDATE2,NINES                 * default end
          DISPLAY   *P43:15,*EL,*V2LON,DFINISH;
          GOTO      FDAT9999
.
FDAT9000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** End date is less than start date **    ";
          CALL      HITENTER 
          GOTO      FDAT0000 
.
FDAT9500  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Start date is greater than today's date **    ";
          CALL      HITENTER 
          GOTO      FDAT0000 
.
FDAT9999  RETURN
+
.***************************************************************************
.*                               DECS0000              Called by:          *
.*                       input deceased status                             *
.***************************************************************************
DECS0000  DISPLAY    *P1:24,*EL,"(",*V2LON,ANSD,*HOFF,")eceased, (",*V2LON:
                     ANSA,*HOFF,")live";
.
          KEYIN      *P29:16,*EL,*DV,UNDLN1:     * get status
                     *P29:16,*V2LON,DSTATUS,*P29:16,*DV,DSTATUS;
.
          ENDSET     DSTATUS                     * append blanks
          APPEND     SP1,DSTATUS
          RESET      DSTATUS
          REP        UPPLOW,DSTATUS
.
          MATCH     ANSD,DSTATUS                 * deceased ?
          GOTO      DECS6000 IF EQUAL            * yes
          MATCH     ANSA,DSTATUS                 * alive ?
          GOTO      DECS5000 IF EQUAL            * yes
          MATCH     SP1,DSTATUS                  * anything input ?
          GOTO      DECS9999 IF EQUAL            * no
          BEEP
          GOTO      DECS0000
.
DECS5000  DISPLAY   *P29:16,*V2LON,DALIVE;       * display description
          GOTO      DECS9999
.
DECS6000  DISPLAY   *P29:16,*V2LON,DECEASED;
.
DECS9999  RETURN
+
.***************************************************************************
.*                               SYST0000              Called by:          *
.*                         input system                                    *
.***************************************************************************
SYST0000  DISPLAY    *P1:24,*EL,"(",*V2LON,ANSA,*HOFF,")&E, (",*V2LON:
                     ANSO,*HOFF,")utpatient, (",*V2LON,ANSI,*HOFF:
                     ")npatient";
.
          KEYIN      *P29:17,*EL,*DV,UNDLN1:     * get system
                     *P29:17,*V2LON,SYSTEM,*P29:17,*DV,SYSTEM;
.
          ENDSET     SYSTEM                      * append blanks
          APPEND     SP1,SYSTEM
          RESET      SYSTEM
          REP        UPPLOW,SYSTEM
.
          MATCH     ANSA,SYSTEM                  * A&E ?
          GOTO      SYST6000 IF EQUAL            * yes
          MATCH     ANSO,SYSTEM                  * Outpatient ?
          GOTO      SYST5000 IF EQUAL            * yes
          MATCH     ANSI,SYSTEM                  * Inpatient ?
          GOTO      SYST4000 IF EQUAL            * yes
          MATCH     SP1,SYSTEM                   * anything input ?
          GOTO      SYST9999 IF EQUAL            * no
          BEEP
          GOTO      SYST0000
.
SYST4000  DISPLAY   *P29:17,*V2LON,DINPT;        * display description
          MOVE      THREE,SYSDIM
          GOTO      SYST9999
.
SYST5000  DISPLAY   *P29:17,*V2LON,DOUTPT;
          MOVE      TWO,SYSDIM
          GOTO      SYST9999
.
SYST6000  DISPLAY   *P29:17,*V2LON,DAAE;
          MOVE      ONE,SYSDIM
.
SYST9999  RETURN
.
.***************************************************************************
.*                               SYST0000              Called by:          *
.*                         input system                                    *
.***************************************************************************
HOSP0000  IF        IBCNMHOS = 1
            DISPLAY   *P1:18,*EF,"Hospital Id : ";
            MOVE      TEN5,ECOL
            MOVE      FIVE,EVERT
            MOVE      SP3,CKYIDEF3
            MOVE      ZERO,CKYIMAND
            CALL      PATHSPKY
            BRANCH    EXIT,HOSP2000,HOSP9999
            GOTO      HOSP3000
.
HOSP2000    MOVE       "All Hospitals",PTHSNAME
            MOVE       SP10,PTHSHOSP
.
HOSP3000    DISPLAY   *P22:18,*EL,PTHSNAME,*W1;
          ENDIF
.
HOSP9999  RETURN
.
.***************************************************************************
.*                          OOUT0000                                       *
.*                    Open bokb files                                      *
.***************************************************************************
.
OOUT0000  MOVE      ZERO,EXIT
          PACK      KEY6,PVISITE
          CALL      RDSITA1
          BRANCH    OVRCD,OOUT9000
.
          CALL      OPOP0000
          BRANCH    OVRCD,OOUT9000
          GOTO      OOUT9999
OOUT9000  MOVE      ONE,EXIT
OOUT9999  RETURN
+
.***************************************************************************
.*                               GREC0000              Called by:          *
.*                        get matching records                             *
.*  searching is carried out by one of five methods, depending on which    *
.*   fields have ranges:                                                   *
.*   mode 1 - by future action date range                                  *
.*   mode 2 - by date of last letter sent                                  *
.*   mode 3 - by visit date                                                *
.*   mode 4 - by discharge date                                            *
.*   mode 5 - default search (through invoice file)                        )
.***************************************************************************
.
. ------- See if a range of future dates has been selected ----------
.
GREC0000  DISPLAY   *P1:24,*EL,"Scanning Visit No: ",*P50:24,"Found: ";
.
          MATCH     SP8,FUTDAT1                  * option 7 input ?
          GOTO      GREC0500 IF EQUAL            * no
          MOVE      ONE,MODE                     * set extraction mode
.
          PACK      KEY19,FUTDAT1,SP20                                 *C-79281
          CALL      RDSFACT2
GREC0100  CALL      RDKFACT2                     * read next record
          BRANCH    OVRCD,GREC9999               * end of file 
.
          UNPACK    FADATE,XCENT,XYEAR,XMON,XDAY
          DISPLAY   *P20:24,*V2LON,FADMNO,*P32:24,XDAY,SLASH,XMON,SLASH:
                    XCENT,XYEAR;
.
          MATCH     FADATE,FUTDAT2               * out of date range ?
          GOTO      GREC9999 IF LESS             * yes - finish
.
          MATCH     SP3,FACODE2                  * range specified ?
          GOTO      GREC0200 IF EQUAL            * no
.
          MATCH     FACODE1,FACODE               * code less than range ?
          GOTO      GREC0100 IF LESS             * yes
.
          MATCH     FACODE,FACODE2               * code greater than range ?
          GOTO      GREC0100 IF LESS             * yes
.
GREC0200  MOVE      FADMNO,KEY8
          CALL      RDVISA1                      * read visit record
          BRANCH    OVRCD,GREC0100               * record not found
.
          CALL      RDPMVX11                     * read visit record
          BRANCH    OVRCD,GREC0100               * record not found
.
          IF        IBCNMHOS<>1
            GOTO      GREC0300
          ENDIF
.
          MATCH     SP70,PMLTMHOS
          IF        !@EQUAL
            MATCH     PMLTMHOS,PMVXMHOS
            GOTO      GREC0100 IF NOT EQUAL
          ENDIF
  
.         A valid record has been found, so run it through the test routine
.         to see if it passes the other selection criteria
.
GREC0300  IF        PVITYPE = 2
            CALL      OOUT0000                   * open correct files
            BRANCH    EXIT,GREC0100
          ENDIF
          CALL      TEST0000
          GOTO      GREC0100                     * get next record
.
.----------------------------------------------------------------------
.
. ------  See if a range of last letter sent dates has been selected ----
.
GREC0500  MATCH     SP8,LDATE1                   * option 5 input ?
          GOTO      GREC1000 IF EQUAL            * no
          MOVE      TWO,MODE                     * set extraction mode
.
          PACK      KEY19,LCODE1,LDATE1,SP8
          CALL      RSPTLH2
GREC0600  CALL      RKPTLH2                      * get next record
          BRANCH    OVRCD,GREC9999               * end of file
.
          UNPACK    PTLHDATE,XCENT,XYEAR,XMON,XDAY
          DISPLAY   *P20:24,*V2LON,PTLHADMN,*P32:24,XDAY,SLASH,XMON,SLASH:
                    XCENT,XYEAR;
.
          MATCH     SP3,LCODE2                   * code range ?
          GOTO      GREC0650 IF EQUAL            * no
.
          MOVE      PTLHLCOD,DIM3
          MATCH     DIM3,LCODE2                  * code > range ?
          GOTO      GREC9999 IF LESS             * yes
.
GREC0650  MATCH     LDATE1,PTLHDATE              * date < range ?
          GOTO      GREC0700 IF LESS             * yes
.
          MATCH     PTLHDATE,LDATE2              * date > range ?
          GOTO      GREC0800 IF LESS             * yes
          GOTO      GREC0900                     * valid record
.
.         The letter date is less than the start date, so move forward in
.         the file for the current code, to the start date
.
GREC0700  PACK      KEY19,PTLHLCOD,LDATE1,SP8
          CALL      RSPTLH2
          GOTO      GREC0600
.
.         The letter date is greater than the end date, so move forward in
.         the file to the last record for this code
.
GREC0800  PACK      KEY19,PTLHLCOD,NINES,SP8
          CALL      RSPTLH2
          GOTO      GREC0600
.
GREC0900  MOVE      PTLHADMN,KEY8
          CALL      RDVISA1                      * get visit record
          BRANCH    OVRCD,GREC0600               * record not found
.
          CALL      RDPMVX11                     * read visit record
          BRANCH    OVRCD,GREC0600               * record not found
.
          IF        IBCNMHOS<>1
            GOTO      GREC0950
          ENDIF
.
          MATCH     SP70,PMLTMHOS
          IF        !@EQUAL
            MATCH     PMLTMHOS,PMVXMHOS
            GOTO      GREC0600 IF NOT EQUAL
          ENDIF

.         A valid record has been found, so run it through the test routine
.         to see if it passes the other selection criteria
.
GREC0950  IF        PVITYPE = 2
            CALL      OOUT0000                   * open correct files
            BRANCH    EXIT,GREC0600
          ENDIF
          CALL      TEST0000
          GOTO      GREC0600                     * get next record
.
.----------------------------------------------------------------------
.
. ------- See if a range of visit dates has been selected -----------
.
GREC1000  MATCH     SP8,VISDAT1                  * option 1 input ?
          GOTO      GREC2000 IF EQUAL            * no
          MOVE      THREE,MODE                   * ste extraction mode
.
          MATCH     SYSTEM,ANSA                  * A&E system
          GOTO      GREC1100 IF EQUAL
.
          MATCH     SYSTEM,SP1                   * All systems
          GOTO      GREC1100 IF EQUAL
          GOTO      GREC1300                     * bypass A&E search
.
GREC1100  DISPLAY   *P1:23,*EL,*V2LON,"** Processing A&E **",*HOFF;
          PACK      KEY21,VISDAT1,SP10,SP3       * position in file
          CALL      RDSDETA3
.
GREC1200  CALL      RDKDETA3                     * read next record
          BRANCH    OVRCD,GREC1300               * end of file
.
          UNPACK    ADADATE,XCENT,XYEAR,XMON,XDAY
          DISPLAY   *P20:24,*V2LON,ADANUMB,*P32:24,XDAY,SLASH,XMON,SLASH:
                    XCENT,XYEAR;
.
          MATCH     ADADATE,VISDAT2              * date > end date ?
          GOTO      GREC1300 IF LESS             * yes
.
.         A valid record has been found, so run it through the test routine
.         to see if it passes the other selection criteria
.  
          MOVE      ADANUMB,KEY8 
          CALL      RDVISA1                      * read visit record 
          BRANCH    OVRCD,GREC1200               * record not found
          CALL      RDPMVX11                     * read visit record
          BRANCH    OVRCD,GREC1200               * record not found
.
          IF        IBCNMHOS<>1
            GOTO      GREC1250
          ENDIF
.
          MATCH     SP70,PMLTMHOS
          IF        !@EQUAL
            MATCH     PMLTMHOS,PMVXMHOS
            GOTO      GREC1200 IF NOT EQUAL
          ENDIF
.
GREC1250  IF        PVITYPE = 2
            CALL      OOUT0000                   * open correct files
            BRANCH    EXIT,GREC1200
          ENDIF
          CALL      TEST0000
          GOTO      GREC1200                     * get next record
.
GREC1300  DISPLAY   *P1:23,*EL;
          MATCH     SYSTEM,ANSO                  * Outpatient system
          GOTO      GREC1400 IF EQUAL
.
          MATCH     SYSTEM,SP1                   * All systems
          GOTO      GREC1400 IF EQUAL
          GOTO      GREC1600                     * bypass Outpatient system
.
GREC1400  DISPLAY   *P1:23,*EL,*V2LON,"** Processing Outpatients **",*HOFF;
          CALL      CRTS0000                     * Create Temp site file
          CALL      SITE0000                     * Get the list of site prefixes
          MOVE      SP3,KEY3
          CALL      RSSITMP1                     * position in temp file 
GREC1450  CALL      RKSITMP1                     * get next site prefix
          BRANCH    OVRCD,GREC1600               * no more prefixes
.
          CALL      OPOP0000                     * open outpatient files
          BRANCH    OVRCD,GREC1450               * open failed
.
          PACK      KEY16,VISDAT1,SP20           * position in file
          CALL      RDSBOKB2
GREC1500  CALL      RDKBOKB2                     * read next record
          BRANCH    OVRCD,GREC1450               * end of file, get next site
.
          UNPACK    OBADATE,XCENT,XYEAR,XMON,XDAY
          DISPLAY   *P20:24,*V2LON,OBAOUTNO,*P32:24,XDAY,SLASH,XMON,SLASH:
                    XCENT,XYEAR;
.         
          MATCH     OBADATE,VISDAT2              * date > end date ?
          GOTO      GREC1450 IF LESS             * yes, get next site
.
.         A valid record has been found, so run it through the test routine
.         to see if it passes the other selection criteria
.
          MOVE      OBAOUTNO,KEY8
          CALL      RDVISA1                      * read visit record
          BRANCH    OVRCD,GREC1500               * record not found
          CALL      RDPMVX11                     * read visit record
          BRANCH    OVRCD,GREC1500               * record not found
.
          IF        IBCNMHOS<>1
            GOTO      GREC1550
          ENDIF
.
          MATCH     SP70,PMLTMHOS
          IF        !@EQUAL
            MATCH     PMLTMHOS,PMVXMHOS
            GOTO      GREC1500 IF NOT EQUAL
          ENDIF

GREC1550  CALL      TEST0000
          GOTO      GREC1500
.
GREC1600  DISPLAY   *P1:23,*EL;
          MATCH     SYSTEM,ANSI                  * Inpatient system
          GOTO      GREC1700 IF EQUAL
.
          MATCH     SYSTEM,SP1                   * All systems
          GOTO      GREC1700 IF EQUAL
          GOTO      GREC9999                     * bypass Outpatient system
.
GREC1700  DISPLAY   *P1:23,*EL,*V2LON,"** Processing Inpatients **",*HOFF;
          PACK      KEY16,VISDAT1,SP10             * position in file
          CALL      RDSMISS3
.
GREC1800  CALL      RDKMISS3                     * read next record
          BRANCH    OVRCD,GREC9999               * end of file
.
          UNPACK    ADATE,XCENT,XYEAR,XMON,XDAY
          DISPLAY   *P20:24,*V2LON,AADMNO,*P32:24,XDAY,SLASH,XMON,SLASH:
                    XCENT,XYEAR;
.
          MATCH     ADATE,VISDAT2                  * date > end date ?
          GOTO      GREC9999 IF LESS             * yes
.
.         A valid record has been found, so run it through the test routine
.         to see if it passes the other selection criteria
.
          MOVE      AADMNO,KEY8
          CALL      RDVISA1                      * read visit record
          BRANCH    OVRCD,GREC1800               * record not found
          CALL      RDPMVX11                     * read visit record
          BRANCH    OVRCD,GREC1800               * record not found
.
          IF        IBCNMHOS<>1
            GOTO      GREC1850
          ENDIF
.
          MATCH     SP70,PMLTMHOS
          IF        !@EQUAL
            MATCH     PMLTMHOS,PMVXMHOS
            GOTO      GREC1800 IF NOT EQUAL
          ENDIF

GREC1850  IF        PVITYPE = 2
            CALL      OOUT0000                   * open correct files
            BRANCH    EXIT,GREC1800
          ENDIF
          CALL      TEST0000
          GOTO      GREC1800                     * get next record
.
.----------------------------------------------------------------------
.
. ------- See if a range of discharge dates has been selected -------
.
GREC2000  MATCH     SP8,DISDAT1                  * option 2 input ?
          GOTO      GREC3000 IF EQUAL            * no
          MOVE      FOUR,MODE                    * set extraction mode
.
          MATCH     SYSTEM,ANSA                  * A&E system
          GOTO      GREC2100 IF EQUAL
.
          MATCH     SYSTEM,SP1                   * All systems
          GOTO      GREC2100 IF EQUAL
          GOTO      GREC2300                     * bypass A&E search
.
GREC2100  PACK      KEY21,DISDAT1,SP10,SP3       * position in file
          CALL      RDSDETA3
.
GREC2200  CALL      RDKDETA3                     * read next record
          BRANCH    OVRCD,GREC2300               * end of file
.
          UNPACK    ADADATE,XCENT,XYEAR,XMON,XDAY
          DISPLAY   *P20:24,*V2LON,ADANUMB,*P32:24,XDAY,SLASH,XMON,SLASH:
                    XCENT,XYEAR;
.
          MATCH     ADADATE,DISDAT2              * date > end date ?
          GOTO      GREC2300 IF LESS             * yes
.
.         A valid record has been found, so run it through the test routine
.         to see if it passes the other selection criteria
.
          MOVE      ADANUMB,KEY8
          CALL      RDVISA1                      * read visit record
          BRANCH    OVRCD,GREC2200               * record not found
          CALL      RDPMVX11                     * read visit record
          BRANCH    OVRCD,GREC2200               * record not found
.
          IF        IBCNMHOS<>1
            GOTO      GREC2250
          ENDIF
.
          MATCH     SP70,PMLTMHOS
          IF        !@EQUAL
            MATCH     PMLTMHOS,PMVXMHOS
            GOTO      GREC2200 IF NOT EQUAL
          ENDIF

GREC2250  IF        PVITYPE = 2
            CALL      OOUT0000                   * open correct files
            BRANCH    EXIT,GREC2200
          ENDIF
          CALL      TEST0000
          GOTO      GREC2200                     * get next record
.
GREC2300  MATCH     SYSTEM,ANSO                  * Outpatient system
          GOTO      GREC2400 IF EQUAL
.
          MATCH     SYSTEM,SP1                   * All systems
          GOTO      GREC2400 IF EQUAL
          GOTO      GREC2600                     * bypass Outpatient system
.
GREC2400  CALL      CRTS0000                     * Create Temp site file
          CALL      SITE0000                     * Get the list of site prefixes

          MOVE      SP3,KEY3
          CALL      RSSITMP1                     * position in temp file 
GREC2450  CALL      RKSITMP1                     * get next site prefix
          BRANCH    OVRCD,GREC2600               * no more prefixes
.
          CALL      OPOP0000                     * open outpatient files
          BRANCH    OVRCD,GREC2450
.
          PACK      KEY16,DISDAT1,SP8            * position in file
          CALL      RDSBOKB2
GREC2500  CALL      RDKBOKB2                     * read next record
          BRANCH    OVRCD,GREC2450               * end of file
.
          UNPACK    OBADATE,XCENT,XYEAR,XMON,XDAY
          DISPLAY   *P20:24,*V2LON,OBAOUTNO,*P32:24,XDAY,SLASH,XMON,SLASH:
                    XCENT,XYEAR;
.         
          MATCH     OBADATE,DISDAT2              * date > end date ?
          GOTO      GREC2450 IF LESS             * yes
.
.         A valid record has been found, so run it through the test routine
.         to see if it passes the other selection criteria
.
          MOVE      OBAOUTNO,KEY8
          CALL      RDVISA1                      * read visit record
          BRANCH    OVRCD,GREC2500               * record not found
          CALL      RDPMVX11                     * read visit record
          BRANCH    OVRCD,GREC2500               * record not found
.
          IF        IBCNMHOS<>1
            GOTO      GREC2550
          ENDIF
.
          MATCH     SP70,PMLTMHOS
          IF        !@EQUAL
            MATCH     PMLTMHOS,PMVXMHOS
            GOTO      GREC2500 IF NOT EQUAL
          ENDIF

GREC2550  CALL      TEST0000
          GOTO      GREC2500                     * get next record
.
GREC2600  MATCH     SYSTEM,ANSI                  * Inpatient system
          GOTO      GREC2700 IF EQUAL
.
          MATCH     SYSTEM,SP1                   * All systems
          GOTO      GREC2700 IF EQUAL
          GOTO      GREC9999                     * bypass Outpatient system
.
GREC2700  PACK      KEY16,DISDAT1,SP10             * position in file
          CALL      RDSDSCH2
.
GREC2800  CALL      RDKDSCH2                     * read next record
          BRANCH    OVRCD,GREC9999               * end of file
.
          UNPACK    DDATE,XCENT,XYEAR,XMON,XDAY
          DISPLAY   *P20:24,*V2LON,DADMNO,*P32:24,XDAY,SLASH,XMON,SLASH:
                    XCENT,XYEAR;
.
          MATCH     DDATE,DISDAT2               * date > end date ?
          GOTO      GREC9999 IF LESS             * yes
.
.         A valid record has been found, so run it through the test routine
.         to see if it passes the other selection criteria
.
          MOVE      DADMNO,KEY8
          CALL      RDVISA1                      * read visit record
          BRANCH    OVRCD,GREC2800               * record not found
          CALL      RDPMVX11                     * read visit record
          BRANCH    OVRCD,GREC2800               * record not found
.
          IF        IBCNMHOS<>1
            GOTO      GREC2850
          ENDIF
.
          MATCH     SP70,PMLTMHOS
          IF        !@EQUAL
            MATCH     PMLTMHOS,PMVXMHOS
            GOTO      GREC2800 IF NOT EQUAL
          ENDIF

GREC2850  IF        PVITYPE = 2
            CALL      OOUT0000                   * open correct files
            BRANCH    EXIT,GREC2800
          ENDIF
          CALL      TEST0000
          GOTO      GREC2800                     * get next record
.
.----------------------------------------------------------------------
.
. ------- Search through the invoice file for matching records ------
.
GREC3000  MOVE      FIVE,MODE                    * set extraction mode
          PACK      KEY32,SYSDIM,SP30,SP2        * position in file
          CALL      RDSINV4
.
GREC3050  CALL      RDKINV4                      * read next record
          BRANCH    OVRCD,GREC9999               * end of file
          DISPLAY   *P20:24,*V2LON,PINVADM;
.
          MATCH     "1",PTINCRST
          GOTO      GREC3050 IF EQUAL            * Fully credited
.
          MATCH     SP1,SYSTEM                   * system specified ?
          GOTO      GREC3300 IF EQUAL            * no
.
.         Check if valid system
.
          BRANCH    PINVSYS,GREC3100:
                            GREC3150:
                            GREC3200
          GOTO      GREC3050
.
GREC3100  MATCH     ANSA,SYSTEM                  * A&E ?
          GOTO      GREC3050 IF NOT EQUAL        * no
          GOTO      GREC3300
.
GREC3150  MATCH     ANSO,SYSTEM                  * outpatient ?
          GOTO      GREC3050 IF NOT EQUAL        * no
          GOTO      GREC3300
.
GREC3200  MATCH     ANSI,SYSTEM                  * inpatient ?
          GOTO      GREC3050 IF NOT EQUAL        * no
.
GREC3300  MATCH     SP3,CLAIM2                   * claim code range ?
          GOTO      GREC3800 IF EQUAL            * no
.
          MATCH     CLAIM1,PINVCLM               * claim code < start code ?
          GOTO      GREC8000 IF LESS             * yes
.
          MATCH     PINVCLM,CLAIM2               * claim code > end ?
          GOTO      GREC9000 IF LESS             * yes
.
GREC3800  MATCH     SP20,SNAME2                  * surname range ?
          GOTO      GREC4000 IF EQUAL            * no
.
          MOVE      SNAME1,SHNAME
          MATCH     SHNAME,PINALPHA              * surname < start ?
          GOTO      GREC8500 IF LESS             * yes
.
          MOVE      SNAME2,SHNAME
          MATCH     SHNAME,PINALPHA              * surname > end ?
          GOTO      GREC4000 IF EQUAL            * no
          GOTO      GREC4000 IF LESS             * no
          GOTO      GREC9500
.
GREC4000  MOVE      PINVADM,KEY8
          CALL      RDVISA1                      * read visit record
          BRANCH    OVRCD,GREC3050               * record not found
          CALL      RDPMVX11                     * read visit record
          BRANCH    OVRCD,GREC3050               * record not found
.
          IF        IBCNMHOS<>1
            GOTO      GREC4500
          ENDIF
.
          MATCH     SP70,PMLTMHOS
          IF        !@EQUAL
            MATCH     PMLTMHOS,PMVXMHOS
            GOTO      GREC3050 IF NOT EQUAL
          ENDIF

GREC4500  IF        PVITYPE = 2
            CALL      OOUT0000                   * open correct files
            BRANCH    EXIT,GREC3050
          ENDIF
          CALL      TEST0000
          GOTO      GREC3050
.
GREC8000  PACK      KEY32,PINVSYS,PINVSITE,CLAIM1,SP20
          CALL      RDSINV4                      * position for start cl. code
          GOTO      GREC3050
.
GREC8500  MOVE      SNAME1,SHNAME
          PACK      KEY32,PINVSYS,PINVSITE,PINVCLM,SHNAME,SP20
          CALL      RDSINV4                      * position for start surname
          GOTO      GREC3050
.
GREC9000  PACK      KEY32,PINVSYS,PINVSITE,ZEDS
          CALL      RDSINV4                      * position at last claim code
          GOTO      GREC3050
.
GREC9500  PACK      KEY32,PINVSYS,PINVSITE,PINVCLM,ZEDS
          CALL      RDSINV4                      * position at last surname
          GOTO      GREC3050
.
GREC9999  DISPLAY   *P1:23,*EL;
          RETURN
+
.***************************************************************************
.         Check if patient has Future action code that should be excluded
.***************************************************************************
CFAC0000  PACK       KEY8,CCC,CYY,CMM,CDD
          REP        " 0",KEY8
          PACK       KEY19,PVIBILL,KEY8,SP70
          CALL       RDSFACT1
CFAC1000  CALL       RDKFACT1
          BRANCH     OVRCD,CFAC9000
.
          MATCH      PVIBILL,FADMNO
          GOTO       CFAC9000 IF NOT EQUAL
.
          MOVE      "FA",KEY2
          PACK      KEY5,KEY2,FACODE,SP70
          CALL      RDCODE1
          IF        OVRCD=0
            MATCH     "H",TCINDC2                * Exclude ?
            GOTO      CFAC1000 IF NOT EQUAL
          ENDIF
          MOVE      ONE,EXIT                     * found excluded future action
          GOTO      CFAC9999
.
CFAC9000  MOVE      ZERO,EXIT
CFAC9999  RETURN
+
.***************************************************************************
.*                               TEST0000              Called by:          * 
.*        for every record found in the search procedure (GREC), test to   *
.*        see if the record matches all the other criteria specified.      *
.***************************************************************************
.
. ------- See if visit date in selected range -------------
.
TEST0000  COMPARE   THREE,MODE                   * extraction by visit date ?
          GOTO      TEST0500 IF EQUAL            * yes - so ignore this
.
          MATCH     SP8,VISDAT1                  * visit date range ?
          GOTO      TEST0500 IF EQUAL            * no
.
          MATCH     VISDAT1,PVIDATE              * date < start date ?
          GOTO      TEST9999 IF LESS             * yes
.
          MATCH     PVIDATE,VISDAT2              * date > end date ?
          GOTO      TEST9999 IF LESS             * yes
.
.         See if discharge date in selected range
.
TEST0500  COMPARE   FOUR,MODE                    * extraction by dis. date ?
          GOTO      TEST1000 IF EQUAL            * yes - so ignore this
.
          MATCH     SP8,DISDAT1                  * discharge date range ?
          GOTO      TEST1000 IF EQUAL            * no
.
          BRANCH    PVITYPE,TEST0600:            * A&E
                            TEST0600:            * outpatient
                            TEST0700             * inpatient
          GOTO      TEST9999
.
TEST0600  MATCH     DISDAT1,PVIDATE              * date < start date ?
          GOTO      TEST9999 IF LESS             * yes
.
          MATCH     PVIDATE,DISDAT2              * date > end date ?
          GOTO      TEST9999 IF LESS             * yes
          GOTO      TEST1000
.
TEST0700  MOVE      PVIBILL,KEY8
          CALL      RDDSCH1                      * get discharge record
          BRANCH    OVRCD,TEST9999               * not on file
.
          MATCH     DISDAT1,DDATE                * date < start date ?
          GOTO      TEST9999 IF LESS             * yes
.
          MATCH     DDATE,DISDAT2                * date > end date ?
          GOTO      TEST9999 IF LESS             * yes
.
. ------- See if surname in selected range ----------------
.
TEST1000  COMPARE   FIVE,MODE
          GOTO      TEST1500 IF EQUAL
.
          MATCH     SP20,SNAME2                  * surname range ?
          GOTO      TEST1500 IF EQUAL            * no
.
          MOVE      PVIURNO,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,TEST9999               * patient not on file
.
.         N.B. Partial match acceptable
.
          MATCH     SNAME1,PSNAME                * surname < start ?
          GOTO      TEST9999 IF LESS             * yes
.
          MATCH     SNAME2,PSNAME                * surname > end ?
          GOTO      TEST1500 IF EQUAL            * yes
          GOTO      TEST1500 IF LESS
          GOTO      TEST9999
.
. ------- See if last letter code in selected range -------
.
TEST1500  COMPARE   TWO,MODE
          GOTO      TEST2500 IF EQUAL
.
          MATCH     SP3,LCODE2                   * letter code range ?
          GOTO      TEST2000 IF EQUAL            * no
.
          PACK      KEY19,PVIBILL,NINES,SP3      * position in file
          CALL      RSPTLH1
          CALL      RPPTLH1                      * read previous record
          BRANCH    OVRCD,TEST9999               * not on file
.
          MATCH     PVIBILL,PTLHADMN             * same admission # ?
          GOTO      TEST9999 IF NOT EQUAL        * no
.
          MOVE      PTLHLCOD,DIM3
          MATCH     LCODE1,DIM3                  * code < start code ?
          GOTO      TEST9999 IF LESS             * yes
.
          MATCH     DIM3,LCODE2                  * code > end code ?
          GOTO      TEST9999 IF LESS             * yes
.
          MATCH     SP8,LDATE1                   * letter date range ?
          GOTO      TEST2500 IF EQUAL            * no
          GOTO      TEST2100
.
. ------- See if last letter date in selected range -------
.
TEST2000  COMPARE   TWO,MODE
          GOTO      TEST2500 IF EQUAL
.
          MATCH     SP8,LDATE1                   * letter date range ?
          GOTO      TEST2500 IF EQUAL            * no
.
          PACK      KEY19,PVIBILL,NINES,SP3      * position in file
          CALL      RSPTLH1
          CALL      RPPTLH1                      * read previous record
          BRANCH    OVRCD,TEST9999               * not on file
.
          MATCH     PVIBILL,PTLHADMN             * same admission # ?
          GOTO      TEST9999 IF NOT EQUAL        * no
.
TEST2100  MATCH     LDATE1,PTLHDATE              * date < start date ?
          GOTO      TEST9999 IF LESS             * yes
.
          MATCH     PTLHDATE,LDATE2              * date > end date ?
          GOTO      TEST9999 IF LESS             * yes
.
. ------- See if claim code in selected range -------------
.
TEST2500  COMPARE   FIVE,MODE
          GOTO      TEST3000 IF EQUAL
.
          MATCH     SP3,CLAIM2                   * claim code range ?
          GOTO      TEST3000 IF EQUAL            * no
.
          BRANCH    PVITYPE,TEST2600:            * A&E
                            TEST2700:            * outpatients
                            TEST2800             * inpatients
          GOTO      TEST9999
.
TEST2600  MOVE      PVIBILL,KEY8
          CALL      RDDETA1                      * get A&E record
          BRANCH    OVRCD,TEST9999               * record not found
.
          MATCH     CLAIM1,ADACOMP               * code < start code ?
          GOTO      TEST9999 IF LESS             * yes
.
          MATCH     ADACOMP,CLAIM2               * code > end code ?
          GOTO      TEST9999 IF LESS             * yes
.
          GOTO      TEST2900
.
TEST2700  MOVE      PVIBILL,KEY8
          CALL      RDBOKB1                      * get outpatient record
          BRANCH    OVRCD,TEST9999               * record not found
.
          MATCH     CLAIM1,OBACOMP               * code < start code ?
          GOTO      TEST9999 IF LESS             * yes
.
          MATCH     OBACOMP,CLAIM2               * code > end code ?
          GOTO      TEST9999 IF LESS             * yes
.
          GOTO      TEST2900
.
TEST2800  MOVE      PVIBILL,KEY8
          CALL      RDMISS1                      * get inpatient record
          BRANCH    OVRCD,TEST9999               * record not found
.
          MATCH     CLAIM1,ACLAIM                * code < start code ?
          GOTO      TEST9999 IF LESS             * yes
.
          MATCH     ACLAIM,CLAIM2                * code > end code ?
          GOTO      TEST9999 IF LESS             * yes
.
TEST2900  MATCH     SP3,ADTYPE2                  * adm. code range ?
          GOTO      TEST3500 IF EQUAL            * no
.
          BRANCH    PVITYPE,TEST3150:
                            TEST3250:
                            TEST3350
          GOTO      TEST9999
.
. ------- See if admission code in selected range ---------
.
TEST3000  MATCH     SP3,ADTYPE2                  * adm. code range ?
          GOTO      TEST3500 IF EQUAL            * no
.
          BRANCH    PVITYPE,TEST3100:            * A&E
                            TEST3200:            * outpatients
                            TEST3300             * inpatients
          GOTO      TEST9999
.
TEST3100  MOVE      PVIBILL,KEY8
          CALL      RDDETA1                      * get A&E record
          BRANCH    OVRCD,TEST9999               * record not found
.
TEST3150  MATCH     ADTYPE1,ADACLASS             * code < start code ?
          GOTO      TEST9999 IF LESS             * yes
.
          MATCH     ADACLASS,ADTYPE2             * code > end code ?
          GOTO      TEST9999 IF LESS             * yes
.
          GOTO      TEST3500
.
TEST3200  MOVE      PVIBILL,KEY8
          CALL      RDBOKB1                      * get outpatient record
          BRANCH    OVRCD,TEST9999               * record not found
.
TEST3250  MATCH     ADTYPE1,OBACLASS             * code < start code ?
          GOTO      TEST9999 IF LESS             * yes
.
          MATCH     OBACLASS,ADTYPE2             * code > end code ?
          GOTO      TEST9999 IF LESS             * yes
.
          GOTO      TEST3500
.
TEST3300  MOVE      PVIBILL,KEY8
          CALL      RDMISS1                      * get inpatient record
          BRANCH    OVRCD,TEST9999               * record not found
.
TEST3350  MATCH     ADTYPE1,ATYPE                * code < start code ?
          GOTO      TEST9999 IF LESS             * yes
.
          MATCH     ATYPE,ADTYPE2                * code > end code ?
          GOTO      TEST9999 IF LESS             * yes
.
. ------- Check against minimum balance owing -------------
.
TEST3500  IF        PVITYPE=1 | PVITYPE=2 | PVITYPE=3
            MOVE      PVITYPE,KEY1                 * Visit type
            CALL      PPDE0000                     * Check patient Debt
            BRANCH    EXIT,TEST9999
          ENDIF
.
          MOVE      ZERO,XOUTST
          PACK      KEY16,PVIBILL,SP10           * position in invoice file
          CALL      RDSINV3
.
TEST3600  CALL      RDKINV3                      * read the next record
          BRANCH    OVRCD,TEST3700               * no more records
.
          MATCH     PVIBILL,PINVADM              * same admission # ?
          GOTO      TEST3700 IF NOT EQUAL        * no
.
          MATCH     ANSY,IGNORE                  * ignore insurance invoices ?
          GOTO      TEST3650 IF NOT EQUAL        * no
.
          BRANCH    PINVTYP,TEST3600             * insurance invoice
.
TEST3650  CALL      GCSH0000                     * Get cash amount
          MOVE      ZERO,INVAMNT
          ADD       PINVAMT,INVAMNT
          ADD       PINVPATA,INVAMNT
          ADD       PINVHFDA,INVAMNT
          ADD       PINVOTHA,INVAMNT
          ADD       PINVJOUR,INVAMNT
          ADD       PTINCRTT,INVAMNT             * credit notes
          ADD       PTINGSTJ,INVAMNT             * I CAR 40452
          ADD       INVAMNT,XOUTST
.
          MATCH     SP8,FDATE2                   * fund payment date range ?
          GOTO      TEST3600 IF EQUAL            * no
.
          MATCH     DZERO8,FDATE1                 * default "start" ?
          GOTO      TEST3660 IF NOT EQUAL        * no
.
          MATCH     NINES,FDATE2                 * default "finish" ?
          GOTO      TEST3660 IF NOT EQUAL        * no
          GOTO      TEST3600
.
TEST3660  COMPARE   ZERO,INVAMNT
          GOTO      TEST3600 IF EQUAL            * no outstanding amount
          CALL      GPAY0000                     * Check HF/Insurance payment
          GOTO      TEST3600                     * get next invoice
.
TEST3700  BRANCH    HFPAYFLG,TEST9999
          COMPARE   MINBAL,XOUTST                * total < min. balance ?
          GOTO      TEST9999 IF LESS             * yes
.
. ------- See if deceased status specified ----------------
.
          MATCH     SP1,DSTATUS                  * status specified ?
          GOTO      TEST6000 IF EQUAL            * no
.
          MOVE      PVIURNO,KEY8
          CALL      RDMAST1                      * read patient file
          BRANCH    OVRCD,TEST9999               * patient not on file
.
          BRANCH    PCEASE,TEST5100              * deceased flag set
.
          MATCH     ANSA,DSTATUS                 * status alive ?
          GOTO      TEST9999 IF NOT EQUAL        * no
          GOTO      TEST6000
.
TEST5100  MATCH     ANSD,DSTATUS                 * status deceased ?
          GOTO      TEST9999 IF NOT EQUAL        * no
.
. ------- See if system specified -------------------------
.
TEST6000  MATCH     SP1,SYSTEM                   * system specified ?
          GOTO      TEST9000 IF EQUAL            * no
.
          BRANCH    PVITYPE,TEST6100:            * A&E
                            TEST6200:            * outpatient
                            TEST6300             * inpatient
          GOTO      TEST9999
.
TEST6100  MATCH     ANSA,SYSTEM                  * valid system ?
          GOTO      TEST9999 IF NOT EQUAL        * no
          GOTO      TEST9000                     * yes
.
TEST6200  MATCH     ANSO,SYSTEM                  * valid system ?
          GOTO      TEST9999 IF NOT EQUAL        * no
          GOTO      TEST9000                     * yes
.
TEST6300  MATCH     ANSI,SYSTEM                  * valid system ?
          GOTO      TEST9999 IF NOT EQUAL        * no
.
.         Valid record found, so write to temp file
.
TEST9000  MOVE      PVIURNO,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,TEST9999               * patient not on file
.
          CALL      CFAC0000                 * Check for Excluded Future action 
          BRANCH    EXIT,TEST9999
.
          MATCH     SP70,HEALTHFD
          IF        !@EQUAL
            CALL      CFND0000               * Check for selected health fund
            BRANCH    EXIT,TEST9999
          ENDIF
.
          MATCH     SP70,INSURCOD
          IF        !@EQUAL
            MOVE      PVIBILL,KEY8
            CALL      RDWCOM1
            BRANCH    OVRCD,TEST9999
            MATCH     WCICODE,INSURCOD       * Check for selected insurance code
            GOTO      TEST9999 IF NOT EQUAL
          ENDIF
.
          MATCH     SP70,MISCCODE
          IF        !@EQUAL
            CALL      CHITM000               * Check for selected item
            BRANCH    EXIT,TEST9999
          ENDIF
.
          MOVE      PSNAME,PACSNAME              * format patient name
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,DISPNAME
.
.         MATCH     "IBARSH",PGM                 * Running from Web?
.         GOTO      TEST9400 IF NOT EQUAL        * No, write to temp file
          PACK      SELECTID,SELECTID,SP10       * Yes, write to pmsllaf file  
          ADD       ONE,RECRDCNT                 * Do record count
          PACK      KEY12,SELECTID,PVIBILL
          CALL      RDPMLLF1                     * Record exists?
          BRANCH    OVRCD,TEST9200               * No, insert to pmsllaf file
          MOVE      XOUTST,PMLLOSMT
          CALL      UPPMLLF1
          GOTO      TEST9999                     * Yes, exit
.
TEST9200  MOVE      SELECTID,PMLLSEID
          MOVE      PVIBILL,PMLLVISN
          MOVE      XOUTST,PMLLOSMT
          PACK      PMLLSTAT,SP3
          CALL      WRPMLLF1                     * Write pmsllaf file
          GOTO      TEST9999
.
TEST9400  MOVE      PVIBILL,KEY8
          CALL      RDTEMP1                      * see if visit already on file
          BRANCH    OVRCD,TEST9500               * no
          GOTO      TEST9999
.
TEST9500  DISPLAY   *P57:24,*V2LON,PVIBILL;
          MOVE      SP2,XVTYPE
          LOAD      XVTYPE,PVITYPE,TYPEAE,TYPEOP,TYPEIP
.
          UNPACK    PVIDATE,CCENT,CYEAR,CMON,CDAY
          PACK      XVDATE,CCENT,CYEAR,CMON,CDAY
.
          MOVE      PVIURNO,XURNO
          MOVE      DISPNAME,XPNAME
          MOVE      ONE,IFLAG
          CALL      WRTEMP1                      * Write a record to temp file
          GOTO      TEST9999
.
TEST9999  RETURN
+
.***************************************************************************
.         Check patient debt
.***************************************************************************
PPDE0000  MATCH     SP70,PAYMPLAN            * Patient on Payment plan?
          GOTO      PPDE9000 IF EQUAL
          MATCH     "0",PAYMPLAN
          GOTO      PPDE9000 IF EQUAL
.
          MOVE      "2",PTDETYPE             * Payment plan
          PACK      KEY18,SPVIURNO,PTDETYPE,Z70
          CALL      RSPTDET2
PPDE1000  CALL      RPPTDET2
          BRANCH    OVRCD,PPDE8000
.
          MATCH     SPVIURNO,PTDEURNO
          GOTO      PPDE8000 IF NOT EQUAL
.
          MATCH     "2",PTDETYPE
          GOTO      PPDE8000 IF NOT EQUAL    * Not a payment plan
.
          MATCH     KEY1,PTDESYST
          GOTO      PPDE1000 IF NOT EQUAL    * different system
.
.         PAYMPLAN =1 Only patient on a payment plan
.                   2 Exclude patients on a payment plan
.
          MATCH     "1",PAYMPLAN             * Yes only patient on payment plan
          IF        @EQUAL
            MATCH     SP8,PTDEDTCL
            GOTO      PPDE1000 IF NOT EQUAL  * cleared
          ELSE
            MATCH     SP8,PTDEDTCL
            GOTO      PPDE9200 IF EQUAL      * found one with payment plan
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      PPDE9999
.
PPDE8000  MATCH     "1",PAYMPLAN             * Yes only patient on payment plan
          GOTO      PPDE9200 IF EQUAL
.
PPDE9000  MOVE      ZERO,EXIT
          GOTO      PPDE9999
.
PPDE9200  MOVE      ONE,EXIT
.
PPDE9999  RETURN
+
.***************************************************************************
.         Check payment dates
.***************************************************************************
GPAY0000  MOVE      SP70,INVOICEN
          MOVE      PINVNO,FORM8
          MOVE      FORM8,FORM12
          MOVE      FORM12,INVOICEN
          MOVE      ONE,HFPAYFLG
.
. ------- See if fund payment date in specified range -----
.
          PACK      KEY29,INVOICEN,SP70
          CALL      RSRCDTE3
GPAY2000  CALL      RKRCDTE3
          BRANCH    OVRCD,GPAY9999
.
          MATCH     INVOICEN,RCDTINVN
          GOTO      GPAY9999 IF NOT EQUAL
.
.         Get payment type
.
          MOVE      RCDTRECN,KEY12
          CALL      RDRCBNK1
          BRANCH    OVRCD,GPAY2000
.
          MATCH     "1",RCBNSTAT                * Cancelled
          GOTO      GPAY2000 IF EQUAL
.
.         Check for type of register
.
          PACK      KEY3,RCDTREGI,SP70
          CALL      RDREGA1
          BRANCH    OVRCD,GPAY2000
.
          COMPARE   "2",REGIBACD
          GOTO      GPAY2000 IF EQUAL       * Private Practice
          COMPARE   "96",REGIBACD
          GOTO      GPAY2000 IF EQUAL       * PRI Deposit
.
          MOVE      ZERO,F1
          MOVE      RCBNTTYP,F1
          BRANCH    F1,GPAY4000,GPAY4000
          GOTO      GPAY2000
.
GPAY4000  MATCH     FDATE1,RCDTTDAT              * date < start date ?
          GOTO      GPAY2000 IF LESS             * yes
.
          MATCH     RCDTTDAT,FDATE2              * date > end date ?
          GOTO      GPAY2000 IF LESS             * yes
.
          BRANCH    F1,GPAY8000,GPAY8000         * found a HF/Insurance payment
          GOTO      GPAY2000
.
GPAY8000  MOVE      ZERO,HFPAYFLG
GPAY9999  RETURN
+
.***************************************************************************
.*                               GVIS0000              Called by:          *
.*                  get selected visit numbers                             *
.***************************************************************************
GVIS0000  DISPLAY   *P1:3,*EF;
.
GVIS1000  KEYIN     *P1:4,*EL,"Visit Number : ",*DV,UNDLN8:
                    *P16:4,*V2LON,*DE,*JR,TEMPBILL:
                    *P16:4,*DV,TEMPBILL;
.
          RESET     TEMPBILL 
          GOTO      GVIS9000 IF EOS              * nothing entered
.
          MOVE      TEMPBILL,VISIT
          MOVE      VISIT,KEY8
.
          CALL      RDTEMP1                      * visit already input ?
          BRANCH    OVRCD,GVIS2000               * no
.
          DISPLAY   *P1:24,*EL,*B,*V2LON,"** Visit already inputted **    ";
          CALL      HITENTER
          GOTO      GVIS1000
.
GVIS2000  CALL      RDVISA1
          BRANCH    OVRCD,GVIS8000               * visit not on file
.
          MOVE      PVIURNO,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,GVIS8500               * patient not on file
.
          MOVE      PSNAME,PACSNAME              * format patient name
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,DISPNAME
          DISPLAY   *P1:24,*EL,"Patient Name : ",*V2LON,DISPNAME,SP7;
          CALL      HITENTER
.
          MOVE      VISIT,KEY8                   * load visit type
          MOVE      SP2,XVTYPE
          LOAD      XVTYPE,PVITYPE,TYPEAE,TYPEOP,TYPEIP
.
          UNPACK    PVIDATE,CCENT,CYEAR,CMON,CDAY   * format visit date
          PACK      XVDATE,CCENT,CYEAR,CMON,CDAY
.
          MOVE      PVIURNO,XURNO
          MOVE      DISPNAME,XPNAME
          CALL      GAMT0000                     * get outstanding total
          MOVE      ONE,IFLAG
.
          CALL      WRTEMP1                      * Write to temp file
          GOTO      GVIS1000
.
GVIS8000  DISPLAY   *P1:24,*EL,*B,*V2LON,"** Visit not on file **    ";
          CALL      HITENTER
          GOTO      GVIS1000
.
GVIS8500  DISPLAY   *P1:24,*EL,*B,*V2LON,"** Patient not on file **    ";
          CALL      HITENTER
          GOTO      GVIS1000
.
GVIS9000  COMPARE   ONE,IFLAG                    * any visits entered ?
          GOTO      GVIS9500 IF EQUAL            * yes
          GOTO      GVIS9999                     * no
.
GVIS9500  MOVE      ZERO,EXIT
          GOTO      GVIS9999
.
GVIS9800  MOVE      ONE,EXIT
.
GVIS9999  RETURN
+
.**************************************************************************
.*                              CRTV0000               Called by:         *
.* Create Temp Visit file                                                 *
.**************************************************************************
CRTV0000  CALL      KILV0000                     * remove existing file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,TEMPFILE,TKEY
          EXECUTE   CMDLINE,TASKID               * create temporary index file
.
          OPEN      VISTEMP1,TEMPFILE            * open temp index file
.
CRTV9999  RETURN
+
.****************************************************************************
.*                              KILV0000               Called by:           *
.*               close and erase the temporary visit file                   *
.****************************************************************************
KILV0000  CLOSE     VISTEMP1                     * close file
.
          CLEAR     CMDLINE 
          PACK      CMDLINE,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
KILV9999 RETURN
+
.***************************************************************************
.*                             DSPP0000               Called by:           *
.*        Get the next record, then check if                               *
.*        screen is full before displaying the record                      *
.***************************************************************************
DSPP0000  DISPLAY   *P1:3,*EF,*P5:4,*V2LON,*ULON,"  Visit No.",*P17:4:
                    " Vis Date ",*P28:4,"Outstanding",*P40:4," U/R No.":
                    *P49:4,"Patients Name                  ";
.
          MOVE      ONE,SCREEN
          PACK      KEY8,SP8
          CALL      NEWS0000
          CALL      RSTEMP1
DSPP1000  CALL      RKTEMP1                 * Get next matching record
          BRANCH    OVRCD,DSPP5000 
.
          COMPARE   TWENTY2,CVERT           * Check if page is full
          GOTO      DSPP3000 IF LESS
.
          CALL      QSTN0000                * Prompt user as page is full
          BRANCH    EXIT,DSPP9999:          * Exit
                         DSPP9999:          * Send letters
                         DSPP2000:          * Previous screen
                         DSPP2500:          * Next screen
                         DSPP4000:          * delete record form temp file
                         DSPP9999           * cancel
.
.         Set up to display previous screen
.
DSPP2000  CALL      PREV0000
.
DSPP2100  CALL      NEWS0000
          SUB       ONE,SCREEN
          GOTO      DSPP3000
.
.         Set up for new screen
.
DSPP2500  CALL      NEWS0000
          ADD       ONE,SCREEN
    
DSPP3000  ADD       ONE,COUNTER             * Display next record 
          ADD       ONE,CVERT
          CALL      DSPL0000 
          GOTO      DSPP1000
.
.         Delete record from temp file
.
DSPP4000  CALL      LOAD0000                * load the key for the record
          CALL      DETEMP1                 * delete the record
.
          COMPARE   COUNTER,ONE             * only one record on screen ?
          GOTO      DSPP4500 IF NOT EQUAL   * no - so redisplay screen
.
          COMPARE   ONE,SCREEN              * first screen ?
          GOTO      DSPP4100 IF EQUAL       * yes
.
          MOVE      ONE,TNUMB
          CALL      LOAD0000
          CALL      RSTEMP1                 * position were deleted record was
          CALL      BACK0000
          GOTO      DSPP2100
.
DSPP4100  MOVE      ONE,EXIT                * return and redisplay select screen
          GOTO      DSPP9999
.
DSPP4500  COMPARE   ONE,TNUMB               * first record on screen deleted ?
          GOTO      DSPP4600 IF NOT EQUAL   * no
.
          MOVE      TWO,TNUMB               * load in key for second record
          GOTO      DSPP4700
.
DSPP4600  MOVE      ONE,TNUMB               * load in key for first record
.
DSPP4700  CALL      LOAD0000                * redisplay screen
          CALL      RDTEMP1
          BRANCH    OVRCD,DSPP0000
          CALL      NEWS0000
          GOTO      DSPP3000
.
.         No more records to be displayed 
.
DSPP5000  CALL      QSTE0000                * Ask question without Next
          BRANCH    EXIT,DSPP9999:          * Exit
                         DSPP9999:          * Send letters
                         DSPP2000:          * Previous selected
                         DSPP2500:          * Next - not used here
                         DSPP4000:          * delete record from temp file
                         DSPP9999           * cancel
.
DSPP9999  RETURN
+
.***************************************************************************
.*                             DSPL0000               Called by: DSPP0000  *
.*        Display the current record                                       *
.***************************************************************************
DSPL0000  CALL      KPUT0000
          DISPLAY   *P1:CVERT,*V2LON,COUNTER,*HOFF,DOT,SP1,XVTYPE,SP1,XVNUMB;
.
          UNPACK    XVDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P17:CVERT,CPCDATE,*P29:CVERT,XOUTST,*P40:CVERT,XURNO:
                    *P49:CVERT,XPNAME;
.
DSPL9999  RETURN
+
.***************************************************************************
.*                                PREV0000            Called by: DSPP0000  *
.*        Back up to the previous screen                                   *
.***************************************************************************
PREV0000  MOVE      ONE,TNUMB               * Load key for first record
          CALL      LOAD0000
.
          CALL      RDTEMP1                 * key read        
          CALL      BACK0000
.
PREV9999  RETURN
+
.***************************************************************************
.*                                BACK0000             Called by:          *
.*                  read back one page of records                          *
.***************************************************************************
BACK0000  CALL      RPTEMP1                 * Read back a record
          BRANCH    OVRCD,BACK9000
.
          ADD       ONE,TNUMB
          COMPARE   TEN9,TNUMB 
          GOTO      BACK0000 IF LESS
          GOTO      BACK9999
.
BACK9000  PACK      KEY8,SP8
          CALL      RSTEMP1                 * positional read
          CALL      RKTEMP1                 * read first record
.
BACK9999  RETURN
+
.***************************************************************************
.*                                QSTN0000            Called by: DSPP0000  *
.*        Screen is full, so prompt user                                   *
.***************************************************************************
QSTN0000  MOVE      SP2,CHOICE
          BRANCH    SCREEN,QSTN1000         * Check if first screen
.
          KEYIN     *P1:24,*EL,"Select item to delete, (",*V2LON,*DV,ANSE,*HOFF:
                    ")xit, (",*V2LON,*DV,ANSS,*HOFF,")end letter, (":
                    *V2LON,*DV,ANSN,*HOFF,")ext, (",*V2LON,*DV,ANSP,*HOFF:
                    ")revious ? ",*DV,UNDLN2:
                    *P68:24,*V2LON,CHOICE;
.
          TYPE      CHOICE
          GOTO      QSTN2000 IF EQUAL       * Number entered
          CALL      PADN0000
.
          MATCH     ANSE,CHOICE
          GOTO      QSTN5000 IF EQUAL       * Exit selected
          MATCH     ANSS,CHOICE
          GOTO      QSTN6000 IF EQUAL       * Send letters selected
          MATCH     ANSN,CHOICE
          GOTO      QSTN8000 IF EQUAL       * Next page selected
          MATCH     ANSP,CHOICE
          GOTO      QSTN7000 IF EQUAL       * Previous page selected
          BEEP                              * Invalid entry
          GOTO      QSTN0000
.
QSTN1000  KEYIN     *P1:24,*EL,"Select item to delete, (",*V2LON,*DV,ANSE,*HOFF:
                    ")xit, (",*V2LON,*DV,ANSS,*HOFF,")end letter, (":
                    *V2LON,*DV,ANSN,*HOFF,")ext ? ",*DV,UNDLN2:
                    *P56:24,*V2LON,CHOICE;
.
          TYPE      CHOICE
          GOTO      QSTN2000 IF EQUAL       * Number entered
          CALL      PADN0000
.
          MATCH     ANSE,CHOICE
          GOTO      QSTN5000 IF EQUAL       * Exit selected
          MATCH     ANSS,CHOICE
          GOTO      QSTN6000 IF EQUAL       * Send letters selected
          MATCH     ANSN,CHOICE
          GOTO      QSTN8000 IF EQUAL       * Next page selected
          BEEP                              * Invalid entry
          GOTO      QSTN0000
.
.         See if a valid number was entered
.
QSTN2000  MOVE      CHOICE,TNUMB
.
          COMPARE   ZERO,TNUMB
          GOTO      QSTN0000 IF LESS
          GOTO      QSTN4000 IF EQUAL
.
          COMPARE   TNUMB,COUNTER
          GOTO      QSTN9000 IF NOT LESS
.
QSTN4000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Only select a number displayed on the screen **    ";
          CALL      HITENTER
          GOTO      QSTN0000
.
.         Set the EXIT flag according to the users choice
.
QSTN5000  KEYIN     *P1:24,*EL,"Are you sure you don't want to send any ":
                    "letters to these patients (Y/N) ? ":
                    *P75:24,*V2LON,ANS;
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
          REP       UPPLOW,ANS
.
          MATCH     ANSN,ANS
          GOTO      QSTN0000 IF EQUAL
          MATCH     ANSY,ANS
          GOTO      QSTN5500 IF EQUAL
          BEEP                                   * invalid answer
          GOTO      QSTN5000
.
QSTN5500  MOVE      ONE,EXIT                * Exit
          GOTO      QSTN9999 
.
QSTN6000  DISPLAY   *P1:23,*EL;
.
          CALL      LCOD0000                     * get letter code
          BRANCH    EXIT,QSTN0000                * nothing entered
.
          DISPLAY   *P1:23,*EL,"Letter : ",PTFLTEXT;
          CALL      CONTQST
          BRANCH    CEXIT,QSTN6500:         * yes
                          QSTN6000:         * no
                          QSTN9800          * cancel
.
QSTN6500  MOVE      TWO,EXIT                * Send letter
          GOTO      QSTN9999
.
QSTN7000  MOVE      THREE,EXIT              * Previous screen
          GOTO      QSTN9999
.
QSTN8000  MOVE      FOUR,EXIT               * Next screen
          GOTO      QSTN9999
.
QSTN9000  KEYIN     *P1:24,*EL,"Are you sure you don't want to send a letter ":
                    "to this patient (Y/N) ? ":
                    *P71:24,*V2LON,ANS;
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS
          GOTO      QSTN9500 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      QSTN0000 IF EQUAL
          BEEP
          GOTO      QSTN9000
.
QSTN9500  MOVE      FIVE,EXIT               * Number selected
          GOTO      QSTN9999
.
QSTN9800  MOVE      SIX,EXIT                * Cancel
.
QSTN9999  RETURN
+
.***************************************************************************
.*                               QSTE0000             Called by: DSPP0000  *
.*        No more records to display                                       *
.***************************************************************************
QSTE0000  MOVE      SP2,CHOICE
          BRANCH    SCREEN,QSTE1000         * Check if first screen
.
          KEYIN     *P1:24,*EL,"Select item to delete, (",*V2LON,*DV,ANSE,*HOFF:
                    ")xit, (",*V2LON,*DV,ANSS,*HOFF,")end letter, (":
                    *V2LON,*DV,ANSP,*HOFF,")revious : ",*DV,UNDLN2:
                    *P60:24,*V2LON,CHOICE;
.
          TYPE      CHOICE
          GOTO      QSTE2000 IF EQUAL       * Number selected
          CALL      PADN0000
.
          MATCH     ANSE,CHOICE
          GOTO      QSTE5000 IF EQUAL       * Exit selected
          MATCH     ANSS,CHOICE
          GOTO      QSTE6000 IF EQUAL       * Send letters selected
          MATCH     ANSP,CHOICE
          GOTO      QSTE7000 IF EQUAL       * Previous screen selected
          BEEP                              * Invalid entry
          GOTO      QSTE0000
.         
QSTE1000  KEYIN     *P1:24,*EL,"Select item to delete, (",*V2LON,*DV,ANSE,*HOFF:
                    ")xit, (",*V2LON,*DV,ANSS,*HOFF,")end letter : ",*DV,UNDLN2:
                    *P48:24,*V2LON,CHOICE;
.
          TYPE      CHOICE
          GOTO      QSTE2000 IF EQUAL       * Number selected
          CALL      PADN0000
.
          MATCH     ANSE,CHOICE
          GOTO      QSTE5000 IF EQUAL       * Exit selected
          MATCH     ANSS,CHOICE
          GOTO      QSTE6000 IF EQUAL       * Send letters selected
          BEEP                              * Invalid entry
          GOTO      QSTE0000
.         
.         See if a valid number was entered
.
QSTE2000  MOVE      CHOICE,TNUMB
.
          COMPARE   ZERO,TNUMB
          GOTO      QSTE0000 IF LESS
          GOTO      QSTE4000 IF EQUAL
.
          COMPARE   TNUMB,COUNTER
          GOTO      QSTE9000 IF NOT LESS
.
QSTE4000  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Only select a number displayed on the screen **    ";
          CALL      HITENTER
          GOTO      QSTE0000
.
.         Set the EXIT flag according to the users choice
.
QSTE5000  KEYIN     *P1:24,*EL,"Are you sure you don't want to send any ":
                    "letters to these patients (Y/N) ? ":
                    *P75:24,*V2LON,ANS;
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
          REP       UPPLOW,ANS
.
          MATCH     ANSN,ANS
          GOTO      QSTE0000 IF EQUAL
          MATCH     ANSY,ANS
          GOTO      QSTE5500 IF EQUAL
          BEEP                                   * invalid answer
          GOTO      QSTE5000
.
QSTE5500  MOVE      ONE,EXIT                * Exit
          GOTO      QSTE9999
.           
QSTE6000  DISPLAY   *P1:23,*EL;
.
          CALL      LCOD0000                * get the letter code
          BRANCH    EXIT,QSTE0000           * nothing entered
.
          DISPLAY   *P1:23,*EL,"Letter : ",PTFLTEXT;
          CALL      CONTQST
          BRANCH    CEXIT,QSTE6500:         * yes
                          QSTE6000:         * no
                          QSTE9800          * cancel
.
QSTE6500  MOVE      TWO,EXIT                * Send letter
          GOTO      QSTE9999
.
QSTE7000  MOVE      THREE,EXIT              * Previous screen
          GOTO      QSTE9999
.
QSTE9000  KEYIN     *P1:24,*EL,"Are you sure you don't want to send a letter ":
                    "to this patient (Y/N) ? ",*P71:24,*V2LON,ANS;
.
          ENDSET    ANS
          APPEND    SP1,ANS
          RESET     ANS
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS
          GOTO      QSTE9500 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      QSTE0000 IF EQUAL
          BEEP
          GOTO      QSTE9000
.
QSTE9500  MOVE      FIVE,EXIT               * Number selected
          GOTO      QSTE9999
.
QSTE9800  MOVE      SIX,EXIT                * Cancel
.
QSTE9999  RETURN
+
.***************************************************************************
.*                                LCOD0000             Called by:          *
.*                         get the letter code                             *
.***************************************************************************
LCOD0000  KEYIN     *P1:24,*EL,"Please enter the letter code to be sent : ":
                    *DV,UNDLN3: 
                    *P43:24,*V2LON,*JR,LCODE,*P43:24,*DV,LCODE;
.
. check what was entered
.
LCOD0800  CALL      LETCK000
          BRANCH    EXIT,LCOD1000:               * ? entered
                         LCOD7050:               * code entered
                         LCOD8050                * nothing entered
          GOTO      LCOD0000 
.  
. a "?" was input
.
LCOD1000  DISPLAY   *P43:24,UNDLN3;
          GETSCR    1,1,1,80,24                 * save screen before "?".
.
LCOD1050  MOVE      ONE,CNEWDS
          CALL      PATFLTDS
.
. now ask for code while leaving displayed codes on screen
.
LCOD1500  KEYIN     *P1:24,*EL,*DV,"Letter Code    : ":
                    *P18:24,*DV,UNDLN3,*P18:24,*V2LON,*JR,LCODE:
                    *P18:24,*DV,LCODE;
.
. repeat the validation of the code
. check what was entered
.
LCOD3000  CALL      LETCK000
          BRANCH    EXIT,LCOD1050:               * ? entered
                         LCOD7000:               * code entered
                         LCOD8000                * nothing entered
          GOTO      LCOD1500
.
. a valid code or nothing was entered 
. 
LCOD7000  PUTSCR    1
.
LCOD7050  DISPLAY   *P43:24,*V2LON,LCODE;
          MOVE      ZERO,EXIT
          GOTO      LCOD9999
.
LCOD8000  PUTSCR    1
          DISPLAY   *P43:24,LCODE;               * Clear the "?" from the Screen
.
LCOD8050  MOVE      ONE,EXIT                     * Nothing or Spaces entered
          GOTO      LCOD9999
.
LCOD9999  RETURN
+
.***************************************************************************
.*                                PADN0000            Called by: QSTN0000  *
.*        Pad choice with blanks                                 QSTE0000  *
.***************************************************************************
PADN0000  ENDSET    CHOICE
          APPEND    SP2,CHOICE
          RESET     CHOICE
          REP       UPPLOW,CHOICE
.
PADN9999  RETURN
+
.***************************************************************************
.*                                LOAD0000            Called by: PREV0000  *
.*        Load the unique key selected into the key variable               *
.***************************************************************************
LOAD0000  LOAD      KEY8,TNUMB,KEYA,KEYB,KEYC,KEYD,KEYE,KEYF,KEYG,KEYH,KEYI:
                               KEYJ,KEYK,KEYL,KEYM,KEYN,KEYO,KEYP,KEYQ,KEYR
LOAD9999  RETURN
+
.***************************************************************************
.*                                KPUT0000            Called by: DSPL0000  *
.*        Store the current key for the record being displayed             *
.***************************************************************************
KPUT0000  MOVE      XVNUMB,KEY8
.
          STORE     KEY8,COUNTER,KEYA,KEYB,KEYC,KEYD,KEYE,KEYF,KEYG,KEYH,KEYI:
                                 KEYJ,KEYK,KEYL,KEYM,KEYN,KEYO,KEYP,KEYQ,KEYR
KPUT9999  RETURN
+
.**************************************************************************
.*                                NEWS0000            Called by: DSPP0000 *
.*        Clear the screen for the next page display                      *
.**************************************************************************
NEWS0000  DISPLAY   *P1:5,*EF;
          MOVE      FOUR,CVERT              * Reset line number
          MOVE      ZERO,COUNTER            * Reset record count
.
NEWS9999  RETURN
+
.**************************************************************************
.*                                CTMP0000             Called by:         *
.*                       remove temp file records                         *
.**************************************************************************
CTMP0000  PACK      KEY8,SP8
          CALL      RSTEMP1
CTMP1000  CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,CTMP9999               * no more records
.
          MOVE      XVNUMB,KEY8
          CALL      DETEMP1                      * delete record
          GOTO      CTMP10000                    * get next record
.
CTMP9999  RETURN
+
.**************************************************************************
.*                                GAMT0000             Called by:         *
.*                      get amount outstanding from invoices              *
.**************************************************************************
GAMT0000  MOVE      ZERO,XOUTST                  * initialise outstanding amt.
          PACK      KEY16,VISIT,SP10
          CALL      RDSINV3                      * position in file
GAMT1000  CALL      RDKINV3                      * read next record
          BRANCH    OVRCD,GAMT9999               * end of file
.
          MATCH     VISIT,PINVADM                * same visit ?
          GOTO      GAMT9999 IF NOT EQUAL        * no
.
          CALL      GCSH0000                     * Get cash amount
          ADD       PINVAMT,XOUTST
          ADD       PINVPATA,XOUTST
          ADD       PINVHFDA,XOUTST
          ADD       PINVOTHA,XOUTST
          ADD       PINVJOUR,XOUTST
          ADD       PTINCRTT,XOUTST              * credit notes
          ADD       PTINGSTJ,XOUTST              * I CAR 40452
          GOTO      GAMT1000                     * get next record
.
GAMT9999  RETURN
+
.****************************************************************************
.*                               PRIN0000              Called by:           *
.*                 print the financial letters                              *
.****************************************************************************
PRIN0000  
          MOVE      ZERO,PRNCOUNT
          CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
          UNPACK    CURRDATE,XCENT,XYEAR,XMON,XDAY     * format current date
          CALL      FMTD0000
          MOVE      FORMDATE,LXCURDAT
.
          UNPACK    CURRDATE,CCENT,CYEAR,CMON,CDAY     * load current date
          MOVE      TWENTY4,CVERT
          MOVE      THIRTY3,CCOL
          MOVE      ONE,CDEFDTE
          DISPLAY   *P1:24,*EL,"Enter the date for the letter :";
.
          CALL      KEYDATE
          PACK      LXLETDAT,CDAY,SLASH,CMON,SLASH,CCENT,CYEAR
.
          MOVE      SP8,KEY8                     * pos'n at start of temp file
          CALL      RSTEMP1
PRIN1000  CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,PRIN9000               * no more records to print
.
          MOVE      XVNUMB,KEY8                  * get visit record
          CALL      RDVISA1
          BRANCH    OVRCD,PRIN1000               * record not found
.
          CALL      SETV0000                     * get data and set variables
          BRANCH    EXIT,PRIN1000                * master record not found
.
          CALL      LETR0000                     * process letter and print
          BRANCH    EXIT,PRIN9500                * letter not set up
.
.         Write details to financial history file
.
          PACK      KEY19,XVNUMB,CURRDATE,LETTFORM
          CALL      RDPTLH1                      * record already exists ?
          COMPARE   ZERO,OVRCD
          GOTO      PRIN2000 IF EQUAL            * yes
.
          MOVE      XVNUMB,PTLHADMN              * Admission Number
          MOVE      CURRDATE,PTLHDATE            * Date letter sent
          MOVE      LETTFORM,PTLHLCOD            * Letter code
          CLOCK     TIME,PTLHTIME                * Time letter sent
          MOVE      SELECTID,PTLHSEID            * Selection Id
          PACK      PTLHSPAR,SP20,SP1
          CALL      WRPTLH1                      * write record
.
.         Update the date of the last letter sent in the patient reminder file
.
PRIN2000  MOVE      XVNUMB,KEY8
          UNPACK    CURRDATE,XCENT,XYEAR,XMON,XDAY
          CALL      RDREMD1                      * reminder record found ?
          BRANCH    OVRCD,PRIN5000               * no
.
          PACK      REMLDTE,XCENT,XYEAR,XMON,XDAY
          MOVE      LETTFORM,REMLSTL
          CALL      UPREMD1                      * update record
          GOTO      PRIN1000
.
PRIN5000  PACK      REMLDTE,XCENT,XYEAR,XMON,XDAY      * write new REM record
          MOVE      SP8,REMPDTE
          MOVE      LETTFORM,REMLSTL
          MOVE      ZERO,REMHFLG
          PACK      REMSPAR,SP20,SP5
          MOVE      XVNUMB,KEY8
          CALL      WRREMD1
          GOTO      PRIN1000
.
PRIN9000  PUTSCR    2
.
          GOTO      PRIN9999
.
PRIN9500  
          DISPLAY   *P1:24,"Letter not set up. ",*EL
.
PRIN9999  RETURN
+
.****************************************************************************
.*                               UPTR0000              Called by:           *
.*                        Update History and Last Letter                    *
.****************************************************************************
UPTR0000  MOVE      PMLLVISN,PTLHADMN
          MOVE      CURRDATE,PTLHDATE
          MOVE      LETTFORM,PTLHLCOD
          CLOCK     TIME,PTLHTIME                * Time letter sent
          MOVE      PMLLSEID,PTLHSEID            * Selection Id
          MOVE      SP70,PTLHSPAR
.
.         Write details to financial history file
.
          PACK      KEY19,PTLHADMN,PTLHDATE,PTLHLCOD,SP70
          CALL      RAPTLH1 
          IF        OVRCD=1
            CALL      WRPTLH1               * Write letter sent history record
          ENDIF
.
.         Update the date of the last letter sent in the patient reminder file
.
          MOVE      PMLLVISN,KEY8
          UNPACK    CURRDATE,XCENT,XYEAR,XMON,XDAY
          CALL      RDREMD1                      * reminder record found ?
          BRANCH    OVRCD,UPTR2000               * no
.
          PACK      REMLDTE,XCENT,XYEAR,XMON,XDAY
          MOVE      LETTFORM,REMLSTL
          CALL      UPREMD1                      * update record
          GOTO      UPTR9999
.
UPTR2000  PACK      REMLDTE,XCENT,XYEAR,XMON,XDAY      * write new REM record
          MOVE      SP8,REMPDTE
          MOVE      LETTFORM,REMLSTL
          MOVE      ZERO,REMHFLG
          PACK      REMSPAR,SP20,SP5
          MOVE      PMLLVISN,KEY8
          CALL      WRREMD1
.
UPTR9999  RETURN
+
.****************************************************************************
.*                               SETV0000              Called by:           *
.*              read in the appropriate data records and                    *
.*              set up the required variables                               *
.****************************************************************************
SETV0000  CALL      CLRV0000                * clear variables
          MOVE      PVIURNO,LXURNO          *load pt. ur number
          UNPACK    PVIDATE,XCENT,XYEAR,XMON,XDAY * load visit date 
          CALL      FMTD0000 
          MOVE      FORMDATE,LXVDATE
          MOVE      PVIBILL,LXVISIT         * load visit number
.
          PACK      LXVDATEN,XDAY,SLASH,XMON,SLASH,XCENT,XYEAR
          
.
.         Read the patient master record and load appropriate details
.         into program variables
.
          MOVE      XURNO,KEY8
          CALL      RDMAST1                 * read patient master file
          BRANCH    OVRCD,SETV9500          * not found
.
          CALL      RDPMPX21                * read patient 2nd extension file
          BRANCH    OVRCD,SETV9500          * not found
.
          MOVE      PVIBILL,KEY8            * read P.R.A. file to get P.R.A.
          CALL      RDRESP1                   details
          IF        OVRCD = 1
            CALL      CLPATRE1
          ENDIF
.
          CALL      POST0000                * set postal address
.
          MOVE      PADD1,LINE              * load pt. address line 1
          CALL      CASE0000
          MOVE      LINE,LXADDA
          MOVE      PADD2,LINE              * load pt. address line 2
          CALL      CASE0000
          MOVE      LINE,LXADDB
          MOVE      PSUBRB,LINE             * load pt. address line 3
          CALL      CASE0000
          MOVE      LINE,LXADDC
          MOVE      PADD4,LINE              * load pt. address line 4
          CALL      CASE0000
          MOVE      LINE,LXADDD
.
          CALL      SPAD0000                * set up patient full address
          PACK      LXFPATAD,VARIABLE,SP70
.
          UNPACK    PBDATE,XCENT,XYEAR,XMON,XDAY * load pt. date of birth
          CALL      FMTD0000
          MOVE      FORMDATE,LXDOB
.
          MOVE      PTITL,PACTITLE          * load pt. full name
          MOVE      PGNAME,PACGNAME
          MOVE      PSNAME,PACSNAME
          MOVE      ONE,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,LINE
          CALL      CASE0000
          MOVE      LINE,LXFULLN
.
          MOVE      PTELEB,LXBTELE          * load pt. business phone no.
          MOVE      PGNAME,LXFRSTI          *      pt. first initial
          MOVE      PGNAME,LINE             *      pt. given name
          CALL      CASE0000
          MOVE      LINE,LXGIVN
          MOVE      PFNDMM,LXHFMEM          *      health fund memb. no.
          MOVE      PMEDI,LXMEDI            *      pt. medicare no.
          MOVE      PPOST,LXPOST            *      pt. postcode
          MOVE      PTELEP,LXPTELE          *      pt. private phone
          MOVE      PSNAME,LINE             *      pt. surname
          CALL      CASE0000
          MOVE      LINE,LXSURN
          MOVE      PTITL,LINE              *      pt. title
          CALL      CASE0000
          MOVE      LINE,LXTITLE
.
          MOVE      PTMXCELL,LINE              * load cellular phone number
          CALL      CASE0000
          MOVE      LINE,LXCELL
          MOVE      PTMXADD1,LINE              * load postal address line 1
          CALL      CASE0000
          MOVE      LINE,LXPADDA
          MOVE      PTMXADD2,LINE              * load postal address line 2
          CALL      CASE0000
          MOVE      LINE,LXPADDB
          MOVE      PTMXADD3,LINE              * load postal address line 3
          CALL      CASE0000
          MOVE      LINE,LXPADDC
          MOVE      PTMXADD4,LINE              * load postal address line 4
          CALL      CASE0000
          MOVE      LINE,LXPADDD
          MOVE      PTMXPOST,LINE              * load postal Post Code     
          CALL      CASE0000
          MOVE      LINE,LXPPOST
.
          CALL      SPOS0000                   * Set Postal full address
          PACK      LXFPOSAD,VARIABLE,SP70
.
          CALL      GPPL0000                * Get payment plan
.
          MOVE      PKADD1,LINE             * load P.R.A. addr. line 1
          CALL      CASE0000
          MOVE      LINE,LXPRAAA
          MOVE      PKADD2,LINE             *      P.R.A. addr. line 2
          CALL      CASE0000
          MOVE      LINE,LXPRAAB
          MOVE      PKSUBR,LINE             *      P.R.A. addr. line 3
          CALL      CASE0000
          MOVE      LINE,LXPRAAC
          MOVE      PKADD4,LINE             *      P.R.A. addr. line 4
          CALL      CASE0000
          MOVE      LINE,LXPRAAD
          MOVE      PKTELEB,LXPRABT         *      P.R.A. business phone
          CALL      SPRA0000                *      Set up P.R.A. full name 
          CALL      CASE0000
          MOVE      LINE,LXPRANM
          MOVE      PKPOST,LXPRAPC          *      P.R.A. postcode
          MOVE      PKTELEP,LXPRAPT         *      P.R.A. private phone
.
          UNPACK    PMPXMEDC,XCENT,XYEAR,XMON,XDAY * load Medicare Exp Date
          PACK      LXMEDEXP,XDAY,SLASH,XMON,SLASH,XCENT,XYEAR
          PACK      LXMCEXDT,XMON,SLASH,XYEAR
          MOVE      PTMXMCCD,LXMEDIRN       *      Medicare IRN
.
          MOVE      PMPXSN18,LXPXSN18
          MOVE      PMPXSN19,LXPXSN19
          MOVE      PMPXSN20,LXPXSN20
          MOVE      PMPXSN21,LXPXSN21
          MOVE      PMPXSN22,LXPXSN22
          MOVE      PMPXSN23,LXPXSN23
          MOVE      PMPXSN24,LXPXSN24
          MOVE      PMPXSN25,LXPXSN25
          MOVE      PMPXSN26,LXPXSN26
          MOVE      PMPXSN27,LXPXSN27
          MOVE      PMPXSN28,LXPXSN28
          MOVE      PMPXSN29,LXPXSN29
          MOVE      PMPXSN30,LXPXSN30
.
          CALL      SPRD0000                * set up PRA full address
          PACK      LXFPRFAD,VARIABLE,SP70
.
.         Get the patients admission description
.
SETV0100  BRANCH    PVITYPE,SETV0500:        * A&E
                            SETV0600:        * OP
                            SETV0700         * IP
          GOTO      SETV1000
.
SETV0500  MOVE      PVIBILL,KEY8
          CALL      RDDETA1                  * get A&E record
          BRANCH    OVRCD,SETV1000           * record not found
.
          MOVE      PVIBILL,KEY8
          CALL      RDEMVIS1                 * get emergency record
          BRANCH    OVRCD,SETV1000           * record not found
          MOVE      EMVIFUND,LXHFUNDC
.
          MOVE      ADACLASS,TEMPCODE
          GOTO      SETV0800
.
SETV0600  CALL      OOUT0000                 * get file prefix
          BRANCH    EXIT,SETV3000              and open files
.
          MOVE      PVIBILL,KEY8
          CALL      RDBOKB1                  * get outpatient record
          BRANCH    OVRCD,SETV3000           * record not found
.
          MOVE      OBACLASS,TEMPCODE
          GOTO      SETV0800
.
SETV0700  MOVE      PVIBILL,KEY8
          CALL      RDMISS1                  * get inpatient record
          BRANCH    OVRCD,SETV1000           * record not found
          MOVE      ATYPE,TEMPCODE
          MOVE      AFUNDH,LXHFUNDC
.
SETV0800  PACK      KEY5,CODEA,TEMPCODE      * get admission code
          CALL      RDCODE1
          BRANCH    OVRCD,SETV1000           * not on file
          MOVE      TDESC,LXATYPE            * load admission type
.
.         Get patient classification description
.
SETV1000  BRANCH    PVITYPE,SETV1100:        * A&E
                            SETV1200:        * OP
                            SETV1300         * IP
          GOTO      SETV2000
.
SETV1100  MOVE      ADACOMP,TEMPCODE
          MOVE      ADACOMP,LXCLCODC
          GOTO      SETV1500
.
SETV1200  MOVE      OBACOMP,TEMPCODE
          MOVE      OBACOMP,LXCLCODC
          GOTO      SETV1500
.
SETV1300  MOVE      ACLAIM,TEMPCODE
          MOVE      ACLAIM,LXCLCODC
.
SETV1500  PACK      KEY5,CODECL,TEMPCODE
          CALL      RDCODE1
          BRANCH    OVRCD,SETV2000          * not on file
          MOVE      TDESC,LXCLMCOD          * load claim code
.
.         Get discharge date
.
SETV2000  BRANCH    PVITYPE,SETV2100:       * A&E
                            SETV2200:       * OP
                            SETV2300        * IP
          GOTO      SETV2450
.
SETV2100  UNPACK    ADADATE,XCENT,XYEAR,XMON,XDAY
          PACK      LXDDATEN,XDAY,SLASH,XMON,SLASH,XCENT,XYEAR 
          GOTO      SETV2400
.
SETV2200  UNPACK    OBADATE,XCENT,XYEAR,XMON,XDAY
          PACK      LXDDATEN,XDAY,SLASH,XMON,SLASH,XCENT,XYEAR 
          GOTO      SETV2400
.
SETV2300  MOVE      PVIBILL,KEY8
          CALL      RDDSCH1                  * get inpatient discharge record
          IF        OVRCD=1
            MOVE      SP70,LXDDATE
            GOTO      SETV2450
          ENDIF
.         
          UNPACK    DDATE,XCENT,XYEAR,XMON,XDAY
.
          PACK      LXDDATEN,XDAY,SLASH,XMON,SLASH,XCENT,XYEAR 
.
SETV2400  CALL      FMTD0000
          MOVE      FORMDATE,LXDDATE        * load discharge date
.
.         Get patient referral source
.
SETV2450  BRANCH    PVITYPE,SETV2500:       * A&E
                            SETV2600:       * OP
                            SETV2700        * IP
          GOTO      SETV3000
.
SETV2500  MOVE      ADASRC,TEMPCODE
          GOTO      SETV2800
.
SETV2600  MOVE      PVISITE,KEY6            * get category from site file
          CALL      RDSITA1
          BRANCH    OVRCD,SETV3000
.
          PACK      KEY5,OSTCATG,OBASRCR
          GOTO      SETV2900
.
SETV2700  MOVE      ASRCE,TEMPCODE
.
SETV2800  PACK      KEY5,CODES,TEMPCODE
SETV2900  CALL      RDCODE1
          BRANCH    OVRCD,SETV3000          * not on file
.
          MOVE      TDESC,LXREFERL          * load referral source
.
.         Get health fund description
.
SETV3000  PACK      KEY14,PFUNDH,DZERO4,SP70
          CALL      RDFUND1
          BRANCH    OVRCD,SETV4000          * not on file
.
          MOVE      HFNAME,LXHFUND
.
.         Get health fund table description
.
SETV3500  PACK      KEY14,PFUNDH,PFNDTB,SP70
          CALL      RDFUND1
          BRANCH    OVRCD,SETV4000          * not on file
          MOVE      HFNAME,LXHFTAB
.
.         Get PMI user defined fields
.
SETV4000  MATCH     SP3,PUSR1               * blank UDF 1 ?
          GOTO      SETV4500 IF EQUAL       * yes
.
          PACK      KEY5,CODEP1,PUSR1
          CALL      RDCODE1
          BRANCH    OVRCD,SETV4500          * not on file
          MOVE      TDESC,LXPUSRA
.
SETV4500  MATCH     SP3,PUSR2               * blank UDF 2 ?
          GOTO      SETV5000 IF EQUAL       * yes
.
          PACK      KEY5,CODEP2,PUSR2
          CALL      RDCODE1
          BRANCH    OVRCD,SETV5000          * not on file
          MOVE      TDESC,LXPUSRB
.
SETV5000  MATCH     SP3,PUSR3               * blank UDF 3 ?
          GOTO      SETV5500 IF EQUAL       * yes
.
          PACK      KEY5,CODEP3,PUSR3
          CALL      RDCODE1
          BRANCH    OVRCD,SETV5500          * not on file
          MOVE      TDESC,LXPUSRC
.
.         Get doctor details
.
SETV5500  COMPARE   TWO,PVITYPE             * outpatient ?
          GOTO      SETV5700 IF NOT EQUAL   * no
.
          MOVE      PVISITE,KEY6
          CALL      RDSITA1                 * read site file
          BRANCH    OVRCD,SETV6000          * not found
.
.         Set up to read appropriate clinic file
.
          PACK      CLINFILE,OSTFILE,FILCLIA1
          OPEN      OUTCLIA1,CLINFILE       * open clinic file
.
          PACK      KEY20,PVISITE,PVIDOCT,PVIDATE
          CALL      RDCLIA1                 * get clinic record
          IF        OVRCD = 1
            CALL      RDPCLIA1
            IF        OVRCD = 0
              MATCH     PVISITE,OCASITE
              IF        !@EQUAL
                MOVE      ONE,OVRCD
              ELSE
                MATCH     PVIDOCT,OCACLIN
                IF        !@EQUAL
                  MOVE      ONE,OVRCD
                ENDIF
              ENDIF
            ENDIF
          ENDIF
          CLOSE     OUTCLIA1
          IF        OVRCD = 1
            MOVE      "Unknown clinic",OCADESC
            PACK      OCADESC,OCADESC,SP30
          ENDIF
          BRANCH    OVRCD,SETV5900          * not found 
.  
          MATCH     SP6,OCADOCT             * blank doctor code ?
          GOTO      SETV5600 IF EQUAL       * yes
.
.         Doctor code from clinic file
.
          MOVE      OCADOCT,KEY6
          GOTO      SETV5800
.
SETV5600  MOVE      OCADESC,LXADCGIV        * given name
          MOVE      SP1,LXADCINI            * initial
          MOVE      OCADESC,LXADCSUR        * surname
          MOVE      SP9,LXADCTTL            * title
          MOVE      OCADESC,LXADCFUL        * full name
          MOVE      SP10,LXPROVNO           * Provider Number
          GOTO      SETV6000
.
SETV5700  MOVE      PVIDOCT,KEY6
SETV5800  CALL      RDDOCT1
          BRANCH    OVRCD,SETV6000          * not on file
.
          MOVE      DTITL,PACTITLE          * load full name
          MOVE      DSNAME,PACSNAME
          MOVE      DGNAME,PACGNAME
          MOVE      ONE,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,LINE
          CALL      CASE0000
          MOVE      LINE,LXADCFUL
.
          MOVE      DTITL,LINE              * load title
          CALL      CASE0000
          MOVE      LINE,LXADCTTL
          MOVE      DSNAME,LINE             * surname
          CALL      CASE0000
          MOVE      LINE,LXADCSUR
          MOVE      DGNAME,LXADCINI         * initial
          MOVE      DGNAME,LINE             * given name
          CALL      CASE0000
          MOVE      LINE,LXADCGIV
          MOVE      DPROV,LXPROVNO          * Attending Dr Prov No

.
SETV5900  CLOSE     OUTCLIA1
.
.         Get hospital details from control file
.
SETV6000  READ      CONTROLF,TEN3;*1,CHADD1,CHADD2,CHPOST,CHPADD1:
                                     CHPADD2,CHPPOST,CHTELEB
.
          BRANCH    IBCNMHOS,SETV6050
.
          MOVE      CNAME,LXHOSP            * load hospital name
          MOVE      CHPADD1,LINE            *      hospital addr. line 1
          CALL      CASE0000
          MOVE      LINE,LXHADDA
          MOVE      CHPADD2,LINE            *      hospital addr. line 2
          CALL      CASE0000
          MOVE      LINE,LXHADDB
          MOVE      CHTELEB,LXHOSTEL        *      hospital telephone no.
          MOVE      CHPPOST,LXHPOST         *      hospital postal postcode
.
          CALL      SHAD0000                * set up hosp full address
          PACK      LXFHOSPD,VARIABLE,SP70
.
          GOTO      SETV6100
.
SETV6050  PACK      KEY3,PMVXMHOS,SP70
          CALL      RDPTHSP1
          BRANCH    OVRCD,SETV6100
.
          MOVE      PTHSHOSP,LXHOSID        *      hospital id.
          MOVE      PTHSNAME,LXHOSP         *      load hospital name
          MOVE      PTHSADD1,LINE           *      hospital addr. line 1
          CALL      CASE0000
          MOVE      LINE,LXHADDA            
          MOVE      PTHSADD2,LINE           *      hospital addr. line 2
          CALL      CASE0000
          MOVE      LINE,LXHADDB            
          MOVE      PTHSADD3,LINE           *      hospital addr. line 3
          CALL      CASE0000
          MOVE      LINE,LXHADDC            
          MOVE      PTHSADD4,LINE           *      hospital addr. line 4
          CALL      CASE0000
          MOVE      LINE,LXHADDD            
          MOVE      PTHSTELE,LXHOSTEL       *      hospital telephone no.
          MOVE      PTHSFAXN,LXHFAXN        *      hospital fax no.
          MOVE      PTHSPCOD,LXHPOST        *      hospital postal postcode
.
          CALL      SMAD0000                * set up Multi-hosp full address
          PACK      LXFHOSPD,VARIABLE,SP70

.
.         Get invoice variables for all invoices for the visit
.
SETV6100  PACK      KEY16,XVNUMB,ZEDS
          CALL      RDSINV3                 * position after last record
SETV6120  CALL      RDPINV3                 * read previous record
          BRANCH    OVRCD,SETV7000          * end of file
.
          MATCH     XVNUMB,PINVADM          * same visit # ?
          GOTO      SETV7000 IF NOT EQUAL   * no
.
          MATCH     "1",PTINCRST
          GOTO      SETV6120 IF EQUAL       * Credited
.
          MOVE      ZERO,PATOUTST           * initialize variables
          MOVE      ZERO,DEBTAGEN
          MOVE      ZERO,PPORTOTL
          MOVE      ZERO,REBTOTL
          MOVE      ZERO,PATTOTL
          MOVE      ZERO,FITOTL
          MOVE      ZERO,FIOUTST
          MOVE      ZERO,TOTLINV2
          MOVE      ZERO,SHRTPAID
          MOVE      ZERO,SHRTTOTL
          MOVE      ZERO,TOTLJOUR
          MOVE      ZERO,GRANTOTL
.
          UNPACK    PINVDTE,XCENT,XYEAR,XMON,XDAY * load last invoice date
          PACK      LXLSTDTE,XDAY,SLASH,XMON,SLASH,XYEAR
          MOVE      PINVNO,LXLSTINV         * load last invoice no.
          MOVE      "       0.00",LXPATOUT
          MOVE      "       0.00",LXDEBAGN
          MOVE      "       0.00",LXPATREA
.
.         Get BPAY Customer Reference Number
.         
          READ      CONTROLF,HUND18;*249,PTCNURBP  * Use UR number as BPAYINVN?
          MATCH     "1",PTCNURBP
          IF        @EQUAL
            MOVE      PINVUR,BPAYINVN       * use UR number
          ELSE
            MOVE      PINVNO,BPAYINVN       * use last invno for BPAY CRN
          ENDIF
.
          IF        IBCNMHOS=1
            PACK      KEY8,PVIBILL,SP70
            CALL      RDPMVX11
            IF        OVRCD=0
              MOVE      PMVXMHOS,BPAYHOSP
            ENDIF
          ENDIF
.
          CALL      GBCRN000                * BPAY CRN for last invoice
          MOVE      BPAYREFN,LXBPAYRN       
.
.         Get the total outstanding
.
SETV6200  CALL      GCSH0000                     * Get cash amount
          MOVE      ZERO,FORM82
          ADD       PINVAMT,FORM82
          ADD       PINVPATA,FORM82
          ADD       PINVHFDA,FORM82
          ADD       PINVOTHA,FORM82
          ADD       PINVJOUR,FORM82
          ADD       PTINCRTT,FORM82              * credit notes
          ADD       PTINGSTJ,FORM82            * I CAR 40452
          ADD       FORM82,GRANTOTL
.
          IF        FORM82>0
            CALL      OSTD0000          * Get outstanding for patient or hf/ins.
          ENDIF
.
.         Get the total patient portion
.
          ADD       PINVAMT,PPORTOTL
          SUB       PINVREB,PPORTOTL
.
.         Get total rebate amount for visit
.
          ADD       PINVREB,REBTOTL
.
.         Get total amount paid by patient
.
          ADD       PINVPATA,PATTOTL
.
.         Get total amount paid by fund/insurer
.
          ADD       PINVHFDA,FITOTL
          ADD       PINVOTHA,FITOTL
.
.         Keep running totals (Inv. Total, Paid, Journals, Outstanding)
.
          MOVE      PINVJOUR,TEMPJOUR
          ADD       PTINCRTT,TEMPJOUR          * credit notes
          ADD       PTINGSTJ,TEMPJOUR          * I CAR 40452
          MULT      "-1",TEMPJOUR
.
          ADD       PINVJOUR,TOTLJOUR
          ADD       PTINCRTT,TOTLJOUR          * credit notes
          ADD       PTINGSTJ,TOTLJOUR          * I CAR 40452
          ADD       PINVAMT,TOTLINV2
.
SETV6300  CALL      RDPINV3                 * get previous record
          BRANCH    OVRCD,SETV6500          * end of file
.
          MATCH     XVNUMB,PINVADM          * same visit # ?
          GOTO      SETV6500 IF NOT EQUAL   * no
.
          MATCH     "1",PTINCRST
          GOTO      SETV6300 IF EQUAL       * Credited
.
          GOTO      SETV6200                * process visit
.
SETV6500  MOVE      ZERO,FORM8P2
          MOVE      LXPATREA,FORM8P2
          IF        FORM8P2<0
            MOVE      ZERO,FORM8P2
            MOVE      FORM8P2,LXPATREA
          ENDIF
.
          MOVE      GRANTOTL,LXTOTOUT       * load total amount outstanding
          MOVE      FIOUTST,LXREBOUT        * fund/ins. total outstanding amount
.
          MOVE      PPORTOTL,LXPATPOR       * total patient portion
          MULT      "-1",TOTLJOUR 
          MOVE      TOTLJOUR,LXTOTJNL       * load total journals
          MOVE      TOTLINV2,LXTOTINV       * load total invoices
          MOVE      REBTOTL,LXREBPOR        * total rebate amount
          MULT      "-1",PATTOTL
          MOVE      PATTOTL,LXTPATPY        * total amt paid by patient
          MULT      "-1",FITOTL
          MOVE      FITOTL,LXTREBPY         * total amt paid by fund/ins.
.
.         Get details of last financial letter sent
.
SETV7000  PACK      KEY19,XVNUMB,NINES,NINES
          CALL      RSPTLH1                 * position after last record
          CALL      RPPTLH1                 * read previous record
          BRANCH    OVRCD,SETV7500          * end of file
.
          MATCH     XVNUMB,PTLHADMN         * same visit # ?
          GOTO      SETV7500 IF NOT EQUAL   * no
.
          UNPACK    PTLHDATE,XCENT,XYEAR,XMON,XDAY    * letter date
          PACK      LXLLTDTE,XDAY,SLASH,XMON,SLASH,XCENT,XYEAR
          PACK      KEY6,PTLHLCOD,SP2,ZERO            * get letter text
          GOTO      SETV7600
.
.         If no record of letter history, get details from letter
.         reminder file
.
SETV7500  MOVE      XVNUMB,KEY8
          CALL      RDREMD1                 * get record
          BRANCH    OVRCD,SETV8000          * not found
.
          UNPACK    REMLDTE,XCENT,XYEAR,XMON,XDAY
          PACK      LXLLTDTE,XDAY,SLASH,XMON,SLASH,XCENT,XYEAR   * load date
          PACK      KEY6,REMLSTL,SP2,ZERO   * get letter text
.
SETV7600  CALL      RDPTFL1                 * get letter
          BRANCH    OVRCD,SETV8000          * not on file
.
          MOVE      PTFLTEXT,LXLSTLET       * load letter text
.
.         Get first invoice number
.
SETV8000  PACK      KEY16,XVNUMB,SP70
          CALL      RDSINV3                 * position after last record
SETV8100  CALL      RDKINV3                 * read previous record
          BRANCH    OVRCD,SETV8200          * end of file
.
          MATCH     XVNUMB,PINVADM          * same visit # ?
          GOTO      SETV8200 IF NOT EQUAL   * no
.
          MOVE      PINVNO,LXFSTINV         * load first invoice no.
.
SETV8200  MOVE      SP70,LXCURINV           * load current invoice no.
          MATCH     SP70,XINVNO
          IF        !@EQUAL & !@EOS
            MOVE      XINVNO,LXCURINV
          ENDIF
.
          COMPARE   ONE,PVITYPE            * check for ED type only 
          GOTO      SETV9000 IF NOT EQUAL
.
          PACK      KEY16,XVNUMB,ZEDS
          CALL      RDSINV3                * position at last record
SETV8300  CALL      RDPINV3                * read previous record
          BRANCH    OVRCD,SETV9000         * end of file ?
.
          MATCH     XVNUMB,PINVADM         * same visit # ?
          GOTO      SETV9000 IF NOT EQUAL  
.
          COMPARE   ONE,PINVSYS            * check for ED type invoice only
          GOTO      SETV9000 IF NOT EQUAL
.--- now position is at last invoce for ED type visit and ED invoice only ---
          PACK      KEY22,XVNUMB,PINVNO,SP70
          CALL      RDSDTRE1              * read aaedtref for doc against inv
SETV8350  CALL      RDKDTRE1 
          BRANCH    OVRCD,SETV9000              
.
          MATCH     ATNUMB,XVNUMB         * correct adminssion no ?
          GOTO      SETV9000 IF NOT EQUAL * Y/N ?
.          
          MATCH     PINVNO,ATINVNO         * correct invoice  no ?
          GOTO      SETV9000 IF NOT EQUAL  * Y/N ?
.
          MATCH     SP70,ATDTEDAD          * blank service doc ?
          GOTO      SETV8350 IF EQUAL
.
          PACK      KEY10,ATDTEDAD,SP70
          CALL      RDPMHCP1              * read the doctor file for providerno
          BRANCH    OVRCD,SETV9000        
.
          MOVE      PMHCPRV1,LXHCPPRV       * read servic doc provider number
.          
SETV9000  COMPARE   THREE,PVITYPE           * check for inpatient type only
          GOTO      SETV9400 IF NOT EQUAL 
.          
SETV9300  PACK      KEY30,XVNUMB,ZEDS              
          CALL      RDSTRAN2                * Position at last record
SETV9350  CALL      RDPTRAN2                * read previous record
          BRANCH    OVRCD,SETV9400          * end of file
.
          MATCH     TADMN,XVNUMB            * same visit number ?
          GOTO      SETV9400 IF NOT EQUAL
.
          PACK      KEY6,TADOCT,SP70        * read hcp file with attending doc
          CALL      RDDOCT1
          BRANCH    OVRCD,SETV9400      
.
          MOVE      DPROV,LXHCPPRV          * read doctor's provider num
.         
SETV9400  MOVE      ZERO,EXIT
          GOTO      SETV9999 
.
SETV9500  DISPLAY   *P1:24,*EL,*B,*V2LON:
                    "** Patient master record not found **    ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
SETV9999  RETURN
+
. **********************************************************************
. * POST0000 : Set up the postal address: pmscexaf/patmx1af/patma1af   *
. **********************************************************************
POST0000  MATCH     "1",PTCNNEWC
          GOTO      POST0500 IF EQUAL            
          GOTO      POST5000 IF NOT EQUAL        * using new contacts table ?
.
POST0500  MOVE      SP70,PTMXADD1                * initialize variables
          MOVE      SP70,PTMXADD2                * where old postal address
          MOVE      SP70,PTMXADD3                * was stored prior to
          MOVE      SP70,PTMXADD4                * checking postal address
          MOVE      SP70,PTMXPOST                * in pmscexaf
.
          PACK      KEY14,PURNO,SP70
          CALL      RSPMCEX1
POST1000  CALL      RKPMCEX1                     * check new contacts table
          BRANCH    OVRCD,POST5000
.
          MATCH     PURNO,PMCEURNO
          GOTO      POST5000 IF NOT EQUAL
.
          MATCH     SP70,PMCETYPE
          GOTO      POST1000 IF EQUAL
.
          MOVE      "tc",KEY2
          PACK      KEY5,KEY2,PMCETYPE
          CALL      RDCODE1
          BRANCH    OVRCD,POST1000
.
          MATCH     "2",TCINDC1
          GOTO      POST1000 IF NOT EQUAL        * postal address ?
.
          MATCH     "1",PMCEACTV
          GOTO      POST1000 IF EQUAL            * postal address inactive
.
          MATCH     SP70,PMCEADD1
          GOTO      POST1000 IF EQUAL            * no postal address
.
.         populate the postal address from pmscexaf
.
          MOVE      PMCEADD1,PTMXADD1
          MOVE      PMCEADD2,PTMXADD2
          MOVE      PMCEADD3,PTMXADD3
          MOVE      PMCEADD4,PTMXADD4
          MOVE      PMCEPOST,PTMXPOST
.
.         populate the postal address from pmscexaf if currently no prfa
.
          MATCH     SP70,PKADD1
          IF        @EQUAL
            MOVE      PMCEADD1,PKADD1
            MOVE      PMCEADD2,PKADD2
            MOVE      PMCEADD3,PKSUBR
            MOVE      PMCEADD4,PKADD4
            MOVE      PMCEPOST,PKPOST
          ENDIF
.
          GOTO      POST9999
.
POST5000  MATCH     SP70,PTMXADD1
          GOTO      POST6000 IF NOT EQUAL        * use patmx1af (default)
.
.         populate the postal address from patma1af
.
          MOVE      PADD1,PTMXADD1
          MOVE      PADD2,PTMXADD2
          MOVE      PSUBRB,PTMXADD3
          MOVE      PADD4,PTMXADD4
          MOVE      PPOST,PTMXPOST
.
.         populate the PRFA address from postal address if currently no prfa
.
POST6000  MATCH     SP70,PKADD1
          IF        @EQUAL
            MOVE      PTMXADD1,PKADD1
            MOVE      PTMXADD2,PKADD2
            MOVE      PTMXADD3,PKSUBR
            MOVE      PTMXADD4,PKADD4
            MOVE      PTMXPOST,PKPOST
          ENDIF
.
POST9999  RETURN
+
.****************************************************************************
.         Get payment plan
.****************************************************************************
GPPL0000  MOVE      SP70,LXFRQPAY
          MOVE      "       0.00",LXAMTRPY
.
          MOVE      PVITYPE,KEY1
          MOVE      "2",PTDETYPE             * Payment plan
          PACK      KEY18,SPVIURNO,PTDETYPE,Z70
          CALL      RSPTDET2
GPPL1000  CALL      RPPTDET2
          BRANCH    OVRCD,GPPL9999
.
          MATCH     SPVIURNO,PTDEURNO
          GOTO      GPPL9999 IF NOT EQUAL
.
          MATCH     "2",PTDETYPE
          GOTO      GPPL9999 IF NOT EQUAL    * Not a payment plan
.
          MATCH     KEY1,PTDESYST
          GOTO      GPPL1000 IF NOT EQUAL    * different system
.
          MOVE      "FP",KEY2
          PACK      KEY5,KEY2,PTDEFREQ
          CALL      RDCODE1
          IF        OVRCD=0
            MOVE      TDESC,LXFRQPAY         * Frequency of payment
          ENDIF
          MOVE      PTDERPAY,FORM8P2
          MOVE      FORM8P2,LXAMTRPY         * Amount to be repaid
.
GPPL9999  RETURN
+
.****************************************************************************
. SPRA0000 : Set up P.R.A. NAME
. Returns  : LINE
.****************************************************************************
SPRA0000  MATCH     "1",PTCNDEES             * using deceased PRFA indicator
          GOTO      SPRA0100 IF NOT EQUAL    * no
. 
          CMATCH    "$",PKNAME
          IF        @EQUAL
            STRIP     PTCNDDES
            MOVE      PTCNDDES,LINE
            UNPACK    PKNAME,DIM2,KEY78      * ignore "$ "
            PACK      LINE,LINE,SP1,KEY78,SP30
            GOTO      SPRA9999
          ENDIF
.
SPRA0100  COMPARE   ONE,PTCNPAOF             * using 'parent of'?
          GOTO      SPRA9000 IF NOT EQUAL    * no
.
.---- If first character of PKNAME is "@" then replace with "Parent of"
.
          CMATCH    "@",PKNAME
          IF        @EQUAL 
            MOVE      "Parent of ",LINE
            UNPACK    PKNAME,DIM2,KEY78      * ignore "@ "
            PACK      LINE,LINE,KEY78,SP30
            GOTO      SPRA9999
          ENDIF
.
SPRA9000  MOVE      PKNAME,LINE              * just use PKNAME
.
SPRA9999  RETURN
+
.****************************************************************************
.*                               OSTD0000              Called by:           *
.*                    Get the patient/hf outstanding                        *
.****************************************************************************
OSTD0000  MOVE      ZERO,F1
          PACK      KEY10,PINVNO,Z70
          CALL      RSPTRAS1
          CALL      RPPTRAS1
          BRANCH    OVRCD,OSTD3000
.
          MATCH     PINVNO,PTRAINVN
          GOTO      OSTD3000 IF NOT EQUAL         * No reassign patient debt
.
          MATCH     "1",PTRADELE
          GOTO      OSTD3000 IF EQUAL            * Deleted
.
          COMPARE   ZERO,PTRAOUST
          GOTO      OSTD8000 IF EQUAL            * No outstanding amount
.
          MOVE      "dm",KEY2
          PACK      KEY5,KEY2,PTRARMOV
          CALL      RDCODE1
          IF        OVRCD=0
            MATCH     "D",TCINDC1
            IF        @EQUAL
              ADD       PTRAPPOR,DEBTAGEN        * from Debt.Collection
            ENDIF
          ENDIF
          ADD       PTRAPPOR,PATOUTST
          MOVE      ONE,F1
.
OSTD3000  PACK      KEY22,XVNUMB,PINVNO,SP6
          CALL      RDSDTRN1
OSTD4000  CALL      RDKDTRN1
          BRANCH    OVRCD,OSTD8000
.
          MATCH     TREF,PINVNO
          GOTO      OSTD8000 IF NOT EQUAL
.
          MOVE      TREBATE,FORM12P2
          IF        TRECTYPE=2 | TRECTYPE=3
            IF        TSERVS>1
              MULT      TSERVS,FORM12P2         * Quantity
            ENDIF
          ENDIF
          COMPARE   FIVE,TRECTYPE
          GOTO      OSTD5000 IF NOT EQUAL
.
          MATCH     SP70,TDEPTYP
          GOTO      OSTD5000 IF EQUAL
.
.         Check for Insurance Excess deposit type
.
          MOVE      "DP",KEY2
          PACK      KEY5,KEY2,TDEPTYP
          CALL      RDCODE1
          IF        OVRCD=0
            MATCH     "E",TCINDC1
            GOTO      OSTD4000 IF EQUAL     * skip Deposit Excess
          ENDIF
.
OSTD5000  IF        F1=0
            ADD       TPATAMTT,PATOUTST           * the patient portion
            ADD       PTDTLSPT,PATOUTST
            ADD       PTDTGSTM,PATOUTST
            ADD       PTDTGSTL,PATOUTST
            SUB       FORM12P2,PATOUTST
          ENDIF
.
          ADD       TREBATE,FIOUTST             * the fund/insurer portion
          ADD       PTDTLSRB,FIOUTST
          GOTO      OSTD4000
.
OSTD8000  MOVE      DEBTAGEN,LXDEBAGN
.
          COMPARE   ZERO,PATOUTST
          GOTO      OSTD9999 IF LESS        * no patient portion
.
          MOVE      PATOUTST,LXPATOUT       * patient outstanding total
.
          MOVE      PATOUTST,FORM12P2
          SUB       DEBTAGEN,FORM12P2
          MOVE      FORM12P2,FORM8P2
          MOVE      FORM8P2,LXPATREA
.
OSTD9999  RETURN
+
.****************************************************************************
.*                               FMTD0000              Called by:           *
.*                    format a date - 99th XXXXXXXXX 1999                   *
.****************************************************************************
.         Get month text
.
FMTD0000  MOVE      XMON,FORM2
          LOAD      MONTH,FORM2,MONTH1,MONTH2,MONTH3,MONTH4,MONTH5,MONTH6:
                                MONTH7,MONTH8,MONTH9,MONTH10,MONTH11,MONTH12
.
.         Get day extension (th,st,rd,nd)
.
          MOVE      XDAY,FORM2
          LOAD      DEXTN,FORM2,DEXT1,DEXT2,DEXT3,DEXT4,DEXT4,DEXT4,DEXT4,DEXT4:
                                DEXT4,DEXT4,DEXT4,DEXT4,DEXT4,DEXT4,DEXT4,DEXT4:
                                DEXT4,DEXT4,DEXT4,DEXT4,DEXT1,DEXT2,DEXT3,DEXT4:
                                DEXT4,DEXT4,DEXT4,DEXT4,DEXT4,DEXT4,DEXT1
          CMATCH    "0",XDAY
          GOTO      FMTD9000 IF EQUAL
          GOTO      FMTD9500
.    
FMTD9000  UNPACK    XDAY,DIM1,DIM2
          REP       "0 ",DIM1
          PACK      XDAY,DIM1,DIM2
.
FMTD9500  PACK      FORMDATE,XDAY,DEXTN,SP1,MONTH,SP1,XCENT,XYEAR
.
FMTD9999  RETURN
+
.****************************************************************************
.*                                 LETR0000            Called by:           *
.*             Set up and print letter one line at a time                   *
.*        Returns : EXIT = 0      ask if to print more letters              *
.*                  EXIT = 1      select another letter to print            *
.*                  EXIT = 2      get next item on temp file                *
.****************************************************************************
LETR0000  MOVE      FALSE,EXIT
          MOVE      ONE,COUNT               * line number to print
          MOVE      LCODE,LETTFORM
.
          MOVE      ZERO,LETTLINE           * read letter file header
          PACK      KEY6,LETTFORM,LETTLINE  *    record
          CALL      RDPTFL1 
.
          MOVE      PTFLPPAG,PHYSPAGE       * physical paper length
          MOVE      PTFLPTOP,TOPMARG        * top margin
          MOVE      PTFLPBOT,BOTTMARG       * bottom margin
          SUBTRACT  PTFLPBOT,PTFLPPAG       * where to print to at bottom
          MOVE      PTFLPPAG,MLETPLEN       * length to print to 
          MOVE      PTFLPTAB,LEFTMARG       * left margin
.
.------ print top margin ------
.
LETR0050  COMPARE   COUNT,TOPMARG
          GOTO      LETR1000 IF EQUAL       * printed top margin
.
          PRINT     *N;                     * print blank line
          ADD       ONE,COUNT
          GOTO      LETR0050
.
. ------- print letter one line at a time ------
.
LETR1000  CALL      RKPTFL1 
          BRANCH    OVRCD,LETR9000          * end of letter reached
.
          COMPARE   LETTFORM,PTFLLTNO
          GOTO      LETR9000 IF NOT EQUAL   * different letter number
.
          BRANCH    PTFLLVAR,LETR2000       * have a % var
.
.         printing when no % variables
.
          PRINT     *N,*LEFTMARG,PTFLTEXT;  * print text if no % vars
          ADD       ONE,COUNT
.
          COMPARE   COUNT,MLETPLEN
          CALL      PAGE0000 IF EQUAL       * print page when required
          GOTO      LETR1000
.
.         printing when have % variables
.
LETR2000  CALL      MOD0000                 * substitute % var value
          PRINT     *N,*LEFTMARG,PRTSTRNG;  * print text with % vars
          ADD       ONE,COUNT
.
          COMPARE   COUNT,MLETPLEN
          CALL      PAGE0000 IF EQUAL       * print page when required
          GOTO      LETR1000
.
. ------- end of current letter reached -------
.
LETR9000  COMPARE   TOPMARG,COUNT
          GOTO      LETR9500 IF EQUAL       * no lines of text printed
.
          PRINT     *N;
          ADD       ONE,PRNCOUNT 
          DISPLAY   *P60:24,*EL,*V2LON,PRNCOUNT,*HOFF," Printed";
          MOVE      PHYSPAGE,TEMP3          * set up variables for
          SUBTRACT  COUNT,PHYSPAGE          *   paging
          MOVE      ZERO,COUNT
.
.------ paginate at end of each letter ------
.
LETR9100  PRINT     *N;
          COMPARE   COUNT,PHYSPAGE
          GOTO      LETR9400 IF LESS        * printed bottom margin
.
          ADD       ONE,COUNT
          GOTO      LETR9100
.
LETR9400  MOVE      TEMP3,PHYSPAGE          * restore physical page length
          MOVE      TWO,EXIT                * indicate to continue
          GOTO      LETR9999
.
.------ letter header is on file but nothing else ------
.
LETR9500
          MOVE      ONE,EXIT
.
LETR9999  RETURN
+
.**********************************************************************
.*                              PAGE0000                              *
.*        Routine to paginate if a new page is required               *
.**********************************************************************
PAGE0000  MOVE      PTFLLTNO,FORM3
          MOVE      PTFLLINO,LETTLINE
          CALL      RKPTFL1
          BRANCH    OVRCD,PAGE8000                * check to see that
          COMPARE   LETTFORM,PTFLLTNO             *  another line of the
          GOTO      PAGE8000 IF NOT EQUAL         *  letter exists
          MOVE      TOPMARG,TEMP2
          ADD       BOTTMARG,TOPMARG
          MOVE      ONE,COUNT
.
.------ loop to paginate ------
.
PAGE1000  PRINT     *N;
          COMPARE   COUNT,TOPMARG
          GOTO      PAGE9000 IF EQUAL
          ADD       ONE,COUNT
          GOTO      PAGE1000
.
.------ no need to paginate ------
.
PAGE8000  PACK      KEY6,FORM3,LETTLINE
          CALL      RDPTFL1 
          GOTO      PAGE9999
.
.------ reset read to previous record to continue processing ------
.
PAGE9000  MOVE      TEMP2,COUNT
          MOVE      TEMP2,TOPMARG
          PACK      KEY6,FORM3,LETTLINE
          CALL      RDPTFL1
.
PAGE9999  RETURN
+
.**********************************************************************
.*                  MOD0000                     Called by : PRIN2000  *
.*             Modify a line to substitute "%" variable values        *
.**********************************************************************
MOD0000   MOVE      PTFLTEXT,DIM70
          PACK      PRTSTRNG,SP30,SP30,SP10      * initialise PRTSTRNG
          RESET     PRTSTRNG,0                   * and pointer positions 
          MOVE      ONE,STARTSTR
          MOVE      ONE,ENDSTR
.
MOD2000   SCAN      SPECCHAR,DIM70               * Scan the Input Line for
          GOTO      MOD8000 IF NOT EQUAL         * a "%" sign
.
MOD3000   MOVEFPTR  DIM70,PERCPOS
          BUMP      DIM70,-1                     * Go to the character before
.                                                * the "%" sign
          GOTO      MOD3100 IF NOT EOS           * Test if the % sign is the
          RESET     DIM70,0                      * first character on the line
.                                                * set f.p. to 0 if it is
MOD3100   MOVEFPTR  DIM70,ENDSTR                 * store endtsr at position
          COMPARE   STARTSTR,ENDSTR              *   1 char before the % sign
          GOTO      MOD3200 IF NOT LESS          *   and ensure that end and
.                                                *   start positions dont
.                                                *   overlap
          RESET     DIM70,STARTSTR               * set pointer to next % sign
          GOTO      MOD9999 IF EOS               *   if end < start
          GOTO      MOD3300
.
MOD3200   RESET     DIM70,STARTSTR               * reset the pointers to
          SETLPTR   DIM70,ENDSTR                 *   extract text preceding
          APPEND    DIM70,PRTSTRNG               *   the % sign
.
MOD3300   SETLPTR   DIM70,70                     * set the pointers to start at
          RESET     DIM70,PERCPOS                *    % and go to position 70
          MOVE      DIM70,TEMP70                 * delete preceding text from
          PACK      DIM70,SP30,SP30,SP30
          MOVE      TEMP70,DIM70                 *    the DIM70 string
.
MOD4000   CALL      GETV0000                     * extract the % var
          MOVEFPTR  DIM70,STARTSTR               * store finish pos. of var
          BRANCH    EXIT,MOD5000
          RESET     SRCHVAR
.
          MATCH     "%boldon",SRCHVAR
          IF        @EQUAL
            BUMP      DIM70
            ADD       ONE,STARTSTR
          ENDIF
.
          MATCH     "%ulineon",SRCHVAR
          IF        @EQUAL
            BUMP      DIM70
            ADD       ONE,STARTSTR
          ENDIF
.
.------ search for the % var in the list of constants ------
.
          SEARCH    SRCHVAR,LCPAGE,HUND10,SRCHNUM
.
          BRANCH    SRCHNUM,MOD7000,MOD4500,MOD4500,MOD4500,MOD4500:        *5  
                            MOD4500,MOD4500,MOD4500,MOD4500,MOD4500:        *10
                            MOD4500,MOD4500,MOD4500,MOD4500,MOD4500:        *15
                            MOD4500,MOD4500,MOD4500,MOD4500,MOD4500:        *20
                            MOD4500,MOD4500,MOD4500,MOD4500,MOD4500:        *25
                            MOD4500,MOD6000,MOD4500,MOD4500,MOD4500:        *30
                            MOD4500,MOD4500,MOD4500,MOD4500,MOD4500:        *35
                            MOD4500,MOD4500,MOD4500,MOD4500,MOD4500:        *40
                            MOD4500,MOD4500,MOD4500,MOD4500,MOD4500:        *45
                            MOD4500,MOD4500,MOD4500,MOD4500,MOD4500:        *50
                            MOD4500,MOD4500,MOD4500,MOD4500,MOD4500:        *55
                            MOD4500,MOD4500,MOD4500,MOD4500,MOD4500:        *60
                            MOD4500,MOD4500,MOD4500,MOD4500,MOD4500:        *65
                            MOD4500,MOD4500,MOD4500,MOD4500,MOD4500:        *70
                            MOD4500,MOD4500,MOD4500,MOD4500,MOD4500:        *75
                            MOD4500,MOD4500,MOD4500,MOD4500,MOD4500:        *80
                            MOD4500,MOD4500,MOD4500,MOD4500,MOD4500:        *85
                            MOD4500,MOD4500,MOD4500,MOD4500,MOD4500:        *90
                            MOD4500,MOD4500,MOD4500,MOD4500,MOD4500:        *95
                            MOD4500,MOD4500,MOD4500,MOD4500,MOD4500:        *100
                            MOD4500,MOD4500,MOD4500,MOD4500,MOD4500:        *105
                            MOD4500,MOD4500,MOD4500,MOD4500,MOD4500         *110
.
MOD4500   COMPARE   ZERO,SRCHNUM                 * % var not found in list
          GOTO      MOD5000 IF EQUAL
.
.------ load DISPSTRN with the actual value of the % var ------
.
          LOAD      DISPSTRN,SRCHNUM,LXPAGE:                                *1 
                             LXADCFUL,LXADCGIV,LXADCINI,LXADCSUR:           *5
                             LXADCTTL,LXADDA,LXADDB,LXADDC,LXATYPE:         *10
                             LXBTELE,LXCLMCOD,LXCURDAT,LXDDATE,LXDOB:       *15
                             LXFRSTI,LXFULLN,LXGIVN,LXHADDA,LXHADDB:        *20
                             LXHFMEM,LXHFTAB,LXHFUND,LXHOSP,LXHOSTEL:       *25 
                             LXHPOST,LXISUM,LXLETDAT,LXLLTDTE,LXLSTDTE:     *30
                             LXLSTINV,LXLSTLET,LXMEDI,LXPATOUT,LXPATPOR:    *35
                             LXPOST,LXPRAAA,LXPRAAB,LXPRAAC,LXPRABT:        *40
                             LXPRANM,LXPRAPC,LXPRAPT,LXPTELE,LXPUSRA:       *45
                             LXPUSRB,LXPUSRC,LXREBOUT,LXREBPOR,LXREFERL:    *50
                             LXSURN,LXTITLE,LXTOTINV,LXTOTJNL,LXTOTOUT:     *55
                             LXTPATPY,LXTREBPY,LXURNO,LXVDATE,LXVISIT:      *60
                             LXCELL,LXPADDA,LXPADDB,LXPADDC,LXPADDD:        *65
                             LXPPOST,LXADDD,LXPRAAD,LXHADDC,LXHADDD:        *70
                             LXHFAXN,LXHOSID,LXCURDTN,LXBPAYRN,LXBOLDON:    *75
                             LXBOLDOF,LXUNDLON,LXUNDLOF,LXFPATAD,LXFPRFAD:  *80
                             LXFPOSAD,LXDEBAGN,LXPATREA,LXAMTRPY,LXFRQPAY:  *85 
                             LXFSTINV,LXCURINV,LXMEDEXP,LXMEDIRN,LXPROVNO:  *90
		             LXVDATEN,LXDDATEN,LXHCPPRV,LXMCEXDT,LXFHOSPD:  *95
                             LXHFUNDC,LXCLCODC,LXPXSN18,LXPXSN19,LXPXSN20:  *100
                             LXPXSN21,LXPXSN22,LXPXSN23,LXPXSN24,LXPXSN25:  *105
                             LXPXSN26,LXPXSN27,LXPXSN28,LXPXSN29,LXPXSN30   *110
.
          APPEND    DISPSTRN,PRTSTRNG
          CALL      COMX0000                     * compress trailing blanks in
          GOTO      MOD2000                      *    PRTSTRNG
.
MOD5000   RESET     SRCHVAR                      * add the string starting with
          APPEND    SRCHVAR,PRTSTRNG             *    a % if not found in the
          GOTO      MOD8000 IF EOS               *    list of constants
          GOTO      MOD2000
.
MOD6000   CALL      ISUM0000                     * print the invoice summary
          GOTO      MOD9999
.
.------ %page variable found ------
.
MOD7000   MOVE      PHYSPAGE,TEMP3
          SUBTRACT  COUNT,PHYSPAGE
          MOVE      ONE,COUNT
          ADD       TOPMARG,PHYSPAGE
          SUBTRACT  ONE,PHYSPAGE
.
MOD7100   PRINT     *N;
          COMPARE   COUNT,PHYSPAGE
          GOTO      MOD7500 IF EQUAL
          ADD       ONE,COUNT
          GOTO      MOD7100
.
MOD7500   MOVE      TEMP3,PHYSPAGE
          MOVE      TOPMARG,COUNT
          SUBTRACT  ONE,COUNT
          PACK      PRTSTRNG,SP30,SP30,SP10
          GOTO      MOD9999
.
MOD8000   APPEND    DIM70,PRTSTRNG               * add remaining text to
          RESET     PRTSTRNG                     *   PRTSTRNG if no %
.                                                *   signs left
MOD9999   RETURN
+
.**********************************************************************
.*                              GETV0000                              *
.*           Extracts the "%" variable from the line                  *
.**********************************************************************
GETV0000  MOVE      FALSE,EXIT
          PACK      SRCHVAR,SP30,SP30,SP10
          RESET     SRCHVAR,0
          MOVE      DIM70,ANS
          APPEND    ANS,SRCHVAR
          RESET     SRCHVAR,0
          BUMP      DIM70
          MOVE      DIM70,ANS
          REPLACE   REPSTR,ANS                   * check to see if first
          MATCH     "0",ANS                      *   char after % is a
          GOTO      GETV9000 IF NOT EQUAL        *   lower case letter
          BUMP      DIM70,-1
          PACK      SRCHVAR,SP30,SP30,SP10       * initialize SRCHVAR
          RESET     SRCHVAR,0                    *   value and pointers
.
.------ append % var to SRCHVAR until anything but ------
.------ a lower case letter is found ------
.
GETV1000  MOVE      DIM70,ANS
          APPEND    ANS,SRCHVAR
.
          BUMP      DIM70
          GOTO      GETV9999 IF EOS
          MOVE      DIM70,ANS
          REPLACE   REPSTR,ANS
          MATCH     "0",ANS
          GOTO      GETV9999 IF NOT EQUAL
          GOTO      GETV1000
.
.------ string found is not a valid % var ------
.
GETV9000  MOVE      TRUE,EXIT
.
GETV9999  RETURN
+
.**********************************************************************
.*                              COMX0000                              *
.*         Routine to compress trailing blanks in PRTSTRNG            *
.**********************************************************************
COMX0000  ENDSET    PRTSTRNG
.
COMX1000  CMATCH    SP1,PRTSTRNG
          GOTO      COMX9999 IF NOT EQUAL
          BUMP      PRTSTRNG,-1
          GOTO      COMX9999 IF EOS
          GOTO      COMX1000
.
COMX9999  RETURN
+
.****************************************************************************
.*                            CLRV0000                 Called by:           *
.*                    Initialize letter variables                           *
.****************************************************************************
CLRV0000  MOVE      STAR58,LXADCFUL
          MOVE      "*************************",LXADCGIV
          MOVE      "*",LXADCINI
          MOVE      "********************",LXADCSUR
          MOVE      "*********",LXADCTTL
          MOVE      "*************************",LXADDA
          MOVE      "*************************",LXADDB
          MOVE      "***************",LXADDC
          MOVE      "*************************",LXADDD
          MOVE      "********************",LXATYPE
          MOVE      "************",LXBTELE
          MOVE      "********************",LXCLMCOD
          MOVE      "**** ********* ****",LXDDATE
          MOVE      "**** ********* ****",LXDOB
          MOVE      "*",LXFRSTI
          MOVE      STAR58,LXFULLN
          MOVE      "*************************",LXGIVN
          MOVE      "******************************",LXHADDA
          MOVE      "******************************",LXHADDB
          MOVE      "******************************",LXHADDC
          MOVE      "******************************",LXHADDD
          MOVE      "*******************",LXHFMEM
          MOVE      "******************************",LXHFTAB
          MOVE      "******************************",LXHFUND
          MOVE      "***********************************",LXHOSP
          MOVE      "********************",LXHFAXN
          MOVE      "***",LXHOSID
          MOVE      "************",LXHOSTEL
          MOVE      "****",LXHPOST
          MOVE      "**/**/****",LXLLTDTE
          MOVE      "**/**/**",LXLSTDTE
          MOVE      "********",LXLSTINV
          MOVE      STAR58,LXLSTLET
          MOVE      "**********",LXMEDI
          MOVE      "*******.**",LXPATOUT
          MOVE      "*******.**",LXPATPOR
          MOVE      "****",LXPOST
          MOVE      "*************************",LXPRAAA
          MOVE      "*************************",LXPRAAB
          MOVE      "***************",LXPRAAC
          MOVE      "*************************",LXPRAAD
          MOVE      "************",LXPRABT
          MOVE      "******************************",LXPRANM
          MOVE      "****",LXPRAPC
          MOVE      "************",LXPRAPT
          MOVE      "************",LXPTELE
          MOVE      "********************",LXPUSRA
          MOVE      "********************",LXPUSRB
          MOVE      "********************",LXPUSRC
          MOVE      "*******.**",LXREBOUT
          MOVE      "*******.**",LXREBPOR
          MOVE      "********************",LXREFERL
          MOVE      "********************",LXSURN
          MOVE      "****",LXTITLE
          MOVE      "*******.**",LXTOTINV
          MOVE      "*******.**",LXTOTJNL
          MOVE      "*******.**",LXTOTOUT
          MOVE      "*******.**",LXTPATPY
          MOVE      "*******.**",LXTREBPY
          MOVE      "********",LXURNO
          MOVE      "**** ********* ****",LXVDATE
          MOVE      "********",LXVISIT
          MOVE      "********************",LXCELL
          MOVE      "***********************************",LXPADDA
          MOVE      "***********************************",LXPADDB
          MOVE      "***********************************",LXPADDC
          MOVE      "***********************************",LXPADDD
          MOVE      "********",LXPPOST
          MOVE      "***************",LXBPAYRN
          MOVE      "********",LXFSTINV
          MOVE      "********",LXCURINV
          MOVE      "**/**/****",LXMEDEXP
          MOVE      "**",LXMEDIRN
          MOVE      "**********",LXPROVNO
          MOVE      "**/**/****",LXVDATEN
          MOVE      "**/**/****",LXDDATEN
          MOVE      "**********",LXHCPPRV
          MOVE      "**/**",LXMCEXDT
          MOVE      "*********************************************************************",LXFHOSPD
          MOVE      "******",LXHFUNDC
          MOVE      "***",LXCLCODC
.
          MOVE      "*",LXPXSN18
          MOVE      "*",LXPXSN19
          MOVE      "*",LXPXSN20
          MOVE      "*",LXPXSN21
          MOVE      "*",LXPXSN22
          MOVE      "*",LXPXSN23
          MOVE      "*",LXPXSN24
          MOVE      "*",LXPXSN25
          MOVE      "*",LXPXSN26
          MOVE      "*",LXPXSN27
          MOVE      "*",LXPXSN28
          MOVE      "*",LXPXSN29
          MOVE      "*",LXPXSN30
.
CLRV9999  RETURN
+
.**********************************************************************
.*                              ISUM0000                              *
.*              Routine to print the invoice summary                  *
.**********************************************************************
ISUM0000  ADD       FOUR,COUNT
          MOVE      TEN1,FORM3
          ADD       LEFTMARG,FORM3
          COMPARE   COUNT,MLETPLEN
          GOTO      ISUM0050 IF LESS
          SUBTRACT  FOUR,COUNT
          PRINT     *N,*LEFTMARG,SUMHEAD;
          GOTO      ISUM0070
.
.------ paginate if cant fit first four lines of summary onto the page ------
.
ISUM0050  SUBTRACT  FOUR,COUNT
          CALL      IPAG0000
.
ISUM0070  PACK      KEY16,XVNUMB,SP10
          CALL      RDSINV3                      * read invoice file to
          CALL      RDKINV3                      *   make sure some invoice
          BRANCH    OVRCD,ISUM9000               *   details are available
.
          MATCH     XVNUMB,PINVADM               * same visit # ?
          GOTO      ISUM9000 IF NOT EQUAL        * no
.
          MOVE      ZERO,TOTLINV2
          MOVE      ZERO,SHRTPAID
          MOVE      ZERO,SHRTTOTL
          MOVE      ZERO,TOTLJOUR
          MOVE      ZERO,GRANTOTL
          ADD       TWO,COUNT
          GOTO      ISUM1050
.
ISUM1000  CALL      RDKINV3
          BRANCH    OVRCD,ISUM8000
.
          MATCH     XVNUMB,PINVADM               * same visit # ?
          GOTO      ISUM8000 IF NOT EQUAL        * no
.
.------ set up and print summary details ------
.
ISUM1050  UNPACK    PINVDTE,CCENT,CYEAR,CMON,CDAY
          PACK      INVDATE,CDAY,SLASH,CMON,SLASH,CYEAR
.
          MOVE      PINVJOUR,TEMPJOUR
          ADD       PTINCRTT,TEMPJOUR            * credit notes
          ADD       PTINGSTJ,TEMPJOUR            * I CAR 40452
          MULT      "-1",TEMPJOUR
.
          CALL      GCSH0000                     * Get cash amount
          MOVE      PINVAMT,TEMPINV
          ADD       PINVAMT,TOTLINV2
.
          ADD       PINVJOUR,TOTLJOUR            * Grand total journal
          ADD       PTINCRTT,TOTLJOUR            * credit notes
          ADD       PTINGSTJ,TOTLJOUR            * I CAR 40452
.
          ADD       PINVPATA,SHRTPAID
          ADD       PINVOTHA,SHRTPAID
          ADD       PINVHFDA,SHRTPAID            * total paid
          ADD       SHRTPAID,SHRTTOTL            * Grand total paid
.
          ADD       PINVPATA,PINVAMT
          ADD       PINVHFDA,PINVAMT
          ADD       PINVOTHA,PINVAMT
          ADD       PINVJOUR,PINVAMT             * Outstanding amount
          ADD       PTINCRTT,PINVAMT             * credit notes
          ADD       PTINGSTJ,PINVAMT           * I CAR 40452
          ADD       PINVAMT,GRANTOTL             * Grand total of outstanding
.
          MULT      "-1",SHRTPAID
          MULT      "-1",PINVJOUR
.
          PRINT     *N,*LEFTMARG,PINVNO,"   ",INVDATE," ",TEMPINV," ",SHRTPAID:
                    " ",TEMPJOUR," ",PINVAMT;
          ADD       ONE,COUNT
          MOVE      ZERO,SHRTPAID
          COMPARE   COUNT,MLETPLEN
          CALL      IPAG0000 IF EQUAL            * paginate if required
          GOTO      ISUM1000
.
.------ test to see invoice totals will fit on page ------
.
ISUM8000  ADD       THREE,COUNT
          COMPARE   COUNT,MLETPLEN
          GOTO      ISUM8500 IF LESS
          SUBTRACT  ONE,COUNT
.
.------ set up and print invoice summary totals ------
.
ISUM8150  MULT      "-1",SHRTTOTL
          MULT      "-1",TOTLJOUR
          PRINT     *N,*FORM3,"Totals : ",TOTLINV2," ",SHRTTOTL," ",TOTLJOUR:
                    "     ",GRANTOTL;
.         MOVE      SUMULIN2,PRTSTRNG
          GOTO      ISUM9999
.
ISUM8500  MOVE      TOPMARG,TEMP2
          MOVE      MLETPLEN,FORM2
          SUBTRACT  THREE,COUNT
          SUBTRACT  COUNT,MLETPLEN
          ADD       MLETPLEN,TOPMARG
          ADD       BOTTMARG,TOPMARG             * set up margins etc
          MOVE      ONE,COUNT
.
.------ loop to paginate ------
.
ISUM8550  PRINT     *N;
          COMPARE   COUNT,TOPMARG
          GOTO      ISUM8570 IF EQUAL
          ADD       ONE,COUNT
          GOTO      ISUM8550
.
.------ go back and print invoice summary totals ------
.
ISUM8570  MOVE      TEMP2,COUNT
          MOVE      TEMP2,TOPMARG
          MOVE      FORM2,MLETPLEN
          ADD       TWO,COUNT
          GOTO      ISUM8150
.
.------ no invoice details for given patient ------
.
ISUM9000  MOVE      "No invoice summary details available",PRTSTRNG
          ADD       TWO,COUNT
          GOTO      ISUM9999
.
ISUM9999  RETURN
+
.**********************************************************************
.*                              IPAG0000                              *
.*             Routine to paginate for the invoice summary            *
.**********************************************************************
IPAG0000  MOVE      TOPMARG,TEMP2
          MOVE      MLETPLEN,FORM2
          SUBTRACT  COUNT,MLETPLEN
          ADD       MLETPLEN,TOPMARG
          ADD       BOTTMARG,TOPMARG
          MOVE      ONE,COUNT
.
.------ loop to paginate ------
.
IPAG1000  PRINT     *N;
          COMPARE   COUNT,TOPMARG
          GOTO      IPAG9000 IF EQUAL
          ADD       ONE,COUNT
          GOTO      IPAG1000
.
.------ reset variables and print summary header on new page ------
.
IPAG9000  MOVE      TEMP2,COUNT
          MOVE      TEMP2,TOPMARG
          MOVE      FORM2,MLETPLEN
          PRINT     *N,*LEFTMARG,SUMHEAD;
          ADD       TWO,COUNT
          GOTO      IPAG9999
.
IPAG9999  RETURN
+
.**********************************************************************
.*                             CASE0000                               *
.*  Routine to convert all except first character of each word to     *
.*        lower case                                                  *
.**********************************************************************
CASE0000  MOVE      ONE,FIRSTCH
          RESET     LINE
.
CASE1000  CMATCH    SP1,LINE
          GOTO      CASE5000 IF EQUAL       * match char to space
          BRANCH    FIRSTCH,CASE2000
          MOVE      LINE,ANS
          RESET     UPPLOW
          SCAN      ANS,UPPLOW              * test to see if char is a letter
          GOTO      CASE1100 IF EQUAL
          MOVE      ONE,FIRSTCH
          GOTO      CASE3000                * any char but a letter found
.
CASE1100  OR        040,LINE                * actual conversion to lower case
          RESET     UPPLOW                  *   (believe it or not!)
.
CASE2000  MOVE      ZERO,FIRSTCH            * not on first char any more
.
CASE3000  BUMP      LINE
          GOTO      CASE1000 IF NOT EOS     * move to next char
          RESET     LINE                    * end of line reached
          GOTO      CASE9999
.
CASE5000  MOVE      ONE,FIRSTCH             * first char was a space
          GOTO      CASE3000
.
CASE9999  RETURN
+
.**********************************************************************
.*        Get Cash and Unreleased cash                                *
.**********************************************************************
GCSH0000  MOVE      ZERO,PINVPATA
          MOVE      ZERO,PINVHFDA
          MOVE      ZERO,PINVOTHA
.
          MOVE      SP70,INVOICEN
          MOVE      ZERO,FORM12
          MOVE      ZERO,FORM8
          MOVE      PINVNO,FORM8
          MOVE      FORM8,FORM12
          MOVE      FORM12,INVOICEN
.
          PACK      KEY29,INVOICEN,SP70
          CALL      RSRCDTE3
GCSH1000  CALL      RKRCDTE3
          BRANCH    OVRCD,GCSH9999
.
          MATCH     INVOICEN,RCDTINVN
          GOTO      GCSH9999 IF NOT EQUAL
.
.         Get payment type
.
          MOVE      RCDTRECN,KEY12
          CALL      RDRCBNK1
          BRANCH    OVRCD,GCSH1000
.
          MATCH     "1",RCBNSTAT                * Cancelled
          GOTO      GCSH1000 IF EQUAL
.
.         Check for type of register
.
          PACK      KEY3,RCDTREGI,SP70
          CALL      RDREGA1
          BRANCH    OVRCD,GCSH1000
.
          COMPARE   "2",REGIBACD
          GOTO      GCSH1000 IF EQUAL       * Private Practice
          COMPARE   "96",REGIBACD
          GOTO      GCSH1000 IF EQUAL       * PRI Deposit
.
          MOVE      RCDTAMNT,FORM12P2
          MULT      "-1",FORM12P2
          MOVE      ZERO,F1
          MOVE      RCBNTTYP,F1
          BRANCH    F1,GCSH1100,GCSH1200,GCSH1200,GCSH1100
.
          ADD       FORM12P2,PINVPATA
          GOTO      GCSH1000
.
GCSH1100  ADD       FORM12P2,PINVHFDA
          GOTO      GCSH1000
.
GCSH1200  ADD       FORM12P2,PINVOTHA
          GOTO      GCSH1000
.
GCSH9999  RETURN
+
.**********************************************************************
.         Load patients for Future Action Letters
.**********************************************************************
LPAT0000  CALL      CRTF0000                     * Create Temp file
          MOVE      ZERO,IFLAG
          PACK      KEY19,FUTDAT1,SP20                                 *C-79281
          CALL      RDSFACT2
LPAT1000  CALL      RDKFACT2                     * read next record
          BRANCH    OVRCD,LPAT9999               * end of file
.
          UNPACK    FADATE,XCENT,XYEAR,XMON,XDAY
          DISPLAY   *P20:24,*V2LON,FADMNO,*P32:24,XDAY,SLASH,XMON,SLASH:
                    XCENT,XYEAR;
.
          MATCH     "S",PTFCSTAT                 * Suspended?
          GOTO      LPAT1000 IF EQUAL            * Ignore Suspended Future Act.
.
          MATCH     FADATE,FUTDAT2               * out of date range ?
          GOTO      LPAT9999 IF LESS             * yes - finish
.
          MATCH     FACODE1,FACODE
          GOTO      LPAT1000 IF NOT EQUAL        * Not the requested future act.
.
          MOVE      FADMNO,KEY8
          CALL      RDVISA1                      * read visit record
          BRANCH    OVRCD,LPAT1000               * record not found
          CALL      RDPMVX11                     * read visit record
          BRANCH    OVRCD,LPAT1000               * record not found
.
          COMPARE   THREE,PVITYPE
          GOTO      LPAT1000 IF NOT EQUAL        * Only for inpatient
.
          CALL      RDMISS1
          BRANCH    OVRCD,LPAT1000               * record not found
.
          MOVE      PVIURNO,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,LPAT1000               * patient not on file
.
          CALL      GINV0000                     * Check Action Plan for the Inv
          GOTO      LPAT1000
.
LPAT9999  RETURN
+
.**********************************************************************
.         Check if the selected health fund
.**********************************************************************
CFND0000  MOVE      PVIBILL,KEY8
          BRANCH    PVITYPE,CFND1000,CFND2000,CFND3000
          GOTO      CFND9000
.
CFND1000  CALL      RDEMVIS1
          BRANCH    OVRCD,CFND9000
          MOVE      EMVIFUND,KEY6               * Emergency health fund
          GOTO      CFND4000
.
CFND2000  CALL      RDBOKB1                     * get outpatient record
          BRANCH    OVRCD,CFND9000
          MOVE      OTBBFUND,KEY6               * Outpatient health fund
          GOTO      CFND4000
.
CFND3000  CALL      RDMISS1
          BRANCH    OVRCD,CFND9000
          MOVE      AFUNDH,KEY6                 * Inpatient health fund
.
CFND4000  MATCH     KEY6,HEALTHFD           * check health fund
          GOTO      CFND9000 IF NOT EQUAL
          MOVE      ZERO,EXIT
          GOTO      CFND9999
.
CFND9000  MOVE      ONE,EXIT
CFND9999  RETURN
+
.**********************************************************************
.         Check if the selected item was entered
.**********************************************************************
CHITM000  PACK      KEY22,AADMNO,SP70
          BRANCH    PVITYPE,CHITM100,CHITM200,CHITM300
          GOTO      CHITM900
.
CHITM100  CALL      RDSDTRE1
CHITM120  CALL      RDKDTRE1
          BRANCH    OVRCD,CHITM600
.
          MATCH     ATNUMB,AADMNO
          GOTO      CHITM600 IF NOT EQUAL
.
          MATCH     ATITEMNO,MISCCODE             * Check item code
          GOTO      CHITM120 IF NOT EQUAL
          GOTO      CHITM800
.
CHITM200  CALL      RDSDTRO1
CHITM220  CALL      RDKDTRO1
          BRANCH    OVRCD,CHITM600
.
          MATCH     OTNUMB,AADMNO
          GOTO      CHITM600 IF NOT EQUAL
.
          MATCH     OTITEMNO,MISCCODE             * Check item code
          GOTO      CHITM220 IF NOT EQUAL
          GOTO      CHITM800
.
CHITM300  CALL      RDSDTRN1
CHITM320  CALL      RDKDTRN1
          BRANCH    OVRCD,CHITM600
.
          MATCH     TADMNO,AADMNO
          GOTO      CHITM600 IF NOT EQUAL
.
          MATCH     TITEMNO,MISCCODE             * Check item code
          GOTO      CHITM320 IF NOT EQUAL
          GOTO      CHITM800
.
.         Check the pending file
.
CHITM600  MOVE      AADMNO,DAADMNO
          PACK      KEY14,DAADMNO,SP70
          CALL      RSPMMTI1
CHITM700  CALL      RKPMMTI1
          BRANCH    OVRCD,CHITM900
.
          MATCH     PMMIVISN,DAADMNO
          GOTO      CHITM900 IF NOT EQUAL
.
          MATCH     MISCCODE,PMMIITEM             * Check item code
          GOTO      CHITM700 IF NOT EQUAL
.
CHITM800  MOVE      ZERO,EXIT
          GOTO      CHITM999
.
CHITM900  MOVE      ONE,EXIT
CHITM999  RETURN
+
.**********************************************************************
.     Check Action Plan for the Invoice
.**********************************************************************
GINV0000  MOVE      PTFCINVN,KEY8
          CALL      RDINV1
          BRANCH    OVRCD,GINV9999
.
          CALL      GCSH0000                     * Get cash amount
          MOVE      ZERO,INVAMNT
          ADD       PINVAMT,INVAMNT
          ADD       PINVPATA,INVAMNT
          ADD       PINVHFDA,INVAMNT
          ADD       PINVOTHA,INVAMNT
          ADD       PINVJOUR,INVAMNT
          ADD       PTINCRTT,INVAMNT
          ADD       PTINGSTJ,INVAMNT
          COMPARE   ZERO,INVAMNT
          GOTO      GINV9999 IF EQUAL            * zero outstanding amount
.
          MOVE      PINVNO,KEY8
          CALL      RDPTPFA1
          BRANCH    OVRCD,GINV9999               * No Action Plan for this Inv.
.
.         Check if Invoice and Letter are to be printed for this Action Plan
.
          PACK      KEY6,ACLAIM,PTPFPLAN,SP70
          CALL      RDPTFAP1                     * Read future action plan file
          BRANCH    OVRCD,GINV9999
.
          MOVE      SP70,KEY1
          MOVE      SP70,DIM1
          MOVE      ZERO,F2
GINV2000  COMPARE   TEN,F2
          GOTO      GINV9999 IF NOT LESS
.
          ADD       ONE,F2
          LOAD      KEY3,F2,PTFPFAC1,PTFPFAC2,PTFPFAC3,PTFPFAC4,PTFPFAC5:
                            PTFPFAC6,PTFPFAC7,PTFPFAC8,PTFPFAC9,PTFPFAC0
          MATCH     KEY3,FACODE1                 * Same future action code?
          GOTO      GINV2000 IF NOT EQUAL
.
          LOAD      KEY1,F2,PTFPPLT1,PTFPPLT2,PTFPPLT3,PTFPPLT4,PTFPPLT5:
                            PTFPPLT6,PTFPPLT7,PTFPPLT8,PTFPPLT9,PTFPPLT0
.
          LOAD      DIM1,F2,PTFPPIN1,PTFPPIN2,PTFPPIN3,PTFPPIN4,PTFPPIN5:
                            PTFPPIN6,PTFPPIN7,PTFPPIN8,PTFPPIN9,PTFPPIN0
.
          PACK      KEY16,PVIBILL,PINVNO,SP70
          CALL      RDFTMP1                      * see if visit already on file
          IF        OVRCD=1
            MOVE      PVIBILL,DXVNUMB
            MOVE      PINVNO,XINVNO
            MOVE      KEY1,XPRTLET
            MOVE      DIM1,XPRTINV
            CALL      WRFTMP1
          ENDIF
GINV9999  RETURN
.
.**********************************************************************
.                  Print Future Action Letters
.**********************************************************************
PRTN0000  CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
.         MATCH     "IBARSH",PGM
.         IF        !@EQUAL
.           CALL      OPNPRINT
.           MOVE      THREE,CPRTFLG
.         ENDIF
.
          UNPACK    CURRDATE,XCENT,XYEAR,XMON,XDAY     * format current date
          CALL      FMTD0000
          MOVE      FORMDATE,LXCURDAT
          MOVE      LXCURDAT,LXLETDAT                  * Letter date
.
          MOVE      SP20,KEY16                    * pos'n at start of temp file
          CALL      RSFTMP1
PRTN1000  CALL      RKFTMP1
          BRANCH    OVRCD,PRTN9999               * no more records 
.
          MOVE      XVNUMB,KEY8                  * get visit record
          CALL      RDVISA1
          BRANCH    OVRCD,PRTN1000               * record not found
.
          MATCH     "1",XPRTLET                  * Print letter?
          GOTO      PRTN2000 IF EQUAL
.
          MATCH     "1",XPRTINV                  * Print Invoice?
          GOTO      PRTN6000 IF EQUAL
.
          GOTO      PRTN1000
.
.         Print Letter
.
PRTN2000  MOVE      TEMPLETT,LCODE
          PACK      XURNO,PVIURNO,SP8
          CALL      SETV0000                     * get data and set variables
          BRANCH    EXIT,PRTN5200                * master record not found
.
          CALL      LETR0000                     * process letter 
          BRANCH    EXIT,PRTN5200                * letter not set up
.
.         Write details to financial history file
.
          PACK      KEY19,XVNUMB,CURRDATE,LETTFORM
          CALL      RDPTLH1                      * record already exists ?
          COMPARE   ZERO,OVRCD
          GOTO      PRTN4000 IF EQUAL            * yes
.
          UNPACK    KEY19,DPTLHADM,PTLHDATE,DPTLHLCO
          MOVE      DPTLHADM,PTLHADMN
          MOVE      DPTLHLCO,PTLHLCOD
          CLOCK     TIME,PTLHTIME                * Time letter sent
          MOVE      SP70,PTLHSEID                * Selection Id
          PACK      PTLHSPAR,SP20,SP1
          CALL      WRPTLH1                      * write record
.
.         Update the date of the last letter sent in the patient reminder file
.
PRTN4000  MOVE      XVNUMB,KEY8
          UNPACK    CURRDATE,XCENT,XYEAR,XMON,XDAY
          CALL      RDREMD1                      * reminder record found ?
          BRANCH    OVRCD,PRTN5000               * no
.
          PACK      REMLDTE,XCENT,XYEAR,XMON,XDAY
          MOVE      LETTFORM,REMLSTL
          CALL      UPREMD1                      * update record
          GOTO      PRTN5200
.
PRTN5000  PACK      REMLDTE,XCENT,XYEAR,XMON,XDAY      * write new REM record
          MOVE      SP8,REMPDTE
          MOVE      LETTFORM,REMLSTL
          MOVE      ZERO,REMHFLG
          PACK      REMSPAR,SP20,SP5
          MOVE      XVNUMB,KEY8
          CALL      WRREMD1
.
PRTN5200  MATCH     "1",XPRTINV                  * Print Invoice?
          GOTO      PRTN1000 IF NOT EQUAL
.
.         Re-print invoice
.
PRTN6000  
          MOVE      XINVNO,FORM8
          MOVE      FORM8,KEY8
          CALL      RDINV1
          BRANCH    OVRCD,PRTN1000
.
          MOVE      "009",KEY3         * Pooling Type
          CALL      PNTX0000            * reprint invoice
.
          GOTO      PRTN1000
.
PRTN9999  RETURN
+
.*****************************************************************************
. Write the Invoice number to the polling table to reprint
.*****************************************************************************
PNTX0000  MOVE      ZERO,FORM10
.
          PACK      KEY10,Z70
          CALL      RSIBPOL1
          CALL      RPIBPOL1
          BRANCH    OVRCD,PNTX1000
.
          MOVE      IBPLUNIQ,FORM10
PNTX1000  ADD       ONE,FORM10
.
          MOVE      FORM10,IBPLUNIQ
          MOVE      KEY3,IBPLTYPE     * Pooling Type
          MOVE      PINVUR,IBPLURNO
          MOVE      PINVADM,IBPLVISN
          PACK      IBPLSKEY,PINVNO,IPRINTER,WBSEUID,SP70
          MOVE      SP70,IBPLSPAR
.
          MOVE      FORM10,KEY10
          CALL      RAIBPOL1
          IF        OVRCD=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            CALL      WRIBPOL1
            TRAPCLR   IO
            BRANCH    OVRCD,PNTX1000
          ELSE
            GOTO      PNTX1000
          ENDIF
.
PNTX9999  RETURN
.
.------------------------------------------------------------
.         Get the name of the patient
.------------------------------------------------------------
GPNAME00  CLEAR     PNAME
          REP       ", ",PTITL
          REP       ", ",PGNAME
          REP       ", ",PSNAME
.
          PACK      DIM6 WITH SP1,PTITL,SP1
GPNAME10  CMATCH    SP1,DIM6
          GOTO      GPNAME20 IF NOT EQUAL
          BUMP      DIM6
          GOTO      GPNAME10 IF NOT EOS
          IF        CFEETYP <> 9
            APPEND    PGNAME,PNAME     * original
          ELSE
            APPEND    PSNAME,PNAME     * Singapore
          ENDIF
          GOTO      GPNAME50
.
GPNAME20  APPEND    DIM6,PNAME
GPNAME30  CMATCH    SP1,PNAME
          GOTO      GPNAME40 IF NOT EQUAL
          BUMP      PNAME,-1
          GOTO      GPNAME30 IF NOT EOS
          CLEAR     PNAME
          IF        CFEETYP <> 9
            APPEND    PGNAME,PNAME     * original
          ELSE
            APPEND    PSNAME,PNAME     * Singapore
          ENDIF
          GOTO      GPNAME50
.
GPNAME40  APPEND    SP1,PNAME
          IF        CFEETYP <> 9
            APPEND    PGNAME,PNAME     * original
          ELSE
            APPEND    PSNAME,PNAME     * Singapore
          ENDIF
.
GPNAME50  CMATCH    SP1,PNAME
          GOTO      GPNAME60 IF NOT EQUAL
          BUMP      PNAME,-1
          GOTO      GPNAME50 IF NOT EOS
          CLEAR     PNAME
          IF        CFEETYP <> 9
            APPEND    PSNAME,PNAME     * original
          ELSE
            APPEND    PGNAME,PNAME     * Singapore
          ENDIF
          GOTO      GPNAME70
.
GPNAME60  APPEND    SP1,PNAME
          IF        CFEETYP <> 9
            APPEND    PSNAME,PNAME     * original
          ELSE
            APPEND    PGNAME,PNAME     * Singapore
          ENDIF
.
GPNAME70  APPEND    SP30,PNAME
          APPEND    SP30,PNAME
          RESET     PNAME
GPNAME99  RETURN
+
.*******************************************************************************
.         DLUM0000 - Generate lumpsum for daycase
.*******************************************************************************
DLUM0000  MOVE      SP10,PTHFBCAT         * initialise table type
          OPEN      PATFN1A1,"patfn1af"
          PACK      KEY14,AFUNDH,AFNDTB,SP70
          CALL      RDFUND1
.
          PACK      SAVDES1,SP20,SP20
          PACK      SAVDES2,SP20,SP20
          OPEN      PATLSDA1,"patlsdaf"   * open Day case file
          PACK      KEY27,CONTRCID,ACLAIM,AFUNDH,PTHFBCAT,CMDRG,ATYPE
          CALL      RDPTLSD1
          IF        OVRCD = 1
            PACK      KEY27,CONTRCID,ACLAIM,SP6,SP3,CMDRG,ATYPE
            CALL      RDPTLSD1
            IF        OVRCD = 1
              READ      CONTROLF,TWENTY;*193,PTCNDCLM
              CALL      DCLM0000
              PACK      KEY27,CONTRCID,PTCNDCLM,SP6,SP3,CMDRG,ATYPE
              CALL      RDPTLSD1
              CLOSE     PATLSDA1
              BRANCH    OVRCD,DLUM9999        * no lumpsum charge
            ENDIF
          ENDIF
          CLOSE     PATLSDA1
.
          MOVE      PTLSDES1,SAVDES1
          MOVE      PTLSDES2,SAVDES2
DLUM9999  RETURN
+
.*******************************************************************************
.         OLUM0000 - Overnight lumpsum
.*******************************************************************************
OLUM0000  MOVE      SP10,PTHFBCAT         * initialise table type
          OPEN      PATFN1A1,"patfn1af"
          PACK      KEY14,AFUNDH,AFNDTB,SP70
          CALL      RDFUND1
.
          OPEN      PATHLFA1,"pathlfaf"
          PACK      KEY27,CONTRCID,ACLAIM,AFUNDH,PTHFBCAT,CMDRG
          CALL      RDPTHLF1
          IF        OVRCD = 1
            PACK      KEY27,CONTRCID,ACLAIM,SP6,SP3,CMDRG
            CALL      RDPTHLF1
            IF        OVRCD = 1
              READ      CONTROLF,TWENTY;*193,PTCNDCLM
              CALL      DCLM0000
              PACK      KEY27,CONTRCID,PTCNDCLM,SP6,SP3,CMDRG
              CALL      RDPTHLF1
              CLOSE     PATHLFA1
              BRANCH    OVRCD,OLUM9999        * no lumpsum charges
            ENDIF
          ENDIF
          CLOSE     PATHLFA1
          MOVE      PTHLDES1,SAVDES1
          MOVE      PTHLDES2,SAVDES2
.
OLUM9999  RETURN
+
.*******************************************************************************
.         Get the default charging claim code for multi hospital
.*******************************************************************************
DCLM0000  IF        IBCNMHOS=1
            OPEN      PATHSPA1,"pathspaf"
            MOVE      PMVXMHOS,KEY3
            CALL      RDPTHSP1
            IF        OVRCD=0
              MOVE      PTHSDCLM,PTCNDCLM     * default claim code charging
            ENDIF
          ENDIF
          MATCH     SP70,PTCNDCLM
          IF        @EQUAL
            MOVE      "0  ",PTCNDCLM          * Use zero claim code
          ENDIF
DCLM9999  RETURN
+
.******************************************************************************
WEBERR00  RETURN
.
.******************************************************************************
PRTEOL    IF        IBCNUGST=2 & PTCNINVL=9 & PTCNINVB=2
            CALL      PRTEOL18         * print right handside
          ELSE
            PRINT     *N;
          ENDIF
          RETURN
+
.******************************************************************************
.* CRTF0000   : Create temporary file for future action                       *
.******************************************************************************
CRTF0000  CALL      KILF0000                 * make sure old file is not there
.
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    FACTFNAM,CMDLINE
          APPEND    " 19 U1-8,9-16",CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      FACTFIL1,FACTFNAM
.
CRTF9999  RETURN
+
.******************************************************************************
.* KILF0000   : Remove temporary file for Future Action                       *
.******************************************************************************
KILF0000  CLOSE     FACTFIL1
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FACTFNAM,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
KILF9999  RETURN
+
.------------------------------------------------------------
. Procedure to get Doctor Code from Outpatient Clinic ID
. COPTION - 1 Return DOCTCODE
.           2 Output Location
.           3 (N/A)
.           4 Output Menu Type
.           5 Output Unit
.------------------------------------------------------------
          DEFPROC  OUTDET00
.
          INC      OUTPREFD/INC
          INC      OUTCLIFD/INC
          INC      OUTBOAFD/INC
          INC      OUTMA1FD/INC
          INC      OUTBB1FD/INC
.
KEYBOA    DIM      28
KEYCLI    DIM      20
TESTSITE  DIM      6
TESTCLIN  DIM      6
.
          MOVE     SP70,DOCTCODE
          COMPARE  ZERO,PVITYPE
          GOTO     OUTDET50 IF EQUAL
.
          PACK     KEY6,PVISITE,SP70
          CALL     RDSITA1
          BRANCH   OVRCD,OUTDET95
.
          PACK     KEYCLI,PVISITE,PVIDOCT,PVIDATE,SP70
          BRANCH   COPTION,OUTDET60
.
          PACK     KEY8,OSTFILE,FILBOKA1 * Determine Location from Masterfile
          TRAP     OVERCOND IF IO
          OPEN     OUTBOKA1,KEY8         * Master
          TRAPCLR  IO
          BRANCH   OVRCD,OUTDET95
.
          PACK     KEYBOA,PVISITE,PVIDOCT,PVIDATE,SP70
          PACK     KEY28,PVISITE,PVIDOCT,PVIDATE,SP70
          PACK     KEY20,PVISITE,PVIDOCT,PVIDATE,SP70
          CALL     RDSBOKA1
OUTDET10  CALL     RDKBOKA1
          BRANCH   OVRCD,OUTDET95
          PACK     KEYBOA,OBASITE,OBACLIN,OBADATE,OBASTRT,OBASLOT,SP70
          MATCH    KEY20,KEYBOA
          GOTO     OUTDET95 IF NOT EQUAL
          MATCH    OBAOUTNO,PVIBILL         * Set up billing number
          GOTO     OUTDET10 IF NOT EQUAL
          GOTO     OUTDET80
.
OUTDET50  MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     OUTPREA1,"outpreaf"   * Pre Attendance File
          TRAPCLR  IO
          BRANCH   OVRCD,OUTDET95
          MOVE     ADMISSNO,KEY8
          CALL     RDPREA1               * Check for Pre-Attendance
          BRANCH   OVRCD,OUTDET95
.
          PACK     KEY6,OPRSITE,SP70
          CALL     RDSITA1
          BRANCH   OVRCD,OUTDET95
.
          PACK     KEYCLI,OPRSITE,OPRCLIN,OPRDATE,SP70
          PACK     KEYBOA,OPRSITE,OPRCLIN,OPRDATE,OPRSTRT,OPRSLOT
.
          BRANCH   COPTION,OUTDET60,OUTDET70,OUTDET70,OUTDET70
.
OUTDET60  MOVE     ZERO,OVRCD
          PACK     KEY8,OSTFILE,FILCLIA1 * Determine Doctor from Clinic ID
          TRAP     OVERCOND IF IO
          OPEN     OUTCLIA1,KEY8         * Clinic Details
          TRAPCLR  IO
          BRANCH   OVRCD,OUTDET95
.
          PACK      KEY20,KEYCLI,SP70
          CALL      RDCLIA1
          IF        OVRCD=1
            PACK      KEY20,KEYCLI,Z70
            CALL      RDSCLIA1          * Read Clinic Record
            CALL      RDPCLIA1          * Read Clinic Record
            BRANCH    OVRCD,OUTDET95
.
            UNPACK    KEYCLI,TESTSITE,TESTCLIN
.
            MATCH     TESTSITE,OCASITE
            GOTO      OUTDET95 IF NOT EQUAL
.
            MATCH     TESTCLIN,OCACLIN
            GOTO      OUTDET95 IF NOT EQUAL
          ENDIF
.
          MOVE     OCADOCT,DOCTCODE
          MATCH    SP70,DOCTCODE
          IF       @EQUAL
            MOVE     OCACCONS,DOCTCODE
          ENDIF
          MOVE     ZERO,EXIT
          GOTO     OUTDET99
.
OUTDET70  PACK     KEY8,OSTFILE,FILBOKA1 * Determine Location from Masterfile
          TRAP     OVERCOND IF IO
          OPEN     OUTBOKA1,KEY8         * Master
          TRAPCLR  IO
          BRANCH   OVRCD,OUTDET95
.
          MOVE     KEYBOA,KEY28
          CALL     RDBOKA1
          BRANCH   OVRCD,OUTDET95
.
OUTDET80  IF       COPTION=4
            PACK     MENUTYPE,TWO,OBASTAT * Outpatient Booking
            MOVE     ZERO,EXIT
            GOTO     OUTDET99
          ENDIF
.
          IF       COPTION=5
            PACK     CFNAME,OSTFILE,FILBB1A1
            CALL     OPOTBB11
            MOVE     ADMISSNO,KEY8
            CALL     RDBOKB1
            IF       OVRCD=0
              MATCH    SP6,OTBBDEPT
              GOTO     OUTDET95 IF EQUAL
              MOVE     OTBBDEPT,CODE       * Unit code
              MOVE     ZERO,EXIT
            ENDIF
            GOTO     OUTDET99
          ENDIF
.
          MOVE     ZERO,OVRCD
          PACK     KEY8,OSTFILE,FILMA1A1  * Determine Location from Masterfile
          TRAP     OVERCOND IF IO
          OPEN     OUTMA1A1,KEY8          * Master
          TRAPCLR  IO
          BRANCH   OVRCD,OUTDET95
.
          PACK     KEY18,OBASITE,OBACLIN,OBADAY,OBASTRT
          CALL     RDMASA1
          BRANCH   OVRCD,OUTDET95
.
          WRITE    HTMLFILE;OTMACLOC;
          MOVE     ZERO,EXIT
          GOTO     OUTDET99
.
OUTDET95  MOVE     ONE,EXIT
          GOTO     OUTDET99
.
          INC       OUTCLIIO/INC
          INC      OUTPREIO/INC
          INC       OUTBOAIO/INC
          INC       OUTMA1IO/INC
          INC       IBAOVRIO/INC
          INC       OUTBB1IO/INC
.
OUTDET99  ENDPROC
.------------------------------------------------------------
. Procedure to get Emergency Details
.   COPTION = 1 Return Consultant DOCTCODE
.             2 Output Location
.             3 Output Triage Status
.             4 Output Menu Type
.------------------------------------------------------------
          DEFPROC  EMRCHK00
.
          INC      EMRVISFD/INC
          INC      EMRLOCFD/INC
.
EMRCHK10  MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     EMRVISA1,"emrvisaf"
          TRAPCLR  IO
          BRANCH   OVRCD,EMRCHK90
.
          MOVE     ADMISSNO,KEY8
          CALL     RDEMVIS1
          BRANCH   OVRCD,EMRCHK90
.
          COMPARE  FOUR,EMVISTAT
          GOTO     EMRCHK90 IF EQUAL
.
          MOVE     EMVIDOCT,DOCTCODE
          IF       COPTION=4
            PACK     MENUTYPE,ONE,EMVISTAT
            GOTO     EMRCHK99
          ENDIF
          IF       COPTION=2
            IF       EMVISTAT=1
              OPEN     EMRLOCA1,"emrlocaf"
              MOVE     "Other Departments",EMLODESC
              MOVE     EMVILOCN,KEY3
              CALL     RDEMLOC1
              WRITE    HTMLFILE;"Emergency - ",EMLODESC;
            ELSE
              WRITE    HTMLFILE;"Discharged";
            ENDIF
          ENDIF
          IF       COPTION=3
            WRITE    HTMLFILE;EMVITRIG;
          ENDIF
          GOTO     EMRCHK99
.
EMRCHK90  MOVE     PVIDOCT,DOCTCODE
          IF       COPTION=2
            WRITE    HTMLFILE;"Emergency";
          ENDIF
          GOTO     EMRCHK99
.
          INC      EMRVISIO/INC
          INC      EMRLOCIO/INC
          INC       IBAOVRIO/INC
.
EMRCHK99  ENDPROC
+
.-------------------------------------------------
. Format Doctors Given Name
.-------------------------------------------------
DOCGIV00  CMATCH    SP1,NAME35               * Remove Leading Blanks
          IF        @EQUAL
            BUMP      NAME35
            GOTO      DOCGIV00 IF NOT EOS
            GOTO      DOCGIV99               * entire name if blank
          ENDIF
          PACK      KEY35,NAME35,SP30        * reset form pointer
          MOVE      KEY35,NAME35
.
          SCAN      SP1,NAME35             * Locate the blank
          GOTO      DOCGIV20 IF NOT EQUAL
          BUMP      NAME35,-1              * go back 1 to end of name
          MOVEFPTR  NAME35,CCITEM          * another handly form field
          RESET     NAME35                 * reset the form pointer
          SETLPTR   NAME35,CCITEM          * set logical length to end of name
.
.         Save this name
.
          UNPACK    NAME35,KEY1,KEY50
          REP       DOWNCASE,KEY50
          APPEND    KEY1,DISPNAME
          STRIP     KEY50
          APPEND    KEY50,DISPNAME
          APPEND    SP1,DISPNAME
.
.         Check for any more names
.
          SETLPTR   NAME35,35              * reset logical length
          ADD       ONE,CCITEM             * position of 1st blank
          RESET     NAME35,CCITEM          * reset to this point
          PACK      KEY35,NAME35,SP70      * reset form pointer
          MOVE      KEY35,NAME35

DOCGIV10  CMATCH    SP1,NAME35               * Remove Leading Blanks
          IF        @EQUAL
            BUMP      NAME35
            GOTO      DOCGIV10 IF NOT EOS
            GOTO      DOCGIV99               * entire name if blank
          ENDIF
          PACK      KEY35,NAME35,SP30        * reset form pointer
          MOVE      KEY35,NAME35
.
          SCAN      SP1,NAME35             * Locate the blank
          GOTO      DOCGIV20 IF NOT EQUAL
          BUMP      NAME35,-1              * go back 1 to end of name
          MOVEFPTR  NAME35,CCITEM          * another handly form field
          RESET     NAME35                 * reset the form pointer
          SETLPTR   NAME35,CCITEM          * set logical length to end of name
.
.         Save this Initial
.
          UNPACK    NAME35,KEY1,KEY50
          APPEND    KEY1,DISPNAME
          APPEND    SP1,DISPNAME
.
          GOTO      DOCGIV99
.
.         Rest of the string is one name
.
DOCGIV20  UNPACK    NAME35,KEY1,KEY50
          REP       DOWNCASE,KEY50
          APPEND    KEY1,DISPNAME
          STRIP     KEY50
          APPEND    KEY50,DISPNAME
          APPEND    SP1,DISPNAME
.
DOCGIV99  RETURN
+
.*****************************************************************************
.*  GETALIDS
.*  Procedure to get an alternate ID
.*  Exit=0  No alternate ID
.*       1  Alternate ID's exist
.*****************************************************************************
          DEFPROC   GETALIDS
.
          INC       PMSAIDFD/INC
.
          MOVE      ZERO,EXIT
          PACK      KEY20,SP70
          OPEN      PMSAIDA1,"pmsaidaf"
.
          PACK      KEY31,PURNO,SP70
          CALL      RSPMAID1           * Read alternate id Table
GETALI10  CALL      RKPMAID1
          BRANCH    OVRCD,GETALI99
.
          MATCH     PURNO,PMAIURNO     * Check same UR
          GOTO      GETALI99 IF NOT EQUAL
.
          MATCH     "1",PMAIDISU
          GOTO      GETALI10 IF NOT EQUAL
.
          PACK      KEY20,PMAIALID,SP70
          MOVE      ONE,EXIT
          GOTO      GETALI99
.
          INC       PMSAIDIO/INC
          INC       IBAOVRIO/INC
.
GETALI99  CLOSE     PMSAIDA1
.
          ENDPROC
+
. -------------------------------------------------------------------------
.                   Clear PATRE1FD fields for Person responsible
. -------------------------------------------------------------------------
.                          CLPR0000 in PATWEB98
CLRRES00  MOVE       SP70,DPKADMN   *      Admission Number
          PACK       PKNAME,SP70,SP20 *    Person Resp For Account  Name
          MOVE       SP70,PKADD1    *      P.R.A Address line 1
          MOVE       SP70,PKADD2    *      P.R.A Address line 2
          MOVE       SP70,PKSUBR    *      P.R.A Suburn
          MOVE       SP70,PKADD4    *      P.R.A Address line 2
          MOVE       SP70,PKPOST    *      P.R.A Postcode
          MOVE       SP70,PKTELEP   *      P.R.A Private Telephone
          MOVE       SP70,PKTELEB   *      P.R.A Business Telephone
          MOVE       SP70,PKRELP    *      P.R.A Relationship
          MOVE       SP70,PTREMOBL  *      P.R.A Mobile Phone
.
CLRRES99  RETURN
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILES                                   *
.****************************************************************************
.
RSTEMP1   READ      VISTEMP1,KEY8;;
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          READ      VISTEMP1,KEY8;DXVNUMB,XVTYPE,XVDATE,XOUTST,XURNO,XPNAME
          GOTO      OVERCOND IF OVER
          MOVE      DXVNUMB,XVNUMB
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    VISTEMP1;DXVNUMB,XVTYPE,XVDATE,XOUTST,XURNO,XPNAME
          GOTO      OVERCOND IF OVER
          MOVE      DXVNUMB,XVNUMB
          RETURN
.
RPTEMP1   MOVE      ZERO,OVRCD
          READKP    VISTEMP1;DXVNUMB,XVTYPE,XVDATE,XOUTST,XURNO,XPNAME
          GOTO      OVERCOND IF OVER
          MOVE      DXVNUMB,XVNUMB
          RETURN
.
WRTEMP1   WRITE     VISTEMP1,KEY8;KEY8,XVTYPE,XVDATE,XOUTST,XURNO,XPNAME
          RETURN
.
UPTEMP1   MOVE      XVNUMB,DXVNUMB
          UPDATE    VISTEMP1;DXVNUMB,XVTYPE,XVDATE,XOUTST,XURNO,XPNAME
          RETURN
.
DETEMP1   DELETE    VISTEMP1,KEY8
          RETURN
+
.
..---- Temporary site file I/O Includes
.
RSSITMP1  READ      SITEFIL1,KEY3;;
          RETURN
.
RKSITMP1  READKS    SITEFIL1;OSTFILE
          GOTO      OVERCOND IF OVER
          MOVE      ZERO,OVRCD
          RETURN
.
RDSITMP1  READ      SITEFIL1,KEY3;OSTFILE
          GOTO      OVERCOND IF OVER
          MOVE      ZERO,OVRCD
          RETURN
.
WRSITMP1  WRITE     SITEFIL1,KEY3;OSTFILE
          RETURN
+
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILES                                   *
.****************************************************************************
.
RSFTMP1   READ      FACTFIL1,KEY16;;
          RETURN
.
RDFTMP1   MOVE      ZERO,OVRCD
          READ      FACTFIL1,KEY16;DXVNUMB,XINVNO,XPRTINV,XPRTLET
          GOTO      OVERCOND IF OVER
          MOVE      DXVNUMB,XVNUMB
          RETURN
.
RKFTMP1   MOVE      ZERO,OVRCD
          READKS    FACTFIL1;DXVNUMB,XINVNO,XPRTINV,XPRTLET
          GOTO      OVERCOND IF OVER
          MOVE      DXVNUMB,XVNUMB
          RETURN
.
RPFTMP1   MOVE      ZERO,OVRCD
          READKP    FACTFIL1;DXVNUMB,XINVNO,XPRTINV,XPRTLET
          GOTO      OVERCOND IF OVER
          MOVE      DXVNUMB,XVNUMB
          RETURN
.
WRFTMP1   WRITE     FACTFIL1,KEY16;DXVNUMB,XINVNO,XPRTINV,XPRTLET
          RETURN
.
UPFTMP1   MOVE      XVNUMB,DXVNUMB
          UPDATE    FACTFIL1;DXVNUMB,XINVNO,XPRTINV,XPRTLET
          RETURN
.
DEFTMP1   DELETE    FACTFIL1,KEY16
          RETURN
+
.TAIL      
.HEAD
.PEOL0000
.CKTL0000
.NTAIL000
.VTAFF000
.MTACC000
.DFORC000
.WCOMP000
.PRLN0000
PRTIPROV
          RETURN
.============================================================================== 
.
          INC       STD001IO
.
          INC       PATCODKY
          INC       PATFLTKY
          INC       PATHSPKY
          INC       PATGBCRN                * Generate BPAY cust ref.no.
          INC       PATCATAI
          INC       PATANVS
          INC       PATINVHL
          INC       PATINVTL
          INC       TFILENAM
          INC       VALCMXFN
          INC       VALCONTR
          INC       GETCNEFF
          INC       PRTINVBD
          INC       PATITMRD
          INC       SEXDSP00
.
          INC       AAEDE1IO/INC            * A&E
          INC       AAEDTRIO/INC            * A&E FILE
          INC       AAEDI1IO/INC
          INC       OUTBB1IO/INC            * outpatients
          INC       OUTCLIIO/INC            * clinics
          INC       OUTCTYIO/INC
          INC       OUTSITIO/INC            * sites
          INC       OUTDTRIO/INC            * outpatient DTR file
          INC       OPRARDIO/INC
          INC       OPRDEAIO/INC
.
          INC       IBAGEDIO/INC
          INC       IBAGSTIO/INC
          INC       IBATMDIO/INC
          INC       IBATMHIO/INC
          INC       IBAPRNIO/INC
          INC       IBAPRINT
          INC       CLPATDTR
          INC       CLPATRE1
          INC       NAMSTRCD
          INC       GETALTID
          INC       CHKCMXPT           * check if casemix & get episode type
          INC       PRNTICDC
          INC       PATDOCCD
.
          INC       EMRVISIO/INC            * Emergency visit file
          INC       EMRHISIO/INC
.
          INC       COMDEPIO/INC
          INC       RCPREGIO/INC
          INC       RCPCRSIO/INC
          INC       RCPDTEIO/INC
          INC       RCPBNKIO/INC
          INC       RCPBDTIO/INC
          INC       PATFLTIO/INC            * financial letters
          INC       PMSCIDIO/INC
          INC       PMSCEXIO/INC
          INC       PMSTLEIO/INC
          INC       PATCODIO/INC            * codes
          INC       PATCMXIO/INC            * casemix funding file
          INC       PATDO1IO/INC            * doctors
          INC       PATDSCIO/INC            * discharge
          INC       PATDTRIO/INC            * dtr
          INC       PATFACIO/INC            * future action
          INC       PATFN1IO/INC            * health fund
          INC       PATFX1IO/INC
          INC       PATCFAIO/INC            * Claim future actions
          INC       PATPFAIO/INC            * patient future action plan file
          INC       PATFAPIO/INC            * future action plan file
          INC       PATICDIO/INC            * ICD file
          INC       PATINVIO/INC            * invoices
          INC       PATIN1IO/INC            * insurance
          INC       PATITMIO/INC            * item file
          INC       PATIBLIO/INC            * lumpsum invoice breakdown file
          INC       PMSCNOIO/INC            * credit notes file
          INC       PMSFCIIO/INC            * credit notes file
          INC       PATMA1IO/INC            * patient master
          INC       PATHSPIO/INC
          INC       PATMI1IO/INC            * admissions
          INC       PATREMIO/INC            * reminder
          INC       PATRE1IO/INC            * person responsible for account
          INC       PATTRNIO/INC            * transfer file
          INC       PATVISIO/INC            * visits
          INC       PATWR1IO/INC
          INC       PATWC1IO/INC            * Workers Comp.
          INC       PATWMAIO/INC
          INC       PATWVEIO/INC
          INC       PMSHCPIO/INC
          INC       PMSVX1IO/INC            * visits
          INC       PMSPRGIO/INC
          INC       PMSEVTIO/INC
          INC       PMSPX2IO/INC
          INC       PATLHIIO/INC            * letter history
          INC       PATLSDIO/INC            * lumpsum daycase file
          INC       PATHLFIO/INC            * lumpsum overnight file
          INC       PMSLLFIO/INC
          INC       PMSLTFIO/INC
          INC       PMSMTIIO/INC
          INC       MLTCFNIO/INC
          INC       PMSPYRIO/INC
          INC       PMSEXTIO/INC
          INC       PATDETIO/INC
          INC       PATECDIO/INC
.
          INC       WEBSECIO/INC
          INC       IBAPOLIO/INC
          INC       NHIMASIO/INC
          INC       NZPIVBIO/INC
          INC       NZPRDTIO/INC
          INC       NZPSPRIO/INC
          INC       NZPMCHIO/INC
          INC       NZPMXCIO/INC
          INC       PATRASIO/INC
          INC       WEBERRIO/INC
+
