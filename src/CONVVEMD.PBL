.***************************************************************************
.* System    :   Patient Management System                                 *
.* Program   :   CONVVEMD                                                  *
.* Desc      :   Load Conversion data for VEMD                             *
.***************************************************************************
.* Date      :   27/06/2001                                                *
.* Author    :   Mike Laming                                               *
.* Function  :   This program will read the conversion file convvemd.txt   *
.*               to load VEMD data to the Emergency Visit file EMRVISFD    *
.*               (This program was reverse engineered from IBAEMR10.PBL)   *
.* Mods      :                                                             *
.*  V12.00.01  14/05/2025  Peter Vela     TSK 0955096                      *
.              Alphnumeric Visit Number changes                            *
.*  V10.13.01  12/09/2018  Ebon Clements   TSK 0861770                     *
.*             Added clear of EMVCFTXT - WRDIAG00                          *
.*  V10.03.01  17/11/2011  Mike Laming     CAR 240184                      *
.*             Changes to IBAPOSTF Post Code table - added State to Keys   *
.*  V10.00.01  14/04/2010  Steve Armstrong   CAR 219933                    *
.*             Recompiled for changes to EMRVCDFD                          *
.***************************************************************************
.*  V9.11.02   07/04/2009  Peter Vela CAR 183976                           *
.*             Added PMVXPILC                                              *
.*  V9.11.01   16/02/2009  Peter Vela CAR 183976                           *
.*             Added PMVXPOEC                                              *
.*  V9.08.01   01/07/2007  Peter Vela CAR SJOG ED Billing                  *
.*             Added EMVCSUBN,EMVCEDAD                                     *
.*  V9.04.01   01/06/2005  Peter Vela CAR 60166                            *
.*             Recompiled for EMRCONFD                                     *
.*  V9.03.03   09/08/2004  Davin  CAR 52214                                *
.*             Recompiled for emrvcdaf change                              *
.*  V9.03.02   13/10/2003  Davin         CAR 39038                         *
.*             Recompiled for change to viscmtfd                           *
.*  V9.03.01   30/05/2003  Lina Vo       CAR 37504                         *   
.*             Write SLA/ASGC code from ibapostf to visit extension table  *
.***************************************************************************
.*  V9.02.14   07/06/2002  Jill Habasque SV93435                           *   
.*             Fixed human intent, injury casue and bed request            *
.*  V9.02.13   19/04/2002  Jill Habasque 3582                              *   
.*             Changed to use EMICVEMD                                     *
.*  V9.02.12   18/04/2002  Jill Habasque 3582                              *   
.*             Fixed storing of EMVITRTM                                   *
.*  V9.02.11   04/04/2002  Ebon Clements                                   *   
.*             Changed Activity when injured from EMVIUC15 to EMVIACTI     *
.*             and use the HDP default not indicator 1                     *
.*  V9.02.10   26/03/2002  Bronko sosic                                    *   
.*             Changed Cat Codes for Injury description, Human Intent &    *
.*             Activity When Injured                                       *
.*  V9.02.09   22/03/2002  Ebon Clements                                   *   
.*             Changed to use HDP code for EMVIUC21 not associated Number  *
.*             Changed to use EMVINATI for nature of main injury           *
.*             not EMVIUC08                                                *
.*  V9.02.08   04/03/2002  Jill Habaque                                    *   
.*             Mods to be based on WEBEXT01.PBL (not IBAEMR10)             *
.*  V9.02.07   12/02/2002  Bronko Sosic                                    *   
.*             Added a write to PATVISFD if the Patient has a UR           *
.*  V9.02.06   01/02/2002  Bronko Sosic                                    *   
.*             Changed the match on CODES to be CATEM                      *
.*  V9.02.05   14/01/2002  Mike Laming                                     *   
.*             Add the User variable EMVINATI for the cat code "ex"        *
.*  V9.02.04   20/12/2001  Bronko sosic                                    *   
.*             Mods to include new cat code of ex                          *
.*  V9.02.03 : 22/11/2001  Mike Laming                                     *
.*             Revamp for Tab delimited input, and data fields as in VEMD  *
.*             User Manual V6.0 (6 extra fields)                           *
.*  V9.02.02 : 26/10/2001  Mike Laming                                     *
.*             Add TRAP FORMAT code to catch input data errors             *
.*  V9.02.01 : 19/09/2001  Mike Laming                                     *
.*             Add record counts for reporting                             *
.*  V9.00.01 : 22/08/2001  Mike Laming                                     *
.*             Change to strip leading zeros from the Visit number         *
.*                                                                         *
.***************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       EMRCONFD/INC                 * EMR Control file
          INC       EMRPROFD/INC                 * Emergency Procedure codes
          INC       EMRVISFD/INC                 * Visit Details
          INC       EMRICDFD/INC   
          INC       AAEDE1FD/INC                 * Visit Details
          INC       AAEDI1FD/INC                 * Discharge details
          INC       VISCMTFD/INC                 * Visit Comments
          INC       EMRVCDFD/INC                 * Visit Procedure/Diagnosis
          INC       EMRVDGFD/INC                 * Visit Diagnosis Details
          INC       EMRVPRFD/INC                 * Visit Procedure Details
          INC       IBAPOSFD/INC
          INC       PATCODFD/INC
          INC       PATMA1FD/INC                 * Patient Master
          INC       PATVISFD/INC                 * Patient visit 
          INC       PMSVX1FD/INC                 * Patient visit 
.
.
.Layout of convvemd.txt
.---------------------
VEMDPD   FILE      ASCII, FIXED=409                                    *C-90203
.
.Name     Type    Length  Pos  Description
.----     ----    ------  ---  -----------
XESTID    DIM       4     1    Site Identifier                         *C-90203
XVISTNUM  DIM       9     5    Visit Number                            *C-90203
XPATNTID  DIM       10    14   Patient Identifier
XMEDINUM  DIM       11    24   Medicare Number                         *C-90203
XMEDICOD  DIM       3     35   Medicare Suffix                         *C-90203
XDVANUM   DIM       9     38   DVA Number                              *I-90203
XPATSEX   DIM       1     47   Sex
XBRTHDAT  DIM       8     48   Date of Birth
XBPLACE   DIM       4     56   Country of Birth
XABORIG   DIM       1     60   Indigenous Status
XPRELANG  DIM       2     61   Preferred Language
XSUBURB   DIM       22    63   Locality	                               *C-90203
XPOSTCOD  DIM       4     85   Post code
XARRMODE  DIM       2     89   Arrival Transport Mode (Cat EA)
XREFDBY   DIM       2     91   Referred by
XTSOURCE  DIM       4     93   Transfer Source (Cat S)                 *C-90203
XVISTYP   DIM       2     97   Type of Visit
XCOMPST   DIM       1     99   Compensable Status (Cat CL)
XAMBCASE  DIM       6     100  Ambulance Case Number
XARRDATE  DIM       8     106  Arrival Date
XARRTIME  DIM       4     114  Arrival Time
XTRIDATE  DIM       8     118  Triage Date
XTRITIME  DIM       4     126  Triage Time
XTRIGCAT  DIM       1     130  Triage Category
XNURSDAT  DIM       8     131  First Seen By Treating Nurse Date
XNURSTIM  DIM       4     139  First Seen By Treating Nurse Time
XDOCTDAT  DIM       8     143  First Seen By Treating Doctor Date
XDOCTTIM  DIM       4     151  First Seen By Treating Doctor Time
XPROCDUR  DIM       89    155  Procedures ( 30x2 + { )                 *C-90203
XRIBRQST  DIM       1     244  Inpat. Bed Request                      *I-90203
XRIBRQDT  DIM       8     245  Inpat. Bed Request Date                 *I-90203
XRIBRQTM  DIM       4     253  Inpat. Bed Request Time                 *I-90203
XDEPDATE  DIM       8     257  Departure Date
XDEPTIME  DIM       4     265  Departure Time
XDEPSTAT  DIM       1     269  Departure Status (Cat ED)
XTDESTN   DIM       4     270  Transfer Destination                    *C-90203
XREFDEPT  DIM       2     274  referred to on Departure
XTCARECM  DIM       1     276  Ongoing Care Communications (Y/N)       *I-90203
XTREASON  DIM       1     277  Reason for Transfer
XESCORT   DIM       1     278  Escort Source
XDEPTMOD  DIM       2     279  Departure Transport Mode
XPRIDIAG  DIM       6     281  Primary Diagnosis
XADDIAG1  DIM       6     287  Additional Diagnosis 1                  *C-90203
XADDIAG2  DIM       6     293  Additional Diagnosis 2                  *I-90203
XINJURY   DIM       2     299  Nature of Main Injury
XBREGION  DIM       2     301  Body Region
XINJEVNT  DIM       100   303  Description of Injury Event
XINJCAUS  DIM       2     403  Injury Cause
XHINTENT  DIM       2     405  Human Intent
XINJPLAC  DIM       1     407  Place Where Injury Occurred (Cat AP)
XINJACTV  DIM       1     408  Activity When Injured
.        End of record    409
.
BYPVEMD   FORM      1
COUNT     FORM      6
COUNTR    FORM      3
COUNTER   FORM      3
COUNTIN   FORM      7                                                  *I-90201
COUNTERR  FORM      7                                                  *I-90201
COUNTREJ  FORM      7                                                  *I-90201
COUNTVUP  FORM      7                                                  *I-90201
COUNTVWR  FORM      7                                                  *I-90201
COUNTGWR  FORM      7                                                  *I-90201
COUNTRWR  FORM      7                                                  *I-90201
DATAERR   FORM      1                                                  *I-90202
DISPVAR   FORM      6
DONE      FORM      2
FORM8     FORM      8
NEWVIS    FORM      1
UPDTVIS   FORM      1
PROCNO    FORM      2
RECORDKY  DIM       14
VEMDCODE  DIM       9
WFLDNO    FORM      3
.
CATEGORY  DIM       2
CH02      DIM       2
CH04      DIM       4
CH12      DIM       12
CODE      DIM       2
CURDTE    DIM       8
.DIM1      DIM       1
DIM8      DIM       8
DIM90     DIM       90
HRS       DIM       2
INJ01     DIM       50
INJ02     DIM       50
KEY127    DIM       127
LINNO     DIM       3
MIN       DIM       2
PRTPT2    DIM       92
PROCCD    DIM       2[30]
SEQFLAG   FORM      2
SPRIMARY  DIM       9
WDD       DIM       2
WMM       DIM       2
WCC       DIM       2
WYY       DIM       2
WPROCDUR  DIM       2                       * work field for proc code *I-90203
.
XVISTNO   DIM       8                       * Visit no (8 chars)       *I-90203
.
.                    ....*....1....*....2....*....3....*....4..
SP127     INIT      "                                          ":
                    "                                          ":
                    "                                           "
XPURNO    DIM       8
WACODE    DIM       3
WCOMM     DIM       10
WTESTCD   DIM       4
WTHISCD   DIM       4
.
CATEA     INIT      "ea"
CATEB     INIT      "eb"
CATEC     INIT      "ec"
CATED     INIT      "ed"
CATEE     INIT      "ee"
CATEF     INIT      "ef"
CATEG     INIT      "eg"
CATEH     INIT      "eh"
CATEI     INIT      "ei"
CATEJ     INIT      "ej"
CATEK     INIT      "ek"
CATEL     INIT      "el"
CATEM     INIT      "em"
CATEN     INIT      "en"
CATEO     INIT      "eo"
CATEP     INIT      "ep"
CATEQ     INIT      "eq"
CATER     INIT      "er"
CATES     INIT      "es"
CATET     INIT      "et"
CATEU     INIT      "eu"
CATEV     INIT      "ev"
CATEX     INIT      "ex"
CATSEY    INIT      "ey"
CATSEZ    INIT      "ez"
CATEY     INIT      "EY"

CODEA1    INIT      "A1"
CODEA2    INIT      "A2"
CODEA3    INIT      "A3"
CODEA4    INIT      "A4"
CODEA5    INIT      "A5"
CODEA6    INIT      "A6"
CODEA7    INIT      "A7"
CODEA8    INIT      "A8"
.
CODEAA    INIT      "AA"
CODEAP    INIT      "AP"
CODECL    INIT      "CL"
CODEEA    INIT      "EA"
CODEED    INIT      "ED"
CODES     INIT      "S "
.
DASH      INIT      "-"
INVDIAG   INIT      "Invalid Diagnosis Code"
LALL      INIT      "ALL   "
LOUT      INIT      "OUT   "
LCL       INIT      "CL"
LTP       INIT      "TP"
.
MSG01     INIT      "HCS CODE "
MSG02     INIT      "NOT FOUND FOR CATEGORY "
MSG03     INIT      "A User Area was not found for Category "
MSG04     INIT      "Emergency Procedure code not found for "
SECS      INIT      ":00"
.
PRGID     INIT      "CONVVEMD"
PRGNAM    INIT      "Load VEMD data to EMR Visit Details"
VERSION   INIT      "V12.00.01"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and check files
          BRANCH    EXIT,ML9999            * if conversion files don't exist
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
.
          CALL      OPEN0000               * Open file
          BRANCH    EXIT,ML9999            * EXIT = 1 if EXECUTE fails     
.
          CALL      PROC0000               * process the details
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and check files. *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      VEMDPD,"convvemd"
          MOVE      OVRCD,BYPVEMD
          TRAPCLR   IO
.
          MOVE      ZERO,EXIT
.                                           * If no conversion files exist
          IF        BYPVEMD=1
            DISPLAY   *P1:23,*EL,*B,"File convvemd.txt does not exist ":
                      "- Process Terminated":  
                      *P1:24,"Hit <",*V2LON,"ENTER",*HOFF,"> to continue ";
            KEYIN     ANS;
            MOVE      ONE,EXIT
            GOTO      INIT9999
          ENDIF 
.
          PACK      CURDTE,CCC,CYY,CMM,CDD  * Set up the current date for use
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.****************************************************************************

OPTN0000  MOVE      FALSE,EXIT
          DISPLAY   *P1:4,"This program loads VEMD data":
                    " from the 'convvemd.txt' file";
          KEYIN     *P1:24,*EL,"Ok to Continue (",*V2LON,"Y",*HOFF,"/":
                    *V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      OPTN9000 IF EQUAL
.
          MATCH     ANSN,ANS
          GOTO      OPTN9500 IF EQUAL
.
          BEEP
          GOTO      OPTN0000
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
+
.**************************************************************************
.*                               OPEN0000              Called by: ML0000  *
.*                              Open Files                                *
.**************************************************************************
.
OPEN0000  MOVE      ZERO,OVRCD                   * 
.
. ----------------------------------------- start of addition          *I-90203
          CLOSE     VEMDPD
.
          DISPLAY   *P1:24,*EL,"Converting convvemd.txt",*W:
                    *P1:7,*EL;
          EXECUTE   "convvemd.us1",TASKID
.
          MOVE      ZERO,EXIT 
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      VEMDPD,"ibavemdo"
          MOVE      OVRCD,BYPVEMD
          TRAPCLR   IO
.                                           * If no conversion files exist
          IF        BYPVEMD=1
            DISPLAY   *P1:23,*EL,*B,"Can't find file ibavemdo.txt created":
                      " above - TASKID=",TASKID," - Process Terminated":  
                      *P1:24,"Hit <",*V2LON,"ENTER",*HOFF,"> to continue ";
            KEYIN     ANS;
            MOVE      ONE,EXIT
          ENDIF
. ----------------------------------------- end of addition            *I-90203
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.                                                * Visit Details
          DISPLAY   *P64:24,"emrvisaf";
          OPEN      EMRVISA1,"emrvisaf"
.                                 
          DISPLAY   *P64:24,"emricdaf";
          OPEN      EMRICDA4,"emricdaf"
.                                 
          DISPLAY   *P64:24,"aaede1af";
          OPEN      AAEDE1A1,"aaede1af"
.                       
          DISPLAY   *P64:24,"aaedi1af";
          OPEN      AAEDI1A1,"aaedi1af"
.                                                * Visit Diagnosis details
          DISPLAY   *P64:24,"viscmtaf";
          OPEN      VISCMTA1,"viscmtaf"
.                                                * Visit Diagnosis details
          DISPLAY   *P64:24,"emrvcdaf";
          OPEN      EMRVCDA1,"emrvcdaf"
.                                                * Visit Diagnosis details
          DISPLAY   *P64:24,"emrvdgaf";
          OPEN      EMRVDGA1,"emrvdgaf"
.                                                * Visit Procedures details
          DISPLAY   *P64:24,"emrvpraf";
          OPEN      EMRVPRA1,"emrvpraf"
.                                                * Emergency Procedure Codes
          DISPLAY   *P64:24,"emrproaf";
          OPEN      EMRPROA1,"emrproaf"
.                                                * Codes Table
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA1,"patvisaf"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P64:24,"emrvdgaf";
          OPEN      EMRVDGA1,"emrvdgaf"
.                                                * Visit Procedures details
          DISPLAY   *P64:24,"emrvpraf";
          OPEN      EMRVPRA1,"emrvpraf"
.                                                * Emergency Procedure Codes
          DISPLAY   *P64:24,"emrproaf";
          OPEN      EMRPROA1,"emrproaf"
.
          DISPLAY   *P64:24,"ibapostf";
          OPEN      IBAPOST1,"ibapostf"
.                                                * Codes Table
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA1,"patvisaf"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          READ      CONTROLF,EIGHTY9;*102,EMCNUDFA,*104,EMCNUDFB,*106,EMCNUDFC:
                                     *108,EMCNUDDA,*110,EMCNUDTA,*112,EMCNUDFD:
                                     *114,EMCNUDFE,*116,EMCNUDFF,*118,EMCNUDFG:
                                     *120,EMCNUDFH,*122,EMCNUDXA,*124,EMCNUDXB:
                                     *126,EMCNUDFI,*128,EMCNUDFJ,*130,EMCNUDFK
.
OPEN9999  RETURN
+
.**************************************************************************
.*                               PROC0000              Called by: ML0000  *
.*                     Process the conversion files                       *
.**************************************************************************
.
.
PROC0000  CLOCK     TIME,CTIMEIS
          MOVE      ZERO,CPAGENO
          MOVE      "100",CLNO              * Force 1st page Heading
          MOVE      ONE,CNOUNDLN
          MOVE      ZERO,COUNTIN                                       *I-90201
          MOVE      ZERO,COUNTERR                                      *I-90201
          MOVE      ZERO,COUNTREJ                                      *I-90201
          MOVE      ZERO,COUNTVUP                                      *I-90201
          MOVE      ZERO,COUNTVWR                                      *I-90201
          MOVE      ZERO,COUNTGWR                                      *I-90201
          MOVE      ZERO,COUNTRWR                                      *I-90201
.
          MOVE      ONE,COUNT
          DISPLAY   *P1:14,"* Processing ",*V2LON,"convvemd.txt ",*HOFF," *":
                    *P1:16,"Started : ",*V2LON,CTIMEIS,*HOFF:
                    *P1:18,"Visit No.  : ":
                    *P1:19,"U/R Number : ":
                    *P1:20,"Visit Type : ":
                    *P1:21,*EL,"Records    : ";

PROC1000  MOVE      ZERO,OVRCD
          MOVE      ZERO,DATAERR                                       *I-90202
          TRAP      FERR0000 IF FORMAT                                 *I-90202
.
          READ      VEMDPD,SEQ;XESTID,XVISTNUM,XPATNTID,XMEDINUM,XMEDICOD:
                               XDVANUM:                                *I-90203
                               XPATSEX,XBRTHDAT,XBPLACE,XABORIG,XPRELANG:
                               XSUBURB,XPOSTCOD,XARRMODE,XREFDBY,XTSOURCE:
                               XVISTYP,XCOMPST,XAMBCASE,XARRDATE,XARRTIME:
                               XTRIDATE,XTRITIME,XTRIGCAT,XNURSDAT,XNURSTIM:
                               XDOCTDAT,XDOCTTIM,XPROCDUR:
                               XRIBRQST,XRIBRQDT,XRIBRQTM:             *I-90203
                               XDEPDATE,XDEPTIME:
                               XDEPSTAT,XTDESTN,XREFDEPT:
                               XTCARECM,XTREASON,XESCORT:              *C-90203
                               XDEPTMOD,XPRIDIAG,XADDIAG1,XADDIAG2:    *C-90203
                               XINJURY,XBREGION:
                               XINJEVNT,XINJCAUS,XHINTENT,XINJPLAC,XINJACTV
.
          TRAPCLR   FORMAT                                             *I-90202
          GOTO      PROC9999 IF OVER        * Check for EOF
          BRANCH    DATAERR,PROC1000        * Get next record          *I-90202
.
          SQUEEZE   XVISTNUM                                           *I-90203
          TYPE      XVISTNUM
          IF        @EQUAL
            MOVE      XVISTNUM,FORM8          * Strip leading zeros by 
            MOVE      FORM8,XVISTNO           * moving to FORM8 and back
          ELSE
            MOVE      XVISTNUM,XVISTNO 
            RJUSTIFY  XVISTNO
          ENDIF
.
          ADD       ONE,COUNTIN                                        *I-90201
          ADD       ONE,COUNT
          ASSIGN    COUNT % 100,DISPVAR
          IF        DISPVAR = 0
            DISPLAY   *P14:18,*V2LON,XVISTNO:
                      *P14:19,*V2LON,XPATNTID:
.                     *P14:20,*V2LON,XVISTYP:
                      *P14:21,COUNT;
          ENDIF
.
. ------------------------------------------- Start processing the input record
.
.                                           * reformat dates (from ddmmccyy)
          CALL      RFDT0000
.
          MOVE      XVISTNO,KEY8
          CALL      RDEMVIS1                * Check against Visit Master
          IF        OVRCD = 0
            MOVE      ONE,UPDTVIS
          ELSE
            MOVE      ZERO,UPDTVIS
            CALL      CLDF0000              * Clear the Visit record
          ENDIF
.
          MOVE      XVISTNO,EMVIADMN
          UNPACK    XPATNTID,CH02,XPURNO
.
. ------------------                        * Check U/R Number 
          MATCH     SP10,XPATNTID
          IF        @EQUAL
            MOVE      "No U/R Number - Record ignored",PRTPT2
            CALL      PRNT0000
            ADD       ONE,COUNTREJ                                     *I-90201
            GOTO      PROC1000
          ENDIF
          MOVE      XPURNO,KEY8
          CALL      RDMAST1
          IF        OVRCD = 1
            MOVE      "U/R Number not found - Record ignored",PRTPT2
            CALL      PRNT0000
            ADD       ONE,COUNTREJ                                     *I-90201
            GOTO      PROC1000
          ENDIF
.
          MOVE      XPURNO,EMVIURNO
.
. ------------------                        * Translate HCS Transport mode
          MOVE      ZERO,WFLDNO             * 0=SCOD,1=DC1,2=DC2,3=DC3,4=DC4 etc
          PACK      WTESTCD,XARRMODE,SP4
          MOVE      CODEEA,CATEGORY         * Arrival Mode - Categ EA
          MOVE      SP10,WCOMM                                         
          CALL      CODE0000
          MOVE      WACODE,EMVIMODE
. ------------------                        * Translate HCS Referred by   
          MOVE      ZERO,WFLDNO
          PACK      WTESTCD,XREFDBY,SP4
          MOVE      CATEM,CATEGORY          * Referred By - Categ EM
          CALL      CODE0000
          MOVE      WACODE,EMVIUC21
. ------------------                        * Transfer Source
          MOVE      XTSOURCE,EMVITSRC
. ------------------                        * Translate Type of Visit
          MOVE      ZERO,WFLDNO             * 0=SCOD,1=DC1,2=DC2,3=DC3,4=DC4 etc
          PACK      WTESTCD,XVISTYP,SP4
          MOVE      CATEE,CATEGORY
          CALL      CODE0000
          MOVE      WACODE,EMVIUC13
. ------------------                        * Translate Compensable Status 
          MOVE      ZERO,WFLDNO             * 0=SCOD,1=DC1,2=DC2,3=DC3,4=DC4 etc
          PACK      WTESTCD,XCOMPST,SP4
          MOVE      CODECL,CATEGORY         * Referred By - Categ CL
          CALL      CODE0000
          MOVE      WACODE,EMVICOMP
. ------------------
          MOVE      XAMBCASE,EMVIAMBL       * Ambulance Case no.
          MOVE      XARRDATE,EMVIDATE       * Arrival date
          MATCH     SP4,XARRTIME
          IF        @EQUAL
            MOVE      "00:00:00",EMVITIME
          ELSE
            UNPACK    XARRTIME,HRS,MIN
            PACK      EMVITIME,HRS,COLON,MIN,SECS
          ENDIF
. ------------------                        * Triage date
          PACK      EMVITRDT,XTRIDATE
. ------------------                        * Triage time
          MATCH     SP4,XTRITIME
          IF        @EQUAL
            MOVE      "00:00:00",EMVITRTM
          ELSE
            UNPACK    XTRITIME,HRS,MIN
            PACK      EMVITRTM,HRS,COLON,MIN,SECS
          ENDIF
. ------------------                        * Triage category   
          MOVE      ONE,WFLDNO              * 0=SCOD,1=DC1,2=DC2,3=DC3,4=DC4 etc
          PACK      WTESTCD,XTRIGCAT,SP4
          MOVE      CODEAA,CATEGORY         * Triage Category - Categ AA
          CALL      CODE0000
          MOVE      WACODE,EMVITRIG
. ------------------                        * Seen by Nurse Date & Time
          MOVE      XNURSDAT,EMVINSDT
          MATCH     SP4,XNURSTIM
          IF        @EQUAL
            MOVE      "00:00:00",EMVINSTM
          ELSE
            UNPACK    XNURSTIM,HRS,MIN
            PACK      EMVINSTM,HRS,COLON,MIN,SECS
          ENDIF
. ------------------                        * Seen by Doctor Date & Time
          MOVE      XDOCTDAT,EMVIDRDT
          MATCH     SP4,XDOCTTIM
          IF        @EQUAL
            MOVE      "00:00:00",EMVINSTM
          ELSE
            UNPACK    XDOCTTIM,HRS,MIN
            PACK      EMVIDRTM,HRS,COLON,MIN,SECS
          ENDIF
. ------------------                        * Procedures 
. ------------------------------------------- start of addition         I-90203
          IF        UPDTVIS=0
            CALL      EXDP0000                * extract the multiple procedures
            MOVE      ZERO,DONE
            REPEAT
              ADD       ONE,DONE
              MOVE      PROCCD[DONE],WPROCDUR
              CALL      FNDP0000              * translate procedure & write
            UNTIL     DONE=PROCNO
          ENDIF
. ------------------------------------------- start of addition         I-90203
. ------------------                        * Departure Date & Time 
          MOVE      XDEPDATE,EMVIDDAT
          MATCH     SP4,XDEPTIME
          IF        @EQUAL
            MOVE      "00:00:00",EMVIDTIM
          ELSE
            UNPACK    XDEPTIME,HRS,MIN
            PACK      EMVIDTIM,HRS,COLON,MIN,SECS
          ENDIF
.
. ------------------                        * Bed Request            
          MOVE      XRIBRQDT,EMVIUD03
          MATCH     SP4,XRIBRQTM
          IF        @EQUAL
            MOVE      "00:00:00",EMVIUT03
          ELSE
            UNPACK    XRIBRQTM,HRS,MIN
            PACK      EMVIUT03,HRS,COLON,MIN,SECS
          ENDIF
. ------------------                        * Departure Destination
          MOVE      TWO,WFLDNO              * 0=SCOD,1=DC1,2=DC2,3=DC3,4=DC4 etc
          PACK      WTESTCD,XDEPSTAT,SP4
          MOVE      CODEED,CATEGORY         * Departure Dest (categ ED)
          CALL      CODE0000
          MOVE      WACODE,EMVIDSTA
. ------------------
          MOVE      XTDESTN,EMVIDEST
. ------------------                        * Referred to on Departure       
          MOVE      ZERO,WFLDNO             * 0=SCOD,1=DC1,2=DC2,3=DC3,4=DC4 etc
          PACK      WTESTCD,XREFDEPT,SP4
          MOVE      CATEC,CATEGORY       
          CALL      CODE0000
          MOVE      WACODE,EMVIUC11
. ------------------                        * Ongoing Care
          MOVE      XTCARECM,EMVIYN10
. ------------------                        * Reason for Transfer            
          MOVE      ZERO,WFLDNO             * 0=SCOD,1=DC1,2=DC2,3=DC3,4=DC4 etc
          PACK      WTESTCD,XTREASON,SP4
          MOVE      CATED,CATEGORY       
          CALL      CODE0000
          MOVE      WACODE,EMVIUC12
. ------------------                        * Escort Service                 
          MOVE      ZERO,WFLDNO             * 0=SCOD,1=DC1,2=DC2,3=DC3,4=DC4 etc
          PACK      WTESTCD,XESCORT,SP4
          MOVE      CATEB,CATEGORY       
          CALL      CODE0000
          MOVE      WACODE,EMVIUC10
. ------------------                        * Departure Transport Mode       
          MOVE      ZERO,WFLDNO             * 0=SCOD,1=DC1,2=DC2,3=DC3,4=DC4 etc
          PACK      WTESTCD,XDEPTMOD,SP4
          MOVE      CATEA,CATEGORY       
          CALL      CODE0000
          MOVE      WACODE,EMVIUC09
. ------------------                        * Primary ED diagnosis
          CALL      FNDD0000
. ------------------                        * Nature of main injury          
          MOVE      ZERO,WFLDNO             * 0=SCOD,1=DC1,2=DC2,3=DC3,4=DC4 etc
          PACK      WTESTCD,XINJURY,SP4
          MOVE      CATEX,CATEGORY       
          CALL      CODE0000
          MOVE      WACODE,EMVINATI
. ------------------                        * Body region
          MOVE      XBREGION,EMVIREGN          
. ------------------                        * Description of injury event    
          UNPACK    XINJEVNT,INJ01,INJ02          
          STORE     INJ01,EMCNUDXA,EMVITXT1,EMVITXT2,EMVITXT3,EMVITXT4:
                          EMVITXT5
          STORE     INJ02,EMCNUDXB,EMVITXT1,EMVITXT2,EMVITXT3,EMVITXT4:
                          EMVITXT5
. ------------------                        * Injury Cause
          MOVE      ZERO,WFLDNO             * 0=SCOD,1=DC1,2=DC2,3=DC3,4=DC4 etc
          PACK      WTESTCD,XINJCAUS,SP4
          MOVE      CATSEY,CATEGORY         * code ey      
          CALL      CODE0000
          MOVE      WACODE,EMVIINJC
. ------------------                        * Human Intent
          MOVE      ZERO,WFLDNO             * 0=SCOD,1=DC1,2=DC2,3=DC3,4=DC4 etc
          PACK      WTESTCD,XHINTENT,SP4
          MOVE      CATSEZ,CATEGORY         * Code ez 
          CALL      CODE0000
          MOVE      WACODE,EMVIHUMI
. ------------------                        * type of place where Injury occured
          MOVE      TWO,WFLDNO              * 0=SCOD,1=DC1,2=DC2,3=DC3,4=DC4 etc
          PACK      WTESTCD,XINJPLAC,SP4
          MOVE      CODEAP,CATEGORY         *  - Categ AP
          CALL      CODE0000
          MOVE      WACODE,EMVIPLIN
. ------------------                        * activity when injured             
          MOVE      ZERO,WFLDNO             * 0=SCOD,1=DC1,2=DC2,3=DC3,4=DC4 etc
          MATCH     "0",XINJACTV            * get around EOF problem
          IF        @LESS
            MOVE      SP1,XINJACTV
          ENDIF
          PACK      WTESTCD,XINJACTV,SP4
          MOVE      CATEY,CATEGORY          * Code EY  
          CALL      CODE0000
          MOVE      WACODE,EMVIACTI
. ------------------                        * Update the "sent" flag and write
          MOVE      ANSY,EMVISENT
          MOVE      THREE,EMVISTAT
.
          MATCH     SP70,EMVIURNO   
          IF        !@EQUAL
            PACK      KEY8,EMVIADMN,SP70
            CALL      RAPTVIS1 
            COMPARE   ZERO,OVRCD
            IF        !@EQUAL
              MOVE      EMVIURNO,PVIURNO  
              MOVE      EMVITRDT,PVIDATE     *  DATE OF VISIT  CCYYMMDD
              MOVE      EMVIADMN,PVIBILL     *  A&E NUMBER (ACCIDENT & EMRG)
              MOVE      ONE,PVITYPE          *  EMRG Record 
              PACK      KEY8,EMVIADMN,SP70
              CALL      WRPTVIS1             *  Write the visit record          
.
              MOVE      EMVIADMN,PMVXVISN
              MOVE      EMVITRDT,PMVXVSDT
              PACK      PMVXCDTE,CCC,CYY,CMM,CDD
              REP       " 0",PMVXCDTE           * Date
              CLOCK     TIME,PMVXCTIM

              MOVE      EMVIDOCT,PMVXDOCA
              MOVE      SP70,PMVXWEBC
              MOVE      SP20,PMVXSPAR
              MOVE      PPOST,PMVXPOST
              MOVE      SP70,PMVXPOEC
              MOVE      SP70,PMVXPGID
              MOVE      SP70,PMVXPILC
.
              MOVE      PPOST,D8
              SQUEEZE   D8
              MOVE      D8,F4
              MOVE      F4,D4
              REP       " 0",D4
              PACK      PPOST,D4,SP4
              PACK      KEY56,PPOST,PSUBRB,SP10,PADD4,SP70            *C-240184
              CALL      RDIBPOS1
              IF        OVRCD=0
                MOVE      IBPOASGC,PMVXASGC
              ELSE                                                    *I-240184
                MOVE      SP10,PMVXASGC
                PACK      KEY56,PPOST,PSUBRB,SP70
                CALL      RSIBPOS1
                CALL      RKIBPOS1
                BRANCH    OVRCD,PROC6000
                MATCH     PPOST,IBPOPCOD
                IF        @EQUAL
                  MATCH     PSUBRB,IBPOSUBR
                  IF        @EQUAL
                    MOVE      IBPOASGC,PMVXASGC
                  ENDIF
                ENDIF
              ENDIF                                            * end  *I-240184
.
PROC6000      MOVE      PMVXVISN,KEY8
              CALL      RAPMVX11
              IF        OVRCD=1
                CALL      WRPMVX11              * write visit extension record
              ELSE
                CALL      UPPMVX11
              ENDIF
            ENDIF
          ENDIF
.
          IF        UPDTVIS = 0
            CALL      WREMVIS1
            MOVE      EMVIADMN,ADANUMB
            PACK      KEY8,ADANUMB,SP70
            CALL      RDADETA1
            IF        OVRCD=1
              CALL      WRDETA1
            ENDIF
            MOVE      EMVIADMN,ADSNUMB
            PACK      KEY8,ADSNUMB,SP70
            PACK      ADSDIAG,SPRIMARY,SP70
            CALL      RDADISA1
            IF        OVRCD=1
              CALL      WRDISA1
            ENDIF
            ADD       ONE,COUNTVWR                                     *I-90201
          ELSE
            CALL      UPEMVIS1
            MOVE      EMVIADMN,ADANUMB
            PACK      KEY8,ADANUMB,SP70
            CALL      RDADETA1
            IF        OVRCD=1
              CALL      WRDETA1
            ENDIF
            MOVE      EMVIADMN,ADSNUMB
            PACK      KEY8,ADSNUMB,SP70
            PACK      ADSDIAG,SPRIMARY,SP70
            CALL      RDADISA1
            IF        OVRCD=1
              CALL      WRDISA1
            ENDIF
            ADD       ONE,COUNTVUP                                     *I-90201
          ENDIF
.
          MATCH     SP70,INJ01
          GOTO      PROC1000 IF EQUAL
.
          MOVE      EMVIADMN,VSCTVIST
          MOVE      "002",VSCTTYPE
          MOVE      "  1",VSCTLINE
          MOVE      INJ01,VSCTDATA
          PACK      KEY14,VSCTVIST,VSCTTYPE,VSCTLINE,SP70
          CALL      RAVSCMT1
          IF        OVRCD=1
            CALL      WRVSCMT1
          ELSE
            CALL      UPVSCMT1
          ENDIF
.
          MATCH     SP70,INJ02
          GOTO      PROC1000 IF EQUAL
.
          MOVE      EMVIADMN,VSCTVIST
          MOVE      "002",VSCTTYPE
          MOVE      "  2",VSCTLINE
          MOVE      INJ02,VSCTDATA
          PACK      KEY14,VSCTVIST,VSCTTYPE,VSCTLINE,SP70
          CALL      RAVSCMT1
          IF        OVRCD=1
            CALL      WRVSCMT1
          ELSE
            CALL      UPVSCMT1
          ENDIF
.
          GOTO      PROC1000

.
PROC9999  MOVE      ZERO,OVRCD
.
          PRINT     *1,"| ",*13,"| ",*26,"| ",*132,"|":
                    *N,*1,"| ",*13,"| ",*26,"| ",*50,COUNTIN:
                    " 'convvemd.txt' records read",*132,"|":
                    *N,*1,"| ",*13,"| ",*26,"| ",*50,COUNTERR:
                    " errors detected",*132,"|":
                    *N,*1,"| ",*13,"| ",*26,"| ",*50,COUNTREJ:
                    " records rejected",*132,"|":
                    *N,*1,"| ",*13,"| ",*26,"| ",*50,COUNTVWR:
                    " Emergency Visit records created",*132,"|":
                    *N,*1,"| ",*13,"| ",*26,"| ",*50,COUNTVUP:
                    " Emergency Visit records updated",*132,"|":
                    *N,*1,"| ",*13,"| ",*26,"| ",*50,COUNTGWR:
                    " Diagnosis Details created",*132,"|":
                    *N,*1,"| ",*13,"| ",*26,"| ",*50,COUNTRWR:
                    " Procedure Details created",*132,"|"
.
          CLOCK     TIME,CTIMEIS
          CALL      UND132
          PRINT     *N,*N,"**** End of Report ****";
.
          DISPLAY   *P20:21,*V2LON,COUNT;
          KEYIN     *P40:16,"Finished : ",*V2LON,*DV,CTIMEIS:
                    *P1:24,*EL,*HOFF,"No more records.  Tap ",*V2LON,"<ENTER>":
                    *HOFF," to exit ... ",*EOFF,ANS;
          RETURN
.****************************************************************************
.*                        CLDF0000                     Called by: GPMI0000  *
.*             Clear EMRVISFD Items which are not defaulted for a followup  *
.****************************************************************************
.
CLDF0000  PACK      EMVIDATE,SP10
          PACK      EMVITIME,SP10
          PACK      EMVITRIG,SP10
          PACK      EMVILOCN,SP10
          PACK      EMVIDOCT,SP10
          CLEAR     EMVIADMT
          CLEAR     EMVIDURN
          PACK      EMVIWAIT,SP10
          PACK      EMVIPREV,SP10
          PACK      EMVIDDAT,SP10
          PACK      EMVIDTIM,SP10
          PACK      EMVIOPR1,SP10
          PACK      EMVIOPR2,SP10
          PACK      EMVIELAP,SP10
          PACK      EMVINSDT,SP10
          PACK      EMVINSTM,SP10
          PACK      EMVIDRDT,SP10
          PACK      EMVIDRTM,SP10
          PACK      EMVITSRC,SP10
          MOVE      SP5,EMVIDEST
          PACK      EMVIAMBL,SP10
          PACK      EMVISENT,SP10
          MOVE      SP8,EMVIUD01
          MOVE      SP8,EMVIUD02
          MOVE      SP8,EMVIUD03
          MOVE      SP8,EMVIUD04
          MOVE      SP8,EMVIUD05
          MOVE      SP8,EMVIUD06
          MOVE      SP8,EMVIUD07
          MOVE      SP8,EMVIUD08
          MOVE      SP8,EMVIUD09
          MOVE      SP8,EMVIUD10
          MOVE      SP8,EMVIUT01
          MOVE      SP8,EMVIUT02
          MOVE      SP8,EMVIUT03
          MOVE      SP8,EMVIUT04
          MOVE      SP8,EMVIUT05
          MOVE      SP8,EMVIUT06
          MOVE      SP8,EMVIUT07
          MOVE      SP8,EMVIUT08
          MOVE      SP8,EMVIUT09
          MOVE      SP8,EMVIUT10
          MOVE      ZERO,EMVIYN01
          MOVE      ZERO,EMVIYN02
          MOVE      ZERO,EMVIYN03
          MOVE      ZERO,EMVIYN04
          MOVE      ZERO,EMVIYN05
          MOVE      ZERO,EMVIYN06
          MOVE      ZERO,EMVIYN07
          MOVE      ZERO,EMVIYN08
          MOVE      ZERO,EMVIYN09
          MOVE      ZERO,EMVIYN10
          PACK      EMVITXT1,SP30,SP20
          PACK      EMVITXT2,SP30,SP20
          PACK      EMVITXT4,SP30,SP20
          PACK      EMVITXT5,SP30,SP20
          MOVE      ZERO,EMVIUN01
          MOVE      ZERO,EMVIUN02
          MOVE      ZERO,EMVIUN03
          MOVE      ZERO,EMVIUN04
          MOVE      ZERO,EMVIUN05
          MOVE      SP6,EMVIUR01
          MOVE      SP6,EMVIUR02
          MOVE      SP6,EMVIUR03
          MOVE      SP6,EMVIUR04
          MOVE      SP6,EMVIUR05
.
CLDF9999  RETURN
+
.**************************************************************************
.*                               CODE0000              Called by: PROC0000*
.*              Read PATCODES to translate a HCS Code back to System code *
.**************************************************************************
.
CODE0000  MOVE      SP4,WACODE                                   
          MATCH     SP4,WTESTCD             * Don't go any further if blanK
          GOTO      CODE9999 IF EQUAL
.
          PACK      KEY5,CATEGORY,SP5
          CALL      RDSCODE1                * Read for Position
.
CODE1000  CALL      RDKCODE1
          BRANCH    OVRCD,CODE5000
.
          MATCH     CATEGORY,TCODE          * Have I used them all up?
          GOTO      CODE5000 IF NOT EQUAL
.                                           * Now test the required field
          PACK      WTHISCD,SP70
.
          LOAD      WTHISCD,WFLDNO,TCINDC1,TCINDC2,TCINDC3,TCINDC4:
                                   TCINDC5,TCFORM6
.         
          IF        WFLDNO=0
            PACK      WTHISCD,THCSCOD,SP4     
          ENDIF
.
          MATCH     WTESTCD,WTHISCD 
          IF        @EQUAL
            MOVE      ACODE,WACODE
            GOTO      CODE9999
          ENDIF
.
          GOTO      CODE1000
.
CODE5000  PACK      PRTPT2,MSG01,WTESTCD,MSG02,CATEGORY,SP1,WCOMM
          CALL      PRNT0000
.
CODE9999  MOVE      SP10,WCOMM                                         
          RETURN
+
.****************************************************************************
.*                             GCAT0000               Called by: PROC0000   *
.*        Get the category for the UDF and load value into relavent field   *
.*        (Cloned from IBAEMR10.PBL and functionality reversed)             *
.* Requires : CATEGORY  - category for patcodes                             *
.* Returns  : DIM3 - code for patcodes                                      *
.*            EXIT - 0 = valid code found                                   *
.*                   1 = no code found                                      *
.****************************************************************************
.
.         Load each user defined category from 1 - 30 until we find 
.         the matching category for this field
.
GCAT0000  MOVE      ZERO,COUNTR                  * initialise counter
          WHILE     COUNTR < 32
            ADD       ONE,COUNTR                 * increment counter
            LOAD      CODE,COUNTR,CODEA1,CODEA2,CODEA3,CODEA4,CODEA5:
                                  CODEA6,CODEA7,CODEA8,CATEA,CATEB:
                                  CATEC,CATED,CATEE,CATEF,CATEG:
                                  CATEH,CATEI,CATEJ,CATEK,CATEL:
                                  CATEM,CATEN,CATEO,CATEP,CATEQ:
                                  CATER,CATES,CATET,CATEU,CATEV:
                                  CATEX,CATEX
.
            MATCH     CODE,CATEGORY              * same category ?
            GOTO      GCAT2000 IF EQUAL          * yes
          DO
.                                           * Category not found (No User Area)
GCAT1000  PACK      PRTPT2,MSG03,CATEGORY
          CALL      PRNT0000
          GOTO      GCAT9999
.
.                                           We have found the number of the UDF,
.                                           so store the translated HCS code
.
GCAT2000  STORE     WACODE,COUNTR,EMVIUC01,EMVIUC02,EMVIUC03,EMVIUC04:
                                  EMVIUC05,EMVIUC06,EMVIUC07,EMVIUC08:
                                  EMVIUC09,EMVIUC10,EMVIUC11,EMVIUC12:
                                  EMVIUC13,EMVIUC14,EMVIACTI,EMVIUC16:
                                  EMVIUC17,EMVIUC18,EMVIUC19,EMVIUC20:
                                  EMVIUC21,EMVIUC22,EMVIUC23,EMVIUC24:
                                  EMVIUC25,EMVIUC26,EMVIUC27,EMVIUC28:
                                  EMVIUC29,EMVIUC30,EMVINATI,CODE
.
GCAT9999  RETURN
+
.******************************************************************************
.*                                     FNDD0000                               *
.*                            Translate Diagnosis Details                     *
.******************************************************************************
FNDD0000  MOVE      "005",EMVCTYPE
          MOVE      FIVE,EMVCCSYS
          MOVE      ONE,EMVCEFLG
          MOVE      SP70,VEMDCODE
          MOVE      SP70,SPRIMARY
          MATCH     SP70,XPRIDIAG
          GOTO      FNDD9999 IF EQUAL
          MOVE      XPRIDIAG,VEMDCODE
          CALL      GETDC000               * Get diagnosis code
          BRANCH    EXIT,FNDD9000
          MOVE      EMIC9COD,EMVCMNCD
          MOVE      EMIC9COD,SPRIMARY
          MOVE      "000",EMVCUNIQ
          MOVE      "000",EMVCSEQU
          CALL      WRDIAG00
.                                           * Additional Diagnosis 1
          MATCH     SP6,XADDIAG1                                       *C-90203
          GOTO      FNDD9999 IF EQUAL
          MOVE      XADDIAG1,VEMDCODE
          CALL      GETDC000               * Get diagnosis code
          BRANCH    EXIT,FNDD9000
          MOVE      EMIC9COD,EMVCMNCD
          MOVE      "001",EMVCUNIQ
          CALL      WRDIAG00
.         
          MATCH     SP6,XADDIAG2       
          GOTO      FNDD9999 IF EQUAL
          MOVE      XADDIAG2,VEMDCODE
          CALL      GETDC000               * Get diagnosis code
          BRANCH    EXIT,FNDD9000
          MOVE      EMIC9COD,EMVCMNCD
          MOVE      "002",EMVCUNIQ
          CALL      WRDIAG00
.
          GOTO      FNDD9999
.
FNDD9000  PACK      PRTPT2,INVDIAG,VEMDCODE,SP70
          CALL      PRNT0000
          ADD       ONE,COUNTREJ       
.
FNDD9999  RETURN
+
.******************************************************************************
.*                                     GETDC000                               *
.*                            Get Diagnosis Code                              *
.******************************************************************************
GETDC000  MOVE      ZERO,EXIT
          PACK      KEY18,VEMDCODE,SP70
          CALL      RSEMICD4
          CALL      RKEMICD4
          BRANCH    OVRCD,GETDC990
.
          MATCH     VEMDCODE,EMICVEMD
          GOTO      GETDC999 IF EQUAL
.
GETDC990  MOVE      ONE,EXIT
.
GETDC999  RETURN
.
.******************************************************************************
.*                                     WRDIAG00                               *
.*                            Write Diagnosis Details                         *
.******************************************************************************
.
WRDIAG00  CALL      IBACLOCK
          PACK      EMVCLUDT,CCC,CYY,CMM,CDD  * Last update date
          REP       " 0",EMVCLUDT
          PACK      EMVCLUTM,CTIMEIS          * last update time
          PACK      EMVCCDAT,CCC,CYY,CMM,CDD  * date created
          REP       " 0",EMVCCDAT
          PACK      EMVCCTIM,CTIMEIS          * time created
.
          MOVE      EMVIADMN,EMVCVIST
          MOVE      "005",EMVCTYPE
          MOVE      FIVE,EMVCCSYS
          MOVE      SP70,EMVCDATE
          MOVE      SP70,EMVCTIME
          MOVE      SP70,EMVCUDC1
          MOVE      SP70,EMVCUDC2
          MOVE      SP70,EMVCUDC3
          MOVE      SP70,EMVCUDC4
          MOVE      SP70,EMVCUDR1
          MOVE      SP70,EMVCUDR2
          MOVE      SP70,EMVCUYN1
          MOVE      SP70,EMVCUYN2
          MOVE      SP70,EMVCUYN3
          MOVE      SP70,EMVCUYN4
          MOVE      ZERO,EMVCUDA1
          MOVE      ZERO,EMVCUDA2
          MOVE      ZERO,EMVCUDA3
          MOVE      ZERO,EMVCUDA4
          MOVE      SP70,EMVCUDD1
          MOVE      SP70,EMVCUDD2
          MOVE      SP70,EMVCUDD3
          MOVE      SP70,EMVCUDD4
          MOVE      SP70,EMVCUDT1
          MOVE      SP70,EMVCUDT2
          MOVE      SP70,EMVCUDT3
          MOVE      SP70,EMVCUDT4
          MOVE      ONE,EMVCEFLG
          MOVE      SP70,EMVCWUSR
          MOVE      SP70,EMVCCUID
          MOVE      SP70,EMVCSUBN
          MOVE      SP70,EMVCEDAD
          MOVE      SP70,EMVCFTXT
.
          PACK      RECORDKY,EMVCVIST,EMVCTYPE,EMVCUNIQ
          PACK      KEY14,RECORDKY,SP70
          CALL      RAEMVCD1
          IF        OVRCD=1
            CALL      WREMVCD1      * Writes away the data
          ENDIF
.              
WRDIAG99  RETURN
.******************************************************************************
.*                                     EXDP0000                               *
.*                     Extract multiple Emergency Procedures                  *
.******************************************************************************
EXDP0000  MOVE      ZERO,PROCNO             * set the counter            
.
EXDP1000  ADD       ONE,PROCNO
          MOVE      SP127,DIM90
          UNPACK    XPROCDUR,PROCCD[PROCNO],DIM1,DIM90
          MATCH     "{",DIM1
          GOTO      EXDP9999 IF NOT EQUAL
.
          PACK      XPROCDUR,DIM90,SP127
          GOTO      EXDP1000
.
EXDP9999  RETURN
+
.******************************************************************************
.*                                     FNDP0000                               *
.*                            Translate Emergency Procedures                  *
.******************************************************************************
FNDP0000  OPEN      EMRPROA1,"emrproaf"     * Position at start of Table
.
          PACK      KEY9,SP70
          CALL      RSEMPRO1
FNDP1000  CALL      RKEMPRO1
          BRANCH    OVRCD,FNDP9000
.
          MATCH     EMPRHDPE,WPROCDUR
          GOTO      FNDP1000 IF NOT EQUAL
.
.                                           * A Valid Procedure Code exists
.                                           * See if Procedure Details exist
.                                           * (No need to Update one)        
          MOVE      "004",EMVCTYPE
          MOVE      FOUR,EMVCCSYS
          MOVE      ONE,EMVCEFLG
.
          PACK      KEY14,EMVIADMN,SP70
          CALL      RSEMVCD1
FNDP2000  CALL      RKEMVCD1
          IF        OVRCD=1
            MOVE      ZERO,SEQFLAG
            GOTO      FNDP3000
          ENDIF
.         
          MATCH     XVISTNO,EMVCVIST
          IF        !@EQUAL
            MOVE      ZERO,SEQFLAG
            GOTO      FNDP3000
          ENDIF
.
          MOVE      ZERO,FORM2
          MOVE      FOUR,FORM2
          COMPARE   EMVCCSYS,FORM2
          IF        @EQUAL
            MOVE      ONE,SEQFLAG
            GOTO      FNDP3000
          ENDIF
.
          GOTO      FNDP2000
.
FNDP3000  MOVE      ONE,COUNTER
          PACK      KEY14,EMVIADMN,ZERO,ZERO,FOUR,Z70
          CALL      RSEMVCD1
          CALL      RPEMVCD1
          BRANCH    OVRCD,FNDP4000
          MATCH     XVISTNO,EMVCVIST
          GOTO      FNDP4000 IF NOT EQUAL
.
          MATCH     EMPRCODE,EMVCMNCD
          GOTO      FNDP9999 IF EQUAL
.
          MOVE      EMVCUNIQ,COUNTER
          ADD       ONE,COUNTER
.
FNDP4000  MOVE      COUNTER,EMVCUNIQ
          REP       " 0",EMVCUNIQ
.
          MOVE      SP70,EMVCWUSR
          MOVE      SP70,EMVCCUID
.
          CALL      IBACLOCK
          PACK      EMVCLUDT,CCC,CYY,CMM,CDD  * Last update date
          REP       " 0",EMVCLUDT
          PACK      EMVCLUTM,CTIMEIS          * last update time
          PACK      EMVCCDAT,CCC,CYY,CMM,CDD  * date created
          REP       " 0",EMVCCDAT
          PACK      EMVCCTIM,CTIMEIS          * time created
.
          MOVE      EMVIADMN,EMVCVIST
          MOVE      "004",EMVCTYPE
          MOVE      FOUR,EMVCCSYS
          MOVE      EMPRCODE,EMVCMNCD
          MOVE      SEQFLAG,EMVCSEQU
          MOVE      SP70,EMVCDATE
          MOVE      SP70,EMVCTIME
          MOVE      SP70,EMVCUDC1
          MOVE      SP70,EMVCUDC2
          MOVE      SP70,EMVCUDC3
          MOVE      SP70,EMVCUDC4
          MOVE      SP70,EMVCUDR1
          MOVE      SP70,EMVCUDR2
          MOVE      SP70,EMVCUYN1
          MOVE      SP70,EMVCUYN2
          MOVE      SP70,EMVCUYN3
          MOVE      SP70,EMVCUYN4
          MOVE      ZERO,EMVCUDA1
          MOVE      ZERO,EMVCUDA2
          MOVE      ZERO,EMVCUDA3
          MOVE      ZERO,EMVCUDA4
          MOVE      SP70,EMVCUDD1
          MOVE      SP70,EMVCUDD2
          MOVE      SP70,EMVCUDD3
          MOVE      SP70,EMVCUDD4
          MOVE      SP70,EMVCUDT1
          MOVE      SP70,EMVCUDT2
          MOVE      SP70,EMVCUDT3
          MOVE      SP70,EMVCUDT4
          MOVE      SP70,EMVCEFLG
          MOVE      SP70,EMVCSUBN
          MOVE      SP70,EMVCEDAD
.
          PACK      RECORDKY,EMVCVIST,EMVCTYPE,EMVCUNIQ
          PACK      KEY14,RECORDKY,SP70
          CALL      RAEMVCD1
          IF        OVRCD=1
            CALL      WREMVCD1      * Writes away the data
          ENDIF
          GOTO      FNDP9999
.
FNDP9000  MOVE      "Procedure Code not Found ",PRTPT2
          ENDSET    PRTPT2
          APPEND    WPROCDUR,PRTPT2
          ENDSET    PRTPT2
          CALL      PRNT0000
.
FNDP9999  RETURN
+
.******************************************************************************
.*                                     RFDT0000                               *
.*                         reformat dates from ddnnccyy                       *
.******************************************************************************
RFDT0000  MOVE      ZERO,OVRCD
.
          UNPACK    XBRTHDAT,WDD,WMM,WCC,WYY
          PACK      XBRTHDAT,WCC,WYY,WMM,WDD
.
          UNPACK    XARRDATE,WDD,WMM,WCC,WYY
          PACK      XARRDATE,WCC,WYY,WMM,WDD
.
          UNPACK    XTRIDATE,WDD,WMM,WCC,WYY
          PACK      XTRIDATE,WCC,WYY,WMM,WDD
.
          MATCH     SP8,XNURSDAT
          IF        @EQUAL
            MOVE      SP8,XNURSDAT
          ELSE
            UNPACK    XNURSDAT,WDD,WMM,WCC,WYY
            PACK      XNURSDAT,WCC,WYY,WMM,WDD
          ENDIF
.
          MATCH     SP8,XDOCTDAT
          IF        @EQUAL
            MOVE      SP8,XDOCTDAT
          ELSE
            UNPACK    XDOCTDAT,WDD,WMM,WCC,WYY
            PACK      XDOCTDAT,WCC,WYY,WMM,WDD
          ENDIF
.
          MATCH     SP8,XRIBRQDT
          IF        @EQUAL
            MOVE      SP8,XRIBRQDT
          ELSE
            UNPACK    XRIBRQDT,WDD,WMM,WCC,WYY
            PACK      XRIBRQDT,WCC,WYY,WMM,WDD
            MOVE      XRIBRQDT,EMVIUD03
            MOVE      XRIBRQTM,EMVIUT03
          ENDIF
.
          UNPACK    XDEPDATE,WDD,WMM,WCC,WYY
          PACK      XDEPDATE,WCC,WYY,WMM,WDD
.
RFDT9999  RETURN
+
.******************************************************************************
.*                                     PRNT0000                               *
.*                                   Print A Line                             *
.******************************************************************************
PRNT0000  ADD       ONE,CLNO
.
          IF        CLNO>=58
            CALL      HEAD0000              * print the page header
          ENDIF
.
          PRINT     *1,"| ",XVISTNO,*13,"| ",XPATNTID,*26,"| ",PRTPT2,*132,"|"
          ADD       ONE,COUNTERR                                       *I-90201
.
PRNT9999  RETURN
+
.******************************************************************************
.*                                     FERR0000                               *
.*                   Print TRAP data errors in "convvemd.txt"                 *
.******************************************************************************
.
FERR0000  MOVE      ONE,DATAERR
          PRINT     *1,"| ",XVISTNO,*13,"| ",XPATNTID,*26,"| ":
                    "Data error occurred in this record - Record No. :":
                    COUNTIN,"   - Record bypassed",*132,"|"
          READ      VEMDPD,SEQ;XESTID       * Bypass rest of record
.
FERR9999  RETURN
+
.******************************************************************************
.*                                    HEAD0000                                *
.*                  Routine to print the error report page header             *
.******************************************************************************
HEAD0000  CALL      HEAD132                 * print the page header
.
          CALL      UND132
          PRINT     *1,"| Visit No. |  U/R No.   | Error Message       ":
                    *132,"|"
          CALL      UND132
.       
          MOVE      ONE,CLNO
.
HEAD9999  RETURN
.
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       EMRPROIO/INC                 * Emergency Procedure codes
          INC       EMRVISIO/INC                 * Visit Details
          INC       EMRICDIO/INC 
          INC       AAEDE1IO/INC                 * Visit Details
          INC       AAEDI1IO/INC                 * Visit Details
          INC       VISCMTIO/INC                 * Visit Comments
          INC       EMRVCDIO/INC                 * Procedure/Diagnosis details
          INC       EMRVDGIO/INC                 * Visit Diagnosis Details
          INC       EMRVPRIO/INC                 * Visit Procedure Details
          INC       IBAPOSIO/INC
          INC       PATCODIO/INC
          INC       PATMA1IO/INC                 * Patient Master
          INC       PATVISIO/INC                 * Patient Visit 
          INC       PMSVX1IO/INC                 * Patient Visit 
          
