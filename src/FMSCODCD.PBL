. ******************************************************************************
. * System    : Standard FMS General Ledger System                             *
. *                                                                            *
. * Program   : FMSCODCD                                                       *
. *                                                                            *
. * Routines  :                                                                *
. *             GSTR         ( get a string of a specified length (up to 35) ) *
. *             AMTD         ( display amount with specified dec places)       *
. *             CFYR         ( Determine Financial Year and Period for a ledger*
. *                          ( Posting Date -                                  *
. *             CDIV         ( perform division (=0 if division by zero))      *
. *                                                                            *
. * Author    : Neeriem Dye (IBA)  10/09/1990                                  *
. *                                                                            *
. ******************************************************************************
. * Mods      :                                                                *
. ******************************************************************************
...............................................................................
.
.*****************************************************************************
. GSTR - get a string of a specified length           Called by lots
.    Requires - CCOL, CVERT  (screen address to get input)
.               CSTRLEN      (string length - up to 35 chars)
.    Returns  - CSTRING      (string entered)
.*****************************************************************************
GSTR0000  STORE     UNDLN70,CSTRLEN,KEY1:
                    KEY2,KEY3,KEY4,KEY5,KEY6,KEY7,KEY8,KEY9,KEY10:
                    KEY11,KEY12,KEY13,KEY14,KEY15,KEY16,KEY17,KEY18,KEY19,KEY20:
                    KEY21,KEY22,KEY23,KEY24,KEY25,KEY26,KEY27,KEY28,KEY29,KEY30:
                    KEY31,KEY32,KEY33,KEY34,KEY35
          BRANCH    CSTRLEN,GSTR0001,GSTR0002,GSTR0003,GSTR0004:
                            GSTR0005,GSTR0006,GSTR0007,GSTR0008:
                            GSTR0009,GSTR0010,GSTR0011,GSTR0012:
                            GSTR0013,GSTR0014,GSTR0015,GSTR0016:
                            GSTR0017,GSTR0018,GSTR0019,GSTR0020:
                            GSTR0021,GSTR0022,GSTR0023,GSTR0024:
                            GSTR0025,GSTR0026,GSTR0027,GSTR0028:
                            GSTR0029,GSTR0030,GSTR0031,GSTR0032:
                            GSTR0033,GSTR0034,GSTR0035
.
GSTR0001  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY1:
                    *PCCOL:CVERT,*V2LON,KEY1; 
          GOTO      GSTR0090
.
GSTR0002  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY2:
                    *PCCOL:CVERT,*V2LON,KEY2; 
          GOTO      GSTR0090
.
GSTR0003  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY3:
                    *PCCOL:CVERT,*V2LON,KEY3; 
          GOTO      GSTR0090
.
GSTR0004  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY4:
                    *PCCOL:CVERT,*V2LON,KEY4; 
          GOTO      GSTR0090
.
GSTR0005  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY5:
                    *PCCOL:CVERT,*V2LON,KEY5; 
          GOTO      GSTR0090
.
GSTR0006  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY6:
                    *PCCOL:CVERT,*V2LON,KEY6; 
          GOTO      GSTR0090
.
GSTR0007  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY7:
                    *PCCOL:CVERT,*V2LON,KEY7; 
          GOTO      GSTR0090
.
GSTR0008  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY8:
                    *PCCOL:CVERT,*V2LON,KEY8; 
          GOTO      GSTR0090
.
GSTR0009  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY9:
                    *PCCOL:CVERT,*V2LON,KEY9; 
          GOTO      GSTR0090
.
GSTR0010  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY10:
                    *PCCOL:CVERT,*V2LON,KEY10; 
          GOTO      GSTR0090
.
GSTR0011  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY11:
                    *PCCOL:CVERT,*V2LON,KEY11; 
          GOTO      GSTR0090
.
GSTR0012  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY12:
                    *PCCOL:CVERT,*V2LON,KEY12; 
          GOTO      GSTR0090
.
GSTR0013  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY13:
                    *PCCOL:CVERT,*V2LON,KEY13; 
          GOTO      GSTR0090
.
GSTR0014  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY14:
                    *PCCOL:CVERT,*V2LON,KEY14; 
          GOTO      GSTR0090
.
GSTR0015  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY15:
                    *PCCOL:CVERT,*V2LON,KEY15; 
          GOTO      GSTR0090
.
GSTR0016  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY16:
                    *PCCOL:CVERT,*V2LON,KEY16; 
          GOTO      GSTR0090
.
GSTR0017  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY17:
                    *PCCOL:CVERT,*V2LON,KEY17; 
          GOTO      GSTR0090
.
GSTR0018  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY18:
                    *PCCOL:CVERT,*V2LON,KEY18; 
          GOTO      GSTR0090
.
GSTR0019  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY19:
                    *PCCOL:CVERT,*V2LON,KEY19; 
          GOTO      GSTR0090
.
GSTR0020  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY20:
                    *PCCOL:CVERT,*V2LON,KEY20; 
          GOTO      GSTR0090
.
GSTR0021  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY21:
                    *PCCOL:CVERT,*V2LON,KEY21; 
          GOTO      GSTR0090
.
GSTR0022  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY22:
                    *PCCOL:CVERT,*V2LON,KEY22; 
          GOTO      GSTR0090
.
GSTR0023  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY23:
                    *PCCOL:CVERT,*V2LON,KEY23; 
          GOTO      GSTR0090
.
GSTR0024  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY24:
                    *PCCOL:CVERT,*V2LON,KEY24; 
          GOTO      GSTR0090
.
GSTR0025  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY25:
                    *PCCOL:CVERT,*V2LON,KEY25; 
          GOTO      GSTR0090
.
GSTR0026  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY26:
                    *PCCOL:CVERT,*V2LON,KEY26; 
          GOTO      GSTR0090
.
GSTR0027  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY27:
                    *PCCOL:CVERT,*V2LON,KEY27; 
          GOTO      GSTR0090
.
GSTR0028  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY28:
                    *PCCOL:CVERT,*V2LON,KEY28; 
          GOTO      GSTR0090
.
GSTR0029  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY29:
                    *PCCOL:CVERT,*V2LON,KEY29; 
          GOTO      GSTR0090
.
GSTR0030  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY30:
                    *PCCOL:CVERT,*V2LON,KEY30; 
          GOTO      GSTR0090
.
GSTR0031  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY31:
                    *PCCOL:CVERT,*V2LON,KEY31; 
          GOTO      GSTR0090
.
GSTR0032  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY32:
                    *PCCOL:CVERT,*V2LON,KEY32; 
          GOTO      GSTR0090
.
GSTR0033  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY33:
                    *PCCOL:CVERT,*V2LON,KEY33; 
          GOTO      GSTR0090
.
GSTR0034  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY34:
                    *PCCOL:CVERT,*V2LON,KEY34; 
          GOTO      GSTR0090
.
GSTR0035  KEYIN     *PCCOL:CVERT,*EL,*DV,KEY35:
                    *PCCOL:CVERT,*V2LON,KEY35; 
          GOTO      GSTR0090
.
GSTR0090  LOAD      CSTRING,CSTRLEN,KEY1:
                    KEY2,KEY3,KEY4,KEY5,KEY6,KEY7,KEY8,KEY9,KEY10:
                    KEY11,KEY12,KEY13,KEY14,KEY15,KEY16,KEY17,KEY18,KEY19,KEY20:
                    KEY21,KEY22,KEY23,KEY24,KEY25,KEY26,KEY27,KEY28,KEY29,KEY30:
                    KEY31,KEY32,KEY33,KEY34,KEY35
          DISPLAY   *PCCOL:CVERT,*V2LON,CSTRING;
.
GSTR9999  RETURN
.******************************************************************************
.* AMTD - Display amount                         Called by lots               *
.*       Requires : DECPLACE      (amount number)                             *
.*                  KAMOUNT       (amount)                                    *
.*                  LINENO,COLNO  (screen address)                            *
.******************************************************************************
AMTD0000  BRANCH    DECPLACE,AMTD0100,AMTD0200,AMTD0300:
                             AMTD0400,AMTD0500,AMTD0600
.
.---- no decimal places ----
.
          MOVE      KAMOUNT,F12
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12;
          GOTO      AMTD9999
.
.---- 1 decimal places ----
.
AMTD0100  MOVE      KAMOUNT,F12P1
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P1;
          GOTO      AMTD9999
.
.---- 2 decimal places ----
.
AMTD0200  MOVE      KAMOUNT,F12P2
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P2;
          GOTO      AMTD9999
.
.---- 3 decimal places ----
.
AMTD0300  MOVE      KAMOUNT,F12P3
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P3;
          GOTO      AMTD9999
.
.---- 4 decimal places ----
.
AMTD0400  MOVE      KAMOUNT,F12P4
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P4;
          GOTO      AMTD9999
.
.---- 5 decimal places ----
.
AMTD0500  MOVE      KAMOUNT,F12P5
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P5;
          GOTO      AMTD9999
.
.---- 6 decimal places ----
.
AMTD0600  MOVE      KAMOUNT,F12P6
          DISPLAY   *PCOLNO:LINENO,*V2LON,F12P6;
          GOTO      AMTD9999
.
AMTD9999  RETURN
.******************************************************************************
.* AMTR - Get amount                             Called by lots               *
.*       Requires : DECPLACE      (decimal places)                            *
.*                  CVERT,CCOL    (screen address)                            *
.*       Returns    KAMOUNT       (amount)                                    *
.******************************************************************************
AMTR0000  BRANCH    DECPLACE,AMTR0100,AMTR0200,AMTR0300:
                             AMTR0400,AMTR0500,AMTR0600
.
.---- no decimal places ----
.
          KEYIN     *PCCOL:CVERT,"____________":
                    *PCCOL:CVERT,*V2LON,F12:
                    *PCCOL:CVERT,*DV,F12;
          MOVE      F12,KAMOUNT
          GOTO      AMTR9999
.
.---- 1 decimal places ----
.
AMTR0100  KEYIN     *PCCOL:CVERT,"____________._":
                    *PCCOL:CVERT,*V2LON,F12P1:
                    *PCCOL:CVERT,*DV,F12P1;
          MOVE      F12P1,KAMOUNT
          GOTO      AMTR9999
.
.---- 2 decimal places ----
.
AMTR0200  KEYIN     *PCCOL:CVERT,"____________.__":
                    *PCCOL:CVERT,*V2LON,F12P2:
                    *PCCOL:CVERT,*DV,F12P2;
          MOVE      F12P2,KAMOUNT
          GOTO      AMTR9999
.
.---- 3 decimal places ----
.
AMTR0300  KEYIN     *PCCOL:CVERT,"____________.___":
                    *PCCOL:CVERT,*V2LON,F12P3:
                    *PCCOL:CVERT,*DV,F12P3;
          MOVE      F12P3,KAMOUNT
          GOTO      AMTR9999
.
.---- 4 decimal places ----
.
AMTR0400  KEYIN     *PCCOL:CVERT,"____________.____":
                    *PCCOL:CVERT,*V2LON,F12P4:
                    *PCCOL:CVERT,*DV,F12P4;
          MOVE      F12P4,KAMOUNT
          GOTO      AMTR9999
.
.---- 5 decimal places ----
.
AMTR0500  KEYIN     *PCCOL:CVERT,"____________._____":
                    *PCCOL:CVERT,*V2LON,F12P5:
                    *PCCOL:CVERT,*DV,F12P5;
          MOVE      F12P5,KAMOUNT
          GOTO      AMTR9999
.
.---- 6 decimal places ----
.
AMTR0600  KEYIN     *PCCOL:CVERT,"____________.______":
                    *PCCOL:CVERT,*V2LON,F12P6:
                    *PCCOL:CVERT,*DV,F12P6;
          MOVE      F12P6,KAMOUNT
          GOTO      AMTR9999
.
AMTR9999  RETURN
.**********************************************************************
.  CDIV - Perform CDIV2=CDIV2/CDIV1 (=0 if CDIV1=0)    Called By lots
.        Requires - CDIV1, CDIV2       ( parameters )
.        Returns  - CDIV2              ( quotient )
.**********************************************************************
CDIV0000  COMPARE   ZERO,CDIV1
          GOTO      CDIV9000 IF EQUAL
.
          DIV       CDIV1,CDIV2
          GOTO      CDIV9999
.
CDIV9000  MOVE      ZERO,CDIV2
.
CDIV9999  RETURN
.
