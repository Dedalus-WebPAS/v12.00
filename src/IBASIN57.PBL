.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.09.01  25.06.2007 Sandra Barcham  123735
.           Added Catalog Contract Price Control
.-------------------------------------------------------
. V9.04.01  08.04.2005 Peter Vela CAR 59696
.           Changed commodity group from DIM 5 to DIM 6
.-------------------------------------------------------
. V9.03.01  10.09.2003 Steve Downing (VF.11.01 9375)
.           Recompiled for SINREBFD & SINREBIO
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.01  20.02.2002 Sai SRF 13486
.           Changed REMOVE00 to decrease the running total when an item is
.           removed.Also CAN20000 has been changed to take care of the running
.           total calculation when coming from Receival Details screen to
.           Receival Summary screen.REOLDQTY variable has been added to keep
.           the old quantity in tact so that on cancel it can be reverted.
. VF.09.B01 02.11.2000 Charles Handaya
.           Recompiled for sincchaf and SINUSAGE change
.           Modification of Warehouse Security
.-------------------------------------------------------
. VF.01.02  18.07.2000 Charles Handaya
.           Omnicell import file - Add Restock ID (SIBARESI, SIBPRESI)
.           Quote 9817
. VF.01.01  10.04.2000 Sandra Barcham
.           Fix Usage Amount for non-stock items
.-------------------------------------------------------
. VF.00.05  05.01.2000 Charles Handaya
.           Recompiled for APSMASIO change
.           22.12.1999 Charles Handaya
.           Recompiled for Fixing Audit Date (CCYYMMDD)
. VF.00.04  02.12.1999 Sandra Barcham
.           Stop backorders issuing more than quantity required
.           srf 636152
. VF.00.03  03.11.1999 Sandra Barcham
.           Change locked message to use X
.           Change isbuild to use uc on temporary file
. VF.00.02  24.04.1999 Sandra Barcham
.           Display & print user defined ref 2 (SIPCUR2) for HSH V6.00.63
.           srf 627759 quote 9231
. VF.00.01  04.03.1999 Sandra Barcham
.           Fix usage keys used in batch screens
.-------------------------------------------------------
CHKITMA1   IFILE    SQL, FIXED=125, KEY="U1-5,6-12,13-20,21-28"
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
CKITWAR   DIM       5      5        1     Warehouse
CKITCAT   DIM       7      7        6     Catalog
CKITDAT   DIM       8      8        13    Date Of Transaction
CKITTIM   DIM       8      8        21    Time
CKITOPR   DIM       4      4        29    Operator ID
CKITPOR   DIM       2      2        33    Port
CKITPRG   DIM       8      8        35    Program ID
CKITPER   DIM       6      6        43    Usage Date YYMM
CKITQTY   FORM      12.2   8        49    Quantity
CKITAMT   FORM      12.2   8        57    Amount of Transaction
CKITTYP   FORM      2      2        65    Transaction Type
CKITCST   DIM       5      5        67    Cost Centre if Required
CKITREQ   DIM       8      8        72    Requisition
CKITPUR   DIM       7      7        80    Purchase Order
CKITREF   DIM       20     20       87    Reference
CKITSOH   DIM       15     15       107   Stock on hand (unknown if blank)
CKITSPA   DIM       3      3        122   Spare
.End of Record                      125
.
CALLPNT   FORM      1
CEAFILE   FORM      1
CMDLINE   DIM       80
F12P4     FORM      12.4
FGRANTOT  FORM      12.2
MODQTY    FORM      12.2
OUTQTY    FORM      12.2
PRTCST    DIM       13
PRTORDT   FORM      12.2
PRTORD    DIM       10
PRTREC    DIM       13
PRTTOT    DIM       15
RECQTY    FORM      12.2
STOCKIG   FORM      1
TMBANAME  DIM       8
TMBANAMA  INIT      "tmpbac"
TOTALEFT  FORM      12.2
REOLDQTY  FORM      12.2
.
. Temporary file for ordering allocation to backorders if recieval is less
. than total on backorder.
TMPBACA1  IFILE     SQL, FIXED=61, KEY="U26-33,21-25,6-12,1-5,13-20"
. The variables from the SINBACFD will be used by the IO routines at the bottom
. of the program.
.-------------------------------------------------------
MYCOL     FORM      2
MYVERT    FORM      2
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASIN57
.   Function      :   Process Receivals                       
.   Generated  On :   16/07/2007
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSCEAFD/INC
          INC       APSCEBFD/INC
          INC       APSCIOFD/INC
          INC       APSMASFD/INC
          INC       APSORDFD/INC
          INC       APSSUBFD/INC
          INC       FMSAMAFD/INC
          INC       FMSCONFD/INC
          INC       FMSCSAFD/INC
          INC       FMSFPSFD/INC
          INC       FMSLMAFD/INC
          INC       FMSLMCDF    
          INC       FMSLMCFD/INC
          INC       FMSTUPFD/INC
          INC       IBAGEDFD/INC
          INC       IBAGSTFD/INC
          INC       SINBACFD/INC
          INC       SINBATFD/INC
          INC       SINBPSFD/INC
          INC       SINCCAFD/INC
          INC       SINCCBFD/INC
          INC       SINCCEFD/INC
          INC       SINCCFFD/INC
          INC       SINCCHFD/INC
          INC       SINCGAFD/INC
          INC       SINCGBFD/INC
          INC       SINCIAFD/INC
          INC       SINCICFD/INC
          INC       SINCIEFD/INC
          INC       SINCIFFD/INC
          INC       SINCIHFD/INC
          INC       SINCIIFD/INC
          INC       SINCODFD/INC
          INC       SINCONFD/INC
          INC       SINFACFD/INC
          INC       SINITMFD/INC
          INC       SINLTTFD/INC
          INC       SINNATFD/INC
          INC       SINORIFD/INC
          INC       SINPERFD/INC
          INC       SINPOAFD/INC
          INC       SINPOBFD/INC
          INC       SINPOCFD/INC
          INC       SINPODFD/INC
          INC       SINPOFFD/INC
          INC       SINRCPFD/INC
          INC       SINREAFD/INC
          INC       SINREBFD/INC
          INC       SINSCFFD/INC
          INC       SINSUAFD/INC
          INC       SINSUBFD/INC
          INC       SINTMPDF/INC
          INC       SINTRNFD/INC
          INC       SINWARFD/INC
          INC       SINWRKDF    
          INC       SINWRKFD/INC
          INC       SINWSEFD/INC
.=========================
.Local Variable Definition
.-------------------------
CONFDESC  DIM      30 * Scr 00 Fld    24
MESSDESC  DIM      30 * Scr 00 Fld    25
.
.Word Processor File * Scr 00 Fld    26
.
NAMSIPB1  INIT      "Wsipb1"
FILSIPB1  DIM       8
.
NOTESIPB  DIM      10 * Scr 00 Fld    29
DELDOCK   DIM      15 * Scr 00 Fld    30
DELDATE   DIM       8 * Scr 00 Fld    31
PARTDEL   FORM      1 * Scr 00 Fld    36
.
.    Multi Item Key Fields Scr 01 Fld     1
.-------------------------------------------------------
SIPF2NAM  INIT      "SIPF2"
SIPF2END  FORM      1   * End Display
SIPF2SNO  FORM      5   * Number of Items on the Screen
SIPF2MKY  DIM       127 * Match Key 
SIPF2EKY  DIM       127 * End Key
SIPF2SKY  DIM       127 * Start Key
SIPF2IDX  INIT      " 132 UC1-5"
SIPF2FL1  IFILE     SQL, FIXED=132, KEY="U1-5"
SIPF2FNM  DIM       8  * Filename
SIPF2CNT  FORM      3  * Number of Items on Screen
WHOLEQTY  FORM     12 * Scr 01 Fld     4
UNITCOST  DIM      14 * Scr 01 Fld     5
TRANCOST  DIM      14 * Scr 01 Fld     7
TRANDESC  DIM      80 * Scr 01 Fld     8
GRANDTOT  DIM      20 * Scr 01 Fld    29
WHOLEOQT  FORM     12 * Scr 02 Fld    20
WHOLERQT  FORM     12 * Scr 02 Fld    21
NEXTDATE  DIM      10 * Scr 02 Fld    22
WHOLETQT  FORM     12 * Scr 02 Fld    31
NOTESIPD  DIM       5 * Scr 02 Fld    33
.
.Word Processor File * Scr 02 Fld    34
.
NAMSIPD1  INIT      "Wsipd1"
FILSIPD1  DIM       8
.
TOTALGST  FORM     12.2 * Scr 02 Fld    40
TOTALCST  FORM     12.2 * Scr 02 Fld    41
.
.    Multi Item Key Fields Scr 03 Fld     1
.-------------------------------------------------------
SIBT1NAM  INIT      "SIBT1"
SIBT1LEN  FORM      "58"
SIBT1IDX  INIT      "DC1-5 UC6-13"
SIBT1FNM  DIM       8  * Filename
SIBT1AFL  FORM      1  * End Accept Mode
SIBT1END  FORM      1  * End Display
SIBT1SNO  FORM      5  * Number of Items on the Screen
SIBT1NXT  DIM         13
SIBT1FL1  IFILE     SQL, FIXED=58,  KEY="D1-5"
SIBT1FL2  IFILE     SQL, FIXED=58, KEY="U6-13"
SIBT1CNT  FORM      3  * Number of Items on Screen
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASIN57"
PRGNAM    INIT      "Process Receivals                       "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      RDCON000
          CALL      SC00L000
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILSIPB1
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     TEMPWORD,DELETE
          ENDIF
          CLOSE     SIPF2FL1,DELETE
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMPWORD,FILSIPD1
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     TEMPWORD,DELETE
          ENDIF
          CLOSE     SIBT1FL2
          CLOSE     SIBT1FL1,DELETE
.
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening apsmasaf";
          OPEN      APSMASA1,"apsmasaf"
          DISPLAY   *P56:24,"Opening apssubaf";
          OPEN      APSSUBA1,"apssubaf"
          DISPLAY   *P56:24,"Opening  sinitmaf           ";
          OPEN      CHKITMA1,"sinitmaf"          
          DISPLAY   *P56:24,"Opening ibagedaf";
          OPEN      IBAGEDA1,"ibagedaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA1,"ibagstaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA2,"ibagstaf"
          DISPLAY   *P56:24,"Opening ibagstaf";
          OPEN      IBAGSTA3,"ibagstaf"
          MOVE      "   24",AUDTSECT
          MOVE      "218",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudpf";
            OPEN      SINAUDPF,"sinaudpf"
          ENDIF
          DISPLAY   *P56:24,"Opening sinbacaf";
          OPEN      SINBACA1,"sinbacaf"
          DISPLAY   *P56:24,"Opening sinbacaf";
          OPEN      SINBACA2,"sinbacaf"
          DISPLAY   *P56:24,"Opening sinbataf";
          OPEN      SINBATA1,"sinbataf"
          DISPLAY   *P56:24,"Opening sinbpsaf";
          OPEN      SINBPSA1,"sinbpsaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA1,"sinccaaf"
          DISPLAY   *P56:24,"Opening sinccbaf";
          OPEN      SINCCBA1,"sinccbaf"
          DISPLAY   *P56:24,"Opening sincceaf";
          OPEN      SINCCEA1,"sincceaf"
          DISPLAY   *P56:24,"Opening sinccfaf";
          OPEN      SINCCFA1,"sinccfaf"
          DISPLAY   *P56:24,"Opening sinccfaf";
          OPEN      SINCCFA2,"sinccfaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA1,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA2,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA3,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA4,"sincchaf"
          DISPLAY   *P56:24,"Opening sincchaf";
          OPEN      SINCCHA5,"sincchaf"
          DISPLAY   *P56:24,"Opening sincgaaf";
          OPEN      SINCGAA1,"sincgaaf"
          DISPLAY   *P56:24,"Opening sincgbaf";
          OPEN      SINCGBA1,"sincgbaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA1,"sinciaaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA1,"sincicaf"
          DISPLAY   *P56:24,"Opening sincicaf";
          OPEN      SINCICA3,"sincicaf"
          DISPLAY   *P56:24,"Opening sincieaf";
          OPEN      SINCIEA1,"sincieaf"
          DISPLAY   *P56:24,"Opening sincihaf";
          OPEN      SINCIHA1,"sincihaf"
          DISPLAY   *P56:24,"Opening sinciiaf";
          OPEN      SINCIIA1,"sinciiaf"
          DISPLAY   *P56:24,"Opening sincodaf";
          OPEN      SINCODA1,"sincodaf"
          DISPLAY   *P56:24,"Opening sinfacaf";
          OPEN      SINFACA1,"sinfacaf"
          DISPLAY   *P56:24,"Opening sinitmaf";
          OPEN      SINITMA1,"sinitmaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA1,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA2,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinlttaf";
          OPEN      SINLTTA3,"sinlttaf"
          DISPLAY   *P56:24,"Opening sinoriaf";
          OPEN      SINORIA1,"sinoriaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA1,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA3,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA4,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpobaf";
          OPEN      SINPOBA1,"sinpobaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA1,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpodaf";
          OPEN      SINPODA1,"sinpodaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA1,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA2,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA3,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinrcpaf";
          OPEN      SINRCPA1,"sinrcpaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA1,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA1,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinscfaf";
          OPEN      SINSCFA1,"sinscfaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA1,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsubaf";
          OPEN      SINSUBA1,"sinsubaf"
          DISPLAY   *P56:24,"Opening sintrnaf";
          OPEN      SINTRNA1,"sintrnaf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA1,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA1,"sinwseaf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA2,"sinwseaf"
.--------------------------------------------------------
. Initialise Wp Filename for Additional Comments (Purchase Head)
.--------------------------------------------------------
          PACK      FILSIPB1,NAMSIPB1,PORT
          REP       " 0",FILSIPB1
          DISPLAY   *P56:24,"Create & Open ",FILSIPB1;
          PREP      TEMPWORD,FILSIPB1
.
.--------------------------------------------------------
. Initialise Batch Screen Item Number                        
.--------------------------------------------------------
          MOVE     ZERO,SIPF2SNO
          MOVE     "01    1",KEY7
          PACK     KEY15,PRGID,KEY7,SP70
          PACK     KEY20,PRGID,KEY7,SP70
          CALL     RSSCPS2
          CALL     RKSCPS2
          IF       OVRCD=0
            PACK     KEY20,SCPSPID,SCPSSID,SCPSITM
            MATCH    KEY15,KEY20
            IF       @EQUAL
              MOVE     SCPSNOR,SIPF2SNO
            ENDIF
          ENDIF
          PACK      SIPF2FNM,ANST,SIPF2NAM,PORT
          REP       " 0",SIPF2FNM
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      SIPF2FL1,SIPF2FNM
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     SIPF2FL1,DELETE
          ENDIF
          PACK      KEY80,SGENISB,SIPF2FNM,SIPF2IDX
          DISPLAY   *P1:3;
          DISPLAY   *P56:24,"Create & Open ",SIPF2FNM;
          EXECUTE   KEY80,TASKID
          OPEN      SIPF2FL1,SIPF2FNM
.--------------------------------------------------------
. Initialise Wp Filename for Notes                              
.--------------------------------------------------------
          PACK      FILSIPD1,NAMSIPD1,PORT
          REP       " 0",FILSIPD1
          DISPLAY   *P56:24,"Create & Open ",FILSIPD1;
          PREP      TEMPWORD,FILSIPD1
.
.--------------------------------------------------------
. Initialise Batch Screen Requisition                        
.--------------------------------------------------------
          MOVE     ZERO,SIBT1SNO
          MOVE     "03    1",KEY7
          PACK     KEY15,PRGID,KEY7,SP70
          PACK     KEY20,PRGID,KEY7,SP70
          CALL     RSSCPS2
          CALL     RKSCPS2
          IF       OVRCD=0
            PACK     KEY20,SCPSPID,SCPSSID,SCPSITM
            MATCH    KEY15,KEY20
            IF       @EQUAL
              MOVE     SCPSNOR,SIBT1SNO
            ENDIF
          ENDIF
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Receival Header Information        
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Receival Summary                   
          ENDIF
          MATCH     "02",SCRID
          IF         @EQUAL
            CALL       PS02L000   * Receival Details                   
          ENDIF
          MATCH     "03",SCRID
          IF         @EQUAL
            CALL       PS03L000   * Back Order Allocation              
          ENDIF
          RETURN
.--------------------------------
. Screen - Receival Header Information        
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   33",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Receival Header Information        
.-------------------------------------------------------
CF00L000
          MOVE      SP70,SIPAPON 
          MOVE      SP70,SIPASUP 
          MOVE      SP70,SIPAORI 
          MOVE      SP70,SIPAICN 
          MOVE      SP70,SIPASCN 
          MOVE      SP70,SIPADEL 
          MOVE      SP70,SIPAMES 
          MOVE      SP70,SIPADIN 
          MOVE      SP70,SIPADPR 
          MOVE      SP70,SIPADCN 
          MOVE      SP70,SIPADCM 
          MOVE      SP70,SIPACON 
          MOVE      SP70,SIPAIDP 
          MOVE      SP70,APMASN1 
          MOVE      SP70,APMASN2 
          MOVE      SP70,APMASA1 
          MOVE      SP70,APMASA2 
          MOVE      SP70,APMASA3 
          MOVE      SP70,APMASPC 
          MOVE      SP70,APMASTEL
          MOVE      SP70,APMASFAX
          MOVE      SP70,APMASCON
          MOVE      SP70,SIORNAME
          MOVE      SP70,CONFDESC
          MOVE      SP70,MESSDESC
          MOVE      SP70,SIPEPER 
          MOVE      SP70,SIPEYEAR
          MOVE      SP70,NOTESIPB
          MOVE      SP70,DELDOCK 
          MOVE      SP70,DELDATE 
          MOVE      ZERO,PARTDEL 
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Receival Header Information        
.--------------------------------------------------------
KY00L000
.
KY00L110
.
.
          MOVE      "   23",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIORNAME
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=1
            MOVE      "Mandatory Field Missing. Fatal - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      FATALERR
          ENDIF
          MOVE      "1",CKEYTYP
          CALL      EPNUM000
          BRANCH    EXIT,KY00L900,KY00L900
          MOVE      ONE,ACCEPT
          MOVE      SIPAPON,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   23",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIORNAME,VAR     
            CALL      DISPITEM
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Receival Header Information        
.---------------------------------------------------------
WP00L000
          PREP     TEMPWORD,FILSIPB1
          PACK     KEY10,SIPAPON,SP70
          MOVE     KEY10,SAVKEY80
          SETLPTR  SAVKEY80,7 
          CALL      RDSIPB1 
          IF        OVRCD=0
            CALL      RPSIPB1 
          ENDIF
WP00L100
          CALL     RKSIPB1 
          BRANCH   OVRCD,WP00L105
          PACK     KEY10,SIPBPON,SIPBLIN
          MATCH    SAVKEY80,KEY10   
          GOTO     WP00L105 IF NOT EQUAL
          PACK     VAR,SIPBCOM,SP70,SP70
          STRIP    VAR
          MOVELPTR VAR,F3
          SFORMAT  VAR,F3
          MOVE     SIPBCOM,VAR
          IF       F3=0
            WRITE    TEMPWORD,SEQ;
          ELSE
            WRITE    TEMPWORD,SEQ;VAR
          ENDIF
          SFORMAT  VAR,127
          GOTO     WP00L100
WP00L105  CLOSE    TEMPWORD
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Receival Header Information        
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Receival Header Information        
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Receival Header Information        
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L101,PS00L102,PS00L103:
                            PS00L104,PS00L105,PS00L106,PS00L107:
                            PS00L108,PS00L109,PS00L110,PS00L111:
                            PS00L112,PS00L113,PS00L114,PS00L115:
                            PS00L116,PS00L117,PS00L118,PS00L119:
                            PS00L120,PS00L121,PS00L122,PS00L123:
                            PS00L124,PS00L125,PS00L126,PS00L127:
                            PS00L128,PS00L129,PS00L130,PS00L999:
                           PS00L999,PS00L999,PS00L999,PS00L131
          GOTO     PS00L999
.
PS00L101
          MOVE      SIPASUP,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      SIPAORI,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L103
          MOVE      SIPAICN,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L104
          MOVE      SIPASCN,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L105
          MOVE      SIPADEL,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L106
          MOVE      SIPAMES,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L107
          UNPACK    SIPADIN,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L108
          UNPACK    SIPADPR,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L109
          UNPACK    SIPADCN,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L110
          UNPACK    SIPADCM,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L111
          MOVE      SIPACON,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L112
          MOVE      SIPAIDP,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L113
          MOVE      APMASN1,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L114
          MOVE      APMASN2,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L115
          MOVE      APMASA1,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L116
          MOVE      APMASA2,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L117
          MOVE      APMASA3,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L118
          MOVE      APMASPC,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L119
          MOVE      APMASTEL,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L120
          MOVE      APMASFAX,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L121
          MOVE      APMASCON,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L122
          MOVE      SIORNAME,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L123
          MOVE      CONFDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L124
          MOVE      MESSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L125
          MOVE     FILSIPB1,WORDNAME
          CALL     DISPWORD
          GOTO     PS00L999
.
PS00L126
          MOVE      SIPEPER,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L127
          MOVE      SIPEYEAR,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L128
          CALL      NSIPB000
          MOVE      NOTESIPB,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L129
          MOVE      DELDOCK,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L130
          UNPACK    DELDATE,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L131
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      PARTDEL,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Receival Header Information        
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L006,SF00L006,SF00L006:
                            SF00L006,SF00L101,SF00L006,SF00L006:
                            SF00L006,SF00L102,SF00L103,SF00L006:
                           SF00L006,SF00L104,SF00L105,SF00L106
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L101,SF00L020,SF00L020:
                            SF00L020,SF00L102,SF00L103,SF00L020:
                           SF00L020,SF00L020,SF00L020,SF00L106
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          CALL      NSIPB000
.
.
          MOVE      "   29",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,NOTESIPB
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          IF       EXIT=1
            IF       ACCEPT=0
              MOVE     "11",SCPSROW
              MOVE     " 18",SCPSCOL
              MOVE     " 60",SCPSLEN
              MOVE     "10",SCPSNOR
              MOVE     SCPSROW,CVERT
              MOVE     SCPSCOL,CCOL
              MOVE     ZERO,HLEF
              CALL     GETSCR00
              MOVE     FILSIPB1,WORDNAME
              MOVE     " 12",WORDTYPE
              CALL     EDITWORD
              CALL     PUTSCR00
            ENDIF
          ELSE
            MOVE     FILSIPB1,WORDNAME
            MOVE     " 12",WORDTYPE
            IF       ACCEPT=0
               CALL     EDITWORD
            ENDIF
          ENDIF
          CALL      NSIPB000
.
.
          MOVE      "   29",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      NOTESIPB,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L102
          CALL     SELECTED
          STRIP     DELDOCK 
          SFORMAT   VAR,SCPSLEN
          MOVE      DELDOCK,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,DELDOCK 
          SFORMAT   VAR,127
          ENDSET    DELDOCK 
          APPEND    SP70,DELDOCK 
          RESET     DELDOCK 
          CMATCH    EXITCHAR,DELDOCK 
          GOTO      SF00L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,DELDOCK 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L102
            ENDIF
          ENDIF
          MOVE      DELDOCK,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L103
.
.
          MOVE      "   27",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIPEPER 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   28",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIPEYEAR
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL      DEFDEL00
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ERECD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          UNPACK    DELDATE,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
.
.
          MOVE      "   27",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIPEPER,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   28",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIPEYEAR,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF00L001
.
SF00L104
          CALL      UUSIPA1 
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L105
          CALL      POST0000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L106
          CALL      NYESNO00
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,PARTDEL 
          CALL      CYESNO00
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      PARTDEL,FORM2    
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      ONE,EXIT * Exit Char Restart
SF00L999  RETURN
.--------------------------------
. Screen - Receival Summary                   
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   24",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      " 8",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SC01L200
          CALL      CF01L000 * Clear Fields
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Receival Summary                   
.-------------------------------------------------------
CF01L000
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Receival Summary                   
.--------------------------------------------------------
KY01L000
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Receival Summary                   
.---------------------------------------------------------
WP01L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Receival Summary                   
.---------------------------------------------------------
LM01L000
.---------------------------------------------------------
. Load for :     1 Item Number                        
.---------------------------------------------------------
          UNPACK    SP70,SIPFPON,SIPFREC,SIPFITM
          PACK      KEY12,SIPAPON,NEXTREC,SP70
          MOVE      KEY12,SIPF2EKY
          STRIP     SIPF2SKY
          SETLPTR   SIPF2EKY,9
          MOVE      SIPF2EKY,SIPF2SKY
          CALL      RDSIPF2 
          IF        OVRCD=0
            CALL      RPSIPF2 
          ENDIF
          RETURN
.--------------------------------------------------------
. Display Current Page of Multi Items
.--------------------------------------------------------
DP01L000
          MOVE     ZERO,SIPF2CNT
          MOVE     ZERO,SIPF2END
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DP01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DP01L600
          MATCH    PRGID,SCPSPID
          GOTO     DP01L600 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DP01L600 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     DP01L010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,DP01L101,DP01L102,DP01L103,DP01L104:
                            DP01L105,DP01L106,DP01L107,DP01L108:
                            DP01L109,DP01L110,DP01L111,DP01L112:
                            DP01L113,DP01L114,DP01L115,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010,DP01L010,DP01L010,DP01L010:
                            DP01L010
          GOTO      DP01L010
.
DP01L101
          PACK      SIPF2MKY,SP70,SP70
          CALL      UPTSIPF2
          IF        SIPF2END=0
            CALL      RKSIPF2 
            IF        OVRCD=0
              PACK      SIPF2MKY,SIPFPON,SIPFREC,SIPFITM                                                        
              MATCH     SIPF2EKY,SIPF2MKY
              IF        @EQUAL
                MOVE      ZERO,SIPF2END
                ADD       ONE,SIPF2CNT
                CALL      UPTSIPF2
                MOVE      SIPFITM,VAR      
                CALL      DISPITEM
          CALL      REDITM00
              ELSE
                MOVE      ONE,SIPF2END
              ENDIF
            ELSE
              MOVE      ONE,SIPF2END
            ENDIF
          ENDIF
          IF        SIPF2END=1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L102
          IF        SIPF2END=0
            MOVE      SIPFREC,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L103
          IF        SIPF2END=0
            UNPACK    SIPFDAT,CCENT,CYEAR,CMON,CDAY           
            CALL      PACDATE
            MOVE      CPCDATE,VAR
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L104
          IF        SIPF2END=0
            MOVE      WHOLEQTY,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L105
          IF        SIPF2END=0
            MOVE      UNITCOST,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L106
          IF        SIPF2END=0
            MOVE      SIPFSUT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L107
          IF        SIPF2END=0
            MOVE      TRANCOST,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L108
          IF        SIPF2END=0
            MOVE      TRANDESC,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L109
          IF        SIPF2END=0
            MOVE      SIIADES,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L110
          IF        SIPF2END=0
            MOVE      SIIAISS,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L111
          IF        SIPF2END=0
            MOVE      SIPCWAR,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L112
          IF        SIPF2END=0
            MOVE      SIPCCAT,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L113
          IF        SIPF2END=0
            MOVE      SIPCPN,VAR       
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L114
          IF        SIPF2END=0
            MOVE      SIPCPD,VAR       
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
.
DP01L115
          IF        SIPF2END=0
            MOVE      SIPCCON,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP01L010
DP01L600
          MATCH    "SIPF2",NAMSSFFI
          GOTO     DP01L605 IF NOT EQUAL
          GOTO     DP01L999
DP01L605
DP01L999
          RETURN
.--------------------------------------------------------
. Display First Page of Multi Items
.--------------------------------------------------------
FP01L000
.
          MATCH    "SIPF2",NAMSSFFI
          GOTO     FP01L105 IF NOT EQUAL
          PACK     KEY12,SIPF2SKY,SP70
          CALL     RDSIPF2  * Start
          IF       OVRCD=0
            CALL     RPSIPF2  * Start
          ENDIF
          CALL     DP01L000
          GOTO     FP01L999
FP01L105
FP01L999  RETURN
.--------------------------------------------------------
. Display Last Page of Multi Items
.--------------------------------------------------------
LP01L000
.
          MATCH    "SIPF2",NAMSSFFI
          GOTO     LP01L105 IF NOT EQUAL
          PACK     KEY12,SIPF2SKY,Z70
          CALL     RSSIPF2  * End
          IF       OVRCD=1
            CALL     RPSIPF2 
          ENDIF
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<SIPF2SNO
            CALL     RPSIPF2 
            IF       OVRCD=1
              MOVE     SIPF2SNO,SECTOR
            ENDIF
            PACK     SIPF2MKY,SIPFPON,SIPFREC,SIPFITM                                                        
            MATCH    SIPF2EKY,SIPF2MKY
            IF       !@EQUAL
              MOVE     SIPF2SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP01L000
          GOTO     LP01L999
LP01L105
LP01L999  RETURN
.--------------------------------------------------------
. Display Previous Page  
.--------------------------------------------------------
PP01L000
.
          MATCH    "SIPF2",NAMSSFFI
          GOTO     PP01L120 IF NOT EQUAL
          MOVE     ZERO,SECTOR
PP01L105
          CALL      RFTSIPF2
          BRANCH   OVRCD,PP01L115
          MOVE      SIPF2MKY,KEY12 
          CALL      RSSIPF2 
PP01L110
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<=SIPF2SNO
            CALL     RPSIPF2 
            IF       OVRCD=1
              MOVE     SIPF2SNO,SECTOR
            ENDIF
            PACK     SIPF2MKY,SIPFPON,SIPFREC,SIPFITM                                                        
            MATCH    SIPF2EKY,SIPF2MKY
            IF       !@EQUAL
              MOVE     SIPF2SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          CALL     DP01L000
          GOTO     PP01L999
PP01L115
          BEEP
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<SIPF2SNO
            CALL     RKSIPF2 
            IF       OVRCD=1
              MOVE     SIPF2SNO,SECTOR
            ENDIF
            PACK     SIPF2MKY,SIPFPON,SIPFREC,SIPFITM                                                        
            MATCH    SIPF2EKY,SIPF2MKY
            IF       !@EQUAL
              MOVE     SIPF2SNO,SECTOR
            ENDIF
            ADD      ONE,SECTOR
          DO
          GOTO     PP01L999
PP01L120
PP01L999  RETURN
.--------------------------------------------------------
. Display Next Page of Multi Items
.--------------------------------------------------------
NP01L000
          MATCH    "SIPF2",NAMSSFFI
          GOTO     NP01L115 IF NOT EQUAL
NP01L105
          CALL     RKSIPF2 
          BRANCH   OVRCD,NP01L110
          PACK     SIPF2MKY,SIPFPON,SIPFREC,SIPFITM                                                        
          MATCH    SIPF2EKY,SIPF2MKY
          GOTO     NP01L110 IF NOT EQUAL
          CALL     RPSIPF2 
          CALL     DP01L000
          GOTO     NP01L999
NP01L110
          CALL     RPSIPF2 
          BEEP
          GOTO     NP01L999
NP01L115
NP01L999  RETURN
.--------------------------------------------------------
. Clear Page of Multi Items from Temp File
.--------------------------------------------------------
CT01L000
CT01L105
CT01L999  RETURN
.---------------------------------------------------------
. Batch IO for Screen : Receival Summary                   
.---------------------------------------------------------
.---------------------------------------------------------
. Batch IO for :     1 Item Number                        
.---------------------------------------------------------
UPTSIPF2
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      SIPF2FL1,KEY5;ANS
          IF        @OVER
            WRITE     SIPF2FL1,KEY5;SCPSROW,SCPSCOL,SIPF2MKY
          ELSE
            UPDATE    SIPF2FL1;SCPSROW,SCPSCOL,SIPF2MKY
          ENDIF
          RETURN
RDTSIPF2
          MOVE      ZERO,OVRCD
          PACK      KEY5,SCPSROW,SCPSCOL
          READ      SIPF2FL1,KEY5;SCPSROW,SCPSCOL,SIPF2MKY
          GOTO      OVERCOND IF OVER
          RETURN
RFTSIPF2
          MOVE      ZERO,OVRCD
          PACK      KEY5,SP70
          READ      SIPF2FL1,KEY5;;
          READKS    SIPF2FL1;SCPSROW,SCPSCOL,SIPF2MKY
          GOTO      OVERCOND IF OVER
          MATCH     SP70,SIPF2MKY
          GOTO      OVERCOND IF EQUAL
          RETURN
.---------------------------------------------------------
. Display Fields for : Receival Summary                   
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
          MOVE      "SIPF2",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      FP01L000
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Receival Summary                   
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L999,PS01L999,PS01L999,PS01L999:
                            PS01L101
          GOTO     PS01L999
.
PS01L101
          MOVE      GRANDTOT,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Receival Summary                   
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L101,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L006:
                            SF01L006,SF01L006,SF01L006,SF01L102:
                            SF01L006,SF01L006,SF01L006,SF01L103:
                            SF01L104,SF01L105,SF01L006,SF01L006:
                            SF01L106,SF01L107,SF01L108,SF01L109:
                            SF01L006
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L101,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020,SF01L020,SF01L020,SF01L020:
                            SF01L020
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          MOVE      "SIPF2",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      FP01L000
          GOTO     SF01L001
.
SF01L101
          CALL      SELECTED
          BRANCH    EXIT,SF01L001
          COMPARE   ONE,ACCEPT
          GOTO      SF01L001 IF EQUAL
          CALL      RDTSIPF2
          IF        OVRCD=1
            BEEP
            GOTO      SF01L001
          ENDIF
          MATCH     SP70,SIPF2MKY
          IF        @EQUAL
            BEEP
            GOTO      SF01L001
          ENDIF
          MOVE      SIPF2MKY,KEY12 
          MOVE      ZERO,HLEF
          CALL      GETSCR00
          CALL      SELITM00
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   24",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          CALL      RFTSIPF2
          IF        OVRCD=1
            CALL      FP01L000
          ELSE
            MOVE      SIPF2MKY,KEY12 
            CALL      RSSIPF2 
            CALL      RPSIPF2 
            CALL      DP01L000
          ENDIF
          GOTO     SF01L001
.
SF01L102
.
.
          MOVE      "   29",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,GRANDTOT
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL      SELIN000
.
.
          MOVE      "   29",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      GRANDTOT,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO      SF01L001
.
SF01L103
          CALL      REMOVE00
          GOTO      SF01L001
.
SF01L104
          CALL      PROC0000
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L105
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      DELT0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF01L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF01L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF01L999
          ENDIF
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   24",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF01L000
          ENDIF
          GOTO      SF01L001
.
SF01L106
          MOVE      "SIPF2",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      NP01L000
          GOTO     SF01L001
.
SF01L107
          MOVE      "SIPF2",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      PP01L000
          GOTO     SF01L001
.
SF01L108
          MOVE      "SIPF2",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      FP01L000
          GOTO     SF01L001
.
SF01L109
          MOVE      "SIPF2",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      LP01L000
          GOTO     SF01L001
SF01L990  MOVE      ONE,EXIT * Exit Char Restart
SF01L999  RETURN
.--------------------------------
. Screen - Receival Details                   
.--------------------------------
SC02L000
SC02L100
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   24",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      " 8",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SC02L200
          CALL      CF02L000 * Clear Fields
SC02L300
          CALL      KY02L000 * Enter Key Fields
          BRANCH    EXIT,SC02L999,SC02L999
SC02L400
          CALL      WP02L000 * Load any WP Details
SC02L500
          CALL      LM02L000 * Load any Batch Details
SC02L600
          CALL      DF02L000 * Display Fields
SC02L700
          CALL      SF02L000 * Select Fields
          BRANCH    EXIT,SC02L100,SC02L100,SC02L200
SC02L800
SC02L900
SC02L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Receival Details                   
.-------------------------------------------------------
CF02L000
CF02L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Receival Details                   
.--------------------------------------------------------
KY02L000
          MOVE      ZERO,EXIT
          GOTO      KY02L999
.
KY02L900  MOVE      ONE,EXIT
KY02L999  RETURN
.---------------------------------------------------------
. Load WP files for : Receival Details                   
.---------------------------------------------------------
WP02L000
          PREP     TEMPWORD,FILSIPD1
          PACK     KEY13,SIPCPON,SIPCITM,SP70
          MOVE     KEY13,SAVKEY80
          SETLPTR  SAVKEY80,10
          CALL      RDSIPD1 
          IF        OVRCD=0
            CALL      RPSIPD1 
          ENDIF
WP02L100
          CALL     RKSIPD1 
          BRANCH   OVRCD,WP02L105
          PACK     KEY13,SIPDPON,SIPDITM,SIPDLIN
          MATCH    SAVKEY80,KEY13   
          GOTO     WP02L105 IF NOT EQUAL
          PACK     VAR,SIPDCOM,SP70,SP70
          STRIP    VAR
          MOVELPTR VAR,F3
          SFORMAT  VAR,F3
          MOVE     SIPDCOM,VAR
          IF       F3=0
            WRITE    TEMPWORD,SEQ;
          ELSE
            WRITE    TEMPWORD,SEQ;VAR
          ENDIF
          SFORMAT  VAR,127
          GOTO     WP02L100
WP02L105  CLOSE    TEMPWORD
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Receival Details                   
.---------------------------------------------------------
LM02L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Receival Details                   
.---------------------------------------------------------
DF02L000
          BRANCH   ACCEPT,DF02L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF02L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF02L900
          MATCH    PRGID,SCPSPID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF02L010 IF NOT EQUAL
.
          CALL     PS02L000 * Display Field
          GOTO     DF02L010
DF02L900
DF02L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Receival Details                   
.---------------------------------------------------------
PS02L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS02L101,PS02L102,PS02L103,PS02L104:
                            PS02L105,PS02L106,PS02L107,PS02L108:
                            PS02L109,PS02L110,PS02L111,PS02L112:
                            PS02L113,PS02L114,PS02L115,PS02L116:
                            PS02L117,PS02L118,PS02L119,PS02L120:
                            PS02L121,PS02L122,PS02L123,PS02L999:
                            PS02L999,PS02L999,PS02L124,PS02L125:
                            PS02L126,PS02L127,PS02L128,PS02L999:
                            PS02L129,PS02L130,PS02L131,PS02L132:
                            PS02L133,PS02L134,PS02L135,PS02L136:
                            PS02L137
          GOTO     PS02L999
.
PS02L101
          MOVE      SIPFITM,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L102
          MOVE      SIPFREC,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L103
          UNPACK    SIPFDAT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L104
          MOVE      WHOLEQTY,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L105
          MOVE      SIPFSUT,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L106
          MOVE      SIPFDEL,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L107
          MOVE      UNITCOST,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L108
          MOVE      SIPCCST,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L109
          MOVE      SIPCPRD,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L110
          MOVE      SIPCDAT,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L111
          MOVE      SIPCWAR,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L112
          MOVE      SIPCCAT,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L113
          MOVE      SIPCPN,VAR       
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L114
          MOVE      SIPCPD,VAR       
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L115
          MOVE      SIPCCON,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L116
          UNPACK    SIPCCDT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L117
          MOVE      SIPCSUT,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L118
          UNPACK    SIPCEDD,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L119
          UNPACK    SIPCFDD,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L120
          MOVE      WHOLEOQT,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L121
          MOVE      WHOLERQT,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L122
          MOVE      NEXTDATE,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L123
          MOVE      SIPCECT,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L124
          CALL      CLRVAR00
          MOVE      SIIADES,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L125
          MOVE      SIIAISS,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L126
          MOVE      SIIAAVC,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L127
          MOVE      SIIANAT,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L128
          MOVE      WHOLETQT,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L129
          CALL      NSIPD000
          MOVE      NOTESIPD,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L130
          MOVE     FILSIPD1,WORDNAME
          CALL     DISPWORD
          GOTO     PS02L999
.
PS02L131
          MOVE      SIPCUR1,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L132
          MOVE      SIPCUR2,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L133
          MOVE      SIPCGST,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L134
          MOVE      IBGSDESC,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L135
          MOVE      SIPFGST,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L136
          MOVE      TOTALGST,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L137
          MOVE      TOTALCST,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
PS02L999
          RETURN
.---------------------------------------------------------
. Selections for : Receival Details                   
.---------------------------------------------------------
SF02L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF02L001  BRANCH   ACCEPT,SF02L020
.
SF02L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L006,SF02L006,SF02L101,SF02L102:
                            SF02L103,SF02L104,SF02L105,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006,SF02L106,SF02L006,SF02L006:
                            SF02L107,SF02L108,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L109:
                            SF02L006,SF02L110,SF02L006,SF02L006:
                            SF02L006,SF02L006,SF02L006,SF02L006:
                            SF02L006
SF02L006  BEEP
          GOTO     SF02L005
SF02L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF02L090
          MATCH    PRGID,SCSLPID
          GOTO     SF02L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF02L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L020,SF02L020,SF02L101,SF02L102:
                            SF02L103,SF02L104,SF02L105,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L106,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020,SF02L110,SF02L020,SF02L020:
                            SF02L020,SF02L020,SF02L020,SF02L020:
                            SF02L020
          GOTO     SF02L020
SF02L090  MOVE     ZERO,ACCEPT
          GOTO     SF02L001
.
SF02L101
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EDATR000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L101
            ENDIF
            BRANCH    EXIT,SF02L101,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          UNPACK    SIPFDAT,CCENT,CYEAR,CMON,CDAY           
          CALL      PACDATE
          MOVE      CPCDATE,VAR
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L102
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ERECQ000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L102
            ENDIF
            BRANCH    EXIT,SF02L102,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      WHOLEQTY,VAR     
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L103
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ESUPT000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L103
            ENDIF
            BRANCH    EXIT,SF02L103,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      SIPFSUT,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L104
          CALL     SELECTED
          STRIP     SIPFDEL 
          SFORMAT   VAR,SCPSLEN
          MOVE      SIPFDEL,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,SIPFDEL 
          SFORMAT   VAR,127
          ENDSET    SIPFDEL 
          APPEND    SP70,SIPFDEL 
          RESET     SIPFDEL 
          CMATCH    EXITCHAR,SIPFDEL 
          GOTO      SF02L990 IF EQUAL
          IF        SCPSMAN=1
            MATCH     SP70,SIPFDEL 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L104
            ENDIF
          ENDIF
          MOVE      SIPFDEL,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L105
.
.
          MOVE      "   39",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,SIPFGST 
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   40",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOTALGST
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   41",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOTALCST
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ECOST000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L105
            ENDIF
            BRANCH    EXIT,SF02L105,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      UNITCOST,VAR     
          CALL      DISPITEM
.
.
          MOVE      "   39",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      SIPFGST,VAR      
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   40",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOTALGST,VAR     
            CALL      DISPITEM
          ENDIF
.
.
          MOVE      "   41",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOTALCST,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L106
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ENDEL000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L106
            ENDIF
            BRANCH    EXIT,SF02L106,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      NEXTDATE,VAR     
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L107
          CALL      CAN20000
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L108
          CALL      POS20000
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L109
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      DEL20000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF02L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF02L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF02L999
          ENDIF
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "   24",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF02L000
          ENDIF
          GOTO      SF02L001
.
SF02L110
          CALL      NSIPD000
.
.
          MOVE      "   33",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,NOTESIPD
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          IF       EXIT=1
            IF       ACCEPT=0
              MOVE     "10",SCPSROW
              MOVE     " 18",SCPSCOL
              MOVE     " 60",SCPSLEN
              MOVE     "12",SCPSNOR
              MOVE     SCPSROW,CVERT
              MOVE     SCPSCOL,CCOL
              MOVE     ZERO,HLEF
              CALL     GETSCR00
              MOVE     FILSIPD1,WORDNAME
              MOVE     " 12",WORDTYPE
              CALL     EDITWORD
              CALL     PUTSCR00
            ENDIF
          ELSE
            MOVE     FILSIPD1,WORDNAME
            MOVE     " 12",WORDTYPE
            IF       ACCEPT=0
               CALL     EDITWORD
            ENDIF
          ENDIF
          CALL      NSIPD000
.
.
          MOVE      "   33",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      NOTESIPD,VAR     
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
SF02L990  MOVE      ONE,EXIT * Exit Char Restart
SF02L999  RETURN
.--------------------------------
. Screen - Back Order Allocation              
.--------------------------------
SC03L000
SC03L100
          MOVE      "03",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          MOVE      "  1",CLEF
          MOVE      " 80",CRIG
          MOVE      " 8",CTOP
          MOVE      "24",CBOT
          CALL      VBACK000 * Display Background
          MOVE      ZERO,CLEF
          MOVE      ZERO,CTOP
          MOVE      ZERO,CRIG
          MOVE      ZERO,CBOT
.
SC03L200
          CALL      CF03L000 * Clear Fields
SC03L300
          CALL      KY03L000 * Enter Key Fields
          BRANCH    EXIT,SC03L999,SC03L999
SC03L400
          CALL      WP03L000 * Load any WP Details
SC03L500
          CALL      LM03L000 * Load any Batch Details
SC03L600
          CALL      DF03L000 * Display Fields
SC03L700
          CALL      SF03L000 * Select Fields
          BRANCH    EXIT,SC03L100,SC03L100,SC03L200
SC03L800
SC03L900
SC03L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Back Order Allocation              
.-------------------------------------------------------
CF03L000
CF03L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Back Order Allocation              
.--------------------------------------------------------
KY03L000
          MOVE      ZERO,EXIT
          GOTO      KY03L999
.
KY03L900  MOVE      ONE,EXIT
KY03L999  RETURN
.---------------------------------------------------------
. Load WP files for : Back Order Allocation              
.---------------------------------------------------------
WP03L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Back Order Allocation              
.---------------------------------------------------------
LM03L000
.---------------------------------------------------------
. Load for :     1 Requisition                        
.---------------------------------------------------------
          UNPACK    SP70,SIBTPON,SIBTREQ
          PACK      SIBT1FNM,ANST,SIBT1NAM,PORT
          REP       " 0",SIBT1FNM
          MOVE      ZERO,SIBT1AFL
          CLOSE     SIBT1FL2
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      SIBT1FL1,SIBT1FNM
          TRAPCLR   IO
          IF        OVRCD=0
            CLOSE     SIBT1FL1,DELETE
          ENDIF
          PACK      KEY80,SGENISB,SIBT1FNM,SP1,SIBT1LEN,SP1,SIBT1IDX
          DISPLAY   *P1:3;
          EXECUTE   KEY80,TASKID
          OPEN      SIBT1FL1,SIBT1FNM
          OPEN      SIBT1FL2,SIBT1FNM
          PACK      KEY15,SIPAPON,SP70
          MOVE      KEY15,SAVKEY80
          SETLPTR   SAVKEY80,7 
          CALL      RDSIBT1 
          IF        OVRCD=0
            CALL      RPSIBT1 
          ENDIF
LM03L100
          CALL      RKSIBT1 
          BRANCH    OVRCD,LM03L105
          PACK      KEY15,SIBTPON,SIBTREQ
          MATCH     SAVKEY80,KEY15   
          GOTO      LM03L105 IF NOT EQUAL
          RESET     KEY15,8
          MOVE      KEY15,KEY8
          MOVE      SP70,SCTMROW
          MOVE      SP70,SCTMCOL
          CALL      TASIBT12
          IF        OVRCD=0
            CALL      TUSIBT12
          ELSE
            CALL      TWSIBT12
          ENDIF
          GOTO     LM03L100
LM03L105
          MOVE     SP70,KEY8   
          CALL     TSSIBT12
          RETURN
.---------------------------------------------------------
. Batch Item Selected Screen : Back Order Allocation              
.---------------------------------------------------------
SM03L000
          MOVE      ZERO,STDGSFLG
          MOVE      SCPSITM,FIRSTITM
          MOVE      SCPSROW,SCTMROW
          MOVE      SCPSCOL,SCTMCOL
          PACK      KEY15,PRGID,SCRID,SCPSROW,SCPSCOL
          MOVE      KEY15,SKSCPS15
          CALL      RDSCPS1
          COMPARE   ZERO,ACCEPT
          GOTO      SM03L010 IF EQUAL
SM03L005
          MOVE      SCPSROW,CVERT
          MOVE      SCPSCOL,CCOL
          MOVE      SCPSITM,FIELDNO
          MOVE      ONE,STDGSFLG
          BRANCH    FIELDNO,SM03L101,SM03L010,SM03L010,SM03L010:
                            SM03L010,SM03L010,SM03L010,SM03L010:
                            SM03L010,SM03L010,SM03L010,SM03L010:
                            SM03L010,SM03L010,SM03L010
SM03L006
          CALL      RKSCPS1
          BRANCH    OVRCD,SM03L007
          MATCH     PRGID,SCPSPID
          GOTO      SM03L007 IF NOT EQUAL
          MATCH     SCRID,SCPSSID
          GOTO      SM03L007 IF NOT EQUAL
          MATCH     FIRSTITM,SCPSITM
          GOTO      SM03L007 IF EQUAL
          MATCH     NAMSSFFI,SCPSMTY
          GOTO      SM03L006 IF NOT EQUAL
          GOTO      SM03L005
SM03L007
          MOVE      ZERO,STDGSFLG
          MOVE      SKSCPS15,KEY15
          CALL      RDSCPS1
SM03L010
          BRANCH    STDGSFLG,SM03L006
          CALL      RKSCPS1
          BRANCH    OVRCD,SM03L900
          MATCH     PRGID,SCPSPID
          GOTO      SM03L900 IF NOT EQUAL
          MATCH     SCRID,SCPSSID
          GOTO      SM03L900 IF NOT EQUAL
          MATCH     FIRSTITM,SCPSITM
          GOTO      SM03L900 IF EQUAL
          MATCH     NAMSSFFI,SCPSMTY
          GOTO      SM03L010 IF NOT EQUAL
          MOVE      SCPSROW,CVERT
          MOVE      SCPSCOL,CCOL
          MOVE      SCPSITM,FIELDNO
          BRANCH    FIELDNO,SM03L010,SM03L010,SM03L010,SM03L102:
                            SM03L010,SM03L010,SM03L010,SM03L010:
                            SM03L010,SM03L010,SM03L010,SM03L010:
                            SM03L010,SM03L010,SM03L010
          GOTO      SM03L010
.
SM03L101
          MOVE     ZERO,SIBT1AFL
          STRIP     SIBTREQ 
          SFORMAT   VAR,SCPSLEN
          MOVE      SIBTREQ,VAR
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,VAR
          MOVE      VAR,SIBTREQ 
          SFORMAT   VAR,127
          ENDSET    SIBTREQ 
          APPEND    SP70,SIBTREQ 
          RESET     SIBTREQ 
          MATCH     SP70,SIBTREQ 
          GOTO      SM03L990 IF EQUAL
          CMATCH    EXITCHAR,SIBTREQ 
          GOTO      SM03L990 IF EQUAL
          PACK     KEY15,SIBTPON,SIBTREQ                                                           
          RESET    KEY15,8
          MOVE     KEY15,KEY8
          CALL      TASIBT12
          IF        OVRCD=0
            MOVE      "Record Already On File - ",DISPMSG
            CALL      MESSAGE1
            GOTO      SM03L101
          ENDIF
          MOVE      SIBTREQ,VAR      
          CALL      DISPITEM
          CALL      BACLIN00
          GOTO     SM03L010
.
SM03L102
          MOVE      SP70,VAR
          CALL      DISPITEM
          KEYIN     *PCCOL:CVERT,*V2LON,*NOMASK,*RV,SIBTISS 
          IF        SCPSMAN=1
            COMPARE   ZERO,SIBTISS 
            IF        @EQUAL
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SM03L102
            ENDIF
          ENDIF
          MOVE      SIBTISS,VAR      
          CALL      DISPITEM
          GOTO     SM03L010
SM03L900
          MATCH    "SIBT1",NAMSSFFI
          IF       @EQUAL
            PACK     KEY15,SIBTPON,SIBTREQ
            RESET    KEY15,8
            MOVE     KEY15,KEY8
            CALL      TASIBT12
            IF        OVRCD=0
              CALL      TUSIBT12
            ELSE
              CALL      TWSIBT12
            ENDIF
            GOTO      SM03L999
          ENDIF
          GOTO      SM03L999
SM03L990
          MATCH    "SIBT1",NAMSSFFI
          IF       @EQUAL
            MOVE     ONE,SIBT1AFL
          ENDIF
SM03L999
          RETURN
.--------------------------------------------------------
. Display Current Page of Multi Items
.--------------------------------------------------------
DP03L000
          MOVE     ZERO,SIBT1CNT
          MOVE     ZERO,SIBT1END
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DP03L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DP03L600
          MATCH    PRGID,SCPSPID
          GOTO     DP03L600 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DP03L600 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     DP03L010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,DP03L101,DP03L102,DP03L103,DP03L104:
                            DP03L105,DP03L010,DP03L010,DP03L010:
                            DP03L010,DP03L010,DP03L010,DP03L010:
                            DP03L010,DP03L010,DP03L010
          GOTO      DP03L010
.
DP03L101
          IF        SIBT1END=0
            CALL      TKSIBT12
            IF        OVRCD=1
              MOVE      ONE,SIBT1END
            ELSE
              MOVE      ZERO,SIBT1END
              MOVE      SCPSROW,SCTMROW
              MOVE      SCPSCOL,SCTMCOL
              CALL      TUSIBT12
              MOVE      SIBTREQ,VAR      
              CALL      DISPITEM
          CALL      BACLIN00
            ENDIF
          ENDIF
          IF        SIBT1END=1
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L102
          IF        SIBT1END=0
            MOVE      SIBTCST,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L103
          IF        SIBT1END=0
            MOVE      SIBTQTY,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L104
          IF        SIBT1END=0
            MOVE      SIBTISS,VAR      
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
.
DP03L105
          IF        SIBT1END=0
            MOVE      SICADESC,VAR     
            CALL      DISPITEM
          ELSE
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      DP03L010
DP03L600
          MATCH    "SIBT1",NAMSSFFI
          GOTO     DP03L605 IF NOT EQUAL
          GOTO     DP03L999
DP03L605
DP03L999
          RETURN
.--------------------------------------------------------
. Display First Page of Multi Items
.--------------------------------------------------------
FP03L000
.
          CALL     CT03L000
          MATCH    "SIBT1",NAMSSFFI
          GOTO     FP03L105 IF NOT EQUAL
          MOVE     SP70,KEY8   
          CALL     TSSIBT12 * Start
          CALL     DP03L000
          GOTO     FP03L999
FP03L105
FP03L999  RETURN
.--------------------------------------------------------
. Display Last Page of Multi Items
.--------------------------------------------------------
LP03L000
.
          CALL     CT03L000
          MATCH    "SIBT1",NAMSSFFI
          GOTO     LP03L105 IF NOT EQUAL
          PACK     KEY8,Z70
          CALL     TSSIBT12
          IF       OVRCD=1
            CALL     TPSIBT12 * End
          ENDIF
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<SIBT1SNO
            CALL     TPSIBT12
            ADD      ONE,SECTOR
          DO
          CALL     DP03L000
          GOTO     LP03L999
LP03L105
LP03L999  RETURN
.--------------------------------------------------------
. Display Previous Page  
.--------------------------------------------------------
PP03L000
.
PP03L100
          MATCH    "SIBT1",NAMSSFFI
          GOTO     PP03L115 IF NOT EQUAL
PP03L105
          MOVE     SP70,SIBT1NXT
          PACK     KEY5,SP1,ONE,SP70
          CALL     TSSIBT11
          CALL     TKSIBT11 * First on Page
          MOVE     KEY8,SIBT1NXT
          CALL     TSSIBT12
          CALL     TPSIBT12 * Get Key
          IF       OVRCD=1
            BEEP
            GOTO      PP03L999
          ENDIF
.
          CALL     CT03L000
.
. Position and Display Page
.--------------------------
PP03L110
          MOVE     SIBT1NXT,KEY8   
          CALL     TSSIBT12
          MOVE     ZERO,SECTOR
          WHILE    SECTOR<=SIBT1SNO
            CALL     TPSIBT12
            ADD      ONE,SECTOR
          DO
          CALL     DP03L000
          GOTO     PP03L999
PP03L115
PP03L999  RETURN
.--------------------------------------------------------
. Display Next Page of Multi Items
.--------------------------------------------------------
NP03L000
          MATCH    "SIBT1",NAMSSFFI
          GOTO     NP03L115 IF NOT EQUAL
NP03L105
          MOVE     SP70,SIBT1NXT
          PACK     KEY5,Z70
          CALL     TSSIBT11
          CALL     TPSIBT11
          MOVE     KEY8,SIBT1NXT
          CALL     TSSIBT12
          CALL     TKSIBT12
          IF       OVRCD=1
            BEEP
            GOTO      NP03L999
          ENDIF
.
          CALL     CT03L000
.
. Position and Display Page
.--------------------------
NP03L110
          MOVE     SIBT1NXT,KEY8   
          CALL     TSSIBT12
          CALL     DP03L000
          GOTO     NP03L999
NP03L115
NP03L999  RETURN
.--------------------------------------------------------
. Clear Page of Multi Items from Temp File
.--------------------------------------------------------
CT03L000
          MATCH    "SIBT1",NAMSSFFI
          GOTO     CT03L115 IF NOT EQUAL
CT03L105
          PACK     KEY5,SP1,ONE,SP70
          CALL     TSSIBT11
          CALL     TKSIBT11
          BRANCH   OVRCD,CT03L110
          CALL     TRSIBT12
          MOVE     SP70,SCTMROW
          MOVE     SP70,SCTMCOL
          CALL     TUSIBT12
          GOTO     CT03L105
CT03L110
          GOTO     CT03L999
CT03L115
CT03L999  RETURN
.----------------------------------
. Clear Pages of Multi Items 
.----------------------------------
CP03L000
          CALL     CT03L000
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
CP03L010
          CALL     RKSCPS1
          BRANCH   OVRCD,CP03L999
          MATCH    PRGID,SCPSPID
          GOTO     CP03L999 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     CP03L999 IF NOT EQUAL
          MATCH    NAMSSFFI,SCPSMTY
          GOTO     CP03L010 IF NOT EQUAL
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,CP03L100,CP03L100,CP03L100,CP03L100:
                            CP03L100,CP03L010,CP03L010,CP03L010:
                            CP03L010,CP03L010,CP03L010,CP03L010:
                            CP03L010,CP03L010,CP03L010
.
CP03L100
          PACK     VAR,SP70,SP70
          CALL     DISPITEM  * Display Blank Item
          GOTO     CP03L010
CP03L999  RETURN
.---------------------------------------------------------
. Add Items
.---------------------------------------------------------
AD03L000
          CALL      CP03L000 * Clear Screen of Items
          PACK      KEY20,PRGID,SCRID,ITMSSFFI,SP70
          CALL      RSSCPS2
AD03L010  CALL      RKSCPS2
          BRANCH    OVRCD,AD03L000
          MATCH     PRGID,SCPSPID
          GOTO      AD03L000 IF NOT EQUAL
          MATCH     SCRID,SCPSSID
          GOTO      AD03L000 IF NOT EQUAL
          MATCH     ITMSSFFI,SCPSITM
          GOTO      AD03L000 IF NOT EQUAL
          PACK      SKSCPS20,SCPSPID,SCPSSID,SCPSITM,SCPSROW,SCPSCOL
          MOVE      ACCEPT,SACCEPT
          MOVE      ONE,ACCEPT
          CALL      SM03L000
          MOVE      SACCEPT,ACCEPT
          MOVE      SKSCPS20,KEY20
          CALL      RDSCPS2
          MATCH     "SIBT1",NAMSSFFI
          IF        @EQUAL
            COMPARE   ZERO,SIBT1AFL
            GOTO      AD03L010 IF EQUAL
            CALL      FP03L000
            GOTO      AD03L999
          ENDIF
AD03L999
          RETURN
.---------------------------------------------------------
. Delete Items
.---------------------------------------------------------
DL03L000  
          MOVE      SCSLDES,DISPMSG
          CALL      MESSAGE2
DL03L005  
          CALL      MDELQ000
          BRANCH    EXIT,DL03L900,DL03L900
          MOVE      SCSLITM,FIELDNO
          MATCH     ITMSSFFI,SCSLITM
          GOTO      DL03L100 IF NOT EQUAL
          CALL      SELECTED
          MATCH     "SIBT1",SCPSMTY
          IF        @EQUAL
            PACK      KEY5,SCSLROW,SCSLCOL
            CALL      TRSIBT11
            IF        OVRCD=0
              CALL      TDSIBT12
            ELSE
              BEEP
              GOTO      DL03L005
            ENDIF
            PACK      KEY5,SP1,ONE,SP70
            CALL      TSSIBT11
            CALL      TKSIBT11
            MOVE     KEY8,SIBT1NXT
            CALL      CT03L000
            MOVE      SIBT1NXT,KEY8   
            CALL      TSSIBT12
            CALL      TPSIBT12
            CALL      DP03L000
            GOTO      DL03L005
          ENDIF
DL03L100  MOVE      "Invalid Selection. - ",DISPMSG
          CALL      MESSAGE1
          GOTO      DL03L005
DL03L900  CALL      MESSAGE3
          RETURN
.---------------------------------------------------------
. Batch IO for Screen : Back Order Allocation              
.---------------------------------------------------------
.---------------------------------------------------------
. Batch IO for :     1 Requisition                        
.---------------------------------------------------------
TSSIBT11  RESET     KEY5
          READ      SIBT1FL1,KEY5;;
          RETURN
.
TSSIBT12  RESET     KEY8   
          READ      SIBT1FL2,KEY8;;
          RETURN
.
TASIBT12  RESET     KEY8   
          MOVE      ZERO,OVRCD
          READ      SIBT1FL2,KEY8;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
TDSIBT11  RESET     KEY5
          DELETE    SIBT1FL1,KEY5
          RETURN
.
TDSIBT12  RESET     KEY8
          DELETE    SIBT1FL2,KEY8
          RETURN
.
TKSIBT11  MOVE      ZERO,OVRCD
          READKS    SIBT1FL1;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TKSIBT12  MOVE      ZERO,OVRCD
          READKS    SIBT1FL2;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TPSIBT11  MOVE      ZERO,OVRCD
          READKP    SIBT1FL1;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TPSIBT12  MOVE      ZERO,OVRCD
          READKP    SIBT1FL2;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TRSIBT11  RESET     KEY5
          MOVE      ZERO,OVRCD
          READ      SIBT1FL1,KEY5;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TRSIBT12  RESET     KEY8   
          MOVE      ZERO,OVRCD
          READ      SIBT1FL2,KEY8;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          GOTO      OVERCOND IF OVER
          RETURN
.
TUSIBT11  UPDATE    SIBT1FL1;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          RETURN
.
TUSIBT12
          UPDATE    SIBT1FL2;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          RETURN
.
TWSIBT12  RESET     KEY8   
          WRITE     SIBT1FL2,KEY8;SCTMROW,SCTMCOL,KEY8:
                        SIBTPON,SIBTREQ,SIBTCST,SIBTQTY,SIBTISS:
                        SIBTSPA                                                 
          RETURN
.---------------------------------------------------------
. Display Fields for : Back Order Allocation              
.---------------------------------------------------------
DF03L000
          BRANCH   ACCEPT,DF03L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF03L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF03L900
          MATCH    PRGID,SCPSPID
          GOTO     DF03L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF03L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF03L010 IF NOT EQUAL
.
          CALL     PS03L000 * Display Field
          GOTO     DF03L010
DF03L900
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      FP03L000
DF03L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Back Order Allocation              
.---------------------------------------------------------
PS03L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS03L999,PS03L999,PS03L999,PS03L999:
                            PS03L999,PS03L999,PS03L999,PS03L999:
                            PS03L999,PS03L999,PS03L999,PS03L101:
                            PS03L102,PS03L103,PS03L104
          GOTO     PS03L999
.
PS03L101
          MOVE      TOTALREC,VAR     
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L102
          MOVE      SIIACAT,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L103
          MOVE      SIIADES,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
.
PS03L104
          MOVE      SIIAISS,VAR      
          CALL      DISPITEM
          GOTO     PS03L999
PS03L999
          RETURN
.---------------------------------------------------------
. Selections for : Back Order Allocation              
.---------------------------------------------------------
SF03L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF03L001  BRANCH   ACCEPT,SF03L020
.
SF03L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF03L101,SF03L006,SF03L006,SF03L006:
                            SF03L006,SF03L102,SF03L103,SF03L006:
                            SF03L104,SF03L105,SF03L106,SF03L006:
                            SF03L006,SF03L006,SF03L006
SF03L006  BEEP
          GOTO     SF03L005
SF03L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF03L090
          MATCH    PRGID,SCSLPID
          GOTO     SF03L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF03L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF03L101,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020,SF03L020:
                            SF03L020,SF03L020,SF03L020
          GOTO     SF03L020
SF03L090  MOVE     ZERO,ACCEPT
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      FP03L000
          GOTO     SF03L001
.
SF03L101
          CALL      SELECTED
          BRANCH    EXIT,SF03L001
          MOVE      "SIBT1",NAMSSFFI
          MOVE      SCPSITM,ITMSSFFI
          IF        ACCEPT=0
            PACK      KEY5,SCPSROW,SCPSCOL
            CALL      TRSIBT11
            BRANCH    OVRCD,SF03L001
            MATCH     SCTMROW,SCSLROW
            GOTO      SF03L001 IF NOT EQUAL
            MATCH     SCTMCOL,SCSLCOL
            GOTO      SF03L001 IF NOT EQUAL
            CALL      SM03L000 * Change Line
          ELSE
            IF        SIBT1AFL=0
              MOVE      "SIBT1",NAMSSFFI
              MOVE     "    1",ITMSSFFI
              CALL      AD03L000 * Add Line
            ENDIF
          ENDIF
          GOTO     SF03L001
.
SF03L102
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      NP03L000
          GOTO     SF03L001
.
SF03L103
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      PP03L000
          GOTO     SF03L001
.
SF03L104
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      BALAN000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF03L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF03L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF03L999
          ENDIF
          MOVE      "03",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    8",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF03L000
          ENDIF
          GOTO      SF03L001
.
SF03L105
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      FP03L000
          GOTO     SF03L001
.
SF03L106
          MOVE      "SIBT1",NAMSSFFI
          MOVE      "    1",ITMSSFFI
          CALL      LP03L000
          GOTO     SF03L001
SF03L990  MOVE      ONE,EXIT * Exit Char Restart
SF03L999  RETURN
.@@@@@ Function Restart Point @@@@@
.----------------------------------------------------------------------
. Process Receival Parameters
.-----------------------------
. HAVGCOST  FORM 1  When to Calculate Average Cost         1=Receivals
.                                                          2=Invoice
. HNONUSAG  FORM 1  How to account for non-stock/cat usage 1=Receival
.                                                          2=Purchasing
. HBACK     FORM 1  Running Backordering                   0=No
. HACCNT    FORM 1  Running the Accounting System          0=No
. HACCDATA  DIM  20 General Ledger Data Directory
. HDEFWH    DIM  5  Default Warehouse for Non Stock Items
. HORDDES   DIM  1  Order Number Alhpa Prefix
. INCNBLSS  DIM  5  Barwon LS Supplier Code
.----------------------------------------------------------------------
RDCON000  MOVE      ONE,CEAFILE
          READ      CONTROLF,TWENTY3;*95,HACCNT,*120,HBACK,*124,HORDDES:
                                    *143,HDEFWH,*248,HAVGCOST
          READ      CONTROLF,TWENTY4;*135,HACCDATA,*165,HLASTCIN,*227,HRECPRT
          READ      CONTROLF,SIXTY3;*143,HNONUSAG,HALLOCBO:
                                    *150,SNCOPRS,SNCOPPR,SNCOIMS:
                                    *240,SNCOPURC
          READ      CONTROLF,SIXTY7;*7,INCNBLSS
          COMPARE   ONE,HACCNT
          GOTO      RDCON999 IF NOT EQUAL
.
.---- accounting system active ----
.
          CLOSE     CONTROLF           * get gl control file if possible
          MOVE      "controlf.txt",KEY12
          PACK      KEY80,HACCDATA,KEY12
          SQUEEZE   KEY80
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      CONTROLF,KEY80
          TRAPCLR   IO
          IF        OVRCD=1
            OPEN      CONTROLF,"controlf"
          ENDIF
.
          CALL      RDFMCO50           * Read Account Code Parameters
          CALL      RDFMCO51
          CALL      RDFMCO52
          CALL      RDFMCO65
          CLOSE     CONTROLF
          OPEN      CONTROLF,"controlf"
.
          MOVE      "fmslmaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSLMAA1,KEY80
.
          MOVE      "fmsamaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSAMAA1,KEY80
.
          MOVE      "fmslmcaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSLMCA1,KEY80
.
          MOVE      "fmscsaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSCSAA1,KEY80
.
          MOVE      "fmstupaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      FMSTUPA1,KEY80
.
          MOVE      "apscioaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      APSCIOA1,KEY80
.
          MOVE      "apsordaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          OPEN      APSORDA1,KEY80
.
          MOVE      ZERO,OVRCD
          MOVE      "apsceaaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          TRAP      OVERCOND IF IO
          OPEN      APSCEAA1,KEY80
          TRAPCLR   IO
.
          MOVE      "apscebaf",KEY8
          PACK      KEY80,HACCDATA,KEY8
          SQUEEZE   KEY80
          TRAP      OVERCOND IF IO
          OPEN      APSCEBA1,KEY80
          TRAPCLR   IO
          MOVE      OVRCD,CEAFILE
.
RDCON999  CALL      ONAT0000
          RETURN
.------------------------------------------------------------------------
. Open Nato X-Ref File if required
.------------------------------------------------------------------------
ONAT0000  OPEN      CONTROLF,"controlf"
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*141,INCNNATO
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,INCNNATO
            WRITAB    CONTROLF,SIXTY3;*141,INCNNATO
          ENDIF
.
          IF        INCNNATO=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      SINNATA1,"sinnataf"
            TRAPCLR   IO
            IF        OVRCD=1
              DISPLAY   *P1:24,*EL,*B,"Nato file does not exist. Run fixit.  ";
              CALL      HITENTER
              CHAIN     PGM
            ENDIF
.
            OPEN      SINNATA2,"sinnataf"
          ENDIF
.
ONAT9999  RETURN
.----------------------------------------------
. Check for Notes
.----------------------------------------------
NSIPB000  MOVE        SP70,NOTESIPB
          MOVE        ZERO,OVRCD
          TRAP        OVERCOND IF IO
          OPEN        TEMPWORD,FILSIPB1
          TRAPCLR     IO
          BRANCH      OVRCD,NSIPB999
NSIPB100  READ        TEMPWORD,SEQ;SIPBCOM
          GOTO        NSIPB900 IF OVER
          MATCH       SP70,SIPBCOM
          GOTO        NSIPB100 IF EQUAL
          MOVE        "Comments",NOTESIPB
NSIPB900  CLOSE       TEMPWORD
NSIPB999  RETURN
.
DEFDEL00  PACK      DELDATE,CCC,CYY,CMM,CDD
          REP       " 0",DELDATE
          UNPACK    DELDATE,CCENT,CYEAR,CMON,CDAY
          RETURN
.
.----------------------------------------------------------------------
. Default DEFYESNO to "N"
.----------------------------------------------------------------------
NYESNO00  MOVE      "N",DEFYESNO
          RETURN
.----------------------------------------------------------------------
. Default DEFYESNO to "_"
.----------------------------------------------------------------------
CYESNO00  MOVE      "_",DEFYESNO
          RETURN
EPNUM000  CALL      UUSIPA1
          MOVE      ZERO,CKEYTYP
          CALL      KSIPAA00
          BRANCH    EXIT,EPNUM950,EPNUM950
.
. check warehouse security
.
          MATCH     SP70,SIPAWAR
          IF        !@EQUAL
            PACK      KEY9,PASSCODE,SIPAWAR,SP70
            CALL      RDSIWS1
            IF        OVRCD=1
              CLEAR     DISPMSG
              APPEND    "You have no access for Warehouse ",DISPMSG
              APPEND    SIPAWAR,DISPMSG
              APPEND    " - ",DISPMSG
              CALL      MESSAGE1
              GOTO      EPNUM950
            ENDIF
          ENDIF
.
EPNUM100  MATCH     SP70,SIPADCN
          IF        !(@EQUAL)
            UNPACK    SIPADCN,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            CLEAR     DISPMSG
            APPEND    "Order Cancelled on ",DISPMSG
            APPEND    CPCDATE,DISPMSG
            APPEND    " - ",DISPMSG
            RESET     DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      EPNUM000
          ENDIF
.
          MATCH     SP70,SIPADCM
          IF        !(@EQUAL)
            UNPACK    SIPADCM,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            CLEAR     DISPMSG
            APPEND    "Order Completed on ",DISPMSG
            APPEND    CPCDATE,DISPMSG
            APPEND    " - ",DISPMSG
            RESET     DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      EPNUM000
          ENDIF
.
. ------- Check if the Order is a Barwon Order - No Warning Message
          PACK      KEY7,SIPAPON
          CALL      RDSITR1
          IF        OVRCD=1
            MATCH     SP70,SIPADPR
            IF        @EQUAL
              MOVE      "WARNING : Order has NOT Been Printed. - ",DISPMSG
              BEEP
              CALL      MESSAGE1
            ENDIF
          ENDIF
.
          MOVE      SIPAPON,KEY7
          CALL      RLSIPA1
          BRANCH    OVRCD,EPNUM000,EPNUM200
.
          MATCH     SIPASUP,INCNBLSS
          IF        @EQUAL
. --------- Check if the Order has been Acknowledged if it is a Barwon Order
            PACK      KEY7,SIPAPON
            CALL      RDSITR1
            IF        OVRCD=0
            MOVE      SITRSTAT,FORM1
              IF        FORM1 < 3
                CLEAR     DISPMSG
                APPEND    "ERROR : Acknowledgements have not been",DISPMSG
                APPEND    " loaded. - ",DISPMSG
                BEEP
                CALL      MESSAGE1
                GOTO      EPNUM000
              ENDIF
              IF        FORM1 = 9
                MOVE      "ERROR : Order has been cancelled. - ",DISPMSG
                BEEP
                CALL      MESSAGE1
                GOTO      EPNUM000
              ENDIF
            ENDIF
          ENDIF
.
          CALL      CHKORD00
          BRANCH    EXIT,EPNUM000
.
          MOVE      SIPASUP,KEY5
          CALL      RDAPMA1
          MOVE      SIPAORI,KEY3
          CALL      RDSIOR1
          MOVE      SP70,MESSDESC
          MOVE      SP70,CONFDESC
          MOVE      "ME ",SICDCATA
          PACK      KEY6,SICDCATA,SIPAMES
          CALL      RDSICD1
          IF        OVRCD=0
            MOVE      SICDDESC,MESSDESC
          ENDIF
          MOVE      "CF ",SICDCATA
          PACK      KEY6,SICDCATA,SIPAMES
          CALL      RDSICD1
          IF        OVRCD=0
            MOVE      SICDDESC,CONFDESC
          ENDIF
          CALL      WP00L000
          MOVE      ZERO,ACCEPT
          CALL      DF00L000
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          GOTO      EPNUM900
.
EPNUM200  MOVE      SP70,DISPMSG
          CALL      MESSAGE2
          KEYIN     *P1:24,*EL,"Record Locked - (":
                    *V2LON,"R",*HOFF,")etry or e(":
                    *V2LON,"X",*HOFF,")it ? ",ANS
          CALL      MESSAGE3
          REP       UPPLOW,ANS
          MATCH     ANSR,ANS
          GOTO      EPNUM100 IF EQUAL
          MATCH     ANSX,ANS
          GOTO      EPNUM000 IF EQUAL
          MATCH     ANSE,ANS
          GOTO      EPNUM200 IF NOT EQUAL
          GOTO      EPNUM000
.
EPNUM900  MOVE      ONE,OVRCD
          MOVE      ONE,ACCEPT
          MOVE      ZERO,EXIT
          GOTO      EPNUM999
.
EPNUM950  MOVE      ONE,EXIT
.
EPNUM999  RETURN
.------------------------------------------------------------
. Check for End of Order
. Order Complete when no more deliveries expected
.------------------------------------------------------------
CHKORD00  MOVE      ZERO,EXIT
          PACK      KEY10,SIPAPON,SP70
          CALL      RSSIPC1
.
CHKORD10  CALL      RKSIPC1
          BRANCH    OVRCD,CHKORD50
          MATCH     SIPCPON,SIPAPON
          GOTO      CHKORD50 IF NOT EQUAL
.
          MATCH     SP70,SIPCEDD
          GOTO      CHKORD99 IF NOT EQUAL
.
          MOVE      ONE,SIFACTOR
          PACK      KEY7,SIPCCAT
          CALL      RDSIIA1
          IF        OVRCD=0
            PACK      KEY30,SIIAISS,SIPCSUT
            CALL      RDSIFA1
          ENDIF
.
          IF        SIPCOQT-SIPCRQT/SIFACTOR>0
            GOTO      CHKORD99
          ENDIF
          GOTO      CHKORD10
.
CHKORD50  PACK      SIPADCM,CCC,CYY,CMM,CDD
          REP       " 0",SIPADCM              * Order Complete
          CALL      UPSIPA1
          MOVE      ONE,EXIT
.
          PACK      KEY7,SIPAPON
          CALL      RDSIRP1
          IF        OVRCD=0
            CALL      DESIRP1
          ENDIF
.
CHKORD99  IF        EXIT=1
            UNPACK    SIPADCM,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            CLEAR     DISPMSG
            APPEND    "No Outstanding Details. Order Completed on ",DISPMSG
            APPEND    CPCDATE,DISPMSG
            APPEND    " - ",DISPMSG
            RESET     DISPMSG
            BEEP
            CALL      MESSAGE1
            CALL      UUSIPA1
          ENDIF
          RETURN
ERECD000  CALL      KEYDATE
          PACK      SIPEDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",SIPEDATE
          MOVE      ZERO,EXIT
          CALL      RSIPE000
          IF        OVRCD=1
            MOVE      "Unable to find Processing Period - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      ERECD000
          ENDIF
          IF        SIPELOC=1
            MOVE      "Processing Period Locked - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      ERECD000
          ENDIF
          MOVE      SIPEDATE,DELDATE
          RETURN
.
. Determine Next Receival Number
.
POST0000  MOVE     " 1",NEXTREC
          MOVE     SIPAPON,SIPFPON
          PACK     KEY12,SIPFPON,Z70
          CALL     RSSIPF2
          CALL     RPSIPF2
          IF       OVRCD=0
            MATCH    SIPFPON,SIPAPON
            IF       @EQUAL
              MOVE     SIPFREC,F2
              ADD      ONE,F2
              MOVE     F2,NEXTREC
            ENDIF
          ENDIF
.
. Write Default Details from Ordered Details to Received Details Files
.
          MOVE      ZERO,FGRANTOT
          MOVE      ZERO,STOCKIG
          MOVE      ZERO,SECTOR
          PACK      KEY10,SIPAPON,SP70
          CALL      RSSIPC1
.
POST1000  CALL      RKSIPC1
          BRANCH    OVRCD,POST5000
          MATCH     SIPCPON,SIPAPON
          GOTO      POST5000 IF NOT EQUAL
.
          MATCH     SP70,SIPCEDD
          GOTO      POST1050 IF NOT EQUAL
.
          PACK      KEY12,SIPCPON,SIPCITM,Z70
          CALL      RSSIPF1                    * check if finalised at last rec
.
          CALL      RPSIPF1
          BRANCH    OVRCD,POST1050
          PACK      KEY10,SIPFPON,SIPFITM,Z70
          MATCH     KEY10,KEY12
          GOTO      POST1050 IF NOT EQUAL
.
          MATCH     SP70,SIPFDUP               * updated ?
          GOTO      POST1050 IF EQUAL
          MATCH     SP70,SIPFNDD               * any next delivery date ?
          GOTO      POST1050 IF NOT EQUAL
          GOTO      POST1000
.
POST1050  PACK      KEY7,SIPCCAT
          MOVE      ONE,SIFACTOR
          CALL      RDSIIA1
          IF        OVRCD=0
            PACK      KEY30,SIIAISS,SIPCSUT
            CALL      RDSIFA1
          ENDIF
.
          ASSIGN    SIPCOQT-SIPCRQT/SIFACTOR,SIPFQTY
          IF        SIPFQTY<0
            MOVE      ZERO,SIPFQTY
          ENDIF
.
          MATCH     SP70,SIPCEDD
          IF        @EQUAL & SIPFQTY<=0
            GOTO      POST1000
          ENDIF
.
          ADD      ONE,SECTOR
.
          PACK     SIPFUDT,SIPEYEAR,SIPEPER
          MOVE     SP70,SIPFDUP
          MOVE     SIPCPON,SIPFPON
          MOVE     SIPCITM,SIPFITM
          MOVE     NEXTREC,SIPFREC
          MOVE     DELDATE,SIPFDAT
          MOVE     DELDOCK,SIPFDEL
          MOVE     SIPCECT,SIPFCST
          MOVE     SIPCGSTA,SIPFGST
          MOVE     SIPCSUT,SIPFSUT
          MOVE     SIPCEDD,SIPFEDD
          MOVE     SP70,SIPFNDD
          MOVE     SP70,SIPFSPA
.
          IF       PARTDEL=1
            MOVE     ZERO,SIPFQTY     * default to zero if part delivery
          ENDIF
.
          PACK     KEY12,SIPCCAT,SIPCWAR,SP70
          CALL     SISIWK1
          IF       OVRCD=0
            IF       STOCKIG=0
              BEEP
              CLEAR     DISPMSG
              APPEND    "Items on this P/O are on stocktake ",DISPMSG
              APPEND    "and will be ignored. ",DISPMSG
              RESET     DISPMSG
              CALL      MESSAGE4
              BRANCH    EXIT,POST6000
              MOVE      ONE,STOCKIG
            ENDIF
            GOTO     POST1000
          ENDIF
.
          PACK     KEY12,SIPFPON,SIPFITM,SIPFREC
          CALL     RASIPF1
          IF       OVRCD=1
            CALL     WRSIPF1
            MOVE     ONE,AUDTTYPE
            CALL     WASIPF00
            MOVE     SIPFQTY,WHOLEQTY
            ASSIGN   SIPFQTY*SIPFCST,F12P2
            ADD      F12P2,FGRANTOT
          ELSE
            MOVE     "Fatal Error in Receivals File - ",DISPMSG
            CALL     MESSAGE1
            GOTO     FATALERR
          ENDIF
          GOTO     POST1000
.
POST5000  MOVE     "(999,999,999,999.99 ",GRANDTOT
          FEDIT    FGRANTOT,GRANDTOT
.
          CALL     SC01L000
          GOTO     POST9999
.
POST6000
.
POST9999  RETURN
.------------------------------------------------------------
. Read Receival Qty
.------------------------------------------------------------
REDITM00  PACK      KEY10,SIPFPON,SIPFITM
          CALL      RDSIPC1
.
          MOVE      SIPFQTY,WHOLEQTY
          IF        SIPFCST<0
            MOVE       "        T.B.A.",UNITCOST
            MOVE       "        T.B.A.",TRANCOST
            MOVE       ZERO,TOTALGST
            MOVE       ZERO,TOTALCST
          ELSE
            MOVE       "9,999,999.9999",UNITCOST
            FEDIT      SIPFCST,UNITCOST
            MATCH      "*",UNITCOST
            IF         @EQUAL
              MOVE       "999999999.9999",UNITCOST
              FEDIT      SIPFCST,UNITCOST
            ENDIF
.
            ASSIGN     SIPFCST*SIPFQTY,F12P2
            MOVE       "999,999,999.99",TRANCOST
            FEDIT      F12P2,TRANCOST
            MATCH      "*",TRANCOST
            IF         @EQUAL
              MOVE       "99999999999.99",TRANCOST
              FEDIT      F12P2,TRANCOST
            ENDIF
          ENDIF
.
          MATCH     SP70,SIPFNDD
          IF        @EQUAL
            MOVE      "Not App.",NEXTDATE
          ELSE
            UNPACK    SIPFNDD,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            MOVE      CPCDATE,NEXTDATE
          ENDIF
.
          IF        SIPFCST<0
            MOVE      "        T.B.A.",UNITCOST
          ELSE
            MOVE      "9,999,999.9999",UNITCOST
            FEDIT     SIPFCST,UNITCOST
            MATCH     "*",UNITCOST
            IF        @EQUAL
              MOVE      SIPFCST,F9P4
              MOVE      F9P4,UNITCOST
            ENDIF
          ENDIF
.
          MOVE      ZERO,F12P4
          ASSIGN    SIPFGST*SIPFQTY,F12P4
          MOVE      F12P4,TOTALGST
          MOVE      ZERO,F12P4
          ASSIGN    SIPFCST*SIPFQTY,F12P4
          MOVE      F12P4,TOTALCST
          MATCH     SP70,SIPCCAT
          GOTO      REDITM50 IF EQUAL
.
          MOVE      SP70,SIIADES
          PACK      KEY7,SIPCCAT
          CALL      RDSIIA1
.
          PACK      KEY27,SIPCCAT,SIPASUP,SIPCSUT
          CALL      RDSIIC1
.
          MOVE      SIICPNO,SIPCPN
          MOVE      SIICPD1,SIPCPD
          CLEAR     TRANDESC
          APPEND    SIIACAT,TRANDESC
          APPEND    SP1,TRANDESC
          APPEND    SIIADES,TRANDESC
          RESET     TRANDESC
.
          PACK      KEY12,SIPCCAT,SIPCWAR
          CALL      RDSIIE1
.
          MOVE      ONE,SIFACTOR
          PACK      KEY30,SIIAISS,SIPCSUT
          CALL      RDSIFA1
          ASSIGN    SIPCOQT-(SIPCRQT/SIFACTOR),OUTQTY
          ASSIGN    SIPCRQT/SIFACTOR,RECQTY
          MOVE      OUTQTY,WHOLETQT
          MOVE      RECQTY,WHOLERQT
          MOVE      SIPCOQT,WHOLEOQT
.
          GOTO      REDITM99
.
REDITM50  CLEAR     TRANDESC
          APPEND    SIPCPD,TRANDESC
          RESET     TRANDESC
          ASSIGN    SIPCOQT-SIPCRQT,OUTQTY
          ASSIGN    SIPCRQT,RECQTY
          MOVE      OUTQTY,WHOLETQT
          MOVE      RECQTY,WHOLERQT
          MOVE      SIPCOQT,WHOLEOQT
.
REDITM99  RETURN
SELITM00
          MOVE      SIPF2MKY,KEY12
          CALL      RDSIPF2
          IF        OVRCD=1
            BEEP
            MOVE      "Item Not Found - ",DISPMSG
            CALL      MESSAGE1
            GOTO      SELITM99
          ENDIF
          MOVE      TWO,AUDTTYPE
          CALL      WASIPF00
.
          PACK      KEY10,SIPFPON,SIPFITM
          CALL      RDSIPC1
.
          CALL      REDITM00
.
          CALL      SC02L000
.
SELITM99  RETURN
.
.----------------------------------------------------------------------
. Enter Line Number
.----------------------------------------------------------------------
SELIN000  PACK      KEY12,SIPAPON,NEXTREC,SCSLSEL,SP70
          CALL      RDSIPF2
          IF        OVRCD=1
            MOVE      "Invalid Selection - ",DISPMSG
            BEEP
            CALL      MESSAGE1
          ELSE
            MOVE      ZERO,SIICCONT
            PACK      KEY27,SIPCCAT,SIPASUP,SIPCSUT,SP70
            CALL      RDSIIC1
            MOVE      SIPFQTY,REOLDQTY        * to save it for Cancel CAN20000
            MOVE      TWO,AUDTTYPE
            CALL      WASIPF00
            MOVE      ZERO,HLEF
            CALL      GETSCR00
            CALL      REDITM00
            CALL      SC02L000
            MOVE      "01",SCRID
            MOVE      ZERO,PRCOL
            MOVE      ZERO,PRVERT
            MOVE      "   24",FLDID
            CALL      GETPOSIT
            IF        EXIT=0
              MOVE     SCPSCOL,PRCOL
              MOVE     SCPSROW,PRVERT
            ENDIF
            CALL      PUTSCR00
            MOVE      SIPFQTY,WHOLEQTY
          ENDIF
.
          CALL      FP01L000
.
SELIN999  RETURN
.----------------------------------------------------------------------
. Delete Item From Invoice Order Details
.----------------------------------------------------------------------
REMOVE00
          PACK      DISPMSG,SP70,SP70
          CALL      MESSAGE2
.
REMOVE10
          KEYIN     *P1:24,*EL,"Select Item to Delete   :        ":
                    "(",*V2LON,"0",*HOFF," to Exit)":
                    *P27:24,*V2LON,F3;
.
          COMPARE   ZERO,F3
          GOTO      REMOVE99 IF EQUAL
.
          PACK      KEY12,SIPAPON,NEXTREC,F3,SP70
          CALL      RDSIPF2
          IF        OVRCD=1
            MOVE      "Invalid Selection - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      REMOVE10
          ELSE
            ASSIGN    SIPFQTY*SIPFCST,F12P2
            SUB       F12P2,FGRANTOT
.
            MOVE      "(999,999,999,999.99 ",GRANDTOT
            FEDIT     FGRANTOT,GRANDTOT
.
            CALL      DESIPF2
            MOVE      FOUR,AUDTTYPE           * Delete type for audit
            CALL      WASIPF00                * Write delete audit record
.
            CALL      FP01L000
.
            MOVE      "   29",FLDID
            CALL      GETPOSIT
            IF        EXIT=0
              MOVE      GRANDTOT,VAR
              CALL      DISPITEM
            ENDIF

          ENDIF
.
REMOVE99
          CALL      MESSAGE3
          RETURN
.
.----------------------------------------------------------------------
. Process Receival
.------------------
. PARTDEL   FORM 1  1=part delivery in progress
. HAVGCOST  FORM 1  When to Calculate Average Cost  1=Receivals
.                                                   2=Invoice
. HBACK     FORM 1  Running Backordering            0=No
. HACCNT    FORM 1  Running the Accounting System   0=No
. HACCDATA  DIM  20 General Ledger Data Directory
.----------------------------------------------------------------------
PROC0000  DISPLAY   *P1:24,*EL,"Scanning : "
          PACK      SKEY12,SIPAPON,NEXTREC,SP70
          MOVE      "99",CLNO
          MOVE      ZERO,CPAGENO
          MOVE      ZERO,PRTORDT
          CLOCK     TIME,CTIMEIS
          MOVE      ZERO,F3
.
PROC1000  PACK      KEY12,SKEY12,SP70
          CALL      RSSIPF2
          CALL      RKSIPF2            * Loop Through Each Item Received
          BRANCH    OVRCD,PROC9999     * End of Receival
          MATCH     SIPFPON,SIPAPON    * End of Receival
          GOTO      PROC9999 IF NOT EQUAL
          MATCH     SIPFREC,NEXTREC    * End of Receival
          GOTO      PROC9999 IF NOT EQUAL
.
          PACK      SKEY12,SIPFPON,SIPFREC,SIPFITM,SP70
          IF        PARTDEL=1 & SIPFQTY<=0
            PACK      KEY12,SKEY12,SP70
            CALL      DESIPF2          * delete if nothing received in part del
            MOVE      FOUR,AUDTTYPE    * Delete type for audit
            CALL      WASIPF00         * Write delete audit record
            GOTO      PROC1000
          ENDIF
.
          PACK      KEY10,SIPFPON,SIPFITM
          CALL      RDSIPC1
          IF        OVRCD=1
            BEEP
            CLEAR     DISPMSG
            APPEND    "ERROR - Item ",DISPMSG
            APPEND    SIPFITM,DISPMSG
            APPEND    " Missing from sinpocaf - ",DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
            PACK      KEY12,SKEY12,SP70
            CALL      DESIPF2          * delete if nothing received in part del
            MOVE      FOUR,AUDTTYPE    * Delete type for audit
            CALL      WASIPF00         * Write delete audit record
            GOTO      PROC1000
          ENDIF
.
          DISPLAY   *P14:24,KEY10
.
          PACK      KEY12,SIPCCAT,SIPCWAR,SP70
          CALL      SISIWK1
          IF        OVRCD=0
            BEEP
            CLEAR     DISPMSG
            APPEND    "ERROR - Catalog/Warehouse ",DISPMSG
            APPEND    SIPCCAT,DISPMSG
            APPEND    SLASH,DISPMSG
            APPEND    SIPCWAR,DISPMSG
            APPEND    " on Stocktake - ",DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
            PACK      KEY12,SKEY12,SP70
            CALL      DESIPF2          * delete if nothing received in part del
            MOVE      FOUR,AUDTTYPE    * Delete type for audit
            CALL      WASIPF00         * Write delete audit record
            GOTO      PROC1000
          ENDIF
.
..          MOVE      TWO,AUDTTYPE       * Before change ... no errors
..          CALL      WASIPF00           * Write the before record
.
          ADD       ONE,F3
.
          MATCH     SP70,SIPCCAT
          GOTO      PROC5000 IF EQUAL  * Item Not Cataloged
.
          MOVE      SIPCCAT,KEY7
          CALL      RDSIIA1            * Get Catalog Details
          BRANCH    OVRCD,PROC5000
.
          MOVE      ONE,SIFACTOR
          PACK      KEY30,SIIAISS,SIPFSUT
          CALL      RDSIFA1            * Determine Total Received Issue Units
          ASSIGN    SIPFQTY*SIFACTOR,TOTALREC
          ASSIGN    SIPCOQT*SIFACTOR-SIPCRQT,TOTALOUT
          IF        TOTALOUT<0
            MOVE      ZERO,TOTALOUT
          ENDIF
.
          MATCH     SP70,SIPCCON        * Update Any Contract Details
          CALL      UPCON000 IF NOT EQUAL
.
          IF        HAVGCOST=1
            CALL      UPAVG000         * Average Cost Update
          ENDIF
.
          IF        HLASTCIN=1
            CALL      UPLST000
          ENDIF
.
          BRANCH    SIIANON,PROC5100   * Item Not Stocked
.
          CALL      UPORD000           * Update Order Details
          CALL      USOH0000           * Update Stock on Hand and Item History
          IF        HBACK=1 & TOTALREC>0
            CALL      BACK0000         * Process Back Orders
          ENDIF
          CALL      UUSIIE1            * Unlock Catalog/Warehouse Record
.
          IF        HACCNT=1
            CALL      USAPS000         * Update Accounts Payable Details
          ENDIF
          GOTO      PROC6000           * Next
.
. Non-Catalog Item
.------------------
PROC5000  MOVE      SIPFQTY,TOTALREC   * No Factor to Take Into Account
.
. Non-Stock
.----------
PROC5100  CALL      UPORD000           * Update Order Details
          IF        HACCNT=1
            CALL      UNAPS000         * Update Accounts Payable Details
          ENDIF
          CALL      UPNON000           * Update Non-Stock Details
         GOTO      PROC6000
.
PROC6000  IF        CEAFILE=0 & HACCNT=1
            CALL      UPCEA000
          ENDIF
.
          PACK      SIPFDUP,CCC,CYY,CMM,CDD
          REP       " 0",SIPFDUP
          CALL      UPSIPF2            * Update Receival File
.
..          MOVE      THREE,AUDTTYPE     * After Update Audit Record
..          CALL      WASIPF00
          IF        SNCOPPR=1
            CALL      PRTLIN00         * Print Receival Docket
          ENDIF
          GOTO      PROC1000           * Next Item
.
PROC9999  CALL      ORDEND00           * Check to see if Order Complete
          IF        F3=0
            MOVE      "WARNING: No Receivals Were Updated - ",DISPMSG
            BEEP
            CALL      MESSAGE1
          ELSE
            IF        SNCOPPR=1
              CALL      PRTEND00         * Print Receival Docket
            ENDIF
          ENDIF
          RETURN
.
PRTLIN00  COMPARE   "50",CLNO
          CALL      PRTHED00 IF NOT LESS
.
          MOVE      SIPCPRD,KEY5
          CALL      RDSISA1
.
          MOVE      SP70,SIICPD1
          MOVE      SP70,SIICPD2
          MOVE      SP70,SIIERAS
          PACK      SIICPD1,SIPCPD,SP70
          MOVE      ONE,SIFACTOR
          MOVE      ONE,SIIANON
          MATCH     SP70,SIPCCAT
          IF        !(@EQUAL)
            MOVE      SIPCCAT,KEY7
            CALL      RDSIIA1
            PACK      KEY27,SIPCCAT,SIPASUP,SIPCSUT,SP70
            CALL      RDSIIC1
          ENDIF
          IF        SIIANON=0
            PACK      KEY12,SIPCCAT,SIPCWAR,SP70
            CALL      RDSIIE1
            MOVE      SIPCWAR,KEY5
            CALL      RDSIWA1
          ELSE
            MOVE      SIPCCST,KEY5
            CALL      RDSICA1
          ENDIF
          PACK      KEY30,SIIAISS,SIPCSUT
          CALL      RDSIFA1
          IF        OVRCD=1
            MOVE      ONE,SIFACTOR
          ENDIF
.
.          COMPARE   SIPCRQT,ZERO
.          IF        !@EQUAL
.            ASSIGN    SIPCOQT-(SIPCRQT/SIFACTOR),OUTSTQTY
.          ENDIF
.
          MOVE      "99,999,999.99",PRTREC
          FEDIT     SIPFQTY,PRTREC
          MOVE      "999,999.99",PRTORD
          FEDIT     SIPCOQT,PRTORD
          IF        SIPFCST<0
            MOVE      "       T.B.A.",PRTCST
            MOVE      "         T.B.A.",PRTTOT
            MOVE      ZERO,F12P2
          ELSE
            MOVE      "999,999.9999",PRTCST
            FEDIT     SIPFCST,PRTCST
            ASSIGN    SIPFQTY*SIPFCST,F12P2
            ADD       F12P2,PRTORDT
            MOVE      "9999,999,999.99",PRTTOT
            FEDIT     F12P2,PRTTOT
          ENDIF
          ADD       F12P2,TOTALORD
          IF        SIIANON=0
            MOVE      SIPCWAR,KEY5
            MOVE      SIWADES,KEY30
          ELSE
            MOVE      SIPCCST,KEY5
            MOVE      SICADESC,KEY30
            MOVE      SP70,SIIERAS
          ENDIF
.
          IF        HRECPRT=2
            PRINT     *1,SIPCITM,*5,SIPCCAT,SP1,SIPCPN,SP1:
                         KEY5,SP1,KEY30,SP1,*84,SISACOMM,*90,SIIERAS:
                         *105,SIPCUR2:
                      *N,*5,SIICPD1,PRTORD,SP2,PRTCST,SIPCSUT:
                         PRTREC,PRTTOT
          ELSE
            PRINT     *1,SIPCITM,*5,SIPCCAT,SP1,SIPCPN,SP1:
                         KEY5,SP1,KEY30,SP1,*84,SIPCPRD,*90,SIIERAS:
                         *105,SIPCUR2:
                      *N,*5,SIICPD1,PRTORD,SP2,PRTCST,SIPCSUT:
                         PRTREC,PRTTOT
          ENDIF
          ADD       TWO,CLNO
          MATCH     SIICPD2,SP70
          GOTO      PRTLIN99 IF EQUAL
          PRINT     *5,SIICPD2
          ADD       ONE,CLNO
.
PRTLIN99  RETURN
.
PRTHED00  CALL      HEAD132
          UNPACK    SP70,APMASN1,APMASN2    * get supplier details
          UNPACK    SP70,APMASA1,APMASA2
          UNPACK    SP70,APMASA3,APMASPC,APMASTEL,APMASFAX
          PACK      KEY5,SIPASUP,SP70
          CALL      RDAPMA1
.
          MOVE      SP70,SICDDESC           * get message code
          MATCH     SP70,SIPAMES
          IF        !@EQUAL
            MOVE      "ME ",KEY3
            PACK      KEY6,KEY3,SIPAMES
            CALL      RDSICD1
          ENDIF
.
          CALL      PSNAME00
.
          PRINT     *N,"Purchase Order : ",SIPAPON:
                    *N,"Supplier       : ",SUPNAM70,*98,"Code  : ",SIPASUP:
                    *N,"               : ",SUPADD90:
                    *N,"Phone          : ",APMASTEL,"  Fax : ",APMASFAX:
                     "    Contact        : ",SIPASCN:
                    *N,"Delivery Point : ",SIPADEL:
                       "  Message        : ",SICDDESC:
                    *N,"Int. Delivery  : ",SIPAIDP:
                       "  Int. Contact   : ",SIPAICN
          CALL      UND132
          IF        HRECPRT=2
            PRINT     "Item Catalog Part Number                    Warehou":
                      "se/Cost Centre              Commodity Rack & Shelf ":
                      "  Internal Delivery           ",*N:
                      "     Part Description                              ":
                      "            Qty Ordered     Unit Cost Supply Unit  ":
                      "   Qty Received     Total Cost"
          ELSE
            PRINT     "Item Catalog Part Number                    Warehou":
                      "se/Cost Centre          Product Group Rack & Shelf ":
                      "  Internal Delivery           ",*N:
                      "     Part Description                              ":
                      "            Qty Ordered     Unit Cost Supply Unit  ":
                      "   Qty Received     Total Cost"
          ENDIF
          CALL      UND132
          RETURN
.
PRTEND00  CALL      UND132
          MOVE      "9999,999,999.99",KEY15
          FEDIT     PRTORDT,KEY15
          MATCH     SP70,SIPADCM
          IF        @EQUAL
            PRINT     "Order NOT Completed ";
          ELSE
            UNPACK    SIPADCM,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            PRINT     "Order Completed on ",CPCDATE;
          ENDIF
          PRINT     *60,"Order Total Received",*118,KEY15
          CALL      UND132
.
          PRINT     *N,*5,"Received By : ",UNDLN30:
                    *60,"Date :  __/__/__",*85,"Packing Slip => ",DELDOCK,*N:
                    *N,*85,"Invoice No.  => ",UNDLN10,*N
.
          RETURN
.------------------------------------------------------------
. Pack Name and Address for Printing
.------------------------------------------------------------
PSNAME00  STRIP    APMASN1
          STRIP    APMASN2
          CLEAR    SUPNAM70
          APPEND   APMASN1,SUPNAM70
          APPEND   SP1,SUPNAM70
          APPEND   APMASN2,SUPNAM70
          RESET    SUPNAM70
.
          STRIP    APMASA1
          STRIP    APMASA2
          STRIP    APMASA3
          STRIP    APMASPC
          CLEAR    SUPADD90
          APPEND   APMASA1,SUPADD90
          APPEND   SP1,SUPADD90
          APPEND   APMASA2,SUPADD90
          APPEND   SP1,SUPADD90
          APPEND   APMASA3,SUPADD90
          APPEND   SP1,SUPADD90
          APPEND   APMASPC,SUPADD90
          RESET    SUPADD90
          RETURN
.------------------------------------------------------------
. Update Contract Purchases
.------------------------------------------------------------
UPCON000  PACK      KEY37,SIPCCON,SIPASUP,SIPCCAT,SIPCSUT
          CALL      RDSISF1
          IF        OVRCD=0
            ADD       TOTALREC,SISFAQT
            ASSIGN    SISFAPC+(SIPFCST*SIPFQTY),SISFAPC
            CALL      UPSISF1
          ENDIF
          RETURN
.--------------------------------------------------
. Update Average Costs
.--------------------------------------------------
UPAVG000  CALL      TOTSOH00
          MOVE      ZERO,SECTOR
UPAVG100  MOVE      SIPCCAT,KEY7
          CALL      RLSIIA1
          BRANCH    OVRCD,UPAVG999,UPAVG200
          PACK      KEY30,SIIAISS,SIPCSUT,SP70
          MOVE      ONE,SIFACTOR
          MOVE      SIPFCST,F12P4
          SUB       SIPFGST,F12P4
          CALL      RDSIFA1
          IF        SIIANON=0
            ASSIGN    (TOTALSOH*SIIAAVC)+(SIPFQTY*F12P4),TOTALVAL
            ASSIGN    TOTALSOH+TOTALREC,TOTALSOH
            ASSIGN    TOTALVAL/TOTALSOH,SIIAAVC
          ELSE
            ASSIGN    (F12P4/SIFACTOR),SIIAAVC
          ENDIF
          CALL      UPSIIA1
          CALL      UUSIIA1
          GOTO      UPAVG999
.
UPAVG200  IF        SECTOR<5
            DISPLAY    *P1:24,*W
            ADD        ONE,SECTOR
            GOTO       UPAVG100
          ENDIF
          CLEAR     DISPMSG
          APPEND    "Catalog Record Locked : ",DISPMSG
          APPEND    SIPCCAT,DISPMSG
          APPEND    " - ",DISPMSG
          RESET     DISPMSG
          CALL      MESSAGE1
          MOVE      ZERO,SECTOR
          GOTO      UPAVG100
.
UPAVG999  RETURN
.--------------------------------------------------
. Update Last Costs
.--------------------------------------------------
UPLST000  MATCH     SP70,SIPCCAT       * No Catalog then Can't Update
          GOTO      UPLST999 IF EQUAL
          MATCH     SIPCSUT,SIPFSUT
          GOTO      UPLST999 IF NOT EQUAL
          PACK      KEY27,SIPCCAT,SIPASUP,SIPCSUT
          CALL      RDSIIC1
          IF        OVRCD=0
            MATCH     "1",SIICCONT
            IF        !@EQUAL
              MOVE      SIPFCST,SIICLCT
              CALL      UPSIIC1
            ENDIF
          ELSE
            MOVE      "ERROR : Last Cost Not Updated. ",DISPMSG
            BEEP
            CALL      MESSAGE1
          ENDIF
.
UPLST999  RETURN
.--------------------------------------------------
. Total Stock on Hand
.--------------------------------------------------
TOTSOH00  PACK      KEY12,SIIACAT,SP70
          MOVE      ZERO,TOTALSOH
          CALL      RSSIIE1
TOTSOH10  CALL      RKSIIE1
          BRANCH    OVRCD,TOTSOH90
          MATCH     SIIECAT,SIIACAT
          GOTO      TOTSOH90 IF NOT EQUAL
          ADD       SIIESOH,TOTALSOH
          GOTO      TOTSOH10
TOTSOH90  RETURN
.----------------------------------------------------------------------
. Update Order Details
.----------------------------------------------------------------------
UPORD000  PACK      KEY10,SIPFPON,SIPFITM
          CALL      RDSIPC1
          IF        OVRCD=1
            BEEP
            CLEAR     DISPMSG
            APPEND    "Invalid Receival Item. Key : ",DISPMSG
            APPEND    KEY10,DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
            GOTO      UPORD999
          ENDIF
.
          MATCH     SP70,SIPCFDD
          IF        @EQUAL
            MOVE      SIPFDAT,SIPCFDD     * First Delivery Date
          ENDIF
          MOVE      SIPFNDD,SIPCEDD
          ADD       TOTALREC,SIPCRQT
          IF        SIPFCST<0
            MOVE      SEQ,SIPCTCR
            MOVE      ZERO,SIPCTGS
          ELSE
            ASSIGN    SIPCTCR+(SIPFQTY*SIPFCST),SIPCTCR
            ASSIGN    SIPCTGS+(SIPFQTY*SIPFGST),SIPCTGS
          ENDIF
          CALL      UPSIPC1
.
UPORD999  RETURN
.----------------------------------------------------------------------
. Update Stock on Hand and Item History
.----------------------------------------------------------------------
USOH0000  MOVE      ZERO,SECTOR
.
USOH1000  PACK      KEY12,SIPCCAT,SIPCWAR
          CALL      RLSIIE1
          BRANCH    OVRCD,USOH9999,USOH2000
          ASSIGN    SIIESOH+TOTALREC,SIIESOH
.
          MATCH     SP70,SIPFNDD
          IF        @EQUAL
            IF        SIIESOO>TOTALOUT
              ASSIGN    SIIESOO-TOTALOUT,SIIESOO
            ELSE
              ASSIGN    ZERO,SIIESOO
            ENDIF
          ELSE
            IF        TOTALREC>TOTALOUT
              IF        SIIESOO>TOTALOUT
                ASSIGN    SIIESOO-TOTALOUT,SIIESOO
              ELSE
                ASSIGN    ZERO,SIIESOO
              ENDIF
            ELSE
              IF        SIIESOO>TOTALREC
                ASSIGN    SIIESOO-TOTALREC,SIIESOO
              ELSE
                ASSIGN    ZERO,SIIESOO
              ENDIF
            ENDIF
          ENDIF
.
          CALL      UPSIIE1   * Update Stock on Hand
.
          IF        SIIAREX=1
            CALL      GETEXP00                     * Record Expiry Details
          ENDIF
.
          PACK      SIITPER,SIPEYEAR,SIPEPER
          MOVE      SIPCWAR,SIITWAR                * Warehouse
          MOVE      SIPCCAT,SIITCAT                * Catalog
          ASSIGN    TOTALREC,SIITQTY               * Quantity
          MOVE      SIPFCST,F12P4
          SUB       SIPFGST,F12P4
          ASSIGN    SIPFQTY*F12P4,SIITAMT
          IF        SIPFCST<0
            MOVE      SEQ,SIITAMT
          ENDIF
          MOVE      SIPCCST,SIITCST                * Cost Centre
          PACK      SIITREQ,SP70
          MOVE      "4",SIITTYP                    * Receival
          MOVE      SIPFPON,SIITPUR
          MOVE      SIPFREC,SIITREF
          MOVE      SIIESOH,SIITSOH                * Stock on Hand
          MOVE      SP70,SIITSPA
.
          MOVE      PRGID,SIITPRG
          MOVE      PORT,SIITPOR
          MOVE      PASSCODE,SIITOPR
          PACK      SIITDAT,CCC,CYY,CMM,CDD
          REP       " 0",SIITDAT
          REPEAT
            CLOCK     TIME,SIITTIM
            PACK      KEY28,SIITWAR,SIITCAT,SIITDAT,SIITTIM,SP70
            CALL      RASIIT1
          UNTIL     OVRCD=1
          CALL      WRSIIT1
.
          MOVE      ONE,CALLPNT              *srf 127749
          CALL      CHKITM00                 *srf 127749
.
          ASSIGN    TOTALREC,SIUSQTY
          IF        SIPFCST<0
            MOVE      ZERO,SIUSCST
          ELSE
            IF        SNCOPURC=1
              MOVE      SIPFCST,F12P4
              ASSIGN    SIPFQTY*F12P4,SIUSCST
            ELSE
              MOVE      SIPFCST,F12P4
              SUB       SIPFGST,F12P4
              ASSIGN    SIPFQTY*F12P4,SIUSCST
            ENDIF
          ENDIF
.
          CALL      SINRECUS                 * Update Receival Usage
.
          CALL      UPOUS000                 * Update Order Usage Details
.
          GOTO      USOH9999
.
USOH2000  IF        SECTOR<5
            DISPLAY    *P1:24,*W
            ADD        ONE,SECTOR
            GOTO       USOH1000
          ENDIF
          CLEAR     DISPMSG
          APPEND    "Warehouse/Catalog Record Locked : ",DISPMSG
          APPEND    SIPCWAR,DISPMSG
          APPEND    "/",DISPMSG
          APPEND    SIPCCAT,DISPMSG
          APPEND    " - ",DISPMSG
          RESET     DISPMSG
          CALL      MESSAGE1
          MOVE      ZERO,SECTOR
          GOTO      USOH1000
.
USOH9999  RETURN
.------------------------------------------------------------
. Record Expiry Details
.------------------------------------------------------------
GETEXP00  MOVE      "11",HTOP
          MOVE      "1",HLEF
          MOVE      "80",HRIG
          MOVE      "24",HBOT
          CALL      GETSCR00
          MOVE      ZERO,HTOP
          MOVE      ZERO,HLEF
          MOVE      ZERO,HRIG
          MOVE      ZERO,HBOT
.
          MOVE      ZERO,EXPQTY
          MOVE      SP70,EXPDAT
          MOVE      SP70,EXPREF
          MOVE      ZERO,EXPQTY1
          MOVE      ZERO,EXPQTY2
          MOVE      ZERO,EXPQTY3
          MOVE      ZERO,EXPQTY4
          MOVE      ZERO,EXPQTY5
          MOVE      SP70,EXPDAT1
          MOVE      SP70,EXPDAT2
          MOVE      SP70,EXPDAT3
          MOVE      SP70,EXPDAT4
          MOVE      SP70,EXPDAT5
          MOVE      SP70,EXPREF1
          MOVE      SP70,EXPREF2
          MOVE      SP70,EXPREF3
          MOVE      SP70,EXPREF4
          MOVE      SP70,EXPREF5
          DISPLAY   *P1:11,*EF
          HLINE     *G37,11,1,80
          DISPLAY   *P5:13,*V2LON,*ULON,"Expiry Dates Recording",*HOFF:
                    *P5:14,"Catalog    : ",*V2LON,SIIACAT,*HOFF,SP1,SIIADES:
                    *P5:15,"Issue Unit : ",*V2LON,SIIAISS,*HOFF:
                   *P27:16,"Received   : ",*V2LON,TOTALREC:
                   *P1:18,*V2LON," 1. ",*HOFF,"Qty : ":
                   *P27:18,"Date : ":
                   *P45:18,"Batch Ref. : ":
                   *P1:19,*V2LON," 2. ",*HOFF,"Qty : ":
                   *P27:19,"Date : ":
                   *P45:19,"Batch Ref. : ":
                   *P1:20,*V2LON," 3. ",*HOFF,"Qty : ":
                   *P27:20,"Date : ":
                   *P45:20,"Batch Ref. : ":
                   *P1:21,*V2LON," 4. ",*HOFF,"Qty : ":
                   *P27:21,"Date : ":
                   *P45:21,"Batch Ref. : ":
                   *P1:22,*V2LON," 5. ",*HOFF,"Qty : ":
                   *P27:22,"Date : ":
                   *P45:22,"Batch Ref. : "
          MOVE      ZERO,CCITEM
          MOVE      ONE,ACCEPT
          MOVE      TOTALREC,EXPQTY
.
GETEXP10  BRANCH    ACCEPT,GETEXP15
          CALL      MAINQST
          COMPARE   ZERO,CCITEM
          GOTO      GETEXP90 IF EQUAL  * Post
          COMPARE   SEQ,CCITEM
          GOTO      GETEXP00 IF EQUAL  * Cancel
          BRANCH    CCITEM,GETEXP20,GETEXP20,GETEXP20,GETEXP20,GETEXP20
.
          BEEP
          GOTO      GETEXP10
GETEXP15  ADD       ONE,CCITEM
          IF        CCITEM=6
            MOVE      ZERO,ACCEPT
            GOTO      GETEXP10
          ENDIF
.
GETEXP20  MOVE      "17",CVERT
          ADD       CCITEM,CVERT
          ASSIGN    TOTALREC-EXPQTY1-EXPQTY2-EXPQTY3-EXPQTY4-EXPQTY5,EXPQTY
          KEYIN     *P11:CVERT,*V2LON,*RV,EXPQTY:
                    *P11:CVERT,*V2LON,*DV,EXPQTY
          IF        EXPQTY=0
            MOVE      ZERO,EXPQTY
            MOVE      SP70,EXPDAT
            MOVE      SP70,EXPREF
            DISPLAY   *P11:CVERT,*V2LON,EXPQTY:
                      *P34:CVERT,*V2LON,SP10:
                      *P58:CVERT,*V2LON,EXPREF
            MOVE      ZERO,ACCEPT
            GOTO      GETEXP50
          ENDIF
GETEXP25  MOVE      "34",CCOL
          CALL      KEYDATE
          BRANCH    OVRCD,GETEXP20
          PACK      EXPDAT,CCENT,CYEAR,CMON,CDAY
          REP       " 0",EXPDAT
.
          KEYIN     *P58:CVERT,*V2LON,*MASK,EXPREF:
                    *P58:CVERT,*V2LON,*DV,EXPREF
.
GETEXP50  STORE     EXPQTY,CCITEM,EXPQTY1,EXPQTY2,EXPQTY3,EXPQTY4,EXPQTY5
          STORE     EXPDAT,CCITEM,EXPDAT1,EXPDAT2,EXPDAT3,EXPDAT4,EXPDAT5
          STORE     EXPREF,CCITEM,EXPREF1,EXPREF2,EXPREF3,EXPREF4,EXPREF5
          GOTO      GETEXP10
.
GETEXP90  ASSIGN    TOTALREC-EXPQTY1-EXPQTY2-EXPQTY3,EXPQTY4-EXPQTY5,EXPQTY
          IF        !(EXPQTY=0)
            DISPLAY   *P1:24,*EL,"All Stock Must be Entered - ";
            CALL      HITENTER
            GOTO      GETEXP10
          ENDIF
          MOVE      ZERO,CCITEM
.
GETEXP95  ADD       ONE,CCITEM
          COMPARE   SIX,CCITEM
          GOTO      GETEXP99 IF EQUAL
          LOAD      EXPQTY,CCITEM,EXPQTY1,EXPQTY2,EXPQTY3,EXPQTY4,EXPQTY5
          COMPARE   ZERO,EXPQTY
          GOTO      GETEXP95 IF EQUAL
          LOAD      EXPDAT,CCITEM,EXPDAT1,EXPDAT2,EXPDAT3,EXPDAT4,EXPDAT5
          LOAD      EXPREF,CCITEM,EXPREF1,EXPREF2,EXPREF3,EXPREF4,EXPREF5
          PACK      KEY27,SIIEWAR,SIIECAT,SIPAPON,EXPDAT
          CALL      RDSIII1
          IF        OVRCD=0
            ADD       EXPQTY,SIIIQR
            CALL      UPSIII1
          ELSE
            UNPACK    KEY27,SIIIWAR,SIIICAT,SIIIPUR,SIIIDAT
            MOVE      EXPQTY,SIIIQR
            MOVE      EXPREF,SIIIBAT
            MOVE      SP70,SIIISPA
            MOVE      ZERO,SIIIQI
            ASSIGN    (SIPFQTY*SIPFCST)/TOTALREC,SIIIUCT
            CALL      WRSIII1
          ENDIF
          GOTO      GETEXP95
.
GETEXP99  CALL      PUTSCR00
          RETURN
.------------------------------------------------------------
. Update APSCEAAF
.------------------------------------------------------------
UPCEA000  MOVE      HORDDES,APEBISC  * System Prefix
          MOVE      SIPFPON,APEBORD
          PACK      APEBCAT,SIPFITM,SP70
          PACK      KEY14,APEBISC,APEBORD,APEBCAT,SP70
          CALL      RDAPEB1
          BRANCH    OVRCD,UPCEA999
.
          MATCH     SP70,SIPFNDD
          IF        @EQUAL | SIPFQTY>APEBQTY
            ASSIGN    APEBQTY,MODQTY
          ELSE
            ASSIGN    SIPFQTY,MODQTY
          ENDIF
.
          MOVE      SIPADIN,APEADAT
          ASSIGN    SEQ*MODQTY*APEBUCT,APEBAMT
          ASSIGN    SEQ*MODQTY*APEBUGS,APEBGST
          CALL      XFMFP000         * update committed expenditure
.
          ASSIGN    APEBQTY-MODQTY,APEBQTY
          ASSIGN    APEBQTY*APEBUCT,APEBAMT
          ASSIGN    APEBQTY*APEBUGS,APEBGST
          IF        APEBQTY>0
            CALL      UPAPEB1
          ELSE
            PACK      KEY14,APEBISC,APEBORD,APEBCAT,SP70
            CALL      DEAPEB1
            PACK      KEY8,APEBISC,APEBORD,SP70
            PACK      KEY14,KEY8,SP70
            UNPACK    SP70,APEBISC,APEBORD
            CALL      RSAPEB1
            CALL      RKAPEB1
            PACK      KEY14,APEBISC,APEBORD,APEBCAT,SP70
            MATCH     KEY14,KEY8
            IF        !@EQUAL
              CALL      DEAPEA1
            ENDIF
          ENDIF
.
UPCEA999  RETURN
.----------------------------------------------------------------------
. Update period summary file
.----------------------------------------------------------------------
XFMFP000  PACK      KEY2,APEBLED,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,XFMFP999
.
          PACK      KEY14,APEBLED,APEBACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,XFMFP999
.
          PACK      WORKDATE,APEADAT,SP70
          CALL      CFYR0000
          BRANCH    EXIT,XFMFP999
.
          MOVE      "fmsp",KEY4
          PACK      KEY8,KEY4,CURYEAR,SP70
          REP       " 0",CURYEAR
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,KEY8
          TRAPCLR   IO
          BRANCH    OVRCD,XFMFP999
.
          PACK      KEY14,APEBLED,APEBACC,SP70
          UNPACK    KEY14,FMFPCULD,FMFPCUAC
          CALL      RDFMFP1
          IF        OVRCD=0
            ASSIGN    APEBAMT+FMFPCOM2,FMFPCOM2
            CALL      UPFMFP1
          ELSE
            MOVE      ZERO,FMFPCBF
            MOVE      ZERO,FMFPC01
            MOVE      ZERO,FMFPC02
            MOVE      ZERO,FMFPC03
            MOVE      ZERO,FMFPC04
            MOVE      ZERO,FMFPC05
            MOVE      ZERO,FMFPC06
            MOVE      ZERO,FMFPC07
            MOVE      ZERO,FMFPC08
            MOVE      ZERO,FMFPC09
            MOVE      ZERO,FMFPC10
            MOVE      ZERO,FMFPC11
            MOVE      ZERO,FMFPC12
            MOVE      ZERO,FMFPC13
.
            MOVE      ZERO,FMFPABF
            MOVE      ZERO,FMFPA01
            MOVE      ZERO,FMFPA02
            MOVE      ZERO,FMFPA03
            MOVE      ZERO,FMFPA04
            MOVE      ZERO,FMFPA05
            MOVE      ZERO,FMFPA06
            MOVE      ZERO,FMFPA07
            MOVE      ZERO,FMFPA08
            MOVE      ZERO,FMFPA09
            MOVE      ZERO,FMFPA10
            MOVE      ZERO,FMFPA11
            MOVE      ZERO,FMFPA12
            MOVE      ZERO,FMFPA13
            MOVE      ZERO,FMFPCOM
.
            MOVE      ZERO,FMFPCBFD
            MOVE      ZERO,FMFPC01D
            MOVE      ZERO,FMFPC02D
            MOVE      ZERO,FMFPC03D
            MOVE      ZERO,FMFPC04D
            MOVE      ZERO,FMFPC05D
            MOVE      ZERO,FMFPC06D
            MOVE      ZERO,FMFPC07D
            MOVE      ZERO,FMFPC08D
            MOVE      ZERO,FMFPC09D
            MOVE      ZERO,FMFPC10D
            MOVE      ZERO,FMFPC11D
            MOVE      ZERO,FMFPC12D
            MOVE      ZERO,FMFPC13D
.
            MOVE      ZERO,FMFPABFD
            MOVE      ZERO,FMFPA01D
            MOVE      ZERO,FMFPA02D
            MOVE      ZERO,FMFPA03D
            MOVE      ZERO,FMFPA04D
            MOVE      ZERO,FMFPA05D
            MOVE      ZERO,FMFPA06D
            MOVE      ZERO,FMFPA07D
            MOVE      ZERO,FMFPA08D
            MOVE      ZERO,FMFPA09D
            MOVE      ZERO,FMFPA10D
            MOVE      ZERO,FMFPA11D
            MOVE      ZERO,FMFPA12D
            MOVE      ZERO,FMFPA13D
            MOVE      ZERO,FMFPCOMD
.
            MOVE      ZERO,FMFPCBFT
            MOVE      ZERO,FMFPC01T
            MOVE      ZERO,FMFPC02T
            MOVE      ZERO,FMFPC03T
            MOVE      ZERO,FMFPC04T
            MOVE      ZERO,FMFPC05T
            MOVE      ZERO,FMFPC06T
            MOVE      ZERO,FMFPC07T
            MOVE      ZERO,FMFPC08T
            MOVE      ZERO,FMFPC09T
            MOVE      ZERO,FMFPC10T
            MOVE      ZERO,FMFPC11T
            MOVE      ZERO,FMFPC12T
            MOVE      ZERO,FMFPC13T
.
            MOVE      ZERO,FMFPABFT
            MOVE      ZERO,FMFPA01T
            MOVE      ZERO,FMFPA02T
            MOVE      ZERO,FMFPA03T
            MOVE      ZERO,FMFPA04T
            MOVE      ZERO,FMFPA05T
            MOVE      ZERO,FMFPA06T
            MOVE      ZERO,FMFPA07T
            MOVE      ZERO,FMFPA08T
            MOVE      ZERO,FMFPA09T
            MOVE      ZERO,FMFPA10T
            MOVE      ZERO,FMFPA11T
            MOVE      ZERO,FMFPA12T
            MOVE      ZERO,FMFPA13T
            MOVE      ZERO,FMFPCOMT
.
            PACK      FMFPSPAR,SP70,SP70
            ASSIGN    APEBAMT,FMFPCOM2
            CALL      WRFMFP1
          ENDIF
.
          COMPARE   ONE,FMCOCALC
          GOTO      XFMFP999 IF NOT EQUAL
.
          PACK      KEY20,PORT,CURYEAR,APEBLED,APEBACC,SP70
          CALL      RDFMTU1            * record exists ?
          COMPARE   ZERO,OVRCD
          GOTO      XFMFP999 IF EQUAL
.
          UNPACK    KEY20,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC
          MOVE      FMAMCLEV,FMTULEV
          MOVE      ZERO,FMTUACT
          MOVE      ZERO,FMTUBUD
          MOVE      SP70,FMTUSPAR
          CALL      WRFMTU1            * Flag For Total Account Update
.
XFMFP999  RETURN
.----------------------------------------------------------------------
. Update Stock Item to Accounts Payable Files
.----------------------------------------------------------------------
USAPS000  MOVE      HORDDES,APCIISC  * System Prefix
          MOVE      SIPFPON,APCIORD
          MOVE      SIPASUP,APCICRD
          PACK      APCISPA,SP70
          PACK      KEY8,APCIISC,APCIORD
          CALL      RDAPCI1         * Order Header Record
          IF        OVRCD=1
            MOVE      SIPFDAT,APCIDAT
            CALL      WRAPCI1
          ELSE
            MATCH     SIPASUP,APCICRD
            IF        !@EQUAL
              MOVE      SIPASUP,APCICRD
              MOVE      SIPFDAT,APCIDAT
              CALL      UPAPCI1
            ENDIF
          ENDIF
.
          MOVE      HORDDES,APODISC  * System Prefix
          MOVE      SIPFPON,APODORD
          PACK      APODCAT,SIPFITM,SIPFREC,SP70
          PACK      KEY14,APODISC,APODORD,APODCAT
          CALL      RDAPOD1
          IF        OVRCD=0
            ADD       SIPFQTY,APODQTY
            MOVE      SIPFCST,APODUCT
            MOVE      SIPFGST,APODUGS
            ASSIGN    APODQTY*APODUCT,APODAMT
            ASSIGN    APODQTY*APODUGS,APODGSTA
            MOVE      SIPCGST,APODGST
            CALL      UPAPOD1
.
            MOVE      SIPFQTY,APODQTY
            MOVE      SIPFCST,APODUCT
            MOVE      SIPFGST,APODUGS
            ASSIGN    APODQTY*APODUCT,APODAMT
            ASSIGN    APODQTY*APODUGS,APODGSTA
            MOVE      SIPCGST,APODGST
            CALL      UFMFP000         * update committed expenditure
            GOTO      USAPS999
          ENDIF
.
. No Existing Record
.--------------------
          MOVE      SIPCWAR,KEY5
          CALL      RDSIWA1
          IF        OVRCD=1
            MOVE      "Warehouse Code Missing - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            MOVE      SP70,KEY5
            CALL      RSSIWA1
            CALL      RKSIWA1
          ENDIF
.
          MOVE      SIWALED,APODLED
          MOVE      SIWADISS,APODDIS
          MOVE      SIWARESP,APODRES
          MOVE      SP70,APODSPA
          MOVE      SIPFQTY,APODQTY
          MOVE      SIPFCST,APODUCT
          MOVE      SIPFGST,APODUGS
          ASSIGN    APODQTY*APODUCT,APODAMT
          ASSIGN    APODQTY*APODUGS,APODGSTA
          MOVE      SIPCGST,APODGST
          MOVE      SIPCPD,APODDES
.
          BRANCH    SIWAPTY,USAPS100,USAPS100
          MOVE      SIWAPACC,APODACC
          GOTO      USAPS200
.
USAPS100  STORE     SIWAPACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                      KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          LOAD      APODACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          IF        FMSUUD2A=1
            PACK      APODACC,APODACC,FMSUUD2B
          ENDIF
          MOVE      SIPCPRD,KEY5
          CALL      RDSISA1
          BRANCH    SIWAPTY,USAPS110,USAPS120
.
USAPS110  PACK      SILTSUB,SIPCPRD,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APODACC,APODACC,SILTSUB,SP70 * Add subj code
          GOTO      USAPS200
.
USAPS120  MOVE      SISACOMM,KEY6                                      *C-59696
          CALL      RDSIGA1
          PACK      SILTSUB,SISACOMM,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APODACC,APODACC,SILTSUB,SP70 * Add commodity code
.
USAPS200  CALL      CHKFMS00
          CALL      WRAPOD1
          CALL      UFMFP000           * update committed expenditure
.
USAPS999  RETURN
.----------------------------------------------------------------------
. get subjective/commodity translation
.----------------------------------------------------------------------
GTRA0000  PACK      KEY8,APODLED,SILTSUB,SP70                          *C-59696
          CALL      RDSILT1
.
GTRA9999  RETURN
.----------------------------------------------------------------------
. Update period summary file
.----------------------------------------------------------------------
UFMFP000  PACK      KEY2,APODLED,SP70
          CALL      RDFMLA1
          BRANCH    OVRCD,UFMFP999
.
          PACK      KEY14,APODLED,APODACC,SP70
          CALL      RDFMAM1
          BRANCH    OVRCD,UFMFP999
.
          PACK      WORKDATE,APCIDAT,SP70
          CALL      CFYR0000
          BRANCH    EXIT,UFMFP999
.
          MOVE      "fmsp",KEY4
          PACK      KEY8,KEY4,CURYEAR,SP70
          REP       " 0",CURYEAR
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FMSFPSA1,KEY8
          TRAPCLR   IO
          BRANCH    OVRCD,UFMFP999
.
          PACK      KEY14,APODLED,APODACC,SP70
          UNPACK    KEY14,FMFPCULD,FMFPCUAC
          CALL      RDFMFP1
          IF        OVRCD=0
            ASSIGN    APODAMT+FMFPCOM,FMFPCOM
            MOVE      FMFPCOM,FMFPCOMD
            ASSIGN    FMFPCOM/1000,F12P2
            MOVE      F12P2,FMFPCOMT
            CALL      UPFMFP1
          ELSE
            MOVE      ZERO,FMFPCBF
            MOVE      ZERO,FMFPC01
            MOVE      ZERO,FMFPC02
            MOVE      ZERO,FMFPC03
            MOVE      ZERO,FMFPC04
            MOVE      ZERO,FMFPC05
            MOVE      ZERO,FMFPC06
            MOVE      ZERO,FMFPC07
            MOVE      ZERO,FMFPC08
            MOVE      ZERO,FMFPC09
            MOVE      ZERO,FMFPC10
            MOVE      ZERO,FMFPC11
            MOVE      ZERO,FMFPC12
            MOVE      ZERO,FMFPC13
.
            MOVE      ZERO,FMFPABF
            MOVE      ZERO,FMFPA01
            MOVE      ZERO,FMFPA02
            MOVE      ZERO,FMFPA03
            MOVE      ZERO,FMFPA04
            MOVE      ZERO,FMFPA05
            MOVE      ZERO,FMFPA06
            MOVE      ZERO,FMFPA07
            MOVE      ZERO,FMFPA08
            MOVE      ZERO,FMFPA09
            MOVE      ZERO,FMFPA10
            MOVE      ZERO,FMFPA11
            MOVE      ZERO,FMFPA12
            MOVE      ZERO,FMFPA13
.
            MOVE      ZERO,FMFPCBFD
            MOVE      ZERO,FMFPC01D
            MOVE      ZERO,FMFPC02D
            MOVE      ZERO,FMFPC03D
            MOVE      ZERO,FMFPC04D
            MOVE      ZERO,FMFPC05D
            MOVE      ZERO,FMFPC06D
            MOVE      ZERO,FMFPC07D
            MOVE      ZERO,FMFPC08D
            MOVE      ZERO,FMFPC09D
            MOVE      ZERO,FMFPC10D
            MOVE      ZERO,FMFPC11D
            MOVE      ZERO,FMFPC12D
            MOVE      ZERO,FMFPC13D
.
            MOVE      ZERO,FMFPABFD
            MOVE      ZERO,FMFPA01D
            MOVE      ZERO,FMFPA02D
            MOVE      ZERO,FMFPA03D
            MOVE      ZERO,FMFPA04D
            MOVE      ZERO,FMFPA05D
            MOVE      ZERO,FMFPA06D
            MOVE      ZERO,FMFPA07D
            MOVE      ZERO,FMFPA08D
            MOVE      ZERO,FMFPA09D
            MOVE      ZERO,FMFPA10D
            MOVE      ZERO,FMFPA11D
            MOVE      ZERO,FMFPA12D
            MOVE      ZERO,FMFPA13D
.
            MOVE      ZERO,FMFPCBFT
            MOVE      ZERO,FMFPC01T
            MOVE      ZERO,FMFPC02T
            MOVE      ZERO,FMFPC03T
            MOVE      ZERO,FMFPC04T
            MOVE      ZERO,FMFPC05T
            MOVE      ZERO,FMFPC06T
            MOVE      ZERO,FMFPC07T
            MOVE      ZERO,FMFPC08T
            MOVE      ZERO,FMFPC09T
            MOVE      ZERO,FMFPC10T
            MOVE      ZERO,FMFPC11T
            MOVE      ZERO,FMFPC12T
            MOVE      ZERO,FMFPC13T
.
            MOVE      ZERO,FMFPABFT
            MOVE      ZERO,FMFPA01T
            MOVE      ZERO,FMFPA02T
            MOVE      ZERO,FMFPA03T
            MOVE      ZERO,FMFPA04T
            MOVE      ZERO,FMFPA05T
            MOVE      ZERO,FMFPA06T
            MOVE      ZERO,FMFPA07T
            MOVE      ZERO,FMFPA08T
            MOVE      ZERO,FMFPA09T
            MOVE      ZERO,FMFPA10T
            MOVE      ZERO,FMFPA11T
            MOVE      ZERO,FMFPA12T
            MOVE      ZERO,FMFPA13T
.
            PACK      FMFPSPAR,SP70,SP70
            ASSIGN    APODAMT,FMFPCOM
            MOVE      FMFPCOM,FMFPCOMD
            ASSIGN    FMFPCOM/1000,F12P2
            MOVE      F12P2,FMFPCOMT
            CALL      WRFMFP1
          ENDIF
.
          COMPARE   ONE,FMCOCALC
          GOTO      UFMFP999 IF NOT EQUAL
.
          PACK      KEY20,PORT,CURYEAR,APODLED,APODACC,SP70
          CALL      RDFMTU1            * record exists ?
          COMPARE   ZERO,OVRCD
          GOTO      UFMFP999 IF EQUAL
.
          UNPACK    KEY20,FMTUPORT,FMTUSPEC,FMTUTLED,FMTUTACC
          MOVE      FMAMCLEV,FMTULEV
          MOVE      ZERO,FMTUACT
          MOVE      ZERO,FMTUBUD
          MOVE      SP70,FMTUSPAR
          CALL      WRFMTU1            * Flag For Total Account Update
.
UFMFP999  RETURN
.----------------------------------------------------------------------
. Process Back Orders
.----------------------------------------------------------------------
BACK0000  MOVE      ZERO,TOTALSOB
          MOVE      ZERO,COUNT
.
          PACK      KEY12,SIPCWAR,SIPCCAT,SP70
          PACK      KEY25,SIPCWAR,SIPCCAT,SP70
          CALL      RSSIBA2
.
BACK1000  CALL      RKSIBA2
          BRANCH    OVRCD,BACK1100
          PACK      KEY25,SIBAWAR,SIBACAT,SIBACST,SIBAREQ,SP70
          MATCH     KEY12,KEY25
          GOTO      BACK1100 IF NOT EQUAL
.
BACK1050  CALL      RLSIBA2
          IF        OVRCD=2
            BEEP
            DISPLAY   *P1:24,*W2,*EL,"Back Order Locked : ",KEY25
            GOTO      BACK1050
          ENDIF
.
          ADD       SIBAQTY,TOTALSOB      * Total of Requisitions
          ADD       ONE,COUNT             * Number of Requisitions
          GOTO      BACK1000
.
BACK1100  COMPARE   ZERO,TOTALSOB
          GOTO      BACK9000 IF EQUAL
.
          IF        TOTALREC>TOTALSOB
            CALL      BACALL00           * Allocate all Backorders
            GOTO      BACK9000
          ENDIF
.
          IF        COUNT=1
            CALL      BACONE00           * Allocate to Single Back Order
            GOTO      BACK9000
          ENDIF
.
          CALL        BACUSR00           * Allow User to Allocate Backorder
.
BACK9000  CALL      UUSIBA2
.
BACK9999  RETURN
.-------------------------------------------------------------------
. Not Enough Received to Cover All Back Orders.
.-------------------------------------------------------------------
BACUSR00  CALL      KLTMBA00                 * Kill old Temp File
          CALL      CRTMBA00                 * Create new Temp File
.
          PACK      KEY12,SIPCWAR,SIPCCAT,SP70
          PACK      KEY25,SIPCWAR,SIPCCAT,SP70
          CALL      RSSIBA2
.
BACUSR10  CALL      RKSIBA2
          BRANCH    OVRCD,BACUSR20
          PACK      KEY25,SIBAWAR,SIBACAT,SIBACST,SIBAREQ,SP70
          MATCH     KEY12,KEY25
          GOTO      BACUSR20 IF NOT EQUAL
.
          IF        HALLOCBO=2
            PACK      KEY33,SIBADAT,KEY25    * Write to tmp backorder file
          ELSE
            PACK      KEY33,SP8,KEY25        * Write to tmp backorder file
          ENDIF
.
          CALL      RATMBA1
          IF        OVRCD=1
            CALL      WRTMBA1
          ENDIF
          GOTO      BACUSR10                 * Get all Backorders
.
BACUSR20  MOVE      SP70,KEY33
          MOVE      TOTALREC,TOTALEFT        * Total left to receive
          CALL      RSTMBA1
.
BACUSR30  CALL      RKTMBA1
          BRANCH    OVRCD,BACUSR40
.
          MOVE      SIPAPON,SIBTPON
          MOVE      SIBAREQ,SIBTREQ
          MOVE      SIBACST,SIBTCST
          MOVE      SIBAQTY,SIBTQTY
.
          IF        HALLOCBO=2
            IF        TOTALEFT>=SIBTQTY
              MOVE      SIBTQTY,SIBTISS
              SUB       SIBTQTY,TOTALEFT
            ELSE
              MOVE      TOTALEFT,SIBTISS
              MOVE      ZERO,TOTALEFT
            ENDIF
          ELSE
            ASSIGN    (SIBAQTY/TOTALSOB),F12P2
            ASSIGN    (F12P2*TOTALREC)+.50,F12P2
            MOVE      F12P2,QTYFORM8
            IF        TOTALEFT>=QTYFORM8
              IF        SIBTQTY<QTYFORM8
                MOVE      SIBTQTY,QTYFORM8
              ENDIF
              MOVE      QTYFORM8,SIBTISS
              SUB       QTYFORM8,TOTALEFT
            ELSE
              MOVE      TOTALEFT,SIBTISS
              MOVE      ZERO,TOTALEFT
            ENDIF
          ENDIF
.
          PACK      KEY15,SIBTPON,SIBTREQ
          CALL      RASIBT1
          IF        OVRCD=1
            CALL      WRSIBT1
          ENDIF
          GOTO      BACUSR30
.
BACUSR40  CALL      KLTMBA00                 * Kill the temp file
          CALL      SC03L000
.
          PACK      KEY8,SP70
          CALL      TSSIBT12
.
BACUSR50  CALL      TKSIBT12
          BRANCH    OVRCD,BACUSR99
          MOVE      SIPCWAR,SIBPWAR
          MOVE      SIPCCST,SIBPCST
.
          COMPARE   ZERO,SIBTISS
          GOTO      BACUSR80 IF EQUAL
.
          PACK      KEY25,SIPCWAR,SIPCCAT,SIBTCST,SIBTREQ,SP70
          CALL      RDSIBA2
          BRANCH    OVRCD,BACUSR50
.
          MOVE      SIBTISS,SIBPAQT
          ASSIGN    SIBAQTY-SIBTISS,SIBPBQT
          CALL      WRPIC000
.
          ASSIGN    SIBAQTY-SIBTISS,SIBAQTY
          IF        SIBAQTY>0
            CALL      UPSIBA2
          ELSE
            CALL      DESIBA2
          ENDIF
.
BACUSR80  PACK      KEY15,SIPAPON,SIBTREQ,SP70
          CALL      RASIBT1
          IF        OVRCD=0
            CALL      DESIBT1
          ENDIF
          GOTO      BACUSR50
.
BACUSR99  RETURN
.-----------------------------------------------------------------
. Kill the Temporary Backorder File
.-----------------------------------------------------------------
KLTMBA00  PACK      TMBANAME,TMBANAMA,PORT
          CLOSE     TMPBACA1
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    TMBANAME,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
KLTMBA99  RETURN
.-----------------------------------------------------------------
. Create the Temporary Backorder File
.-----------------------------------------------------------------
CRTMBA00  CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TMBANAME,CMDLINE
          APPEND    " 61 UC26-33,21-25,6-12,1-5,13-20",CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          OPEN      TMPBACA1,TMBANAME
.
CRTMBA99  RETURN
.-----------------------------------------------------------------
. Enough Received to Cover All Back Orders.
.-----------------------------------------------------------------
BACALL00  PACK      KEY12,SIPCWAR,SIPCCAT,SP70
          PACK      KEY25,SIPCWAR,SIPCCAT,SP70
          CALL      RSSIBA2
.
BACALL10  CALL      RKSIBA2
          BRANCH    OVRCD,BACALL99
          PACK      KEY25,SIBAWAR,SIBACAT,SIBACST,SIBAREQ,SP70
          MATCH     KEY12,KEY25
          GOTO      BACALL99 IF NOT EQUAL
.
          MOVE      SIBAQTY,SIBPAQT
          MOVE      ZERO,SIBPBQT
          CALL      WRPIC000   * Write to Picking Sheets
.
          PACK      KEY25,SIBAWAR,SIBACAT,SIBACST,SIBAREQ,SP70
          CALL      DESIBA2    * Back Order Compltete So Remove
          GOTO      BACALL10
.
BACALL99  RETURN
.----------------------------------------------------------------------
. Single Item on Back Order Only.
.----------------------------------------------------------------------
BACONE00  PACK      KEY12,SIPCWAR,SIPCCAT,SP70
          PACK      KEY25,SIPCWAR,SIPCCAT,SP70
          CALL      RSSIBA2
          CALL      RKSIBA2
          BRANCH    OVRCD,BACONE99
          PACK      KEY25,SIBAWAR,SIBACAT,SIBACST,SIBAREQ,SP70
          MATCH     KEY12,KEY25
          GOTO      BACONE99 IF NOT EQUAL
.
          MOVE      TOTALREC,SIBPAQT
          ASSIGN    SIBAQTY-TOTALREC,SIBPBQT
.
          CALL      WRPIC000
.
          ASSIGN    SIBAQTY-TOTALREC,SIBAQTY
          IF        SIBAQTY=0
            CALL      DESIBA2
          ELSE
            CALL      UPSIBA2
          ENDIF
.
BACONE99  RETURN
.-----------------------------------------------
. Write to Picking Sheet File for Back Orders
.-----------------------------------------------
WRPIC000  CALL      GETREQ00    * Post Requisition File Entry
.
          MOVE      SIPCWAR,SIBPWAR    * Warehouse
          MOVE      SIPCCAT,SIBPCAT    * Catalog
          MOVE      SIBAQTY,SIBPRQT    * Quantity Required
          MOVE      BACKDEL,SIBPDEL    * Delivery Details
          MOVE      SIRACST,SIBPCST    * Cost Centre
          MOVE      SIIERAS,SIBPRAC    * Rack&Shelf
          MOVE      SIRATYP,SIBPTYP    * Req Type
          MOVE      SIRAREQ,SIBPREQ    * Req No.
          MOVE      SP2,SIBPPFL
          MOVE      SIBARESI,SIBPRESI  * Restock ID             Quote 9817
          PACK    KEY83,SIBPWAR,SIBPCST,SIBPDEL,SIBPRAC,SIBPCAT,SIBPTYP,SIBPREQ
          CALL      RASIBP1
          IF        OVRCD=1
            CALL      WRSIBP1
          ENDIF
.
          SUB       SIBPAQT,SIIESOH
          CALL      UPSIIE1
.
          PACK      SIITPER,SIPEYEAR,SIPEPER
          MOVE      SIBPWAR,SIITWAR            * Warehouse
          MOVE      SIBPCAT,SIITCAT            * Catalog
          ASSIGN    SIBPAQT*SEQ,SIITQTY        * Quantity
          ASSIGN    SEQ*SIBPAQT*SIIAAVC,SIITAMT
          MOVE      SIBPCST,SIITCST            * Cost Centre
          PACK      SIITREQ,SIBPTYP,SIBPREQ
          MOVE      "6",SIITTYP                * Back Order Requisition
          MOVE      SIPFPON,SIITPUR            * Order Number
          MOVE      SP70,SIITSPA               * Spare
          MOVE      SIPFREC,SIITREF            * Reference
          MOVE      SIIESOH,SIITSOH            * Stock on Hand
.
          MOVE      PRGID,SIITPRG
          MOVE      PORT,SIITPOR
          MOVE      PASSCODE,SIITOPR
          PACK      SIITDAT,CCC,CYY,CMM,CDD
          REP       " 0",SIITDAT
          REPEAT
            CLOCK     TIME,SIITTIM
            PACK      KEY28,SIITWAR,SIITCAT,SIITDAT,SIITTIM,SP70
            CALL      RASIIT1
          UNTIL     OVRCD=1
          CALL      WRSIIT1
.
          MOVE      TWO,CALLPNT              *srf 127749
          CALL      CHKITM00                 *srf 127749
.
          ASSIGN    SIBPAQT,SIUSQTY        * Quantity
          ASSIGN    SIBPAQT*SIIAAVC,SIUSCST
.
          PACK      SICAGL,SP70
          MOVE      SIBACST,KEY5
          CALL      RDSICA1
.
          CALL      SINUSAGE
.
          RETURN
.------------------------------------------------------------
. Write Backorder Requisition Details
.------------------------------------------------------------
GETREQ00  PACK      KEY8,ANSB,Z70
          CALL      RSSIRA1
          CALL      RPSIRA1
          IF        OVRCD=1
            MOVE      ZERO,F7
          ELSE
            MOVE      SIRAREQ,F7
          ENDIF
.
          MOVE      SP70,SIRADEL
          PACK      KEY8,SIBAREQ,SP70
          CALL      RDSIRA1
          MOVE      SIRADEL,BACKDEL
.
GETREQ10  ADD       ONE,F7
          PACK      KEY8,ANSB,F7
          CALL      RDSIRA1
          COMPARE   ZERO,OVRCD
          GOTO      GETREQ10 IF EQUAL
.
          UNPACK    KEY8,SIRATYP,SIRAREQ   * Move in details
          MOVE      SIBACST,SIRACST
          MOVE      ZERO,SIRAIND
          PACK      SIRADAT,CCC,CYY,CMM,CDD
          REP       " 0",SIRADAT
          ASSIGN    SIBPAQT*SIIAAVC,SIRATOT
.
          CLEAR     SIRADEL
          APPEND    "From Req'n : ",SIRADEL
          APPEND    SIBAREQ,SIRADEL
          APPEND    " Receival P/O : ",SIRADEL
          APPEND    SIPFPON,SIRADEL
          APPEND    "/",SIRADEL
          APPEND    SIPFREC,SIRADEL
          RESET     SIRADEL
.
          CALL      WRSIRA1                * Write to Header File
.
          PACK      KEY20,SIRATYP,SIRAREQ,SIBAWAR,SIBACAT
          UNPACK    KEY20,SIRBTYP,SIRBREQ,SIRBWAR,SIRBCAT
          CALL      RASIRB1
          IF        OVRCD=0
            CALL      DESIRA1
            GOTO      GETREQ10
          ELSE
            MOVE      SIBAQTY,SIRBRQT
            MOVE      SIBPAQT,SIRBIQT
            ASSIGN    SIBPAQT*SIIAAVC,SIRBAMT
            UNPACK    SP70,SIRBBCH,SIRBLED,SIRBACC,SIRBSPA
            MOVE      SIRADAT,SIRBDAT
            CALL      WRSIRB1              * Write to Details File
          ENDIF
          RETURN
.----------------------------------------------------------------------
. Update Non-Stock Item to Accounts Payable Files
.----------------------------------------------------------------------
UNAPS000  MOVE      HORDDES,APCIISC  * System Prefix
          MOVE      SIPFPON,APCIORD
          MOVE      SIPASUP,APCICRD
          PACK      KEY8,APCIISC,APCIORD
          CALL      RDAPCI1         * Order Header Record
          IF        OVRCD=1
            MOVE      SIPFDAT,APCIDAT
            CALL      WRAPCI1
          ELSE
            MATCH     SIPASUP,APCICRD
            IF        !@EQUAL
              MOVE      SIPASUP,APCICRD
              MOVE      SIPFDAT,APCIDAT
              CALL      UPAPCI1
            ENDIF
          ENDIF
.
          MOVE      HORDDES,APODISC  * System Prefix
          MOVE      SIPFPON,APODORD
          PACK      APODCAT,SIPFITM,SIPFREC,SP70
          PACK      KEY14,APODISC,APODORD,APODCAT
          CALL      RDAPOD1
          IF        OVRCD=0
            ADD       SIPFQTY,APODQTY
            MOVE      SIPFCST,APODUCT
            MOVE      SIPFGST,APODUGS
            ASSIGN    APODQTY*APODUCT,APODAMT
            ASSIGN    APODQTY*APODUGS,APODGSTA
            MOVE      SIPCGST,APODGST
            CALL      UPAPOD1
.
            MOVE      SIPFQTY,APODQTY
            MOVE      SIPFCST,APODUCT
            MOVE      SIPFGST,APODUGS
            ASSIGN    APODQTY*APODUCT,APODAMT
            ASSIGN    APODQTY*APODUGS,APODGSTA
            MOVE      SIPCGST,APODGST
            CALL      UFMFP000         * update committed expenditure
            GOTO      UNAPS999
          ENDIF
.
. No Existing Record
.--------------------
          MOVE      HDEFWH,KEY5
          CALL      RDSIWA1
          IF        OVRCD=1
            MOVE      "WARNING: Default Warehouse Missing.First Used.- ",DISPMSG
            BEEP
            CALL      MESSAGE1
            MOVE      SP70,KEY5
            CALL      RSSIWA1
            CALL      RKSIWA1
          ENDIF
.
          PACK      SICAGL,SP70
          MOVE      SIPCCST,KEY5
          CALL      RDSICA1
          IF        OVRCD=1
            BEEP
            CLEAR     DISPMSG
            APPEND    "Invalid Cost Centre : ",DISPMSG
            APPEND    KEY5,DISPMSG
            APPEND    " - ",DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
          ENDIF
.
          UNPACK    SICAGL,APODLED,APODACC
          MOVE      SIWADISS,APODDIS
          MOVE      SIWARESP,APODRES
          MOVE      SP70,APODSPA
          MOVE      SIPFQTY,APODQTY
          MOVE      SIPFCST,APODUCT
          MOVE      SIPFGST,APODUGS
          ASSIGN    APODQTY*APODUCT,APODAMT
          ASSIGN    APODQTY*APODUGS,APODGSTA
          MOVE      SIPCGST,APODGST
          MOVE      SIPCPD,APODDES
.
UNAPS100  MATCH     SP70,APODACC       * use posting acc if no CC
          GOTO      UNAPS115 IF EQUAL
.
          STORE     APODACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          LOAD      APODACC,FMSUUD4A,KEY1,KEY2,KEY3,KEY4,KEY5,KEY6:
                                     KEY7,KEY8,KEY9,KEY10,KEY11,KEY12
          IF        FMSUUD2A=1
            PACK      APODACC,APODACC,FMSUUD2B
          ENDIF
.
          MOVE      SIPCPRD,KEY5
          CALL      RDSISA1
          BRANCH    SIWATYP,UNAPS120,UNAPS115
.
UNAPS110  PACK      SILTSUB,SIPCPRD,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APODACC,APODACC,SILTSUB,SP70 * Add subj code
          GOTO      UNAPS200
.
UNAPS115  PACK      APODACC,SICAPACC,SP70        * Use CC Posting Account
          GOTO      UNAPS200
.
UNAPS120  MOVE      SISACOMM,KEY6                                      *C-59696
          CALL      RDSIGA1
          PACK      SILTSUB,SISACOMM,SP70
          CALL      GTRA0000                     * check for translation table
          PACK      APODACC,APODACC,SILTSUB,SP70 * Add commodity code
.
UNAPS200  CALL      CHKFMS00
          CALL      WRAPOD1
          CALL      UFMFP000           * update committed expenditure
.
UNAPS999  RETURN
.------------------------------------------------------------
. Check FMS Account
.------------------------------------------------------------
CHKFMS00  MOVE      ZERO,FMAMTYPE
          PACK      KEY14,APODLED,APODACC,SP70
          CALL      RDFMAM1
          IF        OVRCD=1
            SQUEEZE   KEY14
            CALL      RDFMAM1
            IF        OVRCD=0
              UNPACK    KEY14,APODLED,APODACC
            ENDIF
          ENDIF
.
          MOVE      FMAMTYPE,F1
          IF        F1 < 1 | F1 > 5
            BEEP
            CLEAR     DISPMSG
            APPEND    "Ledger/Account : ",DISPMSG
            APPEND    APODLED,DISPMSG
            APPEND    "/",DISPMSG
            APPEND    APODACC,DISPMSG
            APPEND    " on  ",DISPMSG
            APPEND    APODISC,DISPMSG
            APPEND    APODORD,DISPMSG
            APPEND    APODCAT,DISPMSG
            APPEND    " Invalid - ",DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
          ENDIF
          IF        FMAMSTAT<>0
            BEEP
            CLEAR     DISPMSG
            APPEND    "Ledger/Acct : ",DISPMSG
            APPEND    APODLED,DISPMSG
            APPEND    "/",DISPMSG
            APPEND    APODACC,DISPMSG
            APPEND    " on ",DISPMSG
            APPEND    APODORD,DISPMSG
            APPEND    APODCAT,DISPMSG
            APPEND    " Closed - ",DISPMSG
            RESET     DISPMSG
            CALL      MESSAGE1
          ENDIF
          RETURN
.------------------------------------------------------------
. Update Non Stock Purchase
.------------------------------------------------------------
UPNON000  PACK      SIITPER,SIPEYEAR,SIPEPER
          MOVE      SP5,SIITWAR             * Warehouse
          MOVE      SIPCCAT,SIITCAT             * Catalog
          ASSIGN    TOTALREC,SIITQTY            * Quantity
          MOVE      SIPFCST,F12P4
          SUB       SIPFGST,F12P4
          ASSIGN    SIPFQTY*F12P4,SIITAMT
          IF        SIPFCST<0
            MOVE      SEQ,SIITAMT
          ENDIF
          MOVE      SIPCCST,SIITCST             * Cost Centre
          PACK      SIITREQ,SP70
          MOVE      "4",SIITTYP                 * Receival
          MOVE      SIPFPON,SIITPUR
          MOVE      SIPFREC,SIITREF
          MOVE      ZERO,SIITSOH                * SOH
          MOVE      SP70,SIITSPA
.
          MOVE      PRGID,SIITPRG
          MOVE      PORT,SIITPOR
          MOVE      PASSCODE,SIITOPR
          PACK      SIITDAT,CCC,CYY,CMM,CDD
          REP       " 0",SIITDAT
.
          MATCH     SP70,SIPCCAT         * SRF 610915
          GOTO      UPNON100 IF EQUAL    * Don't Write Items Without a Catalog
.
          REPEAT
            CLOCK     TIME,SIITTIM
            PACK      KEY28,SIITWAR,SIITCAT,SIITDAT,SIITTIM,SP70
            CALL      RASIIT1
          UNTIL     OVRCD=1
          CALL      WRSIIT1
.
UPNON100  MOVE      THREE,CALLPNT            *srf 127749
          CALL      CHKITM00                 *srf 127749
.
          ASSIGN    TOTALREC,SIUSQTY     * Quantity
.
          IF        SIPFCST<0
            MOVE      ZERO,SIUSCST
          ELSE
            IF        SNCOPURC=1
              MOVE      SIPFCST,F12P4
              ASSIGN    SIPFQTY*F12P4,SIUSCST
            ELSE
              MOVE      SIPFCST,F12P4
              SUB       SIPFGST,F12P4
              ASSIGN    SIPFQTY*F12P4,SIUSCST
            ENDIF
          ENDIF
.
          MATCH     SP70,SIPCCAT
          IF        @EQUAL
            MOVE      SIPCPRD,SIIASUB
            MOVE      SIPCCAT,SIIACAT
            MOVE      ONE,SIIANON
          ENDIF
          MOVE      SP70,SIIEWAR             * Non Warehouse for Non-Stock etc
          PACK      SICACODE,SP70
          PACK      KEY5,SIPCCST             * Items Cost Centre
          CALL      RDSICA1
          IF        OVRCD=1
            PACK      KEY5,SIPACST           * Default Cost Centre
            CALL      RDSICA1
          ENDIF
          CALL      SINRECUS                 * Update Receival Usage
          IF        HNONUSAG=1
            CALL      SINUSAGE    SRF127383  * Update Receival Usage
          ENDIF
          CALL      UPOUS000  * Update Order Usage for any Changes
.
          RETURN
.------------------------------------------------------------
. Check for End of Order
. Order Complete when no more deliveries expected
.------------------------------------------------------------
ORDEND00  MOVE      SIPAPON,KEY7
          PACK      KEY10,SIPAPON,SP70
          CALL      RSSIPC1
ORDEND10  CALL      RKSIPC1
          BRANCH    OVRCD,ORDEND50
          MATCH     SIPCPON,SIPAPON
          GOTO      ORDEND50 IF NOT EQUAL
          MATCH     SP70,SIPCEDD
          GOTO      ORDEND80 IF NOT EQUAL
          GOTO      ORDEND10
.
ORDEND50  PACK      SIPADCM,CCC,CYY,CMM,CDD
          REP       " 0",SIPADCM              * Order Complete
          CALL      UPSIPA1
.
          PACK      KEY7,SIPAPON
          CALL      RDSIRP1
          IF        OVRCD=0
            CALL      DESIRP1
          ENDIF
          GOTO      ORDEND99
.
ORDEND80  PACK      KEY7,SIPAPON
          CALL      RDSIRP1
          IF        OVRCD=1
            MOVE      SIPAPON,SIRPPON
            PACK      SIRPSPA,SP70
            CALL      WRSIRP1
          ENDIF
.
ORDEND99  RETURN
.------------------------------------------------------------
. Update Order Details with New Cost If Required
.------------------------------------------------------------
UPOUS000  MOVE      ONE,SIFACTOR
          MOVE      ONE,ORDFACT
          PACK      KEY30,SIIAISS,SIPCSUT
          CALL      RDSIFA1           * Get Factor for Ordered Supply Unit
          MOVE      SIFACTOR,ORDFACT
.
          MATCH     SIPCSUT,SIPFSUT
          IF        !(@EQUAL)
            PACK      KEY30,SIIAISS,SIPFSUT
            CALL      RDSIFA1           * Get Factor for Received Supply Unit
          ENDIF
.
          IF        SIPFCST<0
            GOTO      UPOUS100         * Cost To Be Advised so No Update
          ENDIF
.
. Cost Variation Calculation
.---------------------------
. Variations always in current/receival period.
. If Order Cost TBA then Cost Variation = QR*RC
.
          MOVE      SIPFCST,F12P4
          SUB       SIPFGST,F12P4
.
          IF        SIPCECT<0
            ASSIGN    (SIPFQTY*F12P4),SIUSCST
            GOTO      UPOUS200
          ENDIF
.
. Variation = (QR*RC)-(QR*OC) where QR = Quantity Received
.                                   RC = Received Cost per Unit
.                                   OC = Order Cost per Unit
. If Order Complete then (QR*RC)-(QO*OC) where QO = Quantity Outstanding
.
          MOVE      SIPCECT,F12P4
          SUB       SIPCGSTA,F12P4
          ASSIGN    ((SIPFQTY*SIFACTOR)/ORDFACT)*F12P4,SIUSCST
          MOVE      SIPFCST,F12P4
          SUB       SIPFGST,F12P4
          ASSIGN    (SIPFQTY*F12P4)-SIUSCST,SIUSCST
          GOTO      UPOUS200
.
. Cost To be Advised so No Adjustment
.-------------------------------------
UPOUS100  MOVE      ZERO,SIUSCST
.
. Calculate Quantity Variation
.------------------------------
. If Item not fully received then no variation in qty
. If Item fully received then calculate variation.
.
UPOUS200  MATCH     SP70,SIPCEDD       * Fully Received if Spaces
          IF        @EQUAL
            ASSIGN    SIPCRQT-(SIPCOQT*ORDFACT),SIUSQTY
            IF        SNCOPURC=1
              ASSIGN    SIUSCST+(SIUSQTY*(SIPCECT/ORDFACT)),SIUSCST
            ELSE
              MOVE      SIPCECT,F12P4
              SUB       SIPCGSTA,F12P4
              ASSIGN    SIUSCST+(SIUSQTY*(F12P4/ORDFACT)),SIUSCST
            ENDIF
          ELSE
            MOVE      ZERO,SIUSQTY     * No Adjustment to Quantity
          ENDIF
.
          COMPARE   ZERO,SIUSCST
          GOTO      UPOUS300 IF NOT EQUAL
          COMPARE   ZERO,SIUSQTY
          GOTO      UPOUS999 IF EQUAL  * No Variation so no Update
.
UPOUS300  CALL      SINORDUS           * Update Usage with Price Variation
          MOVE      SIPFCST,SIPCECT
          MOVE      SIPFGST,SIPCGSTA
          CALL      UPSIPC1
.
UPOUS999  RETURN
.
CHKITM00  RESET     KEY28
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CHKITMA1,KEY28;CKITWAR,CKITCAT,CKITDAT,CKITTIM,CKITOPR:
                        CKITPOR,CKITPRG,CKITPER,CKITQTY,CKITAMT,CKITTYP:
                        CKITCST,CKITREQ,CKITPUR,CKITREF,CKITSOH,CKITSPA
          TRAPCLR   FORMAT
          IF        OVRCD=1
            BEEP
            BEEP
            BEEP
            DISPLAY   *P1:3,*EF:
                       *P1:4,"SIITWAR : ",*DBON,SIITWAR:
                       *P1:5,"SIITCAT : ",*DBON,SIITCAT:
                       *P1:6,"SIITDAT : ",*DBON,SIITDAT:
                       *P1:7,"SIITTIM : ",*DBON,SIITTIM:
                       *P1:8,"SIITOPR : ",*DBON,SIITOPR:
                       *P1:9,"SIITPOR : ",*DBON,SIITPOR:
                      *P1:10,"SIITPRG : ",*DBON,SIITPRG:
                      *P1:11,"SIITPER : ",*DBON,SIITPER:
                      *P1:12,"SIITQTY : ",*DBON,SIITQTY:
                      *P1:13,"SIITAMT : ",*DBON,SIITAMT:
                      *P1:14,"SIITTYP : ",*DBON,SIITTYP:
                      *P1:15,"SIITCST : ",*DBON,SIITCST:
                      *P1:16,"SIITREQ : ",*DBON,SIITREQ:
                      *P1:17,"SIITPUR : ",*DBON,SIITPUR:
                      *P1:18,"SIITREF : ",*DBON,SIITREF:
                      *P1:19,"SIITSOH : ",*DBON,SIITSOH:
                      *P1:20,"SIITSPA : ",*DBON,SIITSPA:
                      *P1:22,"File Format Now Incorrect Key = ",KEY28:
                      *P1:23,"Call Point                    = ",CALLPNT:
                      *P1:24,"Please Record Error & Contact IBA.";
            CALL      HITENTER
            CALL      HITENTER
            CALL      HITENTER
            PRINT     "ERROR IN PROGRAM"
            PRINT     "File Format Now Incorrect Key = ",KEY28
            PRINT     "Call Point                    = ",CALLPNT
            PRINT     "SIITWAR :",SIITWAR
            PRINT     "SIITCAT :",SIITCAT
            PRINT     "SIITDAT :",SIITDAT
            PRINT     "SIITTIM :",SIITTIM
            PRINT     "SIITOPR :",SIITOPR
            PRINT     "SIITPOR :",SIITPOR
            PRINT     "SIITPRG :",SIITPRG
            PRINT     "SIITPER :",SIITPER
            PRINT     "SIITQTY :",SIITQTY
            PRINT     "SIITAMT :",SIITAMT
            PRINT     "SIITTYP :",SIITTYP
            PRINT     "SIITCST :",SIITCST
            PRINT     "SIITREQ :",SIITREQ
            PRINT     "SIITPUR :",SIITPUR
            PRINT     "SIITREF :",SIITREF
            PRINT     "SIITSOH :",SIITSOH
            PRINT     "SIITSPA :",SIITSPA
         ENDIF
         RETURN
DELT0000  MOVE     SP70,DISPMSG
          CALL     MESSAGE2
          CALL     DELQST
          CALL     MESSAGE3
          BRANCH   CEXIT,DELT1000,DELT9000,DELT9100
.
DELT1000  PACK     KEY12,SIPAPON,NEXTREC,SP70
          PACK     KEY9,SIPAPON,NEXTREC,SP70
          CALL     RSSIPF2
          CALL     RKSIPF2
          BRANCH   OVRCD,DELT2000
          PACK     KEY12,SIPFPON,SIPFREC,SIPFITM
          MATCH    KEY9,KEY12
          GOTO     DELT2000 IF NOT EQUAL
          CALL     DESIPF2
          MOVE     FOUR,AUDTTYPE           * Delete type for audit
          CALL     WASIPF00                * Write delete audit record
          GOTO     DELT1000
.
DELT2000  MOVE     "WARNING: This Receival has been Deleted - ",DISPMSG
          BEEP
          CALL     MESSAGE1
          MOVE     ZERO,EXIT
          GOTO     DELT9999
.
DELT9000  MOVE     ONE,EXIT
          GOTO     DELT9999
DELT9100  MOVE     TWO,EXIT
          GOTO     DELT9999
DELT9999  RETURN
.----------------------------------------------------------------------
. Clear Variables for the screen in case of blank catalog code
.----------------------------------------------------------------------
CLRVAR00  MATCH     SIPCCAT,SP70
          IF        @EQUAL
            UNPACK    SP70,SIIACAT,SIIADES
          ENDIF
.
CLRVAR99  RETURN
.----------------------------------------------
. Check for Notes
.----------------------------------------------
NSIPD000  MOVE        SP70,NOTESIPD
          MOVE        ZERO,OVRCD
          TRAP        OVERCOND IF IO
          OPEN        TEMPWORD,FILSIPD1
          TRAPCLR     IO
          BRANCH      OVRCD,NSIPD999
NSIPD100  READ        TEMPWORD,SEQ;SIPDCOM
          GOTO        NSIPD900 IF OVER
          MATCH       SP70,SIPDCOM
          GOTO        NSIPD100 IF EQUAL
          MOVE        "Notes",NOTESIPD
.
NSIPD900  CLOSE       TEMPWORD
NSIPD999  RETURN
.
EDATR000  CALL      KEYDATE
          PACK      SIPEDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",SIPEDATE
          MOVE      ZERO,EXIT
          CALL      RSIPE000
          IF        OVRCD=1
            MOVE      "Unable to find Processing Period - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      ERECD000
          ENDIF
          IF        SIPELOC=1
            MOVE      "Processing Period Locked - ",DISPMSG
            BEEP
            CALL      MESSAGE1
            GOTO      ERECD000
          ENDIF
          MOVE      SIPEDATE,SIPFDAT
          RETURN
ERECQ000  MOVE      SP70,VAR
          CALL      DISPITEM
          MOVE      SIPFQTY,WHOLEQTY
          KEYIN     *PCCOL:CVERT,*V2LON,*MASK,*RV,WHOLEQTY
          COMPARE   ZERO,WHOLEQTY
          GOTO      ERECQ100 IF NOT LESS
.
          BEEP
          MOVE      "Quantity must not be Negative - ",DISPMSG
          CALL      MESSAGE1
          GOTO      ERECQ000
.
ERECQ100  ASSIGN    SIPFQTY*SIPFCST,F12P2
          SUB       F12P2,FGRANTOT
.
          MOVE      WHOLEQTY,SIPFQTY
.
          ASSIGN    SIPFQTY*SIPFCST,F12P2
          ADD       F12P2,FGRANTOT
          MOVE      "(999,999,999,999.99 ",GRANDTOT
          FEDIT     FGRANTOT,GRANDTOT
.
          CALL      CALTAX00
          MOVE      ZERO,F12P4
          ASSIGN    SIPFGST*SIPFQTY,F12P4
          MOVE      F12P4,TOTALGST
          MOVE      ZERO,F12P4
          ASSIGN    SIPFCST*SIPFQTY,F12P4
          MOVE      F12P4,TOTALCST
.
          MOVE      "   40",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     TOTALGST,VAR
            CALL     DISPITEM
          ENDIF
.
          MOVE      "   41",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     TOTALCST,VAR
            CALL     DISPITEM
          ENDIF
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          MOVE      ZERO,EXIT
.
ERECQ999  RETURN
.
ESUPT000  MATCH     SP70,SIPCCAT
          GOTO      ESUPT999 IF EQUAL
.
          MOVE      SIIAISS,SIFAISSU
          MOVE      SIPCCAT,SIICCAT
          MOVE      SIPASUP,SIICSUP
          MOVE      "2",CKEYTYP
          CALL      KSIICA00
          BRANCH    EXIT,ESUPT999,ESUPT999
          PACK      KEY27,SIICCAT,SIICSUP,SIICSUT
          CALL      RASIIC1
          COMPARE   ZERO,OVRCD
          GOTO      ESUPT900 IF EQUAL
.
          MATCH     SIIAISS,SIICSUT
          IF        !@EQUAL
            MOVE       "Supply Unit Must Exist or Equal Issue Unit. - ",DISPMSG
            BEEP
            CALL       MESSAGE1
            GOTO       ESUPT000
          ENDIF
.
ESUPT900  MOVE      SIICSUT,SIPFSUT
.
ESUPT999  RETURN
.
ECOST000  MOVE     SIPFCST,F9P4
          MATCH    SP10,SIPCCON
          IF       !@EQUAL
            BEEP
            MOVE     "Warning This is a Contract Price - ",DISPMSG
            CALL     MESSAGE1
          ENDIF
          MATCH    "1",SIICCONT
          IF       @EQUAL
            BEEP
            MOVE     "Contract Item must Modify P/O - ",DISPMSG
            CALL     MESSAGE1
            GOTO     ECOST999
          ENDIF
.
          KEYIN    *PCCOL:CVERT,*V2LON,*MASK,*RV,F9P4
.
          ASSIGN    SIPFQTY*SIPFCST,F12P2
          SUB       F12P2,FGRANTOT
.
          MOVE      F9P4,SIPFCST
.
          IF       F9P4<0
            MOVE     "        T.B.A.",UNITCOST
            MOVE     ZERO,SIPFGST
            MOVE     ZERO,TOTALGST
            MOVE     ZERO,TOTALCST
          ELSE
            ASSIGN    SIPFQTY*SIPFCST,F12P2
            ADD       F12P2,FGRANTOT
            MOVE      "(999,999,999,999.99 ",GRANDTOT
            FEDIT     FGRANTOT,GRANDTOT
.
            MOVE     "9,999,999.9999",UNITCOST
            FEDIT    F9P4,UNITCOST
            MATCH    "*",UNITCOST
            IF       @EQUAL
              MOVE     F9P4,UNITCOST
            ENDIF
            CALL      CALTAX00
            MOVE      ZERO,F12P4
            ASSIGN    SIPFGST*SIPFQTY,F12P4
            MOVE      F12P4,TOTALGST
            MOVE      ZERO,F12P4
            ASSIGN    SIPFCST*SIPFQTY,F12P4
            MOVE      F12P4,TOTALCST
          ENDIF
.
ECOST999  RETURN
.
CALTAX00  COMPARE   ZERO,SIPFCST
          GOTO      CALTAX90 IF EQUAL
.
          MATCH     SP6,SIPCGST
          GOTO      CALTAX90 IF EQUAL
.
          PACK      KEY8,CCC,CYY,CMM,CDD,SP70
          REP       " 0",KEY8
.
          PACK      KEY14,SIPCGST,KEY8,SP70
          CALL      RDIBGE1
          COMPARE   ZERO,OVRCD
          GOTO      CALTAX10 IF EQUAL
.
          CALL      RPIBGE1
          BRANCH    OVRCD,CALTAX90
.
          MATCH     SIPCGST,IBGECODE
          GOTO      CALTAX90 IF NOT EQUAL
.
CALTAX10  ASSIGN    (SIPFCST-(SIPFCST/(ONE+(IBGEAMNT/HUNDRED)))),SIPFGST
          GOTO      CALTAX99
.
CALTAX90  MOVE      ZERO,SIPFGST
.
CALTAX99  RETURN
.----------------------------------------------------------------------
. enter next delivery date
.----------------------------------------------------------------------
ENDEL000
          CALL    GNDD0000             * get next delivery date
.
ENDEL100  UNPACK  SIPFNDD,CCENT,CYEAR,CMON,CDAY
          CALL    KEYDATE
.
          PACK    KEY8,CCENT,CYEAR,CMON,CDAY
          PACK    CURRDATE,CCC,CYY,CMM,CDD
          REP     " 0",CURRDATE
          REP     " 0",KEY8
.
          MATCH     CURRDATE,KEY8
          GOTO      ENDEL900 IF EQUAL
.
          IF        @LESS
            MOVE      "Date in the Past. - ",DISPMSG
            CALL      MESSAGE1
            GOTO      ENDEL100
          ENDIF
.
ENDEL900  PACK    SIPFNDD,CCENT,CYEAR,CMON,CDAY
          CALL    PACDATE
          MOVE    CPCDATE,NEXTDATE
          RETURN
.----------------------------------------------------------------------
. get next delivery date
.----------------------------------------------------------------------
GNDD0000  PACK      KEY27,SIPCCAT,SIPASUP,SIPFSUT
          CALL      RDSIIC1
          IF        OVRCD=0
            MOVE      CCC,CC
            MOVE      CYY,YY
            MOVE      CMM,MM
            MOVE      CDD,DD              * Todays Date
            CALL      DMYCON              * Convert to Jul Date
            ADD       SIICLTM,JULDAY      * Add Lead Time
            MOVE      JULDAY,JWKDAY
            MOVE      JULYR,JWKYER
            MOVE      JULCC,JWKCC
            CALL      JULCON              * Convert Date Back
            PACK      SIPFNDD,CC,YY,MM,DD
            REP       " 0",SIPFNDD
          ELSE
            PACK    SIPFNDD,CCC,CYY,CMM,CDD
            REP     " 0",SIPFNDD
          ENDIF
.
GNDD9999  RETURN
CAN20000  CALL      DASIPF00
.
          COMPARE   REOLDQTY,SIPFQTY
          GOTO      CAN21000 IF EQUAL
.
          ASSIGN    SIPFQTY*SIPFCST,F12P2
          SUB       F12P2,FGRANTOT
.
          ASSIGN    REOLDQTY*SIPFCST,F12P2
          ADD       F12P2,FGRANTOT
.
CAN21000  MOVE      "(999,999,999,999.99 ",GRANDTOT
          FEDIT     FGRANTOT,GRANDTOT
.
CAN29999  RETURN
POS20000  MATCH     SIPFSUT,SIPCSUT
          GOTO      POS25000 IF NOT EQUAL
.
          MOVE      ONE,SIFACTOR
          PACK      KEY30,SIIAISS,SIPCSUT
          CALL      RDSIFA1
          ASSIGN    SIPCOQT-SIPCRQT/SIFACTOR,OUTQTY
.
          COMPARE   OUTQTY,SIPFQTY
          GOTO      POS26000 IF NOT EQUAL
.
POS21000  PACK      KEY12,SIPFPON,SIPFITM,SIPFREC
          CALL      RASIPF1
          IF        OVRCD=0
            CALL      UPSIPF1
            MOVE      THREE,AUDTTYPE
            CALL      WASIPF00
          ELSE
            CALL      WRSIPF1
            MOVE      ONE,AUDTTYPE
            CALL      WASIPF00
          ENDIF
          GOTO     POS29999
.
. Different Supply Units
.
POS25000  MATCH    SP70,SIPCCAT
          GOTO     POS26000 IF EQUAL
.
          MOVE     ONE,SIFACTOR
          PACK     KEY30,SIIAISS,SIPCSUT
          CALL     RDSIFA1
          ASSIGN   SIPCOQT*SIFACTOR-SIPCRQT,OUTQTY
.
          MOVE     ONE,SIFACTOR
          PACK     KEY30,SIIAISS,SIPFSUT
          CALL     RDSIFA1
          IF       SIPFQTY*SIFACTOR=OUTQTY
            GOTO     POS21000
          ENDIF
.
. Different Quantity
.
POS26000  MATCH    SP70,SIPFNDD           * Has it a Next Expected Delivery
          GOTO     POS21000 IF NOT EQUAL  * Yes, So just Update
.
          MOVE     SP70,DISPMSG
          CALL     MESSAGE2
.
POS26500  KEYIN    *P1:24,*EL,"Is this Item Fully Received (":
                   *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? ",*V2LON,ANS
          REP      UPPLOW,ANS
          MATCH    ANSN,ANS
          GOTO     POS27000 IF EQUAL
          MATCH    ANSY,ANS
          GOTO     POS26500 IF NOT EQUAL
          CALL     MESSAGE3
          GOTO     POS21000
.
POS27000  DISPLAY  *P1:24,*EL,*B,"Date of Next Delivery Mandatory"
          MOVE     "   22",FLDID
          CALL     GETPOSIT
          CALL     ENDEL000
          CALL     MESSAGE3
          GOTO     POS21000
.
POS29999  RETURN
DEL20000  MOVE     SP70,DISPMSG
          CALL     MESSAGE2
          CALL     DELQST
          CALL     MESSAGE3
          BRANCH   CEXIT,DEL21000,DEL29000,DEL29100
.
DEL21000  PACK     KEY12,SIPFPON,SIPFITM,SIPFREC
          CALL     RDSIPF1
          IF       OVRCD=0
            ASSIGN    SIPFQTY*SIPFCST,F12P2
            SUB       F12P2,FGRANTOT
.
            MOVE      "(999,999,999,999.99 ",GRANDTOT
            FEDIT     FGRANTOT,GRANDTOT
.
            CALL     DESIPF1
            CALL     DASIPF00                * Delete audit record
            MOVE     FOUR,AUDTTYPE           * Delete type for audit
            CALL     WASIPF00                * Write delete audit record
          ENDIF
          MOVE     ZERO,EXIT
          GOTO     DEL29999
DEL29000  MOVE     ONE,EXIT
          GOTO     DEL29999
DEL29100  MOVE     ZERO,EXIT
          GOTO     DEL29999
DEL29999  RETURN
BACLIN00  MOVE     SIBTCST,KEY5
          CALL     RDSICA1
          RETURN
BALAN000  MOVE      ZERO,EXIT
          MOVE      ZERO,F12P2
          PACK      KEY8,SP70
          CALL      TSSIBT12
BALAN100  CALL      TKSIBT12
          BRANCH    OVRCD,BALAN200
          ADD       SIBTISS,F12P2
          GOTO      BALAN100
.
BALAN200  MOVE      ZERO,EXIT
          COMPARE   F12P2,TOTALREC
          GOTO      BALAN999 IF EQUAL
          PACK      DISPMSG,SP70,SP70
          CALL      MESSAGE2
.
BALAN300  DISPLAY   *P1:24,*EL,*B,"Received :",*V2LON,TOTALREC,*HOFF:
                    "  Allocated :",*V2LON,F12P2,*HOFF," Continue (":
                    *V2LON,"Y",*HOFF,"/",*V2LON,"N",*HOFF,") ? "
          KEYIN     *P71:24,*V2LON,ANS
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      BALAN400 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      BALAN300 IF NOT EQUAL
          MOVE      ONE,EXIT
          CALL      MESSAGE3
          GOTO      BALAN999
.
BALAN400
          IF        F12P2>TOTALREC
            MOVE      ONE,EXIT
          ELSE
            MOVE      ZERO,EXIT
          ENDIF
.
          CALL      MESSAGE3
.
BALAN999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSCEAIO/INC
          INC       APSCEBIO/INC
          INC       APSCIOIO/INC
          INC       APSMASIO/INC
          INC       APSORDIO/INC
          INC       APSSUBIO/INC
          INC       FMSAMAIO/INC
          INC       FMSCONIO/INC
          INC       FMSCSAIO/INC
          INC       FMSFPSIO/INC
          INC       FMSLMAIO/INC
          INC       FMSLMCIO/INC
          INC       FMSLMCKY    
          INC       FMSTUPIO/INC
          INC       IBAGEDIO/INC
          INC       IBAGSTIO/INC
          INC       SINBACIO/INC
          INC       SINBATIO/INC
          INC       SINBOTIO/INC
          INC       SINBPSIO/INC
          INC       SINCCAIO/INC
          INC       SINCCBIO/INC
          INC       SINCCEIO/INC
          INC       SINCCFIO/INC
          INC       SINCCHIO/INC
          INC       SINCGAIO/INC
          INC       SINCGBIO/INC
          INC       SINCIAIO/INC
          INC       SINCIAKY    
          INC       SINCICIO/INC
          INC       SINCICKY    
          INC       SINCIEIO/INC
          INC       SINCIFIO/INC
          INC       SINCIHIO/INC
          INC       SINCIIIO/INC
          INC       SINCODIO/INC
          INC       SINFACIO/INC
          INC       SINITMIO/INC
          INC       SINLTTIO/INC
          INC       SINNATIO/INC
          INC       SINORDUS    
          INC       SINORIIO/INC
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINPOAIO/INC
          INC       SINPOAKY    
          INC       SINPOBIO/INC
          INC       SINPOCIO/INC
          INC       SINPODIO/INC
          INC       SINPOFIO/INC
          INC       SINRCPIO/INC
          INC       SINREAIO/INC
          INC       SINREBIO/INC
          INC       SINRECUS    
          INC       SINSCFIO/INC
          INC       SINSUAIO/INC
          INC       SINSUBIO/INC
          INC       SINTRNIO/INC
          INC       SINUSAGE    
          INC       SINWARIO/INC
          INC       SINWRKCD    
          INC       SINWRKIO/INC
          INC       SINWSEIO/INC
.
          INC       STDGENCD
.
