.******************************************************************************
.* System         : Emergency System                                          *
.*                                                                            *
.* Include Name   : WEBEMRCM.PBL                                              *
.*                                                                            *
.* Function       : Handles screen painted display/keyin of EMR sreens and    *
.*                  other common EMR routines                                 *
.*                                                                            *
.* Author         : Nick Read        03/03/1998                               *
.*                                                                            *
.* Parameters     :                                                           *
.*                                                                            *
.* Modifications  :                                                           *
.*        V12.00.01 23/05/2025  Ebon Clements  TSK 0955096                    *
.*                  Alphanueric visit number changes                          *
.*        V11.02.01 26/04/2022 J.Tan           TSK 0837128                    *
.*                  Mod Default PRFA based on Claim type                      *
.*        V10.11.01 04/09/2017  Jill Parkinson TSK 0831185                    *
.*                  Added clear of PKADD4 in CPRAF000                         *
.*        V10.00.01 19/03/2010  Steve armstrong   CAR 135505                  *
.*                  Added HL7TRGID & HL7INCLD setting for all broadcast       *
.*                  messages.                                                 *
.******************************************************************************
.*        V9.06.01  13/08/2007  Steve armstrong   CAR 145650                  *
.*                  Added call to DGCLICEC when ACC (patwc1af) record is      *
.*                  created or deleted.                                       *
.******************************************************************************
.*        V9.03.01  03/10/2003  Peter Vela        CAR 41114                   *
.*                  Ported over 5.11 Stat Changes to 9.03                     *
.******************************************************************************
.*        V5.10.B01 05/04/2001  Glenn Saunders                                *
.*                  Remove all references to PATSUR file (old surname file).  *
.******************************************************************************
.*        V6.06.00  26/02/1999  Nicole Harrington                             *
.*                  Modified EMRCOMN for WEB EMR system                       *
.******************************************************************************
.
.****************************************************************************
.*                               OPTNT000                                   *
.*            Format the text for the first option line                     *
.* Requires: EMCNSCRN, EMCNCAP1, EMCNCAP2, EMCNCAP3, EMCNCAP4, WINFLG       *
.* Returns : OPTNLINE  (formatted option line)                              *
.*           ATTRLINE  (attributes for option line)                         *
.****************************************************************************
.
OPTNT000  CLEAR     OPTNLINE                     * clear display line
          CLEAR     ATTRLINE                     * clear attribute line
          APPEND    ONE,OPTNLINE                 * add "1" to display line
          APPEND    ANSB,ATTRLINE                * set 1st attribute to bold
.
          APPEND    HYPHEN,OPTNLINE              * add hyphen to display line
          APPEND    ATCHAR,ATTRLINE              * set attribute to normal
          MOVE      TWO,COUNTR                   * initialise length counter
.
          MOVE      ONE,FORM1                    * screen 1
          CALL      PARAM000                     * load screen name
          BRANCH    EXIT,OPTNT900                * no more screens
.
          MOVE      TWO,FORM1                    * screen 2
          CALL      PARAM000                     * load screen name
          BRANCH    EXIT,OPTNT900                * no more screens
.
          MOVE      THREE,FORM1                  * screen 3
          CALL      PARAM000                     * load screen name
          BRANCH    EXIT,OPTNT900                * no more screens
.
          MOVE      FOUR,FORM1                   * screen 4
          CALL      PARAM000                     * load screen name
          BRANCH    EXIT,OPTNT900                * no more screens
.
          MOVE      FIVE,FORM1                   * screen 5
          CALL      PARAM000                     * load screen name
.
OPTNT900  RESET     OPTNLINE                     * reset display variable
          RESET     ATTRLINE                     * reset attribute variable
.
OPTNT999  RETURN
+
.
.*****************************************************************************
.*                              PRAUP000                                     *
.*                         Update PRA Details                                *
.*****************************************************************************
.
PRAUP000  
          MOVE      PKNAME,XPKNAME      * Save New details 
          MOVE      PKADD1,XPKADD1
          MOVE      PKADD2,XPKADD2
          MOVE      PKSUBR,XPKSUBR
          MOVE      PKADD4,XPKADD4
          MOVE      PKPOST,XPKPOST
          MOVE      PKTELEP,XPKTELEP
          MOVE      PKTELEB,XPKTELEB
          MOVE      PKRELP,XPKRELP
.
          PACK      KEY8,EMVIADMN          
          CALL      RDRESP1
.
          MOVE      XPKNAME,PKNAME      * Move New Details into File Variables
          MOVE      XPKADD1,PKADD1
          MOVE      XPKADD2,PKADD2
          MOVE      XPKSUBR,PKSUBR
          MOVE      XPKADD4,PKADD4
          MOVE      XPKPOST,PKPOST
          MOVE      XPKTELEP,PKTELEP
          MOVE      XPKTELEB,PKTELEB
          MOVE      XPKRELP,PKRELP
.
          BRANCH    OVRCD,PRAUP500        * No Record - Write a New One
.
          CALL      UPRESP1
          GOTO      PRAUP999
.
PRAUP500  CALL      WRRESP1
PRAUP999  RETURN
+
.****************************************************************************
.*                               VISDS000                                   *
.*               Determine the value for PVISTAT in patvisaf                *
.****************************************************************************
.
VISDS000  MOVE      ZERO,TCINDC1
          PACK      KEY5,CODEA,EMVICLAS
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TCINDC1,FORM1
          ENDIF
          MOVE      TWO,PVISTAT
          LOAD      PVISTAT,FORM1,TWO,ONE
.
VISDS999  RETURN
+
.*****************************************************************************
.*                              CMASV000                                     *
.*                  Clear Master File Variables                              *
.*****************************************************************************
.
CMASV000  MOVE      PURNO,CPPURNO                * save U/R number
          CALL      CLPATMAS                     * clear patmasfd
          MOVE      CPPURNO,PURNO                * restore U/R
.
          CALL      CPRAF000                     * clear patresfd
          CALL      CLWRN000                     * Clear warnings
.
CMASV999  RETURN
+
.*****************************************************************************
.*                         URCMT000                    Called by: ALRT0000   *
.*              Input U/R based comments                                     *
.*****************************************************************************
.
.         Open the file then close and delete in case the file already
.         exists
.
URCMT000  PREP      WPFILE1,CFNAME               * create new temp file
          CLOSE     WPFILE1,DELETE               * remove file if existing
.
          PREP      WPFILE1,CFNAME               * create new temp file
          DISPLAY   *P1:9,*EF;
.
          MOVE      ZERO,FORM2                   * set status flag
          CLOSE     WPFILE1                      * close the wp file
          WORD      CFNAME,999,5,9,76,22,FORM2
.
URCMT999  RETURN
+
.****************************************************************************
.*                            WCSLF000                 Called by: GPAT0000  *
.*               Write a record to the patcslaf file                        *
.****************************************************************************
.
WCSLF000  
.         COMPARE   ONE,PTCNUCSL                 * using case note location file
          GOTO      WCSLF999 * IF NOT EQUAL        * no - finished
.
.          OPEN      PATCSLA1,"patcslaf"
.          OPEN      PATCSLA2,"patcslaf"
.
.          COMPARE   ONE,PCASE                    * case notes on file ?
.          GOTO      WCSLF500 IF NOT EQUAL        * no - finished
.
.         Case Notes is "Yes", so make sure this hospital is
.         not on file already (due to a previous bug in the software).
.
.          PACK      KEY41,PURNO,CNAME,SP20,SP30
.          CALL      RSPTCSL2                     * position in file
.          CALL      RKPTCSL2                     * read next record
.          BRANCH    OVRCD,WCSLF050               * eof - finished
.
.          MOVE      PURNO,DPURNO
.          MATCH     DPURNO,PTCLURNO               * same U/R still ?
.          GOTO      WCSLF050 IF NOT EQUAL        * no - finished
.
.          MATCH     CNAME,PTCLDESC               * same hospital still ?
.          GOTO      WCSLF050 IF NOT EQUAL        * no - finished
.
.         Hospital is already on file, so no need to write a new record
.
.          GOTO      WCSLF900
.
.WCSLF050  PACK      KEY11,PURNO,ZED24
.          CALL      RSPTCSL1                     * position in file
.          CALL      RPPTCSL1                     * read previous record
.          BRANCH    OVRCD,WCSLF100               * eof - no record
.
.          MOVE      PURNO,DPURNO
.          MATCH     DPURNO,PTCLURNO               * same U/R No. still ?
.          GOTO      WCSLF100 IF NOT EQUAL        * no - first record
.
.          ADD       ONE,PTCLUNIQ                 * increment Unique Id.
.          GOTO      WCSLF200
.
.WCSLF100  MOVE      ONE,PTCLUNIQ                 * set for first record
.WCSLF200  MOVE      PURNO,PTCLURNO
.          MOVE      CNAME,PTCLDESC
.          PACK      KEY11,PTCLURNO,PTCLUNIQ
.          CALL      WRPTCSL1                     * write new record
.          GOTO      WCSLF900
.
.         Case notes is "No", so check to make sure that there
.         are no records on file for this hospital
.
.WCSLF500  PACK      KEY41,PURNO,CNAME,SP20,SP30
.          CALL      RSPTCSL2                     * position in file
.          CALL      RKPTCSL2                     * read next record
.          BRANCH    OVRCD,WCSLF900               * eof - finished
.
.          MOVE      PURNO,DPURNO
.          MATCH     DPURNO,PTCLURNO              * same U/R still ?
.          GOTO      WCSLF900 IF NOT EQUAL        * no - finished
.
.          MATCH     CNAME,PTCLDESC               * same hospital still ?
.          GOTO      WCSLF900 IF NOT EQUAL        * no - finished
.
.          PACK      KEY11,PTCLURNO,PTCLUNIQ
.          CALL      DEPTCSL1                     * delete record
.          GOTO      WCSLF500
.
.WCSLF900  CLOSE     PATCSLA1
.          CLOSE     PATCSLA2
.
WCSLF999  RETURN
+
.****************************************************************************
.*                             GCATG000               Called by: VALD0000   *
.*             Get the category for the UDF and load the field value        *
.* Requires : CATEGORY  - category for patcodes                             *
.* Returns  : DIM3 - code for patcodes                                      *
.*            EXIT - 0 = valid code found                                   *
.*                   1 = no code found                                      *
.****************************************************************************
.
.         Load each user defined category from 1 - 30 until we find 
.         the matching category for this field
.
GCATG000  MOVE      ZERO,COUNTR                  * initialise counter
          WHILE     COUNTR < 30
            ADD       ONE,COUNTR                 * increment counter
            LOAD      CODE,COUNTR,CODEA1,CODEA2,CODEA3,CODEA4,CODEA5:
                                  CODEA6,CODEA7,CODEA8,CATEA,CATEB:
                                  CATEC,CATED,CATEE,CATEF,CATEG:
                                  CATEH,CATEI,CATEJ,CATEK,CATEL:
                                  CATEM,CATEN,CATEO,CATEP,CATEQ:
                                  CATER,CATES,CATET,CATEU,CATEV
.
            MATCH     CODE,CATEGORY              * same category ?
            GOTO      GCATG100 IF EQUAL          * yes
          DO
          GOTO      GCATG950                     * no - ignore
.
.         We have found the number of the UDF, so load the appropriate code
.
GCATG100  LOAD      DIM3,COUNTR,EMVIUC01,EMVIUC02,EMVIUC03,EMVIUC04,EMVIUC05:
                                EMVIUC06,EMVIUC07,EMVIUC08,EMVIUC09,EMVIUC10:
                                EMVIUC11,EMVIUC12,EMVIUC13,EMVIUC14,EMVIUC15:
                                EMVIUC16,EMVIUC17,EMVIUC18,EMVIUC19,EMVIUC20:
                                EMVIUC21,EMVIUC22,EMVIUC23,EMVIUC24,EMVIUC25:
                                EMVIUC26,EMVIUC27,EMVIUC28,EMVIUC29,EMVIUC30
.
          MOVE      ZERO,EXIT
          GOTO      GCATG999
.
GCATG950  MOVE      ONE,EXIT
.
GCATG999  RETURN
+
.****************************************************************************
.*                         PARAM000                    Called by: PARAM000  *
.*               Format option string for a parameter                       *
.* Returns:  EXIT  0 = caption added                                        *
.*                 1 = no more captions to add                              *
.****************************************************************************
.
PARAM000  COMPARE   FORM1,EMCNSCRN               * valid parameter ?
          GOTO      PARAM950 IF LESS             * no - finished
.
          BRANCH    FORM1,PARAM050               * first parameter only
.
          APPEND    SP1,OPTNLINE                 * add " " to display variable
          ADD       ONE,COUNTR                   * increment length counter
          APPEND    ATCHAR,ATTRLINE              * set attribute to normal
.
          APPEND    FORM1,OPTNLINE               * add option no. to display
          ADD       ONE,COUNTR                   * increment length counter
          APPEND    ANSB,ATTRLINE                * set attribute to bold
.
          APPEND    HYPHEN,OPTNLINE              * add hyphen to display
          ADD       ONE,COUNTR                   * increment length counter
          APPEND    ATCHAR,ATTRLINE              * set attribute to normal
.
PARAM050  BRANCH    FORM1,PARAM100:
                          PARAM200:
                          PARAM300:
                          PARAM400:
                          PARAM500
.
PARAM100  STRIP     EMCNCAP1                     * remove trailing spaces
          APPEND    EMCNCAP1,OPTNLINE            * add caption 1
          MOVE      MANFLAG1,FLASHSET
          GOTO      PARAM600
.
PARAM200  STRIP     EMCNCAP2                     * remove trailing spaces
          APPEND    EMCNCAP2,OPTNLINE            * add caption 2
          MOVE      MANFLAG2,FLASHSET
          GOTO      PARAM600
.
PARAM300  STRIP     EMCNCAP3                     * remove trailing spaces
          APPEND    EMCNCAP3,OPTNLINE            * add caption 3
          MOVE      MANFLAG3,FLASHSET
          GOTO      PARAM600
.
PARAM400  STRIP     EMCNCAP4                     * remove trailing spaces
          APPEND    EMCNCAP4,OPTNLINE            * add caption 4
          MOVE      MANFLAG4,FLASHSET
          GOTO      PARAM600
.
PARAM500  STRIP     EMCNCAP5                     * remove trailing spaces
          APPEND    EMCNCAP5,OPTNLINE            * add caption 5
          MOVE      MANFLAG5,FLASHSET
.
PARAM600  MOVELPTR  OPTNLINE,LINEPOSN            * get current length of display
.
.         Add normal video to attribute line for each character in caption
.
          WHILE     COUNTR < LINEPOSN
            IF        (WINFLG = 1) | ((WINFLG = 2) & (FLASHSET = 0))
              APPEND    ATCHAR,ATTRLINE          * set attribute to normal
            ELSE
              APPEND    ANSH,ATTRLINE            * set attribute to flashing
            ENDIF
            ADD       ONE,COUNTR                 * increment length counter
          DO
.
          MOVE      ZERO,EXIT
          GOTO      PARAM999
.
PARAM950  MOVE      ONE,EXIT                     * last caption added
.
PARAM999  RETURN
+
.*****************************************************************************
.*                              CPRAF000               Called by: CMASV000   *
.*                      Clear the PRA fields                                 *
.*****************************************************************************
.
CPRAF000  MOVE      ZEROVISN,PKADMN
          PACK      PKNAME,SP70,SP10
          PACK      PKADD1,SP30,SP10
          PACK      PKADD2,SP30,SP10
          PACK      PKSUBR,SP30,SP10
          PACK      PKADD4,SP30,SP10
          MOVE      SP8,PKPOST
          MOVE      SP20,PKTELEP
          MOVE      SP20,PKTELEB
          MOVE      SP10,PKRELP
.
CPRAF999  RETURN
+
.*****************************************************************************
.*                              CLWRN000               Called by: CMASV000   *
.*         Clear the Medical Warnings fields                                 *
.*****************************************************************************
.
CLWRN000  
.
CLWRN999  RETURN
+
.***************************************************************************
.*                             EXTRT000               Called by: DSPPR000  *
.*           Ask if procedure is to be extracted                           *
.* Returns: ANS   Y = Procedure to be extracted                            *
.*                N = Procedure not to be extracted                        *
.***************************************************************************
.
EXTRT000  MOVE      ANSY,ANS                     * set default to "Y"
          KEYIN     *P51:24,*EL,"Extract (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") :":
                    *P66:24,*V2LON,*RV,ANS:
                    *P66:24,*DV,ANS
.
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS                     * "Y" input ?
          GOTO      EXTRT999 IF EQUAL            * yes
.
          MATCH     ANSN,ANS                     * "N" input ?
          GOTO      EXTRT999 IF EQUAL            * yes
.
          BEEP                                   * invalid
          GOTO      EXTRT000
.
EXTRT999  RETURN
+
.*********************************************************************
.*                  KEYRS000                    Called by : DSPPR000 *
.*        Keyin response to question                                 *
.*        Returns : EXIT = 0      Post entered                       *
.*                  EXIT = 1      Cancel entered                     * 
.*                  EXIT = 2      Next entered                       * 
.*                  EXIT = 3      Prev entered                       * 
.*                  EXIT = 4      Add entered                        * 
.*                  EXIT = 5      Delete entered                     * 
.*                  EXIT = 6      Modify entered                     * 
.*********************************************************************
.
KEYRS000  DISPLAY   *P1:24,*EL,*P5:24,"(",*V2LON,ANSP,*HOFF,")ost, (",*V2LON:
                    ANSC,*HOFF,")ancel, (",*V2LON,ANSA,*HOFF,")dd, (",*V2LON:
                    ANSD,*HOFF,")elete, (",*V2LON,ANSM,*HOFF,")odify";
          MOVE      FORTY8,CCOL
          IF        CALLPOSN = 1 | CALLPOSN = 2
            DISPLAY   ", (",*V2LON,ANSN,*HOFF,")ext";
            ADD       EIGHT,CCOL
          ENDIF
          IF        CALLPOSN = 1 | CALLPOSN = 3
            DISPLAY   ", p(",*V2LON,ANSR,*HOFF,")evious";
            ADD       TEN2,CCOL
          ENDIF
.
          DISPLAY   " :  ";
          ADD       FOUR,CCOL
.
KEYRS100  KEYIN     *PCCOL:24,*V2LON,ANS:
                    *PCCOL:24,*DV,ANS
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSA,ANS                * add selected ?
          GOTO      KEYRS940 IF EQUAL       * yes
.
          MATCH     ANSD,ANS                * delete selected ?
          GOTO      KEYRS950 IF EQUAL       * yes
.
          MATCH     ANSP,ANS                * post selected ?
          GOTO      KEYRS900 IF EQUAL       * yes
.
          MATCH     ANSC,ANS                * cancel selected ?
          GOTO      KEYRS910 IF EQUAL       * yes
.
          MATCH     ANSM,ANS                * modify selected ?
          GOTO      KEYRS960 IF EQUAL       * yes
.
          MATCH     ANSN,ANS                * next page selected ?
          GOTO      KEYRS920 IF EQUAL       * yes
.
          MATCH     ANSR,ANS                * previous page selected ?
          GOTO      KEYRS930 IF EQUAL       * yes
.
KEYRS150  BEEP
          GOTO      KEYRS100
.
KEYRS900  MOVE      ZERO,EXIT               * post
          GOTO      KEYRS999
.
KEYRS910  MOVE      ONE,EXIT                * cancel
          GOTO      KEYRS999
.
KEYRS920  MOVE      TWO,EXIT                * next
          GOTO      KEYRS999
.
KEYRS930  MOVE      THREE,EXIT              * previous
          GOTO      KEYRS999
.
KEYRS940  MOVE      FOUR,EXIT               * add
          GOTO      KEYRS999
.
KEYRS950  MOVE      FIVE,EXIT               * delete
          GOTO      KEYRS999
.
KEYRS960  MOVE      SIX,EXIT                * modify
.
KEYRS999  RETURN
+
.****************************************************************************
.*                             VALDD000               Called by: DISC0000   *
.*             Validate departure status & related fields                   *
.* Returns: EXIT  0 = all fields valid                                      *
.*                1 = fields are not valid                                  *
.****************************************************************************
.
VALDD000  MATCH     SP3,EMVIDSTA
          IF        !@EQUAL
.
            PACK      KEY5,CODEED,EMVIDSTA
            CALL      RDCODE1                    * code on file ?
            BRANCH    OVRCD,VALDD050             * no - invalid
.
            UNPACK    THCSCOD,DIM2               * I CAR 41114
            SQUEEZE   DIM2                       * Save HDP Eq.
            MOVE      DIM2,FORM2                 * end I CAR 41114
.
            COMPARE   ZERO,FORM2                 * I CAR 41114
            GOTO      VALDD100 IF EQUAL          * I CAR 41114
.
            COMPARE   ONE,FORM2                  * I CAR 41114
            GOTO      VALDD100 IF EQUAL          * I CAR 41114
.           MATCH     "1",TCINDC2                * discharged to home ?
.           GOTO      VALDD100 IF EQUAL          * yes
.
            COMPARE   TWO,FORM2                  * I CAR 41114
            GOTO      VALDD400 IF EQUAL          * I CAR 41114
.           MATCH     "2",TCINDC2                * admission to ward ?
.           GOTO      VALDD400 IF EQUAL          * yes
.
            COMPARE   THREE,FORM2                * I CAR 41114
            GOTO      VALDD400 IF EQUAL          * I CAR 41114
.           MATCH     "3",TCINDC2                * admission within ED ?
.           GOTO      VALDD100 IF EQUAL          * yes
.
            COMPARE   FOUR,FORM2                 * I CAR 41114
            GOTO      VALDD400 IF EQUAL          * I CAR 41114
.           MATCH     "4",TCINDC2                * transfer to another hosp. ?
.           GOTO      VALDD400 IF EQUAL          * yes
.
            COMPARE   FIVE,FORM2                 * I CAR 41114
            GOTO      VALDD400 IF EQUAL          * I CAR 41114
.           MATCH     "5",TCINDC2                * left at own risk ?
.           GOTO      VALDD400 IF EQUAL          * yes
.
            COMPARE   SIX,FORM2                  * I CAR 41114
            GOTO      VALDD700 IF EQUAL          * I CAR 41114
.           MATCH     "6",TCINDC2                * left before seen by doct. ?
.           GOTO      VALDD700 IF EQUAL          * yes
.
            COMPARE   SEVEN,FORM2                * I CAR 41114
            GOTO      VALDD400 IF EQUAL          * I CAR 41114
.           MATCH     "7",TCINDC2                * died in ED ?
.           GOTO      VALDD400 IF EQUAL          * yes
.
            COMPARE   EIGHT,FORM2                * I CAR 41114
            GOTO      VALDD400 IF EQUAL          * I CAR 41114
.           MATCH     "8",TCINDC2                * dead on arrival ?
.           GOTO      VALDD400 IF EQUAL          * yes
.
            COMPARE   NINE,FORM2                 * I CAR 41114
            GOTO      VALDD100 IF EQUAL          * I CAR 41114
.
            COMPARE   TEN,FORM2                  * I CAR 41114
            GOTO      VALDD100 IF EQUAL
.
            COMPARE   TEN1,FORM2
            GOTO      VALDD400 IF EQUAL
.
            COMPARE   TEN2,FORM2
            GOTO      VALDD100 IF EQUAL
.
            COMPARE   TEN3,FORM2
            GOTO      VALDD400 IF EQUAL          * end I CAR 41114
          ENDIF
VALDD050  MOVE      "Discharge Status not valid",DISPMSG 
          GOTO      VALDD950
.
.         Patient discharged to home.
.         Valid "Referred to on Departure" values are 1,2,3,4,5,6,7,8,16,17 & 18
.
VALDD100  MOVE      EMCNUDFD,CATEGORY
          CALL      GCATG000                     * get category & field
          BRANCH    EXIT,VALDD110                * none found - invalid
.
          MATCH     SP3,DIM3                     * field blank ?
          GOTO      VALDD110 IF EQUAL            * yes - invalid
.
          PACK      KEY5,EMCNUDFD,DIM3
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,VALDD110               * no - ignore
.
          MATCH     "19",THCSCOD                 * HDP Equivalent "19" ?
          GOTO      VALDD900 IF NOT EQUAL        * no - valid codes
.
VALDD110  CLEAR     DISPMSG
          APPEND    "Code for #"Referred to on Departure#" not valid ",DISPMSG
          APPEND    "for #"Departure Status#"",DISPMSG
          RESET     DISPMSG
          GOTO      VALDD950
.
.         Valid "Referred to on Departure" value is 19.
.         Get the category used for "Referred to on Departure".
.
VALDD400  MOVE      TCINDC2,ANS                  * save indicator 2
          MOVE      EMCNUDFD,CATEGORY
          CALL      GCATG000                     * get category & field
          BRANCH    EXIT,VALDD405                * none found
.
          MATCH     SP3,DIM3                     * blank field ?
          GOTO      VALDD405 IF EQUAL            * yes - invalid
.
.         The VEMD code is stored in the HDP Equivalent, so get that value
.
          PACK      KEY5,EMCNUDFD,DIM3
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,VALDD405
.
.         The HDP equivalent should be set to "19" ?
.
          MATCH     "19",THCSCOD                 * valid code ?
          GOTO      VALDD410 IF EQUAL            * yes
.
VALDD405  MOVE      "Invalid code for #"Referred to on Departure#"",DISPMSG 
          GOTO      VALDD950
.
.         If the patient has been transferred to another hospital (TCINDC2 = 4),
.         we need to check that the following fields have been completed - 
.         "Reason for Transfer"
.         "Escort Source" 
.         "Departure Transport Mode"
.
VALDD410  COMPARE   FOUR,FORM2                   * HDP Eq = "4" ?    I CAR 41114
.         MATCH     "4",ANS                      * indicator 2 = "4" ?
          GOTO      VALDD900 IF NOT EQUAL        * no - finished validation
.
          MOVE      EMCNUDFE,CATEGORY
          CALL      GCATG000                     * get category & field
          BRANCH    EXIT,VALDD415                * none found
.
          MATCH     SP3,DIM3                     * reason for transfer blank ?
          GOTO      VALDD420 IF NOT EQUAL        * no
.
VALDD415  MOVE      "#"Reason for Transfer#" not valid",DISPMSG
          GOTO      VALDD950
.
VALDD420  MOVE      EMCNUDFF,CATEGORY
          CALL      GCATG000                     * get category & field
          BRANCH    EXIT,VALDD425                * none found
.
          MATCH     SP3,DIM3                     * escort service blank ?
          GOTO      VALDD430 IF NOT EQUAL        * no
.
VALDD425  MOVE      "#"Escort Service#" not valid",DISPMSG
          GOTO      VALDD950
.
VALDD430  MOVE      EMCNUDFG,CATEGORY
          CALL      GCATG000                     * get category & field
          BRANCH    EXIT,VALDD435                * none found
.
          MATCH     SP3,DIM3                     * dep. transport mode blank ?
          GOTO      VALDD900 IF NOT EQUAL        * no
.
VALDD435  MOVE      "#"Departure Transport Mode#" is mandatory",DISPMSG
          GOTO      VALDD950
.
.         Patient left before being seen by doctor.
.         Valid "Referred to on Departure" values are 4,5,6,8,17,18 & 19
.
VALDD700  MOVE      EMCNUDFD,CATEGORY
          CALL      GCATG000                     * get category & field
          BRANCH    EXIT,VALDD940                * none found
.
          MATCH     SP3,DIM3                     * field blank ?
          GOTO      VALDD940 IF EQUAL            * yes - invalid
.
          PACK      KEY5,EMCNUDFD,DIM3
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,VALDD940               * no - ignore
.
          MATCH     "1 ",THCSCOD                 * HDP Equivalent "1 " ?
          GOTO      VALDD940 IF EQUAL            * yes - invalid code
.
          MATCH     "2 ",THCSCOD                 * HDP Equivalent "2 " ?
          GOTO      VALDD940 IF EQUAL            * yes - invalid code
.
          MATCH     "3 ",THCSCOD                 * HDP Equivalent "3 " ?
          GOTO      VALDD940 IF EQUAL            * yes - invalid code
.
          MATCH     "7 ",THCSCOD                 * HDP Equivalent "7 " ?
          GOTO      VALDD940 IF EQUAL            * yes - invalid code
.
          MATCH     "16",THCSCOD                 * HDP Equivalent "16" ?
          GOTO      VALDD940 IF EQUAL            * yes - invalid code
.
VALDD900  MOVE      ZERO,EXIT
          GOTO      VALDD999
.
VALDD940  MOVE      "Invalid code for #"Referred to on Departure#"",DISPMSG 
.
VALDD950  CALL      ADDMSG00
          MOVE      ONE,EXIT
.
VALDD999  RETURN
+
.****************************************************************************
.*                             VDOAF000          Called by: DISC0000        *
.*      Validate all the appropriate fields associated with D.O.A.'s        *
.* Returns: EXIT  0 = all fields valid                                      *
.*                1 = fields are not valid                                  *
.****************************************************************************
.
VDOAF000  MOVE      ZERO,DOAFLAG1                * initialise field flags
          MOVE      ZERO,DOAFLAG2
          MOVE      ZERO,DOAFLAG3
          MOVE      ZERO,DOAFLAG4
.
.         Check if Visit Type is DOA
.
          MOVE      EMCNUDFC,CATEGORY
          CALL      GCATG000                     * get category & field
          BRANCH    EXIT,VDOAF100                * none found
.
          MATCH     SP3,DIM3                     * visit type blank ?
          GOTO      VDOAF100 IF EQUAL            * yes
.
          PACK      KEY5,EMCNUDFC,DIM3
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,VDOAF100               * no - ignore
.
          MATCH     "10",THCSCOD                 * DOA ?
          IF        @EQUAL
            MOVE      ONE,DOAFLAG1               * yes
          ENDIF
.
.         Check if Triage Code is DOA
.
VDOAF100  MATCH     SP3,EMVITRIG                 * triage code blank ?
          GOTO      VDOAF200 IF EQUAL            * yes
.
          PACK      KEY5,CODEAA,EMVITRIG
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,VDOAF200               * no - ignore
.
          MATCH     "6",TCINDC1                  * DOA ?
          IF        @EQUAL
            MOVE      ONE,DOAFLAG2               * yes
          ENDIF
.
.         Check if Discharge Status is DOA
.
VDOAF200  MATCH     SP3,EMVIDSTA                 * discharge status blank ?
          GOTO      VDOAF300 IF EQUAL            * yes
.
          PACK      KEY5,CODEED,EMVIDSTA
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,VDOAF300               * no - ignore
.
.         MATCH     "8",TCINDC2                  * DOA ?       * D CAR 41114
.         IF        @EQUAL
.           MOVE      ONE,DOAFLAG3               * yes
.         ENDIF                                                * end D CAR 41114
.
          UNPACK    THCSCOD,DIM2               * I CAR 41114
          SQUEEZE   DIM2                       * Save HDP Eq.
          MOVE      DIM2,FORM2
.
          COMPARE   EIGHT,FORM2
          IF        @EQUAL
            MOVE      ONE,DOAFLAG3               * yes
          ENDIF
.                                              * end I CAR 41114
.         Check if Departure Transport Mode is DOA
.
VDOAF300  MOVE      EMCNUDFG,CATEGORY
          CALL      GCATG000                     * get category & field
          BRANCH    EXIT,VDOAF400                * none found
.
          MATCH     SP3,DIM3                     * dep. transport mode blank ?
          IF        @EQUAL
            GOTO      VDOAF400
          ENDIF 
.
          PACK      KEY5,EMCNUDFG,DIM3
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,VDOAF400               * no - ignore
.
          MATCH     "9 ",THCSCOD                 * DOA ?
          IF        @EQUAL
            MOVE      ONE,DOAFLAG4               * yes
          ENDIF
.
.
.         See if any of the above fields contain DOA codes.
.
VDOAF400  ASSIGN    (DOAFLAG1+DOAFLAG2+DOAFLAG3+DOAFLAG4),DOATOTAL
          COMPARE   ZERO,DOATOTAL                * any DOA VEMD codes ?
          GOTO      VDOAF900 IF EQUAL            * no - no further validation
.
          COMPARE   FOUR,DOATOTAL                * valid DOA codes in all fields
          GOTO      VDOAF700 IF EQUAL            * yes - validate other fields
.
.         One or more of the fields checked did not contain valid DOA codes
.
          IF        DOAFLAG1 = 0
            MOVE      "#"Type of Visit#" code is not valid for DOA",DISPMSG  
            GOTO      VDOAF950
          ENDIF
.
          IF        DOAFLAG2 = 0
            MOVE      "Triage code is not valid for DOA",DISPMSG 
            GOTO      VDOAF950
          ENDIF
.
          IF        DOAFLAG3 = 0
            MOVE      "#"Discharge Status#" code is not valid for DOA",DISPMSG 
            GOTO      VDOAF950
          ENDIF
.
          IF        DOAFLAG4 = 0
            MOVE      "#"Departure Transport Mode#" not valid for DOA",DISPMSG 
            GOTO      VDOAF950
          ENDIF
.
.         Finally, we need to validate "Compensable Status" & 
.         "Referred to on Departure" fields for correct DOA status.
.
VDOAF700  MATCH     SP3,EMVICOMP                 * compensation code blank ?
          GOTO      VDOAF710 IF EQUAL            * yes - invalid
.
          PACK      KEY5,CODECL,EMVICOMP
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,VDOAF710               * no - ignore
.
..          CMATCH    "7",THCSCOD                  * unknown ?
..          GOTO      VDOAF800 IF EQUAL            * yes - valid
          GOTO      VDOAF800                     * yes - valid
.
VDOAF710  MOVE      "#"Compensation Code#" invalid for DOA",DISPMSG 
          GOTO      VDOAF950
.
.         Check if Referred to on Departure is valid
.
VDOAF800  MOVE      EMCNUDFD,CATEGORY
          CALL      GCATG000                     * get category & field
          BRANCH    EXIT,VDOAF810                * none found
.
          MATCH     SP3,DIM3                     * blank code ?
          GOTO      VDOAF810 IF EQUAL            * yes - invalid
.
          PACK      KEY5,EMCNUDFD,DIM3
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,VDOAF810               * no - ignore
.
          MATCH     "19",THCSCOD                 * DOA ?
          GOTO      VDOAF900 IF EQUAL            * yes - valid
.
VDOAF810  MOVE      "#"Referred to on Departure#" code invalid for DOA",DISPMSG 
          GOTO      VDOAF950
.
VDOAF900  MOVE      ZERO,EXIT
          GOTO      VDOAF999
.
VDOAF950  CALL      ADDMSG00
          MOVE      ONE,EXIT
VDOAF999  RETURN
+
SECUR000  MOVE      PASSCODE,KEY4
          CALL      RDEMSEC1                     * user on security file ?
          BRANCH    OVRCD,SECUR950               * no - access not allowed
.
.         The user has a record on the security file, so check if they
.         have access to the screen selected.
.
          LOAD      SECURITY,FORM1,EMSCSCR1,EMSCSCR2,EMSCSCR3,EMSCSCR4,EMSCSCR5
.
          COMPARE   ZERO,SECURITY                * access allowed ?
          GOTO      SECUR950 IF EQUAL            * no
.
          MOVE      ZERO,EXIT                    * access allowed
          GOTO      SECUR999
.
SECUR950  MOVE      ONE,EXIT                     * access not allowed
.
SECUR999  RETURN
+
.****************************************************************************
.*                               UPDTA000              Called by: GPAT0000  *
.*               Update old aae details file variables                      *
.****************************************************************************
.
UPDTA000  MOVE      EMVIADMN,ADANUMB
          MOVE      EMVIURNO,ADAURNO
          MOVE      EMVIDATE,ADADATE
          UNPACK    EMVITIME,ADATIME,ANS,ANS,ANS
          PACK      ADADIAG,EMVICOM1,EMVICOM2
          MOVE      EMVIDOCT,ADADOCT
          MOVE      EMVICOMP,ADACOMP
          MOVE      EMVICLAS,ADACLASS
          MOVE      EMVIINSR,ADAINSUR
          MOVE      EMVISRCE,ADASRC
          MOVE      EMVISITN,ADASIT
          MOVE      EMVIMODE,ADAMODE
          MOVE      EMVIADMT,ADAADMIT
          MOVE      EMVIDURN,ADADURN
          MOVE      EMVIEMPL,ADAEMPL
          MOVE      EMVIWAIT,ADAWAIT
          MOVE      EMVIPREV,ADAPREV
          MOVE      EMVIREFD,AEDARDOC
          MOVE      EMVIUC01,ADAUSR1
          MOVE      EMVIUC02,ADAUSR2
          MOVE      EMVIUC03,ADAUSR3
          MOVE      EMVIUC04,ADAUSR4
          MOVE      EMVIUC05,ADAUSR5
          MATCH     SP8,EMVINSDT
          IF        !@EQUAL
            MOVE      EMVINSDT,ADASDTE
            MOVE      EMVINSTM,ADASEEN
          ELSE
            MOVE      EMVIDRDT,ADASDTE
            MOVE      EMVIDRTM,ADASEEN
          ENDIF
.
UPDTA999  RETURN
+
.****************************************************************************
.*                               UPDSA000              Called by: GPAT0000  *
.*               Update old aae discharge file variables                    *
.****************************************************************************
.
UPDSA000  MOVE      EMVIADMN,ADSNUMB
          MOVE      EMVIDDAT,ADSDATE
          MOVE      EMVIDTIM,ADSTIME
          MOVE      EMVIDSTA,ADSDISC
.
UPDSA999  RETURN
+
+
.****************************************************************************
.*                            COMPN000                 Called by: PROC0000  *
.*              See if this is a compensable claim and if so, load          *
.*              in any compensable details                                  *
.****************************************************************************
.
COMPN000  CALL      CLWCV000                     * clear wc details
          CALL      CLTAV000                     * clear tac details
          CALL      CLVAV000                     * clear va details
          CALL      CLPRV000                     * clear PRA details
.
          MATCH     SP6,EMVICOMP                 * claim code blank ?
          GOTO      COMPN999 IF EQUAL            * yes - not compensable
.
          PACK      KEY5,CODECL,EMVICOMP
          CALL      RDCODE1                      * claim code on file ?
          BRANCH    OVRCD,COMPN999               * no - shouldn't happen
.
          MOVE      ZERO,COUNTER                 * initialise counter
          WHILE     COUNTER < FIVE
            ADD       ONE,COUNTER
            LOAD      ANS,COUNTER,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
.
            MATCH     ANSW,ANS                   * workers comp. claim ?
            IF        @EQUAL
              CALL      LDWCV000                 * yes - load details
              CALL      LDPRV000
              GOTO      COMPN999
            ENDIF
.
            MATCH     ANSM,ANS                   * transport accident claim ?
            IF        @EQUAL
              CALL      LDTAV000                 * yes - load details
              CALL      LDPRV000
              GOTO      COMPN999
            ENDIF
.
            MATCH     ANSV,ANS                   * veterans affair claim ?
            IF        @EQUAL
              CALL      LDVAV000                 * yes - load details
              CALL      LDPRV000
              GOTO      COMPN999
            ENDIF
          DO
.
COMPN999  RETURN
+
.****************************************************************************
.*                           LDWCV000                  Called by: COMPN000  *
.*        Load workers compensation temporary variables                     *
.****************************************************************************
.
LDWCV000  MOVE      EMVIADMN,KEY8
          CALL      RDWCOM1                      * wc record on file ?
          BRANCH    OVRCD,LDWCV999               * no
.
          MOVE      WCENAME,XWCENAME
          MOVE      WCEADD1,XWCEADD1
          MOVE      WCEADD2,XWCEADD2
          MOVE      WCEADD3,XWCEADD3
          MOVE      WCEPOST,XWCEPOST
          MOVE      WCETELE,XWCETELE
          MOVE      WCACDAT,XWCACDAT
          IF        WCACCPT = 1
            MOVE      ANSY,XWCACCPT
          ELSE
            MOVE      ANSN,XWCACCPT
          ENDIF
          MOVE      WCICODE,XWCICODE
          MOVE      WCCLMNO,XWCCLMNO
          MOVE      WCCOMN1,XWCCOMN1
          MOVE      WCCOMN2,XWCCOMN2
.
LDWCV999  RETURN
+
.****************************************************************************
.*                           LDTAV000                  Called by: COMPN000  *
.*        Load transport accident temporary variables                       *
.****************************************************************************
.
LDTAV000  MOVE      EMVIADMN,KEY8
          CALL      RDWMAB1                      * tac record on file ?
          BRANCH    OVRCD,LDTAV999               * no
.
          MOVE      MREFNO,XMREFNO
          MOVE      MPOLIC,XMPOLIC
          MOVE      MACDAT,XMACDAT
          MOVE      MSNAME,XMSNAME
          MOVE      MSTELE,XMSTELE
          MOVE      MCREGO,XMCREGO
          MOVE      MACLOC,XMACLOC
          MOVE      MENGAGED,XMENGAG
          MOVE      MPINJURE,XMPINJR
          MOVE      MMDTRANS,XMMDTRN
          MOVE      MMECHSEV,XMMECHS
          MOVE      MREGNSEV,XMREGNS
          MOVE      MOTHDET1,XMOTHD1
          MOVE      MOTHDET2,XMOTHD2
          MOVE      MOTHDET3,XMOTHD3
.
LDTAV999  RETURN
+
.****************************************************************************
.*                           LDVAV000                  Called by: COMPN000  *
.*        Load veterans affair temporary variables                          *
.****************************************************************************
.
LDVAV000  MOVE      EMVIADMN,KEY8
          CALL      RDWVET1                      * va record on file ?
          BRANCH    OVRCD,LDVAV999               * no
.
          MOVE      VCLMNO,XVCLMNO
.
LDVAV999  RETURN
+
.****************************************************************************
.*                           LDPRV000                  Called by: COMPN000  *
.*                 Load P.R.A. temporary variables                          *
.****************************************************************************
.
LDPRV000  MOVE      EMVIADMN,KEY8
          CALL      RDRESP1                      * PRA record on file ?
          BRANCH    OVRCD,LDPRV999               * no
.
          MOVE      PKNAME,XPKNAME
          MOVE      PKADD1,XPKADD1
          MOVE      PKADD2,XPKADD2
          MOVE      PKSUBR,XPKSUBR
          MOVE      PKADD4,XPKADD4
          MOVE      PKPOST,XPKPOST
          MOVE      PKTELEP,XPKTELEP
          MOVE      PKTELEB,XPKTELEB
          MOVE      PKRELP,XPKRELP
.
LDPRV999  RETURN
+
.****************************************************************************
.*                             CPYSS000               Called by: CNOT0000   *
.*             Load any existing comments into the working file             *
.****************************************************************************
.
CPYSS000  PACK      KEY10,EMVIADMN,SP20
          CALL      RDSDETB1                     * position in file
CPYSS100  CALL      RDKDETB1                     * read next record
          BRANCH    OVRCD,CPYSS999               * eof - finished
.
          MATCH     EMVIADMN,ADBNUMB             * same admission still ?
          GOTO      CPYSS999 IF NOT EQUAL        * no - finished
.
          WRITE     WORKFILE,SEQ;ADBLINE         * write comment to work file
          GOTO      CPYSS100
.
CPYSS999  RETURN
+
.****************************************************************************
.*                           CLWCV000                  Called by: COMPN000  *
.*        Clear workers compensation temporary variables          GPAT0000  *
.****************************************************************************
.
CLWCV000  MOVE      SP8,XWCADMNO
          MOVE      SP30,XWCENAME
          PACK      XWCEADD1,SP30,SP5
          PACK      XWCEADD2,SP30,SP5
          PACK      XWCEADD3,SP30,SP5
          PACK      XWCEADD4,SP30,SP5
          MOVE      SP8,XWCEPOST
          MOVE      SP20,XWCETELE
          MOVE      SP8,XWCACDAT
          MOVE      SP1,XWCACCPT
          MOVE      SP6,XWCICODE
          MOVE      SP20,XWCCLMNO
          PACK      XWCCOMN1,SP20,SP20
          PACK      XWCCOMN2,SP20,SP20
.
CLWCV999  RETURN
+
.****************************************************************************
.*                           CLTAV000                  Called by: COMPN000  *
.*        Clear transport accident temporary variables            GPAT0000  *
.****************************************************************************
.
CLTAV000  MOVE      SP8,XMADMNO
          MOVE      SP20,XMREFNO
          MOVE      SP20,XMPOLIC
          MOVE      SP8,XMACDAT
          MOVE      SP30,XMSNAME
          PACK      XMSTELE,SP10,SP2
          PACK      XMCREGO,SP30,SP6
          PACK      XMACLOC,SP20,SP20
          MOVE      SP1,XMDPIND
          MOVE      SP20,XMENGAG
          MOVE      SP30,XMPINJR
          MOVE      SP10,XMMDTRN
          MOVE      SP30,XMMECHS
          MOVE      SP20,XMREGNS
          MOVE      SP30,XMOTHD1
          MOVE      SP30,XMOTHD2
          MOVE      SP30,XMOTHD3
.
CLTAV999  RETURN
+
.****************************************************************************
.*                           CLVAV000                  Called by: COMPN000  *
.*        Clear veterans affair temporary variables               GPAT0000  *
.****************************************************************************
.
CLVAV000  MOVE      SP8,XVADMNO
          MOVE      SP20,XVCLMNO
.
CLVAV999  RETURN
+
.****************************************************************************
.*                           CLPRV000                  Called by: GPAT0000  *
.*                 Clear P.R.A. temporary variables               COMPN000  *
.****************************************************************************
.
CLPRV000  MOVE      SP20,XPKNAME
          PACK      XPKADD1,SP30,SP5
          PACK      XPKADD2,SP30,SP5
          PACK      XPKSUBR,SP30,SP5
          PACK      XPKADD4,SP30,SP5
          MOVE      SP8,XPKPOST
          MOVE      SP20,XPKTELEP
          MOVE      SP20,XPKTELEB
          MOVE      SP10,XPKRELP
.
CLPRV999  RETURN
+
.****************************************************************************
.*                           CLAMC000                                       *
.*          Check if the claim code is a compensable one                    *
.* Requires: EMVICOMP  (compensation claim code from emrvisaf)              *
.*           EMVIADMN                                                       *
.****************************************************************************
.
CLAMC000  MATCH     SP6,EMVICOMP                 * claim code blank ?
          GOTO      CLAMC050 IF EQUAL            * yes
.
          CALL      CINS0000                     * Check Claim insurance details
          BRANCH    OVRCD,CLAMC100               * check if compensable
.
          GOTO      CLAMC999
.
.         This is not a comp. claim, so make sure there are no comp. claim
.         records on file
.
CLAMC050  CALL      DEWCR000                     * delete WC record
          CALL      DETAR000                     * delete TAC record
          CALL      DEVAR000                     * delete VA record
          CALL      DEPRR000                     * delete PRA record
.
          GOTO      CLAMC999                     * finished
.
CLAMC100  PACK      KEY5,CODECL,EMVICOMP
          CALL      RDCODE1                      * claim code on file ?
          BRANCH    OVRCD,CLAMC050               * no - shouldn't happen
.
          MOVE      ZERO,COUNTER                 * initialise counter
          WHILE     COUNTER < FIVE
            ADD       ONE,COUNTER
            LOAD      ANS,COUNTER,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
.
            MATCH     ANSW,ANS                   * workers comp. claim ?
            GOTO      CLAMC300 IF EQUAL          * yes
.
            MATCH     ANSM,ANS                   * transport accident claim ?
            GOTO      CLAMC400 IF EQUAL          * yes
.
            MATCH     ANSV,ANS                   * veterans affair claim ?
            GOTO      CLAMC500 IF EQUAL          * yes
          DO
.
          GOTO      CLAMC050                     * not compensable
.
.         Workers Comp.
.
CLAMC300  CALL      SAVWV000                     * save wc details
          CALL      SAVPV000                     * save pra details
          CALL      DETAR000                     * delete TAC record
          CALL      DEVAR000                     * delete VA record
          GOTO      CLAMC999
.
.         Transport Accident
.
CLAMC400  CALL      SAVTV000                     * save tac details
          CALL      SAVPV000                     * save pra details
          CALL      DEWCR000                     * delete WC record
          CALL      DEVAR000                     * delete VA record
          GOTO      CLAMC999
.
.         Veterans Affairs
.
CLAMC500  CALL      SAVVV000                     * save va details
          CALL      SAVPV000                     * save pra details
          CALL      DEWCR000                     * delete WC record
          CALL      DETAR000                     * delete TAC record
.
CLAMC999  RETURN
+
.****************************************************************************
.*                          CINS0000                                        *
.*        Check Insurance details for the Claim code                        *
.****************************************************************************
CINS0000  MOVE      EMVICOMP,KEY3
          CALL      PRFAINSR        
          BRANCH    OVRCD,CINS9999
.
          MOVE      EMVIADMN,PKADMN
          MOVE      EMVIADMN,KEY8
          CALL      RDARESP1                   * PRA record on file ?
          IF        OVRCD = 1
            CALL      WRRESP1                  * write new record
          ELSE
            CALL      UPRESP1                  * update existing record
          ENDIF
          MOVE      ZERO,OVRCD
CINS9999  RETURN
+
.****************************************************************************
.*                          TRCMA000                   Called by : PROC0000 *
.*        Post the comments from the temp file to aaedetbf         GPMI0000 *
.****************************************************************************
.
TRCMA000  MOVE      ZERO,OVRCD                   * assume temp file will exist
          TRAP      OVERCOND IF IO               * trap just in case it doesn't
          OPEN      WORKFILE,TWNAME              * open the comments temp file
          TRAPCLR   IO                           * clear the IO trap
          BRANCH    OVRCD,TRCMA999               * no file - no comments to post
.
          MOVE      ONE,CCITEM                   * starting line No. to post
.
.         Step 1: Delete any old comments from EMRCOMFD
.
TRCMA100  PACK      KEY10,EMVIADMN,SP20
          CALL      RDSDETB1                     * pos'n at start of old cmnts
          CALL      RDKDETB1                     * get the next comments record
          BRANCH    OVRCD,TRCMA200               * eof - finished deleting
.
          MATCH     EMVIADMN,ADBNUMB             * same admission still ?
          GOTO      TRCMA200 IF NOT EQUAL        * no - finished
.
          PACK      KEY10,ADBNUMB,ADBCLNO
          CALL      DEDETB1                      * delete comment line
          GOTO      TRCMA100                     * get the next record
.
.         Step 2: copy the entered comments from temp file to AAEDEBFD
.
.         Loop over temp file and post to the main file
.
TRCMA200  READ      WORKFILE,SEQ;ADBLINE         * read the temp file
          GOTO      TRCMA999 IF OVER             * eof - finished
.
          MOVE      CCITEM,ADBCLNO               * load line number
          MOVE      EMVIADMN,ADBNUMB             * load admission number
          MOVE      SP20,ADBSPARE
          CALL      WRDETB1                      * write the new record
          ADD       ONE,CCITEM                   * increment line number
.
.         The next test is being a bit paranoid, but lets make sure the
.         word processor didn't leave more than 99 lines in the file
.
          COMPARE   ZERO,CCITEM                  * wrapped around to zero ?
          GOTO      TRCMA200 IF NOT EQUAL        * get the next comment line
.
TRCMA999  RETURN
+
.****************************************************************************
.*                           SAVWV000                  Called by: CLAM0000  *
.*        Save workers compensation temporary variables                     *
.****************************************************************************
.
SAVWV000  MOVE      EMVIADMN,KEY8
          CALL      RDWCOM1                      * wc record on file ?
.
          MOVE      XWCENAME,WCENAME             * move temp variables to file
          MOVE      XWCEADD1,WCEADD1
          MOVE      XWCEADD2,WCEADD2
          MOVE      XWCEADD3,WCEADD3
          MOVE      XWCEPOST,WCEPOST
          MOVE      XWCETELE,WCETELE
          MOVE      XWCACDAT,WCACDAT
          MATCH     ANSY,XWCACCPT
          IF        @EQUAL
            MOVE      ONE,WCACCPT
          ELSE
            MOVE      ZERO,WCACCPT
          ENDIF
          MOVE      XWCICODE,WCICODE
          MOVE      XWCCLMNO,WCCLMNO
          MOVE      XWCCOMN1,WCCOMN1
          MOVE      XWCCOMN2,WCCOMN2
.
          IF        OVRCD = 1
            MOVE      EMVIADMN,KEY8
            CALL      WRWCOM1                    * write new record
.
.           If we are sending ACC details in PV1-20, then we need to
.           trigger an A08 message for the visit to reflect that this is
.           now an ACC patient
.
            MATCH     "1",PTCNH7AC
            IF        @EQUAL
              CALL      PMIGTNID               * get national id for dgate write
              MOVE      NMPNUMB,PTNINMPI
              MOVE      ONE,HL7TRGID
              MOVE      "WEBEMRCM",HL7INCLD
              PROC      DGCLICEC                 * send update admission details
            ENDIF
          ELSE
            CALL      UPWCOM1                    * update existing record
          ENDIF
.
SAVWV999  RETURN
+
.****************************************************************************
.*                           SAVTV000                  Called by: CLAM0000  *
.*        Save transport accident temporary variables                       *
.****************************************************************************
.
SAVTV000  MOVE      EMVIADMN,KEY8
          CALL      RDWMAB1                      * tac record on file ?
.
          MOVE      XMREFNO,MREFNO
          MOVE      XMPOLIC,MPOLIC
          MOVE      XMACDAT,MACDAT
          MOVE      XMSNAME,MSNAME
          MOVE      XMSTELE,MSTELE
          MOVE      XMCREGO,MCREGO
          MOVE      XMACLOC,MACLOC
          MATCH     ANSD,XMDPIND
.         IF        @EQUAL
.           MOVE      ONE,MDPINDIC
.         ELSE
.           MOVE      TWO,MDPINDIC
.         ENDIF
          MOVE      XMENGAG,MENGAGED
          MOVE      XMPINJR,MPINJURE
          MOVE      XMMDTRN,MMDTRANS
          MOVE      XMMECHS,MMECHSEV
          MOVE      XMREGNS,MREGNSEV
          MOVE      XMOTHD1,MOTHDET1
          MOVE      XMOTHD2,MOTHDET2
          MOVE      XMOTHD3,MOTHDET3
.
          IF        OVRCD = 1
            MOVE      EMVIADMN,KEY8
            CALL      WRWMAB1                    * write new record
          ELSE
            CALL      UPWMAB1                    * update existing record
          ENDIF
.
SAVTV999  RETURN
+
.****************************************************************************
.*                           SAVVV000                  Called by: CLAM0000  *
.*        Save veterans affair temporary variables                          *
.****************************************************************************
.
SAVVV000  MOVE      EMVIADMN,KEY8
          CALL      RDWVET1                      * va record on file ?
.
          MOVE      XVCLMNO,VCLMNO
.
          IF        OVRCD = 1
            MOVE      EMVIADMN,KEY8
            CALL      WRWVET1                    * write new record
          ELSE
            CALL      UPWVET1                    * update existing record
          ENDIF
.
SAVVV999  RETURN
+
.****************************************************************************
.*                           SAVPV000                  Called by: CLAM0000  *
.*                 Save P.R.A. temporary variables                          *
.****************************************************************************
.
SAVPV000  MOVE      EMVIADMN,KEY8
          CALL      RDRESP1                      * PRA record on file ?
.
          MOVE      XPKNAME,PKNAME
          MOVE      XPKADD1,PKADD1
          MOVE      XPKADD2,PKADD2
          MOVE      XPKSUBR,PKSUBR
          MOVE      XPKADD4,PKADD4
          MOVE      XPKPOST,PKPOST
          MOVE      XPKTELEP,PKTELEP
          MOVE      XPKTELEB,PKTELEB
          MOVE      XPKRELP,PKRELP
.
          IF        OVRCD = 1
            MOVE      EMVIADMN,KEY8
            CALL      WRRESP1                    * write new record
          ELSE
            CALL      UPRESP1                    * update existing record
          ENDIF
.
SAVPV999  RETURN
+
.****************************************************************************
.*                           DEWCR000                  Called by: CLAM0000  *
.*          Delete Workers Compensation record for a visit                  *
.* Requires : EMVIADMN  (ED visit number)                                   *
.****************************************************************************
.
DEWCR000  MOVE      EMVIADMN,KEY8
          CALL      RDWCOM1                      * WC claim on file ?
          IF        OVRCD = 0
            MOVE      EMVIADMN,KEY8
            CALL      DEWCOM1                    * yes - delete record
.
.           If we are sending ACC details in PV1-20, then we need to
.           trigger an A08 message for the visit to reflect that this is
.           no longer an ACC patient.
.
            MATCH     "1",PTCNH7AC
            IF        @EQUAL
              CALL      PMIGTNID               * get national id for dgate write
              MOVE      NMPNUMB,PTNINMPI
              MOVE      TWO,HL7TRGID
              MOVE      "WEBEMRCM",HL7INCLD
              PROC      DGCLICEC                 * send update emr details
            ENDIF
          ENDIF 
.
DEWCR999  RETURN
+
.****************************************************************************
.*                           DETAR000                  Called by: CLAM0000  *
.*          Delete Transport Accident record for a visit                    *
.* Requires : EMVIADMN  (ED visit number)                                   *
.****************************************************************************
.
DETAR000  MOVE      EMVIADMN,KEY8
          CALL      RDWMAB1                      * TAC claim on file ?
          IF        OVRCD = 0
            MOVE      EMVIADMN,KEY8
            CALL      DEWMAB1                    * yes - delete record
          ENDIF 
.
DETAR999  RETURN
+
.****************************************************************************
.*                           DEVAR000                  Called by: CLAM0000  *
.*          Delete Veterans Affair record for a visit                       *
.* Requires : EMVIADMN  (ED visit number)                                   *
.****************************************************************************
.
DEVAR000  MOVE      EMVIADMN,KEY8
          CALL      RDWVET1                      * VA claim on file ?
          IF        OVRCD = 0
            MOVE      EMVIADMN,KEY8
            CALL      DEWVET1                    * yes - delete record
          ENDIF 
.
DEVAR999  RETURN
+
.****************************************************************************
.*                           DEPRR000                  Called by: CLAM0000  *
.*                   Delete P.R.A. record for a visit                       *
.* Requires : EMVIADMN  (ED visit number)                                   *
.****************************************************************************
.
DEPRR000  MOVE      EMVIADMN,KEY8
          CALL      RDRESP1                      * VA claim on file ?
          IF        OVRCD = 0
            MOVE      EMVIADMN,KEY8
            CALL      DERESP1                    * yes - delete record
          ENDIF 
.
DEPRR999  RETURN
+

ACTMSAV   MOVE      PURNO,SPURNO
          MOVE      PCHGDTE,SPCHGDTE
          MOVE      PTITL,SPTITL
          MOVE      PSNAME,SPSNAME
          MOVE      PGNAME,SPGNAME
          MOVE      PPSNAME,SPPSNAME
          MOVE      PADD1,SPADD1
          MOVE      PADD2,SPADD2
          MOVE      PSUBRB,SPSUBRB
          MOVE      PPOST,SPPOST
          MOVE      PTELEP,SPTELEP
          MOVE      PTELEB,SPTELEB
.         MOVE      PTMXDOFR,SPDOR
.         MOVE      PMPXRHC1,SPREGP
.         MOVE      PMPXRH1G,SPGPPC
.         MOVE      PMPXR1GC,SPGPPT
          MOVE      PSEX,SPSEX
          MOVE      PMSTAT,SPMSTAT
          MOVE      PBDATE,SPBDATE
          MOVE      PSAGE,SPSAGE
          MOVE      PCONT,SPCONT
          MOVE      PREG,SPREG
          MOVE      PTYPE,SPTYPE
          MOVE      POCCUP,SPOCCUP
          MOVE      PLDDATE,SPLDDATE
          MOVE      PMEDI,SPMEDI
          MOVE      PPENNO,SPPENNO
          MOVE      PPNDTE,SPPNDTE
          MOVE      PREPAT,SPREPAT
          MOVE      PSMOK,SPSMOK
          MOVE      PMICRO,SPMICRO
          MOVE      PCEASE,SPCEASE
          MOVE      PCASE,SPCASE
          MOVE      PAUTOPY,SPAUTOPY
          MOVE      PHIGH1,SPHIGH1
          MOVE      PHIGH2,SPHIGH2
          MOVE      PHIGH3,SPHIGH3
          MOVE      PLOCDOC,SPLOCDOC
          MOVE      PFUNDH,SPFUNDH
          MOVE      PFNDTB,SPFNDTB
          MOVE      PFNDMM,SPFNDMM
          MOVE      PUSR1,SPUSR1
          MOVE      PUSR2,SPUSR2
          MOVE      PUSR3,SPUSR3
          MOVE      PUSR4,SPUSR4
          MOVE      PUSR5,SPUSR5
          MOVE      PUSR6,SPUSR6
          MOVE      PUYN1,SPUYN1
          MOVE      PUYN2,SPUYN2
          MOVE      PUYN3,SPUYN3
.
          MOVE      PNKNAME,SPNKNAME
          MOVE      PNKADD1,SPNKADD1
          MOVE      PNKADD2,SPNKADD2
          MOVE      PNKSUBR,SPNKSUBR
          MOVE      PNKPOST,SPNKPOST
          MOVE      PNKTELP,SPNKTELP
          MOVE      PNKTELB,SPNKTELB
          MOVE      PNKRELP,SPNKRELP
.
.         Save Community Card Details
.
.         MOVE      PTMXCARD,SPCARD
.         MOVE      PTMXCEXP,SPCEXP
.         MOVE      PTMXCXMP,SPCXMP
.         MOVE      PTMXFMLY,SPFMLY
.
          RETURN
