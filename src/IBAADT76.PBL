******************************************************************************
.* System         : Patient Billing                                           *
.* Program        : IBAADT76.PBL                                              *
.* Name           : TAC EDI Private Practice Extract                          *
.******************************************************************************
.* Date           : 22/07/2009                                                *
.* Author         : Mike Laming                                               *
.* Function       : Extract EDI Private Practice details for Victorian TAC    *
.* Modifications  :                                                           *
.*                                                                            *
.* V10.04.01  15/06/2014 Jill Parkinson CAR 301639                            *
.*            Moved TFILENAM to INIT0000                                      *
.* V10.03.01  19/12/2012 Patrick Adair                             CAR 261630 *
.*                       Removed port number from temp file name              *
.*        V9.12.06  17/11/2009  Mike Laming   CAR 209920                      *
.*                  fix the fix - correct "UNTIL" statement at WTIT3000       *
.*        V9.12.05  11/11/2009  Mike Laming   CAR 209920                      *
.*                  Mods for "No.of Services" at WTIT3000 & remove CAR 208480 *
.*        V9.12.04  21/10/2009  Davin         CAR 208480                      *
.*                  Changed to put a 'V' in sixth character of item (XXITNUMB)*
.*        V9.12.03  27/08/2009  Mike Laming   CAR 201835                      *
.*                  Add code to bypass zero balance Invoices at LOAD2000      *
.*        V9.12.02  30/07/2009  Mike Laming   CAR 201835                      *
.*                  Fix fields XXPAINVN & XXHDDATE                            *
.*        V9.12.01  24/07/2009  Mike Laming   CAR 201835                      *
.*                  Fix fields XXHDINVC, XXHDTNAM, XXPAINDT & XXITTAXA        *
.*        V9.12.00  22/07/2009  Mike Laming   CAR 201835                      *
.*                  Cloned from IBAADT74 Outpatients TAC EDI Extract          *
.*                                                                            *
.******************************************************************************
.
          INC       STD001FD
.
          INC       IBACONFD/INC            * Control file
          INC       IBAGEDFD/INC            * GST rate file
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       PATCODFD/INC            * Codes file
          INC       PATCONFD/INC            * Control file
          INC       PATDO1FD/INC            * Doctor file
          INC       PATEBHFD/INC            * EDI batch header file
          INC       PATEBIFD/INC            * EDI batch invoice file
.....     INC       PATEDAFD/INC            * EDI audit file
          INC       PATMA1FD/INC            * Master file
...       INC       PRIHDBFD/INC            * Private Practice Holding Header
          INC       PRIDTRFD/INC            * Private Practice DTR file
          INC       PRIINVFD/INC            * Private Practice Invoice file
          INC       PRIITMFD/INC            * P/P Miscellaneous charges file
          INC       PRIMABFD/INC            * P/P TAC (MAB) file
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
. ----- Tempfile variables -----
.
EXTFILE1  FILE      ASCII,FIXED=256
.
TEMP1     IFILE     SQL,FIXED=42, KEY="U1-8"
TEMP2     IFILE     SQL,FIXED=42, KEY="U11-18,1-8"
FILELIN1  INIT      " 42 U1-8 U11-18,1-8"
.
.Name     Type   Length   Physical   Start   Description
.----     ----   ------   --------   -----   -----------
TMPINVNO  DIM       8         8        1     Invoice no
TMPMEFLG  DIM       1         1        9     Medical/Paramedical flag
TMPTAXIF  DIM       1         1        10    Taxi voucher flag 
TMPUNIQN  DIM       8         8        11    Admin no/ PP Unique No. (TMPADMNO)
TMPERFLG  DIM       1         1        19    Tempfile error flag
TMPINAMT  FORM    12.2       11        20    Invoice amount 
TMPGSTAM  FORM    12.2       11        31    Invoice GST amount
.
.End of Record                         42
.
. TAC Extract Records
.
. ---- HEADER Record
XXHDHEAD  DIM       6                  1     Literal "Header"
XXHDINVC  DIM       4                  7     Invoice/Item Count
XXHDDATE  DIM       8                  11    format (ddmmyycc)
XXHDTIME  DIM       6                  19    format (hhmmss)
XXHDTAXT  DIM       11                 25    Literal "Tax Invoice"
XXHDREFN  DIM       11                 36    Batch Ref.No (patebhaf.ptehbtn)
XXHDHNAM  DIM       30                 47    Hospital Name
XXHDHABN  DIM       11                 77    Hospital ABN
XXHDTNAM  DIM       3                  88    Literal "TAC"
XXHDTABN  DIM       11                 91    TAC ABN literal "22033947623"
XXHDTADD  DIM       32                 102   TAC Address Literal
XXHDPNUM  DIM       5                  134   TAC allocated Provider Number
.                                   to 138
TACHEAD   INIT      "Header"                             DIM 6
TACTAXT   INIT      "TAX INVOICE"                        DIM 11
TACTNAM   INIT      "TAC"                                DIM 3
TACABN    INIT      "22033947623"                        DIM 11 - TAC ABN
TACADD    INIT      "222 Exhibition Street, Melbourne"   DIM 32
.
. ---- PATIENT Record
XXPATINT  DIM       7                  1     Literal "Patient"
XXPAINVN  DIM       9                  8     Invoice No.
XXPAINDT  DIM       8                  17    Invoice date (ddmmyycc)
XXPANAMR  DIM       30                 25    Patient Name
XXPACLMN  DIM       8                  55    Claim No.
XXPAPBDT  DIM       8                  63    Patient Date of Birth
.                                   to 71
TACTINT   INIT      "Patient"                            DIM 7
.
.  ---- ITEM Record (recurring)
XXITITEM  DIM       4                  1     Literal "Item"
XXITREFN  DIM       9                  5     Item line Reference
XXITNUMB  DIM       6                  14    Item Number   (.otitemno)
XXITSDAT  DIM       8                  20    Service Date (ddmmyycc)
XXITAMNT  DIM       8                  28    Cost of Service in cents.
XXITTAXA  DIM       12                 36    Tax Info (GST Included or Cents or
.                                   to 47   
TACITEM   INIT      "Item"                               DIM 4
..TACTAXA   INIT      "GST Included"
TACTAXA   INIT      "000000000000"
.
. ---- TRAILER Record
XXTRAILR  DIM       7                  1     Literal "Trailer"
XXTRBTOT  DIM       12                 8     Total Amount (Inv. Total) in cents
XXTRGSTS  DIM       24                 20    
.                                   to 43
TACAILR   INIT      "Trailer"                            DIM 7
TACGSTS   INIT      "Total Price Includes GST"           DIM 24
.
. ----- Program variables -----
.
BCHTAMNT  FORM      12.2                    * Batch Total Amount
BCHINVCT  FORM      4                       * Batch Invoice Count
BCHITMCT  FORM      4                       * Batch Item Count
.
CFILEPRE  DIM       3
CLMDESC   DIM       20                      * Claim type description
CLMTYPE   DIM       3                       * Claim type
CMDLINE   DIM       80
CODE      DIM       2                       * For PATCODKY
CURDTE8   DIM       8                       * Current date (ccyymmdd)
DIM4      DIM       4
DIM5      DIM       5
DIM15A    DIM       15
DIM24A    DIM       24
.
ENDDTE8   DIM       8                       * End date (ccyymmdd)
ERRORFLG  FORM      1                       * Error flag
ERRINVNO  DIM       8                       * Error invoice no
ERRMSG    DIM       60                      * Error message
EXTFNAME  DIM       12                      * Extract file name
.
FNAMEA    DIM       8
FORM10P2  FORM      10.2
FORM12P2  FORM      12.2
FORM6P2   FORM      6.2
FORM3     FORM      3
FORM8     FORM      8
.
GSTAMNT   FORM      12.2
.
IBALANCE  FORM      12.2
ITEMCONT  FORM      4                       * Invoice Item counter
INVOICEN  FORM      8
.
MXNOFSRV  FORM      2                       * Maximum no of services
NOOFSERV  FORM      2                       * No of services
NOABN     FORM      1
NOTACP    FORM      1
NOTACITM  FORM      1
.
OPGSTTL   FORM      12.4                    * P/P item GST total
OPITMTL   FORM      12.4                    * P/P item total
.
RECSREAD  FORM      5
RECSERR   FORM      5
RECSWARN  FORM      5
RECSWRIT  FORM      5
.
SAVUNIQN  FORM      8                       * Save the admin no
SOBAOUTN  FORM      8
SOBADATE  DIM       8
STRTDTE8  DIM       8                       * Start date (ccyymmdd)
SVKEY26   DIM       26
.
TACDUR    FORM      4                       * TAC duration
TACITMTP  DIM       1                       * TAC item type
TMFUNIQN  FORM      8                       * Admin no         (was TMFADMNO)
TMFMEFLG  FORM      1                       * Medical/Paramedical flag (O/P only
TMFTAXIF  FORM      1                       * Taxi voucher flag (O/P only)
TMFERFLG  FORM      1                       * Invoice Error flag
.
PASSNUMB  FORM      1                       * Validation flag
.
WRNINVNO  DIM       8                       * Warning invoice no
.
. ----- Program constants -----
.
PRGID     INIT      "IBAADT76"
PRGNAM    INIT      "TAC EDI Priv.Practice Extract"
VERSION   INIT      "V12.00.00"
+
.******************************************************************************
.*                                   ML0000                                   *
.*                                 Main Module                                *
.******************************************************************************
ML0000    CALL      INIT0000                * Initialise variables & open files
.
ML1000    CALL      OPTN0000                * Select main option
          BRANCH    EXIT,ML9999
.
ML1500    IF        OPTION = 2
            CALL      INNO0000
            BRANCH    EXIT,ML1000
            GOTO      ML5000
          ENDIF
.
ML2000    CALL      CLTY0000                * Keyin the claim type
          BRANCH    EXIT,ML1000,ML1000
.
ML3000    CALL      DATE0000                * Keyin the invoice date range
          BRANCH    EXIT,ML2000
.
ML4000    CALL      CONTQST                 * Ok to Continue (Y/N/C) ?
          BRANCH    CEXIT,ML5000,ML3000,ML1000
          GOTO      ML1000
.
ML5000    CALL      OPEN0000                * Open the tempfile
          CALL      LOAD0000                * Load the tempfile
          CALL      VALD0000                * Validate the tempfile
          CALL      CHEK0000                * check if any valid Invoices
          IF        EXIT <> 0
            BRANCH    OPTION,ML1000,ML1500
          ENDIF
.
          CALL      CREA0000                * create extract file
          CALL      WRIT0000                * Write to the files
          CALL      SEND0000                * use a ".us1" script to move file
          CALL      KILL0000                * Delete the tempfile
.
          BRANCH    OPTION,ML1000,ML1500
          GOTO      ML1000
.
ML9999    CALL      KILL0000                * Delete the tempfile
          CHAIN     PGM
+
.******************************************************************************
.*                                  INIT0000              Called by: ML0000   *
.*                       Initialise Variable & Open Files                     *
.******************************************************************************
INIT0000  MOVE      ZERO,EXIT
          CALL      DISPHEAD                * Display screen heading
          MOVE      "99",CLNO
.
          DISPLAY   *P56:24,"Opening controlf"
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"ibagedaf"
          OPEN      IBAGEDA1,"ibagedaf"
.
          DISPLAY   *P64:24,"patcodes"
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patdo1af"
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P64:24,"patebhaf"
          OPEN      PATEBHA1,"patebhaf"
.
          DISPLAY   *P64:24,"patebiaf"
          OPEN      PATEBIA1,"patebiaf"
.
          DISPLAY   *P64:24,"priinvof"
          OPEN      PRIINVO1,"priinvof"
          OPEN      PRIINVO2,"priinvof"
          OPEN      PRIINVO3,"priinvof"
.
          DISPLAY   *P64:24,"patma1af"
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
...       DISPLAY   *P64:24,"prihdbtf"
...       OPEN      PRIHDBT1,"prihdbtf"
...       OPEN      PRIHDBT2,"prihdbtf"
.
          DISPLAY   *P64:24,"pridtraf"
          OPEN      PRIDTRA1,"pridtraf"
          OPEN      PRIDTRA3,"pridtraf"
.
          DISPLAY   *P64:24,"priitemf"
          OPEN      PRIITEM1,"priitemf"
.
          DISPLAY   *P64:24,"primabdf"
          OPEN      PRIMABD1,"primabdf"
.
          CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,FNAMEA
.
          READ      CONTROLF,ZERO;*70,IBCNABNN        * ABN Number
          READ      CONTROLF,TWENTY;*166,PTCNTACP     * TAC Provider No.
          READ      CONTROLF,HUND10;*116,PTCNEDIH     * EDI Hospital Code
.
          CALL      IBACLOCK                * Get current date & time
          PACK      CURDTE8,CCC,CYY,CMM,CDD
          REP       " 0",CURDTE8
          MOVE      ZERO,CKYIMAND
          MOVE      ZERO,CKYIMODE
          MOVE      ONE,CNEWDS
.
INIT9999  RETURN
+
.******************************************************************************
.*                                  OPTN0000              Called by: ML0000   *
.*                             Select Main Option                             *
.******************************************************************************
OPTN0000  MOVE      ZERO,OPTION
          HLINE     *G37,2,52,80
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = TAC Extract by Date range":
                    *P1:6,*V2LON,"2",*HOFF," = TAC Extract by Invoice No.":
                    *P1:8,"Select Option : ";
OPTN1000  KEYIN     *P17:8,*V2LON,*DV,UNDLN2,*P17:8,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      OPTN9500 IF EQUAL
.
          BRANCH    OPTION,OPTN2000,OPTN2000
.
          BEEP
          GOTO      OPTN1000
.
OPTN2000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.******************************************************************************
.*                                  INNO0000              Called by: ML0000   *
.*                            Keyin The Invoice No.                           *
.******************************************************************************
INNO0000  MOVE      ZERO,EXIT
          MOVE      ZERO,INVOICEN
          MOVE      SP3,CLMTYPE
.
          DISPLAY   *P1:10,"Invoice No. : ";
          KEYIN      *P15:10,*EL,*V2LON,INVOICEN,*DV,*P15:10,INVOICEN
.
          COMPARE    ZERO,INVOICEN
          GOTO       INNO9999 IF NOT EQUAL  * invoice no entered
.
          MOVE       ONE,EXIT
.
INNO9999  RETURN
+
.******************************************************************************
.*                                  CLTY0000              Called by: ML0000   *
.*                            Keyin The Claim Type                            *
.******************************************************************************
CLTY0000  MOVE      "14",ECOL
          MOVE      "10",EVERT
          MOVE      "CL",CODE
          MOVE      SP3,CKYIDEF3
          DISPLAY   *P1:EVERT,"Claim Type : ",*EF;
          CALL      PATCODKY                * Keyin a codes file code
          BRANCH    EXIT,CLTY2000,CLTY9500
.                        Spaces   Exit
.
          MOVE      ACODE,CLMTYPE
          MOVE      TDESC,CLMDESC
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,ACODE,SP2,TDESC;
.
          MOVE      ONE,FORM1
CLTY1000  LOAD      KEY1,FORM1,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
          MATCH     ANSM,KEY1
          GOTO      CLTY9000 IF EQUAL       * TAC claim type
.
          ADD       ONE,FORM1
          COMPARE   "6",FORM1
          GOTO      CLTY1000 IF LESS        * Counter < 6
.
          DISPLAY   *P1:24,*EL,*B,"Invalid TAC claim type.  ";
          CALL      HITENTER
          GOTO      CLTY0000
.
CLTY2000  UNPACK    SP30,CLMTYPE,CLMDESC
          DISPLAY   *PECOL:EVERT,*EL,*V2LON,"All TAC Claims";
.
CLTY9000  MOVE      ZERO,EXIT
          GOTO      CLTY9999
.
CLTY9500  MOVE      ONE,EXIT
CLTY9999  RETURN
+
.******************************************************************************
.*                                  DATE0000              Called by: ML0000   *
.*                        Keyin The Invoice Date Range                        *
.******************************************************************************
DATE0000  MOVE      "21",CCOL
          MOVE      "12",CVERT
          DISPLAY   *P1:CVERT,*EF,"Starting Date     : ";
          ADD       ONE,CVERT
          DISPLAY   *P1:CVERT,"Ending Date       : ";
.
          MOVE      ONE,CCANLDTE            * Blank cancel default
          MOVE      ZERO,CHIGHLT            * Use highlight
.
. ----- Enter starting date -----
.
DATE1000  SUB       ONE,CVERT
DATE2000  MOVE      CCC,CCENT
          UNPACK    SP6,CYEAR,CMON,CDAY
          CALL      KEYDATE                 * Keyin date
          BRANCH    OVRCD,DATE9500
          BRANCH    CQUEST,DATE2000
.
          PACK      STRTDTE8,CCENT,CYEAR,CMON,CDAY
          REP       " 0",STRTDTE8
.
          MATCH     STRTDTE8,CURDTE8
          IF        @LESS
            DISPLAY   *P1:24,*B,*EL,"Start date must not be after the ":
                      "current date.  ";
            CALL      HITENTER 
            GOTO      DATE2000
          ENDIF
.
. ----- Enter ending date -----
.
          ADD       ONE,CVERT
DATE3000  UNPACK    STRTDTE8,CCENT,CYEAR,CMON,CDAY
          CALL      KEYDATE                 * Keyin date
          BRANCH    OVRCD,DATE1000
          BRANCH    CQUEST,DATE3000
.
          PACK      ENDDTE8,CCENT,CYEAR,CMON,CDAY
          REP       " 0",ENDDTE8
.
          MATCH     ENDDTE8,CURDTE8
          IF        @LESS
            DISPLAY   *P1:24,*B,*EL,"End date must not be after the current ":
                      "date.  ";
            CALL      HITENTER 
            GOTO      DATE3000
          ENDIF
.
          MATCH     STRTDTE8,ENDDTE8
          IF        @LESS
            DISPLAY   *P1:24,*B,*EL,"End date must be after the start date.  ";
            CALL      HITENTER 
            GOTO      DATE3000
          ENDIF
.
          MOVE      "0701",CKYIDEF4
          UNPACK    STRTDTE8,KEY2,KEY2,KEY4
          MATCH     CKYIDEF4,KEY4
          IF        @LESS
            UNPACK    ENDDTE8,KEY2,KEY2,KEY4
            MATCH     KEY4,CKYIDEF4
            IF        @LESS
              DISPLAY   *P1:24,*B,*EL,"Both dates must be from the same ":
                        "financial year.  ";
              CALL      HITENTER
              GOTO      DATE0000
            ENDIF
          ENDIF
.
DATE9000  MOVE      ZERO,EXIT
          GOTO      DATE9999
.
DATE9500  MOVE      ONE,EXIT
DATE9999  RETURN
+
.******************************************************************************
.*                                  OPEN0000              Called by: ML0000   *
.*                              Open The Tempfile                             *
.******************************************************************************
OPEN0000  CALL      KILL0000                * Delete the tempfile
.
          CLEAR     KEY99
          APPEND    "isbuild ",KEY99
          APPEND    FNAMEA,KEY99
          APPEND    FILELIN1,KEY99
          RESET     KEY99
          EXECUTE   KEY99,TASKID
.
          OPEN      TEMP1,FNAMEA
          OPEN      TEMP2,FNAMEA
.
OPEN9000  MOVE      ZERO,EXIT
OPEN9999  RETURN
+
.******************************************************************************
.*                                  LOAD0000              Called by: ML0000   *
.*                              Load The Tempfile                             *
.******************************************************************************
LOAD0000  MOVE      ZERO,RECSREAD              * Clear the read counter
          MOVE      ZERO,RECSWRIT              * Clear the write counter
          DISPLAY   *P1:24,*EL,"Scanning : ",*P35:24,"Loading : ";
.
          IF        OPTION = 2
            PACK      KEY8,INVOICEN
            CALL      RDPRIN1
            BRANCH    OVRCD,LOAD9000
          ELSE
            PACK      KEY16,STRTDTE8,SP20
            CALL      RSPRIN2               * Position on & read an invoice
LOAD1000    CALL      RKPRIN2                 file record
            BRANCH    OVRCD,LOAD9000
.
            MATCH     PRINDATE,ENDDTE8
            GOTO      LOAD9000 IF LESS      * End date < invoice date
.
....        COMPARE   ZERO,PTINEDSF
....        GOTO      LOAD1000 IF NOT EQUAL * Only extract invoice with EDI of
          ENDIF                             * not sent
.
LOAD2000  MOVE      PRINITOT,IBALANCE
          ADD       PRINPAMT,IBALANCE
          ADD       PRINHAMT,IBALANCE
          ADD       PRINIAMT,IBALANCE
          ADD       PRINMAMT,IBALANCE
          ADD       PRINVAMT,IBALANCE
          ADD       PRINOTHA,IBALANCE
          ADD       PRINJAMT,IBALANCE
          ADD       PRINCNTT,IBALANCE
          ADD       PRINGSTJ,IBALANCE
          IF        IBALANCE <= 0
            GOTO      LOAD6000              * don't send if zero Balance
          ENDIF
.
.                                           * Is this a Debtor or PMI record
          COMPARE   ONE,PRINSCAN            * " 0"=Debtor, " 1"=PMI
          GOTO      LOAD6000 IF NOT EQUAL
.
          ADD       ONE,RECSREAD
          MOVE      ZERO,TMFMEFLG           * ME/PM item flag
          MOVE      ZERO,TMFTAXIF           * TX item flag
.
.          
LOAD4000  CALL      GTPT0000                * Get TAC patients
          BRANCH    EXIT,LOAD6000
.
          MOVE      PRINNUMB,TMPINVNO
          MOVE      PRINUNIQ,TMFUNIQN       * (FORM)
          MOVE      PRINUNIQ,TMPUNIQN       * (DIM)
          MOVE      ZERO,TMFERFLG           * Error flag - no
          MOVE      ZERO,TMPINAMT
          MOVE      ZERO,TMPGSTAM
.
          PACK      KEY8,TMPINVNO
          CALL      RATEMP1                 * Position read a tempfile record
          COMPARE   ONE,OVRCD
          GOTO      LOAD6000 IF NOT EQUAL   * Read exists
.
          CALL      WRTEMP1                 * Write a tempfile record
.
.                                           * check which Option
LOAD6000  BRANCH    OPTION,LOAD1000,LOAD9000
          GOTO      LOAD1000                * read next record
.
.
LOAD9000  MOVE      ZERO,EXIT
LOAD9999  RETURN
+
.******************************************************************************
.*                                  HEAD0000              Called by: ML0000   *
.*                             Print Report Header                            *
.******************************************************************************
HEAD0000  CALL      HEAD80                  * Print 80 column header
.
          IF        OPTION = 1
            MATCH     SP3,CLMTYPE
            IF        @EQUAL
              PRINT     *N,*20,"Claim Type : All TAC Claims",*N
            ELSE
              PRINT     *N,*20,"Claim Type : ",CLMTYPE,SP2,CLMDESC,*N
            ENDIF
.
            UNPACK    STRTDTE8,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE                 * Format the start date
            PRINT     *20,"Start Date : ",CPCDATE
            UNPACK    ENDDTE8,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE                 * Format the end date
            PRINT     *20,"End Date   : ",CPCDATE,*N
          ELSE
            PRINT     *N,*20,"Invoice No. :",INVOICEN,*N,*N,*N
          ENDIF
.
          CALL      UND80
          PRINT     *1,"| Inv No | Uniq.No | Error",*80,"|"
          CALL      UND80
          MOVE      "7",CLNO
.
HEAD9000  MOVE      ZERO,EXIT
.
HEAD9999  RETURN
+
.******************************************************************************
.*                                  VALD0000              Called by: ML0000   *
.*                            Validate The Tempfile                           *
.******************************************************************************
VALD0000  MOVE      ZERO,EXIT
.
          MOVE      "1",PASSNUMB            * Pass 1 = validation only
          MOVE      ZERO,NOABN
          MOVE      ZERO,NOTACP
          MOVE      ZERO,RECSREAD           * Clear the read counter
          MOVE      ZERO,RECSERR            * Clear the error counter
          MOVE      ZERO,RECSWARN           * Clear the warning counter
          MOVE      ZERO,ITEMCONT           * Clear the invoice Item counter
          MOVE      ZERO,SAVUNIQN           * Clear the save admin no
          MOVE      ZERO,BCHINVCT           * No of valid Invoices
          MOVE      ZERO,BCHITMCT           * No of valid Items
          MOVE      ZERO,BCHTAMNT           * Clear the total amount counter
          MOVE      SP8,ERRINVNO            * Clear the error invoice no
          MOVE      SP8,WRNINVNO            * Clear the warning invoice no
.
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line counter >= 55 lines
          MATCH     SP20,IBCNABNN
          IF        @EQUAL
            MOVE      "Blank hospital ABN number",ERRMSG
            PACK      ERRMSG,ERRMSG,SP70
            PRINT     *1,"|",*10,"|",*20,"|",ERRMSG,"|"
            MOVE      ONE,NOABN
          ENDIF
.
          MATCH     SP5,PTCNTACP
          IF        @EQUAL
            MOVE      "TAC Provider Number is blank",ERRMSG
            PACK      ERRMSG,ERRMSG,SP70
            PRINT     *1,"|",*10,"|",*20,"|",ERRMSG,"|"
            MOVE      ONE,NOTACP
          ENDIF
.
          PACK      KEY16,SP20
          CALL      RSTEMP2                 * Position on & read a tempfile
VALD1000  CALL      RKTEMP2                 * Read a tempfile record
          BRANCH    OVRCD,VALD9999
.
          MOVE      "0",ERRORFLG
          ADD       ONE,RECSREAD
.
          CALL      GPTD0000                * Get patient details
          BRANCH    EXIT,VALD5000
.
          MOVE      ZERO,TMPINAMT           * Clear the invoice amount counter
          MOVE      ZERO,TMPGSTAM           * Clear the invoice GST amount count
          MOVE      ZERO,ITEMCONT           * Item count for Invoice

          CALL      WTIN0000                * Write invoice details
          CALL      WTIT0000                * Write item details
.
.                                           * finished this Invoice - save info
VALD5000  PACK      KEY8,TMPINVNO
.
          IF        ERRORFLG = 0 & (ITEMCONT > 0)
            ADD       ONE,BCHINVCT           * store Totals for valid Invoices
            ADD       ITEMCONT,BCHITMCT
            ASSIGN    (TMPINAMT + TMPGSTAM + BCHTAMNT),BCHTAMNT
          ELSE
            MOVE      ERRORFLG,TMFERFLG
          ENDIF
          CALL      UPTEMP1                 * Update a tempfile record
.
          GOTO      VALD1000
.
VALD9000  MOVE      ONE,EXIT
.
VALD9999  RETURN
+
.******************************************************************************
.*                                  CHEK0000              Called by: ML0000   *
.*                  Check details to determine if a file is to be written     *
.******************************************************************************
CHEK0000  MOVE      ZERO,EXIT
          MOVE      BCHINVCT,RECSWRIT
          CALL      TAIL0000
.
          IF        NOABN = 1
            PRINT     *N,*1,"Hospital ABN is missing - file cannot be extracted"
            GOTO      CHEK9000
          ENDIF
.
          IF        NOTACP = 1
            PRINT     *N,*1,"TAC Provider No. is missing - cannot continue"
            GOTO      CHEK9000
          ENDIF
.
CHEK1000  IF        BCHINVCT = 0
            IF        RECSREAD = 0
              IF        OPTION = 2
                MOVE      INVOICEN,KEY8
                SQUEEZE   KEY8
                PRINT     *N,*1,"Invoice ",KEY8;
                IF        NOTACITM <> 0
                  PRINT     " has no TAC Items - It";
                ENDIF
                IF        IBALANCE <= 0
                  MOVE      IBALANCE,DIM15A
                  SQUEEZE   DIM15A
                  PRINT     " has a balance of $ ",DIM15A," - It";
                ENDIF
                PRINT     " has not been extracted."
                GOTO      CHEK9000
              ENDIF
              PRINT     *N,*1,"No Invoices to be extracted for this Date range"
            ELSE
              PRINT     *N,*1,"There are no valid Invoices to be extracted"
            ENDIF
            GOTO      CHEK9000
          ENDIF
.
          IF        RECSERR > 0
            PRINT     *N,*1,"Errors have been detected - these Invoices ":
                      "will not be extracted"
          ENDIF

          GOTO      CHEK9999
.
CHEK9000  PRINT     *N,"*** End of Report ***"
          MOVE      "99",CLNO
          MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.******************************************************************************
.*                                  CREA0000              Called by: ML0000   *
.*                          Create the Extract file                           *
.******************************************************************************
CREA0000  MOVE      ZERO,EXIT
.                                           * get the next Batch Number
          READ      CONTROLF,NINTY8;*157,PTCNBTHN
          ADD       ONE,PTCNBTHN
          WRITAB    CONTROLF,NINTY8;*157,PTCNBTHN
          SUB       ONE,PTCNBTHN
.
.                                           * generate Extract file name
CREA1000  MOVE      "OU",KEY2               
          PACK      KEY4,PTCNEDIH,KEY2,SP10 * EDI Hospital Code + "OU"
          REP       " A",KEY4
          MOVE      PTCNBTHN,FORM8          * Batch Number
          MOVE      FORM8,FORM4
          MOVE      ".txt",DIM4
          PACK      EXTFNAME,KEY4,FORM4,DIM4,SP10
          REP       " 0",EXTFNAME
.
          MOVE      ZERO,OVRCD              * open Extract file
          TRAP      OVERCOND IF IO
          OPEN      EXTFILE1,EXTFNAME
          TRAPCLR   IO
          COMPARE   ZERO,OVRCD
          GOTO      CREA0000 IF EQUAL       * File exists - create a new one
.
          PREP      EXTFILE1,EXTFNAME       * open the text file
.
          UNPACK    EXTFNAME,KEY2,DIM2,KEY4 
          PRINT     *N,*1,"Extract file name is - '",EXTFNAME,"'":
                    *N,*22,"(Hospital Code '",PTCNEDIH,"' + Out Pat. code ":
                    "'OP' + Batch No. '",KEY4,"' )"
          MATCH     KEY2,PTCNEDIH
          IF        !@EQUAL
            PRINT     "Hospital Code '",PTCNEDIH,"' is not valid ":
                      *N,"- please correct it in EDI Parameter Maintenance"
          ENDIF
.
CREA9999  RETURN
+
.******************************************************************************
.*                                  WRIT0000              Called by: ML0000   *
.*                             Write To The Files                             *
.******************************************************************************
WRIT0000  MOVE      ZERO,EXIT
          MOVE      "2",PASSNUMB            * Pass "2" - Write extract    
          MOVE      ZERO,SAVUNIQN           * Clear the save admin no
          MOVE      ZERO,RECSWRIT           * Clear the write counter
          DISPLAY   *P1:18,*EF,*P1:24,"Writing : ";
.
          CALL      WTHD0000                * Write header details
.
          PACK      KEY16,SP20
          CALL      RSTEMP2                 * Position on & read a tempfile
WRIT1000  CALL      RKTEMP2                   record
          BRANCH    OVRCD,WRIT8000
.
          BRANCH    TMFERFLG,WRIT1000       * Error record found, read next
.
          ADD       ONE,RECSWRIT
.
          CALL      GPTD0000                * Get patient details
          BRANCH    EXIT,WRIT1000
.
          CALL      WTIN0000                * Write invoice details
          CALL      WTIT0000                * Write item details
.
WRIT2000  PACK      KEY16,PTCNBTHN,PRINNUMB
          CALL      RAPTEBI1                * Read an EDI batch inv file record
          COMPARE   ONE,OVRCD
          GOTO      WRIT1000 IF NOT EQUAL   * Record exists
.
          MOVE      PTCNBTHN,PTEIBTHN
          MOVE      PRINNUMB,PTEIINVN
          MOVE      SP70,PTEISPAR
.
          PACK      KEY16,PTEIBTHN,PTEIINVN
          CALL      WRPTEBI1                * Write an EDI batch inv file record
          GOTO      WRIT1000
.
WRIT8000  CALL      WTTL0000                * Write trailer details
.
          MOVE      PTCNBTHN,PTEHBTHN
          MOVE      "TAC   ",PTEHHFGP
          MOVE      STRTDTE8,PTEHSTDT
          MOVE      ENDDTE8,PTEHEDDT
          MOVE      BCHTAMNT,PTEHBHTL
          MOVE      RECSWRIT,PTEHTRIB
          MOVE      CURDTE8,PTEHDTBC
          MOVE      CTIMEIS,PTEHTMBC
          MOVE      PASSCODE,PTEHOPER
          MOVE      TWO,PTEHEETP            * "2" = TAC Outpatients
          PACK      PTEHEFNAM,EXTFNAME      * Extract File name (incl '.txt')
          MOVE      SP70,PTEHSPAR
.
          PACK      KEY8,PTEHBTHN
          CALL      RAPTEBH1                * Read an EDI batch header file rec
          COMPARE   ONE,OVRCD
          CALL      WRPTEBH1 IF EQUAL       * Write an EDI batch header file rec
.
          DISPLAY   *P1:18,*EF,"Total records read      : ",RECSREAD:
                    *P1:19,"Total records extracted : ",*V2LON,RECSWRIT,*HOFF:
                    *P1:21,"Extract filename : ",*V2LON,EXTFNAME,*HOFF:
                    *P1:22,"Batch number     : ",*V2LON,PTEHBTHN,*HOFF:
                    *P1:24,*B,"Extract finished.  ";
.
          PRINT     *N,*1,"This Extract contains",BCHINVCT:
                    " Invoices     with a Total value of $",BCHTAMNT:
                    *N,"*** End of Report ***"
.                    
.
WRIT9999  RETURN
+
.******************************************************************************
.*                                  TAIL0000              Called by: ML0000   *
.*                              Print Report Tail                             *
.******************************************************************************
TAIL0000  MOVE      ZERO,EXIT
          COMPARE   "50",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line counter >= 50 lines
.
TAIL1000  CALL      UND80
          PRINT     *N,*1,"Total Records Read        : ",RECSREAD:
                    *N,*1,"Total Number of Errors    : ",RECSERR:
                    *N,*1,"Total Number of Warnings  : ",RECSWARN:
                    *N,*N,*1,"Total Records Extracted   : ",RECSWRIT
.
TAIL9999  RETURN
+
.******************************************************************************
.*                                  GTPT0000              Called by: LOAD0000 *
.*                              Get TAC Patients                              *
.******************************************************************************
GTPT0000  MOVE      ZERO,EXIT
          MOVE      ZERO,NOTACITM
          COMPARE   ZERO,PRINPEND
          GOTO      GTPT9500 IF EQUAL       * Zero total, ignore invoice
.
          MATCH     SP3,CLMTYPE
          GOTO      GTPT1000 IF EQUAL       * Getting all TAC claims
.
          MATCH     CLMTYPE,PRINCLAM
          GOTO      GTPT9500 IF NOT EQUAL   * Different claim type
.
GTPT1000  PACK      KEY5,ANSC,ANSL,PRINCLAM
          CALL      RDCODE1                 * Read a codes file record
          BRANCH    OVRCD,GTPT9500
.
          MOVE      ZERO,FORM1
          REPEAT
            ADD       ONE,FORM1
            LOAD      KEY1,FORM1,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
            MATCH     "M",KEY1
            GOTO      GTPT3000 IF EQUAL     * TAC claim type
          UNTIL     FORM1 > 4
          GOTO      GTPT9500                * not a TAC claim
.
.
.                                           * check Items for a TAC Item
GTPT3000  PACK      KEY24,PRINDEBT,PRINSCAN,PRINNUMB,SP30
          CALL      RSPRDT3                 * Position on & read an P/P DTR
GTPT5000  CALL      RKPRDT3                   file record
          BRANCH    OVRCD,GTPT9500
.
          PACK      DIM24A,PRDTDEBT,PRDTSCAN,PRDTINVN,SP30
          MATCH     PRINDEBT,PRDTDEBT
          GOTO      GTPT9500 IF NOT EQUAL   * Different Debtor / Invoice No
.
          COMPARE   ONE,PRDTRTYP
          GOTO      GTPT9500 IF NOT EQUAL   * Different record type
.
          COMPARE   ZERO,PRDTAMNT
          GOTO      GTPT5000 IF EQUAL       * Zero total amount ignore
.
          CALL      GPIT0000                * is this a TAC item type 
          BRANCH    EXIT,GTPT5000
.
          GOTO      GTPT9999                * found at least 1 TAC Item
.
.
GTPT9500  MOVE      ONE,EXIT
          MOVE      ONE,NOTACITM
.
GTPT9999  RETURN
+
.******************************************************************************
.*                                  GPIT0000              Called by: GTPT0000 *
.*                      Check if this is a TAC Item Type                      *
.******************************************************************************
GPIT0000  MOVE      ZERO,EXIT 
.
          PACK      KEY22,PRDTIFLG,PRDTITMN,PRDTSUBN,CURDTE8
          CALL      RDPRIT1 
          COMPARE   ONE,OVRCD
          GOTO      GPIT5000 IF NOT EQUAL   * found an item
.
GPIT1000  CALL      RSPRIT1
          CALL      RPPRIT1
          PACK      KEY14,PRITFLAG,PRITITMN,PRDTSUBN,SP20
          MATCH     KEY14,KEY22
          GOTO      GPIT5000 IF EQUAL       * found an item
          
          MOVE      ONE,EXIT
          GOTO      GPIT9999
.
.                                           * test for a TAC Item
GPIT5000                                    * get all Items for now
.
GPIT9999  RETURN
+
.******************************************************************************
.*                                  WTHD0000              Called by: VALD0000 *
.*                            Write Header Details                 & WRIT0000 *
.******************************************************************************
WTHD0000  MOVE      TACHEAD,XXHDHEAD        * set up Header literals
          MOVE      TACTAXT,XXHDTAXT
          MOVE      TACTNAM,XXHDTNAM
          MOVE      TACABN,XXHDTABN
          MOVE      TACADD,XXHDTADD
.
          MOVE      PTCNBTHN,KEY8           * Batch Number
          PACK      KEY11,SP3,KEY8
....      SQUEEZE   KEY11                   * (left aligned)
          REP       " 0",KEY11              * (right aligned)
          PACK      XXHDREFN,KEY11,SP20
.                                           * generate Extract Date/Time info
          CALL      IBACLOCK                * Get current date & time
.....     PACK      XXHDDATE,CCC,CYY,CMM,CDD
          PACK      XXHDDATE,CDD,CMM,CCC,CYY
          REP       " 0",XXHDDATE
          UNPACK    CTIMEIS,CHOUR,KEY1,CMIN,KEY1,KEY2
          PACK      XXHDTIME,CHOUR,CMIN,KEY2
          REP       " 0",XXHDTIME
.
...       MOVE      BCHINVCT,XXHDINVC       * Invoice count
          MOVE      BCHITMCT,KEY4           * Item count (right aligned)
          SQUEEZE   KEY4
          PACK      XXHDINVC,KEY4,SP4       * Item count (left aligned)
.
          PACK      XXHDHNAM,CNAME,SP30     * Hospital Name
          PACK      XXHDPNUM,PTCNTACP,SP10  * Hospital's Provider Number
          PACK      XXHDHABN,IBCNABNN,SP10  * Hospital's ABN
.
          IF        PASSNUMB = 2
            WRITE     EXTFILE1,SEQ;XXHDHEAD,XXHDINVC,XXHDDATE,XXHDTIME:
                                   XXHDTAXT,XXHDREFN,XXHDHNAM,XXHDHABN:
                                   XXHDTNAM,XXHDTABN,XXHDTADD,XXHDPNUM
          ENDIF
.
WTHD9000  MOVE      ONE,EXIT
.
WTHD9999  RETURN
+
.******************************************************************************
.*                                  GPTD0000              Called by: VALD0000 *
.*                             Get Patient Details                 & WRIT0000 *
.******************************************************************************
GPTD0000  MOVE      ZERO,EXIT
.
          PACK      KEY8,TMPINVNO
          CALL      RDTEMP1                 * Direct Read the tempfile record
.
          PACK      KEY8,TMPINVNO
          CALL      RDPRIN1                 * Read an invoice file record
          IF        OVRCD = 1
            MOVE      "Missing invoice file record",ERRMSG
            CALL      EMSG0000              * Print an error message
            GOTO      GPTD9500
          ENDIF
.
          COMPARE   SAVUNIQN,TMFUNIQN
          GOTO      GPTD9999 IF EQUAL       * Same admin no., don't get details
.
          PACK      KEY8,PRINDEBT
          CALL      RDMAST1                 * Read a master file record
          IF        OVRCD = 1
            MOVE      "Missing Master File record",ERRMSG
            CALL      EMSG0000              * Print an error message
            GOTO      GPTD9500
          ENDIF
.
.
GPTD4000  PACK      KEY22,TMFUNIQN,SP30
          CALL      RSPRDT1                 * Position on & read a P/P DTR
          CALL      RKPRDT1                    file record
          IF        OVRCD = 1 | TMFUNIQN <> PRDTUNIQ
            MOVE      "Missing P/P DTR file record",ERRMSG
            CALL      EMSG0000              * Print an error message
            GOTO      GPTD9500
          ENDIF
.
GPTD6000  MOVE      TMFUNIQN,SAVUNIQN       * Save the unique number
          GOTO      GPTD9999
.
GPTD9500  MOVE      ONE,EXIT
          MOVE      "1",ERRORFLG
.
GPTD9999  RETURN
+
.******************************************************************************
.*                                  WTIN0000              Called by: VALD0000 *
.*                       Write Priv.Practice Invoice Section       & WRIT0000 *
.******************************************************************************
WTIN0000  MOVE      ZERO,EXIT
.                                           * set up Patient literals
          MOVE      TACTINT,XXPATINT
.
...       PACK      KEY9,PRINNUMB,SP10      * set up Invoice No.
...       SQUEEZE   KEY9
          MOVE      PRINNUMB,F9
          MOVE      F9,KEY9                 * right allign
          PACK      XXPAINVN,KEY9,SP10
.
.                                           * set up Invoice Date
          UNPACK    PRINDATE,CCENT,CYEAR,CMON,CDAY
          PACK      XXPAINDT,CDAY,CMON,CCENT,CYEAR
.
          PACK      KEY30,PGNAME,SP70       * set up Patient Name
WTIN1000  BUMP      KEY30
          CMATCH    SP1,KEY30
          GOTO      WTIN1000 IF NOT EQUAL
          LENSET    KEY30
          BUMP      KEY30,-1
          APPEND    ", ",KEY30
          APPEND    PSNAME,KEY30
          RESET     KEY30
          PACK      XXPANAMR,KEY30,SP70
          UNPACK    PBDATE,CCENT,CYEAR,CMON,CDAY
          PACK      XXPAPBDT,CDAY,CMON,CCENT,CYEAR
.
.                                           * set up Claim No.
WTIN2000  UNPACK    SP30,PRMAREFN
          PACK      KEY16,PRINNUMB,PRINCNUM,SP20
          CALL      RDPRMA1                 * Read a TAC file record
          IF        OVRCD = 1
            MOVE      "Patient missing motor accident details",ERRMSG
            CALL      EMSG0000              * Print an error message
            UNPACK    SP30,PRMAREFN
            GOTO      WTIN4000
          ENDIF
.
WTIN2500  UNPACK    PRMAREFN,KEY2,KEY1,KEY5,KEY12
          REP       "-/./ /",KEY1
          MATCH     "/",KEY1
          IF        !@EQUAL
            PACK      CKYIDEF5,KEY1,KEY5
            MOVE      "/",KEY1
            MOVE      CKYIDEF5,KEY5
          ENDIF
.                                           * Reformatting the motor accident no
          PACK      PRMAREFN,KEY2,KEY1,KEY5
.
          TYPE      KEY2
          GOTO      WTIN3000 IF NOT EQUAL   * Not numeric
.
          TYPE      KEY5
          GOTO      WTIN4000 IF EQUAL       * Numeric, continue on
.
WTIN3000  MOVE  "Warning: Incorrect format on motor accident ref number",ERRMSG
          CALL      WMSG0000                * Print a warning message
.
WTIN4000  PACK      XXPACLMN,PRMAREFN,SP10
.                                           * write Patient Record
          IF        PASSNUMB = 2
            WRITE     EXTFILE1,SEQ;XXPATINT,XXPAINVN,XXPAINDT,XXPANAMR:
                                   XXPACLMN,XXPAPBDT
          ENDIF
.
WTIN9999  RETURN
+
.******************************************************************************
.*                                  WTIT0000              Called by: VALD0000 *
.*                       Write Priv.Practice Item Section          & WRIT0000 *
.******************************************************************************
WTIT0000  MOVE      ZERO,EXIT
.                                           * setup Item Literals
          MOVE      TACITEM,XXITITEM
          MOVE      ZERO,ITEMCONT
.
          PACK      KEY24,PRINDEBT,PRINSCAN,PRINNUMB,SP30
          CALL      RSPRDT3                 * Position on & read a P/P DTR
WTIT1000  CALL      RKPRDT3                   file record
          BRANCH    OVRCD,WTIT9000
.
          PACK      DIM24A,PRDTDEBT,PRDTSCAN,PRDTINVN,SP30
          MATCH     KEY24,DIM24A
          GOTO      WTIT9000 IF NOT EQUAL   * Different Debtor / Invoice
.
          COMPARE   ONE,PRDTRTYP
          GOTO      WTIT9000 IF NOT EQUAL   * Different record type
.
          COMPARE   ZERO,PRDTAMNT
          GOTO      WTIT1000 IF EQUAL       * Zero total amount ignore
.
          CALL      GPIT0000                * is this a TAC item only  
          BRANCH    EXIT,WTIT1000
.
.                                           * setup Item record
WTIT2000  MOVE      DPRDTTRN,KEY9
          SQUEEZE   KEY9
          PACK      XXITREFN,KEY9,SP9
.
          PACK      XXITNUMB,PRDTITMN,SP10
          UNPACK    PRDTSDAT,CCENT,CYEAR,CMON,CDAY
          PACK      XXITSDAT,CDAY,CMON,CCENT,CYEAR
.
          MOVE      PRDTAMNT,FORM12P2
          MULT      "100",FORM12P2
          MOVE      FORM12P2,FORM8
          MOVE      FORM8,KEY8
          REP       " 0",KEY8
          MOVE      KEY8,XXITAMNT
.
          MOVE      TACTAXA,XXITTAXA
.
.                                           * setup Item totals (per Service)
WTIT3000  MOVE      ONE,F2
          REPEAT                            * for Number of Services (PRDTSERV)
            MOVE      ZERO,GSTAMNT
            MOVE      PRDTGSTM,GSTAMNT      * Move O/P GST amount to GST amount
            IF        PASSNUMB = 1
              ADD       PRDTAMNT,TMPINAMT   * Increment invoice amount
              ADD       GSTAMNT,TMPGSTAM    * Increment invoice GST amount
            ENDIF   
.         
.                                           * write Item Record (per Service)
            IF        PASSNUMB = 2
              WRITE     EXTFILE1,SEQ;XXITITEM,XXITREFN,XXITNUMB,XXITSDAT:
                                     XXITAMNT,XXITTAXA
            ENDIF
            ADD       ONE,ITEMCONT
            ADD       ONE,F2
          UNTIL     F2 > PRDTSERV
.
          GOTO      WTIT1000
.
WTIT9000  MOVE      ZERO,EXIT
WTIT9999  RETURN
+
.******************************************************************************
.*                                  WTTL0000              Called by: VALD0000 *
.*                            Write Trailer Details                & WRIT0000 *
.******************************************************************************
WTTL0000  MOVE      ZERO,EXIT
.
          COMPARE   "2",PASSNUMB            * is it output Pass ?
          GOTO      WTTL9999 IF NOT EQUAL   * no, bypass
.
.                                           * set up Trailer Literals
          MOVE      TACAILR,XXTRAILR
          MOVE      TACGSTS,XXTRGSTS
.
          MOVE      BCHTAMNT,FORM10P2
          MOVE      FORM10P2,KEY13
          UNPACK    KEY13,KEY10,KEY1,KEY2
          PACK      XXTRBTOT,KEY10,KEY2
          REP       " 0",XXTRBTOT
.                                           * write the Trailer Record
          WRITE     EXTFILE1,SEQ;XXTRAILR,XXTRBTOT,XXTRGSTS
.
WTTL9999  RETURN
+
.******************************************************************************
.*                                  GITA0000              Called by: Lots     *
.*                             Get The Item Amount                            *
.******************************************************************************
GITA0000  MOVE      ZERO,EXIT
          MOVE      ZERO,GSTAMNT
          MOVE      OPGSTTL,GSTAMNT         * Move O/P GST amount to GST amount
.
GITA3000  IF        PASSNUMB = 1
            ADD       OPITMTL,TMPINAMT      * Incrmt invoice amount 
            ADD       GSTAMNT,TMPGSTAM      * GST portion of rebate amount
          ENDIF
.
GITA9999  RETURN
+
.******************************************************************************
.*                                  KILL0000              Called by: ML0000   *
.*                             Delete The Tempfile                 & OPEN0000 *
.******************************************************************************
KILL0000  CLOSE     TEMP1
          CLOSE     TEMP2
.
          CLEAR     KEY99
          APPEND    "iserase ",KEY99
          APPEND    FNAMEA,KEY99
          RESET     KEY99
          EXECUTE   KEY99,TASKID
.
KILL9000  MOVE      ZERO,EXIT
KILL9999  RETURN
+
.******************************************************************************
.*                                  SEND0000                                  *
.*                   Use ".us1" script to move file to PC                     *
.******************************************************************************
SEND0000  MOVE      ZERO,EXIT    
.
.    set up Command Line as - "priweb02.us1 CSOUnnnn CSOUnnnn "
.
          CLEAR     CMDLINE
          APPEND    "priweb02.us1 ",CMDLINE
          APPEND    EXTFNAME,CMDLINE
          APPEND    SP1,CMDLINE                  * was ".txt "
          APPEND    EXTFNAME,CMDLINE
          APPEND    SP1,CMDLINE                  * was ".txt "
...       APPEND    USERID,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          DISPLAY   *P1:24,*EF,*W1;
          CALL      DISPHEAD                * Re-Display screen heading
.
SEND9999  RETURN
+
.******************************************************************************
.*                                  EMSG0000              Called by: Lots     *
.*                             Print Error Message                            *
.******************************************************************************
EMSG0000  COMPARE   "2",PASSNUMB
          GOTO      EMSG9000 IF EQUAL       * Not validating, writing details
.
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line counter >= 55 lines
.
          PACK      ERRMSG,ERRMSG,SP70
          PRINT     *1,"|",TMPINVNO,"|",TMFUNIQN,"|",ERRMSG,"|"
          ADD       ONE,CLNO
.
          MOVE      ONE,ERRORFLG            * Error flag - yes
          MATCH     ERRINVNO,PRINNUMB
          IF        !@EQUAL
            ADD       ONE,RECSERR           * Increment the error counter
            MOVE      PRINNUMB,ERRINVNO
          ENDIF
.
EMSG9000  MOVE      ZERO,EXIT
EMSG9999  RETURN
+
.******************************************************************************
.*                                  WMSG0000              Called by: Lots     *
.*                            Print Warning Message                           *
.******************************************************************************
WMSG0000  COMPARE   "2",PASSNUMB
          GOTO      WMSG9000 IF EQUAL       * Not validating, writing details
.
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS    * Line counter >= 55 lines
.
          PACK      ERRMSG,ERRMSG,SP70
          PRINT     *1,"|",TMPINVNO,"|",TMFUNIQN,"|",ERRMSG,"|"
          ADD       ONE,CLNO
.
          MATCH     WRNINVNO,PRINNUMB
          IF        !@EQUAL
            ADD       ONE,RECSWARN             * Increment the warning counter
            MOVE      PRINNUMB,WRNINVNO
          ENDIF
.
WMSG9000  MOVE      ZERO,EXIT
WMSG9999  RETURN
+
.******************************************************************************
.*                       I/O Routines For The Tempfile                        *
.******************************************************************************
RATEMP1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      TEMP1,KEY8;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          RESET     KEY8
          READ      TEMP1,KEY8;TMPINVNO,TMPMEFLG,TMPTAXIF,TMPUNIQN,TMPERFLG:
                                TMPINAMT,TMPGSTAM
          GOTO      OVERCOND IF OVER
          MOVE      TMPMEFLG,TMFMEFLG
          MOVE      TMPTAXIF,TMFTAXIF
          MOVE      TMPUNIQN,TMFUNIQN
          MOVE      TMPERFLG,TMFERFLG
          RETURN
.
UPTEMP1   MOVE      TMFMEFLG,TMPMEFLG
          MOVE      TMFTAXIF,TMPTAXIF
          MOVE      TMFUNIQN,TMPUNIQN
          MOVE      TMFERFLG,TMPERFLG
          UPDATE    TEMP1;TMPINVNO,TMPMEFLG,TMPTAXIF,TMPUNIQN,TMPERFLG:
                          TMPINAMT,TMPGSTAM
          RETURN
.
WRTEMP1   RESET     KEY8
          MOVE      TMFMEFLG,TMPMEFLG
          MOVE      TMFTAXIF,TMPTAXIF
          MOVE      TMFUNIQN,TMPUNIQN
          MOVE      TMFERFLG,TMPERFLG
          WRITE     TEMP1,KEY8;TMPINVNO,TMPMEFLG,TMPTAXIF,TMPUNIQN,TMPERFLG:
                                TMPINAMT,TMPGSTAM
          RETURN
.
RSTEMP2   RESET     KEY16
          READ      TEMP2,KEY16;;
          RETURN
.
RKTEMP2   MOVE      ZERO,OVRCD
          READKS    TEMP2;TMPINVNO,TMPMEFLG,TMPTAXIF,TMPUNIQN,TMPERFLG:
                          TMPINAMT,TMPGSTAM
          GOTO      OVERCOND IF OVER
          MOVE      TMPMEFLG,TMFMEFLG
          MOVE      TMPTAXIF,TMFTAXIF
          MOVE      TMPUNIQN,TMFUNIQN
          MOVE      TMPERFLG,TMFERFLG
          RETURN
+
.==============================================================================
.
          INC       STD001IO
.
          INC       PATCODKY                * Keyin a codes file code
          INC       TFILENAM                     * Generate Temp File Name
.
          INC       IBAGEDIO/INC            * GST rate file
          INC       IBASEQIO/INC                 * Sequential Numbers File
          INC       PATCODIO/INC            * Codes file
          INC       PATDO1IO/INC            * Doctor file
          INC       PATEBHIO/INC            * EDI batch header file
          INC       PATEBIIO/INC            * EDI batch invoice file
....      INC       PATEDAIO/INC            * EDI audit file
          INC       PATMA1IO/INC            * Master file
...       INC       PRIHDBIO/INC            * P/P Holding Header
          INC       PRIDTRIO/INC            * P/P DTR file
          INC       PRIINVIO/INC            * P/P Invoice file
          INC       PRIITMIO/INC            * P/P Miscellaneous charges file
          INC       PRIMABIO/INC            * P/P TAC file
          INC       WEBERRIO/INC                 * Web Server Error Logging
+
