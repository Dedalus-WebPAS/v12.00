.******************************************************************************
.* System    :   Patient Management System                                    *
.* Program   :   IBARSH15                                                     *
.* Desc      :   Schedule program to upload country of birth codes            *
.******************************************************************************
.* Date      :   03/12/2004                                                   *
.* Author    :   Davin                                                        *
.******************************************************************************
.* Notes     :   Load VIC DHS Country of Birth Codes into IBA patcodes table. *
.*               Input file must be comma delimited and should be sorted in   *
.*               code order.                                                  *
.*               IBA codes will be assigned to category C from a01 up to z99  *
.*               (i.e. 26x99=2574 are possible at any one time).              *
.*               Duplicate descriptions will not be created so the program    *
.*               can be run multiple times.                                   *
.******************************************************************************
.* Mods      :                                                                *
.*   V10.02.02   22/07/2011  J.Tan             CAR 244159                     *
.*               Added Credit card surcharge and Associated No.               *
.*   V10.02.01   03/06/2010 J.Tan            CAR 239592                       *
.*               Renamed PTCDUDF1 to PTCDFELC                                 *
.*   V10.00.01   24/03/2010  Steve Armstrong  CAR 218670                      *
.*               Added new PATCODFD fields to WCOD0000                        *
.******************************************************************************
.*   V9.04.00    03/12/2004  Davin  CAR 55412                                 *
.*               Created program                                              *
.******************************************************************************
+
          INC       STD001FD
.
          INC       PATCODFD/INC            * codes file
.
. ----- Input Text File Definition -----
.
INPTEXT1  FILE      ASCII, FIXED=256        * input file
.
. ----- Program Variables -----
.
CODCHAR   DIM       1                            * IBA code counter char
CODCOUNT  DIM       3                            * IBA code counter
COUNT     FORM      6                            * record counter
INPCODE   DIM       4                            * DHS code
INPDESC   DIM       20                           * DHS description
FNAMEI    DIM       60                           * input filename entered
FULLFLAG  FORM      1                            * codes file full? (0=No/1=Yes)
.
. ----- Program Constants -----
.
REPUNIQ   INIT      "yzxywxvwuvtustrsqrpqopnomnlmkljkijhighfgefdecdbcab"
RET       INIT      015                          * carriage return
VALIDCHR  INIT      " -()aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ"
.
PRGNAM    INIT      "Upload Country Codes"
PRGID     INIT      "IBARSH15"
VERSION   INIT      "V12.00.00"
+
.******************************************************************************
.*                                   ML0000                                   *
.*                                 Main Module                                *
.******************************************************************************
ML0000    CALL      INIT0000                * Initialise variables & open files
          BRANCH    EXIT,ML9000
.
ML0500    CALL      OPTN0000                * Ask proceed question
          BRANCH    EXIT,ML9000
.
ML1000    CALL      KASC0000                * Keyin ASCII input file
          BRANCH    EXIT,ML0500
.
          CALL      CONTQST                 * Ok to Continue (Y/N/C) ?
          BRANCH    CEXIT,ML5000,ML1000,ML0500
.
ML5000    CALL      PINP0000                * Process the input file
.
ML9000    MATCH     SP8,PGM
          GOTO      ML9999 IF EQUAL
.
          CHAIN     PGM                     * Chain back to appropriate menu
ML9999    SHUTDOWN  ""
+
.******************************************************************************
.*                                  INIT0000                                  *
.*                      Initialise Variables & Open Files                     *
.******************************************************************************
INIT0000  CALL      DISPHEAD                * Display screen header
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
          OPEN      PATCODE2,"patcodes"
.
INIT9999  RETURN
+
.******************************************************************************
.*                                  OPTN0000                                  *
.*                         Select option to run upload                        *
.******************************************************************************
OPTN0000  DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON," 0",*HOFF," = Exit":
                    *P1:5,*V2LON," 1",*HOFF," = Upload Country of Birth Codes":
                    *P1:7,"Select Option : ";
.
OPTN1000  KEYIN     *P17:7,*V2LON,*DV,UNDLN2,*P17:7,OPTION;
          COMPARE   ZERO,OPTION
          GOTO      OPTN9500 IF EQUAL
.
          COMPARE   ONE,OPTION
          GOTO      OPTN1000 IF NOT EQUAL
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
OPTN9999  RETURN
+
.******************************************************************************
.*                                 KASC0000                                   *
.*                            Keyin ASCI file                                 *
.******************************************************************************
KASC0000  KEYIN     *P1:10,*EF,"Load File Name : ",*V2LON,FNAMEI
.
          PACK      FNAMEI,FNAMEI,SP70
.
          MATCH     SP70,FNAMEI                  * anything entered ?
          GOTO      KASC9500 IF EQUAL            * no
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      INPTEXT1,FNAMEI              * open file
          TRAPCLR   IO
.
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Input data file not found.  ";
            CALL      HITENTER
            GOTO      KASC0000
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      KASC9999
.
KASC9500  MOVE      ONE,EXIT                     * no filename
KASC9999  RETURN
+
.******************************************************************************
.*                                  PINP0000                                  *
.*                         Process The Input Text File                        *
.******************************************************************************
PINP0000  CALL      IBACLOCK
          DISPLAY   *P1:18,"Records    : ":
                    *P1:20,"Started  : ",*V2LON,CTIMEIS,*HOFF:
                    *P1:21,"Processing ",*V2LON,FNAMEI,*HOFF;
          MOVE      ZERO,COUNT
          MOVE      ZERO,F2                      * initialise code counter
          MOVE      "a",CODCHAR                  * initialise code counter char
          MOVE      ZERO,FULLFLAG
          PACK      INPCODE,SP70                 * initialise code/desc
          CLEAR     INPCODE
          PACK      INPDESC,SP70
          CLEAR     INPDESC
.
. ----- Read the input data file -----
.
PINP1000  READ      INPTEXT1,SEQ;KEY1;           * read character
          GOTO      PINP9000 IF OVER             * end of file
.
          MATCH     COMMA,KEY1
          IF        !@EQUAL
            APPEND    KEY1,INPCODE
            GOTO      PINP1000                   * get next character
          ENDIF
.
          RESET     INPCODE                      * reset country code
          REP       " 0",INPCODE
.
PINP2000  READ      INPTEXT1,SEQ;KEY1;           * read character
          GOTO      PINP9000 IF OVER             * end of file
          GOTO      PINP3000 IF EOS              * end of string
.
          RESET     VALIDCHR
          SCAN      KEY1,VALIDCHR                * check for valid char
          IF        @EQUAL
            APPEND    KEY1,INPDESC
          ENDIF
          GOTO      PINP2000                     * get next character
.
PINP3000  RESET     INPDESC                      * reset country description
          PACK      INPDESC,INPDESC,SP70
.
          CALL      WCOD0000                     * write category C record
          BRANCH    EXIT,PINP9000                * codes file full
.
          READ      INPTEXT1,SEQ;ANS             * get next record
          PACK      INPCODE,SP70                 * clear code
          CLEAR     INPCODE
          PACK      INPDESC,SP70                 * clear desc
          CLEAR     INPDESC
        
.
PINP5000  ADD       ONE,COUNT
          IF        (COUNT%100)=0
            DISPLAY   *P14:18,COUNT;
          ENDIF
          GOTO      PINP1000
.
. ----- Finished -----
.
PINP9000  CALL      IBACLOCK
          DISPLAY   *P1:21,*EL,"Finished : ",*V2LON,CTIMEIS,*HOFF:
                    *P1:24,*EL,*B,"Processed ",COUNT," records.   ";
          CALL      HITENTER
PINP9999  RETURN
+
.******************************************************************************
.*                                  WCOD0000                                  *
.*                         Write category C record to patcodes                *
.******************************************************************************
WCOD0000  PACK      PTCDKEY2,ANSC,SP1,INPDESC,SP70
          CALL      RDSCODE2                     * Need to check if description
WCOD0500  CALL      RDKCODE2                     * exists.
          BRANCH    OVRCD,WCOD1000
.
          MATCH     INPDESC,TDESC
          GOTO      WCOD1000 IF NOT EQUAL        * description doesn't exist
.
          MATCH     INPCODE,THCSCOD
          GOTO      WCOD9000 IF EQUAL            * do nothing if hdp/desc exists
.
          GOTO      WCOD0500                     * check next record
.
WCOD1000  CALL      GNID0000                     * increment code counter
          BRANCH    FULLFLAG,WCOD9500
.
          MOVE      KEY3,CODCOUNT
.
          MOVE      "C ",TCODE                   * category C
          MOVE      CODCOUNT,ACODE               * write counter as the code
          PACK      TDESC,INPDESC,SP70           * description from DHS
          MOVE      INPCODE,THCSCOD              * code from DHS
          MOVE      ZERO,TCFORM6
.
          MOVE      "A",PTCOACTV
.
          PACK      TCINDC1,SP70
          PACK      TCINDC2,SP70
          PACK      TCINDC3,SP70
          PACK      TCINDC4,SP70
          PACK      TCINDC5,SP70
          PACK      TCINDC6,SP70
          PACK      TCINDC7,SP70
          PACK      TCINDC8,SP70
          PACK      TCINDC9,SP70
          PACK      TCINDC10,SP70
          PACK      TCINDC11,SP70
.
          PACK      PTCDGRPV,SP70
          PACK      PTCDDEFT,SP70
          MOVE      INPCODE,PTCDNHCP             * code from DHS
          MOVE      SP70,PTCDHOSS
          MOVE      SP70,PTCDDFIC
          MOVE      SP70,TCSPARE
          MOVE      SP70,TCINDC12
          MOVE      SP70,TCINDC13
          MOVE      SP70,TCINDC14
          MOVE      SP70,TCINDC15
          MOVE      SP70,TCINDC16
          MOVE      SP70,TCINDC17
          MOVE      SP70,TCINDC18
          MOVE      SP70,TCINDC19
          MOVE      SP70,TCINDC20
          MOVE      SP70,TCINDC21
          MOVE      SP70,PTCDFELC
          MOVE      SP70,PTCDUDF2
          MOVE      SP70,PTCDUDF3
          MOVE      SP70,PTCDUDF4
          MOVE      ZERO,PTCDCRSC
          MOVE      SP70,PTCDASC1
          MOVE      SP70,PTCDASC2
          MOVE      SP70,PTCDASC3
          MOVE      SP70,PTCDASC4
          MOVE      SP70,PTCDASC5
          PACK      TCSPARE,SP70
.
          CALL      WRCODE1
.
WCOD9000  MOVE      ZERO,EXIT
          GOTO      WCOD9999
.
WCOD9500  MOVE      ONE,EXIT                     * codes file full
WCOD9999  RETURN
+
.**********************************************************************
. Get next code unique id
.**********************************************************************
GNID0000  COMPARE   "99",F2          * at end of group ?
          GOTO      GNID1110 IF NOT EQUAL
.
          MATCH     "z",CODCHAR
          GOTO      GNID9000 IF EQUAL
.
          REP       REPUNIQ,CODCHAR
          MOVE      ZERO,F2
.
GNID1110  ADD       ONE,F2
          MOVE      F2,D2
          REP       " 0",D2
          PACK      KEY3,CODCHAR,D2,SP70
          PACK      KEY5,ANSC,SP1,KEY3
          CALL      RDACODE1                * check if code exists
          BRANCH    OVRCD,GNID9500
          GOTO      GNID0000
.
GNID9000  MOVE      ONE,FULLFLAG            * code allocation full
          GOTO      GNID9999
.
GNID9500  MOVE      KEY3,CODCOUNT           * code allocated
          MOVE      ZERO,FULLFLAG
GNID9999  RETURN
+
.==============================================================================
.
          INC       STD001IO
.
          INC       PATCODIO/INC            * Codes file
+
