.******************************************************************************
.* System         : Outpatients                                               *
.* Program        : IBAOUT79                                                  *
.* Description    : Clinic Analysis List                                      *
.******************************************************************************
.* Author         : ROD IS GAY                                                *
.* Date           : 29/04/93                                                  *
.* Modifications  :                                                           *
.******************************************************************************
.*        V11.02.01 09/02/2022  Thanh T          TSK 0905641                  *
.*                  Recompiled as OUTMA1FD changes                            *
.*        V10.07.01 30/10/2015  Ebon Clements  CAR 268970                     *
.*                  Change to use OUTCLIFD index 1 instead of index 2         *
.*        V10.03.01 17/10/2012  Jill Parkinson CAR 273375                     *
.*                  Recompiled for DATECONV - first day of year calculation   *
.*        V9.09.02  04/03/2008  Peter Vela    CAR 162914                      *
.*                  Recompiled for KYOUTCLI - readk of outcliaf               *
.*        V9.09.01  28/07/2007  Jill Habasque CAR 103645                      *
.*                  Recompiled for KYOUTCLI - read of pmshcpaf                *
.*        V5.08.01  19/09/2000  Steve Armstrong   srf 647263                  *
.*                  Recompiled for changes to OUTDSCLN                        *
.*        V5.08.B01 15/03/2000  Steve Armstrong     5.08 Mods                 *
.*                  Recompiled for changes to OUTCLIFD (effective date)       *
.******************************************************************************
.*        V5.01.02  12/07/1993    Lofty the Pom       SRF 440230              *
.*                  for printing x's, do for slot time to time actually seen  *
.*                  remove all checks on departure time                       *
.******************************************************************************
.
          INC       STD001FD
          INC       OUTBOAFD/INC
          INC       OUTBB1FD/INC
          INC       OUTCLIFD/INC
          INC       OUTCONFD/INC
          INC       OUTCSLFD/INC
          INC       OUTCTYFD/INC
          INC       OUTMA1FD/INC
          INC       OUTSITFD/INC
          INC       PATCODFD/INC
          INC       PATDO1FD/INC
          INC       PMSHCPFD/INC            * National HCP file
          INC       PATHSPFD/INC
          INC       PATYERFD/INC
.
DIM4      DIM       4
VSESS     DIM       25
FORM3     FORM      3
FORM3A    FORM      3
SESSION   DIM       25
DDAY      DIM       9
INCMIN    FORM      3
INTERVAL  FORM      2
MINSWTG   FORM      4
NXTHOUR   FORM      2
PRDATE    DIM       10
SCLIHOUR  DIM       2
EBKHOUR   FORM      2
COUNT     FORM      3
AVEWTG    FORM      3.1
TOTWTG    FORM      5
DURATION  FORM      4         * calculated duration of operation
FORM4B    FORM      4         * time work variable
TIMESTRT  DIM       5         * starting time
DIM108    DIM       108
NOCHARS   FORM      3
TIMESTOP  DIM       5         * ending time
SHCTYP    DIM       20
NOPATS    FORM      3
DIM40     DIM       40
DSCCLIN   DIM       30
STRTSESS  DIM       5         * START DATE variables
FHDR      INIT      "out78a"
VSITE     DIM       6
VCLIN     DIM       6
VSTRT     DIM       5
VDATE     DIM       8
VTIME     DIM       5
Z20       INIT      "zzzzzzzzzzzzzzzzzzzz"
.
PRGID     INIT      "IBAOUT79"
PRGNAM    INIT      "Clinic Analysis List"
VERSION   INIT      "V12.00.00"
+
.***********************************************************************
.*  ML0000  :  Mainline code                                           *
.***********************************************************************
ML0000    CALL      DISPHEAD
          CALL      INIT0000                      * initialisation
.
ML1000    CALL      MENU0000                      * menu
          BRANCH    EXIT,ML9999                   * Exit selected
.
ML2000    CALL      PROC0000                      * process field keyins
          BRANCH    EXIT,ML1000                   * nothing input
.
          CALL      CONTQST                       * Ok to Continue
          BRANCH    CEXIT,ML5000,ML2000,ML1000
.
ML5000    CALL      RPRT0000                      * print report from temp file
          GOTO      ML1000
.
ML9999    CHAIN     PGM
+
.***********************************************************************
.*  INIT0000  :  Initialisation                                        *
.***********************************************************************
INIT0000  DISPLAY   *P55:24,"controlf"
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P55:24,"pathspaf"
          OPEN      PATHSPA1,"pathspaf"
          DISPLAY   *P55:24,"patcodes"
          OPEN      PATCODE1,"patcodes"
          OPEN      PATCODE2,"patcodes"
          DISPLAY   *P55:24,"patdo1af"
          OPEN      PATDO1A1,"patdo1af"
          DISPLAY   *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
.
          DISPLAY   *P55:24,"patyears"
          OPEN      PATYEAR1,"patyears"
          DISPLAY   *P55:24,"outsitaf"
          OPEN      OUTSITA1,"outsitaf"
.
          PACK      CFNAME,UID,FILBB1A1
          CALL      OPOTBB11
          PACK      CFNAME,UID,FILBOKA1
          OPEN      OUTBOKA1,CFNAME
          PACK      CFNAME,UID,FILMA1A1
          CALL      OPOTMA11
          PACK      CFNAME,UID,FILCLIA1
          OPEN      OUTCLIA1,CFNAME
.
          MOVE      IDDD,VSITE
          MOVE      ONE,CNEWDS
.
INIT9999  RETURN
+
.***********************************************************************
.*  MENU0000  :  Main Menu                                             *
.***********************************************************************
MENU0000  DISPLAY   *P1:4,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = Print Report":
                    *P1:7,"Select option ? "
.
MENU1000  KEYIN     *P17:7,*DV,UNDLN1:
                    *P17:7,*V2LON,MOPTION;
.
          MOVE      ZERO,EXIT
          BRANCH    MOPTION,MENU9999
          IF        MOPTION<>0
            BEEP
            GOTO      MENU1000
          ENDIF
          MOVE      ONE,EXIT                      * Exit
.
MENU9999  RETURN
+
. *****************************************************************************
. * KTIM0000: Keyin the clinic time. No validation is performed, but a        *
. *           ? option is available if VCLIN if non blank                     *
. * PARAMETERS : VERTTM = Line for keyin of time                              *
. *            : VTIME  = Time input (HH:MM) format                           *
. * RETURNS    : VTIME  = Time input (HH:MM) format                           *
. *****************************************************************************
KTIM0000  CALL      GDCT0000                * get default clinic time
          MOVE      SP5,VSTRT
.
.         Set up variables for the keyin of the time.
.
          UNPACK    VTIME,CHOUR,ANS,CMIN * Default values for keyin (ie. blank)
          MOVE      "6",CVERT         * Line to keyin the date
          MOVE      THIRTY,CCOL          * Column to keyin the date
          MOVE      CVERT,EVERT          * Line for error messages
          MOVE      "45",ECOL            * Column for error messages
          MOVE      ONE,CCANLDTE         * can cancel time
          MOVE      ZERO,CDEFDTE         * Don't allow one ENTER to accept date
.
          CALL      KEYTIME              * Key in the time
          BRANCH    CQUEST,KTIM5000      * ? option selected.
          BRANCH    OVRCD,KTIM9000       * No time input
.
.         We have a valid time
.
          PACK      VTIME,IHOUR,COLON,IMIN
          REP       " 0",VTIME      * Set up the selected time
          MOVE      VTIME,VSTRT
.
          MOVE      ZERO,EXIT           * Returning with a time
          GOTO      KTIM9999            * Return with this time
.
.         ? option selected. Display session master details for this clinic
.         (if known).
.
KTIM5000  MATCH     SP6,VCLIN           * Do we have a clinic id ?
          GOTO      KTIM6000 IF EQUAL   * No. Cannot do a ? option
.
          PACK      CFNAME,UID,FILCTYA1 * Get the clinic type file name
          OPEN      OUTCTYA1,CFNAME     * Open the clinic type file
.
          CALL      GETSCR00
          CALL      OUTDSMAS            * Display the available sessions
          CLOSE     OUTCTYA1            * Close the clinic type file
          CALL      PUTSCR00
.
          MOVE      SP5,VTIME           * Initialize for the redisplay
.......   CALL      DMEN0000            * Display menu for this option
          GOTO      KTIM0000            * Key in the date again
.
.         We don't have a clinic id so we cannot do a ? option on time
.
KTIM6000  BEEP                          * Tell user they have made a mistake
          GOTO      KTIM0000            * Key in the time again
.
KTIM9000  MOVE      ONE,EXIT            * No time input - set flag to indicate
.
KTIM9999  RETURN
+
. *****************************************************************************
. * KDAT0000: Keyin the clinic date. No validation is performed, but a        *
. *           ? option is available if VCLIN if non blank                     *
. * PARAMETERS : VERTDT = Line for keyin of date                              *
. * RETURNS    : VDATE  = Date input (CCYYMMDD) format                        *
. *****************************************************************************
KDAT0000  CALL      IBACLOCK            * Recheck current date
.
KDAT1000  PACK      VDATE,CCC,CYY,CMM,CDD
          REP       " 0",VDATE      * Initialisation of date (todays date)
          MOVE      VDATE,OBADATE       * Save the current date
.
.         Set up variables for the keyin of the date.
.
          UNPACK    VDATE,CCENT,CYEAR,CMON,CDAY
          MOVE      "5",CVERT        * Line to keyin the date
          MOVE      THIRTY,CCOL         * Column to keyin the date
          MOVE      CVERT,EVERT         * Line for error messages
          MOVE      "45",ECOL           * Column for error messages
          MOVE      ZERO,CHIGHLT        * Use highlighting
          MOVE      ZERO,CDEFDTE        * Don't allow one ENTER to accept date
.
          CALL      KEYDATE             * Key in the date
          BRANCH    CQUEST,KDAT5000     * ? option selected.
          BRANCH    OVRCD,KDAT9999      * No date input (Can not occur)
.
.         We have a valid date
.
          PACK      VDATE,ICENT,IYEAR,IMON,IDAY
          REP       " 0",VDATE          * Set up the selected date
          CALL      PACDATE
          MOVE      CPCDATE,PRDATE      * format date for printing
.
.         Check date against current date to see if a warning message
.         should be displayed
.
          MATCH     OBADATE,VDATE       * Is selected date before today ?
          GOTO      KDAT9999 IF LESS    * No. Return with this date
          GOTO      KDAT9999 IF  EQUAL
.
          DISPLAY   *P1:24,*EL,*B:
                    "Cannot enter a date into the future. ";
          CALL      HITENTER
          GOTO      KDAT0000     
.
.         ? option selected. Display session master details for this clinic
.         (if known).
.
KDAT5000  MATCH     SP6,VCLIN           * Do we have a clinic id ?
          GOTO      KDAT6000 IF EQUAL   * No. Cannot do a ? option
.
          PACK      CFNAME,UID,FILCTYA1 * Get the clinic type file name
          OPEN      OUTCTYA1,CFNAME     * Open the clinic type file
.
          CALL      GETSCR00
          CALL      OUTDSMAS            * Display the available sessions
          CLOSE     OUTCTYA1            * Close the clinic type file
          CALL      PUTSCR00
.
          MOVE      SP8,VDATE           * Initialize for the redisplay
......    CALL      DMEN0000            * Display menu for this option
          GOTO      KDAT1000            * Key in the date again
.
.         We don't have a clinic id so we cannot do a ? option on date
.
KDAT6000  BEEP                          * Tell user they have made a mistake
          GOTO      KDAT1000            * Key in the date again
.
KDAT9999  RETURN
+
. *****************************************************************************
. * KCLI0000: Keyin the clinic id and validate it                             *
. * PARAMETERS : VERTCL = Line for keyin of clinic id                         *
. * RETURNS    : EXIT = 0 if valid clinic id entered (VCLIN = clinic id)      *
. *                     1 if no clinic id entered    (VCLIN = SP6)            *
. *****************************************************************************
KCLI0000  MOVE      "30",ECOL
          MOVE      "4",EVERT
          MOVE      SP6,CKYIDEF6            * No Default Value
          MOVE      ZERO,CKYIMAND           * Not Mandatory
.
          DISPLAY   *PECOL:EVERT,*EL;
          CALL      KYOUTCLI
          BRANCH    EXIT,KCLI9000,KCLI9000,KCLI9000
          MOVE      OCACLIN,VCLIN
          CALL      CIDSC000                * Get the clinic description
          MOVE      OCADESC,DSCCLIN         * Save the clinic description
          DISPLAY   *P45:4,*V2LON,DSCCLIN;
          MOVE      ZERO,EXIT               * Success indicator
          GOTO      KCLI9999                * Return to main code
.
KCLI9000  MOVE      ONE,EXIT            * Indicator saying nothing input
.
KCLI9999  RETURN
+
.*****************************************************************************
.* DSCR0000: Display re-appointment initial menu                             *
.*****************************************************************************
DSCR0000  DISPLAY   *P1:3,*EF:
                    *P1:4,"   Current Clinic Id.",*P28:4,":":
                    *P1:5,"   Current Clinic Date",*P28:5,":":
                    *P1:6,"   Current Clinic Time",*P28:6,":";
.
DSCR9999  RETURN
+
.***********************************************************************
.*  PROC0000  :  Process fields                                        *
.***********************************************************************
PROC0000  CALL      DSCR0000                      * display screen
.
          CALL      KCLI0000                      * keyin clinic
          BRANCH    EXIT,PROC9999                 * nothing input
.
          CALL      KDAT0000                      * keyin date  
.
          CALL      KTIM0000                      * keyin time
          BRANCH    EXIT,PROC0000                 * nothing input
.
          CALL      GSES0000                      * validate session
          BRANCH    EXIT,PROC0000
.
PROC9999  RETURN
+
.***********************************************************************
.*  RPRT0000  :  Print Report                                          *
.***********************************************************************
RPRT0000  DISPLAY   *P1:24,*EL,*P35:24,"Printing...";
.
          CALL      IBACLOCK
          MOVE      ZERO,CPAGENO
          MOVE      ONE,CNOUNDLN
          MOVE      "10",CLNO                     * force new page
          MOVE      ZERO,NOPATS
          MOVE      ZERO,TOTWTG
          CALL      HEAD132
          PRINT     *40,"Clinic : ",VCLIN,SP2,DSCCLIN:
                    *N,*40,"Date   : ",PRDATE:
                    *N,*40,"Time   : ",VTIME,*N
          CALL      SCAL0000                      * print scale
          CALL      UND132
.
          PACK      VSESS,VSITE,VCLIN,VDATE,VTIME
          PACK      KEY28,VSESS,SP30           * Starting key for this session
          CALL      RDSBOKA1                   * Position ourselves at the start
RPRT0500  CALL      RDKBOKA1                   * Read first record of session
          BRANCH    OVRCD,RPRT9000             * Session not found
.
.         Now check that we have the correct session
.
          PACK      SESSION,OBASITE,OBACLIN,OBADATE,OBASTRT
          MATCH     SESSION,VSESS       * Correct session ?
          GOTO      RPRT9000 IF NOT EQUAL * no
.
          PACK      KEY8,OBAOUTNO
          CALL      RDBOKB1
          BRANCH    OVRCD,RPRT0500
.
          MATCH     SP5,OTBBCITM                  * do we have a check in time?
          GOTO      RPRT0500 IF EQUAL
          MATCH     SP5,OTBBASTM                  * do we have a time seen?
          GOTO      RPRT0500 IF EQUAL
.
. check if we need a new page
.
          COMPARE   "55",CLNO
          GOTO      RPRT5000 IF LESS
.
. we need a new page
.
          CALL      HEAD132
          PRINT     *40,"Clinic : ",VCLIN,SP2,DSCCLIN:
                    *N,*40,"Date   : ",PRDATE:
                    *N,*40,"Time   : ",VTIME,*N
          CALL      SCAL0000                      * print scale
          CALL      UND132
.
RPRT5000  CALL      BKLN0000                      * format data for display
.
. print a line
.
          PRINT     *1,OBATIME,SP2,OBAURNO,SP3,DIM108,*129,MINSWTG
.  
          ADD       ONE,CLNO                      * increment line counter
          ADD       ONE,NOPATS
          ADD       MINSWTG,TOTWTG
          GOTO      RPRT0500
.
. no more records
.
RPRT9000  ASSIGN    (TOTWTG/NOPATS),AVEWTG
          PRINT     *N,"Total No. Attended   : ",NOPATS:
                    *N,"Average Waiting Time : ",AVEWTG:
                    *N,*N,*1,"*** End of report ***" 
.
RPRT9999  RETURN
+
.*************************************************************************
.*  BKLN0000  :  Get Booking Length                                      *
.*               Parameters: TIMESTRT,TIMESTOP    Returns: DIM108        *
.*************************************************************************
BKLN0000  PACK      DIM108,SP30,SP30,SP30,SP30
          CLEAR     DIM108                        * clear string
.
. check if booking start time is (somehow) before the start of the session
.
          MATCH     OTBBASTM,STRTSESS
          GOTO      BKLN0300 IF LESS              * Ok
.
. ******* actually seen before start of session *******
. ******* so assume booking time is before session start and calculate
. ******* booking time -> time actually seen
.
          MATCH   OBATIME,STRTSESS          * if session start < slot time
          GOTO    BKLN9000 IF LESS          * have a serious error 
          GOTO    BKLN5000                  * start time = slot time
.
. print blanks until time arrived at desk (check in time)
.
BKLN0300  MATCH     STRTSESS,OTBBCITM
          IF        @LESS
            MOVE      STRTSESS,TIMESTRT      * arrived before start of session
            MOVE      ONE,COUNT
            GOTO      BKLN1000
          ENDIF
.
          MOVE      STRTSESS,TIMESTRT             * start time (session)
          MOVE      OTBBCITM,TIMESTOP             * check in time
          CALL      DURN0000
.
          IF        INTERVAL=5
            ASSIGN    (DURATION/5*2),NOCHARS      * No. of characters to print
          ELSE
            ASSIGN    (DURATION/5),NOCHARS        * No. of characters to print
          ENDIF
.
          ASSIGN    NOCHARS/2,FORM3               * if no. is odd, add 1
          ASSIGN    FORM3*2,FORM3A
          IF        NOCHARS<>FORM3A
            ADD       ONE,NOCHARS
          ENDIF
.
          MOVE      ONE,COUNT
          WHILE     COUNT<=NOCHARS         
            APPEND    SP1,DIM108                  * append spaces until start
            ADD       ONE,COUNT
          DO
.
          APPEND    "A",DIM108                    * check in time
.
. ******* print blanks from check in time until slot time *******
.
          MOVE      OTBBCITM,TIMESTRT             * check in time
          MOVE      TWO,COUNT
.
BKLN1000  MOVE      OBATIME,TIMESTOP        * slot time 
          CALL      DURN0000
.
          IF        INTERVAL=5
            ASSIGN    (DURATION/5*2),NOCHARS       * No. of characters to print
          ELSE
            ASSIGN    (DURATION/5),NOCHARS      * No. of characters to print
          ENDIF
.
          IF        !(COUNT=2 & NOCHARS=1)
            WHILE     COUNT<=NOCHARS         
              APPEND    SP1,DIM108                  * append spaces until start
              ADD       ONE,COUNT
            DO
          ENDIF
.
          APPEND    "B",DIM108                    * start of booking
.
. ******* print x's from slot time to time actually seen *******
.
BKLN5000  MOVE      OBATIME,TIMESTRT        * slot time
          MOVE      OTBBASTM,TIMESTOP       * time actually seen
          CALL      DURN0000
.
          IF        INTERVAL=5
            ASSIGN    (DURATION/5*2),NOCHARS       * No. of characters to print
          ELSE
            ASSIGN    (DURATION/10*2),NOCHARS      * No. of characters to print
          ENDIF
.
          MOVE      ONE,COUNT
          WHILE     COUNT<NOCHARS         
            APPEND    ANSX,DIM108                * append x's until end
            ADD       ONE,COUNT
          DO
.
          APPEND    "D",DIM108
          RESET     DIM108
.
. ******* calculate duration from slot time to time actually seen *******
.
BKLN9000  MOVE      OBATIME,TIMESTRT        * slot time
          MOVE      OTBBASTM,TIMESTOP       * time actually seen
          CALL      DURN0000
          MOVE      DURATION,MINSWTG
.
BKLN9999  RETURN
+
.*********************************************************************
.         get the default clinic time for the clinic/date entered
.         if there is only one
.*********************************************************************
GDCT0000  MOVE      SP5,VTIME
          COMPARE   ONE,OTCNDCST
          GOTO      GDCT9999 IF NOT EQUAL   * not defaulting time
.
          MOVE      ZERO,FORM2
          PACK      KEY28,IDDD,VCLIN,VDATE,SP20
.
GDCT1000  CALL      RDSBOKA1
          CALL      RDKBOKA1
          BRANCH    OVRCD,GDCT9999          * end of file
.
          PACK      KEY20,OBASITE,OBACLIN,OBADATE
          MATCH     KEY20,KEY28
          GOTO      GDCT9999 IF NOT EQUAL   * different details
.
          ADD       ONE,FORM2
          LOAD      VTIME,FORM2,OBASTRT,SP5
          PACK      KEY28,IDDD,VCLIN,VDATE,OBASTRT,Z20
          BRANCH    FORM2,GDCT1000          * on first item
.
GDCT9999  RETURN
. *****************************************************************************
. * CIDSC000: Get the description for the current clinic id record            *
. * RETURNS    : OCADESC = Clinic description or Doctor's description         *
. *****************************************************************************
CIDSC000  MATCH     SP6,OCADOCT         * Do we have a doctors code ?
          GOTO      CIDSC999 IF EQUAL   * No. Use the description provided.
.
          MOVE      OCADOCT,KEY6        * Set up key for doctors file
          CALL      RDDOCT1             * Read the doctors code
          BRANCH    OVRCD,CIDSC999      * No doctors record found. Blank desc.
.
.         Pack up the doctors name into a "nice" format
.
          CALL      CONCATDR            * Routine found in OUTDSCLN
          MOVE      DIM40,OCADESC       * Move doctors name into OCADESC
CIDSC999  RETURN
+
. *****************************************************************************
. * GSES0000: Get the session for the current clinic/date/time                *
. * PARAMETERS : VCLIN  = Clinic id                                           *
. *              VDATE  = Session date                                        *
. *              VTIME  = Session start time                                  *
. * RETURNS    : EXIT   = 0 means session found                               *
. *                     = 1 means session not found                           *
. *              VSESS  = Session parameters (VSITE,VCLIN,VDATE,VTIME)        *
. *****************************************************************************
GSES0000  PACK      VSESS,VSITE,VCLIN,VDATE,VTIME
          PACK      KEY28,VSESS,SP6     * Starting key for this session
          CALL      RDSBOKA1            * Position ourselves at the start
          CALL      RDKBOKA1            * Read first record of session
          BRANCH    OVRCD,GSES9000      * Session not found
.
.         Now check that we have the correct session
.
          PACK      SESSION,OBASITE,OBACLIN,OBADATE,OBASTRT
          MATCH     SESSION,VSESS       * Correct session ?
          GOTO      GSES9000 IF NOT EQUAL * no
.
          UNPACK    OBADATE,CCENT,CYEAR,CMON,CDAY
          CALL      DATECONV
          PACK      KEY18,OBASITE,OBACLIN,WEEKDAY,OBASTRT
          CALL      RDMASA1
          BRANCH    OVRCD,GSES9999
.
          MOVE      ZERO,EXIT           * Session found
          GOTO      GSES9999            * Return
.
GSES9000  DISPLAY   *P1:24,*EL,*B,"Session not found.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT            * Session not found
.
GSES9999  RETURN
+
.**********************************************************************
.*  SCAL0000  :  Determine and Print Scale                            *
.**********************************************************************
SCAL0000  MOVE      OMASTART,TIMESTRT             * time started
          MOVE      OMAEND,TIMESTOP               * time ended (+ last booking)
          CALL      DURN0000                      * get time duration
.
          MOVE      "5",INTERVAL                  * assume 5 minute intervals
          ASSIGN    (DURATION/5),INCMIN           * try 5 minute intervals
          IF        INCMIN>55
            MOVE      "10",INTERVAL               * use 10 minute intervals
          ENDIF
.
          MOVE      OMAEND,KEY2                   * get last booking hour
          MOVE      KEY2,EBKHOUR                  * move to form field
.
          MOVE      TIMESTRT,SCLIHOUR             * move to short dim field
          MOVE      SCLIHOUR,NXTHOUR              * next hour to print
          PACK      STRTSESS,SCLIHOUR,COLON,ZERO,ZERO   * start time (session)
.
. print 1st line (of 3) of scale 
.
          PRINT     *18,NXTHOUR;
          ADD       ONE,NXTHOUR
          WHILE     EBKHOUR>=NXTHOUR
            IF        INTERVAL=5
              PRINT     SP20,SP2,NXTHOUR;
            ELSE
              PRINT     SP10,NXTHOUR;
            ENDIF
            ADD       ONE,NXTHOUR
          DO
.
. print 2nd line (of 3) of scale 
.
          MOVE      ZERO,FORM1                    * start at zero minutes
          PRINT     *N,"Booking",*19,FORM1;
          MOVE      ONE,COUNT
          ADD       ONE,FORM1
          IF        INTERVAL=5
            WHILE     COUNT<28
              IF        FORM1=6
                MOVE      ZERO,FORM1
              ENDIF
              PRINT     SP3,FORM1;
              ADD       ONE,FORM1
              ADD       ONE,COUNT
            DO
          ELSE  
            WHILE     COUNT<55
              IF        FORM1=6
                MOVE      ZERO,FORM1
              ENDIF
              PRINT     SP1,FORM1;
              ADD       ONE,FORM1
              ADD       ONE,COUNT
            DO
          ENDIF
          PRINT     *129,"Mins";
.
. print 3rd line (of 3) of scale 
.
          MOVE      ZERO,FORM1                    * start at zero minutes
          PRINT     *N,"Rules",*19,FORM1;
          IF        INTERVAL=5
            ADD       "5",FORM1
          ENDIF
          MOVE      ONE,COUNT
          WHILE     COUNT<55
            IF      INTERVAL=5
              PRINT     SP1,FORM1;
              ADD       FIVE,FORM1        * since only form1 should work Ok!!!
              ADD       ONE,COUNT
            ELSE
              PRINT     SP1,FORM1;
              ADD       ONE,COUNT
            ENDIF
          DO
          PRINT     *129,"Wtg."
.
SCAL9999  RETURN
+
.*********************************************************************
.*                  DURN0000                    Called by : xxxx0000 *
.*        Calculate a duration given two times                       *
.*        Para's  : TIMESTOP      the end time   (HH:MM)             *
.*                  TIMESTRT      the start time (HH:MM)             *
.*        Returns : DURATION      the duration (minutes)             *
.*********************************************************************
DURN0000  MOVE      ZERO,DURATION
          MATCH     TIMESTOP,TIMESTRT
          GOTO      DURN9999 IF EQUAL       * no duration
          GOTO      DURN1000 IF LESS        * times not over midnight
.
.         operation went over midnight so make end time larger
.         eg 22:00 to 01:00 becomes 22:00 to 25:00 which gives 3 hours duration
.
          UNPACK    TIMESTOP,CHOUR,ANS,CMIN
          MOVE      CHOUR,FORM2
          ADD       "24",FORM2
          MOVE      FORM2,CHOUR
          PACK      TIMESTOP,CHOUR,ANS,CMIN
.
.         get end time as minutes
.
DURN1000  UNPACK    TIMESTOP,CHOUR,ANS,CMIN
          MOVE      CHOUR,FORM2             * hour as a form 2
          MOVE      FORM2,FORM4A            * set up work variable
          MULT      "60",FORM4A             * hours turned into minutes
          MOVE      CMIN,FORM2              * minutes as as form 2
          ADD       FORM2,FORM4A            * the total minutes of end time
.
.         get start time as minutes
.
          UNPACK    TIMESTRT,CHOUR,ANS,CMIN
          MOVE      CHOUR,FORM2             * hour as a form 2
          MOVE      FORM2,FORM4B            * set up work variable
          MULT      "60",FORM4B             * hours turned into minutes
          MOVE      CMIN,FORM2              * minutes as as form 2
          ADD       FORM2,FORM4B            * the total minutes of start time
.
.         duration = end minutes - start minutes
.
          SUB       FORM4B,FORM4A           * the duration
          MOVE      FORM4A,DURATION         * the duration
.
DURN9999  RETURN
.
.
          INC       STD001IO
          INC       DATECONV
          INC       KYOUTCLI
          INC       OUTCSLIO/INC
          INC       OUTDSCLN
          INC       OUTDSMAS
          INC       OUTBOAIO/INC
          INC       OUTBB1IO/INC
          INC       OUTCLIIO/INC
          INC       OUTCTYIO/INC
          INC       OUTMA1IO/INC
          INC       OUTSITIO/INC
          INC       PATHSPIO/INC
          INC       PATCODIO/INC
          INC       PATDO1IO/INC
          INC       PMSHCPIO/INC            * National HCP file
          INC       PATYERIO/INC
..............................................................................
