.******************************************************************************
.* System    :   System Management                                            *
.* Program   :   HL7CISIN.PBL                                                 *
.* Desc      :   HL7 Broadcast Message Server Program                         *
.******************************************************************************
.* Date      :   14/04/2005                                                   *
.* Author    :   Steve Armstrong                                              *
.* Function  :   This program will send messages from IBA data holding files  *
.*               to a socket (TCP/IP port) on which a listener is waiting     *
.*               to receive HL7 messages, using standard MLLP.                *
.*               Ported from V6.12.                                           *
.*                                                                            *
.******************************************************************************
.* Mods      :                                                                *
.******************************************************************************
.*       V12.00.08 21/10/2025  Bella Turco      TSK 0960178                   *
.*                 Recompiled for HL7COMN - added ZXP.77 (Sending Estimated   *
.*       V12.00.07 15/10/2025  J.Tan            TSK 0967027                   *
.*                 Recompiled for HL7COMN - Checking Pooling file for Type=018*
.*       V12.00.06 07/10/2025  Davin            TSK 0946211                   *
.*                 Recompiled for HL7COMN - Default PID.25 to ""              *
.*       V12.00.05 18/09/2025  Davin            TSK 0959732                   *
.*                 Fixed to goto correct label when ZTR.45 is blank (WZTR4500)*
.*                 11/09/2025  Davin            TSK 0949457                   *
.*                 Recompiled for HL7COMN - added ZXP.76 (Email Validation)   *
.*                 08/09/2025  Davin            TSK 0959732                   *
.*                 Populate ZTR.45 with triage date/time (EMVITRDT/EMVITRTM)  *
.*       V12.00.04 02/07/2025  Davin            TSK 0954308                   *
.*                 Recompiled for HL7COMN                                     *
.*       V12.00.03 25/06/2025  Davin            TSK 0954308                   *
.*                 Recompiled for HL7COMN                                     *
.*       V12.00.02 17.06.2025  Davin            TSK 0954308                   *
.*                 Recompiled for HL7COMN                                     *
.*       V12.00.01 22/05/2025  Davin            TSK 0960441                   *
.*                 Recompiled for HL7COMN - Added PTCNSAPC for EMR PV1.3      *
.*                 28/05/2025  PJ Le Febour     TSK 0955096 AlphaNum Visitnum *
.*                 change  COMPARE POBAOUTNO,PVIBILL to MATCH OBAOUTNO,PVIBILL*
.*                         COMPARE AADMNO,PTEOADMN   to MATCH AADMNO,PTEOADMN *
.*                         COMPARE AADMNO,WMBOOK     to MATCH AADMNO,WMBOOK   *
.******************************************************************************
.*       V11.05.06 29/04/2025  Davin            TSK 0947378                   *
.*                 Recompiled for HL7COMN - added ZXV.114,ZXV.115,ZXV.116     *
.*       V11.05.05 15.04.2025  DA Sarkies       TSK 0954308                   *
.*                 Add retrieval for PTCNDBVC and PTCNDBVP                    *
.*       V11.05.04 20/03/2025  Davin            TSK 0956210                   *
.*                 Add ICD10 Ed.13 - Go-live Date PTCNGDX3 (Sect.130 Pos.86)  *
.*       V11.05.03 12/02/2025  Davin            TSK 0954821                   *
.*                 Recompiled for HL7COMN - added components to PV1.3 for EMR *
.*       V11.05.02 31/01/2025  Davin            TSK 0956249                   *
.*                 Recompiled for HL7COMN - send adiag1 and/or adiag2 in DG1.4*
.*       V11.05.01 07/01/2025  Davin            TSK 0953715/0935149           *
.*                 Recompiled for HL7COMN - modified PV1.3.5 logic            *
.******************************************************************************
.*       V11.04.18 20.09.2024  DA Sarkies       TSK 0935149                   *
.*                 Recompiled for HL7COMN                                     *
.*       V11.04.17 04/09/2024  Davin            TSK 0951235                   *
.*                 Mods to GFAC0000, for messages triggered by IBAWEB21, to   *
.*                 determine hospital based on the visit location.            *
.*       V11.04.16 16/08/2024  Davin            TSK 0950179                   *
.*                 Recompiled for HL7COMN - stop VISNUMBR being sent in A37   *
.*       V11.04.15 30/07/2024  Davin            TSK 0939978                   *
.*                 Added new ZST segment to M02 messages (WZST0000/M02P0000)  *
.*       V11.04.14 19.07.2024  DA Sarkies       TSK 0936188                   *
.*                 Recomplied for HL7COMN, HL7CSVR, and HL7CLRVR              *
.*       V11.04.13 27/06/2024  Ebon Clements    TSK 0946218                   *
.*                 When processing A03 and A08 messages read the OP holding   *
.*                 table first as OP has a larger volume - RCIS1010 RCIS1040  *
.*       V11.04.12 04/06/2024  PJ Le Febour     TSK 0935317                   *
.*                 Recompiled for HL7COMN - EPSVIS00 remove test of PMHBADAT  *
.*       V11.04.11 31/05/2024  Davin            TSK 0941543                   *
.*                 Recompiled for HL7COMN - added ZXP.72-75 and NK1.20        *
.*       V11.04.10 21/05/2024  Bella Turco      TSK 0935314                   *
.*                 Include WAH Employee Number in STF.2 for HL7 M02 (WSTF0000)*
.*                 Include HPI-O in PRA.2 for HL7 M02 (GPRA0000)              *
.*       V11.04.09 13/05/2024  Davin            TSK 0939978                   *
.*                 Include HPI-I in STF.1 for HL7 M02 (WSTF0000)              *
.*       V11.04.08 18/04/2024  Davin            TSK 0931173                   *
.*                 Added note type 023 to ZNT segment (WZNT0000/APRCM000)     *
.*       V11.04.07 17.04.2024  DA Sarkies       TSK 0948140                   *
.*                 Recompiled for HL7COMN - Add option to display post Address*
.*                 from new contact                                           *
.*       V11.04.06 10/04/2024  Davin            TSK 0931586                   *
.*                 Added ZTR.29-ZTR.35 and ZTR.44 (WZTR0000)                  *
.*       V11.04.05 28/03/2024 Thanh T           TSK 0935314                   *
.*                 Recompiled for PMSQDRFD changes                            *
.*       V11.04.04 18/03/2024  Davin            TSK 0931586                   *
.*                 Added new ZTR segment to EMR A03,A04,A08 messages          *
.*                 (WZTR0000/A03E0000/A04E0000/A08E0000)                      *
.*       V11.04.03 06/02/2024  Davin            TSK 0936263                   *
.*                 Recompiled for HL7COMN - get pmpxutm5 from holding table   *
.*       V11.04.02 09/01/2024 Thanh T           TSK 0936263                   *
.*                 Added OPEN PMSQPXA1 index                                  *
.*       V11.04.01 11/12/2023 Thanh T           TSK 0935728                   *
.*                 Recompiled for OPRQUEFD changes                            *
.******************************************************************************
.*       V11.03.15 16.04.2024  DA Sarkies       TSK 0948140                   *
.*                 Recompiled for HL7COMN - Add option to display post Address*
.*                 from new contact                                           *
.*       V11.03.14 10/04/2024  Davin            TSK 0931586                   *
.*                 Added ZTR.29-ZTR.35 and ZTR.44 (WZTR0000)                  *
.*       V11.03.13 18/03/2024  Davin            TSK 0931586                   *
.*                 Added new ZTR segment to EMR A03,A04,A08 messages          *
.*                 (WZTR0000/A03E0000/A04E0000/A08E0000)                      * 
.*       V11.03.12 23/10/2023  Davin            TSK 0938787                   *
.*                 Strip blanks from ward value in ZBR.10/ZBR.16 (WZBR5000)   *
.*       V11.03.11 22/09/2023  Davin            TSK 0896442                   *
.*                 Added new routine A37P0000 for UnMerge UR (messnumb=50)    *
.*       V11.03.10 22/08/2023  Davin            TSK 0932521                   *
.*                 Added eReferral ID to PV1.50 for S12/S14/S15 messages      *
.*                 (TPV10000/REFVIS00)                                        *
.*       V11.03.09 03/08/2023  Davin            TSK 0907196                   *
.*                 Recompiled for HL7COMN - send time of birth in PID.7       *
.*       V11.03.08 28/07/2023  Ebon Clements    TSK 0935527                   *
.*                 Recompiled for OPRQUEFD - Theatre booking hospital         *
.*       V11.03.07 17/07/2023  Davin            TSK 0930147                   *
.*                 Recompiled for HL7COMN - modified ZXV.104                  *
.*       V11.03.06 29/03/2023  Jacob Jackson    TSK 0918711                   *
.*                 Recompiled for HL7COMN - default 'C' to PID.11.7           *
.*       V11.03.05 22/03/2023  Ebon Clements    TSK 0909393                   *
.*                 Added hospital to oprsesaf(1-6) and oprdetfa(1&5) indexes  *
.*       V11.03.04 07/03/2022  Davin            TSK 0929984                   *
.*                 Removed extra "^" from ZBR.2/5/6/14/27 (WZBR0000)          *
.*       V11.03.03 06/03/2023  Jacob Jackson    TSK 0918711                   *
.*                 Recompiled for HL7COMN - Add new PID.11.7 options          *
.*       V11.03.02 19/12/2022  Davin            TSK 0927978                   *
.*                 Changed STF.5 to always send either PMHCGNDR or ""         *
.*       V11.03.01 14/11/2022  Davin            TSK 0923862                   *
.*                 Recompiled for HL7COMN - Moved ZXV.105 / Added ZXV.106     *
.******************************************************************************
.*       V11.02.08 15/09/2022  Davin            TSK 0919110                   *
.*                 Added parameter options to send linebreaks in ZNT notes    *
.*                 (FORMZNT4/FORMZNT5/WZNT4500)                               *
.*       V11.02.07 28/07/2022  Davin            TSK 0918020                   *
.*                 Recompiled for HL7COMN - added ZXV.103/ZXV.104/ZXV.105     *
.*       V11.02.06 26/04/2022  Davin            TSK 0903453                   *
.*                 Recompiled for HL7COMN - added ZXP.70 and ZXP.71           *
.*       V11.02.05 30/03/2022  Davin            TSK 0917793                   *
.*                 Add ICD10 Ed.12 - Go-live Date PTCNGDX2 (Sect.128 Pos.231) *
.*       V11.02.04 09/03/2022  Davin            TSK 0908733                   *
.*                 Recompiled for HL7COMN - allow 6 lines of text in EMR DG1.4*
.*       V11.02.03 23/02/2022  Davin            TSK 0885553                   *
.*                 Moved routines to HL7COMN (required for HL7QUERY):         *
.*                 OPV10000/RPV10000/OUTVIS00/ODG10000/LVIN0000               *
.*                 EPV10000/EDG10000/GEVCD000/EMZXV000                        *
.*       V11.02.02 09/02/2022  Thanh T          TSK 0905641                   *
.*                 Recompiled as OUTHEDFD/OUTMA1FD changes                    *
.*       V11.02.01 02/02/2022  Davin            TSK 0907877                   *
.*                 Recompiled for HL7COMN - added ZXP.69 (Multiple Birth Type)*
.******************************************************************************
.*       V11.01.10 22/12/2021  Davin            TSK 0882972                   *
.*                 Recompiled for HL7COMN - send PID.11.7 as 'S' if pmpxsn18=1*
.*       V11.01.09 11/11/2021  Davin            TSK 0864505                   *
.*                 Recompiled for HL7COMN - send PID.9 based on ptcnsnty      *
.*       V11.01.08 14/10/2021  Davin            TSK 0912286                   *
.*                 Mods to send operator id in EVN.5 (WEVN8000)               *
.*                 13/10/2021  Davin            TSK 0911391                   *
.*                 Removed waits on error messages if DISPFLAG <> 1           *
.*                 Recompiled for HL7COMN - mods to read of pmsqpt in GLINK000*
.*       V11.01.07 17/08/2021  Davin            TSK 0910329                   *
.*                 Recompiled for HL7COMN - allow drg versions > 9.0 in DRG.1 *
.*       V11.01.06 07/07/2021  Davin            TSK 0903341                   *
.*                 Mods to broadcast hcp status in STF.4 (WSTF0000)           *
.*       V11.01.05 29/06/2021  Davin            TSK 0898004                   *
.*                 Recompiled for HL7COMN - use NK1.22 for send letter/sms    *
.*       V11.01.04 18/05/2021  Davin            TSK 0903091                   *
.*                 Recompiled for HL7COMN - mods to DG1 segment in A21/A22    *
.*       V11.01.03 14/05/2021  Davin            TSK 0905112                   *
.*                 Fixed population of RF1.3 description RTYPDESC (WRF11000)  *
.*       V11.01.02 19/04/2021  Davin            TSK 0900672                   *
.*                 Added ZXV.101:Triage Date (AHZXV000)                       *
.*                 Added ZXV.102:Referral-In Receipt Acknowledgement Date     *
.*                 Recompiled for HL7COMN - added ZXV.101/102 (WRZXV800)      *
.*       V11.01.01 12/04/2021  Davin            TSK 0901390                   *
.*                 Recompiled for HL7COMN - added ZXP.64-68 (PMI Usr Def Flds)*
.******************************************************************************
.*       V11.00.09 22/01/2021  Davin            TSK 0898347                   *
.*                 Reompiled for HL7COMN - removed hard-coded maps for PID.8  *
.*       V11.00.08 22/12/2020  Davin            TSK 0900789                   *
.*                 Stop looking for practice details if STF010/STF011/PRA002  *
.*                 exceed the defined limit of 1000 chars (GPRA9000)          *
.*       V11.00.07 25/11/2020  Thanh T          TSK 0878747                   *
.*                 Changed for HL7COMN as MLTBIR00 added for multiple         *
.*                 birth details                                              *
.*       V11.00.06 06/10/2020  Davin            TSK 0890602                   *
.*                 Recompiled for HL7COMN - check for MOSAIQ visit number     *
.*       V11.00.05 29/09/2020  Tracey Nguyen    TSK 0888703                   *
.*                 Recompiled for HL7COMN - Added ZXV.100 for Cat KP/PMVXUSAC * 
.*       V11.00.04 04/06/2020  Davin            TSK 0881876                   *
.*                 Recompiled for HL7COMN - changed ZXP.63 (Verified Address) *
.*       V11.00.03 22/04/2020  Davin            TSK 0881876                   *
.*                 Recompiled for HL7COMN - added ZXP.63 (Verified Address)   *
.*       V11.00.02 16/04/2020  Davin            TSK 0879163                   *
.*                 Recompiled for HL7COMN - populate PID.8 with Cat.G value   *
.*       V11.00.01 16/04/2020  Davin            TSK 0887136                   *
.*                 Recompiled for HL7COMN - added ZXP.61,ZXP.62,ccardtype AMB *
.******************************************************************************
.*       V10.15.05 16/12/2019  Davin            TSK 0882837                   *
.*                 Populate EVN.4 when sending A31 from HL7RECVR (wevn3000)   *
.*       V10.15.04 22/11/2019  Davin            TSK 0861253                   *
.*                 Recompiled for HL7COMN - send "" in blank TH ZXV fields    *
.*       V10.15.03 12/11/2019  Davin            TSK 0861253                   *
.*                 Recompiled for HL7COMN - added O/P telehealth fields to ZXV*
.*       V10.15.02 18/10/2019  Thanh T          TSK 0856646                   *
.*                 Added ZBR016 to ZBR029                                     *
.*       V10.15.01 07/10/2019  Ken Bell         TSK 0875392                   *
.*                 Recompiled for HL7COMN - Cancelled WC Claim in PV1 Segment *
.******************************************************************************
.*       V10.14.19 16.04.2024  DA Sarkies       TSK 0948140                   *
.*                 Recompiled for HL7COMN - Add option to display post Address*
.*                 from new contact                                           *
.*       V10.14.18 18/05/2021  Davin            TSK 0903091                   *
.*                 Recompiled for HL7COMN - mods to DG1 segment in A21/A22    *
.*       V10.14.17 16/12/2019  Davin            TSK 0882837                   *
.*                 Populate EVN.4 when sending A31 from HL7RECVR (wevn3000)   *
.*       V10.14.16 07/10/2019  Ken Bell         TSK 0875392                   *
.*                 Recompiled for HL7COMN - Cancelled WC Claim in PV1 Segment *
.*       V10.14.15 02/08/2019  Davin            TSK 0878929                   *
.*                 Recompiled for HL7COMN - max alert comment lines for ZAL.14*
.*       V10.14.14 03/07/2019  Davin            TSK 0876159                   *
.*                 Recompiled for HL7COMN - send W not F in DG1006 for ADT-A13*
.*       V10.14.13 23/05/2019  Jill Parkinson Task 0875286                    *
.*                 Added move zero to F1 for IBCNMHPI in case of spaces       *
.*       V10.14.12 15/05/2019  Steve Armstrong  TSK 0865461                   *
.*                 Recompiled for changes to HL7COMN                          *
.*       V10.14.11 01/05/2019  Steve Armstrong  TSK 0833548                   *
.*                 Modified to send all comments in ZNT, not just 4000 chars. *
.*       V10.14.10 01/05/2019  Davin            TSK 0833548                   *
.*                 Increased size of ZNT.4 from 1000 to 4000 chars            *
.*       V10.14.09 30/04/2019  Davin            TSK 0833548                   *
.*                 Mods to send 1 ZNT per note type (WZNT0000)                *
.*       V10.14.08 18/04/2019  Davin            TSK 0872267                   *
.*                 Call SPCHR000 to convert special characters in ZXV.38      *
.*       V10.14.07 15/04/2019  Davin            TSK 0854837                   *
.*                 Don't use clinic type to determine ZCM.1 value F/A/I/L     *
.*                 (read outma1af using index 1 not index 2 @ WZCM1150)       *
.*       V10.14.06 09/04/2019  Davin            TSK 0869574                   *
.*                 Added webPAS status codes to W/L RF1.1 (based on ptcnwlrs) *
.*                 Added ZXV segment to W/L (I12W0000/I13W0000/I14W0000)      *
.*                 Added Removal Reason (wmremove) to W/L ZXV segment (ZXV.47)*
.*       V10.14.05 02/04/2019  Davin            TSK 0854837                   *
.*                 Added (F)irst and (L)ast as possible values in ZCM.1 if    *
.*                 ptcncmsz=1 (WZCM1100).                                     *
.*                 Always send clinic desc in MFE.4 if ptcnocdz=1 (wmfe2000). *
.*                 02/04/2019  Steve Armstrong  TSK 0867709                   *
.*                 Fixed sending of PV2.9 and PV2.10 for A08X messages.       *
.*       V10.14.04 26/03/2019  Davin            TSK 0833548                   *
.*                 Added ZNT segment to send Emergency Note Types 014/015/016 *
.*                 based on ptcnznt4/ptcnznt5 (WZNT0000).                     *
.*                 ZNT segment will be sent in EMR A03,A04,A08 messages.      *
.*       V10.14.03 14/03/2019  Don Nguyen       TSK 0869412                   *
.*                 Added read of ICD10 Ed.11 Go-live Date parameter (PTCNGDX1)*
.*       V10.14.02 25/02/2019  Davin            TSK 0866465                   *
.*                 Mods to send mental health DG1 segments for ADT and I13    *
.*                 messages based on ptcnmdg1 (WRDG1600/MHDG1000)             *
.*                 18/02/2019  Ebon Clements    TSK 0829856                   *
.*                 Recompiled for GETEFDRG - Contract from effective date     *
.*       V10.14.01 11/02/2019  Jill Parkinson Task 0870293                    *
.*                 Recompiled for HL7COMN                                     *
.*       V10.13.11 09/01/2019  Ania P           TSK 0865039                   *
.*                 Changed population of MSH011                               *
.*       V10.13.10 13/11/2018  Steve Armstrong  TSK 0861628                   *
.*                 Recompiled for changes to HL7COMN (Sending NDIS Expiry     *
.*                 Date (ZXP.60).                                             *
.*                 13/11/2018  Steve Armstrong  TSK 0866156                   *
.*                 Recompiled for changes to HL7COMN.                         *
.*                 29/10/2018  Steve Armstrong  TSK 0863512                   *
.*                 Removed CALL to GMYHR000 for ED visits as this is not      *
.*                 required as yet.                                           *
.*                 29/10/2018  Steve Armstrong  TSK 0865791                   *
.*                 Recompiled for changes to HL7COMN                          *
.*       V10.13.09 23/10/2018  Steve Armstrong  TSK 0863512                   *
.*                 Recompiled for changes to HL7COMN, HL7CISVR & HL7CLRVR     *
.*                 (ZXV.88 & ZXV.89).                                         *
.*                 Added CALL to GMYHR000 from EMZXV000.                      *
.*                 Also added/fixed CALL to RDPMQVI1 for ED A04, A08, A11, A13*
.*                 and A44 messages and removed CALL to RDPMVX11 at GFAC4000  *
.*                 for ED messages.                                           *
.*       V10.13.08 03/10/2018  Jill Parkinson TSK 0861136                     *
.*                 Added convert special characters for SCH field 16          *
.*       V10.13.07 25/09/2018  Steve Armstrong  TSK 0850366                   *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.13.06 03/09/2018  Davin            TSK 0859667                   *
.*                 Added option '3' (ptcnadig) to send both cat.el description*
.*                 and free text description in DG1.4 (EDG12000).             *
.*                 Added '3' as a valid option for ptcnadig(ODG10000/WDG10000)*
.*       V10.13.05 16/08/2018  Steve Armstrong  TSK 0861701                   *
.*                 Recompiled for HL7COMN - check for HEXDASH                 *
.*       V10.13.04 14/08/2018  Davin            TSK 0857732                   *
.*                 Recompiled for HL7COMN - mods from UPI testing             *
.*                 13/08/2018  Ebon Clements    TSK 0850366                   *
.*                 Recompiled for HL7COMN - NK1.29 Legal Guardian             *
.*       V10.13.03 02/08/2018  Davin            TSK 0854259                   *
.*                 Added ZBR segment to A08 EMR messages (a08e0000)           *
.*       V10.13.02 24/07/2018  Steve Armstrong  TSK 0860696                   *
.*                 Recompiled for HL7COMN - New ZSD fields (4-9)              *
.*       V10.13.01 23/07/2018  Steve Armstrong  TSK 0860614                   *
.*                 Recompiled for changes to HL7COMN.                         *
.*                 Also, mods to ZBR.09 to pass comment lines through the     *
.*                 SPCHR000 routine to convert HL7 special characters.        *
.******************************************************************************
.*       V10.12.14 19/07/2018  Ebon Clements    TSK 0850366                   *
.*                 Recompiled for HL7COMN - NK1.29 Legal Guardian             *
.*       V10.12.13 27/06/2018  Steve Armstrong  TSK 0851661                   *
.*                 - Mods to send theatre case number in RGS.3 where OPCNAILS *
.*                   is turned on.                                            *
.*                 - Mods to send session details in AIL.6, AIL.9 and AIL.10  *
.*                   where OPCNAILS is turned on.                             *
.*                 - Mods to send Anaesthetist in additional AIP segment      *
.*                   where OPCNAIPS is turned on.                             *
.*       V10.12.12 26/06/2018  Steve Armstrong  TSK 0854115                   *
.*                 Modify MSH.5 to send "HealtheNet" for specific message     *
.*                 triggers where claim type has changed from public to       *
.*                 private or vice versa.                                     *
.*                 18/06/2018  Steve Armstrong  TSK 0854259                   *
.*                 Mods to send ZBR segment for I/P A08 messages,             *
.*                 I/P Admission (A01) and Transfer (A02) messages,           *
.*                 where bed request status changes.                          *
.*       V10.12.11 05/06/2018  Davin            TSK 0851377                   *
.*                 Added extra ZXV fields 59-87 for EMR messages (EMZXV000)   *
.*                 Added GEVCD000 to send EMR icd codes in DG1 (if emcnseic=1)*
.*       V10.12.10 16/05/2018  Steve Armstrong  TSK 0848853                   *
.*                 Mods to A08X3000 for I/P to continue checking for current  *
.*                 I/P's where PTCNA31Y parameter is turned on, as opposed to *
.*                 stopping the loop if the first record was not a current    *
.*                 I/P.                                                       *
.*       V10.12.09 07/05/2018  Steve Armstrong  TSK 0837181                   *
.*                 Mods to populate EVN.4 (Event Reason Code) for ADT^A02.    *
.*       V10.12.08 07/05/2018  Davin            TSK 0851197                   *
.*                 Recompiled for HL7COMN (changes to ZLS.10)                 *
.*                 02/03/2018  Steve Armstrong  TSK 0850854                   *
.*                 Included Expected Discharge Time (pmsworaf.pmwoedtm) in    *
.*                 PV2.9 (where populated) for I/P ADT^A08 messages.          *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.12.07 03/05/2018  Davin            TSK 0854305                   *
.*                 Added logging by segment if ptcnhl7l=2 (LOGM3500)          *
.*       V10.12.06 12/04/2018  Davin            TSK 0844685                   *
.*                 Recompiled for HL7COMN - added ZXP.59                      *
.*       V10.12.05 06/04/2018  Davin            TSK 0844685                   *
.*                 Recompiled for HL7COMN - added UPI id type to PID.3        *
.*       V10.12.04 15.02.2018  B.G.Ackland      TSK 0837357                   *
.*                 Use code description for ZEC-12 if Coded in Cat Br         *
.*       V10.12.03 13.02.2018  B.G.Ackland      TSK 0837357                   *
.*                 Remove Debug. Dont send ZEC if Claim Type Indicator Invalid*
.*       V10.12.02 05.02.2018  B.G.Ackland      TSK 0837357                   *
.*                 Added ZEC Read Control Parameter PTCNSZEC                  *
.*                 Added ZEC segment WRZEC000 to HL7COMN and pmsextaf/pateoraf*
.*       V10.12.01 23/01/2018  Davin            TSK 0851197                   *
.*                 Recompiled for changes to HL7COMN (ZLS010)                 *
.******************************************************************************
.*       V10.11.12 28/12/2017  Ania P           TSK 0850426                   *
.*                 Remove pipe characters from WMDESC                         *
.*       V10.11.11 01/12/2017  Steve Armstrong  TSK 0849196                   *
.*                 Mods to swap sequence of ZXP and ZAL segments in I12, I13  *
.*                 and I14 messages for W/L.                                  *
.*       V10.11.10 06/11/2017  Davin            TSK 0843633                   *
.*                 Added option to send cat.el description in DG1.4 (EDG13000)*
.*                 Added '2' as a valid option for ptcnadig(ODG10000/WDG10000)*
.*       V10.11.09 03/11/2017  Steve Armstrong  TSK 0847805                   *
.*                 Resequenced AL1 segment to be compliant with the HL7       *
.*                 standard, for the following messages:                      *
.*                 ADT^A02 (W/L)                                              *
.*                 ADT^A03 (A/H)                                              *
.*                 ADT^A05 (W/L)                                              *
.*                 ADT^A08 (A/H)                                              *
.*                 ADT^A08 (W/L)                                              *
.*                 ADT^A13 (A/H)                                              *
.*                 ADT^A38 (W/L)                                              *
.*       V10.11.08 10/10/2017  Davin            TSK 0845879                   *
.*                 Modify Waiting List PR1005 (for I12/I13/I14 messages)      *
.*                 Populate PR1005 with BKREEDAT/BKREATIM if WMDATE3 is blank *
.*       V10.11.07 27/09/2017  Steve Armstrong  TSK 0839724                   *
.*                 Recompiled for changes to HL7COMN (PV1.20/2)               *
.*       V10.11.06 18/09/2017  Davin            TSK 0840094                   *
.*                 Added DRG segment (WRDRG000) to A08A0000 and A03A0000      *
.*                 - Added GETDRG,GETEFDRG,PATDGWIO,PMSEDGIO                  *
.*                 - Recompiled for HL7COMN (added WRDRG000 routine)          *
.*       V10.11.05 18/09/2017  Thanh T.         TSK 0821710                   *
.*                 Audit Outpatient visit comments (ZXV.13)                   *
.*       V10.11.04 08/09/2017  Davin            TSK 0837617                   *
.*                 Populate PR1004 with WMDESC if PTCNHDPS=1 (NZ)             *
.*       V10.11.03 01/09/2017  Davin            TSK 0839666                   *
.*                 Added AL1 and ZAL segments to referral messages (A03L0000, *
.*                 A08L0000,A13L0000,A44L0000,I12L0000,I13L0000,I14L0000)     *
.*       V10.11.02 23/08/2017  Davin            TSK 0837617                   *
.*                 Added I12,I13,I14 message routines for Waiting List        *
.*                 (I12W0000/I13W0000/I14W0000) (messnumb=47,48,49)           *
.*       V10.11.01 21/07/2017  Davin            TSK 0838315                   *
.*                 Added ZLS segment WRZLS000 to HL7COMN (mehdlsaf/mehhlsaf)  *
.******************************************************************************
.*       V10.10.14 13/06/2017  Davin            TSK 0819675                   *
.*                 Recompiled for HL7COMN - Send up to 1000 chars in ZXV.13   *
.*       V10.10.13 08/06/2017  Davin            TSK 0838220                   *
.*                 Added A44L0000 routine for Referral Change UR (messnumb=46)*
.*       V10.10.12 07/06/2017  Davin            TSK 0838060                   *
.*                 Added ALCNRSCE/ALCNRSII to determine value in RF1001       *
.*       V10.10.11 07/06/2017  Davin            TSK 0838505                   *
.*                 Added NK1(WRNK1000) to referral messages A03/I12/I13/I14   *
.*                 (A03L0000/I12L0000/I13L0000/I14L0000)                      *
.*       V10.10.10 06/06/2017  Davin            TSK 0839601                   *
.*                 Recompiled for HL7COMN - Replace spaces with zeros (ZXV.22)*
.*       V10.10.09 02/06/2017  Davin            TSK 0819675                   *
.*                 Recompiled for HL7COMN - added O/P Service Delivery Mode   *
.*                                        - added O/P comments (ZXV.13)       *
.*       V10.10.08 31/05/2017  Davin            TSK 0835082                   *
.*                 Added Patient Classification to PV1.10 for EMR and OUT     *
.*       V10.10.07 05/05/2017  Steve Armstrong  TSK 0836111                   *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.10.06 19/04/2017  Steve Armstrong  TSK 0834336                   *
.*                 Recompiled for changes to HL7COMN.                         *
.*                 Added read on PTCNH7LN.                                    *
.*                 18/04/2017  Steve Armstrong TSK 0833052                    *
.*                 Mods to send triage status in ZXV.56 in A/H messages.      *
.*                 Also recompiled for changes to HL7COMN, HL7CISVR, HL7CLRVR,*
.*                 ALLQUEFD and ALLQUEIO.                                     *
.*       V10.10.05 04/04/2017  Steve Armstrong TSK 0835780                    *
.*                 Mods to get hospital from ALREHOSN for I14 messages in     *
.*                 GFAC0000.                                                  *
.*       V10.10.04 27/03/2017  Steve Armstrong TSK 0830704 & 0833314          *
.*                 Added population of ZXV.51 for Allied Health and Waiting   *
.*                 List messages.                                             *
.*                 Also added new routine (ENZXV000) for populating the ZXV   *
.*                 segment, specifically ZXV.51 for Health Purchaser (Cat HP).*
.*                 Recompiled for changes to HL7COMN, HL7CISVR and HL7CLRVR.  *
.*                 21/03/2017  Steve Armstrong TSK 0832066                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.10.03 17/03/2017  Davin           TSK 0833093     HDP 2017/2018  *
.*                 Add ICD10 Ed.10 - Go-live Date PTCNGDVX (Sect.110 Pos.85)  *
.*       V10.10.02 14/03/2017  Steve Armstrong TSK 0323865                    *
.*                 Recompiled for changes to HL7COMN                          *
.*       V10.10.01 06/03/2017  Steve Armstrong TSK 0829263                    *
.*                 Recompiled for changes to HL7COMN                          *
.******************************************************************************
.*       V10.09.05 06/02/2017  Davin           TSK 0829263                    *
.*                 Recompiled for changes to HL7COMN - added NDIS card type   *
.*       V10.09.04 27/01/2017  Steve Armstrong TSK 0831865                    *
.*                 Append zeros to PV1.45 for outpatient messages (OPV14800)  *
.*       V10.09.03 27/01/2017  Steve Armstrong TSK 0830055                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.09.02 04/01/2017  Steve Armstrong TSK 0830898                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.09.01 14/12/2016  Steve Armstrong TSK 0830898                    *
.*                 Recompiled for changes to HL7COMN.                         *
.******************************************************************************
.*       V10.08.05 04/10/2016  Steve Armstrong  TSK 0826429                   *
.*                 Mods to GFAC0000, for messages triggered by IBAMRT53, to   *
.*                 default back to old method of determining hospital.        *
.*       V10.08.04 02/08/2016  Steve Armstrong  TSK 0822962                   *
.*                 Mods to GFAC0000, for messages triggered by HL7RECVR, to   *
.*                 default back to old method of determining hospital.        *
.*       V10.08.03 30/06/2016  Jill Parkinson TSK 0821651                     *
.*                 Corrected GOTO GFAC0100 for changes below                  *
.*       V10.08.02 30/06/2016  Jill Parkinson TSK 0821651                     *
.*                 Added match for EXTRREFL,EXTRWAIT,EXTRBOOK and EXTRACTN    *
.*                 so hospital id is from holding tables not hl7cisaf         *
.*       V10.08.01 26/05/2016  Steve Armstrong CAR 0813737                    *
.*                 Recompiled for changes to HL7COMN for NZ Addresses.        *
.*                 Also added OPEN on NHIMASA2.                               *
.******************************************************************************
.*       V10.07.09 19/02/2016  Steve Armstrong CAR 0809786                    *
.*                 Recompiled for changes to HL7COMN for PID.3                *
.*       V10.07.08 09/02/2016  Steve Armstrong CAR 0809500                    *
.*                 Recompiled for changes to HL7COMN for ZXP.58               *
.*       V10.07.07 05/02/2016  Steve Armstrong CAR 0813285                    *
.*                 Recompiled for changes to HL7COMN for PID.15               *
.*       V10.07.06 22/01/2016  Davin           CAR 0310749                    *
.*                 Recompiled for changes to HL7COMN  for ZXV.31              *
.*       V10.07.05 07/01/2016  Davin           CAR 0310749                    *
.*                 Recompiled for changes to HL7CISVR for ZXV.31              *
.*       V10.07.04 29/12/2015  Steve Armstrong CAR 0322741                    *
.*                 Added read of PTCNGNDR and recompiled for changes to       *
.*                 HL7COMN.                                                   *
.*       V10.07.03 22/12/2015  Steve Armstrong CAR 0808394                    *
.*                 Added call to SPCHR000 for AIS003 (Component 2)            *
.*       V10.07.02 25/11/2015  Steve Armstrong CAR 0310749                    *
.*                 Recompiled for changes to HL7COMN for ZXV.31 and HL7CISVR  *
.*       V10.07.01 16/10/2015  Steve Armstrong CAR 322306                     *
.*                 Recompiled for HL7COMN - new value (2) for PTCNNNK1        *
.*                 and associated processing code.                            *
.******************************************************************************
.*       V10.06.07 28/07/2015  Davin           CAR 314914                     *
.*                 Recompiled for HL7COMN - broadcast ZXP.58 (PCEHR Flag)     *
.*       V10.06.06 07/07/2015  Jill Parkinson CAR 284924                      *
.*                 Changed EDG16000 to not send any DG1 message if EMVITXT2   *
.*                 is blank (previously sent a message with final but a blank *
.*                 diagnosis)                                                 *
.*       V10.06.05 05/06/2015  Davin           CAR 316872 NZNDHB              *
.*                 Recompiled for HL7COMN - send mailing address in PID.11(NZ)*
.*       V10.06.04 10/04/2015  Davin         CAR 309375                       *
.*                 Send otbbcitm not obatime in pv1.44 (opv14200)             *
.*                 Send PV2 in all outpatient messages that send PV1(wpv23000)*
.*       V10.06.03 31/03/2015  Peter Vela    CAR 298921                       *
.*                 Changed OTBBADCS to read from pmshcpaf                     *
.*       V10.06.02 17/03/2015  Davin         CAR 311669      HDP 2015/16      *
.*                 Add PTCNGDV9 for ICD10 Ed.9 Go-live Date (Sect.110 Pos.77) *
.*       V10.06.01 05/03/2015  Steve Armstrong  CAR 313933                    *
.*                 When checking for current visit to see if sending A08      *
.*                 instead of A31 and if there is no current I/P visit where  *
.*                 PTCNA31Y is turned on, then we don't want to check for     *
.*                 a future booking.                                          *
.******************************************************************************
.*       V10.05.11 31/12/2014  Davin            CAR 308386                    *
.*                 Mods to send A08 instead of A31 for current inpatients     *
.*                 (based on ptcna31y)                                        *
.*       V10.05.10 22/12/2014  Davin            CAR 308302                    *
.*                 Recompiled for HL7COMN - alternate alert code in ZAL.3     *
.*       V10.05.09 26/11/2014  Davin            CAR 309239                    *
.*                 Recompiled for HL7COMN                                     *
.*       V10.05.08 05/11/2014  Steve Armstrong  CAR 306617                    *
.*                 Recompiled for changes to HL7CISVR, HL7CLRVR and HL7COMN   *
.*       V10.05.07 22/10/2014  Steve Armstrong  CAR 306684                    *
.*                 Mods to GFAC0000 to populate hospital id where message is  *
.*                 triggered by CONVMAST                                      *
.*       V10.05.06 02/09/2014  Steve Armstrong  CAR 303880                    *
.*                 Recompiled for changes to HL7COMN                          *
.*       V10.05.05 28/08/2014  Steve Armstrong  CAR 305388                    *
.*                 Recompiled for changes to HL7COMN                          *
.*       V10.05.04 20/08/2014  Steve Armstrong  CAR 303880                    *
.*                 Recompiled for changes to HL7COMN                          *
.*       V10.05.03 13/08/2014  Steve Armstrong  CAR 295988                    *
.*                 Recompiled for changes to HL7COMN                          *
.*       V10.05.02 30/07/2014  Steve Armstrong  CAR 304139                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.05.01 22/07/2014  Davin            CAR 251384                    *
.*                 Recompiled for HL7COMN - added ZXV.50 (tier 2 code)        *
.******************************************************************************
.*       V10.04.10 12/06/2014  Steve Armstrong  CAR 301639                    *
.*                 Added call to TFILENAM in INIT0000 (replaces original call *
.*                 in HL7COMN).                                               *
.*       V10.04.09 28/05/2014  Jill Parkinson CAR 301639                      *
.*                 Added call to KILTMP00 before stopping                     *
.*                 30/05/2014  Steve Armstrong  CAR 270711                    *
.*                 Recompiled for changes to HL7COMN & HL7CISVR.              *
.*       V10.04.08 23/05/2014  Steve Armstrong  CAR 301458                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*                 Also added OPEN of IBAPOST1.                               *
.*       V10.04.07 28/04/2014  Steve Armstrong  CAR 261630                    *
.*                 Mods for non-port based tempfile use.                      *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.04.06 04/04/2014  Davin            CAR 292935                    *
.*                 Recompiled for changes to HL7COMN. (added ZXP hcp fields)  *
.*       V10.04.05 20/03/2014  Davin            CAR 298443                    *
.*                 Recompiled for changes to HL7COMN. (mods to PID.3)         *
.*       V10.04.04 12/03/2014  Davin            CAR 297562                    *
.*                 Added Referring Practice (ZXV.49) to ahzxv000              *
.*       V10.04.03 06/02/2014  Steve Armstrong  CAR 295312                    *
.*                 Mods to use remove TRAP around alleidaf OPEN and to        *
.*                 remove EIRDFLAG and its references (which is now redundant)*
.*       V10.04.02 06/02/2014  Steve Armstrong  CAR 294376                    *
.*                 Mods to use WTWMPDSC instead of WTWMSPAR when populating   *
.*                 PR1.4, now that this variable has been moved out of the    *
.*                 SPARE variable in V10.04. The variable WTWMPDSC has also   *
.*                 been added to WATQUEFD, so it doesn't need to read         *
.*                 wattr1af any more to get this value.                       *
.*       V10.04.01 09/12/2013  Steve Armstrong  CAR 292355                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*                 10/12/2013 Davin              CAR 295110                   *
.*                 Check for W/L last when determining A08 type (rcis1040)    *
.******************************************************************************
.*       V10.03.87 03/12/2013  Steve Armstrong  CAR 294775                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.03.86 29/11/2013  Davin            CAR 294649                    *
.*                 Only populate sending facility with user's hospital ID if  *
.*                 'using hospital security' parameter is on (ptcnuhsc)       *
.*                 29/11/2013  Davin            CAR 294691                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.03.85 25/11/2013  Steve Armstrong  CAR 294253                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.03.84 25/11/2013  Steve Armstrong  CAR 294259                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.03.83 25/11/2013  Steve Armstrong  CAR 293163                    *
.*                 Mods to not populate PV1.44 and PV1.45 for an A05 (O/P     *
.*                 booking) that was generated by HL7REGEN.                   *
.*       V10.03.82 25/11/2013  Steve Armstrong  CAR 294253                    *
.*                 Mods to save MSH.4 value (SAVMSH04) for use in Episoft EDI *
.*                 filename as MSH004 is cleared when processing the          *
.*                 acknowledgement message and prior to the "mv" of the EDI   *
.*                 file (MVFL0000).                                           *
.*       V10.03.81 25/11/2013  Steve Armstrong  CAR 294496                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.03.80 21/11/2013  Davin            CAR 275205                    *
.*                 Don't send A34 if old ur is a "T-" number (parameter based)*
.*       V10.03.79 21/11/2013  Steve Armstrong  CAR 294358                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.03.78 15/11/2013  Davin            CAR 275205                    *
.*                 Mods to set "T-" messages to rejected (parameter based)    *
.*                 15/11/2013  Davin            CAR 293628                    *
.*                 Fixed population of facility for polling servers (gfac0100)*
.*       V10.03.77 09/10/2013  Davin            CAR 285690                    *
.*                 Recompiled for HL7COMN - employment status in emr messages *
.*                 Ensure pmsqviaf is always read for EMR A08 (a08e0000)      *
.*       V10.03.76 04/10/2013  Davin            CAR 286923                    *
.*                 Added ZXV.32 (lvin0000) to I12/I13/I14 messages (ahzxv000) *
.*                 Added read of pmsvx1 for I12/I13/I14 messages              *
.*                 Added ZXV.44,45,46,47,48 to I12/I13/I14 messages (ahzxv000)*
.*       V10.03.75 03/10/2013  Steve Armstrong  CAR 291097                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.03.74 23/09/2013  Steve Armstrong  CAR 291807                    *
.*                 Mods to set VISNUMBR in GFBK0000 when a valid future O/P   *
.*                 booking is found for an Axx message.                       *
.*       V10.03.73 16/09/2013  Steve Armstrong  CAR 291613                    *
.*                 Mods to send operation description in AIS.3.2, even where  *
.*                 there is no provisional item code (for ACHA).              *
.*       V10.03.72 06/09/2013  Steve Armstrong  CAR 290941                    *
.*                 Mods to add doctor code to AIP.3.1 and theatre date/time   *
.*                 to SCH.11.4 for ACHA.                                      *
.*       V10.03.71 29/08/2013  Steve Armstrong  CAR 290824                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.03.70 22/08/2013  Davin            CAR 287764                    *
.*                 Recompiled for HL7COMN - populate ZSD.3 for A34 messages   *
.*       V10.03.69 19/08/2013  Davin            CAR 279179                    *
.*                 Added ZXV.42 & ZXV.43 to ZXV segment (INP and WL)          *
.*       V10.03.68 20/08/2013  Steve Armstrong  CAR 269144                    *
.*                 Mods to send RGOEXTRACT in MSH.5 for A31 message triggered *
.*                 by IBAADT65.                                               *
.*       V10.03.67 31/07/2013  Davin            CAR 289611                    *
.*                 Recompiled for HL7COMN                                     *
.*       V10.03.66 30/07/2013  Davin            CAR 287838                    *
.*                 Recompiled for HL7COMN                                     *
.*       V10.03.65 30/07/2013  Davin            CAR 289391                    *
.*                 Recompiled for HL7COMN                                     *
.*       V10.03.64 24/07/2013  Davin            CAR 287313                    *
.*                 Always use h7cihosp for sending facility if multi hospital *
.*       V10.03.63 22/07/2013  Davin            CAR 279183                    *
.*                 Get source of referral category from outsitaf (ahzxv030)   *
.*       V10.03.62 17/07/2013  Steve Armstrong  CAR 268961                    *
.*                 Mods to send Hospital Approval Number in MSH.4 for         *
.*                 messages triggered by HL7REGEN (using GFAC0000 routine).   *
.*                 Recompiled for changes to PMSQVIFD.                        *
.*       V10.03.61 15/07/2013  Davin            CAR 288550                    *
.*                 Recompiled for HL7COMN                                     *
.*       V10.03.60 10/07/2013  Davin            CAR 288036                    *
.*                 Recompiled for HL7COMN                                     *
.*       V10.03.59 03/07/2013  Davin            CAR 286423                    *
.*                 Only populate PV2008,PV2009 for WL if wmdate3 is not blank *
.*       V10.03.58 25/06/2013  Davin            CAR 279183                    *
.*                 Changed PV1003,PV1008,PV1009 fields for referrals (lpv1000)*
.*                 Added ZXV fields for I12/I13/I14 messages (ahzxv000)       *
.*                 30/06/2013  Davin           CAR 283202                     *
.*                 Added ZXP.22 & ZXP.23 to ZXP segment (wrzxp340/wrzxp350)   *
.*                 30/06/2013  Davin           CAR 279440                     *
.*                 Set Pending Location (PV1042) for A08(preadm)/A14/A27      *
.*       V10.03.57 23/06/2013  Steve Armstrong  CAR 268961                    *
.*                 Mods to populate EVN.6 in I/P messages from HL7REGEN       *
.*                 with pattranf.tdate and pattranf.ttime.                    *
.*       V10.03.56 19/06/2013  Steve Armstrong  CAR 287076                    *
.*                 Fixed population of PV1.10 for A/H messages (was using     *
.*                 APPEND instead of MOVE into PV1010.)                       *
.*       V10.03.55 16/04/2013  Davin            CAR 280425                    *
.*                 Mods for edi messaging (ibcnucis=2/3) & episoft interface  *
.*                 Added EDIO0000,MVFL0000,EPIS0000 and write to SEDIFILE     *
.*                 23/04/2013  Davin         CAR 284420      HDP 2013/14      *
.*                 Add PTCNGDV8 for ICD10 Ed.8 Go-live Date (Sect.110 Pos.69) *
.*       V10.03.54 24/05/2013  Steve Armstrong  CAR 284376                    *
.*                 Added read of PTCNGDV8                                     *
.*       V10.03.53 22/05/2013  Steve Armstrong  CAR 284376                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.03.52 17/05/2013  Steve Armstrong  CAR 284926                    *
.*                 Mods to set EVN.2 to the date/time the message was         *
.*                 triggered.                                                 *
.*       V10.03.51 09/05/2013  Steve Armstrong  CAR 285194                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*                 Updated the following routine CALL's:                      *
.*                  - WZXP0000 to WRZXP000                                    *
.*                  - WZXV0000 to WRZXV000                                    *
.*                  - WZSD0000 to WRZSD000                                    *
.*       V10.03.50 07/05/2013  Steve Armstrong  CAR 265565                    *
.*                 Mods to send ZAL segment instead of OBX segment for S12,   *
.*                 S13 & S14 messages where PTCNH7AL is turned on.            *
.*       V10.03.49 01/05/2013  Steve Armstrong  CAR 284376                    *
.*                 Modified GFAC7000 so that PMI messages use H7CIHOSP to     *
.*                 populate facility code.                                    *
.*       V10.03.48 24/04/2013  Steve Armstrong  CAR 284442                    *
.*                 Modified the GHOS0000 routine to try 3 different methods   *
.*                 get the hospital code (and hence sending facility) for     *
.*                 O/P messages.                                              *
.*       V10.03.47 02/04/2013  Davin            CAR 270648                    *
.*                 Added new ZSD segment for A28,A31,A34,A44 (wzsd0000)       *
.*       V10.03.46 22/03/2013  Steve Armstrong  CAR 281132                    *
.*                 Mods to populate wattr1af.wtmppdsc (from wtwmspar) into    *
.*                 PR1.4 for the primary procedure code in W/L messages.      *
.*                 14/03/2013  Steve Armstrong  CAR 276902                    *
.*                 Mods to load PURNO from H7CIURNO where the relevant visit  *
.*                 holding record is not found (RCIS7500), so that the        *
.*                 correct U/R is written to the log file when the message is *
.*                 put on hold.                                               *
.*       V10.03.45 13/03/2013  Davin            CAR 270806                    *
.*                 Changed format of ZCM007 & ZXV033 to HHMMSS                *
.*       V10.03.44 04/03/2013  Steve Armstrong  CAR 282040                    *
.*                 Recompiled for changes to HL7CISVR.                        *
.*       V10.03.43 15/02/2013  Davin            CAR 270806                    *
.*                 Added omastart to ZCM segment (ZCM007)                     *
.*                 Added obastrt to ZXV segment (ZXV033)                      *
.*       V10.03.42 15/02/2013  Steve Armstrong  CAR 281212                    *
.*                 Mods to only RESET PRA.2 & PRA.6 if data has been loaded   *
.*                 in GPRA0000.                                               *
.*       V10.03.41 11/02/2013  Steve Armstrong  CAR 279320                    *
.*                 Mods to send Death Notification (ZXP.3) as "" where the    *
.*                 the patient is not deceased (pcease not "1"), regardless   *
.*                 of whether or not it is populated.                         *
.*       V10.03.40 04/02/2013  Steve Armstrong  CAR 258177                    *
.*                 Mods to write to the log file on a segment basis instead   *
.*                 of writing the full message as a single field (where the   *
.*                 limit is only 4000 characters for the full message).       *
.*       V10.03.39 31/01/2013  Steve Armstrong  CAR 262292                    *
.*                 Mods to populate ZXV.32 (Visit based Interpreter Required) *
.*       V10.03.38 15/01/2013  Jill Parkinson   CAR 268131                    *
.*                 Added setting of ZXV.2 for ED Visits                       *
.*       V10.03.37 17/12/2012  Steve Armstrong  CAR 267173                    *
.*                 Mods to handle O/P discharge (A03) and cancel discharge    *
.*                 (A13).                                                     *
.*       V10.03.36 30/01/2013  Steve Armstrong CAR 278972                     *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.03.35 10/01/2013  Jill Parkinson CAR 278972                      *
.*                 Fixed incorrect GOTO RCIS7500 for A02 without WL records   *
.*       V10.03.34 14/12/2012  Steve Armstrong  CAR 263882                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.03.33 13/12/2012  Steve Armstrong  CAR 277972                    *
.*                 Fixed BRANCH on I/P A13 message for ZXV.15                 *
.*       V10.03.32 10/12/2012  Steve Armstrong  CAR 273853                    *
.*                 Added population of PV1.3 for ED messages.                 *
.*       V10.03.31 21/11/2012  Steve Armstrong  CAR 276750                    *
.*                 Mods to load PV1.45 using allrefaf.alredclo instead of     *
.*                 allencaf.alensdat for A/H messages.                        *
.*       V10.03.30 16/11/2012  Steve Armstrong  CAR 276432                    *
.*                 Mods to determine hospital (MSH.4) using the user code of  *
.*                 the person who made changes to O/P Clinic Master and/or    *
.*                 O/P Clinic Type (M01 messages).                            *
.*       V10.03.29 05/11/2012  Steve Armstrong  CAR 275858                    *
.*                 Recompiled for changes to HL7COMN                          *
.*       V10.03.28 22/10/2012  Steve Armstrong  CAR 275072                    *
.*                 Mods to RCIS0000 when matching message type to make code   *
.*                 clearer by removing nested IF statements.  Also added      *
.*                 parameter check around RDOTRQU1 for A08 to fix I*C error.  *
.*       V10.03.27 02/10/2012  Davin            CAR 265550                    *
.*                 Added ZXV.31 for extra diet codes (pmsnutaf)               *
.*       V10.03.26 09/07/2012  Steve Armstrong  CAR 256322                    *
.*                 Mods to send new segments in A08X messages:                *
.*                  - PR1 & GT1 for I/P based messages                        *
.*                  - DG1, GT1 & IN1 for ED & O/P  based messages             *
.*       V10.03.25 09/07/2012  Steve Armstrong  CAR 267354                    *
.*                 Mods to look for expected discharge date in pmsworaf when  *
.*                 setting PV2.9 for I/P messages, otherwise default back to  *
.*                 calculation using adate & astay.                           *
.*       V10.03.24 05/07/2012  Steve Armstrong  CAR 268679                    *
.*                 Mods to determine hospital code for A14, A08 and A27 for   *
.*                 a preadmission using pmvxmhos instead of tward & tbed      *
.*                 (given that the patient doesn't have a pattranf record at  *
.*                 preadmission).                                             *
.*       V10.03.23 03/07/2012  Steve Armstrong  CAR 268144                    *
.*                 Mods to determine hospital code for A38 O/P message when   *
.*                 populating MSH.4.                                          *
.*       V10.03.22 02/07/2012  Steve Armstrong  CAR 256322                    *
.*                 Mods to send ZAL in A08X message when parameter is turned  *
.*                 on.  Also added sending of ZXP and ZXV segments.           *
.*       V10.03.21 26/06/2012  Steve Armstrong  CAR 267469                    *
.*                 Added check for ASTAT = 3 prior to populating ZXV.28.      *
.*                 25/06/2012  Steve Armstrong  CAR 266261                    *
.*                 Mods to send W/L procedure details in PR1 segment of       *
.*                 I/P messages (A01,A02,A03,A08,A11,A12,A13,A14)             *
.*       V10.03.20 25/06/2012  Steve Armstrong  CAR 267811                    *
.*                 Mods to write more information to the log file when a      *
.*                 message is rejected due the U/R being on hold.             *
.*       V10.03.19 14/06/2012  Steve Armstrong  CAR 266838                    *
.*                 Fixed BRANCH on message type for A13 messages to be        *
.*                 GFAC1000 instead of GFAC9999.                              *
.*       V10.03.18 11/05/2012  Steve Armstrong  CAR 256322                    *
.*                 Recompiled for changes to HL7COMN - NZ ZAL alerts.         *
.*                 Added WARNSYS variable definitions.                        *
.*                 Mods to not check Allergy Category parameter when sending  *
.*                 all alerts using ZAL segment.                              *
.*       V10.03.17 09/05/2012  Steve Armstrong  CAR 263812                    *
.*                 Fixed setting of ZXP.18, component 1.                      *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.03.16 23/04/2012  Steve Armstrong  CAR 263812                    *
.*                 Mods to send Local GP Practice and Practice details in     *
.*                 ZXP.16 - ZXP.21.                                           *
.*                 Recompiled for changes to HL7CISVR & HL7CLRVR.             *
.*       V10.03.15 05/04/2012  Steve Armstrong  CAR 263261                    *
.*                 Recompiled for changes to HL7COMN                          *
.*       V10.03.14 27/03/2012  Steve Armstrong  CAR 262640                    *
.*                 Recompiled for changes to HL7COMN                          *
.*       V10.03.13 21/02/2012  Steve Armstrong  CAR 260482                    *
.*                 Recompiled for changes to HL7CISVR.                        *
.*                 17/02/2012  Steve Armstrong  CAR 259400                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*                 Removed FD's now declared in HL7CISVR.                     *
.*                 Changes to handle alias temp file.                         *
.*                 Moved OUTVIS00 from HL7COMN.                               *
.*                 06/03/2012  Davin            CAR 237251                    *
.*                 Don't populate PV1.45 for EMR if disch.date/time is blank  *
.*                 07/03/2012  Davin            CAR 260330                    *
.*                 Always send HCP fields in ZXP segment (ZXP.7 to ZXP.15)    *
.*                 Always send Inform GP flag in ZXV segment (ZXV.19)         *
.*                 Send Expected Discharge Date (PV2.9) and Planned Length of *
.*                 Stay (PV2.10) for ADT messages (APV20000).                 *
.*                 Added Discharge Destination to ZXV segment INP/EMR (ZXV.28)*
.*                 Added Transfer to Destn to ZXV segment INP/EMR (ZXV.29)    *
.*                 Added Return from Leave Date/Time to ZXV segment (ZXV.30)  *
.*       V10.03.12 28/02/2012  Steve Armstrong  CAR 257428                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.03.11 16/02/2012  Davin            CAR 256006                    *
.*                 New routine in OPV10000 for OP alternate visits (outvis00) *
.*       V10.03.10 16/02/2012  Steve Armstrong  CAR 259720                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.03.09 15/02/2012  Steve Armstrong  CAR 259720                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*                 13/02/2012  Steve Armstrong  CAR 259299                    *
.*                 Mods when validating response message id, to ignore        *
.*                 messages which don't match and to then wait for the next   *
.*                 response.                                                  *
.*                 10/02/2012  Davin            CAR 259708                    *
.*                 Added ptcneddd/emviur02 for emr doctor                     *
.*                 10/02/2012  Davin            CAR 256006                    *
.*                 Added a44w0000 routine for W/L Change UR (messnumb=42)     *
.*                 Added segments (DG1/PR1/ZXV) to W/L messages (A05/A08/A38) *
.*                 Mods to PV1 segment for W/L messages (bpv10000)            *
.*                 Mods to PV2 segment for W/L messages (bpv20000)            *
.*       V10.03.08 02/02/2012  Davin            CAR 257620                    *
.*                 Added new fields to PV1 segment for allied health messages *
.*                 (lpv10000)                                                 *
.*       V10.03.07 18/01/2012  Davin            CAR 252936                    *
.*                 Added M01 functionality (messnumb=41) for outpatient       *
.*                 clinic master / clinic type maintenance.                   *
.*                 Added ZCM and ZCT segments.                                *
.*                 Added outqmaaf and outqtyaf holding tables.                *
.*                 Added clinic hospital id to PV1003 component 4 (O/P only)  *
.*                 Added clinic desc to PV1003 component 9 (O/P only)         *
.*       V10.03.06 13/12/2011  Steve Armstrong  CAR 248529                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*                 05/12/2011  Steve Armstrong  CAR 257241                    *
.*                 Wrote additional message to log file when a U/R number     *
.*                 is first put on hold.                                      *
.*       V10.03.05 30/11/2011  Steve Armstrong  CAR 256454                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*                 29/11/2011  Jill Parkinson CAR 249362                      *
.*                 Changed alert key from key13 to key16                      *
.*       V10.03.04 25/11/2011  Steve Armstrong  CAR 256061                    *
.*                 Fixed ED messages to get transfer source code from         *
.*                 EMVITSRC instead of patdadaf.                              *
.*                 24/11/2011  Davin            CAR 244602                    *
.*                 Populate STF002 field with hcp national reg number         *
.*                 Added ZLH & ZLU segments for M02 messages                  *
.*       V10.03.03 22/11/2011  Davin            CAR 255129                    *
.*                 Added division/unit/team to ZXV segment (wzxv0800)         *
.*       V10.03.02 17/11/2011  Steve Armstrong  CAR 255522                    *
.*                 Recompiled for changes to HL7COMN & HL7CISVR.              *
.*       V10.03.01 28/10/2011  Steve Armstrong  CAR 249257                    *
.*                 Added PRFA details (patre1af) using GT1 segment.           *
.*                 07/11/2011  Steve Armstrong  CAR 254751                    *
.*                 Recompiled for changes to OPRQUEFD                         *
.******************************************************************************
.*       V10.02.16 27/10/2011  Steve Armstrong  CAR 251323                    *
.*                 Mods to populate PV1.50 with the original visit number     *
.*                 where this is a statistical admission.                     *
.*                 25/10/2011  Steve Armstrong  CAR 253469                    *
.*                 Fixed issue for O/P visit populating ZXV ED fields.  Added *
.*                 GOTO   WZXV5000 after processing O/P fields.               *
.*                 24/10/2011  Steve Armstrong  CAR 251665                    *
.*                 Recompiled for changes to HL7COMN (DG1.15).                *
.*       V10.02.15 17/10/2011  Steve Armstrong  CAR 252975                    *
.*                 Recompiled for changes to HL7COMN (PID.11).                *
.*                 13/10/2011  Steve Armstrong  CAR 252620                    *
.*                 Recompiled for changes to HL7COMN (PID.3).                 *
.*                 13/10/2011  Steve Armstrong  CAR 252132                    *
.*                 Recompiled for changes to HL7COMN (PID.11).                *
.*                 13/10/2011  Steve Armstrong  CAR 246036                    *
.*                 Mods to populate PV1.50 for W/L messages.                  *
.*                 11/10/2011  Steve Armstrong  CAR 251644                    *
.*                 Mods to populate fields ZXV020 through ZXV022.             *
.*                 Recompiled for changes to HL7CISVR and HL7CLRVR.           *
.*       V10.02.14 11/10/2011  Steve Armstrong  CAR 248650                    *
.*                 Recompiled for changes to HL7CISVR.                        *
.*       V10.02.13 03/10/2011  Steve Armstrong  CAR 246036                    *
.*                 Mods to handle new W/L messages (A05, A08 and A38).        *
.*       V10.02.12 03/10/2011  Steve Armstrong  CAR 251642                    *
.*                 Recompiled for changes to HL7CLRVR.                        *
.*       V10.02.11 30/09/2011  Steve Armstrong  CAR 251642                    *
.*                 Added Local GP details to ZXP segment (ZXP.7 to ZXP.15).   *
.*                 Also added Inform GP flag (ZXV.19).                        *
.*                 30/09/2011  Steve Armstrong  CAR 252181                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*                 29/09/2011  Steve Armstrong  CAR 251648                    *
.*                 Changed to use ACARE instead of ACLSS for ZXV.16.          *
.*                 29/09/2011  Steve Armstrong  CAR 251656                    *
.*                 Mods to send MH discharge status in ZXV.18.                *
.*                 29/09/2011  Steve Armstrong  CAR 246137                    *
.*                 Mods to send O/P Referral visit number in ZXV.17 for O/P   *
.*                 related messages.                                          *
.*       V10.02.10 28/09/2011  Steve Armstrong  CAR 251648                    *
.*                 Mods to send Care Type/Patient Type (Cat CC) in ZXV.16     *
.*                 as a CE type field, as well as what is currently sent in   *
.*                 PV1.18.                                                    *
.*                 28/09/2011  Steve Armstrong  CAR 251662                    *
.*                 Mods to send Source of Referral in ZXV.15 as a CE type     *
.*                 field, as well as what is currently sent in PV1.14.        *
.*       V10.02.09 27/09/2011  Steve Armstrong  CAR 251649                    *
.*                 Mods to send ED visit based fields in ZXV segment (ZXV.11  *
.*                 ZXV.12 and ZXV.13).                                        *
.*                 23/09/2011  Steve Armstrong  CAR 249584                    *
.*                 Mods to ED to send coded diagnosis in DG1 as well as free  *
.*                 text.                                                      *
.*                 Mods for ED and O/P to handle changes to GTICD000 for DG1  *
.*                 segment.                                                   *
.*                 Also removed ZXP007 through ZXP011 as they are no longer   *
.*                 required.                                                  *
.*                 Recompiled for changes to HL7COMN.                         *
.*                 23/09/2011  Steve Armstrong  CAR 251775                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*                 20/09/2011  Steve Armstrong  CAR 246137                    *
.*                 Completed changes for ZXV segment.                         *
.*                 20/09/2011  Steve Armstrong  CAR 248650                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.02.08 16/09/2011  Steve Armstrong  CAR 248886                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*                 Changed coded fields to reflect source of "webPAS" - PV1.8,*
.*                 PV1.7, PV1.9, PV1.17, MFI.1, MFE.4, PID.17, PID.28, AL1.3  *
.*                 and IN1.2                                                  *
.*                 15/09/2011  Steve Armstrong  CAR 251302                    *
.*                 Mods to population of MSH.3 & MSH.5                        *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.02.07 23/08/2011  Steve Armstrong  CAR 248539                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*       V10.02.06 15/08/2011  Steve Armstrong  CAR 249085                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*                 13/08/2011  Steve Armstrong  CAR 245199                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*                 13/08/2011  Steve Armstrong  CAR 249048                    *
.*                 Recompiled for changes to HL7CISVR.                        *
.*       V10.02.05 02/08/2011  Steve Armstrong                                *
.*                 - Added code to populate ZXP.4 (Privacy Indicator) - CAR   *
.*                   246137.                                                  *
.*                 - Added code to populate ZXP.7 to ZXP11 (Legal Status)     *
.*                   CAR 246137.                                              *
.*                 - Recompiled for changes to HL7COMN.                       *
.*                 - Recompiled for changes to HL7CISVR & HL7CLRVR (for       *
.*                   extended PID009 field.) CAR 248240                       *
.*                 - Fixed population of Medicare Expiry Date. CAR 248284     *
.*                 - Added code for new ZXV segment. CAR 246137               *
.*       V10.02.04 01/08/2011  Steve Armstrong  CAR 246029                    *
.*                 Mods to write new ZXP segment wherever a PID segment is    *
.*                 sent.                                                      *
.*       V10.02.03 27/07/2011  Steve Armstrong  CAR 246136                    *
.*                 Recompiled for changes to HL7COMN1.                        *
.*                 Mods to not populate DG1.2 for ED  & O/P related messages. *
.*                 Mods to send DG1 segments for O/P visits with diagnosis    *
.*                 codes/descriptions on outdiagf.                            *
.*       V10.02.02 16/07/2011  Steve Armstrong  CAR 245199                    *
.*                 Recompiled for changes to HL7COMN1.                        *
.*                 16/07/2011  Steve Armstrong  CAR 246042                    *
.*                 Mods to send patient admission number in PV1.50 for ED     *
.*                 patients that have been subsequently admitted as I/P's.    *
.*                 16/07/2011  Steve Armstrong  CAR 246035                    *
.*                 Mods to send discharge disposition (PV1.36) and            *
.*                 discharge date/time (PV1.45) for attended O/P's.           * .*       V10.02.01 22/06/2011  Steve Armstrong  CAR 240722                    *
.*                 Mods to use PMPXIHOS & PMPXLUBH to populate MSH.4 for      *
.*                 A28, A31 & A34 messages.                                   *
.*                 Recompiled for changes to HL7COMN (PATGSRFD)               *
.*                 06/06/2011  Steve Armstrong  CAR 240692                    *
.*                 Mods to check for alternate visit number (ALVIS000).       *
.*                 Mods to populate MSH.4 & MSH.5 differently for HL7REGEN    *
.*                 triggered messages.                                        *
.*                 06/06/2011  Steve Armstrong  CAR 240722                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*                 06/06/2011  Steve Armstrong  CAR 240107                    *
.*                 Mods to increase COUNTER from FORM2 to FORM3 to cater for  *
.*                 999 diagnoses in DG1 segment.                              *
.*                 28/02/2011  Steve Armstrong  CAR 240700                    *
.*                 Recompiled for changes to HL7COMN.                         *
.******************************************************************************
.*       V10.01.04 17/02/2011  Davin            CAR 230955                    *
.*                 Send PMI practice/prov number in PV1008 for emvirefd       *
.*       V10.01.03 14/02/2011  Davin            CAR 230955                    *
.*                 Send linked practice/prov number in PV1008 for otbbrfgp    *
.*       V10.01.02 21/01/2011  Davin            CAR 230955                    *
.*                 Use linked practice prov. number in PRA-06 if PTCNSLPD=1   *
.*       V10.01.01 04/01/2011  Davin            CAR 230955                    *
.*                 Added call to routine (lnkpr000) to source PV1008          *
.*                 (Referring Doctor) from practice link file (pmshcl).       *
.*                 Added read on parameter PTCNSLPD.                          *
.*                 16/12/2010  Steve Armstrong  CAR 235334                    *
.*                 Recompiled for changes to HL7COMN.                         *
.******************************************************************************
.*       V10.00.07 26/10/2010  Steve Armstrong  CAR 232384                    *
.*                 Recompiled for changes to HL7COMN.                         *
.*                 Added read on parameter PTCNHDPS.                          *
.*       V10.00.06 26/08/2010  Steve Armstrong  CAR 228937                    *
.*                 Added code to check outrquaf for A08 messages              *
.*                 20/07/2010  Davin            CAR 226162                    *
.*                 Added more logging of errors (errnumbr=2,8,9,11 & 15)      *
.*       V10.00.05 02/07/2010  Davin            CAR 225239                    *
.*                 Changed raopque1 to raotque1 in rcis0000 for A08s          *
.*       V10.00.04 08/06/2010  Steve Armstrong  CAR 223380                    *
.*                 Recompiled for changes to HL7COMN                          *
.*       V10.00.03 04/06/2010  Steve Armstrong  CAR 223380                    *
.*                 Recompiled for changes to HL7COMN                          *
.*       V10.00.02 29/04/2010  Steve Armstrong    CAR 220812                  *
.*                 Recompiled for changes to HL7COMN & HL7CISVR               *
.*       V10.00.01 06/04/2010  Steve Armstrong    CAR 200967                  *
.*                 Recompiled for changes to HL7COMN (ADPV1000 - PV1.52).     *
.*                 Mods to OPV20000 to populate PV2.12 with visit type.       *
.*                 24/08/2009  Steve Armstrong  CAR 135505                    *
.*                 Mods to handle allied health referral messages (I12, I13   *
.*                 & I14) and allied health encounter messages (A03 & A13).   *
.*                 29/01/2010  Steve Armstrong  CAR 212224                    *
.*                 Recompiled for changes to HL7CISVR and changed to use      *
.*                 HL7COMN routines for populating segments common with       *
.*                 HL7RECVR (PID, NK1, PV1, AL1, DG1 & IN1).                  *
.*                 14/12/2009  Steve Armstrong  CAR 208757                    *
.*                 Mods to send theatre unique id in SIU messages (in SCH.1)  *
.*        V9.12.05 12/03/2010  Steve Armstrong  CAR 217934                    *
.*                 Fixed content of AIS message to use AIS variables instead  *
.*        V9.12.04 29/09/2009  Steve Armstrong  CAR 206010                    *
.*                 Fixed content of AIS message to use AIS variables instead  *
.*                 of AIP variables.                                          *
.*        V9.12.03 12/08/2009  Steve Armstrong  CAR 203594                    *
.*                 Mods to ignore ERR segment validation if the message has   *
.*                 been accepted (AA - Acknowledge Accept).                   *
.*        V9.12.02 26/06/2009  Davin S          CAR 199542                    *
.*                 Only read outrqu (A05O0000 & A08O0000) if sending          *
.*                 outpatient referral messages                               *
.*        V9.12.01 21/05/2009  Steve Armstrong  CAR 197257                    *
.*                 Recompiled for changes to HL7CISVR.                        *
.******************************************************************************
.*        V9.11.04 19/03/2009  Steve Armstrong  CAR 192701                    *
.*                 Recompiled for changes to HL7CISVR.                        *
.*        V9.11.03 27/02/2009  Steve Armstrong  CAR 177234                    *
.*                 Mods to handle O/P referral messages (A05/A08) for CCDHB.  *
.*        V9.11.02 23/10/2008  Steve Armstrong  CAR 181500                    *
.*                 Mods to ignore concession card expiry date test if the     *
.*                 expiry date field is blank.                                *
.*                 16/10/2008  Davin            CAR 175736                    *
.*                 Mods to save set location status in PV1003 component 5     *
.*                 (based on parameter)                                       *
.*        V9.11.01 07/10/2008  Steve Armstrong  CAR 177925                    *
.*                 Mods to cater for concession card details on pmsccdaf for  *
.*                 DVA and Pension number.                                    *
.******************************************************************************
.*        V9.10.05 01/10/2008  Steve Armstrong  CAR 180120                    *
.*                 Mods to allow further information to be written to the     *
.*                 log file (eg timeouts, disconnection, connection, etc.).   *
.*                 19/09/2008  Steve Armstrong  CAR 147323                    *
.*                 Added code for multi-hospital (SAFERSleep).                *
.*                 12/09/2008  Davin            CAR 180198                    *
.*                 Changed to close socket before shutting down server        *
.*        V9.10.04 11/09/2008  Davin            CAR 180198                    *
.*                 Changed to shut down server if an error occurs due to      *
.*                 timeout or disconnection, rather than try and reconnect    *
.*                 within the program (i.e. changed to goto rcis9999 not      *
.*                 rcis0000).                                                 *
.*        V9.10.03 26/08/2008  Steve Armstrong  CAR 147323                    *
.*                 Added code to handle broadcast of S12, S14 & S15 messages  *
.*                 25/08/2008  Steve Armstrong  CAR 174372                    *
.*                 Added PTCNGDV6 (ICD.10 ED 6, Go-live date) for DG1 segment *
.*                 22/07/2008  Steve Armstrong  CAR 174372                    *
.*                 Mods to only validate second component of MSH-09 if        *
.*                 present in ACK message.                                    *
.*                 10/07/2008  Davin             CAR 174372                   *
.*                 Changed string length to be FORM 4 instead of FORM 3 in    *
.*                 debug mode (dispflag=1)                                    *
.*        V9.10.02 21/05/2008  Ebon Clements     CAR 168218                   *
.*                 Fixed outpatient check in time format in PV1-44            *
.*        V9.10.01 13/05/2008  Steve Armstrong   CAR 166330                   *
.*                 Increased STRNGLEN from FORM 3 to FORM 4                   *
.******************************************************************************
.*        V9.09.06 04/03/2008  Steve Armstrong   CAR 163197                   *
.*                 Mods to fix logging of the broadcast message in background *
.*                 mode.                                                      *
.*        V9.09.05 08/02/2007  Steve Armstrong   CAR 161130                   *
.*                 Fixed check for A14 messages when converting to A05.       *
.*        V9.09.04 03/12/2007  Steve Armstrong   CAR 156492                   *
.*                 Mods to log acknowledgement validation errors.             *
.*        V9.09.03 04/10/2007  Steve Armstrong   CAR 145650                   *
.*                 Mods to change determination of visit type from using the  *
.*                 program prefix to using the message number.                *
.*        V9.09.02 12/09/2007  Steve Armstrong   CAR 148394                   *
.*                 Added new parameters:                                      *
.*                 PTCNH7AD - Send attending doctor in PV1-07 instead of      *
.*                            PV1-09                                          *
.*                 PTCNH7A5 - Send A05 for Pre-admission instead of A14       *
.*        V9.09.01 20/07/2007  Steve Armstrong   CAR 145650                   *
.*                 Added read of patcodes for setting of PV1-20 for O/P and   *
.*                 Emergency.                                                 *
.******************************************************************************
.*        V9.08.15 10/05/2007  Steve Armstrong   CAR 135721                   *
.*                 CCDHB changes.                                             *
.*                 Mods to add patient mobile phone & email address to PID-13.*
.*                 Mods to PID-15 for interpreter required.                   *
.*                 Mods to add ACC flag/claim number to PV1-20.               *
.*                 Mods to add Health Specialty to PV1-10.                    *
.*                 09/05/2007  Steve Armstrong   CAR 138469                   *
.*                 Mods to add practice - address, phone number, fax number   *
.*                 and email address to STF segment for M02.                  *
.*        V9.08.14 22/03/2007  Steve Armstrong   CAR 130400                   *
.*                 Mods to revert to sending A31 if Axx has no associated     *
.*                 visit.                                                     *
.*        V9.08.13 06/02/2007  Steve Armstrong   CAR 129078                   *
.*                 Added check for latest O/P booking where there are no      *
.*                 patvisaf records for an alternative A08 message.           *
.*        V9.08.12 07/12/2006  Steve Armstrong   CAR 127482                   *
.*                 Mods to change population of PV1-06 for alternate A08 (Axx)*
.*                 message to use pattranf instead of pmsqviaf.               *
.*        V9.08.11 28/11/2006  Steve Armstrong   CAR 126191                   *
.*                 Mods to use PTCNHL7L for log file.                         *
.*                 Mods to use PTCNCLCD for sending claim code instead of     *
.*                 indicator in PV1-20.                                       *
.*                 Mods to use PTCNADIG for sending free text                 *
.*                 admitting/presenting diagnosis in DG1 segment.             *
.*                 Mods to use PTCNNNK1 for sending non-compliant NK1 segment.*
.*                 16/11/2006  Steve Armstrong   CAR 125042                   *
.*                 Mods to not send NK1 segment in an A28 message if there    *
.*                 is no next of kin data at registration (only where         *
.*                 Singapore check digit is being sent).                      *
.*                 Mods to send "ISO" in PID-03, Component 3 (for HL7         *
.*                 Compliance), where the Singapore check digit is being sent.*
.*                 Mods to send "" in NK1-03, NK1-04 & NK1-32 (for HL7        *
.*                 Compliance), where there is no data in the fields and where*
.*                 the Singapore check digit is being sent.                   *
.*        V9.08.10 13/11/2006  Steve Armstrong   CAR 124526                   *
.*                 Mods to send <code>^<description> for NK1-03 instead of    *
.*                 ^<code>                                                    *
.*        V9.08.09 10/11/2006  Steve Armstrong   CAR 124393                   *
.*                 Mods to accept an ERR segment in the response message      *
.*        V9.08.08 09/11/2006  Steve Armstrong   CAR 122944                   *
.*                 Fixed read on outcliaf to use OBACLIN instead of OBACTYP.  *
.*        V9.08.07 01/11/2006  Steve Armstrong   CAR 109687                   *
.*                 Added read of PTCNCKDG to determine if check digit is to   *
.*                 be sent in PID-03 as component 2 of the U/R number.        *
.*        V9.08.06 27/10/2006  Steve Armstrong   CAR 122755                   *
.*                 Mods to remove excess EVN fields for O/P non-DNA messages. *
.*        V9.08.05 18/10/2006  Steve Armstrong   CAR 120476                   *
.*                 Fixed A08X routine to read pmsvx1af and patdschf details   *
.*                 prior to formatting PV1 fields for I/P visit.              *
.*        V9.08.04 13/10/2006  Steve Armstrong   CAR 113730                   *
.*                 Added DG1 segment to A02 message for CCDHB.                *
.*        V9.08.03 11/10/2006  Steve Armstrong   CAR 113730                   *
.*                 Mods to include the DG1 segment in all O/P end ED messages *
.*        V9.08.02 28/09/2006  Steve Armstrong   CAR 120263                   *
.*                 Changed check on special characters (SPCHR000) to use      *
.*                 "\" instead of EXITCHAR when checking for backslash.       *
.*        V9.08.01 22/09/2006  Steve Armstrong   CAR 119971                   *
.*                 Mods to set PV1-39 for Emergency messages.                 *
.******************************************************************************
.*        V9.07.03 08/09/2006  Steve Armstrong   CAR 107632                   *
.*                 Mods to use PTCNCATA to determine alert category (H1-H9)   *
.*                 to use for allergies.                                      *
.*                 Mods to set AL1-06 and AL1-02.                             *
.*        V9.07.02 17/08/2006  Steve Armstrong   CAR 115765                   *
.*                 Mods to set PID-26 (Citizenship) for NZ sites.             *
.*        V9.07.01 27/07/2006  Steve Armstrong   CAR 113721                   *
.*                 Mods to use EMVIREFD instead of EMVIREFG for PV1-08.       *
.*                 26/06/2006  Steve Armstrong   CAR 108889                   *
.*                 Added setting of VISNUMBR for A04O0000.                    *
.*                 Fixed setting of PID-15 to use HDP Equivalent instead of   *
.*                 code (Cat LA).                                             *
.******************************************************************************
.*        V9.06.04 13/06/2006  Steve Armstrong   CAR 108522                   *
.*                 Fixed population of NK1-03 when blank to be ^"" instead of *
.*                 "".                                                        *
.*                 13/06/2006  Steve Armstrong   CAR 108490                   *
.*                 Fixed PV1-36 when populating with Cat EW, to check if      *
.*                 EMVIWAIT is blank.                                         *
.*        V9.06.03 25/05/2006  Steve Armstrong   CAR 106531                   *
.*                 Fixed PV1-44 time.                                         *
.*                 Change to O/P messages to send a minimum of 39 fields for  *
.*                 each message instead of 20.                                *
.*                 Change to delete Axx message where patient has no visits.  *
.*                 Changed PV1-18 for O/P messages to be hardcoded to "O".    *
.*                 Change to populate PV1-08 for NZ O/P messages.             *
.*                 Change to populate PV1-44 with check-in time instead of    *
.*                 booking time for NZ O/P messages.                          *
.*        V9.06.02 09/05/2006  Mike Laming     CAR 101974                     *
.*                 Added 2006 ICD10 Ed5 Go-live Date PTCNGDV5                 *
.*                 09/05/2006  Steve Armstrong  CAR 104922                    *
.*                 Recompiled for changes to HL7URHFD                         *
.*        V9.06.01 08/05/2006  Steve Armstrong   CAR 103759                   *
.*                 Recompiled for changes to OUTQUEFD                         *
.******************************************************************************
.*        V9.05.03 06/04/2006  Steve Armstrong   CAR 99475 & 81335            *
.*                 Changed PV1-07/08/09/17 to send all identifiers for a      *
.*                 doctor (code, provider 1-5 and prescriber).                *
.*                 Added Doctor Maintenance Messages.                         *
.*                 Moved HL7 field definitions for HL7CISVR.                  *
.*                 Mods for EHR-03 CCDHB HL7 Message changes:                 *
.*                 - PID-08 Gender "O" to map to "U" instead.                 *
.*                 - PID-16 Added "P", "F" & "C" and changed "A" to "X" for   *
.*                   NZ sites.                                                *
.*                 - Added O/P clinic location code (Cat CT) to PV1-39.       *
.*        V9.05.02 27/03/2006  Steve Armstrong   CAR 99824                    *
.*                 Modified PID-13/14 & NK1-05/06 to populate as |^^^^^^^^""| *
.*                 instead of |""| where the field is blank.                  *
.*        V9.05.01 08/03/2006  Steve Armstrong   CAR 99223                    *
.*                 Mods for IN1 segment for O/P messages                      *
.*        V9.05.B03 03/03/2006  Steve Armstrong   CAR 88829                   *
.*                 Recompiled for changes to OUTQUEFD                         *
.*        V9.05.B02 23/02/2006  Steve Armstrong   CAR 93425                   *
.*                 Mods to populate EVN-04 for O/P DNA.                       *
.*                 Mods for translation of A31 to Axx if parameter set.       *
.*                 Mods for population of PID-12 & PV1-17 for NZ sites.       *
.*                 Mods to send DG1 in A01, A11 and A14 and added "A" type    *
.*                 diagnosis records using ADIAG1/2.                          *
.*                  07/12/2005  Steve Armstrong   CAR 88829                   *
.*                 Mods for Emergency & O/P messaging.                        *
.******************************************************************************
.*        V9.04.04 07/12/2005  Steve Armstrong   CAR 87942                    *
.*                 Mods to use tward/tbed to populate PV1-03.                 *
.*                 Mods to use tadoct to populate PV1-09.                     *
.*                 Mods to use pmvxrhc1 to populate PV1-08.                   *
.*                 Added check on ptcndsci = 6 for PV1-02.                    *
.*        V9.04.03 17/11/2005  Steve Armstrong   CAR 86148                    *
.*                 Mods to use nhimasaf name fields instead of patma1af to    *
.*                 populate PID-05.                                           *
.*                 Added display of message success in interactive mode.      *
.*                 Fixed ERORFLAG check to trigger error message and use      *
.*                 no. of retries rather than sending message indefinitely.   *
.*        V9.04.02 12/10/2005  Steve Armstrong   CAR 64087                    *
.*                 Changed PID-10 to source data from pmpxabrg (aboriginality)*
.*                 Added NZ customisation for PID-10 and PID-22 (based on     *
.*                 PTCNNHII).                                                 *
.*                 Added population of PID-15 (Primary Language).             *
.*                 Added AL1 segment.                                         *
.*                 Fixed Address fields to ensure all appropriate "^" are     *
.*                 written prior to "^^C".                                    *
.*                 Fixed response error messages.                             *
.*        V9.04.01 20/09/2005  Steve Armstrong   CAR 76979                    *
.*                 Extended length of MRG001 to cater for Hospital Id.        *
.******************************************************************************
.
          INC       STD002FD
.
          INC       ALLAEFFD/INC
          INC       ALLDIAFD/INC
          INC       ALLEIDFD/INC
          INC       ALLERCFD/INC
          INC       ALLQUEFD/INC
          INC       ALLSERFD/INC
          INC       BOKRC1FD/INC
          INC       COMERHFD/INC
          INC       DISMASFD/INC
          INC       DISPTLFD/INC
          INC       EMRLOCFD/INC
          INC       EMRSITFD/INC
          INC       EMRQUEFD/INC
          INC       HL7CISVR/INC
          INC       HL7URHFD/INC
          INC       MEHLERFD/INC
          INC       MLTHCPFD/INC
          INC       OPRCLIFD/INC
          INC       OPRNURFD/INC
          INC       OPRQUEFD/INC
          INC       OPRSESFD/INC
          INC       OUTCANFD/INC
          INC       OUTCTYFD/INC
          INC       OUTDIAFD/INC
          INC       OUTHEDFD/INC
          INC       OUTMA1FD/INC
          INC       OUTQMAFD/INC
          INC       OUTQTYFD/INC
          INC       OUTQUEFD/INC
          INC       OUTRF1FD/INC
          INC       OUTRQUFD/INC
          INC       OUTRSHFD/INC
          INC       OUTSESFD/INC
          INC       PATCFAFD/INC
          INC       PATFX1FD/INC
.
          INC       PATATRFD/INC
          INC       PATATRTD/INC 
.
          INC       PMSQDRFD/INC
          INC       PMSQVIFD/INC
          INC       PMSTMDFD/INC
          INC       PMSWORFD/INC
          INC       TFILEVAR/INC
          INC       VISCODFD/INC
          INC       VISXDCFD/INC
          INC       COMPARFD/INC
          INC       IBAPOLFD/INC
          INC       WATPROFD/INC
          INC       WATQUEFD/INC
          INC       WEBCONFD/INC
.
.
. LOCAL VARIABLES
. ---------------
A01AFAIL  FORM      8             * message counters
A01ASENT  FORM      8
A01ARJCT  FORM      8
A02AFAIL  FORM      8
A02ASENT  FORM      8
A02ARJCT  FORM      8
A02WFAIL  FORM      8
A02WSENT  FORM      8
A02WRJCT  FORM      8
A03AFAIL  FORM      8
A03ASENT  FORM      8
A03ARJCT  FORM      8
A03EFAIL  FORM      8
A03ESENT  FORM      8
A03ERJCT  FORM      8
A03OFAIL  FORM      8
A03OSENT  FORM      8
A03ORJCT  FORM      8
A03LFAIL  FORM      8
A03LSENT  FORM      8
A03LRJCT  FORM      8
A04EFAIL  FORM      8
A04ESENT  FORM      8
A04ERJCT  FORM      8
A04OFAIL  FORM      8
A04OSENT  FORM      8
A04ORJCT  FORM      8
A05OFAIL  FORM      8
A05OSENT  FORM      8
A05ORJCT  FORM      8
A05WFAIL  FORM      8
A05WSENT  FORM      8
A05WRJCT  FORM      8
A08AFAIL  FORM      8
A08ASENT  FORM      8
A08ARJCT  FORM      8
A08EFAIL  FORM      8
A08ESENT  FORM      8
A08ERJCT  FORM      8
A08LFAIL  FORM      8
A08LSENT  FORM      8
A08LRJCT  FORM      8
A08OFAIL  FORM      8
A08OSENT  FORM      8
A08ORJCT  FORM      8
A08WFAIL  FORM      8
A08WSENT  FORM      8
A08WRJCT  FORM      8
A11AFAIL  FORM      8
A11ASENT  FORM      8
A11ARJCT  FORM      8
A11EFAIL  FORM      8
A11ESENT  FORM      8
A11ERJCT  FORM      8
A11OFAIL  FORM      8
A11OSENT  FORM      8
A11ORJCT  FORM      8
A12AFAIL  FORM      8
A12ASENT  FORM      8
A12ARJCT  FORM      8
A13AFAIL  FORM      8
A13ASENT  FORM      8
A13ARJCT  FORM      8
A13EFAIL  FORM      8
A13ESENT  FORM      8
A13ERJCT  FORM      8
A13OFAIL  FORM      8
A13OSENT  FORM      8
A13ORJCT  FORM      8
A13LFAIL  FORM      8
A13LSENT  FORM      8
A13LRJCT  FORM      8
A14AFAIL  FORM      8
A14ASENT  FORM      8
A14ARJCT  FORM      8
A21AFAIL  FORM      8
A21ASENT  FORM      8
A21ARJCT  FORM      8
A22AFAIL  FORM      8
A22ASENT  FORM      8
A22ARJCT  FORM      8
A27AFAIL  FORM      8
A27ASENT  FORM      8
A27ARJCT  FORM      8
A28PFAIL  FORM      8
A28PSENT  FORM      8
A28PRJCT  FORM      8
A31PFAIL  FORM      8
A31PSENT  FORM      8
A31PRJCT  FORM      8
A34PFAIL  FORM      8
A34PSENT  FORM      8
A34PRJCT  FORM      8
A37PFAIL  FORM      8
A37PSENT  FORM      8
A37PRJCT  FORM      8
A38OFAIL  FORM      8
A38OSENT  FORM      8
A38ORJCT  FORM      8
A38WFAIL  FORM      8
A38WSENT  FORM      8
A38WRJCT  FORM      8
A44AFAIL  FORM      8
A44ASENT  FORM      8
A44ARJCT  FORM      8
A44EFAIL  FORM      8
A44ESENT  FORM      8
A44ERJCT  FORM      8
A44OFAIL  FORM      8
A44OSENT  FORM      8
A44ORJCT  FORM      8
A44LFAIL  FORM      8
A44LSENT  FORM      8
A44LRJCT  FORM      8
A44WFAIL  FORM      8
A44WSENT  FORM      8
A44WRJCT  FORM      8
.
BOOKDTTM  DIM       13
.
CDDRCTRY  DIM       80
CONNFLAG  FORM      1             * connect flag
.                                    0 = connection failed - first time
.                                    1 = connection failed - not first time
COUNTR    FORM      2
CSEC      DIM       2
CURRDTTM  DIM       16
.
DATETIME  DIM       14
.
DIM4      DIM       4
DIM8      DIM       8
DIM9      DIM       9
DIM50     DIM       50
DISPFLAG  FORM      1             * display to screen flag
.                                     0 = don't display messages to screen
.                                     1 = display messages to screen (debug)
DPATHVAR  DIM       100
DVCOLOUR  DIM       3
.
EDIMFLAG  FORM      1             * edi send email flag
EMRVDOCT  DIM       10
ERORFLAG  FORM      1             * error flag
.                                     0 = no errors occured
.                                     1 = errors occured with AA
ERORTEXT  DIM       50
ERRMESSG  DIM       50
ERRNUMBR  FORM      2             * error number
.                                     1 = zero U/R number
.                                     2 = negative acknowledgement received
.                                     3 = timeout writing to socket
.                                     4 = timeout waiting for response
.                                     5 = error retrieving pmsqptaf data
.                                     6 = error retrieving pmsqviaf data
.                                     7 = error retrieving outqueaf data
.                                     8 = message id in reply does not match
.                                     9 = message type is not valid
.                                    10 = error retrieving emrqueaf data
.                                    11 = invalid acknowledgement received
.                                    12 = error retrieving pmspdraf data
.                                    13 = error retrieving oprqueaf data
.                                    14 = error retrieving allqueaf data
.                                    15 = visit holding record not found
.                                    16 = error retrieving watqueaf data
.                                    17 = error retrieving outqma/qty data
.                                    18 = temporary U/R number
EXIT2     FORM      2
.
FIELDNO   FORM      3             * segment field counter for ACK message
FNAME     DIM       8
FULLPATH  DIM       100
.
HOURTM    DIM       2
.
I12RFAIL  FORM      8
I12RRJCT  FORM      8
I12RSENT  FORM      8
I13RFAIL  FORM      8
I13RRJCT  FORM      8
I13RSENT  FORM      8
I14RFAIL  FORM      8
I14RRJCT  FORM      8
I14RSENT  FORM      8
.
I12WFAIL  FORM      8
I12WRJCT  FORM      8
I12WSENT  FORM      8
I13WFAIL  FORM      8
I13WRJCT  FORM      8
I13WSENT  FORM      8
I14WFAIL  FORM      8
I14WRJCT  FORM      8
I14WSENT  FORM      8
.
LINKDHCG  DIM       10            * practice
LINKDHCP  DIM       10            * hcp
MTCHFLAG  FORM      1             * match flag for message id
.                                     0 = match
.                                     1 = no match
MESSAGID  DIM       20
MESSTYPE  DIM       3             * message type (ie A01)
.
MINTIME   DIM       2
.
M01OFAIL  FORM      8
M01OSENT  FORM      8
M01ORJCT  FORM      8
MFIMTYPE  DIM       3             * MFI identifier type
MFIMDESC  DIM       20            * MFI identifier desc
M02PFAIL  FORM      8
M02PSENT  FORM      8
M02PRJCT  FORM      8
.
NOTETYPE  DIM       3
NUMRETRY  FORM      3             * retry counter
.
POSCOUNT  FORM      2
PRTYDESC  DIM       11
PR1COUNT  FORM      3
.
RECVMESS  DIM       999
RESPTOUT  FORM      2             * response timeout
RETRYINT  FORM      2             * retry interval (secs)
RETRYNUM  FORM      3             * number of retries
RTYPDESC  DIM       13
.
SAVEBDAT  DIM       8             * saved birth date
SAVEDATE  DIM       8             * saved log filename date
SAVEDTTM  DIM       16            * saved O/P booking date/time
SAVEHOSP  DIM       3             * saved hospital code
SAVEPATH  DIM       100           * saved path for edi filename
SAVEPRFX  DIM       3             * saved O/P file prefix
SAVEVIST  DIM       8             * saved O/P visit number
SAVMESID  DIM       20
SAVMSH04  DIM       10
SAVMTYPE  DIM       3
SAVTXWRD  DIM       3
.
SECTIME   DIM       2
SEDIFLAG  FORM      1             * write to EDI file (0=no/1=yes)
SEGMENT   DIM       3             * 3 character HL7 segment code
SEGNUMBR  FORM      2             * segment number
.                                         1 = MSH
.                                         2 = MSA
SIDCOUNT  FORM      3
SNDCOUNT  FORM      3
STATDESC  DIM       8
STATDSC2  DIM       12
STRNGLEN  FORM      4
S12AFAIL  FORM      8
S12ASENT  FORM      8
S12ARJCT  FORM      8
S14AFAIL  FORM      8
S14ASENT  FORM      8
S14ARJCT  FORM      8
S15AFAIL  FORM      8
S15ASENT  FORM      8
S15ARJCT  FORM      8
.
TCPIPORT  DIM       40            * receiving machine name and port number
TIMSTAMP  DIM       8
TMPSTRNG  DIM       127           * buffer for reading in message
.
VISNUMBR  DIM       8
.
.
. PROGRAM CONSTANTS
. -----------------
ANSSA     INIT      "SA"
ANSSP     INIT      "SP"
CARET     INIT      "^"
CATCZ     INIT      "CZ"
CATLI     INIT      "LI"
CATLL     INIT      "LL"
CATLN     INIT      "LN"
CATea     INIT      "ea"
CATeb     INIT      "eb"
CATec     INIT      "ec"
CATed     INIT      "ed"
CATel     INIT      "el"
CATet     INIT      "et"
CATrr     INIT      "rr"
CATRX     INIT      "RX"
CATTC     INIT      "tc"
CATWR     INIT      "WR"
CRETURN   INIT      015                * carriage return character
CURRDATE  DIM       8
.
DASHLINE  INIT      "--------------------------------------------------":
                    "------------------------------"
.
ENDBLOCK  INIT      034
ENVVNAME  INIT      "DPATH"
.
FORM3     FORM      3
FORM17P2  FORM      17.2
FRM4      FORM      4
FORMZNT4  FORM      1
FORMZNT5  FORM      1
FORMZNT6  FORM      1
.
MINUS3    FORM      "-3"
MTYPEA01  INIT      "ADT^A01^ADT_A01"
MTYPEA02  INIT      "ADT^A02^ADT_A02"
MTYPEA03  INIT      "ADT^A03^ADT_A03"
MTYPEA04  INIT      "ADT^A04^ADT_A01"
MTYPEA05  INIT      "ADT^A05^ADT_A01"
MTYPEA08  INIT      "ADT^A08^ADT_A01"
MTYPEA11  INIT      "ADT^A11^ADT_A09"
MTYPEA12  INIT      "ADT^A12^ADT_A12"
MTYPEA13  INIT      "ADT^A13^ADT_A01"
MTYPEA14  INIT      "ADT^A14^ADT_A01"
MTYPEA21  INIT      "ADT^A21^ADT_A02"
MTYPEA22  INIT      "ADT^A22^ADT_A02"
MTYPEA27  INIT      "ADT^A27^ADT_A02"
MTYPEA28  INIT      "ADT^A28^ADT_A28"
MTYPEA31  INIT      "ADT^A31^ADT_A01"
MTYPEA34  INIT      "ADT^A34^ADT_A30"
MTYPEA38  INIT      "ADT^A38^ADT_A38"
MTYPEA44  INIT      "ADT^A44^ADT_A43"
MTYPEM01  INIT      "MFN^M01^MFN_M01"
MTYPEM02  INIT      "MFN^M02^MFN_M02"
MTYPES12  INIT      "SIU^S12^SIU_S12"
MTYPES14  INIT      "SIU^S14^SIU_S12"
MTYPES15  INIT      "SIU^S15^SIU_S12"
MTYPEL16  INIT      "REF^I12^REF_I12"
MTYPEL17  INIT      "REF^I13^REF_I12"
MTYPEL18  INIT      "REF^I14^REF_I12"
MTYPEA37  INIT      "ADT^A37^ADT_A37"
.
PIPE      INIT      "|"
PRTYDES1  INIT      "Urgent"
PRTYDES2  INIT      "Semi Urgent"
PRTYDES3  INIT      "Routine"
.
RTYPCOD1  INIT      "MED"
RTYPCOD2  INIT      "SKN"
RTYPCOD3  INIT      "PSY"
RTYPCOD4  INIT      "HOM"
RTYPDES1  INIT      "Medical"
RTYPDES2  INIT      "Skilled Nurse"
RTYPDES3  INIT      "Psychiatric"
RTYPDES4  INIT      "Home Care"
.
SP100     INIT      "                                                  ":
                    "                                                  "
STATDES0  INIT      "Pending"
STATDES1  INIT      "Accepted"
STATDES2  INIT      "Rejected"
STATDESA  INIT      "Admitted"
STATDESD  INIT      "Discharged"
STATDESE  INIT      "Expired"
STATDESI  INIT      "Inactive"
STATDESP  INIT      "Preadmitted"
STATDESR  INIT      "Removed"
STATDESS  INIT      "Scheduled"
STATDESU  INIT      "Unscheduled"
.
STRTBLOK  INIT      013
.
TIMECAP2  INIT      "Acknowledgement received @ "
.
UNDSCORE  INIT      "_"
.
ZEROURNO  INIT      "       0"
.
.
.-----------------------------------------------------------------------
PRGID     INIT      "HL7CISIN"
PRGNAM    INIT      "HL7 Broadcast Message Server"
VERSION   INIT      "V12.00.08"
.-----------------------------------------------------------------------
+
.******************************************************************************
.*                                 MAIN0000                                   *
.*                       Controlling Logic (Mainline code)                    *
.******************************************************************************
.
MAIN0000  CALL      SETX0000                * Setup common variables
          CALL      INIT0000                * Initialise variables & open files
          BRANCH    EXIT,MAIN9999           * machine or socket not set
.
          CALL      CRTMP000                * create alias temp file
          CALL      RCIS0000                * Read HL7 inbound file
.
          CALL      KILTMP00                * remove existing file
.
MAIN9999  STOP
+
.******************************************************************************
.*                                  INIT0000       Called by: MAIN0000        *
.*                      Initialise Variables & Open Files                     *
.******************************************************************************
.
INIT0000  CALL      DISPHEAD                     * Display screen heading
.
          CALL      TFILENAM                     * get new tempfile name
          MOVE      TFILNAME,TEMPFILE
.
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
.
          MOVE      ZERO,SEDIFLAG                  * don't write to EDI file
.
          READ      CONTROLF,ZERO;*133,IBCNUCIS
          MATCH     "2",IBCNUCIS
          IF        @EQUAL
            MOVE      ONE,SEDIFLAG            * write to EDI file (not socket)
            GOTO      INIT0300
          ENDIF
          MATCH     "3",IBCNUCIS
          IF        @EQUAL
            MOVE      ONE,SEDIFLAG            * write to EDI file (and socket)
            GOTO      INIT0300
          ENDIF
.
          MATCH     "1",IBCNUCIS 
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"Third Party interface not turned on",*W5;
.           MOVE      "Not_Applicable",MESSAGID
.           MOVE      "Third_Party_interface_not_turned_on",ERRMESSG
.           CALL      ALTUSR00                   * send email warning
            GOTO      INIT9100
          ENDIF
.
INIT0300  MOVE      ZERO,NUMRETRY                * initialise retry counter
          MOVE      ZERO,CONNFLAG                * send email if no connection
          MOVE      ZERO,EDIMFLAG                * send email if no edi move
.
.         Get the categories for discharge intention and separation mode
.
          READ      CONTROLF,TEN;*79,CAPPRVNO
          READ      CONTROLF,TWENTY1;*45,PTCNDRSM
          READ      CONTROLF,SEVENTY9;*82,PTCNDSCI
.
.         Get parameter for A31 translation.  If it is set to "00" (default
.         setting for controlf fields), then reset the field to blanks.
.
          READ      CONTROLF,HUND10;*98,PTCNA31X
          MATCH     "00",PTCNA31X
          IF        @EQUAL
            MOVE      SP2,PTCNA31X
            WRITAB    CONTROLF,HUND10;*98,PTCNA31X
          ENDIF
.
          READ      CONTROLF,HUND20;*171,PTCNA31Y
          MATCH     "1",PTCNA31Y
          IF        @EQUAL
            MATCH     SP2,PTCNA31X
            IF        @EQUAL
              MOVE      "08",PTCNA31X            * send A08 instead of A31
            ENDIF
          ENDIF
.
.         Get the customisation parameters for messaging.
.
          READ      CONTROLF,THIRTY2;*126,OTCNA05R:
                                     *127,OTCNA08R
          READ      CONTROLF,FORTY;*111,OPCNCLSU
          READ      CONTROLF,EIGHTY;*250,PTCNHDPS
          READ      CONTROLF,EIGHTY8;*56,PTCNHADF:
                                     *59,PTCNI10D:
                                     *245,PTCNH7ED:
                                     *247,PTCNSZSD
          READ      CONTROLF,HUND03;*216,PTCNDGA2:
                                    *217,PTCNCKDG:
                                    *241,PTCNCLCD:
                                    *243,PTCNADIG:
                                    *244,PTCNNNK1
          READ      CONTROLF,HUND05;*217,PTCNGDV4:
                                    *227,PTCNGDV5
          READ      CONTROLF,HUND09;*151,PTCNGDV3
          READ      CONTROLF,HUND10;*61,PTCNGDV7:
                                    *69,PTCNGDV8:
                                    *77,PTCNGDV9:
                                    *85,PTCNGDVX:
                                    *93,PTCNOLOC:
                                    *94,PTCNPV04:
                                    *95,PTCNPV18:
                                    *96,PTCNPV36:
                                    *97,PTCNPW36
          READ      CONTROLF,HUND12;*94,PTCNH7ME:
                                    *95,PTCNH7IN:
                                    *96,PTCNH7AC:
                                    *97,PTCNH7HS:
                                    *98,PTCNH7AD:
                                    *99,PTCNH7A5:
                                    *239,PTCNGDV6
          READ      CONTROLF,HUND13;*60,OPCNAIPS:
                                    *61,OPCNAILS
          READ      CONTROLF,HUND14;*141,PTCNH7LS:
                                    *219,PTCNUSGN
          READ      CONTROLF,HUND16;*249,PTCNRTUR
          READ      CONTROLF,HUND17;*220,PTCNGDX1
          READ      CONTROLF,HUND18;*112,PTCNSLPD:
                                    *138,PTCNNEWC:
                                    *150,PTCNH7AL:
                                    *154,PTCNUHSC:
                                    *155,PTCNH7WD:
                                    *180,PTCNEDDD
          READ      CONTROLF,HUND19;*122,PTCNDEDI:
                                    *182,PTCNEPIS
          READ      CONTROLF,HUND21;*123,ALCNRSCE:
                                    *124,ALCNRSII
          READ      CONTROLF,HUND22;*9,EMCNSEIC:
                                    *52,EMCNAZTR
          READ      CONTROLF,HUND23;*209,PTCNUTOM:
                                    *211,PTCNGNDR:
                                    *213,PTCNMHSW:
                                    *249,PTCNISTF:
                                    *250,PTCNESTF:
                                    *251,PTCNOPRA
          READ      CONTROLF,HUND24;*146,PTCNH7LN:
                                    *156,PTCNH7IL:
                                    *160,PTCNSZLS:
                                    *211,PTCNSDRG:
                                    *214,PTCNSZEC:
                                    *217,PTCNSZBR:
                                    *221,PTCNUHDD:
                                    *223,PTCNMDG1:
                                    *235,PTCNZNT4:
                                    *236,PTCNZNT5:
                                    *237,PTCNCMSZ:
                                    *238,PTCNOCDZ:
                                    *239,PTCNWLRS:
                                    *247,PTCNZNT6
          READ      CONTROLF,HUND25;*155,PTCNEPMI:
                                    *234,PTCNBMYH:
                                    *248,PTCNTOFB
          READ      CONTROLF,HUND28;*109,PTCNB31R:
                                    *110,PTCNEVN4:
                                    *224,PTCNSNTY:
                                    *231,PTCNGDX2
          READ      CONTROLF,HUND29;*248,PTCNSZST
          READ      CONTROLF,HUND30;*86,PTCNGDX3:
                                    *115,PTCNDBVC:
                                    *116,PTCNDBVP:
                                    *117,PTCNSAPC
.
.         Get multi-hospital parameter & health care establishment
.
          READ      CONTROLF,ZERO;*43,IBCNMHOS,*206,IBCNHCEN
.
.         Get NHI parameter
.
          READ      CONTROLF,TWENTY1;*138,PTCNNHII
.
          MATCH     "1",PTCNH7AL                 * sending ZAL for all alerts
          GOTO      INIT0500 IF EQUAL            * yes
.
.         Get the category being used for allergies (H1-H9)
.
          READ      CONTROLF,HUND03;*196,PTCNCATA
          MATCH     ANSH,PTCNCATA
          IF        @EQUAL
            UNPACK    PTCNCATA,ANS,ANS
            MOVE      ZERO,FORM1
            MOVE      ANS,FORM1
            BRANCH    FORM1,INIT0500,INIT0500,INIT0500,INIT0500,INIT0500:
                            INIT0500,INIT0500,INIT0500,INIT0500
          ENDIF
.
          DISPLAY   *P1:24,*EL,*B,"Allergy alert category not set",*W5;
.         MOVE      "Not_Applicable",MESSAGID
.         MOVE      "Allergy_alert_category_not_set",ERRMESSG
.         CALL      ALTUSR00                   * send email warning
          GOTO      INIT9100
.
INIT0500  IF        PTCNNHII = 1
            DISPLAY   *P64:24,"nhiethaf";
            OPEN      NHIETHA1,"nhiethaf"
          ENDIF
.
          DISPLAY   *P64:24,"hl7cisaf";
          OPEN      HL7CISA1,"hl7cisaf"
          OPEN      HL7CISA2,"hl7cisaf"
.
          DISPLAY   *P64:24,"hl7urhaf";
          OPEN      HL7URHA1,"hl7urhaf"
.
          DISPLAY   *P64:24,"alldiaaf";
          OPEN      ALLDIAA1,"alldiaaf"
.
          DISPLAY   *P64:24,"alleidaf";
          OPEN      ALLEIDA1,"alleidaf"
.
          DISPLAY   *P64:24,"alllnkaf";
          OPEN      ALLLNKA2,"alllnkaf"
.
          DISPLAY   *P64:24,"allprraf";
          OPEN      ALLPRRA1,"allprraf"
.
          DISPLAY   *P64:24,"allqueaf";
          OPEN      ALLQUEA1,"allqueaf"
.
          DISPLAY   *P64:24,"allrefaf";
          OPEN      ALLREFA1,"allrefaf"
.
          DISPLAY   *P64:24,"allseraf";
          OPEN      ALLSERA1,"allseraf"
.
          DISPLAY   *P64:24,"bokrc1af";
          OPEN      BOKRC1A1,"bokrc1af"
.
          DISPLAY   *P64:24,"catcomaf";
          OPEN      CATCOMA1,"catcomaf"
.
          DISPLAY   *P64:24,"comerhaf";
          OPEN      COMERHA5,"comerhaf"
.
          DISPLAY   *P64:24,"dismasaf";
          OPEN      DISMASA1,"dismasaf"
.
          DISPLAY   *P64:24,"disptlaf";
          OPEN      DISPTLA1,"disptlaf"
.
          DISPLAY   *P64:24,"emrqueaf";
          OPEN      EMRQUEA1,"emrqueaf"
.
          DISPLAY   *P64:24,"emrsitaf";
          OPEN      EMRSITA1,"emrsitaf"
.
          DISPLAY   *P64:24,"emrvisaf";
          OPEN      EMRVISA1,"emrvisaf"
          OPEN      EMRVISA3,"emrvisaf"
.
          DISPLAY   *P64:24,"emrcliaf";
          OPEN      EMRCLIA1,"emrcliaf"
.
          DISPLAY   *P64:24,"emrhisaf";
          OPEN      EMRHISA1,"emrhisaf"
.
          DISPLAY   *P64:24,"emricdaf";
          OPEN      EMRICDA1,"emricdaf"
.
          DISPLAY   *P64:24,"emrvcdaf";
          OPEN      EMRVCDA1,"emrvcdaf"
.
          DISPLAY   *P64:24,"emrlocaf";
          OPEN      EMRLOCA1,"emrlocaf"
.
          DISPLAY   *P64:24,"ibaalvaf";
          OPEN      IBAALVA1,"ibaalvaf"
.
          DISPLAY   *P64:24,"ibapostf";
          OPEN      IBAPOST1,"ibapostf"
.
          DISPLAY   *P64:24,"mehdiaaf";
          OPEN      MEHDIAA1,"mehdiaaf"
.
          DISPLAY   *P64:24,"mehdlsaf";
          OPEN      MEHDLSA1,"mehdlsaf"
.
          DISPLAY   *P64:24,"mehds1af";
          OPEN      MEHDS1A1,"mehds1af"
.
          DISPLAY   *P64:24,"mehhlsaf";
          OPEN      MEHHLSA1,"mehhlsaf"
.
          DISPLAY   *P64:24,"mehvi1af";
          OPEN      MEHVI1A1,"mehvi1af"
.           
          DISPLAY   *P64:24,"mlthcpaf";
          OPEN      MLTHCPA2,"mlthcpaf"
.           
          DISPLAY   *P64:24,"mrtlocaf";
          OPEN      MRTLOCA1,"mrtlocaf"
.           
          DISPLAY   *P64:24,"mrtmasaf";
          OPEN      MRTMASA1,"mrtmasaf"
.           
          DISPLAY   *P64:24,"nhimasaf";
          OPEN      NHIMASA2,"nhimasaf"
.           
          DISPLAY   *P64:24,"oprcliaf";
          OPEN      OPRCLIA1,"oprcliaf"
.
          DISPLAY   *P64:24,"outhedaf";
          OPEN      OUTHEDA1,"outhedaf"
.         
          DISPLAY   *P64:24,"oprnuraf";
          OPEN      OPRNURA1,"oprnuraf"
.
          DISPLAY   *P64:24,"opropraf";
          OPEN      OPROPRA1,"opropraf"
.
          DISPLAY   *P64:24,"oprqueaf";
          OPEN      OPRQUEA1,"oprqueaf"
.
          DISPLAY   *P64:24,"oprsesaf";
          OPEN      OPRSESA1,"oprsesaf"
.
          DISPLAY   *P64:24,"outqmaaf";
          OPEN      OUTQMAA1,"outqmaaf"
.
          DISPLAY   *P64:24,"outqtyaf";
          OPEN      OUTQTYA1,"outqtyaf"
.
          DISPLAY   *P64:24,"outqueaf";
          OPEN      OUTQUEA1,"outqueaf"
.
          DISPLAY   *P64:24,"pmsdtcaf";
          OPEN      PMSDTCA1,"pmsdtcaf"
.
          DISPLAY   *P64:24,"pmsworaf";
          OPEN      PMSWORA1,"pmsworaf"
.
          DISPLAY   *P64:24,"pmswx1af";
          OPEN      PMSWX1A1,"pmswx1af"
.
          DISPLAY   *P64:24,"watopaaf";
          OPEN      WATOPAA2,"watopaaf"
.
          DISPLAY   *P64:24,"watopsaf";
          OPEN      WATOPSA2,"watopsaf"
.
          DISPLAY   *P64:24,"watproaf";
          OPEN      WATPROA1,"watproaf"
.
          DISPLAY   *P64:24,"wattr1af";
          OPEN      WATTR1A1,"wattr1af"
.
          DISPLAY   *P64:24,"wattx1af";
          OPEN      WATTX1A1,"wattx1af"
.
INIT0600  MOVE      ZERO,HEROTABL
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          DISPLAY   *P64:24,"pmsuhlaf";
          OPEN      PMSUHLA1,"pmsuhlaf"
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ONE,HEROTABL          * not using HERO Location table
          ENDIF
.
          MOVE      ZERO,COMPTABL
          MOVE      ZERO,OVRCD              * Trap to check if comparaf exists
          TRAP      OVERCOND IF IO
          DISPLAY   *P64:24,"comparaf";
          OPEN      COMPARA1,"comparaf"
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ONE,COMPTABL          * not using common system parameter
          ENDIF
.
          MOVE      ZERO,IBAPTABL
          MOVE      ZERO,OVRCD              * Trap to check if 2nd index exists
          TRAP      OVERCOND IF IO
          DISPLAY   *P64:24,"ibapolaf";
          OPEN      IBAPOLA2,"ibapolaf"      * open Patient Pooling table
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ONE,IBAPTABL          * not using common system parameter
          ENDIF
.
          IF        OTCNA05R = 1 | OTCNA08R = 1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            DISPLAY   *P64:24,"outrquaf";
            OPEN      OUTRQUA1,"outrquaf"
            TRAPCLR   IO
            IF        OVRCD = 1
              DISPLAY   *P1:24,*EL,*B,"O/P Referral message file missing",*W5;
.             MOVE      "Not_Applicable",MESSAGID
.             MOVE      "O/P_Referral_message_file_missing",ERRMESSG
.             CALL      ALTUSR00                   * send email warning
              GOTO      INIT9100
            ENDIF
          ENDIF
.
          DISPLAY   *P64:24,"outsitaf";
          OPEN      OUTSITA1,"outsitaf"
          OPEN      OUTSITA3,"outsitaf"
.
          DISPLAY   *P64:24,"outthiaf";
          OPEN      OUTTHIA1,"outthiaf"
.
          DISPLAY   *P64:24,"patalrtf";
          OPEN      PATALRT1,"patalrtf"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patdadaf";
          OPEN      PATDADA1,"patdadaf"
.
          DISPLAY   *P64:24,"patdgwaf";
          OPEN      PATDGWA1,"patdgwaf"
.
          DISPLAY   *P64:24,"patdschf";
          OPEN      PATDSCH1,"patdschf"
.
          DISPLAY   *P64:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P64:24,"patecoaf";
          OPEN      PATECOA1,"patecoaf"
.
          DISPLAY   *P64:24,"patecdaf";
          OPEN      PATECDA1,"patecdaf"
.
          DISPLAY   *P64:24,"pateoraf";
          OPEN      PATEORA1,"pateoraf"
.
          DISPLAY   *P64:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"patgsrnf";
          OPEN      PATGSRN1,"patgsrnf"
.
          DISPLAY   *P64:24,"pathspaf";
          OPEN      PATHSPA1,"pathspaf"
.
          DISPLAY   *P64:24,"patlinkf";
          OPEN      PATLINK1,"patlinkf"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"patonlvf";
          OPEN      PATONLV2,"patonlvf"
.
          DISPLAY   *P64:24,"patpgraf";
          OPEN      PATPGRA1,"patpgraf"
.
          DISPLAY   *P64:24,"patre1af";
          OPEN      PATRE1A1,"patre1af"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
.
          DISPLAY   *P64:24,"patmwsaf";
          OPEN      PATMWSA1,"patmwsaf"
.
          DISPLAY   *P64:24,"pattranf";
          OPEN      PATTRAN2,"pattranf"
.
          DISPLAY   *P64:24,"patvadaf";
          OPEN      PATVADA1,"patvadaf"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA2,"patvisaf"
.
          DISPLAY   *P64:24,"patwc1af";
          OPEN      PATWC1A1,"patwc1af"
.
          DISPLAY   *P64:24,"patwr1af";
          OPEN      PATWR1A1,"patwr1af"
.
          DISPLAY   *P64:24,"pmsaidaf";
          OPEN      PMSAIDA1,"pmsaidaf"
.
          DISPLAY   *P64:24,"pmsalnaf";
          OPEN      PMSALNA1,"pmsalnaf"
.
          DISPLAY   *P64:24,"pmsbrqaf";
          OPEN      PMSBRQA1,"pmsbrqaf"
.
          DISPLAY   *P64:24,"pmsccdaf";
          OPEN      PMSCCDA1,"pmsccdaf"
.
          DISPLAY   *P64:24,"pmscexaf";
          OPEN      PMSCEXA1,"pmscexaf"
.
          DISPLAY   *P64:24,"pmsdivaf";
          OPEN      PMSDIVA2,"pmsdivaf"
.
          DISPLAY   *P64:24,"pmsextaf";
          OPEN      PMSEXTA1,"pmsextaf"
.
          DISPLAY   *P64:24,"patin1af";
          OPEN      PATIN1A1,"patin1af"
.
          DISPLAY   *P64:24,"patinvrf";
          OPEN      PATINVR3,"patinvrf"
.
          DISPLAY   *P64:24,"pmshcgaf";
          OPEN      PMSHCGA1,"pmshcgaf"
.
          DISPLAY   *P64:24,"pmshclaf";
          OPEN      PMSHCLA1,"pmshclaf"
.
          DISPLAY   *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
.
          DISPLAY   *P64:24,"pmsnutaf";
          OPEN      PMSNUTA1,"pmsnutaf"
.
          DISPLAY   *P64:24,"pmsqdraf";
          OPEN      PMSQDRA1,"pmsqdraf"
.
          DISPLAY   *P64:24,"pmsqptaf";
          OPEN      PMSQPTA1,"pmsqptaf"
          OPEN      PMSQPXA1,"pmsqpxaf"
.
          DISPLAY   *P64:24,"pmsqviaf";
          OPEN      PMSQVIA1,"pmsqviaf"
.
          DISPLAY   *P64:24,"pmsrelaf";
          OPEN      PMSRELA1,"pmsrelaf"
.
          DISPLAY   *P64:24,"pmstemaf";
          OPEN      PMSTEMA1,"pmstemaf"
.
          DISPLAY   *P64:24,"pmstmdaf";
          OPEN      PMSTMDA1,"pmstmdaf"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"viscmtaf";
          OPEN      VISCMTA1,"viscmtaf"
.
          DISPLAY   *P64:24,"vismdtaf";
          OPEN      VISMDTA1,"vismdtaf"
.
          DISPLAY   *P64:24,"vismtxaf";
          OPEN      VISMTXA1,"vismtxaf"
.
          DISPLAY   *P64:24,"viscodaf";
          OPEN      VISCODA1,"viscodaf"
.
          DISPLAY   *P64:24,"visxdcaf";
          OPEN      VISXDCA1,"visxdcaf"
.
          DISPLAY   *P64:24,"watqueaf";
          OPEN      WATQUEA1,"watqueaf"
.
          DISPLAY   *P64:24,"websecaf";
          OPEN      WEBSECA1,"websecaf"
          OPEN      WEBSECA3,"websecaf"
.
          DISPLAY   *P64:24,"patatraf"
          OPEN      PATATRA3,"patatraf"
.
.         Get the machine and socket to which the message is being sent
.
          READ      CONTROLF,ZERO;*134,IBCNCBSN,*154,IBCNCBSK,*174,IBCNCRTI:
                                  *176,IBCNCRTN,*179,IBCNCRTO
          MOVE      IBCNCRTI,RETRYINT            * load form fields
          MOVE      IBCNCRTN,RETRYNUM
          MOVE      IBCNCRTO,RESPTOUT
.
          MATCH     SP20,IBCNCBSN                * blank machine ?
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,*B,"Destination server name is blank",*W5;
.           MOVE      "Not_Applicable",MESSAGID
.           MOVE      "Destination_server_name_is_blank",ERRMESSG
.           CALL      ALTUSR00                   * send email warning
            GOTO      INIT9200
          ENDIF
.
          MATCH     SP20,IBCNCBSK                * blank socket ?
          IF        @EQUAL
            DISPLAY   *P1:24,*EL,*B,"Destination socket is blank",*W5;
.           MOVE      "Not_Applicable",MESSAGID
.           MOVE      "Destination_socket_is_blank",ERRMESSG
.           CALL      ALTUSR00                   * send email warning
            GOTO      INIT9200
          ENDIF
.
.         Set machine and port <machine:port>
.
          MOVE      IBCNCBSN,TCPIPORT
          STRIP     TCPIPORT
          ENDSET    TCPIPORT
          APPEND    COLON,TCPIPORT
          APPEND    IBCNCBSK,TCPIPORT
          RESET     TCPIPORT
          STRIP     TCPIPORT
.
.         Set the response timeout to milliseconds
.
          ASSIGN    (RESPTOUT*1000),RPLYTIME
.
.         Get the first directory in the DPATH (cd directory) as this will
.         be where the log file will be created/updated if required
.
          GETENV    ENVVNAME,DPATHVAR            * get DPATH
          IF        @OVER
            DISPLAY   *P1:24,*EL,*B,"Problem getting DPATH (1)",*W5;
.           MOVE      "Not_Applicable",MESSAGID
.           MOVE      "Problem_getting_DPATH_1",ERRMESSG
.           CALL      ALTUSR00                   * send email warning
            GOTO      INIT9100
          ENDIF
.
          MOVE      SP100,CDDRCTRY               * clear cd directory variable
          CLEAR     CDDRCTRY
          SCAN      ":",DPATHVAR                 * find end of first directory
          IF        @EOS
            DISPLAY   *P1:24,*EL,*B,"Problem getting DPATH (2)",*W5;
.           MOVE      "Not_Applicable",MESSAGID
.           MOVE      "Problem_getting_DPATH_2",ERRMESSG
.           CALL      ALTUSR00                   * send email warning
            GOTO      INIT9100
          ENDIF
.
          IF        @EQUAL
            MOVEFPTR  DPATHVAR,FORM3
            SUB       ONE,FORM3
            RESET     DPATHVAR
            SETLPTR   DPATHVAR,FORM3
          ENDIF
.
          MOVE      DPATHVAR,CDDRCTRY
          ENDSET    CDDRCTRY
          APPEND    SLASH,CDDRCTRY
          RESET     CDDRCTRY
.
INIT1000  KEYIN     *P1:8,*EF,"Display messages to the screen (",*V2LON,*DV:
                    ANSY,*HOFF,*DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") :":
                    *P40:8,*V2LON,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS
          IF        @EQUAL
            MOVE      ONE,DISPFLAG
            DISPLAY   *P1:4,*EF;
            GOTO      INIT9000
          ENDIF
.
          MATCH     ANSN,ANS
          IF        @EQUAL
            MOVE      ZERO,DISPFLAG
            CALL      BACK0000              * Display background screen
            GOTO      INIT9000
          ENDIF
.
          BEEP
          GOTO      INIT1000
.
INIT9000  MOVE      ZERO,EXIT
          GOTO      INIT9999
.
INIT9100  MOVE      ONE,EXIT
          GOTO      INIT9999
.
INIT9200  MATCH     "2",IBCNUCIS
          IF        !@EQUAL
            MOVE      ONE,EXIT              * only quit if we are using sockets
          ENDIF
.
INIT9999  RETURN
+
.******************************************************************************
.*                                  BACK0000              Called by: INIT0000 *
.*                          Display Background Screen                         *
.******************************************************************************
.
BACK0000  DISPLAY   *C132,*P1:1,*ES,*HON,SP30,SP30,SP30,SP30,SP30:
                    *P1:1,PRGID,SLASH,VERSION,*P51:1,CNAME:
                    *P118:1,"Date:",CDATE
.
          BOX       16,1,2,132,24
          HLINE     *G37,6,2,131
          HLINE     *G33,6,1,1
          VLINE     *G19,39,12,12
          VLINE     *G21,39,6,6
          VLINE     *G21,77,6,6
          VLINE     *G30,39,24,24
          VLINE     *G30,77,24,24
          VLINE     *G39,39,7,23
          VLINE     *G39,77,7,23
          HLINE     *G34,6,132,132
          DISPLAY   *P51:3,*HON,*V2LON," BROADCAST MESSAGE STATISTICS ";
.
          CALL      IBACLOCK
          PACK      KEY8,CCC,CYY,CMM,CDD
          UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          REP       " 0",CPCDATE
          CLOCK     TIME,CTIMEIS
.
          DISPLAY   *P4:4,"Application Activated on ",*V2LON,CPCDATE,*HOFF:
                    "  @  ",*V2LON,CTIMEIS,*HOFF:
                    *P4:5,"Current status... ",*V2LON,*HON,"Waiting";
.
          DISPLAY   *P3:8,*V2LON,*ULON,"PMI":
                    *P13:7,"    Sent",*P22:7,"  Failed",*P31:7,"Rejected":
                    *P3:11,*V2LON,*ULON,"OPD":
                    *P3:19,*V2LON,*ULON,"EMR":
                    *P51:7,"    Sent",*P60:7,"  Failed",*P69:7,"Rejected":
                    *P41:8,*V2LON,*ULON,"EMR":
                    *P41:9,*V2LON,*ULON,"ADT":
                    *P41:21,*V2LON,*ULON,"SCH":
                    *P89:7,"    Sent",*P98:7,"  Failed",*P107:7,"Rejected":
                    *P79:8,*V2LON,*ULON,"REF":
                    *P79:15,*V2LON,*ULON,"W/L":
                    *P79:20,*V2LON,*ULON,"MFN":
                    *P79:22,*V2LON,*ULON,"PMI"
.
          DISPLAY   *P7:8,"A28":
                    *P7:9,"A31":
                    *P7:10,"A34":
                    *P7:11,"A03":
                    *P7:12,"A04":
                    *P7:13,"A05":
                    *P7:14,"A08":
                    *P7:15,"A11":
                    *P7:16,"A13":
                    *P7:17,"A38":
                    *P7:18,"A44":
                    *P7:19,"A03":
                    *P7:20,"A04":
                    *P7:21,"A08":
                    *P7:22,"A11":
                    *P7:23,"A13":
                    *P45:8,"A44":
                    *P45:9,"A01":
                    *P45:10,"A02":
                    *P45:11,"A03":
                    *P45:12,"A08":
                    *P45:13,"A11":
                    *P45:14,"A12":
                    *P45:15,"A13"
.
          MATCH     "1",PTCNH7A5
          IF        @EQUAL
            DISPLAY   *P45:16,"A05"
          ELSE
            DISPLAY   *P45:16,"A14"
          ENDIF     
.                   
          DISPLAY   *P45:17,"A21":
                    *P45:18,"A22":
                    *P45:19,"A27":
                    *P45:20,"A44":
                    *P45:21,"S12":
                    *P45:22,"S14":
                    *P45:23,"S15":
                    *P83:8,"I12":
                    *P83:9,"I13":
                    *P83:10,"I14":
                    *P83:11,"A03":
                    *P83:12,"A08":
                    *P83:13,"A13":
                    *P83:14,"A44":
                    *P83:15,"A02":
                    *P83:16,"A05":
                    *P83:17,"A08":
                    *P83:18,"A38":
                    *P83:19,"A44":
                    *P83:20,"M01":
                    *P83:21,"M02":
                    *P83:22,"A37"
.
.         Initialise counters
.
          MOVE      ONE,FORM3
          REPEAT
            STORE     ZERO,FORM3,A01AFAIL,A01ARJCT,A01ASENT,A02AFAIL,A02ARJCT:
                                 A02ASENT,A02WFAIL,A02WRJCT,A02WSENT,A03AFAIL:
                                 A03ARJCT,A03ASENT,A03EFAIL,A03ERJCT,A03ESENT:
                                 A03LFAIL,A03LRJCT,A03LSENT,A03OFAIL,A03ORJCT:
                                 A03OSENT,A04EFAIL,A04ERJCT,A04ESENT,A04OFAIL:
                                 A04ORJCT,A04OSENT,A05OFAIL,A05ORJCT,A05OSENT:
                                 A05WFAIL,A05WRJCT,A05WSENT,A08AFAIL,A08ARJCT:
                                 A08ASENT,A08EFAIL,A08ERJCT,A08ESENT,A08LFAIL:
                                 A08LRJCT,A08LSENT,A08OFAIL,A08ORJCT,A08OSENT:
                                 A08WFAIL,A08WRJCT,A08WSENT,A11AFAIL,A11ARJCT:
                                 A11ASENT,A11EFAIL,A11ERJCT,A11ESENT,A11OFAIL:
                                 A11ORJCT,A11OSENT,A12AFAIL,A12ARJCT,A12ASENT:
                                 A13AFAIL,A13ARJCT,A13ASENT,A13EFAIL,A13ERJCT:
                                 A13ESENT,A13LFAIL,A13LRJCT,A13LSENT,A13OFAIL:
                                 A13ORJCT,A13OSENT,A14AFAIL,A14ARJCT,A14ASENT:
                                 A21AFAIL,A21ARJCT,A21ASENT,A22AFAIL,A22ARJCT:
                                 A22ASENT,A27AFAIL,A27ARJCT,A27ASENT,A28PFAIL:
                                 A28PRJCT,A28PSENT,A31PFAIL,A31PRJCT,A31PSENT:
                                 A34PFAIL,A34PRJCT,A34PSENT,A37PFAIL,A37PRJCT:
                                 A37PSENT,A38OFAIL,A38ORJCT,A38OSENT,A38WFAIL:
                                 A38WRJCT,A38WSENT,A44AFAIL,A44ARJCT,A44ASENT:
                                 A44EFAIL,A44ERJCT,A44ESENT,A44LFAIL,A44LRJCT:
                                 A44LSENT,A44OFAIL,A44ORJCT,A44OSENT,A44WFAIL:
                                 A44WRJCT,A44WSENT,I12RFAIL,I12RRJCT,I12RSENT:
                                 I12WFAIL,I12WRJCT,I12WSENT,I13RFAIL,I13RRJCT:
                                 I13RSENT,I13WFAIL,I13WRJCT,I13WSENT,I14RFAIL:
                                 I14RRJCT,I14RSENT,I14WFAIL,I14WRJCT,I14WSENT:
                                 M01OFAIL,M01ORJCT,M01OSENT,M02PFAIL,M02PRJCT:
                                 M02PSENT,S12AFAIL,S12ARJCT,S12ASENT,S14AFAIL:
                                 S14ARJCT,S14ASENT,S15AFAIL,S15ARJCT,S15ASENT
            ADD       ONE,FORM3
          UNTIL     FORM3 > 150
.
BACK9999  RETURN
+
.******************************************************************************
.*                                  RCIS0000       Called by: MAIN0000        *
.*                       Read CIS Holding Header File                         *
.******************************************************************************
.
RCIS0000  CALL      CONN0000                     * connect to socket
          BRANCH    EXIT,RCIS9150                * failed to connect - try again
.
.         If in display mode, check if we are ready to send the next message
.
RCIS0500  IF        DISPFLAG = 1
            MOVE      ANSY,ANS
            KEYIN     "Send next message (",*V2LON,*DV,ANSY,*HOFF,*DV,SLASH:
                      *V2LON,*DV,ANSN,*HOFF,") ? ",*RV,ANS,*R,*N;
            PACK      ANS,ANS,SP1
            REP       UPPLOW,ANS
.
            MATCH     ANSN,ANS
            GOTO      RCIS9990 IF EQUAL
.
            MATCH     ANSY,ANS
            IF        !@EQUAL
              BEEP
              GOTO      RCIS0500
            ENDIF
          ENDIF
.
.         Loop through inbound header file looking for "Waiting" records
.
RCIS1000  PACK      KEY37,ANSW,SP70
          CALL      RSH7CIS2                     * position at start of file
          CALL      RKH7CIS2                     * read next record
          IF        OVRCD = 1
            IF        DISPFLAG = 1
              DISPLAY   *WRETRYINT;              * eof
            ELSE
              DISPLAY   *P22:5,*WRETRYINT;       * eof
            ENDIF
            GOTO      RCIS0500
          ENDIF
.
          MATCH     ANSW,H7CISTAT                * status "Waiting" ?
          IF        !@EQUAL
            IF        DISPFLAG = 1
              DISPLAY   *WRETRYINT;                     * no
            ELSE
              DISPLAY   *P22:5,*WRETRYINT;              * no
            ENDIF
            GOTO      RCIS0500
          ENDIF
.
.         Message waiting to be sent has been found
.
          IF        DISPFLAG = 1
            DISPLAY   "Processing [",H7CIMETP,"] message",*R,*N;
          ELSE
            DISPLAY   *P22:5,*V2LON,*HON,"Processing":
                      *HOFF,*V2LON," (",H7CIMETP,")"
          ENDIF
.
          MOVE      ZERO,MLOGFLAG                * set flag for start of message
          MOVE      "Processing Message ",ERORTEXT
          ENDSET    ERORTEXT
          APPEND    H7CIMESI,ERORTEXT
          APPEND    " @ ",ERORTEXT
          RESET     ERORTEXT
          CALL      LOGM0000                     * log message if required
.
.         Validate the message type
.
          PACK      SEGSTRNG,SP100,SP100,SP100,SP100,SP100,SP100,SP100,SP100:
                             SP100,SP100,SP100,SP100,SP100,SP100,SP100,SP100:
                             SP100,SP100,SP100,SP100
          CLEAR     SEGSTRNG                     * clear segment string
          MOVE      ZERO,PV150CNT                * init. PV1.50 repeat count
                             
          CALL      CLRTMP00                     * clear alias temp file
          MOVE      ZERO,A08XFLAG                * set flag for normal A08
          MOVE      ONE,REFLFLAG                 * set flag for booking message
.
          MATCH     "A01",H7CIMETP               * I/P admission ?
          IF        @EQUAL
            MOVE      ONE,MESSNUMB
            GOTO      RCIS1500
          ENDIF
.
          MATCH     "A02",H7CIMETP               * I/P transfer ?
          GOTO      RCIS1010 IF NOT EQUAL        * no
.
          MOVE      TWO,MESSNUMB                 * yes
          MOVE      H7CIMESI,KEY20
          CALL      RAWTQUE1
          IF        OVRCD = 0                                               
            MOVE      FORTY3,MESSNUMB            * W/L Transfer
          ENDIF
          GOTO      RCIS1500
.
RCIS1010  MATCH     "A03",H7CIMETP               * discharge ?
          GOTO      RCIS1020 IF NOT EQUAL        * no
.
          MOVE      H7CIMESI,KEY20
          CALL      RAOTQUE1
          IF        OVRCD = 0
            MOVE      FORTY4,MESSNUMB            * O/P discharge
            GOTO      RCIS1500
          ENDIF
.
          MOVE      H7CIMESI,KEY20               * yes
          CALL      RAEMQUE1
          IF        OVRCD = 0
            MOVE      FOUR,MESSNUMB              * Emergency discharge
            GOTO      RCIS1500
          ENDIF
.
          MOVE      H7CIMESI,KEY20
          CALL      RAALQUE1
          IF        OVRCD = 0
            MOVE      THIRTY5,MESSNUMB           * A/H encounter
            GOTO      RCIS1500
          ENDIF
.
          PACK      KEY22,H7CIMESI,SP1,ONE
          CALL      RAPMQVI1
          IF        OVRCD = 0
            MOVE      THREE,MESSNUMB             * I/P discharge
            GOTO      RCIS1500
          ENDIF
          GOTO      RCIS7500
.
RCIS1020  MATCH     "A04",H7CIMETP               * non-I/P attendance ?
          GOTO      RCIS1030 IF NOT EQUAL        * no
.
          MOVE      H7CIMESI,KEY20               * yes
          CALL      RAOTQUE1
          IF        OVRCD = 0
            MOVE      FIVE,MESSNUMB              * O/P
            GOTO      RCIS1500
          ENDIF
.
          MOVE      H7CIMESI,KEY20
          CALL      RAEMQUE1
          IF        OVRCD = 0
            MOVE      SIX,MESSNUMB               * Emergency
            GOTO      RCIS1500
          ENDIF
          GOTO      RCIS7500
.
RCIS1030  MATCH     "A05",H7CIMETP               * Booking ?
          GOTO      RCIS1040 IF NOT EQUAL        * no
.
          MOVE      H7CIMESI,KEY20
          CALL      RAOTQUE1
          IF        OVRCD = 0
            MOVE      SEVEN,MESSNUMB             * O/P
            GOTO      RCIS1500
          ENDIF
.
          MOVE      H7CIMESI,KEY20
          CALL      RAWTQUE1
          IF        OVRCD = 0
            MOVE      THIRTY8,MESSNUMB           * W/L
            GOTO      RCIS1500
          ENDIF
.
          IF        OTCNA05R = 1
            MOVE      H7CIMESI,KEY20
            CALL      RAOTRQU1
            IF        OVRCD = 0
              MOVE      SEVEN,MESSNUMB           * O/P Referral (228937)
              GOTO      RCIS1500
            ENDIF
          ENDIF
          GOTO      RCIS7500
.
RCIS1040  MATCH     "A08",H7CIMETP               * visit update ?
          GOTO      RCIS1050 IF NOT EQUAL        * no
.
          MOVE      H7CIMESI,KEY20
          CALL      RAOTQUE1
          IF        OVRCD = 0
            MOVE      NINE,MESSNUMB              * O/P
            GOTO      RCIS1500
          ENDIF
.
          MOVE      H7CIMESI,KEY20               * yes
          CALL      RAEMQUE1
          IF        OVRCD = 0
            MOVE      TEN,MESSNUMB               * ED
            GOTO      RCIS1500
          ENDIF
.
          MOVE      H7CIMESI,KEY20
          CALL      RAALQUE1
          IF        OVRCD = 0
            MOVE      THIRTY6,MESSNUMB           * A/H Add Encounter
            GOTO      RCIS1500
          ENDIF
.
          IF        OTCNA08R = 1
            MOVE      H7CIMESI,KEY20
            CALL      RAOTRQU1
            IF        OVRCD = 0
              MOVE      NINE,MESSNUMB            * O/P Referral (228937)
              GOTO      RCIS1500
            ENDIF
          ENDIF
.
          PACK      KEY22,H7CIMESI,SP1,ONE
          CALL      RAPMQVI1
          IF        OVRCD = 0
            MOVE      EIGHT,MESSNUMB             * I/P
            GOTO      RCIS1500
          ENDIF
.
          MOVE      H7CIMESI,KEY20
          CALL      RAWTQUE1
          IF        OVRCD = 0
            MOVE      THIRTY9,MESSNUMB           * W/L Booking Update
            GOTO      RCIS1500
          ENDIF
.
          GOTO      RCIS7500
.
RCIS1050  MATCH     "A11",H7CIMETP               * cancel visit ?
          GOTO      RCIS1060 IF NOT EQUAL        * no
.
          MOVE      H7CIMESI,KEY20               * yes
          CALL      RAOTQUE1
          IF        OVRCD = 0
            MOVE      TEN2,MESSNUMB              * O/P DNA
            GOTO      RCIS1500
          ENDIF
.
          MOVE      H7CIMESI,KEY20
          CALL      RAEMQUE1
          IF        OVRCD = 0
            MOVE      TEN3,MESSNUMB              * ED
            GOTO      RCIS1500
          ENDIF
.
          PACK      KEY22,H7CIMESI,SP1,ONE
          CALL      RAPMQVI1
          IF        OVRCD = 0
            MOVE      TEN1,MESSNUMB              * I/P
            GOTO      RCIS1500
          ENDIF
          GOTO      RCIS7500
.
RCIS1060  MATCH     "A12",H7CIMETP               * I/P cancel transfer ?
          IF        @EQUAL
            MOVE      TEN4,MESSNUMB
            GOTO      RCIS1500
          ENDIF
.
          MATCH     "A13",H7CIMETP               * cancel discharge ?
          GOTO      RCIS1070 IF NOT EQUAL        * no
.
          MOVE      H7CIMESI,KEY20               * yes
          CALL      RAEMQUE1
          IF        OVRCD = 0
            MOVE      TEN6,MESSNUMB              * Emergency
            GOTO      RCIS1500
          ENDIF
.
          MOVE      H7CIMESI,KEY20
          CALL      RAOTQUE1
          IF        OVRCD = 0
            MOVE      FORTY5,MESSNUMB            * O/P
            GOTO      RCIS1500
          ENDIF
.
          MOVE      H7CIMESI,KEY20
          CALL      RAALQUE1
          IF        OVRCD = 0
            MOVE      THIRTY7,MESSNUMB           * A/H Cancel Encounter
            GOTO      RCIS1500
          ENDIF
.
          PACK      KEY22,H7CIMESI,SP1,ONE
          CALL      RAPMQVI1
          IF        OVRCD = 0
            MOVE      TEN5,MESSNUMB              * I/P
            GOTO      RCIS1500
          ENDIF
          GOTO      RCIS7500
.
RCIS1070  MATCH     "A14",H7CIMETP               * I/P Pre-admit ?
          IF        @EQUAL
            MOVE      TEN7,MESSNUMB
            GOTO      RCIS1500
          ENDIF
.
          MATCH     "A21",H7CIMETP               * I/P On-leave ?
          IF        @EQUAL
            MOVE      TEN8,MESSNUMB
            GOTO      RCIS1500
          ENDIF
.
          MATCH     "A22",H7CIMETP               * I/P return from leave ?
          IF        @EQUAL
            MOVE      TEN9,MESSNUMB
            GOTO      RCIS1500
          ENDIF
.
          MATCH     "A27",H7CIMETP               * I/P cancel pre-admit ?
          IF        @EQUAL
            MOVE      TWENTY,MESSNUMB
            GOTO      RCIS1500
          ENDIF
.
          MATCH     "A28",H7CIMETP               * register pmi ?
          IF        @EQUAL
            MOVE      TWENTY1,MESSNUMB
            GOTO      RCIS1500
          ENDIF
.
          MATCH     "A31",H7CIMETP               * update pmi ?
          IF        @EQUAL
            MOVE      TWENTY2,MESSNUMB
            GOTO      RCIS1500
          ENDIF
.
          MATCH     "A34",H7CIMETP               * merge ?
          IF        @EQUAL
            MOVE      TWENTY3,MESSNUMB
            GOTO      RCIS1500
          ENDIF
.
          MATCH     "A37",H7CIMETP               * UnMerge ?
          IF        @EQUAL
            MOVE      FIFTY,MESSNUMB
            GOTO      RCIS1500
          ENDIF
.
          MATCH     "A38",H7CIMETP               * cancel booking ?
          GOTO      RCIS1080 IF NOT EQUAL        * no
.
          MOVE      H7CIMESI,KEY20
          CALL      RAOTQUE1
          IF        OVRCD = 0
            MOVE      TWENTY4,MESSNUMB           * O/P
            GOTO      RCIS1500
          ENDIF
.
          MOVE      H7CIMESI,KEY20
          CALL      RAWTQUE1
          IF        OVRCD = 0
            MOVE      FORTY,MESSNUMB             * W/L
            GOTO      RCIS1500
          ENDIF
          GOTO      RCIS7500
.
.         A44's for I/P, O/P and EMR are all generated from the same web
.         server, so we need to check the data holding tables to see what
.         system this message relates to.
.         Also check for W/L and A/H change UR.
.
RCIS1080  MATCH     "A44",H7CIMETP               * Change U/R for visit ?
          GOTO      RCIS1090 IF NOT EQUAL        * no
.
          MOVE      H7CIMESI,KEY20               * yes
          CALL      RAALQUE1
          IF        OVRCD = 0
            MOVE      FORTY6,MESSNUMB            * A/H Referral
            GOTO      RCIS1500
          ENDIF
.
          MOVE      H7CIMESI,KEY20               * yes
          CALL      RAWTQUE1
          IF        OVRCD = 0
            MOVE      FORTY2,MESSNUMB            * W/L
            GOTO      RCIS1500
          ENDIF
.
          MOVE      H7CIMESI,KEY20
          CALL      RAOTQUE1
          IF        OVRCD = 0
            MOVE      TWENTY6,MESSNUMB           * O/P
            GOTO      RCIS1500
          ENDIF
.
          MOVE      H7CIMESI,KEY20
          CALL      RAEMQUE1
          IF        OVRCD = 0
            MOVE      TWENTY7,MESSNUMB           * Emergency
            GOTO      RCIS1500
          ENDIF
.
          PACK      KEY22,H7CIMESI,SP1,ONE
          CALL      RAPMQVI1
          IF        OVRCD = 0
            MOVE      TWENTY5,MESSNUMB           * I/P
            GOTO      RCIS1500
          ENDIF
          GOTO      RCIS7500
.
.         M02 - Staff/Practitioner Master File Message
.
RCIS1090  MATCH     "M02",H7CIMETP               * doctor message ?
          IF        @EQUAL
            MOVE      TWENTY8,MESSNUMB
            GOTO      RCIS1500
          ENDIF
.
.         S12 - Notification of New Appointment Booking
.
          MATCH     "S12",H7CIMETP               * new booking message ?
          IF        @EQUAL
            MOVE      TWENTY9,MESSNUMB
            GOTO      RCIS1500
          ENDIF
.
.         S14 - Notification of Appointment Modification
.
          MATCH     "S14",H7CIMETP               * change booking message ?
          IF        @EQUAL
            MOVE      THIRTY,MESSNUMB
            GOTO      RCIS1500
          ENDIF
.
.         S15 - Notification of Appointment Cancellation
.
          MATCH     "S15",H7CIMETP               * cancel booking message ?
          IF        @EQUAL
            MOVE      THIRTY1,MESSNUMB
            GOTO      RCIS1500
          ENDIF
.
.         I12 - Add A/H Referral or Add W/L entry
.
          MATCH     "I12",H7CIMETP               * I12 message ?
          GOTO      RCIS1100 IF NOT EQUAL        * no
.
          MOVE      H7CIMESI,KEY20
          CALL      RAALQUE1
          IF        OVRCD = 0
            MOVE      THIRTY2,MESSNUMB           * Add A/H Referral
            GOTO      RCIS1500
          ENDIF
.
          MOVE      H7CIMESI,KEY20
          CALL      RAWTQUE1
          IF        OVRCD = 0
            MOVE      FORTY7,MESSNUMB            * Add W/L entry
            GOTO      RCIS1500
          ENDIF
.
.         I13 - Change A/H Referral or Update W/L entry
.
RCIS1100  MATCH     "I13",H7CIMETP               * I13 message ?
          GOTO      RCIS1110 IF NOT EQUAL        * no
.
          MOVE      H7CIMESI,KEY20
          CALL      RAALQUE1
          IF        OVRCD = 0
            MOVE      THIRTY3,MESSNUMB           * Change A/H Referral
            GOTO      RCIS1500
          ENDIF
.
          MOVE      H7CIMESI,KEY20
          CALL      RAWTQUE1
          IF        OVRCD = 0
            MOVE      FORTY8,MESSNUMB            * Update W/L entry
            GOTO      RCIS1500
          ENDIF
.
.         I14 - Delete A/H Referral or Remove W/L entry
.
RCIS1110  MATCH     "I14",H7CIMETP               * I14 message ?
          GOTO      RCIS1120 IF NOT EQUAL        * no
.
          MOVE      H7CIMESI,KEY20
          CALL      RAALQUE1
          IF        OVRCD = 0
            MOVE      THIRTY4,MESSNUMB           * Delete A/H Referral
            GOTO      RCIS1500
          ENDIF
.
          MOVE      H7CIMESI,KEY20
          CALL      RAWTQUE1
          IF        OVRCD = 0
            MOVE      FORTY9,MESSNUMB            * Remove W/L entry
            GOTO      RCIS1500
          ENDIF
.
.         M01 - O/P Clinic Master File Message
.
RCIS1120  MATCH     "M01",H7CIMETP               * O/P master file message ?
          IF        @EQUAL
            MOVE      FORTY1,MESSNUMB            * yes
            GOTO      RCIS1500
          ENDIF
.
          GOTO      RCIS9700                     * invalid message type
.
.         Get the PMI details from pmsqptaf (except for M01/M02 messages),
.         then check if the message needs to be put on hold.
.
RCIS1500  IF        MESSNUMB <> 28 & MESSNUMB <> 41
            CALL      CKUR0000                   * U/R ok ?
            BRANCH    EXIT,RCIS0500:             * message to be held
                           RCIS9300:             * PMI details not found
                           RCIS7000:             * zero U/R number
                           RCIS7100              * temporary U/R number
          ENDIF
.
.         If this is an A31 message and we are using the alternate Axx message,
.         then call the A08X0000 routine instead of the standard A31P0000
.         routine
.
          IF        MESSNUMB = 22
            MATCH     SP2,PTCNA31X
            IF        !@EQUAL
              MOVE      ONE,A08XFLAG             * set flag for A31 alternative
              CALL      A08X0000                 * format & send Axx message
.
              COMPARE   SEVEN,EXIT               * visits on file for patient ?
              GOTO      RCIS1600 IF NOT EQUAL    * yes - Axx processed
              MOVE      ZERO,A08XFLAG            * no - revert backto A31
            ENDIF
          ENDIF
.
          IF        SEDIFLAG = 1
            CALL      EDIO0000                   * open edi file if required
          ENDIF
.
.         Call the appropriate routine for the message type.  This will
.         format and send the relevant segments/fields
.
          PERFORM   MESSNUMB,A01A0000:           * admit
                             A02A0000:           * transfer
                             A03A0000:           * I/P discharge
                             A03E0000:           * Emergency discharge
                             A04O0000:           * O/P Attendance
                             A04E0000:           * Emergency attendance
                             A05O0000:           * O/P Booking
                             A08A0000:           * Update I/P visit
                             A08O0000:           * Update O/P visit
                             A08E0000:           * Update Emergency visit
                             A11A0000:           * Cancel Admit
                             A11O0000:           * Unattend O/P 
                             A11E0000:           * Cancel Emergency Visit
                             A12A0000:           * Cancel transfer
                             A13A0000:           * Cancel I/P discharge
                             A13E0000:           * Cancel Emergency discharge
                             A14A0000:           * Pre-admit
                             A21A0000:           * On-leave
                             A22A0000:           * Return from leave
                             A27A0000:           * Cancel pre-admit
                             A28P0000:           * Register PMI
                             A31P0000:           * Update PMI
                             A34P0000:           * Merge PMI
                             A38O0000:           * Cancel O/P booking
                             A44A0000:           * Change U/R for I/P visit
                             A44O0000:           * Change U/R for O/P visit
                             A44E0000:           * Change U/R for Emerg. visit
                             M02P0000:           * Practitioner Master File
                             S12A0000:           * New Theatre Booking
                             S14A0000:           * Change Theatre Booking
                             S15A0000:           * Cancel Theatre Booking
                             I12L0000:           * Add Allied Health Referral
                             I13L0000:           * Change Allied Health Referral
                             I14L0000:           * Cancel Allied Health Referral
                             A03L0000:           * Allied Health Encounter
                             A08L0000:           * Modify All. Health Encounter
                             A13L0000:           * Cancel All. Health Encounter
                             A05W0000:           * W/L Booking
                             A08W0000:           * W/L Booking Update
                             A38W0000:           * W/L Cancel Booking
                             M01O0000:           * O/P Clinic Master/Type Maint.
                             A44W0000:           * Change U/R for Waiting List
                             A02W0000:           * W/L Transfer
                             A03O0000:           * O/P Discharge
                             A13O0000:           * Cancel O/P Discharge
                             A44L0000:           * Change U/R for A/H Referral
                             I12W0000:           * Add W/L entry
                             I13W0000:           * Update W/L entry
                             I14W0000:           * Remove W/L entry
                             A37P0000            * UnMerge PMI
.
RCIS1600  BRANCH    EXIT,RCIS9100:               * connection lost
                         RCIS9200:               * timeout
                         RCIS9400:               * error getting pmsqviaf data
                         RCIS9500:               * error getting outqueaf data
                         RCIS9800:               * error getting emrqueaf data
                         RCIS9900:               * error getting pmsqdraf data
                         RCIS9901:               * error getting oprqueaf data
                         RCIS9902:               * error getting allqueaf data
                         RCIS9903                * error getting wat/qma  data
.
.         Finish sending message with an end of block character and carriage
.         return
.
          IF        DISPFLAG = 1
            DISPLAY   "Sending end of message [",*HON,ENDBLOCK,ASK:
                      *HOFF,"]   (* = carriage return)",*R,*N;
          ENDIF
.
          MATCH     "2",IBCNUCIS
          GOTO      RCIS1900 IF EQUAL            * using EDI only
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF SIGPIPE
          WRITE     COMSOCKT,2,RPLYTIME;ENDBLOCK,CRETURN
          TRAPCLR   SIGPIPE            
          GOTO      RCIS9210 IF TIMEOUT          * timeout expired
          BRANCH    OVRCD,RCIS9110               * connection lost
.
.         Message sent successfully
.
          IF        DISPFLAG = 1
            DISPLAY   "[",H7CIMETP,"] message sent successfully",*R,*N:
                      "----------------------------------------":
                      "----------------------------------------":
                      *R,*N,*R,*N:
                      "Waiting for acknowledgement....",*R,*N;
          ENDIF
.
RCIS1900  MOVE      TWO,MLOGFLAG
          PACK      ERORTEXT,ENDBLOCK,CRETURN
          CALL      LOGM0000                     * write to log file
          IF        SEDIFLAG = 1
.davvy      WRITE     SEDIFILE,SEQ;*+,ERORTEXT;  * write end of block to edi
          ENDIF
.
          MATCH     "2",IBCNUCIS
          GOTO      RCIS6800 IF EQUAL            * using EDI only
.
          MOVE      SP70,ERORTEXT                * blank line
          CALL      LOGM0000                     * write to log file
.
          MOVE      "Waiting for acknowledgment",ERORTEXT
          CALL      LOGM0000                     * write to log file
.
.         Now wait for an acknowledgement message from Third Party.
.
RCIS2000  MOVE      ZERO,MTCHFLAG                * init. message id match flag
          PACK      RECVMESS,SP100,SP100,SP100,SP100,SP100,SP100,SP100,SP100:
                             SP100,SP100
          CLEAR     RECVMESS                     * clear full message buffer
          MOVE      ZERO,ERORFLAG                * initialise error flag
          CALL      GTSTR000                     * get next 127 chars (or less)
          BRANCH    EXIT,RCIS9250:               * timeout
                         RCIS9120                * connection lost
.
.         Search the string for a start of block (ASCII 11) character
.
RCIS3000  SCAN      STRTBLOK,TMPSTRNG            * sob found ?
          GOTO      RCIS2000 IF NOT EQUAL        * no - ignore message
.
          IF        DISPFLAG = 1
            DISPLAY   "Start of Block found",*R,*N;
          ENDIF
.
.         The next segment needs to be processed, so read in the next segment id
.
RCIS4000  CALL      GSEG0000                     * segment code read
          BRANCH    EXIT,RCIS9250:               * connection timeout
                         RCIS9120:               * connection lost
                         RCIS4000:               * start of block
                         RCIS6000:               * end of block
                         RCIS4000                * end of segment
.
          IF        DISPFLAG = 1
            DISPLAY   "Processing segment: [",SEGMENT,"]",*R,*N;
          ENDIF
          MOVE      TWO,MLOGFLAG
          MOVE      "Received ",ERORTEXT
          ENDSET    ERORTEXT
          APPEND    SEGMENT,ERORTEXT
          RESET     ERORTEXT
          CALL      LOGM0000                     * write to log file
.
.
.         We need to validate the segment for the message type, and
.         make sure that the segment is in the correct sequence for the
.         message
.
          CALL      VSEG0000                     * validate segment
          IF        EXIT = 1
            IF        DISPFLAG = 1
              DISPLAY   "Invalid segment received: [",SEGMENT,"] - Message":
                        "unsuccessful",*R,*N;
            ENDIF
            MOVE      TWO,MLOGFLAG
            MOVE      "Invalid segment received",ERORTEXT
            CALL      LOGM0000                     * write to log file
.
            GOTO      RCIS0500
          ENDIF
.
.         If a valid segment id has been found, clear the segment fields
.
          PERFORM   SEGNUMBR,CLMSH000:           * MSH
                             CLMSA000:           * MSA
                             CLERR000            * ERR
.
          MOVE      ZERO,FIELDNO                 * initialise seg. field count
.
.         Read in the rest of the segment until an end of segment character
.         (ASCII 13 - Carriage return) is found.
.
RCIS5000  CALL      GCHR0000                     * get next character in message
          BRANCH    EXIT,RCIS9250:               * connection timeout
                         RCIS9120:               * connection lost
                         RCIS4000:               * start of block
                         RCIS5500:               * end of block
                         RCIS5500:               * end of segment
                         RCIS9990                * no field separator
.
.         A valid character has been found so load it into the relevant
.         segment field (according to FIELDNO).
.
          PERFORM   SEGNUMBR,LMSH0000:           * MSH
                             LMSA0000:           * MSA
                             LERR0000            * ERR
.
          GOTO      RCIS5000
.
.         The end of segment has been found, so reset all the segment fields.
.
RCIS5500  PERFORM   SEGNUMBR,RMSH0000:           * MSH
                             RMSA0000:           * MSA
                             RERR0000            * ERR
.
          IF        DISPFLAG = 1
            DISPLAY   "Validating segment content: [",SEGMENT,"]",*R,*N;
          ENDIF
.
.         Validate that the segments mandatory fields have been populated
.
          PERFORM   SEGNUMBR,VMSH0000:           * MSH
                             VMSA0000:           * MSA
                             VERR0000            * ERR
.
          BRANCH    MTCHFLAG,RCIS2000            * message id doesn't match
.
          IF        DISPFLAG = 1
            IF        ERORFLAG = 1
              DISPLAY   "[",SEGMENT,"] segment content invalid",*R,*N;
            ELSE
              DISPLAY   "[",SEGMENT,"] segment content validated",*R,*N;
            ENDIF
          ENDIF
.
          MATCH     ANS,ENDBLOCK                 * end of block received ?
          GOTO      RCIS4000 IF NOT EQUAL        * no - get next segment
.
.         The end of message (EOB) has been found
.
RCIS6000  RESET     RECVMESS
          IF        DISPFLAG = 1
            DISPLAY   "End of Block received",*R,*N;  * display full message
            STRIP     RECVMESS
            MOVE      ZERO,COUNTR
            MOVELPTR  RECVMESS,FORM3
            DISPLAY   *R,*N:
                      "----------------------------------------":
                      "----------------------------------------",*R,*N:
                      "Full Message received is ",FORM3," bytes (excluding ":
                      "control characters):",*R,*N,*R,*N;
            WHILE     FORM3 > 0
              ADD       ONE,COUNTR
              MATCH     CRETURN,RECVMESS
              IF        @EQUAL
                DISPLAY   *R,*N,*R,*N;
                MOVE      ZERO,COUNTR
              ELSE
                MOVE      RECVMESS,ANS
                DISPLAY   *HON,ANS,*HOFF;
                IF        COUNTR = 80
                  DISPLAY   *R,*N;
                  MOVE      ZERO,COUNTR
                ENDIF
              ENDIF
              SUB       ONE,FORM3
              BUMP      RECVMESS
            DO
            DISPLAY   *R,*N:
                      "----------------------------------------":
                      "----------------------------------------":
                      *R,*N,*R,*N;
            RESET     RECVMESS
          ENDIF
.
          MOVE      THREE,MLOGFLAG               * set flag for full ack.message
          CALL      LOGM0000                     * log message if required
.
.         Check if there was an error in validation of ACK message.
.         If there was, then resend the message.
.
          BRANCH    ERORFLAG,RCIS8100            * error - retry
.
.         The ACK message has been validated.
.         Now check what the acknowledgement code (MSA001) was (accept or
.         error)
.
          MATCH     "AA",MSA001                  * Acknowledge Accept ?
          GOTO      RCIS8000 IF NOT EQUAL        * no
.
RCIS6800  MOVE      H7CIMESI,KEY20               * yes - update status
          CALL      RDH7CIS1                     * read record on index 1
          BRANCH    OVRCD,RCIS0500               * shouldn't happen
.
          CALL      IBACLOCK                     * update status to "delivered"
          PACK      H7CIDDAT,CCC,CYY,CMM,CDD,CTIMEIS
          REP       " 0",H7CIDDAT
          MOVE      ANSD,H7CISTAT
          CALL      UPH7CIS1
.
.         The message has been successfully sent, so update the stats if
.         not running interactive mode
.
          IF        DISPFLAG = 1
            DISPLAY   "Message successfully processed",*R,*N;
            DISPLAY   "Waiting for next message....",*R,*N;
          ELSE
            CALL      USST0000                   * update sent stats
            DISPLAY   *P22:5,SP20,*P22:5,*V2LON,*HON,"Waiting";
          ENDIF
          MOVE      ZERO,NUMRETRY                * re-initialise retry counter
.
          IF        SEDIFLAG = 1
            CALL      MVFL0000                   * move message to edi directory
            BRANCH    EXIT,RCIS9160              * failed to move edi file
          ENDIF
.
          GOTO      RCIS0500                     * get next message
.
.         Zero U/R, so set to "Rejected"
.
RCIS7000  IF        DISPFLAG = 1
            DISPLAY   "Zero U/R Number",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,"Zero U/R Number - not processed":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
          MOVE      TWO,MLOGFLAG
          MOVE      "Zero U/R number - not processed",ERORTEXT
          CALL      LOGM0000                     * log message if required
.
          MOVE      "Zero_U/R_Number",ERRMESSG
          MOVE      ONE,ERRNUMBR                 * set error number
          ASSIGN    (RETRYNUM-1),NUMRETRY        * don't resend
          CALL      EROR0000
          GOTO      RCIS0500                     * get next waiting record
.
.         Temporary U/R, so set to "Rejected"
.
RCIS7100  IF        DISPFLAG = 1
            DISPLAY   "Temporary U/R Number",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,"Temp U/R Number - not processed":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
          MOVE      TWO,MLOGFLAG
          MOVE      "Temporary U/R number - not processed",ERORTEXT
          CALL      LOGM0000                     * log message if required
.
          MOVE      "Temporary_U/R_Number",ERRMESSG
          MOVE      TEN8,ERRNUMBR                * set error number
          ASSIGN    (RETRYNUM-1),NUMRETRY        * don't resend
          CALL      EROR0000
          GOTO      RCIS0500                     * get next waiting record
.
.         No holding table data found where the same message type is used
.         across multiple systems (eg I/P, O/P, Emergency & A/H all use
.         the A08 message)
.
RCIS7500  IF        DISPFLAG = 1
            DISPLAY   H7CIMETP," visit holding record not found - Message ":
                      "unsuccessful",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,H7CIMETP," visit holding record not found":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
.
          MOVE      H7CIURNO,PURNO               
          MOVE      TWO,MLOGFLAG
          MOVE      "Visit holding record not found",ERORTEXT
          CALL      LOGM0000                     * log message if required
.
          MOVE      "Visit_holding_record_not_found",ERRMESSG
          MOVE      TEN5,ERRNUMBR                * set error number
          ASSIGN    (RETRYNUM-1),NUMRETRY        * don't resend
          CALL      EROR0000
          GOTO      RCIS0500
.
.         Negative Acknowledgement received
.
RCIS8000  IF        DISPFLAG = 1
            DISPLAY   "Negative Acknowledgement Received - Message ":
                      "unsuccessful",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,"Negative Acknowledgement Received":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
.
          MOVE      TWO,MLOGFLAG
          MOVE      "Negative Acknowledgement Received",ERORTEXT
          CALL      LOGM0000                     * log message if required
.
          MOVE      "Negative_Acknowledgement_Received",ERRMESSG
          MOVE      TWO,ERRNUMBR                 * set error number
          CALL      EROR0000
          GOTO      RCIS0500
.
.         Invalid acknowledgement message received (one or more MHS and/or
.         MSA fields was invalid).
.
RCIS8100  IF        DISPFLAG = 1
            DISPLAY   "Invalid Acknowledgement Received - Message ":
                      "unsuccessful",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,"Invalid Acknowledgement Received":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
.
          MOVE      TWO,MLOGFLAG
          MOVE      "Invalid Acknowledgement Received",ERORTEXT
          CALL      LOGM0000                     * log message if required
.
          MOVE      "Invalid_Acknowledgement_Received",ERRMESSG
          MOVE      TEN1,ERRNUMBR                 * set error number
          CALL      EROR0000
          GOTO      RCIS0500
.
.         No Connection when sending message
.
RCIS9100  IF        DISPFLAG = 1
            DISPLAY   "Connection lost - Message unsuccessful",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,"Connection lost":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
          MOVE      TWO,MLOGFLAG
          MOVE      "Connection lost writing ",ERORTEXT
          ENDSET    ERORTEXT
          APPEND    SEGMENT,ERORTEXT
          APPEND    " of ",ERORTEXT
          APPEND    MSH009,ERORTEXT
          RESET     ERORTEXT
          CALL      LOGM0000                     * log message if required
.           
          MOVE      "Connection_lost_on_",ERRMESSG
          GOTO      RCIS9150
.
.         No Connection when sending end of message
.
RCIS9110  IF        DISPFLAG = 1
            DISPLAY   "Connection lost - Message unsuccessful",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,"Connection lost":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
          MOVE      TWO,MLOGFLAG
          MOVE      "Connection lost writing end of message",ERORTEXT
          CALL      LOGM0000                     * log message if required
.           
          MOVE      "Connection_lost_on_",ERRMESSG
          GOTO      RCIS9150
.
.         No Connection when receiving response
.
RCIS9120  IF        DISPFLAG = 1
            DISPLAY   "Connection lost - Message unsuccessful",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,"Connection lost":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
          MOVE      TWO,MLOGFLAG
          MOVE      "Connection lost waiting for acknowledgment",ERORTEXT
          CALL      LOGM0000                     * write to log file
.
          MOVE      "Connection_lost_on_",ERRMESSG
.
.         If this is the first time that the connection failed, send an
.         email warning
.
RCIS9150  IF        CONNFLAG = 0
            MOVE      "Not_Applicable",MESSAGID
            ENDSET    ERRMESSG
            APPEND    TCPIPORT,ERRMESSG
            RESET     ERRMESSG
            CALL      ALTUSR00                   * send email warning
            MOVE      ONE,CONNFLAG               * don't send email again
          ENDIF
          GOTO      RCIS9990
.
RCIS9160  IF        EDIMFLAG = 0
            MOVE      H7CIMESI,MESSAGID          * error moving edi file
            RESET     ERRMESSG
            CALL      ALTUSR00                   * send email warning
            MOVE      ONE,EDIMFLAG               * don't send email again
          ENDIF
          GOTO      RCIS0500
.
.         Timeout writing to socket
.
RCIS9200  IF        DISPFLAG = 1
            DISPLAY   "Timeout writing to socket - Message ":
                      "unsuccessful",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,"Timeout writing to socket":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
          MOVE      TWO,MLOGFLAG
          MOVE      "Timeout writing ",ERORTEXT
          ENDSET    ERORTEXT
          APPEND    SEGMENT,ERORTEXT
          APPEND    " of ",ERORTEXT
          APPEND    MSH009,ERORTEXT
          APPEND    " to socket",ERORTEXT
          RESET     ERORTEXT
          CALL      LOGM0000                     * log message if required
.
          MOVE      "Timeout_writing_to_socket",ERRMESSG
          MOVE      THREE,ERRNUMBR               * set error number
          CALL      EROR0000
          GOTO      RCIS9990
.
.         Timeout writing end of message to socket
.
RCIS9210  IF        DISPFLAG = 1
            DISPLAY   "Timeout writing end of message to socket - Message ":
                      "unsuccessful",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,"Timeout writing end of message to socket":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
          MOVE      TWO,MLOGFLAG
          MOVE      "Timeout writing end of message to socket",ERORTEXT
          CALL      LOGM0000                     * log message if required
.
          MOVE      "Timeout_writing_end_of_message_to_socket",ERRMESSG
          MOVE      THREE,ERRNUMBR               * set error number
          CALL      EROR0000
          GOTO      RCIS9990
.
.         Timeout waiting for response
.
RCIS9250  IF        DISPFLAG = 1
            DISPLAY   "Timeout waiting for response - Message ":
                      "unsuccessful",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,"Timeout waiting for response":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
          MOVE      TWO,MLOGFLAG
          MOVE      "Timeout waiting for response",ERORTEXT
          CALL      LOGM0000                     * write to log file
.
          MOVE      "Timeout_waiting_for_response",ERRMESSG
          MOVE      FOUR,ERRNUMBR                * set error number
          CALL      EROR0000
          GOTO      RCIS9990
.
.         No pmsqptaf record
.
RCIS9300  IF        DISPFLAG = 1
            DISPLAY   "Error retrieving pmsqptaf data - Message ":
                      "unsuccessful",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,"Error retrieving pmsqptaf data":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
.
          MOVE      H7CIURNO,PURNO
          MOVE      TWO,MLOGFLAG
          MOVE      "pmsqptaf record missing",ERORTEXT
          CALL      LOGM0000                     * log message if required
.
          MOVE      "Error_retrieving_pmsqptaf_data",ERRMESSG
          MOVE      FIVE,ERRNUMBR                * set error number
          ASSIGN    (RETRYNUM-1),NUMRETRY        * don't resend
          CALL      EROR0000
          GOTO      RCIS0500
.
.         No pmsqviaf record
.
RCIS9400  IF        DISPFLAG = 1
            DISPLAY   "Error retrieving pmsqviaf data - Message ":
                      "unsuccessful",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,"Error retrieving pmsqviaf data":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
          MOVE      TWO,MLOGFLAG
          MOVE      "pmsqviaf record missing",ERORTEXT
          CALL      LOGM0000                     * log message if required
.
          MOVE      "Error_retrieving_pmsqviaf_data",ERRMESSG
          MOVE      SIX,ERRNUMBR                 * set error number
          ASSIGN    (RETRYNUM-1),NUMRETRY        * don't resend
          CALL      EROR0000
          GOTO      RCIS0500
.
.         No outqueaf record
.
RCIS9500  IF        DISPFLAG = 1
            DISPLAY   "Error retrieving outqueaf data - Message ":
                      "unsuccessful",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,"Error retrieving outqueaf data":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
          MOVE      TWO,MLOGFLAG
          MOVE      "outqueaf record missing",ERORTEXT
          CALL      LOGM0000                     * log message if required
.
          MOVE      "Error_retrieving_outqueaf_data",ERRMESSG
          MOVE      SEVEN,ERRNUMBR               * set error number
          ASSIGN    (RETRYNUM-1),NUMRETRY        * don't resend
          CALL      EROR0000
          GOTO      RCIS0500
.
.         Message id in reply not valid
.
RCIS9600  IF        DISPFLAG = 1
            DISPLAY   "Message Id in reply does not match - Message ":
                      "unsuccessful",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,"Message Id in reply does not match":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
.
          MOVE      TWO,MLOGFLAG
          MOVE      "Message Id in reply does not match",ERORTEXT
          CALL      LOGM0000                     * log message if required
.
          MOVE      "Message_Id_in_reply_does_not_match",ERRMESSG
          MOVE      EIGHT,ERRNUMBR               * set error number
          CALL      EROR0000
          GOTO      RCIS9990
.
.         Message Type not valid
.
RCIS9700  IF        DISPFLAG = 1
            DISPLAY   H7CIMETP," message type not valid - Message ":
                      "unsuccessful",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,H7CIMETP," message type is not valid":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
.
          MOVE      TWO,MLOGFLAG
          MOVE      "Message type is not valid",ERORTEXT
          CALL      LOGM0000                     * log message if required
.
          MOVE      "Message_Type_is_not_valid",ERRMESSG
          MOVE      NINE,ERRNUMBR                * set error number
          ASSIGN    (RETRYNUM-1),NUMRETRY        * don't resend
          CALL      EROR0000
          GOTO      RCIS0500
.
.         No emrqueaf record
.
RCIS9800  IF        DISPFLAG = 1
            DISPLAY   "Error retrieving emrqueaf data - Message ":
                      "unsuccessful",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,"Error retrieving emrqueaf data":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
          MOVE      TWO,MLOGFLAG
          MOVE      "emrqueaf record missing",ERORTEXT
          CALL      LOGM0000                     * log message if required
.
          MOVE      "Error_retrieving_emrqueaf_data",ERRMESSG
          MOVE      TEN,ERRNUMBR                 * set error number
          ASSIGN    (RETRYNUM-1),NUMRETRY        * don't resend
          CALL      EROR0000
          GOTO      RCIS0500
.
.         No pmsqdraf record
.
RCIS9900  IF        DISPFLAG = 1
            DISPLAY   "Error retrieving pmsqdraf data - Message ":
                      "unsuccessful",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,"Error retrieving pmsqdraf data":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
          MOVE      TWO,MLOGFLAG
          MOVE      "pmsqdraf record missing",ERORTEXT
          CALL      LOGM0000                     * log message if required
.
          MOVE      "Error_retrieving_pmsqdraf_data",ERRMESSG
          MOVE      TEN2,ERRNUMBR                * set error number
          ASSIGN    (RETRYNUM-1),NUMRETRY        * don't resend
          CALL      EROR0000
          GOTO      RCIS0500
.
.         No oprqueaf record
.
RCIS9901  IF        DISPFLAG = 1
            DISPLAY   "Error retrieving oprqueaf data - Message ":
                      "unsuccessful",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,"Error retrieving oprqueaf data":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
          MOVE      TWO,MLOGFLAG
          MOVE      "oprqueaf record missing",ERORTEXT
          CALL      LOGM0000                     * log message if required
.
          MOVE      "Error_retrieving_oprqueaf_data",ERRMESSG
          MOVE      TEN3,ERRNUMBR                * set error number
          ASSIGN    (RETRYNUM-1),NUMRETRY        * don't resend
          CALL      EROR0000
          GOTO      RCIS0500
.
.         No allqueaf record
.
RCIS9902  IF        DISPFLAG = 1
            DISPLAY   "Error retrieving allqueaf data - Message ":
                      "unsuccessful",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,"Error retrieving allqueaf data":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
          MOVE      TWO,MLOGFLAG
          MOVE      "allqueaf record missing",ERORTEXT
          CALL      LOGM0000                     * log message if required
.
          MOVE      "Error_retrieving_allqueaf_data",ERRMESSG
          MOVE      TEN4,ERRNUMBR                * set error number
          ASSIGN    (RETRYNUM-1),NUMRETRY        * don't resend
          CALL      EROR0000
          GOTO      RCIS0500
.
RCIS9903  IF        EXIT2=10
            GOTO      RCIS9904                   * watque error
          ENDIF
          IF        EXIT2=11
            GOTO      RCIS9905                   * outqma/qty error
          ENDIF
          GOTO      RCIS0500
.
.         No watqueaf record
.
RCIS9904  IF        DISPFLAG = 1
            DISPLAY   "Error retrieving watqueaf data - Message ":
                      "unsuccessful",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,"Error retrieving watqueaf data":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
          MOVE      TWO,MLOGFLAG
          MOVE      "watqueaf record missing",ERORTEXT
          CALL      LOGM0000                     * log message if required
.
          MOVE      "Error_retrieving_watqueaf_data",ERRMESSG
          MOVE      TEN6,ERRNUMBR                * set error number
          ASSIGN    (RETRYNUM-1),NUMRETRY        * don't resend
          CALL      EROR0000
          GOTO      RCIS0500
.
.         No outqma/qtyaf record
.
RCIS9905  IF        DISPFLAG = 1
            DISPLAY   "Error retrieving outpatient clinic data - Message ":
                      "unsuccessful",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,"Error retrieving outqma/qty data":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
          MOVE      TWO,MLOGFLAG
          MOVE      "outqma/qty record missing",ERORTEXT
          CALL      LOGM0000                     * log message if required
.
          MOVE      "Error_retrieving_outpatient_clinic_data",ERRMESSG
          MOVE      TEN7,ERRNUMBR                * set error number
          ASSIGN    (RETRYNUM-1),NUMRETRY        * don't resend
          CALL      EROR0000
          GOTO      RCIS0500
.
.         No patient visits (Axx)
.
RCIS9910  IF        DISPFLAG = 1
            DISPLAY   "No patient visits on file (Axx) - Message ":
                      "deleted",*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,"No patient visits on file (Axx)":
                      *P2:23,SP70;
            VLINE     *G39,39,7,23
          ENDIF
.
.         As there are no patient visits on file, we cannot send an A08 message
.         so delete the message
.
          MOVE      H7CIMESI,KEY20
          CALL      DEH7CIS1                     * delete hl7cisaf record
.
          MOVE      H7CIMESI,KEY20
          CALL      DEPMQPT1                     * delete pmsqptaf record
.
          GOTO      RCIS0500                     * get next message
.
RCIS9990  MATCH     "2",IBCNUCIS
          GOTO      RCIS9999 IF EQUAL            * using EDI only
.
          CLOSE     COMSOCKT                     * close socket then exit
.
          MOVE      TWO,MLOGFLAG
          MOVE      "Disconnecting from socket",ERORTEXT
          CALL      LOGM0000                     * log message if required
.           
RCIS9999  RETURN
+
.*****************************************************************************
.*                          EROR0000               Called by: RCIS0000       *
.*       An error occurred sending the current message, so check if this is  *
.*       the last retry, and if so, send an email alert via the alert script *
.* Requires: NUMRETRY - the number of attempts to send the current message.  *
.*           ERRMESSG - the error text to be emailed.                        *
.*           ERRNUMBR - the error number                                     *
.*****************************************************************************
.
EROR0000  ADD       ONE,NUMRETRY                 * increment retry count
.
          IF        (NUMRETRY = RETRYNUM) & (RETRYNUM <> 0)
            MOVE      H7CIMESI,MESSAGID
            SQUEEZE   MESSAGID
            CALL      ALTUSR00                   * send email warning
.
            BRANCH    ERRNUMBR,EROR1000:    *  1= zero U/R number
                               EROR1000:    *  2= neg. acknowledgement received
                               EROR9000:    *  3= timeout writing to socket
                               EROR9000:    *  4= timeout waiting for response
                               EROR1000:    *  5= error retrieving pmsqptaf
                               EROR1000:    *  6= error retrieving pmsqviaf
                               EROR1000:    *  7= error retrieving outqueaf
                               EROR1000:    *  8= wrong message id in reply
                               EROR1000:    *  9= message type not valid
                               EROR1000:    * 10= error retrieving emrqueaf
                               EROR1000:    * 11= invalid acknowledgement recvd
                               EROR1000:    * 12= error retrieving pmsqdraf
                               EROR1000:    * 13= error retrieving oprqueaf
                               EROR1000:    * 14= error retrieving allqueaf
                               EROR1000:    * 15= visit holding record not found
                               EROR1000:    * 16= error retrieving watqueaf
                               EROR1000:    * 17= error retrieving outqma/qty
                               EROR1000     * 18= temporary U/R number
.
EROR1000    MOVE      ZERO,NUMRETRY              * re-initialise retry counter
.
            MOVE      H7CIMESI,KEY20
            CALL      RDH7CIS1                   * read record on index 1
            BRANCH    OVRCD,EROR9999             * shouldn't happen
.
            MOVE      ANSR,H7CISTAT              * yes - set status to rejected
            CALL      UPH7CIS1                   * update record
.
            COMPARE   TWENTY8,MESSNUMB           * Dr Message ?
            GOTO      EROR2000 IF EQUAL          * yes
.
            MATCH     "1",PTCNRTUR
            IF        @EQUAL
              MATCH     "T-",PURNO                 * temporary U/R #?
              GOTO      EROR2000 IF EQUAL          * yes - don't log message
              MATCH     "T-",PMQPOURN              * temporary 'old' U/R #?
              GOTO      EROR2000 IF EQUAL          * yes - don't log message
            ENDIF
.
.           Write the U/R number (if not zero) to the U/R on hold table so 
.           that no more messages for this patient will be sent through.
.
            MATCH     ZEROURNO,PURNO             * zero U/R ?
            IF        !@EQUAL
              MOVE      PURNO,KEY8               * no
              CALL      RAH7URH1                 * U/R on file already ?
              IF        OVRCD = 1
                MOVE      PURNO,H7URNUMB
                CALL      WRH7URH1               * no - write new record
                MOVE      PURNO,DIM8
                SQUEEZE   DIM8
                IF        DISPFLAG = 1
                  DISPLAY   "UR ",DIM8," put on hold",*R,*N;
                ENDIF  
                MOVE      TWO,MLOGFLAG
                MOVE      "U/R ",ERORTEXT
                ENDSET    ERORTEXT
                APPEND    DIM8,ERORTEXT
                APPEND    " put on hold",ERORTEXT
                RESET     ERORTEXT
                CALL      LOGM0000               * log message if required
              ENDIF
            ENDIF
.
EROR2000    IF        DISPFLAG = 0
              CALL      URST0000                 * update rejected stats
            ENDIF
            GOTO      EROR9100
          ENDIF
.
EROR9000  IF        DISPFLAG = 0
            CALL      UFST0000                  * update failed stats
          ENDIF
.
EROR9100  IF        DISPFLAG = 0
            DISPLAY   *P22:5,SP20,*P22:5,*V2LON,*HON,"Waiting";
          ELSE
            DISPLAY   "Waiting for next message....",*R,*N;
          ENDIF
.
EROR9999  RETURN
+
.******************************************************************************
.*                                  A01A0000       Called by: RCIS0000        *
.*                       Write Admission Message                              *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record                       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A01A0000  PACK      KEY22,H7CIMESI,SP1,ONE
          CALL      RDPMQVI1                     * visit details found ?
          BRANCH    OVRCD,A01A9300               * no - error
.
          MOVE      AADMNO,VISNUMBR              * load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A01A9100:               * connection lost
                         A01A9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A01A9100:               * connection lost
                         A01A9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A01A9100:               * connection lost
                         A01A9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,A01A9100:               * connection lost
                         A01A9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A01A9100:               * connection lost
                         A01A9200                * timeout
          CALL      WPV20000                     * format PV2 segment
          BRANCH    EXIT,A01A9100:               * connection lost
                         A01A9200                * timeout
          CALL      WRAL1000                     * format & write AL1 segment
          BRANCH    EXIT,A01A9100:               * connection lost
                         A01A9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A01A9100:               * connection lost
                         A01A9200                * timeout
          CALL      WPR10000                     * format PR1 segment
          BRANCH    EXIT,A01A9100:               * connection lost
                         A01A9200                * timeout
          CALL      WGT10000                     * format GT1 segment
          BRANCH    EXIT,A01A9100:               * connection lost
                         A01A9200                * timeout
          CALL      WRIN1000                     * format IN1 segment
          BRANCH    EXIT,A01A9100:               * connection lost
                         A01A9200                * timeout
          CALL      WRZAL000                     * format & write ZAL segment
          BRANCH    EXIT,A01A9100:               * connection lost
                         A01A9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A01A9100:               * connection lost
                         A01A9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A01A9100:               * connection lost
                         A01A9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A01A9100:               * connection lost
                         A01A9200                * timeout
          CALL      WZBR0000                     * format ZBR segment
          BRANCH    EXIT,A01A9100:               * connection lost
                         A01A9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A01A9999
.
A01A9100  MOVE      ONE,EXIT
          GOTO      A01A9999
.
A01A9200  MOVE      TWO,EXIT
          GOTO      A01A9999
.
A01A9300  MOVE      THREE,EXIT
.
A01A9999  RETURN
+
.******************************************************************************
.*                                  A02A0000       Called by: RCIS0000        *
.*                       Write Transfer Message                               *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record                       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A02A0000  PACK      KEY22,H7CIMESI,SP1,ONE
          CALL      RDPMQVI1                     * visit details found ?
          BRANCH    OVRCD,A02A9300               * no - error
.
          MOVE      AADMNO,VISNUMBR              * load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A02A9100:               * connection lost
                         A02A9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A02A9100:               * connection lost
                         A02A9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A02A9100:               * connection lost
                         A02A9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A02A9100:               * connection lost
                         A02A9200                * timeout
          CALL      WPV20000                     * format PV2 segment
          BRANCH    EXIT,A02A9100:               * connection lost
                         A02A9200                * timeout
.
.         Check the CCDHB custom parameter to see if we need to send a DG1
.         segment in this message
.
          MATCH     "1",PTCNDGA2                 * sending DG1 & PR1 in A02 ?
          IF        @EQUAL
            CALL      WRDG1000                   * format DG1 segment
            BRANCH    EXIT,A02A9100:             * connection lost
                           A02A9200              * timeout
            CALL      WPR10000                   * format PR1 segment
            BRANCH    EXIT,A02A9100:             * connection lost
                           A02A9200              * timeout
          ENDIF
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A02A9100:               * connection lost
                         A02A9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A02A9100:               * connection lost
                         A02A9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A02A9100:               * connection lost
                         A02A9200                * timeout
          CALL      WZBR0000                     * format ZBR segment
          BRANCH    EXIT,A02A9100:               * connection lost
                         A02A9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A02A9999
.
A02A9100  MOVE      ONE,EXIT
          GOTO      A02A9999
.
A02A9200  MOVE      TWO,EXIT
          GOTO      A02A9999
.
A02A9300  MOVE      THREE,EXIT
.
A02A9999  RETURN
+
.******************************************************************************
.*                                  A03A0000       Called by: RCIS0000        *
.*                       Write I/P Discharge Message                          *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record                       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A03A0000  PACK      KEY22,H7CIMESI,SP1,ONE
          CALL      RDPMQVI1                     * visit details found ?
          BRANCH    OVRCD,A03A9300               * no - error
.
          MOVE      AADMNO,VISNUMBR              * load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A03A9100:               * connection lost
                         A03A9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A03A9100:               * connection lost
                         A03A9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A03A9100:               * connection lost
                         A03A9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A03A9100:               * connection lost
                         A03A9200                * timeout
          CALL      WPV20000                     * format PV2 segment
          BRANCH    EXIT,A03A9100:               * connection lost
                         A03A9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A03A9100:               * connection lost
                         A03A9200                * timeout
          CALL      WRDRG000                     * format DRG segment
          BRANCH    EXIT,A03A9100:               * connection lost
                         A03A9200                * timeout
          CALL      WPR10000                     * format PR1 segment
          BRANCH    EXIT,A03A9100:               * connection lost
                         A03A9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A03A9100:               * connection lost
                         A03A9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A03A9100:               * connection lost
                         A03A9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A03A9100:               * connection lost
                         A03A9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A03A9999
.
A03A9100  MOVE      ONE,EXIT
          GOTO      A03A9999
.
A03A9200  MOVE      TWO,EXIT
          GOTO      A03A9999
.
A03A9300  MOVE      THREE,EXIT
.
A03A9999  RETURN
+
.******************************************************************************
.*                                  A03E0000       Called by: RCIS0000        *
.*                       Write Emergency Discharge Message                    *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record                       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record                       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A03E0000  MOVE      H7CIMESI,KEY20            
          CALL      RDEMQUE1                     * emergency details found ?
          BRANCH    OVRCD,A03E9500               * no - error
.
          PACK      KEY22,H7CIMESI,SP1,ONE
          CALL      RDPMQVI1                     * visit details found ?
          BRANCH    OVRCD,A03E9300               * no - error
.
          MOVE      EMVIADMN,VISNUMBR            * load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A03E9100:               * connection lost
                         A03E9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A03E9100:               * connection lost
                         A03E9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A03E9100:               * connection lost
                         A03E9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A03E9100:               * connection lost
                         A03E9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A03E9100:               * connection lost
                         A03E9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A03E9100:               * connection lost
                         A03E9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A03E9100:               * connection lost
                         A03E9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A03E9100:               * connection lost
                         A03E9200                * timeout
          CALL      WZTR0000                     * format ZTR segment
          BRANCH    EXIT,A03E9100:               * connection lost
                         A03E9200                * timeout
          CALL      WZNT0000                     * format ZNT segment
          BRANCH    EXIT,A03E9100:               * connection lost
                         A03E9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A03E9999
.
A03E9100  MOVE      ONE,EXIT
          GOTO      A03E9999
.
A03E9200  MOVE      TWO,EXIT
          GOTO      A03E9999
.
A03E9300  MOVE      THREE,EXIT
          GOTO      A03E9999
.
A03E9500  MOVE      FIVE,EXIT
.
A03E9999  RETURN
+
.******************************************************************************
.*                                  A03L0000       Called by: RCIS0000        *
.*                       Write A/H Encounter                                  *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record                       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A03L0000  MOVE      H7CIMESI,KEY20            
          CALL      RDALQUE1                     * A/H details found ?
          BRANCH    OVRCD,A03L9800               * no - error
.
          MOVE      ALREVISN,VISNUMBR            * load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A03L9100:               * connection lost
                         A03L9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A03L9100:               * connection lost
                         A03L9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A03L9100:               * connection lost
                         A03L9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,A03L9100:               * connection lost
                         A03L9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A03L9100:               * connection lost
                         A03L9200                * timeout
          CALL      WRAL1000                     * format AL1 segment
          BRANCH    EXIT,A03L9100:               * connection lost
                         A03L9200                * timeout
          CALL      WPR10000                     * format PR1 segment
          BRANCH    EXIT,A03L9100:               * connection lost
                         A03L9200                * timeout
          CALL      WRZAL000                     * format ZAL segment
          BRANCH    EXIT,A03L9100:               * connection lost
                         A03L9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A03L9100:               * connection lost
                         A03L9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A03L9100:               * connection lost
                         A03L9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A03L9100:               * connection lost
                         A03L9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A03L9999
.
A03L9100  MOVE      ONE,EXIT
          GOTO      A03L9999
.
A03L9200  MOVE      TWO,EXIT
          GOTO      A03L9999
.
A03L9800  MOVE      EIGHT,EXIT
.
A03L9999  RETURN
+
.******************************************************************************
.*                                  A03O0000       Called by: RCIS0000        *
.*                             O/P Discharge                                  *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record                       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A03O0000  PACK      KEY20,H7CIMESI
          CALL      RDOTQUE1                     * visit details found ?
          BRANCH    OVRCD,A03O9400               * no - error
.
          MOVE      OBAOUTNO,VISNUMBR            * load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A03O9100:               * connection lost
                         A03O9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A03O9100:               * connection lost
                         A03O9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A03O9100:               * connection lost
                         A03O9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A03O9100:               * connection lost
                         A03O9200                * timeout
          CALL      WPV20000                     * format PV2 segment
          BRANCH    EXIT,A03O9100:               * connection lost
                         A03O9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A03O9100:               * connection lost
                         A03O9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A03O9100:               * connection lost
                         A03O9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A03O9100:               * connection lost
                         A03O9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A03O9100:               * connection lost
                         A03O9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A03O9999
.
A03O9100  MOVE      ONE,EXIT
          GOTO      A03O9999
.
A03O9200  MOVE      TWO,EXIT
          GOTO      A03O9999
.
A03O9400  MOVE      FOUR,EXIT
.
A03O9999  RETURN
+
.******************************************************************************
.*                                  A04O0000       Called by: RCIS0000        *
.*                       Write O/P Registration                               *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record                       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A04O0000  PACK      KEY20,H7CIMESI
          CALL      RDOTQUE1                     * visit details found ?
          BRANCH    OVRCD,A04O9400               * no - error
.
          MOVE      OBAOUTNO,VISNUMBR            * load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A04O9100:               * connection lost
                         A04O9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A04O9100:               * connection lost
                         A04O9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A04O9100:               * connection lost
                         A04O9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,A04O9100:               * connection lost
                         A04O9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A04O9100:               * connection lost
                         A04O9200                * timeout
          CALL      WPV20000                     * format PV2 segment
          BRANCH    EXIT,A04O9100:               * connection lost
                         A04O9200                * timeout
          CALL      WRAL1000                     * format AL1 segment
          BRANCH    EXIT,A04O9100:               * connection lost
                         A04O9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A04O9100:               * connection lost
                         A04O9200                * timeout
          CALL      WGT10000                     * format GT1 segment
          BRANCH    EXIT,A04O9100:               * connection lost
                         A04O9200                * timeout
          CALL      WRIN1000                     * format IN1 segment
          BRANCH    EXIT,A04O9100:               * connection lost
                         A04O9200                * timeout
          CALL      WRZAL000                     * format & write ZAL segment
          BRANCH    EXIT,A04O9100:               * connection lost
                         A04O9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A04O9100:               * connection lost
                         A04O9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A04O9100:               * connection lost
                         A04O9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A04O9100:               * connection lost
                         A04O9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A04O9999
.
A04O9100  MOVE      ONE,EXIT
          GOTO      A04O9999
.
A04O9200  MOVE      TWO,EXIT
          GOTO      A04O9999
.
A04O9400  MOVE      FOUR,EXIT
.
A04O9999  RETURN
+
.******************************************************************************
.*                                  A04E0000       Called by: RCIS0000        *
.*                       Write Emergency Registration (Attendance)            *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record                       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record                       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A04E0000  MOVE      H7CIMESI,KEY20
          CALL      RDEMQUE1                     * emergency details found ?
          BRANCH    OVRCD,A04E9500               * no - error
.
          MOVE      EMVIADMN,VISNUMBR            * load visit number
.
          PACK      KEY22,H7CIMESI,SP1,ONE
          CALL      RDPMQVI1                     * visit details found ?
          BRANCH    OVRCD,A04E9300               * no - error
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A04E9100:               * connection lost
                         A04E9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A04E9100:               * connection lost
                         A04E9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A04E9100:               * connection lost
                         A04E9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,A04E9100:               * connection lost
                         A04E9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A04E9100:               * connection lost
                         A04E9200                * timeout
          CALL      WRAL1000                     * format AL1 segment
          BRANCH    EXIT,A04E9100:               * connection lost
                         A04E9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A04E9100:               * connection lost
                         A04E9200                * timeout
          CALL      WGT10000                     * format GT1 segment
          BRANCH    EXIT,A04E9100:               * connection lost
                         A04E9200                * timeout
          CALL      WRIN1000                     * format IN1 segment
          BRANCH    EXIT,A04E9100:               * connection lost
                         A04E9200                * timeout
          CALL      WRZAL000                     * format & write ZAL segment
          BRANCH    EXIT,A04E9100:               * connection lost
                         A04E9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A04E9100:               * connection lost
                         A04E9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A04E9100:               * connection lost
                         A04E9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A04E9100:               * connection lost
                         A04E9200                * timeout
          CALL      WZTR0000                     * format ZTR segment
          BRANCH    EXIT,A04E9100:               * connection lost
                         A04E9200                * timeout
          CALL      WZNT0000                     * format ZNT segment
          BRANCH    EXIT,A04E9100:               * connection lost
                         A04E9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A04E9999
.
A04E9100  MOVE      ONE,EXIT
          GOTO      A04E9999
.
A04E9200  MOVE      TWO,EXIT
          GOTO      A04E9999
.
A04E9300  MOVE      THREE,EXIT
          GOTO      A04E9999
.
A04E9500  MOVE      FIVE,EXIT
.
A04E9999  RETURN
+
.******************************************************************************
.*                                  A05O0000       Called by: RCIS0000        *
.*           Write O/P Pre-admit (Booking) or O/P Referral message            *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record                       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A05O0000  PACK      KEY20,H7CIMESI
          CALL      RDOTQUE1                     * booking details found ?
          BRANCH    OVRCD,A05O2000
.
          MOVE      OBAOUTNO,VISNUMBR            * yes - load visit number
          GOTO      A05O5000
.
.         Only try and get referral details if using referral messages
.
A05O2000  COMPARE   ONE,OTCNA05R
          GOTO      A05O9400 IF NOT EQUAL        * not using ref. mess.- error
.
          CALL      RDOTRQU1                     * no - referral details found ?
          BRANCH    OVRCD,A05O9400               * no - error
.
          MOVE      ZERO,REFLFLAG                * yes - set flag for ref. mess.
          MOVE      OTRLOUTN,VISNUMBR            * load visit number
.
.         Format message
.
A05O5000  CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A05O9100:               * connection lost
                         A05O9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A05O9100:               * connection lost
                         A05O9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A05O9100:               * connection lost
                         A05O9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,A05O9100:               * connection lost
                         A05O9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A05O9100:               * connection lost
                         A05O9200                * timeout
          CALL      WPV20000                     * format PV2 segment
          BRANCH    EXIT,A05O9100:               * connection lost
                         A05O9200                * timeout
          CALL      WRAL1000                     * format AL1 segment
          BRANCH    EXIT,A05O9100:               * connection lost
                         A05O9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A05O9100:               * connection lost
                         A05O9200                * timeout
          CALL      WGT10000                     * format GT1 segment
          BRANCH    EXIT,A05O9100:               * connection lost
                         A05O9200                * timeout
          CALL      WRIN1000                     * format IN1 segment
          BRANCH    EXIT,A05O9100:               * connection lost
                         A05O9200                * timeout
          CALL      WRZAL000                     * format & write ZAL segment
          BRANCH    EXIT,A05O9100:               * connection lost
                         A05O9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A05O9100:               * connection lost
                         A05O9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A05O9100:               * connection lost
                         A05O9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A05O9100:               * connection lost
                         A05O9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A05O9999
.
A05O9100  MOVE      ONE,EXIT
          GOTO      A05O9999
.
A05O9200  MOVE      TWO,EXIT
          GOTO      A05O9999
.
A05O9400  MOVE      FOUR,EXIT
.
A05O9999  RETURN
+
.******************************************************************************
.*                                  A05W0000       Called by: RCIS0000        *
.*           Write W/L Booking message                                        *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving holding table record (see EXIT2)      *
.*          EXIT2 10 = error retrieving watqueaf record                       *
.******************************************************************************
.
A05W0000  PACK      KEY20,H7CIMESI
          CALL      RDWTQUE1                     * booking details found ?
          BRANCH    OVRCD,A05W9900
.
          MOVE      WMBOOK,VISNUMBR              * yes - load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A05W9100:               * connection lost
                         A05W9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A05W9100:               * connection lost
                         A05W9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A05W9100:               * connection lost
                         A05W9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,A05W9100:               * connection lost
                         A05W9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A05W9100:               * connection lost
                         A05W9200                * timeout
          CALL      WPV20000                     * format PV2 segment
          BRANCH    EXIT,A05W9100:               * connection lost
                         A05W9200                * timeout
          CALL      WRAL1000                     * format AL1 segment
          BRANCH    EXIT,A05W9100:               * connection lost
                         A05W9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A05W9100:               * connection lost
                         A05W9200                * timeout
          CALL      WPR10000                     * format PR1 segment
          BRANCH    EXIT,A05W9100:               * connection lost
                         A05W9200                * timeout
          CALL      WRZAL000                     * format & write ZAL segment
          BRANCH    EXIT,A05W9100:               * connection lost
                         A05W9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A05W9100:               * connection lost
                         A05W9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A05W9100:               * connection lost
                         A05W9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A05W9100:               * connection lost
                         A05W9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A05W9999
.
A05W9100  MOVE      ONE,EXIT
          GOTO      A05W9999
.
A05W9200  MOVE      TWO,EXIT
          GOTO      A05W9999
.
A05W9900  MOVE      NINE,EXIT
          MOVE      TEN,EXIT2
.
A05W9999  RETURN
+
.******************************************************************************
.*                                  A08A0000       Called by: RCIS0000        *
.*                       Write Update Patient Information (ADT)               *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record                       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A08A0000  PACK      KEY22,H7CIMESI,SP1,ONE
          CALL      RDPMQVI1                     * visit details found ?
          BRANCH    OVRCD,A08A9300               * no - error
.
          MOVE      AADMNO,VISNUMBR              * load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A08A9100:               * connection lost
                         A08A9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A08A9100:               * connection lost
                         A08A9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A08A9100:               * connection lost
                         A08A9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,A08A9100:               * connection lost
                         A08A9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A08A9100:               * connection lost
                         A08A9200                * timeout
          CALL      WPV20000                     * format PV2 segment
          BRANCH    EXIT,A08A9100:               * connection lost
                         A08A9200                * timeout
          CALL      WRAL1000                     * format & write AL1 segment
          BRANCH    EXIT,A08A9100:               * connection lost
                         A08A9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A08A9100:               * connection lost
                         A08A9200                * timeout
          CALL      WRDRG000                     * format DRG segment
          BRANCH    EXIT,A08A9100:               * connection lost
                         A08A9200                * timeout
          CALL      WPR10000                     * format PR1 segment
          BRANCH    EXIT,A08A9100:               * connection lost
                         A08A9200                * timeout
          CALL      WGT10000                     * format GT1 segment
          BRANCH    EXIT,A08A9100:               * connection lost
                         A08A9200                * timeout
          CALL      WRIN1000                     * format IN1 segment
          BRANCH    EXIT,A08A9100:               * connection lost
                         A08A9200                * timeout
          CALL      WRZAL000                     * format & write ZAL segment
          BRANCH    EXIT,A08A9100:               * connection lost
                         A08A9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A08A9100:               * connection lost
                         A08A9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A08A9100:               * connection lost
                         A08A9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A08A9100:               * connection lost
                         A08A9200                * timeout
          CALL      WRZEC000                     * format ZEC segment
          BRANCH    EXIT,A08A9100:               * connection lost
                         A08A9200                * timeout
          CALL      WZBR0000                     * format ZBR segment
          BRANCH    EXIT,A08A9100:               * connection lost
                         A08A9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A08A9999
.
A08A9100  MOVE      ONE,EXIT
          GOTO      A08A9999
.
A08A9200  MOVE      TWO,EXIT
          GOTO      A08A9999
.
A08A9300  MOVE      THREE,EXIT
.
A08A9999  RETURN
+
.******************************************************************************
.*                                  A08O0000       Called by: RCIS0000        *
.*                       Write Update Patient Information (O/P)               *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record                       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A08O0000  PACK      KEY20,H7CIMESI
          CALL      RDOTQUE1                     * visit details found ?
          BRANCH    OVRCD,A08O2000
.
          MOVE      OBAOUTNO,VISNUMBR            * yes - load visit number
          GOTO      A08O5000
.
.         Only try and get referral details if using referral messages
.
A08O2000  COMPARE   ONE,OTCNA08R
          GOTO      A08O9400 IF NOT EQUAL        * not using ref. mess.- error
.
          CALL      RDOTRQU1                     * no - referral details found ?
          BRANCH    OVRCD,A08O9400               * no - error
.
          MOVE      ZERO,REFLFLAG                * yes - set flag for ref. mess.
          MOVE      OTRLOUTN,VISNUMBR            * load visit number
.
.         Format message
.
A08O5000  CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A08O9100:               * connection lost
                         A08O9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A08O9100:               * connection lost
                         A08O9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A08O9100:               * connection lost
                         A08O9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,A08O9100:               * connection lost
                         A08O9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A08O9100:               * connection lost
                         A08O9200                * timeout
          CALL      WPV20000                     * format PV2 segment
          BRANCH    EXIT,A08O9100:               * connection lost
                         A08O9200                * timeout
          CALL      WRAL1000                     * format & write AL1 segment
          BRANCH    EXIT,A08O9100:               * connection lost
                         A08O9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A08O9100:               * connection lost
                         A08O9200                * timeout
          CALL      WGT10000                     * format GT1 segment
          BRANCH    EXIT,A08O9100:               * connection lost
                         A08O9200                * timeout
          CALL      WRIN1000                     * format & write IN1 segment
          BRANCH    EXIT,A08O9100:               * connection lost
                         A08O9200                * timeout
          CALL      WRZAL000                     * format & write ZAL segment
          BRANCH    EXIT,A08O9100:               * connection lost
                         A08O9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A08O9100:               * connection lost
                         A08O9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A08O9100:               * connection lost
                         A08O9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A08O9100:               * connection lost
                         A08O9200                * timeout
          CALL      WRZEC000                     * format ZEC segment
          BRANCH    EXIT,A08O9100:               * connection lost
                         A08O9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A08O9999
.
A08O9100  MOVE      ONE,EXIT
          GOTO      A08O9999
.
A08O9200  MOVE      TWO,EXIT
          GOTO      A08O9999
.
A08O9400  MOVE      FOUR,EXIT
.
A08O9999  RETURN
+
.******************************************************************************
.*                                  A08E0000       Called by: RCIS0000        *
.*                       Write Update Patient Information (Emergency)         *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record                       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record                       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A08E0000  MOVE      H7CIMESI,KEY20
          CALL      RDEMQUE1                     * emergency details found ?
          BRANCH    OVRCD,A08E9500               * no - error
.
.davvy    IF        EMVISTAT = 2 | EMVISTAT = 3  * CAR 285690
            PACK      KEY22,H7CIMESI,SP1,ONE
            CALL      RDPMQVI1                     * visit details found ?
            BRANCH    OVRCD,A08E9300               * no - error
.davvy    ENDIF
.
          MOVE      EMVIADMN,VISNUMBR            * load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A08E9100:               * connection lost
                         A08E9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A08E9100:               * connection lost
                         A08E9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A08E9100:               * connection lost
                         A08E9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,A08E9100:               * connection lost
                         A08E9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A08E9100:               * connection lost
                         A08E9200                * timeout
          CALL      WRAL1000                     * format & write AL1 segment
          BRANCH    EXIT,A08E9100:               * connection lost
                         A08E9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A08E9100:               * connection lost
                         A08E9200                * timeout
          CALL      WGT10000                     * format GT1 segment
          BRANCH    EXIT,A08E9100:               * connection lost
                         A08E9200                * timeout
          CALL      WRIN1000                     * format & write IN1 segment
          BRANCH    EXIT,A08E9100:               * connection lost
                         A08E9200                * timeout
          CALL      WRZAL000                     * format & write ZAL segment
          BRANCH    EXIT,A08E9100:               * connection lost
                         A08E9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A08E9100:               * connection lost
                         A08E9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A08E9100:               * connection lost
                         A08E9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A08E9100:               * connection lost
                         A08E9200                * timeout
          CALL      WRZEC000                     * format ZEC segment
          BRANCH    EXIT,A08E9100:               * connection lost
                         A08E9200                * timeout
          CALL      WZBR0000                     * format ZBR segment
          BRANCH    EXIT,A08E9100:               * connection lost
                         A08E9200                * timeout
          CALL      WZTR0000                     * format ZTR segment
          BRANCH    EXIT,A08E9100:               * connection lost
                         A08E9200                * timeout
          CALL      WZNT0000                     * format ZNT segment
          BRANCH    EXIT,A08E9100:               * connection lost
                         A08E9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A08E9999
.
A08E9100  MOVE      ONE,EXIT
          GOTO      A08E9999
.
A08E9200  MOVE      TWO,EXIT
          GOTO      A08E9999
.
A08E9300  MOVE      THREE,EXIT
          GOTO      A08E9999
.
A08E9500  MOVE      FIVE,EXIT
.
A08E9999  RETURN
+
.******************************************************************************
.*                                  A08L0000       Called by: RCIS0000        *
.*                       Write Update A/H Encounter                           *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record                       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A08L0000  MOVE      H7CIMESI,KEY20
          CALL      RDALQUE1                     * A/H details found ?
          BRANCH    OVRCD,A08L9800               * no - error
.
          MOVE      ALREVISN,VISNUMBR            * load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A08L9100:               * connection lost
                         A08L9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A08L9100:               * connection lost
                         A08L9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A08L9100:               * connection lost
                         A08L9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,A08L9100:               * connection lost
                         A08L9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A08L9100:               * connection lost
                         A08L9200                * timeout
          CALL      WRAL1000                     * format AL1 segment
          BRANCH    EXIT,A08L9100:               * connection lost
                         A08L9200                * timeout
          CALL      WPR10000                     * format PR1 segment
          BRANCH    EXIT,A08L9100:               * connection lost
                         A08L9200                * timeout
          CALL      WRZAL000                     * format ZAL segment
          BRANCH    EXIT,A08L9100:               * connection lost
                         A08L9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A08L9100:               * connection lost
                         A08L9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A08L9100:               * connection lost
                         A08L9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A08L9100:               * connection lost
                         A08L9200                * timeout
          CALL      WRZEC000                     * format ZEC segment
          BRANCH    EXIT,A08L9100:               * connection lost
                         A08L9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A08L9999
.
A08L9100  MOVE      ONE,EXIT
          GOTO      A08L9999
.
A08L9200  MOVE      TWO,EXIT
          GOTO      A08L9999
.
A08L9800  MOVE      EIGHT,EXIT
.
A08L9999  RETURN
+
.******************************************************************************
.*                                  A08W0000       Called by: RCIS0000        *
.*           Write W/L Booking update message                                 *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving holding table record (see EXIT2)      *
.*          EXIT2 10 = error retrieving watqueaf record                       *
.******************************************************************************
.
A08W0000  PACK      KEY20,H7CIMESI
          CALL      RDWTQUE1                     * booking details found ?
          BRANCH    OVRCD,A08W9900
.
          MOVE      WMBOOK,VISNUMBR              * yes - load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A08W9100:               * connection lost
                         A08W9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A08W9100:               * connection lost
                         A08W9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A08W9100:               * connection lost
                         A08W9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,A08W9100:               * connection lost
                         A08W9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A08W9100:               * connection lost
                         A08W9200                * timeout
          CALL      WPV20000                     * format PV2 segment
          BRANCH    EXIT,A08W9100:               * connection lost
                         A08W9200                * timeout
          CALL      WRAL1000                     * format AL1 segment
          BRANCH    EXIT,A08W9100:               * connection lost
                         A08W9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A08W9100:               * connection lost
                         A08W9200                * timeout
          CALL      WPR10000                     * format PR1 segment
          BRANCH    EXIT,A08W9100:               * connection lost
                         A08W9200                * timeout
          CALL      WRZAL000                     * format & write ZAL segment
          BRANCH    EXIT,A08W9100:               * connection lost
                         A08W9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A08W9100:               * connection lost
                         A08W9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A08W9100:               * connection lost
                         A08W9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A08W9100:               * connection lost
                         A08W9200                * timeout
          CALL      WRZEC000                     * format ZEC segment
          BRANCH    EXIT,A08W9100:               * connection lost
                         A08W9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A08W9999
.
A08W9100  MOVE      ONE,EXIT
          GOTO      A08W9999
.
A08W9200  MOVE      TWO,EXIT
          GOTO      A08W9999
.
A08W9900  MOVE      NINE,EXIT
          MOVE      TEN,EXIT2
.
A08W9999  RETURN
+
.******************************************************************************
.*                                  A02W0000       Called by: RCIS0000        *
.*           Write W/L Booking transfer message                               *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving holding table record (see EXIT2)      *
.*          EXIT2 10 = error retrieving watqueaf record                       *
.******************************************************************************
.
A02W0000  PACK      KEY20,H7CIMESI
          CALL      RDWTQUE1                     * booking details found ?
          BRANCH    OVRCD,A02W9900
.
          MOVE      WMBOOK,VISNUMBR              * yes - load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A02W9100:               * connection lost
                         A02W9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A02W9100:               * connection lost
                         A02W9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A02W9100:               * connection lost
                         A02W9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,A02W9100:               * connection lost
                         A02W9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A02W9100:               * connection lost
                         A02W9200                * timeout
          CALL      WPV20000                     * format PV2 segment
          BRANCH    EXIT,A02W9100:               * connection lost
                         A02W9200                * timeout
          CALL      WRAL1000                     * format AL1 segment
          BRANCH    EXIT,A02W9100:               * connection lost
                         A02W9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A02W9100:               * connection lost
                         A02W9200                * timeout
          CALL      WPR10000                     * format PR1 segment
          BRANCH    EXIT,A02W9100:               * connection lost
                         A02W9200                * timeout
          CALL      WRZAL000                     * format & write ZAL segment
          BRANCH    EXIT,A02W9100:               * connection lost
                         A02W9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A02W9100:               * connection lost
                         A02W9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A02W9100:               * connection lost
                         A02W9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A02W9100:               * connection lost
                         A02W9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A02W9999
.
A02W9100  MOVE      ONE,EXIT
          GOTO      A02W9999
.
A02W9200  MOVE      TWO,EXIT
          GOTO      A02W9999
.
A02W9900  MOVE      NINE,EXIT
          MOVE      TEN,EXIT2
.
A02W9999  RETURN
+
.******************************************************************************
.*                                  A08X0000       Called by: RCIS0000        *
.*          Write Update Patient Information (A31) in A08 format (ADT)        *
.*          using Alternate (Axx) message type.                               *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = no visit records for patient                           *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
.         Get the most recent I/P, O/P or ED visit record (on or prior
.         to the current date)
.
A08X0000  CALL      IBACLOCK                     * get current date
          PACK      DIM8,CCC,CYY,CMM,CDD
          REP       " 0",DIM8
          PACK      CURRDTTM,CCC,CYY,CMM,CDD,CTIMEIS
          REP       " 0",CURRDTTM
.
          PACK      KEY24,PURNO,DIM8,TILDA40
          CALL      RDSVISA2                     * pos'n after last visit for UR
A08X0500  CALL      RDPVISA2                     * read previous record
          BRANCH    OVRCD,A08X4000               * eof - error
.
          MATCH     PVIURNO,PURNO                * same U/R still ?
          GOTO      A08X4000 IF NOT EQUAL        * no - error
.
          MATCH     "1",PTCNA31Y
          IF        @EQUAL
            COMPARE   THREE,PVITYPE
            GOTO      A08X9700 IF NOT EQUAL      * only want inpatient visits
          ENDIF
.
.         Valid visit record found for U/R
.
          MOVE      PVIBILL,VISNUMBR             * load visit number
.
.         Get the visit details based on the visit type
.
          BRANCH    PVITYPE,A08X1000:            * Emergency visit
                            A08X2000:            * Outpatient visit
                            A08X3000             * Inpatient visit
          GOTO      A08X0500                     * invalid visit type
.
.         Get the Emergency details
.
A08X1000  MOVE      PVIBILL,KEY8
          CALL      RDEMVIS1                     * ED visit record found ?
          BRANCH    OVRCD,A08X0500               * no - get next visit
.
          GOTO      A08X5000                     * yes
.
.         Get the Outpatient details
.
A08X2000  MOVE      PVISITE,KEY6
          CALL      RDSITA1                      * site record on file ?
          BRANCH    OVRCD,A08X0500               * no - get next visit
.
A08X2100  PACK      FNAME,OSTFILE,FILBOKA6
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OUTBOKA6,FNAME               * open O/P booking file
          TRAPCLR   IO
          BRANCH    OVRCD,A08X0500               * file not found - get nxt vist
.
          PACK      KEY36,PVIBILL,PVIDATE,SP30
          CALL      RDSBOKA6                     * position on O/P number
          CALL      RDKBOKA6                     * read next record
          BRANCH    OVRCD,A08X0500               * eof - get next visit
.
          MATCH     OBAOUTNO,PVIBILL             * same visit no.?
          GOTO      A08X0500 IF NOT EQUAL        * no - get next visit
.
          MATCH     OBADATE,PVIDATE              * same visit date ?
          GOTO      A08X0500 IF NOT EQUAL        * no - get next visit
.
          PACK      FNAME,OSTFILE,FILBB1A1
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OUTBB1A1,FNAME               * open O/P booking file
          TRAPCLR   IO
          BRANCH    OVRCD,A08X0500               * file not found - get nxt vist
.
          MOVE      PVIBILL,KEY8
          CALL      RDBOKB1                      * outbb1af record found?
          BRANCH    OVRCD,A08X0500               * no - get next visit
.
          GOTO      A08X5000
.
.         Get the Inpatient details
.
A08X3000  MOVE      PVIBILL,KEY8
          CALL      RDMISS1                      * I/P admission record found ?
          BRANCH    OVRCD,A08X0500               * no - get next visit
.
          MATCH     "1",PTCNA31Y
          IF        @EQUAL
            COMPARE   TWO,ASTAT
            GOTO      A08X0500 IF NOT EQUAL      * only want current visits
          ENDIF
.         
          CALL      CLPMSVX1                     * clear visit extension fields
          MOVE      PVIBILL,KEY8
          CALL      RDPMVX11                     * read visit extension record
.         
          IF        ASTAT = 3
            CALL      CLPATDSC                   * clear discharge fields
            MOVE      PVIBILL,KEY8
            CALL      RDDSCH1                    * read discharge record
          ENDIF     
.
.         Get the last transfer record details
.
          PACK      KEY30,PVIBILL,TILDA40
          CALL      RDSTRAN2                     * position in table
          CALL      RDPTRAN2                     * read previous record
          BRANCH    OVRCD,A08X0500               * no - get next visit
.
          MATCH     TADMN,PVIBILL                * same visit still ?
          GOTO      A08X0500 IF NOT EQUAL        * no - get next visit
.
          PACK      SAVKEY30,TADMN,TDATE,TTIME,TWARD,TBED   * save record key
.
          GOTO      A08X5000
.
.         The patient has no previous visits (patvisaf), so see if there are
.         any future bookings, and if so, use the visit details from there
.
A08X4000  CALL      GFBK0000                     * future booking found ?
          BRANCH    EXIT,A08X9700                * no - error
          GOTO      A08X2100                     * yes - retrieve the details
.
.         Format message
.
A08X5000  CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A08X9100:               * connection lost
                         A08X9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A08X9100:               * connection lost
                         A08X9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A08X9100:               * connection lost
                         A08X9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,A08X9100:               * connection lost
                         A08X9200                * timeout
.
          MOVE      "PV1",SEGMENT
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [PV1] segment",*R,*N;
          ENDIF
.
          CALL      CLPV1000                     * clear PV1 fields
.
.         Call the appropriate routine for the type of visit and format PV1.
.         As we are sending these messages in A08 format, change the message
.         number to the equivalent A08 message number so that all the relevant
.         fields get populated.
.
          IF        PVITYPE = 3
            MOVE      EIGHT,MESSNUMB             * ADT A08
          ELSE
            IF        PVITYPE = 2
              MOVE      NINE,MESSNUMB            * O/P A08
            ELSE
              MOVE      TEN,MESSNUMB             * ED A08
            ENDIF
          ENDIF
          PERFORM   PVITYPE,EPV10000:            * Emergency visit
                            OPV10000:            * O/P visit
                            ADPV1000             * I/P visit
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,A08X9100:               * connection lost
                         A08X9200                * timeout
.
.         Only send PV2 segment for Inpatient & Outpatient
.
          MOVE      "PV2",SEGMENT
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [PV2] segment",*R,*N;
          ENDIF
.
          CALL      CLPV2000                     * clear PV2 fields
.
          IF        PVITYPE <> 1
            IF        PVITYPE = 2
              CALL      OPV20000                 * O/P visit
            ELSE
              CALL      APV20000                 * I/P visit
            ENDIF
.
            PACK      SEGSTRNG,ANSP,ANSV,TWO,PIPE:
                               PV2001,PIPE,PV2002,PIPE,PV2003,PIPE,PV2004,PIPE:
                               PV2005,PIPE,PV2006,PIPE,PV2007,PIPE,PV2008,PIPE:
                               PV2009,PIPE,PV2010,CRETURN
.
            CALL      SENDM000                   * send message
            BRANCH    EXIT,A08X9100:             * connection lost
                           A08X9200              * timeout
          ENDIF
.
          CALL      WRAL1000                     * format & write AL1 segment
          BRANCH    EXIT,A08X9100:               * connection lost
                         A08X9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A08X9100:               * connection lost
                         A08X9200                * timeout
.
          IF        PVITYPE = 3
            CALL      WPR10000                   * format PR1 segment
            BRANCH    EXIT,A08X9100:             * connection lost
                           A08X9200              * timeout
          ENDIF
.
          CALL      WGT10000                     * format GT1 segment
          BRANCH    EXIT,A08X9100:               * connection lost
                         A08X9200                * timeout
          CALL      WRIN1000                     * format IN1 segment
          BRANCH    EXIT,A08X9100:               * connection lost
                         A08X9200                * timeout
          CALL      WRZAL000                     * format & write ZAL segment
          BRANCH    EXIT,A08X9100:               * connection lost
                         A08X9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A08X9100:               * connection lost
                         A08X9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A08X9100:               * connection lost
                         A08X9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A08X9100:               * connection lost
                         A08X9200                * timeout
          CALL      WRZEC000                     * format ZEC segment
          BRANCH    EXIT,A08X9100:               * connection lost
                         A08X9200                * timeout
.
A08X9000  MOVE      ZERO,EXIT
          GOTO      A08X9900
.
A08X9100  MOVE      ONE,EXIT
          GOTO      A08X9900
.
A08X9200  MOVE      TWO,EXIT
          GOTO      A08X9900
.
A08X9700  MOVE      SEVEN,EXIT
.
A08X9900  MOVE      TWENTY2,MESSNUMB             * restore A31 message id
.
A08X9999  RETURN
+
.*****************************************************************************
.*                             GFBK0000            Called by: A08X0000       *
.*        Get the furthest booking into the future for the patient           *
.* Requires: PURNO - U/R number                                              *
.* Returns:  EXIT   0 = Valid future booking record found                    *
.*                  1 = No valid future booking record found                 *
.*****************************************************************************
.
GFBK0000  MATCH     "1",PTCNA31Y                 * only sending I/P messages ?
          GOTO      GFBK9100 IF EQUAL            * yes - finished
.
          MOVE      SP20,SAVEDTTM                * initialise variables
          MOVE      SP8,SAVEVIST
          MOVE      SP3,SAVEPRFX
.
.         Loop through the site file by prefix and check each site outbokaf
.         table for bookings for the patient
.
          MOVE      SP9,KEY9
          CALL      RDSSITA3                     * position at start of file
GFBK0500  CALL      RDKSITA3                     * read next record
          BRANCH    OVRCD,GFBK9000               * eof - finished
.
.         Open the site booking file
.
          PACK      FNAME,OSTFILE,FILBOKA3
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OUTBOKA3,FNAME               * open O/P booking file
          TRAPCLR   IO
          BRANCH    OVRCD,GFBK5000               * file not found - get nxt site
.
.         Get the most recent booking for the U/R, if one exists
.
          PACK      KEY36,PURNO,TILDA40
          CALL      RDSBOKA3                     * position on U/R number
GFBK1000  CALL      RDPBOKA3                     * read next record
          BRANCH    OVRCD,GFBK5000               * eof - get next site
.
          MATCH     PURNO,OBAURNO                * same U/R ?
          GOTO      GFBK5000 IF NOT EQUAL        * no - get next site
.
.         A record has been found for the patient, so make sure this is a
.         booking in the future
.
          PACK      BOOKDTTM,OBADATE,OBATIME
          MATCH     BOOKDTTM,CURRDTTM            * future booking date/time ?
          GOTO      GFBK5000 IF NOT LESS         * no - get next site
.
          COMPARE   ONE,OBASTAT                  * booking ?
          GOTO      GFBK1000 IF NOT EQUAL        * no - ignore record
.
.         A booking has been found for the patient, so save the visit number
.         and visit date/time if this booking is further into the future
.
          MATCH     SP8,SAVEVIST
          IF        !@EQUAL
            MATCH     BOOKDTTM,SAVEDTTM
            GOTO      GFBK5000 IF NOT LESS
          ENDIF
          PACK      SAVEDTTM,OBADATE,OBATIME     * save booking date/time
          MOVE      OBAOUTNO,SAVEVIST            * save visit number
          MOVE      OSTFILE,SAVEPRFX             * save file prefix
.
.         Position for the next site prefix
.
GFBK5000  PACK      KEY9,OSTFILE,TILDA40
          CALL      RDSSITA3
          GOTO      GFBK0500
.
GFBK9000  MATCH     SP8,SAVEVIST                 * booking found ?
          GOTO      GFBK9100 IF EQUAL            * no
.
          MOVE      SAVEPRFX,OSTFILE             * yes
          MOVE      SAVEVIST,PVIBILL
          MOVE      SAVEVIST,VISNUMBR
          MOVE      SAVEDTTM,PVIDATE
          MOVE      TWO,PVITYPE
          MOVE      ZERO,EXIT
          GOTO      GFBK9999
.
GFBK9100  MOVE      ONE,EXIT
.
GFBK9999  RETURN
+
.******************************************************************************
.*                                  A11A0000       Called by: RCIS0000        *
.*                       Write Cancel Admit                                   *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record                       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A11A0000  PACK      KEY22,H7CIMESI,SP1,ONE
          CALL      RDPMQVI1                     * visit details found ?
          BRANCH    OVRCD,A11A9300               * no - error
.
          MOVE      AADMNO,VISNUMBR              * load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A11A9100:               * connection lost
                         A11A9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A11A9100:               * connection lost
                         A11A9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A11A9100:               * connection lost
                         A11A9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A11A9100:               * connection lost
                         A11A9200                * timeout
          CALL      WPV20000                     * format PV2 segment
          BRANCH    EXIT,A11A9100:               * connection lost
                         A11A9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A11A9100:               * connection lost
                         A11A9200                * timeout
.
          MATCH     "1",PTCNDGA2                 * sending PR1 in A02 ?
          IF        @EQUAL
            CALL      WPR10000                   * format PR1 segment
            BRANCH    EXIT,A11A9100:             * connection lost
                           A11A9200              * timeout
          ENDIF
.
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A11A9100:               * connection lost
                         A11A9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A11A9100:               * connection lost
                         A11A9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A11A9100:               * connection lost
                         A11A9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A11A9999
.
A11A9100  MOVE      ONE,EXIT
          GOTO      A11A9999
.
A11A9200  MOVE      TWO,EXIT
          GOTO      A11A9999
.
A11A9300  MOVE      THREE,EXIT
.
A11A9999  RETURN
+
.******************************************************************************
.*                                  A11O0000       Called by: RCIS0000        *
.*                       Write Cancel O/P Attendance (Unattend)               *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record                       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A11O0000  PACK      KEY20,H7CIMESI
          CALL      RDOTQUE1                     * visit details found ?
          BRANCH    OVRCD,A11O9400               * no - error
.
          MOVE      OBAOUTNO,VISNUMBR            * load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A11O9100:               * connection lost
                         A11O9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A11O9100:               * connection lost
                         A11O9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A11O9100:               * connection lost
                         A11O9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A11O9100:               * connection lost
                         A11O9200                * timeout
          CALL      WPV20000                     * format PV2 segment
          BRANCH    EXIT,A11O9100:               * connection lost
                         A11O9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A11O9100:               * connection lost
                         A11O9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A11O9100:               * connection lost
                         A11O9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A11O9100:               * connection lost
                         A11O9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A11O9100:               * connection lost
                         A11O9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A11O9999
.
A11O9100  MOVE      ONE,EXIT
          GOTO      A11O9999
.
A11O9200  MOVE      TWO,EXIT
          GOTO      A11O9999
.
A11O9400  MOVE      FOUR,EXIT
.
A11O9999  RETURN
+
.******************************************************************************
.*                                  A11E0000       Called by: RCIS0000        *
.*                       Write Cancel Emergency Attendance                    *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record                       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record                       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A11E0000  PACK      KEY20,H7CIMESI
          CALL      RDEMQUE1                     * visit details found ?
          BRANCH    OVRCD,A11E9500               * no - error
.
          MOVE      EMVIADMN,VISNUMBR            * load visit number
.
          PACK      KEY22,H7CIMESI,SP1,ONE
          CALL      RDPMQVI1                     * visit details found ?
          BRANCH    OVRCD,A11E9300               * no - error
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A11E9100:               * connection lost
                         A11E9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A11E9100:               * connection lost
                         A11E9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A11E9100:               * connection lost
                         A11E9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A11E9100:               * connection lost
                         A11E9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A11E9100:               * connection lost
                         A11E9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A11E9100:               * connection lost
                         A11E9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A11E9100:               * connection lost
                         A11E9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A11E9100:               * connection lost
                         A11E9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A11E9999
.
A11E9100  MOVE      ONE,EXIT
          GOTO      A11E9999
.
A11E9200  MOVE      TWO,EXIT
          GOTO      A11E9999
.
A11E9300  MOVE      THREE,EXIT
          GOTO      A11E9999
.
A11E9500  MOVE      FIVE,EXIT
.
A11E9999  RETURN
+
.******************************************************************************
.*                                  A12A0000       Called by: RCIS0000        *
.*                       Write Cancel Transfer                                *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record                       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A12A0000  PACK      KEY22,H7CIMESI,SP1,ONE
          CALL      RDPMQVI1                     * visit details found ?
          BRANCH    OVRCD,A12A9300               * no - error
.
          MOVE      AADMNO,VISNUMBR              * load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A12A9100:               * connection lost
                         A12A9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A12A9100:               * connection lost
                         A12A9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A12A9100:               * connection lost
                         A12A9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A12A9100:               * connection lost
                         A12A9200                * timeout
          CALL      WPV20000                     * format PV2 segment
          BRANCH    EXIT,A12A9100:               * connection lost
                         A12A9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A12A9100:               * connection lost
                         A12A9200                * timeout
.
          MATCH     "1",PTCNDGA2                 * sending PR1 in A02 ?
          IF        @EQUAL
            CALL      WPR10000                   * format PR1 segment
            BRANCH    EXIT,A12A9100:             * connection lost
                           A12A9200              * timeout
          ENDIF
.
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A12A9100:               * connection lost
                         A12A9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A12A9100:               * connection lost
                         A12A9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A12A9100:               * connection lost
                         A12A9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A12A9999
.
A12A9100  MOVE      ONE,EXIT
          GOTO      A12A9999
.
A12A9200  MOVE      TWO,EXIT
          GOTO      A12A9999
.
A12A9300  MOVE      THREE,EXIT
.
A12A9999  RETURN
+
.******************************************************************************
.*                                  A13A0000       Called by: RCIS0000        *
.*                       Write Cancel I/P Discharge                           *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record                       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A13A0000  PACK      KEY22,H7CIMESI,SP1,ONE
          CALL      RDPMQVI1                     * visit details found ?
          BRANCH    OVRCD,A13A9300               * no - error
.
          MOVE      AADMNO,VISNUMBR              * load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A13A9100:               * connection lost
                         A13A9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A13A9100:               * connection lost
                         A13A9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A13A9100:               * connection lost
                         A13A9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,A13A9100:               * connection lost
                         A13A9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A13A9100:               * connection lost
                         A13A9200                * timeout
          CALL      WPV20000                     * format PV2 segment
          BRANCH    EXIT,A13A9100:               * connection lost
                         A13A9200                * timeout
          CALL      WRAL1000                     * format & write AL1 segment
          BRANCH    EXIT,A13A9100:               * connection lost
                         A13A9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A13A9100:               * connection lost
                         A13A9200                * timeout
          CALL      WPR10000                     * format PR1 segment
          BRANCH    EXIT,A13A9100:               * connection lost
                         A13A9200                * timeout
          CALL      WGT10000                     * format GT1 segment
          BRANCH    EXIT,A13A9100:               * connection lost
                         A13A9200                * timeout
          CALL      WRIN1000                     * format IN1 segment
          BRANCH    EXIT,A13A9100:               * connection lost
                         A13A9200                * timeout
          CALL      WRZAL000                     * format & write ZAL segment
          BRANCH    EXIT,A13A9100:               * connection lost
                         A13A9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A13A9100:               * connection lost
                         A13A9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A13A9100:               * connection lost
                         A13A9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A13A9100:               * connection lost
                         A13A9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A13A9999
.
A13A9100  MOVE      ONE,EXIT
          GOTO      A13A9999
.
A13A9200  MOVE      TWO,EXIT
          GOTO      A13A9999
.
A13A9300  MOVE      THREE,EXIT
.
A13A9999  RETURN
+
.******************************************************************************
.*                                  A13E0000       Called by: RCIS0000        *
.*                       Write Cancel Emergency Discharge                     *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record                       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record                       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A13E0000  MOVE      H7CIMESI,KEY20
          CALL      RDEMQUE1                     * visit details found ?
          BRANCH    OVRCD,A13E9500               * no - error
.
          MOVE      EMVIADMN,VISNUMBR            * load visit number
.
          PACK      KEY22,H7CIMESI,SP1,ONE
          CALL      RDPMQVI1                     * visit details found ?
          BRANCH    OVRCD,A13E9300               * no - error
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A13E9100:               * connection lost
                         A13E9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A13E9100:               * connection lost
                         A13E9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A13E9100:               * connection lost
                         A13E9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,A13E9100:               * connection lost
                         A13E9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A13E9100:               * connection lost
                         A13E9200                * timeout
          CALL      WRAL1000                     * format & write AL1 segment
          BRANCH    EXIT,A13E9100:               * connection lost
                         A13E9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A13E9100:               * connection lost
                         A13E9200                * timeout
          CALL      WGT10000                     * format GT1 segment
          BRANCH    EXIT,A13E9100:               * connection lost
                         A13E9200                * timeout
          CALL      WRIN1000                     * format IN1 segment
          BRANCH    EXIT,A13E9100:               * connection lost
                         A13E9200                * timeout
          CALL      WRZAL000                     * format & write ZAL segment
          BRANCH    EXIT,A13E9100:               * connection lost
                         A13E9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A13E9100:               * connection lost
                         A13E9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A13E9100:               * connection lost
                         A13E9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A13E9100:               * connection lost
                         A13E9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A13E9999
.
A13E9100  MOVE      ONE,EXIT
          GOTO      A13E9999
.
A13E9200  MOVE      TWO,EXIT
          GOTO      A13E9999
.
A13E9300  MOVE      THREE,EXIT
          GOTO      A13E9999
.
A13E9500  MOVE      FIVE,EXIT
.
A13E9999  RETURN
+
.******************************************************************************
.*                                  A13L0000       Called by: RCIS0000        *
.*                       Write Cancel A/H Encounter                           *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record                       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A13L0000  MOVE      H7CIMESI,KEY20
          CALL      RDALQUE1                     * visit details found ?
          BRANCH    OVRCD,A13L9800               * no - error
.
          MOVE      ALREVISN,VISNUMBR            * load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A13L9100:               * connection lost
                         A13L9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A13L9100:               * connection lost
                         A13L9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A13L9100:               * connection lost
                         A13L9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,A13L9100:               * connection lost
                         A13L9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A13L9100:               * connection lost
                         A13L9200                * timeout
          CALL      WRAL1000                     * format AL1 segment
          BRANCH    EXIT,A13L9100:               * connection lost
                         A13L9200                * timeout
          CALL      WPR10000                     * format PR1 segment
          BRANCH    EXIT,A13L9100:               * connection lost
                         A13L9200                * timeout
          CALL      WRZAL000                     * format ZAL segment
          BRANCH    EXIT,A13L9100:               * connection lost
                         A13L9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A13L9100:               * connection lost
                         A13L9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A13L9100:               * connection lost
                         A13L9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A13L9100:               * connection lost
                         A13L9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A13L9999
.
A13L9100  MOVE      ONE,EXIT
          GOTO      A13L9999
.
A13L9200  MOVE      TWO,EXIT
          GOTO      A13L9999
.
A13L9800  MOVE      EIGHT,EXIT
.
A13L9999  RETURN
+
.******************************************************************************
.*                                  A13O0000       Called by: RCIS0000        *
.*                       Cancel O/P Discharge                                 *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record                       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A13O0000  PACK      KEY20,H7CIMESI
          CALL      RDOTQUE1                     * visit details found ?
          BRANCH    OVRCD,A13O9400               * no - error
.
          MOVE      OBAOUTNO,VISNUMBR            * load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A13O9100:               * connection lost
                         A13O9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A13O9100:               * connection lost
                         A13O9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A13O9100:               * connection lost
                         A13O9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,A13O9100:               * connection lost
                         A13O9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A13O9100:               * connection lost
                         A13O9200                * timeout
          CALL      WPV20000                     * format PV2 segment
          BRANCH    EXIT,A13O9100:               * connection lost
                         A13O9200                * timeout
          CALL      WRAL1000                     * format AL1 segment
          BRANCH    EXIT,A13O9100:               * connection lost
                         A13O9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A13O9100:               * connection lost
                         A13O9200                * timeout
          CALL      WGT10000                     * format GT1 segment
          BRANCH    EXIT,A13O9100:               * connection lost
                         A13O9200                * timeout
          CALL      WRIN1000                     * format IN1 segment
          BRANCH    EXIT,A13O9100:               * connection lost
                         A13O9200                * timeout
          CALL      WRZAL000                     * format & write ZAL segment
          BRANCH    EXIT,A13O9100:               * connection lost
                         A13O9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A13O9100:               * connection lost
                         A13O9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A13O9100:               * connection lost
                         A13O9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A13O9100:               * connection lost
                         A13O9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A13O9999
.
A13O9100  MOVE      ONE,EXIT
          GOTO      A13O9999
.
A13O9200  MOVE      TWO,EXIT
          GOTO      A13O9999
.
A13O9400  MOVE      FOUR,EXIT
.
A13O9999  RETURN
+
.******************************************************************************
.*                                  A14A0000       Called by: RCIS0000        *
.*                       Write Pre-admission Message                          *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record                       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A14A0000  PACK      KEY22,H7CIMESI,SP1,ONE
          CALL      RDPMQVI1                     * visit details found ?
          BRANCH    OVRCD,A14A9300               * no - error
.
          MOVE      AADMNO,VISNUMBR              * load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A14A9100:               * connection lost
                         A14A9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A14A9100:               * connection lost
                         A14A9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A14A9100:               * connection lost
                         A14A9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,A14A9100:               * connection lost
                         A14A9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A14A9100:               * connection lost
                         A14A9200                * timeout
          CALL      WPV20000                     * format PV2 segment
          BRANCH    EXIT,A14A9100:               * connection lost
                         A14A9200                * timeout
          CALL      WRAL1000                     * format & write AL1 segment
          BRANCH    EXIT,A14A9100:               * connection lost
                         A14A9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A14A9100:               * connection lost
                         A14A9200                * timeout
          CALL      WPR10000                     * format PR1 segment
          BRANCH    EXIT,A14A9100:               * connection lost
                         A14A9200                * timeout
          CALL      WGT10000                     * format GT1 segment
          BRANCH    EXIT,A14A9100:               * connection lost
                         A14A9200                * timeout
          CALL      WRIN1000                     * format IN1 segment
          BRANCH    EXIT,A14A9100:               * connection lost
                         A14A9200                * timeout
          CALL      WRZAL000                     * format & write ZAL segment
          BRANCH    EXIT,A14A9100:               * connection lost
                         A14A9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A14A9100:               * connection lost
                         A14A9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A14A9100:               * connection lost
                         A14A9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A14A9100:               * connection lost
                         A14A9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A14A9999
.
A14A9100  MOVE      ONE,EXIT
          GOTO      A14A9999
.
A14A9200  MOVE      TWO,EXIT
          GOTO      A14A9999
.
A14A9300  MOVE      THREE,EXIT
.
A14A9999  RETURN
+
.******************************************************************************
.*                                  A21A0000       Called by: RCIS0000        *
.*                       Write On-leave Message                               *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record                       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A21A0000  PACK      KEY22,H7CIMESI,SP1,ONE
          CALL      RDPMQVI1                     * visit details found ?
          BRANCH    OVRCD,A21A9300               * no - error
.
          MOVE      AADMNO,VISNUMBR              * load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A21A9100:               * connection lost
                         A21A9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A21A9100:               * connection lost
                         A21A9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A21A9100:               * connection lost
                         A21A9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A21A9100:               * connection lost
                         A21A9200                * timeout
          CALL      WPV20000                     * format PV2 segment
          BRANCH    EXIT,A21A9100:               * connection lost
                         A21A9200                * timeout
          MOVE      PTCNMDG1,F1                  * sending DG1 in A21 ?
          IF        F1=1 | F1=3
            CALL      WRDG1000                   * format DG1 segment
            BRANCH    EXIT,A21A9100:             * connection lost
                           A21A9200              * timeout
          ENDIF
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A21A9100:               * connection lost
                         A21A9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A21A9100:               * connection lost
                         A21A9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A21A9100:               * connection lost
                         A21A9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A21A9999
.
A21A9100  MOVE      ONE,EXIT
          GOTO      A21A9999
.
A21A9200  MOVE      TWO,EXIT
          GOTO      A21A9999
.
A21A9300  MOVE      THREE,EXIT
.
A21A9999  RETURN
+
.******************************************************************************
.*                                  A22A0000       Called by: RCIS0000        *
.*                       Write Return from Leave                              *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record                       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A22A0000  PACK      KEY22,H7CIMESI,SP1,ONE
          CALL      RDPMQVI1                     * visit details found ?
          BRANCH    OVRCD,A22A9300               * no - error
.
          MOVE      AADMNO,VISNUMBR              * load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A22A9100:               * connection lost
                         A22A9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A22A9100:               * connection lost
                         A22A9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A22A9100:               * connection lost
                         A22A9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A22A9100:               * connection lost
                         A22A9200                * timeout
          CALL      WPV20000                     * format PV2 segment
          BRANCH    EXIT,A22A9100:               * connection lost
                         A22A9200                * timeout
          MOVE      PTCNMDG1,F1                  * sending DG1 in A22 ?
          IF        F1=1 | F1=3
            CALL      WRDG1000                   * format DG1 segment
            BRANCH    EXIT,A22A9100:             * connection lost
                           A22A9200              * timeout
          ENDIF
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A22A9100:               * connection lost
                         A22A9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A22A9100:               * connection lost
                         A22A9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A22A9100:               * connection lost
                         A22A9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A22A9999
.
A22A9100  MOVE      ONE,EXIT
          GOTO      A22A9999
.
A22A9200  MOVE      TWO,EXIT
          GOTO      A22A9999
.
A22A9300  MOVE      THREE,EXIT
.
A22A9999  RETURN
+
.******************************************************************************
.*                                  A27A0000       Called by: RCIS0000        *
.*                       Write Cancel Pre-admission Message                   *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record                       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A27A0000  PACK      KEY22,H7CIMESI,SP1,ONE
          CALL      RDPMQVI1                     * visit details found ?
          BRANCH    OVRCD,A27A9300               * no - error
.
          MOVE      AADMNO,VISNUMBR              * load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A27A9100:               * connection lost
                         A27A9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A27A9100:               * connection lost
                         A27A9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A27A9100:               * connection lost
                         A27A9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A27A9100:               * connection lost
                         A27A9200                * timeout
          CALL      WPV20000                     * format PV2 segment
          BRANCH    EXIT,A27A9100:               * connection lost
                         A27A9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A27A9100:               * connection lost
                         A27A9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A27A9100:               * connection lost
                         A27A9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A27A9100:               * connection lost
                         A27A9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A27A9999
.
A27A9100  MOVE      ONE,EXIT
          GOTO      A27A9999
.
A27A9200  MOVE      TWO,EXIT
          GOTO      A27A9999
.
A27A9300  MOVE      THREE,EXIT
.
A27A9999  RETURN
+
.******************************************************************************
.*                                  A28P0000       Called by: RCIS0000        *
.*                       Write Patient Registration (PMI)                     *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A28P0000  CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A28P9100:               * connection lost
                         A28P9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A28P9100:               * connection lost
                         A28P9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A28P9100:               * connection lost
                         A28P9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,A28P9100:               * connection lost
                         A28P9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A28P9100:               * connection lost
                         A28P9200                * timeout
          CALL      WRAL1000                     * format & write AL1 segment
          BRANCH    EXIT,A28P9100:               * connection lost
                         A28P9200                * timeout
          CALL      WRZAL000                     * format & write ZAL segment
          BRANCH    EXIT,A28P9100:               * connection lost
                         A28P9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A28P9100:               * connection lost
                         A28P9200                * timeout
          CALL      WRZSD000                     * format ZSD segment
          BRANCH    EXIT,A28P9100:               * connection lost
                         A28P9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A28P9100:               * connection lost
                         A28P9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A28P9999
.
A28P9100  MOVE      ONE,EXIT
          GOTO      A28P9999
.
A28P9200  MOVE      TWO,EXIT
.
A28P9999  RETURN
+
.******************************************************************************
.*                                  A31P0000       Called by: RCIS0000        *
.*                       Write PMI Update Message                             *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A31P0000  CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A31P9100:               * connection lost
                         A31P9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A31P9100:               * connection lost
                         A31P9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A31P9100:               * connection lost
                         A31P9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,A31P9100:               * connection lost
                         A31P9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A31P9100:               * connection lost
                         A31P9200                * timeout
          CALL      WRAL1000                     * format & write AL1 segment
          BRANCH    EXIT,A31P9100:               * connection lost
                         A31P9200                * timeout
          CALL      WRZAL000                     * format & write ZAL segment
          BRANCH    EXIT,A31P9100:               * connection lost
                         A31P9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A31P9100:               * connection lost
                         A31P9200                * timeout
          CALL      WRZSD000                     * format ZSD segment
          BRANCH    EXIT,A31P9100:               * connection lost
                         A31P9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A31P9100:               * connection lost
                         A31P9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A31P9999
.
A31P9100  MOVE      ONE,EXIT
          GOTO      A31P9999
.
A31P9200  MOVE      TWO,EXIT
.
A31P9999  RETURN
+
.******************************************************************************
.*                                  A34P0000       Called by: RCIS0000        *
.*                       Write Merge U/R Message                              *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A34P0000  CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A34P9100:               * connection lost
                         A34P9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A34P9100:               * connection lost
                         A34P9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A34P9100:               * connection lost
                         A34P9200                * timeout
          CALL      WMRG0000                     * format MRG segment
          BRANCH    EXIT,A34P9100:               * connection lost
                         A34P9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A34P9100:               * connection lost
                         A34P9200                * timeout
          CALL      WRZSD000                     * format ZSD segment
          BRANCH    EXIT,A34P9100:               * connection lost
                         A34P9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A34P9100:               * connection lost
                         A34P9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A34P9999
.
A34P9100  MOVE      ONE,EXIT
          GOTO      A34P9999
.
A34P9200  MOVE      TWO,EXIT
.
A34P9999  RETURN
+
.******************************************************************************
.*                                  A37P0000       Called by: RCIS0000        *
.*                       Write UnMerge U/R Message                            *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A37P0000  CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A37P9100:               * connection lost
                         A37P9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A37P9100:               * connection lost
                         A37P9200                * timeout
          CALL      WRPID000                     * format PID segment 1
          BRANCH    EXIT,A37P9100:               * connection lost
                         A37P9200                * timeout
.
.         The second PID segment contains the details of the patient we are
.         'restoring' with the unmerge message
.
A37P1000  MOVE      PMQPOURN,KEY8                * get UnMerged patient details
          CALL      RDMAST1
          IF        OVRCD=1
            CALL      CLPATMAS
          ENDIF
          MOVE      PURNO,KEY8
          CALL      RDPMPX21
          IF        OVRCD=1
            CALL      CLPMSPX2
          ENDIF
          MOVE      PURNO,KEY8
          CALL      RDNHMAS2
          IF        OVRCD=1
            CALL      CLNHIMAS
          ENDIF
.
          CALL      CLRTMP00                     * clear alias temp file
.
          CALL      WRPID000                     * format PID segment 2
          BRANCH    EXIT,A37P9100:               * connection lost
                         A37P9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A37P9999
.
A37P9100  MOVE      ONE,EXIT
          GOTO      A37P9999
.
A37P9200  MOVE      TWO,EXIT
.
A37P9999  RETURN
+
.******************************************************************************
.*                                  A38O0000       Called by: RCIS0000        *
.*                       Write Cancel O/P Pre-admit (Booking)                 *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record                       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A38O0000  PACK      KEY20,H7CIMESI
          CALL      RDOTQUE1                     * visit details found ?
          BRANCH    OVRCD,A38O9400               * no - error
.
          MOVE      OBAOUTNO,VISNUMBR            * load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A38O9100:               * connection lost
                         A38O9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A38O9100:               * connection lost
                         A38O9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A38O9100:               * connection lost
                         A38O9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A38O9100:               * connection lost
                         A38O9200                * timeout
          CALL      WPV20000                     * format PV2 segment
          BRANCH    EXIT,A38O9100:               * connection lost
                         A38O9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A38O9100:               * connection lost
                         A38O9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A38O9100:               * connection lost
                         A38O9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A38O9100:               * connection lost
                         A38O9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A38O9100:               * connection lost
                         A38O9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A38O9999
.
A38O9100  MOVE      ONE,EXIT
          GOTO      A38O9999
.
A38O9200  MOVE      TWO,EXIT
          GOTO      A38O9999
.
A38O9400  MOVE      FOUR,EXIT
.
A38O9999  RETURN
+
.******************************************************************************
.*                                  A38W0000       Called by: RCIS0000        *
.*           Write W/L Cancel Booking message                                 *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving holding table record (see EXIT2)      *
.*          EXIT2 10 = error retrieving watqueaf record                       *
.******************************************************************************
.
A38W0000  PACK      KEY20,H7CIMESI
          CALL      RDWTQUE1                     * booking details found ?
          BRANCH    OVRCD,A38W9900
.
          MOVE      WMBOOK,VISNUMBR              * yes - load visit number
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A38W9100:               * connection lost
                         A38W9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A38W9100:               * connection lost
                         A38W9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A38W9100:               * connection lost
                         A38W9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,A38W9100:               * connection lost
                         A38W9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,A38W9100:               * connection lost
                         A38W9200                * timeout
          CALL      WPV20000                     * format PV2 segment
          BRANCH    EXIT,A38W9100:               * connection lost
                         A38W9200                * timeout
          CALL      WRAL1000                     * format AL1 segment
          BRANCH    EXIT,A38W9100:               * connection lost
                         A38W9200                * timeout
          CALL      WRDG1000                     * format DG1 segment
          BRANCH    EXIT,A38W9100:               * connection lost
                         A38W9200                * timeout
          CALL      WPR10000                     * format PR1 segment
          BRANCH    EXIT,A38W9100:               * connection lost
                         A38W9200                * timeout
          CALL      WRZAL000                     * format & write ZAL segment
          BRANCH    EXIT,A38W9100:               * connection lost
                         A38W9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A38W9100:               * connection lost
                         A38W9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,A38W9100:               * connection lost
                         A38W9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A38W9100:               * connection lost
                         A38W9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A38W9999
.
A38W9100  MOVE      ONE,EXIT
          GOTO      A38W9999
.
A38W9200  MOVE      TWO,EXIT
          GOTO      A38W9999
.
A38W9900  MOVE      NINE,EXIT
          MOVE      TEN,EXIT2
.
A38W9999  RETURN
+
.******************************************************************************
.*                                  A44A0000       Called by: RCIS0000        *
.*                       Write Change U/R for I/P Visit (Move visit)          *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record                       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A44A0000  PACK      KEY22,H7CIMESI,SP1,ONE
          CALL      RDPMQVI1                     * visit details found ?
          BRANCH    OVRCD,A44A9300               * no - error
.
          MOVE      AADMNO,VISNUMBR              * load visit number
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A44A9100:               * connection lost
                         A44A9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A44A9100:               * connection lost
                         A44A9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A44A9100:               * connection lost
                         A44A9200                * timeout
          CALL      WMRG0000                     * format MRG segment
          BRANCH    EXIT,A44A9100:               * connection lost
                         A44A9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A44A9100:               * connection lost
                         A44A9200                * timeout
          CALL      WRZSD000                     * format ZSD segment
          BRANCH    EXIT,A44A9100:               * connection lost
                         A44A9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A44A9100:               * connection lost
                         A44A9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A44A9999
.
A44A9100  MOVE      ONE,EXIT
          GOTO      A44A9999
.
A44A9200  MOVE      TWO,EXIT
          GOTO      A44A9999
.
A44A9300  MOVE      THREE,EXIT
.
A44A9999  RETURN
+
.******************************************************************************
.*                                  A44O0000       Called by: RCIS0000        *
.*                       Write Change U/R for O/P Visit (Move visit)          *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record                       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A44O0000  PACK      KEY20,H7CIMESI
          CALL      RDOTQUE1                     * visit details found ?
          BRANCH    OVRCD,A44O9400               * no - error
.
          MOVE      OBAOUTNO,VISNUMBR            * load visit number
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A44O9100:               * connection lost
                         A44O9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A44O9100:               * connection lost
                         A44O9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A44O9100:               * connection lost
                         A44O9200                * timeout
          CALL      WMRG0000                     * format MRG segment
          BRANCH    EXIT,A44O9100:               * connection lost
                         A44O9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A44O9100:               * connection lost
                         A44O9200                * timeout
          CALL      WRZSD000                     * format ZSD segment
          BRANCH    EXIT,A44O9100:               * connection lost
                         A44O9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A44O9100:               * connection lost
                         A44O9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A44O9999
.
A44O9100  MOVE      ONE,EXIT
          GOTO      A44O9999
.
A44O9200  MOVE      TWO,EXIT
          GOTO      A44O9999
.
A44O9400  MOVE      FOUR,EXIT
.
A44O9999  RETURN
+
.******************************************************************************
.*                                  A44E0000       Called by: RCIS0000        *
.*                       Write Change U/R for Emergency Visit (Move visit)    *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record                       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record                       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A44E0000  PACK      KEY20,H7CIMESI
          CALL      RDEMQUE1                     * visit details found ?
          BRANCH    OVRCD,A44E9500               * no - error
.
          MOVE      EMVIADMN,VISNUMBR            * load visit number
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A44E9100:               * connection lost
                         A44E9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A44E9100:               * connection lost
                         A44E9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A44E9100:               * connection lost
                         A44E9200                * timeout
          CALL      WMRG0000                     * format MRG segment
          BRANCH    EXIT,A44E9100:               * connection lost
                         A44E9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A44E9100:               * connection lost
                         A44E9200                * timeout
          CALL      WRZSD000                     * format ZSD segment
          BRANCH    EXIT,A44E9100:               * connection lost
                         A44E9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A44E9100:               * connection lost
                         A44E9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A44E9999
.
A44E9100  MOVE      ONE,EXIT
          GOTO      A44E9999
.
A44E9200  MOVE      TWO,EXIT
          GOTO      A44E9999
.
A44E9300  MOVE      THREE,EXIT
          GOTO      A44E9999
.
A44E9500  MOVE      FIVE,EXIT
.
A44E9999  RETURN
+
.******************************************************************************
.*                                  A44W0000       Called by: RCIS0000        *
.*                       Write Change U/R for Waiting List (Move procedure)   *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving holding table record (see EXIT2)      *
.*          EXIT2 10 = error retrieving watqueaf record                       *
.******************************************************************************
.
A44W0000  PACK      KEY20,H7CIMESI
          CALL      RDWTQUE1                     * visit details found ?
          BRANCH    OVRCD,A44W9500               * no - error
.
          MOVE      WMBOOK,VISNUMBR              * load visit number
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A44W9100:               * connection lost
                         A44W9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A44W9100:               * connection lost
                         A44W9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A44W9100:               * connection lost
                         A44W9200                * timeout
          CALL      WMRG0000                     * format MRG segment
          BRANCH    EXIT,A44W9100:               * connection lost
                         A44W9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A44W9100:               * connection lost
                         A44W9200                * timeout
          CALL      WRZSD000                     * format ZSD segment
          BRANCH    EXIT,A44W9100:               * connection lost
                         A44W9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A44W9100:               * connection lost
                         A44W9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A44W9999
.
A44W9100  MOVE      ONE,EXIT
          GOTO      A44W9999
.
A44W9200  MOVE      TWO,EXIT
          GOTO      A44W9999
.
A44W9500  MOVE      NINE,EXIT
          MOVE      TEN,EXIT2
.
A44W9999  RETURN
+
.******************************************************************************
.*                                  A44L0000       Called by: RCIS0000        *
.*                       Write Change U/R for Referral     (Move referral)    *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record                       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
A44L0000  PACK      KEY20,H7CIMESI
          CALL      RDALQUE1                     * referral details found ?
          BRANCH    OVRCD,A44L9500               * no - error
.
          MOVE      ALREVISN,VISNUMBR            * load visit number
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,A44L9100:               * connection lost
                         A44L9200                * timeout
          CALL      WEVN0000                     * format EVN segment
          BRANCH    EXIT,A44L9100:               * connection lost
                         A44L9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,A44L9100:               * connection lost
                         A44L9200                * timeout
          CALL      WMRG0000                     * format MRG segment
          BRANCH    EXIT,A44L9100:               * connection lost
                         A44L9200                * timeout
          CALL      WRAL1000                     * format AL1 segment
          BRANCH    EXIT,A44L9100:               * connection lost
                         A44L9200                * timeout
          CALL      WRZAL000                     * format ZAL segment
          BRANCH    EXIT,A44L9100:               * connection lost
                         A44L9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,A44L9100:               * connection lost
                         A44L9200                * timeout
          CALL      WRZSD000                     * format ZSD segment
          BRANCH    EXIT,A44L9100:               * connection lost
                         A44L9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,A44L9100:               * connection lost
                         A44L9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      A44L9999
.
A44L9100  MOVE      ONE,EXIT
          GOTO      A44L9999
.
A44L9200  MOVE      TWO,EXIT
          GOTO      A44L9999
.
A44L9500  MOVE      FIVE,EXIT
.
A44L9999  RETURN
+
.******************************************************************************
.*                                  M01O0000       Called by: RCIS0000        *
.*                       Write O/P Clinic Master/Type Message                 *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving holding table record (see EXIT2)      *
.*          EXIT2 10 = error retrieving watqueaf record (not used here)       *
.*                11 = error retrieving outqmaaf or outqtyaf record           *
.******************************************************************************
.
M01O0000  PACK      KEY20,H7CIMESI
          CALL      RDOTQMA1                     * clinic master details found ?
          IF        OVRCD=0
            MOVE      "ZCM",MFIMTYPE             * ZCM identifier
            MOVE      "Clinic Master",MFIMDESC   * ZCM identifier desc
            GOTO      M01O1000
          ENDIF
.
          PACK      KEY20,H7CIMESI
          CALL      RDOTQTY1                     * clinic type details found ?
          BRANCH    OVRCD,M01O9600               * no - error
.
          MOVE      "ZCT",MFIMTYPE               * ZCT identifier
          MOVE      "Clinic Type",MFIMDESC       * ZCT identifier desc
.
M01O1000  CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,M01O9100:               * connection lost
                         M01O9200                * timeout
          CALL      WMFI0000                     * format MFI segment
          BRANCH    EXIT,M01O9100:               * connection lost
                         M01O9200                * timeout
          CALL      WMFE0000                     * format MFE segment
          BRANCH    EXIT,M01O9100:               * connection lost
                         M01O9200                * timeout
.
          MATCH     "ZCM",MFIMTYPE
          GOTO      M01O2000 IF NOT EQUAL
.
          CALL      WZCM0000                     * format ZCM segment
          BRANCH    EXIT,M01O9100:               * connection lost
                         M01O9200                * timeout
.
M01O2000  MATCH     "ZCT",MFIMTYPE
          GOTO      M01O9000 IF NOT EQUAL
.
          CALL      WZCT0000                     * format ZCT segment
          BRANCH    EXIT,M01O9100:               * connection lost
                         M01O9200                * timeout
.
M01O9000  MOVE      ZERO,EXIT
          GOTO      M01O9999
.
M01O9100  MOVE      ONE,EXIT
          GOTO      M01O9999
.
M01O9200  MOVE      TWO,EXIT
          GOTO      M01O9999
.
M01O9600  MOVE      NINE,EXIT
          MOVE      TEN1,EXIT2                   * no outqma or outqty record
.
M01O9999  RETURN
+
.******************************************************************************
.*                                  M02P0000       Called by: RCIS0000        *
.*                       Write Practitioner Master File Message               *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record                       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
M02P0000  PACK      KEY20,H7CIMESI
          CALL      RDPMQDR1                     * visit details found ?
          BRANCH    OVRCD,M02P9600               * no - error
.
          MOVE      "PRA",MFIMTYPE               * PRA identifier
          MOVE      "Practitioner",MFIMDESC      * PRA identifier desc
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,M02P9100:               * connection lost
                         M02P9200                * timeout
          CALL      WMFI0000                     * format MFI segment
          BRANCH    EXIT,M02P9100:               * connection lost
                         M02P9200                * timeout
          CALL      WMFE0000                     * format MFE segment
          BRANCH    EXIT,M02P9100:               * connection lost
                         M02P9200                * timeout
          CALL      WSTF0000                     * format STF segment
          BRANCH    EXIT,M02P9100:               * connection lost
                         M02P9200                * timeout
          CALL      WPRA0000                     * format PRA segment
          BRANCH    EXIT,M02P9100:               * connection lost
                         M02P9200                * timeout
          CALL      WZLH0000                     * format ZLH segment
          BRANCH    EXIT,M02P9100:               * connection lost
                         M02P9200                * timeout
          CALL      WZST0000                     * format ZST segment
          BRANCH    EXIT,M02P9100:               * connection lost
                         M02P9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      M02P9999
.
M02P9100  MOVE      ONE,EXIT
          GOTO      M02P9999
.
M02P9200  MOVE      TWO,EXIT
          GOTO      M02P9999
.
M02P9600  MOVE      SIX,EXIT
.
M02P9999  RETURN
+
.******************************************************************************
.*                                  S12A0000       Called by: RCIS0000        *
.*                          Write new theatre booking                         *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record                       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
S12A0000  PACK      KEY20,H7CIMESI
          CALL      RDOPQUE1                     * visit details found ?
          BRANCH    OVRCD,S12A9700               * no - error
.
          MOVE      OPDAADMN,VISNUMBR            * load visit number
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,S12A9100:               * connection lost
                         S12A9200                * timeout
          CALL      WSCH0000                     * format SCH segment
          BRANCH    EXIT,S12A9100:               * connection lost
                         S12A9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,S12A9100:               * connection lost
                         S12A9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,S12A9100:               * connection lost
                         S12A9200                * timeout
          CALL      WOBX0000                     * format OBX segment
          BRANCH    EXIT,S12A9100:               * connection lost
                         S12A9200                * timeout
          CALL      WRGS0000                     * format RGS segment
          BRANCH    EXIT,S12A9100:               * connection lost
                         S12A9200                * timeout
          CALL      WAIS0000                     * format AIS segment
          BRANCH    EXIT,S12A9100:               * connection lost
                         S12A9200                * timeout
          CALL      WAIL0000                     * format AIL segment
          BRANCH    EXIT,S12A9100:               * connection lost
                         S12A9200                * timeout
          CALL      WAIP0000                     * format AIP segment
          BRANCH    EXIT,S12A9100:               * connection lost
                         S12A9200                * timeout
          CALL      WRZAL000                     * format & write ZAL segment
          BRANCH    EXIT,S12A9100:               * connection lost
                         S12A9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,S12A9100:               * connection lost
                         S12A9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      S12A9999
.
S12A9100  MOVE      ONE,EXIT
          GOTO      S12A9999
.
S12A9200  MOVE      TWO,EXIT
          GOTO      S12A9999
.
S12A9700  MOVE      SEVEN,EXIT
.
S12A9999  RETURN
+
.******************************************************************************
.*                                  S14A0000       Called by: RCIS0000        *
.*                          Write modify theatre booking                      *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record                       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
S14A0000  PACK      KEY20,H7CIMESI
          CALL      RDOPQUE1                     * visit details found ?
          BRANCH    OVRCD,S14A9700               * no - error
.
          MOVE      OPDAADMN,VISNUMBR            * load visit number
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,S14A9100:               * connection lost
                         S14A9200                * timeout
          CALL      WSCH0000                     * format SCH segment
          BRANCH    EXIT,S14A9100:               * connection lost
                         S14A9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,S14A9100:               * connection lost
                         S14A9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,S14A9100:               * connection lost
                         S14A9200                * timeout
          CALL      WOBX0000                     * format OBX segment
          BRANCH    EXIT,S14A9100:               * connection lost
                         S14A9200                * timeout
          CALL      WRGS0000                     * format RGS segment
          BRANCH    EXIT,S14A9100:               * connection lost
                         S14A9200                * timeout
          CALL      WAIS0000                     * format AIS segment
          BRANCH    EXIT,S14A9100:               * connection lost
                         S14A9200                * timeout
          CALL      WAIL0000                     * format AIL segment
          BRANCH    EXIT,S14A9100:               * connection lost
                         S14A9200                * timeout
          CALL      WAIP0000                     * format AIP segment
          BRANCH    EXIT,S14A9100:               * connection lost
                         S14A9200                * timeout
          CALL      WRZAL000                     * format & write ZAL segment
          BRANCH    EXIT,S14A9100:               * connection lost
                         S14A9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,S14A9100:               * connection lost
                         S14A9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      S14A9999
.
S14A9100  MOVE      ONE,EXIT
          GOTO      S14A9999
.
S14A9200  MOVE      TWO,EXIT
          GOTO      S14A9999
.
S14A9700  MOVE      SEVEN,EXIT
.
S14A9999  RETURN
+
.******************************************************************************
.*                                  S15A0000       Called by: RCIS0000        *
.*                          Write cancel theatre booking                      *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record                       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
S15A0000  PACK      KEY20,H7CIMESI
          CALL      RDOPQUE1                     * visit details found ?
          BRANCH    OVRCD,S15A9700               * no - error
.
          MOVE      OPDAADMN,VISNUMBR            * load visit number
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,S15A9100:               * connection lost
                         S15A9200                * timeout
          CALL      WSCH0000                     * format SCH segment
          BRANCH    EXIT,S15A9100:               * connection lost
                         S15A9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,S15A9100:               * connection lost
                         S15A9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,S15A9100:               * connection lost
                         S15A9200                * timeout
          CALL      WOBX0000                     * format OBX segment
          BRANCH    EXIT,S15A9100:               * connection lost
                         S15A9200                * timeout
          CALL      WRGS0000                     * format RGS segment
          BRANCH    EXIT,S15A9100:               * connection lost
                         S15A9200                * timeout
          CALL      WAIS0000                     * format AIS segment
          BRANCH    EXIT,S15A9100:               * connection lost
                         S15A9200                * timeout
          CALL      WAIL0000                     * format AIL segment
          BRANCH    EXIT,S15A9100:               * connection lost
                         S15A9200                * timeout
          CALL      WAIP0000                     * format AIP segment
          BRANCH    EXIT,S15A9100:               * connection lost
                         S15A9200                * timeout
          CALL      WRZAL000                     * format & write ZAL segment
          BRANCH    EXIT,S15A9100:               * connection lost
                         S15A9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,S15A9100:               * connection lost
                         S15A9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      S15A9999
.
S15A9100  MOVE      ONE,EXIT
          GOTO      S15A9999
.
S15A9200  MOVE      TWO,EXIT
          GOTO      S15A9999
.
S15A9700  MOVE      SEVEN,EXIT
.
S15A9999  RETURN
+
.******************************************************************************
.*                                  I12W0000       Called by: RCIS0000        *
.*                            Write W/L Add entry                             *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving holding table record (see EXIT2)      *
.*          EXIT2 10 = error retrieving watqueaf record                       *
.******************************************************************************
.
I12W0000  MOVE      H7CIMESI,KEY20
          CALL      RDWTQUE1                     * waiting list details found ?
          BRANCH    OVRCD,I12W9900               * no - error
.
          MOVE      WMBOOK,VISNUMBR              * yes - load visit number
.
          MOVE      VISNUMBR,KEY8
          CALL      RDPMVX11                     * get visit ext. record
          IF        OVRCD=1
            CALL      CLPMSVX1                   * clear visit extension fields
          ENDIF
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,I12W9100:               * connection lost
                         I12W9200                * timeout
          CALL      WRF10000                     * format RF1 segment
          BRANCH    EXIT,I12W9100:               * connection lost
                         I12W9200                * timeout
          CALL      WPRD0000                     * format PRD segment
          BRANCH    EXIT,I12W9100:               * connection lost
                         I12W9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,I12W9100:               * connection lost
                         I12W9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,I12W9100:               * connection lost
                         I12W9200                * timeout
          CALL      WPR10000                     * format PR1 segment
          BRANCH    EXIT,I12W9100:               * connection lost
                         I12W9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,I12W9100:               * connection lost
                         I12W9200                * timeout
          CALL      WRZAL000                     * format ZAL segment
          BRANCH    EXIT,I12W9100:               * connection lost
                         I12W9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,I12W9100:               * connection lost
                         I12W9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,I12W9100:               * connection lost
                         I12W9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,I12W9100:               * connection lost
                         I12W9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      I12W9999
.
I12W9100  MOVE      ONE,EXIT
          GOTO      I12W9999
.
I12W9200  MOVE      TWO,EXIT
          GOTO      I12W9999
.
I12W9900  MOVE      NINE,EXIT
          MOVE      TEN,EXIT2
.
I12W9999  RETURN
+
.******************************************************************************
.*                                  I13W0000       Called by: RCIS0000        *
.*                            Write W/L Update entry                          *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving holding table record (see EXIT2)      *
.*          EXIT2 10 = error retrieving watqueaf record                       *
.******************************************************************************
.
I13W0000  MOVE      H7CIMESI,KEY20
          CALL      RDWTQUE1                     * waiting list details found ?
          BRANCH    OVRCD,I13W9900               * no - error
.
          MOVE      WMBOOK,VISNUMBR              * yes - load visit number
.
          MOVE      VISNUMBR,KEY8
          CALL      RDPMVX11                     * get visit ext. record
          IF        OVRCD=1
            CALL      CLPMSVX1                   * clear visit extension fields
          ENDIF
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,I13W9100:               * connection lost
                         I13W9200                * timeout
          CALL      WRF10000                     * format RF1 segment
          BRANCH    EXIT,I13W9100:               * connection lost
                         I13W9200                * timeout
          CALL      WPRD0000                     * format PRD segment
          BRANCH    EXIT,I13W9100:               * connection lost
                         I13W9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,I13W9100:               * connection lost
                         I13W9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,I13W9100:               * connection lost
                         I13W9200                * timeout
          CALL      WPR10000                     * format PR1 segment
          BRANCH    EXIT,I13W9100:               * connection lost
                         I13W9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,I13W9100:               * connection lost
                         I13W9200                * timeout
          CALL      WRZAL000                     * format ZAL segment
          BRANCH    EXIT,I13W9100:               * connection lost
                         I13W9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,I13W9100:               * connection lost
                         I13W9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,I13W9100:               * connection lost
                         I13W9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,I13W9100:               * connection lost
                         I13W9200                * timeout
          CALL      WRZEC000                     * format ZEC segment
          BRANCH    EXIT,I13W9100:               * connection lost
                         I13W9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      I13W9999
.
I13W9100  MOVE      ONE,EXIT
          GOTO      I13W9999
.
I13W9200  MOVE      TWO,EXIT
          GOTO      I13W9999
.
I13W9900  MOVE      NINE,EXIT
          MOVE      TEN,EXIT2
.
I13W9999  RETURN
+
.******************************************************************************
.*                                  I14W0000       Called by: RCIS0000        *
.*                            Write W/L Remove entry                          *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record (not used here)       *
.*                 9 = error retrieving holding table record (see EXIT2)      *
.*          EXIT2 10 = error retrieving watqueaf record                       *
.******************************************************************************
.
I14W0000  MOVE      H7CIMESI,KEY20
          CALL      RDWTQUE1                     * waiting list details found ?
          BRANCH    OVRCD,I14W9900               * no - error
.
          MOVE      WMBOOK,VISNUMBR              * yes - load visit number
.
          MOVE      VISNUMBR,KEY8
          CALL      RDPMVX11                     * get visit ext. record
          IF        OVRCD=1
            CALL      CLPMSVX1                   * clear visit extension fields
          ENDIF
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,I14W9100:               * connection lost
                         I14W9200                * timeout
          CALL      WRF10000                     * format RF1 segment
          BRANCH    EXIT,I14W9100:               * connection lost
                         I14W9200                * timeout
          CALL      WPRD0000                     * format PRD segment
          BRANCH    EXIT,I14W9100:               * connection lost
                         I14W9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,I14W9100:               * connection lost
                         I14W9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,I14W9100:               * connection lost
                         I14W9200                * timeout
          CALL      WPR10000                     * format PR1 segment
          BRANCH    EXIT,I14W9100:               * connection lost
                         I14W9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,I14W9100:               * connection lost
                         I14W9200                * timeout
          CALL      WRZAL000                     * format ZAL segment
          BRANCH    EXIT,I14W9100:               * connection lost
                         I14W9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,I14W9100:               * connection lost
                         I14W9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,I14W9100:               * connection lost
                         I14W9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,I14W9100:               * connection lost
                         I14W9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      I14W9999
.
I14W9100  MOVE      ONE,EXIT
          GOTO      I14W9999
.
I14W9200  MOVE      TWO,EXIT
          GOTO      I14W9999
.
I14W9900  MOVE      NINE,EXIT
          MOVE      TEN,EXIT2
.
I14W9999  RETURN
+
.******************************************************************************
.*                                  I12L0000       Called by: RCIS0000        *
.*                       Write A/H Referral Add                               *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record                       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
I12L0000  MOVE      H7CIMESI,KEY20
          CALL      RDALQUE1                     * referral details found ?
          BRANCH    OVRCD,I12L9800               * no - error
.
          MOVE      ALREVISN,VISNUMBR            * load visit number
.
          MOVE      VISNUMBR,KEY8
          CALL      RDPMVX11                     * get visit ext. record
          IF        OVRCD=1
            CALL      CLPMSVX1                   * clear visit extension fields
          ENDIF
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,I12L9100:               * connection lost
                         I12L9200                * timeout
          CALL      WRF10000                     * format RF1 segment
          BRANCH    EXIT,I12L9100:               * connection lost
                         I12L9200                * timeout
          CALL      WPRD0000                     * format PRD segment
          BRANCH    EXIT,I12L9100:               * connection lost
                         I12L9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,I12L9100:               * connection lost
                         I12L9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,I12L9100:               * connection lost
                         I12L9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,I12L9100:               * connection lost
                         I12L9200                * timeout
          CALL      WRAL1000                     * format AL1 segment
          BRANCH    EXIT,I12L9100:               * connection lost
                         I12L9200                * timeout
          CALL      WRZAL000                     * format ZAL segment
          BRANCH    EXIT,I12L9100:               * connection lost
                         I12L9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,I12L9100:               * connection lost
                         I12L9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,I12L9100:               * connection lost
                         I12L9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,I12L9100:               * connection lost
                         I12L9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      I12L9999
.
I12L9100  MOVE      ONE,EXIT
          GOTO      I12L9999
.
I12L9200  MOVE      TWO,EXIT
          GOTO      I12L9999
.
I12L9800  MOVE      EIGHT,EXIT
.
I12L9999  RETURN
+
.******************************************************************************
.*                                  I13L0000       Called by: RCIS0000        *
.*                       Write A/H Referral Update                            *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record                       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
I13L0000  MOVE      H7CIMESI,KEY20
          CALL      RDALQUE1                     * referral details found ?
          BRANCH    OVRCD,I13L9800               * no - error
.
          MOVE      ALREVISN,VISNUMBR            * load visit number
.
          MOVE      VISNUMBR,KEY8
          CALL      RDPMVX11                     * get visit ext. record
          IF        OVRCD=1
            CALL      CLPMSVX1                   * clear visit extension fields
          ENDIF
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,I13L9100:               * connection lost
                         I13L9200                * timeout
          CALL      WRF10000                     * format RF1 segment
          BRANCH    EXIT,I13L9100:               * connection lost
                         I13L9200                * timeout
          CALL      WPRD0000                     * format PRD segment
          BRANCH    EXIT,I13L9100:               * connection lost
                         I13L9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,I13L9100:               * connection lost
                         I13L9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,I13L9100:               * connection lost
                         I13L9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,I13L9100:               * connection lost
                         I13L9200                * timeout
          MOVE      PTCNMDG1,F1                  * sending DG1 in I13 ?
          IF        F1=2 | F1=3
            CALL      WRDG1000                   * format DG1 segment
            BRANCH    EXIT,I13L9100:             * connection lost
                           I13L9200              * timeout
          ENDIF
          CALL      WRAL1000                     * format AL1 segment
          BRANCH    EXIT,I13L9100:               * connection lost
                         I13L9200                * timeout
          CALL      WRZAL000                     * format ZAL segment
          BRANCH    EXIT,I13L9100:               * connection lost
                         I13L9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,I13L9100:               * connection lost
                         I13L9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,I13L9100:               * connection lost
                         I13L9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,I13L9100:               * connection lost
                         I13L9200                * timeout
          CALL      WRZEC000                     * format ZEC segment
          BRANCH    EXIT,I13L9100:               * connection lost
                         I13L9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      I13L9999
.
I13L9100  MOVE      ONE,EXIT
          GOTO      I13L9999
.
I13L9200  MOVE      TWO,EXIT
          GOTO      I13L9999
.
I13L9800  MOVE      EIGHT,EXIT
.
I13L9999  RETURN
+
.******************************************************************************
.*                                  I14L0000       Called by: RCIS0000        *
.*                       Write A/H Referral Cancel                            *
.* Returns:  EXIT  0 = message sent ok                                        *
.*                 1 = socket connection lost                                 *
.*                 2 = timeout on socket                                      *
.*                 3 = error retrieving pmsqviaf record (not used here)       *
.*                 4 = error retrieving outqueaf record (not used here)       *
.*                 5 = error retrieving emrqueaf record (not used here)       *
.*                 6 = error retrieving pmsqdraf record (not used here)       *
.*                 7 = error retrieving oprqueaf record (not used here)       *
.*                 8 = error retrieving allqueaf record                       *
.*                 9 = error retrieving watqueaf record (not used here)       *
.******************************************************************************
.
I14L0000  MOVE      H7CIMESI,KEY20
          CALL      RDALQUE1                     * referral details found ?
          BRANCH    OVRCD,I14L9800               * no - error
.
          MOVE      ALREVISN,VISNUMBR            * load visit number
.
          MOVE      VISNUMBR,KEY8
          CALL      RDPMVX11                     * get visit ext. record
          IF        OVRCD=1
            CALL      CLPMSVX1                   * clear visit extension fields
          ENDIF
.
.         Format message
.
          CALL      WMSH0000                     * format MSH segment
          BRANCH    EXIT,I14L9100:               * connection lost
                         I14L9200                * timeout
          CALL      WRF10000                     * format RF1 segment
          BRANCH    EXIT,I14L9100:               * connection lost
                         I14L9200                * timeout
          CALL      WPRD0000                     * format PRD segment
          BRANCH    EXIT,I14L9100:               * connection lost
                         I14L9200                * timeout
          CALL      WRPID000                     * format PID segment
          BRANCH    EXIT,I14L9100:               * connection lost
                         I14L9200                * timeout
          CALL      WRNK1000                     * format NK1 segment
          BRANCH    EXIT,I14L9100:               * connection lost
                         I14L9200                * timeout
          CALL      WRPV1000                     * format PV1 segment
          BRANCH    EXIT,I14L9100:               * connection lost
                         I14L9200                * timeout
          CALL      WRAL1000                     * format AL1 segment
          BRANCH    EXIT,I14L9100:               * connection lost
                         I14L9200                * timeout
          CALL      WRZAL000                     * format ZAL segment
          BRANCH    EXIT,I14L9100:               * connection lost
                         I14L9200                * timeout
          CALL      WRZXP000                     * format ZXP segment
          BRANCH    EXIT,I14L9100:               * connection lost
                         I14L9200                * timeout
          CALL      WRZXV000                     * format ZXV segment
          BRANCH    EXIT,I14L9100:               * connection lost
                         I14L9200                * timeout
          CALL      WRZLS000                     * format ZLS segment
          BRANCH    EXIT,I14L9100:               * connection lost
                         I14L9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      I14L9999
.
I14L9100  MOVE      ONE,EXIT
          GOTO      I14L9999
.
I14L9200  MOVE      TWO,EXIT
          GOTO      I14L9999
.
I14L9800  MOVE      EIGHT,EXIT
.
I14L9999  RETURN
+
.*****************************************************************************
.*                           WMSH0000           Called by: All message types *
.*                Write Message Header segment                               *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WMSH0000  MOVE      "MSH",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [MSH] segment",*R,*N;
          ENDIF
.
          CALL      CLMSH000                     * clear MSH fields
.
          CALL      GTDTTM00                     * get message date/time
.
          MOVE      PIPE,MSH001                  * set field delimiter
          MOVE      "^~\&",MSH002                * set encoding chars.
.
          MOVE      "webPAS",MSH003             * set sending application
          ENDSET    MSH003
          APPEND    CARET,MSH003
          APPEND    PRGID,MSH003
          APPEND    VERSION,MSH003
          APPEND    CARET,MSH003
          APPEND    ANSL,MSH003
          RESET     MSH003
.
          MOVE      CAPPRVNO,FIELDSTR            * set sending facility
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,MSH004
.
.         Check if using multi-hospital and if so, get the hospital id
.         and determine the relevant approval number and use this for sending
.         facility  
.         
          CALL      GFAC0000
          MOVE      MSH004,SAVMSH04              * save for Episoft interface
.
.         Set receiving application.
.         If this is a message triggered by a change in claim type from
.         public to private or vica versa, then set the receiving application
.         to "HealtheNet" (Task: 0854115)
.
          PACK      KEY20,H7CIPGID,H7CITRID,H7CIINCL
          MATCH     "PATWEB96  39        ",KEY20
          IF        !@EQUAL
            MATCH     "PATWEB96  40        ",KEY20
            GOTO      WMSH0500 IF NOT EQUAL
          ENDIF
.
          MOVE      "HealtheNet",MSH005
          GOTO      WMSH0700
.
.         If this is an A31 message triggered by IBAADT65, then set to
.         "RGOEXTRACT".
.         If this message was tiggered by HL7REGEN, then set this field
.         using the Receiver Tag.
.         Otherwise, set to "Receiver".
.
WMSH0500  MOVE      "Receiver",MSH005            * default to normal trigger
          MATCH     "IBAADT65",H7CIPGID          * RGO extract triggered ?
          IF        @EQUAL
            MOVE      "RGOEXTRACT",MSH005        * triggered by IBAADT65
          ELSE
            MATCH     SP20,H7CIRTAG
            IF        !@EQUAL
              MOVE      H7CIRTAG,MSH005          * triggered by HL7REGEN
              STRIP     MSH005
            ENDIF
          ENDIF
.
WMSH0700  MOVE      DATETIME,MSH007              * set message date/time
.
.         If this an A31 message, check if we need to use the alternate id
.         Axx instead of A31 when sending the message.
.
          IF        MESSNUMB = 22 & A08XFLAG = 1
            CLEAR     MSH009
            PACK      MSH009,ANSA,ANSD,ANST,CARET,ANSA,PTCNA31X:
                             CARET,ANSA,ANSD,ANST,UNDSCORE,ANSA,ZERO,ONE
            GOTO      WMSH1000
          ENDIF
.
.         Set message type
.
          LOAD      MSH009,MESSNUMB,MTYPEA01:    * admission
                                    MTYPEA02:    * transfer
                                    MTYPEA03:    * discharge (ADT)
                                    MTYPEA03:    * discharge (Emergency)
                                    MTYPEA04:    * O/P attendance
                                    MTYPEA04:    * Emergency attendance
                                    MTYPEA05:    * new O/P booking
                                    MTYPEA08:    * ADT update
                                    MTYPEA08:    * O/P update
                                    MTYPEA08:    * Emergency update
                                    MTYPEA11:    * cancel admit
                                    MTYPEA11:    * cancel O/P attendance
                                    MTYPEA11:    * cancel Emergency attendance
                                    MTYPEA12:    * cancel transfer
                                    MTYPEA13:    * cancel I/P discharge
                                    MTYPEA13:    * cancel Emergency discharge
                                    MTYPEA14:    * preadmit
                                    MTYPEA21:    * on-leave
                                    MTYPEA22:    * return from leave
                                    MTYPEA27:    * cancel preadmit
                                    MTYPEA28:    * register pmi
                                    MTYPEA31:    * update pmi
                                    MTYPEA34:    * merge pmi
                                    MTYPEA38:    * cancel O/P booking
                                    MTYPEA44:    * change U/R for I/P visit
                                    MTYPEA44:    * change U/R for O/P visit
                                    MTYPEA44:    * change U/R for Emerg. visit
                                    MTYPEM02:    * doctor messages
                                    MTYPES12:    * notify new theatre booking
                                    MTYPES14:    * notify change theatre booking
                                    MTYPES15:    * notify cancel theatre booking
                                    MTYPEL16:    * add A/H referral
                                    MTYPEL17:    * modify A/H referral
                                    MTYPEL18:    * cancel A/H referral
                                    MTYPEA03:    * add A/H encounter
                                    MTYPEA08:    * modify A/H encounter
                                    MTYPEA13:    * cancel A/H encounter
                                    MTYPEA05:    * W/L booking
                                    MTYPEA08:    * W/L booking update
                                    MTYPEA38:    * W/L cancel booking
                                    MTYPEM01:    * O/P clinic master & type
                                    MTYPEA44:    * Change U/R for Waiting List
                                    MTYPEA02:    * W/L transfer
                                    MTYPEA03:    * O/P discharge
                                    MTYPEA13:    * Cancel O/P discharge
                                    MTYPEA44:    * change U/R for A/H Referral
                                    MTYPEL16:    * Add W/L entry
                                    MTYPEL17:    * Update W/L entry
                                    MTYPEL18:    * Remove W/L entry
                                    MTYPEA37     * UnMerge PMI
.
.         Check if we are "Sending A05 for Pre-admission" instead of A14
.
WMSH1000  IF        MESSNUMB = 17
            MATCH     "1",PTCNH7A5
            IF        @EQUAL
              MOVE      "ADT^A05^ADT_A01",MSH009   * sending A05
            ENDIF
          ENDIF
.
          UNPACK    MSH009,ANS,ANS,ANS,ANS,SAVMTYPE * save message type
.
          MOVE      H7CIMESI,MSH010              * set Message ID
          SQUEEZE   MSH010
          MOVE      MSH010,SAVMESID
.
          READ      CONTROLF,ZERO;*249,IBCNMHPI
          MOVE      ZERO,F1
          MOVE      IBCNMHPI,F1
          ADD       ONE,F1
          LOAD      IBCNMHPI,F1,ANSP,ANSD,ANST
          MOVE      IBCNMHPI,MSH011              * set processing id
          MOVE      "2.3.1",MSH012               * set version id
          MOVE      "AUS",MSH017                 * set country code
          MOVE      "en^^ISO 639-1",MSH019       * set principal language
.
          PACK      SEGSTRNG,STRTBLOK,ANSM,ANSS,ANSH:
                             MSH001,MSH002,PIPE,MSH003,PIPE,MSH004,PIPE:
                             MSH005,PIPE,MSH006,PIPE,MSH007,PIPE,MSH008,PIPE:
                             MSH009,PIPE,MSH010,PIPE,MSH011,PIPE,MSH012,PIPE:
                             MSH013,PIPE,MSH014,PIPE,MSH015,PIPE,MSH016,PIPE:
                             MSH017,PIPE,MSH018,PIPE,MSH019,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WMSH9100:               * connection lost
                         WMSH9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      WMSH9999
.
WMSH9100  MOVE      ONE,EXIT
          GOTO      WMSH9999
.
WMSH9200  MOVE      TWO,EXIT
.
WMSH9999  RETURN
+
.*****************************************************************************
.*                           GFAC0000              Called by: WMSH0000       *
.*              Get the sending facility for a multi hospital environment    *
.*****************************************************************************
.
GFAC0000  MATCH     SP3,H7CISTAG                 * triggered by HL7REGEN ?
          IF        !@EQUAL
            MOVE      H7CISTAG,KEY3              * yes
            GOTO      GFAC9000
          ENDIF
.
          COMPARE   ONE,IBCNMHOS                 * using multi-hospital ?
          IF        @EQUAL
            MATCH     "1",PTCNUHSC               * use hospital security?
            GOTO      GFAC0100 IF NOT EQUAL      * use old method for facility
.
            MATCH     "CONVMAST",H7CIPGID        * CONVMAST trigger ?
            GOTO      GFAC7500 IF EQUAL          * yes
.
            MATCH     "EXTRWAIT",H7CIPGID        * EXTRWAIT trigger ?
            GOTO      GFAC0100 IF EQUAL          * yes
.
            MATCH     "EXTRREFL",H7CIPGID        * EXTRREFL trigger ?
            GOTO      GFAC0100 IF EQUAL          * yes
.
            MATCH     "EXTRACTN",H7CIPGID        * EXTRACTN trigger ?
            GOTO      GFAC0100 IF EQUAL          * yes
.
            MATCH     "EXTRBOOK",H7CIPGID        * EXTRBOOK trigger ?
            GOTO      GFAC0100 IF EQUAL          * yes
.
            MATCH     "COMWEB70",H7CIPGID
            GOTO      GFAC0100 IF EQUAL          * use old method for facility
.
            MATCH     "EMRWEB08",H7CIPGID
            GOTO      GFAC0100 IF EQUAL          * use old method for facility
.
            MATCH     "HL7RECVR",H7CIPGID
            GOTO      GFAC0100 IF EQUAL          * use old method for facility
.
            MATCH     "IBAMRT53",H7CIPGID
            GOTO      GFAC0100 IF EQUAL          * use old method for facility
.
            MATCH     "IBAWEB21",H7CIPGID
            GOTO      GFAC0100 IF EQUAL          * use old method for facility
.
            GOTO      GFAC7000                   * use h7cihosp (CAR 287313)
          ELSE
            GOTO      GFAC9999                   * no
          ENDIF
.
GFAC0100  BRANCH    MESSNUMB,GFAC1000:           * admission
                             GFAC1000:           * transfer
                             GFAC1000:           * discharge (ADT)
                             GFAC4000:           * discharge (Emergency)
                             GFAC5000:           * O/P attendance
                             GFAC4000:           * Emergency attendance
                             GFAC5000:           * new O/P booking
                             GFAC1000:           * ADT update
                             GFAC5000:           * O/P update
                             GFAC4000:           * Emergency update
                             GFAC1000:           * cancel admit
                             GFAC5000:           * cancel O/P attendance
                             GFAC4000:           * cancel Emergency attendance
                             GFAC1000:           * cancel transfer
                             GFAC1000:           * cancel I/P discharge
                             GFAC4000:           * cancel Emergency discharge
                             GFAC8100:           * preadmit
                             GFAC1000:           * on-leave
                             GFAC1000:           * return from leave
                             GFAC8100:           * cancel preadmit
                             GFAC7000:           * register pmi
                             GFAC7000:           * update pmi
                             GFAC7000:           * merge pmi
                             GFAC5000:           * cancel O/P booking
                             GFAC1000:           * change U/R for I/P visit
                             GFAC5000:           * change U/R for O/P visit
                             GFAC4000:           * change U/R for Emerg. visit
                             GFAC9999:           * doctor messages
                             GFAC2000:           * notify new theatre booking
                             GFAC2000:           * notify change theatre booking
                             GFAC2000:           * notify cancel theatre booking
                             GFAC3000:           * add patient referral
                             GFAC3000:           * modify A/H referral
                             GFAC3000:           * cancel A/H referral
                             GFAC3000:           * add A/H encounter
                             GFAC3000:           * modify A/H encounter
                             GFAC3000:           * cancel A/H encounter
                             GFAC6000:           * W/L booking
                             GFAC6000:           * W/L booking update
                             GFAC6000:           * W/L cancel booking
                             GFAC0500:           * M01 messages
                             GFAC6000:           * change U/R for W/L
                             GFAC6000:           * W/L transfer
                             GFAC5000:           * O/P discharge
                             GFAC5000:           * Cancel O/P discharge
                             GFAC3000:           * change U/R for A/H
                             GFAC6000:           * Add W/L entry
                             GFAC6000:           * Update W/L entry
                             GFAC6000:           * Remove W/L entry
                             GFAC7000            * Unmerge pmi
          GOTO      GFAC9999 
.
.         Get the hospital from the user id for M01 messages
.
GFAC0500  PACK      KEY14,H7CIOPER,SP20
          CALL      RSWBSE3                      * position in file
          CALL      RKWBSE3                      * read next record
          BRANCH    OVRCD,GFAC9999               * eof - finish
.
          MATCH     H7CIOPER,WBSEPCD             * same user id still ?
          GOTO      GFAC9999 IF NOT EQUAL        * no - finish
.
          MOVE      WBSEHOSP,KEY3
          GOTO      GFAC9000
.
GFAC1000  COMPARE   ONE,ASTAT                    * pre-admission ?
          GOTO      GFAC8100 IF EQUAL            * yes
.
          PACK      KEY6,TWARD,TBED
          CALL      RDWARD1                      * no - ward on file ?
          BRANCH    OVRCD,GFAC9999               * no - use default parameter
.                            
          MATCH     SP3,PTWDHOSN                 * hospital code blank ?
          GOTO      GFAC9999 IF EQUAL            * yes - use default parameter
.                            
          MOVE      PTWDHOSN,KEY3                * set hospital key
          GOTO      GFAC9000 
.                            
.         Get the hospital for a theatre booking 
.                            
GFAC2000  MATCH     SP6,OPDATHET                 * operating room blank ?
          GOTO      GFAC9999 IF EQUAL            * yes - use default parameter
.                            
          MOVE      OPDATHET,KEY6
          CALL      RDOPOPR1                     * op. room on file ? 
          BRANCH    OVRCD,GFAC9999               * no - use default parameter
.
          MATCH     SP3,OPRMHOSP                 * hospital code blank ?
          GOTO      GFAC9999 IF EQUAL            * yes - use default parameter
.
          MOVE      OPRMHOSP,KEY3                * load hospital key
          GOTO      GFAC9000 
.
.         Allied Health Referral/Encounter
.         For I14 messages, the pmsvx1af record has been deleted, so
.         use alrehosn. (Task: 0835780)
.
GFAC3000  IF        MESSNUMB = 34
            MOVE      ALREHOSN,KEY3
            GOTO      GFAC9000
          ELSE
            MOVE      ALREVISN,KEY8              * load visit number
            GOTO      GFAC8000
          ENDIF
.
.         Emergency - pmsqviaf already read, so pmsvx1af values should be loaded
.
GFAC4000  GOTO      GFAC8100                     
.
.         O/P
.         The process for getting the O/P hospital is different than for
.         other systems.
.
GFAC5000  CALL      GHOS0000                     * get hospital code for O/P
          BRANCH    EXIT,GFAC9999                * not found
.
          GOTO      GFAC9000
.
.         W/L Booking
.
GFAC6000  MATCH     SP3,WTWMIHSP                 * blank hospital code ?
          GOTO      GFAC9999 IF EQUAL            * yes - use default code
.
          MOVE      WTWMIHSP,KEY3                * load hospital code
          GOTO      GFAC9000
.
.         For PMI based messages, use the hospital from the header table
.
GFAC7000  MATCH     SP3,H7CIHOSP                 * hospital blank ?
          GOTO      GFAC9999 IF EQUAL            * yes - use default code
.
          MOVE      H7CIHOSP,KEY3                * no - load key
          GOTO      GFAC9000
.
.         PMI message from CONVMAST
.
GFAC7500  MATCH     SP3,PMPXIHOS                 * hospital blank ?
          GOTO      GFAC9999 IF EQUAL            * yes - use default code
.
          MOVE      PMPXIHOS,KEY3                * no - load key
          GOTO      GFAC9000
.
.         Get the hospital associated with the visit from pmsvx1af
.
GFAC8000  CALL      RDPMVX11                     * visit on file ?
          BRANCH    OVRCD,GFAC9999               * no - use default parameter
.
GFAC8100  MATCH     SP3,PMVXMHOS                 * blank hospital id ?
          GOTO      GFAC9999 IF EQUAL            * yes - use default parameter
.
          MOVE      PMVXMHOS,KEY3                * load hospital key
.
.         Get the Approval Number from the hospital file (pathspaf)
.
GFAC9000  CALL      RDPTHSP1                     * hospital code on file ?
          BRANCH    OVRCD,GFAC9999               * no - use default parameter
.
          MATCH     SP3,PTHSAPPR                 * blank approval number ?
          GOTO      GFAC9999 IF EQUAL            * yes
.
          MOVE      PTHSAPPR,FIELDSTR            * set sending facility
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,MSH004
.
GFAC9999  RETURN
+
.*****************************************************************************
.*                                GHOS0000         Called by: GFAC0000       *
.*        For O/P messages, we need to get the hospital from one of the      *
.*        following:                                                         *
.*             - pmsvx1af.pmvxmhos                                           *
.*             - outhedaf.othehosp                                           *
.*             - outma1af.otmahosp                                           *
.*        in the sequence shown.  The pmsvx1af record will not be present if *
.*        the appointment has been cancelled.  The session record may also   *
.*        be cancelled.                                                      *
.* Requires: valid read on booking variables (outqueaf)                      *
.* Returns:  KEY3 - Hospital code                                            *
.*           EXIT - 0 = hospital code found                                  *
.*                  1 = hospital code not found                              *
.*****************************************************************************
.
GHOS0000  MOVE      OBAOUTNO,KEY8
          CALL      RDPMVX11                     * visit on file ?
          BRANCH    OVRCD,GHOS1000               * no - try using session
.
          MATCH     SP3,PMVXMHOS                 * blank hospital code ?
          GOTO      GHOS1000 IF EQUAL            * yes - try using session
.
          MOVE      PMVXMHOS,KEY3                * no - load hospital code
          GOTO      GHOS9000
.
GHOS1000  MOVE      OBASITE,KEY6                 * get site prefix
          CALL      RDSITA1                      * site found ?
          BRANCH    OVRCD,GHOS9100               * no - use default code
.
          PACK      FNAME,OSTFILE,FILSESA1
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OUTSESA1,FNAME               * open O/P clinic master file
          TRAPCLR   IO
          BRANCH    OVRCD,GHOS5000               * file not found
.
          PACK      KEY25,OBASITE,OBACLIN,OBADATE,OBASTRT
          CALL      RDSESA1                      * session on file ?
          BRANCH    OVRCD,GHOS5000               * no - try clinic master
.
          PACK      KEY28,OSESITE,OSECLIN,OSEDAY,OSESTRT,OSESSHNO,OSESSDAT
          CALL      RDOTHED1                     * master header on file ?
          BRANCH    OVRCD,GHOS5000               * no - try clinic master
.
          MATCH     SP3,OTHEHOSP                 * blank hospital id ?
          GOTO      GHOS5000 IF EQUAL            * yes - try clinic master
.
          MOVE      OTHEHOSP,KEY3                * no - load hospital code
          GOTO      GHOS9000
.
.         We were unable to get the hospital code via the session, so try
.         using the clinic master instead.
.
GHOS5000  PACK      FNAME,OSTFILE,FILMA1A1
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OUTMA1A1,FNAME               * open O/P clinic master file
          TRAPCLR   IO
          BRANCH    OVRCD,GHOS9100               * file not found
.
.         Get the day of the week for the clinic
.
          UNPACK    OBADATE,CCENT,CYEAR,CMON,CDAY
          CALL      DAYOFWEK
.
          PACK      KEY18,OBASITE,OBACLIN,WEEKDAY,OBASTRT
          CALL      RDMASA1                      * clinic master on file ?
          BRANCH    OVRCD,GHOS9100               * no - use default code
.
          MATCH     SP3,OTMAHOSP                 * hospital code blank ?
          GOTO      GHOS9100 IF EQUAL            * yes - use default code
.
          MOVE      OTMAHOSP,KEY3                * no - load hospital code
.
GHOS9000  MOVE      ZERO,EXIT
          GOTO      GHOS9999
.
GHOS9100  MOVE      ONE,EXIT
.
GHOS9999  RETURN
+
.*****************************************************************************
.*                           WMRG0000              Called by: A34P0000       *
.*                      Write Merge Patient Segment           A44A0000       *
.* Returns:  EXIT  0 = Segment sent ok                        A44E0000       *
.*                 1 = Connection lost                        A44O0000       *
.*                 2 = Timeout                                A44W0000       *
.*                                                            A44L0000       *
.*****************************************************************************
.
WMRG0000  MOVE      "MRG",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [MRG] segment",*R,*N;
          ENDIF
.
          CALL      CLMRG000                     * clear MRG fields
.
          MOVE      PMQPOURN,MRG001              * prior patient identifier
          SQUEEZE   MRG001
          ENDSET    MRG001
          APPEND    CARET,MRG001
          APPEND    CARET,MRG001
          APPEND    CARET,MRG001
          APPEND    CARET,MRG001
          APPEND    "MR",MRG001
          APPEND    CARET,MRG001
          MOVE      MSH004,FIELDSTR              * set sending facility
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,MRG001
          RESET     MRG001
.
          PACK      SEGSTRNG,ANSM,ANSR,ANSG,PIPE:
                             MRG001,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WMRG9100:               * connection lost
                         WMRG9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      WMRG9999
.
WMRG9100  MOVE      ONE,EXIT
          GOTO      WMRG9999
.
WMRG9200  MOVE      TWO,EXIT
.
WMRG9999  RETURN
+
.*****************************************************************************
.*                           WEVN0000           Called by: all message types *
.*                  Write Event Type Segment                                 *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WEVN0000  MOVE      "EVN",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [EVN] segment",*R,*N;
          ENDIF
.
          CALL      CLEVN000                     * clear EVN fields
.
          MOVE      H7CIDTTM,EVN002              * set date/time of event
          REP       ": ",EVN002
          SQUEEZE   EVN002
.
          CALL      GEVN5000                     * populate EVN.5 with userid
.
          PACK      SEGSTRNG,ANSE,ANSV,ANSN,PIPE,EVN001,PIPE,EVN002
          ENDSET    SEGSTRNG
.
.         Check if we need to send any more fields in this segment
.
          BRANCH    MESSNUMB,WEVN1000:           * admission
                             WEVN1100:           * transfer
                             WEVN1000:           * discharge (ADT)
                             WEVN8000:           * discharge (Emergency)
                             WEVN8000:           * O/P attendance
                             WEVN8000:           * Emergency attendance
                             WEVN8000:           * new O/P booking
                             WEVN1000:           * ADT update
                             WEVN2000:           * O/P update
                             WEVN8000:           * Emergency update
                             WEVN8000:           * cancel admit
                             WEVN8000:           * cancel O/P attendance
                             WEVN8000:           * cancel Emergency attendance
                             WEVN1100:           * cancel transfer
                             WEVN8000:           * cancel I/P discharge
                             WEVN8000:           * cancel Emergency discharge
                             WEVN8000:           * preadmit
                             WEVN1000:           * on-leave
                             WEVN1000:           * return from leave
                             WEVN8000:           * cancel preadmit
                             WEVN8000:           * register pmi
                             WEVN3000:           * update pmi
                             WEVN8000:           * merge pmi
                             WEVN8000:           * cancel O/P booking
                             WEVN8000:           * change U/R for I/P visit
                             WEVN8000:           * change U/R for O/P visit
                             WEVN8000:           * change U/R for Emerg. visit
                             WEVN8000:           * doctor messages
                             WEVN8000:           * notify new theatre booking
                             WEVN8000:           * notify change theatre booking
                             WEVN8000:           * notify cancel theatre booking
                             WEVN8000:           * add patient referral
                             WEVN8000:           * modify A/H referral
                             WEVN8000:           * cancel A/H referral
                             WEVN8000:           * add A/H encounter
                             WEVN8000:           * modify A/H encounter
                             WEVN8000:           * cancel A/H encounter
                             WEVN8000:           * W/L booking
                             WEVN8000:           * W/L booking update
                             WEVN8000:           * W/L cancel booking
                             WEVN8000:           * M01 messages
                             WEVN8000:           * change U/R for W/L
                             WEVN8000:           * W/L transfer
                             WEVN8000:           * O/P discharge
                             WEVN8000:           * Cancel O/P discharge
                             WEVN8000:           * change U/R for A/H
                             WEVN8000:           * Add W/L entry
                             WEVN8000:           * Update W/L entry
                             WEVN8000:           * Remove W/L entry
                             WEVN8000            * Unmerge pmi
.
.         Check if the message is triggered by HL7REGEN, as we need to
.         also send transfer date/time for selected HL7REGEN I/P messages
.         (A01, A02, A03, A08, A21, A22).
.
WEVN1000  MATCH     "HL7REGEN",H7CIPGID
          GOTO      WEVN8000 IF NOT EQUAL
.
.         For ADT^A02 (Patient Transfer) populate EVN.4 with Transfer Reason
.         (Cat RB) - Task 0837181
.
WEVN1100  COMPARE   TWO,MESSNUMB
          GOTO      WEVN1200 IF NOT EQUAL
.
          MOVE      BLANKSTR,EVN004              * set default value
.
          MATCH     SP3,PTTRTRTY                 * field populated ?
          GOTO      WEVN1200 IF EQUAL            * no
.
          MOVE      PTTRTRTY,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,EVN004
          ENDSET    EVN004
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSR,ANSB,PTTRTRTY
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,EVN004
          APPEND    FIELDSTR,EVN004
          APPEND    CARET,EVN004
          APPEND    "webPAS",EVN004
          RESET     EVN004
.
.         Populate EVN.6 with the transfer date and time
.
WEVN1200  APPEND    PIPE,SEGSTRNG
          APPEND    EVN003,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    EVN004,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    EVN005,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
.
          IF        MESSNUMB = 14
            UNPACK    PMQVTTIM,CHOUR,ANS,CMIN,ANS,CSEC
            PACK      EVN006,PMQVTDAT,CHOUR,CMIN,CSEC
          ELSE
            UNPACK    TTIME,CHOUR,ANS,CMIN,ANS,CSEC
            PACK      EVN006,TDATE,CHOUR,CMIN,CSEC
          ENDIF
          STRIP     EVN006
          APPEND    EVN006,SEGSTRNG
          GOTO      WEVN9000
.
.         If this is an O/P Update (A08) for a "DNA" event (OBASTAT = 5), then
.         set ENV-04 to "DNA"
.
WEVN2000  IF        MESSNUMB = 9 & REFLFLAG = 1 & OBASTAT = 5
            MOVE      "DNA",EVN004
          ENDIF
          GOTO      WEVN8000
.
.         If this is a PMI Update (A31) generated from HL7RECVR, then
.         set EVN.4 to the value for generated ADT^A31
.
WEVN3000  MATCH     "HL7RECVR",H7CIPGID          * broadcast from receiver ?
          GOTO      WEVN8000 IF NOT EQUAL
.
          MATCH     "1",PTCNB31R                 * allow PMI update broadcast ?
          GOTO      WEVN8000 IF NOT EQUAL
.
          COMPARE   SEVEN,H7CITRID
          GOTO      WEVN8000 IF NOT EQUAL        * trigger 7 from HL7RECVR ?
.
          MOVE      PTCNEVN4,EVN004              * value for generated ADT^A31
          STRIP     EVN004
.
WEVN8000  APPEND    PIPE,SEGSTRNG                * always send 5 EVN fields
          APPEND    EVN003,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    EVN004,SEGSTRNG
          APPEND    PIPE,SEGSTRNG
          APPEND    EVN005,SEGSTRNG
.
WEVN9000  APPEND    CRETURN,SEGSTRNG
          RESET     SEGSTRNG
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WEVN9100:               * connection lost
                         WEVN9200                * timeout
.
          MOVE      ZERO,EXIT
          GOTO      WEVN9999
.
WEVN9100  MOVE      ONE,EXIT
          GOTO      WEVN9999
.
WEVN9200  MOVE      TWO,EXIT
.
WEVN9999  RETURN
+
.*****************************************************************************
.*                           GEVN5000                                        *
.*                  Get wePAS userid to populate EVN.5                       *
.*****************************************************************************
GEVN5000  MATCH     SP10,H7CIUSID
          IF        @EQUAL
            MOVE      BLANKSTR,EVN005
            GOTO      GEVN5999
          ENDIF
.
          MOVE      H7CIUSID,FIELDSTR            * web user id
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,EVN005
          ENDSET    EVN005
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY10,H7CIUSID
          CALL      RDWBSE1
          IF        OVRCD = 0
            MOVE      WBSENAM,FIELDSTR           * web user name
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,EVN005
          APPEND    FIELDSTR,EVN005
          RESET     EVN005
.
GEVN5999  RETURN
+
.*****************************************************************************
.*                           WLZXV000                                        *
.*                  Format WL Extra visit details segment                    *
.*****************************************************************************
.
.         Load Non WA Hospital Contact
.
WLZXV000  MOVE      BLANKSTR,ZXV003              * set default value
.
          MATCH     SP3,WTTXNWHC                 * field populated ?
          GOTO      WLZXV040 IF EQUAL            * no
.
          MOVE      WTTXNWHC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV003
          ENDSET    ZXV003
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATCW,WTTXNWHC
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV003
          APPEND    FIELDSTR,ZXV003
          APPEND    CARET,ZXV003
          APPEND    "webPAS",ZXV003
          RESET     ZXV003
.
.         Load Waitlist Urgency
.
WLZXV040  MOVE      BLANKSTR,ZXV004              * set default value
.
          MATCH     SP3,WMPTY                    * field populated ?
          GOTO      WLZXV150 IF EQUAL            * no
.
          MOVE      WMPTY,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV004
          ENDSET    ZXV004
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANST,ANSP,WMPTY
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV004
          APPEND    FIELDSTR,ZXV004
          APPEND    CARET,ZXV004
          APPEND    "webPAS",ZXV004
          RESET     ZXV004
.
.         WL source of referral
.
WLZXV150  MOVE      BLANKSTR,ZXV015              * set default value
.
          MATCH     SP3,WTWMSRCR                 * field populated ?
          GOTO      WLZXV160 IF EQUAL            * no
.
          MOVE      WTWMSRCR,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV015
          ENDSET    ZXV015
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSS,SP1,WTWMSRCR
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV015
          APPEND    FIELDSTR,ZXV015
          APPEND    CARET,ZXV015
          APPEND    "webPAS",ZXV015
          RESET     ZXV015
.
.         WL care class
.         
WLZXV160  MOVE      BLANKSTR,ZXV016              * set default value
.
          MATCH     SP3,WTWMEATY                 * field populated ?
          GOTO      WLZXV190 IF EQUAL            * no
.
          MOVE      WTWMEATY,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV016
          ENDSET    ZXV016
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSC,ANSC,WTWMEATY
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV016
          APPEND    FIELDSTR,ZXV016
          APPEND    CARET,ZXV016
          APPEND    "webPAS",ZXV016
          RESET     ZXV016
.
.         WL inform gp flag
.
WLZXV190  MOVE      ANSN,ZXV019                  * no (default value)
          MATCH     "1",WTTXNTGP
          IF        @EQUAL
            MOVE      ANSY,ZXV019                * yes
          ENDIF
.
.         Load WL Division
.
          MOVE      BLANKSTR,ZXV023              * set default value
.
          PACK      KEY14,WTWMIHSP,WMUNIT,WTTXTEAM,SP70
          CALL      RSPMDIV2                     * position on hosp/unit/team
          CALL      RKPMDIV2                     * read next record
          BRANCH    OVRCD,WLZXV240               * eof - finished field
.
          MATCH     WTWMIHSP,PMDIHOSP            * same hosp ?
          GOTO      WLZXV240 IF NOT EQUAL        * no - finished field
.
          MATCH     WMUNIT,PMDIUNIT              * same unit ?
          GOTO      WLZXV240 IF NOT EQUAL        * no - finished field
.
          MATCH     WTTXTEAM,PMDITEAM            * same team ?
          GOTO      WLZXV240 IF NOT EQUAL        * no - finished field
.
          MATCH     SP3,PMDIDIVN                 * field populated ?
          GOTO      WLZXV240 IF EQUAL            * no
.
          MOVE      PMDIDIVN,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV023
          ENDSET    ZXV023
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATdv,PMDIDIVN
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV023
          APPEND    FIELDSTR,ZXV023
          APPEND    CARET,ZXV023
          APPEND    "webPAS",ZXV023
          RESET     ZXV023
.
.         Load WL Unit
.
WLZXV240  MOVE      BLANKSTR,ZXV024              * set default value
.
          MATCH     SP3,WMUNIT                   * field populated ?
          GOTO      WLZXV250 IF EQUAL            * no
.
          MOVE      WMUNIT,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV024
          ENDSET    ZXV024
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSW,ANSU,WMUNIT
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV024
          APPEND    FIELDSTR,ZXV024
          APPEND    CARET,ZXV024
          APPEND    "webPAS",ZXV024
          RESET     ZXV024
.
.         Load WL Team
.
WLZXV250  MOVE      BLANKSTR,ZXV025              * set default value
.
          MATCH     SP5,WTTXTEAM                 * field populated ?
          GOTO      WLZXV260 IF EQUAL            * no
.
          MOVE      WTTXTEAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV025
          ENDSET    ZXV025
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,WTTXTEAM,SP70
          CALL      RDPMTEM1
          IF        OVRCD = 0
            MOVE      PMTMDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV025
          APPEND    FIELDSTR,ZXV025
          APPEND    CARET,ZXV025
          APPEND    "webPAS",ZXV025
          RESET     ZXV025
.
.         WL claim type
.         
WLZXV260  MOVE      BLANKSTR,ZXV026              * set default value
.
          MATCH     SP3,WTTXCTYP                 * field populated ?
          GOTO      WLZXV270 IF EQUAL            * no
.
          MOVE      WTTXCTYP,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV026
          ENDSET    ZXV026
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSC,ANSL,WTTXCTYP
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV026
          APPEND    FIELDSTR,ZXV026
          APPEND    CARET,ZXV026
          APPEND    "webPAS",ZXV026
          RESET     ZXV026
.
.         WL admission type
.
WLZXV270  MOVE      BLANKSTR,ZXV027              * set default value
.
          MATCH     SP3,WMPCAT                   * field populated ?
          GOTO      WLZXV320 IF EQUAL            * no
.
          MOVE      WMPCAT,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV027
          ENDSET    ZXV027
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSA,SP1,WMPCAT
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV027
          APPEND    FIELDSTR,ZXV027
          APPEND    CARET,ZXV027
          APPEND    "webPAS",ZXV027
          RESET     ZXV027
.
WLZXV320  CALL      LVIN0000                     * load visit interpreter
.
.         WL Intended Stay
.
WLZXV420  MOVE      BLANKSTR,ZXV042              * set default value
.
          MATCH     SP3,WTTXINTD                 * field populated ?
          GOTO      WLZXV430 IF EQUAL            * no
.
          MOVE      WTTXINTD,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV042
          ENDSET    ZXV042
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSV,ANSI,WTTXINTD
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV042
          APPEND    FIELDSTR,ZXV042
          APPEND    CARET,ZXV042
          APPEND    "webPAS",ZXV042
          RESET     ZXV042
.
.         WL Preferred Accommodation
.
WLZXV430  MOVE      BLANKSTR,ZXV043              * set default value
.
          MATCH     SP3,WTTXPREF                 * field populated ?
          GOTO      WLZXV470 IF EQUAL            * no
.
          MOVE      WTTXPREF,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV043
          ENDSET    ZXV043
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSB,ANSP,WTTXPREF
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV043
          APPEND    FIELDSTR,ZXV043
          APPEND    CARET,ZXV043
          APPEND    "webPAS",ZXV043
          RESET     ZXV043
.
.         WL Removal Reason
.
WLZXV470  MOVE      BLANKSTR,ZXV047              * set default value
.
          MATCH     SP3,WMREMOVE                 * field populated ?
          GOTO      WLZXV510 IF EQUAL            * no
.
          MOVE      WMREMOVE,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV047
          ENDSET    ZXV047
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATWR,WMREMOVE
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV047
          APPEND    FIELDSTR,ZXV047
          APPEND    CARET,ZXV047
          APPEND    "webPAS",ZXV047
          RESET     ZXV047
.
.         WL Purchaser (Cat HP)
.
WLZXV510  MOVE      BLANKSTR,ZXV051              * set default value
.
          MATCH     SP3,WTWMPHSP                 * field populated ?
          GOTO      WLZXV999 IF EQUAL            * no
.
          MOVE      WTWMPHSP,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV051
          ENDSET    ZXV051
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSH,ANSP,WTWMPHSP
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV051
          APPEND    FIELDSTR,ZXV051
          APPEND    CARET,ZXV051
          APPEND    "webPAS",ZXV051
          RESET     ZXV051
.
WLZXV999  RETURN
+
.*****************************************************************************
.*                           AHZXV000                                        *
.*                  Format AH Referral Extra visit details segment           *
.*****************************************************************************
.
.         Priority
.
AHZXV000  MOVE      BLANKSTR,ZXV006              * set default value
.
          MATCH     SP3,ALREPRTY                 * field populated ?
          GOTO      AHZXV010 IF EQUAL            * no
.
          MOVE      ALREPRTY,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV006
          ENDSET    ZXV006
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSP,ANSR,ALREPRTY
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV006
          APPEND    FIELDSTR,ZXV006
          APPEND    CARET,ZXV006
          APPEND    "webPAS",ZXV006
          RESET     ZXV006
.
.         Problem Code
.
AHZXV010  MOVE      BLANKSTR,ZXV007              * set default value
.
          MATCH     SP9,ALREPRO1                 * field populated ?
          GOTO      AHZXV020 IF EQUAL            * no
.
          MOVE      ALREPRO1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV007
          ENDSET    ZXV007
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY12,ALREDEPT,ALREPRO1
          CALL      RDALPRR1
          IF        OVRCD = 0
            MOVE      ALPRDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV007
          APPEND    FIELDSTR,ZXV007
          APPEND    CARET,ZXV007
          APPEND    "webPAS",ZXV007
          RESET     ZXV007
.
.         Date Record Created
.
AHZXV020  MOVE      BLANKSTR,ZXV009              * set default value
.
          MATCH     SP8,ALRECDAT                 * blank date ?
          GOTO      AHZXV030 IF EQUAL            * yes
.
          MOVE      ALRECDAT,ZXV009
.
.         Source of Referral
.
AHZXV030  MOVE      BLANKSTR,ZXV015              * set default value
.
          MATCH     SP70,ALRESRCE                * field populated ?
          GOTO      AHZXV040 IF EQUAL            * no
.
          MOVE      ALRESRCE,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV015
          ENDSET    ZXV015
.
          MOVE      "Unknown Code",FIELDSTR
          MATCH     SP70,ALREPSIT                * field populated ?
          GOTO      AHZXV035 IF EQUAL            * no
.
          MOVE      ALREPSIT,KEY6
          CALL      RDSITA1                      * site found ?
          BRANCH    OVRCD,AHZXV035               * no
.
          PACK      KEY5,OSTCATG,ALRESRCE
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
AHZXV035  APPEND    CARET,ZXV015
          APPEND    FIELDSTR,ZXV015
          APPEND    CARET,ZXV015
          APPEND    "webPAS",ZXV015
          RESET     ZXV015
.
.         Type of Referral
.
AHZXV040  MOVE      BLANKSTR,ZXV034              * set default value
.
          MATCH     SP70,ALRERTYP                * field populated ?
          GOTO      AHZXV050 IF EQUAL            * no
.
          MOVE      ALRERTYP,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV034
          ENDSET    ZXV034
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSR,ANSI,ALRERTYP
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV034
          APPEND    FIELDSTR,ZXV034
          APPEND    CARET,ZXV034
          APPEND    "webPAS",ZXV034
          RESET     ZXV034
.
.         Preferred Site
.
AHZXV050  MOVE      BLANKSTR,ZXV035              * set default value
.
          MATCH     SP70,ALREPSIT                * field populated ?
          GOTO      AHZXV060 IF EQUAL            * no
.
          MOVE      ALREPSIT,KEY6
          CALL      RDSITA1                      * site found ?
          BRANCH    OVRCD,AHZXV060               * no - ignore field
.
          MOVE      ALREPSIT,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV035
          ENDSET    ZXV035
.
          MOVE      OSTDESC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
.
          APPEND    CARET,ZXV035
          APPEND    FIELDSTR,ZXV035
          APPEND    CARET,ZXV035
          APPEND    "webPAS",ZXV035
          RESET     ZXV035
.
.         Date Referral Received
.
AHZXV060  MOVE      BLANKSTR,ZXV036              * set default value
.
          MATCH     SP8,ALREDREC                 * blank date ?
          GOTO      AHZXV070 IF EQUAL            * yes
.
          MOVE      ALREDREC,ZXV036
.
.         Clinic Type
.
AHZXV070  MOVE      BLANKSTR,ZXV037              * set default value
.
          MATCH     SP70,ALRECTYP                * field populated ?
          GOTO      AHZXV080 IF EQUAL            * no
.
          MOVE      ALREPSIT,KEY6
          CALL      RDSITA1                      * site found ?
          BRANCH    OVRCD,AHZXV080               * no - ignore field
.
          MOVE      ALRECTYP,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV037
          ENDSET    ZXV037
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      FNAME,OSTFILE,FILCTYA1
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OUTCTYA1,FNAME
          TRAPCLR   IO
          IF        OVRCD = 0
            PACK      KEY12,ALREPSIT,ALRECTYP,SP70
            CALL      RDCTYA1                    * location on file
            IF        OVRCD = 0
              MOVE      OCTDESC,FIELDSTR
              CALL      SPCHR000                 * convert special characters
            ENDIF
          ENDIF
          APPEND    CARET,ZXV037
          APPEND    FIELDSTR,ZXV037
          APPEND    CARET,ZXV037
          APPEND    "webPAS",ZXV037
          RESET     ZXV037
.
.         Presenting Complaint
.
AHZXV080  MOVE      BLANKSTR,ZXV038              * set default value
.
          MATCH     SP70,ALREPRCM                * blank field ?
          GOTO      AHZXV090 IF EQUAL            * yes
.
          MOVE      ALREPRCM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV038
.
.         Diagnosis Codes
.
AHZXV090  MOVE      ZERO,F1
          WHILE     F1 < 3
            ADD       ONE,F1
            LOAD      D9,F1,ALREDIA1,ALREDIA2,ALREDIA3
            MATCH     SP9,D9                       * field populated ?
            IF        @EQUAL
              APPEND    BLANKSTR,ZXV039
            ELSE
              MOVE      D9,FIELDSTR
              CALL      SPCHR000                   * convert special characters
              APPEND    FIELDSTR,ZXV039
              ENDSET    ZXV039
              MOVE      "Unknown Code",FIELDSTR
              PACK      KEY12,ALREDEPT,D9
              CALL      RDALDIA1
              IF        OVRCD = 0
                MOVE      ALDIDESC,FIELDSTR
                CALL      SPCHR000                 * convert special characters
                APPEND    CARET,ZXV039
              ENDIF
              APPEND    FIELDSTR,ZXV039
              APPEND    CARET,ZXV039
              APPEND    "webPAS",ZXV039
            ENDIF
            IF        F1<3
              APPEND    TILDA,ZXV039
            ENDIF
          DO
          RESET     ZXV039
.
.         Referral Department
.
          MOVE      BLANKSTR,ZXV040              * set default value
.
          MATCH     SP70,ALREDEPT                * field populated ?
          GOTO      AHZXV110 IF EQUAL            * no
.
          MOVE      ALREDEPT,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV040
          ENDSET    ZXV040
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSC,ANSG,ALREDEPT
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV040
          APPEND    FIELDSTR,ZXV040
          APPEND    CARET,ZXV040
          APPEND    "webPAS",ZXV040
          RESET     ZXV040
.
.         Last Update Date/Time
.
AHZXV110  MATCH     SP70,ALREUDAT                * use update or create date
          IF        !@EQUAL
.davvy      UNPACK    ALREUTIM,CHOUR,ANS,CMIN,ANS,CSEC
            UNPACK    H7CIUTIM,CHOUR,ANS,CMIN,ANS,CSEC     * stored in hl7cisaf
            PACK      ZXV041,ALREUDAT,CHOUR,CMIN,CSEC
          ELSE
            UNPACK    ALRECTIM,CHOUR,ANS,CMIN,ANS,CSEC
            PACK      ZXV041,ALRECDAT,CHOUR,CMIN,CSEC
          ENDIF
.
.         Visit Interpreter Flag
.
          CALL      LVIN0000                     * load visit interpreter
.
.         Extra Inbound Referral Data
.
          CALL      EIRD0000                     * load Extra Inbound Ref Data
.
.         Referral Cancellation Reason
.
          MOVE      BLANKSTR,ZXV047
.
          MOVE      ZERO,F1
          MOVE      SP70,DIM2
          MOVE      SP70,DIM3
          MOVE      ALRESTAT,F1             * for referral status of 2,3,4,5
          LOAD      DIM3,F1,SP70,ALRERCLO,ALRERINA,ALRERCAN,ALRESREJ
          LOAD      DIM2,F1,SP70,CATLL,CATLI,CATLN,CATrr
.
          MATCH     SP70,DIM3                    * field populated ?
          GOTO      AHZXV150 IF EQUAL            * no
.
          MOVE      DIM3,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV047
          ENDSET    ZXV047
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,DIM2,DIM3
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV047
          APPEND    FIELDSTR,ZXV047
          APPEND    CARET,ZXV047
          APPEND    "webPAS",ZXV047
          RESET     ZXV047
.
.         Booking Instructions
.
AHZXV150  CALL      BKIN0000                     * get booking instructions
.
.         Referring Practice
.
          MOVE      BLANKSTR,ZXV049              * set default value
.
          MATCH     SP10,ALRERHCR                * field populated ?
          GOTO      AHZXV160 IF EQUAL            * no
.
          MOVE      ALRERHCR,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV049
          ENDSET    ZXV049
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY12,ALRERHCR,SP70
          CALL      RSPMHCG1
          CALL      RKPMHCG1
          IF        OVRCD = 0
            MATCH     PMHGPRAC,ALRERHCR
            IF        @EQUAL
              MOVE      PMHGPNAM,FIELDSTR
              CALL      SPCHR000                   * convert special characters
            ENDIF
          ENDIF
          APPEND    CARET,ZXV049
          APPEND    FIELDSTR,ZXV049
          APPEND    CARET,ZXV049
          APPEND    "webPAS",ZXV049
          RESET     ZXV049
.
.         ZXV.51 - Purchaser (Cat HP)
.
AHZXV160  MOVE      BLANKSTR,ZXV051              * blank purchaser
.
          MATCH     SP3,ALREPURC                 * field populated ?
          GOTO      AHZXV170 IF EQUAL            * no
.
          MOVE      ALREPURC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV051
          ENDSET    ZXV051
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSH,ANSP,ALREPURC
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV051
          APPEND    FIELDSTR,ZXV051
          APPEND    CARET,ZXV051
          APPEND    "webPAS",ZXV051
          RESET     ZXV051
.
.         ZXV.56 - Triage Status (Cat ts)
.
AHZXV170  MOVE      BLANKSTR,ZXV056              * blank triage status
.
          MATCH     SP3,ALRETRGS                 * field populated ?
          GOTO      AHZXV180 IF EQUAL            * no
.
          MOVE      ALRETRGS,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV056
          ENDSET    ZXV056
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATTS,ALRETRGS
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV056
          APPEND    FIELDSTR,ZXV056
          APPEND    CARET,ZXV056
          APPEND    "webPAS",ZXV056
          RESET     ZXV056
.
.         Triage Date
.
AHZXV180  MOVE      BLANKSTR,ZXV101              * set default value
.
          MATCH     SP8,ALRETRGD                 * blank date ?
          GOTO      AHZXV190 IF EQUAL            * yes
.
          MOVE      ALRETRGD,ZXV101
.
.         Referral-In Receipt Acknowledgement Date
.
AHZXV190  MOVE      BLANKSTR,ZXV102              * set default value
.
          MATCH     SP8,ALREUDT5                 * blank date ?
          GOTO      AHZXV999 IF EQUAL            * yes
.
          MOVE      ALREUDT5,ZXV102
.
AHZXV999  RETURN
+
.*****************************************************************************
.*                           ENZXV000                                        *
.*                  Format AH Encounter Extra visit details segment          *
.*****************************************************************************
.
.         ZXV.51 - Purchaser (Cat HP)
.
ENZXV000  MOVE      BLANKSTR,ZXV051              * blank purchaser
.
          MATCH     SP3,ALENPURC                 * field populated ?
          IF        !@EQUAL
            MOVE      ALENPURC,DIM3              * yes - load contact HP code
            GOTO      ENZXV050
          ENDIF
.
          MATCH     SP3,ALREPURC                 * field populated ?
          GOTO      ENZXV999 IF EQUAL            * no - leave field blank
.
          MOVE      ALREPURC,DIM3                * load referral HP code
.
ENZXV050  MOVE      DIM3,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZXV051
          ENDSET    ZXV051
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSH,ANSP,DIM3
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZXV051
          APPEND    FIELDSTR,ZXV051
          APPEND    CARET,ZXV051
          APPEND    "webPAS",ZXV051
          RESET     ZXV051
.
ENZXV999  RETURN
+
.*****************************************************************************
.*                             BKIN0000                                      *
.*    Load Referral Booking Instructions                                     *
.* Returns:  ZXV048                                                          *
.*****************************************************************************
BKIN0000  MOVE      "005",KEY3
          PACK      KEY17,VISNUMBR,KEY3,SP70
          CALL      RSVSMDT1
          CALL      RKVSMDT1
          BRANCH    OVRCD,BKIN8000          * end of file
.
          MATCH     VSMDVISN,VISNUMBR       * same Admission Number?
          GOTO      BKIN8000 IF NOT EQUAL
.
          MATCH     VSMDTYPE,KEY3
          GOTO      BKIN8000 IF NOT EQUAL
.
          PACK      KEY20,VSMDVISN,VSMDTYPE,VSMDNOTE,SP70
          CALL      RSVSMTX1
BKIN0245  CALL      RKVSMTX1
          BRANCH    OVRCD,BKIN9000
.
          MATCH     VSMDVISN,VSMTVISN       * same Admission Number?
          GOTO      BKIN9000 IF NOT EQUAL
.
          MATCH     VSMDTYPE,VSMTTYPE
          GOTO      BKIN9000 IF NOT EQUAL
.
          MATCH     VSMDNOTE,VSMTNOTE
          GOTO      BKIN9000 IF NOT EQUAL
.
          APPEND    VSMTCMNT,ZXV048
          ENDSET    ZXV048
.
          GOTO      BKIN0245
.
BKIN8000  MOVE      BLANKSTR,ZXV048         * no data
BKIN9000  RESET     ZXV048
          STRIP     ZXV048
.
BKIN9999  RETURN
+
.*****************************************************************************
.*                             EIRD0000                                      *
.*    Load Extra Inbound Referral Data into ZXV fields.                      *
.* Returns:  ZXV044, ZXV045, ZXV046                                          *
.*****************************************************************************
EIRD0000  MOVE      BLANKSTR,ZXV044
          MOVE      BLANKSTR,ZXV045
          MOVE      BLANKSTR,ZXV046
.
          MOVE      VISNUMBR,KEY8
          CALL      RDALEID1
          BRANCH    OVRCD,EIRD9999
.
.         Load Service text
.
          MATCH     SP100,ALEISERV
          IF        !@EQUAL
            MOVE      ALEISERV,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZXV044              * referral service
          ENDIF
.
.         Load Referred by Other text
.
          MATCH     SP50,ALEIROTH
          IF        !@EQUAL
            MOVE      ALEIROTH,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZXV045              * referred by other
          ENDIF
.
.         Load Referrer Contact text
.
          MATCH     SP100,ALEIRCON
          IF        !@EQUAL
            MOVE      ALEIRCON,FIELDSTR
            CALL      SPCHR000                     * convert special characters
            MOVE      FIELDSTR,ZXV046              * referrer contact
          ENDIF
.
EIRD9999  RETURN
+
.*****************************************************************************
.*                           WGT10000           Called by: A01A0000          *
.*          Write PRFA details to the Guarantor segment    A04O0000          *
.* Returns:  EXIT  0 = Segment sent ok                     A04E0000          *
.*                 1 = Connection lost                     A05O0000          *
.*                 2 = Timeout                             A08A0000          *
.*                                                         A08O0000          *
.*                                                         A08E0000          *
.*                                                         A13A0000          *
.*                                                         A13E0000          *
.*                                                         A14A0000          *
.*****************************************************************************
.
WGT10000  MOVE      "GT1",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [GT1] segment",*R,*N;
          ENDIF
.
.         Send a "delete" segment first
.
          MOVE      BLANKSTR,GT1001              * set all fields to null
          MOVE      BLANKSTR,GT1002
          MOVE      BLANKSTR,GT1003
          MOVE      BLANKSTR,GT1004
          MOVE      BLANKSTR,GT1005
          MOVE      BLANKSTR,GT1006              
          MOVE      BLANKSTR,GT1007              
          MOVE      BLANKSTR,GT1008
          MOVE      BLANKSTR,GT1009
          MOVE      BLANKSTR,GT1010
          MOVE      BLANKSTR,GT1011
          MOVE      BLANKSTR,GT1012
          MOVE      BLANKSTR,GT1013              
          MOVE      BLANKSTR,GT1014              
          MOVE      BLANKSTR,GT1015              
          MOVE      BLANKSTR,GT1016
          MOVE      BLANKSTR,GT1017
          MOVE      BLANKSTR,GT1018
          MOVE      BLANKSTR,GT1019
          MOVE      BLANKSTR,GT1020
          MOVE      BLANKSTR,GT1021
          MOVE      BLANKSTR,GT1022
          MOVE      BLANKSTR,GT1023
          MOVE      BLANKSTR,GT1024
          MOVE      BLANKSTR,GT1025
          MOVE      BLANKSTR,GT1026
          MOVE      BLANKSTR,GT1027
          MOVE      BLANKSTR,GT1028
          MOVE      BLANKSTR,GT1029
          MOVE      BLANKSTR,GT1030
          MOVE      BLANKSTR,GT1031
          MOVE      BLANKSTR,GT1032
          MOVE      BLANKSTR,GT1033
          MOVE      BLANKSTR,GT1034
          MOVE      BLANKSTR,GT1035
          MOVE      BLANKSTR,GT1036
          MOVE      BLANKSTR,GT1037
          MOVE      BLANKSTR,GT1038
          MOVE      BLANKSTR,GT1039
          MOVE      BLANKSTR,GT1040
          MOVE      BLANKSTR,GT1041
          MOVE      BLANKSTR,GT1042
          MOVE      BLANKSTR,GT1043
          MOVE      BLANKSTR,GT1044
          MOVE      BLANKSTR,GT1045
          MOVE      BLANKSTR,GT1046
          MOVE      BLANKSTR,GT1047
          MOVE      BLANKSTR,GT1048
          MOVE      BLANKSTR,GT1049
          MOVE      BLANKSTR,GT1050
          MOVE      BLANKSTR,GT1051
          MOVE      BLANKSTR,GT1052
          MOVE      BLANKSTR,GT1053
          MOVE      BLANKSTR,GT1054
          MOVE      BLANKSTR,GT1055
.
          PACK      SEGSTRNG,ANSG,ANST,ONE,PIPE:
                             GT1001,PIPE,GT1002,PIPE,GT1003,PIPE,GT1004,PIPE:
                             GT1005,PIPE,GT1006,PIPE,GT1007,PIPE,GT1008,PIPE:
                             GT1009,PIPE,GT1010,PIPE,GT1011,PIPE,GT1012,PIPE:
                             GT1013,PIPE,GT1014,PIPE,GT1015,PIPE,GT1016,PIPE:
                             GT1017,PIPE,GT1018,PIPE,GT1019,PIPE,GT1020,PIPE:
                             GT1021,PIPE,GT1022,PIPE,GT1023,PIPE,GT1024,PIPE:
                             GT1025,PIPE,GT1026,PIPE,GT1027,PIPE,GT1028,PIPE:
                             GT1029,PIPE,GT1030,PIPE,GT1031,PIPE,GT1032,PIPE:
                             GT1033,PIPE,GT1034,PIPE,GT1035,PIPE,GT1036,PIPE:
                             GT1037,PIPE,GT1038,PIPE,GT1039,PIPE,GT1040,PIPE:
                             GT1041,PIPE,GT1042,PIPE,GT1043,PIPE,GT1044,PIPE:
                             GT1045,PIPE,GT1046,PIPE,GT1047,PIPE,GT1048,PIPE:
                             GT1049,PIPE,GT1050,PIPE,GT1051,PIPE,GT1052,PIPE:
                             GT1053,PIPE,GT1054,PIPE,GT1055,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WGT19100:               * connection lost
                         WGT19200                * timeout
.
.         Check if a PRFA record exists
.
          MOVE      VISNUMBR,KEY8
          CALL      RDPTRES1                     * pra record on file ?
          BRANCH    OVRCD,WGT19000
.
.         A PRFA record exists, so load the data
.
          CALL      CLGT1000                     * clear GT1 fields
.
.         Load Set ID
.
          MOVE      ONE,GT1001
.
.         Load Guarantor Name
.
          MATCH     SP30,PKNAME                  * name blank ?
          IF        @EQUAL
            MOVE      BLANKSTR,GT1003            * yes - load default value
          ELSE
            MOVE      PKNAME,FIELDSTR            * no - load name
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,GT1003
          ENDIF
.
.         Load Guarantor Address
.
          MOVE      BLANKSTR,GT1005              * set address default value
          MATCH     PKADD1,SP70                  * blank address 1 ?
          GOTO      WGT11000 IF EQUAL            * yes
.
          MOVE      PKADD1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,GT1005
          ENDSET    GT1005
          APPEND    CARET,GT1005
.
          MATCH     PKADD2,SP70                  * blank address 2 ?
          IF        @EQUAL
            APPEND    BLANKSTR,GT1005            * yes
          ELSE
            MOVE      PKADD2,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,GT1005
          ENDIF
          APPEND    CARET,GT1005
.
          MATCH     PKSUBR,SP70                  * blank address 3 ?
          IF        @EQUAL
            APPEND    BLANKSTR,GT1005            * yes
          ELSE
            MOVE      PKSUBR,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,GT1005
          ENDIF
          APPEND    CARET,GT1005
.
          MATCH     PKADD4,SP70                  * blank address 4 ?
          IF        @EQUAL
            APPEND    BLANKSTR,GT1005            * yes
          ELSE
            MOVE      PKADD4,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,GT1005
          ENDIF
          APPEND    CARET,GT1005
.
          MATCH     SP8,PKPOST                   * blank address 4 ?
          IF        @EQUAL
            APPEND    BLANKSTR,GT1005            * yes
          ELSE
            MOVE      PKPOST,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,GT1005
          ENDIF
          RESET     GT1005
.
.         Load Guarantor Private Telephone
.
WGT11000  MOVE      "^PRN^PH^^^^",GT1006
          ENDSET    GT1006
          MATCH     SP20,PKTELEP                 * private telephone blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,GT1006            * yes
          ELSE
            MOVE      PKTELEP,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,GT1006
          ENDIF
.
.         Load Guarantor Mobile Number
.
          APPEND    "~^^CP^^^^",GT1006
          MATCH     SP20,PTREMOBL                * mobile number blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,GT1006            * yes
          ELSE
            MOVE      PTREMOBL,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,GT1006
          ENDIF
          RESET     GT1006
.
.         Load Guarantor Business Telephone
.
          MOVE      "^WPN^PH^^^^",GT1007
          ENDSET    GT1007
          MATCH     SP20,PKTELEB                 * business telephone blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,GT1007            * yes
          ELSE
            MOVE      PKTELEB,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,GT1007
          ENDIF
          RESET     GT1007
.
.         Load Guarantor Relationship
.
          MOVE      BLANKSTR,GT1011              * set default value
          MATCH     SP10,PKRELP                  * field populated ?
          GOTO      WGT18000 IF EQUAL            * no
.
          MOVE      PKRELP,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,GT1011
          ENDSET    GT1011
.
          MOVE      "Unknown Code",FIELDSTR
          MOVE      PKRELP,KEY10
          CALL      RDPMREL1
          IF        OVRCD = 0
            MOVE      PMRLDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,GT1011
          APPEND    FIELDSTR,GT1011
          APPEND    CARET,GT1011
          APPEND    "webPAS",GT1011
          RESET     GT1011
.
WGT18000  PACK      SEGSTRNG,ANSG,ANST,ONE,PIPE:
                             GT1001,PIPE,GT1002,PIPE,GT1003,PIPE,GT1004,PIPE:
                             GT1005,PIPE,GT1006,PIPE,GT1007,PIPE,GT1008,PIPE:
                             GT1009,PIPE,GT1010,PIPE,GT1011,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WGT19100:               * connection lost
                         WGT19200                * timeout
.
WGT19000  MOVE      ZERO,EXIT
          GOTO      WGT19999
.
WGT19100  MOVE      ONE,EXIT
          GOTO      WGT19999
.
WGT19200  MOVE      TWO,EXIT
.
WGT19999  RETURN
+
.*****************************************************************************
.*                           WZLH0000           Called by: M02P0000          *
.*          Write Doctor/Hospital details to the ZLH segment                 *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WZLH0000  MOVE      "ZLH",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [ZLH] segment",*R,*N;
          ENDIF
.
.         Send a "delete" segment first
.
          MOVE      BLANKSTR,ZLH001              * set all fields to null
          MOVE      BLANKSTR,ZLH002
          MOVE      BLANKSTR,ZLH003
          MOVE      BLANKSTR,ZLH004
.
          PACK      SEGSTRNG,ANSZ,ANSL,ANSH,PIPE:
                             ZLH001,PIPE,ZLH002,PIPE,ZLH003,PIPE,ZLH004,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WZLH9100:               * connection lost
                         WZLH9200                * timeout
.
.         Check if records exist on mlthcp
.
          PACK      KEY13,PMHCHCPC,SP70
          CALL      RSMLHCP2
WZLH1000  CALL      RKMLHCP2                     * loop thru mlthcp
          BRANCH    OVRCD,WZLH9000
.
          MATCH     PMHCHCPC,MLHCHCPC
          GOTO      WZLH9000 IF NOT EQUAL        * check hcp
.
.         A mlthcp record exists, so load the data
.
          CALL      CLZLH000                     * clear ZLH fields
.
.         Load Hospital
.
WZLH1100  MOVE      BLANKSTR,ZLH001              * set default value
.
          MATCH     SP70,MLHCHOSP                * field populated ?
          GOTO      WZLH1200 IF EQUAL            * no
.
          MOVE      MLHCHOSP,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZLH001
          ENDSET    ZLH001
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY3,MLHCHOSP
          CALL      RDPTHSP1
          IF        OVRCD = 0
            MOVE      PTHSNAME,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZLH001
          APPEND    FIELDSTR,ZLH001
          APPEND    CARET,ZLH001
          APPEND    "webPAS",ZLH001
          APPEND    CARET,ZLH001
.
          MOVE      PTHSAPPR,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZLH001
          APPEND    CARET,ZLH001
          APPEND    CARET,ZLH001
          APPEND    "DOHA",ZLH001
          RESET     ZLH001
.
.         Load Supervision Level
.
WZLH1200  MOVE      BLANKSTR,ZLH002              * set default value
.
          MATCH     SP70,MLHCOSLV                * field populated ?
          GOTO      WZLH1300 IF EQUAL            * no
.         
          MOVE      MLHCOSLV,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZLH002
          ENDSET    ZLH002
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSD,ANSL,MLHCOSLV
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZLH002
          APPEND    FIELDSTR,ZLH002
          APPEND    CARET,ZLH002
          APPEND    "webPAS",ZLH002
          RESET     ZLH002
.
.         Load Hospital Start Date
.
WZLH1300  MOVE      BLANKSTR,ZLH003              * set default value
.
          MATCH     SP70,MLHCSDAT                * field populated ?
          GOTO      WZLH1400 IF EQUAL            * no
.
          MOVE      MLHCSDAT,ZLH003
.
.         Load Hospital End Date
.
WZLH1400  MOVE      BLANKSTR,ZLH004              * set default value
.
          MATCH     SP70,MLHCEDAT                * field populated ?
          GOTO      WZLH8000 IF EQUAL            * no
.
          MOVE      MLHCEDAT,ZLH004
.
WZLH8000  PACK      SEGSTRNG,ANSZ,ANSL,ANSH,PIPE:
                             ZLH001,PIPE,ZLH002,PIPE,ZLH003,PIPE,ZLH004,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WZLH9100:               * connection lost
                         WZLH9200                * timeout
.
          CALL      WZLU0000                     * format ZLU segment
          BRANCH    EXIT,WZLH9100:               * connection lost
                         WZLH9200                * timeout
.
          GOTO      WZLH1000                     * get next linked hospital
.
WZLH9000  MOVE      ZERO,EXIT
          GOTO      WZLH9999
.
WZLH9100  MOVE      ONE,EXIT
          GOTO      WZLH9999
.
WZLH9200  MOVE      TWO,EXIT
.
WZLH9999  RETURN
+
.*****************************************************************************
.*                           WZLU0000           Called by: WZLH0000          *
.*          Write Doctor/Hospital/Unit details to the ZLU segment            *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WZLU0000  MOVE      "ZLU",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [ZLU] segment",*R,*N;
          ENDIF
.
.         Check if records exist on pmstmd
.
          PACK      KEY21,MLHCHCPC,MLHCHOSP,SP70
          CALL      RSPMTMD1
WZLU1000  CALL      RKPMTMD1                     * loop thru pmstmd
          BRANCH    OVRCD,WZLU9000
.
          MATCH     MLHCHCPC,PMTDDOCT
          GOTO      WZLU9000 IF NOT EQUAL        * check hcp
.
          MATCH     MLHCHOSP,PMTDHOSP
          GOTO      WZLU9000 IF NOT EQUAL        * check hospital
.
          MATCH     SP70,PMTDTEAM
          GOTO      WZLU1000 IF NOT EQUAL        * only want header (no team)
.
.         A pmstmd record exists, so load the data
.
          CALL      CLZLU000                     * clear ZLU fields
.
.         Load Unit
.
WZLU1100  MOVE      BLANKSTR,ZLU001              * set default value
.
          MATCH     SP70,PMTDUNIT                * field populated ?
          GOTO      WZLU1200 IF EQUAL            * no
.
          MOVE      PMTDUNIT,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZLU001
          ENDSET    ZLU001
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSA,ANSC,PMTDUNIT
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZLU001
          APPEND    FIELDSTR,ZLU001
          APPEND    CARET,ZLU001
          APPEND    "webPAS",ZLU001
          RESET     ZLU001
.
.         Unit Provider Number
.
WZLU1200  MOVE      BLANKSTR,ZLU002              * set default value
.
          MATCH     SP70,PMTDPROV                * field populated ?
          GOTO      WZLU8000 IF EQUAL            * no
.
          MOVE      PMTDPROV,ZLU002
          STRIP     ZLU002
.
WZLU8000  PACK      SEGSTRNG,ANSZ,ANSL,ANSU,PIPE:
                             ZLU001,PIPE,ZLU002,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WZLU9100:               * connection lost
                         WZLU9200                * timeout
.
          GOTO      WZLU1000                     * get next linked unit
.
WZLU9000  MOVE      ZERO,EXIT
          GOTO      WZLU9999
.
WZLU9100  MOVE      ONE,EXIT
          GOTO      WZLU9999
.
WZLU9200  MOVE      TWO,EXIT
.
WZLU9999  RETURN
+
.*****************************************************************************
.*                           WZCM0000           Called by: M01O0000          *
.*          Write Clinic Master Information to the ZCM segment               *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WZCM0000  MOVE      "ZCM",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [ZCM] segment",*R,*N;
          ENDIF
.
          CALL      CLZCM000                     * clear ZCM fields
.
.         Clinic Master Status
.
WZCM1100  MOVE      BLANKSTR,ZCM001              * set default value
.
          IF        OMASTAT=1
            MOVE      "I",ZCM001                 * inactive
          ELSE
            MOVE      "A",ZCM001                 * active
          ENDIF
.
          MATCH     "1",PTCNCMSZ
          GOTO      WZCM1200 IF NOT EQUAL        * include F,L in ZCM001 ?
.
          MOVE      ZERO,F6                      * initialise 'active' count
.
          MOVE      OMASITE,KEY6                 * site
.0854837  MOVE      OMATYP,DIM6                  * clinic type
          MOVE      OMACLIN,D6                   * clinic id
.
          PACK      FNAME,OSTFILE,FILMA1A1
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OUTMA1A1,FNAME               * O/P clinic master index 1
          TRAPCLR   IO
          BRANCH    OVRCD,WZCM1200               * file not found
.
          PACK      KEY18,KEY6,D6,SP70
          CALL      RDSMASA1
WZCM1150  CALL      RDKMASA1
          BRANCH    OVRCD,WZCM1170
.
          MATCH     KEY6,OMASITE
          GOTO      WZCM1170 IF NOT EQUAL        * same site
.
.0854837  MATCH     DIM6,OMATYP
.0854837  GOTO      WZCM1170 IF NOT EQUAL        * same clinic type ?
.
          MATCH     D6,OMACLIN
          GOTO      WZCM1170 IF NOT EQUAL        * same clinic id ?
.
          IF        OMASTAT=0
            ADD       ONE,F6                     * active so add 1 to count
          ENDIF
.
          COMPARE   TWO,F6
          GOTO      WZCM1150 IF LESS             * check if more than 1 active
.
WZCM1170  PACK      KEY20,H7CIMESI
          CALL      RDOTQMA1                     * reread clinic master details
          BRANCH    OVRCD,WZCM1200
.
          IF        OMASTAT=1
            IF        F6=0
              MOVE      "L",ZCM001               * set to inactive (last)
            ELSE
              MOVE      "I",ZCM001               * set to inactive
            ENDIF
          ENDIF
.
          IF        OMASTAT=0
            IF        F6=1
              MOVE      "F",ZCM001               * set to active (first)
            ELSE
              MOVE      "A",ZCM001               * set to active
            ENDIF
          ENDIF
.
.         Date Clinic Closed
.
WZCM1200  MOVE      BLANKSTR,ZCM002              * set default value
.
          MATCH     SP70,OTMADTCC                * field populated ?
          GOTO      WZCM1300 IF EQUAL            * no
.
          MOVE      OTMADTCC,ZCM002
.
.         Hospital
.
WZCM1300  MOVE      BLANKSTR,ZCM003              * set default value
.
          MATCH     SP70,OTMAHOSP                * field populated ?
          GOTO      WZCM1400 IF EQUAL            * no
.
          MOVE      OTMAHOSP,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZCM003              
          ENDSET    ZCM003
.         
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY3,OTMAHOSP,SP70
          CALL      RDPTHSP1
          IF        OVRCD = 0
            MOVE      PTHSNAME,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZCM003
          APPEND    FIELDSTR,ZCM003
          APPEND    CARET,ZCM003
          APPEND    "webPAS",ZCM003
          RESET     ZCM003
.
.         Clinic Type
.
WZCM1400  MOVE      BLANKSTR,ZCM004              * set default value
.
          MATCH     SP70,OMATYP                  * field populated ?
          GOTO      WZCM1500 IF EQUAL            * no
.
          MOVE      OMATYP,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZCM004
          ENDSET    ZCM004
.
          MOVE      "Unknown Code",FIELDSTR
          MOVE      OMASITE,KEY6
          CALL      RDSITA1                  * site found ?
          IF        OVRCD = 0
            PACK      FNAME,OSTFILE,FILCTYA1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      OUTCTYA1,FNAME
            TRAPCLR   IO
            IF        OVRCD = 0
              PACK      KEY12,OMASITE,OMATYP,SP70
              CALL      RDCTYA1                    * location on file
              IF        OVRCD = 0
                MOVE      OCTDESC,FIELDSTR
                CALL      SPCHR000                 * convert special characters
              ENDIF
            ENDIF
          ENDIF
          APPEND    CARET,ZCM004
          APPEND    FIELDSTR,ZCM004
          APPEND    CARET,ZCM004
          APPEND    "webPAS",ZCM004
          RESET     ZCM004
.
.         Day of Week
.
WZCM1500  MOVE      BLANKSTR,ZCM005              * set default value
.
          COMPARE   ZERO,OMADAY                  * field populated ?
          GOTO      WZCM1600 IF EQUAL            * no
.
          LOAD      ZCM005,OMADAY,DMON,DTUE,DWED,DTHU,DFRI,DSAT,DSUN
.
.         NMDS Code
.
WZCM1600  MOVE      BLANKSTR,ZCM006              * set default value
.
          MATCH     SP70,OTMANMDS                * field populated ?
          GOTO      WZCM1700 IF EQUAL            * no
.
          MOVE      OTMANMDS,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZCM006
          ENDSET    ZCM006
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSN,ANSM,OTMANMDS,SP70
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZCM006
          APPEND    FIELDSTR,ZCM006
          APPEND    CARET,ZCM006
          APPEND    "webPAS",ZCM006
          RESET     ZCM006
.
.         Clinic Start Time
.
WZCM1700  MOVE      BLANKSTR,ZCM007              * set default value
.
          MATCH     SP70,OMASTART                * field populated ?
          GOTO      WZCM8000 IF EQUAL            * no
.
          UNPACK    OMASTART,CHOUR,ANS,CMIN
          MOVE      "00",CSEC
          PACK      ZCM007,CHOUR,CMIN,CSEC
.
WZCM8000  PACK      SEGSTRNG,ANSZ,ANSC,ANSM,PIPE:
                             ZCM001,PIPE,ZCM002,PIPE,ZCM003,PIPE,ZCM004,PIPE:
                             ZCM005,PIPE,ZCM006,PIPE,ZCM007,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WZCM9100:               * connection lost
                         WZCM9200                * timeout
.
WZCM9000  MOVE      ZERO,EXIT
          GOTO      WZCM9999
.
WZCM9100  MOVE      ONE,EXIT
          GOTO      WZCM9999
.
WZCM9200  MOVE      TWO,EXIT
.
WZCM9999  RETURN
+
.*****************************************************************************
.*                           WZCT0000           Called by: M01O0000          *
.*          Write Clinic Type Information to the ZCT segment                 *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WZCT0000  MOVE      "ZCT",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [ZCT] segment",*R,*N;
          ENDIF
.
          CALL      CLZCT000                     * clear ZCT fields
.
.         Clinic Type Status
.
WZCT1100  MOVE      BLANKSTR,ZCT001              * set default value
.
          MATCH     "1",OCTACT
          IF        @EQUAL
            MOVE      "I",ZCT001                 * inactive
          ELSE
            MOVE      "A",ZCT001                 * active
          ENDIF
.
WZCT8000  PACK      SEGSTRNG,ANSZ,ANSC,ANST,PIPE:
                             ZCT001,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WZCT9100:               * connection lost
                         WZCT9200                * timeout
.
WZCT9000  MOVE      ZERO,EXIT
          GOTO      WZCT9999
.
WZCT9100  MOVE      ONE,EXIT
          GOTO      WZCT9999
.
WZCT9200  MOVE      TWO,EXIT
.         
WZCT9999  RETURN
+
.*****************************************************************************
.*                           TPV10000           Called by: WRPV1000          *
.*              Load the PV1 fields for Theatre Booking messages (S12/14/15) *
.*****************************************************************************
.
.         Patient Class
.
TPV10000  MOVE      ANSI,PV1002                  * I/P class
.
          MOVE      VISNUMBR,PV1005              * set booking number
          SQUEEZE   PV1005
          CALL      ALVIS000                     * check for alternate visit id
.
          CALL      REFVIS00                     * check for eReferral id
.
TPV13000  PACK      SEGSTRNG,ANSP,ANSV,ONE,PIPE:
                             PV1001,PIPE,PV1002,PIPE,PV1003,PIPE,PV1004,PIPE:
                             PV1005,PIPE,PV1006,PIPE,PV1007,PIPE,PV1008,PIPE:
                             PV1009,PIPE,PV1010,PIPE,PV1011,PIPE,PV1012,PIPE:
                             PV1013,PIPE,PV1014,PIPE,PV1015,PIPE,PV1016,PIPE:
                             PV1017,PIPE,PV1018,PIPE,PV1019,PIPE,PV1020,PIPE:
                             PV1021,PIPE,PV1022,PIPE,PV1023,PIPE,PV1024,PIPE:
                             PV1025,PIPE,PV1026,PIPE,PV1027,PIPE,PV1028,PIPE:
                             PV1029,PIPE,PV1030,PIPE,PV1031,PIPE,PV1032,PIPE:
                             PV1033,PIPE,PV1034,PIPE,PV1035,PIPE,PV1036,PIPE:
                             PV1037,PIPE,PV1038,PIPE,PV1039,PIPE,PV1040,PIPE:
                             PV1041,PIPE,PV1042,PIPE,PV1043,PIPE,PV1044,PIPE:
                             PV1045,PIPE,PV1046,PIPE,PV1047,PIPE,PV1048,PIPE:
                             PV1049,PIPE,PV1050,CRETURN
.
TPV19999  RETURN
+
.*****************************************************************************
.*                            REFVIS00             Called by: TPV10000       *
.*         Check if this patient has other visit numbers:                    *
.* Requires: VISNUMBR - OPR visit number                                     *
.*           PV1050 - alternate visit number (which may or may not already   *
.*                    be populated).                                         *
.* Returns:  PV1050 - alternate visit number populated with eReferral ID     *
.*****************************************************************************
REFVIS00  MOVE      BLANKSTR,DIM20               * set default
.
          PACK      KEY28,VISNUMBR,SP70
          CALL      RSCMERH5
          CALL      RKCMERH5                     * check for eReferral record
          BRANCH    OVRCD,REFVIS30
.
          MATCH     VISNUMBR,CMRHVISN            * same visit number ?
          GOTO      REFVIS30 IF NOT EQUAL        * no - ignore record
.
          MATCH     SP70,CMRHEREF
          GOTO      REFVIS30 IF EQUAL            * blank eReferral ID
.
          MOVE      CMRHEREF,DIM20               * yes - load eReferral ID
          SQUEEZE   DIM20
.
REFVIS30  IF        PV150CNT = 0
            MOVE      DIM20,PV1050
            ENDSET    PV1050
          ELSE
            ENDSET    PV1050
            APPEND    TILDA,PV1050
            APPEND    DIM20,PV1050
          ENDIF
          APPEND    CARET,PV1050
          APPEND    CARET,PV1050
          APPEND    CARET,PV1050
          APPEND    "webPAS-ERF",PV1050
          APPEND    CARET,PV1050
          APPEND    ANSV,PV1050
          APPEND    ANSN,PV1050
          RESET     PV1050
.
          ADD       ONE,PV150CNT                 * increment repeat count
REFVIS99  RETURN
+
.*****************************************************************************
.*                           LPV10000           Called by: WRPV1000          *
.*          Load the PV1 fields for Allied Health Referrals and Contacts     *
.*****************************************************************************
.
LPV10000  MOVE      ONE,PV1001                   * Set Id (PV1.1)
          MOVE      ANSO,PV1002                  * Set to Outpatient (PV1.2)
.
.         Assigned Patient Location (PV1.3)
.
          MOVE      BLANKSTR,PV1003              * set default to blank
          MATCH     SP70,ALRECLID
          GOTO      LPV10300 IF EQUAL
.
          MOVE      ALRECLID,FIELDSTR            * set to the clinic id code
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PV1003              * set assigned location
          ENDSET    PV1003
          APPEND    CARET,PV1003
          APPEND    CARET,PV1003
          APPEND    CARET,PV1003
.
          MOVE      BLANKSTR,FIELDSTR            * set default to blank
          PACK      KEY3,ALREHOSN
          CALL      RDPTHSP1
          IF        OVRCD = 0
            MATCH     SP70,PTHSAPPR
            IF        !@EQUAL
              MOVE      PTHSAPPR,FIELDSTR
              CALL      SPCHR000                 * convert special characters
            ENDIF
          ENDIF
          APPEND    FIELDSTR,PV1003              * hospital approval number
          RESET     PV1003
.
.         Admission Type (PV1.4) not currently populated
.
.         Pre-admit number (PV1.5)
.
LPV10300  MOVE      ALREVISN,PV1005              * Referral/Visit number
          SQUEEZE   PV1005
.
.         Patient Prior Location (PV1.6) not currently populated
.
.         Load Attending Doctor (PV1.7)
.
          MOVE      BLANKSTR,PV1007              * set default to blank
          IF        MESSNUMB < 35
            MATCH     SP10,ALREHCP               * blank responsible HCP ?
            GOTO      LPV10500 IF EQUAL          * yes
            MOVE      ALREHCP,DIM10              * no - load HCP code
          ELSE
            MATCH     SP10,ALENHCP               * blank service provider ?
            GOTO      LPV10500 IF EQUAL          * yes
            MOVE      ALENHCP,DIM10              * no - load HCP code
          ENDIF
.
          MOVE      DIM10,KEY10
          CALL      RDPMHCP1                     * HCP record found ?
          BRANCH    OVRCD,LPV10500               * no
.
          MOVE      DIM10,FIELDSTR               * load HCP code
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PV1007
.
          ENDSET    PV1007
          APPEND    CARET,PV1007
.
          MOVE      PMHCSNAM,FIELDSTR            * load surname
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PV1007
.
          APPEND    CARET,PV1007
.
          MOVE      PMHCGNAM,FIELDSTR            * load given name
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PV1007
.
          APPEND    CARET,PV1007
          APPEND    CARET,PV1007
          APPEND    CARET,PV1007
.
          MOVE      PMHCTITL,FIELDSTR            * load title
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PV1007
.
          APPEND    CARET,PV1007
          APPEND    CARET,PV1007
          APPEND    "webPAS",PV1007              * load assigning authority
.
          RESET     PV1007
.
.         Referring Doctor (PV1.8)
.
LPV10500  MOVE      BLANKSTR,PV1008              * default to blank
          MATCH     SP10,ALRERHCP                * referring doctor blank ?
          GOTO      LPV10550 IF EQUAL
.
          MOVE      ALRERHCP,KEY10
          CALL      RDPMHCP1                     * HCP record found ?
          BRANCH    OVRCD,LPV10550               * no
.
          MOVE      ALRERHCP,FIELDSTR            * load HCP code
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PV1008
.
          ENDSET    PV1008
          APPEND    CARET,PV1008
.
          MOVE      PMHCSNAM,FIELDSTR            * load surname
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PV1008
.
          APPEND    CARET,PV1008
.
          MOVE      PMHCGNAM,FIELDSTR            * load given name
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PV1008
.
          APPEND    CARET,PV1008
          APPEND    CARET,PV1008
          APPEND    CARET,PV1008
.
          MOVE      PMHCTITL,FIELDSTR            * load title
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PV1008
.
          APPEND    CARET,PV1008
          APPEND    CARET,PV1008
          APPEND    "webPAS",PV1008              * load assigning authority
.
          RESET     PV1008
.
.         Consulting Doctor (PV1.9)
.
LPV10550  MOVE      BLANKSTR,PV1009              * default to blank
          MATCH     SP6,ALREPSIT
          GOTO      LPV10600 IF EQUAL            * no site
.
          MATCH     SP6,ALRECLID
          GOTO      LPV10600 IF EQUAL            * no clinic
.
          MATCH     SP8,ALREUDT1
          IF        @EQUAL
            MOVE      Z70,ALREUDT1               * no clinic date
          ENDIF
.
          MOVE      ALREPSIT,KEY6
          CALL      RDSITA1                      * site found ?
          BRANCH    OVRCD,LPV10600               * no - ignore field
.
          PACK      CFNAME,OSTFILE,FILCLIA1
          OPEN      OUTCLIA1,CFNAME
          PACK      KEY20,ALREPSIT,ALRECLID,ALREUDT1
          CALL      RDCLIA1                      * site/clinic/date rec. found?
          IF        OVRCD = 1
            CALL      RDPCLIA1                   * no - read previous record
            BRANCH    OVRCD,LPV10600             * ignore field
.
            MATCH     ALREPSIT,OCASITE           * same site still ?
            GOTO      LPV10600 IF NOT EQUAL      * no - ignore field
.
            MATCH     ALRECLID,OCACLIN           * same clinic still ?
            GOTO      LPV10600 IF NOT EQUAL      * no - ignore field
          ENDIF
.
          MATCH     SP6,OCADOCT                  * doctor blank ?
          GOTO      LPV10600 IF EQUAL
.
          PACK      KEY6,OCADOCT,SP70
          CALL      RDDOCT1                      * doc record found ?
          BRANCH    OVRCD,LPV10600               * no
.
          MOVE      OCADOCT,FIELDSTR             * load HCP code
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PV1009
.
          ENDSET    PV1009
          APPEND    CARET,PV1009
.
          MOVE      DSNAME,FIELDSTR              * load surname
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PV1009
.
          APPEND    CARET,PV1009
.
          MOVE      DGNAME,FIELDSTR              * load given name
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PV1009
.
          APPEND    CARET,PV1009
          APPEND    CARET,PV1009
          APPEND    CARET,PV1009
.
          MOVE      DTITL,FIELDSTR               * load title
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PV1009
.
          APPEND    CARET,PV1009
          APPEND    CARET,PV1009
          APPEND    "webPAS",PV1009              * load assigning authority
.
          RESET     PV1009
.
.         Load Hospital Service (PV1.10)
.
LPV10600  MOVE      BLANKSTR,PV1010              * set default to blank
          MATCH     SP3,ALREDEPT                 * blank department code ?
          GOTO      LPV11000 IF EQUAL            * yes
.
          PACK      KEY5,ANSC,ANSG,ALREDEPT
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,LPV11000               * no
.
          MATCH     SP4,THCSCOD                  * blank State HDP Eq. ?
          GOTO      LPV11000 IF EQUAL            * yes
.
          MOVE      THCSCOD,FIELDSTR             * no
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PV1010              * CAR 287076
.
.         Temporary Location (PV1.11) not currently populated
.
.         Preadmit Test Indicator (PV1.12) not currently populated
.
.         Re-admission Indicator (PV1.13) not currently populated
.
.         Admit Source (PV1.14)
.
LPV11000  MOVE      BLANKSTR,PV1014            * default to blank
          MATCH     SP10,ALRESRCE              * admit source blank ?
          IF        !@EQUAL
            MOVE      ALRESRCE,FIELDSTR        * no - load admit source code
            CALL      SPCHR000                 * convert special characters
            MOVE      FIELDSTR,PV1014
          ENDIF
.
.         Ambulatory Status (PV1.15) not currently populated
.
.         VIP Indicator (PV1.16) not currently populated
.
.         Admitting Doctor (PV1.17)
.
          MOVE      BLANKSTR,PV1017            * default to blank
          MATCH     SP10,PMPXRHC1              * Admitting Doctor blank ?
          IF        !@EQUAL
            MOVE      PMPXRHC1,FIELDSTR        * no - load dr code
            CALL      SPCHR000                 * convert special characters
            MOVE      FIELDSTR,PV1017
          ENDIF
.
.         Patient Type (PV1.18) not currently populated
.
.         Load Visit Number (PV1.19)
.
          MOVE      VISNUMBR,PV1019              * referral & contact
          SQUEEZE   PV1019
          CALL      ALVIS000                     * check for alternate visit id
          IF        MESSNUMB > 34
            ENDSET    PV1019                     * contact only
            APPEND    "-",PV1019
            APPEND    ALENENCT,PV1019            * add encounter id
            RESET     PV1019
            SQUEEZE   PV1019
          ENDIF
.
.         Financial Class (PV1.20)
.
          MOVE      ALRECOMP,PV1CLCOD          * save for send ZEC segment
          MOVE      BLANKSTR,PV1020            * default to blank
          MATCH     SP3,ALRECOMP               * Financial Class blank ?
          IF        !@EQUAL
            MOVE      ALRECOMP,FIELDSTR        * no - load Financial Class
            CALL      SPCHR000                 * convert special characters
            MOVE      FIELDSTR,PV1020
          ENDIF
.
.         Charge Price Indicator (PV1.21) not currently populated
.
.         Courtesy Code (PV1.22) not currently populated
.
.         Credit Rating (PV1.23) not currently populated
.
.         Contract Code (PV1.24) not currently populated
.
.         Contract Effective Date (PV1.25) not currently populated
.
.         Contract Amount (PV1.26) not currently populated
.
.         Contract Period (PV1.27) not currently populated
.
.         Interest Code (PV1.28) not currently populated
.
.         Transfer to Bad Debt Code (PV1.29) not currently populated
.
.         Transfer to Bad Debt Date (PV1.30) not currently populated
.
.         Bad Debt Agency Code (PV1.31) not currently populated
.
.         Bad Debt Transfer Amount (PV1.32) not currently populated
.
.         Bad Debt Recovery Amount (PV1.33) not currently populated
.
.         Delete Account Indicator (PV1.34) not currently populated
.
.         Delete Account Date (PV1.35) not currently populated
.
.         Discharge Disposition (PV1.36) not currently populated
.
.         Discharged to Location (PV1.37) not currently populated
.
.         Diet Type (PV1.38) not currently populated
.
.         Servicing Facility (PV1.39) not currently populated
.
.         Bed Status (PV1.40) not currently populated
.
.         Acount Status (PV1.41) not currently populated
.
.         Pending Location (PV1.42) not currently populated
.
.         Prior Temporary Location (PV1.43) not currently populated
.
.         Load Admit Date/Time (PV1.44)
.
          IF        MESSNUMB < 35
            MOVE      ALRERDAT,PV1044            * referral
          ELSE
            MATCH     SP8,ALENSDAT               * contact - blank service date?
            GOTO      LPV17000 IF EQUAL          * yes
.
            MOVE      ALENSDAT,PV1044            * no
            MATCH     SP8,ALENSTIM               * blank service time ?
            GOTO      LPV17000 IF EQUAL          * yes
.
            ENDSET    PV1044                     * no
            UNPACK    ALENSTIM,CHOUR,ANS,CMIN,ANS,CSEC
            APPEND    CHOUR,PV1044
            APPEND    CMIN,PV1044
            APPEND    CSEC,PV1044
            RESET     PV1044
            SQUEEZE   PV1044
          ENDIF
.
.         Pack up the message string with the fields which have just been loaded
.
LPV17000  PACK      SEGSTRNG,ANSP,ANSV,ONE,PIPE:
                             PV1001,PIPE,PV1002,PIPE,PV1003,PIPE,PV1004,PIPE:
                             PV1005,PIPE,PV1006,PIPE,PV1007,PIPE,PV1008,PIPE:
                             PV1009,PIPE,PV1010,PIPE,PV1011,PIPE,PV1012,PIPE:
                             PV1013,PIPE,PV1014,PIPE,PV1015,PIPE,PV1016,PIPE:
                             PV1017,PIPE,PV1018,PIPE,PV1019,PIPE,PV1020,PIPE:
                             PV1021,PIPE,PV1022,PIPE,PV1023,PIPE,PV1024,PIPE:
                             PV1025,PIPE,PV1026,PIPE,PV1027,PIPE,PV1028,PIPE:
                             PV1029,PIPE,PV1030,PIPE,PV1031,PIPE,PV1032,PIPE:
                             PV1033,PIPE,PV1034,PIPE,PV1035,PIPE,PV1036,PIPE:
                             PV1037,PIPE,PV1038,PIPE,PV1039,PIPE,PV1040,PIPE:
                             PV1041,PIPE,PV1042,PIPE,PV1043,PIPE,PV1044
          ENDSET    SEGSTRNG
.
          COMPARE   MESSNUMB,THIRTY4             * contact ?
          GOTO      LPV19000 IF LESS             * yes
.
.         Load Referral Discharge Date/Time (PV1.45) only if case is closed
.
          MATCH     "2",ALRESTAT                 * case closed ?
          GOTO      LPV19000 IF NOT EQUAL        * no
.
          MATCH     SP8,ALREDCLO                 * blank closed date ?
          GOTO      LPV19000 IF EQUAL            * yes
.
          APPEND    PIPE,SEGSTRNG
          MOVE      ALREDCLO,PV1045              * no
          MATCH     SP8,ALRETCLO                 * blank closed time ?
          GOTO      LPV18000 IF EQUAL            * yes
.
          ENDSET    PV1045                       * no
          UNPACK    ALRETCLO,CHOUR,ANS,CMIN,ANS,CSEC
          APPEND    CHOUR,PV1045
          APPEND    CMIN,PV1045
          APPEND    CSEC,PV1045
          RESET     PV1045
          SQUEEZE   PV1045
LPV18000  APPEND    PV1045,SEGSTRNG
.
LPV19000  APPEND    CRETURN,SEGSTRNG
          RESET     SEGSTRNG
.
.         Current Patient Balance (PV1.46) not currently populated
.
.         Total Charges (PV1.47) not currently populated
.
.         Total Adjustments (PV1.48) not currently populated
.
.         Total Payments (PV1.49) not currently populated
.
.         Alternate Visit ID (PV1.50) not currently populated
.
.         Visit Indicator (PV1.51) not currently populated
.
.         Other Health Care Provider (PV1.52) not currently populated
.
LPV19999  RETURN
+
.*****************************************************************************
.*                           BPV10000           Called by: WRPV1000          *
.*          Load the PV1 fields for W/L bookings                             *
.*****************************************************************************
.
BPV10000  MOVE      ONE,PV1001                   * Set Id (PV1.1)
          MOVE      ANSW,PV1002                  * Set to W/L booking (PV1.2)
.
.         Assigned Patient Location (PV1.3)
.
BPV10300  MOVE      BLANKSTR,WRDSTRNG
          MATCH     SP70,WTTXWARD
          GOTO      BPV10305 IF EQUAL
.
          MOVE      WTTXWARD,WRDSTRNG            * ward
.
          MATCH     "1",PTCNH7WD                 * using short description ?
          GOTO      BPV10305 IF NOT EQUAL        * no
.
          PACK      KEY6,WTTXWARD,SP6
          CALL      RDWARD1
          BRANCH    OVRCD,BPV10305
.
          MOVE      PTWDSDES,WRDSTRNG
.
BPV10305  MOVE      WRDSTRNG,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PV1003
          ENDSET    PV1003
.
          APPEND    CARET,PV1003
          APPEND    CARET,PV1003
          APPEND    CARET,PV1003
          APPEND    AMPRSAND,PV1003
.
          MOVE      BLANKSTR,FIELDSTR
          MATCH     SP70,WTWMIHSP
          GOTO      BPV10306 IF EQUAL
.
          MOVE      WTWMIHSP,KEY3                * load hospital key
          CALL      RDPTHSP1                     * hospital code on file ?
          BRANCH    OVRCD,BPV10306               * no
.
          MATCH     SP3,PTHSAPPR                 * blank approval number ?
          GOTO      BPV10306 IF EQUAL            * yes
.
          MOVE      PTHSAPPR,FIELDSTR            * set hospital text
BPV10306  CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PV1003
          RESET     PV1003
.
.         Admission Type (PV1.4)
.
BPV10400  MATCH     SP3,WTTXBOTY                 * blank ?
          IF        @EQUAL
            MOVE      BLANKSTR,PV1004            * yes
          ELSE
            MOVE      WTTXBOTY,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,PV1004            * set admission type
          ENDIF
.
.         Load pre-admit number (PV1.5)
.
BPV10500  MOVE      VISNUMBR,PV1005
          SQUEEZE   PV1005
          CALL      ALVIS000                     * check for alternate visit id
.
.         Patient Prior Location (PV1.6)
.
BPV10600  MOVE      BLANKSTR,WRDSTRNG
          MATCH     SP70,SAVTXWRD
          GOTO      BPV10605 IF EQUAL
.         
          MOVE      SAVTXWRD,WRDSTRNG            * ward
.         
          MATCH     "1",PTCNH7WD                 * using short description ?
          GOTO      BPV10605 IF NOT EQUAL        * no
.         
          PACK      KEY6,SAVTXWRD,SP6
          CALL      RDWARD1
          BRANCH    OVRCD,BPV10605
.
          MOVE      PTWDSDES,WRDSTRNG
.
BPV10605  MOVE      WRDSTRNG,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PV1006
          ENDSET    PV1006
.
          APPEND    CARET,PV1006
          APPEND    CARET,PV1006
          APPEND    CARET,PV1006
          APPEND    AMPRSAND,PV1006
.
          MOVE      BLANKSTR,FIELDSTR
          MATCH     SP70,WTWMIHSP
          GOTO      BPV10606 IF EQUAL
.
          MOVE      WTWMIHSP,KEY3                * load hospital key
          CALL      RDPTHSP1                     * hospital code on file ?
          BRANCH    OVRCD,BPV10606               * no
.
          MATCH     SP3,PTHSAPPR                 * blank approval number ?
          GOTO      BPV10606 IF EQUAL            * yes
.
          MOVE      PTHSAPPR,FIELDSTR            * set hospital text
BPV10606  CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PV1006
          RESET     PV1006
.
.         Attending Doctor (PV1.7) not currently populated
.
.         Referring Doctor (PV1.8)
.
BPV10800  MOVE      SP60,DOCFNAME
          CLEAR     DOCFNAME
          MOVE      BLANKSTR,PV1008            * default to blank
          MATCH     SP10,WTTXRCLI              * doctor referring blank ?
          IF        !@EQUAL
            MOVE      WTTXRCLI,FIELDSTR        * no - load dr code
            CALL      SPCHR000                 * convert special characters
            MOVE      FIELDSTR,PV1008
            ENDSET    PV1008
            APPEND    CARET,PV1008
.             
            MOVE      WTTXRCLI,KEY10
            CALL      RDPMHCP1
            IF        OVRCD = 0 
              MOVE      PMHCSNAM,FIELDSTR
              CALL      SPCHR000               * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              APPEND    CARET,DOCFNAME
              MOVE      PMHCGNAM,FIELDSTR
              CALL      SPCHR000               * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              APPEND    CARET,DOCFNAME
              APPEND    CARET,DOCFNAME
              APPEND    CARET,DOCFNAME
              MOVE      PMHCTITL,FIELDSTR
              CALL      SPCHR000               * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              RESET     DOCFNAME
              APPEND    DOCFNAME,PV1008
              APPEND    CARET,PV1008
              APPEND    CARET,PV1008
              APPEND    "webPAS",PV1008
.
              MOVE      ZERO,FORM1             * initialise counter
              WHILE     FORM1 < 6
                APPEND    TILDA,PV1008
                ADD       ONE,FORM1            * increment counter
                LOAD      DIM10,FORM1,PMHCPRV1,PMHCPRV2,PMHCPRV3:
                                      PMHCPRV4,PMHCPRV5,PMHCNHSN
                MATCH     SP10,DIM10           * provider blank ?
                IF        @EQUAL
                  APPEND    BLANKSTR,PV1008
                ELSE
                  MOVE      DIM10,FIELDSTR
                  CALL      SPCHR000           * convert special characters
                  APPEND    FIELDSTR,PV1008
                ENDIF
                APPEND    CARET,PV1008
                APPEND    DOCFNAME,PV1008
                APPEND    CARET,PV1008
                APPEND    CARET,PV1008
                IF        FORM1 = 6
                  MOVE      PRESCRIB,DOCTORID  * load dr. id type
                  STRIP     DOCTORID
                  APPEND    DOCTORID,PV1008
                ELSE
                  MOVE      PROVIDER,DOCTORID  * load dr. id type
                  STRIP     DOCTORID
                  APPEND    DOCTORID,PV1008
                  APPEND    FORM1,PV1008
                ENDIF
              DO
            ELSE
              APPEND    CARET,PV1008
              APPEND    CARET,PV1008
              APPEND    CARET,PV1008
              APPEND    CARET,PV1008
              APPEND    CARET,PV1008
              APPEND    CARET,PV1008
              APPEND    "webPAS",PV1008
            ENDIF
            RESET     PV1008
          ENDIF
.
.         Consulting Doctor (PV1.9)
.
BPV10900  MOVE      SP60,DOCFNAME
          CLEAR     DOCFNAME
          MOVE      BLANKSTR,PV1009              * default consultant to blank
          MATCH     SP10,WMDOCTOR                * doctor seen blank ?
          IF        !@EQUAL
            MOVE      WMDOCTOR,FIELDSTR          * no - load dr code
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,PV1009
            ENDSET    PV1009
            APPEND    CARET,PV1009
.
            MOVE      WMDOCTOR,KEY6
            CALL      RDDOCT1
            IF        OVRCD = 0
              MOVE      DSNAME,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              APPEND    CARET,DOCFNAME
              MOVE      DGNAME,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              APPEND    CARET,DOCFNAME
              APPEND    CARET,DOCFNAME
              APPEND    CARET,DOCFNAME
              MOVE      DTITL,FIELDSTR
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,DOCFNAME
              RESET     DOCFNAME
              APPEND    DOCFNAME,PV1009
              APPEND    CARET,PV1009
              APPEND    CARET,PV1009
              APPEND    "webPAS",PV1009
.
              MOVE      ZERO,FORM1               * initialise counter
              WHILE     FORM1 < 6
                APPEND    TILDA,PV1009
                ADD       ONE,FORM1              * increment counter
                LOAD      DIM10,FORM1,DPROV,PTDOPRO2,PTDOPRO3:
                                      PTDOPRO4,PTDOPRO5,PTDONHSN
                MATCH     SP10,DIM10             * provider blank ?
                IF        @EQUAL
                  APPEND    BLANKSTR,PV1009
                ELSE
                  MOVE      DIM10,FIELDSTR
                  CALL      SPCHR000             * convert special characters
                  APPEND    FIELDSTR,PV1009
                ENDIF
                APPEND    CARET,PV1009
                APPEND    DOCFNAME,PV1009
                APPEND    CARET,PV1009
                APPEND    CARET,PV1009
                IF        FORM1 = 6
                  MOVE      PRESCRIB,DOCTORID  * load dr. id type
                  STRIP     DOCTORID
                  APPEND    DOCTORID,PV1009
                ELSE
                  MOVE      PROVIDER,DOCTORID  * load dr. id type
                  STRIP     DOCTORID
                  APPEND    DOCTORID,PV1009
                  APPEND    FORM1,PV1009
                ENDIF
              DO
            ELSE
              APPEND    CARET,PV1009
              APPEND    CARET,PV1009
              APPEND    CARET,PV1009
              APPEND    CARET,PV1009
              APPEND    CARET,PV1009
              APPEND    CARET,PV1009
              APPEND    "webPAS",PV1009
            ENDIF
            RESET     PV1009
          ENDIF
.
.         Hospital Service (PV1.10) not currently populated
.
.         Temporary Location (PV1.11) not currently populated
.
.         Preadmit Test Indicator (PV1.12) not currently populated
.
.         Re-admission Indicator (PV1.13) not currently populated
.
.         Admit Source (PV1.14) not currently populated
.
.         Ambulatory Status (PV1.15) not currently populated
.
.         VIP Indicator (PV1.16) not currently populated
.
.         Admitting Doctor (PV1.17) not currently populated
.
.         Patient Type (PV1.18) not currently populated
.
.         Visit Number (PV1.19) not currently populated
.
.         Financial Class (PV1.20) not currently populated
.
.         Charge Price Indicator (PV1.21) not currently populated
.
.         Courtesy Code (PV1.22) not currently populated
.
.         Credit Rating (PV1.23) not currently populated
.
.         Contract Code (PV1.24) not currently populated
.
.         Contract Effective Date (PV1.25) not currently populated
.
.         Contract Amount (PV1.26) not currently populated
.
.         Contract Period (PV1.27) not currently populated
.
.         Interest Code (PV1.28) not currently populated
.
.         Transfer to Bad Debt Code (PV1.29) not currently populated
.
.         Transfer to Bad Debt Date (PV1.30) not currently populated
.
.         Bad Debt Agency Code (PV1.31) not currently populated
.
.         Bad Debt Transfer Amount (PV1.32) not currently populated
.
.         Bad Debt Recovery Amount (PV1.33) not currently populated
.
.         Delete Account Indicator (PV1.34) not currently populated
.
.         Delete Account Date (PV1.35) not currently populated
.
.         Discharge Disposition (PV1.36) not currently populated
.
.         Discharged to Location (PV1.37) not currently populated
.
.         Diet Type (PV1.38) not currently populated
.
.         Servicing Facility (PV1.39) not currently populated
.
.         Bed Status (PV1.40) not currently populated
.
.         Acount Status (PV1.41) not currently populated
.
.         Pending Location (PV1.42) not currently populated
.
.         Prior Temporary Location (PV1.43) not currently populated
.
.         Admit Date/Time (PV1.44) not currently populated
.
.         Discharge Date/Time (PV1.45) not currently populated
.
.         Current Patient Balance (PV1.46) not currently populated
.
.         Total Charges (PV1.47) not currently populated
.
.         Total Adjustments (PV1.48) not currently populated
.
.         Total Payments (PV1.49) not currently populated
.
.         Alternate Visit ID (PV1.50) already populated (see PV1.5)
.
.         Visit Indicator (PV1.51) not currently populated
.
.         Other Health Care Provider (PV1.52) not currently populated
.
.
.         Pack up the message string with the fields which have just been loaded
.
          PACK      SEGSTRNG,ANSP,ANSV,ONE,PIPE:
                             PV1001,PIPE,PV1002,PIPE,PV1003,PIPE,PV1004,PIPE:
                             PV1005,PIPE,PV1006,PIPE,PV1007,PIPE,PV1008,PIPE:
                             PV1009,PIPE,PV1010,PIPE,PV1011,PIPE,PV1012,PIPE:
                             PV1013,PIPE,PV1014,PIPE,PV1015,PIPE,PV1016,PIPE:
                             PV1017,PIPE,PV1018,PIPE,PV1019,PIPE,PV1020,PIPE:
                             PV1021,PIPE,PV1022,PIPE,PV1023,PIPE,PV1024,PIPE:
                             PV1025,PIPE,PV1026,PIPE,PV1027,PIPE,PV1028,PIPE:
                             PV1029,PIPE,PV1030,PIPE,PV1031,PIPE,PV1032,PIPE:
                             PV1033,PIPE,PV1034,PIPE,PV1035,PIPE,PV1036,PIPE:
                             PV1037,PIPE,PV1038,PIPE,PV1039,PIPE,PV1040,PIPE:
                             PV1041,PIPE,PV1042,PIPE,PV1043,PIPE,PV1044,PIPE:
                             PV1045,PIPE,PV1046,PIPE,PV1047,PIPE,PV1048,PIPE:
                             PV1049,PIPE,PV1050,CRETURN
.
BPV19999  RETURN
+
.*****************************************************************************
.*                           WPV20000           Called by: most messages     *
.*                                                                           *
.*              Write Patient Visit (Additional Information) segment         *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WPV20000  COMPARE   ZERO,REFLFLAG                * O/P Referral message ?
          GOTO      WPV29000 IF EQUAL            * yes - don't send PV2
.
          IF        MESSNUMB > 31 & MESSNUMB < 38
            GOTO      WPV29000                   * A/H - ignore
          ENDIF
.
          MOVE      "PV2",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [PV2] segment",*R,*N;
          ENDIF
.
          CALL      CLPV2000                     * clear PV2 fields
.
          BRANCH    MESSNUMB,WPV21000:           * ADT Admission
                             WPV21000:           * ADT Transfer
                             WPV21000:           * ADT Discharge
                             WPV29000:           * Emerg. Discharge (not used)
                             WPV23000:           * O/P Attendance
                             WPV29000:           * Emerg. Attendance (not used)
                             WPV23000:           * O/P Booking
                             WPV21000:           * ADT Visit Update
                             WPV23000:           * O/P Visit Update
                             WPV29000:           * Emer. Visit Update (not used)
                             WPV21000:           * ADT Cancel Admiss.
                             WPV23000:           * O/P Unattend
                             WPV29000:           * Emer. Cancel Visit (not used)
                             WPV21000:           * ADT Cancel Trans.
                             WPV21000:           * ADT Cancel Disch.
                             WPV29000:           * Emer. Cancel Disc. (not used)
                             WPV21000:           * ADT Pre-admit
                             WPV21000:           * ADT On-leave
                             WPV21000:           * ADT Return from Leave
                             WPV21000:           * ADT Cancel Pre-admit
                             WPV29000:           * PMI Registration (not used)
                             WPV29000:           * PMI Update (not used)
                             WPV29000:           * PMI Merge (not used)
                             WPV23000:           * O/P Cancel Booking
                             WPV29000:           * ADT Move Visit (not used)
                             WPV29000:           * O/P Move Visit (not used)
                             WPV29000:           * Emerg. Move Visit (not used)
                             WPV29000:           * HCP Master File (not used)
                             WPV29000:           * notify new theatre booking
                             WPV29000:           * notify change theatre booking
                             WPV29000:           * notify cancel theatre booking
                             WPV29000:           * add patient referral
                             WPV29000:           * modify A/H referral
                             WPV29000:           * cancel A/H referral
                             WPV29000:           * add A/H encounter
                             WPV29000:           * modify A/H encounter
                             WPV29000:           * cancel A/H encounter
                             WPV24000:           * W/L booking
                             WPV24000:           * W/L booking update
                             WPV24000:           * W/L cancel booking
                             WPV29000:           * M01 Master File (not used)
                             WPV29000:           * W/L Move Visit (not used)
                             WPV24000:           * W/L Transfer
                             WPV23000:           * O/P discharge
                             WPV23000:           * Cancel O/P discharge
                             WPV29000:           * A/H Move Visit (not used)
                             WPV29000:           * Add W/L entry
                             WPV29000:           * Update W/L entry
                             WPV29000:           * Remove W/L entry
                             WPV29000            * PMI UnMerge (not used)
.
WPV21000  CALL      APV20000                     * ADT Messages
          PACK      SEGSTRNG,ANSP,ANSV,TWO,PIPE:
                             PV2001,PIPE,PV2002,PIPE,PV2003,PIPE,PV2004,PIPE:
                             PV2005,PIPE,PV2006,PIPE,PV2007,PIPE,PV2008,PIPE:
                             PV2009,PIPE,PV2010,CRETURN
          GOTO      WPV28000
.
WPV22000  COMPARE   ONE,OBASTAT                  * booking ?
          GOTO      WPV29000 IF NOT EQUAL        * no - don't send PV2
.
WPV23000  CALL      OPV20000                     * O/P Messages
          PACK      SEGSTRNG,ANSP,ANSV,TWO,PIPE:
                             PV2001,PIPE,PV2002,PIPE,PV2003,PIPE,PV2004,PIPE:
                             PV2005,PIPE,PV2006,PIPE,PV2007,PIPE,PV2008,PIPE:
                             PV2009,PIPE,PV2010,PIPE,PV2011,PIPE,PV2012,CRETURN
          GOTO      WPV28000
.
WPV24000  CALL      BPV20000                     * W/L Booking Messages
          PACK      SEGSTRNG,ANSP,ANSV,TWO,PIPE:
                             PV2001,PIPE,PV2002,PIPE,PV2003,PIPE,PV2004,PIPE:
                             PV2005,PIPE,PV2006,PIPE,PV2007,PIPE,PV2008,PIPE:
                             PV2009,PIPE,PV2010,PIPE,PV2011,PIPE,PV2012,CRETURN
.
WPV28000  CALL      SENDM000                     * send message
          BRANCH    EXIT,WPV29100:               * connection lost
                         WPV29200                * timeout
.
WPV29000  MOVE      ZERO,EXIT
          GOTO      WPV29999
.
WPV29100  MOVE      ONE,EXIT
          GOTO      WPV29999
.
WPV29200  MOVE      TWO,EXIT
.
WPV29999  RETURN
+
.*****************************************************************************
.*                           APV20000           Called by: WPV20000          *
.*              Load Patient Visit (Additional ADT Information) segment      *
.*****************************************************************************
.
.         Set Expected Admit date
.
APV20000  UNPACK    ATIME,CHOUR,ANS,CMIN,ANS,CSEC
          PACK      PV2008,ADATE,CHOUR,CMIN,CSEC
.
.         Set Expected Discharge Date (PV2.9).
.         First check if there is a working diagnosis record
.         for the admission. (CAR 267354)
.
          MOVE      VISNUMBR,KEY8
          CALL      RDPMWOR1                     * working diagnosis on file ?
          BRANCH    OVRCD,APV21000               * no - use default calculation
.
          MATCH     SP8,PMWOEDAT                 * blank exp. discharge date ?
          GOTO      APV21000 IF EQUAL            * yes - use default calculation
.
          MOVE      PMWOEDAT,PV2009              * no - load exp. disch. date
.
.         Load the Expected Discharge Time if populated (only ADT^A08)
.
          IF        MESSNUMB = 8
            MATCH     SP8,PMWOEDTM
            IF        !@EQUAL
              ENDSET    PV2009
              APPEND    PMWOEDTM,PV2009
              RESET     PV2009
              REP       ": ",PV2009
              SQUEEZE   PV2009
            ENDIF
          ENDIF
          GOTO      APV22000
.
.         Use default calculation
.
APV21000  MOVE      ADATE,DATECALC
          ADD       ASTAY,DATECALC
          MOVE      DATECALC,PV2009
.
.         Set Estimated Length of Stay (PV2.10)
.
APV22000  MOVE      ASTAY,PV2010
          SQUEEZE   PV2010
.
APV29999  RETURN
+
.*****************************************************************************
.*                           OPV20000           Called by: WPV20000          *
.*              Load Patient Visit (Additional O/P Information) segment      *
.*****************************************************************************
.
.         Load Slot Time (PV2.8)
.
OPV20000  UNPACK    OBATIME,CHOUR,ANS,CMIN
          PACK      PV2008,OBADATE,CHOUR,CMIN,ZERO,ZERO
.
.         Load Visit Description (PV2.12)
.         (Added for BHS - CAR 200967)
.
          MOVE      BLANKSTR,PV2012              * set default to blank
          MATCH     SP3,OBAVISIT                 * blank visit type ?
          GOTO      OPV29999 IF EQUAL            * yes
.
          MOVE      OBAVISIT,FIELDSTR            * no
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PV2012
.
          PACK      KEY5,ANSC,ANSV,OBAVISIT
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,OPV29999               * no - just send code
.
          MATCH     SP20,TDESC                   * blank description ?
          GOTO      OPV29999 IF EQUAL            * yes - just send code
.
          ENDSET    PV2012                       * no - add description
          APPEND    "-",PV2012
          APPEND    TDESC,PV2012
          RESET     PV2012
          STRIP     PV2012
.
OPV29999  RETURN
+
.*****************************************************************************
.*                           BPV20000           Called by: WPV20000          *
.*              Load Patient Visit (Additional W/L Information) segment      *
.*****************************************************************************
.
.         Set Scheduled Admit date for W/L bookings (A02, A05, A08 and A38)
.
BPV20000  MOVE      BLANKSTR,PV2008
          MOVE      BLANKSTR,PV2009
          MATCH     SP70,WMDATE3
          IF        !@EQUAL
            UNPACK    WTTXPATM,CHOUR,ANS,CMIN,ANS,CSEC
            PACK      PV2008,WMDATE3,CHOUR,CMIN,CSEC
            REP       " 0",PV2008
.
.         Load Expected Discharge Date (PV1.9)
.
            MOVE      WMDATE3,DATECALC
            ADD       WMSTAY,DATECALC
            MOVE      DATECALC,PV2009
          ENDIF
.
.         Load Estimated Length of Stay (PV1.10)
.
          MOVE      WMSTAY,PV2010
          SQUEEZE   PV2010
.
.         Load Visit Description (PV1.12)
.
          MOVE      BLANKSTR,PV2012
          MATCH     SP3,WTTXBOTY
          IF        !@EQUAL
            PACK      KEY5,ANSB,ANSK,WTTXBOTY
            CALL      RDCODE1
            IF        OVRCD = 0
              MOVE      TDESC,FIELDSTR           * load visit description
              CALL      SPCHR000                 * convert special characters
              MOVE      FIELDSTR,PV2012
            ENDIF
          ENDIF
.
BPV29999  RETURN
+
.*****************************************************************************
.*                           WDG10000              Called by: WRDG1000       *
.*      Load the DG1 fields for an W/L message (free format diagnosis only)  *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
.         Check if we are sending the free text admitting/presenting diagnoses
.
WDG10000  MOVE      ZERO,F1
          MOVE      PTCNADIG,F1
          IF        F1 < 1 | F1 > 5
            GOTO      WDG19000                   * no - finished
          ENDIF
.
          MATCH     SP70,WMREASON                * diagnosis blank ?
          GOTO      WDG19000 IF EQUAL            * yes
.
          CALL      CLDG1000                     * yes - clear DG1 fields
.
          ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,DG1001               * set id
          SQUEEZE   DG1001
.
          MOVE      WMREASON,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,DG1004              * load diagnosis desc
.
          MOVE      ANSW,DG1006                  * set type to "Working"
.
          PACK      SEGSTRNG,ANSD,ANSG,ONE,PIPE:
                         DG1001,PIPE,DG1002,PIPE,DG1003,PIPE,DG1004,PIPE:
                         DG1005,PIPE,DG1006,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WDG19100:               * connection lost
                         WDG19200                * timeout
.
WDG19000  MOVE      ZERO,EXIT
          GOTO      WDG19999
.
WDG19100  MOVE      ONE,EXIT
          GOTO      WDG19999
.
WDG19200  MOVE      TWO,EXIT
.
WDG19999  RETURN
+
.*****************************************************************************
.*                           MHDG1000              Called by: WRDG1000       *
.*      Load the DG1 fields for any mental health diagnoses on file          *
.* Send based on parameter PTCNMDG1: 1 = Send for inpatient messages only    *
.*                                   2 = Send for update referral (I13) only *
.*                                   3 = Send for inpatient and referral upd *
.*                               Other = Not sending MH DG1 segment          *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
.         Check if we are sending mental health diagnoses
.
MHDG1000  MATCH     "1",PTCNMDG1                 * sending for inpatient only?
          IF        !@EQUAL
            MATCH     "2",PTCNMDG1               * sending for referrals only?
            IF        @EQUAL
              COMPARE   THIRTY3,MESSNUMB
              GOTO      MHDG1900 IF NOT EQUAL    * message type is not I13
            ELSE
              MATCH     "3",PTCNMDG1
              GOTO      MHDG1900 IF NOT EQUAL    * not sending - finished
            ENDIF
          ENDIF
.
.         Get the mental health diagnoses for this admission
.
          MOVE      ZERO,DG1COUNT
.
.davvy    IF        MESSNUMB = 33
.davvy      PACK      D8,ALRELINK,SP8            * referral linked visit
.davvy    ELSE
            PACK      D8,VISNUMBR,SP8            * inpatient visit number
.davvy    ENDIF
.
          MATCH     SP8,D8
          GOTO      MHDG1900 IF EQUAL            * blank visit number
.
          PACK      KEY16,D8,Z70
          CALL      RSMHDIA1                     * position on admission
          CALL      RPMHDIA1                     * read latest record
          BRANCH    OVRCD,MHDG1900               * eof - finished
.
          MATCH     D8,DMHDIADM                  * same admission still ?
          GOTO      MHDG1900 IF NOT EQUAL        * no - finished
.
MHDG1500  CALL      CLDG1000                     * clear DG1 fields
.
          ADD       ONE,DG1COUNT
          ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,DG1001               * set id
          SQUEEZE   DG1001
          MOVE      DG1COUNT,DG1015              * priority (sequence number)
          SQUEEZE   DG1015
.
.                                                * load diagnosis icd code
          LOAD      D9,DG1COUNT,MHDIICD1,MHDIICD2,MHDIICD3,MHDIICD4:
                                MHDIICD5,MHDIICD6
.
          MATCH     SP9,D9
          GOTO      MHDG1900 IF EQUAL            * no more codes - finished
.
          MOVE      D9,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,DG1003              * set diagnosis code
.
.                                                * load date of diagnosis
          LOAD      CODINGDT,DG1COUNT,MHDIDAT1,MHDIDAT2,MHDIDAT3,MHDIDAT4:
                                      MHDIDAT5,MHDIDAT6
.
          MOVE      BLANKSTR,ICDVERSN
          MOVE      CODINGDT,ICDRDDTE
          CALL      OPICD1
          PACK      KEY9,DG1003,SP9
          ENDSET    DG1003
          APPEND    CARET,DG1003
          MOVE      "Unknown code",FIELDSTR      * get ICD description
          CALL      RDPTICD1
          IF        OVRCD = 0
.                                                * load diagnosis description
            LOAD      FIELDSTR,DG1COUNT,MHDIDES1,MHDIDES2,MHDIDES3,MHDIDES4:
                                        MHDIDES5,MHDIDES6
            CALL      SPCHR000                   * convert special characters
            MOVE      "ICD10.",ICDVERSN
            ENDSET    ICDVERSN
            APPEND    ICDRDVER,ICDVERSN          * load ICD version
            RESET     ICDVERSN
            SQUEEZE   ICDVERSN
          ENDIF
.
          APPEND    FIELDSTR,DG1003              * load diagnosis description
          APPEND    CARET,DG1003
          APPEND    ICDVERSN,DG1003              * load ICD version
          RESET     DG1003
.
          MATCH     SP8,CODINGDT                 * date blank ?
          IF        @EQUAL
            MOVE      BLANKSTR,DG1005            * yes
          ELSE
            MOVE      CODINGDT,DG1005            * no - set diag. (coding) date
          ENDIF
.
          MOVE      ANSM,DG1006                  * type = (M)ental Health
.
          PACK      SEGSTRNG,ANSD,ANSG,ONE,PIPE:
                             DG1001,PIPE,DG1002,PIPE,DG1003,PIPE,DG1004,PIPE:
                             DG1005,PIPE,DG1006,PIPE,DG1007,PIPE,DG1008,PIPE:
                             DG1009,PIPE,DG1010,PIPE,DG1011,PIPE,DG1012,PIPE:
                             DG1013,PIPE,DG1014,PIPE,DG1015,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,MHDG1910:               * connection lost
                         MHDG1920                * timeout
.
          COMPARE   SIX,DG1COUNT
          GOTO      MHDG1500 IF LESS
.
MHDG1900  MOVE      ZERO,EXIT
          GOTO      MHDG1999
.
MHDG1910  MOVE      ONE,EXIT
          GOTO      MHDG1999
.
MHDG1920  MOVE      TWO,EXIT
.
MHDG1999  RETURN
+
.*****************************************************************************
.*                           WMFI0000              Called by: M01O/M02P0000  *
.*                  Write Master File Identification segment                 *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WMFI0000  MOVE      "MFI",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [MFI] segment",*R,*N;
          ENDIF
.
          CALL      CLMFI000                     * clear all MFI fields
.
.         Master File Identifier
.
          MOVE       MFIMTYPE,MFI001
          ENDSET     MFI001
          APPEND     CARET,MFI001
          STRIP      MFIMDESC
          APPEND     MFIMDESC,MFI001
          APPEND     CARET,MFI001
          APPEND     "webPAS",MFI001
          RESET      MFI001
.
          MOVE       "UPD",MFI003                * File level event code
          MOVE       "NE",MFI006                 * Response level code
.
          PACK      SEGSTRNG,ANSM,ANSF,ANSI,PIPE:
                             MFI001,PIPE,MFI002,PIPE,MFI003,PIPE,MFI004,PIPE:
                             MFI005,PIPE,MFI006,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WMFI9100:               * connection lost
                         WMFI9200                * timeout
.
WMFI9000  MOVE      ZERO,EXIT
          GOTO      WMFI9999
.
WMFI9100  MOVE      ONE,EXIT
          GOTO      WMFI9999
.
WMFI9200  MOVE      TWO,EXIT
.
WMFI9999  RETURN
+
.*****************************************************************************
.*                           WMFE0000              Called by: M01O/M02P0000  *
.*                  Write Master File Entry segment                          *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WMFE0000  MOVE      "MFE",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [MFE] segment",*R,*N;
          ENDIF
.
          CALL      CLMFE000                     * clear all MFE fields
.
.         Record level event code
.
          MATCH     ANSA,H7CIACTN
          IF        @EQUAL
            MOVE      "MAD",MFE001               * add
          ENDIF
.
          MATCH     ANSU,H7CIACTN
          IF        @EQUAL
            MOVE      "MUP",MFE001               * update
          ENDIF
.
          MATCH     ANSD,H7CIACTN
          IF        @EQUAL
            MOVE      "MDL",MFE001               * delete
          ENDIF
.
          MOVE      BLANKSTR,MFE004              * default to blank
.
WMFE1000  MATCH     "ZCM",MFIMTYPE
          GOTO      WMFE3000 IF NOT EQUAL
.
.         Set up clinic code/description code as primary key value
.
          MOVE      OMASITE,KEY6                 * get clinic doctor/desc
          CALL      RDSITA1                      * site found ?
          BRANCH    OVRCD,WMFE8000               * no - ignore field
.
          PACK      CFNAME,OSTFILE,FILCLIA1
          OPEN      OUTCLIA1,CFNAME
          PACK      KEY20,OMASITE,OMACLIN,Z70
          CALL      RDSCLIA1
          CALL      RDPCLIA1                     * read latest record
          BRANCH    OVRCD,WMFE8000               * ignore field
.
          MATCH     OMASITE,OCASITE              * same site still ?
          GOTO      WMFE8000 IF NOT EQUAL        * no - ignore field
.
          MATCH     OMACLIN,OCACLIN              * same clinic still ?
          GOTO      WMFE8000 IF NOT EQUAL        * no - ignore field
.
          MOVE      OMACLIN,FIELDSTR             * load clinic code
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,MFE004
          ENDSET    MFE004
          APPEND    CARET,MFE004
.0854837
          MATCH     "1",PTCNOCDZ
          GOTO      WMFE2000 IF EQUAL            * always use clinic description
.
          MATCH     SP6,OCADOCT                  * doctor seen blank ?
          IF        @EQUAL
WMFE2000    MOVE      OCADESC,FIELDSTR           * clinic description
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,MFE004
            APPEND    CARET,MFE004
            APPEND    "webPAS",MFE004
            RESET     MFE004
            GOTO      WMFE8000
          ELSE
            MOVE      OCADOCT,KEY6
            CALL      RDDOCT1
            IF        OVRCD = 0
              MOVE      DTITL,PACTITLE
              MOVE      DGNAME,PACGNAME
              MOVE      DSNAME,PACSNAME
              MOVE      ONE,PACFRMT
              CALL      PACNAME
              STRIP     PACFNAME
              MOVE      PACFNAME,FIELDSTR        * doctor formatted name
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,MFE004
            ENDIF
            APPEND    CARET,MFE004
          ENDIF
          APPEND    "webPAS",MFE004
          RESET     MFE004
          GOTO      WMFE8000
.
WMFE3000  MATCH     "ZCT",MFIMTYPE
          GOTO      WMFE5000 IF NOT EQUAL
.
.         Set up clinic type code/description as primary key value
.
          MOVE      OCTCTYP,FIELDSTR             * clinic type
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,MFE004
          ENDSET    MFE004
          APPEND    CARET,MFE004
          MOVE      OCTDESC,FIELDSTR             * clinic type desc
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,MFE004
          APPEND    CARET,MFE004
          APPEND    "webPAS",MFE004
          RESET     MFE004
          GOTO      WMFE8000
.
WMFE5000  MATCH     "PRA",MFIMTYPE
          GOTO      WMFE8000 IF NOT EQUAL
.
.         Set up practitioner code as primary key value (where MFIMTYPE=PRA)
.
          MOVE      PMHCSNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PACSNAME
.
          MOVE      PMHCGNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PACGNAME
.
          MOVE      PMHCTITL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PACTITLE
.
          MOVE      ONE,PACFRMT
          CALL      PACNAME
          STRIP     PACFNAME
.
          MOVE      PMHCHCPC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,MFE004
          ENDSET    MFE004
          APPEND    CARET,MFE004
          APPEND    PACFNAME,MFE004
          APPEND    CARET,MFE004
          APPEND    "webPAS",MFE004
          RESET     MFE004
.
.         Primary key type (Coded Entry)
.
WMFE8000  MOVE       "CE",MFE005
.
          PACK      SEGSTRNG,ANSM,ANSF,ANSE,PIPE:
                             MFE001,PIPE,MFE002,PIPE,MFE003,PIPE,MFE004,PIPE:
                             MFE005,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WMFE9100:               * connection lost
                         WMFE9200                * timeout
.
WMFE9000  MOVE      ZERO,EXIT
          GOTO      WMFE9999
.
WMFE9100  MOVE      ONE,EXIT
          GOTO      WMFE9999
.
WMFE9200  MOVE      TWO,EXIT
.
WMFE9999  RETURN
+
.*****************************************************************************
.*                           WSTF0000              Called by: M02P0000       *
.*                  Write Staff segment                                      *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WSTF0000  MOVE      "STF",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [STF] segment",*R,*N;
          ENDIF
.
.         Clear the PRA fields here as well as the STF fields as PRA-02 may
.         be populated in GPRA0000
.
          CALL      CLPRA000                     * clear all PRA fields
          CALL      CLSTF000                     * clear all STF fields
.
          MOVE      MFE004,STF001                * set primary key value
.
          MATCH     "1",PTCNISTF                 * sending HPI-I ? 0939978
          GOTO      WSTF2000 IF NOT EQUAL
.
WSTF1000  ENDSET    STF001
          APPEND    CARET,STF001
          MATCH     SP70,PMHCNHTA
          IF        @EQUAL
            APPEND    BLANKSTR,STF001
          ELSE
            MOVE      PMHCNHTA,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF001
          ENDIF
          APPEND    CARET,STF001
          APPEND    "HPI-I Number",STF001
          APPEND    CARET,STF001
          APPEND    "webPAS",STF001
          RESET     STF001
.
.         HCP National Registration Number and WAH Employee Number
.
WSTF2000  MOVE      BLANKSTR,STF002
          MATCH     SP20,PMHCMPGN
          IF        !@EQUAL
            ENDSET    STF002
            STRIP     PMHCMPGN
            MOVE      PMHCMPGN,STF002
          ELSE
          ENDIF
          MATCH     "1",PTCNESTF           * sending WAH Employee Num ? 0935314
          IF        @EQUAL 
            MATCH     SP70,PMHCAHP5
            IF        @EQUAL
              ENDSET    STF002
              APPEND    TILDA,STF002
              APPEND    BLANKSTR,STF002
            ELSE
              ENDSET    STF002
              APPEND    TILDA,STF002
              MOVE      PMHCAHP5,FIELDSTR
              CALL      SPCHR000
              STRIP     FIELDSTR
              APPEND    FIELDSTR,STF002
            ENDIF
          ENDIF
          RESET     STF002
.
.         HCP Name
.
          MOVE      PMHCSNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,STF003
          ENDSET    STF003
          APPEND    CARET,STF003
          MOVE      PMHCGNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,STF003
          APPEND    CARET,STF003
          APPEND    CARET,STF003
          APPEND    CARET,STF003
          MOVE      PMHCTITL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,STF003
          APPEND    CARET,STF003
          APPEND    CARET,STF003
          APPEND    ANSL,STF003
          RESET     STF003
.
.         HCP Staff Type
.
          MOVE      PMHCHCST,STF004
          SQUEEZE   STF004
.
.         HCP Sex
.
          MOVE      BLANKSTR,STF005
          MATCH     SP1,PMHCGNDR
          IF        !@EQUAL
            MOVE      PMHCGNDR,STF005
            IF        PTCNNHII = 1
              REP       "IURU",STF005
            ELSE
              REP       "IORO",STF005
            ENDIF
          ENDIF
          SQUEEZE   STF005
.
.         HCP Date of Birth
.
          MOVE      BLANKSTR,STF006
          MATCH     SP8,PMHCDTOB
          IF        !@EQUAL
            MOVE      PMHCDTOB,STF006
          ENDIF
.
.         HCP Active Flag
.
          MOVE      BLANKSTR,STF007
          MATCH     "0",PMHCSTTS
          IF        @EQUAL
            MOVE      "A",STF007
          ELSE
            MATCH     "1",PMHCSTTS
            IF        @EQUAL
              MOVE      "I",STF007
            ENDIF
          ENDIF
.
.         HCP Phone Numbers
.
          MOVE      "CH",STF010                  * load home phone & email
          ENDSET    STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          MATCH     SP80,PMHCHEML
          IF        @EQUAL
            APPEND    BLANKSTR,STF010
          ELSE
            MOVE      PMHCHEML,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF010
          ENDIF
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          MATCH     SP20,PMHCHTEL
          IF        @EQUAL
            APPEND    BLANKSTR,STF010
          ELSE
            MOVE      PMHCHTEL,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF010
          ENDIF
.
          APPEND    TILDA,STF010                 * load surgery phone & email
          APPEND    "CO",STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          MATCH     SP80,PMHCSEML
          IF        @EQUAL
            APPEND    BLANKSTR,STF010
          ELSE
            MOVE      PMHCSEML,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF010
          ENDIF
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          MATCH     SP20,PMHCSTEL
          IF        @EQUAL
            APPEND    BLANKSTR,STF010
          ELSE
            MOVE      PMHCSTEL,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF010
          ENDIF
.
          APPEND    TILDA,STF010                 * load fax number
          APPEND    "CF",STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          MATCH     SP20,PMHCFAXN
          IF        @EQUAL
            APPEND    BLANKSTR,STF010
          ELSE
            MOVE      PMHCFAXN,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF010
          ENDIF
.
          APPEND    TILDA,STF010                 * load mobile number
          APPEND    "CC",STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          MATCH     SP20,PMHCMOBN
          IF        @EQUAL
            APPEND    BLANKSTR,STF010
          ELSE
            MOVE      PMHCMOBN,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF010
          ENDIF
.
          APPEND    TILDA,STF010                 * load pager/beeper number
          APPEND    "CB",STF010
          APPEND    CARET,STF010
          MATCH     SP20,PMHCPAGN
          IF        @EQUAL
            APPEND    BLANKSTR,STF010
          ELSE
            MOVE      PMHCPAGN,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF010
          ENDIF
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          MATCH     SP20,PMHCPAGR
          IF        @EQUAL
            APPEND    BLANKSTR,STF010
          ELSE
            MOVE      PMHCPAGR,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF010
          ENDIF
.
.         Set HCP surgery address - we need to check if there is any HCP surgery
.         address data first
.
          MATCH     SP60,PMHCADR1                * address line 1 blank ?
          IF        @EQUAL
            MOVE      BLANKSTR,STF011            * yes
          ELSE
            MOVE      PMHCADR1,FIELDSTR          * load address line 1
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,STF011
          ENDIF
          ENDSET    STF011
          APPEND    CARET,STF011
.
          MATCH     SP60,PMHCADR2                * address line 2 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,STF011            * yes
          ELSE
            MOVE      PMHCADR2,FIELDSTR          * load address line 2
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF011
          ENDIF
          APPEND    CARET,STF011
.
          MATCH     SP60,PMHCADR3                * address line 3 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,STF011            * yes
          ELSE
            MOVE      PMHCADR3,FIELDSTR          * load address line 3
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF011
          ENDIF
          APPEND    CARET,STF011
.
          MATCH     SP60,PMHCADR4                * address line 4 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,STF011            * yes
          ELSE
            MOVE      PMHCADR4,FIELDSTR          * load address line 4
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF011
          ENDIF
          APPEND    CARET,STF011
.
          MATCH     SP8,PMHCPOST                 * postcode blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,STF011            * yes
          ELSE
            MOVE      PMHCPOST,FIELDSTR          * load postcode
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF011
          ENDIF
          APPEND    CARET,STF011
          APPEND    CARET,STF011
          APPEND    "O",STF011                   * address type=O (office)
.
.         Set HCP home address - we need to check if there is any HCP home
.         address data first
.
          APPEND    TILDA,STF011
          MATCH     SP60,PMHCHAD1                * address line 1 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,STF011            * yes
          ELSE
            MOVE      PMHCHAD1,FIELDSTR          * load address line 1
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF011
          ENDIF
          APPEND    CARET,STF011
.
          MATCH     SP60,PMHCHAD2                * address line 2 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,STF011            * yes
          ELSE
            MOVE      PMHCHAD2,FIELDSTR          * load address line 2
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF011
          ENDIF
          APPEND    CARET,STF011
.
          MATCH     SP60,PMHCHAD3                * address line 3 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,STF011            * yes
          ELSE
            MOVE      PMHCHAD3,FIELDSTR          * load address line 3
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF011
          ENDIF
          APPEND    CARET,STF011
.
          MATCH     SP60,PMHCHAD4                * address line 4 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,STF011            * yes
          ELSE
            MOVE      PMHCHAD4,FIELDSTR          * load address line 4
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF011
          ENDIF
          APPEND    CARET,STF011
.
          MATCH     SP8,PMHCHPCD                 * postcode blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,STF011            * yes
          ELSE
            MOVE      PMHCHPCD,FIELDSTR          * load postcode
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF011
          ENDIF
          APPEND    CARET,STF011
          APPEND    CARET,STF011
          APPEND    "H",STF011                   * address type=H (home)
          CALL      GPRA0000                     * get practice details
          RESET     STF010
          RESET     STF011
.
          PACK      SEGSTRNG,ANSS,ANST,ANSF,PIPE:
                             STF001,PIPE,STF002,PIPE,STF003,PIPE,STF004,PIPE:
                             STF005,PIPE,STF006,PIPE,STF007,PIPE,STF008,PIPE:
                             STF009,PIPE,STF010,PIPE,STF011,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WSTF9100:               * connection lost
                         WSTF9200                * timeout
.
WSTF9000  MOVE      ZERO,EXIT
          GOTO      WSTF9999
.
WSTF9100  MOVE      ONE,EXIT
          GOTO      WSTF9999
.
WSTF9200  MOVE      TWO,EXIT
.
WSTF9999  RETURN
+
.*****************************************************************************
.*                           WPRA0000              Called by: M02P0000       *
.*                  Write Practitioner Segment                               *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WPRA0000  MOVE      "PRA",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [PRA] segment",*R,*N;
          ENDIF
.
          MOVE      MFE004,PRA001                * set primary key value
.
.         Set Specialty
.
          MOVE      BLANKSTR,PRA005
          MATCH     SP3,PMHCSPC1
          IF        !@EQUAL
            PACK      KEY5,ANSD,ANST,PMHCSPC1
            CALL      RDCODE1
            IF        OVRCD = 0
              MOVE      TDESC,FIELDSTR           * load specialty
              CALL      SPCHR000                 * convert special characters
              MOVE      FIELDSTR,PRA005
            ENDIF
          ENDIF
          ENDSET    PRA005
          APPEND    CARET,PRA005
          APPEND    CARET,PRA005
          APPEND    CARET,PRA005
          MATCH     SP8,PMHCSPD1
          IF        @EQUAL
            APPEND    BLANKSTR,PRA005
          ELSE
            APPEND    PMHCSPD1,PRA005
          ENDIF
          APPEND    TILDA,PRA005
.
          MOVE      BLANKSTR,FIELDSTR
          MATCH     SP3,PMHCSPC2
          IF        !@EQUAL
            PACK      KEY5,ANSD,ANST,PMHCSPC2
            CALL      RDCODE1
            IF        OVRCD = 0
              MOVE      TDESC,FIELDSTR           * load specialty
              CALL      SPCHR000                 * convert special characters
            ENDIF
          ENDIF
          APPEND    FIELDSTR,PRA005
          APPEND    CARET,PRA005
          APPEND    CARET,PRA005
          APPEND    CARET,PRA005
          MATCH     SP8,PMHCSPD2
          IF        @EQUAL
            APPEND    BLANKSTR,PRA005
          ELSE
            APPEND    PMHCSPD2,PRA005
          ENDIF
          APPEND    TILDA,PRA005
.
          MOVE      BLANKSTR,FIELDSTR
          MATCH     SP3,PMHCSPC3
          IF        !@EQUAL
            PACK      KEY5,ANSD,ANST,PMHCSPC3
            CALL      RDCODE1
            IF        OVRCD = 0
              MOVE      TDESC,FIELDSTR           * load specialty
              CALL      SPCHR000                 * convert special characters
            ENDIF
          ENDIF
          APPEND    FIELDSTR,PRA005
          APPEND    CARET,PRA005
          APPEND    CARET,PRA005
          APPEND    CARET,PRA005
          MATCH     SP8,PMHCSPD3
          IF        @EQUAL
            APPEND    BLANKSTR,PRA005
          ELSE
            APPEND    PMHCSPD3,PRA005
          ENDIF
          APPEND    TILDA,PRA005
.
          MOVE      BLANKSTR,FIELDSTR
          MATCH     SP3,PMHCSPC4
          IF        !@EQUAL
            PACK      KEY5,ANSD,ANST,PMHCSPC4
            CALL      RDCODE1
            IF        OVRCD = 0
              MOVE      TDESC,FIELDSTR           * load specialty
              CALL      SPCHR000                 * convert special characters
            ENDIF
          ENDIF
          APPEND    FIELDSTR,PRA005
          APPEND    CARET,PRA005
          APPEND    CARET,PRA005
          APPEND    CARET,PRA005
          MATCH     SP8,PMHCSPD4
          IF        @EQUAL
            APPEND    BLANKSTR,PRA005
          ELSE
            APPEND    PMHCSPD4,PRA005
          ENDIF
          APPEND    TILDA,PRA005
.
          MOVE      BLANKSTR,FIELDSTR
          MATCH     SP3,PMHCSPC5
          IF        !@EQUAL
            PACK      KEY5,ANSD,ANST,PMHCSPC5
            CALL      RDCODE1
            IF        OVRCD = 0
              MOVE      TDESC,FIELDSTR           * load specialty
              CALL      SPCHR000                 * convert special characters
            ENDIF
          ENDIF
          APPEND    FIELDSTR,PRA005
          APPEND    CARET,PRA005
          APPEND    CARET,PRA005
          APPEND    CARET,PRA005
          MATCH     SP8,PMHCSPD5
          IF        @EQUAL
            APPEND    BLANKSTR,PRA005
          ELSE
            APPEND    PMHCSPD5,PRA005
          ENDIF
          RESET     PRA005
.
.         Set Practitioner ID Numbers
.
          MATCH     "1",PTCNSLPD                 * sending linked practice?
          GOTO      WPRA8000 IF EQUAL
.
          MATCH     SP10,PMHCPRV1                * blank provider 1 ?
          IF        @EQUAL
            MOVE      BLANKSTR,PRA006            * yes
          ELSE
            MOVE      PMHCPRV1,FIELDSTR          * load provider
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,PRA006
          ENDIF
          ENDSET    PRA006
          APPEND    TILDA,PRA006
.
          MATCH     SP10,PMHCPRV2                * blank provider 2 ?
          IF        @EQUAL
            APPEND    BLANKSTR,PRA006            * yes
          ELSE
            MOVE      PMHCPRV2,FIELDSTR          * load provider
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PRA006
          ENDIF
          APPEND    TILDA,PRA006
.
          MATCH     SP10,PMHCPRV3                * blank provider 3 ?
          IF        @EQUAL
            APPEND    BLANKSTR,PRA006            * yes
          ELSE
            MOVE      PMHCPRV3,FIELDSTR          * load provider
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PRA006
          ENDIF
          APPEND    TILDA,PRA006
.
          MATCH     SP10,PMHCPRV4                * blank provider 4 ?
          IF        @EQUAL
            APPEND    BLANKSTR,PRA006            * yes
          ELSE
            MOVE      PMHCPRV4,FIELDSTR          * load provider
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PRA006
          ENDIF
          APPEND    TILDA,PRA006
.
          MATCH     SP10,PMHCPRV5                * blank provider 5 ?
          IF        @EQUAL
            APPEND    BLANKSTR,PRA006            * yes
          ELSE
            MOVE      PMHCPRV5,FIELDSTR          * load provider
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PRA006
          ENDIF
          RESET     PRA006
.
WPRA8000  PACK      SEGSTRNG,ANSP,ANSR,ANSA,PIPE:
                             PRA001,PIPE,PRA002,PIPE,PRA003,PIPE,PRA004,PIPE:
                             PRA005,PIPE,PRA006,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WPRA9100:               * connection lost
                         WPRA9200                * timeout
.
WPRA9000  MOVE      ZERO,EXIT
          GOTO      WPRA9999
.
WPRA9100  MOVE      ONE,EXIT
          GOTO      WPRA9999
.
WPRA9200  MOVE      TWO,EXIT
.
WPRA9999  RETURN
+
.*****************************************************************************
.*                           WSCH0000              Called by: S12A0000       *
.*               Write Schedule Activity Information Segment  S14A0000       *
.* Returns:  EXIT  0 = Segment sent ok                        S15A0000       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WSCH0000  MOVE      "SCH",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [SCH] segment",*R,*N;
          ENDIF
.
          CALL      CLSCH000                     * clear SCH fields
.
.         Load Placer Appointment ID
.
          MOVE      OPDAUNIQ,SCH001
          SQUEEZE   SCH001
.
.         Load Event Reason
.
          IF        MESSNUMB = 29
            MOVE      "Add^webPAS",SCH006
          ELSE
            IF        MESSNUMB = 30
              MOVE      "Change^webPAS",SCH006
            ELSE
              MOVE      "Delete^webPAS",SCH006
            ENDIF
          ENDIF
.
.         Load Appointment Timing Quantity and Theatre Start Date/Time
.
          MOVE      "1^Once",SCH011
          ENDSET    SCH011
          APPEND    CARET,SCH011
          APPEND    CARET,SCH011
          APPEND    OPDADATE,SCH011
          MATCH     SP5,OPDAEXPS
          IF        !@EQUAL
            APPEND    OPDAEXPS,SCH011
            APPEND    "00",SCH011
          ENDIF
          RESET     SCH011
          REP       ": ",SCH011
          SQUEEZE   SCH011
.
.         Load Filler Contact Person
.
          MOVE      BLANKSTR,SCH016
          MATCH     SP20,PNKNAME
          IF        !@EQUAL
            MOVE      CARET,SCH016
            ENDSET    SCH016
            MOVE      PNKNAME,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,SCH016
            RESET     SCH016
            STRIP     SCH016
            ENDSET    SCH016
            APPEND    CARET,SCH016
            APPEND    CARET,SCH016
            APPEND    CARET,SCH016
            APPEND    CARET,SCH016
            APPEND    CARET,SCH016
            APPEND    CARET,SCH016
            APPEND    "webPAS",SCH016
            RESET     SCH016
          ENDIF
.
.         Load Entered By Person
.
          MOVE      BLANKSTR,SCH020              * set default to blank
          MATCH     SP10,OPDAWEBC                * user id blank ?
          IF        !@EQUAL
            MOVE      OPDAWEBC,KEY10             * no
            CALL      RDWBSE1                    * user id on file ?
            IF        OVRCD = 0
              MOVE      OPDAWEBC,SCH020          * yes
              STRIP     SCH020
              ENDSET    SCH020
              APPEND    CARET,SCH020
              APPEND    WBSENAM,SCH020
              RESET     SCH020
              STRIP     SCH020
              ENDSET    SCH020
              APPEND    CARET,SCH020
              APPEND    CARET,SCH020
              APPEND    CARET,SCH020
              APPEND    CARET,SCH020
              APPEND    CARET,SCH020
              APPEND    CARET,SCH020
              APPEND    "webPAS",SCH020
              RESET     SCH020
            ENDIF
          ENDIF
.
          PACK      SEGSTRNG,ANSS,ANSC,ANSH,PIPE:
                             SCH001,PIPE,SCH002,PIPE,SCH003,PIPE,SCH004,PIPE:
                             SCH005,PIPE,SCH006,PIPE,SCH007,PIPE,SCH008,PIPE:
                             SCH009,PIPE,SCH010,PIPE,SCH011,PIPE,SCH012,PIPE:
                             SCH013,PIPE,SCH014,PIPE,SCH015,PIPE,SCH016,PIPE:
                             SCH017,PIPE,SCH018,PIPE,SCH019,PIPE,SCH020,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WSCH9100:               * connection lost
                         WSCH9200                * timeout
.
WSCH9000  MOVE      ZERO,EXIT
          GOTO      WSCH9999
.
WSCH9100  MOVE      ONE,EXIT
          GOTO      WSCH9999
.
WSCH9200  MOVE      TWO,EXIT
.
WSCH9999  RETURN
+
.*****************************************************************************
.*                           WOBX0000              Called by: S12A0000       *
.*               Write Observation/Result Segment             S14A0000       *
.* Returns:  EXIT  0 = Segment sent ok                        S15A0000       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WOBX0000  MATCH     "1",PTCNH7AL                 * send ZAL alerts ?
          GOTO      WOBX9000 IF EQUAL            * yes - finished
.
          MOVE      "OBX",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [OBX] segment",*R,*N;
          ENDIF
.
          MOVE      ZERO,COUNTER                 * initialise OBX record counter
.
.         Get any alerts for this patient
.
          PACK      KEY16,PURNO,ANSH,ONE,SP20
          CALL      RSPTALR1                     * position on alert for pt.
WOBX0500  CALL      RKPTALR1                     * read next record
          BRANCH    OVRCD,WOBX5000               * eof - finished
.
          MATCH     PURNO,PTALURNO               * same U/R still ?
          GOTO      WOBX5000 IF NOT EQUAL        * no - finished
.
.         Only send categories H1, H2 and H3.
.
          UNPACK    PTALCATG,ANS,ANS
          MOVE      ANS,FORM1
          COMPARE   FOUR,FORM1
          GOTO      WOBX5000 IF NOT LESS
.
.         A valid alert has been found, so format the data
.
          CALL      CLOBX000                     * clear OBX fields
.
.         Load Set ID
.
          ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,OBX001               * set id
          SQUEEZE   OBX001
.
.         Load Value Type
.
          MOVE      "CE",OBX002
.
.         Load Observation Identifier
.
          MOVE      "A^^webPAS",OBX003
.
.         Load Observation Value
.
          MOVE      PTALCODE,OBX005
          STRIP     OBX005
          ENDSET    OBX005
          APPEND    CARET,OBX005
          MOVE      "Unknown code",TDESC
          PACK      KEY5,PTALCATG,PTALCODE
          CALL      RDCODE1
          APPEND    TDESC,OBX005
          RESET     OBX005
          STRIP     OBX005
          ENDSET    OBX005
          APPEND    CARET,OBX005
          APPEND    "webPAS",OBX005
          RESET     OBX005
.
.         Load Observation Result Status
.
          MOVE      ANSX,OBX011
.
.         Load Date/Time of Observation
.
          MATCH     SP8,PTALDATE
          IF        @EQUAL
            MOVE      BLANKSTR,OBX014
          ELSE
            MOVE      PTALDATE,OBX014
          ENDIF
.
          PACK      SEGSTRNG,ANSO,ANSB,ANSX,PIPE:
                             OBX001,PIPE,OBX002,PIPE,OBX003,PIPE,OBX004,PIPE:
                             OBX005,PIPE,OBX006,PIPE,OBX007,PIPE,OBX008,PIPE:
                             OBX009,PIPE,OBX010,PIPE,OBX011,PIPE,OBX012,PIPE:
                             OBX013,PIPE,OBX014,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WOBX9100:               * connection lost
                         WOBX9200                * timeout
.
          GOTO      WOBX0500                     * get next alert
.
.         Get any medical warnings for this patient
.
WOBX5000  PACK      KEY14,PURNO,SP20
          CALL      RSPTMWS1                     * position on warnings for pt.
WOBX5500  CALL      RKPTMWS1                     * read next record
          BRANCH    OVRCD,WOBX9000               * eof - finished
.
          MATCH     PURNO,PTMWURNO               * same U/R still ?
          GOTO      WOBX9000 IF NOT EQUAL        * no - finished
.
.         A valid medical warning has been found, so format the data
.
          CALL      CLOBX000                     * clear OBX fields
.
.         Load Set ID
.
          ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,OBX001               * set id
          SQUEEZE   OBX001
.
.         Load Value Type
.
          MOVE      "CE",OBX002
.
.         Load Observation Identifier
.
          MOVE      "W^^NHIMWS",OBX003
.
.         Load Observation Value
.
          MOVE      CARET,OBX005
          STRIP     OBX005
          ENDSET    OBX005
          MATCH     SP70,PTMWTEXT
          IF        @EQUAL
            APPEND    BLANKSTR,OBX005
          ELSE
            APPEND    PTMWTEXT,OBX005
          ENDIF
          RESET     OBX005
          STRIP     OBX005
          ENDSET    OBX005
          APPEND    CARET,OBX005
          APPEND    "NHIMWS",OBX005
          RESET     OBX005
.
.         Load Observation Result Status
.
          MOVE      ANSX,OBX011
.
.         Load Date/Time of Observation
.
          MATCH     SP8,PTMWDATE
          IF        @EQUAL
            MOVE      BLANKSTR,OBX014
          ELSE
            MOVE      PTMWDATE,OBX014
          ENDIF
.
          PACK      SEGSTRNG,ANSO,ANSB,ANSX,PIPE:
                             OBX001,PIPE,OBX002,PIPE,OBX003,PIPE,OBX004,PIPE:
                             OBX005,PIPE,OBX006,PIPE,OBX007,PIPE,OBX008,PIPE:
                             OBX009,PIPE,OBX010,PIPE,OBX011,PIPE,OBX012,PIPE:
                             OBX013,PIPE,OBX014,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WOBX9100:               * connection lost
                         WOBX9200                * timeout
.
          GOTO      WOBX5500                     * get next warning
.
WOBX9000  IF        COUNTER = 0 & DISPFLAG = 1
            DISPLAY   "No data for [OBX] segment",*R,*N;
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      WOBX9999
.
WOBX9100  MOVE      ONE,EXIT
          GOTO      WOBX9999
.
WOBX9200  MOVE      TWO,EXIT
.
WOBX9999  RETURN
+
.*****************************************************************************
.*                           WRGS0000              Called by: S12A0000       *
.*               Write Resource Group Segment Segment         S14A0000       *
.* Returns:  EXIT  0 = Segment sent ok                        S15A0000       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WRGS0000  MOVE      "RGS",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [RGS] segment",*R,*N;
          ENDIF
.
          CALL      CLRGS000                     * clear RGS fields
.
.         Load Set ID
.
          MOVE      ONE,RGS001
.
          MATCH     "1",OPCNAILS                 * sending session info ?
          GOTO      WRGS8000 IF NOT EQUAL        * no - send message
.
.         Load Resource Group ID
.
          MOVE      OPDACASE,RGS003
          SQUEEZE   RGS003
.
WRGS8000  MATCH     "1",OPCNAILS                 * sending session info ?
          IF        @EQUAL
            PACK      SEGSTRNG,ANSR,ANSG,ANSS,PIPE:
                             RGS001,PIPE,RGS002,PIPE,RGS003,CRETURN
          ELSE
            PACK      SEGSTRNG,ANSR,ANSG,ANSS,PIPE:
                             RGS001,CRETURN
          ENDIF
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WRGS9100:               * connection lost
                         WRGS9200                * timeout
.
WRGS9000  MOVE      ZERO,EXIT
          GOTO      WRGS9999
.
WRGS9100  MOVE      ONE,EXIT
          GOTO      WRGS9999
.
WRGS9200  MOVE      TWO,EXIT
.
WRGS9999  RETURN
+
.*****************************************************************************
.*                           WAIS0000              Called by: S12A0000       *
.*      Write Appointment Information - Service  Segment      S14A0000       *
.* Returns:  EXIT  0 = Segment sent ok                        S15A0000       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WAIS0000  MOVE      "AIS",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [AIS] segment",*R,*N;
          ENDIF
.         
          MOVE      ZERO,COUNTER                 * initialise AIS record counter
          MOVE      ZERO,FORM1                   * initialise procedure count
.         
.         Get any procedures for this theatre booking
.
WAIS0500  ADD       ONE,FORM1                    * increment procedure count
          COMPARE   FOUR,FORM1                   * any more procedures ?
          GOTO      WAIS9000 IF NOT LESS         * no - finished
.
          LOAD      DIM9,FORM1,OPDAPROV,OPDAPRV2,OPDAPRV3
          LOAD      DIM80,FORM1,OPDADES1,OPDADES2,OPDADES3
.
          MATCH     SP9,DIM9                     * blank procedure code ?    
          GOTO      WAIS1000 IF NOT EQUAL        * no - load data              
.
          MATCH     SP70,DIM80                   * blank operation description ?
          GOTO      WAIS1000 IF NOT EQUAL        * no - load data
.
          GOTO      WAIS0500
.
.         A valid procedure has been found, so format the data
.
WAIS1000  CALL      CLAIS000                     * clear AIS fields
.           
.         Load Set ID 
.
          ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,AIS001               * set id
          SQUEEZE   AIS001
.
.         Load Universal Service ID
.
          MATCH     SP9,DIM9
          IF        @EQUAL
            MOVE      BLANKSTR,AIS003
          ELSE
            MOVE      DIM9,AIS003
          ENDIF
          STRIP     AIS003
          ENDSET    AIS003
          APPEND    CARET,AIS003
          MATCH     SP70,DIM80
          IF        @EQUAL
            APPEND    BLANKSTR,AIS003
          ELSE
            MOVE      DIM80,FIELDSTR             * Task 0808394
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,AIS003
          ENDIF
          RESET     AIS003
          STRIP     AIS003
          ENDSET    AIS003
          APPEND    CARET,AIS003
          APPEND    "webPAS",AIS003
          RESET     AIS003
.
.         Start Date/Time
.
          MOVE      OPDADATE,AIS004
          MATCH     SP5,OPDAEXPS
          IF        !@EQUAL
            ENDSET    AIS004
            APPEND    OPDAEXPS,AIS004
            RESET     AIS004
            REP       ": ",AIS004
            SQUEEZE   AIS004
          ENDIF
.
          PACK      SEGSTRNG,ANSA,ANSI,ANSS,PIPE:
                             AIS001,PIPE,AIS002,PIPE,AIS003,PIPE,AIS004,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WAIS9100:               * connection lost
                         WAIS9200                * timeout
.         
          GOTO      WAIS0500                     * get next procedure
.
WAIS9000  IF        COUNTER = 0 & DISPFLAG = 1
            DISPLAY   "No data for [AIS] segment",*R,*N;
          ENDIF     
          MOVE      ZERO,EXIT
          GOTO      WAIS9999
.
WAIS9100  MOVE      ONE,EXIT
          GOTO      WAIS9999
.
WAIS9200  MOVE      TWO,EXIT
.
WAIS9999  RETURN
+
.*****************************************************************************
.*                           WAIL0000              Called by: S12A0000       *
.* Write Appointment Information - Location Resource Segment  S14A0000       *
.* Returns:  EXIT  0 = Segment sent ok                        S15A0000       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WAIL0000  MOVE      "AIL",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [AIL] segment",*R,*N;
          ENDIF
.
          CALL      CLAIL000                     * clear AIL fields
.
.         Load Set ID
.
          MOVE      ONE,AIL001
.
.         Load Location Resource ID
.
          MATCH     SP6,OPDATHET
          IF        @EQUAL
            MOVE      BLANKSTR,AIL003
          ELSE
            MOVE      OPDATHET,AIL003
            STRIP     AIL003
            ENDSET    AIL003
            APPEND    CARET,AIL003
            APPEND    CARET,AIL003
            APPEND    CARET,AIL003
            APPEND    CARET,AIL003
            APPEND    CARET,AIL003
            APPEND    CARET,AIL003
            APPEND    CARET,AIL003
            APPEND    CARET,AIL003
            MOVE      "Unknown Operating Room",OPRMDESC
            MOVE      OPDATHET,KEY6
            CALL      RDOPOPR1
            APPEND    OPRMDESC,AIL003
            RESET     AIL003
            STRIP     AIL003
          ENDIF
.
.         Load Location Type
.
          MOVE      "^Operating Room",AIL004
.
          MATCH     "1",OPCNAILS                 * sending session info ?
          GOTO      WAIL8000 IF NOT EQUAL        * no - send message
.
.         Load Start Date/Time (Session Date/Time)
.
          MOVE      OPDADATE,AIL006
          ENDSET    AIL006
          APPEND    OPDATIME,AIL006
          APPEND    "00",AIL006
          RESET     AIL006
          REP       ": ",AIL006
          SQUEEZE   AIL006
.
.         Load Duration
.
          MOVE      ZERO,AIL009
          PACK      KEY22,OPDAHOSP,OPDADATE,OPDATIME,OPDACLIN
          CALL      RDOPSES1
          BRANCH    OVRCD,WAIL7000
.
          MOVE      OPSEDURA,AIL009
          SQUEEZE   AIL009
.
.         Load Duration Units
.
WAIL7000  MOVE      "min^minutes^ISO",AIL010
.
WAIL8000  MATCH     "1",OPCNAILS                 * sending session info ?
          IF        @EQUAL
            PACK      SEGSTRNG,ANSA,ANSI,ANSL,PIPE:
                               AIL001,PIPE,AIL002,PIPE,AIL003,PIPE,AIL004:
                               PIPE,AIL005,PIPE,AIL006,PIPE,AIL007,PIPE,AIL008:
                               PIPE,AIL009,PIPE,AIL010,CRETURN
          ELSE
            PACK      SEGSTRNG,ANSA,ANSI,ANSL,PIPE:
                               AIL001,PIPE,AIL002,PIPE,AIL003,PIPE,AIL004:
                               CRETURN
          ENDIF
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WAIL9100:               * connection lost
                         WAIL9200                * timeout
.
WAIL9000  MOVE      ZERO,EXIT
          GOTO      WAIL9999
.
WAIL9100  MOVE      ONE,EXIT
          GOTO      WAIL9999
.
WAIL9200  MOVE      TWO,EXIT
.
WAIL9999  RETURN
+
.*****************************************************************************
.*                           WAIP0000              Called by: S12A0000       *
.* Write Appointment Information - Personnel Resource Segment S14A0000       *
.* Returns:  EXIT  0 = Segment sent ok                        S15A0000       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WAIP0000  MOVE      "AIP",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [AIP] segment",*R,*N;
          ENDIF
.
          CALL      CLAIP000                     * clear AIP fields
.
.         Load Set ID - Surgeon
.
          MOVE      ONE,AIP001
.
.         Load Personnel Resource ID - Surgeon
.
          MOVE      BLANKSTR,AIP003
          IF        OPCNCLSU = 0
            MOVE      OPDACLIN,KEY6
            CALL      RDOPCLI1                   * clinic found ?
            BRANCH    OVRCD,WAIP1000             * no
.
            MATCH     SP6,OPCLDOCT               * doctor code blank ?
            GOTO      WAIP1000 IF EQUAL          * yes
.
            MOVE      OPCLDOCT,KEY6
          ELSE
            MATCH     SP6,OPDACLIN
            GOTO      WAIP1000 IF EQUAL
.
            MOVE      OPDACLIN,KEY6
          ENDIF
          CALL      RDDOCT1
          BRANCH    OVRCD,WAIP1000
.
          MOVE      DCODE,AIP003
          STRIP     AIP003
          ENDSET    AIP003
          APPEND    CARET,AIP003
          APPEND    DSNAME,AIP003
          RESET     AIP003
          STRIP     AIP003
          ENDSET    AIP003
          APPEND    CARET,AIP003
          APPEND    DGNAME,AIP003
          RESET     AIP003
          STRIP     AIP003
          ENDSET    AIP003
          APPEND    CARET,AIP003
          APPEND    CARET,AIP003
          APPEND    CARET,AIP003
          APPEND    CARET,AIP003
          APPEND    CARET,AIP003
          APPEND    "webPAS",AIP003
          RESET     AIP003
.
WAIP1000  MOVE      "^Surgeon",AIP004
.
          PACK      SEGSTRNG,ANSA,ANSI,ANSP,PIPE:
                             AIP001,PIPE,AIP002,PIPE,AIP003,PIPE,AIP004,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WAIP9100:               * connection lost
                         WAIP9200                * timeout
.
.         Load Personnel Resource ID - Anaesthetist
.
          MATCH     "1",OPCNAIPS                 * sending anaesthetist info ?
          GOTO      WAIP9000 IF NOT EQUAL        * no - send segment
.
          CALL      CLAIP000                     * clear AIP fields
.
.         Load Set ID - Anaesthetist
.
          MOVE      TWO,AIP001
.
          MOVE      BLANKSTR,AIP003
          PACK      KEY22,OPDAHOSP,OPDADATE,OPDATIME,OPDACLIN
          CALL      RDOPSES1
          BRANCH    OVRCD,WAIP2000
.
          MATCH     SP6,OPSEANAE
          GOTO      WAIP2000 IF EQUAL
.
          MOVE      OPSEANAE,KEY6
          CALL      RDDOCT1
          BRANCH    OVRCD,WAIP2000
.
          MOVE      DCODE,AIP003
          STRIP     AIP003
          ENDSET    AIP003
          APPEND    CARET,AIP003
          APPEND    DSNAME,AIP003
          RESET     AIP003
          STRIP     AIP003
          ENDSET    AIP003
          APPEND    CARET,AIP003
          APPEND    DGNAME,AIP003
          RESET     AIP003
          STRIP     AIP003
          ENDSET    AIP003
          APPEND    CARET,AIP003
          APPEND    CARET,AIP003
          APPEND    CARET,AIP003
          APPEND    CARET,AIP003
          APPEND    CARET,AIP003
          APPEND    "webPAS",AIP003
          RESET     AIP003
.
WAIP2000  MOVE      "^Anaesthetist",AIP004
.
WAIP8000  PACK      SEGSTRNG,ANSA,ANSI,ANSP,PIPE:
                             AIP001,PIPE,AIP002,PIPE,AIP003,PIPE,AIP004,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WAIP9100:               * connection lost
                         WAIP9200                * timeout
.
WAIP9000  MOVE      ZERO,EXIT
          GOTO      WAIP9999
.
WAIP9100  MOVE      ONE,EXIT
          GOTO      WAIP9999
.
WAIP9200  MOVE      TWO,EXIT
.
WAIP9999  RETURN
+
.*****************************************************************************
.*                           WRF1W000                                        *
.*                  Format W/L Referral segment                              *
.*****************************************************************************
.
.         Load Referral Status (RF1.1)
.
WRF1W000  MOVE      ANSP,RF1001
          MOVE      STATDES0,STATDESC            * default to Unscheduled
.
          MOVE      DWMSTAT,FORM1
.
          LOAD      STATDESC,FORM1,STATDES0,STATDES1,STATDES1,STATDES1:
                                   STATDESE,STATDES2
          LOAD      RF1001,FORM1,ANSP,ANSA,ANSA,ANSA,ANSE,ANSR
.
          ENDSET    RF1001
          APPEND    CARET,RF1001
          APPEND    STATDESC,RF1001
          APPEND    CARET,RF1001
          APPEND    "HL70283",RF1001
          RESET     RF1001
.
          MATCH     "1",PTCNWLRS
          GOTO       WRF1W050 IF NOT EQUAL       * sending alternate W/L status?
.
          STRIP     RF1001
          MOVE      ANSU,D1
          MOVE      STATDESU,STATDSC2            * default to Unscheduled
.
          LOAD      STATDSC2,FORM1,STATDESU,STATDESS,STATDESP,STATDESA:
                                   STATDESD,STATDESR
          LOAD      D1,FORM1,ANSU,ANSS,ANSP,ANSA,ANSD,ANSR
.
          ENDSET    RF1001
          APPEND    CARET,RF1001
          APPEND    D1,RF1001
          APPEND    CARET,RF1001
          APPEND    STATDSC2,RF1001
          APPEND    CARET,RF1001
          APPEND    "webPAS",RF1001
          RESET     RF1001
.
.         Load Referral Priority (RF1.2)
.
WRF1W050  MOVE      BLANKSTR,RF1002              * default to blank
.
          MATCH     SP3,WMPTY                    * field populated ?
          GOTO      WRF1W100 IF EQUAL            * no
.
          MOVE      WMPTY,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,RF1002
          ENDSET    RF1002
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANST,ANSP,WMPTY
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,RF1002
          APPEND    FIELDSTR,RF1002
          APPEND    CARET,RF1002
          APPEND    "webPAS",RF1002
          RESET     RF1002
.
.         Load Referral Type (RF1.3)
.
WRF1W100  MOVE      BLANKSTR,RF1003              * default to blank
.
          MATCH     SP3,WMUNIT                   * field populated ?
          GOTO      WRF1W150 IF EQUAL            * no
.
          MOVE      WMUNIT,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,RF1003
          ENDSET    RF1003
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSW,ANSU,WMUNIT
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,RF1003
          APPEND    FIELDSTR,RF1003
          APPEND    CARET,RF1003
          APPEND    "webPAS",RF1003
          RESET     RF1003
.
.         Referral Disposition (RF1.4) not currently populated
.
.         Referral Category (RF1.5)
.
WRF1W150  MOVE      ANSW,RF1005                  * waiting list
.
.         Load Originating Referral Identifier (RF1.6) not currently populated
.
.         Load Effective Date (RF1.7)
.
          MOVE      BLANKSTR,RF1007
          MATCH     SP8,WMDATE1                  * blank date on list ?
          GOTO      WRF1W300 IF EQUAL            * yes
.
          MOVE      WMDATE1,RF1007               * no
.
.         Expiration Date (RF1.8) not currently populated
.
.         Process Date (RF1.9) not currently populated
.
.         Referral Reason (RF1.10) not currently populated
.
.         Load External Referral Identifier (RF1.11)
.
WRF1W300  MOVE      WTWMECNT,RF1011              * Local Booking Identifier 
          SQUEEZE   RF1011
          ENDSET    RF1011
          APPEND    CARET,RF1011
          APPEND    "webPAS",RF1011
          RESET     RF1011
.
WRF1W999  RETURN
+
.*****************************************************************************
.*                           WRF10000              Called by: I12L0000       *
.*                   Write Patient Referral Details           I13L0000       *
.* Returns:  EXIT  0 = Segment sent ok                        I14L0000       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WRF10000  MOVE      "RF1",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [RF1] segment",*R,*N;
          ENDIF
.
          CALL      CLRF1000                     * clear RF1 fields
.
          IF        MESSNUMB = 47 | MESSNUMB = 48 | MESSNUMB = 49
            CALL      WRF1W000                   * W/L message
            GOTO      WRF18000
          ENDIF
.
.         Load Referral Status (RF1.1)
.
          MOVE      ANSP,RF1001
          MOVE      STATDES0,STATDESC
.
          MOVE      ALRESTAT,FORM1
.
          LOAD      STATDESC,FORM1,STATDES1,STATDES1,STATDES1,STATDES2:
                                   STATDES2
          LOAD      RF1001,FORM1,ANSA,ANSA,ANSA,ANSR,ANSR
.
          MATCH     "1",ALCNRSCE
          IF        @EQUAL
            IF        FORM1 = 2
              MOVE      STATDESE,STATDESC
              MOVE      ANSE,RF1001
            ENDIF
          ENDIF
.
          MATCH     "1",ALCNRSII
          IF        @EQUAL
            IF        FORM1 = 3
              MOVE      STATDESI,STATDESC
              MOVE      ANSI,RF1001
            ENDIF
          ENDIF
.
          ENDSET    RF1001
          APPEND    CARET,RF1001
          APPEND    STATDESC,RF1001
          APPEND    CARET,RF1001
          APPEND    "HL70283",RF1001
          RESET     RF1001
.
.         Load Referral Priority (RF1.2)
.
          MOVE      BLANKSTR,RF1002              * set defaults to blank
          MATCH     SP3,ALREPRTY                 * blank priority field ?
          GOTO      WRF11000 IF EQUAL            * yes
.
          PACK      KEY5,ANSP,ANSR,ALREPRTY
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,WRF11000               * no
.
          TYPE      TCINDC1                      * indicator 1 numeric ?
          GOTO      WRF11000 IF NOT EQUAL
.
          MOVE      TCINDC1,FORM1
          IF        FORM1 < 1 | FORM1 > 4
            GOTO      WRF11000
          ENDIF
.
          MOVE      BLANKSTR,PRTYDESC
          LOAD      PRTYDESC,FORM1,PRTYDES1,PRTYDES2,PRTYDES3,PRTYDES3
          LOAD      RF1002,FORM1,ANSU,ANSS,ANSR,ANSR
.
          ENDSET    RF1002
          APPEND    CARET,RF1002
          APPEND    PRTYDESC,RF1002
          APPEND    CARET,RF1002
          APPEND    "99NZPriority",RF1002
          RESET     RF1002
.
.         Load Referral Type (RF1.3)
.
WRF11000  MOVE      BLANKSTR,RF1003              * set defaults to blank
          MATCH     SP3,ALRERTYP                 * blank ref. type field ?
          GOTO      WRF11500 IF EQUAL            * yes
.
          PACK      KEY5,ANSR,ANSI,ALRERTYP
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,WRF11500               * no
.
          MOVE      THCSCOD,DIM4
          SQUEEZE   DIM4
          TYPE      DIM4                         * State HDP Eq. numeric ?
          GOTO      WRF11500 IF NOT EQUAL
.
          MOVE      DIM4,FORM4
          IF        FORM4 < 1 | FORM4 > 4
            GOTO      WRF11500
          ENDIF
.
          MOVE      BLANKSTR,RTYPDESC
          LOAD      RTYPDESC,FORM4,RTYPDES1,RTYPDES2,RTYPDES3,RTYPDES4
          LOAD      RF1003,FORM4,RTYPCOD1,RTYPCOD2,RTYPCOD3,RTYPCOD4
.
          ENDSET    RF1003
          APPEND    CARET,RF1003
          APPEND    RTYPDESC,RF1003
          APPEND    CARET,RF1003
          APPEND    "HL70281",RF1003
          RESET     RF1003
.
.         Referral Disposition (RF1.4) not currently populated
.
.         Referral Category (RF1.5)
.
WRF11500  MOVE      ANSR,RF1005                  * referral
.
.         Load Originating Referral Identifier (RF1.6)
.
          MATCH     SP30,ALREORIG                * blank identifier ?
          IF        @EQUAL
            MOVE      "Not Entered",RF1006       * yes
          ELSE
            MOVE      ALREORIG,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,RF1006
          ENDIF
          ENDSET    RF1006
          APPEND    CARET,RF1006
          APPEND    "Referral ID",RF1006
          RESET     RF1006
.
.         Load Effective Date (RF1.7)
.
          MOVE      BLANKSTR,RF1007
          MATCH     SP8,ALRERDAT                 * blank referral date ?
          GOTO      WRF13000 IF EQUAL            * yes
.
          MOVE      ALRERDAT,RF1007              * no
.
.         Expiration Date (RF1.8) not currently populated
.
.         Process Date (RF1.9) not currently populated
.
.         Referral Reason (RF1.10) not currently populated
.
.         Load External Referral Identifier (RF1.11)
.
WRF13000  MOVE      VISNUMBR,RF1011
          SQUEEZE   RF1011
          ENDSET    RF1011
          APPEND    CARET,RF1011
          APPEND    "webPAS",RF1011
          RESET     RF1011
.
WRF18000  PACK      SEGSTRNG,ANSR,ANSF,ONE,PIPE:
                             RF1001,PIPE,RF1002,PIPE,RF1003,PIPE,RF1004,PIPE:
                             RF1005,PIPE,RF1006,PIPE,RF1007,PIPE,RF1008,PIPE:
                             RF1009,PIPE,RF1010,PIPE,RF1011,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WRF19100:               * connection lost
                         WRF19200                * timeout
.
WRF19000  MOVE      ZERO,EXIT
          GOTO      WRF19999
.
WRF19100  MOVE      ONE,EXIT
          GOTO      WRF19999
.
WRF19200  MOVE      TWO,EXIT
.
WRF19999  RETURN
+
.*****************************************************************************
.*                           WPRD0000            Called by: I12L0000/I12W0000*
.*                   Write Provider Details for Referrals   I13L0000/I13W0000*
.* Returns:  EXIT  0 = Segment sent ok                      I14L0000/I14W0000*
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WPRD0000  MOVE      "PRD",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [PRD] segment",*R,*N;
          ENDIF
.
          IF        MESSNUMB = 47 | MESSNUMB = 48 | MESSNUMB = 49
            CALL      WPRDW000                   * W/L message
            GOTO      WPRD9999
          ENDIF
.
.         We will send two PRD segments - one for Referring HCP and one
.         for Responsible HCP (providing the fields are not blank).
.
          MOVE      ZERO,COUNTER                 * initialise counter
WPRD0500  ADD       ONE,COUNTER                  * increment counter
.
          CALL      CLPRD000                     * clear PRD fields
          MOVE      BLANKSTR,PRD002              * set default to blank
.
          BRANCH    COUNTER,WPRD1000:            * referring HCP
                            WPRD1500:            * responsible HCP
                            WPRD9000             * finished
.
.         Load Referring HCP
.
WPRD1000  MOVE      "RP^^webPAS",PRD001          * load provider role (PRD.1)
.
          MATCH     SP10,ALRERHCP                * referring HCP blank ?
          GOTO      WPRD8000 IF EQUAL            * yes
.
          MOVE      ALRERHCP,DIM10               * no - load HCP code
          GOTO      WPRD2000
.
.         Load Responsible HCP
.
WPRD1500  MOVE      "RT^^webPAS",PRD001          * load provider role (PRD.1)
.
          MATCH     SP10,ALREHCP                 * responsible HCP blank ?
          GOTO      WPRD8000 IF EQUAL            * yes
.
          MOVE      ALREHCP,DIM10                * no - load HCP code
.
.         We have a HCP code, so get the HCP name
.
.         Load Provider Name (PRD.2)
.
WPRD2000  MOVE      DIM10,KEY10
          CALL      RDPMHCP1                     * HCP code on file ?
          BRANCH    OVRCD,WPRD0500               * no
.
          MOVE      PMHCSNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PRD002
          ENDSET    PRD002
          APPEND    CARET,PRD002
          MOVE      PMHCGNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PRD002
          APPEND    CARET,PRD002
          APPEND    CARET,PRD002
          APPEND    CARET,PRD002
          MOVE      PMHCTITL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PRD002
          RESET     PRD002
.
.         Provider Address (PRD.3) not currently populated
.
.         Provider Location (PRD.4) not currently populated
.
.         Provider Communication Information (PRD.5) not currently populated
.
.         Preferred Method of Contact (PRD.6) not currently populated
.
.         Provider Identifiers (PRD.7) not currently populated
.
.         Effective Start Date of Provider Role (PRD.8) not currently populated
.
.         Effective End Date of Provider Role (PRD.9) not currently populated
.
WPRD8000  PACK      SEGSTRNG,ANSP,ANSR,ANSD,PIPE:
                             PRD001,PIPE,PRD002,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WPRD9100:               * connection lost
                         WPRD9200                * timeout
.
          GOTO      WPRD0500                     * get next HCP
.
WPRD9000  MOVE      ZERO,EXIT
          GOTO      WPRD9999
.
WPRD9100  MOVE      ONE,EXIT
          GOTO      WPRD9999
.
WPRD9200  MOVE      TWO,EXIT
.
WPRD9999  RETURN
+
.*****************************************************************************
.*                           WPRDW000              Called by: WPRD0000       *
.*                   Write Provider Details for Waiting List                 *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WPRDW000  MOVE      ZERO,COUNTER                 * initialise counter
.
.         We will send two PRD segments - one for Consultant HCP and one
.         for Assessor HCP (providing the fields are not blank).
.
WPRDW050  ADD       ONE,COUNTER                  * increment counter
.
          CALL      CLPRD000                     * clear PRD fields
          MOVE      BLANKSTR,PRD002              * set default to blank
.
          BRANCH    COUNTER,WPRDW100:            * Consultant HCP
                            WPRDW150:            * Assessor HCP
                            WPRDW900             * finished
.
.         Load Consultant HCP
.
WPRDW100  MOVE      "CO^^webPAS",PRD001          * load provider role (PRD.1)
.
          MATCH     SP10,WMDOCTOR                * Consultant blank ?
          GOTO      WPRDW800 IF EQUAL            * yes
.
          MOVE      WMDOCTOR,DIM10               * no - load HCP code
          GOTO      WPRDW200
.
.         Load Assessor HCP
.
WPRDW150  MOVE      "AS^^webPAS",PRD001          * load provider role (PRD.1)
.
          MATCH     SP10,WTWMASSR                * Assessor blank ?
          GOTO      WPRDW800 IF EQUAL            * yes
.
          MOVE      WTWMASSR,DIM10               * no - load HCP code
.
.         We have a HCP code, so get the HCP name
.
.         Load Provider Name (PRD.2)
.
WPRDW200  MOVE      DIM10,KEY10
          CALL      RDPMHCP1                     * HCP code on file ?
          BRANCH    OVRCD,WPRDW050               * no
.
          MOVE      PMHCSNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PRD002
          ENDSET    PRD002
          APPEND    CARET,PRD002
          MOVE      PMHCGNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PRD002
          APPEND    CARET,PRD002
          APPEND    CARET,PRD002
          APPEND    CARET,PRD002
          MOVE      PMHCTITL,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PRD002
          RESET     PRD002
.
.         Provider Address (PRD.3) not currently populated
.
.         Provider Location (PRD.4) not currently populated
.
.         Provider Communication Information (PRD.5) not currently populated
.
.         Preferred Method of Contact (PRD.6) not currently populated
.
.         Provider Identifiers (PRD.7) not currently populated
.
.         Effective Start Date of Provider Role (PRD.8) not currently populated
.
.         Effective End Date of Provider Role (PRD.9) not currently populated
.
WPRDW800  PACK      SEGSTRNG,ANSP,ANSR,ANSD,PIPE:
                             PRD001,PIPE,PRD002,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WPRDW910:               * connection lost
                         WPRDW920                * timeout
.
          GOTO      WPRDW050                     * get next HCP
.
WPRDW900  MOVE      ZERO,EXIT
          GOTO      WPRDW999
.
WPRDW910  MOVE      ONE,EXIT
          GOTO      WPRDW999
.
WPRDW920  MOVE      TWO,EXIT
.
WPRDW999  RETURN
+
.*****************************************************************************
.*                           LPR10000              Called by: A03L0000       *
.*                   Write Procedure Details for Referrals    A08L0000       *
.* Returns:  Populated PR1 fields                             A13L0000       *
.*****************************************************************************
.
LPR10000  ADD       ONE,COUNTER                  * increment counter
          CALL      CLPR1000                     * clear PR1 fields
.
          MOVE      ONE,PR1001                   * load Set ID (PR1.1)
.
.         Load Procedure Coding Method (PR1.2).  This field has been
.         replaced by PR1.3, but it remains a mandatory field, so we need
.         to populate it with something, even if it has no relevance to the
.         information being sent.
.
          MOVE      ANSX,PR1002
.
.         Load Procedure Code (PR1.3)
.
          MOVE      BLANKSTR,PR1003
          MATCH     SP6,ALENSERV                 * blank service type ?
          GOTO      LPR11000 IF EQUAL            * yes
.
          PACK      KEY9,ALREDEPT,ALENSERV
          CALL      RDALSER1                     * service code on file ?
          BRANCH    OVRCD,LPR11000               * no
.
          MATCH     SP4,ALSRMHDP                 * blank HDP Equivalent ?
          GOTO      LPR11000 IF EQUAL            * yes
.
          MOVE      ALSRMHDP,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PR1003
          ENDSET    PR1003
          APPEND    CARET,PR1003
          APPEND    CARET,PR1003
          APPEND    "webPAS",PR1003
          RESET     PR1003
.
.         Procedure Description (PR1.4) not currently populated
.
.         Load Procedure Date/Time (PR1.5)
.
LPR11000  MOVE      BLANKSTR,PR1005              * set default to blank
          MATCH     SP8,ALENSDAT                 * blank service date ?
          GOTO      LPR12000 IF EQUAL            * yes
.
          MOVE      ALENSDAT,PR1005              * no
          MATCH     SP8,ALENSTIM                 * blank service time ?
          GOTO      LPR12000 IF EQUAL            * yes
.
          ENDSET    PR1005                       * no
          UNPACK    ALENSTIM,CHOUR,ANS,CMIN,ANS,CSEC
          APPEND    CHOUR,PR1005
          APPEND    CMIN,PR1005
          APPEND    CSEC,PR1005
          RESET     PR1005
          SQUEEZE   PR1005
.
.         Load Procedure Functional Type (PR1.6)
.
LPR12000  MOVE      ANSP,PR1006
.
.         Procedure Minutes (PR1.7) not currently populated
.
.         Anaesthesiologist (PR1.8) not currently populated
.
.         Anaesthesia Code (PR1.9) not currently populated
.
.         Anaesthesia Minutes (PR1.10) not currently populated
.
.         Surgeon (PR1.11) not currently populated
.
.         Procedure Practitioner (PR1.12) not currently populated
.
.         Consent Code (PR1.13) not currently populated
.
.         Procedure Priority (PR1.14) not currently populated
.
.         Associated Diagnosis Code (PR1.15) not currently populated
.
.         Procedure Code Modifier (PR1.16) not currently populated
.
LPR19999  RETURN
+
.*****************************************************************************
.*                           WPR10000              Called by: A03A0000       *
.*                  Write Procedure Information segment       A08A0000       *
.* Returns:  EXIT  0 = Segment sent ok                        A12A0000       *
.*                 1 = Connection lost                        A13A0000       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WPR10000  MOVE      "PR1",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1                 
            DISPLAY   "Formatting [PR1] segment",*R,*N;
          ENDIF
.
          MOVE      ZERO,COUNTER                 * initialise counter
.
          BRANCH    MESSNUMB,WPR12000:           * ADT Admission
                             WPR12000:           * ADT Transfer
                             WPR12000:           * ADT Discharge
                             WPR19000:           * Emerg. Discharge
                             WPR19000:           * O/P Attendance
                             WPR19000:           * Emerg. Attendance
                             WPR19000:           * O/P Booking
                             WPR12000:           * ADT Visit Update
                             WPR19000:           * O/P Visit Update
                             WPR19000:           * Emer. Visit Update
                             WPR12000:           * ADT Cancel Admission
                             WPR19000:           * O/P Unattend
                             WPR19000:           * Emer. Cancel Visit
                             WPR12000:           * ADT Cancel Transfer
                             WPR12000:           * ADT Cancel Discharge
                             WPR19000:           * Emer. Cancel Discharge
                             WPR12000:           * ADT Pre-admit
                             WPR19000:           * ADT On-leave (not used)
                             WPR19000:           * ADT Return f Leave (not used)
                             WPR19000:           * ADT Cancel P-admit (not used)
                             WPR19000:           * PMI Registration (not used)
                             WPR19000:           * PMI Update (not used)
                             WPR19000:           * PMI Merge (not used)
                             WPR19000:           * O/P Cancel Booking
                             WPR19000:           * ADT Move Visit (not used)
                             WPR19000:           * O/P Move Visit (not used)
                             WPR19000:           * Emerg. Move Visit (not used)
                             WPR19000:           * HCP Master File (not used)
                             WPR19000:           * add new theatre booking
                             WPR19000:           * change theatre booking
                             WPR19000:           * cancel theatre booking
                             WPR19000:           * add A/H referral
                             WPR19000:           * modify A/H referral
                             WPR19000:           * cancel A/H referral
                             WPR11000:           * add A/H encounter
                             WPR11000:           * modify A/H encounter
                             WPR11000:           * cancel A/H encounter
                             WPR11500:           * W/L booking
                             WPR11500:           * W/L booking update
                             WPR11500:           * W/L cancel booking
                             WPR19000:           * OUT Master File (not used)
                             WPR19000:           * W/L Move Visit (not used)
                             WPR11500:           * W/L transfer
                             WPR19000:           * O/P discharge
                             WPR19000:           * Cancel O/P discharge
                             WPR19000:           * A/H Move Visit (not used)
                             WPR11500:           * Add W/L entry
                             WPR11500:           * Update W/L entry
                             WPR11500:           * Remove W/L entry
                             WPR19000            * PMI UnMerge (not used)
.
WPR11000  CALL      LPR10000                     * format A/H PR1 segment
.
          PACK      SEGSTRNG,ANSP,ANSR,ONE,PIPE:                        
                             PR1001,PIPE,PR1002,PIPE,PR1003,PIPE,PR1004:
                             PIPE,PR1005,PIPE,PR1006,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WPR19100:               * connection lost
                         WPR19200                * timeout
          GOTO      WPR19000
.
.         We are processing a Wait List message.
.         Send a "delete" segment first to indicate to the receiver that
.         it needs to delete all the current records
.
WPR11500  MOVE      BLANKSTR,PR1001              * set all fields to null
          MOVE      BLANKSTR,PR1002
          MOVE      BLANKSTR,PR1003
          MOVE      BLANKSTR,PR1004
          MOVE      BLANKSTR,PR1005
          MOVE      BLANKSTR,PR1006
          MOVE      BLANKSTR,PR1007
          MOVE      BLANKSTR,PR1008
          MOVE      BLANKSTR,PR1009
          MOVE      BLANKSTR,PR1010
          MOVE      BLANKSTR,PR1011
          MOVE      BLANKSTR,PR1012
          MOVE      BLANKSTR,PR1013
          MOVE      BLANKSTR,PR1014
          MOVE      BLANKSTR,PR1015
          MOVE      BLANKSTR,PR1016
.
          PACK      SEGSTRNG,ANSP,ANSR,ONE,PIPE:
                             PR1001,PIPE,PR1002,PIPE,PR1003,PIPE,PR1004,PIPE:
                             PR1005,PIPE,PR1006,PIPE,PR1007,PIPE,PR1008,PIPE:
                             PR1009,PIPE,PR1010,PIPE,PR1011,PIPE,PR1012,PIPE:
                             PR1013,PIPE,PR1014,PIPE,PR1015,PIPE,PR1016,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WPR19100:               * connection lost
                         WPR19200                * timeout
.
          CALL      WLPR1000                     * format/send W/L PR1 segment
          BRANCH    EXIT,WPR19100:               * connection lost
                         WPR19200                * timeout
          GOTO      WPR19000
.
.         We are processing an Inpatient message.
.         Send a "delete" segment first to indicate to the receiver that
.         it needs to delete all the current records
.
WPR12000  MOVE      BLANKSTR,PR1001              * set all fields to null
          MOVE      BLANKSTR,PR1002
          MOVE      BLANKSTR,PR1003
          MOVE      BLANKSTR,PR1004
          MOVE      BLANKSTR,PR1005
          MOVE      BLANKSTR,PR1006
          MOVE      BLANKSTR,PR1007
          MOVE      BLANKSTR,PR1008
          MOVE      BLANKSTR,PR1009
          MOVE      BLANKSTR,PR1010
          MOVE      BLANKSTR,PR1011
          MOVE      BLANKSTR,PR1012
          MOVE      BLANKSTR,PR1013
          MOVE      BLANKSTR,PR1014
          MOVE      BLANKSTR,PR1015
          MOVE      BLANKSTR,PR1016
.
          PACK      SEGSTRNG,ANSP,ANSR,ONE,PIPE:
                             PR1001,PIPE,PR1002,PIPE,PR1003,PIPE,PR1004,PIPE:
                             PR1005,PIPE,PR1006,PIPE,PR1007,PIPE,PR1008,PIPE:
                             PR1009,PIPE,PR1010,PIPE,PR1011,PIPE,PR1012,PIPE:
                             PR1013,PIPE,PR1014,PIPE,PR1015,PIPE,PR1016,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WPR19100:               * connection lost
                         WPR19200                * timeout
.
.         Now send all the ICD10 procedures from patecoaf for this admission
.
          MOVE      ZERO,PR1COUNT
.
          PACK      KEY13,AADMNO,SP1,ONE,SP20
          CALL      RSPTECO1                     * position on admission
WPR15000  CALL      RKPTECO1                     * read next record
          BRANCH    OVRCD,WPR16000               * eof - finished
.
          MATCH     AADMNO,PTEOADMN              * same admission still ?
          GOTO      WPR16000 IF NOT EQUAL        * no - finished
.
          COMPARE   ONE,PTEOEPNO                 * same episode still ?
          GOTO      WPR16000 IF NOT EQUAL        * no - finished
.
          CALL      CLPR1000                     * clear PR1 fields
.
          ADD       ONE,PR1COUNT
          ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,PR1001               * set id
          SQUEEZE   PR1001
          MOVE      PR1COUNT,PR1014
          SQUEEZE   PR1014
.
          MOVE      PTEOCODE,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PR1003              * set procedure code
.
          IF        ASTAT=3
            MOVE      DDATE,CODINGDT             * load discharge date
          ELSE
            MOVE      PTEODTCD,CODINGDT          * load date of coding
          ENDIF
          CALL      GTICO000                     * get ICD description/version
.
          MOVE      BLANKSTR,PR1005              * set default proc. date/time
          MATCH     SP8,PTEODATE                 * date blank ?
          GOTO      WPR15100 IF EQUAL            * yes
.
          MOVE      PTEODATE,PR1005              * no - set proc. (coding) date
          MATCH     SP5,PTEOSTTM                 * blank start time ?
          GOTO      WPR15100 IF EQUAL            * yes
.
          ENDSET    PR1005
          UNPACK    PTEOSTTM,CHOUR,ANS,CMIN
          APPEND    CHOUR,PR1005
          APPEND    CMIN,PR1005
          APPEND    "00",PR1005
          RESET     PR1005
.
WPR15100  MOVE      ANSP,PR1006                  * procedure functional type
.
          MOVE      BLANKSTR,PR1011              * set default proc. surgeon
          MATCH     SP10,PTEOCLIN                * surgeon blank ?
          GOTO      WPR15300 IF EQUAL            * yes
.
          MOVE      "Unknown HCP^^^^",FIELDSTR   * load HCP default name
          MOVE      PTEOCLIN,KEY10
          CALL      RDPMHCP1                     * doctor on file ?
          BRANCH    OVRCD,WPR15200               * no
.
          MOVE      PTEOCLIN,FIELDSTR            * load HCP code
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PR1011
          ENDSET    PR1011
          APPEND    CARET,PR1011
.
          MOVE      PMHCSNAM,FIELDSTR            * load HCP name
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PR1011
          APPEND    CARET,PR1011
.
          MOVE      PMHCGNAM,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,PR1011
          APPEND    CARET,PR1011
          APPEND    CARET,PR1011
          APPEND    CARET,PR1011
          MATCH     SP10,PMHCTITL
          IF        @EQUAL
            APPEND    BLANKSTR,PR1011
          ELSE
            MOVE      PMHCTITL,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PR1011
          ENDIF
WPR15200  APPEND    CARET,PR1011
          APPEND    CARET,PR1011
          APPEND    "webPAS",PR1011
          RESET     PR1011
.
WPR15300  PACK      SEGSTRNG,ANSP,ANSR,ONE,PIPE:
                             PR1001,PIPE,PR1002,PIPE,PR1003,PIPE,PR1004,PIPE:
                             PR1005,PIPE,PR1006,PIPE,PR1007,PIPE,PR1008,PIPE:
                             PR1009,PIPE,PR1010,PIPE,PR1011,PIPE,PR1012,PIPE:
                             PR1013,PIPE,PR1014,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WPR19100:               * connection lost
                         WPR19200                * timeout
.
          GOTO      WPR15000                     * get next procedure record
.
.         Now send any W/L procedures from watr1af for this admission
.
WPR16000  MOVE      ZERO,FORM1                   * initialise procedure count
.
          PACK      KEY19,AURNO,SP20
          CALL      RDSTREA1                     * position on admission
WPR16100  CALL      RDKTREA1                     * read next record
          BRANCH    OVRCD,WPR19000               * eof - finished
.
          MATCH     AURNO,WMURNO                 * same U/R still ?
          GOTO      WPR19000 IF NOT EQUAL        * no - finished
.
          MATCH     AADMNO,WMBOOK                * same admission ?
          GOTO      WPR16100 IF NOT EQUAL        * no - get next record
.
.         Get the wattx1af record for wttxpatm
.
          CALL      CLWATTX1
          PACK      KEY19,WMURNO,WMCODE,WMCNT
          CALL      RDWTTX11
.
WPR16200  ADD       ONE,FORM1                    * increment procedure count
          COMPARE   FORM1,THREE                  * all 3 checked ?
          GOTO      WPR19000 IF LESS             * yes - finished
.
          LOAD      DIM9,FORM1,WMCODE,WTWMPRO2,WTWMPRO3
.
          MATCH     SP9,DIM9                     * procedure code blank ?
          GOTO      WPR16200 IF EQUAL            * yes
.
          CALL      CLPR1000                     * clear PR1 fields
.
          ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,PR1001               * set id
          SQUEEZE   PR1001
.
.         Load Procedure Coding Method (PR1.2).  This field has been
.         replaced by PR1.3, but it remains a mandatory field, so we need
.         to populate it with something, even if it has no relevance to the
.         information being sent.
.
          MOVE      ANSX,PR1002
.
          MOVE      DIM9,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PR1003              * set procedure code
.
          MOVE      WMDATE3,CODINGDT             * load procedure date
          CALL      GTICOW00                     * get ICD description/version
.
.         Procedure Description (PR1.4) not currently populated
.
.         Load Procedure Date/Time (PR1.5)
.
          MOVE      BLANKSTR,PR1005              * set default value
          MATCH     SP8,WMDATE3                  * procedure date blank ?
          GOTO      WPR16300 IF EQUAL            * yes
.
          MOVE      WMDATE3,PR1005               * load procedure date
          MATCH     SP8,WTTXPATM                 * procedure time balnk ?
          GOTO      WPR16300 IF EQUAL            * yes
.
          UNPACK    WTTXPATM,CHOUR,ANS,CMIN,ANS,CSEC
          ENDSET    PR1005
          APPEND    CHOUR,PR1005
          APPEND    CMIN,PR1005
          APPEND    CSEC,PR1005
          RESET     PR1005
WPR16300  REP       " 0",PR1005
.
.         Load Procedure Functional Type (PR1.6)
.
          MOVE      ANSW,PR1006
.
.         Procedure Minutes (PR1.7) not currently populated
.
.         Anaesthesiologist (PR1.8) not currently populated
.
.         Anaesthesia Code (PR1.9) not currently populated
.
.         Anaesthesia Minutes (PR1.10) not currently populated
.
.         Surgeon (PR1.11) not currently populated
.
.         Procedure Practitioner (PR1.12) not currently populated
.
.         Consent Code (PR1.13) not currently populated
.
.         Procedure Priority (PR1.14) not currently populated
.
.         Associated Diagnosis Code (PR1.15) not currently populated
.
.         Procedure Code Modifier (PR1.16) not currently populated
.
          PACK      SEGSTRNG,ANSP,ANSR,ONE,PIPE:
                             PR1001,PIPE,PR1002,PIPE,PR1003,PIPE,PR1004,PIPE:
                             PR1005,PIPE,PR1006,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WPR19100:               * connection lost
                         WPR19200                * timeout
.
          GOTO      WPR16200                     * get next procedure record
.
.         Check if any data was sent for the PR1 segment
.
WPR19000  IF        COUNTER = 0 & DISPFLAG = 1
            DISPLAY   "No data for [PR1] segment",*R,*N;
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      WPR19999
.
WPR19100  MOVE      ONE,EXIT
          GOTO      WPR19999
.
WPR19200  MOVE      TWO,EXIT
.
WPR19999  RETURN
+
.*****************************************************************************
.*                           WLPR1000              Called by: WPR10000       *
.*                   Load Procedure Details for W/L                          *
.*****************************************************************************
.
WLPR1000  MATCH     SP70,WMCODE                  * blank procedure ?
          GOTO      WLPR1900 IF EQUAL
.
.         Load Procedure Code (PR1.3)
.
          MOVE      BLANKSTR,PR1003
          MOVE      ZERO,FORM1                   * initialise counter
.
WLPR1300  ADD       ONE,FORM1                    * increment counter
          COMPARE   FORM1,THREE                  * all 3 checked ?
          GOTO      WLPR1900 IF LESS             * yes - finished
.         
          LOAD      DIM9,FORM1,WMCODE,WTWMPRO2,WTWMPRO3
.         
          MATCH     SP9,DIM9                     * procedure code blank ?
          GOTO      WLPR1300 IF EQUAL            * yes
.
.         The procedure code field is populated, so load the data
.
          CALL      CLPR1000                     * clear PR1 fields
.
          ADD       ONE,COUNTER                  * increment counter
          MOVE      COUNTER,PR1001               * load Set ID (PR1.1)
          SQUEEZE   PR1001
.
.         Load Procedure Coding Method (PR1.2).  This field has been
.         replaced by PR1.3, but it remains a mandatory field, so we need
.         to populate it with something, even if it has no relevance to the
.         information being sent.
.
          MOVE      ANSX,PR1002
.
          MOVE      DIM9,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,PR1003              * set procedure code
.
          MOVE      WMDATE3,CODINGDT             * load procedure date
          CALL      GTICOW00                     * get ICD description/version
.
.         Load Procedure Description (PR1.4) for primary procedure only
.
          COMPARE   ONE,FORM1                    * primary procedure ?
          GOTO      WLPR1350 IF NOT EQUAL        * no
.
          MOVE      BLANKSTR,PR1004              * set default value
          IF        PTCNHDPS = 1
            MATCH     SP70,WMDESC
            IF        !@EQUAL
              MOVE      WMDESC,FIELDSTR
              CALL      SPCHR000
              MOVE      FIELDSTR,PR1004          * load description (NZ)
            ENDIF
            GOTO      WLPR1350
          ENDIF
.
          MATCH     SP70,WTWMPDSC
          IF        !@EQUAL
            MOVE      WTWMPDSC,PR1004            * load description (not NZ)
          ENDIF
          STRIP     PR1004
.
.         Load Procedure Date/Time (PR1.5)
.
WLPR1350  MOVE      BLANKSTR,PR1005              * set default
          MATCH     SP8,WMDATE3                  * blank procedure date ?
          IF        @EQUAL
            MOVE      WMBOOK,KEY8
            CALL      RDBKREC1                   * check for booking
            BRANCH    OVRCD,WLPR1400
            MATCH     SP8,BKREEDAT
            GOTO      WLPR1400 IF EQUAL
            MOVE      BKREEDAT,PR1005            * use Expected due date
            MATCH     SP8,BKREATIM               * blank Expected assess time?
            GOTO      WLPR1400 IF EQUAL
            UNPACK    BKREATIM,CHOUR,ANS,CMIN,ANS,CSEC
            GOTO      WLPR1370
          ELSE
            MOVE      WMDATE3,PR1005             * use Scheduled Adm Date
            MATCH     SP8,WTTXPATM               * blank Proposed Adm Time?
            GOTO      WLPR1400 IF EQUAL
            UNPACK    WTTXPATM,CHOUR,ANS,CMIN,ANS,CSEC
          ENDIF
WLPR1370  ENDSET    PR1005
          APPEND    CHOUR,PR1005
          APPEND    CMIN,PR1005
          APPEND    CSEC,PR1005
          RESET     PR1005
WLPR1400  REP       " 0",PR1005
.
.         Load Procedure Functional Type (PR1.6)
.
          MOVE      ANSW,PR1006
.
.         Procedure Minutes (PR1.7)
.
          MOVE      WMTIME,PR1007
          SQUEEZE   PR1007
.
.         Anaesthesiologist (PR1.8) not currently populated
.
.         Anaesthesia Code (PR1.9) not currently populated
.
.         Anaesthesia Minutes (PR1.10) not currently populated
.
.         Surgeon (PR1.11) not currently populated
.
.         Procedure Practitioner (PR1.12) not currently populated
.
.         Consent Code (PR1.13) not currently populated
.
.         Procedure Priority (PR1.14)
.
          MOVE      WTWMRANK,PR1014
          SQUEEZE   PR1014
.
.         Associated Diagnosis Code (PR1.15) not currently populated
.
.         Procedure Code Modifier (PR1.16) not currently populated
.
          PACK      SEGSTRNG,ANSP,ANSR,ONE,PIPE:
                         PR1001,PIPE,PR1002,PIPE,PR1003,PIPE,PR1004,PIPE:
                         PR1005,PIPE,PR1006,PIPE,PR1007,PIPE,PR1008,PIPE:
                         PR1009,PIPE,PR1010,PIPE,PR1011,PIPE,PR1012,PIPE:
                         PR1013,PIPE,PR1014,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WLPR1910:               * connection lost
                         WLPR1920                * timeout
.
          GOTO      WLPR1300                     * get next procedure
.
WLPR1900  MOVE      ZERO,EXIT
          GOTO      WLPR1999
.
WLPR1910  MOVE      ONE,EXIT
          GOTO      WLPR1999
.
WLPR1920  MOVE      TWO,EXIT
.
WLPR1999  RETURN
+
.*****************************************************************************
.*                         CONN0000                Called by: RCIS0000       *
.*                     Connect to socket                                     *
.* Returns:  EXIT  0 = connected ok                                          *
.*                 1 = cannot connect                                        *
.*****************************************************************************
.
CONN0000  CALL      LOGO0000                     * open log file
.
          MATCH     "2",IBCNUCIS
          IF        @EQUAL
            MOVE      FOUR,MLOGFLAG
            MOVE      "Creating messages for edi only",ERORTEXT
            CALL      LOGM0000                     * log message if required
            GOTO      CONN9000                   * using EDI only
          ENDIF
.
          IF        DISPFLAG = 1
            DISPLAY   "Connecting to socket....",*R,*N;
          ENDIF
.
          MOVE      FOUR,MLOGFLAG
          MOVE      "Connecting to ",ERORTEXT
          ENDSET    ERORTEXT
          APPEND    TCPIPORT,ERORTEXT
          RESET     ERORTEXT
          CALL      LOGM0000                     * log message if required
.           
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO               * set TRAP for I*M
          OPEN      COMSOCKT,TCPIPORT,KEEPALIV   * open socket
          TRAPCLR   IO                           * clear trap
          BRANCH    OVRCD,CONN9100               * error occured
.
          MOVE      TWO,MLOGFLAG
          MOVE      "Connected to socket",ERORTEXT
          CALL      LOGM0000                     * log message if required
.
          IF        DISPFLAG = 1
            DISPLAY   "Connected on port: ",TCPIPORT,*R,*N;
            DISPLAY   "Waiting for next message....",*R,*N;
          ENDIF
.
CONN9000  MOVE      ZERO,CONNFLAG                * set flag to send email
          MOVE      ZERO,EDIMFLAG
          MOVE      ZERO,EXIT
          GOTO      CONN9999
.
CONN9100  IF        DISPFLAG = 1
            DISPLAY   "Failed to connect on port: ",TCPIPORT,*R,*N,*WRETRYINT;
          ELSE
            DISPLAY   *P2:23,*B,"Failed to connect on port: ",TCPIPORT:
                      *WRETRYINT,*P2:23,SP30,SP30,SP10,SP5;
            VLINE     *G39,39,23,23
          ENDIF
          MOVE      "Failed_to_connect_to_",ERRMESSG
.
          MOVE      TWO,MLOGFLAG
          MOVE      "Failed to connect to socket",ERORTEXT
          CALL      LOGM0000                     * log message if required
.
          MOVE      ONE,EXIT
.
CONN9999  RETURN
+
.*****************************************************************************
.*                          LOGO0000               Called by: CONN0000       *
.*                                                            LOGM0000       *
.*        Load the log filename with the path and current date and then      *
.*        OPEN or PREP the file.                                             *
.* Requires: CDDRCTRY - cd directory path from DPATH in RUN script           *
.* Returns: SAVEDATE - saved log filename date                               *
.*****************************************************************************
.
LOGO0000  CALL      IBACLOCK
.
          PACK      SAVEDATE,CCC,CYY,CMM,CDD
          REP       " 0",SAVEDATE
.
          MOVE      SP100,FULLPATH
          CLEAR     FULLPATH
          APPEND    CDDRCTRY,FULLPATH
          APPEND    SAVEDATE,FULLPATH
          APPEND    ".brd",FULLPATH
          RESET     FULLPATH
.
.         Open the file and if it doesn't exist, then PREP it.
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEXTFILE,FULLPATH            * open text file
          TRAPCLR   IO
          IF        OVRCD = 1
            PREP      TEXTFILE,FULLPATH          * create & open text file
          ENDIF
.
LOGO9999  RETURN
+
.*****************************************************************************
.*                          EDIO0000 - Open EDI file if required             *
.*                                                                           *
.*        Load the log filename with the path and current date and then      *
.*        OPEN or PREP the file.                                             *
.* Requires: CDDRCTRY - cd directory path from DPATH in RUN script           *
.* Returns: SAVEDATE - saved log filename date                               *
.*****************************************************************************
.
EDIO0000  CALL      IBACLOCK
.
          CALL      EPIS0000                * check episoft validation
          BRANCH    EPISFLAG,EDIO9999       * don't create edi file

          MOVE      SP100,FULLPATH
          CLEAR     FULLPATH
          APPEND    CDDRCTRY,FULLPATH
          APPEND    H7CIMESI,FULLPATH
.davvy    APPEND    ".edi",FULLPATH
          APPEND    ".txt",FULLPATH
          RESET     FULLPATH
          SQUEEZE   FULLPATH
.
.           Open the file and if it doesn't exist, then PREP it.
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      SEDIFILE,FULLPATH            * open text file
          TRAPCLR   IO
          IF        OVRCD = 1
            PREP      SEDIFILE,FULLPATH          * create & open text file
          ENDIF
.
          MOVE      FULLPATH,SAVEPATH            * save filename
.
EDIO9999  RETURN
+
.
.*****************************************************************************
.*                           MVFL0000                                        *
.*               move the message file to the edi outbound directory         *
.*****************************************************************************
.
MVFL0000  BRANCH    EPISFLAG,MVFL9999            * edi not valid for episoft
.
          MOVE      TWO,MLOGFLAG
          MOVE      SP70,ERORTEXT                * blank line
          CALL      LOGM0000                     * write to log file
.
          MOVE      "mv ",CMDLINE
          ENDSET    CMDLINE
          APPEND    SAVEPATH,CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    PTCNDEDI,CMDLINE
          RESET     CMDLINE
          STRIP     CMDLINE
          ENDSET    CMDLINE
          CMATCH    "/",CMDLINE
          IF        !@EQUAL
            APPEND    "/",CMDLINE
          ENDIF
          APPEND    SAVMSH04,CMDLINE
          APPEND    "_",CMDLINE
          SQUEEZE   DH7CIMES
          APPEND    DH7CIMES,CMDLINE
          APPEND    ".txt",CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
          MATCH     "0       ",TASKID
          IF        @EQUAL
            MOVE      "Message file moved to edi directory",ERORTEXT
            MOVE      ZERO,EXIT
            GOTO      MVFL9000
          ELSE
            MOVE      "Error moving message file",ERORTEXT
            MOVE      "Error_moving_edi_file",ERRMESSG
            MOVE      ONE,EXIT
            GOTO      MVFL9000
          ENDIF
.
MVFL9000  MOVE      TWO,MLOGFLAG
          CALL      LOGM0000                     * write to log file
MVFL9999  RETURN
+
.
.*****************************************************************************
.*                          GTSTR000               Called by: RCIS0000       *
.*                                                            GSEG0000       *
.*                                                            GCHR0000       *
.*        Read the next 127 characters (or less) from the socket             *
.* Returns:   TMPSTRNG - buffer containing character string read in          *
.*            EXIT      0 = read ok                                          *
.*                      1 = timeout expired                                  *
.*                      2 = connection lost                                  *
.*****************************************************************************
.
GTSTR000  RECV      COMSOCKT,127,RPLYTIME;TMPSTRNG;  * read first 127 characters
          GOTO      GTSTR910 IF TIMEOUT          * timeout expired
          GOTO      GTSTR920 IF OVER             * connection lost
.
.         Data received - display if in debug mode
.
          IF        DISPFLAG = 1
            STRIP     TMPSTRNG
            MOVE      ZERO,POSCOUNT
            MOVELPTR  TMPSTRNG,FORM3
            DISPLAY   "Received ",FORM3," bytes:  (* = carriage return)",*R,*N;
            WHILE     FORM3 > 0
              ADD       ONE,POSCOUNT
              MATCH     CRETURN,TMPSTRNG
              IF        @EQUAL
                MOVE      ASK,ANS
              ELSE
                MOVE      TMPSTRNG,ANS
              ENDIF
              IF        POSCOUNT = 1
                DISPLAY   "[";
              ENDIF
              DISPLAY   *HON,ANS,*HOFF;
              IF        POSCOUNT = 70
                DISPLAY   "]",*R,*N;
                MOVE      ZERO,POSCOUNT
              ENDIF
              SUB       ONE,FORM3
              BUMP      TMPSTRNG
            DO
            DISPLAY     "]",*R,*N;
            RESET       TMPSTRNG
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      GTSTR999
.
GTSTR910  MOVE      ONE,EXIT                     * timeout
          GOTO      GTSTR999
.
GTSTR920  MOVE      TWO,EXIT                     * connection lost
          GOTO      GTSTR999
.
GTSTR999  RETURN
+
.*****************************************************************************
.*                                  GSEG0000       Called by: RCIS0000       *
.*                        Get the next segment code                          *
.* This routine is called when we are expecting the next segment.  It will   *
.* get the next 3 characters in the message and use this as the segment id.  *
.*                                                                           *
.* Returns: EXIT   0 = segment id read                                       *
.*                 1 = connection timed out                                  *
.*                 2 = connection lost                                       *
.*                 3 = start of block found                                  *
.*                 4 = end of block found                                    *
.*                 5 = end of segment found (CR)                             *
.*          SEGMENT = 3 character HL7 segment id (eg MSH)                    *
.*****************************************************************************
.
GSEG0000  CLEAR     SEGMENT
          MOVE      ZERO,COUNTER                 * initialise character counter
          WHILE     COUNTER < 3
            BUMP      TMPSTRNG                   * move to next character
            IF        @EOS
              CALL      GTSTR000                 * get next 127 chars (or less)
              BRANCH    EXIT,GSEG9100:           * timeout
                             GSEG9200            * connection lost
            ENDIF
            MOVE      TMPSTRNG,ANS               * save character
.
            MATCH     CRETURN,ANS                * carriage return found ?
            GOTO      GSEG9500 IF EQUAL          * yes - ignore message
.
            MATCH     ENDBLOCK,ANS               * end of block found ?
            GOTO      GSEG9400 IF EQUAL          * yes - ignore message
.
            MATCH     STRTBLOK,ANS               * start of block found ?
            GOTO      GSEG9300 IF EQUAL          * yes - ignore message
.
            APPEND    ANS,SEGMENT                * load segment id
            ADD       ONE,COUNTER                * increment counter
          DO
.
          RESET     SEGMENT
          APPEND    SEGMENT,RECVMESS             * add seg. to full message
.
          MOVE      ZERO,EXIT
          GOTO      GSEG9999
.
GSEG9100  MOVE      ONE,EXIT
          GOTO      GSEG9999
.
GSEG9200  MOVE      TWO,EXIT
          GOTO      GSEG9999
.
GSEG9300  MOVE      THREE,EXIT
          GOTO      GSEG9999
.
GSEG9400  MOVE      FOUR,EXIT
          GOTO      GSEG9999
.
GSEG9500  MOVE      FIVE,EXIT
.
GSEG9999  RETURN
+
.*****************************************************************************
.*                              VSEG0000           Called by: RCIS0000       *
.*   Validate that the segment found is relevant, and in the correct         *
.*   sequence, for the message type.                                         *
.* Requires:  SEGMENT - 3 character segment id                               *
.* Returns:   EXIT    0 = Valid segment                                      *
.*                    1 = Invalid segment                                    *
.*            SEGNUMBR - Segment number                                      *
.*                    0 = unknown segment                                    *
.*                    1 = MSH                                                *
.*                    2 = MSA                                                *
.*                    3 = ERR                                                *
.*****************************************************************************
.
VSEG0000  MATCH     "MSH",SEGMENT
          IF        @EQUAL
            MOVE      ONE,SEGNUMBR
            GOTO      VSEG9000
          ENDIF
.
          MATCH     "MSA",SEGMENT
          IF        @EQUAL
            MOVE      TWO,SEGNUMBR
            GOTO      VSEG9000
          ENDIF
.
          MATCH     "ERR",SEGMENT
          IF        @EQUAL
            MOVE      THREE,SEGNUMBR
            GOTO      VSEG9000
          ENDIF
.
          MOVE      ZERO,SEGNUMBR
          MOVE      ONE,EXIT
          GOTO      VSEG9999
.
VSEG9000  MOVE      ZERO,EXIT
.
VSEG9999  RETURN
+
.*****************************************************************************
.*                          GCHR0000               Called by: RCIS0000       *
.*                 Get the next character in the message string              *
.* Returns:  EXIT  0 = ok to continue                                        *
.*                 1 = connection timeout                                    *
.*                 2 = connection lost                                       *
.*                 3 = start of block                                        *
.*                 4 = end of block                                          *
.*                 5 = end of segment (CR)                                   *
.*                 6 = field separator blank (MSH-001 only)                  *
.*           ANS  - character just read in                                   *
.*****************************************************************************
.
GCHR0000  BUMP      TMPSTRNG                     * move to next field
          IF        @EOS
            CALL      GTSTR000                   * get next 127 chars (or less)
            BRANCH    EXIT,GCHR9100:             * timeout
                           GCHR9200              * connection lost
          ENDIF
.
          MOVE      TMPSTRNG,ANS                 * save character
.
.         If this is the first field of the MSH segment, then we need to
.         load the field separator.
.
          MATCH     "MSH",SEGMENT                * MSH segment & first field?
          IF        @EQUAL
            IF        FIELDNO = 0
              MATCH     SP1,ANS                  * yes - blank separator ?
              GOTO      GCHR9600 IF EQUAL        * yes - error
.
              ADD       ONE,FIELDNO              * increment seg. field number
              MOVE      ANS,MSH001               * no - load field separator
            ENDIF
          ENDIF
.
.         Check if this is a field separator and if so, save to the full
.         message buffer (for message display later), increment the segment
.         field number, then get the next character.
.
          MATCH     MSH001,ANS                   * field separator found ?
          IF        @EQUAL
            ADD       ONE,FIELDNO                * increment seg. field number
            APPEND    ANS,RECVMESS               * add to full message buffer
            GOTO      GCHR0000                   * get next field
          ENDIF
.
.         Check if end of segment found
.
          MATCH     CRETURN,ANS                  * carriage return found ?
          IF        @EQUAL
            APPEND    ANS,RECVMESS
            GOTO      GCHR9500
          ENDIF
.
.         Check if end of block (message) found
.
          MATCH     ENDBLOCK,ANS                 * end of block found ?
          GOTO      GCHR9400 IF EQUAL            * yes
.
.         Check if start of block found
.
          MATCH     STRTBLOK,ANS                 * start of block found ?
          GOTO      GCHR9300 IF EQUAL            * yes - ignore message
.
          MOVE      ZERO,EXIT
          GOTO      GCHR9999
.
GCHR9100  MOVE      ONE,EXIT
          GOTO      GCHR9999
.
GCHR9200  MOVE      TWO,EXIT
          GOTO      GCHR9999
.
GCHR9300  MOVE      THREE,EXIT
          GOTO      GCHR9999
.
GCHR9400  MOVE      FOUR,EXIT
          GOTO      GCHR9999
.
GCHR9500  MOVE      FIVE,EXIT
          GOTO      GCHR9999
.
GCHR9600  IF        DISPFLAG = 1
            DISPLAY   "MSH-01 - Field Separator not set",*R,*N;
          ENDIF
          MOVE      SIX,EXIT
.
GCHR9999  RETURN
+
.*****************************************************************************
.*                                 LMSH0000        Called by: RCIS0000       *
.*                          Load the MSH fields                              *
.*****************************************************************************
.
LMSH0000  BRANCH    FIELDNO,LMSH9999:            * Field Separator
                            LMSH0002:            * Encoding Characters
                            LMSH0003:            * Sending Application
                            LMSH0004:            * Sending Facility
                            LMSH0005:            * Receiving Application
                            LMSH0006:            * Receiving Facility
                            LMSH0007:            * Date/Time of Message
                            LMSH0008:            * Security
                            LMSH0009:            * Message Type
                            LMSH0010:            * Message Control ID
                            LMSH0011:            * Processing ID
                            LMSH0012:            * Version ID
                            LMSH0013:            * Sequence Number
                            LMSH0014:            * Continuation Pointer
                            LMSH0015:            * Accept Acknowledgement Type
                            LMSH0016:            * Appl. Acknowledgement Type
                            LMSH0017:            * Country Code
                            LMSH0018:            * Character Set
                            LMSH0019             * Principal Language of Message
.
.         Invalid MSH field received, so ignore it
.
          GOTO      LMSH9000
.
. Note: MSH001 is set in GCHR0000
.
.
LMSH0002  APPEND    ANS,MSH002                   * load encoding characters
          GOTO      LMSH9000
.
LMSH0003  APPEND    ANS,MSH003                   * load sending application
          GOTO      LMSH9000
.
LMSH0004  APPEND    ANS,MSH004                   * load sending facility
          GOTO      LMSH9000
.
LMSH0005  APPEND    ANS,MSH005                   * load receiving application
          GOTO      LMSH9000
.
LMSH0006  APPEND    ANS,MSH006                   * load receiving facility
          GOTO      LMSH9000
.
LMSH0007  APPEND    ANS,MSH007                   * load date/time of facility
          GOTO      LMSH9000
.
LMSH0008  APPEND    ANS,MSH008                   * load security
          GOTO      LMSH9000
.
LMSH0009  APPEND    ANS,MSH009                   * load message type
          GOTO      LMSH9000
.
LMSH0010  APPEND    ANS,MSH010                   * load control id
          GOTO      LMSH9000
.
LMSH0011  APPEND    ANS,MSH011                   * load processing id
          GOTO      LMSH9000
.
LMSH0012  APPEND    ANS,MSH012                   * load version id
          GOTO      LMSH9000
.
LMSH0013  APPEND    ANS,MSH013                   * load sequence number
          GOTO      LMSH9000
.
LMSH0014  APPEND    ANS,MSH014                   * load continuation pointer
          GOTO      LMSH9000
.
LMSH0015  APPEND    ANS,MSH015                   * load accept ackn. type
          GOTO      LMSH9000
.
LMSH0016  APPEND    ANS,MSH016                   * load applic. ackn. type
          GOTO      LMSH9000
.
LMSH0017  APPEND    ANS,MSH017                   * load country code
          GOTO      LMSH9000
.
LMSH0018  APPEND    ANS,MSH018                   * load character set
          GOTO      LMSH9000
.
LMSH0019  APPEND    ANS,MSH019                   * load princ. language of mess.
          GOTO      LMSH9000
.
LMSH9000  APPEND    ANS,RECVMESS                 * add char. to message buffer
.
LMSH9999  RETURN
+
.*****************************************************************************
.*                                 LMSA0000        Called by: RCIS0000       *
.*                          Load the MSA fields                              *
.*****************************************************************************
.
LMSA0000  BRANCH    FIELDNO,LMSA0001:            * Acknowledgement Code
                            LMSA0002:            * Message Control Id
                            LMSA0003:            * Text Message
                            LMSA0004:            * Expected Sequence Number
                            LMSA0005:            * Delayed Acknowledgement Type
                            LMSA0006             * Error Condition
.
LMSA0001  APPEND    ANS,MSA001                   * load ackn. code
          GOTO      LMSA9000
.
LMSA0002  APPEND    ANS,MSA002                   * load mess. control id
          GOTO      LMSA9000
.
LMSA0003  APPEND    ANS,MSA003                   * load text message
          GOTO      LMSA9000
.
LMSA0004  APPEND    ANS,MSA004                   * load exp. sequence no.
          GOTO      LMSA9000
.
LMSA0005  APPEND    ANS,MSA005                   * load delayed ackn. type
          GOTO      LMSA9000
.
LMSA0006  APPEND    ANS,MSA006                   * load error condition
          GOTO      LMSA9000
.
LMSA9000  APPEND    ANS,RECVMESS                 * add char. to message buffer
.
LMSA9999  RETURN
+
.*****************************************************************************
.*                                 LERR0000        Called by: RCIS0000       *
.*                          Load the ERR fields                              *
.*****************************************************************************
.
LERR0000  BRANCH    FIELDNO,LERR0001             * Error code & location
.
LERR0001  APPEND    ANS,ERR001                   * error code & location
          GOTO      LERR9000
.
LERR9000  APPEND    ANS,RECVMESS                 * add char. to message buffer
.
LERR9999  RETURN
+
.*****************************************************************************
.*                              RMSH0000           Called by: RCIS0000       *
.*                      Reset all MSH variables                              *
.*****************************************************************************
.
RMSH0000  RESET     MSH001
          RESET     MSH002
          RESET     MSH003
          RESET     MSH004
          RESET     MSH005
          RESET     MSH006
          RESET     MSH007
          RESET     MSH008
          RESET     MSH009
          RESET     MSH010
          RESET     MSH011
          RESET     MSH012
          RESET     MSH013
          RESET     MSH014
          RESET     MSH015
          RESET     MSH016
          RESET     MSH017
          RESET     MSH018
          RESET     MSH019
.
RMSH9999  RETURN
+
.*****************************************************************************
.*                              RMSA0000           Called by: RCIS0000       *
.*                      Reset all MSA variables                              *
.*****************************************************************************
.
RMSA0000  RESET     MSA001
          RESET     MSA002
          RESET     MSA003
          RESET     MSA004
          RESET     MSA005
          RESET     MSA006
.
RMSA9999  RETURN
+
.*****************************************************************************
.*                              RERR0000           Called by: RCIS0000       *
.*                      Reset all ERR variables                              *
.*****************************************************************************
.
RERR0000  RESET     ERR001
.
RERR9999  RETURN
+
.*****************************************************************************
.*                            VMSH0000             Called by: RCIS0000       *
.*      Validate that the mandatory MSH fields are not null or spaces        *
.* Returns: ERORFLAG 0 = no errors                                           *
.*                   1 = error found                                         *
.*****************************************************************************
.
.         Encoding Characters
.
VMSH0000  MOVELPTR  MSH002,FORM3                 * null ?
          IF        FORM3 = 0
            GOTO      VMSH0500                   * yes - error
          ENDIF
          MATCH     MSH002,SP100                 * no, is it blank ?
          GOTO      VMSH1000 IF NOT EQUAL        * no
.
VMSH0500  MOVE      "MSH-02 - Encoding characters not present",ERORTEXT
          MOVE      TWO,MLOGFLAG                 * set for error logging
          CALL      LOGM0000                     * write error to log file
          IF        DISPFLAG = 1
            DISPLAY   ERORTEXT,*R,*N;
          ENDIF
          MOVE      ONE,ERORFLAG
.
.         Message Type
.
VMSH1000  MOVELPTR  MSH009,FORM3                 * null ?
          IF        FORM3 = 0
            GOTO      VMSH1500                   * yes - error
          ENDIF
          MATCH     MSH009,SP100                 * no, is it blank ?
          GOTO      VMSH1500 IF EQUAL            * yes - error
.
          MOVE      SP3,MESSTYPE
          CLEAR     MESSTYPE
          UNPACK    MSH009,ANS,ANS,ANS,ANS,MESSTYPE
          MATCH     "ACK",MSH009                 * acknowledgement ?
          IF        @EQUAL
            MOVEFPTR  MESSTYPE,FORM1
            IF        FORM1 <> 0
              MATCH     SAVMTYPE,MESSTYPE        * yes - same message type ?
              GOTO      VMSH2000 IF EQUAL        * yes
            ELSE
              GOTO      VMSH2000
            ENDIF
          ENDIF
.
          MOVE      "MSH-09 - Message Type not valid",ERORTEXT
          MOVE      TWO,MLOGFLAG                 * set for error logging
          CALL      LOGM0000                     * write error to log file
          IF        DISPFLAG = 1
            DISPLAY   ERORTEXT,*R,*N;
          ENDIF
          GOTO      VMSH1600
.
VMSH1500  MOVE      "MSH-09 - Message Type not present",ERORTEXT
          MOVE      TWO,MLOGFLAG                 * set for error logging
          CALL      LOGM0000                     * write error to log file
          IF        DISPFLAG = 1
            DISPLAY   ERORTEXT,*R,*N;
          ENDIF
VMSH1600  MOVE      ONE,ERORFLAG
.
.         Message Control ID
.
VMSH2000  MOVELPTR  MSH010,FORM3                 * null ?
          IF        FORM3 = 0
            GOTO      VMSH2500                   * yes - error
          ENDIF
          MATCH     MSH010,SP100                 * no, is it blank ?
          GOTO      VMSH3000 IF NOT EQUAL        * no
.
VMSH2500  MOVE      "MSH-10 - Message Control ID not present",ERORTEXT
          MOVE      TWO,MLOGFLAG                 * set for error logging
          CALL      LOGM0000                     * write error to log file
          IF        DISPFLAG = 1
            DISPLAY   ERORTEXT,*R,*N;
          ENDIF
          MOVE      ONE,ERORFLAG
.
.         Processing Id
.
VMSH3000  MOVELPTR  MSH011,FORM3                 * null ?
          IF        FORM3 = 0
            GOTO      VMSH3500                   * yes
          ENDIF
          MATCH     MSH011,SP100                 * no, is it blank ?
          GOTO      VMSH4000 IF NOT EQUAL        * no
.
VMSH3500  MOVE      "MSH-11 - Processing ID not present",ERORTEXT
          MOVE      TWO,MLOGFLAG                 * set for error logging
          CALL      LOGM0000                     * write error to log file
          IF        DISPFLAG = 1
            DISPLAY   ERORTEXT,*R,*N;
          ENDIF
          MOVE      ONE,ERORFLAG
.
.         Version Id
.
VMSH4000  MOVELPTR  MSH012,FORM3                 * null ?
          IF        FORM3 = 0
            GOTO      VMSH4500                   * yes
          ENDIF
          MATCH     MSH012,SP100                 * no, is it blank ?
          GOTO      VMSH9999 IF NOT EQUAL        * no
.
VMSH4500  MOVE      "MSH-12 - Version ID not present",ERORTEXT
          MOVE      TWO,MLOGFLAG                 * set for error logging
          CALL      LOGM0000                     * write error to log file
          IF        DISPFLAG = 1
            DISPLAY   ERORTEXT,*R,*N;
          ENDIF
          MOVE      ONE,ERORFLAG
.
VMSH9999  RETURN
+
.*****************************************************************************
.*                            VMSA0000             Called by: RCIS0000       *
.*      Validate that the mandatory MSA fields are not null or spaces        *
.* Returns: ERORFLAG 0 = no errors                                           *
.*                   1 = error found                                         *
.*          MTCHFLAG - message id match flag                                 *
.*                   0 = match                                               *
.*                   1 = no match                                            *
.*****************************************************************************
.
.         Acknowledgement Code
.
VMSA0000  MOVELPTR  MSA001,FORM3                 * null ?
          IF        FORM3 = 0
            GOTO      VMSA0500                   * yes - error
          ENDIF
          MATCH     MSA001,SP100                 * no, is it blank ?
          GOTO      VMSA1000 IF NOT EQUAL        * no
.
VMSA0500  MOVE      "MSA-01 - Acknowledgement code not present",ERORTEXT
          MOVE      TWO,MLOGFLAG                 * set for error logging
          CALL      LOGM0000                     * write error to log file
          IF        DISPFLAG = 1
            DISPLAY   ERORTEXT,*R,*N;
          ENDIF
          MOVE      ONE,ERORFLAG
.
.         Message Control Id
.
VMSA1000  MOVELPTR  MSA002,FORM3                 * null ?
          IF        FORM3 = 0
            GOTO      VMSA1500                   * yes - error
          ENDIF
          MATCH     MSA002,SP100                 * no, is it blank ?
          GOTO      VMSA1500 IF EQUAL            * yes - error
.
          MATCH     SAVMESID,MSA002              * same returned message id ?
          GOTO      VMSA9999 IF EQUAL            * yes
.
          MOVE      "MSA-02 - Message Control ID does not match",ERORTEXT
          MOVE      TWO,MLOGFLAG                 * set for error logging
          CALL      LOGM0000                     * write error to log file
          IF        DISPFLAG = 1
            DISPLAY   ERORTEXT,*R,*N;
          ENDIF
          MOVE      ONE,MTCHFLAG                 * set message id match flag
          GOTO      VMSA1600
.
VMSA1500  MOVE      "MSA-02 - Message Control ID not present",ERORTEXT
          MOVE      TWO,MLOGFLAG                 * set for error logging
          CALL      LOGM0000                     * write error to log file
          IF        DISPFLAG = 1
            DISPLAY   ERORTEXT,*R,*N;
          ENDIF
VMSA1600  MOVE      ONE,ERORFLAG
.
VMSA9999  RETURN
+
.*****************************************************************************
.*                            VERR0000             Called by: RCIS0000       *
.*      Validate that the mandatory ERR fields are not null or spaces        *
.* Returns: ERORFLAG 0 = no errors                                           *
.*                   1 = error found                                         *
.*****************************************************************************
.
.         Error code & location
.
VERR0000  MOVELPTR  ERR001,FORM3                 * null ?
          IF        FORM3 = 0
            GOTO      VERR0500                   * yes - error
          ENDIF
          MATCH     ERR001,SP100                 * no, is it blank ?
          GOTO      VERR9999 IF NOT EQUAL        * no
.
.         If this message has be accepted (AA- Acknowledge accept), then
.         ignore validation errors (CAR 203594)
.
VERR0500  MATCH     "AA",MSA001                  * Acknowledge Accept ?
          GOTO      VERR9999 IF EQUAL            * yes - ignore ERR validation
.
          IF        DISPFLAG = 1
            DISPLAY   "ERR-01 - Error code code & location not present",*R,*N;
          ENDIF
          MOVE      ONE,ERORFLAG
.
VERR9999  RETURN
+
.*****************************************************************************
.                              USST0000            Called by: RDIN0000       *
.         Update sent stats on screen                                        *
.*****************************************************************************
.
USST0000  BRANCH    MESSNUMB,USST1000:           * A01 - admit
                             USST1100:           * A02 - transfer
                             USST1200:           * A03 - discharge (ADT)
                             USST1300:           * A03 - discharge (Emergency)
                             USST1400:           * A04 - O/P register
                             USST1500:           * A04 - Emergency register
                             USST1600:           * A05 - O/P pre-admit
                             USST1700:           * A08 - ADT update
                             USST1800:           * A08 - O/P update
                             USST1900:           * A08 - Emergency update
                             USST2000:           * A11 - cancel admit
                             USST2100:           * A11 - cancel O/P attendance
                             USST2200:           * A11 - cancel Emergency visit
                             USST2300:           * A12 - cancel transfer
                             USST2400:           * A13 - cancel I/P discharge
                             USST2500:           * A13 - cancel ED discharge
                             USST2600:           * A14 - pre-admission
                             USST2700:           * A21 - on-leave
                             USST2800:           * A22 - return from leave
                             USST2900:           * A27 - cancel pre-admission
                             USST3000:           * A28 - PMI register
                             USST3100:           * A31 - PMI update
                             USST3200:           * A34 - Merge U/R
                             USST3300:           * A38 - cancel O/P booking
                             USST3400:           * A44 - change U/R for IP visit
                             USST3500:           * A44 - change U/R for OP visit
                             USST3600:           * A44 - change U/R for ED visit
                             USST3700:           * M02 - doctor message
                             USST3800:           * S12 - new theatre booking
                             USST3900:           * S14 - modify theatre booking
                             USST4000:           * S15 - cancel theatre booking
                             USST4100:           * I12 - add A/H referral
                             USST4200:           * I13 - change A/H referral
                             USST4300:           * I14 - delete A/H referral
                             USST4400:           * A03 - add A/H encounter
                             USST4500:           * A08 - change A/H encounter
                             USST4600:           * A13 - cancel A/H encounter
                             USST4700:           * A05 - W/L booking
                             USST4800:           * A08 - W/L booking update
                             USST4900:           * A38 - W/L cancel booking
                             USST5000:           * M01 - O/P clinic master/type
                             USST5100:           * A44 - change U/R for WL
                             USST5200:           * A02 - W/L transfer
                             USST5300:           * A03 - O/P discharge
                             USST5400:           * A03 - Cancel O/P discharge
                             USST5500:           * A44 - change U/R for A/H
                             USST5600:           * I12 - Add W/L entry
                             USST5700:           * I13 - Update W/L entry
                             USST5800:           * I14 - Remove W/L entry
                             USST5900            * A37 - UnMerge U/R
.
.         GOTO      USST9999                     * invalid message type
.
USST1000  ADD       ONE,A01ASENT
          DISPLAY   *P51:9,A01ASENT;
          GOTO      USST9999
.
USST1100  ADD       ONE,A02ASENT
          DISPLAY   *P51:10,A02ASENT;
          GOTO      USST9999
.
USST1200  ADD       ONE,A03ASENT
          DISPLAY   *P51:11,A03ASENT;
          GOTO      USST9999
.
USST1300  ADD       ONE,A03ESENT
          DISPLAY   *P13:19,A03ESENT;
          GOTO      USST9999
.
USST1400  ADD       ONE,A04OSENT
          DISPLAY   *P13:12,A04OSENT;
          GOTO      USST9999
.
USST1500  ADD       ONE,A04ESENT
          DISPLAY   *P13:20,A04ESENT;
          GOTO      USST9999
.
USST1600  ADD       ONE,A05OSENT
          DISPLAY   *P13:13,A05OSENT;
          GOTO      USST9999
.
USST1700  ADD       ONE,A08ASENT
          DISPLAY   *P51:12,A08ASENT;
          GOTO      USST9999
.
USST1800  ADD       ONE,A08OSENT
          DISPLAY   *P13:14,A08OSENT;
          GOTO      USST9999
.
USST1900  ADD       ONE,A08ESENT
          DISPLAY   *P13:21,A08ESENT;
          GOTO      USST9999
.
USST2000  ADD       ONE,A11ASENT
          DISPLAY   *P51:13,A11ASENT;
          GOTO      USST9999
.
USST2100  ADD       ONE,A11OSENT
          DISPLAY   *P13:15,A11OSENT;
          GOTO      USST9999
.
USST2200  ADD       ONE,A11ESENT
          DISPLAY   *P13:22,A11ESENT;
          GOTO      USST9999
.
USST2300  ADD       ONE,A12ASENT
          DISPLAY   *P51:14,A12ASENT;
          GOTO      USST9999
.
USST2400  ADD       ONE,A13ASENT
          DISPLAY   *P51:15,A13ASENT;
          GOTO      USST9999
.
USST2500  ADD       ONE,A13ESENT
          DISPLAY   *P13:23,A13ESENT;
          GOTO      USST9999
.
USST2600  ADD       ONE,A14ASENT
          DISPLAY   *P51:16,A14ASENT;
          GOTO      USST9999
.
USST2700  ADD       ONE,A21ASENT
          DISPLAY   *P51:17,A21ASENT;
          GOTO      USST9999
.
USST2800  ADD       ONE,A22ASENT
          DISPLAY   *P51:18,A22ASENT;
          GOTO      USST9999
.
USST2900  ADD       ONE,A27ASENT
          DISPLAY   *P51:19,A27ASENT;
          GOTO      USST9999
.
USST3000  ADD       ONE,A28PSENT
          DISPLAY   *P13:8,A28PSENT;
          GOTO      USST9999
.
USST3100  ADD       ONE,A31PSENT
          DISPLAY   *P13:9,A31PSENT;
          GOTO      USST9999
.
USST3200  ADD       ONE,A34PSENT
          DISPLAY   *P13:10,A34PSENT;
          GOTO      USST9999
.
USST3300  ADD       ONE,A38OSENT
          DISPLAY   *P13:17,A38OSENT;
          GOTO      USST9999
.
USST3400  ADD       ONE,A44ASENT
          DISPLAY   *P51:20,A44ASENT;
          GOTO      USST9999
.
USST3500  ADD       ONE,A44OSENT
          DISPLAY   *P13:18,A44OSENT;
          GOTO      USST9999
.
USST3600  ADD       ONE,A44ESENT
          DISPLAY   *P51:8,A44ESENT;
          GOTO      USST9999
.
USST3700  ADD       ONE,M02PSENT
          DISPLAY   *P89:21,M02PSENT;
          GOTO      USST9999
.
USST3800  ADD       ONE,S12ASENT
          DISPLAY   *P51:21,S12ASENT;
          GOTO      USST9999
.
USST3900  ADD       ONE,S14ASENT
          DISPLAY   *P51:22,S14ASENT;
          GOTO      USST9999
.
USST4000  ADD       ONE,S15ASENT
          DISPLAY   *P51:23,S15ASENT;
          GOTO      USST9999
.
USST4100  ADD       ONE,I12RSENT
          DISPLAY   *P89:8,I12RSENT;
          GOTO      USST9999
.
USST4200  ADD       ONE,I13RSENT
          DISPLAY   *P89:9,I13RSENT;
          GOTO      USST9999
.
USST4300  ADD       ONE,I14RSENT
          DISPLAY   *P89:10,I14RSENT;
          GOTO      USST9999
.
USST4400  ADD       ONE,A03LSENT
          DISPLAY   *P89:11,A03LSENT;
          GOTO      USST9999
.
USST4500  ADD       ONE,A08LSENT
          DISPLAY   *P89:12,A08LSENT;
          GOTO      USST9999
.
USST4600  ADD       ONE,A13LSENT
          DISPLAY   *P89:13,A13LSENT;
          GOTO      USST9999
.
USST4700  ADD       ONE,A05WSENT
          DISPLAY   *P89:16,A05WSENT;
          GOTO      USST9999
.
USST4800  ADD       ONE,A08WSENT
          DISPLAY   *P89:17,A08WSENT;
          GOTO      USST9999
.
USST4900  ADD       ONE,A38WSENT
          DISPLAY   *P89:18,A38WSENT;
          GOTO      USST9999
.
USST5000  ADD       ONE,M01OSENT
          DISPLAY   *P89:20,M01OSENT;
          GOTO      USST9999
.
USST5100  ADD       ONE,A44WSENT
          DISPLAY   *P89:19,A44WSENT;
          GOTO      USST9999
.
USST5200  ADD       ONE,A02WSENT
          DISPLAY   *P89:15,A02WSENT;
          GOTO      USST9999
.
USST5300  ADD       ONE,A03OSENT
          DISPLAY   *P13:11,A03OSENT;
          GOTO      USST9999
.
USST5400  ADD       ONE,A13OSENT
          DISPLAY   *P13:16,A13OSENT;
          GOTO      USST9999
.
USST5500  ADD       ONE,A44LSENT
          DISPLAY   *P89:14,A44LSENT;
          GOTO      USST9999
.
USST5600  ADD       ONE,I12WSENT
          DISPLAY   *P89:8,I12WSENT;
          GOTO      USST9999
.
USST5700  ADD       ONE,I13WSENT
          DISPLAY   *P89:9,I13WSENT;
          GOTO      USST9999
.
USST5800  ADD       ONE,I14WSENT
          DISPLAY   *P89:10,I14WSENT;
          GOTO      USST9999
.
USST5900  ADD       ONE,A37PSENT
          DISPLAY   *P89:22,A37PSENT;
          GOTO      USST9999
.
USST9999  RETURN
+
.*****************************************************************************
.                              UFST0000            Called by: RDIN0000       *
.         Update failed stats on screen                                      *
.*****************************************************************************
.
UFST0000  BRANCH    MESSNUMB,UFST1000:           * A01 - admit
                             UFST1100:           * A02 - transfer
                             UFST1200:           * A03 - discharge (ADT)
                             UFST1300:           * A03 - discharge (Emergency)
                             UFST1400:           * A04 - O/P register
                             UFST1500:           * A04 - Emergency register
                             UFST1600:           * A05 - O/P pre-admit
                             UFST1700:           * A08 - ADT update
                             UFST1800:           * A08 - O/P update
                             UFST1900:           * A08 - Emergency update
                             UFST2000:           * A11 - cancel admit
                             UFST2100:           * A11 - cancel O/P attendance
                             UFST2200:           * A11 - cancel Emergency visit
                             UFST2300:           * A12 - cancel transfer
                             UFST2400:           * A13 - cancel I/P discharge
                             UFST2500:           * A13 - cancel ED discharge
                             UFST2600:           * A14 - pre-admission
                             UFST2700:           * A21 - on-leave
                             UFST2800:           * A22 - return from leave
                             UFST2900:           * A27 - cancel pre-admission
                             UFST3000:           * A28 - PMI register
                             UFST3100:           * A31 - PMI update
                             UFST3200:           * A34 - Merge U/R
                             UFST3300:           * A38 - cancel O/P booking
                             UFST3400:           * A44 - change U/R for IP visit
                             UFST3500:           * A44 - change U/R for OP visit
                             UFST3600:           * A44 - change U/R for ED visit
                             UFST3700:           * M02 - doctor message
                             UFST3800:           * S12 - new theatre booking
                             UFST3900:           * S14 - modify theatre booking
                             UFST4000:           * S15 - cancel theatre booking
                             UFST4100:           * I12 - add A/H referral
                             UFST4200:           * I13 - change A/H referral
                             UFST4300:           * I14 - delete A/H referral
                             UFST4400:           * A03 - add A/H encounter
                             UFST4500:           * A08 - change A/H encounter
                             UFST4600:           * A13 - cancel A/H encounter
                             UFST4700:           * A05 - W/L booking
                             UFST4800:           * A08 - W/L booking update
                             UFST4900:           * A38 - W/L cancel booking
                             UFST5000:           * M01 - O/P clinic master/type
                             UFST5100:           * A44 - change U/R for WL
                             UFST5200:           * A02 - W/L transfer
                             UFST5300:           * A03 - O/P discharge
                             UFST5400:           * A13 - Cancel O/P discharge
                             UFST5500:           * A44 - change U/R for A/H
                             UFST5600:           * I12 - Add W/L entry
                             UFST5700:           * I13 - Update W/L entry
                             UFST5800:           * I14 - Remove W/L entry
                             UFST5900            * A37 - UnMerge U/R
.
.         GOTO      UFST9999                     * invalid message type
.
UFST1000  ADD       ONE,A01AFAIL
          DISPLAY   *P60:9,A01AFAIL;
          GOTO      UFST9999
.
UFST1100  ADD       ONE,A02AFAIL
          DISPLAY   *P60:10,A02AFAIL;
          GOTO      UFST9999
.
UFST1200  ADD       ONE,A03AFAIL
          DISPLAY   *P60:11,A03AFAIL;
          GOTO      UFST9999
.
UFST1300  ADD       ONE,A03EFAIL
          DISPLAY   *P22:19,A03EFAIL;
          GOTO      UFST9999
.
UFST1400  ADD       ONE,A04OFAIL
          DISPLAY   *P22:12,A04OFAIL;
          GOTO      UFST9999
.
UFST1500  ADD       ONE,A04EFAIL
          DISPLAY   *P22:20,A04EFAIL;
          GOTO      UFST9999
.
UFST1600  ADD       ONE,A05OFAIL
          DISPLAY   *P22:13,A05OFAIL;
          GOTO      UFST9999
.
UFST1700  ADD       ONE,A08AFAIL
          DISPLAY   *P60:12,A08AFAIL;
          GOTO      UFST9999
.
UFST1800  ADD       ONE,A08OFAIL
          DISPLAY   *P22:14,A08OFAIL;
          GOTO      UFST9999
.
UFST1900  ADD       ONE,A08EFAIL
          DISPLAY   *P22:21,A08EFAIL;
          GOTO      UFST9999
.
UFST2000  ADD       ONE,A11AFAIL
          DISPLAY   *P60:13,A11AFAIL;
          GOTO      UFST9999
.
UFST2100  ADD       ONE,A11OFAIL
          DISPLAY   *P22:15,A11OFAIL;
          GOTO      UFST9999
.
UFST2200  ADD       ONE,A11EFAIL
          DISPLAY   *P22:22,A11EFAIL;
          GOTO      UFST9999
.
UFST2300  ADD       ONE,A12AFAIL
          DISPLAY   *P60:14,A12AFAIL;
          GOTO      UFST9999
.
UFST2400  ADD       ONE,A13AFAIL
          DISPLAY   *P60:15,A13AFAIL;
          GOTO      UFST9999
.
UFST2500  ADD       ONE,A13EFAIL
          DISPLAY   *P22:23,A13EFAIL;
          GOTO      UFST9999
.
UFST2600  ADD       ONE,A14AFAIL
          DISPLAY   *P60:16,A14AFAIL;
          GOTO      UFST9999
.
UFST2700  ADD       ONE,A21AFAIL
          DISPLAY   *P60:17,A21AFAIL;
          GOTO      UFST9999
.
UFST2800  ADD       ONE,A22AFAIL
          DISPLAY   *P60:18,A22AFAIL;
          GOTO      UFST9999
.
UFST2900  ADD       ONE,A27AFAIL
          DISPLAY   *P60:19,A27AFAIL;
          GOTO      UFST9999
.
UFST3000  ADD       ONE,A28PFAIL
          DISPLAY   *P22:8,A28PFAIL;
          GOTO      UFST9999
.
UFST3100  ADD       ONE,A31PFAIL
          DISPLAY   *P22:9,A31PFAIL;
          GOTO      UFST9999
.
UFST3200  ADD       ONE,A34PFAIL
          DISPLAY   *P22:10,A34PFAIL;
          GOTO      UFST9999
.
UFST3300  ADD       ONE,A38OFAIL
          DISPLAY   *P22:17,A38OFAIL;
          GOTO      UFST9999
.
UFST3400  ADD       ONE,A44AFAIL
          DISPLAY   *P60:20,A44AFAIL;
          GOTO      UFST9999
.
UFST3500  ADD       ONE,A44OFAIL
          DISPLAY   *P22:18,A44OFAIL;
          GOTO      UFST9999
.
UFST3600  ADD       ONE,A44EFAIL
          DISPLAY   *P60:8,A44EFAIL;
          GOTO      UFST9999
.
UFST3700  ADD       ONE,M02PFAIL
          DISPLAY   *P98:21,M02PFAIL;
          GOTO      UFST9999
.
UFST3800  ADD       ONE,S12AFAIL
          DISPLAY   *P60:21,S12AFAIL;
          GOTO      UFST9999
.
UFST3900  ADD       ONE,S14AFAIL
          DISPLAY   *P60:22,S14AFAIL;
          GOTO      UFST9999
.
UFST4000  ADD       ONE,S15AFAIL
          DISPLAY   *P60:23,S15AFAIL;
          GOTO      UFST9999
.
UFST4100  ADD       ONE,I12RFAIL
          DISPLAY   *P98:8,I12RFAIL;
          GOTO      UFST9999
.
UFST4200  ADD       ONE,I13RFAIL
          DISPLAY   *P98:9,I13RFAIL;
          GOTO      UFST9999
.
UFST4300  ADD       ONE,I14RFAIL
          DISPLAY   *P98:10,I14RFAIL;
          GOTO      UFST9999
.
UFST4400  ADD       ONE,A03LFAIL
          DISPLAY   *P98:11,A03LFAIL;
          GOTO      UFST9999
.
UFST4500  ADD       ONE,A08LFAIL
          DISPLAY   *P98:12,A08LFAIL;
          GOTO      UFST9999
.
UFST4600  ADD       ONE,A13LFAIL
          DISPLAY   *P98:13,A13LFAIL;
          GOTO      UFST9999
.
UFST4700  ADD       ONE,A05WFAIL
          DISPLAY   *P98:16,A05WFAIL;
          GOTO      UFST9999
.
UFST4800  ADD       ONE,A08WFAIL
          DISPLAY   *P98:17,A08WFAIL;
          GOTO      UFST9999
.
UFST4900  ADD       ONE,A38WFAIL
          DISPLAY   *P98:18,A38WFAIL;
          GOTO      UFST9999
.
UFST5000  ADD       ONE,M01OFAIL
          DISPLAY   *P98:20,M01OFAIL;
          GOTO      UFST9999
.
UFST5100  ADD       ONE,A44WFAIL
          DISPLAY   *P98:19,A44WFAIL;
          GOTO      UFST9999
.
UFST5200  ADD       ONE,A02WFAIL
          DISPLAY   *P98:15,A02WFAIL;
          GOTO      UFST9999
.
UFST5300  ADD       ONE,A03OFAIL
          DISPLAY   *P22:11,A03OFAIL;
          GOTO      UFST9999
.
UFST5400  ADD       ONE,A13OFAIL
          DISPLAY   *P22:16,A13OFAIL;
          GOTO      UFST9999
.
UFST5500  ADD       ONE,A44LFAIL
          DISPLAY   *P98:14,A44LFAIL;
          GOTO      UFST9999
.
UFST5600  ADD       ONE,I12WFAIL
          DISPLAY   *P98:8,I12WFAIL;
          GOTO      UFST9999
.
UFST5700  ADD       ONE,I13WFAIL
          DISPLAY   *P98:9,I13WFAIL;
          GOTO      UFST9999
.
UFST5800  ADD       ONE,I14WFAIL
          DISPLAY   *P98:10,I14WFAIL;
          GOTO      UFST9999
.
UFST5900  ADD       ONE,A37PFAIL
          DISPLAY   *P98:22,A37PFAIL;
          GOTO      UFST9999
.
UFST9999  RETURN
+
.*****************************************************************************
.                              URST0000            Called by: EROR0000       *
.         Update rejected stats on screen                     CKUR0000       *
.*****************************************************************************
.
URST0000  BRANCH    MESSNUMB,URST1000:           * A01 - admit
                             URST1100:           * A02 - transfer
                             URST1200:           * A03 - discharge (ADT)
                             URST1300:           * A03 - discharge (Emergency)
                             URST1400:           * A04 - O/P register
                             URST1500:           * A04 - Emergency register
                             URST1600:           * A05 - O/P pre-admit
                             URST1700:           * A08 - ADT update
                             URST1800:           * A08 - O/P update
                             URST1900:           * A08 - Emergency update
                             URST2000:           * A11 - cancel admit
                             URST2100:           * A11 - cancel O/P attendance
                             URST2200:           * A11 - cancel Emergency visit
                             URST2300:           * A12 - cancel transfer
                             URST2400:           * A13 - cancel I/P discharge
                             URST2500:           * A13 - cancel ED discharge
                             URST2600:           * A14 - pre-admission
                             URST2700:           * A21 - on-leave
                             URST2800:           * A22 - return from leave
                             URST2900:           * A27 - cancel pre-admission
                             URST3000:           * A28 - PMI register
                             URST3100:           * A31 - PMI update
                             URST3200:           * A34 - Merge U/R
                             URST3300:           * A38 - cancel O/P booking
                             URST3400:           * A44 - change U/R for IP visit
                             URST3500:           * A44 - change U/R for OP visit
                             URST3600:           * A44 - change U/R for ED visit
                             URST3700:           * M02 - Doctor messages
                             URST3800:           * S12 - new theatre booking
                             URST3900:           * S14 - modify theatre booking
                             URST4000:           * S15 - cancel theatre booking
                             URST4100:           * I12 - add A/H referral
                             URST4200:           * I13 - change A/H referral
                             URST4300:           * I14 - delete A/H referral
                             URST4400:           * A03 - add A/H encounter
                             URST4500:           * A08 - change A/H encounter
                             URST4600:           * A13 - cancel A/H encounter
                             URST4700:           * A05 - W/L booking
                             URST4800:           * A08 - W/L booking update
                             URST4900:           * A38 - W/L cancel booking
                             URST5000:           * M01 - O/P clinic master/type
                             URST5100:           * A44 - change U/R for WL
                             URST5200:           * A02 - W/L transfer
                             URST5300:           * A03 - O/P discharge
                             URST5400:           * A13 - Cancel O/P discharge
                             URST5500:           * A44 - change U/R for A/H
                             URST5600:           * I12 - Add W/L entry
                             URST5700:           * I13 - Update W/L entry
                             URST5800:           * I14 - Remove W/L entry
                             URST5900            * A37 - UnMerge U/R
.
.         GOTO      URST9999                     * invalid message type
.
URST1000  ADD       ONE,A01ARJCT
          DISPLAY   *P69:9,A01ARJCT;
          GOTO      URST9999
.
URST1100  ADD       ONE,A02ARJCT
          DISPLAY   *P69:10,A02ARJCT;
          GOTO      URST9999
.
URST1200  ADD       ONE,A03ARJCT
          DISPLAY   *P69:11,A03ARJCT;
          GOTO      URST9999
.
URST1300  ADD       ONE,A03ERJCT
          DISPLAY   *P31:19,A03ERJCT;
          GOTO      URST9999
.
URST1400  ADD       ONE,A04ORJCT
          DISPLAY   *P31:12,A04ORJCT;
          GOTO      URST9999
.
URST1500  ADD       ONE,A04ERJCT
          DISPLAY   *P31:20,A04ERJCT;
          GOTO      URST9999
.
URST1600  ADD       ONE,A05ORJCT
          DISPLAY   *P31:13,A05ORJCT;
          GOTO      URST9999
.
URST1700  ADD       ONE,A08ARJCT
          DISPLAY   *P69:12,A08ARJCT;
          GOTO      URST9999
.
URST1800  ADD       ONE,A08ORJCT
          DISPLAY   *P31:14,A08ORJCT;
          GOTO      URST9999
.
URST1900  ADD       ONE,A08ERJCT
          DISPLAY   *P31:21,A08ERJCT;
          GOTO      URST9999
.
URST2000  ADD       ONE,A11ARJCT
          DISPLAY   *P69:13,A11ARJCT;
          GOTO      URST9999
.
URST2100  ADD       ONE,A11ORJCT
          DISPLAY   *P31:15,A11ORJCT;
          GOTO      URST9999
.
URST2200  ADD       ONE,A11ERJCT
          DISPLAY   *P31:22,A11ERJCT;
          GOTO      URST9999
.
URST2300  ADD       ONE,A12ARJCT
          DISPLAY   *P69:14,A12ARJCT;
          GOTO      URST9999
.
URST2400  ADD       ONE,A13ARJCT
          DISPLAY   *P69:15,A13ARJCT;
          GOTO      URST9999
.
URST2500  ADD       ONE,A13ERJCT
          DISPLAY   *P31:23,A13ERJCT;
          GOTO      URST9999
.
URST2600  ADD       ONE,A14ARJCT
          DISPLAY   *P69:16,A14ARJCT;
          GOTO      URST9999
.
URST2700  ADD       ONE,A21ARJCT
          DISPLAY   *P69:17,A21ARJCT;
          GOTO      URST9999
.
URST2800  ADD       ONE,A22ARJCT
          DISPLAY   *P69:18,A22ARJCT;
          GOTO      URST9999
.
URST2900  ADD       ONE,A27ARJCT
          DISPLAY   *P69:19,A27ARJCT;
          GOTO      URST9999
.
URST3000  ADD       ONE,A28PRJCT
          DISPLAY   *P31:8,A28PRJCT;
          GOTO      URST9999
.
URST3100  ADD       ONE,A31PRJCT
          DISPLAY   *P31:9,A31PRJCT;
          GOTO      URST9999
.
URST3200  ADD       ONE,A34PRJCT
          DISPLAY   *P31:10,A34PRJCT;
          GOTO      URST9999
.
URST3300  ADD       ONE,A38ORJCT
          DISPLAY   *P31:17,A38ORJCT;
          GOTO      URST9999
.
URST3400  ADD       ONE,A44ARJCT
          DISPLAY   *P69:20,A44ARJCT;
          GOTO      URST9999
.
URST3500  ADD       ONE,A44ORJCT
          DISPLAY   *P31:17,A44ORJCT;
          GOTO      URST9999
.
URST3600  ADD       ONE,A44ERJCT
          DISPLAY   *P69:8,A44ERJCT;
          GOTO      URST9999
.
URST3700  ADD       ONE,M02PRJCT
          DISPLAY   *P107:21,M02PRJCT;
          GOTO      URST9999
.
URST3800  ADD       ONE,S12ARJCT
          DISPLAY   *P69:21,S12ARJCT;
          GOTO      URST9999
.
URST3900  ADD       ONE,S14ARJCT
          DISPLAY   *P69:22,S14ARJCT;
          GOTO      URST9999
.
URST4000  ADD       ONE,S15ARJCT
          DISPLAY   *P69:23,S15ARJCT;
          GOTO      URST9999
.
URST4100  ADD       ONE,I12RRJCT
          DISPLAY   *P107:8,I12RRJCT;
          GOTO      USST9999
.
URST4200  ADD       ONE,I13RRJCT
          DISPLAY   *P107:9,I13RRJCT;
          GOTO      USST9999
.
URST4300  ADD       ONE,I14RRJCT
          DISPLAY   *P107:10,I14RRJCT;
          GOTO      USST9999
.
URST4400  ADD       ONE,A03LRJCT
          DISPLAY   *P107:11,A03LRJCT;
          GOTO      USST9999
.
URST4500  ADD       ONE,A08LRJCT
          DISPLAY   *P107:12,A08LRJCT;
          GOTO      USST9999
.
URST4600  ADD       ONE,A13LRJCT
          DISPLAY   *P107:13,A13LRJCT;
          GOTO      USST9999
.
URST4700  ADD       ONE,A05WRJCT
          DISPLAY   *P107:16,A05WRJCT;
          GOTO      USST9999
.
URST4800  ADD       ONE,A08WRJCT
          DISPLAY   *P107:17,A08WRJCT;
          GOTO      USST9999
.
URST4900  ADD       ONE,A38WRJCT
          DISPLAY   *P107:18,A38WRJCT;
          GOTO      USST9999
.
URST5000  ADD       ONE,M01ORJCT
          DISPLAY   *P107:20,M01ORJCT;
          GOTO      URST9999
.
URST5100  ADD       ONE,A44WRJCT
          DISPLAY   *P107:19,A44WRJCT;
          GOTO      URST9999
.
URST5200  ADD       ONE,A02WRJCT
          DISPLAY   *P107:15,A02WRJCT;
          GOTO      URST9999
.
URST5300  ADD       ONE,A03ORJCT
          DISPLAY   *P31:11,A03ORJCT;
          GOTO      URST9999
.
URST5400  ADD       ONE,A13ORJCT
          DISPLAY   *P31:16,A13ORJCT;
          GOTO      URST9999
.
URST5500  ADD       ONE,A44LRJCT
          DISPLAY   *P107:14,A44LRJCT;
          GOTO      URST9999
.
URST5600  ADD       ONE,I12WRJCT
          DISPLAY   *P107:8,I12WRJCT;
          GOTO      URST9999
.
URST5700  ADD       ONE,I13WRJCT
          DISPLAY   *P107:9,I13WRJCT;
          GOTO      URST9999
.
URST5800  ADD       ONE,I14WRJCT
          DISPLAY   *P107:10,I14WRJCT;
          GOTO      URST9999
.
URST5900  ADD       ONE,A37PRJCT
          DISPLAY   *P107:22,A37PRJCT;
          GOTO      URST9999
.
URST9999  RETURN
+
.*****************************************************************************
.*                              GTDTTM00           Called by: WRMSH000       *
.*        Get the datetime the message is being sent                         *
.*****************************************************************************
.
GTDTTM00  OPEN      CONTROLF,"controlf"
          CALL      IBACLOCK
          UNPACK    CTIMEIS,HOURTM,ANS,MINTIME,ANS,SECTIME
          PACK      DATETIME,CCC,CYY,CMM,CDD,HOURTM,MINTIME,SECTIME
          REP       " 0",DATETIME
.
GTDTTM99  RETURN
+
.****************************************************************************
.*                             CKUR0000            Called by: RCIS0000      *
.*   Get the PMI details for the message, then check if U/R exists on       *
.*   temporary table.                                                       *
.* When a message is rejected, the U/R number is recorded in the temporary  *
.* table so that subsequent messages for that patient can be held and then  *
.* sent at a later time in sequence.                                        *
.* Returns:    EXIT  0 = Ok to continue processing message                  *
.*                   1 = hold message                                       *
.*                   2 = pmsqptaf record not found                          *
.*                   3 = zero U/R number                                    *
.*                   4 = temporary U/R number                               *
.****************************************************************************
.
CKUR0000  MOVE      H7CIMESI,KEY20
          CALL      RDPMQPT1                     * PMI details found ?
          BRANCH    OVRCD,CKUR9200               * no - don't send message
.
          MATCH     ZEROURNO,PURNO               * zero U/R #?
          GOTO      CKUR9300 IF EQUAL            * yes - don't send message
.
          MATCH     "1",PTCNRTUR
          IF        @EQUAL
            MATCH     "T-",PURNO                 * temporary U/R #?
            GOTO      CKUR9400 IF EQUAL          * yes - don't send message
            MATCH     "T-",PMQPOURN              * temporary 'old' U/R #?
            GOTO      CKUR9400 IF EQUAL          * yes - don't send message
          ENDIF
.
          MOVE      PURNO,KEY8
          CALL      RDH7URH1                     * U/R on held U/R table ?
          IF        OVRCD = 0
            MOVE      H7CIMESI,KEY20             * yes
            CALL      RDH7CIS1                   * record found on index 1 ?
            BRANCH    OVRCD,CKUR9100             * no - shouldn't happen
.
            MOVE      ANSR,H7CISTAT              * yes -set status to "Rejected"
            CALL      UPH7CIS1                   * update hl7inbaf record
.
            IF        DISPFLAG = 0
              CALL      URST0000                 * update rejected stats
            ELSE
              DISPLAY   "U/R on hold so message rejected",*R,*N;
            ENDIF
            MOVE      TWO,MLOGFLAG
            MOVE      PURNO,DIM8
            SQUEEZE   DIM8
            MOVE      "U/R ",ERORTEXT
            ENDSET    ERORTEXT
            APPEND    DIM8,ERORTEXT
            APPEND    " on hold so message rejected",ERORTEXT
            RESET     ERORTEXT
            CALL      LOGM0000               * log message if required
.
            MOVE      "Message Type: ",ERORTEXT
            ENDSET    ERORTEXT
            APPEND    H7CIMETP,ERORTEXT
            RESET     ERORTEXT
            CALL      LOGM0000               * log message if required
.
            MOVE      "Message Trigger Date/Time: ",ERORTEXT
            ENDSET    ERORTEXT
            UNPACK    H7CIDTTM,CCENT,CYEAR,CMON,CDAY,DIM8
            CALL      PACDATE
            APPEND    CPCDATE,ERORTEXT
            APPEND    SP1,ERORTEXT
            APPEND    DIM8,ERORTEXT
            RESET     ERORTEXT
            CALL      LOGM0000               * log message if required
.
            GOTO      CKUR9100
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      CKUR9999
.
CKUR9100  MOVE      ONE,EXIT
          GOTO      CKUR9999
.
CKUR9200  MOVE      TWO,EXIT
          GOTO      CKUR9999
.
CKUR9300  MOVE      THREE,EXIT
.
CKUR9400  MOVE      FOUR,EXIT
.
CKUR9999  RETURN
+
.*****************************************************************************
.*                                 ALTUSR00        Called by: EROR0000       *
.*      Alert user of PAS-CIS error by executing a script to send an email   *
.*****************************************************************************
.
ALTUSR00  MOVE      "hl7cisin.us1 ",KEY13
          PACK      CMDLINE,KEY13,PRGID,SP1,MESSAGID,SP1,ERRMESSG,SP70
          EXECUTE   CMDLINE,TASKID
.
ALTUSR99  RETURN
+
.*****************************************************************************
.*                         GTPL0000                Called by: ADPV1000       *
.*             Get the previous location                                     *
.* Returns:  EXIT  0 = previous tran record found                            *
.*                 1 = previous tran record not found                        *
.* Requires: read on current pattranf record.                                *
.*           WRDSTRNG - previous ward code.                                  *
.*           BEDSTRNG - previous bed code.                                   *
.*****************************************************************************
.
GTPL0000  MOVE      TWARD,WRDSTRNG               * initialise ward/bed strings
          MOVE      TBED,BEDSTRNG
.
.         If this is an A31 converted to Axx, then we have no pmsqviaf record,
.         so we need to check the tran records for this visit to get the
.         previous location.  If this is a standard message, then get the
.         previous location from the second pmsqviaf record (if there is one).
.
          IF        A08XFLAG = 1
            OPEN      PATTRAN2,"pattranf"
            MOVE      SAVKEY30,KEY30
            CALL      RDSTRAN2                   * position on current tran rec.
GTPL0500    CALL      RDPTRAN2                   * read previous tran record
            BRANCH    OVRCD,GTPL9100             * eof - no previous location
.
            MATCH     AADMNO,TADMN               * same admission still ?
            GOTO      GTPL9100 IF NOT EQUAL      * no - finish
          ELSE
            PACK      KEY22,H7CIMESI,SP1,TWO     * read second qvi record
            CALL      RDPMQVI1
            BRANCH    OVRCD,GTPL9100             * no - finish
          ENDIF
.
.         Previous tran record found, so check if the ward/bed has changed
.
          MATCH     WRDSTRNG,TWARD               * same ward ?
          IF        @EQUAL
            MATCH     BEDSTRNG,TBED              * yes - same bed ?
            IF        @EQUAL
              COMPARE   ONE,A08XFLAG             * yes - sending Axx ?
              GOTO      GTPL0500 IF EQUAL        * yes - get previous tran rec.
              GOTO      GTPL9100                 * no - finish
            ENDIF
          ENDIF
.
.         Previous Ward/Bed found
.
          MOVE      TWARD,WRDSTRNG               * load ward/bed fields
          MOVE      TBED,BEDSTRNG
.
          MOVE      ZERO,EXIT
          GOTO      GTPL9999
.
GTPL9100  MOVE      ONE,EXIT
.
GTPL9999  RETURN
+
.*****************************************************************************
.*                          GPRA0000               Called by: WSTF0000       *
.*          Get the practice details for the HCP                             *
.*****************************************************************************
.
GPRA0000  MOVE      ZERO,COUNTER                 * initialise practice counter
          MOVE      ZERO,F4
          MOVE      ZERO,FRM4
          MOVE      ZERO,FORM4
.
          PACK      KEY20,PMHCHCPC,SP20
          CALL      RSPMHCL1                     * position on HCP
GPRA0500  CALL      RKPMHCL1                     * read next record
          BRANCH    OVRCD,GPRA9500               * eof - finished
.
          MATCH     PMHLHCPC,PMHCHCPC            * same HCP still ?
          GOTO      GPRA9500 IF NOT EQUAL        * no - finished
.
.         We have a linked HCP, so get the practice record
.
          PACK      KEY12,PMHLHCPR,SP1,ONE
          CALL      RDPMHCG1                     * practice on file ?
          BRANCH    OVRCD,GPRA0500               * no - get next link record
.
.         The practice record has been found, so load the pratice details
.         into the relevant fields
.
          ADD       ONE,COUNTER                  * increment practice count
          MOVE      COUNTER,DIM3
          SQUEEZE   DIM3
.
.         Add phone/fax/email details to STF-10
.
          APPEND    TILDA,STF010
          APPEND    "CP",STF010
          APPEND    DIM3,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          MATCH     SP80,PMHGPEML                * email present ?
          IF        @EQUAL
            APPEND    BLANKSTR,STF010            * no
          ELSE      
            MOVE      PMHGPEML,FIELDSTR          * yes
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF010
          ENDIF
          APPEND    CARET,STF010
          APPEND    CARET,STF010                 
          APPEND    CARET,STF010
          MATCH     SP20,PMHGPFAX                * fax # blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,STF010            * yes
          ELSE
            MOVE      PMHGPFAX,FIELDSTR          * no
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF010
          ENDIF
          APPEND    CARET,STF010
          APPEND    CARET,STF010
          MATCH     SP20,PMHGPTEL                * phone # blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,STF010            * yes
          ELSE
            MOVE      PMHGPTEL,FIELDSTR          * no
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF010
          ENDIF
.
.         Add practice address details to STF-11
.
          APPEND    TILDA,STF011
          MATCH     SP60,PMHGADD1                * address line 1 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,STF011            * yes
          ELSE
            MOVE      PMHGADD1,FIELDSTR          * load address line 1
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF011
          ENDIF
          APPEND    CARET,STF011
.
          MATCH     SP60,PMHGADD2                * address line 2 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,STF011            * yes
          ELSE
            MOVE      PMHGADD2,FIELDSTR          * load address line 2
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF011
          ENDIF
          APPEND    CARET,STF011
.
          MATCH     SP60,PMHGADD3                * address line 3 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,STF011            * yes
          ELSE
            MOVE      PMHGADD3,FIELDSTR          * load address line 3
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF011            
          ENDIF
          APPEND    CARET,STF011
.         
          MATCH     SP60,PMHGADD4                * address line 4 blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,STF011            * yes
          ELSE
            MOVE      PMHGADD4,FIELDSTR          * load address line 4
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF011
          ENDIF
          APPEND    CARET,STF011
.
          MATCH     SP8,PMHGPOST                 * postcode blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,STF011            * yes
          ELSE
            MOVE      PMHGPOST,FIELDSTR          * load postcode
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,STF011
          ENDIF
          APPEND    CARET,STF011
          APPEND    CARET,STF011
          APPEND    "B",STF011                   * address type=B (business)
          APPEND    DIM3,STF011                  * add counter
.
.         Add practice code/description to PRA-02
.
          IF        COUNTER > 1
            APPEND    TILDA,PRA002
          ENDIF
          MATCH     SP10,PMHGPRAC                * practice code blank ?
          IF        @EQUAL
            IF        COUNTER = 1
              MOVE      BLANKSTR,PRA002          * yes
            ELSE
              APPEND    BLANKSTR,PRA002
            ENDIF
          ELSE
            MOVE      PMHGPRAC,FIELDSTR          * no - load practice code
            CALL      SPCHR000                   * convert special characters
            IF        COUNTER = 1
              MOVE      FIELDSTR,PRA002
            ELSE
              APPEND    FIELDSTR,PRA002
            ENDIF
          ENDIF
          IF        COUNTER = 1
            ENDSET    PRA002
          ENDIF
.
          APPEND    CARET,PRA002
          MATCH     SP80,PMHGPNAM                * practice description blank ?
          IF        @EQUAL
            APPEND    BLANKSTR,PRA002            * yes
          ELSE
            MOVE      PMHGPNAM,FIELDSTR          * no - load practice name
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,PRA002
          ENDIF
.
          MATCH     "1",PTCNOPRA                 * sending HPI-O ? 0935314
          IF        @EQUAL
            APPEND    CARET,PRA002
            APPEND    CARET,PRA002
            MATCH     SP70,PMHGHPIO              * HPI-O Number blank ?
            IF        @EQUAL
              APPEND    BLANKSTR,PRA002          * yes
            ELSE
              MOVE      PMHGHPIO,FIELDSTR        * no - load HPI-O Number
              CALL      SPCHR000                 * convert special characters
              APPEND    FIELDSTR,PRA002
            ENDIF
.
            APPEND    CARET,PRA002
            APPEND    "HPI-O Number",PRA002
            APPEND    CARET,PRA002
            APPEND    "webPAS",PRA002
          ENDIF
.
.         Add linked practice provider number to PRA-06
.
          MATCH     "1",PTCNSLPD                 * sending linked practice?
          GOTO      GPRA9000 IF NOT EQUAL
.
          IF        COUNTER > 1
            APPEND    TILDA,PRA006
          ENDIF
          MATCH     SP10,PMHLPRV1                * linked provider no. blank ?
          IF        @EQUAL
            IF        COUNTER = 1
              MOVE      BLANKSTR,PRA006          * yes
            ELSE
              APPEND    BLANKSTR,PRA006
            ENDIF
          ELSE
            MOVE      PMHLPRV1,FIELDSTR          * no - load practice code
            CALL      SPCHR000                   * convert special characters
            IF        COUNTER = 1
              MOVE      FIELDSTR,PRA006
            ELSE
              APPEND    FIELDSTR,PRA006
            ENDIF
          ENDIF
          IF        COUNTER = 1
            ENDSET    PRA006
          ENDIF
.
.         Stop looking for link records if STF010/STF011/PRA002 reach 1000 chars
.
GPRA9000  MOVELPTR  STF010,FORM4
          IF        FORM4 < 1000
            MOVELPTR  STF011,F4
            IF        F4 < 1000
              MOVELPTR  PRA002,FRM4
              IF        FRM4 < 1000
                GOTO      GPRA0500               * get next link record
              ENDIF
            ENDIF
          ENDIF
.
GPRA9500  COMPARE   ZERO,COUNTER
          GOTO      GPRA9999 IF EQUAL
.
          RESET     PRA002
.
          MATCH     "1",PTCNSLPD                 * sending linked practice?
          GOTO      GPRA9999 IF NOT EQUAL        * no
.
          RESET     PRA006
.
GPRA9999  RETURN      
+
.*****************************************************************************
.*                          LOGM0000               Called by: RCIS0000       *
.*                Create/Open Day log file                                   *
.* Requires: MLOGFLAG - Message log flag                                     *
.*                       0 = logging start of message processing             *
.*                       1 = logging sent message                            *
.*                       2 = logging errors                                  *
.*                       3 = logging full received acknowledgement message   *
.*                       4 = logging connection to socket                    *
.*           ERORTEXT - Acknowledgement validation error description         *
.*****************************************************************************
.
LOGM0000  READ      CONTROLF,HUND03;*242,PTCNHL7L
          MATCH     "1",PTCNHL7L                 * logging HL7 messages ?
          GOTO      LOGM9999 IF LESS             * no - finished
.
          BRANCH    MLOGFLAG,LOGM2000:           * sent message
                             LOGM5000:           * ack. error
                             LOGM2000            * full ack. message
.
.         Get the current date/time
.
LOGM2000  CALL      IBACLOCK
.
.         If we are sending a new message (MLOGFLAG=0), then check if
.         the date has changed since we sent the last message.  If so,
.         then we need to close yesterday's log file and open a new one
.         for today.
.
          IF        MLOGFLAG = 0
            PACK      CURRDATE,CCC,CYY,CMM,CDD
            REP       " 0",CURRDATE
            MATCH     SAVEDATE,CURRDATE          * same day still ?
            GOTO      LOGM3000 IF EQUAL          * yes
.
            CLOSE     TEXTFILE                   * no - close yesterday's log
            CALL      LOGO0000                   * open new log file for today
          ENDIF
.
LOGM3000  MOVE      CTIMEIS,TIMSTAMP
          REP       " 0",TIMSTAMP
.
          BRANCH    MLOGFLAG,LOGM3500:           * sent message
                             LOGM5000:           * ack. validation errors
                             LOGM6000:           * full acknowledgement message
                             LOGM5000            * connection to socket
.
.         Write start of new message processing
.
          ENDSET    ERORTEXT
          APPEND    TIMSTAMP,ERORTEXT
          RESET     ERORTEXT
          WRITE     TEXTFILE,SEQ;DASHLINE        * write line to start new mess.
          WRITE     TEXTFILE,SEQ;*+,ERORTEXT
          GOTO      LOGM9999
.         
.         Write message sent details
.
LOGM3500  MATCH     "2",PTCNHL7L
          IF        @EQUAL
            ENDSET    ERORTEXT
            APPEND    TIMSTAMP,ERORTEXT
            RESET     ERORTEXT
            WRITE     TEXTFILE,SEQ;*+,ERORTEXT     * segment timestamp logging
            WRITE     TEXTFILE,SEQ;*+,SEGSTRNG     * write segment content
          ELSE
            WRITE     TEXTFILE,SEQ;*+,SEGSTRNG;    * write segment content
          ENDIF
          IF        SEDIFLAG = 1
            BRANCH    EPISFLAG,LOGM9999            * edi not valid for episoft
.
            SCAN      STRTBLOK,SEGSTRNG            * sob found ?
            IF        @EQUAL
              RESET     SEGSTRNG,2                 * yes - remove sob
            ENDIF
            MOVE      SEGSTRNG,SEGSTRN2
            WRITE     SEDIFILE,SEQ;*+,SEGSTRN2;    * write message to EDI file
          ENDIF
          GOTO      LOGM9999
.
.         Write error
.
LOGM5000  IF        MLOGFLAG = 4
            WRITE     TEXTFILE,MINUS3;*+,ERORTEXT
          ELSE
            WRITE     TEXTFILE,SEQ;*+,ERORTEXT
          ENDIF
          GOTO      LOGM9999
.
.         Write full acknowledgement message
.
LOGM6000  WRITE     TEXTFILE,SEQ;TIMECAP2,TIMSTAMP
          WRITE     TEXTFILE,SEQ;*+,RECVMESS
.
LOGM9999  RETURN
+
.*****************************************************************************
.*                          EPIS0000                                         *
.*                Validate edi message for episoft (send M02/A05/A08 only)   *
.*****************************************************************************
EPIS0000  MATCH     "1",PTCNEPIS
          GOTO      EPIS9000 IF NOT EQUAL        * using episoft ?
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PMSEHBA5,"pmsehbaf"          * open eAdmission file
          TRAPCLR   IO
          BRANCH    OVRCD,EPIS9500               * eAdmission file not found
.
          COMPARE   TWENTY8,MESSNUMB
          GOTO      EPIS9000 IF EQUAL            * send all M02 messages
.
          COMPARE   TEN7,MESSNUMB
          GOTO      EPIS9000 IF EQUAL            * send A14/A05 message
.
          COMPARE   EIGHT,MESSNUMB
          GOTO      EPIS9000 IF EQUAL            * send A08 IP message
.
          GOTO      EPIS9500                     * message not valid for episoft
.
EPIS9000  MOVE      ZERO,EPISFLAG                * send edi message
          GOTO      EPIS9999
.
EPIS9500  MOVE      ONE,EPISFLAG                 * don't send edi message
EPIS9999  RETURN
+
.*****************************************************************************
.*                             GTICOW00            Called by: WLPR1000       *
.*               Get the ICD version of coding for WL                        *
.* Requires:   CODINGDT - date of coding                                     *
.*             PR1003 - with first component (ICD code) & no trailing spaces *
.*             PTCNGDX3 - Go live date for ICD10 version 13        *I-0956210*
.*             PTCNGDX2 - Go live date for ICD10 version 12        *I-0917793*
.*             PTCNGDX1 - Go live date for ICD10 version 11        *I-0869412*
.*             PTCNGDVX - Go live date for ICD10 version 10        *I-0833093*
.*             PTCNGDV9 - Go live date for ICD10 version 9         *I-311669 *
.*             PTCNGDV8 - Go live date for ICD10 version 8                   *
.*             PTCNGDV7 - Go live date for ICD10 version 7         *I-219246 *
.*             PTCNGDV6 - Go live date for ICD10 version 6                   *
.*             PTCNGDV5 - Go live date for ICD10 version 5                   *
.* Returns:    PR1003 - with all 3 components                                *
.*****************************************************************************
.
GTICOW00  MOVE      BLANKSTR,ICDVERSN
          MOVE      CODINGDT,ICDRDDTE
          CALL      OPICO1
          PACK      KEY9,DIM9
          CALL      RDPTICO1
          BRANCH    OVRCD,GTICOW90
.
          MOVE      "ICD10.",ICDVERSN
          ENDSET    ICDVERSN
          APPEND    ICDRDVER,ICDVERSN            * load ICD version
          RESET     ICDVERSN
.
GTICOW90  PACK      KEY9,PR1003,SP9
          ENDSET    PR1003
          APPEND    CARET,PR1003
          MOVE      "Unknown code",FIELDSTR      * get ICD description
          CALL      RDPROA1
          IF        OVRCD = 0
            MOVE      WPDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    FIELDSTR,PR1003              * load description
          APPEND    CARET,PR1003
          APPEND    ICDVERSN,PR1003              * load ICD version
          RESET     PR1003
.
GTICOW99  RETURN
+
.*****************************************************************************
.*                           WZBR0000              Called by: A08A0000       *
.*               Write Ward/Bed Request Information Segment   A08E0000       *
.* Requires: VISNUMBR - visit number                          A01A0000       *
.*           PMBRREQD - ward/bed request date                 A02A0000       *
.*           PMBRREQT - ward/bed request time                                *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WZBR0000  MATCH     "1",PTCNSZBR                 * sending ZBR segment ?
          GOTO      WZBR9000 IF NOT EQUAL        * no - finished
.
.         Send only for specific message triggers based on a change of
.         bed request status
.
          PACK      KEY20,H7CIPGID,H7CITRID,H7CIINCL
          MATCH     "PATWEB89   6        ",KEY20 * admit from ED or I/P admit
          GOTO      WZBR1000 IF EQUAL
.
          MATCH     "PATWEB10   1        ",KEY20 * add bed request
          GOTO      WZBR1000 IF EQUAL
.
          MATCH     "PATWEB10   2        ",KEY20 * update bed request
          GOTO      WZBR1000 IF EQUAL
.
          MATCH     "PATWEB10   3        ",KEY20 * delete bed request
          GOTO      WZBR1000 IF EQUAL
.
          MATCH     "PATWEB10   4        ",KEY20 * complete bed request/transfer
          GOTO      WZBR1000 IF EQUAL
.
          GOTO      WZBR9000                     * don't send ZBR segment
.
.         Get the bed request record details using the request date/time
.         from the holding table (pmsqviaf.pmbrreqd/pmbrreqt).
.
WZBR1000  PACK      KEY24,VISNUMBR,PMBRREQD,PMBRREQT
          CALL      RDPMBRQ1                     * ward/bed request on file ?
          BRANCH    OVRCD,WZBR9000               * no - finished
.
          MOVE      "ZBR",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [ZBR] segment",*R,*N;
          ENDIF
.
          CALL      CLZBR000                     * clear ZBR fields
.
.         Load Request Date/Time (TS - ZBR.1)
.
          PACK      ZBR001,PMBRREQD,PMBRREQT
          REP       ": ",ZBR001
          SQUEEZE   ZBR001
.
.         Load Requesting Department (CE - ZBR.2)
.
          MATCH     SP3,PMBRUNIT
          IF        @EQUAL
            MOVE      BLANKSTR,ZBR002
            ENDSET    ZBR002
            MOVE      BLANKSTR,FIELDSTR
          ELSE
            MOVE      PMBRUNIT,ZBR002
            STRIP     ZBR002
            ENDSET    ZBR002
.
            MOVE      "Unknown Code",FIELDSTR
            PACK      KEY5,ANSA,ANSC,PMBRUNIT
            CALL      RDCODE1
            IF        OVRCD = 0
              MOVE      TDESC,FIELDSTR
              CALL      SPCHR000                 * convert special characters
            ENDIF
          ENDIF
          APPEND    CARET,ZBR002
          APPEND    FIELDSTR,ZBR002
          APPEND    CARET,ZBR002
          APPEND    "webPAS",ZBR002
          RESET     ZBR002
.
.         Load Request Ward (PL - ZBR.3)
.
          MATCH     SP3,PMBRRWRD
          IF        @EQUAL
            MOVE      BLANKSTR,ZBR003
          ELSE
            MOVE      PMBRRWRD,ZBR003
          ENDIF
          STRIP     ZBR003
          ENDSET    ZBR003
.
          APPEND    CARET,ZBR003
          APPEND    CARET,ZBR003
          APPEND    CARET,ZBR003
          APPEND    CARET,ZBR003
          APPEND    ANSR,ZBR003
          RESET     ZBR003
.
.         Load Admitting Consultant (XCN - ZBR.4)
.
          MATCH     SP10,PMBRRHCP
          IF        @EQUAL
            MOVE      BLANKSTR,ZBR004
            ENDSET    ZBR004
            APPEND    CARET,ZBR004
            APPEND    CARET,ZBR004
            APPEND    CARET,ZBR004
            APPEND    CARET,ZBR004
            APPEND    CARET,ZBR004
            APPEND    CARET,ZBR004
            APPEND    CARET,ZBR004
          ELSE
            MOVE      PMBRRHCP,ZBR004
            STRIP     ZBR004
            ENDSET    ZBR004
            APPEND    CARET,ZBR004
.
            MOVE      "Unknown Code",FIELDSTR
            MOVE      PMBRRHCP,KEY10
            CALL      RDPMHCP1
            IF        OVRCD = 0
              STRIP     PMHCSNAM
              APPEND    PMHCSNAM,ZBR004
              APPEND    CARET,ZBR004
              STRIP     PMHCGNAM
              APPEND    PMHCGNAM,ZBR004
              APPEND    CARET,ZBR004
              APPEND    CARET,ZBR004
              APPEND    CARET,ZBR004
              STRIP     PMHCTITL
              APPEND    PMHCTITL,ZBR004
              APPEND    CARET,ZBR004
              APPEND    CARET,ZBR004
            ENDIF
          ENDIF
          APPEND    "webPAS",ZBR004
          RESET     ZBR004
.
.         Load Type Of Bed Required (CE - ZBR.5)
.
          MATCH     SP3,PMBRTYPE
          IF        @EQUAL
            MOVE      BLANKSTR,ZBR005
            ENDSET    ZBR005
            MOVE      BLANKSTR,FIELDSTR
          ELSE
            MOVE      PMBRTYPE,ZBR005
            STRIP     ZBR005
            ENDSET    ZBR005
.
            MOVE      "Unknown Code",FIELDSTR
            PACK      KEY5,ANSR,ANST,PMBRTYPE
            CALL      RDCODE1
            IF        OVRCD = 0
              MOVE      TDESC,FIELDSTR
              CALL      SPCHR000                 * convert special characters
            ENDIF
          ENDIF
          APPEND    CARET,ZBR005
          APPEND    FIELDSTR,ZBR005
          APPEND    CARET,ZBR005
          APPEND    "webPAS",ZBR005
          RESET     ZBR005
.
.         Load Specialty Bed Required (CE - ZBR.6)
.
          MATCH     SP3,PMBRSBED
          IF        @EQUAL
            MOVE      BLANKSTR,ZBR006
            ENDSET    ZBR006
            MOVE      BLANKSTR,FIELDSTR
          ELSE
            MOVE      PMBRSBED,ZBR006
            STRIP     ZBR006
            ENDSET    ZBR006
.
            MOVE      "Unknown Code",FIELDSTR
            PACK      KEY5,ANSC,ANSG,PMBRSBED
            CALL      RDCODE1
            IF        OVRCD = 0
              MOVE      TDESC,FIELDSTR
              CALL      SPCHR000                 * convert special characters
            ENDIF
          ENDIF
          APPEND    CARET,ZBR006
          APPEND    FIELDSTR,ZBR006
          APPEND    CARET,ZBR006
          APPEND    "webPAS",ZBR006
          RESET     ZBR006
.
.         Load Diagnosis (CE - ZBR.7)
.
          MATCH     SP3,PMBRDIAG
          IF        @EQUAL
            MOVE      BLANKSTR,ZBR007
          ELSE
            MOVE      PMBRDIAG,FIELDSTR
            CALL      SPCHR000                   * convert special characters
            MOVE      FIELDSTR,DG1003            * use DG1003 for GTICD000
            STRIP     DG1003
.
            MOVE      PMBRREQD,CODINGDT
            CALL      GTICD000                   * get ICD description/version
            MOVE      DG1003,ZBR007
          ENDIF
.
.         Load Diagnosis Free Format (ST - ZBR.8)
.
          MATCH     SP70,PMBRFTXT
          IF        @EQUAL
            MOVE      BLANKSTR,ZBR008
          ELSE
            MOVE      PMBRFTXT,ZBR008
            STRIP     ZBR008
          ENDIF
.
.         Load Notes (ST - ZBR.9)
.
          CALL      GBRN0000                     * get bed request notes
.
.         Load Expected Ward/Bed (PL - ZBR.10)
.
WZBR5000  MATCH     SP3,PMBREWRD
          IF        @EQUAL
            MOVE      BLANKSTR,ZBR010
            ENDSET    ZBR010
            APPEND    CARET,ZBR010
            APPEND    CARET,ZBR010
          ELSE
            STRIP     PMBREWRD
            MOVE      PMBREWRD,ZBR010
            ENDSET    ZBR010
            APPEND    CARET,ZBR010
            APPEND    CARET,ZBR010
.
            MATCH     SP3,PMBREBED
            IF        @EQUAL
              APPEND    BLANKSTR,ZBR010
            ELSE
              STRIP     PMBREBED
              APPEND    PMBREBED,ZBR010
            ENDIF
          ENDIF
.
          APPEND    CARET,ZBR010
          APPEND    CARET,ZBR010
          APPEND    ANSE,ZBR010
          RESET     ZBR010
.
.         Load Ward/Bed Ready Date/Time (TS - ZBR.11)
.
          MATCH     SP8,PMBRRDAT
          IF        @EQUAL
            MOVE      BLANKSTR,ZBR011
          ELSE
            MOVE      PMBRRDAT,ZBR011
            ENDSET    ZBR011
            MATCH     SP8,PMBRRTIM
            IF        @EQUAL
              APPEND    "000000",ZBR011
            ELSE
              APPEND    PMBRRTIM,ZBR011
            ENDIF
            RESET     ZBR011
          ENDIF
          REP       ": ",ZBR011
          SQUEEZE   ZBR011
.
.         Load Request Status (IS - ZBR.12)
.
          MOVE      PMBRRSTA,ZBR012
.
.         Load Ward/Bed Allocated Date/Time (TS - ZBR.13)
.
          MATCH     SP8,PMBRADAT
          IF        @EQUAL
            MOVE      BLANKSTR,ZBR013
          ELSE
            MOVE      PMBRADAT,ZBR013
            ENDSET    ZBR013
            MATCH     SP8,PMBRATIM
            IF        @EQUAL
              APPEND    "000000",ZBR013
            ELSE
              APPEND    PMBRATIM,ZBR013
            ENDIF
            RESET     ZBR013
          ENDIF
          REP       ": ",ZBR013
          SQUEEZE   ZBR013
.
.         Load Cancellation Reason (CE - ZBR.14)
.
          MATCH     SP3,PMBRCANR
          IF        @EQUAL
            MOVE      BLANKSTR,ZBR014
            ENDSET    ZBR014
            MOVE      BLANKSTR,FIELDSTR
          ELSE
            MOVE      PMBRCANR,ZBR014
            STRIP     ZBR014
            ENDSET    ZBR014
.
            MOVE      "Unknown Code",FIELDSTR
            PACK      KEY5,CATLWCZ,PMBRCANR
            CALL      RDCODE1
            IF        OVRCD = 0
              MOVE      TDESC,FIELDSTR
              CALL      SPCHR000                 * convert special characters
            ENDIF
          ENDIF
          APPEND    CARET,ZBR014
          APPEND    FIELDSTR,ZBR014
          APPEND    CARET,ZBR014
          APPEND    "webPAS",ZBR014
          RESET     ZBR014
.
.         Load Cancelled Date/Time (TS - ZBR.15)
.
          MATCH     SP8,PMBRCAND
          IF        @EQUAL
            MOVE      BLANKSTR,ZBR015
          ELSE
            MOVE      PMBRCAND,ZBR015
            ENDSET    ZBR015
            MATCH     SP8,PMBRCANT
            IF        @EQUAL
              APPEND    "000000",ZBR015
            ELSE
              APPEND    PMBRCANT,ZBR015
            ENDIF
            RESET     ZBR015
          ENDIF
          REP       ": ",ZBR015
          SQUEEZE   ZBR015
.
.         Preferred Ward (IS - ZBR.16)
.
          MATCH     SP70,PMBRPWRD
          IF        @EQUAL
            MOVE      BLANKSTR,ZBR016
          ELSE
            STRIP     PMBRPWRD
            MOVE      PMBRPWRD,ZBR016  
          ENDIF
          ENDSET    ZBR016
          APPEND    CARET,ZBR016
          APPEND    CARET,ZBR016
          APPEND    CARET,ZBR016
          APPEND    CARET,ZBR016
          APPEND    ANSR,ZBR016
          RESET     ZBR016           
.
.         Spec Feature - Falls Risk (IS - ZBR.17)
          MATCH     "1",PMBRSFFR
          IF        @EQUAL
            MOVE      "Y",ZBR017
          ELSE
            MOVE      "N",ZBR017
          ENDIF      
.
.         Spec Feature - Existing Pressure In (IS - ZBR.18)
          MATCH     "1",PMBRSFEP
          IF        @EQUAL
            MOVE      "Y",ZBR018
          ELSE
            MOVE      "N",ZBR018
          ENDIF      
.
.         Spec Feature - Cognitive Impairment (IS - ZBR.19)
          MATCH     "1",PMBRSFCI
          IF        @EQUAL
            MOVE      "Y",ZBR019
          ELSE
            MOVE      "N",ZBR019
          ENDIF      
.
.         Spec Feature - Companion (IS - ZBR.20)
          MATCH     "1",PMBRSFCO
          IF        @EQUAL
            MOVE      "Y",ZBR020
          ELSE
            MOVE      "N",ZBR020
          ENDIF      
.
.         Spec Feature - TBP (Isolation) (IS - ZBR.21)
          MATCH     "1",PMBRSFIS
          IF        @EQUAL
            MOVE      "Y",ZBR021
          ELSE
            MOVE      "N",ZBR021
          ENDIF      
.
.         Spec Feature - Telemetry (IS - ZBR.22)
          MATCH     "1",PMBRSFTE
          IF        @EQUAL
            MOVE      "Y",ZBR022
          ELSE
            MOVE      "N",ZBR022
          ENDIF      
.
.         Spec Feature - From Resident Care (IS - ZBR.23)
          MATCH     "1",PMBRSFRC
          IF        @EQUAL
            MOVE      "Y",ZBR023
          ELSE
            MOVE      "N",ZBR023
          ENDIF      
.
.         Spec Feature - Other (see notes) (IS - ZBR.24)
          MATCH     "1",PMBRSFOT
          IF        @EQUAL
            MOVE      "Y",ZBR024
          ELSE
            MOVE      "N",ZBR024
          ENDIF      
.
.         Spec Feature - None Required (IS - ZBR.25)
          MATCH     "1",PMBRSFNR
          IF        @EQUAL
            MOVE      "Y",ZBR025
          ELSE
            MOVE      "N",ZBR025
          ENDIF      
.
.         Spec Feature - Mobility Assistance (IS - ZBR.26)
          MATCH     "1",PMBRSFMA
          IF        @EQUAL
            MOVE      "Y",ZBR026
          ELSE
            MOVE      "N",ZBR026
          ENDIF      
.
.         Mobility Assistance Score (Cat m3) (IS - ZBR.27)
          MATCH     SP3,PMBRMASC
          IF        @EQUAL
            MOVE      BLANKSTR,ZBR027
            ENDSET    ZBR027
            MOVE      BLANKSTR,FIELDSTR
          ELSE
            MOVE      PMBRMASC,ZBR027
            STRIP     ZBR027
            ENDSET    ZBR027
.
            MOVE      "Unknown Code",FIELDSTR
            MOVE      "m3",KEY2 
            PACK      KEY5,KEY2,PMBRMASC
            CALL      RDCODE1
            IF        OVRCD = 0
              MOVE      TDESC,FIELDSTR
              CALL      SPCHR000                 * convert special characters
            ENDIF
          ENDIF
          APPEND    CARET,ZBR027
          APPEND    FIELDSTR,ZBR027
          APPEND    CARET,ZBR027
          APPEND    "webPAS",ZBR027
          RESET     ZBR027
.
.         Suitable for Ward Transfer (IS - ZBR.28)
          MATCH     "1",PMBRWDTR
          IF        @EQUAL
            MOVE      "Y",ZBR028
          ELSE
            MOVE      "N",ZBR028
          ENDIF      
.
.         Companion Requirement Confirmed (IS - ZBR.29)
          MATCH     "1",PMBRCORC
          IF        @EQUAL
            MOVE      "Y",ZBR029
          ELSE
            MOVE      "N",ZBR029
          ENDIF      
.
          PACK      SEGSTRNG,ANSZ,ANSB,ANSR,PIPE:
                             ZBR001,PIPE,ZBR002,PIPE,ZBR003,PIPE,ZBR004,PIPE:
                             ZBR005,PIPE,ZBR006,PIPE,ZBR007,PIPE,ZBR008,PIPE:
                             ZBR009,PIPE,ZBR010,PIPE,ZBR011,PIPE,ZBR012,PIPE:
                             ZBR013,PIPE,ZBR014,PIPE,ZBR015,PIPE,ZBR016,PIPE:
                             ZBR017,PIPE,ZBR018,PIPE,ZBR019,PIPE,ZBR020,PIPE:
                             ZBR021,PIPE,ZBR022,PIPE,ZBR023,PIPE,ZBR024,PIPE:
                             ZBR025,PIPE,ZBR026,PIPE,ZBR027,PIPE,ZBR028,PIPE:
                             ZBR029,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WZBR9100:               * connection lost
                         WZBR9200                * timeout
.
WZBR9000  MOVE      ZERO,EXIT
          GOTO      WZBR9999
.
WZBR9100  MOVE      ONE,EXIT
          GOTO      WZBR9999
.
WZBR9200  MOVE      TWO,EXIT
.
WZBR9999  RETURN
+
.*****************************************************************************
.*                           GBRN0000              Called by: WZBR0000       *
.*               Get any Bed Request Notes for this visit                    *
.* Requires: PMBRREQD/PMBRREQT - Bed Request Date/Time                       *
.* Returns:  ZBR.9 - Comments from vismtxaf for type "009"                   *
.*****************************************************************************
.
GBRN0000  MOVE      ZERO,COUNTER                 * initialise line count
.
          MOVE      "009",KEY3
          PACK      KEY17,VISNUMBR,KEY3,TILDA40
          CALL      RSVSMDT1                     * posn after BR Notes for visit
GBRN0500  CALL      RPVSMDT1                     * read previous record
          BRANCH    OVRCD,GBRN8000               * eof - finished
.
          MATCH     VSMDVISN,VISNUMBR            * same visit still ?
          GOTO      GBRN8000 IF NOT EQUAL        * no - finished
.
          MATCH     VSMDTYPE,KEY3                * same note type still ?
          GOTO      GBRN8000 IF NOT EQUAL        * no - finished
.
          MATCH     PMBRREQD,VSMDDATE            * same date ?
          GOTO      GBRN0500 IF NOT EQUAL        * no - get next note
.
          MATCH     PMBRREQT,VSMDTIME            * same time ?
          GOTO      GBRN0500 IF NOT EQUAL        * no - get next note
.
          PACK      KEY20,VSMDVISN,VSMDTYPE,VSMDNOTE,SP70
          CALL      RSVSMTX1                     * position on visit note type
GBRN1000  CALL      RKVSMTX1                     * read next record
          BRANCH    OVRCD,GBRN9000               * eof - finished
.
          MATCH     VSMDVISN,VSMTVISN            * same visit still ?
          GOTO      GBRN9000 IF NOT EQUAL        * no - finished
.
          MATCH     VSMDTYPE,VSMTTYPE            * same note type still ?
          GOTO      GBRN9000 IF NOT EQUAL        * no - finished
.
          MATCH     VSMDNOTE,VSMTNOTE            * same note number still ?
          GOTO      GBRN9000 IF NOT EQUAL        * no - finished
.
          ADD       ONE,COUNTER                  * increment line count
          MOVE      VSMTCMNT,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZBR009              * load comment
.
.         A maximum of 10 lines is being sent, so see if we are
.         at the limit yet
.
          COMPARE   TEN,COUNTER                  * max lines ?
          GOTO      GBRN1000 IF LESS             * no
          GOTO      GBRN9000                     * yes
.
GBRN8000  MOVE      BLANKSTR,ZBR009         * no data
GBRN9000  RESET     ZBR009
          STRIP     ZBR009
.
GBRN9999  RETURN
+
.*****************************************************************************
.*                           WZNT0000                                        *
.*          Write Emergency Note details to the ZNT segment                  *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
.
WZNT0000  MOVE      ZERO,FORMZNT4
          MOVE      ZERO,FORMZNT5
          MOVE      ZERO,FORMZNT6
          MOVE      PTCNZNT4,FORMZNT4            * note types 014/015
          MOVE      PTCNZNT5,FORMZNT5            * note type 016
          MOVE      PTCNZNT6,FORMZNT6            * note type 023
.
          IF        FORMZNT4 < 1 & FORMZNT5 < 1 & FORMZNT6 < 1
            GOTO      WZNT9000                   * not sending any note types
          ENDIF
.
          MOVE      "ZNT",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [ZNT] segment",*R,*N;
          ENDIF
.
.         Send a "delete" segment first
.
          MOVE      BLANKSTR,ZNT001              * set all fields to null
          MOVE      BLANKSTR,ZNT002
          MOVE      BLANKSTR,ZNT003
          MOVE      BLANKSTR,ZNT004
          MOVE      BLANKSTR,ZNT005
.
          PACK      SEGSTRNG,ANSZ,ANSN,ANST,PIPE:
                             ZNT001,PIPE,ZNT002,PIPE,ZNT003,PIPE,ZNT004,PIPE:
                             ZNT005,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WZNT9100:               * connection lost
                         WZNT9200                * timeout
.
.         Send ZNT segment(s) for note types 014/015 and 016
.
          CALL      CLZNT000                     * clear all ZNT fields
          MOVE      ZERO,SIDCOUNT                * initialise set id count
.
          IF        FORMZNT4 > 0
            MOVE      "015",NOTETYPE             * get note type 015
            MOVE      "4",ZNT002                 * Discharge Text (Final)
          ELSE
            IF        FORMZNT5 > 0
              MOVE      "016",NOTETYPE           * get note type 016
              MOVE      "5",ZNT002               * Advice to Patient (Final)
            ELSE
              GOTO      WZNT8000                 * no note types of 014/015/016
            ENDIF
          ENDIF
.
.         EMR comments (vismdtaf/vismtxaf)
.
WZNT2000  PACK      KEY17,VISNUMBR,NOTETYPE,SP70
          CALL      RSVSMDT1
WZNT3000  CALL      RKVSMDT1
          BRANCH    OVRCD,WZNT6000
.
          MATCH     VISNUMBR,VSMDVISN
          GOTO      WZNT6000 IF NOT EQUAL
.
          MATCH     NOTETYPE,VSMDTYPE
          GOTO      WZNT6000 IF NOT EQUAL
.
          MATCH     "1",VSMDDELT
          GOTO      WZNT3000 IF EQUAL            * comment is deleted
.
          MOVE      ZERO,COUNTER                 * initialise line counter
          MOVE      ZERO,SNDCOUNT                * initialise send count
.
          PACK      KEY20,VSMDVISN,VSMDTYPE,VSMDNOTE,SP70
          CALL      RSVSMTX1
WZNT4000  CALL      RKVSMTX1
          BRANCH    OVRCD,WZNT5000
.
          MATCH     VSMDVISN,VSMTVISN
          GOTO      WZNT5000 IF NOT EQUAL
.
          MATCH     VSMDTYPE,VSMTTYPE
          GOTO      WZNT5000 IF NOT EQUAL
.
          MATCH     VSMDNOTE,VSMTNOTE
          GOTO      WZNT5000 IF NOT EQUAL
.
.         We have a comment record for the EMR visit, so load
.         the comment
.
.         Include linebreaks if either parameter is set to 2
.
WZNT4500  MOVE      NOTETYPE,F3
          IF        COUNTER <> 0
            IF        (FORMZNT4 = 2 & F3 < 016) | (FORMZNT5 = 2 & F3 = 016)
              RESET     ZNT004
              STRIP     ZNT004
              ENDSET    ZNT004
              APPEND    LINBREAK,ZNT004          * include line break
            ELSE
              APPEND    SP1,ZNT004               * delimit by 1 space
            ENDIF
          ENDIF
          MOVE      VSMTCMNT,FIELDSTR
          CALL      SPCHR000
          APPEND    FIELDSTR,ZNT004              * append comment line
.
.         We are sending a maximum of 30 lines of comments at any one time
.         (i.e. maximum of 3000 bytes of comments)
.
          IF        COUNTER = 30
            RESET     ZNT004
            IF        SNDCOUNT = 0
              ADD       ONE,SIDCOUNT                 * increment Set ID count
              MOVE      SIDCOUNT,ZNT001              * set ID
              SQUEEZE   ZNT001
.
              MOVE      VSMTNOTE,ZNT003              * set EMR Note Number
              SQUEEZE   ZNT003
.
              PACK      SEGSTRNG,ANSZ,ANSN,ANST,PIPE:
                                   ZNT001,PIPE,ZNT002,PIPE,ZNT003,PIPE,ZNT004
            ELSE
              PACK      SEGSTRNG,SP1,ZNT004
            ENDIF
            CALL      SENDM000                   * send message
            BRANCH    EXIT,WZNT9100:             * connection lost
                           WZNT9200              * timeout
.
            CALL      CLZNT000                   * clear all ZNT fields
            MOVE      ZERO,COUNTER               * reset counter
            ADD       ONE,SNDCOUNT               * increment send count
          ELSE
            ADD       ONE,COUNTER                * increment line counter
          ENDIF
.
          GOTO      WZNT4000                     * get next record
.
.         There are no more matching records for the current note,
.         so check if we need to send the end of segment, before
.         processing the next note
.
WZNT5000  IF        COUNTER > 0
            RESET     ZNT004
.
            MATCH     "014",NOTETYPE             * set EMR Note status
            IF        @EQUAL
              MOVE      "Draft",ZNT005
            ELSE
              MATCH     "015",NOTETYPE
              IF        @EQUAL
                MOVE      "Final",ZNT005
              ENDIF
            ENDIF
.
            IF        SNDCOUNT = 0
              ADD       ONE,SIDCOUNT                 * increment Set ID count
              MOVE      SIDCOUNT,ZNT001              * set ID
              SQUEEZE   ZNT001
.
              MOVE      VSMTNOTE,ZNT003              * set EMR Note Number
              SQUEEZE   ZNT003
.
              PACK      SEGSTRNG,ANSZ,ANSN,ANST,PIPE:
                                   ZNT001,PIPE,ZNT002,PIPE,ZNT003,PIPE,ZNT004:
                                   PIPE,ZNT005,CRETURN
            ELSE
              PACK      SEGSTRNG,SP1,ZNT004,PIPE,ZNT005,CRETURN
            ENDIF
            CALL      SENDM000                   * send message
            BRANCH    EXIT,WZNT9100:             * connection lost
                           WZNT9200              * timeout
          ENDIF
.
          CALL      CLZNT000                     * clear all ZNT fields
          MOVE      ZERO,COUNTER                 * reset line counter
          MOVE      ZERO,SNDCOUNT                * reset send count
.
          GOTO      WZNT3000                     * get next note
.
.         The note type has been completed, so get the next notetype.
.         If there were no type 15 (discharge - final) notes, then check
.         to see if there are any type 14 (discharge - draft) notes instead.
.
WZNT6000  MATCH     "016",NOTETYPE               * last note type ?
          GOTO      WZNT8000 IF EQUAL            * yes - finished
.
          MATCH     "015",NOTETYPE
          IF        @EQUAL
            IF        SNDCOUNT = 0
              MOVE      "014",NOTETYPE           * no type 015, so get type 014
              GOTO      WZNT2000
            ELSE
              IF        FORMZNT5 > 0
                MOVE      "016",NOTETYPE         * get note type 016
                MOVE      "5",ZNT002             * Advice to Patient (Final)
                GOTO      WZNT2000
              ENDIF
            ENDIF
          ENDIF
.
          MATCH     "014",NOTETYPE
          IF        @EQUAL
            IF        FORMZNT5 > 0
              MOVE      "016",NOTETYPE           * get note type 016
              MOVE      "5",ZNT002               * Advice to Patient (Final)
              GOTO      WZNT2000
            ENDIF
          ENDIF
.
WZNT8000  COMPARE   ZERO,FORMZNT6
          GOTO      WZNT9000 IF EQUAL            * not sending note type 023
.
          CALL      APRCM000                     * additnl presenting complaint
          BRANCH    EXIT,WZNT9100:               * connection lost
                         WZNT9200                * timeout
.
WZNT9000  MOVE      ZERO,EXIT
          GOTO      WZNT9999
.
WZNT9100  MOVE      ONE,EXIT
          GOTO      WZNT9999
.
WZNT9200  MOVE      TWO,EXIT
.
WZNT9999  RETURN
+
.*****************************************************************************
.*                           APRCM000                                        *
.* Get Additional Presenting Complaint Text from viscmtaf (note type 023)    *
.*****************************************************************************
APRCM000  MOVE      ZERO,COUNTER                 * initialise line counter
          MOVE      ZERO,SNDCOUNT                * initialise send count
.
          PACK      KEY14,VISNUMBR,ZERO,TWO,THREE,SP20
          CALL      RSVSCMT1                     * position on visit
APRCM100  CALL      RKVSCMT1                     * read next record
          BRANCH    OVRCD,APRCM500               * eof - finished
.
          MATCH     VISNUMBR,VSCTVIST            * same visit still ?
          GOTO      APRCM500 IF NOT EQUAL        * no - finished
.
          MATCH     "023",VSCTTYPE               * same comment type still ?
          GOTO      APRCM500 IF NOT EQUAL        * no - finished
.
.         We have a comment record for the ED visit
.
          IF        COUNTER <> 0
            IF        FORMZNT6 = 2
              RESET     ZNT004
              STRIP     ZNT004
              ENDSET    ZNT004
              APPEND    LINBREAK,ZNT004          * include line break
            ELSE
              APPEND    SP1,ZNT004               * delimit by 1 space
            ENDIF
          ENDIF
          MOVE      VSCTDATA,FIELDSTR
          CALL      SPCHR000
          APPEND    FIELDSTR,ZNT004              * append comment line
.
.         We are sending a maximum of 30 lines of comments at any one time
.         (i.e. maximum of 3000 bytes of comments)
.
          IF        COUNTER = 30
APRCM200    RESET     ZNT004
            IF        SNDCOUNT = 0
              ADD       ONE,SIDCOUNT                 * increment Set ID count
              MOVE      SIDCOUNT,ZNT001              * set ID
              SQUEEZE   ZNT001
              MOVE      "6",ZNT002                   * Additional Pres Complaint
              SQUEEZE   ZNT002
              MOVE      "1",ZNT003                   * set EMR Note Number
              SQUEEZE   ZNT003
.
              PACK      SEGSTRNG,ANSZ,ANSN,ANST,PIPE:
                                   ZNT001,PIPE,ZNT002,PIPE,ZNT003,PIPE,ZNT004
            ELSE
              IF        FORMZNT6 = 2
                PACK      SEGSTRNG,LINBREAK,ZNT004
              ELSE
APRCM300        PACK      SEGSTRNG,SP1,ZNT004
              ENDIF
            ENDIF
            CALL      SENDM000                   * send message
            BRANCH    EXIT,APRCM910:             * connection lost
                           APRCM920              * timeout
.
            CALL      CLZNT000                   * clear all ZNT fields
            MOVE      ZERO,COUNTER               * reset counter
            ADD       ONE,SNDCOUNT               * increment send count
          ELSE
            ADD       ONE,COUNTER                * increment line counter
          ENDIF
.
          GOTO      APRCM100                     * get next record
.
.         There are no more matching records for the current note,
.         so check if we need to send the end of segment.
.
APRCM500  IF        COUNTER > 0
            RESET     ZNT004
.
            IF        SNDCOUNT = 0
              ADD       ONE,SIDCOUNT             * increment Set ID count
              MOVE      SIDCOUNT,ZNT001          * set ID
              SQUEEZE   ZNT001
              MOVE      "6",ZNT002               * Additional Presenting Compl.
              SQUEEZE   ZNT002
              MOVE      "1",ZNT003               * set EMR Note Number
              SQUEEZE   ZNT003
.
              PACK      SEGSTRNG,ANSZ,ANSN,ANST,PIPE:
                                   ZNT001,PIPE,ZNT002,PIPE,ZNT003,PIPE,ZNT004:
                                   PIPE,ZNT005,CRETURN
            ELSE
              IF        FORMZNT6 = 2
                PACK      SEGSTRNG,LINBREAK,ZNT004,PIPE,ZNT005,CRETURN
              ELSE
APRCM600        PACK      SEGSTRNG,SP1,ZNT004,PIPE,ZNT005,CRETURN
              ENDIF
            ENDIF
            CALL      SENDM000                   * send message
            BRANCH    EXIT,APRCM910:             * connection lost
                           APRCM920              * timeout
          ENDIF
.
          CALL      CLZNT000                     * clear all ZNT fields
          MOVE      ZERO,COUNTER                 * reset line counter
          MOVE      ZERO,SNDCOUNT                * reset send count
.
.         The note type has been completed, so finish.
.
APRCM900  MOVE      ZERO,EXIT
          GOTO      APRCM999
.
APRCM910  MOVE      ONE,EXIT
          GOTO      APRCM999
.
APRCM920  MOVE      TWO,EXIT
.
APRCM999  RETURN
+
.*****************************************************************************
.*                           WZTR0000                                        *
.*          Write Emergency Triage details to the ZTR segment                *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
WZTR0000  MATCH     "1",EMCNAZTR                 * sending ZTR segment ?
          GOTO      WZTR9000 IF NOT EQUAL        * no - finished
.
          MOVE      "ZTR",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [ZTR] segment",*R,*N;
          ENDIF
.
          CALL      CLZTR000                     * clear ZTR fields
.
.         ZTR.1     Presenting Complaint Code (Cat el code)
.
WZTR0100  MOVE      BLANKSTR,ZTR001              * set default value
.
          MATCH     SP70,EMVIUC20                * field populated ?
          GOTO      WZTR0200 IF EQUAL            * no
.
          MOVE      EMVIUC20,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR001
          ENDSET    ZTR001
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATel,EMVIUC20
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR001
          APPEND    FIELDSTR,ZTR001
          APPEND    CARET,ZTR001
          APPEND    "webPAS",ZTR001
          RESET     ZTR001
.
.         ZTR.2     Presenting Complaint Line 1 (text)
.
WZTR0200  MOVE      BLANKSTR,ZTR002              * set default value
.
          MATCH     SP70,EMVICOM1                * field populated ?
          GOTO      WZTR0300 IF EQUAL            * no
.
          MOVE      EMVICOM1,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR002
.
.         ZTR.3     Presenting Complaint Line 2 (text)
.
WZTR0300  MOVE      BLANKSTR,ZTR003              * set default value
.
          MATCH     SP70,EMVICOM2                * field populated ?
          GOTO      WZTR0400 IF EQUAL            * no
.
          MOVE      EMVICOM2,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR003
.
.         ZTR.4     Presenting Complaint Line 3 (text)
.
WZTR0400  MOVE      BLANKSTR,ZTR004              * set default value
.
          MATCH     SP70,EMVICOM3                * field populated ?
          GOTO      WZTR0500 IF EQUAL            * no
.
          MOVE      EMVICOM3,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR004
.
.         ZTR.5     Presenting Complaint Line 4 (text)
.
WZTR0500  MOVE      BLANKSTR,ZTR005              * set default value
.
          MATCH     SP70,EMVICOM4                * field populated ?
          GOTO      WZTR0600 IF EQUAL            * no
.
          MOVE      EMVICOM4,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR005
.
.         ZTR.6     Presenting Complaint Line 5 (text)
.
WZTR0600  MOVE      BLANKSTR,ZTR006              * set default value
.
          MATCH     SP70,EMVICOM5                * field populated ?
          GOTO      WZTR0700 IF EQUAL            * no
.
          MOVE      EMVICOM5,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR006
.
.         ZTR.7     Presenting Complaint Line 6 (text)
.
WZTR0700  MOVE      BLANKSTR,ZTR007              * set default value
.
          MATCH     SP70,EMVICOM6                * field populated ?
          GOTO      WZTR0800 IF EQUAL            * no
.
          MOVE      EMVICOM6,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR007
.
.         ZTR.8     Location (emrlocaf code)
.
WZTR0800  MOVE      BLANKSTR,ZTR008              * set default value
.
          MATCH     SP70,EMVILOCN                * field populated ?
          GOTO      WZTR0900 IF EQUAL            * no
.
          MOVE      EMVILOCN,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR008
          ENDSET    ZTR008
          APPEND    CARET,ZTR008
.
          MOVE      "Unknown code",EMLODESC
          MOVE      EMVILOCN,KEY3
          CALL      RDEMLOC1
          MOVE      EMLODESC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZTR008
          APPEND    CARET,ZTR008
          APPEND    "webPAS",ZTR008
          RESET     ZTR008
.
.         ZTR.9     Accompanying Person (text)
.
WZTR0900  MOVE      BLANKSTR,ZTR009              * set default value
.
          MATCH     SP70,EMVITXT3                * field populated ?
          GOTO      WZTR1000 IF EQUAL            * no
.
          MOVE      EMVITXT3,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR009
.
.         ZTR.10    Arrival Transport (Cat EA code)
.
WZTR1000  MOVE      BLANKSTR,ZTR010              * set default value
.
          MATCH     SP70,EMVIMODE                * field populated ?
          GOTO      WZTR1100 IF EQUAL            * no
.
          MOVE      EMVIMODE,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR010
          ENDSET    ZTR010
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,ANSE,ANSA,EMVIMODE
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR010
          APPEND    FIELDSTR,ZTR010
          APPEND    CARET,ZTR010
          APPEND    "webPAS",ZTR010
          RESET     ZTR010
.
.         ZTR.11    Ambulance Case Number (text)
.
WZTR1100  MOVE      BLANKSTR,ZTR011              * set default value
.
          MATCH     SP70,EMVIAMBL                * field populated ?
          GOTO      WZTR1200 IF EQUAL            * no
.
          MOVE      EMVIAMBL,ZTR011
          STRIP     ZTR011
.
.         ZTR.12    Attendance Source (Cat em code)
.
WZTR1200  MOVE      BLANKSTR,ZTR012              * set default value
.
          MATCH     SP70,EMVIUC21                * field populated ?
          GOTO      WZTR1300 IF EQUAL            * no
.
          MOVE      EMVIUC21,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR012
          ENDSET    ZTR012
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATem,EMVIUC21
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR012
          APPEND    FIELDSTR,ZTR012
          APPEND    CARET,ZTR012
          APPEND    "webPAS",ZTR012
          RESET     ZTR012
.
.         ZTR.13    Streaming (Cat eh code)
.
WZTR1300  MOVE      BLANKSTR,ZTR013              * set default value
.
          MATCH     SP70,EMVIUC16                * field populated ?
          GOTO      WZTR1400 IF EQUAL            * no
.
          MOVE      EMVIUC16,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR013
          ENDSET    ZTR013
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATeh,EMVIUC16
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR013
          APPEND    FIELDSTR,ZTR013
          APPEND    CARET,ZTR013
          APPEND    "webPAS",ZTR013
          RESET     ZTR013
.
.         ZTR.14    Disaster Code (dismasaf code)
.
WZTR1400  MOVE      BLANKSTR,ZTR014              * set default value
.
          PACK      KEY25,EMVIURNO,SP70
          CALL      RSDSPTL1
WZTR1410  CALL      RKDSPTL1                     * UR/visit disaster code ?
          BRANCH    OVRCD,WZTR1500
.
          MATCH     EMVIURNO,DSPLURNO
          GOTO      WZTR1500 IF NOT EQUAL
.
          MATCH     VISNUMBR,DSPLVISN
          GOTO      WZTR1410 IF NOT EQUAL
.
          MOVE      DSPLCODE,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR014
          ENDSET    ZTR014
          APPEND    CARET,ZTR014
.
          MOVE      "Unknown code",DSMADESC
          MOVE      DSPLCODE,KEY9
          CALL      RDDSMAS1
          MOVE      DSMADESC,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZTR014
          APPEND    CARET,ZTR014
          APPEND    "webPAS",ZTR014
          RESET     ZTR014
.
.         ZTR.15    Airway (Cat A1 code)
.
WZTR1500  MOVE      BLANKSTR,ZTR015              * set default value
.
          MATCH     SP70,EMVIUC01                * field populated ?
          GOTO      WZTR1600 IF EQUAL            * no
.
          MOVE      EMVIUC01,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR015
          ENDSET    ZTR015
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATA1,EMVIUC01
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR015
          APPEND    FIELDSTR,ZTR015
          APPEND    CARET,ZTR015
          APPEND    "webPAS",ZTR015
          RESET     ZTR015
.
.         ZTR.16    C Spine (Cat A2 code)
.
WZTR1600  MOVE      BLANKSTR,ZTR016              * set default value
.
          MATCH     SP70,EMVIUC02                * field populated ?
          GOTO      WZTR1700 IF EQUAL            * no
.
          MOVE      EMVIUC02,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR016
          ENDSET    ZTR016
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATA2,EMVIUC02
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR016
          APPEND    FIELDSTR,ZTR016
          APPEND    CARET,ZTR016
          APPEND    "webPAS",ZTR016
          RESET     ZTR016
.
.         ZTR.17    Conscious State (Cat A3 code)
.
WZTR1700  MOVE      BLANKSTR,ZTR017              * set default value
.
          MATCH     SP70,EMVIUC03                * field populated ?
          GOTO      WZTR1800 IF EQUAL            * no
.
          MOVE      EMVIUC03,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR017
          ENDSET    ZTR017
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATA3,EMVIUC03
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR017
          APPEND    FIELDSTR,ZTR017
          APPEND    CARET,ZTR017
          APPEND    "webPAS",ZTR017
          RESET     ZTR017
.
.         ZTR.18    Behavioural 1 (Cat A4 code)
.
WZTR1800  MOVE      BLANKSTR,ZTR018              * set default value
.
          MATCH     SP70,EMVIUC04                * field populated ?
          GOTO      WZTR1900 IF EQUAL            * no
.
          MOVE      EMVIUC04,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR018
          ENDSET    ZTR018
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATA4,EMVIUC04
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR018
          APPEND    FIELDSTR,ZTR018
          APPEND    CARET,ZTR018
          APPEND    "webPAS",ZTR018
          RESET     ZTR018
.
.         ZTR.19    Behavioural 2 (Cat eq code)
.
WZTR1900  MOVE      BLANKSTR,ZTR019              * set default value
.
          MATCH     SP70,EMVIUC25                * field populated ?
          GOTO      WZTR2000 IF EQUAL            * no
.
          MOVE      EMVIUC25,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR019
          ENDSET    ZTR019
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATeq,EMVIUC25
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR019
          APPEND    FIELDSTR,ZTR019
          APPEND    CARET,ZTR019
          APPEND    "webPAS",ZTR019
          RESET     ZTR019
.
.         ZTR.20    Breathing 1 (Cat A5 code)
.
WZTR2000  MOVE      BLANKSTR,ZTR020              * set default value
.
          MATCH     SP70,EMVIUC05                * field populated ?
          GOTO      WZTR2100 IF EQUAL            * no
.
          MOVE      EMVIUC05,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR020
          ENDSET    ZTR020
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATA5,EMVIUC05
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR020
          APPEND    FIELDSTR,ZTR020
          APPEND    CARET,ZTR020
          APPEND    "webPAS",ZTR020
          RESET     ZTR020
.
.         ZTR.21    Breathing 2 (Cat A6 code)
.
WZTR2100  MOVE      BLANKSTR,ZTR021              * set default value
.
          MATCH     SP70,EMVIUC06                * field populated ?
          GOTO      WZTR2200 IF EQUAL            * no
.
          MOVE      EMVIUC06,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR021
          ENDSET    ZTR021
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATA6,EMVIUC06
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR021
          APPEND    FIELDSTR,ZTR021
          APPEND    CARET,ZTR021
          APPEND    "webPAS",ZTR021
          RESET     ZTR021
.
.         ZTR.22    Breathing 3 (Cat A7 code)
.
WZTR2200  MOVE      BLANKSTR,ZTR022              * set default value
.
          MATCH     SP70,EMVIUC07                * field populated ?
          GOTO      WZTR2300 IF EQUAL            * no
.
          MOVE      EMVIUC07,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR022
          ENDSET    ZTR022
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATA7,EMVIUC07
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR022
          APPEND    FIELDSTR,ZTR022
          APPEND    CARET,ZTR022
          APPEND    "webPAS",ZTR022
          RESET     ZTR022
.
.         ZTR.23    Colour 1 (Cat ef code)
.
WZTR2300  MOVE      BLANKSTR,ZTR023              * set default value
.
          MATCH     SP70,EMVIUC14                * field populated ?
          GOTO      WZTR2400 IF EQUAL            * no
.
          MOVE      EMVIUC14,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR023
          ENDSET    ZTR023
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATef,EMVIUC14
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR023
          APPEND    FIELDSTR,ZTR023
          APPEND    CARET,ZTR023
          APPEND    "webPAS",ZTR023
          RESET     ZTR023
.
.         ZTR.24    Colour 2 (Cat eg code)
.
WZTR2400  MOVE      BLANKSTR,ZTR024              * set default value
.
          MATCH     SP70,EMVIUC15                * field populated ?
          GOTO      WZTR2500 IF EQUAL            * no
.
          MOVE      EMVIUC15,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR024
          ENDSET    ZTR024
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATeg,EMVIUC15
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR024
          APPEND    FIELDSTR,ZTR024
          APPEND    CARET,ZTR024
          APPEND    "webPAS",ZTR024
          RESET     ZTR024
.
.         ZTR.25    Pulse 1 (Cat ei code)
.
WZTR2500  MOVE      BLANKSTR,ZTR025              * set default value
.
          MATCH     SP70,EMVIUC17                * field populated ?
          GOTO      WZTR2600 IF EQUAL            * no
.
          MOVE      EMVIUC17,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR025
          ENDSET    ZTR025
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATei,EMVIUC17
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR025
          APPEND    FIELDSTR,ZTR025
          APPEND    CARET,ZTR025
          APPEND    "webPAS",ZTR025
          RESET     ZTR025
.
.         ZTR.26    Pulse 2 (Cat ek code)
.
WZTR2600  MOVE      BLANKSTR,ZTR026              * set default value
.
          MATCH     SP70,EMVIUC19                * field populated ?
          GOTO      WZTR2700 IF EQUAL            * no
.
          MOVE      EMVIUC19,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR026
          ENDSET    ZTR026
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATek,EMVIUC19
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR026
          APPEND    FIELDSTR,ZTR026
          APPEND    CARET,ZTR026
          APPEND    "webPAS",ZTR026
          RESET     ZTR026
.
.         ZTR.27    Skin 1 (Cat ep code)
.
WZTR2700  MOVE      BLANKSTR,ZTR027              * set default value
.
          MATCH     SP70,EMVIUC24                * field populated ?
          GOTO      WZTR2800 IF EQUAL            * no
.
          MOVE      EMVIUC24,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR027
          ENDSET    ZTR027
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATep,EMVIUC24
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR027
          APPEND    FIELDSTR,ZTR027
          APPEND    CARET,ZTR027
          APPEND    "webPAS",ZTR027
          RESET     ZTR027
.
.         ZTR.28 not currently populated
.
WZTR2800
.
.         ZTR.29    Mechanism (Cat E4 code)
.
WZTR2900  PACK      KEY2,ZERO,ONE                * viscod link type = ED visit
          MOVE      CATE4,D2                     * category
          PACK      KEY30,EMVIADMN,SP70          * ED visit key
.
          MOVE      ZERO,F3                      * set repeat counter
.
          PACK      KEY37,KEY2,KEY30,D2,SP70
          CALL      RSVSCOD1
WZTR2910  CALL      RKVSCOD1                     * Get Visit Coding Details
          BRANCH    OVRCD,WZTR2950
.
          MATCH     KEY2,VSCOTYPE                * Correct link type
          GOTO      WZTR2950 IF NOT EQUAL
.
          MATCH     KEY30,VSCOTKEY               * Correct link key
          GOTO      WZTR2950 IF NOT EQUAL
.
          MATCH     D2,VSCOCATG                  * Correct link category
          GOTO      WZTR2950 IF NOT EQUAL
.
          MOVE      VSCOCODE,D3                  * visit code found
          SQUEEZE   D3
.
          MOVE      D3,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          IF        F3 = 0
            MOVE      FIELDSTR,ZTR029            * first code
            ENDSET    ZTR029
          ELSE
            ENDSET    ZTR029
            APPEND    TILDA,ZTR029
            APPEND    D3,ZTR029                  * additional code
          ENDIF
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATE4,D3
          CALL      RDCODE1
          IF        OVRCD = 0
            MATCH     ANSO,TCINDC12
            IF        @EQUAL
              MOVE      VSCOTEXT,FIELDSTR        * other desc from viscodaf
            ELSE
              MOVE      TDESC,FIELDSTR
            ENDIF
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR029
          APPEND    FIELDSTR,ZTR029
          APPEND    CARET,ZTR029
          APPEND    "webPAS",ZTR029
          RESET     ZTR029
.
          ADD       ONE,F3                       * increment repeat count
          GOTO      WZTR2910
.
WZTR2950  IF        F3 = 0
            MOVE      BLANKSTR,ZTR029            * no codes found
          ENDIF
          RESET     ZTR029
.
.         ZTR.30    Anatomical Criteria (Cat E5 code)
.
WZTR3000  PACK      KEY2,ZERO,ONE                * viscod link type = ED visit
          MOVE      CATE5,D2                     * category
          PACK      KEY30,EMVIADMN,SP70          * ED visit key
.
          MOVE      ZERO,F3                      * set repeat counter
.
          PACK      KEY37,KEY2,KEY30,D2,SP70
          CALL      RSVSCOD1
WZTR3010  CALL      RKVSCOD1                     * Get Visit Coding Details
          BRANCH    OVRCD,WZTR3050
.
          MATCH     KEY2,VSCOTYPE                * Correct link type
          GOTO      WZTR3050 IF NOT EQUAL
.
          MATCH     KEY30,VSCOTKEY               * Correct link key
          GOTO      WZTR3050 IF NOT EQUAL
.
          MATCH     D2,VSCOCATG                  * Correct link category
          GOTO      WZTR3050 IF NOT EQUAL
.
          MOVE      VSCOCODE,D3                  * visit code found
          SQUEEZE   D3
.
          MOVE      D3,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          IF        F3 = 0
            MOVE      FIELDSTR,ZTR030            * first code
            ENDSET    ZTR030
          ELSE
            ENDSET    ZTR030
            APPEND    TILDA,ZTR030
            APPEND    D3,ZTR030                  * additional code
          ENDIF
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATE5,D3
          CALL      RDCODE1
          IF        OVRCD = 0
            MATCH     ANSO,TCINDC12
            IF        @EQUAL
              MOVE      VSCOTEXT,FIELDSTR        * other desc from viscodaf
            ELSE
              MOVE      TDESC,FIELDSTR
            ENDIF
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR030
          APPEND    FIELDSTR,ZTR030
          APPEND    CARET,ZTR030
          APPEND    "webPAS",ZTR030
          RESET     ZTR030
.
          ADD       ONE,F3                       * increment repeat count
          GOTO      WZTR3010
.
WZTR3050  IF        F3 = 0
            MOVE      BLANKSTR,ZTR030            * no codes found
          ENDIF
          RESET     ZTR030
.
.         ZTR.31    Physiologic (Cat E6 code)
.
WZTR3100  PACK      KEY2,ZERO,ONE                * viscod link type = ED visit
          MOVE      CATE6,D2                     * category
          PACK      KEY30,EMVIADMN,SP70          * ED visit key
.
          MOVE      ZERO,F3                      * set repeat counter
.
          PACK      KEY37,KEY2,KEY30,D2,SP70
          CALL      RSVSCOD1
WZTR3110  CALL      RKVSCOD1                     * Get Visit Coding Details
          BRANCH    OVRCD,WZTR3150
.
          MATCH     KEY2,VSCOTYPE                * Correct link type
          GOTO      WZTR3150 IF NOT EQUAL
.
          MATCH     KEY30,VSCOTKEY               * Correct link key
          GOTO      WZTR3150 IF NOT EQUAL
.
          MATCH     D2,VSCOCATG                  * Correct link category
          GOTO      WZTR3150 IF NOT EQUAL
.
          MOVE      VSCOCODE,D3                  * visit code found
          SQUEEZE   D3
.
          MOVE      D3,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          IF        F3 = 0
            MOVE      FIELDSTR,ZTR031            * first code
            ENDSET    ZTR031
          ELSE
            ENDSET    ZTR031
            APPEND    TILDA,ZTR031
            APPEND    D3,ZTR031                  * additional code
          ENDIF
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATE6,D3
          CALL      RDCODE1
          IF        OVRCD = 0
            MATCH     ANSO,TCINDC12
            IF        @EQUAL
              MOVE      VSCOTEXT,FIELDSTR        * other desc from viscodaf
            ELSE
              MOVE      TDESC,FIELDSTR
            ENDIF
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR031
          APPEND    FIELDSTR,ZTR031
          APPEND    CARET,ZTR031
          APPEND    "webPAS",ZTR031
          RESET     ZTR031
.
          ADD       ONE,F3                       * increment repeat count
          GOTO      WZTR3110
.
WZTR3150  IF        F3 = 0
            MOVE      BLANKSTR,ZTR031            * no codes found
          ENDIF
          RESET     ZTR031
.
.         ZTR.32    Special Population (Cat E7 code)
.
WZTR3200  PACK      KEY2,ZERO,ONE                * viscod link type = ED visit
          MOVE      CATE7,D2                     * category
          PACK      KEY30,EMVIADMN,SP70          * ED visit key
.
          MOVE      ZERO,F3                      * set repeat counter
.
          PACK      KEY37,KEY2,KEY30,D2,SP70
          CALL      RSVSCOD1
WZTR3210  CALL      RKVSCOD1                     * Get Visit Coding Details
          BRANCH    OVRCD,WZTR3250
.
          MATCH     KEY2,VSCOTYPE                * Correct link type
          GOTO      WZTR3250 IF NOT EQUAL
.
          MATCH     KEY30,VSCOTKEY               * Correct link key
          GOTO      WZTR3250 IF NOT EQUAL
.
          MATCH     D2,VSCOCATG                  * Correct link category
          GOTO      WZTR3250 IF NOT EQUAL
.
          MOVE      VSCOCODE,D3                  * visit code found
          SQUEEZE   D3
.
          MOVE      D3,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          IF        F3 = 0
            MOVE      FIELDSTR,ZTR032            * first code
            ENDSET    ZTR032
          ELSE
            ENDSET    ZTR032
            APPEND    TILDA,ZTR032
            APPEND    D3,ZTR032                  * additional code
          ENDIF
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATE7,D3
          CALL      RDCODE1
          IF        OVRCD = 0
            MATCH     ANSO,TCINDC12
            IF        @EQUAL
              MOVE      VSCOTEXT,FIELDSTR        * other desc from viscodaf
            ELSE
              MOVE      TDESC,FIELDSTR
            ENDIF
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR032
          APPEND    FIELDSTR,ZTR032
          APPEND    CARET,ZTR032
          APPEND    "webPAS",ZTR032
          RESET     ZTR032
.
          ADD       ONE,F3                       * increment repeat count
          GOTO      WZTR3210
.
WZTR3250  IF        F3 = 0
            MOVE      BLANKSTR,ZTR032            * no codes found
          ENDIF
          RESET     ZTR032
.
.         ZTR.33    Restraint (Cat E8 code)
.
WZTR3300  PACK      KEY2,ZERO,ONE                * viscod link type = ED visit
          MOVE      CATE8,D2                     * category
          PACK      KEY30,EMVIADMN,SP70          * ED visit key
.
          MOVE      ZERO,F3                      * set repeat counter
.
          PACK      KEY37,KEY2,KEY30,D2,SP70
          CALL      RSVSCOD1
WZTR3310  CALL      RKVSCOD1                     * Get Visit Coding Details
          BRANCH    OVRCD,WZTR3350
.
          MATCH     KEY2,VSCOTYPE                * Correct link type
          GOTO      WZTR3350 IF NOT EQUAL
.
          MATCH     KEY30,VSCOTKEY               * Correct link key
          GOTO      WZTR3350 IF NOT EQUAL
.
          MATCH     D2,VSCOCATG                  * Correct link category
          GOTO      WZTR3350 IF NOT EQUAL
.
          MOVE      VSCOCODE,D3                  * visit code found
          SQUEEZE   D3
.
          MOVE      D3,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          IF        F3 = 0
            MOVE      FIELDSTR,ZTR033            * first code
            ENDSET    ZTR033
          ELSE
            ENDSET    ZTR033
            APPEND    TILDA,ZTR033
            APPEND    D3,ZTR033                  * additional code
          ENDIF
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATE8,D3
          CALL      RDCODE1
          IF        OVRCD = 0
            MATCH     ANSO,TCINDC12
            IF        @EQUAL
              MOVE      VSCOTEXT,FIELDSTR        * other desc from viscodaf
            ELSE
              MOVE      TDESC,FIELDSTR
            ENDIF
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR033
          APPEND    FIELDSTR,ZTR033
          APPEND    CARET,ZTR033
          APPEND    "webPAS",ZTR033
          RESET     ZTR033
.
          ADD       ONE,F3                       * increment repeat count
          GOTO      WZTR3310
.
WZTR3350  IF        F3 = 0
            MOVE      BLANKSTR,ZTR033            * no codes found
          ENDIF
          RESET     ZTR033
.
.         ZTR.34    Weight (numeric)
.
WZTR3400  MOVE      BLANKSTR,ZTR034              * set default value
          COMPARE   ZERO,PMVXPWGT                * field populated ?
          GOTO      WZTR3500 IF EQUAL            * no
.
          MOVE      PMVXPWGT,F6P2
          DIV       "100",F6P2
          MOVE      F6P2,ZTR034
          SQUEEZE   ZTR034
.
.         ZTR.35    Pain Score (Cat en code)
.
WZTR3500  MOVE      BLANKSTR,ZTR035              * set default value
.
          MATCH     SP70,EMVIUC22                * field populated ?
          GOTO      WZTR3600 IF EQUAL            * no
.
          MOVE      EMVIUC22,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR035
          ENDSET    ZTR035
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATen,EMVIUC22
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR035
          APPEND    FIELDSTR,ZTR035
          APPEND    CARET,ZTR035
          APPEND    "webPAS",ZTR035
          RESET     ZTR035
.
.         ZTR.36    Analgesia Taken (ccyymmddhhmmss)
.
WZTR3600  MOVE      BLANKSTR,ZTR036              * set default value
.
          MATCH     SP70,EMVIUD06                * field populated ?
          GOTO      WZTR3700 IF EQUAL            * no
.
          MOVE      EMVIUD06,ZTR036
          ENDSET    ZTR036
          MATCH     SP8,EMVIUT06
          IF        @EQUAL
            APPEND    "000000",ZTR036            * date only
          ELSE
            APPEND    EMVIUT06,ZTR036            * include time
          ENDIF
          RESET     ZTR036
          REP       ": ",ZTR036
          SQUEEZE   ZTR036
.
.         ZTR.37    Analgesia Declined (1=Yes/0=No)
.
WZTR3700  MOVE      BLANKSTR,ZTR037              * set default value
.
          COMPARE   ZERO,EMVIYN01
          IF        @EQUAL
            MOVE      "0",ZTR037                 * not declined
          ENDIF
          COMPARE   ONE,EMVIYN01
          IF        @EQUAL
            MOVE      "1",ZTR037                 * declined
          ENDIF
          STRIP     ZTR037
.
.         ZTR.38    ADT - Ready for Admission (Cat et code)
.
WZTR3800  MOVE      BLANKSTR,ZTR038              * set default value
.
          MATCH     SP70,EMVIUC28                * field populated ?
          GOTO      WZTR3900 IF EQUAL            * no
.
          MOVE      EMVIUC28,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR038
          ENDSET    ZTR038
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATet,EMVIUC28
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR038
          APPEND    FIELDSTR,ZTR038
          APPEND    CARET,ZTR038
          APPEND    "webPAS",ZTR038
          RESET     ZTR038
.
.         ZTR.39    Immunisation Current (Cat er code)
.
WZTR3900  MOVE      BLANKSTR,ZTR039              * set default value
.
          MATCH     SP70,EMVIUC26                * field populated ?
          GOTO      WZTR4000 IF EQUAL            * no
.
          MOVE      EMVIUC26,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR039
          ENDSET    ZTR039
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATer,EMVIUC26
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR039
          APPEND    FIELDSTR,ZTR039
          APPEND    CARET,ZTR039
          APPEND    "webPAS",ZTR039
          RESET     ZTR039
.
.         ZTR.40    Date Last Ate (ccyymmddhhmmss)
.
WZTR4000  MOVE      BLANKSTR,ZTR040              * set default value
.
          MATCH     SP70,EMVIUD07                * field populated ?
          GOTO      WZTR4100 IF EQUAL            * no
.
          MOVE      EMVIUD07,ZTR040
          ENDSET    ZTR040
          MATCH     SP8,EMVIUT07
          IF        @EQUAL
            APPEND    "000000",ZTR040            * date only
          ELSE
            APPEND    EMVIUT07,ZTR040            * include time
          ENDIF
          RESET     ZTR040
          REP       ": ",ZTR040
          SQUEEZE   ZTR040
.
.         ZTR.41    Date Last Drank (ccyymmddhhmmss)
.
WZTR4100  MOVE      BLANKSTR,ZTR041              * set default value
.
          MATCH     SP70,EMVIUD08                * field populated ?
          GOTO      WZTR4200 IF EQUAL            * no
.
          MOVE      EMVIUD08,ZTR041
          ENDSET    ZTR041
          MATCH     SP8,EMVIUT08
          IF        @EQUAL
            APPEND    "000000",ZTR041            * date only
          ELSE
            APPEND    EMVIUT08,ZTR041            * include time
          ENDIF
          RESET     ZTR041
          REP       ": ",ZTR041
          SQUEEZE   ZTR041
.
.         ZTR.42    Isolation (Cat es code)
.
WZTR4200  MOVE      BLANKSTR,ZTR042              * set default value
.
          MATCH     SP70,EMVIUC27                * field populated ?
          GOTO      WZTR4300 IF EQUAL            * no
.
          MOVE      EMVIUC27,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR042
          ENDSET    ZTR042
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATes,EMVIUC27
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR042
          APPEND    FIELDSTR,ZTR042
          APPEND    CARET,ZTR042
          APPEND    "webPAS",ZTR042
          RESET     ZTR042
.
.         ZTR.43    Drug / Alcohol Taken (1=Yes/0=No)
.
WZTR4300  MOVE      BLANKSTR,ZTR043              * set default value
.
          COMPARE   ZERO,EMVIYN06
          IF        @EQUAL
            MOVE      "0",ZTR043                 * not taken
          ENDIF
          COMPARE   ONE,EMVIYN06
          IF        @EQUAL
            MOVE      "1",ZTR043                 * taken
          ENDIF
          STRIP     ZTR043
.
.         ZTR.44    Non WA Hosp 12 mths (Cat ev code)
.
WZTR4400  MOVE      BLANKSTR,ZTR044              * set default value
.
          MATCH     SP70,EMVIUC30                * field populated ?
          GOTO      WZTR4500 IF EQUAL            * no
.
          MOVE      EMVIUC30,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR044
          ENDSET    ZTR044
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATev,EMVIUC30
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR044
          APPEND    FIELDSTR,ZTR044
          APPEND    CARET,ZTR044
          APPEND    "webPAS",ZTR044
          RESET     ZTR044
.
.         ZTR.45    Triage Date / Time (ccyymmddhhmmss)
.
WZTR4500  MOVE      BLANKSTR,ZTR045              * set default value
.
          MATCH     SP70,EMVITRDT                * field populated ?
          GOTO      WZTR4600 IF EQUAL            * no
.
          MOVE      EMVITRDT,ZTR045
          ENDSET    ZTR045
          MATCH     SP8,EMVITRTM
          IF        @EQUAL
            APPEND    "000000",ZTR045            * date only
          ELSE
            APPEND    EMVITRTM,ZTR045            * include time
          ENDIF
          RESET     ZTR045
          REP       ": ",ZTR045
          SQUEEZE   ZTR045
.
.         ZTR.46    Triage Category (Cat AA code)
.
WZTR4600  MOVE      BLANKSTR,ZTR046              * set default value
.
          MATCH     SP70,EMVITRIG                * field populated ?
          GOTO      WZTR8000 IF EQUAL            * no
.
          MOVE      EMVITRIG,FIELDSTR
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZTR046
          ENDSET    ZTR046
.
          MOVE      "Unknown Code",FIELDSTR
          PACK      KEY5,CATAA,EMVITRIG
          CALL      RDCODE1
          IF        OVRCD = 0
            MOVE      TDESC,FIELDSTR
            CALL      SPCHR000                   * convert special characters
          ENDIF
          APPEND    CARET,ZTR046
          APPEND    FIELDSTR,ZTR046
          APPEND    CARET,ZTR046
          APPEND    "webPAS",ZTR046
          RESET     ZTR046
.
WZTR8000  PACK      SEGSTRNG,ANSZ,ANST,ANSR,PIPE:
                             ZTR001,PIPE,ZTR002,PIPE,ZTR003,PIPE,ZTR004,PIPE:
                             ZTR005,PIPE,ZTR006,PIPE,ZTR007,PIPE,ZTR008,PIPE:
                             ZTR009,PIPE,ZTR010,PIPE,ZTR011,PIPE,ZTR012,PIPE:
                             ZTR013,PIPE,ZTR014,PIPE,ZTR015,PIPE,ZTR016,PIPE:
                             ZTR017,PIPE,ZTR018,PIPE,ZTR019,PIPE,ZTR020,PIPE:
                             ZTR021,PIPE,ZTR022,PIPE,ZTR023,PIPE,ZTR024,PIPE:
                             ZTR025,PIPE,ZTR026,PIPE,ZTR027,PIPE,ZTR028,PIPE:
                             ZTR029,PIPE,ZTR030,PIPE,ZTR031,PIPE,ZTR032,PIPE:
                             ZTR033,PIPE,ZTR034,PIPE,ZTR035,PIPE,ZTR036,PIPE:
                             ZTR037,PIPE,ZTR038,PIPE,ZTR039,PIPE,ZTR040,PIPE:
                             ZTR041,PIPE,ZTR042,PIPE,ZTR043,PIPE,ZTR044,PIPE:
                             ZTR045,PIPE,ZTR046,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WZTR9100:               * connection lost
                         WZTR9200                * timeout
.
WZTR9000  MOVE      ZERO,EXIT
          GOTO      WZTR9999
.
WZTR9100  MOVE      ONE,EXIT
          GOTO      WZTR9999
.
WZTR9200  MOVE      TWO,EXIT
.
WZTR9999  RETURN
+
.*****************************************************************************
.*                           WZST0000                                        *
.*          Write Extra Staff Information details to the ZST segment         *
.* Returns:  EXIT  0 = Segment sent ok                                       *
.*                 1 = Connection lost                                       *
.*                 2 = Timeout                                               *
.*****************************************************************************
WZST0000  MATCH     "1",PTCNSZST                 * sending ZST segment ?
          GOTO      WZST9000 IF NOT EQUAL        * no - finished
.
          MOVE      "ZST",SEGMENT
          MOVE      TWO,MLOGFLAG
          IF        DISPFLAG = 1
            DISPLAY   "Formatting [ZST] segment",*R,*N;
          ENDIF
.
          CALL      CLZST000                     * clear ZST fields
.
.         ZST.1     Staff Name - Extended
.
WZST1000  MOVE      PMHCSNAM,FIELDSTR            * surname
          CALL      SPCHR000                     * convert special characters
          MOVE      FIELDSTR,ZST001
          ENDSET    ZST001
          APPEND    CARET,ZST001
          MOVE      PMHCGNAM,FIELDSTR            * given name
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZST001
          APPEND    CARET,ZST001
          APPEND    CARET,ZST001
          APPEND    CARET,ZST001
          MOVE      PMHCTITL,FIELDSTR            * title
          CALL      SPCHR000                     * convert special characters
          APPEND    FIELDSTR,ZST001
          APPEND    CARET,ZST001
          APPEND    CARET,ZST001
          APPEND    ANSL,ZST001
          RESET     ZST001
.
          MATCH     "1",PTCNISTF                 * sending HPI-I ? 0939978
          GOTO      WZST8000 IF NOT EQUAL
.
          ENDSET    ZST001
          APPEND    CARET,ZST001
          MATCH     SP70,PMHCNHTA
          IF        @EQUAL
            APPEND    BLANKSTR,ZST001
          ELSE
            MOVE      PMHCNHTA,FIELDSTR          * hpi-i number
            CALL      SPCHR000                   * convert special characters
            APPEND    FIELDSTR,ZST001
          ENDIF
          APPEND    CARET,ZST001
          APPEND    "HPI-I Number",ZST001
          APPEND    CARET,ZST001
          APPEND    "webPAS",ZST001
          RESET     ZST001
.
WZST8000  PACK      SEGSTRNG,ANSZ,ANSS,ANST,PIPE:
                             ZST001,CRETURN
.
          CALL      SENDM000                     * send message
          BRANCH    EXIT,WZST9100:               * connection lost
                         WZST9200                * timeout
.
WZST9000  MOVE      ZERO,EXIT
          GOTO      WZST9999
.
WZST9100  MOVE      ONE,EXIT
          GOTO      WZST9999
.
WZST9200  MOVE      TWO,EXIT
.
WZST9999  RETURN
+
.*****************************************************************************
.*        I/O Includes                                                       *
.*****************************************************************************
.
          INC       STD002IO
.
          INC       CLEMRVIS
          INC       CLNHIMAS
          INC       CLPATDSC
          INC       CLPATMAS
          INC       CLPMSPX2
          INC       CLPMSVX1
          INC       CLWATTX1
          INC       DAYOFWEK
          INC       GETDRG
          INC       GETEFDRG
          INC       HL7CLRVR                     * HL7 field clearing routines
          INC       HL7COMN                      * HL7 common routines
          INC       TFILENAM
          INC       CLPMSQPX
.
          INC       ALLDIAIO/INC
          INC       ALLEIDIO/INC
          INC       ALLLNKIO/INC
          INC       ALLQUEIO/INC
          INC       ALLPRRIO/INC
          INC       ALLREFIO/INC
          INC       ALLSERIO/INC
          INC       BOKRC1IO/INC
          INC       CATCOMIO/INC
          INC       COMERHIO/INC
          INC       DISMASIO/INC
          INC       DISPTLIO/INC
          INC       EMRCLIIO/INC
          INC       EMRHISIO/INC
          INC       EMRICDIO/INC
          INC       EMRLOCIO/INC
          INC       EMRSITIO/INC
          INC       EMRQUEIO/INC
          INC       EMRVCDIO/INC
          INC       EMRVISIO/INC
          INC       HL7CISIO/INC
          INC       HL7URHIO/INC
          INC       IBAALVIO/INC
          INC       IBAPOSIO/INC
          INC       MEHDIAIO/INC
          INC       MEHDLSIO/INC
          INC       MEHDS1IO/INC
          INC       MEHHLSIO/INC
          INC       MEHVI1IO/INC
          INC       MLTHCPIO/INC
          INC       MRTMASIO/INC
          INC       MRTLOCIO/INC
          INC       NHIETHIO/INC
          INC       NHIMASIO/INC
          INC       OPRCLIIO/INC
          INC       OPRNURIO/INC
          INC       OPROPRIO/INC
          INC       OPRQUEIO/INC
          INC       OPRSESIO/INC
          INC       OUTBB1IO/INC
          INC       OUTBOAIO/INC
          INC       OUTCLIIO/INC
          INC       OUTCTYIO/INC
          INC       OUTDIAIO/INC
          INC       OUTHEDIO/INC
          INC       OUTMA1IO/INC
          INC       OUTQMAIO/INC
          INC       OUTQTYIO/INC
          INC       OUTQUEIO/INC
          INC       OUTRQUIO/INC
          INC       OUTSESIO/INC
          INC       OUTSITIO/INC
          INC       OUTTHIIO/INC
          INC       PATALRIO/INC
          INC       PATATRIO/INC
          INC       PATCFAIO/INC
          INC       PATCODIO/INC
          INC       PATDADIO/INC
          INC       PATDGWIO/INC
          INC       PATDO1IO/INC
          INC       PATDSCIO/INC
          INC       PATECDIO/INC
          INC       PATECOIO/INC
          INC       PATEORIO/INC
          INC       PATFN1IO/INC
          INC       PATFX1IO/INC
          INC       PATGSRIO/INC
          INC       PATHSPIO/INC
          INC       PATICDIO/INC
          INC       PATICOIO/INC
          INC       PATIN1IO/INC
          INC       PATINVIO/INC
          INC       PATLINIO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PATONLIO/INC
          INC       PATPGRIO/INC
          INC       PATRE1IO/INC
          INC       PATTRNIO/INC
          INC       PATVADIO/INC
          INC       PATVISIO/INC
          INC       PATWC1IO/INC
          INC       PATWMAIO/INC
          INC       PATWR1IO/INC
          INC       PATWVEIO/INC
          INC       PMSAIDIO/INC
          INC       PMSALNIO/INC
          INC       PMSBRQIO/INC
          INC       PMSCCDIO/INC
          INC       PMSCEXIO/INC
          INC       PMSDIVIO/INC
          INC       PMSDTCIO/INC
          INC       PMSEDGIO/INC
          INC       PMSEXTIO/INC
          INC       PMSHCGIO/INC
          INC       PMSHCLIO/INC
          INC       PMSHCPIO/INC
          INC       PMSNUTIO/INC
          INC       PMSPX2IO/INC
          INC       PMSQDRIO/INC
          INC       PMSQPTIO/INC
          INC       PMSQVIIO/INC
          INC       PMSRELIO/INC
          INC       PMSTEMIO/INC
          INC       PMSTMDIO/INC
          INC       PMSVX1IO/INC
          INC       PMSWORIO/INC
          INC       PMSWX1IO/INC
          INC       VISCMTIO/INC
          INC       VISCODIO/INC
          INC       VISMDTIO/INC
          INC       VISMTXIO/INC
          INC       VISXDCIO/INC
          INC       COMPARIO/INC
          INC       IBAPOLIO/INC
          INC       WATOPAIO/INC
          INC       WATOPSIO/INC
          INC       WATPROIO/INC
          INC       WATTR1IO/INC
          INC       WATTX1IO/INC
          INC       WATQUEIO/INC
          INC       WEBERRIO/INC
          INC       WEBSECIO/INC
