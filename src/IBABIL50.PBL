.*******************************************************************************
.*                                                                             *
.*                      P R O G R A M   S U M M A R Y                          *
.*                      -------------   -------------                          *
.*                                                                             *
.*     PROGRAM NAME :  IBABIL50                                                *
.*                                                                             *
.*     FUNCTION     :  PHISCo HEALTH DEPARTMENT TRANSMISSIONS (NSW)            *
.*                     - Private Hospital Inpatient Statistical Collection     *
.*                                                                             *
.*     DATE CREATED :  23/05/2013                                              *
.*                                                                             *
.*     MODIFICATIONS:                                                          *
.*-----------------------------------------------------------------------------*
.*        V12.00.01 21/05/2025  Bella Turco    Task 0955096                    *
.*                  Alphanumeric changes                                       *
.*        V11.03.01 07/07/2023  Alina Bhari    Task 0933842                    *
.*                  Commented out the error message "Contract status =1,       *
.*                  there must be a procedure from IBABIL50"                   *
.*        V11.01.01 27/04/2021  Ebon Clements  Task 0902746                    *
.*                  Report gender from category G indicator 1 - TRSEX          *
.*                  Valid values are 1, 2, 3 or 9                              *
.*        V11.00.01 10/03/2020  Jill Parkinson Task 0879163                    *
.*                  Added include SEXDSCIO                                     *
.*          V10.14.02  09/08/2019  Ebon Clements TSK 0879442                   *
.*                     Fixed duplicate reporting of the first procedure        *
.*                     code - WREC3002                                         *
.*          V10.14.01  02/07/2019  Thanh T.      TSK 0875725                   *
.*                     Changed VALD0000/RACE1 to include the valid option 16   *
.*                     for validating the source of referral with the          *
.*                     Collaborative Care type. This is the Category S - HDP   *
.*                     default position 2 to 3.                                * 
.*-----------------------------------------------------------------------------*
.*          V10.13.02  25/10/2018  Ania P        TSK 0865142                   *
.*                     Changed sex to 3 if sex is 4                            *
.*          V10.13.01  15/10/2018  Ebon Clements TSK 0846759                   *
.*                     Clear TIDUMH Total involuntary MH days WREC2000         *
.*          V10.12.01  29/06/2018  Ebon Clements TSK 0859055                   *
.*                     Report external cause codes - PDIS6000                  *
.*          V10.11.02  08/09/2017  Ebon Clements TSK 0818097                   *
.*                     Added excluded newborn functionality -  EXNB0000        *
.*          V10.11.01  11/07/2017 Jill Parkinson TSK 0841608                   *
.*                     Removed claim code check for dva - should be cat KK     *
.*          V10.10.08  11/07/2017 Jill Parkinson TSK 0841608                   *
.*                     Corrected error message for missing DVA details         *
.*          V10.10.07  06/07/2017 Richa Phogat   TSK 0841608                   *
.*                     Corrected to not display Card Type when no DVA Card is  *
.*                     linked to a patient                                     *
.*          V10.10.06  16/06/2017 Jill Parkinson TSK 0836455                   *
.*                     Corrected to print hospital name from Hospital file     *
.*          V10.10.05  05/06/2017 Richa Phogat   TSK 0836455                   *
.*                     Modified to print hospital details from Hospital file   *
.*                     PATHSPAF instead of control file                        *
.*          V10.10.04  25/05/2017 J.Tan          TSK 0836455                   *
.*                     Mod multi hospital to use pmsprdaf for from/todate      *
.*          V10.10.03  26/04/2017 Richa Phogat   TSK 0836455                   *
.*                     Added code to allow multi hospital sites to select the  *
.*                     hospital that they are running the extract for          *
.*          V10.10.02  16/03/2017 Richa Phogat   TSK 0832066                   *
.*                     Changed DVA Card Number and DVA Card colour to be       *
.*                     collected from PMCDCNUM.PMSCCDFD and PMCDDVAC.PMSPX2FD  *
.*                     instead of PREPAT.PMIMA1FD and PMPXDVAC.PMIMA1FD        *
.*          V10.10.01  09/03/2017 Tracey Nguyen  CAR 0826808                   *
.*                     Use parameter PTCNPHIS and EFFDATE to determine the     *
.*                     Service Category                                        *
.*          V10.08.02  10/08/2016 Jill Parkinson TSK 0822571                   *
.*                     Added replace spaces with 0 for ICU hours               *
.*          V10.08.01  05/04/2016 Ania P         CAR 322540                    *
.*                     Initialized EMPLSTAT                                    *
.*          V10.07.01  15/01/2015 Ania P         CAR 324086                    *
.*                     Added cat CL check                                      *
.*          V10.06.06  07/08/2015 Jill Parkinson CAR 319890                    *
.*                     Mods to only REP " 0",TREFTO if is has a value          *
.*          V10.06.05  01/06/2015 Jill Parkinson CAR 317467                    *
.*                     Changed category YF to use pmvxudf8 instead of pmvxudf7 *
.*          V10.06.04  13/05/2015 Jill Parkinson CAR 316546                    *
.*                     Changed TSTATE to send PADD4 and added default of 99    *
.*          V10.06.03  25/04/2015 Jill Parkinson CAR 315241                    *
.*                     Changed to use National HCP for country of birth        *
.*                     instead of HDP Equivalent                               *
.*                     Added use of pmvxudf7 for Referred to on Separation     *
.*          V10.06.02  18/03/2015 Ania P            CAR 311205                 *
.*                     Minor code change to DSCD5000                           *
.*          V10.06.01  11/03/2015 Ania P            CAR 311205                 *
.*                     Added DSCD5000. Removed VIST0000                        *
.*          V10.05.02  16/12/2014 Sandra Barcham    CAR 297828                 *
.*                     Fix duplicate operation codes                           *
.*          V10.05.01  16/12/2014 Sandra Barcham    CAR 297828                 *
.*                     Fix gaps in disease list                                *
.*          V10.04.02  20/05/2014 Sandra Barcham    CAR 301365                 *
.*                     Use PT0ODTMN to stop Operation Date exists, no op date  *
.*          V10.04.01  15/01/2014 Sandra Barcham    CAR 296117                 *
.*                     Fix procedure date mandatory errors                     *
.*          V10.03.04  22/11/2013   Ania P          CAR 292636                 *
.*                     Corrected FROMDATE/CHCSST issues.                       *
.*          V10.03.03  08/11/2013   Ania P          CAR 292636                 *
.*                     Changed TPHIC from N->0 & Y->1                          *
.*          V10.03.02  11/09/2013   Ania P          CAR 291313                 *
.*                     Fixed match of DPTEOCNT from " 1" to "  1" in POPR4000  *
.*                     Fixed VALD8000. Removed ELSE after PTMORBDT BRANCH      *
.*          V10.03.01  27/06/2013   Ania P          CAR 274965                 *
.*                     Fixed TMDEINO,TPRDATE8 and TRLANG issues                *
.*          V10.03.00  23/05/2013   Ania P          CAR 274965                 *
.*                     Created program.                                        *
.*******************************************************************************

          INC       STD001FD
          INC       IBAPOSFD/INC
          INC       OPRDEAFD/INC
          INC       PATCALAG/INC
          INC       PATCMPFD/INC
          INC       PATCONFD/INC
          INC       PATCODFD/INC
          INC       PATDADFD/INC   
          INC       PATVADFD/INC   
          INC       PATDSCFD/INC
          INC       PATECDFD/INC
          INC       PATECOFD/INC
          INC       PATFN1FD/INC
          INC       PATICDFD/INC
          INC       PATICOFD/INC
          INC       PATICUFD/INC
          INC       PATMA1FD/INC
          INC       PMSPX2FD/INC
          INC       HL7BMTFD/INC
          INC       PATHSPFD/INC            * Hospital Details table
          INC       PATMI1FD/INC
          INC       PATPGRFD/INC
          INC       PATTRNFD/INC
          INC       PATVISFD/INC
          INC       PMSVX1FD/INC
          INC       PMSCCDFD/INC
          INC       PMSPRDFD/INC
          INC       PATWR1FD/INC
          INC       PATWVEFD/INC
          INC       PATDHEAD/INC
.
.
.         Transmission file layout
.----------------------------------------------
.
WORK1     FILE      ASCII, FIXED=1295
.
.NAME     TYPE    LENGTH    START   DESCRIPTION
.----     ----    ------    -----   -----------

TRECNO    DIM       5          1  * Sequence Number
THOSCOD   DIM       4          6  * Hospital Code
TRURNO    DIM      10         10  * Medical Record Number (U/R No.)
TMEDINO   DIM      11         20  * Medicare Number
TREADMN   DIM       1         31  * Re-admission Within 28 Days?
TRHRICU   DIM       4         32  * Hours in ICU
TRLEAVE   DIM       3         36  * Leave days
TNLEAVE   DIM       2         39  * Number of Leave Periods
THRSMV    DIM       4         41  * Total Hours on Mechanical Ventilation
TFNAME    DIM      40         45  * Patients First Name
TMNAME    DIM      40         85  * Patients Middle Name
TSNAME    DIM      40        125  * Patients Last Name
TPRNM     DIM      40        165  * Patient's Property Name (not recorded)
TUFNO     DIM       5        205  * Unit/Flat No. (not recorded)
TSTRNO    DIM       5        210  * Street Number
TSTRNM    DIM       60       215  * Street Name
TLOCAL    DIM       46       275  * Locality/Suburb
TSTATE    DIM       3        321  * State
TPOST     DIM       4        324  * Post Code
TBDATE8   DIM       8        328  * Date of Birth ddmmyyyy
TRSEX     DIM       1        336  * Sex
TCNTRY    DIM       4        337  * Country of Birth
TRLANG    DIM       4        341  * Language Usually Spoken at Home
TRACE     DIM       1        345  * Aboriginal & TI Origin
TRADAT8   DIM       8        346  * Admission Date
TRADMTM   DIM       4        354  * Admission Time
TREMERG   DIM       1        358  * Urgency of Admission
THCOVER   DIM       1        359  * Health Insurance Status on Admission
TRCONST   DIM       1        360  * Collaborative Care Status
TRSREF    DIM       2        361  * Source of Referral
TRHREFF   DIM       4        363  * Facility Transferred From
TRAMBNO   DIM       14       367  * Ambulance Client Number
TYRPSYC   DIM       1        381  * Previous Specialised Treatment
TDDATE8   DIM       8        382  * Separation Date   
TRSEPTM   DIM       4        390  * Separation Time
TPSTAT    DIM       2        394  * Payment Status on Separation
TDSMODE   DIM       2        396  * Mode of Separation
TAREAT    DIM       4        398  * Facility Transfered to
TPHIC     DIM       1        402  * Private health insurance claim
TRBWGHT   DIM       4        403  * Neonate Admission Weight           
TRBDAYS   DIM       1        407  * Unqualified Baby Bed Days
TIDUMH    DIM       5        408  * Total involuntary days under MH Act
TDRGMH    DIM       1        413  * DRG Mental Health Legal status
TPSYDAYS  DIM       5        414  * Psychiatric Unit Days
TUSUACC   DIM       2        419  * Type of Usual accommodation
TMSTAT    DIM       1        421  * Marital Status
EMPLSTAT  DIM       1        422  * Employment Status
TREFTO    DIM       2        423  * Referred to on Separation
TDVACT    DIM       1        425  * DVA Card Type
TDVACN    DIM       9        426  * DVA Card Number
.
.
.-------- Below array-related vars not in order ------------------------------.
.
TPRDIAG   DIM       8        435  * Principal Diagnosis
TPRCONON  DIM       1        443  * Principal Condition Onset
TRDIAG    DIM       8[50]    444  * Diagnosis 1 - 49 (Diagnosis 1 separate)
TRDIAGCD  DIM       1[50]    ---  * Diagnosis Onset Code 1 - 49 ("1" or "2")
TPROCCD   DIM       7[50]    885  * Procedure Code 1 - 50
TPROCLOC  DIM       1[50]    ---  * Procedure Location 1 - 50
TPRDATE8  DIM       8        893  * Date of First Listed Procedure
.-----------------------------------------------------------------------------.
.
TUPLTHEA  DIM       1       1293  * Unplanned visit to theatre
TRATYPE   DIM       1       1294  * Service category
DELIND    DIM       1       1295  * Delete Episdode
.
.
.         LOCAL VARIABLES         
. ------------------------------
.
ARRAYCNT  FORM      2        N/A  * Counter for arrays
BABYFLAG  FORM      1
BJDAY     FORM      3
.
CARDTYPE  FORM      1             * concession card type
CALDAYS   FORM      6
CDYSDAYS  FORM      6
CDYSFDTE  DIM       8
CDYSTDTE  DIM       8
CDYSYEAR  FORM      2
CJDAY     FORM      3
CMDLINE   DIM       100
CMPCNT    FORM      1
CODE      DIM       3 
CODEFLG   FORM      1
CODEIN10  FORM      1             * Coded in ICD10 ? 0 = No, 1 = Yes
COUNT     FORM      2
CURDATE   DIM       8
.
DATETIME  DIM       14
DIM1A     DIM       1
DIM3      DIM       3
DIM8      DIM       8
DIM20     DIM       20
DISCADMN  FORM      1
DISKNAME  DIM       9             * (NSW,CFILENO)
DAYCASE   FORM      1
DOYR2017  FORM      1
DVAFLAG   FORM      1             
.
EPSCODE   FORM      1             * Episode coding flag
EPSNO     FORM      2             * Episode no
EXTFLAG   FORM      1
.
FILENAME  DIM       8
FNDRECA   FORM      1
FNDRECB   FORM      1
FORM5     FORM      5
FORM10    FORM      10
FROMDATE  DIM       8             * From Date in CCYYMMDD format
FTRLEAVE  FORM      3
FTNLEAVE  FORM      2
FTRBWGHT  FORM      4
FTPSYDAY  FORM      5
.
HIHFOUND  FORM      1
IBCNMHOS  FORM      1
INVTRAP   FORM      1
INVTRPS   FORM      1
LEAVDATE  DIM       8
LATSEP    DIM       10
MRCNEPSC  FORM      1
OLDATYPE  DIM       3
PAGNNO    FORM      5
PRMFLAG   FORM      1
PUBPRIV   FORM      1             * Public or Private Patient
QUALADOB  FORM      1             * Qualified after DOB flag
QUALODOB  FORM      1             * Qualified on DOB flag
RETNDATE  DIM       8
.
STRING    DIM       4
SAVADMN   DIM       8
SAVDATE   DIM       8
STRDATE   DIM       8             * psychiatric starting date
ENDDATE   DIM       8             * psychiatric ending date
.
TLOSDIA   DIM       5
TRLEGST   DIM       2             * Adm MH Status - used for TIDUMH calc.
TRBABYS   DIM       1             * Qualified Baby Flag
TPSYFLG   FORM      1             * flag for psychiatric
TODATE    DIM       8
TRBATCH   DIM       5
TYPC1     DIM       1
.
USACCODE  DIM       3
USACCAT   DIM       2
UNQBDAYS  FORM      5
.
.
.         CONSTANTS
.---------------------------
.
CATBT     INIT      "BT"
CATCC     INIT      "CC"
CATP1     INIT      "P1"
CATP2     INIT      "P2"
CATP3     INIT      "P3"
CATP4     INIT      "P4"
CATP5     INIT      "P5"
CATP6     INIT      "P6"
CATU1     INIT      "U1"
CATU2     INIT      "U2"
CATU3     INIT      "U3"
CATU4     INIT      "U4"
CATU5     INIT      "U5"
CATU6     INIT      "U6"
CATU7     INIT      "U7"
CATU8     INIT      "U8"
CATU9     INIT      "U9"
CATU10    INIT      "V1"
CATU11    INIT      "V2"
CATVI     INIT      "VI"
CATCL     INIT      "CL"
CATCT     INIT      "ct"
.
EFFDATE   INIT      "20170701"  
OYEAR     FORM      "365"
.
ERRDESC   DIM       70
SEPDATE   DIM       10
ERRFND    FORM      1
Z20       INIT      "ZZZZZZZZZZZZZZZZZZZZ"
SP100     DIM       100
SP82      DIM       82
.
CNTLOC    FORM      1
CNTACT    FORM      1
ECODE     DIM       1
.
XXX       FORM      2
.
PRGID     INIT      "IBABIL50"
PRGNAM    INIT      "NSW PHISCo Extract"
VERSION   INIT      "V12.00.01"
+
.*******************************************************************************
.                   MAINLINE                                                   *
.                   Main Controlling Logic                                     *
.*******************************************************************************
ML0000    CALL      INIT0000                     * Init and open files
ML1000    CALL      OPTN0000                     * Select options
          BRANCH    OPTION,ML2000,ML2000    
          GOTO      ML9999
.
ML2000    CALL      KHOS0000                     * Keyin hospital if required
          BRANCH    EXIT,ML1000
.
          CALL      KEYD0000                     * Keyin ending date
          BRANCH    EXIT,ML1000
.
ML3000    CALL      FILE0000                     * Keyin the filename
          BRANCH    EXIT,ML2000
.
ML4000    CALL      KPPP0000                     * Keyin Public/Private/Both
          BRANCH    EXIT,ML1000
.
          CALL      CONTQST                      * Ok to Continue (Y/N/C) ?
          BRANCH    CEXIT,ML5000,ML4000,ML1000
.                         Yes    No     Cancel
.
ML5000    CALL      PROC0000                     * Processing disch. patients
          BRANCH    EXIT,ML1000
.
          CALL      ENDP0000                     * End of processing
.
          CALL      MVEXT000                     * Move Extract to Web Dir
.
ML9999    CHAIN     PGM
          STOP
+
.*******************************************************************************
.                   INIT0000                                  Called by ML1000 *
.                   Initialization routine                                     *
.*******************************************************************************
INIT0000  CALL      DISPHEAD
          CALL      IBACLOCK
          DISPLAY   *P56:24,"Opening patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"ibapostf";
          OPEN      IBAPOST1,"ibapostf"
.
          DISPLAY   *P64:24,"patdschf";
          OPEN      PATDSCH2,"patdschf"
.
          DISPLAY   *P64:24,"patdadaf";
          OPEN      PATDADA1,"patdadaf"
.
          DISPLAY   *P64:24,"pathspaf";
          OPEN      PATHSPA1,"pathspaf"
.
          DISPLAY   *P64:24,"patvadaf";
          OPEN      PATVADA1,"patvadaf"
.
          DISPLAY   *P64:24,"patecdaf";
          OPEN      PATECDA1,"patecdaf"
.
          DISPLAY   *P64:24,"patecoaf";
          OPEN      PATECOA1,"patecoaf"
.
          DISPLAY   *P64:24,"paticuaf";
          OPEN      PATICUA1,"paticuaf"
.
          DISPLAY   *P64:24,"paticddf";
          CALL      OPICD1
.
          DISPLAY   *P64:24,"paticdof";
          CALL      OPICO1
.
          DISPLAY   *P64:24,"patfn1af";
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P64:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
          
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
.
          DISPLAY   *P64:24,"patpgraf";
          OPEN      PATPGRA1,"patpgraf"
.
          DISPLAY   *P64:24,"pattranf";
          OPEN      PATTRAN2,"pattranf"
.
          DISPLAY   *P64:24,"patvisaf";
          OPEN      PATVISA1,"patvisaf"
          OPEN      PATVISA2,"patvisaf"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"pmsccdaf";
          OPEN      PMSCCDA1,"pmsccdaf"
.
          DISPLAY   *P64:24,"pmsprdaf";
          OPEN      PMSPRDA1,"pmsprdaf"
.
          DISPLAY   *P64:24,"patwr1af";
          OPEN      PATWR1A1,"patwr1af"
.
          DISPLAY   *P64:24,"patwvetf";
          OPEN      PATWVET1,"patwvetf"
.
          DISPLAY   *P64:24,"oprdetaf";
          OPEN      OPRDETA2,"oprdetaf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
.         Get the Hospital file number
.
          READ      CONTROLF,TEN;*54,CFILENO
          READ      CONTROLF,TEN3;*213,CHCSCOD,*245,CHOSTYP 
          READ      CONTROLF,TEN8;*249,CNXBTCH
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          READ      CONTROLF,TWENTY1;*210,PTCNHOSP,*214,PTCNUREA:
                                     *215,PTCNUDIN,PTCNDTRF:
                                     *220,PTNSWHDP,CNSWLOC
          READ      CONTROLF,FIFTY9;*218,PTMORBDT 
          READ      CONTROLF,SIXTY;*133,MRCNEPSC
          READ      CONTROLF,SEVENTY7;*216,PTCNPALC,PTCNFINP
          READ      CONTROLF,SEVENTY9;*82,PTCNDSCI,*114,PTCNPPPT               
          READ      CONTROLF,EIGHTY;*250,PTCNHDPS
          READ      CONTROLF,EIGHTY8;*237,PTCNEMPL,*239,PTCNOCCP,*241,PTCNCSTA
          READ      CONTROLF,HUND05;*178,PTCNVETR
          READ      CONTROLF,HUND24;*135,PTCNPHIS
.
          MOVE      ZERO,EPSCODE                 * Epsiode coding flag - no
          IF        MRCNEPSC=1 & PTCNHDPS=2
            MOVE      ONE,EPSCODE                * Epsiode coding flag - yes
          ENDIF
.
          MOVE      CFILENO,THOSCOD              * Hospital code
          PACK      CURDATE WITH CCC,CYY,CMM,CDD
          REP       " 0",CURDATE
.
INIT9999  RETURN
+
.*******************************************************************************
.                   OPTN0000                                  Called by ML1000 *
.                   Main options                                               *
.*******************************************************************************
OPTN0000  READ      CONTROLF,EIGHTY8;*124,CHCSST,*132,CHCSED
          MOVE      ZERO,ERRFND
          MOVE      "60",CLNO
.
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Processing the new Run":
                    *P1:6,*V2LON,TWO,*HOFF," = Re-processing the last Run":
                    *P1:8,"Select Option : ";
.
OPTN1000  KEYIN     *P17:8,*EL,*DV,UNDLN1,*P17:8,*V2LON,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      OPTN9000 IF EQUAL
.
          MOVE      ZERO,EXIT
          BRANCH    OPTION,OPTN9999,OPTN9999
          BEEP
          GOTO      OPTN1000
.
OPTN9000  MOVE      ONE,EXIT
OPTN9999  RETURN
+
.*******************************************************************************
.                   KDAT0000                                  Called by ML2000 *
.                   Keyin ending date                                          *
.*******************************************************************************
KEYD0000  COMPARE   ONE,OPTION
          GOTO      KEYD5000 IF NOT EQUAL
.
          MOVE      "10",CVERT
          DISPLAY   *P1:CVERT,*EL,"Ending Date : ";
          MOVE      "15",CCOL
          UNPACK    SP6,CYEAR,CMON,CDAY
          MOVE      CCC,CCENT
          MOVE      ZERO,CHIGHLT
          MOVE      ZERO,CDEFDTE
          CALL      KEYDATE
          BRANCH    OVRCD,KEYD9500
.
          PACK      SAVDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",SAVDATE
.
.         New End Date should be greater than Last End Date
.
          MATCH     SAVDATE,CHCSED
          GOTO      KEYD1000 IF LESS
.
          UNPACK    CHCSED,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P1:24,*EL,*B,*V2LON,"Ending Date must be greater than ":
                    CPCDATE,".  ";
          CALL      HITENTER
          GOTO      KEYD0000
.
.         Processing a new Run - Start Date is one day after previous End Date
.
KEYD1000  MATCH     SP8,CHCSED
          GOTO      KEYD3000 IF EQUAL              * The first time running HDP
.
          UNPACK    CHCSED,XCENT,XYEAR,XMON,XDAY
.
          MOVE      XDAY,DD
          MOVE      XMON,MM
          MOVE      XYEAR,YY
          MOVE      XCENT,CC
          CALL      DMYCON
.
          ADD       ONE,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
.
          PACK      CHCSST,CC,YY,MM,DD
          REP       " 0",CHCSST
.
KEYD3000  MOVE      SAVDATE,CHCSED
.
KEYD5000  MOVE      CHCSST,FROMDATE                        * From and To Dates
          REP       " 0",FROMDATE
          MOVE      CHCSED,TODATE
          REP       " 0",TODATE
.
KEYD9000  BRANCH    IBCNMHOS,KEYD9100
.
          UNPACK    CHCSST,CCENT,CYEAR,CMON,CDAY           * Display date range
          CALL      PACDATE
          DISPLAY   *P53:2,*V2LON,"- ",CPCDATE," to ";        
          UNPACK    CHCSED,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *V2LON,CPCDATE;
.
KEYD9100  MOVE      ZERO,EXIT
          GOTO      KEYD9999
.
KEYD9500  MOVE      ONE,EXIT
KEYD9999  RETURN
+
.*******************************************************************************
.                   FILE0000                                  Called by ML3000 *
.                   Get Extract Filename                                       *
.*******************************************************************************
FILE0000  MOVE      "12",CVERT
          DISPLAY   *P1:CVERT,*EL,"Extract File Name : ";
FILE1000  
          MOVE      "NSW",KEY3
          IF        IBCNMHOS=1
            MOVE      PTHSHOSP,KEY3             * Hospital Code
            STRIP     KEY3
            SQUEEZE   KEY3
          ENDIF
          UNPACK    TODATE,CCENT,CYEAR,CMON,CDAY
          PACK      FILENAME,KEY3,CDAY,CMON
          KEYIN     *P21:CVERT,*EL,*V2LON,*RV,FILENAME;
.
          ENDSET    FILENAME
          APPEND    SP8,FILENAME
          RESET     FILENAME
.
          CMATCH    EXITCHAR,FILENAME
          GOTO      FILE9500 IF EQUAL      
.
          MATCH     SP8,FILENAME
          GOTO      FILE9500 IF EQUAL      
.
          STRIP     FILENAME
          SQUEEZE   FILENAME
          DISPLAY   *P21:CVERT,*EL,*V2LON,*+,FILENAME,".txt";
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      WORK1,FILENAME
          TRAPCLR   IO
          BRANCH    OVRCD,FILE8000               * File doesnt exist
.
          CLOSE     WORK1
.
FILE2000  KEYIN     *P1:24,*B,*EL,"An extraction file with this name":
                    " already exists. Overwrite it (",*V2LON,*DV,ANSY:
                    *HOFF,"/",*V2LON,*DV,ANSN,*HOFF,") ? ",*V2LON,ANS;
          REP       UPPLOW,ANS
          MATCH     ANSY,ANS
          GOTO      FILE8000 IF EQUAL            * Overwrite file
.
          MATCH     ANSN,ANS
          GOTO      FILE1000 IF EQUAL            * Keyin filename again
.
          BEEP
          GOTO      FILE2000
.
FILE8000  PREP      WORK1,FILENAME
FILE9000  MOVE      ZERO,EXIT
          GOTO      FILE9999
.
FILE9500  MOVE      ONE,EXIT
FILE9999  RETURN
+
.*******************************************************************************
.                   KPPP0000                                  Called by ML4000 *
.                   Keyin Private/Public/All Patients                          *
.*******************************************************************************
KPPP0000  DISPLAY   *P1:14,*EF,*V2LON,"0",*HOFF," = Exit":
                    *P1:15,*V2LON,"1",*HOFF," = Extract All Patients":
                    *P1:16,*V2LON,"2",*HOFF," = Extract Public Patients":
                    *P1:17,*V2LON,"3",*HOFF," = Extract Private Patients":
                    *P1:19,"Select Option :";
KPPP1000  MOVE      ONE,COPTION
          KEYIN     *P17:19,*V2LON,*DV,UNDLN2,*P17:19,*RV,COPTION;
.
          COMPARE   ZERO,COPTION
          GOTO      KPPP9500 IF EQUAL
.
          BRANCH    COPTION,KPPP9000,KPPP9000,KPPP9000
.                           
          BEEP
          GOTO      KPPP1000
.
KPPP9000  MOVE      ZERO,EXIT
          GOTO      KPPP9999
.
KPPP9500  MOVE      ONE,EXIT
KPPP9999  RETURN
+
.******************************************************************************
.*                                  KHOS0000              Called by: ML0000   *
.*                        Enter selected Hospital code                        *
.******************************************************************************
KHOS0000  MOVE      ZERO,EXIT
          COMPARE   ONE,IBCNMHOS
          GOTO      KHOS9999 IF NOT EQUAL
.
          MOVE      "21",EVERT
          DISPLAY   *P1:EVERT,*EL,"Hospital Id   : ";
          MOVE      TWENTY7,ECOL
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND           * Not Mandatory
.
          OPEN      PATHSPA1,"pathspaf"
          CALL      PATHSPKY
          BRANCH    EXIT,KHOS3000,KHOS9500
.
          IF        IBCNMHOS = 1
            MOVE      PTHSNAME,CNAME
            MOVE      PTHSHDPC,CFILENO
            MOVE      CFILENO,THOSCOD
          ENDIF
.
          PACK      KEY3,PTHSHOSP,SP70
          CALL      RDPMPRD1
          IF        OVRCD=0
            PACK      CHCSST,PMPRSDAT,SP70
            PACK      CHCSED,PMPREDAT,SP70
          ENDIF
.
          UNPACK    CHCSST,CCENT,CYEAR,CMON,CDAY           * Display date range
          CALL      PACDATE
          DISPLAY   *P53:2,*V2LON,"- ",CPCDATE," to ";
          UNPACK    CHCSED,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *V2LON,CPCDATE;
.
KHOS2000  DISPLAY   *P25:EVERT,*V2LON,PTHSNAME;
          GOTO      KHOS9999
.
KHOS3000  DISPLAY   *P1:24,"Hospital Code not entered for Multi Hospital ":
                           "environment ",*W1;
          PRINT     *1,"Hospital Code not entered for Multi Hospital ":
                       "environment"
          MOVE      SP20,PTHSNAME                                     *I-125462
          MOVE      SP10,PTHSHOSP
.
KHOS9500  MOVE      ONE,EXIT
KHOS9999  RETURN
+
.*******************************************************************************
.                   PROC0000                                 Called by ML50000 *
.                   Processing discharges patients                             *
.*******************************************************************************
PROC0000  MOVE      ZERO,CPAGENO
          UNPACK    TODATE,XCENT,XYEAR,XMON,XDAY
.
          MOVE      ZERO,DOYR2017           * Default No, todate before
          MATCH     EFFDATE,TODATE          * Is Todate on/after effective date?
          IF        !@LESS
            MOVE      ONE,DOYR2017          * Yes
          ENDIF
.
          MOVE      ZERO,DELIND
.
          SETLPTR   SP82                         * Fillers for header record
          SETLPTR   SP100
.
          SETLPTR   TMNAME                       * Recorded in TSNAME           
          SETLPTR   TPRNM                        * Not recorded in PAS
          SETLPTR   TUFNO                        * Not recorded in PAS
.
.
..................  HEADER RECORD ..............................................
.      
          CLOSE     WORK1
          PREP      WORK1,FILENAME
          WRITE     WORK1,SEQ;"HEAD":                          * Record ID
                              "00000":                         * Record Count
                              THOSCOD:                         * Facility Code
                              SP100,SP100,SP100,SP100,SP100:   * \
                              SP100,SP100,SP100,SP100,SP100:   * - Blank Filler
                              SP100,SP100,SP82                 * /
.
................................................................................
.
          DISPLAY   *P1:24,*EL,*P20:24,*V2LON,"** Processing Discharges **",*W:
                    *P20:24,*EL,"Discharged Admission No. : ";
.
          MOVE      ZERO,PAGNNO                  * Record number
          MOVE      ZERO,TRECNO                  * Record number
          MOVE      SP8,TDDATE8
.
          PACK      KEY16,FROMDATE,SP70
          CALL      RDSDSCH2
PROC1000  CALL      RDKDSCH2 
          BRANCH    OVRCD,PROC9000
.
          MATCH     DDATE,TODATE
          GOTO      PROC9000 IF LESS
.
          MOVE      ZERO,BABYFLAG
          DISPLAY   *P45:24,*V2LON,DADMNO;
.
          PACK      TMEDINO,SP70
          PACK      PTMXMCCD,SP70
          PACK      KEY8,DURNO,SP70
          CALL      RDMAST1
          BRANCH    OVRCD,PROC3000 
.
          PACK      KEY8,PURNO,SP70
          CALL      RDPMPX21
          BRANCH    OVRCD,PROC3000 
.
          PACK      KEY8,DADMNO,SP70
          CALL      RDMISS1
          BRANCH    OVRCD,PROC4000 
.
          CALL      EXNB0000                  * Excluded newborn
          BRANCH    EXIT,PROC1000
.
          MOVE      SP1,TCINDC3
          PACK      KEY5,ANSA,SP1,ATYPE,SP70
          CALL      RDCODE1
          IF        OVRCD=0
            MATCH     "B",TCINDC3                * Boarder ?
            GOTO      PROC1000 IF EQUAL          * If yes then exclude
          ENDIF
.
          MOVE      SP3,ACODE                   
          MOVE      DAADMNO,KEY8
          CALL      RDPTVIS1 
          BRANCH    OVRCD,PROC1000
.
          PACK      KEY8,DDADMNO
          CALL      RDPMVX11                * Read a visit extension record
          BRANCH    OVRCD,PROC1000          
.
          IF        IBCNMHOS=1
            MATCH     PMVXMHOS,PTHSHOSP
            GOTO      PROC1000 IF NOT EQUAL
          ENDIF
.
          MOVE      DPVIBILL,KEY8
          CALL      RDPMVX11 
          BRANCH    OVRCD,PROC2500
.
          MOVE      PMVXCADM,ACODE               * Admission Criteria (Cat VB)
          MATCH     SP3,ACODE
          IF        @EQUAL
            MOVE      "1" TO TCINDC2
            GOTO      PROC1500
          ENDIF
.
          MOVE      SP1,TCINDC2
          PACK      TCODE,ANSV,ANSB              * Cat VB Ind02 - Private = 2
          PACK      KEY5,TCODE,ACODE
          CALL      RDCODE1                  
          BRANCH    OVRCD,PROC1000

PROC1500  MOVE      TCINDC2,PUBPRIV              * 2=Public 3=Private (1=All)
.
          IF        COPTION=2
            MATCH     "1",TCINDC2
            GOTO      PROC1000 IF NOT EQUAL      * Not Public
          ENDIF
.                                            
          IF        COPTION=3
            MATCH     "2",TCINDC2
            GOTO      PROC1000 IF NOT EQUAL      * Not Private
          ENDIF
.
          
          MOVE      ZERO,DVAFLAG                              
          CALL      PYSP0000                     * Payment Status on Separation
          MATCH     "50",TPSTAT                  * Status "50" = DVA 
          GOTO      PROC2500 IF NOT EQUAL                            
          MOVE      ONE,DVAFLAG                          
.
PROC2500  MOVE      SP4,THCSCOD                  * Admission Status     
          PACK      KEY5,ANSP,SP1,ACLSS          * 1 = Emergency
          CALL      RDCODE1                      * 2 = Planned
          MOVE      THCSCOD,TREMERG              * 3 = Other
.
          CALL      CHKC0000                     * Check if the patient coded
          BRANCH    CODEFLG,PROC1000
.
          MOVE      ZERO,DAYCASE
          MATCH     ADATE,DDATE
          IF        @EQUAL
            MOVE      ONE,DAYCASE
          ENDIF
          CALL      WRIT0000
.
          GOTO      PROC1000
.
PROC3000  DISPLAY   *P1:22,*B,*EL,"** Discharge ",*V2LON,DADMNO,*HOFF:
                    " has an invalid U/R ",*V2LON,DURNO,*HOFF:
                    "..  Please Contact I.B.A. **";
          GOTO      PROC5000
.
PROC4000  DISPLAY   *P1:22,*B,*EL,"** Discharge ",*V2LON,DADMNO,*HOFF:
                    " has an invalid U/R ",*V2LON,DURNO,*HOFF:
                    "..  Please Contact I.B.A. **";
.
PROC5000  KEYIN     *P1:23,*EL,"(",*V2LON,*DV,ANSS,*HOFF,")kip this record, (":
                           *V2LON,*DV,ANSA,*HOFF,")bort process ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     "S" TO ANS
          GOTO      PROC6000 IF EQUAL
          MATCH     "A" TO ANS
          GOTO      PROC7000 IF EQUAL
          BEEP
          GOTO      PROC5000
.
PROC6000  DISPLAY   *P1:22,*EL,*P1:23,*EL;
          GOTO      PROC1000
.
PROC7000  CLOSE     WORK1
          PREP      WORK1,FILENAME
          MOVE      ONE,EXIT
          GOTO      PROC9999
.
PROC9000  MOVE      ZERO,EXIT
PROC9999  RETURN
+
.*******************************************************************************
.                   CHKC0000                                Called by PROC2500 *
.                   Check If Patients Coded                                    *
.*******************************************************************************
CHKC0000  MOVE      ZERO,CODEFLG                 * Default to coded
          PACK      KEY13,AADMNO,SP20
          CALL      RSPTECD1
          CALL      RKPTECD1
          BRANCH    OVRCD,CHKC1000
.
          MATCH     AADMNO,PTEDADMN
          GOTO      CHKC9000 IF EQUAL
.
CHKC1000  PACK      KEY13,AADMNO,SP20
          CALL      RSPTECO1
CHKC2000  CALL      RKPTECO1
          BRANCH    OVRCD,CHKC3000
.
          MATCH     AADMNO,PTEOADMN
          GOTO      CHKC3000 IF NOT EQUAL
.
          MATCH     ANSX,PTEOTYPE
          GOTO      CHKC2000 IF EQUAL
          GOTO      CHKC9000
.
CHKC3000  MOVE      ONE,CODEFLG                  * Not coded
.
CHKC9000  MOVE      ZERO,EXIT
.
CHKC9999  RETURN
+
.*******************************************************************************
.                   WRIT0000                                Called by PROC2500 *
.                   Write the admission details                                *
.*******************************************************************************
WRIT0000  CALL      MSTD0000                     * master details
          CALL      ADMD0000                     * admission details
          CALL      DSCD0000                     * discharged details
          CALL      TRAN0000                     * loop through transaction file
.
WRIT9999  RETURN
+
.*******************************************************************************
.                   MSTD0000                                Called by WRIT0000 *
.                   Extract master details                                     *
.*******************************************************************************
MSTD0000  MOVE      "0000000000",TRURNO          * U/R Number
          MOVE      PURNO,FORM10
          MOVE      FORM10,TRURNO
          REP       " 0",TRURNO
          MOVE      SP1,DIM1
.
          MOVE      SP30,TSNAME            
          MOVE      SP30,TFNAME
.         
          IF        DVAFLAG = 1                               
            MOVE      PSNAME,TSNAME
            MOVE      PGNAME,TFNAME
          ENDIF     
.         
          COMPARE   ONE,PUBPRIV                  * 1=Public, 2=Private 
          GOTO      MSTD0500 IF NOT EQUAL
.                                                * Public Patients
          MOVE      PSNAME,TSNAME      
          MOVE      PGNAME,TFNAME      
.
          MATCH     SP2,PTMXMCCD 
          IF        @EQUAL
            MOVE      ONE,PTMXMCCD
          ENDIF
          SQUEEZE   PTMXMCCD
          MOVE      PTMXMCCD,DIM1
          MOVE      SP20,TMEDINO                 * Medicare Number
          PACK      TMEDINO,PMEDI,DIM1
MSTD0500  REP       " 0",TMEDINO
.
          MOVE      PSEX,DSEXCHAR
          CALL      SEXDSC00                     * Sex Description
.
          MOVE      DSEXNO,TRSEX                 * Cat G ind 1
.
MSTD1000  MOVE      SIX,TMSTAT                   * Marital Status
          MATCH     SP3,PMSTAT
          GOTO      MSTD1500 IF EQUAL
.
          PACK      KEY5,ANSM,SP1,PMSTAT
          CALL      RDCODE1
          BRANCH    OVRCD,MSTD1500
.
          MATCH     SP4,THCSCOD
          GOTO      MSTD1500 IF EQUAL
          MOVE      THCSCOD,TMSTAT      
.
MSTD1500  MOVE      SP70,EMPLSTAT
          MATCH     SP3,PMVXEMPL                 * Get Employment Status
          IF        !@EQUAL
            PACK      KEY5,ANSK,ANSD,PMVXEMPL,SP70
            CALL      RDCODE1
            IF        OVRCD = 0
              MOVE      THCSCOD,EMPLSTAT
            ELSE
              MOVE      SP70,EMPLSTAT
            ENDIF
          ENDIF
.
MSTD2000  MOVE      SP10,TSTRNO                  * Street No.
          PACK      TSTRNM WITH SP20,SP20        * Street Name
          CALL      GETSTR00                     * Get street number/name
.
          MOVE      SP20,TLOCAL                  * Suburb
          MOVE      PSUBRB,TLOCAL                * Suburb is on line 3
          BRANCH    CNSWLOC,MSTD3000
          MOVE      PADD2,TLOCAL                 * Suburb is on line 2
.
MSTD3000  MOVE      PPOST,TPOST                  * Post Code
.
          MOVE      PADD4,TSTATE
MSTD3500  MOVE      "9999",TRLANG                * Default language
          MOVE      SP2,TCODE
          MOVE      SP3,ACODE
.
          MOVE      PMPXLNG1,ACODE          
          MATCH     SP3,ACODE
          GOTO      MSTD4000 IF EQUAL
.
          PACK      KEY5 WITH ANSL,ANSA,ACODE    * Check for a valid code
          CALL      RDCODE1
          BRANCH    OVRCD,MSTD4000
.
          MOVE      ZERO,FORM2
          MATCH     SP4,THCSCOD
          GOTO      MSTD4000 IF EQUAL
          MOVE      THCSCOD,TRLANG
          RJUSTIFY  TRLANG
          REP       " 0",TRLANG
.
MSTD4000  MOVE      "9999",TCNTRY                * Country of Birth
          PACK      KEY5,ANSC,SP1,PCONT
          CALL      RDCODE1
          BRANCH    OVRCD,MSTD5000
.
          MATCH     SP4,PTCDNHCP
          GOTO      MSTD5000 IF EQUAL
          MOVE      PTCDNHCP,TCNTRY
          RJUSTIFY  TCNTRY
          REP       " 0",TCNTRY
.
MSTD5000  MOVE      "4",TRACE                    * Race default
          PACK      TCODE,ANSV,ANSA
          MOVE      SP3,ACODE
.
          MOVE      PMPXABRG,ACODE
          MATCH     SP3,ACODE
          GOTO      MSTD6000 IF EQUAL
.
          PACK      KEY5,TCODE,ACODE 
          CALL      RDCODE1
          BRANCH    OVRCD,MSTD6000
.
          MATCH     SP4,THCSCOD
          GOTO      MSTD6000 IF EQUAL
          MOVE      THCSCOD,TRACE
.
MSTD6000  UNPACK    PBDATE,XCENT,XYEAR,XMON,XDAY  *D.O.B.
          UNPACK    XCENT,DIM1,KEY1
          PACK      TBDATE8,XDAY,XMON,XCENT,XYEAR
          REP       " 0",TBDATE8
.
MSTD9999  RETURN
.
.*******************************************************************************
.                   ADMD0000                                Called by WRIT0000 *
.                   Extract admissions details                                 *
.*******************************************************************************
ADMD0000  MOVE      SP2,TRSREF                   * Source of Referral
          MOVE      SP4,THCSCOD                  * 2nd chars of Source referral
          MOVE      SP10,TRHREFF
          MOVE      SP10,TDVACN
          PACK      KEY5,ANSS,SP1,ASRCE
          CALL      RDCODE1
          UNPACK    THCSCOD,TRCONST,TRSREF   
.
          MOVE      TRSREF,STRING
          CALL      RMBL0000
          MOVE      STRING,FORM2
          MOVE      FORM2,TRSREF
          REP       " 0",TRSREF
.
          MATCH     "00",TRSREF
          IF        @EQUAL
            MOVE      ONE,BABYFLAG
          ENDIF
.
          IF        FORM2=4 | FORM2=5
            PACK      KEY8,AADMNO
            CALL      RDPTDAD1                   * read adm.transfer source
            IF        OVRCD<>1
              PACK      KEY5,PTDAADTS,SP70
              CALL      RDPTVAD1
              IF        OVRCD=1
                MOVE      PTDAADTS,TRHREFF
              ELSE 
                MATCH     SP70,PTVANHSC
                IF        !@EQUAL
                  MOVE      PTVANHSC,TRHREFF     * Valid transfer source
                ELSE
                  MOVE      PTVACODE,TRHREFF     * Valid transfer source
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
          UNPACK    ADATE,XCENT,XYEAR,XMON,XDAY  * Admission Date
          PACK      TRADAT8,XDAY,XMON,XCENT,XYEAR
          REP       " 0",TRADAT8
.
          UNPACK    ATIME,XHOUR,ANS,XMIN
          PACK      TRADMTM,XHOUR,XMIN           * Admission Time
          REP       " 0",TRADMTM
.
          MOVE      SP2,TPSTAT                   * Patient status
          MOVE      SP4,THCSCOD
.
ADMD5000  MOVE      SP10,ACODE                   * Determine user defined field
          MOVE      ZERO,FORM1
          UNPACK    SP2,DIM1,DIM1A
          MOVE      SP1,TDVACT
          MOVE      SP70,TDVACN
.
          BRANCH    DVAFLAG,ADMD5800             * DVA patient
          GOTO      ADMD6100

....      PACK      KEY5,ANSC,ANSL,ACLAIM                  
....      CALL      RDCODE1
....      BRANCH    OVRCD,ADMD6000
.
....      MOVE      ZERO,FORM2                   * DVA Card type
....5500  ADD       ONE,FORM2
....      COMPARE   SIX,FORM2
....      GOTO      ADMD6000 IF EQUAL
.
....      LOAD      ANS,FORM2,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5 
....      CMATCH    "V",ANS
....      GOTO      ADMD5800 IF EQUAL
....      GOTO      ADMD5500
.
.         Set DVA Number using concession card, if one exists
.
ADMD5800  MOVE      THREE,CARDTYPE               * set for DVA card type
          CALL      CONCD000                     * DVA conc card ?
          BRANCH    EXIT,ADMD6000
.
          MOVE      DIM20,TDVACN                 * DVA number
.
.         There was a DVA concession card, so we need to check to see
.         if a DVA Card Colour was also present
.
          MATCH     SP3,PMCDDVAC                 * DVA Card Colour blank ?
          GOTO      ADMD6000 IF EQUAL
.
          MOVE      PMCDDVAC,ACODE
          PACK      KEY5,ANSD,ANSX,ACODE
          CALL      RDCODE1
          IF        OVRCD = 0
            PACK      TDVACT,THCSCOD
          ENDIF
.
ADMD6000  BRANCH    DVAFLAG,ADMD6100             * DVA patient      
          COMPARE   TWO,PUBPRIV          
          IF        @EQUAL
            MOVE      SP8,TDVACT
            MOVE      SP10,TDVACN
          ENDIF
.
ADMD6100  COMPARE   ONE,PUBPRIV    
          IF        @EQUAL
            MOVE      "5",THCOVER                * Public defaults to 5
          ELSE
            MOVE      "0",THCOVER                * Private defaults to 0
          ENDIF
.
          MOVE      SP4,HFHDPE                   * Level of health insurance
          PACK      KEY14,AFUNDH,AFNDTB          * get HDP Equiv. for patient
          CALL      RDFUND1
          BRANCH    OVRCD,ADMD7000               * no record so leave default
.
          UNPACK    HFHDPE,ANS,THCOVER           
          CMATCH    SP1,THCOVER
          IF        @EQUAL
            MOVE      "9",THCOVER                * Default is 9
          ENDIF
.
ADMD7000  MOVE      SP3,TUSUACC                  * Usual accommodation
          MOVE      "99",TUSUACC
          MOVE      PMVXUSAC,USACCODE
          MATCH     SP3,USACCODE
          IF        !@EQUAL
            PACK      KEY5,ANSK,ANSP,USACCODE
            CALL      RDCODE1               
            IF        OVRCD<>1
              MOVE      THCSCOD,TUSUACC      
            ENDIF
          ENDIF
          RJUSTIFY  TUSUACC
          REP       " 0",TUSUACC
.
          MOVE      SP4,THCSCOD                  * Unplanned visit to theatre
          PACK      KEY5,ANSK,ANSB,PMVXUVTH  
          CALL      RDCODE1
          MOVE      THCSCOD,TUPLTHEA
.
ADMD9999  RETURN
+
.*******************************************************************************
.                   DSCD0000                                Called by WRIT0000 *
.                   Extract discharged details                                 *
.*******************************************************************************
DSCD0000  UNPACK    DDATE,XCENT,XYEAR,XMON,XDAY  * Separation Date
          PACK      TDDATE8,XDAY,XMON,XCENT,XYEAR
          REP       " 0",TDDATE8
.
          UNPACK    DTIME,XHOUR,ANS,XMIN
          PACK      TRSEPTM,XHOUR,XMIN           * Separation Time
          REP       " 0",TRSEPTM
.
          CALL      PYSP0000                     * Payment status on separation
.
          MOVE      SP2,TREFTO                   * Referral To
          MOVE      "00",TDSMODE                 * Separation Mode/In area trans
          MOVE      SP4,TAREAT
.
          MOVE      SP5,PTDADCTS
          PACK      KEY8,AADMNO
          CALL      RDPTDAD1 
.
          IF        PTCNDTRF = 1
            PACK      KEY5,ANSD,SP1,DSTAT
            CALL      RDCODE1
          ELSE
            PACK      KEY5,ANSD,ANSD,DDEST
            CALL      RDCODE1
          ENDIF
          MATCH     "1",TCINDC2
          GOTO      DSCD0800 IF NOT EQUAL
.

          PACK      KEY5,PTDADCTS,SP70
          CALL      RDPTVAD1
          IF        OVRCD=1
            GOTO     DSCD0800
          ENDIF
          MATCH     SP70,PTVANHSC
          IF        !@EQUAL
            MOVE      PTVANHSC,TAREAT            * Valid transfer source
          ELSE
            MOVE      PTVACODE,TAREAT            * Valid transfer source
          ENDIF
DSCD0800  BRANCH    PTNSWHDP,DSCD1000            * Can only be one of "D " or DD
.
          MATCH     SP3,DDEST                    * Get Discharge Dest. Cat DD
          GOTO      DSCD2000 IF EQUAL
.
          PACK      KEY5,ANSD,ANSD,DDEST
          CALL      RDCODE1
          BRANCH    OVRCD,DSCD2000
.
          MATCH     SP4,THCSCOD
          GOTO      DSCD2000 IF EQUAL
          GOTO      DSCD1200
.
DSCD1000  MATCH     SP3,DSTAT                    * Get Discharge Status Cat "D "
          GOTO      DSCD2000 IF EQUAL
.
          PACK      KEY5,ANSD,SP1,DSTAT
          CALL      RDCODE1
          BRANCH    OVRCD,DSCD2000
.
          MATCH     SP4,THCSCOD
          GOTO      DSCD2000 IF EQUAL
.
DSCD1200  UNPACK    THCSCOD,TDSMODE              * Mode of Separation (MoS)
.
          MOVE      TDSMODE,STRING
          CALL      RMBL0000                     * Trim MoS
          MOVE      STRING,FORM2
          MOVE      FORM2,TDSMODE
          REP       " 0",TDSMODE
.
DSCD2000  IF        PTNSWHDP = 1
            PACK      KEY5,ANSD,ANSD,DDEST
            CALL      RDCODE1
          ELSE
            PACK      KEY5,ANSD,SP1,DSTAT
            CALL      RDCODE1
          ENDIF
          MATCH     SP4,THCSCOD
          GOTO      DSCD2200 IF EQUAL
.
          UNPACK    THCSCOD,TREFTO
.                                                * 0=Private, 1=Public Hospital
          IF        PTCNHOSP=1
            MOVE      TREFTO,STRING
            CALL      RMBL0000
            MOVE      STRING,FORM2
            MOVE      FORM2,TREFTO
            REP       " 0",TREFTO
          ELSE
            MOVE      SP2,TREFTO
          ENDIF
.
DSCD2200  UNPACK    ADATE,CCENT,CYEAR,CMON,CDAY
          PACK      AGEDATE,CCENT,CYEAR,CMON,CDAY
          CALL      CALCAGE
.
          MOVE      ZERO,FTRBWGHT                * Neonate admission weight
          MATCH     SP6,ABWGHT
          GOTO      DSCD2400 IF EQUAL
.
          MATCH     "     0",ABWGHT
          GOTO      DSCD2400 IF EQUAL
.
          UNPACK    ABWGHT,DIM2,STRING
          CALL      RMBL0000                     * Trim STRING
          MOVE      STRING,FTRBWGHT
.
DSCD2400  COMPARE   "29",PSAGEDAY
          GOTO      DSCD3000 IF LESS
          GOTO      DSCD3000 IF EQUAL
          MOVE      ZERO,FTRBWGHT
.
DSCD3000  MOVE      SP4,TRHRICU                  * Hours in ICU
          MOVE      SP4,THRSMV
          PACK      KEY8,AADMNO
          CALL      RDPTICU1
          BRANCH    OVRCD,DSCD3500
          MOVE      PTICUMEC,FORM4          
          MOVE      FORM4,THRSMV                 * Hours on mechanical vent.
          MOVE      PTICUINT,FORM4
          MOVE      FORM4,TRHRICU
.
DSCD3500  REP       " 0",THRSMV
          REP       " 0",TRHRICU
.
DSCD4000  MOVE      PTICAMBN,TRAMBNO             * Ambulance Client Number
          RJUSTIFY  TRAMBNO
          REP       " 0",TRAMBNO
.
          MATCH     SP70,PMVXUDF8                * Referred to on Separation
          GOTO      DSCD5000 IF EQUAL
.
          PACK      KEY5,ANSY,ANSF,PMVXUDF8,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,DSCD5000
.
          PACK      TREFTO,THCSCOD,SP70
          REP       " 0",TREFTO
.
DSCD5000  MOVE      "9",TYRPSYC
          MATCH     SP1,ATYPE
          GOTO      DSCD9999 IF EQUAL
.
          PACK      KEY5,ANSA,SP1,ATYPE,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,DSCD9999
.
          MATCH     "3",THCSCOD
          IF        @EQUAL
            PACK      KEY5,ANSY,ANSE,PMVXUDF6,SP70
            CALL      RDCODE1
            IF        OVRCD<>1
              MOVE      THCSCOD,TYRPSYC
            ENDIF
            GOTO      DSCD9999
          ENDIF
.
          MATCH     "P",TCINDC3
          IF        @EQUAL
            PACK      KEY5,ANSY,ANSE,PMVXUDF6,SP70
            CALL      RDCODE1
            IF        OVRCD<>1
              MOVE      THCSCOD,TYRPSYC
            ENDIF
            GOTO      DSCD9999
          ENDIF
.
DSCD9999  RETURN
+
.*******************************************************************************
.                   PYSP0000                                Called by PROC1500 *
.                   Get Payment Status on Separation                  DSCD0000 *
.*******************************************************************************
.                                           
PYSP0000  COMPARE   ONE,PUBPRIV
          IF        @EQUAL
            MOVE      "20",TPSTAT                * Public Patient Default = 20
          ELSE
            MOVE      "30",TPSTAT                * Private Patient Default = 30
          ENDIF
.
          MOVE      ZERO,FORM2
          MOVE      PMVXPYSP,CODE
          MATCH     SP3,CODE
          GOTO      PYSP9999 IF EQUAL       
.
          PACK      KEY5,ANSK,ANSK,CODE          * Payment Status (Cat KK)
          CALL      RDCODE1
          IF        OVRCD<>1
            MOVE      THCSCOD,TPSTAT
            MOVE      TPSTAT,STRING
            CALL      RMBL0000                   * Trim TPSTAT
            MOVE      STRING,FORM2
            MOVE      FORM2,TPSTAT
            REP       " 0",TPSTAT
          ENDIF
.
PYSP9999  RETURN
.*******************************************************************************
.                   RMBL                                   Called by (various) *
.                   Remove trailing and leading blanks                         *
.*******************************************************************************
.
RMBL0000  PACK      STRING,STRING,SP20      
          ENDSET    STRING                  
.
RMBL1000  CMATCH    SP1,STRING              
          GOTO      RMBL2000 IF NOT EQUAL   
.
          BUMP      STRING,-1               
          GOTO      RMBL1000 IF NOT EOS 
.
          SETLPTR   STRING,ZERO 
          GOTO      RMBL9999 
.                                           
RMBL2000  LENSET    STRING          
          RESET     STRING         
.
RMBL3000  CMATCH    SP1,STRING    
          GOTO      RMBL9999 IF NOT EQUAL 
.
          BUMP      STRING,1             
          GOTO      RMBL3000 IF NOT EOS 
.
          SETLPTR   STRING,ZERO        
          GOTO      RMBL9999          
. 
RMBL9999  RETURN
+
.*******************************************************************************
.                   TRAN0000                                Called by PROC2500 *
.                   Extract bed days                                           *
.                   Get the patient type or a change of patient type           *
.*******************************************************************************
TRAN0000  MOVE      SP1,TRATYPE                  * Patient Type on admission
          MOVE      ZERO,FNDRECA                 * Found rec "A" flag
          MOVE      ZERO,FNDRECB                 * Found 1st change flag
          MOVE      SP8,LEAVDATE                 * Leave Date
          MOVE      SP8,RETNDATE                 * Return Date
          MOVE      SP1,TRBABYS
          MOVE      ZERO,TPSYFLG
          MOVE      SP10,STRDATE                 * Psychiatric starting date
          MOVE      SP10,ENDDATE                 * Psychiatric ending date
          MOVE      ZERO,FTPSYDAY                * Psychiatric bed days
          MOVE      ZERO,FTRLEAVE                * Leave days
          MOVE      ZERO,FTNLEAVE                * Number of leave periods
          MOVE      ZERO,TRBDAYS                 * Unqualified baby bed days
          UNPACK    SP20,TPRDATE8                * Date of principal procedure
          MOVE      "19",TRLEGST                 * Legal status
          MOVE      ZERO,EPSNO                   * Epsiode no
          CALL      CIQB0000                     * Check if qualified baby
          MOVE      ZERO,TRBDAYS                 * Unqualified baby bed days
          MOVE      ZERO,UNQBDAYS                * Unqualified baby bed days
          MOVE      SP8,STDATE
.
          PACK      KEY30,AADMNO,SP20,SP10
          CALL      RDSTRAN2
TRAN1000  CALL      RDKTRAN2 
          BRANCH    OVRCD,TRAN5000
.
          MATCH     AADMNO,TADMN            
          GOTO      TRAN5000 IF NOT EQUAL
.
          IF        BABYFLAG=1
            CALL      BDAY0000                   * Get Unqualified baby bed days
          ENDIF
.
          MOVE      SP1,DIM1
          MOVE      SP4,THCSCOD
          PACK      KEY5,ANSA,SP1,TATYPE
          CALL      RDCODE1
          UNPACK    THCSCOD,KEY1,TRBABYS,DIM2
.
          MOVE      PMVXMHLS,DIM3
          MATCH     SP3,DIM3
          IF        !@EQUAL
            PACK      KEY5,ANSL,ANSS,PMVXMHLS
            CALL      RDCODE1
            IF        OVRCD=0
              MOVE      THCSCOD,TRLEGST
            ENDIF
          ENDIF
.
          COMPARE   ONE,BABYFLAG                 * Born in hospital ?
          GOTO      TRAN1100 IF NOT EQUAL
.
          MATCH     "2",TRBABYS                  * Qualified = 2
          IF        @EQUAL
            MOVE      TDATE,STDATE               * Save the change date
          ENDIF
.
          COMPARE   ZERO,EPSNO
          GOTO      TRAN1100 IF EQUAL
.
          PACK      KEY6,TWARD,TBED
          CALL      RDWARD1
          IF        OVRCD<>1
            PACK      KEY5,CATBT,WEFRBT
            CALL      RDCODE1
            MATCH     ANSQ,TCINDC5
            IF        @EQUAL
              MOVE      SP8,STDATE
            ELSE
              MOVE      TDATE,STDATE
            ENDIF
          ENDIF
.
TRAN1100  MATCH     "D",TMOVE                    * Discharge ?
          GOTO      TRAN1200 IF NOT EQUAL
.
          UNPACK    DDATE,CCENT,CYEAR,CMON,CDAY  * Discharge Date
          PACK      TDDATE8,CDAY,CMON,CCENT,CYEAR
          REP       " 0",TDDATE8
.
          UNPACK    DTIME,XHOUR,ANS,XMIN
          PACK      TRSEPTM,XHOUR,XMIN           * Separation Time
          REP       " 0",TRSEPTM
.
          ADD       ONE,EPSNO                    * Increment the epsiode no
          GOTO      TRAN5000
.
TRAN1200  MATCH     "L",TMOVE                    * Leave ? Get Leave Date
          GOTO      TRAN1400 IF NOT EQUAL
.
          PACK      LEAVDATE,TDATE
          REP       " 0",LEAVDATE
.
TRAN1400  MATCH     "R",TMOVE                    * Return ? get return date
          GOTO      TRAN1600 IF NOT EQUAL
.
          PACK      RETNDATE,TDATE
          REP       " 0",RETNDATE
          CALL      LEAV0000                     * Calculate no of days leave
.
TRAN1600  BRANCH    FNDRECA,TRAN3000             * already got the "A" record
          MATCH     "A",TMOVE                    * admission
          GOTO      TRAN1000 IF NOT EQUAL
.
TRAN2000  MOVE      SP4,THCSCOD
          PACK      KEY5,ANSA,SP1,TATYPE
          CALL      RDCODE1
          CMATCH    ANSP,TCINDC3         
          IF        OVRCD = 0 & @EQUAL
            MOVE      ONE,TPSYFLG                * set indicator for psych.
            MOVE      TDATE,STRDATE              * set start date for psych.
          ENDIF
.
          MATCH     "1",PTCNPHIS                * Category CC set & from effdte?
          IF        @EQUAL & DOYR2017=1
            PACK      KEY5,ANSC,ANSC,ACARE      * Yes, use Category CC
          ELSE
            PACK      KEY5,ANSA,SP1,TATYPE      * No, use Category A
          ENDIF
          CALL      RDCODE1
          MOVE      THCSCOD,TRATYPE              * Patient Type on admission
          MOVE      TATYPE,OLDATYPE              * save Patient Type
          MOVE      ONE,FNDRECA                  * found rec "A" flag
.
          MOVE      SP4,THCSCOD
          MOVE      DTADMN,KEY8
          CALL      RDPMVX11
          BRANCH    OVRCD,TRAN2900
.         MOVE      PMVXREAD,CODE
          MOVE      PMVXUREA,CODE
          MATCH     SP3,PMVXUREA
          IF        @EQUAL
            MOVE      "1",TREADMN
            GOTO      TRAN1000
          ENDIF
.         PACK      KEY5,ANSK,ANSM,CODE   
          PACK      KEY5,ANSK,ANSO,CODE
          CALL      RDCODE1
TRAN2900  MOVE      THCSCOD,TREADMN
.
          GOTO      TRAN1000                     * go and get next record
.
. now get the 1st change in Admission Type
.
TRAN3000  BRANCH    QUALODOB,TRAN1000            * Qualified on DOB, dont write
.
          MATCH     TATYPE,OLDATYPE              * change in Admission Type ?
          GOTO      TRAN1000 IF EQUAL       
.
          BRANCH    FNDRECB,TRAN3400             * already got the 1st change ?
.
.         If this is the Admission Date, then just treat this as being the
.         Admission Type at admission
.
          MATCH     TDATE,ADATE                  * change on Admission Date ?
          GOTO      TRAN2000 IF EQUAL            * yes, assume a correction
          CALL      PSYC0000                     * psychiatric bed days
          MOVE      TATYPE,OLDATYPE              * save new Admission Type
.
          MATCH     TRBABYS,SP1              
          GOTO      TRAN3200 IF EQUAL            * don't check for change 
.
.      we have a diff. Admission Type so check for a change on HDP Equivalent
.
TRAN3200  MOVE      SP4,THCSCOD
          PACK      KEY5,ANSA,SP1,TATYPE    
          CALL      RDCODE1
          MATCH     "1",PTCNPHIS                   * Category CC set?
          IF        @EQUAL
            IF      DOYR2017=0
              MATCH     TRATYPE,THCSCOD            * change in HDP Equiv. ?
              GOTO      TRAN4000 IF NOT EQUAL
            ENDIF
          ELSE
            MATCH     TRATYPE,THCSCOD              * change in HDP Equiv. ?
            GOTO      TRAN4000 IF NOT EQUAL        
          ENDIF
.
          MOVE      THCSCOD,TYPC1
          MOVE      ONE,FNDRECB                  * found 1st change flag
          GOTO      TRAN1000                     * go and get next record
.         
. now get the 2nd change in Admission Type
.
TRAN3400  CALL      PSYC0000                     * psychiatric bed days
          MOVE      TATYPE,OLDATYPE              * save new Admission Type
.
.      we have a diff Adm Type so check for a change on HDP Equiv
.
          MOVE      SP4,THCSCOD
          PACK      KEY5,ANSA,SP1,TATYPE
          CALL      RDCODE1
          MATCH     TYPC1,THCSCOD                * change in HDP Equiv. ?
          GOTO      TRAN1000 IF EQUAL            
.
.      we have a change in HDP treat as disch & re-adm
.
TRAN4000  COMPARE   ONE,QUALADOB
          GOTO      TRAN4500 IF NOT EQUAL        * Not qualified after DOB
.
          MATCH     "2",TRBABYS                  * 2=Qualified
          GOTO      TRAN1000 IF NOT EQUAL   
.
TRAN4500  ADD       ONE,EPSNO               
.
          MOVE      "09",TDSMODE  
          MOVE      SP3,TREFTO
.
          MOVE      SP8,TDDATE8   
          UNPACK    TDATE,CCENT,CYEAR,CMON,CDAY   
          PACK      TDDATE8,CDAY,CMON,CCENT,CYEAR 
          REP       " 0",TDDATE8
.
          UNPACK    TTIME,XHOUR,ANS,XMIN
          PACK      TRSEPTM,XHOUR,XMIN           * Separation Time
          REP       " 0",TRSEPTM
.
          UNPACK    SP10,TPRDIAG,TLOSDIA
.
          MOVE      ZERO,ARRAYCNT                * Procedure Code/Location 1-50
TRAN4510  ADD       ONE,ARRAYCNT
          COMPARE   "51",ARRAYCNT
          IF        !@EQUAL
            UNPACK    SP70,TPROCCD[ARRAYCNT],TPROCLOC[ARRAYCNT]
            GOTO      TRAN4510
          ENDIF
.
          MOVE      SP70,TPRDATE8                * Procedure Code 1 Date
.
          MOVE      ONE,DISCADMN                 * discharge & admission flag
          GOTO      TRAN6000                     
.
TRAN5000  MOVE      ZERO,DISCADMN                
.
TRAN6000  MATCH     SP8,LEAVDATE                 * Leave Days
          GOTO      TRAN7000 IF EQUAL
          MATCH     SP8,RETNDATE        
          GOTO      TRAN7000 IF EQUAL
          CALL      LEAV0000                     * Calculate leave days
.
.         check if patient was psychiatric
.
TRAN7000  IF       TPSYFLG = 1
            MOVE      TDATE,ENDDATE              * set the ending date
            CALL      CALC0000                   * calculate date difference
            ADD       CALDAYS,FTPSYDAY
            IF        FTPSYDAY>0
              SUB       FTRLEAVE,FTPSYDAY
            ENDIF
.
            MATCH     "D",TMOVE
            IF        @EQUAL
              COMPARE   ONE,DAYCASE
              IF        @EQUAL
                ADD       ONE,FTPSYDAY            
              ENDIF
            ENDIF
            MOVE      ZERO,TPSYFLG
          ENDIF
.
          IF        BABYFLAG=1
            CALL      BDAY0000                   * Get Unqualified baby bed days
          ENDIF
.
          MOVE      ZERO,CNTLOC
          MOVE      ZERO,CNTACT
.
          MOVE      ZERO,EXTFLAG
          MOVE      ZERO,PRMFLAG
.
          CALL      PDIS0000                     * Process Diseases
          CALL      POPR0000                     * Process Operations
          CALL      CHIH0000                     * hospital in the home?
.
TRAN8000  CALL      WREC0000                     * Write to text file
.
. we have written a record so check if (Admission Type ="8") discharge/admiss.
. flag is set. ie write a record for the 2nd part of the patients visit
.
          BRANCH    DISCADMN,TRAN8200
          GOTO      TRAN9999
.
. we need to write the second half of the patients visit so set up variables
.
TRAN8200  UNPACK    TDATE,CCENT,CYEAR,CMON,CDAY  
          PACK      TRADAT8,CDAY,CMON,CCENT,CYEAR
          REP       " 0",TRADAT8
.
          UNPACK    TTIME,XHOUR,ANS,XMIN
          PACK      TRADMTM,XHOUR,XMIN           * Admission Time
          REP       " 0",TRADMTM
.
          MOVE      SP4,THCSCOD
          MATCH     "1",PTCNPHIS                * Category CC set & from effdte?
          IF        @EQUAL & DOYR2017=1
            PACK      KEY5,ANSC,ANSC,ACARE      * Yes, use Category CC
          ELSE
            PACK      KEY5,ANSA,SP1,TATYPE      * No, use Category A
          ENDIF
          CALL      RDCODE1
          MOVE      PTCDNHCP,TRATYPE       
.
          MOVE      ZERO,UNQBDAYS
          MOVE      ZERO,FTRLEAVE                * leave days
          MOVE      ZERO,DISCADMN                * reset flag
          MOVE      SP8,LEAVDATE
          MOVE      SP8,RETNDATE
.
          MOVE      SP1,THCSCOD
          BRANCH    PTNSWHDP,TRAN8400
          PACK      KEY5,ANSD,ANSD,DDEST
          GOTO      TRAN8600
.
TRAN8400  PACK      KEY5,ANSD,SP1,DSTAT
.
TRAN8600  CALL      RDCODE1
          MOVE      THCSCOD,TDSMODE
.
          MOVE      TDSMODE,STRING
          CALL      RMBL0000
          MOVE      STRING,FORM2
          MOVE      FORM2,TDSMODE
          REP       " 0",TDSMODE
.
          MOVE      "1",TREADMN                  * Next episode disch./readmit
.
          MOVE      "09",TRSREF                  * hardcode as per NSWHDP 4/2/98
          MOVE      SP10,TRHREFF
          MOVE      ZERO,TPSYFLG
          PACK      KEY5,ANSA,SP1,TATYPE
          CALL      RDCODE1
          CMATCH    ANSP,TCINDC3                 * Psychiatric Indicator
          IF        OVRCD = 0 & @EQUAL
            MOVE      ONE,TPSYFLG                * Set psych flag
            MOVE      TDATE,STRDATE              * set psych start date
          ENDIF
.
          GOTO      TRAN1000
.
TRAN9999  RETURN
+
.*******************************************************************************
.                    CIQB0000                               Called by TRAN0000 *
.                    Check If Qualified Baby                                   *
.*******************************************************************************
CIQB0000  MOVE      ZERO,QUALADOB            * Qualified after DOB (0=no,1=yes)
          MOVE      ZERO,QUALODOB            * Qualified on DOB    (0=no,1=yes)
.
          PACK      KEY30,AADMNO,SP20,SP10
          CALL      RDSTRAN2              
CIQB1000  CALL      RDKTRAN2             
          BRANCH    OVRCD,CIQB9000
.
          MATCH     AADMNO,TADMN
          GOTO      CIQB9000 IF NOT EQUAL   
.
          MATCH     SP3,TATYPE
          GOTO      CIQB1000 IF EQUAL      
.
          PACK      KEY5,ANSA,SP1,TATYPE
          CALL      RDCODE1               
          BRANCH    OVRCD,CIQB1000
.
          UNPACK    THCSCOD,KEY1,TRBABYS,KEY2
          MATCH     "2",TRBABYS                  * 2 = Qualified    
          GOTO      CIQB1000 IF NOT EQUAL
.
          MATCH     ADATE,TDATE
          GOTO      CIQB2000 IF EQUAL            * Admin Date=Transfer Date
.
          MOVE      ONE,QUALADOB                 
          GOTO      CIQB9000
.
CIQB2000  PACK      KEY8,ADATE
          MATCH     KEY8,PBDATE
          GOTO      CIQB1000 IF NOT EQUAL        * Admin date not on DOB
.
          MOVE      ONE,QUALODOB                 * 1 = Qualified on DOB 
.
CIQB9000  MOVE      ZERO,EXIT
CIQB9999  RETURN
+
.*******************************************************************************
.                   WREC0000                                Called by TRAN8000 *
.                   Write a record to text file                                *
.*******************************************************************************
WREC0000  MATCH     "99999",TRECNO              
          GOTO      WREC1000 IF EQUAL
          ADD       ONE,PAGNNO
          MOVE      PAGNNO,TRECNO
          REP       " 0",TRECNO
          MATCH     "09",TDSMODE
          IF        @EQUAL 
            MOVE      SP4,TAREAT                 * Statistical Separation 
          ENDIF                                  * ...can't be transferred
.
          MOVE      "0",TPHIC                    * Not Private Health Claim
          MOVE      TPSTAT,FORM2
.                                       
          IF        PUBPRIV=2
            IF       (FORM2>30&FORM2<37)|FORM2=46
              MOVE     "1",TPHIC                 * Private Insurance Claim
            ENDIF
          ENDIF 
.
WREC1000  MATCH     SP5,TLOSDIA
          GOTO      WREC2000 IF NOT EQUAL
.
          MOVE      TPRDIAG,TLOSDIA     
          MOVE      UNQBDAYS,FORM1
          MOVE      FORM1,TRBDAYS
          REP       " 0",TRBDAYS
.
WREC2000  MOVE      TWO,TDRGMH
          MOVE      "00000",TIDUMH   * Clear Total involuntary days under MH Act
.
.         if three is no previous psychiatric visit and the psychiatric bed 
.         days for current admission is not zero, then set to yes to first
.         visit of psyc.
.
          MOVE      FTRLEAVE,TRLEAVE     
          REP       " 0",TRLEAVE
          MOVE      FTNLEAVE,TNLEAVE    
          REP       " 0",TNLEAVE
          MOVE      FTRBWGHT,TRBWGHT
          REP       " 0",TRBWGHT
          MOVE      FTPSYDAY,TPSYDAYS
          REP       " 0",TPSYDAYS
.
          MATCH     "00000",TPSYDAYS             * Involuntary MH days
          GOTO      WREC3000 IF EQUAL     
.
          MATCH     "02",TRLEGST
          GOTO      WREC2500 IF EQUAL
.
          MATCH     "03",TRLEGST
          GOTO      WREC2500 IF EQUAL
.
          MATCH     "04",TRLEGST
          GOTO      WREC2500 IF EQUAL
.
          MATCH     "06",TRLEGST
          GOTO      WREC3000 IF NOT EQUAL
.
WREC2500  MOVE      SP6,TIDUMH
          MOVE      TPSYDAYS,TIDUMH
          REP       " 0",TIDUMH
          MOVE      ONE,TDRGMH
.
WREC3000  WRITE     WORK1,SEQ;TRECNO,THOSCOD,TRURNO,TMEDINO,TREADMN:        
                                TRHRICU,TRLEAVE,TNLEAVE,THRSMV,TFNAME:
                                TMNAME,TSNAME,TPRNM,TUFNO,TSTRNO:
                                TSTRNM,TLOCAL,TSTATE,TPOST,TBDATE8:
                                TRSEX,TCNTRY,TRLANG,TRACE,TRADAT8:
                                TRADMTM,TREMERG,THCOVER,TRCONST,TRSREF:
                                TRHREFF,TRAMBNO,TYRPSYC,TDDATE8,TRSEPTM:
                                TPSTAT,TDSMODE,TAREAT,TPHIC,TRBWGHT:
                                TRBDAYS,TIDUMH,TDRGMH,TPSYDAYS,TUSUACC:
                                TMSTAT,EMPLSTAT,TREFTO,TDVACT,TDVACN:
                                TPRDIAG,TPRCONON;
.
.
          MOVE      ZERO,ARRAYCNT                * Write Diagnosis/Code 2-49
WREC3001  ADD       ONE,ARRAYCNT
          COMPARE   "50",ARRAYCNT
          IF        !@EQUAL
            WRITE     WORK1,SEQ;TRDIAG[ARRAYCNT],TRDIAGCD[ARRAYCNT];
            GOTO      WREC3001
          ENDIF                               
.
          WRITE     WORK1,SEQ;TPROCCD[1],TPROCLOC[1],TPRDATE8;
.
          MOVE      ONE,ARRAYCNT                * Write Proc/Location 2-50
WREC3002  ADD       ONE,ARRAYCNT
          COMPARE   "51",ARRAYCNT
          IF        !@EQUAL
            WRITE     WORK1,SEQ;TPROCCD[ARRAYCNT],TPROCLOC[ARRAYCNT];
            GOTO      WREC3002
          ENDIF
.
          WRITE     WORK1,SEQ;TUPLTHEA,TRATYPE,DELIND
          GOTO      WREC4000
.
WREC4000  CALL      VALD0000                     * validate data
          MOVE      ZERO,FTPSYDAY
.
WREC9999  RETURN
+
.*******************************************************************************
.                   BDAY0000                                Called by TRAN1000 *
.                   Calculate the bed days for baby                   TRAN7000 *
.*******************************************************************************
BDAY0000  MATCH     SP8,STDATE
          GOTO      BDAY9000 IF EQUAL            * Blank save date
.
          PACK      CDYSFDTE,STDATE              * From Date
          REP       " 0",CDYSFDTE
.
          PACK      CDYSTDTE,TDATE               * To Date
          REP       " 0",CDYSTDTE
.
          CALL      CALCDAYS                     * Calc number of bed days
          MOVE      CDYSDAYS,FORM4
          SUB       ONE,FORM4
          SUB       FTRLEAVE,FORM4
          ADD       FORM4,UNQBDAYS               * Accumulate the bed days
BDAY9000  MOVE      SP8,STDATE
.
BDAY9999  RETURN
+
.*******************************************************************************
.                   LEAV0000                                Called by TRAN1400 *
.                   Calculate the bed days for leave                  TRAN6000 *
.*******************************************************************************
LEAV0000  MOVE      LEAVDATE,CDYSFDTE            * From Date
          MOVE      RETNDATE,CDYSTDTE            * To Date
          CALL      CALCDAYS                     * Calc no. of days leave
          SUB       ONE,CDYSDAYS                 * Only want days difference
. 
.         If patient goes on leave, on the admission  
.         date don't count the day as a leave day
.
          PACK      KEY8,ADATE,SP10
          MATCH     KEY8,LEAVDATE 
          IF        @EQUAL
            SUB       ONE,CDYSDAYS
          ENDIF
.                                                * Remove negative days
          COMPARE   ZERO,CDYSDAYS                * Positive ? 
          IF        @LESS | @EQUAL
            MOVE      ZERO,CDYSDAYS
          ELSE 
            ADD       CDYSDAYS,FTRLEAVE          * Leave days
            ADD       ONE,FTNLEAVE               * Leave periods
          ENDIF
.
          MOVE      SP8,LEAVDATE
          MOVE      SP8,RETNDATE
.
LEAV9999  RETURN
+
.*******************************************************************************
.                   PSYC0000                                Called by TRAN3000 *
.                   Calculate the bed days for psychiatric            TRAN3400 *
.*******************************************************************************
PSYC0000  PACK      KEY5,ANSA,SP1,TATYPE
          CALL      RDCODE1
          CMATCH    ANSP,TCINDC3                 * Psychiatric Indicator ?
.
          IF        OVRCD = 0 & @EQUAL
            IF       TPSYFLG = 0                 
              MOVE     ONE,TPSYFLG               * Set Psych flag
              MOVE     TDATE,STRDATE             * set the starting date 
            ENDIF
          ELSE                                   * Change from psych to other
            IF       TPSYFLG = 1
               MOVE    TDATE,ENDDATE             * set the ending date
               CALL    CALC0000                  * calculate bed days
               ADD     CALDAYS,FTPSYDAY
               MOVE    ZERO,TPSYFLG              * Set Psych flag
            ENDIF
          ENDIF
.
PSYC9999  RETURN
+
.*******************************************************************************
.                   CALC0000                                Called by TRAN7000 *
.                   Calculate the dates differences                   PSYC0000 *
.*******************************************************************************
CALC0000  PACK      CDYSFDTE,STRDATE
          PACK      CDYSTDTE,ENDDATE
          CALL      CALCDAYS
          MOVE      CDYSDAYS,CALDAYS
          SUB       ONE,CALDAYS                  * Only want date difference
CALC9999  RETURN
+
.*******************************************************************************
.                   RMDT0000                               Called by (various) *
.                   Remove Dots                                                *
.*******************************************************************************
RMDT0000  RESET     KEY9
          CMATCH    "M",KEY9
          IF        @EQUAL
            REP       ". - ",KEY9                * Morphology codes only
          ELSE
            REP       ". - / ",KEY9
          ENDIF
          SQUEEZE   KEY9
          PACK      KEY9,KEY9,SP9
          MOVE      KEY9,KEY7
.
RMDT9000  MOVE      ZERO,EXIT
RMDT9999  RETURN
+
.*******************************************************************************
.                   GETSTR00                                Called by MSTD2000 *
.                   Get the street number                                      *
.*******************************************************************************
GETSTR00  RESET     PADD1
          CLEAR     TSTRNO
          CLEAR     TSTRNM
.
GETSTR10  CMATCH    SP1,PADD1
          GOTO      GETSTR25 IF EQUAL
.
          MOVE      PADD1,ANS
          CMATCH    "/",PADD1
          GOTO      GETSTR20 IF EQUAL
.
          TYPE      ANS
          GOTO      GETSTR30 IF NOT EQUAL
.
GETSTR20  APPEND    ANS,TSTRNO
.
GETSTR25  BUMP      PADD1
          GOTO      GETSTR10 IF NOT EOS
.
GETSTR30  APPEND    SP10,TSTRNO
          RESET     TSTRNO
.
          APPEND    PADD1,TSTRNM
          APPEND    SP20,TSTRNM
          APPEND    SP20,TSTRNM
          RESET     TSTRNM
GETSTR99  RETURN
+
.*******************************************************************************
.                   PDIS0000                                Called by TRAN7000 *
.                   Process The Diseases                                       *
.*******************************************************************************
PDIS0000  MOVE      SP10,TPRDIAG
          MOVE      ZERO,PRMFLAG
          MOVE      ZERO,ARRAYCNT                * Diagnosis/Onset Code 1-50
PDIS0010  ADD       ONE,ARRAYCNT
          COMPARE   "51",ARRAYCNT
          IF        !@EQUAL
            UNPACK     SP70,TRDIAG[ARRAYCNT],TRDIAGCD[ARRAYCNT]
            GOTO      PDIS0010
          ENDIF
.
          MOVE      SP10,TLOSDIA
.
          MOVE      ONE,COUNT
          PACK      KEY13,AADMNO,EPSNO,SP20
          CALL      RSPTECD1                     * Disease Coding 
          CALL      RKPTECD1                
          BRANCH    OVRCD,PDIS8000
.
          MATCH     AADMNO,PTEDADMN
          GOTO      PDIS8000 IF NOT EQUAL 
.
          COMPARE   EPSNO,PTEDEPNO
          GOTO      PDIS8000 IF NOT EQUAL        * Different episode no
          GOTO      PDIS2000
.
PDIS1000  CALL      RKPTECD1                     * Patient Episode file record
          BRANCH    OVRCD,PDIS9000
.
          MATCH     AADMNO,PTEDADMN
          GOTO      PDIS9000 IF NOT EQUAL  
.
          COMPARE   EPSNO,PTEDEPNO
          GOTO      PDIS9000 IF NOT EQUAL  
.
PDIS2000  MOVE      ZERO,CMPCNT                  * Complex map counter - no
PDIS3000  CALL      VDIS0000                     * Validate disease code
          BRANCH    EXIT,PDIS6000,PDIS7000
.
          MOVE      PTEDCODE,KEY9
          CALL      RMDT0000                     * Remove dots
.
          CMATCH    "P",PTEDTYPE
          GOTO      PDIS4000 IF NOT EQUAL        * Not a primary disease type
.
          BRANCH    PRMFLAG,PDIS4000             * Already have primary disease
.
          MOVE      ONE,PRMFLAG
          MOVE      KEY7,TPRDIAG                 * The 1st primary disease
          MOVE      PTEDOSET,TPRCONON
          GOTO      PDIS7000
.
PDIS4000  CMATCH    "L",PTEDTYPE 
          GOTO      PDIS5000 IF EQUAL            * L disease type
.
          IF        ((COUNT>0)&(COUNT<51))
            MOVE      KEY7,TRDIAG[COUNT]
            MOVE      PTEDOSET,TRDIAGCD[COUNT]
            ADD       ONE,COUNT
          ENDIF
.
          GOTO      PDIS7000
.
PDIS5000  MOVE      KEY7,TLOSDIA                 * L disease type
          GOTO      PDIS7000
.
PDIS6000  CALL      PECS0000                     * Process E code stuff
.
          IF        ((COUNT>0)&(COUNT<51))
            MOVE      KEY7,TRDIAG[COUNT]
            MOVE      PTEDOSET,TRDIAGCD[COUNT]
            ADD       ONE,COUNT
          ENDIF
.
          GOTO      PDIS7000
.
PDIS7000  COMPARE   ZERO,CMPCNT
          GOTO      PDIS1000 IF EQUAL            * Not using complex mapping
.
          ADD       ONE,CMPCNT
          COMPARE   FOUR,CMPCNT
          GOTO      PDIS1000 IF NOT LESS         * Complex map counter >=4
.
          MOVE      SP9,PTEDCODE
          LOAD      PTEDCODE,CMPCNT,PTCP1MCD,PTCP2MCD,PTCP3MCD
          MATCH     SP9,PTEDCODE
          GOTO      PDIS1000 IF EQUAL            * Blank code
          GOTO      PDIS3000
.
PDIS8000  PACK      ERRDESC,SP70
          CLEAR     ERRDESC
          APPEND    "Missing Disease Coding for Episode ",ERRDESC
          APPEND    EPSNO,ERRDESC
          APPEND    SP70,ERRDESC
          RESET     ERRDESC
          CALL      PRTL0000                     * Print error line
.
PDIS9000  MOVE      ZERO,EXIT
PDIS9999  RETURN
+
.*******************************************************************************
.                   VDIS0000                                Called by PDIS3000 *
.                   Validating Disease Code                                    *
.*******************************************************************************
VDIS0000  MOVE      DDATE,ICDRDDTE
          PACK      KEY9,PTEDCODE
          CALL      RDPTICD1
          BRANCH    OVRCD,VDIS9200
.
          MATCH     "2",PT0DACRQ
          GOTO      VDIS9100 IF EQUAL            * External cause code
.
          MATCH     "6",PT0DACRQ
          GOTO      VDIS9100 IF EQUAL            * External cause code
.
          MATCH     "7",PT0DACRQ
          GOTO      VDIS9100 IF EQUAL            * External cause code
.
          MATCH     "8",PT0DACRQ
          GOTO      VDIS9100 IF EQUAL            * External cause code
.
          MATCH     "4",PT0DACRQ                 * Morphology code
          GOTO      VDIS9000 IF EQUAL       
.
VDIS9000  MOVE      ZERO,EXIT
          GOTO      VDIS9999
.
VDIS9100  MOVE      ONE,EXIT
          GOTO      VDIS9999
.
VDIS9200  MOVE      TWO,EXIT
          GOTO      VDIS9999
.
VDIS9999  RETURN
+
.*******************************************************************************
.                   PECS0000                                Called by PDIS6000 *
.                   Process E Code Stuff                                       *
.*******************************************************************************
PECS0000  MOVE      PTEDCODE,KEY9
          CALL      RMDT0000                     * Remove dots
.
          COMPARE   THREE,EXTFLAG
          GOTO      PECS9000 IF NOT LESS         * Already have 3 E codes
.
          ADD       ONE,EXTFLAG
.
          MATCH     "6",PT0DACRQ
          GOTO      PECS0100 IF EQUAL   
.
          MATCH     "7",PT0DACRQ
          GOTO      PECS0200 IF EQUAL      
.
          MATCH     "8",PT0DACRQ
          GOTO      PECS0300 IF EQUAL     
.
PECS0100  ADD       "1",CNTLOC
          GOTO      PECS9000
.
PECS0200  ADD       "1",CNTACT
          GOTO      PECS9000
.
PECS0300  ADD       "1",CNTLOC
          ADD       "1",CNTACT
.
PECS9000  MOVE      ZERO,EXIT
PECS9999  RETURN
+
.*******************************************************************************
.                   POPR0000                                Called by TRAN7000 *
.                   Process The Operations                                     *
.*******************************************************************************
POPR0000  MOVE      ZERO,ARRAYCNT                * Procedure Code/Location 1-50
POPR0010  ADD       ONE,ARRAYCNT
          COMPARE   "51",ARRAYCNT
          IF        !@EQUAL
            UNPACK    SP70,TPROCCD[ARRAYCNT],TPROCLOC[ARRAYCNT]
            GOTO      POPR0010
          ENDIF
.
          MOVE      SP70,TPRDATE8                * Procedure Code 1 Date
.
          MOVE      ONE,COUNT
          PACK      KEY13,AADMNO,SP1,ZERO,SP20
          CALL      RSPTECO1                     * Episode coding
POPR1000  CALL      RKPTECO1                  
          BRANCH    OVRCD,POPR2000
.
          MATCH     AADMNO,PTEOADMN
          GOTO      POPR2000 IF NOT EQUAL
.
          COMPARE   ZERO,PTEOEPNO
          GOTO      POPR2000 IF NOT EQUAL
.
          MATCH     ANSX,PTEOTYPE
          GOTO      POPR1000 IF EQUAL            * Ignore this operation code
          GOTO      POPR6000
.
POPR2000  PACK      KEY13,AADMNO,EPSNO,SP20
          CALL      RSPTECO1                
POPR3000  CALL      RKPTECO1                
          BRANCH    OVRCD,POPR9000
.
          MATCH     AADMNO,PTEOADMN
          GOTO      POPR9000 IF NOT EQUAL 
.
          COMPARE   EPSNO,PTEOEPNO
          GOTO      POPR9000 IF NOT EQUAL 
.
          MATCH     ANSX,PTEOTYPE
          GOTO      POPR3000 IF EQUAL            * Ignore this operation code
.
          MOVE      ZERO,CMPCNT                  * Complex map counter - no
POPR4000  CALL      VOPR0000
          BRANCH    EXIT,POPR5000
.
          MOVE      PTEOCODE,KEY9
          CALL      RMDT0000                     * Remove dots
.
          IF        ((COUNT>0)&(COUNT<51))
            MOVE      KEY7,TPROCCD[COUNT] 
            MOVE      PTEOTYPE,KEY1
            REP       "O1I2N3",KEY1
            MOVE      KEY1,TPROCLOC[COUNT]
            ADD       ONE,COUNT
          ENDIF
.
          MATCH     "  1",DPTEOCNT
          GOTO      POPR5000 IF NOT EQUAL        * Not the 1st operation code
.
          UNPACK    PTEODATE,CCENT,CYEAR,CMON,CDAY
          PACK      TPRDATE8,CDAY,CMON,CCENT,CYEAR   
.
          MATCH     SP70,TPRDATE8
          IF        @EQUAL
            BRANCH    PTMORBDT,POPR5000
            MATCH     "1",PT0ODTMN
            GOTO      POPR5000 IF EQUAL
            MOVE      "Operation Code Exists, but No Operation Date",ERRDESC
            CALL      PRTL0000              
          ENDIF
.
POPR5000  COMPARE   ZERO,CMPCNT
          GOTO      POPR3000 IF EQUAL            * Not using complex mapping
.
          ADD       ONE,CMPCNT
          COMPARE   FOUR,CMPCNT
          GOTO      POPR3000 IF NOT LESS         * Complex map counter >=4
.
          MOVE      SP9,PTEOCODE
          LOAD      PTEOCODE,CMPCNT,PTCP1MCD,PTCP2MCD,PTCP3MCD
          MATCH     SP9,PTEOCODE
          GOTO      POPR3000 IF EQUAL            * Blank code
          GOTO      POPR4000
.
POPR6000  PACK      ERRDESC,SP70
          CLEAR     ERRDESC
          APPEND    "Check Episode Coding for this Admission",ERRDESC
          APPEND    SP70,ERRDESC
          RESET     ERRDESC
          CALL      PRTL0000
.
POPR9000  MOVE      ZERO,EXIT
.
POPR9999  RETURN
+
.*******************************************************************************
.                   VOPR0000                                Called by POPR4000 *
.                   Validating Operation Code                                  *
.*******************************************************************************
VOPR0000  MOVE      DDATE,ICDRDDTE
          PACK      KEY9,PTEOCODE
          CALL      RDPTICO1                     * Read ICD10 operation file rec
          BRANCH    OVRCD,VOPR9500
.
VOPR9000  MOVE      ZERO,EXIT
          GOTO      VOPR9999
.
VOPR9500  MOVE      ONE,EXIT
VOPR9999  RETURN
+
.*******************************************************************************
.                   ENDP0000                                  Called by ML5000 *
.                   Get the next batch number                                  *
.*******************************************************************************
ENDP0000  BRANCH    OPTION,ENDP1000
          MOVE      CNXBTCH,FORM5                * Reprocessing
          SUB       ONE,FORM5                    * Use the previous batch no.
          GOTO      ENDP2000
.
ENDP1000  MOVE      CNXBTCH,FORM5                * Next batch no. & date range
          ADD       ONE,CNXBTCH
          WRITAB    CONTROLF,TEN8;*249,CNXBTCH                            
.
          IF        IBCNMHOS=1
            PACK      KEY3,PTHSHOSP,SP70
            CALL      RDPMPRD1
            IF        OVRCD=0
              MOVE      CHCSST,PMPRSDAT
              MOVE      CHCSED,PMPREDAT
              CALL      UPPMPRD1
            ENDIF
          ELSE
            WRITAB    CONTROLF,EIGHTY8;*124,CHCSST,CHCSED  
          ENDIF
.
.         Update the header of transmission file
.
ENDP2000  MOVE      FORM5,TRBATCH
          REP       " 0",TRBATCH
.         MOVE      TRECNO,FORM5
          REP       " 0",TRECNO
          WRITAB    WORK1,ZERO;*5,TRECNO;
          CLOSE     WORK1
.
          DISPLAY   *P1:24,*EL,*P19:24,*V2LON:
                    "** Transmission Data Processing Completed **",*W;
.
          IF        ERRFND = 1
            CALL      UND132
            PRINT     *N,*1,"*** End of Report ***"
          ENDIF
.
.         Print the summary report
.
          MATCH     SP8,TDDATE8
          IF        @EQUAL
            MOVE      SP10,LATSEP
          ELSE
            UNPACK    TDDATE8,XDAY,XMON,XCENT,XYEAR
            PACK      LATSEP,XDAY,SLASH,XMON,SLASH,XCENT,XYEAR
          ENDIF
.       
          PRINT     *F,*1,"****************************************":
                    "****************************************":
                    *N,*N,*1,"Company Name     : ",CNAME:
                    *N,*1,"Hospital Code    : ",CFILENO:
                    *N,*1,"Latest Separation: ",LATSEP:
                    *N,*1,"Number of Records: ",TRECNO;
.
          UNPACK    TODATE,XCENT,XYEAR,XMON,XDAY
          PRINT     *N,*1,"Disk No.         : ":
                           THOSCOD,"-",XDAY,"/",XMON,"/",XCENT,XYEAR;
. 
          PACK      XDATE,CCC,CYY,CMM,CDD
          REP       " 0",XDATE
          UNPACK    XDATE,XCENT,XYEAR,XMON,XDAY
          PRINT     *N,*1,"Date             : ",XDAY,"/",XMON,"/",XCENT,XYEAR:
                    *N,*1,"****************************************":
                    "****************************************"
.
          COMPARE   ZERO,ERRFND
          GOTO      ENDP3000 IF EQUAL
.
          DISPLAY   *P1:24,*EL,"Errors Found in Transmission. ":
                               "See Error Report. ";
          CALL      HITENTER
.
.         Option to copy to Disk
.
ENDP3000  KEYIN     *P1:24,*EL,"Do you want to copy Transmission file ":
                    "to the Disk (",*V2LON,"Y",*HOFF:
                    "/",*V2LON,"N",*HOFF,") ? ",*V2LON,ANS;
.
          REP       UPPLOW,ANS
          MATCH     "N",ANS
          GOTO      ENDP9999 IF EQUAL
          MATCH     "Y",ANS
          GOTO      ENDP4000 IF EQUAL
          BEEP
          GOTO      ENDP3000
.
.         Copy to Disk
.
ENDP4000  CLOSE     WORK1
.
          MOVE      SP10,DISKNAME
          CLEAR     DISKNAME
          APPEND    "NSW",DISKNAME
          APPEND    THOSCOD,DISKNAME
          APPEND    SP6,DISKNAME
          RESET     DISKNAME
.
          PACK      CMDLINE,SP30,SP30,SP30,SP10
          CLEAR     CMDLINE
          APPEND    "HCS_TO_DISK ",CMDLINE
          APPEND    FILENAME,CMDLINE
          APPEND    ".txt",CMDLINE
          APPEND    SP1,CMDLINE
          APPEND    DISKNAME,CMDLINE
          RESET     CMDLINE
.
          DISPLAY   *P1:11,*EF,*P20:24,*V2LON:
                    "** Copying file onto Disk.  Please Wait **";
.
          DISPLAY   *P1:13,*EL;
          EXECUTE   CMDLINE,TASKID
          GOTO      ENDP5000 IF OVER
.
          DISPLAY   *P1:20,*EF,*P27:20,*V2LON,"** Transmission Completed **";
          GOTO      ENDP9999
.
ENDP5000  DISPLAY   *P1:24,*EL,*V2LON,*B,*BLINKON:
                    "** Unable to access Disk drive instruction.  ":
                    "Contact I.B.A. Immediately **  ",*W;
          KEYIN     ANS;
.
ENDP9999  RETURN
+
.*******************************************************************************
.                   HEAD0000                                Called by PRTL0000 *
.                   Heading                                                    *
.*******************************************************************************
HEAD0000  CALL      HEAD132
          CALL      UND132
          PRINT     *1,"|","U/R Number",*12,"|","Adm Number",*23,"| ":
                    "Adm Date",*36,"| ","Sep Date",*49,"|"," Error Description":
                    *132,"|"
          CALL      UND132
          MOVE      "6",CLNO
HEAD9999  RETURN
+
.*******************************************************************************
.                   PRTL0000                               Called by (various) *
.                   Print Line of Error report                                 *
.*******************************************************************************
PRTL0000  IF        ERRFND=0
            MOVE      ONE,ERRFND                 * Set an error found
            CALL      HEAD0000
          ENDIF
          COMPARE   "55",CLNO
          CALL      HEAD0000 IF NOT LESS
.
          UNPACK    TDDATE8,CDAY,CMON,CCENT,CYEAR
          CALL      PACDATE
          MOVE      CPCDATE,SEPDATE
          UNPACK    TRADAT8,CDAY,CMON,CCENT,CYEAR
          CALL      PACDATE
          ADD       ONE,CLNO
          PRINT     *1,"|",*3,PURNO,*12,"|",*14,AADMNO,*23,"|",*25,CPCDATE:
                    *36,"|",*38,SEPDATE,*49,"|",*51,ERRDESC,*132,"|"
.
PRTL9999  RETURN
.
.*******************************************************************************
.                   VALD0000                                Called by WREC4000 *
.                   Validate the data before sending                           *
.*******************************************************************************
VALD0000  
.
. ------- Sex ------------------------------------------------------------------
.
          MOVE      ZERO,FORM1
          MOVE      TRSEX,FORM1             * 1, 2, 3 or 9 valid
          IF        (FORM1<1 | FORM1>3) & (FORM1 <> 9)
            MOVE      "Invalid Sex Type",ERRDESC
            CALL      PRTL0000                   * print line
          ENDIF
.
. ------- Marital Status -------------------------------------------------------
.
          MOVE      ZERO,FORM1
          MOVE      TMSTAT,FORM1
          IF        FORM1<1 | FORM1>6
            MOVE      "Invalid Maritial Status",ERRDESC
            CALL      PRTL0000                   * print line
          ENDIF
.
. ------- Aboriginality --------------------------------------------------------
.
          MOVE      ZERO,FORM1
          MOVE      TRACE,FORM1
          IF        FORM1<1 | FORM1>4
            COMPARE   NINE,FORM1
            GOTO      RACE1 IF EQUAL
            MOVE      "Invalid Aboriginality",ERRDESC
            CALL      PRTL0000                   * print line
          ENDIF
.
. ------- If Abo must be born in OZ --------------------------------------------
.
RACE1     MOVE      ZERO,FORM1
          MOVE      TRACE,FORM1
          IF        FORM1=1 | FORM1=2 | FORM1=3
            MATCH     "1101",TCNTRY
            IF        !@EQUAL
          MOVE     "Aboriginality = 1,2 or 3, Country must = 1101(Aust)",ERRDESC
              CALL      PRTL0000                 * print line
            ENDIF
          ENDIF
.
. ------- Abo Language X Aboriginality -----------------------------------------
.
          MATCH     "0000",TRLANG
          IF        @EQUAL
            MOVE      ZERO,FORM1
            MOVE      TRACE,FORM1
            IF        FORM1<1 | FORM1>3
              MOVE      "Language = 00, Aboriginality must = 1,2 or 3",ERRDESC
              CALL      PRTL0000                 * print line
            ENDIF
          ENDIF
.
. ------- source of referral ---------------------------------------------------
.
          MOVE      ZERO,FORM2
          MOVE      TRSREF,FORM2
          IF        FORM2<0 | FORM2>16
            MOVE      "Invalid Source of Referral",ERRDESC
            CALL      PRTL0000                   * print line
          ENDIF
.
. ------- Medicare Number --------------------------------------------
.
          COMPARE   ONE,PUBPRIV
          GOTO      NEXT IF NOT EQUAL
.                                           * Public patient
          MATCH     SP15,TMEDINO
          GOTO      NEXT IF NOT EQUAL
.
          MOVE      "Blank Medicare Number for a public patient.",ERRDESC
          CALL      PRTL0000
.
. ------- Patient Status -------------------------------------------------------
.
NEXT      MOVE      ZERO,FORM2
          MOVE      TPSTAT,FORM2
.
PSTAT000  COMPARE   ONE,PTCNHOSP                 * 0 = Private / 1 = Public
          GOTO      PSTAT200 IF EQUAL 
.
.------------ Private Hospital - valid values -------------------------------- 
.
PSTAT100  IF  FORM2=20|FORM2=23|FORM2=30|FORM2=40|FORM2=41|FORM2=42|FORM2=45
            GOTO  HIS000
          ENDIF
          IF  FORM2=46|FORM2=50|FORM2=60
            GOTO  HIS000
          ENDIF
          MOVE "Invalid payment status on Separation/Patient Status",ERRDESC
          CALL    PRTL0000
          GOTO      HIS000
.
.------------ Public Hospital ------------------------------------------------
.
PSTAT200  IF  FORM2<20|(FORM2>20 & FORM2<23)|(FORM2>24 & FORM2<31)|(FORM2>37 &              FORM2<40)|(FORM2>43 & FORM2<45)|(FORM2>46 & FORM2<50)|(FORM2>52 &               FORM2<60)|FORM2>60
.
            MOVE "Invalid payment status on Separation/Patient Status",ERRDESC
            CALL PRTL0000
.
          ENDIF
.
. ------- Health Insurance Status ----------------------------------------------
HIS000    MOVE      ZERO,FORM1
          MOVE      THCOVER,FORM1
.                                                * Private Patients
HIS500    IF        PUBPRIV=2         
            IF       FORM1<0|FORM1=3|(FORM1>4 & FORM1<9)|FORM1>9
              GOTO      HISERR
            ENDIF
          ELSE                                   * Public patients
            IF       FORM1<0|FORM1=3|FORM1>9
              GOTO     HISERR
            ENDIF
          ENDIF
.
          GOTO      RTOS000
.
HISERR    MOVE      "Invalid Health Insurance Status",ERRDESC
          CALL      PRTL0000         
.
. ------- Referred to on Separation --------------------------------------------
.
RTOS000   MATCH     "00",TREFTO
          IF        @EQUAL
.                                                * 0=Private, 1=Public Hospital
            IF        PTCNHOSP=1
              MOVE      "Invalid Referred to on Separation",ERRDESC
              CALL      PRTL0000                 * print line
            ENDIF
          ELSE
            MOVE      ZERO,FORM2
            MOVE      TREFTO,FORM2
            IF        FORM2<0 | FORM2>13
              MOVE      "Invalid Referred to on Separation",ERRDESC
              CALL      PRTL0000                 * print line
            ENDIF
          ENDIF
.
. ------- Mode of Separation ---------------------------------------------------
.
          MOVE      ZERO,FORM2
          MOVE      TDSMODE,FORM2
          IF        FORM2<1 | FORM2>11
            MOVE      "Invalid Mode of Separation",ERRDESC
            CALL      PRTL0000                   * print line
          ENDIF
.
. ------- Service Category on Admission ----------------------------------------
.
          MOVE      ZERO,FORM1
          MOVE      TRATYPE,FORM1
          IF        FORM1<0 | FORM1>9
        MOVE      "Invalid Service Category on Admission/Admission Type",ERRDESC
            CALL      PRTL0000                   * print line
          ENDIF
.
. ------- Readmission within 28 days -------------------------------------------
.
          MOVE      ZERO,FORM1
          MOVE      TREADMN,FORM1
          IF        FORM1<1 | FORM1>3
            MOVE      "Invalid Readmission within 28 Days",ERRDESC
            CALL      PRTL0000                   * print line
          ENDIF
.
. ------- Admission Status -----------------------------------------------------
.
          MOVE      ZERO,FORM1
          MOVE      TREMERG,FORM1
          IF        FORM1<1 | FORM1>5
            MOVE      "Invalid Admission Status",ERRDESC
            CALL      PRTL0000
          ENDIF          
.
. ------- Contract Status ------------------------------------------------------
.
          MOVE      ZERO,FORM1
          MOVE      TRCONST,FORM1
          IF        FORM1<1 | FORM1>2
            MOVE      "Invalid Contract Status",ERRDESC
            CALL      PRTL0000                   * print line
          ENDIF
.
. ------- Baby Weight ----------------------------------------------------------
.
          UNPACK    ADATE,CCENT,CYEAR,CMON,CDAY
          PACK      AGEDATE,CCENT,CYEAR,CMON,CDAY
          CALL      CALCAGE
          IF        PSAGEDAY<=29
            IF        FTRBWGHT<400
              MOVE      "Baby Weight Below 400 grams",ERRDESC
              CALL      PRTL0000                 * print line
            ENDIF
            IF        FTRBWGHT>6000
              MOVE      "Baby Weight above 6000 grams",ERRDESC
              CALL      PRTL0000                 * print line
            ENDIF
          ENDIF
.
. ------- Baby bed days --------------------------------------------------------
.
          MATCH     TBDATE8,TRADAT8
          IF        @EQUAL
            IF        UNQBDAYS<0 | UNQBDAYS>9
              MOVE    "DOB = Adm.Date, Unq.Baby bed days must be 0 to 9",ERRDESC
              CALL      PRTL0000             
            ENDIF
          ENDIF
.
. ------- Legal status on admission only for psychiatric -----------------------
.
LSOA00    COMPARE   ONE,TPSYFLG
.         GOTO      LSOA10 IF NOT EQUAL          * Not a psych patient
.
          MOVE      ZERO,FORM5
          MOVE      TIDUMH,FORM5
          COMPARE   ZERO,FORM5
          GOTO      LSOA10 IF NOT EQUAL
.
          MATCH     "02",TRLEGST
          GOTO      LSOA05 IF EQUAL
.
          MATCH     "03",TRLEGST
          GOTO      LSOA05 IF EQUAL
.
          MATCH     "04",TRLEGST
          GOTO      LSOA05 IF EQUAL
.
          MATCH     "06",TRLEGST
          GOTO      LSOA10 IF NOT EQUAL
.
LSOA05    MOVE      "Involuntary days should not be zero",ERRDESC
          CALL      PRTL0000 
.
LSOA10    IF        FTPSYDAY<>0
            MOVE      ONE,TDRGMH                 * mental health legal status
.
            MATCH     "02",TRLEGST
            GOTO      UVT000 IF EQUAL
.
            MATCH     "03",TRLEGST
            GOTO      UVT000 IF EQUAL
.
            MATCH     "04",TRLEGST
            GOTO      UVT000 IF EQUAL
.
            MATCH     "06",TRLEGST
            GOTO      UVT000 IF EQUAL
.
         ELSE
            MOVE      TWO,TDRGMH                 * mental health legal status
.
            MATCH     "01",TRLEGST            
            GOTO      UVT000 IF EQUAL
.
            MATCH     "05",TRLEGST
            GOTO      UVT000 IF EQUAL
.
            MATCH     "07",TRLEGST
            GOTO      UVT000 IF EQUAL
.
            MATCH     "08",TRLEGST
            GOTO      UVT000 IF EQUAL
.
            MATCH     "18",TRLEGST
            GOTO      UVT000 IF EQUAL
.
            MATCH     "19",TRLEGST
            GOTO      UVT000 IF EQUAL
.
            MOVE      "Invalid Legal Status on Admission",ERRDESC
            CALL      PRTL0000
          ENDIF
.
.
.-------- Unplanned visit to theatre -------------------------------------------
.
UVT000    MATCH      SP8,TPRDATE8
          IF         !@EQUAL
            MATCH     SP1,TUPLTHEA
            IF        !@EQUAL
              MOVE      ZERO,FORM1
              MOVE      TUPLTHEA,FORM1
              IF        FORM1=1 | FORM1=2 | FORM1=9
                GOTO       DVA00
              ELSE
                MOVE       "Unplanned visit to Theatre must be 1 or 2",ERRDESC
                CALL      PRTL0000               * print line
              ENDIF
            ENDIF
          ENDIF
.
.-------- DVA Card -------------------------------------------------------------
.
DVA00     BRANCH    DVAFLAG,DVA01                * DVA patient 
..        COMPARE   TWO,PUBPRIV                  * 1 = Public / 2 = Private
..        IF        @EQUAL
            MOVE      SP8,TDVACT
            MOVE      SP10,TDVACN
            GOTO      DOBM0000
..        ENDIF
. 
DVA01     MATCH     SP8,TDVACN
          IF        @EQUAL
            MATCH     SP1,TDVACT
            IF        !@EQUAL
              MOVE      "Card type should be blank if no card number",ERRDESC
              CALL      PRTL0000
              GOTO      DOBM0000
            ENDIF
          ENDIF
.
          MATCH       "50",TPSTAT
          IF          @EQUAL
            MATCH       "G",TDVACT
            GOTO        DVACN00 IF EQUAL 
.
            MATCH       "W",TDVACT
            GOTO        DVACN00 IF EQUAL
.
            MOVE     "DVA Card type must be completed for Vet Affairs",ERRDESC
            CALL     PRTL0000
.
DVACN00     MATCH    SP9,TDVACN
            IF       @EQUAL
              MOVE   "DVA Card no. must be completed for Vet Affairs",ERRDESC
              CALL   PRTL0000
            ENDIF
          ENDIF
.
          CMATCH    "N",TDVACN
          GOTO      DOBM0000 IF EQUAL
.
          CMATCH    "V",TDVACN
          GOTO      DOBM0000 IF EQUAL
.
          CMATCH    "S",TDVACN
          GOTO      DOBM0000 IF EQUAL
.
          CMATCH    "Q",TDVACN
          GOTO      DOBM0000 IF EQUAL
.
          CMATCH    "T",TDVACN
          GOTO      DOBM0000 IF EQUAL
.
          CMATCH    "W",TDVACN
          GOTO      DOBM0000 IF EQUAL
.
          MOVE      "Invalid DVA Card number",ERRDESC
          CALL      PRTL0000
.
DVACT00   MATCH     SP10,TDVACN
          IF        !@EQUAL
            COMPARE   TWO,PUBPRIV                * 1 = Public / 2=Private
            GOTO      DOBM0000 IF EQUAL
            MATCH     SP1,TDVACT
            IF        @EQUAL
              MOVE      "No DVA Card Type",ERRDESC
              CALL      PRTL0000
            ENDIF
          ENDIF
.
. ------- Born in Hospital but DOB <> DOA (Date of Birth Mismatch) -------------
.
DOBM0000  MATCH     "00",TRSREF
          IF        @EQUAL
            UNPACK    TBDATE8,XDAY,XMON,XCENT,XYEAR
            PACK      KEY8,XCENT,XYEAR,XMON,XDAY
            REP       " 0",KEY8
            MATCH     KEY8,ADATE
            IF        !@EQUAL
              MOVE   "Source of Referral = 0, DOB must = Admission Date",ERRDESC
              CALL      PRTL0000                 * print line
            ENDIF
          ENDIF
.
. ------- Baby Status X Source of Referral -------------------------------------
.
          MATCH     "00",TRSREF
          IF        @EQUAL
            IF        UNQBDAYS<0 | UNQBDAYS>9
         MOVE     "Source of Ref. = 0, Unq.Baby Bed days must be 0 to 9",ERRDESC
              CALL      PRTL0000                 * print line
            ENDIF
          ENDIF
.
. ------- Hospital Transferred X Admission Hosp --------------------------------
. 
          MATCH     THOSCOD,TAREAT
          IF        @EQUAL
     MOVE      "Transfer Hospital must be different to Admission Hosp.",ERRDESC
            CALL      PRTL0000                   * print line
          ENDIF
.
. ------- Contract Status ------------------------------------------------------
.
.          MATCH     "1",TRCONST
.          IF        @EQUAL
.            MATCH     SP7,TPROCCD[1]
.            IF        @EQUAL
.             MOVE      "Contract Status = 1, there must be a Procedure",ERRDESC
.              CALL      PRTL0000                 * print line
.            ENDIF
.          ENDIF
.
. ------- Validate the operation code and date ---------------------------------
.
VALD8000  MATCH     SP7,TPROCCD[1]
          IF        @EQUAL
            MATCH     SP8,TPRDATE8
            IF        !@EQUAL
              MOVE      "Operation Date exists, but NO Operation Code",ERRDESC
              CALL      PRTL0000                 * print line
            ENDIF
          ELSE
            MATCH     SP8,TPRDATE8
            IF        @EQUAL
              BRANCH    PTMORBDT,VALD9999        
              MATCH     "1",PT0ODTMN
              GOTO      VALD9999 IF EQUAL
              MOVE      "Operation Code exists, but NO Operation Date",ERRDESC
              CALL      PRTL0000                 * print line
            ENDIF
          ENDIF
.
VALD9999  RETURN
+
.*******************************************************************************
.                    CHIH0000                               Called by TRAN7000 *
.                    Check for Hospital in the Hotel                           *
.*******************************************************************************
CHIH0000  MOVE      ZERO,HIHFOUND
.
          PACK      KEY30,AADMNO,SP70
          CALL      RDSTRAN2
CHIH1000  CALL      RDKTRAN2
          BRANCH    OVRCD,CHIH9999
.
          MATCH     DAADMNO,DTADMN
          GOTO      CHIH9999 IF NOT EQUAL
.
          PACK      KEY6,TWARD,TBED,SP70
          CALL      RDWARD1
          BRANCH    OVRCD,CHIH1000               
.
          PACK      KEY5,CATBT,WEFRBT,SP70
          CALL      RDCODE1
          BRANCH    OVRCD,CHIH1000       
.
          MATCH     ANST,TCINDC1
          IF        !@EQUAL
            COMPARE    ONE,HIHFOUND
            GOTO       CHIH9000 IF EQUAL
            GOTO       CHIH1000
          ENDIF
.
          COMPARE   ONE,HIHFOUND                 * Set Discharge Date
          IF        !@EQUAL
            UNPACK    TDATE,CCENT,CYEAR,CMON,CDAY       
            PACK      TDDATE8,CDAY,CMON,CCENT,CYEAR
            REP       " 0",TDDATE8
.
            UNPACK    TTIME,XHOUR,ANS,XMIN
            PACK      TRSEPTM,XHOUR,XMIN         * Separation Time
            REP       " 0",TRSEPTM
.
            MOVE      ONE,HIHFOUND
            GOTO      CHIH1000
          ENDIF
.
CHIH9000  PACK      ERRDESC,SP70
          CLEAR     ERRDESC
          APPEND    "Invalid Hospital in the Hotel transfer",ERRDESC
          APPEND    EPSNO,ERRDESC
          APPEND    SP70,ERRDESC
          RESET     ERRDESC
          CALL      PRTL0000                     * Print error line
          GOTO      CHIH9999
.
CHIH9999  RETURN
+
.*******************************************************************************
.                   MVEXT000                                  Called by ML5000 *
.                   Move Extract to Web Directory                              *
.*******************************************************************************
MVEXT000  CLEAR     CMDLINE                      * header file
          APPEND    "ibabil50.us1 ",CMDLINE
          APPEND    FILENAME,CMDLINE
          APPEND    ".txt",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
MVEXT999  RETURN
+
.*******************************************************************************
.                    CONCD000                               Called by ADMD5800 *
.                                                                              *
.  See if the patient has concession card of a given type on file              *
.                                                                              *
.  Requires: CARDTYPE - Concession Card Type (3=DVA)                           *
.            DATETIME - date/time (ccyymmddhhmmss)                             *
.            PURNO - U/R number                                                *
.  Returns:  EXIT  0 = valid concession card found                             *
.                  1 = no valid concession card found                          *
.            DIM20 - Concession Card Number                                    *
.*******************************************************************************
.
CONCD000  MOVE      SP70,DIM20
          PACK      KEY19,PURNO,Z70
          CALL      RSPMCCD1
CONCD050  CALL      RPPMCCD1 
          BRANCH    OVRCD,CONCD910
.
          MATCH     PURNO,PMCDURNO               * same U/R still ?
          GOTO      CONCD910 IF NOT EQUAL        * no - nothing found
.
.         Check if the card type is DVA (Cat ct, Indicator 1)
.
          PACK      KEY5,CATCT,PMCDCTYP
          CALL      RDCODE1                      * code on file ?
          BRANCH    OVRCD,CONCD050               * no - ignore record
.
          MATCH     SP1,TCINDC1                  * blank indicator 1 ?
          GOTO      CONCD050 IF EQUAL            * yes - ignore record
.
          TYPE      TCINDC1                      * numeric indicator 1 ?
          GOTO      CONCD050 IF NOT EQUAL        * no - ignore record
.
          MOVE      TCINDC1,FORM1
          COMPARE   FORM1,CARDTYPE               * same concession card type ?
          GOTO      CONCD050 IF NOT EQUAL        * no - ignore record
.
          MATCH     SP8,PMCDEXDT                 * expiry date blank ?
          GOTO      CONCD100 IF EQUAL            * yes - assume valid
.
          MATCH     ADATE,PMCDEXDT               * card valid for date ?
          GOTO      CONCD910 IF LESS             * no - nothing found
.
CONCD100  MATCH     SP20,PMCDCNUM                * card number blank ?
          GOTO      CONCD910 IF EQUAL            * yes - nothing found
.
          MOVE      PMCDCNUM,DIM20               * load concession card number
          MOVE      ZERO,EXIT
          GOTO      CONCD999
.
CONCD910  MOVE      SP70,PMCDCNUM
          MOVE      SP70,PMCDCTYP
          MOVE      SP70,PMCDEXDT
          MOVE      SP70,PMCDDVAC
          MOVE      ONE,EXIT
.
CONCD999  RETURN
+
.==============================================================================
.
          INC       STD001IO
          INC       IBAPOSIO/INC
          INC       CALCAGE
          INC       CALCDAYS
          INC       EXCLNEWB
          INC       PATM10T9
          INC       PATGILOS
          INC       PATHSPKY
          INC       SEXDSCIO
          INC       OPRDEAIO/INC
          INC       PATCMPIO/INC
          INC       PATCODIO/INC
          INC       PATDADIO/INC
          INC       PATVADIO/INC
          INC       PATDSCIO/INC
          INC       PATECDIO/INC
          INC       PATECOIO/INC
          INC       PATFN1IO/INC
          INC       PATHSPIO/INC            * Hospital Details table
          INC       PATICUIO/INC
          INC       PATICDIO/INC
          INC       PATICOIO/INC
          INC       PATMA1IO/INC
          INC       PATPGRIO/INC
          INC       PATWR1IO/INC
          INC       PMSPX2IO/INC
          INC       HL7BMTIO/INC
          INC       PATMI1IO/INC
          INC       PATTRNIO/INC
          INC       PATVISIO/INC
          INC       PMSVX1IO/INC
          INC       PMSCCDIO/INC
          INC       PMSPRDIO/INC
          INC       PATWVEIO/INC
.
.

