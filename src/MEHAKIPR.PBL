.------------------------------------------------------------
.  File          :  MEHAKIPR.PBL
.
.  Function      :  Update Keyword Index File for Mental Health Axis Table
.
.  Parameters    :  MHAXTYPE & MHAXCODE - Key to the Mental Health Axis Table
.
.  Modifications :
.
.  Notes
.  -----
.  This Skeleton Routine is to Create a Procedure to Update
.  a Key Word Index Table that can be used for searching 
.  Masterfiles. The procedure should be called from the 
.  Add, Update and Delete functions in the Masterfile 
.  Maintenance Function.
.  
.  A Key Word Index Table is Defined in the following Manner
.                              
.  PTDKxxxx    DIM       xx    * Code Field Segment 1
.  PTDKyyyy    DIM       xx    * Code Field Segment n
.  PMHKKKWD     DIM       15    * Key Word
.  PTDKSPA     DIM       10    * Spare
.
.  Index 1   PTDKxxxx, PTDKyyyy, PMHKKKWD
.  Index 2   PMHKKKWD, PTDKxxxx, PTDKyyyy
.
.  To convert this Procedure the following should be performed
.    Global Change PAT to the System ID eg :%s/PAT/PAT/g
.    Global Change CKI to the File   ID eg :%s/CKI/CKI/g
.    Global Change PTDK to the IO Call ID eg :%s/PTDK/PTDK/g
.    Modify the KEYINDEX defintion to combined Code Field Lengths eg 6
.    Global Change KEY21 to the Key for the Key Word Table eg KEY21
.    Change xxxxxxx to the Code Fields eg DCODEhh
.    Change the HCGE0000 routine to call the AXIBW000 for each
.    string of key words to be indexed for the Coded Field
.    eg MOVE    DSNAME,KEYWORDS
.       CALL    AXIBW000
.       MOVE    DGNAME,KEYWORDS
.       CALL    AXIBW000
.       MOVE    TDESC,KEYWORDS
.       CALL    AXIBW000
.------------------------------------------------------------
          DEFPROC   MEHAKIUP
.
          INC       MEHAKIFD/INC
.
KEYINDX1  DIM       1         * Code Index in Table
KEYINDX2  DIM       9         * Code Index in Table
KEYWORDS  DIM       60        * String Containing the Key Words to be Indexed
SIXTY     FORM      "60"
KEYWRDNO  FORM      2
KEYWRD00  DIM       60
KEYWRD01  DIM       15
KEYWRD02  DIM       15
KEYWRD03  DIM       15
KEYWRD04  DIM       15
KEYWRD05  DIM       15
KEYWRD06  DIM       15
KEYWRD07  DIM       15
KEYWRD08  DIM       15
KEYWRD09  DIM       15
KEYWRD10  DIM       15
.------------------------------------------------------------
. Generate Word Index
.------------------------------------------------------------
HCGE0000  MOVE     ZERO,OVRCD
          TRAP     OVERCOND IF IO
          OPEN     MEHAKIA1,"mehakiaf"
          TRAPCLR  IO
          BRANCH   OVRCD,HCGE9999
.
          MOVE     MHAXTYPE,KEYINDX1
          MOVE     MHAXCODE,KEYINDX2
          CALL     AXICL000           * Remove Current Key Word Index
          BRANCH   EXIT,HCGE9999
.
          PACK     KEY10,MHAXTYPE,MHAXCODE * Validate Record on File
          CALL     RDMHAXI1
          BRANCH   OVRCD,HCGE1900     * If Not then it Must be a Delete/Clear
.
          MOVE     MHAXTYPE,KEYINDX1
          MOVE     MHAXCODE,KEYINDX2
          MOVE     MHAXCODE,KEYWORDS
          CALL     AXIBW000
.
          MOVE     MHAXTYPE,KEYINDX1
          MOVE     MHAXCODE,KEYINDX2
          MOVE     MHAXDESC,KEYWORDS
          CALL     AXIBW000
.
HCGE1900  CLOSE    MEHAKIA1
.
HCGE9999  GOTO     MEHAKIEP
.------------------------------------------------------------
. Clear Current Key Words
.------------------------------------------------------------
AXICL000  PACK     KEY25,KEYINDX1,KEYINDX2,SP70
          CALL     RSMHAKI1
          CALL     RKMHAKI1
          BRANCH   OVRCD,AXICL999
          MATCH    KEYINDX1,MHAKKTYP
          GOTO     AXICL999 IF NOT EQUAL
          MATCH    KEYINDX2,MHAKKITM
          GOTO     AXICL999 IF NOT EQUAL
.
          PACK     KEY25,MHAKKTYP,MHAKKITM,MHAKKKWD,SP70
          CALL     DEMHAKI1
          GOTO     AXICL000
.
AXICL999  RETURN
.-------------------------------------------------
. Determine Words to Index
.-------------------------------------------------
AXIBW000  CMATCH    SP1,KEYWORDS             * Eliminate leading blanks
          IF        @EQUAL
            BUMP      KEYWORDS
            GOTO      AXIBW000 IF NOT EOS
            GOTO      AXIBW999               * entire name if blank
          ENDIF
          PACK      KEY60,KEYWORDS,SP30      * reset form pointer
          MOVE      KEY60,KEYWORDS
.
          SCAN      SP1,KEYWORDS             * Locate the first blank
          GOTO      AXIBW100 IF NOT EQUAL
          BUMP      KEYWORDS,-1              * go back 1 to end of name
          MOVEFPTR  KEYWORDS,CCITEM          * another handly form field
          RESET     KEYWORDS                 * reset the form pointer
          SETLPTR   KEYWORDS,CCITEM          * set logical length to end of name
.
.         Save this Word
.
AXIBW100  MOVE      KEYWORDS,KEY15
          PACK      KEY15,KEY15,SP70
          REP       UPPLOW,KEY15             * Always Upper Case
          PACK      KEY25,KEYINDX1,KEYINDX2,KEY15
          UNPACK    KEY25,MHAKKTYP,MHAKKITM,MHAKKKWD
          CALL      RDMHAKI1
          IF        OVRCD=1
            CALL      WRMHAKI1
          ENDIF
          GOTO      AXIBW190
.
.         Check for any more words
.
AXIBW190  SETLPTR   KEYWORDS,SIXTY         * reset logical length
          ADD       ONE,CCITEM             * position of 1st blank
          RESET     KEYWORDS,CCITEM        * reset to this point
          PACK      KEY60,KEYWORDS,SP30    * reset form pointer
          MOVE      KEY60,KEYWORDS
          GOTO      AXIBW000
.
AXIBW999  RETURN
.
          INC       MEHAKIIO/INC
          INC       IBAOVRIO/INC
.
MEHAKIEP  ENDPROC                          * End of Procedure
.
