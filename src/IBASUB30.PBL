.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.04.01  13.04.2005 Peter Vela CAR 59696
.           Recompiled for SINSUAFD
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.09.B01 27.11.2000 Charles Handaya
.           Modification of Warehouse Security
.-------------------------------------------------------
. VF.00.03  18.01.2000 Charles Handaya
.           Add Export File function
.           Add New Warehouse Range for Stock item
.           Change to standard Cost Centre Range Keyin
.           srf 637201
. VF.00.02  29.12.1999 Charles Handaya
.           Recompiled for Fixing Audit Date (CCYYMMDD)
. VF.00.01  03.11.1999 Sandra Barcham
.           Change locked message to use X
.-------------------------------------------------------
EXPORTFL  FILE      ASCII, FIXED=400     * Export File (Adjust Length to Suit)
EXPORTFN  DIM       8                    * Export File Name
TABDELM   EQU       0x09                 * Tab Delimiter
.
CHECKPON  DIM   7
CHECKCST  DIM   5
CMDLINE   DIM   100
DIM25     DIM   25
ENDCST    DIM   5
ENDWAR    DIM   5
FIRSTHRU  FORM  1
FROMCOST  DIM   5
POPRINTD  FORM  1
KEY19CHK  DIM   19
RCSUBTOT  FORM  12.2
INTOTAL   FORM  12.2
INSUBTOT  FORM  12.2
INVTOTAM  FORM  12.2
INVTOTQT  FORM  12.2
RCTOTAL   FORM  12.2
REPTSTKF  FORM  1
SAVFLDID  DIM   5
STRCST    DIM   5
STRWAR    DIM   5
SVKEY6    DIM   6
.
TMPRECA1  IFILE     SQL, FIXED=163, KEY="U1-5,46-52,53-89,102-104"
TMPRECA2  IFILE     SQL, FIXED=163, KEY="U6-45,46-52,53-89,102-104"
TMPRECA3  IFILE     SQL, FIXED=163, KEY="U46-52,102-104"
.
TMRECST   DIM       5      5        1     Cost Centre
TMRECSTD  DIM      40     40        6     Cost Centre Description
TMREPON   DIM       7      7       46     Purchase Order Number
TMRECATD  DIM      37     37       53     Catalog Description
TMREPRD   DIM       5      5       90     Product Group
TMRECAT   DIM       7      7       95     Catalog Code
TMREITM   DIM       3      3      102     PO Item Number
TMREQTY   FORM     12.2    8      105     Quantity Received
TMRESUP   DIM       5      5      113     Supplier
TMRESUT   DIM      15     15      118     Supply Unit
TMREUCST  FORM     12.4    9      133     Unit Cost
TMRERNIN  FORM     12.2    8      142     Quantity Invoiced
TMRERAIN  FORM     12.2    8      150     Amount Invoiced
TMREWARE  DIM       5      5      158     Warehouse
.                              ------
.                                 163
TMPCATD   DIM   22
TMPRECNM  DIM   8
TMPRECAA  INIT  "sub30a"
.
.         Filename : sub30bxx.dat          (xx = port id)
.
TEMPSUB1  IFILE SQL, FIXED=36, KEY="U1-5"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
TSUBWARE  DIM       5            5           1       Warehouse Code
TSUBTOTA  FORM      12.2         15          6       Total Received Not Invoiced
TSUBTOTB  FORM      12.2         15         21       Total Received and Invoiced
.
.End of Record                              36
.
TMSUB30A  INIT      "sub30b"
TMPSUBNM  DIM       8
TWARDESC  INIT      "Total Warehouse "
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASUB30
.   Function      :   P/O Received by Cost Centre Report      
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       APSIMSFD/INC
          INC       APSINPFD/INC
          INC       APSISLFD/INC
          INC       SINCCAFD/INC
          INC       SINCIAFD/INC
          INC       SINCONFD/INC
          INC       SINFACFD/INC
          INC       SINPERFD/INC
          INC       SINPOAFD/INC
          INC       SINPOCFD/INC
          INC       SINPOFFD/INC
          INC       SINSUAFD/INC
          INC       SINTMPDF/INC
          INC       SINWARFD/INC
          INC       SINWSEFD/INC
.=========================
.Local Variable Definition
.-------------------------
FRCCCODE  DIM       5 * Scr 00 Fld     5
TOCCCODE  DIM       5 * Scr 00 Fld     6
FROMCST   DIM      46 * Scr 01 Fld     4
TOCST     DIM      46 * Scr 01 Fld     5
PRTTOT    FORM      1 * Scr 01 Fld     8
REPTSTCK  DIM       1 * Scr 01 Fld    12
FROMWAR   DIM      46 * Scr 01 Fld    13
TOWAR     DIM      46 * Scr 01 Fld    14
EXPORTYN  FORM      1 * Scr 01 Fld    19
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASUB30"
PRGNAM    INIT      "P/O Received by Cost Centre Report      "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      RDPAR000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          MOVE      "   24",AUDTSECT
          MOVE      "219",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudsa";
            OPEN      SINAUDSA,"sinaudsa"
          ENDIF
          MOVE      "   24",AUDTSECT
          MOVE      "223",AUDTPOST
          READ      CONTROLF,AUDTSECT;*AUDTPOST,AUDTFLAG
          IF        AUDTFLAG=1
            DISPLAY   *P56:24,"Opening sinaudwa";
            OPEN      SINAUDWA,"sinaudwa"
          ENDIF
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA1,"sinccaaf"
          DISPLAY   *P56:24,"Opening sinccaaf";
          OPEN      SINCCAA2,"sinccaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA1,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA2,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA3,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinfacaf";
          OPEN      SINFACA1,"sinfacaf"
          DISPLAY   *P56:24,"Opening sinfacaf";
          OPEN      SINFACA2,"sinfacaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA1,"sinperaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA1,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA2,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA3,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpoaaf";
          OPEN      SINPOAA4,"sinpoaaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA1,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA2,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA3,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA4,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA5,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA6,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpocaf";
          OPEN      SINPOCA7,"sinpocaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA1,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA2,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA3,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinpofaf";
          OPEN      SINPOFA4,"sinpofaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA1,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA2,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinsuaaf";
          OPEN      SINSUAA3,"sinsuaaf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA1,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwaraf";
          OPEN      SINWARA2,"sinwaraf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA1,"sinwseaf"
          DISPLAY   *P56:24,"Opening sinwseaf";
          OPEN      SINWSEA2,"sinwseaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Menu                          
          ENDIF
          MATCH     "01",SCRID
          IF         @EQUAL
            CALL       PS01L000   * Print Report by Code               
          ENDIF
          MATCH     "02",SCRID
          IF         @EQUAL
            CALL       PS02L000   * Print report by description        
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Menu                          
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Menu                          
.-------------------------------------------------------
CF00L000
          MOVE      SP70,FRCCCODE
          MOVE      SP70,TOCCCODE
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Menu                          
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Menu                          
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Menu                          
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Menu                          
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Menu                          
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L999:
                            PS00L101,PS00L102
          GOTO     PS00L999
.
PS00L101
          MOVE      FRCCCODE,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      TOCCCODE,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Menu                          
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L006,SF00L006
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L020:
                            SF00L020,SF00L020
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
          CALL      SC01L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
.
SF00L103
          CALL      SC02L000
          MOVE      ONE,EXIT
          GOTO      SF00L999
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.--------------------------------
. Screen - Print Report by Code               
.--------------------------------
SC01L000
SC01L100
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC01L200
          CALL      CF01L000 * Clear Fields
          CALL      SETSCR01
SC01L300
          CALL      KY01L000 * Enter Key Fields
          BRANCH    EXIT,SC01L999,SC01L999
SC01L400
          CALL      WP01L000 * Load any WP Details
SC01L500
          CALL      LM01L000 * Load any Batch Details
SC01L600
          CALL      DF01L000 * Display Fields
SC01L700
          CALL      SF01L000 * Select Fields
          BRANCH    EXIT,SC01L100,SC01L100,SC01L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC01L800
SC01L900
SC01L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Print Report by Code               
.-------------------------------------------------------
CF01L000
          MOVE      SP70,FROMCST 
          MOVE      SP70,TOCST   
          MOVE      ZERO,PRTTOT  
          MOVE      SP70,SIPEYEAR
          MOVE      SP70,SIPEPER 
          MOVE      SP70,REPTSTCK
          MOVE      SP70,FROMWAR 
          MOVE      SP70,TOWAR   
          MOVE      ZERO,EXPORTYN
CF01L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Print Report by Code               
.--------------------------------------------------------
KY01L000
          MOVE      ZERO,EXIT
          GOTO      KY01L999
.
KY01L900  MOVE      ONE,EXIT
KY01L999  RETURN
.---------------------------------------------------------
. Load WP files for : Print Report by Code               
.---------------------------------------------------------
WP01L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Print Report by Code               
.---------------------------------------------------------
LM01L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Print Report by Code               
.---------------------------------------------------------
DF01L000
          BRANCH   ACCEPT,DF01L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF01L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF01L900
          MATCH    PRGID,SCPSPID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF01L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF01L010 IF NOT EQUAL
.
          CALL     PS01L000 * Display Field
          GOTO     DF01L010
DF01L900
DF01L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Print Report by Code               
.---------------------------------------------------------
PS01L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS01L999,PS01L999,PS01L999,PS01L101:
                            PS01L102,PS01L999,PS01L999,PS01L103:
                            PS01L104,PS01L105,PS01L999,PS01L106:
                            PS01L107,PS01L108,PS01L999,PS01L999:
                           PS01L999,PS01L999,PS01L109
          GOTO     PS01L999
.
PS01L101
          MOVE      FROMCST,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L102
          MOVE      TOCST,VAR        
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L103
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      PRTTOT,FORM2     
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L104
          MOVE      SIPEYEAR,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L105
          MOVE      SIPEPER,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L106
          MOVE      REPTSTCK,VAR     
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L107
          MOVE      FROMWAR,VAR      
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L108
          MOVE      TOWAR,VAR        
          CALL      DISPITEM
          GOTO     PS01L999
.
PS01L109
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS01L999
PS01L999
          RETURN
.---------------------------------------------------------
. Selections for : Print Report by Code               
.---------------------------------------------------------
SF01L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF01L001  BRANCH   ACCEPT,SF01L020
.
SF01L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L006,SF01L101,SF01L102,SF01L103:
                            SF01L006,SF01L006,SF01L006,SF01L104:
                            SF01L105,SF01L106,SF01L006,SF01L107:
                            SF01L108,SF01L006,SF01L006,SF01L006:
                           SF01L006,SF01L006,SF01L109
SF01L006  BEEP
          GOTO     SF01L005
SF01L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF01L090
          MATCH    PRGID,SCSLPID
          GOTO     SF01L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF01L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF01L020,SF01L020,SF01L020,SF01L103:
                            SF01L020,SF01L020,SF01L020,SF01L104:
                            SF01L105,SF01L106,SF01L020,SF01L107:
                            SF01L108,SF01L020,SF01L020,SF01L020:
                           SF01L020,SF01L020,SF01L109
          GOTO     SF01L020
SF01L090  MOVE     ZERO,ACCEPT
          GOTO     SF01L001
.
SF01L101
          MOVE      ZERO,EXIT
          GOTO      SF01L999
.
SF01L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      PRNT0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF01L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF01L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF01L999
          ENDIF
          MOVE      "01",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF01L000
          ENDIF
          GOTO      SF01L001
.
SF01L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOCST   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      ECOS0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L103
            ENDIF
            BRANCH    EXIT,SF01L103,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      FROMCST,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOCST,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
.
SF01L104
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,PRTTOT  
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      PRTTOT,FORM2     
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L105
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KYEAR000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L105
            ENDIF
            BRANCH    EXIT,SF01L105,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      SIPEYEAR,VAR     
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L106
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KPERD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L106
            ENDIF
            BRANCH    EXIT,SF01L106,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      SIPEPER,VAR      
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L107
          CALL     SELECTED
          MOVE      "2",CKEYTYP
          CALL      ESTCK000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L107
            ENDIF
            BRANCH    EXIT,SF01L107,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      REPTSTCK,VAR     
          CALL      DISPITEM
          GOTO     SF01L001
.
SF01L108
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOWAR   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EWAR0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF01L108
            ENDIF
            BRANCH    EXIT,SF01L108,SF01L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF01L990 IF EQUAL
          ENDIF
          MOVE      FROMWAR,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOWAR,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF01L001
.
SF01L109
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,EXPORTYN
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF01L001
SF01L990  MOVE      FOUR,EXIT * Exit Char Exit
SF01L999  RETURN
.--------------------------------
. Screen - Print report by description        
.--------------------------------
SC02L000
SC02L100
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC02L200
          CALL      CF02L000 * Clear Fields
          CALL      SETSCR02
SC02L300
          CALL      KY02L000 * Enter Key Fields
          BRANCH    EXIT,SC02L999,SC02L999
SC02L400
          CALL      WP02L000 * Load any WP Details
SC02L500
          CALL      LM02L000 * Load any Batch Details
SC02L600
          CALL      DF02L000 * Display Fields
SC02L700
          CALL      SF02L000 * Select Fields
          BRANCH    EXIT,SC02L100,SC02L100,SC02L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC02L800
SC02L900
SC02L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Print report by description        
.-------------------------------------------------------
CF02L000
          MOVE      SP70,FROMCST 
          MOVE      SP70,TOCST   
          MOVE      SP70,SIPEYEAR
          MOVE      SP70,SIPEPER 
          MOVE      ZERO,PRTTOT  
          MOVE      SP70,REPTSTCK
          MOVE      ZERO,EXPORTYN
          MOVE      SP70,FROMWAR 
          MOVE      SP70,TOWAR   
CF02L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Print report by description        
.--------------------------------------------------------
KY02L000
          MOVE      ZERO,EXIT
          GOTO      KY02L999
.
KY02L900  MOVE      ONE,EXIT
KY02L999  RETURN
.---------------------------------------------------------
. Load WP files for : Print report by description        
.---------------------------------------------------------
WP02L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Print report by description        
.---------------------------------------------------------
LM02L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Print report by description        
.---------------------------------------------------------
DF02L000
          BRANCH   ACCEPT,DF02L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF02L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF02L900
          MATCH    PRGID,SCPSPID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF02L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF02L010 IF NOT EQUAL
.
          CALL     PS02L000 * Display Field
          GOTO     DF02L010
DF02L900
DF02L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Print report by description        
.---------------------------------------------------------
PS02L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS02L999,PS02L999,PS02L999,PS02L101:
                            PS02L102,PS02L103,PS02L104,PS02L105:
                            PS02L106,PS02L107,PS02L999,PS02L999:
                           PS02L108,PS02L109
          GOTO     PS02L999
.
PS02L101
          MOVE      FROMCST,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L102
          MOVE      TOCST,VAR        
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L103
          MOVE      SIPEYEAR,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L104
          MOVE      SIPEPER,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L105
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      PRTTOT,FORM2     
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L106
          MOVE      REPTSTCK,VAR     
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L107
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L108
          MOVE      FROMWAR,VAR      
          CALL      DISPITEM
          GOTO     PS02L999
.
PS02L109
          MOVE      TOWAR,VAR        
          CALL      DISPITEM
          GOTO     PS02L999
PS02L999
          RETURN
.---------------------------------------------------------
. Selections for : Print report by description        
.---------------------------------------------------------
SF02L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF02L001  BRANCH   ACCEPT,SF02L020
.
SF02L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L006,SF02L101,SF02L102,SF02L103:
                            SF02L006,SF02L104,SF02L105,SF02L106:
                            SF02L107,SF02L108,SF02L006,SF02L006:
                           SF02L109,SF02L006
SF02L006  BEEP
          GOTO     SF02L005
SF02L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF02L090
          MATCH    PRGID,SCSLPID
          GOTO     SF02L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF02L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF02L020,SF02L020,SF02L020,SF02L103:
                            SF02L020,SF02L104,SF02L105,SF02L106:
                            SF02L107,SF02L108,SF02L020,SF02L020:
                           SF02L109,SF02L020
          GOTO     SF02L020
SF02L090  MOVE     ZERO,ACCEPT
          GOTO     SF02L001
.
SF02L101
          MOVE      ZERO,EXIT
          GOTO      SF02L999
.
SF02L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      PRNT0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF02L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF02L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF02L999
          ENDIF
          MOVE      "02",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF02L000
          ENDIF
          GOTO      SF02L001
.
SF02L103
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOCST   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "2",CKEYTYP
          CALL      ECOS0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L103
            ENDIF
            BRANCH    EXIT,SF02L103,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      FROMCST,VAR      
          CALL      DISPITEM
.
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOCST,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
.
SF02L104
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KYEAR000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L104
            ENDIF
            BRANCH    EXIT,SF02L104,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      SIPEYEAR,VAR     
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L105
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      KPERD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L105
            ENDIF
            BRANCH    EXIT,SF02L105,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      SIPEPER,VAR      
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L106
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,PRTTOT  
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      PRTTOT,FORM2     
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L107
          CALL     SELECTED
          MOVE      "2",CKEYTYP
          CALL      ESTCK000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L107
            ENDIF
            BRANCH    EXIT,SF02L107,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      REPTSTCK,VAR     
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L108
          CALL     SELECTED
          CALL      YORN0000
          MOVE       FYESNO,EXPORTYN
          MOVE      NO,YESNO
          MOVE      ZERO,FORM2
          MOVE      EXPORTYN,FORM2   
          LOAD      YESNO,FORM2,YES
          MOVE      YESNO,VAR
          CALL      DISPITEM
          GOTO     SF02L001
.
SF02L109
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SP70,TOWAR   
            PACK      VAR,SP70,SP70
            CALL      DISPITEM
          ENDIF
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EWAR0000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF02L109
            ENDIF
            BRANCH    EXIT,SF02L109,SF02L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF02L990 IF EQUAL
          ENDIF
          MOVE      FROMWAR,VAR      
          CALL      DISPITEM
.
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE      TOWAR,VAR        
            CALL      DISPITEM
          ENDIF
          GOTO     SF02L001
SF02L990  MOVE      FOUR,EXIT * Exit Char Exit
SF02L999  RETURN
.@@@@@ Function Restart Point @@@@@
.********************************************************************
. Read Parameters in
.********************************************************************
RDPAR000  READ      CONTROLF,TWENTY3;*95,HACCNT,*124,HORDDES
.
          IF        HACCNT=1
            DISPLAY   *P50:24,"Opening apsinpaf"
            OPEN      APSINPA1,"apsinpaf"
            OPEN      APSINPA2,"apsinpaf"
            DISPLAY   *P50:24,"Opening apsimsaf"
            OPEN      APSIMSA1,"apsimsaf"
            DISPLAY   *P50:24,"Opening apsislaf"
            OPEN      APSISLA1,"apsislaf"
.
            PACK      APISISC,SP70
            PACK      KEY1,SP70
            CALL      RSAPIS1
            CALL      RKAPIS1
          ENDIF
.
RDPAR999  RETURN
.********************************************************************
. SETSCR01 - set up for screen 01
.********************************************************************
SETSCR01  MOVE      "1",ACCEPT
          MOVE      "1",OPTIONA
          MOVE      "N",DEFYESNO
.
          MOVE      SP70,STRCST
          MOVE      SP70,ENDCST
          MOVE      SP70,STRWAR
          MOVE      SP70,ENDWAR
          MOVE      SP70,FROMCST
          MOVE      SP70,TOCST
          MOVE      SP70,FROMWAR
          MOVE      SP70,TOWAR
          MOVE      SP70,PDESC1
          MOVE      SP70,PDESC2
          MOVE      SP70,SIWAWAR
          MOVE      SP70,SICACODE
          RETURN
.********************************************************************
. PRNT - print report                               Called by ML
.         Requires : FROMLAB,TOLAB   (print range display labels)
.                    FROMCODE,TOCODE (print range)
.                    OPTIONA         (report type)
.********************************************************************
PRNT0000  PACK      DAT6,SIPEYEAR,SIPEPER,SP70
.
          DISPLAY   *P50:24,"Printing :   ";
          CALL      MAKEXP00                     * create export file
.
          MOVE      ZERO,CPAGENO                 * reset page no.
          MOVE      ZERO,TOTALOUT
          MOVE      ZERO,TOTALREC
          CLOCK     TIME,CTIMEIS                 * get current time
          MOVE      "599",CLNO                   * init last line number
          MOVE      SP70,LASTCODE                * clear last item
          CALL      BILD0000                     * Build Temp. File
          CALL      WRIT0000                     * Write Report
          GOTO      PRNT9999
.
PRNT9500  MOVE      ONE,EXIT
.
PRNT9999  RETURN
.********************************************************************
. HEAD - print report                               Called by PRNT
.         Requires : FROMLAB,TOLAB   (print range display labels)
.                    FROMCODE,TOCODE (print range)
.********************************************************************
HEAD0000  UNPACK    DAT6,SIPEYEAR,SIPEPER
          IF        REPTSTKF=0
            PACK      KEY5,CHECKCST,SP70
            CALL      RDSICA1
          ELSE
            MOVE      CHECKCST,SICACODE
            MOVE      "Stock Requisition                     ",SICADESC
          ENDIF
.
          IF        0=PRTTOT
            CALL      HEAD132                    * print heading
            IF        OPTIONA=1
              PRINT        *40,"Print by Cost Centre Code":
                               " for Period ",SIPEPER,SLASH,SIPEYEAR
            ELSE
              PRINT        *40,"Print by Cost Centre Description":
                               " for Period ",SIPEPER,SLASH,SIPEYEAR
            ENDIF
            IF        REPTSTKF=0
              PRINT     *40,"From   : ",FROMCST:
                        *N,*40,"To     : ",TOCST
            ELSE
              PRINT     *40,"From W/H  : ",FROMWAR:
                        *N,*40,"To   W/H  : ",TOWAR
            ENDIF
.
            PRINT     "Cost Centre : ",SICACODE,SP2,SICADESC
            CALL      UND132                     * print line
.
            IF        REPTSTKF=0
              PRINT     "|         |                                ":
                        "| Prod. | Quantity |                 |              ":
                        "|        Received |        Received |":
                        *132,"|",*N:
                        "| P/O No. | Description                    ":
                        "| Code  | Received | Supply Unit     |     Unit Cost":
                        "|    Not Invoiced |    And Invoiced |":
                          *132,"|"
            ELSE
              PRINT     "|        |                                |     ":
                        "| Prod.| Quantity|                |              ":
                        "|        Received|        Received|":
                        *132,"|",*N:
                        "| P/O No.| Description                    | W/H ":
                        "| Code | Received| Supply Unit    |     Unit Cost":
                        "|    Not Invoiced|    And Invoiced|":
                          *132,"|"
            ENDIF
            ADD       "6",CLNO
            CALL      UND132                     * print line
          ELSE
            CALL      HEAD80                     * print heading
            IF        OPTIONA=1
              PRINT        *20,"Print by Cost Centre Code":
                               " for Period ",SIPEPER,SLASH,SIPEYEAR
            ELSE
              PRINT        *20,"Print by Cost Centre Description":
                               " for Period ",SIPEPER,SLASH,SIPEYEAR
            ENDIF
            IF        REPTSTKF=0
              PRINT     *20,"From   : ",FROMCST:
                        *N,*20,"To     : ",TOCST
            ELSE
              PRINT     *20,"From W/H  : ",FROMWAR:
                        *N,*20,"To   W/H  : ",TOWAR
            ENDIF
            CALL      UND80                      * print line
            PRINT     "|                                            ":
                      "|       Received |       Received |":
                      *80,"|",*N:
                      "| Cost Centre                                ":
                      "|   Not Invoiced |   And Invoiced |":
                      *80,"|"
            ADD       "5",CLNO
            CALL      UND80                      * print line
          ENDIF
.
          MOVE      SP70,CHECKPON            * So prints on new page
.
HEAD9999  RETURN
.********************************************************************
. WRIT - print data line                            Called by PRNT
.********************************************************************
.---- loop through PO data ----
.
WRIT0000  MOVE      TRUE,FIRSTHRU
          UNPACK    SP70,CHECKCST,CHECKPON
          PACK      KEY87,SP70,SP70
          PACK      KEY52,SP70
          MOVE      ZERO,SSIRBIQT
          MOVE      ZERO,SSIRBRQT
          PERFORM   OPTIONA,RSTMRE1,RSTMRE2      * go to correct pos. in file
.
WRIT1000  PERFORM   OPTIONA,RKTMRE1,RKTMRE2      * get next record
          IF        OVRCD=1
            CALL      PSUBT000
            COMPARE   ZERO,CPAGENO
            CALL      HEAD0000 IF EQUAL       * print header if nothing printed
            CALL      PTOT0000                * print totals
            PRINT     "****   End of Report   ****"
            MOVE      ZERO,EXIT
            CALL      TRAN0000
            GOTO      WRIT9999
          ENDIF
.
          IF        FIRSTHRU=TRUE
            MOVE      TMRECST,CHECKCST
            MOVE      TMREPON,CHECKPON
            MOVE      FALSE,FIRSTHRU
          ENDIF
.
          IF        OPTIONA=1
            DISPLAY   *P61:24,*V2LON,TMRECST,*EL;
          ELSE
            DISPLAY   *P61:24,*V2LON,TMRECSTD,*EL;
          ENDIF
.
          MATCH     CHECKCST,TMRECST
          IF        !@EQUAL
            CALL      PSUBT000                   * print sub-total
            MOVE      TMRECST,CHECKCST
          ENDIF
.
          ASSIGN    (TMREQTY-TMRERNIN)*TMREUCST,TMRERNIN
          ADD       TMRERNIN,SSIRBRQT
          ADD       TMRERAIN,SSIRBIQT
.
          IF        REPTSTKF=1
            MATCH     STRWAR,TMREWARE
            GOTO      WRIT1000 IF LESS
.
            MATCH     TMREWARE,ENDWAR
            GOTO      WRIT1000 IF LESS
.
. check warehouse security
.
            MATCH     SP70,TMREWARE
            IF        !@EQUAL
              PACK      KEY9,PASSCODE,TMREWARE,SP70
              CALL      RDSIWS1
              BRANCH    OVRCD,WRIT1000
            ENDIF
.
            PACK      KEY5,TMREWARE,SP70
            CALL      RDTSUB1
            IF        OVRCD=1
              MOVE      TMREWARE,TSUBWARE
              MOVE      TMRERNIN,TSUBTOTA
              MOVE      TMRERAIN,TSUBTOTB
              CALL      WRTSUB1
            ELSE
              ADD       TMRERNIN,TSUBTOTA
              ADD       TMRERAIN,TSUBTOTB
              CALL      UPTSUB1
            ENDIF
          ENDIF
.
          ADD       TMRERNIN,TOTALREC
          ADD       TMRERAIN,TOTALOUT
.
          IF        0=PRTTOT
            COMPARE   "55",CLNO                  * end of page ?
            CALL      HEAD0000 IF NOT LESS       * start new page
            MOVE      TMREQTY,QTYFORM8
            MOVE      TMREUCST,F9P4
            MATCH     CHECKPON,TMREPON
            IF        !@EQUAL
              MOVE      TMREPON,KEY7
              MOVE      TMREPON,CHECKPON
            ELSE
              PACK      KEY7,SP70
            ENDIF
.
            MOVE      TMRECATD,TMPCATD
            CALL      WRTEXA00                   * Write Export Details
.
            IF        REPTSTKF=0
              PRINT     "| ",KEY7," | ",TMRECAT,SP1,TMPCATD," | ",TMREPRD:
                        " | ",QTYFORM8," | ",TMRESUT," |",F9P4:
                        "| ",TMRERNIN," | ",TMRERAIN:
                        *132,"|"
            ELSE
              PRINT     "| ",KEY7,"| ",TMRECAT,SP1,TMPCATD," |",TSUBWARE:
                        "| ",TMREPRD,"| ",QTYFORM8,"| ",TMRESUT,"|",F9P4:
                        "| ",TMRERNIN,"| ",TMRERAIN:
                        *132,"|"
            ENDIF
            ADD       "1",CLNO                   * add one to line number
          ENDIF
          GOTO      WRIT1000
.
WRIT9999  CALL      KLTMP000
          RETURN
.------------------------------------------------------------------
. Print Cost Centre totals
.------------------------------------------------------------------
PSUBT000  COMPARE   ZERO,PRTTOT
          GOTO      PSUBT500 IF NOT EQUAL
.
          COMPARE   "55",CLNO                * end of page ?
          CALL      HEAD0000 IF NOT LESS     * start new page
.
          CALL      UND132                   * print line
.
          COMPARE   ZERO,REPTSTKF
          GOTO      PSUBT100 IF NOT EQUAL
.
          PRINT     "| ",*81,"Totals":
                    *96,"| ",SSIRBRQT," | ",SSIRBIQT:
                    *132,"|"
          ADD       ONE,CLNO                 * add one to line number
          MOVE      "599",CLNO
          GOTO      PSUBT900
.
PSUBT100  PACK      KEY5,SP70
          CALL      RSTSUB1
PSUBT200  CALL      RKTSUB1
          BRANCH    OVRCD,PSUBT999
.
          MOVE      SP70,SIWADES
          PACK      KEY5,TSUBWARE,SP70
          CALL      RDSIWA1
.
          COMPARE   "55",CLNO                * end of page ?
          CALL      HEAD0000 IF NOT LESS     * start new page
          PRINT     "| ",*40,"Total W/H ",TSUBWARE," ",SIWADES:
                    *98,"| ",TSUBTOTA,"| ",TSUBTOTB:
                    *132,"|"
          ADD       ONE,CLNO                 * add one to line number
          CALL      UND132                   * print line
          GOTO      PSUBT200
.
PSUBT500  COMPARE   "55",CLNO                * end of page ?
          CALL      HEAD0000 IF NOT LESS     * start new page
          IF        REPTSTKF=0
            PACK      KEY5,CHECKCST,SP70
            CALL      RDSICA1
          ELSE
            MOVE      CHECKCST,SICACODE
            MOVE      "Stock Replenishment                     ",SICADESC
          ENDIF
          CALL      WRTEXG00
          MOVE      SICADESC,KEY37
          PRINT     "| ",SICACODE," ",KEY37:
                    "|",SSIRBRQT," |",SSIRBIQT:
                    *80,"|"
          ADD       ONE,CLNO                 * add one to line number
.
PSUBT900  MOVE      ZERO,SSIRBRQT
          MOVE      ZERO,SSIRBIQT
.
PSUBT999  RETURN
.----------------------------------------------------------------------
. Print totals
.----------------------------------------------------------------------
PTOT0000  COMPARE     ZERO,PRTTOT
          GOTO        PTOT0500 IF NOT EQUAL
.
          IF        REPTSTKF=0
            CALL      UND132                     * print line
            PRINT     "| ",*81,"Grand Totals":
                      *96,"| ",TOTALREC," | ",TOTALOUT:
                      *132,"|"
          ELSE
            PRINT     "| ",*81,"Grand Totals":
                      *98,"| ",TOTALREC,"| ",TOTALOUT:
                      *132,"|"
          ENDIF
          ADD       ONE,CLNO                   * add one to line number
          CALL      UND132                     * print line
          GOTO      PTOT9999
.
PTOT0500  CALL      UND80                    * print line
          COMPARE   ONE,REPTSTKF
          GOTO      PTOT0700 IF NOT EQUAL
.
          PACK      KEY5,SP70
          CALL      RSTSUB1
PTOT0600  CALL      RKTSUB1
          BRANCH    OVRCD,PTOT0700
          COMPARE   "55",CLNO                * end of page ?
          CALL      HEAD0000 IF NOT LESS     * start new page
          PRINT     "| Total W/H ",TSUBWARE:
                    *46,"|",TSUBTOTA," |",TSUBTOTB:
                    *80,"|"
          ADD       "1",CLNO                 * add one to line number
          CALL      UND80                    * print line
          GOTO      PTOT0600
.
PTOT0700  PRINT     "| Grand Totals                               ":
                    "|",TOTALREC," |",TOTALOUT:
                    *80,"|"
          ADD       "1",CLNO                   * add one to line number
          CALL      UND80                      * print line
.
PTOT9999  RETURN
.------------------------------------------------------------
. Build Temporary File
.------------------------------------------------------------
BILD0000  CALL      KLTMP000                 * Kill Temp. File
          CALL      CRTMP000                 * Create Temp. File
.
          DISPLAY   *P1:24,*EL,"Loading Receival/Invoice Data....";
.
          PACK      KEY6,SP70
          CALL      RSSIPF3
.
          PACK      KEY6,DAT6,SP70
          CALL      RSSIPF3
          CALL      RPSIPF3
.
BILD1000  CALL      RKSIPF3
          BRANCH    OVRCD,BILD9999
.
          MATCH     DAT6,SIPFUDT
          GOTO      BILD9999 IF NOT EQUAL
.
          PACK      KEY10,SIPFPON,SIPFITM
          CALL      RDSIPC1
          BRANCH    OVRCD,BILD1000
.
          PACK      KEY7,SIPFPON
          CALL      RDSIPA1
          BRANCH    OVRCD,BILD1000
.
. ------- If Non-Stock Check Cost Centre Range.
. ------- If Stock cost centre must = Stock
          IF        REPTSTKF=0
            PACK      KEY5,SIPCCST,SP70
            CALL      RDSICA1
            BRANCH    OVRCD,BILD1000
            IF        OPTIONA=1
              MATCH     STRCST,SIPCCST
              GOTO      BILD1000 IF LESS
              MATCH     SIPCCST,ENDCST
              GOTO      BILD1000 IF LESS
            ELSE
              MATCH     PDESC1,SICADESC
              GOTO      BILD1000 IF LESS
              MATCH     SICADESC,PDESC2
              GOTO      BILD1000 IF LESS
            ENDIF
          ELSE
            MATCH     "Stock",SIPCCST
            GOTO      BILD1000 IF NOT EQUAL
            MOVE      SIPCCST,SICACODE
            MOVE      FROMCST,SICADESC
          ENDIF
.
          DISPLAY   *P50:24,SIPFPON,"-",SIPFITM
.
          MOVE      ONE,SIFACTOR
          PACK      KEY7,SIPCCAT
          CALL      RDSIIA1
          IF        OVRCD=0
            PACK      KEY30,SIIAISS,SIPFSUT
            CALL      RDSIFA1
          ENDIF
.
          CALL      GETAP000
.
          PACK      KEY10,SIPCPON,SIPCITM,SP70
          CALL      RDTMRE3
          IF        OVRCD=1
            MOVE      SIPCCST,TMRECST
            MOVE      SICADESC,TMRECSTD
            MOVE      SIPCPON,TMREPON
            MOVE      SIPCITM,TMREITM
            MOVE      SIPCPD,TMRECATD
            MOVE      SIPCPRD,TMREPRD
            MOVE      SIPCCAT,TMRECAT
            MOVE      SIPFQTY,TMREQTY
            MOVE      SIPFSUT,TMRESUT
            MOVE      SIPFCST,TMREUCST         * Receival Cost Can be modified
            MOVE      INVTOTQT,TMRERNIN
            MOVE      INVTOTAM,TMRERAIN
            MOVE      SIPCWAR,TMREWARE
            CALL      WRTMRE3
          ELSE
            ADD       SIPFQTY,TMREQTY
            ADD       INVTOTQT,TMRERNIN
            ADD       INVTOTAM,TMRERAIN
            CALL      UPTMRE3
          ENDIF
          GOTO      BILD1000
.
BILD9999  RETURN
.------------------------------------------------------------
. Get Accounts Payable Data
.------------------------------------------------------------
GETAP000  MOVE      ZERO,INVTOTAM
          MOVE      ZERO,INVTOTQT
.
          IF        HACCNT<>1
            GOTO      BILD9999
          ENDIF
.
          PACK      KEY51,SIPASUP,HORDDES,SIPCPON,SP70
          CALL      RSAPIN2
.
GETAP200  CALL      RKAPIN2
          BRANCH    OVRCD,GETAP999
.
          PACK      KEY13,APINCRD,APINORD
          MATCH     KEY13,KEY51
          GOTO      GETAP999 IF NOT EQUAL
.
          PACK      KEY6,SIPFITM,SIPFREC,SP70
          MATCH     KEY6,APINCAT
          GOTO      GETAP200 IF NOT EQUAL
.
          PACK      KEY40,APINBCH,APINCRD,APINREF,APINDOC,SP70
          CALL      RDAPIM1
          IF        OVRCD=0
            MATCH     "0",APIMTYP            * Invoices
            IF        @EQUAL
              ADD       APINAMT,INVTOTAM
              ADD       APINQTY,INVTOTQT
            ENDIF
            MATCH     "1",APIMTYP            * Credit Notes
            IF        @EQUAL
              SUB       APINAMT,INVTOTAM
              SUB       APINQTY,INVTOTQT
            ENDIF
          ENDIF
          GOTO      GETAP200
.
GETAP999  IF        INVTOTAM<0
            MOVE      ZERO,INVTOTAM
          ENDIF
          IF        INVTOTQT<0
            MOVE      ZERO,INVTOTQT
          ENDIF
          IF        INVTOTQT=0
            MOVE      ZERO,INVTOTAM
            MOVE      ZERO,INVTOTQT
          ENDIF
          RETURN
.-----------------------------------------------------------------
. Kill the Temporary Usage Calculation File
.-----------------------------------------------------------------
KLTMP000  PACK      TMPRECNM,TMPRECAA,PORT
          REP       " 0",TMPRECNM
          CLOSE     TMPRECA1
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    TMPRECNM,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
          PACK      TMPSUBNM,TMSUB30A,PORT
          REP       " 0",TMPSUBNM
          CLOSE     TEMPSUB1
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    TMPSUBNM,CMDLINE
          RESET     CMDLINE
.
          EXECUTE   CMDLINE,TASKID
.
KLTMP999  RETURN
.-----------------------------------------------------------------
. Create the Temporary Usage Calculation File
.-----------------------------------------------------------------
CRTMP000  CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TMPRECNM,CMDLINE
          APPEND    " 163 ",CMDLINE
          APPEND    "UC1-5,46-52,53-89,102-104 ",CMDLINE
          APPEND    "UC6-45,46-52,53-89,102-104 ",CMDLINE
          APPEND    "UC46-52,102-104",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      TMPRECA1,TMPRECNM
          OPEN      TMPRECA2,TMPRECNM
          OPEN      TMPRECA3,TMPRECNM
.
          BRANCH    REPTSTKF,CRTMP100
          GOTO      CRTMP999
.
CRTMP100  CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    TMPSUBNM,CMDLINE
          APPEND    " 36 UC1-5",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          OPEN      TEMPSUB1,TMPSUBNM
.
CRTMP999  RETURN
.------------------------------------------------------------
. File       : casetran
.
. Functions  : This file contains standard routines for
.              creating and transfering TAB delimited
.              export files to a PC using the unix script
.              keatran.
.
. Routines   : MAKEXP00  - Create the Export File and Headings
.              WRTEXA00  - Write Export details Record to File
.              WRTEXG00  - Write Export totals Record to File
.              TRAN0000  - Transfer file to PC using script keatran
.
. Note       : The Variable EXPORTYN is used to determine if a
.              export file is to be created. 0=No, 1=Yes.
.
. Variables to be Declared
. ------------------------
. EXPORTFL  FILE      ASCII, FIXED=400     * Export File (Adjust Length to Suit)
. EXPORTFN  DIM       8                    * Export File Name
. TABDELM   EQU       0x09                 * Tab Delimiter
.------------------------------------------------------------
. Create Export File
.------------------------------------------------------------
MAKEXP00  COMPARE  ONE,EXPORTYN
          GOTO     MAKEXP99 IF NOT EQUAL
          MOVE     "EXPORT",SVKEY6
          PACK     EXPORTFN,SVKEY6,PORT
          REP      " 0",EXPORTFN
          PREP     EXPORTFL,EXPORTFN
.
          BRANCH   PRTTOT,MAKEXP10
.
          WRITE    EXPORTFL,SEQ;"Cost Centre",TABDELM:
                                "Cost Centre Description",TABDELM:
                                "P/O No.",TABDELM:
                                "Catalog Code",TABDELM:
                                "Catalog Description",TABDELM:
                                "Warehouse Code",TABDELM:
                                "Warehouse Description",TABDELM:
                                "Product Group",TABDELM:
                                "Product Group Description",TABDELM:
                                "Quantity Received",TABDELM:
                                "Supply Unit",TABDELM:
                                "Unit Cost",TABDELM:
                                "Received Not Invoiced",TABDELM:
                                "Received And Invoiced"
          GOTO      MAKEXP99
.
MAKEXP10  WRITE    EXPORTFL,SEQ;"Cost Centre",TABDELM:
                                "Cost Centre Description",TABDELM:
                                "Received Not Invoiced",TABDELM:
                                "Received And Invoiced"
.
MAKEXP99  RETURN
.------------------------------------------------------------
. Write to Export File
.------------------------------------------------------------
. writes details
.
WRTEXA00  COMPARE  ONE,EXPORTYN
          GOTO     WRTEXA99 IF NOT EQUAL
.
          MOVE     SP70,SIWADES
          PACK     KEY5,TMREWARE,SP70
          CALL     RDSIWA1
.
          MOVE     SP70,SISADESC
          PACK     KEY6,TMREPRD,SP70
          CALL     RDSISA1
.
          WRITE    EXPORTFL,SEQ;TMRECST,TABDELM:
                                TMRECSTD,TABDELM:
                                TMREPON,TABDELM:
                                TMRECAT,TABDELM:
                                TMRECATD,TABDELM:
                                TMREWARE,TABDELM:
                                SIWADES,TABDELM:
                                TMREPRD,TABDELM:
                                SISADESC,TABDELM:
                                TMREQTY,TABDELM:
                                TMRESUT,TABDELM:
                                TMREUCST,TABDELM:
                                TMRERNIN,TABDELM:
                                TMRERAIN
WRTEXA99  RETURN
.
WRTEXG00  COMPARE  ONE,EXPORTYN
          GOTO     WRTEXG99 IF NOT EQUAL
.
          WRITE    EXPORTFL,SEQ;SICACODE,TABDELM:
                                SICADESC,TABDELM:
                                SSIRBRQT,TABDELM:
                                SSIRBIQT
WRTEXG99  RETURN
.------------------------------------------------------------
. Execute Transfer Script eg softerm
.------------------------------------------------------------
TRAN0000  COMPARE  ONE,EXPORTYN
          GOTO     TRAN9999 IF NOT EQUAL
          MOVE     YES,DEFYESNO
          CLOSE    EXPORTFL
          DISPLAY  *P1:24,*EL,"Execute Transfer Now (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "30",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO
          GOTO     TRAN9999 IF EQUAL   *  No Transfer
.
          MOVE     ZERO,HLEF
          CALL     GETSCR00
.
          CLEAR    KEY80
          APPEND   "keatran ",KEY80
          APPEND   EXPORTFN,KEY80
          APPEND   ".txt",KEY80
          RESET    KEY80
          EXECUTE  KEY80,TASKID
.
          CALL     PUTSCR00
.
          DISPLAY  *P1:24,*EL,"Transfer Completed Ok (":
                              *V2LON,"Y",*HOFF,"/":
                              *V2LON,"N",*HOFF,") ? "
          MOVE     "24",CVERT
          MOVE     "31",CCOL
          CALL     YORN0000
          COMPARE  ZERO,FYESNO,
          GOTO     TRAN0000 IF EQUAL   *  Not ok
.
          PREP     EXPORTFL,EXPORTFN
          CLOSE    EXPORTFL
.
TRAN9999  RETURN
.---------------------------------------------------------
. TMPRECIO
.---------------------------------------------------------
. Filename     : tmprecaf.dat
RSTMRE1   RESET     KEY52
          READ      TMPRECA1,KEY52;;
          RETURN
.
RATMRE1   RESET     KEY52
          MOVE      ZERO,OVRCD
          READ      TMPRECA1,KEY52;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTMRE1   RESET     KEY52
          MOVE      ZERO,OVRCD
          READ      TMPRECA1,KEY52;TMRECST,TMRECSTD,TMREPON,TMRECATD,TMREPRD:
                        TMRECAT,TMREITM,TMREQTY,TMRESUP,TMRESUT,TMREUCST:
                        TMRERNIN,TMRERAIN,TMREWARE
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMRE1   MOVE      ZERO,OVRCD
          READKS    TMPRECA1;TMRECST,TMRECSTD,TMREPON,TMRECATD,TMREPRD:
                        TMRECAT,TMREITM,TMREQTY,TMRESUP,TMRESUT,TMREUCST:
                        TMRERNIN,TMRERAIN,TMREWARE
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMRE1   MOVE      ZERO,OVRCD
          READKP    TMPRECA1;TMRECST,TMRECSTD,TMREPON,TMRECATD,TMREPRD:
                        TMRECAT,TMREITM,TMREQTY,TMRESUP,TMRESUT,TMREUCST:
                        TMRERNIN,TMRERAIN,TMREWARE
          GOTO      OVERCOND IF OVER
          RETURN
.
UPTMRE1   UPDATE    TMPRECA1;TMRECST,TMRECSTD,TMREPON,TMRECATD,TMREPRD:
                        TMRECAT,TMREITM,TMREQTY,TMRESUP,TMRESUT,TMREUCST:
                        TMRERNIN,TMRERAIN,TMREWARE
          RETURN
.
WRTMRE1   RESET     KEY52
          WRITE     TMPRECA1,KEY52;TMRECST,TMRECSTD,TMREPON,TMRECATD,TMREPRD:
                        TMRECAT,TMREITM,TMREQTY,TMRESUP,TMRESUT,TMREUCST:
                        TMRERNIN,TMRERAIN,TMREWARE
          RETURN
.
DETMRE1   RESET     KEY52
          DELETE    TMPRECA1,KEY52
          RETURN
.
RSTMRE2   RESET     KEY87
          READ      TMPRECA2,KEY87;;
          RETURN
.
RATMRE2   RESET     KEY87
          MOVE      ZERO,OVRCD
          READ      TMPRECA2,KEY87;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTMRE2   RESET     KEY87
          MOVE      ZERO,OVRCD
          READ      TMPRECA2,KEY87;TMRECST,TMRECSTD,TMREPON,TMRECATD,TMREPRD:
                        TMRECAT,TMREITM,TMREQTY,TMRESUP,TMRESUT,TMREUCST:
                        TMRERNIN,TMRERAIN,TMREWARE
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMRE2   MOVE      ZERO,OVRCD
          READKS    TMPRECA2;TMRECST,TMRECSTD,TMREPON,TMRECATD,TMREPRD:
                        TMRECAT,TMREITM,TMREQTY,TMRESUP,TMRESUT,TMREUCST:
                        TMRERNIN,TMRERAIN,TMREWARE
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMRE2   MOVE      ZERO,OVRCD
          READKP    TMPRECA2;TMRECST,TMRECSTD,TMREPON,TMRECATD,TMREPRD:
                        TMRECAT,TMREITM,TMREQTY,TMRESUP,TMRESUT,TMREUCST:
                        TMRERNIN,TMRERAIN,TMREWARE
          GOTO      OVERCOND IF OVER
          RETURN
.
UPTMRE2   UPDATE    TMPRECA2;TMRECST,TMRECSTD,TMREPON,TMRECATD,TMREPRD:
                        TMRECAT,TMREITM,TMREQTY,TMRESUP,TMRESUT,TMREUCST:
                        TMRERNIN,TMRERAIN,TMREWARE
          RETURN
.
WRTMRE2   RESET     KEY87
          WRITE     TMPRECA2,KEY87;TMRECST,TMRECSTD,TMREPON,TMRECATD,TMREPRD:
                        TMRECAT,TMREITM,TMREQTY,TMRESUP,TMRESUT,TMREUCST:
                        TMRERNIN,TMRERAIN,TMREWARE
          RETURN
.
DETMRE2   RESET     KEY87
          DELETE    TMPRECA2,KEY87
          RETURN
.
RSTMRE3   RESET     KEY10
          READ      TMPRECA3,KEY10;;
          RETURN
.
RATMRE3   RESET     KEY10
          MOVE      ZERO,OVRCD
          READ      TMPRECA3,KEY10;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTMRE3   RESET     KEY10
          MOVE      ZERO,OVRCD
          READ      TMPRECA3,KEY10;TMRECST,TMRECSTD,TMREPON,TMRECATD,TMREPRD:
                        TMRECAT,TMREITM,TMREQTY,TMRESUP,TMRESUT,TMREUCST:
                        TMRERNIN,TMRERAIN,TMREWARE
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTMRE3   MOVE      ZERO,OVRCD
          READKS    TMPRECA3;TMRECST,TMRECSTD,TMREPON,TMRECATD,TMREPRD:
                        TMRECAT,TMREITM,TMREQTY,TMRESUP,TMRESUT,TMREUCST:
                        TMRERNIN,TMRERAIN,TMREWARE
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTMRE3   MOVE      ZERO,OVRCD
          READKP    TMPRECA3;TMRECST,TMRECSTD,TMREPON,TMRECATD,TMREPRD:
                        TMRECAT,TMREITM,TMREQTY,TMRESUP,TMRESUT,TMREUCST:
                        TMRERNIN,TMRERAIN,TMREWARE
          GOTO      OVERCOND IF OVER
          RETURN
.
UPTMRE3   UPDATE    TMPRECA3;TMRECST,TMRECSTD,TMREPON,TMRECATD,TMREPRD:
                        TMRECAT,TMREITM,TMREQTY,TMRESUP,TMRESUT,TMREUCST:
                        TMRERNIN,TMRERAIN,TMREWARE
          RETURN
.
WRTMRE3   RESET     KEY10
          WRITE     TMPRECA3,KEY10;TMRECST,TMRECSTD,TMREPON,TMRECATD,TMREPRD:
                        TMRECAT,TMREITM,TMREQTY,TMRESUP,TMRESUT,TMREUCST:
                        TMRERNIN,TMRERAIN,TMREWARE
          RETURN
.
DETMRE3   RESET     KEY10
          DELETE    TMPRECA3,KEY10
          RETURN
.
. Filename     : sub30axx.dat
.
RSTSUB1   RESET     KEY5
          READ      TEMPSUB1,KEY5;;
          RETURN
.
RATSUB1   RESET     KEY5
          MOVE      ZERO,OVRCD
          READ      TEMPSUB1,KEY5;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RDTSUB1   RESET     KEY5
          MOVE      ZERO,OVRCD
          READ      TEMPSUB1,KEY5;TSUBWARE,TSUBTOTA,TSUBTOTB
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTSUB1   MOVE      ZERO,OVRCD
          READKS    TEMPSUB1;TSUBWARE,TSUBTOTA,TSUBTOTB
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTSUB1   MOVE      ZERO,OVRCD
          READKP    TEMPSUB1;TSUBWARE,TSUBTOTA,TSUBTOTB
          GOTO      OVERCOND IF OVER
          RETURN
.
UPTSUB1   UPDATE    TEMPSUB1;TSUBWARE,TSUBTOTA,TSUBTOTB
          RETURN
.
WRTSUB1   RESET     KEY5
          WRITE     TEMPSUB1,KEY5;TSUBWARE,TSUBTOTA,TSUBTOTB
          RETURN
.
DETSUB1   RESET     KEY5
          DELETE    TEMPSUB1,KEY5
          RETURN
.
.----------------------------------------------------------------------
. Enter Range of Cost Centre
.----------------------------------------------------------------------
ECOS0000  IF        REPTSTKF=1
            IF        ACCEPT<>1
              MOVE      "Report is for 'Stock' only.  ",DISPMSG
              CALL      MESSAGE1
            ENDIF
            CALL      SETSTK00
            GOTO      ECOS9900
          ENDIF
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
.
          BRANCH    OPTIONA,ECOS0100
          GOTO      ECOS5000
.
ECOS0100  CALL      KSICAA00
          BRANCH    EXIT,ECOS1100,ECOS9800
          MOVE      SICACODE,STRCST
          PACK      FROMCST,SICACODE,SP1,SICADESC
          GOTO      ECOS1140
ECOS1100  MOVE      "Start             ",FROMCST
          MOVE      SP70,STRCST
.
ECOS1140  MOVE      FROMCST,VAR
          CALL      DISPITEM
.
ECOS1150  MOVE      "    5",FLDID
          CALL      GETPOSIT
          CALL      KSICAA00
          BRANCH    EXIT,ECOS1200,ECOS9800
          MOVE      SICACODE,ENDCST
          PACK      TOCST,SICACODE,SP1,SICADESC
          MATCH     STRCST,ENDCST
          GOTO      ECOS9900 IF EQUAL
          GOTO      ECOS9900 IF NOT LESS
          BEEP
          MOVE      "To Cost Centre Must Be > From Cost Centre - ",DISPMSG
          CALL      MESSAGE1
          GOTO      ECOS0000
.
ECOS1200  MOVE      "Finish             ",TOCST
          MOVE      Z70,ENDCST
          GOTO      ECOS9900
.
ECOS5000  MOVE      ZERO,EXIT
          KEYIN     *PCCOL:CVERT,*V2LON,FROMCST;
          MATCH     EXITCHAR,FROMCST
          GOTO      ECOS9800 IF EQUAL
          PACK      PDESC1,FROMCST,SP70
          PACK      FROMCST,FROMCST,SP70
.
          MATCH     FROMCST,SP70
          IF        @EQUAL
            PACK      FROMCST,START,SP70
          ENDIF
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
.
          MOVE      SP70,TOCST
          KEYIN     *PCCOL:CVERT,*DV,TOCST:
                    *PCCOL:CVERT,*V2LON,TOCST;
          MATCH     EXITCHAR,TOCST
          GOTO      ECOS9800 IF EQUAL
          PACK      PDESC2,TOCST,Z70
          PACK      TOCST,TOCST,SP70
.
          MATCH     TOCST,SP70
          IF        @EQUAL
            PACK      TOCST,END,SP70
          ENDIF
.
          MATCH     PDESC1,PDESC2
          GOTO      ECOS9900 IF NOT LESS
          BEEP
          MOVE      "To Cost Centre Must Be > From Cost Centre - ",DISPMSG
          CALL      MESSAGE1
          GOTO      ECOS0000
.
ECOS9800  MOVE      TWO,EXIT
          GOTO      ECOS9999
.
ECOS9900  MOVE      "    4",FLDID
          CALL      GETPOSIT
ECOS9999  RETURN
.
.---------------------------------------------------------------------------
. KYEAR - keyin year
.---------------------------------------------------------------------------
KYEAR000  CALL      RINPECON           * default to current year
          MOVE      SIPECYR,SIPEYEAR
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,*JR,SIPEYEAR
          PACK      SIPEYEAR,SIPEYEAR,SP70
.
          MATCH     SP70,SIPEYEAR
          GOTO      KYEAR990 IF EQUAL
          PACK      KEY4,SP3,EXITCHAR * exitchar entered ?
          MATCH     KEY4,SIPEYEAR
          GOTO      KYEAR990 IF EQUAL
.
          TYPE      SIPEYEAR           * valid numeric ?
          GOTO      KYEAR000 IF NOT EQUAL
.
          MOVE      SIPEYEAR,SIPEYF4
          IF        SIPEYF4<100
            SQUEEZE   SIPEYEAR
            MOVE      SIPEYEAR,FORM2
            PACK      SIPEYEAR,CCC,FORM2,SP70
          ENDIF
.
          REP       " 0",SIPEYEAR
          MOVE      ZERO,EXIT          * year ok
          GOTO      KYEAR999
.
KYEAR990  MOVE      TWO,EXIT           * no year entered
.
KYEAR999  RETURN
.---------------------------------------------------------------------------
. KPERD - keyin period
.         Returns SIPEPER - Period
.                 EXIT    - 0=ok, 1=nothing entered, 2=exitchar
.---------------------------------------------------------------------------
KPERD000  MOVE      SIPENUM,SIPEPER
.
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,*JR,*ZF,SIPEPER
          PACK      SIPEPER,SIPEPER,SP70
          ENDSET    SIPEPER            * check for EXITCHAR
          MATCH     EXITCHAR,SIPEPER
          GOTO      KPERD995 IF EQUAL
          RESET     SIPEPER
.
          MOVE      ZERO,F2
          MOVE      SIPEPER,F2
          COMPARE   ZERO,F2            * no period entered ?
          GOTO      KPERD990 IF EQUAL
.                                      * period greater than total no. of perds
          IF        F2>SIPENUM
            BEEP
            MOVE      "Invalid Period - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KPERD000
          ENDIF
.
          MOVE      F2,SIPEPER         * check if period exists
          REP       " 0",SIPEPER
          PACK      KEY6,SIPEYEAR,SIPEPER,SP70
          REP       " 0",KEY6
          CALL      RDSIPE1
          IF        OVRCD=1
            BEEP
            MOVE      "Period NOT Created - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KPERD000
          ENDIF
.
          MOVE      ZERO,EXIT          * period ok
          GOTO      KPERD999
.
KPERD990  MOVE      ONE,EXIT           * no period entered
          GOTO      KPERD999
.
KPERD995  MOVE      TWO,EXIT           * EXITCHAR entered
.
KPERD999  RETURN
.---------------------------------------------------------------------
. Enter Stock Flag (N-Nonstock S-Stock)
.---------------------------------------------------------------------
ESTCK000   MOVE     FALSE,EXIT
           MOVE     ANSS,REPTSTCK
           KEYIN    *PCCOL:CVERT,*EL,*V2LON,*RV,REPTSTCK
           PACK     REPTSTCK,REPTSTCK,SP10
.
           MATCH    EXITCHAR,REPTSTCK
           IF       @EQUAL
             MOVE     TWO,EXIT
             GOTO     ESTCK999
           ENDIF
.
           TYPE     REPTSTCK
           GOTO     ESTCK900 IF EQUAL
           REP      UPPLOW,REPTSTCK
           MOVE     REPTSTCK,ANS
           REP      "S1N0",ANS
           TYPE     ANS
           GOTO     ESTCK900 IF NOT EQUAL
.
. -------- Valid Option
           MOVE     ANS,FORM1
           IF       FORM1=1
             MOVE     ANSS,REPTSTCK          * Only Stock
             DISPLAY  *PCCOL:CVERT,*EL,*V2LON,"Stock Only"
             MOVE     FORM1,REPTSTKF           * Report Variable
             CALL     TOFROM00               * Set cost centres
             GOTO     ESTCK950
           ENDIF
.
           IF       FORM1=0
             MOVE     ANSN,REPTSTCK          * Only Non-Stock
             DISPLAY  *PCCOL:CVERT,*EL,*V2LON,"Non-Stock Only"
             MOVE     FORM1,REPTSTKF           * Report Variable
             CALL     TOFROM00               * Set Warehouses
             GOTO     ESTCK950
           ENDIF
.
ESTCK900   DISPLAY  *P1:24,*EL,"Invalid Option.  ";
           CALL     HITENTER
           GOTO     ESTCK000
.
ESTCK950   MOVE     ONE,ACCEPT
           CALL     BLANK000
.
ESTCK999   RETURN
.---------------------------------------------------------------------
. Set Cost Centres to display Stock
.---------------------------------------------------------------------
TOFROM00  CALL     SETSTK00
.
          IF        ACCEPT=1
            GOTO      TOFROM99
          ENDIF
.
          MOVE      SCSLITM,SAVFLDID
.
          COMPARE   ONE,REPTSTKF
          GOTO      TOFROM50 IF EQUAL
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            PACK      VAR,FROMCST,SP70
            CALL      DISPITEM
          ENDIF
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            PACK      VAR,TOCST,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      TOFROM90
.
TOFROM50  MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            PACK      VAR,FROMWAR,SP70
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            PACK      VAR,TOWAR,SP70
            CALL      DISPITEM
          ENDIF
.
TOFROM90  MOVE      SAVFLDID,FLDID
          CALL      GETPOSIT
.
TOFROM99  RETURN
.---------------------------------------------------------------------
. Set Variables for Stock
.---------------------------------------------------------------------
SETSTK00  IF       REPTSTKF=0
            MOVE     "Start                         ",FROMWAR
            MOVE     "Finish                        ",TOWAR
            MOVE     SP70,STRWAR
            MOVE     Z70,ENDWAR
          ELSE
            MOVE     "Stock                         ",FROMCST
            MOVE     "Stock                         ",TOCST
            MOVE     "Stock                         ",PDESC1
            MOVE     "Stock                         ",PDESC2
            MOVE     "Stock",STRCST
            MOVE     "Stock",ENDCST
          ENDIF
.
SETSTK99  RETURN
.---------------------------------------------------------------------
. Set Cost Centres to display Blank
.---------------------------------------------------------------------
BLANK000  MOVE      SCSLITM,SAVFLDID
          COMPARE   ONE,REPTSTKF
          GOTO      BLANK500 IF EQUAL
.
          UNPACK    SP70,STRCST,ENDCST
          MOVE      SP70,FROMCST
          MOVE      SP70,PDESC1
          MOVE      SP70,TOCST
          MOVE      SP70,PDESC2
.
          MOVE      "    4",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            PACK      VAR,FROMCST,SP70
            CALL      DISPITEM
          ENDIF
.
          MOVE      "    5",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            PACK      VAR,TOCST,SP70
            CALL      DISPITEM
          ENDIF
          GOTO      BLANK900
.
BLANK500  UNPACK   SP70,STRWAR,ENDWAR
          MOVE     SP70,FROMWAR
          MOVE     SP70,TOWAR
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            PACK      VAR,FROMWAR,SP70
            CALL      DISPITEM
          ENDIF
.
          MOVE      "   14",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            PACK      VAR,TOWAR,SP70
            CALL      DISPITEM
          ENDIF
.
BLANK900  MOVE      SAVFLDID,FLDID
          CALL      GETPOSIT
.
BLANK999  RETURN
.----------------------------------------------------------------------
. Range of Warehouse Code
.----------------------------------------------------------------------
EWAR0000  IF        REPTSTKF=0
            IF        ACCEPT<>1
              MOVE      "Report is for 'Non-Stock' only.  ",DISPMSG
              CALL      MESSAGE1
            ENDIF
            CALL      SETNST00
            GOTO      EWAR9000
          ENDIF
.
          MOVE      "   13",FLDID
          CALL      GETPOSIT
          CALL      KSIWSA00
          BRANCH    EXIT,EWAR0100,EWAR9500
          MOVE      SIWAWAR,STRWAR
          PACK      FROMWAR,SIWAWAR,SP1,SIWADES
          GOTO      EWAR0140
EWAR0100  MOVE      "Start             ",FROMWAR
          MOVE      SP70,STRWAR
.
EWAR0140  MOVE      FROMWAR,VAR
          CALL      DISPITEM
.
EWAR0150  MOVE      "   14",FLDID
          CALL      GETPOSIT
          CALL      KSIWSA00
          BRANCH    EXIT,EWAR0200,EWAR9500
          MOVE      SIWAWAR,ENDWAR
          PACK      TOWAR,SIWAWAR,SP1,SIWADES
          MATCH     STRWAR,ENDWAR
          GOTO      EWAR9000 IF EQUAL
          GOTO      EWAR9000 IF NOT LESS
          BEEP
          MOVE      "To Warehouse Must Be > From Warehouse - ",DISPMSG
          CALL      MESSAGE1
          GOTO      EWAR0000
.
EWAR0200  MOVE      "Finish             ",TOWAR
          MOVE      Z70,ENDWAR
.
EWAR9000  MOVE      "   13",FLDID
          CALL      GETPOSIT
          MOVE      ZERO,EXIT
          GOTO      EWAR9999
.
EWAR9500  MOVE      TWO,EXIT
          GOTO      EWAR9999
.
EWAR9999  RETURN
.
.---------------------------------------------------------------------
. Set Variables for Non-Stock (Warehouse)
.---------------------------------------------------------------------
SETNST00  MOVE      "Start             ",FROMWAR
          MOVE      "Finish             ",TOWAR
          RETURN
.
.********************************************************************
. SETSCR02 - set up for screen 02
.********************************************************************
SETSCR02  MOVE      "1",ACCEPT
          MOVE      "2",OPTIONA
          MOVE      "N",DEFYESNO
.
          MOVE      SP70,STRCST
          MOVE      SP70,ENDCST
          MOVE      SP70,STRWAR
          MOVE      SP70,ENDWAR
          MOVE      SP70,FROMCST
          MOVE      SP70,TOCST
          MOVE      SP70,FROMWAR
          MOVE      SP70,TOWAR
          MOVE      SP70,PDESC1
          MOVE      SP70,PDESC2
          MOVE      SP70,SIWAWAR
          MOVE      SP70,SICACODE
          RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       APSIMSIO/INC
          INC       APSINPIO/INC
          INC       APSISLIO/INC
          INC       SINCCAIO/INC
          INC       SINCCAKY    
          INC       SINCIAIO/INC
          INC       SINFACIO/INC
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINPOAIO/INC
          INC       SINPOCIO/INC
          INC       SINPOFIO/INC
          INC       SINSUAIO/INC
          INC       SINWARIO/INC
          INC       SINWSEIO/INC
          INC       SINWSEKY    
.
          INC       STDGENCD
.
