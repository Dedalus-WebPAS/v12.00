.-----------------------------------------------------------------
. Create and Open Graph Temp File
.-----------------------------------------------------------------
OPNGRAPH  PACK      GPHFNAME,GPHTMPNM,PORT
          REP       " 0",GPHFNAME
          PACK      GPHCOMM,GPHISBU,GPHFNAME,GPHTMPID
          EXECUTE   GPHCOMM,TASKID
          OPEN      SCRGPHA1,GPHFNAME
          OPEN      SCRGPHA2,GPHFNAME
          RETURN
.-----------------------------------------------------------------
. Close and Delete Graph Temp File
.-----------------------------------------------------------------
CLSGRAPH  CLOSE     SCRGPHA1
          CLOSE     SCRGPHA2,DELETE
          RETURN
.-----------------------------------------------------------------
. Standard 12 month period Graph Display Option
.-----------------------------------------------------------------
DISGRAPH 
          IF        GPHBLKX=0
            MOVE      ONE,GPHBLKX 
          ENDIF
          IF        GPHBLKY=0
            MOVE      ONE,GPHBLKY 
          ENDIF
          MOVE      GPHSP70,GPHNEXT
          MOVE      GPHSP70,GPHCURR
.
DISGRP05  CALL      CMNMX000   * Calculate  Min and Max
.
DISGRP10  CALL      CGSCL000   * Calculate Scale
          CALL      GDRAW000   * Draw Axis
.
          IF        GPHTYPE=0
            CALL      GDISP000   * Display Graph
          ENDIF
.
          IF        GPHTYPE=1
            CALL      GDPYX000   * Display Graph
          ENDIF
.
          CALL      GOPTS000   * Graph Options
          BRANCH    EXIT,DISGRP10,DISGRP05
          MOVE      ZERO,GPHBLKX 
          MOVE      ZERO,GPHBLKY 
          RETURN
.
GOPTS000  KEYIN     *P1:1,*EOFF,*NOEDIT,*+,ANS
          GOTO      GOPTS850 IF LEFT
          GOTO      GOPTS800 IF RIGHT
          GOTO      GOPTS850 IF UP
          GOTO      GOPTS800 IF DOWN
GOPTS100  
          KEYIN     *P1:1,*EL,*DV,PRGID,*DV,SP1,*V2LON,"S",*HOFF,"cale, ":
                              *V2LON,"R",*HOFF,"e Calc, ":
                              *V2LON,"N",*HOFF,"ext, ":
                              *V2LON,"F",*HOFF,"irst, ":
                              *V2LON,"T",*HOFF,"ype, ":
                              *V2LON,"L",*HOFF,"egend, ":
                              *V2LON,"H",*HOFF,"eading, ":
                              *V2LON,"B",*HOFF,"lock, e":
                              *V2LON,"X",*HOFF,"it : ",*NOEDIT,*V2LON,ANS
........ Scale, Re Calc, Next, First, Type, Legend, Heading, Block Size, eXit : x
.
          GOTO      GOPTS850 IF LEFT
          GOTO      GOPTS800 IF RIGHT
          GOTO      GOPTS850 IF UP
          GOTO      GOPTS800 IF DOWN
          REP       UPPLOW,ANS
          MATCH     ANSX,ANS
          GOTO      GOPTS900 IF EQUAL
          MATCH     ANSS,ANS
          GOTO      GOPTS200 IF EQUAL
          MATCH     ANSR,ANS
          GOTO      GOPTS300 IF EQUAL
          MATCH     ANSN,ANS
          GOTO      GOPTS400 IF EQUAL
          MATCH     ANSF,ANS
          GOTO      GOPTS500 IF EQUAL
          MATCH     ANST,ANS
          GOTO      GOPTS600 IF EQUAL
          MATCH     ANSB,ANS
          GOTO      GOPTS650 IF EQUAL
          MATCH     ANSL,ANS
          GOTO      GOPTS700 IF EQUAL
          MATCH     ANSH,ANS
          GOTO      GOPTS750 IF EQUAL
          GOTO      GOPTS100
GOPTS200
          KEYIN     *P1:1,*EL,"Minimum : ",*V2LON,MINIMUM
          DISPLAY   *P1:1,*EL,"Minimum : ",*V2LON,MINIMUM
          KEYIN     *P40:1,"Maximum : ",*V2LON,MAXIMUM
          DISPLAY   *P40:1,"Maximum : ",*V2LON,MAXIMUM
          MOVE      ONE,EXIT
          GOTO      GOPTS999
GOPTS300
          MOVE      TWO,EXIT
          GOTO      GOPTS999
GOPTS400
          MOVE      GPHNEXT,GPHCURR
          MOVE      ONE,EXIT
          GOTO      GOPTS999
GOPTS500
          MOVE      GPHSP70,GPHCURR
          MOVE      ONE,EXIT
          GOTO      GOPTS999
GOPTS600
          IF        GPHTYPE=0
            MOVE      ONE,GPHTYPE
          ELSE
            MOVE      ZERO,GPHTYPE
          ENDIF
          MOVE      TWO,EXIT
          GOTO      GOPTS999
.
GOPTS650 
          KEYIN     *P1:1,*EL,"New Block Size : ",*V2LON,GPHBCNT
          IF        GPHBCNT<1
            GOTO      GOPTS650
          ENDIF
          IF        GPHTYPE=0
            MOVE      GPHBCNT,GPHBLKX
            IF        GPHBLKX*GPHNTYP>GPHNOCOX
              KEYIN     *P1:1,*EL,*B,"Block Size to Large. Hit <",*V2LON:
                        "ENTER",*HOFF,">",*EOFF,ANS
              GOTO      GOPTS650
            ENDIF
          ELSE
            MOVE      GPHBCNT,GPHBLKY
          ENDIF
.
          MOVE      ONE,EXIT
          GOTO      GOPTS999
GOPTS700
          CALL      GLEDG000
          GOTO      GOPTS100
.
GOPTS750  KEYIN     *P1:1,*EL,"Heading : ",*V2LON,*RV,GPHNAME
          CALL      GHEAD000
          KEYIN     *P1:1,*EOFF,ANS
          GOTO      GOPTS100
.
GOPTS800  CALL      GDOWN000
          MOVE      ONE,EXIT
          GOTO      GOPTS999
.
.
GOPTS850
          MOVE      GPHCURR,KEY6
          UNPACK    GPHCURR,GPHSPER
          MOVE      ONE,EXIT
          CALL      RSSCGP1
GOPTS860  CALL      RPSCGP1
          BRANCH    OVRCD,GOPTS999
          MATCH     SCGPPER,GPHSPER
          GOTO      GOPTS860 IF EQUAL
          PACK      GPHCURR,SCGPPER,GPHSP70
.
          GOTO      GOPTS999
GOPTS900
          MOVE      ZERO,EXIT
          GOTO      GOPTS999
GOPTS999
          RETURN
.
GDISP000  
          MOVE      ZERO,GPHDTYP
          MOVE      "9",CCOL
          PACK      KEY6,GPHCURR
          CALL      RSSCGP1
          CALL      RPSCGP1
.
GDISP100  
          CALL      RKSCGP1
          BRANCH    OVRCD,GDISP999
.
          PACK      GPHNEXT,SCGPPER,GPHSP70
          ADD       ONE,CCOL
.
          IF        GPHDTYP=9
            MOVE      ONE,GPHDTYP
            ADD       ONE,CCOL
          ELSE
            ADD       ONE,GPHDTYP
.
            IF        GPHDTYP>GPHNTYP
              MOVE      ONE,GPHDTYP
              ASSIGN    CCOL+GPHNOCOX-(GPHNTYP*GPHBLKX),CCOL
            ENDIF
          ENDIF
          IF        CCOL>80
            GOTO      GDISP999
          ENDIF
.
          MOVE      ZERO,GPHBCNT
GDISP800     * Loop for Block Width
          CALL      GDISI000
          ADD       ONE,GPHBCNT
          IF        GPHBCNT<GPHBLKX 
            ADD       ONE,CCOL
            IF        CCOL<81
              GOTO      GDISP800
            ELSE
              GOTO      GDISP999
            ENDIF
          ENDIF

          GOTO      GDISP100
.
GDISP999  RETURN
.----------------------------------------------------
. Display an Item
.----------------------------------------------------
GDISI000  
          STRIP     SCGPVAL
          MOVE      SCGPVAL,GVALUE
          COMPARE   ZERO,GVALUE
          GOTO      GDISI999 IF EQUAL
.
          ASSIGN    GVALUE/SCALE,F12P8
          SUB       GPHOFSET,F12P8
          MOVE      F12P8,F12
          COMPARE   ZERO,F12
          GOTO      GDISI999 IF EQUAL
.
          MULT      "-1",F12
          ADD       AXIS,F12
.
          COMPARE   F12,TWO
          GOTO      GDISI300 IF LESS
          MOVE      FOUR,F12
.
          DISPLAY   *PCCOL:3,*BLINKON,*HON,"*"
          GOTO      GDISI300
.
GDISI300  COMPARE   "24",F12
          GOTO      GDISI400 IF LESS
          MOVE      "22",F12
          DISPLAY   *PCCOL:23,*BLINKON,*HON,"*"
          GOTO      GDISI400
.
GDISI400  COMPARE   AXIS,F12
          GOTO      GDISI999 IF EQUAL
          GOTO      GDISI500 IF LESS
.
          ADD       ONE,AXIS
          BRANCH    GPHDTYP,GDISI410,GDISI420,GDISI430,GDISI440,GDISI450:
                             GDISI460,GDISI470,GDISI480,GDISI490
GDISI410  VLINE     *G44,CCOL,AXIS,F12
          SUB       ONE,AXIS
          GOTO      GDISI999
GDISI420  VLINE     *G45,*HON,CCOL,AXIS,F12
          SUB       ONE,AXIS
          GOTO      GDISI999
GDISI430  VLINE     *G41,*ULON,CCOL,AXIS,F12
          SUB       ONE,AXIS
          GOTO      GDISI999
GDISI440  VLINE     *G42,*V2LON,CCOL,AXIS,F12
          SUB       ONE,AXIS
          GOTO      GDISI999
GDISI450  VLINE     *G17,CCOL,AXIS,F12
          SUB       ONE,AXIS
          GOTO      GDISI999
GDISI460  VLINE     *G27,*HON,CCOL,AXIS,F12
          SUB       ONE,AXIS
          GOTO      GDISI999
GDISI470  VLINE     *G22,*V2LON,CCOL,AXIS,F12
          SUB       ONE,AXIS
          GOTO      GDISI999
GDISI480  VLINE     *G32,*ULON,CCOL,AXIS,F12
          SUB       ONE,AXIS
          GOTO      GDISI999
GDISI490  VLINE     *G38,*HON,CCOL,AXIS,F12
          SUB       ONE,AXIS
          GOTO      GDISI999
.
GDISI500  SUB       ONE,AXIS
          IF        F12=0
            MOVE      ONE,F12
          ENDIF
          BRANCH    GPHDTYP,GDISI510,GDISI520,GDISI530,GDISI540,GDISI550:
                             GDISI560,GDISI570,GDISI580,GDISI590
GDISI510  
          VLINE     *G44,CCOL,F12,AXIS
          ADD       ONE,AXIS
          GOTO      GDISI999
GDISI520 
          VLINE     *G45,*HON,CCOL,F12,AXIS
          ADD       ONE,AXIS
          GOTO      GDISI999
GDISI530 
          VLINE     *G41,*ULON,CCOL,F12,AXIS
          ADD       ONE,AXIS
          GOTO      GDISI999
GDISI540 
          VLINE     *G42,*V2LON,CCOL,F12,AXIS
          ADD       ONE,AXIS
          GOTO      GDISI999
GDISI550 
          VLINE     *G17,CCOL,F12,AXIS
          ADD       ONE,AXIS
          GOTO      GDISI999
GDISI560 
          VLINE     *G27,*HON,CCOL,F12,AXIS
          ADD       ONE,AXIS
          GOTO      GDISI999
GDISI570 
          VLINE     *G22,*V2LON,CCOL,F12,AXIS
          ADD       ONE,AXIS
          GOTO      GDISI999
GDISI580 
          VLINE     *G32,*ULON,CCOL,F12,AXIS
          ADD       ONE,AXIS
          GOTO      GDISI999
GDISI590 
          VLINE     *G38,*HON,CCOL,F12,AXIS
          ADD       ONE,AXIS
          GOTO      GDISI999
.
GDISI999  RETURN
.----------------------------------------------------------------------
. Draw Graph Axis and Scale
.----------------------------------------------------------------------
GDRAW000  
          DISPLAY   *ES
          CALL      GHEAD000
.
          BRANCH    GPHTYPE,GDRAW100
          CALL      GDWXY000
          GOTO      GDRAW999
GDRAW100
          CALL      GDWYX000
          GOTO      GDRAW999
GDRAW999 
          RETURN
.----------------------------------------------------------------------
. Draw Graph Axis and Scale
.----------------------------------------------------------------------
GDWXY000  MOVE      SCALE,F12P4
          MULT      TWO,F12P4
.
          VLINE     *G39,9,3,24
          DISPLAY   *P1:AXIS,DSCALE,*G17
          HLINE     *G37,AXIS,10,80
.
.
          CALL      XAXIS000   * Draw X Axis Display
.
GDWXY090
          MOVE      "9",CCOL
GDWXY100  ADD       GPHNOCOX,CCOL
          IF        CCOL<80
            DISPLAY   *PCCOL:AXIS,*G17
            GOTO      GDWXY100
          ENDIF
.
          MOVE      AXIS,CVERT
.
GDWXY510  ADD       F12P4,DSCALE
          SUB       TWO,CVERT
          COMPARE   THREE,CVERT
          GOTO      GDWXY600 IF LESS
.
          DISPLAY   *P1:CVERT,DSCALE,*G17
          GOTO      GDWXY510
.
GDWXY600  MOVE      ZERO,DSCALE
          MOVE      AXIS,CVERT
          ADD       ONE,CVERT
.
GDWXY610  SUB       F12P4,DSCALE
          ADD       ONE,CVERT
          COMPARE   "24",CVERT
          GOTO      GDWXY999 IF NOT LESS
          DISPLAY   *P1:CVERT,DSCALE,*G17
          ADD       ONE,CVERT
          GOTO      GDWXY610
.
GDWXY999  RETURN
.--------------------------------------------------
. Display X Axis
.--------------------------------------------------
XAXIS000
          PACK      KEY6,GPHCURR
          CALL      RSSCGP1
          CALL      RPSCGP1
          CALL      RKSCGP1
          MOVE      SCGPPER,GPHSPER
          MOVE      "10",CCOL
.
          ASSIGN    GPHNOCOX-1,GPHTMPF2
          RESET     SCGPDES,GPHTMPF2
          APPEND    SP1,SCGPDES
          RESET     SCGPDES
          SETLPTR   SCGPDES,GPHNOCOX
.
          DISPLAY   *PCCOL:24,*+,SCGPDES
          PACK      KEY6,GPHCURR
          CALL      RSSCGP1
          CALL      RPSCGP1
XAXIS050  
          CALL      RKSCGP1
          BRANCH    OVRCD,XAXIS999
          MATCH     SCGPPER,GPHSPER
          GOTO      XAXIS050 IF EQUAL
.
          ADD       GPHNOCOX,CCOL
          ASSIGN    GPHNOCOX-1,GPHTMPF2
          RESET     SCGPDES,GPHTMPF2
          APPEND    SP1,SCGPDES
          RESET     SCGPDES
          SETLPTR   SCGPDES,GPHNOCOX
.
          IF        CCOL<80
            DISPLAY   *PCCOL:24,*+,SCGPDES
            MOVE      SCGPPER,GPHSPER
            GOTO      XAXIS050
          ENDIF
.
XAXIS999  RETURN
.----------------------------------------------------------------------
. Calculated Minimum, Maximum 
.----------------------------------------------------------------------
CMNMX000 
          MOVE      ZERO,MAXIMUM
          MOVE      ZERO,MINIMUM
          PACK      KEY6,GPHSP70
          CALL      RSSCGP1
.
CMNMX100  
          CALL      RKSCGP1
          BRANCH    OVRCD,CMNMX999
.
          STRIP     SCGPVAL
          MOVE      SCGPVAL,GVALUE
          IF        GVALUE<MINIMUM
            MOVE      GVALUE,MINIMUM
          ENDIF
          IF        GVALUE>MAXIMUM
            MOVE      GVALUE,MAXIMUM
          ENDIF
.
          GOTO      CMNMX100
.
CMNMX999  RETURN
.--------------------------------------------------
. Calculate Scale & Axis
.--------------------------------------------------
CGSCL000  BRANCH    GPHTYPE,CGSCL100,CGSCL200
          IF        (MAXIMUM-MINIMUM)/20<10
            NFORMAT   SCALE,9,2
          ELSE
            NFORMAT   SCALE,12,ZERO
          ENDIF
            
          MOVE      MAXIMUM,SCALE
          SUB       MINIMUM,SCALE
          DIV       "20",SCALE
.
          MOVE      MINIMUM,F12P4
          DIV       SCALE,F12P4
          MOVE      F12P4,GPHOFSET
          IF        GPHOFSET<0
            ADD       "23",GPHOFSET
            MOVE      GPHOFSET,AXIS 
          ELSE
            MOVE      "23",AXIS
          ENDIF
.
          IF        SCALE<0
            MULT    "-1",GPHOFSET
            ADD     "3",GPHOFSET
          ENDIF
          IF      MINIMUM<=0
            IF      MAXIMUM<=0
              SUB     "3",GPHOFSET
            ENDIF
          ENDIF
.
          IF        SCALE>10
            NFORMAT   DSCALE,8,ZERO
          ELSE
            NFORMAT   DSCALE,5,2
          ENDIF
          MOVE      GPHOFSET,DSCALE
          MULT      SCALE,DSCALE
          IF        MINIMUM<0
            IF        MAXIMUM>0
              MOVE      ZERO,GPHOFSET
              MOVE      ZERO,DSCALE
            ENDIF
          ENDIF
. 
          IF        SCALE=0
            MOVE      ONE,SCALE
          ENDIF
          GOTO      CGSCL999
CGSCL100
          IF        (MAXIMUM-MINIMUM)/(80-GPHNOCOY)<10
            NFORMAT   SCALE,9,2
          ELSE
            NFORMAT   SCALE,12,ZERO
          ENDIF
          MOVE      MAXIMUM,SCALE
          SUB       MINIMUM,SCALE
          ASSIGN    SCALE/(80-GPHNOCOY),SCALE
.
          MOVE      MINIMUM,F12P4
          DIV       SCALE,F12P4
          MOVE      F12P4,GPHOFSET
          IF        GPHOFSET<0
            ASSIGN    (GPHOFSET*-1)+GPHNOCOY,GPHOFSET
            MOVE      GPHOFSET,AXIS 
          ELSE
            ASSIGN    GPHNOCOY+1,AXIS
          ENDIF
.
          IF        SCALE<0
            MULT    "-1",GPHOFSET
            ADD     GPHNOCOY,GPHOFSET
          ENDIF
          IF      MINIMUM<=0
            IF      MAXIMUM<=0
              SUB     GPHNOCOY,GPHOFSET
            ENDIF
          ENDIF
.
          IF        SCALE>10
            NFORMAT   DSCALE,8,ZERO
          ELSE
            NFORMAT   DSCALE,5,2
          ENDIF
          MOVE      GPHOFSET,DSCALE
          MULT      SCALE,DSCALE
          IF        MINIMUM<0
            MOVE      ZERO,GPHOFSET
            MOVE      ZERO,DSCALE
          ENDIF
. 
          IF        SCALE=0
            MOVE      ONE,SCALE
          ENDIF
          GOTO      CGSCL999
.
. Calculate Scale & Axis for Printing 44 x 132
.----------------------------------------------
CGSCL200  IF        (MAXIMUM-MINIMUM)/40<10
            NFORMAT   SCALE,9,2
          ELSE
            NFORMAT   SCALE,12,ZERO
          ENDIF
          MOVE      MAXIMUM,SCALE
          SUB       MINIMUM,SCALE
          DIV       "40",SCALE
.
          MOVE      MINIMUM,F12P4
          DIV       SCALE,F12P4
          MOVE      F12P4,GPHOFSET
          IF        GPHOFSET<0
            ADD       "43",GPHOFSET
            MOVE      GPHOFSET,AXIS 
          ELSE
            MOVE      "43",AXIS
          ENDIF
.
          IF        SCALE<0
            MULT    "-1",GPHOFSET
            ADD     "3",GPHOFSET
          ENDIF
          IF      MINIMUM<=0
            IF      MAXIMUM<=0
              SUB     "3",GPHOFSET
            ENDIF
          ENDIF
.
          IF        SCALE>10
            NFORMAT   DSCALE,8,ZERO
          ELSE
            NFORMAT   DSCALE,5,2
          ENDIF
          MOVE      GPHOFSET,DSCALE
          MULT      SCALE,DSCALE
          IF        MINIMUM<0
            IF        MAXIMUM>0
              MOVE      ZERO,GPHOFSET
              MOVE      ZERO,DSCALE
            ENDIF
          ENDIF
. 
          IF        SCALE=0
            MOVE      ONE,SCALE
          ENDIF
          GOTO      CGSCL999  
.
CGSCL999
          RETURN

.----------------------------------------------------------------------
. Draw Graph Axis and Scale
.----------------------------------------------------------------------
GDWYX000  MOVE      SCALE,F12P4
          MULT      TEN,F12P4
.
GDWYX040
          VLINE     *G39,AXIS,3,22
          ASSIGN    GPHNOCOY+1,GPHTMPF2
          HLINE     *G37,23,GPHTMPF2,80
.
          PACK      KEY6,GPHCURR
          CALL      RSSCGP1
          CALL      RPSCGP1
          CALL      RKSCGP1
          MOVE      SCGPPER,GPHSPER
.
          ASSIGN    GPHNOCOY-1,GPHTMPF2
          RESET     SCGPDES,GPHTMPF2
          APPEND    SP1,SCGPDES
          RESET     SCGPDES
          SETLPTR   SCGPDES,GPHNOCOY
          MOVE      "1",CCOL
          MOVE      "3",CVERT
.
          DISPLAY   *PCCOL:CVERT,*+,SCGPDES
          MOVE      "2",CVERT
.
          PACK      KEY6,GPHCURR
          CALL      RSSCGP1
          CALL      RPSCGP1
GDWYX050  
          CALL      RKSCGP1
          BRANCH    OVRCD,GDWYX090
          ADD       ONE,CVERT
          MATCH     SCGPPER,GPHSPER
          GOTO      GDWYX050 IF EQUAL
          ASSIGN    CVERT+(GPHBLKY*GPHNTYP)-GPHNTYP+1,CVERT
.
          ASSIGN    GPHNOCOY-1,GPHTMPF2
          RESET     SCGPDES,GPHTMPF2
          APPEND    SP1,SCGPDES
          RESET     SCGPDES
          SETLPTR   SCGPDES,GPHNOCOY
.
          IF        CVERT<23
            DISPLAY   *PCCOL:CVERT,*+,SCGPDES
            MOVE      SCGPPER,GPHSPER
            GOTO      GDWYX050
          ENDIF
.
GDWYX090
          MOVE      AXIS,CCOL
          DISPLAY   *PCCOL:23,*G17
          SUB       EIGHT,CCOL
          DISPLAY   *PCCOL:24,DSCALE
          ADD       EIGHT,CCOL
.
GDWYX510  ADD       F12P4,DSCALE
          ADD       TEN,CCOL
          IF        CCOL<81
            DISPLAY   *PCCOL:23,*G17
            SUB       EIGHT,CCOL
            DISPLAY   *PCCOL:24,DSCALE
            ADD       EIGHT,CCOL
            GOTO      GDWYX510
          ENDIF
.
GDWYX600  MOVE      ZERO,DSCALE
          MOVE      AXIS,CCOL
.
GDWYX610  SUB       F12P4,DSCALE
          SUB       TEN,CCOL
          IF        CCOL>(GPHNOCOY-1)
            DISPLAY   *PCCOL:23,*G17
            SUB       EIGHT,CCOL
            DISPLAY   *PCCOL:24,DSCALE
            ADD       EIGHT,CCOL
            GOTO      GDWYX610
          ENDIF
.
GDWYX999  RETURN
.----------------------------------------------------
. Display an Item
.----------------------------------------------------
GDISY000  STRIP     SCGPVAL
          MOVE      SCGPVAL,GVALUE
          COMPARE   ZERO,GVALUE
          GOTO      GDISY999 IF EQUAL
.
          ASSIGN    GVALUE/SCALE,F12P8
          SUB       GPHOFSET,F12P8
          MOVE      F12P8,F12
          COMPARE   ZERO,F12
          GOTO      GDISY999 IF EQUAL
.
          ADD       AXIS,F12
.
          ASSIGN    GPHNOCOY+1,GPHTMPF2
          COMPARE   F12,GPHTMPF2
          GOTO      GDISY300 IF LESS
          ASSIGN    GPHNOCOY+2,F12
.
          DISPLAY   *PGPHTMPF2:CVERT,*BLINKON,*HON,"*"
          GOTO      GDISY300
.
GDISY300  COMPARE   "80",F12
          GOTO      GDISY400 IF LESS
          MOVE      "79",F12
          DISPLAY   *P80:CVERT,*BLINKON,*HON,"*"
          GOTO      GDISY400
.
GDISY400  COMPARE   AXIS,F12
          GOTO      GDISY999 IF EQUAL
          GOTO      GDISY500 IF LESS
.
          ADD       ONE,AXIS
          BRANCH    GPHDTYP,GDISY410,GDISY420,GDISY430,GDISY440,GDISY450:
                             GDISY460,GDISY470,GDISY480,GDISY490
GDISY410  HLINE     *G44,CVERT,AXIS,F12
          SUB       ONE,AXIS
          GOTO      GDISY999
GDISY420  HLINE     *G45,*HON,CVERT,AXIS,F12
          SUB       ONE,AXIS
          GOTO      GDISY999
GDISY430  HLINE     *G41,*ULON,CVERT,AXIS,F12
          SUB       ONE,AXIS
          GOTO      GDISY999
GDISY440  HLINE     *G42,*V2LON,CVERT,AXIS,F12
          SUB       ONE,AXIS
          GOTO      GDISY999
GDISY450  HLINE     *G17,CVERT,AXIS,F12
          SUB       ONE,AXIS
          GOTO      GDISY999
GDISY460  HLINE     *G27,*HON,CVERT,AXIS,F12
          SUB       ONE,AXIS
          GOTO      GDISY999
GDISY470  HLINE     *G22,*V2LON,CVERT,AXIS,F12
          SUB       ONE,AXIS
          GOTO      GDISY999
GDISY480  HLINE     *G32,*ULON,CVERT,AXIS,F12
          SUB       ONE,AXIS
          GOTO      GDISY999
GDISY490  HLINE     *G38,*HON,CVERT,AXIS,F12
          SUB       ONE,AXIS
          GOTO      GDISY999
.
GDISY500  SUB       ONE,AXIS
          IF        F12=0
            MOVE      ONE,F12
          ENDIF
          BRANCH    GPHDTYP,GDISY510,GDISY520,GDISY530,GDISY540,GDISY550:
                             GDISY560,GDISY570,GDISY580,GDISY590
GDISY510  
          HLINE     *G44,CVERT,F12,AXIS
          ADD       ONE,AXIS
          GOTO      GDISY999
GDISY520 
          HLINE     *G45,*HON,CVERT,F12,AXIS
          ADD       ONE,AXIS
          GOTO      GDISY999
GDISY530 
          HLINE     *G41,*ULON,CVERT,F12,AXIS
          ADD       ONE,AXIS
          GOTO      GDISY999
GDISY540 
          HLINE     *G42,*V2LON,CVERT,F12,AXIS
          ADD       ONE,AXIS
          GOTO      GDISY999
GDISY550 
          HLINE     *G17,CVERT,F12,AXIS
          ADD       ONE,AXIS
          GOTO      GDISY999
GDISY560 
          HLINE     *G27,*HON,CVERT,F12,AXIS
          ADD       ONE,AXIS
          GOTO      GDISY999
GDISY570 
          HLINE     *G22,*V2LON,CVERT,F12,AXIS
          ADD       ONE,AXIS
          GOTO      GDISY999
GDISY580 
          HLINE     *G32,*ULON,CVERT,F12,AXIS
          ADD       ONE,AXIS
          GOTO      GDISY999
GDISY590 
          HLINE     *G38,*HON,CVERT,F12,AXIS
          ADD       ONE,AXIS
          GOTO      GDISY999
.
GDISY999  RETURN
.
GDPYX000  
          MOVE      ZERO,GPHDTYP
          MOVE      "2",CVERT
.
          PACK      KEY6,GPHCURR
          CALL      RSSCGP1
          CALL      RPSCGP1
.
GDPYX100  
          CALL      RKSCGP1
          BRANCH    OVRCD,GDPYX999
.
          PACK      GPHNEXT,SCGPPER,GPHSP70
          ADD       ONE,CVERT
.
          IF        GPHDTYP=9
            MOVE      ONE,GPHDTYP
          ELSE
            ADD       ONE,GPHDTYP
            IF        GPHDTYP>GPHNTYP
              MOVE      ONE,GPHDTYP
              ADD       ONE,CVERT
            ENDIF
          ENDIF
          IF        CVERT>22
            GOTO      GDPYX999
          ENDIF
.
          MOVE      ZERO,GPHBCNT
GDPYX800                             * Loop for Block Width
          CALL      GDISY000
          ADD       ONE,GPHBCNT
          IF        GPHBCNT<GPHBLKY
            ADD       ONE,CVERT
            IF        CVERT<23 
              GOTO      GDPYX800
            ELSE
              GOTO      GDPYX999
            ENDIF
          ENDIF
.
          GOTO      GDPYX100
.
GDPYX999  RETURN
.--------------------------------------
. Display Legend
.--------------------------------------
GLEDG000  
          KEYIN     *P1:1,*EL,"Top/Left : ":
                    *P12:1,*V2LON,HTOP:
                    *P12:1,*DV,HTOP
          IF        HTOP=0
            MOVE      TWO,HTOP
            MOVE      "61",HLEF
            GOTO      GLEDG010
          ENDIF
          KEYIN     *P15:1,*V2LON,HLEF:
                    *P15:1,*DV,HLEF
          IF        HLEF=0
            MOVE      "61",HLEF
            DISPLAY   *P15:1,*V2LON,HLEF
          ENDIF
          IF        HTOP<2
            MOVE      "Top Must Be Greater Than 1 - ",GRAPHMSG
            CALL      MSGGRAPH
            GOTO      GLEDG000
          ENDIF
          IF        HLEF<1
            MOVE      "Left Must Be Greater Than 0 - ",GRAPHMSG
            CALL      MSGGRAPH
            GOTO      GLEDG000
          ENDIF
          IF        HLEF+19>80
            MOVE      "Left Must Be Less Than 61 - ",GRAPHMSG
            CALL      MSGGRAPH
            GOTO      GLEDG000
          ENDIF
          IF        HTOP+2+GPHNTYP>24
            CLEAR     GRAPHMSG
            APPEND    "Top Must Be Less Than ",GRAPHMSG
            ASSIGN    GPHNTYP+2-24,HBOT
            APPEND    HBOT,GRAPHMSG
            APPEND    " - ",GRAPHMSG
            RESET     GRAPHMSG
            CALL      MSGGRAPH
            GOTO      GLEDG000
          ENDIF
.
GLEDG010  CALL      GHEAD000
.
          ASSIGN    HTOP+2+GPHNTYP,HBOT
          ASSIGN    HLEF+19,HRIG
          CALL      GETSCR00
          BOXCLR    HLEF,HTOP,HRIG,HBOT
          BOX       1,HLEF,HTOP,HRIG,HBOT
          ADD       ONE,HTOP
          ADD       TWO,HLEF
          DISPLAY   *PHLEF:HTOP,*V2LON,*ULON,"Legend"
          ADD       ONE,HTOP
          MOVE      HTOP,CVERT
          MOVE      ONE,GPHDTYP
          MOVE      ZERO,CCOL
GLEDG020  ADD       ONE,CCOL
          BRANCH    GPHDTYP,GLEDG021,GLEDG022,GLEDG023,GLEDG024,GLEDG025:
                            GLEDG026,GLEDG027,GLEDG028,GLEDG029
GLEDG021  DISPLAY   *PHLEF:CVERT,*G44,SP1,GPHLEDG[CCOL]
          GOTO      GLEDG030
GLEDG022  DISPLAY   *PHLEF:CVERT,*HON,*G45,*HOFF,SP1,GPHLEDG[CCOL]
          GOTO      GLEDG030
GLEDG023  DISPLAY   *PHLEF:CVERT,*ULON,*G41,*HOFF,SP1,GPHLEDG[CCOL]
          GOTO      GLEDG030
GLEDG024  DISPLAY   *PHLEF:CVERT,*V2LON,*G42,*HOFF,SP1,GPHLEDG[CCOL]
          GOTO      GLEDG030
GLEDG025  DISPLAY   *PHLEF:CVERT,*G17,SP1,GPHLEDG[CCOL]
          GOTO      GLEDG030
GLEDG026  DISPLAY   *PHLEF:CVERT,*HON,*G27,*HOFF,SP1,GPHLEDG[CCOL]
          GOTO      GLEDG030
GLEDG027  DISPLAY   *PHLEF:CVERT,*V2LON,*G22,*HOFF,SP1,GPHLEDG[CCOL]
          GOTO      GLEDG030
GLEDG028  DISPLAY   *PHLEF:CVERT,*ULON,*G32,*HOFF,SP1,GPHLEDG[CCOL]
          GOTO      GLEDG030
GLEDG029  DISPLAY   *PHLEF:CVERT,*HON,*G38,*HOFF,SP1,GPHLEDG[CCOL]
          GOTO      GLEDG030
GLEDG030 
          ADD       ONE,CVERT
          ADD       ONE,GPHDTYP
          IF        GPHDTYP>9
            MOVE      ONE,GPHDTYP
          ENDIF
          COMPARE   HBOT,CVERT
          GOTO      GLEDG040 IF EQUAL
          COMPARE   GPHNTYP,CCOL 
          GOTO      GLEDG020 IF NOT EQUAL
.
GLEDG040  
          KEYIN     *P1:1,*EOFF,ANS
          CALL      PUTSCR00
          RETURN
.----------------------------
. Display Heading
.-----------------------------
GHEAD000  DISPLAY   *P1:1,*EL
          STRIP     GPHNAME
          MOVELPTR  GPHNAME,CCOL
          DIV       TWO,CCOL
          MULT      SEQ,CCOL                                
          ADD       "38",CCOL
          DISPLAY   *PCCOL:1,SP1,*+,GPHNAME,SP1
          HLINE     *G37,2,1,80
.
          RETURN
.-----------------------------
. Down a Period
.-----------------------------
GDOWN000  MOVE      GPHCURR,KEY6
          UNPACK    GPHCURR,GPHSPER
          CALL      RSSCGP1
GDOWN100  CALL      RKSCGP1
          BRANCH    OVRCD,GDOWN999
          MATCH     GPHSP70,GPHCURR
          IF        @EQUAL
            PACK      GPHCURR,SCGPPER,GPHSP70
            UNPACK    GPHCURR,GPHSPER
          ENDIF
          MATCH     SCGPPER,GPHSPER
          GOTO      GDOWN100 IF EQUAL
          PACK      GPHCURR,SCGPPER,GPHSP70
.
GDOWN999  RETURN
.
MSGGRAPH
          GETVAR    GRAPHD24,GRAPHA24,1,24
          RESET     GRAPHMSG
          STRIP     GRAPHMSG
          ENDSET    GRAPHMSG
          APPEND    SP1,GRAPHMSG
          RESET     GRAPHMSG
          DISPLAY   *P1:24,*EL,*+,GRAPHMSG;
          CALL      HITENTER
          PUTVAR    GRAPHD24,GRAPHA24,1,24
          RETURN
.
          INC       SCRGPHIO/INC
.
