.PATCMSTP.PBL
.
.*******************************************************************************
.     PATCMSTP : Generate Casemix funding stepdown
.
.     Modifications : 
.         V12.00.01 23/05/2025  J.Tan          TSK 0955096
.                   Added Alphanumeric visit number changes
.         V10.15.01 16/01/2020  J.Tan           TSK 0883777
.                   Fixed MV with ADYHOSP <> 0
.         V10.14.01 13/09/2019  J.Tan             TSK 0872482
.                   Fixed MV with Days of Hospitalization (MVDAYS)
.         V10.10.07 17/05/2017  J.Tan             TSK 0297904
.                   Mod for Non-Accumulative inlier ICU/CCU rule
.         V10.10.06 04/04/2017  J.Tan             TSK 0297904
.                   Mod for Non-Accumulative inlier ICU/CCU rule
.         V10.03.05 12/08/2013  J.Tan             CAR 290044
.                   Fixed checking Disc.date/time before writting transfer rec.
.         V10.03.04 27/11/2012  J.Tan             CAR 262673
.                   Mods for Unqualified days/Additional Casepayment perdiemrate
.         V10.03.03 20/02/2012  J.Tan             CAR 260351
.                   Mods save SAVTDATE for TMOVE=A(Add.Chrg Stepdown for Disc.)
.         V10.03.02 10/01/2012  J.Tan             CAR 257682
.                   Replaced RDPTASDA1 to RDPTASD1
.         V10.03.01 16/12/2011  Mike Laming       CAR 257430
.                   Fix a couple of 9 character table Reads
.         V10.01.02 08/03/2011  J.Tan             CAR 233154
.                   Mods to check for Continuous billing event
.         V10.01.01 30/11/2010  Peter Vela        CAR 233148
.                   Initialised pattranf variables before write
.         V9.12.02  19/01/2010  J.Tan             CAR 166439
.                   Fixed Additional charge stepdown
.         V9.12.01  03/09/2009  J.Tan             CAR 205303
.                   Added Casemix ID
.         V9.11.01  06/10/2008  J.Tan             CAR 172904
.                   Mods to set CASMXKEY
.         V9.09.03  10/04/2008  J.Tan             CAR 166096
.                   Fixed generating inlier after bed transfer with same bedtype
.         V9.09.02  04/09/2007  J.Tan             CAR 148353
.                   Fixed problem with No low outlier setup
.         V9.09.01  22/06/2007  J.Tan             CAR 143507
.                   Mods for ATYPE change record to recalculate both charges
.         V9.08.02  15/03/2007  J.Tan             CAR 136149
.                   Mods to use default claim code for charging
.         V9.08.01  13/02/2007  Mike Laming       CAR 132798
.                   Change to set NOFEE to 0 if no Additional Charges have been
.                   set up - at GDAI2000
.         V9.04.01  24/11/2004  Mike Laming  CAR 54534
.                   Fix test for Additional Rates=0 at GDAI9000 (back to front)
.         V9.03.03  21/06/2002 J.Tan  CAR 42846
.                   Mods to include no of hospitalisation days
.         V9.03.02  24/05/2002 J.Tan  CAR 49644
.                   Mods to check for manual stepdown done after discharged to
.                   overwrite trans record (OVERPFL)
.         V9.03.01  26/03/2004  Mike Laming   CAR 47732
.                   Correct BDAYS count/calcs when performing Stepdown
.                   Fix Casemix Stepdown Rates on "R"eturn from Leave
.         V9.02.08  18/09/2002 J.Tan  
.                   Mods to check if bed type changed to recalculate both rates
.                   Mods to save skey30 for patcatbi
.         V9.02.07  30/08/2002  J.Tan
.                   Fixed problem with multiple transfer records with same date
.         V9.02.06  23/08/2002  J.Tan
.                   Fixed OVERPFL in WHST9200
.         V9.02.05  15/08/2002  Mike Laming  SRF 17570/19094
.                   Copy V6.10 corrections to V9.02 
.         V9.02.04  04/07/2002  Mike Laming  SRF 19094
.                   Fix Stepdown/Casemix problems - reinsert old code but test
.                   PTTREPSD
.         V9.02.03  25/06/2002  J.Tan      
.                   Mods to save new rates on admission record        
.         V9.02.02  13/06/2002  J.Tan      
.                   Mods to generate both rate for discharged outlier
.         V9.02.01  22/04/2002  J.Tan      
.                   Ported from r6.09
.         V6.09.04  14/02/2002  J.Tan      
.                   Mods to save the outlier commencement day 
.         V6.09.03  02/02/2002  J.Tan      
.                   Mods to recalculate rate for admission record of trans 
.         V6.09.02  24/01/2002  J.Tan      
.                   Mods to save last ending day of outlier
.         V6.09.B01 12/02/2001  Greg Horvat
.                   Replaced the call to CALC with DAYSEP
.         V6.09.B00 14/12/2000 Jill Habasque
.                   Mods to use casemix code (instead of DRG/MBS)
.                     Added printing cross reference for accom.desc.(SRF 5160)
.                     V6.06.03 J.Tan
.                     Added printing cross reference for accom.desc.(SRF 5160)
.                     Mods generating date of discharge record (SRF 3693)
.                     V6.06.02 Steve Downing 
.                     Mods to next period calculations
.                     V6.06.01 J.Tan
.                     Defaults to additional charge when no stepdown 
.                     V6.05.03 J Habasque
.                     Changed Julian date to use century
.                     V6.04.01 J.Tan   SRF 617756
.                     Fixed bugs after changing doctor code
.                     V6.05.01 J.Tan 
.                     Fixed reposition key for pattran
.                     V6.05.02 J.Tan 
.                     To display Daily/Add.charge if additional charge is zero 
.
.*******************************************************************************
.
PATCMSTP  MOVE      ZERO,EXIT
.
          CMATCH    ANSA,TMOVE             * check for admission record
          GOTO      GCMX2000 IF EQUAL
.
          MOVE      CQLDTMOV,SQLDTMOV
          MOVE      TATYPE,KEY3
          CALL      CQLD0000              * Check for Unqualified days
.
          MATCH     ANSD,TMOVE
          GOTO      GCMX4000 IF EQUAL
.
          CALL      CCHG0000              * Change movement
          BRANCH    EXIT,GCMX2500,GCMX9000
.
          CMATCH    ANSR,TMOVE             * check for return record
          GOTO      GCMX3000 IF EQUAL
.
          CALL      CMOV0000              * check for Change/Leave movement
.
          CMATCH    ANSL,TMOVE
          IF        @EQUAL
            CALL      LMOV0000            * Leave movement
          ENDIF
          GOTO      GCMX9000
.
GCMX2000  MOVE      TATYPE,KEY3
          CALL      CQLD0000               * Check for Unqualified days
.
          MOVE      ADYHOSP,BDAYS         * initialise number of beddays
          MOVE      ZERO,BTDAYS           * no of beddays for current bed type
          MOVE      ADYHOSP,DAYNUM        * no of days in hospital
          MOVE      TDATE,SIDATET         * save Admission date as 'Prev.Date'
.
GCMX2500  CALL      AMOV0000              * Admission movement
          GOTO      GCMX9000
.
GCMX3000  CALL      RMOV0000              * Return movement
          GOTO      GCMX9000
.
GCMX4000  CALL      DMOV0000              * Discharge movement
.
GCMX9000  MOVE      ZERO,EXIT
GCMX9999  RETURN
+
.*******************************************************************************
.         Check for Unqualified Baby bed days from previous Adm.type (INDC12=Z)
.*******************************************************************************
CQLD0000  MOVE      ZERO,EXIT
          MOVE      SP70,CQLDTMOV
          PACK      KEY5,ANSA,SP1,KEY3
          CALL      RDCODE1
          BRANCH    OVRCD,CQLD9999
.
          MATCH     "U",TCINDC12                * Current adm.type
          IF        @EQUAL
            MOVE      "U",CQLDTMOV
          ENDIF
.
CQLD9999  RETURN
+
.******************************************************************************
.           Admission movement
.******************************************************************************
AMOV0000    MOVE      TDATE,FRDATE          * save current transdate
            MOVE      TDATE,SFDT1           * start date for daily rate
.....       MOVE      TDATE,SFDT2           * start date for addit.rate D-47732
.....       MOVE      ZERO,DAYNUM1                          * not used  D-47732
            MOVE      ZERO,OVERPFL          * flag not to use rates from trans.
            CALL      SVRS0000              * Save transaction variables
            MOVE      TRBEND,CURMDAYS
            MOVE      PTTRAEND,CUMADAYS
.
            MOVE      THREE,STEPFLAG        * set to generate both rates
            MOVE      TDATE,TODATE
.
            MATCH     "U",CQLDTMOV
            IF        @EQUAL
              CALL      PDIM0000             * Get perdiem rate
            ELSE
              MOVE      ONE,FQLDFLAG          * found a qualified day
              IF        PTTREPSD<>1
                MATCH     SP70,CMXCONTR
                IF        !@EQUAL
                  MOVE      CMXCONTR,CONTRCID
                ENDIF
                CALL      GDAI0000            * Get rates, to get ending day
                MOVE      CURMDAYS,TRBEND     * set new ending day of daily rate
                MOVE      CUMADAYS,PTTRAEND   * set new ending day of add.rate
              ENDIF
            ENDIF
.
            MOVE      TRATEF,SAVDYPT        * save new generated rate (patient)
            MOVE      TRATEH,SAVDYRB        *                     (health fund)
            MOVE      PTTRADPT,SAVADPT      * save new generated Addit. rate
            MOVE      PTTRADRB,SAVADRB
            MOVE      TDATE,SAVTDATE
.
AMOV9999    RETURN
+
.*******************************************************************************
.         Change Movement (TMOVE=C,R and L)
.*******************************************************************************
CCHG0000  MOVE      TDATE,SAVTDATE
.
          MATCH     "U",CQLDTMOV
          IF        @EQUAL
.
.         Current movement is Unqualified
.
            COMPARE   ZERO,FQLDFLAG
            GOTO      CCHG9100 IF EQUAL     * hasn't found a qualified day yet
.
            MATCH     "U",SQLDTMOV
            IF        @EQUAL
              CALL      PDIM0000                  * Get perdiem rate
              CALL      SVRS0000            * Save transaction variables
              CMATCH    ANSR,TMOVE
              IF        @EQUAL
                MOVE      TDATE,FRDATE          * save current transdate
                MOVE      TDATE,SFDT1           * start date for daily rate
.               MOVE      ZERO,FQLDFLAG
              ENDIF
              CMATCH    ANSL,TMOVE
              IF        @EQUAL
                MOVE      SFDT1,FROMDATE
                MOVE      TDATE,TODATE
                MOVE      SP70,SAVIND12      * Calculate bed days for qualified
                PROC      PATDATYP
                ADD       NBRDAYS,DAYNUM
              ENDIF
              CMATCH    ANSR,TMOVE
              IF        @EQUAL
                CALL      RMOV0000           * Return movement
              ENDIF
              GOTO      CCHG9200
            ENDIF
          ELSE
.
.         Current movement is Qualified
.
            MATCH     "U",SQLDTMOV
            IF        @EQUAL
              COMPARE   ZERO,FQLDFLAG
              GOTO      CCHG9100 IF EQUAL     * hasn't found a qualified day yet
              GOTO      CCHG9300
            ENDIF
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      CCHG9999
.
CCHG9100  MOVE      ONE,EXIT
          GOTO      CCHG9999
.
CCHG9200  MOVE      TWO,EXIT
          GOTO      CCHG9999
.
CCHG9300  MOVE      THREE,EXIT
          GOTO      CCHG9999
.
CCHG9999  RETURN
+
.******************************************************************************
.         Check for Change movement (C and L movement)
.******************************************************************************
CMOV0000  COMPARE   THREE,EXIT
          GOTO      CMOV5000 IF EQUAL     * Generate both Inlier and Additional
.
          MOVE      ZERO,EXIT
          MOVE      TDATE,SAVTDATE
.
          MOVE      PTTRADPT,SAVAPAT 
          MOVE      PTTRADRB,SAVAHF
          MOVE      TRATEF,SAVPAT 
          MOVE      TRATEH,SAVHF
.
.           Check the current trans date to previous (stepdown) trans. date
.
          MATCH     TDATE,SAVDATE      * check if transfer date has changed
          GOTO      CMOV2000 IF NOT EQUAL
.
.         If actual previous transdate is equal to the stepdown date, then
.         check if we need to recalculate charges for both daily and additional
.
          MATCH     B8DATE,TDATE       * check if actual transdate has changed
          GOTO      CMOV2000 IF EQUAL
.
          MATCH     TATYPE,SAVATYP        * check for changed of adm.type
          GOTO      CMOV5000 IF NOT EQUAL * recalculate both charges
          MATCH     TRBTYP,SAVBTYP        * check for changed of bed type
          GOTO      CMOV5000 IF NOT EQUAL * recalculate both charges
.
          MATCH     TWARD,SAVWARD
          GOTO      CMOV5000 IF NOT EQUAL
          MATCH     TBED,SAVBED
          GOTO      CMOV5000 IF NOT EQUAL
.
          COMPARE   ONE,PTTREPSD
          GOTO      CMOV5000 IF NOT EQUAL
.
          CALL      SVRS0000              * Save transaction variables
          MOVE      TRBEND,CURMDAYS
          MOVE      PTTRAEND,CUMADAYS
          GOTO      CMOV9000
.
CMOV2000  CALL      GSTP0000              * generate stepdown
          COMPARE   ONE,EXIT
          GOTO      CMOV6000 IF NOT EQUAL
.
CMOV5000  MOVE      THREE,STEPFLAG        * set to generate both rates
          MOVE      TDATE,TODATE
          MOVE      TRBTYP,SAVBTYP
          MATCH     "U",CQLDTMOV
          IF        @EQUAL
             CALL      PDIM0000           * Get perdiem rate
          ELSE
            MATCH     SP70,CMXCONTR
            IF        !@EQUAL
              MOVE      CMXCONTR,CONTRCID
            ENDIF
            CALL      GDAI0000            * Get new rates
          ENDIF
.
CMOV6000  CALL      SVRS0000              * Save transaction variables
.
CMOV9000  MOVE      ZERO,EXIT
CMOV9999  RETURN
+
.******************************************************************************
.         Leave movement
.******************************************************************************
LMOV0000  MOVE      ZERO,EXIT
          MOVE      ZERO,NBRDAYS          * about to move SFDT1 (on 'R'), so
          MOVE      DAYNUM,F4
          DAYSEP    SFDT1,TDATE,NBRDAYS   * save no. of days in bed
          ADD       NBRDAYS,DAYNUM
          MOVE      ZERO,OVERPFL                            * ? obsolete ?
.
          MATCH     SP70,CMXCONTR
          IF        !@EQUAL
            MOVE      SFDT1,FROMDATE
            MOVE      TDATE,TODATE
            MOVE      SP70,SAVIND12      * Calculate bed days for qualified
            PROC      PATDATYP
            MOVE      F4,DAYNUM
            ADD       NBRDAYS,DAYNUM
          ENDIF
.
LMOV9999  RETURN
.******************************************************************************
.         Return movement
.******************************************************************************
RMOV0000
          CALL      SVRS0000              * Save transaction variables
          MOVE      TRBEND,CURMDAYS
          MOVE      PTTRAEND,CUMADAYS
          MOVE      TDATE,FRDATE          * save current transdate
          MOVE      TDATE,SFDT1           * start date for daily rate
.....     MOVE      TDATE,SFDT2           * start date for addit.rate D-47732
          MOVE      ZERO,BTDAYS
          MOVE      ZERO,OVERPFL                          * ? obsolete ?
          MATCH     SP70,CMXCONTR
          IF        !@EQUAL
            MOVE      CMXCONTR,CONTRCID
          ENDIF
.                                           * set parameters for GDAI0000
          MOVE      THREE,STEPFLAG        * set to generate both rates
          MOVE      DAYNUM,BDAYS          * set total bed days       *I-47732
          IF        PTTREPSD<>1
            MATCH     "U",CQLDTMOV
            IF        @EQUAL
              CALL      PDIM0000             * Get perdiem rate
            ELSE
              CALL      GDAI0000              * Get new rates, to get ending day
              MOVE      CUMADAYS,PTTRAEND     * set new ending day of add.rate
            ENDIF
            MOVE      CURMDAYS,TRBEND       * set new ending day of daily rate
          ENDIF
.
          MOVE      TRATEF,SAVDYPT        * save the new generated rate
          MOVE      TRATEH,SAVDYRB
          MOVE      PTTRADPT,SAVADPT      * save the new generated rate
          MOVE      PTTRADRB,SAVADRB
RMOV9999  RETURN
+
.******************************************************************************
.         Discharge movement
.******************************************************************************
DMOV0000  MOVE      TDATE,SAVDATE
          MOVE      TTIME,SAVTIME
.
          MATCH     "U",CQLDTMOV
          IF        @EQUAL
            CALL      PDIM0000                  * Get perdiem rate
            MOVE      TRATEF,STRATEF
            MOVE      TRATEH,STRATEH
            MOVE      ZERO,LSTRATE
            ADD       TRATEF,LSTRATE
            ADD       TRATEH,LSTRATE
            GOTO      DMOV9999
          ENDIF
          CALL      GSTP0000              * generate stepdown
.
DMOV9999  RETURN
+
.******************************************************************************
.         SVRS0000 - Save transaction record variables
.******************************************************************************
SVRS0000  MOVE      TWARD,SAVWARD
          MOVE      TBED,SAVBED
          MOVE      TATYPE,SAVATYP
          MOVE      TRBTYP,SAVBTYP
          MOVE      TADOCT,SAVADOC
          MOVE      TDATE,SAVDATE
          MOVE      TTIME,SAVTIME
          MOVE      TCHSTAT,SAVCHST
          MOVE      TDISC,SAVDISC
          MOVE      TALLW,SAVALLW
          MOVE      PTTRADPT,SAVADPT
          MOVE      PTTRADRB,SAVADRB
          MOVE      TRATEF,SAVDYPT
          MOVE      TRATEH,SAVDYRB
.
          MATCH     SP3,SAVBTYP
          GOTO      SVRS9999 IF NOT EQUAL
.
          PACK      KEY6 WITH TWARD,TBED
          CALL      RDWARD1
          MOVE      WEFRBT,TRBTYP
          MOVE      WEFRBT,SAVBTYP
.
SVRS9999  RETURN
+
.******************************************************************************
.         GSTP0000 - Generate Stepdown fee
.******************************************************************************
GSTP0000  MOVE      ZERO,EXIT
          CALL      WHST0000          * to determine which stepdown due first
          BRANCH    EXIT,GSTP9999
.
. -------------------------------- DIM8 is 'new date' from WHST0000
.
          CMATCH    ANSD,TMOVE          * check if this is a discharge record
          IF        @EQUAL
.           MATCH     DIM8,SAVDATE      * is discharged date before new date ?
            MATCH     DIM8,DDATE        * is discharged date before new date ?
            GOTO      GSTP9999 IF LESS  * yes, don't generate stepdown 
.
            MATCH     DIM8,SIDATET      * if new date less than previous todate
            IF        !@LESS
              MOVE      TDATE,SAVTDATE  * save the actual discharged date
              GOTO      GSTP8000
            ENDIF
          ELSE
            MATCH     SAVDATE,DIM8      * is new date before previous date ?
            GOTO      GSTP8000 IF LESS  * yes, don't generate stepdown
.
.           Ignore, if the new date is before the previous 'todate' of accom.
.
            MATCH     DIM8,SIDATET
            GOTO      GSTP8000 IF NOT LESS  
          ENDIF
.
....2000  ADD       ONE,BDAYS         * set begining of new period      D-47732
GSTP2000  MOVE      ZERO,EXIT                                          *I-47732
          MOVE      DIM8,TDATE        * Set transfer date
.
.         Stepflag = 1 - daily rate , 2 - additional rate, 3 - both
.
.....?    MOVE      THREE,STEPFLAG       * shouldn't this be set here ? ?-47732
          MOVE      TDATE,TODATE
          CALL      GDAI0000             * Get new rates
.
          MOVE      TRATEF,SAVDYPT       * save the new generated rate
          MOVE      TRATEH,SAVDYRB
          MOVE      PTTRADPT,SAVADPT     * save the new generated rate
          MOVE      PTTRADRB,SAVADRB
.
          MOVE      CURMDAYS,TRBEND      * set new ending day of daily rate
          MOVE      CUMADAYS,PTTRAEND    * set new ending day of add.rate
.
          CALL      STRN0000             * Set/write a trans record
.
.         Check if this date has already been invoiced
.
          MATCH     IDATEF,TDATE
          GOTO      GSTP3000 IF LESS
          CALL      WRTR0000             * Write a trans record
          MOVE      ONE,TRNFLAG
.
          GOTO      GSTP9999
.
.         the new trans date had been invoiced, position to the new key
.
GSTP3000  
.         CALL      SVRS0000              * Save transaction variables
          MOVE      TRBEND,CURMDAYS
          MOVE      PTTRAEND,CUMADAYS
          PACK      KEY30,TADMN,TDATE,TTIME,TWARD,TBED
          CALL      RDSTRAN2
          CALL      RDKTRAN2
          BRANCH    OVRCD,GSTP5000
.
          MATCH     TADMN,AADMNO
          GOTO      GSTP5000 IF NOT EQUAL
.
          MATCH     SAVDATE,TDATE
          IF        @EQUAL
            CALL      SVRS0000              * Save transaction variables
            GOTO      GSTP9999
          ELSE
            CALL      RDPTRAN2              * reposition to previous record
            GOTO      GSTP9999
          ENDIF
.
.         Restore the trans record
.
GSTP5000  MOVE      SAVWARD,TWARD
          MOVE      SAVBED,TBED
          MOVE      SAVATYP,TATYPE
          MOVE      SAVBTYP,TRBTYP
          MOVE      SAVADOC,TADOCT
          MOVE      SAVDATE,TDATE
          MOVE      SAVTIME,TTIME
          MOVE      SAVCHST,TCHSTAT
          MOVE      CURMDAYS,TRBEND
          MOVE      CUMADAYS,PTTRAEND
          MOVE      SAVDISC,TDISC
          MOVE      SAVALLW,TALLW
          MOVE      SAVDYPT,TRATEF       * save the new generated rate
          MOVE      SAVDYRB,TRATEH
          MOVE      SAVADPT,PTTRADPT     * save the new generated rate
          MOVE      SAVADRB,PTTRADRB
          CALL      RDSTRAN2
          GOTO      GSTP9999
.
GSTP8000  
          CALL      SVRS0000             * Save transaction variables
          MOVE      ZERO,OVERPFL         * flag for not using rates from trans.
          MATCH     SP8,DIM8
          GOTO      GSTP8200 IF EQUAL
.
.         Use the actual rates from trans, just calculate the new ending day
.
          MOVE      SAVTDATE,TDATE
          MOVE      TDATE,TODATE
.
          IF        STEPFLAG = 1
.....       ADD       ONE,BDAYS               * set next period         D-47732
            CALL      GDAI0000                * Generate fee to get accum.days
            MOVE      DAYEND,CURMDAYS         * for daily rates
            MOVE      SAVDYPT,TRATEF          * Restore daily rates from trans
            MOVE      SAVDYRB,TRATEH
          ELSE 
            CALL      GDAI0000                * Generate fee to get accum.days
            MOVE      ADDEND,CUMADAYS         * for additional rates
            MOVE      SAVADPT,PTTRADPT        * Restore addition.rates fromtrans
            MOVE      SAVADRB,PTTRADRB
          ENDIF
.
GSTP8200  MOVE      TRBEND,CURMDAYS
          MOVE      PTTRAEND,CUMADAYS
.
GSTP9999  RETURN
+
.******************************************************************************
.         WHST0000 - To determine which stepdown due first
.         Return : DAYFLAG  - daily stepdown due                 
.                  ADYFLAG  - Additional stepdown due
.******************************************************************************
WHST0000  MOVE      ZERO,STEPFLAG
          MOVE      SP10,DIM8
          MOVE      ZERO,DAYFLAG      * set flag for daily charge stepdown
          MOVE      ZERO,ADYFLAG      * set flag for add.daily charge stepdown
          UNPACK    SP20,TMPDT1,TMPDT2
          MOVE      ZERO,BTDAYS
          MOVE      ZERO,EXIT
.
          MOVE      ZERO,NBRDAYS
          DAYSEP    SFDT1,TDATE,NBRDAYS
.
          IF        NBRDAYS>0
            MOVE      DAYNUM,BDAYS    * move in any pre-'L'eave bed-days
            ADD       NBRDAYS,BDAYS   * days from previous trans date to current
          ENDIF
.
          MOVE      SFDT1,FROMDATE
          MOVE      TDATE,TODATE
          MOVE      "U",SAVIND12      * Calculate bed days for Unqualified
          PROC      PATDATYP
          MOVE      ZERO,F4
          COMPARE   ZERO,NBRDAYS
          GOTO      WHST1000 IF EQUAL * No unqualified days
          MOVE      NBRDAYS,F4        * Unqualified days
.
          IF        NBRDAYS<BDAYS
            SUB       NBRDAYS,BDAYS   * Qualified days
          ENDIF
.
.         If the ending day of daily rate from trans file is less than the 
.         current number of days, then it must be due for stepdown
.
WHST1000  COMPARE   ZERO,CURMDAYS
          GOTO      WHST2000 IF EQUAL   * Generate additional rate
.
          COMPARE   CURMDAYS,BDAYS      * check bed-days vs end-of-rate ?-47732
          GOTO      WHST2000 IF LESS    *                               ?-47732
.
          MOVE      CURMDAYS,FORM4A
          SUB       DAYNUM,FORM4A      * subtract previous beddays
          ADD       F4,FORM4A          * Include unqualified days
.
          MOVE      FRDATE,WDATE1
          UNPACK    FRDATE,XCENT,XYEAR,XMON,XDAY
          CALL      SDAT0000          * Calculate the date of the new period
          PACK      TMPDT1,CC,YY,MM,DD
          REP       " 0",TMPDT1
          MOVE      ONE,DAYFLAG       * set flag for daily flag
.
WHST2000  
          MOVE      TDATE,TODATE
          PROC      PATDBTYP
          MOVE      NBRDAYS,FORM4B     * Days from 
.
          MOVE      SAVDATE,TODATE
          MATCH     TDATE,SAVDATE
          IF        @EQUAL
            MOVE      SAVTDATE,TODATE
            MOVE      SAVTDATE,SAVDATE
          ENDIF
          PROC      PATDBTYP
          MOVE      NBRDAYS,BTDAYS    * days for current bed type
.
.         If the ending day of Additional rate from trans file is less than the 
.         current number of days, then it must be due for stepdown
.
          COMPARE   ZERO,CUMADAYS
          GOTO      WHST2100 IF EQUAL   * Generate daily rate
.
          COMPARE   CUMADAYS,FORM4B  * Check with ending day of additional rate
          GOTO      WHST2200 IF LESS   * no stepdown for additional rate
.
          MOVE      CUMADAYS,FORM4A
          SUB       BTDAYS,FORM4A
          MOVE      FORM4A,F4          * save
.
.         Additional rate stepdown due
.
          UNPACK    SAVDATE,XCENT,XYEAR,XMON,XDAY
          IF        FORM4A<0
.           MATCH     SP8,TMPDT1
.           GOTO      WHST2300 IF NOT EQUAL   * generate both
.
            MATCH    TDATE,SAVDATE
            IF       !@EQUAL
              UNPACK   STDATE,XCENT,XYEAR,XMON,XDAY
            ENDIF
            MOVE      CUMADAYS,FORM4A
          ENDIF
.
          CALL      SDAT0000          * Calculate the date of the new period
          PACK      TMPDT2,CC,YY,MM,DD
          REP       " 0",TMPDT2
.
          IF        F4<0
            MATCH     SP70,TMPDT1
            IF        !@EQUAL
              MATCH     TMPDT1,TMPDT2
              GOTO      WHST2600 IF LESS       * Addition rate stepdown first
              GOTO      WHST2300
            ELSE
              MOVE      STDATE,SAVDATE
            ENDIF
          ENDIF
          MOVE      ONE,ADYFLAG       * set additional daily flag
          GOTO      WHST2200
.
WHST2100  
          MATCH     SP8,TMPDT1
          IF        @EQUAL
            MATCH     SP8,TMPDT2
            GOTO      WHST9200 IF EQUAL
          ENDIF
          GOTO      WHST2400
.
WHST2200  
.         Determine which stepdown due first
.
          MATCH     TMPDT1,TMPDT2
          IF        @EQUAL
            MATCH     SP6,TMPDT1
            GOTO      WHST9200 IF EQUAL
.
WHST2300
            MOVE      THREE,STEPFLAG        * to generate both stepdowns
            MOVE      TMPDT1,DIM8
            MOVE      CURMDAYS,BDAYS        * both rate stepdown due 
            MOVE      ONE,BTDAYS
            GOTO      WHST9000
          ENDIF
.
          MATCH     SP8,TMPDT2
          GOTO      WHST2400 IF EQUAL
          MATCH     SP8,TMPDT1
          GOTO      WHST2600 IF EQUAL
.
          MATCH     TMPDT2,TMPDT1
          IF        @LESS
WHST2400    MOVE      CURMDAYS,BDAYS    * daily rate stepdown due first
            MOVE      TMPDT1,DIM8
            MOVE      ONE,STEPFLAG      * daily rate first - set flag to one
          ELSE
WHST2600    
.           MOVE      CUMADAYS,BDAYS    * additional rate stepdown due first
            MOVE      ONE,BTDAYS
            MOVE      TMPDT2,DIM8
            MOVE      TWO,STEPFLAG      * additional rate first -set flag to two
          ENDIF
.
          MATCH     DIM8,SAVTDATE
          GOTO      WHST9000 IF NOT EQUAL
.
          MOVE      ONE,OVERPFL       * flag to overwrite stepdown rates
          GOTO      WHST9900
.
.           Check if trans record overwritten on the previous record
.
WHST9000  IF        PTTREPSD=1 & OVERPFL=1
            MOVE      ZERO,OVERPFL          * re-initialise
            MOVE      THREE,STEPFLAG        * to regenerate both stepdown
            MOVE      ONE,BTDAYS
          ELSE
            MOVE      ZERO,OVERPFL
          ENDIF
          GOTO      WHST9900
.
WHST9200  MOVE      ONE,EXIT              * no stepdown
          MOVE      ONE,OVERPFL           * flag to overwrite stepdown rates
          IF        PTTREPSD<>1
            MOVE      TRBEND,CURMDAYS
            MOVE      PTTRAEND,CUMADAYS
          ENDIF
.
          MOVE      ZERO,FORM82           * check if new additional rate is zero
          MOVE      PTTRADPT,FORM82
          ADD       PTTRADRB,FORM82
.
          GOTO      WHST9900
.
WHST9900  
            MOVE      CUMADAYS,PTTRAEND
WHST9999  RETURN
+
.******************************************************************************
.         WRTR0000 - Generate new stepdown
.******************************************************************************
.     Write a new change record for the new rate only when printing invoice
.
WRTR0000  COMPARE   THREE,PROGFLAG
          GOTO      WRTR1000 IF NOT EQUAL
.
          PACK      KEY30 WITH AADMNO,TDATE,TTIME,TWARD,TBED
          CALL      RDATRAN2
          COMPARE   ZERO,OVRCD
          GOTO      WRTR1000 IF EQUAL
.
          MOVE      KEY30,SKEY30
          MOVE      SP3,PTTRLTYP
          MOVE      SP70,PTTRNHAC
          MOVE      SP70,PTTROPER
          MOVE      SP70,PTTRAUAT
          MOVE      SP70,PTTRCUID
          MOVE      SP70,PTTRLTSC
          MOVE      ACLAIM,PTTRCLTY
          MOVE      SP30,PTTRSPAR
          PACK      PTTRCDAT,CCC,CYY,CMM,CDD
          REP       " 0",PTTRCDAT
          CLOCK     TIME,PTTRCTIM
          MOVE      WBSEUID,PTTRUCID
          UNPACK    SP70,TRCDATE,TRCTIME,PTTRUUID
.
          IF        ASTAT=3
            MATCH     TDATE,DDATE
            IF        @EQUAL
              MATCH     DTIME,TTIME
              GOTO      WRTR1000 IF NOT LESS
            ELSE
              MATCH     TDATE,DDATE
              GOTO      WRTR1000 IF LESS
            ENDIF
          ENDIF
          CALL      WRTRAN2
.
.         Reposition to new trans record
.
WRTR1000  PACK      KEY30,TADMN,TDATE,TTIME,TWARD,TBED
          CALL      RDSTRAN2
          CALL      SVRS0000              * Save transaction variables
          MOVE      SQLDTMOV,CQLDTMOV
WRTR9999  RETURN
+
.******************************************************************************
.         SDAT0000 - Calculate the new stepdown date
.******************************************************************************
SDAT0000  
          MOVE      XDAY,DD
          MOVE      XMON,MM
          MOVE      XYEAR,YY
          MOVE      XCENT,CC
          CALL      DMYCON
.
.         Set the new stepdown from the ending day of daily rate
.
SDAT1000  MOVE      JULDAY,FORM4
          ADD       FORM4A,FORM4
.
          MOVE      FORM4,JULDAY
          MOVE      JULDAY,JWKDAY
          MOVE      JULYR,JWKYER
          MOVE      JULCC,JWKCC
          CALL      JULCON
SDAT9999  RETURN
+
.******************************************************************************
.         STRN0000 - Set/write trans record
.******************************************************************************
STRN0000  MOVE      "01:00:00",TTIME
          MOVE      ZERO,TRATEG
          MOVE      SAVWARD,TWARD
          MOVE      SAVBED,TBED
          MOVE      AADMNO,TADMN
          MOVE      AURNO,TURNO
          MOVE      ZERO,TDISC
          MOVE      ZERO,TALLW
          MOVE      SAVATYP,TATYPE
          MOVE      SAVBTYP,TRBTYP
          MOVE      SAVADOC,TADOCT
          MOVE      SAVCHST,TCHSTAT
          MOVE      ZERO,TEXTRA
          MOVE      ZERO,PTTRLSPT
          MOVE      ZERO,PTTRLSRB
          MOVE      "C",TMOVE
STRN9999  RETURN
+
.******************************************************************************
.         GDAI0000 - Generate Daily rates
.         Parameter - STEPFLAG: 0 no stepdown
.                               1 to generate daily rate
.                               2 to generate additional rate
.                               3 to generate both daily and additional rate
.                   - BDAYS   : needed for DLOW0000 & DHGH0000
.******************************************************************************
GDAI0000  MOVE      ZERO,NOFEE
          MOVE      ZERO,DAYPAT
          MOVE      ZERO,DAYHF
          MOVE      ZERO,ADDPAT
          MOVE      ZERO,ADDHF
          PACK      SAVDES1,SP20,SP20
          PACK      SAVDES2,SP20,SP20
          PACK      CASMXKEY,CASMXKEY,SP70
.
          PACK      KEY5,ANSB,ANST,SAVBTYP
          CALL      RDCODE1
.
.         Admission/return record will generate daily and addition rates
.
          COMPARE   THREE,STEPFLAG
          GOTO      GDAI1000 IF EQUAL
.
.         Check if we are doing daily or additional charge stepdown
.
          COMPARE   ONE,STEPFLAG
          GOTO      GDAI2000 IF NOT EQUAL
.
.         we are doing daily rate stepdown
.
GDAI1000  IF        LOWFLAG = 1
            CALL      DLOW0000           * generate daily fee for lowoutliers
            IF        NOFEE = 0
              MOVE      PTLDEDAY,CURMDAYS  * ending day for low outliers
            ELSE
              MOVE      ZERO,CURMDAYS
            ENDIF
          ELSE
            CALL      DHGH0000           * generate daily fee for highoutliers
            IF        NOFEE = 0
              MOVE      PTHDEDAY,CURMDAYS  * ending day for high outliers
              LOAD      LOWFLAG,PTHDDTYP,TWO,THREE
            ELSE
              MOVE      ZERO,CURMDAYS
              MOVE      ZERO,LOWFLAG
            ENDIF
          ENDIF
.
          MOVE      DAYPAT,TRATEF        * New daily rate
          MOVE      DAYHF,TRATEH
          MOVE      SAVADPT,PTTRADPT
          MOVE      SAVADRB,PTTRADRB
.
          COMPARE   THREE,STEPFLAG         * Check if generating both
          GOTO      GDAI9999 IF NOT EQUAL  * No.
.
.        We are doing additional rate stepdown
.
GDAI2000  CALL      ADIP0000             * generate additional fee
          IF        NOFEE = 0
            MOVE      PTFEEDAY,CUMADAYS    * ending day for addditional rate
          ELSE
            MOVE      ZERO,CUMADAYS
            MOVE      ZERO,NOFEE
            MOVE      ZERO,ADDPAT
            MOVE      ZERO,ADDHF
          ENDIF
.
          MOVE      ADDPAT,PTTRADPT      * new additional rate
          MOVE      ADDHF,PTTRADRB
.
          COMPARE   THREE,STEPFLAG
          GOTO      GDAI9000 IF EQUAL    * both stepdown were generated

          MOVE      SAVDYPT,TRATEF       * restore the previous rate
          MOVE      SAVDYRB,TRATEH
          GOTO      GDAI9999
.
.         Both daily/additional rates had been generated, check which one has
.         changed
.
GDAI9000  MOVE      ZERO,FORM82
          MOVE      PTTRADPT,FORM82
          ADD       PTTRADRB,FORM82
          SUB       SAVADPT,FORM82
          SUB       SAVADRB,FORM82
.
.         If old and new additional rate were the same, set flag to display
.         description of bed fee using the daily rate description
.
          IF        FORM82 = 0
            MOVE      ZERO,FORM82        * check if new additional rate is zero
            MOVE      PTTRADPT,FORM82
            ADD       PTTRADRB,FORM82
          ENDIF
.
GDAI9999  RETURN
.
+
.*******************************************************************************
.         DLUM0000 - Generate lumpsum for daycase
.*******************************************************************************
DLUM0000  MOVE      ZERO,NOFEE
          MOVE      SP70,CASMXKEY
          PACK      LSDESC1,SP20,SP20
          PACK      LSDESC2,SP20,SP20
          OPEN      PATLSDA1,"patlsdaf"   * open Day case file
          PACK      KEY27,CONTRCID,ACLAIM,AFUNDH,PTHFBCAT,CMCODE
          CALL      RDPTLSD1                                          *C-257430
          IF        OVRCD = 1
            PACK      KEY27,CONTRCID,ACLAIM,SP6,SP3,CMCODE
            CALL      RDPTLSD1                                        *C-257430
            IF        OVRCD = 1
              OPEN      CONTROLF,"controlf"
              READ      CONTROLF,TWENTY;*193,PTCNDCLM
              CALL      DCLM0000
              PACK      KEY27,CONTRCID,PTCNDCLM,SP6,SP3,CMCODE
              CALL      RDPTLSD1                                      *C-257430
              IF        OVRCD = 1
                MOVE      ONE,NOFEE
                GOTO      DLUM9999        * no lumpsum charge
              ENDIF
            ENDIF
          ENDIF
.
          MOVE      KEY27,CASMXKEY
          MOVE      PTLSDES1,LSDESC1
          MOVE      PTLSDES2,LSDESC2
.
.         Check for Continuous billing event
.
          MATCH     "1",PTMICONB
          IF        @EQUAL
            MOVE      ZERO,PTLSLREB
            MOVE      ZERO,PTLSLPAT
          ENDIF
.
DLUM9000  MOVE      ZERO,EXIT
DLUM9999  RETURN
+
.*******************************************************************************
.         OLUM0000 - Overnight lumpsum
.*******************************************************************************
OLUM0000  MOVE      ZERO,NOFEE
          MOVE      SP70,CASMXKEY
          PACK      LSDESC1,SP20,SP20
          PACK      LSDESC2,SP20,SP20
          OPEN      PATHLFA1,"pathlfaf"
          PACK      KEY27,CONTRCID,ACLAIM,AFUNDH,PTHFBCAT,CMCODE
          MATCH     SP70,CASMXKEY
          IF        !@EQUAL
            PACK      KEY27,CASMXKEY,CMCODE,SP70
          ENDIF
          CALL      RDPTHLF1                                          *C-257430
          IF        OVRCD = 1
            PACK      KEY27,CONTRCID,ACLAIM,SP6,SP3,CMCODE
            CALL      RDPTHLF1                                        *C-257430
            IF        OVRCD = 1
             OPEN      CONTROLF,"controlf"
             READ      CONTROLF,TWENTY;*193,PTCNDCLM
             CALL      DCLM0000
             PACK      KEY27,CONTRCID,PTCNDCLM,SP6,SP3,CMCODE
             CALL      RDPTHLF1                                       *C-257430
              IF        OVRCD = 1
                MOVE      ZERO,PTHLLREB
                MOVE      ZERO,PTHLLPAT
                MOVE      SP70,PTHLDES1
                MOVE      SP70,PTHLDES2
                MOVE      ZERO,PTHLCOFF
                MOVE      ZERO,PTHLINVB
                MOVE      ZERO,PTHLINVI
                MOVE      ONE,PTHLNINV
                MOVE      ONE,NOFEE
                GOTO      OLUM9999        * no lumpsum charges
              ENDIF
            ENDIF
          ENDIF
          MOVE      KEY27,CASMXKEY
          MOVE      PTHLDES1,LSDESC1
          MOVE      PTHLDES2,LSDESC2
.
.         Check for Continuous billing event
.
          MATCH     "1",PTMICONB
          IF        @EQUAL
            MOVE      ZERO,PTHLLREB
            MOVE      ZERO,PTHLLPAT
          ENDIF
.
OLUM9000  MOVE      ZERO,EXIT
OLUM9999  RETURN
+
.*******************************************************************************
.         DHGH0000 - Generate daily fee for inliers/high outliers
.*******************************************************************************
DHGH0000  MOVE      ZERO,NOFEE
          MOVE      ZERO,COLNUM
          PACK      SAVDES1,SP20,SP20
          OPEN      PATHDFA1,"pathdfaf"
          PACK      SDIM27,CONTRCID,ACLAIM,AFUNDH,PTHFBCAT,CMCODE
          MATCH     SP70,CASMXKEY
          IF        !@EQUAL
            PACK      SDIM27,CASMXKEY,CMCODE,SP70
          ENDIF
.
          MOVE      ZERO,FORM1
DHGH2000  PACK      KEY31,SDIM27,SP10
          CALL      RSPTHDF1                                          *C-257430
DHGH3000  CALL      RKPTHDF1                                          *C-257430
          BRANCH    OVRCD,DHGH4000
          PACK      DIM27,PTHDCNID,PTHDCLMN,PTHDHFND,PTHDTABT,PTHDCASM
          MATCH     DIM27,SDIM27
          GOTO      DHGH7000 IF EQUAL
.
DHGH4000  MATCH     SP70,CASMXKEY
          GOTO      DHGH4200 IF NOT EQUAL
          ADD       ONE,FORM1
          BRANCH    FORM1,DHGH5000,DHGH6000
DHGH4200  MOVE      ONE,NOFEE
          GOTO      DHGH9999
.
DHGH5000  PACK      SDIM27,CONTRCID,ACLAIM,SP6,SP3,CMCODE
          GOTO      DHGH2000
.
DHGH6000  OPEN      CONTROLF,"controlf"
          READ      CONTROLF,TWENTY;*193,PTCNDCLM
          CALL      DCLM0000
          PACK      SDIM27,CONTRCID,PTCNDCLM,SP6,SP3,CMCODE
          GOTO      DHGH2000
.
DHGH7000  ADD       ONE,COLNUM
.
.....     COMPARE   BDAYS,PTHDEDAY        * check bed days vs end-day   D-47732
.....     GOTO      DHGH3000 IF LESS      * get next rate               D-47732
          COMPARE   PTHDEDAY,BDAYS        * check end-day vs bed-days  *I-47732
          GOTO      DHGH3000 IF NOT LESS                               *I-47732
.
          MOVE      PTHDDREB,DAYHF
          MOVE      PTHDDPAT,DAYPAT
          MOVE      PTHDEDAY,DAYEND       * ending day of daily charge
          MOVE      PTHDDES1,SAVDES1
          GOTO      DHGH9999
.
DHGH9999  RETURN
+
.*******************************************************************************
.           DLOW0000 - Generate daily charge for low outliers
.*******************************************************************************
DLOW0000  MOVE      ZERO,NOFEE
          PACK      SAVDES1,SP20,SP20
          OPEN      PATLDFA1,"patldfaf"
          PACK      SDIM27,CONTRCID,ACLAIM,AFUNDH,PTHFBCAT,CMCODE
          PACK      CASMXKEY,CASMXKEY,SP70
          MATCH     SP70,CASMXKEY
          IF        !@EQUAL
            PACK      SDIM27,CASMXKEY,CMCODE,SP70
          ENDIF
.
          MOVE      ZERO,FORM1
DLOW2000  PACK      KEY31,SDIM27,SP10
          CALL      RSPTLDF1
DLOW3000  CALL      RKPTLDF1
          BRANCH    OVRCD,DLOW4000
          PACK      DIM27,PTLDCNID,PTLDCLMN,PTLDHFND,PTLDTABT,PTLDCASM
          MATCH     DIM27,SDIM27
          GOTO      DLOW7000 IF EQUAL
.
DLOW4000  MATCH     SP70,CASMXKEY
          GOTO      DLOW4200 IF NOT EQUAL
          ADD       ONE,FORM1
          BRANCH    FORM1,DLOW5000,DLOW6000
DLOW4200  MOVE      ONE,NOFEE
          GOTO      DLOW9999
.
DLOW5000  PACK      SDIM27,CONTRCID,ACLAIM,SP6,SP3,CMCODE
          GOTO      DLOW2000
.
DLOW6000  OPEN      CONTROLF,"controlf"
          READ      CONTROLF,TWENTY;*193,PTCNDCLM
          CALL      DCLM0000
          PACK      SDIM27,CONTRCID,PTCNDCLM,SP6,SP3,CMCODE
          GOTO      DLOW2000
.
....7000  COMPARE   BDAYS,PTLDEDAY        * check bed days vs endday    D-47732
....      GOTO      DLOW3000 IF LESS      * get next rate               D-47732
DLOW7000  COMPARE   PTLDEDAY,BDAYS        * check end-day vs bed-days  *I-47732
          GOTO      DLOW3000 IF NOT LESS  * get next rate              *I-47732
.
          MOVE      PTLDDREB,DAYHF
          MOVE      PTLDDPAT,DAYPAT
          MOVE      PTLDEDAY,DAYEND       * ending day of daily charge
          MOVE      PTLDDES1,SAVDES1
          GOTO      DLOW9999
.
DLOW9999  RETURN
+
.*******************************************************************************
.           ADIP0000 - Generate additional charge for overnight
.*******************************************************************************
ADIP0000  MOVE      ZERO,NOFEE
          MOVE      SP70,SAVMSGRP
          PACK      SAVDES2,SP20,SP20
          MOVE      ZERO,SAVFEDAY
          PROC      PATDBTYP
....      ADD       NBRDAYS,BTDAYS    * days for current bed type       D-90205
.
          MOVE      ZERO,BTDAYS                                        *I-90205
.
.         If we are generating additional rate, add one to bed days    *I-90205
.         except that if the End day of additional charge is equal to one
.
          IF        STEPFLAG=3 | STEPFLAG=2
            IF        NBRDAYS=0 & SAVFEDAY=1
              GOTO      ADIP1000
            ENDIF
            MOVE      ONE,BTDAYS
          ENDIF
.
ADIP1000  ADD       NBRDAYS,BTDAYS    * days for current bed type
.
          OPEN      PATAFEA1,"patafeaf"
          PACK      SDIM30,CONTRCID,ACLAIM,AFUNDH,PTHFBCAT,CMCODE,SAVBTYP,SP10
          PACK      CASMXKEY,CASMXKEY,SP70
          MATCH     SP70,CASMXKEY
          IF        !@EQUAL
            PACK      SDIM30,CASMXKEY,CMCODE,SAVBTYP,SP10
          ENDIF
.
          MOVE      ZERO,FORM1
ADIP2000  PACK      KEY34,SDIM30,SP10
          CALL      RSPTAFE1
ADIP3000  CALL      RKPTAFE1
          BRANCH    OVRCD,ADIP4000        * no additional charge
.
          PACK      DIM30,PTFECNID,PTFECLMN,PTFEHFND,PTFETABT,PTFECASM,PTFEBTYP
          MATCH     DIM30,SDIM30
          GOTO      ADIP7000 IF EQUAL
.
ADIP4000  MATCH     SP70,CASMXKEY
          GOTO      ADIP4200 IF NOT EQUAL
          ADD       ONE,FORM1
          BRANCH    FORM1,ADIP5000,ADIP6000  * try no hf, try no claim code
ADIP4200  MOVE      ONE,NOFEE
          GOTO      ADIP9999                 * no addition charge
.
.         Try with no health fund
.
ADIP5000  PACK      SDIM30,CONTRCID,ACLAIM,SP6,SP3,CMCODE,SAVBTYP,SP10
          GOTO      ADIP2000
.
.         Try with no claim code
.
ADIP6000  OPEN      CONTROLF,"controlf"
          READ      CONTROLF,TWENTY;*193,PTCNDCLM
          CALL      DCLM0000
          PACK      SDIM30,CONTRCID,PTCNDCLM,SP6,SP3,CMCODE,SAVBTYP,SP10
          GOTO      ADIP2000
.
ADIP7000  COMPARE   BTDAYS,PTFEEDAY       * check bed days against
          GOTO      ADIP3000 IF LESS      * ending day
.
          MOVE      PTFEDREB,ADDHF
          MOVE      PTFEDPAT,ADDPAT
          MOVE      PTFEEDAY,ADDEND       * Ending day of additional charge
          MOVE      PTFEDES1,SAVDES2
          SUB       NBRDAYS,BTDAYS        * return original for accom.desc.
          MOVE      PTFEFIGR,SAVMSGRP
          GOTO      ADIP9999
.
ADIP9999  RETURN
+
.*******************************************************************************
.         GTAB0000 - Get the health fund table type
.*******************************************************************************
GTAB0000  MOVE      SP10,PTHFBCAT           * Initialise table type
          OPEN      PATFN1A1,"patfn1af"
          PACK      KEY14,AFUNDH,AFNDTB,SP20
          CALL      RDFUND1                 * read health fund file 
.
GTAB9000  MOVE      ZERO,EXIT
GTAB9999  RETURN
+
.*******************************************************************************
.         ADID0000 - Generate additional charge for sameday
.*******************************************************************************
ADID0000  PACK      SAVDES2,SP20,SP20
          MOVE      SP70,SAVMSGRP
          MOVE      ZERO,NOFEE
          OPEN      PATASDA1,"patasdaf"   * open additional charge file
          PACK      KEY30,CONTRCID,ACLAIM,AFUNDH,PTHFBCAT,CMCODE,SAVBTYP
          PACK      CASMXKEY,CASMXKEY,SP70
          MATCH     SP70,CASMXKEY
          IF        !@EQUAL
            PACK      KEY30,CASMXKEY,CMCODE,SAVBTYP
          ENDIF
          CALL      RDPTASD1
          IF        OVRCD = 1
            MATCH     SP70,CASMXKEY
            GOTO      ADID8000 IF NOT EQUAL
            PACK      KEY30,CONTRCID,ACLAIM,SP6,SP3,CMCODE,SAVBTYP
            CALL      RDPTASD1
            IF        OVRCD = 1
              OPEN      CONTROLF,"controlf"
              READ      CONTROLF,TWENTY;*193,PTCNDCLM
              CALL      DCLM0000
              PACK      KEY30,CONTRCID,PTCNDCLM,SP6,SP3,CMCODE,SAVBTYP
              CALL      RDPTASD1
              IF        OVRCD = 1
ADID8000        MOVE      ONE,NOFEE
                GOTO      ADID9999
              ENDIF
            ENDIF
          ENDIF
.
          MOVE      PTADDES1,SAVDES2
          MOVE      PTADFIGR,SAVMSGRP
ADID9999  RETURN
+
.******************************************************************************
.        Routine to get the bed fee rate for Unqualified days
.******************************************************************************
PDIM0000  COMPARE   ZERO,CFEETYP
          GOTO      PDIM9999 IF NOT EQUAL
.
          MATCH     "U",SQLDTMOV
          IF        !@EQUAL
            MOVE      CONTRCID,CMXCONTR        * Save casepayment contract id
          ENDIF
          MOVE      ZERO,PTTRADPT
          MOVE      ZERO,PTTRADRB
          MOVE      ZERO,TRATEF
          MOVE      ZERO,TRATEH
.
          COMPARE   THREE,CNTRCEFR
          GOTO      PDIM9999 IF EQUAL        * Invalid Contract Effective date
.
          MOVE      TOTDAYS,FORM4
          MOVE      ONE,TOTDAYS             * always default to column one
          MOVE      TDATE,CEFFDATE          * Set date for 'As at date'
          LOAD      CEFFDATE,CNTRCEFR,ADATE,DDATE
          PACK      KEY27 WITH ACLAIM,AFUNDH,AFNDTB,TATYPE,TRBTYP
          CALL      GETBFEES
          IF        EXIT=0
            MOVE      BFPAT,TRATEF
            MOVE      BFHF,TRATEH
          ENDIF
          MOVE      FORM4,TOTDAYS
          MOVE      ZERO,EXIT
PDIM9999  RETURN
+
          INC       PATDBTYP
          INC       PATDATYP
.
