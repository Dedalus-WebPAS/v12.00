.***************************************************************************
.* Program       : IBAADT90                                                *
.* Desc          : MBS Items and Procedure Upload Program                  *
.***************************************************************************
.* Date          : 07/01/2002                                              *
.* Author        : Jeni Tan                                                *
.* Modifications :                                                         *
.*       V11.00.02 28/04/2020  J.Tan          TSK 0838262                  *
.*                 Mod to populate Effective dates from load file          *
.*       V11.00.01 04/03/2020  J.Tan          TSK 0838262                  *
.*                 Added Effective from and to date to MBS Item file       *
.*       V10.12.01 08/02/2018  Richa Phogat  TSK 0851733                   *
.*                 Updated VALR0000 to move ITEMDESC to PTITDESC           *
.*       V10.08.01 01/08/2016  J.Tan         TSK 0813090                   *
.*                 Added a new option - Upload National Theatre Banding    *
.*       V9.09.01  05/09/2007  Jill Habasque CAR 146848                    *
.*                 Fixed newitemn reads and record type 10 fields          *
.*       V9.02.03  14/04/2003  Lina Vo   CAR37408                          *
.*                 Added HDP code to upload file                           *
.*                 Added Error report to print codes with blank HDP        *
.*       V9.02.02  Dean Cramer  srfs 22371, 34142 & 34160                  *
.*                 Initialise PTITDCSC                                     *
.*       V9.02.01  J.Tan                                                   *
.*                 Mods to remove saving watproaf                          *
.---------------------------------------------------------------------------
.
          INC       STD001FD
.
. -------------------------
. FILE DESCRIPTION INCLUDES
. -------------------------
.
          INC       PATITMFD/INC     * Item File
          INC       WATPROFD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
.
. -------------------------
. LOCAL VARIABLE DEFINITION
. -------------------------
UPLDFILE  FILE      ASCII,FIXED=256
XXITEM    DIM       9
XXDESC    DIM       50
XXSFEE    FORM      5.2
XXEFDT    DIM       8
XXETDT    DIM       8
UPLOADFL  DIM       8    * Upload File
FNAMEI    DIM       150
.
XFLD0001  DIM       30
XFLD0002  DIM       30
XFLD0003  DIM       30
XFLD0004  DIM       30
XFLD0005  DIM       40
.
ERRFLAG   FORM      1
ERRNUMB   FORM      6
KCERFLAG  FORM      1
KSCLFLAG  FORM      1
KDESFLAG  FORM      1
RECNUMB   FORM      6
RECUPDT   FORM      6
USERID    DIM       10
PATHNAME  DIM       500
VALFDATE  DIM       8
VALTDATE  DIM       8
WORKDATE  DATE      8
.
CMDLINE   DIM       80
RECFLAG   FORM      1
COUNT     FORM      5
UPDCNT    FORM      6
DSPCNT    FORM      6                       * Display counter
ERRCNT    FORM      6                       * Error count
ERRMSG    DIM       46                      * Error message
DIM8      DIM       8
.
.RECORD 10 - Item details record
.Field    Type    Size    Position     Description
.-----    ----    ----    --------     -----------------------------------
RECTYPE   DIM       2      1          * Record Type 10
ITEMCODE  DIM       5      3          * Item Code
SUBITEM   DIM       3      8         * Sub item code
STRDATE   DIM      10     11         * Date item commenced
ENDDATE   DIM      10     21         * Date item ceased
ITMCATG   DIM       3     31         * Category item relates to
ITMGRP    DIM       3     34         * Group item relates to
ITMSGRP   DIM       3     37         * Subgroup item relates to
ITMTYPE   DIM       1     40         * Item type S=Standard, P=Procedent
.                                                 D=Ministerial Determination
FEETYPE   DIM       1     41         * Item Fee type N=Normal fee,
.                                                     D=Derived fee
.PROVTYPE  DIM       3     42         * Provider type/category applicable 
.NEWITEM   DIM       1     45         * New Item indicator Y=Yes, N=No
.ITEMCHG   DIM       1     46         * Item Change        Y=Yes, N=No
.ANAESCHG  DIM       1     47         * Anaesthetic Change Y=Yes, N=No
.DESCCHG   DIM       1     48         * Item Description Change Y=Yes, N=No
.FEECHG    DIM       1     49         * Fee Change         Y=Yes, N=No
.BENIND    DIM       1     50         * Benefit indicator A,B,C,D,E
.BENSTRT   DIM      10     51         * Benefit start date
HDPECODE  DIM       4     50         * HDP Equivalent Code                    

.Record 20 - Fee details record
.This record must be present if the item is a normal fee item (fee type=N)
.Field    Type    Size    Position     Description
.-----    ----    ----    --------     -----------------------------------
.RECTYPE  DIM       2      1         * Record Type 20
.STRDATE  DIM      10      3         * Date current schedule fee commenced
SCHFEE    DIM       8     13         * Schedule fee
.BENIFIT1 FORM      5.2   21         * 75% benifit
.BENIFIT2 FORM      5.2   29         * 85% benifit
.BENIFIT3 FORM      5.2   36         * 100% benifit
.
.Record 30 - Derived Fee details record
.This record must be present if the item is a derived fee item (fee type=D)
.Field    Type    Size    Position     Description
.-----    ----    ----    --------     -----------------------------------
.RECTYPE  DIM       2      1         * Record Type 30
.STRDATE  DIM      10      3         * Date current derived fee commenced
.ITMDESC  DIM      80     13         * Derived fee desciption
.
.Record 40 - Anaesthetic details record (optional)
.Field    Type    Size    Position     Description
.-----    ----    ----    --------     -----------------------------------
.RECTYPE  DIM       2      1         * Record Type 40
.ANESIND  DIM       8      3         * Indicates that item attracts anaesthetic
.
.Record 50 - Description details record
.Field    Type    Size    Position     Description
.-----    ----    ----    --------     -----------------------------------
.RECTYPE  DIM       2      1         * Record Type 50
.STRDATE  DIM      10      3         * Date current description commenced
ITMDESC  DIM      80     13         * Item description
.
. Layout for National Theatre Band Upload file
UTBNDTXT  FILE       HL7, FIXED=1000        * Upload file for bed fees
.
.Field    Type    Size    Position     Description
.-----    ----    ----    --------     -----------------------------------
MBSICODE   DIM       9      1          * Item Code
TNATBAND   DIM       3     10          * National Band
ICLSTYPE   DIM       3     13          * Suggested Class.(Cat A)
TCERTYPE   DIM       3     16          * Type of Certificate (Cat Cr)
ITEMDESC   DIM      40     19          * Item Description
.EOR                       59
.
PRGID     INIT      "IBAADT90"
PRGNAM    INIT      "CMBS/Procedure Upload Program"
VERSION   INIT      "V12.00.00"
+
.****************************************************************************
.*                            MAIN0000                                      *
.*                      Controlling Logic (Mainline code)                   *
.****************************************************************************
MAIN0000  CALL      INIT0000 
.
          MOVE      ZERO,OPTION
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = CMBS Item":
                    *P1:6,*V2LON,TWO,*HOFF," = Waiting List Procedures":
                    *P1:7,*V2LON,THREE,*HOFF," = National Theatre Band"
.
MAIN1000  KEYIN     *P1:9,*EF,"Option : ",*V2LON,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      MAIN9999 IF EQUAL
.
          BRANCH    OPTION,MAIN2000,MAIN2000,MAIN3000
          BEEP
          GOTO      MAIN0000
.
MAIN2000  KEYIN     *P1:12,*EF,"Upload File Name   : ",UPLOADFL
          ENDSET    UPLOADFL
          APPEND    SP10,UPLOADFL
          RESET     UPLOADFL
          MATCH     SP8,UPLOADFL
          GOTO      MAIN1000 IF EQUAL
. 
          CALL      PREP0000
          BRANCH    EXIT,MAIN1000
          GOTO      MAIN7000
.
MAIN3000  MOVE      "National Theatre Band Upload Program",PRGNAM
          PACK      KEY60,PRGNAM,SP20
          CALL      DISPLIN2
.
          CALL      KASC0000
          BRANCH    EXIT,MAIN1000
.
          CALL      DFLD0000                * Display fields
.
          MOVE      "12",CVERT
          CALL      KINC0000                * Include Certificates?
          MOVE      FORM1,KCERFLAG
.
          MOVE      "13",CVERT
          CALL      KINC0000                * Include Suggested Class.?
          MOVE      FORM1,KSCLFLAG
.
          MOVE      "14",CVERT
          CALL      KINC0000                * Include Description?
          MOVE      FORM1,KDESFLAG
.
          CALL      KUSR0000                * Keyin user id
          BRANCH    EXIT,MAIN1000
.
          CALL      KPTH0000                * Keyin pathname
          BRANCH    EXIT,MAIN1000
.
MAIN7000  CALL      CONTQST       * Ok to continue ?
          BRANCH    CEXIT,MAIN8000,MAIN2000,MAIN9999
          GOTO      MAIN9999
.
MAIN8000
.         IF        OPTION=2
.           DISPLAY   *P1:24,*EL,"Saving watproaf. Please Wait .... ",*W;
.           EXECUTE   "cp `ldat watproaf.dat` savproaf.dat",TASKID
.           EXECUTE   "cp `ldat watproaf.idx` savproaf.idx",TASKID
.         ENDIF
.
          IF        OPTION=3
            CALL      PRHD0000      * Print header
            CALL      TBND0000      * Generate National Theatre Band
          ELSE
            CALL      READ0000      * Read text file & process information 
          ENDIF
          GOTO      MAIN9999
.
MAIN9999  CHAIN     PGM           * chain back to program
+
.******************************************************************************
.*                                 INIT0000                                   *
.*                     Initialize Variables & Open Files                      *
.******************************************************************************
INIT0000  CALL      DISPHEAD                * Display screen heading
.
          CALL      IBACLOCK
.
          DISPLAY   *P56:24,"Opening patcodes";
          OPEN      PATCODE1,"patcodes"
.
INIT9999  RETURN
+
.******************************************************************************
.*                            KASC0000                  called by:MAIN0000    *
.*                            Keyin ASCI file                                 *
.******************************************************************************
KASC0000  MOVE      ZERO,EXIT
          PACK      FNAMEI WITH SP70,SP70,SP70
.
          DISPLAY   *P19:9,*EF,"National Theatre Banding Load File";
.
          KEYIN     *P1:10,*EL,"Keyin Path & File Name : ",*V2LON,FNAMEI
.
          PACK      FNAMEI,FNAMEI,SP70,SP70,SP70
.
          MATCH     SP70,FNAMEI
          GOTO      KASC9000 IF EQUAL
.
          SCAN      ".txt",FNAMEI
          IF        !@EQUAL
            SQUEEZE   FNAMEI
            ENDSET    FNAMEI
            APPEND    ".txt",FNAMEI      * add ".txt" if there is a path
            APPEND    SP70,FNAMEI
            RESET     FNAMEI
          ENDIF
          RESET     FNAMEI
.
          DISPLAY   *P26:10,*V2LON,*EL,FNAMEI;
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      UTBNDTXT,FNAMEI
          TRAPCLR   IO
          BRANCH    OVRCD,KASC8000
.
          CALL      EXUS0000             * Execute us1 command
          MOVE      ZERO,EXIT
          GOTO      KASC9999
.
KASC8000  DISPLAY   *P1:24,*EL,*B,"File not found.  ";
          CALL      HITENTER
          GOTO      KASC0000
.
KASC9000  MOVE      ONE,EXIT
.
KASC9999  RETURN
+
.******************************************************************************
.*        execute us1 script to backup file
.******************************************************************************
EXUS0000  CLEAR     CMDLINE
          APPEND    "ibaadt90.us1 ",CMDLINE
          APPEND    FNAMEI,CMDLINE
          APPEND    SP70,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
EXUS9999  RETURN
+
.**************************************************************************
.                       Dispay fields
.**************************************************************************
DFLD0000  DISPLAY   *P1:12,*EL,"Include Certificate    :":
                    *P1:13,*EL,"Include Suggested Class:":
                    *P1:14,*EL,"Include Description    :":
                    *P1:15,*EL,"User ID                :":
                    *P1:16,*EL,"Path name              :"
DFLD9999  RETURN
+
.**************************************************************************
.                       Keyin Yes/No Includes field
.**************************************************************************
KINC0000  MOVE      SP70,KEY1
          KEYIN     *P26:CVERT,*EL,*V2LON,*RV,KEY1;
.
          REP       UPPLOW,KEY1
          MATCH     "Y",KEY1
          GOTO      KINC1000 IF EQUAL
.
          MATCH     "N",KEY1
          GOTO      KINC1000 IF EQUAL
.
          DISPLAY   *P1:24,*EL,"Must be Y or N";
          BEEP
          GOTO      KINC0000
.
KINC1000  REP       "Y1N2",KEY1
          MOVE      ZERO,FORM1
          MOVE      KEY1,FORM1
.
          MOVE      DNO,KEY3
          LOAD      KEY3,FORM1,DYES,DNO
          DISPLAY   *P26:CVERT,*EL,*V2LON,KEY3;
          DISPLAY   *P1:24,*EL;
KINC9999  RETURN
+
.******************************************************************************
.*                                  KUSR0000                                  *
.*                     Keyin user id                                          *
.******************************************************************************
KUSR0000  KEYIN     *P26:15,*EL,*V2LON,USERID;
          PACK      USERID,USERID,SP70
          MATCH     SP70,USERID
          GOTO      KUSR9500 IF EQUAL
.
          MOVE      ZERO,EXIT
          GOTO      KUSR9999
.
KUSR9500  MOVE      ONE,EXIT
KUSR9999  RETURN
+
.******************************************************************************
.*                                  KPTH0000                                  *
.*                     Keyin path name                                        *
.******************************************************************************
KPTH0000  PACK      PATHNAME,SP70,SP70,SP70
          KEYIN     *P26:16,*EL,*V2LON,PATHNAME;
          ENDSET    PATHNAME
          APPEND    SP70,PATHNAME
          APPEND    SP70,PATHNAME
          APPEND    SP70,PATHNAME
          RESET     PATHNAME
.
          MATCH     SP70,PATHNAME
          GOTO      KPTH9500 IF EQUAL
.
          MOVE      ZERO,EXIT
          GOTO      KPTH9999
.
KPTH9500  MOVE      ONE,EXIT
KPTH9999  RETURN
+
.**************************************************************************
.*                            PREP0000                  called by:MAIN0000
.**************************************************************************
PREP0000  MOVE      ZERO,EXIT 
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      UPLDFILE,UPLOADFL  
          TRAPCLR   IO
          BRANCH    OVRCD,PREP9000       * File does not exist
.
          IF        OPTION =1 | OPTION=3
            TRAP      OVERCOND IF IO
            OPEN      PATITEM1,"patitemn"
            TRAPCLR   IO
            BRANCH    OVRCD,PREP9100 
          ELSE
            TRAP      OVERCOND IF IO
            OPEN      WATPROA1,"watproaf"
            TRAPCLR   IO
            BRANCH    OVRCD,PREP9200 
          ENDIF
.
          DISPLAY   *P56:24,"Opening controlf"
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,EIGHTY;*250,PTCNHDPS
.
          GOTO      PREP9999
.
PREP9000  DISPLAY   *P1:24,*EL,"Upload file not found:",UPLOADFL;
          CALL      HITENTER
          MOVE      ONE,EXIT 
          GOTO      PREP9999
.
PREP9100  DISPLAY   *P1:24,*EL,"Item file not found";
.         CALL      HITENTER
          MOVE      ONE,EXIT 
          GOTO      PREP9999
.
PREP9200  DISPLAY   *P1:24,*EL,"W/L Procedure (watprocaf) file not found";
.         CALL      HITENTER
          MOVE      ONE,EXIT 
          GOTO      PREP9999
.
PREP9999  RETURN
.**************************************************************************
.*                               READ0000             Called by: MAIN0000 *
.*   Read in and save variables. The Process information and save it to   *
.*   the appropriate files.
.**************************************************************************
READ0000  MOVE      ZERO,RECFLAG       * Initialise record flag
          MOVE      ZERO,ERRCNT        * Reset the error counter
          MOVE      ZERO,DSPCNT
          MOVE      ZERO,UPDCNT
          CALL      IBACLOCK
          CALL      HEAD0000           * Print report header
          DISPLAY   *P1:24,*EL,"Item Code : ";
          CALL      RDUPLOAD           * read first record
          GOTO      READ9999 IF OVER   * end of file
.
.         First record must be rectype=10 and fee type=N
.
READ1000  CALL      CHKREC00           * check record type
          GOTO      READ9999 IF OVER
.
          MOVE      ONE,RECFLAG        * found a first record of normal fee
          MOVE      ZERO,COUNT
          PACK      XXITEM,ITEMCODE,SP70 * save item code
.
          UNPACK    STRDATE,XDAY,KEY1,XMON,D1,KEY4
          PACK      XXEFDT,KEY4,XMON,XDAY,SP70   * Effective from date
          REP       " 0",XXEFDT
          MATCH     SP70,ENDDATE
          IF        !@EQUAL
            UNPACK    ENDDATE,XDAY,KEY1,XMON,D1,KEY4
            PACK      XXETDT,KEY4,XMON,XDAY,SP70   * Effective to date
            REP       " 0",XXETDT
          ENDIF
.
READ2000  CALL      RDUPLOAD           * read next record of the item code
          GOTO      READ8000 IF OVER   * end of file
.
          MATCH     "10",RECTYPE       * is it a new record ?
          IF        @EQUAL
            CALL      UPDREC00         * Update/write record to file
            GOTO      READ1000
          ENDIF
.
          MATCH     "20",RECTYPE
          IF        @EQUAL
            UNPACK    KEY99,STRDATE,SCHFEE
            MOVE      SCHFEE,XXSFEE    * save schedule fee
          ENDIF
.
          MATCH     "50",RECTYPE
          IF        @EQUAL
            UNPACK    KEY99,STRDATE,ITMDESC
            IF        COUNT=0
              PACK      XXDESC,ITMDESC   * save item description
              CALL      FNDEND00         * find end of string
            ELSE
              APPEND    SP1,XXDESC
              APPEND    ITMDESC,XXDESC
            ENDIF
            MOVE      ONE,COUNT
          ENDIF
.
          GOTO      READ2000
.
READ8000  CALL      UPDREC00         * Update/write record to file
          CALL      TAIL0000
.
READ9999  RETURN
.
.**************************************************************************
.          Subroutine to find the end of the string in Description
.**************************************************************************
FNDEND00  RESET     XXDESC,80
FNDEND10  CMATCH    SP1,XXDESC
          GOTO      FNDEND99 IF NOT EQUAL
          BUMP      XXDESC,-1
          GOTO      FNDEND10 IF NOT EOS
          RESET     XXDESC
FNDEND99  RETURN
.
.**************************************************************************
.*                                CLRVAR00             called by:READ0000 *
.**************************************************************************
CLRVAR00  MOVE      SP70,RECTYPE
          MOVE      SP70,ITEMCODE
          MOVE      SP70,FEETYPE
          MOVE      ZERO,SCHFEE
          PACK      ITMDESC,SP70,SP70
CLRVAR99  RETURN
+
.**************************************************************************
.*                                CHKREC00             called by:READ0000 *
.*     Read the next item record (normal fee) which has record type="10"  *
.**************************************************************************
CHKREC00  MOVE      ZERO,ERRFLAG
          MATCH     "10",RECTYPE
          GOTO      CHKREC20 IF NOT EQUAL      * not item details record
.
          UNPACK    KEY99,ITEMCODE,SUBITEM,STRDATE,ENDDATE,ITMCATG:
                           ITMGRP,ITMSGRP,ITMTYPE,FEETYPE,DIM19,HDPECODE
          MATCH     "N",FEETYPE
          GOTO      CHKREC20 IF NOT EQUAL      * not normal fee
.
          DISPLAY   *P20:24,*EL,*V2LON,ITEMCODE;
          MOVE      SP10,XXITEM    
          MOVE      ZERO,XXSFEE
          PACK      XXDESC,SP70,SP70
          UNPACK    SP70,XXEFDT,XXETDT
          MOVE      ZERO,EXIT
          PACK      HDPECODE,HDPECODE,SP70
.
          IF        OPTION=1
            MATCH     SP70,STRDATE
            IF        @EQUAL
              MOVE      "Blank Effective Start Date",ERRMSG
              CALL      ERRRPT00
              MOVE      ONE,ERRFLAG
            ELSE
              UNPACK    STRDATE,XDAY,KEY1,XMON,D1,KEY4
              PACK      KEY8,KEY4,XMON,XDAY,SP70   * Effective from date
              REP       " 0",KEY8
.
              PACK      KEY9,ITEMCODE,SP70
              PACK      KEY17,KEY9,KEY8,SP70
              CALL      VIDT0000            * Validate effective dates
              IF        EXIT=1
                MOVE      "Invalid Effective From Date (Overlap).",ERRMSG
                CALL      ERRRPT00
                MOVE      ONE,ERRFLAG
              ENDIF
            ENDIF
          ENDIF
.
          IF        OPTION=2 & PTCNHDPS=3
            MATCH     SP70,HDPECODE
            IF        @EQUAL
              MOVE      "Blank Procedure HDP Equivalent",ERRMSG
              CALL      ERRRPT00
            ENDIF
          ENDIF
.
          ADD       ONE,DSPCNT              * Increment the record counter
.
          GOTO      CHKREC99
.
CHKREC20  CALL      RDUPLOAD                   * read next record
          GOTO      CHKREC00 IF NOT OVER
.
CHKREC90  MOVE      ONE,EXIT
CHKREC99  RETURN
+
.**************************************************************************
.*                               UPDREC00             Called by: READ0000 *
.*        Update/Write record to patitem or watprocaf file                *
.**************************************************************************
UPDREC00  COMPARE   ZERO,RECFLAG
          GOTO      UPDREC99 IF EQUAL      * no record to update
.
          IF        OPTION=1
            BRANCH    ERRFLAG,UPDREC99
          ENDIF
.
          APPEND    SP70,XXDESC
          RESET     XXDESC
.
          MOVE      XXITEM,KEY9
          BRANCH    OPTION,UPDREC60       * update/write CMBS Item file
.
.         W/L Procedure file
.
          CALL      RDPROA1
          IF        OVRCD=0
            PACK      WPDESC,XXDESC,SP70  * Update description
            CALL      UPPROA1
          ELSE
            MOVE      XXITEM,WPCODE       * Procedure Code
            PACK      WPDESC,XXDESC,SP70  * Description
            MOVE      ZERO,WPTIME         * Procedure Time
            MOVE      ZERO,WPESTLS        * Estimated Length of Stay in Hosp
            MOVE      SP70,WPGRP          * Procedure Group (Category WG)
            MOVE      SP70,WPRHAT         * RHA Threshold Level          
            MOVE      SP70,WPCHET         * CHE Threshold Level          
            MOVE      HDPECODE,WTWPHDPE   * Procedure code HDP Equivalent
            MOVE      SP70,WTWPDRGC       * DRG code
            MOVE      ZERO,WTWPACTV       * Status (active)
            MOVE      SP70,WPTMASPAR   
            CALL      WRPROA1
          ENDIF
          GOTO      UPDREC90
.
.         CMBS Item file
.
UPDREC60  PACK      KEY17,XXITEM,XXEFDT,SP70
          CALL      RDITEM1
          IF        OVRCD=0
            PACK      IDESC,XXDESC,SP70   * Update description
            MOVE      XXEFDT,PTITEFDT     * Effective fromdate
            MOVE      XXETDT,PTITETDT     * Effective todate
            MOVE      XXSFEE,QIAMT        * Update scheduled fee
.
            CALL      IBACLOCK
            PACK      PTITUDAT,CCC,CYY,CMM,CDD
            REP       " 0",PTITUDAT           * date record updated
            MOVE      CTIMEIS,PTITUTIM        * time record updated
            MOVE      USERID,PTITUUID         * web user updated
            CALL      UPITEM1
          ELSE
            CALL      CLRMBS00
            MOVE      XXITEM,ITEMNO       * ITEM NUMBER
            MOVE      XXEFDT,PTITEFDT     * Effective fromdate
            MOVE      XXETDT,PTITETDT     * Effective todate
            PACK      IDESC,XXDESC,SP70   * ITEM DESCRIPTION
            MOVE      XXSFEE,QIAMT        * MBS AMOUNT    
            CALL      IBACLOCK
            PACK      PTITCDAT,CCC,CYY,CMM,CDD
            REP       " 0",PTITCDAT           * date record updated
            MOVE      CTIMEIS,PTITCTIM        * time record updated
            MOVE      USERID,PTITCUID         * web user updated
            CALL      WRITEM1
.
            CALL      EDAT0000       * Auto populate prev item end date
          ENDIF
          ADD       ONE,UPDCNT       * Increment the record counter
.
UPDREC90  MOVE      ZERO,RECFLAG
UPDREC99  RETURN
+
.-----------------------------------------------------------------
. Auto populate the previous misc items effective to date if blank
.-----------------------------------------------------------------
EDAT0000  PACK      KEY17,XXITEM,XXEFDT,SP70
          CALL      RDSITEM1
          CALL      RDPITEM1
          BRANCH    OVRCD,EDAT9999
.
          MATCH     XXITEM,ITEMNO
          GOTO      EDAT9999 IF NOT EQUAL
.
          MATCH     SP70,PTITETDT                * Exit if effective to date is
          GOTO      EDAT9999 IF NOT EQUAL        * already populated
.
          MOVE      XXEFDT,WORKDATE
          SUB       ONE,WORKDATE
          MOVE      WORKDATE,PTITETDT
.
          CALL      IBACLOCK
          PACK      PTITUDAT,CCC,CYY,CMM,CDD
          REP       " 0",PTITUDAT           * date record updated
          MOVE      CTIMEIS,PTITUTIM        * time record updated
          MOVE      USERID,PTITUUID         * web user updated
.
          CALL      UPITEM1
.
EDAT9999  RETURN
+
.**************************************************************************
.*                               ERRRPT00             Called by: CHKREC00 *
.*        Write error report                                              *
.**************************************************************************
ERRRPT00  COMPARE   CLNO,FIFTY8
          CALL      HEAD0000 IF LESS        * Print report header
.
          PACK      ERRMSG,ERRMSG,SP70
          PRINT     *1,"|  ",ITEMCODE:
                    "   | ",STRDATE," |",ERRMSG,*80,"|"
          ADD       ONE,CLNO
          ADD       ONE,ERRCNT              * Increment the error counter
          PACK      ERRMSG,SP70 
.
ERRRPT90  MOVE      ZERO,EXIT
ERRRPT99  RETURN
.******************************************************************************
.*                                  HEAD0000              Called by: ERRRPT00 *
.*                             Print Report Header                            *
.******************************************************************************
HEAD0000  CALL      HEAD80                  * Print report header
          PRINT     *N;
          PRINT     *35,"Error Report  "
.
          CALL      UND80
.
          PRINT     *1,"| Proc Code| Start Date ":
                    "|Error Message",*80,"|"
          CALL      UND80
          ADD       "2",CLNO
.
HEAD9000  MOVE      ZERO,EXIT
HEAD9999  RETURN
+
.******************************************************************************
.*                                  TAIL0000              Called by: READ0000 *
.*                              Print Report Tail                             *
.******************************************************************************
TAIL0000  CALL      UND80
          PRINT     *N:
                    *1,"Number of Records Uploaded     : ",DSPCNT,*N;
.
          IF        OPTION=1
            PRINT     *1,"Number of Records Added/Updated: ",UPDCNT,*N;
          ENDIF
.
          PRINT     *1,"Number of Error Records        : ",ERRCNT,*N,*N:
                    *1,"*** End of Report ***"
.
TAIL9000  MOVE      ZERO,EXIT
TAIL9999  RETURN
+
.**************************************************************************
.*                                RDUPLOAD             called by:READ0000 *
.**************************************************************************
RDUPLOAD  CALL      CLRVAR00           * Clear Variables   
          READ      UPLDFILE,SEQ;RECTYPE,KEY99
          RETURN
+
.******************************************************************************
.*                                  PRHD0000                                  *
.*                        Print the selection details                         *
.******************************************************************************
PRHD0000  CALL      HEAD132
.
          PRINT     *N,"Date               : ",CDATE:
                    *N,"Time               : ",CTIMEIS:
                    *N,"User ID            : ",USERID:
                    *N,"Theatre Band Upload: ",PATHNAME:
                    *N,*N,*1,"MBS No",*12,"Band",*20,"Sug.Clas.":
                    *30,"Certificate",*42,"Item Description":
                    *83,"Error Description":
                    *N,*1,"----------",*12,"-------",*20,"---------":
                    *30,"-----------",*42,"----------------":
                    *83,"---------------------------------"
PRHD9999  RETURN
+
.******************************************************************************
.*                                  TBND0000                                  *
.*                        Generate Theatre Band                               *
.******************************************************************************
TBND0000  MOVE      ZERO,ERRFLAG
          MOVE      ZERO,RECNUMB
          MOVE      ZERO,RECUPDT
          MOVE      ZERO,ERRNUMB
.
          OPEN      PATITEM1,"patitemn"      * Current MBS item file
.
          OPEN      UTBNDTXT,FNAMEI
TBND1000  READ      UTBNDTXT,SEQ;XFLD0001,XFLD0002,XFLD0003,XFLD0004,XFLD0005
          GOTO      TBND9000 IF OVER
.
          PACK      MBSICODE,XFLD0001,SP70    * Item Code
          PACK      TNATBAND,XFLD0002,SP70    * National Band
          PACK      ICLSTYPE,XFLD0003,SP70    * Suggested Class.(Cat A)
          PACK      TCERTYPE,XFLD0004,SP70    * Type of Certificate (Cat Cr)
          PACK      ITEMDESC,XFLD0005,SP70    * Item Description
.
          MATCH     SP70,MBSICODE
          GOTO      TBND1000 IF EQUAL
.
          ADD       ONE,RECNUMB
.
          CALL      VALR0000                  * Validating
          BRANCH    EXIT,TBND1000
.
          CALL      IBACLOCK
          PACK      PTITUDAT,CCC,CYY,CMM,CDD
          REP       " 0",PTITUDAT           * date record updated
          MOVE      CTIMEIS,PTITUTIM        * time record updated
          MOVE      USERID,PTITUUID         * web user updated
.
          CALL      UPITEM1
          ADD       ONE,RECUPDT
.
          GOTO      TBND1000
.
TBND9000  CLOSE     UTBNDTXT
          CLOSE     PATITEM1
.
          PRINT     *N,*1,"Number of Records in txt file : ",RECNUMB:
                    *N,*1,"Number of Records Updated     : ",RECUPDT:
                    *N,*1,"Number of Errors occured      : ",ERRNUMB
.
TBND9999  RETURN
+
.-----------------------------------------------------------
.         VALR0000
.         Validation
.-----------------------------------------------------------
VALR0000  MOVE      ZERO,EXIT
          PACK      KEY9,MBSICODE,SP70
          PACK      KEY17,KEY9,SP70
          CALL      PATITMRD
          IF        OVRCD=1
            CALL      PREC0000           * Print record details
            PRINT     *83,"Invalid MBS Item Code"
          ENDIF
.
          MATCH     SP70,TNATBAND
          IF        @EQUAL
            CALL      PREC0000           * Print record details
            PRINT     *83,"National Band must not be blank"
          ENDIF
.
          MOVE      "TB",KEY2
          PACK      KEY5,KEY2,TNATBAND
          CALL      RDCODE1
          IF        OVRCD=1
            CALL      PREC0000           * Print record details
            PRINT     *83,"Invalid National Band (Cat TB)"
          ELSE
            MOVE      TNATBAND,PTITTACB         * National Band
          ENDIF
.
          IF        KSCLFLAG=1
            MATCH     SP70,ICLSTYPE
            IF        !@EQUAL
              MOVE      "A ",KEY2
              PACK      KEY5,KEY2,ICLSTYPE
              CALL      RDCODE1
              IF        OVRCD=1
                CALL      PREC0000           * Print record details
                PRINT     *83,"Invalid Suggested Classification (Cat A)"
              ELSE
                MOVE      ICLSTYPE,ICLSS        * Suggested Adm.Class.
              ENDIF
            ENDIF
          ENDIF
.
          IF        KCERFLAG=1
            MATCH     SP70,TCERTYPE
            IF        !@EQUAL
              MOVE      "cr",KEY2
              PACK      KEY5,KEY2,TCERTYPE
              CALL      RDCODE1
              IF        OVRCD=1
                CALL      PREC0000           * Print record details
                PRINT     *83,"Invalid Certificates Code (Cat cr)"
              ELSE
                MOVE      TCERTYPE,PTITTCER     * Type of Certificate
              ENDIF
            ENDIF
          ENDIF
.
          IF        KDESFLAG=1
            PACK      ITEMDESC,XFLD0005,SP70
            MATCH     SP70,ITEMDESC
            IF        @EQUAL
              CALL      PREC0000           * Print record details
              PRINT     *83,"Item Description must not be blank"
            ELSE
              MOVE      ITEMDESC,IDESC          * Item Description
              MOVE      ITEMDESC,PTITDESC       * Long Item Description
            ENDIF
          ENDIF
.
VALR9999  RETURN
+
.******************************************************************************
.*                                  PREC0000                                  *
.*                              Print record                                  *
.******************************************************************************
PREC0000  IF        EXIT=0
            PRINT     *1,MBSICODE,*12,TNATBAND,*20,ICLSTYPE,*30,TCERTYPE:
                      *42,ITEMDESC;
          ENDIF
          MOVE      ONE,EXIT
          ADD       ONE,ERRNUMB
PREC9999  RETURN
+
.-----------------------------------------------------------
. Initialize's file data
.-----------------------------------------------------------
CLRMBS00  MOVE      SP70,ITEMNO
          MOVE      SP70,IALPHA
          MOVE      SP70,IDESC
          MOVE      ZERO,QIAMT
          MOVE      ZERO,IAMT
          MOVE      SP70,IMISGRP        * MISCELLANEOUS GROUP (CAT FI)
          MOVE      SP70,ICLSS          * SUGGESTED CLASS (CAT A )
          MOVE      SP70,IBAND1         * THEATRE CLASS 1 (CAT TB)
          MOVE      SP70,IBAND2         * THEATRE CLASS 2 (CAT TB)
          MOVE      SP70,IBAND3         * THEATRE CLASS 3 (CAT TB)
          MOVE      SP70,IBAND4         * THEATRE CLASS 4 (CAT TB)
          MOVE      SP70,IBAND5         * THEATRE CLASS 5 (CAT TB)
          MOVE      SP70,IBAND6         * THEATRE CLASS 6 (CAT TB)
          MOVE      SP70,IBAND7         * THEATRE CLASS 7 (CAT TB)
          MOVE      SP70,IBAND8         * THEATRE CLASS 8 (CAT TB)
          MOVE      SP70,IBAND9         * THEATRE CLASS 9 (CAT TB)
          MOVE      SP70,IBAND10        * THEATRE CLASS 10(CAT TB)
          MOVE      SP70,IBAND11        * THEATRE CLASS 11(CAT TB)
          MOVE      SP70,IBAND12        * THEATRE CLASS 12(CAT TB)
          MOVE      SP70,IBAND13        * THEATRE CLASS 13(CAT TB)
          MOVE      SP70,IBAND14        * THEATRE CLASS 14(CAT TB)
          MOVE      SP70,IBAND15        * THEATRE CLASS 15(CAT TB)
          MOVE      SP70,IBAND16        * THEATRE CLASS 16(CAT TB)
          MOVE      SP70,PTITACTV       * Active indicator
          MOVE      SP70,PTITLINK       * Linked item code
          MOVE      ZERO,PTITEXCL       * Exclusion list item ?
          MOVE      SP20,PTITIWRN       * Warning to enter a Prosthetic
          MOVE      ZERO,PTITGSTA       * GST applicable ?
          MOVE      SP70,PTITGSTC       * GST Payable Code
          MOVE      SP70,PTITDCSC       * Day Case Suggested Classification
          MOVE      SP70,PTITDESC
          MOVE      SP70,PTITTCER
          MOVE      SP70,PTITMSCH
          MOVE      SP70,PTITTCCD
          MOVE      SP70,PTITSERV
          MOVE      SP70,PTITECEQ
          MOVE      SP70,PTITECTS
          MOVE      SP70,PTITLWRD
          MOVE      SP70,PTITTACB
          UNPACK    SP70,PTITEFDT,PTITETDT
          UNPACK    SP70,PTITCDAT,PTITCTIM,PTITCUID
          UNPACK    SP70,PTITUDAT,PTITUTIM,PTITUUID
          MOVE      SP70,PTITSPAR
CLRMBS99  RETURN
+
.
          INC       STD001IO
          INC       PATITMRD
          INC       PATITMVL
.
          INC       PATITMIO/INC    
          INC       WATPROIO/INC
          INC       PATCODIO/INC
