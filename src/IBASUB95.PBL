.-------------------------------------------------------
          INC       STDGENDF     * Required Include
.
VERSION   INIT      "V12.00.00"
.-------------------------------------------------------
. V9.04.01  19.04.2005 Peter Vela CAR 59696
.           Recompiled for SINTMPDF
. V9.03.01  10.09.2003 Steve Downing (VF.11.01 CAR 9375)
.           Recompiled for SINREBFD & SINREBIO
.-------------------------------------------------------
. V9.02.00  03.05.2002  Glenn Saunders
.           Export to new release i.e. v9.02 from vf.09
.-------------------------------------------------------
. VF.00.02  29.12.1999 Charles Handaya
.           Recompiled for Fixing Audit Date (CCYYMMDD)
. VF.00.01  03.11.1999 Sandra Barcham
.           Change locked message to use X
.-------------------------------------------------------
.@@@@@ Start of Generated Code @@@@@
. NB - Code & Comments Included Before the above line 
.      will not be overwritten by the generation of a 
.      program. The STDGENDF file and VERSION must appear
.      before the line. 
.-----------------------------------------
.   Program       :   IBASUB95
.   Function      :   STV Old Transmit                        
.   Generated  On :   13/12/2005
.-----------------------------------------
.=========================
.File Description Includes
.-------------------------
          INC       SINCIAFD/INC
          INC       SINCONFD/INC
          INC       SINNATFD/INC
          INC       SINPERFD/INC
          INC       SINREAFD/INC
          INC       SINREBFD/INC
          INC       SINTMPDF/INC
          INC       SUB95TDF    
.=========================
.Local Variable Definition
.-------------------------
.
ACCEPT    FORM      1
SACCEPT   FORM      1
.
PRGID     INIT      "IBASUB95"
PRGNAM    INIT      "STV Old Transmit                        "
.
.--------------------------------
. MAINLINE - Controlling Logic
.--------------------------------
          TOPIC     PRGID
          MOVE      PORT,PARENTID
          CLOCK     PORT,DIM2
          MOVE      DIM2,PORT
ML0000
          CALL      INIT0000
          CALL      ONAT0000
          CALL      SC00L000
          CHAIN     PGM
.---------------------------------------
. INIT - Open Files & Display Heading
.---------------------------------------
INIT0000  CALL      DISPHEAD
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          DISPLAY   *P56:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
          DISPLAY   *P56:24,"Opening scrsbga1";
          OPEN      SCRSBGA1,"scrsbgaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA1,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrpsta1";
          OPEN      SCRPSTA2,"scrpstaf"
          DISPLAY   *P56:24,"Opening scrslta1";
          OPEN      SCRSLTA1,"scrsltaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA1,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA2,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinciaaf";
          OPEN      SINCIAA3,"sinciaaf"
          DISPLAY   *P56:24,"Opening sinnataf";
          OPEN      SINNATA1,"sinnataf"
          DISPLAY   *P56:24,"Opening sinnataf";
          OPEN      SINNATA2,"sinnataf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA1,"sinperaf"
          DISPLAY   *P56:24,"Opening sinperaf";
          OPEN      SINPERA2,"sinperaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA1,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA2,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA3,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinreaaf";
          OPEN      SINREAA4,"sinreaaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA1,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA2,"sinrebaf"
          DISPLAY   *P56:24,"Opening sinrebaf";
          OPEN      SINREBA3,"sinrebaf"
INIT9999  DISPLAY   *P1:24,*EL;
          RETURN
.
.------------------------------------
. Called for Print Screen Routine 
.------------------------------------
PRTSVARS
          MATCH     "00",SCRID
          IF         @EQUAL
            CALL       PS00L000   * Main Screen                        
          ENDIF
          RETURN
.--------------------------------
. Screen - Main Screen                        
.--------------------------------
SC00L000
SC00L100
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      SBACK000 * Display Background
.
SC00L200
          CALL      CF00L000 * Clear Fields
          CALL      SETACCEP
SC00L300
          CALL      KY00L000 * Enter Key Fields
          BRANCH    EXIT,SC00L999,SC00L999
SC00L400
          CALL      WP00L000 * Load any WP Details
SC00L500
          CALL      LM00L000 * Load any Batch Details
SC00L600
          CALL      DF00L000 * Display Fields
SC00L700
          CALL      SF00L000 * Select Fields
          BRANCH    EXIT,SC00L100,SC00L100,SC00L200
          IF        EXIT=4
            MOVE      ONE,EXIT
          ENDIF
SC00L800
SC00L900
SC00L999  RETURN
.--------------------------------------------------------
. Clear Fields for Screen : Main Screen                        
.-------------------------------------------------------
CF00L000
          MOVE      SP70,SIPEPER 
          MOVE      SP70,SIPEYEAR
CF00L999  RETURN
.--------------------------------------------------------
. Enter Key Fields for Main Screen                        
.--------------------------------------------------------
KY00L000
          MOVE      ZERO,EXIT
          GOTO      KY00L999
.
KY00L900  MOVE      ONE,EXIT
KY00L999  RETURN
.---------------------------------------------------------
. Load WP files for : Main Screen                        
.---------------------------------------------------------
WP00L000
          RETURN
.---------------------------------------------------------
. Load Batch Screen for : Main Screen                        
.---------------------------------------------------------
LM00L000
          RETURN
.---------------------------------------------------------
. Display Fields for : Main Screen                        
.---------------------------------------------------------
DF00L000
          BRANCH   ACCEPT,DF00L999
          PACK     KEY15,PRGID,SCRID,SP70
          CALL     RSSCPS1
DF00L010
          CALL     RKSCPS1
          BRANCH   OVRCD,DF00L900
          MATCH    PRGID,SCPSPID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SCRID,SCPSSID
          GOTO     DF00L900 IF NOT EQUAL
          MATCH    SP70,SCPSMTY
          GOTO     DF00L010 IF NOT EQUAL
.
          CALL     PS00L000 * Display Field
          GOTO     DF00L010
DF00L900
DF00L999
          RETURN
.---------------------------------------------------------
. Display/Print Fields for : Main Screen                        
.---------------------------------------------------------
PS00L000   PACK      VAR,SP70,SP70
          PACK     PRINTVAR,SP70,SP70
          MOVE     SCPSITM,FIELDNO
          BRANCH    FIELDNO,PS00L999,PS00L999,PS00L999,PS00L101:
                            PS00L102
          GOTO     PS00L999
.
PS00L101
          MOVE      SIPEPER,VAR      
          CALL      DISPITEM
          GOTO     PS00L999
.
PS00L102
          MOVE      SIPEYEAR,VAR     
          CALL      DISPITEM
          GOTO     PS00L999
PS00L999
          RETURN
.---------------------------------------------------------
. Selections for : Main Screen                        
.---------------------------------------------------------
SF00L000  PACK     KEY13,PRGID,SCRID,SP70
          CALL     RSSCSL1
SF00L001  BRANCH   ACCEPT,SF00L020
.
SF00L005  CALL     MTSTQ000
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L006,SF00L101,SF00L102,SF00L103:
                            SF00L104
SF00L006  BEEP
          GOTO     SF00L005
SF00L020  CALL     RKSCSL1
          BRANCH   OVRCD,SF00L090
          MATCH    PRGID,SCSLPID
          GOTO     SF00L090 IF NOT EQUAL
          MATCH    SCRID,SCSLSID
          GOTO     SF00L090 IF NOT EQUAL
          MOVE     SCSLITM,FIELDNO
          BRANCH    FIELDNO,SF00L020,SF00L020,SF00L020,SF00L103:
                            SF00L104
          GOTO     SF00L020
SF00L090  MOVE     ZERO,ACCEPT
          GOTO     SF00L001
.
SF00L101
          MOVE      ZERO,EXIT
          GOTO      SF00L999
.
SF00L102
            MOVE      ZERO,HLEF
            CALL      GETSCR00
          CALL      TRAN0000
          MOVE      EXIT,SECTOR
          IF        SECTOR=0
            CALL      FRESCR00
            GOTO      SF00L999
          ENDIF
          IF        SECTOR=1
            CALL      FRESCR00
            MOVE      ZERO,EXIT
            GOTO      SF00L001
          ENDIF
          IF        SECTOR=2
            CALL      FRESCR00
            MOVE      ONE,EXIT
            GOTO      SF00L999
          ENDIF
          MOVE      "00",SCRID
          MOVE      ZERO,PRCOL
          MOVE      ZERO,PRVERT
          MOVE      "    1",FLDID
          CALL      GETPOSIT
          IF        EXIT=0
            MOVE     SCPSCOL,PRCOL
            MOVE     SCPSROW,PRVERT
          ENDIF
          CALL      PUTSCR00
          IF        SECTOR=4
            CALL      DF00L000
          ENDIF
          GOTO      SF00L001
.
SF00L103
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EPERD000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L103
            ENDIF
            BRANCH    EXIT,SF00L103,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SIPEPER,VAR      
          CALL      DISPITEM
          GOTO     SF00L001
.
SF00L104
          CALL     SELECTED
          MOVE      "0",CKEYTYP
          CALL      EYEAR000
          IF        SCPSMAN=1
            IF        EXIT=1
              MOVE      "Mandatory Field - ",DISPMSG
              BEEP
              CALL      MESSAGE1
              GOTO      SF00L104
            ENDIF
            BRANCH    EXIT,SF00L104,SF00L990
          ELSE
            COMPARE   TWO,EXIT
            GOTO      SF00L990 IF EQUAL
          ENDIF
          MOVE      SIPEYEAR,VAR     
          CALL      DISPITEM
          GOTO     SF00L001
SF00L990  MOVE      FOUR,EXIT * Exit Char Exit
SF00L999  RETURN
.@@@@@ Function Restart Point @@@@@
.------------------------------------------------------------------------
. Open Nato X-Ref File if required
.------------------------------------------------------------------------
ONAT0000  OPEN      CONTROLF,"controlf"
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*143,HNONUSAG
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ONE,HNONUSAG
            WRITAB    CONTROLF,SIXTY3;*143,HNONUSAG
          ENDIF
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF FORMAT
          READ      CONTROLF,SIXTY3;*141,INCNNATO
          TRAPCLR   FORMAT
          IF        OVRCD=1
            MOVE      ZERO,INCNNATO
            WRITAB    CONTROLF,SIXTY3;*141,INCNNATO
          ENDIF
.
          IF        INCNNATO=1
            MOVE      ZERO,OVRCD
            TRAP      OVERCOND IF IO
            OPEN      SINNATA1,"sinnataf"
            TRAPCLR   IO
            IF        OVRCD=1
              DISPLAY   *P1:24,*EL,*B,"Nato file does not exist. Run fixit.  ";
              CALL      HITENTER
              CHAIN     PGM
            ENDIF
.
            OPEN      SINNATA2,"sinnataf"
          ENDIF
.
ONAT9999  RETURN
.********************************************************************
. Set accept mode
.********************************************************************
SETACCEP  MOVE      ONE,ACCEPT
          RETURN
TRAN0000  CLOSE     SUMFILE
.
          CLEAR     FILENAMA
          APPEND    "sin95A",FILENAMA
          APPEND    PORT,FILENAMA
          RESET     FILENAMA
          REP       " 0",FILENAMA
.
          CALL      DELTW000
.
          CALL      CRDTW000
.
          READ      CONTROLF,TWENTY4;HAPER1,HAPER2,HAPER3,HAPER4,HAPER5:
                                     HAPER6,HAPER7,HAPER8,HAPER9,HAPER10:
                                     HAPER11,HAPER12
.
          MOVE      SIPEPER,FORM2
          LOAD      PERDESC,FORM2,HAPER1,HAPER2,HAPER3,HAPER4,HAPER5:
                                  HAPER6,HAPER7,HAPER8,HAPER9,HAPER10:
                                  HAPER11,HAPER12
.
          MOVE      PERDESC,PERDESC1
          CLEAR     DIM22
          APPEND    "STOCK TRANSFER - ",DIM22
          APPEND    PERDESC1,DIM22
          RESET     DIM22
.
          PACK      SAVPERD,SIPEYEAR,SIPEPER,SP70
          REP       " 0",SAVPERD
          MOVE      ONE,CNOUNDLN
          MOVE      "599",CLNO
          MOVE      ZERO,TOTAL
          MOVE      ZERO,TMSUAMT
          CALL      EXTR0000        * Extract Data
          IF        ITMCNT=0
            MOVE      "No Data Extracted - ",DISPMSG
            CALL      MESSAGE1
            GOTO      TRAN9900
          ENDIF
.
TRAN9000  CALL      WRBT0000           * make batch
          CALL      SBAT0000
.
          MOVE      "Transmit File Created - ",DISPMSG
          CALL      MESSAGE1
.
TRAN9900  CALL      DELTW000
          GOTO      TRAN9999
.
TRAN9999  RETURN
.--------------------------------------------------
. Write Batch Details
.--------------------------------------------------
WRBT0000  PREP      TRANSMIT,"TRANSMIT"
          PREP      OUTFILE,"TRANSFER"
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,ITMCNT
          MOVE      ZERO,COUNT
          MOVE      ZERO,BATCH
          PACK      DIM6,CDD,CMM,CYY
          REP       " 0",DIM6
          UNPACK    SAVPERD,D2,D2
          REP       " 0",D2
.
          WRITE     OUTFILE,COUNT;"B45",D2,DIM6,SP30,SP20,SP19
          CALL      BTCHD000
.
          MOVE      SP70,KEY10
          READ      SUMFILE,KEY10;;
.
WRBT1000  READKS    SUMFILE;TMSUCST,TMSUSUB,TMSUAMT
          GOTO      WRBT7000 IF OVER
.
          MATCH     "ZZZZZ",TMSUCST
          GOTO      WRBT7000 IF EQUAL
.
          ADD       ONE,ITMCNT         * display every 1000th record
          IF        ITMCNT%100=1
            DISPLAY   *P1:24,*V2LON,ITMCNT," - ":
                      *P30:24,TMSUCST," - ",TMSUSUB,*EF;
          ENDIF
.
          COMPARE   ZERO,TMSUAMT
          GOTO      WRBT1000 IF EQUAL
.
          MULT      "100" BY TMSUAMT
          MOVE      TMSUAMT,STOCKVAL
.
          ADD       ONE,SEC
          ADD       ONE,COUNT
          MOVE      SEC,SEC2
          MOVE      SEC2,D2
          REP       " 0",D2
.
          COMPARE   ZERO,STOCKVAL
          GOTO      WRBT1500 IF LESS
.
          WRITE     OUTFILE,COUNT;D2,DR,SP26,STOCKVAL,TMSUCST,TMSUSUB,SP6:
                                  DIM22
          ADD       STOCKVAL,HASH
          GOTO      WRBT2000
.
WRBT1500  MULT      "-1",STOCKVAL
          WRITE     OUTFILE,COUNT;D2,ANSC,ANSR,SP1,SP26,STOCKVAL,TMSUCST:
                                  TMSUSUB,SP6,DIM22
          ADD       STOCKVAL,HASH
          MULT      "-1",STOCKVAL
.
WRBT2000  ADD       ONE,SEC
          ADD       ONE,COUNT
          MOVE      SEC,SEC2
          MOVE      SEC2,D2
          REP       " 0",D2
.
          COMPARE   ZERO,STOCKVAL
          GOTO      WRBT2500 IF LESS
.
          WRITE     OUTFILE,COUNT;D2,ANSC,ANSR,SP1,SP26,STOCKVAL,"A1100":
                                  TMSUSUB,SP6,DIM22
          ADD       STOCKVAL,HASH
          GOTO      WRBT3000
.
WRBT2500  MULT      "-1",STOCKVAL
          WRITE     OUTFILE,COUNT;D2,DR,SP26,STOCKVAL,"A1100",TMSUSUB,SP6:
                                  DIM22
          ADD       STOCKVAL,HASH
          MULT      "-1",STOCKVAL
.
WRBT3000  COMPARE   "24",SEC
          GOTO      WRBT4000 IF NOT EQUAL
.
          CALL      BTCHH000
          CALL      BTCHD000
.
WRBT4000  COMPARE   "56",CLNO
          CALL      HEADB000 IF NOT LESS
.
          MATCH     SAVCST,TMSUCST
          GOTO      WRBT5000 IF EQUAL
.
          PRINT     " "
          ADD       ONE,CLNO
.
WRBT5000  COMPARE   ZERO,TMSUAMT
          GOTO      WRBT6000 IF EQUAL
.
          DIV       "100",TMSUAMT
          PRINT     *10,TMSUCST,*25,TMSUSUB,*40,TMSUAMT
          ADD       ONE,CLNO
.
          ADD       TMSUAMT,TOTAL
.
WRBT6000  MOVE      TMSUCST,SAVCST
.
          GOTO      WRBT1000
.
WRBT7000  COMPARE   "56",CLNO
          CALL      HEADB000 IF NOT LESS
          PRINT     *N,*40,"-----------":
                    *N,*25,"TOTAL",*40,TOTAL
.
          CALL      BTCHH000
.
          MOVE      "90",CLNO
          MOVE      ZERO,TOTAL
.
WRBT8000  MOVE      "A1100",TMSUCST
.
          COMPARE   "56",CLNO
          CALL      HEADB000 IF NOT LESS
.
          PRINT     *10,TMSUCST,*25,TMSUSUB,*40,TMSUAMT
          ADD       ONE,CLNO
.
          ADD       TMSUAMT,TOTAL
.
          READKS    SUMFILE;TMSUCST,TMSUSUB,TMSUAMT
          GOTO      WRBT8000 IF NOT OVER
.
          PRINT     *N,*40,"-----------":
                    *N,*25,"TOTAL",*40,TOTAL
.
          ADD       ONE,COUNT
          WRITE     OUTFILE,COUNT;"EOF"
.
          ADD       ONE,COUNT
          WEOF      OUTFILE,COUNT
          CLOSE     OUTFILE
.
WRBT9000  MOVE      ZERO,COUNT
          CLOSE     OUTFILE
.
          OPEN      OUTFILE,"TRANSFER"
.
WRBT9500  READ      OUTFILE,COUNT;DIM80
          GOTO      WRBT9800 IF OVER
.
          WRITE     TRANSMIT,SEQ;DIM80
          ADD       ONE,COUNT
          GOTO      WRBT9500
.
WRBT9800  WEOF      TRANSMIT,SEQ
          CLOSE     TRANSMIT
.
          CLOSE     OUTFILE
          PREP      OUTFILE,"TRANSFER"
          CLOSE     OUTFILE
.
WRBT9999  RETURN
.
HEADB000  CALL      HEAD80
.
          PRINT     *10,"DEPARTMENT",*25,"EXPENDITURE",*45,"AMOUNT",*N:
                    *10,"----------",*25,"-----------",*45,"------"
          ADD       TWO,CLNO
          RETURN
.------------------------------------------------------------------------------
. Save batch number
.------------------------------------------------------------------------------
SBAT0000  DISPLAY   *P1:24,*EL;
          MOVE      ZERO,ITMCNT
.
SBAT1000  PACK      KEY39,SP70
          CALL      RSSIRB3
.
SBAT1500  CALL      RKSIRB3
          BRANCH    OVRCD,SBAT9000
.
          MATCH     SP70,SIRBBCH       * ignore data already transferred
          GOTO      SBAT9000 IF NOT EQUAL
.
          MATCH     "T",SIRBTYP        * ignore stock transfers (done in EXTB)
          GOTO      SBAT1500 IF EQUAL
.
          COMPARE   ZERO,SIRBAMT       * ignore zero values
          GOTO      SBAT1500 IF EQUAL
.
          PACK      KEY8,SIRBTYP,SIRBREQ
          CALL      RDSIRA1
          BRANCH    OVRCD,SBAT1500
.
          PACK      SIPEDATE,SIRADAT,SP70
          CALL      RSIPE000
          BRANCH    OVRCD,SBAT1500
.
          PACK      DIM6,SIPEYEAR,SIPEPER,SP70
          MATCH     SAVPERD,DIM6
          GOTO      SBAT1500 IF NOT EQUAL
.
          MATCH     SP70,SIRACST       * ignore blank cost centres
          GOTO      SBAT1500 IF EQUAL
.
          MOVE      SP70,SIIASUB
          MOVE      SIRBCAT,KEY7
          CALL      RDSIIA1
          BRANCH    OVRCD,SBAT1500
.
          BRANCH    SIIANON,SBAT1500   * ignore non-stock
.
          PACK     KEY39,SIRBBCH,SIRBLED,SIRBACC,SIRBTYP,SIRBREQ,SIRBWAR,SIRBCAT
          ADD       ONE,ITMCNT         * display every 1000th record
          IF        ITMCNT%100=1
            DISPLAY   *P1:24,*V2LON,ITMCNT," - ",KEY39,*EF;
          ENDIF
.
          PACK     SIRBBCH,ANSB,SAVPERD,SP70
          MOVE     "ZZ",SIRBLED
          MOVE     "ZZZZZZZZZZZZ",SIRBACC
.
          CALL     UPSIRB3
          GOTO     SBAT1000
.
SBAT9000
.
SBAT9999  RETURN
. --------------------------------------------------
. Generate extraction summary file
. --------------------------------------------------
EXTR0000  MOVE      ZERO,CPAGENO                 * reset page no.
          CLOCK     TIME,CTIMEIS                 * get current time
          MOVE      "999",CLNO                   * init last line number
          MOVE      ZERO,ITMCNT
          MOVE      ZERO,SECTOR
          DISPLAY   *P1:24,*EL;
          PACK      KEY39,SP70
          CALL      RSSIRB3
.
EXTR1000  CALL      RKSIRB3
          BRANCH    OVRCD,EXTR9000
.
          MATCH     SP70,SIRBBCH       * ignore data already transferred
          GOTO      EXTR9000 IF NOT EQUAL
.
          MATCH     SP70,SIRBLED       * ignore current batch data
          GOTO      EXTR9000 IF NOT EQUAL
.
          ADD       ONE,SECTOR
          IF        SECTOR%100=1
            DISPLAY   *P1:24,*V2LON,ITMCNT," - ",SECTOR,*EF;
          ENDIF
.
          MATCH     "T",SIRBTYP        * ignore stock transfers (done in EXTB)
          GOTO      EXTR1000 IF EQUAL
.
          COMPARE   ZERO,SIRBAMT       * ignore zero values
          GOTO      EXTR1000 IF EQUAL
.
          PACK      KEY8,SIRBTYP,SIRBREQ
          CALL      RDSIRA1
          BRANCH    OVRCD,EXTR1000
.
          PACK      SIPEDATE,SIRADAT,SP70
          CALL      RSIPE000
          BRANCH    OVRCD,SBAT1500
.
          PACK      DIM6,SIPEYEAR,SIPEPER,SP70
          MATCH     SAVPERD,DIM6
          GOTO      EXTR1000 IF NOT EQUAL
.
          MATCH     SP70,SIRACST       * ignore blank cost centres
          GOTO      EXTR1000 IF EQUAL
.
          MOVE      SP70,SIIASUB
          MOVE      SIRBCAT,KEY7
          CALL      RDSIIA1
          BRANCH    OVRCD,EXTR1000
.
          BRANCH    SIIANON,EXTR1000   * ignore non-stock
.
          PACK     KEY39,SIRBBCH,SIRBLED,SIRBACC,SIRBTYP,SIRBREQ,SIRBWAR,SIRBCAT
          ADD       ONE,ITMCNT
          IF        ITMCNT%100=1
            DISPLAY   *P1:24,*V2LON,ITMCNT," - ",KEY39,*EF;
          ENDIF
.
          CALL      TLATE000
.
          PACK      KEY10,SIRACST,SIIASUB
          READ      SUMFILE,KEY10;TMSUCST,TMSUSUB,TMSUAMT
          GOTO      EXTR2000 IF OVER
.
          ADD       SIRBAMT,TMSUAMT
          UPDATE    SUMFILE;TMSUCST,TMSUSUB,TMSUAMT
          GOTO      EXTR3000
.
EXTR2000  MOVE      SIRBAMT,TMSUAMT
          WRITE     SUMFILE,KEY10;KEY10,TMSUAMT
          GOTO      EXTR3000
.
EXTR3000  MATCH     "I",SIRBTYP
          GOTO      EXTR1000 IF NOT EQUAL
.
          CLEAR     KEY10
          APPEND    "ZZZZZ",KEY10
          APPEND    SIIASUB,KEY10
          RESET     KEY10
.
          READ      SUMFILE,KEY10;TMSUCST,TMSUSUB,TMSUAMT
          GOTO      EXTR4000 IF OVER
.
          ADD       SIRBAMT,TMSUAMT
          UPDATE    SUMFILE;TMSUCST,TMSUSUB,TMSUAMT
          GOTO      EXTR1000
.
EXTR4000  MOVE      SIRBAMT,TMSUAMT
          WRITE     SUMFILE,KEY10;KEY10,TMSUAMT
          GOTO      EXTR1000
.
EXTR9000
.
EXTR9999  RETURN
.
LINE0000  PRINT     "--------------------------------------------":
                    "--------------------------------------------":
                    "--------------------------------------------"
LINE9999  RETURN
.
BTCHD000  MOVE      ZERO,SEC
          ADD       ONE,BATCH
          ADD       ONE,COUNT
.
          UNPACK    SAVPERD,D2,D2
          REP       " 0",D2
.
          PACK      DIM6,CDD,CMM,CYY
          REP       " 0",DIM6
.
          MOVE      HASH,D11
          REP       " 0",D11
.
          MOVE      BATCH,D3
          REP       " 0",D3
.
          WRITE     OUTFILE,COUNT;"$L",XX,D2,D3,"B45",DIM6:
                                  D11,SP30,SP20
          MOVE      COUNT,INITSEC
          MOVE      ZERO,HASH
.
BTCHD999  RETURN
.
BTCHH000  MOVE      HASH,D11
          REP       " 0",D11
.
          MOVE      SEC,D3
          REP       " 0",D3
          WRITAB    OUTFILE,INITSEC;*3,D3,*20,D11
.
BTCHH999  RETURN
.
DELTW000  CLOSE     SUMFILE
.
          CLEAR     MAKETMPA
          APPEND    "iserase ",MAKETMPA
          APPEND    FILENAMA,MAKETMPA
          RESET     MAKETMPA
.
          EXECUTE   MAKETMPA,TASKID
.
DELTW999  RETURN
.
CRDTW000  CLEAR     MAKETMPA
          APPEND    "isbuild ",MAKETMPA
          APPEND    FILENAMA,MAKETMPA
          APPEND    " 17 UC1-5,6-10",MAKETMPA
          RESET     MAKETMPA
.
          EXECUTE   MAKETMPA,TASKID
.
          OPEN      SUMFILE,FILENAMA
.
CRDTW999  RETURN
.
TLATE000  MATCH     "L6250",SIRACST
          GOTO      CHG15 IF EQUAL
.
          MATCH     "C00",SIRACST
          GOTO      CHG1 IF EQUAL
.
          MATCH     "J3",SIRACST
          GOTO      CHG10 IF EQUAL
.
          MATCH     "D3800",SIRACST
          GOTO      CHG11 IF EQUAL
.
          MATCH     "D3",SIRACST
          GOTO      CHG4 IF EQUAL
.
          MATCH     "E41",SIRACST
          GOTO      CHG5 IF EQUAL
.
          MATCH     "E2000",SIRACST
          GOTO      CHG6 IF EQUAL
.
          MATCH     "E2300",SIRACST
          GOTO      CHG12 IF EQUAL
.
          MATCH     "E2400",SIRACST
          GOTO      CHG13 IF EQUAL
.
          MATCH     "E2420",SIRACST
          GOTO      CHG14 IF EQUAL
.
          MATCH     "11",SIRACST
          GOTO      CHG7 IF EQUAL
.
          MATCH     "12",SIRACST
          GOTO      CHG7 IF EQUAL
.
          MATCH     "36",SIRACST
          GOTO      CHG7 IF EQUAL
.
          MATCH     "57",SIRACST
          GOTO      CHG7 IF EQUAL
.
          MATCH     "78",SIRACST
          GOTO      CHG7 IF EQUAL
.
          MATCH     "Z",SIRACST
          GOTO      CHG7 IF EQUAL
.
          MATCH     "F",SIRACST
          GOTO      CHG8 IF EQUAL
.
          MATCH     "RS500",SIRACST
          GOTO      CHG7 IF EQUAL
.
          MATCH     "RS074",SIRACST
          GOTO      CHG7 IF EQUAL
.
          RETURN
.
CHG1      MOVE      "C0000",SIRACST
          RETURN
.
CHG2      MOVE      "G0000",SIRACST
          RETURN
.
CHG3      MOVE      "C0100",SIRACST
          RETURN
.
CHG4      MOVE      "D3100",SIRACST
          RETURN
.
CHG5      MOVE      "E4100",SIRACST
          RETURN
.
CHG6      MOVE      "E2000",SIRACST
          RETURN
.
CHG7      MOVE      "C4210",SIRACST
          RETURN
.
CHG8      MOVE      "F0000",SIRACST
          RETURN
.
CHG9      MOVE      "M2000",SIRACST
          RETURN
.
CHG10     MOVE      "J0000",SIRACST
          RETURN
.
CHG11     MOVE      "D3800",SIRACST
          RETURN
.
CHG12     MOVE      "E2300",SIRACST
          RETURN
.
CHG13     MOVE      "E2400",SIRACST
          RETURN
.
CHG14     MOVE      "E2420",SIRACST
          RETURN
.
CHG15     MOVE      "L6200",SIRACST
          RETURN
EPERD000  KEYIN     *PCCOL:CVERT,*V2LON,*RV,F2
          COMPARE   ZERO,F2
          GOTO      EPERD990 IF EQUAL
.
          MOVE      F2,SIPEPER
          REP       " 0",SIPEPER
          PACK      KEY6,SIPEYEAR,SIPEPER
          REP       " 0",KEY6
          CALL      RDSIPE1
          IF        OVRCD=1
            BEEP
            MOVE      "Period NOT Created. - ",DISPMSG
            CALL      MESSAGE1
            GOTO      EPERD000
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      EPERD999
.
EPERD990  MOVE      TWO,EXIT
.
EPERD999  RETURN
EYEAR000  CALL      RINPECON
          MOVE      SIPECYR,SIPEYEAR
          KEYIN     *PCCOL:CVERT,*V2LON,*RV,*JR,SIPEYEAR
          PACK      SIPEYEAR,SIPEYEAR,SP70
.
          MATCH     SP70,SIPEYEAR
          GOTO      EYEAR990 IF EQUAL
          PACK      KEY4,SP3,EXITCHAR * exitchar entered ?
          MATCH     KEY4,SIPEYEAR
          GOTO      EYEAR990 IF EQUAL
.
          TYPE      SIPEYEAR           * valid numeric ?
          GOTO      EYEAR000 IF NOT EQUAL
.
          MOVE      SIPEYEAR,SIPEYF4
          IF        SIPEYF4<100
            SQUEEZE   SIPEYEAR
            MOVE      SIPEYEAR,FORM2
            PACK      SIPEYEAR,CCC,FORM2,SP70
          ENDIF
.
          REP       " 0",SIPEYEAR
          MOVE      ZERO,EXIT          * year ok
          GOTO      EYEAR999
.
EYEAR990  MOVE      TWO,EXIT           * no year entered
.
EYEAR999  RETURN
.-------------------------------
. Includes for I/O and Keyins
.-------------------------------
          INC       SINCIAIO/INC
          INC       SINNATIO/INC
          INC       SINPERCD    
          INC       SINPERIO/INC
          INC       SINREAIO/INC
          INC       SINREBIO/INC
.
          INC       STDGENCD
.
