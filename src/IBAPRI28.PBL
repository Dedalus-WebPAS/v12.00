.******************************************************************************
.* System    :   Private Practice System                                      *
.* Program   :   IBAPRI28                                                     *
.* Desc      :   Accounts In Credit Report                                    *
.******************************************************************************
.* Date      :   06/11/91                                                     *
.* Author    :   Stephen Armstrong                                            *
.* Function  :   Prints a report detailing those invoices which are in        *
.*               credit.  The report can be printed in invoice number or      *
.*               surname order and can be produced for a range of medical     *
.*               practices.                                                   *
.* Mods      :                                                                *
.*                                                                            *
.* V10.04.01 15/04/2014  J.Tan          CAR 261630                            *
.*           Removed port number from temp file name                          *
.* V10.03.01 24/02/2012  Ebon Clements CAR 239222                             *
.*           Fixed print of inv number when printed by inv sequence           *
.* V9.11.01  20/10/2008  J.Tan         CAR 178415                             *
.*           Mods checking for Medical practice user access                   *
.* V9.10.01  17/07/2008 Sandra Barcham CAR 171923                             *
.*           Fixed report                                                     *
.* V9.03.02  02/03/2004 Lina Vo        CAR 47921                              *
.*           Removed use of PRIDBTFD & IO.                                    *
.* V9.03.01  18/07/2003 Mike Laming    CAR 40455                              *
.*           Add GST Journals to calculation of Invoice Balance               *
.* V5.08.01  29/08/2000  Caleb Sharman                                        *
.*           Changed Health Fund variables to be 8 chars                      *
.* V5.07.01  09/06/1999  Greg Horvat                                          *
.*           Recompiled for PRIINVIO - Fixed problem with direct read         *
.* V6.00.01  07/10/1992  Steve Armstrong                                      *
.*           Modified for alphanumeric debtor number                          *
.* V6.00.02  13/01/1994  Greg Horvat      SRF 127169                          *
.*           Fixed page break & fixed printing of medical practice            *
.* V6.01.03  11/05/94 J.Tan    SRF 129254                                     *
.*           Fixed printing P.R.A. address                                    *
.******************************************************************************
.
.$$$$$
.         Accounts In Credit Report Program (IBAPRI28)
.         --------------------------------------------
.
.         ML0000
.         Open files and initialisation
.         priinvof
.         pridebtf
.         pripracf
.         patma1af
.         controlf
.
.         ML0100
.         Get user option
.            If option 1 or 2 selected, proceed to get start medical prac. code
.            If zero,selected, end program
.
.         ML1000
.         Get starting medical practice code
.            If exitchar input, return to get next option
.            If nothing input, default to "start"
.            If valid input, proceed to get end medical practice code
.
.         Get ending medical practice code
.            If exitchar input, return to get next option
.            If nothing input, default to "finish"
.            If valid input, proceed to get either start invoice number or
.               start surname, depending on the option
.
.         ML2000
.         Get starting invoice number
.            If nothing input, default to "start"
.
.         Get ending invoice number
.            If nothing input, default to "finish"
.
.         Proceed to get confirmation of printout
.
.         ML3000
.         Get starting surname
.            If exitchar entered, return to get next option
.            If nothing input, default to "start"
.
.         Get ending surname
.            If exitchar entered, return to get next option
.            If nothing input, default to "finish"
.         Proceed to get confirmation of printout
.
.         ML4000
.         Get confirmation of printout
.            If (Y)es input, proceed to create temp. file
.            If (N)o input, return to get next option
.            If (C)ancel, return to get next option
.
.         ML8000
.         Create temporary file
.
.         Process records in invoice file and write valid records to 
.             temp file
.
.         Print records from the temp file
.
.         Erase temporary file
.
.         Return to get next option
.
.         ML9999
.         Chain back to calling program
.
.$$$$$
.
.
          INC       STD001FD
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
.         Temporary File Definition
.         -------------------------
.
.         Filename : PRI28Axx.dat          (xx = port id)
.
ACRTEMP1  IFILE SQL, FIXED=215, KEY="U1-6,7-14"
ACRTEMP2  IFILE SQL, FIXED=215, KEY="U1-6,15-20,7-14"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
.PRINPRAC DIM       6           6           1       Medical practice code
.PRINNUMB DIM       8           8           7       Invoice number
.PRINNAME DIM       6           6          15       Surname
.PRINDEBT DIM       8           8          21       Debtor number
.PRINSCAN FORM      2           2          29       Debtor scan flag
.PRINITOT FORM    8.2           6          31       Invoice total
.PRINPAMT FORM    8.2           6          37       Amount paid by patient
.PRINHAMT FORM    8.2           6          43       Amount paid by health fund
.PRINIAMT FORM    8.2           6          49       Amount paid by insurer
.PRINMAMT FORM    8.2           6          55       Amount paid by Medicare
.PRINVAMT FORM    8.2           6          61       Amount paid by V. Affairs
.PRINOTHA FORM    8.2           6          67       Other amount paid
.PRINJAMT FORM    8.2           6          73       Journal amount
.PRINNAMR DIM    45            45          79       P.R.A. Name
.PRINPRA1 DIM    25            25         124       P.R.A. Address line 1
.PRINPRA2 DIM    25            25         149       P.R.A. Address line 2
.PRINPRA3 DIM    25            25         174       P.R.A. Address line 3
.PRINPOST DIM     4             4         199       P.R.A. Postcode
.PRINTELB DIM    12            12         203       P.R.A. telephone business
.
.End of Record                            215
.
.
.
. FILE DESCRIPTION INCLUDES
. -------------------------
.
          INC       PRIINVFD/INC                 * invoice file
..          INC       PRIDBTFD/INC                 * debtor file
          INC       PRIPRAFD/INC                 * medical practice file
          INC       PRIALSFD/INC                 * Medical Prac.all user access
          INC       PRISECFD/INC                 * Medical Prac.security access
.
          INC       PATMA1FD/INC                 * patient master file
.
.
. PROGRAM CONSTANTS
. -----------------
ALPHDET   INIT      " - Alphabetical (Detailed)"
ALPHSEQ   INIT      " - Alphabetical"
ERASE     INIT      "iserase "
FINISH    INIT      "Finish"
INVSEQ    INIT      " - Invoice Number"
ISBUILD   INIT      "isbuild "
PIPE      INIT      "|"
START     INIT      "Start"
UKEY      INIT      " 215 U1-6,7-14 U1-6,15-20,7-14"
ZED6      INIT      "zzzzzz"
ZED20     INIT      "zzzzzzzzzzzzzzzzzzzz"
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
.
CMDLIN1   DIM       50
CMDLIN2   DIM       16
.
EINVNO    DIM       8                            * end invoice number
ENAME     DIM       20                           * ending surname
EPRAC     DIM       6                            * end medical practice code
.
FMTDEBT   DIM       9                            * formatted debtor number
FMTNAME   DIM       39                           * formatted debtor name
FMTRESP   DIM       39                           * formatted PRA name
.
FORM82    FORM      8.2                                                *I-90301
.
GAPDTOT   FORM      12.2                         * grand amt. paid total
GBALTOT   FORM      12.2                         * grand inv. bal. total
GINVTOT   FORM      12.2                         * grand invoice total
GJRNTOT   FORM      12.2                         * grand journal total
.
MPRAC     DIM       6                            * medical practice code
.
PAPDTOT   FORM      12.2                         * total amt. paid for practice
PBALTOT   FORM      12.2                         * inv. balance total for prac.
PINVTOT   FORM      12.2                         * inv. total for practice
PJRNTOT   FORM      12.2                         * jour. total for practice
.
SAVPRAC   DIM       6                            * saved medical practice code
SEQTYPE   DIM       26                           * option sequence
SINVNO    DIM       8                            * start invoice number
SNAME     DIM       20                           * starting surname
SPRAC     DIM       6                            * start medical practice code
.
TEMPFILE  DIM       8
URDIM8    DIM       8
USERID    DIM       10
.
.
PRGID     INIT      "IBAPRI28"
PRGNAM    INIT      "Accounts In Credit Report"
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,ML1000:        * invoice sequence
                            ML1000:        * alphabetic sequence
                            ML1000         * alphabetic sequence(detailed)
.
ML1000    CALL      SPRA0000               * get start medical practice
          BRANCH    EXIT,ML0100            * exitchar input
.
          CALL      EPRA0000               * get end medical practice
          BRANCH    EXIT,ML0100            * exitchar input
.
          BRANCH    COPTION,ML2000:        * by invoice number
                            ML3000:        * by alphabet
                            ML3000         * by alphabet (detailed)
.
ML2000    CALL      SINV0000               * get starting invoice number
.
          CALL      EINV0000               * get ending invoice number
          GOTO      ML4000                 * get confirmation
.
ML3000    CALL      SNAM0000               * get starting surname
          BRANCH    EXIT,ML0100            * exitchar entered
.
          CALL      ENAM0000               * get ending surname
          BRANCH    EXIT,ML0100            * exitchar entered
.
ML4000    CALL      USID0000               * Keyin user id
.
          CALL      CONTQST                * ok to continue ?
          BRANCH    CEXIT,ML8000:          * Yes
                          ML0100:          * No
                          ML0100           * Cancel
.
ML8000    CALL      CREA0000               * create temporary file
          CALL      PROC0000               * process records for printing
.
          CALL      PRIN0000               * print valid records
          CALL      KILL0000               * erase temp. file
          GOTO      ML0100                 * get next option
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                     * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"priinvof";
          OPEN      PRIINVO1,"priinvof"          * invoice file
.
..          DISPLAY   *P64:24,"pridebtf";
..          OPEN      PRIDEBT1,"pridebtf"          * debtor file
.
          DISPLAY   *P64:24,"pripracf";
          OPEN      PRIPRAC1,"pripracf"          * medical practice file
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          OPEN      PRIALSA1,"prialsaf"
          OPEN      PRISECA1,"prisecaf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"          * control file
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,TEMPFILE
.
          MOVE      TWO,PACFRMT
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  EXIT    = FALSE (0)  Valid option selected                  *
.*                        TRUE  (1)  Exit option selected                   *
.*              COPTION = 1 Invoice number sequence                         *
.*                        2 Alphabetic sequence                             *
.*                        3 Alphabetic sequence (detailed)                  *
.****************************************************************************
.
OPTN0000  HLINE     *G37,2,54,80
          DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Invoice Number Sequence":
                    *P1:6,*V2LON,TWO,*HOFF," = Alphabetic Sequence":
                    *P1:7,*V2LON,THREE,*HOFF," = Alphabetic Sequence (Detailed)"
.
OPTN1000  KEYIN     *P1:9,*EL,"Select option : ",*DV,UNDLN1:
                    *P17:9,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION
          GOTO      OPTN9500 IF EQUAL            * exit
.
          BRANCH    COPTION,OPTN9000:
                            OPTN9000:
                            OPTN9000
.
          BEEP
          GOTO      OPTN1000
.
OPTN9000  LOAD      SEQTYPE,COPTION,INVSEQ,ALPHSEQ,ALPHDET
          DISPLAY   *P54:2,*V2LON,SEQTYPE
          MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.**************************************************************************
.*                               SPRA0000              Called by: ML0000  *
.*                       input start medical practice code                *
.* Returns:          EXIT  0 = valid code input                           *
.*                         1 = exitchar input                             *
.**************************************************************************
.
SPRA0000  KEYIN     *P1:11,*EF,"From Medical Practice : ",*DV,UNDLN6:
                    *P25:11,*V2LON,MPRAC:
                    *P25:11,*DV,MPRAC
.
          CALL      CHK0000                      * see what was entered
          BRANCH    EXIT,SPRA5000:               * nothing entered
                         SPRA4000:               * ? entered
                         SPRA9500:               * exitchar input
                         SPRA8000                * valid input
.
          GOTO      SPRA0000                     * invalid input
.
SPRA4000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
SPRA4200  CALL      PRIPRADS                     * list codes on file
.
SPRA4500  KEYIN     *P1:24,*EL,"From Medical Practice : ",*DV,UNDLN6:
                    *P25:24,*V2LON,MPRAC:
                    *P25:24,*DV,MPRAC
.
          CALL      CHK0000                      * see what was entered
          BRANCH    EXIT,SPRA4900:               * nothing entered
                         SPRA4200:               * ? entered
                         SPRA9400:               * exitchar input
                         SPRA7900                * valid input
.
          GOTO      SPRA4500                     * invalid input
.
SPRA4900  CALL      PUTSCR00                     * restore screen
SPRA5000  MOVE      SP6,SPRAC
          DISPLAY   *P25:11,*V2LON,START
          GOTO      SPRA8500
.
SPRA7900  CALL      PUTSCR00                     * restore screen
          DISPLAY   *P25:11,*V2LON,MPRAC
SPRA8000  MOVE      MPRAC,SPRAC
          DISPLAY   *P35:11,PRPRDESC
.
SPRA8500  MOVE      ZERO,EXIT
          GOTO      SPRA9999
.
SPRA9400  CALL      FRESCR00
SPRA9500  MOVE      ONE,EXIT
.
SPRA9999  RETURN
+
.**************************************************************************
.*                               EPRA0000              Called by: ML0000  *
.*                       input end medical practice code                  *
.* Returns:          EXIT  0 = valid code input                           *
.*                         1 = exitchar input                             *
.**************************************************************************
.
EPRA0000  KEYIN     *P1:12,*EF,"To   Medical Practice : ",*DV,UNDLN6:
                    *P25:12,*V2LON,MPRAC:
                    *P25:12,*DV,MPRAC
.
          CALL      CHK0000                      * see what was entered
          BRANCH    EXIT,EPRA5000:               * nothing entered
                         EPRA4000:               * ? entered
                         EPRA9500:               * exitchar input
                         EPRA3000                * valid input
.
          GOTO      EPRA0000                     * invalid input
.
EPRA3000  MATCH     SPRAC,MPRAC                  * end prac < start prac ?
          GOTO      EPRA8000 IF NOT LESS         * no
.
          DISPLAY   *P1:24,*EL,"End practice less than start practice.  ";
          CALL      HITENTER
          GOTO      EPRA0000
.
EPRA4000  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
EPRA4200  CALL      PRIPRADS                     * list codes on file
.
EPRA4500  KEYIN     *P1:24,*EL,"To   Medical Practice : ",*DV,UNDLN6:
                    *P25:24,*V2LON,MPRAC:
                    *P25:24,*DV,MPRAC
.
          CALL      CHK0000                      * see what was entered
          BRANCH    EXIT,EPRA4900:               * nothing entered
                         EPRA4200:               * ? entered
                         EPRA9400:               * exitchar input
                         EPRA6000                * valid input
.
          GOTO      EPRA4500                     * invalid input
.
EPRA4900  CALL      PUTSCR00                     * restore screen
EPRA5000  MOVE      ZED20,EPRAC
          DISPLAY   *P25:12,*V2LON,FINISH
          GOTO      EPRA8500
.
EPRA6000  MATCH     SPRAC,MPRAC                  * end prac < start prac ?
          GOTO      EPRA7900 IF NOT LESS         * no
.
          DISPLAY   *P1:24,*EL,"End practice less than start practice.  ";
          CALL      HITENTER
          GOTO      EPRA4500
.
EPRA7900  CALL      PUTSCR00                     * restore screen
          DISPLAY   *P25:12,*V2LON,MPRAC
EPRA8000  MOVE      MPRAC,EPRAC
          DISPLAY   *P35:12,PRPRDESC
.
EPRA8500  MOVE      ZERO,EXIT
          GOTO      EPRA9999
.
EPRA9400  CALL      FRESCR00
EPRA9500  MOVE      ONE,EXIT
.
EPRA9999  RETURN
+
.**************************************************************************
.*                              CHK0000                Called by: SPRA0000*
.*                see what was input for medical practice         EPRA0000*
.* Returns:           EXIT   0 = invalid input                            *
.*                           1 = nothing input                            *
.*                           2 = ? input                                  *
.*                           3 = exitchar input                           *
.*                           4 = valid input                              *
.**************************************************************************
.
CHK0000  ENDSET     MPRAC
         APPEND     SP6,MPRAC
         RESET      MPRAC
.
         MATCH      SP6,MPRAC                    * anything entered ?
         GOTO       CHK8000 IF EQUAL             * yes
.
         MATCH      EXITCHAR,MPRAC               * exitchar input ?
         GOTO       CHK9000 IF EQUAL             * yes
.
         MATCH      QUEST,MPRAC                  * "?" input ?
         GOTO       CHK8500 IF EQUAL             * yes
.
         MOVE       MPRAC,KEY6
         CALL       RDPRPR1                      * record on file ?
         COMPARE    ZERO,OVRCD
         GOTO       CHK9500 IF EQUAL             * yes
.
         DISPLAY    *P1:24,*EL,*B,"Medical Practice not on file.  ";
         CALL       HITENTER
.
         MOVE       ZERO,EXIT
         GOTO       CHK9999
.
CHK8000  MOVE       ONE,EXIT
         GOTO       CHK9999
.
CHK8500  MOVE       TWO,EXIT
         GOTO       CHK9999
.
CHK9000  MOVE       THREE,EXIT
         GOTO       CHK9999
.
CHK9500  MOVE       FOUR,EXIT
.
CHK9999  RETURN
+
.****************************************************************************
.*                            SINV0000                 Called by: ML0000    *
.*                 starting invoice number                                  *
.****************************************************************************
.
SINV0000  KEYIN     *P1:14,*EL,"From Invoice Number : ",*DV,UNDLN8:
                    *P23:14,*V2LON,*DE,*JR,SINVNO:
                    *P23:14,*DV,SINVNO
.
          RESET     SINVNO
          GOTO      SINV9999 IF NOT EOS
.
          MOVE      SP8,SINVNO                   * nothing input
          DISPLAY   *P23:14,*EL,*V2LON,START
.
SINV9999  RETURN
+
.****************************************************************************
.*                            EINV0000                 Called by: ML0000    *
.*                   ending invoice number                                  *
.****************************************************************************
.
EINV0000  KEYIN     *P1:15,*EL,"To   Invoice Number : ",*DV,UNDLN8:
                    *P23:15,*V2LON,*DE,*JR,EINVNO:
                    *P23:15,*DV,EINVNO
.
          RESET     EINVNO
          GOTO      EINV1000 IF NOT EOS
.
          MOVE      ZED20,EINVNO                 * nothing input
          DISPLAY   *P23:15,*EL,*V2LON,FINISH
          GOTO      EINV9999
.
EINV1000  MATCH     "99999999",EINVNO
          GOTO      EINV9999 IF EQUAL
.
          MATCH     SINVNO,EINVNO                * end inv. # < start inv. # ?
          IF        @LESS
             DISPLAY   *P1:24,*EL,*B,"End invoice no. less than start inv.":
                       " number.  ";
             CALL      HITENTER
             GOTO      EINV0000
          ENDIF
.
EINV9999  RETURN
+
.****************************************************************************
.*                             SNAM0000                Called by: ML0000    *
.*                      get starting surname                                *
.****************************************************************************
.
SNAM0000  KEYIN     *P1:14,*EL,"From Surname : ",*DV,UNDLN20:
                    *P16:14,*V2LON,SNAME
.
          RESET     SNAME
          GOTO      SNAM5000 IF EOS              * nothing entered
.
          CMATCH    EXITCHAR,SNAME               * exitchar input ?
          GOTO      SNAM9500 IF EQUAL            * yes
.
          GOTO      SNAM9000                     * surname entered
.
SNAM5000  MOVE      SP20,SNAME
.
          DISPLAY   *P16:14,*EL,*V2LON,START
.
SNAM9000  MOVE      ZERO,EXIT
          GOTO      SNAM9999
.
SNAM9500  MOVE      ONE,EXIT
.
SNAM9999  RETURN
+
.****************************************************************************
.*                              ENAM0000               Called by: ML0000    *
.*                     get the ending surname                               *
.****************************************************************************
.
ENAM0000  KEYIN     *P1:15,*EL,"To   Surname : ",*DV,UNDLN20:
                    *P16:15,*V2LON,ENAME
.
          RESET     ENAME
          GOTO      ENAM5000 IF EOS              * nothing entered
.
          CMATCH    EXITCHAR,ENAME               * exitchar input ?
          GOTO      ENAM9500 IF EQUAL            * yes
.
          GOTO      ENAM8000                     * surname entered
.
ENAM5000  MOVE      ZED20,ENAME
.
          DISPLAY   *P16:15,*EL,*V2LON,FINISH
          GOTO      ENAM9000
.
ENAM8000  ENDSET    ENAME                        * pad end name with blanks
          APPEND    SP20,ENAME
          RESET     ENAME
.
          MATCH     SNAME,ENAME                  * start name > end name ?
          GOTO      ENAM9000 IF NOT LESS         * no
.
          DISPLAY   *P1:24,*EL,*B,"Start name greater than end name.  ";
          CALL      HITENTER
          GOTO      ENAM0000
.
ENAM9000  MOVE      ZERO,EXIT
          GOTO      ENAM9999
.
ENAM9500  MOVE      ONE,EXIT
.
ENAM9999  RETURN
+
.****************************************************************************
.         Keyin user id
.****************************************************************************
USID0000  KEYIN     *P1:17,*EL,"User Id : ",USERID;
          PACK      USERID,USERID,SP70
          MATCH     SP70,USERID
          GOTO      USID0000 IF EQUAL
USID9999  RETURN
+
.****************************************************************************
.*                               PROC0000              Called by: ML0000    *
.*                  process the records for printing                        *
.****************************************************************************
.
PROC0000  DISPLAY   *P1:24,*EL,"Processing:",*P30:24,"Invoice in Credit:";
.
          COMPARE   ONE,COPTION                  * by invoice
          IF        @EQUAL
             MOVE      SINVNO,KEY8               * by invoice #
             CALL      RDPRIN1                   * start inv. record on file ?
             BRANCH    OVRCD,PROC0500            * no
             GOTO      PROC1000                  * yes
          ELSE
             MOVE      SP8,KEY8                  * alphabetical
             CALL      RSPRIN1                   * position at start of file
          ENDIF
.
PROC0500  CALL      RKPRIN1                      * read next record
          BRANCH    OVRCD,PROC9999               * end of file
.
PROC1000  DISPLAY   *P13:24,*V2LON,PRINNUMB;
.
          PACK      KEY10,USERID,SP70
          CALL      RDPRALS1
          COMPARE   ZERO,OVRCD
          GOTO      PROC1200 IF EQUAL       * User has access to all Med.Prac.
.
          PACK      KEY16,PRINPRAC,USERID,SP70
          CALL      RDPRSEC1
          BRANCH    OVRCD,PROC0500          * no access
.
.         See if practice in range
.
PROC1200  MATCH     SPRAC,PRINPRAC               * < start practice ?
          GOTO      PROC0500 IF LESS             * yes
.
          MATCH     PRINPRAC,EPRAC               * > end practice ?
          GOTO      PROC0500 IF LESS             * yes
.
.         Check other ranges
.
          COMPARE   ONE,COPTION                  * by invoice
          IF        @EQUAL
             MATCH     PRINNUMB,EINVNO           * past end inv. number ?
             GOTO      PROC9999 IF LESS          * yes
          ELSE
             MATCH     PRINNAME,SNAME            * < start name ?
             GOTO      PROC2000 IF EQUAL         * no
             GOTO      PROC2000 IF LESS          * no
             GOTO      PROC0500                  * yes
.
PROC2000     MATCH     PRINNAME,ENAME            * > end name ?
             GOTO      PROC0500 IF LESS          * yes
          ENDIF
.
.         See if account in credit
.
          MOVE      PRINITOT,PRINPEND
          ADD       PRINPAMT,PRINPEND
          ADD       PRINHAMT,PRINPEND
          ADD       PRINIAMT,PRINPEND
          ADD       PRINMAMT,PRINPEND
          ADD       PRINVAMT,PRINPEND
          ADD       PRINOTHA,PRINPEND
.                                                * Add GST Journal to Journal
.                                                * to pass correct figures
          MOVE      PRINGSTJ,FORM82                                    *I-90301
          ADD       FORM82,PRINJAMT                                    *I-90301
.
          ADD       PRINJAMT,PRINPEND
.
          COMPARE   ZERO,PRINPEND                * in credit ?
          GOTO      PROC0500 IF NOT LESS         * no
.
          DISPLAY   *P49:24,*V2LON,PRINNUMB;
          PACK      KEY14,PRINPRAC,PRINNUMB
          CALL      WRTEMP1
.
          GOTO      PROC0500                     * get next record
.
PROC9999  RETURN
+
.****************************************************************************
.*                               PRIN0000              Called by: ML0000    *
.*                  print the records from the temp file                    *
.****************************************************************************
.
PRIN0000  DISPLAY   *P1:24,*EL,"Printing: ";
.
          CALL      IBACLOCK                     * get current time
          MOVE      ZERO,CPAGENO
          MOVE      ZERO,CNOUNDLN
          MOVE      ZERO,CLNO                    * reset line counter
          COMPARE   THREE,COPTION
          IF        @EQUAL
             MOVE      "- Detailed",CPHDROPT
          ELSE
             MOVE      SP20,CPHDROPT
          ENDIF
          MOVE      SP6,SAVPRAC
.
          MOVE      ZERO,GAPDTOT                 * initialise grand totals
          MOVE      ZERO,GBALTOT
          MOVE      ZERO,GINVTOT
          MOVE      ZERO,GJRNTOT
.
          MOVE      ZERO,PINVTOT                 * initialise practice totals
          MOVE      ZERO,PAPDTOT
          MOVE      ZERO,PJRNTOT
.
          COMPARE   ONE,COPTION
          IF        @EQUAL
             MOVE      SP20,KEY14                * by invoice #
             CALL      RSTEMP1                   * position at start of file
             CALL      RKTEMP1                   * read next record
          ELSE
             MOVE      SP20,KEY12                * alphabetical
             CALL      RSTEMP2                   * position at start of file
             CALL      RKTEMP2                   * read next record
          ENDIF
          BRANCH       OVRCD,PRIN9500            * no records on file
.
          CALL         HEAD0000                  * records on file
.
.         Get the debtor details
.
PRIN0500  DISPLAY   *P11:24,*EL,*V2LON,PRINNUMB;
.
          MATCH     SAVPRAC,PRINPRAC             * same practice ?
          IF        @EQUAL
             GOTO      PRIN5000                  * yes
          ELSE
             CALL      PTOT0000                  * display prev. prac. totals
             CALL      HEAD0000                  * display new page header
          ENDIF
.
PRIN5000  CALL      DISP0000                     * print record
.
          COMPARE   ONE,COPTION                  * by invoice
          IF        @EQUAL
             CALL      RKTEMP1                   * read next record
          ELSE
             CALL      RKTEMP2                   * read next record
          ENDIF
          BRANCH    OVRCD,PRIN9000               * no more records
          GOTO      PRIN0500                     * process record
.
PRIN9000  DISPLAY   *P1:24,*EL,*V2LON,"** Report Generated **";
          CALL      PTOT0000                     * print last practice totals
          CALL      GTOT0000                     * print grand totals
          CALL      LINE0000                     * draw line across page
          GOTO      PRIN9700
.
PRIN9500  MOVE      SP6,PRINPRAC
          CALL      HEAD0000
.
PRIN9700  DISPLAY   *P1:24,*EL,*V2LON,"** Report Generated **";
          PRINT     *N,*1,"*** End of Report ***"
.
PRIN9999  RETURN
+
.****************************************************************************
.*                            DISP0000                 Called by: PRIN0000  *
.*                  valid record so print it                                *
.****************************************************************************
.
DISP0000  MOVE      PRINNAMR,FMTRESP             * shorten PRA name
.
          MOVE      "Unknown U/R",FMTNAME
          MOVE      ANSP,ANS
          MOVE      PRINDEBT,PURNO            * PMI debtor
          MOVE      PURNO,KEY8
          CALL      RDMAST1                   * read PMI record
          BRANCH    OVRCD,DISP1000            * not on file
.
          MOVE      PSNAME,PACSNAME
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          CALL      PACNAME                      * format name
          MOVE      PACFNAME,FMTNAME
.
DISP1000  COMPARE   FIFTY6,CLNO                  * check for page throw
          GOTO      HEAD0000 IF NOT LESS
.
          PACK      FMTDEBT,ANS,PRINDEBT
          COMPARE   ONE,COPTION                  * by invoice
          IF        @EQUAL
             PRINT     *1,PIPE,*3,PRINNUMB,*12,PIPE,*14,FMTNAME;
          ELSE
             PRINT     *1,PIPE,*3,FMTNAME,*43,PIPE,*45,PRINNUMB;
          ENDIF
.
          PRINT     *54,PIPE,*59,PRINDEBT,*68,PIPE,*69,PRINITOT,*84,PIPE;
.
          ADD       PRINITOT,PINVTOT             * update practice invoice total
.
          ADD       PRINHAMT,PRINPAMT            * calculate amount paid
          ADD       PRINIAMT,PRINPAMT
          ADD       PRINMAMT,PRINPAMT
          ADD       PRINVAMT,PRINPAMT
          ADD       PRINOTHA,PRINPAMT
.
          PRINT     *85,PRINPAMT,*100,PIPE,*101,PRINJAMT,*116,PIPE;
.
          ADD       PRINPAMT,PRINITOT            * calculate credit
          ADD       PRINJAMT,PRINITOT
.
          PRINT     *117,PRINITOT,*132,PIPE
.
          ADD       ONE,CLNO                     * increment line counter
.
          COMPARE   COPTION,THREE                * detailed report ?
          IF        @EQUAL
             PRINT     *1,PIPE,*3,FMTRESP,*43,PIPE,*54,PIPE,*68,PIPE:
                       *84,PIPE,*100,PIPE,*116,PIPE,*132,PIPE,*N:
                       *1,PIPE,*3,PRINPRA1,*43,PIPE,*54,PIPE,*68,PIPE:
                       *84,PIPE,*100,PIPE,*116,PIPE,*132,PIPE,*N:
                       *1,PIPE,*3,PRINPRA2,*43,PIPE,*54,PIPE,*68,PIPE:
                       *84,PIPE,*100,PIPE,*116,PIPE,*132,PIPE,*N:
                       *1,PIPE,*3,PRINPRA3,*31,PRINPOST,*43,PIPE,*54,PIPE:
                       *68,PIPE,*84,PIPE,*100,PIPE,*116,PIPE,*132,PIPE,*N:
                       *1,PIPE,*3,"Bus. Phone: ",PRINTELB,*43,PIPE,*54,PIPE:
                       *68,PIPE,*84,PIPE,*100,PIPE,*116,PIPE,*132,PIPE
.
            ADD       FIVE,CLNO                  * increment line count
          ENDIF
.
          ADD       PRINPAMT,PAPDTOT             * update practice paid total
          ADD       PRINJAMT,PJRNTOT             * update practice journal total
.
DISP9999  RETURN
+
.****************************************************************************
.*                            HEAD0000                 Called by: PRIN0000  *
.*                       print page heading                       DISP0000  *
.****************************************************************************
.
HEAD0000  CALL      HEAD132                      * display page header
.
          PRINT     *38,"FROM : ";
.
          COMPARE   ONE,COPTION                  * by invoice
          IF        @EQUAL
             PRINT     *45,"INVOICE";
             MATCH     SP8,SINVNO
             IF        @EQUAL
                PRINT     *53,START;
             ELSE
                PRINT     *53,SINVNO;
             ENDIF
.
             PRINT     *62,"to";
             MATCH     EINVNO,ZED20
             IF        @EQUAL
                PRINT     *65,FINISH,*N
             ELSE
                PRINT     *65,EINVNO,*N
             ENDIF
          ELSE
             PRINT     *45,"SURNAME";
             MATCH     SP20,SNAME
             IF        @EQUAL
                PRINT     *53,START;
             ELSE
                PRINT     *53,SNAME;
             ENDIF
.
             PRINT     *74,"to";
             MATCH     ENAME,ZED20
             IF        @EQUAL
                PRINT     *77,FINISH,*N
             ELSE
                PRINT     *77,ENAME,*N
             ENDIF
          ENDIF
.
          MATCH     SP6,SPRAC
          IF        @EQUAL
            MOVE      "Start",SPRAC
          ENDIF
          MATCH     ZED6,EPRAC
          IF        @EQUAL
            MOVE      "Finish",EPRAC
          ENDIF
.
          PRINT     *15,"FROM MEDICAL PRACTICE : ",SPRAC," ";
          MOVE      SP30,PRPRDESC
          MOVE      SPRAC,KEY6
          CALL      RDPRPR1                      * read practice record
          PRINT     PRPRDESC," to ",EPRAC," ";
          MOVE      SP30,PRPRDESC
          MOVE      EPRAC,KEY6
          CALL      RDPRPR1                      * read practice record
          PRINT     PRPRDESC,*N
.
          CALL      PRAC0000                     * get medical practice
.
          CALL      LINE0000                     * draw line across page
.
          COMPARE   ONE,COPTION                  * by invoice
          IF        @EQUAL
             PRINT     *1,PIPE,*3,"INVOICE",*12,PIPE,*14,"PATIENT NAME";
          ELSE
             PRINT     *1,PIPE,*3,"PATIENT NAME",*43,PIPE,"INVOICE";
          ENDIF
.
          PRINT     *54,PIPE:
                    *57,"U/R Number",*68,PIPE,*73,"INVOICE",*84,PIPE:
                    *87,"AMOUNT PAID",*100,PIPE,*104,"JOURNALS",*116,PIPE:
                    *119,"BALANCE OF",*132,PIPE
.
          COMPARE   ONE,COPTION                  * by invoice
          IF        @EQUAL
             PRINT     *1,PIPE,*6,"##",*12,PIPE;
          ELSE
             COMPARE   TWO,COPTION               * alphabetic (non-detailed)
             IF        @EQUAL
                PRINT     *1,PIPE,*43,PIPE,*48,"##";
             ELSE
                PRINT     *1,PIPE,*3,"PERSON RESPONSIBLE FOR ACCOUNT",*43,PIPE:
                          *48,"##";
             ENDIF
          ENDIF
.
          PRINT     *54,PIPE,*68,PIPE,*73,"TOTAL":
                    *84,PIPE,*100,PIPE,*116,PIPE,*119,"INVOICE",*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      TEN3,CLNO                    * reset line counter
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            PRAC0000                 Called by: HEAD0000  *
.*                 get the practice details                                 *
.****************************************************************************
.
PRAC0000  MATCH     SP6,PRINPRAC
          IF        @EQUAL
            MOVE      SP30,PRPRDESC
          ELSE
            MOVE      "Unknown practice",PRPRDESC
          ENDIF
.
          MOVE      PRINPRAC,KEY6
          CALL      RDPRPR1                      * read practice record
.
          PRINT     *1,"MEDICAL PRACTICE :",*20,PRINPRAC,*30,PRPRDESC,*N
.
          ADD       TWO,CLNO                     * increment line counter
.
          MOVE      PRINPRAC,SAVPRAC             * save new practice code
.
PRAC9999  RETURN
+
.****************************************************************************
.*                            PTOT0000                 Called by: PRIN0000  *
.*                   print practice totals                                  *
.****************************************************************************
.
PTOT0000  MOVE      PINVTOT,PBALTOT
          ADD       PAPDTOT,PBALTOT
          ADD       PJRNTOT,PBALTOT
.
          IF        CLNO>56
            CALL      HEAD0000                   * print headings
          ELSE
            CALL      LINE0000                   * print line across page
          ENDIF
.          
          PRINT     *1,PIPE,*3,"PRACTICE TOTALS",*68,PIPE,*69,PINVTOT:
                    *84,PIPE,*85,PAPDTOT,*100,PIPE,*101,PJRNTOT,*116,PIPE:
                    *117,PBALTOT,*132,PIPE
.
          ADD       PINVTOT,GINVTOT              * update grand totals
          ADD       PAPDTOT,GAPDTOT
          ADD       PJRNTOT,GJRNTOT
.
          MOVE      ZERO,PINVTOT                 * initialise practice totals
          MOVE      ZERO,PAPDTOT
          MOVE      ZERO,PJRNTOT
.
          ADD       ONE,CLNO                     * increment line counter
.
PTOT9999  RETURN
+
.****************************************************************************
.*                            GTOT0000                 Called by: PRIN0000  *
.*                    print grand totals                                    *
.****************************************************************************
.
GTOT0000  CALL      LINE0000                     * draw line across page
.
          MOVE      GINVTOT,GBALTOT              * calculate final credit
          ADD       GAPDTOT,GBALTOT
          ADD       GJRNTOT,GBALTOT
.
          PRINT     *1,PIPE,*3,"GRAND TOTALS",*68,PIPE,*69,GINVTOT:
                    *84,PIPE,*85,GAPDTOT,*100,PIPE,*101,GJRNTOT,*116,PIPE:
                    *117,GBALTOT,*132,PIPE
.
          ADD       ONE,CLNO                     * increment line counter
.
GTOT9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: PRIN0000  *
.*                      draw line across page                     HEAD0000  *
.*                                                                PTOT0000  *
.*                                                                GTOT0000  *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
          ADD       ONE,CLNO                     * increment line counter
.
LINE9999  RETURN
+
.**************************************************************************
.*                              CREA0000               Called by: ML0000  *
.*             create a new temporary file                                *
.**************************************************************************
.
CREA0000  CALL      KILL0000                     * remove existing file
.
          PACK      CMDLIN1,ISBUILD,TEMPFILE,UKEY
          EXECUTE   CMDLIN1,TASKID               * create temporary index file
.
          OPEN      ACRTEMP1,TEMPFILE            * open temp index file
          OPEN      ACRTEMP2,TEMPFILE
.
CREA9999  RETURN
+
.****************************************************************************
.*                              KILL0000               Called by: ML0000    *
.*               close and erase the temporary file               CREA0000  *
.****************************************************************************
.
KILL0000  CLOSE     ACRTEMP1                     * close file
          CLOSE     ACRTEMP2
.
          PACK      CMDLIN2,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLIN2,TASKID               * erase temp file
.
KILL9999 RETURN
+
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                    *
.****************************************************************************
.
RSTEMP1   READ      ACRTEMP1,KEY14;;
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    ACRTEMP1;PRINPRAC,PRINNUMB,PRINNAME,PRINDEBT,PRINSCAN:
                             PRINITOT,PRINPAMT,PRINHAMT,PRINIAMT,PRINMAMT:
                             PRINVAMT,PRINOTHA,PRINJAMT,PRINDATE:
                             PRINNAMR,PRINPRA1,PRINPRA2,PRINPRA3,PRINPOST:
                             PRINTELB
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMP1   WRITE     ACRTEMP1,KEY14;KEY14,PRINNAME,PRINDEBT,PRINSCAN:
                                   PRINITOT,PRINPAMT,PRINHAMT,PRINIAMT,PRINMAMT:
                                   PRINVAMT,PRINOTHA,PRINJAMT,PRINDATE:
                                   PRINNAMR,PRINPRA1,PRINPRA2,PRINPRA3,PRINPOST:
                                   PRINTELB
          RETURN
.
.         2nd Index I/O routines
.
RSTEMP2   READ      ACRTEMP2,KEY12;;
          RETURN
.
RKTEMP2   MOVE      ZERO,OVRCD
          READKS    ACRTEMP2;PRINPRAC,PRINNUMB,PRINNAME,PRINDEBT,PRINSCAN:
                             PRINITOT,PRINPAMT,PRINHAMT,PRINIAMT,PRINMAMT:
                             PRINVAMT,PRINOTHA,PRINJAMT,PRINDATE:
                             PRINNAMR,PRINPRA1,PRINPRA2,PRINPRA3,PRINPOST:
                             PRINTELB
          GOTO      OVERCOND IF OVER
          RETURN
+
. =========================================================================
.  I/O Includes
. =========================================================================
.
          INC       STD001IO
          INC       TFILENAM                * Generate Temp File Name
          INC       IBASEQIO/INC            * Sequential Numbers File
          INC       WEBERRIO/INC            * Web Server Error Logging
.
          INC       PRIPRADS
.
          INC       PRIINVIO/INC                 * invoice file
..          INC       PRIDBTIO/INC                 * debtor file
          INC       PRIPRAIO/INC                 * medical practice file
          INC       PRIALSIO/INC                 * Medical Prac.all user access
          INC       PRISECIO/INC                 * Medical Prac.security access
.
          INC       PATMA1IO/INC                 * patient master file
