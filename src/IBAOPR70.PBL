.***************************************************************************
.* System    :   Theatre Availability Maintenance                          *
.* Program   :   IBAOPR70                                                  *
.* Desc      :   Theatre Availability Master Listing                       *
.***************************************************************************
.* Date      :   22/10/90                                                  *
.* Author    :   J. Ceniza                                                 *
.* Function  :   The purpose of this program is to be a master listing for *
.*               the OPROPRAFD file. However, as the program that maintains*
.*               this file is not a standard maintenance file, this affects*
.*               this report.                                              *
.* Mods      :                                                             *
.*     V10.07.01 26/10/2015  Steve Armstrong  CAR 323085                   *
.*               Removed declaration for LOWUPP (now defined in IBACOMM)   *
.***************************************************************************
.*     V5.07.01  27/09/1999  Jill Habasque                                 *
.*               Added Active/Inactive Theatre to the report               *
.*               29/10/90.  Fixed up so that display is according to       *
.*               system parameter OPCNODSC.                                *
.*     V5.00     R.Knowles  (18/12/90)  Converted to Version 5             *
.*        V5.01.01  21/01/1991    Justin Coates                            *
.*                  Converted back to Release 5.01                         *
.***************************************************************************
.
.
.$$$$$
.    Theatre Availability Master Listing (IBAOPR70 )
.    ------------------------------------------------
.
.    - Initialisation
.
.    - Display Header
.            - Open Files
.               OPROPRA1
.               OPROPRA2
.               OPRORAA1
.               OPRORAA2
.               CONTROLF
.
.
.    - Display Screen Format
.
.    - Clear working variables
.    - Input Range ( check range is valid )
.      If "?" entered, call OPROPRDS routine
.    - Input Date Range ( check date range is valid )
.
.    - Print Report
.          - this is done by reading through the OPROPRFD file given
.            the operating room ( from the range ).
.            For each operating room the usual availability from Sunday to
.            Saturday is displayed ( in minutes ).  Exceptions are displayed
.            when there is a record found in the OPRORAFD file for the 
.            given date range.  The number of exceptions is then printed.
.
.  END
.
.$$$$$
.*************************************************************************
.
.
          INC       STD001FD
          INC       OPRORAFD/INC
          INC       OPROPRFD/INC
          INC       OPRCONFD/INC
.
ACTFLG    DIM       3
DIM30     DIM       30
ENDCODE   DIM       6
ENDDATE   DIM       8
ENDDESC   DIM       40
EXPREC    FORM      4
NCODE     FORM      1 
PROC      FORM      1
STRTCODE  DIM       6
STRTDESC  DIM       40
STRTDATE  DIM       8
TEMPCODE  DIM       6
VAR       FORM      2
VAR2      FORM      2
.
. ------ CONSTANTS ---------
.
START     INIT      "Start"
FINISH    INIT      "Finish"
ZZZZ      INIT      "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
.
.
PRGNAM    DIM       50
PRGID     INIT      "IBAOPR70"
PRGNAM1   INIT      " Master Listing"
VERSION   INIT      "V12.00.00"
+
.***************************************************************************
.*                              ML0000                                     *
.*                      Controlling Logic (Mainline code)                  *
.***************************************************************************
ML0000    CALL      INIT0000               * initialization and open files
.
ML0100    CALL      DOPT0000               * display options
          CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,ML1000         * Produce report
.
. ---- produce report --------
.
ML1000    CALL      CODE0000               * input start/end codes
          CALL      DATE0000               * keyin start/end date
          CALL      CONTQST                * Ask Ok to continue (Y/N/C) ?
          BRANCH    CEXIT,ML1300:          * (Y)es selected
                          ML1000:          * (N)o selected 
                          ML0100           * (C)ancel selected
ML1300    CALL      REPC0000               * (Y)es selected, print report
          GOTO      ML0100
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialization                               *
.*  The initialization routine is used to display headings and open files.  *
.*  Any other general initialization can also be performed here.            *
.****************************************************************************
INIT0000  DISPLAY   *P56:24,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,FORTY;*81,OPCNODSC
          REP       UPPLOW,OPCNODSC
.
          RESET     OPCNODSC,15
INIT1000  CMATCH    SP1,OPCNODSC
          GOTO      INIT2000 IF NOT EQUAL
          BUMP      OPCNODSC BY -1
          GOTO      INIT2000 IF EOS
          GOTO      INIT1000
.
INIT2000  MOVEFPTR  OPCNODSC,VAR
          RESET     OPCNODSC,VAR
          LENSET    OPCNODSC
          RESET     OPCNODSC
.
          PACK      PRGNAM,OPCNODSC,PRGNAM1
.
          CALL      DISPHEAD                  * display heading
.
          BUMP      OPCNODSC BY 1
          REP       LOWUPP,OPCNODSC
          RESET     OPCNODSC
.
          MOVE      VAR,VAR2
          ADD       TEN3,VAR
          ADD       NINE,VAR2
.
          DISPLAY   *P56:24,"oproraaf";
          OPEN      OPRORAA1,"oproraaf"
          OPEN      OPRORAA2,"oproraaf"
          DISPLAY   *P56:24,"opropraf";
          OPEN      OPROPRA1,"opropraf"
          OPEN      OPROPRA2,"opropraf"
.
INIT9999  RETURN
+
.***************************************************************************
.*                                OPTN0000             Called by: ML0000   *
.*                        get user options or exit                         *
.*                                                                         *
.*    Returns:  EXIT    = FALSE (0)  Valid option selected                 *
.*                        TRUE  (1)  Exit option selected                  *
.*              COPTION = 1  Code sequence option selected                 *
.*                        2  Description option selected                   *
.***************************************************************************
.
. ---- keyin option ----
.
OPTN0000  MOVE      ZERO,COPTION                * initialize Coption   
          DISPLAY   *P17:7,*EF                  * erase rest of screen
          KEYIN     *P17:7,*EL,*DV,UNDLN1:
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION
          GOTO      OPTN9000 IF EQUAL            * exit
          BRANCH    COPTION,OPTN3000
          BEEP                                   * invalid input
          GOTO      OPTN0000
.
OPTN3000  MOVE      FALSE,EXIT
          GOTO      OPTN9999
.
OPTN9000  MOVE      TRUE,EXIT                     * set EXIT = 1
OPTN9999  RETURN
+
.***************************************************************************
.*                        DOPT0000                 Called by : OPTN0000    *
.*                   display option                          : FSCR0000    *   
.*                                                           : SSCR0000    *
.***************************************************************************

DOPT0000  DISPLAY   *P1:3,*EF:                           * select option
                    *P1:4,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Produce Report"
.
          DISPLAY   *P1:7,"Select Option : "
.
          BRANCH    COPTION,DOPT9000
.    
          COMPARE   ZERO,COPTION
          GOTO      DOPT9999 IF EQUAL
.
          BEEP          
          GOTO      DOPT0000
.
DOPT9000  DISPLAY   *P17:7,*V2LON,COPTION
.
DOPT9999  RETURN
.
.***************************************************************************
.*                          CLRC0000                 Called by : DESC0000  *
.*                clear start and end codes and description
.***************************************************************************
CLRC0000  MOVE      SP6,STRTCODE
          MOVE      SP6,ENDCODE
          MOVE      SP30,STRTDESC 
          MOVE      SP30,ENDDESC
          MOVE      SP8,STRTDATE
          MOVE      SP8,ENDDATE
CLRC9999  RETURN
.
.
.***************************************************************************
.*                           CODE0000                     Called by ML0000 *
.*               input the start and ending code                           *
.***************************************************************************
CODE0000  CALL      CLRC0000                     * clear start/end codes
.                                                * and description
          MOVE      ONE,NCODE                    * start of code variable
          MOVE      NINE,CVERT                   * row for start of code
          CALL      FSCR0000                      * display start code/end code 
.                                                 * screen layoout 
CODE1500  CALL      KCOD0000                      * keyin code
.
.  keyin ending code
.
CODE2000  MOVE      TWO,NCODE                     * end of code variable
          MOVE      TEN1,CVERT                    * row for end of code
          CALL      KCOD0000                      * keyin code
          BRANCH    EXIT,CODE5000                 * Invalid range
          GOTO      CODE9999
.
CODE5000  CALL      DOPT0000                      * re-display main option
          GOTO      CODE0000
.
CODE9999  RETURN
.
+
.***************************************************************************
.*                                  FSCR0000           Called by: ML0000   *
.*                  display screen format for code sequence                *
.***************************************************************************
FSCR0000  DISPLAY   *P1:8,*EF:
                    *P1:9,"Starting ",*+,OPCNODSC," : ":
                    *P1:11,"Ending ",*+,OPCNODSC,"   : ":
                    *P1:13,"Starting Date           : ":
                    *P1:15,"Ending Date             : "
.
FSCR9999  RETURN
.
.***************************************************************************
.*                         DEND0000                   Called by : KCOD0000 *
.*         display end code and description                                *
.***************************************************************************
DEND0000  MATCH     ENDCODE,ZZZZ                  * nothing input
          GOTO      DEND1000 IF EQUAL             * yes
.
. an end code and end description displayed.
.
          DISPLAY   *PVAR:11,*EL,*V2LON,ENDCODE,SP2,*HOFF,ENDDESC
          GOTO      DEND9999
.
DEND1000  DISPLAY   *PVAR:11,*EL,*V2LON,FINISH    * display 'finish'
DEND9999  RETURN
.
.***************************************************************************
.*                         DST0000                    Called by : KCOD0000 *
.*         display start code and description                              *
.***************************************************************************
DST0000   MATCH     SP6,STRTCODE                  * nothing input
.
          GOTO      DST1000 IF EQUAL              * yes
.
. -- a code inputted
.
DST0800   DISPLAY   *PVAR:9,*EL,*V2LON,STRTCODE,SP2,*HOFF,STRTDESC  
          GOTO      DST9999
.
DST1000   DISPLAY   *PVAR:9,*EL,*V2LON,START  * display 'Start' in highlight
.
DST9999   RETURN
.
.**************************************************************************
.*                        CLR0000                    Called by ML0000     *
.*                                                             KCOD000    *
.*                clear file variables                                    *
.**************************************************************************
CLR0000   MOVE      SP6,TEMPCODE
          PACK      OPRMDESC,SP30,SP10
CLR9999   RETURN
.
.**************************************************************************
.*                         KCOD0000                  Called by : ML0000   *
.*               keyin the theatre code                                   *
.**************************************************************************
KCOD0000  CALL      CLR0000                    * clear variables 
          KEYIN     *PVAR:CVERT,*EL,*DV,UNDLN6:       
                    *PVAR:CVERT,*V2LON,TEMPCODE:
                    *PVAR:CVERT,*DV,TEMPCODE
.
          CALL      CHEK0000                     * validate user input
          BRANCH    CEXIT,KCOD1000,KCOD0000
.
          BRANCH    NCODE,KCOD0200:              * Start code
                          KCOD0300               * End code
.
. -- start code
.
KCOD0200  CALL      DST0000                       
          GOTO      KCOD8000                     * valid input
.
KCOD0300  CALL      DEND0000
          GOTO      KCOD7500
.
. list theatre codes 
.
KCOD1000  CALL      OPROPRDS                  
.
KCOD3000  DISPLAY   *P1:24,*EL,*+,OPCNODSC," code : "
          KEYIN     *PVAR2:24,*DV,UNDLN6:
                    *PVAR2:24,*V2LON,TEMPCODE:
                    *PVAR2:24,*DV,TEMPCODE
.
          CALL      CHEK0000
          BRANCH    CEXIT,KCOD1000,KCOD3000 
          CALL      DOPT0000                     * display main option
          CALL      FSCR0000                     * redisplay screen
          BRANCH    NCODE,KCOD7000               * input start code
.
KCOD7000  CALL      DST0000                      * display start code & desc.
          BRANCH    NCODE,KCOD8000
.
          CALL      DEND0000                     * display end code & desc
.
KCOD7500  MATCH     STRTCODE,ENDCODE
          GOTO      KCOD9000 IF LESS
.
KCOD8000  MOVE      FALSE,EXIT                   * valid input
          GOTO      KCOD9999
.
KCOD9000  DISPLAY   *P1:24,*EL,*B,"Invalid range. ";
          CALL      HITENTER
          MOVE      TRUE,EXIT                    * invalid range
KCOD9999  RETURN
.
+
.***************************************************************************
.*                                  CHEK0000           Called by: KCOD0000 *
.*                     Validate theatre id. code field                     *
.*                                                                         *
.*   Returns  : CEXIT    =  (0)  If an operator code is entered            * 
.*                               or nothin inputted                        *
.*                         (1)  If a question mark "?" is entered          *
.*                         (2) invalid input                               *
.***************************************************************************
CHEK0000 
          ENDSET    TEMPCODE                 * Pad the field with spaces
          APPEND    SP6,TEMPCODE
          RESET     TEMPCODE
.
.         Check if anything was input and set the exit flag appropriately
.
          MATCH     TEMPCODE,SP6             * Was anything input ?
          GOTO      CHEK9000 IF EQUAL        * No
.
.         Check for a "?". 
.
          CMATCH    QUEST,TEMPCODE           * "?" entered ?
          GOTO      CHEK8000 IF EQUAL        * Yes.
.
CHEK7100  MOVE      TEMPCODE,KEY6
          PACK      OPRMDESC,SP30,SP10
          CALL      RDOPOPR1   
          BRANCH    OVRCD,CHEK7500           * invalid not found
          BRANCH    NCODE,CHEK7200:          * start code
                          CHEK7300           * end code
.
.  get description
.
CHEK7200  MOVE      OPRMDESC,STRTDESC         
          MOVE      TEMPCODE,STRTCODE
          GOTO      CHEK7400
.
CHEK7300  MOVE      OPRMDESC,ENDDESC 
          MOVE      TEMPCODE,ENDCODE
.
CHEK7400  MOVE      ZERO,CEXIT                        * valid input
          GOTO      CHEK9999
.
CHEK7500  MOVE      TWO,CEXIT                       * invalid input
.
          DISPLAY   *P1:24,*EL,*B,"This theatre code does not exists on file. ";
          CALL      HITENTER
          GOTO      CHEK9999

CHEK8000  MOVE      ONE,CEXIT                * A "?" input
          GOTO      CHEK9999
.
. no input, determine whether for start or finish
.
CHEK9000  MOVE      ZERO,CEXIT               * no input
          BRANCH    NCODE,CHEK9500:          * start code
                          CHEK9600           * end code
.
CHEK9500  MOVE      SP6,STRTCODE
          GOTO      CHEK9999
CHEK9600  MOVE      ZZZZ,ENDCODE
.
CHEK9999  RETURN
+
.*****************************************************************************
.*                            DATE0000                   Called by : ML0000  *
.*              keyin the start/end date                                     *
.*****************************************************************************
DATE0000  MOVE      ONE,PROC
          MOVE      ZERO,CCANLDTE
          MOVE      ZERO,CHIGHLT
          MOVE      ZERO,CDEFDTE
          MOVE      VAR,CCOL
          MOVE      TEN3,CVERT                * row for starting date
          DISPLAY   *PVAR:15,*EF             
DATE1000  CALL      KDAT0000
.
. -- keyin ending date
.
DATE2000  MOVE      TEN5,CVERT                * row for ending date   
          MOVE      TWO,PROC
          CALL      KDAT0000
          BRANCH    EXIT,DATE0000             * invalid range
DATE9999  RETURN
.
.*****************************************************************************
.*                            KDAT0000                 Called by : KDAT0000  *
.*              keyin the session date                                       *
.*****************************************************************************
KDAT0000  MOVE      SP2,CDAY
          MOVE      SP2,CMON
          MOVE      SP2,CYEAR
          MOVE      CCC,CCENT
          CALL      KEYDATE
          BRANCH    CQUEST,KDAT0000          * "?" input not allowed
          BRANCH    OVRCD,KDAT8000           * no input
          BRANCH    PROC,KDAT3000:           * start date
                         KDAT4000            * end date
.
KDAT3000  PACK      STRTDATE,CCENT,CYEAR,CMON,CDAY
          GOTO      KDAT9500

KDAT4000  PACK      ENDDATE,CCENT,CYEAR,CMON,CDAY
          GOTO      KDAT8500
.
KDAT8000  BRANCH    PROC,KDAT8100:           * no input for starting date
                         KDAT8200            * no input for ending date
.
KDAT8100  MOVE      SP8,STRTDATE
          DISPLAY   *PVAR:13,*EL,*V2LON,START
          GOTO      KDAT9500
.
KDAT8200  MOVE      ZZZZ,ENDDATE
          DISPLAY   *PVAR:15,*EL,*V2LON,FINISH
.
KDAT8500  MATCH     STRTDATE,ENDDATE         * Ending date >= strtdate
          GOTO      KDAT9500 IF NOT LESS     * yes, valid input
.
. -- invalid input
.
KDAT9000  DISPLAY   *P1:24,*EL,*B,"Invalid date range. ";
          CALL      HITENTER
          MOVE      TRUE,EXIT
          GOTO      KDAT9999
.
KDAT9500  MOVE      FALSE,EXIT
KDAT9999  RETURN
.
.***************************************************************************
.*                     REPC0000                    Called by : ML0000      *  
.*         print the theatre code and avail. time for the range inputted   *
.***************************************************************************
REPC0000  MOVE      ZERO,CPAGENO                    * initialize page no. to 0.
          MOVE      ONE,CNOUNDLN                    * No underlines for previous
          MOVE      ZERO,CLNO                     * initialize no. of records
.                                                   * page
          CLOCK     TIME,CTIMEIS                    * get time report started
          MOVE      SP30,CPHDROPT
          CALL      PAGE0000                        * display headings
          DISPLAY   *P40:24,"Code : "
          PACK      KEY6,STRTCODE
          CALL      RDOPOPR1                     * read file with key value
          BRANCH    OVRCD,REPC1000               * if record not found,read next
          GOTO      REPC4000                     * write record
.
REPC1000  CALL      RKOPOPR1                        * read next record in file
          BRANCH    OVRCD,REPC8000                  * branch if end of file read
.[
.
          MATCH     OPRMROOM,ENDCODE                 * Code in file within  
.                                                    * range as matched to 
.                                                    * end of code range ?
          GOTO      REPC8000 IF LESS                 * No - print end of report
.
.   code within starting and ending range
.
REPC4000  DISPLAY   *P47:24,*V2LON,OPRMROOM;       * display code printed
REPC4300  COMPARE   "55",CLNO                     * New page needed ?
          GOTO      REPC5000 IF NOT LESS          * Yes
.
. -- print details
.
          CALL      PRTC0000                      * print code and description
.                                                 * and available mins.    
          CALL      EXCP0000                      * print exceptions if any
          GOTO      REPC1000                        
.                                                 * by going through *ORAFD file
.
REPC5000  CALL      PAGE0000
          CALL      PRTC0000                      * print code and description
.                                                 * and available mins.    
          CALL      EXCP0000                      * print exceptions if any
          GOTO      REPC1000 
.
REPC8000  PRINT     *1,"*** End of Report *** " 
         
.
REPC9999  RETURN
.
.***************************************************************************
.*                     EXCP0000                    Called by : ML0000      *  
.*         print the clin. code and user name for the range inputted        *
.*         as start and end code                                           *
.***************************************************************************
EXCP0000  MOVE      ZERO,EXPREC                   * initialize no. of records
          PACK      KEY14,OPRMROOM,STRTDATE
          CALL      RDOPORA2                     * read file with key value
          BRANCH    OVRCD,EXCP1000               * if record not found,read next
          GOTO      EXCP4000                     * write record
.
EXCP1000  CALL      RKOPORA2                     * read next record in file
          BRANCH    OVRCD,EXCP8000                  * branch if end of file read
.

          MATCH     OPRAROOM,OPRMROOM                * same room
          GOTO      EXCP8000 IF NOT EQUAL            * no
.
          MATCH     OPRADATE,ENDDATE                 * Code in file within  
.                                                    * range as matched to 
.                                                    * end of code range ?
          GOTO      EXCP8000 IF LESS                 * No - print end of report
.
.
. -- print exception details 
.
EXCP4000  ADD       ONE,CLNO                    * increment record count
          ADD       ONE,EXPREC
          CALL      PRTE0000                      * print code and description
          GOTO      EXCP1000
.
.
EXCP8000  COMPARE   ZERO,EXPREC                   * Any exception records
          GOTO      EXCP9999 IF EQUAL             * no
.
          PRINT     *N,*1,"Number of exceptions = ",EXPREC,*N
          ADD       TWO,CLNO
.
EXCP9999  RETURN
.
.***************************************************************************
.*                PRTC0000                           Called by : REPC0000  *
.*            print record details                                         *
.***************************************************************************
PRTC0000  MOVE      "Yes",ACTFLG
          COMPARE   ONE,OPRMSTAT
          IF        @EQUAL
            MOVE      "No ",ACTFLG
          ENDIF
. 
          PRINT     *1,OPCNODSC,*20,": ",*22,OPRMROOM,SP2,OPRMDESC,*N
          PRINT     *1,"Active",*20,": ",*22,ACTFLG,*N
          PRINT     *1,"Usual Availability : Sunday",*35,"- ":
                    OPRMSUN," minutes":
                    *N,*22,"Monday",*35,"- ",OPRMMON," minutes":
                    *N,*22,"Tuesday",*35,"- ",OPRMTUE," minutes":
                    *N,*22,"Wednesday",*35,"- ",OPRMWED," minutes":
                    *N,*22,"Thursday",*35,"- ",OPRMTHU," minutes":
                    *N,*22,"Friday",*35,"- ",OPRMFRI," minutes":
                    *N,*22,"Saturday",*35,"- ",OPRMSAT," minutes":
                    *N,*22,"Sunday",*35,"- ",OPRMSUN," minutes",*N
          ADD       TEN1,CLNO
.
PRTC9999  RETURN
.
.***************************************************************************
.*                PRTE0000                           Called by : EXCP0000  *
.*            print exception details                                      *
.***************************************************************************
PRTE0000  UNPACK    OPRADATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          COMPARE   ONE,EXPREC                       * 1st record
          GOTO      PRTE2000 IF NOT EQUAL            * no
.
          PRINT     *1,"Exceptions",*20,": ":
                    *22,CPCDATE,*35,"- ",OPRAVAIL," minutes"
          GOTO      PRTE9999
.
PRTE2000  PRINT     *22,CPCDATE,*35,"- ",OPRAVAIL," minutes"
PRTE9999  RETURN
          
.
.***************************************************************************
.*                    PAGE0000                        Called by : REPC0000 *
.*        increments page number and displays all necessary heading        *
.*        ie HEAD80 and starting and ending codes and description         *
.***************************************************************************
PAGE0000  CALL      HEAD80                      * print heading ( 1st 3 lines) 
.
.
PAGE1000  MATCH     SP6,STRTCODE              * Start ?
          GOTO      PAGE1500 IF EQUAL         * yes
 
          PRINT     *20,OPCNODSC," : ",STRTCODE,SP1,"to ";
          GOTO      PAGE1600

PAGE1500  PRINT     *20,OPCNODSC," : ",START,SP1,"to ";
 
PAGE1600  MATCH     ENDCODE,ZZZZ               * Finish ?
          GOTO      PAGE1900 IF NOT EQUAL      * no
.
          PRINT     *48,FINISH
          GOTO      PAGE2000
.
PAGE1900  PRINT     *48,ENDCODE
          GOTO      PAGE2000
.
PAGE2000  MATCH     SP8,STRTDATE              * starting date = Start ?
          GOTO      PAGE3000 IF EQUAL         * yes
.
          UNPACK    STRTDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *20,"Starting Date   : ",CPCDATE
          GOTO      PAGE3500
.
PAGE3000  PRINT     *20,"Starting Date   : ",START
.
PAGE3500  MATCH     ENDDATE,ZZZZ
          GOTO      PAGE4000 IF EQUAL           * ending date = Finish ?
.
          UNPACK    ENDDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          PRINT     *20,"Ending Date     : ",CPCDATE,*N
          GOTO      PAGE5000
.
PAGE4000  PRINT     *20,"Ending Date     : ",FINISH,*N
PAGE5000  ADD       TEN,CLNO
PAGE9999  RETURN
+
.***************************************************************************
.
          INC       STD001IO
          INC       OPROPRIO/INC
          INC       OPRORAIO/INC
          INC       OPROPRDS                * clin. ? mark routine
................................................................................
