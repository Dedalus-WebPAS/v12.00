. **********************************************************************
. * System    :   Common                                               *
. * Program   :   IBASYS13.PBL                                         *
. * Desc      :   GST Rates Maintenance                                *
. *                                                                    *
. * Function  :   Maintain GST codes, amounts & effective dates        *
. **********************************************************************
. * Date      :   14/02/2000                                           *
. * Author    :   Davin                                                *
. * Mods      :                                                        *
. **********************************************************************
. * C2.09.B01 09.11.2000  Sandra Barcham                               *
. *           Add BAS Code                                             *
. **********************************************************************
. * C2.00.01  22/03/2000  Jill Habasque                                *
. *           Mods to adding effective dates                           *
. **********************************************************************
+
          INC       STD001FD
          INC       STDHLPDF
          INC       STDKWSDF
          INC       IBABASFD/INC            * BAS Master file
          INC       IBACONFD/INC            * controlf file
          INC       IBAGSTFD/INC            * GST Master file
          INC       IBAGEDFD/INC            * GST Rates file
.
. ----- Program Variables -----
.
ADDFLAG   FORM      1
COUNT     FORM      2
CURDATE   DIM       8
DIM8      DIM       8
DISPAMT   FORM      3.2[10]                 * display GST % rates
DISPDTE   DIM       8[10]                   * display GST effective dates
.
GSTACTV   FORM      1                       * GST active indicator (0=Y/1=N)
GSTAMNT   FORM      3.2                     * GST percentage amount
GSTCODE   DIM       6                       * GST code
GSTDESC   DIM       30                      * GST description
GSTEDAT   DIM       8                       * GST effective date
.
SAVCOUNT  FORM      2
SAVCVERT  FORM      2
.
. ----- Program Constants -----
.
ZED30     INIT      "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
.
PRGID     INIT      "IBASYS13"
PRGNAM    INIT      "GST Rates Maintenance"
VERSION   INIT      "V12.00.00"
+
.******************************************************************************
.*                                  ML0000                                    *
.*                                Main Module                                 *
.******************************************************************************
ML0000    CALL      INIT0000                * initialise vars & open files
.
ML1000    CALL      PGST0000                * process GST codes
          BRANCH    EXIT,ML9999
.
          GOTO      ML1000
.
ML9999    CHAIN     PGM
+
.******************************************************************************
.*                                   INIT0000             Called by: ML0000   *
.*                        Initialise Variable & Open Files                    *
.******************************************************************************
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*107,IBCNUBAS
.
          DISPLAY   *P64:24,"ibabasaf";
          OPEN      IBABASA1,"ibabasaf"
          OPEN      IBABASA2,"ibabasaf"
.
          DISPLAY   *P64:24,"ibagstaf";
          OPEN      IBAGSTA1,"ibagstaf"
          OPEN      IBAGSTA2,"ibagstaf"
.
          DISPLAY   *P64:24,"ibagedaf";
          OPEN      IBAGEDA1,"ibagedaf"
.
INIT9999  RETURN
+
.******************************************************************************
.*                                  PGST0000              Called by: ML0000   *
.*                              Process GST Codes                             *
.******************************************************************************
PGST0000  MOVE      ZERO,CCITEM
          DISPLAY   *P1:4,*EF:
                    *P1:4,"    GST Code         :"
.
PGST1000  CALL      KGST0000                     * keyin GST code
          BRANCH    EXIT,PGST9500
.
          CALL      DSPS0000                     * display screen layout
          CALL      CFLD0000                     * clear display fields
          CALL      CLRV0000                     * clear GST variables
.
          PACK      KEY6,GSTCODE
          CALL      RDIBGS1                      * see if code on ibagstaf
          BRANCH    OVRCD,PGST2000
.
          MOVE      IBGSDESC,GSTDESC             * set defaults
          MOVE      IBGSACTV,GSTACTV
          MOVE      IBGSBASC,IBBABASC
          CALL      DFLD0000                     * display current fields
          GOTO      PGST3000
.
PGST2000  CALL      KDSC0000                     * keyin GST description
          CALL      KACT0000                     * keyin GST active indicator
          IF        IBCNUBAS=1
            CALL      KBAS0000                     * keyin BAS active indicator
          ENDIF
PGST3000  CALL      LOAD0000                     * load dates/amnts into array
PGST4000  CALL      DDTE0000                     * display effective dates
          BRANCH    EXIT,PGST5000
.
          IF        ADDFLAG=1
            CALL      PUTSCR00
          ENDIF
          CALL      KDTE0000                     * keyin effective date
          BRANCH    EXIT,PGST0000
.
PGST5000  CALL      SELI0000                     * select item/add/post/cancel
          MOVE      ZERO,ADDFLAG
          COMPARE   ZERO,CCITEM
          GOTO      PGST7000 IF EQUAL            * post
          GOTO      PGST0000 IF LESS             * cancel
.
          COMPARE   "999",CCITEM
          GOTO      PGST8000 IF EQUAL            * add item
.
          COMPARE   "998",CCITEM
          GOTO      PGST6000 IF EQUAL            * delete item
.
          IF        IBCNUBAS=1
            PERFORM   CCITEM,KDSC0000,KACT0000,KBAS0000
          ELSE
            PERFORM   CCITEM,KDSC0000,KACT0000
          ENDIF
          IF        (CCITEM > 3) & (CCITEM <= SAVCOUNT)
            GOTO      PGST5000
.           CALL      KDTE0000                   * keyin date/rate
.           BRANCH    EXIT,PGST4000              * redisplay array
          ENDIF
          GOTO      PGST5000
.
PGST6000  CALL      DELE0000                     * delete item
          MOVE      ZERO,CCITEM
          GOTO      PGST3000                     * reload array from ibagedaf
.
PGST7000  CALL      POST0000                     * post to ibagstaf & ibagedaf
          CALL      LOAD0000
          CALL      DDTE0000
          GOTO      PGST0000
.
PGST8000  CALL      GETSCR00
.         CALL      POST0000                     * post current array contents
          CALL      CLAR0000                     * clear array before adding
          MOVE      ZERO,CCITEM
          MOVE      ONE,ADDFLAG
          GOTO      PGST4000                     * redisplay array contents
.
PGST9000  MOVE      ZERO,EXIT
          GOTO      PGST9999
.
PGST9500  MOVE      ONE,EXIT
PGST9999  RETURN
+
.******************************************************************************
.*                                  SELI0000              Called by: PGST0000 *
.*                            Select or Add an Item                           *
.******************************************************************************
SELI0000  MOVE      ZERO,CCITEM
          MOVE      SP10,CCITEMD
          DISPLAY   *P1:24,"Select Item, (",*V2LON,"A",*HOFF,")dd, (":
                           *V2LON,"D",*HOFF,")elete, (":
                           *V2LON,"P",*HOFF,")ost, (":
                           *V2LON,"C",*HOFF,")ancel ? "
          KEYIN     *P50:24,*EL,*V2LON,*JR,CCITEMD;
          REP       UPPLOW,ANS
.
          RESET     CCITEMD
          GOTO      SELI0000 IF EOS
.
          REP       UPPLOW,CCITEMD
.
          MATCH     "  C",CCITEMD
          GOTO      SELI6000 IF EQUAL
.
          MATCH     "  A",CCITEMD
          GOTO      SELI7000 IF EQUAL
.
          MATCH     "  D",CCITEMD
          GOTO      SELI8000 IF EQUAL
.
          MATCH     "  P",CCITEMD
          GOTO      SELI9000 IF EQUAL
.
          TYPE      CCITEMD
          GOTO      SELI5000 IF NOT EQUAL
.
          MOVE      CCITEMD,CCITEM               * select item
          COMPARE   ONE,CCITEM
          GOTO      SELI5000 IF LESS
.
          COMPARE   "998",CCITEM                 * don't allow as selection
          GOTO      SELI0000 IF EQUAL
.
          COMPARE   "999",CCITEM                 * don't allow as selection
          GOTO      SELI0000 IF EQUAL
.
          GOTO      SELI9999
.
SELI5000  BEEP
          GOTO      SELI0000
.
SELI6000  MOVE      "-1",CCITEM                  * cancel
          GOTO      SELI9999
.
SELI7000  MOVE      "999",CCITEM                 * add item
          GOTO      SELI9999
.
SELI8000  MOVE      "998",CCITEM                 * delete item
          GOTO      SELI9999
.
SELI9000  MOVE      "0",CCITEM                   * post
SELI9999  RETURN
+
.******************************************************************************
.*                                  DSPS0000              Called by: PGST0000 *
.*                            Display Screen Layout                           *
.******************************************************************************
DSPS0000  DISPLAY   *P1:6,*EF,*V2LON," 1",*HOFF,". Description      :":
                    *P1:7,*V2LON," 2",*HOFF,". Active/Inactive  :"
          IF        IBCNUBAS=1
            DISPLAY   *P1:8,*V2LON," 3",*HOFF,". BAS Code         :"
          ENDIF
          DISPLAY   *P5:10,*ULON,"Effective Date",*P25:10,"% Rate"
DSPS9999  RETURN
+
.******************************************************************************
.*                                  DFLD0000              Called by: PGST0000 *
.*                          Display Fields On Screen                          *
.******************************************************************************
DFLD0000  DISPLAY   *P25:6,*V2LON,IBGSDESC,*P25:7,IBGSACTV:
                    *P45:7,*HOFF,"0 = Active / 1 = Inactive"
          IF        IBCNUBAS=1
            DISPLAY   *P25:8,*V2LON,IBGSBASC,*HOFF,*P45:8,IBBADESC
          ENDIF
DFLD9999  RETURN
+
.******************************************************************************
.*                                  CFLD0000              Called by: PGST0000 *
.*                            Clear Display Fields                            *
.******************************************************************************
CFLD0000  DISPLAY   *P26:6,*EL,*P25:7,*EL,*P25:8,*EL
CFLD9999  RETURN
+
.******************************************************************************
.*                                   CLRV0000             Called by: PGST0000 *
.*                              Clear GST Variables                           *
.******************************************************************************
CLRV0000  MOVE      ZERO,GSTACTV
          MOVE      ZERO,GSTAMNT
          UNPACK    SP70,GSTDESC,GSTEDAT
          MOVE      ZERO,IBGSACTV
          UNPACK    SP70,IBGSCODE,IBGSDESC,IBGSBASC,IBBABASC,IBGSSPAR
          MOVE      ZERO,IBGEAMNT
          UNPACK    SP70,IBGECODE,IBGEEDAT,IBGESPAR
CLRV9999  RETURN
+
.******************************************************************************
.*                                  CLAR0000              Called by: ML0000   *
.*                                 Clear Array                                *
.******************************************************************************
CLAR0000  MOVE      ONE,COUNT
          REPEAT
            MOVE      SP8,DISPDTE[COUNT]
            MOVE      ZERO,DISPAMT[COUNT]
            ADD       ONE,COUNT
          UNTIL     COUNT > 10
CLAR9999  RETURN
+
.******************************************************************************
.*                                  KGST0000              Called by: PGST0000 *
.*                             Keyin The GST Code                             *
.******************************************************************************
KGST0000  MOVE      SP6,GSTCODE
          MOVE      TWO,CKEYTYP             * don't validate in keyin routine
          MOVE      ONE,INACTV             * show active & inactive codes
          MOVE      "25",CCOL
          MOVE      "4",CVERT
.
. ----- Enter GST code -----
.
          MOVE      SP10,IBGSCODE 
          CALL      KIBGSA00                * keyin routine
          BRANCH    EXIT,KGST9500,KGST9500
.
          MOVE      IBGSCODE,GSTCODE        * keyed-in code
          MATCH     UNDLN70,GSTCODE
          GOTO      KGST9500 IF EQUAL
.
          MOVE      SP70,IBBADESC
          PACK      KEY3,IBGSBASC,SP70
          CALL      RDIBBA1
.
KGST9000  MOVE      ZERO,EXIT
          GOTO      KGST9999
.
KGST9500  MOVE      ONE,EXIT
KGST9999  RETURN
+
.******************************************************************************
.*                                  KDTE0000              Called by: ML0000   *
.*                          Keyin The Effective Date                          *
.******************************************************************************
KDTE0000  MOVE      "5",CCOL
          MOVE      "9",CVERT
          MOVE      ONE,CCANLDTE                 * Blank cancel default
          MOVE      ZERO,CHIGHLT                 * Use highlight
.
          IF        CCITEM <> 0
            ADD       CCITEM,CVERT               * position of selection
            ASSIGN    (CCITEM-2),COUNT           * select variable in array
            MOVE      DISPDTE[COUNT],KEY8        * get date from array
          ELSE
            MOVE      TEN1,CVERT
.           MOVE      SAVCVERT,CVERT
            DISPLAY   *P3:CVERT,*EL,*V2LON,*HOFF,""
            ASSIGN    (SAVCOUNT-2),COUNT
            MOVE      SP8,KEY8                   * new code, no defaults exist
          ENDIF
.
. ----- Enter date -----
.
          CALL      IBACLOCK
          MOVE      "20000701",DIM8
.         PACK      DIM8,CCC,CYY,CMM,CDD         * current date
.         REP       " 0",DIM8
          MATCH     SP8,KEY8
          IF        @EQUAL
            MOVE      CCC,CCENT
            UNPACK    SP6,CYEAR,CMON,CDAY        * No default
          ELSE
            MATCH     DIM8,KEY8
            IF        @LESS
              DISPLAY   *P1:24,*EL,*B,"Date already past. ";
              CALL      HITENTER
              GOTO      KDTE9500
            ENDIF
            UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY   * default date
          ENDIF
KDTE5000  CALL      KEYDATE                      * Keyin date
          BRANCH    OVRCD,KDTE9500               * Nothing entered
.
          PACK      GSTEDAT,CCENT,CYEAR,CMON,CDAY
          REP       " 0",GSTEDAT
          MATCH     DIM8,GSTEDAT
          IF        @LESS
            DISPLAY   *P1:24,*EL,*B,"Date Prior to 01/07/2000. ";
            CALL      HITENTER
            UNPACK    DISPDTE[COUNT],CCENT,CYEAR,CMON,CDAY  * default existing
            GOTO      KDTE5000
          ENDIF
          PACK      KEY14,GSTCODE,GSTEDAT
          CALL      RAIBGE1
          IF        OVRCD <> 1
            DISPLAY   *P1:24,*EL,*B,"Date already on file. ";
            CALL      HITENTER
            UNPACK    DISPDTE[COUNT],CCENT,CYEAR,CMON,CDAY  * default existing
            GOTO      KDTE5000
          ENDIF
          CALL      RKIBGE1
          BRANCH    OVRCD,KDTE6000
          MATCH     GSTCODE,IBGECODE
          GOTO      KDTE6000 IF NOT EQUAL
.
          MOVE      "Date Cannot be Prior to Effective Date - ",DISPMSG
          CALL       MESSAGE1
          UNPACK     DISPDTE[COUNT],CCENT,CYEAR,CMON,CDAY
          GOTO       KDTE5000
          
KDTE6000  MOVE      GSTEDAT,DISPDTE[COUNT]       * put new date in array
.
          CALL      KAMT0000                     * keyin GST % rate
.
KDTE9000  MOVE      ZERO,EXIT
          GOTO      KDTE9999
.
KDTE9500  MOVE      ONE,EXIT
KDTE9999  RETURN
+
.******************************************************************************
.*                                  KAMT0000              Called by: PGST0000 *
.*                       Keyin The GST Percentage Amount                      *
.******************************************************************************
KAMT0000  MOVE      "25",CCOL
.
          MOVE      DISPAMT[COUNT],GSTAMNT       * set default
.
. ----- Enter GST % amount -----
.
KAMT5000  KEYIN     *PCCOL:CVERT,*EL,*V2LON,*DV,GSTAMNT:
                    *PCCOL:CVERT,*RV,GSTAMNT:
                    *PCCOL:CVERT,*DV,GSTAMNT
.
          MOVE      GSTAMNT,DISPAMT[COUNT]       * put new rate in array
          CALL      CONTQST
          IF        CEXIT=1
            CALL      POST0000
            CALL      LOAD0000
            CALL      DDTE0000
          ELSE
            GOTO      KAMT9500
          ENDIF
.
KAMT9000  MOVE      ZERO,EXIT
          GOTO      KAMT9999
.
KAMT9500  MOVE      ONE,EXIT
KAMT9999  RETURN
+
.******************************************************************************
.*                                  DDTE0000              Called by: ML0000   *
.*                           Display Effective Dates                          *
.******************************************************************************
DDTE0000  DISPLAY   *P1:11,*EF
          MOVE      "12",CVERT
          MOVE      ONE,COUNT
          IF        IBCNUBAS=1
            MOVE      FOUR,FORM2                  * screen selection
          ELSE
            MOVE      THREE,FORM2                  * screen selection
          ENDIF
          REPEAT
            PACK      KEY8,DISPDTE[COUNT],SP8    * get date from array
            MATCH     SP8,KEY8
            GOTO      DDTE9000 IF EQUAL
.
            UNPACK    KEY8,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
            REP       " 0",CPCDATE
.
. ---- display date & rate from ibagedaf
.
            DISPLAY   *P1:CVERT,*EL,*V2LON,FORM2,*HOFF,". ",*V2LON,CPCDATE:
                      *P25:CVERT,DISPAMT[COUNT]
.
            ADD       ONE,COUNT                  * array item counter
            ADD       ONE,FORM2                  * selection counter
            ADD       ONE,CVERT                  * screen position
          UNTIL     COUNT > 10
.
DDTE9000  IF        COUNT = 1
            MOVE      ZERO,EXIT                  * no records = new code
            MOVE      CVERT,SAVCVERT             * save screen position
            ASSIGN    (COUNT+2),SAVCOUNT         * actual selection on screen
            GOTO      DDTE9999
          ENDIF
DDTE9500  MOVE      ONE,EXIT                     * records exist
          MOVE      CVERT,SAVCVERT               * save screen position
          ASSIGN    (COUNT+1),SAVCOUNT           * actual selection on screen
DDTE9999  RETURN
+
.******************************************************************************
.*                                  LOAD0000              Called by: ML0000   *
.*                       Load Dates & Amounts into array                      *
.******************************************************************************
LOAD0000  CALL      CLAR0000                     * clear array
          MOVE      ONE,COUNT
          PACK      KEY14,GSTCODE,ZED30
          CALL      RSIBGE1
LOAD1000  CALL      RPIBGE1                      * loop back through ibagedaf
          BRANCH    OVRCD,LOAD9999
.
          MATCH     GSTCODE,IBGECODE             * check if correct code
          GOTO      LOAD9999 IF NOT EQUAL
.
          MOVE      IBGEEDAT,DISPDTE[COUNT]      * get date & rate from files
          MOVE      IBGEAMNT,DISPAMT[COUNT]
.
          ADD       ONE,COUNT
          COMPARE   COUNT,TEN
          GOTO      LOAD9999 IF LESS
.
          GOTO      LOAD1000                     * next record
.
LOAD9999  RETURN
+
.******************************************************************************
.*                                  DELE0000              Called by: PGST0000 *
.*                       Delete Dates & Amounts from ibagedaf                 *
.******************************************************************************
DELE0000  MOVE      ZERO,FORM2
          CALL      IBACLOCK
          PACK      CURDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURDATE
          KEYIN     *P1:24,*EL,"Enter item to delete: ",*V2LON,FORM2;
          IF        IBCNUBAS=1
            ASSIGN    (FORM2-3),FORM2                   * set to actual item
          ELSE
            ASSIGN    (FORM2-2),FORM2                   * set to actual item
          ENDIF
          COMPARE   ONE,FORM2
          GOTO      DELE9999 IF LESS
.
          PACK      KEY14,GSTCODE,DISPDTE[FORM2]
          CALL      RAIBGE1                           * see if on file
          BRANCH    OVRCD,DELE9999
.
          MATCH     DISPDTE[FORM2],CURDATE
          GOTO      DELE9000 IF NOT LESS
.
          CALL      DELQST                            * yes/no/cancel
          COMPARE   ONE,CEXIT
          GOTO      DELE9999 IF NOT EQUAL
.
          CALL      DEIBGE1                           * delete record
          GOTO      DELE9999
.
DELE9000  DISPLAY  *P1:24,*V2LON,"Unable to remove past/current records.",*HOFF;
          CALL      HITENTER
          GOTO      DELE0000
.
DELE9999  RETURN
+
.******************************************************************************
.*                                  KDSC0000              Called by: PGST0000 *
.*                            Keyin The Description                           *
.******************************************************************************
KDSC0000  MOVE      "25",CCOL
          MOVE      "6",CVERT
.
. ----- Enter GST description -----
.
KDSC5000  KEYIN     *PCCOL:CVERT,*EL,*V2LON,*DV,GSTDESC:
                    *PCCOL:CVERT,*RV,GSTDESC:
                    *PCCOL:CVERT,*DV,GSTDESC
.
KDSC9000  MOVE      ZERO,EXIT
          GOTO      KDSC9999
.
KDSC9500  MOVE      ONE,EXIT
KDSC9999  RETURN
+
.******************************************************************************
.*                                  KACT0000              Called by: PGST0000 *
.*                       Keyin The GST Active Indicator                       *
.******************************************************************************
KACT0000  MOVE      "25",CCOL
          MOVE      "7",CVERT
.
. ----- Enter GST code -----
.
KACT5000  DISPLAY   *P45:7,"0 = Active / 1 = Inactive"
          KEYIN     *PCCOL:CVERT,*V2LON,*DV,GSTACTV:
                    *PCCOL:CVERT,*RV,GSTACTV:
                    *PCCOL:CVERT,*DV,GSTACTV
.
          COMPARE   ZERO,GSTACTV                 * can only be 0 or 1
          IF        !@EQUAL
            COMPARE   ONE,GSTACTV
            IF        !@EQUAL
              BEEP
              GOTO    KACT5000
            ENDIF
          ENDIF
.
KACT9000  MOVE      ZERO,EXIT
          GOTO      KACT9999
.
KACT9500  MOVE      ONE,EXIT
KACT9999  RETURN
+
.******************************************************************************
.*                                  KBAS0000              Called by: PGST0000 *
.*                       Keyin The BAS Code                                   *
.******************************************************************************
KBAS0000  MOVE      "25",CCOL
          MOVE      "8",CVERT
.
. ----- Enter GST code -----
.
KBAS5000  MOVE      ZERO,CKEYTYP
          CALL      KIBBAA00
          BRANCH    EXIT,KBAS9500,KBAS9800
.
          COMPARE   ZERO,IBBAACTV                 * can only be 0 or 1
          IF        !@EQUAL
            MOVE      "BAS Code Inactive - ",DISPMSG
            CALL      MESSAGE1
            GOTO      KBAS5000
          ENDIF
          DISPLAY   *P45:8,IBBADESC
.
KBAS9000  MOVE      ZERO,EXIT
          GOTO      KBAS9999
.
KBAS9500  MOVE      ZERO,EXIT
          MOVE      SP70,IBBABASC
          DISPLAY   *P45:8,*EL
          GOTO      KBAS9999
.
KBAS9800  MOVE      ONE,EXIT
          GOTO      KBAS9999
KBAS9999  RETURN
+
.******************************************************************************
.*                                   POST0000             Called by: PGST0000 *
.*                            Post to GST Rates File                          *
.******************************************************************************
POST0000  MOVE      GSTCODE,IBGSCODE             * set up variables
          MOVE      GSTDESC,IBGSDESC
          MOVE      GSTACTV,IBGSACTV
          MOVE      IBBABASC,IBGSBASC
          PACK      IBGSSPAR,SP30
.
          PACK      KEY6,IBGSCODE
          CALL      RAIBGS1
          IF        OVRCD <> 1
            CALL      UPIBGS1                    * update GST Master file
          ELSE
            CALL      WRIBGS1                    * write to GST Master file
          ENDIF
.
          MOVE      GSTCODE,IBGECODE             * set up variables
          MOVE      ONE,COUNT
          REPEAT
            MATCH     SP8,DISPDTE[COUNT]
            GOTO      POST9999 IF EQUAL
.
            MOVE      DISPDTE[COUNT],IBGEEDAT    * set up effective date
            MOVE      DISPAMT[COUNT],IBGEAMNT    * set up rate
            PACK      IBGESPAR,SP30
.
            PACK      KEY14,IBGECODE,IBGEEDAT
            CALL      RAIBGE1
            IF        OVRCD <> 1
              CALL      UPIBGE1                  * update GST Rates file
            ELSE
              CALL      WRIBGE1                  * write to GST Rates file
            ENDIF
            ADD       ONE,COUNT
          UNTIL     COUNT > 10
.
POST9999  RETURN
+
.==============================================================================
.
          INC       STD001IO
.
          INC       STDHLPCD
          INC       STDKWSCD
          INC       IBABASKY                * BAS code keyin
          INC       IBAGKIKY                * GST code keyin
          INC       IBAGSTKY                * GST code keyin
          INC       IBAGSTIO/INC            * GST Master file
          INC       IBABASIO/INC            * BAS Master file
          INC       IBAGEDIO/INC            * GST Rates file
+
