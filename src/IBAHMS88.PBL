.******************************************************************************
.* System         : Patient Billing                                           *
.* Program        : IBAHMS88.PBL                                              *
.* Name           : G/L Revenue Extract for NZ Private                        *
.******************************************************************************
.* Date           : 26/06/2007                                                *
.* Author         : J.Tan                                                     *
.* Function       : Extract Debtor transaction table                          *
.*                     1. Create Extract                                      *
.*                  Option 1 will loop through patdtraf, aaedtref and outdtrof*
.*                           table for records that haven't yet been extracted*
.*                           where Batch details is blank                     *
.*                                                                            *
.* Modifications  :                                                           *
.*                                                                            *
.*----------------------------------------------------------------------------*
.* V12.00.01 26/05/2025  J.Tan          TSK 0955096                           *
.*           Added Alphanumeric visit number changes                          *
.* V11.05.01 14/02/2025 J.Tan           TSK 0946490                           *
.*           Recompiled for PATCATBI - Changes for MV CWO Payment Model       *
.* V11.04.07 19/03/2024  J.Tan          TSK 0943949                           *
.*           Recompiled for NZPCATBI - Checking for FFW with Win/Loss         *
.* V11.04.06 15/03/2024  J.Tan          TSK 0910994                           *
.*           Recompiled for CMXMATRX                                          *
.* V11.04.05 20/02/2024  J.Tan          TSK 0942976                           *
.*           Fixed Win/Loss for multi contract procedure                      *
.* V11.04.04 29/01/2024  Jacob Jackson  TSK 0919335                           *
.*           Add HF History includes                                          *
.* V11.04.03 29/01/2024  Jacob Jackson  TSK 0919335                           *
.*           Add new local variable and recompile for GETTFEES                *
.* V11.04.02 18/01/2024  J.Tan          TSK 0941108                           *
.*           Recompiled for NZPCATBI - fixed W/L amount                       *
.* V11.04.01 21/12/2023  J.Tan          TSK 0941108                           *
.*           Mod to initialise CPRCNUMB - Number of procedures                *
.* V11.03.02 21/03/2023  Ebon Clements      TSK 0909393                       *
.*           Added hospital to oprsesaf(1-6) and oprdetfa(1&5) indexes        *
.* V11.03.01 12/01/2023  J.Tan          TSK 0900145                           *
.*           Recompiled for NZPCATBI - Win/Loss for each procedure code       *
.* V11.02.01 29/06/2022  J.Tan           TSK 0914045                          *
.*           Recompiled for NZPCATBI-check for next available Contract Funding*
.* V11.02.01 29/06/2022  J.Tan           TSK 0914045                          *
.*           Recompiled for NZPCATBI-check for next available Contract Funding*
.* V11.01.04 29/09/2021  J.Tan          TSK 0901515                           *
.*           Recompiled for CMXMATRX - Added Primary Proc.to Matrix           *
.* V11.01.03 02/07/2021  J.Tan           TSK 0893195                          *
.*           Mod checking mapping using item code (MFMS000)                   *
.* V11.01.02 28/04/2021  Thanh T         TSK 0895165                          *
.*           Recompiled for OPRARDFD changes                                  *
.*           07/04/2021  Tracey Nguyen   TSK 0901515                          *
.*           Recompiled for PMSCMTFD - Added new fields                       *
.*           a) 1 File type for ICD procedure (PMCCIPF)                       *
.*           b) 3 new CMBS Field Type (PMCCFTS4/PMCCFT5C/PMCCFT6C)            *
.*           c) 3 new CMBS Codes From (PMCCPC4F,PMCCSC5F,PMCCTC6F)            *
.*           d) 3 new CMBS Codes To   (PMCCPC4T/PMCCSC5T,PMCCTC6T)            *
.*           27/04/2021  J.Tan           TSK 0863287                          *
.*           Mod for Patient Invoice new functionality                        *
.* V11.01.01 10/03/2021  Tracey Nguyen   TSK 0901515                          *
.*           Recompiled for PMSCMTFD - Added Primary ICD Procedure 1-5        *
.*           (PMCCICP1-5)                                                     *
.*----------------------------------------------------------------------------*
.*        V11.00.04 25/08/2020  J.Tan          TSK 0895840                    *
.*                  Recompiled for NZPCATBI - Fixed Keyin amount Inc.to Contr.*
.*        V11.00.03 25/08/2020  J.Tan          TSK 0896164                    *
.*                  Recompiled for NZPCATBI - multiple Contract proc.issue    *
.*        V11.00.02 01/04/2020  J.Tan             TSK 0868813                 *
.*                  Changed PKNAME to DIM80                                   *
.*        V11.00.01 11/03/2020  J.Tan          TSK 0838262                    *
.*                  Added Effective from and to date to MBS Item file         *
.*        V10.15.01 09/01/2020  J.Tan          TSK 0883919                    *
.*                  Mod to set PTDTBTCH to 999999999 for Cash receipt record  *
.*        V10.13.01 06/12/2013 J.Tan         TSK 0859743                      *
.*                  Mod for OTRECTYP=6 for Theatre item                       *
.*        V10.12.01 15.01.2018  J.Tan   TSK 0848146                           *
.*                  Added CACCFEE=5 - Accumulation FI by Claim code           *
.*        V10.11.01 07/09/2017  J.Tan         TSK 0837479                     *
.*                  Recompiled for CMXMATRX - Consumption typ items           *
.*        V10.10.02 15/05/2017  J.Tan         TSK 0835944                     *
.*                  Fixed Misc.Grp for Credit note with pack item for Contract*
.*        V10.10.01 09/05/2017  J.Tan         TSK 0835944                     *
.*                  Fixed Misc.Group for Credit note with Exploding Misc.item *
.*        V10.08.01 26/08/2016  Don Nguyen    TSK 0312570                     *
.*                  Recompiled for CMXMATRX - Added check for PTCNDGED=1      *
.*                  Added PMSEDGFD/IO and GETEFDRG                            *
.*        V10.07.02 18/02/2016 J.Tan  CAR 0812917                             *
.*                  Mods CFFS0000-checkng for Patient Contract for Sub.Proc.  *
.*        V10.07.01 18/11/2015  J.Tan         CAR 303942                      *
.*                  Added new payment types                                   *
.*        V10.06.01 11/08/2015 J.Tan  CAR 311062                              *
.*                  Mods CFFS0000-Removed check Primary proc.for calc.Win/Loss*
.*        V10.05.01 09/10/2014 J.Tan  CAR 306886                              *
.*                  Mods to Clear patdtraf prior reading nzprdtaf             *
.*        V10.04.07 11/06/2014 Sandra Bacham CAR 301639                       *
.*                  Moved call to TFILENAM to INIT0000                        *
.*        V10.04.06 07/05/2014 J.Tan  CAR 300260                              *
.*                  Mods checking previous record after finding Inactive Item *
.*        V10.04.05 22/04/2014 J.Tan  CAR 300260                              *
.*                  Mods checking Active/Inactive Misc.items                  *
.*        V10.04.04 15/04/2014  J.Tan          CAR 261630                     *
.*                  PATCATBI - Removed port number from temp file name        *
.*        V10.04.03 14/04/2014 J.Tan  CAR 299278                              *
.*                  Fixed checking Effective date of Pack items               *
.*        V10.04.02 24/01/2014 J.Tan  CAR 296422                              *
.*                  Mods to set TCLAIM=2 - Misc.Item not incl.in Win/Loss Calc*
.*        V10.04.01 16/12/2013 J.Tan          CAR 293928                      *
.*                  Fixed Items(Inc.to Contract & Bill to Pat)from Sec.proc.  *
.*        V10.03.05 13/09/2013 J.Tan          CAR 289256                      *
.*                  Mods to write a journal record for zero amt of Win/Loss   *
.*        V10.03.04 19/06/2013 J.Tan          CAR 286676                      *
.*                  Fixed routine TPAC0000 -Pack item with invalid Misc.Charge*
.*        V10.03.03 14/09/2012 J.Tan          CAR 273034                      *
.*                  Fixed Debtors ID,Invoice and Credit Note flags            *
.*        V10.03.02 06/03/2012  J.Tan         CAR 250477                      *
.*                  Mods for Pack items                                       *
.*        V10.03.01 26/04/2012  J.Tan         CAR 264118                      *
.*                  Fixed P*K on GPRP0000 - nzpspraf                          *
.*        V10.02.03 12/10/2011  J.Tan         CAR 249242                      *
.*                  Fixed Credit Note flag                                    *
.*        V10.02.02 03/10/2011  J.Tan         CAR 249242                      *
.*                  Mods for additional fields on extract file                *
.*        V10.02.01 12/05/2011  J.Tan         CAR 238996                      *
.*                  Fixed extracting Fixed fee adjustment                     *
.*        V10.01.03 23/02/2011  Peter Vela    CAR 233034                      *
.*                  Removed PATBF2FD and PATBF2IO                             *
.*        V10.01.02 21/12/2010  Mike Laming   CAR 233046                      *
.*                  Recompiled for PABXBILL - Mods to Misc.Charges PATMCHFD   *
.*        V10.00.03 29/09/2010  J.Tan         CAR 230735                      *
.*                  Fixed checking for Revenue breakdown                      *
.*        V10.00.02 07/06/2010  Mike Laming   CAR 212864                      *
.*                  Recompiled for PATCATBI - mods at GCDE6500                *
.*        V10.00.01 22/03/2010  J.Tan         CAR 218438                      *
.*                  Fixed extracting GST again                                *
.*                  V9.12.07  02/03/2010  J.Tan         CAR 217105            *
.*                            Fixed extracting GST for invoice raised for a   *
.*                            primary funder and changed to a diff.primary    *
.*                            funder before being extracted                   *
.*                  V9.12.06  16/02/2010  Peter Vela    CAR 215485            *
.*                            Recompiled for PATCATBI - Ignore Leave if less  *
.*                            than 1 day                                      *
.*                  V9.12.05  05/02/2010  Peter Vela    CAR 215485            *
.*                            Recompiled for PATCATBI - Ignore Leave if less  *
.*                            than 1 day                                      *
.*                  V9.12.04  27/01/2010  J.Tan         CAR 214548            *
.*                            Recomp.for PATCATBI-Stepdown after bed fees updt*
.*                  V9.12.03  24/11/2009 Davin         CAR  210721            *
.*                            Recompiled for CHKCMXPT - I*C on patcmxaf file  *
.*                  V9.12.02  01/10/2009 J.Tan         CAR  204960            *
.*                            Fixed Contract admission billed to Patient inv  *
.*                  V9.12.01  21/09/2009  J.Tan         CAR 204390            *
.*                            Mods to old bed fees                            *
.*                  V9.11.03  16/03/2009  J.Tan         CAR 188205            *
.*                            Recompiled for PATCATBI - Non-banked Deposits   *
.*                  V9.11.02 20/11/2008  Steve Armstrong   CAR 181373         *
.*                           Recompiled for changes to PATCATBI.              *
.*                  V9.11.01 12/11/2008  J.Tan  CAR 183242                    *
.*                           Mods to include second and subsequent procedures *
.*                           to Win/Loss calculation                          *
.******************************************************************************
.*                  V9.10.05 01/10/2008  J.Tan  CAR 172904                    *
.*                           Mods not to update journal description of DTR    *
.*                  V9.10.04 21/08/2008  J.Tan  CAR 176442                    *
.*                           Fixed credit note invoice before being extracted *
.*                  V9.10.03 05/08/2008  J.Tan  CAR 175079                    *
.*                           Fixed calculating FFS - removed checking for     *
.*                           Primary Procedure for Misc.items                 *
.*                  V9.10.02 11/07/2008  J.Tan  CAR 168769                    *
.*                           Fixed Win/Loss amount                            *
.*                           19/06/2008  J.Tan  CAR 170222                    *
.*                           Remove checking fully cred.notes                 *
.*                  V9.10.01 11/06/2008  J.Tan  CAR 170222                    *
.*                           Mods to save credit note number to nzexrcno      *
.******************************************************************************
.*                  V9.09.10 20/02/2008 Peter Vela CAR 161535                 *
.*                           Recompiled for PATCATBI                          *
.*                  V9.09.09 24/10/2007 J.Tan   CAR 152586                    *
.*                           Fixed problem where no invoice for primary funder*
.*                  V9.09.08 18/10/2007 J.Tan   CAR 152586                    *
.*                           Mods to reposition patdtr/nzprdt after checking  *
.*                           if all invoices for adm.raised                   *
.*                  V9.09.07 03/10/2007 J.Tan   CAR 151472                    *
.*                           Removed checking for zero amount (GLAMOUNT)      *
.*                  V9.09.06 28/09/2007 J.Tan   CAR 151225                    *
.*                           Fixed printing no mapping error messages         *
.*                  V9.09.05 21/09/2007 J.Tan   CAR 140282                    *
.*                           Assigned FFS Win/Loss to primary funder invoice  *
.*                  V9.09.04 14/09/2007 J.Tan   CAR 149664                    *
.*                           Fixed position read after delete on dtr files    *
.*                  V9.09.03 31/08/2007 J.Tan   CAR 140292                    *
.*                           Mods for FFS with Win/Loss                       *
.*                  V9.09.02 06/08/2007 J.Tan   CAR 140292                    *
.*                           Mods for Cash payment allocation                 *
.*                  V9.09.01 31/07/2007 J.Tan   CAR 140292                    *
.*                           Fixed printing journals with no mapping          *
.******************************************************************************

          INC       STD001FD
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
          INC       VISPAYFD/INC
          INC       IBATMHFD/INC
          INC       IBAGEDFD/INC
          INC       IBAGSTFD/INC
          INC       PABXVARS/INC
          INC       PATDINVS/INC
          INC       PATCODFD/INC
          INC       PATCFAFD/INC
          INC       PATDSCFD/INC
          INC       PATHLFFD/INC
          INC       PATHTRFD/INC
          INC       PATOVBFD/INC
          INC       PATSRBFD/INC
          INC       IBAPASFD/INC
          INC       PATAFEFD/INC
          INC       PATASDFD/INC
          INC       PATBFEFD/INC
          INC       PATELGFD/INC
          INC       PATFEEFD/INC
          INC       PATMCHFD/INC
          INC       PMSCMTFD/INC
          INC       PMSMTIFD/INC
          INC       PMSSINFD/INC
          INC       PMSSGAFD/INC
          INC       PATTFEFD/INC
          INC       PATCMTFD/INC
          INC       PATCMXFD/INC
          INC       PATCONFD/INC
          INC       PATHSPFD/INC
          INC       PATLSDFD/INC
          INC       PATMI1FD/INC
          INC       PATMA1FD/INC
          INC       PMSPX2FD/INC
          INC       PATINVFD/INC
          INC       PATITMFD/INC
          INC       PATCTFFD/INC
          INC       PMSCIDFD/INC
          INC       PMSCCDFD/INC
          INC       PATDTRFD/INC
          INC       PATDO1FD/INC
          INC       PATDGWFD/INC
          INC       PATDRGFD/INC
          INC       PATFINFD/INC
          INC       PATFX1FD/INC
          INC       PATFN1FD/INC
          INC       PATFN2FD/INC
          INC       PATIOVFD/INC
          INC       PATRBLFD/INC
          INC       PATRFNFD/INC
          INC       PATECDFD/INC
          INC       PATECOFD/INC
          INC       PATFMOFD/INC
          INC       PATHDFFD/INC
          INC       PATIBLFD/INC
          INC       PATICUFD/INC
          INC       PATLDFFD/INC
          INC       PATPGRFD/INC
          INC       PATRATFD/INC
          INC       PATRCAUD/INC
          INC       PMSMPRFD/INC
          INC       PATWR1FD/INC
          INC       COMDEPFD/INC
          INC       RCPDTEFD/INC
          INC       RCPBDTFD/INC
          INC       OPRARDFD/INC
          INC       WEBSECFD/INC
          INC       PMSCNOFD/INC
.
          INC       NZPEXTFD/INC
          INC       RCPBNKFD/INC
          INC       RCPREGFD/INC
          INC       PMSFCIFD/INC
          INC       PATFMSFD/INC
          INC       PATTRNFD/INC
          INC       PATRE1FD/INC
          INC       NZPRVBFD/INC
          INC       PATVENFD/INC
          INC       PATVISFD/INC
          INC       PMSHATFD/INC
          INC       PMSIDEFD/INC
          INC       PMSPBRFD/INC
          INC       PMSVX1FD/INC
          INC       NZPRDTFD/INC
          INC       NZPSPRFD/INC
          INC       NZPIBRFD/INC
          INC       NZPIVBFD/INC
          INC       NZPRBRFD/INC
          INC       NZPPFEFD/INC
          INC       NZPCFNFD/INC
          INC       MLTCFNFD/INC
          INC       NZPBFEFD/INC
          INC       NZPTFEFD/INC
          INC       NZPPICFD/INC
          INC       NZPFINFD/INC
          INC       NZPRFNFD/INC
          INC       NZPMCHFD/INC
          INC       NZPCMTFD/INC
          INC       NZPMXCFD/INC
.
          INC       AAEDE1FD/INC
          INC       AAEDTRFD/INC
.
          INC       OUTBOAFD/INC
          INC       OUTBB1FD/INC
          INC       OUTSITFD/INC
          INC       OUTDTRFD/INC
.
          INC       OPRDEAFD/INC
          INC       OPRSESFD/INC
          INC       PMSEDGFD/INC       * Effective DRG Dates
          INC       PATDDHFD/INC
.
.     The IbaPas Output File Structure
.
.Field                      Length   Start  Note
.----                       ------   -----  ----
.NZEXBTID                      19        1   Batch Id
.                                            A concatenation of "HT" +
.                                            Hospital Code +
.                                            System date (ccyymmddhhmmss)
.
.NZEXHCOD                       3       20   Hospital Code
.
.NZEXRTYP                       1       23   Record Type
.                                            1= Accommodation
.                                            2= Theatre Charges
.                                            3= Fees Invoiced Charges
.                                            4= Procedure/Doctors Fees
.                                            5= Cash Receipt(Payment agains inv)
.                                            6= Journal Entry
.                                            7= Rounding
.                                            8= GST (Total amount for 1 invoice)
.                                            9= Debtor Control line
.
.NZEXDESC                      20       24   Item Description (record type desc)
.                                            If Record type:
.                                            1 = "Accommodation"
.                                            2 = "Theatre Charge"
.                                            3 = "(FI)"+FI Code+Item Charge Code
.                                            4 = "Procedure/Doctor Fees"
.                                            5 = "Payment"
.                                            6 = Journal Code + Journal Desc.
.                                            7 = "Rounding"
.                                            8 = "GST"
.                                            9 = "DCL"
.
.NZEXDACC/NZEXCACC             14       44   Ledger Code (Debit/Credit Account)
.                                            Positions 1,2 & 3 -Cost Centre
.                                            Positions 4 to 8 -Account Code
.                                            Positions 9 to 12-padded with zeros
.
.NZEXDAMT/NZEXCAMT             12.2     58   Amount of transaction(Debit/Credit)
.
.NZEXTDAT                       8       73   Invoice or Payment or Journal Date
.                                            (dd/mm/yy)
.
.NZEXINVN                       8       81   Invoice Number(allocated by ibaPAS)
.
.NZEXRCNO                      12       89   Receipt Number(allocated by ibaPAS)
.                                            (only for Record type = 5)
.
.NZEXPREF                      17      101   Payment Ref.# entered for payments
.                                            (only for Record type = 5)
.
.NZEXPMTH                       1      118   Payment Method (for Record Type=5)
.                                            1 for a Cash Payment
.                                            2 for a Cheque Payment
.                                            3 for a Credit Card Payment
.                                            4 for a Merchant Card Payment
.                                            5 for a Direct Credit Payment
.
.NZEXMCTY                       3      119   Merchant Card Type (Catg='CR'
.                                            (if Payment Method = 4)
.
.NZEXCOMS                       3.2    122   Merchant Card Commission %
.                                            (if Payment Method = 4)
.
.NZEXGSTC                       6      128   GST Code
.                                            (only for Record type = 8)
.
.NZEXBNAM                       30     134   Person Responsible for Account 
.
NZEXDEBN  DIM                    8     164   Debtor ID
NZEXPNAM  DIM                   46     172   Patient Name
NZEXPTID  DIM                    8     218   Unique Patient ID
NZEXIFLG  DIM                    1     226   Invoice and Credit Card flags
NZEXDDAT  DIM                    8     227   Discharge Date
NZEXPRIM  DIM                    6     235   Primary Procedure speciality
NZEXPCOD  DIM                    9     241   Primary Procedure code
.NZEXRREF  DIM                   40     250   Receipt Reference
NZEXADD1  DIM                   35     290   Billing address 1
NZEXADD2  DIM                   35     325   Billing address 2
NZEXADD3  DIM                   35     360   Billing address 3
NZEXADD4  DIM                   35     395   Billing address 4
NZEXHPHN  DIM                   20     430   Patient Home phone no
NZEXBPHN  DIM                   20     450   Patient Business phone no
NZEXPMOB  DIM                   20     470   Patient Mobile no
NZEXEMAI  DIM                   80     490   Patient email
.EOR                                   570   End of Record
.
EXTFILE1  FILE      ASCII,FIXED=256
EXTFNAME  DIM       23
.
. ----- Program variables -----
.
EXTRFLG   FORM      1
BATCHNUM  FORM      5
BATCHID   DIM       19
CMDLINE   DIM       60
CNTPTFLG  FORM      1
CODECL    INIT      "CL"
CODEPY    INIT      "Py"
CALDAYS   FORM      6
CERTINDC  FORM      1
CURSESS   DIM       18
CDYSDAYS  FORM      6                       * CALCDAYS number of days
CDYSFDTE  DIM       8                       * CALCDAYS from date
CDYSTDTE  DIM       8                       * CALCDAYS to date
CDYSYEAR  FORM      2                       * CALCDAYS year
CATCR     INIT      "cr"
CPTDATE   DIM       8
CURRDATE  DIM       8
EFTDATE   DIM       8
DIM12     DIM       12
DIM17     DIM       17
DIM24A    DIM       24
.
KEY13A    DIM       13
GLAMOUNT  FORM      12.2
HFHIFUND  FORM      2
HTMLFILE  FIFO      ASCII, FIXED=250
IBCNMHOS  FORM      1
IBCNUGST  FORM      1
IBCNPBXI  DIM       9
HOSPCODE  DIM       3
HOSPNAME  DIM       50
PSAGECON  DIM       3
PSAGETYP  DIM       1
PAGENUMB  FORM      3
PATHNAME  DIM       100
OPRDATE   DIM       8
.
NJAN      INIT      "January"
NFEB      INIT      "February"
NMAR      INIT      "March"
NAPR      INIT      "April"
NMAY      INIT      "May"
NJUN      INIT      "June"
NJUL      INIT      "July"
NAUG      INIT      "August"
NSEP      INIT      "September"
NOCT      INIT      "October"
NNOV      INIT      "November"
NDEC      INIT      "December"
.
SKEY38    DIM       38
SAVALLW   FORM      12.2
SAVBEND   FORM      3
SAVDISC   FORM      12.2
SAVEXTRA  FORM      12.2
SAVFMHOS  DIM       3
SAVFMSUB  DIM       1
SAVFMCOD  DIM       13
SAVADMNO  DIM       8
SAVCLM    DIM       3
SEGCNT    FORM      6
SP14      INIT      "              "
.
DIM1A     DIM       1
DIM2A     DIM       2
DIM5A     DIM       5
DIM4      DIM       4
DIM9      DIM       9
DIM14     DIM       14
DIM18     DIM       18
DIM18A    DIM       18
DIM30     DIM       30
DAYFORMT  DIM       4
.
FORM3A    FORM      3
.
TFFSAMNT  FORM      12.2
F12P2     FORM      12.2
FNDRBFLG  FORM      1
HBATCH    FORM      5
MBSFLAG   FORM      1
MTHNAM3   DIM       3
MTHNAM3A  DIM       3
OPCNCONS  DIM       1
OPNFLAG   FORM      "0"
..RECFLAG   FORM      1
RECCNT    FORM      5
THCFLG    FORM      2
TFEEIND   FORM      1
TXT       INIT      ".txt"
WLOSFLAG  FORM      1
WDATE1    DIM       8
WDATE2    DIM       8
.
CFPAYCOD  DIM       3        * 3M Codefinder PAY Code
.
.
PRGID     INIT      "IBAHMS88"
PRGNAM    INIT      "General Ledger Extract"
VERSION   INIT      "V12.00.01"
+
.******************************************************************************
.*                                   ML0000                                   *
.*                                 Main Module                                *
.******************************************************************************
ML0000    CALL      INIT0000                * Initialise variables & open files
.
ML1000    CALL      OPTN0000                * Choose main option
          BRANCH    EXIT,ML9999             * EXIT
          BRANCH    OPTION,ML2000           * Create Extract 
          GOTO      ML1000
.
ML2000    CALL      KHOS0000                * keyin Hospital Code (Mult.Hosp)
          BRANCH    EXIT,ML1000
.
          MOVE      ZERO,WLOSFLAG
          CALL      GBTC0000                * Generate next batch number
          CALL      PPAT0000                * Loop Inpat DTR- write to Ext.file
.
          MOVE      ONE,WLOSFLAG
          CALL      PPAT0000                * Loop Inpat FFS with Win/Loss
          MOVE      ZERO,WLOSFLAG
.
          CALL      PAAE0000                * Loop A&E DTR- write to Ext.file
          CALL      POUT0000                * Loop Outpat DTR- write to Ext.file
          CALL      REXT0000                * Loop Ext.file-write to Output file
.
          GOTO      ML1000
.
ML9999    CHAIN     PGM
+
.******************************************************************************
.*                                  INIT0000              Called by: ML0000   *
.*                       Initialise Variable & Open Files                     *
.******************************************************************************
INIT0000  CALL      DISPHEAD                * Display screen heading
          CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
          DISPLAY   *P56:24,"Opening controlf"
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"aaedtref"
          OPEN      AAEDTRE1,"aaedtref"
          OPEN      AAEDTRE7,"aaedtref"
.
          DISPLAY   *P64:24,"patdtraf"
          OPEN      PATDTRA1,"patdtraf"
          OPEN      PATDTRA7,"patdtraf"
          OPEN      PMSFCIA1,"pmsfciaf"
          OPEN      PATDSCH1,"patdschf"
          OPEN      PATFN1A1,"patfn1af"
.
          DISPLAY   *P64:24,"pathspaf"
          OPEN      PATHSPA1,"pathspaf"
.
          OPEN      RCPREGA1,"rcpregaf"
          OPEN      PATFMSA1,"patfmsaf"
          OPEN      PATRE1A1,"patre1af"
          OPEN      PATVISA1,"patvisaf"
          OPEN      PMSVX1A1,"pmsvx1af"
          OPEN      PATINVR1,"patinvrf"
          OPEN      PATINVR3,"patinvrf"
          OPEN      PATITEM1,"patitemn"
          OPEN      NZPRVBA1,"nzprvbaf"
.
          OPEN      AAEDE1A1,"aaede1af"
.
          OPEN      NZPEXTA2,"nzpextaf"
          OPEN      NZPEXTA4,"nzpextaf"
.
          OPEN      NZPRDTA1,"nzprdtaf"
          OPEN      NZPRDTA4,"nzprdtaf"
          OPEN      NZPRDTA5,"nzprdtaf"
          OPEN      NZPRDTA7,"nzprdtaf"
          OPEN      NZPSPRA2,"nzpspraf"
.
          DISPLAY   *P64:24,"patmi1af";
          OPEN      PATMI1A1,"patmi1af"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P64:24,"patwr1af";
          OPEN      PATWR1A1,"patwr1af"
.
          DISPLAY   *P64:24,"patdtraf";
          OPEN      PATDTRA1,"patdtraf"
          OPEN      PATDTRA4,"patdtraf"
.
          DISPLAY   *P64:24,"pmsmtiaf";
          OPEN      PMSMTIA1,"pmsmtiaf"
          OPEN      PMSMTIA2,"pmsmtiaf"
          OPEN      PMSMTIA4,"pmsmtiaf"
.
          DISPLAY   *P64:24,"pattranf";
          OPEN      PATTRAN1,"pattranf"
          OPEN      PATTRAN2,"pattranf"
.
          DISPLAY   *P64:24,"patdschf";
          OPEN      PATDSCH1,"patdschf"
.
          DISPLAY   *P64:24,"patitemn";
          OPEN      PATITEM1,"patitemn"
.
          DISPLAY   *P64:24,"pmsvx1af";
          OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"nzpbfeaf";
          OPEN      NZPBFEA1,"nzpbfeaf"
.
          DISPLAY   *P64:24,"nzpcfnaf"
          OPEN      NZPCFNA1,"nzpcfnaf"
.
          DISPLAY   *P64:24,"nzpcmtaf"
          OPEN      NZPCMTA1,"nzpcmtaf"
          OPEN      NZPCMTA2,"nzpcmtaf"
          OPEN      NZPCMTA3,"nzpcmtaf"
.
          DISPLAY   *P64:24,"nzpibraf"
          OPEN      NZPIBRA1,"nzpibraf"
.
          DISPLAY   *P64:24,"nzpmchaf"
          OPEN      NZPMCHA1,"nzpmchaf"
          OPEN      NZPMCHA2,"nzpmchaf"
          OPEN      NZPMXCA1,"nzpmxcaf"
.
          DISPLAY   *P64:24,"nzppicaf"
          OPEN      NZPPICA1,"nzppicaf"
          OPEN      NZPPICA2,"nzppicaf"
.
          DISPLAY   *P64:24,"nzprbraf"
          OPEN      NZPRBRA1,"nzprbraf"
.
          DISPLAY   *P64:24,"nzprfnaf"
          OPEN      NZPRFNA1,"nzprfnaf"
          OPEN      NZPRFNA2,"nzprfnaf"
.
          DISPLAY   *P64:24,"nzppfeaf"
          OPEN      NZPPFEA1,"nzppfeaf"
.
          DISPLAY   *P64:24,"nzpspraf"
          OPEN      NZPSPRA1,"nzpspraf"
          OPEN      NZPSPRA2,"nzpspraf"
.
          DISPLAY   *P64:24,"nzptfeaf"
          OPEN      NZPTFEA1,"nzptfeaf"
          OPEN      NZPTFEA2,"nzptfeaf"
.
          DISPLAY   *P64:24,"oprdetaf"
          OPEN      OPRDETA1,"oprdetaf"
.
          DISPLAY   *P64:24,"oprdetaf"
          OPEN      OPRDETA2,"oprdetaf"
.
          DISPLAY   *P64:24,"oprsesaf"
          OPEN      OPRSESA1,"oprsesaf"
.
          DISPLAY   *P64:24,"rcpbdtaf";
          OPEN      RCPBDTA1,"rcpbdtaf"
.
          DISPLAY   *P64:24,"oprardaf";
          OPEN      OPRARDA1,"oprardaf"
.
          READ      CONTROLF,ZERO;*43,IBCNMHOS
          READ      CONTROLF,TEN;*192,CACCFEE
          READ      CONTROLF,TEN9;*212,CFEETYP
          READ      CONTROLF,HUND09;*247,PTCNROUN
          READ      CONTROLF,HUND12;*34,PTCNGLEX
          READ      CONTROLF,SEVENTY9;*68,PTCNMFEE,PTCNJFEE
          READ      CONTROLF,NINTY8;*130,PTCNAGST
          READ      CONTROLF,HUND03;*246,PTCNLJCD,PTCNWJCD
.
          DISPLAY   *P56:24,"Opening ihapassf";
          OPEN      IHAPASS1,"ihapassf"
.
...  used in PATCATBI CRMV0000
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,FNAMEX
.
...  used in PATCATBI PTMP0000
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,FNAMEZ
.
...  used in PATCATBI PT2P0000
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,FNAMEY
.
...  used in PABXBILL
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,PBXFNAME
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,PBXFNAM2
.
INIT9999  RETURN
+
.******************************************************************************
.*                                  OPTN0000              Called by: ML0000   *
.*                                Select Option                               *
.******************************************************************************
OPTN0000  MOVE      ZERO,EXIT
          MOVE      ZERO,OPTION
          HLINE     *G37,2,55,80
          DISPLAY   *P1:3,*EF:
                    *P1:4,*V2LON,"0",*HOFF," = Exit":
                    *P1:5,*V2LON,"1",*HOFF," = Create Extract ":
                    *P1:7,"Select Option : ";
.
OPTN1000  KEYIN     *P17:7,*V2LON,*DV,UNDLN2,*P17:7,OPTION;
.
          COMPARE   ZERO,OPTION
          GOTO      OPTN9500 IF EQUAL
.
          BRANCH    OPTION,OPTN2000
.
          BEEP
          GOTO      OPTN1000
.
OPTN2000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.******************************************************************************
.         Generate Next batch number and Batch Id
.******************************************************************************
GBTC0000  MOVE      ONE,BATCHNUM
          READ      CONTROLF,THIRTY6;*145,HBATCH
          COMPARE   ZERO,HBATCH
          GOTO      GBTC2000 IF NOT EQUAL
          MOVE      ONE,HBATCH
.
GBTC2000  MOVE      HBATCH,BATCHNUM            * save the batch number
          ADD       ONE,HBATCH                 * set the next batch number
          WRITAB    CONTROLF,THIRTY6;*145,HBATCH
.
.         Batch id = HT + Hospital Code + Date & Time of Extract
.
          MOVE      HOSPCODE,KEY3
          REP       " 0",KEY3
          CALL      IBACLOCK
          UNPACK    CTIMEIS,KEY2,KEY1,DIM2,DIM1,DIM2A
          PACK      BATCHID,ANSH,ANST,KEY3,CURRDATE,KEY2,DIM2,DIM2A,SP70
          REP       " 0",BATCHID
          CALL      PREP0000                    * Create an output file
GBTC9999  RETURN
+
.******************************************************************************
.*                                  PPAT0000                                  *
.*    Processing patdtraf for records with blank G/L Batch Number             *
.******************************************************************************
PPAT0000  MOVE      SP70,SAVINVNO
          MOVE      ZEROVISN,SAVADMNO
          MOVE      SP70,SAVCLM
          MOVE      ZERO,RECFLAG
          MOVE      "60",CLNO
          PACK      KEY38,SP70
.
PPAT0100  CALL      CLPATDTR
          IF        WLOSFLAG=1
            CALL      RSNZRDT7
          ELSE
            CALL      RDSDTRN7
          ENDIF
.
PPAT0200  IF        WLOSFLAG=1
            CALL      RKNZRDT7
          ELSE
            CALL      RDKDTRN7
          ENDIF
          BRANCH    OVRCD,PPAT9900
.
          MATCH     "00000000",TREF
          GOTO      PPAT0200 IF EQUAL
          MATCH     SP70,PTDTBTCH
          GOTO      PPAT9900 IF NOT EQUAL       * Already been extracted
.
          MATCH     TADMNO,SAVADMNO
          GOTO      PPAT0220 IF NOT EQUAL
.
          MATCH     SP70,SAVINVNO
          GOTO      PPAT0440 IF EQUAL           * First invoice
          MATCH     TREF,SAVINVNO
          GOTO      PPAT0800 IF EQUAL
.
PPAT0220  MOVE      ZERO,TFFSAMNT
          PACK      SKEY38,PTDTBTCH,TADMNO,TREF,TTRANSN1,SP70
          COMPARE   ONE,WLOSFLAG
          GOTO      PPAT0300 IF NOT EQUAL
.
          COMPARE   ZERO,RECFLAG
          GOTO      PPAT0300 IF EQUAL           * No record
.
          CALL      WJNL0000                    * Write Win/Loss Journal
.
          MOVE      ZERO,RECFLAG
          MOVE      SKEY38,KEY38                * reposition
          CALL      RDNZRDT7
.
PPAT0300  MOVE      TADMNO,KEY8
          CALL      RDVISA1
          BRANCH    OVRCD,PPAT2000              * Missing visit record
          CALL      RDMISS1
          BRANCH    OVRCD,PPAT2000              * Missing admission record
          CALL      RDPMVX11
          BRANCH    OVRCD,PPAT2000              * Missing visit record
          MATCH     PMVXMHOS,HOSPCODE
          GOTO      PPAT2000 IF NOT EQUAL       * Different hospital
          CALL      RDRESP1
          IF        OVRCD=1
            PACK      PKNAME,SP70,SP20          * PRFA Name
          ENDIF
.
.         COMPARE   ONE,WLOSFLAG
.         GOTO      PPAT0400 IF NOT EQUAL
.         GOTO      PPAT0400
.
PPAT0400  MATCH     SP70,SAVINVNO
          GOTO      PPAT0440 IF EQUAL           * First record
          MATCH     SAVINVNO,TREF
          GOTO      PPAT0800 IF EQUAL
.
PPAT0440  MOVE      TREF,KEY8
          CALL      RDINV1
          BRANCH    OVRCD,PPAT0200              * Missing invoice record
          MATCH     ZEROVISN,PINVADM
          GOTO      PPAT0200 IF EQUAL
.
.         Ignore cash record - as it's done in Cash released, set batch to 999..
.
          COMPARE   FIVE,TRECTYPE
          GOTO      PPAT0810 IF EQUAL
.
          MOVE      ONE,RECFLAG
          MOVE      PINVCLM,SAVCLM
          MOVE      TADMNO,SAVADMNO
          MOVE      PINVNO,SAVINVNO
          CALL      CLNZPEXT
          MOVE      PINVDTE,NZEXTDAT
          REP       " 0",NZEXTDAT
          MOVE      SP70,NZEXCRST
.
          MOVE      "3",NZEXSYST
          PACK      NZEXBNAM,PKNAME,SP70        * PRFA
          MOVE      PMVXMHOS,NZEXHCOD           * Hospital code
          MOVE      PMVXMHOS,PTFMHOSP           * Hospital code
          MOVE      PVIURNO,NZEXURNO
          MOVE      PINVADM,NZEXADMN
          MOVE      PINVNO,NZEXINVN
.
          COMPARE   SIX,TRECTYPE
          GOTO      PPAT0700 IF NOT EQUAL       * Not a journal record
.
          COMPARE   ONE,WLOSFLAG
          GOTO      PPAT0800 IF NOT EQUAL
.
          MATCH     "1",PTINCRST
          GOTO      PPAT0800 IF NOT EQUAL
          MATCH     PTCNLJCD,TTYPE              * Loss
          GOTO      PPAT0600 IF EQUAL
          MATCH     PTCNWJCD,TTYPE              * Win
          GOTO      PPAT0800 IF NOT EQUAL
.
PPAT0600  MULT      "-1",TPATAMTT
          GOTO      PPAT0800
.
PPAT0700  BRANCH    WLOSFLAG,PPAT0800            * Do GST after last inv of adm.
.
          COMPARE   ZERO,PTINGSTA
          GOTO      PPAT0800 IF EQUAL           * No GST
.
          MOVE      "8",NZEXRTYP
          CLEAR     NZEXDESC
          APPEND    "GST",NZEXDESC
          APPEND    SP70,NZEXDESC
          RESET     NZEXDESC
          MOVE      PTCNAGST,NZEXGSTC           * GST Code
          MOVE      PTINGSTA,GLAMOUNT
.
          MOVE      "1",PTFMSUB
          MOVE      SP70,PTFMCOD
          MOVE      "000000",NZEXTRNO
          CALL      NZGL0000                    * Get the Mapping 
          MOVE      SP70,NZEXGSTC
.
PPAT0800  MOVE      SP70,NZEXRREF
          IF        TRECTYPE<>5
            PACK      NZEXRREF,PTDTCPRC,SP70      * Procedure code
            GOTO      PPAT0820
          ENDIF
.
.         Set Receipts Batch number to 99999999... to prevent record being
.         picked up again on the next run
.
PPAT0810  PACK      KEY38,PTDTBTCH,TADMNO,TREF,TTRANSN1,SP70   * save key
          MOVE      "9999999999999999",PTDTBTCH
          GOTO      PPAT0900

PPAT0820  MOVE      SP70,NZEXCRST
          CALL      MMAP0000                    * mapping and write extract G/L
          BRANCH    EXIT,PPAT0200
.         ADD       TPATAMTT,TFFSAMNT
.
          PACK      KEY38,PTDTBTCH,TADMNO,TREF,TTRANSN1,SP70   * save key
.
          UNPACK    BATCHID,KEY2,KEY17      * KEY2="HT"
          MOVE      SP70,KEY5
          MOVE      BATCHNUM,KEY5
          REP       " 0",KEY5
          PACK      PTDTBTCH,KEY5,KEY17,SP70    * Bathnum + Hospcode +Date
.
PPAT0900  IF        WLOSFLAG=1
            CALL      UPNZRDT7
          ELSE
            CALL      UPDTRN7
          ENDIF
.
          GOTO      PPAT0100
.
.         skip this admission- get next admission
.
PPAT2000  UNPACK    SKEY38,PTDTBTCH,DTADMNO
          MOVE      DTADMNO,TADMNO
          PACK      KEY38,PTDTBTCH,TADMNO,Z70
          GOTO      PPAT0100
.
PPAT9900  COMPARE   ONE,WLOSFLAG
          GOTO      PPAT9999 IF NOT EQUAL
.
          COMPARE   ZERO,RECFLAG
          GOTO      PPAT9999 IF EQUAL
.
          CALL      WJNL0000                  * Write Win/Loss Journal
.
PPAT9999  RETURN
+
.******************************************************************************
.*                                  MMAP0000                                  *
.*    Processing patdtraf for records with blank G/L Batch Number             *
.******************************************************************************
MMAP0000  MOVE      ZERO,EXIT
          MOVE      TPATAMTT,GLAMOUNT
          MOVE      TTRANSN1,NZEXTRNO
          MOVE      SP70,NZEXPREF
          MOVE      SP70,NZEXRREF
          BRANCH    TRECTYPE,MMAP1000,MMAP2000,MMAP3000,MMAP9200:
                             MMAP9200,MMAP6000,MMAP7000,MMAP8000
          GOTO      MMAP9200
.
MMAP1000  MOVE      "1",NZEXRTYP
          CLEAR     NZEXDESC
          APPEND    "Accommodation",NZEXDESC
          APPEND    SP70,NZEXDESC
          RESET     NZEXDESC
          PACK      NZEXRREF,PTDTCPRC,SP70     * Procedure code
          MOVE      "1",PTFMSUB
          BRANCH    CACCFEE,MMAP1200,MMAP1400,MMAP1600,MMAP1800,MMAP1900
          PACK      PTFMCOD,ANSA,TADMTYP,SP70
          GOTO      MMAP9000
.
MMAP1200  PACK      PTFMCOD,ANSA,TDWARD,SAVCLM,SP70
          GOTO      MMAP9000
.
MMAP1400  PACK      PTFMCOD,ANSA,TDWARD,TADMTYP,SP70
          GOTO      MMAP9000
.
MMAP1600  PACK      PTFMCOD,ANSA,TDWARD,SAVCLM,TADMTYP,SP70
          GOTO      MMAP9000
.
MMAP1800  PACK      PTFMCOD,ANSA,TDWARD,TADMTYP,SAVCLM,SP70
          GOTO      MMAP9000
.
MMAP1900  PACK      PTFMCOD,ANSA,SAVCLM,SP70
          GOTO      MMAP9000
.
MMAP2000  MOVE      "2",NZEXRTYP
          CLEAR     NZEXDESC
          APPEND    "Theatre Charge",NZEXDESC
          APPEND    SP70,NZEXDESC
          RESET     NZEXDESC
          PACK      NZEXRREF,PTDTCPRC,SP70     * Procedure code
.
          MOVE      "2",PTFMSUB
          CALL      SEST0000                   * Get session type
          PACK      PTFMCOD,ANSF,OPSESTYP,SP70
          GOTO      MMAP9000
.
MMAP3000  MOVE      "3",NZEXRTYP
          CLEAR     NZEXDESC
          APPEND    "FI ",NZEXDESC
          APPEND    TMISGRP,NZEXDESC
          APPEND    SP1,NZEXDESC
          APPEND    TITEMNO,NZEXDESC
          APPEND    SP70,NZEXDESC
          RESET     NZEXDESC
          PACK      NZEXRREF,PTDTCPRC,SP70     * Procedure code
.
          MOVE      "3",PTFMSUB
          IF        PTCNMFEE=1
            PACK      PTFMCOD,ANSM,SAVCLM,TMISGRP,SP70
          ELSE
            PACK      PTFMCOD,ANSM,TMISGRP,TITEMNO,SP70
          ENDIF
          GOTO      MMAP9000
.
MMAP6000  MOVE      SP70,DIM30
          MOVE      "J ",KEY2
          PACK      KEY5,KEY2,TTYPE,SP70
          CALL      RDCODE1
          IF        OVRCD=0
            PACK      DIM30,TDESC,SP70
          ENDIF
          MOVE      "6",NZEXRTYP
          CLEAR     NZEXDESC
          APPEND    TTYPE,NZEXDESC
          APPEND    SP1,NZEXDESC
          APPEND    DIM30,NZEXDESC
          APPEND    SP70,NZEXDESC
          RESET     NZEXDESC
          PACK      NZEXRREF,PTDTCPRC,SP70     * Procedure code
          PACK      NZEXTDAT,TFCENT,TFYEAR,TFMONTH,TFDAY
          REP       " 0",NZEXTDAT
.
          MOVE      "5",PTFMSUB
          IF        PTCNJFEE=1
            PACK      PTFMCOD,SAVCLM,TTYPE,SP70
          ELSE
            PACK      PTFMCOD,TTYPE,SP70
          ENDIF
          ADD       PTDTGSTM,GLAMOUNT
          GOTO      MMAP9000
.
MMAP7000  MOVE      "7",NZEXRTYP
          CLEAR     NZEXDESC
          APPEND    "Rounding",NZEXDESC
          APPEND    SP70,NZEXDESC
          RESET     NZEXDESC
.
          MOVE      "3",PTFMSUB
          IF        PTCNMFEE=1
            PACK      PTFMCOD,ANSM,SAVCLM,PTCNROUN,SP70
          ELSE
            PACK      PTFMCOD,ANSM,PTCNROUN,SP70
          ENDIF
          GOTO      MMAP9000
.
MMAP8000  MOVE      "4",NZEXRTYP
          CLEAR     NZEXDESC
          APPEND    "Procedure",NZEXDESC
          APPEND    SP70,NZEXDESC
          RESET     NZEXDESC
          MOVE      "3",PTFMSUB
          PACK      NZEXRREF,PTDTCPRC,SP70     * Procedure code
.
.         Check if there is any adjustment
.
          IF        WLOSFLAG=1
            MOVE      ZERO,PTDTADPT               * No Adjust.for FFS Win/Loss
          ENDIF
.
          IF        PTDTADPT<>0
            MOVE      PTDTADPT,GLAMOUNT
            CALL      NZGL0000                    * Get the Mapping
            MOVE      ZERO,GLAMOUNT
          ENDIF
.
.         If this is a Fixed fee for Procedure, check for Revenue breakdown
.
          MOVE      ZERO,FORM12P2
          MOVE      PTDTLSPT,FORM12P2
          ADD       PTDTLSRB,FORM12P2
.
          COMPARE   ZERO,FORM12P2
          GOTO      MMAP8100 IF NOT EQUAL      * a fixed fee
          COMPARE   ZERO,PTDTADPT
          GOTO      MMAP8200 IF EQUAL          * Adjustment fee
          GOTO      MMAP9100
.
MMAP8100  CALL      CRBR0000                   * Check for Revenue breakdown
          BRANCH    FNDRBFLG,MMAP9100          * Found Revenue breakdown
.
          MOVE      FORM12P2,GLAMOUNT          * use the fixed fee
.
MMAP8200  MATCH     SP70,TMISGRP
          IF        @EQUAL
            MOVE      TITEMNO,KEY9
            PACK      KEY8,TFCENT,TFYEAR,TFMONTH,TFDAY
            REP       " 0",KEY8
            PACK      KEY17,KEY9,KEY8,SP70
            CALL      PATITMRD
            IF        OVRCD=0
              MOVE      IMISGRP,TMISGRP     * Item group
            ENDIF
          ENDIF
          PACK      NZEXPREF,TMISGRP,SP70
          IF        PTCNMFEE=1
            PACK      PTFMCOD,ANSM,SAVCLM,TMISGRP,SP70
          ELSE
            PACK      PTFMCOD,ANSM,TMISGRP,TITEMNO,SP70
          ENDIF
.
.         Write a record to G/L Extract file
.
MMAP9000  MATCH     SP70,NZEXRREF
          IF        @EQUAL
            PACK      KEY11,TADMNO,PTDTSUNQ,SP70
            CALL      RDNZSPR1
            IF        OVRCD=0
              PACK      NZEXRREF,NZSPPROC,SP70
            ENDIF
          ENDIF
          CALL      NZGL0000                * Get the Mapping 
.
MMAP9100  MOVE      ZERO,EXIT
          GOTO      MMAP9999
.
MMAP9200  MOVE      ONE,EXIT
MMAP9999  RETURN
+
.******************************************************************************
.         Check if any tobe invoice amount
.******************************************************************************
ALIN0000  MOVE      ONE,WEBFLAG
          MOVE      ONE,PROGFLAG
          MOVE      TADMNO,KEY8
          CALL      RDMISS1
          BRANCH    OVRCD,ALIN8000
.
          IF        ASTAT=3
            CALL      RDDSCH1
            BRANCH    OVRCD,ALIN8000          * missing discharged record
          ENDIF
.
          MOVE      ZERO,GROSSTOT
          MOVE      "ALL   ",EXPPAYER
          CALL      CALCTBI                   * Work out invoice date range
          COMPARE   ZERO,GROSSTOT
          GOTO      ALIN9000 IF EQUAL
.
ALIN8000  MOVE      ZERO,EXIT                 * Found tobe invoiced
          GOTO      ALIN9999
.
ALIN9000  MOVE      ONE,EXIT                  * set All invoices raised
          GOTO      ALIN9999
.
ALIN9999  RETURN
+
.******************************************************************************
.   Write an Increase/Decrease Journal for the each funder invoice 
.         Win/Loss= Contract fee - FFS
.******************************************************************************
WJNL0000  MOVE      SP70,SAVECPRC
          CALL      GPRM0000                  * Get primary funder
.
          MOVE      SAVINVNO,KEY8
          CALL      RDINV1
          BRANCH    OVRCD,WJNL9999
.
.        Check if the primary funder was changed before invoice being extracted
.
          MATCH     "1",PTINCRST
          IF        @EQUAL
            CALL      CRDT0000              * check if there is Win/Loss rec.
            BRANCH    EXIT,WJNL9999         * in nzprdtaf - No.
            GOTO      WJNL2000
          ENDIF
.
          IF        CNTPTFLG=1
            MATCH     SP70,PTINHFND
            GOTO      WJNL9999 IF NOT EQUAL
            GOTO      WJNL2000
          ENDIF
.
          IF        MULTCNTR=0
            MATCH     PTINHFND,PRIMFUND
            GOTO      WJNL9999 IF NOT EQUAL * No Win/Loss if not funderprimary
          ENDIF
.
WJNL2000  MOVE      ZERO,FORM12P2
          CALL      GSTM0000                  * GST Mapping
.
          MATCH     "1",PTINCRST
          GOTO      WJNL9999 IF EQUAL         * Fully Credited
.
          MOVE      ZERO,CPRCNUMB
          MOVE      ZERO,COUNTA
.
          MOVE      ONE,F2
          WHILE     F2<=9
            MOVE      SP70,CPRCCODE[F2]
            ADD       ONE,F2
          DO
          CALL      MCPR0000                  * set no of contract procedures
          COMPARE   ZERO,CPRCNUMB
          GOTO      WJNL3000 IF EQUAL
.
          MOVE      ZERO,COUNTA
WJNL2200  ADD       ONE,COUNTA
          MOVE      CPRCCODE[COUNTA],SAVECPRC     * Contract Procedure code
.
WJNL3000  CALL      CNTR0000                  * Get total Contract amount
          CALL      CFFS0000                  * Calculate FFS amount
          SUB       TFFSAMNT,FORM12P2         * Subtracted by total FFS amount
.
          IF        MULTCNTR=1
            COMPARE   ZERO,FORM12P2
            GOTO      WJNL8000 IF EQUAL         * No Win/Loss
          ENDIF
.
.         Write a journal record to nzprdtaf file
.
          MOVE      SAVINVNO,KEY8
          CALL      RDINV1
.
          CALL      CLPATDTR
          IF        FORM12P2<0
            MOVE      PTCNLJCD,TTYPE          * Loss
          ELSE
            MOVE      PTCNWJCD,TTYPE          * Win
          ENDIF
          MOVE      "J ",KEY2
          PACK      KEY5,KEY2,TTYPE,SP70
          CALL      RDCODE1
          IF        OVRCD=0
            PACK      TDDESC,TDESC,SP70
          ENDIF
.
          MOVE      SAVADMNO,TADMNO
          MOVE      AURNO,TDCODE
          MOVE      FORM12P2,TPATAMTT
          MOVE      FORM12P2,TPATAMTP
.
          REP       " 0",PINVDTE
          UNPACK    PINVDTE,XCENT,XYEAR,XMON,XDAY
          MOVE      XCENT,TFCENT
          MOVE      XYEAR,TFYEAR
          MOVE      XMON,TFMONTH
          MOVE      XDAY,TFDAY
          MOVE      SP70,TITEMNO
          MOVE      PINVNO,TREF
          MOVE      ONE,TINVPRT
          MOVE      PINVDTE,PTDTEFFD
          MOVE      PTINHFND,PTDTCNTR
          MOVE      SIX,TRECTYPE        * for Journal
          MATCH     SP70,SAVECPRC
          IF        @EQUAL
            MOVE      PRIMMBS,SAVECPRC
          ENDIF
          MOVE      SAVECPRC,PTDTCPRC     * Contract Procedure code
.
WJNL4000  MOVE      SAVADMNO,TADMNO
          MOVE      PINVNO,TREF
          MOVE      TADMNO,PVIBILL
          MOVE      PVIBILL,KEY8
          CALL      TRVISA1
          MOVE      PVITRAN,TTRANSN1
          MOVE      PVITRAN,ATRANNO
.
          PACK      KEY22 WITH TADMNO,TREF,TTRANSN1,SP70
          CALL      RANZRDT1
          COMPARE   ZERO,OVRCD
          GOTO      WJNL4000 IF EQUAL    * Try the next transaction number
.
          UNPACK    BATCHID,KEY2,KEY17      * KEY2="HT"
          MOVE      SP70,KEY5
          MOVE      BATCHNUM,KEY5
          REP       " 0",KEY5
          PACK      PTDTBTCH,KEY5,KEY17,SP70    * Bathnum + Hospcode +Date
.
          CALL      WRNZRDT1             * Write Procedure record
          MOVE      PINVNO,NZEXINVN
.
          CALL      MMAP0000                  * mapping journal 
.
WJNL8000  COMPARE   ZERO,CPRCNUMB
          GOTO      WJNL9999 IF EQUAL
.
          COMPARE   CPRCNUMB,COUNTA
          GOTO      WJNL2200 IF LESS
.
WJNL9999  RETURN
+
.******************************************************************************
.        Check if the fully credit notes invoice was raised for a primary 
.        funder and the primary funder is now changed before the invoice being
.        extracted
.******************************************************************************
CRDT0000  MOVE      "6",KEY1
          PACK      KEY23,SAVADMNO,SAVINVNO,KEY1,SP70
          CALL      RSNZRDT4
CRDT1000  CALL      RKNZRDT4
          BRANCH    OVRCD,CRDT8000
.
          MATCH     SAVADMNO,TADMNO
          GOTO      CRDT8000 IF NOT EQUAL
          MATCH     TREF,SAVINVNO
          GOTO      CRDT8000 IF NOT EQUAL
          COMPARE   SIX,TRECTYPE
          GOTO      CRDT8000 IF NOT EQUAL       * Not a journal record
.
          MATCH     PTCNLJCD,TTYPE              * Loss
          GOTO      CRDT2000 IF EQUAL
          MATCH     PTCNWJCD,TTYPE              * Win
          GOTO      CRDT8000 IF NOT EQUAL
.
CRDT2000  MOVE      ZERO,EXIT
          GOTO      CRDT9999
.
CRDT8000  MOVE      ONE,EXIT
CRDT9999  RETURN
+
.******************************************************************************
.         Check if invoice has multiple Contract procedures
.******************************************************************************
MCPR0000  MOVE      "8",KEY1
          PACK      KEY23,SAVADMNO,PINVNO,KEY1,SP70
          CALL      RDSDTRN4
MCPR1000  CALL      RDKDTRN4
          BRANCH    OVRCD,MCPR9999
          MATCH     SAVADMNO,TADMNO
          GOTO      MCPR9999 IF NOT EQUAL
          MATCH     PINVNO,TREF                  * Check if Same Invoice
          GOTO      MCPR9999 IF NOT EQUAL
          COMPARE   EIGHT,TRECTYPE
          GOTO      MCPR9999 IF NOT EQUAL
.
          MATCH     SP70,PTDTCPRC
          GOTO      MCPR1000 IF EQUAL
.
.         Check if Contract Procedure code already exist in the array
.
          CALL      PARY0000
.
          GOTO      MCPR1000
.
MCPR9999  RETURN
+
.******************************************************************************
.         Check if this Contract Procedure code already exists in the array
.******************************************************************************
PARY0000  MOVE      ZERO,F1
          COMPARE   ZERO,CPRCNUMB
          GOTO      PARY8000 IF EQUAL
.
PARY1000  ADD       ONE,F1
          MATCH     CPRCCODE[F1],PTDTCPRC
          GOTO      PARY9999 IF EQUAL           * already exists
.
          COMPARE   CPRCNUMB,F1
          GOTO      PARY1000 IF LESS            * check next code in the array
.
.         Add the contract procedure code to the array.
.
PARY8000  ADD       ONE,F1
          MOVE      PTDTCPRC,CPRCCODE[F1]
          ADD       ONE,CPRCNUMB
.
PARY9999  RETURN
+
.******************************************************************************
.         Get total contract amount
.******************************************************************************
CNTR0000  MOVE      ZERO,FORM12P2
          MOVE      "8",KEY1
          PACK      KEY23,SAVADMNO,SAVINVNO,KEY1,SP70
          CALL      RDSDTRN4
CNTR1000  CALL      RDKDTRN4
          BRANCH    OVRCD,CNTR9999
          MATCH     SAVADMNO,TADMNO
          GOTO      CNTR9999 IF NOT EQUAL
          MATCH     TREF,SAVINVNO
          GOTO      CNTR9999 IF NOT EQUAL
          COMPARE   EIGHT,TRECTYPE
          GOTO      CNTR9999 IF NOT EQUAL * Not a procedure record
.
          MATCH     SP70,SAVECPRC
          IF        @EQUAL
            MATCH     PTDTCNTR,PRIMFUND
            GOTO      CNTR1000 IF NOT EQUAL * Not a primary funder invoice
          ELSE
            MATCH     SAVECPRC,PTDTCPRC
            GOTO      CNTR1000 IF NOT EQUAL
          ENDIF
.
          ADD       PTDTLSPT,FORM12P2
          ADD       PTDTLSRB,FORM12P2
          ADD       PTDTADPT,FORM12P2
.
          GOTO      CNTR1000
.
CNTR9999  RETURN
+
.******************************************************************************
.         Calculate FFS
.******************************************************************************
CFFS0000  MOVE      ZERO,TFFSAMNT
          PACK      KEY23,SAVADMNO,SAVINVNO,SP70
          CALL      RSNZRDT4
CFFS1000  CALL      RKNZRDT4
          BRANCH    OVRCD,CFFS9999
.
          MATCH     SAVADMNO,TADMNO
          GOTO      CFFS9999 IF NOT EQUAL
          MATCH     TREF,SAVINVNO
          GOTO      CFFS1000 IF NOT EQUAL
.
          MATCH     SP70,SAVECPRC
          IF        !@EQUAL
            MATCH     SAVECPRC,PTDTCPRC
            GOTO      CFFS1000 IF NOT EQUAL
          ENDIF
.
          BRANCH    TRECTYPE,CFFS1020:       * Accommodation record
                             CFFS1100:       * Theatre
                             CFFS1200        * Misc.Charge
          GOTO      CFFS1000
.
.         Accommodation for Primary procedure only
.
CFFS1020  MATCH     PTDTCPRC,PRIMMBS
          GOTO      CFFS1000 IF NOT EQUAL
.
          GOTO      CFFS2000
.
CFFS1100  PACK      KEY11,SAVADMNO,PTDTSUNQ,SP70
          CALL      RDNZSPR1
          BRANCH    OVRCD,CFFS1000
.
          GOTO      CFFS2000
.
CFFS1200  BRANCH    PTDTCCU,CFFS1000,CFFS1000
          COMPARE   TWO,TCLAIM
          GOTO      CFFS1000 IF EQUAL        * Not included in Win/Loss Calc.
.
          IF        CNTPTFLG=1
            MATCH     SP70,PTDTCNTR
            GOTO      CFFS1000 IF NOT EQUAL
.
            PACK      KEY11,SAVADMNO,PTDTSUNQ,SP70
            CALL      RDNZSPR1
            IF        OVRCD=0
              IF        NZSPPRIM<>1
                PACK      KEY5,CODECL,NZSPCLMN
                CALL      RDCODE1
                IF        OVRCD=0
                  CMATCH    "P",TCINDC7
                  GOTO      CFFS1000 IF NOT EQUAL       * Not a Patient contract
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
CFFS2000  ADD       TPATAMTT,TFFSAMNT
          GOTO      CFFS1000
.
CFFS9999  RETURN
+
.******************************************************************************
.         Check if it had been extracted previously
.******************************************************************************
CHXT0000  PACK      KEY23,PINVADM,PINVNO,SP70
          CALL      RSNZRDT4
          CALL      RKNZRDT4
          BRANCH    OVRCD,CHXT9999
.
          MATCH     PINVADM,TADMNO
          GOTO      CHXT9999 IF NOT EQUAL
          MATCH     PINVNO,TREF
          GOTO      CHXT9999 IF NOT EQUAL
.
          MATCH     SP70,PTDTBTCH
          GOTO      CHXT9999 IF EQUAL       * Not extracted yet
.
          MOVE      SP70,KEY5
          MOVE      BATCHNUM,KEY5
          REP       " 0",KEY5
          MATCH     KEY5,PTDTBTCH
          GOTO      CHXT9999 IF EQUAL       * same as current batch no
          MOVE      ONE,EXTRFLG
CHXT9999  RETURN
+
.******************************************************************************
.         Get primary funder and check for multiple funder
.******************************************************************************
GPRM0000  MOVE      ZERO,EXIT
          MOVE      ZERO,CNTPTFLG
.
          MOVE      SP70,PRIMFUND
          MOVE      SP70,PRIMMBS
.
          MOVE      ZERO,MULTCNTR
          MOVE      SP70,KEY6
          MOVE      SAVADMNO,KEY8
          PACK      KEY17 WITH SAVADMNO,SP70
          CALL      RSNZSPR2
GPRM2000  CALL      RKNZSPR2
          BRANCH    OVRCD OF GPRM2200
.
          MATCH     NZSPADMN,KEY8
          GOTO      GPRM2200 IF NOT EQUAL
.
          COMPARE   ONE,NZSPPIND
          GOTO      GPRM2000 IF NOT EQUAL        * Not performed
.     
          COMPARE   ONE,NZSPPRIM
          GOTO      GPRM2000 IF NOT EQUAL        * Not primary
.
          MATCH     SP70,NZSPCNTR
          GOTO      GPRM9999 IF EQUAL
.
          MOVE      NZSPCNTR,PRIMFUND            * Primary Funder
          MOVE      NZSPCPRC,PRIMMBS
.
          PACK      KEY5,ANSC,ANSL,NZSPCLMN
          CALL      RDCODE1
          IF        OVRCD=0
            CMATCH    "P",TCINDC7
            IF        @EQUAL
              MOVE      ONE,CNTPTFLG              * Contract bill to Patient
            ENDIF
          ENDIF
.
          CMATCH    "P",TCINDC7
          IF        !@EQUAL
            MATCH     "F",TCINDC7
            GOTO      GPRM2000 IF NOT EQUAL
          ENDIF
.
          MOVE      NZSPCNTR,KEY6           * Contract primary funder
          GOTO      GPRM2000
.
.         Check for other subsequence procedures
.
GPRM2200  MATCH     SP70,KEY6
          GOTO      GPRM9999 IF EQUAL
.
          PACK      KEY17 WITH SAVADMNO,SP70
          CALL      RSNZSPR2
GPRM3000  CALL      RKNZSPR2
          BRANCH    OVRCD OF GPRM9999
.
          MATCH     NZSPADMN,KEY8
          GOTO      GPRM9999 IF NOT EQUAL
.
          COMPARE   ONE,NZSPPIND
          GOTO      GPRM3000 IF NOT EQUAL        * Not performed
.
          COMPARE   ONE,NZSPPRIM
          GOTO      GPRM3000 IF EQUAL            * Skip primary
.
          PACK      KEY5,ANSC,ANSL,NZSPCLMN
          CALL      RDCODE1
          BRANCH    OVRCD,GPRM3000
.
          CMATCH    "P",TCINDC7
          IF        !@EQUAL
            MATCH     "F",TCINDC7
            GOTO      GPRM3000 IF NOT EQUAL
          ENDIF
.
          MATCH     NZSPCNTR,KEY6           * Contract Primary funder
          GOTO      GPRM3000 IF EQUAL
.
          MOVE      ONE,MULTCNTR            * multiple contract procedure
.
GPRM9999  RETURN
+
.******************************************************************************
.         GST Mapping 
.******************************************************************************
GSTM0000  COMPARE   ZERO,PTINGSTA
          GOTO      GSTM9999 IF EQUAL           * No GST
.
          MOVE      "8",NZEXRTYP
          CLEAR     NZEXDESC
          APPEND    "GST",NZEXDESC
          APPEND    SP70,NZEXDESC
          RESET     NZEXDESC
          MOVE      PTCNAGST,NZEXGSTC           * GST Code
          MOVE      PTINGSTA,GLAMOUNT
          MOVE      SP70,NZEXRREF
.
          MOVE      "1",PTFMSUB
          MOVE      SP70,PTFMCOD
          MOVE      "000000",NZEXTRNO
          CALL      NZGL0000                    * Get the Mapping
          MOVE      SP70,NZEXGSTC
.
GSTM9999  RETURN
+
.******************************************************************************
.*                                  PAAE0000                                  *
.*    Processing aaedtref for records with blank G/L Batch Number             *
.******************************************************************************
PAAE0000  MOVE      SP70,NZEXRREF
          MOVE      SP70,SAVINVNO
          MOVE      "60",CLNO
          MOVE      SP70,KEY38
PAAE0100  CALL      RDSDTRE7
PAAE0200  CALL      RDKDTRE7
          BRANCH    OVRCD,PAAE9999
.
          MATCH     SP70,ATDTBTCH
          GOTO      PAAE9999 IF NOT EQUAL       * Already been extracted
.
.         Ignore cash
.
          BRANCH    ATRECTYP,PAAE0300,PAAE0200
.
PAAE0300  MATCH     SP70,SAVINVNO
          GOTO      PAAE0400 IF EQUAL           * First record
          MATCH     SAVINVNO,ATINVNO
          GOTO      PAAE0800 IF EQUAL
.
PAAE0400  MOVE      ATINVNO,KEY8
          CALL      RDINV1
          BRANCH    OVRCD,PAAE0200              * Missing invoice record
.
          MOVE      PINVADM,KEY8
          CALL      RDVISA1
          BRANCH    OVRCD,PAAE0200              * Missing visit record
          CALL      RDPMVX11
          BRANCH    OVRCD,PAAE0200              * Missing visit record
          MATCH     PMVXMHOS,HOSPCODE
          GOTO      PAAE0200 IF NOT EQUAL       * Not the selected hospital
.
          CALL      RDRESP1
          IF        OVRCD=1
            PACK      PKNAME,SP70,SP20          * PRFA Name
          ENDIF
.
          MOVE      PVIBILL,KEY8
          CALL      RDDETA1
          BRANCH    OVRCD,PAAE0200
.
          CALL      CLNZPEXT
          MOVE      PINVDTE,NZEXTDAT
          REP       " 0",NZEXTDAT
.
          MOVE      "1",NZEXSYST
          PACK      NZEXBNAM,PKNAME,SP70        * PRFA
          MOVE      PMVXMHOS,NZEXHCOD           * Hospital code
          MOVE      PMVXMHOS,PTFMHOSP           * Hospital code
          MOVE      PVIURNO,NZEXURNO
          MOVE      PINVADM,NZEXADMN
          MOVE      PINVNO,NZEXINVN
.
          COMPARE   THREE,ATRECTYP
          GOTO      PAAE0800 IF EQUAL           * Journal record - No GST
.
          COMPARE   ZERO,PTINGSTA
          GOTO      PAAE0800 IF EQUAL           * No GST
.
          MOVE      "8",NZEXRTYP
          CLEAR     NZEXDESC
          APPEND    "GST",NZEXDESC
          APPEND    SP70,NZEXDESC
          RESET     NZEXDESC
          MOVE      PTCNAGST,NZEXGSTC           * GST Code
          MOVE      PTINGSTA,GLAMOUNT
.
          MOVE      "1",PTFMSUB
          MOVE      SP70,PTFMCOD
          MOVE      "000000",NZEXTRNO
          CALL      NZGL0000                    * Get the Mapping 
          MOVE      SP70,NZEXGSTC
.
PAAE0800  MOVE      ATTRANS,NZEXTRNO
          MOVE      ATPATAMT,GLAMOUNT
          BRANCH    ATRECTYP,PAAE3000,PAAE0200,PAAE6000
          GOTO      PAAE0200
.
PAAE3000  MOVE      "3",NZEXRTYP
          CLEAR     NZEXDESC
          APPEND    "FI ",NZEXDESC
          APPEND    ATMISGRP,NZEXDESC
          APPEND    SP1,NZEXDESC
          APPEND    ATITEMNO,NZEXDESC
          APPEND    SP70,NZEXDESC
          RESET     NZEXDESC
.
          MOVE      "3",PTFMSUB
          IF        PTCNMFEE=1
            PACK      PTFMCOD,ANSM,ADACOMP,ATMISGRP,SP20
.                  Misc. Charge, Claim Code, Group Code
          ELSE
            PACK      PTFMCOD,ANSM,ATMISGRP,ATITEMNO,SP20
.                             Misc. Charge, Group Code, Item Code
          ENDIF
          GOTO      PAAE9000
.
PAAE6000  MOVE      "6",NZEXRTYP
          CLEAR     NZEXDESC
          APPEND    ATTYPE,NZEXDESC
          APPEND    SP1,NZEXDESC
          APPEND    ATDDESC,NZEXDESC
          APPEND    SP70,NZEXDESC
          RESET     NZEXDESC
          MOVE      ATDDATE,NZEXTDAT
          REP       " 0",NZEXTDAT
.
          MOVE      "5",PTFMSUB
          IF        PTCNJFEE=1
            PACK      PTFMCOD,PINVCLM,ATTYPE,SP70
          ELSE
            PACK      PTFMCOD,ATTYPE,SP70
          ENDIF
          ADD       ATDTGSTM,GLAMOUNT
.
.         Write a record to G/L Extract file
.
PAAE9000  CALL      NZGL0000                    * Get the Mapping 
.
          PACK      KEY38,ATDTBTCH,ATINVNO,ATNUMB,ATTRANS,SP70
.
          UNPACK    BATCHID,KEY2,KEY17          * KEY2="HT"
          MOVE      SP70,KEY5
          MOVE      BATCHNUM,KEY5
          REP       " 0",KEY5
          PACK      ATDTBTCH,KEY5,KEY17,SP70    * Bathnum + Hospcode +Date
          CALL      UPDTRE7
.
          GOTO      PAAE0100
.
PAAE9999  RETURN
+
.******************************************************************************
.*                                  POUT0000                                  *
.*    Processing outdtrof for records with blank G/L Batch Number             *
.******************************************************************************
POUT0000  MOVE      SP70,NZEXRREF
          MOVE      "60",CLNO
.
.       Loop over all sites to get all possible outpatient file names
.
          OPEN      OUTSITA1,"outsitaf"
          MOVE      SP6,KEY6
          CALL      RDSSITA1
POUT0100  CALL      RDKSITA1
          BRANCH    OVRCD,POUT9999
.
          MOVE      ZERO,OVRCD                * Initialise test flag
          TRAP      OVERCOND IF IO            * Trap IO errors
          PACK      CFNAME,OSTFILE,FILDTRO6
          OPEN      OUTDTRO1,CFNAME
          OPEN      OUTDTRO6,CFNAME
          TRAPCLR   IO                        * Clear IO trap
          BRANCH    OVRCD,POUT0100            * Ignore site if IO error.
.
          PACK      CFNAME WITH OSTFILE,FILBB1A1
          CALL      OPOTBB11
.
          MOVE      SP70,SAVINVNO
          MOVE      SP70,KEY38
POUT0200  CALL      RDSDTRO6
POUT0300  CALL      RDKDTRO6
          BRANCH    OVRCD,POUT0100
.
          MATCH     SP70,OTDTBTCH
          GOTO      POUT0100 IF NOT EQUAL     * Already been extracted
.
.         Ignore Cash
.
          BRANCH    OTRECTYP,POUT0320,POUT0300
.
POUT0320  MATCH     SP70,SAVINVNO
          GOTO      POUT0400 IF EQUAL           * First record
          MATCH     SAVINVNO,OTINVNO
          GOTO      POUT0800 IF EQUAL
.
POUT0400  MOVE      OTINVNO,KEY8
          CALL      RDINV1
          BRANCH    OVRCD,POUT0300              * Missing invoice record
.
          MOVE      PINVADM,KEY8
          CALL      RDVISA1
          BRANCH    OVRCD,POUT0300              * Missing visit record
          CALL      RDPMVX11
          BRANCH    OVRCD,POUT0300              * Missing visit record
          MATCH     PMVXMHOS,HOSPCODE
          GOTO      POUT0300 IF NOT EQUAL       * Not the selected hospital
.
          CALL      RDRESP1
          IF        OVRCD=1
            PACK      PKNAME,SP70,SP20          * PRFA Name
          ENDIF
.
          MOVE      PVIBILL,KEY8
          CALL      RDBOKB1
          BRANCH    OVRCD,POUT0300
.
          CALL      CLNZPEXT
          MOVE      PINVDTE,NZEXTDAT
          REP       " 0",NZEXTDAT
.
          MOVE      "2",NZEXSYST
          PACK      NZEXBNAM,PKNAME,SP70        * PRFA
          MOVE      PMVXMHOS,NZEXHCOD           * Hospital code
          MOVE      PMVXMHOS,PTFMHOSP           * Hospital code
          MOVE      PVIURNO,NZEXURNO
          MOVE      PINVADM,NZEXADMN
          MOVE      PINVNO,NZEXINVN
.
          COMPARE   THREE,OTRECTYP
          GOTO      POUT0800 IF EQUAL           * Journal - No GST
.
          COMPARE   ZERO,PTINGSTA
          GOTO      POUT0800 IF EQUAL           * No GST
.
          MOVE      "8",NZEXRTYP
          CLEAR     NZEXDESC
          APPEND    "GST",NZEXDESC
          APPEND    SP70,NZEXDESC
          RESET     NZEXDESC
          MOVE      PTCNAGST,NZEXGSTC           * GST Code
          MOVE      PTINGSTA,GLAMOUNT
.
          MOVE      "1",PTFMSUB
          MOVE      SP70,PTFMCOD
          MOVE      "000000",NZEXTRNO
          CALL      NZGL0000                    * Get the Mapping 
          MOVE      SP70,NZEXGSTC
.
POUT0800  MOVE      OTTRANS,NZEXTRNO
          MOVE      OTPATAMT,GLAMOUNT
          BRANCH    OTRECTYP,POUT3000,POUT0300,POUT6000,POUT0300:
                             POUT7000,POUT3000
          GOTO      POUT0300
.
POUT3000  MOVE      "3",NZEXRTYP
          CLEAR     NZEXDESC
          APPEND    "FI ",NZEXDESC
          APPEND    OTMISGRP,NZEXDESC
          APPEND    SP1,NZEXDESC
          APPEND    OTITEMNO,NZEXDESC
          APPEND    SP70,NZEXDESC
          RESET     NZEXDESC
.
          MOVE      "3",PTFMSUB
          IF        PTCNMFEE=1
            PACK      PTFMCOD,ANSM,OBACOMP,OTMISGRP,SP20
.                   Misc. Charge, Claim Code, Group Code
          ELSE
            PACK      PTFMCOD,ANSM,OTMISGRP,OTITEMNO,SP20
.                             Misc. Charge, Group Code, Item Code
          ENDIF
          GOTO      POUT9000
.
POUT6000  MOVE      "6",NZEXRTYP
          CLEAR     NZEXDESC
          APPEND    OTTYPE,NZEXDESC
          APPEND    SP1,NZEXDESC
          APPEND    OTDDESC,NZEXDESC
          APPEND    SP70,NZEXDESC
          RESET     NZEXDESC
          MOVE      OTDDATE,NZEXTDAT
          REP       " 0",NZEXTDAT
.
          MOVE      "5",PTFMSUB
          IF        PTCNJFEE=1
            PACK      PTFMCOD,PINVCLM,OTTYPE,SP70
          ELSE
            PACK      PTFMCOD,OTTYPE,SP70
          ENDIF
          ADD       OTDTGSTM,GLAMOUNT
          GOTO      POUT9000
.
POUT7000  MOVE      "7",NZEXRTYP
          CLEAR     NZEXDESC
          APPEND    "Rounding",NZEXDESC
          APPEND    SP70,NZEXDESC
          RESET     NZEXDESC
.
          MOVE      "3",PTFMSUB
          IF        PTCNMFEE=1
            PACK      PTFMCOD,ANSM,OBACOMP,PTCNROUN,SP70
          ELSE
            PACK      PTFMCOD,ANSM,PTCNROUN,SP70
          ENDIF
          GOTO      POUT9000
.
.         Write a record to G/L Extract file
.
POUT9000  CALL      NZGL0000                    * Get the Mapping 
          PACK      KEY38,OTDTBTCH,OTINVNO,OTNUMB,OTTRANS,SP70
.
          UNPACK    BATCHID,KEY2,KEY17          * KEY2="HT"
          MOVE      SP70,KEY5
          MOVE      BATCHNUM,KEY5
          REP       " 0",KEY5
          PACK      OTDTBTCH,KEY5,KEY17,SP70    * Bathnum + Hospcode +Date
          CALL      UPDTRO6
          GOTO      POUT0200
.
POUT9999  RETURN
+
.******************************************************************************
.   Southern Cross General Ledger Interface 
.******************************************************************************
NZGL0000  IF        NZEXRTYP=1 | NZEXRTYP=2
            COMPARE   ZERO,GLAMOUNT
            GOTO      NZGL9999 IF EQUAL
          ENDIF
.
          MOVE      SAVADMNO,NZEXADMN
          MOVE      PINVNO,NZEXINVN
          MOVE      GLAMOUNT,NZEXDAMT            * Debit Amount
          MOVE      GLAMOUNT,NZEXCAMT            * Credit Amount
          MULT      "-1",NZEXCAMT
.
.         Write a record to G/L Extract file
.
          MOVE      CURRDATE,NZEXCDAT            * date created
          CLOCK     TIME,NZEXCTIM                * time created
          MOVE      PASSCODE,NZEXCUID            * user id
          MOVE      SP70,NZEXSPAR
.
          CALL      NZPAC000                   * Check if it's a pack item
          BRANCH    EXIT,NZGL9000
.
          CALL      MFMS0000                     * Checking patfmsaf mapping
          IF        EXIT=1
            MOVE      "99999              ",NZEXBTID           * no mapping
          ELSE
            MOVE      "00000",NZEXGLBT
          ENDIF
.
          PACK      KEY30,NZEXADMN,NZEXINVN,NZEXGLBT,NZEXHCOD,NZEXTRNO,SP70
          CALL      WRNZEXT2                     * Write a record
.
NZGL9000  MOVE      ZERO,EXIT
          MOVE      SP70,NZEXBTID
NZGL9999  RETURN
+
.******************************************************************************
.         Check for Pack item
.******************************************************************************
NZPAC000  MOVE      ZERO,RECCNT
          MATCH     "3",NZEXSYST
          GOTO      NZPAC900 IF NOT EQUAL       * Not an inpatient
          COMPARE   "3",NZEXRTYP
          GOTO      NZPAC900 IF NOT EQUAL       * Not a misc.item
.
.         PACK      MISCDATE,NZEXTDAT,SP70
          PACK      MISCDATE,TFCENT,TFYEAR,TFMONTH,TFDAY
          REP       " 0",MISCDATE
          PACK      KEY9,TITEMNO,SP70
          CALL      GETNZM00
          BRANCH    EXIT,NZPAC900
.
          COMPARE   ONE,NZMCCHGT
          GOTO      NZPAC900 IF NOT EQUAL       * Not a pack item
.
          COMPARE   ZERO,NZMCPATP
          GOTO      NZPAC900 IF NOT EQUAL
.
          PACK      SKEY37,NZMCHOSP,NZMCCLMC,NZMCCNTR,NZMCFTAB,NZMCMCHG:
                          NZMCEFDT,SP70
          CALL      TPAC0000                    * Check total amount of pack itm
          BRANCH    EXIT,NZPAC9000
.
          PACK      KEY37,SKEY37,SP70
          CALL      RDNZMCH1                    * Reposition to pack item
          BRANCH    OVRCD,NZPAC900
.
          PACK      KEY40,SKEY37,SP70
          CALL      RSNZMXC1
NZPAC100  CALL      RKNZMXC1
          BRANCH    OVRCD,NZPAC800
.
          PACK      DIM37,NZMXHOSP,NZMXCLMC,NZMXCNTR,NZMXFTAB,NZMXMCHG:
                              NZMXEFDT,SP70
.
          MATCH     DIM37,SKEY37
          GOTO      NZPAC800 IF NOT EQUAL
.
          PACK      KEY9,NZMXITMN,SP70
          CALL      GETNZM00
          BRANCH    EXIT,NZPAC100               * invalid misc.item
.
          CLEAR     NZEXDESC
          APPEND    "FI ",NZEXDESC
          APPEND    NZMCCGRP,NZEXDESC
          APPEND    SP1,NZEXDESC
          APPEND    NZMXITMN,NZEXDESC
          APPEND    SP70,NZEXDESC
          RESET     NZEXDESC
.
          MOVE      "3",PTFMSUB
          IF        PTCNMFEE=1
            PACK      PTFMCOD,ANSM,SAVCLM,NZMCCGRP,SP70
          ELSE
            PACK      PTFMCOD,ANSM,NZMCCGRP,NZMXITMN,SP70
          ENDIF
.
          MOVE      NZMCPATP,FORM12P2
          MOVE      ONE,FORM3                    * default quantity to one
          MOVE      NZMXQNTY,FORM3
          IF        TSERVS<>0
            MULT      TSERVS,FORM3
          ENDIF
          MULT      FORM3,FORM12P2
.
          MOVE      FORM12P2,NZEXDAMT            * Debit Amount
          MOVE      FORM12P2,NZEXCAMT            * Credit Amount
          MULT      "-1",NZEXCAMT
.
          CALL      MFMS0000                     * Checking patfmsaf mapping
          IF        EXIT=1
            MOVE      "99999              ",NZEXBTID           * no mapping
          ELSE
            MOVE      "00000",NZEXGLBT
          ENDIF
.
          PACK      KEY30,NZEXADMN,NZEXINVN,NZEXGLBT,NZEXHCOD,NZEXTRNO,SP70
          CALL      WRNZEXT2                     * Write a record
          MOVE      ONE,RECCNT
          GOTO      NZPAC100
.
NZPAC800  MOVE      ONE,EXIT
          BRANCH    RECCNT,NZPAC999
.
NZPAC900  MOVE      ZERO,EXIT
NZPAC999  RETURN
+
.******************************************************************************
.         Get total amount of items in the pack
.******************************************************************************
TPAC0000  MOVE      ZERO,FORM12P2
          PACK      KEY40,SKEY37,SP70
          CALL      RSNZMXC1
TPAC1000  CALL      RKNZMXC1
          BRANCH    OVRCD,TPAC8000
.
          PACK      DIM37,NZMXHOSP,NZMXCLMC,NZMXCNTR,NZMXFTAB,NZMXMCHG:
                              NZMXEFDT,SP70
.
          MATCH     DIM37,SKEY37
          GOTO      TPAC8000 IF NOT EQUAL
.
          PACK      KEY9,NZMXITMN,SP70
          CALL      GETNZM00
          BRANCH    EXIT,TPAC1000               * invalid misc.item
.
          MOVE      ONE,FORM3                   * default quantity to one
          MOVE      NZMXQNTY,FORM3
          IF        TSERVS<>0
            MULT      TSERVS,FORM3
          ENDIF
.
          MOVE      NZMCPATP,F12P2
          MULT      FORM3,F12P2
          ADD       F12P2,FORM12P2
          GOTO      TPAC1000
.
TPAC8000  MOVE      ZERO,EXIT
          COMPARE   FORM12P2,GLAMOUNT
          GOTO      TPAC9999 IF EQUAL
          MOVE      ONE,EXIT
.
TPAC9999  RETURN
+
.******************************************************************************
.         Get NZ Misc.Item
.******************************************************************************
GETNZM00  MOVE      ZERO,EXIT
          PACK      KEY11,SAVADMNO,PTDTSUNQ,SP70
          CALL      RDNZSPR1
          IF        OVRCD=1
            PACK      NZSPCLMN,ACLAIM,SP70
            PACK      NZSPCNTR,AFUNDH,SP70
          ENDIF
.
          MOVE      PMVXMHOS,KEY3
          MOVE      ZERO,F1
.
GETNZM07  PACK      KEY29,KEY3,NZSPCLMN,NZSPCNTR,SP8,KEY9,SP70
          PACK      KEY37,KEY29,MISCDATE
          CALL      RDNZMCH1
          IF        OVRCD=0
            MATCH     "1",NZMCACFL                * Inactive?
            GOTO      GETNZM99 IF NOT EQUAL       * No
          ENDIF
.
GETNZM08  CALL      RPNZMCH1
          BRANCH    OVRCD,GETNZM10
          PACK      KEY29A,NZMCHOSP,NZMCCLMC,NZMCCNTR,NZMCFTAB,NZMCMCHG,SP70
          MATCH     KEY29,KEY29A
          GOTO      GETNZM10 IF NOT EQUAL
.
          MATCH     "1",NZMCACFL                * Inactive?
          GOTO      GETNZM08 IF EQUAL           * Yes
.
          MATCH     NZMCEFDT,MISCDATE       * effective date => serv. date ?
          GOTO      GETNZM10 IF LESS        * yes
.
          MATCH     SP70,NZMCEEDT
          IF        !@EQUAL
            MATCH     MISCDATE,NZMCEEDT
            GOTO      GETNZM10 IF LESS
          ENDIF
          GOTO      GETNZM99
.
.         No record with health fund details - try a blank health fund
.
GETNZM10  PACK      KEY29,KEY3,NZSPCLMN,SP6,SP8,KEY9,SP70
          PACK      KEY37,KEY29,MISCDATE
          CALL      RDNZMCH1
          IF        OVRCD=0
            MATCH     "1",NZMCACFL                * Inactive?
            GOTO      GETNZM99 IF NOT EQUAL       * No
          ENDIF
.
GETNZM12  CALL      RPNZMCH1
          BRANCH    OVRCD,GETNZM20
          PACK      KEY29A,NZMCHOSP,NZMCCLMC,NZMCCNTR,NZMCFTAB,NZMCMCHG,SP70
          MATCH     KEY29,KEY29A
          GOTO      GETNZM20 IF NOT EQUAL
.
          MATCH     "1",NZMCACFL                * Inactive?
          GOTO      GETNZM12 IF EQUAL           * Yes
.
          MATCH     NZMCEFDT,MISCDATE       * effective date => serv. date ?
          GOTO      GETNZM20 IF LESS        * yes
.
          MATCH     SP70,NZMCEEDT
          IF        !@EQUAL
            MATCH     MISCDATE,NZMCEEDT
            GOTO      GETNZM20 IF LESS
          ENDIF
          GOTO      GETNZM99
.
.         No record with health fund details - try default claim, blank hf
.
GETNZM20  IF        IBCNMHOS=1
            MOVE      PTHSDCLM,NZMCCLMC
          ELSE
            MOVE      PTCNDCLM,NZMCCLMC
          ENDIF
          PACK      KEY29,KEY3,NZMCCLMC,SP14,KEY9
          PACK      KEY37,KEY29,MISCDATE,SP70
          CALL      RDNZMCH1
          IF        OVRCD=0
            MATCH     "1",NZMCACFL                * Inactive?
            GOTO      GETNZM99 IF NOT EQUAL       * No
          ENDIF
.
GETNZM22  CALL      RPNZMCH1
          BRANCH    OVRCD,GETNZM30
          PACK      KEY29A,NZMCHOSP,NZMCCLMC,NZMCCNTR,NZMCFTAB,NZMCMCHG,SP70
          MATCH     KEY29,KEY29A
          GOTO      GETNZM30 IF NOT EQUAL
.
          MATCH     "1",NZMCACFL                * Inactive?
          GOTO      GETNZM22 IF EQUAL           * Yes
.
          MATCH     NZMCEFDT,MISCDATE       * effective date => serv. date ?
          GOTO      GETNZM30 IF LESS        * yes
.
          MATCH     SP70,NZMCEEDT
          IF        !@EQUAL
            MATCH     MISCDATE,NZMCEEDT
            GOTO      GETNZM30 IF LESS
          ENDIF
          GOTO      GETNZM99
.
.         No record for the hosp.- try with blank hosp
.
GETNZM30  BRANCH    F1,GETNZM90
          ADD       ONE,F1
          MOVE      SP70,KEY3
          GOTO      GETNZM07
.
GETNZM90  MOVE      ONE,EXIT
          GOTO      GETNZM99
.
GETNZM99  RETURN
+
.******************************************************************************
.         Check for Revenue breakdown
.******************************************************************************
CRBR0000  MOVE      ZERO,EXIT
          MOVE      ZERO,F12P2
          MOVE      ZERO,FNDRBFLG             * Set to "No"-Found rev.breakdown
          PACK      KEY22,NZEXADMN,NZEXINVN,PTDTSUNQ,SP70
          CALL      RSNZRVB1
CRBR1000  CALL      RKNZRVB1
          BRANCH    OVRCD,CRBR9999
.
          MATCH     NZEXADMN,NZRVADMN
          GOTO      CRBR9999 IF NOT EQUAL     * Different admission
          MATCH     NZEXINVN,NZRVINVN
          GOTO      CRBR9999 IF NOT EQUAL     * Different invoice
          MATCH     PTDTSUNQ,NZRVSUNQ
          GOTO      CRBR9999 IF NOT EQUAL     * Different Uniq.number
          MOVE      ONE,FNDRBFLG          
.
          IF        PTCNMFEE=1
            PACK      PTFMCOD,ANSM,SAVCLM,NZRVBRCD,SP70  * use breakdown code
          ELSE
            PACK      PTFMCOD,ANSM,NZRVBRCD,TITEMNO,SP70
          ENDIF
          CLEAR     NZEXDESC
          APPEND    "FI ",NZEXDESC
          APPEND    NZRVBRCD,NZEXDESC
          APPEND    SP1,NZEXDESC
          APPEND    TITEMNO,NZEXDESC
          APPEND    SP70,NZEXDESC
          RESET     NZEXDESC
.
          ADD       NZRVAMNT,F12P2
          PACK      NZEXPREF,NZRVBRCD,SP70      * Save revenue breakdown
          MOVE      NZRVAMNT,GLAMOUNT
          CALL      NZGL0000                    * Get the Mapping 
.
          GOTO      CRBR1000
.
CRBR9999  RETURN
+
.******************************************************************************
.         Get the session type
.******************************************************************************
SEST0000  MOVE      PVIBILL,DPVIBILL
          PACK      KEY31,DPVIBILL,SP70
          CALL      RSOPDEA2
SEST1000  CALL      RKOPDEA2
          BRANCH    OVRCD,SEST9000
.
          MATCH     DPVIBILL,OPDAADMN
          GOTO      SEST9000 IF NOT EQUAL
.
          PACK      KEY22,PMVXMHOS,OPDADATE,OPDATIME,OPDACLIN,SP70
          CALL      RDOPSES1
          BRANCH    OVRCD,SEST1000
.
          COMPARE   THREE,OPDASTAT
          GOTO      SEST1000 IF EQUAL         * Cancelled
          GOTO      SEST9999
.
SEST9000  MOVE      SP70,OPSESTYP
SEST9999  RETURN
+
.******************************************************************************
.         Check Patient mapping interface - patfmsaf file
.******************************************************************************
MFMS0000  MOVE      PTFMHOSP,SAVFMHOS
          MOVE      PTFMSUB,SAVFMSUB
          MOVE      PTFMCOD,SAVFMCOD
.
.         Check if record exists in the interface file
.
          COMPARE   EIGHT,NZEXRTYP          * GST - just use default
          GOTO      MFMS7000 IF EQUAL
.
          PACK      KEY17,SAVFMHOS,SAVFMSUB,SAVFMCOD,SP70
          CALL      RDPTFM1
          COMPARE   ZERO,OVRCD
          GOTO      MFMS8000 IF EQUAL
.
          UNPACK    SAVFMCOD,ANS,KEY3,DIM3A,DIM3B
          MOVE      ZERO,FORM1
          MOVE      SAVFMSUB,FORM1
          BRANCH    FORM1,MFMS4000,MFMS7000,MFMS2000,MFMS9000
.                         Accom.   Theatre  Misc
.
          GOTO      MFMS7000                * Journal
.
.         Check with default Misc.Item
.
MFMS2000  IF        PTCNMFEE=1
            UNPACK    SAVFMCOD,ANS,DIM3,KEY3     * claim/group
          ELSE
            UNPACK    SAVFMCOD,ANS,KEY3,KEY9     * group/item code
          ENDIF
.
.         Check with item code and blank item group
.
          PACK      KEY9,KEY9,SP70
          MATCH     SP70,KEY9
          IF        !@EQUAL
            PACK      KEY17,SAVFMHOS,SAVFMSUB,ANS,SP3,KEY9,SP70
            CALL      RDPTFM1
            COMPARE   ZERO,OVRCD
            GOTO      MFMS8000 IF EQUAL
          ENDIF
.
          PACK      KEY17,SAVFMHOS,SAVFMSUB,ANS,KEY3,SP70
          CALL      RDPTFM1
          BRANCH    OVRCD,MFMS7000
          GOTO      MFMS8000
.
.         Check with default Accommodation
.
MFMS4000  BRANCH    CACCFEE,MFMS4100:            * Ward/Claim code ?
                            MFMS4100:            * Ward/Adm. type
                            MFMS4500:            * Ward/Claim/Adm.type ?
                            MFMS4500:            * Ward/Adm.type/Claim ?
                            MFMS7000             * Claim type ?
.
.        Accommodation by admission type
.
         GOTO      MFMS7000
.
.        Accommodation by ward/claim or by Ward/admission type
.
MFMS4100 PACK      KEY17,SAVFMHOS,SAVFMSUB,ANS,KEY3,SP70       * use default
         CALL      RDPTFM1
         COMPARE   ZERO,OVRCD
         GOTO      MFMS8000 IF EQUAL
.
         PACK      KEY17,SAVFMHOS,SAVFMSUB,ANS,SP3,DIM3A,SP70  * use default
         CALL      RDPTFM1
         BRANCH    OVRCD,MFMS7000                * no record
.
.        By ward/claim/admission type or ward/adm/claim type
.
MFMS4500  PACK      KEY17,SAVFMHOS,SAVFMSUB,SP20            * use default
          CALL      RSPTFM1
MFMS4850  CALL      RKPTFM1
          BRANCH    OVRCD,MFMS7000
.
          MATCH     PTFMHOSP,SAVFMHOS
          GOTO      MFMS7000 IF NOT EQUAL
          MATCH     PTFMSUB,SAVFMSUB
          GOTO      MFMS7000 IF NOT EQUAL
.
          UNPACK    PTFMCOD,ANS,DIM3C,DIM3D,DIM3E
          MATCH     SP3,DIM3C
          GOTO      MFMS4851 IF EQUAL
          MATCH     KEY3,DIM3C
          GOTO      MFMS4850 IF NOT EQUAL
.
MFMS4851  MATCH     SP3,DIM3D
          GOTO      MFMS4852 IF EQUAL
          MATCH     DIM3A,DIM3D
          GOTO      MFMS4850 IF NOT EQUAL
.
MFMS4852  MATCH     SP3,DIM3E
          GOTO      MFMS8000 IF EQUAL
          MATCH     DIM3B,DIM3E
          GOTO      MFMS4850 IF NOT EQUAL
          GOTO      MFMS8000
.
MFMS7000  PACK      KEY17,SAVFMHOS,SAVFMSUB,SP20    * use default
          CALL      RDPTFM1
          BRANCH    OVRCD,MFMS9000
          COMPARE   EIGHT,NZEXRTYP          * GST 
          GOTO      MFMS8000 IF NOT EQUAL
.
          PACK      NZEXCACC,PTFMILD,PTFMIGS,SP70   * GST Control-Credit Account
          PACK      NZEXDACC,PTFMILD,PTFMIDA,SP70   * Debit Account
          MOVE      ZERO,EXIT
          GOTO      MFMS9999
.
MFMS8000  PACK      NZEXCACC,PTFMILD,PTFMICA,SP70   * Credit Account
          PACK      NZEXDACC,PTFMILD,PTFMIDA,SP70   * Debit Account
          MOVE      ZERO,EXIT
          GOTO      MFMS9999
.
MFMS9000  MOVE      ONE,EXIT
          GOTO      MFMS9999
.
MFMS9999  RETURN
+
.******************************************************************************
.         Loop through Extract file and write to the Output file
.******************************************************************************
REXT0000  MOVE      ZERO,SEGCNT
          MOVE      SP70,SKEY30
          PACK      KEY30,HOSPCODE,SP70
          CALL      RSNZEXT4
          GOTO      REXT1000
.
REXT0200  MOVE      SKEY30,KEY30
          CALL      RDNZEXT4
          COMPARE   ZERO,OVRCD
          GOTO      REXT1200 IF EQUAL
.
REXT1000  CALL      RKNZEXT4
          BRANCH    OVRCD,REXT9000
.
REXT1200  MATCH     NZEXHCOD,HOSPCODE
          GOTO      REXT9000 IF NOT EQUAL       * Different hospital
.
          MOVE      ZERO,EXIT
          PACK      SKEY30,NZEXHCOD,NZEXGLBT,NZEXADMN,NZEXINVN,NZEXTRNO,SP70
.
.         If G/L Batch id is 99999, it must be no mapping
.
          MATCH     "99999              ",NZEXBTID  * no mapping?
          GOTO      REXT1400 IF EQUAL
.
          MATCH     "00000",NZEXGLBT
          GOTO      REXT2000 IF EQUAL           * Invoice details
.
.         Blank G/L Batch number will be for Credit notes records
.
          MATCH     SP70,NZEXGLBT
          GOTO      REXT9000 IF NOT EQUAL       * Already been extracted
.
.         Check mapping record for Credit Note before extracting
.
REXT1400  MOVE      NZEXHCOD,PTFMHOSP
          CALL      CMAP0000                    * Check if mapping rec.exists
.
REXT2000 
.
          MOVE      BATCHID,NZEXBTID            * Batch Id
          MOVE      BATCHNUM,NZEXGLBT           * Batch number
          REP       " 0",NZEXGLBT
          UNPACK    NZEXRTYP,DIM1,KEY1
.         IF        NZEXRTYP<>5
.           MOVE      SP70,NZEXRCNO
.           MOVE      "00000000000000000",NZEXPREF
.         ENDIF
.
          CALL      UPNZEXT4
          BRANCH    EXIT,REXT0200               * No mapping record found
.
          CALL      GADF0000                 * Generate extra fields
.
.         Credit Account
.
          UNPACK    NZEXTDAT,XCENT,XYEAR,XMON,XDAY
          PACK      KEY8,XDAY,SLASH,XMON,SLASH,XYEAR
          REP       " 0",KEY8
.
          PACK      DIM12,NZEXRCNO,SP70
          PACK      DIM17,NZEXPREF,SP70
          IF        NZEXRTYP<>5
            MOVE      SP70,DIM12
            MOVE      "00000000000000000",DIM17
          ENDIF
.
          WRITE     EXTFILE1,SEQ;NZEXBTID,NZEXHCOD,KEY1,NZEXDESC:
                                 NZEXCACC,NZEXCAMT,KEY8,NZEXINVN:
                                 DIM12,DIM17:
                                 NZEXPMTH,NZEXMCTY,NZEXCOMS:
                                 NZEXGSTC,NZEXBNAM:
                                 NZEXDEBN,NZEXPNAM,NZEXPTID,NZEXIFLG,NZEXDDAT:
                                 NZEXPRIM,NZEXPCOD,NZEXRREF,NZEXADD1,NZEXADD2:
                                 NZEXADD3,NZEXADD4,NZEXHPHN,NZEXBPHN,NZEXPMOB:
                                 NZEXEMAI
.
          UNPACK    NZEXTDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          COMPARE   "59",CLNO
          CALL      HEAD0000 IF NOT LESS
.
          UNPACK    NZEXBNAM,KEY20
.
          MOVE      SP70,KEY9
          BRANCH    NZEXRTYP,REXT5000,REXT5000,REXT5000,REXT5000,REXT6000:
                             REXT5000
          GOTO      REXT6000
.
REXT5000  UNPACK    NZEXRREF,KEY9             * Procedure code
.
REXT6000  PRINT     *1,"|",NZEXRTYP,*8,"|",KEY9,*18,"|",NZEXDESC:
                    *39,"|",NZEXCACC,*54,"|",NZEXCAMT:
                    *70,"|",CPDATE,*81,"|",NZEXINVN:
                    *92,"|",NZEXGSTC,*99,"|",NZEXPMTH:
                    *102,"|",NZEXCOMS,*110,"|",KEY20,*132,"|"
          ADD       ONE,SEGCNT
          ADD       ONE,CLNO
.
          COMPARE   "59",CLNO
          CALL      HEAD0000 IF NOT LESS
.
.         Debit Account
.
          MOVE      "9",KEY1
          CLEAR     NZEXDESC
          APPEND    "DCL",NZEXDESC
          APPEND    SP70,NZEXDESC
          RESET     NZEXDESC
.
          UNPACK    NZEXTDAT,XCENT,XYEAR,XMON,XDAY
          PACK      KEY8,XDAY,SLASH,XMON,SLASH,XYEAR
          REP       " 0",KEY8
          WRITE     EXTFILE1,SEQ;NZEXBTID,NZEXHCOD,KEY1,NZEXDESC:
                                 NZEXDACC,NZEXDAMT,KEY8,NZEXINVN:
                                 DIM12,DIM17:
                                 NZEXPMTH,NZEXMCTY,NZEXCOMS:
                                 NZEXGSTC,NZEXBNAM:
                                 NZEXDEBN,NZEXPNAM,NZEXPTID,NZEXIFLG,NZEXDDAT:
                                 NZEXPRIM,NZEXPCOD,NZEXRREF,NZEXADD1,NZEXADD2:
                                 NZEXADD3,NZEXADD4,NZEXHPHN,NZEXBPHN,NZEXPMOB:
                                 NZEXEMAI
.
          COMPARE   "59",CLNO
          CALL      HEAD0000 IF NOT LESS
.
          UNPACK    NZEXDESC,KEY10
          PRINT     *1,"| ",KEY1,*8,"|",*18,"|",NZEXDESC:
                    *39,"|",NZEXDACC,*54,"|",NZEXDAMT:
                    *70,"|",*81,"|":
                    *92,"|",*99,"|":
                    *102,"|",*110,"|",*132,"|"
.
          ADD       ONE,SEGCNT
          ADD       ONE,CLNO
          GOTO      REXT0200
.
REXT9000  CALL      TAIL0000
REXT9999  RETURN
+
.******************************************************************************
.         Generate extra fields
.******************************************************************************
GADF0000  MOVE      SP70,NZEXDEBN          * Debtor ID
          MOVE      SP70,NZEXPNAM          * Patient Name
          MOVE      SP70,NZEXPTID          * Unique Patient ID
          MOVE      SP70,NZEXIFLG          * Invoice and Credit Card flags
          MOVE      SP70,NZEXDDAT          * Discharge Date
          MOVE      SP70,NZEXPRIM          * Primary Procedure speciality
          MOVE      SP70,NZEXPCOD          * Primary Procedure code
          MOVE      SP70,NZEXADD1          * Billing address 1
          MOVE      SP70,NZEXADD2          * Billing address 2
          MOVE      SP70,NZEXADD3          * Billing address 3
          MOVE      SP70,NZEXADD4          * Billing address 4
          MOVE      SP70,NZEXHPHN          * Patient Home phone no
          MOVE      SP70,NZEXBPHN          * Patient Business phone no
          MOVE      SP70,NZEXPMOB          * Patient Mobile no
          MOVE      SP70,NZEXEMAI          * Patient email

          MOVE      NZEXURNO,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,GADF9999
          CALL      RDPMPX21
          BRANCH    OVRCD,GADF9999
.
          MOVE      NZEXADMN,KEY8
          CALL      RDMISS1
          BRANCH    OVRCD,GADF9999
.
          MOVE      SP70,DDATE
          IF        ASTAT=3
            CALL      RDDSCH1
            BRANCH    OVRCD,GADF9999       * missing discharge record
          ENDIF
.
          PACK      DIM8,NZEXURNO,SP70
          SQUEEZE   DIM8
          PACK      NZEXDEBN,DIM8,SP70
          PACK      NZEXPTID,DIM8,SP70           * Unique Patient ID
          MATCH     SP70,NZEXINVN
          IF        !@EQUAL
            MOVE      NZEXINVN,KEY8
            CALL      RDINV1
            IF        OVRCD=0
              SQUEEZE   PINVUR
              PACK      NZEXDEBN,PINVUR,SP70         * Debtor ID
              PACK      NZEXPTID,PINVUR,SP70         * Unique Patient ID
              MATCH     SP70,PTINHFND
              IF        !@EQUAL
               PACK      NZEXDEBN,PTINHFND,SP70      * Funder
              ENDIF
            ENDIF
          ENDIF
.
          CLEAR     NZEXPNAM
          SQUEEZE   PSNAME
          APPEND    PSNAME,NZEXPNAM
          APPEND    ",",NZEXPNAM
          APPEND    PGNAME,NZEXPNAM
          APPEND    SP70,NZEXPNAM
          RESET     NZEXPNAM
.
          MOVE      SP70,NZEXIFLG          * default to Invoice flag
          MOVE      ZERO,F1
          MOVE      NZEXRTYP,F1
          BRANCH    F1,GADF1000,GADF1000,GADF1000,GADF1000,GADF3000:
                       GADF3000,GADF3000
.
GADF1000  MOVE      NZEXCRST,NZEXIFLG      * Credit Card flag
.
          MOVE      DDATE,NZEXDDAT         * Discharge Date
          CALL      GPRP0000               * Get primary procedures
.
GADF3000  MOVE      NZEXADMN,KEY8
          CALL      RDRESP1
          BRANCH    OVRCD,GADF6000
.
          PACK      NZEXADD1,PKADD1          * Billing address 1
          PACK      NZEXADD2,PKADD2          * Billing address 2
          PACK      NZEXADD3,PKSUBR,SP70     * Billing address 3
          STRIP     PKADD4
          CLEAR     NZEXADD4
          APPEND    PKADD4,NZEXADD4
          APPEND    SP70,NZEXADD4
          RESET     NZEXADD4                 * Billing address 4
.
GADF6000  MOVE     PTELEP,NZEXHPHN          * Patient Home phone no
          MOVE     PTELEB,NZEXBPHN          * Patient Business phone no
          MOVE     PTMXCELL,NZEXPMOB        * Patient Mobile no
          MOVE     PMPXPEML,NZEXEMAI        * Patient email
.
GADF9999  RETURN
+
.******************************************************************************
.         Get primary procedure
.******************************************************************************
GPRP0000 PACK     KEY11,NZEXADMN,SP70
         CALL     RSNZSPR1
GPRP1000 CALL     RKNZSPR1
         BRANCH   OVRCD,GPRP9999
.
         MATCH    NZEXADMN,NZSPADMN
         GOTO     GPRP9999 IF NOT EQUAL
.
         COMPARE  ONE,NZSPPRIM             * Primary?
         GOTO     GPRP1000 IF NOT EQUAL
.
         MOVE     NZSPPROC,KEY9
         PACK     KEY17,KEY9,ADATE,SP70
         CALL     PATITMRD
         IF       OVRCD=0
           MOVE     IALPHA,NZEXPRIM        * Primary Procedure speciality
           MOVE     NZSPPROC,NZEXPCOD      * Primary Procedure code
         ENDIF
GPRP9999 RETURN
+
.******************************************************************************
.*                              CMAP0000                                      *
.*                       Check if mapping record exits for Credit note        *
.******************************************************************************
CMAP0000  MOVE      SP70,PTFMCOD
          PACK      PMFCSYST,SP1,NZEXSYST,SP70
          MOVE      NZEXADMN,KEY8
          CALL      RDVISA1
          BRANCH    OVRCD,CMAP9200
.
          MOVE      NZEXINVN,KEY8
          CALL      RDINV1
          BRANCH    OVRCD,CMAP9200
.
          COMPARE   EIGHT,NZEXRTYP          * GST - just use default Accom.
          GOTO      CMAP8800 IF EQUAL
.
          MATCH     "99999              ",NZEXBTID  * no mapping?
          GOTO      CMAP0800 IF NOT EQUAL
.
          MOVE      ZERO,FORM1
          LOAD      FORM1,NZEXRTYP,ONE,TWO,THREE,ZERO,ZERO,FIVE,THREE,THREE
          MOVE      FORM1,SAVFMSUB
          MOVE      SP70,SAVFMCOD
          GOTO      CMAP9200
.
CMAP0800  UNPACK    NZEXRCNO,KEY8                  * Credit note number
          PACK      KEY30,NZEXADMN,NZEXINVN,NZEXTRNO,KEY8,SP70
          CALL      RDPMFCI1
          IF        OVRCD=1
            PACK      KEY22,NZEXADMN,NZEXINVN,NZEXTRNO,SP70
            CALL      RDDTR000
            IF        OVRCD=1
              CALL      RDNZRDT1
              BRANCH    OVRCD,CMAP9200
            ENDIF
            IF        NZEXRTYP=3 | PTDTEPSD=1
              UNPACK    NZEXDESC,KEY3,TMISGRP     * Pack item
            ENDIF
            MOVE      TRECTYPE,PMFCRTYP
            MOVE      TADMTYP,PMFCATYP
            MOVE      TDWARD,PMFCWARD
            MOVE      TMISGRP,PMFCMGRP
            MOVE      TITEMNO,PMFCITEM
          ELSE
            IF        NZEXRTYP=3
              UNPACK    NZEXDESC,KEY3,PMFCMGRP    * Pack item
            ENDIF
          ENDIF
.
          MOVE      ZERO,FORM1
          MOVE      PMFCRTYP,FORM1
          BRANCH    FORM1,CMAP1000,CMAP2000,CMAP3000,CMAP9800:
                          CMAP9600,CMAP6000,CMAP7000,CMAP8000
          GOTO      CMAP9800
.
CMAP1000  MOVE      "1",PTFMSUB
          BRANCH    CACCFEE,CMAP1200,CMAP1400,CMAP1600,CMAP1800,CMAP1900
          PACK      PTFMCOD,ANSA,PMFCATYP,SP70
          GOTO      CMAP9000
.
CMAP1200  PACK      PTFMCOD,ANSA,PMFCWARD,PINVCLM,SP70
          GOTO      CMAP9000
.
CMAP1400  PACK      PTFMCOD,ANSA,PMFCWARD,PMFCATYP,SP70
          GOTO      CMAP9000
.
CMAP1600  PACK      PTFMCOD,ANSA,PMFCWARD,PINVCLM,PMFCATYP,SP70
          GOTO      CMAP9000
.
CMAP1800  PACK      PTFMCOD,ANSA,PMFCWARD,PMFCATYP,PINVCLM,SP70
          GOTO      CMAP9000
.
CMAP1900  PACK      PTFMCOD,ANSA,PINVCLM,SP70
          GOTO      CMAP9000
.
CMAP2000  MOVE      "2",PTFMSUB
          CALL      SEST0000                   * Get session type
          PACK      PTFMCOD,ANSF,OPSESTYP,SP70
          GOTO      CMAP9000
.
CMAP3000  MOVE      "3",PTFMSUB
          IF        PTCNMFEE=1
            PACK      PTFMCOD,ANSM,PINVCLM,PMFCMGRP,SP70
          ELSE
            PACK      PTFMCOD,ANSM,PMFCMGRP,PMFCITEM,SP70
          ENDIF
          GOTO      CMAP9000
.
CMAP6000  MOVE      "5",PTFMSUB
          IF        PTCNJFEE=1
            PACK      PTFMCOD,PINVCLM,TTYPE,SP70
          ELSE
            PACK      PTFMCOD,TTYPE,SP70
          ENDIF
          GOTO      CMAP9000
.
CMAP7000  MOVE      "3",PTFMSUB
          IF        PTCNMFEE=1
            PACK      PTFMCOD,ANSM,PINVCLM,PTCNROUN,SP70
          ELSE
            PACK      PTFMCOD,ANSM,PTCNROUN,SP70
          ENDIF
          GOTO      CMAP9000
.
.         Procedure
.
CMAP8000  MOVE      "3",PTFMSUB
          UNPACK    NZEXPREF,KEY3       * Revenue breakdown code
          IF        PTCNMFEE=1
            PACK      PTFMCOD,ANSM,PINVCLM,KEY3,SP70
          ELSE
            PACK      PTFMCOD,ANSM,KEY3,PMFCITEM,SP70
          ENDIF
          GOTO      CMAP9000
.
CMAP8800  MOVE      "1",PTFMSUB
          PACK      PTFMCOD,SP70
.
CMAP9000  CALL      MFMS0000                   * Read mapping file
          BRANCH    EXIT,CMAP9200
          GOTO      CMAP9999
.
CMAP9200  CALL      NMAP0000                  * Print no mapping record
          GOTO      CMAP9800
.
CMAP9600  MOVE      ZERO,EXIT
          GOTO      CMAP9999
.
CMAP9800  MOVE      ONE,EXIT
CMAP9999  RETURN
+
.******************************************************************************
.         Print No mapping record
.******************************************************************************
NMAP0000  COMPARE   "59",CLNO
          CALL      HEAD0000 IF NOT LESS
.
          MOVE      SP70,KEY8
          MATCH     "1",SAVFMSUB
          IF        @EQUAL
            MOVE      "Accomm. ",KEY8
          ENDIF
          MATCH     "2",SAVFMSUB
          IF        @EQUAL
            MOVE      "Theatre ",KEY8
          ENDIF
          MATCH     "3",SAVFMSUB
          IF        @EQUAL
            MOVE      "Misc.Itm",KEY8
          ENDIF
          MATCH     "5",SAVFMSUB
          IF        @EQUAL
            MOVE      "Journals",KEY8
          ENDIF
.
          MOVE      SP70,KEY6
          MATCH     "000000",NZEXTRNO
          IF        @EQUAL
            MOVE      "  GST",KEY6
          ENDIF
.
          UNPACK    NZEXTDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          PRINT     *1,"| ",*8,"|",*18,"|** No Mapping **":
                    *49,"|************",*54,"|",NZEXCAMT:
                    *70,"|",CPDATE,*81,"|",NZEXINVN:
                    *92,"|",KEY6,*99,"|",*102,"|":
                    SAVFMSUB,"-",SAVFMCOD," Adm.No:",NZEXADMN,*132,"|"
          ADD       ONE,CLNO
NMAP9999  RETURN
+
.******************************************************************************
.*                                  HEAD0000              Called by: ML0000   *
.*                             Print Report Header                            *
.******************************************************************************
HEAD0000  CALL      HEAD132                 * Print 132 column header
          PRINT     *20,"Hospital : ",*31,HOSPNAME:
                    *N,*20,"Batch Id.: ",*31,BATCHID
          CALL      UND132
          PRINT     *1,"|Rec.",*8,"|Proc.",*18,"|Description":
                    *39,"|Credit Acc.",*54,"|    Amount":
                    *70,"|  Date",*81,"|  Inv.No.":
                    *92,"|GST",*99,"|",*102,"|Comm.%":
                    *110,"|Person Resp.For Acc.",*132,"|":
                    *N,*1,"|Type",*8,"|",*18,"|":
                    *39,"|Debit Acc.",*54,"|":
                    *70,"|",*81,"|":
                    *92,"|",*99,"|",*102,"|":
                    *110,"|Payee/Drawer",*132,"|"
.
          CALL      UND132
          ADD       "7",CLNO
.
HEAD9000  MOVE      ZERO,EXIT
HEAD9999  RETURN
+
.******************************************************************************
.*                                  PREP0000                                  *
.*    Processing DTR Files                                                    *
.******************************************************************************
PREP0000  PACK      EXTFNAME,BATCHID,TXT
          STRIP     PTCNGLEX
          CLEAR     PATHNAME
          PACK      PATHNAME,PTCNGLEX,EXTFNAME,SP70
          PREP      EXTFILE1,PATHNAME
PREP9999  RETURN
+
.******************************************************************************
.*                                  TAIL0000              Called by: ML0000   *
.*                              Print Report Tail                             *
.******************************************************************************
TAIL0000  CALL      UND132
.
          IF        SEGCNT =0
            PRINT     *N,*1,"No Extract file created"
          ELSE
            PRINT     *N,*1,"Total Records Extracted : ",SEGCNT
          ENDIF
.
TAIL2000  PRINT     *N,"*** End of Report ***"
.
TAIL9000  MOVE      ZERO,EXIT
TAIL9999  RETURN
+
.******************************************************************************
.*                                  KHOS0000              Called by: ML0000   *
.*                        Enter selected Hospital code                        *
.******************************************************************************
KHOS0000  COMPARE   ONE,IBCNMHOS
          GOTO      KHOS9999 IF NOT EQUAL
.
          MOVE      "10",EVERT
          DISPLAY   *P1:EVERT,*EL,"Hospital Id   : ";
          MOVE      TEN7,ECOL
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND           * Not Mandatory
          CALL      PATHSPKY
          BRANCH    EXIT,KHOS3000,KHOS9500
          MOVE      PTHSHOSP,HOSPCODE
          MOVE      PTHSNAME,HOSPNAME
.
          DISPLAY   *P25:EVERT,*V2LON,HOSPNAME;
          GOTO      KHOS9999
.
KHOS3000  MOVE      SP70,HOSPNAME
          MOVE      SP10,HOSPCODE
.
KHOS9500  MOVE      ONE,EXIT
KHOS9999  RETURN
+
.******************************************************************************
.
RDDTR000  MOVE      ZERO,FORM1
          MOVE      NZEXSYST,FORM1
          BRANCH    FORM1,RDDTR100,RDDTR200,RDDTR300
          MOVE      ONE,OVRCD
          GOTO      RDDTR999
.
RDDTR100  CALL      RDDTRE1
          BRANCH    OVRCD,RDDTR999
          LOAD      TRECTYPE USING ATRECTYP OF THREE,FIVE,SIX,FOUR,SEVEN,NINE
          UNPACK    SP70,TADMTYP,TDWARD
          MOVE      ATITEMNO,TITEMNO
          MOVE      ATMISGRP,TMISGRP
          MOVE      ATTYPE,TTYPE
          GOTO      RDDTR999
.
RDDTR200  CALL      RDDTRO1
          BRANCH    OVRCD,RDDTR999
          LOAD      TRECTYPE USING OTRECTYP OF THREE,FIVE,SIX,FOUR,SEVEN,TWO
          UNPACK    SP70,TADMTYP,TDWARD
          MOVE      OTITEMNO,TITEMNO
          MOVE      OTMISGRP,TMISGRP
          MOVE      OTTYPE,TTYPE
          GOTO      RDDTR999
.
RDDTR300  CALL      RDDTRN1
          BRANCH    OVRCD,RDDTR999
RDDTR999  RETURN
.
.******************************************************************************
WRITETRN
GETTHR
PATCALF
TAIL
INITIVAR
CKTL0000
PRLN0000
PEOL0000
PROCMISC
PRTCLMS
NXTTRAN1
WEBERR00
PRTINVTL
SINVT000
PATIVMES
ISUG0000
ENDPRT00
PROACC00
PRTIPROV
GCDE0000
ENDPRT    RETURN
.
          INC       STD001IO
          INC       PATHSPKY
          INC       CLNZPEXT
          INC       CLPATDTR
          INC       PATCATBI
          INC       PATCMSTP
          INC       STEPDOWN
          INC       NHOSPDAY
          INC       CMXMATRX
          INC       CHKCMXPT
          INC       CALCDAYS
          INC       PATCOMN3
          INC       PABXBILL
          INC       CLNZPPIC
          INC       CMGETTHR
          INC       PATGNCMX
          INC       PATITMRD
          INC       PATMCHRD                * Miscellaneous Charges read routine
          INC       GETBFEES
          INC       GETTFEES
          INC       GETCNEFF
          INC       CLPMSIDE
          INC       TFILENAM                * Generate Temp File Name
.
          INC       IBASEQIO/INC            * Sequential Numbers File
          INC       WEBERRIO/INC            * Web Server Error Logging
.
.
          INC       VISPAYIO/INC
          INC       IBAGEDIO/INC
          INC       IBAGSTIO/INC
          INC       PATCODIO/INC
          INC       PATCFAIO/INC
          INC       PATCMTIO/INC
          INC       PATDSCIO/INC
          INC       PATHLFIO/INC
          INC       PATHTRIO/INC
          INC       PATOVBIO/INC
          INC       PATSRBIO/INC
          INC       IBAPASIO/INC
          INC       PATAFEIO/INC
          INC       PATASDIO/INC
          INC       PATBFEIO/INC
          INC       PATELGIO/INC
          INC       PATFEEIO/INC
          INC       PATMCHIO/INC
          INC       PMSCMTIO/INC
          INC       PMSMTIIO/INC
          INC       PMSSINIO/INC
          INC       PMSSGAIO/INC
          INC       PATTFEIO/INC
          INC       PATCMXIO/INC
          INC       PATHSPIO/INC
          INC       PATLSDIO/INC
          INC       PATMI1IO/INC
          INC       PATMA1IO/INC
          INC       PMSPX2IO/INC
          INC       PATINVIO/INC
          INC       PATITMIO/INC
          INC       PATCTFIO/INC
          INC       PMSCIDIO/INC
          INC       PMSCCDIO/INC
          INC       PATDTRIO/INC            * DTR file
          INC       PATDO1IO/INC
          INC       PATDGWIO/INC
          INC       PATDRGIO/INC
          INC       PATFINIO/INC
          INC       PATFN1IO/INC
          INC       PATFX1IO/INC
          INC       PATFN2IO/INC
          INC       PATIOVIO/INC
          INC       PATRBLIO/INC
          INC       PATRFNIO/INC
          INC       PATECDIO/INC
          INC       PATECOIO/INC
          INC       PATFMOIO/INC
          INC       PATHDFIO/INC
          INC       PATIBLIO/INC
          INC       PATICUIO/INC
          INC       PATLDFIO/INC
          INC       PATPGRIO/INC
          INC       PATRATIO/INC
          INC       PATRCAIO/INC
          INC       PMSMPRIO/INC
          INC       PATWR1IO/INC
          INC       OPRARDIO/INC
.
          INC       COMDEPIO/INC
          INC       RCPBNKIO/INC
          INC       RCPDTEIO/INC
          INC       RCPBDTIO/INC
.
          INC       NZPEXTIO/INC            * Extract file
          INC       RCPREGIO/INC
          INC       PMSFCIIO/INC
          INC       PATFMSIO/INC
          INC       PATTRNIO/INC
          INC       PATRE1IO/INC
          INC       NZPRVBIO/INC
          INC       PATVENIO/INC
          INC       PATVISIO/INC
          INC       PMSHATIO/INC
          INC       PMSIDEIO/INC
          INC       PMSPBRIO/INC
          INC       PMSVX1IO/INC
          INC       NZPRDTIO/INC
          INC       NZPSPRIO/INC
          INC       NZPIBRIO/INC
          INC       NZPIVBIO/INC
          INC       NZPRBRIO/INC
          INC       NZPPFEIO/INC
          INC       NZPCFNIO/INC
          INC       MLTCFNIO/INC
          INC       NZPBFEIO/INC
          INC       NZPTFEIO/INC
          INC       NZPPICIO/INC
          INC       NZPFINIO/INC
          INC       NZPRFNIO/INC
          INC       NZPMCHIO/INC
          INC       NZPMXCIO/INC
          INC       NZPCMTIO/INC
          INC       WEBSECIO/INC
          INC       PMSCNOIO/INC
.
          INC       AAEDE1IO/INC
          INC       AAEDTRIO/INC            * DTR file
.
          INC       OUTBB1IO/INC
          INC       OUTDTRIO/INC            * DTR file
          INC       OUTSITIO/INC
.
          INC       OPRDEAIO/INC
          INC       OPRSESIO/INC
          INC       PMSEDGIO/INC       * Effective DRG Dates
          INC       PATDDHIO/INC
          INC       VALCMXFN
          INC       GETEFDRG
+
