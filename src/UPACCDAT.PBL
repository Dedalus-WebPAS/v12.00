.*****************************************************************************
.*                           UPACCDAT                                        *
.*          Common Data Migration routines for uploading NZ ACC Data         *
.*          Used by:                                                         *
.* CONVWAIT - W/L Upload program                                             *
.* CONVREFL - Active O/P Referral Upload program                             *
.* CONVBOOK - Future O/P Bookings Upload program                             *
.* CONVPADM - Pre-admissions Upload program                                  *
.*                                                                           *
.*          Routines include:                                                *
.* OPNACC00 - Routine to open all ACC related files                          *
.* PADACC00 - Routine to pad out loaded ACC data variables with spaces       *
.* SETACC00 - Routine to load ACC webPAS file variables                      *
.* CODACC00 - Routine to validate ACC coded fields                           *
.* NUMACC00 - Routine to validate ACC numeric fields                         *
.* DTEACC00 - Routine to validate ACC date fields                            *
.* TIMACC00 - Routine to validate ACC time fields                            *
.* WRTACC00 - Write ACC detail records                                       *
.*                                                                           *
.* Mods:                                                                     *
.* V10.08.02 21/10/2016  Steve Armstrong  TSK 0819758                        *
.*           Mods to cater for ACC Claim Comment data fields                 *
.* V10.08.01 06/09/2016  Steve Armstrong  CAR 0825609                        *
.*           Mods to allow a date in the future for ACCDRNWD (Return to      *
.*           work date).                                                     *
.*****************************************************************************
.* V10.06.01 22/07/2015  Steve Armstrong  CAR 318590                         *
.*           Mods to allow a blank field for ACCDHPDA and to allow any value *
.*           in ACCDUNFD (not just numeric)                                  *
.* V10.06.00 18/06/2015  Steve Armstrong  CAR 313849/313856/313857/313858    *
.*           Created include                                                 *
.*****************************************************************************
.
.           Open ACC related files
.
OPNACC00    DISPLAY   *P64:24,"pateoraf";
            OPEN      PATEORA1,"pateoraf"
.
            DISPLAY   *P64:24,"patin1af";
            OPEN      PATIN1A1,"patin1af"
.
            DISPLAY   *P64:24,"pmsrelaf";
            OPEN      PMSRELA1,"pmsrelaf"
.
            DISPLAY   *P64:24,"pmstleaf";
            OPEN      PMSTLEA1,"pmstleaf"
.
            DISPLAY   *P64:24,"patwc1af";
            OPEN      PATWC1A1,"patwc1af"
.
            DISPLAY   *P64:24,"pmswx1af";
            OPEN      PMSWX1A1,"pmswx1af"
.
            DISPLAY   *P64:24,"acccmtaf";
            OPEN      ACCCMTA1,"acccmtaf"
.
OPNACC99  RETURN
+
.*****************************************************************************
.*        Pad out all ACC type record fields                                 *
.*****************************************************************************
.
PADACC00  PACK      ACCDNAME,ACCDNAME,SP70
          PACK      ACCDADD1,ACCDADD1,SP70
          PACK      ACCDADD2,ACCDADD2,SP70
          PACK      ACCDADD3,ACCDADD3,SP70
          PACK      ACCDADD4,ACCDADD4,SP70
          PACK      ACCDTELP,ACCDTELP,SP70
          PACK      ACCDACDT,ACCDACDT,SP70
          PACK      ACCDACPT,ACCDACPT,SP70
          PACK      ACCDINSR,ACCDINSR,SP70
          PACK      ACCDCLNO,ACCDCLNO,SP70
          PACK      ACCDCOM1,ACCDCOM1,SP70
          PACK      ACCDCOM2,ACCDCOM2,SP70
          PACK      ACCDALOC,ACCDALOC,SP70
          PACK      ACCDCINJ,ACCDCINJ,SP70
          PACK      ACCDICOD,ACCDICOD,SP70
          PACK      ACCDCNAM,ACCDCNAM,SP70
          PACK      ACCDCDTE,ACCDCDTE,SP70
          PACK      ACCDCTIM,ACCDCTIM,SP70
          PACK      ACCDWEBC,ACCDWEBC,SP70
          PACK      ACCDLUPD,ACCDLUPD,SP70
          PACK      ACCDLUPT,ACCDLUPT,SP70
          PACK      ACCDWEBU,ACCDWEBU,SP70
          PACK      ACCDACCF,ACCDACCF,SP70
          PACK      ACCDPLIN,ACCDPLIN,SP70
          PACK      ACCDACTI,ACCDACTI,SP70
          PACK      ACCDADTE,ACCDADTE,SP70
          PACK      ACCDATME,ACCDATME,SP70
          PACK      ACCDACLC,ACCDACLC,SP70
          PACK      ACCDAINZ,ACCDAINZ,SP70
          PACK      ACCDMOVV,ACCDMOVV,SP70
          PACK      ACCDSPTI,ACCDSPTI,SP70
          PACK      ACCDSPRT,ACCDSPRT,SP70
          PACK      ACCDRECI,ACCDRECI,SP70
          PACK      ACCDTRIC,ACCDTRIC,SP70
          PACK      ACCDESTA,ACCDESTA,SP70
          PACK      ACCDPDDT,ACCDPDDT,SP70
          PACK      ACCDARG1,ACCDARG1,SP70
          PACK      ACCDARG2,ACCDARG2,SP70
          PACK      ACCDARSN,ACCDARSN,SP70
          PACK      ACCDARTL,ACCDARTL,SP70
          PACK      ACCDARRP,ACCDARRP,SP70
          PACK      ACCDASST,ACCDASST,SP70
          PACK      ACCDNEED,ACCDNEED,SP70
          PACK      ACCDCONT,ACCDCONT,SP70
          PACK      ACCDALTW,ACCDALTW,SP70
          PACK      ACCDTYPA,ACCDTYPA,SP70
          PACK      ACCDSALT,ACCDSALT,SP70
          SQUEEZE   ACCDHPDA
          PACK      ACCDHPDA,ACCDHPDA,SP70
          PACK      ACCDUNFD,ACCDUNFD,SP70
          PACK      ACCDUNFT,ACCDUNFT,SP70
          PACK      ACCDFISD,ACCDFISD,SP70
          PACK      ACCDRNWD,ACCDRNWD,SP70
          PACK      ACCDCSTA,ACCDCSTA,SP70
          REP       " 0",ACCDCSTA
          PACK      ACCDTWRK,ACCDTWRK,SP70
          PACK      ACCDOEST,ACCDOEST,SP70
          PACK      ACCDTPRO,ACCDTPRO,SP70
          PACK      ACCDECOD,ACCDECOD,SP70
          PACK      ACCDTYP1,ACCDTYP1,SP70
          STRIP     ACCDDAT1
          PACK      ACCDTYP2,ACCDTYP2,SP70
          STRIP     ACCDDAT2
          PACK      ACCDTYP3,ACCDTYP3,SP70
          STRIP     ACCDDAT3
.
PADACC99  RETURN
+
.*****************************************************************************
.*        Set all ACC type record fields.                                    *
.*        Load patwc1af variables first.                                     *
.*        (Requires PTWCVDAT and PTWCURNO to be set before call)             *
.*****************************************************************************
.
SETACC00  MOVE      ACCDNAME,WCENAME
          MOVE      ACCDADD1,WCEADD1
          MOVE      ACCDADD2,WCEADD2
          MOVE      ACCDADD3,WCEADD3
          MOVE      ACCDADD4,WCEADD4
          MOVE      ACCDPOST,WCEPOST
          MOVE      ACCDTELP,WCETELE
          MOVE      ACCDACDT,WCACDAT
          MOVE      ACCDACPT,WCACCPT
.
          MOVE      ACCDINSR,WCICODE
          IF        INSRFLAG = 1
            MOVE      ACCDINSR,KEY6
            CALL      RDTEMP2                    * insurer code on map file ?
            IF        OVRCD = 0
              MOVE      NEWINSUR,WCICODE         * yes - load mapped file
            ENDIF
          ENDIF
.
          MOVE      ACCDCLNO,WCCLMNO
          MOVE      ACCDCOM1,WCCOMN1
          MOVE      ACCDCOM2,WCCOMN2
.
.         Load patwx1af variables
.
          MOVE      ACCDALOC,PMWXALOC
.
          MOVE      ACCDCINJ,PMWXCINJ
          IF        CATCDFLG = 1
            PACK      KEY5,ANSI,ANSK,ACCDCINJ
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMWXCINJ        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      ACCDICOD,PMWXICOD
          IF        CATCDFLG = 1
            PACK      KEY5,ANSI,ANSJ,ACCDICOD
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMWXICOD        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      ACCDCNAM,PMWXCNAM
          MOVE      ACCDCDTE,PMWXCDTE
          MOVE      ACCDCTIM,PMWXCTIM
          MOVE      ACCDWEBC,PMWXWEBC
          MOVE      ACCDLUPD,PMWXLUPD
          MOVE      ACCDLUPT,PMWXLUPT
          MOVE      ACCDWEBU,PMWXWEBU
.
          MOVE      ACCDACCF,PMWXACCF
          IF        CATCDFLG = 1
            PACK      KEY5,ANSI,ANSQ,ACCDACCF
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMWXACCF        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      ACCDPLIN,PMWXPLIN
          IF        CATCDFLG = 1
            PACK      KEY5,ANSI,ANSP,ACCDPLIN
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMWXPLIN        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      ACCDACTI,PMWXACTI
          IF        CATCDFLG = 1
            PACK      KEY5,ANSI,ANSO,ACCDACTI
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMWXACTI        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      ACCDADTE,PMWXADTE
          MOVE      ACCDATME,PMWXATME
.
          MOVE      ACCDACLC,PMWXACLC
          IF        CATCDFLG = 1
            PACK      KEY5,ANSI,ANSM,ACCDACLC
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMWXACLC        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      ACCDAINZ,PMWXAINZ
          MOVE      ACCDMOVV,PMWXMOVV
          MOVE      ACCDSPTI,PMWXSPTI
.
          MOVE      ACCDSPRT,PMWXSPRT
          IF        CATCDFLG = 1
            PACK      KEY5,ANSI,ANSB,ACCDSPRT
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMWXSPRT        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      ACCDRECI,PMWXRECI
          MOVE      ACCDTRIC,PMWXTRIC
.
          MOVE      ACCDESTA,PMWXESTA
          IF        CATCDFLG = 1
            PACK      KEY5,ANSI,ANSF,ACCDESTA
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMWXESTA        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      ACCDPDDT,PMWXPDDT
          MOVE      ACCDARG1,PMWXARG1
          MOVE      ACCDARG2,PMWXARG2
          MOVE      ACCDARSN,PMWXARSN
          MOVE      ACCDARTL,PMWXARTL
          MOVE      ACCDARRP,PMWXARRP
          MOVE      ACCDASST,PMWXASST
          MOVE      ACCDNEED,PMWXNEED
          MOVE      ACCDCONT,PMWXCONT
          MOVE      ACCDALTW,PMWXALTW
.
          MOVE      ACCDTYPA,PMWXTYPA
          IF        CATCDFLG = 1
            PACK      KEY5,ANSI,ANSH,ACCDTYPA
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMWXTYPA        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      ACCDSALT,PMWXSALT
          MOVE      ACCDHPDA,PMWXHPDA
          MOVE      ACCDUNFD,PMWXUNFD
.
          MOVE      ACCDUNFT,PMWXUNFT
          IF        CATCDFLG = 1
            PACK      KEY5,ANSU,ANSI,ACCDUNFT
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMWXUNFT        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      ACCDFISD,PMWXFISD
          MOVE      ACCDRNWD,PMWXRNWD
          MOVE      ACCDCSTA,PMWXCSTA
.
          MOVE      ACCDTWRK,PMWXTWRK
          IF        CATCDFLG = 1
            PACK      KEY5,ANSI,ANSX,ACCDTWRK
            CALL      RDTEMP1                    * cat-code on map file ?
            IF        OVRCD = 0
              MOVE      NEWCTCOD,PMWXTWRK        * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      ACCDOEST,PMWXOEST
.
          MOVE      ACCDTPRO,PMWXTPRO
          IF        HCPCDFLG = 1
            MOVE      ACCDTPRO,KEY10
            CALL      RDTEMP4                    * hcp code on map file ?
            IF        OVRCD = 0
              MOVE      NEWHCPCD,PMWXTPRO        * yes - load mapped file
            ENDIF
          ENDIF
.
          MOVE      ACCDECOD,PMWXECOD
          IF        EMPLFLAG = 1
            MOVE      ACCDECOD,KEY6
            CALL      RDTEMP3                    * employer code on map file ?
            IF        OVRCD = 0
              MOVE      NEWEMPLY,PMWXECOD        * yes - load mapped file
            ENDIF
          ENDIF
.
SETACC99  RETURN
+
.*****************************************************************************
.*        Validate all ACC mandatory fields.                                 *
.*****************************************************************************
.
MANACC00  MOVE      ACCDCLNO,TMPSTRNG
          MOVE      "ACCDCLNO",TMPFIELD          * claim (ACC) number
          CALL      CHKM0000
.
.         If there is a comment in ACCDDAT1, then ACCDTYP1 must be populated
.
          MOVELPTR  ACCDDAT1,FORM3
          COMPARE   ZERO,FORM3
          IF        !@EQUAL
            MOVE      ACCDTYP1,TMPSTRNG
            MOVE      "ACCDTYP1",TMPFIELD        * comment type
            CALL      CHKM0000
          ENDIF
.
.         If there is a comment in ACCDDAT2, then ACCDTYP2 must be populated
.
          MOVELPTR  ACCDDAT2,FORM3
          COMPARE   ZERO,FORM3
          IF        !@EQUAL
            MOVE      ACCDTYP2,TMPSTRNG
            MOVE      "ACCDTYP2",TMPFIELD        * comment type
            CALL      CHKM0000
          ENDIF
.
.         If there is a comment in ACCDDAT3, then ACCDTYP3 must be populated
.
          MOVELPTR  ACCDDAT3,FORM3
          COMPARE   ZERO,FORM3
          IF        !@EQUAL
            MOVE      ACCDTYP3,TMPSTRNG
            MOVE      "ACCDTYP3",TMPFIELD        * comment type
            CALL      CHKM0000
          ENDIF
.
MANACC99  RETURN
+
.*****************************************************************************
.*        Validate all ACC coded fields.                                     *
.*****************************************************************************
.
CODACC00  MATCH     SP6,WCICODE                  * blank insurer code ?
          GOTO      CODACC01 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,WCICODE,SP10
          MOVE      "ACCDINSR",TMPFIELD
          MOVE      TWO,TEMPTYPE                 * patin1af (insurer)
          CALL      VCOD0000
.
CODACC01  MATCH     SP3,PMWXCINJ                 * blank cause of injury ?
          GOTO      CODACC02 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSI,ANSK
          PACK      TEMPCODE,PMWXCINJ,SP10
          MOVE      "ACCDCINJ",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (cause of injury)
          CALL      VCOD0000
.
CODACC02  MATCH     SP3,PMWXICOD                 * blank injury code ?
          GOTO      CODACC03 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSI,ANSJ
          PACK      TEMPCODE,PMWXICOD,SP10
          MOVE      "ACCDICOD",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (injury code)
          CALL      VCOD0000
.
CODACC03  MATCH     SP3,PMWXACCF                 * blank work related ?
          GOTO      CODACC04 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSI,ANSQ
          PACK      TEMPCODE,PMWXACCF,SP10
          MOVE      "ACCDACCF",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (work related)
          CALL      VCOD0000
.
CODACC04  MATCH     SP3,PMWXPLIN                 * blank place injury occurred ?
          GOTO      CODACC05 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSI,ANSP
          PACK      TEMPCODE,PMWXPLIN,SP10
          MOVE      "ACCDPLIN",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (place injury occ'd)
          CALL      VCOD0000
.
CODACC05  MATCH     SP3,PMWXACTI                 * blank activity when inj'd ?
          GOTO      CODACC06 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSI,ANSO
          PACK      TEMPCODE,PMWXACTI,SP10
          MOVE      "ACCDACTI",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (activity)
          CALL      VCOD0000
.
CODACC06  MATCH     SP3,PMWXACLC                 * blank accident location ?
          GOTO      CODACC07 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSI,ANSM
          PACK      TEMPCODE,PMWXACLC,SP10
          MOVE      "ACCDACLC",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (accident location)
          CALL      VCOD0000
.
CODACC07  MATCH     SP3,PMWXSPRT                 * blank sport code ?
          GOTO      CODACC08 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSI,ANSB
          PACK      TEMPCODE,PMWXSPRT,SP10
          MOVE      "ACCDSPRT",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (sport code)
          CALL      VCOD0000
.
CODACC08  MATCH     SP3,PMWXESTA                 * blank employment status ?
          GOTO      CODACC09 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSI,ANSF
          PACK      TEMPCODE,PMWXESTA,SP10
          MOVE      "ACCDESTA",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (employment status)
          CALL      VCOD0000
.
CODACC09  MATCH     SP4,PMWXARTL                 * blank title ?
          GOTO      CODACC10 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PMWXARTL,SP10
          MOVE      "ACCDARTL",TMPFIELD
          MOVE      FIVE,TEMPTYPE                * pmstleaf (title)
          CALL      VCOD0000
.
CODACC10  MATCH     SP10,PMWXARRP                * blank relation ?
          GOTO      CODACC11 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PMWXARRP,SP10
          MOVE      "ACCDARRP",TMPFIELD
          MOVE      SIX,TEMPTYPE                 * pmsrelaf (relation)
          CALL      VCOD0000
.
CODACC11  MATCH     SP3,PMWXTYPA                 * blank type of alt. work ?
          GOTO      CODACC12 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSI,ANSH
          PACK      TEMPCODE,PMWXTYPA,SP10
          MOVE      "ACCDTYPA",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (type of alt. work)
          CALL      VCOD0000
.
CODACC12  MATCH     SP3,PMWXUNFT                 * blank unit for work ?
          GOTO      CODACC13 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSU,ANSI
          PACK      TEMPCODE,PMWXUNFT,SP10
          MOVE      "ACCDUNFT",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (unit for work)
          CALL      VCOD0000
.
CODACC13  MATCH     SP3,PMWXTWRK                 * blank type of work ?
          GOTO      CODACC14 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSI,ANSX
          PACK      TEMPCODE,PMWXTWRK,SP10
          MOVE      "ACCDTWRK",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (type of work)
          CALL      VCOD0000
.
CODACC14  MATCH     SP10,PMWXTPRO                * blank hcp code ?
          GOTO      CODACC15 IF EQUAL            * yes - no validation req'd
.
          MOVE      SP10,TEMPCATG
          PACK      TEMPCODE,PMWXTPRO,SP10
          MOVE      "ACCDTPRO",TMPFIELD
          MOVE      FOUR,TEMPTYPE                * pmshcpaf (hcp)
          CALL      VCOD0000
.
CODACC15  MATCH     SP6,PMWXECOD                 * blank employer code ?
          GOTO      CODACC99 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PMWXECOD,SP10
          MOVE      "ACCDECOD",TMPFIELD
          MOVE      THREE,TEMPTYPE               * pateoraf (employer)
          CALL      VCOD0000
.
CODACC99  RETURN
+
.*****************************************************************************
.*        Validate ACC numeric fields.                                       *
.*****************************************************************************
.
.         Accepted by Insurance Company (valid values 0 and 1)
.
NUMACC00  REP       " 0n0N0y1Y1",ACCDACPT
.
          TYPE      ACCDACPT                     * acc. by ins. co. numeric ?
          GOTO      NUMACC01 IF NOT EQUAL        * no - error
.
          MOVE      ACCDACPT,FORM1
          IF        FORM1 <> 0 & FORM1 <> 1
            GOTO      NUMACC01                   * invalid value - error
          ENDIF
          GOTO      NUMACC02                     * valid value
.
NUMACC01  MOVE      "ACCDACPT",TMPFIELD
          CALL      NERR0000
.
.         Accident in NZ (valid values 0 and 1)
.
NUMACC02  REP       " 0n0N0y1Y1",ACCDAINZ
.
          TYPE      ACCDAINZ                     * accident in nz numeric ?
          GOTO      NUMACC03 IF NOT EQUAL        * no - error
.
          MOVE      ACCDAINZ,FORM1
          IF        FORM1 <> 0 & FORM1 <> 1
            GOTO      NUMACC03                   * invalid value - error
          ENDIF
          GOTO      NUMACC04                     * valid value
.
NUMACC03  MOVE      "ACCDAINZ",TMPFIELD
          CALL      NERR0000
.
.         Involves Moving Vehicle on a Public Road (valid values 0 and 1)
.
NUMACC04  REP       " 0n0N0y1Y1",ACCDMOVV
.
          TYPE      ACCDMOVV                     * moving vehicle numeric ?
          GOTO      NUMACC05 IF NOT EQUAL        * no - error
.
          MOVE      ACCDMOVV,FORM1
          IF        FORM1 <> 0 & FORM1 <> 1
            GOTO      NUMACC05                   * invalid value - error
          ENDIF
          GOTO      NUMACC06                     * valid value
.
NUMACC05  MOVE      "ACCDMOVV",TMPFIELD
          CALL      NERR0000
.
.         Sporting  Injury (valid values 0 and 1)
.
NUMACC06  REP       " 0n0N0y1Y1",ACCDSPTI
.
          TYPE      ACCDSPTI                     * sporting injury numeric ?
          GOTO      NUMACC07 IF NOT EQUAL        * no - error
.
          MOVE      ACCDSPTI,FORM1
          IF        FORM1 <> 0 & FORM1 <> 1
            GOTO      NUMACC07                   * invalid value - error
          ENDIF
          GOTO      NUMACC08                     * valid value
.
NUMACC07  MOVE      "ACCDSPTI",TMPFIELD
          CALL      NERR0000
.
.         Recurring Injury Indicator (valid values 0 and 1)
.
NUMACC08  REP       " 0n0N0y1Y1",ACCDRECI
.
          TYPE      ACCDRECI                     * recurring injury numeric ?
          GOTO      NUMACC09 IF NOT EQUAL        * no - error
.
          MOVE      ACCDRECI,FORM1
          IF        FORM1 <> 0 & FORM1 <> 1
            GOTO      NUMACC09                   * invalid value - error
          ENDIF
          GOTO      NUMACC10                     * valid value
.
NUMACC09  MOVE      "ACCDRECI",TMPFIELD
          CALL      NERR0000
.
.         Treatment Injury Claim (valid values 0 and 1)
.
NUMACC10  REP       " 0n0N0y1Y1",ACCDTRIC
.
          TYPE      ACCDTRIC                     * treatment injury clm numeric?
          GOTO      NUMACC11 IF NOT EQUAL        * no - error
.
          MOVE      ACCDTRIC,FORM1
          IF        FORM1 <> 0 & FORM1 <> 1
            GOTO      NUMACC11                   * invalid value - error
          ENDIF
          GOTO      NUMACC12                     * valid value
.
NUMACC11  MOVE      "ACCDTRIC",TMPFIELD
          CALL      NERR0000
.
.         Assistance is Required (valid values 0 and 1)
.
NUMACC12  REP       " 0n0N0y1Y1",ACCDASST
.
          TYPE      ACCDASST                     * asisstance required numeric ?
          GOTO      NUMACC13 IF NOT EQUAL        * no - error
.
          MOVE      ACCDASST,FORM1
          IF        FORM1 <> 0 & FORM1 <> 1
            GOTO      NUMACC13                   * invalid value - error
          ENDIF
          GOTO      NUMACC14                     * valid value
.
NUMACC13  MOVE      "ACCDASST",TMPFIELD
          CALL      NERR0000
.
.         Need to Call Health Purchaser (valid values 0 and 1)
.
NUMACC14  REP       " 0n0N0y1Y1",ACCDNEED
.
          TYPE      ACCDNEED                     * need to call HP numeric ?
          GOTO      NUMACC15 IF NOT EQUAL        * no - error
.
          MOVE      ACCDNEED,FORM1
          IF        FORM1 <> 0 & FORM1 <> 1
            GOTO      NUMACC15                   * invalid value - error
          ENDIF
          GOTO      NUMACC16                     * valid value
.
NUMACC15  MOVE      "ACCDNEED",TMPFIELD
          CALL      NERR0000
.
.         Continue Normal Hours of Work (valid values 0 and 1)
.
NUMACC16  REP       " 0n0N0y1Y1",ACCDCONT
.
          TYPE      ACCDCONT                     * continue normal hrs numeric ?
          GOTO      NUMACC17 IF NOT EQUAL        * no - error
.
          MOVE      ACCDCONT,FORM1
          IF        FORM1 <> 0 & FORM1 <> 1
            GOTO      NUMACC17                   * invalid value - error
          ENDIF
          GOTO      NUMACC18                     * valid value
.
NUMACC17  MOVE      "ACCDCONT",TMPFIELD
          CALL      NERR0000
.
.         Alternative Work Indicator (valid values 0 and 1)
.
NUMACC18  REP       " 0n0N0y1Y1",ACCDALTW
.
          TYPE      ACCDALTW                     * alt. work indicator numeric ?
          GOTO      NUMACC19 IF NOT EQUAL        * no - error
.
          MOVE      ACCDALTW,FORM1
          IF        FORM1 <> 0 & FORM1 <> 1
            GOTO      NUMACC19                   * invalid value - error
          ENDIF
          GOTO      NUMACC20                     * valid value
.
NUMACC19  MOVE      "ACCDALTW",TMPFIELD
          CALL      NERR0000
.
.         Hours per Day Alt. Work numeric field
.
NUMACC20  MATCH     SP2,ACCDHPDA                 * blank field ?
          GOTO      NUMACC21 IF EQUAL            * yes
.
          MOVE      ACCDHPDA,DIM2
          SQUEEZE   DIM2
          TYPE      DIM2                         * hours/day numeric ?
          GOTO      NUMACC21 IF EQUAL            * yes - valid value
.
          MOVE      "ACCDHPDA",TMPFIELD
          CALL      NERR0000
.
.         Claim Status numeric field (valid values 0, 1 and 2)
.
NUMACC21  TYPE      ACCDCSTA                     * claim status numeric ?
          GOTO      NUMACC22 IF NOT EQUAL        * no - error
.
          MOVE      ACCDCSTA,FORM1
          IF        FORM1 < 0 | FORM1 > 2
            GOTO      NUMACC22                   * invalid value - error
          ENDIF
          GOTO      NUMACC23                     * valid value
.
NUMACC22  MOVE      "ACCDCSTA",TMPFIELD
          CALL      NERR0000
.
.         Hard-coded Comment Type numeric field (valid value 001)
.
NUMACC23  MATCH     SP3,ACCDTYP1                 * blank value ?
          GOTO      NUMACC25 IF EQUAL            * yes - ignore
.
          MOVELPTR  ACCDTYP1,FORM1
          COMPARE   FORM1,THREE                  * 3 characters long ?
          GOTO      NUMACC24 IF NOT EQUAL        * no - error
.
          TYPE      ACCDTYP1                     * comment type numeric ?
          GOTO      NUMACC24 IF NOT EQUAL        * no - error
.
          MOVE      ACCDTYP1,FORM3
          COMPARE   ONE,FORM3
          GOTO      NUMACC24 IF NOT EQUAL        * invalid value - error
.
          REP       " 0",ACCDTYP1
          GOTO      NUMACC25                     * valid value
.
NUMACC24  MOVE      "ACCDTYP1",TMPFIELD
          CALL      NERR0000
.
.         Hard-coded Comment Type numeric field (valid value 002)
.
NUMACC25  MATCH     SP3,ACCDTYP2                 * blank value ?
          GOTO      NUMACC27 IF EQUAL            * yes - ignore
.
          MOVELPTR  ACCDTYP2,FORM1
          COMPARE   FORM1,THREE                  * 3 characters long ?
          GOTO      NUMACC26 IF NOT EQUAL        * no - error
.
          TYPE      ACCDTYP2                     * comment type numeric ?
          GOTO      NUMACC26 IF NOT EQUAL        * no - error
.
          MOVE      ACCDTYP2,FORM3
          COMPARE   TWO,FORM3
          GOTO      NUMACC26 IF NOT EQUAL        * invalid value - error
.
          REP       " 0",ACCDTYP2
          GOTO      NUMACC27                     * valid value
.
NUMACC26  MOVE      "ACCDTYP2",TMPFIELD
          CALL      NERR0000
.
.         Hard-coded Comment Type numeric field (valid value 003)
.
NUMACC27  MATCH     SP3,ACCDTYP3                 * blank value ?
          GOTO      NUMACC99 IF EQUAL            * yes - ignore
.
          MOVELPTR  ACCDTYP3,FORM1
          COMPARE   FORM1,THREE                  * 3 characters long ?
          GOTO      NUMACC28 IF NOT EQUAL        * no - error
.
          TYPE      ACCDTYP3                     * comment type numeric ?
          GOTO      NUMACC28 IF NOT EQUAL        * no - error
.
          MOVE      ACCDTYP3,FORM3
          COMPARE   THREE,FORM3
          GOTO      NUMACC28 IF NOT EQUAL        * invalid value - error
.
          REP       " 0",ACCDTYP3
          GOTO      NUMACC99                     * valid value
.
NUMACC28  MOVE      "ACCDTYP3",TMPFIELD
          CALL      NERR0000
.
NUMACC99  RETURN
+
.*****************************************************************************
.*        Validate ACC date fields.                                          *
.*****************************************************************************
.
DTEACC00  MOVE      ACCDACDT,TEMPDATE            * date of accident
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "ACCDACDT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      ACCDCDTE,TEMPDATE            * date record created
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "ACCDCDTE",TMPFIELD
          CALL      VDAT0000
.
          MOVE      ACCDLUPD,TEMPDATE            * date record last updated
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "ACCDLUPD",TMPFIELD
          CALL      VDAT0000
.
          MOVE      ACCDADTE,TEMPDATE            * ACC decline date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "ACCDADTE",TMPFIELD
          CALL      VDAT0000
.
          MOVE      ACCDPDDT,TEMPDATE            * Patient declaration date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "ACCDPDDT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      ACCDSALT,TEMPDATE            * Start date of alt work
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "ACCDSALT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      ACCDFISD,TEMPDATE            * Full incapacity start date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "ACCDFISD",TMPFIELD
          CALL      VDAT0000
.
          MOVE      ACCDRNWD,TEMPDATE            * Return to normal work date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "ACCDRNWD",TMPFIELD
          CALL      VDAT0000
.
DTEACC99  RETURN
+
.*****************************************************************************
.*        Validate ACC time fields.                                          *
.*****************************************************************************
.
TIMACC00  MOVE      ACCDCDTE,TEMPDATE
          MOVE      ACCDCTIM,TEMPTIME            * record create time
          MOVE      "ACCDCTIM",TMPFIELD
          MOVE      ONE,TIMEFLAG                 * future date not allowed
          CALL      VTIM0000
.
          MOVE      ACCDLUPD,TEMPDATE
          MOVE      ACCDLUPT,TEMPTIME            * record update time
          MOVE      "ACCDLUPT",TMPFIELD
          MOVE      ONE,TIMEFLAG                 * future date not allowed
          CALL      VTIM0000
.
          MOVE      ACCDACDT,TEMPDATE
          MOVE      ACCDATME,TEMPTIME            * accident time
          MOVE      "ACCDATME",TMPFIELD
          MOVE      ONE,TIMEFLAG                 * future date not allowed
          CALL      VTIM0000
.
TIMACC99  RETURN
+
.*****************************************************************************
.*        Write ACC detail records                                           *
.*        (Requires KEY8 to be populated with the visit number)              *
.*****************************************************************************
.
WRTACC00  CALL      RDAWCOM1                     * visit already on file ?
          IF        OVRCD = 0
            MOVE      "ACC record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
            GOTO      WRTACC99
          ENDIF
.
          IF        VALPARNT = 1
            MOVE      "Parent record not valid ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,PARCOUNT               * increment error count
            GOTO      WRTACC99
          ENDIF
.
          BRANCH    VCHKFLAG,WRTACC99            * error checking only
.
          CALL      WRWCOM1                      * write patwc1af record
          MOVE      KEY8,PMWXVISN
          CALL      WRPMWX11                     * write pmswx1af record
.
          ADD       ONE,ADDCOUNT                 * increment added record count
.
WRTACC99  RETURN
+
.*****************************************************************************
.*                              ACCCOM00                                     *
.*     Process any ACC related comments for comment types:                   *
.*        001 - Cause of Injury                                              *
.*        002 - Injury Comments                                              *
.*        003 - Alternative Work Restrictions                                *
.*****************************************************************************
.
ACCCOM00  MOVE      ONE,ACCCOUNT                 * initialise acc counter
.
          WHILE     ACCCOUNT < 4
            LOAD      ACCCMTYP,ACCCOUNT,ACCDTYP1:   * type 001
                                        ACCDTYP2:   * type 002
                                        ACCDTYP3    * type 003
.
            MATCH     SP3,ACCCMTYP               * blank comment type ?
            GOTO      ACCCOM90 IF EQUAL          * yes - ignore
.
            LOAD      ACCCOMNT,ACCCOUNT,ACCDDAT1:   * type 001
                                        ACCDDAT2:   * type 002
                                        ACCDDAT3    * type 003
.
            STRIP     ACCCOMNT                   * remove trailing spaces
            MOVELPTR  ACCCOMNT,COMMTLEN          * get comment field length
.
            COMPARE   ZERO,COMMTLEN              * any comments ?
            GOTO      ACCCOM90 IF EQUAL          * no - finished
.
            MOVE      ZERO,LINENUMB              * yes - initialise line number
.
ACCCOM50    MOVE      ACCCOMNT,DIM100
            PACK      DIM100,DIM100,SP70,SP70    * load comment line
.
            MOVE      ACCDCLNO,ACCMACCN          * load record variables
            MOVE      ACCCMTYP,ACCMTYPE
            ADD       ONE,LINENUMB               * increment line number
            MOVE      LINENUMB,ACCMLINE
            MOVE      DIM100,ACCMDATA
.
            PACK      KEY26,ACCMACCN,ACCMTYPE,ACCMLINE
            CALL      RDACCMT1                   * record on file already ?
            IF        OVRCD = 1
              CALL      WRACCMT1                 * no - write new record
            ELSE
              IF        OVRCD = 0
                MOVE      "Error writing ACC comment records ",ERORDESC
                CALL      PERR0000               * print error line
                ADD       ONE,COMCOUNT           * increment comment error count
                GOTO      ACCCOM90
              ENDIF
            ENDIF
.
            COMPARE   COMMTLEN,HUNDRED           * any comments remaining ?
            GOTO      ACCCOM90 IF NOT LESS       * no - finished
.
.           There is at least one more line of comments to load
.
            BUMP      ACCCOMNT,100               * move forward 100 characters
            SUB       HUNDRED,COMMTLEN           * reduce string length by 100
            GOTO      ACCCOM50                   * process next line
.
ACCCOM90    ADD       ONE,ACCCOUNT               * increment acc counter
          DO
.
ACCCOM99  RETURN
+
