.*****************************************************************************
. Program      : V12WTQUE                                    
. Description  : Conversion watqueaf to new File layout      
.*****************************************************************************
. Modifications:           
.*****************************************************************************
. V12.00.00  15/04/2025 Thanh T       TSK 0955096 
.            Initial Version
.*****************************************************************************
.
.  using vi Global change command      :%s/FromString/ToString/g
.
.  Global change V12WTQUE  eg F57PTDOC
.  Global change v12wtque  eg f57ptdoc
.  Global change WATQUEFD  eg PATDOCFD (new layout)
.  Global change watqueaf  eg patdoctf
.  Global change WATQUEA1  eg PATDOCT1
.  Global change KEY20      eg KEY20
.  Global change KEY20      eg KEY9
.  Global change WRWTQUE1   eg WRDOCT1
.  Global change swatquef  eg sptdoctf
.
.  Global changes if Oracle Option is required -
.
.  Global Change answeryn  to Yes
.  Global change RSWTQUE1  eg RSPTDOC1
.  Global change RKWTQUE1  eg RKPTDOC1
.  Global change UPWTQUE1  eg UPPTDOC1
.
.  Global changes if Oracle Option is NOT required -

.  Global Change answeryn  to No
.  Global change RSWTQUE1  to OFDUMYIO
.  Global change RKWTQUE1  to OFDUMYIO
.  Global change UPWTQUE1  to OFDUMYIO
.
          INC       STD001FD
.
FINDFILE  FILE      ASCII, FIXED=256
LOGFILE   FILE      ASCII, FIXED=256
.
. Enter the first or the shortest index from the original FD and rename
. the index OLDFILE1
.
.                                     ******** copy the old FD here *******
.                                     * comment out all continuing fields and
.                                     * prefix changing fields with "OLD" -
.                                     * remove old Indexes and Redefines     
.
..OLDFILE1  IFILE     SQL, FIXED=xxx, KEY="Uxx-xx"
OLDFILE1  IFILE     SQL, FIXED=840, KEY="U1-20"
.
.NAME     TYPE      LENGTH  PHYS   START  DESCRIPTION
.----     ----      ------  ----   -----  -----------
.DWTQUMES   DIM     20      20        1   Message Id
.
.          WATTR1FD variables
.
.WMURNO    DIM      8       8       21   U/R Number
.WMCODE    DIM      9       9       29   Procedure Code
.WMTIME    FORM     5       4       38   Procedure Time (Minutes)
.WMDESC    DIM     80      80       42   Procedure Description
.WMREASON  DIM     80      80      122   Reason/Diagnosis for Procedure
.WMDATE1   DIM      8       8      202   Date on List (ccyymmdd)
.WMDATE2   DIM      8       8      210   Date of Last Review (ccyymmdd) /
.                                         Final Outcome of Offer
.WMDATE3   DIM      8       8      218   Scheduled Admit. Date (ccyymmdd)
.WMDATE4   DIM      8       8      226   Removal Date (ccyymmdd)
.WMREMOVE  DIM      3       3      234   Removal Reason (Category WR/BC)
.WMUNIT    DIM      3       3      237   Unit/Clinic (Category WU)
.WMDOCTOR  DIM      6       6      240   Attending Doctor
.WMSTAY    FORM     5       4      246   Estimated Stay (Days)
.WMPTY     DIM      3       3      250   Priority (Category TP)
.WMNOTICE  DIM      3       3      253   Short Notice (Category WS)
.WMPTYPE   DIM      3       3      256   Resident Status (Category T)
.WMPCAT    DIM      3       3      259   Admission Type (Cat A)
.WMUDEF1   DIM      3       3      262   User Defined 1 (Category W1)
.WMUDEF2   DIM      3       3      265   User Defined 2 (Category W2)
.WMUDEF3   DIM      3       3      268   User Defined 3 (Category W3)
.WMUDEF4   DIM      3       3      271   User Defined 4 (Category W4)
OWMBOOK    FORM     8       5      274   Booking Number
.WMKEYDT   DIM      8       8      279   Keyin Date For Procedure
.                                                 (ccyymmdd)
.WTWMREAD  DIM      8       8      287   Re-Assessment Date (ccyymmdd)
.WTWMDEDA  DIM      8       8      295   Deferred or Staged Adm Date
.                                               (ccyymmdd)
.WTWMCLSS  DIM      3       3      303   Patient Cat/Adm Class (Cat P)
.WTWMDTAD  DIM      8       8      306   Decision to Admit Date
.WTWMACAT  DIM      3       3      314   Administrative Category  "CL"
.WTWMGADD  DIM      8       8      317   Guaranteed Admission Date
.WTWMDABD  DIM      8       8      325   Do Not Admit Before Date
.WTWMEATY  DIM      3       3      333   Elective Admission Type  "CC"
.WTWMADMC  DIM      3       3      336   Admission Category   "WA"
.WTWMECRA  DIM     20      20      339   ECR Approval Number
.WTWMGPFA  DIM     20      20      359   GPFH Approval Number
.WTWMRFGP  DIM      8       8      379   Referring GP
.WTWMGPPC  DIM      6       6      387   GP Practice code
.WTWMNAFR  DIM      8       8      393   Not available from date
.WTWMNATO  DIM      8       8      401   Not available to date
.WTWMGPPT  DIM      2       2      409   GP Practice count
.WTWMDOFR  DIM      3       3      411   District of Residence (Cat DA)
.WTWMIHSP  DIM      3       3      414   Intended Hospital (pathspaf)
.WTWMVLSF  DIM      1       1      417   Validation Letter Sent Flag (Y/N)
.WTWMPRO2  DIM      9       9      418   Procedure Code 2
.WTWMPRO3  DIM      9       9      427   Procedure Code 3
.WTWMTRPA  DIM      8       8      436   Prev Dec. to Admit Date (Tert. Ref)
.WMUDEF5   DIM      3       3      444   User Defined 5 (Category X5)
.WMUDEF6   DIM      3       3      447   User Defined 6 (Category X6)
.WMUDEF7   DIM      3       3      450   User Defined 7 (Category X7)
.WMUDEF8   DIM      3       3      453   User Defined 8 (Category X8)
.WTWMRANK  DIM      6       6      456   Patient Rank
.WTWMSRCR  DIM      3       3      462   Source of Referral (S)
.WTWMDRSA  DIM      8       8      465   Date of ref for 1st spec. assessment
.WTWMDOSA  DIM      8       8      473   Date of 1st specialised assessment
.WTWMPHSP  DIM      3       3      481   Principal Health serv Purchaser Cat HP
.WTWMBSCD  DIM      2       2      484   Booking Status Code
.
.         WATTX1FD variables
.
.WTTXPLST  DIM      3       3      486    Patient List. Status (PRS/2) Cat VL
.WTTXPOWD  DIM      3       3      489    Post-Op Ward (patwr1af)
.WTTXADMW  DIM      3       3      492    Admitting Ward (patwr1af)
.WTTXPSTY  DIM      1       1      495    Parent Staying (0=NO,1=YES)
.WTTXIDYC  DIM      3       3      496    Intended Day Case (Cat XB)
.WTTXADMF  DIM      3       3      499    Admission Forms (Cat XA)
.WTTXEQR1  DIM      3       3      502    Equipment Required 1 (Cat XE)
.WTTXEQR2  DIM      3       3      505    Equipment Required 2 (Cat XE)
.WTTXPAST  DIM      3       3      508    Pre-Admission Status (Cat XG)
.WTTXCNSN  DIM      1       1      511    Consent? (0=NO,1=YES)
.WTTXNTGP  DIM      1       1      512    Notify Registered GP (0=NO,1=YES)
.WTTXPATM  DIM      8       8      513    Proposed Admission Time (hh:mm:ss)
.WTTXLEQR  DIM      3       3      521    Loan Equipment Required (Cat XO)
.WTTXDPRC  DIM      9       9      524    Duplicate Procedure Code (watproaf)
.WTTXDPCN  DIM      2       2      533    Duplicate Count
.WTTXCTYP  DIM      3       3      535    Claim Type (Cat CL)
.WTTXEQR3  DIM      3       3      538    Equipment Required 3 (Cat XE)
.WTTXPTIM  DIM      8       8      541    Proposed Pre Admiss Time (hh:mm:ss)
.WTTXPOTM  DIM      8       8      549    Proposed Operation Time (hh:mm:ss)
.WTTXPANS  DIM      3       3      557    Pre-Anaesthetic Status (Cat XH)
.WTTXPANT  DIM      8       8      560    Pre-Anaesthetic Time (hh:mm:ss)
.WTTX23HR  DIM      1       1      568    Planned 23 hour stay (0=No 1=Yes)
.WTTXANAE  DIM      3       3      569    Anaesthetic Type (Cat OA)
.WTTXBOTY  DIM      3       3      572    Booking Type (Cat BK)
.WTTXTEAM  DIM      5       5      575    Team
.WTTXFUND  DIM      3       3      580    Funding Source (Cat cx)
.WTTXWARD  DIM      3       3      583    Ward (patwr1af)
.WTTXPREF  DIM      3       3      586    Preferred Accommodation (Cat BP)
.WTTXNWHC  DIM      3       3      589    No WA Hospital Contact (Cat cw)
.WTTXINTD  DIM      3       3      592    Intended Stay (Cat VI)
.WTTXMAUT  DIM      1       1      595    Medical Authorisation Approved
.                                         Blank = Blank
.                                         0 = No
.                                         1 = Yes
.WTTXEXPD  DIM      8       8      596    Expected Delivery Date (ccyymmdd)
.WTTXTCRS  DIM      3       3      604    Tertiary Care Reason (Cat WH)
.WTTXDISC  DIM      9       9      607    Disaster Code (dismasaf)
.WTTXRTIM  DIM      8       8      616    Removal Time (hh:mm:ss)
.WTTXRCLI  DIM     10      10      624    Referring Clinician
.WTTXRCLP  DIM     10      10      634    Referring Clinician Practice
.SAVTXWRD  DIM      3       3      644    Prior Ward (patwr1af)
.WTWMPDSC  DIM     80      80      647    Procedure Description Comments
.WTWMRSFL  DIM      1       1      727    Record sent flag (Y or N)
.WTWMECNT  DIM      9       9      728    ESIS unique count eg. CCYY?????
.WTWMCSST  DIM      1       1      737    Consent Obtained (N=NO,Y=YES)
.WTWMCSDT  DIM      8       8      738    Consent Changed Date (ccyymmdd)
.WTWMASSR  DIM     10      10      746    Assessor Code (pmshcpaf)
.WTWMACPR  DIM      8       8      756    Actual Procedure Event Number
.WTTXPSAH  DIM      1       1      764    Pt. Suitable For Another Hospital
.                                          " " or 0 = No, 1=Yes, and 2=Unknown
.WTTXPHOS  DIM      3       3      765    Preferred Hospital (pathspaf)
.WTTXPRPB  DIM      3       3      768    Procedure can be perf. by (CAT yh)
.                                         01 - First Available Surgeon
.                                         02 - Named Surgeon (Complexity)
.                                         03 - Named Surgeon (Private)
.                                         04 - Nurse Practitioner
.                                         05 - Registrar List
.WTTXAASC  DIM      4       4      771    Airway Assessment Score (ASA)
.                                         A single number entry from 1-4
.WTTXUD09  DIM      3       3      775    User Defined 9 (Category X9)
.                                         NZ NPF Clinician Defined Susp. of Can
.                                         cer
.WTTXUD10  DIM      3       3      778    User Defined 10 (Category x1)
.WTTXUD11  DIM      3       3      781    User Defined 11 (Category x2)
.WTTXUD12  DIM      3       3      784    User Defined 12 (Category x3)
.WTTXUD13  DIM      3       3      787    User Defined 13 (Category x4)
.DWMSTAT   DIM      1       1      790    Procedure Status
.                                            1 - Unscheduled
.                                            2 - Scheduled
.                                            3 - Pre-Admitted
.                                            4 - Admitted
.                                            5 - Discharged
.                                            6 - Removed from Waiting List
.                                            7 - Performed (No longer used)
.                                            8 - Not Performed (No longer used)
.                                            9 - Cancelled Admission
OWTQUSPA   DIM     49      49      791    Spare Variable
.
.End of Record                     840
.
.
.                                     ******** copy the new FD here *******
.
WATQUEA1   IFILE SQL, FIXED=840, KEY="U1-20"
.
.Name      Type  Length Physical Start Description
.----      ----  ------ -------- ----- -----------
DWTQUMES   DIM     20      20        1   Message Id
.
.          WATTR1FD variables
.
WMURNO    DIM      8       8       21   U/R Number
WMCODE    DIM      9       9       29   Procedure Code
WMTIME    FORM     5       4       38   Procedure Time (Minutes)
WMDESC    DIM     80      80       42   Procedure Description
WMREASON  DIM     80      80      122   Reason/Diagnosis for Procedure
WMDATE1   DIM      8       8      202   Date on List (ccyymmdd)
WMDATE2   DIM      8       8      210   Date of Last Review (ccyymmdd) /
.                                         Final Outcome of Offer
WMDATE3   DIM      8       8      218   Scheduled Admit. Date (ccyymmdd)
WMDATE4   DIM      8       8      226   Removal Date (ccyymmdd)
WMREMOVE  DIM      3       3      234   Removal Reason (Category WR/BC)
WMUNIT    DIM      3       3      237   Unit/Clinic (Category WU)
WMDOCTOR  DIM      6       6      240   Attending Doctor
WMSTAY    FORM     5       4      246   Estimated Stay (Days)
WMPTY     DIM      3       3      250   Priority (Category TP)
WMNOTICE  DIM      3       3      253   Short Notice (Category WS)
WMPTYPE   DIM      3       3      256   Resident Status (Category T)
WMPCAT    DIM      3       3      259   Admission Type (Cat A)
WMUDEF1   DIM      3       3      262   User Defined 1 (Category W1)
WMUDEF2   DIM      3       3      265   User Defined 2 (Category W2)
WMUDEF3   DIM      3       3      268   User Defined 3 (Category W3)
WMUDEF4   DIM      3       3      271   User Defined 4 (Category W4)
WMBOOK    DIM      8       8      274   Booking Number
WMKEYDT   DIM      8       8      282   Keyin Date For Procedure
.                                                 (ccyymmdd)
WTWMREAD  DIM      8       8      290   Re-Assessment Date (ccyymmdd)
WTWMDEDA  DIM      8       8      298   Deferred or Staged Adm Date
.                                               (ccyymmdd)
WTWMCLSS  DIM      3       3      306   Patient Cat/Adm Class (Cat P)
WTWMDTAD  DIM      8       8      309   Decision to Admit Date
WTWMACAT  DIM      3       3      317   Administrative Category  "CL"
WTWMGADD  DIM      8       8      320   Guaranteed Admission Date
WTWMDABD  DIM      8       8      328   Do Not Admit Before Date
WTWMEATY  DIM      3       3      336   Elective Admission Type  "CC"
WTWMADMC  DIM      3       3      339   Admission Category   "WA"
WTWMECRA  DIM     20      20      342   ECR Approval Number
WTWMGPFA  DIM     20      20      362   GPFH Approval Number
WTWMRFGP  DIM      8       8      382   Referring GP
WTWMGPPC  DIM      6       6      390   GP Practice code
WTWMNAFR  DIM      8       8      396   Not available from date
WTWMNATO  DIM      8       8      404   Not available to date
WTWMGPPT  DIM      2       2      412   GP Practice count
WTWMDOFR  DIM      3       3      414   District of Residence (Cat DA)
WTWMIHSP  DIM      3       3      417   Intended Hospital (pathspaf)
WTWMVLSF  DIM      1       1      420   Validation Letter Sent Flag (Y/N)
WTWMPRO2  DIM      9       9      421   Procedure Code 2
WTWMPRO3  DIM      9       9      430   Procedure Code 3
WTWMTRPA  DIM      8       8      439   Prev Dec. to Admit Date (Tert. Ref)
WMUDEF5   DIM      3       3      447   User Defined 5 (Category X5)
WMUDEF6   DIM      3       3      450   User Defined 6 (Category X6)
WMUDEF7   DIM      3       3      453   User Defined 7 (Category X7)
WMUDEF8   DIM      3       3      456   User Defined 8 (Category X8)
WTWMRANK  DIM      6       6      459   Patient Rank
WTWMSRCR  DIM      3       3      465   Source of Referral (S)
WTWMDRSA  DIM      8       8      468   Date of ref for 1st spec. assessment
WTWMDOSA  DIM      8       8      476   Date of 1st specialised assessment
WTWMPHSP  DIM      3       3      484   Principal Health serv Purchaser Cat HP
WTWMBSCD  DIM      2       2      487   Booking Status Code
.
.         WATTX1FD variables
.
WTTXPLST  DIM      3       3      489    Patient List. Status (PRS/2) Cat VL
WTTXPOWD  DIM      3       3      492    Post-Op Ward (patwr1af)
WTTXADMW  DIM      3       3      495    Admitting Ward (patwr1af)
WTTXPSTY  DIM      1       1      498    Parent Staying (0=NO,1=YES)
WTTXIDYC  DIM      3       3      499    Intended Day Case (Cat XB)
WTTXADMF  DIM      3       3      502    Admission Forms (Cat XA)
WTTXEQR1  DIM      3       3      505    Equipment Required 1 (Cat XE)
WTTXEQR2  DIM      3       3      508    Equipment Required 2 (Cat XE)
WTTXPAST  DIM      3       3      511    Pre-Admission Status (Cat XG)
WTTXCNSN  DIM      1       1      514    Consent? (0=NO,1=YES)
WTTXNTGP  DIM      1       1      515    Notify Registered GP (0=NO,1=YES)
WTTXPATM  DIM      8       8      516    Proposed Admission Time (hh:mm:ss)
WTTXLEQR  DIM      3       3      524    Loan Equipment Required (Cat XO)
WTTXDPRC  DIM      9       9      527    Duplicate Procedure Code (watproaf)
WTTXDPCN  DIM      2       2      536    Duplicate Count
WTTXCTYP  DIM      3       3      538    Claim Type (Cat CL)
WTTXEQR3  DIM      3       3      541    Equipment Required 3 (Cat XE)
WTTXPTIM  DIM      8       8      544    Proposed Pre Admiss Time (hh:mm:ss)
WTTXPOTM  DIM      8       8      552    Proposed Operation Time (hh:mm:ss)
WTTXPANS  DIM      3       3      560    Pre-Anaesthetic Status (Cat XH)
WTTXPANT  DIM      8       8      563    Pre-Anaesthetic Time (hh:mm:ss)
WTTX23HR  DIM      1       1      571    Planned 23 hour stay (0=No 1=Yes)
WTTXANAE  DIM      3       3      572    Anaesthetic Type (Cat OA)
WTTXBOTY  DIM      3       3      575    Booking Type (Cat BK)
WTTXTEAM  DIM      5       5      578    Team
WTTXFUND  DIM      3       3      583    Funding Source (Cat cx)
WTTXWARD  DIM      3       3      586    Ward (patwr1af)
WTTXPREF  DIM      3       3      589    Preferred Accommodation (Cat BP)
WTTXNWHC  DIM      3       3      592    No WA Hospital Contact (Cat cw)
WTTXINTD  DIM      3       3      595    Intended Stay (Cat VI)
WTTXMAUT  DIM      1       1      598    Medical Authorisation Approved
.                                         Blank = Blank
.                                         0 = No
.                                         1 = Yes
WTTXEXPD  DIM      8       8      599    Expected Delivery Date (ccyymmdd)
WTTXTCRS  DIM      3       3      607    Tertiary Care Reason (Cat WH)
WTTXDISC  DIM      9       9      610    Disaster Code (dismasaf)
WTTXRTIM  DIM      8       8      619    Removal Time (hh:mm:ss)
WTTXRCLI  DIM     10      10      627    Referring Clinician
WTTXRCLP  DIM     10      10      637    Referring Clinician Practice
SAVTXWRD  DIM      3       3      647    Prior Ward (patwr1af)
WTWMPDSC  DIM     80      80      650    Procedure Description Comments
WTWMRSFL  DIM      1       1      730    Record sent flag (Y or N)
WTWMECNT  DIM      9       9      731    ESIS unique count eg. CCYY?????
WTWMCSST  DIM      1       1      740    Consent Obtained (N=NO,Y=YES)
WTWMCSDT  DIM      8       8      741    Consent Changed Date (ccyymmdd)
WTWMASSR  DIM     10      10      749    Assessor Code (pmshcpaf)
WTWMACPR  DIM      8       8      759    Actual Procedure Event Number
WTTXPSAH  DIM      1       1      767    Pt. Suitable For Another Hospital
.                                          " " or 0 = No, 1=Yes, and 2=Unknown
WTTXPHOS  DIM      3       3      768    Preferred Hospital (pathspaf)
WTTXPRPB  DIM      3       3      771    Procedure can be perf. by (CAT yh)
.                                         02 - Named Surgeon (Complexity)
.                                         03 - Named Surgeon (Private)
.                                         04 - Nurse Practitioner
.                                         05 - Registrar List
WTTXAASC  DIM      4       4      774    Airway Assessment Score (ASA)
.                                         A single number entry from 1-4
WTTXUD09  DIM      3       3      778    User Defined 9 (Category X9)
.                                         NZ NPF Clinician Defined Susp. of Can
.                                         cer
WTTXUD10  DIM      3       3      781    User Defined 10 (Category x1)
WTTXUD11  DIM      3       3      784    User Defined 11 (Category x2)
WTTXUD12  DIM      3       3      787    User Defined 12 (Category x3)
WTTXUD13  DIM      3       3      790    User Defined 13 (Category x4)
DWMSTAT   DIM      1       1      793    Procedure Status
.                                            1 - Unscheduled
.                                            2 - Scheduled
.                                            3 - Pre-Admitted
.                                            4 - Admitted
.                                            5 - Discharged
.                                            6 - Removed from Waiting List
.                                            7 - Performed (No longer used)
.                                            8 - Not Performed (No longer used)
.                                            9 - Cancelled Admission
WTQUSPAR   DIM     46      46      794    Spare Variable
.
.End of Record                     840.
. LOCAL VARIABLES
. ---------------
CMDLINE   DIM       200
.
DEFPATH   DIM       60
DIM60     DIM       60
DISNUM    FORM      4
.
ERORTEXT  DIM       80
.
INPFILE   DIM       8
.
MINUS3    FORM      "-3"
.
NEWFILE   DIM       60
NEWPATH   DIM       60
.
OLDPATH   DIM       60
.
RECNUM    FORM      8
.
SAVEFLG   FORM      1
.
USINGORC  DIM       1
.
.
. PROGRAM CONSTANTS
. -----------------
CREATEXT  INIT    "Log file created "
DASHLINE  INIT      "--------------------------------------------------":
                    "------------------------------"
ENDGTEXT  INIT    "Ending   fixit (Option "
OPENTEXT  INIT    "Log file opened "
SP60      INIT    "                                                            "
STARTTXT  INIT    "Starting fixit (Option "
.
.
.
PRGNAM    INIT      "CONVERSION WATQUEFD"
PRGID     INIT      "V12WTQUE"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                             MAIN0000                                      *
.*                         Program Mainline                                  *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000                      * init and open files
.
          CALL      OLOG0000                      * create/open log file
MAIN0500  CALL      OPTN0000                      * get option
          BRANCH    COPTION,MAIN1000:             * run c-isam fixit
                            MAIN2000              * run oracle fixit
          GOTO      MAIN9999                      * exit selected
.
MAIN1000  CALL      KDIR0000                      * Keyin directory
          BRANCH    EXIT,MAIN9000
.
MAIN2000  CALL      CONTQST                       * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:               * yes
                          MAIN0500:               * no
                          MAIN9000                * cancel
.
MAIN5000  BRANCH    COPTION,MAIN6000:             * c-isam fixit
                            MAIN7000              * oracle fixit
.
.         Running c-isam fix
.
MAIN6000  CALL      PREP0000                      * preparing files
          BRANCH    EXIT,MAIN9000
.
          CALL      READ0000                      * read old records and write
          CALL      ENDP0000                      * save/zip saved file
          GOTO      MAIN9000
.
.         Running oracle fix
.
MAIN7000  CALL      OFIX0000                      * run oracle fix
.
MAIN9000  CALL      CLOG0000                      * close log file
.
MAIN9999  CHAIN     PGM
+
.********************************************************************
.*                          INIT0000                                *
.*  Display heading and check that the files needed exist&open them *
.********************************************************************
.
INIT0000  CALL      DISPHEAD
          MOVE      ZERO,RECNUM
          MOVE      ZERO,DISNUM
          
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Ok to proceed                           *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION - option selected                                    *
.*****************************************************************************
.
OPTN0000  MOVE      "No",USINGORC
          REP       "yYnN",USINGORC
          MOVE      USINGORC,KEY1
          REP       "Y-N-",KEY1
          MATCH     "-",KEY1
          GOTO      OPTN9200 IF NOT EQUAL
.
          DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Fixit (c-isam only)"
          MATCH     "Y",USINGORC
          IF        @EQUAL
            DISPLAY   *P1:6,*V2LON,TWO,*HOFF,". Run Fixit (Oracle only)"
          ENDIF
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run c-isam fixit
                            OPTN9000             * run oracle fixit
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9200  DISPLAY   *P1:3,*EF,*P1:4," Oracle Option has not been set up ":
                          "correctly":
                    *P1:6," Program will terminate    - ";
          MOVE      "Oracle Option has not been set up correctly",ERORTEXT
          WRITE     LOGFILE,SEQ;*+,ERORTEXT
          CALL      HITENTER
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.********************************************************************
.*                          KDIR0000                                *
.*  Keyin directories                                               *
.********************************************************************
.
KDIR0000  MOVE      ONE,SAVEFLG        * Default to keep file
          KEYIN     *P1:10,*EL,"Do you want to save the original file (Y/N) ? ":
                    ANS;
          REP       "yYnN",ANS
          CMATCH    "Y",ANS
          GOTO      KDIR1000 IF EQUAL
          MOVE      ZERO,SAVEFLG       * not to keep file
          CMATCH    "N",ANS
          GOTO      KDIR1000 IF EQUAL
          BEEP
          GOTO      KDIR0000
.
KDIR1000  CALL      DEFT0000                * Get the default path
          BRANCH    EXIT,KDIR9999
          MOVE      SP60,OLDPATH
.
          DISPLAY   *P1:24,*EL,"The directory path must end with a slash (/) ";
.
.
          MOVE      DEFPATH,OLDPATH
          BRANCH    SAVEFLG,KDIR2000
.
.         Keyin the path for the original file
.
          KEYIN     *P1:12,*EL,"Keyin path for temporarily saving original ":
                    "file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
          GOTO      KDIR3000
.
KDIR2000  KEYIN     *P1:12,*EL,"Keyin path for saving original file: ":
                    *P10:13,*EL,*DV,*RV,OLDPATH:
                    *P10:13,OLDPATH;
.
KDIR3000  ENDSET    OLDPATH
          APPEND    SP60,OLDPATH
          RESET     OLDPATH
.
          MATCH     SP60,OLDPATH
          IF        @EQUAL
            PACK      OLDPATH,DEFPATH      * use the default
            DISPLAY   *P10:13,*EL,*V2LON,OLDPATH;
          ENDIF
.
          SQUEEZE   OLDPATH
          CMATCH    EXITCHAR,OLDPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,OLDPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR1000
.
.         Keyin the path for the new file
.
KDIR5000  MOVE      SP60,NEWPATH
          MOVE      DEFPATH,NEWPATH
          KEYIN     *P1:15,*EL,"Keyin path for the new file: ":
                    *P10:16,*EL,*DV,*RV,NEWPATH:
                    *P10:16,NEWPATH;
          ENDSET    NEWPATH
          APPEND    SP60,NEWPATH
          RESET     NEWPATH
.
          MATCH     SP60,NEWPATH
          IF        @EQUAL
            PACK      NEWPATH,DEFPATH      * use the default
            DISPLAY   *P10:16,*V2LON,NEWPATH;
          ENDIF
.
          SQUEEZE   NEWPATH
          CMATCH    EXITCHAR,NEWPATH
          GOTO      KDIR9000 IF EQUAL
.
          PACK      DIM60,NEWPATH,SP60
          CALL      VALD0000         * check if it's a valid directory
          BRANCH    EXIT,KDIR5000
          GOTO      KDIR9999
.
KDIR9000  MOVE      ONE,EXIT
.
KDIR9999  DISPLAY   *P1:24,*EL;
          RETURN
+
.********************************************************************
.*                          PREP0000                                *
.*  Preparing files                                                 *
.********************************************************************
.
PREP0000  CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,"Record : "
.
          CALL      SLOG0000                      * write start to log file
.
          MOVE      "watqueaf",INPFILE
          CALL      CHEK0000             * check file exists or has been changed
          BRANCH    EXIT,PREP9000
.
          CLOSE     OLDFILE1
          DISPLAY   *P1:24,*EL,"Copying files ... Please wait !! ";
.
.         Copy old file to the keyin directory
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat watqueaf.dat` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "swatquef.dat",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cp `ldat watqueaf.idx` ",CMDLINE
          APPEND    OLDPATH,CMDLINE
          APPEND    "swatquef.idx",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            GOTO      PREP8000
          ENDIF
.
.         Remove the original files
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    DEFPATH,CMDLINE
          APPEND    "watqueaf",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Unable to remove the original file.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Opening old file after being copied
.
          MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60
          APPEND    "swatquef",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      OLDFILE1,DIM60
          TRAPCLR   IO
          IF        OVRCD = 1
            MOVE      "Unable to open saved original file.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      PREP9000
          ENDIF
.
.         Create the new file
.
          DISPLAY   *P1:24,*EL,"Creating new files ... Please wait !! ";
          PACK      NEWFILE,SP60
          CLEAR     NEWFILE
          APPEND    NEWPATH,NEWFILE
          APPEND    "watqueaf",NEWFILE
          APPEND    SP60,NEWFILE
          RESET     NEWFILE
          SQUEEZE   NEWFILE
.
PREP1000  PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "isbuild ",CMDLINE
          APPEND    NEWFILE,CMDLINE
.
.  The files new record length and unique key must be written here
.      eg    APPEND    " 195 UC9-16",CMDLINE
.
. Index 1
          APPEND    " 840 UC1-20",CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID
.
.  If the file has more than one index, this piece of code below has 
.  to be repeated with for each individual index
.
          OPEN      WATQUEA1,NEWFILE
.
          DISPLAY   *P1:24,*EL;
          MOVE      ZERO,EXIT
          GOTO      PREP9999
.
PREP5000  MOVE      "Old file not found.  ",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
          GOTO      PREP9000
.
PREP8000  MOVE      "Unable to copy original file.  (Error: ",ERORTEXT
          ENDSET    ERORTEXT
          APPEND    TASKID,ERORTEXT
          APPEND    ")  ",ERORTEXT
          RESET     ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
.
PREP9000  MOVE      ONE,EXIT
.
PREP9999  RETURN
+
.********************************************************************
.*                          CHEK0000                                *
.*  Check if file exists, or has already been converted             *
.********************************************************************
.
CHEK0000  MOVE      ZERO,EXIT
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND GIVING DIM60 IF IO
          OPEN      OLDFILE1,INPFILE
          TRAPCLR   IO
          BRANCH    OVRCD,CHEK2000       * Original file does not exist
          CLOSE     OLDFILE1
          GOTO      CHEK9999
.
CHEK2000  RESET     DIM60
          SCAN      "I * I",DIM60
          DISPLAY   *P1:23,*EF,"File '",INPFILE,"' ";
          IF        @EQUAL
            DISPLAY   "does not exist - ";
            MOVE      "File does not exist",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
          ELSE
            RESET     DIM60
            SCAN      "I * L",DIM60
            IF        @EQUAL
              DISPLAY   "has already been converted - ";
              MOVE      "File has already been converted",ERORTEXT
              WRITE     LOGFILE,SEQ;ERORTEXT
            ELSE
              DISPLAY   "has caused an IO error - ";
              MOVE      "File has caused an IO Error",ERORTEXT
              WRITE     LOGFILE,SEQ;ERORTEXT
            ENDIF
          ENDIF
          MOVE      "File will be bypassed",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *+,ERORTEXT
.
          CALL      HITENTER
          DISPLAY   *P1:23,*EF;
.
CHEK9000  MOVE      ONE,EXIT
.
CHEK9999  RETURN
+
.**********************************************************************
.*                               READ0000                             *
.*             loop thru old file and write each record               *
.**********************************************************************
.
READ0000  DISPLAY   *P1:20,*EL,"Record No. : ";
.
          PACK      KEY20,SP60
          CALL      READSOLD                      * position at start
READ1000  CALL      READKOLD                      * read next record
          BRANCH    OVRCD,READ6000                * no more records
.
          ADD       ONE,RECNUM                    * update record counter
          ADD       ONE,DISNUM                    * Display counter
.
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.  All necessary changes to the files field lengths, date changes
.  or any other sort of modification must be made here
.
.    eg    PACK      DSPARE,SP70
.          PACK      PTDSDMDC,SP10
.          PACK      PTDSDDRG,SP10
.
          MOVE      OWMBOOK,WMBOOK 
          MOVE      SP70,WTQUSPAR
.                                               * Pack key here
          PACK      KEY20,DWTQUMES,SP70
          CALL      WRWTQUE1                    * write to new file

          GOTO      READ1000                      * get next record
.
READ6000  CLOSE     WATQUEA1                      * close new file
          CLOSE     OLDFILE1                      * close old file
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Ended  : ",CDATE,SP1,CTIMEIS:
                    *P1:24;
.
READ9999  RETURN
+
.**********************************************************************
.*                               VALD0000                             *
.*        Check if it a valid directory                               *
.**********************************************************************
.
VALD0000  MOVE      ZERO,EXIT
.
          SQUEEZE   DIM60
          ENDSET    DIM60
          CMATCH    SLASH,DIM60
          IF        !@EQUAL
            MOVE      "Directory path must end with a slash (/) ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          RESET     DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          APPEND    "cd ",CMDLINE
          APPEND    DIM60,CMDLINE
          APPEND    SP60,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Directory does not exist ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      VALD9000
          ENDIF
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT            * Not valid
.
VALD9999  RETURN
+
.**********************************************************************
.*                               ENDP0000                             *
.*        Remove or zip save file                                     *
.**********************************************************************
.
ENDP0000  MOVE      SP60,DIM60
          CLEAR     DIM60
          APPEND    OLDPATH,DIM60        * set up the saved file with path
          APPEND    "swatquef*",DIM60
          APPEND    SP60,DIM60
          RESET     DIM60
          SQUEEZE   DIM60
.
          PACK      CMDLINE,SP60,SP60
          CLEAR     CMDLINE
          IF        SAVEFLG = 1
            APPEND    "gzip -f ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Compressing original file.. ":
                      "Please wait !!  ";
          ELSE
            APPEND    "rm ",CMDLINE
            APPEND    DIM60,CMDLINE
            APPEND    SP60,CMDLINE
            RESET     CMDLINE
            DISPLAY   *P1:24,*EL,"Removing original file.. Please wait !!  ";
          ENDIF
          EXECUTE   CMDLINE,TASKID      * check if exists
.
          CMATCH    "0",TASKID
          IF        !@EQUAL
            MOVE      "Saved file not zipped or removed.  ",ERORTEXT
            WRITE     LOGFILE,SEQ;ERORTEXT
            DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
            CALL      HITENTER
            GOTO      ENDP9999
          ENDIF
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:24,*EL,*B,"Finished processing  ",CDATE,SP1,CTIMEIS:
                    ".  ";
          CALL      HITENTER
.
          CALL      ELOG0000                     * write an end log entry
.
ENDP9999  RETURN
+
.**********************************************************************
.*        DEFT0000 -  Get the default directory                       *
.**********************************************************************
.
DEFT0000  EXECUTE   "ldat watqueaf.dat > temp.txt",TASKID
.
          PACK      DEFPATH,SP30,SP30
          CLOSE     FINDFILE
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      FINDFILE,"temp"
          TRAPCLR   IO
          BRANCH    OVRCD,DEFT3000
.
          READ      FINDFILE,SEQ;DEFPATH
          GOTO      DEFT3000 IF OVER
.
          ENDSET    DEFPATH
DEFT1000  CMATCH    "/",DEFPATH
          GOTO      DEFT2000 IF EQUAL
.
          BUMP      DEFPATH,-1
          GOTO      DEFT1000 IF NOT EOS
          GOTO      DEFT3000
.
DEFT2000  LENSET    DEFPATH
          RESET     DEFPATH
.
          PACK      DEFPATH,DEFPATH,SP30,SP30,SP30,SP30
          STRIP     DEFPATH
          ENDSET    DEFPATH
          RESET     DEFPATH
          CLOSE     FINDFILE
          MOVE      ZERO,EXIT
          GOTO      DEFT9999
.
DEFT3000  MOVE      "Error finding 'watqueaf'.  ",ERORTEXT
          WRITE     LOGFILE,SEQ;ERORTEXT
          DISPLAY   *P1:24,*EL,*B,*+,ERORTEXT;
          CALL      HITENTER
          CLOSE     FINDFILE
          MOVE      ONE,EXIT
.
DEFT9999  RETURN
+
.*****************************************************************************
.*                            OLOG0000                                       *
.*                    Open the log file                                      *
.*****************************************************************************
.
OLOG0000  CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      LOGFILE,"v12wtque.log"       * open log file
          TRAPCLR   IO
          IF        OVRCD = 1
            PREP      LOGFILE,"v12wtque.log"     * create and open log file
            WRITE     LOGFILE,MINUS3;DASHLINE
            WRITE     LOGFILE,SEQ;CREATEXT,CDATE,SP1,CTIMEIS
          ELSE
            WRITE     LOGFILE,MINUS3;DASHLINE
            WRITE     LOGFILE,SEQ;OPENTEXT,CDATE,SP1,CTIMEIS
          ENDIF
.
OLOG9999  RETURN
+
.*****************************************************************************
.*                            CLOG0000                                       *
.*                    Close the log file                                     *
.*****************************************************************************
.
CLOG0000  CLOSE     LOGFILE
.
CLOG9999  RETURN
+
.*****************************************************************************
.*                            SLOG0000                                       *
.*                    Write a start log to the log file                      *
.*****************************************************************************
.
SLOG0000  WRITE     LOGFILE,SEQ;DASHLINE
          WRITE     LOGFILE,SEQ;STARTTXT,COPTION,RBRACK,SP1,CDATE,SP1:
                                   CTIMEIS
.
SLOG9999  RETURN
+
.*****************************************************************************
.*                            ELOG0000                                       *
.*                    Write an end log to the log file                       *
.*****************************************************************************
.
ELOG0000  WRITE     LOGFILE,SEQ;ENDGTEXT,COPTION,RBRACK,SP1,CDATE,SP1:
                                   CTIMEIS
ELOG9999  RETURN
+
.*****************************************************************************
.*                            OFIX0000                                       *
.*                    Oracle fix to "WATQUEFD"                               *
.*****************************************************************************
.
OFIX0000  DISPLAY   *P1:24,*EL;
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P1:18,"Started : ",CDATE,SP1,CTIMEIS:
                    *P1:20,*EL,"Record No. :";
.
          CALL      SLOG0000                      * write start to log file
.
          OPEN      WATQUEA1,"watqueaf"
.
          PACK      KEY20,SP70
          CALL      RSWTQUE1                      * position at start of file
OFIX0500  CALL      RKWTQUE1                      * read next record
          BRANCH    OVRCD,OFIX9000                * eof - finished
.
          ADD       ONE,RECNUM                    * increment record counter
          ADD       ONE,DISNUM                    * Display counter
.         
          IF        DISNUM = 5000  | RECNUM = 1
            MOVE      ZERO,DISNUM 
            DISPLAY   *P15:20,*V2LON,RECNUM
          ENDIF
.
.>>>>>>>  Add code here to populate/update variables
.
          CALL      UPWTQUE1
.
          GOTO      OFIX0500                     * get next record
.         
OFIX9000  CLOSE     WATQUEA1
.
          CALL      IBACLOCK
          REP       " 0",CDATE
          REP       " 0",CTIMEIS
          DISPLAY   *P15:20,*V2LON,RECNUM,*HOFF:
                    *P1:22,"Update completed ",CDATE,SP1,CTIMEIS:
                    *P1:24;
          CALL      HITENTER
.
          CALL      ELOG0000                     * write an end log entry
.
OFIX9999  RETURN
.
OFDUMYIO  RETURN
+
.*****************************************************************************
.*        I/O Routines                                                       *
.*****************************************************************************
.
.                  ******************************    OLD IO ROUTINES
.                  Copy the Positional Read (RS or RDS) from original I/O file,
.                  - change Label to READSOLD and the index name to OLDFILE1
.
READSOLD  RESET     KEY20
          MOVE      ZERO,OVRCD
          READ      OLDFILE1,KEY20;;
          RETURN
.
.                  Copy the Read Next (RK or RDK) from the original I/O file
.                  - change Label to READKOLD and the index name to OLDFILE1
.                  - change any fields that are changing to a prefix of OLD,
.                    eg. PTEDSPAR becomes OLDDSPAR
.
READKOLD  MOVE      ZERO,OVRCD
          READKS    OLDFILE1;DWTQUMES,WMURNO,WMCODE,WMTIME,WMDESC:
                                  WMREASON,WMDATE1,WMDATE2,WMDATE3,WMDATE4:
                                  WMREMOVE,WMUNIT,WMDOCTOR,WMSTAY,WMPTY:
                                  WMNOTICE,WMPTYPE,WMPCAT,WMUDEF1,WMUDEF2:
                                  WMUDEF3,WMUDEF4,OWMBOOK,WMKEYDT,WTWMREAD:
                                  WTWMDEDA,WTWMCLSS,WTWMDTAD,WTWMACAT,WTWMGADD:
                                  WTWMDABD,WTWMEATY,WTWMADMC,WTWMECRA,WTWMGPFA:
                                  WTWMRFGP,WTWMGPPC,WTWMNAFR,WTWMNATO,WTWMGPPT:
                                  WTWMDOFR,WTWMIHSP,WTWMVLSF,WTWMPRO2,WTWMPRO3:
                                  WTWMTRPA,WMUDEF5,WMUDEF6,WMUDEF7,WMUDEF8:
                                  WTWMRANK,WTWMSRCR,WTWMDRSA,WTWMDOSA,WTWMPHSP:
                                  WTWMBSCD,WTTXPLST,WTTXPOWD,WTTXADMW,WTTXPSTY:
                                  WTTXIDYC,WTTXADMF,WTTXEQR1,WTTXEQR2,WTTXPAST:
                                  WTTXCNSN,WTTXNTGP,WTTXPATM,WTTXLEQR,WTTXDPRC:
                                  WTTXDPCN,WTTXCTYP,WTTXEQR3,WTTXPTIM,WTTXPOTM:
                                  WTTXPANS,WTTXPANT,WTTX23HR,WTTXANAE,WTTXBOTY:
                                  WTTXTEAM,WTTXFUND,WTTXWARD,WTTXPREF,WTTXNWHC:
                                  WTTXINTD,WTTXMAUT,WTTXEXPD,WTTXTCRS,WTTXDISC:
                                  WTTXRTIM,WTTXRCLI,WTTXRCLP,SAVTXWRD,WTWMPDSC:
                                  WTWMRSFL,WTWMECNT,WTWMCSST,WTWMCSDT,WTWMASSR:
                                  WTWMACPR,WTTXPSAH,WTTXPHOS,WTTXPRPB,WTTXAASC:
                                  WTTXUD09,WTTXUD10,WTTXUD11,WTTXUD12,WTTXUD13:
                                  DWMSTAT,OWTQUSPA
          GOTO      OVERCOND IF OVER
          RETURN
.
.                  ******************************    NEW IO ROUTINES
.                  Copy the Write statement from the new I/O file           
.                  (no changes are needed to this routine)               
.
.                  For Oracle fixits, you will probably also need to copy
.                  the RS.., RK.... & UP.... I/O routines for the new FD.
.
RSWTQUE1  RESET     KEY20
          READ      WATQUEA1,KEY20;;
          RETURN
.
RKWTQUE1  MOVE      ZERO,OVRCD
          READKS    WATQUEA1;DWTQUMES,WMURNO,WMCODE,WMTIME,WMDESC:
                                  WMREASON,WMDATE1,WMDATE2,WMDATE3,WMDATE4:
                                  WMREMOVE,WMUNIT,WMDOCTOR,WMSTAY,WMPTY:
                                  WMNOTICE,WMPTYPE,WMPCAT,WMUDEF1,WMUDEF2:
                                  WMUDEF3,WMUDEF4,WMBOOK,WMKEYDT,WTWMREAD:
                                  WTWMDEDA,WTWMCLSS,WTWMDTAD,WTWMACAT,WTWMGADD:
                                  WTWMDABD,WTWMEATY,WTWMADMC,WTWMECRA,WTWMGPFA:
                                  WTWMRFGP,WTWMGPPC,WTWMNAFR,WTWMNATO,WTWMGPPT:
                                  WTWMDOFR,WTWMIHSP,WTWMVLSF,WTWMPRO2,WTWMPRO3:
                                  WTWMTRPA,WMUDEF5,WMUDEF6,WMUDEF7,WMUDEF8:
                                  WTWMRANK,WTWMSRCR,WTWMDRSA,WTWMDOSA,WTWMPHSP:
                                  WTWMBSCD,WTTXPLST,WTTXPOWD,WTTXADMW,WTTXPSTY:
                                  WTTXIDYC,WTTXADMF,WTTXEQR1,WTTXEQR2,WTTXPAST:
                                  WTTXCNSN,WTTXNTGP,WTTXPATM,WTTXLEQR,WTTXDPRC:
                                  WTTXDPCN,WTTXCTYP,WTTXEQR3,WTTXPTIM,WTTXPOTM:
                                  WTTXPANS,WTTXPANT,WTTX23HR,WTTXANAE,WTTXBOTY:
                                  WTTXTEAM,WTTXFUND,WTTXWARD,WTTXPREF,WTTXNWHC:
                                  WTTXINTD,WTTXMAUT,WTTXEXPD,WTTXTCRS,WTTXDISC:
                                  WTTXRTIM,WTTXRCLI,WTTXRCLP,SAVTXWRD,WTWMPDSC:
                                  WTWMRSFL,WTWMECNT,WTWMCSST,WTWMCSDT,WTWMASSR:
                                  WTWMACPR,WTTXPSAH,WTTXPHOS,WTTXPRPB,WTTXAASC:
                                  WTTXUD09,WTTXUD10,WTTXUD11,WTTXUD12,WTTXUD13:
                                  DWMSTAT,WTQUSPAR
.
          GOTO      OVERCOND IF OVER
.
          RETURN
.
UPWTQUE1  MOVE      ZERO,OVRCD 
.
          UPDATE    WATQUEA1;DWTQUMES,WMURNO,WMCODE,WMTIME,WMDESC:
                                  WMREASON,WMDATE1,WMDATE2,WMDATE3,WMDATE4:
                                  WMREMOVE,WMUNIT,WMDOCTOR,WMSTAY,WMPTY:
                                  WMNOTICE,WMPTYPE,WMPCAT,WMUDEF1,WMUDEF2:
                                  WMUDEF3,WMUDEF4,WMBOOK,WMKEYDT,WTWMREAD:
                                  WTWMDEDA,WTWMCLSS,WTWMDTAD,WTWMACAT,WTWMGADD:
                                  WTWMDABD,WTWMEATY,WTWMADMC,WTWMECRA,WTWMGPFA:
                                  WTWMRFGP,WTWMGPPC,WTWMNAFR,WTWMNATO,WTWMGPPT:
                                  WTWMDOFR,WTWMIHSP,WTWMVLSF,WTWMPRO2,WTWMPRO3:
                                  WTWMTRPA,WMUDEF5,WMUDEF6,WMUDEF7,WMUDEF8:
                                  WTWMRANK,WTWMSRCR,WTWMDRSA,WTWMDOSA,WTWMPHSP:
                                  WTWMBSCD,WTTXPLST,WTTXPOWD,WTTXADMW,WTTXPSTY:
                                  WTTXIDYC,WTTXADMF,WTTXEQR1,WTTXEQR2,WTTXPAST:
                                  WTTXCNSN,WTTXNTGP,WTTXPATM,WTTXLEQR,WTTXDPRC:
                                  WTTXDPCN,WTTXCTYP,WTTXEQR3,WTTXPTIM,WTTXPOTM:
                                  WTTXPANS,WTTXPANT,WTTX23HR,WTTXANAE,WTTXBOTY:
                                  WTTXTEAM,WTTXFUND,WTTXWARD,WTTXPREF,WTTXNWHC:
                                  WTTXINTD,WTTXMAUT,WTTXEXPD,WTTXTCRS,WTTXDISC:
                                  WTTXRTIM,WTTXRCLI,WTTXRCLP,SAVTXWRD,WTWMPDSC:
                                  WTWMRSFL,WTWMECNT,WTWMCSST,WTWMCSDT,WTWMASSR:
                                  WTWMACPR,WTTXPSAH,WTTXPHOS,WTTXPRPB,WTTXAASC:
                                  WTTXUD09,WTTXUD10,WTTXUD11,WTTXUD12,WTTXUD13:
                                  DWMSTAT,WTQUSPAR
.
          RETURN
.
WRWTQUE1  RESET     KEY20
          MOVE      ZERO,OVRCD
.
          WRITE     WATQUEA1,KEY20;DWTQUMES,WMURNO,WMCODE,WMTIME,WMDESC:
                                  WMREASON,WMDATE1,WMDATE2,WMDATE3,WMDATE4:
                                  WMREMOVE,WMUNIT,WMDOCTOR,WMSTAY,WMPTY:
                                  WMNOTICE,WMPTYPE,WMPCAT,WMUDEF1,WMUDEF2:
                                  WMUDEF3,WMUDEF4,WMBOOK,WMKEYDT,WTWMREAD:
                                  WTWMDEDA,WTWMCLSS,WTWMDTAD,WTWMACAT,WTWMGADD:
                                  WTWMDABD,WTWMEATY,WTWMADMC,WTWMECRA,WTWMGPFA:
                                  WTWMRFGP,WTWMGPPC,WTWMNAFR,WTWMNATO,WTWMGPPT:
                                  WTWMDOFR,WTWMIHSP,WTWMVLSF,WTWMPRO2,WTWMPRO3:
                                  WTWMTRPA,WMUDEF5,WMUDEF6,WMUDEF7,WMUDEF8:
                                  WTWMRANK,WTWMSRCR,WTWMDRSA,WTWMDOSA,WTWMPHSP:
                                  WTWMBSCD,WTTXPLST,WTTXPOWD,WTTXADMW,WTTXPSTY:
                                  WTTXIDYC,WTTXADMF,WTTXEQR1,WTTXEQR2,WTTXPAST:
                                  WTTXCNSN,WTTXNTGP,WTTXPATM,WTTXLEQR,WTTXDPRC:
                                  WTTXDPCN,WTTXCTYP,WTTXEQR3,WTTXPTIM,WTTXPOTM:
                                  WTTXPANS,WTTXPANT,WTTX23HR,WTTXANAE,WTTXBOTY:
                                  WTTXTEAM,WTTXFUND,WTTXWARD,WTTXPREF,WTTXNWHC:
                                  WTTXINTD,WTTXMAUT,WTTXEXPD,WTTXTCRS,WTTXDISC:
                                  WTTXRTIM,WTTXRCLI,WTTXRCLP,SAVTXWRD,WTWMPDSC:
                                  WTWMRSFL,WTWMECNT,WTWMCSST,WTWMCSDT,WTWMASSR:
                                  WTWMACPR,WTTXPSAH,WTTXPHOS,WTTXPRPB,WTTXAASC:
                                  WTTXUD09,WTTXUD10,WTTXUD11,WTTXUD12,WTTXUD13:
                                  DWMSTAT,WTQUSPAR
          RETURN
.
          INC       STD001IO
