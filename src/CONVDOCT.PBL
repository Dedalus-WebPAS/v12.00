.*****************************************************************************
.* System    :   Patient Management System                                   *
.* Program   :   CONVDOCT                                                    *
.* Desc      :   Data Migration Program to upload doctor data from           *
.*               a third party legacy system into the patient webPAS module. *
.*****************************************************************************
.* Date      :   25/02/2011                                                  *
.* Author    :   Steve Armstrong                                             *
.* Function  :   This program will loop through the convdoct.txt file and    *
.*               for each valid record found, it will write a new patdo1af   *
.*               record for the doctor.                                      *
.* Mods      :                                                               *
.*        V10.12.01  23/02/2018  Steve Armstrong   TSK 0853258               *
.*                   Fixed calls for PATDKIUP and PMSHKIUP to be triggered   *
.*                   after each add/update instead of at the end of the      *
.*                   upload.                                                 *
.*****************************************************************************
.*        V10.11.01  09/08/2017  Tracey Nguyen     TSK 0299206               *
.*                   Recompiled for PATDKIPR/PMSHKIPR                        *
.*        V10.10.01  13/04/2017  Richa Phogat      CAR 0829364               *
.*                   Update name details not to change in uppercase in       *
.*                   UPLD0000                                                *
.*        V10.08.01  15/04/2016  Steve Armstrong   CAR 0807982               *
.*                   Mods to load PMHCPRV5 using DOCTPRO5                    *
.*****************************************************************************
.*        V10.06.01  09/04/2015  Steve Armstrong   CAR 315254                *
.*                   Mods to allow updating of existing doctor/hcp records   *
.*****************************************************************************
.*        V10.04.04  21/03/2014  Steve Armstrong   CAR 296128                *
.*                   Mods to remove validation of title                      *
.*        V10.04.03  20/03/2014  Steve Armstrong   CAR 296128                *
.*                   Mods to handle time of hh:mm (was previously only       *
.*                   handling hh:mm:ss).                                     *
.*        V10.04.02  11/03/2014  Steve Armstrong   CAR 296128                *
.*                   Added display of warning message if error records found *
.*        V10.04.01  11/03/2014  Steve Armstrong   CAR 296128                *
.*                   Mods to add temp mapping tables for coded fields        *
.*****************************************************************************
.*        V10.03.01  14/03/2012  Steve Armstrong   CAR 261233                *
.*                   Added doctor gender as new upload field.                *
.*                   14/03/2012  Ebon Clements     CAR 262656                *
.*                   Set HCP type to 12 or 13 when writing HCP record        *
.*****************************************************************************
.*        V10.02.04  19/10/2011  Steve Armstrong   CAR 249960                *
.*                   Removed processing of W/L consultant records.           *
.*        V10.02.03  19/09/2011  Steve Armstrong   CAR 250662                *
.*                   Mods to remove restrictions on doctor's start date      *
.*        V10.02.02  12/08/2011  Steve Armstrong   CAR 248433                *
.*                   Mods to make doctor's primary specialty non-mandatory.  *
.*        V10.02.01  06/06/2011  Steve Armstrong   CAR 244064                *
.*                   Mods to load new linked doctor, start and end date      *
.*                   fields following changes to pmshcpaf.                   *
.*        V10.02.00  25/02/2011  Steve Armstrong   CAR 242885                *
.*                   Created program                                         *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       PATCODFD/INC
          INC       PATDO1FD/INC
          INC       PATDRGFD/INC
          INC       PATDSTFD/INC
          INC       PATIN1FD/INC
          INC       PMSHCPFD/INC
.
.         Doctor upload file layout - convdoct.txt
.
DOCTRUPL  FILE      HL7, FIXED=4000         * Pipe delimited upload file
.                                             4096 is maximum
.
.         Fields must be pipe delimited and in the following sequence.
.         Field lengths are irrelevant other than the fact that where
.         a field is longer than allowed, the extra data will be ignored.
.
DOCTCODE  DIM       6       1       Code                                 (dcode)
DOCTTITL  DIM       9       7       Title (pmstleaf)                     (dtitl)
DOCTGNM1  DIM       40      16      First Given Name                    (dgname)
DOCTGNM2  DIM       40      56      Second Given Name                   (dgname)
DOCTSNAM  DIM       40      96      Surname                             (dsname)
DOCTTYP1  DIM       3       136     Type (Primary) (Cat DT)             (drtype)
DOCTTYP2  DIM       3       139     Type 2 (Cat DT)                    (drtype2)
DOCTTYP3  DIM       3       142     Type 3 (Cat DT)                    (drtype3)
DOCTTYP4  DIM       3       145     Type 4 (Cat DT)                    (drtype4)
DOCTTYP5  DIM       3       148     Type 5 (Cat DT)                    (drtype5)
DOCTRNAM  DIM       25      151     Receptionist Name                   (drname)
DOCTADD1  DIM       35      176     Surgery Address Line 1              (dsadd1)
DOCTADD2  DIM       35      211     Surgery Address Line 2              (dsadd2)
DOCTADD3  DIM       35      246     Surgery Address Line 3              (dsadd3)
DOCTADD4  DIM       35      281     Surgery Address Line 4              (dsadd4)
DOCTPOST  DIM       8       316     Surgery Postcode                    (dspost)
DOCTSEML  DIM       80      324     Surgery Email Address             (ptdoseml)
DOCTSTEL  DIM       20      404     Surgery Telephone Number            (dteles)
DOCTTELP  DIM       20      424     Surgery Pager Number                (dtelep)
DOCTPAGR  DIM       20      444     Pager Number                        (dpager)
DOCTASS1  DIM       25      464     Associated Doctor 1                (dassoc1)
DOCTASS2  DIM       25      489     Associated Doctor 2                (dassoc2)
DOCTASS3  DIM       25      514     Associated Doctor 3                (dassoc3)
DOCTASS4  DIM       25      539     Associated Doctor 4                (dassoc4)
DOCTASS5  DIM       25      564     Associated Doctor 5                (dassoc5)
DOCTPRO1  DIM       10      589     Provider Number 1                    (dprov)
DOCTPRO2  DIM       10      599     Provider Number 2                 (ptdopro2)
DOCTPRO3  DIM       10      609     Provider Number 3                 (ptdopro3)
DOCTPRO4  DIM       10      619     Provider Number 4                 (ptdopro4)
DOCTPRO5  DIM       10      629     Provider Number 5                 (ptdopro5)
DOCTHTEL  DIM       20      639     Home Telephone Number               (dteleh)
DOCTHAD1  DIM       35      659     Home Address Line 1                 (dhadd1)
DOCTHAD2  DIM       35      694     Home Address Line 2                 (dhadd2)
DOCTHAD3  DIM       35      729     Home Address Line 3                 (dhadd3)
DOCTHAD4  DIM       35      764     Home Address Line 4                 (dhadd4)
DOCTHPOS  DIM       8       799     Home Postcode                       (dhpost)
DOCTHEML  DIM       80      807     Home Email Address                (ptdoheml)
DOCTFADT  DIM       8       887     Date of First Accred. (ccyymmdd)   (dafirst)
DOCTLADT  DIM       8       895     Date of Last Accred. (ccyymmdd)     (dalast)
DOCTACYR  DIM       2       903     Years of Accreditation             (dayears)
DOCTACTY  DIM       3       905     Accreditation Type (Cat AT)        (daccred)
DOCTDBTH  DIM       8       908     Date of Birth (ccyymmdd)            (dbirth)
DOCTHCSC  DIM       3       916     H.C.S. Code                        (dhcscod)
DOCTLEVL  DIM       3       919     Operation Supervision Level        (dalevel)
.                                         (Cat DL)
DOCTSTAT  DIM       1       922     Doctor Status                       (drstat)
.                                         0  - Active In Hospital
.                                         1  - Not Active
.                                         2  - Active Outside
DOCTFAXN  DIM       12      923     Fax Number                        (ptdofaxn)
DOCTHFAX  DIM       12      935     Home Fax Number                   (ptdohfax)
DOCTMOBL  DIM       12      947     Mobile Number                     (ptdomobl)
DOCTGLCC  DIM       5       959     General Ledger Creditor Code      (ptdoglcc)
DOCTWHDP  DIM       6       964     WA HDP Doctor code                (ptdowhdp)
DOCTMREG  DIM       10      970     Medical Registration Board no.    (ptdomreg)
DOCTNHSN  DIM       10      980     N.H.S. Proscriber Number          (ptdonhsn)
DOCTLUPD  DIM       8       990     Last Update Date (ccyymmdd)       (dlupddte)
DOCTLUPT  DIM       8       998     Last Update Time (hh:mm:ss)       (dlupdtme)
DOCTUDF1  DIM       3       1006    User Defined Field 1 (Cat R5)     (ptdoudf1)
DOCTUDF2  DIM       3       1009    User Defined Field 2 (Cat R6)     (ptdoudf2)
DOCTUDF3  DIM       3       1012    User Defined Field 3 (Cat R7)     (ptdoudf3)
DOCTUDF4  DIM       3       1015    User Defined Field 4 (Cat R8)     (ptdoudf4)
DOCTUDF5  DIM       3       1018    User Defined Field 5 (Cat R9)     (ptdoudf5)
DOCTINSC  DIM       6       1021    Insurance Code (patin1af)         (ptdoinsc)
DOCTINSN  DIM       20      1027    Insurance Policy Number           (ptdoinsn)
DOCTINSF  DIM       8       1047    Insurance Date from (ccyymmdd)    (ptdoinsf)
DOCTINST  DIM       8       1055    Insurance Date to (ccyymmdd)      (ptdoinst)
DOCTREGN  DIM       20      1063    MPG Certificate Number            (ptdoregn)
DOCTREGF  DIM       8       1083    Reg. Date from (ccyymmdd)         (ptdoregf)
DOCTREGT  DIM       8       1091    Reg. Date to (ccyymmdd)           (ptdoregt)
DOCTVISA  DIM       8       1099    Visa Date (ccyymmdd)              (ptdovisa)
DOCTCOMT  DIM       3       1107    Doctors Preferred Communication   (ptdocomt)
.                                         (Cat. CZ)
DOCTPREF  DIM       30      1110    Preferred Name                    (ptdopref)
DOCTABNN  DIM       11      1140    ABN Number                        (ptdoabnn)
DOCTDINA  DIM       8       1151    Date Made inactive (ccyymmdd)     (ptdodina)
DOCTDACT  DIM       8       1159    Date Made active (ccyymmdd)       (ptdodact)
DOCTDACO  DIM       8       1167    Date Made active outside          (ptdodaco)
DOCTSDAT  DIM       8       1175    Start Date (ccyymmdd)             (ptdosdat)
DOCTEDAT  DIM       8       1183    End Date (ccyymmdd)               (ptdoedat)
DOCTAUPD  DIM       1       1191    Auto Update 0=No 1=Yes            (ptdoaupd)
.                                       0=No
.                                       1=Yes
DOCTHOSS  DIM       1       1192    Hospital Specific Doctor          (ptdohoss)
.                                       0=No
.                                       1=Yes  (mlthcpaf)
DOCTEXML  DIM       1       1193    Exclude from Mailing List         (ptdoexml)
.                                       0=No
.                                       1=Yes
DOCTDEAC  DIM       8       1194    Accred. Expiry Date (ccyymmdd)    (ptdodeac)
DOCTAHC1  DIM       3       1202    AH Pref Cont Method 1 (Cat CZ)    (ptdoahc1)
DOCTAHC2  DIM       3       1205    AH Pref Cont Method 2 (Cat CZ)    (ptdoahc2)
DOCTAHC3  DIM       3       1208    AH Pref Cont Method 3 (Cat CZ)    (ptdoahc3)
DOCTGNDR  DIM       1       1211    Doctor Gender                     (daspare)
.                                       M = Male
.                                       F = Female
.                                       U = Unknown
.                                       I = Indeterminate
.
. End of Record             1212
.
.
.         Temporary Mapping Files
.
.
.         Doctor Code File - doctor.dat (patdo1af)
.
DCODEFLG  FORM      1                            * Doctor Code mapping flag
TEMP1     IFILE     SQL, FIXED=13, KEY="U1-6"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDCODE  DIM       6        6          1       Old doctor type code
NEWDCODE  DIM       6        6          7       New doctor type code
.End of Record                         13
.
.         Doctor Type File - docttype.dat (Cat DT)
.
DTYPEFLG  FORM      1                            * Doctor Type mapping flag
TEMP2     IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDTYPE  DIM       3        3          1       Old doctor type code
NEWDTYPE  DIM       3        3          4       New doctor type code
.End of Record                          7
.
.         Doctor Accreditation Type File - docacred.dat (Cat AT)
.
DACCRFLG  FORM      1                            * Dr Accred. Type mapping flag
TEMP3     IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDACCR  DIM       3        3          1       Old doctor accred. type code
NEWDACCR  DIM       3        3          4       New doctor accred. type code
.End of Record                          7
.
.         Doctor Classification File - docclass.dat (Cat DL)
.
DCLASFLG  FORM      1                            * Doctor Class. mapping flag
TEMP4     IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDCLAS  DIM       3        3          1       Old doctor class.  code
NEWDCLAS  DIM       3        3          4       New doctor class.  code
.End of Record                          7
.
.         Doctor User Defined Field 1 File - doctudf1.dat (Cat R5)
.
DUDF1FLG  FORM      1                            * Doctor UDF 1 mapping flag
TEMP5     IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDUDF1  DIM       3        3          1       Old doctor UDF 1 code
NEWDUDF1  DIM       3        3          4       New doctor UDF 1 code
.End of Record                          7
.
.         Doctor User Defined Field 2 File - doctudf2.dat (Cat R6)
.
DUDF2FLG  FORM      1                            * Doctor UDF 2 mapping flag
TEMP6     IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDUDF2  DIM       3        3          1       Old doctor UDF 2 code
NEWDUDF2  DIM       3        3          4       New doctor UDF 2 code
.End of Record                          7
.
.         Doctor User Defined Field 3 File - doctudf3.dat (Cat R7)
.
DUDF3FLG  FORM      1                            * Doctor UDF 3 mapping flag
TEMP7     IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDUDF3  DIM       3        3          1       Old doctor UDF 3 code
NEWDUDF3  DIM       3        3          4       New doctor UDF 3 code
.End of Record                          7
.
.         Doctor Contact Time File - doctcont.dat (Cat R8)
.
DCONTFLG  FORM      1                            * Doctor contact mapping flag
TEMP8     IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDCONT  DIM       3        3          1       Old doctor contact code
NEWDCONT  DIM       3        3          4       New doctor contact code
.End of Record                          7
.
.         Doctor Notify Via File - docnotif.dat (Cat R9)
.
DNOTFFLG  FORM      1                            * Dr. Notify Via mapping flag
TEMP9     IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDNOTF  DIM       3        3          1       Old doctor notify code
NEWDNOTF  DIM       3        3          4       New doctor notify code
.End of Record                          7
.
.         Preferred Contact File - doctpref.dat (Cat CZ)
.
DPREFFLG  FORM      1                            * Pref. Contact mapping flag
TEMP10    IFILE     SQL, FIXED=7, KEY="U1-3"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDDPREF  DIM       3        3          1       Old doctor pref. contact code
NEWDPREF  DIM       3        3          4       New doctor pref. contact code
.End of Record                          7
.
.         Insurance File - docinsur.dat (patin1af)
.
DINSRFLG  FORM      1                       * Dr. Insurance Code file flag
TEMP11    IFILE     SQL, FIXED=13, KEY="U1-6"
.
.Name     Type      Length   Physical   Start   Description
.----     ----      ------   --------   -----   -----------
OLDINSUR  DIM       6        6          1       Old Insurance Code
NEWINSUR  DIM       6        6          7       New Insurance Code
.End of Record                         13
.
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
ADDCOUNT  FORM      8             * added record count
.
CODCOUNT  FORM      8             * code error record count
CPTDATE   DIM       8
CURRCENT  FORM      2             * current century
CURRDATE  DIM       8             * current date
.
DATEFLG1  FORM      1             * Date Type flag
.                                     0 = full date (ccyymmdd)
.                                     1 = partial date (ccyymm)
DATEFLG2  FORM      1             * Dates Allowed flag
.                                     0 = any date allowed
.                                     1 = future dates not allowed
.                                     2 = future dates only allowed
.
DIM1A     DIM       1
DIM1B     DIM       1
DIM2C     DIM       2
DIM2D     DIM       2
DIM2H     DIM       2
DIM2M     DIM       2
DIM2S     DIM       2
DIM2Y     DIM       2
DIM3      DIM       3
DIM4      DIM       4
DIM44     DIM       44
DOCFOUND  FORM      1             * doctor found flag
.                                    0 = doctor found
.                                    1 = doctor not found
DTECOUNT  FORM      8             * date error record count
DUPCOUNT  FORM      8             * duplicate record count
.
ERORDESC  DIM       70
ERORFLAG  FORM      1             * Field Validation Error Flag
.                                     0 = No Errors on Field Validations
.                                     1 = Errors on Field Validations
.
FINYEAR   DIM       4
FORM10    FORM      10
.
MANCOUNT  FORM      8             * mandatory field error record count
.
NUMCOUNT  FORM      8             * numeric error record count
.
RECCOUNT  FORM      8             * record read counter
.
TEMPCATG  DIM       6             * Category (or HF for HF Table validation)
TEMPCODE  DIM       10            * Coded field (length = max code field length)
TEMPDATE  DIM       8
TEMPTIME  DIM       8
TEMPTYPE  FORM      1             * Type of coded field
TIMCOUNT  FORM      8             * Time error record count
TMPFIELD  DIM       8             * Field name
TMPSTRNG  DIM       40            * Temporary string (max field length)
.
UPDCOUNT  FORM      8             * updated record count
UPDTFLAG  FORM      1             * Update Flag
.                                   0 = Updates not allowed
.                                   1 = Updates allowed
.
VCHKFLAG  FORM      1             * Validation flag
.                                     0 = writing data to database
.                                     1 = only validating import data file
.
.
.
. PROGRAM CONSTANTS
. -----------------
PIPE      INIT      "|"
.
.
.
PRGID     INIT      "CONVDOCT"
PRGNAM    INIT      "Upload Doctor Details"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000       * proceed with upload
.
MAIN1000  CALL      OPEN0000               * open upload file
          BRANCH    EXIT,MAIN0100          * file not found
.
          CALL      DMAP0000               * display mapping files
          BRANCH    EXIT,MAIN0100:         * no (to continue)
                         MAIN9999          * cancel (to continue)
.
          CALL      ASKQ0000               * validation run only ?
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN2000:        * yes
                          MAIN0100:        * no
                          MAIN9999         * cancel
.
MAIN2000  CALL      UPLD0000               * process upload
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P64:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
.
          DISPLAY   *P64:24,"patdrgaf";
          OPEN      PATDRGA1,"patdrgaf"
.
          DISPLAY   *P64:24,"patdstat";
          OPEN      PATDSTA1,"patdstat"
.
          DISPLAY   *P64:24,"patin1af";
          OPEN      PATIN1A1,"patin1af"
.
          DISPLAY   *P64:24,"pmshcpaf";
          OPEN      PMSHCPA1,"pmshcpaf"
.
          DISPLAY   *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          MOVE      ONE,CNOUNDLN
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run data upload                         *
.*                        TRUE  (1)  Exit selected                           *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Data Upload"
.
OPTN0500  KEYIN     *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000             * run data upload
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               OPEN0000              Called by: MAIN0000   *
.*                  Open upload file (convdoct.txt) and mapping tables       *
.*****************************************************************************
.
OPEN0000  MOVE      ZERO,OVRCD
.
          TRAP      OVERCOND IF IO
          OPEN      DOCTRUPL,"convdoct"
          TRAPCLR   IO
          BRANCH    OVRCD,OPEN9100
.
.         Doctor Code mapping file (patdo1af)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP1,"doctor"               * doctor code file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DCODEFLG              * no
          ELSE
            MOVE      ONE,DCODEFLG               * yes
          ENDIF
.
.         Doctor Type mapping file (Cat DT)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP2,"docttype"             * doctor type file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DTYPEFLG              * no
          ELSE
            MOVE      ONE,DTYPEFLG               * yes
          ENDIF
.
.         Doctor Accreditation Type mapping file (Cat AT)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP3,"docacred"             * dr accred. type file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DACCRFLG              * no
          ELSE
            MOVE      ONE,DACCRFLG               * yes
          ENDIF
.
.         Doctor Classification mapping file (Cat DL)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP4,"docclass"             * dr class'n file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DCLASFLG              * no
          ELSE
            MOVE      ONE,DCLASFLG               * yes
          ENDIF
.
.         Doctor UDF 1 mapping file (Cat R5)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP5,"doctudf1"             * doctor UDF 1 file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DUDF1FLG              * no
          ELSE
            MOVE      ONE,DUDF1FLG               * yes
          ENDIF
.
.         Doctor UDF 2 mapping file (Cat R6)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP6,"doctudf2"             * doctor UDF 2 file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DUDF2FLG              * no
          ELSE
            MOVE      ONE,DUDF2FLG               * yes
          ENDIF
.
.         Doctor UDF 3 mapping file (Cat R7)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP7,"doctudf3"             * doctor UDF 3 file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DUDF3FLG              * no
          ELSE
            MOVE      ONE,DUDF3FLG               * yes
          ENDIF
.
.         Doctor Contact Time mapping file (Cat R8)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP8,"doctcont"             * doctor contact file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DCONTFLG              * no
          ELSE
            MOVE      ONE,DCONTFLG               * yes
          ENDIF
.
.         Doctor Notify Via mapping file (Cat R9)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP9,"docnotif"             * doctor notify file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DNOTFFLG              * no
          ELSE
            MOVE      ONE,DNOTFFLG               * yes
          ENDIF
.
.         Doctor Preferred Contact mapping file (Cat CZ)
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP10,"doctpref"            * dr pref. contact file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DPREFFLG              * no
          ELSE
            MOVE      ONE,DPREFFLG               * yes
          ENDIF
.
.         Doctor Insurance mapping file
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TEMP11,"docinsur"            * dr insurance file found ?
          TRAPCLR   IO
          IF        OVRCD=1
            MOVE      ZERO,DINSRFLG              * no
          ELSE
            MOVE      ONE,DINSRFLG               * yes
          ENDIF
.
          MOVE      ZERO,EXIT
          GOTO      OPEN9999
.
OPEN9100  DISPLAY   *P1:24,*EL,*B,"Upload file - convdoct.txt - not found.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
OPEN9999  RETURN
+
.******************************************************************************
.*                                  DMAP0000              Called by: MAIN0000 *
.*                       Display File Name & Mapping files                    *
.* Requires: Mapping Flags                                                    *
.* Returns:  EXIT  0 = Ok to continue                                         *
.*                 1 = No selected                                            *
.*                 2 = Cancel selected                                        *
.******************************************************************************
.
DMAP0000  DISPLAY   *P1:4,*EF,*V2LON,SP9,*ULON,"Mapping Tables"
.
          MOVE      DNO,DIM3
          LOAD      DIM3,DCODEFLG,DYES
.
          DISPLAY   *P1:6,*EL,"Mapping Doctor Code (patdo1af)        ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,DTYPEFLG,DYES
.
          DISPLAY   *P1:7,*EL,"Mapping Doctor Type (Cat DT)          ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,DACCRFLG,DYES
.
          DISPLAY   *P1:8,*EL,"Mapping Doctor Accred. Type (Cat AT)  ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,DCLASFLG,DYES
.
          DISPLAY   *P1:9,*EL,"Mapping Doctor Class'n (Cat DL)       ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,DUDF1FLG,DYES
.
          DISPLAY   *P1:10,*EL,"Mapping Doctor UDF 1 (Cat R5)         ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,DUDF2FLG,DYES
.
          DISPLAY   *P1:11,*EL,"Mapping Doctor UDF 2 (Cat R6)         ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,DUDF3FLG,DYES
.
          DISPLAY   *P1:12,*EL,"Mapping Doctor UDF 3 (Cat R7)         ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,DCONTFLG,DYES
.
          DISPLAY   *P1:13,*EL,"Mapping Doctor Contact Time (Cat R8)  ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,DNOTFFLG,DYES
.
          DISPLAY   *P1:14,*EL,"Mapping Doctor Notify Via (Cat R9)    ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,DPREFFLG,DYES
.
          DISPLAY   *P1:15,*EL,"Mapping Doctor Pref. Contact (Cat CZ) ":
                    *V2LON,DIM3
.
          MOVE      DNO,DIM3
          LOAD      DIM3,DINSRFLG,DYES
.
          DISPLAY   *P1:16,*EL,"Mapping Doctor Insurance (patin1af)   ":
                    *V2LON,DIM3
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,DMAP9000:        * yes
                          DMAP9100:        * no
                          DMAP9200         * cancel
.
DMAP9000  MOVE      ZERO,EXIT
          GOTO      DMAP9999
.
DMAP9100  MOVE      ONE,EXIT
          GOTO      DMAP9999
.
DMAP9200  MOVE      TWO,EXIT
.
DMAP9999  RETURN
+
.*****************************************************************************
.*                               ASKQ0000              Called by: MAIN0000   *
.*                  Ask if running validation only                           *
.* Returns: VCHKFLAG  - validation flag                                      *
.*                       0 = normal mode                                     *
.*                       1 = validation only mode                            *
.*****************************************************************************
.
ASKQ0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run Data Upload":
                    *P1:7,*EL,"Select Option : ":
                    *P17:7,*V2LON,COPTION
.
ASKQ1000  MOVE      ANSY,ANS
          KEYIN     *P1:9,*EL,"Validation only (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") ?":
                    *P25:9,*V2LON,*RV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS                     * Y input ?
          IF        @EQUAL
            DISPLAY   *P25:9,*V2LON,DYES,*HOFF:
                      *P35:9,"(No data will be uploaded)"
            MOVE      ONE,VCHKFLAG               * yes
            GOTO      ASKQ5000
          ENDIF
.
          MATCH     ANSN,ANS                     * N input ?
          IF        @EQUAL
            DISPLAY   *P25:9,*V2LON,DNO,*HOFF:
                      *P35:9,"(Data will be uploaded)"
            MOVE      ZERO,VCHKFLAG              * yes
            GOTO      ASKQ5000
          ENDIF
.
          GOTO      ASKQ1000                     * invalid input
.
ASKQ5000  MOVE      ANSN,ANS
          KEYIN     *P1:10,*EL,"Allow updates   (",*V2LON,*DV,ANSY,*HOFF:
                    *DV,SLASH,*V2LON,*DV,ANSN,*HOFF,") ?":
                    *P25:10,*V2LON,*RV,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS                     * Y input ?
          IF        @EQUAL
            DISPLAY   *P25:10,*V2LON,DYES,*HOFF
            MOVE      ONE,UPDTFLAG               * yes
            GOTO      ASKQ9999
          ENDIF
.
          MATCH     ANSN,ANS                     * N input ?
          IF        @EQUAL
           DISPLAY   *P25:10,*V2LON,DNO,*HOFF
            MOVE      ZERO,UPDTFLAG              * no
            GOTO      ASKQ9999
          ENDIF
.
          GOTO      ASKQ5000
.
ASKQ9999  RETURN
+
.******************************************************************************
.*                                  UPLD0000              Called by: MAIN0000 *
.*                  Process the PMI upload file records                       *
.******************************************************************************
.
UPLD0000  CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
          MOVE      CCC,CURRCENT
.
.         Get the current financial year
.
          MOVE      CURRDATE,CPTDATE
          CALL      GPERD
          IF        EXIT = 1
            DISPLAY   *P1:24,*EL,*B,"Current Date Not Found In Period File.  ";
            CALL      HITENTER
            GOTO      UPLD9999
          ENDIF
.
          MOVE      DRGYR,FINYEAR
.
          DISPLAY   *P1:13,"Processing ",*V2LON,"convdoct.txt",*HOFF:
                    *P1:15,"Started    : ",*V2LON,CTIMEIS,*HOFF:
                    *P1:17,"Doctor     : ":
                    *P1:18,"Surname    : ":
                    *P1:19,"Records    : "
.
          MOVE      ZERO,RECCOUNT                * initialise records read
          MOVE      ZERO,ADDCOUNT                * initialise added record count
          MOVE      ZERO,CODCOUNT                * init. code error record count
          MOVE      ZERO,DUPCOUNT                * initialise dup. record count
          MOVE      ZERO,DTECOUNT                * init. date error record count
          MOVE      ZERO,TIMCOUNT                * init. time error record count
          MOVE      ZERO,MANCOUNT                * init. mand error record count
          MOVE      ZERO,NUMCOUNT                * init. num error record count
          MOVE      ZERO,UPDCOUNT                * init. updated record count
.
          CALL      HEAD0000                     * Print the report header
.
.         Loop through upload file records
.
UPLD1000  READ      DOCTRUPL,SEQ;DOCTCODE,DOCTTITL,DOCTGNM1,DOCTGNM2,DOCTSNAM:
                                 DOCTTYP1,DOCTTYP2,DOCTTYP3,DOCTTYP4,DOCTTYP5:
                                 DOCTRNAM,DOCTADD1,DOCTADD2,DOCTADD3,DOCTADD4:
                                 DOCTPOST,DOCTSEML,DOCTSTEL,DOCTTELP,DOCTPAGR:
                                 DOCTASS1,DOCTASS2,DOCTASS3,DOCTASS4,DOCTASS5:
                                 DOCTPRO1,DOCTPRO2,DOCTPRO3,DOCTPRO4,DOCTPRO5:
                                 DOCTHTEL,DOCTHAD1,DOCTHAD2,DOCTHAD3,DOCTHAD4:
                                 DOCTHPOS,DOCTHEML,DOCTFADT,DOCTLADT,DOCTACYR:
                                 DOCTACTY,DOCTDBTH,DOCTHCSC,DOCTLEVL,DOCTSTAT:
                                 DOCTFAXN,DOCTHFAX,DOCTMOBL,DOCTGLCC,DOCTWHDP:
                                 DOCTMREG,DOCTNHSN,DOCTLUPD,DOCTLUPT,DOCTUDF1:
                                 DOCTUDF2,DOCTUDF3,DOCTUDF4,DOCTUDF5,DOCTINSC:
                                 DOCTINSN,DOCTINSF,DOCTINST,DOCTREGN,DOCTREGF:
                                 DOCTREGT,DOCTVISA,DOCTCOMT,DOCTPREF,DOCTABNN:
                                 DOCTDINA,DOCTDACT,DOCTDACO,DOCTSDAT,DOCTEDAT:
                                 DOCTAUPD,DOCTHOSS,DOCTEXML,DOCTDEAC,DOCTAHC1:
                                 DOCTAHC2,DOCTAHC3,DOCTGNDR
          GOTO      UPLD9000 IF OVER
.
          ADD       ONE,RECCOUNT                 * increment records read
          IF        (RECCOUNT%1000) = 0 | RECCOUNT = 1
            DISPLAY   *P14:17,*V2LON,DOCTCODE:
                      *P14:18,DOCTSNAM:
                      *P14:19,RECCOUNT;
          ENDIF
.
          REP       UPPLOW,DOCTADD1              * uppercase addresses
          REP       UPPLOW,DOCTADD2
          REP       UPPLOW,DOCTADD3
          REP       UPPLOW,DOCTADD4
          REP       UPPLOW,DOCTHAD1
          REP       UPPLOW,DOCTHAD2
          REP       UPPLOW,DOCTHAD3
          REP       UPPLOW,DOCTHAD4
          REP       UPPLOW,DOCTGNDR
.
          CALL      POUT0000                     * pad out fields with spaces
.
          CALL      CLPATDOC                     * clear doctor variables
          CALL      CLPMSHCP                     * clear hcp variables
.
          CALL      MAND0000                     * check for Mandatory fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      DVAL0000                     * date validation
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      TVAL0000                     * time validation
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      VNUM0000                     * validate numeric fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          CALL      SETV0000                     * set up file variables
.
          CALL      CVAL0000                     * validate coded fields
          IF        EXIT = 1 & VCHKFLAG = 0
            GOTO      UPLD1000                   * errors on validation
          ENDIF
.
          BRANCH    DOCFOUND,UPLD5000            * doctor not on file
.
.         Doctor already exists, so check if update allowed
.
          IF        UPDTFLAG = 0
            MOVE      "Doctor record already exists ",ERORDESC
            CALL      PERR0000                   * print error line
            ADD       ONE,DUPCOUNT               * increment dupl. record count
          ELSE
            BRANCH    VCHKFLAG,UPLD1000          * error checking only
            CALL      UPDOCT1                    * update existing record
            ADD       ONE,UPDCOUNT               * increment upd. record count
            CALL      WHCP0000                   * write/update HCP record
            PROC      PATDKIUP                   * update doctor's keyword
            PROC      PMSHKIUP                   * update hcp's keyword
          ENDIF
          GOTO      UPLD1000
.
.         Add new doctor record
.
UPLD5000  BRANCH    VCHKFLAG,UPLD1000            * error checking only
          CALL      WRDOCT1                      * write new record
          ADD       ONE,ADDCOUNT                 * increment added record count
          CALL      DSCR0000                     * create blank patdstat record
          CALL      WHCP0000                     * write HCP record
          PROC      PATDKIUP                     * update doctor's keyword
          PROC      PMSHKIUP                     * update hcp's keyword
.
          GOTO      UPLD1000                     * get next record
.
UPLD9000  BRANCH    VCHKFLAG,UPLD9100            * validation only
.
.         Upload completed
.
UPLD9100  ASSIGN    (CODCOUNT+DUPCOUNT+DTECOUNT+TIMCOUNT+MANCOUNT+NUMCOUNT),FORM10
          IF        FORM10 > 0
            CALL      LINE0000                   * print bottom line if errors
          ENDIF
.
          COMPARE   CLNO,FIFTY4                  * room for stats ?
          CALL      HEAD0000 IF LESS             * no - new page req'd.
.
          CLOCK     TIME,CTIMEIS
          DISPLAY   *P14:19,*V2LON,RECCOUNT,*HOFF:
                    *P1:21,"Finished   : ",*V2LON,CTIMEIS
.
.         Warn the user if there were any records with errors
.
          IF        FORM10 > 0
            DISPLAY   *P1:22,*V2LON,*BLINKON,"Warning:  Records found with ":
                      "errors.  Refer to error report."
          ENDIF
.
          DISPLAY   *P1:24,*EL,*B,"Upload complete.  ";
          CALL      HITENTER
.
          PRINT     *N:
                    *1,"Total records read                    - ",RECCOUNT,*N:
                    *1,"Records added                         - ",ADDCOUNT
          IF        UPDTFLAG = 0
            PRINT     *1,"Duplicate Records detected            - ",DUPCOUNT
          ELSE
            PRINT     *1,"Records updated                       - ",UPDCOUNT
          ENDIF
          PRINT     *1,"Records with invalid codes detected   - ",CODCOUNT,*N:
                    *1,"Records with invalid dates detected   - ",DTECOUNT,*N:
                    *1,"Records with invalid times detected   - ",TIMCOUNT,*N:
                    *1,"Records with blank mandatory fields   - ",MANCOUNT,*N:
                    *1,"Records with invalid numbers detected - ",NUMCOUNT:
                    *N,*N,*1,"*** End of Report ***"
.
UPLD9999  RETURN
+
.****************************************************************************
.*                             MAND0000                Called by: UPLD0000  *
.*                 Check for standard Mandatory fields                      *
.* Returns: EXIT   0 = all mandatory fields are populated                   *
.*                 1 = one or more mandatory fields are blank               *
.*          MANCOUNT - updated count of records with mandatory fields       *
.*                     missing                                              *
.****************************************************************************
.
MAND0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          MOVE      DOCTCODE,TMPSTRNG
          MOVE      "DOCTCODE",TMPFIELD          * doctor code
          CALL      CHKM0000
.
          MOVE      DOCTTITL,TMPSTRNG
          MOVE      "DOCTTITL",TMPFIELD          * title
          CALL      CHKM0000
.
          MOVE      DOCTGNM1,TMPSTRNG
          MOVE      "DOCTGNM1",TMPFIELD          * first given name
          CALL      CHKM0000
.
          MOVE      DOCTSNAM,TMPSTRNG
          MOVE      "DOCTSNAM",TMPFIELD          * surname
          CALL      CHKM0000
.
          MOVE      DOCTSDAT,TMPSTRNG
          MOVE      "DOCTSDAT",TMPFIELD          * start date
          CALL      CHKM0000
.
          BRANCH    ERORFLAG,MAND9100            * errors on mand. fields
.
          MOVE      ZERO,EXIT                    * no errors on mand. fields
          GOTO      MAND9999
.
MAND9100  ADD       ONE,MANCOUNT                 * incr. mand error record count
          MOVE      ONE,EXIT
.
MAND9999  RETURN
+
.*****************************************************************************
.*                            CHKM0000             Called by: MAND0000       *
.*                    Check if a mandatory field is blank                    *
.* Requires: TMPSTRNG - field to be checked                                  *
.*           TMPFIELD - 8 character field name                               *
.* Returns:  ERORFLAG = 1   field is blank (error)                           *
.*****************************************************************************
.
CHKM0000  MATCH     TMPSTRNG,SP70                * blank field ?
          GOTO      CHKM9999 IF NOT EQUAL        * no - finished
.
          MOVE      "Mandatory Field blank ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set error flag
.
CHKM9999  RETURN
+
.******************************************************************************
.*                                  HEAD0000              Called by: UPLD0000 *
.*                           Print The Report Header                 PERR0000 *
.******************************************************************************
.
HEAD0000  MOVE      "- Error Report",CPHDROPT
          CALL      HEAD132                 * Print the report header
.
          PRINT     *1,"< convdoct.txt >"
.
          CALL      LINE0000                     * draw line across page
.
          PRINT     *1,PIPE,*3,"Code ",*12,PIPE,*14,"Name":
                    *59,PIPE,*61,"Error Description",*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          MOVE      SEVEN,CLNO                   * initialise line count
.
HEAD9999  RETURN
+
.****************************************************************************
.*                            LINE0000                 Called by: HEAD0000  *
.*                      Draw line across page                               *
.****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
.******************************************************************************
.*                                  SETV0000              Called by: UPLD0000 *
.*                       Load the record variables                            *
.******************************************************************************
.
SETV0000  MOVE      DOCTCODE,DCODE
          IF        DCODEFLG = 1
            MOVE      DOCTCODE,KEY6
            CALL      RDTEMP1               * doctor code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDCODE,DCODE      * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      DCODE,KEY6
          CALL      RDADOCT1
          IF        OVRCD = 1
            MOVE      ONE,DOCFOUND
          ELSE
            CALL      RDDOCT1
            MOVE      ZERO,DOCFOUND
          ENDIF
.
          MOVE      DOCTTITL,DTITL
          MOVE      DOCTGNM1,DGNAME
          STRIP     DGNAME
          ENDSET    DGNAME
          APPEND    SP1,DGNAME
          APPEND    DOCTGNM2,DGNAME
          APPEND    SP70,DGNAME
          RESET     DGNAME
          MOVE      DOCTSNAM,DSNAME
.
          MOVE      DOCTTYP1,DRTYPE
          IF        DTYPEFLG = 1
            MOVE      DOCTTYP1,KEY3
            CALL      RDTEMP2               * dr type code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDTYPE,DRTYPE     * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      DOCTTYP2,DRTYPE2
          IF        DTYPEFLG = 1
            MOVE      DOCTTYP2,KEY3
            CALL      RDTEMP2               * dr type code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDTYPE,DRTYPE2    * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      DOCTTYP3,DRTYPE3
          IF        DTYPEFLG = 1
            MOVE      DOCTTYP3,KEY3
            CALL      RDTEMP2               * dr type code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDTYPE,DRTYPE3    * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      DOCTTYP4,DRTYPE4
          IF        DTYPEFLG = 1
            MOVE      DOCTTYP4,KEY3
            CALL      RDTEMP2               * dr type code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDTYPE,DRTYPE4    * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      DOCTTYP5,DRTYPE5
          IF        DTYPEFLG = 1
            MOVE      DOCTTYP5,KEY3
            CALL      RDTEMP2               * dr type code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDTYPE,DRTYPE5    * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      DOCTRNAM,DRNAME
          MOVE      DOCTADD1,DSADD1
          MOVE      DOCTADD2,DSADD2
          MOVE      DOCTADD3,DSADD3
          MOVE      DOCTADD4,DSADD4
          MOVE      DOCTPOST,DSPOST
          MOVE      DOCTSEML,PTDOSEML
          MOVE      DOCTSTEL,DTELES
          MOVE      DOCTTELP,DTELEP
          MOVE      DOCTPAGR,DPAGER
          MOVE      DOCTASS1,DASSOC1
          MOVE      DOCTASS2,DASSOC2
          MOVE      DOCTASS3,DASSOC3
          MOVE      DOCTASS4,DASSOC4
          MOVE      DOCTASS5,DASSOC5
          MOVE      DOCTPRO1,DPROV
          MOVE      DOCTPRO2,PTDOPRO2
          MOVE      DOCTPRO3,PTDOPRO3
          MOVE      DOCTPRO4,PTDOPRO4
          MOVE      DOCTPRO5,PTDOPRO5
          MOVE      DOCTHTEL,DTELEH
          MOVE      DOCTHAD1,DHADD1
          MOVE      DOCTHAD2,DHADD2
          MOVE      DOCTHAD3,DHADD3
          MOVE      DOCTHAD4,DHADD4
          MOVE      DOCTHPOS,DHPOST
          MOVE      DOCTHEML,PTDOHEML
          MOVE      DOCTFADT,DAFIRST
          MOVE      DOCTLADT,DALAST
          RJUSTIFY  DOCTACYR
          MOVE      DOCTACYR,DAYEARS
.
          MOVE      DOCTACTY,DACCRED
          IF        DACCRFLG = 1
            MOVE      DOCTACTY,KEY3
            CALL      RDTEMP3               * dr accred. type code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDACCR,DACCRED     * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      DOCTDBTH,DBIRTH
          RJUSTIFY  DOCTHCSC
          MOVE      DOCTHCSC,DHCSCOD
.
          MOVE      DOCTLEVL,DALEVEL
          IF        DCLASFLG = 1
            MOVE      DOCTLEVL,KEY3
            CALL      RDTEMP4               * dr class'n code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDCLAS,DALEVEL    * yes - load mapped code
            ENDIF
          ENDIF
.
          RJUSTIFY  DOCTSTAT
          MOVE      DOCTSTAT,DRSTAT
          MOVE      DOCTFAXN,PTDOFAXN
          MOVE      DOCTHFAX,PTDOHFAX
          MOVE      DOCTMOBL,PTDOMOBL
          MOVE      DOCTGLCC,PTDOGLCC
          MOVE      DOCTWHDP,PTDOWHDP
          MOVE      DOCTMREG,PTDOMREG
          MOVE      DOCTNHSN,PTDONHSN
          MOVE      DOCTLUPD,DLUPDDTE
          MOVE      DOCTLUPT,DLUPDTME
.
          MOVE      DOCTUDF1,PTDOUDF1
          IF        DUDF1FLG = 1
            MOVE      DOCTUDF1,KEY3
            CALL      RDTEMP5               * UDF 1 code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDUDF1,PTDOUDF1   * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      DOCTUDF2,PTDOUDF2
          IF        DUDF2FLG = 1
            MOVE      DOCTUDF2,KEY3
            CALL      RDTEMP6               * UDF 2 code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDUDF2,PTDOUDF2   * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      DOCTUDF3,PTDOUDF3
          IF        DUDF3FLG = 1
            MOVE      DOCTUDF3,KEY3
            CALL      RDTEMP7               * UDF 3 code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDUDF3,PTDOUDF3   * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      DOCTUDF4,PTDOUDF4
          IF        DCONTFLG = 1
            MOVE      DOCTUDF4,KEY3
            CALL      RDTEMP8               * UDF 4 code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDCONT,PTDOUDF4   * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      DOCTUDF5,PTDOUDF5
          IF        DNOTFFLG = 1
            MOVE      DOCTUDF5,KEY3
            CALL      RDTEMP9               * UDF 5 code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDNOTF,PTDOUDF5   * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      DOCTINSC,PTDOINSC
          IF        DINSRFLG = 1
            MOVE      DOCTINSC,KEY6
            CALL      RDTEMP11              * insurance code on map file ?
            IF        OVRCD = 0
              MOVE      NEWINSUR,PTDOINSC   * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      DOCTINSN,PTDOINSN
          MOVE      DOCTINSF,PTDOINSF
          MOVE      DOCTINST,PTDOINST
          MOVE      DOCTREGN,PTDOREGN
          MOVE      DOCTREGF,PTDOREGF
          MOVE      DOCTREGT,PTDOREGT
          MOVE      DOCTVISA,PTDOVISA
.
          MOVE      DOCTCOMT,PTDOCOMT
          IF        DPREFFLG = 1
            MOVE      DOCTCOMT,KEY3
            CALL      RDTEMP10              * dr pref. comm. code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDPREF,PTDOCOMT   * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      DOCTPREF,PTDOPREF
          MOVE      DOCTABNN,PTDOABNN
          MOVE      DOCTDINA,PTDODINA
          MOVE      DOCTDACT,PTDODACT
          MOVE      DOCTDACO,PTDODACO
          MOVE      DOCTSDAT,PTDOSDAT
          MOVE      DOCTEDAT,PTDOEDAT
          MOVE      DOCTAUPD,PTDOAUPD
          MOVE      DOCTHOSS,PTDOHOSS
          MOVE      DOCTEXML,PTDOEXML
          MOVE      DOCTDEAC,PTDODEAC
.
          MOVE      DOCTAHC1,PTDOAHC1
          IF        DPREFFLG = 1
            MOVE      DOCTAHC1,KEY3
            CALL      RDTEMP10              * dr pref. comm. code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDPREF,PTDOAHC1   * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      DOCTAHC2,PTDOAHC2
          IF        DPREFFLG = 1
            MOVE      DOCTAHC2,KEY3
            CALL      RDTEMP10              * dr pref. comm. code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDPREF,PTDOAHC2   * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      DOCTAHC3,PTDOAHC3
          IF        DPREFFLG = 1
            MOVE      DOCTAHC3,KEY3
            CALL      RDTEMP10              * dr pref. comm. code on map file ?
            IF        OVRCD = 0
              MOVE      NEWDPREF,PTDOAHC3   * yes - load mapped code
            ENDIF
          ENDIF
.
          MOVE      SP2,DFSPARE
          MOVE      SP70,DASPARE
.
SETV9999  RETURN
+
.*****************************************************************************
.*                            POUT0000             Called by: UPLD0000       *
.*            Pad out all the record fields with spaces given that we        *
.*            are dealing with pipe delimited records                        *
.*****************************************************************************
.
POUT0000  PACK      DOCTCODE,DOCTCODE,SP70 
          PACK      DOCTTITL,DOCTTITL,SP70
          PACK      DOCTGNM1,DOCTGNM1,SP70
          PACK      DOCTGNM2,DOCTGNM2,SP70
          PACK      DOCTSNAM,DOCTSNAM,SP70
          PACK      DOCTTYP1,DOCTTYP1,SP70 
          PACK      DOCTTYP2,DOCTTYP2,SP70 
          PACK      DOCTTYP3,DOCTTYP3,SP70 
          PACK      DOCTTYP4,DOCTTYP4,SP70 
          PACK      DOCTTYP5,DOCTTYP5,SP70 
          PACK      DOCTRNAM,DOCTRNAM,SP70
          PACK      DOCTADD1,DOCTADD1,SP70
          PACK      DOCTADD2,DOCTADD2,SP70
          PACK      DOCTADD3,DOCTADD3,SP70
          PACK      DOCTADD4,DOCTADD4,SP70
          PACK      DOCTPOST,DOCTPOST,SP70 
          PACK      DOCTSEML,DOCTSEML,SP70
          PACK      DOCTSTEL,DOCTSTEL,SP70
          PACK      DOCTTELP,DOCTTELP,SP70
          PACK      DOCTPAGR,DOCTPAGR,SP70
          PACK      DOCTASS1,DOCTASS1,SP70
          PACK      DOCTASS2,DOCTASS2,SP70
          PACK      DOCTASS3,DOCTASS3,SP70
          PACK      DOCTASS4,DOCTASS4,SP70
          PACK      DOCTASS5,DOCTASS5,SP70
          PACK      DOCTPRO1,DOCTPRO1,SP70
          PACK      DOCTPRO2,DOCTPRO2,SP70
          PACK      DOCTPRO3,DOCTPRO3,SP70
          PACK      DOCTPRO4,DOCTPRO4,SP70
          PACK      DOCTPRO5,DOCTPRO5,SP70
          PACK      DOCTHTEL,DOCTHTEL,SP70
          PACK      DOCTHAD1,DOCTHAD1,SP70
          PACK      DOCTHAD2,DOCTHAD2,SP70
          PACK      DOCTHAD3,DOCTHAD3,SP70
          PACK      DOCTHAD4,DOCTHAD4,SP70
          PACK      DOCTHPOS,DOCTHPOS,SP70 
          PACK      DOCTHEML,DOCTHEML,SP70
          PACK      DOCTFADT,DOCTFADT,SP70 
          PACK      DOCTLADT,DOCTLADT,SP70 
          PACK      DOCTACYR,DOCTACYR,SP70 
          PACK      DOCTACTY,DOCTACTY,SP70 
          PACK      DOCTDBTH,DOCTDBTH,SP70 
          PACK      DOCTHCSC,DOCTHCSC,SP70 
          PACK      DOCTLEVL,DOCTLEVL,SP70 
          PACK      DOCTSTAT,DOCTSTAT,SP70 
          PACK      DOCTFAXN,DOCTFAXN,SP70
          PACK      DOCTHFAX,DOCTHFAX,SP70
          PACK      DOCTMOBL,DOCTMOBL,SP70
          PACK      DOCTGLCC,DOCTGLCC,SP70 
          PACK      DOCTWHDP,DOCTWHDP,SP70 
          PACK      DOCTMREG,DOCTMREG,SP70
          PACK      DOCTNHSN,DOCTNHSN,SP70
          PACK      DOCTLUPD,DOCTLUPD,SP70 
          PACK      DOCTLUPT,DOCTLUPT,SP70 
          PACK      DOCTUDF1,DOCTUDF1,SP70 
          PACK      DOCTUDF2,DOCTUDF2,SP70 
          PACK      DOCTUDF3,DOCTUDF3,SP70 
          PACK      DOCTUDF4,DOCTUDF4,SP70 
          PACK      DOCTUDF5,DOCTUDF5,SP70 
          PACK      DOCTINSC,DOCTINSC,SP70 
          PACK      DOCTINSN,DOCTINSN,SP70
          PACK      DOCTINSF,DOCTINSF,SP70 
          PACK      DOCTINST,DOCTINST,SP70 
          PACK      DOCTREGN,DOCTREGN,SP70
          PACK      DOCTREGF,DOCTREGF,SP70 
          PACK      DOCTREGT,DOCTREGT,SP70 
          PACK      DOCTVISA,DOCTVISA,SP70 
          PACK      DOCTCOMT,DOCTCOMT,SP70 
          PACK      DOCTPREF,DOCTPREF,SP70
          PACK      DOCTABNN,DOCTABNN,SP70
          PACK      DOCTDINA,DOCTDINA,SP70 
          PACK      DOCTDACT,DOCTDACT,SP70 
          PACK      DOCTDACO,DOCTDACO,SP70 
          PACK      DOCTSDAT,DOCTSDAT,SP70 
          PACK      DOCTEDAT,DOCTEDAT,SP70 
          PACK      DOCTAUPD,DOCTAUPD,SP70 
          PACK      DOCTHOSS,DOCTHOSS,SP70 
          PACK      DOCTEXML,DOCTEXML,SP70 
          PACK      DOCTDEAC,DOCTDEAC,SP70 
          PACK      DOCTAHC1,DOCTAHC1,SP70 
          PACK      DOCTAHC2,DOCTAHC2,SP70 
          PACK      DOCTAHC3,DOCTAHC3,SP70 
          PACK      DOCTGNDR,DOCTGNDR,SP70
          REP       " U",DOCTGNDR                * default blank to Unknown
.
POUT9999  RETURN
+
.*****************************************************************************
.*                              DVAL0000           Called by: UPLD0000       *
.*                  Validate all date fields                                 *
.* Returns:  EXIT - 0 = No date validation errors                            *
.*                  1 = Date validation errors                               *
.*          DTECOUNT - updated count of records with date field errors       *
.*****************************************************************************
.
DVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          MOVE      DOCTFADT,TEMPDATE            * date of first accreditation
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "DOCTFADT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      DOCTLADT,TEMPDATE            * date of last accreditation
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "DOCTLADT",TMPFIELD
          CALL      VDAT0000
.
          MATCH     SP8,DOCTLADT                 * last date blank ?
          GOTO      DVAL1000 IF EQUAL            * yes
.
          MATCH     DOCTFADT,DOCTLADT
          IF        @LESS
            MOVE      "Accreditation last date less than first date ",ERORDESC
            CALL      PERR0000
            MOVE      ONE,ERORFLAG
          ENDIF
.
DVAL1000  MOVE      DOCTDBTH,TEMPDATE            * date of birth
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "DOCTDBTH",TMPFIELD
          CALL      VDAT0000
.
          MOVE      DOCTLUPD,TEMPDATE            * last update date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "DOCTLUPD",TMPFIELD
          CALL      VDAT0000
.
          MOVE      DOCTINSF,TEMPDATE            * insurance from date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "DOCTINSF",TMPFIELD
          CALL      VDAT0000
.
          MOVE      DOCTINST,TEMPDATE            * insurance to date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "DOCTINST",TMPFIELD
          CALL      VDAT0000
.
          MATCH     SP8,DOCTINST                 * to date blank ?
          GOTO      DVAL2000 IF EQUAL            * yes
.
          MATCH     DOCTINSF,DOCTINST
          IF        @LESS
            MOVE      "Insurance to date less than from date ",ERORDESC
            CALL      PERR0000
            MOVE      ONE,ERORFLAG
          ENDIF
.
DVAL2000  MOVE      DOCTREGF,TEMPDATE            * registration from date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "DOCTREGF",TMPFIELD
          CALL      VDAT0000
.
          MOVE      DOCTREGT,TEMPDATE            * registration to date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "DOCTREGT",TMPFIELD
          CALL      VDAT0000
.
          MATCH     SP8,DOCTREGT                 * to date blank ?
          GOTO      DVAL3000 IF EQUAL            * yes
.
          MATCH     DOCTREGF,DOCTREGT
          IF        @LESS
            MOVE      "Registration to date less than from date ",ERORDESC
            CALL      PERR0000
            MOVE      ONE,ERORFLAG
          ENDIF
.
DVAL3000  MOVE      DOCTVISA,TEMPDATE            * visa date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "DOCTVISA",TMPFIELD
          CALL      VDAT0000
.
          MOVE      DOCTDINA,TEMPDATE            * date made inactive
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "DOCTDINA",TMPFIELD
          CALL      VDAT0000
.
          MOVE      DOCTDACT,TEMPDATE            * date made active
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "DOCTDACT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      DOCTDACO,TEMPDATE            * date made active outside
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ONE,DATEFLG2                 * future date not allowed
          MOVE      "DOCTDACO",TMPFIELD
          CALL      VDAT0000
.
          MOVE      DOCTSDAT,TEMPDATE            * start date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "DOCTSDAT",TMPFIELD
          CALL      VDAT0000
.
          MOVE      DOCTEDAT,TEMPDATE            * end date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "DOCTEDAT",TMPFIELD
          CALL      VDAT0000
.
          MATCH     SP8,DOCTEDAT                 * end date blank ?
          GOTO      DVAL4000 IF EQUAL            * yes
.
          MATCH     DOCTSDAT,DOCTEDAT
          IF        @LESS
            MOVE      "End date less than Start date ",ERORDESC
            CALL      PERR0000
            MOVE      ONE,ERORFLAG
          ENDIF
.
DVAL4000  MOVE      DOCTDEAC,TEMPDATE            * accreditation expiry date
          MOVE      ZERO,DATEFLG1                * ccyymmdd
          MOVE      ZERO,DATEFLG2                * any date allowed
          MOVE      "DOCTDEAC",TMPFIELD
          CALL      VDAT0000
.
          BRANCH    ERORFLAG,DVAL9100            * errors on date validation
.
          MOVE      ZERO,EXIT                    * no errors on date validation
          GOTO      DVAL9999
.
DVAL9100  ADD       ONE,DTECOUNT                 * incr. date error record count
          MOVE      ONE,EXIT
.
DVAL9999  RETURN
+
.*****************************************************************************
.*                              VDAT0000           Called by: DVAL0000       *
.*                  Validate a date field                                    *
.* Requires:  TEMPDATE - Date in format ccyymmdd                             *
.*            DATEFLG1 - Date Type flag                                      *
.*                          0 = full date (ccyymmdd)                         *
.*                          1 = partial date (ccyymm)                        *
.*            DATEFLG2 - Dates Allowed flag                                  *
.*                          0 = any date allowed                             *
.*                          1 = no future dates allowed                      *
.*                          1 = only future dates allowed                    *
.*            TMPFIELD - Date field name                                     *
.* Returns:   ERORFLAG = 1 if an error in date validation occurs.            *
.*****************************************************************************
.
VDAT0000  MATCH     SP8,TEMPDATE                 * blank date ?
          GOTO      VDAT9999 IF EQUAL            * yes
.
.         Validate that the date has been fully populated
.
          SQUEEZE   TEMPDATE
          MOVELPTR  TEMPDATE,FORM1
          IF        DATEFLG1 = 0 & FORM1 <> 8 | DATEFLG1 = 1 & FORM1 <> 6
            MOVE      "Insufficient digits ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
.         Validate that the date is numeric
.
VDAT0100  TYPE      TEMPDATE
          IF        !@EQUAL
            MOVE      "Not numeric ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
          UNPACK    TEMPDATE,DIM2C,DIM2Y,DIM2M,DIM2D
.
.         Validate the century is >= 18 and <= current century
.
          MOVE      DIM2C,FORM2
          IF        FORM2 < 18 | FORM2 > CURRCENT
            MOVE      "Century not valid ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
.         Validate the month
.
          MOVE      DIM2M,FORM2
          IF        FORM2 < 1 | FORM2 > 12
            MOVE      "Month not valid ",ERORDESC
            CALL      DERR0000
            GOTO      VDAT9999
          ENDIF
.
          COMPARE   ONE,DATEFLG1                 * short date (ccyymm) ?
          GOTO      VDAT9999 IF EQUAL            * yes - finished
.
.         Validate the day is:
.              < 32 for January, March, May, July, August, October & December
.              < 31 for April, June, September & November
.              < 29 for February, except in a leap year where it is < 30
.
          BRANCH    FORM2,VDAT1000:              * Jan
                          VDAT3000:              * Feb
                          VDAT1000:              * Mar
                          VDAT2000:              * Apr
                          VDAT1000:              * May
                          VDAT2000:              * Jun
                          VDAT1000:              * Jul
                          VDAT1000:              * Aug
                          VDAT2000:              * Sep
                          VDAT1000:              * Oct
                          VDAT2000:              * Nov
                          VDAT1000               * Dec
.
.         Validate days for month of 31 days
.
VDAT1000  MOVE      DIM2D,FORM2
          IF        FORM2 < 1 | FORM2 > 31
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Validate days for month of 30 days
.
VDAT2000  MOVE      DIM2D,FORM2
          IF        FORM2 < 1 | FORM2 > 30
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Validate days for February
.         A leap year is one where:
.           1. Every year divisible by 4 is a leap year.
.           2. But every year divisible by 100 is NOT a leap year
.           3. Unless the year is also divisible by 400, then it is still a
.              leap year.
.
VDAT3000  MOVE      DIM2D,FORM2
          PACK      DIM4,DIM2C,DIM2Y
          MOVE      DIM4,FORM4
          IF        (FORM4%4) = 0
            IF        (FORM4%100) = 0
              IF        (FORM4%400) = 0
                GOTO      VDAT3200
              ENDIF
            ELSE
              GOTO      VDAT3200
            ENDIF
          ENDIF
.
.         Check for normal Feb days
.
VDAT3100  IF        FORM2 < 1 | FORM2 > 28
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
.         Check for leap year Feb days
.
VDAT3200  IF        FORM2 < 1 | FORM2 > 29
            GOTO      VDAT3900
          ENDIF
          GOTO      VDAT4000
.
VDAT3900  MOVE      "Day not valid ",ERORDESC
          CALL      DERR0000
          GOTO      VDAT9999
.
VDAT4000  COMPARE   ZERO,DATEFLG2                * any date allowed ?
          GOTO      VDAT9999 IF EQUAL            * yes
.
          BRANCH    DATEFLG2,VDAT5000:           * date cannot be in the future
                             VDAT6000            * date must be in the future
.
.         Make sure the date is not in the future
.
VDAT5000  MATCH     TEMPDATE,CURRDATE
          IF        @LESS
            MOVE      "Cannot be in the future ",ERORDESC
            CALL      DERR0000
          ENDIF
          GOTO      VDAT9999
.
.         Make sure the date is in the future
.
VDAT6000  MATCH     TEMPDATE,CURRDATE
          IF        !@LESS
            MOVE      "Must be in the future ",ERORDESC
            CALL      DERR0000
          ENDIF
.
VDAT9999  RETURN
+
.*****************************************************************************
.*                            DERR0000             Called by: VDAT0000       *
.*                    Process date error                                     *
.* Requires: TMPFIELD - field name                                           *
.*           ERORDESC - error description                                    *
.*****************************************************************************
.
DERR0000  ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set date error flag
.
DERR9999  RETURN
+
.*****************************************************************************
.*                              TVAL0000           Called by: UPLD0000       *
.*                  Validate all time fields                                 *
.* Returns:  EXIT - 0 = No time validation errors                            *
.*                  1 = Time validation errors                               *
.*          TIMCOUNT - updated count of records with time field errors       *
.*****************************************************************************
.
TVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          MOVE      DOCTLUPD,TEMPDATE
          MOVE      DOCTLUPT,TEMPTIME            * last update time
          MOVE      "DOCTLUPT",TMPFIELD
          CALL      VTIM0000
          MOVE      TEMPTIME,DOCTLUPT           * update time in case it changed
.
          BRANCH    ERORFLAG,TVAL9100            * errors on time validation
.
          MOVE      ZERO,EXIT                    * no errors on time validation
          GOTO      TVAL9999
.
TVAL9100  ADD       ONE,TIMCOUNT                 * incr. time error record count
          MOVE      ONE,EXIT
.
TVAL9999  RETURN
+
.*****************************************************************************
.*                            VTIM0000             Called by: TVAL0000       *
.*                    Validate time fields                                   *
.* Requires:  TEMPTIME - Time in format hh:mm:ss                             *
.*            TEMPDATE - Date in format ccyymmdd                             *
.*            TMPFIELD - Time field name                                     *
.* Returns:   ERORFLAG = 1 if an error in time validation occurs.            *
.*****************************************************************************
.
VTIM0000  MATCH     SP8,TEMPTIME                 * blank time ?
          GOTO      VTIM9999 IF EQUAL            * yes
.
          MATCH     SP8,TEMPDATE                 * blank date ?
          IF        @EQUAL
            MOVE      "Time without corresponding date ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
.         If the format is only hh:mm, then add ":00" to the end of the time
.
          STRIP     TEMPTIME
          MOVELPTR  TEMPTIME,FORM1
          IF        FORM1 = 5
            ENDSET    TEMPTIME
            APPEND    ":00",TEMPTIME
            RESET     TEMPTIME
          ENDIF
.
          UNPACK    TEMPTIME,DIM2H,DIM1A,DIM2M,DIM1B,DIM2S    * (hh:mm:ss)
.
.         Make sure colon's separate the hours, minutes and seconds
.
          MATCH     DIM1A,DIM1B
          GOTO      VTIM1000 IF NOT EQUAL
.
          MATCH     COLON,DIM1A
          GOTO      VTIM1000 IF NOT EQUAL
.
          GOTO      VTIM2000
.
VTIM1000  MOVE      "Format not valid ",ERORDESC
          CALL      TERR0000
          GOTO      VTIM9999
.
.         Validate the hour
.
VTIM2000  MOVE      DIM2H,FORM2
          IF        FORM2 < 0 | FORM2 > 23
            MOVE      "Hour not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
.         Validate the minute
.
          MOVE      DIM2M,FORM2
          IF        FORM2 < 0 | FORM2 > 59
            MOVE      "Minutes not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
.         Validate the second
.
          MOVE      DIM2S,FORM2
          IF        FORM2 < 0 | FORM2 > 59
            MOVE      "Seconds not valid ",ERORDESC
            CALL      TERR0000
            GOTO      VTIM9999
          ENDIF
.
          MATCH     SP8,TEMPDATE                 * date blank ?
          GOTO      VTIM9999 IF EQUAL            * yes
.
.         Make sure that the transaction time is not in the future
.
          MATCH     TEMPDATE,CURRDATE
          IF        @EQUAL
            MATCH     TEMPTIME,CTIMEIS
            IF        @LESS
              MOVE      "Time in the future ",ERORDESC
              CALL      TERR0000
            ENDIF
          ENDIF
.
VTIM9999  RETURN
+
.*****************************************************************************
.*                            TERR0000             Called by: VTIM0000       *
.*                    Process time error                                     *
.* Requires: TMPFIELD - field name                                           *
.*           ERORDESC - error description                                    *
.*****************************************************************************
.
TERR0000  ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set time error flag
.
TERR9999  RETURN
+
.*****************************************************************************
.*                            VNUM0000             Called by: UPLD0000       *
.*                    Validate numeric fields                                *
.* Returns:  EXIT - 0 = No numeric validation errors                         *
.*                  1 = Numeric validation errors                            *
.*          NUMCOUNT - updated count of records with numeric field errors    *
.*****************************************************************************
.
VNUM0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
.         Years of Accreditation numeric field
.
          REP       " 0",DOCTACYR
.
          TYPE      DOCTACYR                     * years of accred. numeric ?
          GOTO      VNUM0050 IF NOT EQUAL        * no - error
          GOTO      VNUM0100
.
VNUM0050  MOVE      "DOCTACYR",TMPFIELD
          CALL      NERR0000
.
.         H.C.S. Code numeric field
.
VNUM0100  REP       " 0",DOCTHCSC
.
          TYPE      DOCTHCSC                     * HCS code numeric ?
          GOTO      VNUM0150 IF NOT EQUAL        * no - error
          GOTO      VNUM0200
.
VNUM0150  MOVE      "DOCTHCSC",TMPFIELD
          CALL      NERR0000
.
.         Doctor Status numeric field (valid values 0, 1 and 2)
.
VNUM0200  REP       " 0",DOCTSTAT
.
          TYPE      DOCTSTAT                     * status numeric ?
          GOTO      VNUM0250 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      DOCTSTAT,FORM1
          COMPARE   FORM1,TWO                    * 0, 1 or 2 ?
          GOTO      VNUM0250 IF LESS             * no - error
          GOTO      VNUM0300
.
VNUM0250  MOVE      "DOCTSTAT",TMPFIELD
          CALL      NERR0000
.
.         Auto Update numeric field (valid values 0 and 1)
.
VNUM0300  REP       " 0",DOCTAUPD
.
          TYPE      DOCTAUPD                     * Auto Update numeric ?
          GOTO      VNUM0350 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      DOCTAUPD,FORM1
          COMPARE   FORM1,ONE                    * 0 or 1 ?
          GOTO      VNUM0350 IF LESS             * no - error
          GOTO      VNUM0400                     * yes - valid value
.
VNUM0350  MOVE      "DOCTAUPD",TMPFIELD
          CALL      NERR0000
.
.         Hospital Specific Doctor numeric field (valid values 0 and 1)
.
VNUM0400  REP       " 0",DOCTHOSS
.
          TYPE      DOCTHOSS                     * Hospital Specific numeric ?
          GOTO      VNUM0450 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      DOCTHOSS,FORM1
          COMPARE   FORM1,ONE                    * 0 or 1 ?
          GOTO      VNUM0450 IF LESS             * no - error
          GOTO      VNUM0500                     * yes - valid value
.
VNUM0450  MOVE      "DOCTHOSS",TMPFIELD
          CALL      NERR0000
.
.         Exclude from Mailing List numeric field (valid values 0 and 1)
.
VNUM0500  REP       " 0",DOCTEXML
.
          TYPE      DOCTEXML                     * Exclude Mail List numeric ?
          GOTO      VNUM0550 IF NOT EQUAL        * no - error
.
          MOVE      ZERO,FORM1
          MOVE      DOCTEXML,FORM1
          COMPARE   FORM1,ONE                    * 0 or 1 ?
          GOTO      VNUM0550 IF LESS             * no - error
          GOTO      VNUM9000                     * yes - valid value
.
VNUM0550  MOVE      "EXMLSTAT",TMPFIELD
          CALL      NERR0000
.
VNUM9000  BRANCH    ERORFLAG,VNUM9100            * errors on number validation
.
          MOVE      ZERO,EXIT                    * no errors on no. validation
          GOTO      VNUM9999
.
VNUM9100  ADD       ONE,NUMCOUNT                 * incr. num. error record count
          MOVE      ONE,EXIT
.
VNUM9999  RETURN
+
.*****************************************************************************
.*                            NERR0000             Called by: VNUM0000       *
.*                    Process number error                                   *
.* Requires: TMPFIELD - field name                                           *
.*****************************************************************************
.
NERR0000  MOVE      "Invalid numeric field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error line
.
          MOVE      ONE,ERORFLAG                 * set number error flag
.
NERR9999  RETURN
+
.*****************************************************************************
.*                           CVAL0000              Called by: UPLD0000       *
.*                 Validate all the relevant coded fields.                   *
.*        This validation is performed on the database fields just prior     *
.*        to writing the data and after any mappings have been performed.    *
.* Returns:  EXIT - 0 = No code validation errors                            *
.*                  1 = Code validation errors                               *
.*          CODCOUNT - updated count of records with coded field errors      *
.*****************************************************************************
.
CVAL0000  MOVE      ZERO,ERORFLAG                * init. validation error flag
.
          PACK      TEMPCATG,ANSD,ANST
          PACK      TEMPCODE,DRTYPE,SP10
          MOVE      "DOCTTYP1",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (doctor type)
          CALL      VCOD0000
.
          MATCH     SP3,DRTYPE2                  * blank code ?
          GOTO      CVAL0100 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSD,ANST
          PACK      TEMPCODE,DRTYPE2,SP10
          MOVE      "DOCTTYP2",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (doctor type)
          CALL      VCOD0000
.
CVAL0100  MATCH     SP3,DRTYPE3                  * blank code ?
          GOTO      CVAL0200 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSD,ANST
          PACK      TEMPCODE,DRTYPE3,SP10
          MOVE      "DOCTTYP3",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (doctor type)
          CALL      VCOD0000
.
CVAL0200  MATCH     SP3,DRTYPE4                  * blank code ?
          GOTO      CVAL0300 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSD,ANST
          PACK      TEMPCODE,DRTYPE4,SP10
          MOVE      "DOCTTYP4",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (doctor type)
          CALL      VCOD0000
.
CVAL0300  MATCH     SP3,DRTYPE5                  * blank code ?
          GOTO      CVAL0400 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSD,ANST
          PACK      TEMPCODE,DRTYPE5,SP10
          MOVE      "DOCTTYP5",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (doctor type)
          CALL      VCOD0000
.
CVAL0400  MATCH     SP3,DACCRED                  * blank code ?
          GOTO      CVAL0500 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSA,ANST
          PACK      TEMPCODE,DACCRED,SP10
          MOVE      "DOCTACTY",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (accred. type)
          CALL      VCOD0000
.
CVAL0500  MATCH     SP3,DALEVEL                  * blank code ?
          GOTO      CVAL0600 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSD,ANSL
          PACK      TEMPCODE,DALEVEL,SP10
          MOVE      "DOCTLEVL",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (op. super. level)
          CALL      VCOD0000
.
CVAL0600  MATCH     SP3,PTDOUDF1                 * blank code ?
          GOTO      CVAL0700 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSR,FIVE
          PACK      TEMPCODE,PTDOUDF1,SP10
          MOVE      "DOCTUDF1",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (udf 1)
          CALL      VCOD0000
.
CVAL0700  MATCH     SP3,PTDOUDF2                 * blank code ?
          GOTO      CVAL0800 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSR,SIX
          PACK      TEMPCODE,PTDOUDF2,SP10
          MOVE      "DOCTUDF2",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (udf 2)
          CALL      VCOD0000
.
CVAL0800  MATCH     SP3,PTDOUDF3                 * blank code ?
          GOTO      CVAL0900 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSR,SEVEN
          PACK      TEMPCODE,PTDOUDF3,SP10
          MOVE      "DOCTUDF3",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (udf 3)
          CALL      VCOD0000
.
CVAL0900  MATCH     SP3,PTDOUDF4                 * blank code ?
          GOTO      CVAL1000 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSR,EIGHT
          PACK      TEMPCODE,PTDOUDF4,SP10
          MOVE      "DOCTUDF4",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (udf 4)
          CALL      VCOD0000
.
CVAL1000  MATCH     SP3,PTDOUDF5                 * blank code ?
          GOTO      CVAL1100 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSR,NINE
          PACK      TEMPCODE,PTDOUDF5,SP10
          MOVE      "DOCTUDF5",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (udf 5)
          CALL      VCOD0000
.
CVAL1100  MATCH     SP6,PTDOINSC                 * blank code ?
          GOTO      CVAL1200 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCODE,PTDOINSC,SP10
          MOVE      "DOCTINSC",TMPFIELD
          MOVE      TWO,TEMPTYPE                 * patcodes (insurance code)
          CALL      VCOD0000
.
CVAL1200  MATCH     SP3,PTDOCOMT                 * blank code ?
          GOTO      CVAL1300 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSC,ANSZ
          PACK      TEMPCODE,PTDOCOMT,SP10
          MOVE      "DOCTCOMT",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (pref. communicat'n)
          CALL      VCOD0000
.
CVAL1300  MATCH     SP3,PTDOAHC1                 * blank code ?
          GOTO      CVAL1400 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSC,ANSZ
          PACK      TEMPCODE,PTDOAHC1,SP10
          MOVE      "DOCTAHC1",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (AH pref. contact 1)
          CALL      VCOD0000
.
CVAL1400  MATCH     SP3,PTDOAHC2                 * blank code ?
          GOTO      CVAL1500 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSC,ANSZ
          PACK      TEMPCODE,PTDOAHC2,SP10
          MOVE      "DOCTAHC2",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (AH pref. contact 2)
          CALL      VCOD0000
.
CVAL1500  MATCH     SP3,PTDOAHC3                 * blank code ?
          GOTO      CVAL1600 IF EQUAL            * yes - no validation req'd
.
          PACK      TEMPCATG,ANSC,ANSZ
          PACK      TEMPCODE,PTDOAHC3,SP10
          MOVE      "DOCTAHC3",TMPFIELD
          MOVE      ONE,TEMPTYPE                 * patcodes (AH pref. contact 3)
          CALL      VCOD0000
.
CVAL1600  PACK      TEMPCODE,DOCTGNDR,SP10
          MOVE      "DOCTGNDR",TMPFIELD
          MOVE      THREE,TEMPTYPE               * gender
          CALL      VCOD0000
.
CVAL9000  BRANCH    ERORFLAG,CVAL9100            * errors on code validation
.
          MOVE      ZERO,EXIT                    * no errors on code validation
          GOTO      CVAL9999
.
CVAL9100  ADD       ONE,CODCOUNT                 * incr. code error record count
          MOVE      ONE,EXIT
.
CVAL9999  RETURN
+
.*****************************************************************************
.*                           VCOD0000              Called by: CVAL0000       *
.*                   Validate a coded field                                  *
.* Requires: TEMPCATG - temporary category variable                          *
.*           TEMPCODE - temporary code variable                              *
.*           TEMPTYPE - temporary code type                                  *
.*           TMPFIELD - temporary field name                                 *
.*****************************************************************************
.
VCOD0000  BRANCH    TEMPTYPE,VCOD1000:           * patcodes (category-codes)
                             VCOD2000:           * insurance codes (patin1af)
                             VCOD3000            * gender
.
.         Validate a category-coded field (patcodes)
.
VCOD1000  PACK      KEY5,TEMPCATG,TEMPCODE
          CALL      RDCODE1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate an insurance code field (patin1af)
.
VCOD2000  PACK      KEY6,TEMPCODE,SP6
          CALL      RDINSR1                      * valid code ?
          BRANCH    OVRCD,VCOD9100               * no - error
          GOTO      VCOD9999                     * yes
.
.         Validate doctor gender
.
VCOD3000  MATCH     ANSM,TEMPCODE                * male ?
          GOTO      VCOD9999 IF EQUAL            * yes
.
          MATCH     ANSF,TEMPCODE                * female ?
          GOTO      VCOD9999 IF EQUAL            * yes
.
          MATCH     ANSU,TEMPCODE                * unknown ?
          GOTO      VCOD9999 IF EQUAL            * yes
.
          MATCH     ANSI,TEMPCODE                * indeterminate ?
          GOTO      VCOD9999 IF EQUAL            * yes
.
VCOD9100  MOVE      "Invalid coded field ",ERORDESC
          ENDSET    ERORDESC
          APPEND    LBRACK,ERORDESC
          APPEND    TMPFIELD,ERORDESC
          APPEND    RBRACK,ERORDESC
          APPEND    SP70,ERORDESC
          RESET     ERORDESC
          CALL      PERR0000                     * print error
.
          MOVE      ONE,ERORFLAG                 * set code error flag
.
VCOD9999  RETURN
+
.*****************************************************************************
.*                              WHCP0000           Called by: UPLD0000       *
.*                 Create a HCP record for this doctor                       *
.* Requires: Valid load of patdo1af variables                                *
.*****************************************************************************
.
WHCP0000  PACK      KEY10,DCODE,SP10
          CALL      RDPMHCP1                     * HCP already on file ?
          BRANCH    OVRCD,WHCP5000               * no
.
          IF        UPDTFLAG = 0
            MOVE      "HCP already on file ",ERORDESC
            CALL      PERR0000
            ADD       ONE,DUPCOUNT               * incr. dup. error count
          ELSE
            CALL      LHCP0000
            CALL      UPPMHCP1                   * update record
          ENDIF
          GOTO      WHCP9999
.
.         Write a new pmshcpaf record for the doctor
.
WHCP5000  PACK      PMHCHCPC,DCODE,SP70          * Doctor Code
.
          CALL      LHCP0000                     * load pmshcpaf data fields
          CALL      WRPMHCP1                     * write HCP record
.
WHCP9999  RETURN
+
.******************************************************************************
.*                              LHCP0000           Called by: WHCP0000        *
.*                  Load the pmshcpaf variables                               *
.******************************************************************************
.
LHCP0000  PACK      PMHCTITL,DTITL,SP70          * Doctor Title
          MOVE      DOCTGNM1,PMHCGNAM            * Given name
          STRIP     PMHCGNAM
          ENDSET    PMHCGNAM
          APPEND    SP1,PMHCGNAM
          APPEND    DOCTGNM2,PMHCGNAM
          APPEND    SP70,PMHCGNAM
          RESET     PMHCGNAM
          PACK      PMHCSNAM,DOCTSNAM,SP70       * Surname
          MOVE      DOCTGNDR,PMHCGNDR            * Gender
          MOVE      DBIRTH,PMHCDTOB              * Date of birth
          MOVE      DRTYPE,PMHCSPC1              * Speciality
          MOVE      DRTYPE2,PMHCSPC2             * Speciality
          MOVE      DRTYPE3,PMHCSPC3             * Speciality
          MOVE      DRTYPE4,PMHCSPC4             * Speciality
          MOVE      DRTYPE5,PMHCSPC5             * Speciality
          PACK      PMHCRCPT,DRNAME,SP70         * Receptionist name
          PACK      PMHCADR1,DSADD1,SP70         * Address line 1
          PACK      PMHCADR2,DSADD2,SP70         * Address line 2
          PACK      PMHCADR3,DSADD3,SP70         * Address line 3
          PACK      PMHCADR4,DSADD4,SP70         * Address line 4
          PACK      PMHCADR5,SP70                * Address line 5
          PACK      PMHCADR6,SP70                * Address line 6
          MOVE      DSPOST,PMHCPOST              * Post code
          MOVE      PTDOSEML,PMHCSEML            * E-Mail
          MOVE      DTELES,PMHCSTEL              * Surgers Telephone
          MOVE      DTELEP,PMHCPAGR              * Page Telephone
          MOVE      DPAGER,PMHCPAGN              * Pager Number
          MOVE      DASSOC1,PMHCAHP1             * Associated HCP 1
          MOVE      DASSOC2,PMHCAHP2             * Associated HCP 2
          MOVE      DASSOC3,PMHCAHP3             * Associated HCP 3
          MOVE      DASSOC4,PMHCAHP4             * Associated HCP 4
          MOVE      DASSOC5,PMHCAHP5             * Associated HCP 5
          MOVE      DPROV,PMHCPRV1               * Provider number 1
          MOVE      PTDOPRO5,PMHCPRV5            * Provider number 5
          MOVE      DTELEH,PMHCHTEL              * Home Telephone
          PACK      PMHCHAD1,DHADD1,SP70         * Address line 1
          PACK      PMHCHAD2,DHADD2,SP70         * Address line 2
          PACK      PMHCHAD3,DHADD3,SP70         * Address line 3
          PACK      PMHCHAD4,DHADD4,SP70         * Address line 4
          PACK      PMHCHAD5,SP70                * Address line 5
          PACK      PMHCHAD6,SP70                * Address line 6
          MOVE      DHPOST,PMHCHPCD              * Post code
          MOVE      PTDOHEML,PMHCHEML            * E-Mail
          MOVE      DAFIRST,PMHCDFAC             * Date first accred
          MOVE      DALAST,PMHCDLAC              * Date last accred
          MOVE      DAYEARS,PMHCYACC             * Accred years
          MOVE      DACCRED,PMHCATYP             * Accred type
          MOVE      DHCSCOD,PMHCHHCP             * H.C.S HCP Code
          MOVE      DALEVEL,PMHCOSLV             * Service level
.
.         Load Doctor Status
.             0 = Active in Hospital
.             1 = Not Active
.             2 = Active outside Hospital
.
          COMPARE   ZERO,DRSTAT
          IF        @EQUAL
            MOVE      TEN3,PMHCHCST
            MOVE      ZERO,PMHCSTTS
          ENDIF
.
          COMPARE   ONE,DRSTAT
          IF        @EQUAL
            MOVE      TEN3,PMHCHCST
            MOVE      ONE,PMHCSTTS
          ENDIF
.
          COMPARE   TWO,DRSTAT
          IF        @EQUAL
            MOVE      TEN2,PMHCHCST
            MOVE      ZERO,PMHCSTTS
          ENDIF
.
          MOVE      SP70,PMHCHCSD                * Status date
          PACK      PMHCFAXN,PTDOFAXN,SP70       * Fax number
          PACK      PMHCHFXN,PTDOHFAX,SP70       * Home Fax
          PACK      PMHCMOBN,PTDOMOBL,SP70       * Mobile
          MOVE      PTDOGLCC,PMHCCRDC            * Creditor code
          PACK      PMHCWAHC,PTDOWHDP,SP70       * WA HDP HCP code
          MOVE      PTDOMREG,PMHCMRBN            * Med Reg Board No
          MOVE      PTDONHSN,PMHCNHSN            * N.H.S Pros Number
          MOVE      PTDOUDF1,PMHCUDF1            * User Def Field 1
          MOVE      PTDOUDF2,PMHCUDF2            * User Def Field 2
          MOVE      PTDOUDF3,PMHCUDF3            * User Def Field 3
          MOVE      PTDOUDF4,PMHCUDF4            * User Def Field 4
          MOVE      PTDOUDF5,PMHCUDF5            * User Def Field 5
          MOVE      ZERO,PMHCUYN1                * User Def Y/N 1
          MOVE      ZERO,PMHCUYN2                * User Def Y/N 2
          MOVE      ZERO,PMHCUYN3                * User Def Y/N 3
          MOVE      ZERO,PMHCUYN4                * User Def Y/N 4
          MOVE      ZERO,PMHCUYN5                * User Def Y/N 5
          MOVE      PTDOINSC,PMHCINSC            * Insurance code
          MOVE      PTDOINSN,PMHCIPLN            * Insurance number
          MOVE      PTDOINSF,PMHCIDTF            * Insurance date from
          MOVE      PTDOINST,PMHCIDTT            * Insurance date to
          MOVE      PTDOREGN,PMHCMPGN            * MPG Cert No
          MOVE      ZERO,PMHCAPCI                * APC
          MOVE      PTDOREGF,PMHCRGDF            * Reg Date From
          MOVE      PTDOREGT,PMHCRGDT            * Reg Date To
          MOVE      PTDOVISA,PMHCVISD            * Visa date
          MOVE      PTDOCOMT,PMHCPRFC            * Pref Comm
          MOVE      PTDOPREF,PMHCPRFN            * Pref Name
          MOVE      PTDOABNN,PMHCABNN            * ABN Number
          MOVE      ANSM,PMHCUPDF                * Upddate Flag
          MOVE      ZERO,PMHCPRMK                * Processor mark
          MOVE      CURRDATE,PMHCCDTE            * Date created
          MOVE      CTIMEIS,PMHCCTIM             * Time created
          MOVE      "CONVDOCT",PMHCWEBC          * Web user id creator
          MOVE      PTDOEXML,PMHCEXML            * Exclude from Mailing List
          MOVE      PTDODEAC,PMHCDEAC            * Accred. Expiry Date
          MOVE      PTDOAHC1,PMHCAHC1            * AH Contact Method 1
          MOVE      PTDOAHC2,PMHCAHC2            * AH Contact Method 2
          MOVE      PTDOAHC3,PMHCAHC3            * AH Contact Method 3
          MOVE      DCODE,PMHCLDOC               * Linked doctor code
          MOVE      PTDOSDAT,PMHCSDAT            * Start Date
.
LHCP9999  RETURN
+
.******************************************************************************
.*                              DSCR0000           Called by: UPLD0000        *
.*        Create blank records in patdstat file for each period this year     *
.******************************************************************************
.
DSCR0000  PACK      KEY6,FINYEAR,SP10
          CALL      RDSDRGA1                     * position on current year
DSCR1000  CALL      RDKDRGA1                     * read next record
          BRANCH    OVRCD,DSCR9999               * end of file - finished
.         
          MATCH     DRGYR,FINYEAR                * same financial year ?
          GOTO      DSCR9999 IF LESS             * no - finished
.         
          MOVE      ZERO,PTDSBADM                * initialise variables
          MOVE      ZERO,PTDSBBED
          MOVE      ZERO,PTDSBOPR
          MOVE      ZERO,PTDSBMBS
          MOVE      ZERO,PTDSADMS
          MOVE      ZERO,PTDSBEDD
          MOVE      ZERO,PTDSOPRS
          MOVE      ZERO,PTDSMBSC
          MOVE      FINYEAR,PTDSYEAR
          MOVE      DRGNUM,PTDSPERD
          MOVE      DCODE,PTDSCODE
.
.         Create a record as referring doctor
.
          PACK      KEY13,PTDSYEAR,PTDSPERD,ANSR,PTDSCODE
          CALL      RADSTA1
          IF        OVRCD = 1
            CALL      WRDSTA1
          ENDIF
.
.         Create a record as attending doctor
.
          PACK      KEY13,PTDSYEAR,PTDSPERD,ANSA,PTDSCODE
          CALL      RADSTA1
          IF        OVRCD = 1
            CALL      WRDSTA1
          ENDIF
.
          GOTO      DSCR1000                     * get next period record
.
DSCR9999  RETURN
+
.*****************************************************************************
.*                              PERR0000           Called by: UPLD0000       *
.*                   Print an error detail line               CHKM0000       *
.* Requires: Valid read on PMI records (for name fields)      DERR0000       *
.*           ERORDESC - error description                     TERR0000       *
.*           CLNO - current page line count                   NERR0000       *
.* Returns:  CLNO - updated page line count                   VCOD0000       *
.*****************************************************************************
.
PERR0000  COMPARE   CLNO,SIXTY3                  * page full ?
          IF        @LESS
            CALL      LINE0000                   * yes - print bottom line
            CALL      HEAD0000                   * print header
          ENDIF
.
          MOVE      DOCTSNAM,PACSNAME            * format doctor name
          MOVE      DOCTGNM1,PACGNAME
          STRIP     PACGNAME
          ENDSET    PACGNAME
          APPEND    SP1,PACGNAME
          APPEND    DOCTGNM2,PACGNAME
          RESET     PACGNAME
          MOVE      DOCTTITL,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,DIM44
.
          PRINT     *1,PIPE,*3,DOCTCODE,*12,PIPE,*14,DIM44,*59,PIPE:
                    *61,ERORDESC,*132,PIPE
          ADD       ONE,CLNO                     * increment page line count
.
PERR9999  RETURN
+
.*****************************************************************************
.*        Temp File I/O Routines                                             *
.*****************************************************************************
.
.         Doctor Code
.
RDTEMP1   MOVE      ZERO,OVRCD
          RESET     KEY6
          READ      TEMP1,KEY6;OLDDCODE,NEWDCODE
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Doctor Type (Cat DT)
.
RDTEMP2   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP2,KEY3;OLDDTYPE,NEWDTYPE
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Doctor Accreditation Type (Cat AT)
.
RDTEMP3   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP3,KEY3;OLDDACCR,NEWDACCR
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Doctor Classification (Cat DL)
.
RDTEMP4   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP4,KEY3;OLDDCLAS,NEWDCLAS
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Doctor UDF 1 (Cat R5)
.
RDTEMP5   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP5,KEY3;OLDDUDF1,NEWDUDF1
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Doctor UDF 2 (Cat R6)
.
RDTEMP6   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP6,KEY3;OLDDUDF2,NEWDUDF2
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Doctor UDF 3 (Cat R7)
.
RDTEMP7   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP7,KEY3;OLDDUDF3,NEWDUDF3
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Doctor Contact Time (Cat R8)
.
RDTEMP8   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP8,KEY3;OLDDCONT,NEWDCONT
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Doctor Notify Via (Cat R9)
.
RDTEMP9   MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP9,KEY3;OLDDNOTF,NEWDNOTF
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Doctor Preferred Contact (Cat CZ)
.
RDTEMP10  MOVE      ZERO,OVRCD
          RESET     KEY3
          READ      TEMP10,KEY3;OLDDPREF,NEWDPREF
          GOTO      OVERCOND IF OVER
          RETURN
.
.         Doctor Insurance
.
RDTEMP11  MOVE      ZERO,OVRCD
          RESET     KEY6
          READ      TEMP11,KEY6;OLDINSUR,NEWINSUR
          GOTO      OVERCOND IF OVER
          RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       CLPATDOC
          INC       CLPMSHCP
          INC       PATCOMN3
          INC       PATDKIPR
          INC       PMSHKIPR
.
          INC       PATCODIO/INC
          INC       PATDO1IO/INC
          INC       PATDRGIO/INC
          INC       PATDSTIO/INC
          INC       PATIN1IO/INC
          INC       PMSHCPIO/INC
