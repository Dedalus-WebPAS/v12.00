.***************************************************************************
.* System    :   Theatre System                                            *
.* Program   :   IBAOPR91                                                  *
.* Desc      :   Operation Average Generation                              *
.***************************************************************************
.* Date      :   29/10/90                                                  *
.* Author    :   J. Ceniza                                                 *
.* Function  :   This program will be used to recalculate the operation    *
.*               averages based on the historical data available for the   *
.*               doctors and operations.                                   *
.*      V11.00.01   24/02/2020  J.Tan          TSK 0838262                 *
.*                  Added Effective from and to date to MBS Item file      *
.*      V10.08.01   26/08/2016  J.Tan     TSK 0813090                      *
.*                  Changed FORM fields to DIM in tempfile                 *
.*      V10.04.01   07/07/2014  J.Tan     CAR 261630                       *
.*                  Removed port number from temp file name                *
.*      V10.03.03   17.09.2013  Patrick Adair   CAR 289615                 *
.*                  Set Correct Min duration in temp file LSOS1200         *
.*      V10.03.02   05.07.2013  J.Tan           CAR 288043                 *
.*                  Mods to calculatet Min duration correctly from OPR92   *
.*      V10.03.01   24.05.2012  J.Tan           CAR 281946                 *
.*                  Fixed Average calculation if Max and Min are equal     *
.*       V9.04.01   18.01.2005  Lina Vo         CAR 54044                  *
.*                  Modify to use financial yr period when extracting data *
.*                  from oprsosaf.                                         *
.*       V9.03.02   03.08.2004  Peter Vela      CAR 51685                  *
.*                  Recompiled for OPRSOSFD                                *
.*       V9.03.01   15.04.2004  Sylvek Litewka  CAR 20222                  *
.*                  Modified temporary file to include Period Date from    *
.*                  oprsosaf. Modified procedure REPC0000 to read ICD      *
.*                  Procedures file based on Period Date and using         *
.*                  RDPTICO1 (new common read).                            *
.* ----------------------------------------------------------------------- *
.*       V5.08.01   01/09/2000  Jill Habasque  SRF 2458                    *
.*                  Fixed calculation of averages                          *
.*       V5.07.B01  18/01/1999  Jim Stathopoulos                           *
.*                  507 Changes                                            *
.***************************************************************************
.*        V5.06.01  09/09/1998  J.Gray                                     *
.*                  Recompiled for ICD-10-am changes                       *
.***************************************************************************
.*       V5.00   R.Knowles   (18/12/90)  Converted to Version 5            *
.*       V5.01   'The Phantom'  (18/01/91)  Added audits                   *
.*                                                                         *
.*        V5.01.01  21/01/1991    Operation Desert Storm                   *
.*                  Converted back to Release 5.01                         *
.*        V5.01.02  11/05/92      ROD                                      *
.*                  Added read of sys par. for audits                      *
.*        V5.01.03  18/06/92      ROD                                      *
.*                  Display/Print date for period                          *
.*        V5.01.04  24/05/1995  Matt Surridge                              *
.*                  Fixed bugs for global recompile.                       *
.*        V5.03.01  14/11/1995  Steve Armstrong                            *
.*                  Fixed display of header line 2                         *
.*        V5.04.01  26/06/1997  Howellsy         505                       *
.*                  Use PATDOCKY instead of PATDOCDS                       *
.***************************************************************************
.
.
.$$$$$
.
.    Operation Average Generation (IBAOPR91 )
.    ----------------------------------------
.
.    - Initialisation
.
.    - Display Header
.            - Open Files
.
.    - Processing Options
.
.       0 - Exit
.       1 - Surgeon Average generation
.
.          - Display Screen Format
.          - Clear Input Variables
.          - Input Range ( start and end doctor code )
.          - Clear Input Variables
.          - Input Range ( start and end operation code )
.            - depending whether OPCNCODE = 0 or 1, the code is validated
.              against PATICOFD or PATITMFD.
.          - Clear Input Variables
.          - Input Range ( start and end period )
.
.          - Ask Ok. to continue ?
.          - If yes
.          - Loop through OPRSOSFD file and write to temp. index file
.            and write to temp. index file according to range specified by user
.          - Print Report by looping through the temp. file., caluculate
.            the surgeon average by dividing total number of operations by
.            number of operations, also update the OPRAVEFD.
.
.         2 - Hospital Average generation
.
.          - Display Screen Format
.          - Clear Input Variables
.          - Input Range ( start and end doctor code )
.          - Clear Input Variables
.          - Input Range ( start and end operation code )
.            - depending whether OPCNCODE = 0 or 1, the code is validated
.              against PATICOFD or PATITMFD.
.          - Clear Input Variables
.          - Input Range ( start and end period )
.
.          - Ask Ok. to continue ?
.          - If yes
.          - Loop through OPRSOSFD file and write to temp. index file
.            and write to temp. index file according to range specified by user
.            ( This is very similar to the above but the doctor code in 
.              the temp. index file will always be blank. )
.          - Print Report by looping through the temp. file., caluculate
.            the hospital average by dividing total number of operations by
.            number of operations, also update the OPRAVEFD.
.    - END
.$$$$$
.

.*************************************************************************
.
.
          INC       STD001FD
          INC       IBASEQFD/INC            * Sequential Numbers File
          INC       TFILEVAR/INC            * Generate Temp File Name
          INC       WEBERRFD/INC            * Web Server Error Logging
.
          INC       OPRCONFD/INC
          INC       PATCODFD/INC
          INC       PATCONFD/INC
          INC       PATDO1FD/INC
          INC       PATDRGFD/INC
          INC       PATICOFD/INC
          INC       PATITMFD/INC
          INC       OPRSOSFD/INC
          INC       OPRAVEFD/INC
.
AUDIFLAG  FORM      1
CODE      DIM       2
CMDLINE   DIM       50
CPTDATE   DIM       8
CRETFLAG  FORM      1
DATEFR    DIM       6
DATETO    DIM       6
DIM1A     DIM       1
DIM3      DIM       3
DIM20     DIM       20
DIM21     DIM       21
DIM30     DIM       30
DOCCODE   DIM       6
TNUMOPR   FORM      6
TMAXDUR   FORM      4
TMINDUR   FORM      4
DOCTDESC  DIM       30
EDIM21    DIM       21
ENDATE    DIM       7
ENDCODE   DIM       6
ENDDATE   DIM       6
ENDDESC   DIM       40
ENDOPER   DIM       9
ENOPDESC  DIM       40
EXPREC    FORM      4
FIELD     FORM      3
FNAME1    DIM       8
NCODE     FORM      1 
NOPER     FORM      1
NUMREC    FORM      4
OLDAVER   DIM       4
OPERAVER  FORM      8
OPERDESC  DIM       30
PRFDATE   DIM       10
PRTDATE   DIM       10
PROC      FORM      1
RANGE     FORM      1
SCRNTYPE  DIM       25
SDATE     DIM       7
SDOCT     DIM       6
STOPDESC  DIM       40
STRTCODE  DIM       6
STRTDESC  DIM       40
STRTDATE  DIM       6
STRTOPER  DIM       9
TASKIDEN  DIM       8
TEMPCODE  DIM       6
TEMPDESC  DIM       40
TEMPOPER  DIM       9
TRUNCDSC  DIM       30
.
. ------ CONSTANTS ---------
.
FINISH    INIT      "Finish"
HOSPITAL  INIT      "- Hospital"
START     INIT      "Start"
SURGEONS  INIT      "- Surgeons"
ZZZZ      INIT      "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
.
.
PRGID     INIT      "IBAOPR91"
PRGNAM    INIT      "Operation Average Generation"
VERSION   INIT      "V12.00.00"
.**************************************************************************+
.*                          TEMPORARY FILE                                 *
.**************************************************************************+
TMPOPER1  IFILE     SQL, FIXED=54, KEY="u1-6,7-15"
.
.NAME     TYPE    PHYSICAL   LENGTH   START    DESCRIPTION
.-----    -----   --------   ------   -----    -----------
XDOCT     DIM       6          6       1       * doctors code
XOPER     DIM       9          9       7       * Operation code
XTOTTIM   DIM       8          8       16      * Total time used in operation
XNUMOPR   DIM       8          8       24      * Number of operations performed
XMAXDUR   DIM       8          8       32      * Maximum duration
XMINDUR   DIM       8          8       40      * Minimum duration
XPRDDTE   DIM       6          6       48      * Period Date (CCYYMM)
.
.End of position                       54
.
FTOTTIM   FORM      8                          * Total time used in operation
FNUMOPR   FORM      8                          * Number of operations performed
FMAXDUR   FORM      8                          * Maximum duration
FMINDUR   FORM      8                          * Minimum duration
.
.***************************************************************************
.*                              ML0000                                     *
.*                      Controlling Logic (Mainline code)                  *
.***************************************************************************
ML0000    CALL      INIT0000               * initialization and open files
.
ML0100    CALL      DOPT0000               * display options
          CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,ML1000:        * Surgeon average generation
                            ML2000         * Hospital average generation
.
. ---- Surgeon average generation --------
.
ML1000    CALL      SCR0000                * display screen
          CALL      CODE0000               * input start/end doctor codes
          CALL      OPER0000               * input start/end oper. codes
          CALL      DATE0000               * input start/end period.
          CALL      CONTQST                * Ask Ok to continue (Y/N/C) ?
          BRANCH    CEXIT,ML1300:          * (Y)es selected
                          ML1000:          * (N)o selected 
                          ML0100           * (C)ancel selected
ML1300    CALL      CRET0000               * create temp. index file
          CALL      LSOS0000               * loop through OPRSOSFD for
.                                          * requested ranges and accumulate
.                                          * data found into the temp. file
.
          CALL      REPC0000               * loop through temp. index file
.                                          * and update/write record to 
.                                          * OPRAVEFD FILE and print report.
          CALL      DELI0000               * make sure temp. index file is 
          GOTO      ML0100
.
. ---- Hospital average generation --------
.
ML2000    CALL      SCR0000                * display screen
          CALL      CODE0000               * input start/end doctor codes
          CALL      OPER0000               * input start/end oper. codes
          CALL      DATE0000               * input start/end period.
          CALL      CONTQST                * Ask Ok to continue (Y/N/C) ?
          BRANCH    CEXIT,ML2300:          * (Y)es selected
                          ML2000:          * (N)o selected 
                          ML0100           * (C)ancel selected
ML2300    CALL      CRET0000               * create temp. index file
          CALL      LSOS0000               * loop through OPRSOSFD for
.                                          * requested ranges and accumulate
.                                          * data found into the temp. file
.
          CALL      REPC0000               * loop through temp. index file
.                                          * and update/write record to 
.                                          * OPRAVEFD FILE and print report.
          CALL      DELI0000               * make sure temp. index file is 
          GOTO      ML0100
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialization                               *
.*  The initialization routine is used to display headings and open files.  *
.*  Any other general initialization can also be performed here.            *
.****************************************************************************
INIT0000  CALL      DISPHEAD    

          DISPLAY   *P56:24,"controlf"; 
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,FORTY;*43,OPCNAUDA,*112,OPCNCODE
          READ      CONTROLF,FIFTY9;*27,CPERMTH
          DISPLAY   *P56:24,"patdo1af";
          OPEN      PATDO1A1,"patdo1af"
          OPEN      PATDO1A2,"patdo1af"
          DISPLAY   *P56:24,"patdrgaf";
          OPEN      PATDRGA3,"patdrgaf"
          DISPLAY   *P56:24,"paticdof";
          CALL      OPICO1                       * Open all ICD Operation files
.
          DISPLAY   *P56:24,"patitemn";
          OPEN      PATITEM1,"patitemn";
          DISPLAY   *P56:24,"opraveaf";
          OPEN      OPRAVEA1,"opraveaf"
          DISPLAY   *P56:24,"oprsosaf";
          OPEN      OPRSOSA1,"oprsosaf"
          MOVE      ONE,CNEWDS                  * new "?" option
          MOVE      SP1,DIM1A
.
          CALL      TFILENAM                * Get temp file name
          MOVE      TFILNAME,FNAME1
.
          BRANCH    OPCNAUDA,INIT9999
          DISPLAY   *P56:24,"opraudav";
          OPEN      OPRAUDAV,"opraudav"
.
INIT9999  RETURN
+
.***************************************************************************
.*                                OPTN0000             Called by: ML0000   *
.*                        get user options or exit                         *
.*                                                                         *
.*    Returns:  EXIT    = FALSE (0)  Valid option selected                 *
.*                        TRUE  (1)  Exit option selected                  *
.***************************************************************************
.
. ---- keyin option ----
.
OPTN0000  MOVE      ZERO,COPTION                * initialize Coption   
          DISPLAY   *P17:8,*EF                  * erase rest of screen
          KEYIN     *P17:8,*EL,*DV,UNDLN1:
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION
          GOTO      OPTN9000 IF EQUAL            * exit
          BRANCH    COPTION,OPTN3000,OPTN3000
          BEEP                                   * invalid input
          GOTO      OPTN0000
.
OPTN3000  MOVE      FALSE,EXIT
          LOAD      SCRNTYPE,COPTION,SURGEONS,HOSPITAL
          DISPLAY   *P54:2,*V2LON,*+,SCRNTYPE,SP1
          HLINE     *G37,2,65,80
          GOTO      OPTN9999
.
OPTN9000  MOVE      TRUE,EXIT                     * set EXIT = 1
OPTN9999  RETURN
+
.***************************************************************************
.*                        DOPT0000                 Called by : OPTN0000    *
.*                   display option                          : SCR0000     *   
.*                                                           : SSCR0000    *
.***************************************************************************

DOPT0000  HLINE     *G37,2,54,80
          DISPLAY   *P1:4,*EF,*V2LON,ZERO,*HOFF," = Exit":
                    *P1:5,*V2LON,ONE,*HOFF," = Surgeon average generation":
                    *P1:6,*V2LON,TWO,*HOFF," = Hospital average generation"
.
          DISPLAY   *P1:8,"Select Option : "
.
          BRANCH    COPTION,DOPT9000,DOPT9000
.    
          COMPARE   ZERO,COPTION
          GOTO      DOPT9999 IF EQUAL
.
          BEEP          
          GOTO      DOPT0000
.
DOPT9000  DISPLAY   *P17:8,*V2LON,COPTION
.
DOPT9999  RETURN
.
.***************************************************************************
.*                          CLRC0000                 Called by : DESC0000  *
.*                clear start and end codes and description
.***************************************************************************
CLRC0000  MOVE      SP6,STRTCODE
          MOVE      SP6,ENDCODE
          MOVE      SP30,STRTDESC 
          MOVE      SP30,ENDDESC
CLRC9999  RETURN
.
.***************************************************************************
.*                           CODE0000                     Called by ML0000 *
.*               input the start and ending doctors code                   *
.***************************************************************************
CODE0000  CALL      CLRC0000                     * clear start/end codes
.                                                * and description
          MOVE      ONE,NCODE                    * start of code variable
          MOVE      FOUR,CVERT                   * row for start of code
.                                                * screen layoout 
CODE1500  CALL      KCOD0000                     * keyin doctors code
.
.  keyin ending code
.
CODE2000  MOVE      TWO,NCODE                     * end of code variable
          MOVE      FIVE,CVERT                    * row for end of code
          CALL      KCOD0000                      * keyin code
          BRANCH    EXIT,CODE5000                 * Invalid range
          GOTO      CODE9999
.
CODE5000  CALL      SCR0000                       * re-display screen
          GOTO      CODE0000
.
CODE9999  RETURN
.
+
.***************************************************************************
.*                                  SCR0000            Called by: ML0000   *
.*                  display screen format for code sequence                *
.***************************************************************************
SCR0000   DISPLAY   *P1:3,*EF:
                    *P1:4,"Starting Doctor Codes : ":
                    *P1:5,"Ending Doctor Codes   : ":
                    *P1:7,"Starting Operation    : ":
                    *P1:8,"Ending Operation      : ":
                    *P1:10,"Starting ",CPERMTH,*P23:10,":":
                    *P1:11,"Ending ",CPERMTH,*P23:11,":"
.
SCR9999   RETURN
.
.***************************************************************************
.*                         DISP0000                    Called by : MANY     *
.*         display start code and description                              *
.***************************************************************************
DISP0000  MATCH     SP6,STRTCODE                  * nothing input
.
          GOTO      DISP1000 IF EQUAL              * yes
.
. -- a code inputted
.
DISP0800  DISPLAY   *P25:4,*EL,*V2LON,STRTCODE,SP4,*HOFF,STRTDESC  
          GOTO      DISP1500
.
DISP1000  DISPLAY   *P25:4,*EL,*V2LON,START  * display 'Start' in highlight
.
DISP1500  BRANCH    NCODE,DISP9999                * only for start
.
          MATCH     ENDCODE,ZZZZ                  * nothing input
          GOTO      DISP2000 IF EQUAL             * yes
.
. an end code and end description displayed.
.
          DISPLAY   *P25:5,*EL,*V2LON,ENDCODE,SP4,*HOFF,ENDDESC
          GOTO      DISP9999
.
DISP2000  DISPLAY   *P25:5,*EL,*V2LON,FINISH
DISP9999  RETURN
.
.**************************************************************************
.*                         KCOD0000                  Called by : ML0000   *
.*                keyin the doctor code                                   *
.**************************************************************************
KCOD0000  KEYIN     *P25:CVERT,*EL,*DV,UNDLN6:       
                    *P25:CVERT,*V2LON,TEMPCODE:
                    *P25:CVERT,*DV,TEMPCODE
.
          CALL      CHEK0000                     * validate user input
          BRANCH    CEXIT,KCOD1000,KCOD0000
.
          GOTO      KCOD7000
.
. list doctor codes 
.
KCOD1000  CALL      GETSCR00                      * restore screen
          CALL      PATDOCDS
          CALL      PUTSCR00                      * restore screen
          MOVE      DOCCODE,TEMPCODE
          CALL      CHEK0000                     * validate user input
          BRANCH    CEXIT,KCOD1000,KCOD0000
.
KCOD7000  CALL      DISP0000                      * display start code & desc.
          BRANCH    NCODE,KCOD8000
.
. -- check range --
.
KCOD7500  MATCH     STRTCODE,ENDCODE
          GOTO      KCOD9000 IF LESS
.
KCOD8000  MOVE      FALSE,EXIT                   * valid input
          GOTO      KCOD9999
.
KCOD9000  CALL      INVR0000                     * invalid range
          MOVE      TRUE,EXIT                    * invalid range
KCOD9999  RETURN
.
+
.***************************************************************************
.*                                  CHEK0000           Called by: KCOD0000 *
.*                     Validate doctor id. code field                      *
.*                                                                         *
.*   Returns  : CEXIT    =  (0)  If an operator code is entered            * 
.*                               or nothing inputted                       *
.*                         (1)  If a question mark "?" is entered          *
.*                         (2) invalid input                               *
.***************************************************************************
CHEK0000 
          ENDSET    TEMPCODE                 * Pad the field with spaces
          APPEND    SP6,TEMPCODE
          RESET     TEMPCODE
.
.         Check if anything was input and set the exit flag appropriately
.
          MATCH     TEMPCODE,SP6             * Was anything input ?
          GOTO      CHEK9000 IF EQUAL        * No
.
.         Check for a "?". 
.
          CMATCH    QUEST,TEMPCODE           * "?" entered ?
          GOTO      CHEK8000 IF EQUAL        * Yes.
.
CHEK7100  MOVE      TEMPCODE,KEY6
          MOVE      SP6,DTITL
          MOVE      SP30,DGNAME
          MOVE      SP30,DSNAME
          MOVE      TEMPCODE,KEY6
          CALL      RDDOCT1   
          BRANCH    OVRCD,CHEK7500           * invalid not found
.
          CALL      DOCF0000                 * format doctors name in tile,
.                                            * name surname format
          BRANCH    NCODE,CHEK7200:          * start code
                          CHEK7300           * end code
.
.  get description
.
CHEK7200  MOVE      PACFNAME,STRTDESC         
          MOVE      TEMPCODE,STRTCODE
          GOTO      CHEK7400
.
CHEK7300  MOVE      PACFNAME,ENDDESC 
          MOVE      TEMPCODE,ENDCODE
.
CHEK7400  MOVE      ZERO,CEXIT                        * valid input
          GOTO      CHEK9999
.
CHEK7500  MOVE      TWO,CEXIT                       * invalid input
.
          DISPLAY   *P1:24,*EL,*B,"This doctor code does not exist on file. ";
          CALL      HITENTER
          GOTO      CHEK9999

CHEK8000  MOVE      ONE,CEXIT                * A "?" input
          GOTO      CHEK9999
.
. no input, determine whether for start or finish
.
CHEK9000  MOVE      ZERO,CEXIT               * no input
          BRANCH    NCODE,CHEK9500:          * start code
                          CHEK9600           * end code
.
CHEK9500  MOVE      SP6,STRTCODE
          GOTO      CHEK9999
.
CHEK9600  MOVE      ZZZZ,ENDCODE
.
CHEK9999  RETURN
.
.*****************************************************************************
.*                        CLRO0000                      Called by : OPER0000 *
.*                    clear operation codes and description                  *
.*****************************************************************************
CLRO0000  MOVE      SP9,STRTOPER
          PACK      STOPDESC,SP30,SP10
          MOVE      SP9,ENDOPER
          PACK      ENOPDESC,SP30,SP10
CLRO9999  RETURN
.
.***************************************************************************
.*                           OPER0000                     Called by ML0000 *
.*             input the start and ending operation code                   *
.***************************************************************************
OPER0000  CALL      CLRO0000                     * clear start/end codes
.                                                * and description
          MOVE      ONE,NOPER                    * start of code variable
          MOVE      SEVEN,CVERT                  * row for start of code
.                                                * screen layoout 
OPER1500  CALL      KOPR0000                     * keyin operation code
.
.  keyin ending code
.
OPER2000  MOVE      TWO,NOPER                     * end of code variable
          MOVE      EIGHT,CVERT                   * row for end of code
          CALL      KOPR0000                      * keyin code
          BRANCH    EXIT,OPER5000                 * Invalid range
          GOTO      OPER9999
.
OPER5000  CALL      SCR0000                       * re-display screen
          CALL      DISP0000                      * re-display doctors details
          GOTO      OPER0000
.
OPER9999  RETURN
.
+
.***************************************************************************
.*                         DOPR0000                   Called by : KOPR0000 *
.*         display operation details                                       *
.***************************************************************************
DOPR0000  MATCH     SP9,STRTOPER                  * nothing input
.
          GOTO      DOPR1000 IF EQUAL              * yes
.
. -- a code inputted
.
DOPR0800  DISPLAY   *P25:7,*EL,*V2LON,STRTOPER,SP1,*HOFF,STOPDESC
          GOTO      DOPR1500
.
DOPR1000  DISPLAY   *P25:7,*EL,*V2LON,START  * display 'Start' in highlight
.
DOPR1500  BRANCH    NOPER,DOPR9999                * only display start details
.
          MATCH     ENDOPER,ZZZZ                  * nothing input
          GOTO      DOPR2000 IF EQUAL             * yes
.
. an end code and end description displayed.
.
          DISPLAY   *P25:8,*EL,*V2LON,ENDOPER,SP1,*HOFF,ENOPDESC
          GOTO      DOPR9999
.
DOPR2000  DISPLAY   *P25:8,*EL,*V2LON,FINISH
DOPR9999  RETURN
.
.**************************************************************************
.*                         KOPR0000                  Called by : ML0000   *
.*                keyin the doctor code                                   *
.**************************************************************************
KOPR0000  KEYIN     *P25:CVERT,*EL,*DV,UNDLN9:       
                    *P25:CVERT,*V2LON,TEMPOPER:
                    *P25:CVERT,*DV,TEMPOPER
.
          CALL      CKOP0000                     * validate user input
          BRANCH    CEXIT,KOPR1000,KOPR0000
.
          GOTO      KOPR7000
.
. list item codes (for OPCNCODE = 1 )
.
KOPR1000  CALL      PATITMDS
.
KOPR3000  DISPLAY   *P1:24,*EL,"Code : "
          KEYIN     *P8:24,*DV,UNDLN9:
                    *P8:24,*V2LON,TEMPOPER:
                    *P8:24,*DV,TEMPOPER
.
          CALL      CKOP0000
          BRANCH    CEXIT,KOPR1000,KOPR3000 
.
          CALL      SCR0000                      * redisplay screen
.
          CALL      DISP0000                     * display doctor details
.                                                * for doctor
KOPR7000  CALL      DOPR0000                 * display operation details
          BRANCH    NOPER,KCOD8000           * only for start
.
. -- check range --
.
KOPR7500  MATCH     STRTOPER,ENDOPER
          GOTO      KOPR9000 IF LESS
.
KOPR8000  MOVE      FALSE,EXIT                   * valid input
          GOTO      KOPR9999
.
KOPR9000  CALL      INVR0000                     * invalid range
          MOVE      TRUE,EXIT         
KOPR9999  RETURN
.
+
.***************************************************************************
.*                                  CKOP0000           Called by: KOPR0000 *
.*                 Validate operation code field                           *
.*                                                                         *
.*   Returns  : CEXIT    =  (0)  If an operator code is entered            * 
.*                               or nothing inputted                       *
.*                         (1)  If a question mark "?" is entered          *
.*                         (2) invalid input                               *
.***************************************************************************
CKOP0000 
          ENDSET    TEMPOPER                 * Pad the field with spaces
          APPEND    SP9,TEMPOPER
          RESET     TEMPOPER
.
.         Check if anything was input and set the exit flag appropriately
.
          MATCH     SP9,TEMPOPER             * Was anything input ?
          GOTO      CKOP9000 IF EQUAL        * No
.
.         Check for a "?". 
.
          CMATCH    QUEST,TEMPOPER           * "?" entered ?
          GOTO      CKOP8000 IF EQUAL        * Yes.
.
CKOP7100  MOVE      TEMPOPER,KEY9
          PACK      IDESC,SP30,SP10          * clear item description
          PACK      ODESC,SP30,SP30,SP10
          BRANCH    OPCNCODE,CKOP7150        * using item file ( PATITMFD )
          MOVE      SP70,ICDRDDTE
          CALL      RDPTICO1
          BRANCH    OVRCD,CKOP7500           * invalid not found
.
          MOVE      ODESC,TEMPDESC           * (truncate from DIM70 to DIM40 )
          GOTO      CKOP7160
.
CKOP7150  PACK      KEY17,KEY9,SP70
          CALL      PATITMRD                 * read (PATITMFD file )
          BRANCH    OVRCD,CKOP7500
.
          MOVE      IDESC,TEMPDESC
.
CKOP7160  BRANCH    NOPER,CKOP7200:          * start code
                          CKOP7300           * end code
.
.  get description
.
CKOP7200  MOVE      TEMPOPER,STRTOPER
          MOVE      TEMPDESC,STOPDESC
          GOTO      CKOP7400
.
CKOP7300  MOVE      TEMPOPER,ENDOPER
          MOVE      TEMPDESC,ENOPDESC
.
CKOP7400  MOVE      ZERO,CEXIT                        * valid input
          GOTO      CKOP9999
.
CKOP7500  MOVE      TWO,CEXIT                       * invalid input
.
          DISPLAY   *P1:24,*EL,*B,"This code does not exist on file. ";
          CALL      HITENTER
          GOTO      CKOP9999
.
CKOP8000  BRANCH    OPCNCODE,CKOP8100        * using item file (PATITMFD)
.
. using PATICOFD file - "?" not allowed
.
          GOTO      CKOP7500
.
CKOP8100  MOVE      ONE,CEXIT                * A "?" input
          GOTO      CKOP9999
.
. no input, determine whether for start or finish
.
CKOP9000  MOVE      ZERO,CEXIT               * no input
          BRANCH    NOPER,CKOP9500:          * start code
                          CKOP9600           * end code
.
CKOP9500  MOVE      SP9,STRTOPER
          GOTO      CKOP9999
.
CKOP9600  MOVE      ZZZZ,ENDOPER
.
CKOP9999  RETURN
.***************************************************************************
.*                      INVR0000                 Called by : MANY          *
.***************************************************************************
INVR0000  DISPLAY   *P1:24,*EL,*B,"Invalid Range. ";
          CALL      HITENTER
INVR9999  RETURN
.
.****************************************************************************+
.*                      DOCF0000                    Called by : MANY         *
.*              format operations name in title, name surname format         *
.****************************************************************************+
DOCF0000  MOVE      DTITL,PACTITLE
          MOVE      DSNAME,PACSNAME
          MOVE      DGNAME,PACGNAME
          MOVE      ONE,PACFRMT
          CALL      PACNAME            * format doctors name
DOCF9999  RETURN
.
+
.*****************************************************************************
.*                            DATE0000                   Called by : ML0000  *
.*              keyin the start/end date                                     *
.*****************************************************************************
DATE0000  MOVE      ONE,PROC
          MOVE      ZERO,CCANLDTE
          MOVE      ZERO,CHIGHLT
          MOVE      ZERO,CDEFDTE
          MOVE      "25",CCOL
          MOVE      TEN,CVERT                * row for starting date
          DISPLAY   *P25:11,*EL
DATE1000  CALL      KDAT0000
.
. -- keyin ending date
.
DATE2000  MOVE      TEN1,CVERT                * row for ending date   
          MOVE      TWO,PROC
          CALL      KDAT0000
          BRANCH    EXIT,DATE0000             * invalid range
DATE9999  RETURN
.
.*****************************************************************************
.*                            KDAT0000                 Called by : KDAT0000  *
.*              keyin the session date                                       *
.*****************************************************************************
KDAT0000  MOVE      SP2,CMON
          MOVE      SP2,CYEAR
          MOVE      CCC,CCENT
          CALL      KEYPER
          BRANCH    CQUEST,KDAT0000          * "?" input not allowed
          BRANCH    OVRCD,KDAT8000           * no input
          BRANCH    PROC,KDAT3000:           * start date
                         KDAT4000            * end date
.
KDAT3000  PACK      STRTDATE,CCENT,CYEAR,CMON
          REP       " 0",STRTDATE
          MOVE      STRTDATE,KEY6
          CALL      VDAT0000                 * validate date
          BRANCH    EXIT,KDAT0000            * record not found in PATDRGFD
          PACK      DATEFR,DRGYR,DRGNUM
          UNPACK    DRGFDTE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P34:10,*V2LON,CPCDATE
          MOVE      CPCDATE,PRFDATE
          GOTO      KDAT9500

KDAT4000  PACK      ENDDATE,CCENT,CYEAR,CMON
          REP       " 0",ENDDATE
          MOVE      ENDDATE,KEY6
          CALL      VDAT0000                 * validate date
          BRANCH    EXIT,KDAT0000            * record not found in PATDRGFD
          PACK      DATETO,DRGYR,DRGNUM
          UNPACK    DRGTDTE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P34:11,*V2LON,CPCDATE
          MOVE      CPCDATE,PRTDATE
          GOTO      KDAT8500
.
KDAT8000  BRANCH    PROC,KDAT8100:           * no input for starting date
                         KDAT8200            * no input for ending date
.
KDAT8100  MOVE      SP6,STRTDATE
          MOVE      SP6,DATEFR
          DISPLAY   *P25:10,*EL,*V2LON,START
          GOTO      KDAT9500
.
KDAT8200  MOVE      ZZZZ,ENDDATE
          MOVE      ZZZZ,DATETO
          DISPLAY   *P25:11,*EL,*V2LON,FINISH
.
KDAT8500  MATCH     STRTDATE,ENDDATE         * Ending date >= strtdate
          GOTO      KDAT9500 IF NOT LESS     * yes, valid input
.
. -- invalid input
.
KDAT9000  DISPLAY   *P1:24,*EL,*B,"Invalid period range. ";
          CALL      HITENTER
          MOVE      TRUE,EXIT
          GOTO      KDAT9999
.
KDAT9500  MOVE      FALSE,EXIT
.

KDAT9999  RETURN
.
.**************************************************************************
.*                           VDAT0000                 Called by : MANY    *   
.*                  validate the date                                     *
.**************************************************************************
VDAT0000  CALL      RDDRGA3
          BRANCH    OVRCD,VDAT9000                 * record not found
.
          MOVE      FALSE,EXIT
          GOTO      VDAT9999
.
VDAT9000  DISPLAY   *P1:24,*EL,*B,"Period not found in file. ";
          CALL      HITENTER
          MOVE      TRUE,EXIT
VDAT9999  RETURN
.**************************************************************************
.*                      CRET0000                   Called by : ML0000     *
.*               create temp. index file                                  *
.**************************************************************************
CRET0000  CALL      DELI0000                   * delete temp. file incase
          CLEAR     CMDLINE                    * existing
          APPEND    "isbuild ",CMDLINE
          APPEND    FNAME1,CMDLINE
          APPEND    " 54 u1-6,7-15 ",CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKIDEN
          OPEN      TMPOPER1,FNAME1
.
CRET9999  RETURN
.
.***************************************************************************
.*                   DELI0000                       Called by : ML0000     *
.*            delete temp. file incase existing               : CRET0000   *
.***************************************************************************
DELI0000  CLOSE     TMPOPER1
          CLEAR     CMDLINE
          APPEND    "iserase ",CMDLINE
          APPEND    FNAME1,CMDLINE
          RESET     CMDLINE
          EXECUTE   CMDLINE,TASKIDEN
DELI9999  RETURN
.***************************************************************************
.*                        WRTT0000               Called by : ML0000        *
.*            write to temporary index file                                *
.***************************************************************************
WRTT0000  RESET     KEY15
          MOVE      FTOTTIM,XTOTTIM
          MOVE      FNUMOPR,XNUMOPR
          MOVE      FMAXDUR,XMAXDUR
          MOVE      FMINDUR,XMINDUR
          WRITE     TMPOPER1,KEY15;KEY15,XTOTTIM,XNUMOPR,XMAXDUR,XMINDUR:
                                   XPRDDTE
WRTT9999  RETURN
.***************************************************************************
.*                     UPD0000                   Called by : LSOS0000      *
.*          update temp. index file                                        *
.***************************************************************************
UPD0000   MOVE      FTOTTIM,XTOTTIM
          MOVE      FNUMOPR,XNUMOPR
          MOVE      FMAXDUR,XMAXDUR
          MOVE      FMINDUR,XMINDUR
          UPDATE    TMPOPER1;XDOCT,XOPER,XTOTTIM,XNUMOPR,XMAXDUR,XMINDUR:
                             XPRDDTE
.
UPD9999   RETURN
.***************************************************************************
.*                        RDDT0000                  Called by : LSOS0000   *
.*            read temp. index file                                        *
.***************************************************************************
RDDT0000  MOVE      ZERO,OVRCD
          READ      TMPOPER1,KEY15;XDOCT,XOPER,XTOTTIM,XNUMOPR,XMAXDUR:
                                   XMINDUR,XPRDDTE
          GOTO      OVERCOND IF OVER
          MOVE      XTOTTIM,FTOTTIM
          MOVE      XNUMOPR,FNUMOPR
          MOVE      XMAXDUR,FMAXDUR
          MOVE      XMINDUR,FMINDUR
RDDT9999  RETURN
.**************************************************************************
.*                      RSDT0000                    Called by ;           *
.*                positional read of temp. index file                     *
.**************************************************************************
RSDT0000  RESET     KEY15
          READ      TMPOPER1,KEY15;;
RSDT9999  RETURN
.***************************************************************************
.*                    RKDT0000                     Called by :             *
.*               read next record in temp. index file                      *
.***************************************************************************
RKDT0000  MOVE      ZERO,OVRCD
          READKS    TMPOPER1;XDOCT,XOPER,XTOTTIM,XNUMOPR,XMAXDUR,XMINDUR:
                             XPRDDTE
          GOTO      OVERCOND IF OVER
          MOVE      XTOTTIM,FTOTTIM
          MOVE      XNUMOPR,FNUMOPR
          MOVE      XMAXDUR,FMAXDUR
          MOVE      XMINDUR,FMINDUR
RKDT9999  RETURN
.
.**************************************************************************
.*                           LSOS0000                  Called by : ML0000 *
.*       Parameter required COPTION - 1 - for Option 1 (Surgeon Average)  *
.*                                    2 - for Option 2 (Hospital Average) *
.*              loop through OPRSOSFD file for requested ranges and       *
.*              write data into the temporary index file.                 *
.**************************************************************************
LSOS0000  MOVE      ZERO,FIELD
.
. -- initialize temp. index file variables --
.
          MOVE      "999",FMINDUR
          MOVE      ZERO,FMAXDUR
          MOVE      ZERO,FNUMOPR
          MOVE      ZERO,FTOTTIM
          MOVE      "000000",XPRDDTE
.
          PACK      KEY21,DATEFR,STRTCODE,STRTOPER
LSOS0500  CALL      RDOPSOS1             * read record in case existing
          BRANCH    OVRCD,LSOS1000       * record doesn't exist, read next
          GOTO      LSOS1050             * record exists
.
LSOS1000  CALL      RKOPSOS1             * read next record
          BRANCH    OVRCD,LSOS8000       * last record read
.
LSOS1050  MATCH     OPSPDATE,DATETO      * Current date past the end date range
          GOTO      LSOS8000 IF LESS     * yes
.
          MATCH     OPSPDOCT,ENDCODE     * Current doc. past the end doc.range
          GOTO      LSOS3080 IF LESS     * yes, get next date
.
.  doctor code within end range, check for start range
.  
          MATCH     STRTCODE,OPSPDOCT    * Current doctor before start range
          GOTO      LSOS3085 IF LESS     * yes, get next doctor
.
          MATCH     OPSPOPER,ENDOPER    * Current oper. past the end oper. range
          GOTO      LSOS3090 IF LESS    * yes, get next doctor.
.
.  operation code within end range, check for start range
.  
          MATCH     STRTOPER,OPSPOPER   * Current oper. before start range
          GOTO      LSOS3095 IF LESS    * yes
. 
. --- valid date range, doctor range & operation range
.
          ADD       ONE,FIELD            * increment number of records
.                                        * written to temp. index file
          BRANCH    COPTION,LSOS1060
          PACK      KEY15,SP6,OPSPOPER
.
          GOTO      LSOS1070
.
LSOS1060  PACK      KEY15,OPSPDOCT,OPSPOPER
LSOS1070  CALL      RDDT0000             * read temp. index file
          BRANCH    OVRCD,LSOS2000       * record doesn't exist
.
. -- record exists, see if temp. file need to be updated
.
. -- compare max. duration
.
          COMPARE   OPSPHTIM,FMAXDUR      * Need to update max. duration ?
          GOTO      LSOS1100 IF LESS      * yes[
          GOTO      LSOS1200           
.
. -- need to update max. duration
.
LSOS1100  MOVE      OPSPHTIM,FMAXDUR
.
. -- compare min. duration
.
LSOS1200  COMPARE   FMINDUR,OPSPLTIM       * Need to update min. duration ?
          GOTO      LSOS1500 IF NOT LESS   * no
.
. -- need to update min. duration
.
          MOVE      OPSPLTIM,FMINDUR
.
. -- update file ---
.
LSOS1500  ADD       OPSPNOPR,FNUMOPR
          ADD       OPSPTTIM,FTOTTIM
.
          MATCH     OPSPDATE,XPRDDTE
          IF        @LESS
            MOVE      OPSPDATE,XPRDDTE
          ENDIF
.
          CALL      UPD0000              
          GOTO      LSOS1000
.
LSOS2000  BRANCH    COPTION,LSOS2100     * Calling proc. is option 1 (surgeon)
          MOVE      SP6,XDOCT
          GOTO      LSOS2200
.
LSOS2100  MOVE      OPSPDOCT,XDOCT
LSOS2200  MOVE      OPSPOPER,XOPER
          PACK      KEY15,XDOCT,XOPER
          MOVE      OPSPTTIM,FTOTTIM
          MOVE      OPSPNOPR,FNUMOPR
          MOVE      OPSPLTIM,FMINDUR
          MOVE      OPSPHTIM,FMAXDUR
          MOVE      OPSPDATE,XPRDDTE
.
          CALL      WRTT0000             * write to temp. index file
          GOTO      LSOS1000
.
LSOS3080  PACK      KEY21,OPSPDATE,ZZZZ  * get date read, position to
.                                        * end for that date (so to get next
.                                        * date )
          GOTO      LSOS0500
.
.  get date read, position starting doctor code 
.
LSOS3085  PACK      KEY21,OPSPDATE,STRTCODE,STRTOPER  
          GOTO      LSOS0500
.
LSOS3090  PACK      KEY21,OPSPDATE,OPSPDOCT,ZZZZ   * get date read and doctor
.                                                  * read, position to end
.                                                  * for that date and doctor.
.                                                  * (so to get next doctor )
          GOTO      LSOS0500
.
LSOS3095  PACK      KEY21,OPSPDATE,OPSPDOCT,STRTOPER
          GOTO      LSOS0500
.
LSOS8000  COMPARE   ZERO,FIELD           * any records written to index file
          GOTO      LSOS9000 IF EQUAL    * no
          MOVE      FALSE,EXIT
          GOTO      LSOS9999
.
LSOS9000  MOVE      TRUE,EXIT
LSOS9999  RETURN
.
.***************************************************************************
.*                       REPC0000                Called by : ML0000        *
.*         loop through temp. index file and update/write a record to      *
.*         the OPRAVEFD file. Print the operation average (surgeon)        *
.***************************************************************************
REPC0000  MOVE      ZERO,CPAGENO                 * initialize page no. to 0.
          MOVE      ONE,CNOUNDLN                 * No underlines for previous
          MOVE      ZERO,CLNO                    * initialize no. of records
.                                                * page
          CLOCK     TIME,CTIMEIS                 * get time report started
          
          MOVE      SCRNTYPE,CPHDROPT
          MOVE      "wxyz",SDOCT                 * initialize doctor
          MOVE      ZERO,NUMREC                  * initialize number of records
          CALL      PAGE0000                     * display headings
.
          DISPLAY   *P40:24,"Code : "
.
          PACK      KEY15,SP10,SP5
          CALL      RSDT0000                  * position pointer
.
REPC1000  CALL      RKDT0000                  * read next record
          BRANCH    OVRCD,REPC8000            * end of report read
.
          DISPLAY   *P47:24,*V2LON,XDOCT,SP2,XOPER;  * display for user
.
          MATCH     SDOCT,XDOCT               * same doctor as previous
          GOTO      REPC1200 IF EQUAL         * yes
.
          COMPARE   ZERO,NUMREC
          GOTO      REPC1100 IF EQUAL         * no operations printed yet
.
. --- a change of doctor, therefore print number of operations for previous
. doctor
.
          CALL      UND80
          PRINT     *1,"Number of Operations = ",NUMREC,*N 
          ADD       TWO,CLNO
.
. ---- print operation heading
.
REPC1100  CALL      HEAD0000               
.
          MOVE      ZERO,NUMREC
.
          MOVE      FMAXDUR,TMAXDUR               * move to a FORM 4
          MOVE      FMINDUR,TMINDUR
.
REPC1200  PACK      KEY15,XOPER,XDOCT
          CALL      RDOPAVE1                  * read OPRAVEFD file
          BRANCH    OVRCD,REPC2000            * record not found
          MOVE      TWO,AUDIFLAG              * before change audit
          CALL      AUAVE000                  * write record audit
          MOVE      OPAVAVER,OLDAVER          * get old average
.         
          MOVE      FTOTTIM,OPERAVER          * move total time used
          DIV       FNUMOPR,OPERAVER          * get operation average
          MOVE      OPERAVER,OPAVAVER
          MOVE      FNUMOPR,TNUMOPR           * move to a DIM 6
          CALL      UPOPAVE1                  * update operation average file
          MOVE      THREE,AUDIFLAG            * before change audit
          CALL      AUAVE000                  * write record audit
.
          GOTO      REPC4000
.
. -- no record found in OPRAVEFD file
.
REPC2000  MOVE      " N/A",OLDAVER
          MOVE      FTOTTIM,OPERAVER          * move total time used
          DIV       FNUMOPR,OPERAVER          * get operation average
          MOVE      OPERAVER,OPAVAVER
          MOVE      FNUMOPR,TNUMOPR
          MOVE      XOPER,OPAVCODE
          MOVE      XDOCT,OPAVDOCT
          CALL      WROPAVE1                  * write to operation average file
          MOVE      ONE,AUDIFLAG              * write flag
          CALL      AUAVE000                  * write audit record
.
.
. -- print details
.
REPC4000  PACK      KEY9,XOPER
.
          MOVE      FMAXDUR,TMAXDUR               * move to a FORM 4
          MOVE      FMINDUR,TMINDUR
          BRANCH    OPCNCODE,REPC4500        * read PATITMFD file
          PACK      ODESC,SP30,SP30,SP10
          MOVE      "01",DIM2
          PACK      KEY8,XPRDDTE,DIM2,SP70
          MOVE      KEY8,ICDRDDTE
          CALL      RDPTICO1
          MOVE      ODESC,OPERDESC
          GOTO      REPC4800

REPC4500  PACK      IDESC,SP30,SP10
          PACK      KEY8,XPRDDTE,DIM2,SP70
          REP       " 0",KEY8
          PACK      KEY17,KEY9,KEY8,SP70
          CALL      PATITMRD                 * get item
          MOVE      IDESC,OPERDESC
.
REPC4800  MOVE      OPERAVER,FORM4
          PRINT     *1,"| ",XOPER,SP1,OPERDESC,"| ",OLDAVER," | ",FORM4:
                    " | ",TNUMOPR," | ",TMAXDUR," | ",TMINDUR," |" 
          ADD       ONE,CLNO
.
          ADD       ONE,NUMREC              * increment number of operations
.
          COMPARE   "55",CLNO                     * New page needed ?
          GOTO      REPC5000 IF NOT LESS          * Yes
          GOTO      REPC1000                        
.                                           
REPC5000  CALL      PAGE0000
          CALL      HEAD0000
          GOTO      REPC1000 
.
REPC8000  CALL      UND80
          PRINT     *1,"Number of Operations = ",NUMREC,*N 
.          
          PRINT     *1,"*** End of Report *** " 
.
REPC9999  RETURN
.
.***************************************************************************
.*                HEAD0000                           Called by : REPC0000  *
.*        Parameter required COPTION - 1 - for Option 1 (Surgeon Average)  *
.*                                     2 - for Option 2 (Hospital Average) *
.*            print doctor, operation heading                              *
.***************************************************************************
HEAD0000  BRANCH    COPTION,HEAD1000        * Calling proc. is Option 1
          PRINT     *1,"Hospital Averages"
          GOTO      HEAD1500
.
HEAD1000
.
. -- format doctors name --
.
          MOVE      SP6,DTITL
          MOVE      SP30,DGNAME
          MOVE      SP30,DSNAME
          PACK      KEY6,XDOCT
          CALL      RDDOCT1             * read PATDO1FD file
          CALL      DOCF00000 
          MOVE      PACFNAME,DOCTDESC
.
. -- print doctors name 
.
          PRINT     *1,"Doctor : ",XDOCT,SP2,DOCTDESC
.
HEAD1500  CALL      UND80      
          PRINT     *1,"|",*43,"|  Old |  New |------ Based on ------|"
          PRINT     *1,"|","Operation",*43,"| Aver | Aver | No. Op | Max. | ":
                    "Min. |" 
          CALL      UND80
          ADD       THREE,CLNO                 * increment line count
                    
          MOVE      XDOCT,SDOCT               * move doctor code
HEAD9999  RETURN
.
.
.***************************************************************************
.*                    PAGE0000                        Called by : REPC0000 *
.*        increments page number and displays all necessary heading        *
.*        ie HEAD80 and starting and ending codes and description         *
.***************************************************************************
PAGE0000  CALL      HEAD80                      * print heading ( 1st 3 lines) 
.
PAGE1000  MATCH     SP6,STRTCODE              * Start ?
          GOTO      PAGE1500 IF EQUAL         * yes
.
          MOVE      STRTDESC,TRUNCDSC        * truncate from DIM40 to DIM30
.
          PRINT     *20,"From Doctor    : ",STRTCODE,SP5,TRUNCDSC
          GOTO      PAGE1600

PAGE1500  PRINT     *20,"From Doctor    : ",START
 
PAGE1600  MATCH     ENDCODE,ZZZZ               * Finish ?
          GOTO      PAGE1900 IF NOT EQUAL      * no
.
          PRINT     *20,"To   Doctor    : ",FINISH,*N
          GOTO      PAGE2000
.
PAGE1900  MOVE      ENDDESC,TRUNCDSC
          PRINT     *20,"To   Doctor    : ",ENDCODE,SP5,TRUNCDSC,*N
.
PAGE2000  MATCH     SP9,STRTOPER              * Starting operation ?
          GOTO      PAGE3000 IF EQUAL         * yes
.
          MOVE      STOPDESC,TRUNCDSC         * truncate to DIM30
          PRINT     *20,"From Operation : ",STRTOPER,SP2,TRUNCDSC
          GOTO      PAGE3500 
.
PAGE3000  PRINT     *20,"From Operation : ",START
.
PAGE3500  MATCH     ENDOPER,ZZZZ             * Finish operation ?
          GOTO      PAGE3900 IF NOT EQUAL    * no
.
          PRINT     *20,"To   Operation : ",FINISH,*N
          GOTO      PAGE4000
.
PAGE3900  MOVE      ENOPDESC,TRUNCDSC
          PRINT     *20,"To   Operation : ",ENDOPER,SP2,TRUNCDSC,*N
.
PAGE4000  MATCH     SP6,STRTDATE              * starting period = Start ?
          GOTO      PAGE4200 IF EQUAL         * yes
.
          UNPACK    STRTDATE,CCENT,CYEAR,CMON
          PACK      SDATE,CMON,SLASH,CCENT,CYEAR
          PRINT     *20,"From ",CPERMTH,*35,": ",SDATE,SP4,PRFDATE
.
          GOTO      PAGE4500
.
PAGE4200  PRINT     *20,"From ",CPERMTH,*35,": ",START
.
PAGE4500  MATCH     ENDDATE,ZZZZ
          GOTO      PAGE4800 IF EQUAL           * ending date = Finish ?
.
          UNPACK    ENDDATE,CCENT,CYEAR,CMON
          PACK      ENDATE,CMON,SLASH,CCENT,CYEAR
          PRINT     *20,"To   ",CPERMTH,*35,": ",ENDATE,SP4,PRTDATE,*N
          GOTO      PAGE5000
.
PAGE4800  PRINT     *20,"To   ",CPERMTH,*35,": ",FINISH,*N
.
PAGE5000  ADD       NINE,CLNO
PAGE9999  RETURN
+
.
.******************************************************************************
.*                          AUDAVE000                                         * 
.*             audit routine                                                  *
.******************************************************************************
AUAVE000  BRANCH    OPCNAUDA,AUAVE999 
.
          COMPARE   FIVE,AUDIFLAG        * test to delete B audit
          GOTO      AUAVE600 IF EQUAL
.
          COMPARE   THREE,AUDIFLAG       * is it an after change audit?
          GOTO      AUAVE100 IF EQUAL    * Yes. So don't change time
.
          CALL      IBACLOCK             * get current date
          PACK      OPAVAUDD,CCC,CYY,CMM,CDD
          REP       " 0",OPAVAUDD
          MOVE      CTIMEIS,OPAVAUDT     * clock current time
.
AUAVE100  MOVE      ONE,OPAVAUDS         * not printed
          MOVE      PASSCODE,OPAVAUDO    * get user id
          MOVE      PORT,OPAVAUDP        * get port number
.
          MOVE      AUDIFLAG,OPAVAUDR
          REPLACE   "1A2B3C4D",OPAVAUDR
          PACK      KEY19,OPAVAUDD,OPAVAUDT,OPAVAUDP,OPAVAUDR
          CALL      AWOPAVE              * write audit record
          GOTO      AUAVE999
.
.         now delete B audit
.
AUAVE600  PACK      KEY19,OPAVAUDD,OPAVAUDT,OPAVAUDP,ANSB
          CALL      ADOPAVE              * delete audit record
.
AUAVE999  RETURN
.
+
          INC       STD001IO
          INC       TFILENAM                * Generate Temp File Name
          INC       IBASEQIO/INC            * Sequential Numbers File
          INC       WEBERRIO/INC            * Web Server Error Logging
.
          INC       PATCODIO/INC
          INC       PATDO1IO/INC
          INC       PATDRGIO/INC
          INC       OPRAVEIO/INC
          INC       OPRSOSIO/INC
          INC       PATICOIO/INC
          INC       PATITMIO/INC
          INC       PATDOCDS
          INC       PATDOCKY
          INC       PATITMDS      
          INC       PATITMRD      
          INC       PATCOMN3
.--------------------------------------------------------------------------
