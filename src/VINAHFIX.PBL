.*****************************************************************************
.* System    :   Allied Health                                               *
.* Program   :   VINAHFIX                                                    *
.* Desc      :   Program for resetting the status to "waiting" for an entire *
.*               file or a batch.                                            *
.*****************************************************************************
.* Date      :   25/09/2013                                                  *
.* Author    :   Steve Armstrong   CAR 292088                                *
.* Function  :   This program allows the user to reset data records at       *
.*               a batch level or a file level.  Resetting at the batch      *
.*               level, sets the batch status to "resubmitted" and all       *
.*               associated detail records are set to a status of "waiting". *
.*               Resetting at a file level, sets the file status to "purged" *
.*               as well as resetting associated batches and details records.*
.* Modifications:                                                            *
.*****************************************************************************
.*        V11.02.01  23/02/2022  Ebon Clements    TSK 0917111                *
.*                   Added deletion of extract generated A40 merge messages  *
.*                   PBAT0500                                                *
.*****************************************************************************
.*        V10.15.01  15/10/2019  Ebon Clements    TSK 0882862                *
.*                   Check for a duplicate waiting record when changing the  *
.*                   status from submitted to waiting. If so delete the      *
.*                   waiting record as we will use the submitted records     *
.*                   values to re create it. PBAT0000                        *
.*****************************************************************************
.*        V10.14.01  17/04/2019  Steve Armstrong  TSK 0868837                *
.*                   Recompiled for changes to ALLHDTFD.                     *
.*****************************************************************************
.*        V10.04.01  15/05/2014  Steve Armstrong   CAR 285465                *
.*                   Recompiled for changes to ALLHDTFD                      *
.*****************************************************************************
.*        V10.03.01  01/10/2013  Steve Armstrong   CAR                       *
.*                   Added displays as records are being processed.          *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       ALLHBTFD/INC
          INC       ALLHDTFD/INC
          INC       ALLHHDFD/INC
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
BATCHNUM  DIM       20
CALLPOSN  FORM      1
DIM20A    DIM       20
DIM20B    DIM       20
FIELD     FORM      2
FILENAME  DIM       20
OPTNDESC  DIM       13
SAVKEY40  DIM       40
SAVKEY62  DIM       62
STATDESB  DIM       25
STATDESF  DIM       25
TMPKEY40  DIM       40[18]
TMPKEY20  DIM       20[18]
.
.
. PROGRAM CONSTANT
. ----------------
OPTDESC1  INIT      " File reset "
OPTDESC2  INIT      " Batch reset "
STATBAT0  INIT      "Extracted                "
STATBAT1  INIT      "Submitted                "
STATBAT2  INIT      "Rejected                 "
STATBAT3  INIT      "Resubmitted              "
STATBAT4  INIT      "Accepted                 "
STATFIL0  INIT      "Extracted                "
STATFIL1  INIT      "Submitted                "
STATFIL2  INIT      "Rejected                 "
STATFIL3  INIT      "Accepted with Rejections "
STATFIL4  INIT      "Accepted                 "
STATFIL5  INIT      "Rejections Dealt With    "
STATFIL6  INIT      "Purged                   "
TILDA40   INIT      "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
.
.
PRGID     INIT      "VINAHFIX"
PRGNAM    INIT      "VINAH - Reset File/Batch"
VERSION   INIT      "V12.00.00"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
MAIN0100  CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9999          * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,MAIN1000:      * proceed with file reset
                            MAIN1000       * proceed with batch reset
.
MAIN1000  PERFORM   COPTION,GFIL0000:      * get file
                            GBAT0000       * get batch
          BRANCH    EXIT,MAIN0100          * nothing entered
.
          CALL      CONTQST                * Ok to continue ?
          BRANCH    CEXIT,MAIN5000:        * yes
                          MAIN1000:        * no
                          MAIN0100         * cancel
.
MAIN5000  BRANCH    COPTION,MAIN6000:      * file reset
                            MAIN7000       * batch reset
.
MAIN6000  CALL      PFIL0000               * process file
          GOTO      MAIN1000
.
MAIN7000  CALL      PBAT0000               * process batch
          GOTO      MAIN1000
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"allhbtaf";
          OPEN      ALLHBTA1,"allhbtaf"
          OPEN      ALLHBTA2,"allhbtaf"
.
          DISPLAY   *P64:24,"allhdtaf";
          OPEN      ALLHDTA2,"allhdtaf"
.
          DISPLAY   *P64:24,"allhhdaf";
          OPEN      ALLHHDA1,"allhhdaf"
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        Get user options or exit                           *
.*    Returns:  EXIT    = 0  Run fixit                                       *
.*                        1  Exit option selected                            *
.*              COPTION   1 = File reset selected                            *
.*                        2 = batch reset selected                           *
.*****************************************************************************
.
OPTN0000  HLINE     *G37,2,53,80
          DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Run File Reset":
                    *P1:6,*V2LON,TWO,*HOFF,". Run Batch Reset"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run file reset
                            OPTN9000             * run batch reset
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  LOAD      OPTNDESC,COPTION,OPTDESC1,OPTDESC2
          DISPLAY   *P53:2,*V2LON,*+,OPTNDESC
          MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               PFIL0000              Called by: MAIN0000   *
.*              Reset the allhhdaf record for a file                         *
.* Requires: Valid read on allhhdaf record (index 1) for selected file       *
.*****************************************************************************
.
.         First, update the status of the allhhdaf record
.
PFIL0000  MOVE      "6",ALHHSTAT
          CALL      UPALHHD1                     * update record
.
.         Loop through the batches associated with this file
.
          PACK      KEY40,ALHHFNAM,SP70
          CALL      RSALHBT1                     * position on batch
PFIL0500  CALL      RKALHBT1                     * read next record
          BRANCH    OVRCD,PFIL9000               * eof - finished
.
          MATCH     ALHHFNAM,ALHBFNAM            * same file still ?
          GOTO      PFIL9000 IF NOT EQUAL        * no - finished
.
.         A valid batch for the file has been found, so reset all
.         the allhdtaf records for this batch.
.
          CALL      PBAT0000
          GOTO      PFIL0500                     * get next batch
.
PFIL9000  DISPLAY   *P1:24,*EL,"Fixit completed.  ";
          CALL      HITENTER
.
PFIL9999  RETURN
+
.*****************************************************************************
.*                               PBAT0000              Called by: MAIN0000   *
.*              Reset all the allhdtaf records for a batch                   *
.* Requires: Valid read on allhbtaf record (index 1) for selected batch      *
.*****************************************************************************
.
.         First, update the status of the allhbtaf record
.
PBAT0000  DISPLAY   *P1:24,*EL,"Processing Batch: ",*V2LON,ALHBBNUM;
.
          MOVE      "3",ALHBSTAT
          CALL      UPALHBT1                     * update record
.
PBAT0500  PACK      KEY62,ALHBBNUM,SP70
          CALL      RSALHDT2                     * position on batch
          CALL      RKALHDT2                     * read next record
          BRANCH    OVRCD,PBAT9000               * eof - finished
.
          MATCH     ALHBBNUM,ALHDBNUM            * same batch still ?
          GOTO      PBAT9000 IF NOT EQUAL        * no - finished
.
.         If this is a PMI or REF record, then remove the record as it
.         will be automatically created when the batch is re-extracted.
.
          MATCH     "REF",ALHDMTYP               * Referral Out record ?
          GOTO      PBAT5000 IF EQUAL            * yes - delete
.
          MATCH     "ADT-A04",ALHDMTYP           * Add PMI record ?
          GOTO      PBAT5000 IF EQUAL            * yes - delete
.
          MATCH     "ADT-A08",ALHDMTYP           * Update PMI record ?
          GOTO      PBAT5000 IF EQUAL            * yes - delete
.
          MATCH     "ADT-A40",ALHDMTYP           * Merge PMI record ?
          GOTO      PBAT5000 IF EQUAL            * yes - delete
.
.         The record just needs updating
.
          PACK      SAVKEY62,ALHDBNUM,ALHDSTAT,ALHDURNO,ALHDVISN,ALHDCONT:
                             ALHDDTTM,ALHDRTYP,ALHDACTN,SP70
.
          PACK      ALHDSTAT,SP1,ZERO            * update status to "waiting"
          MOVE      SP20,ALHDBNUM                * clear batch number
          MOVE      SP20,ALHDMESI                * clear message id
.
          PACK      KEY62,ALHDBNUM,ALHDSTAT,ALHDURNO,ALHDVISN,ALHDCONT:
                          ALHDDTTM,ALHDRTYP,ALHDACTN,SP70
          CALL      RAALHDT2                     * Check for a duplicate
          IF        OVRCD<>1
            CALL      DEALHDT2                   * Delete duplicate waiting
          ENDIF                                  * record as it will re created
.
          PACK      KEY62,SAVKEY62,SP70
          CALL      RDALHDT2                     * Restore orginal record
          BRANCH    OVRCD,PBAT0500
.
          MOVE      " 0",ALHDSTAT                * set status to "waiting"
          MOVE      SP20,ALHDBNUM                * clear batch number
          MOVE      SP20,ALHDMESI                * clear HL7 message id
.
          CALL      UPALHDT2                     * update record
          GOTO      PBAT0500
.
.         Delete the allhdtaf record
.
PBAT5000  PACK      KEY62,ALHDBNUM,ALHDSTAT,ALHDURNO,ALHDVISN,ALHDCONT:
                          ALHDDTTM,ALHDRTYP,ALHDACTN
          CALL      DEALHDT2
          GOTO      PBAT0500
.
PBAT9000  IF        COPTION = 2
            DISPLAY   *P1:24,*EL,"Fixit completed.  ";
            CALL      HITENTER
          ENDIF
.
PBAT9999  RETURN
+
.*****************************************************************************
.*                               GFIL0000              Called by: MAIN0000   *
.*                       Get the user to key in the file name                *
.* Returns: EXIT  0 = Valid filename selected                                *
.*                1 = Nothing entered                                        *
.*          FILENAME - Selected file number                                  *
.*****************************************************************************
.
.>>>>>>>  Need to add check to only allow certain statuses (Rejected & Extracted)
.
GFIL0000  KEYIN     *P1:4,*EF,"File Number:":
                    *P14:4,*V2LON,FILENAME
.
          PACK      FILENAME,FILENAME,SP20
          MATCH     SP20,FILENAME                * anything entered ?
          GOTO      GFIL9100 IF EQUAL            * no - finished
.
          MATCH     "?",FILENAME                 * "?" input ?
          GOTO      GFIL1000 IF NOT EQUAL        * no - validate file number
.
          MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
          CALL      DSPF0000
          IF        EXIT = 0
            CALL      PUTSCR00                   * restore screen
            DISPLAY   *P14:4,*V2LON,FILENAME
            GOTO      GFIL9050
          ELSE
            CALL      FRESCR00                   * free screen
            GOTO      GFIL0000
          ENDIF
.
GFIL1000  MOVE      FILENAME,KEY20
          CALL      RDALHHD1                     * position on file 
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"File not found.  ";
            CALL      HITENTER
            GOTO      GFIL0000
          ENDIF
.
.         Make sure the file status is "extracted"
.
GFIL9050  MATCH     "0",ALHHSTAT                 * status "extracted" ?
          IF        !@EQUAL
            DISPLAY   *P1:24,*EL,*B,"File status not valid.  ";
            CALL      HITENTER
            GOTO      GFIL0000
          ENDIF
.
          DISPLAY   *P37:4,"(File:",*V2LON,ALHHFNAM,*HOFF,")":
                    *P37:5,"(Period:"
          UNPACK    ALHHSDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P45:5,*V2LON,CPCDATE,*HOFF," - "
          UNPACK    ALHHEDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P58:5,*V2LON,CPCDATE,*HOFF,")"
.
          MOVE      ZERO,EXIT
          GOTO      GFIL9999
.
GFIL9100  MOVE      ONE,EXIT
.
GFIL9999  RETURN
+
.***************************************************************************
.*                             DSPF0000               Called by: GFIL0000  *
.*                  Display files for selection by user                    *
.* Returns:  EXIT  0 = valid file name selected                            *
.*                 1 = Exit selected                                       *
.*           FILENAME - file name selected                                 *
.*           Valid READ on allhhdaf record                                 *
.***************************************************************************
.
DSPF0000  DISPLAY   *P1:4,*EF,*ULON,*V2LON,"Itm",*P5:4,"     File Name      ":
                    *P26:4,"Start Date",*P37:4," End Date ":
                    *P48:4,"         Status          "
.
          MOVE      ONE,CPAGENO
          MOVE      FOUR,CVERT                   * Reset line number
          MOVE      ZERO,FIELD                   * Reset record count
.
          MOVE      TILDA40,KEY20
          CALL      RSALHHD1                     * position in file
DSPF1000  CALL      RPALHHD1                     * read previous record
          BRANCH    OVRCD,DSPF5000               * end of file
.
          ADD       ONE,CVERT                    * increment line count
.
          COMPARE   TWENTY3,CVERT                * page full ?
          GOTO      DSPF4000 IF NOT LESS         * yes
.
DSPF3000  ADD       ONE,FIELD   
          MOVE      STATFIL0,STATDESF
          MOVE      ALHHSTAT,FORM1
          LOAD      STATDESF,FORM1,STATFIL1,STATFIL2,STATFIL3,STATFIL4:
                                   STATFIL5,STATFIL6
          DISPLAY   *P1:CVERT,*V2LON,FIELD,*HOFF,*P5:CVERT,ALHHFNAM
          UNPACK    ALHHSDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P26:CVERT,CPCDATE
          UNPACK    ALHHEDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          DISPLAY   *P37:CVERT,CPCDATE,*P48:CVERT,STATDESF
          MOVE      ALHHFNAM,TMPKEY20[FIELD]
          GOTO      DSPF1000
.
.         new page needed 
.
DSPF4000  BRANCH    CPAGENO,DSPF4500
.
.         in middle pages : Next & First options
.
DSPF4100  MOVE      "1",CALLPOSN                 * set call position
          CALL      KEYA0000                     * keyin response
          BRANCH    EXIT,DSPF9100:               * exit
                         DSPF7000:               * next
                         DSPF8000                * previous
          GOTO      DSPF6000                     * number entered
.
.         on first page : Next option
.
DSPF4500  MOVE      "2",CALLPOSN                 * set call position
          CALL      KEYA0000                     * keyin response
          BRANCH    EXIT,DSPF9100:               * exit
                         DSPF7000:               * next
                         DSPF5900                * previous
          GOTO      DSPF6000                     * number entered
.
.         end of data
.
DSPF5000  BRANCH    CPAGENO,DSPF5500
.
.         in middle pages : First option
.
DSPF5100  MOVE      "3",CALLPOSN                 * set call position
          CALL      KEYA0000                     * keyin response
          BRANCH    EXIT,DSPF9100:               * exit
                         DSPF5900:               * next
                         DSPF8000                * prev
          GOTO      DSPF6000                     * number entered
.
.         on first page : No options
.
DSPF5500  MOVE      "4",CALLPOSN                 * set call position
          CALL      KEYA0000                     * keyin response
          BRANCH    EXIT,DSPF9100:               * exit
                         DSPF5900:               * next
                         DSPF5900                * previous
          GOTO      DSPF6000                     * number entered
.
DSPF5900  BEEP
DSPF5910  BRANCH    CALLPOSN,DSPF4100:
                             DSPF4500:
                             DSPF5100:
                             DSPF5500
.
.         number entered
.
DSPF6000  MOVE      TMPKEY20[FORM2],KEY20
          CALL      RDALHHD1
          BRANCH    OVRCD,DSPF5900
.
          MOVE      ALHHFNAM,FILENAME            * save file name
          GOTO      DSPF9000
.
.         next screen selected
.
DSPF7000  MOVE      FIVE,CVERT
          ADD       ONE,CPAGENO
          DISPLAY   *P1:CVERT,*EF
          MOVE      ZERO,FIELD
          GOTO      DSPF3000
.
.         previous screen selected
.
DSPF8000  MOVE      TMPKEY20[1],KEY40
          CALL      RDALHHD1                     * reread first record on screen
          MOVE      ZERO,FORM2                   * initialise count
          WHILE     FORM2 <= 17
            CALL      RKALHHD1                   * read previous record
            BRANCH    OVRCD,DSPF0000             * eof - start again
.
            ADD       ONE,FORM2                  * increment count
          DO
.
          MOVE      FIVE,CVERT                   * reset line position
          SUB       ONE,CPAGENO                  * decrement page number
          MOVE      ZERO,FIELD                   * reset record counter
          DISPLAY   *P1:CVERT,*EF
          GOTO      DSPF3000
.
DSPF9000  MOVE      ZERO,EXIT
          GOTO      DSPF9999
.
DSPF9100  MOVE      ONE,EXIT
.
DSPF9999  RETURN
+
.*****************************************************************************
.*                               GBAT0000              Called by: MAIN0000   *
.*                       Get the user to key in the batch number             *
.* Returns: EXIT  0 = Valid batch number selected                            *
.*                1 = Nothing entered                                        *
.*          BATCHNUM - Selected batch number                                 *
.*****************************************************************************
.
.>>>>>>>  Need to add check to only allow certain statuses (Rejected & Extracted)
.
GBAT0000  KEYIN     *P1:4,*EF,"Batch Number:":
                    *P15:4,*V2LON,BATCHNUM
.
          PACK      BATCHNUM,BATCHNUM,SP20
          MATCH     SP20,BATCHNUM                * anything entered ?
          GOTO      GBAT9100 IF EQUAL            * no - finished
.
          MATCH     "?",BATCHNUM                 * "?" input ?
          GOTO      GBAT1000 IF NOT EQUAL        * no - validate batch number
.
          MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
          CALL      DSPB0000
          IF        EXIT = 0
            CALL      PUTSCR00                   * restore screen
            DISPLAY   *P15:4,*V2LON,BATCHNUM
            GOTO      GBAT9050
          ELSE
            CALL      FRESCR00                   * free screen
            GOTO      GBAT0000
          ENDIF
.
GBAT1000  RJUSTIFY  BATCHNUM
.
          PACK      KEY40,BATCHNUM,SP70
          CALL      RSALHBT2                     * position on batch number
          CALL      RKALHBT2                     * read next record
          BRANCH    OVRCD,GBAT8000               * eof - error
.
          MATCH     BATCHNUM,ALHBBNUM            * same batch number still ?
          GOTO      GBAT9000 IF EQUAL            * yes
.
GBAT8000  DISPLAY   *P1:24,*EL,*B,"Batch not on file.  ";
          CALL      HITENTER
          GOTO      GBAT0000
.
.         Valid batch record has been found, so read using index 1
.         as we will update the record using this index
.
GBAT9000  PACK      KEY40,ALHBFNAM,ALHBBNUM
          CALL      RDALHBT1
          BRANCH    OVRCD,GBAT0000
.
.         Make sure the batch status is either "extracted" or "rejected"
.
GBAT9050  MATCH     "0",ALHBSTAT                 * status "extracted" ?
          GOTO      GBAT9070 IF EQUAL            * yes
.
          MATCH     "2",ALHBSTAT                 * status "rejected" ?
          GOTO      GBAT9070 IF EQUAL            * yes
          
          DISPLAY   *P1:24,*EL,*B,"Batch status not valid.  ";
          CALL      HITENTER
          GOTO      GBAT0000
.
GBAT9070  DISPLAY   *P37:4,"(File:",*V2LON,ALHBFNAM,*HOFF,"  U/R:":
                    *V2LON,ALHBURNO,*HOFF,")"
          MOVE      ZERO,EXIT
          GOTO      GBAT9999
.
GBAT9100  MOVE      ONE,EXIT
.
GBAT9999  RETURN
+
.***************************************************************************
.*                             DSPB0000               Called by: GBAT0000  *
.*                  Display batches for selection by user                  *
.* Returns:  EXIT  0 = valid batch number selected                         *
.*                 1 = Exit selected                                       *
.*           BATCHNUM - batch number selected                              *
.*           Valid READ on allhbtaf record (using index 2)                 *
.***************************************************************************
.
DSPB0000  DISPLAY   *P1:4,*EF,*ULON,*V2LON,"Itm",*P5:4,"       Batch        ":
                    *P26:4,"        File        ",*P47:4,"   U/R  ":
                    *P56:4,"         Status          "
.
          MOVE      ONE,CPAGENO
          MOVE      FOUR,CVERT                   * Reset line number
          MOVE      ZERO,FIELD                   * Reset record count
.
          MOVE      TILDA40,KEY40
          CALL      RSALHBT2                     * position in file
DSPB1000  CALL      RPALHBT2                     * read previous record
          BRANCH    OVRCD,DSPB5000               * end of file
.
          ADD       ONE,CVERT                    * increment line count
.
          COMPARE   TWENTY3,CVERT                * page full ?
          GOTO      DSPB4000 IF NOT LESS         * yes
.
DSPB3000  ADD       ONE,FIELD   
          MOVE      STATBAT0,STATDESB
          MOVE      ALHBSTAT,FORM1
          LOAD      STATDESB,FORM1,STATBAT1,STATBAT2,STATBAT3,STATBAT4
          DISPLAY   *P1:CVERT,*V2LON,FIELD,*HOFF,*P5:CVERT,ALHBBNUM:
                    *P26:CVERT,ALHBFNAM,*P47:CVERT,ALHBURNO,*P56:CVERT,STATDESB
          PACK      TMPKEY40[FIELD],ALHBBNUM,ALHBFNAM
          GOTO      DSPB1000
.
.         new page needed 
.
DSPB4000  BRANCH    CPAGENO,DSPB4500
.
.         in middle pages : Next & First options
.
DSPB4100  MOVE      "1",CALLPOSN                 * set call position
          CALL      KEYA0000                     * keyin response
          BRANCH    EXIT,DSPB9100:               * exit
                         DSPB7000:               * next
                         DSPB8000                * previous
          GOTO      DSPB6000                     * number entered
.
.         on first page : Next option
.
DSPB4500  MOVE      "2",CALLPOSN                 * set call position
          CALL      KEYA0000                     * keyin response
          BRANCH    EXIT,DSPB9100:               * exit
                         DSPB7000:               * next
                         DSPB5900                * previous
          GOTO      DSPB6000                     * number entered
.
.         end of data
.
DSPB5000  BRANCH    CPAGENO,DSPB5500
.
.         in middle pages : First option
.
DSPB5100  MOVE      "3",CALLPOSN                 * set call position
          CALL      KEYA0000                     * keyin response
          BRANCH    EXIT,DSPB9100:               * exit
                         DSPB5900:               * next
                         DSPB8000                * prev
          GOTO      DSPB6000                     * number entered
.
.         on first page : No options
.
DSPB5500  MOVE      "4",CALLPOSN                 * set call position
          CALL      KEYA0000                     * keyin response
          BRANCH    EXIT,DSPB9100:               * exit
                         DSPB5900:               * next
                         DSPB5900                * previous
          GOTO      DSPB6000                     * number entered
.
DSPB5900  BEEP
DSPB5910  BRANCH    CALLPOSN,DSPB4100:
                             DSPB4500:
                             DSPB5100:
                             DSPB5500
.
.         number entered
.
DSPB6000  UNPACK    TMPKEY40[FORM2],DIM20A,DIM20B
          PACK      KEY40,DIM20B,DIM20A
          CALL      RDALHBT1
          BRANCH    OVRCD,DSPB5900
.
          MOVE      ALHBBNUM,BATCHNUM            * save batch number
          GOTO      DSPB9000
.
.         next screen selected
.
DSPB7000  MOVE      FIVE,CVERT
          ADD       ONE,CPAGENO
          DISPLAY   *P1:CVERT,*EF
          MOVE      ZERO,FIELD
          GOTO      DSPB3000
.
.         previous screen selected
.
DSPB8000  MOVE      TMPKEY40[1],KEY40
          CALL      RDALHDT2                     * reread first record on screen
          MOVE      ZERO,FORM2                   * initialise count
          WHILE     FORM2 <= 17
            CALL      RKALHDT2                   * read previous record
            BRANCH    OVRCD,DSPB0000             * eof - start again
.
            ADD       ONE,FORM2                  * increment count
          DO
.
          MOVE      FIVE,CVERT                   * reset line position
          SUB       ONE,CPAGENO                  * decrement page number
          MOVE      ZERO,FIELD                   * reset record counter
          DISPLAY   *P1:CVERT,*EF
          GOTO      DSPB3000
.
DSPB9000  MOVE      ZERO,EXIT
          GOTO      DSPB9999
.
DSPB9100  MOVE      ONE,EXIT
.
DSPB9999  RETURN
+
.*********************************************************************
.*                  KEYA0000                    Called by : DSPB0000 *
.*        Keyin response to question                        DSPF0000 *
.*        Returns : EXIT = 0      Number entered                     *
.*                  EXIT = 1      Exit   entered                     * 
.*                  EXIT = 2      Next   entered                     * 
.*                  EXIT = 3      Prev   entered                     * 
.*********************************************************************
.
KEYA0000  DISPLAY   *P1:24,*EL,"Select item, e(",*V2LON,ANSX,*HOFF,")it";
          MOVE      TEN9,CCOL
          IF        CALLPOSN = 1 | CALLPOSN = 2
            DISPLAY   ", (",*V2LON,ANSN,*HOFF,")ext";
            ADD       EIGHT,CCOL
          ENDIF
          IF        CALLPOSN = 1 | CALLPOSN = 3
            DISPLAY   ", p(",*V2LON,ANSR,*HOFF,")evious";
            ADD       TEN2,CCOL
          ENDIF
.
          DISPLAY   " :  ";
          ADD       FOUR,CCOL
.
KEYA1000  KEYIN     *PCCOL:24,*V2LON,*JR,DIM2:
                    *PCCOL:24,*DV,DIM2
          PACK      DIM2,DIM2,SP2
          UNPACK    DIM2,ANS,ANS
          REP       UPPLOW,ANS
.
          MATCH     ANSX,ANS                * exit selected ?
          GOTO      KEYA9100 IF EQUAL       * yes
.
          MATCH     ANSN,ANS                * next page selected ?
          GOTO      KEYA9200 IF EQUAL       * yes
.
          MATCH     ANSR,ANS                * previous page selected ?
          GOTO      KEYA9300 IF EQUAL       * yes
.
          TYPE      DIM2
          GOTO      KEYA5000 IF EQUAL       * a number entered
.
KEYA1500  BEEP
          GOTO      KEYA1000
.
.         number entered directly
.
KEYA5000  MOVE      DIM2,FORM2
.
          COMPARE   FORM2,ZERO              * number < 1 ?
          GOTO      KEYA1500 IF NOT LESS    * yes - invalid
.
          COMPARE   FORM2,FIELD             * number in range ?
          GOTO      KEYA1500 IF LESS        * no - too high
.
.         set the exit flag
.
          MOVE      ZERO,EXIT               * number selected
          GOTO      KEYA9999
.
KEYA9100  MOVE      ONE,EXIT                * exit
          GOTO      KEYA9999
.
KEYA9200  MOVE      TWO,EXIT                * next
          GOTO      KEYA9999
.
KEYA9300  MOVE      THREE,EXIT              * previous
          GOTO      KEYA9999
.
KEYA9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       ALLHBTIO/INC
          INC       ALLHDTIO/INC
          INC       ALLHHDIO/INC
