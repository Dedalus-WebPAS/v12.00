. **********************************************************************
. * System    :   Accounting System                                    *
. * Program   :   IBAPIN13                                             *
. * Desc      :   Private Practice General Ledger Interface Maintenance*
. **********************************************************************
. * Date      :   12/03/2002                                           *
. * Author    :   J.Tan                                                *
. * Comments  :   This program has been copied from IBAPIN11           *
. *           :   and then modified for free format of leger/account   *
. * Mods      :                                                        *
. **********************************************************************
.
. Standard FMS Accounting System Include
.---------------------------------------
          INC       STD001FD
.
.
.FILE DESCRIPTION INCLUDES
.-------------------------
          INC       PRIFMSFD/INC                 * Interface File
.
          INC       PATCODFD/INC                 * Codes file
.
          INC       PRICONFD/INC                 * Private Practice Control File
          INC       PRIITMFD/INC                 * Private Practice Item File
.
.
.LOCAL VARIABLE DEFINITION
.-------------------------
.
ACCOUNT   DIM       12
LEDGER    DIM       2
.
ACCEPT    FORM      1                            * accept mode (1=on)
.
CLAIM     DIM       3
CODE      DIM       2
IBCNUBAS  FORM      1
IBCNUGST  FORM      1
.
FILEOPEN  DIM       30
PRFMKEY   DIM       18
GSTJRNL   FORM      1
PTCNUFMS  FORM      1
.
IFLAG     FORM      2                            * for PRIITMDS
ITEMFLAG  FORM      2
ITEMNUMB  DIM       9
ITEMTYPE  DIM       3
ITMDESC   DIM       30                           * for PRIITMDS
ITMFLAG   FORM      1                            * for PRIITMDS
.
LOCCITEM  FORM      2
.
PATHFLAG  FORM      1                            * for PRIITMDS
.
SAVSECT   FORM      1
SECTION   FORM      1
SERDATE   DIM       8                            * for PRIITMDS
SHTDESC   DIM       23                           * for PRIITMDS
SUBITEM   DIM       3
SUBSECT   FORM      1
.
TCADESC   DIM       35
TDADESC   DIM       35
TDIDESC   DIM       35
TLDDESC   DIM       35
TREDESC   DIM       35
.
UNDLN70   INIT      "___________________________________":
                    "___________________________________"
WARD      DIM       3
.
.
. PROGRAM CONSTANTS
. -----------------
AMA       INIT      "AMA"
CODECL    INIT      "CL"
CODEFI    INIT      "FI"
CODEJ     INIT      "J "
CODEPG    INIT      "PG"
MBS       INIT      "MBS"
NINE8     FORM      "99999999"                   * for PRIITMDS
UNKNOWN   INIT      "Unknown Code"
.
.
PRGID     INIT      "IBAPIN13"
PRGNAM    INIT      "Private Practice General Ledger Interface Maintenance"
VERSION   INIT      "V12.00.00"
+
.******************************************************************************
.*                             ML0000                                         *
.*  MAINLINE - Controlling Logic                                              *
.******************************************************************************
.
ML0000    CALL      INIT0000                     * display heading & open files
.
ML0200    CALL      PROC0000                     * get entry
          BRANCH    EXIT,ML9999,ML9999           * exit option
          CALL      SCRA0000                     * display screen A
.
.         Add/Modify/Delete data
.
          CALL      SELA0000                     * modify screen A
          BRANCH    EXIT,ML0200,ML2000           * Don't Save,  Delete
.
          CALL      POST0000                     * post screen A data
          GOTO      ML0200                       * get next entry
.
.         Delete data
.
ML2000    CALL      DELQST                       * ok to delete (y/n/c) ?
          BRANCH    CEXIT,ML2100,ML0200,ML0200
.
ML2100    CALL      DELT0000                     * delete screen A data
          GOTO      ML0200                       * get next entry
.
ML9999    CHAIN     PGM                          * chain back to menu
+
.******************************************************************************
.*                           INIT0000                  Called by: ML0000      *
.*                 Initialisation and open files                              *
.******************************************************************************
.
INIT0000  CALL      DISPHEAD
.
          DISPLAY   *P30:24,"Opening controlf";
          OPEN      CONTROLF,"controlf"
.
          READ      CONTROLF,ZERO;*85,IBCNUGST:
                                 *107,IBCNUBAS
          READ      CONTROLF,THIRTY4;*166,PRCNGLIN,PRCNGLPA
          READ      CONTROLF,FIFTY9;*60,PTCNUFMS
.
.         Check if using G/L Interface
.
          COMPARE   ONE,PRCNGLIN 
          IF        !@EQUAL
            DISPLAY   *P1:24,*B,*EL,"General Ledger Interface is Turned Off.  ";
            CALL      HITENTER
            GOTO      INIT9500                   * Finished
          ENDIF
.
INIT1000  SQUEEZE   PRCNGLPA                     * remove blanks from G/L path
.
.         Open the fms private practice interface file
.
          DISPLAY   *P38:24,"prifmsaf";
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      PRIFMSA1,"prifmsaf"
          TRAPCLR   IO
          BRANCH    OVRCD,INIT8000
.
          DISPLAY   *P38:24,*EL,"patcodes";
          OPEN      PATCODE1,"patcodes"
.
          DISPLAY   *P38:24,"priitemf";
          OPEN      PRIITEM1,"priitemf"           * PRI Item File
          OPEN      PRIITEM2,"priitemf"
.
          GOTO      INIT9000
.
INIT8000  DISPLAY   *P1:24,*EL,*B,"File Not Found, prifmsaf.  ";
          CALL      HITENTER
          GOTO      INIT9500                     * Finished
.
INIT9000  DISPLAY   *P1:24,*EL;
          MOVE      ONE,CNEWDS
          MOVE      ZERO,EXIT
          GOTO      INIT9999
.
INIT9500  MOVE      ONE,EXIT
.
INIT9999  RETURN
+
.******************************************************************************
.* SCRA - Display Screen A                       Called by SELA0000, redisps  *
.*       Requires : ACCEPT   (1=accept mode)                                  *
.******************************************************************************
.
SCRA0000  CALL      DSCR0000              * Display screen
.
          DISPLAY   *P28:10,*V2LON:
                    *P28:10,*V2LON,PRFMILD:
                    *P28:11,*V2LON,PRFMICA:
                    *P28:12,*V2LON,PRFMIDA;
.
          COMPARE   TWO,SECTION               * Journal ?
          GOTO      SCRA9999 IF EQUAL           * Yes, no to be Invoiced section
.
          DISPLAY   *P28:16,*V2LON,PRFMTLD:
                    *P28:17,*V2LON,PRFMTCA:
                    *P28:18,*V2LON,PRFMTDA
.
SCRA9999  RETURN
+
.******************************************************************************
.* DSCR0000 - Display Screen A                                                *
.******************************************************************************
DSCR0000  DISPLAY   *P1:09,*EF:
                    *P5:09,*ULON,*V2LON,"Fees Invoiced       ",*HOFF:
                    *P1:10,*V2LON," 1",*HOFF,". Ledger               : ":
                    *P1:11,*V2LON," 2",*HOFF,". Credit Account       : ":
                    *P1:12,*V2LON," 3",*HOFF,". Debit Account        : ";
.
.         Journals don't have to be Invoiced section
.
          COMPARE   TWO,SECTION
          GOTO      DSCR9999 IF EQUAL
.
          DISPLAY   *P5:15,*ULON,*V2LON,"Fees to be Invoiced ",*HOFF:
                    *P1:16,*V2LON," 4",*HOFF,". Ledger               : ":
                    *P1:17,*V2LON," 5",*HOFF,". Credit Account       : ":
                    *P1:18,*V2LON," 6",*HOFF,". Debit Account        : ";
.
DSCR9999  RETURN
+
.******************************************************************************
.* PROC - Enter On-Cost Code                  Called by ML0000                *
.*        Returns : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.) *
.*                  FMONCODE (variable entered)                               *
.******************************************************************************
.
PROC0000  DISPLAY   *P1:4,*EF:
                    *P1:4,*V2LON," 0.",*HOFF," Exit":
                    *P1:5,*V2LON," 1.",*HOFF," Items":
                    *P1:6,*V2LON," 2.",*HOFF," Journals"
.
          KEYIN     *P1:8,"Selection : ",*V2LON,SECTION
.
          MOVE      ZERO,SUBSECT                 * initialise sub-section
          COMPARE   ZERO,SECTION                 * exit selected ?
          GOTO      PROC9500 IF EQUAL            * yes
.
PROC0050  BRANCH    SECTION,PROC1000:            * items
                            PROC2000             * journals
.
          BEEP                                   * invalid input
          GOTO      PROC0000
.
.         Misc. Items
.
PROC1000  CALL      MPRO0000                     * get item details
          BRANCH    EXIT,PROC0000                * exit selected
          GOTO      PROC9000
.
.         Journals
.
PROC2000  CALL      JPRO0000                     * get journal details
          BRANCH    EXIT,PROC0000                * exit selected
.
.
PROC9000  MOVE      ZERO,EXIT
          GOTO      PROC9999
.
PROC9500  MOVE      ONE,EXIT
.
PROC9999  RETURN
+
.****************************************************************************
.*                            JPRO0000                 Called by: PROC0000  *
.*  Keyin journal Code and see if interface record exists on file           *
.****************************************************************************
.
JPRO0000  MOVE      ZERO,GSTJRNL
          COMPARE   ZERO,SUBSECT
          GOTO      JPRO0200 IF NOT EQUAL
.
JPRO0010  DISPLAY   *P1:4,*EF:
                    *P1:4,*V2LON," 0.",*HOFF," Exit":
                    *P1:5,*V2LON," 1.",*HOFF," Defaults":
                    *P1:6,*V2LON," 2.",*HOFF," Journal Codes"
.
JPRO0100  KEYIN     *P1:8,"Selection : ",*V2LON,SUBSECT
.
          MOVE      SUBSECT,SAVSECT              * save sub-section
.
          COMPARE   ZERO,SUBSECT                 * exit selected ?
          GOTO      JPRO9500 IF EQUAL            * yes
.
JPRO0200  BRANCH    SUBSECT,JPRO1000:            * defaults selected
                            JPRO2000             * journal codes selected
.
          BEEP                                   * invalid selection
          GOTO      JPRO0100
.
.         Default Journals
.
JPRO1000  DISPLAY   *P1:4,*EF:
                    *P5:4,"Default Journal Interface Details"
          PACK      KEY18,THREE,SP70
          MOVE      KEY18,PRFMKEY                * Save Key
          MOVE      ZERO,SUBSECT
          GOTO      JPRO8000
.
.         Journal Codes
.
JPRO2000  DISPLAY   *P1:4,*EF:
                    *P5:4,"Journal Code         : "
.
          MOVE      TWENTY8,ECOL
          MOVE      FOUR,EVERT
          MOVE      CODEJ,CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY                     * keyin code
          BRANCH    EXIT,JPRO0010:               * nothing entered
                         JPRO0010                * exitchar entered
.
.         Valid journal code entered
.
          UNPACK    ACODE,KEY2,KEY1
          DISPLAY   *P31:4,TDESC
.
          CMATCH    ANSG,THCSCOD
          IF        @EQUAL
            MOVE      ONE,GSTJRNL           * GST Journal
          ENDIF
.
          PACK      KEY18,THREE,KEY2,SP70
          MOVE      KEY18,PRFMKEY   * Save Key
.
.         Initialise interface file variables 
.
JPRO8000  CALL      CLER0000
.
.         See if record exists on file
.
          MOVE      ZERO,ACCEPT                  * set to change mode
          CALL      RDPRFM1                      * record on file ?
          LOAD      ACCEPT,OVRCD,ONE
          MOVE      ZERO,EXIT
          GOTO      JPRO9999
.
JPRO9500  MOVE      ONE,EXIT
.
JPRO9999  RETURN
+
.****************************************************************************
.*                          CLER0000                   Called by: JPRO0000  *
.*        Initialise interface file variables                     MPRO0000  *
.****************************************************************************
.
CLER0000  MOVE      SP70,PRFMIDI
          MOVE      SP70,PRFMIRE
          MOVE      SP70,PRFMILD
          MOVE      SP70,PRFMICA
          MOVE      SP70,PRFMIDA
          MOVE      SP70,PRFMTDI
          MOVE      SP70,PRFMTRE
          MOVE      SP70,PRFMTLD
          MOVE      SP70,PRFMTCA
          MOVE      SP70,PRFMTDA
          MOVE      SP70,PRFMIGS
          MOVE      SP70,PRFMBASC
          MOVE      SP70,PRFMSPA
.
CLER9999  RETURN
+
.****************************************************************************
.*                          MPRO0000                   Called by: PROC0000  *
.*  Keyin item details and see if record exists on interface file           *
.****************************************************************************
.
MPRO0000  COMPARE   ZERO,SUBSECT
          GOTO      MPRO0200 IF NOT EQUAL
.
MPRO0010  DISPLAY   *P1:4,*EF:
                    *P1:4,*V2LON," 0.",*HOFF," Exit":
                    *P1:5,*V2LON," 1.",*HOFF," Defaults":
                    *P1:6,*V2LON," 2.",*HOFF," Group Codes":
                    *P1:7,*V2LON," 3.",*HOFF," Item Codes"
.
MPRO0100  KEYIN     *P1:9,"Selection : ",*V2LON,SUBSECT
.
          MOVE      SUBSECT,SAVSECT              * save sub-section
.
          COMPARE   ZERO,SUBSECT                 * exit selected ?
          GOTO      MPRO9500 IF EQUAL            * yes
.
MPRO0200  BRANCH    SUBSECT,MPRO1000:            * defaults
                            MPRO2000:            * group codes
                            MPRO3000             * item codes
.
          BEEP                                   * invalid
          GOTO      MPRO0100
.
.         Default Items
.
MPRO1000  DISPLAY   *P1:4,*EF:
                    *P5:4,"Default Items Interface Details"
          PACK      KEY18,ONE,SP70
          MOVE      KEY18,PRFMKEY                * Save Key
          MOVE      ZERO,SUBSECT
          GOTO      MPRO9000
.
.         Group Codes
.
MPRO2000  DISPLAY   *P1:4,*EF:
                    *P5:4,"Set Code             : "
.
          MOVE      TWENTY8,ECOL
          MOVE      FOUR,EVERT
          MOVE      CODEPG,CODE
          MOVE      SP3,CKYIDEF3
          MOVE      ZERO,CKYIMAND
          CALL      PATCODKY                     * keyin code
          BRANCH    EXIT,MPRO0010:               * nothing entered
                         MPRO0010                * exitchar entered
.
.         Valid set code entered
.
          MOVE      ACODE,KEY3
          DISPLAY   *P31:4,TDESC
.
          PACK      KEY18,ONE,KEY3,SP70
          MOVE      KEY18,PRFMKEY   * Save Key
          GOTO      MPRO9000
.
.         Item Codes
.
MPRO3000  DISPLAY   *P1:4,*EF:
                    *P5:4,"Item Type            : ":
                    *P5:5,"Item Code            : ";
.
.         Keyin the item flag

MPRO3100  DISPLAY   *P28:4,*EL:
                    *P1:24,*EL,*V2LON,ZERO,*HOFF," = MBS, ",*V2LON,ONE,*HOFF:
                           " = AMA";
          MOVE      SP1,DIM1
          KEYIN     *P28:4,*V2LON,DIM1;
.
          PACK      DIM1,DIM1,SP1
.
          MATCH     SP1,DIM1                     * anything entered ?
          GOTO      MPRO0010 IF EQUAL            * no
.
          TYPE      DIM1                         * yes - see if we have a number
          IF        !@EQUAL
            BEEP                                 * no - rekey
            GOTO      MPRO3100
          ELSE
            MOVE      DIM1,ITEMFLAG
            IF        (ITEMFLAG = 0) | (ITEMFLAG = 1)
              MOVE      MBS,ITEMTYPE
              LOAD      ITEMTYPE,ITEMFLAG,AMA
              DISPLAY   *P32:4,ITEMTYPE,*P1:24,*EL;
              GOTO      MPRO3300
            ELSE
              DISPLAY   *P1:24,*EL,*B,"Invalid Item Type.  ";
              CALL      HITENTER
              GOTO      MPRO3100
            ENDIF
          ENDIF
.
.         Keyin the item number and sub-item number
.
MPRO3300  MOVE      ITEMFLAG,IFLAG               * load item type
          MOVE      FIVE,CVERT                   * load row
          MOVE      TWENTY8,CCOL                 * load column
.
          CALL      KYPRIITM                     * input item
          BRANCH    EXIT,MPRO3000:               * exitchar entered
                         MPRO3400:               * ? entered
                         MPRO3000                * nothing entered
.
          CALL      CHKI0000                     * valid item ?
          BRANCH    EXIT,MPRO3300                * no - rekey
.
          MATCH     SP3,SUBITEM                  * sub item keyed in ?
          IF        !@EQUAL
            DISPLAY   *P37:5,*V2LON,"(",SUBITEM,")"     * yes
          ENDIF
.
          DISPLAY   *P45:5,PRITDESC
          GOTO      MPRO3900
.
MPRO3400  MOVE      ZERO,HLEF
          CALL      GETSCR00                     * save screen
          MOVE      ONE,ITMFLAG                  * display regardless of date
          MOVE      ONE,PATHFLAG                 * set to display all items
MPRO3450  CALL      PRIITMDS                     * display items on file
.
MPRO4000  DISPLAY   *P1:24,*EL,"Item Number: "
          MOVE      TWENTY4,CVERT                * load row
          MOVE      TEN4,CCOL                    * load column
          CALL      KYPRIITM
          BRANCH    EXIT,MPRO8000:               * exitchar entered
                         MPRO3450:               * ? entered
                         MPRO8000                * nothing entered
.
          CALL      CHKI0000                     * see if valid item
          BRANCH    EXIT,MPRO4000                * no
.
          CALL      PUTSCR00                     * restore screen
          DISPLAY   *P28:5,*V2LON,ITEMNUMB
.
          MATCH     SP3,SUBITEM                  * subitem entered ?
          IF        !@EQUAL
            DISPLAY   *P37:5,*V2LON,"(",SUBITEM,")" * yes
          ENDIF
.
          DISPLAY   *P45:5,PRITDESC
          GOTO      MPRO3900
.
MPRO8000  CALL      FRESCR00                     * free screen
          GOTO      MPRO3000                     * re-key item type
.
.         Item was found so display the item details
.
MPRO3900  PACK      KEY18,ONE,PRITSETC,ITEMFLAG,ITEMNUMB,SUBITEM,SP70
          MOVE      KEY18,PRFMKEY   * Save Key
.
.         Initialise interface variables
.
MPRO9000  CALL      CLER0000
.
          MOVE      ZERO,ACCEPT                  * set to change mode
          CALL      RDPRFM1
          LOAD      ACCEPT,OVRCD,ONE             * set to insert mode
          MOVE      ZERO,EXIT
          GOTO      MPRO9999
.
MPRO9500  MOVE      ONE,EXIT
.
MPRO9999  RETURN
+
.****************************************************************************
.*                               CHKI0000              Called by: MPRO0000  *
.*                     see if valid item entered                            *
.*   RETURNS:      EXIT    0 = valid item                                   *
.*                         1 = not valid item                               *
.****************************************************************************
.
CHKI0000  PACK      KEY22,ITEMFLAG,ITEMNUMB,SUBITEM,NINE8
          CALL      RDPRIT1                      * record on file ?
          COMPARE   ZERO,OVRCD  
          GOTO      CHKI9000 IF EQUAL            * yes - ok
.
          CALL      RPPRIT1                      * read previous record
          BRANCH    OVRCD,CHKI1000               * end of file
.
          COMPARE   ITEMFLAG,PRITFLAG            * same item type ?
          GOTO      CHKI1000 IF NOT EQUAL        * no
.
          MATCH     ITEMNUMB,PRITITMN            * same item number ?
          GOTO      CHKI1000 IF NOT EQUAL        * no
.
          MATCH     SUBITEM,PRITSUBN             * same subitem number ?
          GOTO      CHKI1000 IF NOT EQUAL        * no
.
          GOTO      CHKI9000                     * yes
.
CHKI1000  DISPLAY   *P1:24,*EL,*B,"Item not on file. ";
          CALL      HITENTER
          GOTO      CHKI9500
.
CHKI9000  MOVE      ZERO,EXIT
          GOTO      CHKI9999
.
CHKI9500  MOVE      ONE,EXIT
.
CHKI9999  RETURN
+
.******************************************************************************
.* SELA - Modify screen A data                   Called by ML0000             *
.*        Returns : EXIT     (2=EXITCHAR entered, 1=nothing entered, 0=cont.) *
.*                  FMONDISS (variable entered)                               *
.******************************************************************************
.
SELA0000  MOVE      ZERO,LOCCITEM 
.  
.         Determine option to execute
.
SELA0100  ADD       ONE,LOCCITEM                   * get next option
          BRANCH    ACCEPT,SELA0500              * in accept mode ?
          CALL      MAINDEL                      * select/post/cancel ?
.
          COMPARE   ZERO,LOCCITEM
          GOTO      SELA9000 IF EQUAL            * post ?
.
          COMPARE   SEQ,LOCCITEM
          GOTO      SELA9500 IF EQUAL            * cancel ?
.
          COMPARE   "-2",LOCCITEM
          GOTO      SELA9600 IF EQUAL            * Delete    
.
SELA0500  MOVE      "28",CCOL                    * set up screen address
          MOVE      " 9",CVERT
.
          ADD       LOCCITEM,CVERT
.
          BRANCH    LOCCITEM,SELA1100,SELA1200,SELA1300
          ADD       THREE,CVERT
.
          COMPARE   TWO,SECTION
          GOTO      SELA0600 IF EQUAL       * Journal has no to be invoiced
.
          BRANCH    LOCCITEM,SELA1100,SELA1200,SELA1300,SELA1400,SELA1500:
                           SELA1600
.
SELA0600  BRANCH    ACCEPT,SELA0900              * finished accept mode ?
          BEEP                                   * illegal option
.
SELA0900  MOVE      ZERO,ACCEPT                  * clear accept mode
          GOTO      SELA0100                     * get next option
.
.---- option 1 ----
.
SELA1100  CALL      KLDG0000
          BRANCH    EXIT,SELA9500
          MOVE      LEDGER,PRFMILD
          DISPLAY   *PCCOL:CVERT,*V2LON,PRFMILD
          GOTO      SELA0100
.
.---- option 2 ----
.
SELA1200  CALL      KACC0000             * keyin income account 
          BRANCH    EXIT,SELA9500
          MOVE      ACCOUNT,PRFMICA
          DISPLAY   *PCCOL:CVERT,*V2LON,PRFMICA
          GOTO      SELA0100
.
.---- option 3 ----
.
SELA1300  CALL      KACC0000             * keyin debit account 
          BRANCH    EXIT,SELA9500
          MOVE      ACCOUNT,PRFMIDA
          DISPLAY   *PCCOL:CVERT,*V2LON,PRFMIDA
          GOTO      SELA0100
.
.---- option 4 ----
.
SELA1400  CALL      KLDG0000
          BRANCH    EXIT,SELA9500
          MOVE      LEDGER,PRFMTLD
          DISPLAY   *PCCOL:CVERT,*V2LON,PRFMTLD
          GOTO      SELA0100
.
.---- option 5 ----
.
SELA1500  CALL      KACC0000             * keyin debit account 
          BRANCH    EXIT,SELA9500
          MOVE      ACCOUNT,PRFMTCA
          DISPLAY   *PCCOL:CVERT,*V2LON,PRFMTCA
          GOTO      SELA0100
.
.---- option 6 ----
.
SELA1600  CALL      KACC0000             * keyin debit account 
          BRANCH    EXIT,SELA9500
          MOVE      ACCOUNT,PRFMTDA
          DISPLAY   *PCCOL:CVERT,*V2LON,PRFMTDA
          GOTO      SELA0100
.
.---- exit points ----
.
SELA9000  MOVE      ZERO,EXIT                    * post
          GOTO      SELA9999
.
SELA9500  MOVE      ONE,EXIT                     * cancel
          GOTO      SELA9999
.
SELA9600  MOVE      TWO,EXIT                     * delete
          GOTO      SELA9999
.
SELA9999  RETURN
+
.******************************************************************************
.* POST - Post data                              Called by ML0000             *
.******************************************************************************
.
POST0000  MOVE      PRFMKEY,KEY18
          CALL      RAPRFM1                 * record exists ?
          BRANCH    OVRCD,POST1000
          CALL      DEPRFM1                 * delete old record (if possible)
.
POST1000  CALL      WRPRFM1                 * write new record
.
POST9999  RETURN
+
.******************************************************************************
.* DELT - Delete data                            Called by ML0000             *
.******************************************************************************
.
DELT0000  MOVE      PRFMKEY,KEY18
          CALL      DEPRFM1                 * delete old record (if possible)
.
DELT9999  RETURN
+
.
.******************************************************************************
MAINDEL   MOVE      ZERO,LOCCITEM
          MOVE      SP10,CCITEMD
          KEYIN     *P1:24,*EL,"Select Item, (",*V2LON,"P",*HOFF,")ost, (":
                    *V2LON,"C",*HOFF,")ancel, (":
                    *V2LON,"D",*HOFF,")elete ? ",*V2LON,*JR,CCITEMD;
.
          RESET     CCITEMD
          GOTO      MAINDEL IF EOS
.
          REP       UPPLOW,CCITEMD
.
          MATCH     "  C",CCITEMD
          GOTO      MAINDEL1 IF EQUAL
.
          MATCH     "  P",CCITEMD
          GOTO      MAINDEL2 IF EQUAL
.
          MATCH     "  D",CCITEMD
          GOTO      MAINDEL3 IF EQUAL
.
          TYPE      CCITEMD
          GOTO      MAINDELE IF NOT EQUAL
.
          MOVE      CCITEMD,LOCCITEM
          COMPARE   ONE,LOCCITEM
          GOTO      MAINDELE IF LESS
.
          RETURN
.
MAINDELE  BEEP
          GOTO      MAINDEL
.
MAINDEL1  MOVE      "-1",LOCCITEM
          RETURN
.
MAINDEL2  MOVE      "0",LOCCITEM
          RETURN
+
MAINDEL3  MOVE      "-2",LOCCITEM
          RETURN
+
.-------------------------------------------------------------------------------
. Keyin free format ledger
.-------------------------------------------------------------------------------
KLDG0000  MOVE      UNDLN70,LEDGER
          KEYIN     *PCCOL:CVERT,*DV,LEDGER:                                  
                    *PCCOL:CVERT,*V2LON,*JR,*ZF,LEDGER:                       
                    *PCCOL:CVERT,*DV,LEDGER
.
          ENDSET    LEDGER
          APPEND    SP70,LEDGER
          RESET     LEDGER
.
          MATCH     SP70,LEDGER
          GOTO      KLDG9200 IF EQUAL
.
          CMATCH    EXITCHAR,LEDGER
          GOTO      KLDG9300 IF EQUAL
.
          DISPLAY   *PCCOL:CVERT,*V2LON,LEDGER                                
          MOVE      ZERO,EXIT
          GOTO      KLDG9999
.
KLDG9200  DISPLAY   *PCCOL:CVERT,"Ledger must not be blank. ";
          CALL      HITENTER
          DISPLAY   *PCCOL:CVERT,*EL;
          GOTO      KLDG0000
.
KLDG9300  MOVE      ONE,EXIT
          GOTO      KLDG9999
.
KLDG9999  RETURN
+
.-------------------------------------------------------------------------------
. Keyin free format account code
.-------------------------------------------------------------------------------
KACC0000  DISPLAY   *PCCOL:CVERT,*EL;
.
          MOVE      ZERO,EXIT
          MOVE      UNDLN70,ACCOUNT
          KEYIN     *PCCOL:CVERT,*DV,ACCOUNT:                                  
                    *PCCOL:CVERT,*V2LON,ACCOUNT:                               
                    *PCCOL:CVERT,*DV,ACCOUNT
.
          ENDSET    ACCOUNT
          APPEND    SP70,ACCOUNT
          RESET     ACCOUNT
.
          MATCH     SP70,ACCOUNT
          GOTO      KACC9999 IF EQUAL
.
          CMATCH    EXITCHAR,ACCOUNT
          GOTO      KACC9999 IF NOT EQUAL
          GOTO      KACC9000
.
KACC8000  DISPLAY   *PCCOL:CVERT,*EL,*V2LON,"Account number is mandatory ";
          CALL      HITENTER
          DISPLAY   *PCCOL:CVERT,*EL;
          GOTO      KACC0000
.
KACC9000  MOVE      ONE,EXIT
KACC9999  RETURN
+
.******************************************************************************
.*        I/O Includes                                                        *
.******************************************************************************
.
          INC       STD001IO
.
          INC       KYPRIITM
          INC       PATCODKY
          INC       PRIITMDS
.
          INC       PRIFMSIO/INC    * Interface File
.
          INC       PATCODIO/INC
          INC       PRIITMIO/INC    * Declared in program because of conflict
.                                   * with Standard FMS ITEMNO
