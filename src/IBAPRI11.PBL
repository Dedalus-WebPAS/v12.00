.*****************************************************************************
.* System    :   Private Practice                                            *
.* Program   :   IBAPRI11                                                    *
.* Desc      :   Eclipse IMC Remittance Advice Report Printing               *
.*****************************************************************************
.* Date      :   02/08/2016                                                  *
.* Author    :   Peter Vela                                                  *
.* Function  :   This program will allow the user to print a report for a    *
.*               given remittance advice (IMC).                              *
.* Mods      :                                                               *
.*       V12.00.01 24/07/2025  J.Tan          TSK 0962500                    *
.*                 Mod GBAL0000 to check for U/R number                      *
.*       V11.00.02 22/04/2020  Peter Vela       TSK 0874025                  *
.*                  Recompiled for PRIECTFD                                  *
.*       V11.00.01 17/04/2020  Peter Vela       TSK 0874025                  *
.*                 Recompiled for PRIECTFD                                   *
.*       V10.14.01 20/03/2019  J.Tan            TSK 0857392                  *
.*                  Changed RCP Transaction count from DIM3 to DIM5          *
.*       V10.11.01  19/07/2017  Peter Vela        TSK 0831224                *
.*                  Recompiled for PMSERHFD
.*       V10.08.01  02/08/2016  Peter Vela        CAR 0294177                *
.*                  New program. Copied from IBAPMS07                        *
.*****************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       IBACONFD/INC
          INC       PATCONFD/INC
          INC       IBASEQFD/INC                 * Sequential Numbers File
          INC       PATHSPFD/INC
          INC       PRIINVFD/INC
          INC       PATMA1FD/INC
          INC       PRIECTFD/INC
          INC       PMSERDFD/INC
          INC       PMSERHFD/INC
.         INC       PMSVX1FD/INC
          INC       RCPBNKFD/INC
          INC       RCPDTEFD/INC
          INC       WEBSECFD/INC
          INC       TFILEVAR/INC                 * Generate Temp File Name
          INC       WEBERRFD/INC                 * Web Server Error Logging
.
.
.         Temporary File Definition
.         -------------------------
.
BALTEMP1  IFILE SQL, FIXED=161, KEY="U1-1,2-9,10-17"
.
.NAME     TYPE    LENGTH     PHYSICAL     START     DESCRIPTION
.----     ----    ------     --------     -----     -----------
BALNSTAT  DIM       1           1           1       Balanced Status
.                                                      B = Balanced
.                                                      U = Unbalanced
.INVNUMBR DIM       8           8           2       Invoice Number
.UNQNUMBR DIM       8           8          10       Unique Number
.PREVINVN DIM       8           8          18       Previous Invoice Number
.DIM60    DIM       60          60         26       Formatted Patient Name
.FORM7P2  FORM      7.2         6          86       Benefit Amount
.FORM12P2 FORM      12.2        8          92       Claimed Amount
FRMTDATE  DIM       10          10        100       Formatted Lodgement Date
.PMEDTRID DIM       24          24        110       Transaction Id
.PMEDPTID DIM       24          24        134       Previous Transaction Id
.PMEDCCOD DIM       3           3         158       Claim Channel Code

.End of Record                            161
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
UNQNUMBR  DIM       8
.
CMDLINE   DIM       80
.
DIFCINDC  DIM       1
DIM7      DIM       7
DIM8      DIM       8
DIM10     DIM       10
DIM12     DIM       12
DIM20     DIM       20
DIM60     DIM       60
.
FORM7P2   FORM      7.2
FORM12P2  FORM      12.2
.
INVNUMBR  DIM       8
.
OPTNDESC  DIM       20
CURRBALN  FORM      12.2
.
PREVINVN  DIM       8
.
SAVELOCN  DIM       8
SAVESTAT  DIM       1
.
TEMPFILE  DIM       8
.
.
. PROGRAM CONSTANTS
. -----------------
ERASE     INIT      "iserase "
ISBUILD   INIT      "isbuild "
OPTNDES1  INIT      "-Standard           "
OPTNDES2  INIT      "-Unbalanced/Balanced"
PIPE      INIT      "|"
SP61      INIT      "                                        ":
                    "                     "
TILDA17   INIT      "~~~~~~~~~~~~~~~~~"
UKEY      INIT      " 161 U1-1,2-9,10-17"
.
.
PRGID     INIT      "IBAPRI11"
PRGNAM    INIT      "Eclipse IMC ERA Report Printing"
VERSION   INIT      "V12.00.01"
+
.*****************************************************************************
.*                              MAIN0000                                     *
.*                      Controlling Logic (Mainline code)                    *
.*****************************************************************************
.
MAIN0000  CALL      INIT0000               * initialisation and open files
.
          MATCH     "1",PTCNUIMC
          GOTO      MAIN9999 IF NOT EQUAL
.
          CALL      CREA0000               * create temp files
.
          CALL      GRAD0000               * get remittance advice
          BRANCH    EXIT,MAIN9000          * nothing entered
.
          CALL      GUSD0000               * get user details
          BRANCH    EXIT,MAIN9000
.
          CALL      OPTN0000               * select options
          BRANCH    EXIT,MAIN9000          * EXIT = 1 if 0 chosen in menu
.
          PERFORM   COPTION,PRIN0000:      * print standard report
                            PRTB0000       * print balanced/unbalanced report
.
MAIN9000  CALL      KILL0000               * erase temp file
.
MAIN9999  CHAIN     PGM                    * chain back to program
+
.*****************************************************************************
.*                                INIT0000             Called by: MAIN0000   *
.*                             initialisation                                *
.*  The initialisation routine is used to display headings and open files.   *
.*****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"pmserhaf";
          OPEN      PMSERHA1,"pmserhaf"
          OPEN      PMSERHA2,"pmserhaf"
.
          DISPLAY   *P64:24,"pmserdaf";
          OPEN      PMSERDA1,"pmserdaf"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
.
          DISPLAY   *P64:24,"patmx1af";
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"pathspaf";
          OPEN      PATHSPA1,"pathspaf"
.
          DISPLAY   *P64:24,"priinvof";
          OPEN      PRIINVO1,"priinvof"
.
.         DISPLAY   *P64:24,"pmsvx1af";
.         OPEN      PMSVX1A1,"pmsvx1af"
.
          DISPLAY   *P64:24,"rcpdteaf";
          OPEN      RCPDTEA3,"rcpdteaf"
.
          DISPLAY   *P64:24,"rcpbnkaf";
          OPEN      RCPBNKA1,"rcpbnkaf"
.
          DISPLAY   *P64:24,"websecaf";
          OPEN      WEBSECA1,"websecaf"
.
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,ZERO;*43,IBCNMHOS,*85,IBCNUGST
          READ      CONTROLF,HUND24;*111,PTCNUIMC
.
          MATCH     "1",PTCNUIMC
          IF        @EQUAL
            DISPLAY   *P64:24,"priectaf";
            OPEN      PRIECTA6,"priectaf"
          ENDIF
.
INIT9999  RETURN
+
.*****************************************************************************
.*                                GRAD0000         Called by: MAIN0000       *
.*             Get the remittance advice key for the report                  *
.* Returns: EXIT    0 = valid pmserhaf record read                           *
.*                  1 = nothing entered or pmserhaf record not found         *
.*****************************************************************************
.
GRAD0000  KEYIN     *P1:3,*EF:
                    *P1:4,"Remittance key Hospital: ",*V2LON,KEY3
.
          KEYIN     *P1:5,*EF:
                    *P1:6,"               Fund Trn: ",*V2LON,KEY24
.
          KEYIN     *P1:7,*EF:
                    *P1:8,"               Rem Advc: ",*V2LON,KEY30
.
          KEYIN     *P1:9,*EF:
                    *P1:10,"               Part Num: ",*V2LON,KEY4
.
          PACK      KEY3,KEY3,SP70
          PACK      KEY24,KEY24,SP70
          PACK      KEY30,KEY30,SP70
          PACK      KEY4,KEY4,SP70
          PACK      KEY61,KEY3,KEY24,KEY30,KEY4,SP70
          MATCH     SP61,KEY61                   * anything entered ?
          GOTO      GRAD9100 IF EQUAL            * no - finished
.
.         Use KEY61 to read the remittance header record (pmserhaf)
.
          CALL      RDPMERH1                     * header record found ?
          BRANCH    OVRCD,GRAD9100               * no - finished
.
          MOVE      ZERO,EXIT
          GOTO      GRAD9999
.
GRAD9100  MOVE      ONE,EXIT
.
GRAD9999  RETURN
+
.*****************************************************************************
.*                                GUSD0000         Called by: MAIN0000       *
.*             Get the web user id and then read websecaf                    *
.* Returns: EXIT    0 = valid websecaf record read                           *
.*                  1 = nothing entered or websecaf record not found         *
.*****************************************************************************
.
GUSD0000  KEYIN     *P2:3,*EF:
                    *P2:4,"Web User key: ",*V2LON,KEY10
.
          PACK      KEY10,KEY10,SP70
          MATCH     SP70,KEY10                   * anything entered ?
          GOTO      GUSD9100 IF EQUAL            * no - finished
.
.         Use KEY10 to read the websecaf record
.
          CALL      RDWBSE1                      * record found ?
          BRANCH    OVRCD,GUSD9100               * no - finished
.
          MOVE      ZERO,EXIT
          GOTO      GUSD9999
.
GUSD9100  MOVE      ONE,EXIT
.
GUSD9999  RETURN
+
.*****************************************************************************
.*                                OPTN0000             Called by: MAIN0000   *
.*                        get user options or exit                           *
.*    Returns:  EXIT    = FALSE (0)  Run report                              *
.*                        TRUE  (1)  Exit option selected                    *
.*              COPTION  1 = Standard Report selected                        *
.*                       2 = Balanced/Unbalanced Report selected             *
.*****************************************************************************
.
OPTN0000  DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". Standard Report":
                    *P1:6,*V2LON,TWO,*HOFF,". Balanced/Unbalanced Report"
.
OPTN0500  KEYIN     *P1:8,*EL,"Select Option : ":
                    *P17:8,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9500 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9000:            * run std report
                            OPTN9000             * run bal/unbal report
.
          BEEP
          GOTO      OPTN0500
.
OPTN9000  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9500  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*****************************************************************************
.*                               PRIN0000              Called by: MAIN0000   *
.*                  Process the records for printing                         *
.* Requires:  Valid read on pmserhaf                                         *
.*****************************************************************************
.
PRIN0000  MOVE      ZERO,CPAGENO
          MOVE      ONE,CNOUNDLN
          MOVE      OPTNDES1,CPHDROPT
          CALL      IBACLOCK
.
          CALL      HEAD0000
.
          PACK      KEY82,PMEHFTID,PMEHRADV,PMEHPNUM,SP30,SP30,SP30
          CALL      RSPMERD1                     * position on remittance
PRIN0500  CALL      RKPMERD1                     * read next record
          BRANCH    OVRCD,PRIN9500               * eof - finished
.
          MATCH     PMEHFTID,PMEDFTID            * same HF Transaction still ?
          GOTO      PRIN9500 IF NOT EQUAL        * no - finished
.
          MATCH     PMEHRADV,PMEDRADV            * same remittance advice ?
          GOTO      PRIN9500 IF NOT EQUAL        * no - finished
.
          MATCH     PMEHPNUM,PMEDPNUM            * same part number still ?
          GOTO      PRIN9500 IF NOT EQUAL        * no - finished
.
          CALL      RDET0000                     * get report details
          BRANCH    EXIT,PRIN0500
.
.         A valid record has been found, so print it
.
          COMPARE   FIFTY7,CLNO                  * page full ?
          CALL      HEAD0000 IF NOT LESS         * yes
.
          CALL      DISP0000                     * print record details
          GOTO      PRIN0500                     * get next record
.
PRIN9500  PRINT     *N,*1,"    * Asterisk denotes that claim belongs to a different campus."
.
          PRINT     *N,*N,*1,"*** End of Report ***"
          DISPLAY   *P1:23,*EF:
                    *P1:24,"Report printed.  ";
          CALL      HITENTER
.
PRIN9999  RETURN
+
.*****************************************************************************
.*                               PRTB0000              Called by: MAIN0000   *
.*                  Process the records for printing                         *
.* Requires:  Valid read on pmserhaf                                         *
.*****************************************************************************
.
PRTB0000  CALL      CLER0000                     * clear temp file records
.
          MOVE      ZERO,CPAGENO                 * initialise print variables
          MOVE      ONE,CNOUNDLN
          MOVE      OPTNDES2,CPHDROPT
          CALL      IBACLOCK
.
          CALL      HEAD0000                     * print report header
          ADD       TWO,CLNO
.
PRTB0100  PACK      KEY82,PMEHFTID,PMEHRADV,PMEHPNUM,SP30,SP30,SP30
          CALL      RSPMERD1                     * position on remittance
PRTB0500  CALL      RKPMERD1                     * read next record
          BRANCH    OVRCD,PRTB5000               * eof - finished
.
          MATCH     PMEHFTID,PMEDFTID            * same HF Transaction still ?
          GOTO      PRTB5000 IF NOT EQUAL        * no - finished
.
          MATCH     PMEHRADV,PMEDRADV            * same remittance advice ?
          GOTO      PRTB5000 IF NOT EQUAL        * no - finished
.
          MATCH     PMEHPNUM,PMEDPNUM            * same part number still ?
          GOTO      PRTB5000 IF NOT EQUAL        * no - finished
.
          CALL      RDET0000                     * load claim details
          BRANCH    EXIT,PRTB0500                * ignore record
.
.         A valid record has been found, so write it to the temp file
.         after determining if the invoice is balanced or not.
.
          CALL      GBAL0000                     * get current balance status
.
          PACK      KEY17,BALNSTAT,INVNUMBR,UNQNUMBR
          CALL      RATEMP1
          IF        OVRCD = 1
            CALL      WRTEMP1                    * write temp file record
          ENDIF
          GOTO      PRTB0500                     * get next record
.
.         Now loop through the temp file and print each record
.
PRTB5000  MOVE      SP1,SAVESTAT                 * initialise saved status
.
          MOVE      TILDA17,KEY17
          CALL      RSTEMP1                      * position at end of file
PRTB5500  CALL      RPTEMP1                      * read next record
          BRANCH    OVRCD,PRTB9500               * eof - finished
.
.         A valid record has been found, so print it
.
          COMPARE   FIFTY3,CLNO                  * page full ?
          CALL      HEAD0000 IF NOT LESS         * yes
.
          MATCH     SAVESTAT,BALNSTAT            * same status ?
          IF        !@EQUAL
            MOVE      BALNSTAT,SAVESTAT          * no
            MATCH     ANSB,BALNSTAT
            IF        @EQUAL
              PRINT     *1,PIPE,*3,*V2LON,"Balanced Invoices",*HOFF,*132,PIPE
            ELSE
              PRINT     *1,PIPE,*3,*V2LON,"Unbalanced Invoices",*HOFF,*132,PIPE
            ENDIF
            CALL      LINE0000
            ADD       TWO,CLNO
          ENDIF
.
          CALL      DISP0000                     * print record details
          GOTO      PRTB5500                     * get next record
.
PRTB9500  PRINT     *N,*1,"    * Asterisk denotes that claim belongs to a ":
                          "different campus.":
                    *N,*N,"    Note: An Invoice will be balanced if it has ":
                          "a zero outstanding amount after remittance/cash ":
                          "release"
.
          PRINT     *N,*N,*1,"*** End of Report ***"
          DISPLAY   *P1:23,*EF:
                    *P1:24,"Report printed.  ";
          CALL      HITENTER
.
PRTB9999  RETURN
+
.*****************************************************************************
.*                            RDET0000                 Called by: PRIN0000   *
.*        Format claim details for reporting                      PRTB0000   *
.* Returns:  EXIT   0 = Valid claim                                          *
.*                  1 = Invalid claim                                        *
.*****************************************************************************
.
RDET0000  MOVE      SP70,UNQNUMBR
          MOVE      ZERO,FORM12P2
          MOVE      SP70,DIM60
.
          PACK      KEY40,PMEDTRID,SP70
          CALL      RSPRECT6
          CALL      RKPRECT6
          BRANCH    OVRCD,RDET5000
.
          MATCH     PMEDTRID,PRECTRID
          GOTO      RDET5000 IF NOT EQUAL
.
          MOVE      PRECUNIQ,UNQNUMBR
          MOVE      PRECAMTC,FORM12P2
.
          PACK      KEY8,PRECURNO,SP70
          CALL      RDMAST1
          BRANCH    OVRCD,RDET5000
.
          MOVE      PSNAME,PACSNAME
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      TWO,PACFRMT
          CALL      PACNAME
          MOVE      PACFNAME,DIM60
.
          UNPACK    PMEDLDAT,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      CPCDATE,FRMTDATE
.
          UNPACK    PMEDBAMT,DIM7,DIM2
          PACK      DIM10,DIM7,DOT,DIM2
          MOVE      ZERO,FORM7P2
          SCAN      "-",DIM10
          IF        @EQUAL
            REP        "-0",DIM10
            MOVE       DIM10,FORM7P2
            ASSIGN     (FORM7P2*SEQ),FORM7P2
          ELSE
            MOVE      DIM10,FORM7P2
          ENDIF
.
          MOVE      PMEDARID,DIM20
          SQUEEZE   DIM20
          MOVELPTR  DIM20,FORM2
          MOVE      SP8,INVNUMBR
          CLEAR     INVNUMBR
          LOAD      INVNUMBR,FORM2,SP7,SP6,SP5,SP4,SP3,SP2,SP1
          ENDSET    INVNUMBR
          APPEND    DIM20,INVNUMBR
          RESET     INVNUMBR
.
          MOVE      PMEDPARI,DIM20
          SQUEEZE   DIM20
          MOVELPTR  DIM20,FORM2
          MOVE      SP8,PREVINVN
          IF        FORM2 > 0
            CLEAR     PREVINVN
            LOAD      PREVINVN,FORM2,SP7,SP6,SP5,SP4,SP3,SP2,SP1
            ENDSET    PREVINVN
            APPEND    DIM20,PREVINVN
            RESET     PREVINVN
          ENDIF
.
RDET5000  MOVE      SP70,DIFCINDC
          COMPARE   ONE,IBCNMHOS
          GOTO      RDET9000 IF NOT EQUAL
.
          MATCH     SP70,PRECHOSP
          GOTO      RDET9000 IF EQUAL
.
          MATCH     PRECHOSP,WBSEHOSP
          GOTO      RDET9000 IF EQUAL
.
          PACK      KEY3,PRECHOSP,SP70
          CALL      RDPTHSP1
          IF        OVRCD = 0
            MOVE      PTHSLOCN,SAVELOCN
          ELSE
            MOVE      SP70,SAVELOCN
          ENDIF
.
          PACK      KEY3,WBSEHOSP,SP70
          CALL      RDPTHSP1
          BRANCH    OVRCD,RDET9000
.
          MATCH     SAVELOCN,PTHSLOCN
          GOTO      RDET9100 IF NOT EQUAL
.
          MOVE      "*",DIFCINDC
.
RDET9000  MOVE      ZERO,EXIT
          GOTO      RDET9999
.
RDET9100  MOVE      ONE,EXIT
.
RDET9999  RETURN
+
.*****************************************************************************
.*                            DISP0000                 Called by: PRIN0000   *
.*                  Valid record so print it                                 *
.*****************************************************************************
.
DISP0000  PRINT     *1,PIPE,*3,UNQNUMBR,*12,PIPE,*14,DIM60:
                    *76,PIPE,*103,PIPE,*105,FORM12P2,*125,DIFCINDC,*132,PIPE:
                    *N,*1,PIPE,*3,INVNUMBR,*12,PIPE,*14,FORM7P2:
                    *25,PIPE,*27,FRMTDATE,*38,PIPE,*40,PMEDTRID:
                    *65,PIPE,*67,PREVINVN,*76,PIPE,*78,PMEDPTID:
                    *103,PIPE,*105,PMEDCCOD,*132,PIPE
.
          CALL      LINE0000
.
          ADD       THREE,CLNO                   * increment line count
.
DISP9999  RETURN
+
.*****************************************************************************
.*                            GBAL0000                 Called by: PRTB0000   *
.*              Get the current balance for the invoice                      *
.*              (including unreleased cash).                                 *
.* Requires: INVNUMBR - Invoice number (right justified)                     *
.* Returns:  BALNSTAT - Invoice balance status -after remittance/cash release*
.*                       B = balanced                                        *
.*                       U = Unbalanced                                      *
.*****************************************************************************
.
GBAL0000  MOVE     INVNUMBR,KEY8
          CALL     RDPRIN1                       * invoice found ?
          BRANCH   OVRCD,GBAL9100                * no - treat as unbalanced
.
.         The invoice record has been found, so calculate the current
.         invoice balance
.
          ASSIGN    (PRINITOT+PRINPAMT+PRINHAMT+PRINIAMT+PRINMAMT+PRINVAMT+PRINOTHA+PRINJAMT+PRINCNTT),CURRBALN
          IF        IBCNUGST=2
            ADD       PRINGSTJ,CURRBALN
          ENDIF
.
.         Adjust the current invoice balance with any unreleased cash
.
          PACK     DIM12,SP4,INVNUMBR
          PACK     KEY29,DIM12,SP30
          CALL     RSRCDTE3                      * position on invoice number
GBAL0500  CALL     RKRCDTE3                      * read next record
          BRANCH   OVRCD,GBAL1000                * eof - no more unreleased cash
.
          MATCH    DIM12,RCDTINVN                * same invoice no. still ?
          GOTO     GBAL1000 IF NOT EQUAL         * no - no more unreleased cash
.
          MATCH    PRINDEBT,RCDTURNO             * Same Debtor no?
          GOTO     GBAL0500 IF NOT EQUAL
.
          MATCH    SP8,RCDTRELD                  * release date blank ?
          GOTO     GBAL0500 IF NOT EQUAL         * no - ignore record
.
          MOVE     RCDTRECN,KEY12
          CALL     RDRCBNK1                      * receipt header record found ?
          BRANCH   OVRCD,GBAL0500                * no - ignore
.
          MATCH    "1",RCBNSTAT                  * receipt cancelled ?
          GOTO     GBAL0500 IF EQUAL             * yes - ignore record
.
          SUB      RCDTAMNT,CURRBALN             * update current balance
          GOTO     GBAL0500                      * get next record
.
.         Now check if the invoice will have a zero balance on release
.
GBAL1000  COMPARE  ZERO,CURRBALN                 * zero balance ?
          GOTO     GBAL9100 IF NOT EQUAL         * no
.
GBAL9000  MOVE     ANSB,BALNSTAT                 * yes
          GOTO     GBAL9999
.
GBAL9100  MOVE     ANSU,BALNSTAT
.
GBAL9999  RETURN
+
.*****************************************************************************
.*                            HEAD0000                 Called by: PRIN0000   *
.*                       Print page heading                                  *
.*****************************************************************************
.
HEAD0000  CALL      HEAD132                      * display page header
.
          PRINT     *N,*40,"Remittance Advice: ",PMEHRADV,"  Part: ",PMEHPNUM:
                    " of ",PMEHPTOT
.
          COMPARE   ONE,CPAGENO                  * first page ?
          GOTO      HEAD1000 IF NOT EQUAL        * no
.
.         For first page only, print remittance advice payer & payee details
.
          PRINT     *N,*1,"Remittance Advice Payer & Payee Details"
          CALL      LINE0000                     * draw line across page
.
          UNPACK    PMEHDATE,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          UNPACK    PMEHDAMT,DIM7,DIM2
          PACK      DIM10,DIM7,DOT,DIM2
          MOVE      DIM10,FORM7P2
          MOVE      FORM7P2,DIM10
          SQUEEZE   DIM10
.
          PRINT     *1,PIPE,*3,"Bank A/C Number  : ",PMEHBNUM,*66,PIPE:
                    *132,PIPE,*N:
                    *66,PIPE,*68,"Run Date           : ",CPCDATE:
                    *1,PIPE,*3,"Bank A/C Name    : ",PMEHBNAM,*132,PIPE,*N:
                    *66,PIPE,*68,"Payer Name         : ",PMEHNAME:
                    *1,PIPE,*3,"Bank BSB Code    : ",PMEHBBSB,*132,PIPE,*N:
                    *66,PIPE,*68,"Fund Transaction Id: ",PMEHFTID:
                    *1,PIPE,*3,"Payment Reference: ",PMEHPREF,*132,PIPE,*N:
                    *66,PIPE,*68,"Payee Location Id  : ",PMEHPLID:
                    *1,PIPE,*3,"Deposit Amount   : $",DIM10,*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
.         Print the payment details header
.
HEAD1000  IF        CPAGENO = 1
            PRINT     *N,*1,"Remittance Advice Transaction Details"
          ELSE
            PRINT     *N,*1,"Remittance Advice Transaction Details (contd.)"
          ENDIF
.
          CALL      LINE0000                     * draw line across page
.
          PRINT     *1,PIPE,*3,"Unq Num",*12,PIPE,*14,"Patient Name":
                    *76,PIPE,*103,PIPE,*105,"Claimed Amount",*132,PIPE,*N:
                    *1,PIPE,*12,PIPE,*14,"Benefit",*25,PIPE,*27,"Lodgement":
                    *38,PIPE,*65,PIPE,*67,"Previous",*76,PIPE,*78,"Previous":
                    *103,PIPE,*105,"Claim",*132,PIPE,*N:
                    *1,PIPE,*3,"Invoice",*12,PIPE,*14,"Amount ($)":
                    *25,PIPE,*27,"Date",*38,PIPE,*40,"Transaction Id":
                    *65,PIPE,*67,"Invoice",*76,PIPE,*78,"Transaction Id":
                    *103,PIPE,*105,"Channel Code",*132,PIPE
.
          CALL      LINE0000                     * draw line across page
.
          IF        CPAGENO = 1
            MOVE      TWENTY1,CLNO               * initialise line count
          ELSE
            MOVE      TEN2,CLNO                  * initialise line count
          ENDIF
.
HEAD9999  RETURN
+
.*****************************************************************************
.*                            LINE0000                 Called by: HEAD0000   *
.*                      Draw line across page                     PRIN0000   *
.*****************************************************************************
.
LINE0000  PRINT     "*-----------------------------------------------":
                    "------------------------------------------------":
                    "-----------------------------------*"
.
LINE9999  RETURN
+
.*****************************************************************************
.*                              CREA0000               Called by: MAIN0000   *
.*             Create a new temporary file                                   *
.*****************************************************************************
.
CREA0000  CALL      TFILENAM                     * Generate temporary file name
          MOVE      TFILNAME,TEMPFILE
.
          CALL      KILL0000                     * remove existing file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ISBUILD,TEMPFILE,UKEY
          EXECUTE   CMDLINE,TASKID               * create temporary index file
.
          OPEN      BALTEMP1,TEMPFILE            * open temp index file
.
CREA9999  RETURN
+
.****************************************************************************
.*                              KILL0000               Called by: MAIN0000  *
.*               Close and erase the temporary file                         *
.****************************************************************************
.
KILL0000  CLOSE     BALTEMP1                     * close file
.
          CLEAR     CMDLINE
          PACK      CMDLINE,ERASE,TEMPFILE       * set file erase command
          EXECUTE   CMDLINE,TASKID               * erase temp file
.
KILL9999 RETURN
+
.****************************************************************************
.*                              CLER0000               Called by: MAIN0000  *
.*               Close and erase the temporary file                         *
.****************************************************************************
.
CLER0000  MOVE      SP20,KEY17
          CALL      RSTEMP1                      * position at start of file
          CALL      RKTEMP1                      * read next record
          BRANCH    OVRCD,CLER9999               * eof - finished
.
          PACK      KEY17,BALNSTAT,INVNUMBR,UNQNUMBR
          CALL      DETEMP1                      * delete current record
          GOTO      CLER0000                     * get next record
.
CLER9999  RETURN
+
.****************************************************************************
.*        IO ROUTINES FOR TEMPORARY FILE                                    *
.****************************************************************************
.
RATEMP1   RESET     KEY17
          MOVE      ZERO,OVRCD
          READ      BALTEMP1,KEY17;ANS
          GOTO      OVERCOND IF OVER
          RETURN
.
RSTEMP1   READ      BALTEMP1,KEY17;;
          RETURN
.
RDTEMP1   MOVE      ZERO,OVRCD
          READ      BALTEMP1,KEY17;BALNSTAT,INVNUMBR,UNQNUMBR,PREVINVN,DIM60:
                                   FORM7P2,FORM12P2,FRMTDATE,PMEDTRID,PMEDPTID:
                                   PMEDCCOD
          GOTO      OVERCOND IF OVER
          RETURN
.
RKTEMP1   MOVE      ZERO,OVRCD
          READKS    BALTEMP1;BALNSTAT,INVNUMBR,UNQNUMBR,PREVINVN,DIM60:
                             FORM7P2,FORM12P2,FRMTDATE,PMEDTRID,PMEDPTID:
                             PMEDCCOD
          GOTO      OVERCOND IF OVER
          RETURN
.
RPTEMP1   MOVE      ZERO,OVRCD
          READKP    BALTEMP1;BALNSTAT,INVNUMBR,UNQNUMBR,PREVINVN,DIM60:
                             FORM7P2,FORM12P2,FRMTDATE,PMEDTRID,PMEDPTID:
                             PMEDCCOD
          GOTO      OVERCOND IF OVER
          RETURN
.
WRTEMP1   WRITE     BALTEMP1,KEY17;BALNSTAT,INVNUMBR,UNQNUMBR,PREVINVN,DIM60:
                                   FORM7P2,FORM12P2,FRMTDATE,PMEDTRID,PMEDPTID:
                                   PMEDCCOD
          RETURN
.
UPTEMP1   UPDATE    BALTEMP1;BALNSTAT,INVNUMBR,UNQNUMBR,PREVINVN,DIM60:
                             FORM7P2,FORM12P2,FRMTDATE,PMEDTRID,PMEDPTID:
                             PMEDCCOD
          RETURN
.
DETEMP1   DELETE    BALTEMP1,KEY17
          RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
          INC       TFILENAM                     * Generate Temp File Name
.
          INC       IBASEQIO/INC                 * Sequential Numbers File
          INC       PMSERDIO/INC
          INC       PMSERHIO/INC
          INC       PRIECTIO/INC
          INC       PATMA1IO/INC
          INC       PATHSPIO/INC
          INC       PRIINVIO/INC
.         INC       PMSVX1IO/INC
          INC       RCPBNKIO/INC
          INC       RCPDTEIO/INC
          INC       WEBSECIO/INC
          INC       WEBERRIO/INC                 * Web Server Error Logging
+
