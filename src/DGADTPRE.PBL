.**************************************************************************
.*  DGADTPRE  :  Pre-Admit a patient  from a DataGate request             *
.*               ~~~~~~~~~~~~~~~~~~~                                      *
.*                                                                        *
.*  Author    :  ROD   (30/11/95)                                         *
.*                                                                        *
.*  Mods      :                                                           *
.*        V12.00.01 14/05/2025  Ebon Clements    TSK 0955096              *
.*                  Added alpanuneric visit number generation             *
.*                  NXTA0000 - GENANVIS                                   *
.*                  22/05/2025  Alina Bhari                               * 
.*                  -CLEAR000,RDSUR000,VALID000,PPMI0000,PPRE0000         * 
.*                  -PNMP0000,PADM1100,PADM2000                           * 
.*        V11.00.01 01/04/2020  J.Tan             TSK 0868813             *
.*                  Changed PKNAME to DIM80                               *
.*        V10.07.01 04/01/2015  Ebon Clements    TSK 0294154              *
.*                  Added PTPAOSMS to prev address file write             *
.*        V10.06.01 12/05/2015  Steve Armstrong  CAR 314108               *
.*                  Removed reference to PATCGPFD (No Longer in use)      *
.**************************************************************************
.*        V10.04.01 22/01/2014  Don Nguyen        CAR 295972              *
.*                  Modified UPAD0000 - Changed KEY16 to KEY24            *
.*        V10.02.03 13/07/2011  Steve Armstrong   CAR 240722              *
.*                  Further mods to cater for second give name as part    *
.*                  of PATGSRFD keys                                      *
.*        V10.02.02 22/06/2011  Steve Armstrong   CAR 240722              *
.*                  Mods to cater for changes to PATGSRFD:                *
.*                       - GSRSNAM & GSRGNAM extended to 30 chars.        *
.*                       - PTGSGNM2 added.                                *
.*        V10.02.01 30/03/2011  Mike Laming       CAR 240107              *
.*                  Remove PATMDSFD & IO - Obsolete                       *
.**************************************************************************
.*        V10.01.02 02/02/2011  Steve Armstrong   CAR 237520              *
.*                  Mods to remove Detente interface (PATDETNT)           *
.*        V10.01.01 01/12/2010  Peter Vela        CAR 233148              *
.*                  Initialised pattranf variables to spaces before write *
.**************************************************************************
.*        V9.04.01  03/08/05 J.Tan    CAR 62750                           * 
.*                  Removed redefined amount variables                    * 
.**************************************************************************
.*        V9.03.02  16/02/2004  Steve Armstrong  CAR 47516                *
.*                  Change READ to read into DIM8  and move this to       *
.*                  BKREBOOK to get around reading nulls.  Also cleared   *
.*                  bokrec variables in CLEAR000.                         *
.*                  Note: Previously done in v5/6 versions as CAR 37717.  *
.*        V9.03.01  07/11/2003  Steve Armstrong  CAR 44931                *
.*                  Mods to load key for pmsvx1af prior to writing new    *
.*                  record.                                               *
.**************************************************************************
.*        V9.02.08  14/11/2002  Davin                                     *
.*                  Removed reference to $$DBASE WEB compile option       *
.*        V9.02.07  30/05/2002  Steve Armstrong    srf 18200              *
.*                  Mods to allow a pre-admission without a previous      *
.*                  booking.                                              *
.*        V9.02.06  22/04/2002  Mike Laming                               *
.*                  Replace PMEDI with Composite variable PMEDIXX (which  *
.*                  contains PMEDI+PTMXMCCD) Add call (SPLTPMED)to split  *
.*                  these.                                                *
.*        V9.02.05  16/01/2002 Sai SRF 14169                              *
.*                  Removed PATMDIIO & PATMOPIO                           *
.*        V9.02.04  20.11.2001  B.G.Ackland                               *
.*                  Remove pi's from Program
.*        V9.02.03  24.10.2001  B.G.Ackland                               *
.*                  Remove pi from CFRDTE & CMMHDT Control File Update    *
.*        V9.02.02  26/09/2001  Mike Laming                               *
.*                  Add fields from PMI Master Extension 2 - PMSPX2       *
.*                  and Visit Master Extn 1 - PMSVX1 (for RCH & SVHM)     *
.*                  using $$DBASE compiler optn for WEB based vers only   *
.*                  (SVHM & RCH will not be using Pre-admission PMI Master*
.*                   so there is no Extn.2 to PATPRAM)                    *
.*        V9.02.01  09/09/2001  Sandra Barcham                            *
.*                  Add DOB & SEX to patgsrnf                             *
.*        V5.10.B02 11/04/2001  Ebon Clements                             *
.*                  Made changes for new PATPA1FD layout. Moved spaces to *
.*                  new fields that are not used                          *
.*        V5.10.B01 29/03/2001  Glenn Saunders                            *
.*                  Remove access to PTCNSNDX and associated processing.  *
.*                  Remove all references to PATSUR file (old surnames).  *
.*        V5.09.B02 08/01/2001  Pat Dirito                                *
.*                  Added XSPCELL for Previous Address Data               *
.*        V5.09.B01 03/01/2001  J.Tan                                     *
.*                  Added Sex & Date of Birth to patgsrnf file            *
.*        V5.08.01  16/06/2000  Tonii Tang                                *
.*                  Wrote to history file wathisaf if W/L status changes  *
.*                  to 3                                                  *
.**************************************************************************
.*        V5.08.B01 25/02/2000  Greg Horvat                               *
.*                  Removed PATADJIO PATMMRIO & PATPRADJ                  *
.*            V5.07.01 22/12/1998  Davin                                  *
.*                     Y2K mods                                           *
.*            V5.07.00 22/10/1998  Davin                                  *
.*                     Mods for 507                                       *
.*            V5.05.02 03/11/1997  Steve Armstrong                        *
.*                     Mods for new admission file variables              *
.*            V5.05.01 13/10/1997  Steve Armstrong   WHL                  *
.*                     Mods for new Master extension file variables       *
.*                     (PTMXOPER - PTMXPOST)                              *
.**************************************************************************
.*            V5.04.02 03/07/1997  Steve Armstrong                        *
.*                     Mods to continue processing if U/R number is not   *
.*                     zero and CGENRUR is zero.                          *
.*            V5.04.01 17/04/1997  Steve Armstrong                        *
.*                     Mods to use inbound & outbound comms client        *
.*                     (DGATEIN & DGATEOUT).                              *
.*                                                                        *
.**************************************************************************
          DEFPROC   DGADTPRE
 IFGE     $$VER,7
.
          INC       DGHOS31V                * copied and modified from PATDAT31
.
CCNTRESI  DIM       1     * continue if claim code doesnt match resident status?
KEEPOLAL  FORM      1     * keep old surname as an alias (0=No, 1=Yes)
+
.**************************************************************************
.*  DGPRE000  :  Process datagate Pre-Admission message                   *
.**************************************************************************
DGPRE000  MOVE      "PRE",RPLYHEAD
          CALL      PROPE000                      * open some files
          CALL      CLEAR000                      * clear some fields
.
. read the rest of the incoming message
.
          READ      DGATEOUT;PURNO,DIM8;          * get UR &/or booking no.
          MOVE      DIM8,BKREBOOK
.
          CALL      VALID000                      * read pat. details & validate
          BRANCH    EXIT,DGPRE900                 * Error!  Patient not valid
.
. read PMI vars from message
. *SB will suppress blank fill, *SP will turn off suppress blank fill
.
          READ      DGATEOUT;*SB,PTITL,PHOSP,PLDAYS,PBDEBT,PSNAME,PGNAME:
                          PPSNAME,PADD1,PADD2,PSUBRB,PADD4,PPOST,PTELEP,PTELEB:
                          PSEX,PMSTAT,PBDATE,PCONT,PREG,PTYPE,POCCUP:
                          PLDDATE,PMEDIXX,PPENNO,PPNDTE,PREPAT,PSMOK,PMICRO:
                          PCEASE,PCASE,PAUTOPY,PHIGH1,PHIGH2,PHIGH3:
                          PLOCDOC,PFUNDH,PFNDTB,PFNDMM,PUSR1,PUSR2,PUSR3:
                          PUSR4,PUSR5,PUSR6,PUYN1,PUYN2,PUYN3,PYRRES:
                          PNKNAME,PNKADD1,PNKADD2,PNKSUBR,PNKADD4,PNKPOST:
                          PNKTELP,PNKTELB,PNKRELP,PFNDYY,PFNDCG,PDECDTE:
                          PDIET,PINITHOS,PHKADUNI,PTMAEMPC,PTMANOKO:
                          PTMANOKE,PTMADCNO,PTMXRDAT,PTMXMEAL,PTMXLGA:
                          PTMXLS,PTMXLSDT,PTMXFHMD,PTMXMHU1,PTMXMHU2:
                          PTMXMHU3,PTMXECNM,PTMXECA1,PTMXECA2,PTMXECA3:
                          PTMXECA4,PTMXECPC,PTMXECPP,PTMXECBP,PTMXECRE:
                          PTMXNRNM,PTMXNRA1,PTMXNRA2,PTMXNRA3,PTMXNRA4:
                          PTMXNRPC,PTMXNRPP,PTMXNRBP,PTMXNRRE,PTMX3BEX:
                          PTMXCARD,PTMXCEXP,PTMXCXMP,PTMXFMLY,PTMXCHNM:
                          PTMXDOFR,PMPXRHC1,PMPXRH1G,PTMXSPID,PMPXR1GC:
                          PTMXOSDT,PTNINMPI,PKNAME,PKADD1,PKADD2:
                          PKSUBR,PKADD4,PKPOST,PKTELEP,PKTELEB,PKRELP,KEEPOLAL;
.
          CALL      IBACLOCK                      * set up patients age
          PACK      AGEDATE,CCC,CYY,CMM,CDD
          REP       " 0",AGEDATE
          CALL      CALCAGE 
          MOVE      PSAGEYRS,PSAGE
.
.......   CALL      PPMI0000                      * post PMI details
.
          MOVE      ZERO,OVRCD
          READ      DGATEOUT;ADATE,ATIME,AWARD,ABED,ADOCTR,ADOCTA:
                          ADOCTL,ASRCE,ATYPE,ACLSS,ACARE,AFUNDH,AFNDTB,AFNDMM:
                          AMBS,ADIAG1,ADIAG2,ADOCTT,ACLSSFT,ACLAIM,ADIET:
                          APLOCCR,ASTAY,ADYHOSP,AMEMB,AMEMBNO,AUSR1,AUSR2:
                          AUSR3,AUSR4,AUSR5,AUSR6,AUSR7,ARDRNAM,AFNDYY,AFNDCG:
                          PTYPE,PTMIPVIS:
                          ABWGHT,PMVXRHC1,PMVXRH1G,PTMSFHAN,PTMSECRA,PTMSMGIN:
                          PTAXGUTY,PTAXGUIN,PTAXGUIT,PTAXGUNM,PTAXGUA1,PTAXGUA2:
                          PTAXGUA3,PTAXGUA4,PTAXGUPC,PTAXGUPH,PTAXGUOC,PTAXGUEC:
                          PTAXGURL,PTMIDOFR,PMVXRHC1,PTMIREFD,PTMIDFCN,PTMIPHPU:
                          PTMIAGNC,PTMIESSF,PTMIUSR8,PTMIUSR9,PTMIUSR0,PTMIPDRG:
                          CCNTRESI,PTAHANNI,PTDAADTS:
                          PTMXOPER,PTMXUKDO,PTMXCELL,PTMXADD1,PTMXADD2:
                          PTMXADD3,PTMXADD4,PTMXPOST:
                          PMPXINTR,PMPXLNG1,PMPXLNG2,PMPXLNG3,PMPXPEML:
                          PMPXEDOB,PMPXCMOB,PMPXCEML,PMPXCCRP,PMPXKMOB:
                          PMPXKEML,PMPXKCRP,PMPXRMOB,PMPXREML,PMPXRCRP:
                          PMPXMEDC,PMPXDETY,PMPXPRIS,PMPXCSER,PMPXPHEI:
                          PMPXPWEI,PMPXDREC,PMPXDVAC,PMPXPNSD,PMPXUYN4:
                          PMPXUYN5,PMPXUYN6,PMPXABRG,PMPXPRVI,PMPXCRIN:
                          PMPXHOML,PMPXUDC1,PMPXUDC2,PMPXUDC3,PMPXUSR7:
                          PMPXUSR8,PMPXUSR9,PMPXMSNA,PMPXMGNA,PMPXMTLE:
                          PMPXMAD1,PMPXMAD2,PMPXMAD3,PMPXMAD4,PMPXMPOS:
                          PMPXMPNO,PMPXMBNO,PMPXMMNO,PMPXMEML,PMPXMCNT:
                          PMPXMCRP,PMPXMLAB,PMPXMREL,PMPXFSNA,PMPXFGNA:
                          PMPXFTLE,PMPXFAD1,PMPXFAD2,PMPXFAD3,PMPXFAD4:
                          PMPXFPOS,PMPXFPNO,PMPXFBNO,PMPXFMNO,PMPXFEML:
                          PMPXFCNT,PMPXFCRP,PMPXFLAB,PMPXFREL:
                          PMVXVLOC,PMVXCFSG,PMVXINGP,PMVXCPTH,PMVXHCP1:
                          PMVXHCP2,PMVXHCP3,PMVXHCP4,PMVXRHC1,PMVXRHC2:
                          PMVXRHC3,PMVXRHC4,PMVXCADM,PMVXIRAD,PMVXIDUS:
                          PMVXCRAV,PMVXRCCT,PMVXAPWD,PMVXAPBD,PMVXPOWD:
                          PMVXPOBD,PMVXPSTY,PMVXVALW,PMVXPALW,PMVXINDC:
                          PMVXMDAV,PMVXFRMS,PMVXEDC1,PMVXEDC2,PMVXEDC3:
                          PMVXUDF1,PMVXUDF2,PMVXUDF3,PMVXUDF4,PMVXUDT1:
                          PMVXUDT2,PMVXUDT3,PMVXUDT4,PMVXUDT5,PMVXUDT6
.
          CALL      SPLTPMED                * Split PMEDIXX into PMEDI, PTMXMCCD
.
. perform pre-admission
.
          CALL      PPRE0000                      * do pre-admission
          BRANCH    EXIT,DGPRE900                 * Error!  Visit record Locked
.
. send reply message as successful
.     NB.  SP1 at end of reply has been added because the interpreter does
.     not place a "|" after the last field, and Datagate requires this.  By
.     putting an extra field on the end (which is blank), a "|" will then
.     be added after the last field.
.
          MOVE      "00000",RPLYCODE              * successful message
          MOVE      SP50,RPLYDESC                 * clear error description
          PACK      CCENCODE,CCDATE,CCDST,CCSRC,CCNAME,REPLYRPL
          WRITE     DGATEIN;CCENCODE:
                            RPLYHEAD,RPLYCODE,RPLYDESC:
                            DGMISC1,DGMISC2,DGMISC3,PURNO,AADMNO,SP1
.
          ADD       ONE,SUCCPROC                  * increm # success transactns
          GOTO      DGPRE999
.
. --- send back an Error response ---
.
DGPRE900  PACK      CCENCODE,CCDATE,CCDST,CCSRC,CCNAME,REPLYRPL
          WRITE     DGATEIN;CCENCODE:
                            RPLYHEAD,RPLYCODE,RPLYDESC:
                            DGMISC1,DGMISC2,DGMISC3,SP1
          ADD       ONE,ERRRPROC                  * increm # error transactions
.
DGPRE999  GOTO      ENDPROC1
+
.*************************************************************************
.*  PROPE000  :  open some files                                         *
.*************************************************************************
PROPE000  OPEN      PATPR1A1,"patpr1af"
          OPEN      PATPX1A1,"patpx1af"
.
          IF        PTCNAXEU=1
            OPEN      PATAXEA1,"pataxeaf"
          ENDIF
          IF        PTCNUCRD=1
            OPEN      PATVKCA1,"patvkcaf"
          ENDIF
.
PROPE999  RETURN
+
.***************************************************************************
.*  CLEAR000  :  clear fields                                              *
.***************************************************************************
CLEAR000  CALL      CLPATMAS                      * clear master file vars
          CALL      CLPMSPX2                      * Clear Master Extn.2    I900
          CALL      CLPATMIS                      * clear admission vars
          MOVE      SP5,PTDAADTS                  * admission transfer source
          MOVE      SP20,PTPNNMPI
          MOVE      ZEROVISN,AADMNO
.
          MOVE      ZEROVISN,BKREBOOK
          MOVE      SP20,DBKREBOO
          MOVE      SP20,BKREURNO
          MOVE      ZERO,BKRESTAT
          MOVE      SP20,DIM8
.
. clear PRA details
.
          PACK      PKNAME,SP70,SP10
          MOVE      SP50,PKADD1
          MOVE      SP50,PKADD2
          MOVE      SP50,PKSUBR
          MOVE      SP50,PKADD4
          MOVE      SP50,PKPOST
          MOVE      SP50,PKTELEP
          MOVE      SP50,PKTELEB
          MOVE      SP50,PKRELP
          MOVE      ZEROVISN,PKADMN
.
CLEAR999  RETURN
+
.***************************************************************************
.*  VALID000  :  Check if patient is in Hospital based on U/R              *
.*               Returns :  EXIT=0=No,   EXIT=1=Yes                        *
.***************************************************************************
.
.         If manual U/R generation is turned on, and if there is no U/R
.         number passed, then don't continue
.
VALID000  IF        CGENRUR = 0
            MATCH     ZEROUR,PURNO        
            GOTO      VALID920 IF EQUAL
          ENDIF
.
          MATCH     ZEROVISN,BKREBOOK             * do we have a booking no.?
          GOTO      VALID050 IF NOT EQUAL         * yes
.
          MATCH     ZEROUR,PURNO                  * do we have a U/R no.?
          GOTO      VALID080 IF NOT EQUAL         * yes
          GOTO      VALID500                      * no
.
. we have a booking number so validate
.
VALID050  MOVE      BKREBOOK,KEY8
          CALL      RDBKREC1                     * booking no. on file ?
          BRANCH    OVRCD,VALID080               * no - process as pre-admission
.                                                  without a booking
.
. make sure we have the correct Booking Status (=0)
.
          BRANCH    BKRESTAT,VALID800,VALID810,VALID820,VALID830
.
          MATCH     ZEROUR,BKREURNO
          IF        @EQUAL
            MOVE      BKREBOOK,KEY8
            CALL      RDPRAM1
            BRANCH    OVRCD,VALID910
.
            MOVE      ZEROUR,PURNO
            CALL      RDSUR000                      * read in surname record
            BRANCH    EXIT,VALID950                 * missing surname record
.
            GOTO      VALID500
          ENDIF
.
.    do one final check that if U/R # passed, make sure it matches bkreurno
.
          MATCH     ZEROUR,PURNO
          IF        !@EQUAL
            MATCH     PURNO,BKREURNO
            GOTO      VALID960 IF NOT EQUAL
          ENDIF
.
          MOVE      BKREURNO,PURNO                * set up U/R Number
.
. we have a U/R number so validate
.
VALID080  MOVE      PURNO,KEY8
          CALL      RDMAST1
          BRANCH    OVRCD,VALID910                * missing master details
          CALL      RDPMPX21
.
          CALL      RDSUR000                      * read in surname record
          BRANCH    EXIT,VALID950                 * missing surname record
.
          CALL      AMSV1000                      * save PMI address vars
.
          PACK      KEY24,PURNO,SP20
          CALL      RDSVISA2
VALID100  CALL      RDKVISA2
          BRANCH    OVRCD,VALID500                * not on file
.
          MATCH     PURNO,PVIURNO                 * same U/R Number?
          GOTO      VALID500 IF NOT EQUAL         * No
.
          MOVE      PVIBILL,KEY8
          CALL      RDMISS1
          BRANCH    OVRCD,VALID100                * ignore
.
. we have a visit record so check the Patients status
.
          BRANCH    ASTAT,VALID100,VALID900,VALID100,VALID900,VALID100
          GOTO      VALID100
.
VALID500  MOVE      ZERO,EXIT                     * Patient is not in Hospital
          GOTO      VALID999
.
. set up error messages
.
VALID800  MOVE      "02170",RPLYCODE
          MOVE     "Booking is Pre-admitted",RPLYDESC
          GOTO      VALID990
.
VALID810  MOVE      "02171",RPLYCODE
          MOVE     "Booking is Cancelled",RPLYDESC
          GOTO      VALID990
.
VALID820  MOVE      "02172",RPLYCODE
          MOVE     "Booking is Admitted",RPLYDESC
          GOTO      VALID990
.
VALID830  MOVE      "02173",RPLYCODE
          MOVE     "Booking is Discharged",RPLYDESC
          GOTO      VALID990
.
VALID900  MOVE      "02116",RPLYCODE
          MOVE     "Patient already in hospital with another admission",RPLYDESC
          GOTO      VALID990
.
VALID910  MOVE      "01100",RPLYCODE
          MOVE      "Patient Master details not found",RPLYDESC
          GOTO      VALID990
.
VALID920  MOVE      "U/R generation must not be manual",RPLYDESC
          MOVE      "00020",RPLYCODE
          GOTO      VALID990
.
VALID930  MOVE      "Missing U/R and Booking number in message",RPLYDESC
          MOVE      "02121",RPLYCODE
          GOTO      VALID990
.
.VALID940  MOVE      "Invalid Booking Number",RPLYDESC
.          MOVE      "02174",RPLYCODE
.          GOTO      VALID990
.
VALID950  MOVE      "Missing Surname record",RPLYDESC
          MOVE      "02104",RPLYCODE
          GOTO      VALID990
.
VALID960  MOVE      "UR number/Booking record discrepancy",RPLYDESC
          MOVE      "02175",RPLYCODE
          GOTO      VALID990
.
VALID990  MOVE      ONE,EXIT                      * Patient is already in Hosp.
.
VALID999  CALL      CLPV0000                      * clear visit details
          CALL      CLPATMIS                      * clear admission vars
          RETURN
+
.***************************************************************************
.*  RDSUR000  :  read in the surname record                                *
.***************************************************************************
RDSUR000  CALL      OPSU0000
.
          MATCH     ZEROUR,PURNO
          IF        @EQUAL
            MOVE      BKREBOOK,GSRBILL
          ELSE
            MOVE      ZEROVISN,GSRBILL
          ENDIF
.
          MOVE      PTMASNAM,GSRSNAM
          MOVE      PMPXFNAM,GSRGNAM
          MOVE      PMPXSNAM,PTGSGNM2
          PACK      KEY115,PURNO,GSRBILL,GSRSNAM,GSRGNAM,PTGSGNM2,PBDATE,PSEX:
                           SP70,SP70
          CALL      RDPTGSR1
          BRANCH    OVRCD,RDSUR900
.
          MOVE      ZERO,EXIT
          GOTO      RDSUR999
.
RDSUR900  MOVE      ONE,EXIT
.
RDSUR999  CALL      CLSU0000
          RETURN
+
.***************************************************************************
.*  PPMI0000  :  Post the PMI details                                      *
.***************************************************************************
PPMI0000  MATCH     ZEROVISN,AADMNO         * Only do this if by admission#
          GOTO      PPMI9999 IF EQUAL
.
......... DISPLAY   *P1:24,*EL,*V2LON,"***  Posting Master Details  ***"
.
          COMPARE   THREE,PSTAT             * Master not yet allocated ?
          GOTO      PPMI6000 IF EQUAL       * yes
.
          MATCH     ZEROUR,PURNO            * U/R=0 ?
          GOTO      PPMI6000 IF EQUAL       * yes
.
          CALL      PMIA0000                * update PMI Audit file
.
          MOVE      SP8,PTMX3BEX
          PACK      KEY8,PURNO,SP10
          CALL      RDAMAST1
          CALL      UPMAST1                 * update Master with Latest
          MOVE      PTMXLS,SAVLEGST         * save for posting (srf 611204)
          MOVE      PTMXLSDT,SAVLSDAT       
.
          MOVE      AADMNO,PVIBILL
.
          IF        PCEASE=ONE
            MOVE      AADMNO,DIM8
            PROC      PATDEATH                * update files if patient dead
            MOVE      DIM8,KEY8
            CALL      RDMISS1      
          ENDIF
.
.         Check if there has been a change of address
.
          CALL      CHAD0000                * change of addess ?
          COMPARE   ONE,CHGADD
          GOTO      PPMI2000 IF NOT EQUAL   * no
.
. If this is the first change for today, write the previous address
. to the Previous Address file
.
          OPEN      PATPA1A1,"patpa1af"
          CALL      UPAD0000
.
. Update the surname file
.
PPMI2000  CLOSE     PATPA1A1
.
          MOVE      ZERO,CSALIAS            * assume dont save old surn as alias
          LOAD      CSALIAS,KEEPOLAL,TWO    * set csalias=2 if want to save alia
          MOVE      BKREBOOK,ADMISNO        * save the booking number
          CALL      OPSU0000                * open surname file
          OPEN      CONTROLF,"controlf"
          CALL      UPDSUR                  * Update any name changes (PATCOMN2)
          CLOSE     CONTROLF
          CALL      CLSU0000                * close surname file
          MOVE      ADMISNO,BKREBOOK        * restore the booking number
.
. Post the changes to the audit file if necessary
.
          BRANCH    CAUDM,PPMI2500          * audits turned on?
          MOVE      ANSB,ACTION
          CALL      WRMAUD
          MOVE      ANSCM,ACTION
          CALL      AMSV0000                * save Master file vars.
          CALL      WRMAUD
.
PPMI2500  MATCH     ZEROVISN,AADMNO
          GOTO      PPMI9000 IF EQUAL
.
. Don't post P.R.A details for pre-admission bookings yet.
.
          COMPARE   ONE,CBOOK               * using Booking option ?
          GOTO      PPMI3000 IF NOT EQUAL
          BRANCH    OPTION,PPMI9000,PPMI3000,PPMI3000,PPMI3000,PPMI9000
.
PPMI3000  CALL      PRAV0000                * save keyin-ed variables
          MOVE      AADMNO,PKADMN
          MOVE      PKADMN,KEY8
.
.         restore SFORMATted variables after opening patre1af
.
          MOVE      SPKADD1,PKADD1
          MOVE      SPKADD2,PKADD2
          MOVE      SPKSUBR,PKSUBR
          MOVE      SPKPOST,PKPOST
          MOVE      SPKTELP,PKTELEP
          MOVE      SPKTELB,PKTELEB
          MOVE      SPKRELP,PKRELP
.
          MATCH     SP70,PKNAME             * if no name don't write a record
          GOTO      PPMI4000 IF EQUAL
.
          CALL      RDARESP1
          BRANCH    OVRCD,PPMI3500
          CALL      UPRESP1
          GOTO      PPMI9000
.
PPMI3500  CALL      WRRESP1
          GOTO      PPMI9000
.
PPMI4000  CALL      RDRESP1
          BRANCH    OVRCD,PPMI9000
          CALL      DERESP1
.
. updating pre-admission data
.
PPMI6000  MOVE      AADMNO,KEY8
          MOVE      AADMNO,PURNO            * Pram use AADMNO as PURNO
.
          CALL      RDAPRAM1
          CALL      UPPRAM1
.
          MOVE      ZEROUR,PURNO
.
. Update the Surname Index File if necessary
.
          MOVE      ZERO,CSALIAS            * assume dont save old surn as alias
          LOAD      CSALIAS,KEEPOLAL,TWO    * set csalias=2 if want to save alia
          MOVE      BKREBOOK,ADMISNO        * save the booking number
          CALL      OPSU0000                * open surname file
          OPEN      CONTROLF,"controlf"
          CALL      UPDSUR                  * update any name changes (PATCOMN2)
          CALL      CLSU0000                * close surname file
          CLOSE     CONTROLF
          MOVE      ADMISNO,BKREBOOK        * restore the booking number
.
          MOVE      AADMNO,PKADMN
          MOVE      PKADMN,KEY8
.
. Handle Person Responsible for Account file (P.R.A)
. Don't post P.R.A details for pre-admission bookings yet.
.
          BRANCH    OPTION,PPMI9000,PPMI6500,PPMI6500,PPMI6500,PPMI9000
.
PPMI6500  MATCH     SP70,PKNAME             * If no name don't write a record
          GOTO      PPMI8000 IF EQUAL
.
          CALL      RDARESP1
          BRANCH    OVRCD,PPMI7000
          CALL      UPRESP1
          GOTO      PPMI9000
.
PPMI7000  CALL      WRRESP1
          GOTO      PPMI9000
.
PPMI8000  CALL      RDRESP1
          BRANCH    OVRCD,PPMI9000
          CALL      DERESP1
.
PPMI9000  COMPARE   ONE,PTCNICAD            * using Current address?
          GOTO      PPMI9999 IF NOT EQUAL   * no
          CALL      PTUPD000                * yes, write to Current Address file
.
PPMI9999  RETURN
+
.****************************************************************************
.*  PPRE0000  :  Post Pre-Admission details                                 *
.****************************************************************************
PPRE0000  MOVE      SP3,ABED                * Pre-Adm cannot have a Bed
          MOVE      SP3,AWARD
          OPEN      CONTROLF,"controlf"
.
          MATCH     ZEROVISN,BKREBOOK       * do we have a booking number?
          GOTO      PPRE1000 IF NOT EQUAL
.
PPRE0200  MATCH     ZEROUR,PURNO            * zero U/R?
          GOTO      PPRE0500 IF NOT EQUAL
.
. we require a U/R so generate one
.
          BRANCH    CGENRUR,PPRE0500,PPRE0900  * computer generate U/R ?
.
. Don't generate a U/R Number
.
PPRE0500  CALL      NXTA0000                * get next Admission No.
          MOVE      PURNO,AURNO
          CLOSE     CONTROLF
          GOTO      PPRE2000
.
. Generate a U/R Number
.
PPRE0900  CALL      NXTA0000                * get next Admission No.
          MOVE      THREE,CPSYSTEM          * Get the next Inpatient U/R
          CALL      GNXTUR
          MOVE      PURNO,AURNO
          CLOSE     CONTROLF
          GOTO      PPRE2000
.
. Booking Option(s) only
.
PPRE1000  MOVE      BKREBOOK,KEY8
          CALL      RDBKREC1                * Re-read booking record
          BRANCH    OVRCD,PPRE1300          * preadmission without booking
.
          MOVE      BKREURNO,AURNO          * Waiting Lists
          MOVE      BKREURNO,PURNO          * Waiting Lists
.
          MATCH     ZEROUR,BKREURNO         * U/R = 0?
          GOTO      PPRE1400 IF NOT EQUAL   * no
.
          BRANCH    CGENRUR,PPRE1400,PPRE1200 * Computer generate U/R No. ?
.
PPRE1200  MOVE      THREE,CPSYSTEM          * get the next Inpatient U/R
          CALL      GNXTUR
.
          MOVE      AADMNO,KEY8             * we have got U/R No.
          CALL      DEPRAM1                 * remove record from patpramf
          CALL      DPNI0000                * remove PATPNI 
.
          MOVE      BKREBOOK,KEY8           * update Booking record
          CALL      RDBKREC1
          MOVE      PURNO,BKREURNO
          CALL      UPBKREC1
.
PPRE1300  MOVE      PURNO,AURNO
.
PPRE1400  CLOSE     CONTROLF
.
          MOVE      BKREBOOK,AADMNO         * Booking system
          MOVE      ONE,ASTAT               * Pre-Admission status 
          CALL      UBOK0000                * fix booking stats
.
PPRE2000  MOVE      ONE,ASTAT
          MOVE      ZERO,APLUR              * make sure it isnt a baby pat
.
. Update the person responsible for the account file
.
          PACK      PKNAME,PKNAME,SP20
          MATCH     SP70,PKNAME
          GOTO      PPRE2100 IF EQUAL
.
          MOVE      AADMNO,PKADMN           * already on file?
          MOVE      PKADMN,KEY8
          CALL      RDARESP1
          BRANCH    OVRCD,PPRE2200          * Not on file so write a rec.
          CALL      UPRESP1                 * update record
          GOTO      PPRE2900
.
PPRE2100  MOVE      AADMNO,PKADMN           * Person Resp. blank so delete
          MOVE      PKADMN,KEY8
          CALL      DERESP1                 * Delete record
          GOTO      PPRE2900
.
PPRE2200  CALL      WRRESP1                 * Write a record
.
. If the patient has a U/R Number, post to the master file.
. Otherwise post to the pre-admission file.
.
PPRE2900  MATCH     ZEROUR,PURNO            * U/R = 0 ?
          GOTO      PPRE3200 IF NOT EQUAL   * no
.
          MOVE      ZEROUR,AURNO
          MOVE      AADMNO,KEY8
          MOVE      AADMNO,PURNO            * Pram use AADMNO as PURNO
          CALL      RDAPRAM1
          BRANCH    OVRCD,PPRE3000          * no Pram record found
          MOVE      TRUE,PRAEXIST           * Admission Number Existed
          CALL      UPPRAM1                 * update Pram file
          MOVE      AADMNO,PVIBILL
          MOVE      ZEROUR,PURNO
.
.....     CALL      PNZNT000                * post NMPI to Nat system
          CALL      SIPR0000                * see if patient registered
          BRANCH    EXIT,PPRE4600           * patient registered on national
.
          CALL      PNMP0000                * post NMPI Number
....      CALL      CUNTD000                * update NZHIS interface stuff
....      CALL      CHNHI000                * if NMPI No. changed handle change
....      CALL      CUDNR0000               * update donor on NZHIS if PC changd
          GOTO      PPRE5000
.
. use AADMNO Number as U/R No in key of pre -ads
.
PPRE3000  MOVE      THREE,PSTAT             * U/R not yet allocated
          CALL      WRPRAM1
          MOVE      FALSE,PRAEXIST          * Admission Number did not Exist
.
. move alerts temporary file data to PATALT (no U/R)
.
....      CALL      WRALT000
....      CALL      WRPTS000                * write PTSMW1 from Temp file
          CALL      WRSDN000                * write PATSDN from Temp file
.
          MOVE      AADMNO,PVIBILL
          MOVE      ZEROUR,PURNO
....      CALL      PNZNT000                * post NMPI to Nat system
          CALL      SIPR0000                * see if patient registered
          BRANCH    EXIT,PPRE4600           * patient registered on national
.
          CALL      PNMP0000                * post NMPI Number
....      CALL      CUNTD000                * update NZHIS interface stuff
....      CALL      CUDNR0000               * update donor on NZHIS if PC changd
.
. Update Surname Index file
.
PPRE3100  CALL      UZDS0000                * update surname file with UR=0
          GOTO      PPRE5000
.
. Write or Update the Master file
.
PPRE3200  MOVE      PURNO,KEY8
          CALL      RDAMAST1
          BRANCH    OVRCD,PPRE4500
          MOVE      ZERO,PSTAT
          CALL      UPMAST1                 * Update Master file
.
            CALL      RAPMPX21              * Position on PMI Extn.2       I900
.                                           * Just being careful !!!       I900
            IF        OVRCD = 0
              CALL      UPPMPX21            * Update PMI Extn.2            I900
            ELSE                                                           I900
              CALL      WRPMPX21            * Write PMI Extn.2             I900
            ENDIF                                                          I900
.
          CALL      CHAD0000                * check for a change in address
          IF        CHGADD=1
            CALL      UPAD0000              * update previous address file
          ENDIF
.
          MOVE      ZERO,CSALIAS            * assume dont save old surn as alias
          LOAD      CSALIAS,KEEPOLAL,TWO    * set csalias=2 if want to save alia
.
          OPEN      CONTROLF,"controlf"
          CALL      OPSU0000                * open surname file
          CALL      UPDSUR                  * Update any name changes
          CLOSE     CONTROLF
          CALL      CLSU0000                * close surname file
.
....      CALL      PNZNT000                * post NZHIS interface stuff
          MOVE      AADMNO,PVIBILL
          CALL      PNMP0000                * post to National UR file
....      CALL      CUNTD000                * update NZHIS interface stuff
....      CALL      CHNHI000                * if NMPI No. changed handle change
....      CALL      CUDNR0000               * update donor on NZHIS if PC changd
          GOTO      PPRE5000
.
PPRE4500  MOVE      ZERO,PSTAT
.
. write the alerts data from the appropriate file to the PATALR file
.
          CALL      OPSU0000                * open surname file
          MOVE      CHOSPNUM,PINITHOS        * Initiating Hospital Number
          MOVE      AADMNO,PVIBILL           * Parameter for WRTUR
          MOVE      THREE,PVITYPE              * Parameter for WRTUR
          CALL      WRTUR                   * Write the new U/R (PATCOMN2)
.
.    was there an admission number when inputing PMI details
.
PPRE4600  IF        PRAEXIST=TRUE
....        CALL      CPMWD000              * move all save to orig files 
          ELSE
....        CALL      WRALR000              * move alerts tmp to PATALR
....        CALL      WRPTM000              * write PTMWS1 from Temp file
....        CALL      WRDNR000              * write PATDNR from Temp file
          ENDIF
.
          PACK      PUSR1,PUSR1,SP3
          MATCH     SP3,PUSR1
          IF        !@EQUAL
            MOVE      SP20,TDESC
            MOVE      "P1",DIM2
            PACK      KEY5,DIM2,PUSR1
            CALL      RDCODE1
          ENDIF
            
....      CALL      PNZNT000                * post NZHIS interface stuff
          MOVE      AADMNO,PVIBILL
          CALL      PNMP0000                * post to National UR file
....      CALL      CUNTD000                * update NZHIS interface stuff
....      CALL      CUDNR0000               * update donor on NZHIS if PC changd
          CALL      CLSU0000                * close surname file
.
......    DISPLAY   *P16:4,*V2LON,PURNO,*P1:24,*EL,*HOFF,*B:
......              "New Patient U/R Number is : ",*V2LON,PURNO,*HOFF,".     ";
......    CALL      HITENTER
.
.         Post the details to the admission file
.
PPRE5000  CALL      PADM0000                * update admission details
          BRANCH    EXIT,PPRE9999           * ERROR!!  Visit record Locked
.
. Post the data to the audit file if desired
.
          BRANCH    CAUDA,PPRE5500          * audit file turned on?
          OPEN      PATAUAA1,"pataa1af"
          MOVE      ANSA,ACTION
          CALL      ABSV0000                * save Admission Vars.
          MOVE      ONE,SASTAT
          CALL      WRAAUD
          CLOSE     PATAUAA1
.
PPRE5500  COMPARE   ONE,PTCNICAD            * Input current address?
          GOTO      PPRE6000 IF NOT EQUAL
          CALL      PTUPD000
.
. everything is OK!
.
PPRE6000  MOVE      ZERO,EXIT 
.
.......   DISPLAY   *P16:5,*V2LON,AADMNO;
          BRANCH    BKRESTAT,PPRE6500
.......   DISPLAY   *P1:24,*EL,*B,"Patient Pre-admission Number is : ":
.......             *V2LON,AADMNO,*HOFF,". ";
.......   CALL      HITENTER
.
PPRE6500  
.......   DISPLAY   *P1:24,*EL,*V2LON:
.......             "***  Pre-admission Data Successfully Posted  ***";
.
PPRE9999  RETURN
+
.*****************************************************************************
.*  ADTD0000  :  Update/Write Admission/Discharge Transfer Destination file  *
.*****************************************************************************
ADTD0000  COMPARE   ONE,PTCNUADT              * Parameter turned on ?
          GOTO      ADTD9999 IF NOT EQUAL
.
          OPEN      PATDADA1,"patdadaf"
          MATCH     SP5,PTDAADTS              * Transfer Source = spaces ?
          GOTO      ADTD2000 IF NOT EQUAL     * no
          MOVE      AADMNO,KEY8               * yes
          CALL      RDPTDAD1                  * read PTDADFD record
          BRANCH    OVRCD,ADTD9000  
.
          MATCH     SP5,PTDADCTS              * Dschg Transfer Source = spaces ?
          GOTO      ADTD1000 IF NOT EQUAL
          CALL      DEPTDAD1                  * delete a PTDADFD record
          MOVE      SP10,PTDAADTS
          MOVE      SP10,PTDADCTS
          GOTO      ADTD9000  
.
ADTD1000  MOVE      SP5,PTDAADTS
          GOTO      ADTD3000
.
ADTD2000  MOVE      PTDAADTS,TFRSRCE          * save Transfer Source
.
          MOVE      AADMNO,KEY8
          CALL      RDPTDAD1                  * read PTDADFD record
          BRANCH    OVRCD,ADTD4000            * record not found
          MOVE      TFRSRCE,PTDAADTS          * set Trans Source = saved T/Srce
.
ADTD3000  CALL      UPPTDAD1                  * update PTDADFD record
          GOTO      ADTD9000
.
ADTD4000  MOVE      SP5,PTDADCTS
          MOVE      SP20,PTDASPAR
          CALL      WRPTDAD1                  * write a PTDADFD record
.
ADTD9000  CLOSE     PATDADA1
.
ADTD9999  RETURN
+
.******************************************************************************
.*  UCNT0000  :  Update the control file with the transfer date if neccessary *
.******************************************************************************
UCNT0000  OPEN      CONTROLF,"controlf"
          READ      CONTROLF,EIGHTY8;*148,CFRDTE
          MATCH     CFRDTE,TDATE
          GOTO      UCNT9000 IF NOT LESS
          MOVE      TDATE,CFRDTE
          WRITAB    CONTROLF,EIGHTY8;*148,CFRDTE
.
UCNT9000  CLOSE     CONTROLF
.
UCNT9999  RETURN
+
.****************************************************************************
.* STRN0000  :  Set up transfer file record                                 *
.* Parameters:  TWARD and TBED, all other variables are set in here         *
.****************************************************************************
STRN0000  MOVE      AURNO,TURNO
          MOVE      AADMNO,TADMN
          MOVE      ATIME,TTIME
          MOVE      ANSA,TMOVE
.
          UNPACK    ADATE,XCENT,XYEAR,XMON,XDAY
          PACK      TDATE,XCENT,XYEAR,XMON,XDAY
          REP       BLTOZERO,TDATE
          RESET     TDATE
.
          MOVE      SAVEND,TRBEND
          MOVE      ADISC,TDISC
          MOVE      ALWAMT,TALLW
          MOVE      HFPORT,TRATEH
          MOVE      MAXDISC,TRATEF
          MOVE      SAVEXTR,TEXTRA
          MOVE      AUSR2,TCHSTAT
.
          BRANCH    CHOSTYP,STRN4000
.
. The following field is not used by Private Hospitals
.
          MOVE      SP3,TCHSTAT
.
STRN4000  MOVE      ZERO,TRATEG
          MOVE      ATYPE,TATYPE
          MOVE      ADOCTA,TADOCT
          MOVE      ACLSSFT,TDEPT           * set up department
          MOVE      SAVBTYP,TRBTYP
          MOVE      SP3,PTTRLTYP            * clear type of leave
          MOVE      ONE,PTTREPNO
.
. Write Transfer File Record
.
          PACK      KEY30,TADMN,TDATE,TTIME,TWARD,TBED
          CALL      RDATRAN2
          IF        OVRCD=0
            PACK      TRCDATE,CCC,CYY,CMM,CDD
            REP       " 0",TRCDATE
            CLOCK     TIME,TRCTIME
            MOVE      WBSEUID,PTTRUUID
            CALL      UPTRAN2
          ELSE
.
            MOVE      ZERO,PTTREPSD
            MOVE      ZERO,PTTRLSPT
            MOVE      ZERO,PTTRLSRB
            MOVE      ZERO,PTTRAEND
            MOVE      ZERO,PTTRADPT
            MOVE      ZERO,PTTRADRB
            MOVE      SP70,PTTRNHAC
            MOVE      SP70,PTTROPER
            MOVE      SP70,PTTRAUAT
            MOVE      SP70,PTTRCUID
            MOVE      SP70,PTTRLTSC
            MOVE      ACLAIM,PTTRCLTY
.
            PACK      PTTRCDAT,CCC,CYY,CMM,CDD
            REP       " 0",PTTRCDAT
            CLOCK     TIME,PTTRCTIM
            MOVE      WBSEUID,PTTRUCID
            UNPACK    SP70,TRCDATE,TRCTIME,PTTRUUID
.
            CALL      WRTRAN2
          ENDIF
.
STRN9999  RETURN
+
.*****************************************************************************
.*  UBOK0000  :  Update Booking file                                         *
.*****************************************************************************
UBOK0000  COMPARE   ONE,CBOOK
          GOTO      UBOK9999 IF NOT EQUAL
.
          MOVE      AADMNO,KEY8
          CALL      RDBKREC1
          BRANCH    OVRCD,UBOK9999
.
          LOAD      BKRESTAT,ASTAT,ONE,THREE,FOUR
          CALL      UPBKREC1
.
. waiting Lists WMSTAT SET TO 4 AS ADMITTED
.
          COMPARE   ONE,HBWAIT
          GOTO      UBOK9999 IF NOT EQUAL
          OPEN      WATTR1A1,"wattr1af"
.
          PACK      KEY19,BKREURNO,BKREPROC,BKRECNT
          CALL      RDTREA1
          BRANCH    OVRCD,UBOK9000
          IF        WMSTAT <= 6
            LOAD      WMSTAT,ASTAT,THREE,FOUR,FIVE
            CALL      UPTREA1
            IF        WMSTAT = 3
              MOVE      "01",WTWMBSCD
              CALL      WRTHIS00
            ENDIF
          ENDIF
.
UBOK9000  CLOSE     WATTR1A1
.
UBOK9999  RETURN
+
.****************************************************************************
.*  VDAT0000  :  Validate Admission date and time       Called by: ADMT0000 *
.*               Returns:  EXIT=0=All Ok,  EXIT=1=Try again                 *
.****************************************************************************
VDAT0000  MOVE      ATIME,A5TIME                  * save time
.
. ADATE and ATIME must be less than current date and time
.
          CLOCK     FULLDATE,DATEIS               * Clock the current date
          UNPACK    DATEIS,XMON,XDAY,XCENT,XYEAR
          MOVE      XMON,CMM
          MOVE      XDAY,CDD
          MOVE      XYEAR,CYY
          MOVE      XCENT,CCC
          PACK      XDATE,CCC,CYY,CMM,CDD
          REP       " 0",XDATE
.
          MATCH     XDATE,ADATE
          GOTO      VDAT7000 IF EQUAL
          GOTO      VDAT9000 IF LESS
.
. error!
.
          MOVE      "Patient cannot be admitted ahead of todays date",RPLYDESC
          MOVE      "02140",RPLYCODE
          MOVE      ONE,EXIT
          GOTO      VDAT9999
.
VDAT7000  CLOCK     TIME,DATIME
          MATCH     A5TIME,DATIME
          GOTO      VDAT9000 IF NOT LESS
.
. error!
.
          MOVE      "Patient cannot be admitted ahead of todays time",RPLYDESC
          MOVE      "02141",RPLYCODE
          MOVE      ONE,EXIT
          GOTO      VDAT9999
.
VDAT9000  MOVE      ZERO,EXIT                     * Date and time are Ok.
.
VDAT9999  RETURN
+
.
OVERCOND  MOVE      ONE,OVRCD
          RETURN
.
OVERLOCK  MOVE      TWO,OVRCD
          RETURN
+
.****************************************************************************
.*  ABSV0000  :  Save Admission variables                                   *
.****************************************************************************
.
ABSV0000  MOVE      AADMNO,SAADMNO
          MOVE      AURNO,SAURNO
          MOVE      ADATE,SADATE
          MOVE      ATIME,SATIME
          MOVE      ASTAT,SASTAT
          MOVE      APORT,SAPORT
          MOVE      ATRANNO,SATRANNO
          MOVE      AINVPRT,SAINVPRT
          MOVE      ALACDTE,SALACDTE
          MOVE      ACANCEL,SACANCEL
          MOVE      AWARD,SAWARD
          MOVE      ABED,SABED
.
          MOVE      ADOCTR,SADOCTR
          MOVE      ADOCTA,SADOCTA
          MOVE      ADOCTL,SADOCTL
.
          MOVE      ASRCE,SASRCE
          MOVE      ATYPE,SATYPE
          MOVE      ACLSS,SACLSS
          MOVE      ACARE,SACARE
.
          MOVE      AFUNDH,SAFUNDH
          MOVE      AFNDTB,SAFNDTB
          MOVE      AFNDMM,SAFNDMM
          MOVE      AELIG,SAELIG
.
          MOVE      AVISIT,SAVISIT
          MOVE      AALERG,SAALERG
          MOVE      AILLN,SAILLN
          MOVE      ADIAG1,SADIAG1
          MOVE      ADIAG2,SADIAG2
.
          MOVE      ADISC,SADISC
          MOVE      ADOCTT,SADOCTT
          MOVE      ACLSSFT,SACLSSFT
          MOVE      AALLOW,SAALLOW
          MOVE      AMBS,SAMBS
          MOVE      ACLAIM,SACLAIM
          MOVE      ADIET,SADIET
          MOVE      APLOCCR,SAPLOCCR
          MOVE      ASTAY,SASTAY
          MOVE      ADYHOSP,SADYHOSP
          MOVE      AMEMB,SAMEMB
          MOVE      AMEMBNO,SAMEMBNO
          MOVE      ACOMM1,SACOMM1
          MOVE      ACOMM2,SACOMM2
          MOVE      APLUR,SAPLUR
          MOVE      APURGE,SAPURGE
.
          MOVE      AUSR1,SAUSR1
          MOVE      AUSR2,SAUSR2
          MOVE      AUSR3,SAUSR3
          MOVE      AUSR4,SAUSR4
          MOVE      AUSR5,SAUSR5
          MOVE      AUSR6,SAUSR6
          MOVE      AUSR7,SAUSR7
          MOVE      ADSCHI,SADSCHI
          MOVE      ARDRNAM,SARDRNAM
          MOVE      AFNDYY,SAFNDYY
          MOVE      AFNDCG,SAFNDCG
          MOVE      AOCCDTE,SAOCCDTE
          MOVE      ACODDTE,SACODDTE
          MOVE      ARETDTE,SARETDTE
          MOVE      AMUMADM,SAMUMADM
.
          MOVE      DPTMIPVI,SDPTMIPV
          MOVE      ABWGHT,SABWGHT
          MOVE      PMVXRHC1,SPTMSRFG
          MOVE      PMVXRH1G,SPTMSGPP
          MOVE      PTMSFHAN,SPTMSFHA
          MOVE      PTMSECRA,SPTMSECR
          MOVE      PTMSMGIN,SPTMSMGI
.
          MOVE      PTMIDDIG,SPTMIDIG
          MOVE      PMVXRH1C,SPTMIGPT
          MOVE      PTMIDOFR,SPTMIDOF
          MOVE      PTMIREFD,SPTMIREF
          MOVE      PTMIDFCN,SPTMIDFC
          MOVE      PTMIPHPU,SPTMIPHP
          MOVE      PTMIAGNC,SPTMIAGN
          MOVE      PTMIESSF,SPTMIESS
          MOVE      PTMIUSR8,SPTMIUS8
          MOVE      PTMIUSR9,SPTMIUS9
          MOVE      PTMIUSR0,SPTMIUS0
          MOVE      PTMIPDRG,SPTMSDRG
          MOVE      PTMIOPER,SPTMIOPE
          MOVE      PTMIXWRD,SPTMIXWD
          MOVE      PTMIADOC,SPTMIADC
          MOVE      PTMIREGS,SPTMIREG
          MOVE      PTMIUYN1,SPTMIUY1
          MOVE      PTMIUYN2,SPTMIUY2
.
ABSV9999  RETURN
+
.***************************************************************************
.*  OPSU0000  :  Open surname files                      Called by: Many   *
.***************************************************************************
.
OPSU0000  OPEN      PATGSRN1,"patgsrnf"
          OPEN      PATGSRN2,"patgsrnf"
          OPEN      PATGSRN3,"patgsrnf"
          OPEN      PATGSRN4,"patgsrnf"
OPSU9999  RETURN
+
.***************************************************************************
.*  CLSU0000  :  Close surname files                     Called by: Many   *
.***************************************************************************
.
CLSU0000  CLOSE     PATGSRN1
          CLOSE     PATGSRN2
          CLOSE     PATGSRN3
          CLOSE     PATGSRN4
CLSU9999  RETURN
+
.****************************************************************************
.*  ANST0000  :  Subroutine to add a new record to the Statistics file      *
.****************************************************************************
ANST0000  MOVE      ZERO,SADMTH1
          MOVE      ZERO,SADMTH2
          MOVE      ZERO,SADMTH3
          MOVE      ZERO,SADMTH4
          MOVE      ZERO,SADMTH5
          MOVE      ZERO,SADMTH6
          MOVE      ZERO,SADMTH7
          MOVE      ZERO,SADMTH8
          MOVE      ZERO,SADMTH9
          MOVE      ZERO,SADMTH10
          MOVE      ZERO,SADMTH11
          MOVE      ZERO,SADMTH12
          MOVE      ZERO,SADMTH13
          MOVE      ONE,NADM
          STORE     NADM,FORM2,SADMTH1,SADMTH2,SADMTH3,SADMTH4,SADMTH5:
                               SADMTH6,SADMTH7,SADMTH8,SADMTH9,SADMTH10:
                               SADMTH11,SADMTH12,SADMTH13
          CALL      WRSTAD1
ANST9999  RETURN
+
.****************************************************************************
.*  UVST0000  :  Routine to update the approp. variable in the stats file   *
.****************************************************************************
UVST0000  LOAD      NADM,FORM2,SADMTH1,SADMTH2,SADMTH3,SADMTH4,SADMTH5:
                               SADMTH6,SADMTH7,SADMTH8,SADMTH9,SADMTH10:
                               SADMTH11,SADMTH12,SADMTH13
          ADD       COUNT,NADM
.
          STORE     NADM,FORM2,SADMTH1,SADMTH2,SADMTH3,SADMTH4,SADMTH5:
                               SADMTH6,SADMTH7,SADMTH8,SADMTH9,SADMTH10:
                               SADMTH11,SADMTH12,SADMTH13
          CALL      UPSTAD1
UVST9999  RETURN
+
.******************************************************************************
. PNMP0000  :  Post NMPI Number
.              Parameter : PURNO   (U/R Number) 
.                          PVIBILL (Visit Number) 
.                          NMPNUMB (NMPI Number)
.******************************************************************************
PNMP0000  COMPARE   ZERO,PTCNNMPI
          GOTO      PNMP9999 IF EQUAL            * not using link
          COMPARE   ONE,PTCNNHII
          GOTO      PNMP9999 IF EQUAL            * using NZ link
.
          OPEN      PATPNIA1,"patpniaf"          * Zero U/R Number 
          OPEN      PATNIDA1,"patnidaf"          * all other countries
.
.         Check whether a nmpi number has been inputed, if one has 
.         write it to the PNI/NID/NMP file, otherwise do nothing
.
          MATCH     NMPNUMB,SP20
          GOTO      PNMP5000 IF EQUAL            * no number entered
.
          MATCH     ZEROUR,PURNO
          GOTO      PNMP3000 IF NOT EQUAL
.
.         Zero U/R :: post to PATPNI file
.
          MATCH     ZEROVISN,PVIBILL
          GOTO      PNMP9000 IF EQUAL
.
.         Zero Billing Number DO NOT POST TO PNI FILE OR NMP FILE
.
          PACK      KEY10,CHOSINDX,PVIBILL   * Hospital No. and visit No.
          CALL      RDPTPNI1
          MOVE      CHOSINDX,PTPNHNUM        * Hospital No.
          MOVE      PVIBILL,PTPNADNO         * Admission No.
          MOVE      NMPNUMB,PTPNNMPI         * National Id
          IF        OVRCD = ONE
            CALL      WRPTPNI1               * Write record does not exist
          ELSE
            CALL      UPPTPNI1               * Update record exists
          ENDIF
          GOTO      PNMP9000
.
.         A valid U/R :: post to PATNMP/PATNID file
.
PNMP3000  PACK      KEY10,CHOSINDX,PURNO
          CALL      RDPTNID1
          BRANCH    OVRCD,PNMP4000
.
          MOVE      NMPNUMB,PTNINMPI         * National Id
          CALL      UPPTNID1                * Update File
          GOTO      PNMP9000
.
PNMP4000  PACK      KEY10,CHOSINDX,PVIBILL
          CALL      RDPTPNI1                  * Exist on PNI file ?
          IF        OVRCD = ONE
            MOVE      CHOSINDX,PTNIHNUM       * No. hospital number
            MOVE      PURNO,PTNILNUM          *     local U/R Number
.
            SQUEEZE   NMPNUMB                 * left justify field
            PACK      NMPNUMB,NMPNUMB,SP20    * clear rest of field 
            STRIP     NMPNUMB                 * remove blanks
            MOVELPTR  NMPNUMB,FORM2           * get the actual length
.
            MOVE      SP20,PTNINMPI           * clear the actual field
            ASSIGN    20-FORM2,IMON           * get the No. blanks at start
            RESET     PTNINMPI,IMON           * reset actual field
            APPEND    NMPNUMB,PTNINMPI        * add items entered
            RESET     PTNINMPI                * this field is now Right Just.
            MOVE      SP10,PTNISPAR           *     set spare variable
            PACK      KEY10,CHOSINDX,PURNO    *     Reset Key
            CALL      WRPTNID1                *     Write NMP record
          ELSE
            MOVE      PTPNHNUM,PTNIHNUM       * Yes. copy hospital number
            MOVE      PURNO,PTNILNUM          *      copy local U/R Number
            MOVE      PTPNNMPI,PTNINMPI       *      copy nmpi U/R No.
            MOVE      SP10,PTNISPAR           *      set spare variable
            PACK      KEY10,CHOSINDX,PURNO    *      Reset Key
            CALL      WRPTNID1                *      Write NMP record
            PACK      KEY10,CHOSINDX,PVIBILL   * Hospital No. and visit No.
            CALL      DEPTPNI1                *      delete PNI record
          ENDIF  
          GOTO      PNMP9000
.
.         Nothing input. Check if there was previously details, and if so,
.         delete them
.
PNMP5000  MATCH     ZEROUR,PURNO             * Zero U/R Number
          IF        @EQUAL
            PACK      KEY10,CHOSINDX,PVIBILL
            CALL      DEPTPNI1
          ENDIF
          PACK      KEY10,CHOSINDX,PURNO   * All other countries
          CALL      DEPTNID1
.
PNMP9000  CLOSE     PATPNIA1                 * Zero U/R
          CLOSE     PATNIDA1                 * all other countries
.
PNMP9999  RETURN
+
.****************************************************************************
.*  NXTA0000  :  Get Next Admission Number                                  *
.****************************************************************************
NXTA0000  READ      CONTROLF,HUND30;*75,PTCNUANV      * Using AN Visit Numbers
.
          MATCH     "1",PTCNUANV
          IF        @EQUAL
            CALL      GANV0000                * Get next AN visit number
            MOVE      PTCNNXTV,AADMNO
          ELSE
            MOVE      " 10",PRXCODE   * System Lock Sector 10
            CALL      GETSLK00        * Get System Lock of Sector 10
            READ      CONTROLF,TEN;*1,FORM8V
            ADD       ONE,FORM8V
            WRITAB    CONTROLF,TEN;*1,FORM8V
            CALL      RELSLK00        * Release System Lock of Sector 10
            SUB       ONE,FORM8V
            MOVE      FORM8V,AADMNO
          ENDIF
.
. Check with visit file, make sure it does not exist already
.
          OPEN      PATVISA1,"patvisaf"
          MOVE      AADMNO,PVIBILL
          MOVE      PVIBILL,KEY8
          CALL      RDAVISA1
          COMPARE   ZERO,OVRCD
          GOTO      NXTA0000 IF EQUAL       * get the next Admission Number
.
          CALL      RDAMISS1
          COMPARE   ZERO,OVRCD
          GOTO      NXTA0000 IF EQUAL       * get the next Admission Number
.
NXTA9999  RETURN
.*****************************************************************************
.*                           DPNI0000                                        *
.*                     Delete PATPNI record                                  *
.*****************************************************************************
DPNI0000  COMPARE   ZERO,PTCNNMPI            * no link between U/R & NMPI
          GOTO      DPNI9999 IF EQUAL
.
          OPEN      PATPNIA1,"patpniaf"      * open PATPNIFD file 1
.
          PACK      KEY10,CHOSPNUM,AADMNO
          CALL      DEPTPNI1                 * delete record 
.
DPNI9000  CLOSE     PATPNIA1                 * close file
.
DPNI9999  RETURN
.
.*********************************************************************
.         this routine checks the following....
.          - if we are storing the NMPI number in the UR field
.          - if we have a NMPI number (patient selected from nat. system)
.          - if the patient didnt previously have a UR
.            then write a UR record for the patient to IBA files
.                 and set up the NMPNUMB variable (done in GNXTUR)
.*********************************************************************
SIPR0000  MOVE      ZERO,EXIT               * dont do anything
          COMPARE   ONE,PTCNNZUR
          GOTO      SIPR9999 IF NOT EQUAL   * not storing NMPI in UR
.
          MATCH     SP20,NMPNUMB
          GOTO      SIPR9999 IF EQUAL       * no national number generated
.
          MATCH     ZEROUR,PURNO
          GOTO      SIPR9999 IF NOT EQUAL   * already had a UR number
.
.         have chosen a person from the national system 
.         generate a UR and write to UR files
.
          MOVE      AADMNO,KEY8
          CALL      DEPRAM1                  * delete pram record if it exists
.
          MOVE      THREE,CPSYSTEM           * Use inpatient range of U/R's
          CALL      GNXTUR                   * Get the next available U/R
          MOVE      PURNO,AURNO              * Save the U/R Number
.
          MOVE      ZERO,PSTAT
          MOVE      CHOSPNUM,PINITHOS        * Initiating Hospital Number
          MOVE      AADMNO,PVIBILL           * Parameter for WRTUR
          MOVE      THREE,PVITYPE              * Parameter for WRTUR
          CALL      WRTUR                    * Post this new U/R Number
.
          MOVE      ONE,EXIT
.
SIPR9999  RETURN
+
.************************************************************************
.                   CLPV0000                        Called by : ISUR0000
.         Clear patient visit PATVISFD vars
.************************************************************************
CLPV0000  UNPACK    SP20,PVIDATE,PVIDOCT
          UNPACK    SP20,PVILOCK,PVISITE,PVIRESI
          MOVE      ZERO,PVITYPE
          MOVE      ZERO,PVITRAN
          MOVE      ZERO,PVISTAT
.
CLPV9999  RETURN
+
.***************************************************************************
.*  UPAD0000 :  Update Previous Address File                               *
.***************************************************************************
UPAD0000  OPEN      PATPA1A1,"patpa1af"
          PACK      PADATE,CCC,CYY,CMM,CDD
          REP       " 0",PADATE
          CLOCK     TIME,PATIME
.
          PACK      KEY24,PURNO,PADATE,PATIME
          CALL      RDPADD1
          COMPARE   ZERO,OVRCD
          GOTO      UPAD9999 IF EQUAL
.
          MOVE      PURNO,PAURNO
          MOVE      SPADD1,PAADD1
          MOVE      SPADD2,PAADD2
          MOVE      SPSUBRB,PASUBR
          MOVE      SPADD4,PAADD4
          MOVE      SPPOST,PAPOST
          MOVE      SPTELEP,PATELEP
          MOVE      SPTELEB,PATELEB
          MOVE      SPCELL,PTPAMOBL
          MOVE      SPOSMS,PTPAOSMS
          MOVE      SPDOR,PTPADOR
          PACK      PTPAEMAL,SP70,SP70
          MOVE      SP70,PTPACDTE
          MOVE      SP70,PTPACTIM
          MOVE      SP70,PTPAWEBC
          MOVE      SP70,PTPALUPD
          MOVE      SP70,PTPALUPT
          MOVE      SP70,PTPAWEBU
          MOVE      SP70,PTPAOSMS
          MOVE      SP70,PTPASPAR
.
          CALL      WRPADD1
.
UPAD9999  RETURN
.***************************************************************************
.*  CHAD0000 :  Check for a change in address                              *
.***************************************************************************
CHAD0000  MOVE      ZERO,CHGADD              * assume no change
.
          MATCH     PADD1,SPADD1             * change in address line 1 ?
          GOTO      CHAD8000 IF NOT EQUAL    * Yes. Post to previous add. file
.
          MATCH     PADD2,SPADD2             * change in address line 2 ?
          GOTO      CHAD8000 IF NOT EQUAL    * Yes. Post to previous add. file
.
          MATCH     PSUBRB,SPSUBRB           * change in suburb ?
          GOTO      CHAD8000 IF NOT EQUAL    * Yes. Post to previous add. file
.
          MATCH     PADD4,SPADD4             * change in address line 4 ?
          GOTO      CHAD8000 IF NOT EQUAL    * Yes Post to previous add. file
.
          MATCH     PPOST,SPPOST             * change in postcode ?
          GOTO      CHAD8000 IF NOT EQUAL    * Yes. Post to previous add. file
.
          MATCH     PTELEP,SPTELEP           * change in private telephone ?
          GOTO      CHAD8000 IF NOT EQUAL    * Yes. Post to previous add. file
.
          MATCH     PTELEB,SPTELEB           * change in business telephone ?
          GOTO      CHAD8000 IF NOT EQUAL    * No
.
          MATCH     PTMXCELL,SPCELL          * change in cellular telephone ?
          GOTO      CHAD8000 IF NOT EQUAL    * No
.
          MATCH     PTMXOSMS,SPOSMS          * change in Opt out of SMS ?
          GOTO      CHAD8000 IF NOT EQUAL    * No
.
          IF        PTCNDORP=1
            MATCH     PTMXDOFR,SPDOR         * change in DOR ?
            GOTO      CHAD9999 IF EQUAL      * No
          ELSE
            GOTO      CHAD9999               * there was no change
          ENDIF
.
CHAD8000  MOVE      ONE,CHGADD               * change of address
.
CHAD9999  RETURN
+
.************************************************************************
.* UZDS0000  :  read and write to the double soundex surname file       *
.************************************************************************
UZDS0000  MOVE      PTMASNAM,GSRSNAM
          MOVE      PMPXFNAM,GSRGNAM
          MOVE      PMPXSNAM,PTGSGNM2
          MOVE      PBDATE,GSRDOB           * Date of birth
          MOVE      PSEX,GSRSEX             * Sex
          MOVE      ZEROUR,GSRURNO
          MOVE      AADMNO,GSRBILL
          MOVE      THREE,GSRSYS
.
          CALL      SOUNDEX                  * get soundex key for surname
          CALL      SOUNDX2                  * get soundex key for given names
.
          CALL      OPSU0000                 * open surname file
          PACK      KEY115,GSRURNO,GSRBILL,GSRSNAM,GSRGNAM,PTGSGNM2,GSRDOB:
                           GSRSEX,SP70,SP70,SP70
          CALL      RAPTGSR1                 * check if its already there
          COMPARE   ONE,OVRCD
          GOTO      UZDS9000 IF NOT EQUAL
          CALL      WRPTGSR1
.
UZDS9000  CALL      CLSU0000                 * close surname file
.
UZDS9999  RETURN
+
.****************************************************************************
.*  AMSV0000  :  Subroutine to save master variables                        *
.****************************************************************************
AMSV0000  MOVE      PMICRO,SPMICRO
          MOVE      PUSR1,SPUSR1
          MOVE      PUSR2,SPUSR2
          MOVE      PUSR3,SPUSR3
          MOVE      PUSR4,SPUSR4
          MOVE      PUSR5,SPUSR5
          MOVE      PUSR6,SPUSR6
          MOVE      PUYN1,SPUYN1
          MOVE      PUYN2,SPUYN2
          MOVE      PUYN3,SPUYN3
.
          MOVE      PURNO,SPURNO
          MOVE      PTITL,SPTITL
          MOVE      PSNAME,SPSNAME
          MOVE      PGNAME,SPGNAME
          MOVE      PPSNAME,SPPSNAME
          MOVE      PSMOK,SPSMOK
          MOVE      PSEX,SPSEX
          MOVE      PMSTAT,SPMSTAT
          MOVE      PBDATE,SPBDATE
          MOVE      PSAGE,SPSAGE
          MOVE      PCONT,SPCONT
          MOVE      PREG,SPREG
          MOVE      PTYPE,SPTYPE
          MOVE      POCCUP,SPOCCUP
          MOVE      PMEDI,SPMEDI
          MOVE      PPENNO,SPPENNO
          MOVE      PPNDTE,SPPNDTE
          MOVE      PREPAT,SPREPAT
          MOVE      PSMOK,SPSMOK
          MOVE      PCHGDTE,SPCHGDTE
.
          MOVE      PNKNAME,SPNKNAME
          MOVE      PNKADD1,SPNKADD1
          MOVE      PNKADD2,SPNKADD2
          MOVE      PNKSUBR,SPNKSUBR
          MOVE      PNKADD4,SPNKADD4
          MOVE      PNKPOST,SPNKPOST
          MOVE      PNKTELP,SPNKTELP
          MOVE      PNKTELB,SPNKTELB
          MOVE      PNKRELP,SPNKRELP
.
          CALL      PRAV0000                * Person Responsible A/C variables
.
AMSV1000  MOVE      PADD1,SPADD1
          MOVE      PADD2,SPADD2
          MOVE      PSUBRB,SPSUBRB
          MOVE      PADD4,SPADD4
          MOVE      PPOST,SPPOST
          MOVE      PTELEP,SPTELEP
          MOVE      PTELEB,SPTELEB
          MOVE      PTMXCELL,SPCELL
          MOVE      PTMXDOFR,SPDOR
          MOVE      PMPXRHC1,SPREGP
          MOVE      PMPXRH1G,SPGPPC
          MOVE      PMPXR1GC,SPGPPT
          MOVE      PTMXOSMS,SPOSMS
.
AMSV9999  RETURN
+
.****************************************************************************
.*  PADM0000  :  Post Admission details                                     *
.****************************************************************************
PADM0000  
......    DISPLAY   *P1:24,*EL,*V2LON:
......              "***  Posting Admission Details  ***";
.
. write/update admission record
.
          PACK      KEY8,AADMNO
          CALL      RDAMISS1
          IF        OVRCD = 0
            CALL      UPMISS1
          ELSE
            MOVE      ZERO,ADSCHI
            MOVE      ZERO,AINVPRT
            CALL      WRMISS1
          ENDIF
.
. write/update admission extension record
.
          IF        PTCNAXEU = 1
            CALL      UPAXE000
          ENDIF
.
          CALL      ADTD0000                * update admission transfer dest.
          CALL      PNZB0000                * post to Kiwi Card file
.
          CALL      PNMP0000                * post to National UR file
....      CALL      CUNTD000                * update NZHIS interface stuff
....      CALL      CHNHI000                * if NMPI No. changed handle change
....      CALL      CUDNR000                * update donor on NZHIS if PC changd
.
. Write/Update Visits file if we have a U/R Number
.
PADM0100  MATCH     ZEROUR,PURNO
          GOTO      PADM1000 IF EQUAL
.
          OPEN      PATVISA1,"patvisaf"
          OPEN      PMSVX1A1,"pmsvx1af"     * Open Visit Extn.1            I900
          MOVE      AADMNO,PVIBILL
          MOVE      PURNO,PVIURNO
          PACK      PVIDATE,ADATE
          REP       " 0",PVIDATE
.
          MOVE      THREE,PVITYPE
.
          MOVE      ZERO,TCINDC1
          PACK      KEY5,ANSA,SP1,ATYPE
          CALL      RDCODE1
.
          MOVE      ZERO,FORM1              * in case TCINDC1 is not numeric
          MOVE      TCINDC1,FORM1
          MOVE      TWO,PVISTAT             * Default Public Patient
          LOAD      PVISTAT,FORM1,TWO,ONE
          MOVE      ONE,PVITRAN             * initialise transaction number
          MOVE      SP2,PVILOCK
          MOVE      SP20,PVISPAR
.
          MOVE      ADOCTA,PVIDOCT
          MOVE      PTYPE,PVIRESI
.
          MOVE      PVIBILL,KEY8            * already on file ?
          CALL      RLPTVIS1
.
.         Update current record
.
          IF        OVRCD = 0
            MOVE      ADOCTA,PVIDOCT
            MOVE      PTYPE,PVIRESI
            MOVE      TWO,PVISTAT           * Default Public Patient
            LOAD      PVISTAT,FORM1,TWO,ONE
            PACK      PVIDATE,ADATE
            REP       " 0",PVIDATE
            CALL      UPPTVIS1              * update visit record          I900
            CALL      UUPTVIS1
            CALL      RAPMVX11              * Position on Visit Extn.1     I900
            IF        OVRCD = 0
.                                           * Just being careful !!!       I900
              CALL      UPPMVX11            * Update Visit Extn.1          I900
            ELSE                                                           I900
              MOVE      PPOST,PMVXPOST
              CALL      WRPMVX11            * Write Visit Extn.1           I900
            ENDIF                                                          I900
            GOTO      PADM1000
          ENDIF
.
.         Write a new record
.
          IF        OVRCD = 1
. --------- CALL      WRVISA1               * write a recordi              D900
            CALL      WRPTVIS1              * write visit record           I900
            MOVE      PPOST,PMVXPOST
            MOVE      AADMNO,PMVXVISN
            CALL      WRPMVX11              * Write Visit Extn.1           I900
            GOTO      PADM1000
          ENDIF
.
.         Visit record locked so ERROR!!!!
.
          MOVE      "02160",RPLYCODE
          MOVE      "Visit record Locked on another port",RPLYDESC
          MOVE      ONE,EXIT                * dont continue
          GOTO      PADM9999
.
. Update Master file with Resident Status, and any other changed
.
PADM1000  MATCH     ZEROUR,PURNO
          GOTO      PADM1100 IF EQUAL
.
          MOVE      PURNO,KEY8
          CALL      RDAMAST1
          IF        OVRCD = 0
            CALL      UPMAST1               * update Master file
            CALL      RAPMPX21              * Position on PMI Extn.2       I900
            IF        OVRCD = 0
              CALL      UPPMPX21            * Update PMI Extn.2            I900
            ELSE                                                           I900
              CALL      WRPMPX21            * Write PMI Extn.2             I900
            ENDIF                                                          I900
          ENDIF
          GOTO      PADM1500
.
.         Update zero U/R master details if appropriate
.
PADM1100  MATCH     ZEROVISN,AADMNO         * do we have an Admission No. ?
          GOTO      PADM1500 IF EQUAL       * no, do nothing
.
          MOVE      AADMNO,PURNO
          MOVE      PURNO,KEY8
          CALL      RDAPRAM1
          IF        OVRCD = 0
            CALL      UPPRAM1               * update Pre-Admission Master file
            MOVE      AADMNO,PVIBILL
            MOVE      ZEROUR,PURNO
            CALL      PNMP0000              * post NMPI Number
          ENDIF
          MOVE      ZEROUR,PURNO
.
. see if a Mental health admission
.
PADM1500  COMPARE   ONE,MHCNUSE             * using MH ?
          GOTO      PADM9000 IF NOT EQUAL   * no - ignore
.
.         If a legal status has been sent, then write MH records
.
          MATCH     SP3,PTMXLS
          IF        !@EQUAL
            OPEN      MEHVI1A1,"mehvi1af"
            MOVE      AADMNO,KEY8
            CALL      RDMHVIS1              * MH visit record on file ?
            IF        OVRCD = 1
              MOVE      ZERO,MHVISTAT       * no - write new record
              MOVE      AADMNO,MHVIADMN
              CALL      WRMHVIS1
            ENDIF
            CLOSE     MEHVI1A1
.
.           Check if there are any mehlegaf records and if there are, then 
.           delete them (there can only be one mehlegaf record for a 
.           pre-admission).
.
            OPEN      MEHLEGA1,"mehlegaf"
.
PADM2000    PACK      KEY21,AADMNO,SP30
            CALL      RSMHLEG1                * position in file
            CALL      RKMHLEG1                * read next record
            BRANCH    OVRCD,PADM2500          * eof - finished deleting
.
            MATCH     AADMNO,MHLEADMN         * same admission number ?
            GOTO      PADM2500 IF NOT EQUAL   * no - ignore
.
            PACK      KEY21,MHLEADMN,MHLEDATE,MHLETIME
            CALL      DEMHLEG1                * delete record
            GOTO      PADM2000
.
PADM2500    MOVE      AADMNO,MHLEADMN
            MOVE      PTMXLS,MHLESTAT
            MOVE      PTMXLSDT,MHLEDATE
            MOVE      "00:01",MHLETIME
            MOVE      ANSN,MHLESENT
            MOVE      SP3,MHLEREVW
            MOVE      SP1,MHLEFLAG
            PACK      MHLESPAR,SP10,SP5
.
            CALL      WRMHLEG1
            CLOSE     MEHLEGA1
          ENDIF
.
. set Ok! flag
.
PADM9000  MOVE      ZERO,EXIT           * everything is OK!
.
PADM9999  RETURN
+
.*********************************************************************
.*                  PNZB0000                    
.*        Maintain all the files for the NZ Billing Changes
.*********************************************************************
PNZB0000  COMPARE   ONE,PTCNUCRD
          GOTO      PNZB9999 IF NOT EQUAL   * not using card information
.
          PACK      KEY5,CODECL,ACLAIM
          CALL      RDCODE1
          PACK      KEY5,TCINDC1,TCINDC2,TCINDC3,TCINDC4,TCINDC5
          SCAN      ANSE,KEY5
          IF        !@EQUAL
            MOVE      SP3,PTMXCXMP          * should be no exemption code
          ENDIF
.
          MOVE      AADMNO,PTVKBILL         * visit number
          MOVE      PTVKBILL,KEY8           * key
          CALL      RDPTVKC1
          IF        OVRCD = ZERO
            MOVE      "2",FORM1             * before change audit
            CALL      AVKC0000              * write audit record
            MOVE      PTMXCARD,PTVKCARD     * card number
            MOVE      PTMXCEXP,PTVKCEXP     * card expiry date
            MOVE      PTMXCXMP,PTVKCXMP     * exemption code
            MOVE      PTMXFMLY,PTVKFMLY     * family id
            MOVE      ACLAIM,PTVKCOMP       * claim code
            CALL      UPPTVKC1              * update record
            MOVE      THREE,FORM1           * after change audit
            CALL      AVKC0000              * write audit record
          ELSE
            MOVE      PTMXCARD,PTVKCARD     * card number
            MOVE      PTMXCEXP,PTVKCEXP     * card expiry date
            MOVE      PTMXCXMP,PTVKCXMP     * exemption code
            MOVE      PTMXFMLY,PTVKFMLY     * family id
            MOVE      ACLAIM,PTVKCOMP       * claim code
            CALL      WRPTVKC1              * write record
            MOVE      ONE,FORM1             * add audit
            CALL      AVKC0000              * write audit record
          ENDIF
.
.         maintain PATKWCFD file
.
          COMPARE   ONE,ASTAT               * pre-admission ?
          GOTO      PNZB9999 IF NOT EQUAL   * no, don't update the file
.
          CALL      OPFI0000                * open correct file
          BRANCH    EXIT,PNZB0700           * file not there
.
          UNPACK    SP30,PTKWCARD,PTKWURNO  * initialize to blanks
.
          MATCH     SP20,PTVKCARD           * do we have a card number ?
          GOTO      PNZB0500 IF EQUAL       * no, special case
.
          CMATCH    ANSC,PTVKCARD           * valid card ?
          GOTO      PNZB0700 IF NOT EQUAL   * no.
          MOVE      PTVKCARD,PTKWCARD       * yes, set card number
          MOVE      SP8,PTKWURNO            * no U/R Number
          GOTO      PNZB0600
.
PNZB0500  MATCH     ZEROUR,AURNO            * do we have a U/R Number ?
          GOTO      PNZB0700 IF EQUAL       * no, don't post anything
.
          MOVE      SP20,PTKWCARD           * no card number
          MOVE      AURNO,PTKWURNO          * U/R Number
.
PNZB0600  PACK      KEY28,PTKWCARD,PTKWURNO
          CALL      RDPTKWC1                * read kiwicard file
          IF        OVRCD = ZERO
            MOVE      ADYHOSP,PTKWVISI      * set the value
            MOVE      PTMIPVIS,PTKWVISI     * set the value
            CALL      UPPTKWC1              * update value
          ELSE 
            MOVE      ADYHOSP,PTKWDAYS      * number of days
            MOVE      PTMIPVIS,PTKWVISI     * number of visits
            MOVE      SP20,PTKWSPAR         * spare
            CALL      WRPTKWC1              * write new record
          ENDIF
PNZB0700  CLOSE     PATKWCA1
.
.         see if to maintain the PATVCHFD file
.
          PACK      KEY28,PTKWCARD,PTKWURNO,SP30
          MATCH     KEY28,SP30
          GOTO      PNZB9999 IF EQUAL       * nothing to audit
.
          IF        ORIGDAYS <> ADYHOSP | ORIGVISI <> PTMIPVIS
            CALL      IBACLOCK
            MOVE      PTKWCARD,PTVCCARD     * card number
            MOVE      PTKWURNO,PTVCURNO     * event number
            PACK      PTVCDATE,CCC,CYY,CMM,CDD
            REP       " 0",PTVCDATE
            MOVE      CTIMEIS,PTVCTIME
            MOVE      PORT,PTVCPORT
            MOVE      CHOSINDX,PTVCHOSP
            MOVE      PASSCODE,PTVCOPER
            ASSIGN    (ADYHOSP-ORIGDAYS),PTVCDCHG  * amount days changed
            ASSIGN    (PTMIPVIS-ORIGVISI),PTVCVCHG * amount visits changed
.
            PACK      KEY48,PTVCCARD,PTVCURNO,PTVCDATE,PTVCTIME:
                            PTVCPORT,PTVCHOSP
            OPEN      PATVCHA1,"patvchaf"
            CALL      RAPTVCH1
            IF        OVRCD = 1
              CALL      WRPTVCH1
            ENDIF
            CLOSE     PATVCHA1
          ENDIF
.
PNZB9999  RETURN
+
.*********************************************************************
.*                  AVKC0000                    
.*        Write audit record for PATVKCFD      
.*********************************************************************
AVKC0000  BRANCH    PTCNVKCA,AVKC9999       * audits not on
          OPEN      PATAUDVK,"pataudvk"
          COMPARE   FIVE,FORM1
          GOTO      AVKC5000 IF EQUAL       * delete before change audit
.
          COMPARE   THREE,FORM1
          GOTO      AVKC1000 IF EQUAL       * after change audit
.
          PACK      PTVKAUDD,CCC,CYY,CMM,CDD
          REP       " 0",PTVKAUDD
          MOVE      CTIMEIS,PTVKAUDT
.
AVKC1000  MOVE      PORT,PTVKAUDP
          MOVE      FORM1,PTVKAUDR
          REP       "1A2B3C4D",PTVKAUDR
          MOVE      ONE,PTVKAUDS
          MOVE      PASSCODE,PTVKAUDO
.
          PACK      KEY19,PTVKAUDD,PTVKAUDT,PTVKAUDP,PTVKAUDR
          CALL      AWPTVKC
          CLOSE     PATAUDVK
          GOTO      AVKC9999
.
.         delete before change audit
.
AVKC5000  MOVE      ANSB,PTVKAUDR
          PACK      KEY19,PTVKAUDD,PTVKAUDT,PTVKAUDP,PTVKAUDR
          CALL      ADPTVKC
          CLOSE     PATAUDVK
.
AVKC9999  RETURN
+
.***************************************************************************
. Update Axe file                                                     
.***************************************************************************
UPAXE000  MATCH     ZEROUR,PURNO  
          IF        @EQUAL
            MOVE      PTPNNMPI,PTAXNRIC
          ELSE
            MOVE      PTNINMPI,PTAXNRIC
          ENDIF
.
          MOVE      AADMNO,PTAXADMN 
.
. write/update guarantor details
.
          PACK      KEY8,PTAXADMN,SP8
          CALL      RAPTAXE1
          IF        OVRCD = 0
            CALL      UPPTAXE1                   * record exists update
          ELSE
            CALL      WRPTAXE1                   * record does not exist, write
          ENDIF   
.
UPAXE999  RETURN
+
. *****************************************************************************
. * OPFI0000 : Open the appropriate kiwicard file                             *
. *****************************************************************************
OPFI0000  PACK      XDATE,ADATE,SP8
.
          MATCH     SP8,XDATE                * check if we have a date
          IF        @EQUAL
            PACK      XDATE,CCC,CYY,CMM,CDD
            REP       "0 ",XDATE
          ENDIF
.
          UNPACK    XDATE,CCENT,CYEAR,KEY4
          MATCH     PTCNBCUT,KEY4
          IF        ! @LESS
            MOVE      CYEAR,FORM2            * year of kiwicard
          ELSE
            MOVE      CYEAR,FORM2
            SUB       ONE,FORM2              * calculate start of kiwicard year
            IF        FORM2 < 0
              MOVE     "99",FORM2            * allow for the year 2000
            ENDIF
          ENDIF
.
          PACK      CFNAME,KWCFIL,FORM2      * name of kiwicard file
          REP       " 0",CFNAME
.
          MOVE      ZERO,OVRCD               * assume file exists
          TRAP      OVERCOND IF IO            * trap for error openning file
          OPEN      PATKWCA1,CFNAME           * open kiwicard file
          TRAPCLR   IO
          BRANCH    OVRCD,OPFI9000            * open failed
.
          MOVE      ZERO,EXIT
          GOTO      OPFI9999
.
OPFI9000  MOVE      ONE,EXIT
.
OPFI9999  RETURN
+
.**************************************************************************
.*  ZKIN0000  :  Initialize Next of Kin Variables     Called by: GADM0000 *
.**************************************************************************
ZKIN0000  MOVE      SP20,PNKNAME
          PACK      PNKADD1,SP30,SP10
          PACK      PNKADD2,SP30,SP10
          PACK      PNKSUBR,SP30,SP10
          MOVE      SP8,PNKPOST
          PACK      PNKADD4,SP30,SP10
          MOVE      SP20,PNKTELP
          MOVE      SP20,PNKTELB
          MOVE      SP10,PNKRELP
.
          PACK      PKNAME,SP70,SP10
          PACK      PKADD1,SP30,SP10
          PACK      PKADD2,SP30,SP10
          PACK      PKSUBR,SP30,SP10
          PACK      PKADD4,SP30,SP10
          MOVE      SP8,PKPOST
          MOVE      SP20,PKTELEP
          MOVE      SP20,PKTELEB
          MOVE      SP20,PKRELP
ZKIN9999  RETURN
.
.
.
          INC       PATDADIO/INC
          INC       PATCSLIO/INC
          INC       PATUNAIO/INC
          INC       WATTR1IO/INC
          INC       MEHLEGIO/INC
          INC       PATRCAIO/INC
          INC       PATNOBIO/INC
          INC       PATIPEIO/INC
          INC       PATACHIO/INC
          INC       PATNHHIO/INC
          INC       PATAA1IO/INC
          INC       PATNUMIO/INC
          INC       GENANVIS
          INC       NHOSPDAY
          INC       PATDAYUP
          INC       PATPNIIO/INC
          INC       PATDAYIO/INC
          INC       PATSTAIO/INC
          INC       CLPATMAS
          INC       CLPMSPX2                                             * I900
          INC       CLPATMIS
          INC       PATPA1IO/INC
          INC       PATVCHIO/INC
          INC       PATKWCIO/INC
          INC       PATVKCIO/INC
          INC       PATAXEIO/INC
......... INC       KYMTACOD
......... INC       PATI9SKY
          INC       PATICOIO/INC
          INC       PATCADST
.......   INC       DONORDET
          INC       PATCA1IO/INC
          INC       PATICDIO/INC
.
WRSDN000
 RETURN
.
 XIF
ENDPROC1  ENDPROC
