.***************************************************************************
.* System    :   Billing                                                   *
.* Program   :   IBAPMS93                                                  *
.* Desc      :                                                             *
.***************************************************************************
.* Date      :   02/02/2007                                                *
.* Author    :   Jill Habasque                                             *
.* Function  :   This program will load nz private miscellaneous charges   *
.*           :                                                             *
.*           :  V12.00.01 16/09/2025 Ebon Clements TSK 0967131             *
.*           :            Print raw details of log file outmchaf           *
.*           :  V11.05.01 25/02/2025 Don Nguyen    TSK 0952080             *
.*           :            Recompiled for PATMKIPR                          *
.*           :  V11.02.01 14.09.2022 DA Sarkies    TSK 0909756             *
.*           :            Recompiled for PATMKIPR                          *
.*           :  V11.01.02 19/10/2021 J.Tan         TSK 0912297             *
.*           :            Mod VITM0000 - Checking Exploding items(TMMCEDIE)*
.*           :  V11.01.01 24/05/2020 J.Tan         TSK 0897802             *
.*           :            Mod VITM0000 - Validating Exploding items        *
.*           :  V11.00.01 02/09/2020 J.Tan         TSK 0895119             *
.*           :            Mod checking for special chars in item desc.     *
.*           :  V10.14.01 15/07/2019 Ebon Clements TSK 0877816             *
.*           :            Allow future effective dates - VDTM4000          *
.*           :  V10.11.02 20/10/2017 J.Tan         TSK 0846472             *
.*           :            Fixed TMMCSHWD-show det.must be No unless Explod.*
.*           :  V10.11.01 20/10/2017 J.Tan         TSK 0846472             *
.*           :            Fixed NZMCSHWD - Show Detail                     *
.*           :  V10.04.04 12/03/2014 J.Tan         CAR 300260              *
.*           :            Fixed adding inactive items                      *
.*           :  V10.04.03 07/05/2014 J.Tan         CAR 300260              *
.*           :            Recompiled for NZPMCHVL - checking Inactive Item *
.*           :  V10.04.02 23/04/2014 J.Tan         CAR 300260              *
.*           :            Added Effective End date                         *
.*           :  V10.04.01 01/04/2014 J.Tan         CAR 299227              *
.*           :            Mods checking for overlap                        *
.*           :  V10.03.03 14/10/2013 Don Nguyen    CAR 287376              *
.*           :            Replaced " with ' in NZMCDESC                    *
.*           :  V10.03.02 16/03/2012 J.Tan         CAR 259879              *
.*           :            Added Inactive Action Code                       *
.*           :  V10.03.01 22/02/2012 J.Tan         CAR 250477              *
.*           :            Added Pack item                                  *
.*           :   V9.09.03 12/10/2007 Jill Habasque CAR 150919              *
.*           :            Fixed output of TMMCSHWD                         *
.*           :   V9.09.02 10/09/2007 Ebon Clements CAR 147780              *
.*           :            Fixed population if NZMCINDC                     *
.*           :   V9.09.01 27/06/2007 Jill Habasque CAR 141234              *
.*           :            Added call to patmkiup                           *
.*           :   V9.08.01 23/11/2007 Ebon Clements CAR 141234              *
.*           :            Fixed invalid contract error message             *
.***************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       NZPMCHFD/INC
          INC       NZPMC1FD/INC
          INC       NZPMXCFD/INC
          INC       PATCODFD/INC
          INC       IBACONFD/INC
          INC       PATCONFD/INC
          INC       PATFN1FD/INC
          INC       PATMCHFD/INC
          INC       PATHSPFD/INC
.
. LOCAL VARIABLE DEFINITION
. -------------------------
.
CODE      DIM       2
CURRDATE  DIM       8
DIM2C     DIM       2             * century variable (cc)
DIM2Y     DIM       2             * year variable    (yy)
DIM2M     DIM       2             * month variable   (mm)
DIM2D     DIM       2             * day variable     (dd)
DIM3      DIM       3
DIM4      DIM       4
DIM6      DIM       6
DIM8      DIM       8             * date/time work variable
DIM11     DIM       11
DIM37     DIM       37
FNAME     DIM       200
FORM6P2   FORM      6.2
FILEFLAG  DIM       1
KYCLMCD   DIM       3
KYCHRTY   DIM       1
KYGROUP   DIM       3
KYPERCG   FORM      3.2
KYCHGDES  DIM       1
KYPRICE   DIM       1
KYSHWDET  DIM       1
RECFLAG   FORM      1
SAVEHOSP  DIM       3
SAVKEY29  DIM       29
SAVKEY37  DIM       37
VALFDATE  DIM       8
VALTDATE  DIM       8
WORKDATE  DATE      8
.
ACCEPTED  INIT      "Accepted"
CODEFI    INIT      "FI"
REJECTED  INIT      "Rejected"
ERRMSG01  INIT      "Invalid Change Description Indicator (Y/N)"
ERRMSG02  INIT      "Invalid Keyin Price Indicator (Y/N)"
ERRMSG03  INIT      "Invalid Show Detail Indicator (Y/N)"
ERRMSG04  INIT      "Invalid Hospital Code"
ERRMSG05  INIT      "Invalid Miscellaneous Charge Group (Category FI)"
ERRMSG06  INIT      "Invalid Charge Type (1=Expl Misc 2=Theatre Fee 3=Misc Chg 4=PkItm)"
ERRMSG07  INIT      "Invalid Effective Date"
ERRMSG08  INIT      "Invalid Claim Code"
ERRMSG09  INIT      "Invalid Contract Code"
ERRMSG10  INIT      "Invalid Fund Table Code"
ERRMSG11  INIT      "Effective Date older than current record"
ERRMSG12  INIT      "Invalid price format"
ERRMSG13  INIT      "Invalid Action Type"
ERRMSG14  INIT      "Invalid Item - Unable to Delete Item"
ERRMSG15  INIT      "Invalid Quantity Pack Item - Sale Price field"
ERRMSG16  INIT      "Invalid Pack Item Code - Equivalent Code field"
ERRMSG17  INIT      "Missing Pack Header record for Pack Item"
ERRMSG18  INIT      "Invalid Effective From/To Date (Overlap)"
ERRMSG19  INIT      "Unknown character in Item Description"

OCTALHIG  INIT      0176
OCTALLOW  INIT      040
VALSTRNG  DIM       90            * Validate character string
MISCEL    INIT      "MISC. ITEM "
THEATRE   INIT      "THEATRE FEE"
UPLOAD    INIT      "UPLOAD"
ZERO4     INIT      "0000    "
TMMCQUAN  FORM      3
.
. TEMPFILE DEFINITION
. -------------------------
TMPMCHA1  FILE    ASCII, FIXED=163
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
TMMCHOSP  DIM       3      3        1     Hospital Code (pathspaf)
TMMCCLMC  DIM       3      3        4     Claim Code (Cat CL)
TMMCCNTR  DIM       6      6        7     Contract (Health Fund)
TMMCFTAB  DIM       8      8        13    Fund Table
TMMCMCHG  DIM       9      9        21    Charge Code
TMMCEFDT  DIM       8      8        30    Effective Date
TMMCDESC  DIM       90     90       38    Description
TMMCCHGT  DIM       1      1        128   Charge Type
.                                         1 = Exploding Misc Item
.                                         2 = Theatre Fee
.                                         3 = Misc Item
.                                         4 = Pack Item
TMMCCGRP  DIM       3      3        129   Charge Group (Cat FI)
TMMCPATP  DIM       9      9        132   Patient Portion (6.2)
TMMCINDC  DIM       1      1        141   Indicator for changing description
TMMCKPRI  DIM       1      1        142   Keyin Price 1=Yes otherwise no
TMMCSHWD  DIM       1      1        143   Show detail on invoice
.                                         0=No 1=Yes
TMMCEDIE  DIM       10     10       144   EDI Equivalent
TMMCACCD  DIM       1      1        154   Action Blank=Add or Update
.                                         D = Delete ( only for charge type=4)
.                                         N = Inactive ( charge type <> 4)
TMMCEEDT  DIM       8      8        155   Effective End Date
.
OUTMCHA1  FILE    ASCII, FIXED=241
.
.Name     Type      Length Physical Start Description
.----     ----      ------ -------- ----- -----------
.TMMCHOSP  DIM       3      3        1     Hospital Code (pathspaf)
.TMMCCLMC  DIM       3      3        4     Claim Code (Cat CL)
.TMMCCNTR  DIM       6      6        7     Contract (Health Fund)
.TMMCFTAB  DIM       8      8        13    Fund Table
.TMMCMCHG  DIM       9      9        21    Charge Code
.TMMCEFDT  DIM       8      8        30    Effective Date
.TMMCDESC  DIM       90     90       38    Description
.TMMCCHGT  DIM       1      1        128   Charge Type
.                                         1 = Exploding Misc Item
.                                         2 = Theatre Fee
.                                         3 = Misc Item
.                                         4 = Pack Item
.TMMCCGRP  DIM       3      3        129   Charge Group (Cat FI)
.TMMCPATP  DIM       9      9        132   Patient Portion (6.2)
.TMMCINDC  DIM       1      1        141   Indicator for changing description
.TMMCKPRI  DIM       1      1        142   Keyin Price 1=Yes otherwise no
.TMMCSHWD  DIM       1      1        143   Show detail on invoice
.                                         0=No 1=Yes
.TMMCEDIE  DIM       10     10       144   EDI Equivalent
.TMMCACCD  DIM       1      1        154   Action Blank=Add or Update
.                                          D = Delete ( only for charge type=4)
.                                          N = Inactive ( charge type <> 4 )
.TMMCEEDT  DIM       8      8        155   Effective End Date
.
STATUS     DIM       8      8        163   Status (Accepted or Rejected)
ERRMSG     DIM       70     70       171   Error Message
.
PRGID     INIT      "IBAPMS93"
PRGNAM    INIT      "NZ Private Miscellaneous Charges load program"
VERSION   INIT      "V12.00.01"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and open files
.
ML0100    CALL      KASC0000
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          CALL      KFLD0000                * Keyin fields
          BRANCH    EXIT,ML0000
.
ML2000    CALL      PROC0000               * process
.
ML9999    CHAIN     PGM                    * chain back to program
+
.******************************************************************************
.*                                 KASC0000                                   *
.*                            Keyin ASCI file                                 *
.******************************************************************************
KASC0000  MOVE      ZERO,EXIT
          PACK      FNAME,SP70,SP70,SP70
.
KASC2000  KEYIN     *P1:10,*EL,"Keyin Path & File Name : ",*V2LON,FNAME
          PACK      FNAME,FNAME,SP70,SP70,SP70
.
          MATCH     SP70,FNAME
          GOTO      KASC9000 IF EQUAL
.
          MOVE      ZERO,OVRCD
          TRAP      OVERCOND IF IO
          OPEN      TMPMCHA1,FNAME
          TRAPCLR   IO
.
          BRANCH    OVRCD,KASC8000
          MOVE      ZERO,EXIT
          GOTO      KASC9999
.
KASC8000  DISPLAY   *P1:24,*EL,*B,"File not found.  ";
          CALL      HITENTER
          GOTO      KASC0000
.
KASC9000  MOVE      ONE,EXIT
.
KASC9999  RETURN
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.
          OPEN      NZPMCHA1,"nzpmchaf"
          OPEN      NZPMCHA3,"nzpmchaf"
          OPEN      NZPMXCA1,"nzpmxcaf"
          OPEN      PATCODE1,"patcodes"
          OPEN      PATFN1A1,"patfn1af"
          OPEN      PATHSPA1,"pathspaf"
.
          PREP      OUTMCHA1,"outmchaf"
.
          OPEN      CONTROLF,"controlf"
          READ      CONTROLF,NINTY8;*130,PTCNAGST
.
          MOVE      SP70,FILEFLAG
INIT9999  RETURN
+
.******************************************************************************
.*                                 KFLD0000                                   *
.*                            Keyin Fields                                    *
.******************************************************************************
KFLD0000  CALL      IVAR0000                * Initialise variables
          CALL      SCRD0000                * Display screen
.
          CALL      KMUP0000                * Keyin percentage mark-up
          BRANCH    EXIT,KFLD9999
.
          CALL      KCTY0000                * Keyin charge type
          BRANCH    EXIT,KFLD9999
          CALL      KGRP0000                * Keyin group
          BRANCH    EXIT,KFLD9999
          CALL      KCDI0000                * Keyin Change Description
          BRANCH    EXIT,KFLD9999
          CALL      KRPI0000                * Keyin Price
          BRANCH    EXIT,KFLD9999
          CALL      KDCI0000                * Show Detail on invoice
          BRANCH    EXIT,KFLD9999
.
KFLD2000  MOVE      ZERO,EXIT
.
          CALL      SFLD0000
          BRANCH    EXIT,KFLD0000
.
KFLD9999  RETURN
+
.******************************************************************************
.*                                 IVAR0000                                   *
.*                            Initialise variable                             *
.******************************************************************************
IVAR0000  MOVE      SP70,KYGROUP
          MOVE      "100",KYPERCG
          MOVE      THREE,KYCHRTY
          MOVE      ANSN,KYCHGDES
          MOVE      ANSN,KYPRICE
          MOVE      SP1,KYSHWDET
.
IVAR9999  RETURN
+
.******************************************************************************
.*                                 SCRD0000                                   *
.*                            Screen display                                  *
.******************************************************************************
SCRD0000  DISPLAY   *P1:4,*EF:
                    *P1:6," 1. Percentage Mark-up :":
                    *P1:7,"Set Defaults (only used for new Charges if ":
                          "the Input field is blank) -":
                    *P1:9," 2. Charge Type        :":
                   *P1:10," 3. Misc. Charge Group :":
                   *P1:11," 4. Change Desc. (Y/N) :":
                   *P1:12," 5. Keyin Price  (Y/N) :":
                   *P1:13," 6. Show Detail        :";
.
          MOVE      KYPERCG,DIM6
          DISPLAY   *P26:6,*EL,*V2LON,DIM6;
.
          MOVE      KYCHRTY,FORM1
          LOAD      DIM11,FORM1,SP20,THEATRE,MISCEL
          DISPLAY   *P26:9,*EL,*V2LON,KYCHRTY,*P30:12,DIM11:
                    *P26:11,*EL,*V2LON,KYCHGDES:
                    *P26:12,*EL,*V2LON,KYPRICE:
                    *P26:19,*EL,*V2LON,KYSHWDET;
.
SCRD9999  RETURN
+
.******************************************************************************
.*                                 KCTY0000                                   *
.*                            Keyin Charge Type                               *
.******************************************************************************
KCTY0000  DISPLAY   *P50:19,*EL,*V2LON,*ULON," CHARGE TYPE ",*HOFF:
                    *P55:20,*EL,*V2LON,TWO,SP2,*HOFF,THEATRE:
                    *P55:21,*EL,*V2LON,THREE,SP2,*HOFF,MISCEL;
.
          MOVE      ZERO,EXIT
          MOVE      SP1,KYCHRTY
          MOVE      ZERO,FORM1
          KEYIN     *P26:9,*V2LON,*EL,KYCHRTY;
.
          MATCH     EXITCHAR,KYCHRTY
          GOTO      KCTY9000 IF EQUAL       * Exit char keyed in
.
          MATCH     "2",KYCHRTY
          GOTO      KCTY1000 IF EQUAL
.
          MATCH     "3",KYCHRTY
          GOTO      KCTY1000 IF EQUAL
.
          DISPLAY   *P1:24,*EL,*B,"Invalid charge Type.  ";
          GOTO       KCTY0000
.
KCTY1000  MOVE      KYCHRTY,FORM1
          LOAD      DIM11,FORM1,SP20,THEATRE,MISCEL
          DISPLAY   *P26:9,*EL,*V2LON,KYCHRTY,*P30:9,DIM11:
                    *P50:19,*EL,*P55:20,*EL,*P55:21,*EL;
          GOTO      KCTY9999
.
KCTY9000  MOVE      ONE,EXIT
KCTY9999  RETURN
+
.******************************************************************************
.*                                 KGRP0000                                   *
.*                            Keyin Misc.Charge Group                         *
.******************************************************************************
KGRP0000  MOVE      "26",CCOL
          MOVE      "10",CVERT
.
KGRP1000  MOVE      SP3,KYGROUP
          MOVE      KYGROUP,DIM3
          MOVE      SP20,TDESC
          MOVE      ZERO,EXIT
          KEYIN     *PCCOL:CVERT,*EL,*V2LON,*RV,DIM3;
.
          ENDSET    DIM3
          APPEND    SP3,DIM3
          RESET     DIM3
.
          MATCH     EXITCHAR,DIM3
          GOTO      KGRP9100 IF EQUAL       * Exit char keyed in
.
          CMATCH    QUEST,DIM3
          GOTO      KGRP3000 IF EQUAL       * '?' keyed in
.
          MOVE      SP70,TDESC
          PACK      KEY5,CODEFI,DIM3,SP10
          CALL      RDCODE1                 * Read the codes file
          BRANCH    OVRCD,KGRP4000
.
          MOVE      DIM3,KYGROUP
          DISPLAY   *P26:10,*EL,*V2LON,KYGROUP,*P30:10,TDESC;
          GOTO      KGRP9000
.
KGRP3000  CALL      GETSCR00              * Save the current screen
          MOVE      CODEFI,CODE
          CALL      PATCODDS                * Display the miscell charge groups
          BRANCH    OVRCD,KGRP4000
          CALL      PUTSCR00
          GOTO      KGRP0000
.
KGRP4000  DISPLAY   *P1:24,*EL,*B,"Invalid Miscellaneous Charge Group Code.  ";
          CALL      HITENTER
          GOTO      KGRP1000
.
KGRP9000  MOVE      ZERO,EXIT
          GOTO      KGRP9999
.
KGRP9100  MOVE      ONE,EXIT
KGRP9999  RETURN
+
.******************************************************************************
.*                                  KMUP0000                                  *
.*                        Keyin The Mark-up                                   *
.******************************************************************************
KMUP0000  MOVE      ZERO,OVRCD
          KEYIN     *P26:6,*EL,*V2LON,*RV,KYPERCG;
KMUP9999  RETURN
+
.******************************************************************************
.*                                  KCDI0000                                  *
.*                   Keyin The Change Description Indicator                   *
.******************************************************************************
KCDI0000  MOVE      KYCHGDES,DIM1
          KEYIN     *P26:11,*EL,*V2LON,*RV,DIM1;
.
          REP       UPPLOW,DIM1
          MATCH     "Y",DIM1
          GOTO      KCDI1000 IF EQUAL
.
          MATCH     "N",DIM1
          GOTO      KCDI1000 IF EQUAL
.
          BEEP
          GOTO      KCDI0000
.
KCDI1000  MOVE      DIM1,KYCHGDES
          REP       "Y1N2",DIM1
          MOVE      DIM1,FORM1
.
          MOVE      DNO,DIM3
          LOAD      DIM3,FORM1,DYES,DNO
          DISPLAY   *P26:11,*EL,*V2LON,DIM3;
.
KCDI9999  RETURN
+
.******************************************************************************
.*                                  KRPI0000                                  *
.*                     Keyin The Change Price Indicator                       *
.******************************************************************************
KRPI0000  MOVE      KYPRICE,DIM1
          KEYIN     *P26:12,*EL,*V2LON,*RV,DIM1;
.
          REP       UPPLOW,DIM1
          MATCH     "Y",DIM1
          GOTO      KRPI1000 IF EQUAL
.
          MATCH     "N",DIM1
          GOTO      KRPI1000 IF EQUAL
.
          BEEP
          GOTO      KRPI0000
.
KRPI1000  MOVE      DIM1,KYPRICE
          REP       "Y1N2",DIM1
          MOVE      DIM1,FORM1
.
          MOVE      DNO,DIM3
          LOAD      DIM3,FORM1,DYES,DNO
          DISPLAY   *P26:12,*EL,*V2LON,DIM3;
.
KRPI9999  RETURN
+
.******************************************************************************
.*                                  KDCI0000                                  *
.*                      Keyin The Show Detail Indicator                       *
.******************************************************************************
KDCI0000  MOVE      KYSHWDET,DIM1
          KEYIN     *P26:13,*EL,*V2LON,*RV,DIM1;
.
          REP       UPPLOW,DIM1
          MATCH     "Y",DIM1
          GOTO      KDCI1000 IF EQUAL
.
          MATCH     "N",DIM1
          GOTO      KDCI1000 IF EQUAL
.
          BEEP
          GOTO      KDCI0000
.
KDCI1000  MOVE      DIM1,KYSHWDET
          REP       "Y1N2",DIM1
          MOVE      DIM1,FORM1
.
          MOVE      DNO,DIM3
          LOAD      DIM3,FORM1,DYES,DNO
          DISPLAY   *P26:13,*EL,*V2LON,DIM3;
.
KDCI9999  RETURN
+
.******************************************************************************
.*                                  SFLD0000                                  *
.*                        Select Field                                        *
.******************************************************************************
SFLD0000  CALL      MAINQST                 * Select Item, (P)ost, (C)ancel ?
.
          COMPARE   ZERO,CCITEM
          GOTO      SFLD9999 IF EQUAL
          GOTO      SFLD1000 IF LESS
.
          MOVE      ZERO,EXIT
          PERFORM   CCITEM,KMUP0000:               * Keyin percentage mark-up
                           KCTY0000:               * Keyin charge type
                           KGRP0000:               * Keyin group
                           KCDI0000:               * Keyin Change Description
                           KRPI0000:               * Keyin Change Price Ind
                           KDCI0000                * Keyin Show Detail Ind
.
          BRANCH    EXIT,SFLD9999
          GOTO      SFLD0000
.
SFLD1000  MOVE      ONE,EXIT
SFLD9999  RETURN
+
.**************************************************************************
.*                               PROC0000              Called by: ML0000  *
.*                                                                        *
.**************************************************************************
.
PROC0000  DISPLAY   *P1:24,*EL,"Updating: ";
.
          UNPACK    SP70,TMMCHOSP,TMMCCLMC,TMMCCNTR,TMMCFTAB,TMMCMCHG
          UNPACK    SP70,TMMCEFDT,TMMCDESC,TMMCCHGT,TMMCCGRP,TMMCPATP
          UNPACK    SP70,TMMCINDC,TMMCKPRI,TMMCSHWD,TMMCEDIE,TMMCACCD,TMMCEEDT
.
          MOVE      ZERO,TMMCPATP
PROC1000  READ      TMPMCHA1,SEQ;TMMCHOSP,TMMCCLMC,TMMCCNTR,TMMCFTAB,TMMCMCHG:
                                 TMMCEFDT,TMMCDESC,TMMCCHGT,TMMCCGRP,TMMCPATP:
                                 TMMCINDC,TMMCKPRI,TMMCSHWD,TMMCEDIE,TMMCACCD:
                                 TMMCEEDT
          GOTO      PROC9999 IF OVER
.
          CALL      VALD0000         * validate details of record
          BRANCH    EXIT,PROC5000
.
          MATCH     "4",TMMCCHGT
          IF        @EQUAL
            CALL      UPMXC000       * Update nzpmxcaf
          ELSE
            CALL      UPDAT000       * update nzpmchaf
          ENDIF
          GOTO      PROC5000
.
.
PROC5000  WRITE     OUTMCHA1,SEQ;TMMCHOSP,TMMCCLMC,TMMCCNTR,TMMCFTAB,TMMCMCHG:
                                 TMMCEFDT,TMMCDESC,TMMCCHGT,TMMCCGRP,TMMCPATP:
                                 TMMCINDC,TMMCKPRI,TMMCSHWD,TMMCEDIE,TMMCACCD:
                                 TMMCEEDT,STATUS,ERRMSG
.
          PRINT     *1,TMMCHOSP,TMMCCLMC,TMMCCNTR,TMMCFTAB,TMMCMCHG:
                                 TMMCEFDT,TMMCDESC,TMMCCHGT,TMMCCGRP,TMMCPATP:
                                 TMMCINDC,TMMCKPRI,TMMCSHWD,TMMCEDIE,TMMCACCD:
                                 TMMCEEDT,STATUS,ERRMSG
.
          GOTO      PROC1000
.
PROC9999  RETURN
+
.**************************************************************************
.*                               VALD0000              Called by: PROC0000*
.*                                                                        *
.**************************************************************************
VALD0000  MOVE      ZERO,EXIT
          MOVE      SP70,ERRMSG
          MOVE      ACCEPTED,STATUS
.
          MATCH     SP70,TMMCHOSP        * validate hospital  
          GOTO      VALD0100 IF EQUAL
.
          PACK      KEY3,TMMCHOSP,SP70
          CALL      RDPTHSP1
          IF        OVRCD=1
            PACK      ERRMSG,ERRMSG04
            GOTO      VALD9000
          ENDIF
.
VALD0100  MATCH     SP70,TMMCCLMC        * validate claim code
          IF        @EQUAL
            PACK      ERRMSG,ERRMSG08
            GOTO      VALD9000
          ENDIF
.
          PACK      KEY5,ANSC,ANSL,TMMCCLMC,SP70
          CALL      RDCODE1
          IF        OVRCD=1
            PACK      ERRMSG,ERRMSG08
            GOTO      VALD9000
          ENDIF
.
          MATCH     SP70,TMMCCNTR,SP70   * validate contract code
          GOTO      VALD0200 IF EQUAL
.
          PACK      KEY14,TMMCCNTR,ZERO4,SP70
          CALL      RDFUND1
          IF        OVRCD=1
            PACK      ERRMSG,ERRMSG09,SP70
            GOTO      VALD9000
          ENDIF
.
VALD0200  MATCH     SP70,TMMCFTAB,SP70   * validate contract table
          GOTO      VALD0300 IF EQUAL
.
          PACK      KEY14,TMMCCNTR,TMMCFTAB,SP70
          CALL      RDFUND1
          IF        OVRCD=1
            PACK      ERRMSG,ERRMSG10,SP70
            GOTO      VALD9000
          ENDIF
.
VALD0300  MATCH     SP70,TMMCACCD        * validate action code
          GOTO      VALD0400 IF EQUAL
.
          MATCH     ANSD,TMMCACCD
          IF        @EQUAL
            MATCH     "4",TMMCCHGT
            GOTO      VALD0400 IF EQUAL   * Delete Pack item
          ENDIF
.
          MATCH     ANSN,TMMCACCD
          IF        @EQUAL
            MATCH     "4",TMMCCHGT
            GOTO      VALD0400 IF NOT EQUAL   * Inactive item
          ENDIF
.
          PACK      ERRMSG,ERRMSG13,SP70
          GOTO      VALD9000
.
VALD0400  MATCH     SP70,TMMCINDC       * validate change desc indicator
          IF        @EQUAL
            MOVE      KYCHGDES,TMMCINDC
          ENDIF
.
          MATCH     ANSY,TMMCINDC
          IF        !@EQUAL
            MATCH      ANSN,TMMCINDC
            IF         !@EQUAL
              PACK       ERRMSG,ERRMSG01,SP70
              GOTO       VALD9000
            ENDIF
          ENDIF
.
          MATCH     SP70,TMMCKPRI       * validate keyin price indicator
          IF        @EQUAL
            MOVE      KYPRICE,TMMCKPRI
          ENDIF
.
          MATCH     ANSY,TMMCKPRI
          IF        !@EQUAL
            MATCH      ANSN,TMMCKPRI
            IF         !@EQUAL
              PACK       ERRMSG,ERRMSG02,SP70
              GOTO       VALD9000
            ENDIF
          ENDIF
.
          MATCH     SP70,TMMCSHWD       * validate show detail indicator
          IF        @EQUAL
            MOVE      KYSHWDET,TMMCSHWD
          ENDIF
.
          MATCH     "1",TMMCCHGT       * show detail must be no unless exploding
          IF        !@EQUAL
            MOVE      ANSN,TMMCSHWD
          ENDIF
.
          MATCH     ANSY,TMMCSHWD   
          IF        !@EQUAL               
            MATCH      ANSN,TMMCSHWD      
            IF         !@EQUAL            
              PACK       ERRMSG,ERRMSG03,SP70
              GOTO       VALD9000   
            ENDIF   
          ENDIF     
.
          MATCH     SP70,TMMCCGRP       * validate misc charge group
          IF        @EQUAL
            MOVE      KYGROUP,TMMCCGRP   
          ENDIF
.
          PACK      KEY5,CODEFI,TMMCCGRP,SP10
          CALL      RDCODE1                 * Read the codes file
          IF        OVRCD=1
            PACK       ERRMSG,ERRMSG05,SP70
            GOTO       VALD9000
          ENDIF
.
          MATCH     SP70,TMMCCHGT       * validate misc charge type 
          IF        @EQUAL
            MOVE      KYCHRTY,TMMCCHGT 
          ENDIF
.
          MATCH     "1",TMMCCHGT
          IF        !@EQUAL
            MATCH      "2",TMMCCHGT
            IF         !@EQUAL
              MATCH      "3",TMMCCHGT
              IF         !@EQUAL
                MATCH      "4",TMMCCHGT
                IF         !@EQUAL
                  PACK       ERRMSG,ERRMSG06,SP70
                  GOTO       VALD9000
                ENDIF
              ENDIF
            ENDIF
          ENDIF
.
          PACK      VALSTRNG,TMMCDESC,SP70
          CALL      VSTR0000            * Check for special characters
          IF        EXIT=1
            PACK      ERRMSG,ERRMSG19,SP70
            GOTO      VALD9000
          ENDIF
.
          MATCH     SP70,TMMCEFDT       * validate the effective date
          IF        @EQUAL
            PACK      ERRMSG,ERRMSG07,SP70
          ENDIF
.
          PACK      DIM8,TMMCEFDT,SP70
          CALL      VDTM0000
          BRANCH    EXIT,VALD9000
.
          MATCH     "4",TMMCCHGT
          GOTO      VALD9999 IF NOT EQUAL
.
          CALL      VQNT0000          * validate quantity
          BRANCH    EXIT,VALD9000
.
          CALL      VITM0000          * validate pack item
          BRANCH    EXIT,VALD9000
.
          GOTO      VALD9999
.
VALD9000  MOVE      ONE,EXIT
          MOVE      REJECTED,STATUS
          GOTO      VALD9999
.
VALD9999  RETURN
+
.*****************************************************************************
.*                               VSTR0000          Called by: UBFLD000       *
.*                                                            UDFLD000       *
.* Check for special characters in a string. A character greater than        *
.* octal 0176 or less than 040.                                              *
.* Requires:  VALSTRNG - String to validate for special characters           *
.* Returns :  EXIT = 0 No special character found.                           *
.*            EXIT = 1 Yes special character found.                          *
.*****************************************************************************
VSTR0000  MATCH     SP70,VALSTRNG           * Is the string empty
          GOTO      VSTR8000 IF EQUAL
.
          MOVE      SP70,DIM1
.
VSTR1000  MOVE      VALSTRNG,DIM1           * Get 1 character
.
          MATCH     DIM1,OCTALHIG           * Not greater than octal 0176
          GOTO      VSTR9000 IF LESS
.
          MATCH     OCTALLOW,DIM1           * Not less than octal 040
          GOTO      VSTR9000 IF LESS
.
          BUMP      VALSTRNG                * Bump to next character
          GOTO      VSTR1000 IF NOT EOS
.
VSTR8000  RESET     VALSTRNG                * OK no special characters found
          MOVE      ZERO,EXIT
          GOTO      VSTR9999
.
VSTR9000  RESET     VALSTRNG                * Error special character found
          MOVE      ONE,EXIT
          GOTO      VSTR9999
.
VSTR9999  RETURN
+
.**************************************************************************
.         Validate quantity for Pack item
.**************************************************************************
VQNT0000  MOVE      SP70,KEY2
          PACK      KEY9,TMMCPATP,SP70
          SCAN      ".",KEY9
          GOTO      VQNT1000 IF NOT EQUAL
.
          BUMP      KEY9
          MOVE      KEY9,KEY2
          REP       " 0",KEY2
          MATCH     "00",KEY2
          GOTO      VQNT9000 IF NOT EQUAL        * invalid
          RESET     KEY9
          UNPACK    KEY9,KEY6,KEY3
          PACK      KEY9,KEY6,SP70
.
VQNT1000  SQUEEZE   KEY9
          TYPE      KEY9
          GOTO      VQNT9000 IF NOT EQUAL
.
          MOVE      ZERO,F9
          MOVE      KEY9,F9
          MOVE      F9,TMMCQUAN
          GOTO      VQNT9999
.
VQNT9000  PACK      ERRMSG,ERRMSG15,SP70
          MOVE      ONE,EXIT
VQNT9999  RETURN
+
.**************************************************************************
.         Validate Pack item code
.**************************************************************************
.
.         Check for a valid exploding pack charge code
.
VITM0000  PACK      KEY37,TMMCHOSP,TMMCCLMC,TMMCCNTR,TMMCFTAB,TMMCMCHG:
                          TMMCEFDT,SP70
          CALL      RDNZMCH1
          BRANCH    OVRCD,VITM9200          * invalid Pack item code
.
          MOVE      TMMCHOSP,SAVEHOSP       * save hospital code
.
.         Check if the Exploding item is valid for the Hosp,contract type
.
VITM1000  UNPACK    TMMCEDIE,KEY9
          PACK      KEY37,KEY9,TMMCCLMC,SP70
          CALL      RSNZMCH3
VITM2000  CALL      RKNZMCH3
          BRANCH    OVRCD,VITM3000
.
          MATCH     NZMCMCHG,KEY9
          GOTO      VITM3000 IF NOT EQUAL    * not a valid pack item code
.
          MATCH     NZMCCLMC,TMMCCLMC
          GOTO      VITM3000 IF NOT EQUAL    * not a valid pack item code
.
          MATCH     NZMCHOSP,TMMCHOSP
          GOTO      VITM2000 IF NOT EQUAL    * not a valid pack item code
          MATCH     NZMCCNTR,TMMCCNTR
          GOTO      VITM2000 IF NOT EQUAL    * not a valid pack item code
          MATCH     NZMCFTAB,TMMCFTAB
          GOTO      VITM2000 IF NOT EQUAL    * not a valid pack item code
.
          MATCH     "1",NZMCACFL             * Inactive?
          GOTO      VITM2000 IF EQUAL
.
          MATCH     NZMCEFDT,TMMCEFDT       * effective date => serv. date ?
          GOTO      VITM2000 IF LESS        * yes
.
          MATCH     SP70,NZMCEEDT
          IF        !@EQUAL
            MATCH     TMMCEFDT,NZMCEEDT
            GOTO      VITM2000 IF LESS
          ENDIF
          MOVE      ZERO,EXIT
          GOTO      VITM9800
.
.         Try with blank hospital
.
VITM3000  MATCH     SP70,TMMCHOSP
          GOTO      VITM9000 IF EQUAL
.
          MOVE      SP70,TMMCHOSP
          GOTO      VITM1000
.
VITM9000  PACK      ERRMSG,ERRMSG16,SP70
          MOVE      ONE,EXIT
          GOTO      VITM9800
.
VITM9200  PACK      ERRMSG,ERRMSG17,SP70
          MOVE      ONE,EXIT
          GOTO      VITM9800
.
VITM9800  MOVE      SAVEHOSP,TMMCHOSP
VITM9999  RETURN
+
.**************************************************************************
.*                               UPDAT000              Called by: PROC0000*
.*                                                                        *
.**************************************************************************
UPDAT000  MOVE      ZERO,EXIT
.
          PACK      KEY37,TMMCHOSP,TMMCCLMC,TMMCCNTR,TMMCFTAB,TMMCMCHG:
                          TMMCEFDT,SP70
          MOVE      TMMCEFDT,VALFDATE
          MOVE      TMMCEEDT,VALTDATE
          CALL      VNDT0000               * Check for overlap effective dates
          BRANCH    EXIT,UPDAT920
.
          PACK      KEY37,TMMCHOSP,TMMCCLMC,TMMCCNTR,TMMCFTAB,TMMCMCHG:
                          TMMCEFDT,SP70
          CALL      RDNZMCH1
          IF        OVRCD=1
            CALL      SITM0000               * Set Misc.Item fields
.
            PACK      NZMCCUID,UPLOAD,SP70
            CALL      IBACLOCK
            PACK      NZMCCDAT,CCC,CYY,CMM,CDD,SP70
            REP       " 0",NZMCCDAT
            CLOCK     TIME,CTIMEIS
            PACK      NZMCCTIM,CTIMEIS
            REP       " 0",NZMCCTIM
            MOVE      SP70,NZMCUUID
            MOVE      SP70,NZMCUDAT
            MOVE      SP70,NZMCUTIM
            CALL      WRNZMCH1
          ELSE
            CALL      SITM0000               * Set Misc.Item fields
.
            PACK      NZMCUUID,UPLOAD,SP70
            CALL      IBACLOCK
            PACK      NZMCUDAT,CCC,CYY,CMM,CDD,SP70
            REP       " 0",NZMCUDAT
            CLOCK     TIME,CTIMEIS
            PACK      NZMCUTIM,CTIMEIS
            REP       " 0",NZMCUTIM
            CALL      UPNZMCH1
          ENDIF
.
          PACK      SAVKEY37,NZMCHOSP,NZMCCLMC,NZMCCNTR,NZMCFTAB,NZMCMCHG:
                             NZMCEFDT,SP70
          PROC      PATMKIUP              * update default misc charge keyword
          CALL      ENZD0000              * Auto populate prev.item end date
.
          GOTO      UPDAT999
.
UPDAT920  PACK      ERRMSG,ERRMSG18,SP70
          MOVE      REJECTED,STATUS
.
UPDAT980  MOVE      ONE,EXIT
UPDAT999  RETURN
+
.******************************************************************************
.         Set up Misc.item fields
.******************************************************************************
SITM0000  PACK      NZMCHOSP,TMMCHOSP,SP70
          PACK      NZMCCLMC,TMMCCLMC,SP70
          PACK      NZMCCNTR,TMMCCNTR,SP70
          PACK      NZMCFTAB,TMMCFTAB,SP70
          PACK      NZMCMCHG,TMMCMCHG,SP70
          PACK      NZMCEFDT,TMMCEFDT,SP70
.
          PACK      NZMCEEDT,TMMCEEDT,SP70
          PACK      NZMCDESC,TMMCDESC,SP70
          REP       "#"'",NZMCDESC
          MOVE      TMMCCHGT,NZMCCHGT
          PACK      NZMCCGRP,TMMCCGRP,SP70
          MOVE      ZERO,FORM6P2
          SQUEEZE   TMMCPATP
          MOVE      TMMCPATP,FORM6P2
          MOVE      FORM6P2,NZMCPATP
          MOVE      ZERO,NZMCREBP
.
          MOVE      ZERO,NZMCINDC
          MATCH     ANSY,TMMCINDC
          IF        @EQUAL
            MOVE      ONE,NZMCINDC
          ENDIF
.
          MOVE      ONE,NZMCGSTA
          MOVE      PTCNAGST,NZMCGSTC
          PACK      NZMCEDIE,TMMCEDIE,SP70
          PACK      NZMCKPRI,TMMCKPRI,SP70
          MOVE      "0",NZMCSHWD
          MATCH     ANSY,TMMCSHWD
          IF        @EQUAL
            MOVE       "1",NZMCSHWD
          ENDIF
.
          MOVE      SP70,NZMCACFL           * Active flag
          MATCH     ANSN,TMMCACCD
          IF        @EQUAL
            MOVE      "1",NZMCACFL          * In-Active flag
          ENDIF
SITM9999  RETURN
+
.******************************************************************************
. Auto populate the previous SX misc items effective to date if blank
.******************************************************************************
ENZD0000  UNPACK    SAVKEY37,KEY29,KEY8
          PACK      KEY37,SAVKEY37
          CALL      RSNZMCH1
          CALL      RPNZMCH1
          BRANCH    OVRCD,ENZD9999
.
          PACK      SAVKEY29,NZMCHOSP,NZMCCLMC,NZMCCNTR,NZMCFTAB,NZMCMCHG,SP70
.
          MATCH     SAVKEY29,KEY29
          GOTO      ENZD9999 IF NOT EQUAL
.
          MATCH     SP70,NZMCEEDT                * Exit if effective to date is
          GOTO      ENZD9999 IF NOT EQUAL        * already populated
.
          MOVE      KEY8,WORKDATE
          SUB       ONE,WORKDATE
          MOVE      WORKDATE,NZMCEEDT
.
          CALL      UPNZMCH1                     * Update current file
.
ENZD9999  RETURN
+
.**************************************************************************
.*                               UPMXC000              Called by: PROC0000*
.*                                                                        *
.**************************************************************************
UPMXC000  MOVE      ZERO,EXIT
          MOVE      ZERO,RECFLAG            * default to no record
.
          PACK      KEY37,TMMCHOSP,TMMCCLMC,TMMCCNTR,TMMCFTAB,TMMCMCHG:
                          TMMCEFDT,SP70
          CALL      RDNZMCH1
          BRANCH    OVRCD,UPMXC920          * invalid Pack item code
.         
          MOVE      ONE,F3
          PACK      KEY37,TMMCHOSP,TMMCCLMC,TMMCCNTR,TMMCFTAB,TMMCMCHG:
                          TMMCEFDT,SP70
          PACK      KEY40,KEY37,SP70
          CALL      RSNZMXC1
UPMXC020  CALL      RKNZMXC1
          BRANCH    OVRCD,UPMXC100
.
          PACK      DIM37,NZMXHOSP,NZMXCLMC,NZMXCNTR,NZMXFTAB,NZMXMCHG:
                          NZMXEFDT,SP70
          MATCH     KEY37,DIM37
          GOTO      UPMXC100 IF NOT EQUAL
.
          MATCH     NZMXITMN,TMMCEDIE      * same item?
          GOTO      UPMXC020 IF NOT EQUAL
.
.         Record exists
.
          MATCH     ANSD,TMMCACCD
          IF        @EQUAL
            PACK      KEY40,DIM37,NZMXUNIQ,SP70
            CALL      DENZMXC1
            GOTO      UPMXC999
          ENDIF
.
          MOVE      ONE,RECFLAG             * found a record
          GOTO      UPMXC300
.
.         Record doesn't exist
.
UPMXC100  MATCH     ANSD,TMMCACCD
          GOTO      UPMXC900 IF EQUAL
.
.         Get the next unique number
.
          PACK      KEY40,KEY37,Z70
          CALL      RSNZMXC1
          CALL      RPNZMXC1
          BRANCH    OVRCD,UPMXC200
          PACK      DIM37,NZMXHOSP,NZMXCLMC,NZMXCNTR,NZMXFTAB,NZMXMCHG:
                          NZMXEFDT,SP70
          MATCH     KEY37,DIM37
          GOTO      UPMXC200 IF NOT EQUAL
.
          MOVE      NZMXUNIQ,F3
          ADD       ONE,F3
.
UPMXC200  PACK      NZMXHOSP,TMMCHOSP,SP70
          PACK      NZMXCLMC,TMMCCLMC,SP70
          PACK      NZMXCNTR,TMMCCNTR,SP70
          PACK      NZMXFTAB,TMMCFTAB,SP70
          PACK      NZMXMCHG,TMMCMCHG,SP70
          PACK      NZMXEFDT,TMMCEFDT,SP70
          PACK      NZMXITMN,TMMCEDIE,SP70
.
          PACK      NZMXCUID,UPLOAD,SP70
          CALL      IBACLOCK
          PACK      NZMXCDAT,CCC,CYY,CMM,CDD,SP70
          REP       " 0",NZMXCDAT
          CLOCK     TIME,CTIMEIS
          PACK      NZMXCTIM,CTIMEIS
          REP       " 0",NZMXCTIM
          MOVE      SP70,NZMXUUID
          MOVE      SP70,NZMXUDAT
          MOVE      SP70,NZMXUTIM
          MOVE      F3,NZMXUNIQ
.
UPMXC300  MOVE      TMMCQUAN,NZMXQNTY
          PACK      NZMXUUID,UPLOAD,SP70
          CALL      IBACLOCK
          PACK      NZMXUDAT,CCC,CYY,CMM,CDD,SP70
          REP       " 0",NZMXUDAT
          CLOCK     TIME,CTIMEIS
          PACK      NZMXUTIM,CTIMEIS
          REP       " 0",NZMXUTIM
.
          IF        RECFLAG=1
            CALL      UPNZMXC1
          ELSE
            PACK      KEY40,NZMXHOSP,NZMXCLMC,NZMXCNTR,NZMXFTAB,NZMXMCHG:
                            NZMXEFDT,NZMXUNIQ,SP70
            CALL      WRNZMXC1
          ENDIF
          GOTO      UPMXC999
.
UPMXC900  PACK      ERRMSG,ERRMSG14,SP70
          MOVE      REJECTED,STATUS
          GOTO      UPMXC980
.
UPMXC920  PACK      ERRMSG,ERRMSG17,SP70
          MOVE      REJECTED,STATUS
          GOTO      UPMXC980
.
UPMXC980  MOVE      ONE,EXIT
.
UPMXC999  RETURN
+
.*****************************************************************************
.*                              VDTM0000           Called by:                *
.*                  Validate a date/time field                               *
.* Requires:  DIM8 - Date in format ccyymmdd                                 *
.* Returns:   ERRORCNT - error count                                         *
.*****************************************************************************
.
.         Validate that the full date
.
VDTM0000  MOVE      ZERO,EXIT
          TYPE      DIM8 
          IF        !@EQUAL
            GOTO      VDTM9000
          ENDIF
.
          UNPACK    DIM8,DIM2C,DIM2Y,DIM2M,DIM2D
.
.         Validate the century is >= 20
.
          MOVE      DIM2C,FORM2
          IF        FORM2 < 20
            GOTO      VDTM9000
          ENDIF
.
.         Validate the month
.
          MOVE      DIM2M,FORM2
          IF        FORM2 < 1 | FORM2 > 12
            GOTO      VDTM9000
          ENDIF
.
.         Validate the day is:
.              < 32 for January, March, May, July, August, October & December
.              < 31 for April, June, September & November
.              < 29 for February, except in a leap year where it is < 30
.
          BRANCH    FORM2,VDTM1000:              * Jan
                          VDTM3000:              * Feb
                          VDTM1000:              * Mar
                          VDTM2000:              * Apr
                          VDTM1000:              * May
                          VDTM2000:              * Jun
                          VDTM1000:              * Jul
                          VDTM1000:              * Aug
                          VDTM2000:              * Sep
                          VDTM1000:              * Oct
                          VDTM2000:              * Nov
                          VDTM1000               * Dec
.
.         Validate days for month of 31 days
.
VDTM1000  MOVE      DIM2D,FORM2
          IF        FORM2 < 1 | FORM2 > 31
            GOTO      VDTM9000
          ENDIF
          GOTO      VDTM4000
.
.         Validate days for month of 30 days
.
VDTM2000  MOVE      DIM2D,FORM2
          IF        FORM2 < 1 | FORM2 > 30
            GOTO      VDTM9000
          ENDIF
          GOTO      VDTM4000
.
.         Validate days for February
.         A leap year is one where:
.           1. Every year divisible by 4 is a leap year.
.           2. But every year divisible by 100 is NOT a leap year
.           3. Unless the year is also divisible by 400, then it is still a
.              leap year.
.
VDTM3000  MOVE      DIM2D,FORM2
          PACK      DIM4,DIM2C,DIM2Y
          MOVE      DIM4,FORM4
          IF        (FORM4%4) = 0
            IF        (FORM4%100) = 0
              IF        (FORM4%400) = 0
                GOTO      VDTM3200
              ENDIF
            ELSE
              GOTO      VDTM3200
            ENDIF
          ENDIF
.
.         Check for normal Feb days
.
VDTM3100  IF        FORM2 < 1 | FORM2 > 28
            GOTO      VDTM9000
          ENDIF
          GOTO      VDTM4000
.
.         Check for leap year Feb days
.
VDTM3200  IF        FORM2 < 1 | FORM2 > 29
            GOTO      VDTM9000
          ENDIF
          GOTO      VDTM4000
.
.         Make sure that the transaction date is not in the future
.
VDTM4000  CALL      IBACLOCK
          PACK      CURRDATE,CCC,CYY,CMM,CDD
          REP       " 0",CURRDATE
.
....      MATCH     DIM8,CURRDATE           * Allow future effective dates
....      IF        @LESS
....        GOTO      VDTM9000
....      ENDIF
          GOTO      VDTM9999
.
VDTM9000  PACK      ERRMSG,ERRMSG07,SP70
          MOVE      ONE,EXIT
          GOTO      VDTM9999
.
VDTM9999  RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       PATCODDS
          INC       PATMKIPR
          INC       STD001IO
          INC       NZPMCHVL
.
          INC       NZPMCHIO/INC
          INC       NZPMC1IO/INC
          INC       NZPMXCIO/INC
          INC       PATCODIO/INC
          INC       PATMCHIO/INC
          INC       PATFN1IO/INC
          INC       PATHSPIO/INC
