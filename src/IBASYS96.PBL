.***************************************************************************
.* System    :   System Management                                         *
.* Program   :   IBASYS96                                                  *
.* Desc      :   Monet Interface Table Maintenance                         *
.***************************************************************************
.* Date      :   09/07/2003                                                *
.* Author    :   Steve Armstrong                                           *
.* Function  :   This program will allow the user to query and delete      *
.*               the records in the Monet interface tables (for incoming   *
.*               messages).                                                *
.* Mods      :                                                             *
.*       V10.13.01  05/12/2018  Don Nguyen        TSK 0838558              *
.*                  Deleted temp file (TEMPFILE) after processing          *
.*       V10.05.01  01/01/2015  Ania P            CAR 261630               *
.*                  Removed use of PORT for temp file naming               *
.*       V10.01.01  03/02/2011  Jill Parkinson    CAR 233088               *
.*                  Added PMSVX1FD                                         *
.*        V9.09.01  24/12/2007  Steve Armstrong   CAR 155887               *
.*                  Fixed problems after further testing:                  *
.*                  - Added OPEN on PATMA1A1, PATGSRN2 & PATMX1A1 for      *
.*                    U/R option.                                          *
.*                  - Changed screen heading of "Delivered" to "Processed. *
.***************************************************************************
.
          INC       STD001FD
.
. FILE DESCRIPTION INCLUDES
. -------------------------
          INC       BOKRC1FD/INC
          INC       HL7RECFD/INC
          INC       HL7RERFD/INC
          INC       NHIMASFD/INC
          INC       NZHISIFD/INC
          INC       OUTPREFD/INC
          INC       PATALRFD/INC
          INC       PATCALAG/INC
          INC       PATCODFD/INC
          INC       PATCOMM/INC
          INC       PATCONFD/INC
          INC       PATDHEAD/INC
          INC       PATDO1FD/INC
          INC       PATGSRFD/INC
          INC       PATMA1FD/INC
          INC       PATMI1FD/INC
          INC       PATPR1FD/INC
          INC       PMSHCPFD/INC
          INC       PMSRPTFD/INC
          INC       PMSPX2FD/INC
          INC       PMSVX1FD/INC
          INC       IBASEQFD/INC  
          INC       TFILEVAR/INC
          INC       WEBERRFD/INC
.
.
. LOCAL VARIABLE DEFINITION
. -------------------------
BJDAY     FORM      3
.
CALLPOS1  FORM      1
CALLPOS2  FORM      1
CAPTTEXT  DIM       34                 * caption text
CJDAY     FORM      3
CODETYPE  FORM      2
CODECATG  DIM       2
COUNT     FORM      2
COUNTR    FORM      12
CPLENGTH  FORM      2                  * caption length
.
DATEVAR   DIM       8
DATLNGTH  FORM      3                  * data field length
DELTFLAG  FORM      1                  * delete flag
.                                           0 = record just deleted
.                                           1 = record status reset
DIM3      DIM       3
DIM8      DIM       8
DIM8A     DIM       8
DIM8B     DIM       8
DIM10A    DIM       10
DIM10B    DIM       10
DIM17     DIM       17
DIM24     DIM       24
DIM50     DIM       50
DIM78     DIM       78
DOTLNGTH  FORM      2
.
ERPAGENO  FORM      3
.
FIELD1    FORM      2
FIELD2    FORM      2
FIELDNAM  DIM       8
FIELDTXT  DIM       13                 * database field name text
FLLENGTH  FORM      2                  * database field name length
FORM3     FORM      3
FRSTGNAM  DIM       40
FULLGNAM  DIM       80
.
MESSDESC  DIM       27
MESSNUMB  FORM      20
MESSSTAT  DIM       1
MESSSYST  DIM       3
MESSTYPE  DIM       3
.
NMPNUMB   DIM       20
.
PSEXDESC  DIM       13
.
RECDDISP  DIM       80[18]
.
SAVEKEY1  DIM       37
SAVEKEY2  DIM       40
SAVEKEY3  DIM       44
SAVEURNO  DIM       8
SCNDGNAM  DIM       40
SELCTION  FORM      2
SPACECNT  FORM      2
SPACENUM  FORM      2
STATDESC  DIM       9
STRTDATE  DIM       8
.
TMPKEYER  DIM       23[18]
TEMPKEY1  DIM       37[18]
TEMPKEY3  DIM       44[18]
TEMPFILE  FILE      ASCII, FIXED=81
TIMEVAR   DIM       8
.
UPARROW   FORM      1             * Up arrow flag
.                                     0 = up arrow not set
.                                     1 = up arrow set
.
WORDSTAT  FORM      2
.
.
. PROGRAM CONSTANTS
.------------------
HYPHEN    INIT      "-"
.
MESSPA28  INIT      "Register Patient      (PMI)"
MESSPA31  INIT      "Update Patient        (PMI)"
.
PSEXFEML  INIT      "Female       "
PSEXINDT  INIT      "Indeterminate"
PSEXMALE  INIT      "Male         "
PSEXUNKN  INIT      "Unknown      "
PSEXINTR  INIT      "Intersex     "
.
SP80      INIT      "                                        ":
                    "                                        "
STATDESP  INIT      "Processed"
STATDESE  INIT      "Errored  "
STATDESR  INIT      "Received "
.
TILDA40   INIT      "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
.
WPFILEP   INIT      "sys96a"
.
.
.
PRGID     INIT      "IBASYS96"
PRGNAM    INIT      "Monet Interface Table Maintenance"
VERSION   INIT      "V12.00.00"
+
.**************************************************************************
.*                              ML0000                                    *
.*                      Controlling Logic (Mainline code)                 *
.**************************************************************************
.
ML0000    CALL      INIT0000               * initialisation and open files
.
ML0100    CALL      OPTN0000               * select options
          BRANCH    EXIT,ML9999            * EXIT = 1 if 0 chosen in menu
          BRANCH    COPTION,ML1000:        * view all waiting records
                            ML1000:        * view all processed records
                            ML1000:        * view all errored records
                            ML4000:        * view by message id
                            ML5000:        * view by U/R number
                            ML2000:        * delete processed
                            ML3000         * delete all
.
ML1000    CALL      VIEW0000               * view queued records
          GOTO      ML0100
.
ML2000    CALL      DELP0000               * delete processed records
          GOTO      ML0100
.
ML3000    CALL      DELA0000               * delete all records
          GOTO      ML0100
.
ML4000    CALL      VMES0000               * view by message id
          GOTO      ML0100
.
ML5000    CALL      GPAT0000               * get patient U/R
          BRANCH    EXIT,ML0100            * nothing input
.
          CALL      VIEW0000               * view queued records
          GOTO      ML5000
.
ML9999    CHAIN     PGM                    * chain back to program
+
.****************************************************************************
.*                                INIT0000             Called by: ML0000    *
.*                             initialisation                               *
.*  The initialisation routine is used to display headings and open files.  *
.****************************************************************************
.
INIT0000  CALL      DISPHEAD                  * display heading
.>>>>>>
          DISPLAY   *P56:24,*EL,"Opening ":
                    *P64:24,"controlf";
          OPEN      CONTROLF,"controlf"
.
          DISPLAY   *P64:24,"hl7recaf";
          OPEN      HL7RECA1,"hl7recaf"
          OPEN      HL7RECA2,"hl7recaf"
          OPEN      HL7RECA3,"hl7recaf"
.
          DISPLAY   *P64:24,"hl7reraf";
          OPEN      HL7RERA1,"hl7reraf"
.
          DISPLAY   *P64:24,"pmsrptaf";
          OPEN      PMSRPTA1,"pmsrptaf"
.
          DISPLAY   *P64:24,"pmspx2af";
          OPEN      PMSPX2A1,"pmspx2af"
.
          DISPLAY   *P64:24,"patma1af";
          OPEN      PATMA1A1,"patma1af"
          OPEN      PATMX1A1,"patmx1af"
.
          DISPLAY   *P64:24,"patgsrnf";
          OPEN      PATGSRN2,"patgsrnf"
.
          CALL      TFILENAM
          MOVE      TFILNAME,CFNAME
.
INIT9999  RETURN
+
.****************************************************************************
.*                                OPTN0000             Called by: ML0000    *
.*                        get user options or exit                          *
.*                                                                          *
.*    Returns:  COPTION =       (1)  View All Waiting Records               *
.*                              (2)  View All Processed Records             *
.*                              (3)  View All Errored Messages              *
.*                              (4)  View By Message Id                     *
.*                              (5)  View By Patient U/R Number             *
.*                              (6)  Delete Processed Records               *
.*                              (7)  Delete All Records                     *
.*              EXIT   0 = Valid selection                                  *
.*                     1 = exit selected                                    *
.****************************************************************************
.
OPTN0000  HLINE     *G37,2,57,80
          DISPLAY   *P1:3,*EF,*P1:4,*V2LON,ZERO,*HOFF,". Exit":
                    *P1:5,*V2LON,ONE,*HOFF,". View All Waiting Messages":
                    *P1:6,*V2LON,TWO,*HOFF,". View All Processed Messages":
                    *P1:7,*V2LON,THREE,*HOFF,". View All Errored Messages":
                    *P1:8,*V2LON,FOUR,*HOFF,". View by Message Id":
                    *P1:9,*V2LON,FIVE,*HOFF,". View by U/R Number":
                    *P1:10,*V2LON,SIX,*HOFF,". Delete Processed Messages":
                    *P1:11,*V2LON,SEVEN,*HOFF,". Delete All Messages"
.
OPTN0500  KEYIN     *P1:13,*EL,"Select Option : ":
                    *P17:13,*V2LON,COPTION
.
          COMPARE   ZERO,COPTION                 * exit selected ?
          GOTO      OPTN9910 IF EQUAL            * yes
.
          BRANCH    COPTION,OPTN9100:            * view all waiting records
                            OPTN9200:            * view all processed records
                            OPTN9300:            * view all errored records
                            OPTN9400:            * view by message id
                            OPTN9500:            * view by U/R number
                            OPTN9600:            * delete processed records
                            OPTN9700             * delete all records
.
          BEEP
          GOTO      OPTN0500
.
OPTN9100  DISPLAY   *P57:2,"- All Waiting "
          GOTO      OPTN9900
.
OPTN9200  DISPLAY   *P57:2,"- All Processed "
          GOTO      OPTN9900
.
OPTN9300  DISPLAY   *P57:2,"- All Errored "
          GOTO      OPTN9900
.
OPTN9400  DISPLAY   *P57:2,"- Message Id "
          GOTO      OPTN9900
.
OPTN9500  DISPLAY   *P57:2,"- U/R Number "
          GOTO      OPTN9900
.
OPTN9600  DISPLAY   *P57:2,"- Delete Processed "
          GOTO      OPTN9900
.
OPTN9700  DISPLAY   *P57:2,"- Delete All "
.
OPTN9900  MOVE      ZERO,EXIT
          GOTO      OPTN9999
.
OPTN9910  MOVE      ONE,EXIT
.
OPTN9999  RETURN
+
.*********************************************************************
.*                  KEYA0000                    Called by : VIEW0000 *
.*        Keyin response to question                                 *
.*        Returns : EXIT = 0      Number entered                     *
.*                  EXIT = 1      Exit   entered                     * 
.*                  EXIT = 2      Next   entered                     * 
.*                  EXIT = 3      Prev   entered                     * 
.*                  EXIT = 4      Delete entered                     * 
.*                  EXIT = 5      View   entered                     * 
.*                  EXIT = 6      reFresh entered                    * 
.*                  EXIT = 7      reSet entered                      * 
.*********************************************************************
.
KEYA0000  DISPLAY   *P1:24,*EL,"Select item, e(",*V2LON,ANSX,*HOFF,")it, (":
                    *V2LON,ANSD,*HOFF,")elete, (",*V2LON,ANSV,*HOFF,")iew, re(":
                    *V2LON,ANSF,*HOFF,")resh, re(",*V2LON,ANSS,*HOFF,")et";
          MOVE      FIFTY7,CCOL
          IF        CALLPOS1 = 1 | CALLPOS1 = 2
            DISPLAY   ", (",*V2LON,ANSN,*HOFF,")ext";
            ADD       EIGHT,CCOL
          ENDIF
          IF        CALLPOS1 = 1
            DISPLAY   ", p(",*V2LON,ANSR,*HOFF,")ev.";
            ADD       NINE,CCOL
          ENDIF
          IF        CALLPOS1 = 3
            DISPLAY   ", p(",*V2LON,ANSR,*HOFF,")evious";
            ADD       TEN2,CCOL
          ENDIF
.
          DISPLAY   " :  ";
          ADD       FOUR,CCOL
.
KEYA1000  KEYIN     *PCCOL:24,*V2LON,*JR,DIM2:
                    *PCCOL:24,*DV,DIM2
.
.         Check if down arrow selected and if so move to next record on page
.         or next page (if last record on current page).
.
          IF        @DOWN
             IF       SELCTION < FIELD1
               ADD      ONE,FORM2
               CALL     GREC0000            * next record
               BRANCH   EXIT,KEYA0000       * record not found
               GOTO     KEYA0000
             ELSE
               GOTO     KEYA9200            * next page
             ENDIF
          ENDIF
.
.         Check if up arrow selected and if so move to previous record on page,
.         or last record on previous page (if first record is selection on 
.         current page and this is not the first page).
.
          IF        @UP
             IF       SELCTION > 1
               SUB      ONE,FORM2
               CALL     GREC0000            * next record
               BRANCH   EXIT,KEYA0000       * record not found
               GOTO     KEYA0000
             ELSE
               IF       CPAGENO > 1
                 MOVE     ONE,UPARROW       * set up arrow flag (record 1)
                 GOTO     KEYA9300          * previous page
               ENDIF
             ENDIF
          ENDIF
.
          PACK      DIM2,DIM2,SP2
          UNPACK    DIM2,ANS,ANS
          REP       UPPLOW,ANS
.
          MATCH     ANSD,ANS                * delete selected ?
          IF        @EQUAL
            COMPARE   ZERO,SELCTION         * yes - selection made ?
            GOTO      KEYA9400 IF NOT EQUAL * yes
.
            BEEP
            GOTO      KEYA0000
          ENDIF
.
          MATCH     ANSV,ANS                * view selected ?
          IF        @EQUAL
            COMPARE   ZERO,SELCTION         * yes - selection made ?
            GOTO      KEYA9500 IF NOT EQUAL * yes
.
            BEEP
            GOTO      KEYA0000
          ENDIF
.
          MATCH     ANSX,ANS                * exit selected ?
          GOTO      KEYA9100 IF EQUAL       * yes
.
          MATCH     ANSN,ANS                * next page selected ?
          GOTO      KEYA9200 IF EQUAL       * yes
.
          MATCH     ANSR,ANS                * previous page selected ?
          GOTO      KEYA9300 IF EQUAL       * yes
.
          MATCH     ANSF,ANS                * reFresh page selected ?
          GOTO      KEYA9600 IF EQUAL       * yes
.
          MATCH     ANSS,ANS                * reSet selected ?
          IF        @EQUAL
            COMPARE   ZERO,SELCTION         * yes - selection made ?
            GOTO      KEYA9700 IF NOT EQUAL * yes
.
            BEEP
            GOTO      KEYA0000
          ENDIF
.
          TYPE      DIM2
          GOTO      KEYA5000 IF EQUAL       * a number entered
.
KEYA1500  BEEP
          GOTO      KEYA1000
.
.         number entered directly
.
KEYA5000  MOVE      DIM2,FORM2
.
          COMPARE   FORM2,ZERO              * number < 1 ?
          GOTO      KEYA1500 IF NOT LESS    * yes - invalid
.
          COMPARE   FORM2,FIELD1            * number in range ?
          GOTO      KEYA1500 IF LESS        * no - too high
.
.         set the exit flag
.
          MOVE      ZERO,EXIT               * number selected
          GOTO      KEYA9999
.
KEYA9100  MOVE      ONE,EXIT                * exit
          GOTO      KEYA9999
.
KEYA9200  MOVE      TWO,EXIT                * next
          GOTO      KEYA9999
.
KEYA9300  MOVE      THREE,EXIT              * previous
          GOTO      KEYA9999
.
KEYA9400  CALL      DELQST                  * delete
          BRANCH    CEXIT,KEYA9450:         * Yes
                          KEYA0000:         * No
                          KEYA0000          * Cancel
KEYA9450  MOVE      FOUR,EXIT
          GOTO      KEYA9999
.
KEYA9500  MOVE      FIVE,EXIT               * view
          GOTO      KEYA9999
.
KEYA9600  MOVE      SIX,EXIT                * reFresh
          GOTO      KEYA9999
.
KEYA9700  MOVE      SEVEN,EXIT              * reSet
.
KEYA9999  RETURN
+
.**************************************************************************
.*                               VIEW0000              Called by: ML0000  *
.*           Display all the records on the header file (hl7cisaf)        *
.**************************************************************************
.
VIEW0000  DISPLAY   *P1:24,*EL,"Start Date :"
.
          IF        COPTION <> 1
            MOVE      TWENTY4,CVERT              * set row
            MOVE      TEN4,CCOL                  * set column
            CALL      GDAT0000                   * get starting date
            BRANCH    EXIT,VIEW9999              * nothing input
          ENDIF
.
VIEW0500  IF        COPTION = 1|COPTION = 3
            DISPLAY   *P1:3,*EF,*V2LON,*P11:3,"Created":
                      *ULON,*P1:4,"Item",*P6:4,"   Date   ",*P17:4,"  Time  ":
                      *P26:4,"Type",*P31:4,"     Message Id     "
          ELSE
            IF        COPTION = 5
              DISPLAY   *P1:3,*EF,*V2LON,*P11:3,"Created",*P66:3,"Processed":
                        *ULON,*P1:4,"Itm",*P5:4,"   Date   ",*P16:4,"  Time  ":
                        *P25:4,"Type ",*P31:4," Status  ":
                        *P41:4,"     Message Id     ",*P62:4,"   Date   ":
                        *P73:4,"  Time  "
            ELSE
              DISPLAY   *P1:3,*EF,*V2LON,*P11:3,"Created",*P36:3,"Processed":
                        *ULON,*P1:4,"Item",*P6:4,"   Date   ",*P17:4,"  Time  ":
                        *P26:4,"Type",*P31:4,"   Date   ",*P42:4,"  Time  ":
                        *P51:4,"     Message Id     "
            ENDIF
          ENDIF
.
          MOVE      ZERO,UPARROW                 * Initialise up arrow flag
          MOVE      ZERO,SELCTION                * Initialise item selection
          MOVE      ONE,CPAGENO                  * Initialise page number
          MOVE      FOUR,CVERT                   * Reset line number
          MOVE      ZERO,FIELD1                  * Reset record count
.
.         Position in the table just after the most recent message of that type
.
          LOAD      MESSSTAT,COPTION,ANSR,ANSP,ANSE
          BRANCH    COPTION,VIEW0710:            * all waiting
                            VIEW0720:            * all processed
                            VIEW0740:            * all errored
                            VIEW9999:            * message id
                            VIEW0750:            * U/R number
                            VIEW9999:            * delete processed
                            VIEW9999             * delete all
.
          GOTO      VIEW9999                     * invalid option
.
.         All Received
.
VIEW0710  PACK      KEY37,MESSSTAT,SP30,SP10  
          CALL      RSH7REC2                     * position in file
          GOTO      VIEW1000
.
.         All Processed
.
VIEW0720  PACK      KEY37,MESSSTAT,STRTDATE,TILDA40  
          CALL      RSH7REC2                     * position in file
          GOTO      VIEW1000
.
.         All Errored
.
VIEW0740  PACK      KEY37,MESSSTAT,STRTDATE,TILDA40  
          CALL      RSH7REC2                     * position in file
          GOTO      VIEW1000
.
.         By U/R number
.
VIEW0750  PACK      KEY44,SAVEURNO,STRTDATE,TILDA40  
          CALL      RSH7REC3                     * position in file
.
VIEW1000  IF        COPTION = 1
            CALL      RKH7REC2                   * read next record
          ELSE
            IF        COPTION = 5
              CALL      RPH7REC3                 * read next record
            ELSE
              CALL      RPH7REC2                 * read next record
            ENDIF
          ENDIF
          BRANCH    OVRCD,VIEW5000               * end of file
.
          UNPACK    H7REMTYP,ANS,ANS,ANS,ANS,MESSTYPE   * set message type
.
.         If by U/R, make sure we still have the same patient, otherwise
.         make sure we still have the same status
.
          IF        COPTION = 5
            MATCH     SAVEURNO,H7REURNO          * same U/R still ?
          ELSE
            MATCH     MESSSTAT,H7RESTAT          * same message status ?
          ENDIF
          GOTO      VIEW5000 IF NOT EQUAL        * no - finished
.
.         If this is the first page, and no records have been displayed,
.         then set the selction to this first record
.
          IF        CPAGENO = 1 & SELCTION = 0
            MOVE      ONE,SELCTION
          ENDIF
.
          ADD       ONE,CVERT                    * increment line count
.
          COMPARE   TWENTY3,CVERT                * page full ?
          GOTO      VIEW4000 IF NOT LESS         * yes
.
VIEW3000  ADD       ONE,FIELD1  
.
          UNPACK    H7REDTTM,CCENT,CYEAR,CMON,CDAY,DIM8A
          CALL      PACDATE
          MOVE      CPCDATE,DIM10A               * load creation date
          UNPACK    H7REDTPR,CCENT,CYEAR,CMON,CDAY,DIM8B
          CALL      PACDATE
          MOVE      CPCDATE,DIM10B               * load delivery date
.
.         If this an A31 message, then check if the alternate message id is
.         being used
.
          CALL      GDES0000                     * get message system
.
.         Format the display field
.
          IF        COPTION = 1|COPTION = 3
            PACK      RECDDISP[FIELD1],FIELD1,SP3,DIM10A,SP1:
                      DIM8A,SP2,MESSTYPE,SP1,H7REMESI
          ELSE
            IF        COPTION = 5
              MOVE      H7RESTAT,ANS
              REP       "r1R1e2E2p3P3",ANS
              MOVE      ANS,FORM1
              LOAD      STATDESC,FORM1,STATDESR,STATDESE,STATDESP
.
              MOVE      MESSSYST,ANS
              PACK      RECDDISP[FIELD1],FIELD1,SP2,DIM10A,SP1:
                        DIM8A,SP1,MESSTYPE,HYPHEN,ANS,SP1,STATDESC,SP1,H7REMESI:
                        SP1,DIM10B,SP1,DIM8B
            ELSE
              PACK      RECDDISP[FIELD1],FIELD1,SP3,DIM10A,SP1:
                        DIM8A,SP2,MESSTYPE,SP2,DIM10B,SP1,DIM8B:
                        SP1,H7REMESI
            ENDIF
          ENDIF
.
.         Save current record key and display record
.
          IF        COPTION = 5
            PACK      TEMPKEY3[FIELD1],H7REURNO,H7REDTTM,H7REMESI
          ELSE
            PACK      TEMPKEY1[FIELD1],H7RESTAT,H7REDTTM,H7REMESI
          ENDIF
          DISPLAY   *P1:CVERT,*V2LON,RECDDISP[FIELD1]
          GOTO      VIEW1000
.
.         new page needed - read first record again as this will be the default
.         current (highlighted) record
.
VIEW4000  IF        COPTION = 5
            PACK      SAVEKEY3,H7REURNO,H7REDTTM,H7REMESI
          ELSE
            PACK      SAVEKEY1,H7RESTAT,H7REDTTM,H7REMESI
          ENDIF
          MOVE      ONE,FORM2                    * set first record as current
          CALL      GREC0000                     * record found ?
          BRANCH    EXIT,VIEW9999                * no - shouldn't happen
.
          BRANCH    CPAGENO,VIEW4500             * first page
.
.         in middle pages : Next & First options
.
VIEW4100  MOVE      "1",CALLPOS1                 * set call position
          CALL      KEYA0000                     * keyin response
          BRANCH    EXIT,VIEW9999:               * exit
                         VIEW7000:               * next
                         VIEW8000:               * previous
                         VIEW9000:               * delete
                         VIEW8500:               * view
                         VIEW0500:               * reFresh
                         VIEW9500                * reSet
          GOTO      VIEW6000                     * number entered
.
.         on first page : Next option
.
VIEW4500  MOVE      "2",CALLPOS1                 * set call position
          CALL      KEYA0000                     * keyin response
          BRANCH    EXIT,VIEW9999:               * exit
                         VIEW7000:               * next
                         VIEW5900:               * previous
                         VIEW9000:               * delete
                         VIEW8500:               * view
                         VIEW0500:               * reFresh
                         VIEW9500                * reSet
          GOTO      VIEW6000                     * number entered
.
.         end of data
.
VIEW5000  IF        FIELD1 > 0
            MOVE      ONE,FORM2                  * set first record as current
            CALL      GREC0000                   * record found ?
            BRANCH    EXIT,VIEW9999              * no - shouldn't happen
          ENDIF
.
          BRANCH    CPAGENO,VIEW5500             * first page
.
.         in middle pages : First option
.
VIEW5100  MOVE      "3",CALLPOS1                 * set call position
          CALL      KEYA0000                     * keyin response
          BRANCH    EXIT,VIEW9999:               * exit
                         VIEW5900:               * next
                         VIEW8000:               * prev
                         VIEW9000:               * delete
                         VIEW8500:               * view
                         VIEW0500:               * reFresh
                         VIEW9500                * reSet
          GOTO      VIEW6000                     * number entered
.
.         on first page : No options
.
VIEW5500  MOVE      "4",CALLPOS1                 * set call position
          CALL      KEYA0000                     * keyin response
          BRANCH    EXIT,VIEW9999:               * exit
                         VIEW5900:               * next
                         VIEW5900:               * previous
                         VIEW9000:               * delete
                         VIEW8500:               * view
                         VIEW0500:               * reFresh
                         VIEW9500                * reSet
          GOTO      VIEW6000                     * number entered
.
VIEW5900  BEEP
VIEW5910  BRANCH    CALLPOS1,VIEW4100,VIEW4500,VIEW5100,VIEW5500
.
.         number entered - read selected record
.
VIEW6000  CALL      GREC0000                     * read selected record
          BRANCH    EXIT,VIEW5910                * error on read
          GOTO      VIEW5910                     * record selection ok
.
.         next screen selected
.
VIEW7000  IF        COPTION = 5
            MOVE      SAVEKEY3,KEY44
            CALL      RDH7REC3                 * re read 1st record of next page
          ELSE
            MOVE      SAVEKEY1,KEY37
            CALL      RDH7REC2                 * re read 1st record of next page
          ENDIF
          BRANCH    OVRCD,VIEW0500             * not found - shouldn't happen
.
          MOVE      FIVE,CVERT
          ADD       ONE,CPAGENO
          DISPLAY   *P1:CVERT,*EF
          MOVE      ZERO,FIELD1
          MOVE      ONE,SELCTION
          GOTO      VIEW3000
.
.         previous screen selected
.
VIEW8000  IF        COPTION = 5
            MOVE      TEMPKEY3[1],KEY44
            CALL      RDH7REC3                   * reread first record on screen
          ELSE
            MOVE      TEMPKEY1[1],KEY37
            CALL      RDH7REC2                   * reread first record on screen
          ENDIF
          BRANCH    OVRCD,VIEW0500               * eof
.
          MOVE      ZERO,FORM2                   * initialise count
          WHILE     FORM2 <= 17
            IF        COPTION = 1
              CALL      RPH7REC2                 * read previous record
            ELSE
              IF        COPTION = 5
                CALL      RKH7REC3               * read previous record
              ELSE
                CALL      RKH7REC2               * read previous record
              ENDIF
            ENDIF
            BRANCH    OVRCD,VIEW0500             * eof
.
            IF        COPTION = 5
              MATCH     SAVEURNO,H7REURNO        * same U/R number?
            ELSE
              MATCH     MESSSTAT,H7RESTAT        * same message type?
            ENDIF
            GOTO      VIEW0500 IF NOT EQUAL      * no
.
            ADD       ONE,FORM2                  * increment count
          DO
.
          MOVE      FIVE,CVERT                   * reset line position
          SUB       ONE,CPAGENO                  * decrement page number
          MOVE      ZERO,FIELD1                  * reset record counter
          MOVE      ONE,SELCTION
          DISPLAY   *P1:CVERT,*EF
          GOTO      VIEW3000
.
.         View the details from the header file (hl7recaf)
.
VIEW8500  CALL      VINB0000                     * display details of hl7recaf
          GOTO      VIEW5910
.
.         Delete a message.
.
VIEW9000  CALL      DREC0000
          MOVE      ZERO,DELTFLAG                * set delete flag
.
.         Redisplay the current page
.
VIEW9200  IF        SELCTION = 1
            BRANCH    FIELD1,VIEW8000            * no other records on screen
            IF        COPTION = 5
              IF        DELTFLAG = 0
                MOVE      TEMPKEY3[2],KEY44      * first record deleted
              ELSE
                MOVE      TEMPKEY3[1],KEY44      * first record reset
              ENDIF
            ELSE
              MOVE      TEMPKEY1[2],KEY37        * first record deleted/reset
            ENDIF
          ELSE
            IF        COPTION = 5
              MOVE      TEMPKEY3[1],KEY44        * first rec not deleted/reset
            ELSE
              MOVE      TEMPKEY1[1],KEY37        * first rec not deleted/reset
            ENDIF
          ENDIF
          IF        COPTION = 5
            CALL      RDH7REC3                   * read first record for page
          ELSE
            CALL      RDH7REC2                   * read first record for page
          ENDIF
          BRANCH    OVRCD,VIEW0500               * not found - shouldn't happen
.
          MOVE      FIVE,CVERT                   * reset page variables
          DISPLAY   *P1:CVERT,*EF
          MOVE      ZERO,FIELD1
          MOVE      ONE,SELCTION
          GOTO      VIEW3000                     * redisplay page
.
.         Reset message status according to the current status
.
VIEW9500  CALL      GSET0000                     * status change confirmed ?
          BRANCH    EXIT,VIEW5910                * no - back to prompt
.
          MOVE      ONE,DELTFLAG                 * set delete flag
          GOTO      VIEW9200                     * yes - redisplay page
.
VIEW9999  RETURN
+
.*****************************************************************************
.*                            GSET0000               Called by: GSET0000     *
.*             The reset option has been selected from (V)iew, so            *
.*             get the new status for the selected record                    *
.*   "Received" can only be changed to "Errored" - to stop a message sending *
.*   "Errored" can only be changed to "Received" - to send a skipped message *
.*   "Processed" can only be changed to "Received"- to resend a message      *
.* Returns:    EXIT   0 = Status change confirmed & completed                *
.*                    1 = Status change aborted                              *
.*****************************************************************************
.
GSET0000  IF        COPTION = 5
            MOVE      H7RESTAT,ANS
            REP       "r1R1e2E2p3P3",ANS
            MOVE      ANS,FORM1
            LOAD      STATDESC,FORM1,STATDESE,STATDESR,STATDESR
          ELSE
            LOAD      STATDESC,COPTION,STATDESE,STATDESR,STATDESR
          ENDIF
.
          KEYIN     *P1:24,*EL,"Ok to set status to ",*V2LON,*DV,STATDESC:
                    *HOFF," (",*V2LON,*DV,ANSY,*HOFF,*DV,SLASH,*V2LON:
                    *DV,ANSN,*HOFF,")?":
                    *P38:24,*V2LON,ANS
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSY,ANS                            * "Y" entered ?
          GOTO      GSET1000 IF EQUAL                   * yes
.
          MATCH     ANSN,ANS
          GOTO      GSET9100 IF EQUAL
.
          BEEP
          GOTO      GSET0000
.
.         Ok to continue with resetting status.
.         First, set the new status.
.
GSET1000  IF        COPTION = 5
            LOAD      ANS,FORM1,ANSE,ANSR,ANSR
          ELSE
            LOAD      ANS,COPTION,ANSE,ANSR,ANSR
          ENDIF
.
          IF        COPTION = 5
            UNPACK    TEMPKEY3[SELCTION],DIM24,KEY20
          ELSE
            UNPACK    TEMPKEY1[SELCTION],DIM17,KEY20
          ENDIF
          CALL      RDH7REC1                     * record found using index 1 ?
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Message Id ",*V2LON,KEY20,*HOFF:
                      " not found in hl7recaf(1).  ";
            CALL      HITENTER
            GOTO      GSET9100                   * ignore request
          ENDIF
.
.         If we are resetting a "Errored" record to "Waiting" (Option 4),
.         then if the patient's U/R number is on the U/R Holding table,
.         we need to reset all of this patient's rejected messages.
.         For option 1, read the pmsrptaf record to get the U/R number, 
.         otherwise, for options 2-3, just reset the current record.
.
          IF        COPTION = 5
            BRANCH    FORM1,GSET2000:            * by U/R - received
                            GSET2000:            * by U/R - errored
                            GSET8000             * by U/R - processed
          ELSE
            BRANCH    COPTION,GSET2000,GSET8000,GSET2000
          ENDIF
.
.         Option 1 or 3 - so get the patient's U/R number from pmsqptaf
.
GSET2000  MOVE      H7REMESI,KEY20               * get the patient's U/R number
          CALL      RDPMRPT1                     * pmsqptaf record found ?
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Message Id ",*V2LON,KEY20,*HOFF:
                      " not found in pmsrptaf(1).  ";
            CALL      HITENTER
            GOTO      GSET9100                   * ignore request
          ENDIF
.
.         Reset the status of the current record
.
GSET8000  MOVE      ANS,H7RESTAT                 * load new status
          MOVE      SP20,H7REDTPR
          CALL      UPH7REC1                     * update record status
.
          MOVE      ZERO,EXIT
          GOTO      GSET9999
.
GSET9100  MOVE      ONE,EXIT
.
GSET9999  RETURN
+
.*****************************************************************************
.*                            DELA0000               Called by: ML0000       *
.*             Delete all holding file records                               *
.*****************************************************************************
.
DELA0000  DISPLAY   *P1:16,*EF,*B,*V2LON,"Warning: all records will be deleted"
.
          CALL      DELQST                       * delete ?
          BRANCH    CEXIT,DELA1000:              * Yes
                          DELA9999:              * No
                          DELA9999               * Cancel
.
.         Process record deletion
.
DELA1000  DISPLAY   *P1:24,*EL,"Deleting: ";
          MOVE      ZERO,COUNTR                  * initialise counter
.
DELA1100  MOVE      SP20,KEY20
          CALL      RSH7REC1                     * position at start of file
          CALL      RKH7REC1                     * read next record
          BRANCH    OVRCD,DELA9000               * eof - finished
.
          DISPLAY   *P11:24,*EL,*V2LON,H7REMESI;
          ADD       ONE,COUNTR                   * increment counter
.
          CALL      DREC0000                     * delete record(s)
          GOTO      DELA1100                     * get next record
.
DELA9000  DISPLAY   *P1:24,*EL,*B,"Completed. ",*V2LON,COUNTR,*HOFF," records":
                    " deleted.  ";
          CALL      HITENTER
.
DELA9999  RETURN
+
.*****************************************************************************
.*                            DELP0000               Called by: ML0000       *
.*             Delete processed records prior to a given date                *
.*****************************************************************************
.
DELP0000  DISPLAY   *P1:16,*EF,"Delete Records Prior to :"
          MOVE      TEN6,CVERT                   * set row
          MOVE      TWENTY7,CCOL                 * set column
          CALL      GDAT0000                     * get starting date
          BRANCH    EXIT,DELP9999                * nothing input
.
          CALL      DELQST                       * delete ?
          BRANCH    CEXIT,DELP1000:              * Yes
                          DELP0000:              * No
                          DELP9999               * Cancel
.
.         Process record deletion
.
DELP1000  DISPLAY   *P1:24,*EL,"Deleting: ";
          MOVE      ZERO,COUNTR                  * initialise counter
.
DELP1100  PACK      KEY37,ANSP,STRTDATE,SP30
          CALL      RSH7REC2                     * position for start date
          CALL      RPH7REC2                     * read previous record
          BRANCH    OVRCD,DELP9000               * eof - finished
.
          MATCH     ANSP,H7RESTAT                * delivered status ?
          GOTO      DELP9000 IF NOT EQUAL        * no - finished
.
          DISPLAY   *P11:24,*EL,*V2LON,H7REMESI;
          ADD       ONE,COUNTR                   * increment counter
.
          CALL      DREC0000                     * delete record(s)
          GOTO      DELP1100                     * get next record
.
DELP9000  DISPLAY   *P1:24,*EL,*B,"Completed. ",*V2LON,COUNTR,*HOFF," records":
                    " deleted.  ";
          CALL      HITENTER
.
DELP9999  RETURN
+
.*****************************************************************************
.*                            DREC0000               Called by: VIEW0000     *
.*          Delete the records associated with a single message id           *
.*****************************************************************************
.
DREC0000  CALL      DRPT0000                     * delete PMI detail record
          CALL      DRER0000                     * delete error detail record
.
.         Delete holding header record
.
          MOVE      H7REMESI,KEY20
          CALL      DEH7REC1                     * delete record
.
DREC9999  RETURN
+
.*****************************************************************************
.*                            DRPT0000               Called by: DREC0000     *
.*             Delete record from pmsrptaf                                   *
.*****************************************************************************
.
DRPT0000    MOVE      H7REMESI,KEY20
            CALL      RDPMRPT1
            IF        OVRCD = 0
              MOVE      PURNO,DIM8               * save U/R number
              MOVE      PMRPMESI,KEY20
              CALL      DEPMRPT1
            ENDIF
.
DRPT9999  RETURN
+
.*****************************************************************************
.*                            DRER0000               Called by: DREC0000     *
.*             Delete records from hl7reraf                                  *
.*****************************************************************************
.
DRER0000    PACK      KEY23,H7REMESI,SP30
            CALL      RSH7RER1                   * position on first record
            CALL      RKH7RER1                   * read next record
            BRANCH    OVRCD,DRER9999             * eof - finished
.
            COMPARE   H7REMESI,H7RRMESI          * same message id still ?
            GOTO      DRER9999 IF NOT EQUAL      * no - finished deleting
.
            PACK      KEY23,H7RRMESI,H7RRSCNT
            CALL      DEH7RER1                   * delete record
            GOTO      DRER0000                   * get next record
.
DRER9999  RETURN
+
.*****************************************************************************
.*                             VINB0000                Called by: VIEW0000   *
.*        Display the details of the holding header file hl7recaf            *
.*****************************************************************************
.
VINB0000  CALL      GETSCR00                     * save current screen
.
VINB1000  BOX       16,1,4,80,17
          BOXCLR    2,5,79,16
          DISPLAY   *P26:4,*HON," Holding File (hl7recaf) Details "
.
          MOVE      H7RESTAT,ANS
          REP       "r1R1e2E2p3P3",ANS
          MOVE      ANS,FORM1
          LOAD      STATDESC,FORM1,STATDESR,STATDESE,STATDESP
.
          UNPACK    H7REDTTM,DATEVAR,TIMEVAR
          UNPACK    DATEVAR,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          UNPACK    H7REMTYP,ANS,ANS,ANS,ANS,MESSTYPE
          CALL      GDES0000                     * get message description
.
          DISPLAY   *P2:5,"Message Id    : ",*V2LON,H7REMESI,*HOFF:
                    *P2:6,"Message Status: ",*V2LON,H7RESTAT,*HOFF:
                    SP3,STATDESC:
                    *P2:7,"Message Date  : ",*V2LON,CPCDATE,*HOFF:
                    *P2:8,"Message Time  : ",*V2LON,TIMEVAR,*HOFF:
                    *P2:9,"Message Type  : ",*V2LON,MESSTYPE,*HOFF:
                    SP5,MESSDESC
.
          UNPACK    H7REDTPR,DATEVAR,TIMEVAR
          UNPACK    DATEVAR,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
.
          DISPLAY   *P2:10,"Processed Date : ",*V2LON,CPCDATE,*HOFF:
                    *P2:11,"Processed Time : ",*V2LON,TIMEVAR,*HOFF:
                    *P2:12,"U/R Number    : ",*V2LON,H7REURNO,*HOFF
.
.         Create the temporary word processor file, making sure that if
.         it already exists that is is deleted before being re-created
.
VINB1500  PREP      TEMPFILE,CFNAME              * create the temp file
          CLOSE     TEMPFILE,DELETE              * delete in case left over
          PREP      TEMPFILE,CFNAME              * create the temp file
.
          CALL      KEYB0000                     * get user option
          BRANCH    EXIT,VINB9000:               * exit selected
                         VINB2000                * Errors selected
.
.         PMI selected
.
          CALL      LODP0000                     * load PMI details
          BRANCH    EXIT,VINB1900                * data not found - finish
          CALL      WPRC0000                     * display the word processor
VINB1900  CALL      KTMP0000                     * kill temp file
          GOTO      VINB1500
.
.         Visit selected
.
VINB2000  CALL      LODE0000                     * load error details
          GOTO      VINB1500
.
VINB9000  CALL      PUTSCR00                     * restore original view screen
.
VINB9999  RETURN
+
.*****************************************************************************
.*                        KEYB0000                     Called by: VINB0000   *
.*                  Get user to select option                                *
.* Requires:   H7REMETP - message type                                       *
.* Returns:    EXIT  0 = PMI selected                                        *
.*                   1 = exit selected                                       *
.*                   2 = Errors  selected                                    *
.*****************************************************************************
.
KEYB0000  DISPLAY   *P1:24,*EL,"e(",*V2LON,ANSX,*HOFF,")it":
                    ", (",*V2LON,ANSP,*HOFF,")MI Data":
                    ", (",*V2LON,ANSE,*HOFF,")rror data";
          MOVE      THIRTY3,CCOL
.
          KEYIN     *PCCOL:24," : ",*V2LON,ANS;
.
          PACK      ANS,ANS,SP1
          REP       UPPLOW,ANS
.
          MATCH     ANSX,ANS                     * exit selected ?
          GOTO      KEYB9100 IF EQUAL            * yes
.
          MATCH     ANSP,ANS                     * PMI selected ?
          GOTO      KEYB9000 IF EQUAL            * yes
.
          MATCH     ANSE,ANS                     * errors selected ?
          GOTO      KEYB9200 IF EQUAL            * yes
.
          BEEP                                   * invalid input
          GOTO      KEYB0000
.
KEYB9000  MOVE      ZERO,EXIT                    * PMI selected
          GOTO      KEYB9999
.
KEYB9100  MOVE      ONE,EXIT                     * exit selected
          GOTO      KEYB9999
.
KEYB9200  MOVE      TWO,EXIT                     * Errors selected
.
KEYB9999  RETURN
+
.*****************************************************************************
.*                        GDES0000                     Called by: VINB0000   *
.*                   Get the message description                             *
.* Requires:  MESSTYPE    - 3 character message type                         *
.* Returns:   MESSDESC    - Message description                              *
.*            MESSSYST    - 3 character system identifier                    *
.*                              PMI - PMI                                    *
.*                              INP - Inpatient                              *
.*                              OUT - Outpatient                             *
.*                              EMR - Emergency                              *
.*                              MAS - Master File                            *
.*****************************************************************************
.
GDES0000  MOVE      SP30,MESSDESC
          MOVE      SP3,MESSSYST
.
.         Register Patient (PMI)
.
          MATCH     "A28",MESSTYPE
          IF        @EQUAL
            MOVE      MESSPA28,MESSDESC
            MOVE      "PMI",MESSSYST
            GOTO      GDES9999
          ENDIF
.
.         Update Patient (PMI)
.
          MATCH     "A31",MESSTYPE
          IF        @EQUAL
            MOVE      MESSPA31,MESSDESC
            MOVE      "PMI",MESSSYST
            GOTO      GDES9999
          ENDIF
.
GDES9999  RETURN
+
.*****************************************************************************
.*                        GREC0000                     Called by: KEYA0000   *
.*                   Get the selected record                      VIEW0000   *
.* Requires:  SELCTION - Item number selected                                *
.* Returns:   EXIT  - 0 = record found                                       *
.*                    1 = error reading record                               *
.*****************************************************************************
.
.         If the up arrow is set, then the up arrow key was pressed while the
.         first record on the current screen was selected.  We now have to
.         redisplay the previous screen, and select (highlight) the last record
.
GREC0000  IF        UPARROW = 1
            MOVE      FIELD1,FORM2               * set last record as selected
            MOVE      ZERO,UPARROW               * turn off up arrow flag
          ENDIF
.
          ASSIGN    (SELCTION+4),EVERT
          DISPLAY   *P1:EVERT,*V2LON,RECDDISP[SELCTION]
          ASSIGN    (FORM2+4),EVERT
          DISPLAY   *P1:EVERT,*HON,RECDDISP[FORM2]
          MOVE      FORM2,SELCTION
.
          IF        COPTION = 5
            MOVE      TEMPKEY3[SELCTION],KEY44
            CALL      RDH7REC3                   * reread first record on screen
          ELSE
            MOVE      TEMPKEY1[SELCTION],KEY37
            CALL      RDH7REC2                   * reread first record on screen
          ENDIF
          BRANCH    OVRCD,GREC9100               * not found - shouldn't happen
.
          MOVE      ZERO,EXIT
          GOTO      GREC9999
.
GREC9100  DISPLAY   *P1:24,*EL,*B,"Error reading item ",*V2LON,SELCTION,*HOFF:
                    ".  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
GREC9999  RETURN
+
.*****************************************************************************
.*                        GDAT0000                     Called by: VIEW0000   *
.*                Get user selected date                          DELP0000   *
.* Requires:  CVERT - keyin row                                              *
.*            CCOL  - keyin column                                           *
.* Returns:   STRTDATE = starting date                                       *
.*            EXIT - 0 = Valid date entered                                  *
.*                   1 = No date entered                                     *
.*****************************************************************************
.
GDAT0000  CALL      IBACLOCK                     * get current date (default)
          MOVE      CCC,CCENT
          MOVE      CYY,CYEAR
          MOVE      CMM,CMON
          MOVE      CDD,CDAY
          MOVE      ONE,CCENTRY
          MOVE      ONE,CCANLDTE
          MOVE      ONE,CDEFDTE
          MOVE      ZERO,CHIGHLT
          CALL      KEYDATE
          BRANCH    OVRCD,GDAT9100
.
          PACK      STRTDATE,CCENT,CYEAR,CMON,CDAY
          REP       " 0",STRTDATE
.
          MOVE      ZERO,EXIT
          GOTO      GDAT9999
.
GDAT9100  MOVE      ONE,EXIT
.
GDAT9999  RETURN
+
.*****************************************************************************
.*                  FRMT0000                           Called by : LODE0000  *
.*        Format the line display details                          LODO0000  *
.* Requires: FIELDNAM - Database field name                        LODP0000  *
.*           CPATTEXT - Field caption                              LODE0000  *
.*           CODETYPE - 0 = Non-coded field                                  *
.*                      1 = Category Code                                    *
.*                      2 = Doctor Code                                      *
.*                      3 = HCP Code                                         *
.*           CODECATG - Category for Category Coded Fields                   *
.* Returns:  DIM78 - formatted display line                                  *
.* Note:  Maximum field displayed is 50 characters (DIM50)                   *
.*****************************************************************************
.
FRMT0000  PACK      FIELDTXT,SP1,LBRACK,FIELDNAM,RBRACK,COLON,SP1
          MOVELPTR  FIELDTXT,FLLENGTH            * get length of field name
          MOVELPTR  CAPTTEXT,CPLENGTH            * get length of caption
.
.         Calculate how many dots (".") to display between the field caption
.         and the field name
.
          ASSIGN    (FORTY5-FLLENGTH-CPLENGTH),DOTLNGTH
.
          MOVE      CAPTTEXT,DIM78
          ENDSET    DIM78
          WHILE     DOTLNGTH > 0
            APPEND    DOT,DIM78
            SUB       ONE,DOTLNGTH
          DO
.
.         Add the field name and the actual data on to the end of the line.
.         Check the length of the data to see if it is > 33 characters.  If
.         it is, then we will need to put this on a new line to fit
.         the data field on the screen.  Position the data field so that the
.         data is right justified.
.
          APPEND    FIELDTXT,DIM78
          MOVELPTR  DIM50,DATLNGTH
          IF        DATLNGTH > 33
            CALL      WLIN0000                   * write the data line
.
.           Fill start of new data line with blanks to right justify
.
            ASSIGN    (SEVENTY8-DATLNGTH),SPACENUM
            CLEAR     DIM78
            ENDSET    DIM78
            MOVE      ZERO,SPACECNT
            WHILE     SPACECNT < SPACENUM
              ADD       ONE,SPACECNT
              APPEND    SP1,DIM78
            DO
          ENDIF
          APPEND    DIM50,DIM78
.
          BRANCH    CODETYPE,FRMT1000:           * category code
                             FRMT2000:           * doctor code
                             FRMT2000            * HCP code
.
          GOTO      FRMT9000
.
.         This is a category/codes field so if a code is present, get the
.         corresponding description and append to the display
.
FRMT1000  MATCH     SP3,DIM50
          IF        !@EQUAL
            PACK      KEY5,CODECATG,DIM50
            CALL      RDCODE1
            IF        OVRCD = 1
              MOVE      "Unknown Code",TDESC
            ENDIF
            APPEND    SP5,DIM78
            APPEND    TDESC,DIM78
          ENDIF
          GOTO      FRMT9000
.
.         This is a doctor code field so if a code is present, get the
.         corresponding description and append to the display
.
FRMT2000  MATCH     SP6,DIM50
          IF        !@EQUAL
            MOVE      DIM50,KEY6
            CALL      RDDOCT1
            IF        OVRCD = 1
              MOVE      "Unknown Code",PACFNAME
            ELSE
              MOVE      DSNAME,PACSNAME
              MOVE      DGNAME,PACGNAME
              MOVE      DTITL,PACTITLE
              MOVE      ONE,PACFRMT
              CALL      PACNAME
            ENDIF
            APPEND    SP2,DIM78
            APPEND    PACFNAME,DIM78
          ENDIF
          GOTO      FRMT9000
.
.         This is a HCP code field so if a code is present, get the
.         corresponding description and append to the display
.
FRMT3000  MATCH     SP6,DIM50
          IF        !@EQUAL
            MOVE      DIM50,KEY10
            CALL      RDPMHCP1
            IF        OVRCD = 1
              MOVE      "Unknown Code",PACFNAME
            ELSE
              MOVE      PMHCSNAM,PACSNAME
              MOVE      PMHCGNAM,PACGNAME
              MOVE      PMHCTITL,PACTITLE
              MOVE      ONE,PACFRMT
              CALL      PACNAME
            ENDIF
            APPEND    SP2,DIM78
            APPEND    PACFNAME,DIM78
          ENDIF
          GOTO      FRMT9000
.
FRMT9000  CALL      WLIN0000                     * write the data line
.
FRMT9999  RETURN
+
.*****************************************************************************
.*                  LODE0000                           Called by : VINB0000  *
.*        Load the Error details                                             *
.*****************************************************************************
.
.         Read the Error records and display to the screen
.
LODE0000  MOVE      ZERO,HLEF
          CALL      GETSCR00
.
          DISPLAY   *P1:3,*EF,*ULON,*V2LON,*P1:4,"Item",*P6:4,"Code":
                    *P11:4,"Description",SP30,SP20,SP9
          MOVE      ONE,ERPAGENO
          MOVE      FOUR,EVERT                   * Reset line number
          MOVE      ZERO,FIELD2                  * Reset record count
.
          PACK      KEY23,H7REMESI,SP30
          CALL      RSH7RER1                     * position on first record
LODE1000  CALL      RKH7RER1                     * read next record
          BRANCH    OVRCD,LODE5000               * eof - error
.
          COMPARE   H7REMESI,H7RRMESI            * same message id still ?
          GOTO      LODE5000 IF NOT EQUAL        * no - error
.
.         Record found, so display details
.
          ADD       ONE,EVERT                    * increment line count
.
          COMPARE   TWENTY3,EVERT                * page full ?
          GOTO      LODE4000 IF NOT LESS         * yes
.
LODE3000  ADD       ONE,FIELD2
          DISPLAY   *P1:EVERT,*V2LON,H7RRSCNT,*HOFF,*P6:EVERT,H7RRCODE:
                    *P11:EVERT,H7RRDESC
          PACK      TMPKEYER[FIELD2],H7RRMESI,H7RRSCNT
          GOTO      LODE1000
.
.         new page needed 
.
LODE4000  BRANCH    ERPAGENO,LODE4500
.
.         in middle pages : Next & First options
.
LODE4100  MOVE      "1",CALLPOS2                 * set call position
          CALL      KEYC0000                     * keyin response
          BRANCH    EXIT,LODE9000:               * exit
                         LODE7000:               * next
                         LODE8000                * previous
.
.         on first page : Next option
.
LODE4500  MOVE      "2",CALLPOS2                 * set call position
          CALL      KEYC0000                     * keyin response
          BRANCH    EXIT,LODE9000:               * exit
                         LODE7000:               * next
                         LODE5900                * previous
.
.         end of data
.
LODE5000  BRANCH    ERPAGENO,LODE5500
.
.         in middle pages : First option
.
LODE5100  MOVE      "3",CALLPOS2                 * set call position
          CALL      KEYC0000                     * keyin response
          BRANCH    EXIT,LODE9000:               * exit
                         LODE5900:               * next
                         LODE8000                * prev
.
.         on first page : No options
.
LODE5500  MOVE      "4",CALLPOS2                 * set call position
          CALL      KEYC0000                     * keyin response
          BRANCH    EXIT,LODE9000:               * exit
                         LODE5900:               * next
                         LODE5900                * previous
.
LODE5900  BEEP
LODE5910  BRANCH    CALLPOS2,LODE4100,LODE4500,LODE5100,LODE5500
.
.         number entered
.
LODE6000  MOVE      TMPKEYER[FORM2],KEY23
          CALL      RDH7RER1
          BRANCH    OVRCD,LODE5900
.
.         next screen selected
.
LODE7000  MOVE      EIGHT,EVERT
          ADD       ONE,ERPAGENO
          DISPLAY   *P1:EVERT,*EF
          MOVE      ZERO,FIELD2
          GOTO      LODE3000
.
.         previous screen selected
.
LODE8000  MOVE      TMPKEYER[1],KEY23
          CALL      RDH7RER1                     * reread first record on screen
          MOVE      ZERO,FORM2                   * initialise count
          WHILE     FORM2 <= 17
            CALL      RPH7RER1                   * read previous record
            BRANCH    OVRCD,LODE0000
.
            COMPARE   H7REMESI,H7RRMESI          * same message id still ?
            GOTO      LODE0000 IF NOT EQUAL      * no - error
.
            ADD       ONE,FORM2                  * increment count
          DO
.
          MOVE      EIGHT,EVERT                  * reset line position
          SUB       ONE,ERPAGENO                 * decrement page number
          MOVE      ZERO,FIELD2                  * reset record counter
          DISPLAY   *P1:EVERT,*EF
          GOTO      LODE3000
.
LODE9000  CALL      PUTSCR00
.
LODE9999  RETURN
+
.*********************************************************************
.*                  KEYC0000                    Called by : LODE0000 *
.*        Keyin response to question                                 *
.*        Returns : EXIT = 1      Exit   entered                     * 
.*                  EXIT = 2      Next   entered                     * 
.*                  EXIT = 3      Prev   entered                     * 
.*********************************************************************
.
KEYC0000  DISPLAY   *P1:24,*EL,"e(",*V2LON,ANSX,*HOFF,")it";
          MOVE      SIX,CCOL
          IF        CALLPOS2 = 1 | CALLPOS2 = 2
            DISPLAY   ", (",*V2LON,ANSN,*HOFF,")ext";
            ADD       EIGHT,CCOL
          ENDIF
          IF        CALLPOS2 = 1 | CALLPOS2 = 3
            DISPLAY   ", p(",*V2LON,ANSR,*HOFF,")evious";
            ADD       TEN2,CCOL
          ENDIF
.
          DISPLAY   " :  ";
          ADD       FOUR,CCOL
.
KEYC1000  KEYIN     *PCCOL:24,*V2LON,*JR,DIM2:
                    *PCCOL:24,*DV,DIM2
          PACK      DIM2,DIM2,SP2
          UNPACK    DIM2,ANS,ANS
          REP       UPPLOW,ANS
.
          MATCH     ANSX,ANS                * exit selected ?
          GOTO      KEYC9100 IF EQUAL       * yes
.
          MATCH     ANSN,ANS                * next page selected ?
          GOTO      KEYC9200 IF EQUAL       * yes
.
          MATCH     ANSR,ANS                * previous page selected ?
          GOTO      KEYC9300 IF EQUAL       * yes
.
KEYC1500  BEEP
          GOTO      KEYC1000
.
KEYC9100  MOVE      ONE,EXIT                * exit
          GOTO      KEYC9999
.
KEYC9200  MOVE      TWO,EXIT                * next
          GOTO      KEYC9999
.
KEYC9300  MOVE      THREE,EXIT              * previous
          GOTO      KEYC9999
.
KEYC9999  RETURN
+
.*****************************************************************************
.*                  LODP0000                           Called by : VINB0000  *
.*        Load the PMI details into the temporary file                       *
.*****************************************************************************
.
.         Read the PMI holding file data
.
LODP0000  MOVE      H7REMESI,KEY20
          CALL      RDPMRPT1                     * record found ?
          BRANCH    OVRCD,LODP9500               * no - error
.
          MOVE      "PMI Data",DIM78
          RESET     DIM78
          PACK      DIM78,DIM78,SP80
          CALL      WLIN0000                     * write the data line
.
          MOVE      SP80,DIM78
          CALL      WLIN0000                     * write the data line
.
          MOVE      "U/R No",CAPTTEXT
          MOVE      "pmrpurno",FIELDNAM
          MOVE      PMRPURNO,DIM50
          MOVE      ZERO,CODETYPE
          CALL      FRMT0000
.
          MOVE      "Title",CAPTTEXT
          MOVE      "pmrptitl",FIELDNAM
          MOVE      PMRPTITL,DIM50
          MOVE      ZERO,CODETYPE
          CALL      FRMT0000
.
          MOVE      "Surname",CAPTTEXT
          MOVE      "pmrpsnam",FIELDNAM
          MOVE      PMRPSNAM,DIM50
          MOVE      ZERO,CODETYPE
          CALL      FRMT0000
.
          MOVE      "Given Name",CAPTTEXT
          MOVE      "pmrpgnam",FIELDNAM
          MOVE      PMRPGNAM,DIM50
          MOVE      ZERO,CODETYPE
          CALL      FRMT0000
.
          MOVE      "Address Line 1",CAPTTEXT
          MOVE      "pmrpadd1",FIELDNAM
          MOVE      PMRPADD1,DIM50
          MOVE      ZERO,CODETYPE
          CALL      FRMT0000
.
          MOVE      "Address Line 2",CAPTTEXT
          MOVE      "pmrpadd2",FIELDNAM
          MOVE      PMRPADD2,DIM50
          MOVE      ZERO,CODETYPE
          CALL      FRMT0000
.
          MOVE      "Address Line 2",CAPTTEXT
          MOVE      "pmrpadd3",FIELDNAM
          MOVE      PMRPADD3,DIM50
          MOVE      ZERO,CODETYPE
          CALL      FRMT0000
.
          MOVE      "Address Line 4",CAPTTEXT
          MOVE      "pmrpadd4",FIELDNAM
          MOVE      PMRPADD4,DIM50
          MOVE      ZERO,CODETYPE
          CALL      FRMT0000
.
          MOVE      "Postcode",CAPTTEXT
          MOVE      "pmrppost",FIELDNAM
          MOVE      PMRPPOST,DIM50
          MOVE      ZERO,CODETYPE
          CALL      FRMT0000
.
          MOVE      "Home Telephone",CAPTTEXT
          MOVE      "pmrptelp",FIELDNAM
          MOVE      PMRPTELP,DIM50
          MOVE      ZERO,CODETYPE
          CALL      FRMT0000
.
          MOVE      "Bus. Telephone",CAPTTEXT
          MOVE      "pmrptelb",FIELDNAM
          MOVE      PMRPTELB,DIM50
          MOVE      ZERO,CODETYPE
          CALL      FRMT0000
.
          MOVE      PMRPPSEX,ANS
          REP       "M1F2I3U4R5",ANS
          MOVE      ANS,FORM1
          LOAD      PSEXDESC,FORM1,PSEXMALE,PSEXFEML,PSEXINDT,PSEXUNKN,PSEXINTR
          MOVE      "Sex",CAPTTEXT
          MOVE      "pmrppsex",FIELDNAM
          MOVE      PSEXDESC,DIM50
          MOVE      ZERO,CODETYPE
          CALL      FRMT0000
.
          UNPACK    PMRPPDOB,CCENT,CYEAR,CMON,CDAY
          CALL      PACDATE
          MOVE      "Date of Birth",CAPTTEXT
          MOVE      "pmrppdob",FIELDNAM
          MOVE      CPCDATE,DIM50
          MOVE      ZERO,CODETYPE
          CALL      FRMT0000
.
          MOVE      "Medicare Number",CAPTTEXT
          MOVE      "pmrpmedi",FIELDNAM
          MOVE      PMRPMEDI,DIM50
          MOVE      ZERO,CODETYPE
          CALL      FRMT0000
.
          MOVE      DNO,DIM3
          MATCH     ANSY,PMRPCEAS
          IF        @EQUAL
            MOVE      DYES,DIM3
          ENDIF
          MOVE      "Deceased",CAPTTEXT
          MOVE      "pmrpceas",FIELDNAM
          MOVE      DIM3,DIM50
          MOVE      ZERO,CODETYPE
          CALL      FRMT0000
.
          MOVE      SP10,CPCDATE
          MATCH     SP8,PMRPDOFD
          IF        !@EQUAL
            UNPACK    PMRPDOFD,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
          ENDIF
          MOVE      "Date of Death",CAPTTEXT
          MOVE      "pmrpdofd",FIELDNAM
          MOVE      CPCDATE,DIM50
          MOVE      ZERO,CODETYPE
          CALL      FRMT0000
.
          MOVE      "Alternate ID",CAPTTEXT
          MOVE      "pmrpalid",FIELDNAM
          MOVE      PMRPALID,DIM50
          MOVE      ZERO,CODETYPE
          CALL      FRMT0000
.
          MOVE      "Mobile Phone Number",CAPTTEXT
          MOVE      "pmrpmobl",FIELDNAM
          MOVE      PMRPMOBL,DIM50
          MOVE      ZERO,CODETYPE
          CALL      FRMT0000
.
          MOVE      "WEB User ID",CAPTTEXT
          MOVE      "pmrpusid",FIELDNAM
          MOVE      PMRPUSID,DIM50
          MOVE      ZERO,CODETYPE
          CALL      FRMT0000
.
          MOVE      SP10,CPCDATE
          MATCH     SP8,PMRPEXPD
          IF        !@EQUAL
            UNPACK    PMRPEXPD,CCENT,CYEAR,CMON,CDAY
            CALL      PACDATE
          ENDIF
          MOVE      "Referral Expiry Date (CCYYMMDD)",CAPTTEXT
          MOVE      "pmrpexpd",FIELDNAM
          MOVE      CPCDATE,DIM50
          MOVE      ZERO,CODETYPE
          CALL      FRMT0000
.
          MOVE      "Consultant",CAPTTEXT
          MOVE      "pmrpcons",FIELDNAM
          MOVE      PMRPCONS,DIM50
          MOVE      ZERO,CODETYPE
          CALL      FRMT0000
.
          MOVE      "Referring GP",CAPTTEXT
          MOVE      "pmrprfgp",FIELDNAM
          MOVE      PMRPRFGP,DIM50
          MOVE      ZERO,CODETYPE
          CALL      FRMT0000
.
          MOVE      ZERO,EXIT
          GOTO      LODP9999
.
LODP9500  DISPLAY   *P1:24,*EL,*B,"PMI Holding file data not found.  ";
          CALL      HITENTER
          MOVE      ONE,EXIT
.
LODP9999  RETURN
+
.*****************************************************************************
.*                  WLIN0000                           Called by : LODA0000  *
.*        write a data line to the temp file                       LODP0000  *
.*****************************************************************************
.
WLIN0000  RESET     DIM78
          PACK      DIM78,DIM78,SP80             * fill line with spaces
          WRITE     TEMPFILE,SEQ;DIM78           * write the data line
.
WLIN9999  RETURN
+
.*****************************************************************************
.*                  WPRC0000                           Called by : VINB0000  *
.*        Execute the word processor                                         *
.*****************************************************************************
.
WPRC0000  CLOSE     TEMPFILE
          MOVE      SIX,WORDSTAT
          WORD      CFNAME,999,1,6,80,24,WORDSTAT
          MOVE      ZERO,EXIT
.
WPRC9999  RETURN
+
.*****************************************************************************
.*                              KTMP0000              Called by: ML0000      *
.*                         erase temp file                                   *
.*****************************************************************************
.
KTMP0000  PREP      TEMPFILE,CFNAME
          CLOSE     TEMPFILE,DELETE         * Delete the comments temp file
.
KTMP9999  RETURN
+
.*****************************************************************************
.*                              VMES0000              Called by: ML0000      *
.*                   View a single message using message id                  *
.*****************************************************************************
.
VMES0000  KEYIN     *P1:24,*EL,"Message Id :":
                    *P14:24,*V2LON,MESSNUMB
.
          COMPARE   ZERO,MESSNUMB                * anything entered ?
          GOTO      VMES9999 IF EQUAL            * no - finished
.
          MOVE      MESSNUMB,KEY20
          CALL      RDH7REC1                     * message on file ?
          IF        OVRCD = 1
            DISPLAY   *P1:24,*EL,*B,"Message not on file.  ";
            CALL      HITENTER
            GOTO      VMES0000
          ENDIF
.
.         A valid message has been found, so display the details.
.
          CALL      VINB0000
          GOTO      VMES0000
.
VMES9999  RETURN
+
.****************************************************************************
.*                              GPAT0000             Called by: ML0000      *
.*                   Get the patient U/R number                             *
.* Returns: SAVEURNO - U/R number                                           *
.*          EXIT   0 = valid U/R selected                                   *
.*                 1 = nothing input                                        *
.****************************************************************************
.
GPAT0000  HLINE     *G37,2,70,80
          DISPLAY   *P1:4,*EF,"U/R Number     :"
          MOVE      TEN8,CCOL
          MOVE      FOUR,CVERT
          MOVE      ZERO,SRCHSYS
          MOVE      THREE,SRCHOPT
          CALL      KURN                         * get U/R
          BRANCH    EXIT,GPAT9500                * nothing entered
          BRANCH    OVRCD,GPAT9700               * U/R does not exist
.
          MOVE      PURNO,SAVEURNO               * save U/R number
.
          MOVE      PSNAME,PACSNAME              * format name
          MOVE      PGNAME,PACGNAME
          MOVE      PTITL,PACTITLE
          MOVE      ONE,PACFRMT
          CALL      PACNAME
.
          DISPLAY   *P70:2,"(",PURNO,") ":
                    *P30:4,PACFNAME
          MOVE      ZERO,EXIT
          GOTO      GPAT9999
.
GPAT9500  MOVE      ONE,EXIT
          GOTO      GPAT9999
.
GPAT9700  DISPLAY   *P1:24,*EL,*B,"U/R number does not exist.  ";
          CALL      HITENTER
          GOTO      GPAT0000
.
GPAT9999  RETURN
+
.***************************************************************************
+
GETSVAR   RETURN
+
. =========================================================================
.         I/O Includes
. =========================================================================
.
          INC       STD001IO
.
          INC       CALCAGE
          INC       CLPATMAS
          INC       NZHISIIO
          INC       NZIBSRCH
          INC       PATCOMN1
          INC       PATSNDX
          INC       PATSNX2
.
          INC       BOKRC1IO/INC
          INC       HL7RECIO/INC
          INC       HL7RERIO/INC
          INC       NHIMASIO/INC
          INC       OUTPREIO/INC
          INC       PATCODIO/INC
          INC       PATDO1IO/INC
          INC       PATGSRIO/INC
          INC       PATMA1IO/INC
          INC       PATMI1IO/INC
          INC       PMSPX2IO/INC
          INC       PMSVX1IO/INC
          INC       PATPR1IO/INC
          INC       PMSRPTIO/INC
          INC       TFILENAM 
          INC       IBASEQIO/INC 
          INC       WEBERRIO/INC
